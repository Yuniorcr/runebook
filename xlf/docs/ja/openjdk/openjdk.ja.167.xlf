<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="9839a314b20b78f9253b406fd33020bc5eeae4df" translate="yes" xml:space="preserve">
          <source>The smallest reasonable width/height of the component or component group, in pixels.</source>
          <target state="translated">コンポーネントまたはコンポーネントグループの最小の妥当な幅/高さをピクセル単位で指定します。</target>
        </trans-unit>
        <trans-unit id="d29505ba6327a428e6ada6e998db00c29198a04c" translate="yes" xml:space="preserve">
          <source>The smallest valid index for reading, initially 0.</source>
          <target state="translated">読み取りに有効な最小のインデックス、初期値は0です。</target>
        </trans-unit>
        <trans-unit id="cc3e306f7c43f12a0cd31a1e11f56ee1c06bddfe" translate="yes" xml:space="preserve">
          <source>The smallest valid index for reading, initially 0. When &lt;code&gt;seekForwardOnly&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, various methods may throw an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; on an attempt to access data associate with an image having a lower index.</source>
          <target state="translated">読み取りに有効な最小のインデックスで、最初は0です &lt;code&gt;seekForwardOnly&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、インデックスが低い画像に関連付けられているデータにアクセスしようとすると、さまざまなメソッドが &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="47262b7bead58cc0b762a05c504fc361f30be635" translate="yes" xml:space="preserve">
          <source>The snippet has a valid signature and it is visible to other snippets (&lt;a href=&quot;#isDefined()&quot;&gt;&lt;code&gt;isDefined() == true&lt;/code&gt;&lt;/a&gt;) and thus can be referenced in existing or new snippets but the snippet cannot be executed. An &lt;a href=&quot;unresolvedreferenceexception&quot;&gt;&lt;code&gt;UnresolvedReferenceException&lt;/code&gt;&lt;/a&gt; will be thrown on an attempt to execute it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d997d545268301277a9bcb7f89af28ce8cd435a" translate="yes" xml:space="preserve">
          <source>The snippet has an invalid signature or the implementation is otherwise unable to define it. The snippet it is not visible to other snippets (&lt;a href=&quot;#isDefined()&quot;&gt;&lt;code&gt;isDefined() == false&lt;/code&gt;&lt;/a&gt;) and thus cannot be referenced or executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa27fca3d9b651ed6796e1124fea3ceb65daeaff" translate="yes" xml:space="preserve">
          <source>The snippet is a declaration snippet with potentially recoverable unresolved references or other issues (in the context of current &lt;code&gt;JShell&lt;/code&gt; state).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1703051353b6fbbbe0a98a60b44b9f8c07d2cba0" translate="yes" xml:space="preserve">
          <source>The snippet is a declaration snippet with potentially recoverable unresolved references or other issues (in the context of current &lt;code&gt;JShell&lt;/code&gt; state). Only a &lt;a href=&quot;declarationsnippet&quot;&gt;&lt;code&gt;DeclarationSnippet&lt;/code&gt;&lt;/a&gt; can have this &lt;code&gt;Status&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534843ccba930540dd96d6a2040f6b9b01ffc247" translate="yes" xml:space="preserve">
          <source>The snippet is a declaration snippet with potentially recoverable unresolved references or other issues in its body (in the context of current &lt;code&gt;JShell&lt;/code&gt; state).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36fb7e093d326a223b05fe5aa66add48a7b56c11" translate="yes" xml:space="preserve">
          <source>The snippet is a declaration snippet with potentially recoverable unresolved references or other issues in its body (in the context of current &lt;code&gt;JShell&lt;/code&gt; state). Only a &lt;a href=&quot;declarationsnippet&quot;&gt;&lt;code&gt;DeclarationSnippet&lt;/code&gt;&lt;/a&gt; can have this &lt;code&gt;Status&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c076e442c29974123067f6dd99c7c848ad814370" translate="yes" xml:space="preserve">
          <source>The snippet is a valid snippet (in the context of current &lt;code&gt;JShell&lt;/code&gt; state).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01367707922b92652ec5a4fa560e56793668f4c1" translate="yes" xml:space="preserve">
          <source>The snippet is a valid snippet (in the context of current &lt;code&gt;JShell&lt;/code&gt; state). Only snippets with &lt;code&gt;VALID&lt;/code&gt;&lt;code&gt;Status&lt;/code&gt; can be executed (though not all &lt;code&gt;VALID&lt;/code&gt; snippets have executable code).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ed097e60ce8d08b4843b18da7a9b776540867e" translate="yes" xml:space="preserve">
          <source>The snippet is defined (&lt;a href=&quot;#isDefined()&quot;&gt;&lt;code&gt;isDefined() == true&lt;/code&gt;&lt;/a&gt;). If the snippet is a declaration or import (&lt;a href=&quot;snippet.kind#isPersistent()&quot;&gt;&lt;code&gt;Snippet.Kind.isPersistent()&lt;/code&gt;&lt;/a&gt;), it is visible to other snippets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5904cbd3573e566ff1f2085feb79f7f3379232" translate="yes" xml:space="preserve">
          <source>The snippet is inactive because it does not yet exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a62709f6052670bec0af74609b5b12c267407e4" translate="yes" xml:space="preserve">
          <source>The snippet is inactive because it does not yet exist. Used only in &lt;code&gt;SnippetEvent.previousStatus&lt;/code&gt; for new snippets. &lt;a href=&quot;jshell#status(jdk.jshell.Snippet)&quot;&gt;&lt;code&gt;JShell.status(Snippet)&lt;/code&gt;&lt;/a&gt; will never return this &lt;code&gt;Status&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46041cbcdec9e126fee187edfd581d626cd40425" translate="yes" xml:space="preserve">
          <source>The snippet is inactive because it failed compilation on initial evaluation and it is not capable of becoming valid with further changes to the JShell state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff59f9e01cd5b521bc7b8652604d7c50cd0bb4a8" translate="yes" xml:space="preserve">
          <source>The snippet is inactive because it has been replaced by a new snippet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b34acaafe0b4b06404d2342a73ac1d09caae77c" translate="yes" xml:space="preserve">
          <source>The snippet is inactive because it has been replaced by a new snippet. This occurs when the new snippet added with &lt;a href=&quot;jshell#eval(java.lang.String)&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; matches a previous snippet. A &lt;code&gt;TypeDeclSnippet&lt;/code&gt; will match another &lt;code&gt;TypeDeclSnippet&lt;/code&gt; if the names match. For example &lt;code&gt;class X { }&lt;/code&gt; will overwrite &lt;code&gt;class X { int ii; }&lt;/code&gt; or &lt;code&gt;interface X { }&lt;/code&gt;. A &lt;code&gt;MethodSnippet&lt;/code&gt; will match another &lt;code&gt;MethodSnippet&lt;/code&gt; if the names and parameter types match. For example &lt;code&gt;void m(int a) { }&lt;/code&gt; will overwrite &lt;code&gt;int m(int a) { return a+a; }&lt;/code&gt;. A &lt;code&gt;VarSnippet&lt;/code&gt; will match another &lt;code&gt;VarSnippet&lt;/code&gt; if the names match. For example &lt;code&gt;double z;&lt;/code&gt; will overwrite &lt;code&gt;long z = 2L;&lt;/code&gt;. Only a &lt;a href=&quot;persistentsnippet&quot;&gt;&lt;code&gt;PersistentSnippet&lt;/code&gt;&lt;/a&gt; can have this &lt;code&gt;Status&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7fc269089662edb796c5aac76419901a949bde" translate="yes" xml:space="preserve">
          <source>The snippet is inactive because of an explicit call to the &lt;a href=&quot;jshell#drop(jdk.jshell.Snippet)&quot;&gt;&lt;code&gt;JShell.drop(Snippet)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88904de386c079fccf3f30e7b543e31de3c3761f" translate="yes" xml:space="preserve">
          <source>The snippet is not visible to other snippets (&lt;a href=&quot;#isDefined()&quot;&gt;&lt;code&gt;isDefined() == false&lt;/code&gt;&lt;/a&gt;) and thus cannot be referenced or executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd303338297041406f7184b465492cfc79af727e" translate="yes" xml:space="preserve">
          <source>The snippet will not update as dependents change (&lt;a href=&quot;#isActive()&quot;&gt;&lt;code&gt;isActive() == false&lt;/code&gt;&lt;/a&gt;), its &lt;code&gt;Status&lt;/code&gt; will never change again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1f33d6505253b243833ef1169501d91d39c62e" translate="yes" xml:space="preserve">
          <source>The snippet will update as dependents change (&lt;a href=&quot;#isActive()&quot;&gt;&lt;code&gt;isActive() == true&lt;/code&gt;&lt;/a&gt;), its status could become &lt;code&gt;RECOVERABLE_DEFINED&lt;/code&gt;, &lt;code&gt;RECOVERABLE_NOT_DEFINED&lt;/code&gt;, &lt;code&gt;DROPPED&lt;/code&gt;, or &lt;code&gt;OVERWRITTEN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b1eec2fab48735c90d5772f07bce5da4abb91fe" translate="yes" xml:space="preserve">
          <source>The snippet will update as dependents change (&lt;a href=&quot;#isActive()&quot;&gt;&lt;code&gt;isActive() == true&lt;/code&gt;&lt;/a&gt;), its status could become &lt;code&gt;VALID&lt;/code&gt;, &lt;code&gt;RECOVERABLE_DEFINED&lt;/code&gt;, &lt;code&gt;DROPPED&lt;/code&gt;, or &lt;code&gt;OVERWRITTEN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752e212aff543f906f63d7b8eebdaaa65a70207e" translate="yes" xml:space="preserve">
          <source>The snippet will update as dependents change (&lt;a href=&quot;#isActive()&quot;&gt;&lt;code&gt;isActive() == true&lt;/code&gt;&lt;/a&gt;), its status could become &lt;code&gt;VALID&lt;/code&gt;, &lt;code&gt;RECOVERABLE_NOT_DEFINED&lt;/code&gt;, &lt;code&gt;DROPPED&lt;/code&gt;, or &lt;code&gt;OVERWRITTEN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34a10ed96641b907e1eb213e81431652411700a" translate="yes" xml:space="preserve">
          <source>The socket address that the socket is bound to, or &lt;code&gt;null&lt;/code&gt; if the channel's socket is not bound</source>
          <target state="translated">ソケットがバインドされているソケットアドレス、またはチャネルのソケットがバインドされていない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="450eed1463cf271b1ec0cb13231cb29de59dc30a" translate="yes" xml:space="preserve">
          <source>The socket address, or &lt;code&gt;null&lt;/code&gt; if this instance is to be used for sending a message and has been construced without specifying a preferred destination address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004c4bf3ac859ce08e79a8b3e914c8cf5426cb22" translate="yes" xml:space="preserve">
          <source>The socket channel for the new connection, or &lt;code&gt;null&lt;/code&gt; if this channel is in non-blocking mode and no connection is available to be accepted</source>
          <target state="translated">新しい接続のソケットチャネル。このチャネルが非ブロッキングモードであり、接続を受け入れることができない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="72330096ca60d13bfb3300d243f2b2b77e32b537" translate="yes" xml:space="preserve">
          <source>The socket channel returned by this method, if any, will be in blocking mode regardless of the blocking mode of this channel.</source>
          <target state="translated">このメソッドが返すソケットチャンネルがある場合、このチャンネルのブロッキングモードに関係なくブロッキングモードになります。</target>
        </trans-unit>
        <trans-unit id="0916495727f93025eff6a66cbf7b722521e11aa1" translate="yes" xml:space="preserve">
          <source>The socket factories are used when creating sockets for secure https URL connections.</source>
          <target state="translated">ソケットファクトリーは、セキュアなhttps URL接続用のソケットを作成する際に使用します。</target>
        </trans-unit>
        <trans-unit id="ad5881f1dd9699e6809bd7cb33d457d13c6558c9" translate="yes" xml:space="preserve">
          <source>The socket option is read-only and an attempt to set the socket option will throw &lt;code&gt;SocketException&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b1dacea19873875bd394d1604a0e5a5d30890d" translate="yes" xml:space="preserve">
          <source>The sockets returned to the application can be subclasses of java.net.Socket, so that they can directly expose new APIs for features such as compression, security, record marking, statistics collection, or firewall tunneling.</source>
          <target state="translated">アプリケーションに返されるソケットは、java.net.Socketのサブクラスにすることができ、圧縮、セキュリティ、レコードマーキング、統計収集、ファイアウォール・トンネリングなどの機能のための新しいAPIを直接公開することができます。</target>
        </trans-unit>
        <trans-unit id="e877bbc8bfc38843765b0308b8332044317fbf2a" translate="yes" xml:space="preserve">
          <source>The sole constructor.</source>
          <target state="translated">唯一のコンストラクター。</target>
        </trans-unit>
        <trans-unit id="d5d133be61491e0ac1417ab0eba748b3aa345615" translate="yes" xml:space="preserve">
          <source>The sole purpose of these additions is to allow the specification of tables for use in decoding abbreviated streams. The built-in JPEG reader will also accept an ordinary &lt;code&gt;ImageReadParam&lt;/code&gt;, which is sufficient for decoding non-abbreviated streams.</source>
          <target state="translated">これらの追加の唯一の目的は、省略されたストリームのデコードに使用するテーブルを指定できるようにすることです。組み込みのJPEGリーダーは、通常の &lt;code&gt;ImageReadParam&lt;/code&gt; も受け入れます。これは、省略されていないストリームをデコードするのに十分です。</target>
        </trans-unit>
        <trans-unit id="a6c3a336ac8595f00b634d72ee534ceffed81b71" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a Dual-Pivot Quicksort by Vladimir Yaroslavskiy, Jon Bentley and Josh Bloch. This algorithm offers O(n log(n)) performance on all data sets, and is typically faster than traditional (one-pivot) Quicksort implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f89eabf4c727d37647595fc5e3c16a6a2f03dd3" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a Dual-Pivot Quicksort by Vladimir Yaroslavskiy, Jon Bentley, and Joshua Bloch. This algorithm offers O(n log(n)) performance on all data sets, and is typically faster than traditional (one-pivot) Quicksort implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b93c3df541630653c18e1886ceb597afae62a2" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(byte%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(byte%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(byte%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(byte%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。このアルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="784cdcae362dc5581521030a458ea9926ba3223b" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(byte%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(byte%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(byte%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(byte%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="7ff5d937d432a11ea2a201ecc58034dd5441a852" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(char%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(char%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(char%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(char%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。このアルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2e5b7af711e48ed5dc89614218be16edbd43e49c" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(char%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(char%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(char%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(char%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2fddd1310d77bbe7f9dfe3d3aa01ae962a906b1b" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(double%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(double%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(double%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(double%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。このアルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="02eeb024eac83701cb3dab1984790a4264154db6" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(double%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(double%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(double%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(double%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="4f90425a9cfcd671163aa3ba4f42ed3b9d2bc3a4" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(float%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(float%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(float%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(float%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。このアルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="275540cfb6a8e26c5b313f0e391cacb2ad9d0076" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(float%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(float%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(float%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(float%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="94b575be4e8e24c03f457815c4ac16e5b75c882e" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(int%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(int%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(int%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(int%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。このアルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="6ee0d5b8c7e0d8151809c5f26bb13f06d5c6f2a1" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(int%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(int%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(int%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(int%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="5e68b55659f65572149d90497e01649faf00e021" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。このアルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="be292033b578af0efd8258008b00c522a942cd0c" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="4939742092d60ecdc9f5ff5d5d17f5c9210da4ff" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(long%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(long%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(long%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(long%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。このアルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="311db9e136afe682fa40514c417dc4d15f8e69c5" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(long%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(long%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(long%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(long%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="1fde7bfb5ab47c4ddc5c959bc79b4e7eb9f4030c" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(short%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(short%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(short%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(short%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。このアルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="c9a68b6c5882885166c6b5b6d4f8f9f68a7f939b" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;#sort(short%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;#sort(short%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列並べ替えマージであり、サブ配列自体が並べ替えられてからマージされます。サブ配列の長さが最&lt;a href=&quot;#sort(short%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度に達すると、適切なArrays.sortメソッドを使用してサブ配列が並べ替えられます。指定された配列の長さが最&lt;a href=&quot;#sort(short%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度よりも短い場合は、適切なArrays.sortメソッドを使用して並べ替えられます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="38844e94f41cc1969fb62e4894696634a14fe20b" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-byte:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-byte:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-byte:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-byte:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="75b2a84749a330a1c0b895e2bdf2312622f71cb8" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-byte:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-byte:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-byte:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-byte:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="20a31ccdaba6cb746cb91c886a84a8c2d7c538b7" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-char:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-char:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-char:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-char:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="48b9a8628a4883f257650b1adf775491c8f08839" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-char:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-char:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-char:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-char:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="d3cac5983cf37dcfe292291f746e0459fd7e8669" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-double:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-double:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-double:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-double:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="08eda0222f2f9308c70c208bbdafe98a9e736807" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-double:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-double:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-double:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-double:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="1b5efb4aa3ea50144cc0394f060b745aadbd838e" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-float:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-float:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-float:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-float:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b9ac2ce61dcea76b147223bff87472496593df2a" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-float:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-float:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-float:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-float:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="ff09cbb5362e1360ac15f00a55f46a71d4e41ca1" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-int:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-int:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-int:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-int:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="edc68fa2b5db74746879cf023d506ffd46c30425" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-int:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-int:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-int:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-int:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="839592e0ded3d9de75771fbf4886b637ea10acea" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-java.lang.Object:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-java.lang.Object:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-java.lang.Object:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-java.lang.Object:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="614e7b8df8741ffaa018e919714cf7473694c642" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-java.lang.Object:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-java.lang.Object:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-java.lang.Object:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-java.lang.Object:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="648b93b50bbd09b1605688594b8660ecbbb90d1b" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-long:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-long:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-long:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-long:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="0247ed33cde4f71d592e6d7daa37c7760b936d47" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-long:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-long:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-long:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-long:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="777d40468912737a83340f22bc67c6f77af71aaf" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-short:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-short:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-short:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-short:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="e41f68150d548775a312ef7c6bad1b753c9c647c" translate="yes" xml:space="preserve">
          <source>The sorting algorithm is a parallel sort-merge that breaks the array into sub-arrays that are themselves sorted and then merged. When the sub-array length reaches a minimum granularity, the sub-array is sorted using the appropriate &lt;a href=&quot;arrays#sort-short:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. If the length of the specified array is less than the minimum granularity, then it is sorted using the appropriate &lt;a href=&quot;arrays#sort-short:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt; method. The algorithm requires a working space no greater than the size of the specified range of the original array. The &lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoin common pool&lt;/code&gt;&lt;/a&gt; is used to execute any parallel tasks.</source>
          <target state="translated">並べ替えアルゴリズムは、配列をサブ配列に分割する並列の並べ替え-マージで、それ自体が並べ替えられてからマージされます。サブ配列の長さが最小単位に達すると、サブ配列は適切な&lt;a href=&quot;arrays#sort-short:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;メソッドを使用してソートされます。指定された配列の長さが最&lt;a href=&quot;arrays#sort-short:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;度より短い場合、適切なArrays.sortメソッドを使用して配列がソートされます。アルゴリズムには、元の配列の指定された範囲のサイズ以下の作業スペースが必要です。&lt;a href=&quot;concurrent/forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoin common pool&lt;/code&gt; &lt;/a&gt;任意の並列タスクを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b4ca5b611518435cd08b1d3ce800c9c8f468a67f" translate="yes" xml:space="preserve">
          <source>The source &lt;code&gt;DocumentView&lt;/code&gt; of which this is an &lt;code&gt;AbstractView&lt;/code&gt;.</source>
          <target state="translated">これが &lt;code&gt;AbstractView&lt;/code&gt; であるソース &lt;code&gt;DocumentView&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55944b789daff6ef5841d9434f11985f49ff23c4" translate="yes" xml:space="preserve">
          <source>The source actions represent the set of actions supported by the source of this transfer, and are represented as some bitwise-OR combination of &lt;code&gt;COPY&lt;/code&gt;, &lt;code&gt;MOVE&lt;/code&gt; and &lt;code&gt;LINK&lt;/code&gt;. You may wish to query this in &lt;code&gt;TransferHandler&lt;/code&gt;'s &lt;code&gt;canImport&lt;/code&gt; method when determining the suitability of a drop or when deciding on a drop action to explicitly choose. To determine if a particular action is supported by the source, bitwise-AND the action with the source drop actions, and then compare the result against the original action. For example:</source>
          <target state="translated">ソースアクションは、この転送のソースによってサポートされるアクションのセットを表し、 &lt;code&gt;COPY&lt;/code&gt; 、 &lt;code&gt;MOVE&lt;/code&gt; 、および &lt;code&gt;LINK&lt;/code&gt; のビット単位のORの組み合わせとして表されます。ドロップの適合性を判断するとき、またはドロップアクションを明示的に選択することを決定するときに、 &lt;code&gt;TransferHandler&lt;/code&gt; の &lt;code&gt;canImport&lt;/code&gt; メソッドでこれを照会することをお勧めします。特定のアクションがソースでサポートされているかどうかを判断するには、アクションとソースドロップアクションをビット単位でANDし、結果を元のアクションと比較します。例えば：</target>
        </trans-unit>
        <trans-unit id="368f0e5364e526b1a62ff1d9e84b032a4799d112" translate="yes" xml:space="preserve">
          <source>The source address if this membership key is source-specific, otherwise &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">このメンバーシップキーが送信元固有の場合は送信元アドレス、それ以外の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49ef1bc740369619f8b5584da49f9c3ff9ac10f5" translate="yes" xml:space="preserve">
          <source>The source and destination must be different.</source>
          <target state="translated">送信元と送信先が異なる必要があります。</target>
        </trans-unit>
        <trans-unit id="1c54b79003a5eb4cba89a06459605f65bd7f13fd" translate="yes" xml:space="preserve">
          <source>The source bean is used as the source of events for the property changes. This source should be used for information purposes only and should not be modified by the PropertyEditor.</source>
          <target state="translated">ソースビーンは、プロパティの変更のためのイベントのソースとして使用されます。このソースは情報提供のみを目的として使用されるべきであり、PropertyEditorによって変更されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="d614f9d4f31f56431b30829db0ada88a1526496a" translate="yes" xml:space="preserve">
          <source>The source cannot be structurally interfered with.</source>
          <target state="translated">ソースは構造的に干渉できません。</target>
        </trans-unit>
        <trans-unit id="61689ca13fa0754b0dac1fef1851f1593b2946cb" translate="yes" xml:space="preserve">
          <source>The source format represents the format of the incoming audio data, which will be converted.</source>
          <target state="translated">ソースフォーマットは、入力されるオーディオデータのフォーマットを表し、変換されます。</target>
        </trans-unit>
        <trans-unit id="46df136cd9cc4668c308b326cb05d7ed6808c192" translate="yes" xml:space="preserve">
          <source>The source increases the likelihood of throwing &lt;code&gt;ConcurrentModificationException&lt;/code&gt; since the window of potential interference is larger.</source>
          <target state="translated">潜在的な干渉のウィンドウが大きいため、ソースは &lt;code&gt;ConcurrentModificationException&lt;/code&gt; をスローする可能性を高めます。</target>
        </trans-unit>
        <trans-unit id="c1f61cf74a08642c4ff7ee4b8bc3cda7829bff8b" translate="yes" xml:space="preserve">
          <source>The source increases the risk of arbitrary, non-deterministic behavior since non-detected interference may occur after construction.</source>
          <target state="translated">建設後に非検出干渉が発生する可能性があるため、ソースは恣意的で非決定論的な行動のリスクを高める。</target>
        </trans-unit>
        <trans-unit id="03565c55ce32575c338f8855e376da1747bff628" translate="yes" xml:space="preserve">
          <source>The source information for a Location is dependent on the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d33500fcd4a667ea73efed98252841199edc27" translate="yes" xml:space="preserve">
          <source>The source is composited over the destination (Porter-Duff Source Over Destination rule).</source>
          <target state="translated">ソースはデスティネーションの上に合成されます(Porter-Duff Source Over Destinationルール)。</target>
        </trans-unit>
        <trans-unit id="dfdd906a9cfc82513a491834d2af899dcb03b222" translate="yes" xml:space="preserve">
          <source>The source is copied to the destination (Porter-Duff Source rule).</source>
          <target state="translated">ソースは宛先にコピーされます(ポーターダフソースルール)。</target>
        </trans-unit>
        <trans-unit id="29c343852025e2139effd2803766c6065e489fe6" translate="yes" xml:space="preserve">
          <source>The source is copied to the destination (Porter-Duff Source rule). The destination is not used as input.</source>
          <target state="translated">ソースは宛先にコピーされます(ポーターダフソースルール)。宛先は入力としては使用されません。</target>
        </trans-unit>
        <trans-unit id="7f5e35322fb74527344b994cfeb8d4a21c655439" translate="yes" xml:space="preserve">
          <source>The source manages concurrent modifications.</source>
          <target state="translated">ソースは同時進行の変更を管理します。</target>
        </trans-unit>
        <trans-unit id="cc3c2e9f00eb13dba6597fe19ebf6cc799eb8981" translate="yes" xml:space="preserve">
          <source>The source may be divided and mapped to different locations within the wrapped source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5d1008eaa1af299fb1410c7693c63aa92311bc" translate="yes" xml:space="preserve">
          <source>The source object is the Relation Service itself.</source>
          <target state="translated">ソースオブジェクトは Relation Service 自体です。</target>
        </trans-unit>
        <trans-unit id="cc9b426ca5912c0c22947a2cdc8350ca098c22e1" translate="yes" xml:space="preserve">
          <source>The source object needing translating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa58c7b11a77f180bde4263ee0c9af48ad826837" translate="yes" xml:space="preserve">
          <source>The source of the event can be retrieved with the method &lt;code&gt;event.getSource&lt;/code&gt;.</source>
          <target state="translated">イベントのソースは、メソッド &lt;code&gt;event.getSource&lt;/code&gt; を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="4b758d7983ddc60e8668a83198491ca7fd663319" translate="yes" xml:space="preserve">
          <source>The source of the event can be retrieved with the method event.getSource.</source>
          <target state="translated">イベントのソースは、event.getSourceメソッドで取得できます。</target>
        </trans-unit>
        <trans-unit id="ba472d8058ce42e7759745b4cd537b6da4c0628f" translate="yes" xml:space="preserve">
          <source>The source of this event is the SSLSocket on which handshaking just completed.</source>
          <target state="translated">このイベントの発生源は、ハンドシェイクが完了したばかりのSSLSocketです。</target>
        </trans-unit>
        <trans-unit id="34b28226ae9b0c9b05be3b2b72d0f78f8a72db57" translate="yes" xml:space="preserve">
          <source>The source of this pattern</source>
          <target state="translated">このパターンの元になったのは</target>
        </trans-unit>
        <trans-unit id="9d040b79148889dda3be3cace827402195b26754" translate="yes" xml:space="preserve">
          <source>The source region of interest specified by this method will be clipped as needed to fit within the source bounds, as well as the destination offsets, width, and height at the time of actual I/O.</source>
          <target state="translated">このメソッドで指定された関心のあるソース領域は、実際のI/O時のデスティネーションのオフセット、幅、高さと同様に、ソースの境界内に収まるように必要に応じて切り取られます。</target>
        </trans-unit>
        <trans-unit id="6c425edd2b72c5bd49ce0000e1e9c0d010d1b680" translate="yes" xml:space="preserve">
          <source>The source region, on &lt;code&gt;null&lt;/code&gt; if none is set.</source>
          <target state="translated">ソース領域。何も設定されていない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79992770a23d8083e338e39d04240948297bfa86" translate="yes" xml:space="preserve">
          <source>The source risks arbitrary, non-deterministic behavior after traversal has commenced since interference is not detected.</source>
          <target state="translated">干渉が検出されないため、トラバーサルが開始された後の恣意的で非決定論的な振る舞いがソースリスクとなります。</target>
        </trans-unit>
        <trans-unit id="3d10c68f89f90c7178d019f1f4c1c12f009d6876" translate="yes" xml:space="preserve">
          <source>The south layout constraint (bottom of container).</source>
          <target state="translated">南側のレイアウト制約(コンテナの底部)。</target>
        </trans-unit>
        <trans-unit id="e68ddcb7c0e62435f6fe1696214e8145cd3b4f3c" translate="yes" xml:space="preserve">
          <source>The south-east-resize cursor type.</source>
          <target state="translated">南東リサイズカーソルタイプです。</target>
        </trans-unit>
        <trans-unit id="73fec64518a4d7b3dec25260b8298e0b9bed5f17" translate="yes" xml:space="preserve">
          <source>The south-resize cursor type.</source>
          <target state="translated">南リサイズカーソルタイプです。</target>
        </trans-unit>
        <trans-unit id="3b088fa20b66361bda186416ad335eb99b17d70b" translate="yes" xml:space="preserve">
          <source>The south-west-resize cursor type.</source>
          <target state="translated">南西リサイズのカーソルタイプです。</target>
        </trans-unit>
        <trans-unit id="b1f69a5894aacc09dd4212a4b7863d5992a5dd30" translate="yes" xml:space="preserve">
          <source>The space between strings.</source>
          <target state="translated">文字列と文字列の間の空間。</target>
        </trans-unit>
        <trans-unit id="7900bed2b0d5a0428294adba3589eaef49b81ef4" translate="yes" xml:space="preserve">
          <source>The space character &quot; &quot; is converted into a plus sign &quot;&lt;code&gt;+&lt;/code&gt;&quot;.</source>
          <target state="translated">スペース文字「」はプラス記号「 &lt;code&gt;+&lt;/code&gt; 」に変換されます。</target>
        </trans-unit>
        <trans-unit id="507149f00d63c959176bee1f4d30e062fc83fdd7" translate="yes" xml:space="preserve">
          <source>The special characters &quot;&lt;code&gt;.&lt;/code&gt;&quot;, &quot;&lt;code&gt;-&lt;/code&gt;&quot;, &quot;&lt;code&gt;*&lt;/code&gt;&quot;, and &quot;&lt;code&gt;_&lt;/code&gt;&quot; remain the same.</source>
          <target state="translated">特殊文字「 &lt;code&gt;.&lt;/code&gt; 」、「 &lt;code&gt;-&lt;/code&gt; 」、「 &lt;code&gt;*&lt;/code&gt; 」、および「 &lt;code&gt;_&lt;/code&gt; 」は変わりません。</target>
        </trans-unit>
        <trans-unit id="554ae3414c670a7436c25a4064ec6ae6a231747b" translate="yes" xml:space="preserve">
          <source>The special method &lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission(java.security.Permission)&lt;/code&gt;&lt;/a&gt; determines whether an access request indicated by a specified permission should be granted or denied. The default implementation calls</source>
          <target state="translated">特別なメソッド&lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission(java.security.Permission)&lt;/code&gt; &lt;/a&gt;は、指定されたアクセス許可によって示されるアクセス要求を許可するか拒否するかを決定します。デフォルトの実装呼び出し</target>
        </trans-unit>
        <trans-unit id="a9d1df01fb5b8d33027995ef22465c9c621f1abe" translate="yes" xml:space="preserve">
          <source>The special method &lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt;&lt;code&gt;checkPermission(java.security.Permission)&lt;/code&gt;&lt;/a&gt; determines whether an access request indicated by a specified permission should be granted or denied. The default implementation calls</source>
          <target state="translated">特別なメソッド&lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt; &lt;code&gt;checkPermission(java.security.Permission)&lt;/code&gt; &lt;/a&gt;は、指定されたアクセス権によって示されるアクセス要求を許可するか拒否するかを決定します。デフォルトの実装呼び出し</target>
        </trans-unit>
        <trans-unit id="0f63e638f0c9b18504ea41e24439a23387628a9a" translate="yes" xml:space="preserve">
          <source>The special strings &lt;a href=&quot;#ERROR&quot;&gt;&lt;code&gt;ERROR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#STRIP&quot;&gt;&lt;code&gt;STRIP&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#PASS&quot;&gt;&lt;code&gt;PASS&lt;/code&gt;&lt;/a&gt; are also allowed, with the same meaning as &lt;a href=&quot;#UNKNOWN_ATTRIBUTE&quot;&gt;&lt;code&gt;UNKNOWN_ATTRIBUTE&lt;/code&gt;&lt;/a&gt;. This provides a way for users to request that specific attributes be refused, stripped, or passed bitwise (with no class compression).</source>
          <target state="translated">&lt;a href=&quot;#UNKNOWN_ATTRIBUTE&quot;&gt; &lt;code&gt;UNKNOWN_ATTRIBUTE&lt;/code&gt; &lt;/a&gt;と同じ意味で、特別な文字列&lt;a href=&quot;#ERROR&quot;&gt; &lt;code&gt;ERROR&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#STRIP&quot;&gt; &lt;code&gt;STRIP&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#PASS&quot;&gt; &lt;code&gt;PASS&lt;/code&gt; &lt;/a&gt;も許可されます。これにより、ユーザーは特定の属性を拒否、削除、またはビット単位で渡すように要求できます（クラス圧縮なし）。</target>
        </trans-unit>
        <trans-unit id="32010eba7b4259d4453391d1922bfa0e43808b88" translate="yes" xml:space="preserve">
          <source>The special strings &lt;a href=&quot;pack200.packer#ERROR&quot;&gt;&lt;code&gt;ERROR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pack200.packer#STRIP&quot;&gt;&lt;code&gt;STRIP&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;pack200.packer#PASS&quot;&gt;&lt;code&gt;PASS&lt;/code&gt;&lt;/a&gt; are also allowed, with the same meaning as &lt;a href=&quot;pack200.packer#UNKNOWN_ATTRIBUTE&quot;&gt;&lt;code&gt;UNKNOWN_ATTRIBUTE&lt;/code&gt;&lt;/a&gt;. This provides a way for users to request that specific attributes be refused, stripped, or passed bitwise (with no class compression).</source>
          <target state="translated">&lt;a href=&quot;pack200.packer#UNKNOWN_ATTRIBUTE&quot;&gt; &lt;code&gt;UNKNOWN_ATTRIBUTE&lt;/code&gt; &lt;/a&gt;と同じ意味で、特別な文字列&lt;a href=&quot;pack200.packer#ERROR&quot;&gt; &lt;code&gt;ERROR&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;pack200.packer#STRIP&quot;&gt; &lt;code&gt;STRIP&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;pack200.packer#PASS&quot;&gt; &lt;code&gt;PASS&lt;/code&gt; &lt;/a&gt;も許可されます。これにより、ユーザーは特定の属性を拒否、削除、またはビット単位で渡すように要求できます（クラス圧縮なし）。</target>
        </trans-unit>
        <trans-unit id="6a13bd69809d0a0a05735ac36655ba584ce36412" translate="yes" xml:space="preserve">
          <source>The special value 0 instructs the packer to copy through the original JAR file directly, with no compression. The JSR 200 standard requires any unpacker to understand this special case as a pass-through of the entire archive.</source>
          <target state="translated">特別な値 0 は、圧縮なしで元の JAR ファイルを直接コピーするようにパッカーに指示します。JSR 200 標準では、どのアンパッカーもこの特殊なケースをアーカイブ全体のパススルーとして理解することを要求しています。</target>
        </trans-unit>
        <trans-unit id="d43aa293b92f885948dfdec9b93e9f6263ba164c" translate="yes" xml:space="preserve">
          <source>The specialized subtype default implementations of &lt;a href=&quot;iterator#next()&quot;&gt;&lt;code&gt;Iterator.next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator#forEachRemaining(java.util.function.Consumer)&quot;&gt;&lt;code&gt;Iterator.forEachRemaining(java.util.function.Consumer)&lt;/code&gt;&lt;/a&gt; box primitive values to instances of their corresponding wrapper class. Such boxing may offset any advantages gained when using the primitive specializations. To avoid boxing, the corresponding primitive-based methods should be used. For example, &lt;a href=&quot;primitiveiterator.ofint#nextInt()&quot;&gt;&lt;code&gt;PrimitiveIterator.OfInt.nextInt()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;primitiveiterator.ofint#forEachRemaining(java.util.function.IntConsumer)&quot;&gt;&lt;code&gt;PrimitiveIterator.OfInt.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt; should be used in preference to &lt;a href=&quot;primitiveiterator.ofint#next()&quot;&gt;&lt;code&gt;PrimitiveIterator.OfInt.next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;primitiveiterator.ofint#forEachRemaining(java.util.function.Consumer)&quot;&gt;&lt;code&gt;PrimitiveIterator.OfInt.forEachRemaining(java.util.function.Consumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;iterator#next()&quot;&gt; &lt;code&gt;Iterator.next()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;iterator#forEachRemaining(java.util.function.Consumer)&quot;&gt; &lt;code&gt;Iterator.forEachRemaining(java.util.function.Consumer)&lt;/code&gt; &lt;/a&gt;の特殊なサブタイプのデフォルト実装は、対応するラッパークラスのインスタンスにプリミティブ値をボックス化します。このようなボクシングは、プリミティブスペシャライゼーションを使用するときに得られる利点を相殺する可能性があります。ボクシングを回避するには、対応するプリミティブベースのメソッドを使用する必要があります。例えば、&lt;a href=&quot;primitiveiterator.ofint#nextInt()&quot;&gt; &lt;code&gt;PrimitiveIterator.OfInt.nextInt()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;primitiveiterator.ofint#forEachRemaining(java.util.function.IntConsumer)&quot;&gt; &lt;code&gt;PrimitiveIterator.OfInt.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt;に優先して使用されるべきである&lt;a href=&quot;primitiveiterator.ofint#next()&quot;&gt; &lt;code&gt;PrimitiveIterator.OfInt.next()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;primitiveiterator.ofint#forEachRemaining(java.util.function.Consumer)&quot;&gt; &lt;code&gt;PrimitiveIterator.OfInt.forEachRemaining(java.util.function.Consumer)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb3de17aa29974030176e4818ff90fa588d4cccd" translate="yes" xml:space="preserve">
          <source>The specialized subtype default implementations of &lt;a href=&quot;iterator#next--&quot;&gt;&lt;code&gt;Iterator.next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator#forEachRemaining-java.util.function.Consumer-&quot;&gt;&lt;code&gt;Iterator.forEachRemaining(java.util.function.Consumer)&lt;/code&gt;&lt;/a&gt; box primitive values to instances of their corresponding wrapper class. Such boxing may offset any advantages gained when using the primitive specializations. To avoid boxing, the corresponding primitive-based methods should be used. For example, &lt;a href=&quot;primitiveiterator.ofint#nextInt--&quot;&gt;&lt;code&gt;PrimitiveIterator.OfInt.nextInt()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;primitiveiterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;PrimitiveIterator.OfInt.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt; should be used in preference to &lt;a href=&quot;primitiveiterator.ofint#next--&quot;&gt;&lt;code&gt;PrimitiveIterator.OfInt.next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;primitiveiterator.ofint#forEachRemaining-java.util.function.Consumer-&quot;&gt;&lt;code&gt;PrimitiveIterator.OfInt.forEachRemaining(java.util.function.Consumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;iterator#next--&quot;&gt; &lt;code&gt;Iterator.next()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;iterator#forEachRemaining-java.util.function.Consumer-&quot;&gt; &lt;code&gt;Iterator.forEachRemaining(java.util.function.Consumer)&lt;/code&gt; &lt;/a&gt;ボックスプリミティブ値の対応するラッパークラスのインスタンスへの特殊なサブタイプデフォルト実装。このようなボクシングは、プリミティブ特化を使用するときに得られる利点を相殺する可能性があります。ボクシングを回避するには、対応するプリミティブベースのメソッドを使用する必要があります。例えば、&lt;a href=&quot;primitiveiterator.ofint#nextInt--&quot;&gt; &lt;code&gt;PrimitiveIterator.OfInt.nextInt()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;primitiveiterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt; &lt;code&gt;PrimitiveIterator.OfInt.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt;に優先して使用されるべきである&lt;a href=&quot;primitiveiterator.ofint#next--&quot;&gt; &lt;code&gt;PrimitiveIterator.OfInt.next()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;primitiveiterator.ofint#forEachRemaining-java.util.function.Consumer-&quot;&gt; &lt;code&gt;PrimitiveIterator.OfInt.forEachRemaining(java.util.function.Consumer)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="50f407aa7fac51cbfd7197c06936b8340a15f9e5" translate="yes" xml:space="preserve">
          <source>The specification and implementation titles, versions, and vendors are unspecified.</source>
          <target state="translated">仕様や実装のタイトル、バージョン、ベンダーは不特定。</target>
        </trans-unit>
        <trans-unit id="d6f9034bc2b0e9e47c35477b9b0c1050884a6e58" translate="yes" xml:space="preserve">
          <source>The specification of &lt;a href=&quot;#floatDWidth&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;#floatDPrec&quot;&gt;precision&lt;/a&gt; is the same as defined for Float and Double.</source>
          <target state="translated">仕様&lt;a href=&quot;#floatDWidth&quot;&gt;幅&lt;/a&gt;と&lt;a href=&quot;#floatDPrec&quot;&gt;精度は&lt;/a&gt; floatとdoubleと同義です。</target>
        </trans-unit>
        <trans-unit id="fa9ee937f65b438b3e28d90ed076c5fb130b0ebe" translate="yes" xml:space="preserve">
          <source>The specification of &lt;a href=&quot;#intWidth&quot;&gt;width&lt;/a&gt; is the same as defined for Byte, Short, Integer, and Long.</source>
          <target state="translated">&lt;a href=&quot;#intWidth&quot;&gt;幅&lt;/a&gt;の指定は、Byte、Short、Integer、およびLongの定義と同じです。</target>
        </trans-unit>
        <trans-unit id="a10ca3cba79e422f1740bb3e0934c522a4f1925b" translate="yes" xml:space="preserve">
          <source>The specification of the &lt;a href=&quot;../nio/charset/charset&quot;&gt;&lt;code&gt;java.nio.charset.Charset&lt;/code&gt;&lt;/a&gt; class describes the naming conventions for character encodings as well as the set of standard encodings that must be supported by every implementation of the Java platform.</source>
          <target state="translated">&lt;a href=&quot;../nio/charset/charset&quot;&gt; &lt;code&gt;java.nio.charset.Charset&lt;/code&gt; &lt;/a&gt;クラスの仕様は、文字エンコーディングの命名規則と、Javaプラットフォームのすべての実装でサポートする必要がある標準エンコーディングのセットを記述しています。</target>
        </trans-unit>
        <trans-unit id="5bc479f4b94e6ed3adb52c78855a8eaf971be4f5" translate="yes" xml:space="preserve">
          <source>The specifications of these methods enable implementations to employ efficient machine-level atomic instructions that are available on contemporary processors. However on some platforms, support may entail some form of internal locking. Thus the methods are not strictly guaranteed to be non-blocking -- a thread may block transiently before performing the operation.</source>
          <target state="translated">これらのメソッドの仕様により、現代のプロセッサで利用可能な効率的なマシンレベルのアトミック命令を実装することができます。しかし、プラットフォームによっては、何らかの形式の内部ロックを必要とする場合があります。したがって、これらのメソッドはノンブロッキングであることが厳密に保証されているわけではありません --演算を実行する前にスレッドが一時的にブロックすることがあります。</target>
        </trans-unit>
        <trans-unit id="5249ead0cea582438ce306dee2ff065c9121394e" translate="yes" xml:space="preserve">
          <source>The specified</source>
          <target state="translated">指定された</target>
        </trans-unit>
        <trans-unit id="6ef62c35d30b6f6e7b7d2f2944ffd8af1accdeb5" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;CompositeData&lt;/code&gt; must have the following item names and item types to be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62478b55800b13e9edc844048f06d81a5395c823" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;attributes&lt;/code&gt; is cloned before it is stored in the new &lt;code&gt;SecretKeyEntry&lt;/code&gt; object.</source>
          <target state="translated">指定された &lt;code&gt;attributes&lt;/code&gt; は、新しい &lt;code&gt;SecretKeyEntry&lt;/code&gt; オブジェクトに格納される前に複製されます。</target>
        </trans-unit>
        <trans-unit id="ce6192f33f7b86e9ead09fddf2eb53ecad7d96e2" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;attributes&lt;/code&gt; is cloned before it is stored in the new &lt;code&gt;TrustedCertificateEntry&lt;/code&gt; object.</source>
          <target state="translated">指定された &lt;code&gt;attributes&lt;/code&gt; は、新しい &lt;code&gt;TrustedCertificateEntry&lt;/code&gt; オブジェクトに格納される前に複製されます。</target>
        </trans-unit>
        <trans-unit id="d471977883e3ea29098c508c72fa94025049aa80" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;chain&lt;/code&gt; and &lt;code&gt;attributes&lt;/code&gt; are cloned before they are stored in the new &lt;code&gt;PrivateKeyEntry&lt;/code&gt; object.</source>
          <target state="translated">指定された &lt;code&gt;chain&lt;/code&gt; と &lt;code&gt;attributes&lt;/code&gt; は、新しい &lt;code&gt;PrivateKeyEntry&lt;/code&gt; オブジェクトに格納される前に複製されます。</target>
        </trans-unit>
        <trans-unit id="feecfb1f75d3f2369d375a91acbc68cab6f7dc08" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;chain&lt;/code&gt; is cloned before it is stored in the new &lt;code&gt;PrivateKeyEntry&lt;/code&gt; object.</source>
          <target state="translated">指定された &lt;code&gt;chain&lt;/code&gt; は、新しい &lt;code&gt;PrivateKeyEntry&lt;/code&gt; オブジェクトに格納される前に複製されます。</target>
        </trans-unit>
        <trans-unit id="91787ab6a545bac8438e8b3009f062a3b8a33372" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;name&lt;/code&gt; cannot begin with &quot;&lt;code&gt;java.&lt;/code&gt;&quot;, since all classes in the &quot;&lt;code&gt;java.*&lt;/code&gt; packages can only be defined by the bootstrap class loader. If &lt;code&gt;name&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, it must be equal to the &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt; of the class specified by the byte array &quot;&lt;code&gt;b&lt;/code&gt;&quot;, otherwise a &lt;a href=&quot;noclassdeffounderror&quot;&gt;&lt;code&gt;&lt;code&gt;NoClassDefFoundError&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">指定された &lt;code&gt;name&lt;/code&gt; で始めることはできません「 &lt;code&gt;java.&lt;/code&gt; 」、 &quot;内のすべてのクラス以来 &lt;code&gt;java.*&lt;/code&gt; パッケージは唯一のブートストラップクラスローダによって定義することができます。場合は &lt;code&gt;name&lt;/code&gt; ない &lt;code&gt;null&lt;/code&gt; 、それは等しくなければなりません&lt;a href=&quot;#name&quot;&gt;バイナリ名&lt;/a&gt;で指定したクラスのバイト配列「 &lt;code&gt;b&lt;/code&gt; 」。それ以外の場合は&lt;a href=&quot;noclassdeffounderror&quot;&gt; &lt;code&gt;&lt;code&gt;NoClassDefFoundError&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="eaef74f38f0fefbf6b797c4d769b36b62a96e610" translate="yes" xml:space="preserve">
          <source>The specified &lt;code&gt;password&lt;/code&gt; is cloned before it is stored in the new &lt;code&gt;PasswordProtection&lt;/code&gt; object.</source>
          <target state="translated">指定された &lt;code&gt;password&lt;/code&gt; は、新しい &lt;code&gt;PasswordProtection&lt;/code&gt; オブジェクトに格納される前に複製されます。</target>
        </trans-unit>
        <trans-unit id="c18dc4bf1e553fd51a6ef779b53c94ede909086a" translate="yes" xml:space="preserve">
          <source>The specified MBean does not exist in the repository.</source>
          <target state="translated">指定されたMBeanがリポジトリに存在しません。</target>
        </trans-unit>
        <trans-unit id="1da5f575f6552b129ebced03a3fcca62b2e49042" translate="yes" xml:space="preserve">
          <source>The specified MBean listener does not exist in the repository.</source>
          <target state="translated">指定された MBean リスナーがリポジトリに存在しません。</target>
        </trans-unit>
        <trans-unit id="af5fc804aa4841cb6f3309cca620e06c665f28ff" translate="yes" xml:space="preserve">
          <source>The specified amount is typically an instance of &lt;code&gt;Period&lt;/code&gt;. Other types are interpreted using &lt;a href=&quot;#from(java.time.temporal.TemporalAmount)&quot;&gt;&lt;code&gt;from(TemporalAmount)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された金額は通常、 &lt;code&gt;Period&lt;/code&gt; のインスタンスです。他のタイプは&lt;a href=&quot;#from(java.time.temporal.TemporalAmount)&quot;&gt; &lt;code&gt;from(TemporalAmount)&lt;/code&gt; &lt;/a&gt;を使用して解釈されます。</target>
        </trans-unit>
        <trans-unit id="190c4561e923b6d02247206d09c8f34b9f935a7d" translate="yes" xml:space="preserve">
          <source>The specified amount is typically an instance of &lt;code&gt;Period&lt;/code&gt;. Other types are interpreted using &lt;a href=&quot;period#from-java.time.temporal.TemporalAmount-&quot;&gt;&lt;code&gt;from(TemporalAmount)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された金額は通常、 &lt;code&gt;Period&lt;/code&gt; のインスタンスです。他のタイプは&lt;a href=&quot;period#from-java.time.temporal.TemporalAmount-&quot;&gt; &lt;code&gt;from(TemporalAmount)&lt;/code&gt; &lt;/a&gt;を使用して解釈されます。</target>
        </trans-unit>
        <trans-unit id="9f3bf406b8fb479bb6ba897f4dfcf1ddc3eae351" translate="yes" xml:space="preserve">
          <source>The specified amount of real time has elapsed, more or less. If &lt;code&gt;timeout&lt;/code&gt; is zero, however, then real time is not taken into consideration and the thread simply waits until notified.</source>
          <target state="translated">指定された量のリアルタイムが経過しました。場合は &lt;code&gt;timeout&lt;/code&gt; ゼロである、しかし、その後、実際の時間は考慮していないと通知されるまで、スレッドは単に待ちます。</target>
        </trans-unit>
        <trans-unit id="00452a58dccb117675d49a429b178f798add4786" translate="yes" xml:space="preserve">
          <source>The specified amount of real time has elapsed, more or less. The amount of real time, in nanoseconds, is given by the expression &lt;code&gt;1000000 * timeoutMillis + nanos&lt;/code&gt;. If &lt;code&gt;timeoutMillis&lt;/code&gt; and &lt;code&gt;nanos&lt;/code&gt; are both zero, then real time is not taken into consideration and the thread waits until awakened by one of the other causes.</source>
          <target state="translated">指定された量のリアルタイムが多かれ少なかれ経過しました。ナノ秒単位のリアルタイムの量は、式 &lt;code&gt;1000000 * timeoutMillis + nanos&lt;/code&gt; 与えられます。場合 &lt;code&gt;timeoutMillis&lt;/code&gt; と &lt;code&gt;nanos&lt;/code&gt; 値が両方ともゼロである他の原因のいずれかによって起こされるまで、その後、リアルタイムではない考慮し、スレッドが待機中に取り込まれます。</target>
        </trans-unit>
        <trans-unit id="2fb0d14ec3b91bd96d9fc6ab5161cd7aea17ba63" translate="yes" xml:space="preserve">
          <source>The specified attribute does not exist or cannot be retrieved.</source>
          <target state="translated">指定された属性が存在しないか、取得できません。</target>
        </trans-unit>
        <trans-unit id="3c4052d464c8f6871afa7336bc62a9e77ae7434b" translate="yes" xml:space="preserve">
          <source>The specified comparator is used to determine if two array elements from the each array are not equal.</source>
          <target state="translated">指定されたコンパレータは,各配列からの2つの配列要素が等しくないかどうかを判定するために使用されます.</target>
        </trans-unit>
        <trans-unit id="2c8613acf6749ef0ed389aa41eb552a29cdf6d0d" translate="yes" xml:space="preserve">
          <source>The specified constructor is invoked with the arguments in the specified argument list. The invocation is synchronous; this method does not return until the constructor returns in the target VM. If the invoked method throws an exception, this method will throw an &lt;a href=&quot;invocationexception&quot;&gt;&lt;code&gt;InvocationException&lt;/code&gt;&lt;/a&gt; which contains a mirror to the exception object thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8d3e0653b6d1561f69a4fc51247490be2c9fff" translate="yes" xml:space="preserve">
          <source>The specified deadline elapses; or</source>
          <target state="translated">指定された期限が経過した場合</target>
        </trans-unit>
        <trans-unit id="dfc1facec1624a9e49107544937a16179ab58cc9" translate="yes" xml:space="preserve">
          <source>The specified deadline passes; or</source>
          <target state="translated">指定された期限を過ぎた場合</target>
        </trans-unit>
        <trans-unit id="5247131e5691f2b17d264ef1c3dfc670058c9a69" translate="yes" xml:space="preserve">
          <source>The specified default value.</source>
          <target state="translated">指定されたデフォルト値。</target>
        </trans-unit>
        <trans-unit id="5b4866a14164fbbb9168f172b4e6e8d7dc395270" translate="yes" xml:space="preserve">
          <source>The specified dimensions are used to locate a matching &lt;code&gt;MediaSize&lt;/code&gt; instance from amongst all the standard &lt;code&gt;MediaSize&lt;/code&gt; instances.</source>
          <target state="translated">指定されたディメンションは、すべての標準 &lt;code&gt;MediaSize&lt;/code&gt; インスタンスの中から一致する &lt;code&gt;MediaSize&lt;/code&gt; インスタンスを見つけるために使用されます。</target>
        </trans-unit>
        <trans-unit id="f68d5b41f2fafda46b89738c8f86f8e066852d0c" translate="yes" xml:space="preserve">
          <source>The specified dimensions are used to locate a matching &lt;code&gt;MediaSize&lt;/code&gt; instance from amongst all the standard &lt;code&gt;MediaSize&lt;/code&gt; instances. If there is no exact match, the closest match is used.</source>
          <target state="translated">指定されたディメンションは、すべての標準 &lt;code&gt;MediaSize&lt;/code&gt; インスタンスの中から一致する &lt;code&gt;MediaSize&lt;/code&gt; インスタンスを見つけるために使用されます。完全に一致するものがない場合は、最も近い一致が使用されます。</target>
        </trans-unit>
        <trans-unit id="310ae4a82260e2743fd9957091b33702914d499e" translate="yes" xml:space="preserve">
          <source>The specified dimensions are used to locate a matching MediaSize instance from amongst all the standard MediaSize instances. If there is no exact match, the closest match is used.</source>
          <target state="translated">指定されたディメンジョンは、すべての標準的な MediaSize インスタンスの中から一致する MediaSize インスタンスを見つけるために使用されます。完全に一致するものがない場合は、最も近いものが使用されます。</target>
        </trans-unit>
        <trans-unit id="104dce0f8cf047aa941594c95f88524f18e28ce2" translate="yes" xml:space="preserve">
          <source>The specified list must be modifiable, but need not be resizable.</source>
          <target state="translated">指定されたリストは変更可能でなければなりませんが、リサイズ可能である必要はありません。</target>
        </trans-unit>
        <trans-unit id="8f09ffd7e81a93fd6948e5a765fff32edb59db61" translate="yes" xml:space="preserve">
          <source>The specified map contains the current state of the parse. The map is mutable and must be mutated to resolve the field and any related fields. This method will only be invoked during parsing if the map contains this field, and implementations should therefore assume this field is present.</source>
          <target state="translated">指定されたマップには、パースの現在の状態が含まれています。マップは変異可能であり、フィールドと関連するフィールドを解決するために変異させる必要があります。このメソッドは、マップにこのフィールドが含まれている場合にのみ解析中に呼び出され、実装ではこのフィールドが存在すると仮定する必要があります。</target>
        </trans-unit>
        <trans-unit id="493032b220120145406a2c95c31eb22182fdc14e" translate="yes" xml:space="preserve">
          <source>The specified map must be empty at the time this method is invoked, and should not be accessed directly after this method returns. These conditions are ensured if the map is created empty, passed directly to this method, and no reference to the map is retained, as illustrated in the following code fragment:</source>
          <target state="translated">指定されたマップは、このメソッドが呼び出された時点で空でなければならず、このメソッドが戻ってきた後に直接アクセスしてはいけません。これらの条件は、マップが空の状態で作成され、このメソッドに直接渡され、マップへの参照が保持されていない場合に保証されます。</target>
        </trans-unit>
        <trans-unit id="5458edf560d4ce470bc3f0200d198b4f628d8da9" translate="yes" xml:space="preserve">
          <source>The specified method is invoked with the arguments in the specified argument list. The method invocation is synchronous; this method does not return until the invoked method returns in the target VM. If the invoked method throws an exception, this method will throw an &lt;a href=&quot;invocationexception&quot;&gt;&lt;code&gt;InvocationException&lt;/code&gt;&lt;/a&gt; which contains a mirror to the exception object thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d2949ab1852b4adf83258648df2f3d3aea9bdc" translate="yes" xml:space="preserve">
          <source>The specified number of bytes have been read,</source>
          <target state="translated">指定したバイト数が読み込まれました。</target>
        </trans-unit>
        <trans-unit id="04268be0844ec6f86b3371c45be5d6b167be71f6" translate="yes" xml:space="preserve">
          <source>The specified number of characters have been read,</source>
          <target state="translated">指定した文字数が読み込まれました。</target>
        </trans-unit>
        <trans-unit id="9c75e9930b115a843435f6e70515c2fbf02a4ce1" translate="yes" xml:space="preserve">
          <source>The specified path is added to the end of the classpath used in eval().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0a2d50122bd703c21aacfe280b277010cfa080" translate="yes" xml:space="preserve">
          <source>The specified path is added to the end of the classpath used in eval(). Note that the unnamed package is not accessible from the package in which &lt;a href=&quot;#eval(java.lang.String)&quot;&gt;&lt;code&gt;eval(String)&lt;/code&gt;&lt;/a&gt; code is placed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6cc3dc228a55bbb5be0ad0c4aa456b38c93c73" translate="yes" xml:space="preserve">
          <source>The specified stream is closed after this method returns.</source>
          <target state="translated">指定されたストリームは、このメソッドが戻ってきた後に閉じられます。</target>
        </trans-unit>
        <trans-unit id="51786fb87bcf180e4b0079696fd451f32baf2367" translate="yes" xml:space="preserve">
          <source>The specified stream remains open after this method returns.</source>
          <target state="translated">指定されたストリームは、このメソッドが戻った後もオープンされたままです。</target>
        </trans-unit>
        <trans-unit id="7526737a0fdb5c1ec28cb0f7e645a738da9f21ee" translate="yes" xml:space="preserve">
          <source>The specified string</source>
          <target state="translated">指定された文字列</target>
        </trans-unit>
        <trans-unit id="020eb4b0a71ae7c3e458a5afa3348d57de83d3bc" translate="yes" xml:space="preserve">
          <source>The specified substring. If the sum of &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; exceeds the &lt;code&gt;length&lt;/code&gt;, then all 16-bit units to the end of the data are returned.</source>
          <target state="translated">指定された部分文字列。 &lt;code&gt;offset&lt;/code&gt; と &lt;code&gt;count&lt;/code&gt; 合計が &lt;code&gt;length&lt;/code&gt; を超える場合、データの最後までのすべての16ビット単位が返されます。</target>
        </trans-unit>
        <trans-unit id="2615e62cfbfda5abfd51b12dbda35048bb40079b" translate="yes" xml:space="preserve">
          <source>The specified temporal must have the same chronology as this period. This returns a temporal with the non-zero supported units added.</source>
          <target state="translated">指定されたテンポラリは、この期間と同じ年表を持っていなければなりません。これは、サポートされている0以外の単位が追加されたテンポラリを返します。</target>
        </trans-unit>
        <trans-unit id="157250d9b4b02aeb6925cbf93c8ae0c1bd6e00ac" translate="yes" xml:space="preserve">
          <source>The specified temporal must have the same chronology as this period. This returns a temporal with the non-zero supported units subtracted.</source>
          <target state="translated">指定された時間軸は、この期間と同じ年表を持っていなければなりません。これは、0以外のサポートされている単位を差し引いた時間軸を返します。</target>
        </trans-unit>
        <trans-unit id="cc9a505a8f5c31216ff0ecff5662a313bc10a9ec" translate="yes" xml:space="preserve">
          <source>The specified temporal objects must support the &lt;a href=&quot;temporal/chronounit#SECONDS&quot;&gt;&lt;code&gt;SECONDS&lt;/code&gt;&lt;/a&gt; unit. For full accuracy, either the &lt;a href=&quot;temporal/chronounit#NANOS&quot;&gt;&lt;code&gt;NANOS&lt;/code&gt;&lt;/a&gt; unit or the &lt;a href=&quot;temporal/chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; field should be supported.</source>
          <target state="translated">指定された一時オブジェクトは&lt;a href=&quot;temporal/chronounit#SECONDS&quot;&gt; &lt;code&gt;SECONDS&lt;/code&gt; &lt;/a&gt;ユニットをサポートする必要があります。完全な精度を得るには、&lt;a href=&quot;temporal/chronounit#NANOS&quot;&gt; &lt;code&gt;NANOS&lt;/code&gt; &lt;/a&gt;ユニットまたは&lt;a href=&quot;temporal/chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;NANO_OF_SECOND&lt;/code&gt; &lt;/a&gt;フィールドのいずれかをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="48aa14ed6ed221e27d9f2cd6ffaee94b553e7c4d" translate="yes" xml:space="preserve">
          <source>The specified thread must be suspended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9126ea58e2571bc036db8beb3f6e7cb81714d752" translate="yes" xml:space="preserve">
          <source>The specified timeout elapses; or</source>
          <target state="translated">指定されたタイムアウトが経過した場合</target>
        </trans-unit>
        <trans-unit id="6c00c0e0136e5f97f317610379bde9404184da35" translate="yes" xml:space="preserve">
          <source>The specified title as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77816529a97b17e719694d443a16cc6eb0b2358f" translate="yes" xml:space="preserve">
          <source>The specified value is used for components that do not have an explicit visibility specified.</source>
          <target state="translated">指定された値は、明示的な可視性が指定されていないコンポーネントに使用されます。</target>
        </trans-unit>
        <trans-unit id="b837498e4f5bfb7ecf362b5a40901bb42bb72876" translate="yes" xml:space="preserve">
          <source>The specified waiting time elapses</source>
          <target state="translated">指定した待ち時間が経過すると</target>
        </trans-unit>
        <trans-unit id="2e16f4e41d2bec157ff32585a40c8df18c39455f" translate="yes" xml:space="preserve">
          <source>The specified waiting time elapses.</source>
          <target state="translated">指定した待ち時間が経過します。</target>
        </trans-unit>
        <trans-unit id="f6172c989e04cb91e71e97089eeadbcfd41054bf" translate="yes" xml:space="preserve">
          <source>The specified waiting time elapses; or</source>
          <target state="translated">指定された待ち時間が経過した場合</target>
        </trans-unit>
        <trans-unit id="bcb09cd9d5c1d9cff3d8db3594d6e42aab3b0b8d" translate="yes" xml:space="preserve">
          <source>The spinner that we're a UI delegate for.</source>
          <target state="translated">UIの代表格であるスピナーを</target>
        </trans-unit>
        <trans-unit id="97f64657e5f059399930d54a08e9b83baa27ae28" translate="yes" xml:space="preserve">
          <source>The spinner that we're a UI delegate for. Initialized by the &lt;code&gt;installUI&lt;/code&gt; method, and reset to null by &lt;code&gt;uninstallUI&lt;/code&gt;.</source>
          <target state="translated">私たちがUIデリゲートであるスピナー。 &lt;code&gt;installUI&lt;/code&gt; メソッドによって初期化され、 &lt;code&gt;uninstallUI&lt;/code&gt; によってnullにリセットされます。</target>
        </trans-unit>
        <trans-unit id="d585405edcff8efbfeceb28b75b5f670d57bbe62" translate="yes" xml:space="preserve">
          <source>The splash screen can be displayed at application startup, before the Java Virtual Machine (JVM) starts.</source>
          <target state="translated">Java Virtual Machine(JVM)が起動する前に、アプリケーション起動時にスプラッシュ画面を表示することができます。</target>
        </trans-unit>
        <trans-unit id="799c8129c9adc3cde63003661b566735c720a9dc" translate="yes" xml:space="preserve">
          <source>The splash screen can be displayed at application startup, before the Java Virtual Machine (JVM) starts. The splash screen is displayed as an undecorated window containing an image. You can use GIF, JPEG, or PNG files for the image. Animation is supported for the GIF format, while transparency is supported both for GIF and PNG. The window is positioned at the center of the screen. The position on multi-monitor systems is not specified. It is platform and implementation dependent. The splash screen window is closed automatically as soon as the first window is displayed by Swing/AWT (may be also closed manually using the Java API, see below).</source>
          <target state="translated">スプラッシュ画面は、アプリケーションの起動時に、Java仮想マシン(JVM)が起動する前に表示することができます。スプラッシュ画面は、画像を含む装飾されていないウィンドウとして表示されます。画像には、GIF、JPEG、PNG ファイルを使用できます。GIF フォーマットではアニメーションがサポートされていますが、透明度は GIF と PNG の両方でサポートされています。ウィンドウは画面の中央に配置されます。マルチモニタシステム上での位置は指定しません。プラットフォームや実装に依存します。スプラッシュスクリーンのウィンドウは、Swing/AWT によって最初のウィンドウが表示されるとすぐに自動的に閉じられます (Java API を使って手動で閉じることもできます。)</target>
        </trans-unit>
        <trans-unit id="b1c8f20ff40da3f5e74a84ba6b16f559f12b32df" translate="yes" xml:space="preserve">
          <source>The splash screen will be displayed as faithfully as possible to present the whole splash screen image given the limitations of the target platform and display.</source>
          <target state="translated">スプラッシュ画面は、ターゲットプラットフォームとディスプレイの制限を考慮して、スプラッシュ画面全体の画像を可能な限り忠実に表示します。</target>
        </trans-unit>
        <trans-unit id="358fe8f4c03c65db9f92645925be98830ef03da4" translate="yes" xml:space="preserve">
          <source>The spliterator is &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;, inherits the &lt;em&gt;fail-fast&lt;/em&gt; properties of the collection's iterator, and implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism.</source>
          <target state="translated">spliteratorは&lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;遅延バインディング&lt;/a&gt;&lt;/em&gt;であり、コレクションの反復子の&lt;em&gt;fail-fast&lt;/em&gt;プロパティを継承し、 &lt;code&gt;trySplit&lt;/code&gt; を実装して制限された並列処理を許可します。</target>
        </trans-unit>
        <trans-unit id="5c3d939c98fbccf6b0709b1993b6b3ad3fbfd412" translate="yes" xml:space="preserve">
          <source>The spliterator is not &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;, inherits the &lt;em&gt;fail-fast&lt;/em&gt; properties of the iterator, and implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism.</source>
          <target state="translated">スプリテレーターは&lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;レイトバインディング&lt;/a&gt;&lt;/em&gt;ではなく、イテレーターの&lt;em&gt;フェイルファスト&lt;/em&gt;プロパティを継承し、 &lt;code&gt;trySplit&lt;/code&gt; を実装して並列処理を制限します。</target>
        </trans-unit>
        <trans-unit id="c89136b191a7ef1fb716259822efc70d2b8982ba" translate="yes" xml:space="preserve">
          <source>The spliterator is only traversed, split, or queried for estimated size after the terminal operation of the stream pipeline commences.</source>
          <target state="translated">スプリレータは、ストリームパイプラインの終端操作が開始された後にのみ、トラバース、スプリット、または推定サイズの問い合わせを行います。</target>
        </trans-unit>
        <trans-unit id="2e796cc75190234b6abcae4603bbe835004bc5ff" translate="yes" xml:space="preserve">
          <source>The spliterator provides a snapshot of the state of the list when the spliterator was constructed. No synchronization is needed while operating on the spliterator.</source>
          <target state="translated">spliterator は、spliterator が構築されたときのリストの状態のスナップショットを提供します。スプリテレータを操作している間は同期は必要ありません。</target>
        </trans-unit>
        <trans-unit id="cb6fc47357accd5ef236f3f5c242ba1b0d8c1cb4" translate="yes" xml:space="preserve">
          <source>The spliterator provides a snapshot of the state of the set when the spliterator was constructed. No synchronization is needed while operating on the spliterator.</source>
          <target state="translated">スプリテータは、スプリテータが構築されたときのセットの状態のスナップショットを提供します。スプリテレータで操作している間は同期は必要ありません。</target>
        </trans-unit>
        <trans-unit id="8c63ef1d32be1189c32d967974dfe2fc9a2f274a" translate="yes" xml:space="preserve">
          <source>The spliterator reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator#IMMUTABLE&quot;&gt;&lt;code&gt;Spliterator.IMMUTABLE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">spliteratorは、&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;spliterator#IMMUTABLE&quot;&gt; &lt;code&gt;Spliterator.IMMUTABLE&lt;/code&gt; を報告し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c0e1fd6ad7e570320cb5c4dec58534b0c8203896" translate="yes" xml:space="preserve">
          <source>The spliterator's comparator (see &lt;a href=&quot;../spliterator#getComparator--&quot;&gt;&lt;code&gt;Spliterator.getComparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt; if the set's comparator (see &lt;a href=&quot;concurrentskiplistset#comparator--&quot;&gt;&lt;code&gt;comparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the set's comparator.</source>
          <target state="translated">セットのコンパレーター（&lt;a href=&quot;concurrentskiplistset#comparator--&quot;&gt; &lt;code&gt;comparator()&lt;/code&gt; を&lt;/a&gt;参照）が &lt;code&gt;null&lt;/code&gt; の場合、スプリッターのコンパレーター（&lt;a href=&quot;../spliterator#getComparator--&quot;&gt; &lt;code&gt;Spliterator.getComparator()&lt;/code&gt; &lt;/a&gt;参照）は &lt;code&gt;null&lt;/code&gt; です。それ以外の場合、スプリッターのコンパレーターは、セットのコンパレーターと同じか、または同じ合計順序付けを課します。</target>
        </trans-unit>
        <trans-unit id="fe057f9948defb315751a3ca1f88f4994c9e14dd" translate="yes" xml:space="preserve">
          <source>The spliterator's comparator (see &lt;a href=&quot;spliterator#getComparator()&quot;&gt;&lt;code&gt;Spliterator.getComparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt; if the tree set's comparator (see &lt;a href=&quot;sortedset#comparator()&quot;&gt;&lt;code&gt;SortedSet.comparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the tree set's comparator.</source>
          <target state="translated">ツリーセットのコンパレーター（&lt;a href=&quot;sortedset#comparator()&quot;&gt; &lt;code&gt;SortedSet.comparator()&lt;/code&gt; を&lt;/a&gt;参照）が &lt;code&gt;null&lt;/code&gt; の場合、スプリッターのコンパレーター（&lt;a href=&quot;spliterator#getComparator()&quot;&gt; &lt;code&gt;Spliterator.getComparator()&lt;/code&gt; &lt;/a&gt;参照）は &lt;code&gt;null&lt;/code&gt; になります。それ以外の場合、スプリッターのコンパレーターは、ツリーセットのコンパレーターと同じであるか、同じ全順序を課します。</target>
        </trans-unit>
        <trans-unit id="f6b692dffef505c29f727633715bcaa25d9f58af" translate="yes" xml:space="preserve">
          <source>The spliterator's comparator (see &lt;a href=&quot;spliterator#getComparator()&quot;&gt;&lt;code&gt;Spliterator.getComparator()&lt;/code&gt;&lt;/a&gt;) must be &lt;code&gt;null&lt;/code&gt; if the sorted set's comparator (see &lt;a href=&quot;#comparator()&quot;&gt;&lt;code&gt;comparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator must be the same as or impose the same total ordering as the sorted set's comparator.</source>
          <target state="translated">ソートされたセットのコンパレータ（&lt;a href=&quot;#comparator()&quot;&gt; &lt;code&gt;comparator()&lt;/code&gt; を&lt;/a&gt;参照）が &lt;code&gt;null&lt;/code&gt; の場合、スプリッタのコンパレータ（&lt;a href=&quot;spliterator#getComparator()&quot;&gt; &lt;code&gt;Spliterator.getComparator()&lt;/code&gt; &lt;/a&gt;参照）はnullである必要があり &lt;code&gt;null&lt;/code&gt; 。それ以外の場合、スプリッターのコンパレーターは、ソートされたセットのコンパレーターと同じであるか、同じ全順序を課す必要があります。</target>
        </trans-unit>
        <trans-unit id="48dde829f5e209bbf80a37d8886c87c609c3d85b" translate="yes" xml:space="preserve">
          <source>The spliterator's comparator (see &lt;a href=&quot;spliterator#getComparator--&quot;&gt;&lt;code&gt;Spliterator.getComparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt; if the tree set's comparator (see &lt;a href=&quot;treeset#comparator--&quot;&gt;&lt;code&gt;comparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the tree set's comparator.</source>
          <target state="translated">ツリーセットのコンパレーター（&lt;a href=&quot;treeset#comparator--&quot;&gt; &lt;code&gt;comparator()&lt;/code&gt; を&lt;/a&gt;参照）が &lt;code&gt;null&lt;/code&gt; の場合、スプリッターのコンパレーター（&lt;a href=&quot;spliterator#getComparator--&quot;&gt; &lt;code&gt;Spliterator.getComparator()&lt;/code&gt; &lt;/a&gt;参照）は &lt;code&gt;null&lt;/code&gt; です。それ以外の場合、スプリッターのコンパレーターは、ツリーセットのコンパレーターと同じか、または同じ合計順序付けを課します。</target>
        </trans-unit>
        <trans-unit id="5d0a078e5e6eab06b16fc00059f9764476f503fd" translate="yes" xml:space="preserve">
          <source>The spliterator's comparator (see &lt;a href=&quot;spliterator#getComparator--&quot;&gt;&lt;code&gt;Spliterator.getComparator()&lt;/code&gt;&lt;/a&gt;) must be &lt;code&gt;null&lt;/code&gt; if the sorted set's comparator (see &lt;a href=&quot;sortedset#comparator--&quot;&gt;&lt;code&gt;comparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator must be the same as or impose the same total ordering as the sorted set's comparator.</source>
          <target state="translated">spliteratorのコンパレータは、（参照&lt;a href=&quot;spliterator#getComparator--&quot;&gt; &lt;code&gt;Spliterator.getComparator()&lt;/code&gt; &lt;/a&gt;でなければならない） &lt;code&gt;null&lt;/code&gt; ソートセットのコンパレータ場合（参照&lt;a href=&quot;sortedset#comparator--&quot;&gt; &lt;code&gt;comparator()&lt;/code&gt; &lt;/a&gt;）である &lt;code&gt;null&lt;/code&gt; 。それ以外の場合、スプリッターのコンパレーターは、ソート済みセットのコンパレーターと同じであるか、同じ合計順序付けを課す必要があります。</target>
        </trans-unit>
        <trans-unit id="81c6f54339613405ef47fa4cf7fd2cfc6963fe4e" translate="yes" xml:space="preserve">
          <source>The spliterators for &lt;code&gt;Collection&lt;/code&gt; classes in the JDK that implement &lt;a href=&quot;navigableset&quot;&gt;&lt;code&gt;NavigableSet&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; report &lt;code&gt;SORTED&lt;/code&gt;.</source>
          <target state="translated">用spliterators &lt;code&gt;Collection&lt;/code&gt; 実装JDKのクラス&lt;a href=&quot;navigableset&quot;&gt; &lt;code&gt;NavigableSet&lt;/code&gt; &lt;/a&gt;か&lt;a href=&quot;sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; &lt;/a&gt;レポート &lt;code&gt;SORTED&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="cd697bf3371b30cc43133d20204f9b133ffb8c0e" translate="yes" xml:space="preserve">
          <source>The spliterators returned by the spliterator method of the collections returned by all of this class's collection view methods are &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;fail-fast&lt;/em&gt;, and additionally report &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このクラスのすべてのコレクションビューメソッドによって返されるコレクションのspliteratorメソッドによって返されるスプリッターは、遅延&lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;バインディングで&lt;/a&gt;&lt;/em&gt;、&lt;em&gt;フェイルファスト&lt;/em&gt;であり、さらに&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; を&lt;/a&gt;報告します。</target>
        </trans-unit>
        <trans-unit id="3f5421d4c1a6fd2ddf5564c1dd18506c0df41358" translate="yes" xml:space="preserve">
          <source>The spliterators returned by the spliterator method of the collections returned by all of this class's collection view methods are created from the iterators of the corresponding collections.</source>
          <target state="translated">このクラスのすべてのコレクションビューメソッドによって返されるコレクションの spliterator メソッドによって返される spliterator は、対応するコレクションのイテレータから作成されます。</target>
        </trans-unit>
        <trans-unit id="9f0eea49dd34a9dc6611340a54bee1813909e27a" translate="yes" xml:space="preserve">
          <source>The square root of a number numerically equal to &lt;code&gt;
 ZERO&lt;/code&gt; is numerically equal to &lt;code&gt;ZERO&lt;/code&gt; with a preferred scale according to the general rule above. In particular, for &lt;code&gt;ZERO&lt;/code&gt;, &lt;code&gt;ZERO.sqrt(mc).equals(ZERO)&lt;/code&gt; is true with any &lt;code&gt;MathContext&lt;/code&gt; as an argument.</source>
          <target state="translated">数値的に等しい数の平方根 &lt;code&gt; ZERO&lt;/code&gt; に数値的に等しい &lt;code&gt;ZERO&lt;/code&gt; 上記原則による好ましい尺度です。特に、 &lt;code&gt;ZERO&lt;/code&gt; の場合、 &lt;code&gt;ZERO.sqrt(mc).equals(ZERO)&lt;/code&gt; は、引数として任意の &lt;code&gt;MathContext&lt;/code&gt; で真になります。</target>
        </trans-unit>
        <trans-unit id="78e9aaccc7e1f2b7c96d28e2bb5525d00bd5e897" translate="yes" xml:space="preserve">
          <source>The stack can be queried by methods on &lt;code&gt;Exception&lt;/code&gt;. Note that in stack trace frames representing JShell Snippets, &lt;code&gt;StackTraceElement.getFileName()&lt;/code&gt; will return &quot;#&quot; followed by the Snippet id and for snippets without a method name (for example an expression) &lt;code&gt;StackTraceElement.getName()&lt;/code&gt; will be the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97a32597a130645adffb584e7165020d15f080bc" translate="yes" xml:space="preserve">
          <source>The standard &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; values are:</source>
          <target state="translated">標準の &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; 値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ec658a969bcb92aa1baad080b6a1974cf0ea66e2" translate="yes" xml:space="preserve">
          <source>The standard AC chrominance Huffman table.</source>
          <target state="translated">定番のACクロミナンスハフマンテーブル。</target>
        </trans-unit>
        <trans-unit id="de7f2a4797f9371ba730de4782f10f7289878bf4" translate="yes" xml:space="preserve">
          <source>The standard AC luminance Huffman table.</source>
          <target state="translated">標準的なAC輝度のハフマンテーブル。</target>
        </trans-unit>
        <trans-unit id="c018ce1af2d766ca3e1a4abc0ceaf42164f207ce" translate="yes" xml:space="preserve">
          <source>The standard DC chrominance Huffman table.</source>
          <target state="translated">標準的なDCクロミナンスハフマンテーブル。</target>
        </trans-unit>
        <trans-unit id="a329f8b4144b879c7b6f5ae550949bccdbf73f49" translate="yes" xml:space="preserve">
          <source>The standard DC luminance Huffman table.</source>
          <target state="translated">標準的なDC輝度のハフマンテーブル。</target>
        </trans-unit>
        <trans-unit id="db8c6341d94f5edfcecbdce8b46d6840a2f9998a" translate="yes" xml:space="preserve">
          <source>The standard MultipleDocumentHandling values are:</source>
          <target state="translated">MultipleDocumentHandlingの標準的な値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="cea92758ea1f357e469fa3131a98d496ed04fb3d" translate="yes" xml:space="preserve">
          <source>The standard WebRowSet XML Schema definition is available at the following URI:</source>
          <target state="translated">標準のWebRowSet XML Schemaの定義は、以下のURIから入手できます。</target>
        </trans-unit>
        <trans-unit id="92cab317859f368c1aae7d7671cb740196644a9d" translate="yes" xml:space="preserve">
          <source>The standard astronomical definition uses a fraction to indicate the time-of-day, thus 3.25 would represent the time 18:00, since days start at midday. This implementation uses an integer and days starting at midnight. The integer value for the Julian Day Number is the astronomical Julian Day value at midday of the date in question. This amounts to the astronomical Julian Day, rounded to an integer &lt;code&gt;JDN = floor(JD + 0.5)&lt;/code&gt;.</source>
          <target state="translated">標準の天文定義では、分数を使用して時刻を示します。したがって、日は正午から始まるため、3.25は時刻18:00を表します。この実装は、真夜中から始まる整数と日数を使用します。ユリウス日番号の整数値は、問題の日付の正午の天文上のユリウス日値です。これは天文学的なユリウス日に相当し、整数 &lt;code&gt;JDN = floor(JD + 0.5)&lt;/code&gt; に丸められます。</target>
        </trans-unit>
        <trans-unit id="880ecebc89a3bd9ce7264ab7dfc0e29562f0f35f" translate="yes" xml:space="preserve">
          <source>The standard astronomical definition uses a fraction to indicate the time-of-day, where each day is counted from midday to midday. For example, a fraction of 0 represents midday, a fraction of 0.25 represents 18:00, a fraction of 0.5 represents midnight and a fraction of 0.75 represents 06:00.</source>
          <target state="translated">標準的な天文学の定義では、1日の時間を示すために端数を使用しており、それぞれの日を正午から正午まで数えます。例えば、0の端数は真昼を、0.25の端数は18時を、0.5の端数は真夜中を、0.75の端数は6時を表します。</target>
        </trans-unit>
        <trans-unit id="13ecff8dc7f4fb8e1c0a2ecc7b63b91ab8bf3498" translate="yes" xml:space="preserve">
          <source>The standard bold weight.</source>
          <target state="translated">定番のボールドウェイト。</target>
        </trans-unit>
        <trans-unit id="87015164736bf1cd9c8bbb4ea24b900496c33f69" translate="yes" xml:space="preserve">
          <source>The standard class for rendering (displaying) individual cells in a &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 内の個々のセルをレンダリング（表示）するための標準クラス。</target>
        </trans-unit>
        <trans-unit id="42ca28b6f9992a10a95b6a95ebf901f9b15239be" translate="yes" xml:space="preserve">
          <source>The standard classes and interfaces that a third party vendor has to use in its implementation of a synchronization provider.</source>
          <target state="translated">サードパーティベンダーが同期プロバイダの実装で使用しなければならない標準クラスとインタフェース。</target>
        </trans-unit>
        <trans-unit id="f20e3d89b127e95d58c2061d7d4c9dd74ba0ee75" translate="yes" xml:space="preserve">
          <source>The standard classes and interfaces that a third party vendor has to use in its implementation of a synchronization provider. These classes and interfaces are referred to as the Service Provider Interface (SPI). To make it possible for a &lt;code&gt;RowSet&lt;/code&gt; object to use an implementation, the vendor must register it with the &lt;code&gt;SyncFactory&lt;/code&gt; singleton. (See the class comment for &lt;code&gt;SyncProvider&lt;/code&gt; for a full explanation of the registration process and the naming convention to be used.)</source>
          <target state="translated">サードパーティベンダーが同期プロバイダーの実装で使用する必要のある標準のクラスとインターフェイス。これらのクラスとインターフェイスは、サービスプロバイダーインターフェイス（SPI）と呼ばれます。 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトが実装を使用できるようにするには、ベンダーはそれを &lt;code&gt;SyncFactory&lt;/code&gt; シングルトンに登録する必要があります。（登録プロセスと使用される命名規則の完全な説明については、 &lt;code&gt;SyncProvider&lt;/code&gt; のクラスコメントを参照してください。）</target>
        </trans-unit>
        <trans-unit id="b131b8a4797ef2827907440045a418e64b3fbf06" translate="yes" xml:space="preserve">
          <source>The standard column-handler for a &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; の標準の列ハンドラー。</target>
        </trans-unit>
        <trans-unit id="ebd97f6234307a116f96853fd3903e56b9d40331" translate="yes" xml:space="preserve">
          <source>The standard default domain name is &lt;code&gt;DefaultDomain&lt;/code&gt;.</source>
          <target state="translated">標準のデフォルトドメイン名は &lt;code&gt;DefaultDomain&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="eba1c345bcad3128d67e184f5948f0c758533831" translate="yes" xml:space="preserve">
          <source>The standard doclet supports user-defined &lt;a href=&quot;taglet&quot;&gt;&lt;code&gt;taglets&lt;/code&gt;&lt;/a&gt;, which can be used to generate customized output for user-defined tags in documentation comments. Taglets invoked by the standard doclet must return strings from &lt;a href=&quot;taglet#toString(java.util.List,javax.lang.model.element.Element)&quot;&gt;&lt;code&gt;Taglet.toString&lt;/code&gt;&lt;/a&gt; as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef55295fde5154a258f26679975fa232098fcdbf" translate="yes" xml:space="preserve">
          <source>The standard file manager serves two purposes:</source>
          <target state="translated">標準のファイルマネージャは2つの目的を果たします。</target>
        </trans-unit>
        <trans-unit id="6b7ea3f0338f77cf538431691011f031baff3b34" translate="yes" xml:space="preserve">
          <source>The standard file manager will be automatically reopened if it is accessed after calls to &lt;code&gt;flush&lt;/code&gt; or &lt;code&gt;close&lt;/code&gt;. The standard file manager must be usable with other tools.</source>
          <target state="translated">標準のファイルマネージャは、 &lt;code&gt;flush&lt;/code&gt; または &lt;code&gt;close&lt;/code&gt; の呼び出し後にアクセスされた場合、自動的に再度開かれます。標準のファイルマネージャは、他のツールで使用できる必要があります。</target>
        </trans-unit>
        <trans-unit id="d899fd7b1f2ffca29d5ec4be5ab688999a5e0e42" translate="yes" xml:space="preserve">
          <source>The standard interface that all implementations of a &lt;code&gt;WebRowSet&lt;/code&gt; must implement.</source>
          <target state="translated">&lt;code&gt;WebRowSet&lt;/code&gt; のすべての実装が実装する必要がある標準インターフェース。</target>
        </trans-unit>
        <trans-unit id="68aac4cc5c3cf5132e5aff63b1695213f60c720d" translate="yes" xml:space="preserve">
          <source>The standard interface that all standard implementations of &lt;code&gt;FilteredRowSet&lt;/code&gt; must implement.</source>
          <target state="translated">&lt;code&gt;FilteredRowSet&lt;/code&gt; のすべての標準実装が実装する必要がある標準インターフェース。</target>
        </trans-unit>
        <trans-unit id="247ee5b52f4343f5290a6af4a99cb5a09ea9f68c" translate="yes" xml:space="preserve">
          <source>The standard interface that all standard implementations of &lt;code&gt;FilteredRowSet&lt;/code&gt; must implement. The &lt;code&gt;FilteredRowSetImpl&lt;/code&gt; class provides the reference implementation which may be extended if required. Alternatively, a vendor is free to implement its own version by implementing this interface.</source>
          <target state="translated">&lt;code&gt;FilteredRowSet&lt;/code&gt; のすべての標準実装が実装する必要がある標準インターフェース。 &lt;code&gt;FilteredRowSetImpl&lt;/code&gt; のクラスは、必要に応じて延長することができるリファレンス実装を提供します。または、ベンダーはこのインターフェイスを実装することにより、独自のバージョンを自由に実装できます。</target>
        </trans-unit>
        <trans-unit id="4179729038e158c2938276999d2a0f8a9a828d40" translate="yes" xml:space="preserve">
          <source>The standard interface that all standard implementations of &lt;code&gt;JdbcRowSet&lt;/code&gt; must implement.</source>
          <target state="translated">&lt;code&gt;JdbcRowSet&lt;/code&gt; のすべての標準実装が実装する必要のある標準インターフェース。</target>
        </trans-unit>
        <trans-unit id="bbf8d9d8dbd72ecf1f4215ba8e97cd7badb383b6" translate="yes" xml:space="preserve">
          <source>The standard interface that provides the framework for all &lt;code&gt;FilteredRowSet&lt;/code&gt; objects to describe their filters.</source>
          <target state="translated">すべての &lt;code&gt;FilteredRowSet&lt;/code&gt; オブジェクトがフィルターを記述するためのフレームワークを提供する標準インターフェース。</target>
        </trans-unit>
        <trans-unit id="f8f169d2bb832c35eba59bc410c0b85f0003b6f8" translate="yes" xml:space="preserve">
          <source>The standard interface to a DSA private key.</source>
          <target state="translated">DSA 秘密鍵の標準インターフェイスです。</target>
        </trans-unit>
        <trans-unit id="be4242d6a22a82129b32c761e9b997ab8bdb7b76" translate="yes" xml:space="preserve">
          <source>The standard interface to a DSA private key. DSA (Digital Signature Algorithm) is defined in NIST's FIPS-186.</source>
          <target state="translated">DSA 秘密鍵の標準インターフェースです。DSA(デジタル署名アルゴリズム)は、NISTのFIPS-186で定義されています。</target>
        </trans-unit>
        <trans-unit id="0aee232c28f9de3b58df1a19a8e2a72c95efd9f7" translate="yes" xml:space="preserve">
          <source>The standard italic posture.</source>
          <target state="translated">標準的なイタリック体勢。</target>
        </trans-unit>
        <trans-unit id="265e9fc158c49896c41933585c842cef5b8e987f" translate="yes" xml:space="preserve">
          <source>The standard layer, where most components go. This the bottommost layer.</source>
          <target state="translated">ほとんどのコンポーネントが入る標準レイヤー。これが一番下のレイヤーです。</target>
        </trans-unit>
        <trans-unit id="7b2b71d5aa7e1b0b260acaadc43d3221dce05731" translate="yes" xml:space="preserve">
          <source>The standard light weight.</source>
          <target state="translated">定番の軽量化。</target>
        </trans-unit>
        <trans-unit id="a8d8726b4a5a07328b176cca7d74f5e2a761a964" translate="yes" xml:space="preserve">
          <source>The standard mapping in the Java programming language for an SQL structured type.</source>
          <target state="translated">Javaプログラミング言語におけるSQL構造化型の標準的なマッピング。</target>
        </trans-unit>
        <trans-unit id="c2eeb32dafb015f6f93305e7066122591f181fc8" translate="yes" xml:space="preserve">
          <source>The standard mapping in the Java programming language for an SQL structured type. A &lt;code&gt;Struct&lt;/code&gt; object contains a value for each attribute of the SQL structured type that it represents. By default, an instance of&lt;code&gt;Struct&lt;/code&gt; is valid as long as the application has a reference to it.</source>
          <target state="translated">SQL構造化タイプのJavaプログラミング言語での標準マッピング。 &lt;code&gt;Struct&lt;/code&gt; オブジェクトは、それが表すSQL構造化型の各属性の値を含みます。デフォルトでは、 &lt;code&gt;Struct&lt;/code&gt; のインスタンスは、アプリケーションがそれを参照している限り有効です。</target>
        </trans-unit>
        <trans-unit id="c927c0ada9cba1ad53c2c1bf1aa34f20c5ec2c56" translate="yes" xml:space="preserve">
          <source>The standard mental model for a date is based on three concepts - year, month and day. These map onto the &lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; and &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; fields. Note that there is no reference to eras. The full model for a date requires four concepts - era, year, month and day. These map onto the &lt;code&gt;ERA&lt;/code&gt;, &lt;code&gt;YEAR_OF_ERA&lt;/code&gt;, &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; and &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; fields. Whether this field or &lt;code&gt;YEAR&lt;/code&gt; is used depends on which mental model is being used. See &lt;a href=&quot;../chrono/chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt; for more discussion on this topic.</source>
          <target state="translated">日付の標準メンタルモデルは、年、月、日の3つの概念に基づいています。これらは、 &lt;code&gt;YEAR&lt;/code&gt; 、 &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; および &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; フィールドにマッピングされます。時代への言及がないことに注意してください。日付の完全なモデルには、時代、年、月、日という4つの概念が必要です。これらは、 &lt;code&gt;ERA&lt;/code&gt; 、 &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; 、 &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; 、 &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; フィールドにマッピングされます。このフィールドまたは &lt;code&gt;YEAR&lt;/code&gt; のどちらを使用するかは、使用されているメンタルモデルによって異なります。このトピックの詳細については、&lt;a href=&quot;../chrono/chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="552969cac10043f5eb1e8db38405b389d7505393" translate="yes" xml:space="preserve">
          <source>The standard mental model for a date is based on three concepts - year, month and day. These map onto the &lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; and &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; fields. Note that there is no reference to eras. The full model for a date requires four concepts - era, year, month and day. These map onto the &lt;code&gt;ERA&lt;/code&gt;, &lt;code&gt;YEAR_OF_ERA&lt;/code&gt;, &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; and &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; fields. Whether this field or &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; is used depends on which mental model is being used. See &lt;a href=&quot;../chrono/chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt; for more discussion on this topic.</source>
          <target state="translated">日付の標準メンタルモデルは、年、月、日の3つの概念に基づいています。これらは、 &lt;code&gt;YEAR&lt;/code&gt; 、 &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; および &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; フィールドにマッピングされます。時代への言及がないことに注意してください。日付の完全なモデルには、時代、年、月、日という4つの概念が必要です。これらは、 &lt;code&gt;ERA&lt;/code&gt; 、 &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; 、 &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; 、 &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; フィールドにマッピングされます。このフィールドまたは &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; が使用されるかどうかは、使用されているメンタルモデルによって異なります。このトピックの詳細については、&lt;a href=&quot;../chrono/chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3661c18690ae34088219c95d1f642f9094ca6650" translate="yes" xml:space="preserve">
          <source>The standard posture, upright.</source>
          <target state="translated">標準的な姿勢、直立姿勢。</target>
        </trans-unit>
        <trans-unit id="bcac68430abf1f9b59c3fc0c0ced10c89898d656" translate="yes" xml:space="preserve">
          <source>The standard posture, upright. This is the default value for &lt;code&gt;POSTURE&lt;/code&gt;.</source>
          <target state="translated">標準姿勢、直立。これは &lt;code&gt;POSTURE&lt;/code&gt; のデフォルト値です。</target>
        </trans-unit>
        <trans-unit id="4204acbf3d5f3f85ee9f30f3059d6be897c6a196" translate="yes" xml:space="preserve">
          <source>The standard property-id for a synchronization provider implementation name.</source>
          <target state="translated">同期化プロバイダの実装名の標準プロパティID。</target>
        </trans-unit>
        <trans-unit id="80bb8e7243eb06e9dd0a04e994954134803a7ab1" translate="yes" xml:space="preserve">
          <source>The standard property-id for a synchronization provider implementation vendor name.</source>
          <target state="translated">同期化プロバイダ実装ベンダー名の標準プロパティID。</target>
        </trans-unit>
        <trans-unit id="f3300fc7bb9dd6b49894aeba609ac649a7e0edb1" translate="yes" xml:space="preserve">
          <source>The standard property-id for a synchronization provider implementation version tag.</source>
          <target state="translated">同期化プロバイダの実装バージョンタグの標準プロパティID。</target>
        </trans-unit>
        <trans-unit id="f924447dc30c0a207a7a8dd003998719d641a65d" translate="yes" xml:space="preserve">
          <source>The standard reference implementation for the &lt;code&gt;CachedRowSet&lt;/code&gt; interface uses a &lt;code&gt;TreeMap&lt;/code&gt; object for the rowset, with the values in each row being contained in &lt;code&gt;Vector&lt;/code&gt; objects. It is expected that most implementations will do the same.</source>
          <target state="translated">&lt;code&gt;CachedRowSet&lt;/code&gt; インターフェイスの標準リファレンス実装では、行セットに &lt;code&gt;TreeMap&lt;/code&gt; オブジェクトを使用し、各行の値は &lt;code&gt;Vector&lt;/code&gt; オブジェクトに含まれています。ほとんどの実装で同じことが行われると予想されます。</target>
        </trans-unit>
        <trans-unit id="44003f488ebc1e70329a9b7e5361903f72e0de08" translate="yes" xml:space="preserve">
          <source>The standard reference implementation uses a &lt;code&gt;Vector&lt;/code&gt; object to contain the column values, and it is expected that most implementations will do the same. If a &lt;code&gt;Vector&lt;/code&gt; object is used, it size must be exactly equal to the number of rows in this &lt;code&gt;CachedRowSet&lt;/code&gt; object.</source>
          <target state="translated">標準のリファレンス実装では、 &lt;code&gt;Vector&lt;/code&gt; オブジェクトを使用して列の値が含まれ、ほとんどの実装でも同じことが期待されます。 &lt;code&gt;Vector&lt;/code&gt; オブジェクトを使用する場合、そのサイズは、この &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトの行数と正確に等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="5a269f562c7ddcb5223b4c729ca3aacff15045f7" translate="yes" xml:space="preserve">
          <source>The standard set of non-localized decimal style symbols.</source>
          <target state="translated">ローカライズされていない10進スタイルのシンボルの標準セット。</target>
        </trans-unit>
        <trans-unit id="2aa618fb16592d9504ead37dd1498e07dc1eb2fd" translate="yes" xml:space="preserve">
          <source>The standard target names for an Authentication Permission are:</source>
          <target state="translated">認証許可の標準的なターゲット名は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="085376bdd00c3589b2477d9a9b7e25e5aa764bdf" translate="yes" xml:space="preserve">
          <source>The standard text outputting methods use the localized text in the JDK. This method allows that text to be specified directly. The supplied map is not validated by the builder to ensure that formatting or parsing is possible, thus an invalid map may throw an error during later use.</source>
          <target state="translated">標準のテキスト出力方法では、JDK内のローカライズされたテキストを使用します。このメソッドでは、そのテキストを直接指定することができます。提供されたマップは、フォーマットやパースが可能であることを確認するためにビルダによって検証されないため、無効なマップは後で使用する際にエラーを投げる可能性があります。</target>
        </trans-unit>
        <trans-unit id="ace8ff3c243593fda8f90cc8a3f288d71a11483d" translate="yes" xml:space="preserve">
          <source>The standard value of the propertyName as fired from a BeanContext or other source of PropertyChangeEvents.</source>
          <target state="translated">BeanContextまたは他のPropertyChangeEventsのソースから発行されるPropertyNameの標準値。</target>
        </trans-unit>
        <trans-unit id="49ec7e4579c545f03b2dbae2595c4136e74f5f2a" translate="yes" xml:space="preserve">
          <source>The standard weight.</source>
          <target state="translated">標準的な重さです。</target>
        </trans-unit>
        <trans-unit id="062b0e97b7470f28f4677451830d828c09857342" translate="yes" xml:space="preserve">
          <source>The standard weight. This is the default value for &lt;code&gt;WEIGHT&lt;/code&gt;.</source>
          <target state="translated">標準重量。これは、 &lt;code&gt;WEIGHT&lt;/code&gt; のデフォルト値です。</target>
        </trans-unit>
        <trans-unit id="5fa2e7b7afa217d5160022594a1240084ec90835" translate="yes" xml:space="preserve">
          <source>The standard width.</source>
          <target state="translated">標準的な幅です。</target>
        </trans-unit>
        <trans-unit id="1ec1dd1d6de288f3d7a0a8ac09f8cd6fa6f29d04" translate="yes" xml:space="preserve">
          <source>The standard width. This is the default value for &lt;code&gt;WIDTH&lt;/code&gt;.</source>
          <target state="translated">標準幅。これは &lt;code&gt;WIDTH&lt;/code&gt; のデフォルト値です。</target>
        </trans-unit>
        <trans-unit id="f3bed9164e92a7973b9cbcd9ad79594c005f0947" translate="yes" xml:space="preserve">
          <source>The start and end points are &lt;code&gt;this&lt;/code&gt; and the specified date. The result will be negative if the end is before the start. The negative sign will be the same in each of year, month and day.</source>
          <target state="translated">開始点と終了点は &lt;code&gt;this&lt;/code&gt; と指定された日付です。終了が開始の前にある場合、結果は負になります。負の符号は、年、月、日で同じになります。</target>
        </trans-unit>
        <trans-unit id="3c2d246e90e00803aeb29283b1b8bc16d249d5bc" translate="yes" xml:space="preserve">
          <source>The start argument must be nonnegative, and not greater than &lt;code&gt;end&lt;/code&gt;.</source>
          <target state="translated">開始引数は負ではなく、 &lt;code&gt;end&lt;/code&gt; 以下でなければなりません。</target>
        </trans-unit>
        <trans-unit id="a4ddf7bb81f0c34d9260c89803dda3e7e413e128" translate="yes" xml:space="preserve">
          <source>The start date is included, but the end date is not. The period is calculated by removing complete months, then calculating the remaining number of days, adjusting to ensure that both have the same sign. The number of months is then normalized into years and months based on a 12 month year. A month is considered to be complete if the end day-of-month is greater than or equal to the start day-of-month. For example, from &lt;code&gt;2010-01-15&lt;/code&gt; to &lt;code&gt;2011-03-18&lt;/code&gt; is &quot;1 year, 2 months and 3 days&quot;.</source>
          <target state="translated">開始日は含まれますが、終了日は含まれません。期間は、完全な月を削除してから残りの日数を計算し、両方が同じ符号になるように調整して計算されます。月数は、12か月の年に基づいて年と月に正規化されます。終了日が開始日以上の場合、月は完全であると見なされます。たとえば、 &lt;code&gt;2010-01-15&lt;/code&gt; から &lt;code&gt;2011-03-18&lt;/code&gt; は「1年2か月3日」です。</target>
        </trans-unit>
        <trans-unit id="6620cb9be5fc56436fc3a7c1b18ff6874dd29e0c" translate="yes" xml:space="preserve">
          <source>The start date is included, but the end date is not. The period is calculated by removing complete months, then calculating the remaining number of days, adjusting to ensure that both have the same sign. The number of months is then split into years and months based on a 12 month year. A month is considered if the end day-of-month is greater than or equal to the start day-of-month. For example, from &lt;code&gt;2010-01-15&lt;/code&gt; to &lt;code&gt;2011-03-18&lt;/code&gt; is one year, two months and three days.</source>
          <target state="translated">開始日は含まれますが、終了日は含まれません。期間は、完全な月を削除してから残りの日数を計算し、両方が同じ符号になるように調整して計算されます。月数は、12か月の年に基づいて年と月に分割されます。終了日が開始日以上の場合、月が考慮されます。たとえば、 &lt;code&gt;2010-01-15&lt;/code&gt; から &lt;code&gt;2011-03-18&lt;/code&gt; は、1年、2か月、3日です。</target>
        </trans-unit>
        <trans-unit id="7220f597737d970989890a2427aecffcbf28c9bf" translate="yes" xml:space="preserve">
          <source>The start date is included, but the end date is not. The period is calculated using &lt;a href=&quot;chronolocaldate#until(java.time.chrono.ChronoLocalDate)&quot;&gt;&lt;code&gt;ChronoLocalDate.until(ChronoLocalDate)&lt;/code&gt;&lt;/a&gt;. As such, the calculation is chronology specific.</source>
          <target state="translated">開始日は含まれていますが、終了日は含まれていません。期間は、&lt;a href=&quot;chronolocaldate#until(java.time.chrono.ChronoLocalDate)&quot;&gt; &lt;code&gt;ChronoLocalDate.until(ChronoLocalDate)&lt;/code&gt; &lt;/a&gt;を使用して計算されます。そのため、計算は年表に固有です。</target>
        </trans-unit>
        <trans-unit id="9238c2af9e0839f3491092fc2fe2b2c12cadecf1" translate="yes" xml:space="preserve">
          <source>The start date is included, but the end date is not. The period is calculated using &lt;a href=&quot;chronolocaldate#until-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;ChronoLocalDate.until(ChronoLocalDate)&lt;/code&gt;&lt;/a&gt;. As such, the calculation is chronology specific.</source>
          <target state="translated">開始日は含まれますが、終了日は含まれません。期間は&lt;a href=&quot;chronolocaldate#until-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;ChronoLocalDate.until(ChronoLocalDate)&lt;/code&gt; &lt;/a&gt;を使用して計算されます。そのため、計算は年表に固有です。</target>
        </trans-unit>
        <trans-unit id="4616505c5d1d5433c8afbd259a8f16eac5343c68" translate="yes" xml:space="preserve">
          <source>The start index of the text sequence.</source>
          <target state="translated">テキストシーケンスの開始インデックス。</target>
        </trans-unit>
        <trans-unit id="2da02a77743138ef2df4ac8502302bd010532bde" translate="yes" xml:space="preserve">
          <source>The start time must be set before starting the stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6becf8d53264f434379756115b0b786e11e4f8c2" translate="yes" xml:space="preserve">
          <source>The startDrag() method invokes the createDragSourceContext() method to instantiate an appropriate &lt;code&gt;DragSourceContext&lt;/code&gt; and associate the &lt;code&gt;DragSourceContextPeer&lt;/code&gt; with that.</source>
          <target state="translated">startDrag（）メソッドは、適切なインスタンス化するcreateDragSourceContext（）メソッド呼び出し &lt;code&gt;DragSourceContext&lt;/code&gt; のと関連付ける &lt;code&gt;DragSourceContextPeer&lt;/code&gt; それとを。</target>
        </trans-unit>
        <trans-unit id="82e2ccda6d83bc11eba880fd5d75e0aa357c29cd" translate="yes" xml:space="preserve">
          <source>The starting angle of the arc in degrees.</source>
          <target state="translated">弧の開始角度を度単位で表したものです。</target>
        </trans-unit>
        <trans-unit id="2264eaa8f12a8a3d18c204a6414263d50eec329f" translate="yes" xml:space="preserve">
          <source>The starting point of this matcher's region</source>
          <target state="translated">このマッチャーの領域の出発点</target>
        </trans-unit>
        <trans-unit id="711145c27ccf3166aa36ebb810ced05b44da407a" translate="yes" xml:space="preserve">
          <source>The state factories tried must each implement either &lt;code&gt;StateFactory&lt;/code&gt; or &lt;code&gt;DirStateFactory&lt;/code&gt;. If it implements &lt;code&gt;DirStateFactory&lt;/code&gt;, then &lt;code&gt;DirStateFactory.getStateToBind()&lt;/code&gt; is called; otherwise, &lt;code&gt;StateFactory.getStateToBind()&lt;/code&gt; is called.</source>
          <target state="translated">試行される状態ファクトリは、それぞれ &lt;code&gt;StateFactory&lt;/code&gt; または &lt;code&gt;DirStateFactory&lt;/code&gt; を実装する必要があります。 &lt;code&gt;DirStateFactory&lt;/code&gt; を実装している場合は、 &lt;code&gt;DirStateFactory.getStateToBind()&lt;/code&gt; が呼び出されます。それ以外の場合は、 &lt;code&gt;StateFactory.getStateToBind()&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="069364d5e2bc01251c39eefbdac8ec561989f08f" translate="yes" xml:space="preserve">
          <source>The state information after the edit</source>
          <target state="translated">編集後の状態情報</target>
        </trans-unit>
        <trans-unit id="78b85e5c07d69b00d4a00829691f1844f46ca899" translate="yes" xml:space="preserve">
          <source>The state information prior to the edit</source>
          <target state="translated">編集前の状態情報</target>
        </trans-unit>
        <trans-unit id="b4b4593a62342b2b46d5d7ee91609ae7dd334526" translate="yes" xml:space="preserve">
          <source>The state maintained by an instance of &lt;code&gt;ImageReadParam&lt;/code&gt; is independent of any particular image being decoded. When actual decoding takes place, the values set in the read param are combined with the actual properties of the image being decoded from the stream and the destination &lt;code&gt;BufferedImage&lt;/code&gt; that will receive the decoded pixel data. For example, the source region set using &lt;code&gt;setSourceRegion&lt;/code&gt; will first be intersected with the actual valid source area. The result will be translated by the value returned by &lt;code&gt;getDestinationOffset&lt;/code&gt;, and the resulting rectangle intersected with the actual valid destination area to yield the destination area that will be written.</source>
          <target state="translated">&lt;code&gt;ImageReadParam&lt;/code&gt; のインスタンスによって維持される状態は、デコードされる特定の画像とは無関係です。実際のデコードが行われると、読み取りパラメーターに設定された値が、ストリームからデコードされる画像の実際のプロパティと、デコードされたピクセルデータを受け取る宛先の &lt;code&gt;BufferedImage&lt;/code&gt; と組み合わされます。たとえば、 &lt;code&gt;setSourceRegion&lt;/code&gt; を使用して設定されたソース領域は、最初に実際の有効なソース領域と交差します。結果は &lt;code&gt;getDestinationOffset&lt;/code&gt; によって返された値によって変換され、結果の長方形は実際の有効な宛先領域と交差して、書き込まれる宛先領域を生成します。</target>
        </trans-unit>
        <trans-unit id="3a932e6e75d4e4ee973a0e76a7f43125497f0c01" translate="yes" xml:space="preserve">
          <source>The state moves from readable to not readable once free() or any of the reading APIs are called: getBinaryStream(), getCharacterStream(), getSource(), and getString(). Implementations may also change the state to not writable when this occurs.</source>
          <target state="translated">free()または getBinaryStream()、getCharacterStream()、getSource()、および getString()のいずれかの読み取り API が呼び出されると、状態は読み取り可能な状態から読み取り不可能な状態に移行します。これが発生した場合、実装は状態を書き込み不可に変更することもできます。</target>
        </trans-unit>
        <trans-unit id="5f6f7bffc98d1e8352d937b1d9d3e6a929292204" translate="yes" xml:space="preserve">
          <source>The state moves from writable to not writable once free() or any of the writing APIs are called: setBinaryStream(), setCharacterStream(), setResult(), and setString(). Implementations may also change the state to not readable when this occurs.</source>
          <target state="translated">free()または setBinaryStream()、setCharacterStream()、setResult()、および setString()のいずれかの書き込み API が呼び出されると、状態は書き込み可能な状態から書き込み不可能な状態に移行します。これが発生した場合、実装は状態を書き込み不可に変更することもできます。</target>
        </trans-unit>
        <trans-unit id="5f123d14f73abf8b927161bc953361f29bebc2d2" translate="yes" xml:space="preserve">
          <source>The state of each match result passed to the replacer function is guaranteed to be constant only for the duration of the replacer function call and only if the replacer function does not modify this matcher's state.</source>
          <target state="translated">置換関数に渡された各マッチ結果の状態は、置換関数が呼び出されている間のみ一定であることが保証されており、置換関数がこのマッチャの状態を変更しなかった場合に限ります。</target>
        </trans-unit>
        <trans-unit id="861a0f2ac6e69c9f80d5a917a538314fa0c92b1d" translate="yes" xml:space="preserve">
          <source>The state of one method invocation on a thread's call stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0481dbb6b7adfb17cade428ef1369a516f361a" translate="yes" xml:space="preserve">
          <source>The state of one method invocation on a thread's call stack. As a thread executes, stack frames are pushed and popped from its call stack as methods are invoked and then return. A StackFrame mirrors one such frame from a target VM at some point in its thread's execution. The call stack is, then, simply a List of StackFrame objects. The call stack can be obtained any time a thread is suspended through a call to &lt;a href=&quot;threadreference#frames()&quot;&gt;&lt;code&gt;ThreadReference.frames()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f87189b7cffe5c4bdbf9a74576a5752597c030" translate="yes" xml:space="preserve">
          <source>The state of resulting file attribute view is intimately connected to this directory stream. Once the directory stream &lt;a href=&quot;../../io/closeable#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then all methods to read or update attributes will throw &lt;a href=&quot;closeddirectorystreamexception&quot;&gt;&lt;code&gt;ClosedDirectoryStreamException&lt;/code&gt;&lt;/a&gt;. The file is not required to exist at the time that the file attribute view is created but methods to read or update attributes of the file will fail when invoked and the file does not exist.</source>
          <target state="translated">結果のファイル属性ビューの状態は、このディレクトリストリームに密接に関連しています。ディレクトリストリームが&lt;a href=&quot;../../io/closeable#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;、属性を読み取ったり更新したりするすべてのメソッドが&lt;a href=&quot;closeddirectorystreamexception&quot;&gt; &lt;code&gt;ClosedDirectoryStreamException&lt;/code&gt; &lt;/a&gt;をスローします。ファイル属性ビューの作成時にファイルが存在する必要はありませんが、ファイルの属性を読み取ったり更新したりするメソッドは、呼び出されたときに失敗し、ファイルは存在しません。</target>
        </trans-unit>
        <trans-unit id="31371db7bcedb5e6ef0fa2a822080261021c1cbf" translate="yes" xml:space="preserve">
          <source>The state of resulting file attribute view is intimately connected to this directory stream. Once the directory stream &lt;a href=&quot;../../io/closeable#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then all methods to read or update attributes will throw &lt;a href=&quot;closeddirectorystreamexception&quot;&gt;&lt;code&gt;ClosedDirectoryStreamException&lt;/code&gt;&lt;/a&gt;. The file is not required to exist at the time that the file attribute view is created but methods to read or update attributes of the file will fail when invoked and the file does not exist.</source>
          <target state="translated">結果のファイル属性ビューの状態は、このディレクトリストリームと密接に関連しています。ディレクトリストリームが&lt;a href=&quot;../../io/closeable#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;、属性を読み取りまたは更新するすべてのメソッドが&lt;a href=&quot;closeddirectorystreamexception&quot;&gt; &lt;code&gt;ClosedDirectoryStreamException&lt;/code&gt; &lt;/a&gt;をスローします。ファイルは、ファイル属性ビューの作成時に存在している必要はありませんが、ファイルの属性を読み取りまたは更新するメソッドは、呼び出されたときに失敗し、ファイルが存在しません。</target>
        </trans-unit>
        <trans-unit id="5387502d22d451f2fcf83887e20653a2840e5163" translate="yes" xml:space="preserve">
          <source>The state of resulting file attribute view is intimately connected to this directory stream. Once the directory stream is &lt;a href=&quot;../../io/closeable#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then all methods to read or update attributes will throw &lt;a href=&quot;closeddirectorystreamexception&quot;&gt;&lt;code&gt;ClosedDirectoryStreamException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">結果のファイル属性ビューの状態は、このディレクトリストリームに密接に関連しています。ディレクトリストリームが&lt;a href=&quot;../../io/closeable#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;、属性を読み取ったり更新したりするすべてのメソッドが&lt;a href=&quot;closeddirectorystreamexception&quot;&gt; &lt;code&gt;ClosedDirectoryStreamException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="6e75ea05d69038d832d8131b3848e4927b08478a" translate="yes" xml:space="preserve">
          <source>The state of resulting file attribute view is intimately connected to this directory stream. Once the directory stream is &lt;a href=&quot;../../io/closeable#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then all methods to read or update attributes will throw &lt;a href=&quot;closeddirectorystreamexception&quot;&gt;&lt;code&gt;ClosedDirectoryStreamException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">結果のファイル属性ビューの状態は、このディレクトリストリームと密接に関連しています。ディレクトリストリームが&lt;a href=&quot;../../io/closeable#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;、属性の読み取りまたは更新を行うすべてのメソッドが&lt;a href=&quot;closeddirectorystreamexception&quot;&gt; &lt;code&gt;ClosedDirectoryStreamException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="5cfab20243a8ae6cc96b634df30cc6e006330263" translate="yes" xml:space="preserve">
          <source>The state of the horizontal and vertical scrollbars is represented by two &lt;code&gt;ScrollPaneAdjustable&lt;/code&gt; objects (one for each dimension) which implement the &lt;code&gt;Adjustable&lt;/code&gt; interface. The API provides methods to access those objects such that the attributes on the Adjustable object (such as unitIncrement, value, etc.) can be manipulated.</source>
          <target state="translated">水平スクロールバーと垂直スクロールバーの状態は、 &lt;code&gt;Adjustable&lt;/code&gt; インターフェイスを実装する2つの &lt;code&gt;ScrollPaneAdjustable&lt;/code&gt; オブジェクト（各ディメンションに1つ）で表されます。APIは、Adjustableオブジェクトの属性（unitIncrement、valueなど）を操作できるように、これらのオブジェクトにアクセスするためのメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="996e9184ffea209eb07129d46d0cbe21a541d384" translate="yes" xml:space="preserve">
          <source>The state of the match result passed to the replacer function is guaranteed to be constant only for the duration of the replacer function call and only if the replacer function does not modify this matcher's state.</source>
          <target state="translated">置換関数に渡されたマッチ結果の状態は、置換関数が呼び出されている間のみ一定であることが保証されており、置換関数がこのマッチャの状態を変更しない場合に限ります。</target>
        </trans-unit>
        <trans-unit id="5df4fed0eb737b7e2f38a8fe3aee9d1a9f382989" translate="yes" xml:space="preserve">
          <source>The state of the modifier keys.</source>
          <target state="translated">修飾キーの状態。</target>
        </trans-unit>
        <trans-unit id="98da643dc29593f616d4b328dffe394f8b15ab99" translate="yes" xml:space="preserve">
          <source>The state of the modifier keys. This is replaced with InputEvent.getModifiers() In java 1.1 MouseEvent and KeyEvent are subclasses of InputEvent.</source>
          <target state="translated">モディファイアのキーの状態を表します。これはInputEvent.getModifiers()に置き換えられます。 java 1.1では、MouseEventとKeyEventはInputEventのサブクラスです。</target>
        </trans-unit>
        <trans-unit id="e2b4f9494871b832aa6cdc89d8afd5085d887c4d" translate="yes" xml:space="preserve">
          <source>The state of the tree selection is characterized by a set of TreePaths, and optionally a set of integers. The mapping from TreePath to integer is done by way of an instance of RowMapper. It is not necessary for a TreeSelectionModel to have a RowMapper to correctly operate, but without a RowMapper &lt;code&gt;getSelectionRows&lt;/code&gt; will return null.</source>
          <target state="translated">ツリー選択の状態は、TreePathのセット、およびオプションで整数のセットによって特徴付けられます。TreePathから整数へのマッピングは、RowMapperのインスタンスを介して行われます。TreeSelectionModelが正しく動作するためにRowMapperを持っている必要はありませんが、RowMapperがないと &lt;code&gt;getSelectionRows&lt;/code&gt; はnullを返します。</target>
        </trans-unit>
        <trans-unit id="1dd113847fce5d615aef061976b5b5490ed246b1" translate="yes" xml:space="preserve">
          <source>The static methods of this class are also guaranteed to be thread-safe. Multiple threads may concurrently invoke the static methods defined in this class with no ill effects.</source>
          <target state="translated">このクラスの静的メソッドはスレッドセーフであることも保証されています。複数のスレッドがこのクラスで定義されている静的メソッドを同時に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="cd0f94f9998daea410fa7e45671e8cee561746d9" translate="yes" xml:space="preserve">
          <source>The static methods of this class are guaranteed to be thread-safe. Multiple threads may concurrently invoke the static methods defined in this class with no ill effects.</source>
          <target state="translated">このクラスの静的メソッドはスレッドセーフであることが保証されています。複数のスレッドがこのクラスで定義されている静的メソッドを同時に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="32f29a8577aa7fa5da666083e0fd1a58f4e6d820" translate="yes" xml:space="preserve">
          <source>The status before the transition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02a1b12a0469601ec44897d75008b5d8295adbb" translate="yes" xml:space="preserve">
          <source>The status before the transition. If this event describes a Snippet creation return &lt;a href=&quot;snippet.status#NONEXISTENT&quot;&gt;&lt;code&gt;NONEXISTENT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453f0a5aaaeaa1b3ec705217a056ecbeb4f2af9e" translate="yes" xml:space="preserve">
          <source>The status is allowed.</source>
          <target state="translated">ステータスが認められています。</target>
        </trans-unit>
        <trans-unit id="b19b7fa28bfd0ac50416748ffc0c43c6c19d76ee" translate="yes" xml:space="preserve">
          <source>The status is rejected.</source>
          <target state="translated">状態は却下されています。</target>
        </trans-unit>
        <trans-unit id="43acb129e0f044bbc46043461b48630e54dab85d" translate="yes" xml:space="preserve">
          <source>The status is undecided, not allowed and not rejected.</source>
          <target state="translated">状態は未決定で、許されず、却下されることもない。</target>
        </trans-unit>
        <trans-unit id="c8c42310ccefa275fea074e407b370d922b16a8c" translate="yes" xml:space="preserve">
          <source>The status of a check on the class, array length, number of references, depth, and stream size.</source>
          <target state="translated">クラス、配列の長さ、参照数、深さ、ストリームサイズのチェックの状態。</target>
        </trans-unit>
        <trans-unit id="0914f7bca27a68099a07b4e6076d13b547cbe3fd" translate="yes" xml:space="preserve">
          <source>The stax.properties file is read only once by the implementation and its values are then cached for future use. If the file does not exist when the first attempt is made to read from it, no further attempts are made to check for its existence. It is not possible to change the value of any property in stax.properties after it has been read for the first time.</source>
          <target state="translated">stax.propertiesファイルはインプリメンテーションによって一度だけ読み取られ、その値は将来の使用のためにキャッシュされます。ファイルからの読み取りを最初に試みたときにファイルが存在しない場合、その存在を確認するためにそれ以上の試みは行われません。初めて読み込まれた後に、stax.propertiesのプロパティの値を変更することはできません。</target>
        </trans-unit>
        <trans-unit id="b80b91b73f97f322ab33c92b0bd0b2d998475afe" translate="yes" xml:space="preserve">
          <source>The step and pred functions are then executed, in clause order (step before pred), until a pred function returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">次に、step関数とpred関数が、pred関数が &lt;code&gt;false&lt;/code&gt; を返すまで、句の順序（predの前のステップ）で実行されます。</target>
        </trans-unit>
        <trans-unit id="894a59007f0696d713a79c9ba3e2b5d5cb14c470" translate="yes" xml:space="preserve">
          <source>The steps in the rendering process are:</source>
          <target state="translated">レンダリングプロセスのステップは</target>
        </trans-unit>
        <trans-unit id="c14f9f8f60727625d22b3850782fe64ea87452ab" translate="yes" xml:space="preserve">
          <source>The stipulation above does not imply that sets must accept all elements; sets may refuse to add any particular element, including &lt;code&gt;null&lt;/code&gt;, and throw an exception, as described in the specification for &lt;a href=&quot;collection#add(E)&quot;&gt;&lt;code&gt;Collection.add&lt;/code&gt;&lt;/a&gt;. Individual set implementations should clearly document any restrictions on the elements that they may contain.</source>
          <target state="translated">上記の規定は、セットがすべての要素を受け入れる必要があることを意味するものではありません。&lt;a href=&quot;collection#add(E)&quot;&gt; &lt;code&gt;Collection.add&lt;/code&gt; &lt;/a&gt;の仕様で説明されているように、セットは &lt;code&gt;null&lt;/code&gt; を含む特定の要素の追加を拒否し、例外をスローする場合があります。個々のセットの実装では、含まれる可能性のある要素に対する制限を明確に文書化する必要があります。</target>
        </trans-unit>
        <trans-unit id="8af2436810c570bd5737c0e2bb02a5d795441443" translate="yes" xml:space="preserve">
          <source>The stipulation above does not imply that sets must accept all elements; sets may refuse to add any particular element, including &lt;code&gt;null&lt;/code&gt;, and throw an exception, as described in the specification for &lt;a href=&quot;collection#add-E-&quot;&gt;&lt;code&gt;Collection.add&lt;/code&gt;&lt;/a&gt;. Individual set implementations should clearly document any restrictions on the elements that they may contain.</source>
          <target state="translated">上記の規定は、セットがすべての要素を受け入れなければならないことを意味しません。&lt;a href=&quot;collection#add-E-&quot;&gt; &lt;code&gt;Collection.add&lt;/code&gt; &lt;/a&gt;の仕様で説明されているように、セットは &lt;code&gt;null&lt;/code&gt; を含む特定の要素の追加を拒否し、例外をスローする場合があります。個々のセットの実装では、含まれる可能性のある要素に対する制限を明確に文書化する必要があります。</target>
        </trans-unit>
        <trans-unit id="18eb68b1ed315d63fa4df9e04e256a50303f9665" translate="yes" xml:space="preserve">
          <source>The stored chain is cloned before being returned.</source>
          <target state="translated">保存されたチェーンは、返却される前にクローン化されます。</target>
        </trans-unit>
        <trans-unit id="34211847f3a2164208058d0523645bdef1169daa" translate="yes" xml:space="preserve">
          <source>The stored derived color</source>
          <target state="translated">保存されている派生色</target>
        </trans-unit>
        <trans-unit id="59fa77a75631a5fd04013364bcf5c35eed6bf5bc" translate="yes" xml:space="preserve">
          <source>The strategy used to shut down the application, if Sudden Termination is not enabled.</source>
          <target state="translated">Sudden Termination が有効になっていない場合に、アプリケーションをシャットダウンするために使用されるストラテジー。</target>
        </trans-unit>
        <trans-unit id="6a20537f8d5d92c9cff89f8fb6c2858031b1dd68" translate="yes" xml:space="preserve">
          <source>The stream binds to this bit set when the terminal stream operation commences (specifically, the spliterator for the stream is &lt;a href=&quot;spliterator#binding&quot;&gt;&lt;em&gt;late-binding&lt;/em&gt;&lt;/a&gt;). If the bit set is modified during that operation then the result is undefined.</source>
          <target state="translated">ストリームは、ターミナルストリーム操作の開始時にこのビットセットにバインドされます（具体的には、ストリームのスプリッターは&lt;a href=&quot;spliterator#binding&quot;&gt;&lt;em&gt;遅延バインディングです&lt;/em&gt;&lt;/a&gt;）。その操作中にビットセットが変更された場合、結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="b503c50c6ec2a853d246bef99b17e237b1f62fe3" translate="yes" xml:space="preserve">
          <source>The stream binds to this sequence when the terminal stream operation commences (specifically, for mutable sequences the spliterator for the stream is &lt;a href=&quot;../util/spliterator#binding&quot;&gt;&lt;em&gt;late-binding&lt;/em&gt;&lt;/a&gt;). If the sequence is modified during that operation then the result is undefined.</source>
          <target state="translated">ストリームは、ターミナルストリーム操作の開始時にこのシーケンスにバインドします（具体的には、可変シーケンスの場合、ストリームのスプリッターは&lt;a href=&quot;../util/spliterator#binding&quot;&gt;&lt;em&gt;遅延バインディングです&lt;/em&gt;&lt;/a&gt;）。その操作中にシーケンスが変更された場合、結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="284a200aa5c754806caf07fbf13e99a88b0c7015" translate="yes" xml:space="preserve">
          <source>The stream is</source>
          <target state="translated">流れは</target>
        </trans-unit>
        <trans-unit id="0f4127d1899727942c90922302e4fcbdc49bed7d" translate="yes" xml:space="preserve">
          <source>The stream is parallel;</source>
          <target state="translated">流れは平行しています。</target>
        </trans-unit>
        <trans-unit id="18c2dad420890c0c93e56bc71847c1ffc91d517a" translate="yes" xml:space="preserve">
          <source>The stream is written using the ISO 8859-1 character encoding.</source>
          <target state="translated">ストリームは、ISO 8859-1 文字エンコーディングを使用して書き込まれます。</target>
        </trans-unit>
        <trans-unit id="cf2f279f616bcf76e47ab21d81f5d9638809710c" translate="yes" xml:space="preserve">
          <source>The stream may contain some data outside the specified range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8981351805e6fb1fc8a0c57d5496e2d24e17c129" translate="yes" xml:space="preserve">
          <source>The stream number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40953f480e1f2608bd2829d4c5ca6a88b49f29cb" translate="yes" xml:space="preserve">
          <source>The stream of strings computed by splitting the input around matches of this pattern</source>
          <target state="translated">このパターンにマッチする入力を中心に分割して計算される文字列のストリーム.</target>
        </trans-unit>
        <trans-unit id="0278f0c3b2832857f3b5d471e56fa1f750974135" translate="yes" xml:space="preserve">
          <source>The stream position is left at its prior position upon exit from this method.</source>
          <target state="translated">このメソッドを終了すると、ストリームの位置は前の位置のままになります。</target>
        </trans-unit>
        <trans-unit id="0c88da049e966b7fa1b0336d227d0469c10d044c" translate="yes" xml:space="preserve">
          <source>The stream returned by this method contains each substring of the input sequence that is terminated by another subsequence that matches this pattern or is terminated by the end of the input sequence. The substrings in the stream are in the order in which they occur in the input. Trailing empty strings will be discarded and not encountered in the stream.</source>
          <target state="translated">このメソッドによって返されるストリームは、入力シーケンスの各部分文字列を含み、このパターンにマッチする別の部分文字列によって終端されるか、または入力シーケンスの終端によって終端される。ストリームに含まれる部分文字列は、入力の中で出現した順に並べられます。後続の空の文字列は破棄され、ストリームには含まれません。</target>
        </trans-unit>
        <trans-unit id="b6f6114953487ace92dd1c168418f7e9f095d3d0" translate="yes" xml:space="preserve">
          <source>The stream returned by this method contains the lines from this string in the order in which they occur.</source>
          <target state="translated">このメソッドが返すストリームには、この文字列の行が出現した順に含まれます。</target>
        </trans-unit>
        <trans-unit id="cc5a36b07837d8684881fc09793cf7774af9e41a" translate="yes" xml:space="preserve">
          <source>The stream will not be buffered, and it will not support the &lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../io/inputstream#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; methods. The stream will be safe for access by multiple concurrent threads. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">ストリームはバッファリングされず、&lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/inputstream#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;メソッドをサポートしません。ストリームは、複数の同時スレッドによるアクセスに対して安全になります。ストリームを閉じると、チャネルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="8035d3c148eb320bea2a1229c6025747c0adc1f8" translate="yes" xml:space="preserve">
          <source>The stream will not be buffered, and it will not support the &lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../io/inputstream#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; methods. The stream will be safe for access by multiple concurrent threads. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">ストリームはバッファリングされず、&lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/inputstream#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;メソッドをサポートしません。ストリームは、複数の同時スレッドによるアクセスに対して安全になります。ストリームを閉じると、チャネルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="bc7063010775a8a4dfbf6ea7c3f4fd8168851da4" translate="yes" xml:space="preserve">
          <source>The stream will not be buffered. The stream will be safe for access by multiple concurrent threads. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">ストリームはバッファリングされません。ストリームは、複数のスレッドが同時にアクセスしても安全です。ストリームを閉じると、チャンネルも閉じられます。</target>
        </trans-unit>
        <trans-unit id="635eea582878c3cee66666dcef47dae09ac40dc8" translate="yes" xml:space="preserve">
          <source>The stream-based methods have been removed from RFC 8353.</source>
          <target state="translated">ストリームベースのメソッドはRFC 8353から削除されました。</target>
        </trans-unit>
        <trans-unit id="1e0b7738c3889e14f5b400112462983b88473f42" translate="yes" xml:space="preserve">
          <source>The stream-based methods have been removed from RFC 8353. Use &lt;a href=&quot;#acceptSecContext(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;acceptSecContext(byte[], int, int)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">ストリームベースのメソッドはRFC8353から削除されました。代わりに&lt;a href=&quot;#acceptSecContext(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;acceptSecContext(byte[], int, int)&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="fdd1e4fc8cc236e807967eab1defe58a2d7fb81c" translate="yes" xml:space="preserve">
          <source>The stream-based methods have been removed from RFC 8353. Use &lt;a href=&quot;#getMIC(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;getMIC(byte[], int, int, MessageProp)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">ストリームベースのメソッドはRFC8353から削除されました。代わりに&lt;a href=&quot;#getMIC(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;getMIC(byte[], int, int, MessageProp)&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="75a1f54ce108d9e7d4e20f8e2e55c349191efa71" translate="yes" xml:space="preserve">
          <source>The stream-based methods have been removed from RFC 8353. Use &lt;a href=&quot;#initSecContext(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;initSecContext(byte[], int, int)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">ストリームベースのメソッドはRFC8353から削除されました。代わりに&lt;a href=&quot;#initSecContext(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;initSecContext(byte[], int, int)&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="837beaf6b0fd108bd6761b7a930f749f93c98a2f" translate="yes" xml:space="preserve">
          <source>The stream-based methods have been removed from RFC 8353. Use &lt;a href=&quot;#unwrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;unwrap(byte[], int, int, MessageProp)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">ストリームベースのメソッドはRFC8353から削除されました。代わりに&lt;a href=&quot;#unwrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;unwrap(byte[], int, int, MessageProp)&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="20e163f975ddc90067dad425a1a8436ac6312c00" translate="yes" xml:space="preserve">
          <source>The stream-based methods have been removed from RFC 8353. Use &lt;a href=&quot;#verifyMIC(byte%5B%5D,int,int,byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;verifyMIC(byte[], int, int, byte[], int, int, MessageProp)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">ストリームベースのメソッドはRFC8353から削除されました。代わりに&lt;a href=&quot;#verifyMIC(byte%5B%5D,int,int,byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;verifyMIC(byte[], int, int, byte[], int, int, MessageProp)&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="3311a132a16f8c1f01912c04e4d437b623872dab" translate="yes" xml:space="preserve">
          <source>The stream-based methods have been removed from RFC 8353. Use &lt;a href=&quot;#wrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;wrap(byte[], int, int, MessageProp)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">ストリームベースのメソッドはRFC8353から削除されました。代わりに&lt;a href=&quot;#wrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;wrap(byte[], int, int, MessageProp)&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="6e7c1e2a83cde4b74baace6a01266e9922cbc527" translate="yes" xml:space="preserve">
          <source>The stream-based methods of &lt;code&gt;GSSContext&lt;/code&gt; have been deprecated in Java SE 11. These methods have also been removed from &lt;a href=&quot;http://tools.ietf.org/html/rfc8353&quot;&gt; RFC 8353: Generic Security Service API Version 2: Java Bindings Update&lt;/a&gt; for the following reasons (see section 11): &quot;The overloaded methods of GSSContext that use input and output streams as the means to convey authentication and per-message GSS-API tokens as described in Section 5.15 of RFC 5653 are removed in this update as the wire protocol should be defined by an application and not a library. It's also impossible to implement these methods correctly when the token has no self-framing (where the end cannot be determined), or the library has no knowledge of the token format (for example, as a bridge talking to another GSS library)&quot;. These methods include &lt;a href=&quot;#initSecContext(java.io.InputStream,java.io.OutputStream)&quot;&gt;&lt;code&gt;initSecContext(InputStream, OutputStream)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#acceptSecContext(java.io.InputStream,java.io.OutputStream)&quot;&gt;&lt;code&gt;acceptSecContext(InputStream, OutputStream)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#wrap(java.io.InputStream,java.io.OutputStream,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;wrap(InputStream, OutputStream, MessageProp)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unwrap(java.io.InputStream,java.io.OutputStream,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;unwrap(InputStream, OutputStream, MessageProp)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getMIC(java.io.InputStream,java.io.OutputStream,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;getMIC(InputStream, OutputStream, MessageProp)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#verifyMIC(java.io.InputStream,java.io.InputStream,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;verifyMIC(InputStream, InputStream, MessageProp)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GSSContext&lt;/code&gt; のストリームベースのメソッドはJavaSE 11で非推奨になりました。これらのメソッドは、&lt;a href=&quot;http://tools.ietf.org/html/rfc8353&quot;&gt;RFC 8353&lt;/a&gt;からも削除されました。GenericSecurityServiceAPIバージョン2：Java Bindings Updateは、次の理由で更新されます（セクション11を参照）。 RFC 5653のセクション5.15で説明されているように認証およびメッセージごとのGSS-APIトークンを伝達する手段として入力ストリームと出力ストリームを使用するGSSContextは、ワイヤープロトコルがライブラリではなくアプリケーションによって定義される必要があるため、このアップデートでは削除されています。また、トークンにセルフフレーミングがない場合（終了を判別できない場合）、またはライブラリにトークン形式の知識がない場合（たとえば、別のGSSライブラリと通信するブリッジとして）、これらのメソッドを正しく実装することは不可能です。これらの方法には以下が含まれます&lt;a href=&quot;#initSecContext(java.io.InputStream,java.io.OutputStream)&quot;&gt; &lt;code&gt;initSecContext(InputStream, OutputStream)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#acceptSecContext(java.io.InputStream,java.io.OutputStream)&quot;&gt; &lt;code&gt;acceptSecContext(InputStream, OutputStream)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#wrap(java.io.InputStream,java.io.OutputStream,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;wrap(InputStream, OutputStream, MessageProp)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#unwrap(java.io.InputStream,java.io.OutputStream,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;unwrap(InputStream, OutputStream, MessageProp)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getMIC(java.io.InputStream,java.io.OutputStream,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;getMIC(InputStream, OutputStream, MessageProp)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#verifyMIC(java.io.InputStream,java.io.InputStream,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;verifyMIC(InputStream, InputStream, MessageProp)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="93d3cf16abf302a5134c3443f01b2257c53b0385" translate="yes" xml:space="preserve">
          <source>The stream-based methods of &lt;code&gt;GSSContext&lt;/code&gt; have been deprecated in Java SE 11. These methods have also been removed from &lt;a href=&quot;https://tools.ietf.org/html/rfc8353&quot;&gt; RFC 8353: Generic Security Service API Version 2: Java Bindings Update&lt;/a&gt; for the following reasons (see section 11): &quot;The overloaded methods of GSSContext that use input and output streams as the means to convey authentication and per-message GSS-API tokens as described in Section 5.15 of RFC 5653 are removed in this update as the wire protocol should be defined by an application and not a library. It's also impossible to implement these methods correctly when the token has no self-framing (where the end cannot be determined), or the library has no knowledge of the token format (for example, as a bridge talking to another GSS library)&quot;. These methods include &lt;a href=&quot;#initSecContext(java.io.InputStream,java.io.OutputStream)&quot;&gt;&lt;code&gt;initSecContext(InputStream, OutputStream)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#acceptSecContext(java.io.InputStream,java.io.OutputStream)&quot;&gt;&lt;code&gt;acceptSecContext(InputStream, OutputStream)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#wrap(java.io.InputStream,java.io.OutputStream,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;wrap(InputStream, OutputStream, MessageProp)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#unwrap(java.io.InputStream,java.io.OutputStream,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;unwrap(InputStream, OutputStream, MessageProp)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getMIC(java.io.InputStream,java.io.OutputStream,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;getMIC(InputStream, OutputStream, MessageProp)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#verifyMIC(java.io.InputStream,java.io.InputStream,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;verifyMIC(InputStream, InputStream, MessageProp)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3196486e12ee1ceae179dd2a0073d0d87998aba" translate="yes" xml:space="preserve">
          <source>The strict sequential order of invocations from &lt;code&gt;WebSocket&lt;/code&gt; to &lt;code&gt;Listener&lt;/code&gt; means, in particular, that the &lt;code&gt;Listener&lt;/code&gt;'s methods are treated as non-reentrant. This means that &lt;code&gt;Listener&lt;/code&gt; implementations do not need to be concerned with possible recursion or the order in which they invoke &lt;code&gt;WebSocket.request&lt;/code&gt; in relation to their processing logic.</source>
          <target state="translated">&lt;code&gt;WebSocket&lt;/code&gt; から &lt;code&gt;Listener&lt;/code&gt; への呼び出しの厳密な順序は、特に、 &lt;code&gt;Listener&lt;/code&gt; のメソッドが非再入可能として扱われることを意味します。つまり、 &lt;code&gt;Listener&lt;/code&gt; 実装は、処理ロジックに関連して、再帰の可能性や &lt;code&gt;WebSocket.request&lt;/code&gt; を呼び出す順序を考慮する必要がありません。</target>
        </trans-unit>
        <trans-unit id="677e924344268647b9f4c33bebdbd774bffeedb1" translate="yes" xml:space="preserve">
          <source>The strikethrough affects both the visual bounds and the outline of the text.</source>
          <target state="translated">ストライクスルーは、視覚的な境界線とテキストのアウトラインの両方に影響を与えます。</target>
        </trans-unit>
        <trans-unit id="08ace5725b5a326d5041f65d175699034a1c1db6" translate="yes" xml:space="preserve">
          <source>The string &quot;error&quot;, a possible value for certain properties.</source>
          <target state="translated">特定のプロパティで可能な値である文字列 &quot;error&quot;。</target>
        </trans-unit>
        <trans-unit id="bfc3fe82f3ff5835f163f82fa9c6c4dba766b9ab" translate="yes" xml:space="preserve">
          <source>The string &quot;false&quot;, a possible value for certain properties.</source>
          <target state="translated">文字列 &quot;false&quot;、特定のプロパティで可能な値。</target>
        </trans-unit>
        <trans-unit id="e30c0643390c5dc7ebd25358b9755769e7551051" translate="yes" xml:space="preserve">
          <source>The string &quot;keep&quot;, a possible value for certain properties.</source>
          <target state="translated">文字列 &quot;keep&quot;、特定のプロパティで可能な値。</target>
        </trans-unit>
        <trans-unit id="1f0cf467ff107c2e23c66f6d76abd1c756e88c98" translate="yes" xml:space="preserve">
          <source>The string &quot;latest&quot;, a possible value for certain properties.</source>
          <target state="translated">文字列 &quot;latest&quot;、特定のプロパティで可能な値。</target>
        </trans-unit>
        <trans-unit id="108f1155e473064ee5869a10046f49c5f28678dc" translate="yes" xml:space="preserve">
          <source>The string &quot;pass&quot;, a possible value for certain properties.</source>
          <target state="translated">特定のプロパティで可能な値である文字列 &quot;pass&quot;。</target>
        </trans-unit>
        <trans-unit id="558ef0c8eaf4af89eed40f1773ec89e05db3ff2d" translate="yes" xml:space="preserve">
          <source>The string &quot;strip&quot;, a possible value for certain properties.</source>
          <target state="translated">特定のプロパティで可能な値である文字列 &quot;strip&quot;。</target>
        </trans-unit>
        <trans-unit id="465f99ea7628c0edb2cf953567db0aafbc5f0067" translate="yes" xml:space="preserve">
          <source>The string &quot;true&quot;, a possible value for certain properties.</source>
          <target state="translated">文字列 &quot;true &quot;は、特定のプロパティに対して可能な値です。</target>
        </trans-unit>
        <trans-unit id="22c0cd468531813dfe7dcaa04b8b2d76bff20d6f" translate="yes" xml:space="preserve">
          <source>The string &lt;a href=&quot;#ERROR&quot;&gt;&lt;code&gt;ERROR&lt;/code&gt;&lt;/a&gt; means that the pack operation as a whole will fail, with an exception of type &lt;code&gt;IOException&lt;/code&gt;. The string &lt;a href=&quot;#STRIP&quot;&gt;&lt;code&gt;STRIP&lt;/code&gt;&lt;/a&gt; means that the attribute will be dropped. The string &lt;a href=&quot;#PASS&quot;&gt;&lt;code&gt;PASS&lt;/code&gt;&lt;/a&gt; means that the whole class-file will be passed through (as if it were a resource file) without compression, with a suitable warning. This is the default value for this property.</source>
          <target state="translated">文字列&lt;a href=&quot;#ERROR&quot;&gt; &lt;code&gt;ERROR&lt;/code&gt; &lt;/a&gt;は、タイプ &lt;code&gt;IOException&lt;/code&gt; を除いて、パック操作全体が失敗することを意味します。文字列&lt;a href=&quot;#STRIP&quot;&gt; &lt;code&gt;STRIP&lt;/code&gt; &lt;/a&gt;は、属性が削除されることを意味します。文字列&lt;a href=&quot;#PASS&quot;&gt; &lt;code&gt;PASS&lt;/code&gt; &lt;/a&gt;は、適切な警告とともに、クラスファイル全体が（リソースファイルであるかのように）圧縮されずに渡されることを意味します。これは、このプロパティのデフォルト値です。</target>
        </trans-unit>
        <trans-unit id="b7d2fbb70acb3059d5c5bbd79c4294963cdbf352" translate="yes" xml:space="preserve">
          <source>The string &lt;a href=&quot;pack200.packer#ERROR&quot;&gt;&lt;code&gt;ERROR&lt;/code&gt;&lt;/a&gt; means that the pack operation as a whole will fail, with an exception of type &lt;code&gt;IOException&lt;/code&gt;. The string &lt;a href=&quot;pack200.packer#STRIP&quot;&gt;&lt;code&gt;STRIP&lt;/code&gt;&lt;/a&gt; means that the attribute will be dropped. The string &lt;a href=&quot;pack200.packer#PASS&quot;&gt;&lt;code&gt;PASS&lt;/code&gt;&lt;/a&gt; means that the whole class-file will be passed through (as if it were a resource file) without compression, with a suitable warning. This is the default value for this property.</source>
          <target state="translated">文字列&lt;a href=&quot;pack200.packer#ERROR&quot;&gt; &lt;code&gt;ERROR&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;IOException&lt;/code&gt; タイプの例外を除いて、パック操作が全体として失敗することを意味します。文字列&lt;a href=&quot;pack200.packer#STRIP&quot;&gt; &lt;code&gt;STRIP&lt;/code&gt; &lt;/a&gt;は、属性が削除されることを意味します。文字列&lt;a href=&quot;pack200.packer#PASS&quot;&gt; &lt;code&gt;PASS&lt;/code&gt; &lt;/a&gt;は、クラスファイル全体が（リソースファイルであるかのように）圧縮されずに適切な警告付きで渡されることを意味します。これは、このプロパティのデフォルト値です。</target>
        </trans-unit>
        <trans-unit id="ad02c3d243be4e9c61737e03ba9c0bf8b38dbb60" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt;, for example, yields the following results with these expressions:</source>
          <target state="translated">たとえば、文字列 &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt; は、これらの式で次の結果を生成します。</target>
        </trans-unit>
        <trans-unit id="0a75a6f894f0ae1c44cee0d9fcd6514b9f78e1dd" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt;, for example, yields the following results with these parameters:</source>
          <target state="translated">たとえば、文字列 &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt; は、これらのパラメーターを使用して次の結果を生成します。</target>
        </trans-unit>
        <trans-unit id="1565ac3867c9c20773f4cb4feb587c3d597a0245" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;precision=&quot;&lt;/code&gt;, immediately followed by the value of the precision setting as a numeric string as if generated by the &lt;a href=&quot;../lang/integer#toString(int)&quot;&gt;&lt;code&gt;Integer.toString&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">文字列 &lt;code&gt;&quot;precision=&quot;&lt;/code&gt; 直後に、&lt;a href=&quot;../lang/integer#toString(int)&quot;&gt; &lt;code&gt;Integer.toString&lt;/code&gt; &lt;/a&gt;メソッドによって生成されたかのように数値文字列として精度設定の値が続きます。</target>
        </trans-unit>
        <trans-unit id="6550e9f9888c201023a4fc7c4d06f985451147bf" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;precision=&quot;&lt;/code&gt;, immediately followed by the value of the precision setting as a numeric string as if generated by the &lt;a href=&quot;../lang/integer#toString-int-&quot;&gt;&lt;code&gt;Integer.toString&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">文字列 &lt;code&gt;&quot;precision=&quot;&lt;/code&gt; 、直後に&lt;a href=&quot;../lang/integer#toString-int-&quot;&gt; &lt;code&gt;Integer.toString&lt;/code&gt; &lt;/a&gt;メソッドで生成されたかのように数値文字列としての精度設定の値。</target>
        </trans-unit>
        <trans-unit id="62905723a8ac431fa9dccaf628bb9c07af02e5dd" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;roundingMode=&quot;&lt;/code&gt;, immediately followed by the value of the &lt;code&gt;roundingMode&lt;/code&gt; setting as a word. This word will be the same as the name of the corresponding public constant in the &lt;a href=&quot;roundingmode&quot;&gt;&lt;code&gt;RoundingMode&lt;/code&gt;&lt;/a&gt; enum.</source>
          <target state="translated">文字列 &lt;code&gt;&quot;roundingMode=&quot;&lt;/code&gt; 、直後に単語としての &lt;code&gt;roundingMode&lt;/code&gt; 設定の値。この単語は、&lt;a href=&quot;roundingmode&quot;&gt; &lt;code&gt;RoundingMode&lt;/code&gt; &lt;/a&gt;列挙型の対応するパブリック定数の名前と同じになります。</target>
        </trans-unit>
        <trans-unit id="a056f3c02b144a1272485d342c4c2a38f8a60c41" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;true&quot;&lt;/code&gt; or &lt;code&gt;&quot;false&quot;&lt;/code&gt; according as this MBean is an &lt;a href=&quot;mxbean&quot;&gt;&lt;code&gt;MXBean&lt;/code&gt;&lt;/a&gt;. A Standard MBean or MXBean registered directly with the MBean Server or created using the &lt;a href=&quot;standardmbean&quot;&gt;&lt;code&gt;StandardMBean&lt;/code&gt;&lt;/a&gt; class will have this field in its MBeanInfo Descriptor.</source>
          <target state="translated">このMBeanは&lt;a href=&quot;mxbean&quot;&gt; &lt;code&gt;MXBean&lt;/code&gt; で&lt;/a&gt;あるため、文字列 &lt;code&gt;&quot;true&quot;&lt;/code&gt; または &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。MBeanサーバーに直接登録された、または&lt;a href=&quot;standardmbean&quot;&gt; &lt;code&gt;StandardMBean&lt;/code&gt; &lt;/a&gt;クラスを使用して作成された標準MBeanまたはMXBean は、MBeanInfo記述子にこのフィールドを持ちます。</target>
        </trans-unit>
        <trans-unit id="fa3bdb340e93ffe54892a6e3894a1d8cb94a703a" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;true&quot;&lt;/code&gt; or &lt;code&gt;&quot;false&quot;&lt;/code&gt; according as this MBean's MBeanInfo is &lt;em&gt;immutable&lt;/em&gt;. When this field is true, the MBeanInfo for the given MBean is guaranteed not to change over the lifetime of the MBean. Hence, a client can read it once and cache the read value. When this field is false or absent, there is no such guarantee, although that does not mean that the MBeanInfo will necessarily change. See also the &lt;a href=&quot;mbeaninfo#info-changed&quot;&gt;&lt;code&gt;&quot;jmx.mbean.info.changed&quot;&lt;/code&gt;&lt;/a&gt; notification.</source>
          <target state="translated">このMBeanのMBeanInfoは&lt;em&gt;不変であるため&lt;/em&gt;、文字列 &lt;code&gt;&quot;true&quot;&lt;/code&gt; または &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。このフィールドがtrueの場合、指定されたMBeanのMBeanInfoは、MBeanの存続期間を通じて変更されないことが保証されます。したがって、クライアントはそれを1回読み取り、読み取った値をキャッシュできます。このフィールドがfalseまたは存在しない場合、そのような保証はありませんが、MBeanInfoが必ず変更されるわけではありません。&lt;a href=&quot;mbeaninfo#info-changed&quot;&gt; &lt;code&gt;&quot;jmx.mbean.info.changed&quot;&lt;/code&gt; &lt;/a&gt;通知も参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="58cf603470519c5b5e195c25d45c63e85fd34cc0" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;true&quot;&lt;/code&gt; or &lt;code&gt;&quot;false&quot;&lt;/code&gt; according as this item is enabled. When an attribute or operation is not enabled, it exists but cannot currently be accessed. A user interface might present it as a greyed-out item. For example, an attribute might only be meaningful after the &lt;code&gt;start()&lt;/code&gt; method of an MBean has been called, and is otherwise disabled. Likewise, a notification might be disabled if it cannot currently be emitted but could be in other circumstances.</source>
          <target state="translated">このアイテムが有効になっているため、文字列 &lt;code&gt;&quot;true&quot;&lt;/code&gt; または &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。属性または操作が有効でない場合、それは存在しますが、現在アクセスできません。ユーザーインターフェイスは、それを淡色表示のアイテムとして表示する場合があります。たとえば、属性はMBeanの &lt;code&gt;start()&lt;/code&gt; メソッドが呼び出された後にのみ意味を持ち、それ以外の場合は無効になります。同様に、現在発行されていないが他の状況にある可能性がある場合、通知は無効になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="631ed054c3067658cc3a118e7936d64f51bfad09" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;&quot;unchecked&quot;&lt;/code&gt; is used to suppress unchecked warnings. Compiler vendors should document the additional warning names they support in conjunction with this annotation type. They are encouraged to cooperate to ensure that the same names work across multiple compilers.</source>
          <target state="translated">文字列 &lt;code&gt;&quot;unchecked&quot;&lt;/code&gt; は、チェックされていない警告を抑制するために使用されます。コンパイラベンダーは、この注釈タイプとともにサポートする追加の警告名を文書化する必要があります。同じ名前が複数のコンパイラで機能するように協力することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="69491b7b47334ee084c1c31f631a979ba7599e82" translate="yes" xml:space="preserve">
          <source>The string &lt;code&gt;s&lt;/code&gt; is processed from left to right, looking for data of interest. Any material in &lt;code&gt;s&lt;/code&gt; that is within the ASCII parenthesis characters &lt;code&gt;(&lt;/code&gt; and &lt;code&gt;)&lt;/code&gt; is ignored. Parentheses may be nested. Otherwise, the only characters permitted within &lt;code&gt;s&lt;/code&gt; are these ASCII characters:</source>
          <target state="translated">文字列 &lt;code&gt;s&lt;/code&gt; は左から右に処理され、目的のデータを探します。ASCII括弧文字 &lt;code&gt;(&lt;/code&gt; および &lt;code&gt;)&lt;/code&gt; 内にある &lt;code&gt;s&lt;/code&gt; 内の素材はすべて無視されます。括弧は入れ子にすることができます。それ以外の場合、 &lt;code&gt;s&lt;/code&gt; 内で許可される文字は次のASCII文字のみです。</target>
        </trans-unit>
        <trans-unit id="fa07a44e85f7b0960fe0afe9cd1bc3596bb25ceb" translate="yes" xml:space="preserve">
          <source>The string NULL (not enclosed in quotes) - if NULL was specified as the default value</source>
          <target state="translated">文字列 NULL (引用符で囲まれていない)-デフォルト値として NULL が指定されている場合</target>
        </trans-unit>
        <trans-unit id="919c5615e88a8576efe725aa5581160688478bfe" translate="yes" xml:space="preserve">
          <source>The string attribute values are not interpreted as &lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; formatted RDN strings. That is, the values are used literally (not parsed) and assumed to be unescaped.</source>
          <target state="translated">文字列属性値は、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt;形式のRDN文字列として解釈されません。つまり、値は文字どおりに（解析されずに）使用され、エスケープされていないと見なされます。</target>
        </trans-unit>
        <trans-unit id="281a06519e314093dc16bc940319b122ec1fafd2" translate="yes" xml:space="preserve">
          <source>The string attribute values are not interpreted as &lt;a href=&quot;https://www.ietf.org/rfc/rfc2253.txt&quot;&gt;RFC 2253&lt;/a&gt; formatted RDN strings. That is, the values are used literally (not parsed) and assumed to be unescaped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad0ec093c3f0998c8bdd918a0718e5eab967d10" translate="yes" xml:space="preserve">
          <source>The string constructed by replacing each matching subsequence by the replacement string, substituting captured subsequences as needed</source>
          <target state="translated">各マッチする部分集合を置換文字列で置き換え、必要に応じて捕捉された部分集合を置換することで構築された文字列</target>
        </trans-unit>
        <trans-unit id="afda6d3703500c7f92e7b1f7f59b56df33958ed8" translate="yes" xml:space="preserve">
          <source>The string constructed by replacing each matching subsequence with the result of applying the replacer function to that matched subsequence, substituting captured subsequences as needed.</source>
          <target state="translated">必要に応じてキャプチャされた部分集合を置換し、そのマッチした部分集合にリプレッサー関数を適用した結果で各マッチした部分集合を置き換えることで構築された文字列。</target>
        </trans-unit>
        <trans-unit id="c64ffe780cf31db4996cccb5e0b7a94f8f71ac12" translate="yes" xml:space="preserve">
          <source>The string constructed by replacing the first matching subsequence by the replacement string, substituting captured subsequences as needed</source>
          <target state="translated">最初のマッチする部分集合を置換文字列で置き換え、必要に応じて捕捉された部分集合を置換することで構築される文字列</target>
        </trans-unit>
        <trans-unit id="e0bec6f730c0449ee38f585e3dde0d82f697b3cb" translate="yes" xml:space="preserve">
          <source>The string constructed by replacing the first matching subsequence with the result of applying the replacer function to the matched subsequence, substituting captured subsequences as needed.</source>
          <target state="translated">必要に応じてキャプチャされた部分文を置換し、マッチした部分文にリプレッサー関数を適用した結果で、最初のマッチした部分文を置き換えることで構築された文字列。</target>
        </trans-unit>
        <trans-unit id="57510220bfaf470419bb00af78884a6462f36070" translate="yes" xml:space="preserve">
          <source>The string containing the version of the module if recorded at compile-time, or an empty &lt;code&gt;Optional&lt;/code&gt; if no version was recorded</source>
          <target state="translated">コンパイル時に記録された場合はモジュールのバージョンを含む文字列、バージョンが記録されなかった場合は空の &lt;code&gt;Optional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a584ad3952c728ec28d3c26b8f0d57ad4cd86d7a" translate="yes" xml:space="preserve">
          <source>The string containing the version of the module or an empty &lt;code&gt;Optional&lt;/code&gt; if the module does not have a version</source>
          <target state="translated">モジュールのバージョンを含む文字列、またはモジュールにバージョンがない場合は空の &lt;code&gt;Optional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c31beff83674da5e332dc00712cbbbdd5562206f" translate="yes" xml:space="preserve">
          <source>The string form of the compound name follows the syntax described above. When the components of the compound name are turned into their string representation, the reserved syntax rules described above are applied (e.g. embedded separators are escaped or quoted) so that when the same string is parsed, it will yield the same components of the original compound name.</source>
          <target state="translated">複合名の文字列形式は、上述の構文に従います。複合名の構成要素を文字列表現に変換する際には、上記で説明した予約構文ルールが適用されます (例えば、埋め込みセパレータはエスケープされたり、引用符で囲まれたりします)。</target>
        </trans-unit>
        <trans-unit id="f10938b9c9c0c8797b9503b58353064a7df27786" translate="yes" xml:space="preserve">
          <source>The string form of this URI</source>
          <target state="translated">このURIの文字列形式</target>
        </trans-unit>
        <trans-unit id="2fdc4bee66cbffe9f8926f8d8bb6b3ff409dbcc9" translate="yes" xml:space="preserve">
          <source>The string form of this URI, encoded as needed so that it only contains characters in the US-ASCII charset</source>
          <target state="translated">US-ASCII文字セットの文字のみを含むように必要に応じてエンコードされたこのURIの文字列形式。</target>
        </trans-unit>
        <trans-unit id="04761903fd7cc565bcc1b3b493f9a4d9ad183aaa" translate="yes" xml:space="preserve">
          <source>The string form of this abstract pathname</source>
          <target state="translated">この抽象パス名の文字列形式</target>
        </trans-unit>
        <trans-unit id="a6a48b95d9bb03c06186693a1e56c1d93fae2d7c" translate="yes" xml:space="preserve">
          <source>The string from which bytes are read.</source>
          <target state="translated">バイトが読み込まれる文字列。</target>
        </trans-unit>
        <trans-unit id="63b46307980099765e658cf440f0d03747b95b05" translate="yes" xml:space="preserve">
          <source>The string from which this version was parsed.</source>
          <target state="translated">このバージョンが解析された文字列。</target>
        </trans-unit>
        <trans-unit id="b6724bb79c3c33d31e86e0f46c7de30b21951061" translate="yes" xml:space="preserve">
          <source>The string is between 1 and 128 characters in length inclusive</source>
          <target state="translated">文字列の長さは1~128文字です。</target>
        </trans-unit>
        <trans-unit id="15fa0640f7a89ad0499dc7372318874d0f8a6949" translate="yes" xml:space="preserve">
          <source>The string is not enclosed in double quotes</source>
          <target state="translated">文字列は二重引用符で囲まれていません</target>
        </trans-unit>
        <trans-unit id="2361fc0fcc98f34cf7707bd58c3a48311a40b445" translate="yes" xml:space="preserve">
          <source>The string must match exactly the name of the era. (Extraneous whitespace characters are not permitted.)</source>
          <target state="translated">文字列は、時代の名前と正確に一致しなければなりません。(空白文字は使用できません)。</target>
        </trans-unit>
        <trans-unit id="528b474b80585c5bde4792fd2aaffc2f3fc1d745" translate="yes" xml:space="preserve">
          <source>The string must represent a valid date and is parsed using &lt;a href=&quot;format/datetimeformatter#ISO_LOCAL_DATE&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_LOCAL_DATE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列は有効な日付を表す必要があり、&lt;a href=&quot;format/datetimeformatter#ISO_LOCAL_DATE&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_LOCAL_DATE&lt;/code&gt; &lt;/a&gt;を使用して解析されます。</target>
        </trans-unit>
        <trans-unit id="a92bea7fe20a26d29fc02f1b18cfeb4a64f2befc" translate="yes" xml:space="preserve">
          <source>The string must represent a valid date-time and is parsed using &lt;a href=&quot;format/datetimeformatter#ISO_LOCAL_DATE_TIME&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_LOCAL_DATE_TIME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列は有効な日時を表す必要があり、&lt;a href=&quot;format/datetimeformatter#ISO_LOCAL_DATE_TIME&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_LOCAL_DATE_TIME&lt;/code&gt; &lt;/a&gt;を使用して解析されます。</target>
        </trans-unit>
        <trans-unit id="9546955f3024f065c5daeea861e41048af02e3a1" translate="yes" xml:space="preserve">
          <source>The string must represent a valid date-time and is parsed using &lt;a href=&quot;format/datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列は有効な日時を表す必要があり、&lt;a href=&quot;format/datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;を使用して解析されます。</target>
        </trans-unit>
        <trans-unit id="ea655be45604489e8a988f1f62775445f297e35d" translate="yes" xml:space="preserve">
          <source>The string must represent a valid date-time and is parsed using &lt;a href=&quot;format/datetimeformatter#ISO_ZONED_DATE_TIME&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_ZONED_DATE_TIME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列は有効な日時を表す必要があり、&lt;a href=&quot;format/datetimeformatter#ISO_ZONED_DATE_TIME&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_ZONED_DATE_TIME&lt;/code&gt; &lt;/a&gt;を使用して解析されます。</target>
        </trans-unit>
        <trans-unit id="b639943db6958d9063503c47072cf422d9417cda" translate="yes" xml:space="preserve">
          <source>The string must represent a valid instant in UTC and is parsed using &lt;a href=&quot;format/datetimeformatter#ISO_INSTANT&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_INSTANT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列はUTCで有効なインスタントを表す必要があり、&lt;a href=&quot;format/datetimeformatter#ISO_INSTANT&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_INSTANT&lt;/code&gt; &lt;/a&gt;を使用して解析されます。</target>
        </trans-unit>
        <trans-unit id="5d2f552261c78dde5773d5eb748ea70d7ae99393" translate="yes" xml:space="preserve">
          <source>The string must represent a valid month-day. The format is &lt;code&gt;--MM-dd&lt;/code&gt;.</source>
          <target state="translated">文字列は有効な月日を表す必要があります。形式は &lt;code&gt;--MM-dd&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0f5fc471abeddd2fc10059070b03a26ea0e4f0e6" translate="yes" xml:space="preserve">
          <source>The string must represent a valid time and is parsed using &lt;a href=&quot;format/datetimeformatter#ISO_LOCAL_TIME&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_LOCAL_TIME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列は有効な時間を表す必要があり、&lt;a href=&quot;format/datetimeformatter#ISO_LOCAL_TIME&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_LOCAL_TIME&lt;/code&gt; &lt;/a&gt;を使用して解析されます。</target>
        </trans-unit>
        <trans-unit id="4834d95eb10fdeb7855ef1f3b7f1815cd5f315de" translate="yes" xml:space="preserve">
          <source>The string must represent a valid time and is parsed using &lt;a href=&quot;format/datetimeformatter#ISO_OFFSET_TIME&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_OFFSET_TIME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列は有効な時間を表す必要があり、&lt;a href=&quot;format/datetimeformatter#ISO_OFFSET_TIME&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_OFFSET_TIME&lt;/code&gt; &lt;/a&gt;を使用して解析されます。</target>
        </trans-unit>
        <trans-unit id="522d37a5cb0dea2932c0223382f776eae3acb124" translate="yes" xml:space="preserve">
          <source>The string must represent a valid year-month. The format must be &lt;code&gt;uuuu-MM&lt;/code&gt;. Years outside the range 0000 to 9999 must be prefixed by the plus or minus symbol.</source>
          <target state="translated">文字列は有効な年月を表す必要があります。形式は &lt;code&gt;uuuu-MM&lt;/code&gt; でなければなりません。0000から9999の範囲外の年には、プラス記号またはマイナス記号を前に付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="68fe36aa287218182684aa7a85b5b9b1977bc3ca" translate="yes" xml:space="preserve">
          <source>The string must represent a valid year. Years outside the range 0000 to 9999 must be prefixed by the plus or minus symbol.</source>
          <target state="translated">文字列は有効な年を表す必要があります。0000から9999の範囲外の年は、プラスまたはマイナスの記号を前に付けなければなりません。</target>
        </trans-unit>
        <trans-unit id="137a5254a87fa6e0ce4c1568f6ddf435ae99c22b" translate="yes" xml:space="preserve">
          <source>The string only contains alphanumeric characters or the character &quot;_&quot;</source>
          <target state="translated">文字列には英数字または文字 &quot;_&quot; のみが含まれます。</target>
        </trans-unit>
        <trans-unit id="abbf179f85853b351778a26629eb5657fc8e8fab" translate="yes" xml:space="preserve">
          <source>The string produced for a given number is always the same; it is not affected by locale. This means that it can be used as a canonical string representation for exchanging decimal data, or as a key for a Hashtable, etc. Locale-sensitive number formatting and parsing is handled by the &lt;a href=&quot;../text/numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; class and its subclasses.</source>
          <target state="translated">指定された数値に対して生成される文字列は常に同じです。ロケールの影響を受けません。これは、10進データを交換するための正規の文字列表現として、またはHashtableなどのキーとして使用できることを意味します。ロケールに依存する数値のフォーマットと解析は、&lt;a href=&quot;../text/numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt;クラスとそのサブクラスによって処理されます。</target>
        </trans-unit>
        <trans-unit id="3fe8bf77d08eee400f8eacfe6cb5d936ae0a4f48" translate="yes" xml:space="preserve">
          <source>The string representation consists of a list of the array's elements, enclosed in square brackets (&lt;code&gt;&quot;[]&quot;&lt;/code&gt;). Adjacent elements are separated by the characters &lt;code&gt;&quot;, &quot;&lt;/code&gt; (a comma followed by a space). Elements are converted to strings as by &lt;code&gt;String.valueOf(Object)&lt;/code&gt;, unless they are themselves arrays.</source>
          <target state="translated">文字列表現は、角括弧（ &lt;code&gt;&quot;[]&quot;&lt;/code&gt; ）で囲まれた配列の要素のリストで構成されます。隣接する要素は、文字 &lt;code&gt;&quot;, &quot;&lt;/code&gt; （コンマの後にスペースが続く）で区切られます。要素自体が配列でない限り、要素は &lt;code&gt;String.valueOf(Object)&lt;/code&gt; によって文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="3b44741f71d142966f86ccc32acede59a84d445d" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of the implementing class, and the tabular type of this instance.</source>
          <target state="translated">文字列表現は、実装クラスの名前と、このインスタンスの表形式で構成されます。</target>
        </trans-unit>
        <trans-unit id="53d83a239c2a7be1cb8fe5f1423384d5522b995b" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of the implementing class, the string representation of the composite type of this instance, and the string representation of the contents (ie list the itemName=itemValue mappings).</source>
          <target state="translated">文字列表現は、実装クラスの名前、このインスタンスの複合型の文字列表現、およびコンテンツの文字列表現から構成されます(つまり、itemName=itemValueのマッピングをリストアップします)。</target>
        </trans-unit>
        <trans-unit id="9ce6c605327807271ff809bf8c3e33f72c8d71fb" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (i.e. &lt;code&gt;javax.management.openmbean.ArrayType&lt;/code&gt;), the type name, the dimension, the elements' open type and the primitive array flag defined for this instance.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.ArrayType&lt;/code&gt; ）、型名、次元、要素の公開型、およびこのインスタンスに定義されたプリミティブ配列フラグで構成されます。</target>
        </trans-unit>
        <trans-unit id="2883eec75a628ef99c332dc7e2aaea10651f3902" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (i.e. &lt;code&gt;javax.management.openmbean.OpenMBeanAttributeInfoSupport&lt;/code&gt;), the string representation of the name and open type of the described parameter, the string representation of its default, min, max and legal values and the string representation of its descriptor.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanAttributeInfoSupport&lt;/code&gt; ）、名前の文字列表現、および記述されたパラメータのオープンタイプ、そのデフォルトの文字列表現、最小値、最大値、有効な値、およびその記述子の文字列表現。</target>
        </trans-unit>
        <trans-unit id="8a2464b0766b9e81e51253aa84918715aa0cd068" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (i.e. &lt;code&gt;javax.management.openmbean.OpenMBeanParameterInfoSupport&lt;/code&gt;), the string representation of the name and open type of the described parameter, the string representation of its default, min, max and legal values and the string representation of its descriptor.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanParameterInfoSupport&lt;/code&gt; ）、説明されたパラメータの名前とオープンタイプの文字列表現、デフォルトの文字列表現、最小値、最大値、および正当な値と、その記述子の文字列表現。</target>
        </trans-unit>
        <trans-unit id="4d29a8e6e5f83180a9a2655eeeb086d4d8e9f13e" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;
 javax.management.openmbean.OpenMBeanConstructorInfoSupport&lt;/code&gt;), the name and signature of the described constructor and the string representation of its descriptor.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt; javax.management.openmbean.OpenMBeanConstructorInfoSupport&lt;/code&gt; ）、記述されたコンストラクターの名前と署名、およびその記述子の文字列表現で構成されます。</target>
        </trans-unit>
        <trans-unit id="ac01ca9000354d194b07d70a4e1b8028f60f9f3e" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;
 javax.management.openmbean.OpenMBeanOperationInfoSupport&lt;/code&gt;), and the name, signature, return open type and impact of the described operation and the string representation of its descriptor.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt; javax.management.openmbean.OpenMBeanOperationInfoSupport&lt;/code&gt; ）、名前、署名、戻り値のオープンタイプ、記述された操作の影響、およびその記述子の文字列表現で構成されます。</target>
        </trans-unit>
        <trans-unit id="9b6002a9339d22eed93f555f1481a07a002e5091" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.CompositeDataSupport&lt;/code&gt;), the string representation of the composite type of this instance, and the string representation of the contents (ie list the itemName=itemValue mappings).</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり &lt;code&gt;javax.management.openmbean.CompositeDataSupport&lt;/code&gt; ）、このインスタンスの複合型の文字列表現、およびコンテンツの文字列表現（つまり、itemName = itemValueマッピングのリスト）で構成されます。</target>
        </trans-unit>
        <trans-unit id="789eed41269dc56a9082ac2a97089c1d128afaf4" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.CompositeType&lt;/code&gt;), the type name for this instance, and the list of the items names and types string representation of this instance.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.CompositeType&lt;/code&gt; ）、このインスタンスのタイプ名、およびこのインスタンスのアイテム名とタイプの文字列表現のリストで構成されます。</target>
        </trans-unit>
        <trans-unit id="a4e6ec5ac6aa3e0627edbc16f7c6430eb6a8d1d8" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanAttributeInfo&lt;/code&gt;), the string representation of the name and open type of the described attribute, and the string representation of its default, min, max and legal values.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanAttributeInfo&lt;/code&gt; ）、説明された属性の名前とオープンタイプの文字列表現、およびそのデフォルト、最小、最大、有効な値の文字列表現で構成されます。</target>
        </trans-unit>
        <trans-unit id="d7b716744f9ffc637689b371f05e304eff7af2a9" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanConstructorInfo&lt;/code&gt;), and the name and signature of the described constructor.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanConstructorInfo&lt;/code&gt; ）と、記述されたコンストラクタの名前とシグネチャで構成されます。</target>
        </trans-unit>
        <trans-unit id="6ad27ad5ebd129c3ea4d4956977533104d272e95" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanConstructorInfoSupport&lt;/code&gt;), the name and signature of the described constructor and the string representation of its descriptor.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanConstructorInfoSupport&lt;/code&gt; ）、記述されたコンストラクタの名前と署名、およびその記述子の文字列表現で構成されます。</target>
        </trans-unit>
        <trans-unit id="56f0f9a9629656eb5921de1b1b2280b717218bf7" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanInfo&lt;/code&gt;), the MBean class name, and the string representation of infos on attributes, constructors, operations and notifications of the described MBean.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanInfo&lt;/code&gt; ）、MBeanクラス名、および記述されたMBeanの属性、コンストラクタ、操作、通知に関する情報の文字列表現で構成されます。</target>
        </trans-unit>
        <trans-unit id="f9d79b194f6330817e69226b3c9fd464f3f27be2" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanInfoSupport&lt;/code&gt;), the MBean class name, the string representation of infos on attributes, constructors, operations and notifications of the described MBean and the string representation of the descriptor.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanInfoSupport&lt;/code&gt; ）、MBeanクラス名、属性に関する情報の文字列表現、コンストラクタ、操作、および記述されたMBeanの通知、および記述子の文字列表現で構成されます。 。</target>
        </trans-unit>
        <trans-unit id="4ab6a7c24f824a223fbd8a3831c0c3e6970b8c12" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanOperationInfo&lt;/code&gt;), and the name, signature, return open type and impact of the described operation.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanOperationInfo&lt;/code&gt; ）と、名前、シグネチャ、戻り値のオープンタイプ、および説明されている操作の影響で構成されます。</target>
        </trans-unit>
        <trans-unit id="640c583f5e5f932dc18d233947e5f9f45c18d88c" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanOperationInfoSupport&lt;/code&gt;), and the name, signature, return open type and impact of the described operation and the string representation of its descriptor.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanOperationInfoSupport&lt;/code&gt; ）と、名前、シグネチャ、返される公開タイプ、および説明されている操作の影響とその記述子の文字列表現で構成されます。</target>
        </trans-unit>
        <trans-unit id="56372f3341ed9c622ba1dff09dfa80ed9847d82f" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.OpenMBeanParameterInfo&lt;/code&gt;), the string representation of the name and open type of the described parameter, and the string representation of its default, min, max and legal values.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.OpenMBeanParameterInfo&lt;/code&gt; ）、説明されたパラメータの名前とオープンタイプの文字列表現、およびそのデフォルト、最小、最大、および正当な値の文字列表現で構成されます。</target>
        </trans-unit>
        <trans-unit id="5e847596a7e03c71180c8216bb4f964ac80c8ce4" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.SimpleType&lt;/code&gt;) and the type name for this instance (which is the java class name of the values this &lt;code&gt;SimpleType&lt;/code&gt; instance represents).</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.SimpleType&lt;/code&gt; ）とこのインスタンスの型名（この &lt;code&gt;SimpleType&lt;/code&gt; インスタンスが表す値のJavaクラス名）で構成されます。</target>
        </trans-unit>
        <trans-unit id="cdd41d530879d983b77fc6d88438a6e273a7cdec" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.TabularDataSupport&lt;/code&gt;), the string representation of the tabular type of this instance, and the string representation of the contents (ie list the key=value mappings as returned by a call to &lt;code&gt;dataMap.&lt;/code&gt;&lt;a href=&quot;../../../../java.base/java/util/abstractmap#toString()&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.TabularDataSupport&lt;/code&gt; ）、このインスタンスの表形式の文字列表現、およびコンテンツの文字列表現（つまり、によって返されるkey = valueマッピングのリスト）で構成されます。 &lt;code&gt;dataMap.&lt;/code&gt; 呼び出し。toString &lt;a href=&quot;../../../../java.base/java/util/abstractmap#toString()&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="574dc6c379e8e51bf167c7fea2d4d1304ca21c2f" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.TabularDataSupport&lt;/code&gt;), the string representation of the tabular type of this instance, and the string representation of the contents (ie list the key=value mappings as returned by a call to &lt;code&gt;dataMap.&lt;/code&gt;&lt;a href=&quot;../../../java/util/abstractmap#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり &lt;code&gt;javax.management.openmbean.TabularDataSupport&lt;/code&gt; ）、このインスタンスの表形式の文字列表現、および内容の文字列表現（つまり、 &lt;code&gt;dataMap.&lt;/code&gt; &lt;a href=&quot;../../../java/util/abstractmap#toString--&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt;）への呼び出し。</target>
        </trans-unit>
        <trans-unit id="807fbdd5da5244bfb18ce040224682952e87d826" translate="yes" xml:space="preserve">
          <source>The string representation consists of the name of this class (ie &lt;code&gt;javax.management.openmbean.TabularType&lt;/code&gt;), the type name for this instance, the row type string representation of this instance, and the index names of this instance.</source>
          <target state="translated">文字列表現は、このクラスの名前（つまり、 &lt;code&gt;javax.management.openmbean.TabularType&lt;/code&gt; ）、このインスタンスの型名、このインスタンスの行型文字列表現、およびこのインスタンスのインデックス名で構成されています。</target>
        </trans-unit>
        <trans-unit id="fbc5fe65d5ab420dbf5b6b9fae291dad1f8925ed" translate="yes" xml:space="preserve">
          <source>The string representation for this &lt;code&gt;X500Principal&lt;/code&gt; can be obtained by calling the &lt;code&gt;getName&lt;/code&gt; methods.</source>
          <target state="translated">この &lt;code&gt;X500Principal&lt;/code&gt; の文字列表現は、 &lt;code&gt;getName&lt;/code&gt; メソッドを呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="cfa9c547b94d4a8505b4496d10852764a147d91f" translate="yes" xml:space="preserve">
          <source>The string representation may not have any leading and trailing whitespaces.</source>
          <target state="translated">文字列表現は、先頭と末尾に空白があってはいけません。</target>
        </trans-unit>
        <trans-unit id="6b612d9c02babd7e1408d7e8d784cf99d9d55260" translate="yes" xml:space="preserve">
          <source>The string representation of the LdapName.</source>
          <target state="translated">LdapNameの文字列表現。</target>
        </trans-unit>
        <trans-unit id="a420c385cddda341e69db0764ebb091c11a4a7be" translate="yes" xml:space="preserve">
          <source>The string representation of the Rdn.</source>
          <target state="translated">Rdnの文字列表現。</target>
        </trans-unit>
        <trans-unit id="06141090c2bbeee203d15ec52d1050014ee8d75b" translate="yes" xml:space="preserve">
          <source>The string representation of the attribute.</source>
          <target state="translated">属性の文字列表現。</target>
        </trans-unit>
        <trans-unit id="acdd753dd59a9a0afe3c3ebf5bba1d1c8f5326bd" translate="yes" xml:space="preserve">
          <source>The string representation of the attribute. This should exactly match the string specified in the CSS specification.</source>
          <target state="translated">属性の文字列表現。これは CSS 仕様で指定された文字列と正確に一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="6de482475e09c2eeff30bcc77f9f20ef06b16b86" translate="yes" xml:space="preserve">
          <source>The string representation of this SearchResult. Cannot be null.</source>
          <target state="translated">この SearchResult の文字列表現。nullにすることはできません。</target>
        </trans-unit>
        <trans-unit id="9095c816b4ff2b939ed38e5ec4c8dd104708dcc0" translate="yes" xml:space="preserve">
          <source>The string representation of this Service URL.</source>
          <target state="translated">このサービス URL の文字列表現。</target>
        </trans-unit>
        <trans-unit id="19b1dc6e3c56c1f7d2c94a2810b048ff86117b35" translate="yes" xml:space="preserve">
          <source>The string representation of this Service URL. If the value returned by this method is supplied to the &lt;code&gt;JMXServiceURL&lt;/code&gt; constructor, the resultant object is equal to this one.</source>
          <target state="translated">このサービスURLの文字列表現。このメソッドによって返される値が &lt;code&gt;JMXServiceURL&lt;/code&gt; コンストラクターに提供される場合、結果のオブジェクトはこれと同じになります。</target>
        </trans-unit>
        <trans-unit id="06f159652db61335f5666a5cf825b7a69627ed8c" translate="yes" xml:space="preserve">
          <source>The string representation of this exception consists of information about where the error occurred, and the first unexecuted modification.</source>
          <target state="translated">この例外の文字列表現は、エラーが発生した場所に関する情報と、最初に実行されなかった修正から構成されます。</target>
        </trans-unit>
        <trans-unit id="16f1d37b61e149769d5bb45d2d6b123bd696fbda" translate="yes" xml:space="preserve">
          <source>The string representation of this exception consists of information about where the error occurred, and the first unexecuted modification. This string is meant for debugging and not mean to be interpreted programmatically.</source>
          <target state="translated">この例外の文字列表現は、エラーが発生した場所と、最初に実行されなかった修正に関する情報で構成されています。この文字列はデバッグ用であり、プログラム的に解釈されることを意図したものではありません。</target>
        </trans-unit>
        <trans-unit id="c7de16e9df6affa420db9ce81302405c1dfefd55" translate="yes" xml:space="preserve">
          <source>The string representation of this matcher</source>
          <target state="translated">このマッチャの文字列表現</target>
        </trans-unit>
        <trans-unit id="bb74ce786b3d545de3a84f33214617b02d5c2940" translate="yes" xml:space="preserve">
          <source>The string representation of this module</source>
          <target state="translated">このモジュールの文字列表現</target>
        </trans-unit>
        <trans-unit id="09eba65afc610d538d65c263d07c4a3212fcfe45" translate="yes" xml:space="preserve">
          <source>The string representation of this name/class pair.</source>
          <target state="translated">この名前とクラスのペアの文字列表現。</target>
        </trans-unit>
        <trans-unit id="053f914091e9887aaa58bf39744d8861af29fc0d" translate="yes" xml:space="preserve">
          <source>The string representation of this pattern</source>
          <target state="translated">このパターンの文字列表現</target>
        </trans-unit>
        <trans-unit id="c2acdbf9130b5c1f31215890014846c808d3f0b0" translate="yes" xml:space="preserve">
          <source>The string representation of this scanner</source>
          <target state="translated">このスキャナの文字列表現</target>
        </trans-unit>
        <trans-unit id="f450b24ffb7d9483210505aa1ae5491f8f1973d0" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;#getRawAuthority()&quot;&gt;&lt;code&gt;getRawAuthority&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;#getRawAuthority()&quot;&gt; &lt;code&gt;getRawAuthority&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="17b139befffb2c60f26b6e3ef4ef71139b888633" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;#getRawFragment()&quot;&gt;&lt;code&gt;getRawFragment&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;#getRawFragment()&quot;&gt; &lt;code&gt;getRawFragment&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="d13f16b94787c0c530d775e02f176898aa8709aa" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;#getRawPath()&quot;&gt;&lt;code&gt;getRawPath&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;#getRawPath()&quot;&gt; &lt;code&gt;getRawPath&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="49ceecc3a0a7b0c628428ecb824a9a4733fe10bc" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;#getRawQuery()&quot;&gt;&lt;code&gt;getRawQuery&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;#getRawQuery()&quot;&gt; &lt;code&gt;getRawQuery&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="950adaee23e256f95ac7d75c80da01a153533597" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;#getRawSchemeSpecificPart()&quot;&gt;&lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;#getRawSchemeSpecificPart()&quot;&gt; &lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="da24186777164723ddd293bab7dd828e99e48a24" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;#getRawUserInfo()&quot;&gt;&lt;code&gt;getRawUserInfo&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;#getRawUserInfo()&quot;&gt; &lt;code&gt;getRawUserInfo&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="0428783f6a2a4ed333a95d1448a2bc32086c9f46" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;uri#getRawAuthority--&quot;&gt;&lt;code&gt;getRawAuthority&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;uri#getRawAuthority--&quot;&gt; &lt;code&gt;getRawAuthority&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="99f4ef96c814a7c3937663953ec5ac06f173ebb2" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;uri#getRawFragment--&quot;&gt;&lt;code&gt;getRawFragment&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;uri#getRawFragment--&quot;&gt; &lt;code&gt;getRawFragment&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="a732cb50bbec78c973952b48ad9babe398c8380c" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;uri#getRawPath--&quot;&gt;&lt;code&gt;getRawPath&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;uri#getRawPath--&quot;&gt; &lt;code&gt;getRawPath&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="ddd6a70f437a36a8a334d3aa1a18560bd5c5720e" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;uri#getRawQuery--&quot;&gt;&lt;code&gt;getRawQuery&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;uri#getRawQuery--&quot;&gt; &lt;code&gt;getRawQuery&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="bc1a87d2cf19c437c64a305afdb85f728af90351" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;uri#getRawSchemeSpecificPart--&quot;&gt;&lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープオクテットのすべてのシーケンスが&lt;a href=&quot;#decode&quot;&gt;デコードさ&lt;/a&gt;れることを除いて、&lt;a href=&quot;uri#getRawSchemeSpecificPart--&quot;&gt; &lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="fc4374f3d0ad6e121222206c9e637bf592e8f4f3" translate="yes" xml:space="preserve">
          <source>The string returned by this method is equal to that returned by the &lt;a href=&quot;uri#getRawUserInfo--&quot;&gt;&lt;code&gt;getRawUserInfo&lt;/code&gt;&lt;/a&gt; method except that all sequences of escaped octets are &lt;a href=&quot;#decode&quot;&gt;decoded&lt;/a&gt;.</source>
          <target state="translated">このメソッドによって返される文字列は、エスケープ&lt;a href=&quot;#decode&quot;&gt;され&lt;/a&gt;たオクテットのすべてのシーケンスがデコードされることを除いて、&lt;a href=&quot;uri#getRawUserInfo--&quot;&gt; &lt;code&gt;getRawUserInfo&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と同じです。</target>
        </trans-unit>
        <trans-unit id="15003a859c5ec3a6cdfdb74230384f43324ebc22" translate="yes" xml:space="preserve">
          <source>The string returned by this method is not a JNDI composite name and should not be passed directly to context methods.</source>
          <target state="translated">このメソッドが返す文字列はJNDIの合成名ではなく、コンテキストメソッドに直接渡すべきではありません。</target>
        </trans-unit>
        <trans-unit id="720d46b0678e4b58ffd12635e35e8f669c782484" translate="yes" xml:space="preserve">
          <source>The string returned by this method may differ from the string returned by the &lt;a href=&quot;../../lang/object#toString()&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドによって返される文字列は、&lt;a href=&quot;../../lang/object#toString()&quot;&gt; &lt;code&gt;toString&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列とは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="f2d86e2c12a8b526574d8ed3d4f0ad084aa1496f" translate="yes" xml:space="preserve">
          <source>The string returned by this method may differ from the string returned by the &lt;a href=&quot;../../lang/object#toString--&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドによって返される文字列は、&lt;a href=&quot;../../lang/object#toString--&quot;&gt; &lt;code&gt;toString&lt;/code&gt; &lt;/a&gt;メソッドによって返される文字列と異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="edba6dbdeab519bfb2488ac8fa5d24d1d5096a05" translate="yes" xml:space="preserve">
          <source>The string returned is made of the text content of this node depending on its type, as defined below:</source>
          <target state="translated">返される文字列は、以下に定義されるように、このノードの型に応じたテキスト内容で構成されています。</target>
        </trans-unit>
        <trans-unit id="a98b16691a6548a5f40d785a69cfe7819a08aa9f" translate="yes" xml:space="preserve">
          <source>The string starts with an optional sign, denoted by the ASCII negative or positive symbol. If negative, the whole period is negated. The ASCII letter &quot;P&quot; is next in upper or lower case. There are then four sections, each consisting of a number and a suffix. At least one of the four sections must be present. The sections have suffixes in ASCII of &quot;Y&quot;, &quot;M&quot;, &quot;W&quot; and &quot;D&quot; for years, months, weeks and days, accepted in upper or lower case. The suffixes must occur in order. The number part of each section must consist of ASCII digits. The number may be prefixed by the ASCII negative or positive symbol. The number must parse to an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">文字列はオプションの符号で始まり、ASCIIの負または正の記号で示されます。負の場合、期間全体が否定されます。 ASCII文字「P」は、大文字または小文字で次にあります。次に、4つのセクションがあり、それぞれ番号とサフィックスで構成されています。 4つのセクションのうち少なくとも1つが存在する必要があります。セクションには、年、月、週、日を表す「Y」、「M」、「W」、および「D」のASCIIのサフィックスがあり、大文字または小文字で受け入れられます。接尾辞は順番に出現する必要があります。各セクションの番号部分は、ASCII数字で構成する必要があります。番号の前には、ASCIIの負または正の記号を付けることができます。数値は &lt;code&gt;int&lt;/code&gt; に解析される必要があります。</target>
        </trans-unit>
        <trans-unit id="d0a3cf68706224b4e1564938792fbbb36cb2a5f2" translate="yes" xml:space="preserve">
          <source>The string starts with an optional sign, denoted by the ASCII negative or positive symbol. If negative, the whole period is negated. The ASCII letter &quot;P&quot; is next in upper or lower case. There are then four sections, each consisting of a number and a suffix. The sections have suffixes in ASCII of &quot;D&quot;, &quot;H&quot;, &quot;M&quot; and &quot;S&quot; for days, hours, minutes and seconds, accepted in upper or lower case. The suffixes must occur in order. The ASCII letter &quot;T&quot; must occur before the first occurrence, if any, of an hour, minute or second section. At least one of the four sections must be present, and if &quot;T&quot; is present there must be at least one section after the &quot;T&quot;. The number part of each section must consist of one or more ASCII digits. The number may be prefixed by the ASCII negative or positive symbol. The number of days, hours and minutes must parse to a &lt;code&gt;long&lt;/code&gt;. The number of seconds must parse to a &lt;code&gt;long&lt;/code&gt; with optional fraction. The decimal point may be either a dot or a comma. The fractional part may have from zero to 9 digits.</source>
          <target state="translated">文字列は、ASCIIの負または正の記号で示されるオプションの記号で始まります。負の場合、期間全体が否定されます。次に、ASCII文字「P」が大文字または小文字で表示されます。その場合、4つのセクションがあり、それぞれが数字と接尾辞で構成されます。セクションには、ASCIIで「D」、「H」、「M」、「S」の接尾辞があり、日、時間、分、秒が大文字または小文字で使用できます。接尾辞は順番に出現する必要があります。 ASCII文字「T」は、時間、分、または2番目のセクションが最初に出現する場合はその前に出現する必要があります。 4つのセクションの少なくとも1つが存在する必要があり、「T」が存在する場合は、「T」の後に少なくとも1つのセクションが存在する必要があります。各セクションの数字部分は、1つ以上のASCII数字で構成されている必要があります。番号の前には、ASCIIの負または正の記号を付けることができます。日、時間、分を解析する必要がある数 &lt;code&gt;long&lt;/code&gt; 。秒数は、オプションの小数部を使用して &lt;code&gt;long&lt;/code&gt; に解析する必要があります。小数点はドットまたはコンマのいずれかです。小数部分は0から9桁まで持つことができます。</target>
        </trans-unit>
        <trans-unit id="89a747d82990c6aea3987f68f6f2f3b3b15c1eff" translate="yes" xml:space="preserve">
          <source>The string starts with an optional sign, denoted by the ASCII negative or positive symbol. If negative, the whole period is negated. The ASCII letter &quot;P&quot; is next in upper or lower case. There are then four sections, each consisting of a number and a suffix. The sections have suffixes in ASCII of &quot;D&quot;, &quot;H&quot;, &quot;M&quot; and &quot;S&quot; for days, hours, minutes and seconds, accepted in upper or lower case. The suffixes must occur in order. The ASCII letter &quot;T&quot; must occur before the first occurrence, if any, of an hour, minute or second section. At least one of the four sections must be present, and if &quot;T&quot; is present there must be at least one section after the &quot;T&quot;. The number part of each section must consist of one or more ASCII digits. The number may be prefixed by the ASCII negative or positive symbol. The number of days, hours and minutes must parse to an &lt;code&gt;long&lt;/code&gt;. The number of seconds must parse to an &lt;code&gt;long&lt;/code&gt; with optional fraction. The decimal point may be either a dot or a comma. The fractional part may have from zero to 9 digits.</source>
          <target state="translated">文字列はオプションの符号で始まり、ASCIIの負または正の記号で示されます。負の場合、期間全体が否定されます。 ASCII文字「P」は、大文字または小文字で次にあります。次に、4つのセクションがあり、それぞれ番号とサフィックスで構成されています。セクションには、日、時、分、秒の「D」、「H」、「M」、および「S」のASCIIのサフィックスがあり、大文字または小文字で受け入れられます。接尾辞は順番に出現する必要があります。 ASCII文字「T」は、時間、分、または秒のセクションが最初に出現する場合、その前に出現する必要があります。 4つのセクションのうち少なくとも1つが存在する必要があり、「T」が存在する場合、「T」の後に少なくとも1つのセクションが存在する必要があります。各セクションの番号部分は、1つ以上のASCII数字で構成する必要があります。番号の前には、ASCIIの負または正の記号を付けることができます。日数、時間数、分数を解析して、 &lt;code&gt;long&lt;/code&gt; 。秒数は、オプションの小数部を使用して &lt;code&gt;long&lt;/code&gt; に解析する必要があります。小数点はドットまたはコンマのいずれかです。小数部は、0から9桁にすることができます。</target>
        </trans-unit>
        <trans-unit id="4685a9bbdb9380ea8c94c58ff588b3c8fbe09edf" translate="yes" xml:space="preserve">
          <source>The string that appears after a negative number (may be empty),</source>
          <target state="translated">負の数の後に表示される文字列(空の場合もあります)。</target>
        </trans-unit>
        <trans-unit id="121fd276daa28030f6a820cb1573874d3a75d6c9" translate="yes" xml:space="preserve">
          <source>The string that appears after a positive number (may be empty),</source>
          <target state="translated">正の数の後に表示される文字列(空の場合もあります)。</target>
        </trans-unit>
        <trans-unit id="5bdb1009de16112ed78878cf54efa430f792f9b9" translate="yes" xml:space="preserve">
          <source>The string that appears before a negative number (may be empty),</source>
          <target state="translated">負の数の前に現れる文字列(空の場合もあります)。</target>
        </trans-unit>
        <trans-unit id="ca10167dd9b711a6fe69878b203a07e7493844d5" translate="yes" xml:space="preserve">
          <source>The string that appears before a positive number (may be empty),</source>
          <target state="translated">正の数の前に現れる文字列(空の場合もあります)。</target>
        </trans-unit>
        <trans-unit id="1230518d13d5910243029a9e67f1cba26841e687" translate="yes" xml:space="preserve">
          <source>The string that represents infinity for floating-point values,</source>
          <target state="translated">浮動小数点値の無限大を表す文字列。</target>
        </trans-unit>
        <trans-unit id="0ef60f4fe5623badec9511506d8c3e9aab99fce8" translate="yes" xml:space="preserve">
          <source>The string that represents not-a-number for floating-point values,</source>
          <target state="translated">浮動小数点値の非数を表す文字列。</target>
        </trans-unit>
        <trans-unit id="a78a098297ed979ec8fd87a13cc391ae93c8972a" translate="yes" xml:space="preserve">
          <source>The string tokenizer class allows an application to break a string into tokens.</source>
          <target state="translated">文字列トークン化クラスは、アプリケーションが文字列をトークンに分割することを可能にします。</target>
        </trans-unit>
        <trans-unit id="04fb2cffb71f257048052d20b8fe56a4f66e790f" translate="yes" xml:space="preserve">
          <source>The string tokenizer class allows an application to break a string into tokens. The tokenization method is much simpler than the one used by the &lt;code&gt;StreamTokenizer&lt;/code&gt; class. The &lt;code&gt;StringTokenizer&lt;/code&gt; methods do not distinguish among identifiers, numbers, and quoted strings, nor do they recognize and skip comments.</source>
          <target state="translated">文字列トークナイザークラスを使用すると、アプリケーションで文字列をトークンに分割できます。トークン化メソッドは、 &lt;code&gt;StreamTokenizer&lt;/code&gt; クラスで使用されるメソッドよりもはるかに単純です。 &lt;code&gt;StringTokenizer&lt;/code&gt; はの方法は、識別子、数字、および引用符で囲まれた文字列を区別せず、また、コメントを認識してスキップします。</target>
        </trans-unit>
        <trans-unit id="53fa55c105fb0b4c765bc0d34087bf552da7b9c4" translate="yes" xml:space="preserve">
          <source>The string used to display the String in the syntax of the scripting language.</source>
          <target state="translated">スクリプト言語の構文で文字列を表示するために使用される文字列です。</target>
        </trans-unit>
        <trans-unit id="045b2391e6e713813d68e301a750110f4ff3677c" translate="yes" xml:space="preserve">
          <source>The string value in the current unit. The current &lt;code&gt;primitiveType&lt;/code&gt; can only be a string unit type (i.e. &lt;code&gt;CSS_STRING&lt;/code&gt;, &lt;code&gt;CSS_URI&lt;/code&gt;, &lt;code&gt;CSS_IDENT&lt;/code&gt; and &lt;code&gt;CSS_ATTR&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c78459f86d1f255e120d7d995d1329b245c41ee8" translate="yes" xml:space="preserve">
          <source>The string value of the output property, or null if no property was found.</source>
          <target state="translated">出力プロパティの文字列値、またはプロパティが見つからなかった場合はnull。</target>
        </trans-unit>
        <trans-unit id="6b860b97ae2648994958ff5f145b7575c2d21991" translate="yes" xml:space="preserve">
          <source>The string value.</source>
          <target state="translated">文字列の値。</target>
        </trans-unit>
        <trans-unit id="f11c947d653626328bad48f1c4cdf9159acc0a3b" translate="yes" xml:space="preserve">
          <source>The strings that can be parsed as numbers by an instance of this class are specified in terms of the following regular-expression grammar, where Rmax is the highest digit in the radix being used (for example, Rmax is 9 in base 10).</source>
          <target state="translated">このクラスのインスタンスによって数値として解析できる文字列は、以下の正規表現文法によって指定されます。</target>
        </trans-unit>
        <trans-unit id="192956733edd06bdd0c654a6ba995e1bcee04c0f" translate="yes" xml:space="preserve">
          <source>The structure and contents of the &quot;native&quot; metadata format are defined by the plug-in that created this &lt;code&gt;IIOMetadata&lt;/code&gt; object. Plug-ins for simple formats will usually create a dummy node for the root, and then a series of child nodes representing individual tags, chunks, or keyword/value pairs. A plug-in may choose whether or not to document its native format.</source>
          <target state="translated">「ネイティブ」メタデータ形式の構造とコンテンツは、この &lt;code&gt;IIOMetadata&lt;/code&gt; オブジェクトを作成したプラグインによって定義されます。単純なフォーマットのプラグインは通常、ルートのダミーノードを作成し、次に個々のタグ、チャンク、またはキーワードと値のペアを表す一連の子ノードを作成します。プラグインは、そのネイティブ形式を文書化するかどうかを選択できます。</target>
        </trans-unit>
        <trans-unit id="0d00af5b5c0dfb3866ccfa55c912f873c782dbff" translate="yes" xml:space="preserve">
          <source>The structure and encoding of Oids is defined in ISOIEC-8824 and ISOIEC-8825. For example the Oid representation of Kerberos V5 mechanism is &quot;1.2.840.113554.1.2.2&quot;</source>
          <target state="translated">Oid の構造とエンコーディングは ISOIEC-8824 と ISOIEC-8825 で定義されています。例えば、Kerberos V5メカニズムのOid表現は &quot;1.2.840.113554.1.2.2 &quot;です。</target>
        </trans-unit>
        <trans-unit id="cb2c5dc909eef768d7f9cd7e34bb554bcaaaebaa" translate="yes" xml:space="preserve">
          <source>The structure is a return type accompanied by any number of parameter types. The types (primitive, &lt;code&gt;void&lt;/code&gt;, and reference) are represented by &lt;a href=&quot;../class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; objects. (For ease of exposition, we treat &lt;code&gt;void&lt;/code&gt; as if it were a type. In fact, it denotes the absence of a return type.)</source>
          <target state="translated">構造体は、任意の数のパラメーター型を伴う戻り型です。タイプ（プリミティブ、 &lt;code&gt;void&lt;/code&gt; 、および参照）は&lt;a href=&quot;../class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;オブジェクトによって表されます。（説明を簡単にするために、 &lt;code&gt;void&lt;/code&gt; を型であるかのように扱います。実際には、戻り型がないことを示しています。）</target>
        </trans-unit>
        <trans-unit id="fdfbb9e2e84d666d2a855ee7c1631508d148c17f" translate="yes" xml:space="preserve">
          <source>The structures that may be described by this class are a subset of those expressible using XML document type definitions (DTDs), with the addition of some basic information on the datatypes of attributes and the ability to store an &lt;code&gt;Object&lt;/code&gt; reference within a node. In the future, XML Schemas could be used to represent these structures, and many others.</source>
          <target state="translated">このクラスで記述できる構造は、XML文書型定義（DTD）を使用して表現可能な構造のサブセットであり、属性のデータ型に関するいくつかの基本情報と、ノード内に &lt;code&gt;Object&lt;/code&gt; 参照を格納する機能が追加されています。将来的には、XMLスキーマを使用して、これらの構造やその他の多くの構造を表すことができます。</target>
        </trans-unit>
        <trans-unit id="bc1300b7e4fbbe647c420f08d4ea464e607a0b93" translate="yes" xml:space="preserve">
          <source>The stub class is loaded by name using the class loader of the root class. The stub class must be public, it must extend &lt;a href=&quot;remotestub&quot;&gt;&lt;code&gt;RemoteStub&lt;/code&gt;&lt;/a&gt;, it must reside in a package that is exported to at least the &lt;code&gt;java.rmi&lt;/code&gt; module, and it must have a public constructor that has one parameter of type &lt;a href=&quot;remoteref&quot;&gt;&lt;code&gt;RemoteRef&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">スタブクラスは、ルートクラスのクラスローダーを使用して名前でロードされます。スタブクラスはパブリックである必要が&lt;a href=&quot;remotestub&quot;&gt; &lt;code&gt;RemoteStub&lt;/code&gt; &lt;/a&gt;、RemoteStubを拡張する必要があり、少なくとも &lt;code&gt;java.rmi&lt;/code&gt; モジュールにエクスポートされるパッケージに存在する必要があり、&lt;a href=&quot;remoteref&quot;&gt; &lt;code&gt;RemoteRef&lt;/code&gt; &lt;/a&gt;タイプのパラメーターを1つ持つパブリックコンストラクターを持っている必要があります。</target>
        </trans-unit>
        <trans-unit id="a232a3677fbba52c761d261392a47c4a403e95f0" translate="yes" xml:space="preserve">
          <source>The stub might not yet be connected to the ORB. The stub will be serializable only if it is connected to the ORB.</source>
          <target state="translated">スタブはまだORBに接続されていないかもしれません。スタブはORBに接続されている場合のみシリアライズ可能です。</target>
        </trans-unit>
        <trans-unit id="7a3dc219e67d57ff39f5f91a47d644371a7f81d7" translate="yes" xml:space="preserve">
          <source>The style attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed2b6144ace5c60a1401e5428a1fc3686ffe408" translate="yes" xml:space="preserve">
          <source>The style of this &lt;code&gt;Font&lt;/code&gt;, as passed to the constructor.</source>
          <target state="translated">コンストラクターに渡されるこの &lt;code&gt;Font&lt;/code&gt; のスタイル。</target>
        </trans-unit>
        <trans-unit id="498a3c78ad0c0604083f3769f1ef9e8b0c526e13" translate="yes" xml:space="preserve">
          <source>The style of this &lt;code&gt;Font&lt;/code&gt;, as passed to the constructor. This style can be PLAIN, BOLD, ITALIC, or BOLD+ITALIC.</source>
          <target state="translated">コンストラクターに渡されるこの &lt;code&gt;Font&lt;/code&gt; のスタイル。このスタイルは、PLAIN、BOLD、ITALIC、またはBOLD + ITALICにすることができます。</target>
        </trans-unit>
        <trans-unit id="3b5b369b33d039728a33986fe140d97ea7763679" translate="yes" xml:space="preserve">
          <source>The style rule at the &lt;code&gt;index&lt;/code&gt; position in the &lt;code&gt;CSSRuleList&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if that is not a valid index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf88eb588be0aeabba5debf950c788477d4b197" translate="yes" xml:space="preserve">
          <source>The style sheet at the &lt;code&gt;index&lt;/code&gt; position in the &lt;code&gt;StyleSheetList&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if that is not a valid index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c8a67944fd96db1f04f842832d7d391bf84eef" translate="yes" xml:space="preserve">
          <source>The style sheet referred to by this rule, if it has been loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acffc6c2b340e9ca17170b9fd8575da7b38779f" translate="yes" xml:space="preserve">
          <source>The style sheet referred to by this rule, if it has been loaded. The value of this attribute is &lt;code&gt;null&lt;/code&gt; if the style sheet has not yet been loaded or if it will not be loaded (e.g. if the style sheet is for a media type not supported by the user agent).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f92ba7a8105c55f452b0e9e30526dc55ff36366" translate="yes" xml:space="preserve">
          <source>The style sheet that contains this rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f53855d9d4fc11da63155553b0c59e74844f7d" translate="yes" xml:space="preserve">
          <source>The style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff2ab664c61a826342f48467d919591b7be5528" translate="yes" xml:space="preserve">
          <source>The sub-range is defined to be out of bounds if any of the following inequalities is true:</source>
          <target state="translated">サブレンジは、以下の不等式のいずれかが真であれば圏外と定義される。</target>
        </trans-unit>
        <trans-unit id="e5c879c6bdae17e077ece202d05c591a659999bb" translate="yes" xml:space="preserve">
          <source>The subclass may supply a different base name for the resource bundles using the &lt;code&gt;setResourceBaseName&lt;/code&gt; method.</source>
          <target state="translated">サブクラスは、 &lt;code&gt;setResourceBaseName&lt;/code&gt; メソッドを使用して、リソースバンドルに異なるベース名を提供する場合があります。</target>
        </trans-unit>
        <trans-unit id="527c0a0960cc0fe34b4ce860e5a1c2222c46e968" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; for the SQLState class value '</source>
          <target state="translated">SQLStateクラス値の&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラス'</target>
        </trans-unit>
        <trans-unit id="7713c2f78de0d5ff78645f34f1aa9c89839a8b5a" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; is thrown in situations where a previously failed operation might be able to succeed when the operation is retried without any intervention by application-level functionality.</source>
          <target state="translated">&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラスは、アプリケーションレベルの機能による介入なしに操作が再試行されたときに、以前に失敗した操作が成功する可能性がある状況でスローされます。</target>
        </trans-unit>
        <trans-unit id="80f483f7072263836c5107593eb17db254d36bf4" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; is thrown when one or more client info properties could not be set on a &lt;code&gt;Connection&lt;/code&gt;.</source>
          <target state="translated">1つ以上のクライアント情報プロパティを &lt;code&gt;Connection&lt;/code&gt; に設定できなかった場合、&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラスがスローされます。</target>
        </trans-unit>
        <trans-unit id="7b3fc8fd4fb26a88d9f95ef4851700e0411e08a2" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; is thrown when one or more client info properties could not be set on a &lt;code&gt;Connection&lt;/code&gt;. In addition to the information provided by &lt;code&gt;SQLException&lt;/code&gt;, a &lt;code&gt;SQLClientInfoException&lt;/code&gt; provides a list of client info properties that were not set. Some databases do not allow multiple client info properties to be set atomically. For those databases, it is possible that some of the client info properties had been set even though the &lt;code&gt;Connection.setClientInfo&lt;/code&gt; method threw an exception. An application can use the &lt;code&gt;getFailedProperties &lt;/code&gt; method to retrieve a list of client info properties that were not set. The properties are identified by passing a &lt;code&gt;Map&amp;lt;String,ClientInfoStatus&amp;gt;&lt;/code&gt; to the appropriate &lt;code&gt;SQLClientInfoException&lt;/code&gt; constructor.</source>
          <target state="translated">1つ以上のクライアント情報プロパティを &lt;code&gt;Connection&lt;/code&gt; に設定できなかった場合、&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラスがスローされます。提供される情報に加えて &lt;code&gt;SQLException&lt;/code&gt; 、 &lt;code&gt;SQLClientInfoException&lt;/code&gt; 設定されていなかったクライアント情報プロパティーのリストを提供します。一部のデータベースでは、複数のクライアント情報プロパティをアトミックに設定できません。これらのデータベースでは、 &lt;code&gt;Connection.setClientInfo&lt;/code&gt; メソッドが例外をスローした場合でも、一部のクライアント情報プロパティが設定されている可能性があります。アプリケーションは、 &lt;code&gt;getFailedProperties &lt;/code&gt; メソッドを使用して、設定されていないクライアント情報プロパティのリストを取得できます。プロパティは、 &lt;code&gt;Map&amp;lt;String,ClientInfoStatus&amp;gt;&lt;/code&gt; を適切な &lt;code&gt;SQLClientInfoException&lt;/code&gt; コンストラクターにマップします。</target>
        </trans-unit>
        <trans-unit id="6717effbf2eae66083ee44deed5d8b60c5c6fe2d" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; thrown for the SQLState class value '</source>
          <target state="translated">SQLStateクラス値に対してスローされた&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラス'</target>
        </trans-unit>
        <trans-unit id="8607beac95f1d4cb0f607da7d63685d6dfbf8d4c" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; thrown in situations where a previously failed operation might be able to succeed if the application performs some recovery steps and retries the entire transaction or in the case of a distributed transaction, the transaction branch.</source>
          <target state="translated">アプリケーションがいくつかの回復手順を実行してトランザクション全体を再試行した場合、または分散トランザクションの場合はトランザクションブランチを再試行した場合に、以前に失敗した操作が成功する可能性がある状況でスローされる&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラス。</target>
        </trans-unit>
        <trans-unit id="bbb8274ee2db6a0201b391b30cdfd8adbecfb841" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; thrown in situations where a previously failed operation might be able to succeed if the application performs some recovery steps and retries the entire transaction or in the case of a distributed transaction, the transaction branch. At a minimum, the recovery operation must include closing the current connection and getting a new connection.</source>
          <target state="translated">アプリケーションがいくつかの回復手順を実行してトランザクション全体を再試行した場合、または分散トランザクションの場合はトランザクションブランチを再試行した場合に、以前に失敗した操作が成功する可能性がある状況でスローされる&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラス。少なくとも、リカバリ操作には、現在の接続を閉じて新しい接続を取得することが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="a54587a45ff8b2645e125fd0b8ffb8307a8ef66b" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; thrown when an error occurs during a batch update operation.</source>
          <target state="translated">バッチ更新操作中にエラーが発生したときにスローされる&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラス。</target>
        </trans-unit>
        <trans-unit id="803499fb5061ae4d61cec028a03de443ffd7786f" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; thrown when an error occurs during a batch update operation. In addition to the information provided by &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt;, a &lt;code&gt;BatchUpdateException&lt;/code&gt; provides the update counts for all commands that were executed successfully during the batch update, that is, all commands that were executed before the error occurred. The order of elements in an array of update counts corresponds to the order in which commands were added to the batch.</source>
          <target state="translated">バッチ更新操作中にエラーが発生したときにスローされる&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラス。提供される情報に加えて&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;BatchUpdateException&lt;/code&gt; のは、エラーが発生する前に実行されたすべてのコマンドでバッチ更新中に正常に実行されたすべてのコマンドの更新カウントを提供します。更新カウントの配列内の要素の順序は、コマンドがバッチに追加された順序に対応しています。</target>
        </trans-unit>
        <trans-unit id="72d539ca6fdd4b7c88bd110f4dcd389de1ff790c" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; thrown when an instance where a retry of the same operation would fail unless the cause of the &lt;code&gt;SQLException&lt;/code&gt; is corrected.</source>
          <target state="translated">サブクラス&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;の原因がない限り同じ操作の再試行が失敗する場合にスロー &lt;code&gt;SQLException&lt;/code&gt; が修正されます。</target>
        </trans-unit>
        <trans-unit id="040505f7787304a32e3c75ae93a27084235243c1" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; thrown when the SQLState class value is '</source>
          <target state="translated">SQLStateクラス値が 'の&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;スローされるSQLExceptionのサブクラス</target>
        </trans-unit>
        <trans-unit id="ccf2e655300c92dbbb85b4f642a0803f74b73233" translate="yes" xml:space="preserve">
          <source>The subclass of &lt;a href=&quot;sqlexception&quot;&gt;&lt;code&gt;SQLException&lt;/code&gt;&lt;/a&gt; thrown when the timeout specified by &lt;code&gt;Statement.setQueryTimeout&lt;/code&gt;, &lt;code&gt;DriverManager.setLoginTimeout&lt;/code&gt;, &lt;code&gt;DataSource.setLoginTimeout&lt;/code&gt;,&lt;code&gt;XADataSource.setLoginTimeout&lt;/code&gt; has expired.</source>
          <target state="translated">&lt;code&gt;Statement.setQueryTimeout&lt;/code&gt; 、 &lt;code&gt;DriverManager.setLoginTimeout&lt;/code&gt; 、 &lt;code&gt;DataSource.setLoginTimeout&lt;/code&gt; 、 &lt;code&gt;XADataSource.setLoginTimeout&lt;/code&gt; で指定されたタイムアウトが期限切れになったときにスローされる&lt;a href=&quot;sqlexception&quot;&gt; &lt;code&gt;SQLException&lt;/code&gt; &lt;/a&gt;のサブクラス。</target>
        </trans-unit>
        <trans-unit id="62072bc327b8cecfe4f10440c7fba64d72ceae2d" translate="yes" xml:space="preserve">
          <source>The subclass returned depends on the value of &lt;a href=&quot;#isParseBigDecimal()&quot;&gt;&lt;code&gt;isParseBigDecimal()&lt;/code&gt;&lt;/a&gt; as well as on the string being parsed.</source>
          <target state="translated">返されるサブクラスは、&lt;a href=&quot;#isParseBigDecimal()&quot;&gt; &lt;code&gt;isParseBigDecimal()&lt;/code&gt; の&lt;/a&gt;値と、解析される文字列によって異なります。</target>
        </trans-unit>
        <trans-unit id="bac1d40c541f2bc78282b5fcf04be8326df2e993" translate="yes" xml:space="preserve">
          <source>The subclass returned depends on the value of &lt;a href=&quot;decimalformat#isParseBigDecimal--&quot;&gt;&lt;code&gt;isParseBigDecimal()&lt;/code&gt;&lt;/a&gt; as well as on the string being parsed.</source>
          <target state="translated">返されるサブクラスは、&lt;a href=&quot;decimalformat#isParseBigDecimal--&quot;&gt; &lt;code&gt;isParseBigDecimal()&lt;/code&gt; の&lt;/a&gt;値と解析される文字列によって異なります。</target>
        </trans-unit>
        <trans-unit id="b79749f58cf1bfcecb1d563bcce417c79a3f48ee" translate="yes" xml:space="preserve">
          <source>The subclass's &lt;code&gt;set(int, E)&lt;/code&gt;, &lt;code&gt;get(int)&lt;/code&gt;, &lt;code&gt;add(int, E)&lt;/code&gt;, &lt;code&gt;remove(int)&lt;/code&gt;, &lt;code&gt;addAll(int,
 Collection)&lt;/code&gt; and &lt;code&gt;removeRange(int, int)&lt;/code&gt; methods all delegate to the corresponding methods on the backing abstract list, after bounds-checking the index and adjusting for the offset. The &lt;code&gt;addAll(Collection c)&lt;/code&gt; method merely returns &lt;code&gt;addAll(size,
 c)&lt;/code&gt;.</source>
          <target state="translated">サブクラスの &lt;code&gt;set(int, E)&lt;/code&gt; 、 &lt;code&gt;get(int)&lt;/code&gt; 、 &lt;code&gt;add(int, E)&lt;/code&gt; 、 &lt;code&gt;remove(int)&lt;/code&gt; 、 &lt;code&gt;addAll(int, Collection)&lt;/code&gt; および &lt;code&gt;removeRange(int, int)&lt;/code&gt; メソッドはすべて、バッキングアブストラクトの対応するメソッドに委譲しますリスト、インデックスの境界チェックとオフセットの調整後。 &lt;code&gt;addAll(Collection c)&lt;/code&gt; 方法は、単に返す &lt;code&gt;addAll(size, c)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="729c3d64219547cb810998bd0f169dacbb67b1a4" translate="yes" xml:space="preserve">
          <source>The subclasses of &lt;code&gt;LayerUI&lt;/code&gt; can either be stateless and shareable by multiple &lt;code&gt;JLayer&lt;/code&gt;s or not shareable.</source>
          <target state="translated">&lt;code&gt;LayerUI&lt;/code&gt; のサブクラスは、ステートレスで複数の &lt;code&gt;JLayer&lt;/code&gt; によって共有可能であるか、共有不可能である可能性があります。</target>
        </trans-unit>
        <trans-unit id="41754262853cd8dda8e7145fb4fe6436a4d4ac99" translate="yes" xml:space="preserve">
          <source>The subprocess is not killed when there are no more references to the &lt;code&gt;Process&lt;/code&gt; object, but rather the subprocess continues executing asynchronously.</source>
          <target state="translated">これ以上の言及がない場合、サブプロセスが殺されていない &lt;code&gt;Process&lt;/code&gt; オブジェクトはではなく、サブプロセスは、非同期的に実行を続けます。</target>
        </trans-unit>
        <trans-unit id="7c7df4f8cdb60df8a1704c9b01b240279889a753" translate="yes" xml:space="preserve">
          <source>The subscriber returned by this handler is not flow controlled. Therefore, the supplied consumer must be able to process whatever amount of data is delivered in a timely fashion.</source>
          <target state="translated">このハンドラによって返されるサブスクライバはフロー制御されない。したがって、供給されたコンシューマは、どのような量のデータであっても、タイムリーに配信されたデータを処理することができなければならない。</target>
        </trans-unit>
        <trans-unit id="24df0de55c6e5cbab8a446a4d7da62cab861430c" translate="yes" xml:space="preserve">
          <source>The subsequence of the argument &lt;code&gt;s&lt;/code&gt; specified by &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; are inserted, in order, into this sequence at the specified destination offset, moving up any characters originally above that position. The length of this sequence is increased by &lt;code&gt;end - start&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; と &lt;code&gt;end&lt;/code&gt; で指定された引数 &lt;code&gt;s&lt;/code&gt; のサブシーケンスが、このシーケンスの指定された宛先オフセットに順番に挿入され、その位置より上にある文字が上に移動します。このシーケンスの長さは、 &lt;code&gt;end - start&lt;/code&gt; によって増加します。</target>
        </trans-unit>
        <trans-unit id="98347390f1f0edc351744b3bec1803d66b95c900" translate="yes" xml:space="preserve">
          <source>The subtract filter operation.</source>
          <target state="translated">減算フィルタの操作です。</target>
        </trans-unit>
        <trans-unit id="fa32b35464f9186e85feb28d5c8d747a2ca57b4f" translate="yes" xml:space="preserve">
          <source>The subtypes of &lt;a href=&quot;constantdesc&quot;&gt;&lt;code&gt;ConstantDesc&lt;/code&gt;&lt;/a&gt; describe various kinds of constant values. For each type of loadable constant pool entry defined in JVMS 4.4, there is a corresponding subtype of &lt;a href=&quot;constantdesc&quot;&gt;&lt;code&gt;ConstantDesc&lt;/code&gt;&lt;/a&gt;: &lt;a href=&quot;classdesc&quot;&gt;&lt;code&gt;ClassDesc&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;methodtypedesc&quot;&gt;&lt;code&gt;MethodTypeDesc&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;directmethodhandledesc&quot;&gt;&lt;code&gt;DirectMethodHandleDesc&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../long&quot;&gt;&lt;code&gt;Long&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../double&quot;&gt;&lt;code&gt;Double&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;dynamicconstantdesc&quot;&gt;&lt;code&gt;DynamicConstantDesc&lt;/code&gt;&lt;/a&gt;. These classes provide type-specific accessor methods to extract the nominal information for that kind of constant. When a bytecode-writing API encounters a &lt;a href=&quot;constantdesc&quot;&gt;&lt;code&gt;ConstantDesc&lt;/code&gt;&lt;/a&gt;, it should examine it to see which of these types it is, cast it, extract its nominal information, and generate the corresponding entry to the constant pool. When a bytecode-reading API encounters a constant pool entry, it can convert it to the appropriate type of nominal descriptor. For dynamic constants, bytecode-reading APIs may wish to use the factory &lt;a href=&quot;dynamicconstantdesc#ofCanonical(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc%5B%5D)&quot;&gt;&lt;code&gt;DynamicConstantDesc.ofCanonical&lt;/code&gt;&lt;/a&gt;, which will inspect the bootstrap and, for well-known bootstraps, return a more specific subtype of &lt;a href=&quot;dynamicconstantdesc&quot;&gt;&lt;code&gt;DynamicConstantDesc&lt;/code&gt;&lt;/a&gt;, such as &lt;a href=&quot;../enum.enumdesc&quot;&gt;&lt;code&gt;Enum.EnumDesc&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb649597713d07a6a3f68ef4b622114bd9bb42f" translate="yes" xml:space="preserve">
          <source>The sum returned can vary depending upon the order in which values are recorded, due to accumulated rounding error in addition of values of differing magnitudes. Values sorted by increasing absolute magnitude tend to yield more accurate results. If any recorded value is a &lt;code&gt;NaN&lt;/code&gt; or the sum is at any point a &lt;code&gt;NaN&lt;/code&gt; then the sum will be &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">返される合計は、異なる大きさの値に加えて累積された丸め誤差が原因で、値が記録される順序によって異なる場合があります。絶対値を大きくしてソートした値は、より正確な結果をもたらす傾向があります。記録された値が &lt;code&gt;NaN&lt;/code&gt; である場合、または合計が任意の時点で &lt;code&gt;NaN&lt;/code&gt; である場合、合計は &lt;code&gt;NaN&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="b5b109e54c81cacf004fb931535e7f7c5e9a6ad4" translate="yes" xml:space="preserve">
          <source>The super class of all menu related containers.</source>
          <target state="translated">メニュー関連のすべてのコンテナのスーパークラス。</target>
        </trans-unit>
        <trans-unit id="2edd5140cff4220974aa4530adeee309c448831e" translate="yes" xml:space="preserve">
          <source>The superclass behavior will try to update the child views which is not desired in this case, since the children are zones and not directly effected by the changes to the associated element.</source>
          <target state="translated">スーパークラスの動作は子ビューを更新しようとしますが、子はゾーンであり、関連する要素への変更によって直接影響を受けないため、この場合は望ましくありません。</target>
        </trans-unit>
        <trans-unit id="223c3b7c239c5d80bf9c6472a205737e2c00d21b" translate="yes" xml:space="preserve">
          <source>The superclass behavior will try to update the child views which is not desired in this case, since the children are zones and not directly effected by the changes to the associated element. This is reimplemented to do nothing and return false.</source>
          <target state="translated">スーパークラスの動作は子ビューを更新しようとしますが、子はゾーンであり、関連する要素への変更によって直接影響を受けないため、この場合は望ましくありません。これは、何もせずに false を返すように再実装されています。</target>
        </trans-unit>
        <trans-unit id="21955f67e39653298d554b40ee6256104e191d63" translate="yes" xml:space="preserve">
          <source>The superclass of JShell generated exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602000e37c0a2e549407c0c276a26b61377db86f" translate="yes" xml:space="preserve">
          <source>The supertypes (both class and interface types) of a declared type may be found using the &lt;a href=&quot;../util/types#directSupertypes(javax.lang.model.type.TypeMirror)&quot;&gt;&lt;code&gt;Types.directSupertypes(TypeMirror)&lt;/code&gt;&lt;/a&gt; method. This returns the supertypes with any type arguments substituted in.</source>
          <target state="translated">宣言された型のスーパータイプ（クラス型とインターフェイス型の両方）は、&lt;a href=&quot;../util/types#directSupertypes(javax.lang.model.type.TypeMirror)&quot;&gt; &lt;code&gt;Types.directSupertypes(TypeMirror)&lt;/code&gt; &lt;/a&gt;メソッドを使用して見つけることができます。これにより、で置換された型引数を持つスーパータイプが返されます。</target>
        </trans-unit>
        <trans-unit id="8b4fd272478c2bf5755a6c3fbfac56931cb9665d" translate="yes" xml:space="preserve">
          <source>The supertypes (both class and interface types) of a declared type may be found using the &lt;a href=&quot;../util/types#directSupertypes-javax.lang.model.type.TypeMirror-&quot;&gt;&lt;code&gt;Types.directSupertypes(TypeMirror)&lt;/code&gt;&lt;/a&gt; method. This returns the supertypes with any type arguments substituted in.</source>
          <target state="translated">宣言されたタイプのスーパータイプ（クラスタイプとインターフェイスタイプの両方）は、&lt;a href=&quot;../util/types#directSupertypes-javax.lang.model.type.TypeMirror-&quot;&gt; &lt;code&gt;Types.directSupertypes(TypeMirror)&lt;/code&gt; &lt;/a&gt;メソッドを使用して見つけることができます。これは、置換された型引数を持つスーパータイプを返します。</target>
        </trans-unit>
        <trans-unit id="dc5747fa903eaf6ac98267f42bc62b68fd35ff94" translate="yes" xml:space="preserve">
          <source>The supplied &lt;code&gt;CompositeData&lt;/code&gt; must have the following item names and item types to be valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca7e4f038d5dc8de6f6523df8470fdb5a3affbb" translate="yes" xml:space="preserve">
          <source>The supplied &lt;code&gt;index&lt;/code&gt; corresponds to the index of the &lt;a href=&quot;valuedescriptor&quot;&gt;&lt;code&gt;ValueDescriptor&lt;/code&gt;&lt;/a&gt; object passed to the factory method of the &lt;code&gt;EventFactory&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14dfb8fa2619f0e88128d788e30861e3728092dc" translate="yes" xml:space="preserve">
          <source>The supplied accumulator function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. For predictable results, the accumulator function should be commutative and associative within the floating point tolerance required in usage contexts. The function is applied with an existing value (or identity) as one argument, and a given update as the other argument. For example, to maintain a running maximum value, you could supply &lt;code&gt;Double::max&lt;/code&gt; along with &lt;code&gt;Double.NEGATIVE_INFINITY&lt;/code&gt; as the identity. The order of accumulation within or across threads is not guaranteed. Thus, this class may not be applicable if numerical stability is required, especially when combining values of substantially different orders of magnitude.</source>
          <target state="translated">提供されているアキュムレータ関数は、スレッド間の競合が原因で更新の試行が失敗した場合に再適用される可能性があるため、副作用がない必要があります。予測可能な結果を​​得るには、アキュムレータ関数は、使用状況で必要な浮動小数点の許容範囲内で可換かつ結合的である必要があります。この関数は、既存の値（またはID）を1つの引数として適用し、特定の更新をもう1つの引数として適用します。たとえば、実行中の最大値を維持するには、IDとして &lt;code&gt;Double.NEGATIVE_INFINITY&lt;/code&gt; とともに &lt;code&gt;Double::max&lt;/code&gt; を指定できます。スレッド内またはスレッド間での累積の順序は保証されません。したがって、数値的安定性が必要な場合、特に実質的に異なる桁の値を組み合わせる場合、このクラスは適用できない可能性があります。</target>
        </trans-unit>
        <trans-unit id="6acd237472bddb6f88b28a9f2fd993ab87094ddb" translate="yes" xml:space="preserve">
          <source>The supplied accumulator function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value as its first argument, and the given update as the second argument. For example, to maintain a running maximum value, you could supply &lt;code&gt;Double::max&lt;/code&gt; along with &lt;code&gt;Double.NEGATIVE_INFINITY&lt;/code&gt; as the identity. The order of accumulation within or across threads is not guaranteed. Thus, this class may not be applicable if numerical stability is required, especially when combining values of substantially different orders of magnitude.</source>
          <target state="translated">提供されたアキュムレータ関数は、スレッド間の競合により更新の試行が失敗したときに再適用される可能性があるため、副作用がないはずです。関数は、現在の値を最初の引数として、指定された更新を2番目の引数として適用されます。たとえば、実行中の最大値を維持するには、 &lt;code&gt;Double::max&lt;/code&gt; と &lt;code&gt;Double.NEGATIVE_INFINITY&lt;/code&gt; としてDouble.NEGATIVE_INFINITYを指定できます。スレッド内またはスレッド間の累積の順序は保証されません。したがって、特に実質的に異なる桁の値を組み合わせる場合など、数値の安定性が必要な場合、このクラスは適用できない場合があります。</target>
        </trans-unit>
        <trans-unit id="6025b666165a1f5fda89da5a8e8ee1de31444459" translate="yes" xml:space="preserve">
          <source>The supplied array holding three internalized strings representing the Namespace URI (or empty string), the local name, and the XML qualified name; or null if there is an undeclared prefix.</source>
          <target state="translated">与えられた配列は、名前空間 URI (または空文字列)、ローカル名、XML修飾名を表す3つの内部化された文字列を保持します。</target>
        </trans-unit>
        <trans-unit id="7ad24e24ba3ab22cd4ef21994274386c9cd69325" translate="yes" xml:space="preserve">
          <source>The supplied object parameter acts as an optional configuration argument. For example, it could be of type &lt;code&gt;Component&lt;/code&gt;. A &lt;code&gt;Painter&lt;/code&gt; that expected it could then read state from that &lt;code&gt;Component&lt;/code&gt; and use the state for painting. For example, an implementation may read the backgroundColor and use that.</source>
          <target state="translated">指定されたオブジェクトパラメータは、オプションの構成引数として機能します。たとえば、タイプが &lt;code&gt;Component&lt;/code&gt; である可能性があります。次に、その &lt;code&gt;Component&lt;/code&gt; から状態を読み取り、その状態をペイントに使用できることを期待していた &lt;code&gt;Painter&lt;/code&gt; 。たとえば、実装はbackgroundColorを読み取ってそれを使用する場合があります。</target>
        </trans-unit>
        <trans-unit id="b84e7dcea201cffacdcbf9be7a2353ff95d845a5" translate="yes" xml:space="preserve">
          <source>The supplied thumbnails will be resized if needed, and any thumbnails in excess of the supported number will be ignored. If the format requires additional thumbnails that are not provided, the writer should generate them internally.</source>
          <target state="translated">提供されたサムネイルは必要に応じてサイズ変更され、サポートされている数を超えるサムネイルは無視されます。フォーマットが提供されていない追加のサムネイルを必要とする場合は、ライターは内部的にサムネイルを生成する必要があります。</target>
        </trans-unit>
        <trans-unit id="753904bcbd3964af858d18cda3d913205d84b5e6" translate="yes" xml:space="preserve">
          <source>The supplied thumbnails will be resized if needed, and any thumbnails in excess of the supported number will be ignored. If the format requires additional thumbnails that are not provided, the writer will generate them internally.</source>
          <target state="translated">提供されたサムネイルは必要に応じてサイズ変更され、サポートされている数を超えるサムネイルは無視されます。フォーマットが提供されていない追加のサムネイルを必要とする場合、ライターは内部的にサムネイルを生成します。</target>
        </trans-unit>
        <trans-unit id="bce2b22d14479cd69e56124d69d47db8b57076ba" translate="yes" xml:space="preserve">
          <source>The support for this is provided by the &lt;code&gt;StyleSheet&lt;/code&gt; class. The presentation of the HTML can be heavily influenced by the setting of the StyleSheet property on the EditorKit.</source>
          <target state="translated">これのサポートは、 &lt;code&gt;StyleSheet&lt;/code&gt; クラスによって提供されます。HTMLの表示は、EditorKitのStyleSheetプロパティの設定に大きく影響される可能性があります。</target>
        </trans-unit>
        <trans-unit id="cc15d8eee723cd7e4ccfbd5a0f0bd59ce88d1002" translate="yes" xml:space="preserve">
          <source>The supported &lt;code&gt;ChronoField&lt;/code&gt; instances are:</source>
          <target state="translated">サポートされている &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="8b2cd39555d2c728a665b32d4100c19f45b92402" translate="yes" xml:space="preserve">
          <source>The supported calendar systems includes:</source>
          <target state="translated">対応しているカレンダーシステムは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="83bd48a0eac4e9b358a53d73d8f0c393f28dcfbc" translate="yes" xml:space="preserve">
          <source>The supported categories are those of &lt;a href=&quot;http://www.unicode.org/unicode/standard/standard.html&quot;&gt; &lt;i&gt;The Unicode Standard&lt;/i&gt;&lt;/a&gt; in the version specified by the &lt;a href=&quot;../../lang/character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt; class. The category names are those defined in the Standard, both normative and informative.</source>
          <target state="translated">サポートされるカテゴリは、&lt;a href=&quot;../../lang/character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; &lt;/a&gt;クラスで指定されたバージョン&lt;a href=&quot;http://www.unicode.org/unicode/standard/standard.html&quot;&gt;&lt;i&gt;のUnicode標準の&lt;/i&gt;&lt;/a&gt;カテゴリです。カテゴリ名は、規格で定義されているものであり、規範的であり、有益です。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="1b938fa603bd5aaba697922eb2fb711a539cf4d0" translate="yes" xml:space="preserve">
          <source>The supported categories are those of &lt;a href=&quot;https://www.unicode.org/unicode/standard/standard.html&quot;&gt; &lt;i&gt;The Unicode Standard&lt;/i&gt;&lt;/a&gt; in the version specified by the &lt;a href=&quot;../../lang/character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt; class. The category names are those defined in the Standard, both normative and informative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4eb01860151689f1f6379a2545112126849a160" translate="yes" xml:space="preserve">
          <source>The supported class file changes are described in &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jvmti.html#RedefineClasses&quot;&gt;JVM TI RedefineClasses&lt;/a&gt;. The class file bytes are not checked, verified and installed until after the transformations have been applied, if the resultant bytes are in error this method will throw an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05137876edd3b6b6a29d96ad5b9b3edf239fae6" translate="yes" xml:space="preserve">
          <source>The supported class file changes are described in &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jvmti.html#RetransformClasses&quot;&gt;JVM TI RetransformClasses&lt;/a&gt;. The class file bytes are not checked, verified and installed until after the transformations have been applied, if the resultant bytes are in error this method will throw an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c2737ecb716851489499e7d8287bbcd13402f5" translate="yes" xml:space="preserve">
          <source>The supported component types (variables types) are &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">サポートされているコンポーネントタイプ（変数タイプ）は、 &lt;code&gt;short&lt;/code&gt; 、 &lt;code&gt;char&lt;/code&gt; 、 &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt;long&lt;/code&gt; 、 &lt;code&gt;float&lt;/code&gt; 、および &lt;code&gt;double&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1f2e9acf0920ea9550ff69da281e2ea26f2481f3" translate="yes" xml:space="preserve">
          <source>The supported syntax is:</source>
          <target state="translated">サポートされている構文は</target>
        </trans-unit>
        <trans-unit id="8d6a5bc82895e1be1c598d816a928419e077fb62" translate="yes" xml:space="preserve">
          <source>The supported units are &lt;a href=&quot;temporal/chronounit#SECONDS&quot;&gt;&lt;code&gt;SECONDS&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;temporal/chronounit#NANOS&quot;&gt;&lt;code&gt;NANOS&lt;/code&gt;&lt;/a&gt;. They are returned in the order seconds, nanos.</source>
          <target state="translated">サポートされる単位は&lt;a href=&quot;temporal/chronounit#SECONDS&quot;&gt; &lt;code&gt;SECONDS&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;temporal/chronounit#NANOS&quot;&gt; &lt;code&gt;NANOS&lt;/code&gt; &lt;/a&gt;です。秒単位のナノで返されます。</target>
        </trans-unit>
        <trans-unit id="50995038a878ce286701de766382bef69778b604" translate="yes" xml:space="preserve">
          <source>The supported units are &lt;a href=&quot;temporal/chronounit#YEARS&quot;&gt;&lt;code&gt;YEARS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;temporal/chronounit#MONTHS&quot;&gt;&lt;code&gt;MONTHS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt;. They are returned in the order years, months, days.</source>
          <target state="translated">サポートされている単位は、&lt;a href=&quot;temporal/chronounit#YEARS&quot;&gt; &lt;code&gt;YEARS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;temporal/chronounit#MONTHS&quot;&gt; &lt;code&gt;MONTHS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; &lt;/a&gt;です。年、月、日の順序で返品されます。</target>
        </trans-unit>
        <trans-unit id="7618ee46d4016ebcae2e5cbf1a065473c760968b" translate="yes" xml:space="preserve">
          <source>The supported units are chronology specific. They will typically be &lt;a href=&quot;../temporal/chronounit#YEARS&quot;&gt;&lt;code&gt;YEARS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../temporal/chronounit#MONTHS&quot;&gt;&lt;code&gt;MONTHS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt;. Requesting an unsupported unit will throw an exception.</source>
          <target state="translated">サポートされている単位は、年表に固有です。彼らは一般的になります&lt;a href=&quot;../temporal/chronounit#YEARS&quot;&gt; &lt;code&gt;YEARS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../temporal/chronounit#MONTHS&quot;&gt; &lt;code&gt;MONTHS&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; &lt;/a&gt;。サポートされていないユニットを要求すると、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="b30d06d3ef729bd157ab81214e7e89bcf4f23fd7" translate="yes" xml:space="preserve">
          <source>The supported units are chronology specific. They will typically be &lt;a href=&quot;../temporal/chronounit#YEARS&quot;&gt;&lt;code&gt;YEARS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../temporal/chronounit#MONTHS&quot;&gt;&lt;code&gt;MONTHS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt;. They are returned in order from largest to smallest.</source>
          <target state="translated">サポートされているユニットは、年代順です。彼らは一般的になります&lt;a href=&quot;../temporal/chronounit#YEARS&quot;&gt; &lt;code&gt;YEARS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../temporal/chronounit#MONTHS&quot;&gt; &lt;code&gt;MONTHS&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; &lt;/a&gt;。大きいものから小さいものの順に返されます。</target>
        </trans-unit>
        <trans-unit id="612ea5ebf89d96a0eba935a9ea4b0154afc481ad" translate="yes" xml:space="preserve">
          <source>The supported units of a period are &lt;a href=&quot;temporal/chronounit#YEARS&quot;&gt;&lt;code&gt;YEARS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;temporal/chronounit#MONTHS&quot;&gt;&lt;code&gt;MONTHS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt;. All three fields are always present, but may be set to zero.</source>
          <target state="translated">サポートされている期間の単位は、&lt;a href=&quot;temporal/chronounit#YEARS&quot;&gt; &lt;code&gt;YEARS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;temporal/chronounit#MONTHS&quot;&gt; &lt;code&gt;MONTHS&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; &lt;/a&gt;です。3つのフィールドはすべて常に存在しますが、ゼロに設定することもできます。</target>
        </trans-unit>
        <trans-unit id="ba6f6bccc56ef3d310dd0f60418a50729535d8d9" translate="yes" xml:space="preserve">
          <source>The suppression behavior is enabled &lt;em&gt;unless&lt;/em&gt; disabled &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;via a constructor&lt;/a&gt;. When suppression is disabled, this method does nothing other than to validate its argument.</source>
          <target state="translated">&lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;コンストラクターで&lt;/a&gt;無効にし&lt;em&gt;ない限り&lt;/em&gt;、抑制動作は有効になります。抑制が無効になっている場合、このメソッドは引数を検証する以外に何もしません。</target>
        </trans-unit>
        <trans-unit id="f5be801d8d7c141429eb2a06d10b0aef903302c4" translate="yes" xml:space="preserve">
          <source>The suppression behavior is enabled &lt;em&gt;unless&lt;/em&gt; disabled &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;via a constructor&lt;/a&gt;. When suppression is disabled, this method does nothing other than to validate its argument.</source>
          <target state="translated">抑制動作は&lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;、コンストラクタで&lt;/a&gt;無効にし&lt;em&gt;ない限り&lt;/em&gt;有効です。抑制が無効になっている場合、このメソッドは引数を検証する以外に何もしません。</target>
        </trans-unit>
        <trans-unit id="82ebf4133d954ce86d747b54dfa4cfd4018049ca" translate="yes" xml:space="preserve">
          <source>The suspended thread is guaranteed to remain suspended until resumed through one of the JDI resume methods mentioned above; the application in the target VM cannot resume the suspended thread through &lt;a href=&quot;../../../../java.base/java/lang/thread#resume()&quot;&gt;&lt;code&gt;Thread.resume()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d792cc659c3710e68412ad26001e0365e4fe31b" translate="yes" xml:space="preserve">
          <source>The swing text components provide some support of thread safe operations. Because of the high level of configurability of the text components, it is possible to circumvent the protection provided. The protection primarily comes from the model, so the documentation of &lt;code&gt;AbstractDocument&lt;/code&gt; describes the assumptions of the protection provided. The methods that are safe to call asynchronously are marked with comments.</source>
          <target state="translated">スイングテキストコンポーネントは、スレッドセーフ操作のサポートを提供します。テキストコンポーネントの構成可能性が高いため、提供される保護を回避することができます。保護は主にモデルに由来するため、 &lt;code&gt;AbstractDocument&lt;/code&gt; のドキュメントには、提供される保護の前提条件が記載されています。非同期で安全に呼び出すことができるメソッドには、コメントが付いています。</target>
        </trans-unit>
        <trans-unit id="841ed2261b840ee034e2fc667a839f1eea97e56b" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;
 compareAndExchange&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.COMPARE_AND_EXCHANGE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt; compareAndExchange&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.COMPARE_AND_EXCHANGE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="80c4a3b73d48513a6615b83f39f27edf617e75d0" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;
 compareAndExchangeAcquire&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.COMPARE_AND_EXCHANGE_ACQUIRE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt; compareAndExchangeAcquire&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.COMPARE_AND_EXCHANGE_ACQUIRE)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="6fd514eb09ba3f8f2597220841a1a986e13cd4bc" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;
 compareAndExchangeRelease&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.COMPARE_AND_EXCHANGE_RELEASE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt; compareAndExchangeRelease&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.COMPARE_AND_EXCHANGE_RELEASE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="d8383b8927a886acbd2d87b4f789aa3cd1800f65" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;
 compareAndSet&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.COMPARE_AND_SET)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt; compareAndSet&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.COMPARE_AND_SET)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="0fc1fe303a671f659dfcb75ed69ad915a0b9cf34" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;
 weakCompareAndSet&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.WEAK_COMPARE_AND_SET)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt; weakCompareAndSet&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.WEAK_COMPARE_AND_SET)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="a2d6fc33cce92819cac6f3c0aae23a1e0f658baf" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;
 weakCompareAndSetAcquire&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.WEAK_COMPARE_AND_SET_ACQUIRE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt; weakCompareAndSetAcquire&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.WEAK_COMPARE_AND_SET_ACQUIRE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="c238fc4ba306a85bf1a7b6a1059990d27fd23416" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;
 weakCompareAndSetPlain&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.WEAK_COMPARE_AND_SET_PLAIN)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt; weakCompareAndSetPlain&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.WEAK_COMPARE_AND_SET_PLAIN)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="3caa02cdc85af699be3da720087d3b254a1e0d14" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;
 weakCompareAndSetRelease&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.WEAK_COMPARE_AND_SET_RELEASE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt; weakCompareAndSetRelease&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.WEAK_COMPARE_AND_SET_RELEASE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="d92d0c26fd0ceacd6a22912f8e08a2af1144ac03" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;get&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="785e11e22d0e4f59f3c358dd707d0c8bb9c45c5d" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAcquire&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_ACQUIRE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAcquire&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_ACQUIRE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="3909d7fd71a3ce0d45b42b91b83a4cb3a38cc4c7" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndAdd&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_ADD)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndAdd&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_ADD)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="b8c1e07e45f3df0e3f4c7960f4689cc7ff853fb5" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndAddAcquire&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_ADD_ACQUIRE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndAddAcquire&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_ADD_ACQUIRE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="bb3556eafa083c922f5ddc536ef70abc23d8064c" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndAddRelease&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_ADD_RELEASE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndAddRelease&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_ADD_RELEASE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="aab207cd06c5ec5d7499697ca6ba7769359b6579" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseAnd&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_AND)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseAnd&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_AND)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="836795e8bc56b921c84886828b4ff0823073d2b0" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseAndAcquire&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_AND_ACQUIRE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseAndAcquire&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_AND_ACQUIRE)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="78cc40ca583a385f170594f785f938d9b667b6eb" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseAndRelease&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_AND_RELEASE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseAndRelease&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_AND_RELEASE)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="845f2ed88bc26c3452225eb1d4ee813e31903cab" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseOr&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_OR)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseOr&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_OR)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="2ddd9f837d79fd41f1a93fe6a1f1e69fb4737c0f" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseOrAcquire&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_OR_ACQUIRE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseOrAcquire&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_OR_ACQUIRE)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="b92e606932a5540d338db4148a4c5b8e213940b9" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseOrRelease&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_OR_RELEASE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseOrRelease&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_OR_RELEASE)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="248d840d1056e103e71ed4367a20a6f5c5c6b14b" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseXor&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_XOR)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseXor&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_XOR)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="6603458f74711c546450ff99c0fa6a4f391bc1ad" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseXorAcquire&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_XOR_ACQUIRE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseXorAcquire&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_XOR_ACQUIRE)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="582cd1e29d747ef96d86945b9cc3596d644def63" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndBitwiseXorRelease&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_XOR_RELEASE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndBitwiseXorRelease&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_BITWISE_XOR_RELEASE)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="0b49e84c3b73b7c67f75202b8dcf68959c3b67df" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndSet&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_SET)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndSet&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_SET)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="726283d34708064e448798ed7558fd26056194bc" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndSetAcquire&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_SET_ACQUIRE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndSetAcquire&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_SET_ACQUIRE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="d72b516be7afed65c7b9b32c7e234a778cc590e8" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getAndSetRelease&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_SET_RELEASE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getAndSetRelease&lt;/code&gt; の呼び出しサイトのシンボリック型記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_AND_SET_RELEASE)&lt;/code&gt; を呼び出した結果であるアクセスモード型と一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="4a3f7c47047a21314dc4bcc3cfef336f2dea3704" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getOpaque&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_OPAQUE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getOpaque&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_OPAQUE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="80d17bb7d7e04c4f675b8b6a6964580c44801bf2" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;getVolatile&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_VOLATILE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;getVolatile&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.GET_VOLATILE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="94be2d0c54621beaec5e232a04f1856df457acaf" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;set&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.SET)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.SET)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="158dfc3921c96e11341de806f439c35a94497773" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;setOpaque&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.SET_OPAQUE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;setOpaque&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.SET_OPAQUE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="342170d52a224940f39c38e69957aa300beeb148" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;setRelease&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.SET_RELEASE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;setRelease&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.SET_RELEASE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="68ed9d8b4bcd184b8baaaf811374d5c92f6c83db" translate="yes" xml:space="preserve">
          <source>The symbolic type descriptor at the call site of &lt;code&gt;setVolatile&lt;/code&gt; must match the access mode type that is the result of calling &lt;code&gt;accessModeType(VarHandle.AccessMode.SET_VOLATILE)&lt;/code&gt; on this VarHandle.</source>
          <target state="translated">&lt;code&gt;setVolatile&lt;/code&gt; の呼び出しサイトのシンボリックタイプ記述子は、このVarHandleで &lt;code&gt;accessModeType(VarHandle.AccessMode.SET_VOLATILE)&lt;/code&gt; を呼び出した結果であるアクセスモードタイプと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="52423f32e1b10ddbf83308406995a99e390cdeaf" translate="yes" xml:space="preserve">
          <source>The synchronization mechanism that provides reader/writer capabilities for disconnected &lt;code&gt;RowSet&lt;/code&gt; objects.</source>
          <target state="translated">切断された &lt;code&gt;RowSet&lt;/code&gt; オブジェクトにリーダー/ライター機能を提供する同期メカニズム。</target>
        </trans-unit>
        <trans-unit id="711ab65736cb44038b84d447045e9ee485fba83d" translate="yes" xml:space="preserve">
          <source>The synchronization mechanism that provides reader/writer capabilities for disconnected &lt;code&gt;RowSet&lt;/code&gt; objects. A &lt;code&gt;SyncProvider&lt;/code&gt; implementation is a class that extends the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class.</source>
          <target state="translated">切断された &lt;code&gt;RowSet&lt;/code&gt; オブジェクトにリーダー/ライター機能を提供する同期メカニズム。 &lt;code&gt;SyncProvider&lt;/code&gt; 実装は、拡張するクラスである &lt;code&gt;SyncProvider&lt;/code&gt; 抽象クラスを。</target>
        </trans-unit>
        <trans-unit id="939dc2dd97681934d81029b8ea6d3b61888d9016" translate="yes" xml:space="preserve">
          <source>The syntactic form of this case:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3288e69953928bbb2335d7fc9bfc195092f73df" translate="yes" xml:space="preserve">
          <source>The syntactic form of this case: STATEMENT: &lt;code&gt;case &amp;lt;expression&amp;gt;: &amp;lt;statements&amp;gt;&lt;/code&gt; RULE: &lt;code&gt;case &amp;lt;expression&amp;gt; -&amp;gt; &amp;lt;expression&amp;gt;/&amp;lt;statement&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e55e499a6fc5c1dbd4e8b7511cc0424a80a9f71" translate="yes" xml:space="preserve">
          <source>The syntactic locations where annotations may appear are split into &lt;em&gt;declaration contexts&lt;/em&gt; , where annotations apply to declarations, and &lt;em&gt;type contexts&lt;/em&gt; , where annotations apply to types used in declarations and expressions.</source>
          <target state="translated">注釈が表示されることが構文位置はに分割され&lt;em&gt;宣言コンテキスト&lt;/em&gt;注釈は宣言、およびに適用さ、&lt;em&gt;タイプコンテキスト&lt;/em&gt;注釈が宣言および式で使用されるタイプに適用され、。</target>
        </trans-unit>
        <trans-unit id="d632ddfa97c4cad739a3e8bfa95d9d9894f9d8e2" translate="yes" xml:space="preserve">
          <source>The syntactic locations where annotations may appear are split into &lt;em&gt;declaration contexts&lt;/em&gt;, where annotations apply to declarations, and &lt;em&gt;type contexts&lt;/em&gt;, where annotations apply to types used in declarations and expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a77c038c4619155739ddefe087cb77c766d025" translate="yes" xml:space="preserve">
          <source>The syntax of &lt;code&gt;URL&lt;/code&gt; is defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;&lt;i&gt;RFC 2396: Uniform Resource Identifiers (URI): Generic Syntax&lt;/i&gt;&lt;/a&gt;, amended by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;RFC 2732: Format for Literal IPv6 Addresses in URLs&lt;/i&gt;&lt;/a&gt;. The Literal IPv6 address format also supports scope_ids. The syntax and usage of scope_ids is described &lt;a href=&quot;inet6address#scoped&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;URL&lt;/code&gt; の構文は&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;&lt;i&gt;RFC 2396：Uniform Resource Identifiers（URI）：Generic Syntax&lt;/i&gt;&lt;/a&gt;、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;RFC 2732：Formats for Literal IPv6 Addresses in &lt;/i&gt;&lt;/a&gt;&lt;i&gt;URLsで&lt;/i&gt;定義され&lt;i&gt;てい&lt;/i&gt;&lt;i&gt;ます&lt;/i&gt;。リテラルIPv6アドレス形式は、scope_idもサポートしています。&lt;a href=&quot;inet6address#scoped&quot;&gt;ここで&lt;/a&gt;は、scope_idsの構文と使用法について説明します。</target>
        </trans-unit>
        <trans-unit id="d30895ab44eb5b5f1c0c0bd25de8d5e5b87d3b73" translate="yes" xml:space="preserve">
          <source>The syntax of &lt;code&gt;URL&lt;/code&gt; is defined by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;&lt;i&gt;RFC 2396: Uniform Resource Identifiers (URI): Generic Syntax&lt;/i&gt;&lt;/a&gt;, amended by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;RFC 2732: Format for Literal IPv6 Addresses in URLs&lt;/i&gt;&lt;/a&gt;. The Literal IPv6 address format also supports scope_ids. The syntax and usage of scope_ids is described &lt;a href=&quot;inet6address#scoped&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449145cc99d61f1de8faac0f36747e42eeda60f0" translate="yes" xml:space="preserve">
          <source>The syntax of a JAR URL is:</source>
          <target state="translated">JAR URLの構文は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="08fb1f0d6774918d6dc928c999a8c810bc3e1cf4" translate="yes" xml:space="preserve">
          <source>The syntax of a compound name is specified using a set of properties:</source>
          <target state="translated">複合名の構文は、一連のプロパティを使用して指定します。</target>
        </trans-unit>
        <trans-unit id="4fb2ecb6c058b701542fac5ca88a96aa5fb606b8" translate="yes" xml:space="preserve">
          <source>The system &lt;code&gt;ClassLoader&lt;/code&gt;</source>
          <target state="translated">システム &lt;code&gt;ClassLoader&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="74f5647e4732b56055ffb73b5ef679c9f6b0e018" translate="yes" xml:space="preserve">
          <source>The system &lt;code&gt;ClassLoader&lt;/code&gt; for delegation, or &lt;code&gt;null&lt;/code&gt; if none</source>
          <target state="translated">委任用のシステム &lt;code&gt;ClassLoader&lt;/code&gt; 。存在しない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09bd470fb008a04d052a9d37972d68c9fb1da6a5" translate="yes" xml:space="preserve">
          <source>The system can interpolate the provided value.</source>
          <target state="translated">システムは、提供された値を補間することができます。</target>
        </trans-unit>
        <trans-unit id="e53b892170425a40e4822de5a8c352ee0cdcdd75" translate="yes" xml:space="preserve">
          <source>The system class loader supports adding a JAR file to be searched if it implements a method named &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; which takes a single parameter of type &lt;code&gt;java.lang.String&lt;/code&gt;. The method is not required to have &lt;code&gt;public&lt;/code&gt; access. The name of the JAR file is obtained by invoking the &lt;a href=&quot;../../../../java.base/java/util/zip/zipfile#getName()&quot;&gt;&lt;code&gt;getName()&lt;/code&gt;&lt;/a&gt; method on the &lt;code&gt;jarfile&lt;/code&gt; and this is provided as the parameter to the &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; method.</source>
          <target state="translated">システムクラスローダーは、 &lt;code&gt;java.lang.String&lt;/code&gt; 型の単一パラメーターを &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; という名前のメソッドを実装している場合、検索対象のJARファイルの追加をサポートします。このメソッドは、 &lt;code&gt;public&lt;/code&gt; アクセスを持つ必要はありません。 JARファイルの名前を呼び出すことによって得られる&lt;a href=&quot;../../../../java.base/java/util/zip/zipfile#getName()&quot;&gt; &lt;code&gt;getName()&lt;/code&gt; &lt;/a&gt;のメソッド &lt;code&gt;jarfile&lt;/code&gt; 、これは、パラメータとして提供される &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; の方法。</target>
        </trans-unit>
        <trans-unit id="74a5a2feb3472fb9649c9e133c6a12917cacd2aa" translate="yes" xml:space="preserve">
          <source>The system class loader supports adding a JAR file to be searched if it implements a method named &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; which takes a single parameter of type &lt;code&gt;java.lang.String&lt;/code&gt;. The method is not required to have &lt;code&gt;public&lt;/code&gt; access. The name of the JAR file is obtained by invoking the &lt;a href=&quot;../../util/zip/zipfile#getName--&quot;&gt;&lt;code&gt;getName()&lt;/code&gt;&lt;/a&gt; method on the &lt;code&gt;jarfile&lt;/code&gt; and this is provided as the parameter to the &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; method.</source>
          <target state="translated">システムクラスローダーは、タイプ &lt;code&gt;java.lang.String&lt;/code&gt; の単一のパラメーターを &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; という名前のメソッドを実装する場合、検索するJARファイルの追加をサポートします。このメソッドは、 &lt;code&gt;public&lt;/code&gt; アクセスを持つ必要はありません。JARファイルの名前は、 &lt;code&gt;jarfile&lt;/code&gt; の&lt;a href=&quot;../../util/zip/zipfile#getName--&quot;&gt; &lt;code&gt;getName()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得されます。これは、 &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; メソッドのパラメーターとして提供されます。</target>
        </trans-unit>
        <trans-unit id="e7007628b7373da2f3acc46dea4b6fc181e177f3" translate="yes" xml:space="preserve">
          <source>The system console, if any, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">システムコンソール（ある場合）、それ以外の場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="990083cbffe223d7dee670ed0f3eec843ed8520d" translate="yes" xml:space="preserve">
          <source>The system default &lt;code&gt;LoggerFinder&lt;/code&gt; implementation uses &lt;code&gt;java.util.logging&lt;/code&gt; as the backend framework when the &lt;code&gt;java.logging&lt;/code&gt; module is present. It returns a &lt;a href=&quot;system.logger&quot;&gt;logger&lt;/a&gt; instance that will route log messages to a &lt;a href=&quot;../../../java.logging/java/util/logging/logger&quot;&gt;&lt;code&gt;java.util.logging.Logger&lt;/code&gt;&lt;/a&gt;. Otherwise, if &lt;code&gt;java.logging&lt;/code&gt; is not present, the default implementation will return a simple logger instance that will route log messages of &lt;code&gt;INFO&lt;/code&gt; level and above to the console (&lt;code&gt;System.err&lt;/code&gt;).</source>
          <target state="translated">システムのデフォルトの &lt;code&gt;LoggerFinder&lt;/code&gt; 実装は、 &lt;code&gt;java.logging&lt;/code&gt; モジュールが存在する場合、バックエンドフレームワークとして &lt;code&gt;java.util.logging&lt;/code&gt; を使用します。ログメッセージを&lt;a href=&quot;../../../java.logging/java/util/logging/logger&quot;&gt; &lt;code&gt;java.util.logging.Logger&lt;/code&gt; に&lt;/a&gt;ルーティングする&lt;a href=&quot;system.logger&quot;&gt;ロガー&lt;/a&gt;インスタンスを返します。それ以外の場合、 &lt;code&gt;java.logging&lt;/code&gt; が存在しない場合、デフォルトの実装は、 &lt;code&gt;INFO&lt;/code&gt; レベル以上のログメッセージをコンソール（ &lt;code&gt;System.err&lt;/code&gt; ）にルーティングする単純なロガーインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="3cf101b78cd06413158b1ec4f8db88795dfdf0e0" translate="yes" xml:space="preserve">
          <source>The system does not provide a reason for a session change.</source>
          <target state="translated">システムはセッション変更の理由を提供していません。</target>
        </trans-unit>
        <trans-unit id="d37ff3b03f83b416aeccd9836d23dd0072998488" translate="yes" xml:space="preserve">
          <source>The system identifier as a string, or null if none is available.</source>
          <target state="translated">システム識別子を文字列で指定します。</target>
        </trans-unit>
        <trans-unit id="c9d316b1fe86ec8261312bc65a64ba6fd6ecd9f6" translate="yes" xml:space="preserve">
          <source>The system identifier associated with the entity if specified, and &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">指定されている場合はエンティティに関連付けられているシステム識別子、それ以外の場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df19c9feca0d6dc04cc43c03e2d1251edf9e4510" translate="yes" xml:space="preserve">
          <source>The system identifier associated with the entity if specified, and &lt;code&gt;null&lt;/code&gt; otherwise. This may be an absolute URI or not.</source>
          <target state="translated">指定されている場合はエンティティに関連付けられているシステム識別子、それ以外の場合は &lt;code&gt;null&lt;/code&gt; 。これは絶対URIである場合とそうでない場合があります。</target>
        </trans-unit>
        <trans-unit id="b32fa52354502a426e561283736887788b3252db" translate="yes" xml:space="preserve">
          <source>The system identifier is optional if the source does not get its data from a URL, but it may still be useful to provide one. The application can use a system identifier, for example, to resolve relative URIs and to include in error messages and warnings.</source>
          <target state="translated">システム識別子は、ソースがURLからデータを取得しない場合はオプションですが、システム識別子を提供することは有用かもしれません。アプリケーションはシステム識別子を使用して、例えば相対URIを解決したり、エラーメッセージや警告に含めることができます。</target>
        </trans-unit>
        <trans-unit id="2364c05ce4f7479bebd35fee2edf0a7d214455de" translate="yes" xml:space="preserve">
          <source>The system identifier is optional if there is a byte stream or a character stream, but it is still useful to provide one, since the application can use it to resolve relative URIs and can include it in error messages and warnings (the parser will attempt to open a connection to the URI only if no byte stream or character stream is specified).</source>
          <target state="translated">システム識別子は、バイトストリームや文字ストリームがある場合にはオプションですが、アプリケーションが相対URIを解決するために使用したり、エラーメッセージや警告に含めることができるので、提供しておくと便利です(パーサは、バイトストリームや文字ストリームが指定されていない場合にのみ、URIへの接続を開こうとします)。</target>
        </trans-unit>
        <trans-unit id="c83b9a58a230a52e3ca07250c92629dfdd6df1bf" translate="yes" xml:space="preserve">
          <source>The system identifier is optional if there is a byte stream or a character stream, but it is still useful to provide one, since the application can use it to resolve relative URIs and can include it in error messages and warnings (the parser will attempt to open a connection to the URI only if there is no byte stream or character stream specified).</source>
          <target state="translated">システム識別子は、バイトストリームや文字ストリームがある場合はオプションですが、アプリケーションが相対URIを解決するために使用したり、エラーメッセージや警告に含めることができるので、システム識別子を提供することは有用です(パーサは、バイトストリームや文字ストリームが指定されていない場合にのみ、URIへの接続を開こうとします)。</target>
        </trans-unit>
        <trans-unit id="3cef073d95130421d24f48582c3ee6a831095599" translate="yes" xml:space="preserve">
          <source>The system identifier may be &lt;code&gt;null&lt;/code&gt; or an empty &lt;code&gt;&quot;&quot;&lt;/code&gt;&lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">システム識別子は、 &lt;code&gt;null&lt;/code&gt; または空の &lt;code&gt;&quot;&quot;&lt;/code&gt; &lt;code&gt;String&lt;/code&gt; 場合があります。</target>
        </trans-unit>
        <trans-unit id="ff7e558528664a0592a67c50fde5c5a005f60b33" translate="yes" xml:space="preserve">
          <source>The system identifier of the external subset.</source>
          <target state="translated">外部サブセットのシステム識別子。</target>
        </trans-unit>
        <trans-unit id="5b27a3eb89c729d7e642ff92ff95e3dac820f59c" translate="yes" xml:space="preserve">
          <source>The system identifier of the external subset. This may be an absolute URI or not.</source>
          <target state="translated">外部サブセットのシステム識別子。これは絶対 URI である場合とそうでない場合がある。</target>
        </trans-unit>
        <trans-unit id="ff0c997f101dd04693253ebc52fe8874df3b5062" translate="yes" xml:space="preserve">
          <source>The system identifier of this notation.</source>
          <target state="translated">この記法のシステム識別子。</target>
        </trans-unit>
        <trans-unit id="54b96c3bc9ebc5adfe89119951cb415cb6d98e20" translate="yes" xml:space="preserve">
          <source>The system identifier of this notation. If the system identifier was not specified, this is &lt;code&gt;null&lt;/code&gt;. This may be an absolute URI or not.</source>
          <target state="translated">この表記のシステム識別子。システム識別子が指定されていない場合、これは &lt;code&gt;null&lt;/code&gt; です。これは絶対URIである場合とそうでない場合があります。</target>
        </trans-unit>
        <trans-unit id="e0dc421d48b89f1f1bd983b514fa401be307f95f" translate="yes" xml:space="preserve">
          <source>The system identifier that was set with setSystemId, or null if setSystemId was not called.</source>
          <target state="translated">setSystemId で設定されたシステム識別子、または setSystemId が呼び出されなかった場合は null。</target>
        </trans-unit>
        <trans-unit id="a1ce02ce7ff2b78b9dae3fc1cf570c0f7333877f" translate="yes" xml:space="preserve">
          <source>The system identifier, a URI reference [&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC 2396&lt;/a&gt;], for this input source.</source>
          <target state="translated">この入力ソースのシステム識別子、URI参照[ &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC2396&lt;/a&gt; ]。</target>
        </trans-unit>
        <trans-unit id="257e29fd1c5d73c7e7ae227aff860a12a6b60071" translate="yes" xml:space="preserve">
          <source>The system identifier, a URI reference [&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC 2396&lt;/a&gt;], for this input source. The system identifier is optional if there is a byte stream, a character stream, or string data. It is still useful to provide one, since the application will use it to resolve any relative URIs and can include it in error messages and warnings. (The LSParser will only attempt to fetch the resource identified by the URI reference if there is no other input available in the input source.)</source>
          <target state="translated">この入力ソースのシステム識別子、URI参照[ &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC2396&lt;/a&gt; ]。バイトストリーム、文字ストリーム、または文字列データがある場合、システム識別子はオプションです。アプリケーションはそれを使用して相対URIを解決し、エラーメッセージや警告に含めることができるため、これを提供することは依然として有用です。（LSParserは、入力ソースに使用可能な他の入力がない場合にのみ、URI参照によって識別されるリソースをフェッチしようとします。）</target>
        </trans-unit>
        <trans-unit id="9aecaed599272a3cd0476ff61a2a3b31138ead77" translate="yes" xml:space="preserve">
          <source>The system identifier, a URI reference [&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC 2396&lt;/a&gt;], for this output destination.</source>
          <target state="translated">この出力先のシステム識別子、URI参照[ &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC2396&lt;/a&gt; ]。</target>
        </trans-unit>
        <trans-unit id="b0ed5624153545966ebdca177865c153cb4b447e" translate="yes" xml:space="preserve">
          <source>The system identifier, a URI reference [&lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC 2396&lt;/a&gt;], for this input source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68cb3432f3f6642c8c7a7d7fc19e09015d305ffe" translate="yes" xml:space="preserve">
          <source>The system identifier, a URI reference [&lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC 2396&lt;/a&gt;], for this input source. The system identifier is optional if there is a byte stream, a character stream, or string data. It is still useful to provide one, since the application will use it to resolve any relative URIs and can include it in error messages and warnings. (The LSParser will only attempt to fetch the resource identified by the URI reference if there is no other input available in the input source.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a3303bba8bb8e092ba3f05afe26aab40de2240" translate="yes" xml:space="preserve">
          <source>The system identifier, a URI reference [&lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC 2396&lt;/a&gt;], for this output destination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac19f96242350b7673acfdd7d4b02b017a83550" translate="yes" xml:space="preserve">
          <source>The system identifier, or null if none was supplied.</source>
          <target state="translated">システム識別子、または何も与えられなかった場合はnull。</target>
        </trans-unit>
        <trans-unit id="9432be2aa85292b809c263d55400ca2c13bb187f" translate="yes" xml:space="preserve">
          <source>The system identifier.</source>
          <target state="translated">システム識別子です。</target>
        </trans-unit>
        <trans-unit id="33154309f44b1f3e4b9b63aa2db5ffb66d8d5f1d" translate="yes" xml:space="preserve">
          <source>The system modules, which are the compiled definitions built in to the environment.</source>
          <target state="translated">環境に組み込まれたコンパイルされた定義であるシステムモジュール。</target>
        </trans-unit>
        <trans-unit id="9ffce2da0a02206a57f77d7fbe2f3119028884ac" translate="yes" xml:space="preserve">
          <source>The system properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60418fc7a6719a8685abc353065d31174ef68f2" translate="yes" xml:space="preserve">
          <source>The system property &lt;code&gt;&lt;span id=&quot;java.security.auth.login.config&quot;&gt;java.security.auth.login.config&lt;/span&gt;&lt;/code&gt; may also be set to a &lt;code&gt;URL&lt;/code&gt; pointing to another login configuration file (which is the case when a user uses the -D switch at runtime). If this property is defined, and its use is allowed by the security property file (the Security property,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fb25c617804e775187a1ef35381adde7a462d2" translate="yes" xml:space="preserve">
          <source>The system property that controls which Factory implementation to create is named &lt;code&gt;&quot;javax.xml.parsers.SAXParserFactory&quot;&lt;/code&gt;. This property names a class that is a concrete subclass of this abstract class. If no property is defined, a platform default will be used.</source>
          <target state="translated">作成するファクトリ実装を制御するシステムプロパティの名前は &lt;code&gt;&quot;javax.xml.parsers.SAXParserFactory&quot;&lt;/code&gt; です。このプロパティは、この抽象クラスの具象サブクラスであるクラスに名前を付けます。プロパティが定義されていない場合は、プラットフォームのデフォルトが使用されます。</target>
        </trans-unit>
        <trans-unit id="7d513879bd2964703d8728b1b4c20e907f2382f9" translate="yes" xml:space="preserve">
          <source>The system property that determines which Factory implementation to create is named &lt;code&gt;&quot;javax.xml.transform.TransformerFactory&quot;&lt;/code&gt;. This property names a concrete subclass of the &lt;code&gt;TransformerFactory&lt;/code&gt; abstract class. If the property is not defined, a platform default is be used.</source>
          <target state="translated">作成するファクトリ実装を決定するシステムプロパティは、 &lt;code&gt;&quot;javax.xml.transform.TransformerFactory&quot;&lt;/code&gt; という名前です。このプロパティは、 &lt;code&gt;TransformerFactory&lt;/code&gt; 抽象クラスの具象サブクラスに名前を付けます。プロパティが定義されていない場合は、プラットフォームのデフォルトが使用されます。</target>
        </trans-unit>
        <trans-unit id="305047c960aad4ed37ebc14427e984473ca4e5f9" translate="yes" xml:space="preserve">
          <source>The system property to override the system class loader is not examined until the VM is almost fully initialized. Code that executes this method during startup should take care not to cache the return value until the system is fully initialized.</source>
          <target state="translated">システムクラスローダをオーバーライドするためのシステムプロパティは、VMがほぼ完全に初期化されるまで検査されません。起動時にこのメソッドを実行するコードは、システムが完全に初期化されるまで戻り値をキャッシュしないように注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="1f722c038ba46377c26c7b3d111ee938421ee539" translate="yes" xml:space="preserve">
          <source>The system property to specify the DOMImplementationSource class names.</source>
          <target state="translated">DOMImplementationSource のクラス名を指定するシステムプロパティです。</target>
        </trans-unit>
        <trans-unit id="78a2fb8c1adaa830a99ae7c2ad610a98649d150e" translate="yes" xml:space="preserve">
          <source>The system will probe the specified file to determine its keystore type and return a keystore implementation with its entries already loaded. When this approach is used there is no need to call the keystore's &lt;a href=&quot;#load(java.io.InputStream,char%5B%5D)&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">システムは、指定されたファイルをプローブしてそのキーストアタイプを判別し、エントリがすでにロードされたキーストア実装を返します。このアプローチを使用する場合、キーストアの&lt;a href=&quot;#load(java.io.InputStream,char%5B%5D)&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt;メソッドを呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="7923449f8c0c0791eb5aa081bc5a65fcb2555819" translate="yes" xml:space="preserve">
          <source>The system will return a keystore implementation for the default type.</source>
          <target state="translated">システムは、デフォルト型のキーストアの実装を返します。</target>
        </trans-unit>
        <trans-unit id="00bc1824cf3bd5ca4947f7d237f20eddafbb842c" translate="yes" xml:space="preserve">
          <source>The system will return the most preferred implementation of the specified keystore type available in the environment.</source>
          <target state="translated">システムは、環境で利用可能な指定されたキーストア型の最も好ましい実装を返します。</target>
        </trans-unit>
        <trans-unit id="bf575b9617841369bd0654ef25dcbd4387d7d8b2" translate="yes" xml:space="preserve">
          <source>The system-dependent default name-separator character, represented as a string for convenience.</source>
          <target state="translated">システム依存のデフォルトの名前区切り文字。</target>
        </trans-unit>
        <trans-unit id="a94fecc52deafc39728c10e86b4031f2cc84b1c9" translate="yes" xml:space="preserve">
          <source>The system-dependent default name-separator character, represented as a string for convenience. This string contains a single character, namely &lt;a href=&quot;#separatorChar&quot;&gt;&lt;code&gt;separatorChar&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">便宜上文字列として表される、システムに依存するデフォルトの名前区切り文字。この文字列には、&lt;a href=&quot;#separatorChar&quot;&gt; &lt;code&gt;separatorChar&lt;/code&gt; &lt;/a&gt;という1つの文字が含まれています。</target>
        </trans-unit>
        <trans-unit id="db9af4ad444ca84eeeac9fb19764f73c768a1db0" translate="yes" xml:space="preserve">
          <source>The system-dependent default name-separator character, represented as a string for convenience. This string contains a single character, namely &lt;code&gt;&lt;a href=&quot;file#separatorChar&quot;&gt;&lt;code&gt;separatorChar&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">システムに依存するデフォルトの名前区切り文字。便宜上、文字列として表されます。この文字列には単一の文字、つまり &lt;code&gt;&lt;a href=&quot;file#separatorChar&quot;&gt;&lt;code&gt;separatorChar&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; が含まれています。</target>
        </trans-unit>
        <trans-unit id="23edeff72c72b6eac94037a43840bbb8e7b551b6" translate="yes" xml:space="preserve">
          <source>The system-dependent default name-separator character.</source>
          <target state="translated">システムに依存するデフォルトの名前区切り文字。</target>
        </trans-unit>
        <trans-unit id="06c823441fa92d743c30c7c0a19a1d4b758a3865" translate="yes" xml:space="preserve">
          <source>The system-dependent default name-separator character. This field is initialized to contain the first character of the value of the system property &lt;code&gt;file.separator&lt;/code&gt;. On UNIX systems the value of this field is &lt;code&gt;'/'&lt;/code&gt;; on Microsoft Windows systems it is &lt;code&gt;'\\'&lt;/code&gt;.</source>
          <target state="translated">システムに依存するデフォルトの名前区切り文字。このフィールドは、システムプロパティ &lt;code&gt;file.separator&lt;/code&gt; の値の最初の文字を含むように初期化されます。UNIXシステムでは、このフィールドの値は &lt;code&gt;'/'&lt;/code&gt; です。Microsoft Windowsシステムでは &lt;code&gt;'\\'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8793c76c9da5710b62dc7c9e42c8f2cdc86a36b3" translate="yes" xml:space="preserve">
          <source>The system-dependent path-separator character, represented as a string for convenience.</source>
          <target state="translated">システム依存のパス区切り文字で、便宜上文字列として表現されます。</target>
        </trans-unit>
        <trans-unit id="1f14bf8cb7ba1cb6fe8976b4d14659286d00de2c" translate="yes" xml:space="preserve">
          <source>The system-dependent path-separator character, represented as a string for convenience. This string contains a single character, namely &lt;a href=&quot;#pathSeparatorChar&quot;&gt;&lt;code&gt;pathSeparatorChar&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">便宜上文字列として表される、システムに依存するパス区切り文字。この文字列には、&lt;a href=&quot;#pathSeparatorChar&quot;&gt; &lt;code&gt;pathSeparatorChar&lt;/code&gt; &lt;/a&gt;という1つの文字が含まれています。</target>
        </trans-unit>
        <trans-unit id="a67c3801f69a10a5f6ee1400db51f1a4d991731c" translate="yes" xml:space="preserve">
          <source>The system-dependent path-separator character, represented as a string for convenience. This string contains a single character, namely &lt;code&gt;&lt;a href=&quot;file#pathSeparatorChar&quot;&gt;&lt;code&gt;pathSeparatorChar&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">システムに依存するパス区切り文字。便宜上文字列として表されます。この文字列には、1つの文字、つまり &lt;code&gt;&lt;a href=&quot;file#pathSeparatorChar&quot;&gt;&lt;code&gt;pathSeparatorChar&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; が含まれています。</target>
        </trans-unit>
        <trans-unit id="56704d0b0a7bdab899863fa1d0c2f23658372f6a" translate="yes" xml:space="preserve">
          <source>The system-dependent path-separator character.</source>
          <target state="translated">システム依存のパス区切り文字。</target>
        </trans-unit>
        <trans-unit id="79dc28fe296e6f9a3e10386e77dffcce367aaf90" translate="yes" xml:space="preserve">
          <source>The system-dependent path-separator character. This field is initialized to contain the first character of the value of the system property &lt;code&gt;path.separator&lt;/code&gt;. This character is used to separate filenames in a sequence of files given as a &lt;em&gt;path list&lt;/em&gt;. On UNIX systems, this character is &lt;code&gt;':'&lt;/code&gt;; on Microsoft Windows systems it is &lt;code&gt;';'&lt;/code&gt;.</source>
          <target state="translated">システム依存のパス区切り文字。このフィールドは、システムプロパティ &lt;code&gt;path.separator&lt;/code&gt; の値の最初の文字を含むように初期化されます。この文字は、&lt;em&gt;パスリスト&lt;/em&gt;として指定された一連のファイルでファイル名を区切るために使用されます。 UNIXシステムでは、この文字は &lt;code&gt;':'&lt;/code&gt; です。 Microsoft Windowsシステムでは &lt;code&gt;';'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="518a2fc9a68e3f3d5382e5d1a00ce498fcc2e594" translate="yes" xml:space="preserve">
          <source>The system-wide default AsynchronousChannel provider</source>
          <target state="translated">システム全体のデフォルトの AsynchronousChannel プロバイダ</target>
        </trans-unit>
        <trans-unit id="80f05d1a680abd50bb2023299790a44b63aaeab1" translate="yes" xml:space="preserve">
          <source>The system-wide default HttpServerProvider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f461893764b32c9834282b1f614f9186ccf0cf0" translate="yes" xml:space="preserve">
          <source>The system-wide default provider is used by the static &lt;code&gt;open&lt;/code&gt; methods of the &lt;a href=&quot;../datagramchannel#open()&quot;&gt;&lt;code&gt;DatagramChannel&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../pipe#open()&quot;&gt;&lt;code&gt;Pipe&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../selector#open()&quot;&gt;&lt;code&gt;Selector&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../serversocketchannel#open()&quot;&gt;&lt;code&gt;ServerSocketChannel&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../socketchannel#open()&quot;&gt;&lt;code&gt;SocketChannel&lt;/code&gt;&lt;/a&gt; classes. It is also used by the &lt;a href=&quot;../../../lang/system#inheritedChannel()&quot;&gt;&lt;code&gt;System.inheritedChannel()&lt;/code&gt;&lt;/a&gt; method. A program may make use of a provider other than the default provider by instantiating that provider and then directly invoking the &lt;code&gt;open&lt;/code&gt; methods defined in this class.</source>
          <target state="translated">システム全体のデフォルトプロバイダーは、&lt;a href=&quot;../datagramchannel#open()&quot;&gt; &lt;code&gt;DatagramChannel&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../pipe#open()&quot;&gt; &lt;code&gt;Pipe&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../selector#open()&quot;&gt; &lt;code&gt;Selector&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../serversocketchannel#open()&quot;&gt; &lt;code&gt;ServerSocketChannel&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../socketchannel#open()&quot;&gt; &lt;code&gt;SocketChannel&lt;/code&gt; &lt;/a&gt;クラスの静的 &lt;code&gt;open&lt;/code&gt; メソッドによって使用されます。&lt;a href=&quot;../../../lang/system#inheritedChannel()&quot;&gt; &lt;code&gt;System.inheritedChannel()&lt;/code&gt; &lt;/a&gt;メソッドでも使用されます。プログラムは、デフォルトプロバイダー以外のプロバイダーをインスタンス化してから、このクラスで定義されている &lt;code&gt;open&lt;/code&gt; メソッドを直接呼び出すことにより、そのプロバイダーを利用できます。</target>
        </trans-unit>
        <trans-unit id="7e7874d4b84773bdddf3caf1a22fc6b1ddcdb68c" translate="yes" xml:space="preserve">
          <source>The system-wide default provider is used by the static &lt;code&gt;open&lt;/code&gt; methods of the &lt;a href=&quot;../datagramchannel#open--&quot;&gt;&lt;code&gt;DatagramChannel&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../pipe#open--&quot;&gt;&lt;code&gt;Pipe&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../selector#open--&quot;&gt;&lt;code&gt;Selector&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../serversocketchannel#open--&quot;&gt;&lt;code&gt;ServerSocketChannel&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../socketchannel#open--&quot;&gt;&lt;code&gt;SocketChannel&lt;/code&gt;&lt;/a&gt; classes. It is also used by the &lt;a href=&quot;../../../lang/system#inheritedChannel--&quot;&gt;&lt;code&gt;System.inheritedChannel()&lt;/code&gt;&lt;/a&gt; method. A program may make use of a provider other than the default provider by instantiating that provider and then directly invoking the &lt;code&gt;open&lt;/code&gt; methods defined in this class.</source>
          <target state="translated">システム全体のデフォルトプロバイダーは、&lt;a href=&quot;../datagramchannel#open--&quot;&gt; &lt;code&gt;DatagramChannel&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../pipe#open--&quot;&gt; &lt;code&gt;Pipe&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../selector#open--&quot;&gt; &lt;code&gt;Selector&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../serversocketchannel#open--&quot;&gt; &lt;code&gt;ServerSocketChannel&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../socketchannel#open--&quot;&gt; &lt;code&gt;SocketChannel&lt;/code&gt; &lt;/a&gt;クラスの静的な &lt;code&gt;open&lt;/code&gt; メソッドによって使用されます。また、&lt;a href=&quot;../../../lang/system#inheritedChannel--&quot;&gt; &lt;code&gt;System.inheritedChannel()&lt;/code&gt; &lt;/a&gt;メソッドでも使用されます。プログラムは、デフォルトのプロバイダー以外のプロバイダーを利用する場合があります。そのプロバイダーをインスタンス化し、このクラスで定義されている &lt;code&gt;open&lt;/code&gt; メソッドを直接呼び出します。</target>
        </trans-unit>
        <trans-unit id="1854b090241392edcc60935113761df6965da7c2" translate="yes" xml:space="preserve">
          <source>The system-wide default selector provider</source>
          <target state="translated">システム全体のデフォルトセレクタプロバイダ</target>
        </trans-unit>
        <trans-unit id="95bf3ad30c8dc77c99ea4e641b49758e0b289c1f" translate="yes" xml:space="preserve">
          <source>The system-wide default values are retrieved at the time the &lt;code&gt;HttpClient&lt;/code&gt; instance is constructed. Changing the system-wide values after an &lt;code&gt;HttpClient&lt;/code&gt; instance has been built, for instance, by calling &lt;a href=&quot;../../../../java.base/java/net/proxyselector#setDefault(java.net.ProxySelector)&quot;&gt;&lt;code&gt;ProxySelector.setDefault(ProxySelector)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslcontext#setDefault(javax.net.ssl.SSLContext)&quot;&gt;&lt;code&gt;SSLContext.setDefault(SSLContext)&lt;/code&gt;&lt;/a&gt;, has no effect on already built instances.</source>
          <target state="translated">システム全体のデフォルト値は、 &lt;code&gt;HttpClient&lt;/code&gt; インスタンスの構築時に取得されます。たとえば、&lt;a href=&quot;../../../../java.base/java/net/proxyselector#setDefault(java.net.ProxySelector)&quot;&gt; &lt;code&gt;ProxySelector.setDefault(ProxySelector)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../../../java.base/javax/net/ssl/sslcontext#setDefault(javax.net.ssl.SSLContext)&quot;&gt; &lt;code&gt;SSLContext.setDefault(SSLContext)&lt;/code&gt; を&lt;/a&gt;呼び出して、 &lt;code&gt;HttpClient&lt;/code&gt; インスタンスが構築された後にシステム全体の値を変更しても、すでに構築されているインスタンスには影響しません。</target>
        </trans-unit>
        <trans-unit id="b245a40ab8beba1018593de4068b70324a8a9b7f" translate="yes" xml:space="preserve">
          <source>The systemID of the Result is implementation dependent.</source>
          <target state="translated">結果の systemID は実装に依存します。</target>
        </trans-unit>
        <trans-unit id="03cfd5043423fd52868491470982807b0134453d" translate="yes" xml:space="preserve">
          <source>The systemID that was set with &lt;a href=&quot;#setSystemId(java.lang.String)&quot;&gt;&lt;code&gt;setSystemId(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#setSystemId(java.lang.String)&quot;&gt; &lt;code&gt;setSystemId(java.lang.String)&lt;/code&gt; で&lt;/a&gt;設定されたsystemID。</target>
        </trans-unit>
        <trans-unit id="a1045e7af40ef3b112d277437311ac29c399a948" translate="yes" xml:space="preserve">
          <source>The tab character (&lt;code&gt;'\u0009'&lt;/code&gt;)</source>
          <target state="translated">タブ文字（ &lt;code&gt;'\u0009'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="724f41c531f5aa59b222eabf7abf5a6c43d9e2c4" translate="yes" xml:space="preserve">
          <source>The tab layout policy for wrapping tabs in multiple runs when all tabs will not fit within a single run.</source>
          <target state="translated">すべてのタブが1つのラン内に収まらない場合に、複数のラン内でタブをラップするためのタブレイアウトポリシー。</target>
        </trans-unit>
        <trans-unit id="199233d8422b6532357239677c0d77118df3b357" translate="yes" xml:space="preserve">
          <source>The tab pane</source>
          <target state="translated">タブペイン</target>
        </trans-unit>
        <trans-unit id="50f511f50ec79dac8854d97e6e1fc6b46ec9821b" translate="yes" xml:space="preserve">
          <source>The tab title can be rendered by a &lt;code&gt;Component&lt;/code&gt;. For example, the following produce similar results:</source>
          <target state="translated">タブタイトルは、 &lt;code&gt;Component&lt;/code&gt; によってレンダリングできます。たとえば、次の場合も同様の結果が得られます。</target>
        </trans-unit>
        <trans-unit id="70b6d74a75747576812470d4e1829a1958e25ff9" translate="yes" xml:space="preserve">
          <source>The table below defines the mapping between XML Schema 1.0 date/time datatype fields and this class' fields. It also summarizes the value constraints for the date and time fields defined in &lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#isoformats&quot;&gt;W3C XML Schema 1.0 Part 2, Appendix D, &lt;i&gt;ISO 8601 Date and Time Formats&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">次の表は、XMLスキーマ1.0の日付/時刻データ型フィールドとこのクラスのフィールドの間のマッピングを定義しています。また、&lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#isoformats&quot;&gt;W3C XMLスキーマ1.0パート2、付録D、&lt;i&gt;ISO8601の日付と時刻の形式で&lt;/i&gt;&lt;/a&gt;定義されている日付と時刻のフィールドの値の制約についても要約します。</target>
        </trans-unit>
        <trans-unit id="f62cb1c0c98a777d0a0d60bc177dbfdb331fdc8b" translate="yes" xml:space="preserve">
          <source>The table below defines the mapping between XML Schema 1.0 date/time datatype fields and this class' fields. It also summarizes the value constraints for the date and time fields defined in &lt;a href=&quot;https://www.w3.org/TR/xmlschema-2/#isoformats&quot;&gt;W3C XML Schema 1.0 Part 2, Appendix D, &lt;i&gt;ISO 8601 Date and Time Formats&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956c09a6d0ea87af6414b81e63f37ed614bbe89f" translate="yes" xml:space="preserve">
          <source>The table below lists all the printing attributes. The table shows the tagging interfaces each attribute class implements in addition to interface &lt;a href=&quot;../attribute&quot;&gt; Attribute&lt;/a&gt;, thus indicating how each attribute is used in the API. For each doc attribute and print request attribute, the column marked &quot;SupportedValuesAttribute&quot; lists the supported-values attribute class, if any, with which a print service indicates the supported values for that attribute category.</source>
          <target state="translated">次の表に、すべての印刷属性を示します。この表は、インターフェース&lt;a href=&quot;../attribute&quot;&gt;Attribute&lt;/a&gt;に加えて、各属性クラスが実装するタグ付けインターフェースを示しています。したがって、各属性がAPIでどのように使用されるかを示しています。各doc属性および印刷要求属性について、「SupportedValuesAttribute」とマークされた列には、サポートされている値の属性クラスが一覧表示されます。</target>
        </trans-unit>
        <trans-unit id="287f71a5c4a7b8e7e0742c0ff2ef999a33855d9e" translate="yes" xml:space="preserve">
          <source>The table below lists possible effective values if a certain capability is requested, i.e.</source>
          <target state="translated">以下の表は、特定のケイパビリティが要求された場合の有効な値を示しています。</target>
        </trans-unit>
        <trans-unit id="08ad0b41961955c4da9313672d35116b01778502" translate="yes" xml:space="preserve">
          <source>The table below shows the access modes of a &lt;code&gt;Lookup&lt;/code&gt; produced by any of the following factory or transformation methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf06ceead298594cb308f75d4760c64b1d7032fe" translate="yes" xml:space="preserve">
          <source>The table below shows the effects of specifying a Chromaticity attribute of &lt;a href=&quot;#MONOCHROME&quot;&gt;&lt;code&gt;MONOCHROME&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#COLOR&quot;&gt;&lt;code&gt;COLOR&lt;/code&gt;&lt;/a&gt; for a monochrome or color document.</source>
          <target state="translated">次の表は、モノクロまたはカラーのドキュメントに&lt;a href=&quot;#MONOCHROME&quot;&gt; &lt;code&gt;MONOCHROME&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#COLOR&quot;&gt; &lt;code&gt;COLOR&lt;/code&gt; の&lt;/a&gt;色度属性を指定した場合の影響を示しています。</target>
        </trans-unit>
        <trans-unit id="93b17809af88bed6b165bc41c7cce6b651c3dd33" translate="yes" xml:space="preserve">
          <source>The table below shows the effects of specifying a Chromaticity attribute of &lt;a href=&quot;chromaticity#MONOCHROME&quot;&gt;&lt;code&gt;MONOCHROME&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;chromaticity#COLOR&quot;&gt;&lt;code&gt;COLOR&lt;/code&gt;&lt;/a&gt; for a monochrome or color document.</source>
          <target state="translated">次の表は、モノクロまたはカラーのドキュメントに対して&lt;a href=&quot;chromaticity#MONOCHROME&quot;&gt; &lt;code&gt;MONOCHROME&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;chromaticity#COLOR&quot;&gt; &lt;code&gt;COLOR&lt;/code&gt; の&lt;/a&gt;色度属性を指定した場合の効果を示しています。</target>
        </trans-unit>
        <trans-unit id="6550573ca0506c03709606c1bdd17da7666522cf" translate="yes" xml:space="preserve">
          <source>The table below summarizes which kind of annotation presence different methods in this interface examine.</source>
          <target state="translated">以下の表は、このインターフェイスの異なるメソッドがどのようなアノテーションの存在を示すかをまとめたものです。</target>
        </trans-unit>
        <trans-unit id="0785827f1aca709e13a4cfacab1b11dec6fe1d51" translate="yes" xml:space="preserve">
          <source>The table draws horizontal lines between cells if &lt;code&gt;showHorizontalLines&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;showHorizontalLines&lt;/code&gt; がtrueの場合、テーブルはセル間に水平線を描画します。</target>
        </trans-unit>
        <trans-unit id="cc764edbccef2f5a651977b7ffdec182e128fba7" translate="yes" xml:space="preserve">
          <source>The table draws vertical lines between cells if &lt;code&gt;showVerticalLines&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;showVerticalLines&lt;/code&gt; がtrueの場合、テーブルはセル間に垂直線を描画します。</target>
        </trans-unit>
        <trans-unit id="d46376b57361e34cc862402a3ff75bfa5957b99c" translate="yes" xml:space="preserve">
          <source>The table for which this object is the header; the default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このオブジェクトがヘッダーであるテーブル。デフォルトは &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="affe517f34332866171ca57d9e9e5b23870e7f83" translate="yes" xml:space="preserve">
          <source>The table is dynamically expanded when there are too many collisions (i.e., keys that have distinct hash codes but fall into the same slot modulo the table size), with the expected average effect of maintaining roughly two bins per mapping (corresponding to a 0.75 load factor threshold for resizing). There may be much variance around this average as mappings are added and removed, but overall, this maintains a commonly accepted time/space tradeoff for hash tables. However, resizing this or any other kind of hash table may be a relatively slow operation. When possible, it is a good idea to provide a size estimate as an optional &lt;code&gt;
 initialCapacity&lt;/code&gt; constructor argument. An additional optional &lt;code&gt;loadFactor&lt;/code&gt; constructor argument provides a further means of customizing initial table capacity by specifying the table density to be used in calculating the amount of space to allocate for the given number of elements. Also, for compatibility with previous versions of this class, constructors may optionally specify an expected &lt;code&gt;concurrencyLevel&lt;/code&gt; as an additional hint for internal sizing. Note that using many keys with exactly the same &lt;code&gt;hashCode()&lt;/code&gt; is a sure way to slow down performance of any hash table. To ameliorate impact, when keys are &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;, this class may use comparison order among keys to help break ties.</source>
          <target state="translated">衝突が多すぎる場合（つまり、異なるハッシュコードを持つが、テーブルサイズを法として同じスロットに分類されるキー）、テーブルは動的に拡張され、マッピングごとに約2つのビンを維持するという期待される平均効果（0.75の負荷に対応）サイズ変更の係数しきい値）。マッピングが追加および削除されると、この平均の周りに多くの変動がある可能性がありますが、全体として、これはハッシュテーブルの一般的に受け入れられている時間/空間のトレードオフを維持します。ただし、このハッシュテーブルまたは他の種類のハッシュテーブルのサイズを変更すると、操作が比較的遅くなる可能性があります。可能であれば、オプションの &lt;code&gt; initialCapacity&lt;/code&gt; コンストラクター引数としてサイズの見積もりを提供することをお勧めします。追加のオプションの &lt;code&gt;loadFactor&lt;/code&gt; コンストラクター引数は、指定された数の要素に割り当てるスペースの量を計算する際に使用されるテーブル密度を指定することにより、初期テーブル容量をカスタマイズするためのさらなる手段を提供します。また、このクラスの以前のバージョンとの互換性のために、コンストラクターはオプションで、内部サイズ設定の追加ヒントとして予想される &lt;code&gt;concurrencyLevel&lt;/code&gt; を指定できます。まったく同じ &lt;code&gt;hashCode()&lt;/code&gt; で多くのキーを使用することは、ハッシュテーブルのパフォーマンスを低下させる確実な方法であることに注意してください。影響を改善するために、キーが&lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; の&lt;/a&gt;場合、このクラスはキー間の比較順序を使用して、関係を解消するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="abdfbcd8569ed822dbb9b0566e80bdcdfb0ce663" translate="yes" xml:space="preserve">
          <source>The table is dynamically expanded when there are too many collisions (i.e., keys that have distinct hash codes but fall into the same slot modulo the table size), with the expected average effect of maintaining roughly two bins per mapping (corresponding to a 0.75 load factor threshold for resizing). There may be much variance around this average as mappings are added and removed, but overall, this maintains a commonly accepted time/space tradeoff for hash tables. However, resizing this or any other kind of hash table may be a relatively slow operation. When possible, it is a good idea to provide a size estimate as an optional &lt;code&gt;initialCapacity&lt;/code&gt; constructor argument. An additional optional &lt;code&gt;loadFactor&lt;/code&gt; constructor argument provides a further means of customizing initial table capacity by specifying the table density to be used in calculating the amount of space to allocate for the given number of elements. Also, for compatibility with previous versions of this class, constructors may optionally specify an expected &lt;code&gt;concurrencyLevel&lt;/code&gt; as an additional hint for internal sizing. Note that using many keys with exactly the same &lt;code&gt;hashCode()&lt;/code&gt; is a sure way to slow down performance of any hash table. To ameliorate impact, when keys are &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;, this class may use comparison order among keys to help break ties.</source>
          <target state="translated">衝突が多すぎる場合（つまり、異なるハッシュコードを持っているが、テーブルサイズと同じスロットに該当するキー）、マッピングごとにおよそ2つのビンを維持することで期待される平均効果（0.75の負荷に対応）がある場合、テーブルは動的に拡張されます。サイズ変更の係数しきい値）。マッピングが追加および削除されると、この平均の周りに大きな差異が生じる可能性がありますが、全体として、これはハッシュテーブルの一般的に受け入れられている時間/空間のトレードオフを維持します。ただし、このハッシュテーブルまたは他の種類のハッシュテーブルのサイズを変更すると、処理が比較的遅くなる場合があります。可能であれば、オプションの &lt;code&gt;initialCapacity&lt;/code&gt; コンストラクター引数としてサイズの見積もりを提供することをお勧めします。追加のオプションの &lt;code&gt;loadFactor&lt;/code&gt; コンストラクター引数は、指定された数の要素に割り当てるスペースの量を計算する際に使用されるテーブル密度を指定することにより、初期テーブル容量をカスタマイズするさらなる手段を提供します。また、このクラスの以前のバージョンとの互換性のために、コンストラクターはオプションで、予想される &lt;code&gt;concurrencyLevel&lt;/code&gt; を内部サイジングの追加のヒントとして指定できます。まったく同じ &lt;code&gt;hashCode()&lt;/code&gt; で多くのキーを使用することは、ハッシュテーブルのパフォーマンスを低下させる確実な方法であることに注意してください。インパクトを改善するために、キーが&lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; の&lt;/a&gt;場合、このクラスはキー間の比較順序を使用して、結びつきを解消することができます。</target>
        </trans-unit>
        <trans-unit id="807c7f2278f08fd9a560612599a053ac4a77aa0b" translate="yes" xml:space="preserve">
          <source>The table of key properties.</source>
          <target state="translated">キープロパティの表です。</target>
        </trans-unit>
        <trans-unit id="29c2e665a3b18a1ce29ba700eb12bfe8ef2d57b7" translate="yes" xml:space="preserve">
          <source>The table type is:</source>
          <target state="translated">テーブルタイプです。</target>
        </trans-unit>
        <trans-unit id="e72d6ec95379480e6ddcff8a30f3ae018d25f5a5" translate="yes" xml:space="preserve">
          <source>The table will query the &lt;code&gt;TableModel&lt;/code&gt; to build the default set of columns if this is true.</source>
          <target state="translated">これがtrueの場合、テーブルは &lt;code&gt;TableModel&lt;/code&gt; にクエリを実行して、デフォルトの列セットを作成します。</target>
        </trans-unit>
        <trans-unit id="4b683043db5214bb3bb29c225b881df7d62a7411" translate="yes" xml:space="preserve">
          <source>The tag number.</source>
          <target state="translated">タグの番号です。</target>
        </trans-unit>
        <trans-unit id="e3034177648d7a592ed4b995252076ff2a379e97" translate="yes" xml:space="preserve">
          <source>The tag values for this property. May be null if this property cannot be represented as a tagged value.</source>
          <target state="translated">このプロパティのタグ値。このプロパティをタグ付きの値として表現できない場合は、null にすることができます。</target>
        </trans-unit>
        <trans-unit id="b446899d309ae9229be1541a42b9d0cf00a0ac6b" translate="yes" xml:space="preserve">
          <source>The target and cleanup must return the same type, even if the cleanup always throws. To create such a throwing cleanup, compose the cleanup logic with &lt;a href=&quot;#throwException(java.lang.Class,java.lang.Class)&quot;&gt;&lt;code&gt;throwException&lt;/code&gt;&lt;/a&gt;, in order to create a method handle of the correct return type.</source>
          <target state="translated">クリーンアップが常にスローされる場合でも、ターゲットとクリーンアップは同じタイプを返す必要があります。このようなスロークリーンアップを作成するには、&lt;a href=&quot;#throwException(java.lang.Class,java.lang.Class)&quot;&gt; &lt;code&gt;throwException&lt;/code&gt; &lt;/a&gt;を使用してクリーンアップロジックを作成し、正しい戻り値の型のメソッドハンドルを作成します。</target>
        </trans-unit>
        <trans-unit id="02cefdef6f6fd1cf2781c5dd156f06c3b67ffe8b" translate="yes" xml:space="preserve">
          <source>The target and fallback must be of exactly the same method type, and the resulting combined method handle will also be of this type.</source>
          <target state="translated">ターゲットとフォールバックは全く同じメソッドタイプでなければならず、結果として結合されたメソッドハンドルもこのタイプになります。</target>
        </trans-unit>
        <trans-unit id="f42cc55413084526e1a3b93e74bf70c3317cb6fa" translate="yes" xml:space="preserve">
          <source>The target and handler must have the same corresponding argument and return types, except that handler may omit trailing arguments (similarly to the predicate in &lt;a href=&quot;#guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)&quot;&gt;&lt;code&gt;guardWithTest&lt;/code&gt;&lt;/a&gt;). Also, the handler must have an extra leading parameter of &lt;code&gt;exType&lt;/code&gt; or a supertype.</source>
          <target state="translated">ターゲットとハンドラーは、対応する引数と戻り値の型が同じである必要があります。ただし、ハンドラーは末尾の引数を省略できます（&lt;a href=&quot;#guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)&quot;&gt; &lt;code&gt;guardWithTest&lt;/code&gt; &lt;/a&gt;の述語と同様）。また、ハンドラーには、 &lt;code&gt;exType&lt;/code&gt; またはスーパータイプの追加の先行パラメーターが必要です。</target>
        </trans-unit>
        <trans-unit id="cfe18dce3e23910cc798ebbf8a13a2dd958ea48f" translate="yes" xml:space="preserve">
          <source>The target and handler must have the same corresponding argument and return types, except that handler may omit trailing arguments (similarly to the predicate in &lt;a href=&quot;methodhandles#guardWithTest-java.lang.invoke.MethodHandle-java.lang.invoke.MethodHandle-java.lang.invoke.MethodHandle-&quot;&gt;&lt;code&gt;guardWithTest&lt;/code&gt;&lt;/a&gt;). Also, the handler must have an extra leading parameter of &lt;code&gt;exType&lt;/code&gt; or a supertype.</source>
          <target state="translated">ターゲットとハンドラーは、対応する引数と戻り値の型が同じでなければなりませんが、ハンドラーは末尾の引数を省略できる場合があります（&lt;a href=&quot;methodhandles#guardWithTest-java.lang.invoke.MethodHandle-java.lang.invoke.MethodHandle-java.lang.invoke.MethodHandle-&quot;&gt; &lt;code&gt;guardWithTest&lt;/code&gt; &lt;/a&gt;の述語と同様）。また、ハンドラーには、 &lt;code&gt;exType&lt;/code&gt; またはスーパータイプの追加の先行パラメーターが必要です。</target>
        </trans-unit>
        <trans-unit id="e01418ac4cb37a5ae8fb9a819eaaca5266eb99c3" translate="yes" xml:space="preserve">
          <source>The target and handler must return the same type, even if the handler always throws. (This might happen, for instance, because the handler is simulating a &lt;code&gt;finally&lt;/code&gt; clause). To create such a throwing handler, compose the handler creation logic with &lt;a href=&quot;#throwException(java.lang.Class,java.lang.Class)&quot;&gt;&lt;code&gt;throwException&lt;/code&gt;&lt;/a&gt;, in order to create a method handle of the correct return type.</source>
          <target state="translated">ハンドラーが常にスローする場合でも、ターゲットとハンドラーは同じタイプを返す必要があります。（これは、たとえば、ハンドラーが &lt;code&gt;finally&lt;/code&gt; 節をシミュレートしているために発生する可能性があります）。このようなスローハンドラーを作成するには、正しい戻り値の型のメソッドハンドルを作成するために、&lt;a href=&quot;#throwException(java.lang.Class,java.lang.Class)&quot;&gt; &lt;code&gt;throwException&lt;/code&gt; &lt;/a&gt;を使用してハンドラー作成ロジックを作成します。</target>
        </trans-unit>
        <trans-unit id="44e11701adb06063c652521aa85aae71912799bf" translate="yes" xml:space="preserve">
          <source>The target and handler must return the same type, even if the handler always throws. (This might happen, for instance, because the handler is simulating a &lt;code&gt;finally&lt;/code&gt; clause). To create such a throwing handler, compose the handler creation logic with &lt;a href=&quot;methodhandles#throwException-java.lang.Class-java.lang.Class-&quot;&gt;&lt;code&gt;throwException&lt;/code&gt;&lt;/a&gt;, in order to create a method handle of the correct return type.</source>
          <target state="translated">ハンドラーが常にスローする場合でも、ターゲットとハンドラーは同じ型を返す必要があります。（これは、例えば、ハンドラーが &lt;code&gt;finally&lt;/code&gt; 節をシミュレートしているために発生する可能性があります）。このようなスローハンドラーを作成するには、&lt;a href=&quot;methodhandles#throwException-java.lang.Class-java.lang.Class-&quot;&gt; &lt;code&gt;throwException&lt;/code&gt; &lt;/a&gt;を使用してハンドラー作成ロジックを作成し、正しい戻りの型のメソッドハンドルを作成します。</target>
        </trans-unit>
        <trans-unit id="a4a57d45fa595fa9efff16f036716b6ca28a789a" translate="yes" xml:space="preserve">
          <source>The target class must be a proper class, not a primitive or array class. (Thus, &lt;code&gt;M2&lt;/code&gt; is well-defined.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6331eb65cfaeb17d610de47a1492d63404554822" translate="yes" xml:space="preserve">
          <source>The target component.</source>
          <target state="translated">対象となるコンポーネント。</target>
        </trans-unit>
        <trans-unit id="a48909c6d391288fca7020961e9c52b23bc4c69d" translate="yes" xml:space="preserve">
          <source>The target component. This indicates the component over which the event occurred or with which the event is associated. This object has been replaced by AWTEvent.getSource()</source>
          <target state="translated">対象となるコンポーネント。これは、イベントが発生したコンポーネント、またはイベントが関連付けられたコンポーネントを示します。このオブジェクトはAWTEvent.getSource()で置き換えられました。</target>
        </trans-unit>
        <trans-unit id="41cfd1c3c3da57cda5880021b389e8ff6e52178e" translate="yes" xml:space="preserve">
          <source>The target data line can be obtained from a mixer by invoking the &lt;a href=&quot;mixer#getLine(javax.sound.sampled.Line.Info)&quot;&gt;&lt;code&gt;getLine&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Mixer&lt;/code&gt; with an appropriate &lt;a href=&quot;dataline.info&quot;&gt;&lt;code&gt;DataLine.Info&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">ターゲットデータラインは、適切な&lt;a href=&quot;dataline.info&quot;&gt; &lt;code&gt;DataLine.Info&lt;/code&gt; &lt;/a&gt;オブジェクトを使用して &lt;code&gt;Mixer&lt;/code&gt; の&lt;a href=&quot;mixer#getLine(javax.sound.sampled.Line.Info)&quot;&gt; &lt;code&gt;getLine&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、ミキサーから取得できます。</target>
        </trans-unit>
        <trans-unit id="294becfa926713ae4f4611aad1c89088d4f17efe" translate="yes" xml:space="preserve">
          <source>The target data line can be obtained from a mixer by invoking the &lt;code&gt;&lt;a href=&quot;mixer#getLine-javax.sound.sampled.Line.Info-&quot;&gt;&lt;code&gt;getLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;Mixer&lt;/code&gt; with an appropriate &lt;code&gt;&lt;a href=&quot;dataline.info&quot;&gt;&lt;code&gt;DataLine.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; object.</source>
          <target state="translated">ターゲットデータラインは、適切な &lt;code&gt;&lt;a href=&quot;dataline.info&quot;&gt;&lt;code&gt;DataLine.Info&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; オブジェクトを使用して &lt;code&gt;Mixer&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;mixer#getLine-javax.sound.sampled.Line.Info-&quot;&gt;&lt;code&gt;getLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドを呼び出すことにより、ミキサーから取得できます。</target>
        </trans-unit>
        <trans-unit id="2e92be738dd320065c504e7c597383304da41f9b" translate="yes" xml:space="preserve">
          <source>The target format represents the format of the processed, converted audio data. This is the format of the data that can be read from the stream returned by one of the &lt;code&gt;getAudioInputStream&lt;/code&gt; methods.</source>
          <target state="translated">ターゲットフォーマットは、処理され、変換されたオーディオデータのフォーマットを表します。これは、いずれかの &lt;code&gt;getAudioInputStream&lt;/code&gt; メソッドによって返されたストリームから読み取ることができるデータの形式です。</target>
        </trans-unit>
        <trans-unit id="e7de801befb3afea6c0cedebce5ac02cc3cf8db7" translate="yes" xml:space="preserve">
          <source>The target handle has the parameter type list &lt;code&gt;S..., M...&lt;/code&gt;, with as many types in &lt;code&gt;S&lt;/code&gt; as indicated by &lt;code&gt;skip&lt;/code&gt;. The &lt;code&gt;M&lt;/code&gt; types are those that are supposed to match part of the given type list, &lt;code&gt;newTypes&lt;/code&gt;.</source>
          <target state="translated">ターゲットハンドルには、パラメータタイプリスト &lt;code&gt;S..., M...&lt;/code&gt; 、 &lt;code&gt;S&lt;/code&gt; で &lt;code&gt;skip&lt;/code&gt; 示される数のタイプがあります。 &lt;code&gt;M&lt;/code&gt; の種類は、特定のタイプのリストの一部、一致することになっているものである &lt;code&gt;newTypes&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="03b0fb3903bf8315a0952c04b4865416cb3c9b29" translate="yes" xml:space="preserve">
          <source>The target height to scale the image.</source>
          <target state="translated">画像を拡大縮小するための目標の高さ。</target>
        </trans-unit>
        <trans-unit id="61ee1882c6fbd7985ddaac74fcc91b429f418e8c" translate="yes" xml:space="preserve">
          <source>The target name is of the form &quot;&lt;code&gt;className#member[objectName]&lt;/code&gt;&quot; where each part is optional. It must not be empty or null.</source>
          <target state="translated">ターゲット名の形式は「 &lt;code&gt;className#member[objectName]&lt;/code&gt; 」で、各部分はオプションです。空またはnullであってはなりません。</target>
        </trans-unit>
        <trans-unit id="2088b56d56c4f4d92fcefb476718d183cc8ee0fb" translate="yes" xml:space="preserve">
          <source>The target name is the &lt;a href=&quot;inquiretype&quot;&gt;&lt;code&gt;InquireType&lt;/code&gt;&lt;/a&gt; allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce62a8e103e81312eae100e20ed400ca3da9c713" translate="yes" xml:space="preserve">
          <source>The target name is the name of a security configuration parameter (see below). Currently the &lt;code&gt;AuthPermission&lt;/code&gt; object is used to guard access to the &lt;a href=&quot;subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;login/logincontext&quot;&gt;&lt;code&gt;LoginContext&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;login/configuration&quot;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">ターゲット名は、セキュリティ構成パラメーターの名前です（以下を参照）。現在、 &lt;code&gt;AuthPermission&lt;/code&gt; オブジェクトは、&lt;a href=&quot;subject&quot;&gt; &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;login/logincontext&quot;&gt; &lt;code&gt;LoginContext&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;login/configuration&quot;&gt; &lt;code&gt;Configuration&lt;/code&gt; &lt;/a&gt;オブジェクトへのアクセスを保護するために使用されています。</target>
        </trans-unit>
        <trans-unit id="c855fc5f9080ecc03acfbcb7e0983b870dcc2a70" translate="yes" xml:space="preserve">
          <source>The target name is the name of a security configuration parameter (see below). Currently the &lt;code&gt;SecurityPermission&lt;/code&gt; object is used to guard access to the &lt;a href=&quot;accesscontrolcontext&quot;&gt;&lt;code&gt;AccessControlContext&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;provider&quot;&gt;&lt;code&gt;Provider&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;security&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;signer&quot;&gt;&lt;code&gt;Signer&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;identity&quot;&gt;&lt;code&gt;Identity&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">ターゲット名は、セキュリティ構成パラメーターの名前です（以下を参照）。現在、 &lt;code&gt;SecurityPermission&lt;/code&gt; オブジェクトは、&lt;a href=&quot;accesscontrolcontext&quot;&gt; &lt;code&gt;AccessControlContext&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;policy&quot;&gt; &lt;code&gt;Policy&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;provider&quot;&gt; &lt;code&gt;Provider&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;security&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;signer&quot;&gt; &lt;code&gt;Signer&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;identity&quot;&gt; &lt;code&gt;Identity&lt;/code&gt; &lt;/a&gt;オブジェクトへのアクセスを保護するために使用されています。</target>
        </trans-unit>
        <trans-unit id="7928d48cbde0bd5806a16e749b843ab056e2bff2" translate="yes" xml:space="preserve">
          <source>The target name is the name of a security configuration parameter (see below). Currently the AuthPermission object is used to guard access to the Policy, Subject, LoginContext, and Configuration objects.</source>
          <target state="translated">ターゲット名は、セキュリティ構成パラメータの名前です (後述)。現在、AuthPermission オブジェクトは、Policy、Subject、LoginContext、および Configuration オブジェクトへのアクセスを保護するために使用されています。</target>
        </trans-unit>
        <trans-unit id="2890f709a91749b2fe10e52fd580bddb149e0444" translate="yes" xml:space="preserve">
          <source>The target name is the name of a security configuration parameter (see below). Currently the SecurityPermission object is used to guard access to the Policy, Security, Provider, Signer, and Identity objects.</source>
          <target state="translated">ターゲット名は、セキュリティ構成パラメータの名前です (以下を参照)。現在、SecurityPermission オブジェクトは、Policy、Security、Provider、Signer、および Identity オブジェクトへのアクセスを保護するために使用されます。</target>
        </trans-unit>
        <trans-unit id="17f38fb0c6986e5e7a83073a2ad1774730542b07" translate="yes" xml:space="preserve">
          <source>The target name is the name of the AWT permission (see below). The naming convention follows the hierarchical property naming convention. Also, an asterisk could be used to represent all AWT permissions.</source>
          <target state="translated">ターゲット名は、AWTパーミッションの名前です(後述)。命名規則は、階層的なプロパティの命名規則に従います。また、すべてのAWTパーミッションを表すためにアスタリスクを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="9e139ec2f3c65e0160a69e0966a9e12f3721fc07" translate="yes" xml:space="preserve">
          <source>The target name is the name of the Serializable permission (see below).</source>
          <target state="translated">ターゲット名は、Serializableパーミッションの名前です(後述)。</target>
        </trans-unit>
        <trans-unit id="1d4510b6174912a740c895643371245def2a4d9e" translate="yes" xml:space="preserve">
          <source>The target name is the name of the audio permission (see the table below). The names follow the hierarchical property-naming convention. Also, an asterisk can be used to represent all the audio permissions.</source>
          <target state="translated">ターゲット名は、オーディオパーミッションの名前です(下の表を参照)。名前は階層的なプロパティ命名規則に従います。また、すべてのオーディオパーミッションを表すためにアスタリスクを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="d8645249d279e7c3cf29a83a9b3bb1e507d282b4" translate="yes" xml:space="preserve">
          <source>The target name is the name of the authorization principal classname followed by a period and the authorization principal name, that is &lt;code&gt;&quot;&lt;em&gt;PrincipalClassName&lt;/em&gt;.&lt;em&gt;PrincipalName&lt;/em&gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">ターゲット名はピリオド承認主要なクラス名と認証プリンシパル名の名前である &lt;code&gt;&quot;&lt;em&gt;PrincipalClassName&lt;/em&gt;.&lt;em&gt;PrincipalName&lt;/em&gt;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1de21a429ece939c67b7e50829885099ad2d45eb" translate="yes" xml:space="preserve">
          <source>The target name is the name of the network permission (see below). The naming convention follows the hierarchical property naming convention. Also, an asterisk may appear at the end of the name, following a &quot;.&quot;, or by itself, to signify a wildcard match. For example: &quot;foo.*&quot; and &quot;*&quot; signify a wildcard match, while &quot;*foo&quot; and &quot;a*b&quot; do not.</source>
          <target state="translated">ターゲット名は、ネットワークパーミッションの名前です(後述)。この命名規則は、階層的なプロパティの命名規則に従います。また、名前の最後にアスタリスクを付ける場合は、「...」の後に付けるか、またはそれ自体でワイルドカード一致を示すためにアスタリスクを付けることができます。例えば、以下のようになります。&quot;foo.*&quot; と &quot;*&quot; はワイルドカードマッチを意味しますが、&quot;*foo&quot; と &quot;a*b&quot; はワイルドカードマッチを意味しません。</target>
        </trans-unit>
        <trans-unit id="35aa664b77bc8ac5af633fd3abfe001e77f837cd" translate="yes" xml:space="preserve">
          <source>The target name is the name of the runtime permission (see below). The naming convention follows the hierarchical property naming convention. Also, an asterisk may appear at the end of the name, following a &quot;.&quot;, or by itself, to signify a wildcard match. For example: &quot;loadLibrary.*&quot; and &quot;*&quot; signify a wildcard match, while &quot;*loadLibrary&quot; and &quot;a*b&quot; do not.</source>
          <target state="translated">ターゲット名は、ランタイムパーミッションの名前です(後述)。命名規則は、階層的なプロパティの命名規則に従う。また、名前の最後に「.」の後にアスタリスクを付けるか、またはそれ自体でワイルドカードの一致を示すためにアスタリスクを付けることができます。例えば、以下のようになります。&quot;loadLibrary.*&quot;と &quot;*&quot;はワイルドカード一致を意味しますが、&quot;*loadLibrary &quot;と &quot;a*b &quot;はワイルドカード一致を意味しません。</target>
        </trans-unit>
        <trans-unit id="d958abd00740d8b81aa7e7e8a7237d717e401b13" translate="yes" xml:space="preserve">
          <source>The target name of this &lt;code&gt;Permission&lt;/code&gt; specifies a Credential class name, and a Set of Principals. The only valid value for this Permission's actions is, &quot;read&quot;. The target name must abide by the following syntax:</source>
          <target state="translated">この &lt;code&gt;Permission&lt;/code&gt; のターゲット名は、資格情報クラス名とプリンシパルのセットを指定します。この権限のアクションの唯一の有効な値は、「読み取り」です。ターゲット名は、次の構文に従う必要があります。</target>
        </trans-unit>
        <trans-unit id="91a399d1980f8a6ccc96217289bf0be48ee37eb6" translate="yes" xml:space="preserve">
          <source>The target name of this &lt;code&gt;Permission&lt;/code&gt; specifies a pair of kerberos service principals. The first is the subordinate service principal being entrusted to use the TGT. The second service principal designates the target service the subordinate service principal is to interact with on behalf of the initiating KerberosPrincipal. This latter service principal is specified to restrict the use of a proxiable ticket.</source>
          <target state="translated">この &lt;code&gt;Permission&lt;/code&gt; のターゲット名は、Kerberosサービスプリンシパルのペアを指定します。1つ目は、TGTの使用を委託されている下位のサービスプリンシパルです。2番目のサービスプリンシパルは、下位のサービスプリンシパルが開始側のKerberosPrincipalの代わりに対話するターゲットサービスを指定します。この後者のサービスプリンシパルは、プロキシ可能なチケットの使用を制限するために指定されています。</target>
        </trans-unit>
        <trans-unit id="a69bc10fa3486dc0c871c21c9260fdc72fa60465" translate="yes" xml:space="preserve">
          <source>The target of the symbolic link</source>
          <target state="translated">シンボリックリンクの対象</target>
        </trans-unit>
        <trans-unit id="2c722da0815ce9e96b3f893e4617b9ba63277f4a" translate="yes" xml:space="preserve">
          <source>The target of this processing instruction.</source>
          <target state="translated">この処理命令の対象。</target>
        </trans-unit>
        <trans-unit id="161ea52ef7deec6ab2b397da40779879d17b9eba" translate="yes" xml:space="preserve">
          <source>The target of this processing instruction. XML defines this as being the first token following the markup that begins the processing instruction.</source>
          <target state="translated">この処理命令のターゲット。XMLでは、処理命令を開始するマークアップに続く最初のトークンとして定義されています。</target>
        </trans-unit>
        <trans-unit id="0fba2a96aca3512f3b2fa2ec8c997febf4ea99a4" translate="yes" xml:space="preserve">
          <source>The target property may also be &quot;qualified&quot; with an arbitrary number of property prefixs delimited with the &quot;.&quot; character. For example, the following action listener:</source>
          <target state="translated">ターゲットプロパティは、「...」文字で区切られた任意の数のプロパティ接頭辞で「修飾」することもできます。例えば、次のようなアクションリスナー。</target>
        </trans-unit>
        <trans-unit id="1d3891a04d782b20001436f81be88566164c49f9" translate="yes" xml:space="preserve">
          <source>The target screen mentioned below is a screen to which the window should be placed after the setLocationRelativeTo method is called.</source>
          <target state="translated">以下のターゲット画面は、setLocationRelativeToメソッドを呼び出した後にウィンドウを配置する画面です。</target>
        </trans-unit>
        <trans-unit id="c97110c6e47104527f8b4580cb3b4fa2f5426ed0" translate="yes" xml:space="preserve">
          <source>The target section of the processing instruction</source>
          <target state="translated">処理命令のターゲット部</target>
        </trans-unit>
        <trans-unit id="8a356eae8e68f37248d1a45a231f374ef9c3a79c" translate="yes" xml:space="preserve">
          <source>The target string buffer</source>
          <target state="translated">対象となる文字列バッファ</target>
        </trans-unit>
        <trans-unit id="ce314a2a38875a9da27cad30daa60b7f939567ca" translate="yes" xml:space="preserve">
          <source>The target string builder</source>
          <target state="translated">対象となる文字列ビルダー</target>
        </trans-unit>
        <trans-unit id="5623b00860faa00ef9ff1fd5929f824daae38f10" translate="yes" xml:space="preserve">
          <source>The target virtual machine can maintain a list of properties on behalf of agents. The manner in which this is done, the names of the properties, and the types of values that are allowed, is implementation specific. Agent properties are typically used to store communication end-points and other agent configuration details. For example, a debugger agent might create an agent property for its transport address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b7bab6e96d93a1672aed421456af62833a888b" translate="yes" xml:space="preserve">
          <source>The target width to scale the image.</source>
          <target state="translated">画像を拡大縮小する対象の幅。</target>
        </trans-unit>
        <trans-unit id="0a63b487811a4aecdd285055ad083a6242c879eb" translate="yes" xml:space="preserve">
          <source>The task is &lt;a href=&quot;future#cancel(boolean)&quot;&gt;explicitly cancelled&lt;/a&gt; via the returned future.</source>
          <target state="translated">タスクは、返されたfutureを介して&lt;a href=&quot;future#cancel(boolean)&quot;&gt;明示的にキャンセルされ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ac13bf867264e56e3d64038eb74fe1bea028918f" translate="yes" xml:space="preserve">
          <source>The tc &lt;b&gt;must&lt;/b&gt; be in the range &lt;code&gt;0 &amp;lt;= tc &amp;lt;=
 255&lt;/code&gt; or an IllegalArgumentException will be thrown.</source>
          <target state="translated">tc &lt;b&gt;は&lt;/b&gt; &lt;code&gt;0 &amp;lt;= tc &amp;lt;= 255&lt;/code&gt; の範囲内で&lt;b&gt;なければなりません。&lt;/b&gt;そうで&lt;b&gt;ない&lt;/b&gt;場合、IllegalArgumentExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="351d171d0044484a95b6580add4a8d56a0b09177" translate="yes" xml:space="preserve">
          <source>The tempo-based timing type, for which the resolution is expressed in pulses (ticks) per quarter note.</source>
          <target state="translated">テンポベースのタイミングタイプで、分解能は4分音符あたりのパルス(ティック)で表されます。</target>
        </trans-unit>
        <trans-unit id="92a16bca2794be2e4d981e961e77157c978a16e0" translate="yes" xml:space="preserve">
          <source>The term &quot;blit&quot; is the pronounced version of the PDP-10 BLT (BLock Transfer) instruction, which copied a block of bits. (In case you were curious.)</source>
          <target state="translated">blit」という言葉は、PDP-10のBLT(BLock Transfer)命令の発音版で、ビットのブロックをコピーしたものです。(気になった方は念のため)。</target>
        </trans-unit>
        <trans-unit id="f2ec5ccb70e544f59fa930934598819b7960048f" translate="yes" xml:space="preserve">
          <source>The terms &lt;em&gt;directly present&lt;/em&gt;, &lt;em&gt;indirectly present&lt;/em&gt;, &lt;em&gt;present&lt;/em&gt;, and &lt;em&gt;associated&lt;/em&gt; are used throughout this interface to describe precisely which annotations are returned by methods:</source>
          <target state="translated">&lt;em&gt;直接存在する&lt;/em&gt;、&lt;em&gt;間接的に存在する&lt;/em&gt;、&lt;em&gt;存在する&lt;/em&gt;、および&lt;em&gt;関連&lt;/em&gt;するという用語は、メソッドによって返される注釈を正確に説明するために、このインターフェース全体で使用されています。</target>
        </trans-unit>
        <trans-unit id="7bc919453997f5f639ef67c31f748841da8f874b" translate="yes" xml:space="preserve">
          <source>The text attributes.</source>
          <target state="translated">テキストの属性です。</target>
        </trans-unit>
        <trans-unit id="5e5bbe231cb2211cfe2a7c06f4bc2ee771bc88c2" translate="yes" xml:space="preserve">
          <source>The text boundary returned from the above methods, first or last text boundary.</source>
          <target state="translated">上記のメソッドから返されたテキスト境界、最初のテキスト境界または最後のテキスト境界。</target>
        </trans-unit>
        <trans-unit id="8858d11b87b0f0a3e19ee86a888321a1258f017b" translate="yes" xml:space="preserve">
          <source>The text components have a model-view split. A text component pulls together the objects used to represent the model, view, and controller. The text document model may be shared by other views which act as observers of the model (e.g. a document may be shared by multiple components).</source>
          <target state="translated">テキストコンポーネントは、モデルとビューが分割されています。テキストコンポーネントは、モデル、ビュー、コントローラを表現するために使用されるオブジェクトをまとめています。テキスト文書モデルは、モデルのオブザーバーとして動作する他のビューによって共有されることがあります(例えば、文書は複数のコンポーネントによって共有されることがあります)。</target>
        </trans-unit>
        <trans-unit id="9f88b97ebbe499c00fc788624ded865b62c2d07e" translate="yes" xml:space="preserve">
          <source>The text components support flexible and internationalized text input, using keymaps and the input method framework, while maintaining compatibility with the AWT listener model.</source>
          <target state="translated">テキストコンポーネントは、AWTリスナーモデルとの互換性を維持しながら、キーマップと入力メソッドフレームワークを使用して、柔軟で国際化されたテキスト入力をサポートします。</target>
        </trans-unit>
        <trans-unit id="535d6291a5e7978acac55699afbcc43c1abcfcca" translate="yes" xml:space="preserve">
          <source>The text contained within the option element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4bc96683614ed09586bda7da975dbd546cc010" translate="yes" xml:space="preserve">
          <source>The text cursor type.</source>
          <target state="translated">テキストカーソルタイプです。</target>
        </trans-unit>
        <trans-unit id="792c37abc4943eebd3bef907dbd09262f47b21d8" translate="yes" xml:space="preserve">
          <source>The text editing component also has to provide an input method event listener.</source>
          <target state="translated">テキスト編集コンポーネントは、入力メソッドのイベントリスナーも提供しなければなりません。</target>
        </trans-unit>
        <trans-unit id="68f58f74d3780f9460b9207f3ef04661f0ea9185" translate="yes" xml:space="preserve">
          <source>The text editing component also has to provide an instance of InputMethodRequests.</source>
          <target state="translated">また、テキスト編集コンポーネントはInputMethodRequestsのインスタンスを提供しなければなりません。</target>
        </trans-unit>
        <trans-unit id="abe46b84ee53a236c2700231fa5bd7581d2fd49f" translate="yes" xml:space="preserve">
          <source>The text included with the input method event consists of two parts: committed text and composed text. Either part may be empty. The two parts together replace any uncommitted composed text sent in previous events, or the currently selected committed text. Committed text should be integrated into the text component's persistent data, it will not be sent again. Composed text may be sent repeatedly, with changes to reflect the user's editing operations. Committed text always precedes composed text.</source>
          <target state="translated">入力メソッドイベントに含まれるテキストは、コミットされたテキストと構成されたテキストの 2 つの部分から構成されます。どちらの部分も空であっても構いません。この2つの部分は、以前のイベントで送信されたコミットされていない構成されたテキスト、または現在選択されているコミットされたテキストに置き換えられます。コミットされたテキストは、テキストコンポーネントの永続的なデータに統合されている必要があり、それが再び送信されることはありません。構成されたテキストは、ユーザの編集操作を反映して変更された状態で繰り返し送信されることがあります。コミットされたテキストは、常に構成されたテキストの前に置かれます。</target>
        </trans-unit>
        <trans-unit id="1899b3e37537fc1d6b9f560d72d02ead7717a9d2" translate="yes" xml:space="preserve">
          <source>The text is parsed using the formatter, returning a date-time.</source>
          <target state="translated">テキストはフォーマッタを使用して解析され、日付時刻を返します。</target>
        </trans-unit>
        <trans-unit id="119fbb383bccf4eac0375adfb016d1b3f8304e40" translate="yes" xml:space="preserve">
          <source>The text is parsed using the formatter, returning a date.</source>
          <target state="translated">テキストはフォーマッタを使用して解析され、日付を返します。</target>
        </trans-unit>
        <trans-unit id="fc611f16d1b6999b1ff7fa074c651bc88768faa1" translate="yes" xml:space="preserve">
          <source>The text is parsed using the formatter, returning a month-day.</source>
          <target state="translated">テキストはフォーマッタを使用して解析され、月日を返します。</target>
        </trans-unit>
        <trans-unit id="2408a1b2fa16fded0ccd21134505f7a2dfa87a20" translate="yes" xml:space="preserve">
          <source>The text is parsed using the formatter, returning a time.</source>
          <target state="translated">テキストはフォーマッタを使用して解析され、時間を返します。</target>
        </trans-unit>
        <trans-unit id="8aa28741c1cf5a7ab0d06ececd2ac50c4950d93d" translate="yes" xml:space="preserve">
          <source>The text is parsed using the formatter, returning a year-month.</source>
          <target state="translated">テキストはフォーマッタを使用して解析され、年月を返します。</target>
        </trans-unit>
        <trans-unit id="1700b19da145b2d61543e5a3e6060e9ee5311e75" translate="yes" xml:space="preserve">
          <source>The text is parsed using the formatter, returning a year.</source>
          <target state="translated">テキストはフォーマッタを使用して解析され、年を返します。</target>
        </trans-unit>
        <trans-unit id="714efd5fdbdc7a0051ac3528e30febfdfcc4d3b6" translate="yes" xml:space="preserve">
          <source>The text of the field will be output during a format. The value must be within the valid range of the field. If the value cannot be obtained then an exception will be thrown. If the field has no textual representation, then the numeric value will be used.</source>
          <target state="translated">フィールドのテキストは、フォーマット中に出力されます。値はフィールドの有効範囲内でなければなりません。値を取得できない場合は例外がスローされます。フィールドにテキスト表現がない場合は、数値が使用されます。</target>
        </trans-unit>
        <trans-unit id="994a75acb429e80d94201f4b7fd1307dd3c02908" translate="yes" xml:space="preserve">
          <source>The text of the returned &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; is the same that would be returned by</source>
          <target state="translated">返される &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; のテキストは、次のように返されます。</target>
        </trans-unit>
        <trans-unit id="8d32f65f9358481d68c26733468e9f5827be3bb9" translate="yes" xml:space="preserve">
          <source>The text range that the attribute is applied to is critical to the semantics of the range. That means, the attribute cannot be applied to subranges of the text range that it applies to, and, if two adjacent text ranges have the same value for this attribute, the attribute still cannot be applied to the combined range as a whole with this value.</source>
          <target state="translated">その属性が適用されるテキスト範囲は、その範囲のセマンティクスにとって重要です。つまり、その属性は、その属性が適用されるテキスト範囲のサブレンジには適用できず、また、二つの隣接するテキスト範囲がこの属性に対して同じ値を持っている場合、その属性は、この値を持つ結合された範囲全体にはまだ適用できません。</target>
        </trans-unit>
        <trans-unit id="7c3f83472e562d9215e150160baafa85452b5724" translate="yes" xml:space="preserve">
          <source>The text representation of each constant UnicodeBlock identifier. For example, this method will return the &lt;a href=&quot;#BASIC_LATIN&quot;&gt;&lt;code&gt;BASIC_LATIN&lt;/code&gt;&lt;/a&gt; block if provided with the &quot;BASIC_LATIN&quot; name. This form replaces all spaces and hyphens in the canonical name with underscores.</source>
          <target state="translated">各定数UnicodeBlock識別子のテキスト表現。たとえば、このメソッドは、「BASIC_LATIN」名が指定されている場合、&lt;a href=&quot;#BASIC_LATIN&quot;&gt; &lt;code&gt;BASIC_LATIN&lt;/code&gt; &lt;/a&gt;ブロックを返します。このフォームは、正規名のすべてのスペースとハイフンをアンダースコアに置き換えます。</target>
        </trans-unit>
        <trans-unit id="1b53d1b9f2d6a1ffec39094319a28b6fff2de1b3" translate="yes" xml:space="preserve">
          <source>The text representation of each constant UnicodeBlock identifier. For example, this method will return the &lt;a href=&quot;character.unicodeblock#BASIC_LATIN&quot;&gt;&lt;code&gt;BASIC_LATIN&lt;/code&gt;&lt;/a&gt; block if provided with the &quot;BASIC_LATIN&quot; name. This form replaces all spaces and hyphens in the canonical name with underscores.</source>
          <target state="translated">各定数UnicodeBlock識別子のテキスト表現。たとえば、このメソッドは、「BASIC_LATIN」という名前を指定すると、&lt;a href=&quot;character.unicodeblock#BASIC_LATIN&quot;&gt; &lt;code&gt;BASIC_LATIN&lt;/code&gt; &lt;/a&gt;ブロックを返します。このフォームは、正規名のすべてのスペースとハイフンをアンダースコアに置き換えます。</target>
        </trans-unit>
        <trans-unit id="77b9d7619830528efce6f7817705037fc5acc9d6" translate="yes" xml:space="preserve">
          <source>The text substituted for the individual format elements is derived from the current subformat of the format element and the &lt;code&gt;arguments&lt;/code&gt; element at the format element's argument index as indicated by the first matching line of the following table. An argument is</source>
          <target state="translated">個々のフォーマット要素の代わりに使用されるテキストは、次の表の最初の一致する行で示されているように、フォーマット要素の現在のサブフォーマットと、フォーマット要素の引数インデックスにある &lt;code&gt;arguments&lt;/code&gt; 要素から得られます。引数は</target>
        </trans-unit>
        <trans-unit id="9207fb7b3a8409b78131b80ed0af5df70aca6d6f" translate="yes" xml:space="preserve">
          <source>The text will be parsed from the specified start &lt;code&gt;ParsePosition&lt;/code&gt;. The entire length of the text does not have to be parsed, the &lt;code&gt;ParsePosition&lt;/code&gt; will be updated with the index at the end of parsing.</source>
          <target state="translated">テキストは、指定された開始 &lt;code&gt;ParsePosition&lt;/code&gt; から解析されます。テキスト全体を解析する必要はありません &lt;code&gt;ParsePosition&lt;/code&gt; は、解析の最後にインデックスで更新されます。</target>
        </trans-unit>
        <trans-unit id="ef359eb63a3e4e2e83b93c0386e4232cb9ad999c" translate="yes" xml:space="preserve">
          <source>The text.</source>
          <target state="translated">テキストです。</target>
        </trans-unit>
        <trans-unit id="1448b4199b12055b6e038925f7a2322eace6c39d" translate="yes" xml:space="preserve">
          <source>The textual representation of IPv6 addresses as described above can be extended to specify IPv6 scoped addresses. This extension to the basic addressing architecture is described in [draft-ietf-ipngwg-scoping-arch-04.txt].</source>
          <target state="translated">上記のようなIPv6アドレスのテキスト表現は、IPv6のスコープ付きアドレスを指定するために拡張することができます。基本的なアドレッシングアーキテクチャへのこの拡張は、[draft-ietf-ipngwg-scoping-arch-04.txt]に記述されています。</target>
        </trans-unit>
        <trans-unit id="619857d696535395d9a9e6e85c75cbda308cd69b" translate="yes" xml:space="preserve">
          <source>The textual representation of an IP address is address family specific.</source>
          <target state="translated">IPアドレスのテキスト表現は、アドレスファミリ固有のものです。</target>
        </trans-unit>
        <trans-unit id="2eeaee68cdaf2979e68f820a8cb381cb88cfe284" translate="yes" xml:space="preserve">
          <source>The textual representation of the selector for the rule set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90596571ebf3cb87e069b539a095963b4c232a2" translate="yes" xml:space="preserve">
          <source>The textual representation of the selector for the rule set. The implementation may have stripped out insignificant whitespace while parsing the selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a243b35a93201c218afa01a0732e236f52dc54db" translate="yes" xml:space="preserve">
          <source>The third rule means for example that if the attribute &lt;code&gt;HeapMemoryUsage&lt;/code&gt; is a &lt;code&gt;MemoryUsage&lt;/code&gt;, monitoring &lt;code&gt;&quot;HeapMemoryUsage.used&quot;&lt;/code&gt; will obtain the observed value by calling &lt;code&gt;MemoryUsage.getUsed()&lt;/code&gt;.</source>
          <target state="translated">3番目のルールは、たとえば、属性 &lt;code&gt;HeapMemoryUsage&lt;/code&gt; がMemoryUsageである &lt;code&gt;MemoryUsage&lt;/code&gt; 、 &lt;code&gt;&quot;HeapMemoryUsage.used&quot;&lt;/code&gt; を監視すると、 &lt;code&gt;MemoryUsage.getUsed()&lt;/code&gt; を呼び出して監視値を取得することを意味します。</target>
        </trans-unit>
        <trans-unit id="1524da4ee526fb66e2dfa2fc314cd6b0009b09e7" translate="yes" xml:space="preserve">
          <source>The third statement above returns a &lt;code&gt;SecureRandom&lt;/code&gt; object of the specific algorithm supporting the specific instantiate parameters. The implementation's effective instantiated parameters must match this minimum request but is not necessarily the same. For example, even if the request does not require a certain feature, the actual instantiation can provide the feature. An implementation may lazily instantiate a &lt;code&gt;SecureRandom&lt;/code&gt; until it's actually used, but the effective instantiate parameters must be determined right after it's created and &lt;a href=&quot;#getParameters()&quot;&gt;&lt;code&gt;getParameters()&lt;/code&gt;&lt;/a&gt; should always return the same result unchanged.</source>
          <target state="translated">上記の3番目のステートメントは、特定のインスタンス化パラメーターをサポートする特定のアルゴリズムの &lt;code&gt;SecureRandom&lt;/code&gt; オブジェクトを返します。実装の有効なインスタンス化されたパラメーターは、この最小要求と一致する必要がありますが、必ずしも同じである必要はありません。たとえば、リクエストに特定の機能が必要ない場合でも、実際のインスタンス化でその機能を提供できます。実装は、実際に使用されるまで &lt;code&gt;SecureRandom&lt;/code&gt; を遅延インスタンス化する場合がありますが、有効なインスタンス化パラメーターは作成直後に決定する必要があり、&lt;a href=&quot;#getParameters()&quot;&gt; &lt;code&gt;getParameters()&lt;/code&gt; &lt;/a&gt;は常に同じ結果を変更せずに返す必要があります。</target>
        </trans-unit>
        <trans-unit id="cd8c7b9c1c14ab7ee8912062724df6f9139f499d" translate="yes" xml:space="preserve">
          <source>The third type of ID are region-based IDs. A region-based ID must be of two or more characters, and not start with 'UTC', 'GMT', 'UT' '+' or '-'. Region-based IDs are defined by configuration, see &lt;a href=&quot;zone/zonerulesprovider&quot;&gt;&lt;code&gt;ZoneRulesProvider&lt;/code&gt;&lt;/a&gt;. The configuration focuses on providing the lookup from the ID to the underlying &lt;code&gt;ZoneRules&lt;/code&gt;.</source>
          <target state="translated">3番目のタイプのIDは、地域ベースのIDです。地域ベースのIDは2文字以上である必要があり、「UTC」、「GMT」、「UT」、「+」、または「-」で開始することはできません。リージョンベースのIDは構成によって定義されます&lt;a href=&quot;zone/zonerulesprovider&quot;&gt; &lt;code&gt;ZoneRulesProvider&lt;/code&gt; &lt;/a&gt;参照してください。この構成は、IDから基になる &lt;code&gt;ZoneRules&lt;/code&gt; へのルックアップを提供することに重点を置いています。</target>
        </trans-unit>
        <trans-unit id="7b2d5ce3a5a55711a2ea3b6fec5e3843d8b5a85a" translate="yes" xml:space="preserve">
          <source>The thread &lt;var&gt;T&lt;/var&gt; is then removed from the wait set for this object and re-enabled for thread scheduling. It competes in the usual manner with other threads for the right to synchronize on the object; once it has regained control of the object, all its synchronization claims on the object are restored to the status quo ante - that is, to the situation as of the time that the &lt;code&gt;wait&lt;/code&gt; method was invoked. Thread &lt;var&gt;T&lt;/var&gt; then returns from the invocation of the &lt;code&gt;wait&lt;/code&gt; method. Thus, on return from the &lt;code&gt;wait&lt;/code&gt; method, the synchronization state of the object and of thread &lt;code&gt;T&lt;/code&gt; is exactly as it was when the &lt;code&gt;wait&lt;/code&gt; method was invoked.</source>
          <target state="translated">次に、スレッド &lt;var&gt;T&lt;/var&gt; は、このオブジェクトの待機セットから削除され、スレッドスケジューリングが再度有効になります。オブジェクト上で同期する権利について、通常の方法で他のスレッドと競合します。オブジェクトの制御を取り戻すと、オブジェクトに対するすべての同期要求は、現状維持、つまり、 &lt;code&gt;wait&lt;/code&gt; メソッドが呼び出された時点の状況に復元されます。次に、スレッド &lt;var&gt;T&lt;/var&gt; は &lt;code&gt;wait&lt;/code&gt; メソッドの呼び出しから戻ります。したがって、 &lt;code&gt;wait&lt;/code&gt; メソッドから戻ると、オブジェクトとスレッド &lt;code&gt;T&lt;/code&gt; の同期状態は、 &lt;code&gt;wait&lt;/code&gt; メソッドが呼び出されたときとまったく同じになります。</target>
        </trans-unit>
        <trans-unit id="798fb3ab3b700a8b0974f49f646feb0adf6c0b98" translate="yes" xml:space="preserve">
          <source>The thread &lt;var&gt;T&lt;/var&gt; is then removed from the wait set for this object and re-enabled for thread scheduling. It then competes in the usual manner with other threads for the right to synchronize on the object; once it has gained control of the object, all its synchronization claims on the object are restored to the status quo ante - that is, to the situation as of the time that the &lt;code&gt;wait&lt;/code&gt; method was invoked. Thread &lt;var&gt;T&lt;/var&gt; then returns from the invocation of the &lt;code&gt;wait&lt;/code&gt; method. Thus, on return from the &lt;code&gt;wait&lt;/code&gt; method, the synchronization state of the object and of thread &lt;code&gt;T&lt;/code&gt; is exactly as it was when the &lt;code&gt;wait&lt;/code&gt; method was invoked.</source>
          <target state="translated">次に、スレッド &lt;var&gt;T&lt;/var&gt; はこのオブジェクトの待機セットから削除され、スレッドのスケジューリングが再び可​​能になります。次に、通常の方法で他のスレッドと競合して、オブジェクトで同期する権利を獲得します。オブジェクトの制御権を取得すると、オブジェクトに対するすべての同期要求は、現状（つまり、 &lt;code&gt;wait&lt;/code&gt; メソッドが呼び出された時点の状況）に復元されます。その後、スレッド &lt;var&gt;T&lt;/var&gt; は &lt;code&gt;wait&lt;/code&gt; メソッドの呼び出しから戻ります。したがって、 &lt;code&gt;wait&lt;/code&gt; メソッドから戻ると、オブジェクトとスレッド &lt;code&gt;T&lt;/code&gt; の同期状態は、 &lt;code&gt;wait&lt;/code&gt; メソッドが呼び出されたときとまったく同じになります。</target>
        </trans-unit>
        <trans-unit id="3886d03f704e9f4661772e22e536d051a2540f61" translate="yes" xml:space="preserve">
          <source>The thread ID property will be initialized with a unique ID for the current thread.</source>
          <target state="translated">スレッドIDプロパティは、現在のスレッドの一意のIDで初期化されます。</target>
        </trans-unit>
        <trans-unit id="3224cdeecc04e300e6f6eb5dd7b0f464a0f08ee9" translate="yes" xml:space="preserve">
          <source>The thread is in the &lt;a href=&quot;../../../../java.base/java/lang/thread.state#BLOCKED&quot;&gt;&lt;code&gt;BLOCKED&lt;/code&gt;&lt;/a&gt; state waiting to enter the &lt;code&gt;synchronized&lt;/code&gt; statement or method.</source>
          <target state="translated">スレッドは&lt;a href=&quot;../../../../java.base/java/lang/thread.state#BLOCKED&quot;&gt; &lt;code&gt;BLOCKED&lt;/code&gt; &lt;/a&gt;状態にあり、 &lt;code&gt;synchronized&lt;/code&gt; ステートメントまたはメソッドに入るのを待っています。</target>
        </trans-unit>
        <trans-unit id="f6a7e6fbe217b20213591b29b1d875c85171794a" translate="yes" xml:space="preserve">
          <source>The thread is in the &lt;a href=&quot;../../../../java.base/java/lang/thread.state#WAITING&quot;&gt;&lt;code&gt;WAITING&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/lang/thread.state#TIMED_WAITING&quot;&gt;&lt;code&gt;TIMED_WAITING&lt;/code&gt;&lt;/a&gt; state due to a call to the &lt;a href=&quot;../../../../java.base/java/lang/object#wait()&quot;&gt;&lt;code&gt;Object.wait&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../../../../java.base/java/lang/object#wait()&quot;&gt; &lt;code&gt;Object.wait&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたため、スレッドは&lt;a href=&quot;../../../../java.base/java/lang/thread.state#WAITING&quot;&gt; &lt;code&gt;WAITING&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../../../java.base/java/lang/thread.state#TIMED_WAITING&quot;&gt; &lt;code&gt;TIMED_WAITING&lt;/code&gt; &lt;/a&gt;状態になっています。</target>
        </trans-unit>
        <trans-unit id="87a5145ea7018df714b4f0182c383913942e6f12" translate="yes" xml:space="preserve">
          <source>The thread is in the &lt;a href=&quot;../../../../java.base/java/lang/thread.state#WAITING&quot;&gt;&lt;code&gt;WAITING&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/lang/thread.state#TIMED_WAITING&quot;&gt;&lt;code&gt;TIMED_WAITING&lt;/code&gt;&lt;/a&gt; state due to a call to the &lt;a href=&quot;../../../../java.base/java/util/concurrent/locks/locksupport#park(java.lang.Object)&quot;&gt;&lt;code&gt;LockSupport.park&lt;/code&gt;&lt;/a&gt; method. The synchronization object is the object returned from &lt;a href=&quot;../../../../java.base/java/util/concurrent/locks/locksupport#getBlocker(java.lang.Thread)&quot;&gt;&lt;code&gt;LockSupport.getBlocker&lt;/code&gt;&lt;/a&gt; method. Typically it is an &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt; ownable synchronizer&lt;/a&gt; or a &lt;a href=&quot;../../../../java.base/java/util/concurrent/locks/condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../../java.base/java/util/concurrent/locks/locksupport#park(java.lang.Object)&quot;&gt; &lt;code&gt;LockSupport.park&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたため、スレッドは&lt;a href=&quot;../../../../java.base/java/lang/thread.state#WAITING&quot;&gt; &lt;code&gt;WAITING&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../../../java.base/java/lang/thread.state#TIMED_WAITING&quot;&gt; &lt;code&gt;TIMED_WAITING&lt;/code&gt; &lt;/a&gt;状態になっています。同期オブジェクトは、&lt;a href=&quot;../../../../java.base/java/util/concurrent/locks/locksupport#getBlocker(java.lang.Thread)&quot;&gt; &lt;code&gt;LockSupport.getBlocker&lt;/code&gt; &lt;/a&gt;メソッドから返されるオブジェクトです。通常、これは&lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;所有可能なシンクロナイザー&lt;/a&gt;または&lt;a href=&quot;../../../../java.base/java/util/concurrent/locks/condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="4b9cc25b45a652d2428c1ca7ad40c7f0ae634fb0" translate="yes" xml:space="preserve">
          <source>The thread is in the &lt;a href=&quot;../thread.state#BLOCKED&quot;&gt;&lt;code&gt;BLOCKED&lt;/code&gt;&lt;/a&gt; state waiting to enter the &lt;code&gt;synchronized&lt;/code&gt; statement or method.</source>
          <target state="translated">スレッドは&lt;a href=&quot;../thread.state#BLOCKED&quot;&gt; &lt;code&gt;BLOCKED&lt;/code&gt; &lt;/a&gt;状態にあり、 &lt;code&gt;synchronized&lt;/code&gt; ステートメントまたはメソッドに入るのを待っています。</target>
        </trans-unit>
        <trans-unit id="77e59a24e2fff88b3f72bac70df76f307ccbec5b" translate="yes" xml:space="preserve">
          <source>The thread is in the &lt;a href=&quot;../thread.state#WAITING&quot;&gt;&lt;code&gt;WAITING&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../thread.state#TIMED_WAITING&quot;&gt;&lt;code&gt;TIMED_WAITING&lt;/code&gt;&lt;/a&gt; state due to a call to the &lt;a href=&quot;../../util/concurrent/locks/locksupport#park-java.lang.Object-&quot;&gt;&lt;code&gt;LockSupport.park&lt;/code&gt;&lt;/a&gt; method. The synchronization object is the object returned from &lt;a href=&quot;../../util/concurrent/locks/locksupport#getBlocker-java.lang.Thread-&quot;&gt;&lt;code&gt;LockSupport.getBlocker&lt;/code&gt;&lt;/a&gt; method. Typically it is an &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt; ownable synchronizer&lt;/a&gt; or a &lt;a href=&quot;../../util/concurrent/locks/condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../util/concurrent/locks/locksupport#park-java.lang.Object-&quot;&gt; &lt;code&gt;LockSupport.park&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しにより、スレッドは&lt;a href=&quot;../thread.state#WAITING&quot;&gt; &lt;code&gt;WAITING&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../thread.state#TIMED_WAITING&quot;&gt; &lt;code&gt;TIMED_WAITING&lt;/code&gt; &lt;/a&gt;状態になっています。同期オブジェクトは、&lt;a href=&quot;../../util/concurrent/locks/locksupport#getBlocker-java.lang.Thread-&quot;&gt; &lt;code&gt;LockSupport.getBlocker&lt;/code&gt; &lt;/a&gt;メソッドから返されるオブジェクトです。通常、これは&lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;所有可能なシンクロナイザー&lt;/a&gt;または&lt;a href=&quot;../../util/concurrent/locks/condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="d7b971951034e25a9cbf8c4a7520b71c76ce7c9c" translate="yes" xml:space="preserve">
          <source>The thread is in the &lt;a href=&quot;../thread.state#WAITING&quot;&gt;&lt;code&gt;WAITING&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../thread.state#TIMED_WAITING&quot;&gt;&lt;code&gt;TIMED_WAITING&lt;/code&gt;&lt;/a&gt; state due to a call to the &lt;a href=&quot;../object#wait-long-&quot;&gt;&lt;code&gt;Object.wait&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../object#wait-long-&quot;&gt; &lt;code&gt;Object.wait&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しが原因で、スレッドは&lt;a href=&quot;../thread.state#WAITING&quot;&gt; &lt;code&gt;WAITING&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../thread.state#TIMED_WAITING&quot;&gt; &lt;code&gt;TIMED_WAITING&lt;/code&gt; &lt;/a&gt;状態になっています。</target>
        </trans-unit>
        <trans-unit id="fee6ea9eaa70ac63cd7bd687ae74dc9ebb1babb9" translate="yes" xml:space="preserve">
          <source>The thread must be suspended. The return occurs when execution of Java programming language code is resumed on this thread. Between the call to this method and resumption of thread execution, the state of the stack is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8e934b45026e9176ead01c6d486ce921318b0a" translate="yes" xml:space="preserve">
          <source>The thread owning this segment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cae8d80c59d4da83095fa5ad01a12ad0e9b0377" translate="yes" xml:space="preserve">
          <source>The thread represented by this thread is forced to stop whatever it is doing abnormally and to throw a newly created &lt;code&gt;ThreadDeath&lt;/code&gt; object as an exception.</source>
          <target state="translated">このスレッドによって表されるスレッドは、異常な動作を強制的に停止し、新しく作成された &lt;code&gt;ThreadDeath&lt;/code&gt; オブジェクトを例外としてスローします。</target>
        </trans-unit>
        <trans-unit id="0b3e60ed90635a926c08dd344792b7dde7c9298f" translate="yes" xml:space="preserve">
          <source>The thread then waits until it can re-obtain ownership of the monitor and resumes execution.</source>
          <target state="translated">その後、スレッドはモニターの所有権を再取得するまで待機し、実行を再開します。</target>
        </trans-unit>
        <trans-unit id="25b717a3fa1cf9d27360f778068bc0905b1e3681" translate="yes" xml:space="preserve">
          <source>The threads may be executing while this method is called. The stack trace of each thread only represents a snapshot and each stack trace may be obtained at different time. A zero-length array will be returned in the map value if the virtual machine has no stack trace information about a thread.</source>
          <target state="translated">このメソッドが呼ばれている間、スレッドが実行されている可能性があります。各スレッドのスタックトレースはスナップショットを表しているに過ぎず、それぞれのスタックトレースは異なる時間に取得される可能性があります。仮想マシンにスレッドに関するスタックトレース情報がない場合は、マップ値にゼロ長の配列が返されます。</target>
        </trans-unit>
        <trans-unit id="f6e3ff0b6b3a8faf4f1e95b0c706e80d227c4311" translate="yes" xml:space="preserve">
          <source>The three aspects of &lt;code&gt;collect&lt;/code&gt; -- supplier, accumulator, and combiner -- are tightly coupled. We can use the abstraction of a &lt;a href=&quot;collector&quot;&gt;&lt;code&gt;Collector&lt;/code&gt;&lt;/a&gt; to capture all three aspects. The above example for collecting strings into a &lt;code&gt;List&lt;/code&gt; can be rewritten using a standard &lt;code&gt;Collector&lt;/code&gt; as:</source>
          <target state="translated">&lt;code&gt;collect&lt;/code&gt; の3つの側面（サプライヤ、アキュムレータ、コンバイナ）は密接に結合されています。&lt;a href=&quot;collector&quot;&gt; &lt;code&gt;Collector&lt;/code&gt; &lt;/a&gt;の抽象化を使用して、3つすべての側面をキャプチャできます。文字列を &lt;code&gt;List&lt;/code&gt; 収集する上記の例は、標準の &lt;code&gt;Collector&lt;/code&gt; を使用して次のように書き直すことができます。</target>
        </trans-unit>
        <trans-unit id="ac4e5d34586392cc6376d13f3ac41b119993fff0" translate="yes" xml:space="preserve">
          <source>The three forms of &lt;code&gt;park&lt;/code&gt; each also support a &lt;code&gt;blocker&lt;/code&gt; object parameter. This object is recorded while the thread is blocked to permit monitoring and diagnostic tools to identify the reasons that threads are blocked. (Such tools may access blockers using method &lt;a href=&quot;#getBlocker(java.lang.Thread)&quot;&gt;&lt;code&gt;getBlocker(Thread)&lt;/code&gt;&lt;/a&gt;.) The use of these forms rather than the original forms without this parameter is strongly encouraged. The normal argument to supply as a &lt;code&gt;blocker&lt;/code&gt; within a lock implementation is &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;park&lt;/code&gt; の3つの形式は、それぞれ &lt;code&gt;blocker&lt;/code&gt; オブジェクトパラメーターもサポートします。このオブジェクトは、スレッドがブロックされている間に記録され、監視および診断ツールがスレッドがブロックされた理由を識別できるようにします。 （このようなツールは、メソッド&lt;a href=&quot;#getBlocker(java.lang.Thread)&quot;&gt; &lt;code&gt;getBlocker(Thread)&lt;/code&gt; &lt;/a&gt;を使用してブロッカーにアクセスできます。）このパラメーターのない元のフォームではなく、これらのフォームを使用することを強くお勧めします。ロック実装内で &lt;code&gt;blocker&lt;/code&gt; として提供する通常の引数は &lt;code&gt;this&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ccdf2eb66d2e71f34a919a596f65bb338f795c35" translate="yes" xml:space="preserve">
          <source>The three forms of &lt;code&gt;park&lt;/code&gt; each also support a &lt;code&gt;blocker&lt;/code&gt; object parameter. This object is recorded while the thread is blocked to permit monitoring and diagnostic tools to identify the reasons that threads are blocked. (Such tools may access blockers using method &lt;a href=&quot;locksupport#getBlocker-java.lang.Thread-&quot;&gt;&lt;code&gt;getBlocker(Thread)&lt;/code&gt;&lt;/a&gt;.) The use of these forms rather than the original forms without this parameter is strongly encouraged. The normal argument to supply as a &lt;code&gt;blocker&lt;/code&gt; within a lock implementation is &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">3つの形式の &lt;code&gt;park&lt;/code&gt; それぞれ、 &lt;code&gt;blocker&lt;/code&gt; オブジェクトパラメーターもサポートします。このオブジェクトは、スレッドがブロックされている間に記録され、監視および診断ツールがスレッドがブロックされている理由を特定できるようにします。 （このようなツールは、メソッド&lt;a href=&quot;locksupport#getBlocker-java.lang.Thread-&quot;&gt; &lt;code&gt;getBlocker(Thread)&lt;/code&gt; &lt;/a&gt;を使用してブロッカーにアクセスする場合があります。）このパラメーターのない元のフォームではなく、これらのフォームを使用することを強くお勧めします。ロック実装内で &lt;code&gt;blocker&lt;/code&gt; として提供する通常の引数は &lt;code&gt;this&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="df00dd95000e60bd282d65d477e94c0a82461152" translate="yes" xml:space="preserve">
          <source>The three forms of condition waiting (interruptible, non-interruptible, and timed) may differ in their ease of implementation on some platforms and in their performance characteristics. In particular, it may be difficult to provide these features and maintain specific semantics such as ordering guarantees. Further, the ability to interrupt the actual suspension of the thread may not always be feasible to implement on all platforms.</source>
          <target state="translated">条件待ちの3つの形態(割込み可能、非割込み可能、および時限付き)は、いくつかのプラットフォーム上での実装の容易さと、その性能特性とで異なる場合がある。特に、これらの機能を提供し、順序保証のような特定のセマンティクスを維持することは難しいかもしれない。さらに、スレッドの実際の中断を中断する機能は、すべてのプラットフォームで実装することが必ずしも実現可能ではないかもしれません。</target>
        </trans-unit>
        <trans-unit id="db29ad82518a2ee6d7ddfaf1a9c7b34c8ecf4057" translate="yes" xml:space="preserve">
          <source>The three forms of lock acquisition (interruptible, non-interruptible, and timed) may differ in their performance characteristics, ordering guarantees, or other implementation qualities. Further, the ability to interrupt the &lt;em&gt;ongoing&lt;/em&gt; acquisition of a lock may not be available in a given &lt;code&gt;Lock&lt;/code&gt; class. Consequently, an implementation is not required to define exactly the same guarantees or semantics for all three forms of lock acquisition, nor is it required to support interruption of an ongoing lock acquisition. An implementation is required to clearly document the semantics and guarantees provided by each of the locking methods. It must also obey the interruption semantics as defined in this interface, to the extent that interruption of lock acquisition is supported: which is either totally, or only on method entry.</source>
          <target state="translated">ロック取得の3つの形式（割り込み可能、​​非割り込み不可能、時限）は、パフォーマンス特性、順序の保証、または他の実装品質が異なる場合があります。さらに、&lt;em&gt;進行中&lt;/em&gt;のロックの取得を中断する機能は、特定の &lt;code&gt;Lock&lt;/code&gt; では使用できない場合があります。クラス。その結果、実装は、3つの形式のロック取得すべてに対してまったく同じ保証またはセマンティクスを定義する必要はなく、進行中のロック取得の中断をサポートする必要もありません。各ロックメソッドによって提供されるセマンティクスと保証を明確に文書化するには、実装が必要です。また、ロックの取得の中断がサポートされている限り、このインターフェースで定義されている中断のセマンティクスに従う必要があります。これは、完全に、またはメソッドのエントリでのみ可能です。</target>
        </trans-unit>
        <trans-unit id="bb65090e22ab8912d71a3b4c421185f9239fb8c9" translate="yes" xml:space="preserve">
          <source>The three types of rendering operations, along with details of each of their particular rendering processes are:</source>
          <target state="translated">3種類のレンダリング操作と、それぞれのレンダリング処理の詳細は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="b1243cf17aa93cee91f50c4b5f0c4dfc5e1efee1" translate="yes" xml:space="preserve">
          <source>The three values for decomposition mode are:</source>
          <target state="translated">分解モードの値は3つです。</target>
        </trans-unit>
        <trans-unit id="466d6ba993a967766940f8a7a94e7ffe571cfcd1" translate="yes" xml:space="preserve">
          <source>The three ways to start an agent are described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca35f7b2afddf8594835c4c8f46728d1529fce5" translate="yes" xml:space="preserve">
          <source>The three-argument form is a generalization of the two-argument form, incorporating a mapping step into the accumulation step. We could re-cast the simple sum-of-weights example using the more general form as follows:</source>
          <target state="translated">3引数形式は、2引数形式を一般化したもので、蓄積ステップにマッピングステップを組み込んでいます。より一般的な形式を使用して、単純な重さの和の例を以下のように再キャストすることができます。</target>
        </trans-unit>
        <trans-unit id="6013fc1c39f145cd90930c97bc7092d091abff1f" translate="yes" xml:space="preserve">
          <source>The threshold (for example, &lt;code&gt;&quot;20 ms&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e826b013ebf5d13455251fda42b4b52a0a40d6" translate="yes" xml:space="preserve">
          <source>The threshold high or threshold low are not of the same type as the gauge (gauge monitors).</source>
          <target state="translated">スレッショルドハイやスレッショルドローは、ゲージ(ゲージモニター)と同じ種類のものではありません。</target>
        </trans-unit>
        <trans-unit id="618cf78884b8f69aa1ff4f548c236bef8d448a10" translate="yes" xml:space="preserve">
          <source>The threshold or the offset or the modulus are not of the same type as the counter (counter monitors).</source>
          <target state="translated">しきい値やオフセットやモジュラスは、カウンタ(カウンタモニタ)と同じ種類ではありません。</target>
        </trans-unit>
        <trans-unit id="5b761c49c0df6550fd9288c6d950a41463038892" translate="yes" xml:space="preserve">
          <source>The threshold value for the specified MBean if this MBean is in the set of observed MBeans, or &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">このMBeanが監視対象のMBeanのセットに含まれている場合は、指定されたMBeanのしきい値。それ以外の場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4abbaad922146601ba46b4fe49f8e578a3e9883a" translate="yes" xml:space="preserve">
          <source>The threshold value of the specified object.</source>
          <target state="translated">指定されたオブジェクトの閾値。</target>
        </trans-unit>
        <trans-unit id="93ccc78354f36ab6014746446d9124e4c9a55c8e" translate="yes" xml:space="preserve">
          <source>The threshold value.</source>
          <target state="translated">閾値です。</target>
        </trans-unit>
        <trans-unit id="c8421d23d14f7481a0d1af497cd30f15efc9c681" translate="yes" xml:space="preserve">
          <source>The tick duration must be positive. If it has a part smaller than a whole millisecond, then the whole duration must divide into one second without leaving a remainder. All normal tick durations will match these criteria, including any multiple of hours, minutes, seconds and milliseconds, and sensible nanosecond durations, such as 20ns, 250,000ns and 500,000ns.</source>
          <target state="translated">目盛りの持続時間は正の値でなければなりません。全ミリ秒よりも小さい部分がある場合は、全体の持続時間は残りを残さずに1秒に分割されなければなりません。時間、分、秒、ミリ秒の倍数、20ns、250,000ns、500,000nsのようなナノ秒の感覚的な持続時間を含む、すべての通常の目盛りの持続時間は、これらの基準に一致します。</target>
        </trans-unit>
        <trans-unit id="3d7a7f884123f38061b4f01b40f6fca44848eb92" translate="yes" xml:space="preserve">
          <source>The time and offset do not affect the calculation and will be the same in the result. If the day-of-month is invalid for the year, it will be changed to the last valid day of the month.</source>
          <target state="translated">時間とオフセットは計算に影響を与えず、結果は同じになります。月の日がその年に無効な場合は、その月の最後に有効な日に変更されます。</target>
        </trans-unit>
        <trans-unit id="cf65733067f037d5f7c0913c18befc5a4452eae3" translate="yes" xml:space="preserve">
          <source>The time and offset do not affect the calculation and will be the same in the result. If the resulting &lt;code&gt;OffsetDateTime&lt;/code&gt; is invalid, an exception is thrown.</source>
          <target state="translated">時間とオフセットは計算に影響を与えず、結果は同じになります。結果の &lt;code&gt;OffsetDateTime&lt;/code&gt; が無効な場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="6c06ad7fab5af0cf4e31869a72aaa8c0967814aa" translate="yes" xml:space="preserve">
          <source>The time does not affect the calculation and will be the same in the result. If the day-of-month is invalid for the year, it will be changed to the last valid day of the month.</source>
          <target state="translated">時間は計算に影響を与えず、結果も同じになります。年間で月の日が無効な場合は、その月の最終的に有効な日に変更されます。</target>
        </trans-unit>
        <trans-unit id="4106b4f9e69339c1872abca12ca2da7faed9666a" translate="yes" xml:space="preserve">
          <source>The time in milli-seconds that the MBeanInfo can reasonably be expected to be unchanged. The value can be a &lt;code&gt;Long&lt;/code&gt; or a decimal string. This provides a hint from a DynamicMBean or any MBean that does not define &lt;code&gt;immutableInfo&lt;/code&gt; as &lt;code&gt;true&lt;/code&gt; that the MBeanInfo is not likely to change within this period and therefore can be cached. When this field is missing or has the value zero, it is not recommended to cache the MBeanInfo unless it has the &lt;code&gt;immutableInfo&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; or it has &lt;a href=&quot;mbeaninfo#info-changed&quot;&gt;&lt;code&gt;&quot;jmx.mbean.info.changed&quot;&lt;/code&gt;&lt;/a&gt; in its &lt;a href=&quot;mbeannotificationinfo&quot;&gt;&lt;code&gt;MBeanNotificationInfo&lt;/code&gt;&lt;/a&gt; array.</source>
          <target state="translated">MBeanInfoが変更されないと合理的に期待できるミリ秒単位の時間。値は、 &lt;code&gt;Long&lt;/code&gt; または10進文字列です。これにより、DynamicMBeanまたは &lt;code&gt;immutableInfo&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; として定義していないMBeanから、MBeanInfoがこの期間内に変更される可能性が低く、したがってキャッシュできるというヒントが提供されます。このフィールドがないか、値がゼロの場合、 &lt;code&gt;immutableInfo&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; に設定されているか、&lt;a href=&quot;mbeannotificationinfo&quot;&gt; &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; &lt;/a&gt;配列に&lt;a href=&quot;mbeaninfo#info-changed&quot;&gt; &lt;code&gt;&quot;jmx.mbean.info.changed&quot;&lt;/code&gt; &lt;/a&gt;れていない限り、MBeanInfoをキャッシュすることはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="acbf0fbbf2519547cc43bc06b63a9e4515272ec9" translate="yes" xml:space="preserve">
          <source>The time is converted into an instant using the time definition.</source>
          <target state="translated">時間の定義を利用して瞬時に換算しています。</target>
        </trans-unit>
        <trans-unit id="5996955378dd36992f5dee7922b6ee64c4396fe3" translate="yes" xml:space="preserve">
          <source>The time limit of these SearchControls in milliseconds.</source>
          <target state="translated">これらの SearchControls の制限時間をミリ秒単位で指定します。</target>
        </trans-unit>
        <trans-unit id="526444c169e427c129c525d4df96c1420c7a51f7" translate="yes" xml:space="preserve">
          <source>The time of midnight at the start of the day, '00:00'.</source>
          <target state="translated">1日の始まりの深夜0時の時間、'00:00'です。</target>
        </trans-unit>
        <trans-unit id="8f833517ae6c82bdf28f4d07f70897fd379d4f67" translate="yes" xml:space="preserve">
          <source>The time of noon in the middle of the day, '12:00'.</source>
          <target state="translated">中日の正午の時間帯の「12時」。</target>
        </trans-unit>
        <trans-unit id="64a643ca048518ba71b10504256b6f2db499384f" translate="yes" xml:space="preserve">
          <source>The time of the day at which daylight saving time starts or ends is specified by a millisecond value within the day. There are three kinds of &lt;em&gt;mode&lt;/em&gt;s to specify the time: &lt;a href=&quot;#WALL_TIME&quot;&gt;&lt;code&gt;WALL_TIME&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#STANDARD_TIME&quot;&gt;&lt;code&gt;STANDARD_TIME&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#UTC_TIME&quot;&gt;&lt;code&gt;UTC_TIME&lt;/code&gt;&lt;/a&gt;. For example, if daylight saving time ends at 2:00 am in the wall clock time, it can be specified by 7200000 milliseconds in the &lt;a href=&quot;#WALL_TIME&quot;&gt;&lt;code&gt;WALL_TIME&lt;/code&gt;&lt;/a&gt; mode. In this case, the wall clock time for an &lt;em&gt;end-rule&lt;/em&gt; means the same thing as the daylight time.</source>
          <target state="translated">夏時間が開始または終了する時刻は、その日のミリ秒値で指定されます。時刻を指定する&lt;em&gt;モード&lt;/em&gt;には、&lt;a href=&quot;#WALL_TIME&quot;&gt; &lt;code&gt;WALL_TIME&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#STANDARD_TIME&quot;&gt; &lt;code&gt;STANDARD_TIME&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#UTC_TIME&quot;&gt; &lt;code&gt;UTC_TIME&lt;/code&gt; の&lt;/a&gt;3種類があり&lt;em&gt;ます&lt;/em&gt;。たとえば、夏時間が壁時計時刻の午前2時に終了する場合、&lt;a href=&quot;#WALL_TIME&quot;&gt; &lt;code&gt;WALL_TIME&lt;/code&gt; &lt;/a&gt;モードでは7200000ミリ秒で指定できます。この場合、&lt;em&gt;エンドルールの実&lt;/em&gt;時間は夏時間と同じ意味になります。</target>
        </trans-unit>
        <trans-unit id="8f963cde5781a47df760ad32650d381c8f0dbe75" translate="yes" xml:space="preserve">
          <source>The time of the day at which daylight saving time starts or ends is specified by a millisecond value within the day. There are three kinds of &lt;em&gt;mode&lt;/em&gt;s to specify the time: &lt;a href=&quot;simpletimezone#WALL_TIME&quot;&gt;&lt;code&gt;WALL_TIME&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;simpletimezone#STANDARD_TIME&quot;&gt;&lt;code&gt;STANDARD_TIME&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;simpletimezone#UTC_TIME&quot;&gt;&lt;code&gt;UTC_TIME&lt;/code&gt;&lt;/a&gt;. For example, if daylight saving time ends at 2:00 am in the wall clock time, it can be specified by 7200000 milliseconds in the &lt;a href=&quot;simpletimezone#WALL_TIME&quot;&gt;&lt;code&gt;WALL_TIME&lt;/code&gt;&lt;/a&gt; mode. In this case, the wall clock time for an &lt;em&gt;end-rule&lt;/em&gt; means the same thing as the daylight time.</source>
          <target state="translated">夏時間が開始または終了する時刻は、その日のミリ秒の値で指定されます。時間を指定する&lt;em&gt;モード&lt;/em&gt;には、&lt;a href=&quot;simpletimezone#WALL_TIME&quot;&gt; &lt;code&gt;WALL_TIME&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;simpletimezone#STANDARD_TIME&quot;&gt; &lt;code&gt;STANDARD_TIME&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;simpletimezone#UTC_TIME&quot;&gt; &lt;code&gt;UTC_TIME&lt;/code&gt; の&lt;/a&gt; 3種類があり&lt;em&gt;ます&lt;/em&gt;。たとえば、夏時間がウォールクロック時間の午前2時に終了する場合、&lt;a href=&quot;simpletimezone#WALL_TIME&quot;&gt; &lt;code&gt;WALL_TIME&lt;/code&gt; &lt;/a&gt;モードでは7200000ミリ秒で指定できます。この場合、&lt;em&gt;エンドルールの実&lt;/em&gt;時間は夏時間と同じことを意味します。</target>
        </trans-unit>
        <trans-unit id="da518f034e84f814aabae3807109e025837e0b57" translate="yes" xml:space="preserve">
          <source>The time period in milliseconds, or &lt;code&gt;0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf057ec490c0b8af2d8425ade1d7ae7ac4480b72" translate="yes" xml:space="preserve">
          <source>The time period that the sending side may expire the message if it has not been sent, or &lt;code&gt;0&lt;/code&gt; to indicate that no timeout should occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8deb22926d2dc6ce60af21119793b60100298e6b" translate="yes" xml:space="preserve">
          <source>The time period that the sending side may expire the message if it has not been sent, or &lt;code&gt;0&lt;/code&gt; to indicate that no timeout should occur. This value is only applicable for messages being sent, it has no meaning for received messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f682fddb863e7c5b381d42cd6be2e0499225644" translate="yes" xml:space="preserve">
          <source>The time stamp.</source>
          <target state="translated">タイムスタンプです。</target>
        </trans-unit>
        <trans-unit id="3cb58d5d8003015620c159da03ce3e4d5619a359" translate="yes" xml:space="preserve">
          <source>The time stamp. Replaced by InputEvent.getWhen().</source>
          <target state="translated">タイムスタンプ。InputEvent.getWhen()で置き換えられます。</target>
        </trans-unit>
        <trans-unit id="422a6a0727efc668eadfab588f39e7901af76990" translate="yes" xml:space="preserve">
          <source>The time-to-live constant for disabling the expiration control for loaded resource bundle instances in the cache.</source>
          <target state="translated">キャッシュにロードされたリソースバンドルインスタンスの期限切れ制御を無効にするための有効期限の定数。</target>
        </trans-unit>
        <trans-unit id="c09406968aca987adec6afd3d870562c13c5226c" translate="yes" xml:space="preserve">
          <source>The time-to-live constant for not caching loaded resource bundle instances.</source>
          <target state="translated">ロードされたリソースバンドルインスタンスをキャッシュしないための生存時間の定数。</target>
        </trans-unit>
        <trans-unit id="2948afa6c507e96db7157cef9cbb050870dbd00b" translate="yes" xml:space="preserve">
          <source>The time-zone offset for UTC, with an ID of 'Z'.</source>
          <target state="translated">UTC のタイムゾーンオフセット、ID は 'Z' です。</target>
        </trans-unit>
        <trans-unit id="1dfd324cfb41000f9d3aba1f9dad090939b1b93f" translate="yes" xml:space="preserve">
          <source>The timeout period, specified by &lt;code&gt;timeout&lt;/code&gt; milliseconds plus &lt;code&gt;nanos&lt;/code&gt; nanoseconds arguments, has elapsed.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; ミリ秒と &lt;code&gt;nanos&lt;/code&gt; ナノ秒の引数で指定されたタイムアウト期間が経過しました。</target>
        </trans-unit>
        <trans-unit id="e87dd73958b4c331aa3b482b31ba9b3bb70f0291" translate="yes" xml:space="preserve">
          <source>The timeout value, in milliseconds, indicates the maximum amount of time the try should take. If the operation times out before getting an answer, the host is deemed unreachable. A negative value will result in an IllegalArgumentException being thrown.</source>
          <target state="translated">タイムアウト値は、試行に要する最大時間をミリ秒単位で示します。応答を得る前に操作がタイムアウトした場合、ホストは到達不可能とみなされます。負の値を指定すると、IllegalArgumentExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="5a3c7016b356d85ab2005993ec546da2021f5da3" translate="yes" xml:space="preserve">
          <source>The timer notification detailed message or null if the identifier is not mapped to any timer notification registered for this timer MBean.</source>
          <target state="translated">識別子がこのタイマーMBeanに登録されているタイマー通知にマッピングされていない場合は、タイマー通知の詳細メッセージ、またはNULL。</target>
        </trans-unit>
        <trans-unit id="e45c48a5b2ba20c62b4614e6273292d7390eb1e1" translate="yes" xml:space="preserve">
          <source>The timer notification type or null if the identifier is not mapped to any timer notification registered for this timer MBean.</source>
          <target state="translated">識別子がこのタイマーMBeanに登録されているタイマー通知にマッピングされていない場合は、タイマー通知のタイプ、またはnullを指定します。</target>
        </trans-unit>
        <trans-unit id="23967f54cac8eb8b003d2fc196f922e43be03fd3" translate="yes" xml:space="preserve">
          <source>The timer notification user data object or null if the identifier is not mapped to any timer notification registered for this timer MBean.</source>
          <target state="translated">タイマー通知のユーザデータオブジェクト、または識別子がこのタイマーMBeanに登録されたタイマー通知にマッピングされていない場合はNULL。</target>
        </trans-unit>
        <trans-unit id="d238facacd1f3d07587721542ed70d70cb4c4775" translate="yes" xml:space="preserve">
          <source>The timer notification will be handled once at the specified date.</source>
          <target state="translated">タイマー通知は指定された日に1回処理されます。</target>
        </trans-unit>
        <trans-unit id="414f37292531292150b0ccb1cad0625336e616e7" translate="yes" xml:space="preserve">
          <source>The timer notification will repeat continuously using the timer period using a</source>
          <target state="translated">を使用してタイマー通知をタイマー期間を使用して連続的に繰り返します。</target>
        </trans-unit>
        <trans-unit id="315f63d583a4676ef18933ae7199a0ed0f9a00e4" translate="yes" xml:space="preserve">
          <source>The timer notifications are created and handled by the timer MBean.</source>
          <target state="translated">タイマー通知は、タイマーMBeanで作成・処理されます。</target>
        </trans-unit>
        <trans-unit id="cd191085be187917516f28d90bc41b5e0e055de2" translate="yes" xml:space="preserve">
          <source>The timer service relies on the system date of the host where the &lt;code&gt;Timer&lt;/code&gt; class is loaded. Listeners may receive untimely notifications if their host has a different system date. To avoid such problems, synchronize the system date of all host machines where timing is needed.</source>
          <target state="translated">タイマーサービスは、 &lt;code&gt;Timer&lt;/code&gt; クラスが読み込まれるホストのシステム日付に依存します。リスナーは、ホストのシステム日付が異なる場合、タイミングよく通知を受け取ることがあります。このような問題を回避するには、タイミングが必要なすべてのホストマシンのシステム日付を同期します。</target>
        </trans-unit>
        <trans-unit id="60a7b8fc73dec0735c0c82b6db258aba41d55181" translate="yes" xml:space="preserve">
          <source>The timestamp of this &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;UUID&lt;/code&gt; のタイムスタンプ。</target>
        </trans-unit>
        <trans-unit id="5d91c8abe6606f2a3d89bcf82e749e9e60f3b44c" translate="yes" xml:space="preserve">
          <source>The timestamp or &lt;code&gt;null&lt;/code&gt; if none is present.</source>
          <target state="translated">タイムスタンプ。存在しない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41a65048c31509f7e0113cb6ea8961ee3f79f086" translate="yes" xml:space="preserve">
          <source>The timestamp value associated with this UUID.</source>
          <target state="translated">このUUIDに関連付けられたタイムスタンプ値。</target>
        </trans-unit>
        <trans-unit id="77858a6a5789b904ad06d6e90ad129b1b4ed75fb" translate="yes" xml:space="preserve">
          <source>The timestamp value is only meaningful in a time-based UUID, which has version type 1. If this &lt;code&gt;UUID&lt;/code&gt; is not a time-based UUID then this method throws UnsupportedOperationException.</source>
          <target state="translated">タイムスタンプ値は、バージョンタイプ1の時間ベースのUUIDでのみ意味があります。この &lt;code&gt;UUID&lt;/code&gt; が時間ベースのUUIDでない場合、このメソッドはUnsupportedOperationExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="562d9979ad13d306cfdc69375e27b692b4c4e6be" translate="yes" xml:space="preserve">
          <source>The timestamp's date and time.</source>
          <target state="translated">タイムスタンプの日付と時刻。</target>
        </trans-unit>
        <trans-unit id="2f99efc0a5831891f40ab823d3bf06354b6d699f" translate="yes" xml:space="preserve">
          <source>The timing division type of the sequence.</source>
          <target state="translated">シーケンスのタイミング分割タイプ。</target>
        </trans-unit>
        <trans-unit id="b61d7655e56c95f2266c2fad01803ab318ea6674" translate="yes" xml:space="preserve">
          <source>The timing information and resolution for a track is controlled by and stored in the sequence containing the track. A given &lt;code&gt;Track&lt;/code&gt; is considered to belong to the particular &lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt; that maintains its timing. For this reason, a new (empty) track is created by calling the &lt;a href=&quot;sequence#createTrack()&quot;&gt;&lt;code&gt;Sequence.createTrack()&lt;/code&gt;&lt;/a&gt; method, rather than by directly invoking a &lt;code&gt;Track&lt;/code&gt; constructor.</source>
          <target state="translated">トラックのタイミング情報と解像度は、トラックを含むシーケンスによって制御され、保存されます。特定の &lt;code&gt;Track&lt;/code&gt; は、そのタイミングを維持する特定の&lt;a href=&quot;sequence&quot;&gt; &lt;code&gt;Sequence&lt;/code&gt; &lt;/a&gt;に属していると見なされます。このため、新しい（空の）トラックは、 &lt;code&gt;Track&lt;/code&gt; コンストラクターを直接呼び出すのではなく、&lt;a href=&quot;sequence#createTrack()&quot;&gt; &lt;code&gt;Sequence.createTrack()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって作成されます。</target>
        </trans-unit>
        <trans-unit id="d0374fbf6438fbc3467dbf34b4e05683b94595c3" translate="yes" xml:space="preserve">
          <source>The timing information and resolution for a track is controlled by and stored in the sequence containing the track. A given &lt;code&gt;Track&lt;/code&gt; is considered to belong to the particular &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; that maintains its timing. For this reason, a new (empty) track is created by calling the &lt;code&gt;&lt;a href=&quot;sequence#createTrack--&quot;&gt;&lt;code&gt;Sequence.createTrack()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method, rather than by directly invoking a &lt;code&gt;Track&lt;/code&gt; constructor.</source>
          <target state="translated">トラックのタイミング情報と解像度は、トラックを含むシーケンスによって制御および格納されます。特定の &lt;code&gt;Track&lt;/code&gt; は、そのタイミングを維持する特定の &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; に属していると見なされます。このため、 &lt;code&gt;Track&lt;/code&gt; コンストラクターを直接呼び出すのではなく、 &lt;code&gt;&lt;a href=&quot;sequence#createTrack--&quot;&gt;&lt;code&gt;Sequence.createTrack()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドを呼び出すことによって、新しい（空の）トラックが作成されます。</target>
        </trans-unit>
        <trans-unit id="6e6d3880f415cd4ec5def31690bbd751de4d2179" translate="yes" xml:space="preserve">
          <source>The timing resolution of the MIDI file.</source>
          <target state="translated">MIDIファイルのタイミング分解能。</target>
        </trans-unit>
        <trans-unit id="94d8255f666f78ba91e4c0653d1ddca333f07432" translate="yes" xml:space="preserve">
          <source>The timing resolution of the sequence.</source>
          <target state="translated">シーケンスのタイミング分解能。</target>
        </trans-unit>
        <trans-unit id="5ea038093e385d3d5e2fd57f0725ac3f67c851e4" translate="yes" xml:space="preserve">
          <source>The title displayed in this internal frame's title bar.</source>
          <target state="translated">この内部フレームのタイトルバーに表示されるタイトル。</target>
        </trans-unit>
        <trans-unit id="acaeefe50cb5c6ee79bdfe6165ed6efca1e633ed" translate="yes" xml:space="preserve">
          <source>The title for the dialog box.</source>
          <target state="translated">ダイアログボックスのタイトル。</target>
        </trans-unit>
        <trans-unit id="3a3106a5519a4cc49f3d21712c3f6fa49becfeb4" translate="yes" xml:space="preserve">
          <source>The title may or may not be displayed, depending on the actual type of window created.</source>
          <target state="translated">実際に作成されたウィンドウの種類によっては、タイトルが表示される場合とされない場合があります。</target>
        </trans-unit>
        <trans-unit id="f0683018b81877e833126e6d3b7e7f8110b2e217" translate="yes" xml:space="preserve">
          <source>The title of a document as specified by the &lt;code&gt;TITLE&lt;/code&gt; element in the head of the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8120bf9b224de89c2920e1546dcda46c8b1f8843" translate="yes" xml:space="preserve">
          <source>The title pane component used in the desktop icon.</source>
          <target state="translated">デスクトップアイコンで使用されるタイトルペインコンポーネント。</target>
        </trans-unit>
        <trans-unit id="53048a7dfc38ea7b3d5b7194f51d45f9a8b221a2" translate="yes" xml:space="preserve">
          <source>The title the border should display.</source>
          <target state="translated">ボーダーに表示するタイトル。</target>
        </trans-unit>
        <trans-unit id="6c8e5b4d5d69012c519b74be2af0f0e1bad6f4c4" translate="yes" xml:space="preserve">
          <source>The token was a duplicate of an earlier token.</source>
          <target state="translated">トークンは以前のトークンと重複していました。</target>
        </trans-unit>
        <trans-unit id="469511f0f8c8e5bb2c80808eab9d90b35b66e458" translate="yes" xml:space="preserve">
          <source>The token was a duplicate of an earlier token. This is a fatal error code that may occur during context establishment. It is not used to indicate supplementary status values. The MessageProp object is used for that purpose.</source>
          <target state="translated">トークンは以前のトークンと重複していました。これは、コンテキストの確立中に発生する可能性のある致命的なエラーコードです。補足的なステータス値を示すためには使用されません。MessageProp オブジェクトはその目的のために使用されます。</target>
        </trans-unit>
        <trans-unit id="309f8befb903508c4999847b0b027aa02db2ad23" translate="yes" xml:space="preserve">
          <source>The token's validity period has expired.</source>
          <target state="translated">トークンの有効期限が切れました。</target>
        </trans-unit>
        <trans-unit id="c12371230e30f66f3a76ec6704bded2a17df9644" translate="yes" xml:space="preserve">
          <source>The token's validity period has expired. This is a fatal error code that may occur during context establishment. It is not used to indicate supplementary status values. The MessageProp object is used for that purpose.</source>
          <target state="translated">トークンの有効期限が切れました。これは、コンテキストの確立中に発生する可能性のある致命的なエラーコードです。補足的なステータス値を示すためには使用されません。MessageProp オブジェクトはその目的のために使用されます。</target>
        </trans-unit>
        <trans-unit id="46bd53fc951ee54ff26208f7f7d6b401775175dc" translate="yes" xml:space="preserve">
          <source>The tool environment is not required to support annotation processors that access environmental resources, either &lt;a href=&quot;roundenvironment&quot;&gt;per round&lt;/a&gt; or &lt;a href=&quot;processingenvironment&quot;&gt;cross-round&lt;/a&gt;, in a multi-threaded fashion.</source>
          <target state="translated">ツール環境は、マルチスレッド方式で&lt;a href=&quot;processingenvironment&quot;&gt;ラウンド&lt;/a&gt;&lt;a href=&quot;roundenvironment&quot;&gt;ごと&lt;/a&gt;またはクロスラウンドごとに環境リソースにアクセスするアノテーションプロセッサをサポートする必要はありません。</target>
        </trans-unit>
        <trans-unit id="475033ec07ec172731d36e8e1a8c4e34cb1c0c10" translate="yes" xml:space="preserve">
          <source>The tool uses a</source>
          <target state="translated">ツールは</target>
        </trans-unit>
        <trans-unit id="90d4e3e442dfc280941229ae11524075e2227322" translate="yes" xml:space="preserve">
          <source>The tool will create an instance of a doclet using the no-arg constructor of the doclet class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60edabc59c6f9e62a5a0fdea67fe30d15095591d" translate="yes" xml:space="preserve">
          <source>The tooltip text displayed on the approve button when a directory is selected and the current selection mode is FILES_ONLY.</source>
          <target state="translated">ディレクトリが選択されていて、現在の選択モードがFILES_ONLYの場合、承認ボタンに表示されるツールチップテキスト。</target>
        </trans-unit>
        <trans-unit id="6ee07dce8496ccc8327ec779a3d953aaa0190c20" translate="yes" xml:space="preserve">
          <source>The top input tray in the printer.</source>
          <target state="translated">プリンター内の上部の入力トレイです。</target>
        </trans-unit>
        <trans-unit id="401590292bf1267b8c693854dc6321d52720a8be" translate="yes" xml:space="preserve">
          <source>The top inset of the border.</source>
          <target state="translated">ボーダーの上部のインセット。</target>
        </trans-unit>
        <trans-unit id="40ca45217a397acf3cb9dde5c1b466e62f00362e" translate="yes" xml:space="preserve">
          <source>The top level representation of a documentation comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a671ce68c829c9c3682af0e642fe256fbef14d" translate="yes" xml:space="preserve">
          <source>The top-level error handler that reacts to otherwise uncaught exceptions does not print out a message or otherwise notify the application if the uncaught exception is an instance of &lt;code&gt;ThreadDeath&lt;/code&gt;.</source>
          <target state="translated">キャッチされない例外に反応するトップレベルのエラーハンドラーは、メッセージを出力しないか、キャッチされない例外が &lt;code&gt;ThreadDeath&lt;/code&gt; のインスタンスであるかどうかをアプリケーションに通知しません。</target>
        </trans-unit>
        <trans-unit id="46f6d47ae13aad5695f239448bb57766c13e2aa1" translate="yes" xml:space="preserve">
          <source>The total length of the message in bytes (the status byte plus any data bytes)</source>
          <target state="translated">メッセージの総長をバイト単位で表したもの(ステータス・バイトとデータ・バイト)。</target>
        </trans-unit>
        <trans-unit id="17fecdd4ddcdb8672f8d5932951da08117bd4dd0" translate="yes" xml:space="preserve">
          <source>The total number of bits in the pixel.</source>
          <target state="translated">ピクセル内の総ビット数。</target>
        </trans-unit>
        <trans-unit id="05917e7da6988078054932792c0c5486cd4b1b28" translate="yes" xml:space="preserve">
          <source>The total number of points.</source>
          <target state="translated">総点数です。</target>
        </trans-unit>
        <trans-unit id="f62e7ead83f7b630f60dc2cbbcf456264118e6c3" translate="yes" xml:space="preserve">
          <source>The total number of points. The value of &lt;code&gt;npoints&lt;/code&gt; represents the number of valid points in this &lt;code&gt;Polygon&lt;/code&gt; and might be less than the number of elements in &lt;a href=&quot;#xpoints&quot;&gt;&lt;code&gt;xpoints&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ypoints&quot;&gt;&lt;code&gt;ypoints&lt;/code&gt;&lt;/a&gt;. This value can be 0.</source>
          <target state="translated">ポイントの総数。 &lt;code&gt;npoints&lt;/code&gt; の値は、この &lt;code&gt;Polygon&lt;/code&gt; 有効なポイントの数を表し、&lt;a href=&quot;#xpoints&quot;&gt; &lt;code&gt;xpoints&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#ypoints&quot;&gt; &lt;code&gt;ypoints&lt;/code&gt; の&lt;/a&gt;要素の数よりも少ない場合があります。この値は0にすることができます。</target>
        </trans-unit>
        <trans-unit id="7ad0ea114ec1ddf71f5fe2d46d0cb9e7197a57a0" translate="yes" xml:space="preserve">
          <source>The total number of significant digits in</source>
          <target state="translated">の有効桁数の合計。</target>
        </trans-unit>
        <trans-unit id="e8f848286d69d23ec4b7259715c33925c847df30" translate="yes" xml:space="preserve">
          <source>The total size of the document including all external resources, this number might change as a document is being parsed if references to more external resources are seen.</source>
          <target state="translated">すべての外部リソースを含むドキュメントの合計サイズですが、より多くの外部リソースへの参照が表示されている場合は、ドキュメントが解析されているときにこの数値が変わることがあります。</target>
        </trans-unit>
        <trans-unit id="1a52eb79799de442c045f35d0474d14d18b85672" translate="yes" xml:space="preserve">
          <source>The total size of the document including all external resources, this number might change as a document is being parsed if references to more external resources are seen. A value of &lt;code&gt;0&lt;/code&gt; is returned if the total size cannot be determined or estimated.</source>
          <target state="translated">すべての外部リソースを含むドキュメントの合計サイズ。より多くの外部リソースへの参照が見られる場合、ドキュメントの解析中にこの数値が変わる可能性があります。合計サイズを決定または見積もることができない場合は、値 &lt;code&gt;0&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="c7cfb3d21fdcbe867349c0a9b8497b711e26d212" translate="yes" xml:space="preserve">
          <source>The total size of the list.</source>
          <target state="translated">リストの合計サイズです。</target>
        </trans-unit>
        <trans-unit id="6b5d7d5da983bf443ff8b0d755377059b977f35d" translate="yes" xml:space="preserve">
          <source>The tracking value is multiplied by the font point size and passed through the font transform to determine an additional amount to add to the advance of each glyph cluster. Positive tracking values will inhibit formation of optional ligatures. Tracking values are typically between &lt;code&gt;-0.1&lt;/code&gt; and &lt;code&gt;0.3&lt;/code&gt;; values outside this range are generally not desirable.</source>
          <target state="translated">トラッキング値にフォントポイントサイズを掛け、フォント変換を通過させて、各グリフクラスターの前進に追加する追加の量を決定します。正のトラッキング値は、オプションの合字の形成を抑制します。追跡値は通常 &lt;code&gt;-0.1&lt;/code&gt; から &lt;code&gt;0.3&lt;/code&gt; の間です。この範囲外の値は一般的に望ましくありません。</target>
        </trans-unit>
        <trans-unit id="703deab7518e04de6cf78487901807570cefd5e8" translate="yes" xml:space="preserve">
          <source>The transaction branch has been heuristically committed and rolled back.</source>
          <target state="translated">トランザクションブランチはヒューリスティックにコミットされ、ロールバックされています。</target>
        </trans-unit>
        <trans-unit id="14b4d7ed7740cc11b56bff202adfa6d5c222e033" translate="yes" xml:space="preserve">
          <source>The transaction branch has been heuristically committed.</source>
          <target state="translated">トランザクションブランチはヒューリスティックにコミットされています。</target>
        </trans-unit>
        <trans-unit id="da0babcbf37a3af594d97dc69b6bf086d7544d2c" translate="yes" xml:space="preserve">
          <source>The transaction branch has been heuristically rolled back.</source>
          <target state="translated">取引分岐はヒューリスティックにロールバックされています。</target>
        </trans-unit>
        <trans-unit id="050d9fced3f39f16dd7abd1393e7514ef1ce5372" translate="yes" xml:space="preserve">
          <source>The transaction branch has been read-only and has been committed.</source>
          <target state="translated">トランザクションブランチは読み取り専用になっており、コミットされています。</target>
        </trans-unit>
        <trans-unit id="33db632dad51ea9ae41ea3cf6edbcd4f22719c4e" translate="yes" xml:space="preserve">
          <source>The transaction branch may have been heuristically completed.</source>
          <target state="translated">取引分岐はヒューリスティックに完了している可能性があります。</target>
        </trans-unit>
        <trans-unit id="861c2375e08c3476b0904853fa18832f2c36bb4e" translate="yes" xml:space="preserve">
          <source>The transaction branch was read-only and has been committed.</source>
          <target state="translated">トランザクションブランチは読み取り専用で、コミットされました。</target>
        </trans-unit>
        <trans-unit id="b793d2f86bb5ddf2929ec67d8f137dd2ab9dd816" translate="yes" xml:space="preserve">
          <source>The transaction work has been prepared normally.</source>
          <target state="translated">取引作業は普通に準備されています。</target>
        </trans-unit>
        <trans-unit id="9df96b47070ad60931e75c25b6080817de2717a9" translate="yes" xml:space="preserve">
          <source>The transfer &lt;em&gt;will not necessarily&lt;/em&gt; have been completed at the return of this call (i.e. the call does not block waiting for the drop). The transfer will take place through the Swing implementation of the &lt;code&gt;java.awt.dnd&lt;/code&gt; mechanism, requiring no further effort from the developer. The &lt;code&gt;exportDone&lt;/code&gt; method will be called when the transfer has completed.</source>
          <target state="translated">転送&lt;em&gt;は&lt;/em&gt;、このコールの戻り時に&lt;em&gt;必ずしも&lt;/em&gt;完了しているとは限りません（つまり、コールはドロップの待機をブロックしません）。転送は、 &lt;code&gt;java.awt.dnd&lt;/code&gt; メカニズムのSwing実装を介して行われ、開発者による追加の作業は必要ありません。 &lt;code&gt;exportDone&lt;/code&gt; の転送が完了したときにメソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a8c4e8eb43c79370beb6a0b967d482c111e1ea42" translate="yes" xml:space="preserve">
          <source>The transfer will take place using the &lt;code&gt;java.awt.datatransfer&lt;/code&gt; mechanism, requiring no further effort from the developer. Any data transfer &lt;em&gt;will&lt;/em&gt; be complete and the &lt;code&gt;exportDone&lt;/code&gt; method will be called with the action that occurred, before this method returns. Should the clipboard be unavailable when attempting to place data on it, the &lt;code&gt;IllegalStateException&lt;/code&gt; thrown by &lt;a href=&quot;../../../java.datatransfer/java/awt/datatransfer/clipboard#setContents(java.awt.datatransfer.Transferable,java.awt.datatransfer.ClipboardOwner)&quot;&gt;&lt;code&gt;Clipboard.setContents(Transferable, ClipboardOwner)&lt;/code&gt;&lt;/a&gt; will be propagated through this method. However, &lt;code&gt;exportDone&lt;/code&gt; will first be called with an action of &lt;code&gt;NONE&lt;/code&gt; for consistency.</source>
          <target state="translated">転送は &lt;code&gt;java.awt.datatransfer&lt;/code&gt; メカニズムを使用して行われ、開発者による追加の作業は必要ありません。このメソッドが戻る前に、すべてのデータ転送&lt;em&gt;が&lt;/em&gt;完了し、発生したアクションで &lt;code&gt;exportDone&lt;/code&gt; メソッドが呼び出されます。クリップボードにデータを配置しようとしたときにクリップボードが使用できない場合、&lt;a href=&quot;../../../java.datatransfer/java/awt/datatransfer/clipboard#setContents(java.awt.datatransfer.Transferable,java.awt.datatransfer.ClipboardOwner)&quot;&gt; &lt;code&gt;Clipboard.setContents(Transferable, ClipboardOwner)&lt;/code&gt; &lt;/a&gt;によってスローされた &lt;code&gt;IllegalStateException&lt;/code&gt; がこのメソッドを介して伝播されます。ただし、一貫性を &lt;code&gt;exportDone&lt;/code&gt; に、exportDoneは最初に &lt;code&gt;NONE&lt;/code&gt; のアクションで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d87f3db630bd4bc1d40103fa67e3e1b3f2db8546" translate="yes" xml:space="preserve">
          <source>The transformation API throw three types of specialized exceptions. A &lt;a href=&quot;transformerfactoryconfigurationerror&quot;&gt;&lt;code&gt;TransformerFactoryConfigurationError&lt;/code&gt;&lt;/a&gt; is parallel to the &lt;a href=&quot;../parsers/factoryconfigurationerror&quot;&gt;&lt;code&gt;FactoryConfigurationError&lt;/code&gt;&lt;/a&gt;, and is thrown when a configuration problem with the TransformerFactory exists. This error will typically be thrown when the transformation factory class specified with the &quot;javax.xml.transform.TransformerFactory&quot; system property cannot be found or instantiated.</source>
          <target state="translated">変換APIは、3種類の特殊な例外をスローします。A &lt;a href=&quot;transformerfactoryconfigurationerror&quot;&gt; &lt;code&gt;TransformerFactoryConfigurationError&lt;/code&gt; は&lt;/a&gt;に平行である&lt;a href=&quot;../parsers/factoryconfigurationerror&quot;&gt; &lt;code&gt;FactoryConfigurationError&lt;/code&gt; &lt;/a&gt;、およびTransformerFactoryの持つ構成の問題が存在する場合にスローされます。このエラーは通常、「javax.xml.transform.TransformerFactory」システムプロパティで指定された変換ファクトリクラスが見つからないか、インスタンス化できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="fe701db82a538a1330d479e42d071cac878afdf3" translate="yes" xml:space="preserve">
          <source>The transformed &lt;code&gt;Raster&lt;/code&gt;.</source>
          <target state="translated">変換された &lt;code&gt;Raster&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d806ee0a87e3109095fc859ea8eb5cc5532045bc" translate="yes" xml:space="preserve">
          <source>The transformer must continue to try and provide normal transformation after invoking this method. It should still be possible for the application to process the document through to the end if no other errors are encountered.</source>
          <target state="translated">トランスフォーマは、このメソッドを呼び出した後も、通常の変換を提供しようとする必要があります。他のエラーが発生しなければ、アプリケーションはドキュメントを最後まで処理することができるはずです。</target>
        </trans-unit>
        <trans-unit id="5fa423bbef1d4f0ed7a551ce1858b400fcccf4df" translate="yes" xml:space="preserve">
          <source>The transition may be represented as occurring at 24:00.</source>
          <target state="translated">遷移は、24時に発生したものとして表現されてもよい。</target>
        </trans-unit>
        <trans-unit id="0bbbaf76aec7f9bf6cba6b78d515bbb3bf05d201" translate="yes" xml:space="preserve">
          <source>The translation between a parent and child Raster may be determined by subtracting the child's sampleModelTranslateX and sampleModelTranslateY values from those of the parent.</source>
          <target state="translated">親ラスタと子ラスタの間の変換は、親の値から子のsampleModelTranslateXとsampleModelTranslateYの値を差し引くことで決定することができます。</target>
        </trans-unit>
        <trans-unit id="4d3c8c5c72b6b96fb6f59ecad375ecd5b5124beb" translate="yes" xml:space="preserve">
          <source>The translation from pixel sample values to color/alpha components for display or processing purposes is based on a one-to-one correspondence of samples to components. Depending on the transfer type used to create an instance of &lt;code&gt;ComponentColorModel&lt;/code&gt;, the pixel sample values represented by that instance may be signed or unsigned and may be of integral type or float or double (see below for details). The translation from sample values to normalized color/alpha components must follow certain rules. For float and double samples, the translation is an identity, i.e. normalized component values are equal to the corresponding sample values. For integral samples, the translation should be only a simple scale and offset, where the scale and offset constants may be different for each component. The result of applying the scale and offset constants is a set of color/alpha component values, which are guaranteed to fall within a certain range. Typically, the range for a color component will be the range defined by the &lt;code&gt;getMinValue&lt;/code&gt; and &lt;code&gt;getMaxValue&lt;/code&gt; methods of the &lt;code&gt;ColorSpace&lt;/code&gt; class. The range for an alpha component should be 0.0 to 1.0.</source>
          <target state="translated">The translation from pixel sample values to color/alpha components for display or processing purposes is based on a one-to-one correspondence of samples to components. Depending on the transfer type used to create an instance of &lt;code&gt;ComponentColorModel&lt;/code&gt; , the pixel sample values represented by that instance may be signed or unsigned and may be of integral type or float or double (see below for details). The translation from sample values to normalized color/alpha components must follow certain rules. For float and double samples, the translation is an identity, i.e. normalized component values are equal to the corresponding sample values. For integral samples, the translation should be only a simple scale and offset, where the scale and offset constants may be different for each component. The result of applying the scale and offset constants is a set of color/alpha component values, which are guaranteed to fall within a certain range. Typically, the range for a color component will be the range defined by the &lt;code&gt;getMinValue&lt;/code&gt; and &lt;code&gt;getMaxValue&lt;/code&gt; methods of the &lt;code&gt;ColorSpace&lt;/code&gt; class. The range for an alpha component should be 0.0 to 1.0.</target>
        </trans-unit>
        <trans-unit id="b65a261d80d53542a10bedce8edbc81f70d91963" translate="yes" xml:space="preserve">
          <source>The translation from pixel values to color/alpha components for display or processing purposes is a one-to-one correspondence of samples to components. A &lt;code&gt;DirectColorModel&lt;/code&gt; is typically used with image data which uses masks to define packed samples. For example, a &lt;code&gt;DirectColorModel&lt;/code&gt; can be used in conjunction with a &lt;code&gt;SinglePixelPackedSampleModel&lt;/code&gt; to construct a &lt;a href=&quot;bufferedimage&quot;&gt;&lt;code&gt;BufferedImage&lt;/code&gt;&lt;/a&gt;. Normally the masks used by the &lt;a href=&quot;samplemodel&quot;&gt;&lt;code&gt;SampleModel&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;ColorModel&lt;/code&gt; would be the same. However, if they are different, the color interpretation of pixel data will be done according to the masks of the &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">The translation from pixel values to color/alpha components for display or processing purposes is a one-to-one correspondence of samples to components. A &lt;code&gt;DirectColorModel&lt;/code&gt; is typically used with image data which uses masks to define packed samples. For example, a &lt;code&gt;DirectColorModel&lt;/code&gt; can be used in conjunction with a &lt;code&gt;SinglePixelPackedSampleModel&lt;/code&gt; to construct a &lt;a href=&quot;bufferedimage&quot;&gt; &lt;code&gt;BufferedImage&lt;/code&gt; &lt;/a&gt;. Normally the masks used by the &lt;a href=&quot;samplemodel&quot;&gt; &lt;code&gt;SampleModel&lt;/code&gt; &lt;/a&gt; and the &lt;code&gt;ColorModel&lt;/code&gt; would be the same. However, if they are different, the color interpretation of pixel data will be done according to the masks of the &lt;code&gt;ColorModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="168b1d4ef4c25a61d82bab781cf817cb6ee6ff78" translate="yes" xml:space="preserve">
          <source>The translation from pixel values to color/alpha components for display or processing purposes is a one-to-one correspondence of samples to components. A &lt;code&gt;PackedColorModel&lt;/code&gt; is typically used with image data that uses masks to define packed samples. For example, a &lt;code&gt;PackedColorModel&lt;/code&gt; can be used in conjunction with a &lt;a href=&quot;singlepixelpackedsamplemodel&quot;&gt;&lt;code&gt;SinglePixelPackedSampleModel&lt;/code&gt;&lt;/a&gt; to construct a &lt;a href=&quot;bufferedimage&quot;&gt;&lt;code&gt;BufferedImage&lt;/code&gt;&lt;/a&gt;. Normally the masks used by the &lt;a href=&quot;samplemodel&quot;&gt;&lt;code&gt;SampleModel&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;ColorModel&lt;/code&gt; would be the same. However, if they are different, the color interpretation of pixel data is done according to the masks of the &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">The translation from pixel values to color/alpha components for display or processing purposes is a one-to-one correspondence of samples to components. A &lt;code&gt;PackedColorModel&lt;/code&gt; is typically used with image data that uses masks to define packed samples. For example, a &lt;code&gt;PackedColorModel&lt;/code&gt; can be used in conjunction with a &lt;a href=&quot;singlepixelpackedsamplemodel&quot;&gt; &lt;code&gt;SinglePixelPackedSampleModel&lt;/code&gt; &lt;/a&gt; to construct a &lt;a href=&quot;bufferedimage&quot;&gt; &lt;code&gt;BufferedImage&lt;/code&gt; &lt;/a&gt;. Normally the masks used by the &lt;a href=&quot;samplemodel&quot;&gt; &lt;code&gt;SampleModel&lt;/code&gt; &lt;/a&gt; and the &lt;code&gt;ColorModel&lt;/code&gt; would be the same. However, if they are different, the color interpretation of pixel data is done according to the masks of the &lt;code&gt;ColorModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5d7a0a9a5aa913b72a0d7dce956d6a2d0147d1c" translate="yes" xml:space="preserve">
          <source>The translucency levels of individual pixels may also be effected by the alpha component of their color (see &lt;a href=&quot;#setBackground(java.awt.Color)&quot;&gt;&lt;code&gt;setBackground(Color)&lt;/code&gt;&lt;/a&gt;) and the current shape of this window (see &lt;a href=&quot;#setShape(java.awt.Shape)&quot;&gt;&lt;code&gt;setShape(Shape)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">The translucency levels of individual pixels may also be effected by the alpha component of their color (see &lt;a href=&quot;#setBackground(java.awt.Color)&quot;&gt; &lt;code&gt;setBackground(Color)&lt;/code&gt; &lt;/a&gt;) and the current shape of this window (see &lt;a href=&quot;#setShape(java.awt.Shape)&quot;&gt; &lt;code&gt;setShape(Shape)&lt;/code&gt; &lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="2749ff4c08edcd16b069e9cf4d2ed0371273c113" translate="yes" xml:space="preserve">
          <source>The translucency levels of individual pixels may also be effected by the alpha component of their color (see &lt;a href=&quot;#setBackground(java.awt.Color)&quot;&gt;&lt;code&gt;setBackground(Color)&lt;/code&gt;&lt;/a&gt;) and the opacity value (see &lt;a href=&quot;#setOpacity(float)&quot;&gt;&lt;code&gt;setOpacity(float)&lt;/code&gt;&lt;/a&gt;). See &lt;a href=&quot;graphicsdevice.windowtranslucency&quot;&gt;&lt;code&gt;GraphicsDevice.WindowTranslucency&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">The translucency levels of individual pixels may also be effected by the alpha component of their color (see &lt;a href=&quot;#setBackground(java.awt.Color)&quot;&gt; &lt;code&gt;setBackground(Color)&lt;/code&gt; &lt;/a&gt;) and the opacity value (see &lt;a href=&quot;#setOpacity(float)&quot;&gt; &lt;code&gt;setOpacity(float)&lt;/code&gt; &lt;/a&gt;). See &lt;a href=&quot;graphicsdevice.windowtranslucency&quot;&gt; &lt;code&gt;GraphicsDevice.WindowTranslucency&lt;/code&gt; &lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="7c1306905f8e445cab20995e9caae10676aed4f2" translate="yes" xml:space="preserve">
          <source>The transparency of an &lt;code&gt;IndexColorModel&lt;/code&gt; object is determined by examining the alpha components of the colors in the colormap and choosing the most specific value after considering the optional alpha values and any transparent index specified. The transparency value is &lt;code&gt;Transparency.OPAQUE&lt;/code&gt; only if all valid colors in the colormap are opaque and there is no valid transparent pixel. If all valid colors in the colormap are either completely opaque (alpha = 1.0) or completely transparent (alpha = 0.0), which typically occurs when a valid transparent pixel is specified, the value is &lt;code&gt;Transparency.BITMASK&lt;/code&gt;. Otherwise, the value is &lt;code&gt;Transparency.TRANSLUCENT&lt;/code&gt;, indicating that some valid color has an alpha component that is neither completely transparent nor completely opaque (0.0 &amp;lt; alpha &amp;lt; 1.0).</source>
          <target state="translated">The transparency of an &lt;code&gt;IndexColorModel&lt;/code&gt; object is determined by examining the alpha components of the colors in the colormap and choosing the most specific value after considering the optional alpha values and any transparent index specified. The transparency value is &lt;code&gt;Transparency.OPAQUE&lt;/code&gt; only if all valid colors in the colormap are opaque and there is no valid transparent pixel. If all valid colors in the colormap are either completely opaque (alpha = 1.0) or completely transparent (alpha = 0.0), which typically occurs when a valid transparent pixel is specified, the value is &lt;code&gt;Transparency.BITMASK&lt;/code&gt; . Otherwise, the value is &lt;code&gt;Transparency.TRANSLUCENT&lt;/code&gt; , indicating that some valid color has an alpha component that is neither completely transparent nor completely opaque (0.0 &amp;lt; alpha &amp;lt; 1.0).</target>
        </trans-unit>
        <trans-unit id="c891870f2397ea5ffc5f4c8aade7bd8d1dab8055" translate="yes" xml:space="preserve">
          <source>The transparency value with which this image was created.</source>
          <target state="translated">この画像が作成された透明度の値。</target>
        </trans-unit>
        <trans-unit id="6338d039f89f1539f2243ca8c36cfd3178456a44" translate="yes" xml:space="preserve">
          <source>The transport service capabilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e081237b427051c5333deb296d65a823a7c2908e" translate="yes" xml:space="preserve">
          <source>The transport= value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e25a1118ce8877391b5f01b4a57a8df400e4ba" translate="yes" xml:space="preserve">
          <source>The tree has no model</source>
          <target state="translated">木にはモデルがない</target>
        </trans-unit>
        <trans-unit id="dd6f791fb336426f0b5c534f66eae3384f79ccf9" translate="yes" xml:space="preserve">
          <source>The trigger.</source>
          <target state="translated">引き金だ</target>
        </trans-unit>
        <trans-unit id="19d46a2a9ae7b495f51fc356027feaf3becd628d" translate="yes" xml:space="preserve">
          <source>The truth value returned by this method is equivalent to: &lt;code&gt;getAnnotation(annotationClass) != null&lt;/code&gt;</source>
          <target state="translated">このメソッドによって返される真理値は次と同等です： &lt;code&gt;getAnnotation(annotationClass) != null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c46d6198c957c6c25b841cf0f4dfb6d6cb250b3" translate="yes" xml:space="preserve">
          <source>The ttl &lt;b&gt;must&lt;/b&gt; be in the range &lt;code&gt; 0 &amp;lt;= ttl &amp;lt;=
 255&lt;/code&gt; or an &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown. Multicast packets sent with a TTL of &lt;code&gt;0&lt;/code&gt; are not transmitted on the network but may be delivered locally.</source>
          <target state="translated">The ttl &lt;b&gt;must&lt;/b&gt; be in the range &lt;code&gt; 0 &amp;lt;= ttl &amp;lt;= 255&lt;/code&gt; or an &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown. Multicast packets sent with a TTL of &lt;code&gt;0&lt;/code&gt; are not transmitted on the network but may be delivered locally.</target>
        </trans-unit>
        <trans-unit id="2485bd279a135141b31dd6331097ba469508ddf1" translate="yes" xml:space="preserve">
          <source>The ttl &lt;b&gt;must&lt;/b&gt; be in the range &lt;code&gt;0 &amp;lt;= ttl &amp;lt;=
 255&lt;/code&gt; or an &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown. Multicast packets sent with a TTL of &lt;code&gt;0&lt;/code&gt; are not transmitted on the network but may be delivered locally.</source>
          <target state="translated">ttl &lt;b&gt;は&lt;/b&gt; &lt;code&gt;0 &amp;lt;= ttl &amp;lt;= 255&lt;/code&gt; の範囲内で&lt;b&gt;なければなりません。&lt;/b&gt;そうで&lt;b&gt;ない&lt;/b&gt;場合、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。TTLが &lt;code&gt;0&lt;/code&gt; で送信されたマルチキャストパケットはネットワーク上で送信されませんが、ローカルに配信される場合があります。</target>
        </trans-unit>
        <trans-unit id="6940391f4a3596501f2f3676ceed69996fe5b256" translate="yes" xml:space="preserve">
          <source>The ttl is an &lt;b&gt;unsigned&lt;/b&gt; 8-bit quantity, and so &lt;b&gt;must&lt;/b&gt; be in the range &lt;code&gt;0 &amp;lt;= ttl &amp;lt;= 0xFF &lt;/code&gt;.</source>
          <target state="translated">ttlは&lt;b&gt;符号なしの&lt;/b&gt; 8ビット量であるため、 &lt;code&gt;0 &amp;lt;= ttl &amp;lt;= 0xFF &lt;/code&gt; 範囲で&lt;b&gt;なければなりません&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="969fb09f0d47cbd4ef59365982ee80f259c1e668" translate="yes" xml:space="preserve">
          <source>The twelve methods described above are summarized in the following table:</source>
          <target state="translated">以上の12の方法をまとめると、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="60737d50d1714cdb7c9a212137135f035cb7e133" translate="yes" xml:space="preserve">
          <source>The two &lt;code&gt;Component&lt;/code&gt;s in a split pane can be aligned left to right using &lt;code&gt;JSplitPane.HORIZONTAL_SPLIT&lt;/code&gt;, or top to bottom using &lt;code&gt;JSplitPane.VERTICAL_SPLIT&lt;/code&gt;. The preferred way to change the size of the &lt;code&gt;Component&lt;/code&gt;s is to invoke &lt;code&gt;setDividerLocation&lt;/code&gt; where &lt;code&gt;location&lt;/code&gt; is either the new x or y position, depending on the orientation of the &lt;code&gt;JSplitPane&lt;/code&gt;.</source>
          <target state="translated">The two &lt;code&gt;Component&lt;/code&gt; s in a split pane can be aligned left to right using &lt;code&gt;JSplitPane.HORIZONTAL_SPLIT&lt;/code&gt; , or top to bottom using &lt;code&gt;JSplitPane.VERTICAL_SPLIT&lt;/code&gt; . The preferred way to change the size of the &lt;code&gt;Component&lt;/code&gt; s is to invoke &lt;code&gt;setDividerLocation&lt;/code&gt; where &lt;code&gt;location&lt;/code&gt; is either the new x or y position, depending on the orientation of the &lt;code&gt;JSplitPane&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3593155b51237a7085bf75da2140fc0fe3e8c66" translate="yes" xml:space="preserve">
          <source>The two calls have the same effect.</source>
          <target state="translated">2つのコールは同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="b92a8d153cce49ff845ddf50531191cd3a963be7" translate="yes" xml:space="preserve">
          <source>The two cases (&quot;ja&quot;, &quot;JP&quot;, &quot;JP&quot;) and (&quot;th&quot;, &quot;TH&quot;, &quot;TH&quot;) are handled specially, see &lt;a href=&quot;#special_cases_constructor&quot;&gt;Special Cases&lt;/a&gt; for more information.</source>
          <target state="translated">2つのケース（ &quot;ja&quot;、 &quot;JP&quot;、 &quot;JP&quot;）および（ &quot;th&quot;、 &quot;TH&quot;、 &quot;TH&quot;）は特別に処理されます。詳細については、&lt;a href=&quot;#special_cases_constructor&quot;&gt;特殊なケース&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="28393cbfd67002d6ad36a08762b2e38653599b68" translate="yes" xml:space="preserve">
          <source>The two characters are the same (as compared by the &lt;code&gt;==&lt;/code&gt; operator)</source>
          <target state="translated">2つの文字が同じである（ &lt;code&gt;==&lt;/code&gt; 演算子と比較して）</target>
        </trans-unit>
        <trans-unit id="733cbbaea42ad75e1ffe40db5e03f1fed7b55f41" translate="yes" xml:space="preserve">
          <source>The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the indicated offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt;.</source>
          <target state="translated">The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the indicated offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25387bc728d28df98473fda65f0865bfbdd9186f" translate="yes" xml:space="preserve">
          <source>The two files are the same size, and every byte in the first file is identical to the corresponding byte in the second file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f19211fbe1e7f4c1e87ed754cadc6b0cc14be4e6" translate="yes" xml:space="preserve">
          <source>The two nodes are disconnected.</source>
          <target state="translated">2つのノードが切断されています。</target>
        </trans-unit>
        <trans-unit id="f398c8744bfdea0ef40d2e2e1377fe86aabbce87" translate="yes" xml:space="preserve">
          <source>The two nodes are disconnected. Order between disconnected nodes is always implementation-specific.</source>
          <target state="translated">2 つのノードは切断されています。切断されたノード間の順序は常に実装固有です。</target>
        </trans-unit>
        <trans-unit id="1ec974b380762a0bf9692b16ac0cfa7083a8a76b" translate="yes" xml:space="preserve">
          <source>The two nodes are of the same type.</source>
          <target state="translated">2つのノードは同じタイプのものです。</target>
        </trans-unit>
        <trans-unit id="1416b8437ae024eb2f580e7eda38b503e80d7f1f" translate="yes" xml:space="preserve">
          <source>The two paths locate the &lt;a href=&quot;#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt;same file&lt;/a&gt;, even if two &lt;a href=&quot;path#equals(java.lang.Object)&quot;&gt;equal&lt;/a&gt; paths locate a file does not exist, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8e8cdc02eb816448907e6ad7e73c37517a03bf" translate="yes" xml:space="preserve">
          <source>The two possible authentication types for a resource.</source>
          <target state="translated">リソースに対して可能な2つの認証タイプ。</target>
        </trans-unit>
        <trans-unit id="8562722983b5297a255d72d065fc4efeeada15b3" translate="yes" xml:space="preserve">
          <source>The two sequences of remaining elements, considered independently of their starting positions, are pointwise equal.</source>
          <target state="translated">残りの要素の2つの配列は、その開始位置から独立して考慮され、点方向に等しくなる。</target>
        </trans-unit>
        <trans-unit id="d9e7a9794b9c62912ab9b974fd3e586ad8ce077c" translate="yes" xml:space="preserve">
          <source>The two sequences of remaining elements, considered independently of their starting positions, are pointwise equal. This method considers two double elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to be equal if &lt;code&gt;(a == b) || (Double.isNaN(a) &amp;amp;&amp;amp; Double.isNaN(b))&lt;/code&gt;. The values &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;+0.0&lt;/code&gt; are considered to be equal, unlike &lt;a href=&quot;../lang/double#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Double.equals(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The two sequences of remaining elements, considered independently of their starting positions, are pointwise equal. This method considers two double elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to be equal if &lt;code&gt;(a == b) || (Double.isNaN(a) &amp;amp;&amp;amp; Double.isNaN(b))&lt;/code&gt; . The values &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;+0.0&lt;/code&gt; are considered to be equal, unlike &lt;a href=&quot;../lang/double#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Double.equals(Object)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1e9cc57517a9438e11a17414782fcda2ca6c93d7" translate="yes" xml:space="preserve">
          <source>The two sequences of remaining elements, considered independently of their starting positions, are pointwise equal. This method considers two double elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to be equal if &lt;code&gt;(a == b) || (Double.isNaN(a) &amp;amp;&amp;amp; Double.isNaN(b))&lt;/code&gt;. The values &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;+0.0&lt;/code&gt; are considered to be equal, unlike &lt;a href=&quot;../lang/double#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Double.equals(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">残りの要素の2つのシーケンスは、開始位置とは無関係に考慮され、点ごとに等しくなります。このメソッドは、 &lt;code&gt;(a == b) || (Double.isNaN(a) &amp;amp;&amp;amp; Double.isNaN(b))&lt;/code&gt; 場合 &lt;code&gt;a&lt;/code&gt; 2つのdouble要素aと &lt;code&gt;b&lt;/code&gt; が等しいと見なします。（Double.isNaN（a）&amp;amp;&amp;amp; Double.isNaN（b））。&lt;a href=&quot;../lang/double#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Double.equals(Object)&lt;/code&gt; &lt;/a&gt;とは異なり、値 &lt;code&gt;-0.0&lt;/code&gt; と &lt;code&gt;+0.0&lt;/code&gt; は等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="677d0a0fc0aa5495b5b9a1ef2701a071bddcad42" translate="yes" xml:space="preserve">
          <source>The two sequences of remaining elements, considered independently of their starting positions, are pointwise equal. This method considers two float elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to be equal if &lt;code&gt;(a == b) || (Float.isNaN(a) &amp;amp;&amp;amp; Float.isNaN(b))&lt;/code&gt;. The values &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;+0.0&lt;/code&gt; are considered to be equal, unlike &lt;a href=&quot;../lang/float#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Float.equals(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The two sequences of remaining elements, considered independently of their starting positions, are pointwise equal. This method considers two float elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to be equal if &lt;code&gt;(a == b) || (Float.isNaN(a) &amp;amp;&amp;amp; Float.isNaN(b))&lt;/code&gt; . The values &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;+0.0&lt;/code&gt; are considered to be equal, unlike &lt;a href=&quot;../lang/float#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Float.equals(Object)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f74bb945ec6a22ab7838a324a183e657cee9de65" translate="yes" xml:space="preserve">
          <source>The two sequences of remaining elements, considered independently of their starting positions, are pointwise equal. This method considers two float elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to be equal if &lt;code&gt;(a == b) || (Float.isNaN(a) &amp;amp;&amp;amp; Float.isNaN(b))&lt;/code&gt;. The values &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;+0.0&lt;/code&gt; are considered to be equal, unlike &lt;a href=&quot;../lang/float#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Float.equals(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">残りの要素の2つのシーケンスは、開始位置とは無関係に考慮され、点ごとに等しくなります。このメソッドは、 &lt;code&gt;(a == b) || (Float.isNaN(a) &amp;amp;&amp;amp; Float.isNaN(b))&lt;/code&gt; 場合 &lt;code&gt;a&lt;/code&gt; 2つのfloat要素aと &lt;code&gt;b&lt;/code&gt; が等しいと見なします。（Float.isNaN（a）&amp;amp;&amp;amp; Float.isNaN（b））。&lt;a href=&quot;../lang/float#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Float.equals(Object)&lt;/code&gt; &lt;/a&gt;とは異なり、値 &lt;code&gt;-0.0&lt;/code&gt; と &lt;code&gt;+0.0&lt;/code&gt; は等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="f1be5e53cf7d411a8147d01132ffbb087dc37403" translate="yes" xml:space="preserve">
          <source>The two serialization-related fields are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97983c767ff42d4647c2b3d8afd3922e461ec55b" translate="yes" xml:space="preserve">
          <source>The type</source>
          <target state="translated">タイプ</target>
        </trans-unit>
        <trans-unit id="8ac14b02e6f129743d1f8a28d779dc984a66b294" translate="yes" xml:space="preserve">
          <source>The type &lt;code&gt;T&lt;/code&gt; may be either a primitive or reference. Since type &lt;code&gt;Iterator&amp;lt;T&amp;gt;&lt;/code&gt; is erased in the method handle representation to the raw type &lt;code&gt;Iterator&lt;/code&gt;, the &lt;code&gt;iteratedLoop&lt;/code&gt; combinator adjusts the leading argument type for &lt;code&gt;body&lt;/code&gt; to &lt;code&gt;Object&lt;/code&gt; as if by the &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt; conversion method. Therefore, if an iterator of the wrong type appears as the loop is executed, runtime exceptions may occur as the result of dynamic conversions performed by &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;MethodHandle.asType(MethodType)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The type &lt;code&gt;T&lt;/code&gt; may be either a primitive or reference. Since type &lt;code&gt;Iterator&amp;lt;T&amp;gt;&lt;/code&gt; is erased in the method handle representation to the raw type &lt;code&gt;Iterator&lt;/code&gt; , the &lt;code&gt;iteratedLoop&lt;/code&gt; combinator adjusts the leading argument type for &lt;code&gt;body&lt;/code&gt; to &lt;code&gt;Object&lt;/code&gt; as if by the &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt; conversion method. Therefore, if an iterator of the wrong type appears as the loop is executed, runtime exceptions may occur as the result of dynamic conversions performed by &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;MethodHandle.asType(MethodType)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4d9c3e5a2e1ee1b8623092bbd4a2ad433a0d8102" translate="yes" xml:space="preserve">
          <source>The type and behavior of the adapter will be the same as the type and behavior of the target, except that certain &lt;code&gt;invoke&lt;/code&gt; and &lt;code&gt;asType&lt;/code&gt; requests can lead to trailing positional arguments being collected into target's trailing parameter. Also, the &lt;a href=&quot;methodtype#lastParameterType()&quot;&gt;last parameter type&lt;/a&gt; of the adapter will be &lt;code&gt;arrayType&lt;/code&gt;, even if the target has a different last parameter type.</source>
          <target state="translated">The type and behavior of the adapter will be the same as the type and behavior of the target, except that certain &lt;code&gt;invoke&lt;/code&gt; and &lt;code&gt;asType&lt;/code&gt; requests can lead to trailing positional arguments being collected into target's trailing parameter. Also, the &lt;a href=&quot;methodtype#lastParameterType()&quot;&gt;last parameter type&lt;/a&gt; of the adapter will be &lt;code&gt;arrayType&lt;/code&gt; , even if the target has a different last parameter type.</target>
        </trans-unit>
        <trans-unit id="c0ea19c65ec77bbed855a0ec57d24fe61a6f3cfc" translate="yes" xml:space="preserve">
          <source>The type and behavior of the adapter will be the same as the type and behavior of the target, except that certain &lt;code&gt;invoke&lt;/code&gt; and &lt;code&gt;asType&lt;/code&gt; requests can lead to trailing positional arguments being collected into target's trailing parameter. Also, the last parameter type of the adapter will be &lt;code&gt;arrayType&lt;/code&gt;, even if the target has a different last parameter type.</source>
          <target state="translated">アダプターのタイプと動作はターゲットのタイプと動作と同じですが、特定の &lt;code&gt;invoke&lt;/code&gt; 要求と &lt;code&gt;asType&lt;/code&gt; 要求により、末尾の位置引数がターゲットの末尾パラメーターに収集される可能性がある点が異なります。また、ターゲットの最後のパラメータータイプが異なる場合でも、アダプターの最後のパラメータータイプは &lt;code&gt;arrayType&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="b9274643a3bf4ca4addb78cb6a98b74268f87044" translate="yes" xml:space="preserve">
          <source>The type and encodings are described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#certificatefactory-types&quot;&gt; CertificateFactory section&lt;/a&gt; and the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#certpath-encodings&quot;&gt; CertPath Encodings section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other types or encodings are supported.</source>
          <target state="translated">The type and encodings are described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#certificatefactory-types&quot;&gt; CertificateFactory section&lt;/a&gt; and the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#certpath-encodings&quot;&gt; CertPath Encodings section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other types or encodings are supported.</target>
        </trans-unit>
        <trans-unit id="c960b0be4588b06d03016cec1d59c31e1a26ee1a" translate="yes" xml:space="preserve">
          <source>The type and encodings are described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/security/standard-names.html#certificatefactory-types&quot;&gt; CertificateFactory section&lt;/a&gt; and the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/security/standard-names.html#certpath-encodings&quot;&gt; CertPath Encodings section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other types or encodings are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6bb0cadf07db39ec6be40e5dae1eed885b4134" translate="yes" xml:space="preserve">
          <source>The type and encodings are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertificateFactory&quot;&gt; CertificateFactory section&lt;/a&gt; and the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathEncodings&quot;&gt; CertPath Encodings section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other types or encodings are supported.</source>
          <target state="translated">タイプとエンコーディングについては、Java暗号化アーキテクチャ標準アルゴリズム名のドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertificateFactory&quot;&gt;CertificateFactoryセクション&lt;/a&gt;と&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathEncodings&quot;&gt;CertPathエンコーディングセクション&lt;/a&gt;で説明しています。他のタイプまたはエンコーディングがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="c6b186bc7aea698445dc40383caf4bf30781283e" translate="yes" xml:space="preserve">
          <source>The type associated with all custom cursors.</source>
          <target state="translated">すべてのカスタムカーソルに関連付けられたタイプ。</target>
        </trans-unit>
        <trans-unit id="f5ec1e2d57fb1bd044b7c12346c65a90e63ab2a6" translate="yes" xml:space="preserve">
          <source>The type associated with non-object values in a target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5acfd55f75f81b438121d9164a5ebdf07b1e583" translate="yes" xml:space="preserve">
          <source>The type associated with non-object values in a target VM. Instances of one of the sub-interfaces of this interface will be returned from &lt;a href=&quot;value#type()&quot;&gt;&lt;code&gt;Value.type()&lt;/code&gt;&lt;/a&gt; for all &lt;a href=&quot;primitivevalue&quot;&gt;&lt;code&gt;PrimitiveValue&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948a046cc2e5aa5046c9417d1490884dfdc604b8" translate="yes" xml:space="preserve">
          <source>The type can be used to identify what type of setting this is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0aad1afcd781464b76996d424e8348249f28ac" translate="yes" xml:space="preserve">
          <source>The type fingerprint that is set to indicate serialization compatibility with a previous version of the type.</source>
          <target state="translated">以前のバージョンの型とのシリアライズ互換性を示すために設定されている型のフィンガープリント。</target>
        </trans-unit>
        <trans-unit id="93dbc281a6a1652e30aac933243bf7afad98e3d0" translate="yes" xml:space="preserve">
          <source>The type information associated with this attribute.</source>
          <target state="translated">この属性に関連付けられた型情報。</target>
        </trans-unit>
        <trans-unit id="6035b72b31597b588131e4a84cda217fb3253aca" translate="yes" xml:space="preserve">
          <source>The type information associated with this attribute. While the type information contained in this attribute is guarantee to be correct after loading the document or invoking &lt;code&gt;Document.normalizeDocument()&lt;/code&gt;, &lt;code&gt;schemaTypeInfo&lt;/code&gt; may not be reliable if the node was moved.</source>
          <target state="translated">The type information associated with this attribute. While the type information contained in this attribute is guarantee to be correct after loading the document or invoking &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; , &lt;code&gt;schemaTypeInfo&lt;/code&gt; may not be reliable if the node was moved.</target>
        </trans-unit>
        <trans-unit id="e61ac73041fcfd164a7302e03c2c4eb5aa4c9644" translate="yes" xml:space="preserve">
          <source>The type information associated with this element.</source>
          <target state="translated">この要素に関連付けられた型情報。</target>
        </trans-unit>
        <trans-unit id="47aacc9e53df6990e6cd21e34ac8f46081f60e02" translate="yes" xml:space="preserve">
          <source>The type is a &lt;code&gt;String&lt;/code&gt; that identifies the type of &lt;code&gt;Certificate&lt;/code&gt;s in the certification path. For each certificate &lt;code&gt;cert&lt;/code&gt; in a certification path &lt;code&gt;certPath&lt;/code&gt;, &lt;code&gt;cert.getType().equals(certPath.getType())&lt;/code&gt; must be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">タイプは、証明書パス内の &lt;code&gt;Certificate&lt;/code&gt; のタイプを識別する &lt;code&gt;String&lt;/code&gt; です。証明書パス &lt;code&gt;certPath&lt;/code&gt; 内の証明書証明 &lt;code&gt;cert&lt;/code&gt; ごとに、 &lt;code&gt;cert.getType().equals(certPath.getType())&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="3992f3a6c4f1b89ac824af3b12e6534482315701" translate="yes" xml:space="preserve">
          <source>The type is an interface type and not an annotation type, enum, or class.</source>
          <target state="translated">この型はインターフェイス型であり、注釈型、列挙型、クラスではありません。</target>
        </trans-unit>
        <trans-unit id="e26cf268f40425be61bd9fa65b49f0d6fe506153" translate="yes" xml:space="preserve">
          <source>The type name corresponding to the supplied type constant.</source>
          <target state="translated">与えられた型定数に対応する型名。</target>
        </trans-unit>
        <trans-unit id="dbbee8087c3ba28222fa95426623818374828807" translate="yes" xml:space="preserve">
          <source>The type of &lt;a href=&quot;processbuilder.redirect#INHERIT&quot;&gt;&lt;code&gt;Redirect.INHERIT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect#INHERIT&quot;&gt; &lt;code&gt;Redirect.INHERIT&lt;/code&gt; &lt;/a&gt;のタイプ。</target>
        </trans-unit>
        <trans-unit id="c0ad9640a3999591dd1d2029f7ecfcb72b0d98b2" translate="yes" xml:space="preserve">
          <source>The type of &lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt;&lt;code&gt;Redirect.PIPE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt; &lt;code&gt;Redirect.PIPE&lt;/code&gt; &lt;/a&gt;のタイプ。</target>
        </trans-unit>
        <trans-unit id="e8d2db58ec658df2f7f6c171781a38ba46c53399" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;JOIN&lt;/code&gt; to be established is determined by setting one of the &lt;code&gt;JoinRowSet&lt;/code&gt; constants using the method &lt;code&gt;setJoinType&lt;/code&gt;. The following SQL &lt;code&gt;JOIN&lt;/code&gt; types can be set:</source>
          <target state="translated">The type of &lt;code&gt;JOIN&lt;/code&gt; to be established is determined by setting one of the &lt;code&gt;JoinRowSet&lt;/code&gt; constants using the method &lt;code&gt;setJoinType&lt;/code&gt; . The following SQL &lt;code&gt;JOIN&lt;/code&gt; types can be set:</target>
        </trans-unit>
        <trans-unit id="f56f95d6997ec10a60d61b49368aad5c85b0c93d" translate="yes" xml:space="preserve">
          <source>The type of MIDI file.</source>
          <target state="translated">MIDIファイルの種類。</target>
        </trans-unit>
        <trans-unit id="127e2dcfa435659f04a5c90d26c476f9ace2f0e1" translate="yes" xml:space="preserve">
          <source>The type of a &lt;a href=&quot;processbuilder.redirect&quot;&gt;&lt;code&gt;ProcessBuilder.Redirect&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect&quot;&gt; &lt;code&gt;ProcessBuilder.Redirect&lt;/code&gt; &lt;/a&gt;のタイプ。</target>
        </trans-unit>
        <trans-unit id="19a111fbf1a4085482090a96e6a31a6562e4dbf5" translate="yes" xml:space="preserve">
          <source>The type of a metric, one of the strings &quot;counter&quot; or &quot;gauge&quot;. A metric is a measurement exported by an MBean, usually an attribute but sometimes the result of an operation. A metric that is a &lt;em&gt;counter&lt;/em&gt; has a value that never decreases except by being reset to a starting value. Counter metrics are almost always non-negative integers. An example might be the number of requests received. A metric that is a &lt;em&gt;gauge&lt;/em&gt; has a numeric value that can increase or decrease. Examples might be the number of open connections or a cache hit rate or a temperature reading.</source>
          <target state="translated">指標のタイプ。文字列「counter」または「gauge」のいずれか。メトリックは、MBeanによってエクスポートされる測定値であり、通常は属性ですが、操作の結果である場合もあります。&lt;em&gt;カウンタである&lt;/em&gt;メトリックには、開始値にリセットされることを除いて、決して減少しない値があります。カウンタメトリックは、ほとんどの場合、負でない整数です。たとえば、受け取ったリクエストの数などです。&lt;em&gt;ゲージである&lt;/em&gt;メトリックには、増減できる数値があります。たとえば、開いている接続の数、キャッシュヒット率、温度の読み取り値などです。</target>
        </trans-unit>
        <trans-unit id="9bdd7b2e326fdca9bef79c30949c6c05c7225058" translate="yes" xml:space="preserve">
          <source>The type of all primitive &lt;code&gt;boolean&lt;/code&gt; values accessed in the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c0284ee53aa32fc7cc5dfed6c7c451654a8d85" translate="yes" xml:space="preserve">
          <source>The type of all primitive &lt;code&gt;boolean&lt;/code&gt; values accessed in the target VM. Calls to &lt;a href=&quot;value#type()&quot;&gt;&lt;code&gt;Value.type()&lt;/code&gt;&lt;/a&gt; will return an implementor of this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61964dfa1885c621370889e4999f6e08cf250877" translate="yes" xml:space="preserve">
          <source>The type of all primitive &lt;code&gt;int&lt;/code&gt; values accessed in the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df58578877a7f7dbce54efa73e93ac7e75d5bad8" translate="yes" xml:space="preserve">
          <source>The type of all primitive &lt;code&gt;int&lt;/code&gt; values accessed in the target VM. Calls to &lt;a href=&quot;value#type()&quot;&gt;&lt;code&gt;Value.type()&lt;/code&gt;&lt;/a&gt; will return an implementor of this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540e4e17c597fd8292e4c9cec5a4edcffb94495f" translate="yes" xml:space="preserve">
          <source>The type of all primitive &lt;code&gt;long&lt;/code&gt; values accessed in the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905055b2779123645085eb861a2cc95d9d467c93" translate="yes" xml:space="preserve">
          <source>The type of all primitive &lt;code&gt;long&lt;/code&gt; values accessed in the target VM. Calls to &lt;a href=&quot;value#type()&quot;&gt;&lt;code&gt;Value.type()&lt;/code&gt;&lt;/a&gt; will return an implementor of this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe183d2466ca0d9c323125274002bdc3684a996" translate="yes" xml:space="preserve">
          <source>The type of all primitive &lt;code&gt;short&lt;/code&gt; values accessed in the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27bac7cb7202d232d582730bb8128c9202fe730" translate="yes" xml:space="preserve">
          <source>The type of all primitive &lt;code&gt;short&lt;/code&gt; values accessed in the target VM. Calls to &lt;a href=&quot;value#type()&quot;&gt;&lt;code&gt;Value.type()&lt;/code&gt;&lt;/a&gt; will return an implementor of this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6e4400fd88a4a31267dd38c5778ce3336b5d8f" translate="yes" xml:space="preserve">
          <source>The type of all primitive &lt;code&gt;void&lt;/code&gt; values accessed in the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e8deceef0c508dcd94caaf941dc08a19f880247" translate="yes" xml:space="preserve">
          <source>The type of all primitive &lt;code&gt;void&lt;/code&gt; values accessed in the target VM. Calls to &lt;a href=&quot;value#type()&quot;&gt;&lt;code&gt;Value.type()&lt;/code&gt;&lt;/a&gt; will return an implementor of this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064a8cadc8286a472d0e81121b860e5de44daf4c" translate="yes" xml:space="preserve">
          <source>The type of all primitive byte values accessed in the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae99e2407df532833b4bd5daeb55032fa42beb46" translate="yes" xml:space="preserve">
          <source>The type of all primitive byte values accessed in the target VM. Calls to &lt;a href=&quot;value#type()&quot;&gt;&lt;code&gt;Value.type()&lt;/code&gt;&lt;/a&gt; will return an implementor of this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e0aeccb527adb41cb0da6e5249975d3c490234" translate="yes" xml:space="preserve">
          <source>The type of all primitive char values accessed in the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6505cada2a662701f19d4d5b5ed6715d542e253b" translate="yes" xml:space="preserve">
          <source>The type of all primitive char values accessed in the target VM. Calls to &lt;a href=&quot;value#type()&quot;&gt;&lt;code&gt;Value.type()&lt;/code&gt;&lt;/a&gt; will return an implementor of this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a550f71331e0769b5e400814607f0b7218fb9579" translate="yes" xml:space="preserve">
          <source>The type of all primitive double values accessed in the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f868aa8134d4079e3a5bb9f64d8a717ef59780" translate="yes" xml:space="preserve">
          <source>The type of all primitive double values accessed in the target VM. Calls to &lt;a href=&quot;value#type()&quot;&gt;&lt;code&gt;Value.type()&lt;/code&gt;&lt;/a&gt; will return an implementor of this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee2eff2ed053ff8cac89c091400e52718845455" translate="yes" xml:space="preserve">
          <source>The type of all primitive float values accessed in the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47dc858648622dee41077cbdcfdfdc492c80e8b4" translate="yes" xml:space="preserve">
          <source>The type of all primitive float values accessed in the target VM. Calls to &lt;a href=&quot;value#type()&quot;&gt;&lt;code&gt;Value.type()&lt;/code&gt;&lt;/a&gt; will return an implementor of this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba2fcd15e0e72b34634a1ad0bba84c84df1612c" translate="yes" xml:space="preserve">
          <source>The type of an object in a target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4256095924998c735a5e1d2daf580e5257830be" translate="yes" xml:space="preserve">
          <source>The type of an object in a target VM. ReferenceType encompasses classes, interfaces, and array types as defined in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9929588d4e4b50c57d34e2768c1aa928a93bbe18" translate="yes" xml:space="preserve">
          <source>The type of an object never changes, so this method will always return the same ReferenceType over the lifetime of the mirrored object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae47c02e32deee2491afe6629f2f876ddd99027" translate="yes" xml:space="preserve">
          <source>The type of button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3202c961e86ba8f5916fcea0584ce2db39729f98" translate="yes" xml:space="preserve">
          <source>The type of button. See the type attribute definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b375eaf7b30c62522b5218a46c4f14ba523d62" translate="yes" xml:space="preserve">
          <source>The type of control created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bffc95d4cc2bec8109d90b097c24da8daf3af0d5" translate="yes" xml:space="preserve">
          <source>The type of control created. See the type attribute definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516804b0e5437ce278d19350e7c4ad6ec7d75a1d" translate="yes" xml:space="preserve">
          <source>The type of etch to be drawn by the border.</source>
          <target state="translated">ボーダーで描くエッチの種類。</target>
        </trans-unit>
        <trans-unit id="a72a6dcb29c4761d0c066bb8800e0746542672cb" translate="yes" xml:space="preserve">
          <source>The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#appendTo(java.io.File)&quot;&gt;&lt;code&gt;Redirect.appendTo(File)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#appendTo(java.io.File)&quot;&gt; &lt;code&gt;Redirect.appendTo(File)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="aa5066ac5677ba94a729db439698f3123b5e4800" translate="yes" xml:space="preserve">
          <source>The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#appendTo-java.io.File-&quot;&gt;&lt;code&gt;Redirect.appendTo(File)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect#appendTo-java.io.File-&quot;&gt; &lt;code&gt;Redirect.appendTo(File)&lt;/code&gt; &lt;/a&gt;から返されるリダイレクトのタイプ。</target>
        </trans-unit>
        <trans-unit id="3a8c1186e5832691f4a75427966c37b78296c9e6" translate="yes" xml:space="preserve">
          <source>The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#from(java.io.File)&quot;&gt;&lt;code&gt;Redirect.from(File)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#from(java.io.File)&quot;&gt; &lt;code&gt;Redirect.from(File)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b6c13fdf29d3471638747b7836301b890025ac8d" translate="yes" xml:space="preserve">
          <source>The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#from-java.io.File-&quot;&gt;&lt;code&gt;Redirect.from(File)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect#from-java.io.File-&quot;&gt; &lt;code&gt;Redirect.from(File)&lt;/code&gt; &lt;/a&gt;から返されるリダイレクトのタイプ。</target>
        </trans-unit>
        <trans-unit id="23b43930e30ca0b29892d575065e9b7d29d48983" translate="yes" xml:space="preserve">
          <source>The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#to(java.io.File)&quot;&gt;&lt;code&gt;Redirect.to(File)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#to(java.io.File)&quot;&gt; &lt;code&gt;Redirect.to(File)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1b7eaaee0ed7fe469cb15b4032d95ee3779bbd61" translate="yes" xml:space="preserve">
          <source>The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#to-java.io.File-&quot;&gt;&lt;code&gt;Redirect.to(File)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect#to-java.io.File-&quot;&gt; &lt;code&gt;Redirect.to(File)&lt;/code&gt; &lt;/a&gt;から返されるリダイレクトのタイプ。</target>
        </trans-unit>
        <trans-unit id="62d360876f66c4619f7a66dbb6e3f42e2c3d1fb3" translate="yes" xml:space="preserve">
          <source>The type of the call site is permanently set to the given type.</source>
          <target state="translated">コールサイトのタイプは、与えられたタイプに恒久的に設定されます。</target>
        </trans-unit>
        <trans-unit id="84d0df6847a2c34f170737cbf47a403351061610" translate="yes" xml:space="preserve">
          <source>The type of the context is implementation-dependent. If the value is null, the operation must have no dependency on the context, otherwise an XPathExpressionException will be thrown. For the purposes of evaluating XPath expressions, a DocumentFragment is treated like a Document node.</source>
          <target state="translated">コンテキストの型は実装に依存します。値が NULL の場合、操作はコンテキストに依存していない必要があり、そうでない場合は XPathExpressionException がスローされます。XPath 式を評価する目的で、DocumentFragment は Document ノードと同じように扱われます。</target>
        </trans-unit>
        <trans-unit id="85c774280ae0c09e2cb54be7281c7ab8c6b5e39a" translate="yes" xml:space="preserve">
          <source>The type of the context is usually &lt;a href=&quot;../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The type of the context is usually &lt;a href=&quot;../../../org/w3c/dom/node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0f38c67fdfb625338235f720fe145ed3f504d4e9" translate="yes" xml:space="preserve">
          <source>The type of the entity requesting authentication.</source>
          <target state="translated">認証を要求するエンティティのタイプ。</target>
        </trans-unit>
        <trans-unit id="c4ac73bf470d2de540cc66c6d49c584580982b87" translate="yes" xml:space="preserve">
          <source>The type of the entity.</source>
          <target state="translated">エンティティのタイプ。</target>
        </trans-unit>
        <trans-unit id="978109c7e8978b8fd7fbcdabcf48636f10ce3310" translate="yes" xml:space="preserve">
          <source>The type of the event.</source>
          <target state="translated">イベントの種類。</target>
        </trans-unit>
        <trans-unit id="9ab22e6a2b3ffe5a533cebd7300418770c8847b5" translate="yes" xml:space="preserve">
          <source>The type of the invocation is &lt;code&gt;(sourceType)&amp;rarr;targetType&lt;/code&gt;, while the type of the guard is &lt;code&gt;(sourceType)&amp;rarr;boolean&lt;/code&gt;. You are allowed to return unconditional invocations (with no guard) if the source type is specific to your runtime and your runtime only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4fa5abe5b635270fa3ad327c2907ed1099d6b46" translate="yes" xml:space="preserve">
          <source>The type of the method at the call site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a0aedd8679b410dfd61aa7d127e3dcd930c83d" translate="yes" xml:space="preserve">
          <source>The type of the new method handle will drop the types for the bound parameters from the original target type, since the new method handle will no longer require those arguments to be supplied by its callers.</source>
          <target state="translated">新しいメソッドハンドルの型は、元のターゲット型からバインドされたパラメータの型を削除します。</target>
        </trans-unit>
        <trans-unit id="8627cf93d9b68632081d77f43eec00b2a809ba9f" translate="yes" xml:space="preserve">
          <source>The type of the new target must be &lt;a href=&quot;methodtype#equals(java.lang.Object)&quot;&gt;equal to&lt;/a&gt; the type of the old target.</source>
          <target state="translated">The type of the new target must be &lt;a href=&quot;methodtype#equals(java.lang.Object)&quot;&gt;equal to&lt;/a&gt; the type of the old target.</target>
        </trans-unit>
        <trans-unit id="689485c1e5985a3231bd5ec529f55e5aa04a546f" translate="yes" xml:space="preserve">
          <source>The type of the new target must be &lt;a href=&quot;methodtype#equals-java.lang.Object-&quot;&gt;equal to&lt;/a&gt; the type of the old target.</source>
          <target state="translated">新しいターゲットのタイプは、古いターゲットのタイプと&lt;a href=&quot;methodtype#equals-java.lang.Object-&quot;&gt;同じで&lt;/a&gt;なければなりません。</target>
        </trans-unit>
        <trans-unit id="7259f8962518221961d6182316892012315276e5" translate="yes" xml:space="preserve">
          <source>The type of the notification emitted by a &lt;code&gt;GarbageCollectorMXBean&lt;/code&gt; is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a890ec2d11b23f48d0302a6f1ff678bb8116b7db" translate="yes" xml:space="preserve">
          <source>The type of the observed attribute is not correct.</source>
          <target state="translated">観測された属性の型が正しくありません。</target>
        </trans-unit>
        <trans-unit id="b3c3fe93c6de3b710c55d464afb4edc07007d62c" translate="yes" xml:space="preserve">
          <source>The type of the parameter. The returned String is the name of a type recognized by the diagnostic command parser. These types are not Java types and are implementation dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37d7b8236ac8a0ff81b6ebd996e68b65203530e" translate="yes" xml:space="preserve">
          <source>The type of the returned invoker will not be the given &lt;code&gt;type&lt;/code&gt;, but rather will have all parameters except the first &lt;code&gt;leadingArgCount&lt;/code&gt; replaced by a single array of type &lt;code&gt;Object[]&lt;/code&gt;, which will be the final parameter.</source>
          <target state="translated">返される呼び出し側の型は、指定された &lt;code&gt;type&lt;/code&gt; ではなく、最初の &lt;code&gt;leadingArgCount&lt;/code&gt; を除くすべてのパラメーターが、最後のパラメーターとなる &lt;code&gt;Object[]&lt;/code&gt; 型の単一の配列に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="c364889480a81b2fc9121ce49a5a01a2d66a67ce" translate="yes" xml:space="preserve">
          <source>The type of the rule, as defined above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbe8a1006a6e312de225e872d5b23409437bdf2" translate="yes" xml:space="preserve">
          <source>The type of the rule, as defined above. The expectation is that binding-specific casting methods can be used to cast down from an instance of the &lt;code&gt;CSSRule&lt;/code&gt; interface to the specific derived interface implied by the &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a94904f73be82548909cb1a0373fbdd3612118" translate="yes" xml:space="preserve">
          <source>The type of the value as defined by the constants specified above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3713b00b65f5a644a274c8162bd2331606919143" translate="yes" xml:space="preserve">
          <source>The type of this event.</source>
          <target state="translated">このイベントの種類。</target>
        </trans-unit>
        <trans-unit id="0989077c0348877c3be91687a3e0d4d6bbe2d1a9" translate="yes" xml:space="preserve">
          <source>The type of this form control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7d64890e45fcb307183277dbb8d511b2dfb3e3" translate="yes" xml:space="preserve">
          <source>The type of this form control. This is the string &quot;select-multiple&quot; when the multiple attribute is &lt;code&gt;true&lt;/code&gt; and the string &quot;select-one&quot; when &lt;code&gt;false&lt;/code&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db57b7b46e5a783ea336a363901e429b56acf3d8" translate="yes" xml:space="preserve">
          <source>The type of this form control. This the string &quot;textarea&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1453673787a1d4f22a54ec78d24c607a777481d0" translate="yes" xml:space="preserve">
          <source>The type of this provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb86a4d23b927b4d7779a5f3229d3b046c17f0c" translate="yes" xml:space="preserve">
          <source>The types are compared for equality with their case ignored.</source>
          <target state="translated">型は、大文字小文字を無視して等しくなるように比較されます。</target>
        </trans-unit>
        <trans-unit id="59391c7d69614504e0086f4dff6684db3e9ee2b5" translate="yes" xml:space="preserve">
          <source>The types of notifications emitted by &lt;code&gt;MemoryMXBean&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;MemoryMXBean&lt;/code&gt; によって発行される通知のタイプは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="444baca227e7a21fbc93ead1d887a79a164df63b" translate="yes" xml:space="preserve">
          <source>The typical language value is a two or three-letter language code as defined in ISO639.</source>
          <target state="translated">典型的な言語値は、ISO639で定義されている2文字または3文字の言語コードです。</target>
        </trans-unit>
        <trans-unit id="1e7cf956c9a56e2714ac4e67a566ab0ae200ecce" translate="yes" xml:space="preserve">
          <source>The typical life-cycle of a HttpExchange is shown in the sequence below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c660145e6f646b3735ac4f7205ca9ace38822eb" translate="yes" xml:space="preserve">
          <source>The typical region value is a two-letter ISO 3166 code or a three-digit UN M.49 area code.</source>
          <target state="translated">典型的な地域値は、2文字のISO3166コードまたは3桁のUN M.49エリアコードです。</target>
        </trans-unit>
        <trans-unit id="17cdcc250877b85946cb955da511369645e967cc" translate="yes" xml:space="preserve">
          <source>The typical script value is a four-letter script code as defined by ISO 15924.</source>
          <target state="translated">典型的なスクリプト値は、ISO 15924で定義されている4文字のスクリプトコードです。</target>
        </trans-unit>
        <trans-unit id="e493e7eb7efdddc83f3fbdc66df8a51d56849ee7" translate="yes" xml:space="preserve">
          <source>The underline affects both the visual bounds and the outline of the text.</source>
          <target state="translated">下線は、視覚的な境界線とテキストのアウトラインの両方に影響を与えます。</target>
        </trans-unit>
        <trans-unit id="20b0ef642374b714b39ebc2873baf17c5b426b78" translate="yes" xml:space="preserve">
          <source>The underlying &lt;code&gt;BoundedRangeModel&lt;/code&gt; handles any mathematical issues arising from assigning faulty values. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</source>
          <target state="translated">The underlying &lt;code&gt;BoundedRangeModel&lt;/code&gt; handles any mathematical issues arising from assigning faulty values. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</target>
        </trans-unit>
        <trans-unit id="6549bcf9f7282eeb1f28dc2642a65415a4279869" translate="yes" xml:space="preserve">
          <source>The underlying SSL parameters may be established either via the set/get methods of this class, or else via a &lt;a href=&quot;../../../../../java.base/javax/net/ssl/sslparameters&quot;&gt;&lt;code&gt;SSLParameters&lt;/code&gt;&lt;/a&gt; object. SSLParameters is the preferred method, because in the future, additional configuration capabilities may be added to that class, and it is easier to determine the set of supported parameters and their default values with SSLParameters. Also, if an SSLParameters object is provided via &lt;a href=&quot;#setSSLParameters(javax.net.ssl.SSLParameters)&quot;&gt;&lt;code&gt;setSSLParameters(SSLParameters)&lt;/code&gt;&lt;/a&gt; then those parameter settings are used, and any settings made in this object are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121414ae83882d6978c3061ae2ccaf0b4cd3a7f5" translate="yes" xml:space="preserve">
          <source>The underlying character-input stream.</source>
          <target state="translated">下位の文字入力ストリーム。</target>
        </trans-unit>
        <trans-unit id="66e9f85ce07195fbd2dc5d2f06d3273076e5b33d" translate="yes" xml:space="preserve">
          <source>The underlying character-output stream of this &lt;code&gt;PrintWriter&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;PrintWriter&lt;/code&gt; の基本となる文字出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="997090c1014b7704de737ddf5326441d3f6eab7d" translate="yes" xml:space="preserve">
          <source>The underlying character-output stream.</source>
          <target state="translated">下位の文字出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="48e3e0bfbed1be484de7c256629bbfc344226e62" translate="yes" xml:space="preserve">
          <source>The underlying field's value is obtained as follows:</source>
          <target state="translated">基礎となるフィールドの値は、以下のようにして得られます。</target>
        </trans-unit>
        <trans-unit id="6b7dedd2916acda5e4ddd9bf5218b5756a52e4ca" translate="yes" xml:space="preserve">
          <source>The underlying memory used by the &lt;code&gt;src&lt;/code&gt; and &lt;code&gt;dsts ByteBuffer&lt;/code&gt;s must not be the same.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; と &lt;code&gt;dsts ByteBuffer&lt;/code&gt; 使用する基本メモリは同じであってはなりません。</target>
        </trans-unit>
        <trans-unit id="028d275e77138b148a731ed31ec7168887398dc7" translate="yes" xml:space="preserve">
          <source>The underlying memory used by the &lt;code&gt;srcs&lt;/code&gt; and &lt;code&gt;dst ByteBuffer&lt;/code&gt;s must not be the same.</source>
          <target state="translated">&lt;code&gt;srcs&lt;/code&gt; と &lt;code&gt;dst ByteBuffer&lt;/code&gt; によって使用される基本メモリは同じであってはなりません。</target>
        </trans-unit>
        <trans-unit id="b2dd44c58a8235d0ae8f513f91b8369937ea3aba" translate="yes" xml:space="preserve">
          <source>The underlying operating system is queried for an update as to the readiness of each remaining channel to perform any of the operations identified by its key's interest set as of the moment that the selection operation began.</source>
          <target state="translated">基盤となるオペレーティングシステムは、選択操作が開始された時点で、残りの各チャネルがそのキーのインタレストセットによって特定された操作のいずれかを実行する準備ができているかどうかを更新するために照会される。</target>
        </trans-unit>
        <trans-unit id="8bcc6a3ebcd69bf1c22f30e41fee2405130dbb8f" translate="yes" xml:space="preserve">
          <source>The underlying operating system is queried for an update as to the readiness of each remaining channel to perform any of the operations identified by its key's interest set as of the moment that the selection operation began. For a channel that is ready for at least one such operation, one of the following two actions is performed:</source>
          <target state="translated">基底となるオペレーティングシステムは、選択操作が開始された時点で、残りの各チャネルがそのキーのインタレストセットによって特定された操作のいずれかを実行する準備ができているかどうかを更新するために照会される。少なくとも1つの操作の準備ができているチャネルについては、以下の2つのアクションのうちの1つが実行される。</target>
        </trans-unit>
        <trans-unit id="5fac40f1f061f6b657772e9f893915f23de48bf5" translate="yes" xml:space="preserve">
          <source>The underlying output stream to be filtered.</source>
          <target state="translated">フィルタリングされる基礎となる出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="1a5764b11a39a7b859946ca022bc7546c2758d6c" translate="yes" xml:space="preserve">
          <source>The underlying signing algorithm is designated by the Signature object passed to the constructor and the &lt;code&gt;verify&lt;/code&gt; method. A typical usage for signing is the following:</source>
          <target state="translated">基本となる署名アルゴリズムは、コンストラクタに渡されたSignatureオブジェクトと &lt;code&gt;verify&lt;/code&gt; メソッドによって指定されます。署名の一般的な使用法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1a0c62e15b608a731329638c7175e259e5b752ff" translate="yes" xml:space="preserve">
          <source>The underscore character &lt;code&gt;'_'&lt;/code&gt; (&lt;code&gt;'\u005f'&lt;/code&gt;, &lt;small&gt;LOW LINE&lt;/small&gt;).</source>
          <target state="translated">アンダースコア文字 &lt;code&gt;'_'&lt;/code&gt; （ &lt;code&gt;'\u005f'&lt;/code&gt; 、&lt;small&gt;LOW LINE&lt;/small&gt;）。</target>
        </trans-unit>
        <trans-unit id="7c1ffa4ad50bf6adcf296f52ce5cec96c22f7318" translate="yes" xml:space="preserve">
          <source>The undo/redo presentation name</source>
          <target state="translated">元に戻す/やり直しのプレゼンテーション名</target>
        </trans-unit>
        <trans-unit id="c48b40a9584e8f5d48650d23e68347fe38a9dee0" translate="yes" xml:space="preserve">
          <source>The union filter operation.</source>
          <target state="translated">ユニオンフィルタの操作です。</target>
        </trans-unit>
        <trans-unit id="362e82993b25d36e57cda3f0236e2391a9c64582" translate="yes" xml:space="preserve">
          <source>The unique identifier for the snippet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57c4ef8ebd26949b03722f01f84db84a1628627" translate="yes" xml:space="preserve">
          <source>The unique identifier for the snippet. No two active snippets will have the same id(). Value of id has no prescribed meaning. The details of how the id is generated and the mechanism to change it is documented in &lt;a href=&quot;jshell.builder#idGenerator(java.util.function.BiFunction)&quot;&gt;&lt;code&gt;JShell.Builder.idGenerator(BiFunction)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8e2e49e14966e85af22f11acfb1faafb28a7dc" translate="yes" xml:space="preserve">
          <source>The unique name of this &lt;code&gt;ExecutionControlProvider&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bdfcdd211ddc74b0f508ef9270b895cf9a13b87" translate="yes" xml:space="preserve">
          <source>The unique name of this &lt;code&gt;ExecutionControlProvider&lt;/code&gt;. The name must be a sequence of characters from the Basic Multilingual Plane which are &lt;a href=&quot;../../../../java.base/java/lang/character#isJavaIdentifierPart(int)&quot;&gt;&lt;code&gt;Character.isJavaIdentifierPart(char)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae92f9fce61041c312223fede1e34d5be987d37" translate="yes" xml:space="preserve">
          <source>The uniquely named method is allowed to be multiply declared, with distinct type descriptors. (E.g., it can be overloaded, or can possess bridge methods.) All such declarations are connected directly to the target method handle. Argument and return types are adjusted by &lt;code&gt;asType&lt;/code&gt; for each individual declaration.</source>
          <target state="translated">一意に名前が付けられたメソッドは、異なる型記述子を使用して、複数宣言することができます。（たとえば、オーバーロードしたり、ブリッジメソッドを所有したりできます。）そのような宣言はすべて、ターゲットメソッドハンドルに直接接続されます。引数と戻り値の型は、個々の宣言の &lt;code&gt;asType&lt;/code&gt; によって調整されます。</target>
        </trans-unit>
        <trans-unit id="e2f80b55f26435dc0cbc6eebb8950484c5bf36aa" translate="yes" xml:space="preserve">
          <source>The unit decrement adjustment type.</source>
          <target state="translated">単位デクリメント調整タイプです。</target>
        </trans-unit>
        <trans-unit id="8e4fe19f8f0b8a705c06bdc855c9df43492e816b" translate="yes" xml:space="preserve">
          <source>The unit for the difference, measured in milliseconds, between the current time and midnight, January 1, 1970 UTC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbd65acfeebea3be9e24dee20e9983a3aa34936" translate="yes" xml:space="preserve">
          <source>The unit for the number of ticks that have transpired since some arbitrary starting date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52717aab8cd685857c2c2638d23ee7812a035e0d" translate="yes" xml:space="preserve">
          <source>The unit increment adjustment type.</source>
          <target state="translated">ユニットインクリメント調整タイプです。</target>
        </trans-unit>
        <trans-unit id="1c7bdb009b913ad14ea197d918b5e289949be56f" translate="yes" xml:space="preserve">
          <source>The unit increment is the value that is added or subtracted when the user activates the unit increment area of the scroll bar, generally through a mouse or keyboard gesture that the scroll bar receives as an adjustment event. The unit increment must be greater than zero.</source>
          <target state="translated">単位増分は、ユーザがスクロールバーの単位増分領域をアクティブにしたときに加算または減算される値であり、一般的には、スクロールバーが調整イベントとして受け取るマウスまたはキーボードのジェスチャーによって行われる。単位増分はゼロより大きくなければなりません。</target>
        </trans-unit>
        <trans-unit id="701b9e479da0e3a00cf653bd228ba4360e20dee1" translate="yes" xml:space="preserve">
          <source>The unit increment is the value that is added or subtracted when the user activates the unit increment area of the scroll bar, generally through a mouse or keyboard gesture that the scroll bar receives as an adjustment event. The unit increment must be greater than zero. Attempts to set the unit increment to a value lower than 1 will result in a value of 1 being set.</source>
          <target state="translated">単位増分は、ユーザがスクロールバーの単位増分領域をアクティブにしたときに加算または減算される値であり、一般的には、スクロールバーが調整イベントとして受け取るマウスまたはキーボードのジェスチャーによって行われる。単位増分はゼロより大きくなければなりません。単位増分を1よりも小さい値に設定しようとすると、1が設定されます。</target>
        </trans-unit>
        <trans-unit id="de9b1e61ecdfc95fda63a3a7e8d69c26ea6cf658" translate="yes" xml:space="preserve">
          <source>The unit must have a &lt;a href=&quot;temporal/temporalunit#getDuration()&quot;&gt;duration&lt;/a&gt; that divides into the length of a standard day without remainder. This includes all &lt;a href=&quot;temporal/chronounit#isTimeBased()&quot;&gt;time-based units on {@code ChronoUnit}&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt;. Other ChronoUnits throw an exception.</source>
          <target state="translated">The unit must have a &lt;a href=&quot;temporal/temporalunit#getDuration()&quot;&gt;duration&lt;/a&gt; that divides into the length of a standard day without remainder. This includes all &lt;a href=&quot;temporal/chronounit#isTimeBased()&quot;&gt;time-based units on {@code ChronoUnit}&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; &lt;/a&gt;. Other ChronoUnits throw an exception.</target>
        </trans-unit>
        <trans-unit id="234aa0f061723f0a03a2a6d208b3bc5bcf171626" translate="yes" xml:space="preserve">
          <source>The unit must have a &lt;a href=&quot;temporal/temporalunit#getDuration()&quot;&gt;duration&lt;/a&gt; that divides into the length of a standard day without remainder. This includes all supplied time units on &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt;. Other units throw an exception.</source>
          <target state="translated">The unit must have a &lt;a href=&quot;temporal/temporalunit#getDuration()&quot;&gt;duration&lt;/a&gt; that divides into the length of a standard day without remainder. This includes all supplied time units on &lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; &lt;/a&gt;. Other units throw an exception.</target>
        </trans-unit>
        <trans-unit id="5191f12612fb84b7bbf9829ac12d3dce772f7d2d" translate="yes" xml:space="preserve">
          <source>The unit must have a &lt;a href=&quot;temporal/temporalunit#getDuration--&quot;&gt;duration&lt;/a&gt; that divides into the length of a standard day without remainder. This includes all supplied time units on &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt;. Other units throw an exception.</source>
          <target state="translated">単位には、残りのない標準日の&lt;a href=&quot;temporal/temporalunit#getDuration--&quot;&gt;期間&lt;/a&gt;に分割される期間が必要です。これには、&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; で&lt;/a&gt;提供されるすべての時間単位が含まれます。他のユニットは例外をスローします。</target>
        </trans-unit>
        <trans-unit id="968e96267f6d7165d1ebba6675f71b714928a68b" translate="yes" xml:space="preserve">
          <source>The unit of structure (i.e. a node of the tree) is referred to by the &lt;a href=&quot;element&quot;&gt;Element&lt;/a&gt; interface. Each Element can be tagged with a set of attributes. These attributes (name/value pairs) are defined by the &lt;a href=&quot;attributeset&quot;&gt;AttributeSet&lt;/a&gt; interface.</source>
          <target state="translated">The unit of structure (i.e. a node of the tree) is referred to by the &lt;a href=&quot;element&quot;&gt;Element&lt;/a&gt; interface. Each Element can be tagged with a set of attributes. These attributes (name/value pairs) are defined by the &lt;a href=&quot;attributeset&quot;&gt;AttributeSet&lt;/a&gt; interface.</target>
        </trans-unit>
        <trans-unit id="b14bacca6f7c6b6b2bf4f146f5a2674ddf076dea" translate="yes" xml:space="preserve">
          <source>The unit of the field is the period that varies within the range. For example, in the field 'MonthOfYear', the unit is 'Months'. See also &lt;a href=&quot;#getRangeUnit()&quot;&gt;&lt;code&gt;getRangeUnit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The unit of the field is the period that varies within the range. For example, in the field 'MonthOfYear', the unit is 'Months'. See also &lt;a href=&quot;#getRangeUnit()&quot;&gt; &lt;code&gt;getRangeUnit()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5122174d5f83d404ea9a42f52e7c1c4179e0a65a" translate="yes" xml:space="preserve">
          <source>The unit of the field is the period that varies within the range. For example, in the field 'MonthOfYear', the unit is 'Months'. See also &lt;a href=&quot;temporalfield#getRangeUnit--&quot;&gt;&lt;code&gt;TemporalField.getRangeUnit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールドの単位は、範囲内で変化する期間です。たとえば、フィールド「MonthOfYear」では、単位は「Months」です。&lt;a href=&quot;temporalfield#getRangeUnit--&quot;&gt; &lt;code&gt;TemporalField.getRangeUnit()&lt;/code&gt; &lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="d2ac0d6412e7c41ea9d12640bb3ba8932b0b5834" translate="yes" xml:space="preserve">
          <source>The unit of the field is the period that varies within the range. For example, in the field 'MonthOfYear', the unit is 'Months'. See also &lt;a href=&quot;temporalfield#getRangeUnit--&quot;&gt;&lt;code&gt;getRangeUnit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールドの単位は、範囲内で変化する期間です。たとえば、フィールド「MonthOfYear」では、単位は「Months」です。&lt;a href=&quot;temporalfield#getRangeUnit--&quot;&gt; &lt;code&gt;getRangeUnit()&lt;/code&gt; &lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="1f111a51a42acb493693efa131e93c6ce9b6b10b" translate="yes" xml:space="preserve">
          <source>The unit that represents week-based-years for the purpose of addition and subtraction.</source>
          <target state="translated">足し算・引き算を目的とした週単位の年を表す単位。</target>
        </trans-unit>
        <trans-unit id="27ed7bbeff7184c6ce008c19d55f08c8ed276069" translate="yes" xml:space="preserve">
          <source>The unit works using double dispatch. Client code calls methods on a date-time like &lt;code&gt;LocalDateTime&lt;/code&gt; which check if the unit is a &lt;code&gt;ChronoUnit&lt;/code&gt;. If it is, then the date-time must handle it. Otherwise, the method call is re-dispatched to the matching method in this interface.</source>
          <target state="translated">ユニットはダブルディスパッチを使用して動作します。クライアントコードは、 &lt;code&gt;ChronoUnit&lt;/code&gt; ような日付時刻にメソッドを呼び出し、ユニットが &lt;code&gt;LocalDateTime&lt;/code&gt; かどうかを確認します。そうである場合、日時はそれを処理する必要があります。それ以外の場合、メソッド呼び出しは、このインターフェースの一致するメソッドに再ディスパッチされます。</target>
        </trans-unit>
        <trans-unit id="81a001136d3eb214fc80d07847b64a02ef39f1b1" translate="yes" xml:space="preserve">
          <source>The units in which an attribute, parameter, or operation return value is measured, for example &lt;code&gt;&quot;bytes&quot;&lt;/code&gt; or &lt;code&gt;
 &quot;seconds&quot;&lt;/code&gt;.</source>
          <target state="translated">The units in which an attribute, parameter, or operation return value is measured, for example &lt;code&gt;&quot;bytes&quot;&lt;/code&gt; or &lt;code&gt; &quot;seconds&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="337c6ca2e533607b16bd03301e040526d12b467c" translate="yes" xml:space="preserve">
          <source>The units in which an attribute, parameter, or operation return value is measured, for example &lt;code&gt;&quot;bytes&quot;&lt;/code&gt; or &lt;code&gt;&quot;seconds&quot;&lt;/code&gt;.</source>
          <target state="translated">属性、パラメーター、または操作の戻り値が測定される単位（例えば、 &lt;code&gt;&quot;bytes&quot;&lt;/code&gt; または &lt;code&gt;&quot;seconds&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3bd78e3001a8947a68a5cbb3ac87fe1fde628c2" translate="yes" xml:space="preserve">
          <source>The units used for the attributes &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;totalSize&lt;/code&gt; are not specified and can be implementation and input dependent.</source>
          <target state="translated">The units used for the attributes &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;totalSize&lt;/code&gt; are not specified and can be implementation and input dependent.</target>
        </trans-unit>
        <trans-unit id="b5d174c8b0683065fbf044b493c3ef8ed79dc428" translate="yes" xml:space="preserve">
          <source>The unknown conversion.</source>
          <target state="translated">未知の変換。</target>
        </trans-unit>
        <trans-unit id="c542dae190003ebc86b3cb936114ebb4383cf9dc" translate="yes" xml:space="preserve">
          <source>The unloading characteristics are set for each hidden class when it is defined, and cannot be changed later. An advantage of allowing hidden classes to be unloaded independently of the class loader marked as their defining loader is that a very large number of hidden classes may be created by an application. In contrast, if &lt;code&gt;STRONG&lt;/code&gt; is used, then the JVM may run out of memory, just as if normal classes were created by class loaders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c132eeb914111eef836f7b17954aa6d06ab7144e" translate="yes" xml:space="preserve">
          <source>The unmatched format specifier</source>
          <target state="translated">マッチしないフォーマット指定子</target>
        </trans-unit>
        <trans-unit id="9c3ed1d8f9191384bc27e1c770f53546798ad3be" translate="yes" xml:space="preserve">
          <source>The unnamed Module for this class loader</source>
          <target state="translated">このクラスローダーの名前のないモジュール</target>
        </trans-unit>
        <trans-unit id="89d7d1f2a0c6d2d00918acd6dc9254422a7dc31f" translate="yes" xml:space="preserve">
          <source>The unpacker engine converts the packed stream to a JAR file.</source>
          <target state="translated">アンパッカーエンジンは、パックされたストリームをJARファイルに変換します。</target>
        </trans-unit>
        <trans-unit id="f17f3d929a42461873323e53b16339238f41d1f2" translate="yes" xml:space="preserve">
          <source>The unpacker engine converts the packed stream to a JAR file. An instance of the engine can be obtained using &lt;a href=&quot;pack200#newUnpacker()&quot;&gt;&lt;code&gt;Pack200.newUnpacker()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The unpacker engine converts the packed stream to a JAR file. An instance of the engine can be obtained using &lt;a href=&quot;pack200#newUnpacker()&quot;&gt; &lt;code&gt;Pack200.newUnpacker()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c2a58d4aa16389063e1d4593b8080b538ec67075" translate="yes" xml:space="preserve">
          <source>The unpacker engine converts the packed stream to a JAR file. An instance of the engine can be obtained using &lt;a href=&quot;pack200#newUnpacker--&quot;&gt;&lt;code&gt;Pack200.newUnpacker()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">unpackerエンジンは、パックされたストリームをJARファイルに変換します。エンジンのインスタンスは&lt;a href=&quot;pack200#newUnpacker--&quot;&gt; &lt;code&gt;Pack200.newUnpacker()&lt;/code&gt; &lt;/a&gt;を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="1b7887467cb1970d34f42e962bd76f284036d6cd" translate="yes" xml:space="preserve">
          <source>The unpacker's progress as a percentage, as periodically updated by the unpacker.</source>
          <target state="translated">アンパッカーによって定期的に更新されるアンパッカーの進捗状況をパーセンテージで表したもの。</target>
        </trans-unit>
        <trans-unit id="101f5ee99703bb9848ebdb64b9a981d2574364ad" translate="yes" xml:space="preserve">
          <source>The unpacker's progress as a percentage, as periodically updated by the unpacker. Values of 0 - 100 are normal, and -1 indicates a stall. Progress can be monitored by polling the value of this property.</source>
          <target state="translated">アンパッカーによって定期的に更新されるアンパッカーの進捗状況をパーセンテージで表したもの。0 ~ 100 の値は正常であり、-1 は失速を示します。進捗状況は、このプロパティの値をポーリングすることで監視することができます。</target>
        </trans-unit>
        <trans-unit id="7b61a518de7509b59d212e291756906cb8ecb6f4" translate="yes" xml:space="preserve">
          <source>The unqualified name of a proxy class is unspecified. The space of class names that begin with the string &lt;code&gt;&quot;$Proxy&quot;&lt;/code&gt; should be, however, reserved for proxy classes.</source>
          <target state="translated">プロキシクラスの非修飾名は指定されていません。ただし、文字列 &lt;code&gt;&quot;$Proxy&quot;&lt;/code&gt; で始まるクラス名のスペースは、プロキシクラス用に予約する必要があります。</target>
        </trans-unit>
        <trans-unit id="eb7964c4b4dc617463023ff4866e3bcc872cfffc" translate="yes" xml:space="preserve">
          <source>The unsigned &lt;code&gt;long&lt;/code&gt; value is the argument plus 2&lt;sup&gt;64&lt;/sup&gt; if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in binary (base 2) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">unsigned &lt;code&gt;long&lt;/code&gt; 値は、引数が負の場合、引数+ 2 &lt;sup&gt;64&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、余分な先行 &lt;code&gt;0&lt;/code&gt; なしで、2進数（基数2）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="90b3bb257b666565307d76750b50c74e6f924841" translate="yes" xml:space="preserve">
          <source>The unsigned &lt;code&gt;long&lt;/code&gt; value is the argument plus 2&lt;sup&gt;64&lt;/sup&gt; if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in hexadecimal (base 16) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">unsigned &lt;code&gt;long&lt;/code&gt; 値は、引数が負の場合、引数+ 2 &lt;sup&gt;64&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、先頭に &lt;code&gt;0&lt;/code&gt; が追加されない16進数（基数16）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="43fc0c46437e63e9c1bc27fd8276c60615fc1eec" translate="yes" xml:space="preserve">
          <source>The unsigned &lt;code&gt;long&lt;/code&gt; value is the argument plus 2&lt;sup&gt;64&lt;/sup&gt; if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in octal (base 8) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">unsigned &lt;code&gt;long&lt;/code&gt; 値は、引数が負の場合、引数+ 2 &lt;sup&gt;64&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、先頭に &lt;code&gt;0&lt;/code&gt; が追加されない8進数（8進数）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="9ef8dc1e7e596de25447c72effc2b78e2e9eda78" translate="yes" xml:space="preserve">
          <source>The unsigned integer value is the argument plus 2&lt;sup&gt;32&lt;/sup&gt; if the argument is negative; otherwise it is equal to the argument. This value is converted to a string of ASCII digits in binary (base 2) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">符号なし整数値は、引数が負の場合、引数+ 2 &lt;sup&gt;32&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、余分な先行 &lt;code&gt;0&lt;/code&gt; なしで、2進数（基数2）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="054a6f2331c22a50fc40ea825d5bbe23a0c2752a" translate="yes" xml:space="preserve">
          <source>The unsigned integer value is the argument plus 2&lt;sup&gt;32&lt;/sup&gt; if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in hexadecimal (base 16) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">符号なし整数値は、引数が負の場合、引数+ 2 &lt;sup&gt;32&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、先頭に &lt;code&gt;0&lt;/code&gt; が追加されない16進数（基数16）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="4adf2f37edf13f4b7e5a873d42af291756d4bd27" translate="yes" xml:space="preserve">
          <source>The unsigned integer value is the argument plus 2&lt;sup&gt;32&lt;/sup&gt; if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in octal (base 8) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">符号なし整数値は、引数が負の場合、引数+ 2 &lt;sup&gt;32&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、先頭に &lt;code&gt;0&lt;/code&gt; が追加されない8進数（8進数）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="6060d22783b5de73678a070487c0c6a5f000dbdf" translate="yes" xml:space="preserve">
          <source>The unusual compilation and linkage behavior of &lt;code&gt;invokeExact&lt;/code&gt; and plain &lt;code&gt;invoke&lt;/code&gt; is referenced by the term &lt;em&gt;signature polymorphism&lt;/em&gt;. As defined in the Java Language Specification, a signature polymorphic method is one which can operate with any of a wide range of call signatures and return types.</source>
          <target state="translated">&lt;code&gt;invokeExact&lt;/code&gt; とplain &lt;code&gt;invoke&lt;/code&gt; の異常なコンパイルとリンケージの振る舞いは、&lt;em&gt;署名ポリモーフィズム&lt;/em&gt;という用語で参照されます。Java言語仕様で定義されているように、シグネチャポリモーフィックメソッドは、さまざまな呼び出しシグネチャと戻り値の型のいずれかで動作できるメソッドです。</target>
        </trans-unit>
        <trans-unit id="40b4d5652cfa127fc330a96253acd13ba3551734" translate="yes" xml:space="preserve">
          <source>The update event type.</source>
          <target state="translated">更新イベントの種類です。</target>
        </trans-unit>
        <trans-unit id="29059f1033a4f76e60bdc626ae645add4bfc3353" translate="yes" xml:space="preserve">
          <source>The update level.</source>
          <target state="translated">更新レベル。</target>
        </trans-unit>
        <trans-unit id="d313d97487f3c7f3cbc749779eb54e77639e2d72" translate="yes" xml:space="preserve">
          <source>The updated CompositeName, not a new one. Cannot be null.</source>
          <target state="translated">新しいコンポジット名ではなく、更新されたコンポジット名です。nullにすることはできません。</target>
        </trans-unit>
        <trans-unit id="9a42c811bccd6dd7e2f5a6b9d96175190ed03196" translate="yes" xml:space="preserve">
          <source>The updated CompoundName, not a new one. Cannot be null.</source>
          <target state="translated">新しいものではなく、更新されたCompoundNameです。null にすることはできません。</target>
        </trans-unit>
        <trans-unit id="b0a53b9e80856c6692659d4301653ca2c511f3f2" translate="yes" xml:space="preserve">
          <source>The updated LdapName, not a new instance. Cannot be null.</source>
          <target state="translated">新しいインスタンスではなく、更新されたLdapName。nullにすることはできません。</target>
        </trans-unit>
        <trans-unit id="7ff1724ae2775960bc3b129d71cefa43e6c05193" translate="yes" xml:space="preserve">
          <source>The updated name (not a new instance).</source>
          <target state="translated">更新された名前(新しいインスタンスではありません)。</target>
        </trans-unit>
        <trans-unit id="355083b7f57eecb4574c96df4e2dcb55b6e39ceb" translate="yes" xml:space="preserve">
          <source>The updated time instant is then converted back into a &lt;a href=&quot;../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object and used to update the given &lt;a href=&quot;../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">The updated time instant is then converted back into a &lt;a href=&quot;../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object and used to update the given &lt;a href=&quot;../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object.</target>
        </trans-unit>
        <trans-unit id="0baad8b72ddb35a83879b234fb143110d6defdf2" translate="yes" xml:space="preserve">
          <source>The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</target>
        </trans-unit>
        <trans-unit id="f2bcc2d49c180e5baf0e82f6c9fcc3ed64f68df8" translate="yes" xml:space="preserve">
          <source>The updater methods may be used in two ways:</source>
          <target state="translated">アップデータのメソッドには、2 つの方法があります。</target>
        </trans-unit>
        <trans-unit id="c660520ce3264961f8c352c1ced2cca916613b71" translate="yes" xml:space="preserve">
          <source>The upgrade module path</source>
          <target state="translated">アップグレードモジュールのパス</target>
        </trans-unit>
        <trans-unit id="7e25e2dbc84508e95baa5cc07d894f889b8081b4" translate="yes" xml:space="preserve">
          <source>The upgrade module path. This path contains compiled definitions of modules that will be observed in preference to the compiled definitions of any</source>
          <target state="translated">アップグレードモジュールのパス。このパスには、コンパイルされたモジュールの定義が含まれています。</target>
        </trans-unit>
        <trans-unit id="511c2c3c9bc3521c1996f4c7cf9369304efc81da" translate="yes" xml:space="preserve">
          <source>The upper bound for the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b9900dc95e3fff929d15c46c76d6028fddcc38" translate="yes" xml:space="preserve">
          <source>The upper left corner of the Raster is given by the location argument. If location is null, (0, 0) will be used. The dataType parameter should be one of the enumerated values defined in the DataBuffer class.</source>
          <target state="translated">Raster の左上隅は location 引数で与えられます。locationがnullの場合は、(0,0)が使用されます。dataTypeパラメータは、DataBufferクラスで定義されている列挙された値のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="67d6b1496d85bc73b81c00c805158bd666f5dfae" translate="yes" xml:space="preserve">
          <source>The upper left corner of the Raster is given by the location argument. The dataType parameter should be one of the enumerated values defined in the DataBuffer class.</source>
          <target state="translated">Raster の左上隅は location 引数で与えられます。dataTypeパラメータは、DataBufferクラスで定義されている列挙された値のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="9e5507eac7b1c8f8528ce3b0b75192849c664597" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'a'&lt;/code&gt;. The entire string representing the number will be converted to upper case including the &lt;code&gt;'x'&lt;/code&gt; (&lt;code&gt;'\u0078'&lt;/code&gt;) and &lt;code&gt;'p'&lt;/code&gt; (&lt;code&gt;'\u0070'&lt;/code&gt; and all hexadecimal digits &lt;code&gt;'a'&lt;/code&gt; - &lt;code&gt;'f'&lt;/code&gt; (&lt;code&gt;'\u0061'&lt;/code&gt; - &lt;code&gt;'\u0066'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'a'&lt;/code&gt; の大文字のバリアント。数値を表す文字列全体は、 &lt;code&gt;'x'&lt;/code&gt; （ &lt;code&gt;'\u0078'&lt;/code&gt; ）および &lt;code&gt;'p'&lt;/code&gt; （ &lt;code&gt;'\u0070'&lt;/code&gt; およびすべての16進数字 &lt;code&gt;'a'&lt;/code&gt; - &lt;code&gt;'f'&lt;/code&gt; （ &lt;code&gt;'\u0061'&lt;/code&gt; - &lt;code&gt;'\u0066'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="13c5bb73738331e23e3b8d0a094ce01abeb63f19" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'b'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'b'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="322e75fb849065f4ca52a6addf60e0ac9b017449" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'c'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'c'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="a34a284aaae73cba16fd4c94692a85c43d38c457" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'e'&lt;/code&gt;. The exponent symbol will be &lt;code&gt;'E'&lt;/code&gt; (&lt;code&gt;'\u0045'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'e'&lt;/code&gt; の大文字のバリアント。指数記号は &lt;code&gt;'E'&lt;/code&gt; （ &lt;code&gt;'\u0045'&lt;/code&gt; ）になります。</target>
        </trans-unit>
        <trans-unit id="8e4023159140f742a67dc9be0c2aef26ca29decf" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'g'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'g'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="0a797a98a3e9c41bf7072b33c0c5562f599482a3" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'h'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'h'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="07e68ff070c96b0a5cf38a9497cd5a90681077a0" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'s'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'s'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="6d089cd4117c5c549f52accd43d02871b2e37215" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'t'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'t'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="3c81156a71ca9fedc956a7ac507aef205ed19e69" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'x'&lt;/code&gt;. The entire string representing the number will be converted to &lt;a href=&quot;../lang/string#toUpperCase(java.util.Locale)&quot;&gt;upper case&lt;/a&gt; including the &lt;code&gt;'x'&lt;/code&gt; (if any) and all hexadecimal digits &lt;code&gt;'a'&lt;/code&gt; - &lt;code&gt;'f'&lt;/code&gt; (&lt;code&gt;'\u0061'&lt;/code&gt; - &lt;code&gt;'\u0066'&lt;/code&gt;).</source>
          <target state="translated">The upper-case variant of &lt;code&gt;'x'&lt;/code&gt; . The entire string representing the number will be converted to &lt;a href=&quot;../lang/string#toUpperCase(java.util.Locale)&quot;&gt;upper case&lt;/a&gt; including the &lt;code&gt;'x'&lt;/code&gt; (if any) and all hexadecimal digits &lt;code&gt;'a'&lt;/code&gt; - &lt;code&gt;'f'&lt;/code&gt; ( &lt;code&gt;'\u0061'&lt;/code&gt; - &lt;code&gt;'\u0066'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a786ff8547a2a8f3e96b122c7d43bbbbe0cec7bd" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'x'&lt;/code&gt;. The entire string representing the number will be converted to &lt;a href=&quot;../lang/string#toUpperCase-java.util.Locale-&quot;&gt;upper case&lt;/a&gt; including the &lt;code&gt;'x'&lt;/code&gt; (if any) and all hexadecimal digits &lt;code&gt;'a'&lt;/code&gt; - &lt;code&gt;'f'&lt;/code&gt; (&lt;code&gt;'\u0061'&lt;/code&gt; - &lt;code&gt;'\u0066'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'x'&lt;/code&gt; の大文字のバリアント。数値を表す文字列全体は、 &lt;code&gt;'x'&lt;/code&gt; （存在する場合）とすべての16進数字 &lt;code&gt;'a'&lt;/code&gt; 〜 &lt;code&gt;'f'&lt;/code&gt; （ &lt;code&gt;'\u0061'&lt;/code&gt; 〜 &lt;code&gt;'\u0066'&lt;/code&gt; ）を含む&lt;a href=&quot;../lang/string#toUpperCase-java.util.Locale-&quot;&gt;大文字に&lt;/a&gt;変換されます。</target>
        </trans-unit>
        <trans-unit id="654f2289487545b8f3928941dfdc0d162440284e" translate="yes" xml:space="preserve">
          <source>The uppercase letters &lt;code&gt;'A'&lt;/code&gt; through &lt;code&gt;'Z'&lt;/code&gt; (&lt;code&gt;'\u0041'&lt;/code&gt; through &lt;code&gt;'\u005a'&lt;/code&gt;),</source>
          <target state="translated">大文字の &lt;code&gt;'A'&lt;/code&gt; から &lt;code&gt;'Z'&lt;/code&gt; （ &lt;code&gt;'\u0041'&lt;/code&gt; から &lt;code&gt;'\u005a'&lt;/code&gt; ）、</target>
        </trans-unit>
        <trans-unit id="4330d8d1977e43b23dd07bee2099b3f4b622bfa6" translate="yes" xml:space="preserve">
          <source>The url string has the following expected structure.</source>
          <target state="translated">url文字列は以下のような構造になっています。</target>
        </trans-unit>
        <trans-unit id="4cf7c2a834de05ed4f93377051cbab9b134c7cbe" translate="yes" xml:space="preserve">
          <source>The usage of the pseudo/hidden column cannot be determined.</source>
          <target state="translated">疑似/非表示欄の使用法がわからない。</target>
        </trans-unit>
        <trans-unit id="4af9a221919250af2a20e619455ccc9a51cf8601" translate="yes" xml:space="preserve">
          <source>The use of &lt;code&gt;synchronized&lt;/code&gt; methods or statements provides access to the implicit monitor lock associated with every object, but forces all lock acquisition and release to occur in a block-structured way: when multiple locks are acquired they must be released in the opposite order, and all locks must be released in the same lexical scope in which they were acquired.</source>
          <target state="translated">使用 &lt;code&gt;synchronized&lt;/code&gt; メソッドや文では、すべてのオブジェクトに関連付けられた暗黙の監視ロックへのアクセスを提供しますが、すべてのロック取得を強制し、ブロック構造の形で発生するリリース：複数のロックを取得したときには逆の順序で解放されなければならない、とすべてのロックは、それらが取得されたのと同じ字句スコープで解放する必要があります。</target>
        </trans-unit>
        <trans-unit id="f768e19a63b5119836728427dc1a9e6eab8e5416" translate="yes" xml:space="preserve">
          <source>The use of Object is conventional, and because the lookup modes are limited, there is no special access provided to the internals of Object, its package or its module. Consequently, the lookup context of this lookup object will be the bootstrap class loader, which means it cannot find user classes.</source>
          <target state="translated">Object の使用は従来のもので、ルックアップモードが制限されているため、Object の内部やそのパッケージ、モジュールへの特別なアクセスは提供されていません。その結果、このルックアップオブジェクトのルックアップコンテキストはブートストラップクラスローダとなり、ユーザクラスを見つけることができません。</target>
        </trans-unit>
        <trans-unit id="7864af2b761ca48231a7aca9c9fd7fe90f2ffeac" translate="yes" xml:space="preserve">
          <source>The use of Object is conventional, and because the lookup modes are limited, there is no special access provided to the internals of Object, its package or its module. This public lookup object or other lookup object with &lt;code&gt;UNCONDITIONAL&lt;/code&gt; mode assumes readability. Consequently, the lookup class is not used to determine the lookup context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a7e152cb80dbfba69bf4ce931d07a2966b3c06" translate="yes" xml:space="preserve">
          <source>The use of a &lt;code&gt;Supplier&lt;/code&gt; in this form provides a level of indirection that reduces the scope of potential interference with the source. Since the supplier is only invoked after the terminal operation commences, any modifications to the source up to the start of the terminal operation are reflected in the stream result. See &lt;a href=&quot;package-summary#NonInterference&quot;&gt;Non-Interference&lt;/a&gt; for more details.</source>
          <target state="translated">この形式で &lt;code&gt;Supplier&lt;/code&gt; を使用すると、ソースへの潜在的な干渉の範囲を削減する間接レベルが提供されます。ターミナル操作が開始した後にのみサプライヤが呼び出されるため、ターミナル操作の開始までのソースへの変更は、ストリーム結果に反映されます。詳細については、&lt;a href=&quot;package-summary#NonInterference&quot;&gt;非干渉&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="454af7b03b7693d82fd0e4233351ee60b0851423" translate="yes" xml:space="preserve">
          <source>The user can also, when creating his own MBean relation class, have it extending RelationSupport, to retrieve the implementations of required interfaces (see below).</source>
          <target state="translated">また、ユーザーは、自分自身のMBean関係クラスを作成する際に、必要なインターフェースの実装を取得するために、それをRelationSupportを拡張することができます(以下を参照してください)。</target>
        </trans-unit>
        <trans-unit id="24733a45de02fe91d2ff96dd9438e11624cd8893" translate="yes" xml:space="preserve">
          <source>The user can specify the keytab location by using the option &lt;code&gt;keyTab&lt;/code&gt; in the configuration entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad00fa84e19a6fca6352926bdfa6128425f1dd8" translate="yes" xml:space="preserve">
          <source>The user can specify the location of the ticket cache by using the option &lt;code&gt;ticketCache&lt;/code&gt; in the configuration entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df61ad83755512938c568feb25a069781cb800fc" translate="yes" xml:space="preserve">
          <source>The user data object. It is used for whatever data the notification source wishes to communicate to its consumers.</source>
          <target state="translated">ユーザーデータオブジェクト。これは、通知ソースが消費者に通信したいデータのために使用されます。</target>
        </trans-unit>
        <trans-unit id="f0196edde65cd18b677e6ea628933698bb77d6b6" translate="yes" xml:space="preserve">
          <source>The user data. The buffers position will be &lt;code&gt;0&lt;/code&gt; and its limit will be set to the end of the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36576d2c09dab27f1344420ca4bb05561dde7b39" translate="yes" xml:space="preserve">
          <source>The user doclet must implement this interface, as described in the &lt;a href=&quot;package-summary#package.description&quot;&gt;package description&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a2448648f9fae5af8b19489689406b3bc11b9a" translate="yes" xml:space="preserve">
          <source>The user doclet must implement this interface, as described in the &lt;a href=&quot;package-summary#package.description&quot;&gt;package description&lt;/a&gt;. Each implementation of a Doclet must provide a public no-argument constructor to be used by tools to instantiate the doclet. The tool infrastructure will interact with classes implementing this interface as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db14b3d19120ebd8508e01afa1c48fe94d62e5d" translate="yes" xml:space="preserve">
          <source>The user drop action is chosen for a drop as described in the documentation for &lt;a href=&quot;../../java/awt/dnd/droptargetdragevent&quot;&gt;&lt;code&gt;DropTargetDragEvent&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../java/awt/dnd/droptargetdropevent&quot;&gt;&lt;code&gt;DropTargetDropEvent&lt;/code&gt;&lt;/a&gt;. A different action may be chosen as the drop action by way of the &lt;code&gt;setDropAction&lt;/code&gt; method.</source>
          <target state="translated">The user drop action is chosen for a drop as described in the documentation for &lt;a href=&quot;../../java/awt/dnd/droptargetdragevent&quot;&gt; &lt;code&gt;DropTargetDragEvent&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;../../java/awt/dnd/droptargetdropevent&quot;&gt; &lt;code&gt;DropTargetDropEvent&lt;/code&gt; &lt;/a&gt;. A different action may be chosen as the drop action by way of the &lt;code&gt;setDropAction&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="ded37dd355a5696c21e0eddb21f83620c05ca906" translate="yes" xml:space="preserve">
          <source>The user has activated the &lt;em&gt;line down&lt;/em&gt; area of a scroll bar.</source>
          <target state="translated">The user has activated the &lt;em&gt;line down&lt;/em&gt; area of a scroll bar.</target>
        </trans-unit>
        <trans-unit id="a39c75ca8c5af9e1d6071e0c53aa08a01e2ada67" translate="yes" xml:space="preserve">
          <source>The user has activated the &lt;em&gt;line up&lt;/em&gt; area of a scroll bar.</source>
          <target state="translated">The user has activated the &lt;em&gt;line up&lt;/em&gt; area of a scroll bar.</target>
        </trans-unit>
        <trans-unit id="173345745a92c74955436882d12492db2df03cd8" translate="yes" xml:space="preserve">
          <source>The user has activated the &lt;em&gt;page down&lt;/em&gt; area of a scroll bar.</source>
          <target state="translated">The user has activated the &lt;em&gt;page down&lt;/em&gt; area of a scroll bar.</target>
        </trans-unit>
        <trans-unit id="193d0a150699d577c9a383562d0f5b4713e8495f" translate="yes" xml:space="preserve">
          <source>The user has activated the &lt;em&gt;page up&lt;/em&gt; area of a scroll bar.</source>
          <target state="translated">The user has activated the &lt;em&gt;page up&lt;/em&gt; area of a scroll bar.</target>
        </trans-unit>
        <trans-unit id="5e0125de9eae2e97f0496830f88ba461cb0bd321" translate="yes" xml:space="preserve">
          <source>The user has asked the window manager to de-iconify the window.</source>
          <target state="translated">ユーザーはウィンドウマネージャにウィンドウのデアイコン化を依頼しました。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
