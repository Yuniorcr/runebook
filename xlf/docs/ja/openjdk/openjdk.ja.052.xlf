<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="fdab3de9abf820203ceaf09327cc721a7901d721" translate="yes" xml:space="preserve">
          <source>A CipherOutputStream is composed of an OutputStream and a Cipher so that write() methods first process the data before writing them out to the underlying OutputStream. The cipher must be fully initialized before being used by a CipherOutputStream.</source>
          <target state="translated">CipherOutputStream は OutputStream と Cipher から構成されており、 write()メソッドはデータを基底の OutputStream に書き出す前に最初にデータを処理します。サイファーは CipherOutputStream で使用される前に完全に初期化されていなければなりません。</target>
        </trans-unit>
        <trans-unit id="e140636c2a1d6e8b05c54e920844f13300e3f6d9" translate="yes" xml:space="preserve">
          <source>A Close message consists of a status code and a reason for closing. The status code is an integer from the range &lt;code&gt;1000 &amp;lt;= code &amp;lt;= 65535&lt;/code&gt;. The &lt;code&gt;reason&lt;/code&gt; is a string which has a UTF-8 representation not longer than &lt;code&gt;123&lt;/code&gt; bytes.</source>
          <target state="translated">クローズメッセージは、ステータスコードとクローズの理由で構成されます。ステータスコードは、 &lt;code&gt;1000 &amp;lt;= code &amp;lt;= 65535&lt;/code&gt; 範囲の整数です。その &lt;code&gt;reason&lt;/code&gt; は、 &lt;code&gt;123&lt;/code&gt; バイト以下のUTF-8表現を持つ文字列です。</target>
        </trans-unit>
        <trans-unit id="46ddcc0101e10b1298538225e81f409130eeefd4" translate="yes" xml:space="preserve">
          <source>A Comparator that orders &lt;code&gt;String&lt;/code&gt; objects as by &lt;code&gt;compareToIgnoreCase&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;compareToIgnoreCase&lt;/code&gt; のように &lt;code&gt;String&lt;/code&gt; オブジェクトを順序付けるコンパレータ。</target>
        </trans-unit>
        <trans-unit id="9c41e56ee0d72ad167ee0d749b8fbdd54ce445e6" translate="yes" xml:space="preserve">
          <source>A Comparator that orders &lt;code&gt;String&lt;/code&gt; objects as by &lt;code&gt;compareToIgnoreCase&lt;/code&gt;. This comparator is serializable.</source>
          <target state="translated">&lt;code&gt;compareToIgnoreCase&lt;/code&gt; のように &lt;code&gt;String&lt;/code&gt; オブジェクトを順序付けるコンパレータ。このコンパレータはシリアル化可能です。</target>
        </trans-unit>
        <trans-unit id="d97585da074cc604cb9f746899eec743346edb74" translate="yes" xml:space="preserve">
          <source>A ConcurrentHashMap can be used as a scalable frequency map (a form of histogram or multiset) by using &lt;a href=&quot;atomic/longadder&quot;&gt;&lt;code&gt;LongAdder&lt;/code&gt;&lt;/a&gt; values and initializing via &lt;a href=&quot;#computeIfAbsent(K,java.util.function.Function)&quot;&gt;&lt;code&gt;computeIfAbsent&lt;/code&gt;&lt;/a&gt;. For example, to add a count to a &lt;code&gt;ConcurrentHashMap&amp;lt;String,LongAdder&amp;gt; freqs&lt;/code&gt;, you can use &lt;code&gt;freqs.computeIfAbsent(key, k -&amp;gt; new LongAdder()).increment();&lt;/code&gt;</source>
          <target state="translated">AのConcurrentHashMapを使用して、スケーラブルな周波数マップ（ヒストグラム又は多重集合の形態）として使用することができる&lt;a href=&quot;atomic/longadder&quot;&gt; &lt;code&gt;LongAdder&lt;/code&gt; の&lt;/a&gt;値を介して初期化&lt;a href=&quot;#computeIfAbsent(K,java.util.function.Function)&quot;&gt; &lt;code&gt;computeIfAbsent&lt;/code&gt; &lt;/a&gt;。たとえば、 &lt;code&gt;ConcurrentHashMap&amp;lt;String,LongAdder&amp;gt; freqs&lt;/code&gt; にカウントを追加するには、 &lt;code&gt;freqs.computeIfAbsent(key, k -&amp;gt; new LongAdder()).increment();&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a88c7751045f06ed8e90b4b1167c2d52e5b7889f" translate="yes" xml:space="preserve">
          <source>A ConcurrentHashMap can be used as scalable frequency map (a form of histogram or multiset) by using &lt;a href=&quot;atomic/longadder&quot;&gt;&lt;code&gt;LongAdder&lt;/code&gt;&lt;/a&gt; values and initializing via &lt;a href=&quot;concurrenthashmap#computeIfAbsent-K-java.util.function.Function-&quot;&gt;&lt;code&gt;computeIfAbsent&lt;/code&gt;&lt;/a&gt;. For example, to add a count to a &lt;code&gt;ConcurrentHashMap&amp;lt;String,LongAdder&amp;gt; freqs&lt;/code&gt;, you can use &lt;code&gt;freqs.computeIfAbsent(k -&amp;gt; new LongAdder()).increment();&lt;/code&gt;</source>
          <target state="translated">A ConcurrentHashMapのは、使用して、スケーラブルな周波数マップ（ヒストグラム又は多重集合の形態）として使用することができる&lt;a href=&quot;atomic/longadder&quot;&gt; &lt;code&gt;LongAdder&lt;/code&gt; の&lt;/a&gt;値を介して初期化&lt;a href=&quot;concurrenthashmap#computeIfAbsent-K-java.util.function.Function-&quot;&gt; &lt;code&gt;computeIfAbsent&lt;/code&gt; &lt;/a&gt;。たとえば、 &lt;code&gt;ConcurrentHashMap&amp;lt;String,LongAdder&amp;gt; freqs&lt;/code&gt; にカウントを追加するには、 &lt;code&gt;freqs.computeIfAbsent(k -&amp;gt; new LongAdder()).increment();&lt;/code&gt; 使用できます。</target>
        </trans-unit>
        <trans-unit id="cd0f5b492e5e79e1dd49d103d07a9725793440ef" translate="yes" xml:space="preserve">
          <source>A Configuration object is responsible for specifying which LoginModules should be used for a particular application, and in what order the LoginModules should be invoked.</source>
          <target state="translated">Configuration オブジェクトは、特定のアプリケーションでどの LoginModules を使用するか、また、どのような順序で LoginModules を起動するかを指定します。</target>
        </trans-unit>
        <trans-unit id="d807e9225ff301fb922ab51b4ba82a0d2d0e2426" translate="yes" xml:space="preserve">
          <source>A Container that manages the contentPane and in some cases a menu bar.</source>
          <target state="translated">contentPaneや場合によってはメニューバーを管理するコンテナ。</target>
        </trans-unit>
        <trans-unit id="fcfe802b91350378730e5dab30a4dc357f811011" translate="yes" xml:space="preserve">
          <source>A Container that manages the contentPane and in some cases a menu bar. The layeredPane can be used by descendants that want to add a child to the RootPaneContainer that isn't layout managed. For example an internal dialog or a drag and drop effect component.</source>
          <target state="translated">contentPaneと場合によってはメニューバーを管理するコンテナ。layeredPaneは、レイアウト管理されていないRootPaneContainerに子を追加したい子孫が使うことができます。例えば、内部ダイアログやドラッグ&amp;ドロップ効果のコンポーネントなどです。</target>
        </trans-unit>
        <trans-unit id="d8f93adfaaae3440a93e9e8eeecd144151228a0d" translate="yes" xml:space="preserve">
          <source>A ContainerListener object is registered via &lt;code&gt;addContainerListener&lt;/code&gt;</source>
          <target state="translated">ContainerListenerオブジェクトは、 &lt;code&gt;addContainerListener&lt;/code&gt; を介して登録されます</target>
        </trans-unit>
        <trans-unit id="b22423bd271ef93fff76399aaab94802a3cd9de4" translate="yes" xml:space="preserve">
          <source>A Context instance is not guaranteed to be synchronized against concurrent access by multiple threads. Threads that need to access a single Context instance concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating a different Context instance need not synchronize. Note that the &lt;a href=&quot;#lookup(javax.naming.Name)&quot;&gt;&lt;code&gt;lookup&lt;/code&gt;&lt;/a&gt; method, when passed an empty name, will return a new Context instance representing the same naming context.</source>
          <target state="translated">Contextインスタンスは、複数のスレッドによる同時アクセスに対して同期されることが保証されていません。単一のContextインスタンスに同時にアクセスする必要があるスレッドは、それらの間で同期し、必要なロックを提供する必要があります。それぞれが異なるコンテキストインスタンスを操作する複数のスレッドは、同期する必要はありません。&lt;a href=&quot;#lookup(javax.naming.Name)&quot;&gt; &lt;code&gt;lookup&lt;/code&gt; &lt;/a&gt;メソッドに空の名前が渡されると、同じ名前付けコンテキストを表す新しいContextインスタンスが返されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="74d36f2b93f37113d35e86b570595f7563d7d60a" translate="yes" xml:space="preserve">
          <source>A Context instance is not guaranteed to be synchronized against concurrent access by multiple threads. Threads that need to access a single Context instance concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating a different Context instance need not synchronize. Note that the &lt;a href=&quot;context#lookup-javax.naming.Name-&quot;&gt;&lt;code&gt;&lt;code&gt;lookup&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method, when passed an empty name, will return a new Context instance representing the same naming context.</source>
          <target state="translated">Contextインスタンスは、複数のスレッドによる同時アクセスに対して同期されるとは限りません。単一のContextインスタンスに同時にアクセスする必要があるスレッドは、スレッド間で同期し、必要なロックを提供する必要があります。それぞれが異なるContextインスタンスを操作する複数のスレッドは、同期する必要はありません。&lt;a href=&quot;context#lookup-javax.naming.Name-&quot;&gt; &lt;code&gt;&lt;code&gt;lookup&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドが空の名前を渡されると、同じ名前付けコンテキストを表す新しいContextインスタンスを返すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="4b29cc8def858a24b7c7f09750b3ab466a9bfce1" translate="yes" xml:space="preserve">
          <source>A CookieHandler object provides a callback mechanism to hook up a HTTP state management policy implementation into the HTTP protocol handler.</source>
          <target state="translated">CookieHandler オブジェクトは、HTTP 状態管理ポリシーの実装を HTTP プロトコルハンドラにフックアップするためのコールバック機構を提供します。</target>
        </trans-unit>
        <trans-unit id="2e14cec95df0f08d9bad153498b207b612469b68" translate="yes" xml:space="preserve">
          <source>A CookieHandler object provides a callback mechanism to hook up a HTTP state management policy implementation into the HTTP protocol handler. The HTTP state management mechanism specifies a way to create a stateful session with HTTP requests and responses.</source>
          <target state="translated">CookieHandler オブジェクトは、HTTP 状態管理ポリシーの実装を HTTP プロトコルハンドラにフックアップするためのコールバック機構を提供します。HTTP 状態管理メカニズムは、HTTP リクエストとレスポンスでステートフルなセッションを作成する方法を指定します。</target>
        </trans-unit>
        <trans-unit id="79ca6a09288e0d8b71c28a349bae374ffee24a89" translate="yes" xml:space="preserve">
          <source>A CookieStore object represents a storage for cookie.</source>
          <target state="translated">CookieStoreオブジェクトは、クッキーのためのストレージを表します。</target>
        </trans-unit>
        <trans-unit id="283551993d847395f826933009f09ddcd3e07680" translate="yes" xml:space="preserve">
          <source>A CookieStore object represents a storage for cookie. Can store and retrieve cookies.</source>
          <target state="translated">CookieStoreオブジェクトは、クッキーのためのストレージを表します。クッキーを保存・取得することができます。</target>
        </trans-unit>
        <trans-unit id="3000b76d11fcc2997e83c8de2ec99b40336ee1d9" translate="yes" xml:space="preserve">
          <source>A CountedCompleter that does not itself have a completer (i.e., one for which &lt;a href=&quot;#getCompleter()&quot;&gt;&lt;code&gt;getCompleter()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;null&lt;/code&gt;) can be used as a regular ForkJoinTask with this added functionality. However, any completer that in turn has another completer serves only as an internal helper for other computations, so its own task status (as reported in methods such as &lt;a href=&quot;future#isDone()&quot;&gt;&lt;code&gt;Future.isDone()&lt;/code&gt;&lt;/a&gt;) is arbitrary; this status changes only upon explicit invocations of &lt;a href=&quot;#complete(T)&quot;&gt;&lt;code&gt;complete(T)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;forkjointask#cancel(boolean)&quot;&gt;&lt;code&gt;ForkJoinTask.cancel(boolean)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;forkjointask#completeExceptionally(java.lang.Throwable)&quot;&gt;&lt;code&gt;ForkJoinTask.completeExceptionally(Throwable)&lt;/code&gt;&lt;/a&gt; or upon exceptional completion of method &lt;code&gt;compute&lt;/code&gt;. Upon any exceptional completion, the exception may be relayed to a task's completer (and its completer, and so on), if one exists and it has not otherwise already completed. Similarly, cancelling an internal CountedCompleter has only a local effect on that completer, so is not often useful.</source>
          <target state="translated">それ自体にコンプリーターがないCountedCompleter（つまり、&lt;a href=&quot;#getCompleter()&quot;&gt; &lt;code&gt;getCompleter()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;null&lt;/code&gt; を返すCountedCompleter）は、この追加機能を備えた通常のForkJoinTaskとして使用できます。ただし、別の&lt;a href=&quot;future#isDone()&quot;&gt; &lt;code&gt;Future.isDone()&lt;/code&gt; &lt;/a&gt;、他の計算の内部ヘルパーとしてのみ機能するため、それ自体のタスクステータス（Future.isDone（）などのメソッドで報告される）は任意です。このステータスは、&lt;a href=&quot;#complete(T)&quot;&gt; &lt;code&gt;complete(T)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;forkjointask#cancel(boolean)&quot;&gt; &lt;code&gt;ForkJoinTask.cancel(boolean)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;forkjointask#completeExceptionally(java.lang.Throwable)&quot;&gt; &lt;code&gt;ForkJoinTask.completeExceptionally(Throwable)&lt;/code&gt; が&lt;/a&gt;明示的に呼び出されたとき、またはメソッド &lt;code&gt;compute&lt;/code&gt; が例外的に完了したときにのみ変更されます。。例外が完了すると、例外が存在し、それ以外の方法でまだ完了していない場合、例外はタスクの完了者（およびその完了者など）に中継される場合があります。同様に、内部のCountedCompleterをキャンセルしても、そのコンプリーターにはローカルな影響しか及ぼさないため、あまり役に立ちません。</target>
        </trans-unit>
        <trans-unit id="0b58e7c6e736957a773f6daa4515fd1439a70f91" translate="yes" xml:space="preserve">
          <source>A CountedCompleter that does not itself have a completer (i.e., one for which &lt;a href=&quot;countedcompleter#getCompleter--&quot;&gt;&lt;code&gt;getCompleter()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;null&lt;/code&gt;) can be used as a regular ForkJoinTask with this added functionality. However, any completer that in turn has another completer serves only as an internal helper for other computations, so its own task status (as reported in methods such as &lt;a href=&quot;forkjointask#isDone--&quot;&gt;&lt;code&gt;ForkJoinTask.isDone()&lt;/code&gt;&lt;/a&gt;) is arbitrary; this status changes only upon explicit invocations of &lt;a href=&quot;countedcompleter#complete-T-&quot;&gt;&lt;code&gt;complete(T)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;forkjointask#cancel-boolean-&quot;&gt;&lt;code&gt;ForkJoinTask.cancel(boolean)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;forkjointask#completeExceptionally-java.lang.Throwable-&quot;&gt;&lt;code&gt;ForkJoinTask.completeExceptionally(Throwable)&lt;/code&gt;&lt;/a&gt; or upon exceptional completion of method &lt;code&gt;compute&lt;/code&gt;. Upon any exceptional completion, the exception may be relayed to a task's completer (and its completer, and so on), if one exists and it has not otherwise already completed. Similarly, cancelling an internal CountedCompleter has only a local effect on that completer, so is not often useful.</source>
          <target state="translated">それ自体がコンプリーターを持たないCountedCompleter（つまり、&lt;a href=&quot;countedcompleter#getCompleter--&quot;&gt; &lt;code&gt;getCompleter()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;null&lt;/code&gt; を返すもの）は、この追加機能を備えた通常のForkJoinTaskとして使用できます。ただし、別の&lt;a href=&quot;forkjointask#isDone--&quot;&gt; &lt;code&gt;ForkJoinTask.isDone()&lt;/code&gt; &lt;/a&gt;、他の計算の内部ヘルパーとしてのみ機能するため、独自のタスクステータス（ForkJoinTask.isDone（）などのメソッドで報告される）は任意です。このステータスは、&lt;a href=&quot;countedcompleter#complete-T-&quot;&gt; &lt;code&gt;complete(T)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;forkjointask#cancel-boolean-&quot;&gt; &lt;code&gt;ForkJoinTask.cancel(boolean)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;forkjointask#completeExceptionally-java.lang.Throwable-&quot;&gt; &lt;code&gt;ForkJoinTask.completeExceptionally(Throwable)&lt;/code&gt; の&lt;/a&gt;明示的な呼び出し時、またはメソッド &lt;code&gt;compute&lt;/code&gt; の例外的な完了時にのみ変化します。例外が完了すると、タスクの完了者（およびその完了者など）が存在し、それがまだ完了していない場合、例外がタスクの完了者に中継されます。同様に、内部のCountedCompleterをキャンセルしても、そのコンプリーターにローカルな影響しか及ぼさないため、役に立たないことがよくあります。</target>
        </trans-unit>
        <trans-unit id="e6f1d597ff81bc116ebafb1af1319ec9950f7a72" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../urireference&quot;&gt;&lt;code&gt;URIReference&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">DOM固有の&lt;a href=&quot;../urireference&quot;&gt; &lt;code&gt;URIReference&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca5803d4a9c3a3c1bcc79939307b2f4e73b6e895" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../urireference&quot;&gt;&lt;code&gt;URIReference&lt;/code&gt;&lt;/a&gt;. The purpose of this class is to provide additional context necessary for resolving XPointer URIs or same-document references.</source>
          <target state="translated">DOM固有の&lt;a href=&quot;../urireference&quot;&gt; &lt;code&gt;URIReference&lt;/code&gt; &lt;/a&gt;。このクラスの目的は、XPointerURIまたは同じドキュメント参照を解決するために必要な追加のコンテキストを提供することです。</target>
        </trans-unit>
        <trans-unit id="bfcd6af043d697ad391ab62fae22184ba5ce3987" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlsigncontext&quot;&gt;&lt;code&gt;XMLSignContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">DOM固有の&lt;a href=&quot;../xmlsigncontext&quot;&gt; &lt;code&gt;XMLSignContext&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d85da757381ee419d046495d07e13697cdab0559" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlsigncontext&quot;&gt;&lt;code&gt;XMLSignContext&lt;/code&gt;&lt;/a&gt;. This class contains additional methods to specify the location in a DOM tree where an &lt;a href=&quot;../xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; object is to be marshalled when generating the signature.</source>
          <target state="translated">A DOM-specific &lt;a href=&quot;../xmlsigncontext&quot;&gt; &lt;code&gt;XMLSignContext&lt;/code&gt; &lt;/a&gt;. This class contains additional methods to specify the location in a DOM tree where an &lt;a href=&quot;../xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt; object is to be marshalled when generating the signature.</target>
        </trans-unit>
        <trans-unit id="84c78b84756fe7f1ca4c1a22cd637f11ae715df0" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlstructure&quot;&gt;&lt;code&gt;XMLStructure&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A DOM-specific &lt;a href=&quot;../xmlstructure&quot;&gt; &lt;code&gt;XMLStructure&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9f4b452597df4c938ae233ce6592a0bc4944e188" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlstructure&quot;&gt;&lt;code&gt;XMLStructure&lt;/code&gt;&lt;/a&gt;. The purpose of this class is to allow a DOM node to be used to represent extensible content (any elements or mixed content) in XML Signature structures.</source>
          <target state="translated">A DOM-specific &lt;a href=&quot;../xmlstructure&quot;&gt; &lt;code&gt;XMLStructure&lt;/code&gt; &lt;/a&gt;. The purpose of this class is to allow a DOM node to be used to represent extensible content (any elements or mixed content) in XML Signature structures.</target>
        </trans-unit>
        <trans-unit id="a1811213e46c06173f561a1fc0f03c49dcb92d2d" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlvalidatecontext&quot;&gt;&lt;code&gt;XMLValidateContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A DOM-specific &lt;a href=&quot;../xmlvalidatecontext&quot;&gt; &lt;code&gt;XMLValidateContext&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c2118176a43e7a7922a590821742530dde4b1591" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlvalidatecontext&quot;&gt;&lt;code&gt;XMLValidateContext&lt;/code&gt;&lt;/a&gt;. This class contains additional methods to specify the location in a DOM tree where an &lt;a href=&quot;../xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; is to be unmarshalled and validated from.</source>
          <target state="translated">A DOM-specific &lt;a href=&quot;../xmlvalidatecontext&quot;&gt; &lt;code&gt;XMLValidateContext&lt;/code&gt; &lt;/a&gt;. This class contains additional methods to specify the location in a DOM tree where an &lt;a href=&quot;../xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt; is to be unmarshalled and validated from.</target>
        </trans-unit>
        <trans-unit id="27aa58ab7098ad2b7fa2c5756767850495dc2269" translate="yes" xml:space="preserve">
          <source>A DRBG implementation should support serialization and deserialization by retaining the configuration and effective parameters, but the internal state must not be serialized and the deserialized object must be reinstantiated.</source>
          <target state="translated">DRBGの実装は、設定と有効なパラメータを保持することでシリアライズとデシリアライズをサポートしなければなりませんが、内部状態はシリアライズされてはならず、デシリアライズされたオブジェクトは再インスタンス化されなければなりません。</target>
        </trans-unit>
        <trans-unit id="e83369b8a7eb7f1233b3798dc826997f74691129" translate="yes" xml:space="preserve">
          <source>A DRBG implementation supporting prediction resistance must also support reseeding.</source>
          <target state="translated">予測抵抗をサポートするDRBGの実装は、再シードもサポートしなければなりません。</target>
        </trans-unit>
        <trans-unit id="45c11400a585fe73c83ee3f1b8958999facd625f" translate="yes" xml:space="preserve">
          <source>A DRBG instance can be instantiated with parameters from an &lt;a href=&quot;drbgparameters.instantiation&quot;&gt;&lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt;&lt;/a&gt; object and other information (for example, the nonce, which is not managed by this API). This maps to the &lt;code&gt;Instantiate_function&lt;/code&gt; defined in NIST SP 800-90Ar1.</source>
          <target state="translated">A DRBG instance can be instantiated with parameters from an &lt;a href=&quot;drbgparameters.instantiation&quot;&gt; &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; &lt;/a&gt; object and other information (for example, the nonce, which is not managed by this API). This maps to the &lt;code&gt;Instantiate_function&lt;/code&gt; defined in NIST SP 800-90Ar1.</target>
        </trans-unit>
        <trans-unit id="157c829c498bb73c9b920748902894633791d9e6" translate="yes" xml:space="preserve">
          <source>A DRBG instance can be reseeded with parameters from a &lt;a href=&quot;drbgparameters.reseed&quot;&gt;&lt;code&gt;DrbgParameters.Reseed&lt;/code&gt;&lt;/a&gt; object. This maps to the &lt;code&gt;Reseed_function&lt;/code&gt; defined in NIST SP 800-90Ar1. Calling &lt;a href=&quot;securerandom#reseed()&quot;&gt;&lt;code&gt;SecureRandom.reseed()&lt;/code&gt;&lt;/a&gt; is equivalent to calling &lt;a href=&quot;securerandom#reseed(java.security.SecureRandomParameters)&quot;&gt;&lt;code&gt;SecureRandom.reseed(SecureRandomParameters)&lt;/code&gt;&lt;/a&gt; with the effective instantiated prediction resistance flag (as returned by &lt;a href=&quot;securerandom#getParameters()&quot;&gt;&lt;code&gt;SecureRandom.getParameters()&lt;/code&gt;&lt;/a&gt;) with no additional input.</source>
          <target state="translated">A DRBG instance can be reseeded with parameters from a &lt;a href=&quot;drbgparameters.reseed&quot;&gt; &lt;code&gt;DrbgParameters.Reseed&lt;/code&gt; &lt;/a&gt; object. This maps to the &lt;code&gt;Reseed_function&lt;/code&gt; defined in NIST SP 800-90Ar1. Calling &lt;a href=&quot;securerandom#reseed()&quot;&gt; &lt;code&gt;SecureRandom.reseed()&lt;/code&gt; &lt;/a&gt; is equivalent to calling &lt;a href=&quot;securerandom#reseed(java.security.SecureRandomParameters)&quot;&gt; &lt;code&gt;SecureRandom.reseed(SecureRandomParameters)&lt;/code&gt; &lt;/a&gt; with the effective instantiated prediction resistance flag (as returned by &lt;a href=&quot;securerandom#getParameters()&quot;&gt; &lt;code&gt;SecureRandom.getParameters()&lt;/code&gt; &lt;/a&gt;) with no additional input.</target>
        </trans-unit>
        <trans-unit id="3885218929e4820b5ba912a1a78e9c95cc7a3762" translate="yes" xml:space="preserve">
          <source>A DRBG instance generates data with additional parameters from a &lt;a href=&quot;drbgparameters.nextbytes&quot;&gt;&lt;code&gt;DrbgParameters.NextBytes&lt;/code&gt;&lt;/a&gt; object. This maps to the &lt;code&gt;Generate_function&lt;/code&gt; defined in NIST SP 800-90Ar1. Calling &lt;a href=&quot;securerandom#nextBytes(byte%5B%5D)&quot;&gt;&lt;code&gt;SecureRandom.nextBytes(byte[])&lt;/code&gt;&lt;/a&gt; is equivalent to calling &lt;a href=&quot;securerandom#nextBytes(byte%5B%5D,java.security.SecureRandomParameters)&quot;&gt;&lt;code&gt;SecureRandom.nextBytes(byte[], SecureRandomParameters)&lt;/code&gt;&lt;/a&gt; with the effective instantiated strength and prediction resistance flag (as returned by &lt;a href=&quot;securerandom#getParameters()&quot;&gt;&lt;code&gt;SecureRandom.getParameters()&lt;/code&gt;&lt;/a&gt;) with no additional input.</source>
          <target state="translated">A DRBG instance generates data with additional parameters from a &lt;a href=&quot;drbgparameters.nextbytes&quot;&gt; &lt;code&gt;DrbgParameters.NextBytes&lt;/code&gt; &lt;/a&gt; object. This maps to the &lt;code&gt;Generate_function&lt;/code&gt; defined in NIST SP 800-90Ar1. Calling &lt;a href=&quot;securerandom#nextBytes(byte%5B%5D)&quot;&gt; &lt;code&gt;SecureRandom.nextBytes(byte[])&lt;/code&gt; &lt;/a&gt; is equivalent to calling &lt;a href=&quot;securerandom#nextBytes(byte%5B%5D,java.security.SecureRandomParameters)&quot;&gt; &lt;code&gt;SecureRandom.nextBytes(byte[], SecureRandomParameters)&lt;/code&gt; &lt;/a&gt; with the effective instantiated strength and prediction resistance flag (as returned by &lt;a href=&quot;securerandom#getParameters()&quot;&gt; &lt;code&gt;SecureRandom.getParameters()&lt;/code&gt; &lt;/a&gt;) with no additional input.</target>
        </trans-unit>
        <trans-unit id="40ed60db9d5800cf52c2cf5ded24397954bd0443" translate="yes" xml:space="preserve">
          <source>A DRBG is based on a DRBG mechanism as specified in this Recommendation and includes a source of randomness. A DRBG mechanism uses an algorithm (i.e., a DRBG algorithm) that produces a sequence of bits from an initial value that is determined by a seed that is determined from the output of the randomness source.&quot;</source>
          <target state="translated">DRBGは、本勧告で規定されているDRBGメカニズムに基づいており、ランダムネス源を含む。DRBG機構は、ランダムネス源の出力から決定されるシードによって決定される初期値からビットのシーケンスを生成するアルゴリズム(すなわち、DRBGアルゴリズム)を使用する。&quot;</target>
        </trans-unit>
        <trans-unit id="e4520b15cb71855ef5387229fdf25dbee934f5ca" translate="yes" xml:space="preserve">
          <source>A DRBG might reseed itself automatically if the seed period is bigger than the maximum seed life defined by the DRBG mechanism.</source>
          <target state="translated">DRBGは、DRBGメカニズムで定義された最大シード寿命よりもシード期間が大きい場合、自動的に再シードを行うことがあります。</target>
        </trans-unit>
        <trans-unit id="cda30c8b519b6b092599c3f12ea40b0b472b259c" translate="yes" xml:space="preserve">
          <source>A DRBG should be implemented as a subclass of &lt;a href=&quot;securerandomspi&quot;&gt;&lt;code&gt;SecureRandomSpi&lt;/code&gt;&lt;/a&gt;. It is recommended that the implementation contain the 1-arg &lt;a href=&quot;securerandomspi#%3Cinit%3E(java.security.SecureRandomParameters)&quot;&gt;constructor&lt;/a&gt; that takes a &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; argument. If implemented this way, this implementation can be chosen by any &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; method. If it is chosen by a &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; with a &lt;a href=&quot;securerandomparameters&quot;&gt;&lt;code&gt;SecureRandomParameters&lt;/code&gt;&lt;/a&gt; parameter, the parameter is passed into this constructor. If it is chosen by a &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; without a &lt;code&gt;SecureRandomParameters&lt;/code&gt; parameter, the constructor is called with a &lt;code&gt;null&lt;/code&gt; argument and the implementation should choose its own parameters. Its &lt;a href=&quot;securerandom#getParameters()&quot;&gt;&lt;code&gt;SecureRandom.getParameters()&lt;/code&gt;&lt;/a&gt; must always return a non-null effective &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; object that reflects how the DRBG is actually instantiated. A caller can use this information to determine whether a &lt;code&gt;SecureRandom&lt;/code&gt; object is a DRBG and what features it supports. Please note that the returned value does not necessarily equal to the &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; object passed into the &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; call. For example, the requested capability can be &lt;a href=&quot;drbgparameters.capability#NONE&quot;&gt;&lt;code&gt;DrbgParameters.Capability.NONE&lt;/code&gt;&lt;/a&gt; but the effective value can be &lt;a href=&quot;drbgparameters.capability#RESEED_ONLY&quot;&gt;&lt;code&gt;DrbgParameters.Capability.RESEED_ONLY&lt;/code&gt;&lt;/a&gt; if the implementation supports reseeding. The implementation must implement the &lt;a href=&quot;securerandomspi#engineNextBytes(byte%5B%5D,java.security.SecureRandomParameters)&quot;&gt;&lt;code&gt;SecureRandomSpi.engineNextBytes(byte[], SecureRandomParameters)&lt;/code&gt;&lt;/a&gt; method which takes a &lt;code&gt;DrbgParameters.NextBytes&lt;/code&gt; parameter. Unless the result of &lt;a href=&quot;securerandom#getParameters()&quot;&gt;&lt;code&gt;SecureRandom.getParameters()&lt;/code&gt;&lt;/a&gt; has its &lt;a href=&quot;drbgparameters.instantiation#getCapability()&quot;&gt;capability&lt;/a&gt; being &lt;a href=&quot;drbgparameters.capability#NONE&quot;&gt;&lt;code&gt;NONE&lt;/code&gt;&lt;/a&gt;, it must implement &lt;a href=&quot;securerandomspi#engineReseed(java.security.SecureRandomParameters)&quot;&gt;&lt;code&gt;SecureRandomSpi.engineReseed(SecureRandomParameters)&lt;/code&gt;&lt;/a&gt; which takes a &lt;code&gt;DrbgParameters.Reseed&lt;/code&gt; parameter.</source>
          <target state="translated">A DRBG should be implemented as a subclass of &lt;a href=&quot;securerandomspi&quot;&gt; &lt;code&gt;SecureRandomSpi&lt;/code&gt; &lt;/a&gt;. It is recommended that the implementation contain the 1-arg &lt;a href=&quot;securerandomspi#%3Cinit%3E(java.security.SecureRandomParameters)&quot;&gt;constructor&lt;/a&gt; that takes a &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; argument. If implemented this way, this implementation can be chosen by any &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; method. If it is chosen by a &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; with a &lt;a href=&quot;securerandomparameters&quot;&gt; &lt;code&gt;SecureRandomParameters&lt;/code&gt; &lt;/a&gt; parameter, the parameter is passed into this constructor. If it is chosen by a &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; without a &lt;code&gt;SecureRandomParameters&lt;/code&gt; parameter, the constructor is called with a &lt;code&gt;null&lt;/code&gt; argument and the implementation should choose its own parameters. Its &lt;a href=&quot;securerandom#getParameters()&quot;&gt; &lt;code&gt;SecureRandom.getParameters()&lt;/code&gt; &lt;/a&gt; must always return a non-null effective &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; object that reflects how the DRBG is actually instantiated. A caller can use this information to determine whether a &lt;code&gt;SecureRandom&lt;/code&gt; object is a DRBG and what features it supports. Please note that the returned value does not necessarily equal to the &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; object passed into the &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; call. For example, the requested capability can be &lt;a href=&quot;drbgparameters.capability#NONE&quot;&gt; &lt;code&gt;DrbgParameters.Capability.NONE&lt;/code&gt; &lt;/a&gt; but the effective value can be &lt;a href=&quot;drbgparameters.capability#RESEED_ONLY&quot;&gt; &lt;code&gt;DrbgParameters.Capability.RESEED_ONLY&lt;/code&gt; &lt;/a&gt; if the implementation supports reseeding. The implementation must implement the &lt;a href=&quot;securerandomspi#engineNextBytes(byte%5B%5D,java.security.SecureRandomParameters)&quot;&gt; &lt;code&gt;SecureRandomSpi.engineNextBytes(byte[], SecureRandomParameters)&lt;/code&gt; &lt;/a&gt; method which takes a &lt;code&gt;DrbgParameters.NextBytes&lt;/code&gt; parameter. Unless the result of &lt;a href=&quot;securerandom#getParameters()&quot;&gt; &lt;code&gt;SecureRandom.getParameters()&lt;/code&gt; &lt;/a&gt; has its &lt;a href=&quot;drbgparameters.instantiation#getCapability()&quot;&gt;capability&lt;/a&gt; being &lt;a href=&quot;drbgparameters.capability#NONE&quot;&gt; &lt;code&gt;NONE&lt;/code&gt; &lt;/a&gt;, it must implement &lt;a href=&quot;securerandomspi#engineReseed(java.security.SecureRandomParameters)&quot;&gt; &lt;code&gt;SecureRandomSpi.engineReseed(SecureRandomParameters)&lt;/code&gt; &lt;/a&gt; which takes a &lt;code&gt;DrbgParameters.Reseed&lt;/code&gt; parameter.</target>
        </trans-unit>
        <trans-unit id="50ed389c980a3b82f5fa1dcf9431f3b476fcb7a5" translate="yes" xml:space="preserve">
          <source>A Dialog is a top-level window with a title and a border that is typically used to take some form of input from the user.</source>
          <target state="translated">ダイアログとは、タイトルと枠線を持つトップレベルのウィンドウのことで、通常はユーザーから何らかの入力を受けるために使用されます。</target>
        </trans-unit>
        <trans-unit id="fe1b9faf4546dec2300125abdf988d84664ea20f" translate="yes" xml:space="preserve">
          <source>A Dialog is a top-level window with a title and a border that is typically used to take some form of input from the user. The size of the dialog includes any area designated for the border. The dimensions of the border area can be obtained using the &lt;code&gt;getInsets&lt;/code&gt; method, however, since these dimensions are platform-dependent, a valid insets value cannot be obtained until the dialog is made displayable by either calling &lt;code&gt;pack&lt;/code&gt; or &lt;code&gt;show&lt;/code&gt;. Since the border area is included in the overall size of the dialog, the border effectively obscures a portion of the dialog, constraining the area available for rendering and/or displaying subcomponents to the rectangle which has an upper-left corner location of &lt;code&gt;(insets.left, insets.top)&lt;/code&gt;, and has a size of &lt;code&gt;width - (insets.left + insets.right)&lt;/code&gt; by &lt;code&gt;height - (insets.top + insets.bottom)&lt;/code&gt;.</source>
          <target state="translated">A Dialog is a top-level window with a title and a border that is typically used to take some form of input from the user. The size of the dialog includes any area designated for the border. The dimensions of the border area can be obtained using the &lt;code&gt;getInsets&lt;/code&gt; method, however, since these dimensions are platform-dependent, a valid insets value cannot be obtained until the dialog is made displayable by either calling &lt;code&gt;pack&lt;/code&gt; or &lt;code&gt;show&lt;/code&gt; . Since the border area is included in the overall size of the dialog, the border effectively obscures a portion of the dialog, constraining the area available for rendering and/or displaying subcomponents to the rectangle which has an upper-left corner location of &lt;code&gt;(insets.left, insets.top)&lt;/code&gt; , and has a size of &lt;code&gt;width - (insets.left + insets.right)&lt;/code&gt; by &lt;code&gt;height - (insets.top + insets.bottom)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c0ae9f894e19bb52c1d4d3e09f60802c800601c" translate="yes" xml:space="preserve">
          <source>A Dimension object that indicates the size of this component; null if this object is not on the screen</source>
          <target state="translated">このコンポーネントのサイズを示すDimensionオブジェクト。</target>
        </trans-unit>
        <trans-unit id="e06695bbc72ff1b5ce51b060c69b0b7a40f516e3" translate="yes" xml:space="preserve">
          <source>A DocAttributeSet is just an &lt;a href=&quot;attributeset&quot;&gt;&lt;code&gt;AttributeSet&lt;/code&gt;&lt;/a&gt; whose constructors and mutating operations guarantee an additional invariant, namely that all attribute values in the DocAttributeSet must be instances of interface &lt;a href=&quot;docattribute&quot;&gt;&lt;code&gt;DocAttribute&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;docattributeset#add-javax.print.attribute.Attribute-&quot;&gt;&lt;code&gt;add(Attribute)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;docattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt;&lt;code&gt;addAll(AttributeSet)&lt;/code&gt;&lt;/a&gt; operations are respecified below to guarantee this additional invariant.</source>
          <target state="translated">DocAttributeSetは単なる&lt;a href=&quot;attributeset&quot;&gt; &lt;code&gt;AttributeSet&lt;/code&gt; &lt;/a&gt;であり、そのコンストラクターと変更操作は追加の不変式を保証します。つまり、DocAttributeSet内のすべての属性値はインターフェース&lt;a href=&quot;docattribute&quot;&gt; &lt;code&gt;DocAttribute&lt;/code&gt; の&lt;/a&gt;インスタンスでなければなりません。&lt;a href=&quot;docattributeset#add-javax.print.attribute.Attribute-&quot;&gt; &lt;code&gt;add(Attribute)&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;docattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt; &lt;code&gt;addAll(AttributeSet)&lt;/code&gt; &lt;/a&gt;の操作は、この追加の不変式を保証するために次のようにしています。</target>
        </trans-unit>
        <trans-unit id="9526eb9e07d3f0d597f8deb47aa3a8a53b2774f7" translate="yes" xml:space="preserve">
          <source>A DocumentFragment containing the extracted contents.</source>
          <target state="translated">抽出した内容を含むDocumentFragment。</target>
        </trans-unit>
        <trans-unit id="d885aecedb913e7e9ad58e330026c748fe5d6401" translate="yes" xml:space="preserve">
          <source>A DocumentFragment that contains content equivalent to this Range.</source>
          <target state="translated">この範囲に相当する内容を含むDocumentFragment。</target>
        </trans-unit>
        <trans-unit id="21f6b69850f9a459ccf9785d7b301978a813eb95" translate="yes" xml:space="preserve">
          <source>A Duration object represents a period of Gregorian time, which consists of six fields (years, months, days, hours, minutes, and seconds) plus a sign (+/-) field.</source>
          <target state="translated">デュレーションオブジェクトはグレゴリオ暦の時間を表し、6つのフィールド(年、月、日、時、分、秒)と記号(+/-)のフィールドで構成されます。</target>
        </trans-unit>
        <trans-unit id="540605bdc46068b28f36fc2fbe886657aecbbe59" translate="yes" xml:space="preserve">
          <source>A Feature type as defined in the &lt;a href=&quot;catalogfeatures#CatalogFeatures&quot;&gt;Catalog Features table&lt;/a&gt;.</source>
          <target state="translated">A Feature type as defined in the &lt;a href=&quot;catalogfeatures#CatalogFeatures&quot;&gt;Catalog Features table&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="dca67a6c4e0325cfb67cd9c03877cb0ceaed02e9" translate="yes" xml:space="preserve">
          <source>A Filter can be used to provide fine grain control over what is logged, beyond the control provided by log levels.</source>
          <target state="translated">フィルタは、ログレベルで提供される制御を超えて、ログに記録されるものを細かく制御するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="f4c9a148d25d26005d31ec79131ad55e93256cdf" translate="yes" xml:space="preserve">
          <source>A FlavorMap which relaxes the traditional 1-to-1 restriction of a Map.</source>
          <target state="translated">Mapの伝統的な1対1の制限を緩和したFlavorMap。</target>
        </trans-unit>
        <trans-unit id="3a992429c52c81d400c8823b0098a371a1a65594" translate="yes" xml:space="preserve">
          <source>A FlavorMap which relaxes the traditional 1-to-1 restriction of a Map. A flavor is permitted to map to any number of natives, and likewise a native is permitted to map to any number of flavors. FlavorTables need not be symmetric, but typically are.</source>
          <target state="translated">従来のマップの1対1の制限を緩和したFlavorMap。フレーバーは任意の数のネイティブにマップすることができ、同様にネイティブは任意の数のフレーバーにマップすることができます。FlavorTablesは対称である必要はありませんが、通常は対称です。</target>
        </trans-unit>
        <trans-unit id="e1d9b95370b4f9df8a6d70a956837bb6799f17f8" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy defines the order in which Components with a particular focus cycle root are traversed.</source>
          <target state="translated">FocusTraversalPolicy は、特定のフォーカス サイクル ルートを持つコンポーネントがトラバースされる順序を定義します。</target>
        </trans-unit>
        <trans-unit id="9bb82711aef2432546f117d8e08ea56e21f68ac1" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy defines the order in which Components with a particular focus cycle root are traversed. Instances can apply the policy to arbitrary focus cycle roots, allowing themselves to be shared across Containers. They do not need to be reinitialized when the focus cycle roots of a Component hierarchy change.</source>
          <target state="translated">FocusTraversalPolicy は、特定のフォーカス サイクル ルートを持つコンポーネントがトラバースされる順序を定義します。インスタンスは、任意のフォーカス サイクル ルートにポリシーを適用して、それ自体をコンテナ間で共有できるようにすることができます。コンポーネント階層のフォーカス サイクル ルートが変更されたときに再初期化する必要はありません。</target>
        </trans-unit>
        <trans-unit id="302ac4a992098dd291ee9fbed1be3b0b5de7f45a" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy that determines traversal order based on the order of child Components in a Container.</source>
          <target state="translated">コンテナ内の子コンポーネントの順番に基づいて探索順序を決定する FocusTraversalPolicy。</target>
        </trans-unit>
        <trans-unit id="274bc4a822765b08e82d940279bca9411febe9a1" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy that determines traversal order based on the order of child Components in a Container. From a particular focus cycle root, the policy makes a pre-order traversal of the Component hierarchy, and traverses a Container's children according to the ordering of the array returned by &lt;code&gt;Container.getComponents()&lt;/code&gt;. Portions of the hierarchy that are not visible and displayable will not be searched.</source>
          <target state="translated">A FocusTraversalPolicy that determines traversal order based on the order of child Components in a Container. From a particular focus cycle root, the policy makes a pre-order traversal of the Component hierarchy, and traverses a Container's children according to the ordering of the array returned by &lt;code&gt;Container.getComponents()&lt;/code&gt; . Portions of the hierarchy that are not visible and displayable will not be searched.</target>
        </trans-unit>
        <trans-unit id="16d3e951d9cfb4b5c0983d839e0275daab570b30" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy that determines traversal order by sorting the Components of a focus traversal cycle based on a given Comparator.</source>
          <target state="translated">指定されたコンパレータに基づいてフォーカス走査サイクルのコンポーネントをソートすることにより、走査順序を決定する FocusTraversalPolicy。</target>
        </trans-unit>
        <trans-unit id="28e6d08b1a0a8ff91d5931eea821c9b751c3af21" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy that determines traversal order by sorting the Components of a focus traversal cycle based on a given Comparator. Portions of the Component hierarchy that are not visible and displayable will not be included.</source>
          <target state="translated">指定されたコンパレータに基づいてフォーカス トラバーサル サイクルのコンポーネントをソートすることで、トラバーサル順序を決定する FocusTraversalPolicy。コンポーネント階層のうち、表示できない部分は含まれません。</target>
        </trans-unit>
        <trans-unit id="698aaf8759f47e00f9e85c5a656eba498985410d" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy which can optionally provide an algorithm for determining a JInternalFrame's initial Component.</source>
          <target state="translated">オプションで、JInternalFrameの初期コンポーネントを決定するためのアルゴリズムを提供することができるFocusTraversalPolicy。</target>
        </trans-unit>
        <trans-unit id="603c6fd19f8c9bfa4462453a5c87aa26a6d0596a" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy which can optionally provide an algorithm for determining a JInternalFrame's initial Component. The initial Component is the first to receive focus when the JInternalFrame is first selected. By default, this is the same as the JInternalFrame's default Component to focus.</source>
          <target state="translated">オプションで、JInternalFrameの初期コンポーネントを決定するためのアルゴリズムを提供することができるFocusTraversalPolicy。初期コンポーネントは、JInternalFrame が最初に選択されたときに最初にフォーカスを受けるコンポーネントです。デフォルトでは、これは JInternalFrame のデフォルトのフォーカス対象コンポーネントと同じです。</target>
        </trans-unit>
        <trans-unit id="ecb63af3753ed032809d47c9dac0e904126fcbc0" translate="yes" xml:space="preserve">
          <source>A Format</source>
          <target state="translated">書式</target>
        </trans-unit>
        <trans-unit id="bbcc0a1f7b91d484f43961c41f2b9e4a4e5bee04" translate="yes" xml:space="preserve">
          <source>A Formatter provides support for formatting LogRecords.</source>
          <target state="translated">Formatter は LogRecords のフォーマットをサポートします。</target>
        </trans-unit>
        <trans-unit id="3608d52e4dbd328bc721e5e2b9946b7f8c5348fb" translate="yes" xml:space="preserve">
          <source>A Future representing the result of the operation</source>
          <target state="translated">A 操作の結果を表す未来</target>
        </trans-unit>
        <trans-unit id="77df36e7d76d3d9d3302e4a05f0c08c1f7c69e5b" translate="yes" xml:space="preserve">
          <source>A GlyphView is a styled chunk of text that represents a view mapped over an element in the text model.</source>
          <target state="translated">GlyphViewは、テキストモデル内の要素にマップされたビューを表す、スタイル化されたテキストの塊です。</target>
        </trans-unit>
        <trans-unit id="fe06c64887e8525641c9b2e3bf0d0229ff870a18" translate="yes" xml:space="preserve">
          <source>A GlyphView is a styled chunk of text that represents a view mapped over an element in the text model. This view is generally responsible for displaying text glyphs using character level attributes in some way. An implementation of the GlyphPainter class is used to do the actual rendering and model/view translations. This separates rendering from layout and management of the association with the model.</source>
          <target state="translated">GlyphView は、テキストモデル内の要素の上にマップされたビューを表す、スタイル化されたテキストの塊です。このビューは一般的に、何らかの方法で文字レベルの属性を使用してテキストグリフを表示する役割を果たします。GlyphPainterクラスの実装が、実際のレンダリングとモデル/ビューの変換を行うために使用されます。これにより、レンダリングとレイアウト、モデルとの関連付けの管理が分離されます。</target>
        </trans-unit>
        <trans-unit id="457cb135519bf29ef81b844625f7d44dfa89268c" translate="yes" xml:space="preserve">
          <source>A Graphic Control Extension block is written to the output stream only if image metadata containing a GraphicControlExtension element is supplied to the writer, or no image metadata is supplied and the local color table generated from the image requires a transparent index. Application, Plain Text, and Comment Extension blocks are written only if they are supplied to the writer via image metadata.</source>
          <target state="translated">GraphicControlExtension 要素を含む画像 メ タ デー タ が書 き 手に与え ら れている場合、 または画像 メ タ デー タ が与え ら れておらず、 画像か ら 生成 さ れた ロ ーカルな色表が透過 イ ンデ ッ ク ス を必要 と し ている場合にのみ、 Graphic Control Extension ブ ロ ッ ク が出力ス ト リ ームに書 き 出 さ れます。Application ・ Plain Text ・ Comment Extension ブ ロ ッ ク は、 それらが画像 メ タ デー タ を通 じ て ラ イ タ ーに与え ら れた場合にのみ書き込まれます。</target>
        </trans-unit>
        <trans-unit id="af50eb5591ce520db7166060578eb5119637a841" translate="yes" xml:space="preserve">
          <source>A GuardedObject encapsulates a target object and a Guard object, such that access to the target object is possible only if the Guard object allows it. Once an object is encapsulated by a GuardedObject, access to that object is controlled by the &lt;code&gt;getObject&lt;/code&gt; method, which invokes the &lt;code&gt;checkGuard&lt;/code&gt; method on the Guard object that is guarding access. If access is not allowed, an exception is thrown.</source>
          <target state="translated">GuardedObjectは、ターゲットオブジェクトとGuardオブジェクトをカプセル化します。これにより、Guardオブジェクトで許可されている場合にのみ、ターゲットオブジェクトへのアクセスが可能になります。オブジェクトがGuardedObjectによってカプセル化されると、そのオブジェクトへのアクセスは、アクセスを &lt;code&gt;checkGuard&lt;/code&gt; しているGuardオブジェクトのcheckGuardメソッドを呼び出す &lt;code&gt;getObject&lt;/code&gt; メソッドによって制御されます。アクセスが許可されていない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="0d2351b4772e9dd16b7c18f880f43463fbe76dff" translate="yes" xml:space="preserve">
          <source>A GuardedObject is an object that is used to protect access to another object.</source>
          <target state="translated">GuardedObject は、別のオブジェクトへのアクセスを保護するために使用されるオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="a8cab0413a630393329d2147838049ef36d1f63c" translate="yes" xml:space="preserve">
          <source>A High Level API</source>
          <target state="translated">高レベルAPI</target>
        </trans-unit>
        <trans-unit id="4b568137ce228a499651a74987888d9f610f408c" translate="yes" xml:space="preserve">
          <source>A JDBC &lt;code&gt;FilteredRowSet&lt;/code&gt; standard implementation implements the &lt;code&gt;RowSet&lt;/code&gt; interfaces and extends the &lt;code&gt;CachedRowSet&lt;/code&gt;&amp;trade; class. The &lt;code&gt;CachedRowSet&lt;/code&gt; class provides a set of protected cursor manipulation methods, which a &lt;code&gt;FilteredRowSet&lt;/code&gt; implementation can override to supply filtering support.</source>
          <target state="translated">A JDBC &lt;code&gt;FilteredRowSet&lt;/code&gt; standard implementation implements the &lt;code&gt;RowSet&lt;/code&gt; interfaces and extends the &lt;code&gt;CachedRowSet&lt;/code&gt; &amp;trade; class. The &lt;code&gt;CachedRowSet&lt;/code&gt; class provides a set of protected cursor manipulation methods, which a &lt;code&gt;FilteredRowSet&lt;/code&gt; implementation can override to supply filtering support.</target>
        </trans-unit>
        <trans-unit id="f0c4285b19f9b0fd1c94cb6a7db61c10c4f56263" translate="yes" xml:space="preserve">
          <source>A JDBC driver implementation should use the constructor &lt;code&gt;BatchUpdateException(String reason, String SQLState,
 int vendorCode, long []updateCounts,Throwable cause) &lt;/code&gt; instead of constructors that take &lt;code&gt;int[]&lt;/code&gt; for the update counts to avoid the possibility of overflow.</source>
          <target state="translated">A JDBC driver implementation should use the constructor &lt;code&gt;BatchUpdateException(String reason, String SQLState, int vendorCode, long []updateCounts,Throwable cause) &lt;/code&gt; instead of constructors that take &lt;code&gt;int[]&lt;/code&gt; for the update counts to avoid the possibility of overflow.</target>
        </trans-unit>
        <trans-unit id="afe77a9a4f253a94bef7be1d1c15dad00d77f18e" translate="yes" xml:space="preserve">
          <source>A JDBC driver may create a &lt;a href=&quot;driveraction&quot;&gt;DriverAction&lt;/a&gt; implementation in order to receive notifications when &lt;a href=&quot;drivermanager#deregisterDriver(java.sql.Driver)&quot;&gt;DriverManager.deregisterDriver(java.sql.Driver)&lt;/a&gt; has been called.</source>
          <target state="translated">A JDBC driver may create a &lt;a href=&quot;driveraction&quot;&gt;DriverAction&lt;/a&gt; implementation in order to receive notifications when &lt;a href=&quot;drivermanager#deregisterDriver(java.sql.Driver)&quot;&gt;DriverManager.deregisterDriver(java.sql.Driver)&lt;/a&gt; has been called.</target>
        </trans-unit>
        <trans-unit id="ff73ce0cbe8e77a9a813ec78bb01ad5e71852504" translate="yes" xml:space="preserve">
          <source>A JMX API connector server that creates RMI-based connections from remote clients.</source>
          <target state="translated">リモートクライアントからRMIベースの接続を作成するJMX APIコネクタサーバ。</target>
        </trans-unit>
        <trans-unit id="f3afe2bdfa3c0dbc4a8b8de29b9607e68d7a3f26" translate="yes" xml:space="preserve">
          <source>A JMX API connector server that creates RMI-based connections from remote clients. Usually, such connector servers are made using &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorserverfactory&quot;&gt;&lt;code&gt;JMXConnectorServerFactory&lt;/code&gt;&lt;/a&gt;. However, specialized applications can use this class directly, for example with an &lt;a href=&quot;rmiserverimpl&quot;&gt;&lt;code&gt;RMIServerImpl&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">A JMX API connector server that creates RMI-based connections from remote clients. Usually, such connector servers are made using &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorserverfactory&quot;&gt; &lt;code&gt;JMXConnectorServerFactory&lt;/code&gt; &lt;/a&gt;. However, specialized applications can use this class directly, for example with an &lt;a href=&quot;rmiserverimpl&quot;&gt; &lt;code&gt;RMIServerImpl&lt;/code&gt; &lt;/a&gt; object.</target>
        </trans-unit>
        <trans-unit id="ae6c98f065b6700b78cceaae125cd30aa4ee675a" translate="yes" xml:space="preserve">
          <source>A JMX API connector server that creates RMI-based connections from remote clients. Usually, such connector servers are made using &lt;a href=&quot;../jmxconnectorserverfactory&quot;&gt;&lt;code&gt;JMXConnectorServerFactory&lt;/code&gt;&lt;/a&gt;. However, specialized applications can use this class directly, for example with an &lt;a href=&quot;rmiserverimpl&quot;&gt;&lt;code&gt;RMIServerImpl&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">リモートクライアントからRMIベースの接続を作成するJMX APIコネクタサーバー。通常、このようなコネクタサーバーは&lt;a href=&quot;../jmxconnectorserverfactory&quot;&gt; &lt;code&gt;JMXConnectorServerFactory&lt;/code&gt; &lt;/a&gt;を使用して作成されます。ただし、特殊なアプリケーションは、&lt;a href=&quot;rmiserverimpl&quot;&gt; &lt;code&gt;RMIServerImpl&lt;/code&gt; &lt;/a&gt;オブジェクトなどを使用して、このクラスを直接使用できます。</target>
        </trans-unit>
        <trans-unit id="b7e6c2614e2f71adc4152c814a2dce219bcaa2a4" translate="yes" xml:space="preserve">
          <source>A Jar directory</source>
          <target state="translated">ジャーディレクトリ</target>
        </trans-unit>
        <trans-unit id="6dc19b4c0c9bf7e2c340017f908ce07b36d720a9" translate="yes" xml:space="preserve">
          <source>A Jar entry</source>
          <target state="translated">ジャーエントリー</target>
        </trans-unit>
        <trans-unit id="33f576854d1202217500a73131dc51de90b4477a" translate="yes" xml:space="preserve">
          <source>A Jar file</source>
          <target state="translated">ジャーファイル</target>
        </trans-unit>
        <trans-unit id="297b2a16ec407bba3eff5fdf89b75e43355d9a86" translate="yes" xml:space="preserve">
          <source>A Java L&amp;amp;F implementation of SliderUI.</source>
          <target state="translated">A Java L&amp;amp;F implementation of SliderUI.</target>
        </trans-unit>
        <trans-unit id="1da6827faf9d07ac2f0b35aead3537d4219ce887" translate="yes" xml:space="preserve">
          <source>A Java Print Service instance is allowed to support any other doc flavors (or none) in addition to the above mandatory ones, at the implementation's choice.</source>
          <target state="translated">Java Print Serviceインスタンスは、実装の選択により、上記の必須のものに加えて、他のdocフレーバー(またはなし)をサポートすることが許されています。</target>
        </trans-unit>
        <trans-unit id="a66aee2d7211302980680b8958d4f89d8a39a52b" translate="yes" xml:space="preserve">
          <source>A Java Print Service instance is not &lt;b&gt;&lt;i&gt;required&lt;/i&gt;&lt;/b&gt; to support the following print data formats and print data representation classes. In fact, a developer using this class should &lt;b&gt;never&lt;/b&gt; assume that a particular print service supports the document types corresponding to these pre-defined doc flavors. Always query the print service to determine what doc flavors it supports. However, developers who have print services that support these doc flavors are encouraged to refer to the predefined singleton instances created here.</source>
          <target state="translated">Java Print Serviceインスタンスは、次の印刷データ形式と印刷データ表現クラスをサポートする&lt;b&gt;&lt;i&gt;必要&lt;/i&gt;&lt;/b&gt;はありません。実際、このクラスを使用する開発者は、特定の印刷サービスがこれらの事前定義されたdocフレーバーに対応するドキュメントタイプをサポートしていると&lt;b&gt;決して&lt;/b&gt;想定し&lt;b&gt;ないで&lt;/b&gt;ください。常に印刷サービスに問い合わせて、サポートしているドキュメントフレーバーを確認してください。ただし、これらのdocフレーバーをサポートする印刷サービスを持っている開発者は、ここで作成された事前定義のシングルトンインスタンスを参照することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="80192c859d3924988eb6d8c333ea17126c2df7c7" translate="yes" xml:space="preserve">
          <source>A Java Virtual Machine implementation may hide implementation specific frames in addition to &lt;a href=&quot;#SHOW_REFLECT_FRAMES&quot;&gt;reflection frames&lt;/a&gt;. A &lt;code&gt;StackWalker&lt;/code&gt; with this &lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt; option will show all hidden frames (including reflection frames).</source>
          <target state="translated">A Java Virtual Machine implementation may hide implementation specific frames in addition to &lt;a href=&quot;#SHOW_REFLECT_FRAMES&quot;&gt;reflection frames&lt;/a&gt;. A &lt;code&gt;StackWalker&lt;/code&gt; with this &lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt; option will show all hidden frames (including reflection frames).</target>
        </trans-unit>
        <trans-unit id="8d892ffdda46a2fc60c6a1d8a7c68c1f25ce0467" translate="yes" xml:space="preserve">
          <source>A Java class can implement this interface to indicate how it is to be converted into a &lt;code&gt;CompositeData&lt;/code&gt; by the MXBean framework.</source>
          <target state="translated">Javaクラスはこのインターフェースを実装して、MXBeanフレームワークによって &lt;code&gt;CompositeData&lt;/code&gt; に変換される方法を示すことができます。</target>
        </trans-unit>
        <trans-unit id="6edf0111df61af6dbdeb9ee50bfaf78d76b3ee69" translate="yes" xml:space="preserve">
          <source>A Java method call expression naming &lt;code&gt;invokeExact&lt;/code&gt; or &lt;code&gt;invoke&lt;/code&gt; can invoke a method handle from Java source code. From the viewpoint of source code, these methods can take any arguments and their result can be cast to any return type. Formally this is accomplished by giving the invoker methods &lt;code&gt;Object&lt;/code&gt; return types and variable arity &lt;code&gt;Object&lt;/code&gt; arguments, but they have an additional quality called &lt;em&gt;signature polymorphism&lt;/em&gt; which connects this freedom of invocation directly to the JVM execution stack.</source>
          <target state="translated">&lt;code&gt;invokeExact&lt;/code&gt; または &lt;code&gt;invoke&lt;/code&gt; を命名するJavaメソッド呼び出し式は、Javaソースコードからメソッドハンドルを呼び出すことができます。ソースコードの観点から、これらのメソッドは任意の引数を取ることができ、その結果は任意の戻り値の型にキャストできます。正式には、これは、呼び出し元のメソッドに &lt;code&gt;Object&lt;/code&gt; 戻り値の型と可変アリティの &lt;code&gt;Object&lt;/code&gt; 引数を与えることによって実現されますが、これらには、呼び出しのこの自由をJVM実行スタックに直接接続する&lt;em&gt;署名多態&lt;/em&gt;性と呼ばれる追加の品質があります。</target>
        </trans-unit>
        <trans-unit id="1bc0756c84e38c0f95a41e93652ab4f8e248990e" translate="yes" xml:space="preserve">
          <source>A Java method call expression naming an access mode method can invoke a VarHandle from Java source code. From the viewpoint of source code, these methods can take any arguments and their polymorphic result (if expressed) can be cast to any return type. Formally this is accomplished by giving the access mode methods variable arity &lt;code&gt;Object&lt;/code&gt; arguments and &lt;code&gt;Object&lt;/code&gt; return types (if the return type is polymorphic), but they have an additional quality called &lt;em&gt;signature polymorphism&lt;/em&gt; which connects this freedom of invocation directly to the JVM execution stack.</source>
          <target state="translated">A Java method call expression naming an access mode method can invoke a VarHandle from Java source code. From the viewpoint of source code, these methods can take any arguments and their polymorphic result (if expressed) can be cast to any return type. Formally this is accomplished by giving the access mode methods variable arity &lt;code&gt;Object&lt;/code&gt; arguments and &lt;code&gt;Object&lt;/code&gt; return types (if the return type is polymorphic), but they have an additional quality called &lt;em&gt;signature polymorphism&lt;/em&gt; which connects this freedom of invocation directly to the JVM execution stack.</target>
        </trans-unit>
        <trans-unit id="58e91acafe8fe67ec2c2ccabb641a8ae3f696d06" translate="yes" xml:space="preserve">
          <source>A Java object cannot be registered in the MBeanServer unless it is a JMX compliant MBean. By instantiating a RequiredModelMBean, resources are guaranteed that the MBean is valid. MBeanException and RuntimeOperationsException must be thrown on every public method. This allows for wrapping exceptions from distributed communications (RMI, EJB, etc.)</source>
          <target state="translated">Java オブジェクトは、JMX 準拠の MBean でなければ MBeanServer に登録できません。RequiredModelMBeanをインスタンス化することで、リソースはMBeanが有効であることが保証されます。MBeanExceptionとRuntimeOperationsExceptionは、すべてのパブリックメソッドでスローされなければなりません。これにより、分散通信(RMI、EJBなど)からの例外をラッピングすることができます。</target>
        </trans-unit>
        <trans-unit id="e09f03419e3950f2881774c48754316dc68ddd62" translate="yes" xml:space="preserve">
          <source>A Java platform implementation may support only a limited, non-empty set of echo characters. Attempts to set an unsupported echo character will cause the default echo character to be used instead. Subsequent calls to getEchoChar() will return the echo character originally requested. This might or might not be identical to the echo character actually used by the TextField implementation.</source>
          <target state="translated">Java プラットフォームの実装では、限られた、空ではないエコー文字のセットしかサポートしていない場合があります。サポートしていないエコー文字を設定しようとすると、代わりにデフォルトのエコー文字が使用されます。その後に getEchoChar()をコールすると、最初に要求されたエコー文字が返されます。これは、TextField の実装で実際に使用されているエコー文字と同一である可能性もあれば、同一でない可能性もあります。</target>
        </trans-unit>
        <trans-unit id="095bc22faf4c5e3630fb6dfd307c760dbd1d9547" translate="yes" xml:space="preserve">
          <source>A Java platform implementation may support only a limited, non-empty set of echo characters. This function returns the echo character originally requested via setEchoChar(). The echo character actually used by the TextField implementation might be different.</source>
          <target state="translated">Java プラットフォームの実装では、限られた空ではないエコー文字のセットしかサポートしていない場合があります。この関数は、 setEchoChar()で最初に要求されたエコー文字を返します。TextField の実装で実際に使用されるエコー文字は異なる可能性があります。</target>
        </trans-unit>
        <trans-unit id="58c03aa680d8c3910bd52a6133e2ef98635461ef" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the following management interfaces:</source>
          <target state="translated">Java 仮想マシンは、以下の管理インターフェイスの単一インスタンスを持っています。</target>
        </trans-unit>
        <trans-unit id="1ec588c4eb2d7f429dc6d90136bd82c63be83482" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getClassLoadingMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getClassLoadingMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getClassLoadingMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getClassLoadingMXBean()&lt;/code&gt; &lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="70c8f67671b8966ac11b075966365897c84518be" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getClassLoadingMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getClassLoadingMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Java仮想マシンには、このインターフェースの実装クラスの単一のインスタンスがあります。このインターフェースを実装するこのインスタンスは、&lt;a href=&quot;managementfactory#getClassLoadingMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getClassLoadingMXBean()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すか、&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;MBeanServer&lt;/code&gt; から取得できる&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="697fcfae7e6cab80b51bc022451b82dddc540831" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getCompilationMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getCompilationMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getCompilationMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getCompilationMXBean()&lt;/code&gt; &lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="347e8813cc60d56413338a44f31ad5ee9c2fa302" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getCompilationMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getCompilationMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java仮想マシンには、このインターフェースの実装クラスの単一のインスタンスがあります。このインターフェースを実装するこのインスタンスは、&lt;a href=&quot;managementfactory#getCompilationMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getCompilationMXBean()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すか、&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;MBeanServer&lt;/code&gt; メソッドから取得できる&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="3a90239fd82a5490b3ea8e410880f47d3498d8d2" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt; &lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="5fa8db4ab567a59fc5f60ec01c6e824fe7c05a22" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java仮想マシンには、このインターフェースの実装クラスの単一のインスタンスがあります。このインターフェースを実装するこのインスタンスは、&lt;a href=&quot;managementfactory#getMemoryMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すか、&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;MBeanServer&lt;/code&gt; メソッドから取得できる&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="4705fea51ed57ff81141225fcc84ffcaa313f0e7" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getOperatingSystemMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getOperatingSystemMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getOperatingSystemMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getOperatingSystemMXBean()&lt;/code&gt; &lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="67d5e334705bccf69af8d75f22e7f727e30e55d9" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getOperatingSystemMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getOperatingSystemMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java仮想マシンには、このインターフェースの実装クラスの単一のインスタンスがあります。このインターフェイスを実装するこのインスタンスは、&lt;a href=&quot;managementfactory#getOperatingSystemMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getOperatingSystemMXBean()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すか、&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;MBeanServer&lt;/code&gt; メソッドから取得できる&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="9147b460a50b435cc53f63706f359ace7746be8c" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getRuntimeMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getRuntimeMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getRuntimeMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getRuntimeMXBean()&lt;/code&gt; &lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="afc0758b2e4f293302644dac2a4656ff98d653c2" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getRuntimeMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getRuntimeMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java仮想マシンには、このインターフェースの実装クラスの単一のインスタンスがあります。このインターフェイスを実装するこのインスタンスは、&lt;a href=&quot;managementfactory#getRuntimeMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getRuntimeMXBean()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すか、&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;MBeanServer&lt;/code&gt; メソッドから取得できる&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="ee17a3fa41a1ceba5841d3cf559df83560728d76" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getThreadMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getThreadMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getThreadMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getThreadMXBean()&lt;/code&gt; &lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="cde8a42465b0560c9bd42d46d1f0eabb338a9d89" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getThreadMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getThreadMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java仮想マシンには、このインターフェースの実装クラスの単一のインスタンスがあります。このインターフェースを実装するこのインスタンスは、&lt;a href=&quot;managementfactory#getThreadMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getThreadMXBean()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すか、&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; &lt;code&gt;MBeanServer&lt;/code&gt; メソッドから取得できる&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="474a94763f2c5c22a83857e1b426a51503734da1" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has at least one non-empty layer, the &lt;a href=&quot;#boot()&quot;&gt;&lt;code&gt;boot&lt;/code&gt;&lt;/a&gt; layer, that is created when the Java virtual machine is started. The boot layer contains module &lt;code&gt;java.base&lt;/code&gt; and is the only layer in the Java virtual machine with a module named &quot;&lt;code&gt;java.base&lt;/code&gt;&quot;. The modules in the boot layer are mapped to the bootstrap class loader and other class loaders that are &lt;a href=&quot;classloader#builtinLoaders&quot;&gt; built-in&lt;/a&gt; into the Java virtual machine. The boot layer will often be the &lt;a href=&quot;#parents()&quot;&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/a&gt; when creating additional layers.</source>
          <target state="translated">A Java virtual machine has at least one non-empty layer, the &lt;a href=&quot;#boot()&quot;&gt; &lt;code&gt;boot&lt;/code&gt; &lt;/a&gt; layer, that is created when the Java virtual machine is started. The boot layer contains module &lt;code&gt;java.base&lt;/code&gt; and is the only layer in the Java virtual machine with a module named &quot; &lt;code&gt;java.base&lt;/code&gt; &quot;. The modules in the boot layer are mapped to the bootstrap class loader and other class loaders that are &lt;a href=&quot;classloader#builtinLoaders&quot;&gt; built-in&lt;/a&gt; into the Java virtual machine. The boot layer will often be the &lt;a href=&quot;#parents()&quot;&gt; &lt;code&gt;parent&lt;/code&gt; &lt;/a&gt; when creating additional layers.</target>
        </trans-unit>
        <trans-unit id="8e05fc4a55f98c87df7022394b7fa8fb70a14dce" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has one or more instances of the implementation class of this interface. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryPoolMXBeans()&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryPoolMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">A Java virtual machine has one or more instances of the implementation class of this interface. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryPoolMXBeans()&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryPoolMXBeans()&lt;/code&gt; &lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="5cdd50ff313fa53fb85c54c49e1ba0d35d26a61b" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has one or more instances of the implementation class of this interface. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryPoolMXBeans--&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryPoolMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java仮想マシンには、このインターフェースの実装クラスの1つ以上のインスタンスがあります。このインターフェースを実装するインスタンスは&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;であり、&lt;a href=&quot;managementfactory#getMemoryPoolMXBeans--&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryPoolMXBeans()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すか、&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドから取得できます。</target>
        </trans-unit>
        <trans-unit id="6850a97c2118b0e5557ce433324f39f61a7bcbcb" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has one or more memory managers. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryManagerMXBeans()&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryManagerMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">A Java virtual machine has one or more memory managers. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryManagerMXBeans()&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryManagerMXBeans()&lt;/code&gt; &lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="8a6b48dc53a0805d7177ee1ae5c3d1d720dd2b4d" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has one or more memory managers. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryManagerMXBeans--&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryManagerMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java仮想マシンには、1つ以上のメモリマネージャがあります。このインターフェイスを実装するインスタンスは&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;であり、&lt;a href=&quot;managementfactory#getMemoryManagerMXBeans--&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryManagerMXBeans()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すか、&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドから取得できます。</target>
        </trans-unit>
        <trans-unit id="7690649d409fc24f67e4adade638be6ff2f11b9b" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has zero or a single instance of the following management interfaces.</source>
          <target state="translated">Java 仮想マシンは、以下の管理インターフェイスのインスタンスが 0 個または 1 個あります。</target>
        </trans-unit>
        <trans-unit id="3643080b6a5df5b46e7094eca6936cb87018df88" translate="yes" xml:space="preserve">
          <source>A Java virtual machine implementation may add its platform extension to the management interface by defining platform-dependent interfaces that extend the standard management interfaces to include platform-specific metrics and management operations. The static factory methods in the &lt;code&gt;ManagementFactory&lt;/code&gt; class will return the MXBeans with the platform extension.</source>
          <target state="translated">Java仮想マシンの実装では、プラットフォーム固有のメトリックと管理操作を含めるように標準管理インターフェースを拡張するプラットフォーム依存のインターフェースを定義することにより、そのプラットフォーム拡張を管理インターフェースに追加できます。 &lt;code&gt;ManagementFactory&lt;/code&gt; クラスの静的ファクトリメソッドは、プラットフォーム拡張を備えたMXBeanを返します。</target>
        </trans-unit>
        <trans-unit id="aa2fce070965d52fff3fd77ec7dbd45ec8214fd6" translate="yes" xml:space="preserve">
          <source>A Java virtual machine implementation may not support the boot class path mechanism for the bootstrap class loader to search for class files. The &lt;a href=&quot;#isBootClassPathSupported()&quot;&gt;&lt;code&gt;isBootClassPathSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if the Java virtual machine supports this method.</source>
          <target state="translated">A Java virtual machine implementation may not support the boot class path mechanism for the bootstrap class loader to search for class files. The &lt;a href=&quot;#isBootClassPathSupported()&quot;&gt; &lt;code&gt;isBootClassPathSupported()&lt;/code&gt; &lt;/a&gt; method can be used to determine if the Java virtual machine supports this method.</target>
        </trans-unit>
        <trans-unit id="0fdebaa2381914e0bb13323b3f7999aa8c1d3f43" translate="yes" xml:space="preserve">
          <source>A Java virtual machine implementation may not support the boot class path mechanism for the bootstrap class loader to search for class files. The &lt;a href=&quot;runtimemxbean#isBootClassPathSupported--&quot;&gt;&lt;code&gt;isBootClassPathSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if the Java virtual machine supports this method.</source>
          <target state="translated">Java仮想マシンの実装では、ブートストラップクラスローダーがクラスファイルを検索するためのブートクラスパスメカニズムをサポートしていない場合があります。&lt;a href=&quot;runtimemxbean#isBootClassPathSupported--&quot;&gt; &lt;code&gt;isBootClassPathSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンがこのメソッドをサポートしているかどうかを判断するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="cbbf7263ee3ada105d25e3a25dac19fb977c0afe" translate="yes" xml:space="preserve">
          <source>A Java virtual machine implementation may support measuring the CPU time for the current thread, for any thread, or for no threads.</source>
          <target state="translated">Java仮想マシンの実装は、現在のスレッド、任意のスレッド、またはスレッドが存在しない場合のCPU時間の測定をサポートしてもよい。</target>
        </trans-unit>
        <trans-unit id="b8771f6593b5af27179c3bb03a94a2816a796c54" translate="yes" xml:space="preserve">
          <source>A Java virtual machine may disable CPU time measurement by default. The &lt;a href=&quot;#isThreadCpuTimeEnabled()&quot;&gt;&lt;code&gt;isThreadCpuTimeEnabled()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#setThreadCpuTimeEnabled(boolean)&quot;&gt;&lt;code&gt;setThreadCpuTimeEnabled(boolean)&lt;/code&gt;&lt;/a&gt; methods can be used to test if CPU time measurement is enabled and to enable/disable this support respectively. Enabling thread CPU measurement could be expensive in some Java virtual machine implementations.</source>
          <target state="translated">A Java virtual machine may disable CPU time measurement by default. The &lt;a href=&quot;#isThreadCpuTimeEnabled()&quot;&gt; &lt;code&gt;isThreadCpuTimeEnabled()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#setThreadCpuTimeEnabled(boolean)&quot;&gt; &lt;code&gt;setThreadCpuTimeEnabled(boolean)&lt;/code&gt; &lt;/a&gt; methods can be used to test if CPU time measurement is enabled and to enable/disable this support respectively. Enabling thread CPU measurement could be expensive in some Java virtual machine implementations.</target>
        </trans-unit>
        <trans-unit id="9fd238169eb9f786a282e184b0797c3100026965" translate="yes" xml:space="preserve">
          <source>A Java virtual machine may disable CPU time measurement by default. The &lt;a href=&quot;threadmxbean#isThreadCpuTimeEnabled--&quot;&gt;&lt;code&gt;isThreadCpuTimeEnabled()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;threadmxbean#setThreadCpuTimeEnabled-boolean-&quot;&gt;&lt;code&gt;setThreadCpuTimeEnabled(boolean)&lt;/code&gt;&lt;/a&gt; methods can be used to test if CPU time measurement is enabled and to enable/disable this support respectively. Enabling thread CPU measurement could be expensive in some Java virtual machine implementations.</source>
          <target state="translated">Java仮想マシンは、デフォルトでCPU時間測定を無効にする場合があります。&lt;a href=&quot;threadmxbean#isThreadCpuTimeEnabled--&quot;&gt; &lt;code&gt;isThreadCpuTimeEnabled()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;threadmxbean#setThreadCpuTimeEnabled-boolean-&quot;&gt; &lt;code&gt;setThreadCpuTimeEnabled(boolean)&lt;/code&gt; &lt;/a&gt; CPU時間測定が有効になっており、この支持体をそれぞれ有効/無効する場合の方法は、試験に使用することができます。一部のJava仮想マシンの実装では、スレッドのCPU測定を有効にすると負荷がかかる可能性があります。</target>
        </trans-unit>
        <trans-unit id="5af48488aaddcec098475db597e0b2ea17a79281" translate="yes" xml:space="preserve">
          <source>A Java virtual machine may have one or more instances of the following management interfaces.</source>
          <target state="translated">Java仮想マシンは、以下の管理インタフェースの1つまたは複数のインスタンスを有していてもよい。</target>
        </trans-unit>
        <trans-unit id="e36433af5b9e48410e17f94fe22c92e9be5113cf" translate="yes" xml:space="preserve">
          <source>A Java virtual machine may have one or more instances of the implementation class of this interface. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getGarbageCollectorMXBeans()&quot;&gt;&lt;code&gt;ManagementFactory.getGarbageCollectorMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">A Java virtual machine may have one or more instances of the implementation class of this interface. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getGarbageCollectorMXBeans()&quot;&gt; &lt;code&gt;ManagementFactory.getGarbageCollectorMXBeans()&lt;/code&gt; &lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="95203d6db041687aade0c2be196517a165b0adcb" translate="yes" xml:space="preserve">
          <source>A Java virtual machine may have one or more instances of the implementation class of this interface. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getGarbageCollectorMXBeans--&quot;&gt;&lt;code&gt;ManagementFactory.getGarbageCollectorMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java仮想マシンには、このインターフェースの実装クラスの1つ以上のインスタンスがある場合があります。このインターフェースを実装するインスタンスは&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;であり、&lt;a href=&quot;managementfactory#getGarbageCollectorMXBeans--&quot;&gt; &lt;code&gt;ManagementFactory.getGarbageCollectorMXBeans()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すか、&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドから取得できます。</target>
        </trans-unit>
        <trans-unit id="efb1cbd2f64596a7e895a5a7b43612a96af7c59d" translate="yes" xml:space="preserve">
          <source>A Java virtual machine performs collection usage threshold checking on a memory pool basis. This checking is enabled if the collection usage threshold is set to a positive value. If the collection usage threshold is set to zero, this checking is disabled on this memory pool. Default value is zero. The Java virtual machine performs the collection usage threshold checking at garbage collection time.</source>
          <target state="translated">Java 仮想マシンは、メモリ プールに基づいてコレクション使用量のしきい値チェックを実行します。このチェックは、コレクション使用量のしきい値が正の値に設定されている場合に有効になります。コレクション使用量のしきい値がゼロに設定されている場合、このチェックはこのメモリ プールで無効になります。既定値はゼロです。Java 仮想マシンは、ガベージ コレクション時にコレクション使用量しきい値のチェックを実行します。</target>
        </trans-unit>
        <trans-unit id="8a86334f9b1ec01b79c33f43a194f31c7eb87240" translate="yes" xml:space="preserve">
          <source>A Java virtual machine performs usage threshold crossing checking on a memory pool basis at its best appropriate time, typically, at garbage collection time. Each memory pool maintains a &lt;a href=&quot;#getUsageThresholdCount()&quot;&gt;&lt;code&gt;usage threshold count&lt;/code&gt;&lt;/a&gt; that will get incremented every time when the Java virtual machine detects that the memory pool usage is crossing the threshold.</source>
          <target state="translated">A Java virtual machine performs usage threshold crossing checking on a memory pool basis at its best appropriate time, typically, at garbage collection time. Each memory pool maintains a &lt;a href=&quot;#getUsageThresholdCount()&quot;&gt; &lt;code&gt;usage threshold count&lt;/code&gt; &lt;/a&gt; that will get incremented every time when the Java virtual machine detects that the memory pool usage is crossing the threshold.</target>
        </trans-unit>
        <trans-unit id="a8b2b51d16e2e228fa4a5cbcce2fb6267e261d1e" translate="yes" xml:space="preserve">
          <source>A Java virtual machine performs usage threshold crossing checking on a memory pool basis at its best appropriate time, typically, at garbage collection time. Each memory pool maintains a &lt;a href=&quot;memorypoolmxbean#getUsageThresholdCount--&quot;&gt;&lt;code&gt;usage threshold count&lt;/code&gt;&lt;/a&gt; that will get incremented every time when the Java virtual machine detects that the memory pool usage is crossing the threshold.</source>
          <target state="translated">Java仮想マシンは、最適な適切な時間（通常はガベージコレクション時）にメモリプールベースで使用率しきい値のチェックを実行します。各メモリプールは、メモリプールの&lt;a href=&quot;memorypoolmxbean#getUsageThresholdCount--&quot;&gt; &lt;code&gt;usage threshold count&lt;/code&gt; &lt;/a&gt;ていることをJava仮想マシンが検出するたびに増加する使用量しきい値を維持します。</target>
        </trans-unit>
        <trans-unit id="657273352ec0c0d17b18a655ec31ad2fce7306d4" translate="yes" xml:space="preserve">
          <source>A JavaBean nested within a BeanContext, may ask that BeanContext to provide an instance of a &quot;service&quot;, based upon a reference to a Java Class object that represents that service.</source>
          <target state="translated">BeanContext内に入れ子になったJavaBeanは,そのBeanContextに,そのサービスを表すJavaクラスオブジェクトへの参照に基づいて,「サービス」のインスタンスを提供するように求めることができる。</target>
        </trans-unit>
        <trans-unit id="cbfa3a04746bf2e669058dbb316d63d08277b0ab" translate="yes" xml:space="preserve">
          <source>A KRB_CRED message is defined in Section 5.8.1 of the Kerberos Protocol Specification (&lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;) as:</source>
          <target state="translated">A KRB_CRED message is defined in Section 5.8.1 of the Kerberos Protocol Specification (&lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;) as:</target>
        </trans-unit>
        <trans-unit id="4856ceba23801dd7f33418aeaae137318b971a6d" translate="yes" xml:space="preserve">
          <source>A Kerberos JAAS login module that obtains long term secret keys from a keytab file should use this class. The login module will store an instance of this class in the private credential set of a &lt;a href=&quot;../../../../../java.base/javax/security/auth/subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt; during the commit phase of the authentication process.</source>
          <target state="translated">A Kerberos JAAS login module that obtains long term secret keys from a keytab file should use this class. The login module will store an instance of this class in the private credential set of a &lt;a href=&quot;../../../../../java.base/javax/security/auth/subject&quot;&gt; &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt; during the commit phase of the authentication process.</target>
        </trans-unit>
        <trans-unit id="3abf2e9662154c3360ad9e12084989fccc02c4fc" translate="yes" xml:space="preserve">
          <source>A Kerberos JAAS login module that obtains long term secret keys from a keytab file should use this class. The login module will store an instance of this class in the private credential set of a &lt;a href=&quot;../subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt; during the commit phase of the authentication process.</source>
          <target state="translated">keytabファイルから長期間の秘密鍵を取得するKerberos JAASログインモジュールは、このクラスを使用する必要があります。ログインモジュールは、認証プロセスのコミットフェーズ中に、このクラスのインスタンスを&lt;a href=&quot;../subject&quot;&gt; &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt;プライベート資格情報セットに格納します。</target>
        </trans-unit>
        <trans-unit id="447d01d458e313cec32a02eaa5cecaa0a26e2112" translate="yes" xml:space="preserve">
          <source>A Kerberos service using a keytab to read secret keys should use the &lt;a href=&quot;keytab&quot;&gt;&lt;code&gt;KeyTab&lt;/code&gt;&lt;/a&gt; class, where latest keys can be read when needed.</source>
          <target state="translated">keytabを使用して秘密鍵を読み取るKerberosサービスは、&lt;a href=&quot;keytab&quot;&gt; &lt;code&gt;KeyTab&lt;/code&gt; &lt;/a&gt;クラスを使用する必要があります。このクラスでは、必要に応じて最新の鍵を読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="0f4eb7d3eddf9e5cdd73c01e702fff914c37ea87" translate="yes" xml:space="preserve">
          <source>A Key pair generator for a particular algorithm creates a public/private key pair that can be used with this algorithm. It also associates algorithm-specific parameters with each of the generated keys.</source>
          <target state="translated">特定のアルゴリズム用の鍵ペア生成器は、そのアルゴリズムで使用できる公開鍵/秘密鍵ペアを生成する。また、生成された鍵のそれぞれにアルゴリズム固有のパラメータを関連付ける。</target>
        </trans-unit>
        <trans-unit id="096673ba135366e0327920d2953045ffc1a73dc8" translate="yes" xml:space="preserve">
          <source>A Key should use KeyRep as its serialized representation. Note that a serialized Key may contain sensitive information which should not be exposed in untrusted environments. See the  Security Appendix of the Serialization Specification for more information.</source>
          <target state="translated">鍵は、そのシリアライズされた表現としてKeyRepを用いるべきである。シリアライズされたKeyには、信頼されない環境では公開されない機密情報が含まれている可能性があることに注意すること。詳細については、シリアライズ仕様のセキュリティ付録を参照のこと。</target>
        </trans-unit>
        <trans-unit id="2dbe2f6e28368d28b4e57a87d42ca110e25332c7" translate="yes" xml:space="preserve">
          <source>A Key should use KeyRep as its serialized representation. Note that a serialized Key may contain sensitive information which should not be exposed in untrusted environments. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/serialization/security.html&quot;&gt; Security Appendix&lt;/a&gt; of the Serialization Specification for more information.</source>
          <target state="translated">A Key should use KeyRep as its serialized representation. Note that a serialized Key may contain sensitive information which should not be exposed in untrusted environments. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/serialization/security.html&quot;&gt; Security Appendix&lt;/a&gt; of the Serialization Specification for more information.</target>
        </trans-unit>
        <trans-unit id="3465d18f7c958f4eeced04692ba85e06b354c9ec" translate="yes" xml:space="preserve">
          <source>A KeyAlreadyExistsException with a detail message.</source>
          <target state="translated">KeyAlreadyExistsException(詳細メッセージ付き)。</target>
        </trans-unit>
        <trans-unit id="e37b2fbff6d8ebf1d7b8bd7d21ae02fa2e660373" translate="yes" xml:space="preserve">
          <source>A KeyAlreadyExistsException with no detail message.</source>
          <target state="translated">KeyAlreadyExistsExceptionで、詳細なメッセージはありません。</target>
        </trans-unit>
        <trans-unit id="8bc4eacbad1d0c40ed7878a2f885b6d5f62533b7" translate="yes" xml:space="preserve">
          <source>A KeyEventDispatcher cooperates with the current KeyboardFocusManager in the targeting and dispatching of all KeyEvents.</source>
          <target state="translated">KeyEventDispatcher は、すべての KeyEvent のターゲット化とディスパッチにおいて、現在の KeyboardFocusManager と協力します。</target>
        </trans-unit>
        <trans-unit id="ac54a63dd2de6f1d147a892a47d92518fafab8e3" translate="yes" xml:space="preserve">
          <source>A KeyEventDispatcher cooperates with the current KeyboardFocusManager in the targeting and dispatching of all KeyEvents. KeyEventDispatchers registered with the current KeyboardFocusManager will receive KeyEvents before they are dispatched to their targets, allowing each KeyEventDispatcher to retarget the event, consume it, dispatch the event itself, or make other changes.</source>
          <target state="translated">KeyEventDispatcher は、現在の KeyboardFocusManager と協力して、すべての KeyEvent のターゲット化とディスパッチを行います。現在の KeyboardFocusManager に登録されている KeyEventDispatcher は、ターゲットにディスパッチされる前に KeyEvent を受信するため、各 KeyEventDispatcher はイベントを再ターゲットしたり、消費したり、イベント自体をディスパッチしたり、その他の変更を行うことができます。</target>
        </trans-unit>
        <trans-unit id="bed31dbb99340dc18c4a0575e4637bb187d0fa64" translate="yes" xml:space="preserve">
          <source>A KeyEventPostProcessor cooperates with the current KeyboardFocusManager in the final resolution of all unconsumed KeyEvents.</source>
          <target state="translated">KeyEventPostProcessorは、消費されていないすべてのKeyEventの最終的な解決において、現在のKeyboardFocusManagerと協力します。</target>
        </trans-unit>
        <trans-unit id="60e283cd00d232003055cd84c668841c63a28591" translate="yes" xml:space="preserve">
          <source>A KeyEventPostProcessor cooperates with the current KeyboardFocusManager in the final resolution of all unconsumed KeyEvents. KeyEventPostProcessors registered with the current KeyboardFocusManager will receive KeyEvents after the KeyEvents have been dispatched to and handled by their targets. KeyEvents that would have been otherwise discarded because no Component in the application currently owns the focus will also be forwarded to registered KeyEventPostProcessors. This will allow applications to implement features that require global KeyEvent post-handling, such as menu shortcuts.</source>
          <target state="translated">KeyEventPostProcessorは、消費されないすべてのKeyEventの最終的な解決において、現在のKeyboardFocusManagerと協力します。現在の KeyboardFocusManager に登録された KeyEventPostProcessor は、KeyEvent がターゲットにディスパッチされて処理された後、KeyEvent を受け取ります。アプリケーション内のコンポーネントが現在フォーカスを所有していないために破棄されたであろうKeyEventも、登録されたKeyEventPostProcessorsに転送されます。これにより、アプリケーションは、メニュー・ショートカットのようなグローバルなKeyEventのポスト処理を必要とする機能を実装できるようになります。</target>
        </trans-unit>
        <trans-unit id="7d43ddd3fd0e04d7152918c4a6544b9288fdb112" translate="yes" xml:space="preserve">
          <source>A KeyStroke represents a key action on the keyboard, or equivalent input device.</source>
          <target state="translated">キーストロークは、キーボードまたはそれに相当する入力デバイス上のキーアクションを表します。</target>
        </trans-unit>
        <trans-unit id="df1b8e126758b85c9a9308b975a57f80e0949491" translate="yes" xml:space="preserve">
          <source>A KeyStroke represents a key action on the keyboard, or equivalent input device. KeyStrokes can correspond to only a press or release of a particular key, just as KEY_PRESSED and KEY_RELEASED KeyEvents do; alternately, they can correspond to typing a specific Java character, just as KEY_TYPED KeyEvents do. In all cases, KeyStrokes can specify modifiers (alt, shift, control, meta, altGraph, or a combination thereof) which must be present during the action for an exact match.</source>
          <target state="translated">キーストロークは、キーボードやそれに相当する入力デバイス上のキーアクションを表します。KEY_PRESSED キーイベントや KEY_RELEASEED キーイベントがそうであるように、キーストロークは特定のキーの押下やリリースのみに対応することもできますが、逆に、KEY_TYPED キーイベントがそうであるように、特定の Java 文字の入力に対応することもできます。いずれの場合も、キーストロークは、完全に一致するためにアクション中に存在しなければならない修飾子(alt、shift、control、meta、altGraph、またはそれらの組み合わせ)を指定することができます。</target>
        </trans-unit>
        <trans-unit id="f9cb9d5595a420716375bdc90a99c076fa50ccbc" translate="yes" xml:space="preserve">
          <source>A Latin script character (&lt;a href=&quot;#usc&quot;&gt;script&lt;/a&gt;)</source>
          <target state="translated">ラテン文字（&lt;a href=&quot;#usc&quot;&gt;スクリプト&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="3df86ed1a5c5d9a4c4287bba1036f7e47b615722" translate="yes" xml:space="preserve">
          <source>A LinkException instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single LinkException instance should lock the object.</source>
          <target state="translated">LinkException インスタンスは、同時多発的なマルチスレッドアクセスに対して同期化されません。1 つの LinkException インスタンスにアクセスして変更しようとする複数のスレッドは、オブジェクトをロックする必要があります。</target>
        </trans-unit>
        <trans-unit id="b68abbabb6e97ad8331f3d5518e74f7c062df9f1" translate="yes" xml:space="preserve">
          <source>A LinkRef contains a single StringRefAddr, whose type is &quot;LinkAddress&quot;, and whose contents is the link name. The class name field of the Reference is that of this (LinkRef) class.</source>
          <target state="translated">LinkRefは、型が &quot;LinkAddress &quot;の単一のStringRefAddrを含み、その内容がリンク名となります。Referenceのクラス名フィールドは、この(LinkRef)クラスのものです。</target>
        </trans-unit>
        <trans-unit id="84f7678a14a9b51bae97ebf4cbbebc77f8fd09e2" translate="yes" xml:space="preserve">
          <source>A LinkRef instance is not synchronized against concurrent access by multiple threads. Threads that need to access a LinkRef instance concurrently should synchronize amongst themselves and provide the necessary locking.</source>
          <target state="translated">LinkRef インスタンスは、複数のスレッドによる同時アクセスに対して同期化されません。LinkRef インスタンスに同時にアクセスする必要があるスレッドは、スレッド間で同期化し、必要なロックを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="1a22a9eae003d2fd4d91b57b9501d9c8bd8e05f4" translate="yes" xml:space="preserve">
          <source>A Locale.</source>
          <target state="translated">ロケール。</target>
        </trans-unit>
        <trans-unit id="8e9450ade3577279276bfc67304338bff8c8a567" translate="yes" xml:space="preserve">
          <source>A LogManager initializes the logging configuration via the &lt;a href=&quot;#readConfiguration()&quot;&gt;&lt;code&gt;readConfiguration()&lt;/code&gt;&lt;/a&gt; method during LogManager initialization. By default, LogManager default configuration is used. The logging configuration read by LogManager must be in the &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;properties file&lt;/a&gt; format.</source>
          <target state="translated">A LogManager initializes the logging configuration via the &lt;a href=&quot;#readConfiguration()&quot;&gt; &lt;code&gt;readConfiguration()&lt;/code&gt; &lt;/a&gt; method during LogManager initialization. By default, LogManager default configuration is used. The logging configuration read by LogManager must be in the &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;properties file&lt;/a&gt; format.</target>
        </trans-unit>
        <trans-unit id="6779005abde1a1d41736e7235a71052354ae112b" translate="yes" xml:space="preserve">
          <source>A Logger object is used to log messages for a specific system or application component.</source>
          <target state="translated">ロガー オブジェクトは、特定のシステムまたはアプリケーション コンポーネントのメッセージをログに記録するために使用されます。</target>
        </trans-unit>
        <trans-unit id="c499d734d095b4b498a4bc777509de20cc1569e0" translate="yes" xml:space="preserve">
          <source>A Logger object is used to log messages for a specific system or application component. Loggers are normally named, using a hierarchical dot-separated namespace. Logger names can be arbitrary strings, but they should normally be based on the package name or class name of the logged component, such as java.net or javax.swing. In addition it is possible to create &quot;anonymous&quot; Loggers that are not stored in the Logger namespace.</source>
          <target state="translated">ロガー オブジェクトは、特定のシステムまたはアプリケーション コンポーネントのメッセージをログに記録するために使用されます。ロガーは通常、階層的なドット区切りの名前空間を使用して名前が付けられます。ロガー名は任意の文字列を使用できますが、通常は、java.net や javax.swing のような、ログに記録されたコンポーネントのパッケージ名やクラス名に基づいている必要があります。さらに、ロガーの名前空間に格納されていない「匿名」ロガーを作成することも可能です。</target>
        </trans-unit>
        <trans-unit id="3004083b41f7279bccf2d376054f13365417107a" translate="yes" xml:space="preserve">
          <source>A LoginContext should not be used to authenticate more than one Subject. A separate LoginContext should be used to authenticate each different Subject.</source>
          <target state="translated">1 つの LoginContext を使用して複数の Subject を認証してはいけません。別々の LoginContext を使用して、それぞれの異なる Subject を認証しなければなりません。</target>
        </trans-unit>
        <trans-unit id="d08eeb72c55f5def07e0edd5465431aea0a4bae5" translate="yes" xml:space="preserve">
          <source>A Low Level API</source>
          <target state="translated">低レベルAPI</target>
        </trans-unit>
        <trans-unit id="0e4bee990e5dd51f412e4e4f387a0961aa4345bb" translate="yes" xml:space="preserve">
          <source>A MAC mechanism that is based on cryptographic hash functions is referred to as HMAC. HMAC can be used with any cryptographic hash function, e.g., MD5 or SHA-1, in combination with a secret shared key. HMAC is specified in RFC 2104.</source>
          <target state="translated">暗号ハッシュ関数に基づくMACメカニズムは、HMACと呼ばれる。HMACは、任意の暗号化ハッシュ関数、例えばMD5やSHA-1を秘密の共有鍵と組み合わせて使用することができる。HMACはRFC 2104で規定されている。</target>
        </trans-unit>
        <trans-unit id="fdf1d560479dc25561c05387e1a440a1e90682b9" translate="yes" xml:space="preserve">
          <source>A MAC mechanism that is based on cryptographic hash functions is referred to as HMAC. HMAC can be used with any cryptographic hash function, e.g., SHA256 or SHA384, in combination with a secret shared key. HMAC is specified in RFC 2104.</source>
          <target state="translated">暗号ハッシュ関数に基づくMACメカニズムは、HMACと呼ばれる。HMACは、秘密の共有鍵と組み合わせて、任意の暗号ハッシュ関数、例えば、SHA256やSHA384と一緒に使用することができます。HMACはRFC 2104で規定されている。</target>
        </trans-unit>
        <trans-unit id="a23eefafff3c08d819fbb5e313f435090a8297a6" translate="yes" xml:space="preserve">
          <source>A MAC provides a way to check the integrity of information transmitted over or stored in an unreliable medium, based on a secret key. Typically, message authentication codes are used between two parties that share a secret key in order to validate information transmitted between these parties.</source>
          <target state="translated">MACは、秘密鍵に基づいて、信頼性の低い媒体を介して送信された、または保存された情報の完全性をチェックする方法を提供します。通常、メッセージ認証コードは、秘密鍵を共有する2つの当事者間で送信された情報を検証するために使用されます。</target>
        </trans-unit>
        <trans-unit id="d41c3f0b35e054811d0849376f58a811e7f00a9f" translate="yes" xml:space="preserve">
          <source>A MIDI track is an independent stream of MIDI events (time-stamped MIDI data) that can be stored along with other tracks in a standard MIDI file.</source>
          <target state="translated">MIDIトラックはMIDIイベントの独立したストリーム(タイムスタンプ付きのMIDIデータ)で、標準的なMIDIファイルに他のトラックと一緒に保存することができます。</target>
        </trans-unit>
        <trans-unit id="d2a10cf14dbd436a9cd345369966e488cc6b0cd9" translate="yes" xml:space="preserve">
          <source>A MIDI track is an independent stream of MIDI events (time-stamped MIDI data) that can be stored along with other tracks in a standard MIDI file. The MIDI specification allows only 16 channels of MIDI data, but tracks are a way to get around this limitation. A MIDI file can contain any number of tracks, each containing its own stream of up to 16 channels of MIDI data.</source>
          <target state="translated">MIDI トラックは MIDI イベント(タイムスタンプ付きの MIDI データ)の独立したストリームで、標準 MIDI ファイルに他のトラックと一緒に保存することができます。MIDI 仕様では 16 チャンネルの MIDI データしか許可されていませんが、トラックはこの制限を回避する方法です。MIDI ファイルには任意の数のトラックを含めることができ、それぞれが最大 16 チャンネルの MIDI データの独自のストリームを含んでいます。</target>
        </trans-unit>
        <trans-unit id="d0adcd7942ffec4cb4b752421915de265cef59a0" translate="yes" xml:space="preserve">
          <source>A MIME Content-Type of application/x-java-serialized-object represents a graph of Java object(s) that have been made persistent.</source>
          <target state="translated">application/x-java-serialized-object の MIME Content-Type は、永続化された Java オブジェクトのグラフを表します。</target>
        </trans-unit>
        <trans-unit id="38f511a1ae137bb74e5a438fa8768396bf4ae4f0" translate="yes" xml:space="preserve">
          <source>A Media object is constructed with a value which represents one of the ways in which the Media attribute can be specified.</source>
          <target state="translated">Mediaオブジェクトは、Media属性が指定できる方法の一つを表す値で構築されます。</target>
        </trans-unit>
        <trans-unit id="b13c27ef195bd2599009457a31387e46c3d6317f" translate="yes" xml:space="preserve">
          <source>A MenuSelectionManager owns the selection in menu hierarchy.</source>
          <target state="translated">MenuSelectionManagerは、メニュー階層内の選択範囲を所有します。</target>
        </trans-unit>
        <trans-unit id="19cfdd71c28853aeb68181d5e607cc11e56ea2a2" translate="yes" xml:space="preserve">
          <source>A MessageDigest object starts out initialized. The data is processed through it using the &lt;a href=&quot;#update(byte)&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt; methods. At any point &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; can be called to reset the digest. Once all the data to be updated has been updated, one of the &lt;a href=&quot;#digest()&quot;&gt;&lt;code&gt;digest&lt;/code&gt;&lt;/a&gt; methods should be called to complete the hash computation.</source>
          <target state="translated">A MessageDigest object starts out initialized. The data is processed through it using the &lt;a href=&quot;#update(byte)&quot;&gt; &lt;code&gt;update&lt;/code&gt; &lt;/a&gt; methods. At any point &lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt; can be called to reset the digest. Once all the data to be updated has been updated, one of the &lt;a href=&quot;#digest()&quot;&gt; &lt;code&gt;digest&lt;/code&gt; &lt;/a&gt; methods should be called to complete the hash computation.</target>
        </trans-unit>
        <trans-unit id="955576c5a5581056e12e98e515200ac2a050d292" translate="yes" xml:space="preserve">
          <source>A MessageDigest object starts out initialized. The data is processed through it using the &lt;a href=&quot;messagedigest#update-byte-&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt; methods. At any point &lt;a href=&quot;messagedigest#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; can be called to reset the digest. Once all the data to be updated has been updated, one of the &lt;a href=&quot;messagedigest#digest--&quot;&gt;&lt;code&gt;digest&lt;/code&gt;&lt;/a&gt; methods should be called to complete the hash computation.</source>
          <target state="translated">MessageDigestオブジェクトは初期化されて開始されます。データは、&lt;a href=&quot;messagedigest#update-byte-&quot;&gt; &lt;code&gt;update&lt;/code&gt; &lt;/a&gt;メソッドを使用してデータを介して処理されます。いつでも&lt;a href=&quot;messagedigest#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;を呼び出して、ダイジェストをリセットできます。更新するすべてのデータが更新されたら、&lt;a href=&quot;messagedigest#digest--&quot;&gt; &lt;code&gt;digest&lt;/code&gt; &lt;/a&gt;メソッドの1つを呼び出してハッシュ計算を完了する必要があります。</target>
        </trans-unit>
        <trans-unit id="760b5e67094e5d1666915b913b1ebe906a629622" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F extension of BasicToolTipUI.</source>
          <target state="translated">A Metal L&amp;amp;F extension of BasicToolTipUI.</target>
        </trans-unit>
        <trans-unit id="e8be3781f7693e04538ce956a8377ac5041a0e14" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F implementation of PopupMenuSeparatorUI.</source>
          <target state="translated">A Metal L&amp;amp;F implementation of PopupMenuSeparatorUI.</target>
        </trans-unit>
        <trans-unit id="c3e774ebb2ddabdb4af3ae4661c351e8180b863a" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F implementation of PopupMenuSeparatorUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">A Metal L&amp;amp;F implementation of PopupMenuSeparatorUI. This implementation is a &quot;combined&quot; view/controller.</target>
        </trans-unit>
        <trans-unit id="1e7532460d65efaa82224f91f9286332e436cba3" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F implementation of ScrollPaneUI.</source>
          <target state="translated">A Metal L&amp;amp;F implementation of ScrollPaneUI.</target>
        </trans-unit>
        <trans-unit id="1fb41a1a8a5537b8af07056ae6285b86ffa805a9" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F implementation of SeparatorUI.</source>
          <target state="translated">A Metal L&amp;amp;F implementation of SeparatorUI.</target>
        </trans-unit>
        <trans-unit id="121fc4578012ff2fd48e3a89a545be23c8baafe6" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F implementation of SeparatorUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">A Metal L&amp;amp;F implementation of SeparatorUI. This implementation is a &quot;combined&quot; view/controller.</target>
        </trans-unit>
        <trans-unit id="10797e2b0052195d122ff78c9fae404da94c4e90" translate="yes" xml:space="preserve">
          <source>A Metal Look and Feel implementation of ToolBarUI.</source>
          <target state="translated">ToolBarUIのメタルルックアンドフィールの実装です。</target>
        </trans-unit>
        <trans-unit id="f1e589b1e5c5d2fae61d29209696a8efd1be4199" translate="yes" xml:space="preserve">
          <source>A Metal Look and Feel implementation of ToolBarUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">ToolBarUIのMetal Look and Feelの実装です。この実装は、&quot;結合された &quot;ビュー/コントローラです。</target>
        </trans-unit>
        <trans-unit id="803d83c43dc480618586a553a4b522b5a0ec2e04" translate="yes" xml:space="preserve">
          <source>A MethodDescriptor describes a particular method that a Java Bean supports for external access from other components.</source>
          <target state="translated">MethodDescriptorは,Java Beanが他のコンポーネントからの外部アクセスをサポートする特定のメソッドを記述する。</target>
        </trans-unit>
        <trans-unit id="d0f804d7008af50737f94d6477754beb1010e9fb" translate="yes" xml:space="preserve">
          <source>A Model MBean implements the &lt;a href=&quot;modelmbean&quot;&gt;&lt;code&gt;ModelMBean&lt;/code&gt;&lt;/a&gt; interface. It is a &lt;a href=&quot;../dynamicmbean&quot;&gt;&lt;code&gt;DynamicMBean&lt;/code&gt;&lt;/a&gt; whose &lt;a href=&quot;../dynamicmbean#getMBeanInfo()&quot;&gt;&lt;code&gt;getMBeanInfo&lt;/code&gt;&lt;/a&gt; method returns an object implementing &lt;a href=&quot;modelmbeaninfo&quot;&gt;&lt;code&gt;ModelMBeanInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">A Model MBean implements the &lt;a href=&quot;modelmbean&quot;&gt; &lt;code&gt;ModelMBean&lt;/code&gt; &lt;/a&gt; interface. It is a &lt;a href=&quot;../dynamicmbean&quot;&gt; &lt;code&gt;DynamicMBean&lt;/code&gt; &lt;/a&gt; whose &lt;a href=&quot;../dynamicmbean#getMBeanInfo()&quot;&gt; &lt;code&gt;getMBeanInfo&lt;/code&gt; &lt;/a&gt; method returns an object implementing &lt;a href=&quot;modelmbeaninfo&quot;&gt; &lt;code&gt;ModelMBeanInfo&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="91d72defe3fc764893ef27e5b33b5fbfd41ea16c" translate="yes" xml:space="preserve">
          <source>A Model MBean implements the &lt;a href=&quot;modelmbean&quot;&gt;&lt;code&gt;ModelMBean&lt;/code&gt;&lt;/a&gt; interface. It is a &lt;a href=&quot;../dynamicmbean&quot;&gt;&lt;code&gt;DynamicMBean&lt;/code&gt;&lt;/a&gt; whose &lt;a href=&quot;../dynamicmbean#getMBeanInfo--&quot;&gt;&lt;code&gt;getMBeanInfo&lt;/code&gt;&lt;/a&gt; method returns an object implementing &lt;a href=&quot;modelmbeaninfo&quot;&gt;&lt;code&gt;ModelMBeanInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Model MBeanは&lt;a href=&quot;modelmbean&quot;&gt; &lt;code&gt;ModelMBean&lt;/code&gt; &lt;/a&gt;インターフェースを実装します。これは、&lt;a href=&quot;../dynamicmbean#getMBeanInfo--&quot;&gt; &lt;code&gt;getMBeanInfo&lt;/code&gt; &lt;/a&gt;メソッドが&lt;a href=&quot;modelmbeaninfo&quot;&gt; &lt;code&gt;ModelMBeanInfo&lt;/code&gt; を&lt;/a&gt;実装するオブジェクトを返す&lt;a href=&quot;../dynamicmbean&quot;&gt; &lt;code&gt;DynamicMBean&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="5fa4459bcc5c002c0889ae2582fb13f8b72d3392" translate="yes" xml:space="preserve">
          <source>A ModificationItem instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single ModificationItem instance should lock the object.</source>
          <target state="translated">ModificationItem インスタンスは同時多発的なマルチスレッドアクセスに対して同期化されません。単一の ModificationItem インスタンスにアクセスして変更しようとする複数のスレッドは、オブジェクトをロックしなければなりません。</target>
        </trans-unit>
        <trans-unit id="5f24c3518d3a348a45bfe52460020ee3686cf3c7" translate="yes" xml:space="preserve">
          <source>A MouseWheelEvent object is passed to every &lt;code&gt;MouseWheelListener&lt;/code&gt; object which registered to receive the &quot;interesting&quot; mouse events using the component's &lt;code&gt;addMouseWheelListener&lt;/code&gt; method. Each such listener object gets a &lt;code&gt;MouseEvent&lt;/code&gt; containing the mouse event.</source>
          <target state="translated">A MouseWheelEvent object is passed to every &lt;code&gt;MouseWheelListener&lt;/code&gt; object which registered to receive the &quot;interesting&quot; mouse events using the component's &lt;code&gt;addMouseWheelListener&lt;/code&gt; method. Each such listener object gets a &lt;code&gt;MouseEvent&lt;/code&gt; containing the mouse event.</target>
        </trans-unit>
        <trans-unit id="749c912382df2f74f77f5f7b63be25733a99d8a9" translate="yes" xml:space="preserve">
          <source>A NameClassPair instance is not synchronized against concurrent access by multiple threads. Threads that need to access a NameClassPair concurrently should synchronize amongst themselves and provide the necessary locking.</source>
          <target state="translated">NameClassPair インスタンスは、複数のスレッドによる同時アクセスに対しては同期化されません。NameClassPair に同時にアクセスする必要があるスレッドは、スレッド間で同期化し、必要なロックを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="92a4e5c819312f8959ac271f2ff97604c99409a2" translate="yes" xml:space="preserve">
          <source>A Namespace isA Attribute. One can iterate over a list of namespaces as a list of attributes. However this method returns only the list of namespaces declared on this START_ELEMENT and does not include the attributes declared on this START_ELEMENT. Returns an empty iterator if there are no namespaces.</source>
          <target state="translated">名前空間は属性です。名前空間のリストを属性のリストとして反復処理することができます。ただし、このメソッドは、この START_ELEMENT で宣言された名前空間のリストのみを返し、この START_ELEMENT で宣言された属性は含まれません。名前空間がない場合は、空のイテレータを返します。</target>
        </trans-unit>
        <trans-unit id="7e7295790c1a5d3bd815dd25f033a68bd2490d77" translate="yes" xml:space="preserve">
          <source>A NamingException instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single NamingException instance should lock the object.</source>
          <target state="translated">NamingException インスタンスは、同時多発的なマルチスレッドアクセスに対して同期化されていません。1 つの NamingException インスタンスにアクセスして変更しようとする複数のスレッドは、オブジェクトをロックしなければなりません。</target>
        </trans-unit>
        <trans-unit id="164b36b7d4fc68ee83c3981d6470a16a12b3861e" translate="yes" xml:space="preserve">
          <source>A NamingException or null if the result code indicates success.</source>
          <target state="translated">結果コードが成功を示した場合は NamingException、または null。</target>
        </trans-unit>
        <trans-unit id="8f45b936b6c00effd5463dc498cdf2a68178fb76" translate="yes" xml:space="preserve">
          <source>A Number representing the value of the number parsed.</source>
          <target state="translated">解析された数値の値を表す数値。</target>
        </trans-unit>
        <trans-unit id="7947363f410e759dec4cff244cf40fe7626b45bb" translate="yes" xml:space="preserve">
          <source>A PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt; uses these parameters to &lt;a href=&quot;certpathbuilder#build(java.security.cert.CertPathParameters)&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; a &lt;code&gt;CertPath&lt;/code&gt; which has been validated according to the PKIX certification path validation algorithm.</source>
          <target state="translated">A PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt; uses these parameters to &lt;a href=&quot;certpathbuilder#build(java.security.cert.CertPathParameters)&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt; a &lt;code&gt;CertPath&lt;/code&gt; which has been validated according to the PKIX certification path validation algorithm.</target>
        </trans-unit>
        <trans-unit id="9135000054431edfc163866d6964d598cbae6906" translate="yes" xml:space="preserve">
          <source>A PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt; uses these parameters to &lt;a href=&quot;certpathbuilder#build-java.security.cert.CertPathParameters-&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; a &lt;code&gt;CertPath&lt;/code&gt; which has been validated according to the PKIX certification path validation algorithm.</source>
          <target state="translated">PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt; は、これらのパラメーターを使用して、PKIX証明書パス検証アルゴリズムに従って検証された &lt;code&gt;CertPath&lt;/code&gt; を&lt;a href=&quot;certpathbuilder#build-java.security.cert.CertPathParameters-&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt;します。</target>
        </trans-unit>
        <trans-unit id="1c49f7526051c142ee0dd56661e95608920ec388" translate="yes" xml:space="preserve">
          <source>A PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; uses these parameters to validate a &lt;code&gt;CertPath&lt;/code&gt; according to the PKIX certification path validation algorithm.</source>
          <target state="translated">PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; は、これらのパラメーターを使用して、PKIX証明書パス検証アルゴリズムに従って &lt;code&gt;CertPath&lt;/code&gt; を検証します。</target>
        </trans-unit>
        <trans-unit id="48c412dcaf046147fa71cc4a6fcbc23aa8ff0005" translate="yes" xml:space="preserve">
          <source>A PRNG &lt;code&gt;SecureRandom&lt;/code&gt; will not seed itself automatically if &lt;code&gt;setSeed&lt;/code&gt; is called before any &lt;code&gt;nextBytes&lt;/code&gt; or &lt;code&gt;reseed&lt;/code&gt; calls. The caller should make sure that the &lt;code&gt;seed&lt;/code&gt; argument contains enough entropy for the security of this &lt;code&gt;SecureRandom&lt;/code&gt;.</source>
          <target state="translated">A PRNG &lt;code&gt;SecureRandom&lt;/code&gt; will not seed itself automatically if &lt;code&gt;setSeed&lt;/code&gt; is called before any &lt;code&gt;nextBytes&lt;/code&gt; or &lt;code&gt;reseed&lt;/code&gt; calls. The caller should make sure that the &lt;code&gt;seed&lt;/code&gt; argument contains enough entropy for the security of this &lt;code&gt;SecureRandom&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="854617ae48663537c49b436fc3d7da84f4484169" translate="yes" xml:space="preserve">
          <source>A Pack200 file compressed with gzip can be hosted on HTTP/1.1 web servers. The deployment applications can use &quot;Accept-Encoding=pack200-gzip&quot;. This indicates to the server that the client application desires a version of the file encoded with Pack200 and further compressed with gzip. Please refer to &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/deployment/deployment-guide/pack200.html&quot;&gt;Java Deployment Guide&lt;/a&gt; for more details and techniques.</source>
          <target state="translated">gzipで圧縮されたPack200ファイルは、HTTP / 1.1 Webサーバーでホストできます。デプロイメントアプリケーションは「Accept-Encoding = pack200-gzip」を使用できます。これは、クライアントアプリケーションがPack200でエンコードされ、さらにgzipで圧縮されたファイルのバージョンを望んでいることをサーバーに示します。詳細と手法については、&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/deployment/deployment-guide/pack200.html&quot;&gt;Javaデプロイメントガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ac4cc50612cc686681e2c61b64290b6abe06eb08" translate="yes" xml:space="preserve">
          <source>A Pack200 file compressed with gzip can be hosted on HTTP/1.1 web servers. The deployment applications can use &quot;Accept-Encoding=pack200-gzip&quot;. This indicates to the server that the client application desires a version of the file encoded with Pack200 and further compressed with gzip. Please refer to the Java Deployment Guide for techniques and details.</source>
          <target state="translated">gzipで圧縮されたPack200ファイルをHTTP/1.1のWebサーバでホストすることができます。配置アプリケーションは、「Accept-Encoding=pack200-gzip」を使用することができます。これは、クライアント アプリケーションが Pack200 でエンコードされ、さらに gzip で圧縮されたファイルのバージョンを希望していることをサーバに示します。テクニックや詳細については、『Java デプロイメント ガイド』を参照してください。</target>
        </trans-unit>
        <trans-unit id="26b5bebd1f3102a674fcfd96ea05dcefd49708a7" translate="yes" xml:space="preserve">
          <source>A Parser for HTML Documents (actually, you can specify a DTD, but you should really only use this class with the html dtd in swing).</source>
          <target state="translated">HTMLドキュメントのためのパーサー(実際にはDTDを指定することができますが、実際にはこのクラスを使うのはswingのhtml dtdだけにした方がいいでしょう)。</target>
        </trans-unit>
        <trans-unit id="df141f22315b40619f7602dbe08b6ccd3361b66a" translate="yes" xml:space="preserve">
          <source>A Parser for HTML Documents (actually, you can specify a DTD, but you should really only use this class with the html dtd in swing). Reads an InputStream of HTML and invokes the appropriate methods in the ParserCallback class. This is the default parser used by HTMLEditorKit to parse HTML url's.</source>
          <target state="translated">HTMLドキュメントのためのパーサー(実際にはDTDを指定することができますが、実際にはSwingのhtml dtdと一緒にこのクラスだけを使うべきです)。HTML の InputStream を読み込み、ParserCallback クラスの適切なメソッドを呼び出します。これは HTML の url を解析するために HTMLEditorKit によって使用されるデフォルトのパーサーです。</target>
        </trans-unit>
        <trans-unit id="84cb7411320ac8ed87b1f652e437833252a4f096" translate="yes" xml:space="preserve">
          <source>A Permission to perform actions related to MBeanServers.</source>
          <target state="translated">MBeanServers に関連するアクションを実行するための許可。</target>
        </trans-unit>
        <trans-unit id="5a50af10f0548cc284f1921ca0fb4100116c9960" translate="yes" xml:space="preserve">
          <source>A Permission to perform actions related to MBeanServers. The &lt;em&gt;name&lt;/em&gt; of the permission specifies the operation requested or granted by the permission. For a granted permission, it can be &lt;code&gt;*&lt;/code&gt; to allow all of the MBeanServer operations specified below. Otherwise, for a granted or requested permission, it must be one of the following:</source>
          <target state="translated">MBeanServersに関連するアクションを実行する権限。権限の&lt;em&gt;名前&lt;/em&gt;は、権限によって要求または付与される操作を指定します。許可が付与されている場合、 &lt;code&gt;*&lt;/code&gt; を指定して、以下に指定されているすべてのMBeanServer操作を許可できます。それ以外の場合は、許可または要求された許可の場合、次のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="1a23c34cdf952da9a88f0b4beee8c3caff55a3af" translate="yes" xml:space="preserve">
          <source>A Ping message has been received.</source>
          <target state="translated">Pingメッセージを受信しました。</target>
        </trans-unit>
        <trans-unit id="9ba3cf2463264b9d3d582745ac8e03f1e41d35e3" translate="yes" xml:space="preserve">
          <source>A Policy object is responsible for determining whether code executing in the Java runtime environment has permission to perform a security-sensitive operation.</source>
          <target state="translated">ポリシー・オブジェクトは、Javaランタイム環境で実行されるコードがセキュリティに配慮した操作を実行する許可を持っているかどうかを判断する責任があります。</target>
        </trans-unit>
        <trans-unit id="bab7b72d49f304e2d347eefbf65b392b3d1d5ce9" translate="yes" xml:space="preserve">
          <source>A Pong message has been received.</source>
          <target state="translated">ポンのメッセージを受信しました。</target>
        </trans-unit>
        <trans-unit id="01126747f862efe506045e674ab008983953a57d" translate="yes" xml:space="preserve">
          <source>A Print Job's attribute set includes zero instances or one instance of a &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute, not more than one instance. A new &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute replaces an existing &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute, if any. In other words, &lt;code&gt;JobMessageFromOperator&lt;/code&gt; is not intended to be a history log. If it wishes, the client can detect changes to a Print Job's &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute and maintain the client's own history log of the &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute values.</source>
          <target state="translated">A Print Job's attribute set includes zero instances or one instance of a &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute, not more than one instance. A new &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute replaces an existing &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute, if any. In other words, &lt;code&gt;JobMessageFromOperator&lt;/code&gt; is not intended to be a history log. If it wishes, the client can detect changes to a Print Job's &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute and maintain the client's own history log of the &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute values.</target>
        </trans-unit>
        <trans-unit id="788dd3b9cb5575680ee8b91fc4a7829f040d4177" translate="yes" xml:space="preserve">
          <source>A Print Job's attribute set includes zero instances or one instance of a JobMessageFromOperator attribute, not more than one instance. A new JobMessageFromOperator attribute replaces an existing JobMessageFromOperator attribute, if any. In other words, JobMessageFromOperator is not intended to be a history log. If it wishes, the client can detect changes to a Print Job's JobMessageFromOperator attribute and maintain the client's own history log of the JobMessageFromOperator attribute values.</source>
          <target state="translated">印刷ジョブの属性セットは、0個のインスタンス又はJobMessageFromOperator属性の1個のインスタンスを含み、1個以上のインスタンスは含まない。新しいJobMessageFromOperator属性は、既存のJobMessageFromOperator属性があれば、それを置き換える。言い換えれば、JobMessageFromOperatorは、履歴ログであることを意図していない。望むならば、クライアントは、印刷ジョブのJobMessageFromOperator属性への変更を検出し、クライアント自身のJobMessageFromOperator属性値の履歴ログを維持することができる。</target>
        </trans-unit>
        <trans-unit id="c9bb43db8ad0625147b830d3d2525c9ce45b6fb2" translate="yes" xml:space="preserve">
          <source>A Print Service's attribute set includes zero instances or one instance of a &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute, not more than one instance. A new &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute replaces an existing &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute, if any. In other words, &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; is not intended to be a history log. If it wishes, the client can detect changes to a Print Service's &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute and maintain the client's own history log of the &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute values.</source>
          <target state="translated">A Print Service's attribute set includes zero instances or one instance of a &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute, not more than one instance. A new &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute replaces an existing &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute, if any. In other words, &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; is not intended to be a history log. If it wishes, the client can detect changes to a Print Service's &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute and maintain the client's own history log of the &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute values.</target>
        </trans-unit>
        <trans-unit id="b3fbfe61d65c959def5e9c362257b887a2cb544e" translate="yes" xml:space="preserve">
          <source>A Print Service's attribute set includes zero instances or one instance of a PrinterMessageFromOperator attribute, not more than one instance. A new PrinterMessageFromOperator attribute replaces an existing PrinterMessageFromOperator attribute, if any. In other words, PrinterMessageFromOperator is not intended to be a history log. If it wishes, the client can detect changes to a Print Service's PrinterMessageFromOperator attribute and maintain the client's own history log of the PrinterMessageFromOperator attribute values.</source>
          <target state="translated">プリントサービスの属性セットは,0個のインスタンス又はPrinterMessageFromOperator属性の1個のインスタンスを含み,1個以上のインスタンスは含まない。新しいPrinterMessageFromOperator属性は,既存のPrinterMessageFromOperator属性があれば,それを置き換える。言い換えれば、PrinterMessageFromOperatorは、履歴ログであることを意図していない。望むならば,クライアントは,Print ServiceのPrinterMessageFromOperator属性への変更を検出し,PrinterMessageFromOperator属性値のクライアント自身の履歴ログを維持することができる。</target>
        </trans-unit>
        <trans-unit id="00809d2345c35d6032f2b3d9c3d237d721951fd9" translate="yes" xml:space="preserve">
          <source>A PrintJobAttributeSet is just an &lt;a href=&quot;attributeset&quot;&gt;&lt;code&gt;AttributeSet&lt;/code&gt;&lt;/a&gt; whose constructors and mutating operations guarantee an additional invariant, namely that all attribute values in the PrintJobAttributeSet must be instances of interface &lt;a href=&quot;printjobattribute&quot;&gt;&lt;code&gt;PrintJobAttribute&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;printjobattributeset#add-javax.print.attribute.Attribute-&quot;&gt;&lt;code&gt;add(Attribute)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;printjobattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt;&lt;code&gt;&amp;gt;addAll(AttributeSet)&lt;/code&gt;&lt;/a&gt; operations are respecified below to guarantee this additional invariant.</source>
          <target state="translated">PrintJobAttributeSetは単なる&lt;a href=&quot;attributeset&quot;&gt; &lt;code&gt;AttributeSet&lt;/code&gt; &lt;/a&gt;であり、そのコンストラクターと変更操作は追加の不変式を保証します。つまり、PrintJobAttributeSetのすべての属性値は、インターフェース&lt;a href=&quot;printjobattribute&quot;&gt; &lt;code&gt;PrintJobAttribute&lt;/code&gt; の&lt;/a&gt;インスタンスでなければなりません。&lt;a href=&quot;printjobattributeset#add-javax.print.attribute.Attribute-&quot;&gt; &lt;code&gt;add(Attribute)&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;printjobattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt; &lt;code&gt;&amp;gt;addAll(AttributeSet)&lt;/code&gt; &lt;/a&gt;の操作は、この追加の不変式を保証するために次のようにしています。</target>
        </trans-unit>
        <trans-unit id="aded721603c3407f5fe76e7ae0854d15518d503d" translate="yes" xml:space="preserve">
          <source>A PrintServiceAttributeSet is just an &lt;a href=&quot;attributeset&quot;&gt;&lt;code&gt;AttributeSet&lt;/code&gt;&lt;/a&gt; whose constructors and mutating operations guarantee an additional invariant, namely that all attribute values in the PrintServiceAttributeSet must be instances of interface &lt;a href=&quot;printserviceattribute&quot;&gt;&lt;code&gt;PrintServiceAttribute&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;printserviceattributeset#add-javax.print.attribute.Attribute-&quot;&gt;&lt;code&gt;add(Attribute)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;printserviceattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt;&lt;code&gt;addAll(AttributeSet)&lt;/code&gt;&lt;/a&gt; operations are respecified below to guarantee this additional invariant.</source>
          <target state="translated">PrintServiceAttributeSetは単なる&lt;a href=&quot;attributeset&quot;&gt; &lt;code&gt;AttributeSet&lt;/code&gt; &lt;/a&gt;であり、そのコンストラクターと変更操作は追加の不変式を保証し&lt;a href=&quot;printserviceattribute&quot;&gt; &lt;code&gt;PrintServiceAttribute&lt;/code&gt; &lt;/a&gt;。つまり、PrintServiceAttributeSetのすべての属性値は、インターフェースPrintServiceAttributeのインスタンスでなければなりません。&lt;a href=&quot;printserviceattributeset#add-javax.print.attribute.Attribute-&quot;&gt; &lt;code&gt;add(Attribute)&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;printserviceattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt; &lt;code&gt;addAll(AttributeSet)&lt;/code&gt; &lt;/a&gt;の操作は、この追加の不変式を保証するために次のようにしています。</target>
        </trans-unit>
        <trans-unit id="d18341003dec13cb3f1d230f871b24a6e72ee60b" translate="yes" xml:space="preserve">
          <source>A PrintServiceLookup implementor is recommended to check for the SecurityManager.checkPrintJobAccess() to deny access to untrusted code. Following this recommended policy means that untrusted code may not be able to locate any print services. Downloaded applets are the most common example of untrusted code.</source>
          <target state="translated">PrintServiceLookup実装者は、SecurityManager.checkPrintJobAccess()をチェックして、信頼されていないコードへのアクセスを拒否することを推奨します。この推奨ポリシーに従うことは、信頼されていないコードがプリントサービスを見つけることができないことを意味します。ダウンロードされたアプレットは、信頼されないコードの最も一般的な例です。</target>
        </trans-unit>
        <trans-unit id="e3d3b699ec44fa5cb9418453115f10cc05579590" translate="yes" xml:space="preserve">
          <source>A Properties object, never null.</source>
          <target state="translated">プロパティオブジェクトで、決してnullではありません。</target>
        </trans-unit>
        <trans-unit id="10b040397443e35ff9a1b4b3fb6ab446d6ad464b" translate="yes" xml:space="preserve">
          <source>A PropertyChangeEvent describing the vetoed change.</source>
          <target state="translated">拒否された変更を記述するPropertyChangeEvent。</target>
        </trans-unit>
        <trans-unit id="ab73ff36dfb487a2f44f83849e1b4b10be50fd68" translate="yes" xml:space="preserve">
          <source>A PropertyChangeEvent will be fired after the properties are read.</source>
          <target state="translated">プロパティが読み込まれた後にPropertyChangeEventが発生します。</target>
        </trans-unit>
        <trans-unit id="a16db4dd463f94a63a6456263d04a8f035b25366" translate="yes" xml:space="preserve">
          <source>A PropertyChangeEvent will get fired when the selection mode changes.</source>
          <target state="translated">選択モードが変更されると、PropertyChangeEventが発生します。</target>
        </trans-unit>
        <trans-unit id="3e24b6e6debe053e3f9cb736a6248ea32cde627e" translate="yes" xml:space="preserve">
          <source>A PropertyChangeListener for the JSpinner itself</source>
          <target state="translated">JSpinner自身のPropertyChangeListener</target>
        </trans-unit>
        <trans-unit id="210fdaae95a7097543fc846ccda7b63eb7c4f1e2" translate="yes" xml:space="preserve">
          <source>A PropertyDescriptor describes one property that a Java Bean exports via a pair of accessor methods.</source>
          <target state="translated">PropertyDescriptorは,Java Beanがアクセサメソッドのペアを介してエクスポートする1つのプロパティを記述します。</target>
        </trans-unit>
        <trans-unit id="1464e97af59354fbd845d53627b8278e9c59294d" translate="yes" xml:space="preserve">
          <source>A PropertyEditor class provides support for GUIs that want to allow users to edit a property value of a given type.</source>
          <target state="translated">PropertyEditorクラスは、ユーザーが指定された型のプロパティ値を編集できるようにしたいGUIのサポートを提供します。</target>
        </trans-unit>
        <trans-unit id="d5cf0eea0af22ebff646362d36d7efcc29d1b673" translate="yes" xml:space="preserve">
          <source>A PropertyEditor may choose to make available a full custom Component that edits its property value.</source>
          <target state="translated">PropertyEditorは、そのプロパティ値を編集する完全なカスタム コンポーネントを利用できるようにすることを選択することができます。</target>
        </trans-unit>
        <trans-unit id="bc13a76e8f1c594363edc02c7a10b439d47023e5" translate="yes" xml:space="preserve">
          <source>A PropertyEditor may choose to make available a full custom Component that edits its property value. It is the responsibility of the PropertyEditor to hook itself up to its editor Component itself and to report property value changes by firing a PropertyChange event.</source>
          <target state="translated">PropertyEditor は、そのプロパティ値を編集する完全なカスタム コンポーネントを利用できるようにすることを選択することができます。PropertyEditor 自身をそのエディタ コンポーネントに接続し、PropertyChange イベントを発生させてプロパティ値の変更を報告するのは、PropertyEditor の責任です。</target>
        </trans-unit>
        <trans-unit id="38a8e61b7acfa8c231a16d409b25ad982881fa13" translate="yes" xml:space="preserve">
          <source>A PropertyEditor may chose to make available a full custom Component that edits its property value.</source>
          <target state="translated">PropertyEditorは、そのプロパティ値を編集する完全なカスタム・コンポーネントを利用できるようにすることを選択することができます。</target>
        </trans-unit>
        <trans-unit id="44ea1cd4419c757f6d11083ec4202002c7a9e613" translate="yes" xml:space="preserve">
          <source>A PropertyEditor may chose to make available a full custom Component that edits its property value. It is the responsibility of the PropertyEditor to hook itself up to its editor Component itself and to report property value changes by firing a PropertyChange event.</source>
          <target state="translated">PropertyEditor は、そのプロパティ値を編集する完全なカスタム コンポーネントを利用できるようにすることを選択することができます。PropertyEditor 自身をそのエディタ コンポーネントに接続し、PropertyChange イベントを発生させてプロパティ値の変更を報告するのは、PropertyEditor の責任です。</target>
        </trans-unit>
        <trans-unit id="f4f2e8c8f1f59cc189f5bb0901bb99e8d1a07215" translate="yes" xml:space="preserve">
          <source>A PropertyVetoException is thrown when a proposed change to a property represents an unacceptable value.</source>
          <target state="translated">PropertyVetoException は、プロパティへの変更が許容できない値を表す場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="6df0896862f9934ca74f436ed4ffa6672430f1df" translate="yes" xml:space="preserve">
          <source>A ProtectionParameter encapsulating a CallbackHandler.</source>
          <target state="translated">CallbackHandlerをカプセル化したProtectionParameter。</target>
        </trans-unit>
        <trans-unit id="8d0b3b6eaa138860768bfa20636e6a955c42c7d3" translate="yes" xml:space="preserve">
          <source>A QueryExp that represents the constraint. The returned object will be serialized as an instance of the non-public class  javax.management.InQueryExp.</source>
          <target state="translated">制約を表す QueryExp。返されたオブジェクトは、非公開クラス javax.management.InQueryExp のインスタンスとしてシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="effc9e70adbfc6da748c614eb4be50c4cbf263aa" translate="yes" xml:space="preserve">
          <source>A QueryExp that represents the constraint. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.InQueryExp&quot;&gt; javax.management.InQueryExp&lt;/a&gt;.</source>
          <target state="translated">A QueryExp that represents the constraint. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.InQueryExp&quot;&gt; javax.management.InQueryExp&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="583e71a7f6e2aff967487468f384738975930ffe" translate="yes" xml:space="preserve">
          <source>A Raster defines values for pixels occupying a particular rectangular area of the plane, not necessarily including (0, 0). The rectangle, known as the Raster's bounding rectangle and available by means of the getBounds method, is defined by minX, minY, width, and height values. The minX and minY values define the coordinate of the upper left corner of the Raster. References to pixels outside of the bounding rectangle may result in an exception being thrown, or may result in references to unintended elements of the Raster's associated DataBuffer. It is the user's responsibility to avoid accessing such pixels.</source>
          <target state="translated">ラスタは、平面の特定の矩形領域を占めるピクセルの値を定義しますが、必ずしも (0,0)を含むとは限りません。この矩形は、Raster の外接矩形として知られており、getBounds メソッドで取得することができます。minX と minY は Raster の左上隅の座標を定義します。外接矩形の外側のピクセルを参照すると例外が発生したり、Raster の関連する DataBuffer の意図しない要素を参照したりすることがあります。そのようなピクセルにアクセスしないようにするのはユーザーの責任です。</target>
        </trans-unit>
        <trans-unit id="d2bd9b552fb40d834460bb85f3d834ecdc269a9b" translate="yes" xml:space="preserve">
          <source>A Raster may share a DataBuffer with another Raster either by explicit construction or by the use of the createChild and createTranslatedChild methods. Rasters created by these methods can return a reference to the Raster they were created from by means of the getParent method. For a Raster that was not constructed by means of a call to createTranslatedChild or createChild, getParent will return null.</source>
          <target state="translated">ラスタは、明示的に作成するか、createChild メソッドと createTranslatedChild メソッドを使用して、他のラスタと DataBuffer を共有することができます。これらのメソッドで作成されたラスタは、getParent メソッドを使って作成元のラスタへの参照を返すことができます。createTranslatedChild または createChild を呼び出して作成されなかったラスタの場合、getParent は null を返します。</target>
        </trans-unit>
        <trans-unit id="52905c2d1fd8ebf284d91b93183febbbf5b93aa3" translate="yes" xml:space="preserve">
          <source>A Red-Black tree based &lt;a href=&quot;navigablemap&quot;&gt;&lt;code&gt;NavigableMap&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">赤&lt;a href=&quot;navigablemap&quot;&gt; &lt;code&gt;NavigableMap&lt;/code&gt; &lt;/a&gt;ベースのNavigableMap実装。</target>
        </trans-unit>
        <trans-unit id="2790240116df87dc3724e9b84e65f5cd4d285f7c" translate="yes" xml:space="preserve">
          <source>A Red-Black tree based &lt;a href=&quot;navigablemap&quot;&gt;&lt;code&gt;NavigableMap&lt;/code&gt;&lt;/a&gt; implementation. The map is sorted according to the &lt;a href=&quot;../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; of its keys, or by a &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; provided at map creation time, depending on which constructor is used.</source>
          <target state="translated">赤&lt;a href=&quot;navigablemap&quot;&gt; &lt;code&gt;NavigableMap&lt;/code&gt; &lt;/a&gt;ベースのNavigableMap実装。マップは、使用されるコンストラクターに応じて、キーの&lt;a href=&quot;../lang/comparable&quot;&gt;自然な順序&lt;/a&gt;に従って、またはマップの作成時に提供される&lt;a href=&quot;comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;レーターによってソートされます。</target>
        </trans-unit>
        <trans-unit id="de24db46360a144e5972237ad65900278ca0e818" translate="yes" xml:space="preserve">
          <source>A RefAddr is contained within a Reference.</source>
          <target state="translated">RefAddrはReferenceの中に含まれています。</target>
        </trans-unit>
        <trans-unit id="db17f35dc3353169ebcd282698b849c67f5cfba3" translate="yes" xml:space="preserve">
          <source>A Reference also contains information to assist in creating an instance of the object to which this Reference refers. It contains the class name of that object, and the class name and location of the factory to be used to create the object. The class factory location is a space-separated list of URLs representing the class path used to load the factory. When the factory class (or any class or resource upon which it depends) needs to be loaded, each URL is used (in order) to attempt to load the class.</source>
          <target state="translated">リファレンスには、このリファレンスが参照するオブジェクトのインスタンスの作成を支援する情報も含まれます。これには、そのオブジェクトのクラス名、オブジェクトを作成するために使用されるクラス名とファクトリーの場所が含まれます。クラス・ファクトリーの場所は、ファクトリーをロードするために使用されるクラス・パスを表す URL のスペースで区切られたリストです。ファクトリークラス(またはそれに依存するクラスまたはリソース)をロードする必要がある場合、各 URL は、クラスのロードを試みるために(順番に)使用されます。</target>
        </trans-unit>
        <trans-unit id="8440e1f50dc257e8c791e88363c2bc8840c48660" translate="yes" xml:space="preserve">
          <source>A Reference consists of an ordered list of addresses and class information about the object being referenced. Each address in the list identifies a communications endpoint for the same conceptual object. The &quot;communications endpoint&quot; is information that indicates how to contact the object. It could be, for example, a network address, a location in memory on the local machine, another process on the same machine, etc. The order of the addresses in the list may be of significance to object factories that interpret the reference.</source>
          <target state="translated">参照は、参照されるオブジェクトに関するアドレスとクラス情報の順序付きリストで構成されています。リスト内の各アドレスは、同じ概念的なオブジェクトの通信エンドポイントを識別します。通信エンドポイント」とは、オブジェクトに連絡する方法を示す情報です。それは、例えば、ネットワークアドレス、ローカルマシン上のメモリ内の場所、同じマシン上の別のプロセスなどである可能性があります。リスト内のアドレスの順序は、参照を解釈するオブジェクト・ファクトリーにとって重要な意味を持つかもしれない。</target>
        </trans-unit>
        <trans-unit id="0d09a0ffc22c477d525609b2de8a150f2e3869fd" translate="yes" xml:space="preserve">
          <source>A Reference instance is not synchronized against concurrent access by multiple threads. Threads that need to access a single Reference concurrently should synchronize amongst themselves and provide the necessary locking.</source>
          <target state="translated">参照インスタンスは、複数のスレッドによる同時アクセスに対して同期化されません。単一のリファレンスに同時にアクセスする必要があるスレッドは、スレッド間で同期し、必要なロックを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="6db43dcfd60566c1dccf7a3e8ecca2a4da050eb1" translate="yes" xml:space="preserve">
          <source>A Reference represents a way of recording address information about objects which themselves are not directly bound to the naming system. Such objects can implement the Referenceable interface as a way for programs that use that object to determine what its Reference is. For example, when binding a object, if an object implements the Referenceable interface, getReference() can be invoked on the object to get its Reference to use for binding.</source>
          <target state="translated">リファレンスは、それ自体が命名システムに直接拘束されていないオブジェクトのアドレス情報を記録する方法を表します。このようなオブジェクトは、そのオブジェクトを使用するプログラムがそのオブジェクトの参照が何であるかを判断するための方法として、Referenceable インターフェースを実装することができます。例えば、オブジェクトをバインドする際に、オブジェクトが Referenceable インターフェイスを実装している場合、そのオブジェクトに対して getReference()を呼び出して、バインドに使用するリファレンスを取得することができます。</target>
        </trans-unit>
        <trans-unit id="0731039932ddf04f89aec388bc10248aa71c3293" translate="yes" xml:space="preserve">
          <source>A Reference represents a way of recording address information about objects which themselves are not directly bound to the naming system. Such objects can implement the Referenceable interface as a way for programs that use that object to determine what its Reference is. For example, when binding an object, if an object implements the Referenceable interface, getReference() can be invoked on the object to get its Reference to use for binding.</source>
          <target state="translated">リファレンスは、それ自体が命名システムに直接拘束されていないオブジェクトのアドレス情報を記録する方法を表します。このようなオブジェクトは、そのオブジェクトを使用するプログラムがそのオブジェクトの参照が何であるかを判断するための方法として、Referenceable インターフェースを実装することができます。例えば、オブジェクトをバインディングする際に、オブジェクトが Referenceable インターフェイスを実装している場合、そのオブジェクトに対して getReference()を呼び出して、バインディングに使用するリファレンスを取得することができます。</target>
        </trans-unit>
        <trans-unit id="4264db3c7ee124c340e610e7ebefdc1a8451fa89" translate="yes" xml:space="preserve">
          <source>A RelationNotification notification is sent, its type being:</source>
          <target state="translated">RelationNotification 通知が送信されます。</target>
        </trans-unit>
        <trans-unit id="5ac61035063a73b282ef8ef40f44e455f0e65bf7" translate="yes" xml:space="preserve">
          <source>A RelationNotification, with type RELATION_BASIC_CREATION, is sent.</source>
          <target state="translated">RELATION_BASIC_CREATION 型の RelationNotification が送信されます。</target>
        </trans-unit>
        <trans-unit id="9bfca27e3cf3e160da5442cef2903f856d3a0a9d" translate="yes" xml:space="preserve">
          <source>A RelationSupport object is used internally by the Relation Service to represent simple relations (only roles, no properties or methods), with an unlimited number of roles, of any relation type.</source>
          <target state="translated">RelationSupport オブジェクトは、任意のリレーションタイプの単純なリレーション(ロールのみで、プロパティやメソッドはありません)を表現するために Relation Service によって内部的に使用されます。</target>
        </trans-unit>
        <trans-unit id="2b5afc0ac78c2cf646952eec6da6199ce1326de0" translate="yes" xml:space="preserve">
          <source>A RelationSupport object is used internally by the Relation Service to represent simple relations (only roles, no properties or methods), with an unlimited number of roles, of any relation type. As internal representation, it is not exposed to the user.</source>
          <target state="translated">RelationSupportオブジェクトは、任意のリレーションタイプの単純なリレーション(ロールのみで、プロパティやメソッドはありません)を表現するために、リレーションサービスによって内部的に使用されます。内部表現なので、ユーザには公開されません。</target>
        </trans-unit>
        <trans-unit id="b629caa896430c731614690866acaa67f23a1984" translate="yes" xml:space="preserve">
          <source>A RelationTypeSupport object implements the RelationType interface.</source>
          <target state="translated">RelationTypeSupport オブジェクトは RelationType インターフェースを実装しています。</target>
        </trans-unit>
        <trans-unit id="ee8b0968b179d91d5ed759fc07925e3159b47910" translate="yes" xml:space="preserve">
          <source>A RenderContext encapsulates the information needed to produce a specific rendering from a RenderableImage.</source>
          <target state="translated">RenderContext は、RenderableImage から特定のレンダリングを生成するために必要な情報をカプセル化します。</target>
        </trans-unit>
        <trans-unit id="9078261ada39638a99acac9f9d32ef7fda248bd5" translate="yes" xml:space="preserve">
          <source>A RenderContext encapsulates the information needed to produce a specific rendering from a RenderableImage. It contains the area to be rendered specified in rendering-independent terms, the resolution at which the rendering is to be performed, and hints used to control the rendering process.</source>
          <target state="translated">RenderContext は、RenderableImage から特定のレンダリングを行うために必要な情報をカプセル化したものです。これには、レンダリングに依存しない用語で指定されたレンダリングされる領域、レンダリングが実行される解像度、レンダリングプロセスを制御するために使用されるヒントが含まれます。</target>
        </trans-unit>
        <trans-unit id="9dddeb4ca105c0161e9ad1fd2771bd4578b4cbed" translate="yes" xml:space="preserve">
          <source>A RenderableImage is a common interface for rendering-independent images (a notion which subsumes resolution independence).</source>
          <target state="translated">RenderableImageは、レンダリングに依存しない(解像度に依存しない)画像のための共通のインターフェースです。</target>
        </trans-unit>
        <trans-unit id="3c59214ddcb483d8f48a85ae353d28a809916b68" translate="yes" xml:space="preserve">
          <source>A RenderableImage is a common interface for rendering-independent images (a notion which subsumes resolution independence). That is, images which are described and have operations applied to them independent of any specific rendering of the image. For example, a RenderableImage can be rotated and cropped in resolution-independent terms. Then, it can be rendered for various specific contexts, such as a draft preview, a high-quality screen display, or a printer, each in an optimal fashion.</source>
          <target state="translated">RenderableImageは、レンダリングに依存しない(解像度に依存しない)画像のための共通のインタフェースです。つまり、画像の特定のレンダリングとは独立して記述され、それに適用される操作を持つ画像のことです。例えば,RenderableImageは,解像度に依存しない用語で回転や切り抜きを行うことができます.そして、それは、下書きプレビュー、高品質のスクリーン表示、プリンタなどの様々な特定のコンテキストのために、それぞれ最適な方法でレンダリングすることができる。</target>
        </trans-unit>
        <trans-unit id="e93dc7725a42f90d07760849bb6d6f6bbdeeac7a" translate="yes" xml:space="preserve">
          <source>A RenderedImage containing the desired output.</source>
          <target state="translated">希望する出力を含むRenderedImage。</target>
        </trans-unit>
        <trans-unit id="79bde1b0e74701b93db9ea2bcc42075ced48b74d" translate="yes" xml:space="preserve">
          <source>A RenderedImage is returned from a RenderableImage via the createRendering() method, which takes a RenderContext. The RenderContext specifies how the RenderedImage should be constructed. Note that it is not possible to extract pixels directly from a RenderableImage.</source>
          <target state="translated">RenderedImage は、RenderableImage から createRendering()メソッドを介して返されます。RenderContext は、RenderedImage をどのように構築するかを指定します。RenderableImage から直接ピクセルを抽出することはできないことに注意しましょう。</target>
        </trans-unit>
        <trans-unit id="93cdea27087d9b8a8a0a537fb17f4e431c836a31" translate="yes" xml:space="preserve">
          <source>A ResolveResult instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single ResolveResult instance should lock the object.</source>
          <target state="translated">ResolveResult インスタンスは、マルチスレッドによる同時アクセスに対して同期化されていません。1 つの ResolveResult インスタンスにアクセスして変更しようとする複数のスレッドは、オブジェクトをロックしなければなりません。</target>
        </trans-unit>
        <trans-unit id="d6ace36ae9882cf1b5bf51c8fccd0fb9fe4684da" translate="yes" xml:space="preserve">
          <source>A Retention meta-annotation has effect only if the meta-annotated type is used directly for annotation. It has no effect if the meta-annotated type is used as a member type in another annotation type.</source>
          <target state="translated">Retention メタ注釈は、メタ注釈された型が直接注釈に使用されている場合にのみ効果があります。メタ注釈型が他の注釈型のメンバ型として使用されている場合は効果がありません。</target>
        </trans-unit>
        <trans-unit id="ed104d8e87a3d8da6b36e28ccb0aec3193af8db7" translate="yes" xml:space="preserve">
          <source>A RoleInfo object summarises a role in a relation type.</source>
          <target state="translated">RoleInfoオブジェクトは、リレーション型のロールをまとめたものです。</target>
        </trans-unit>
        <trans-unit id="ec0a32da937a776c1063eab47ab7ca3cd55d6864" translate="yes" xml:space="preserve">
          <source>A RoleList represents a list of roles (Role objects).</source>
          <target state="translated">RoleListは、ロール(Roleオブジェクト)のリストを表します。</target>
        </trans-unit>
        <trans-unit id="791805f3afacc64ffc2d229168541451185927aa" translate="yes" xml:space="preserve">
          <source>A RoleList represents a list of roles (Role objects). It is used as parameter when creating a relation, and when trying to set several roles in a relation (via 'setRoles()' method). It is returned as part of a RoleResult, to provide roles successfully retrieved.</source>
          <target state="translated">RoleList は、ロールのリスト (Role オブジェクト)を表します。これは、リレーションを作成する際や、リレーション内に複数のロールを設定しようとする際のパラメータとして使用されます('setRoles()' メソッドを使用します)。これは、RoleResult の一部として返され、正常に取得されたロールを提供します。</target>
        </trans-unit>
        <trans-unit id="777446281cfb44efc3a7765d7980e9e852336293" translate="yes" xml:space="preserve">
          <source>A RoleUnresolvedList represents a list of RoleUnresolved objects, representing roles not retrieved from a relation due to a problem encountered when trying to access (read or write) the roles.</source>
          <target state="translated">RoleUnresolvedList は RoleUnresolved オブジェクトのリストを表し、ロールにアクセス(読み取りまたは書き込み)しようとした際に問題が発生したためにリレーションから取得できなかったロールを表します。</target>
        </trans-unit>
        <trans-unit id="7325ddd62ff36e6331d01ce341d2cf4fcf2ec099" translate="yes" xml:space="preserve">
          <source>A SAX ContentHandler that may be used to process SAX parse events (parsing transformation instructions) into a Templates object.</source>
          <target state="translated">TemplatesオブジェクトへのSAXパースイベント(パース変換命令)の処理に使用される可能性のあるSAX ContentHandler。</target>
        </trans-unit>
        <trans-unit id="ec7f22b21a9a2bac2d33c6eefb18ff62d0660ac4" translate="yes" xml:space="preserve">
          <source>A SAX parser must never report an XML declaration (XML 1.0, section 2.8) or a text declaration (XML 1.0, section 4.3.1) using this method.</source>
          <target state="translated">SAX パーサは、このメソッドを使用して XML 宣言(XML 1.0、セクション 2.8)やテキスト宣言(XML 1.0、セクション 4.3.1)を報告してはいけません。</target>
        </trans-unit>
        <trans-unit id="288bc4bc5d2c7f142d7ecd425afbdd9da11413c7" translate="yes" xml:space="preserve">
          <source>A SAX parser should never report an XML declaration (XML 1.0, section 2.8) or a text declaration (XML 1.0, section 4.3.1) using this method.</source>
          <target state="translated">SAX パーサは、このメソッドを使用して XML 宣言(XML 1.0、セクション 2.8)やテキスト宣言(XML 1.0、セクション 4.3.1)を報告してはいけません。</target>
        </trans-unit>
        <trans-unit id="283f19aa4142dd07d10f92cdf68cd1663a23134a" translate="yes" xml:space="preserve">
          <source>A SQL statement is precompiled and stored in a &lt;code&gt;PreparedStatement&lt;/code&gt; object. This object can then be used to efficiently execute this statement multiple times.</source>
          <target state="translated">SQLステートメントはプリコンパイルされ、 &lt;code&gt;PreparedStatement&lt;/code&gt; オブジェクトに格納されます。このオブジェクトを使用して、このステートメントを複数回効率的に実行できます。</target>
        </trans-unit>
        <trans-unit id="4f38ffe217bbbe39b23e4a9e889a3ea0ff7647bb" translate="yes" xml:space="preserve">
          <source>A SQL statement with or without IN parameters can be pre-compiled and stored in a &lt;code&gt;PreparedStatement&lt;/code&gt; object. This object can then be used to efficiently execute this statement multiple times.</source>
          <target state="translated">INパラメーターの有無にかかわらずSQLステートメントは、プリコンパイルして、 &lt;code&gt;PreparedStatement&lt;/code&gt; オブジェクトに格納できます。このオブジェクトを使用して、このステートメントを複数回効率的に実行できます。</target>
        </trans-unit>
        <trans-unit id="fbe07bcb178ca907bd1ca81ab707c31bcf66f7a6" translate="yes" xml:space="preserve">
          <source>A SSL socket must choose to operate in the client or server mode. This will determine who begins the handshaking process, as well as which messages should be sent by each party. Each connection must have one client and one server, or handshaking will not progress properly. Once the initial handshaking has started, a socket can not switch between client and server modes, even when performing renegotiations.</source>
          <target state="translated">SSLソケットはクライアントモードとサーバモードのどちらで動作するかを選択しなければなりません。これにより、誰がハンドシェイクプロセスを開始するか、また、各パーティがどのメッセージを送信するかが決定されます。各接続にはクライアントとサーバが1つずつ必要であり、そうでなければハンドシェイクは正しく進行しない。最初のハンドシェイクが開始されると、ソケットは再ネゴシエーションを行う際にもクライアントとサーバのモードを切り替えることができない。</target>
        </trans-unit>
        <trans-unit id="a613da8e4c6656a826823882ea40c2c07b2ade72" translate="yes" xml:space="preserve">
          <source>A START_DOCUMENT event is not required to be written to the stream. If present the attributes are written inside the appropriate XML declaration syntax</source>
          <target state="translated">START_DOCUMENTイベントは、ストリームに書き込まれる必要はありません。存在する場合、属性は適切なXML宣言構文の中に記述されます。</target>
        </trans-unit>
        <trans-unit id="d9343126a3fde0ac1e5e14db634f7712b994d330" translate="yes" xml:space="preserve">
          <source>A START_ELEMENT will be written by writing the name, namespaces, and attributes of the event in XML 1.0 valid syntax for START_ELEMENTs. The name is written by looking up the prefix for the namespace uri. The writer can be configured to respect prefixes of QNames. If the writer is respecting prefixes it must use the prefix set on the QName. The default behavior is to lookup the value for the prefix on the EventWriter's internal namespace context. Each attribute (if any) is written using the behavior specified in the attribute section of this table. Each namespace (if any) is written using the behavior specified in the namespace section of this table.</source>
          <target state="translated">START_ELEMENTは、イベントの名前、名前空間、属性を、START_ELEMENTのためのXML 1.0の有効な構文で記述することで記述されます。名前は、名前空間uriの接頭辞を検索して書き込まれます。ライターはQNamesの接頭辞を尊重するように設定することができます。接頭辞を尊重する場合、ライタはQNameに設定された接頭辞を使用しなければなりません。デフォルトの動作は、接頭辞の値を EventWriter の内部名前空間コンテキストで検索します。各属性(もしあれば)は、この表の属性セクションで指定された動作で書き込まれます。各名前空間(もしあれば)はこの表の名前空間の項で指定された動作で書き込まれます。</target>
        </trans-unit>
        <trans-unit id="002e3d363e7411d3e07136d328c345b536631fcc" translate="yes" xml:space="preserve">
          <source>A SampleModel describes how samples of a Raster are stored in the primitive array elements of a DataBuffer. Samples may be stored one per data element, as in a PixelInterleavedSampleModel or BandedSampleModel, or packed several to an element, as in a SinglePixelPackedSampleModel or MultiPixelPackedSampleModel. The SampleModel is also controls whether samples are sign extended, allowing unsigned data to be stored in signed Java data types such as byte, short, and int.</source>
          <target state="translated">SampleModel は、Raster のサンプルが DataBuffer のプリミティブ配列要素にどのように格納されるかを記述します。サンプルは、PixelInterleavedSampleModel や BandedSampleModel のようにデータ要素ごとに 1 つずつ保存されたり、SinglePixelPackedSampleModel や MultiPixelPackedSampleModel のように複数の要素を 1 つの要素にパックして保存されたりします。SampleModel は、サンプルが符号拡張されるかどうかも制御し、符号なしのデータを byte、short、int などの符号付き Java データ型に格納できるようにします。</target>
        </trans-unit>
        <trans-unit id="dbb4f8e610bbe24f131ded77d36352e5f9cdd1df" translate="yes" xml:space="preserve">
          <source>A SearchControls instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single SearchControls instance should lock the object.</source>
          <target state="translated">SearchControls インスタンスは、マルチスレッドの同時アクセスに対して同期化されていません。単一の SearchControls インスタンスにアクセスして変更しようとする複数のスレッドは、オブジェクトをロックする必要があります。</target>
        </trans-unit>
        <trans-unit id="1679714a37191663024ae5020a1a32e147d2158f" translate="yes" xml:space="preserve">
          <source>A SearchResult instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single SearchResult instance should lock the object.</source>
          <target state="translated">SearchResult インスタンスは、同時多発的なマルチスレッド アクセスに対して同期化されていません。単一の SearchResult インスタンスにアクセスして変更しようとする複数のスレッドは、オブジェクトをロックする必要があります。</target>
        </trans-unit>
        <trans-unit id="ddc878f0525a0ae2c63096397e4b4f076e278727" translate="yes" xml:space="preserve">
          <source>A Selector and its key set are safe for use by multiple concurrent threads. Its selected-key set and cancelled-key set, however, are not.</source>
          <target state="translated">セレクタとそのキーセットは、複数のスレッドが同時に使用しても安全です。しかし、選択されたキーセットとキャンセルされたキーセットは安全ではありません。</target>
        </trans-unit>
        <trans-unit id="2cfbf9afee5ca6970c51fad8addcc8b290639a32" translate="yes" xml:space="preserve">
          <source>A Selector's key set is safe for use by multiple concurrent threads. Retrieval operations from the key set do not generally block and so may overlap with new registrations that add to the set, or with the cancellation steps of selection operations that remove keys from the set. Iterators and spliterators return elements reflecting the state of the set at some point at or since the creation of the iterator/spliterator. They do not throw &lt;a href=&quot;../../util/concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">セレクターのキーセットは、複数の同時スレッドで安全に使用できます。キーセットからの取得操作は通常ブロックされないため、セットに追加される新しい登録、またはセットからキーを削除する選択操作のキャンセル手順と重複する場合があります。イテレータとスプリッタは、イテレータ/スプリタレータの作成時または作成以降のある時点でのセットの状態を反映する要素を返します。&lt;a href=&quot;../../util/concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;はスローされません。</target>
        </trans-unit>
        <trans-unit id="e00d2a48cc88debbbc8ff846e3e8b6896bb31b19" translate="yes" xml:space="preserve">
          <source>A SerialArray is not safe for use by multiple concurrent threads. If a SerialArray is to be used by more than one thread then access to the SerialArray should be controlled by appropriate synchronization.</source>
          <target state="translated">SerialArray は複数のスレッドが同時に使用しても安全ではない。SerialArray を複数のスレッドで使用する場合、SerialArray へのアクセスは適切な同期化によって制御されるべきである。</target>
        </trans-unit>
        <trans-unit id="44e526f281e668fb5e09c5ab3c87140d7227ca3e" translate="yes" xml:space="preserve">
          <source>A SerialBlob is not safe for use by multiple concurrent threads. If a SerialBlob is to be used by more than one thread then access to the SerialBlob should be controlled by appropriate synchronization.</source>
          <target state="translated">シリアルブロブは、複数のスレッドが同時に使用しても安全ではありません。シリアルブロブを複数のスレッドで使用する場合は、適切な同期化によってシリアルブロブへのアクセスを制御する必要があります。</target>
        </trans-unit>
        <trans-unit id="dd646d03ddb105d0bac81eced4b8eb0e3ff3c917" translate="yes" xml:space="preserve">
          <source>A SerialClob is not safe for use by multiple concurrent threads. If a SerialClob is to be used by more than one thread then access to the SerialClob should be controlled by appropriate synchronization.</source>
          <target state="translated">シリアルクロブを複数のスレッドで使用することは安全ではありません。シリアルクロブを複数のスレッドで使用する場合は、適切な同期化によってシリアルクロブへのアクセスを制御する必要があります。</target>
        </trans-unit>
        <trans-unit id="81574c1043d87636a063adedeabc66f1d61ceb85" translate="yes" xml:space="preserve">
          <source>A SerialDatalink is not safe for use by multiple concurrent threads. If a SerialDatalink is to be used by more than one thread then access to the SerialDatalink should be controlled by appropriate synchronization.</source>
          <target state="translated">SerialDatalink は複数のスレッドが同時に使用しても安全ではありません。SerialDatalinkを複数のスレッドで使用する場合は、SerialDatalinkへのアクセスを適切な同期化によって制御する必要があります。</target>
        </trans-unit>
        <trans-unit id="9f3eec55f797b3747a05d13091a8e49d493d2406" translate="yes" xml:space="preserve">
          <source>A SerialJavaObject is not safe for use by multiple concurrent threads. If a SerialJavaObject is to be used by more than one thread then access to the SerialJavaObject should be controlled by appropriate synchronization.</source>
          <target state="translated">SerialJavaObjectは、複数のスレッドで同時に使用することは安全ではありません。SerialJavaObjectを複数のスレッドで使用する場合は、適切な同期化によってSerialJavaObjectへのアクセスを制御しなければなりません。</target>
        </trans-unit>
        <trans-unit id="de69347512c9e24edad8226eeb10a28653f5fdad" translate="yes" xml:space="preserve">
          <source>A SerialRef is not safe for use by multiple concurrent threads. If a SerialRef is to be used by more than one thread then access to the SerialRef should be controlled by appropriate synchronization.</source>
          <target state="translated">SerialRefを複数のスレッドで使用することは安全ではありません。SerialRefを複数のスレッドで使用する場合は、適切な同期化によってSerialRefへのアクセスを制御する必要があります。</target>
        </trans-unit>
        <trans-unit id="64045efc284039aa388c3d2b54ec25a5435fe1b9" translate="yes" xml:space="preserve">
          <source>A SerialStruct is not safe for use by multiple concurrent threads. If a SerialStruct is to be used by more than one thread then access to the SerialStruct should be controlled by appropriate synchronization.</source>
          <target state="translated">SerialStructを複数のスレッドで使用することは安全ではありません。SerialStructを複数のスレッドで使用する場合は、適切な同期化によってSerialStructへのアクセスを制御する必要があります。</target>
        </trans-unit>
        <trans-unit id="3f04f99687730ce27ecb80dc343284595a3a84ae" translate="yes" xml:space="preserve">
          <source>A ServerRef represents the server-side handle for a remote object implementation.</source>
          <target state="translated">ServerRef は、リモートオブジェクトの実装のサーバー側ハンドルを表します。</target>
        </trans-unit>
        <trans-unit id="8b7dfc401c9e2278b7a452ecc6049b6c585c7a6e" translate="yes" xml:space="preserve">
          <source>A Service Provider Interface for transform and canonicalization algorithms.</source>
          <target state="translated">変換および正規化アルゴリズムのためのサービスプロバイダインタフェース。</target>
        </trans-unit>
        <trans-unit id="29f771aa9fe09756354550c2ac62170658a3b899" translate="yes" xml:space="preserve">
          <source>A ServicePermission contains a service principal name and a list of actions which specify the context the credential can be used within.</source>
          <target state="translated">ServicePermission には、サービス・プリンシパル名と、クレデンシャルが使用できるコンテキストを指定するアクショ ンのリストが含まれます。</target>
        </trans-unit>
        <trans-unit id="4ba48579f134d97906faffaf9f6e57bf973f9875" translate="yes" xml:space="preserve">
          <source>A Set-Cookie2 from request-host example for Domain=.local will be accepted, because the effective host name for the request- host is example.local, and example.local domain-matches .local.</source>
          <target state="translated">request-host example for Domain=.localのSet-Cookie2は、request-hostの有効なホスト名がexample.localであり、example.localのドメインが.localと一致するため、受け入れられます。</target>
        </trans-unit>
        <trans-unit id="6895bf828873767919772735d8c4d1094678e223" translate="yes" xml:space="preserve">
          <source>A Set-Cookie2 from request-host x.foo.com for Domain=.foo.com would be accepted.</source>
          <target state="translated">request-host x.foo.com for Domain=.foo.com からの Set-Cookie2 は受理されます。</target>
        </trans-unit>
        <trans-unit id="6f2144bbbd723933bf48da180bed425d06939a0b" translate="yes" xml:space="preserve">
          <source>A Set-Cookie2 from request-host y.x.foo.com for Domain=.foo.com would be rejected, because H is y.x and contains a dot.</source>
          <target state="translated">request-host y.x.foo.com for Domain=.foo.com からの Set-Cookie2 は、H が y.x でドットを含んでいるため拒否されます。</target>
        </trans-unit>
        <trans-unit id="6fb58c1fb8b4e8eee8655028b90b8e904f3c7f2e" translate="yes" xml:space="preserve">
          <source>A Set-Cookie2 with Domain=.com or Domain=.com., will always be rejected, because there is no embedded dot.</source>
          <target state="translated">Domain=.comまたはDomain=.com.のSet-Cookie2は、ドットが埋め込まれていないため、常に拒否されます。</target>
        </trans-unit>
        <trans-unit id="b858838aeabfa1457392741cd815a016065affc6" translate="yes" xml:space="preserve">
          <source>A Signature object can be used to generate and verify digital signatures.</source>
          <target state="translated">署名オブジェクトを使用して、デジタル署名を生成したり、検証したりすることができます。</target>
        </trans-unit>
        <trans-unit id="a93a9f1ae30f6c50f9486ccbbeaba1b1e61a03bf" translate="yes" xml:space="preserve">
          <source>A Smart Card terminal, sometimes referred to as a Smart Card Reader.</source>
          <target state="translated">スマートカード端末のことで、スマートカードリーダーと呼ばれることもあります。</target>
        </trans-unit>
        <trans-unit id="45dd47d159d4276919bf9e71ace96b84aa36c9fe" translate="yes" xml:space="preserve">
          <source>A Smart Card terminal, sometimes referred to as a Smart Card Reader. A CardTerminal object can be obtained by calling &lt;a href=&quot;cardterminals#list()&quot;&gt;CardTerminals.list()&lt;/a&gt; or &lt;a href=&quot;cardterminals#getTerminal(java.lang.String)&quot;&gt;CardTerminals.getTerminal()&lt;/a&gt;.</source>
          <target state="translated">スマートカードリーダーと呼ばれることもあるスマートカード端末。CardTerminalオブジェクトは、&lt;a href=&quot;cardterminals#list()&quot;&gt;CardTerminals.list（）&lt;/a&gt;または&lt;a href=&quot;cardterminals#getTerminal(java.lang.String)&quot;&gt;CardTerminals.getTerminal（）を&lt;/a&gt;呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="77a8571605263fd69eb1b488f0ad385fbdb5015f" translate="yes" xml:space="preserve">
          <source>A Smart Card with which a connection has been established.</source>
          <target state="translated">接続が確立されたスマートカード。</target>
        </trans-unit>
        <trans-unit id="42b8587782f713a7077049c19b38b7ff3a2fe65d" translate="yes" xml:space="preserve">
          <source>A Smart Card with which a connection has been established. Card objects are obtained by calling &lt;a href=&quot;cardterminal#connect(java.lang.String)&quot;&gt;&lt;code&gt;CardTerminal.connect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">接続が確立されたスマートカード。カードオブジェクトは、&lt;a href=&quot;cardterminal#connect(java.lang.String)&quot;&gt; &lt;code&gt;CardTerminal.connect()&lt;/code&gt; を&lt;/a&gt;呼び出すことによって取得されます。</target>
        </trans-unit>
        <trans-unit id="a255907101cfd692c0186357164537023b4a6bbc" translate="yes" xml:space="preserve">
          <source>A Smart Card's answer-to-reset bytes.</source>
          <target state="translated">スマートカードのアンサー・ツー・リセット・バイト。</target>
        </trans-unit>
        <trans-unit id="fdd4774986903d05177ad526d61b0b11a04cf2ae" translate="yes" xml:space="preserve">
          <source>A Smart Card's answer-to-reset bytes. A Card's ATR object can be obtained by calling &lt;a href=&quot;card#getATR()&quot;&gt;Card.getATR()&lt;/a&gt;. This class does not attempt to verify that the ATR encodes a semantically valid structure.</source>
          <target state="translated">スマートカードのリセットに対する回答バイト。カードのATRオブジェクトは、&lt;a href=&quot;card#getATR()&quot;&gt;Card.getATR（）を&lt;/a&gt;呼び出すことで取得できます。このクラスは、ATRが意味的に有効な構造をエンコードしていることを確認しようとはしません。</target>
        </trans-unit>
        <trans-unit id="93d994609fb379ae52ffefc83a20c2cfde345a5e" translate="yes" xml:space="preserve">
          <source>A SortingFocusTraversalPolicy which sorts Components based on their size, position, and orientation.</source>
          <target state="translated">コンポーネントをサイズ、位置、および方向に基づいてソートする SortingFocusTraversalPolicy。</target>
        </trans-unit>
        <trans-unit id="53f9189199a4c22307fee1ec82d36a18c980a207" translate="yes" xml:space="preserve">
          <source>A SortingFocusTraversalPolicy which sorts Components based on their size, position, and orientation. Based on their size and position, Components are roughly categorized into rows and columns. For a Container with horizontal orientation, columns run left-to-right or right-to-left, and rows run top- to-bottom. For a Container with vertical orientation, columns run top-to- bottom and rows run left-to-right or right-to-left. See &lt;code&gt;ComponentOrientation&lt;/code&gt; for more information. All columns in a row are fully traversed before proceeding to the next row.</source>
          <target state="translated">サイズ、位置、方向に基づいてコンポーネントを並べ替えるSortingFocusTraversalPolicy。コンポーネントは、サイズと位置に基づいて、行と列に大まかに分類されます。水平方向のコンテナの場合、列は左から右または右から左に実行され、行は上から下に実行されます。垂直方向のコンテナの場合、列は上から下に実行され、行は左から右または右から左に実行されます。詳細については、 &lt;code&gt;ComponentOrientation&lt;/code&gt; を参照してください。行のすべての列は、次の行に進む前に完全にトラバースされます。</target>
        </trans-unit>
        <trans-unit id="0f0f751c9f2576a082cf218b4944a0824c05d3d9" translate="yes" xml:space="preserve">
          <source>A Source object, or null if the href cannot be resolved, and the processor should try to resolve the URI itself.</source>
          <target state="translated">ソースオブジェクト、または href が解決できない場合は null で、プロセッサは URI 自体の解決を試みるべきです。</target>
        </trans-unit>
        <trans-unit id="0c7d2d97ab5f9a2a4c2647296f0fc3ee7ed7f73e" translate="yes" xml:space="preserve">
          <source>A SourceLocator object, or null if none was specified.</source>
          <target state="translated">SourceLocator オブジェクト、または指定されていない場合は null。</target>
        </trans-unit>
        <trans-unit id="5d60c9454eec886f4519e3a8d389a6f15b69f6a8" translate="yes" xml:space="preserve">
          <source>A Spliterator also reports a set of &lt;a href=&quot;#characteristics()&quot;&gt;&lt;code&gt;characteristics()&lt;/code&gt;&lt;/a&gt; of its structure, source, and elements from among &lt;a href=&quot;#ORDERED&quot;&gt;&lt;code&gt;ORDERED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#DISTINCT&quot;&gt;&lt;code&gt;DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#SORTED&quot;&gt;&lt;code&gt;SORTED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#NONNULL&quot;&gt;&lt;code&gt;NONNULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#IMMUTABLE&quot;&gt;&lt;code&gt;IMMUTABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#CONCURRENT&quot;&gt;&lt;code&gt;CONCURRENT&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt;. These may be employed by Spliterator clients to control, specialize or simplify computation. For example, a Spliterator for a &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; would report &lt;code&gt;SIZED&lt;/code&gt;, a Spliterator for a &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; would report &lt;code&gt;DISTINCT&lt;/code&gt;, and a Spliterator for a &lt;a href=&quot;sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; would also report &lt;code&gt;SORTED&lt;/code&gt;. Characteristics are reported as a simple unioned bit set. Some characteristics additionally constrain method behavior; for example if &lt;code&gt;ORDERED&lt;/code&gt;, traversal methods must conform to their documented ordering. New characteristics may be defined in the future, so implementors should not assign meanings to unlisted values.</source>
          <target state="translated">A Spliteratorはまた、一連の報告&lt;a href=&quot;#characteristics()&quot;&gt; &lt;code&gt;characteristics()&lt;/code&gt; &lt;/a&gt;の中から、その構造、ソース、および要素の&lt;a href=&quot;#ORDERED&quot;&gt; &lt;code&gt;ORDERED&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#DISTINCT&quot;&gt; &lt;code&gt;DISTINCT&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#SORTED&quot;&gt; &lt;code&gt;SORTED&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#NONNULL&quot;&gt; &lt;code&gt;NONNULL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#IMMUTABLE&quot;&gt; &lt;code&gt;IMMUTABLE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#CONCURRENT&quot;&gt; &lt;code&gt;CONCURRENT&lt;/code&gt; &lt;/a&gt;、及び&lt;a href=&quot;#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; を&lt;/a&gt;。これらは、計算を制御、特殊化、または簡素化するためにSplitteratorクライアントによって使用される場合があります。例えば、用Spliterator&lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;報告します &lt;code&gt;SIZED&lt;/code&gt; ためSpliterator、&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;報告する &lt;code&gt;DISTINCT&lt;/code&gt; 、およびのためのSpliterator&lt;a href=&quot;sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; &lt;/a&gt;また報告します &lt;code&gt;SORTED&lt;/code&gt; を。特性は、単純なユニオンビットセットとして報告されます。一部の特性は、メソッドの動作をさらに制約します。たとえば、 &lt;code&gt;ORDERED&lt;/code&gt; の場合、トラバーサルメソッドは文書化された順序に準拠する必要があります。将来、新しい特性が定義される可能性があるため、実装者はリストされていない値に意味を割り当てないでください。</target>
        </trans-unit>
        <trans-unit id="6248ef2d830cf1c3f13c7471c9dc229c171552bb" translate="yes" xml:space="preserve">
          <source>A Spliterator also reports a set of &lt;a href=&quot;spliterator#characteristics--&quot;&gt;&lt;code&gt;characteristics()&lt;/code&gt;&lt;/a&gt; of its structure, source, and elements from among &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;ORDERED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;SORTED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#NONNULL&quot;&gt;&lt;code&gt;NONNULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#IMMUTABLE&quot;&gt;&lt;code&gt;IMMUTABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#CONCURRENT&quot;&gt;&lt;code&gt;CONCURRENT&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt;. These may be employed by Spliterator clients to control, specialize or simplify computation. For example, a Spliterator for a &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; would report &lt;code&gt;SIZED&lt;/code&gt;, a Spliterator for a &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; would report &lt;code&gt;DISTINCT&lt;/code&gt;, and a Spliterator for a &lt;a href=&quot;sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; would also report &lt;code&gt;SORTED&lt;/code&gt;. Characteristics are reported as a simple unioned bit set. Some characteristics additionally constrain method behavior; for example if &lt;code&gt;ORDERED&lt;/code&gt;, traversal methods must conform to their documented ordering. New characteristics may be defined in the future, so implementors should not assign meanings to unlisted values.</source>
          <target state="translated">A Spliteratorはまた、一連の報告&lt;a href=&quot;spliterator#characteristics--&quot;&gt; &lt;code&gt;characteristics()&lt;/code&gt; &lt;/a&gt;の中から、その構造、ソース、および要素の&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;ORDERED&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;DISTINCT&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;SORTED&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator#NONNULL&quot;&gt; &lt;code&gt;NONNULL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator#IMMUTABLE&quot;&gt; &lt;code&gt;IMMUTABLE&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;spliterator#CONCURRENT&quot;&gt; &lt;code&gt;CONCURRENT&lt;/code&gt; &lt;/a&gt;、及び&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; を&lt;/a&gt;。これらは、計算を制御、特殊化、または簡略化するためにSpliteratorクライアントで使用できます。例えば、用Spliterator &lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;報告します &lt;code&gt;SIZED&lt;/code&gt; ためSpliterator、&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;報告する &lt;code&gt;DISTINCT&lt;/code&gt; 、およびのためのSpliterator &lt;a href=&quot;sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; &lt;/a&gt;また報告します &lt;code&gt;SORTED&lt;/code&gt; を。特性は、単純な結合ビットセットとして報告されます。一部の特性は、メソッドの動作をさらに制限します。たとえば、 &lt;code&gt;ORDERED&lt;/code&gt; の場合、走査メソッドはドキュメント化された順序に準拠する必要があります。新しい特性は将来定義される可能性があるため、実装者はリストにない値に意味を割り当てないでください。</target>
        </trans-unit>
        <trans-unit id="b367edba58ac5adb0acfdef2911c33149e7143da" translate="yes" xml:space="preserve">
          <source>A Spliterator may also partition off some of its elements (using &lt;a href=&quot;#trySplit()&quot;&gt;&lt;code&gt;trySplit()&lt;/code&gt;&lt;/a&gt;) as another Spliterator, to be used in possibly-parallel operations. Operations using a Spliterator that cannot split, or does so in a highly imbalanced or inefficient manner, are unlikely to benefit from parallelism. Traversal and splitting exhaust elements; each Spliterator is useful for only a single bulk computation.</source>
          <target state="translated">Spliteratorは、その要素の一部を（&lt;a href=&quot;#trySplit()&quot;&gt; &lt;code&gt;trySplit()&lt;/code&gt; &lt;/a&gt;を使用して）別のSplitteratorとして分割し、並列操作で使用することもできます。分割できない、または非常に不均衡または非効率的な方法で分割するスプリッターを使用する操作は、並列処理の恩恵を受ける可能性はほとんどありません。トラバーサルおよびスプリットエキゾーストエレメント。各スプリッターは、1回の一括計算にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="d9f6a0c6465be108c334cf628409a3ad690f8f7b" translate="yes" xml:space="preserve">
          <source>A Spliterator may also partition off some of its elements (using &lt;a href=&quot;spliterator#trySplit--&quot;&gt;&lt;code&gt;trySplit()&lt;/code&gt;&lt;/a&gt;) as another Spliterator, to be used in possibly-parallel operations. Operations using a Spliterator that cannot split, or does so in a highly imbalanced or inefficient manner, are unlikely to benefit from parallelism. Traversal and splitting exhaust elements; each Spliterator is useful for only a single bulk computation.</source>
          <target state="translated">Spliteratorは、その要素の一部を（&lt;a href=&quot;spliterator#trySplit--&quot;&gt; &lt;code&gt;trySplit()&lt;/code&gt; &lt;/a&gt;を使用して）別のSpliteratorとしてパーティション化し、並列処理で使用される場合もあります。分割できないSpliteratorを使用する操作、または分割が非常に不均衡または非効率的な方法で行われる操作では、並列処理のメリットが得られない可能性があります。横断および分割排気要素; 各Spliteratorは、単一の一括計算にのみ役立ちます。</target>
        </trans-unit>
        <trans-unit id="368447ad2a78e05e6fa041cfd6cfcca60712beff" translate="yes" xml:space="preserve">
          <source>A Spliterator may traverse elements individually (&lt;a href=&quot;#tryAdvance(java.util.function.Consumer)&quot;&gt;&lt;code&gt;tryAdvance()&lt;/code&gt;&lt;/a&gt;) or sequentially in bulk (&lt;a href=&quot;#forEachRemaining(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEachRemaining()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Spliteratorは、要素を個別にトラバースすることも（&lt;a href=&quot;#tryAdvance(java.util.function.Consumer)&quot;&gt; &lt;code&gt;tryAdvance()&lt;/code&gt; &lt;/a&gt;）、順次まとめてトラバースすることもできます（&lt;a href=&quot;#forEachRemaining(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEachRemaining()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9e6ecfecbfb5711aba7a9b40c9f235874d4a36ff" translate="yes" xml:space="preserve">
          <source>A Spliterator may traverse elements individually (&lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt;&lt;code&gt;tryAdvance()&lt;/code&gt;&lt;/a&gt;) or sequentially in bulk (&lt;a href=&quot;spliterator#forEachRemaining-java.util.function.Consumer-&quot;&gt;&lt;code&gt;forEachRemaining()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Spliteratorは要素を個別にトラバース（&lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt; &lt;code&gt;tryAdvance()&lt;/code&gt; &lt;/a&gt;）するか、一括で順次トラバース（&lt;a href=&quot;spliterator#forEachRemaining-java.util.function.Consumer-&quot;&gt; &lt;code&gt;forEachRemaining()&lt;/code&gt; &lt;/a&gt;）します。</target>
        </trans-unit>
        <trans-unit id="d7d4efb72039f9c4f8f7a5d8d0153ab18c6bbe28" translate="yes" xml:space="preserve">
          <source>A Spliterator specialized for &lt;code&gt;double&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 値に特化したSpliterator 。</target>
        </trans-unit>
        <trans-unit id="ee9833694647b182022aea939627acec11e77f90" translate="yes" xml:space="preserve">
          <source>A Spliterator specialized for &lt;code&gt;int&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 値に特化したSpliterator 。</target>
        </trans-unit>
        <trans-unit id="d75cf90e20587284a83f9f86eeabb428d03d4edb" translate="yes" xml:space="preserve">
          <source>A Spliterator specialized for &lt;code&gt;long&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; 値に特化したSpliterator 。</target>
        </trans-unit>
        <trans-unit id="67268317020c1926976403229b9b1887973879f6" translate="yes" xml:space="preserve">
          <source>A Spliterator specialized for primitive values.</source>
          <target state="translated">プリミティブ値に特化したスプリンタ。</target>
        </trans-unit>
        <trans-unit id="ca86126b3a78cfaba2bff794833a4eed9c92e384" translate="yes" xml:space="preserve">
          <source>A Spliterator that does not report &lt;code&gt;SIZED&lt;/code&gt; as required by &lt;code&gt;SUBSIZED&lt;/code&gt; is inconsistent and no guarantees can be made about any computation using that Spliterator.</source>
          <target state="translated">&lt;code&gt;SIZED&lt;/code&gt; が必要とする &lt;code&gt;SUBSIZED&lt;/code&gt; 報告しないSpliteratorは一貫性がなく、そのSpliteratorを使用する計算については保証できません。</target>
        </trans-unit>
        <trans-unit id="e3d62906e8da82ee77e8b2f4c0973f7fd498db04" translate="yes" xml:space="preserve">
          <source>A Spliterator that reports &lt;code&gt;SORTED&lt;/code&gt; must also report &lt;code&gt;ORDERED&lt;/code&gt;.</source>
          <target state="translated">報告A Spliterator &lt;code&gt;SORTED&lt;/code&gt; はまた報告しなければならない &lt;code&gt;ORDERED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05ee8b03530406302bf575aa5044154d110cfecb" translate="yes" xml:space="preserve">
          <source>A Stream Protocol Version.</source>
          <target state="translated">ストリームプロトコルバージョン。</target>
        </trans-unit>
        <trans-unit id="d8cf2e470f091b5c07da8eea4c11ca61ccf46934" translate="yes" xml:space="preserve">
          <source>A String consisting of the ObjectNames separated by newlines (\n).</source>
          <target state="translated">ObjectNames を改行で区切った文字列。</target>
        </trans-unit>
        <trans-unit id="3903bf31aa42e6c114795cdf491dbf0aa9693f8f" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Dialog&quot;.</source>
          <target state="translated">論理フォント &quot;Dialog&quot; の正準ファミリ名の文字列定数。</target>
        </trans-unit>
        <trans-unit id="0b30368c4aee17afbc6a4a4b0b74819e41ede594" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Dialog&quot;. It is useful in Font construction to provide compile-time verification of the name.</source>
          <target state="translated">論理フォント &quot;Dialog&quot; の正準ファミリ名のための文字列定数。これは、フォントの構築において、名前のコンパイル時検証を提供するのに便利です。</target>
        </trans-unit>
        <trans-unit id="f2718ae0b228c2ef8b11627c7586bdba20041b95" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;DialogInput&quot;.</source>
          <target state="translated">論理フ ォ ン ト 「DialogInput」 の正準ファミリ名を表す文字列定数。</target>
        </trans-unit>
        <trans-unit id="f370d094613558702ae869f997abe0955fc1a50b" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;DialogInput&quot;. It is useful in Font construction to provide compile-time verification of the name.</source>
          <target state="translated">論理フォント「DialogInput」の正準ファミリ名の文字列定数。これは、フォントの構築において、名前のコンパイル時検証を行うのに便利です。</target>
        </trans-unit>
        <trans-unit id="d21788d7d87c95f563cdd3e22817cfdd45783207" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Monospaced&quot;.</source>
          <target state="translated">論理フ ォ ン ト 「等幅」 の正準ファミリ名の文字列定数。</target>
        </trans-unit>
        <trans-unit id="59e6387686d4fbb9048e1731fd584211e5bc1033" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Monospaced&quot;. It is useful in Font construction to provide compile-time verification of the name.</source>
          <target state="translated">論理フォント &quot;Monospaced&quot; の正準ファミリ名のための文字列定数。これは、フォントの構築において、その名前のコンパイル時の検証を提供するのに便利です。</target>
        </trans-unit>
        <trans-unit id="adb0d16a019ad98c65549a78060709b3c0ca6429" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;SansSerif&quot;.</source>
          <target state="translated">論理フォント &quot;SansSerif&quot; の正規ファミリー名の文字列定数。</target>
        </trans-unit>
        <trans-unit id="82061b16ff90e409acf21344956476d7b26d4d2a" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;SansSerif&quot;. It is useful in Font construction to provide compile-time verification of the name.</source>
          <target state="translated">論理フォント「SansSerif」の正準ファミリ名のための文字列定数。これは、名前のコンパイル時の検証を提供するために、フォントの構築において有用です。</target>
        </trans-unit>
        <trans-unit id="dc8777c651c7eb618ad5b85e41b91d2568ef8166" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Serif&quot;.</source>
          <target state="translated">論理フォント &quot;Serif&quot; の正規ファミリー名の文字列定数。</target>
        </trans-unit>
        <trans-unit id="b0155bb93a72b6201d47b316c10976ba587dcf66" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Serif&quot;. It is useful in Font construction to provide compile-time verification of the name.</source>
          <target state="translated">論理フォント「Serif」の正準ファミリ名の文字列定数。これは、名前のコンパイル時の検証を提供するために、フォントの構築において有用である。</target>
        </trans-unit>
        <trans-unit id="a69696403e137dac0fd6dabe54afedd9ef18c862" translate="yes" xml:space="preserve">
          <source>A String containing the contents of the line, not including any &lt;a href=&quot;#lt&quot;&gt;line termination characters&lt;/a&gt;, or &lt;code&gt;null&lt;/code&gt; if the end of the stream has been reached</source>
          <target state="translated">いずれかを含めていない行の内容、含むA文字列&lt;a href=&quot;#lt&quot;&gt;回線終端文字&lt;/a&gt;、または &lt;code&gt;null&lt;/code&gt; ストリームの終わりに達した場合</target>
        </trans-unit>
        <trans-unit id="db6d1021028e3cbf16df11dca2fd2f2666ebbd60" translate="yes" xml:space="preserve">
          <source>A String containing the contents of the line, not including any line-termination characters, or null if the end of the stream has been reached</source>
          <target state="translated">行の内容を含む文字列で、行終端文字を含まないもの。</target>
        </trans-unit>
        <trans-unit id="87ae167984e6cc087671c105cb70aada9cb50df5" translate="yes" xml:space="preserve">
          <source>A String containing the contents of the line, not including any line-termination characters, or null if the end of the stream has been reached without reading any characters</source>
          <target state="translated">行の内容を含む文字列で、行末の文字は一切含まれません。</target>
        </trans-unit>
        <trans-unit id="8b2bdd600c04329d16ed051f51385b7261b43223" translate="yes" xml:space="preserve">
          <source>A String containing the name of the attribute.</source>
          <target state="translated">属性の名前を含む文字列。</target>
        </trans-unit>
        <trans-unit id="3cde810521bbbdbb0180b17cab5426000e0d4345" translate="yes" xml:space="preserve">
          <source>A String containing the resulting Base64 encoded characters</source>
          <target state="translated">Base64エンコードされた結果の文字を含む文字列</target>
        </trans-unit>
        <trans-unit id="8fe1847821681223cea518f8aa25b33656ee96f0" translate="yes" xml:space="preserve">
          <source>A String containing the type of the attribute.</source>
          <target state="translated">属性の型を含む文字列。</target>
        </trans-unit>
        <trans-unit id="fd57db6a7931be2d9006628a23d2fcc5acc407dc" translate="yes" xml:space="preserve">
          <source>A String identifying this object.</source>
          <target state="translated">このオブジェクトを識別する文字列。</target>
        </trans-unit>
        <trans-unit id="08477f881587328d65b47e64452e3918f1b048f3" translate="yes" xml:space="preserve">
          <source>A String representation of this notification.</source>
          <target state="translated">この通知の文字列表現。</target>
        </trans-unit>
        <trans-unit id="c5ccd1cc097e027dc844e7f01ac67691287abb3b" translate="yes" xml:space="preserve">
          <source>A String representing the host operating system encoding. This will follow the conventions documented in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2278.txt&quot;&gt; &lt;i&gt;RFC 2278: IANA Charset Registration Procedures&lt;/i&gt;&lt;/a&gt; except where historical names are returned for compatibility with previous versions of the Java platform. The value returned from method is valid only for the VM which returns it, for use in a DocFlavor. This is the charset for all the &quot;HOST&quot; pre-defined DocFlavors in the executing VM.</source>
          <target state="translated">ホストオペレーティングシステムのエンコーディングを表す文字列。これは、以前のバージョンのJavaプラットフォームとの互換性のために履歴名が返される場合を除き、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2278.txt&quot;&gt;&lt;i&gt;RFC 2278：IANA Charset Registration Proceduresに&lt;/i&gt;&lt;/a&gt;文書化され&lt;i&gt;て&lt;/i&gt;いる規則に従います。メソッドから返された値は、DocFlavorで使用するために、それを返すVMに対してのみ有効です。これは、実行中のVM内のすべての「HOST」事前定義DocFlavorの文字セットです。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="c1623ad3e0ba0f38c19e3766c7458e7310d27f8d" translate="yes" xml:space="preserve">
          <source>A SubjectDelegationPermission contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">SubjectDelegationPermissionは名前(「ターゲット名」とも呼ばれます)を含みますが、アクションリストはありません。</target>
        </trans-unit>
        <trans-unit id="a50393320641aa55977e14747b2b9d9fedb6e4ab" translate="yes" xml:space="preserve">
          <source>A SubmissionPublisher uses the &lt;a href=&quot;executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; supplied in its constructor for delivery to subscribers. The best choice of Executor depends on expected usage. If the generator(s) of submitted items run in separate threads, and the number of subscribers can be estimated, consider using a &lt;a href=&quot;executors#newFixedThreadPool(int)&quot;&gt;&lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt;&lt;/a&gt;. Otherwise consider using the default, normally the &lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">SubmissionPublisherは、コンストラク&lt;a href=&quot;executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;提供されたExecutorを使用してサブスクライバーに配信します。Executorの最適な選択は、予想される使用法によって異なります。送信されたアイテムのジェネレーターが別々のスレッドで実行され、サブスクライバーの数を見積もることができる場合は、&lt;a href=&quot;executors#newFixedThreadPool(int)&quot;&gt; &lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt; の&lt;/a&gt;使用を検討してください。それ以外の場合は、デフォルト、通常は&lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; の&lt;/a&gt;使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="1c296903804a48c18c444aaf1353143c6219973a" translate="yes" xml:space="preserve">
          <source>A Swing component, but nothing else is known about it.</source>
          <target state="translated">スイングコンポーネントですが、それ以外には何も知られていません。</target>
        </trans-unit>
        <trans-unit id="d973f324cf2b66189a9c2d305928a62c0a540f2c" translate="yes" xml:space="preserve">
          <source>A SynthStyle implementation used by Nimbus.</source>
          <target state="translated">Nimbusが使用するSynthStyleの実装。</target>
        </trans-unit>
        <trans-unit id="195ecfc6c24b070b2bbae61bce38bb6797ed4f1a" translate="yes" xml:space="preserve">
          <source>A SynthStyle implementation used by Nimbus. Each Region that has been registered with the NimbusLookAndFeel will have an associated NimbusStyle. Third party components that are registered with the NimbusLookAndFeel will therefore be handed a NimbusStyle from the look and feel from the #getStyle(JComponent, Region) method.</source>
          <target state="translated">Nimbusが使用するSynthStyleの実装です。NimbusLookAndFeelに登録されている各リージョンは、関連するNimbusStyleを持ちます。そのため、NimbusLookAndFeelに登録されているサードパーティのコンポーネントには、#getStyle(JComponent,Region)メソッドからルックアンドフィールからNimbusStyleが渡されます。</target>
        </trans-unit>
        <trans-unit id="6f5fb5f7436e1169598f89979c615e1c6b421f2b" translate="yes" xml:space="preserve">
          <source>A TabSet is comprised of many TabStops.</source>
          <target state="translated">タブセットは多数のタブストップで構成されています。</target>
        </trans-unit>
        <trans-unit id="4d2e65f1afaadf6e5b56ca96babd1e67ffc575b9" translate="yes" xml:space="preserve">
          <source>A TabSet is comprised of many TabStops. It offers methods for locating the closest TabStop to a given position and finding all the potential TabStops. It is also immutable.</source>
          <target state="translated">タブセットは、多数のタブストップで構成されています。これは、指定された位置に最も近いタブストップを検索し、すべての可能性のあるタブストップを見つけるためのメソッドを提供します。また、不変です。</target>
        </trans-unit>
        <trans-unit id="99a0f3b7d598fe63eb79043c7f602515aefc7bf9" translate="yes" xml:space="preserve">
          <source>A Templates object capable of being used for transformation purposes, never &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">変換の目的で使用できるTemplatesオブジェクトであり、 &lt;code&gt;null&lt;/code&gt; になることはありません。</target>
        </trans-unit>
        <trans-unit id="a0afb5034cda03fb53773a3b8b6c76d13225c26e" translate="yes" xml:space="preserve">
          <source>A Transformer object that may be used to perform a transformation in a single thread, never null.</source>
          <target state="translated">1つのスレッドで変換を実行するために使用される可能性のあるTransformerオブジェクトで、決してNULLではありません。</target>
        </trans-unit>
        <trans-unit id="165121885ff7031bb1ba281672c4c781d9e0c325" translate="yes" xml:space="preserve">
          <source>A TransformerFactory instance can be used to create &lt;a href=&quot;javax/xml/transform/transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;javax/xml/transform/templates&quot;&gt;&lt;code&gt;Templates&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">TransformerFactoryインスタンスを使用して、&lt;a href=&quot;javax/xml/transform/transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; &lt;/a&gt;オブジェクトと&lt;a href=&quot;javax/xml/transform/templates&quot;&gt; &lt;code&gt;Templates&lt;/code&gt; &lt;/a&gt;オブジェクトを作成できます。</target>
        </trans-unit>
        <trans-unit id="738d3ef9016284d5a4197e0c10f8c08675850a70" translate="yes" xml:space="preserve">
          <source>A TransformerFactory instance can be used to create &lt;a href=&quot;transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;templates&quot;&gt;&lt;code&gt;Templates&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">TransformerFactoryインスタンスを使用して、&lt;a href=&quot;transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; &lt;/a&gt;オブジェクトと&lt;a href=&quot;templates&quot;&gt; &lt;code&gt;Templates&lt;/code&gt; &lt;/a&gt;オブジェクトを作成できます。</target>
        </trans-unit>
        <trans-unit id="cab3ffd0b2890e9d3a40921261596ce362fa06cd" translate="yes" xml:space="preserve">
          <source>A TransformerHandler listens for SAX ContentHandler parse events and transforms them to a Result.</source>
          <target state="translated">TransformerHandler は、SAX ContentHandler のパース・イベントをリッスンし、それらを結果に変換します。</target>
        </trans-unit>
        <trans-unit id="f03eff628fc4eb1c7d82bf513d09fea53f007eb4" translate="yes" xml:space="preserve">
          <source>A TreeSelectionModel can be configured to allow only one path (&lt;code&gt;SINGLE_TREE_SELECTION&lt;/code&gt;) a number of contiguous paths (&lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt;) or a number of discontiguous paths (&lt;code&gt;DISCONTIGUOUS_TREE_SELECTION&lt;/code&gt;). A &lt;code&gt;RowMapper&lt;/code&gt; is used to determine if TreePaths are contiguous. In the absence of a RowMapper &lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt; and &lt;code&gt;DISCONTIGUOUS_TREE_SELECTION&lt;/code&gt; behave the same, that is they allow any number of paths to be contained in the TreeSelectionModel.</source>
          <target state="translated">TreeSelectionModelは、1つのパス（ &lt;code&gt;SINGLE_TREE_SELECTION&lt;/code&gt; ）、複数の連続したパス（ &lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt; ）、または複数の不連続なパス（ &lt;code&gt;DISCONTIGUOUS_TREE_SELECTION&lt;/code&gt; ）のみを許可するように構成できます。A &lt;code&gt;RowMapper&lt;/code&gt; のはのTreePathが連続しているかどうかを判断するために使用されています。RowMapperがない場合、 &lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt; と &lt;code&gt;DISCONTIGUOUS_TREE_SELECTION&lt;/code&gt; は同じように動作します。つまり、TreeSelectionModelに任意の数のパスを含めることができます。</target>
        </trans-unit>
        <trans-unit id="46172656d648db0ec18759d51f5eabcbde6598f3" translate="yes" xml:space="preserve">
          <source>A URI equivalent to this URI, but whose path is in normal form</source>
          <target state="translated">このURIと同等のURIで、パスが通常の形式のもの。</target>
        </trans-unit>
        <trans-unit id="a4305f044aa66375e2cc03aeddd3d88bf93aaf85" translate="yes" xml:space="preserve">
          <source>A URI for this file object.</source>
          <target state="translated">このファイルオブジェクトのURI。</target>
        </trans-unit>
        <trans-unit id="154269b7e32c514b5b1642379b1e1117058a96da" translate="yes" xml:space="preserve">
          <source>A URI is a uniform resource</source>
          <target state="translated">URIは統一されたリソースです。</target>
        </trans-unit>
        <trans-unit id="9367949ffb8f452862af1ba00ea6c875ca3f9707" translate="yes" xml:space="preserve">
          <source>A URI is absolute if, and only if, it has a scheme component.</source>
          <target state="translated">URIは、スキームコンポーネントを持つ場合に限り、絶対的なものです。</target>
        </trans-unit>
        <trans-unit id="94345fc265e9b24959e3d1ed9134dad6dc7e8e04" translate="yes" xml:space="preserve">
          <source>A URI is opaque if, and only if, it is absolute and its scheme-specific part does not begin with a slash character ('/'). An opaque URI has a scheme, a scheme-specific part, and possibly a fragment; all other components are undefined.</source>
          <target state="translated">URIは、それが絶対であり、そのスキーマ固有の部分がスラッシュ文字('/')で始まらない場合にのみ不透明である。不透明なURIは、スキーム、スキーム固有の部分、および場合によってはフラグメントを持つ。</target>
        </trans-unit>
        <trans-unit id="da466cddbd0f1331bfef8b2b4d58d23551683564" translate="yes" xml:space="preserve">
          <source>A URI to the resource; an empty &lt;code&gt;Optional&lt;/code&gt; if the resource is not found or a URI cannot be constructed to locate the resource</source>
          <target state="translated">リソースへのURI。空の &lt;code&gt;Optional&lt;/code&gt; リソースが見つからない場合、またはリソースを見つけるためのURIを構築できない場合</target>
        </trans-unit>
        <trans-unit id="b0e3fa5f67754d2e9848e74d28feb8d7ca0cc28c" translate="yes" xml:space="preserve">
          <source>A URI whose authority field has been parsed as a server-based authority</source>
          <target state="translated">権限フィールドがサーバベースの権限として解析されたURI</target>
        </trans-unit>
        <trans-unit id="2fcf4a492d36b6af7584282a3e866b529a8ee186" translate="yes" xml:space="preserve">
          <source>A URL Connection to a Java ARchive (JAR) file or an entry in a JAR file.</source>
          <target state="translated">Java ARchive (JAR)ファイルまたは JAR ファイル内のエントリへの URL 接続。</target>
        </trans-unit>
        <trans-unit id="7b36cd88efa53b8fd8140df198b49bbe4ab1f7ce" translate="yes" xml:space="preserve">
          <source>A URL can optionally specify a &quot;port&quot;, which is the port number to which the TCP connection is made on the remote host machine. If the port is not specified, the default port for the protocol is used instead. For example, the default port for &lt;code&gt;http&lt;/code&gt; is &lt;code&gt;80&lt;/code&gt;. An alternative port could be specified as:</source>
          <target state="translated">URLは、オプションで「ポート」を指定できます。これは、リモートホストマシンでTCP接続が確立されるポート番号です。ポートが指定されていない場合、プロトコルのデフォルトのポートが代わりに使用されます。たとえば、 &lt;code&gt;http&lt;/code&gt; のデフォルトポートは &lt;code&gt;80&lt;/code&gt; です。代替ポートは次のように指定できます。</target>
        </trans-unit>
        <trans-unit id="aa5301852c56aba73f775bfa7a5b22d2603450d5" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Set the DoInput flag to true if you intend to use the URL connection for input, false if not. The default is true.</source>
          <target state="translated">URL 接続は、入力および/または出力に使用することができます。入力に URL 接続を使用する場合は DoInput フラグを true に設定し、使用しない場合は false に設定します。既定値は true です。</target>
        </trans-unit>
        <trans-unit id="5244de89744fc5c25c418eba65578cda558ff54b" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Set the DoOutput flag to true if you intend to use the URL connection for output, false if not. The default is false.</source>
          <target state="translated">URL 接続は、入力および/または出力に使用することができます。出力に URL 接続を使用する場合は DoOutput フラグを true に設定し、使用しない場合は false に設定します。既定値は false です。</target>
        </trans-unit>
        <trans-unit id="8d8c5f4cb6e58fe5b76f34e8407b7e7bd29dcba8" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Set the doInput flag to true if you intend to use the URL connection for input, false if not. The default is true.</source>
          <target state="translated">URL 接続は、入力および/または出力に使用できます。入力に URL 接続を使用する場合は doInput フラグを true に設定し、使用しない場合は false に設定します。既定値は true です。</target>
        </trans-unit>
        <trans-unit id="4910ed6e30f883b0fe7e39dcfe9293b8a7ef6ac1" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Set the doOutput flag to true if you intend to use the URL connection for output, false if not. The default is false.</source>
          <target state="translated">URL 接続は、入力および/または出力に使用することができます。出力に URL 接続を使用する場合は doOutput フラグを true に設定し、使用しない場合は false に設定します。既定値は false です。</target>
        </trans-unit>
        <trans-unit id="766c723594f236c4538ccfb762a210a591498917" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Setting the &lt;code&gt;doInput&lt;/code&gt; flag to &lt;code&gt;true&lt;/code&gt; indicates that the application intends to read data from the URL connection.</source>
          <target state="translated">URL接続は、入力および/または出力に使用できます。 &lt;code&gt;doInput&lt;/code&gt; フラグを &lt;code&gt;true&lt;/code&gt; に設定すると、アプリケーションがURL接続からデータを読み取るつもりであることを示します。</target>
        </trans-unit>
        <trans-unit id="1a7da67c471a96ebf79df397de1637daa0bc78b3" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Setting the &lt;code&gt;doOutput&lt;/code&gt; flag to &lt;code&gt;true&lt;/code&gt; indicates that the application intends to write data to the URL connection.</source>
          <target state="translated">URL接続は、入力および/または出力に使用できます。 &lt;code&gt;doOutput&lt;/code&gt; フラグを &lt;code&gt;true&lt;/code&gt; に設定すると、アプリケーションがデータをURL接続に書き込むつもりであることを示します。</target>
        </trans-unit>
        <trans-unit id="1fbebfef446b244f3203c437b814094e77364922" translate="yes" xml:space="preserve">
          <source>A URL constructed from this URI</source>
          <target state="translated">このURIから構築されたURL</target>
        </trans-unit>
        <trans-unit id="9d10a2603b4e208793c8c68d9fdac790148d2841" translate="yes" xml:space="preserve">
          <source>A URL context for &lt;code&gt;name&lt;/code&gt; or the cached initial context. The result cannot be null.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; URLコンテキストまたはキャッシュされた初期コンテキスト。結果をnullにすることはできません。</target>
        </trans-unit>
        <trans-unit id="35e31bbbe45e6238bb463b154a7d9ec5a91fb8b1" translate="yes" xml:space="preserve">
          <source>A URL may have appended to it a &quot;fragment&quot;, also known as a &quot;ref&quot; or a &quot;reference&quot;. The fragment is indicated by the sharp sign character &quot;#&quot; followed by more characters. For example,</source>
          <target state="translated">URLには「フラグメント」が付加されている場合があります。フラグメントは、シャープな記号 &quot;#&quot;の後にさらに多くの文字が続くことで示されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="2039d67b96f857326c2ff123c85b3a8a95404175" translate="yes" xml:space="preserve">
          <source>A URL object representing the equivalent file URL</source>
          <target state="translated">等価のファイルURLを表すURLオブジェクト</target>
        </trans-unit>
        <trans-unit id="5d9699ce86879480eb18d3fbd5b85ec03b6b3614" translate="yes" xml:space="preserve">
          <source>A URL stream handler factory is used as specified in the &lt;a href=&quot;url#%3Cinit%3E(java.lang.String,java.lang.String,int,java.lang.String)&quot;&gt;URL constructor&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;url#%3Cinit%3E(java.lang.String,java.lang.String,int,java.lang.String)&quot;&gt;URLコンストラクターで&lt;/a&gt;指定されているように、URLストリームハンドラーファクトリが使用されます。</target>
        </trans-unit>
        <trans-unit id="c2e302f5891d1b4c08f7bcf5df80f1ab5397f165" translate="yes" xml:space="preserve">
          <source>A URL stream handler provider identifies itself with a provider-configuration file named java.net.spi.URLStreamHandlerProvider in the resource directory META-INF/services. The file should contain a list of fully-qualified concrete URL stream handler provider class names, one per line.</source>
          <target state="translated">URLストリーム・ハンドラ・プロバイダは、リソース・ディレクトリMETA-INF/servicesにあるjava.net.spi.URLStreamHandlerProviderという名前のプロバイダ設定ファイルで自分自身を識別します。このファイルには、完全に修飾された具体的な URL ストリームハンドラ・プロバイダ・クラス名のリストを 1 行に 1 つずつ含める必要があります。</target>
        </trans-unit>
        <trans-unit id="e791f7fee7aedc0ed0a03c5e49fd427ae335c426" translate="yes" xml:space="preserve">
          <source>A URL stream handler provider is a concrete subclass of this class that has a zero-argument constructor. URL stream handler providers may be installed in an instance of the Java platform by adding them to the application class path.</source>
          <target state="translated">URL ストリームハンドラ・プロバイダは、ゼロ引数のコンストラクタを持つこのクラスの具体的なサブクラスです。URL ストリームハンドラプロバイダは、アプリケーションクラスのパスに追加することで、Java プラットフォームのインスタンスにインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="fa63bf2e1ce3456d75297bda8f8418e5ea88c614" translate="yes" xml:space="preserve">
          <source>A URL to the resource; &lt;code&gt;null&lt;/code&gt; if the resource could not be found, a URL could not be constructed to locate the resource, access to the resource is denied by the security manager, or there isn't a module of the given name defined to the class loader.</source>
          <target state="translated">リソースへのURL。リソースが見つからなかった場合、リソースを見つけるためのURLを構築できなかった場合、リソースへのアクセスがセキュリティマネージャによって拒否された場合、またはクラスローダーに定義された指定名のモジュールがない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="686d1942f27451f39cf3f8eb1804e867663d839a" translate="yes" xml:space="preserve">
          <source>A URLConnection with support for HTTP-specific features.</source>
          <target state="translated">HTTP 固有の機能をサポートする URL 接続。</target>
        </trans-unit>
        <trans-unit id="9af20c4c1e6ff5245b9204d42ad98ee746d95004" translate="yes" xml:space="preserve">
          <source>A URLConnection with support for HTTP-specific features. See &lt;a href=&quot;http://www.w3.org/pub/WWW/Protocols/&quot;&gt; the spec &lt;/a&gt; for details.</source>
          <target state="translated">HTTP固有の機能をサポートするURLConnection。詳細について&lt;a href=&quot;http://www.w3.org/pub/WWW/Protocols/&quot;&gt;は、仕様&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="be182296d2804d94b9a2ee18ba5793be943e43fe" translate="yes" xml:space="preserve">
          <source>A Unicode character can also be represented by using its &lt;b&gt;Hex notation&lt;/b&gt; (hexadecimal code point value) directly as described in construct &lt;code&gt;\x{...}&lt;/code&gt;, for example a supplementary character U+2011F can be specified as &lt;code&gt;\x{2011F}&lt;/code&gt;, instead of two consecutive Unicode escape sequences of the surrogate pair &lt;code&gt;\uD840&lt;/code&gt;&lt;code&gt;\uDD1F&lt;/code&gt;.</source>
          <target state="translated">Unicode文字は、構成 &lt;code&gt;\x{...}&lt;/code&gt; で説明されているように、16&lt;b&gt;進表記&lt;/b&gt;（16進コードポイント値）を直接使用して表すこともできます。たとえば、補足文字U + 2011Fは代わりに &lt;code&gt;\x{2011F}&lt;/code&gt; として指定できます。サロゲートペア &lt;code&gt;\uD840&lt;/code&gt; &lt;code&gt;\uDD1F&lt;/code&gt; の2つの連続するUnicodeエスケープシーケンスの。</target>
        </trans-unit>
        <trans-unit id="7f38ebc1a2646d495dcc65b799102891c80b966a" translate="yes" xml:space="preserve">
          <source>A Unicode character can also be represented in a regular-expression by using its &lt;b&gt;Hex notation&lt;/b&gt;(hexadecimal code point value) directly as described in construct &lt;code&gt;\x{...}&lt;/code&gt;, for example a supplementary character U+2011F can be specified as &lt;code&gt;\x{2011F}&lt;/code&gt;, instead of two consecutive Unicode escape sequences of the surrogate pair &lt;code&gt;\uD840&lt;/code&gt;&lt;code&gt;\uDD1F&lt;/code&gt;.</source>
          <target state="translated">Unicode文字は、構文 &lt;code&gt;\x{...}&lt;/code&gt; で説明されているように、16 &lt;b&gt;進表記&lt;/b&gt;（16進コードポイント値）を直接使用して正規表現で表すこともできます。たとえば、補助文字U + 2011Fは &lt;code&gt;\x{2011F}&lt;/code&gt; として指定できます。{2011F}、サロゲートペア &lt;code&gt;\uD840&lt;/code&gt; &lt;code&gt;\uDD1F&lt;/code&gt; の2つの連続したUnicodeエスケープシーケンスの代わりに。</target>
        </trans-unit>
        <trans-unit id="eaf310432ca180b7afec132043396dd76e215fa9" translate="yes" xml:space="preserve">
          <source>A Unicode extended grapheme cluster boundary</source>
          <target state="translated">Unicode 拡張書記素クラスタ境界</target>
        </trans-unit>
        <trans-unit id="38aae3de7952dbe48a6406151bec5cf5e28b311d" translate="yes" xml:space="preserve">
          <source>A Unicode range may have more than one set of decimal digits. If multiple decimal digits sets are specified for the same Unicode range, one of the sets will take precedence as follows.</source>
          <target state="translated">1 つの Unicode 範囲は、複数の 10 進数の集合を持つ こ と がで き ます。同一の Unicode 範囲に対して複数の 10 進数セットが指定されている場合は、以下のようにいずれかのセットが優先されます。</target>
        </trans-unit>
        <trans-unit id="d674c354c7dc403f6c1635412848be85e540fb69" translate="yes" xml:space="preserve">
          <source>A VMID is a identifier that is unique across all Java virtual machines.</source>
          <target state="translated">VMIDは、すべてのJava仮想マシンに共通する一意の識別子です。</target>
        </trans-unit>
        <trans-unit id="90196b6563f9763af14eecbb3ae5c84ae6e40d4a" translate="yes" xml:space="preserve">
          <source>A VMID is a identifier that is unique across all Java virtual machines. VMIDs are used by the distributed garbage collector to identify client VMs.</source>
          <target state="translated">VMID は、すべての Java 仮想マシンにまたがる一意の識別子です。VMID は、分散型ガベージコレクタがクライアント VM を識別するために使用されます。</target>
        </trans-unit>
        <trans-unit id="e9a3d6f9767ce3a5ff8e8a2ee12bc9bad41f8362" translate="yes" xml:space="preserve">
          <source>A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class  javax.management.BooleanValueExp.</source>
          <target state="translated">引数を含む ValueExp オブジェクト。返されたオブジェクトは、非公開クラス javax.management.BooleanValueExp のインスタンスとしてシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="3ac069999aacbbba7fe0c87a4e7cd0b23e05b604" translate="yes" xml:space="preserve">
          <source>A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class  javax.management.NumericValueExp.</source>
          <target state="translated">引数を含む ValueExp オブジェクト。返されたオブジェクトは、非公開クラス javax.management.NumericValueExp のインスタンスとしてシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="6466036f6be6a06d3789cc75bdde132b7fc34cd2" translate="yes" xml:space="preserve">
          <source>A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BooleanValueExp&quot;&gt; javax.management.BooleanValueExp&lt;/a&gt;.</source>
          <target state="translated">引数を含むValueExpオブジェクト。返されたオブジェクトは、非パブリッククラス&lt;a href=&quot;../../serialized-form#javax.management.BooleanValueExp&quot;&gt;javax.management.BooleanValueExpの&lt;/a&gt;インスタンスとしてシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="21ce50c2a44dda142eee93ab86df474408b2b106" translate="yes" xml:space="preserve">
          <source>A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.NumericValueExp&quot;&gt; javax.management.NumericValueExp&lt;/a&gt;.</source>
          <target state="translated">引数を含むValueExpオブジェクト。返されるオブジェクトは、非パブリッククラス&lt;a href=&quot;../../serialized-form#javax.management.NumericValueExp&quot;&gt;javax.management.NumericValueExpの&lt;/a&gt;インスタンスとしてシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="e009f231e6128eed9dd899a26aad65683e5ff76e" translate="yes" xml:space="preserve">
          <source>A ValueExp object containing the string argument.</source>
          <target state="translated">文字列の引数を含む ValueExp オブジェクト。</target>
        </trans-unit>
        <trans-unit id="de22c6e9990da5a49747707bdd019ef158c6a772" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the difference between two arguments. The returned object will be serialized as an instance of the non-public class  javax.management.BinaryOpValueExp with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;query#MINUS&quot;&gt;&lt;code&gt;MINUS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つの引数の差を表すValueExp。返されたオブジェクトは、非公開クラスjavax.management.BinaryOpValueExpのインスタンスとして &lt;code&gt;op&lt;/code&gt; が&lt;a href=&quot;query#MINUS&quot;&gt; &lt;code&gt;MINUS&lt;/code&gt; に&lt;/a&gt;等しいインスタンスとしてシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="8c74afc32a5f7e81f815386cc19dea701c149ae0" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the difference between two arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt; javax.management.BinaryOpValueExp&lt;/a&gt; with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;#MINUS&quot;&gt;&lt;code&gt;MINUS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つの引数の違いを表すValueExp。返されるオブジェクトは、&lt;a href=&quot;#MINUS&quot;&gt; &lt;code&gt;MINUS&lt;/code&gt; &lt;/a&gt;等しい &lt;code&gt;op&lt;/code&gt; を持つ非パブリッククラス&lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt;javax.management.BinaryOpValueExpの&lt;/a&gt;インスタンスとしてシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="dac970aefa6859b648a0490bbf81cfc0c56fbaf3" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the product. The returned object will be serialized as an instance of the non-public class  javax.management.BinaryOpValueExp with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;query#TIMES&quot;&gt;&lt;code&gt;TIMES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">製品を表すValueExp。返されたオブジェクトは、非公開クラスjavax.management.BinaryOpValueExpのインスタンスとして &lt;code&gt;op&lt;/code&gt; が&lt;a href=&quot;query#TIMES&quot;&gt; &lt;code&gt;TIMES&lt;/code&gt; に&lt;/a&gt;等しいとしてシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="e3e2bd1be6dfba00422a2838a4d23ed7dcffc30b" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the product. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt; javax.management.BinaryOpValueExp&lt;/a&gt; with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;#TIMES&quot;&gt;&lt;code&gt;TIMES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">製品を表すValueExp。返されるオブジェクトは、非publicクラスのインスタンスとして直列化さ&lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt;javax.management.BinaryOpValueExp&lt;/a&gt;と &lt;code&gt;op&lt;/code&gt; に等しい&lt;a href=&quot;#TIMES&quot;&gt; &lt;code&gt;TIMES&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fb2307ebe7608266981f5807bc8dca0e01ae2792" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the quotient of two arguments. The returned object will be serialized as an instance of the non-public class  javax.management.BinaryOpValueExp with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;query#DIV&quot;&gt;&lt;code&gt;DIV&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つの引数の商を表すValueExp。返されたオブジェクトは、非パブリッククラスjavax.management.BinaryOpValueExpのインスタンスとして、 &lt;code&gt;op&lt;/code&gt; が&lt;a href=&quot;query#DIV&quot;&gt; &lt;code&gt;DIV&lt;/code&gt; に&lt;/a&gt;等しいとしてシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="0913e6076e38486448e01405a844d0dbd00409ad" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the quotient of two arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt; javax.management.BinaryOpValueExp&lt;/a&gt; with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;#DIV&quot;&gt;&lt;code&gt;DIV&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つの引数の商を表すValueExp。返されるオブジェクトは、非公開クラス&lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt;javax.management.BinaryOpValueExpの&lt;/a&gt;インスタンスとしてシリアル化され、 &lt;code&gt;op&lt;/code&gt; は&lt;a href=&quot;#DIV&quot;&gt; &lt;code&gt;DIV&lt;/code&gt; に&lt;/a&gt;等しくなります。</target>
        </trans-unit>
        <trans-unit id="e478ed03b6fed397fd38511cec48ee079619762f" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the sum or concatenation of the two arguments. The returned object will be serialized as an instance of the non-public class  javax.management.BinaryOpValueExp with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;query#PLUS&quot;&gt;&lt;code&gt;PLUS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つの引数の合計または連結を表すValueExp。返されたオブジェクトは、 &lt;code&gt;op&lt;/code&gt; が&lt;a href=&quot;query#PLUS&quot;&gt; &lt;code&gt;PLUS&lt;/code&gt; に&lt;/a&gt;等しい非パブリッククラスjavax.management.BinaryOpValueExpのインスタンスとしてシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="15cab161546e026ef993a9b8da56f93da01f2b44" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the sum or concatenation of the two arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt; javax.management.BinaryOpValueExp&lt;/a&gt; with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;#PLUS&quot;&gt;&lt;code&gt;PLUS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">2つの引数の合計または連結を表すValueExp。返されたオブジェクトは、非公開クラス&lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt;javax.management.BinaryOpValueExpの&lt;/a&gt;インスタンスとしてシリアル化され、 &lt;code&gt;op&lt;/code&gt; は&lt;a href=&quot;#PLUS&quot;&gt; &lt;code&gt;PLUS&lt;/code&gt; に&lt;/a&gt;等しくなります。</target>
        </trans-unit>
        <trans-unit id="da79d6a27b9722bcbb8eb927ed21919c37c40df7" translate="yes" xml:space="preserve">
          <source>A VarHandle can be obtained for a variable, such as a field, which is declared with Java generic types. As with the Core Reflection API, the VarHandle's variable type will be constructed from the erasure of the source-level type. When a VarHandle access mode method is invoked, the types of its arguments or the return value cast type may be generic types or type instances. If this occurs, the compiler will replace those types by their erasures when it constructs the symbolic type descriptor for the &lt;code&gt;invokevirtual&lt;/code&gt; instruction.</source>
          <target state="translated">VarHandleは、Java汎用型で宣言されているフィールドなどの変数に対して取得できます。Core Reflection APIと同様に、VarHandleの変数型は、ソースレベルの型の消去から構築されます。VarHandleアクセスモードメソッドが呼び出されると、その引数の型または戻り値のキャスト型はジェネリック型または型インスタンスになります。これが発生した場合、コンパイラは、 &lt;code&gt;invokevirtual&lt;/code&gt; 命令のシンボリック型記述子を作成するときに、それらの型を消去に置き換えます。</target>
        </trans-unit>
        <trans-unit id="2d64337fca144335343a7688adc0906139915db5" translate="yes" xml:space="preserve">
          <source>A VarHandle has:</source>
          <target state="translated">VarHandleは持っています。</target>
        </trans-unit>
        <trans-unit id="346d4362ea02fde74f598e5306bb7b843b16795e" translate="yes" xml:space="preserve">
          <source>A VarHandle is a dynamically strongly typed reference to a variable, or to a parametrically-defined family of variables, including static fields, non-static fields, array elements, or components of an off-heap data structure.</source>
          <target state="translated">VarHandle は、変数への動的に強く型付けされた参照、または静的フィールド、非静的フィールド、配列要素、またはオフヒープデータ構造のコンポーネントを含む変数のパラメトリックに定義されたファミリへの参照です。</target>
        </trans-unit>
        <trans-unit id="de1aa02407688dae7f5153e91a6ab574a175ad64" translate="yes" xml:space="preserve">
          <source>A VarHandle is a dynamically strongly typed reference to a variable, or to a parametrically-defined family of variables, including static fields, non-static fields, array elements, or components of an off-heap data structure. Access to such variables is supported under various &lt;em&gt;access modes&lt;/em&gt;, including plain read/write access, volatile read/write access, and compare-and-set.</source>
          <target state="translated">VarHandleは、変数、または静的フィールド、非静的フィールド、配列要素、オフヒープデータ構造のコンポーネントなど、パラメトリックに定義された変数ファミリーへの動的に厳密に型指定された参照です。このような変数&lt;em&gt;へのアクセス&lt;/em&gt;は、プレーンな読み取り/書き込みアクセス、揮発性の読み取り/書き込みアクセス、比較と設定など、さまざまな&lt;em&gt;アクセスモード&lt;/em&gt;でサポートされてい&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1dade9420af64edb18e50f6ed324d8bae4afc3fc" translate="yes" xml:space="preserve">
          <source>A Vector of non-source parameters, stored as arbitrary Objects.</source>
          <target state="translated">任意のオブジェクトとして格納される、ソース以外のパラメータのベクトル。</target>
        </trans-unit>
        <trans-unit id="0eaf561a3048faba6888488a8a46614e7b4a0163" translate="yes" xml:space="preserve">
          <source>A Vector of sources, stored as arbitrary Objects.</source>
          <target state="translated">任意のオブジェクトとして格納されたソースのベクトル。</target>
        </trans-unit>
        <trans-unit id="aac5e0222272bb261720ffcaaeeb78590ccfa9eb" translate="yes" xml:space="preserve">
          <source>A VetoableChange event gets fired whenever a bean changes a &quot;constrained&quot; property.</source>
          <target state="translated">Beanが &quot;constrained &quot;プロパティを変更するたびに、VetoableChangeイベントが発生します。</target>
        </trans-unit>
        <trans-unit id="47e1ca5f54a2d9b2109e0fe47cb06e0eeb891d55" translate="yes" xml:space="preserve">
          <source>A VetoableChange event gets fired whenever a bean changes a &quot;constrained&quot; property. You can register a VetoableChangeListener with a source bean so as to be notified of any constrained property updates.</source>
          <target state="translated">VetoableChangeイベントは、ビーンが &quot;constrained &quot;プロパティを変更するたびに発生します。制約付きプロパティの更新を通知するために、ソースビーンにVetoableChangeListenerを登録することができます。</target>
        </trans-unit>
        <trans-unit id="8f5c093ca0710ef1569a35eb50ff32a656d0bd3f" translate="yes" xml:space="preserve">
          <source>A View expresses the size that it would like to be in terms of three values, a minimum, a preferred, and a maximum span. Layout in a view is can be done independently upon each axis. For a properly functioning View implementation, the minimum span will be &amp;lt;= the preferred span which in turn will be &amp;lt;= the maximum span.</source>
          <target state="translated">ビューは、最小、優先、および最大スパンの3つの値で希望するサイズを表します。ビューのレイアウトは、軸ごとに独立して行うことができます。正しく機能するView実装の場合、最小スパンは&amp;lt;=優先スパンになり、優先スパンは&amp;lt;=最大スパンになります。</target>
        </trans-unit>
        <trans-unit id="aeb283117ceef294fc1fa38376fad98b35fbca1c" translate="yes" xml:space="preserve">
          <source>A View that tries to flow it's children into some partially constrained space.</source>
          <target state="translated">部分的に制約のある空間に子を流そうとするビュー。</target>
        </trans-unit>
        <trans-unit id="03d9d433c2e4e3037e29a1c00df9d2571ecc9562" translate="yes" xml:space="preserve">
          <source>A View that tries to flow it's children into some partially constrained space. This can be used to build things like paragraphs, pages, etc. The flow is made up of the following pieces of functionality.</source>
          <target state="translated">部分的に制約のある空間に子を流そうとするビュー。これを使って、段落やページなどを作成することができます。フローは以下の機能で構成されています。</target>
        </trans-unit>
        <trans-unit id="a59dbcf0e5ed997449c1ca960d3cfad12429ccf0" translate="yes" xml:space="preserve">
          <source>A WebSocket Client.</source>
          <target state="translated">WebSocketクライアント。</target>
        </trans-unit>
        <trans-unit id="6c0caac0032d15b5cbcf0bb9f34cc7144c7ecb40" translate="yes" xml:space="preserve">
          <source>A WindowListener object is registered via &lt;code&gt;addWindowListener&lt;/code&gt;</source>
          <target state="translated">WindowListenerオブジェクトは &lt;code&gt;addWindowListener&lt;/code&gt; を介して登録されます</target>
        </trans-unit>
        <trans-unit id="c20c932d676d18ddbf6f8a194924859cc6b4263d" translate="yes" xml:space="preserve">
          <source>A Windows L&amp;amp;F implementation of LabelUI.</source>
          <target state="translated">LabelUIのWindowsL＆F実装。</target>
        </trans-unit>
        <trans-unit id="4639c9c8aed77f95dec0c260268ce49ea6b2573b" translate="yes" xml:space="preserve">
          <source>A Windows L&amp;amp;F implementation of LabelUI. This implementation is completely static, i.e. there's only one UIView implementation that's shared by all JLabel objects.</source>
          <target state="translated">LabelUIのWindowsL＆F実装。この実装は完全に静的です。つまり、すべてのJLabelオブジェクトで共有されるUIView実装は1つだけです。</target>
        </trans-unit>
        <trans-unit id="6b46cfcc9ae92123b341dd696dd87a0c0c364511" translate="yes" xml:space="preserve">
          <source>A Windows L&amp;amp;F implementation of PopupMenuUI.</source>
          <target state="translated">PopupMenuUIのWindowsL＆F実装。</target>
        </trans-unit>
        <trans-unit id="38783a10643ea6017b77fdca0ae7c524df8d5714" translate="yes" xml:space="preserve">
          <source>A Windows L&amp;amp;F implementation of PopupMenuUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">PopupMenuUIのWindowsL＆F実装。この実装は、「結合された」ビュー/コントローラーです。</target>
        </trans-unit>
        <trans-unit id="b2aa3bd8fd31cdb2a0f7b728153dcf915cbfbbcf" translate="yes" xml:space="preserve">
          <source>A a String representation of this EventObject.</source>
          <target state="translated">このEventObjectのString表現。</target>
        </trans-unit>
        <trans-unit id="11757ec3e3827cf92d351ba865dfed39ea1240a9" translate="yes" xml:space="preserve">
          <source>A backslash ('\') is replaced by two backslashes.</source>
          <target state="translated">バックスラッシュ('\')は2つのバックスラッシュに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="d13a207d7d90fb5512d75f0c3479cc11ff6801c9" translate="yes" xml:space="preserve">
          <source>A backward focus traversal action.</source>
          <target state="translated">後ろ向きにフォーカスしたトラバーサルアクション。</target>
        </trans-unit>
        <trans-unit id="cada23d86d062aa416b782b62eb17b32428f781c" translate="yes" xml:space="preserve">
          <source>A bar or palette usually composed of push buttons or toggle buttons.</source>
          <target state="translated">通常はプッシュボタンやトグルボタンで構成されるバーやパレット。</target>
        </trans-unit>
        <trans-unit id="a955ae175ef5ad4bc0e6ffb66794bdd6dd6a1ca8" translate="yes" xml:space="preserve">
          <source>A bar or palette usually composed of push buttons or toggle buttons. It is often used to provide the most frequently used functions for an application.</source>
          <target state="translated">通常はプッシュボタンやトグルボタンで構成されるバーやパレット。アプリケーションで最も頻繁に使用される機能を提供するために使用されることが多い。</target>
        </trans-unit>
        <trans-unit id="b644c455a9509cb9d591b444af1a13434e31e755" translate="yes" xml:space="preserve">
          <source>A base class for &lt;code&gt;CellEditors&lt;/code&gt;, providing default implementations for the methods in the &lt;code&gt;CellEditor&lt;/code&gt; interface except &lt;code&gt;getCellEditorValue()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CellEditors&lt;/code&gt; の基本クラス &lt;code&gt;getCellEditorValue()&lt;/code&gt; を除く &lt;code&gt;CellEditor&lt;/code&gt; インターフェイスのメソッドのデフォルトの実装を提供します。</target>
        </trans-unit>
        <trans-unit id="91798e6442ae977e2b893d183265edc3147c3870" translate="yes" xml:space="preserve">
          <source>A base class for &lt;code&gt;CellEditors&lt;/code&gt;, providing default implementations for the methods in the &lt;code&gt;CellEditor&lt;/code&gt; interface except &lt;code&gt;getCellEditorValue()&lt;/code&gt;. Like the other abstract implementations in Swing, also manages a list of listeners.</source>
          <target state="translated">&lt;code&gt;CellEditors&lt;/code&gt; の基本クラス &lt;code&gt;getCellEditorValue()&lt;/code&gt; を除く &lt;code&gt;CellEditor&lt;/code&gt; インターフェイスのメソッドのデフォルトの実装を提供します。Swingの他の抽象実装と同様に、リスナーのリストも管理します。</target>
        </trans-unit>
        <trans-unit id="455e59b9955df043ed94f5a654bafd77c5c2c54e" translate="yes" xml:space="preserve">
          <source>A base class to use in creating a look and feel for Swing.</source>
          <target state="translated">Swingのルック&amp;フィールを作成する際に使用するベースクラスです。</target>
        </trans-unit>
        <trans-unit id="d0a9ecceee606636d10d1821b425fc447cbb76bd" translate="yes" xml:space="preserve">
          <source>A base interface that all views shall derive from.</source>
          <target state="translated">すべてのビューが派生する基本インターフェース。</target>
        </trans-unit>
        <trans-unit id="85a695e0a1b18958abe873386285f1bdbac52158" translate="yes" xml:space="preserve">
          <source>A base type for primitive specializations of &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; のプリミティブな特殊化の基本型。</target>
        </trans-unit>
        <trans-unit id="dee3cc77f71740db72c16054028dc7ae130310d3" translate="yes" xml:space="preserve">
          <source>A base type for primitive specializations of &lt;code&gt;Iterator&lt;/code&gt;. Specialized subtypes are provided for &lt;a href=&quot;primitiveiterator.ofint&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;primitiveiterator.oflong&quot;&gt;&lt;code&gt;long&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;primitiveiterator.ofdouble&quot;&gt;&lt;code&gt;double&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; のプリミティブな特殊化の基本型。&lt;a href=&quot;primitiveiterator.ofint&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;primitiveiterator.oflong&quot;&gt; &lt;code&gt;long&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;primitiveiterator.ofdouble&quot;&gt; &lt;code&gt;double&lt;/code&gt; &lt;/a&gt;値には、専用のサブタイプが用意されています。</target>
        </trans-unit>
        <trans-unit id="2b346f931b744f2effa3e679b4d22baf582e2493" translate="yes" xml:space="preserve">
          <source>A basic L&amp;amp;F implementation of JInternalFrame.</source>
          <target state="translated">JInternalFrameの基本的なL＆F実装。</target>
        </trans-unit>
        <trans-unit id="03e5c62b1ef7855739731ed5053d55441ac097df" translate="yes" xml:space="preserve">
          <source>A basic file view.</source>
          <target state="translated">基本的なファイルビューです。</target>
        </trans-unit>
        <trans-unit id="757c0088402967d24f23a8035cef98a04f349e45" translate="yes" xml:space="preserve">
          <source>A bean may have a default event typically applied when this bean is used.</source>
          <target state="translated">ビーンは、このビーンが使用されたときに通常適用されるデフォルトイベントを持っているかもしれません。</target>
        </trans-unit>
        <trans-unit id="d2a15aefed6017824efeac0412e782440b3a0c35" translate="yes" xml:space="preserve">
          <source>A bean may have a default property commonly updated when this bean is customized.</source>
          <target state="translated">ビーンは、このビーンがカスタマイズされたときに共通して更新されるデフォルトのプロパティを持つことがあります。</target>
        </trans-unit>
        <trans-unit id="7b273b9931986f91991a96e656bfa52cdde7293e" translate="yes" xml:space="preserve">
          <source>A bevel border UI resource.</source>
          <target state="translated">ベベルボーダーのUIリソース。</target>
        </trans-unit>
        <trans-unit id="018d39cd93e976ee471a7864af5f3ac20158c282" translate="yes" xml:space="preserve">
          <source>A binary data has been received.</source>
          <target state="translated">バイナリデータを受信しました。</target>
        </trans-unit>
        <trans-unit id="4648940a25187a7ad9c93ab3e21a7689feb5c6d2" translate="yes" xml:space="preserve">
          <source>A binary reference address is immutable in the sense that its fields once created, cannot be replaced. However, it is possible to access the byte array used to hold the opaque buffer. Programs are strongly recommended against changing this byte array. Changes to this byte array need to be explicitly synchronized.</source>
          <target state="translated">バイナリ参照アドレスは、一度作成されたフィールドを置き換えることができないという意味で不変です。しかし、不透明バッファを保持するために使用されるバイト配列にアクセスすることは可能です。プログラムはこのバイト配列を変更しないことを強く推奨します。このバイト配列の変更は明示的に同期化する必要があります。</target>
        </trans-unit>
        <trans-unit id="b7f76763a178b32dc17af7fcf8ca87ef2efe4315" translate="yes" xml:space="preserve">
          <source>A black and white only printer must not include the &lt;code&gt;PagesPerMinuteColor&lt;/code&gt; attribute in its attribute set or service registration. If this attribute is present, then the &lt;a href=&quot;colorsupported&quot;&gt;&lt;code&gt;ColorSupported&lt;/code&gt;&lt;/a&gt; printer description attribute must also be present and have a value of &lt;code&gt;SUPPORTED&lt;/code&gt;.</source>
          <target state="translated">白黒のみのプリンタでは、属性セットまたはサービス登録に &lt;code&gt;PagesPerMinuteColor&lt;/code&gt; 属性を含めないでください。この属性が存在する場合は、&lt;a href=&quot;colorsupported&quot;&gt; &lt;code&gt;ColorSupported&lt;/code&gt; &lt;/a&gt;プリンター記述属性も存在し、値が &lt;code&gt;SUPPORTED&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="28756260cab42ed3fc29c2fd2d2d202118fb38c6" translate="yes" xml:space="preserve">
          <source>A black and white only printer must not include the PagesPerMinuteColor attribute in its attribute set or service registration. If this attribute is present, then the &lt;a href=&quot;colorsupported&quot;&gt;&lt;code&gt;ColorSupported&lt;/code&gt;&lt;/a&gt; printer description attribute must also be present and have a value of SUPPORTED.</source>
          <target state="translated">白黒専用のプリンターでは、属性セットまたはサービス登録にPagesPerMinuteColor属性を含めないでください。この属性が存在する場合、&lt;a href=&quot;colorsupported&quot;&gt; &lt;code&gt;ColorSupported&lt;/code&gt; &lt;/a&gt;プリンターの説明属性も存在し、値がSUPPORTEDである必要があります。</target>
        </trans-unit>
        <trans-unit id="53259515a896c061e25a9ed15f463634c03f56e2" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether the concrete subclass supports the standard metadata format, set via the constructor.</source>
          <target state="translated">コンストラクタで設定された標準メタデータフォーマットをサポートしているかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="d9477ca049b88489d2b38149a23433afe1bc4eed" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether this plug-in supports the standard metadata format for image metadata, initially &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">このプラグインが画像メタデータの標準メタデータ形式をサポートするかどうかを示すブール値で、最初は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b83ab706b6e17d09a40ff25d34c822ad27c15d07" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether this plug-in supports the standard metadata format for stream metadata, initially &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">このプラグインがストリームメタデータの標準メタデータ形式をサポートするかどうかを示すブール値で、最初は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="586dc302c71cd147bbd0eb1bda6c4463b2e7b5ff" translate="yes" xml:space="preserve">
          <source>A border layout lays out a container, arranging and resizing its components to fit in five regions: north, south, east, west, and center.</source>
          <target state="translated">ボーダーレイアウトは、コンテナをレイアウトし、その構成要素を北、南、東、西、中央の5つの地域に合わせて配置したり、サイズを変更したりします。</target>
        </trans-unit>
        <trans-unit id="c8e83443a66028005dedb3435b96388107b471da" translate="yes" xml:space="preserve">
          <source>A border layout lays out a container, arranging and resizing its components to fit in five regions: north, south, east, west, and center. Each region may contain no more than one component, and is identified by a corresponding constant: &lt;code&gt;NORTH&lt;/code&gt;, &lt;code&gt;SOUTH&lt;/code&gt;, &lt;code&gt;EAST&lt;/code&gt;, &lt;code&gt;WEST&lt;/code&gt;, and &lt;code&gt;CENTER&lt;/code&gt;. When adding a component to a container with a border layout, use one of these five constants, for example:</source>
          <target state="translated">境界線レイアウトは、コンテナをレイアウトし、そのコンポーネントを北、南、東、西、中央の5つの領域に収まるように配置およびサイズ変更します。各リージョンには、1つのコンポーネントしか含めることができず、対応する定数（ &lt;code&gt;NORTH&lt;/code&gt; 、 &lt;code&gt;SOUTH&lt;/code&gt; 、 &lt;code&gt;EAST&lt;/code&gt; 、 &lt;code&gt;WEST&lt;/code&gt; 、および &lt;code&gt;CENTER&lt;/code&gt; ）で識別されます。境界線レイアウトのコンテナにコンポーネントを追加するときは、次の5つの定数のいずれかを使用します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="517df06dadc252901da6ef01e78578e693ec0af0" translate="yes" xml:space="preserve">
          <source>A border without focus.</source>
          <target state="translated">ピントの合っていないボーダー。</target>
        </trans-unit>
        <trans-unit id="b39ce668b8a6a89fc32432670ce35ae52e61bcc0" translate="yes" xml:space="preserve">
          <source>A bounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; backed by an array.</source>
          <target state="translated">配列に支えられた制限付き&lt;a href=&quot;blockingqueue&quot;&gt;ブロッキングキュー&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62ef4090491b3f77e59b611b48659dc0dcd37310" translate="yes" xml:space="preserve">
          <source>A bounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; backed by an array. This queue orders elements FIFO (first-in-first-out). The &lt;em&gt;head&lt;/em&gt; of the queue is that element that has been on the queue the longest time. The &lt;em&gt;tail&lt;/em&gt; of the queue is that element that has been on the queue the shortest time. New elements are inserted at the tail of the queue, and the queue retrieval operations obtain elements at the head of the queue.</source>
          <target state="translated">配列に支えられた制限付き&lt;a href=&quot;blockingqueue&quot;&gt;ブロッキングキュー&lt;/a&gt;。このキューは、要素をFIFO（先入れ先出し）で注文します。キューの&lt;em&gt;先頭&lt;/em&gt;は、キューに最も長い間存在していた要素です。キューの&lt;em&gt;末尾&lt;/em&gt;は、キューに最も短い時間存在していた要素です。新しい要素がキューの末尾に挿入され、キューの取得操作により、キューの先頭にある要素が取得されます。</target>
        </trans-unit>
        <trans-unit id="b53d722b4fd560e25dee8f224333fbad41cf9fb4" translate="yes" xml:space="preserve">
          <source>A box that does layout asynchronously.</source>
          <target state="translated">非同期にレイアウトを行うボックス。</target>
        </trans-unit>
        <trans-unit id="0e61d562b479de3b9e950e78b73dc829234eeec4" translate="yes" xml:space="preserve">
          <source>A box that does layout asynchronously. This is useful to keep the GUI event thread moving by not doing any layout on it. The layout is done on a granularity of operations on the child views. After each child view is accessed for some part of layout (a potentially time consuming operation) the remaining tasks can be abandoned or a new higher priority task (i.e. to service a synchronous request or a visible area) can be taken on.</source>
          <target state="translated">非同期にレイアウトを行うボックスです。GUIイベントスレッドにレイアウトを行わないことで、GUIイベントスレッドの動きを維持するのに便利です。レイアウトは、子ビューに対する操作の粒度で行われます。各子ビューがレイアウトの一部(時間を消費する可能性のある操作)にアクセスした後、残りのタスクを放棄するか、新しい優先度の高いタスク(例えば、同期リクエストや可視領域にサービスを提供するなど)を引き継ぐことができます。</target>
        </trans-unit>
        <trans-unit id="b4abeac083bd93bc54fb7b00d129de9a377831f0" translate="yes" xml:space="preserve">
          <source>A break iterator for character breaks</source>
          <target state="translated">文字の改行のための改行イテレータ</target>
        </trans-unit>
        <trans-unit id="51a9a46286d79ded1086a034d58ac0c2a8978838" translate="yes" xml:space="preserve">
          <source>A break iterator for line breaks</source>
          <target state="translated">改行のための改行イテレータ</target>
        </trans-unit>
        <trans-unit id="617aea254f35f926f8aa9dc19969e3dc93afda12" translate="yes" xml:space="preserve">
          <source>A break iterator for sentence breaks</source>
          <target state="translated">文章の改行のための改行イテレータ</target>
        </trans-unit>
        <trans-unit id="bd76fb690012655da975ab2cbf26de08e24283dd" translate="yes" xml:space="preserve">
          <source>A break iterator for word breaks</source>
          <target state="translated">単語の改行のための改行イテレータ</target>
        </trans-unit>
        <trans-unit id="406bc890e10642a15686bc5abafda22562398985" translate="yes" xml:space="preserve">
          <source>A brief description of the property, which may be null.</source>
          <target state="translated">プロパティの簡単な説明、それは無効な場合があります。</target>
        </trans-unit>
        <trans-unit id="7dc94e24dcfe5c7b1314267497f1ff31df1b8d99" translate="yes" xml:space="preserve">
          <source>A buffer is a linear, finite sequence of elements of a specific primitive type. Aside from its content, the essential properties of a buffer are its capacity, limit, and position:</source>
          <target state="translated">バッファとは、特定のプリミティブ型の要素の直線的で有限なシーケンスです。バッファの本質的な特性は、その内容とは別に、容量、限界、位置です。</target>
        </trans-unit>
        <trans-unit id="324c6bf038720a465066054397d4264a929bfa20" translate="yes" xml:space="preserve">
          <source>A buffer's</source>
          <target state="translated">バッファの</target>
        </trans-unit>
        <trans-unit id="a38d36a5171b52d9f4d2d9a4cc3e0cd798f3a0e0" translate="yes" xml:space="preserve">
          <source>A buffered character-input stream that keeps track of line numbers.</source>
          <target state="translated">行番号を追跡するバッファリングされた文字入力ストリーム。</target>
        </trans-unit>
        <trans-unit id="b3d3e341d936c2a9318fb36824834ab6e62b6e5a" translate="yes" xml:space="preserve">
          <source>A buffered character-input stream that keeps track of line numbers. This class defines methods &lt;a href=&quot;#setLineNumber(int)&quot;&gt;&lt;code&gt;setLineNumber(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getLineNumber()&quot;&gt;&lt;code&gt;getLineNumber()&lt;/code&gt;&lt;/a&gt; for setting and getting the current line number respectively.</source>
          <target state="translated">行番号を追跡するバッファリングされた文字入力ストリーム。このクラスは、現在の行番号を設定および取得するためのメソッド&lt;a href=&quot;#setLineNumber(int)&quot;&gt; &lt;code&gt;setLineNumber(int)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#getLineNumber()&quot;&gt; &lt;code&gt;getLineNumber()&lt;/code&gt; &lt;/a&gt;をそれぞれ定義します。</target>
        </trans-unit>
        <trans-unit id="127c3edf2b5b53a296ab7ff8b00ca59e412aef0d" translate="yes" xml:space="preserve">
          <source>A buffered character-input stream that keeps track of line numbers. This class defines methods &lt;a href=&quot;linenumberreader#setLineNumber-int-&quot;&gt;&lt;code&gt;setLineNumber(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;linenumberreader#getLineNumber--&quot;&gt;&lt;code&gt;getLineNumber()&lt;/code&gt;&lt;/a&gt; for setting and getting the current line number respectively.</source>
          <target state="translated">行番号を追跡するバッファリングされた文字入力ストリーム。このクラスは、現在の行番号をそれぞれ設定および取得するためのメソッド&lt;a href=&quot;linenumberreader#setLineNumber-int-&quot;&gt; &lt;code&gt;setLineNumber(int)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;linenumberreader#getLineNumber--&quot;&gt; &lt;code&gt;getLineNumber()&lt;/code&gt; &lt;/a&gt;を定義します。</target>
        </trans-unit>
        <trans-unit id="e65216352a7cdc1813ee9c1f3621f5fff483eb48" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents.</source>
          <target state="translated">&lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; オブジェクトから作成されたビルダーで、 &lt;code&gt;data source&lt;/code&gt; オブジェクトが表すデータベースへの接続を確立するために使用されます。</target>
        </trans-unit>
        <trans-unit id="3f9ce534d0b45e9473e99dfe870a0419c1b21269" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents. The connection properties that were specified for the &lt;code&gt;data source&lt;/code&gt; are used as the default values by the &lt;code&gt;PooledConnectionBuilder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; オブジェクトから作成されたビルダーで、 &lt;code&gt;data source&lt;/code&gt; オブジェクトが表すデータベースへの接続を確立するために使用されます。 &lt;code&gt;data source&lt;/code&gt; 指定された接続プロパティは、 &lt;code&gt;PooledConnectionBuilder&lt;/code&gt; によってデフォルト値として使用されます。</target>
        </trans-unit>
        <trans-unit id="c42aec692303e67d7e0cd838bc2b34e718365f35" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;DataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents.</source>
          <target state="translated">&lt;code&gt;data source&lt;/code&gt; オブジェクトが表すデータベースへの接続を確立するために使用される、 &lt;code&gt;DataSource&lt;/code&gt; オブジェクトから作成されたビルダー。</target>
        </trans-unit>
        <trans-unit id="558091f1b6a3efb4688fae32804636fdfc712164" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;DataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents. The connection properties that were specified for the &lt;code&gt;data source&lt;/code&gt; are used as the default values by the &lt;code&gt;ConnectionBuilder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;data source&lt;/code&gt; オブジェクトが表すデータベースへの接続を確立するために使用される、 &lt;code&gt;DataSource&lt;/code&gt; オブジェクトから作成されたビルダー。 &lt;code&gt;data source&lt;/code&gt; 指定された接続プロパティは、 &lt;code&gt;ConnectionBuilder&lt;/code&gt; によってデフォルト値として使用されます。</target>
        </trans-unit>
        <trans-unit id="566021a6baaeed56333107094a71714d8032b0e5" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;DataSource&lt;/code&gt; or &lt;code&gt;XADataSource&lt;/code&gt; object, used to create a &lt;a href=&quot;shardingkey&quot;&gt;&lt;code&gt;ShardingKey&lt;/code&gt;&lt;/a&gt; with sub-keys of supported data types.</source>
          <target state="translated">サポートされているデータ型の&lt;a href=&quot;shardingkey&quot;&gt; &lt;code&gt;ShardingKey&lt;/code&gt; &lt;/a&gt;を使用してShardingKeyを作成するために使用される、 &lt;code&gt;DataSource&lt;/code&gt; または &lt;code&gt;XADataSource&lt;/code&gt; オブジェクトから作成されたビルダー。</target>
        </trans-unit>
        <trans-unit id="61d9e88e2b428c2193e3b6be7223e6a2534e5383" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;DataSource&lt;/code&gt; or &lt;code&gt;XADataSource&lt;/code&gt; object, used to create a &lt;a href=&quot;shardingkey&quot;&gt;&lt;code&gt;ShardingKey&lt;/code&gt;&lt;/a&gt; with sub-keys of supported data types. Implementations must support JDBCType.VARCHAR and may also support additional data types.</source>
          <target state="translated">サポートされているデータ型の&lt;a href=&quot;shardingkey&quot;&gt; &lt;code&gt;ShardingKey&lt;/code&gt; &lt;/a&gt;を使用してShardingKeyを作成するために使用される、 &lt;code&gt;DataSource&lt;/code&gt; または &lt;code&gt;XADataSource&lt;/code&gt; オブジェクトから作成されたビルダー。実装はJDBCType.VARCHARをサポートする必要があり、追加のデータ型もサポートする場合があります。</target>
        </trans-unit>
        <trans-unit id="c4bfe00bc2cd3b2a915143b2b25128ac3d505377" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;XADataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents.</source>
          <target state="translated">&lt;code&gt;XADataSource&lt;/code&gt; オブジェクトから作成され、 &lt;code&gt;data source&lt;/code&gt; オブジェクトが表すデータベースへの接続を確立するために使用されるビルダー。</target>
        </trans-unit>
        <trans-unit id="bd7714e68eb51e63c2d6f82ae5563dd469619854" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;XADataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents. The connection properties that were specified for the &lt;code&gt;data source&lt;/code&gt; are used as the default values by the &lt;code&gt;XAConnectionBuilder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XADataSource&lt;/code&gt; オブジェクトから作成され、 &lt;code&gt;data source&lt;/code&gt; オブジェクトが表すデータベースへの接続を確立するために使用されるビルダー。 &lt;code&gt;data source&lt;/code&gt; 指定された接続プロパティは、 &lt;code&gt;XAConnectionBuilder&lt;/code&gt; によってデフォルト値として使用されます。</target>
        </trans-unit>
        <trans-unit id="fd06f2bbd6f49b4bdcf7cba3b88e386982cbd5ce" translate="yes" xml:space="preserve">
          <source>A builder for building &lt;a href=&quot;moduledescriptor&quot;&gt;&lt;code&gt;ModuleDescriptor&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;moduledescriptor&quot;&gt; &lt;code&gt;ModuleDescriptor&lt;/code&gt; &lt;/a&gt;オブジェクトを構築するためのビルダー。</target>
        </trans-unit>
        <trans-unit id="bfe1209556db202095f679c78205318316cc3c7f" translate="yes" xml:space="preserve">
          <source>A builder of &lt;a href=&quot;aclentry&quot;&gt;&lt;code&gt;AclEntry&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;aclentry&quot;&gt; &lt;code&gt;AclEntry&lt;/code&gt; &lt;/a&gt;オブジェクトのビルダー。</target>
        </trans-unit>
        <trans-unit id="48657716ecde9cf1aa0386b562b3c7f6b1e93571" translate="yes" xml:space="preserve">
          <source>A builder of &lt;a href=&quot;httpclient&quot;&gt;HTTP Clients&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;httpclient&quot;&gt;HTTPクライアントの&lt;/a&gt;ビルダー。</target>
        </trans-unit>
        <trans-unit id="9c1d56acb9250faa10dd305af9b2a71d1a6d125d" translate="yes" xml:space="preserve">
          <source>A builder of &lt;a href=&quot;httprequest&quot;&gt;HTTP requests&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;httprequest&quot;&gt;HTTPリクエストの&lt;/a&gt;ビルダー。</target>
        </trans-unit>
        <trans-unit id="3cd01e0b6f4639058df49a2a83a3afc3c4502df0" translate="yes" xml:space="preserve">
          <source>A builder of &lt;a href=&quot;websocket&quot;&gt;WebSocket Clients&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;websocket&quot;&gt;WebSocketクライアントの&lt;/a&gt;ビルダー。</target>
        </trans-unit>
        <trans-unit id="74c899729de99eee302f7445e3e0184e12bcf2d5" translate="yes" xml:space="preserve">
          <source>A built-in linear RGB color space.</source>
          <target state="translated">内蔵のリニアRGB色空間。</target>
        </trans-unit>
        <trans-unit id="0062b3fcd663e4e029d1ea6f304a146815cd4949" translate="yes" xml:space="preserve">
          <source>A built-in linear RGB color space. This space is based on the same RGB primaries as CS_sRGB, but has a linear tone reproduction curve.</source>
          <target state="translated">内蔵のリニアRGB色空間。この空間はCS_sRGBと同じRGB原色をベースにしているが、線形の階調再現曲線を持つ。</target>
        </trans-unit>
        <trans-unit id="30c3cd71c2aa594ef9ceaa865aafe8177481a872" translate="yes" xml:space="preserve">
          <source>A byte array containing the complete message</source>
          <target state="translated">完全なメッセージを含むバイト配列</target>
        </trans-unit>
        <trans-unit id="2fdf2d1cb3dfe2091e6c1d8bd86c78745f1e654c" translate="yes" xml:space="preserve">
          <source>A byte array that contains the profile data.</source>
          <target state="translated">プロファイルデータを含むバイト配列。</target>
        </trans-unit>
        <trans-unit id="1c29cf60f4f20b273d6f101f890b7459c68d9951" translate="yes" xml:space="preserve">
          <source>A byte array that contains the tagged data element. Returns &lt;code&gt;null&lt;/code&gt; if the specified tag doesn't exist.</source>
          <target state="translated">タグ付きデータ要素を含むバイト配列。指定されたタグが存在しない場合は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="cbc9cc88f9018e37e4137ac516b27f389f5eccd6" translate="yes" xml:space="preserve">
          <source>A byte buffer can be allocated as a &lt;a href=&quot;bytebuffer#direct&quot;&gt; &lt;i&gt;direct&lt;/i&gt;&lt;/a&gt; buffer, in which case the Java virtual machine will make a best effort to perform native I/O operations directly upon it.</source>
          <target state="translated">バイトバッファーは&lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;ダイレクト&lt;/i&gt;&lt;/a&gt;バッファーとして割り当てることができます。その場合、Java仮想マシンはネイティブのI / O操作を直接実行するために最善の努力をします。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="0fe13aa63192114f12b3a8e344ea4d7117f95759" translate="yes" xml:space="preserve">
          <source>A byte buffer can be created by &lt;a href=&quot;channels/filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt;&lt;code&gt;&lt;i&gt;mapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; a region of a file directly into memory, in which case a few additional file-related operations defined in the &lt;a href=&quot;mappedbytebuffer&quot;&gt;&lt;code&gt;MappedByteBuffer&lt;/code&gt;&lt;/a&gt; class are available.</source>
          <target state="translated">バイトバッファは、ファイルの領域をメモリに直接&lt;a href=&quot;channels/filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt; &lt;code&gt;&lt;i&gt;mapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;することで作成できます。その場合、&lt;a href=&quot;mappedbytebuffer&quot;&gt; &lt;code&gt;MappedByteBuffer&lt;/code&gt; &lt;/a&gt;クラスで定義されているいくつかの追加のファイル関連操作を使用できます。</target>
        </trans-unit>
        <trans-unit id="3c5f814251ab0cac9e1798c421a7d52224d57054" translate="yes" xml:space="preserve">
          <source>A byte buffer can be created by &lt;a href=&quot;channels/filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt;&lt;code&gt;&lt;i&gt;mapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; a region of a file directly into memory, in which case a few additional file-related operations defined in the &lt;a href=&quot;mappedbytebuffer&quot;&gt;&lt;code&gt;MappedByteBuffer&lt;/code&gt;&lt;/a&gt; class are available.</source>
          <target state="translated">バイトバッファは、ファイルの領域をメモリに直接&lt;a href=&quot;channels/filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt; &lt;code&gt;&lt;i&gt;mapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;することで作成できます。その場合、&lt;a href=&quot;mappedbytebuffer&quot;&gt; &lt;code&gt;MappedByteBuffer&lt;/code&gt; &lt;/a&gt;クラスで定義されているいくつかの追加のファイル関連操作を使用できます。</target>
        </trans-unit>
        <trans-unit id="2eb05d66e3c7c4442b0b85a159ad1f90174e0af1" translate="yes" xml:space="preserve">
          <source>A byte buffer containing the contents of the resource or an empty &lt;code&gt;Optional&lt;/code&gt; if not found</source>
          <target state="translated">リソースの内容を含むバイトバッファ、または見つからない場合は空の &lt;code&gt;Optional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cae5d7e92a952c9f183b9ac23cef0349767f9c4d" translate="yes" xml:space="preserve">
          <source>A byte buffer containing the encoded characters</source>
          <target state="translated">エンコードされた文字を含むバイトバッファ</target>
        </trans-unit>
        <trans-unit id="2b25d877daf83d19cc13a61ba16bd3ff131bbe6a" translate="yes" xml:space="preserve">
          <source>A byte buffer is either</source>
          <target state="translated">バイトバッファは</target>
        </trans-unit>
        <trans-unit id="8fe357f9c74421b793e6def02c6dd8e017a504dd" translate="yes" xml:space="preserve">
          <source>A byte buffer is not comparable to any other type of object.</source>
          <target state="translated">バイトバッファは他のタイプのオブジェクトとは比較になりません。</target>
        </trans-unit>
        <trans-unit id="4c8399125540b20bdb02f8e90db06eefe52cd4ac" translate="yes" xml:space="preserve">
          <source>A byte buffer is not equal to any other type of object.</source>
          <target state="translated">バイトバッファは他のタイプのオブジェクトと同じではありません。</target>
        </trans-unit>
        <trans-unit id="928e7d1b2622daaff3134713be2904a81648a760" translate="yes" xml:space="preserve">
          <source>A byte buffer mapped to a file</source>
          <target state="translated">ファイルにマッピングされたバイトバッファ</target>
        </trans-unit>
        <trans-unit id="25b8cb5ca683a1699796ded61ded855a5cee13da" translate="yes" xml:space="preserve">
          <source>A byte buffer provides access to its content as either a heterogeneous or homogeneous sequence of &lt;a href=&quot;bytebuffer#bin&quot;&gt;&lt;i&gt;binary data&lt;/i&gt;&lt;/a&gt; of any non-boolean primitive type, in either big-endian or little-endian &lt;a href=&quot;byteorder&quot;&gt;byte order&lt;/a&gt;.</source>
          <target state="translated">バイトバッファは、ビッグエンディアンまたはリトルエンディアンの&lt;a href=&quot;byteorder&quot;&gt;バイト順序&lt;/a&gt;で、非ブールプリミティブ型の&lt;a href=&quot;bytebuffer#bin&quot;&gt;&lt;i&gt;バイナリデータ&lt;/i&gt;&lt;/a&gt;の異種または同種シーケンスとしてそのコンテンツへのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="0b52ba3ab4c5d7deeda40a8723f5b43184feaa37" translate="yes" xml:space="preserve">
          <source>A byte buffer provides access to its content as either a heterogeneous or homogeneous sequence of &lt;a href=&quot;bytebuffer#bin&quot;&gt;binary data&lt;/a&gt; of any non-boolean primitive type, in either big-endian or little-endian &lt;a href=&quot;byteorder&quot;&gt;byte order&lt;/a&gt;.</source>
          <target state="translated">バイトバッファは、ビッグエンディアンまたはリトルエンディアンのいずれかの&lt;a href=&quot;byteorder&quot;&gt;バイトオーダーで&lt;/a&gt;、ブール型以外のプリミティブ型の&lt;a href=&quot;bytebuffer#bin&quot;&gt;バイナリデータ&lt;/a&gt;の異種または同種シーケンスとしてコンテンツへのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="89b17475be8ed8b74d9824ee945925183e8c4b46" translate="yes" xml:space="preserve">
          <source>A byte buffer.</source>
          <target state="translated">バイトバッファ。</target>
        </trans-unit>
        <trans-unit id="88bcbe82898f6c96d90acd1c56b5987f6f08ad0f" translate="yes" xml:space="preserve">
          <source>A byte channel that maintains a current</source>
          <target state="translated">カレントを維持するバイトチャネル</target>
        </trans-unit>
        <trans-unit id="845ad2cb4762b64991c6e2d6e95d59612deaf435" translate="yes" xml:space="preserve">
          <source>A calendar system is defined by the &lt;a href=&quot;chronology&quot;&gt;&lt;code&gt;Chronology&lt;/code&gt;&lt;/a&gt; interface, while a date in a calendar system is defined by the &lt;a href=&quot;chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">カレンダーシステムは&lt;a href=&quot;chronology&quot;&gt; &lt;code&gt;Chronology&lt;/code&gt; &lt;/a&gt;インターフェースによって定義され、カレンダーシステムの日付は&lt;a href=&quot;chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt;インターフェースによって定義されます。</target>
        </trans-unit>
        <trans-unit id="ce4b54aff35ccf9905033e61ef22da804a259a1e" translate="yes" xml:space="preserve">
          <source>A calendar system, used to organize and identify dates.</source>
          <target state="translated">カレンダーシステムで、日付を整理して識別するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b8c17792b7dc5b2e841edb56de9cd4dc47f658c5" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;checkPermission&lt;/code&gt; with &lt;code&gt;java.security.AllPermission&lt;/code&gt; does not result in a SecurityException.</source>
          <target state="translated">&lt;code&gt;java.security.AllPermission&lt;/code&gt; で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出しても、SecurityExceptionは発生しません。</target>
        </trans-unit>
        <trans-unit id="0153f14fc38bde22e0a2e72d882599272b17331f" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;forName(&quot;X&quot;)&lt;/code&gt; causes the class named &lt;code&gt;X&lt;/code&gt; to be initialized.</source>
          <target state="translated">&lt;code&gt;forName(&quot;X&quot;)&lt;/code&gt; を呼び出すと、 &lt;code&gt;X&lt;/code&gt; という名前のクラスが初期化されます。</target>
        </trans-unit>
        <trans-unit id="ccc6dca760accd0b2d5c4147af5d2b22b5e1ceaa" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;nn.getNumber()&lt;/code&gt; will then return &lt;b&gt;5&lt;/b&gt;.</source>
          <target state="translated">&lt;code&gt;nn.getNumber()&lt;/code&gt; への呼び出しは&lt;b&gt;5&lt;/b&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="acc3befecff36defc80810488e5d4f79be41dab2" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;setOriginalRow&lt;/code&gt; is irreversible.</source>
          <target state="translated">&lt;code&gt;setOriginalRow&lt;/code&gt; の呼び出しは元に戻せません。</target>
        </trans-unit>
        <trans-unit id="5d9747712d9c7476a00f6fa1bc5816c855acb2f5" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;start&lt;/code&gt; on a thread</source>
          <target state="translated">スレッドで &lt;code&gt;start&lt;/code&gt; する呼び出し</target>
        </trans-unit>
        <trans-unit id="fb38ea61db2c8d9a29ac9db67146e75701ab7b75" translate="yes" xml:space="preserve">
          <source>A call to plain &lt;code&gt;invoke&lt;/code&gt; works the same as a call to &lt;code&gt;invokeExact&lt;/code&gt;, if the symbolic type descriptor specified by the caller exactly matches the method handle's own type. If there is a type mismatch, &lt;code&gt;invoke&lt;/code&gt; attempts to adjust the type of the receiving method handle, as if by a call to &lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt;, to obtain an exactly invokable method handle &lt;code&gt;M2&lt;/code&gt;. This allows a more powerful negotiation of method type between caller and callee.</source>
          <target state="translated">呼び出し元によって指定されたシンボリック型記述子がメソッドハンドル自体の型と &lt;code&gt;invokeExact&lt;/code&gt; に一致する場合、プレーン &lt;code&gt;invoke&lt;/code&gt; は、invokeExactの呼び出しと同じように機能します。タイプの不一致がある場合、 &lt;code&gt;invoke&lt;/code&gt; は、&lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;asType&lt;/code&gt; を&lt;/a&gt;呼び出す場合と同様に、受信メソッドハンドルのタイプを調整して、正確に呼び出し可能なメソッドハンドル &lt;code&gt;M2&lt;/code&gt; を取得しようとします。これにより、呼び出し元と呼び出し先の間でメソッドタイプのより強力なネゴシエーションが可能になります。</target>
        </trans-unit>
        <trans-unit id="a1273885f9474307edbb63fe4336b5043edf79d1" translate="yes" xml:space="preserve">
          <source>A call to plain &lt;code&gt;invoke&lt;/code&gt; works the same as a call to &lt;code&gt;invokeExact&lt;/code&gt;, if the symbolic type descriptor specified by the caller exactly matches the method handle's own type. If there is a type mismatch, &lt;code&gt;invoke&lt;/code&gt; attempts to adjust the type of the receiving method handle, as if by a call to &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt;, to obtain an exactly invokable method handle &lt;code&gt;M2&lt;/code&gt;. This allows a more powerful negotiation of method type between caller and callee.</source>
          <target state="translated">プレーン &lt;code&gt;invoke&lt;/code&gt; は、呼び出し元によって指定されたシンボリック型記述子がメソッドハンドル自体の型と &lt;code&gt;invokeExact&lt;/code&gt; に一致する場合、invokeExactの呼び出しと同じように機能します。型の不一致がある場合、 &lt;code&gt;invoke&lt;/code&gt; は、&lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt;への呼び出しのように、受信メソッドハンドルの型を調整して、正確に呼び出し可能なメソッドハンドル &lt;code&gt;M2&lt;/code&gt; を取得しようとします。これにより、呼び出し元と呼び出し先の間でのメソッドタイプのより強力なネゴシエーションが可能になります。</target>
        </trans-unit>
        <trans-unit id="a17c6a5af8605b07ab534ab287ceff2fa43816d7" translate="yes" xml:space="preserve">
          <source>A call to the method &lt;code&gt;getParams&lt;/code&gt; returns the values stored in the &lt;code&gt;Hashtable&lt;/code&gt; object as an array of &lt;code&gt;Object&lt;/code&gt; instances. An element in this array may be a simple &lt;code&gt;Object&lt;/code&gt; instance or an array (which is a type of &lt;code&gt;Object&lt;/code&gt;). The particular setter method used determines whether an element in this array is an &lt;code&gt;Object&lt;/code&gt; or an array.</source>
          <target state="translated">&lt;code&gt;getParams&lt;/code&gt; メソッドを呼び出すと、 &lt;code&gt;Hashtable&lt;/code&gt; オブジェクトに格納されている値が &lt;code&gt;Object&lt;/code&gt; インスタンスの配列として返されます。この配列の要素は、単純な &lt;code&gt;Object&lt;/code&gt; インスタンスまたは配列（ &lt;code&gt;Object&lt;/code&gt; のタイプ）の場合があります。使用される特定のセッターメソッドは、この配列の要素が &lt;code&gt;Object&lt;/code&gt; か配列であるかを決定します。</target>
        </trans-unit>
        <trans-unit id="50587dcf47bbbd5d977c6c68d1dba4482e20af75" translate="yes" xml:space="preserve">
          <source>A call to the method &lt;code&gt;nextConflict&lt;/code&gt; will implicitly close an input stream if one is open and will clear the &lt;code&gt;SyncResolver&lt;/code&gt; object's warning chain.</source>
          <target state="translated">&lt;code&gt;nextConflict&lt;/code&gt; メソッドを呼び出すと、入力ストリームが開いている場合は暗黙的に閉じられ、 &lt;code&gt;SyncResolver&lt;/code&gt; オブジェクトの警告チェーンがクリアされます。</target>
        </trans-unit>
        <trans-unit id="518e192efe315dd3fb9a9fff3c71548a6a80b7d0" translate="yes" xml:space="preserve">
          <source>A call to the method &lt;code&gt;previousConflict&lt;/code&gt; will implicitly close an input stream if one is open and will clear the &lt;code&gt;SyncResolver&lt;/code&gt; object's warning chain.</source>
          <target state="translated">メソッド &lt;code&gt;previousConflict&lt;/code&gt; を呼び出すと、入力ストリームが開いている場合は暗黙的に閉じ、 &lt;code&gt;SyncResolver&lt;/code&gt; オブジェクトの警告チェーンがクリアされます。</target>
        </trans-unit>
        <trans-unit id="634085829af74ce806f9f2d387d3f5c712eaf824" translate="yes" xml:space="preserve">
          <source>A call to this method resets this &lt;code&gt;Mac&lt;/code&gt; object to the state it was in when previously initialized via a call to &lt;code&gt;init(Key)&lt;/code&gt; or &lt;code&gt;init(Key, AlgorithmParameterSpec)&lt;/code&gt;. That is, the object is reset and available to generate another MAC from the same key, if desired, via new calls to &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;doFinal&lt;/code&gt;. (In order to reuse this &lt;code&gt;Mac&lt;/code&gt; object with a different key, it must be reinitialized via a call to &lt;code&gt;init(Key)&lt;/code&gt; or &lt;code&gt;init(Key, AlgorithmParameterSpec)&lt;/code&gt;.</source>
          <target state="translated">このメソッドを呼び出すと、この &lt;code&gt;Mac&lt;/code&gt; オブジェクトが、以前に &lt;code&gt;init(Key)&lt;/code&gt; または &lt;code&gt;init(Key, AlgorithmParameterSpec)&lt;/code&gt; 呼び出して初期化されたときの状態にリセットされます。つまり、オブジェクトはリセットされ、必要に応じて、 &lt;code&gt;update&lt;/code&gt; および &lt;code&gt;doFinal&lt;/code&gt; の新しい呼び出しを介して、同じキーから別のMACを生成できます。 （この &lt;code&gt;Mac&lt;/code&gt; オブジェクトを別のキーで再利用するには、 &lt;code&gt;init(Key)&lt;/code&gt; または &lt;code&gt;init(Key, AlgorithmParameterSpec)&lt;/code&gt; 呼び出して再初期化する必要があります。</target>
        </trans-unit>
        <trans-unit id="4886ead2dadc8153d8df2ce75f91333caf2a6224" translate="yes" xml:space="preserve">
          <source>A call to this method resets this signature object to the state it was in when previously initialized for signing via a call to &lt;code&gt;initSign(PrivateKey)&lt;/code&gt;. That is, the object is reset and available to generate another signature from the same signer, if desired, via new calls to &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;sign&lt;/code&gt;.</source>
          <target state="translated">このメソッドを呼び出すと、この署名オブジェクトは、 &lt;code&gt;initSign(PrivateKey)&lt;/code&gt; の呼び出しを介して以前に署名用に初期化されたときの状態にリセットされます。つまり、オブジェクトはリセットされ、必要に応じて、 &lt;code&gt;update&lt;/code&gt; および &lt;code&gt;sign&lt;/code&gt; への新しい呼び出しを介して、同じ署名者から別の署名を生成できるようになります。</target>
        </trans-unit>
        <trans-unit id="76fc154e54203ae305cc7d9a3ee179a09214b472" translate="yes" xml:space="preserve">
          <source>A call to this method resets this signature object to the state it was in when previously initialized for verification via a call to &lt;code&gt;initVerify(PublicKey)&lt;/code&gt;. That is, the object is reset and available to verify another signature from the identity whose public key was specified in the call to &lt;code&gt;initVerify&lt;/code&gt;.</source>
          <target state="translated">このメソッドを呼び出すと、この署名オブジェクトは、 &lt;code&gt;initVerify(PublicKey)&lt;/code&gt; を呼び出して検証のために以前に初期化されたときの状態にリセットされます。つまり、オブジェクトがリセットされ、公開鍵が &lt;code&gt;initVerify&lt;/code&gt; の呼び出しで指定されたIDの別の署名を検証できるようになります。</target>
        </trans-unit>
        <trans-unit id="3c3f413a455df6c2e8fd25015d50c0b20ad9ebe5" translate="yes" xml:space="preserve">
          <source>A call to this method will return each outstanding task exactly once.</source>
          <target state="translated">このメソッドを呼び出すと、各未処理のタスクが正確に一度だけ返されます。</target>
        </trans-unit>
        <trans-unit id="eea4bd5a33950b5798360bfeb8fc27d91943934a" translate="yes" xml:space="preserve">
          <source>A callback that will be called exactly once after the Spi class has been instantiated and registered in a &lt;code&gt;ServiceRegistry&lt;/code&gt;.</source>
          <target state="translated">Spiクラスがインスタンス化され、 &lt;code&gt;ServiceRegistry&lt;/code&gt; に登録された後に1回だけ呼び出されるコールバック。</target>
        </trans-unit>
        <trans-unit id="73594faaa9514a1c74b8c1749cd461ade7dd464c" translate="yes" xml:space="preserve">
          <source>A callback that will be called exactly once after the Spi class has been instantiated and registered in a &lt;code&gt;ServiceRegistry&lt;/code&gt;. This may be used to verify that the environment is suitable for this service, for example that native libraries can be loaded. If the service cannot function in the environment where it finds itself, it should deregister itself from the registry.</source>
          <target state="translated">Spiクラスがインスタンス化されて &lt;code&gt;ServiceRegistry&lt;/code&gt; に登録された後に1回だけ呼び出されるコールバック。これは、環境がこのサービスに適していること、たとえばネイティブライブラリをロードできることを確認するために使用できます。自分自身が見つかる環境でサービスが機能しない場合は、レジストリから登録解除する必要があります。</target>
        </trans-unit>
        <trans-unit id="d9e488bdf35f09c0f0d09e9364cbcf74bf1848b2" translate="yes" xml:space="preserve">
          <source>A callback that will be whenever the Spi class has been deregistered from a &lt;code&gt;ServiceRegistry&lt;/code&gt;.</source>
          <target state="translated">Spiクラスが &lt;code&gt;ServiceRegistry&lt;/code&gt; から登録解除されたときに必ず発生するコールバック。</target>
        </trans-unit>
        <trans-unit id="0b158ecbe2cce58e46d356dc6dbe9612a22819c5" translate="yes" xml:space="preserve">
          <source>A caller can be marked as being &quot;privileged&quot; (see &lt;a href=&quot;#doPrivileged(java.security.PrivilegedAction)&quot;&gt;&lt;code&gt;doPrivileged&lt;/code&gt;&lt;/a&gt; and below). When making access control decisions, the &lt;code&gt;checkPermission&lt;/code&gt; method stops checking if it reaches a caller that was marked as &quot;privileged&quot; via a &lt;code&gt;doPrivileged&lt;/code&gt; call without a context argument (see below for information about a context argument). If that caller's domain has the specified permission and at least one limiting permission argument (if any) implies the requested permission, no further checking is done and &lt;code&gt;checkPermission&lt;/code&gt; returns quietly, indicating that the requested access is allowed. If that domain does not have the specified permission, an exception is thrown, as usual. If the caller's domain had the specified permission but it was not implied by any limiting permission arguments given in the call to &lt;code&gt;doPrivileged&lt;/code&gt; then the permission checking continues until there are no more callers or another &lt;code&gt;doPrivileged&lt;/code&gt; call matches the requested permission and returns normally.</source>
          <target state="translated">発信者は「特権」としてマークできます（&lt;a href=&quot;#doPrivileged(java.security.PrivilegedAction)&quot;&gt; &lt;code&gt;doPrivileged&lt;/code&gt; &lt;/a&gt;以下を参照）。アクセス制御の決定を行うとき、 &lt;code&gt;checkPermission&lt;/code&gt; メソッドは、コンテキスト引数なしの &lt;code&gt;doPrivileged&lt;/code&gt; 呼び出しを介して「特権」としてマークされた呼び出し元に到達したかどうかのチェックを停止します（コンテキスト引数については、以下を参照してください）。その呼び出し元のドメインに指定されたアクセス許可があり、少なくとも1つの制限アクセス許可引数（存在する場合）が要求されたアクセス許可を暗示している場合、それ以上のチェックは行われず、 &lt;code&gt;checkPermission&lt;/code&gt; 静かに戻り、要求されたアクセスが許可されていることを示します。そのドメインに指定された権限がない場合、通常どおり例外がスローされます。呼び出し元のドメインに指定されたアクセス許可があるが、 &lt;code&gt;doPrivileged&lt;/code&gt; の呼び出しで指定された制限アクセス許可引数によって暗示されていない場合、アクセス許可のチェックは、呼び出し元がなくなるか、別の &lt;code&gt;doPrivileged&lt;/code&gt; 呼び出しが要求されたアクセス許可と一致し、正常に戻るまで続行されます。</target>
        </trans-unit>
        <trans-unit id="0862bd54496a4757c9e9f164297b979e3e8f8ea7" translate="yes" xml:space="preserve">
          <source>A caller can be marked as being &quot;privileged&quot; (see &lt;a href=&quot;accesscontroller#doPrivileged-java.security.PrivilegedAction-&quot;&gt;&lt;code&gt;doPrivileged&lt;/code&gt;&lt;/a&gt; and below). When making access control decisions, the &lt;code&gt;checkPermission&lt;/code&gt; method stops checking if it reaches a caller that was marked as &quot;privileged&quot; via a &lt;code&gt;doPrivileged&lt;/code&gt; call without a context argument (see below for information about a context argument). If that caller's domain has the specified permission and at least one limiting permission argument (if any) implies the requested permission, no further checking is done and &lt;code&gt;checkPermission&lt;/code&gt; returns quietly, indicating that the requested access is allowed. If that domain does not have the specified permission, an exception is thrown, as usual. If the caller's domain had the specified permission but it was not implied by any limiting permission arguments given in the call to &lt;code&gt;doPrivileged&lt;/code&gt; then the permission checking continues until there are no more callers or another &lt;code&gt;doPrivileged&lt;/code&gt; call matches the requested permission and returns normally.</source>
          <target state="translated">呼び出し元は「特権付き」としてマークできます（&lt;a href=&quot;accesscontroller#doPrivileged-java.security.PrivilegedAction-&quot;&gt; &lt;code&gt;doPrivileged&lt;/code&gt; &lt;/a&gt;以下を参照）。アクセス制御の決定を行うとき、 &lt;code&gt;checkPermission&lt;/code&gt; メソッドは、コンテキスト引数なしの &lt;code&gt;doPrivileged&lt;/code&gt; 呼び出しを介して「特権」としてマークされた呼び出し元に到達したかどうかのチェックを停止します（コンテキスト引数については、以下を参照）。その呼び出し元のドメインに指定されたアクセス許可があり、少なくとも1つの制限アクセス許可引数（存在する場合）が要求されたアクセス許可を暗示する場合、それ以上のチェックは行われず、 &lt;code&gt;checkPermission&lt;/code&gt; が確認されます。静かに戻り、要求されたアクセスが許可されていることを示します。そのドメインに指定された権限がない場合、通常どおり、例外がスローされます。呼び出し元のドメインに指定されたアクセス許可があったが、それが &lt;code&gt;doPrivileged&lt;/code&gt; の呼び出しで与えられた制限アクセス許可引数によって暗示されなかった場合、呼び出し元がなくなるまで、または別の &lt;code&gt;doPrivileged&lt;/code&gt; 呼び出しが要求されたアクセス許可と一致して正常に戻るまで、アクセス許可のチェックが続行されます。</target>
        </trans-unit>
        <trans-unit id="f4f31ba8f0b9f51355a1e48264e3f68465bf471d" translate="yes" xml:space="preserve">
          <source>A caller can use the returned value to find out what features this &lt;code&gt;SecureRandom&lt;/code&gt; supports.</source>
          <target state="translated">呼び出し元は、戻り値を使用して、この &lt;code&gt;SecureRandom&lt;/code&gt; がサポートする機能を確認できます。</target>
        </trans-unit>
        <trans-unit id="e4753d9b632b33c1a0abdaa51b4b703409680b9b" translate="yes" xml:space="preserve">
          <source>A caller obtains a &lt;code&gt;SecureRandom&lt;/code&gt; instance via the no-argument constructor or one of the &lt;code&gt;getInstance&lt;/code&gt; methods. For example:</source>
          <target state="translated">呼び出し元は、引数なしのコンストラクターまたは &lt;code&gt;getInstance&lt;/code&gt; メソッドの1つを介して &lt;code&gt;SecureRandom&lt;/code&gt; インスタンスを取得します。例えば：</target>
        </trans-unit>
        <trans-unit id="4f95088e3230b86cb9b7c79d72fd9093503b3392" translate="yes" xml:space="preserve">
          <source>A caller obtains a SecureRandom instance via the no-argument constructor or one of the &lt;code&gt;getInstance&lt;/code&gt; methods:</source>
          <target state="translated">呼び出し元は、引数なしのコンストラクターまたは &lt;code&gt;getInstance&lt;/code&gt; メソッドの1つを介してSecureRandomインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="3c51b9f09fa6bf9ea50aeda8b949600008199a46" translate="yes" xml:space="preserve">
          <source>A caller requires permissions to access the Credentials in the returned &lt;code&gt;Set&lt;/code&gt;, or to modify the &lt;code&gt;Set&lt;/code&gt; itself. A &lt;code&gt;SecurityException&lt;/code&gt; is thrown if the caller does not have the proper permissions.</source>
          <target state="translated">呼び出し元は、返された &lt;code&gt;Set&lt;/code&gt; の Credentialsにアクセスするため、または &lt;code&gt;Set&lt;/code&gt; 自体を変更するための権限を必要とします。A &lt;code&gt;SecurityException&lt;/code&gt; が、発信者が適切な権限を持っていない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="1e48b60ad6e578809d6b962cd5312d6a4b206220" translate="yes" xml:space="preserve">
          <source>A cancellable asynchronous computation.</source>
          <target state="translated">キャンセル可能な非同期計算。</target>
        </trans-unit>
        <trans-unit id="67943adf19495c6479d17dbaae4d893b5cc515c6" translate="yes" xml:space="preserve">
          <source>A cancellable asynchronous computation. This class provides a base implementation of &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;, with methods to start and cancel a computation, query to see if the computation is complete, and retrieve the result of the computation. The result can only be retrieved when the computation has completed; the &lt;code&gt;get&lt;/code&gt; methods will block if the computation has not yet completed. Once the computation has completed, the computation cannot be restarted or cancelled (unless the computation is invoked using &lt;a href=&quot;#runAndReset()&quot;&gt;&lt;code&gt;runAndReset()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">キャンセル可能な非同期計算。このクラスは、&lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; の&lt;/a&gt;基本実装を提供し、計算を開始およびキャンセルするメソッド、計算が完了したかどうかを確認するクエリ、および計算の結果を取得するメソッドを提供します。結果は、計算が完了したときにのみ取得できます。計算がまだ完了していない場合、 &lt;code&gt;get&lt;/code&gt; メソッドはブロックします。計算が完了すると、計算を再開またはキャンセルすることはできません（&lt;a href=&quot;#runAndReset()&quot;&gt; &lt;code&gt;runAndReset()&lt;/code&gt; &lt;/a&gt;を使用して計算が呼び出されない限り）。</target>
        </trans-unit>
        <trans-unit id="8a206c9c1ebd0c5daa3ba1ae87da2f6428b62838" translate="yes" xml:space="preserve">
          <source>A cancellable asynchronous computation. This class provides a base implementation of &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;, with methods to start and cancel a computation, query to see if the computation is complete, and retrieve the result of the computation. The result can only be retrieved when the computation has completed; the &lt;code&gt;get&lt;/code&gt; methods will block if the computation has not yet completed. Once the computation has completed, the computation cannot be restarted or cancelled (unless the computation is invoked using &lt;a href=&quot;futuretask#runAndReset--&quot;&gt;&lt;code&gt;runAndReset()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">キャンセル可能な非同期計算。このクラスは、&lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; の&lt;/a&gt;基本実装を提供し、計算を開始およびキャンセルするメソッド、計算が完了しているかどうかを照会して計算の結果を取得するメソッドを備えています。結果は、計算が完了したときにのみ取得できます。計算がまだ完了していない場合、 &lt;code&gt;get&lt;/code&gt; メソッドはブロックします。計算が完了すると、計算を再開またはキャンセルできません（&lt;a href=&quot;futuretask#runAndReset--&quot;&gt; &lt;code&gt;runAndReset()&lt;/code&gt; &lt;/a&gt;を使用して計算が呼び出されない限り）。</target>
        </trans-unit>
        <trans-unit id="b21dfa611af8d9c0df34407a03e5ebd1c6a33f75" translate="yes" xml:space="preserve">
          <source>A canonical pathname is both absolute and unique. The precise definition of canonical form is system-dependent. This method first converts this pathname to absolute form if necessary, as if by invoking the &lt;a href=&quot;#getAbsolutePath()&quot;&gt;&lt;code&gt;getAbsolutePath()&lt;/code&gt;&lt;/a&gt; method, and then maps it to its unique form in a system-dependent way. This typically involves removing redundant names such as &lt;code&gt;&quot;.&quot;&lt;/code&gt; and &lt;code&gt;&quot;..&quot;&lt;/code&gt; from the pathname, resolving symbolic links (on UNIX platforms), and converting drive letters to a standard case (on Microsoft Windows platforms).</source>
          <target state="translated">正規のパス名は絶対パス名と一意パス名の両方です。正規形の正確な定義はシステムに依存します。このメソッドは、&lt;a href=&quot;#getAbsolutePath()&quot;&gt; &lt;code&gt;getAbsolutePath()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出す場合と同様に、必要に応じて最初にこのパス名を絶対形式に変換してから、システムに依存する方法で一意の形式にマップします。これには通常、 &lt;code&gt;&quot;.&quot;&lt;/code&gt; などの冗長な名前の削除が含まれます。そして、 &lt;code&gt;&quot;..&quot;&lt;/code&gt; パス名から、（UNIXプラットフォーム上）シンボリックリンクを解決し、（Microsoft Windowsプラットフォーム上で）標準ケースにドライブ文字を変換します。</target>
        </trans-unit>
        <trans-unit id="b24dd18062248073c34de95bfbf526897b131dd5" translate="yes" xml:space="preserve">
          <source>A canonical pathname is both absolute and unique. The precise definition of canonical form is system-dependent. This method first converts this pathname to absolute form if necessary, as if by invoking the &lt;a href=&quot;file#getAbsolutePath--&quot;&gt;&lt;code&gt;getAbsolutePath()&lt;/code&gt;&lt;/a&gt; method, and then maps it to its unique form in a system-dependent way. This typically involves removing redundant names such as &lt;code&gt;&quot;.&quot;&lt;/code&gt; and &lt;code&gt;&quot;..&quot;&lt;/code&gt; from the pathname, resolving symbolic links (on UNIX platforms), and converting drive letters to a standard case (on Microsoft Windows platforms).</source>
          <target state="translated">正規パス名は、絶対パスと一意のパスの両方です。正規形の正確な定義はシステムに依存します。このメソッドは、必要に応じて、&lt;a href=&quot;file#getAbsolutePath--&quot;&gt; &lt;code&gt;getAbsolutePath()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すのと同じように、このパス名を絶対形式に変換し、次にシステムに依存する方法で一意の形式にマップします。これには通常、 &lt;code&gt;&quot;.&quot;&lt;/code&gt; などの冗長な名前の削除が含まれます。そして、 &lt;code&gt;&quot;..&quot;&lt;/code&gt; パス名から、（UNIXプラットフォーム上）シンボリックリンクを解決し、（Microsoft Windowsプラットフォーム上で）標準ケースにドライブ文字を変換します。</target>
        </trans-unit>
        <trans-unit id="81bf709141336beed8f753343474c99206c52e04" translate="yes" xml:space="preserve">
          <source>A capability-based lock with three modes for controlling read/write access.</source>
          <target state="translated">読み取り/書き込みアクセスを制御するための3つのモードを備えたケイパビリティベースのロック。</target>
        </trans-unit>
        <trans-unit id="3c2e4112d21cf12f2a7a271b9c964f9ff2328115" translate="yes" xml:space="preserve">
          <source>A capability-based lock with three modes for controlling read/write access. The state of a StampedLock consists of a version and mode. Lock acquisition methods return a stamp that represents and controls access with respect to a lock state; &quot;try&quot; versions of these methods may instead return the special value zero to represent failure to acquire access. Lock release and conversion methods require stamps as arguments, and fail if they do not match the state of the lock. The three modes are:</source>
          <target state="translated">読み取り/書き込みアクセスを制御するための3つのモードを持つケイパビリティベースのロック。StampedLockの状態は、バージョンとモードで構成されます。これらのメソッドの &quot;try&quot; バージョンでは、アクセスの取得に失敗したことを表す特別な値ゼロを返すことがあります。ロック解放メソッドと変換メソッドは、引数としてスタンプを必要とし、ロックの状態と一致しない場合は失敗します。3つのモードがあります。</target>
        </trans-unit>
        <trans-unit id="b4c23c15c033507b435f0f0a354dbc2b8655d74c" translate="yes" xml:space="preserve">
          <source>A capturing group can also be assigned a &quot;name&quot;, a &lt;code&gt;named-capturing group&lt;/code&gt;, and then be back-referenced later by the &quot;name&quot;. Group names are composed of the following characters. The first character must be a &lt;code&gt;letter&lt;/code&gt;.</source>
          <target state="translated">キャプチャグループには、「名前」、 &lt;code&gt;named-capturing group&lt;/code&gt; 割り当てて、後で「名前」で後方参照することもできます。グループ名は以下の文字で構成されています。最初の文字でなければなりません &lt;code&gt;letter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cff8bffd93ff124f465e2fd1a81f11d6fce23cb2" translate="yes" xml:space="preserve">
          <source>A carriage return (CR) character standing by itself means &quot;go to column 1 of the next line.&quot;</source>
          <target state="translated">キャリッジリターン(CR)文字は、それ自体が &quot;次の行の1列目に行く &quot;ことを意味します。</target>
        </trans-unit>
        <trans-unit id="c9d0a280ee3997ec1b9b09288f8793052e7adc66" translate="yes" xml:space="preserve">
          <source>A carriage-return character followed immediately by a newline character (&lt;code&gt;&quot;\r\n&quot;&lt;/code&gt;),</source>
          <target state="translated">復帰文字とそれに続く改行文字（ &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt; ）、</target>
        </trans-unit>
        <trans-unit id="7d281acac654e42af39e1b04fe639f300961197b" translate="yes" xml:space="preserve">
          <source>A catalog can be used in two situations:</source>
          <target state="translated">カタログは2つの状況で使用することができます。</target>
        </trans-unit>
        <trans-unit id="f9fd75cd2b59eced2f9f99a3d712bf466288bc82" translate="yes" xml:space="preserve">
          <source>A catalog is an XML file that contains a root &lt;code&gt;catalog&lt;/code&gt; entry with a list of catalog entries. The entries can also be grouped with a &lt;code&gt;group&lt;/code&gt; entry. The catalog and group entries may specify &lt;code&gt;prefer&lt;/code&gt; and &lt;code&gt;xml:base&lt;/code&gt; attributes that set preference of public or system type of entries and base URI to resolve relative URIs.</source>
          <target state="translated">カタログは、カタログエントリのリストを含むルート &lt;code&gt;catalog&lt;/code&gt; エントリを含むXMLファイルです。エントリは、 &lt;code&gt;group&lt;/code&gt; エントリとグループ化することもできます。カタログおよびグループのエントリは、相対URIを解決するためにエントリのパブリックタイプまたはシステムタイプのプリファレンスとベースURIを設定する &lt;code&gt;prefer&lt;/code&gt; 属性と &lt;code&gt;xml:base&lt;/code&gt; 属性を指定できます。</target>
        </trans-unit>
        <trans-unit id="710bcf1312738b711a53e4482726a0d613afae7f" translate="yes" xml:space="preserve">
          <source>A cause can be associated with a throwable in two ways: via a constructor that takes the cause as an argument, or via the &lt;a href=&quot;#initCause(java.lang.Throwable)&quot;&gt;&lt;code&gt;initCause(Throwable)&lt;/code&gt;&lt;/a&gt; method. New throwable classes that wish to allow causes to be associated with them should provide constructors that take a cause and delegate (perhaps indirectly) to one of the &lt;code&gt;Throwable&lt;/code&gt; constructors that takes a cause. Because the &lt;code&gt;initCause&lt;/code&gt; method is public, it allows a cause to be associated with any throwable, even a &quot;legacy throwable&quot; whose implementation predates the addition of the exception chaining mechanism to &lt;code&gt;Throwable&lt;/code&gt;.</source>
          <target state="translated">原因は、2つの方法で&lt;a href=&quot;#initCause(java.lang.Throwable)&quot;&gt; &lt;code&gt;initCause(Throwable)&lt;/code&gt; &lt;/a&gt;に関連付けることができます。1つは原因を引数として取るコンストラクターを介して、もう1つはinitCause（Throwable）メソッドを介してです。原因を関連付けられるようにする新しいスロー可能クラスは、原因を取得するコンストラクターを提供し、原因を取得する &lt;code&gt;Throwable&lt;/code&gt; コンストラクターの1つに（おそらく間接的に）委任する必要があります。 &lt;code&gt;initCause&lt;/code&gt; メソッドはパブリックであるため、 &lt;code&gt;Throwable&lt;/code&gt; への例外チェーンメカ​​ニズムの追加よりも前に実装された「レガシーthrowable」であっても、すべてのthrowableに原因を関連付けることができます。</target>
        </trans-unit>
        <trans-unit id="200e757132c0a25b1d7ddb249bee8390af696aeb" translate="yes" xml:space="preserve">
          <source>A cause can be associated with a throwable in two ways: via a constructor that takes the cause as an argument, or via the &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;initCause(Throwable)&lt;/code&gt;&lt;/a&gt; method. New throwable classes that wish to allow causes to be associated with them should provide constructors that take a cause and delegate (perhaps indirectly) to one of the &lt;code&gt;Throwable&lt;/code&gt; constructors that takes a cause. Because the &lt;code&gt;initCause&lt;/code&gt; method is public, it allows a cause to be associated with any throwable, even a &quot;legacy throwable&quot; whose implementation predates the addition of the exception chaining mechanism to &lt;code&gt;Throwable&lt;/code&gt;.</source>
          <target state="translated">原因は、2つの方法でスロー可能オブジェクトに関連付けることができます。原因を引数として取るコンストラクタを使用する方法と、&lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;initCause(Throwable)&lt;/code&gt; &lt;/a&gt;メソッドを使用する方法です。原因を関連付けられるようにする新しいスロー可能クラスは、原因をとるコンストラクターを提供し、原因をとる &lt;code&gt;Throwable&lt;/code&gt; コンストラクターの1つに（おそらく間接的に）委譲する必要があります。ので &lt;code&gt;initCause&lt;/code&gt; の方法が公開され、それが原因でその実装の例外連鎖するメカニズムの追加以前から任意のスロー可能な、でも「レガシースロー可能オブジェクト」に関連付けることができ &lt;code&gt;Throwable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb9adaf3b7e2f40fbde1879f520e8811bd797f68" translate="yes" xml:space="preserve">
          <source>A central authority generates parameters and gives them to the two entities seeking to generate a secret key. The parameters are a prime &lt;code&gt;p&lt;/code&gt;, a base &lt;code&gt;g&lt;/code&gt;, and optionally the length in bits of the private value, &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="translated">中央当局はパラメータを生成し、秘密鍵の生成を求める2つのエンティティにそれらを提供します。パラメータは、素数 &lt;code&gt;p&lt;/code&gt; 、基数 &lt;code&gt;g&lt;/code&gt; 、およびオプションでプライベート値 &lt;code&gt;l&lt;/code&gt; の長さ（ビット単位）です。</target>
        </trans-unit>
        <trans-unit id="b15f87ac85c08bc308c57b0713f245a6c447fad2" translate="yes" xml:space="preserve">
          <source>A certificate factory for X.509 must return certificates that are an instance of &lt;code&gt;java.security.cert.X509Certificate&lt;/code&gt;, and CRLs that are an instance of &lt;code&gt;java.security.cert.X509CRL&lt;/code&gt;.</source>
          <target state="translated">X.509の証明書ファクトリは、インスタンスのある証明書を返さなければなりません &lt;code&gt;java.security.cert.X509Certificate&lt;/code&gt; のインスタンスである、とCRL &lt;code&gt;java.security.cert.X509CRL&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="d13204c98a6ed6a0090b39584fbff66ef2fd4ba5" translate="yes" xml:space="preserve">
          <source>A certificate path.</source>
          <target state="translated">証明書のパス。</target>
        </trans-unit>
        <trans-unit id="69bc8c8897a2aaa1567c6f12d93e327556a92e8e" translate="yes" xml:space="preserve">
          <source>A certificate policies extension, if present in an X.509 version 3 certificate, contains a sequence of one or more policy information terms, each of which consists of an object identifier (OID) and optional qualifiers. In an end-entity certificate, these policy information terms indicate the policy under which the certificate has been issued and the purposes for which the certificate may be used. In a CA certificate, these policy information terms limit the set of policies for certification paths which include this certificate.</source>
          <target state="translated">証明書ポリシー拡張は、X.509 バージョン 3 証明書に存在する場合、1 つ以上のポリシー情報用語のシーケンスを含む。エンドエンティティ証明書では、これらのポリシー情報用語は、証明書が発行されたポリシー、および証明書の使用目的を示す。CA 証明書では、これらのポリシー情報用語は、この証明書を含む認証パスのポリシーのセットを制限する。</target>
        </trans-unit>
        <trans-unit id="85319023e489273c315d40932bdf85cb3186c72f" translate="yes" xml:space="preserve">
          <source>A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event was generated by a reparenting operation.</source>
          <target state="translated">変更フラグは、 &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; イベントが親の変更操作によって生成されたことを示します。</target>
        </trans-unit>
        <trans-unit id="bb2b625f6b484a7070cb6e62b9b33def551595c3" translate="yes" xml:space="preserve">
          <source>A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event was generated due to the changing of the hierarchy displayability.</source>
          <target state="translated">変更フラグは、階層の表示可能性の変更により &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; イベントが生成されたことを示します。</target>
        </trans-unit>
        <trans-unit id="837626a41ae79571ddaeb140f3b90f20eb1b3985" translate="yes" xml:space="preserve">
          <source>A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event was generated due to the changing of the hierarchy displayability. To discern the current displayability of the hierarchy, call the &lt;code&gt;Component.isDisplayable&lt;/code&gt; method. Displayability changes occur in response to explicit or implicit calls of the &lt;code&gt;Component.addNotify&lt;/code&gt; and &lt;code&gt;Component.removeNotify&lt;/code&gt; methods.</source>
          <target state="translated">変更フラグは、階層の表示可能性の変更により &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; イベントが生成されたことを示します。階層の現在の表示可能性を識別するには、 &lt;code&gt;Component.isDisplayable&lt;/code&gt; メソッドを呼び出します。表示可能での明示的または暗黙的な呼び出しに応答して生じる変化 &lt;code&gt;Component.addNotify&lt;/code&gt; と &lt;code&gt;Component.removeNotify&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="5472c41138de79447fec8dc2fc20286b49ea8028" translate="yes" xml:space="preserve">
          <source>A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event was generated due to the changing of the hierarchy showing state.</source>
          <target state="translated">変更フラグは、状態を示す階層の変更により、 &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; イベントが生成されたことを示します。</target>
        </trans-unit>
        <trans-unit id="1cc8f0028793cf25800b99b5d052a1c9a42d1f0c" translate="yes" xml:space="preserve">
          <source>A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event was generated due to the changing of the hierarchy showing state. To discern the current showing state of the hierarchy, call the &lt;code&gt;Component.isShowing&lt;/code&gt; method. Showing state changes occur when either the displayability or visibility of the hierarchy occurs. Visibility changes occur in response to explicit or implicit calls of the &lt;code&gt;Component.show&lt;/code&gt; and &lt;code&gt;Component.hide&lt;/code&gt; methods.</source>
          <target state="translated">変更フラグは、状態を示す階層の変更により、 &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; イベントが生成されたことを示します。階層の現在の表示状態を識別するには、 &lt;code&gt;Component.isShowing&lt;/code&gt; メソッドを呼び出します。状態の変化の表示は、階層の表示可能性または可視性のいずれかが発生したときに発生します。視認性の変化は、明示的または暗黙的な呼び出しに応答して発生 &lt;code&gt;Component.show&lt;/code&gt; と &lt;code&gt;Component.hide&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="12b7e0369567e0a42b4add2191ea7b355c8240c6" translate="yes" xml:space="preserve">
          <source>A change in the value of the nesting BeanContext property of this BeanContextChild may be vetoed by throwing the appropriate exception.</source>
          <target state="translated">このBeanContextChildの入れ子BeanContextプロパティの値の変更は,適切な例外を投げることで拒否することができます。</target>
        </trans-unit>
        <trans-unit id="d72d29acf86e7702c32bda0ec435a23e72471262" translate="yes" xml:space="preserve">
          <source>A channel cannot be deregistered directly; instead, the key representing its registration must be</source>
          <target state="translated">チャンネルを直接登録解除することはできません。</target>
        </trans-unit>
        <trans-unit id="8d7e774f5d23e83f7b27801d7e8202ecdb67d702" translate="yes" xml:space="preserve">
          <source>A channel for a stream-oriented connecting socket</source>
          <target state="translated">ストリーム型接続ソケットのチャンネル</target>
        </trans-unit>
        <trans-unit id="9e1601a8223fa155ec20c1df5e38f1e8f95ed05f" translate="yes" xml:space="preserve">
          <source>A channel for reading, writing, mapping, and manipulating a file.</source>
          <target state="translated">ファイルの読み込み、書き込み、マッピング、操作を行うためのチャンネル。</target>
        </trans-unit>
        <trans-unit id="7af84c638e550c68636fe765e24dc5f5baf6f9db" translate="yes" xml:space="preserve">
          <source>A channel is either open or closed. A channel is open upon creation, and once closed it remains closed. Once a channel is closed, any attempt to invoke an I/O operation upon it will cause a &lt;a href=&quot;closedchannelexception&quot;&gt;&lt;code&gt;ClosedChannelException&lt;/code&gt;&lt;/a&gt; to be thrown. Whether or not a channel is open may be tested by invoking its &lt;a href=&quot;#isOpen()&quot;&gt;&lt;code&gt;isOpen&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">チャネルは開いているか閉じています。チャネルは作成時に開いており、一度閉じると閉じたままになります。チャネルが閉じられると、そのチャネルでI / O操作を呼び出そうとすると、&lt;a href=&quot;closedchannelexception&quot;&gt; &lt;code&gt;ClosedChannelException&lt;/code&gt; &lt;/a&gt;がスローされます。チャネルが開いているかどうかは、その&lt;a href=&quot;#isOpen()&quot;&gt; &lt;code&gt;isOpen&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことでテストできます。</target>
        </trans-unit>
        <trans-unit id="9ac0c81f717986b03ee3daf2a9350d01082aa55a" translate="yes" xml:space="preserve">
          <source>A channel is either open or closed. A channel is open upon creation, and once closed it remains closed. Once a channel is closed, any attempt to invoke an I/O operation upon it will cause a &lt;a href=&quot;closedchannelexception&quot;&gt;&lt;code&gt;ClosedChannelException&lt;/code&gt;&lt;/a&gt; to be thrown. Whether or not a channel is open may be tested by invoking its &lt;a href=&quot;channel#isOpen--&quot;&gt;&lt;code&gt;isOpen&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">チャネルは開いているか閉じています。チャネルは作成時に開かれ、閉じられると閉じられたままになります。チャネルが閉じられると、そのチャネルでI / O操作を呼び出そうとすると、&lt;a href=&quot;closedchannelexception&quot;&gt; &lt;code&gt;ClosedChannelException&lt;/code&gt; &lt;/a&gt;がスローされます。チャネルが開いているかどうかは、その&lt;a href=&quot;channel#isOpen--&quot;&gt; &lt;code&gt;isOpen&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによってテストできます。</target>
        </trans-unit>
        <trans-unit id="7bb5a0f968508f5be9958440240f5d1267c99a94" translate="yes" xml:space="preserve">
          <source>A channel may be registered at most once with any particular selector.</source>
          <target state="translated">1 つのチャンネルは、任意のセレクタで最大 1 回まで登録することができます。</target>
        </trans-unit>
        <trans-unit id="21fb8ef335a3687ca6d6626447bc68cde9a71bdf" translate="yes" xml:space="preserve">
          <source>A channel representing the readable end of a &lt;a href=&quot;pipe&quot;&gt;&lt;code&gt;Pipe&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pipe&quot;&gt; &lt;code&gt;Pipe&lt;/code&gt; の&lt;/a&gt;読み取り可能な端を表すチャネル。</target>
        </trans-unit>
        <trans-unit id="d85558a6843581591cf1be190cf66c79e3f828ac" translate="yes" xml:space="preserve">
          <source>A channel representing the writable end of a &lt;a href=&quot;pipe&quot;&gt;&lt;code&gt;Pipe&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pipe&quot;&gt; &lt;code&gt;Pipe&lt;/code&gt; の&lt;/a&gt;書き込み可能な端を表すチャネル。</target>
        </trans-unit>
        <trans-unit id="70dc1aab8c52e3f7d92aa4d0c02a1489f7dbc0ea" translate="yes" xml:space="preserve">
          <source>A channel represents an open connection to an entity such as a hardware device, a file, a network socket, or a program component that is capable of performing one or more distinct I/O operations, for example reading or writing.</source>
          <target state="translated">チャネルは、ハードウェアデバイス、ファイル、ネットワークソケット、プログラムコンポーネントなど、1つ以上の異なるI/O操作(読み書きなど)を実行することができるエンティティへのオープンな接続を表します。</target>
        </trans-unit>
        <trans-unit id="b8fef62afdf0975eec2e59fb2c36004534d294f5" translate="yes" xml:space="preserve">
          <source>A channel supports asynchronous closing and interruption if, and only if, it implements this interface. This can be tested at runtime, if necessary, via the &lt;code&gt;instanceof&lt;/code&gt; operator.</source>
          <target state="translated">チャネルは、このインターフェースを実装する場合に限り、非同期のクローズと割り込みをサポートします。これは、必要に応じて、 &lt;code&gt;instanceof&lt;/code&gt; 演算子を使用して実行時にテストできます。</target>
        </trans-unit>
        <trans-unit id="fc0d5b76afd6f0f29b38f37a05ac0c3b9c5f72e6" translate="yes" xml:space="preserve">
          <source>A channel that can be asynchronously closed and interrupted.</source>
          <target state="translated">非同期的に閉じたり中断したりすることができるチャンネル。</target>
        </trans-unit>
        <trans-unit id="59b7b7fac8ee9975147807e839aeb8fe38d241bb" translate="yes" xml:space="preserve">
          <source>A channel that can be multiplexed</source>
          <target state="translated">多重化できるチャンネル</target>
        </trans-unit>
        <trans-unit id="1214854eb0213a1ff43a9021db015696b91deec7" translate="yes" xml:space="preserve">
          <source>A channel that can be multiplexed via a &lt;a href=&quot;selector&quot;&gt;&lt;code&gt;Selector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;selector&quot;&gt; &lt;code&gt;Selector&lt;/code&gt; &lt;/a&gt;を介して多重化できるチャネル。</target>
        </trans-unit>
        <trans-unit id="800646be4ec902c097761409c9fd09caafb4a495" translate="yes" xml:space="preserve">
          <source>A channel that can read and write bytes.</source>
          <target state="translated">バイトの読み書きができるチャンネル。</target>
        </trans-unit>
        <trans-unit id="3a18d46d23ef0ee898d000c7fdbcf8d70cccbb4c" translate="yes" xml:space="preserve">
          <source>A channel that can read and write bytes. This interface simply unifies &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt;; it does not specify any new operations.</source>
          <target state="translated">バイトを読み書きできるチャネル。このインターフェイスは、単に&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; を統合し&lt;/a&gt;ます。新しい操作は指定されていません。</target>
        </trans-unit>
        <trans-unit id="42a631ef4c7905c22f79a70339587d209893d713" translate="yes" xml:space="preserve">
          <source>A channel that can read bytes into a sequence of buffers.</source>
          <target state="translated">バッファのシーケンスにバイトを読み込むことができるチャネル。</target>
        </trans-unit>
        <trans-unit id="ecb9b303f470a97f2f08805d8d8c94b642db6ff2" translate="yes" xml:space="preserve">
          <source>A channel that can read bytes.</source>
          <target state="translated">バイトを読み込むことができるチャンネル。</target>
        </trans-unit>
        <trans-unit id="95845315fdbf28ed7bd0ae0197a23b2ef4a4b208" translate="yes" xml:space="preserve">
          <source>A channel that can write bytes from a sequence of buffers.</source>
          <target state="translated">連続したバッファからバイトを書き込むことができるチャネル。</target>
        </trans-unit>
        <trans-unit id="8f098a9ecf20dc34b289410aad7ca21436a5b36f" translate="yes" xml:space="preserve">
          <source>A channel that can write bytes.</source>
          <target state="translated">バイトを書き込むことができるチャンネル。</target>
        </trans-unit>
        <trans-unit id="b4efac3fa36ee432ca8226ac9cfe90afc82a7eaa" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is</source>
          <target state="translated">このインターフェイスを実装したチャンネルは</target>
        </trans-unit>
        <trans-unit id="9de1e12b8a7a8c3fb32ce8821603d037f0633115" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is &lt;em&gt;asynchronously closeable&lt;/em&gt;: If an I/O operation is outstanding on the channel and the channel's &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method is invoked, then the I/O operation fails with the exception &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェイスを実装するチャネルは&lt;em&gt;非同期で閉じることが&lt;/em&gt;できます。チャネルでI / O操作が未処理であり、チャネルの&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されると、I / O操作は例外&lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; で&lt;/a&gt;失敗します。</target>
        </trans-unit>
        <trans-unit id="5b097b4ced43ca741c0e40c7c3e34b41dfce4add" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is &lt;em&gt;asynchronously closeable&lt;/em&gt;: If an I/O operation is outstanding on the channel and the channel's &lt;a href=&quot;asynchronouschannel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method is invoked, then the I/O operation fails with the exception &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェースを実装するチャネルは&lt;em&gt;非同期で&lt;/em&gt;&lt;a href=&quot;asynchronouschannel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;&lt;em&gt;可能&lt;/em&gt;です。チャネルでI / O操作が未解決であり、チャネルのcloseメソッドが呼び出された場合、I / O操作は例外&lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; で&lt;/a&gt;失敗します。</target>
        </trans-unit>
        <trans-unit id="90dcd4176d9405a8587e9db345ff7af48f1eba63" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is a channel to a network socket. The &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method is used to bind the socket to a local &lt;a href=&quot;../../net/socketaddress&quot;&gt;&lt;code&gt;address&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#getLocalAddress()&quot;&gt;&lt;code&gt;getLocalAddress&lt;/code&gt;&lt;/a&gt; method returns the address that the socket is bound to, and the &lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getOption(java.net.SocketOption)&quot;&gt;&lt;code&gt;getOption&lt;/code&gt;&lt;/a&gt; methods are used to set and query socket options. An implementation of this interface should specify the socket options that it supports.</source>
          <target state="translated">このインターフェイスを実装するチャネルは、ネットワークソケットへのチャネルです。&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;メソッドをローカルにソケットをバインドするために使用される&lt;a href=&quot;../../net/socketaddress&quot;&gt; &lt;code&gt;address&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getLocalAddress()&quot;&gt; &lt;code&gt;getLocalAddress&lt;/code&gt; の&lt;/a&gt;方法は、ソケットがバインドされているアドレスを返し、&lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; を&lt;/a&gt;と&lt;a href=&quot;#getOption(java.net.SocketOption)&quot;&gt; &lt;code&gt;getOption&lt;/code&gt; &lt;/a&gt;メソッドは、セットとクエリソケットオプションに使用されています。このインターフェイスの実装では、サポートするソケットオプションを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="d5b8a450c6a26f4e50db17fd5ebc4459ce7d7949" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is a channel to a network socket. The &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method is used to bind the socket to a local &lt;a href=&quot;../../net/socketaddress&quot;&gt;&lt;code&gt;address&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;networkchannel#getLocalAddress--&quot;&gt;&lt;code&gt;getLocalAddress&lt;/code&gt;&lt;/a&gt; method returns the address that the socket is bound to, and the &lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;networkchannel#getOption-java.net.SocketOption-&quot;&gt;&lt;code&gt;getOption&lt;/code&gt;&lt;/a&gt; methods are used to set and query socket options. An implementation of this interface should specify the socket options that it supports.</source>
          <target state="translated">このインターフェースを実装するチャネルは、ネットワークソケットへのチャネルです。&lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;メソッドをローカルにソケットをバインドするために使用される&lt;a href=&quot;../../net/socketaddress&quot;&gt; &lt;code&gt;address&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;networkchannel#getLocalAddress--&quot;&gt; &lt;code&gt;getLocalAddress&lt;/code&gt; の&lt;/a&gt;方法は、ソケットがバインドされているアドレスを返し、&lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; を&lt;/a&gt;と&lt;a href=&quot;networkchannel#getOption-java.net.SocketOption-&quot;&gt; &lt;code&gt;getOption&lt;/code&gt; &lt;/a&gt;メソッドは、セットとクエリソケットオプションに使用されています。このインターフェイスの実装では、サポートするソケットオプションを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="9b4ffd0b00aae234d34f01c53dd96dc57bf6b6e0" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is also</source>
          <target state="translated">このインターフェースを実装したチャンネルも</target>
        </trans-unit>
        <trans-unit id="d9796e052a0f539e5d20f76e2665722b23b84065" translate="yes" xml:space="preserve">
          <source>A channel that supports asynchronous I/O operations.</source>
          <target state="translated">非同期 I/O 操作をサポートするチャネル。</target>
        </trans-unit>
        <trans-unit id="191edb71e4e511906b4a3aabedb3d6703cb5257a" translate="yes" xml:space="preserve">
          <source>A channel that supports asynchronous I/O operations. Asynchronous I/O operations will usually take one of two forms:</source>
          <target state="translated">非同期I/O操作をサポートするチャネル。非同期I/O操作は通常、2つの形式のうちの1つをとります。</target>
        </trans-unit>
        <trans-unit id="9ed40df29696c88e6c71549b1c57172f2535d2e1" translate="yes" xml:space="preserve">
          <source>A channel to a datagram-oriented socket</source>
          <target state="translated">データグラム指向のソケットへのチャネル</target>
        </trans-unit>
        <trans-unit id="8dd23ea95fe683f2446dc0f81225ff9c1aa46c49" translate="yes" xml:space="preserve">
          <source>A channel to a network socket</source>
          <target state="translated">ネットワークソケットへのチャネル</target>
        </trans-unit>
        <trans-unit id="0b7fadce40dec6dc50b0937f58a33b6784464fad" translate="yes" xml:space="preserve">
          <source>A channel to a network socket.</source>
          <target state="translated">ネットワークソケットへのチャネル。</target>
        </trans-unit>
        <trans-unit id="fba973fb0458ecef3b4ce50b17afa170ef7b7640" translate="yes" xml:space="preserve">
          <source>A channel to a stream-oriented listening socket</source>
          <target state="translated">ストリーム指向のリスニングソケットへのチャンネル</target>
        </trans-unit>
        <trans-unit id="db20aa88a7238119d3ad50b601b0e37532ec55a6" translate="yes" xml:space="preserve">
          <source>A char buffer containing the decoded characters</source>
          <target state="translated">デコードされた文字を含む char バッファ</target>
        </trans-unit>
        <trans-unit id="f83ee77e42e8490f810288c59eb103b9eb63a96e" translate="yes" xml:space="preserve">
          <source>A char buffer is not comparable to any other type of object.</source>
          <target state="translated">char バッファは他のタイプのオブジェクトとは比較になりません。</target>
        </trans-unit>
        <trans-unit id="bc1b6b1c3f1c52066b1cf54b29319071b3f900d3" translate="yes" xml:space="preserve">
          <source>A char buffer is not equal to any other type of object.</source>
          <target state="translated">char バッファは、他のタイプのオブジェクトと同じではありません。</target>
        </trans-unit>
        <trans-unit id="c92b2e8ed081e77f9fb1315da995d59a732735d8" translate="yes" xml:space="preserve">
          <source>A char buffer.</source>
          <target state="translated">char バッファ。</target>
        </trans-unit>
        <trans-unit id="4b1521bc66da3c7b406225d686d4a3b8aab6e713" translate="yes" xml:space="preserve">
          <source>A char value is a surrogate code unit if and only if it is either a &lt;a href=&quot;#isLowSurrogate(char)&quot;&gt;low-surrogate code unit&lt;/a&gt; or a &lt;a href=&quot;#isHighSurrogate(char)&quot;&gt;high-surrogate code unit&lt;/a&gt;.</source>
          <target state="translated">char値は、それが&lt;a href=&quot;#isLowSurrogate(char)&quot;&gt;低サロゲートコードユニット&lt;/a&gt;または&lt;a href=&quot;#isHighSurrogate(char)&quot;&gt;高&lt;/a&gt;サロゲートコードユニットのいずれかである場合に限り、サロゲートコードユニットです。</target>
        </trans-unit>
        <trans-unit id="b747af939ee20ee5f1cd9aefd76c5b5096a87a8b" translate="yes" xml:space="preserve">
          <source>A char value is a surrogate code unit if and only if it is either a &lt;a href=&quot;character#isLowSurrogate-char-&quot;&gt;low-surrogate code unit&lt;/a&gt; or a &lt;a href=&quot;character#isHighSurrogate-char-&quot;&gt;high-surrogate code unit&lt;/a&gt;.</source>
          <target state="translated">char値は、&lt;a href=&quot;character#isLowSurrogate-char-&quot;&gt;低サロゲートコードユニット&lt;/a&gt;または&lt;a href=&quot;character#isHighSurrogate-char-&quot;&gt;高&lt;/a&gt;サロゲートコードユニットのいずれかである場合に限り、サロゲートコードユニットです。</target>
        </trans-unit>
        <trans-unit id="d41302344e7fbbca3b8d487f3516ee3b89ee120f" translate="yes" xml:space="preserve">
          <source>A character array containing the password or passphrase read from the console, not including any line-termination characters, or &lt;code&gt;null&lt;/code&gt; if an end of stream has been reached.</source>
          <target state="translated">コンソールから読み取られたパスワードまたはパスフレーズを含む文字配列。行終端文字は含まれません。ストリームの終わりに達した場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="86592acb8a1516339482f65b9fe9fea4d5b1cbbf" translate="yes" xml:space="preserve">
          <source>A character in the Greek block (&lt;a href=&quot;#ubc&quot;&gt;block&lt;/a&gt;)</source>
          <target state="translated">ギリシャ語ブロックの文字（&lt;a href=&quot;#ubc&quot;&gt;block&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="43025dbde61ef9eae4dedd1a09f0b0781d452fd0" translate="yes" xml:space="preserve">
          <source>A character is</source>
          <target state="translated">キャラクターは</target>
        </trans-unit>
        <trans-unit id="cb0553deb810e8d6dd8f9d602644b698eec9741e" translate="yes" xml:space="preserve">
          <source>A character is a digit if its general category type, provided by &lt;a href=&quot;#getType(int)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#getType(int)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;によって提供される一般的なカテゴリタイプが &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt; の場合、文字は数字です。</target>
        </trans-unit>
        <trans-unit id="7f4ce8079139a88322f4ae2aba1220448793d458" translate="yes" xml:space="preserve">
          <source>A character is a digit if its general category type, provided by &lt;a href=&quot;character#getType-int-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;character#getType-int-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;によって提供される一般的なカテゴリタイプが &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt; の場合、文字は数字です。</target>
        </trans-unit>
        <trans-unit id="fdd1a754889230886d0a4a8fb8d9c2f75250cd5a" translate="yes" xml:space="preserve">
          <source>A character is a digit if its general category type, provided by &lt;code&gt;Character.getType(ch)&lt;/code&gt;, is &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Character.getType(ch)&lt;/code&gt; によって提供される一般的なカテゴリタイプが &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt; の場合、文字は数字です。</target>
        </trans-unit>
        <trans-unit id="86596435c2b454f09594fe7bcb120fdcbf6b33f8" translate="yes" xml:space="preserve">
          <source>A character is a titlecase character if its general category type, provided by &lt;a href=&quot;#getType(int)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;TITLECASE_LETTER&lt;/code&gt;.</source>
          <target state="translated">示される汎用カテゴリ型、場合文字がタイトルケース文字である&lt;a href=&quot;#getType(int)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;、ある &lt;code&gt;TITLECASE_LETTER&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed0b005fbc298f5a0e45fbdd786dd40107520eed" translate="yes" xml:space="preserve">
          <source>A character is a titlecase character if its general category type, provided by &lt;a href=&quot;character#getType-int-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;TITLECASE_LETTER&lt;/code&gt;.</source>
          <target state="translated">示される汎用カテゴリ型、場合文字がタイトルケース文字である&lt;a href=&quot;character#getType-int-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;、ある &lt;code&gt;TITLECASE_LETTER&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40b7e7e298658479c6f67b4c32be450022509975" translate="yes" xml:space="preserve">
          <source>A character is a titlecase character if its general category type, provided by &lt;code&gt;Character.getType(ch)&lt;/code&gt;, is &lt;code&gt;TITLECASE_LETTER&lt;/code&gt;.</source>
          <target state="translated">示される汎用カテゴリ型、場合文字がタイトルケース文字である &lt;code&gt;Character.getType(ch)&lt;/code&gt; 、ある &lt;code&gt;TITLECASE_LETTER&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e7bd610b8db92391f43cfc39a18c3845bd141e6" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter if its general category type, provided by &lt;a href=&quot;#getType(int)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is any of the following:</source>
          <target state="translated">&lt;a href=&quot;#getType(int)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;によって提供される一般的なカテゴリタイプが次のいずれかである場合、文字は文字と見なされます。</target>
        </trans-unit>
        <trans-unit id="b3e93e58c4c08afdd56f97246f883396140cfeb6" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter if its general category type, provided by &lt;a href=&quot;character#getType-int-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is any of the following:</source>
          <target state="translated">&lt;a href=&quot;character#getType-int-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;によって提供される一般的なカテゴリタイプが次のいずれかである場合、文字は文字と見なされます。</target>
        </trans-unit>
        <trans-unit id="cfd74a58d4f3e068c12a4637ed1ea71a70c63fca" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter if its general category type, provided by &lt;code&gt;Character.getType(ch)&lt;/code&gt;, is any of the following:</source>
          <target state="translated">&lt;code&gt;Character.getType(ch)&lt;/code&gt; によって提供される一般的なカテゴリタイプが次のいずれかである場合、文字は文字と見なされます。</target>
        </trans-unit>
        <trans-unit id="eb9be73ffc1dba87de77bf2d3f3de709be554f21" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter or digit if either &lt;a href=&quot;#isLetter(int)&quot;&gt;&lt;code&gt;isLetter(codePoint)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#isDigit(int)&quot;&gt;&lt;code&gt;isDigit(codePoint)&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt; for the character.</source>
          <target state="translated">&lt;a href=&quot;#isLetter(int)&quot;&gt; &lt;code&gt;isLetter(codePoint)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#isDigit(int)&quot;&gt; &lt;code&gt;isDigit(codePoint)&lt;/code&gt; の&lt;/a&gt;いずれかが文字に対して &lt;code&gt;true&lt;/code&gt; を返す場合、文字は文字または数字と見なされます。</target>
        </trans-unit>
        <trans-unit id="257a1fc191243a38382ed54b91922f94818951c2" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter or digit if either &lt;a href=&quot;character#isLetter-int-&quot;&gt;&lt;code&gt;isLetter(codePoint)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;character#isDigit-int-&quot;&gt;&lt;code&gt;isDigit(codePoint)&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt; for the character.</source>
          <target state="translated">&lt;a href=&quot;character#isLetter-int-&quot;&gt; &lt;code&gt;isLetter(codePoint)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;character#isDigit-int-&quot;&gt; &lt;code&gt;isDigit(codePoint)&lt;/code&gt; の&lt;/a&gt;いずれかが文字に対して &lt;code&gt;true&lt;/code&gt; を返す場合、文字は文字または数字と見なされます。</target>
        </trans-unit>
        <trans-unit id="56e9e520047941ac231e484f638ee37ff36c4c23" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter or digit if either &lt;code&gt;Character.isLetter(char ch)&lt;/code&gt; or &lt;code&gt;Character.isDigit(char ch)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; for the character.</source>
          <target state="translated">&lt;code&gt;Character.isLetter(char ch)&lt;/code&gt; または &lt;code&gt;Character.isDigit(char ch)&lt;/code&gt; のいずれかが文字に対して &lt;code&gt;true&lt;/code&gt; を返す場合、文字は文字または数字と見なされます。</target>
        </trans-unit>
        <trans-unit id="2d4c273187e4ccb1b8ec6cc8e1f191b5bd57f64c" translate="yes" xml:space="preserve">
          <source>A character is considered to be alphabetic if its general category type, provided by &lt;a href=&quot;#getType(int)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is any of the following:</source>
          <target state="translated">&lt;a href=&quot;#getType(int)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;によって提供される一般的なカテゴリタイプが次のいずれかである場合、文字はアルファベットであると見なされます。</target>
        </trans-unit>
        <trans-unit id="1daab1c6e481dada609c883697d804983fd2e80e" translate="yes" xml:space="preserve">
          <source>A character is considered to be alphabetic if its general category type, provided by &lt;a href=&quot;character#getType-int-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is any of the following:</source>
          <target state="translated">&lt;a href=&quot;character#getType-int-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;によって提供される一般的なカテゴリタイプが次のいずれかである場合、文字はアルファベットと見なされます。</target>
        </trans-unit>
        <trans-unit id="846ad6665f9e9112c25d9f35739a2d02161fe462" translate="yes" xml:space="preserve">
          <source>A character is defined if at least one of the following is true:</source>
          <target state="translated">文字は、以下のうち少なくとも一つが真である場合に定義されます。</target>
        </trans-unit>
        <trans-unit id="ea5a7550d236465222599d48f08d22aa0cb71565" translate="yes" xml:space="preserve">
          <source>A character is lowercase if its general category type, provided by &lt;a href=&quot;#getType(char)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt;, or it has contributory property Other_Lowercase as defined by the Unicode Standard.</source>
          <target state="translated">&lt;a href=&quot;#getType(char)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;によって提供される一般的なカテゴリタイプが &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt; である場合、またはUnicode標準で定義されている寄与プロパティOther_Lowercaseがある場合、文字は小文字です。</target>
        </trans-unit>
        <trans-unit id="7b4fe37a529ecb9e0094fe32d5a9d41a0084dcdd" translate="yes" xml:space="preserve">
          <source>A character is lowercase if its general category type, provided by &lt;a href=&quot;character#getType-char-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt;, or it has contributory property Other_Lowercase as defined by the Unicode Standard.</source>
          <target state="translated">&lt;a href=&quot;character#getType-char-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;によって提供される一般的なカテゴリタイプが &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt; であるか、Unicode標準で定義されている貢献プロパティOther_Lowercaseを持っている場合、文字は小文字です。</target>
        </trans-unit>
        <trans-unit id="770ed3a3b7a1750f819b0f53d78ab4e560573022" translate="yes" xml:space="preserve">
          <source>A character is lowercase if its general category type, provided by &lt;code&gt;Character.getType(ch)&lt;/code&gt;, is &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt;, or it has contributory property Other_Lowercase as defined by the Unicode Standard.</source>
          <target state="translated">&lt;code&gt;Character.getType(ch)&lt;/code&gt; によって提供される一般的なカテゴリタイプが &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt; であるか、Unicode標準で定義されている貢献プロパティOther_Lowercaseを持っている場合、文字は小文字です。</target>
        </trans-unit>
        <trans-unit id="eec0334e27b2f98bcaa2468f12171e3996f3bb46" translate="yes" xml:space="preserve">
          <source>A character is uppercase if its general category type, provided by &lt;a href=&quot;#getType(int)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt;, or it has contributory property Other_Uppercase as defined by the Unicode Standard.</source>
          <target state="translated">&lt;a href=&quot;#getType(int)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;によって提供される一般的なカテゴリタイプが &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt; である場合、またはUnicode標準で定義されている寄与プロパティOther_Uppercaseがある場合、文字は大文字です。</target>
        </trans-unit>
        <trans-unit id="a03c0a4129a458c83450c7f6d5b8a7d9f5975f99" translate="yes" xml:space="preserve">
          <source>A character is uppercase if its general category type, provided by &lt;a href=&quot;character#getType-int-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt;, or it has contributory property Other_Uppercase as defined by the Unicode Standard.</source>
          <target state="translated">&lt;a href=&quot;character#getType-int-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;によって提供される一般的なカテゴリタイプが &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt; であるか、Unicode標準で定義されているような貢献プロパティOther_Uppercaseを持っている場合、文字は大文字です。</target>
        </trans-unit>
        <trans-unit id="691356a97a7e1df0d7387885124751d46be64f49" translate="yes" xml:space="preserve">
          <source>A character is uppercase if its general category type, provided by &lt;code&gt;Character.getType(ch)&lt;/code&gt;, is &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt;. or it has contributory property Other_Uppercase as defined by the Unicode Standard.</source>
          <target state="translated">&lt;code&gt;Character.getType(ch)&lt;/code&gt; によって提供される一般的なカテゴリタイプが &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt; の場合、文字は大文字です。または、Unicode規格で定義されている貢献プロパティOther_Uppercaseがあります。</target>
        </trans-unit>
        <trans-unit id="3e6d561d343a7744b12d7a0fc05b3bcf33b29211" translate="yes" xml:space="preserve">
          <source>A character may be part of a Java identifier if and only if any of the following are true:</source>
          <target state="translated">文字は、以下のいずれかが真である場合にのみ、Java識別子の一部になることがある。</target>
        </trans-unit>
        <trans-unit id="7d03aa6ebaecd70cf74508561b81aa7dff281fc5" translate="yes" xml:space="preserve">
          <source>A character may be part of a Java identifier if and only if one of the following conditions is true:</source>
          <target state="translated">文字は、以下の条件のいずれかが真である場合にのみ、Java識別子の一部になることがある。</target>
        </trans-unit>
        <trans-unit id="1ac0fb63df90ee768362eb2ea36be06b1c3ba9f2" translate="yes" xml:space="preserve">
          <source>A character may be part of a Java identifier if any of the following are true:</source>
          <target state="translated">以下のいずれかが真の場合、文字はJava識別子の一部になることがあります。</target>
        </trans-unit>
        <trans-unit id="d681d7b226cccb4843f419f5ed003d0a55f37320" translate="yes" xml:space="preserve">
          <source>A character may be part of a Java identifier if any of the following conditions are true:</source>
          <target state="translated">以下の条件のいずれかが真であれば、文字はJava識別子の一部になることがあります。</target>
        </trans-unit>
        <trans-unit id="3d4c6b2fd3ac5173e7a35051a02bcb5aca73d33c" translate="yes" xml:space="preserve">
          <source>A character may be part of a Unicode identifier if and only if one of the following statements is true:</source>
          <target state="translated">キ ャ ラ ク タ は、 以下の文のいずれかが真である場合にのみ、 Unicode 識別子の一部 と な る こ と がで き ます。</target>
        </trans-unit>
        <trans-unit id="6acb9fd8c4c0db766c6d1bcd34828dc2a4ff4f1b" translate="yes" xml:space="preserve">
          <source>A character may start a Java identifier if and only if one of the following conditions is true:</source>
          <target state="translated">文字は、以下の条件のいずれかが真である場合にのみ、Java識別子を開始することができる。</target>
        </trans-unit>
        <trans-unit id="3fada3cffc279f5988b5a9f5e97628c24a2aa3eb" translate="yes" xml:space="preserve">
          <source>A character may start a Java identifier if and only if one of the following is true:</source>
          <target state="translated">文字は、以下のいずれかが真である場合にのみ、Java識別子を開始することができる。</target>
        </trans-unit>
        <trans-unit id="8765bea07151f2ce322c2b3d88588b5932784a7e" translate="yes" xml:space="preserve">
          <source>A character may start a Unicode identifier if and only if one of the following conditions is true:</source>
          <target state="translated">キ ャ ラ ク タ は、 次の条件のいずれかが真の場合にのみ、 Unicode 識別子を開始する こ と がで き ます。</target>
        </trans-unit>
        <trans-unit id="691511f32534c704fa5a722392a9bc0eb20fb683" translate="yes" xml:space="preserve">
          <source>A character stream that collects its output in a string buffer, which can then be used to construct a string.</source>
          <target state="translated">文字列バッファに出力を集めて文字列を構築する文字ストリーム。</target>
        </trans-unit>
        <trans-unit id="6e7b08f91b89d317251e96eea88d34f90455c7a7" translate="yes" xml:space="preserve">
          <source>A character stream whose source is a string.</source>
          <target state="translated">ソースが文字列である文字ストリーム。</target>
        </trans-unit>
        <trans-unit id="d75764e4070dffd8fcb663eb5024c4e2583781ea" translate="yes" xml:space="preserve">
          <source>A character-stream reader that allows characters to be pushed back into the stream.</source>
          <target state="translated">キャラクターをストリームに押し戻すことができるキャラクターストリームリーダー。</target>
        </trans-unit>
        <trans-unit id="7e71cb0a066a90cfe9e8b1752b6cfd83166a3957" translate="yes" xml:space="preserve">
          <source>A charset</source>
          <target state="translated">文字セット</target>
        </trans-unit>
        <trans-unit id="d22770c7dbf1fb019d5babc9504c5657e1aba041" translate="yes" xml:space="preserve">
          <source>A charset coder, that is, either a decoder or an encoder, consumes bytes (or characters) from an input buffer, translates them, and writes the resulting characters (or bytes) to an output buffer. A coding process terminates for one of four categories of reasons, which are described by instances of this class:</source>
          <target state="translated">デコーダまたはエンコーダである文字セット・コーダは、入力バッファからバイト(または文字)を消費し、それらを変換し、結果として得られた文字(またはバイト)を出力バッファに書き込む。コーディングプロセスは、このクラスのインスタンスによって記述されている4つのカテゴリの理由のうちの1つのために終了します。</target>
        </trans-unit>
        <trans-unit id="bcd0ab276ddc94d3bcc05a6158cfcc333e771240" translate="yes" xml:space="preserve">
          <source>A charset name must begin with either a letter or a digit. The empty string is not a legal charset name. Charset names are not case-sensitive; that is, case is always ignored when comparing charset names. Charset names generally follow the conventions documented in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2278.txt&quot;&gt;&lt;i&gt;RFC 2278: IANA Charset Registration Procedures&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">文字セット名は、文字または数字で始まる必要があります。空の文字列は有効な文字セット名ではありません。文字セット名は大文字と小文字を区別しません。つまり、文字セット名を比較する場合、大文字と小文字は常に無視されます。文字セット名は通常、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2278.txt&quot;&gt;&lt;i&gt;RFC 2278：IANA Charset Registration Proceduresに&lt;/i&gt;&lt;/a&gt;文書化され&lt;i&gt;て&lt;/i&gt;いる規則に従います。</target>
        </trans-unit>
        <trans-unit id="4fe6216b2b6912b763b72e1be7ba9f4eee5aa678" translate="yes" xml:space="preserve">
          <source>A charset object for the default charset</source>
          <target state="translated">デフォルトの文字セット用の文字セットオブジェクト</target>
        </trans-unit>
        <trans-unit id="21f8395adeb2457ad7d39af82263c878f2937a8d" translate="yes" xml:space="preserve">
          <source>A charset object for the named charset</source>
          <target state="translated">指定された文字セットのための文字セットオブジェクト</target>
        </trans-unit>
        <trans-unit id="18bb2c3bab5292ed8acddebeb49d66ce2ec77bbb" translate="yes" xml:space="preserve">
          <source>A charset object for the named charset, or &lt;code&gt;null&lt;/code&gt; if the named charset is not supported by this provider</source>
          <target state="translated">名前付き文字セットの文字セットオブジェクト。名前付き文字セットがこのプロバイダーでサポートされていない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb32edc10313e3f65dbd9b8601d559d2295da0ed" translate="yes" xml:space="preserve">
          <source>A charset provider identifies itself with a provider-configuration file named &lt;code&gt;java.nio.charset.spi.CharsetProvider&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;. The file should contain a list of fully-qualified concrete charset-provider class names, one per line. A line is terminated by any one of a line feed (&lt;code&gt;'\n'&lt;/code&gt;), a carriage return (&lt;code&gt;'\r'&lt;/code&gt;), or a carriage return followed immediately by a line feed. Space and tab characters surrounding each name, as well as blank lines, are ignored. The comment character is &lt;code&gt;'#'&lt;/code&gt; (&lt;code&gt;'\u0023'&lt;/code&gt;); on each line all characters following the first comment character are ignored. The file must be encoded in UTF-8.</source>
          <target state="translated">文字セットプロバイダーは、リソースディレクトリ &lt;code&gt;META-INF/services&lt;/code&gt; にある &lt;code&gt;java.nio.charset.spi.CharsetProvider&lt;/code&gt; という名前のプロバイダー設定ファイルで自身を識別します。ファイルには、完全修飾された具体的な文字セットプロバイダークラス名のリストが1行に1つ含まれている必要があります。行は、ラインフィード（ &lt;code&gt;'\n'&lt;/code&gt; ）、キャリッジリターン（ &lt;code&gt;'\r'&lt;/code&gt; ）、またはキャリッジリターンの直後のいずれかで改行されます。各名前を囲むスペースとタブ文字、および空白行は無視されます。コメント文字は &lt;code&gt;'#'&lt;/code&gt; （ &lt;code&gt;'\u0023'&lt;/code&gt; ）です。各行で、最初のコメント文字に続くすべての文字は無視されます。ファイルはUTF-8でエンコードする必要があります。</target>
        </trans-unit>
        <trans-unit id="3bb5f8d2cb453a6dc7cf144db31f427c7be37ff5" translate="yes" xml:space="preserve">
          <source>A charset provider is a concrete subclass of this class that has a zero-argument constructor and some number of associated charset implementation classes. Charset providers may be installed in an instance of the Java platform as extensions, that is, jar files placed into any of the usual extension directories. Providers may also be made available by adding them to the applet or application class path or by some other platform-specific means. Charset providers are looked up via the current thread's &lt;a href=&quot;../../../lang/thread#getContextClassLoader--&quot;&gt;&lt;code&gt;context class
 loader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字セットプロバイダーは、このクラスの具象サブクラスであり、引数なしのコンストラクターといくつかの関連する文字セット実装クラスがあります。Charsetプロバイダーは、Javaプラットフォームのインスタンスに拡張機能、つまり、通常の拡張機能ディレクトリのいずれかに配置されたjarファイルとしてインストールできます。プロバイダは、アプレットまたはアプリケーションのクラスパスに追加することによって、または他のいくつかのプラットフォーム固有の手段によって使用可能にすることもできます。文字セットプロバイダーは、現在のスレッドの&lt;a href=&quot;../../../lang/thread#getContextClassLoader--&quot;&gt; &lt;code&gt;context class loader&lt;/code&gt; &lt;/a&gt;介して検索されます。</target>
        </trans-unit>
        <trans-unit id="fcdd4387e1735ee181ae70c77eedb02f69bb3a74" translate="yes" xml:space="preserve">
          <source>A charset provider is a concrete subclass of this class that has a zero-argument constructor and some number of associated charset implementation classes. Charset providers may be installed in an instance of the Java platform as extensions. Providers may also be made available by adding them to the applet or application class path or by some other platform-specific means. Charset providers are looked up via the current thread's &lt;a href=&quot;../../../lang/thread#getContextClassLoader()&quot;&gt;&lt;code&gt;context class
 loader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字セットプロバイダーは、このクラスの具体的なサブクラスであり、引数なしのコンストラクターと、いくつかの関連する文字セット実装クラスがあります。文字セットプロバイダーは、拡張機能としてJavaプラットフォームのインスタンスにインストールできます。プロバイダーは、アプレットまたはアプリケーションクラスパスに追加するか、その他のプラットフォーム固有の手段によって利用可能にすることもできます。文字セットプロバイダーは、現在のスレッドの&lt;a href=&quot;../../../lang/thread#getContextClassLoader()&quot;&gt; &lt;code&gt;context class loader&lt;/code&gt; &lt;/a&gt;介して検索されます。</target>
        </trans-unit>
        <trans-unit id="9d6dc81ecb99a6a83dfb6cadac6c7fa6effcc17c" translate="yes" xml:space="preserve">
          <source>A check box is a graphical component that can be in either an &quot;on&quot; (&lt;code&gt;true&lt;/code&gt;) or &quot;off&quot; (&lt;code&gt;false&lt;/code&gt;) state.</source>
          <target state="translated">チェックボックスは、「オン」（ &lt;code&gt;true&lt;/code&gt; ）または「オフ」（ &lt;code&gt;false&lt;/code&gt; ）のいずれかの状態にできるグラフィカルコンポーネントです。</target>
        </trans-unit>
        <trans-unit id="66ae41487fb0f59ebd90709f08e9e6d7764b16f8" translate="yes" xml:space="preserve">
          <source>A check box is a graphical component that can be in either an &quot;on&quot; (&lt;code&gt;true&lt;/code&gt;) or &quot;off&quot; (&lt;code&gt;false&lt;/code&gt;) state. Clicking on a check box changes its state from &quot;on&quot; to &quot;off,&quot; or from &quot;off&quot; to &quot;on.&quot;</source>
          <target state="translated">チェックボックスは、「オン」（ &lt;code&gt;true&lt;/code&gt; ）または「オフ」（ &lt;code&gt;false&lt;/code&gt; ）のいずれかの状態にできるグラフィカルコンポーネントです。チェックボックスをクリックすると、状態が「オン」から「オフ」に、または「オフ」から「オン」に変わります。</target>
        </trans-unit>
        <trans-unit id="fc996ae529d54a16a993527ce6766ddeeb05b1e1" translate="yes" xml:space="preserve">
          <source>A choice that can be checked or unchecked and provides a separate indicator for the current state.</source>
          <target state="translated">チェックを入れるか入れないかの選択で、現在の状態を示す個別のインジケータを提供します。</target>
        </trans-unit>
        <trans-unit id="ece31ac787ed07fbedfac8cb5253447ae75ba96a" translate="yes" xml:space="preserve">
          <source>A class &lt;code&gt;Foo&lt;/code&gt; wishing to access preferences pertaining to its package can obtain a preference node as follows:</source>
          <target state="translated">そのパッケージに関する設定にアクセスしたいクラス &lt;code&gt;Foo&lt;/code&gt; は、次のように設定ノードを取得できます。</target>
        </trans-unit>
        <trans-unit id="6fba903462c5e274f857cc56faf41e8e1cdf8504" translate="yes" xml:space="preserve">
          <source>A class attribute expression. The returned object will be serialized as an instance of the non-public class  javax.management.ClassAttributeValueExp.</source>
          <target state="translated">クラス属性式。返されたオブジェクトは、非公開クラス javax.management.ClassAttributeValueExp のインスタンスとしてシリアライズされます。</target>
        </trans-unit>
        <trans-unit id="b70e7a0c27b89abfe494762079ddd5f5ea4432e8" translate="yes" xml:space="preserve">
          <source>A class attribute expression. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.ClassAttributeValueExp&quot;&gt; javax.management.ClassAttributeValueExp&lt;/a&gt;.</source>
          <target state="translated">クラス属性式。返されたオブジェクトは、非公開クラス&lt;a href=&quot;../../serialized-form#javax.management.ClassAttributeValueExp&quot;&gt;javax.management.ClassAttributeValueExpの&lt;/a&gt;インスタンスとしてシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="c89a8aacf78b87597462542f12b1287b60ecb678" translate="yes" xml:space="preserve">
          <source>A class can implement the &lt;code&gt;Observer&lt;/code&gt; interface when it wants to be informed of changes in observable objects.</source>
          <target state="translated">&lt;code&gt;Observer&lt;/code&gt; 可能なオブジェクトの変更を通知する必要がある場合、クラスはObserverインターフェイスを実装できます。</target>
        </trans-unit>
        <trans-unit id="aba1fcf9735c8794d9553c9de8b9def398f44c4b" translate="yes" xml:space="preserve">
          <source>A class containing static convenience methods for locating &lt;code&gt;ImageReader&lt;/code&gt;s and &lt;code&gt;ImageWriter&lt;/code&gt;s, and performing simple encoding and decoding.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; と &lt;code&gt;ImageWriter&lt;/code&gt; を検索し、単純なエンコーディングとデコーディングを実行するための静的簡易メソッドを含むクラス。</target>
        </trans-unit>
        <trans-unit id="c0334b4ce731ca83d507f211dc5bcced61e8bc5f" translate="yes" xml:space="preserve">
          <source>A class containing the TIFF tags used to reference the Exif and GPS IFDs.</source>
          <target state="translated">ExifとGPS IFDの参照に使用されるTIFFタグを含むクラス。</target>
        </trans-unit>
        <trans-unit id="1c946b8d62ea15a903d31e5943f708157fec4d07" translate="yes" xml:space="preserve">
          <source>A class containing the TIFF tags used to reference the Exif and GPS IFDs. This tag set should be added to the root tag set by means of the &lt;a href=&quot;tiffimagereadparam#addAllowedTagSet(javax.imageio.plugins.tiff.TIFFTagSet)&quot;&gt;&lt;code&gt;TIFFImageReadParam.addAllowedTagSet&lt;/code&gt;&lt;/a&gt; method if Exif support is desired.</source>
          <target state="translated">ExifおよびGPSIFDを参照するために使用されるTIFFタグを含むクラス。Exifのサポートが必要な場合は、&lt;a href=&quot;tiffimagereadparam#addAllowedTagSet(javax.imageio.plugins.tiff.TIFFTagSet)&quot;&gt; &lt;code&gt;TIFFImageReadParam.addAllowedTagSet&lt;/code&gt; &lt;/a&gt;メソッドを使用してこのタグセットをルートタグセットに追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="ce0000d9fedd31b80c15cba3d9a9ef3dc49592dd" translate="yes" xml:space="preserve">
          <source>A class defining the notion of a TIFF tag.</source>
          <target state="translated">TIFFタグの概念を定義したクラス。</target>
        </trans-unit>
        <trans-unit id="f4de1c4fa220b7678865e87b1b2b26f0c6f28c68" translate="yes" xml:space="preserve">
          <source>A class defining the notion of a TIFF tag. A TIFF tag is a key that may appear in an Image File Directory (IFD). In the IFD each tag has some data associated with it, which may consist of zero or more values of a given data type. The combination of a tag and a value is known as an IFD Entry or TIFF Field.</source>
          <target state="translated">TIFF タグの概念を定義するクラス。TIFF タグは、画像ファイルディレクトリ(IFD)に現れる可能性のあるキーである。IFD において、各タグは、それに関連したデータを持ち、そのデータは、与えられたデータ型の 0 個以上の値で構成される。タグと値の組み合わせは、IFD エントリまたは TIFF フィールドとして知られている。</target>
        </trans-unit>
        <trans-unit id="317047d47afb67f04ec027478f70d7ecc2962ebb" translate="yes" xml:space="preserve">
          <source>A class describing how a stream is to be decoded.</source>
          <target state="translated">ストリームがどのようにデコードされるかを記述したクラス。</target>
        </trans-unit>
        <trans-unit id="c9b6d1a8dfd34b6a2f783596c581d7bf8cfbfa2a" translate="yes" xml:space="preserve">
          <source>A class describing how a stream is to be decoded. Instances of this class or its subclasses are used to supply prescriptive &quot;how-to&quot; information to instances of &lt;code&gt;ImageReader&lt;/code&gt;.</source>
          <target state="translated">ストリームのデコード方法を説明するクラス。このクラスまたはそのサブクラスのインスタンスは、 &lt;code&gt;ImageReader&lt;/code&gt; のインスタンスに規範的な「ハウツー」情報を提供するために使用されます。</target>
        </trans-unit>
        <trans-unit id="bdb5406053749def02227e1d5e2b473d7e57d6aa" translate="yes" xml:space="preserve">
          <source>A class describing how a stream is to be encoded.</source>
          <target state="translated">ストリームがどのようにエンコードされるかを記述したクラス。</target>
        </trans-unit>
        <trans-unit id="eb7e66efcdb5a0340069e0f95db4d8c40901525c" translate="yes" xml:space="preserve">
          <source>A class describing how a stream is to be encoded. Instances of this class or its subclasses are used to supply prescriptive &quot;how-to&quot; information to instances of &lt;code&gt;ImageWriter&lt;/code&gt;.</source>
          <target state="translated">ストリームのエンコード方法を説明するクラス。このクラスまたはそのサブクラスのインスタンスは、 &lt;code&gt;ImageWriter&lt;/code&gt; のインスタンスに規範的な「ハウツー」情報を提供するために使用されます。</target>
        </trans-unit>
        <trans-unit id="e5034257b5743dfaf2facf699619ce7949ccab52" translate="yes" xml:space="preserve">
          <source>A class designed to produce preconfigured &quot;accessory&quot; objects to insert into color choosers.</source>
          <target state="translated">色選択器に挿入するための設定済みの &quot;アクセサリ&quot; オブジェクトを作成するためのクラスです。</target>
        </trans-unit>
        <trans-unit id="c4cea7f0cea8b3c4c1d900e2c74bafad3d5dc6b1" translate="yes" xml:space="preserve">
          <source>A class encapsulating a single JPEG Huffman table.</source>
          <target state="translated">単一のJPEGハフマンテーブルをカプセル化したクラス.</target>
        </trans-unit>
        <trans-unit id="321f8c15f8e226bd6268946f3635814d5dc70788" translate="yes" xml:space="preserve">
          <source>A class encapsulating a single JPEG Huffman table. Fields are provided for the &quot;standard&quot; tables taken from Annex K of the JPEG specification. These are the tables used as defaults.</source>
          <target state="translated">単一のJPEGハフマンテーブルをカプセル化したクラス.フィールドは,JPEG仕様の附属書Kから取り出された「標準」テーブル用に用意されています.これらのテーブルがデフォルトとして利用されます.</target>
        </trans-unit>
        <trans-unit id="7d0f9ed539cc05958b0c68b8a54ebd530f7cf999" translate="yes" xml:space="preserve">
          <source>A class encapsulating a single JPEG quantization table.</source>
          <target state="translated">単一のJPEG量子化テーブルをカプセル化したクラス。</target>
        </trans-unit>
        <trans-unit id="9a5e3d73505c4420c99527a5d829a03a35d0ff9c" translate="yes" xml:space="preserve">
          <source>A class encapsulating a single JPEG quantization table. The elements appear in natural order (as opposed to zig-zag order). Static variables are provided for the &quot;standard&quot; tables taken from Annex K of the JPEG specification, as well as the default tables conventionally used for visually lossless encoding.</source>
          <target state="translated">単一のJPEG量子化テーブルをカプセル化したクラス.要素は自然な順序で表示されます(ジグザグの順序ではなく).静的変数は,JPEG仕様の附属書Kから引用された「標準」テーブルと,視覚的にロスレスなエンコーディングに用いられるデフォルトテーブルのために用意されています.</target>
        </trans-unit>
        <trans-unit id="44f8037065e3191d22b9bee6220170570919d116" translate="yes" xml:space="preserve">
          <source>A class encapsulating state useful when painting.</source>
          <target state="translated">塗るときに便利な状態をカプセル化したクラス。</target>
        </trans-unit>
        <trans-unit id="cc9d6ee592a3b7b332ff1cbb6d82df947b65806d" translate="yes" xml:space="preserve">
          <source>A class encapsulating state useful when painting. Generally, instances of this class are created once, and reused for each paint request without modification. This class contains values useful when hinting the cache engine, and when decoding control points and bezier curve anchors.</source>
          <target state="translated">ペイント時に便利な状態をカプセル化したクラスです。通常、このクラスのインスタンスは一度作成され、変更することなく各ペイントリクエストで再利用されます。このクラスには、キャッシュエンジンのヒントや、制御点やベジェ曲線のアンカーをデコードする際に便利な値が含まれています。</target>
        </trans-unit>
        <trans-unit id="bde55079a3684e11cbe1598e95c1ba9db4e8a1f3" translate="yes" xml:space="preserve">
          <source>A class file can also be created to hold information about a package, including package annotations. To create a class file for a named package, have the &lt;code&gt;name&lt;/code&gt; argument be the package's name followed by &lt;code&gt;&quot;.package-info&quot;&lt;/code&gt;; creating a class file for an unnamed package is not supported.</source>
          <target state="translated">パッケージの注釈など、パッケージに関する情報を保持するクラスファイルを作成することもできます。名前付きパッケージのクラスファイルを作成するには、 &lt;code&gt;name&lt;/code&gt; 引数をパッケージの名前の後に &lt;code&gt;&quot;.package-info&quot;&lt;/code&gt; ます。名前のないパッケージのクラスファイルの作成はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="d524dbc67636cae0787b2f597b10cfb1ce326300" translate="yes" xml:space="preserve">
          <source>A class for building certification paths (also known as certificate chains).</source>
          <target state="translated">建物の認証パス(サーティフィケートチェーンとも呼ばれる)のためのクラス。</target>
        </trans-unit>
        <trans-unit id="79a919ed13386b15bc475fe84e9d59954394707e" translate="yes" xml:space="preserve">
          <source>A class for retrieving &lt;code&gt;Certificate&lt;/code&gt;s and &lt;code&gt;CRL&lt;/code&gt;s from a repository.</source>
          <target state="translated">リポジトリから &lt;code&gt;Certificate&lt;/code&gt; および &lt;code&gt;CRL&lt;/code&gt; を取得するためのクラス。</target>
        </trans-unit>
        <trans-unit id="ec4b47f315864b8bfb44767c9e4144c8782ed06e" translate="yes" xml:space="preserve">
          <source>A class for validating certification paths (also known as certificate chains).</source>
          <target state="translated">認証パス(証明書チェーンとも呼ばれる)を検証するためのクラス。</target>
        </trans-unit>
        <trans-unit id="b5cf2a4811c8c47c2f2e81f99cd8b41ae527cd0f" translate="yes" xml:space="preserve">
          <source>A class implementing this interface is an &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;&lt;code&gt;MXBean&lt;/code&gt;&lt;/a&gt;. A Java virtual machine has one or more implementations of this interface. The &lt;a href=&quot;managementfactory#getPlatformMXBeans(java.lang.Class)&quot;&gt;&lt;code&gt;getPlatformMXBeans&lt;/code&gt;&lt;/a&gt; method can be used to obtain the list of &lt;code&gt;BufferPoolMXBean&lt;/code&gt; objects representing the management interfaces for pools of buffers as follows:</source>
          <target state="translated">このインターフェースを実装するクラスは&lt;a href=&quot;../../../javax/management/mxbean&quot;&gt; &lt;code&gt;MXBean&lt;/code&gt; &lt;/a&gt;です。Java仮想マシンには、このインターフェースの1つ以上の実装があります。&lt;a href=&quot;managementfactory#getPlatformMXBeans(java.lang.Class)&quot;&gt; &lt;code&gt;getPlatformMXBeans&lt;/code&gt; の&lt;/a&gt;方法は、リスト取得するために使用することができる &lt;code&gt;BufferPoolMXBean&lt;/code&gt; を次のようにバッファのプールの管理インターフェースを表すオブジェクト。</target>
        </trans-unit>
        <trans-unit id="a4826fac13ffcb96ddcf1d4b8835ded2eb4fc3d3" translate="yes" xml:space="preserve">
          <source>A class implementing this interface is an &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;&lt;code&gt;MXBean&lt;/code&gt;&lt;/a&gt;. A Java virtual machine has one or more implementations of this interface. The &lt;a href=&quot;managementfactory#getPlatformMXBeans-java.lang.Class-&quot;&gt;&lt;code&gt;getPlatformMXBeans&lt;/code&gt;&lt;/a&gt; method can be used to obtain the list of &lt;code&gt;BufferPoolMXBean&lt;/code&gt; objects representing the management interfaces for pools of buffers as follows:</source>
          <target state="translated">このインターフェースを実装するクラスは&lt;a href=&quot;../../../javax/management/mxbean&quot;&gt; &lt;code&gt;MXBean&lt;/code&gt; &lt;/a&gt;です。Java仮想マシンには、このインターフェースの1つ以上の実装があります。&lt;a href=&quot;managementfactory#getPlatformMXBeans-java.lang.Class-&quot;&gt; &lt;code&gt;getPlatformMXBeans&lt;/code&gt; の&lt;/a&gt;方法は、リスト取得するために使用することができる &lt;code&gt;BufferPoolMXBean&lt;/code&gt; を次のようにバッファのプールの管理インターフェースを表すオブジェクト。</target>
        </trans-unit>
        <trans-unit id="30cb9bfe590afa7140059341db51e815882fadf3" translate="yes" xml:space="preserve">
          <source>A class implements the &lt;code&gt;Cloneable&lt;/code&gt; interface to indicate to the &lt;a href=&quot;object#clone()&quot;&gt;&lt;code&gt;Object.clone()&lt;/code&gt;&lt;/a&gt; method that it is legal for that method to make a field-for-field copy of instances of that class.</source>
          <target state="translated">クラスは &lt;code&gt;Cloneable&lt;/code&gt; インターフェースを実装して、そのメソッドがそのクラスのインスタンスのフィールドごとのコピーを作成することが合法であることを&lt;a href=&quot;object#clone()&quot;&gt; &lt;code&gt;Object.clone()&lt;/code&gt; &lt;/a&gt;メソッドに示します。</target>
        </trans-unit>
        <trans-unit id="3428d317a441756ed9f2c24a1df7a91726e5d72d" translate="yes" xml:space="preserve">
          <source>A class implements the &lt;code&gt;Cloneable&lt;/code&gt; interface to indicate to the &lt;a href=&quot;object#clone--&quot;&gt;&lt;code&gt;Object.clone()&lt;/code&gt;&lt;/a&gt; method that it is legal for that method to make a field-for-field copy of instances of that class.</source>
          <target state="translated">クラスは &lt;code&gt;Cloneable&lt;/code&gt; インターフェースを実装して、&lt;a href=&quot;object#clone--&quot;&gt; &lt;code&gt;Object.clone()&lt;/code&gt; &lt;/a&gt;メソッドに対して、そのクラスのインスタンスのフィールドごとのコピーを作成することが正当であることを示します。</target>
        </trans-unit>
        <trans-unit id="9c8b9f339d61d938dcccc73bcd63029bdd10d347" translate="yes" xml:space="preserve">
          <source>A class loader is an object that is responsible for loading classes.</source>
          <target state="translated">クラスローダーとは、クラスのロードを担当するオブジェクトのことです。</target>
        </trans-unit>
        <trans-unit id="483c50e9fa089e4562649e86aded48aaae4bb6ff" translate="yes" xml:space="preserve">
          <source>A class loader is an object that is responsible for loading classes. The class &lt;code&gt;ClassLoader&lt;/code&gt; is an abstract class. Given the &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt; of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class. A typical strategy is to transform the name into a file name and then read a &quot;class file&quot; of that name from a file system.</source>
          <target state="translated">クラスローダーは、クラスのロードを担当するオブジェクトです。 &lt;code&gt;ClassLoader&lt;/code&gt; クラスは抽象クラスです。与えられた&lt;a href=&quot;#binary-name&quot;&gt;バイナリ名&lt;/a&gt;クラスの、クラスローダは、クラスの定義を構成するデータを見つけるか生成しようとすべきです。一般的な戦略は、名前をファイル名に変換してから、その名前の「クラスファイル」をファイルシステムから読み取ることです。</target>
        </trans-unit>
        <trans-unit id="9cff8322dc2f981b7001727324b185bd2894264e" translate="yes" xml:space="preserve">
          <source>A class loader is an object that is responsible for loading classes. The class &lt;code&gt;ClassLoader&lt;/code&gt; is an abstract class. Given the &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt; of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class. A typical strategy is to transform the name into a file name and then read a &quot;class file&quot; of that name from a file system.</source>
          <target state="translated">クラスローダーは、クラスのロードを担当するオブジェクトです。 &lt;code&gt;ClassLoader&lt;/code&gt; クラスは抽象クラスです。与えられた&lt;a href=&quot;#name&quot;&gt;バイナリ名&lt;/a&gt;クラスの、クラスローダは、クラスの定義を構成するデータを見つけるか生成しようとすべきです。典型的な戦略は、名前をファイル名に変換してから、ファイルシステムからその名前の「クラスファイル」を読み取ることです。</target>
        </trans-unit>
        <trans-unit id="28bc76f0c319effd2168c6c88997fb73db1ee3ba" translate="yes" xml:space="preserve">
          <source>A class loader that wishes to define a package for classes in a JAR typically uses the specification and implementation titles, versions, and vendors from the JAR's manifest. If the package is specified as &lt;a href=&quot;../util/jar/attributes.name#SEALED&quot;&gt;sealed&lt;/a&gt; in the JAR's manifest, the &lt;code&gt;URL&lt;/code&gt; of the JAR file is typically used as the &lt;code&gt;sealBase&lt;/code&gt;. If classes of package &lt;code&gt;'p'&lt;/code&gt; defined by this class loader are loaded from multiple JARs, the &lt;code&gt;Package&lt;/code&gt; object may contain different information depending on the first class of package &lt;code&gt;'p'&lt;/code&gt; defined and which JAR's manifest is read first to explicitly define package &lt;code&gt;'p'&lt;/code&gt;.</source>
          <target state="translated">JAR内のクラスのパッケージを定義することを希望するクラスローダーは、通常、JARのマニフェストからの仕様と実装のタイトル、バージョン、およびベンダーを使用します。パッケージがJARのマニフェストで&lt;a href=&quot;../util/jar/attributes.name#SEALED&quot;&gt;封印&lt;/a&gt;されていると指定されている場合、通常、JARファイルの &lt;code&gt;URL&lt;/code&gt; が &lt;code&gt;sealBase&lt;/code&gt; として使用されます。パッケージのクラスの場合は &lt;code&gt;'p'&lt;/code&gt; 、複数のJARファイルからロードされているローダー、このクラスで定義されているが、 &lt;code&gt;Package&lt;/code&gt; オブジェクトはパッケージの最初のクラスに応じて異なる情報が含まれていてもよい &lt;code&gt;'p'&lt;/code&gt; に定義されたJARのマニフェスト明示的にパッケージ定義するために最初に読み込まれる &lt;code&gt;'p'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ce39fd66531a7a384263f9e859092a5c3c09aed" translate="yes" xml:space="preserve">
          <source>A class name pattern can also be empty or the single character &quot;&lt;code&gt;*&lt;/code&gt;&quot;, both of which grant access to any class.</source>
          <target state="translated">クラス名パターンは、空にすることも、単一の文字「 &lt;code&gt;*&lt;/code&gt; 」にすることもできます。どちらも任意のクラスへのアクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="e317baf1134b30d7d9e54b8f4adcb3831a0e31b4" translate="yes" xml:space="preserve">
          <source>A class not described by a more specific kind (like &lt;code&gt;ENUM&lt;/code&gt;).</source>
          <target state="translated">より具体的な種類（ &lt;code&gt;ENUM&lt;/code&gt; など）で記述されていないクラス。</target>
        </trans-unit>
        <trans-unit id="bc3cd42645526b63c6b87578e25cc1cecfc66711" translate="yes" xml:space="preserve">
          <source>A class or interface type that could not be resolved.</source>
          <target state="translated">解決できなかったクラスまたはインタフェースの型。</target>
        </trans-unit>
        <trans-unit id="6a03a390b706ffc95966f4d839f5e6763859f7f2" translate="yes" xml:space="preserve">
          <source>A class or interface type.</source>
          <target state="translated">クラスまたはインターフェースの型。</target>
        </trans-unit>
        <trans-unit id="eeec5ed6b752d7b244e35cceec9fac5e56058a29" translate="yes" xml:space="preserve">
          <source>A class representing a field in a TIFF 6.0 Image File Directory.</source>
          <target state="translated">TIFF 6.0 画像ファイルディレクトリのフィールドを表すクラス。</target>
        </trans-unit>
        <trans-unit id="1ceaf0ae9fac66af5c5c71328e5f53e64786f589" translate="yes" xml:space="preserve">
          <source>A class representing a mutable reference to an array of bytes and an offset and length within that array.</source>
          <target state="translated">バイトの配列への変更可能な参照と,その配列内のオフセットと長さを表すクラス.</target>
        </trans-unit>
        <trans-unit id="4a48a4b9106cdb7952ce705c7bb7a3668a981ba8" translate="yes" xml:space="preserve">
          <source>A class representing a mutable reference to an array of bytes and an offset and length within that array. &lt;code&gt;IIOByteBuffer&lt;/code&gt; is used by &lt;code&gt;ImageInputStream&lt;/code&gt; to supply a sequence of bytes to the caller, possibly with fewer copies than using the conventional &lt;code&gt;read&lt;/code&gt; methods that take a user-supplied byte array.</source>
          <target state="translated">バイトの配列への変更可能な参照と、その配列内のオフセットと長さを表すクラス。 &lt;code&gt;IIOByteBuffer&lt;/code&gt; がで使用される &lt;code&gt;ImageInputStream&lt;/code&gt; が、おそらく従来の使用よりも少ないコピーを、呼び出し元にバイトシーケンスを供給する &lt;code&gt;read&lt;/code&gt; ユーザ供給バイト配列を取る方法を。</target>
        </trans-unit>
        <trans-unit id="e9dd636c411f076fe4378038d5f1703cc19f7d24" translate="yes" xml:space="preserve">
          <source>A class representing a node in a meta-data tree, which implements the  &lt;code&gt;org.w3c.dom.Element&lt;/code&gt; interface and additionally allows for the storage of non-textual objects via the &lt;code&gt;getUserObject&lt;/code&gt; and &lt;code&gt;setUserObject&lt;/code&gt; methods.</source>
          <target state="translated">実装メタデータツリー内のノードを表すクラス &lt;code&gt;org.w3c.dom.Element&lt;/code&gt; インタフェースを介して、さらに非テキストオブジェクトの格納を可能に &lt;code&gt;getUserObject&lt;/code&gt; および &lt;code&gt;setUserObject&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="31770ec82ed7a7631fb0df3ef8512d4ee88b8cad" translate="yes" xml:space="preserve">
          <source>A class representing a node in a meta-data tree, which implements the &lt;a href=&quot;../../../../java.xml/org/w3c/dom/element&quot;&gt;&lt;code&gt;org.w3c.dom.Element&lt;/code&gt;&lt;/a&gt; interface and additionally allows for the storage of non-textual objects via the &lt;code&gt;getUserObject&lt;/code&gt; and &lt;code&gt;setUserObject&lt;/code&gt; methods.</source>
          <target state="translated">実装メタデータツリー内のノードを表すクラス&lt;a href=&quot;../../../../java.xml/org/w3c/dom/element&quot;&gt; &lt;code&gt;org.w3c.dom.Element&lt;/code&gt; &lt;/a&gt;インタフェースを介して、さらに非テキストオブジェクトの格納を可能に &lt;code&gt;getUserObject&lt;/code&gt; および &lt;code&gt;setUserObject&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="aa458131f0ff37b7112e04879ddc2839c58b609a" translate="yes" xml:space="preserve">
          <source>A class representing a rectangular array of pixels.</source>
          <target state="translated">ピクセルの矩形配列を表すクラス.</target>
        </trans-unit>
        <trans-unit id="0240e3aa9f0230fc803745e8fa3b52820913e9df" translate="yes" xml:space="preserve">
          <source>A class representing a rectangular array of pixels. A Raster encapsulates a DataBuffer that stores the sample values and a SampleModel that describes how to locate a given sample value in a DataBuffer.</source>
          <target state="translated">ピクセルの矩形配列を表すクラスです。Raster はサンプル値を格納する DataBuffer と、DataBuffer の中の任意のサンプル値を見つける方法を記述する SampleModel をカプセル化します。</target>
        </trans-unit>
        <trans-unit id="dc59480a1d752590ed85efab39445c512153f1b4" translate="yes" xml:space="preserve">
          <source>A class representing a set of TIFF tags.</source>
          <target state="translated">TIFFタグの集合を表すクラス。</target>
        </trans-unit>
        <trans-unit id="549cc45802ab080822e624dddc4d2092ceaada25" translate="yes" xml:space="preserve">
          <source>A class representing a set of TIFF tags. Each tag in the set must have a unique number (this is a limitation of the TIFF specification itself).</source>
          <target state="translated">TIFFタグの集合を表すクラス。セット内の各タグは一意の番号を持たなければならない(これはTIFF仕様自体の制限である)。</target>
        </trans-unit>
        <trans-unit id="bf3e8146bb2649a21a546240318b9148a02bf417" translate="yes" xml:space="preserve">
          <source>A class representing elliptic curve private keys as defined in RFC 7748, including the curve and other algorithm parameters.</source>
          <target state="translated">RFC 7748で定義されている楕円曲線の秘密鍵を表すクラスで、曲線やその他のアルゴリズムパラメータを含む。</target>
        </trans-unit>
        <trans-unit id="6350dab2b329b90dfef3c402ac607a717719da0d" translate="yes" xml:space="preserve">
          <source>A class representing elliptic curve private keys as defined in RFC 7748, including the curve and other algorithm parameters. The private key is represented as an encoded scalar value. The decoding procedure defined in the RFC includes an operation that forces certain bits of the key to either 1 or 0. This operation is known as &quot;pruning&quot; or &quot;clamping&quot; the private key. All arrays in this spec are unpruned, and implementations will need to prune the array before using it in any numerical operations.</source>
          <target state="translated">RFC 7748で定義されている楕円曲線の秘密鍵を表すクラスで、曲線やその他のアルゴリズムパラメータを含む。秘密鍵は、エンコードされたスカラ値として表現される。RFCで定義されている復号化手順には、鍵の特定のビットを1または0に強制する操作が含まれる。 この操作は、秘密鍵の「剪定」または「クランプ」として知られている。この仕様のすべての配列はプルーンされておらず、実装では数値演算で使用する前に配列をプルーンする必要があります。</target>
        </trans-unit>
        <trans-unit id="47e6d76e25b1c4d7ec2e9a6c6896665d47bf80f7" translate="yes" xml:space="preserve">
          <source>A class representing elliptic curve public keys as defined in RFC 7748, including the curve and other algorithm parameters.</source>
          <target state="translated">RFC 7748で定義されている楕円曲線の公開鍵を表すクラスで、曲線やその他のアルゴリズムパラメータを含む。</target>
        </trans-unit>
        <trans-unit id="0fa31fb1db3f2bf4170a4504fda888238f5857ac" translate="yes" xml:space="preserve">
          <source>A class representing elliptic curve public keys as defined in RFC 7748, including the curve and other algorithm parameters. The public key is a particular point on the curve, which is represented using only its u-coordinate. A u-coordinate is an element of the field of integers modulo some value that is determined by the algorithm parameters. This field element is represented by a BigInteger which may hold any value. That is, the BigInteger is not restricted to the range of canonical field elements.</source>
          <target state="translated">RFC 7748で定義されている楕円曲線の公開鍵を表すクラスで、曲線やその他のアルゴリズムパラメータを含みます。公開鍵は、曲線上の特定の点であり、そのu座標のみを用いて表現されます。u座標は、アルゴリズムパラメータによって決定される値をモジュロする整数のフィールドの要素である。このフィールド要素は、任意の値を保持できるBigIntegerで表現されます。つまり、BigIntegerは、正則フィールド要素の範囲に制限されません。</target>
        </trans-unit>
        <trans-unit id="65c946c01af08b81e126884eb2cf472a54fa6698" translate="yes" xml:space="preserve">
          <source>A class representing the extra tags found in a &lt;a href=&quot;http://tools.ietf.org/html/rfc2306.html&quot;&gt;TIFF-F&lt;/a&gt; (RFC 2036) file.</source>
          <target state="translated">&lt;a href=&quot;http://tools.ietf.org/html/rfc2306.html&quot;&gt;TIFF-F&lt;/a&gt;（RFC 2036）ファイルにある追加のタグを表すクラス。</target>
        </trans-unit>
        <trans-unit id="e2465331bfa6b2ec667a7a1a199b513b9f4467c6" translate="yes" xml:space="preserve">
          <source>A class representing the set of tags found in the baseline TIFF specification as well as some common additional tags.</source>
          <target state="translated">ベースラインTIFF仕様に見られるタグの集合と、いくつかの共通の追加タグを表すクラス。</target>
        </trans-unit>
        <trans-unit id="b85817ff47ba848e015b8adf4ea8038a4777bdf3" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in a GeoTIFF IFD.</source>
          <target state="translated">GeoTIFF IFDに含まれるタグを表すクラスです。</target>
        </trans-unit>
        <trans-unit id="639aa3e6bfa855a19d38be8bddb1f4b7cf9e77ce" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in a GeoTIFF IFD. GeoTIFF is a standard for annotating georeferenced or geocoded raster imagery. This class does</source>
          <target state="translated">GeoTIFF IFDに含まれるタグを表すクラスです。GeoTIFFは、地理参照またはジオコーディングされたラスタ画像に注釈を付けるための標準規格です。このクラスは以下のような機能を持ちます。</target>
        </trans-unit>
        <trans-unit id="ad48f4700fc5b0e6bc913680cdd26ad0db193c79" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in an Exif GPS Info IFD.</source>
          <target state="translated">Exif GPS Info IFDで見つかったタグを表すクラスです。</target>
        </trans-unit>
        <trans-unit id="84527dca923846fad6949b91ca530336221f8b18" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in an Exif IFD.</source>
          <target state="translated">Exif IFDに含まれるタグを表すクラスです。</target>
        </trans-unit>
        <trans-unit id="ff411da7e062b66bf98168cb887363bdde4fa6e4" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in an Exif IFD. Exif is a standard for annotating images used by most digital camera manufacturers. The Exif specification may be found at &lt;a href=&quot;http://www.exif.org/Exif2-2.PDF&quot;&gt; &lt;code&gt;http://www.exif.org/Exif2-2.PDF&lt;/code&gt; &lt;/a&gt;.</source>
          <target state="translated">ExifIFDで見つかったタグを表すクラス。Exifは、ほとんどのデジタルカメラメーカーで使用されている画像に注釈を付けるための標準です。Exif仕様は、&lt;a href=&quot;http://www.exif.org/Exif2-2.PDF&quot;&gt; &lt;code&gt;http://www.exif.org/Exif2-2.PDF&lt;/code&gt; にあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="37f8dd762267c3d3d350af455503509a6ba5e61a" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in an Exif Interoperability IFD.</source>
          <target state="translated">Exif相互運用性IFDに含まれるタグを表すクラスです。</target>
        </trans-unit>
        <trans-unit id="0faaa8cb7ea41080a9897a029d07ba7f64951d59" translate="yes" xml:space="preserve">
          <source>A class should implement this interface if it meets three criteria:</source>
          <target state="translated">クラスは、3つの基準を満たしていれば、このインターフェイスを実装しなければなりません。</target>
        </trans-unit>
        <trans-unit id="92346a2f99faeaaa261517e46da5df7b89aef4c7" translate="yes" xml:space="preserve">
          <source>A class that allows the format of an image (in particular, its &lt;code&gt;SampleModel&lt;/code&gt; and &lt;code&gt;ColorModel&lt;/code&gt;) to be specified in a convenient manner.</source>
          <target state="translated">画像のフォーマット（特に、その &lt;code&gt;SampleModel&lt;/code&gt; および &lt;code&gt;ColorModel&lt;/code&gt; ）を便利な方法で指定できるようにするクラス。</target>
        </trans-unit>
        <trans-unit id="9c8e539dbcfd8560d6896c579d5cc9832b8d9d59" translate="yes" xml:space="preserve">
          <source>A class that can be used to compute the Adler-32 checksum of a data stream.</source>
          <target state="translated">データストリームのAdler-32チェックサムを計算するために使用できるクラスです。</target>
        </trans-unit>
        <trans-unit id="cdd5cc0c0766766349e5a8df9631efc59ea37f9a" translate="yes" xml:space="preserve">
          <source>A class that can be used to compute the Adler-32 checksum of a data stream. An Adler-32 checksum is almost as reliable as a CRC-32 but can be computed much faster.</source>
          <target state="translated">データ・ストリームのAdler-32チェックサムを計算するために使用できるクラスです。Adler-32チェックサムはCRC-32とほぼ同等の信頼性を持ちますが、より高速に計算することができます。</target>
        </trans-unit>
        <trans-unit id="0c514c4d4229f220cdf94ab33ba1f0e3f329c671" translate="yes" xml:space="preserve">
          <source>A class that can be used to compute the CRC-32 of a data stream.</source>
          <target state="translated">データストリームのCRC-32を計算するために使用できるクラスです。</target>
        </trans-unit>
        <trans-unit id="5ea18e62bf6041eb3df169d804ad7a5cd70f37dd" translate="yes" xml:space="preserve">
          <source>A class that can be used to compute the CRC-32C of a data stream.</source>
          <target state="translated">データストリームのCRC-32Cを計算するために使用できるクラスです。</target>
        </trans-unit>
        <trans-unit id="b4438f53bff9ad76b2b996f593f314197aaa9ed9" translate="yes" xml:space="preserve">
          <source>A class that describes the pointer position.</source>
          <target state="translated">ポインタの位置を記述するクラスです。</target>
        </trans-unit>
        <trans-unit id="2b974107948994a749fc354434093fd17886c263" translate="yes" xml:space="preserve">
          <source>A class that describes the pointer position. It provides the &lt;code&gt;GraphicsDevice&lt;/code&gt; where the pointer is and the &lt;code&gt;Point&lt;/code&gt; that represents the coordinates of the pointer.</source>
          <target state="translated">ポインタの位置を記述するクラス。これは、ポインターが存在する &lt;code&gt;GraphicsDevice&lt;/code&gt; と、ポインターの座標を表す &lt;code&gt;Point&lt;/code&gt; を提供します。</target>
        </trans-unit>
        <trans-unit id="01fd859a5bddef604f485cd1d6721c1620367871" translate="yes" xml:space="preserve">
          <source>A class that holds a list of EventListeners.</source>
          <target state="translated">EventListenersのリストを保持するクラスです。</target>
        </trans-unit>
        <trans-unit id="bccbef1b527baff869bc778e0f10bad79b251f40" translate="yes" xml:space="preserve">
          <source>A class that holds a list of EventListeners. A single instance can be used to hold all listeners (of all types) for the instance using the list. It is the responsiblity of the class using the EventListenerList to provide type-safe API (preferably conforming to the JavaBeans spec) and methods which dispatch event notification methods to appropriate Event Listeners on the list. The main benefits that this class provides are that it is relatively cheap in the case of no listeners, and it provides serialization for event-listener lists in a single place, as well as a degree of MT safety (when used correctly). Usage example: Say one is defining a class that sends out FooEvents, and one wants to allow users of the class to register FooListeners and receive notification when FooEvents occur. The following should be added to the class definition:</source>
          <target state="translated">EventListeners のリストを保持するクラスです。単一のインスタンスを使用して、リストを使用しているインスタンスのすべてのリスナー(すべての型の)を保持することができます。EventListenerListを使用するクラスの責任は、型安全なAPI(できればJavaBeans仕様に準拠)と、リスト上の適切なイベントリスナーにイベント通知メソッドをディスパッチするメソッドを提供することです。このクラスが提供する主な利点は、リスナーがない場合には比較的安価であり、イベントリスナーリストのためのシリアライズを一箇所で提供し、(正しく使用された場合には)ある程度のMT安全性を提供することです。使用例。FooEventsを送信するクラスを定義していて、そのクラスのユーザがFooListenersを登録して、FooEventsが発生したときに通知を受け取れるようにしたいとします。クラスの定義に以下を追加します。</target>
        </trans-unit>
        <trans-unit id="561f7d252748cac94cef43b93aa50d3e54fc0a81" translate="yes" xml:space="preserve">
          <source>A class that implements a mechanism to transfer data using cut/copy/paste operations.</source>
          <target state="translated">カット/コピー/ペースト操作でデータを転送する仕組みを実装したクラスです。</target>
        </trans-unit>
        <trans-unit id="0b9ccb86c63ff8e5e87cf5de1df071397be14468" translate="yes" xml:space="preserve">
          <source>A class that implements a menu which can be dynamically popped up at a specified position within a component.</source>
          <target state="translated">コンポーネント内の指定した位置に動的にポップアップするメニューを実装したクラス。</target>
        </trans-unit>
        <trans-unit id="aa6462377deb828ac8fabeb31954961761d5ec35" translate="yes" xml:space="preserve">
          <source>A class that implements an empty border with no size.</source>
          <target state="translated">サイズのない空のボーダーを実装したクラスです。</target>
        </trans-unit>
        <trans-unit id="b014c94e857bb1e947e25e73bed04f20f2b5deb9" translate="yes" xml:space="preserve">
          <source>A class that implements an empty border with no size. This provides a convenient base class from which other border classes can be easily derived.</source>
          <target state="translated">サイズのない空のボーダーを実装したクラスです。これは、他のボーダークラスを簡単に派生させることができる便利な基底クラスを提供します。</target>
        </trans-unit>
        <trans-unit id="ca6acaf5f47411e180b6a86f697ad80777c28261" translate="yes" xml:space="preserve">
          <source>A class that represents an immutable universally unique identifier (UUID).</source>
          <target state="translated">不変的で普遍的に一意な識別子(UUID)を表すクラス。</target>
        </trans-unit>
        <trans-unit id="eb88a241c9240d74a35296b3eb6f058d620a61af" translate="yes" xml:space="preserve">
          <source>A class that represents an immutable universally unique identifier (UUID). A UUID represents a 128-bit value.</source>
          <target state="translated">不変的で普遍的に一意な識別子(UUID)を表すクラス。UUIDは128ビットの値を表します。</target>
        </trans-unit>
        <trans-unit id="50fc59ed7536359ec8a59f0e493fe3242a135a31" translate="yes" xml:space="preserve">
          <source>A class to encapsulate MimeType parsing related exceptions.</source>
          <target state="translated">MimeType のパースに関連する例外をカプセル化するクラスです。</target>
        </trans-unit>
        <trans-unit id="8ad4c7c92a2deb2763930f0efab0ca42fe600177" translate="yes" xml:space="preserve">
          <source>A class to encapsulate symbolic colors representing the color of native GUI objects on a system.</source>
          <target state="translated">システム上のネイティブGUIオブジェクトの色を表すシンボリックカラーをカプセル化するクラス。</target>
        </trans-unit>
        <trans-unit id="325b06e0b2c5d8f415697a9862a7840ea37a5102" translate="yes" xml:space="preserve">
          <source>A class to encapsulate symbolic colors representing the color of native GUI objects on a system. For systems which support the dynamic update of the system colors (when the user changes the colors) the actual RGB values of these symbolic colors will also change dynamically. In order to compare the &quot;current&quot; RGB value of a &lt;code&gt;SystemColor&lt;/code&gt; object with a non-symbolic Color object, &lt;code&gt;getRGB&lt;/code&gt; should be used rather than &lt;code&gt;equals&lt;/code&gt;.</source>
          <target state="translated">システム上のネイティブGUIオブジェクトの色を表すシンボリックカラーをカプセル化するクラス。システムカラーの動的更新をサポートするシステムの場合（ユーザーがカラーを変更した場合）、これらのシンボリックカラーの実際のRGB値も動的に変更されます。 &lt;code&gt;SystemColor&lt;/code&gt; オブジェクトの「現在の」RGB値を非シンボリックColorオブジェクトと比較するに &lt;code&gt;equals&lt;/code&gt; 、equalsではなく &lt;code&gt;getRGB&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="030b29871944e589acd7496284b1c4426c4716e2" translate="yes" xml:space="preserve">
          <source>A class to encapsulate the bitmap representation of the mouse cursor.</source>
          <target state="translated">マウスカーソルのビットマップ表現をカプセル化するクラスです。</target>
        </trans-unit>
        <trans-unit id="2616ee32c896220e397e902634bd1c1e8c1589bd" translate="yes" xml:space="preserve">
          <source>A class to manage the effective position of the child views in a localized area while changes are being made around the localized area.</source>
          <target state="translated">局所的に変化をつけながら、局所的に変化をつけていく中で、子どもの視界の有効な位置を管理するための授業。</target>
        </trans-unit>
        <trans-unit id="37be1b43a2f31099bae6adbd6242fcde167cd4c4" translate="yes" xml:space="preserve">
          <source>A class to manage the effective position of the child views in a localized area while changes are being made around the localized area. The AsyncBoxView may be continuously changing, but the visible area needs to remain fairly stable until the layout thread decides to publish an update to the parent.</source>
          <target state="translated">ローカライズされた領域の周囲で変更が行われている間、子ビューの有効な位置を管理するためのクラスです。AsyncBoxViewは継続的に変化しているかもしれませんが、レイアウトスレッドが親への更新を公開することを決定するまで、可視領域はかなり安定している必要があります。</target>
        </trans-unit>
        <trans-unit id="9670fee5d37230af79301f57acb9eece66d27fe5" translate="yes" xml:space="preserve">
          <source>A class to monitor the progress of some operation.</source>
          <target state="translated">何らかの操作の進行状況を監視するためのクラス。</target>
        </trans-unit>
        <trans-unit id="9fd4e45fc15093167532ea519baf9d505efa6efa" translate="yes" xml:space="preserve">
          <source>A class to monitor the progress of some operation. If it looks like the operation will take a while, a progress dialog will be popped up. When the ProgressMonitor is created it is given a numeric range and a descriptive string. As the operation progresses, call the setProgress method to indicate how far along the [min,max] range the operation is. Initially, there is no ProgressDialog. After the first millisToDecideToPopup milliseconds (default 500) the progress monitor will predict how long the operation will take. If it is longer than millisToPopup (default 2000, 2 seconds) a ProgressDialog will be popped up.</source>
          <target state="translated">ある操作の進行状況を監視するためのクラスです。操作に時間がかかりそうな場合は、プログレスダイアログがポップアップ表示されます。ProgressMonitorが作成されると、数値範囲と説明的な文字列が与えられます。操作が進むにつれて、setProgressメソッドを呼び出して、操作が[min,max]の範囲に沿ってどのくらい進んでいるかを示します。初期状態では、ProgressDialogはありません。最初のミリ秒(デフォルトは500)を経過すると、プログレスモニタが操作にかかる時間を予測します。millisToPopup (デフォルト 2000,2 秒)よりも長い場合は、ProgressDialog がポップアップ表示されます。</target>
        </trans-unit>
        <trans-unit id="8aa982ebac932e2a0592a5cc78b9283fd6107389" translate="yes" xml:space="preserve">
          <source>A class to perform rendering of the glyphs.</source>
          <target state="translated">グリフのレンダリングを行うクラス.</target>
        </trans-unit>
        <trans-unit id="cd7e5df83035855ad2d528ef68b31448dee3c330" translate="yes" xml:space="preserve">
          <source>A class to perform rendering of the glyphs. This can be implemented to be stateless, or to hold some information as a cache to facilitate faster rendering and model/view translation. At a minimum, the GlyphPainter allows a View implementation to perform its duties independent of a particular version of JVM and selection of capabilities (i.e. shaping for i18n, etc).</source>
          <target state="translated">グリフのレンダリングを行うクラス。これは、ステートレスに実装したり、高速なレンダリングやモデル/ビュー変換を容易にするためにキャッシュとして情報を保持したりすることができます。最低限、GlyphPainter は、特定のバージョンの JVM や機能の選択(i18n 用のシェーピングなど)に依存せずに、ビューの実装がその役割を果たすことを可能にします。</target>
        </trans-unit>
        <trans-unit id="bca4de61f3be4e6b7ba61ee56e5ad81c0eec2dcc" translate="yes" xml:space="preserve">
          <source>A class which enables secure communications using protocols such as the Secure Sockets Layer (SSL) or &lt;a href=&quot;http://www.ietf.org/rfc/rfc2246.txt&quot;&gt; IETF RFC 2246 &quot;Transport Layer Security&quot; (TLS) &lt;/a&gt; protocols, but is transport independent.</source>
          <target state="translated">Secure Sockets Layer（SSL）または&lt;a href=&quot;http://www.ietf.org/rfc/rfc2246.txt&quot;&gt;IETF RFC 2246 &quot;Transport Layer Security&quot;（TLS）&lt;/a&gt;プロトコルなどのプロトコルを使用して安全な通信を可能にするが、トランスポートに依存しないクラス。</target>
        </trans-unit>
        <trans-unit id="21ca1c378b497afd314ff5f225a2637e9eaa55fe" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding a &lt;code&gt;PropertyChangeListener&lt;/code&gt; with a &quot;bound&quot; property.</source>
          <target state="translated">特に「バウンド」プロパティを持つ &lt;code&gt;PropertyChangeListener&lt;/code&gt; を追加するために、 &lt;code&gt;EventListenerProxy&lt;/code&gt; を拡張するクラス。</target>
        </trans-unit>
        <trans-unit id="0f3ca17d6fac572ec6a95c1b55d04d926f20879a" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding a &lt;code&gt;PropertyChangeListener&lt;/code&gt; with a &quot;bound&quot; property. Instances of this class can be added as &lt;code&gt;PropertyChangeListener&lt;/code&gt;s to a bean which supports firing property change events.</source>
          <target state="translated">特に「バウンド」プロパティを持つ &lt;code&gt;PropertyChangeListener&lt;/code&gt; を追加するために、 &lt;code&gt;EventListenerProxy&lt;/code&gt; を拡張するクラス。このクラスのインスタンスは、プロパティ変更イベントの起動をサポートするBeanに &lt;code&gt;PropertyChangeListener&lt;/code&gt; として追加できます。</target>
        </trans-unit>
        <trans-unit id="0314ff4c39d100d0f62f503ec1527df57cbde8df" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding a &lt;code&gt;VetoableChangeListener&lt;/code&gt; with a &quot;constrained&quot; property.</source>
          <target state="translated">「制約された」プロパティを持つ &lt;code&gt;VetoableChangeListener&lt;/code&gt; を追加するために、特に &lt;code&gt;EventListenerProxy&lt;/code&gt; を拡張するクラス。</target>
        </trans-unit>
        <trans-unit id="08dd04ae093513ff4643c0d0511758136f388009" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding a &lt;code&gt;VetoableChangeListener&lt;/code&gt; with a &quot;constrained&quot; property. Instances of this class can be added as &lt;code&gt;VetoableChangeListener&lt;/code&gt;s to a bean which supports firing vetoable change events.</source>
          <target state="translated">「制約された」プロパティを持つ &lt;code&gt;VetoableChangeListener&lt;/code&gt; を追加するために、特に &lt;code&gt;EventListenerProxy&lt;/code&gt; を拡張するクラス。このクラスのインスタンスは、拒否可能変更イベントの起動をサポートするBeanに &lt;code&gt;VetoableChangeListener&lt;/code&gt; として追加できます。</target>
        </trans-unit>
        <trans-unit id="f4f59cb8ccd1394ce9dce3aaab5645471dfc04e9" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding an &lt;code&gt;AWTEventListener&lt;/code&gt; for a specific event mask.</source>
          <target state="translated">特定のイベントマスクに &lt;code&gt;AWTEventListener&lt;/code&gt; を追加するために、 &lt;code&gt;EventListenerProxy&lt;/code&gt; を拡張するクラス。</target>
        </trans-unit>
        <trans-unit id="c7eabbe3e661a2f1aec0a2f4de36c118c72ac391" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding an &lt;code&gt;AWTEventListener&lt;/code&gt; for a specific event mask. Instances of this class can be added as &lt;code&gt;AWTEventListener&lt;/code&gt;s to a &lt;code&gt;Toolkit&lt;/code&gt; object.</source>
          <target state="translated">特定のイベントマスクに &lt;code&gt;AWTEventListener&lt;/code&gt; を追加するために、 &lt;code&gt;EventListenerProxy&lt;/code&gt; を拡張するクラス。このクラスのインスタンスは、として追加することができる &lt;code&gt;AWTEventListener&lt;/code&gt; への &lt;code&gt;Toolkit&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="dd13932c0d22b0160242af32a989bade22bb60de" translate="yes" xml:space="preserve">
          <source>A class which implements a border of an arbitrary stroke.</source>
          <target state="translated">任意のストロークの境界線を実装したクラス。</target>
        </trans-unit>
        <trans-unit id="a9d774a2ad1c34f943fd3f35eec23cc0435ff679" translate="yes" xml:space="preserve">
          <source>A class which implements a line border of arbitrary thickness and of a single color.</source>
          <target state="translated">任意の太さと単色の線の境界線を実装したクラス。</target>
        </trans-unit>
        <trans-unit id="af729e265d8facc27cf4d8a66ab8677d821faede" translate="yes" xml:space="preserve">
          <source>A class which implements a raised or lowered bevel with softened corners.</source>
          <target state="translated">角を柔らかくした上げ下げベベルを実装するクラスです。</target>
        </trans-unit>
        <trans-unit id="b7f926173de62d6b847f8323ac6334b03a1ecf24" translate="yes" xml:space="preserve">
          <source>A class which implements a simple etched border which can either be etched-in or etched-out.</source>
          <target state="translated">エッチングインかエッチングアウトのどちらかになるシンプルなエッチングボーダーを実装したクラスです。</target>
        </trans-unit>
        <trans-unit id="9b29e9316680a3927d3ec38f4e1643fb2880f946" translate="yes" xml:space="preserve">
          <source>A class which implements a simple etched border which can either be etched-in or etched-out. If no highlight/shadow colors are initialized when the border is created, then these colors will be dynamically derived from the background color of the component argument passed into the paintBorder() method.</source>
          <target state="translated">エッチングインまたはエッチングアウトが可能なシンプルなエッチングボーダーを実装したクラスです。ボーダーの作成時にハイライト/シャドウの色が初期化されていない場合、これらの色は paintBorder()メソッドに渡されたコンポーネントの引数の背景色から動的に生成されます。</target>
        </trans-unit>
        <trans-unit id="b3caff1179de3b708c9ee025e3ade256a0f5bf51" translate="yes" xml:space="preserve">
          <source>A class which implements a simple two-line bevel border.</source>
          <target state="translated">シンプルな2本線のベベルボーダーを実装したクラスです。</target>
        </trans-unit>
        <trans-unit id="ec95e0328e1937e3c469a14b4cca798e2ff74f43" translate="yes" xml:space="preserve">
          <source>A class which implements an arbitrary border with the addition of a String title in a specified position and justification.</source>
          <target state="translated">指定した位置に文字列のタイトルを追加して正当化した任意の境界線を実装したクラスです。</target>
        </trans-unit>
        <trans-unit id="0dfe0cda489fd1752a80ce4eb44364ba506773f3" translate="yes" xml:space="preserve">
          <source>A class which provides a matte-like border of either a solid color or a tiled icon.</source>
          <target state="translated">無地かタイル状のアイコンのいずれかのマットなボーダーを提供するクラス。</target>
        </trans-unit>
        <trans-unit id="5273e822b15f7fdd2b253dfd633abca7b4f55002" translate="yes" xml:space="preserve">
          <source>A class which provides an empty, transparent border which takes up space but does no drawing.</source>
          <target state="translated">空の透明な境界線を提供するクラスで、スペースを取りますが描画はしません。</target>
        </trans-unit>
        <trans-unit id="b1e64d61b139a3339ef50761bae5d21d454e68e6" translate="yes" xml:space="preserve">
          <source>A client connection has been closed.</source>
          <target state="translated">クライアント接続が終了しました。</target>
        </trans-unit>
        <trans-unit id="7b6c01324c3ee4c5d8a2eca046353dc1ea9bd2ae" translate="yes" xml:space="preserve">
          <source>A client connection has failed unexpectedly.</source>
          <target state="translated">クライアント接続が予期せず失敗しました。</target>
        </trans-unit>
        <trans-unit id="ebbd35c91f41e39a02ce595327e7d60d48a87106" translate="yes" xml:space="preserve">
          <source>A client connection has potentially lost notifications. This notification only appears on the client side.</source>
          <target state="translated">クライアント接続で通知が失われる可能性があります。この通知はクライアント側にのみ表示されます。</target>
        </trans-unit>
        <trans-unit id="321eb78d1a8f4a5ebde928ad8b9f55df945982a9" translate="yes" xml:space="preserve">
          <source>A client usually needs to provide more than one processing instruction when submitting a print job. For example, the client might need to specify a media size of A4 and a landscape orientation. To send more than one processing instruction, the client collects the attributes into an attribute set, which the Java Print Service API represents with the &lt;a href=&quot;attributeset&quot;&gt;AttributeSet&lt;/a&gt; interface.</source>
          <target state="translated">クライアントは通常、印刷ジョブを送信するときに、複数の処理命令を提供する必要があります。たとえば、クライアントはA4のメディアサイズと横向きを指定する必要がある場合があります。複数の処理命令を送信するために、クライアントは属性を属性セットに収集します。これは、Java印刷サービスAPIが&lt;a href=&quot;attributeset&quot;&gt;AttributeSet&lt;/a&gt;インターフェースで表します。</target>
        </trans-unit>
        <trans-unit id="0b3646c8eee79de5884011a641b442d887ea986b" translate="yes" xml:space="preserve">
          <source>A clock providing access to the current instant, date and time using a time-zone.</source>
          <target state="translated">タイムゾーンを使って現在の瞬間、日付、時間にアクセスできる時計。</target>
        </trans-unit>
        <trans-unit id="411022af40541bd60a70533dd8bb81f330bbe450" translate="yes" xml:space="preserve">
          <source>A clock will typically obtain the current instant and then convert that to a date or time using a time-zone. This method returns a clock with similar properties but using a different time-zone.</source>
          <target state="translated">時計は通常、現在の瞬間を取得し、それをタイムゾーンを使用して日付や時間に変換します。このメソッドは、似たようなプロパティを持つ時計を返しますが、異なるタイムゾーンを使用します。</target>
        </trans-unit>
        <trans-unit id="d73f130682600c047cfb7bb69f8f3922da7e3c8a" translate="yes" xml:space="preserve">
          <source>A clock will typically obtain the current instant and then convert that to a date or time using a time-zone. This method returns the time-zone used.</source>
          <target state="translated">時計は通常、現在の瞬間を取得し、それをタイムゾーンを使用して日付や時間に変換します。このメソッドは、使用したタイムゾーンを返します。</target>
        </trans-unit>
        <trans-unit id="a03ba4716d7f3442eb5f94c77e6e8bfaf44ac187" translate="yes" xml:space="preserve">
          <source>A clone of this &lt;code&gt;TIFFDirectory&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;TIFFDirectory&lt;/code&gt; のクローン。</target>
        </trans-unit>
        <trans-unit id="1575e46f4c5894841b9bc15230c2209aba6759ca" translate="yes" xml:space="preserve">
          <source>A clone of this &lt;code&gt;TIFFField&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;TIFFField&lt;/code&gt; のクローン。</target>
        </trans-unit>
        <trans-unit id="7d032403b72ab32c0db49ce6607f5c43e7ea0265" translate="yes" xml:space="preserve">
          <source>A close square bracket ']'.</source>
          <target state="translated">閉じた四角いカッコ ']'。</target>
        </trans-unit>
        <trans-unit id="16d9daac0def4e983ab4c345604f43aa4b945147" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#div(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">&lt;a href=&quot;#div(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;式を表すコード。</target>
        </trans-unit>
        <trans-unit id="274120ef259900f587c826ae4fad58dc903ce5f7" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#div(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;#div(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;式を表すコード。これは主に、シリアル化された形式のクエリで重要です。</target>
        </trans-unit>
        <trans-unit id="756e5b583471e455897a7576819b503cbab87645" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#eq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query.</source>
          <target state="translated">&lt;a href=&quot;#eq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;クエリを表すコード。</target>
        </trans-unit>
        <trans-unit id="f1422a61531e7ab11df0fbe57dcaf39896d2617f" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#eq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;#eq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;クエリを表すコード。これは主に、シリアル化された形式のクエリで重要です。</target>
        </trans-unit>
        <trans-unit id="2e09148fead05ae5e4c4acd6942f9b8d3553e934" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#geq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query.</source>
          <target state="translated">&lt;a href=&quot;#geq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;クエリを表すコード。</target>
        </trans-unit>
        <trans-unit id="0f02aa79f6bc2b0698074f7c981c7447533ebf61" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#geq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;#geq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;クエリを表すコード。これは主に、シリアル化された形式のクエリで重要です。</target>
        </trans-unit>
        <trans-unit id="65639dae217f0171d1cbc9fcc085e8381bb991fa" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#gt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query.</source>
          <target state="translated">&lt;a href=&quot;#gt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;クエリを表すコード。</target>
        </trans-unit>
        <trans-unit id="72e4a41d5f53410fcee634c5b960892e2ab132ba" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#gt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;#gt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;クエリを表すコード。これは主に、シリアル化された形式のクエリで重要です。</target>
        </trans-unit>
        <trans-unit id="356bf4bc91720230a8de12a728316e7e4afe957f" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#leq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query.</source>
          <target state="translated">&lt;a href=&quot;#leq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;クエリを表すコード。</target>
        </trans-unit>
        <trans-unit id="b4d193635627eb8b0d32271d8266d898212ae087" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#leq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;#leq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;クエリを表すコード。これは主に、シリアル化された形式のクエリで重要です。</target>
        </trans-unit>
        <trans-unit id="4772932c32caf465517bbb17560ee1a5df935a55" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#lt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query.</source>
          <target state="translated">&lt;a href=&quot;#lt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;クエリを表すコード。</target>
        </trans-unit>
        <trans-unit id="1a14a97eef7fd8e0b40bbcd0a0f0e9978da41c9d" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#lt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;#lt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;クエリを表すコード。これは主に、シリアル化された形式のクエリで重要です。</target>
        </trans-unit>
        <trans-unit id="d4d1d20b7db8d473db7b9c0173c7ed1be02118db" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#minus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">&lt;a href=&quot;#minus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;式を表すコード。</target>
        </trans-unit>
        <trans-unit id="9d06f858e5f7e75827ccceb5504a9a693be878f3" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#minus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;#minus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;式を表すコード。これは主に、シリアル化された形式のクエリで重要です。</target>
        </trans-unit>
        <trans-unit id="c2592553116110b83871597faf2ef3d219afb57c" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#plus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">&lt;a href=&quot;#plus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;式を表すコード。</target>
        </trans-unit>
        <trans-unit id="6f3c8ffe6b209dc3c393905c377cd0bd4455b398" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#plus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;#plus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;式を表すコード。これは主に、シリアル化された形式のクエリで重要です。</target>
        </trans-unit>
        <trans-unit id="28091a6029c4893f031676693a7b37de5ae873b8" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#times(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">&lt;a href=&quot;#times(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;式を表すコード。</target>
        </trans-unit>
        <trans-unit id="16064b74275b2ada36b278bd9880d50992e31d6c" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#times(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;#times(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;式を表すコード。これは主に、シリアル化された形式のクエリで重要です。</target>
        </trans-unit>
        <trans-unit id="a3167f8e6fb50dd28fb24a3c88ebe100fe20efca" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#div-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#div-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;式を表すコード。これは主に、シリアル化された形式のクエリにとって重要です。</target>
        </trans-unit>
        <trans-unit id="7bb36ba56666bf2d309a7d849a64f0feb91a1c90" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#eq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#eq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;クエリを表すコード。これは主に、シリアル化された形式のクエリにとって重要です。</target>
        </trans-unit>
        <trans-unit id="e1f3063b18e6a5262c8d2ca620f2e501fed8e478" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#geq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#geq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;クエリを表すコード。これは主に、シリアル化された形式のクエリにとって重要です。</target>
        </trans-unit>
        <trans-unit id="76157a29212309c8696c9440a7608cee01f04524" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#gt-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#gt-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;クエリを表すコード。これは主に、シリアル化された形式のクエリにとって重要です。</target>
        </trans-unit>
        <trans-unit id="aaf590563a128b508138fdcf398112e1e233a859" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#leq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#leq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;クエリを表すコード。これは主に、シリアル化された形式のクエリにとって重要です。</target>
        </trans-unit>
        <trans-unit id="b3e616c5883d2f276fc5ec2915c117e7e83e390d" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#lt-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#lt-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;クエリを表すコード。これは主に、シリアル化された形式のクエリにとって重要です。</target>
        </trans-unit>
        <trans-unit id="9f32472a91294d62e6f749d86f189b4cf1130071" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#minus-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#minus-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;式を表すコード。これは主に、シリアル化された形式のクエリにとって重要です。</target>
        </trans-unit>
        <trans-unit id="131ebaef4e8f0c0eada9e793b43e33f7c63c1497" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#plus-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#plus-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;式を表すコード。これは主に、シリアル化された形式のクエリにとって重要です。</target>
        </trans-unit>
        <trans-unit id="086389d031264f0909b42a38a4d40ccaa6ef304e" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#times-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">&lt;a href=&quot;query#times-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;式を表すコード。これは主に、シリアル化された形式のクエリにとって重要です。</target>
        </trans-unit>
        <trans-unit id="15959f314ff470e7f4e0c8ec74706e2bbe3e1b8a" translate="yes" xml:space="preserve">
          <source>A code representing the type of the underlying object, as defined above.</source>
          <target state="translated">上記で定義されているように、基礎となるオブジェクトの型を表すコード。</target>
        </trans-unit>
        <trans-unit id="9e046118fc615d90a21c6a38e709d405bcdb107b" translate="yes" xml:space="preserve">
          <source>A coder-result object describing the reason for termination</source>
          <target state="translated">終了理由を記述したコーダ結果オブジェクト</target>
        </trans-unit>
        <trans-unit id="1bc357c45dad65bdc1abef893fd379bb2a9a1253" translate="yes" xml:space="preserve">
          <source>A coder-result object, either &lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt;&lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;coderresult#OVERFLOW&quot;&gt;&lt;code&gt;CoderResult.OVERFLOW&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">コーダー結果オブジェクト、&lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt; &lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;coderresult#OVERFLOW&quot;&gt; &lt;code&gt;CoderResult.OVERFLOW&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6cb44da210a8abf4eb01f4e0b39fcd31491af613" translate="yes" xml:space="preserve">
          <source>A collection adapter &lt;code&gt;collectArguments(mh, 0, coll)&lt;/code&gt; is equivalent to one which first &quot;folds&quot; the affected arguments, and then drops them, in separate steps as follows:</source>
          <target state="translated">コレクションアダプター &lt;code&gt;collectArguments(mh, 0, coll)&lt;/code&gt; は、影響を受ける引数を最初に「折りたたみ」、次に次のように個別の手順で削除するものと同等です。</target>
        </trans-unit>
        <trans-unit id="2d53b7ff736eba16937ab8f02218e094fde7b521" translate="yes" xml:space="preserve">
          <source>A collection designed for holding elements prior to processing.</source>
          <target state="translated">処理の前に要素を保持するために設計されたコレクション。</target>
        </trans-unit>
        <trans-unit id="68b3debc55e51d5e6557af0db3301e3ccdcb6461" translate="yes" xml:space="preserve">
          <source>A collection designed for holding elements prior to processing. Besides basic &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; operations, queues provide additional insertion, extraction, and inspection operations. Each of these methods exists in two forms: one throws an exception if the operation fails, the other returns a special value (either &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, depending on the operation). The latter form of the insert operation is designed specifically for use with capacity-restricted &lt;code&gt;Queue&lt;/code&gt; implementations; in most implementations, insert operations cannot fail.</source>
          <target state="translated">処理前に要素を保持するために設計されたコレクション。基本的な&lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;操作に加えて、キューは追加の挿入、抽出、および検査操作を提供します。これらの各メソッドは2つの形式で存在します。1つは操作が失敗した場合に例外をスローし、もう1つは特別な値（操作に応じて &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; ）を返します。後者の形式の挿入操作は、容量が制限された &lt;code&gt;Queue&lt;/code&gt; 実装で使用するために特別に設計されています。ほとんどの実装では、挿入操作が失敗することはありません。</target>
        </trans-unit>
        <trans-unit id="f59aab2d9547406cafa399bd2d77f092dd7a82e2" translate="yes" xml:space="preserve">
          <source>A collection of &lt;em&gt;well known&lt;/em&gt; or common attribute keys and methods to apply to an AttributeSet or MutableAttributeSet to get/set the properties in a typesafe manner.</source>
          <target state="translated">タイプセーフな方法でプロパティを取得/設定するためにAttributeSetまたはMutableAttributeSetに適用する、&lt;em&gt;よく知られた、&lt;/em&gt;または一般的な属性キーとメソッドのコレクション。</target>
        </trans-unit>
        <trans-unit id="461ccfb5dcfe04e9522249ee785de05875b3ef4a" translate="yes" xml:space="preserve">
          <source>A collection of attributes to associate with an element in a document.</source>
          <target state="translated">文書内の要素に関連付ける属性の集合。</target>
        </trans-unit>
        <trans-unit id="938b9f3e55564142422e27aa653a0da3ed879659" translate="yes" xml:space="preserve">
          <source>A collection of attributes to associate with an element in a document. Since these are typically used to associate character and paragraph styles with the element, operations for this are provided. Other customized attributes that get associated with the element will effectively be name-value pairs that live in a hierarchy and if a name (key) is not found locally, the request is forwarded to the parent. Commonly used attributes are separated out to facilitate alternative implementations that are more efficient.</source>
          <target state="translated">文書内の要素に関連付ける属性の集合。これらは通常、文字や段落のスタイルを要素に関連付けるために使われるので、そのための操作が提供されます。要素に関連付けられる他のカスタマイズされた属性は、階層内に存在する名前と値のペアとなり、名前(キー)がローカルに見つからない場合には、リクエストは親に転送されます。一般的に使用される属性は、より効率的な代替実装を容易にするために分離されています。</target>
        </trans-unit>
        <trans-unit id="320018eaa34b7b516123d4e578088cd6f97ff4ed" translate="yes" xml:space="preserve">
          <source>A collection of attributes, typically used to represent character and paragraph styles.</source>
          <target state="translated">文字や段落のスタイルを表すために一般的に使用される属性の集合。</target>
        </trans-unit>
        <trans-unit id="6c8e3eb74807024b9845a5446b8991354e3afd80" translate="yes" xml:space="preserve">
          <source>A collection of attributes, typically used to represent character and paragraph styles. This is an implementation of MutableAttributeSet that can be observed if desired. These styles will take advantage of immutability while the sets are small enough, and may be substantially more efficient than something like SimpleAttributeSet.</source>
          <target state="translated">属性の集合で、典型的には文字や段落のスタイルを表現するために使用されます。これは、必要に応じて観測可能な MutableAttributeSet の実装である。これらのスタイルは、セットが十分に小さい間に不変性を利用し、SimpleAttributeSetのようなものよりも実質的に効率が良いかもしれません。</target>
        </trans-unit>
        <trans-unit id="daad42586d8382773f61a80ac9d8a9a960bc9ed2" translate="yes" xml:space="preserve">
          <source>A collection of bindings of KeyStrokes to actions.</source>
          <target state="translated">KeyStrokes のアクションへのバインディングのコレクション。</target>
        </trans-unit>
        <trans-unit id="214488a70119ea5c739cf23236a2ecb22add7f67" translate="yes" xml:space="preserve">
          <source>A collection of bindings of KeyStrokes to actions. The bindings are basically name-value pairs that potentially resolve in a hierarchy.</source>
          <target state="translated">アクションへのKeyStrokesのバインディングのコレクション。バインディングは基本的に名前と値のペアで、潜在的には階層内で解決される可能性があります。</target>
        </trans-unit>
        <trans-unit id="bd0c8e2a8c90cddd8d3a20af3894414e16b21b63" translate="yes" xml:space="preserve">
          <source>A collection of constants generally used for positioning and orienting components on the screen.</source>
          <target state="translated">画面上でのコンポーネントの位置決めや方向付けに一般的に使用される定数の集まりです。</target>
        </trans-unit>
        <trans-unit id="ad2b8f0ed4118ca4e414b433ca3f2198d41ed52f" translate="yes" xml:space="preserve">
          <source>A collection of methods to deal with various text related activities.</source>
          <target state="translated">テキストに関連した様々な活動に対応する方法をまとめたもの。</target>
        </trans-unit>
        <trans-unit id="819f9a66ec486a6661a3a43fb152349b79c11a6d" translate="yes" xml:space="preserve">
          <source>A collection of pixels is represented as a Raster, which consists of a DataBuffer and a SampleModel. The SampleModel allows access to samples in the DataBuffer and may provide low-level information that a programmer can use to directly manipulate samples and pixels in the DataBuffer.</source>
          <target state="translated">ピクセルのコレクションは Raster として表現され、DataBuffer と SampleModel から構成されます。SampleModel は DataBuffer 内のサンプルへのアクセスを可能にし、プログラマーが DataBuffer 内のサンプルやピクセルを直接操作するために使用できる低レベルの情報を提供します。</target>
        </trans-unit>
        <trans-unit id="7637646e14f7755f8e9aeb36fd802da41f8fb558" translate="yes" xml:space="preserve">
          <source>A collection of unique attributes.</source>
          <target state="translated">ユニークな属性の集合体。</target>
        </trans-unit>
        <trans-unit id="dcf32be1ae22a40a3b351bd2ff31dffecf4e02e6" translate="yes" xml:space="preserve">
          <source>A collection of unique attributes. This is a read-only, immutable interface. An attribute is basically a key and a value assigned to the key. The collection may represent something like a style run, a logical style, etc. These are generally used to describe features that will contribute to some graphical representation such as a font. The set of possible keys is unbounded and can be anything. Typically View implementations will respond to attribute definitions and render something to represent the attributes.</source>
          <target state="translated">固有の属性のコレクション。読み取り専用で、不変のインターフェイスです。属性は基本的にはキーとそれに割り当てられた値です。コレクションは、スタイルランや論理スタイルなどのようなものを表すことができます。これらは一般的に、フォントのようなグラフィカルな表現に貢献する機能を記述するために使用されます。可能なキーのセットには制限はなく、何でも構いません。通常、ビューの実装は属性の定義に応答し、属性を表現するために何かをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="d056f201a492fbd928cfc64c39c7c8c570d12dc7" translate="yes" xml:space="preserve">
          <source>A collection of utility methods for Swing.</source>
          <target state="translated">Swingのユーティリティーメソッド集です。</target>
        </trans-unit>
        <trans-unit id="35eecf8b6bf9de4c11825dba857014a73dae84d7" translate="yes" xml:space="preserve">
          <source>A collection that contains no duplicate elements.</source>
          <target state="translated">重複する要素を含まないコレクション。</target>
        </trans-unit>
        <trans-unit id="d9305b926296adf001ad4ca75d6bb83b0e0e24fd" translate="yes" xml:space="preserve">
          <source>A collection that contains no duplicate elements. More formally, sets contain no pair of elements &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; such that &lt;code&gt;e1.equals(e2)&lt;/code&gt;, and at most one null element. As implied by its name, this interface models the mathematical</source>
          <target state="translated">重複する要素を含まないコレクション。より正式には、セットには &lt;code&gt;e1.equals(e2)&lt;/code&gt; のような要素 &lt;code&gt;e1&lt;/code&gt; と &lt;code&gt;e2&lt;/code&gt; のペアが含まれず、最大で1つのnull要素が含まれます。その名前が示すように、このインターフェースは数学的な</target>
        </trans-unit>
        <trans-unit id="e30d7f9b91d5a7ffab48faee759b58d4ae7bc7c2" translate="yes" xml:space="preserve">
          <source>A colon</source>
          <target state="translated">大腸</target>
        </trans-unit>
        <trans-unit id="a5774fa8d9c069418206ed483e2ca2f3cf35a52d" translate="yes" xml:space="preserve">
          <source>A colon (&lt;code&gt;:&lt;/code&gt;).</source>
          <target state="translated">コロン（ &lt;code&gt;:&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f3014f21a6bc8bc6dcb869994f59c9558c53b7eb" translate="yes" xml:space="preserve">
          <source>A comma</source>
          <target state="translated">コンマ</target>
        </trans-unit>
        <trans-unit id="58bed6c2bf813dbd5b59b07d5f4ba3ec11ec7f9e" translate="yes" xml:space="preserve">
          <source>A comma-separated list of &lt;code&gt;.jar&lt;/code&gt; file names.</source>
          <target state="translated">&lt;code&gt;.jar&lt;/code&gt; ファイル名のコンマ区切りリスト。</target>
        </trans-unit>
        <trans-unit id="3e15ed690ab5b10b6bbfffdf6ea9f15a49f6225b" translate="yes" xml:space="preserve">
          <source>A command APDU following the structure defined in ISO/IEC 7816-4.</source>
          <target state="translated">ISO/IEC 7816-4 で定義された構造に従ったコマンド APDU。</target>
        </trans-unit>
        <trans-unit id="681b75f4208064da9a591ffc6a26dbde63b01fc6" translate="yes" xml:space="preserve">
          <source>A command APDU following the structure defined in ISO/IEC 7816-4. It consists of a four byte header and a conditional body of variable length. This class does not attempt to verify that the APDU encodes a semantically valid command.</source>
          <target state="translated">ISO/IEC 7816-4 で定義された構造に従ったコマンド APDU。4 バイトのヘッダと可変長の条件付きボディから構成される。このクラスは、APDU が意味的に有効なコマンドを符号化しているかどうかの検証を試みない。</target>
        </trans-unit>
        <trans-unit id="c28100e80e883d1cd0313829f4706d03760bb13d" translate="yes" xml:space="preserve">
          <source>A common format of resource bundles is in &lt;a href=&quot;propertyresourcebundle&quot;&gt;.properties&lt;/a&gt; file format. Typically &lt;code&gt;.properties&lt;/code&gt; resource bundles are packaged in a JAR file. Resource bundle only JAR file can be readily deployed as an &lt;a href=&quot;../lang/module/modulefinder#automatic-modules&quot;&gt; automatic module&lt;/a&gt;. For example, if the JAR file contains the entry &quot;&lt;code&gt;p/q/Foo_ja.properties&lt;/code&gt;&quot; and no &lt;code&gt;.class&lt;/code&gt; entry, when resolved and defined as an automatic module, no package is derived for this module. This allows resource bundles in &lt;code&gt;.properties&lt;/code&gt; format packaged in one or more JAR files that may contain entries in the same directory and can be resolved successfully as automatic modules.</source>
          <target state="translated">リソースバンドルの一般的な形式は、&lt;a href=&quot;propertyresourcebundle&quot;&gt;.properties&lt;/a&gt;ファイル形式です。通常、 &lt;code&gt;.properties&lt;/code&gt; リソースバンドルはJARファイルにパッケージ化されています。リソースバンドルのみのJARファイルは、&lt;a href=&quot;../lang/module/modulefinder#automatic-modules&quot;&gt;自動モジュール&lt;/a&gt;として簡単にデプロイできます。たとえば、JARファイルにエントリ「 &lt;code&gt;p/q/Foo_ja.properties&lt;/code&gt; 」が含まれ、 &lt;code&gt;.class&lt;/code&gt; エントリが含まれていない場合、解決されて自動モジュールとして定義されると、このモジュールのパッケージは派生しません。これにより、同じディレクトリにエントリが含まれている可能性があり、自動モジュールとして正常に解決できる1つ以上のJARファイルにパッケージ化された &lt;code&gt;.properties&lt;/code&gt; 形式のリソースバンドルが可能になります。</target>
        </trans-unit>
        <trans-unit id="69b0d2636d902fad23aed7fa5d62125f0203e8ab" translate="yes" xml:space="preserve">
          <source>A common interface for all entities that declare type variables.</source>
          <target state="translated">型変数を宣言するすべてのエンティティのための共通のインターフェイス。</target>
        </trans-unit>
        <trans-unit id="c0a8585c7a0901c1332aef262b2493ef29edd91b" translate="yes" xml:space="preserve">
          <source>A common operation to want to do is to set the background color that will be used if the main viewport view is smaller than the viewport, or is not opaque. This can be accomplished by setting the background color of the viewport, via &lt;code&gt;scrollPane.getViewport().setBackground()&lt;/code&gt;. The reason for setting the color of the viewport and not the scrollpane is that by default &lt;code&gt;JViewport&lt;/code&gt; is opaque which, among other things, means it will completely fill in its background using its background color. Therefore when &lt;code&gt;JScrollPane&lt;/code&gt; draws its background the viewport will usually draw over it.</source>
          <target state="translated">実行する一般的な操作は、メインビューポートビューがビューポートよりも小さい場合、または不透明でない場合に使用される背景色を設定することです。これは、 &lt;code&gt;scrollPane.getViewport().setBackground()&lt;/code&gt; 介してビューポートの背景色を設定することで実現できます。スクロールペインではなくビューポートの色を設定する理由は、デフォルトで &lt;code&gt;JViewport&lt;/code&gt; が不透明であるためです。つまり、特に、背景色を使用して背景を完全に塗りつぶします。したがって、 &lt;code&gt;JScrollPane&lt;/code&gt; が背景を描画するとき、ビューポートは通常その上に描画します。</target>
        </trans-unit>
        <trans-unit id="473969e4a73feeded3816bdf23272e57822f32d1" translate="yes" xml:space="preserve">
          <source>A common strategy for creating more complex types of documents is to have the EditorKit implementation return a factory. Since the EditorKit ties all of the pieces necessary to maintain a type of document, the factory is typically an important part of that and should be produced by the EditorKit implementation.</source>
          <target state="translated">より複雑なタイプのドキュメントを作成するための一般的な戦略は、EditorKit の実装がファクトリーを返すことです。EditorKitはドキュメントの型を維持するために必要なすべての要素を結びつけるので、ファクトリーは典型的にはその重要な部分であり、EditorKitの実装によって生成されるべきです。</target>
        </trans-unit>
        <trans-unit id="f9828806665693a1722cf24a45e24e2a1d43bf9f" translate="yes" xml:space="preserve">
          <source>A common superclass for exceptions specific to different kinds of unknown entities allows a single catch block to easily provide uniform handling of those related conditions.</source>
          <target state="translated">異なる種類の未知のエンティティに特有の例外のための共通のスーパークラスは、単一のキャッチブロックで、それらの関連する条件の統一された処理を容易に提供することを可能にします。</target>
        </trans-unit>
        <trans-unit id="7b03fd8af749e1a3ce6657ea29c356afa369685b" translate="yes" xml:space="preserve">
          <source>A common superclass for those exceptions allows a single catch block to have code handling them uniformly.</source>
          <target state="translated">これらの例外のための共通のスーパークラスを使用することで、単一のキャッチブロックで統一的に例外を処理するコードを持つことができます。</target>
        </trans-unit>
        <trans-unit id="149122bbabc5bd28e11163d620d20637d4bfd2af" translate="yes" xml:space="preserve">
          <source>A common use for this attribute will be applications which want to redirect output to a local disk file : eg.&quot;file:out.prn&quot;. Note that proper construction of &quot;file:&quot; scheme &lt;code&gt;URI&lt;/code&gt; instances should be performed using the &lt;code&gt;toURI()&lt;/code&gt; method of class &lt;a href=&quot;../../../../../java.base/java/io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;. See the documentation on that class for more information.</source>
          <target state="translated">この属性の一般的な使用法は、出力をローカルディスクファイル（例： &quot;file：out.prn&quot;）にリダイレクトするアプリケーションです。「file：」スキーム &lt;code&gt;URI&lt;/code&gt; インスタンスの適切な構築は、クラス&lt;a href=&quot;../../../../../java.base/java/io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;toURI()&lt;/code&gt; メソッドを使用して実行する必要があることに注意してください。詳細については、そのクラスのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="5a2eb4eb16e9b666e1d02dd5dca1670d20c9c93d" translate="yes" xml:space="preserve">
          <source>A common use for this attribute will be applications which want to redirect output to a local disk file : eg.&quot;file:out.prn&quot;. Note that proper construction of &quot;file:&quot; scheme URI instances should be performed using the &lt;code&gt;toURI()&lt;/code&gt; method of class &lt;a href=&quot;../../../../java/io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;. See the documentation on that class for more information.</source>
          <target state="translated">この属性の一般的な用途は、ローカルディスクファイルに出力をリダイレクトする必要があるアプリケーションです（例： &quot;file：out.prn&quot;）。「file：」スキームURIインスタンスの適切な構築は、クラス&lt;a href=&quot;../../../../java/io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;toURI()&lt;/code&gt; メソッドを使用して実行する必要があることに注意してください。詳細については、そのクラスのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="b812460359ac28696c5c53d6194bcc0b4e3e6d4b" translate="yes" xml:space="preserve">
          <source>A comparator that imposes the reverse of the</source>
          <target state="translated">の逆を課すコンパレータ。</target>
        </trans-unit>
        <trans-unit id="b1069285dcf5aa4a511fd41ed7ca14c6e2a346c9" translate="yes" xml:space="preserve">
          <source>A comparator that imposes the reverse ordering of the specified comparator.</source>
          <target state="translated">指定されたコンパレータの逆順を課すコンパレータ。</target>
        </trans-unit>
        <trans-unit id="88cbfaab6cde9461570cfd17bac039d6f107d7c6" translate="yes" xml:space="preserve">
          <source>A comparison function, which imposes a</source>
          <target state="translated">を課す比較関数。</target>
        </trans-unit>
        <trans-unit id="8611f588b20f634a35201b6faa98a5b6fa04b35e" translate="yes" xml:space="preserve">
          <source>A compiled representation of a regular expression.</source>
          <target state="translated">正規表現のコンパイル済み表現。</target>
        </trans-unit>
        <trans-unit id="ecd305d3625122d943cbe093e927d37229d6ccf1" translate="yes" xml:space="preserve">
          <source>A compiler tool has an associated standard file manager, which is the file manager that is native to the tool (or built-in). The standard file manager can be obtained by calling &lt;a href=&quot;#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt;getStandardFileManager&lt;/a&gt;.</source>
          <target state="translated">コンパイラツールには、ツールにネイティブな（または組み込みの）ファイルマネージャである標準のファイルマネージャが関連付けられています。標準のファイルマネージャーは、&lt;a href=&quot;#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt;getStandardFileManager&lt;/a&gt;を呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="507982c243d52965e48c7b0732508c6ac665735a" translate="yes" xml:space="preserve">
          <source>A compiler tool has an associated standard file manager, which is the file manager that is native to the tool (or built-in). The standard file manager can be obtained by calling &lt;a href=&quot;javacompiler#getStandardFileManager-javax.tools.DiagnosticListener-java.util.Locale-java.nio.charset.Charset-&quot;&gt;getStandardFileManager&lt;/a&gt;.</source>
          <target state="translated">コンパイラツールには、関連する標準ファイルマネージャがあります。これは、ツール（または組み込み）にネイティブのファイルマネージャです。標準ファイルマネージャは、&lt;a href=&quot;javacompiler#getStandardFileManager-javax.tools.DiagnosticListener-java.util.Locale-java.nio.charset.Charset-&quot;&gt;getStandardFileManager&lt;/a&gt;を呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="317c0a69ba9309f170888d8994808d0c8f23b104" translate="yes" xml:space="preserve">
          <source>A compiler tool must function with any file manager as long as any additional requirements as detailed in the methods below are met. If no file manager is provided, the compiler tool will use a standard file manager such as the one returned by &lt;a href=&quot;#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt;getStandardFileManager&lt;/a&gt;.</source>
          <target state="translated">コンパイラツールは、以下の方法で詳しく説明されている追加の要件が満たされている限り、任意のファイルマネージャで機能する必要があります。ファイルマネージャが提供されていない場合、コンパイラツールは&lt;a href=&quot;#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt;getStandardFileManager&lt;/a&gt;によって返されるような標準のファイルマネージャを使用します。</target>
        </trans-unit>
        <trans-unit id="a22de5f7495f42b8eb96d0161f9be3e98aab30a9" translate="yes" xml:space="preserve">
          <source>A compiler tool must function with any file manager as long as any additional requirements as detailed in the methods below are met. If no file manager is provided, the compiler tool will use a standard file manager such as the one returned by &lt;a href=&quot;javacompiler#getStandardFileManager-javax.tools.DiagnosticListener-java.util.Locale-java.nio.charset.Charset-&quot;&gt;getStandardFileManager&lt;/a&gt;.</source>
          <target state="translated">コンパイラツールは、以下の方法で詳述されている追加の要件が満たされている限り、任意のファイルマネージャで機能する必要があります。ファイルマネージャが提供されていない場合、コンパイラツールは、&lt;a href=&quot;javacompiler#getStandardFileManager-javax.tools.DiagnosticListener-java.util.Locale-java.nio.charset.Charset-&quot;&gt;getStandardFileManager&lt;/a&gt;によって返されるものなどの標準ファイルマネージャを使用します。</target>
        </trans-unit>
        <trans-unit id="c8340a51d99720fe0c029bc676ff25eb592e4528" translate="yes" xml:space="preserve">
          <source>A compiler-specific value, or &lt;code&gt;null&lt;/code&gt; if no compiler is available</source>
          <target state="translated">コンパイラ固有の値、または使用可能なコンパイラがない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c013238a0fecb5ce789627bf17d6e1e533e68de4" translate="yes" xml:space="preserve">
          <source>A compliant &lt;code&gt;SyncProvider&lt;/code&gt; implementation that is fully pluggable into the &lt;code&gt;SyncFactory&lt;/code&gt;&lt;b&gt;must&lt;/b&gt; extend and implement all abstract methods in the &lt;a href=&quot;syncprovider&quot;&gt;&lt;code&gt;SyncProvider&lt;/code&gt;&lt;/a&gt; class. In addition, an implementation &lt;b&gt;must&lt;/b&gt; determine the grade, locking and updatable view capabilities defined in the &lt;code&gt;SyncProvider&lt;/code&gt; class definition. One or more of the &lt;code&gt;SyncProvider&lt;/code&gt; description criteria &lt;b&gt;must&lt;/b&gt; be supported. It is expected that vendor implementations will offer a range of grade, locking, and updatable view capabilities.</source>
          <target state="translated">&lt;code&gt;SyncFactory&lt;/code&gt; に完全にプラグイン可能な準拠した &lt;code&gt;SyncProvider&lt;/code&gt; 実装は、&lt;a href=&quot;syncprovider&quot;&gt; &lt;code&gt;SyncProvider&lt;/code&gt; &lt;/a&gt;クラスのすべての抽象メソッドを拡張および実装する&lt;b&gt;必要&lt;/b&gt;があります。さらに、実装では、 &lt;code&gt;SyncProvider&lt;/code&gt; クラス定義で定義されているグレード、ロック、および更新可能なビュー機能を決定する&lt;b&gt;必要があり&lt;/b&gt;ます。 1つ以上の &lt;code&gt;SyncProvider&lt;/code&gt; 記述基準をサポートする&lt;b&gt;必要&lt;/b&gt;が&lt;b&gt;あり&lt;/b&gt;ます。ベンダーの実装は、さまざまなグレード、ロック、および更新可能なビュー機能を提供することが期待されています。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="ef095778aeb29d0bee970385d5cf9a54e63ddb71" translate="yes" xml:space="preserve">
          <source>A compliant JDBC &lt;code&gt;RowSet&lt;/code&gt; implementation &lt;b&gt;must&lt;/b&gt; implement one or more standard interfaces specified in this package and &lt;b&gt;may&lt;/b&gt; extend the &lt;a href=&quot;baserowset&quot;&gt;&lt;code&gt;BaseRowSet&lt;/code&gt;&lt;/a&gt; abstract class. For example, a &lt;code&gt;CachedRowSet&lt;/code&gt; implementation must implement the &lt;code&gt;CachedRowSet&lt;/code&gt; interface and extend the &lt;code&gt;BaseRowSet&lt;/code&gt; abstract class. The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the standard architecture on which all &lt;code&gt;RowSet&lt;/code&gt; implementations should be built, regardless of whether the &lt;code&gt;RowSet&lt;/code&gt; objects exist in a connected or disconnected environment. The &lt;code&gt;BaseRowSet&lt;/code&gt; abstract class provides any &lt;code&gt;RowSet&lt;/code&gt; implementation with its base functionality, including property manipulation and event notification that is fully compliant with &lt;a href=&quot;http://java.sun.com/products/javabeans&quot;&gt;JavaBeans&lt;/a&gt; component requirements. As an example, all implementations provided in the reference implementations (contained in the &lt;code&gt;com.sun.rowset&lt;/code&gt; package) use the &lt;code&gt;BaseRowSet&lt;/code&gt; class as a basis for their implementations.</source>
          <target state="translated">準拠する &lt;code&gt;RowSet&lt;/code&gt; 実装&lt;b&gt;は&lt;/b&gt;、このパッケージで指定された1つ以上の標準インターフェースを実装する&lt;b&gt;必要があり&lt;/b&gt;、&lt;a href=&quot;baserowset&quot;&gt; &lt;code&gt;BaseRowSet&lt;/code&gt; &lt;/a&gt;抽象クラスを拡張&lt;b&gt;でき&lt;/b&gt;ます。たとえば、 &lt;code&gt;CachedRowSet&lt;/code&gt; 実装は、 &lt;code&gt;CachedRowSet&lt;/code&gt; インターフェイスを実装し、 &lt;code&gt;BaseRowSet&lt;/code&gt; 抽象クラスを拡張する必要があります。 &lt;code&gt;BaseRowSet&lt;/code&gt; のクラスは、すべてその上に標準アーキテクチャ提供 &lt;code&gt;RowSet&lt;/code&gt; の実装にかかわらずかどうか、内蔵されなければならない &lt;code&gt;RowSet&lt;/code&gt; オブジェクトが接続または切断環境に存在します。 &lt;code&gt;BaseRowSet&lt;/code&gt; 抽象クラスは、いずれかを提供する &lt;code&gt;RowSet&lt;/code&gt; &lt;a href=&quot;http://java.sun.com/products/javabeans&quot;&gt;JavaBeans&lt;/a&gt;コンポーネント要件に完全に準拠するプロパティ操作やイベント通知など、基本機能を備えた実装。例として、リファレンス実装（ &lt;code&gt;com.sun.rowset&lt;/code&gt; パッケージに含まれている）で提供されるすべての実装は、実装の基礎として &lt;code&gt;BaseRowSet&lt;/code&gt; クラスを使用します。</target>
        </trans-unit>
        <trans-unit id="fd54ac5c73834653a330eeea3f04f9607f95a18f" translate="yes" xml:space="preserve">
          <source>A component can be moved to the top or bottom position within its layer by calling &lt;code&gt;moveToFront&lt;/code&gt; or &lt;code&gt;moveToBack&lt;/code&gt;.</source>
          <target state="translated">コンポーネントは、 &lt;code&gt;moveToFront&lt;/code&gt; または &lt;code&gt;moveToBack&lt;/code&gt; を呼び出すことにより、レイヤー内の一番上または一番下の位置に移動できます。</target>
        </trans-unit>
        <trans-unit id="ce680a6c1c38459061c4c3b21c2f89763dc41c31" translate="yes" xml:space="preserve">
          <source>A component gained the focus.</source>
          <target state="translated">コンポーネントが注目を集めました。</target>
        </trans-unit>
        <trans-unit id="09dfef83c5863bccfcebb0659b7993032c336b08" translate="yes" xml:space="preserve">
          <source>A component is made displayable either when it is added to a displayable containment hierarchy or when its containment hierarchy is made displayable. A containment hierarchy is made displayable when its ancestor window is either packed or made visible.</source>
          <target state="translated">コンポーネントは、表示可能な格納容器階層に追加されたとき、またはその格納容器階層が表示可能になったときに表示可能になります。封じ込め階層は、その祖先のウィンドウがパックされたとき、または可視化されたときに表示可能な状態になります。</target>
        </trans-unit>
        <trans-unit id="b2cebf45dce5e66f26a7b4a8b67921e722feb059" translate="yes" xml:space="preserve">
          <source>A component is made undisplayable either when it is removed from a displayable containment hierarchy or when its containment hierarchy is made undisplayable. A containment hierarchy is made undisplayable when its ancestor window is disposed.</source>
          <target state="translated">コンポーネントは、表示可能な格納容器階層から削除されたとき、またはその格納容器階層が表示不可能になったときに、表示不可能になります。封じ込め階層は、その祖先ウィンドウが破棄されたときに非表示になります。</target>
        </trans-unit>
        <trans-unit id="2c7dfbc065f1196e41f2a84cc03c919a7d0aba07" translate="yes" xml:space="preserve">
          <source>A component listener to track show/hide/resize events and convert them to PropertyChange events.</source>
          <target state="translated">表示/非表示/サイズ変更イベントを追跡し、PropertyChangeイベントに変換するためのコンポーネントリスナーです。</target>
        </trans-unit>
        <trans-unit id="a1e4aea39b32a55132a7191c95ec3d6490806639" translate="yes" xml:space="preserve">
          <source>A component lost the focus.</source>
          <target state="translated">コンポーネントが焦点を失った。</target>
        </trans-unit>
        <trans-unit id="679d259c58ee38716564f2caf4e42a4aa66a6aa4" translate="yes" xml:space="preserve">
          <source>A component may be left undefined by passing &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; を渡すことにより、コンポーネントを未定義のままにすることができます。</target>
        </trans-unit>
        <trans-unit id="020fba51ee1091155e2da3e20554783a558aaf13" translate="yes" xml:space="preserve">
          <source>A component that acts as both a Subscriber and Publisher.</source>
          <target state="translated">サブスクライバとパブリッシャの両方の役割を果たすコンポーネント。</target>
        </trans-unit>
        <trans-unit id="15ceae254918b0ef6d94940a0ec178f6e5336260" translate="yes" xml:space="preserve">
          <source>A component that combines a button or editable field and a drop-down list.</source>
          <target state="translated">ボタンや編集可能なフィールドとドロップダウンリストを組み合わせたコンポーネント。</target>
        </trans-unit>
        <trans-unit id="5faef24a6fc07543039a7b12cf55022c812cece0" translate="yes" xml:space="preserve">
          <source>A component that combines a button or editable field and a drop-down list. The user can select a value from the drop-down list, which appears at the user's request. If you make the combo box editable, then the combo box includes an editable field into which the user can type a value.</source>
          <target state="translated">ボタンまたは編集可能なフィールドとドロップダウンリストを組み合わせたコンポーネント。ユーザーはドロップダウン リストから値を選択でき、ユーザーの要求に応じて表示されます。コンボボックスを編集可能にした場合、コンボボックスには、ユーザーが値を入力できる編集可能なフィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="704f9861bf93bff7d6f2a884c9f6fcda58ad6a1a" translate="yes" xml:space="preserve">
          <source>A component that displays a list of objects and allows the user to select one or more items.</source>
          <target state="translated">オブジェクトのリストを表示し、ユーザーが1つ以上の項目を選択できるようにするコンポーネント。</target>
        </trans-unit>
        <trans-unit id="0eb8518159403706b6e12f50a429cbdbbe4b48bc" translate="yes" xml:space="preserve">
          <source>A component that displays a list of objects and allows the user to select one or more items. A separate model, &lt;code&gt;ListModel&lt;/code&gt;, maintains the contents of the list.</source>
          <target state="translated">オブジェクトのリストを表示し、ユーザーが1つ以上のアイテムを選択できるようにするコンポーネント。別のモデルである &lt;code&gt;ListModel&lt;/code&gt; は、リストの内容を維持します。</target>
        </trans-unit>
        <trans-unit id="a3e56e4baebcff6472e0d38834430c3e1a5ed1d0" translate="yes" xml:space="preserve">
          <source>A component that lets the user graphically select a value by sliding a knob within a bounded interval.</source>
          <target state="translated">指定された間隔内でノブをスライドさせることで、グラフィカルに値を選択できるようにするコンポーネント。</target>
        </trans-unit>
        <trans-unit id="4a97e366ad870b7ed4064276a5470ba5b5ba0526" translate="yes" xml:space="preserve">
          <source>A component that lets the user graphically select a value by sliding a knob within a bounded interval. The knob is always positioned at the points that match integer values within the specified interval.</source>
          <target state="translated">指定された間隔内でノブをスライドさせることで、グラフィカルに値を選択できるようにするコンポーネントです。ノブは常に指定された間隔内の整数値と一致するポイントに配置されます。</target>
        </trans-unit>
        <trans-unit id="0dc2d5a67102bfcb565b400826769c8ed453c1ba" translate="yes" xml:space="preserve">
          <source>A component that lets the user switch between a group of components by clicking on a tab with a given title and/or icon.</source>
          <target state="translated">与えられたタイトルやアイコンのあるタブをクリックすることで、ユーザーがコンポーネントのグループを切り替えられるようにするコンポーネント。</target>
        </trans-unit>
        <trans-unit id="a543cd02bd31e7234610b239b52d4ebf49372b46" translate="yes" xml:space="preserve">
          <source>A component that lets the user switch between a group of components by clicking on a tab with a given title and/or icon. For examples and information on using tabbed panes see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tabbedpane.html&quot;&gt;How to Use Tabbed Panes&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">特定のタイトルやアイコンが付いたタブをクリックすることで、ユーザーがコンポーネントのグループを切り替えることができるコンポーネント。タブ付きペインの使用例と情報については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションにあるタブ付きペインの&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tabbedpane.html&quot;&gt;使用方法を&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ca411fd4076f10e631b20e5262e62782a1730dca" translate="yes" xml:space="preserve">
          <source>A component that visually displays the progress of some task.</source>
          <target state="translated">何らかのタスクの進捗状況を視覚的に表示するコンポーネント。</target>
        </trans-unit>
        <trans-unit id="490c085d9d786efb4c130b5466ea2b4c8247ff15" translate="yes" xml:space="preserve">
          <source>A component that visually displays the progress of some task. As the task progresses towards completion, the progress bar displays the task's percentage of completion. This percentage is typically represented visually by a rectangle which starts out empty and gradually becomes filled in as the task progresses. In addition, the progress bar can display a textual representation of this percentage.</source>
          <target state="translated">あるタスクの進捗状況を視覚的に表示するコンポーネント。タスクが完了に向かって進行すると、進捗バーにはタスクの完了率が表示されます。このパーセンテージは通常、最初は空の長方形で表示され、タスクが進むにつれて徐々に塗りつぶされていきます。さらに、プログレスバーには、このパーセンテージをテキストで表示することもできます。</target>
        </trans-unit>
        <trans-unit id="b481c61e6ab81c9981655232bcaa4eb8b0e7e43e" translate="yes" xml:space="preserve">
          <source>A component whose paint() method will render the specified value.</source>
          <target state="translated">paint()メソッドが指定した値をレンダリングするコンポーネント。</target>
        </trans-unit>
        <trans-unit id="6612f77e16c0f91da39443d81f8e28776739b289" translate="yes" xml:space="preserve">
          <source>A component's own internal selection mechanism (or caret for text components) should be used to track the drop location.</source>
          <target state="translated">ドロップ位置を追跡するには、コンポーネント独自の内部選択機構(テキストコンポーネントの場合はキャレット)を使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="910aea3bab537d73873ced3f63278e9b9ed9f3e5" translate="yes" xml:space="preserve">
          <source>A composite Border class used to compose two Border objects into a single border by nesting an inside Border object within the insets of an outside Border object.</source>
          <target state="translated">2つのボーダーオブジェクトを1つのボーダーに合成するために使用される複合ボーダークラス。</target>
        </trans-unit>
        <trans-unit id="fa5a35f7f4b3f674832802a41333821de4426d13" translate="yes" xml:space="preserve">
          <source>A composite Border class used to compose two Border objects into a single border by nesting an inside Border object within the insets of an outside Border object. For example, this class may be used to add blank margin space to a component with an existing decorative border:</source>
          <target state="translated">2つのボーダーオブジェクトを1つのボーダーに合成するために使用される複合ボーダークラスです。例えば、このクラスは、既存の装飾的なボーダーを持つコンポーネントに余白スペースを追加するために使用されます。</target>
        </trans-unit>
        <trans-unit id="c240d3ac3169c5fa449a090551b1533296f8d47e" translate="yes" xml:space="preserve">
          <source>A composite name consisting of the components at indexes in the range [0,posn).</source>
          <target state="translated">0,posn)の範囲内のインデックスの構成要素からなる合成名。</target>
        </trans-unit>
        <trans-unit id="e307b9d7fcecb7e46cc83b164a05b08703be2f60" translate="yes" xml:space="preserve">
          <source>A composite name consisting of the components at indexes in the range [posn,size()). If posn is equal to size(), an empty composite name is returned.</source>
          <target state="translated">posn,size())の範囲内のインデックスにある構成要素からなる合成名。posnがsize()と等しい場合は空の合成名が返されます。</target>
        </trans-unit>
        <trans-unit id="012ac5ae3a315f67bc8b90d54324f1996bc43f52" translate="yes" xml:space="preserve">
          <source>A compound border UI resource.</source>
          <target state="translated">複合ボーダーのUIリソース。</target>
        </trans-unit>
        <trans-unit id="388d169a4059ab43399d30021348063b4a944861" translate="yes" xml:space="preserve">
          <source>A compound name consisting of the components at indexes in the range [0,posn).</source>
          <target state="translated">0,posn)の範囲のインデックスにある成分で構成される複合名です。</target>
        </trans-unit>
        <trans-unit id="76c4e0dce25522531bae9b9e60264ef59857ae2b" translate="yes" xml:space="preserve">
          <source>A compound name consisting of the components at indexes in the range [posn,size()). If posn is equal to size(), an empty compound name is returned.</source>
          <target state="translated">posn,size())の範囲内のインデックスにある構成要素からなる複合名。posnがsize()と等しい場合は、空の複合名が返されます。</target>
        </trans-unit>
        <trans-unit id="870a4660763c1f34e013dffa68e06e176fa3b5fb" translate="yes" xml:space="preserve">
          <source>A compression quality setting of 0.0 is most generically interpreted as &quot;high compression is important,&quot; while a setting of 1.0 is most generically interpreted as &quot;high image quality is important.&quot;</source>
          <target state="translated">圧縮品質を0.0に設定すると「高圧縮が重要」と一般的に解釈され、1.0に設定すると「高画質が重要」と一般的に解釈されます。</target>
        </trans-unit>
        <trans-unit id="e55237d8b1c126bd419cb998c4d2143c21b0a60c" translate="yes" xml:space="preserve">
          <source>A computation to be performed with privileges enabled, that throws one or more checked exceptions.</source>
          <target state="translated">権限を有効にした状態で実行される計算で、1つ以上のチェック済み例外をスローします。</target>
        </trans-unit>
        <trans-unit id="df5aa60f9378ed72d43eb803f402550168f3ddfe" translate="yes" xml:space="preserve">
          <source>A computation to be performed with privileges enabled, that throws one or more checked exceptions. The computation is performed by invoking &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; on the &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; object. This interface is used only for computations that throw checked exceptions; computations that do not throw checked exceptions should use &lt;code&gt;PrivilegedAction&lt;/code&gt; instead.</source>
          <target state="translated">特権を有効にして実行される計算で、1つ以上のチェック済み例外をスローします。計算は、 &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; オブジェクトで &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; を呼び出すことによって実行されます。このインターフェイスは、チェックされた例外をスローする計算にのみ使用されます。チェック例外をスローしない計算では、代わりに &lt;code&gt;PrivilegedAction&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="53d6bfa858b3f3fb8deab95e04cbb70669ba6ea2" translate="yes" xml:space="preserve">
          <source>A computation to be performed with privileges enabled.</source>
          <target state="translated">特権を有効にした状態で実行される計算。</target>
        </trans-unit>
        <trans-unit id="a84d8847cd9be7eb09312d16b993c90bbee17967" translate="yes" xml:space="preserve">
          <source>A computation to be performed with privileges enabled. The computation is performed by invoking &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; on the &lt;code&gt;PrivilegedAction&lt;/code&gt; object. This interface is used only for computations that do not throw checked exceptions; computations that throw checked exceptions must use &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; instead.</source>
          <target state="translated">特権を有効にして実行される計算。この計算は、 &lt;code&gt;PrivilegedAction&lt;/code&gt; オブジェクトで &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; を呼び出すことによって実行されます。このインターフェイスは、チェックされた例外をスローしない計算にのみ使用されます。チェック例外をスローする計算では、代わりに &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="4962e8975e2684994a507f252d7cedb853ac1283" translate="yes" xml:space="preserve">
          <source>A concrete CountedCompleter class must define method &lt;a href=&quot;#compute()&quot;&gt;&lt;code&gt;compute()&lt;/code&gt;&lt;/a&gt;, that should in most cases (as illustrated below), invoke &lt;code&gt;tryComplete()&lt;/code&gt; once before returning. The class may also optionally override method &lt;a href=&quot;#onCompletion(java.util.concurrent.CountedCompleter)&quot;&gt;&lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt;&lt;/a&gt; to perform an action upon normal completion, and method &lt;a href=&quot;#onExceptionalCompletion(java.lang.Throwable,java.util.concurrent.CountedCompleter)&quot;&gt;&lt;code&gt;onExceptionalCompletion(Throwable, CountedCompleter)&lt;/code&gt;&lt;/a&gt; to perform an action upon any exception.</source>
          <target state="translated">具体的なCountedCompleterクラスはメソッド&lt;a href=&quot;#compute()&quot;&gt; &lt;code&gt;compute()&lt;/code&gt; を&lt;/a&gt;定義する必要があります。これは、ほとんどの場合（以下に示すように）、戻る前に &lt;code&gt;tryComplete()&lt;/code&gt; を1回呼び出す必要があります。このクラスは、オプションで、メソッド&lt;a href=&quot;#onCompletion(java.util.concurrent.CountedCompleter)&quot;&gt; &lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt; &lt;/a&gt;をオーバーライドして通常の完了時にアクションを実行し、メソッド&lt;a href=&quot;#onExceptionalCompletion(java.lang.Throwable,java.util.concurrent.CountedCompleter)&quot;&gt; &lt;code&gt;onExceptionalCompletion(Throwable, CountedCompleter)&lt;/code&gt; &lt;/a&gt;をオーバーライドして例外時にアクションを実行することもできます。</target>
        </trans-unit>
        <trans-unit id="592ff92d53f5fd5d1113ffb2481eaf8c68991cfb" translate="yes" xml:space="preserve">
          <source>A concrete CountedCompleter class must define method &lt;a href=&quot;countedcompleter#compute--&quot;&gt;&lt;code&gt;compute()&lt;/code&gt;&lt;/a&gt;, that should in most cases (as illustrated below), invoke &lt;code&gt;tryComplete()&lt;/code&gt; once before returning. The class may also optionally override method &lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt;&lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt;&lt;/a&gt; to perform an action upon normal completion, and method &lt;a href=&quot;countedcompleter#onExceptionalCompletion-java.lang.Throwable-java.util.concurrent.CountedCompleter-&quot;&gt;&lt;code&gt;onExceptionalCompletion(Throwable, CountedCompleter)&lt;/code&gt;&lt;/a&gt; to perform an action upon any exception.</source>
          <target state="translated">具体的なCountedCompleterクラスは、メソッド&lt;a href=&quot;countedcompleter#compute--&quot;&gt; &lt;code&gt;compute()&lt;/code&gt; を&lt;/a&gt;定義する必要があります。これは、ほとんどの場合（下図に示すように）、戻る前に &lt;code&gt;tryComplete()&lt;/code&gt; を 1回呼び出す必要があります。このクラスは、オプションで、メソッド&lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt; &lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt; &lt;/a&gt;をオーバーライドして、正常終了時にアクションを実行し、メソッド&lt;a href=&quot;countedcompleter#onExceptionalCompletion-java.lang.Throwable-java.util.concurrent.CountedCompleter-&quot;&gt; &lt;code&gt;onExceptionalCompletion(Throwable, CountedCompleter)&lt;/code&gt; &lt;/a&gt;をオーバーライドして、例外時にアクションを実行することもできます。</target>
        </trans-unit>
        <trans-unit id="4d75c025f877b02d00b1e105a4eccc88b0eaef34" translate="yes" xml:space="preserve">
          <source>A concrete channel class must also implement the &lt;a href=&quot;#implCloseChannel()&quot;&gt;&lt;code&gt;implCloseChannel&lt;/code&gt;&lt;/a&gt; method in such a way that if it is invoked while another thread is blocked in a native I/O operation upon the channel then that operation will immediately return, either by throwing an exception or by returning normally. If a thread is interrupted or the channel upon which it is blocked is asynchronously closed then the channel's &lt;a href=&quot;#end(boolean)&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method will throw the appropriate exception.</source>
          <target state="translated">具体的なチャネルクラスは、チャネルのネイティブI / O操作で別のスレッドがブロックされているときに呼び出された場合に、例外をスローするか通常どおりに戻ることによって、その操作がすぐに返されるように&lt;a href=&quot;#implCloseChannel()&quot;&gt; &lt;code&gt;implCloseChannel&lt;/code&gt; &lt;/a&gt;メソッドも実装する必要があります。 。スレッドが中断された場合、またはスレッドがブロックされたチャネルが非同期的に閉じられた場合、チャネルの&lt;a href=&quot;#end(boolean)&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt;メソッドは適切な例外をスローします。</target>
        </trans-unit>
        <trans-unit id="7c5d3b0a75ab72fca28782e0f37995ed37f00346" translate="yes" xml:space="preserve">
          <source>A concrete channel class must also implement the &lt;a href=&quot;abstractinterruptiblechannel#implCloseChannel--&quot;&gt;&lt;code&gt;implCloseChannel&lt;/code&gt;&lt;/a&gt; method in such a way that if it is invoked while another thread is blocked in a native I/O operation upon the channel then that operation will immediately return, either by throwing an exception or by returning normally. If a thread is interrupted or the channel upon which it is blocked is asynchronously closed then the channel's &lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method will throw the appropriate exception.</source>
          <target state="translated">具象チャネルクラスは、チャネルのネイティブI / O操作で別のスレッドがブロックされているときに呼び出された場合、例外をスローするか、通常どおりに戻ることによって、その操作がすぐに戻るように、&lt;a href=&quot;abstractinterruptiblechannel#implCloseChannel--&quot;&gt; &lt;code&gt;implCloseChannel&lt;/code&gt; &lt;/a&gt;メソッドも実装する必要があります。 。スレッドが中断された場合、またはスレッドがブロックされているチャネルが非同期に閉じられた場合、チャネルの&lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt;メソッドは適切な例外をスローします。</target>
        </trans-unit>
        <trans-unit id="f923d4960b765d0c3f8ba0b31067d29761b88f04" translate="yes" xml:space="preserve">
          <source>A concrete class providing a reusable implementation of the &lt;code&gt;IIOMetadataFormat&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;IIOMetadataFormat&lt;/code&gt; インターフェイスの再利用可能な実装を提供する具象クラス。</target>
        </trans-unit>
        <trans-unit id="d282fdf80a823d1b9ce109892a02adada32f1789" translate="yes" xml:space="preserve">
          <source>A concrete class providing a reusable implementation of the &lt;code&gt;IIOMetadataFormat&lt;/code&gt; interface. In addition, a static instance representing the standard, plug-in neutral &lt;code&gt;javax_imageio_1.0&lt;/code&gt; format is provided by the &lt;code&gt;getStandardFormatInstance&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;IIOMetadataFormat&lt;/code&gt; インターフェイスの再利用可能な実装を提供する具象クラス。さらに、標準のプラグインニュートラル &lt;code&gt;javax_imageio_1.0&lt;/code&gt; 形式を表す静的インスタンスは、 &lt;code&gt;getStandardFormatInstance&lt;/code&gt; メソッドによって提供されます。</target>
        </trans-unit>
        <trans-unit id="3a859801a589e89ad20bf50860bca6d1644bd9df" translate="yes" xml:space="preserve">
          <source>A concrete implementation of &lt;code&gt;MetalTheme&lt;/code&gt; providing the original look of the Java Look and Feel, code-named &quot;Steel&quot;.</source>
          <target state="translated">「Steel」というコードネームのJavaルックアンドフィールの元の外観を提供する &lt;code&gt;MetalTheme&lt;/code&gt; の具体的な実装。</target>
        </trans-unit>
        <trans-unit id="3e45fae144bb45f682a4256d4bde5bda7c7e35cd" translate="yes" xml:space="preserve">
          <source>A concrete implementation of &lt;code&gt;MetalTheme&lt;/code&gt; providing the original look of the Java Look and Feel, code-named &quot;Steel&quot;. Refer to &lt;a href=&quot;metallookandfeel#setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&quot;&gt;&lt;code&gt;MetalLookAndFeel.setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&lt;/code&gt;&lt;/a&gt; for details on changing the default theme.</source>
          <target state="translated">「Steel」というコードネームのJavaルックアンドフィールの元の外観を提供する &lt;code&gt;MetalTheme&lt;/code&gt; の具体的な実装。参照してください&lt;a href=&quot;metallookandfeel#setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&quot;&gt; &lt;code&gt;MetalLookAndFeel.setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&lt;/code&gt; &lt;/a&gt;デフォルトのテーマを変更の詳細については。</target>
        </trans-unit>
        <trans-unit id="712749aaea88a267414698100643df70c8e94b89" translate="yes" xml:space="preserve">
          <source>A concrete implementation of the &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; class can be created to extend the PKIX certification path validation algorithm. For example, an implementation may check for and process a critical private extension of each certificate in a certification path.</source>
          <target state="translated">&lt;code&gt;PKIXCertPathChecker&lt;/code&gt; クラスの具体的な実装を作成して、PKIX証明書パス検証アルゴリズムを拡張できます。たとえば、実装では、証明書パス内の各証明書の重要なプライベート拡張をチェックして処理する場合があります。</target>
        </trans-unit>
        <trans-unit id="1b8f023ff523d8ca2174982322b18fc912277484" translate="yes" xml:space="preserve">
          <source>A concrete provider class cannot be instantiated; or</source>
          <target state="translated">具象プロバイダクラスはインスタンス化できません。</target>
        </trans-unit>
        <trans-unit id="cc3f133bae4475dd14d8dd56a065e5893f608a9b" translate="yes" xml:space="preserve">
          <source>A concrete provider class is not a subclass of the service class;</source>
          <target state="translated">具体的なプロバイダクラスは、サービスクラスのサブクラスではありません。</target>
        </trans-unit>
        <trans-unit id="3f8ded546ab785eb4d9c3cb4e994d57af15e27e9" translate="yes" xml:space="preserve">
          <source>A concrete provider class named in a provider-configuration file cannot be found;</source>
          <target state="translated">プロバイダ設定ファイルで指定された具体的なプロバイダクラスが見つかりません。</target>
        </trans-unit>
        <trans-unit id="bd3332e52829c9939c6c0ecf492723b00eb5c0f9" translate="yes" xml:space="preserve">
          <source>A concrete subclass of AbstractUndoableEdit, used to assemble little UndoableEdits into great big ones.</source>
          <target state="translated">AbstractUndoableEdit の具体的なサブクラスで、小さな UndoableEdits を大きな UndoableEdits に組み立てるのに使われます。</target>
        </trans-unit>
        <trans-unit id="ceafe9ec57fc5178908de09d46ccde06e41ae006" translate="yes" xml:space="preserve">
          <source>A concrete subclass of this class must call this constructor when it is</source>
          <target state="translated">このクラスの具体的なサブクラスは、このクラスが</target>
        </trans-unit>
        <trans-unit id="b35811703a10342f5d9a4a448b169f0e54e12d29" translate="yes" xml:space="preserve">
          <source>A condition that violates the integrity of the resource was detected.</source>
          <target state="translated">リソースの整合性に違反する状態が検出されました。</target>
        </trans-unit>
        <trans-unit id="07aeda6128298b4c1cf51a969819ad2ad9cb99b8" translate="yes" xml:space="preserve">
          <source>A configuration encapsulates the &lt;em&gt;readability graph&lt;/em&gt; that is the output of resolution. A readability graph is a directed graph whose vertices are of type &lt;a href=&quot;resolvedmodule&quot;&gt;&lt;code&gt;ResolvedModule&lt;/code&gt;&lt;/a&gt; and the edges represent the readability amongst the modules. &lt;code&gt;Configuration&lt;/code&gt; defines the &lt;a href=&quot;#modules()&quot;&gt;&lt;code&gt;modules()&lt;/code&gt;&lt;/a&gt; method to get the set of resolved modules in the graph. &lt;code&gt;
 ResolvedModule&lt;/code&gt; defines the &lt;a href=&quot;resolvedmodule#reads()&quot;&gt;&lt;code&gt;reads()&lt;/code&gt;&lt;/a&gt; method to get the set of modules that a resolved module reads. The modules that are read may be in the same configuration or may be in &lt;a href=&quot;#parents()&quot;&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/a&gt; configurations.</source>
          <target state="translated">構成は、解像度の出力である&lt;em&gt;可読性グラフ&lt;/em&gt;をカプセル化します。可読性グラフは、頂点が&lt;a href=&quot;resolvedmodule&quot;&gt; &lt;code&gt;ResolvedModule&lt;/code&gt; &lt;/a&gt;型であり、エッジがモジュール間の可読性を表す有向グラフです。 &lt;code&gt;Configuration&lt;/code&gt; は、解決されたモジュールのセットをグラフで取得するための&lt;a href=&quot;#modules()&quot;&gt; &lt;code&gt;modules()&lt;/code&gt; &lt;/a&gt;メソッドを定義します。 &lt;code&gt; ResolvedModule&lt;/code&gt; は、解決されたモジュールが読み取るモジュールのセットを取得するための&lt;a href=&quot;resolvedmodule#reads()&quot;&gt; &lt;code&gt;reads()&lt;/code&gt; &lt;/a&gt;メソッドを定義します。読み取られるモジュールは、同じ構成であるか、&lt;a href=&quot;#parents()&quot;&gt; &lt;code&gt;parent&lt;/code&gt; &lt;/a&gt;構成である可能性があります。</target>
        </trans-unit>
        <trans-unit id="6d4a50dce10eebcc0c661ebcd24fec5ac19d2f24" translate="yes" xml:space="preserve">
          <source>A configuration that is the result of &lt;a href=&quot;package-summary#resolution&quot;&gt; resolution&lt;/a&gt; or resolution with &lt;a href=&quot;configuration#service-binding&quot;&gt;service binding&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;package-summary#resolution&quot;&gt;解決&lt;/a&gt;または&lt;a href=&quot;configuration#service-binding&quot;&gt;サービスバインディング&lt;/a&gt;を使用した解決の結果である構成。</target>
        </trans-unit>
        <trans-unit id="b6b77ef77fa579c1e5efd157525e672a61cae898" translate="yes" xml:space="preserve">
          <source>A conflict exists when a value that a &lt;code&gt;RowSet&lt;/code&gt; object has changed and is attempting to write to the data source has also been changed in the data source since the last synchronization. An application can call the &lt;code&gt;SyncResolver&lt;/code&gt; method &lt;code&gt;getConflictValue&lt;/code&gt; to retrieve the value in the data source that is the cause of the conflict because the values in a &lt;code&gt;SyncResolver&lt;/code&gt; object are the conflict values from the data source.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; オブジェクトが変更され、データソースに書き込もうとしている値が、最後の同期以降にデータソースでも変更された場合、競合が発生します。 &lt;code&gt;SyncResolver&lt;/code&gt; オブジェクトの値はデータソースからの競合値であるため、アプリケーションは &lt;code&gt;SyncResolver&lt;/code&gt; メソッド &lt;code&gt;getConflictValue&lt;/code&gt; を呼び出して、競合の原因であるデータソースの値を取得できます。</target>
        </trans-unit>
        <trans-unit id="cc609d610081d3eb2009f3b0b682a2d0744654f4" translate="yes" xml:space="preserve">
          <source>A connection (session) with a specific database.</source>
          <target state="translated">特定のデータベースとの接続(セッション)。</target>
        </trans-unit>
        <trans-unit id="ee9aefb429edbd8df1f29763cff2d2eb28169d9d" translate="yes" xml:space="preserve">
          <source>A connection (session) with a specific database. SQL statements are executed and results are returned within the context of a connection.</source>
          <target state="translated">特定のデータベースとの接続(セッション)。接続のコンテキスト内で SQL 文が実行され、結果が返されます。</target>
        </trans-unit>
        <trans-unit id="39c6171b927625f248ca9cc137d36414e7251ecb" translate="yes" xml:space="preserve">
          <source>A connection pool manager is often also a statement pool manager, maintaining a pool of &lt;code&gt;PreparedStatement&lt;/code&gt; objects. When an application closes a prepared statement, it calls the &lt;code&gt;PreparedStatement&lt;/code&gt; method &lt;code&gt;close&lt;/code&gt;. When &lt;code&gt;Statement&lt;/code&gt; pooling is being done, the pool manager is notified because it has registered itself as a &lt;code&gt;StatementEventListener&lt;/code&gt; object using the &lt;code&gt;ConnectionPool&lt;/code&gt; method &lt;code&gt;addStatementEventListener&lt;/code&gt;. Thus, when an application closes its &lt;code&gt;PreparedStatement&lt;/code&gt;, the underlying prepared statement is recycled rather than being closed.</source>
          <target state="translated">多くの場合、接続プールマネージャーはステートメントプールマネージャーでもあり、 &lt;code&gt;PreparedStatement&lt;/code&gt; オブジェクトのプールを維持します。アプリケーションがプリペアドステートメントを閉じると、 &lt;code&gt;PreparedStatement&lt;/code&gt; メソッド &lt;code&gt;close&lt;/code&gt; を呼び出します。 &lt;code&gt;Statement&lt;/code&gt; プーリングが実行されている場合、 &lt;code&gt;ConnectionPool&lt;/code&gt; メソッド &lt;code&gt;addStatementEventListener&lt;/code&gt; を使用して &lt;code&gt;StatementEventListener&lt;/code&gt; オブジェクトとして登録されているため、プールマネージャに通知されます。したがって、アプリケーションがその &lt;code&gt;PreparedStatement&lt;/code&gt; を閉じると、基になる準備済みステートメントは閉じられるのではなくリサイクルされます。</target>
        </trans-unit>
        <trans-unit id="a4759012fd2d12d2910e6e9a75125a735e1330fd" translate="yes" xml:space="preserve">
          <source>A connection to a remote RMI connector.</source>
          <target state="translated">リモート RMI コネクタへの接続。</target>
        </trans-unit>
        <trans-unit id="3a5e32e0701cdda0f60e3703da4ba437ad78a105" translate="yes" xml:space="preserve">
          <source>A connection to a remote RMI connector. Usually, such connections are made using &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt;. However, specialized applications can use this class directly, for example with an &lt;a href=&quot;rmiserver&quot;&gt;&lt;code&gt;RMIServer&lt;/code&gt;&lt;/a&gt; stub obtained without going through JNDI.</source>
          <target state="translated">リモートRMIコネクタへの接続。通常、このような接続は&lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; &lt;/a&gt;を使用して行われます。ただし、特殊なアプリケーションは、たとえばJNDIを経由せずに取得された&lt;a href=&quot;rmiserver&quot;&gt; &lt;code&gt;RMIServer&lt;/code&gt; &lt;/a&gt;スタブを使用して、このクラスを直接使用できます。</target>
        </trans-unit>
        <trans-unit id="5281da5fc208b5e3d2084885ed1d79b4dffb1e6b" translate="yes" xml:space="preserve">
          <source>A connection to a remote RMI connector. Usually, such connections are made using &lt;a href=&quot;../jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt;. However, specialized applications can use this class directly, for example with an &lt;a href=&quot;rmiserver&quot;&gt;&lt;code&gt;RMIServer&lt;/code&gt;&lt;/a&gt; stub obtained without going through JNDI.</source>
          <target state="translated">リモートRMIコネクターへの接続。通常、このような接続は&lt;a href=&quot;../jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; &lt;/a&gt;を使用して行われます。ただし、特殊なアプリケーションはこのクラスを直接使用できます。たとえば、JNDIを経由せずに取得した&lt;a href=&quot;rmiserver&quot;&gt; &lt;code&gt;RMIServer&lt;/code&gt; &lt;/a&gt;スタブを使用できます。</target>
        </trans-unit>
        <trans-unit id="71906a6e7fa82ce2f2832820f8575698417e451d" translate="yes" xml:space="preserve">
          <source>A connector client is usually created by supplying the &lt;code&gt;JMXServiceURL&lt;/code&gt; of the connector server to connect to to the &lt;a href=&quot;jmxconnectorfactory#connect(javax.management.remote.JMXServiceURL)&quot;&gt;&lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">コネクタクライアントは通常、&lt;a href=&quot;jmxconnectorfactory#connect(javax.management.remote.JMXServiceURL)&quot;&gt; &lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt; &lt;/a&gt;メソッドに接続するコネクタサーバーの &lt;code&gt;JMXServiceURL&lt;/code&gt; を指定することによって作成されます。</target>
        </trans-unit>
        <trans-unit id="dc1d7a566611a4eca771151edadc407ccf141315" translate="yes" xml:space="preserve">
          <source>A connector client is usually created by supplying the &lt;code&gt;JMXServiceURL&lt;/code&gt; of the connector server to connect to to the &lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-&quot;&gt;&lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">コネクタクライアントは通常、&lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-&quot;&gt; &lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt; &lt;/a&gt;メソッドに接続するためのコネクタサーバーの &lt;code&gt;JMXServiceURL&lt;/code&gt; を提供することによって作成されます。</target>
        </trans-unit>
        <trans-unit id="65172dc0939a2899342cf72ef4c3f4d5e6170f30" translate="yes" xml:space="preserve">
          <source>A connector makes an MBean server remotely accessible through a given protocol. The JMX Remote API allows the use of different type of connectors:</source>
          <target state="translated">コネクタは、指定されたプロトコルを介して MBean サーバにリモートでアクセスできるようにします。JMX Remote APIでは、さまざまなタイプのコネクタを使用することができます。</target>
        </trans-unit>
        <trans-unit id="cf69170289a60c8bf7efda788561d4a3030c1e4f" translate="yes" xml:space="preserve">
          <source>A connector server for which this is inappropriate must override this method so that it either implements the appropriate logic or throws &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これが不適切なコネクタサーバーは、適切なロジックを実装するか、&lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; を&lt;/a&gt;スローするように、このメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="8b06816216886f3a82230d72723751d319943331" translate="yes" xml:space="preserve">
          <source>A connector server for which this is inappropriate must override this method so that it either implements the appropriate logic or throws &lt;a href=&quot;../../../java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これが不適切なコネクタサーバーは、このメソッドをオーバーライドして、適切なロジックを実装するか、&lt;a href=&quot;../../../java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; を&lt;/a&gt;スローする必要があります。</target>
        </trans-unit>
        <trans-unit id="cc00c2f98497585b47c3192d00eadd75676cea50" translate="yes" xml:space="preserve">
          <source>A connector server is associated with an MBean server either by registering it in that MBean server, or by passing the MBean server to its constructor.</source>
          <target state="translated">コネクタサーバは、MBean サーバに登録するか、MBean サーバをコンストラクタに渡すことで、MBean サーバに関連付けられます。</target>
        </trans-unit>
        <trans-unit id="6fac640212c8d0324caf80a8772bfee8a59e6f76" translate="yes" xml:space="preserve">
          <source>A connector server is created by constructing an instance of a subclass of &lt;a href=&quot;jmxconnectorserver&quot;&gt;&lt;code&gt;JMXConnectorServer&lt;/code&gt;&lt;/a&gt;. Usually, this instance is created using the method &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt;&lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コネクタサーバーは、&lt;a href=&quot;jmxconnectorserver&quot;&gt; &lt;code&gt;JMXConnectorServer&lt;/code&gt; の&lt;/a&gt;サブクラスのインスタンスを構築することによって作成されます。通常、このインスタンスはメソッド&lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt; &lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt; &lt;/a&gt;を使用して作成されます。</target>
        </trans-unit>
        <trans-unit id="fd981a4467010ba08d191c25715b89bbb07202d0" translate="yes" xml:space="preserve">
          <source>A connector server is created by constructing an instance of a subclass of &lt;a href=&quot;jmxconnectorserver&quot;&gt;&lt;code&gt;JMXConnectorServer&lt;/code&gt;&lt;/a&gt;. Usually, this instance is created using the method &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コネクタサーバーは、&lt;a href=&quot;jmxconnectorserver&quot;&gt; &lt;code&gt;JMXConnectorServer&lt;/code&gt; の&lt;/a&gt;サブクラスのインスタンスを作成することによって作成されます。通常、このインスタンスは&lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt; &lt;/a&gt;メソッドを使用して作成されます。</target>
        </trans-unit>
        <trans-unit id="2a47d2048c31d3b32a0bd0153594dc11132afdaf" translate="yes" xml:space="preserve">
          <source>A connector server is inactive when created. It only starts listening for client connections when the &lt;a href=&quot;jmxconnectorservermbean#start()&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. A connector server stops listening for client connections when the &lt;a href=&quot;jmxconnectorservermbean#stop()&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called or when the connector server is unregistered from its MBean server.</source>
          <target state="translated">コネクタサーバーは、作成時に非アクティブです。&lt;a href=&quot;jmxconnectorservermbean#start()&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたときにのみ、クライアント接続のリッスンを開始します。コネクタサーバーは、&lt;a href=&quot;jmxconnectorservermbean#stop()&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたとき、またはコネクタサーバーがMBeanサーバーから登録解除されたときに、クライアント接続のリッスンを停止します。</target>
        </trans-unit>
        <trans-unit id="729de493400b8161527e266d3a8c893c12cafa51" translate="yes" xml:space="preserve">
          <source>A connector server is inactive when created. It only starts listening for client connections when the &lt;a href=&quot;jmxconnectorservermbean#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. A connector server stops listening for client connections when the &lt;a href=&quot;jmxconnectorservermbean#stop--&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called or when the connector server is unregistered from its MBean server.</source>
          <target state="translated">コネクタサーバーは作成時に非アクティブになります。&lt;a href=&quot;jmxconnectorservermbean#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたときにのみクライアント接続のリスニングを開始します。コネクタサーバーは、&lt;a href=&quot;jmxconnectorservermbean#stop--&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたとき、またはコネクタサーバーがMBeanサーバーから登録解除されたときに、クライアント接続の待機を停止します。</target>
        </trans-unit>
        <trans-unit id="b4357533106a251a960a61dd27d9689023c47e50" translate="yes" xml:space="preserve">
          <source>A consecutive sequence of decimal digits is treated as a decimal number:</source>
          <target state="translated">連続した10進数を10進数として扱います。</target>
        </trans-unit>
        <trans-unit id="b50e7d81381adb7c96ec61ab5d96776c14c3174c" translate="yes" xml:space="preserve">
          <source>A consecutive sequence of letters is regarded as a word and treated as follows:</source>
          <target state="translated">連続した文字列を単語とみなし、以下のように扱います。</target>
        </trans-unit>
        <trans-unit id="3845fd433ee9f6ab5405a2a4af3547c641770e94" translate="yes" xml:space="preserve">
          <source>A consequence of the use of &lt;code&gt;ScheduledFuture&lt;/code&gt; objects is that &lt;a href=&quot;threadpoolexecutor#afterExecute(java.lang.Runnable,java.lang.Throwable)&quot;&gt;&lt;code&gt;afterExecute&lt;/code&gt;&lt;/a&gt; is always called with a null second &lt;code&gt;Throwable&lt;/code&gt; argument, even if the &lt;code&gt;command&lt;/code&gt; terminated abruptly. Instead, the &lt;code&gt;Throwable&lt;/code&gt; thrown by such a task can be obtained via &lt;a href=&quot;future#get()&quot;&gt;&lt;code&gt;Future.get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ScheduledFuture&lt;/code&gt; オブジェクトを使用すると、 &lt;code&gt;command&lt;/code&gt; 突然終了した場合でも、&lt;a href=&quot;threadpoolexecutor#afterExecute(java.lang.Runnable,java.lang.Throwable)&quot;&gt; &lt;code&gt;afterExecute&lt;/code&gt; &lt;/a&gt;が常にnullの2番目の &lt;code&gt;Throwable&lt;/code&gt; 引数で呼び出されます。代わりに、そのようなタスクによってスローされる &lt;code&gt;Throwable&lt;/code&gt; は、&lt;a href=&quot;future#get()&quot;&gt; &lt;code&gt;Future.get()&lt;/code&gt; を&lt;/a&gt;介して取得できます。</target>
        </trans-unit>
        <trans-unit id="c154b2d7544e9e17d7ac9c57de6d6ed0d852b19a" translate="yes" xml:space="preserve">
          <source>A consequence of the use of &lt;code&gt;ScheduledFuture&lt;/code&gt; objects is that &lt;a href=&quot;threadpoolexecutor#afterExecute-java.lang.Runnable-java.lang.Throwable-&quot;&gt;&lt;code&gt;afterExecute&lt;/code&gt;&lt;/a&gt; is always called with a null second &lt;code&gt;Throwable&lt;/code&gt; argument, even if the &lt;code&gt;command&lt;/code&gt; terminated abruptly. Instead, the &lt;code&gt;Throwable&lt;/code&gt; thrown by such a task can be obtained via &lt;a href=&quot;future#get--&quot;&gt;&lt;code&gt;Future.get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ScheduledFuture&lt;/code&gt; オブジェクトを使用すると、 &lt;code&gt;command&lt;/code&gt; 突然終了した場合でも、常にnullの2番目の &lt;code&gt;Throwable&lt;/code&gt; 引数を指定して&lt;a href=&quot;threadpoolexecutor#afterExecute-java.lang.Runnable-java.lang.Throwable-&quot;&gt; &lt;code&gt;afterExecute&lt;/code&gt; &lt;/a&gt;が呼び出されます。代わりに、そのようなタスクによってスローされた &lt;code&gt;Throwable&lt;/code&gt; は&lt;a href=&quot;future#get--&quot;&gt; &lt;code&gt;Future.get()&lt;/code&gt; を&lt;/a&gt;介して取得できます。</target>
        </trans-unit>
        <trans-unit id="622ec8aa9696f49b5a1d49f1ec97d4e475ae08b1" translate="yes" xml:space="preserve">
          <source>A constant for a period of zero.</source>
          <target state="translated">ゼロの期間の定数。</target>
        </trans-unit>
        <trans-unit id="1477f5f68f8134d2aecf8c4707dc2163e321bbce" translate="yes" xml:space="preserve">
          <source>A constant holding a Not-a-Number (NaN) value of type &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 型のNot-a-Number（NaN）値を保持する定数。</target>
        </trans-unit>
        <trans-unit id="408ab1d95aeb7f78d5620b36adb094b5f8e386ed" translate="yes" xml:space="preserve">
          <source>A constant holding a Not-a-Number (NaN) value of type &lt;code&gt;double&lt;/code&gt;. It is equivalent to the value returned by &lt;code&gt;Double.longBitsToDouble(0x7ff8000000000000L)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 型の非数（NaN）値を保持する定数。これは、 &lt;code&gt;Double.longBitsToDouble(0x7ff8000000000000L)&lt;/code&gt; によって返される値と同等です。</target>
        </trans-unit>
        <trans-unit id="d8788ee830046de75b94187700a963f5317049c0" translate="yes" xml:space="preserve">
          <source>A constant holding a Not-a-Number (NaN) value of type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 型のNot-a-Number（NaN）値を保持する定数。</target>
        </trans-unit>
        <trans-unit id="7a9f41909332598bf0fe8a6b6c7e05fcc54b78f8" translate="yes" xml:space="preserve">
          <source>A constant holding a Not-a-Number (NaN) value of type &lt;code&gt;float&lt;/code&gt;. It is equivalent to the value returned by &lt;code&gt;Float.intBitsToFloat(0x7fc00000)&lt;/code&gt;.</source>
          <target state="translated">タイプ &lt;code&gt;float&lt;/code&gt; の非数（NaN）値を保持する定数。これは、 &lt;code&gt;Float.intBitsToFloat(0x7fc00000)&lt;/code&gt; によって返される値と同等です。</target>
        </trans-unit>
        <trans-unit id="0c3f813cf29203f458e4a403c0749db1ce8e4539" translate="yes" xml:space="preserve">
          <source>A constant holding the largest positive finite value of type &lt;code&gt;double&lt;/code&gt;, (2-2&lt;sup&gt;-52&lt;/sup&gt;)&amp;middot;2&lt;sup&gt;1023&lt;/sup&gt;.</source>
          <target state="translated">タイプ &lt;code&gt;double&lt;/code&gt; の最大の正の有限値を保持する定数（2-2 &lt;sup&gt;-52&lt;/sup&gt;）・&lt;sup&gt;21023&lt;/sup&gt;。</target>
        </trans-unit>
        <trans-unit id="c2370477399c9d24edd4e5ac9a5b7d569b9b314b" translate="yes" xml:space="preserve">
          <source>A constant holding the largest positive finite value of type &lt;code&gt;double&lt;/code&gt;, (2-2&lt;sup&gt;-52&lt;/sup&gt;)&amp;middot;2&lt;sup&gt;1023&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x1.fffffffffffffP+1023&lt;/code&gt; and also equal to &lt;code&gt;Double.longBitsToDouble(0x7fefffffffffffffL)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 型の最大の正の有限値を保持する定数（2-2 &lt;sup&gt;-52&lt;/sup&gt;）・2 &lt;sup&gt;1023&lt;/sup&gt;。これは、16進浮動小数点リテラル &lt;code&gt;0x1.fffffffffffffP+1023&lt;/code&gt; と等しく、 &lt;code&gt;Double.longBitsToDouble(0x7fefffffffffffffL)&lt;/code&gt; とも等しくなります。</target>
        </trans-unit>
        <trans-unit id="49c356c451cc04904396932fe1a3f20233a7f5a8" translate="yes" xml:space="preserve">
          <source>A constant holding the largest positive finite value of type &lt;code&gt;float&lt;/code&gt;, (2-2&lt;sup&gt;-23&lt;/sup&gt;)&amp;middot;2&lt;sup&gt;127&lt;/sup&gt;.</source>
          <target state="translated">型の正の最大有限値保持定数 &lt;code&gt;float&lt;/code&gt; 、（2-2 &lt;sup&gt;-23&lt;/sup&gt;）・2 &lt;sup&gt;127&lt;/sup&gt;。</target>
        </trans-unit>
        <trans-unit id="1559c3190af98081a3a4166e36cd940881955573" translate="yes" xml:space="preserve">
          <source>A constant holding the largest positive finite value of type &lt;code&gt;float&lt;/code&gt;, (2-2&lt;sup&gt;-23&lt;/sup&gt;)&amp;middot;2&lt;sup&gt;127&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x1.fffffeP+127f&lt;/code&gt; and also equal to &lt;code&gt;Float.intBitsToFloat(0x7f7fffff)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 型の正の最大有限値（2-2 &lt;sup&gt;-23&lt;/sup&gt;）・2 &lt;sup&gt;127を&lt;/sup&gt;保持する定数。これは、16進浮動小数点リテラル &lt;code&gt;0x1.fffffeP+127f&lt;/code&gt; と等しく、 &lt;code&gt;Float.intBitsToFloat(0x7f7fffff)&lt;/code&gt; とも等しくなります。</target>
        </trans-unit>
        <trans-unit id="aa45635c3dac94b3e1415bc2816262b93420be17" translate="yes" xml:space="preserve">
          <source>A constant holding the maximum value a &lt;code&gt;byte&lt;/code&gt; can have, 2&lt;sup&gt;7&lt;/sup&gt;-1.</source>
          <target state="translated">&lt;code&gt;byte&lt;/code&gt; が持つことができる最大値を保持する定数、2 &lt;sup&gt;7&lt;/sup&gt; -1。</target>
        </trans-unit>
        <trans-unit id="c81538130b7723dffb4e565ca4c43f81ab349db0" translate="yes" xml:space="preserve">
          <source>A constant holding the maximum value a &lt;code&gt;long&lt;/code&gt; can have, 2&lt;sup&gt;63&lt;/sup&gt;-1.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; が持つことができる最大値を保持する定数、2 &lt;sup&gt;63&lt;/sup&gt; -1。</target>
        </trans-unit>
        <trans-unit id="a20a77b22599d89aa750f87d3b8f6393a31871b6" translate="yes" xml:space="preserve">
          <source>A constant holding the maximum value a &lt;code&gt;short&lt;/code&gt; can have, 2&lt;sup&gt;15&lt;/sup&gt;-1.</source>
          <target state="translated">&lt;code&gt;short&lt;/code&gt; の最大値を保持する定数、2 &lt;sup&gt;15&lt;/sup&gt; -1。</target>
        </trans-unit>
        <trans-unit id="89f6fa143f9ec2f083ee659804ad1b8c50e1db45" translate="yes" xml:space="preserve">
          <source>A constant holding the maximum value an &lt;code&gt;int&lt;/code&gt; can have, 2&lt;sup&gt;31&lt;/sup&gt;-1.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; が持つことができる最大値2 &lt;sup&gt;31&lt;/sup&gt; -1を保持する定数。</target>
        </trans-unit>
        <trans-unit id="213c983a4885ceaaad32258ba70bcf2aca3ef5ce" translate="yes" xml:space="preserve">
          <source>A constant holding the maximum value of weight, 1.0, which indicates that the language range is a good fit for the user.</source>
          <target state="translated">重みの最大値である1.0を保持する定数で、言語範囲がユーザーに適したものであることを示します。</target>
        </trans-unit>
        <trans-unit id="195e5bbc3041eea84adab54a11e575298b1c41cf" translate="yes" xml:space="preserve">
          <source>A constant holding the minimum value a &lt;code&gt;byte&lt;/code&gt; can have, -2&lt;sup&gt;7&lt;/sup&gt;.</source>
          <target state="translated">&lt;code&gt;byte&lt;/code&gt; の最小値-2 &lt;sup&gt;7を&lt;/sup&gt;保持する定数。</target>
        </trans-unit>
        <trans-unit id="52acf66e806a2a273588e0eb3f8f800460ba9f69" translate="yes" xml:space="preserve">
          <source>A constant holding the minimum value a &lt;code&gt;long&lt;/code&gt; can have, -2&lt;sup&gt;63&lt;/sup&gt;.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; が持つことができる最小値を保持する定数-2 &lt;sup&gt;63&lt;/sup&gt;。</target>
        </trans-unit>
        <trans-unit id="d88b8661d44e693837e8dcbbb8ad71a38058f36b" translate="yes" xml:space="preserve">
          <source>A constant holding the minimum value a &lt;code&gt;short&lt;/code&gt; can have, -2&lt;sup&gt;15&lt;/sup&gt;.</source>
          <target state="translated">&lt;code&gt;short&lt;/code&gt; の最小値-2 &lt;sup&gt;15を&lt;/sup&gt;保持する定数。</target>
        </trans-unit>
        <trans-unit id="fd86206e57defe248bbdbdca1a38c5b7fe7516c3" translate="yes" xml:space="preserve">
          <source>A constant holding the minimum value an &lt;code&gt;int&lt;/code&gt; can have, -2&lt;sup&gt;31&lt;/sup&gt;.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; が持つことができる最小値-2 &lt;sup&gt;31を&lt;/sup&gt;保持する定数。</target>
        </trans-unit>
        <trans-unit id="366d749bc03e21a5730979c744989b2ca9b9b0f7" translate="yes" xml:space="preserve">
          <source>A constant holding the minimum value of weight, 0.0, which indicates that the language range is not a good fit for the user.</source>
          <target state="translated">重みの最小値である0.0を保持する定数で、言語範囲がユーザーにフィットしていないことを示します。</target>
        </trans-unit>
        <trans-unit id="ec09f1e6a384ccf4edc76113c490998c57d6faf9" translate="yes" xml:space="preserve">
          <source>A constant holding the negative infinity of type &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 型の負の​​無限大を保持する定数。</target>
        </trans-unit>
        <trans-unit id="03a6d5a6655c2a060db44ef940b07a63cb0d9b15" translate="yes" xml:space="preserve">
          <source>A constant holding the negative infinity of type &lt;code&gt;double&lt;/code&gt;. It is equal to the value returned by &lt;code&gt;Double.longBitsToDouble(0xfff0000000000000L)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 型の負の​​無限大を保持する定数。これは、 &lt;code&gt;Double.longBitsToDouble(0xfff0000000000000L)&lt;/code&gt; によって返される値と同じです。</target>
        </trans-unit>
        <trans-unit id="237d098976370c391bc3e6e82087bc622bb9f347" translate="yes" xml:space="preserve">
          <source>A constant holding the negative infinity of type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">型 &lt;code&gt;float&lt;/code&gt; の負の無限大を保持する定数。</target>
        </trans-unit>
        <trans-unit id="562f4fa39e792042eda77256d90f71f667f9cb4d" translate="yes" xml:space="preserve">
          <source>A constant holding the negative infinity of type &lt;code&gt;float&lt;/code&gt;. It is equal to the value returned by &lt;code&gt;Float.intBitsToFloat(0xff800000)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 型の負の​​無限大を保持する定数。これは、 &lt;code&gt;Float.intBitsToFloat(0xff800000)&lt;/code&gt; によって返される値と同じです。</target>
        </trans-unit>
        <trans-unit id="520f3294013e64c156f492ac639180a454efb1f2" translate="yes" xml:space="preserve">
          <source>A constant holding the positive infinity of type &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 型の正の無限大を保持する定数。</target>
        </trans-unit>
        <trans-unit id="89bdfdbbe53820259637babc21d8836fd71ccc85" translate="yes" xml:space="preserve">
          <source>A constant holding the positive infinity of type &lt;code&gt;double&lt;/code&gt;. It is equal to the value returned by &lt;code&gt;Double.longBitsToDouble(0x7ff0000000000000L)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 型の正の無限大を保持する定数。これは、 &lt;code&gt;Double.longBitsToDouble(0x7ff0000000000000L)&lt;/code&gt; によって返される値と同じです。</target>
        </trans-unit>
        <trans-unit id="476c7126d47afc9d47bd86d5d8fe47269ec1e776" translate="yes" xml:space="preserve">
          <source>A constant holding the positive infinity of type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">型 &lt;code&gt;float&lt;/code&gt; の正の無限大を保持する定数。</target>
        </trans-unit>
        <trans-unit id="e4edd55348f3bbcf29f947e2199d27f6106b6d21" translate="yes" xml:space="preserve">
          <source>A constant holding the positive infinity of type &lt;code&gt;float&lt;/code&gt;. It is equal to the value returned by &lt;code&gt;Float.intBitsToFloat(0x7f800000)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 型の正の無限大を保持する定数。これは、 &lt;code&gt;Float.intBitsToFloat(0x7f800000)&lt;/code&gt; によって返される値と同じです。</target>
        </trans-unit>
        <trans-unit id="b6ebed79b2e5b37f5b30f735301a55cdb9a92c0c" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive nonzero value of type &lt;code&gt;double&lt;/code&gt;, 2&lt;sup&gt;-1074&lt;/sup&gt;.</source>
          <target state="translated">タイプ &lt;code&gt;double&lt;/code&gt; の最小の正の非ゼロ値を保持する定数、&lt;sup&gt;2-1074&lt;/sup&gt;。</target>
        </trans-unit>
        <trans-unit id="997f769b40571ffd14031483d8e7531f40e5ad0f" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive nonzero value of type &lt;code&gt;double&lt;/code&gt;, 2&lt;sup&gt;-1074&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x0.0000000000001P-1022&lt;/code&gt; and also equal to &lt;code&gt;Double.longBitsToDouble(0x1L)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 型の非ゼロの正の最小値2 &lt;sup&gt;-1074を&lt;/sup&gt;保持する定数。これは、16進浮動小数点リテラル &lt;code&gt;0x0.0000000000001P-1022&lt;/code&gt; と等しく、 &lt;code&gt;Double.longBitsToDouble(0x1L)&lt;/code&gt; とも等しくなります。</target>
        </trans-unit>
        <trans-unit id="72c438d246bb6c822505f14b07f2b5af54558848" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive nonzero value of type &lt;code&gt;float&lt;/code&gt;, 2&lt;sup&gt;-149&lt;/sup&gt;.</source>
          <target state="translated">型の最小の正の非ゼロ値保持定数 &lt;code&gt;float&lt;/code&gt; 、2 &lt;sup&gt;-149&lt;/sup&gt;。</target>
        </trans-unit>
        <trans-unit id="31f87b77b0b8567fdb51e96a07e699ba219f199a" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive nonzero value of type &lt;code&gt;float&lt;/code&gt;, 2&lt;sup&gt;-149&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x0.000002P-126f&lt;/code&gt; and also equal to &lt;code&gt;Float.intBitsToFloat(0x1)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 型の非ゼロの正の最小値を保持する定数、2から&lt;sup&gt;149&lt;/sup&gt;。これは、16進浮動小数点リテラル &lt;code&gt;0x0.000002P-126f&lt;/code&gt; と等しく、 &lt;code&gt;Float.intBitsToFloat(0x1)&lt;/code&gt; とも等しくなります。</target>
        </trans-unit>
        <trans-unit id="c3c55a987c7ceb1b6d0cd0c0bc00253de8cc2f2f" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive normal value of type &lt;code&gt;double&lt;/code&gt;, 2&lt;sup&gt;-1022&lt;/sup&gt;.</source>
          <target state="translated">タイプ &lt;code&gt;double&lt;/code&gt; の最小の正の正規値を保持する定数、&lt;sup&gt;2-1022&lt;/sup&gt;。</target>
        </trans-unit>
        <trans-unit id="43ac95af04530b21424fe9fe4d0d50cb98b1f66e" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive normal value of type &lt;code&gt;double&lt;/code&gt;, 2&lt;sup&gt;-1022&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x1.0p-1022&lt;/code&gt; and also equal to &lt;code&gt;Double.longBitsToDouble(0x0010000000000000L)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 型の正の最小正規値2 &lt;sup&gt;-1022を&lt;/sup&gt;保持する定数。これは、16進浮動小数点リテラル &lt;code&gt;0x1.0p-1022&lt;/code&gt; と等しく、 &lt;code&gt;Double.longBitsToDouble(0x0010000000000000L)&lt;/code&gt; とも等しくなります。</target>
        </trans-unit>
        <trans-unit id="56e942658197cbb108717eeb662e7b73120d0074" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive normal value of type &lt;code&gt;float&lt;/code&gt;, 2&lt;sup&gt;-126&lt;/sup&gt;.</source>
          <target state="translated">型の正の最小通常値保持定数 &lt;code&gt;float&lt;/code&gt; 、2 &lt;sup&gt;-126&lt;/sup&gt;。</target>
        </trans-unit>
        <trans-unit id="981c4e581250bfe1199ccc6d949a0d2120c2ca33" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive normal value of type &lt;code&gt;float&lt;/code&gt;, 2&lt;sup&gt;-126&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x1.0p-126f&lt;/code&gt; and also equal to &lt;code&gt;Float.intBitsToFloat(0x00800000)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 型の正の最小正規値2 &lt;sup&gt;-126を&lt;/sup&gt;保持する定数。これは、16進浮動小数点リテラル &lt;code&gt;0x1.0p-126f&lt;/code&gt; と等しく、 &lt;code&gt;Float.intBitsToFloat(0x00800000)&lt;/code&gt; とも等しくなります。</target>
        </trans-unit>
        <trans-unit id="56d934c7a517e9935eda91929df3ed1fbd67c0e3" translate="yes" xml:space="preserve">
          <source>A constant indicating that a number token has been read.</source>
          <target state="translated">番号トークンが読み込まれたことを示す定数。</target>
        </trans-unit>
        <trans-unit id="648ea7585761892bba4a14317322b6419df48f35" translate="yes" xml:space="preserve">
          <source>A constant indicating that a word token has been read.</source>
          <target state="translated">ワードトークンが読み込まれたことを示す定数。</target>
        </trans-unit>
        <trans-unit id="98b4a9c5387ca18d776a07de80c4f34274c13477" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads and non-repeatable reads are prevented; phantom reads can occur.</source>
          <target state="translated">ダーティリードと非反復リードが防止されていることを示す定数で、ファントムリードが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="fd9b1bce18e7e3d182ec7959d944a03570266ccb" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads and non-repeatable reads are prevented; phantom reads can occur. This level prohibits a transaction from reading a row with uncommitted changes in it, and it also prohibits the situation where one transaction reads a row, a second transaction alters the row, and the first transaction rereads the row, getting different values the second time (a &quot;non-repeatable read&quot;).</source>
          <target state="translated">ダーティな読み取りや再現性のない読み取りが禁止されていることを示す定数で、ファントム読み取りが発生する可能性があります。このレベルは、コミットされていない変更がある行をトランザクションが読み込むことを禁止し、1つのトランザクションが行を読み込み、2つ目のトランザクションが行を変更し、最初のトランザクションが行を再読み込みして、2回目に異なる値を取得するという状況を禁止する(「非反復可能な読み込み」)。</target>
        </trans-unit>
        <trans-unit id="5ccebbb810455f6dcf6fbc1780c90f63ef476103" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads are prevented; non-repeatable reads and phantom reads can occur.</source>
          <target state="translated">ダーティリードが防止されていることを示す定数で、再現性のないリードやファントムリードが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="49efda05d67d342a70be7ecd6deb6a94a376bd49" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads are prevented; non-repeatable reads and phantom reads can occur. This level only prohibits a transaction from reading a row with uncommitted changes in it.</source>
          <target state="translated">ダーティな読み取りが禁止されていることを示す定数で、再現不可能な読み取りやファントム読み取りが発生する可能性があります。このレベルは、コミットされていない変更がある行の読み取りを禁止するだけです。</target>
        </trans-unit>
        <trans-unit id="37d9f7bc59529a0ca49b271888a4f173001c8c7f" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads, non-repeatable reads and phantom reads are prevented.</source>
          <target state="translated">ダーティリード、非反復リード、ファントムリードを防止することを示す定数。</target>
        </trans-unit>
        <trans-unit id="1cd08ab7a3dbb038e7b29ee382cc26d88ac61eb5" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads, non-repeatable reads and phantom reads are prevented. This level includes the prohibitions in &lt;code&gt;TRANSACTION_REPEATABLE_READ&lt;/code&gt; and further prohibits the situation where one transaction reads all rows that satisfy a &lt;code&gt;WHERE&lt;/code&gt; condition, a second transaction inserts a row that satisfies that &lt;code&gt;WHERE&lt;/code&gt; condition, and the first transaction rereads for the same condition, retrieving the additional &quot;phantom&quot; row in the second read.</source>
          <target state="translated">ダーティ読み取り、繰り返し不可能な読み取り、およびファントム読み取りが防止されることを示す定数。このレベルには、 &lt;code&gt;TRANSACTION_REPEATABLE_READ&lt;/code&gt; の禁止事項が含まれ、さらに、1つのトランザクションが &lt;code&gt;WHERE&lt;/code&gt; 条件を満たすすべての行を読み取り、2番目のトランザクションがその &lt;code&gt;WHERE&lt;/code&gt; 条件を満たす行を挿入し、最初のトランザクションが同じ条件を満たす行を再読み取りして、追加の &quot;を取得する状況を禁止します。 2回目の読み取りの「ファントム」行。</target>
        </trans-unit>
        <trans-unit id="900f9670f4b5738ea6e1f6deeecfb6113cadf9d1" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads, non-repeatable reads and phantom reads can occur.</source>
          <target state="translated">ダーティリード、非再現リード、ファントムリードが発生する可能性があることを示す定数。</target>
        </trans-unit>
        <trans-unit id="75e113b185a8034fd038a5931ef3fc02dd1f98ac" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads, non-repeatable reads and phantom reads can occur. This level allows a row changed by one transaction to be read by another transaction before any changes in that row have been committed (a &quot;dirty read&quot;). If any of the changes are rolled back, the second transaction will have retrieved an invalid row.</source>
          <target state="translated">ダーティ・リード、非再現可能なリード、およびファントム・リードが発生する可能性があることを示す定数。このレベルでは、あるトランザクションによって変更された行が、その行の変更がコミットされる前に別のトランザクションによって読み取られることを可能にする(「ダーティリード」)。変更のいずれかがロールバックされた場合、2番目のトランザクションは無効な行を取得したことになる。</target>
        </trans-unit>
        <trans-unit id="b15777e7d884a405608153040cd013c01f5d0b33" translate="yes" xml:space="preserve">
          <source>A constant indicating that the end of the line has been read.</source>
          <target state="translated">行末が読み込まれたことを示す定数。</target>
        </trans-unit>
        <trans-unit id="3e9ce93a619d65834f17595305fc77f97a49324d" translate="yes" xml:space="preserve">
          <source>A constant indicating that the end of the stream has been read.</source>
          <target state="translated">ストリームの終わりが読み込まれたことを示す定数。</target>
        </trans-unit>
        <trans-unit id="05ff7d5d039f3d599a44d1a82113a8346729d551" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key event originated on the numeric keypad or with a virtual key corresponding to the numeric keypad.</source>
          <target state="translated">キーイベントがテンキーまたはテンキーに対応する仮想キーで発生したことを示す定数。</target>
        </trans-unit>
        <trans-unit id="9be0ab06be8a50e56ba406130301c789831fded3" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is in the left key location (there is more than one possible location for this key).</source>
          <target state="translated">押されたキーまたは解放されたキーが左キーの位置にあることを示す定数(このキーには複数の可能性があります)。</target>
        </trans-unit>
        <trans-unit id="d7762c22e001277ee5cd6aeecabf121605fbece7" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is in the left key location (there is more than one possible location for this key). Example: the left shift key.</source>
          <target state="translated">押されたキーまたは離されたキーが左キーの位置にあることを示す定数(このキーの位置は複数の可能性があります)。例:左シフトキー。</target>
        </trans-unit>
        <trans-unit id="9a1f11a170c0a575584e55c5fb1d677bb6358739" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is in the right key location (there is more than one possible location for this key).</source>
          <target state="translated">押されたキーまたはリリースされたキーが正しいキー位置にあることを示す定数(このキーには複数の可能性のある位置があります)。</target>
        </trans-unit>
        <trans-unit id="98822459a383fdb86b1f6269201518447e31508e" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is in the right key location (there is more than one possible location for this key). Example: the right shift key.</source>
          <target state="translated">押されたキーまたは離されたキーが右キーの位置にあることを示す定数(このキーには複数の可能な位置があります)。例:右シフトキー。</target>
        </trans-unit>
        <trans-unit id="29d575fa10f7d1466aa0adcd76dc7b048791c20c" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is not distinguished as the left or right version of a key, and did not originate on the numeric keypad (or did not originate with a virtual key corresponding to the numeric keypad).</source>
          <target state="translated">押されたキーや離されたキーが左右のキーとして区別されず、テンキーに由来しない(またはテンキーに対応する仮想キーに由来しない)ことを示す定数。</target>
        </trans-unit>
        <trans-unit id="4f8a965994d6bdff67c964a039e7f1a4fd80747d" translate="yes" xml:space="preserve">
          <source>A constant indicating that the keyLocation is indeterminate or not relevant.</source>
          <target state="translated">keyLocationが不確定であるかどうかを示す定数。</target>
        </trans-unit>
        <trans-unit id="9f2c38207a19702e47eb202ace4e581e89aa869f" translate="yes" xml:space="preserve">
          <source>A constant indicating that the keyLocation is indeterminate or not relevant. &lt;code&gt;KEY_TYPED&lt;/code&gt; events do not have a keyLocation; this value is used instead.</source>
          <target state="translated">keyLocationが不確定または関連性がないことを示す定数。 &lt;code&gt;KEY_TYPED&lt;/code&gt; イベントにはkeyLocationがありません。代わりにこの値が使用されます。</target>
        </trans-unit>
        <trans-unit id="20c201122998a1314d1f84487379aeb5d8cd68c9" translate="yes" xml:space="preserve">
          <source>A constant indicating that transactions are not supported.</source>
          <target state="translated">トランザクションがサポートされていないことを示す定数。</target>
        </trans-unit>
        <trans-unit id="2d5ee397d0953f8c878592a157223de0668f57de" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is a Unicode stream.</source>
          <target state="translated">指定されたパラメーターがUnicodeストリームであることを &lt;code&gt;RowSetReaderImpl&lt;/code&gt; オブジェクトに示す定数。</target>
        </trans-unit>
        <trans-unit id="444a3b653570cc75145a9db33019375cdb0d23ea" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is a Unicode stream. This &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object is provided as an extension of the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class defined in the &lt;code&gt;SyncFactory&lt;/code&gt; static factory SPI mechanism.</source>
          <target state="translated">指定されたパラメーターがUnicodeストリームであることを &lt;code&gt;RowSetReaderImpl&lt;/code&gt; オブジェクトに示す定数。この &lt;code&gt;RowSetReaderImpl&lt;/code&gt; オブジェクトは、 &lt;code&gt;SyncFactory&lt;/code&gt; 静的ファクトリSPIメカニズムで定義された &lt;code&gt;SyncProvider&lt;/code&gt; 抽象クラスの拡張として提供されます。</target>
        </trans-unit>
        <trans-unit id="d1af75dffd4a28ad609bd172e9df6b60b0492280" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is a binary stream.</source>
          <target state="translated">指定されたパラメーターがバイナリストリームであることを &lt;code&gt;RowSetReaderImpl&lt;/code&gt; オブジェクトに示す定数。</target>
        </trans-unit>
        <trans-unit id="82f3fde9e0a9c49845f36259d577d009885b6c5d" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is a binary stream. A &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object is provided as an extension of the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class defined in the &lt;code&gt;SyncFactory&lt;/code&gt; static factory SPI mechanism.</source>
          <target state="translated">指定されたパラメーターがバイナリストリームであることを &lt;code&gt;RowSetReaderImpl&lt;/code&gt; オブジェクトに示す定数。 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; オブジェクトはの拡張として提供される &lt;code&gt;SyncProvider&lt;/code&gt; に定義された抽象クラス &lt;code&gt;SyncFactory&lt;/code&gt; が静的ファクトリSPI機構。</target>
        </trans-unit>
        <trans-unit id="b2e11b618c4a9eb29b087fecb9e638df2e5f9e9c" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is an ASCII stream.</source>
          <target state="translated">指定されたパラメーターがASCIIストリームであることを &lt;code&gt;RowSetReaderImpl&lt;/code&gt; オブジェクトに示す定数。</target>
        </trans-unit>
        <trans-unit id="778c619722f209ee6e231b3b6a638d87619250b4" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is an ASCII stream. A &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object is provided as an extension of the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class defined in the &lt;code&gt;SyncFactory&lt;/code&gt; static factory SPI mechanism.</source>
          <target state="translated">指定されたパラメーターがASCIIストリームであることを &lt;code&gt;RowSetReaderImpl&lt;/code&gt; オブジェクトに示す定数。 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; オブジェクトはの拡張として提供される &lt;code&gt;SyncProvider&lt;/code&gt; に定義された抽象クラス &lt;code&gt;SyncFactory&lt;/code&gt; が静的ファクトリSPI機構。</target>
        </trans-unit>
        <trans-unit id="05fd9daac8cc107ac74022f8e6a431daa3310be1" translate="yes" xml:space="preserve">
          <source>A constant pool index does not refer to a UTF-8 entry</source>
          <target state="translated">定数プールインデックスはUTF-8項目を参照しません。</target>
        </trans-unit>
        <trans-unit id="6b17d0eb335bec84834c46dc6002183dea1ae9ba" translate="yes" xml:space="preserve">
          <source>A constant pool index is out of bounds.</source>
          <target state="translated">定数のプールインデックスは範囲外です。</target>
        </trans-unit>
        <trans-unit id="b83da880fe62fcf431fa2b80b966091f24e6c21a" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is a general Unicode string.</source>
          <target state="translated">属性の値が一般的なUnicode文字列であることを示す、 &lt;code&gt;getAttributeDataType&lt;/code&gt; によって返される定数。</target>
        </trans-unit>
        <trans-unit id="7e64a1186b69b4d433ea2f6a6e2d5e8963e0b2a9" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is a string representation of a decimal floating-point number.</source>
          <target state="translated">&lt;code&gt;getAttributeDataType&lt;/code&gt; によって返される定数で、属性の値が10進浮動小数点数の文字列表現であることを示します。</target>
        </trans-unit>
        <trans-unit id="ab34a89f1927a75ce08a7f8cd06fc8745928ab5f" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is a string representation of a double-precision decimal floating-point number.</source>
          <target state="translated">属性の値が倍精度の10進浮動小数点数の文字列表現であることを示す、 &lt;code&gt;getAttributeDataType&lt;/code&gt; によって返される定数。</target>
        </trans-unit>
        <trans-unit id="1dc9d55cfd527b1e9a8494e21da70bbc73b4a0ca" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is a string representation of an integer.</source>
          <target state="translated">属性の値が整数の文字列表現であることを示す、 &lt;code&gt;getAttributeDataType&lt;/code&gt; によって返される定数。</target>
        </trans-unit>
        <trans-unit id="b055c29b61d38048b3db837907dda4788b82beaf" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is one of the boolean values 'true' or 'false'.</source>
          <target state="translated">属性の値がブール値「true」または「false」のいずれかであることを示す &lt;code&gt;getAttributeDataType&lt;/code&gt; によって返される定数。</target>
        </trans-unit>
        <trans-unit id="9c7921138692ad31aed03ed87a2c18d7559fa6f8" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is one of the boolean values 'true' or 'false'. Attribute values of type DATATYPE_BOOLEAN should be marked as enumerations, and the permitted values should be the string literal values &quot;TRUE&quot; or &quot;FALSE&quot;, although a plugin may also recognise lower or mixed case equivalents.</source>
          <target state="translated">属性の値がブール値「true」または「false」のいずれかであることを示す、 &lt;code&gt;getAttributeDataType&lt;/code&gt; によって返される定数。タイプDATATYPE_BOOLEANの属性値は列挙型としてマークする必要があり、許可される値は文字列リテラル値「TRUE」または「FALSE」である必要がありますが、プラグインでは小文字または大文字と小文字が混在するものも認識される場合があります。</target>
        </trans-unit>
        <trans-unit id="566bce4b46c648ea6165b9faa10f160b834017b7" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set a range of values.</source>
          <target state="translated">&lt;code&gt;getAttributeValueType&lt;/code&gt; および &lt;code&gt;getObjectValueType&lt;/code&gt; によって返される定数で、属性またはユーザーオブジェクトに値の範囲を設定できることを示します。</target>
        </trans-unit>
        <trans-unit id="536b4870053ade20fbb0746b24a7e47d769bbe9e" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set a range of values. Both the minimum and maximum values of the range are exclusive. It is recommended that ranges of integers be inclusive on both ends, and that exclusive ranges be used only for floating-point data.</source>
          <target state="translated">&lt;code&gt;getAttributeValueType&lt;/code&gt; および &lt;code&gt;getObjectValueType&lt;/code&gt; によって返される定数で、属性またはユーザーオブジェクトに値の範囲を設定できることを示します。範囲の最小値と最大値はどちらも排他的です。整数の範囲は両端で包括的であり、排他的範囲は浮動小数点データにのみ使用されることが推奨されます。</target>
        </trans-unit>
        <trans-unit id="0b757473db53368a2ef12d97dd50853ce089eaf3" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set a range of values. Both the minimum and maximum values of the range are inclusive. It is recommended that ranges of integers be inclusive on both ends, and that exclusive ranges be used only for floating-point data.</source>
          <target state="translated">&lt;code&gt;getAttributeValueType&lt;/code&gt; および &lt;code&gt;getObjectValueType&lt;/code&gt; によって返される定数で、属性またはユーザーオブジェクトに値の範囲を設定できることを示します。範囲の最小値と最大値の両方が含まれます。整数の範囲は両端で包括的であり、排他的範囲は浮動小数点データにのみ使用されることが推奨されます。</target>
        </trans-unit>
        <trans-unit id="2983d9a4c8f0070d53ebb95bf9e8a10f5fc81489" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set a single, arbitrary value.</source>
          <target state="translated">&lt;code&gt;getAttributeValueType&lt;/code&gt; および &lt;code&gt;getObjectValueType&lt;/code&gt; によって返される定数で、属性またはユーザーオブジェクトに単一の任意の値を設定できることを示します。</target>
        </trans-unit>
        <trans-unit id="7dd2ee1ceefd12d472ba5e7d72f427399d68f9c3" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set one of a number of enumerated values.</source>
          <target state="translated">&lt;code&gt;getAttributeValueType&lt;/code&gt; および &lt;code&gt;getObjectValueType&lt;/code&gt; によって返される定数で、属性またはユーザーオブジェクトがいくつかの列挙値の1つに設定される可能性があることを示します。</target>
        </trans-unit>
        <trans-unit id="0700eebf90e2b9b27717269ad4daa5ca6eaf8941" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set one of a number of enumerated values. In the case of attributes, these values are &lt;code&gt;String&lt;/code&gt;s; for objects, they are &lt;code&gt;Object&lt;/code&gt;s implementing a given class or interface.</source>
          <target state="translated">&lt;code&gt;getAttributeValueType&lt;/code&gt; および &lt;code&gt;getObjectValueType&lt;/code&gt; によって返される定数であり、属性またはユーザーオブジェクトが多数の列挙値の1つに設定されることを示します。属性の場合、これらの値は &lt;code&gt;String&lt;/code&gt; です。オブジェクトの場合、特定のクラスまたはインターフェースを実装する &lt;code&gt;Object&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2ec6012b51cd19cccf833c92407daa945b1a03e9" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a list or array of values.</source>
          <target state="translated">&lt;code&gt;getAttributeValueType&lt;/code&gt; および &lt;code&gt;getObjectValueType&lt;/code&gt; によって返される定数で、属性またはユーザーオブジェクトが値のリストまたは配列に設定される可能性があることを示します。</target>
        </trans-unit>
        <trans-unit id="01a4565fe7f6e19d3ab523d52b2e3d4022290f1b" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a list or array of values. In the case of attributes, the list will consist of whitespace-separated values within a &lt;code&gt;String&lt;/code&gt;; for objects, an array will be used.</source>
          <target state="translated">&lt;code&gt;getAttributeValueType&lt;/code&gt; および &lt;code&gt;getObjectValueType&lt;/code&gt; によって返される定数で、属性またはユーザーオブジェクトを値のリストまたは配列に設定できることを示します。属性の場合、リストは &lt;code&gt;String&lt;/code&gt; 内の空白で区切られた値で構成されます。オブジェクトの場合、配列が使用されます。</target>
        </trans-unit>
        <trans-unit id="80334552b3aebe7d8c7a06d06da04a1a3568a90f" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a range of values.</source>
          <target state="translated">&lt;code&gt;getAttributeValueType&lt;/code&gt; および &lt;code&gt;getObjectValueType&lt;/code&gt; によって返される定数で、属性またはユーザーオブジェクトが値の範囲に設定される可能性があることを示します。</target>
        </trans-unit>
        <trans-unit id="1b6629d90c3b11283881b0238ff02a1f68047efe" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a range of values. The maximum (but not the minimum) value of the range is inclusive.</source>
          <target state="translated">&lt;code&gt;getAttributeValueType&lt;/code&gt; および &lt;code&gt;getObjectValueType&lt;/code&gt; によって返される定数で、属性またはユーザーオブジェクトが値の範囲に設定される可能性があることを示します。範囲の最大値（最小値ではない）は両端を含みます。</target>
        </trans-unit>
        <trans-unit id="772f7ec75791ea05130b58e948867c25d7e5fe15" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a range of values. The minimum (but not the maximum) value of the range is inclusive.</source>
          <target state="translated">&lt;code&gt;getAttributeValueType&lt;/code&gt; および &lt;code&gt;getObjectValueType&lt;/code&gt; によって返される定数で、属性またはユーザーオブジェクトが値の範囲に設定される可能性があることを示します。範囲の最小値（最大値ではない）は両端を含みます。</target>
        </trans-unit>
        <trans-unit id="17abfcd5d959c22775f6b62852cd890d8ecc15d8" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element may not have any children.</source>
          <target state="translated">要素に子がない可能性があることを示すために &lt;code&gt;getChildPolicy&lt;/code&gt; によって返される定数。</target>
        </trans-unit>
        <trans-unit id="1514659e4abf19076195fdc813b9841606a061a9" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element may not have any children. In other words, it is required to be a leaf node.</source>
          <target state="translated">要素に子がないことを示すために &lt;code&gt;getChildPolicy&lt;/code&gt; によって返される定数。つまり、リーフノードである必要があります。</target>
        </trans-unit>
        <trans-unit id="b270fd2569573332c2d9e007ae63e71559dcca3c" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have a sequence of instances of any of its legal child elements.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; によって返される定数で、要素にその正当な子要素のいずれかのインスタンスのシーケンスが必要であることを示します。</target>
        </trans-unit>
        <trans-unit id="0ca721acca6c2ee0f535842aac83a6e8e73d7b2b" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have a sequence of instances of any of its legal child elements. In DTD terms, the contents of the element are defined by a sequence &lt;code&gt;(a|b|c|d|...)*&lt;/code&gt;.</source>
          <target state="translated">要素がその有効な子要素のインスタンスのシーケンスを持つ必要があることを示すために &lt;code&gt;getChildPolicy&lt;/code&gt; によって返される定数。DTD用語では、要素のコンテンツはシーケンス &lt;code&gt;(a|b|c|d|...)*&lt;/code&gt; によって定義されます。</target>
        </trans-unit>
        <trans-unit id="349d171edd3b592ceb01cdb21161389dea4db0db" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have a single instance of each of its legal child elements, in order.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; によって返される定数。要素には、その正当な子要素のそれぞれの単一のインスタンスが順番に含まれている必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="25307fe80f331b10c26c8b31d0ddbea83dc5eb8e" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have a single instance of each of its legal child elements, in order. In DTD terms, the contents of the element are defined by a sequence &lt;code&gt;a,b,c,d,...&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; によって返される定数で、要素はその有効な子要素それぞれの単一のインスタンスを順番に持つ必要があることを示します。DTDの用語では、要素のコンテンツはシーケンス &lt;code&gt;a,b,c,d,...&lt;/code&gt; によって定義されます。</target>
        </trans-unit>
        <trans-unit id="62b7bc8bdc42c3f8bc44d2fd527e686dc6e82432" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or more instances of its unique legal child element.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; によって返される定数で、要素に固有の正当な子要素のインスタンスが0個以上必要であることを示します。</target>
        </trans-unit>
        <trans-unit id="d2a5ac0abac4124c2691f77efb666b9cd9be6e2f" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or more instances of its unique legal child element. In DTD terms, the contents of the element are defined by a starred expression &lt;code&gt;a*&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; によって返される定数で、要素がその一意の正当な子要素のインスタンスを0個以上持つ必要があることを示します。DTD用語では、要素のコンテンツは、スター付きの式 &lt;code&gt;a*&lt;/code&gt; によって定義されます。</target>
        </trans-unit>
        <trans-unit id="55f9aa4fe76b8c0ceece5c17f4e27e5156875298" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or one children, selected from among its legal child elements.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; によって返される定数で、有効な子要素の中から選択された、要素に0個または1個の子が必要であることを示します。</target>
        </trans-unit>
        <trans-unit id="25a43eb749e0d4acdb5a2d1a97249b39d470bc43" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or one children, selected from among its legal child elements. In DTD terms, the contents of the element are defined by a selection &lt;code&gt;a|b|c|d|...&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; から返される定数で、有効な子要素の中から選択された子がゼロまたは1つ必要であることを示します。DTD用語では、要素のコンテンツは、選択 &lt;code&gt;a|b|c|d|...&lt;/code&gt; によって定義されます。</target>
        </trans-unit>
        <trans-unit id="2158f87b8f92b42c073e896d0d5528d518ffe0e1" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or one instance of each of its legal child elements, in order.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; によって返される定数で、要素には、その正当な子要素のそれぞれのインスタンスが順番に0または1つ必要であることを示します。</target>
        </trans-unit>
        <trans-unit id="94f4855baee14b64d1efe591ef1cabf5480c75ae" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or one instance of each of its legal child elements, in order. In DTD terms, the contents of the element are defined by a sequence &lt;code&gt;a?,b?,c?,d?,...&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; によって返される定数で、要素はその有効な子要素それぞれのインスタンスを0個または1個持つ必要があることを示します。DTD用語では、要素のコンテンツはシーケンス &lt;code&gt;a?,b?,c?,d?,...&lt;/code&gt; によって定義されます。</target>
        </trans-unit>
        <trans-unit id="d25737fce32883b6c144ed133d1e77a8c2421fac" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate the absence of a user object.</source>
          <target state="translated">&lt;code&gt;getObjectValueType&lt;/code&gt; によって返される定数で、ユーザーオブジェクトがないことを示します。</target>
        </trans-unit>
        <trans-unit id="9958a5b1e7e52f53c31a2b6e90641f49be5abe83" translate="yes" xml:space="preserve">
          <source>A constant that indicates a horizontal scroll bar.</source>
          <target state="translated">水平スクロールバーを示す定数。</target>
        </trans-unit>
        <trans-unit id="2a664bb96fbace79e8921afd5d417d9d8f0a8b80" translate="yes" xml:space="preserve">
          <source>A constant that indicates a vertical scroll bar.</source>
          <target state="translated">垂直スクロールバーを示す定数。</target>
        </trans-unit>
        <trans-unit id="9f3b1eee9cafae4150875d4465c302deee8b24bd" translate="yes" xml:space="preserve">
          <source>A constant that represents the days field.</source>
          <target state="translated">日のフィールドを表す定数。</target>
        </trans-unit>
        <trans-unit id="d50083a6b811310bfcdc88e734bb35da6b1077b7" translate="yes" xml:space="preserve">
          <source>A constant that represents the hours field.</source>
          <target state="translated">時間フィールドを表す定数。</target>
        </trans-unit>
        <trans-unit id="b17282818a9c4ae66351fe225c2aa4c623204a5c" translate="yes" xml:space="preserve">
          <source>A constant that represents the minutes field.</source>
          <target state="translated">分フィールドを表す定数。</target>
        </trans-unit>
        <trans-unit id="485fdf7fd1644fefedcc79390cca96901956c9af" translate="yes" xml:space="preserve">
          <source>A constant that represents the months field.</source>
          <target state="translated">月のフィールドを表す定数。</target>
        </trans-unit>
        <trans-unit id="bfeb5d39997aa2b454607fa8adcb25d4cf79ebfb" translate="yes" xml:space="preserve">
          <source>A constant that represents the seconds field.</source>
          <target state="translated">秒フィールドを表す定数。</target>
        </trans-unit>
        <trans-unit id="b48e61a5313fb72ce52d866513c4f3214262890d" translate="yes" xml:space="preserve">
          <source>A constant that represents the years field.</source>
          <target state="translated">年のフィールドを表す定数。</target>
        </trans-unit>
        <trans-unit id="5abebda073f15c5667612d5bce665df5e30f7ecd" translate="yes" xml:space="preserve">
          <source>A constant to determine whether the node is accepted, rejected, or skipped, as defined above.</source>
          <target state="translated">上記で定義されているように、ノードが受け入れられたか、拒否されたか、スキップされたかを判断するための定数。</target>
        </trans-unit>
        <trans-unit id="a9bb52a1a0861cec5571123e621ea88ed9320640" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt; or &lt;code&gt;setCompressionMode&lt;/code&gt; to enable a feature for future writes.</source>
          <target state="translated">将来の書き込みのために機能を有効にするために、 &lt;code&gt;setTilingMode&lt;/code&gt; や &lt;code&gt;setCompressionMode&lt;/code&gt; などのメソッドに渡される可能性のある定数値。</target>
        </trans-unit>
        <trans-unit id="35d4eb9703c2210692f0d6cfb2192f616bfd7eae" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt; or &lt;code&gt;setCompressionMode&lt;/code&gt; to enable a feature for future writes. That is, when this mode is set the stream will be tiled or compressed according to additional information supplied to the corresponding &lt;code&gt;set&lt;/code&gt; methods in this class and retrievable from the corresponding &lt;code&gt;get&lt;/code&gt; methods. Note that this mode is not supported for progressive output.</source>
          <target state="translated">今後の書き込みで機能を有効にするために、 &lt;code&gt;setTilingMode&lt;/code&gt; や &lt;code&gt;setCompressionMode&lt;/code&gt; などのメソッドに渡される定数値。つまり、このモードが設定されると、このクラスの対応する &lt;code&gt;set&lt;/code&gt; メソッドに提供され、対応する &lt;code&gt;get&lt;/code&gt; メソッドから取得できる追加情報に従って、ストリームがタイリングまたは圧縮されます。このモードはプログレッシブ出力ではサポートされていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="559ccbc6f19c151bdc59b4dda6613806012db4fa" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, and &lt;code&gt;setCompressionMode&lt;/code&gt; to disable a feature for future writes.</source>
          <target state="translated">などのメソッドに渡すことのできる定数値 &lt;code&gt;setTilingMode&lt;/code&gt; 、 &lt;code&gt;setProgressiveMode&lt;/code&gt; 、及び &lt;code&gt;setCompressionMode&lt;/code&gt; の今後の書き込みのための機能を無効にします。</target>
        </trans-unit>
        <trans-unit id="5e3bdadffec9d389f0e6f442f4a8826a156f5a94" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, and &lt;code&gt;setCompressionMode&lt;/code&gt; to disable a feature for future writes. That is, when this mode is set the stream will &lt;b&gt;not&lt;/b&gt; be tiled, progressive, or compressed, and the relevant accessor methods will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">などのメソッドに渡すことのできる定数値 &lt;code&gt;setTilingMode&lt;/code&gt; 、 &lt;code&gt;setProgressiveMode&lt;/code&gt; 、及び &lt;code&gt;setCompressionMode&lt;/code&gt; の今後の書き込みのための機能を無効にします。このモードは、ストリームがします設定されている場合であること、&lt;b&gt;ではない&lt;/b&gt;、プログレッシブタイル張り、または圧縮すること、および関連するアクセサメソッドがスローされます &lt;code&gt;IllegalStateException&lt;/code&gt; が。</target>
        </trans-unit>
        <trans-unit id="3ab70b2d758691d0eea3255e3dfcc38b6fab8268" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, and &lt;code&gt;setCompressionMode&lt;/code&gt; to enable that feature for future writes.</source>
          <target state="translated">などのメソッドに渡すことのできる定数値 &lt;code&gt;setTilingMode&lt;/code&gt; 、 &lt;code&gt;setProgressiveMode&lt;/code&gt; 、及び &lt;code&gt;setCompressionMode&lt;/code&gt; の今後の書き込みのためにその機能を有効にします。</target>
        </trans-unit>
        <trans-unit id="c8f7898366002f517660648a2793ba433862bbdf" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, and &lt;code&gt;setCompressionMode&lt;/code&gt; to enable that feature for future writes. That is, when this mode is enabled the stream will be tiled, progressive, or compressed according to a sensible default chosen internally by the writer in a plug-in dependent way, and the relevant accessor methods will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setTilingMode&lt;/code&gt; 、 &lt;code&gt;setProgressiveMode&lt;/code&gt; 、および &lt;code&gt;setCompressionMode&lt;/code&gt; などのメソッドに渡して、将来の書き込みでその機能を有効にする定数値。つまり、このモードが有効な場合、ストリームは、プラグインに依存する方法でライターによって内部的に選択された適切なデフォルトに従ってタイル、プログレッシブ、または圧縮され、関連するアクセサーメソッドは &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="67a60cf03e51978f5cc896a2789a14cf370f1371" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, or &lt;code&gt;setCompressionMode&lt;/code&gt; to enable that feature for future writes.</source>
          <target state="translated">などのメソッドに渡すことのできる定数値 &lt;code&gt;setTilingMode&lt;/code&gt; 、 &lt;code&gt;setProgressiveMode&lt;/code&gt; 、または &lt;code&gt;setCompressionMode&lt;/code&gt; の今後の書き込みのためにその機能を有効にします。</target>
        </trans-unit>
        <trans-unit id="ee2714f160a481212e68cea2fc3d76b6fb1a8d6a" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, or &lt;code&gt;setCompressionMode&lt;/code&gt; to enable that feature for future writes. That is, when this mode is enabled the stream will be tiled, progressive, or compressed based on the contents of stream and/or image metadata passed into the write operation, and any relevant accessor methods will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">今後の書き込みでその機能を有効にするために、 &lt;code&gt;setTilingMode&lt;/code&gt; 、 &lt;code&gt;setProgressiveMode&lt;/code&gt; 、または &lt;code&gt;setCompressionMode&lt;/code&gt; などのメソッドに渡される定数値。つまり、このモードが有効になっている場合、ストリームは、書き込み操作に渡されたストリームおよび/または画像メタデータのコンテンツに基づいてタイリング、プログレッシブ、または圧縮され、関連するアクセサーメソッドは &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="7279f33ba91d89c119cc784b7519e6b9ac4694d5" translate="yes" xml:space="preserve">
          <source>A constructor consumes an extra argument for the object which is being constructed.</source>
          <target state="translated">コンストラクタは、構築されるオブジェクトの余分な引数を消費します。</target>
        </trans-unit>
        <trans-unit id="57902652588e33d2d2877e5267fcd4fb79931dc7" translate="yes" xml:space="preserve">
          <source>A constructor with a single argument of type &lt;code&gt;Comparator&lt;/code&gt;, which creates an empty sorted map sorted according to the specified comparator.</source>
          <target state="translated">タイプ &lt;code&gt;Comparator&lt;/code&gt; の単一の引数を持つコンストラクター。指定されたコンパレーターに従ってソートされた空のソート済みマップを作成します。</target>
        </trans-unit>
        <trans-unit id="25c8b9f747c078b778797b44d629f2869067a88a" translate="yes" xml:space="preserve">
          <source>A constructor with a single argument of type &lt;code&gt;Map&lt;/code&gt;, which creates a new map with the same key-value mappings as its argument, sorted according to the keys' natural ordering.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 型の単一の引数を持つコンストラクター。これは、引数と同じキーと値のマッピングを持つ新しいマップを作成し、キーの自然な順序に従って並べ替えます。</target>
        </trans-unit>
        <trans-unit id="e3fc63f43b8fbf5b83832243411d77bf7df6af1f" translate="yes" xml:space="preserve">
          <source>A constructor with a single argument of type &lt;code&gt;SortedMap&lt;/code&gt;, which creates a new sorted map with the same key-value mappings and the same ordering as the input sorted map.</source>
          <target state="translated">タイプ &lt;code&gt;SortedMap&lt;/code&gt; の単一の引数を持つコンストラクター。これは、入力ソートマップと同じキーと値のマッピングと同じ順序で新しいソートマップを作成します。</target>
        </trans-unit>
        <trans-unit id="bb2ddb390065f595439cee7ee8032949a41e280e" translate="yes" xml:space="preserve">
          <source>A constructor.</source>
          <target state="translated">コンストラクタです。</target>
        </trans-unit>
        <trans-unit id="f1c2c74a3242b5c113a78d6363133d53c47f8c7a" translate="yes" xml:space="preserve">
          <source>A container class which implements automatic horizontal and/or vertical scrolling for a single child component.</source>
          <target state="translated">単一の子コンポーネントのための自動水平スクロールおよび/または垂直スクロールを実装するコンテナクラス。</target>
        </trans-unit>
        <trans-unit id="bfeb7ff9e9012b81d288e07e149e676bb15c69a9" translate="yes" xml:space="preserve">
          <source>A container class which implements automatic horizontal and/or vertical scrolling for a single child component. The display policy for the scrollbars can be set to:</source>
          <target state="translated">単一の子コンポーネントのための自動水平スクロールや垂直スクロールを実装するコンテナクラス。スクロールバーの表示ポリシーを設定することができます。</target>
        </trans-unit>
        <trans-unit id="033a41394c724546f3c08acfb5335c17f8e39383" translate="yes" xml:space="preserve">
          <source>A container for data of a specific primitive type.</source>
          <target state="translated">特定のプリミティブ型のデータを格納するコンテナ。</target>
        </trans-unit>
        <trans-unit id="0fe5ece952a897ad3f011797cc5800337da1ccf1" translate="yes" xml:space="preserve">
          <source>A container is a component that can contain components and other containers. A container can also have a layout manager that controls the visual placement of components in the container. The AWT package contains several layout manager classes and an interface for building your own layout manager. See Container and LayoutManager for more information.</source>
          <target state="translated">コンテナは、コンポーネントと他のコンテナを含むことができるコンポーネントです。コンテナは、コンテナ内のコンポーネントの視覚的な配置を制御するレイアウトマネージャを持つこともできます。AWTパッケージには、いくつかのレイアウトマネージャクラスと、独自のレイアウトマネージャを作成するためのインターフェースが含まれています。詳しくは、コンテナとレイアウトマネージャを参照してください。</target>
        </trans-unit>
        <trans-unit id="d301613cbda6d20a56bf5fe3261d32c8415661bf" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;double&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 値を含む場合と含まない場合があるコンテナオブジェクト。</target>
        </trans-unit>
        <trans-unit id="2e040a2204bf84dfc907e22c7186ff1dd00d1f3d" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;double&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If no value is present, the object is considered</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 値を含む場合と含まない場合があるコンテナオブジェクト。値が存在する場合、 &lt;code&gt;isPresent()&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; を返します。値が存在しない場合、オブジェクトは考慮されます</target>
        </trans-unit>
        <trans-unit id="4ff6f48ffb79030c6e6d4e15b3600b41ee558686" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;double&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;getAsDouble()&lt;/code&gt; will return the value.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 値を含む場合と含まない場合があるコンテナオブジェクト。値が存在する場合、 &lt;code&gt;isPresent()&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; を返し、 &lt;code&gt;getAsDouble()&lt;/code&gt; は値を返します。</target>
        </trans-unit>
        <trans-unit id="494737a0966b7218e4ec36fd115c3df7489bf2ab" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 値を含む場合と含まない場合があるコンテナオブジェクト。</target>
        </trans-unit>
        <trans-unit id="0a04a3c3154a4d845ca222b91180f4f9964d877d" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;int&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;getAsInt()&lt;/code&gt; will return the value.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 値を含む場合と含まない場合があるコンテナオブジェクト。値が存在する場合、 &lt;code&gt;isPresent()&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; を返し、 &lt;code&gt;getAsInt()&lt;/code&gt; は値を返します。</target>
        </trans-unit>
        <trans-unit id="f4dcdc898b7b16e8f53dc7fbd5332c85cd925ef5" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;long&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; 値を含む場合と含まない場合があるコンテナオブジェクト。</target>
        </trans-unit>
        <trans-unit id="2e8bc20ff92caf071e1a187b92d99c84b7060ce0" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;long&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If no value is present, the object is considered</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; 値を含む場合と含まない場合があるコンテナオブジェクト。値が存在する場合、 &lt;code&gt;isPresent()&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; を返します。値が存在しない場合、オブジェクトは考慮されます</target>
        </trans-unit>
        <trans-unit id="7ba6650f4dd8bcb2a89191e9f85ba776ac9fbf51" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;long&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;getAsLong()&lt;/code&gt; will return the value.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; 値を含む場合と含まない場合があるコンテナオブジェクト。値が存在する場合、 &lt;code&gt;isPresent()&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; を返し、 &lt;code&gt;getAsLong()&lt;/code&gt; は値を返します。</target>
        </trans-unit>
        <trans-unit id="5c434ceb61c7062bc7fbbc566df4838fccea2d8a" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a non-&lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 以外の値を含む場合と含まない場合があるコンテナオブジェクト。</target>
        </trans-unit>
        <trans-unit id="5ea105fdcda73f70cb854a64b62b86d90652415a" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a non-&lt;code&gt;null&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If no value is present, the object is considered</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 以外の値を含む場合と含まない場合があるコンテナオブジェクト。値が存在する場合、 &lt;code&gt;isPresent()&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; を返します。値が存在しない場合、オブジェクトは考慮されます</target>
        </trans-unit>
        <trans-unit id="ea0d5d0324a2c3445923b7e686fe31c2a89e78f7" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a non-null value.</source>
          <target state="translated">非 null 値を含むこともあれば含まないこともあるコンテナオブジェクト。</target>
        </trans-unit>
        <trans-unit id="c89988fd4f74ec363ece708cf6ca9597a2151ab0" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a non-null value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;get()&lt;/code&gt; will return the value.</source>
          <target state="translated">null以外の値が含まれる場合と含まれない場合があるコンテナオブジェクト。値が存在する場合、 &lt;code&gt;isPresent()&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; を返し、 &lt;code&gt;get()&lt;/code&gt; は値を返します。</target>
        </trans-unit>
        <trans-unit id="8c3f2db677ea0ff39d4e792525d50b18477b99aa" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain an &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 値を含む場合と含まない場合があるコンテナオブジェクト。</target>
        </trans-unit>
        <trans-unit id="48a83d02c6e3550c5cd54b82f9175944ccf50df2" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain an &lt;code&gt;int&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If no value is present, the object is considered</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 値を含む場合と含まない場合があるコンテナオブジェクト。値が存在する場合、 &lt;code&gt;isPresent()&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; を返します。値が存在しない場合、オブジェクトは考慮されます</target>
        </trans-unit>
        <trans-unit id="b91c8230c80b13f05800d49bab2e18616b06eedc" translate="yes" xml:space="preserve">
          <source>A container used to create a multiple-document interface or a virtual desktop.</source>
          <target state="translated">複数文書のインターフェイスや仮想デスクトップを作成するために使用するコンテナ。</target>
        </trans-unit>
        <trans-unit id="460e235cc5d693c9143dca60521c64fd21d3afb3" translate="yes" xml:space="preserve">
          <source>A container used to create a multiple-document interface or a virtual desktop. You create &lt;code&gt;JInternalFrame&lt;/code&gt; objects and add them to the &lt;code&gt;JDesktopPane&lt;/code&gt;. &lt;code&gt;JDesktopPane&lt;/code&gt; extends &lt;code&gt;JLayeredPane&lt;/code&gt; to manage the potentially overlapping internal frames. It also maintains a reference to an instance of &lt;code&gt;DesktopManager&lt;/code&gt; that is set by the UI class for the current look and feel (L&amp;amp;F). Note that &lt;code&gt;JDesktopPane&lt;/code&gt; does not support borders.</source>
          <target state="translated">マルチドキュメントインターフェイスまたは仮想デスクトップを作成するために使用されるコンテナ。 &lt;code&gt;JInternalFrame&lt;/code&gt; オブジェクトを作成し、それらを &lt;code&gt;JDesktopPane&lt;/code&gt; に追加します。 &lt;code&gt;JDesktopPane&lt;/code&gt; は、 &lt;code&gt;JLayeredPane&lt;/code&gt; を拡張して、重複する可能性のある内部フレームを管理します。また、現在のルックアンドフィール（L＆F）のUIクラスによって設定される &lt;code&gt;DesktopManager&lt;/code&gt; のインスタンスへの参照を維持します。 &lt;code&gt;JDesktopPane&lt;/code&gt; は境界線をサポートしていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="759245797f4e5d9025f0f817bf669b092afd8bdd" translate="yes" xml:space="preserve">
          <source>A content type consists of a media type (referred to as the primary type), a subtype, and optional parameters. See &lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt; for details on the syntax of a MIME type.</source>
          <target state="translated">コンテンツタイプは、メディアタイプ（プライマリタイプと呼ばれる）、サブタイプ、およびオプションのパラメーターで構成されます。参照してください。&lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt; MIMEタイプの構文の詳細については。</target>
        </trans-unit>
        <trans-unit id="31d867731596f79566c79cb5d48b9bcbf97a9cc3" translate="yes" xml:space="preserve">
          <source>A context consists of name-to-object bindings. The Binding class represents such a binding. It consists of a name and an object. The &lt;code&gt;Context.listBindings()&lt;/code&gt; method returns an enumeration of Binding.</source>
          <target state="translated">コンテキストは、名前とオブジェクトのバインディングで構成されています。Bindingクラスはそのようなバインディングを表します。名前とオブジェクトで構成されます。 &lt;code&gt;Context.listBindings()&lt;/code&gt; メソッドは、バインディングの列挙を返します。</target>
        </trans-unit>
        <trans-unit id="6fe4f651e32a551af03604ca60b8a21ff254ecfc" translate="yes" xml:space="preserve">
          <source>A context consists of name-to-object bindings. The NameClassPair class represents the name and the class of the bound object. It consists of a name and a string representing the package-qualified class name.</source>
          <target state="translated">コンテキストは、名前とオブジェクトのバインドで構成されます。NameClassPair クラスは、バインドされたオブジェクトの名前とクラスを表します。これは、名前とパッケージ修飾されたクラス名を表す文字列で構成されています。</target>
        </trans-unit>
        <trans-unit id="6b1263a6521cddb7203c713b91d8a90e7ac7f9e3" translate="yes" xml:space="preserve">
          <source>A context for resolving URLs with the scheme id &lt;code&gt;scheme&lt;/code&gt;; &lt;code&gt;null&lt;/code&gt; if the factory for creating the context is not found.</source>
          <target state="translated">スキームID &lt;code&gt;scheme&lt;/code&gt; URLを解決するためのコンテキスト。コンテキストを作成するためのファクトリが見つからない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7377c77308502e8c96858c12fe1aaf5cda4abe1" translate="yes" xml:space="preserve">
          <source>A context instance's connection request controls are retrieved using the method &lt;code&gt;getConnectControls()&lt;/code&gt;.</source>
          <target state="translated">コンテキストインスタンスの接続要求コントロールは、メソッド &lt;code&gt;getConnectControls()&lt;/code&gt; を使用して取得されます。</target>
        </trans-unit>
        <trans-unit id="7dcb16da6df7e43ac4ec30b2d1186f29508041d6" translate="yes" xml:space="preserve">
          <source>A context instance's request controls are retrieved using the method &lt;code&gt;getRequestControls()&lt;/code&gt;.</source>
          <target state="translated">コンテキストインスタンスのリクエストコントロールは、 &lt;code&gt;getRequestControls()&lt;/code&gt; メソッドを使用して取得されます。</target>
        </trans-unit>
        <trans-unit id="b3986a2d2458e187acf1c4e8bd0f8e686f85ea03" translate="yes" xml:space="preserve">
          <source>A control character: &lt;code&gt;[\x00-\x1F\x7F]&lt;/code&gt;</source>
          <target state="translated">制御文字： &lt;code&gt;[\x00-\x1F\x7F]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f98f93af0f8e1282f6442fa10efae582e9be0974" translate="yes" xml:space="preserve">
          <source>A control character: &lt;code&gt;\p{gc=Cc}&lt;/code&gt;</source>
          <target state="translated">制御文字： &lt;code&gt;\p{gc=Cc}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03f0ef9add23fa9fe6cf9ea49f54ef4dd6fddc66" translate="yes" xml:space="preserve">
          <source>A control object created using &lt;code&gt;ctl&lt;/code&gt;; or &lt;code&gt;ctl&lt;/code&gt; if a control object cannot be created using the algorithm described above.</source>
          <target state="translated">&lt;code&gt;ctl&lt;/code&gt; を使用して作成された制御オブジェクト。または &lt;code&gt;ctl&lt;/code&gt; の制御対象は、上述のアルゴリズムを使用して作成することができない場合。</target>
        </trans-unit>
        <trans-unit id="15fd2bad66ad41394b33f2026df97fb9742abb62" translate="yes" xml:space="preserve">
          <source>A control object from the current input method, or null.</source>
          <target state="translated">現在の入力メソッドからの制御オブジェクト、またはnull。</target>
        </trans-unit>
        <trans-unit id="a96bcedbc8cade8ee1583d1bef494bb5a4cd2784" translate="yes" xml:space="preserve">
          <source>A control that displays a set of hierarchical data as an outline.</source>
          <target state="translated">階層データの集合をアウトラインとして表示するコントロール。</target>
        </trans-unit>
        <trans-unit id="c4e331080c956ba6b483e5d9420bef3aff651730" translate="yes" xml:space="preserve">
          <source>A control that displays a set of hierarchical data as an outline. You can find task-oriented documentation and examples of using trees in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">階層データのセットをアウトラインとして表示するコントロール。タスク指向のドキュメントとツリーの使用例は、&lt;em&gt;Javaチュートリアルの&lt;/em&gt;セクションにある&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;ツリーの使用方法」にあります&lt;/a&gt;&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6c76468063f6a347a02b2e829bca94d83e038db4" translate="yes" xml:space="preserve">
          <source>A controller that controls the newly created layer</source>
          <target state="translated">新しく作成されたレイヤーを制御するコントローラ</target>
        </trans-unit>
        <trans-unit id="e8b5bb1e0993770f9414abaef919d2a5802810a9" translate="yes" xml:space="preserve">
          <source>A convenience class for simplifying interaction with TIFF native image metadata.</source>
          <target state="translated">TIFF ネイティブ画像メタデータとのインタラクションを簡単にするための便利なクラス。</target>
        </trans-unit>
        <trans-unit id="1a75c57f730d220aff1a3d906e24e8f446b9eb34" translate="yes" xml:space="preserve">
          <source>A convenience class for simplifying interaction with TIFF native image metadata. A TIFF image metadata tree represents an Image File Directory (IFD) from a TIFF 6.0 stream. An IFD consists of a number of IFD Entries each of which associates an identifying tag number with a compatible value. A &lt;code&gt;TIFFDirectory&lt;/code&gt; instance corresponds to an IFD and contains a set of &lt;a href=&quot;tifffield&quot;&gt;&lt;code&gt;TIFFField&lt;/code&gt;&lt;/a&gt;s each of which corresponds to an IFD Entry in the IFD.</source>
          <target state="translated">TIFFネイティブ画像メタデータとの相互作用を簡素化するための便利なクラス。TIFF画像メタデータツリーは、TIFF 6.0ストリームからの画像ファイルディレクトリ（IFD）を表します。IFDは、多数のIFDエントリで構成され、各エントリは識別タグ番号を互換性のある値に関連付けます。A &lt;code&gt;TIFFDirectory&lt;/code&gt; のIFDへのインスタンスの対応との組含ま&lt;a href=&quot;tifffield&quot;&gt; &lt;code&gt;TIFFField&lt;/code&gt; &lt;/a&gt; IFDでIFDエントリに対応それぞれが秒。</target>
        </trans-unit>
        <trans-unit id="f8a647654bd9827401aa4fa86ac7705f850e64b2" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;v.visit(av, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;v.visit(av, null)&lt;/code&gt; と同等の便利なメソッド。</target>
        </trans-unit>
        <trans-unit id="16a529aa63d7b6f13c0e894161babc3d250fb7d3" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;v.visit(e, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;v.visit(e, null)&lt;/code&gt; と同等の便利なメソッド。</target>
        </trans-unit>
        <trans-unit id="ebffac1d76e29602ecbccd02cb486db670466a22" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;v.visit(t, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;v.visit(t, null)&lt;/code&gt; と同等の便利なメソッド。</target>
        </trans-unit>
        <trans-unit id="c7e2bb4b27f4ec5751c6bdc3e1a96d4fc5026a5b" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;visit(av, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;visit(av, null)&lt;/code&gt; と同等の便利なメソッド。</target>
        </trans-unit>
        <trans-unit id="e027c55d6f63aefa9109af389bfa002788c9fa27" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;visit(e, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;visit(e, null)&lt;/code&gt; と同等の便利なメソッド。</target>
        </trans-unit>
        <trans-unit id="f950fa78fa10c16997c1f6fbd3be463e7b7ace85" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;visit(t, null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;visit(t, null)&lt;/code&gt; と同等の便利なメソッド。</target>
        </trans-unit>
        <trans-unit id="99b2a2e379217d8a0d4b8ef3dd5abf7e7a7ebf16" translate="yes" xml:space="preserve">
          <source>A convenience method for looking up a property value.</source>
          <target state="translated">資産価値を調べるための便利な方法。</target>
        </trans-unit>
        <trans-unit id="cbc44c2a4d64a62243581006ccd8548476d7bd75" translate="yes" xml:space="preserve">
          <source>A convenience method for looking up a property value. It is equivalent to:</source>
          <target state="translated">資産価値を調べるための便利な方法。に相当します。</target>
        </trans-unit>
        <trans-unit id="dd485d4e5579dedc9b9b1bfb030340f3998e0248" translate="yes" xml:space="preserve">
          <source>A convenience method for storing up a property value.</source>
          <target state="translated">プロパティ値を格納するための便利な方法です。</target>
        </trans-unit>
        <trans-unit id="1e18895b1e56a88f711cf08b63e41a03fe2225fc" translate="yes" xml:space="preserve">
          <source>A convenience method for storing up a property value. It is equivalent to:</source>
          <target state="translated">プロパティ値を格納するための便利なメソッド。に相当します。</target>
        </trans-unit>
        <trans-unit id="54ae1ece57ee9ffdae9f1667cbe9a12df084c4eb" translate="yes" xml:space="preserve">
          <source>A convenience method that acts as if &lt;code&gt;LSSerializer.write&lt;/code&gt; was called with a &lt;code&gt;LSOutput&lt;/code&gt; with no encoding specified and &lt;code&gt;LSOutput.systemId&lt;/code&gt; set to the &lt;code&gt;uri&lt;/code&gt; argument.</source>
          <target state="translated">かのように作用する便利な方法 &lt;code&gt;LSSerializer.write&lt;/code&gt; を用いて呼び出された &lt;code&gt;LSOutput&lt;/code&gt; ないエンコーディング指定とで &lt;code&gt;LSOutput.systemId&lt;/code&gt; はに設定 &lt;code&gt;uri&lt;/code&gt; 引数。</target>
        </trans-unit>
        <trans-unit id="7c27733947ef3a444f59481b63f3bb1fc034a487" translate="yes" xml:space="preserve">
          <source>A convenience method that calls &lt;code&gt;read(b, 0, b.length)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;read(b, 0, b.length)&lt;/code&gt; を呼び出す簡易メソッド。</target>
        </trans-unit>
        <trans-unit id="807e70668dbaedff20cf9b8a517a79a6404816d3" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in mode &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt;, with no header or footer text.</source>
          <target state="translated">印刷ダイアログを表示し、この &lt;code&gt;JTable&lt;/code&gt; を &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt; モードでヘッダーまたはフッターテキストなしで印刷する便利なメソッド。</target>
        </trans-unit>
        <trans-unit id="ceedfd41667c1bda072569a382c479a19e63d68e" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in mode &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt;, with no header or footer text. A modal progress dialog, with an abort option, will be shown for the duration of printing.</source>
          <target state="translated">印刷ダイアログを表示し、この &lt;code&gt;JTable&lt;/code&gt; を &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt; モードでヘッダーまたはフッターテキストなしで印刷する便利なメソッド。印刷中は、中止オプション付きのモーダル進行状況ダイアログが表示されます。</target>
        </trans-unit>
        <trans-unit id="6223c755bd1a3f99a9d9956cc7466b6caf4b3fcb" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in the given printing mode, with no header or footer text.</source>
          <target state="translated">印刷ダイアログを表示し、この &lt;code&gt;JTable&lt;/code&gt; を特定の印刷モードでヘッダーまたはフッターテキストなしで印刷する便利な方法。</target>
        </trans-unit>
        <trans-unit id="877633eadeea377c10e3fbe8b2d649f1bd5706e3" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in the given printing mode, with no header or footer text. A modal progress dialog, with an abort option, will be shown for the duration of printing.</source>
          <target state="translated">印刷ダイアログを表示し、この &lt;code&gt;JTable&lt;/code&gt; を特定の印刷モードでヘッダーまたはフッターテキストなしで印刷する便利な方法。印刷中は、中止オプション付きのモーダル進行状況ダイアログが表示されます。</target>
        </trans-unit>
        <trans-unit id="ecfe982eaffed33abd7f4d8a496ed6b0dcae69c5" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in the given printing mode, with the specified header and footer text.</source>
          <target state="translated">印刷ダイアログを表示し、指定されたヘッダーとフッターのテキストを使用して、指定された印刷モードでこの &lt;code&gt;JTable&lt;/code&gt; を印刷する便利なメソッド。</target>
        </trans-unit>
        <trans-unit id="797ddd61d31da4855ab5fb584acf4b15d2543b26" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in the given printing mode, with the specified header and footer text. A modal progress dialog, with an abort option, will be shown for the duration of printing.</source>
          <target state="translated">印刷ダイアログを表示し、指定されたヘッダーとフッターのテキストを使用して、指定された印刷モードでこの &lt;code&gt;JTable&lt;/code&gt; を印刷する便利なメソッド。印刷中は、中止オプション付きのモーダル進行状況ダイアログが表示されます。</target>
        </trans-unit>
        <trans-unit id="283a99263b3a7a4ec3eb5efe9c38b580f6c5ced4" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a byte.</source>
          <target state="translated">パラメータをバイトで返す便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="28c9fbd2ef30bbeae2eb3befcc763aba1fa2e0eb" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a byte. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Byte&lt;/code&gt;.</source>
          <target state="translated">パラメータをバイトとして返す便利なメソッド。パラメータが &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;Byte&lt;/code&gt; ない場合、例外がスローされます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
