<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="838273e4d4c3afa680e7aa83ec4385dfa9583961" translate="yes" xml:space="preserve">
          <source>This job media sheets attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">このジョブメディアシートの属性の値と &lt;code&gt;object&lt;/code&gt; の値は同じです。</target>
        </trans-unit>
        <trans-unit id="de3deada5978343c7ae28bc382eaaa4eb7708954" translate="yes" xml:space="preserve">
          <source>This job media sheets completed attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">このジョブメディアシートの完了した属性の値と &lt;code&gt;object&lt;/code&gt; の値は同じです。</target>
        </trans-unit>
        <trans-unit id="3afb14ae1e4acf07802173b3536b7644e4debc03" translate="yes" xml:space="preserve">
          <source>This job media sheets supported attribute's members and &lt;code&gt;object&lt;/code&gt;'s members are the same.</source>
          <target state="translated">このジョブメディアシートでサポートされる属性のメンバーと &lt;code&gt;object&lt;/code&gt; のメンバーは同じです。</target>
        </trans-unit>
        <trans-unit id="8a08e608bc977b9b4c6038b4fce830163c750672" translate="yes" xml:space="preserve">
          <source>This job message from operator attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="translated">オペレーター属性のロケールと &lt;code&gt;object&lt;/code&gt; のロケールからのこのジョブメッセージは同じです。</target>
        </trans-unit>
        <trans-unit id="f81935108ca14648fd5fad2a9b90d65078401d36" translate="yes" xml:space="preserve">
          <source>This job message from operator attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="translated">演算子属性の基になる文字列と &lt;code&gt;object&lt;/code&gt; の基になる文字列からのこのジョブメッセージは同じです。</target>
        </trans-unit>
        <trans-unit id="8573b3ffcede7e8f93e17d6c8fa2e94259da36e3" translate="yes" xml:space="preserve">
          <source>This job name attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="translated">このジョブ名属性のロケールと &lt;code&gt;object&lt;/code&gt; のロケールは同じです。</target>
        </trans-unit>
        <trans-unit id="0cfe10df41cbc7462d16efc16bfb69a3ecea7ed1" translate="yes" xml:space="preserve">
          <source>This job name attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="translated">このジョブ名属性の基になる文字列と &lt;code&gt;object&lt;/code&gt; の基になる文字列は同じです。</target>
        </trans-unit>
        <trans-unit id="220af8d7a532aa9546a31fa0bbdde8d8f26c2ba7" translate="yes" xml:space="preserve">
          <source>This job originating user name attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="translated">このジョブの発信元のユーザー名属性のロケールと &lt;code&gt;object&lt;/code&gt; のロケールは同じです。</target>
        </trans-unit>
        <trans-unit id="1a933d56df8aa13ad4b227fc833465d27d5a99ef" translate="yes" xml:space="preserve">
          <source>This job originating user name attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="translated">このジョブを生成するユーザー名属性の基になる文字列と &lt;code&gt;object&lt;/code&gt; の基になる文字列は同じです。</target>
        </trans-unit>
        <trans-unit id="acec6d0fcdfe71ac2627f8c9ce9ce5d904d8207b" translate="yes" xml:space="preserve">
          <source>This job priority attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">このジョブ優先順位属性の値と &lt;code&gt;object&lt;/code&gt; の値は同じです。</target>
        </trans-unit>
        <trans-unit id="d30066dbd2bd1b6a5282fdcccde9d53715f165f6" translate="yes" xml:space="preserve">
          <source>This job priority supported attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">このジョブ優先順位でサポートされている属性の値と &lt;code&gt;object&lt;/code&gt; の値は同じです。</target>
        </trans-unit>
        <trans-unit id="d08bff79d7efea86b07bb2462680f681632d9396" translate="yes" xml:space="preserve">
          <source>This key's channel</source>
          <target state="translated">このキーのチャンネル</target>
        </trans-unit>
        <trans-unit id="c9ff12ff91ae98cc554261912b7101e293f6eae9" translate="yes" xml:space="preserve">
          <source>This key's interest set</source>
          <target state="translated">このキーの関心度セット</target>
        </trans-unit>
        <trans-unit id="484578ab393992ca6b35a256c926024ac4dc1ee9" translate="yes" xml:space="preserve">
          <source>This key's ready-operation set</source>
          <target state="translated">このキーの操作可能セット</target>
        </trans-unit>
        <trans-unit id="2bd50f3229021f6ed4b5ed6fc741de067a259d3f" translate="yes" xml:space="preserve">
          <source>This key's selector</source>
          <target state="translated">このキーのセレクタ</target>
        </trans-unit>
        <trans-unit id="73baf2dac208aeeefd239b512ce83c57bf5fb818" translate="yes" xml:space="preserve">
          <source>This language model follows a</source>
          <target state="translated">この言語モデルは</target>
        </trans-unit>
        <trans-unit id="02083baa37ca03ae48a795e1863460256795cea9" translate="yes" xml:space="preserve">
          <source>This layout consists of the following.</source>
          <target state="translated">このレイアウトは以下のように構成されています。</target>
        </trans-unit>
        <trans-unit id="08bafb4de8fa150a066e013b957eac47b5b87da5" translate="yes" xml:space="preserve">
          <source>This layout consists of three components:</source>
          <target state="translated">このレイアウトは3つの構成要素で構成されています。</target>
        </trans-unit>
        <trans-unit id="d06378025803f7e834e7fbe6de083b43033b9704" translate="yes" xml:space="preserve">
          <source>This layout manager handles the 'standard' layout of combo boxes.</source>
          <target state="translated">このレイアウトマネージャはコンボボックスの「標準」レイアウトを処理します。</target>
        </trans-unit>
        <trans-unit id="d28749f47b48e5f7b74eb805a1dfbfae1fd36db9" translate="yes" xml:space="preserve">
          <source>This layout manager handles the 'standard' layout of combo boxes. It puts the arrow button to the right and the editor to the left. If there is no editor it still keeps the arrow button to the right. This public inner class should be treated as protected. Instantiate it only within subclasses of &lt;code&gt;BasicComboBoxUI&lt;/code&gt;.</source>
          <target state="translated">このレイアウトマネージャーは、コンボボックスの「標準」レイアウトを処理します。矢印ボタンを右に、エディターを左に配置します。エディタがない場合でも、矢印ボタンは右側に保持されます。このパブリック内部クラスは、保護されているものとして扱う必要があります。 &lt;code&gt;BasicComboBoxUI&lt;/code&gt; のサブクラス内でのみインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="a9a4fc2ed95a342a8fda1a8cc53202e20b93bc6e" translate="yes" xml:space="preserve">
          <source>This leniency value is overwritten by a call to &lt;a href=&quot;#setCalendar(java.util.Calendar)&quot;&gt;&lt;code&gt;setCalendar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このリーニエンシー値は、&lt;a href=&quot;#setCalendar(java.util.Calendar)&quot;&gt; &lt;code&gt;setCalendar()&lt;/code&gt; の&lt;/a&gt;呼び出しによって上書きされます。</target>
        </trans-unit>
        <trans-unit id="4c2c3e90746d07e042f7de1d3edae0977de2cab2" translate="yes" xml:space="preserve">
          <source>This leniency value is overwritten by a call to &lt;a href=&quot;dateformat#setCalendar-java.util.Calendar-&quot;&gt;&lt;code&gt;setCalendar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この寛大さの値は、&lt;a href=&quot;dateformat#setCalendar-java.util.Calendar-&quot;&gt; &lt;code&gt;setCalendar()&lt;/code&gt; の&lt;/a&gt;呼び出しによって上書きされます。</target>
        </trans-unit>
        <trans-unit id="1e3f08a3b3746f9d959d955d6e0b9530fd999f6a" translate="yes" xml:space="preserve">
          <source>This list is always available even if the types have not yet been created or loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6745b06683b74107be10e019a2fb743b65af4636" translate="yes" xml:space="preserve">
          <source>This list is for drawing the current item in the combo box.</source>
          <target state="translated">コンボボックスに現在の項目を描画するためのリストです。</target>
        </trans-unit>
        <trans-unit id="9976da2e9bb71e18b5f5ad51885abc1487df76aa" translate="yes" xml:space="preserve">
          <source>This list must be modifiable, but need not be resizable.</source>
          <target state="translated">このリストは変更可能である必要がありますが、サイズ変更可能である必要はありません。</target>
        </trans-unit>
        <trans-unit id="268b58557765ce29bab85b86825bb0e18a07fee9" translate="yes" xml:space="preserve">
          <source>This list of classes allowed by filter should correspond to the transitive closure of the credentials class (or classes) used by the installed &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxauthenticator&quot;&gt;JMXAuthenticator&lt;/a&gt; associated with the &lt;a href=&quot;rmiserver&quot;&gt;RMIServer&lt;/a&gt; implementation. If the attribute is not set then any class is deemed acceptable.</source>
          <target state="translated">フィルタで許可されるこのクラスのリストは、&lt;a href=&quot;rmiserver&quot;&gt;RMIServer&lt;/a&gt;実装に関連付けられたインストール済みの&lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxauthenticator&quot;&gt;JMXAuthenticator&lt;/a&gt;によって使用される資格情報クラス（または複数のクラス）の推移閉包に対応している必要があります。属性が設定されていない場合、どのクラスも受け入れ可能と見なされます。</target>
        </trans-unit>
        <trans-unit id="f295b81d72a3d3fa2b6c144b63ebbfa16bf7f622" translate="yes" xml:space="preserve">
          <source>This list of classes should correspond to the transitive closure of the credentials class (or classes) used by the installed &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxauthenticator&quot;&gt;JMXAuthenticator&lt;/a&gt; associated with the &lt;a href=&quot;rmiserver&quot;&gt;RMIServer&lt;/a&gt; implementation.</source>
          <target state="translated">このクラスのリストは、&lt;a href=&quot;rmiserver&quot;&gt;RMIServer&lt;/a&gt;実装に関連付けられたインストール済みの&lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxauthenticator&quot;&gt;JMXAuthenticator&lt;/a&gt;によって使用される資格情報クラス（または複数のクラス）の推移閉包に対応している必要があります。</target>
        </trans-unit>
        <trans-unit id="7a0beb373abb5775c863c42ecb09405681eca1d1" translate="yes" xml:space="preserve">
          <source>This list of types is called the &quot;iteration variable types&quot; (&lt;code&gt;(V...)&lt;/code&gt;).</source>
          <target state="translated">このタイプのリストは、「反復変数タイプ」（ &lt;code&gt;(V...)&lt;/code&gt; ）と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="1e7f6bd81cf6613199477a515c77c4800a751e69" translate="yes" xml:space="preserve">
          <source>This listener changes the selected item as you move the mouse over the list.</source>
          <target state="translated">このリスナーは、リスト上でマウスを動かすと選択された項目を変更します。</target>
        </trans-unit>
        <trans-unit id="42c3c2d1be2a2a7ed0178b74fadcc23eac38981c" translate="yes" xml:space="preserve">
          <source>This listener changes the selected item as you move the mouse over the list. The selection change is not committed to the model, this is for user feedback only.</source>
          <target state="translated">このリスナーは、リスト上でマウスを動かすと選択された項目を変更します。選択の変更はモデルにコミットされません。</target>
        </trans-unit>
        <trans-unit id="acdd89278f6bce413066df6772389d19f2897bb9" translate="yes" xml:space="preserve">
          <source>This listener checks to see if the key event isn't a navigation key.</source>
          <target state="translated">このリスナーは、キーイベントがナビゲーションキーでないかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="34f40c5fc67700c7e2b5adcbf643209ef2211fc7" translate="yes" xml:space="preserve">
          <source>This listener checks to see if the key event isn't a navigation key. If it finds a key event that wasn't a navigation key it dispatches it to JComboBox.selectWithKeyChar() so that it can do type-ahead. This public inner class should be treated as protected. Instantiate it only within subclasses of &lt;code&gt;BasicComboBoxUI&lt;/code&gt;.</source>
          <target state="translated">このリスナーは、キーイベントがナビゲーションキーではないかどうかを確認します。ナビゲーションキーではないキーイベントが見つかった場合は、それをJComboBox.selectWithKeyChar（）にディスパッチして、先行入力を実行できるようにします。このパブリック内部クラスは、保護されているものとして扱う必要があります。 &lt;code&gt;BasicComboBoxUI&lt;/code&gt; のサブクラス内でのみインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="0a26d371d4c74d935c25dc08050ad6c810a85df0" translate="yes" xml:space="preserve">
          <source>This listener hides the popup when the focus is lost.</source>
          <target state="translated">このリスナーは、フォーカスが失われたときにポップアップを非表示にします。</target>
        </trans-unit>
        <trans-unit id="8b3aeea66d948f2b69fe0a07136db681ee0576d3" translate="yes" xml:space="preserve">
          <source>This listener hides the popup when the focus is lost. It also repaints when focus is gained or lost. This public inner class should be treated as protected. Instantiate it only within subclasses of &lt;code&gt;BasicComboBoxUI&lt;/code&gt;.</source>
          <target state="translated">このリスナーは、フォーカスが失われるとポップアップを非表示にします。また、フォーカスが取得または失われたときに再描画します。このパブリック内部クラスは、保護されているものとして扱う必要があります。 &lt;code&gt;BasicComboBoxUI&lt;/code&gt; のサブクラス内でのみインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="57e34331cc044959216ba18c57386c3256dde613" translate="yes" xml:space="preserve">
          <source>This listener hides the popup when the mouse is released in the list.</source>
          <target state="translated">このリスナーは、リスト内でマウスが離されたときにポップアップを非表示にします。</target>
        </trans-unit>
        <trans-unit id="5be5e232c1d560f1f29e0df14979e0389aa3d44e" translate="yes" xml:space="preserve">
          <source>This listener watches for bound properties that have changed in the combo box.</source>
          <target state="translated">このリスナーは、コンボボックスで変更されたバインドされたプロパティを監視します。</target>
        </trans-unit>
        <trans-unit id="44b5bb7938d309b66d68d99dff9a37c740da0388" translate="yes" xml:space="preserve">
          <source>This listener watches for changes in the &lt;code&gt;ComboBoxModel&lt;/code&gt;.</source>
          <target state="translated">このリスナーは、 &lt;code&gt;ComboBoxModel&lt;/code&gt; の変更を監視します。</target>
        </trans-unit>
        <trans-unit id="1eeb1a09db6fd54765101be694c1e8a38eef2939" translate="yes" xml:space="preserve">
          <source>This listener watches for changes to the selection in the combo box.</source>
          <target state="translated">このリスナーはコンボボックスの選択範囲の変更を監視します。</target>
        </trans-unit>
        <trans-unit id="28569be1ee52d5cb80cb1c29a43380e03dd05b9a" translate="yes" xml:space="preserve">
          <source>This listener watches for dragging and updates the current selection in the list if it is dragging over the list.</source>
          <target state="translated">このリスナーはドラッグを監視し、リストの上をドラッグしている場合は、リスト内の現在の選択範囲を更新します。</target>
        </trans-unit>
        <trans-unit id="ae4f32d527341dc4907dea7f8ce1ed40f9011233" translate="yes" xml:space="preserve">
          <source>This loads the rules for the specified zone ID. The provider implementation must validate that the zone ID is valid and available, throwing a &lt;code&gt;ZoneRulesException&lt;/code&gt; if it is not. The result of the method in the valid case depends on the caching flag.</source>
          <target state="translated">これにより、指定されたゾーンIDのルールが読み込まれます。プロバイダーの実装は、ゾーンIDが有効で利用可能であることを &lt;code&gt;ZoneRulesException&lt;/code&gt; 、そうでない場合はZoneRulesExceptionをスローする必要があります。有効な場合のメソッドの結果は、キャッシュフラグによって異なります。</target>
        </trans-unit>
        <trans-unit id="39fc7580f18990809098420829cd6895c80668b4" translate="yes" xml:space="preserve">
          <source>This lock allows both readers and writers to reacquire read or write locks in the style of a &lt;a href=&quot;reentrantlock&quot;&gt;&lt;code&gt;ReentrantLock&lt;/code&gt;&lt;/a&gt;. Non-reentrant readers are not allowed until all write locks held by the writing thread have been released.</source>
          <target state="translated">このロックにより、リーダーとライターの両方が&lt;a href=&quot;reentrantlock&quot;&gt; &lt;code&gt;ReentrantLock&lt;/code&gt; の&lt;/a&gt;スタイルで読み取りまたは書き込みロックを再取得できます。再入不可能なリーダーは、書き込みスレッドによって保持されているすべての書き込みロックが解放されるまで許可されません。</target>
        </trans-unit>
        <trans-unit id="4f17de85a2537643f6e3bf98800bfe94fe213e92" translate="yes" xml:space="preserve">
          <source>This lock supports a maximum of 2147483647 recursive locks by the same thread. Attempts to exceed this limit result in &lt;a href=&quot;../../../lang/error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; throws from locking methods.</source>
          <target state="translated">このロックは、同じスレッドによる最大2147483647の再帰的ロックをサポートします。この制限を超えようとすると、ロックメソッドから&lt;a href=&quot;../../../lang/error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="f8a9c4c5c4bd80a6e77a206482c5c4028f099b12" translate="yes" xml:space="preserve">
          <source>This lock supports a maximum of 65535 recursive write locks and 65535 read locks. Attempts to exceed these limits result in &lt;a href=&quot;../../../lang/error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; throws from locking methods.</source>
          <target state="translated">このロックは、最大65535の再帰書き込みロックと65535読み取りロックをサポートします。これらの制限を超えようとすると、ロックメソッドから&lt;a href=&quot;../../../lang/error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="498ae751748b7f332cb118e1a386ca5e28361c2e" translate="yes" xml:space="preserve">
          <source>This low-level event is generated by a component object (such as a List) when the component is moved, resized, rendered invisible, or made visible again. The event is passed to every &lt;code&gt;ComponentListener&lt;/code&gt; or &lt;code&gt;ComponentAdapter&lt;/code&gt; object which registered to receive such events using the component's &lt;code&gt;addComponentListener&lt;/code&gt; method. (&lt;code&gt;ComponentAdapter&lt;/code&gt; objects implement the &lt;code&gt;ComponentListener&lt;/code&gt; interface.) Each such listener object gets this &lt;code&gt;ComponentEvent&lt;/code&gt; when the event occurs.</source>
          <target state="translated">この低レベルのイベントは、コンポーネントが移動、サイズ変更、非表示にされる、または再び表示されるときに、コンポーネントオブジェクト（リストなど）によって生成されます。イベントは、コンポーネントの &lt;code&gt;addComponentListener&lt;/code&gt; メソッドを使用してそのようなイベントを受信するように登録されたすべての &lt;code&gt;ComponentListener&lt;/code&gt; または &lt;code&gt;ComponentAdapter&lt;/code&gt; オブジェクトに渡されます。 （ &lt;code&gt;ComponentAdapter&lt;/code&gt; オブジェクトは &lt;code&gt;ComponentListener&lt;/code&gt; インターフェイスを実装します。）このような各リスナーオブジェクトは、イベントが発生したときにこの &lt;code&gt;ComponentEvent&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="477272bd4fdf8e37d0735c27fcd1c11d4225a5b8" translate="yes" xml:space="preserve">
          <source>This low-level event is generated by a component object (such as a text field) when a key is pressed, released, or typed. The event is passed to every &lt;code&gt;KeyListener&lt;/code&gt; or &lt;code&gt;KeyAdapter&lt;/code&gt; object which registered to receive such events using the component's &lt;code&gt;addKeyListener&lt;/code&gt; method. (&lt;code&gt;KeyAdapter&lt;/code&gt; objects implement the &lt;code&gt;KeyListener&lt;/code&gt; interface.) Each such listener object gets this &lt;code&gt;KeyEvent&lt;/code&gt; when the event occurs.</source>
          <target state="translated">この低レベルのイベントは、キーが押されたとき、離されたとき、または入力されたときに、コンポーネントオブジェクト（テキストフィールドなど）によって生成されます。イベントは、コンポーネントの &lt;code&gt;addKeyListener&lt;/code&gt; メソッドを使用してそのようなイベントを受信するように登録されたすべての &lt;code&gt;KeyListener&lt;/code&gt; または &lt;code&gt;KeyAdapter&lt;/code&gt; オブジェクトに渡されます。 （ &lt;code&gt;KeyAdapter&lt;/code&gt; オブジェクトは &lt;code&gt;KeyListener&lt;/code&gt; インターフェースを実装します。）このような各リスナーオブジェクトは、イベントが発生したときにこの &lt;code&gt;KeyEvent&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="b0cb36b21d4b9f38e8a58fba2c8242ad9bc81a3c" translate="yes" xml:space="preserve">
          <source>This low-level event is generated by a component object for:</source>
          <target state="translated">この低レベルイベントは、コンポーネントオブジェクトによって生成されます。</target>
        </trans-unit>
        <trans-unit id="13b76ceac28c9fbc7c77c51f61ab6569a4a53efb" translate="yes" xml:space="preserve">
          <source>This low-level event is generated by a container object (such as a Panel) when a component is added to it or removed from it. The event is passed to every &lt;code&gt;ContainerListener&lt;/code&gt; or &lt;code&gt;ContainerAdapter&lt;/code&gt; object which registered to receive such events using the component's &lt;code&gt;addContainerListener&lt;/code&gt; method. (&lt;code&gt;ContainerAdapter&lt;/code&gt; objects implement the &lt;code&gt;ContainerListener&lt;/code&gt; interface.) Each such listener object gets this &lt;code&gt;ContainerEvent&lt;/code&gt; when the event occurs.</source>
          <target state="translated">この低レベルのイベントは、コンポーネントがコンテナオブジェクトに追加されたり、コンテナオブジェクトから削除されたりしたときに、コンテナオブジェクト（Panelなど）によって生成されます。イベントは、コンポーネントの &lt;code&gt;addContainerListener&lt;/code&gt; メソッドを使用してそのようなイベントを受信するように登録されたすべての &lt;code&gt;ContainerListener&lt;/code&gt; または &lt;code&gt;ContainerAdapter&lt;/code&gt; オブジェクトに渡されます。（ &lt;code&gt;ContainerAdapter&lt;/code&gt; オブジェクトは &lt;code&gt;ContainerListener&lt;/code&gt; インターフェースを実装します。）このような各リスナーオブジェクトは、イベントが発生したときにこの &lt;code&gt;ContainerEvent&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="5f0ec25fdf5dc877766df703b934928f678dda94" translate="yes" xml:space="preserve">
          <source>This makes it possible for a MBeanServer implementation to wrap another MBeanServer implementation, in order to implement, e.g, security checks, or to prevent access to the actual MBeanServer implementation by returning a pointer to a wrapping object.</source>
          <target state="translated">これにより、MBeanServer の実装が他の MBeanServer の実装をラップすることが可能になり、セキュリティチェックなどを実装したり、ラッピングオブジェクトへのポインタを返すことで、実際の MBeanServer の実装へのアクセスを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="ad52a127b76c9d66c4665870a7f2db773ae8df39" translate="yes" xml:space="preserve">
          <source>This makes it possible to decouple configuration from KeyStore object creation and e.g. delay a password prompt until it is needed.</source>
          <target state="translated">これにより、設定をKeyStoreオブジェクトの作成から切り離し、例えばパスワードのプロンプトが必要になるまで遅延させることが可能になります。</target>
        </trans-unit>
        <trans-unit id="9c6eed4b0728c771888a382dcda28f5cacc2ab26" translate="yes" xml:space="preserve">
          <source>This manageable usage threshold attribute is designed for monitoring the increasing trend of memory usage with low overhead. Usage threshold may not be appropriate for some memory pools. For example, a generational garbage collector, a common garbage collection algorithm used in many Java virtual machine implementations, manages two or more generations segregating objects by age. Most of the objects are allocated in the &lt;em&gt;youngest generation&lt;/em&gt; (say a nursery memory pool). The nursery memory pool is designed to be filled up and collecting the nursery memory pool will free most of its memory space since it is expected to contain mostly short-lived objects and mostly are unreachable at garbage collection time. In this case, it is more appropriate for the nursery memory pool not to support a usage threshold. In addition, if the cost of an object allocation in one memory pool is very low (for example, just atomic pointer exchange), the Java virtual machine would probably not support the usage threshold for that memory pool since the overhead in comparing the usage with the threshold is higher than the cost of object allocation.</source>
          <target state="translated">この管理可能な使用量しきい値属性は、オーバーヘッドの少ないメモリ使用量の増加傾向を監視するために設計されています。使用量のしきい値は、一部のメモリプールには適切でない場合があります。たとえば、多くのJava仮想マシンの実装で使用される一般的なガベージコレクションアルゴリズムである世代別ガベージコレクターは、年齢別にオブジェクトを分離する2つ以上の世代を管理します。ほとんどのオブジェクトは&lt;em&gt;最も若い世代に&lt;/em&gt;割り当てられています&lt;em&gt;&lt;/em&gt;（保育園のメモリプールなど）。ナーサリメモリプールはいっぱいになるように設計されており、ナーサリメモリプールを収集すると、ほとんどのメモリスペースが解放されます。これは、ほとんどが短期間のオブジェクトを含み、ガベージコレクション時にほとんど到達できないためです。この場合、ナーサリメモリプールは使用量のしきい値をサポートしない方が適切です。さらに、1つのメモリプールでのオブジェクト割り当てのコストが非常に低い場合（たとえば、アトミックポインタ交換のみ）、Java仮想マシンはおそらくそのメモリプールの使用量しきい値をサポートしません。しきい値は、オブジェクト割り当てのコストよりも高くなります。</target>
        </trans-unit>
        <trans-unit id="35481535999e219226ed7260bb8d577155df60a6" translate="yes" xml:space="preserve">
          <source>This mandatory attribute specifies one or more &lt;code&gt;.jar&lt;/code&gt; files containing MBeans or other resources used by the MBean to be obtained. One of the &lt;code&gt;.jar&lt;/code&gt; files must contain the file specified by the &lt;code&gt;CODE&lt;/code&gt; or &lt;code&gt;OBJECT&lt;/code&gt; attribute. If archivelist contains more than one file:</source>
          <target state="translated">この必須属性は、取得するMBeanが使用するMBeanまたはその他のリソースを含む1つ以上の &lt;code&gt;.jar&lt;/code&gt; ファイルを指定します。 &lt;code&gt;.jar&lt;/code&gt; ファイルの1つには、 &lt;code&gt;CODE&lt;/code&gt; または &lt;code&gt;OBJECT&lt;/code&gt; 属性で指定されたファイルが含まれている必要があります。archivelistに複数のファイルが含まれている場合：</target>
        </trans-unit>
        <trans-unit id="87c7d28cf318caf3d2eb42565e1c5809c7163593" translate="yes" xml:space="preserve">
          <source>This map and its views have a predictable iteration order, namely the order that keys were inserted into the map, as with &lt;a href=&quot;../linkedhashmap&quot;&gt;&lt;code&gt;LinkedHashMap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このマップとそのビューには、&lt;a href=&quot;../linkedhashmap&quot;&gt; &lt;code&gt;LinkedHashMap&lt;/code&gt; の&lt;/a&gt;場合と同様に、予測可能な反復順序、つまりキーがマップに挿入された順序があります。</target>
        </trans-unit>
        <trans-unit id="f5524cba1eecadcebc8c35911aae88ca196ee038" translate="yes" xml:space="preserve">
          <source>This map contains a mapping of the IDs that is in line with TZDB 2005r and later, where 'EST', 'MST' and 'HST' map to IDs which do not include daylight savings.</source>
          <target state="translated">このマップには、TZDB 2005r以降に準拠したIDのマッピングが含まれており、'EST'、'MST'、'HST'はサマータイムを含まないIDにマッピングされています。</target>
        </trans-unit>
        <trans-unit id="911207d2c588140463ecb8b52de79e69fce22112" translate="yes" xml:space="preserve">
          <source>This maps as follows:</source>
          <target state="translated">この地図は以下のようになっています。</target>
        </trans-unit>
        <trans-unit id="a5a13882774a3d179decff4a601406ffbfefc228" translate="yes" xml:space="preserve">
          <source>This matcher</source>
          <target state="translated">このマッチャー</target>
        </trans-unit>
        <trans-unit id="3f464a6ed2b31d27d45078a00dadf8011534d911" translate="yes" xml:space="preserve">
          <source>This matcher's state should not be modified during execution of the returned stream's pipeline. The returned stream's source &lt;code&gt;Spliterator&lt;/code&gt; is &lt;em&gt;fail-fast&lt;/em&gt; and will, on a best-effort basis, throw a &lt;a href=&quot;../concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt; if such modification is detected.</source>
          <target state="translated">このマッチャーの状態は、返されたストリームのパイプラインの実行中に変更しないでください。返されたストリームのソース &lt;code&gt;Spliterator&lt;/code&gt; は&lt;em&gt;フェイルファストで&lt;/em&gt;あり、そのような変更が検出された場合、ベストエフォートベースで&lt;a href=&quot;../concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="30411f00314cf455c61ae6720a79e4171750cf70" translate="yes" xml:space="preserve">
          <source>This matrix can be used for color transforms in the forward direction of the profile--from the profile color space to the CIEXYZ PCS.</source>
          <target state="translated">この行列は、プロファイルの順方向の色変換に使用することができます--プロファイル色空間からCIEXYZ PCSへ。</target>
        </trans-unit>
        <trans-unit id="84b9d1706f6d64171d5d05c25027addb6e865427" translate="yes" xml:space="preserve">
          <source>This may be -1 if the column or parameter index is unknown, in which case the &lt;code&gt;parameter&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt; fields should be ignored.</source>
          <target state="translated">列またはパラメーターのインデックスが不明な場合、これは-1になる可能性があり &lt;code&gt;parameter&lt;/code&gt; その場合、パラメーターおよび &lt;code&gt;read&lt;/code&gt; フィールドは無視する必要があります。</target>
        </trans-unit>
        <trans-unit id="0b307bc548b8ee4a0055cb8dedb40c30e8dec645" translate="yes" xml:space="preserve">
          <source>This may be used in conjunction with &lt;a href=&quot;#UNDERLINE&quot;&gt;&lt;code&gt;UNDERLINE&lt;/code&gt;&lt;/a&gt; if desired. The primary purpose is for use by input methods. Other use of these underlines for simple ornamentation might confuse users.</source>
          <target state="translated">これは、必要に応じて&lt;a href=&quot;#UNDERLINE&quot;&gt; &lt;code&gt;UNDERLINE&lt;/code&gt; &lt;/a&gt;と組み合わせて使用できます。主な目的は、入力メソッドで使用することです。単純な装飾のためにこれらの下線を他に使用すると、ユーザーを混乱させる可能性があります。</target>
        </trans-unit>
        <trans-unit id="a9b4a4dab6a1c51f10cbe63188a2e2e3478a17cb" translate="yes" xml:space="preserve">
          <source>This may change the behavior or disable execution of other parts of the program. If a provider subsequently requested by the program has been removed, execution may fail. Also, if the removed provider is not explicitly requested by the rest of the program, but it would normally be the provider chosen when a cryptography service is requested (due to its previous order in the list of providers), a different provider will be chosen instead, or no suitable provider will be found, thereby resulting in program failure.</source>
          <target state="translated">これにより、プログラムの他の部分の動作が変更されたり、実行できなくなったりすることがあります。後にプログラムから要求されたプロバイダが削除された場合、実行に失敗する可能性があります。また、削除されたプロバイダがプログラムの他の部分から明示的に要求されたわけではなく、暗号サービスが要求されたときに通常はそのプロバイダが選択されるはずのものであった場合 (プロバイダのリストの中で前の順番になっているため)、代わりに別のプロバイダが選択されたり、適切なプロバイダが見つからなかったりして、プログラムの実行に失敗することがあります。</target>
        </trans-unit>
        <trans-unit id="e25c3d88b5316836314b17b8a0985e4bf4894b4f" translate="yes" xml:space="preserve">
          <source>This may change the selection if the current selection is not valid for the new mode. For example, if three TreePaths are selected when the mode is changed to &lt;code&gt;SINGLE_TREE_SELECTION&lt;/code&gt;, only one TreePath will remain selected. It is up to the particular implementation to decide what TreePath remains selected.</source>
          <target state="translated">現在の選択が新しいモードで有効でない場合、これにより選択が変更される可能性があります。たとえば、モードが &lt;code&gt;SINGLE_TREE_SELECTION&lt;/code&gt; に変更されたときに3つのTreePathが選択された場合、1つのTreePathのみが選択されたままになります。どのTreePathを選択したままにするかを決定するのは、特定の実装次第です。</target>
        </trans-unit>
        <trans-unit id="7a8156d5a9cb5ada74a83aa742bb0991ff39d16b" translate="yes" xml:space="preserve">
          <source>This may include making use of any preferences API that is available as part of the Java or native platform. This algorithm may be overridden by a user setting the property &lt;code&gt;javax.print.defaultPrinter&lt;/code&gt;. A service specified must be discovered to be valid and currently available to be returned as the default.</source>
          <target state="translated">これには、Javaまたはネイティブプラットフォームの一部として利用可能な設定APIの利用が含まれる場合があります。このアルゴリズムは、ユーザーがプロパティ &lt;code&gt;javax.print.defaultPrinter&lt;/code&gt; を設定することでオーバーライドできます。指定されたサービスが有効であり、デフォルトとして返されるように現在利用可能であることが検出される必要があります。</target>
        </trans-unit>
        <trans-unit id="cf34dce9122aca3b2ff13e553ac77235975bd1d1" translate="yes" xml:space="preserve">
          <source>This may include making use of any preferences API that is available as part of the Java or native platform. This algorithm may be overridden by a user setting the property javax.print.defaultPrinter. A service specified must be discovered to be valid and currently available to be returned as the default.</source>
          <target state="translated">これには、Javaまたはネイティブプラットフォームの一部として利用可能な任意の環境設定APIを利用することも含まれます。このアルゴリズムは、ユーザーがプロパティjavax.print.defaultPrinterを設定することで上書きすることができます。指定されたサービスは、デフォルトとして返されるためには、有効で現在利用可能なサービスが発見されている必要があります。</target>
        </trans-unit>
        <trans-unit id="bd36de123ef5dbe7af50d2c99fb6a96d6e586ce5" translate="yes" xml:space="preserve">
          <source>This may load either synchronously or asynchronously depending upon the document returned by the &lt;code&gt;EditorKit&lt;/code&gt;. If the &lt;code&gt;Document&lt;/code&gt; is of type &lt;code&gt;AbstractDocument&lt;/code&gt; and has a value returned by &lt;code&gt;AbstractDocument.getAsynchronousLoadPriority&lt;/code&gt; that is greater than or equal to zero, the page will be loaded on a separate thread using that priority.</source>
          <target state="translated">これは、 &lt;code&gt;EditorKit&lt;/code&gt; によって返されるドキュメントに応じて、同期的または非同期的にロードされる場合があります。場合 &lt;code&gt;Document&lt;/code&gt; タイプである &lt;code&gt;AbstractDocument&lt;/code&gt; をによって返される値を有する &lt;code&gt;AbstractDocument.getAsynchronousLoadPriority&lt;/code&gt; ゼロ以上であり、ページは、その優先順位を使用して別のスレッドにロードされます。</target>
        </trans-unit>
        <trans-unit id="2eb64e6727cd33a0bb000ac74e42189ae9a791c4" translate="yes" xml:space="preserve">
          <source>This may return a &lt;code&gt;NumberFormat&lt;/code&gt; instance with the Thai numbering system, instead of the Latin numbering system.</source>
          <target state="translated">これは、ラテンの番号付けシステムではなく、タイの番号付けシステムで &lt;code&gt;NumberFormat&lt;/code&gt; インスタンスを返す場合があります。</target>
        </trans-unit>
        <trans-unit id="02a1de890dcb2dc4d84e3222192853c0d1e45fd8" translate="yes" xml:space="preserve">
          <source>This means a minimum of 2 integer digits, 1 fraction digit, and a maximum of 2 fraction digits.</source>
          <target state="translated">これは、整数の桁数が最小2桁、端数の桁数が1桁、端数の桁数が最大2桁であることを意味します。</target>
        </trans-unit>
        <trans-unit id="1dee7b6afbfaff12dc1f11cf78e171e872edea4a" translate="yes" xml:space="preserve">
          <source>This means that for some &lt;code&gt;Shapes&lt;/code&gt; this method might return &lt;code&gt;false&lt;/code&gt; even though the &lt;code&gt;Shape&lt;/code&gt; contains the &lt;code&gt;Rectangle2D&lt;/code&gt;. The &lt;a href=&quot;area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class performs more accurate geometric computations than most &lt;code&gt;Shape&lt;/code&gt; objects and therefore can be used if a more precise answer is required.</source>
          <target state="translated">いくつかのために、この手段 &lt;code&gt;Shapes&lt;/code&gt; このメソッドが返すことがあります &lt;code&gt;false&lt;/code&gt; かかわらさえを &lt;code&gt;Shape&lt;/code&gt; が含まれてい &lt;code&gt;Rectangle2D&lt;/code&gt; を。&lt;a href=&quot;area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt;クラスを行う最もより正確な幾何学的計算 &lt;code&gt;Shape&lt;/code&gt; より正確な回答が必要な場合、したがってオブジェクトをし、使用することができます。</target>
        </trans-unit>
        <trans-unit id="bc5eb2b4ea7589ab3a51e6c81e57bc928144b808" translate="yes" xml:space="preserve">
          <source>This means that for some &lt;code&gt;Shapes&lt;/code&gt; this method might return &lt;code&gt;false&lt;/code&gt; even though the &lt;code&gt;Shape&lt;/code&gt; contains the &lt;code&gt;Rectangle2D&lt;/code&gt;. The &lt;a href=&quot;geom/area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class performs more accurate geometric computations than most &lt;code&gt;Shape&lt;/code&gt; objects and therefore can be used if a more precise answer is required.</source>
          <target state="translated">いくつかのために、この手段 &lt;code&gt;Shapes&lt;/code&gt; このメソッドが返すことがあります &lt;code&gt;false&lt;/code&gt; かかわらさえを &lt;code&gt;Shape&lt;/code&gt; が含まれてい &lt;code&gt;Rectangle2D&lt;/code&gt; を。&lt;a href=&quot;geom/area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt;クラスを行う最もより正確な幾何学的計算 &lt;code&gt;Shape&lt;/code&gt; より正確な回答が必要な場合、したがってオブジェクトをし、使用することができます。</target>
        </trans-unit>
        <trans-unit id="1d490c3effb1a3804fec14d34c4c9740df62ae43" translate="yes" xml:space="preserve">
          <source>This means that for some &lt;code&gt;Shapes&lt;/code&gt; this method might return &lt;code&gt;false&lt;/code&gt; even though the &lt;code&gt;Shape&lt;/code&gt; contains the rectangular area. The &lt;a href=&quot;area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class performs more accurate geometric computations than most &lt;code&gt;Shape&lt;/code&gt; objects and therefore can be used if a more precise answer is required.</source>
          <target state="translated">いくつかのために、この手段 &lt;code&gt;Shapes&lt;/code&gt; このメソッドが返すことがあります &lt;code&gt;false&lt;/code&gt; かかわらさえを &lt;code&gt;Shape&lt;/code&gt; が矩形領域を含んでいます。&lt;a href=&quot;area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt;クラスを行う最もより正確な幾何学的計算 &lt;code&gt;Shape&lt;/code&gt; より正確な回答が必要な場合、したがってオブジェクトをし、使用することができます。</target>
        </trans-unit>
        <trans-unit id="0f0b38b2990f15abcd0cdfebf2c1d08cf3833c19" translate="yes" xml:space="preserve">
          <source>This means that for some &lt;code&gt;Shapes&lt;/code&gt; this method might return &lt;code&gt;false&lt;/code&gt; even though the &lt;code&gt;Shape&lt;/code&gt; contains the rectangular area. The &lt;a href=&quot;geom/area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class performs more accurate geometric computations than most &lt;code&gt;Shape&lt;/code&gt; objects and therefore can be used if a more precise answer is required.</source>
          <target state="translated">いくつかのために、この手段 &lt;code&gt;Shapes&lt;/code&gt; このメソッドが返すことがあります &lt;code&gt;false&lt;/code&gt; かかわらさえを &lt;code&gt;Shape&lt;/code&gt; が矩形領域を含んでいます。&lt;a href=&quot;geom/area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt;クラスを行う最もより正確な幾何学的計算 &lt;code&gt;Shape&lt;/code&gt; より正確な回答が必要な場合、したがってオブジェクトをし、使用することができます。</target>
        </trans-unit>
        <trans-unit id="66828844d2daf815b1f02bd687a02e198a2ea126" translate="yes" xml:space="preserve">
          <source>This means that for some &lt;code&gt;Shapes&lt;/code&gt; this method might return &lt;code&gt;true&lt;/code&gt; even though the &lt;code&gt;Rectangle2D&lt;/code&gt; does not intersect the &lt;code&gt;Shape&lt;/code&gt;. The &lt;a href=&quot;area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class performs more accurate computations of geometric intersection than most &lt;code&gt;Shape&lt;/code&gt; objects and therefore can be used if a more precise answer is required.</source>
          <target state="translated">これは、一部の &lt;code&gt;Shapes&lt;/code&gt; では、 &lt;code&gt;Rectangle2D&lt;/code&gt; が &lt;code&gt;Shape&lt;/code&gt; 交差していなくてもこのメソッドが &lt;code&gt;true&lt;/code&gt; を返す可能性があることを意味します。&lt;a href=&quot;area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt;クラス最もより行う幾何学的交差のより正確な計算を &lt;code&gt;Shape&lt;/code&gt; オブジェクト、従ってより正確な回答が必要な場合に使用することができます。</target>
        </trans-unit>
        <trans-unit id="80cb4254ae570ce16655b149ff3242e54ebfe7c2" translate="yes" xml:space="preserve">
          <source>This means that for some &lt;code&gt;Shapes&lt;/code&gt; this method might return &lt;code&gt;true&lt;/code&gt; even though the &lt;code&gt;Rectangle2D&lt;/code&gt; does not intersect the &lt;code&gt;Shape&lt;/code&gt;. The &lt;a href=&quot;geom/area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class performs more accurate computations of geometric intersection than most &lt;code&gt;Shape&lt;/code&gt; objects and therefore can be used if a more precise answer is required.</source>
          <target state="translated">これは、一部の &lt;code&gt;Shapes&lt;/code&gt; では、 &lt;code&gt;Rectangle2D&lt;/code&gt; が &lt;code&gt;Shape&lt;/code&gt; 交差していなくてもこのメソッドが &lt;code&gt;true&lt;/code&gt; を返す可能性があることを意味します。&lt;a href=&quot;geom/area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt;クラス最もより行う幾何学的交差のより正確な計算を &lt;code&gt;Shape&lt;/code&gt; オブジェクト、従ってより正確な回答が必要な場合に使用することができます。</target>
        </trans-unit>
        <trans-unit id="1b29811ac736e7b8b21304c8119e39791df83d6e" translate="yes" xml:space="preserve">
          <source>This means that for some &lt;code&gt;Shapes&lt;/code&gt; this method might return &lt;code&gt;true&lt;/code&gt; even though the rectangular area does not intersect the &lt;code&gt;Shape&lt;/code&gt;. The &lt;a href=&quot;area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class performs more accurate computations of geometric intersection than most &lt;code&gt;Shape&lt;/code&gt; objects and therefore can be used if a more precise answer is required.</source>
          <target state="translated">これは、一部の &lt;code&gt;Shapes&lt;/code&gt; では、長方形の領域が &lt;code&gt;Shape&lt;/code&gt; 交差していなくても、このメソッドが &lt;code&gt;true&lt;/code&gt; を返す場合があることを意味します。&lt;a href=&quot;area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt;クラス最もより行う幾何学的交差のより正確な計算を &lt;code&gt;Shape&lt;/code&gt; オブジェクト、従ってより正確な回答が必要な場合に使用することができます。</target>
        </trans-unit>
        <trans-unit id="dd98346ef8fe8b5e8c598dfa992f307d06144e5f" translate="yes" xml:space="preserve">
          <source>This means that for some &lt;code&gt;Shapes&lt;/code&gt; this method might return &lt;code&gt;true&lt;/code&gt; even though the rectangular area does not intersect the &lt;code&gt;Shape&lt;/code&gt;. The &lt;a href=&quot;geom/area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class performs more accurate computations of geometric intersection than most &lt;code&gt;Shape&lt;/code&gt; objects and therefore can be used if a more precise answer is required.</source>
          <target state="translated">これは、一部の &lt;code&gt;Shapes&lt;/code&gt; では、長方形の領域が &lt;code&gt;Shape&lt;/code&gt; 交差していなくても、このメソッドが &lt;code&gt;true&lt;/code&gt; を返す場合があることを意味します。&lt;a href=&quot;geom/area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt;クラス最もより行う幾何学的交差のより正確な計算を &lt;code&gt;Shape&lt;/code&gt; オブジェクト、従ってより正確な回答が必要な場合に使用することができます。</target>
        </trans-unit>
        <trans-unit id="a91841d75e767a08d26a9cbfb4237550b49254a5" translate="yes" xml:space="preserve">
          <source>This means:</source>
          <target state="translated">ということです。</target>
        </trans-unit>
        <trans-unit id="175c122d043e36e6f1bd35d5db17f5a3f55b8e3d" translate="yes" xml:space="preserve">
          <source>This mechanism may be used to obtain &lt;code&gt;ImageReaders&lt;/code&gt; that will generated non-pixel meta-data (see &lt;code&gt;IIOExtraDataInfo&lt;/code&gt;) in a structure understood by an &lt;code&gt;ImageWriter&lt;/code&gt;. By reading the image and obtaining this data from one of the &lt;code&gt;ImageReaders&lt;/code&gt; obtained with this method and passing it on to the &lt;code&gt;ImageWriter&lt;/code&gt;, a client program can read an image, modify it in some way, and write it back out preserving all meta-data, without having to understand anything about the internal structure of the meta-data, or even about the image format.</source>
          <target state="translated">このメカニズムは、 &lt;code&gt;ImageWriter&lt;/code&gt; が理解する構造で非ピクセルメタデータ（ &lt;code&gt;IIOExtraDataInfo&lt;/code&gt; を参照）を生成する &lt;code&gt;ImageReaders&lt;/code&gt; を取得するために使用できます。このメソッドで取得した &lt;code&gt;ImageReaders&lt;/code&gt; の 1つから画像を読み取ってこのデータを取得し、それを &lt;code&gt;ImageWriter&lt;/code&gt; に渡すことにより、クライアントプログラムは画像を読み取り、何らかの方法で変更し、すべてのメタデータを保持して書き戻すことができます。メタデータの内部構造や画像フォーマットについてさえ理解する必要はありません。</target>
        </trans-unit>
        <trans-unit id="9477ec011ccc6cd62b18edb4a3330853eab03d19" translate="yes" xml:space="preserve">
          <source>This mechanism may be used to obtain &lt;code&gt;ImageWriters&lt;/code&gt; that will understand the internal structure of non-pixel meta-data (see &lt;code&gt;IIOTreeInfo&lt;/code&gt;) generated by an &lt;code&gt;ImageReader&lt;/code&gt;. By obtaining this data from the &lt;code&gt;ImageReader&lt;/code&gt; and passing it on to one of the &lt;code&gt;ImageWriters&lt;/code&gt; obtained with this method, a client program can read an image, modify it in some way, and write it back out while preserving all meta-data, without having to understand anything about the internal structure of the meta-data, or even about the image format.</source>
          <target state="translated">このメカニズムは、 &lt;code&gt;ImageReader&lt;/code&gt; によって生成された非ピクセルメタデータ（ &lt;code&gt;IIOTreeInfo&lt;/code&gt; を参照）の内部構造を理解する &lt;code&gt;ImageWriters&lt;/code&gt; を取得するために使用できます。 &lt;code&gt;ImageReader&lt;/code&gt; からこのデータを取得し、このメソッドで取得した &lt;code&gt;ImageWriters&lt;/code&gt; の 1つに渡すことにより、クライアントプログラムは画像を読み取り、何らかの方法で変更し、すべてのメタデータを保持しながら、すべてのメタデータを保持しながら書き戻すことができます。メタデータの内部構造、さらには画像フォーマットについても理解します。</target>
        </trans-unit>
        <trans-unit id="8d697d58de89ca07c4000044004190c244fe1fb3" translate="yes" xml:space="preserve">
          <source>This media size attribute's &lt;code&gt;X&lt;/code&gt; dimension is equal to &lt;code&gt;object&lt;/code&gt;'s &lt;code&gt;X&lt;/code&gt; dimension.</source>
          <target state="translated">この媒体サイズ属性の &lt;code&gt;X&lt;/code&gt; の次元はと等しい &lt;code&gt;object&lt;/code&gt; の &lt;code&gt;X&lt;/code&gt; の次元。</target>
        </trans-unit>
        <trans-unit id="2a0c1614de59d3da6f1f880b774bfe797a1dec13" translate="yes" xml:space="preserve">
          <source>This media size attribute's &lt;code&gt;Y&lt;/code&gt; dimension is equal to &lt;code&gt;object&lt;/code&gt;'s &lt;code&gt;Y&lt;/code&gt; dimension.</source>
          <target state="translated">この媒体サイズ属性の &lt;code&gt;Y&lt;/code&gt; の次元はと等しい &lt;code&gt;object&lt;/code&gt; の &lt;code&gt;Y&lt;/code&gt; の次元。</target>
        </trans-unit>
        <trans-unit id="fff14e76e51b02ad662012f54442a58e001ebfca" translate="yes" xml:space="preserve">
          <source>This media size attribute's X dimension is equal to &lt;code&gt;object&lt;/code&gt;'s X dimension.</source>
          <target state="translated">このメディアサイズ属性のX次元は、 &lt;code&gt;object&lt;/code&gt; のX次元と同じです。</target>
        </trans-unit>
        <trans-unit id="2d5678d6bc3b126d851653c58af1c418b754a3c4" translate="yes" xml:space="preserve">
          <source>This media size attribute's Y dimension is equal to &lt;code&gt;object&lt;/code&gt;'s Y dimension.</source>
          <target state="translated">このメディアサイズ属性のY寸法は、 &lt;code&gt;object&lt;/code&gt; のY寸法と同じです。</target>
        </trans-unit>
        <trans-unit id="ea82da6b140a0e965f6a617a910099dd753b8f82" translate="yes" xml:space="preserve">
          <source>This membership key</source>
          <target state="translated">この会員キー</target>
        </trans-unit>
        <trans-unit id="1fe5b77aaa8bd2afc34312a4ca12b492551504ec" translate="yes" xml:space="preserve">
          <source>This message is the opposite of addEdit--anEdit has typically already been queued in an &lt;code&gt;UndoManager&lt;/code&gt; (or other UndoableEditListener), and the receiver is being given a chance to take its place.</source>
          <target state="translated">このメッセージは、addEditの反対です。通常、anEditはすでに &lt;code&gt;UndoManager&lt;/code&gt; （または他のUndoableEditListener）のキューに入れられており、受信者にはその代わりになる機会が与えられています。</target>
        </trans-unit>
        <trans-unit id="4e4d250127621f81a309496eef97f9c17361e687" translate="yes" xml:space="preserve">
          <source>This message may be either the final text or a localization key.</source>
          <target state="translated">このメッセージは、最終的なテキストまたはローカライズキーのどちらかになります。</target>
        </trans-unit>
        <trans-unit id="1add261afe876410ef3a22a8c296c2d87752408e" translate="yes" xml:space="preserve">
          <source>This method (which varies in argument types across different classes) atomically sets a variable to the &lt;code&gt;updateValue&lt;/code&gt; if it currently holds the &lt;code&gt;expectedValue&lt;/code&gt;, reporting &lt;code&gt;true&lt;/code&gt; on success. The classes in this package also contain methods to get and unconditionally set values, as well as a weaker conditional atomic update operation &lt;code&gt;weakCompareAndSet&lt;/code&gt; described below.</source>
          <target state="translated">このメソッド（異なるクラス間で引数の型が異なる）は、現在 &lt;code&gt;expectedValue&lt;/code&gt; を保持している場合、変数を不可分に &lt;code&gt;updateValue&lt;/code&gt; に設定し、成功すると &lt;code&gt;true&lt;/code&gt; を報告します。このパッケージのクラスには、値を取得して無条件に設定するメソッド、および以下で説明する弱い条件付きアトミック更新操作 &lt;code&gt;weakCompareAndSet&lt;/code&gt; も含まれています。</target>
        </trans-unit>
        <trans-unit id="676abcf10cf3f6ca400c78527f174dc0cfff75a2" translate="yes" xml:space="preserve">
          <source>This method &lt;em&gt;does not&lt;/em&gt; close the provided &lt;code&gt;ImageOutputStream&lt;/code&gt; after the write operation has completed; it is the responsibility of the caller to close the stream, if desired.</source>
          <target state="translated">このメソッド&lt;em&gt;は&lt;/em&gt;、書き込み操作の完了後、提供された &lt;code&gt;ImageOutputStream&lt;/code&gt; を閉じ&lt;em&gt;ません&lt;/em&gt;。必要に応じて、ストリームを閉じるのは呼び出し側の責任です。</target>
        </trans-unit>
        <trans-unit id="3aa6518e55bff6393254c8f4353f326d6df08b81" translate="yes" xml:space="preserve">
          <source>This method &lt;em&gt;does not&lt;/em&gt; close the provided &lt;code&gt;InputStream&lt;/code&gt; after the read operation has completed; it is the responsibility of the caller to close the stream, if desired.</source>
          <target state="translated">このメソッド&lt;em&gt;は&lt;/em&gt;、読み取り操作の完了後、提供された &lt;code&gt;InputStream&lt;/code&gt; を閉じ&lt;em&gt;ません&lt;/em&gt;。必要に応じて、ストリームを閉じるのは呼び出し側の責任です。</target>
        </trans-unit>
        <trans-unit id="173872128eb75c92df9c4eedf694b762d8282c0d" translate="yes" xml:space="preserve">
          <source>This method &lt;em&gt;does not&lt;/em&gt; close the provided &lt;code&gt;OutputStream&lt;/code&gt; after the write operation has completed; it is the responsibility of the caller to close the stream, if desired.</source>
          <target state="translated">このメソッド&lt;em&gt;は&lt;/em&gt;、書き込み操作の完了後、提供された &lt;code&gt;OutputStream&lt;/code&gt; を閉じ&lt;em&gt;ません&lt;/em&gt;。必要に応じて、ストリームを閉じるのは呼び出し側の責任です。</target>
        </trans-unit>
        <trans-unit id="849cc220f7f2288d02ac0a0d016b42c4a03abbb3" translate="yes" xml:space="preserve">
          <source>This method accepts a year value from the proleptic ISO calendar system.</source>
          <target state="translated">このメソッドは、プロレプティックなISOカレンダーシステムから年の値を受け取ります。</target>
        </trans-unit>
        <trans-unit id="5f33e5832c8e17748897d2fe1a31b7c8f5a1edc2" translate="yes" xml:space="preserve">
          <source>This method accepts block names in the following forms:</source>
          <target state="translated">このメソッドは、以下の形式のブロック名を受け付けます。</target>
        </trans-unit>
        <trans-unit id="be4ea4e84c942ca1b6148d7b00bd849f83ea77b7" translate="yes" xml:space="preserve">
          <source>This method accepts either a full file path, or a file name with an extension if used together with the &lt;code&gt;setDirectory&lt;/code&gt; method.</source>
          <target state="translated">このメソッドは、完全なファイルパス、または &lt;code&gt;setDirectory&lt;/code&gt; メソッドと一緒に使用する場合は拡張子が付いたファイル名のいずれかを受け入れます。</target>
        </trans-unit>
        <trans-unit id="4c3bcbac3b7f25845a57529ee7ed62a91a0e59a7" translate="yes" xml:space="preserve">
          <source>This method acts as a bridge between array-based and collection-based APIs. It allows an existing array to be reused under certain circumstances. Use &lt;a href=&quot;#toArray()&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; to create an array whose runtime type is &lt;code&gt;Object[]&lt;/code&gt;, or use &lt;a href=&quot;#toArray(java.util.function.IntFunction)&quot;&gt;&lt;code&gt;toArray(IntFunction)&lt;/code&gt;&lt;/a&gt; to control the runtime type of the array.</source>
          <target state="translated">このメソッドは、配列ベースのAPIとコレクションベースのAPIの間のブリッジとして機能します。これにより、特定の状況下で既存のアレイを再利用できます。使用&lt;a href=&quot;#toArray()&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt;ランタイムタイプである配列を作成する &lt;code&gt;Object[]&lt;/code&gt; 、または使用&lt;a href=&quot;#toArray(java.util.function.IntFunction)&quot;&gt; &lt;code&gt;toArray(IntFunction)&lt;/code&gt; &lt;/a&gt;配列の実行時の型を制御します。</target>
        </trans-unit>
        <trans-unit id="8aed27dc29ef257c49b9018c2391b286d194d737" translate="yes" xml:space="preserve">
          <source>This method acts as a bridge between array-based and collection-based APIs. It allows creation of an array of a particular runtime type. Use &lt;a href=&quot;#toArray()&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; to create an array whose runtime type is &lt;code&gt;Object[]&lt;/code&gt;, or use &lt;a href=&quot;#toArray(T%5B%5D)&quot;&gt;&lt;code&gt;toArray(T[])&lt;/code&gt;&lt;/a&gt; to reuse an existing array.</source>
          <target state="translated">このメソッドは、配列ベースのAPIとコレクションベースのAPIの間のブリッジとして機能します。特定のランタイムタイプの配列を作成できます。使用&lt;a href=&quot;#toArray()&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt;ランタイムタイプである配列を作成する &lt;code&gt;Object[]&lt;/code&gt; 、または使用&lt;a href=&quot;#toArray(T%5B%5D)&quot;&gt; &lt;code&gt;toArray(T[])&lt;/code&gt; &lt;/a&gt;既存のアレイを再利用します。</target>
        </trans-unit>
        <trans-unit id="fc0a66c0fbd1f93f2c07c8f1c3d1cc8338c01004" translate="yes" xml:space="preserve">
          <source>This method acts as a bridge between array-based and collection-based APIs. It returns an array whose runtime type is &lt;code&gt;Object[]&lt;/code&gt;. Use &lt;a href=&quot;#toArray(T%5B%5D)&quot;&gt;&lt;code&gt;toArray(T[])&lt;/code&gt;&lt;/a&gt; to reuse an existing array, or use &lt;a href=&quot;#toArray(java.util.function.IntFunction)&quot;&gt;&lt;code&gt;toArray(IntFunction)&lt;/code&gt;&lt;/a&gt; to control the runtime type of the array.</source>
          <target state="translated">このメソッドは、配列ベースのAPIとコレクションベースのAPIの間のブリッジとして機能します。実行時型が &lt;code&gt;Object[]&lt;/code&gt; 配列を返します。使用&lt;a href=&quot;#toArray(T%5B%5D)&quot;&gt; &lt;code&gt;toArray(T[])&lt;/code&gt; &lt;/a&gt;既存のアレイを再利用する、または使用する&lt;a href=&quot;#toArray(java.util.function.IntFunction)&quot;&gt; &lt;code&gt;toArray(IntFunction)&lt;/code&gt; &lt;/a&gt;配列の実行時の型を制御します。</target>
        </trans-unit>
        <trans-unit id="6c6d6292ef57fe02db3d1ce2c962bcdc8a68a6c5" translate="yes" xml:space="preserve">
          <source>This method acts as bridge between array-based and collection-based APIs, in combination with &lt;a href=&quot;collection#toArray()&quot;&gt;&lt;code&gt;Collection.toArray()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4934e321968b6b5737a20b8db7eb111c01aa8b" translate="yes" xml:space="preserve">
          <source>This method acts as bridge between array-based and collection-based APIs.</source>
          <target state="translated">このメソッドは、配列ベースのAPIとコレクションベースのAPIの間の橋渡しを行います。</target>
        </trans-unit>
        <trans-unit id="7e0da3d203223cc23c9cf5d79ff584364135d7b6" translate="yes" xml:space="preserve">
          <source>This method acts as if the document was going through a save and load cycle, putting the document in a &quot;normal&quot; form.</source>
          <target state="translated">このメソッドは、あたかも文書が保存と読み込みのサイクルを通過しているかのように動作し、文書を「通常の」形式にします。</target>
        </trans-unit>
        <trans-unit id="1c837a4f52171ddf5b65c571fb87d3f9a0677da7" translate="yes" xml:space="preserve">
          <source>This method acts as if the document was going through a save and load cycle, putting the document in a &quot;normal&quot; form. As a consequence, this method updates the replacement tree of &lt;code&gt;EntityReference&lt;/code&gt; nodes and normalizes &lt;code&gt;Text&lt;/code&gt; nodes, as defined in the method &lt;code&gt;Node.normalize()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、ドキュメントが保存と読み込みのサイクルを経ているかのように機能し、ドキュメントを「通常の」形式にします。結果として、このメソッドは、メソッド &lt;code&gt;Node.normalize()&lt;/code&gt; で定義されているように、 &lt;code&gt;EntityReference&lt;/code&gt; ノードの置換ツリーを更新し、 &lt;code&gt;Text&lt;/code&gt; ノードを正規化します。</target>
        </trans-unit>
        <trans-unit id="95557be314a2a19adcd116b95485d6e7a69d2350" translate="yes" xml:space="preserve">
          <source>This method actually delegates the work of painting to three protected methods: &lt;code&gt;paintComponent&lt;/code&gt;, &lt;code&gt;paintBorder&lt;/code&gt;, and &lt;code&gt;paintChildren&lt;/code&gt;. They're called in the order listed to ensure that children appear on top of component itself. Generally speaking, the component and its children should not paint in the insets area allocated to the border. Subclasses can just override this method, as always. A subclass that just wants to specialize the UI (look and feel) delegate's &lt;code&gt;paint&lt;/code&gt; method should just override &lt;code&gt;paintComponent&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、実際には、ペイントの作業を3つの保護されたメソッド（ &lt;code&gt;paintComponent&lt;/code&gt; 、 &lt;code&gt;paintBorder&lt;/code&gt; 、paintChildren）に &lt;code&gt;paintChildren&lt;/code&gt; ます。子がコンポーネント自体の上に表示されるように、リストされている順序で呼び出されます。一般的に、コンポーネントとその子は、境界に割り当てられたはめ込み領域にペイントしないでください。サブクラスは、いつものように、このメソッドをオーバーライドできます。 UI（ルックアンドフィール）デリゲートの &lt;code&gt;paint&lt;/code&gt; メソッドを特殊化するだけのサブクラスは、 &lt;code&gt;paintComponent&lt;/code&gt; をオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="8f7a73b05a699a1a1d86cc68bc21fc580f553f8b" translate="yes" xml:space="preserve">
          <source>This method actually reshapes the components in the specified container in order to satisfy the constraints of this &lt;code&gt;BorderLayout&lt;/code&gt; object. The &lt;code&gt;NORTH&lt;/code&gt; and &lt;code&gt;SOUTH&lt;/code&gt; components, if any, are placed at the top and bottom of the container, respectively. The &lt;code&gt;WEST&lt;/code&gt; and &lt;code&gt;EAST&lt;/code&gt; components are then placed on the left and right, respectively. Finally, the &lt;code&gt;CENTER&lt;/code&gt; object is placed in any remaining space in the middle.</source>
          <target state="translated">このメソッドは、この &lt;code&gt;BorderLayout&lt;/code&gt; オブジェクトの制約を満たすために、指定されたコンテナー内のコンポーネントを実際に再形成します。 &lt;code&gt;NORTH&lt;/code&gt; と &lt;code&gt;SOUTH&lt;/code&gt; の構成要素は、もしあれば、それぞれ、容器の上部及び底部に配置されています。次に、 &lt;code&gt;WEST&lt;/code&gt; コンポーネントと &lt;code&gt;EAST&lt;/code&gt; コンポーネントがそれぞれ左側と右側に配置されます。最後に、 &lt;code&gt;CENTER&lt;/code&gt; オブジェクトは中央の残りのスペースに配置されます。</target>
        </trans-unit>
        <trans-unit id="052c035bb4da3462cdf3d609eef23ce392e671e6" translate="yes" xml:space="preserve">
          <source>This method adds an event to the consumer.</source>
          <target state="translated">このメソッドは、コンシューマにイベントを追加します。</target>
        </trans-unit>
        <trans-unit id="4bd020f3822f90bdb712fee286f33037e7aaa856" translate="yes" xml:space="preserve">
          <source>This method adds an event to the consumer. Calling this method invalidates the event parameter. The client application should discard all references to this event upon calling add. The behavior of an application that continues to use such references is undefined.</source>
          <target state="translated">このメソッドは、イベントをコンシューマに追加します。このメソッドを呼び出すと、イベント・パラメータは無効になります。クライアント・アプリケーションは、add を呼び出した時点で、このイベントへのすべての参照を破棄する必要があります。このような参照を使用し続けるアプリケーションの動作は定義されていません。</target>
        </trans-unit>
        <trans-unit id="a40479ccfb0dd4f5ddd9034df3781ac2ce146a18" translate="yes" xml:space="preserve">
          <source>This method adds the necessary listeners to the JComboBox.</source>
          <target state="translated">このメソッドは、必要なリスナーをJComboBoxに追加します。</target>
        </trans-unit>
        <trans-unit id="3af30e48dd60471f402029a6e08b9337cffb2e47" translate="yes" xml:space="preserve">
          <source>This method adds the specified amount in weeks to the days field incrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded.</source>
          <target state="translated">このメソッドは、結果が有効であることを確認するために必要に応じて月と年のフィールドをインクリメントして、指定された金額を週単位で日数フィールドに追加します。最大/最小年を超えた場合のみ、結果は無効になります。</target>
        </trans-unit>
        <trans-unit id="78e0e942f2ca0740ef7acb28824e1b9f833fdf85" translate="yes" xml:space="preserve">
          <source>This method adds the specified amount to the days field incrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded.</source>
          <target state="translated">このメソッドは、結果が有効であることを確認するために必要に応じて月と年のフィールドをインクリメントして、指定された金額を days フィールドに追加します。最大/最小年を超えた場合のみ、結果は無効になります。</target>
        </trans-unit>
        <trans-unit id="cffdf06049808a33bc8bcf6006cc27ef38580c8b" translate="yes" xml:space="preserve">
          <source>This method adds the specified amount to the months field in three steps:</source>
          <target state="translated">このメソッドは、指定した金額を 3 段階で月フィールドに追加します。</target>
        </trans-unit>
        <trans-unit id="af609df000243b0ab0dcffce4951b5476af479ce" translate="yes" xml:space="preserve">
          <source>This method adds the specified amount to the years field in three steps:</source>
          <target state="translated">このメソッドは、指定された金額を 3 段階で年フィールドに追加します。</target>
        </trans-unit>
        <trans-unit id="67aff9913a6ecbed4b87b406cb001845fb078e86" translate="yes" xml:space="preserve">
          <source>This method allocates an event given the current state of the XMLStreamReader.</source>
          <target state="translated">このメソッドは、XMLStreamReader の現在の状態を指定してイベントを割り当てます。</target>
        </trans-unit>
        <trans-unit id="37df9bc333f19d884a70ae5ea834da2b54687bcf" translate="yes" xml:space="preserve">
          <source>This method allocates an event given the current state of the XMLStreamReader. If this XMLEventAllocator does not have a one-to-one mapping between reader states and events this method will return null. This method must not modify the state of the XMLStreamReader.</source>
          <target state="translated">このメソッドは、XMLStreamReader の現在の状態を指定してイベントを割り当てます。この XMLEventAllocator が、リーダーの状態とイベントの間に 1 対 1 のマッピングを持っていない場合、このメソッドは null を返します。このメソッドは XMLStreamReader の状態を変更してはいけません。</target>
        </trans-unit>
        <trans-unit id="62b3598c083446c10d8a55ae8905944742f0ebfb" translate="yes" xml:space="preserve">
          <source>This method allocates an event or set of events given the current state of the XMLStreamReader and adds the event or set of events to the consumer that was passed in.</source>
          <target state="translated">このメソッドは、XMLStreamReader の現在の状態を指定してイベントまたはイベントのセットを割り当て、渡されたコンシューマーにイベントまたはイベントのセットを追加します。</target>
        </trans-unit>
        <trans-unit id="ecca30353576edf110adf0c3a21976618d2e5556" translate="yes" xml:space="preserve">
          <source>This method allocates an event or set of events given the current state of the XMLStreamReader and adds the event or set of events to the consumer that was passed in. This method can be used to expand or contract reader states into event states. This method may modify the state of the XMLStreamReader.</source>
          <target state="translated">このメソッドは、XMLStreamReader の現在の状態が与えられたイベントまたはイベントのセットを割り当て、渡されたコンシューマーにイベントまたはイベントのセットを追加します。このメソッドは、リーダーの状態をイベントの状態に拡張または縮小するために使用できます。このメソッドは XMLStreamReader の状態を変更することができます。</target>
        </trans-unit>
        <trans-unit id="e2de16d648cb476253668f1d004178f701a76980" translate="yes" xml:space="preserve">
          <source>This method allows an application to mark a place in a sequence of character content.</source>
          <target state="translated">このメソッドは、アプリケーションが文字内容のシーケンス内の場所をマークすることを可能にします。</target>
        </trans-unit>
        <trans-unit id="3e44c01f3cf7e3470d16ddbcf818e8bce9470acb" translate="yes" xml:space="preserve">
          <source>This method allows an application to mark a place in a sequence of character content. This mark can then be used to tracks change as insertions and removals are made in the content. The policy is that insertions always occur prior to the current position (the most common case) unless the insertion location is zero, in which case the insertion is forced to a position that follows the original position.</source>
          <target state="translated">このメソッドを使用すると、アプリケーションは、文字コンテンツのシーケンス内の場所にマークを付けることができます。このマークは、コンテンツ内で挿入や削除が行われる際に、変更を追跡するために使用することができます。このポリシーは、挿入位置がゼロでない限り、挿入は常に現在の位置よりも前に行われるというものです(最も一般的なケース)。</target>
        </trans-unit>
        <trans-unit id="1651391ffaab46b132075603bdd32cb42a6eeb1a" translate="yes" xml:space="preserve">
          <source>This method allows an application to request that the providers check for any updates to the provided rules. After calling this method, the offset stored in any &lt;a href=&quot;../zoneddatetime&quot;&gt;&lt;code&gt;ZonedDateTime&lt;/code&gt;&lt;/a&gt; may be invalid for the zone ID.</source>
          <target state="translated">このメソッドを使用すると、提供されたルールの更新をプロバイダーがチェックするようアプリケーションに要求できます。このメソッドを呼び出した後、&lt;a href=&quot;../zoneddatetime&quot;&gt; &lt;code&gt;ZonedDateTime&lt;/code&gt; に&lt;/a&gt;格納されているオフセットがゾーンIDに対して無効になる場合があります。</target>
        </trans-unit>
        <trans-unit id="b65a16ffef740e56c73f4dec86bb629cfdd3b8f0" translate="yes" xml:space="preserve">
          <source>This method allows an application writer to reuse an attribute list easily.</source>
          <target state="translated">このメソッドは、アプリケーションライターが属性リストを簡単に再利用できるようにします。</target>
        </trans-unit>
        <trans-unit id="a29475975cfb0c2dd788274120e8610d4a4a5648" translate="yes" xml:space="preserve">
          <source>This method allows an arbitrary number of nanoseconds to be passed in. The factory will alter the values of the second and nanosecond in order to ensure that the stored nanosecond is in the range 0 to 999,999,999. For example, the following will result in exactly the same duration:</source>
          <target state="translated">このメソッドでは、任意の数のナノ秒を渡すことができます。ファクトリーは、保存されたナノ秒が 0 から 999,999,999,999 の範囲内にあることを保証するために、秒とナノ秒の値を変更します。例えば、以下のようにすると、全く同じ持続時間が得られます。</target>
        </trans-unit>
        <trans-unit id="eb1b5b9b82863edd11ff7a092dc17e369ff6cefe" translate="yes" xml:space="preserve">
          <source>This method allows an arbitrary number of nanoseconds to be passed in. The factory will alter the values of the second and nanosecond in order to ensure that the stored nanosecond is in the range 0 to 999,999,999. For example, the following will result in exactly the same instant:</source>
          <target state="translated">このメソッドでは、任意の数のナノ秒を渡すことができます。ファクトリーは、保存されたナノ秒が 0 から 999,999,999,999 の範囲内にあることを保証するために、秒とナノ秒の値を変更します。例えば、以下のようにすると、全く同じ瞬間が得られます。</target>
        </trans-unit>
        <trans-unit id="eda444d0e2b0fbe233bda8959023b04aee5aa9f8" translate="yes" xml:space="preserve">
          <source>This method allows an arbitrary number of nanoseconds to be passed in. The factory will alter the values of the second and nanosecond in order to ensure that the stored nanosecond is in the range 0 to 999,999,999. For example, the following will result in the exactly the same duration:</source>
          <target state="translated">このメソッドでは、任意の数のナノ秒を渡すことができます。ファクトリーは、保存されたナノ秒が 0 から 999,999,999,999 の範囲内にあることを保証するために、秒とナノ秒の値を変更します。例えば、以下のようにすると、全く同じ持続時間が得られます。</target>
        </trans-unit>
        <trans-unit id="e97d0e4aaa0ceccd00c8a59cdcb938962da99c44" translate="yes" xml:space="preserve">
          <source>This method allows an arbitrary number of nanoseconds to be passed in. The factory will alter the values of the second and nanosecond in order to ensure that the stored nanosecond is in the range 0 to 999,999,999. For example, the following will result in the exactly the same instant:</source>
          <target state="translated">このメソッドでは、任意の数のナノ秒を渡すことができます。ファクトリーは、保存されたナノ秒が 0 から 999,999,999,999 の範囲内にあることを保証するために、秒とナノ秒の値を変更します。例えば、以下のようにすると、全く同じ瞬間が得られます。</target>
        </trans-unit>
        <trans-unit id="0f6e8bdfdc141c983067a4c04276404976b527b6" translate="yes" xml:space="preserve">
          <source>This method allows clients to implement their own initialization mechanism that is executed before a &lt;code&gt;FlightRecorder&lt;/code&gt; instance is returned by &lt;a href=&quot;flightrecorder#getFlightRecorder()&quot;&gt;&lt;code&gt;FlightRecorder.getFlightRecorder()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27648580aa87a7bc876a42c4766cd20ab0eba60" translate="yes" xml:space="preserve">
          <source>This method allows for subclasses to package the painting of different states with possibly different canvas sizes, etc, into one AbstractRegionPainter implementation.</source>
          <target state="translated">このメソッドを使用すると、サブクラスは、異なるキャンバスサイズなどを持つ異なる状態のペイントを1つのAbstractRegionPainter実装にパッケージ化することができます。</target>
        </trans-unit>
        <trans-unit id="7f5b63419c8ca9a087d2129fc95966034700e350" translate="yes" xml:space="preserve">
          <source>This method allows formats that normally apply a color conversion, such as JPEG, and formats that do not normally have an associated colorspace, such as remote sensing or medical imaging data, to provide access to raw pixel data.</source>
          <target state="translated">この方法は、通常はJPEGのような色変換を適用するフォーマットや、リモートセンシングや医用画像データのような通常は関連する色空間を持たないフォーマットが、生の画素データへのアクセスを提供することを可能にする。</target>
        </trans-unit>
        <trans-unit id="fdcf3f10349d6d14764776471113885263458d59" translate="yes" xml:space="preserve">
          <source>This method allows setting of the Location on each event that is created by this factory.</source>
          <target state="translated">このメソッドでは、このファクトリーで作成された各イベントにLocationを設定することができます。</target>
        </trans-unit>
        <trans-unit id="b5504007f2b3c552cf919c739179f84b7fbfcfba" translate="yes" xml:space="preserve">
          <source>This method allows setting of the Location on each event that is created by this factory. The values are copied by value into the events created by this factory. To reset the location information set the location to null.</source>
          <target state="translated">このメソッドでは、本ファクトリーで作成されたイベント毎に Location を設定することができます。値は、本ファクトリーで作成されたイベントに値ごとにコピーされる。位置情報をリセットする場合は、Location を NULL に設定する。</target>
        </trans-unit>
        <trans-unit id="0fd483899cb392f14434b2761f591f0dae8034ac" translate="yes" xml:space="preserve">
          <source>This method allows sophisticated applications to extend a PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; or &lt;code&gt;CertPathBuilder&lt;/code&gt;. Each of the specified &lt;code&gt;PKIXCertPathChecker&lt;/code&gt;s will be called, in turn, by a PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; or &lt;code&gt;CertPathBuilder&lt;/code&gt; for each certificate processed or validated.</source>
          <target state="translated">このメソッドを使用すると、高度なアプリケーションでPKIX &lt;code&gt;CertPathValidator&lt;/code&gt; または &lt;code&gt;CertPathBuilder&lt;/code&gt; を拡張できます。指定された各 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; は、処理または検証される証明書ごとに、PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; または &lt;code&gt;CertPathBuilder&lt;/code&gt; によって順に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f3c16478b12053acfce4d4de421bb0861c11b06e" translate="yes" xml:space="preserve">
          <source>This method allows the application of a function to &lt;code&gt;this&lt;/code&gt; string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90c3e48cf1d7dfba53b94e3a26b8c5a02fc3dcb" translate="yes" xml:space="preserve">
          <source>This method allows the application of a function to &lt;code&gt;this&lt;/code&gt; string. The function should expect a single String argument and produce an &lt;code&gt;R&lt;/code&gt; result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de17824b1e74f1e592206471706d3e1ed570943" translate="yes" xml:space="preserve">
          <source>This method allows the application to link the filter to a parent reader (which may be another filter). The argument may not be null.</source>
          <target state="translated">このメソッドは、アプリケーションがフィルタを親リーダ(別のフィルタかもしれません)にリンクすることを可能にします。引数に null を指定することはできません。</target>
        </trans-unit>
        <trans-unit id="c7aa9730575e5f663e0d18ca05a9a271835ff90c" translate="yes" xml:space="preserve">
          <source>This method allows the application to query the parent reader (which may be another filter). It is generally a bad idea to perform any operations on the parent reader directly: they should all pass through this filter.</source>
          <target state="translated">このメソッドは、アプリケーションが親リーダに問い合わせを行うことを可能にします (これは別のフィルタである可能性があります)。一般的に、親リーダに対する操作を直接行うのはよくありません。</target>
        </trans-unit>
        <trans-unit id="6d8556797fba1b77cd0451d414905190015a4f00" translate="yes" xml:space="preserve">
          <source>This method allows the caller to add a name to the set of issuer names which &lt;code&gt;X509CRLs&lt;/code&gt; may contain. The specified name is added to any previous value for the issuerNames criterion. If the specified name is a duplicate, it may be ignored.</source>
          <target state="translated">このメソッドにより、呼び出し元は、 &lt;code&gt;X509CRLs&lt;/code&gt; 含まれる可能性のある発行者名のセットに名前を追加できます。指定された名前は、issuerNames基準の以前の値に追加されます。指定した名前が重複している場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="a53dd998739b4376f63ebea8a55616b55400bdc8" translate="yes" xml:space="preserve">
          <source>This method allows the caller to add a name to the set of issuer names which &lt;code&gt;X509CRLs&lt;/code&gt; may contain. The specified name is added to any previous value for the issuerNames criterion. If the specified name is a duplicate, it may be ignored. If a name is specified as a byte array, it should contain a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure is as follows.</source>
          <target state="translated">このメソッドにより、呼び出し元は、 &lt;code&gt;X509CRLs&lt;/code&gt; 含まれる可能性のある発行者名のセットに名前を追加できます。指定された名前は、issuerNames基準の以前の値に追加されます。指定した名前が重複している場合は無視されます。名前がバイト配列として指定されている場合、X.501で定義されているように、単一のDERエンコードされた識別名が含まれている必要があります。この構造のASN.1表記は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="6ad13d13006adb44bd6041030d8f05a1aedf5e56" translate="yes" xml:space="preserve">
          <source>This method allows the caller to add a name to the set of names which the &lt;code&gt;X509Certificates&lt;/code&gt;'s name constraints must permit. The specified name is added to any previous value for the pathToNames criterion. If the name is a duplicate, it may be ignored.</source>
          <target state="translated">このメソッドを使用すると、呼び出し元は、 &lt;code&gt;X509Certificates&lt;/code&gt; の名前制約が許可する必要がある名前のセットに名前を追加できます。指定された名前は、pathToNames基準の以前の値に追加されます。名前が重複している場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="1e4632e39bbefa94b32729bd5a8212dd3b42660c" translate="yes" xml:space="preserve">
          <source>This method allows the caller to add a name to the set of subject alternative names. The specified name is added to any previous value for the subjectAlternativeNames criterion. If the specified name is a duplicate, it may be ignored.</source>
          <target state="translated">このメソッドを使用すると、呼び出し元は、サブジェクト代替名のセットに名前を追加できます。指定された名前は、subjectAlternativeNames 基準の以前の値に追加されます。指定された名前が重複している場合は、無視されることがあります。</target>
        </trans-unit>
        <trans-unit id="cbce34c15635b1a6ca7855d219a5cbcefd189b29" translate="yes" xml:space="preserve">
          <source>This method allows the caller to specify, with a single method call, the complete set of issuer names which &lt;code&gt;X509CRLs&lt;/code&gt; may contain. The specified value replaces the previous value for the issuerNames criterion.</source>
          <target state="translated">このメソッドを使用すると、呼び出し元は、1回のメソッド呼び出しで、 &lt;code&gt;X509CRLs&lt;/code&gt; 含まれる可能性のある発行者名の完全なセットを指定できます。指定された値は、issuerNames基準の以前の値を置き換えます。</target>
        </trans-unit>
        <trans-unit id="4aefaf491baf8c4e5456b621b5c0a498daa636e0" translate="yes" xml:space="preserve">
          <source>This method allows the caller to specify, with a single method call, the complete set of names which the &lt;code&gt;X509Certificates&lt;/code&gt;'s name constraints must permit. The specified value replaces the previous value for the pathToNames criterion.</source>
          <target state="translated">このメソッドを使用すると、呼び出し元は、1回のメソッド呼び出しで、 &lt;code&gt;X509Certificates&lt;/code&gt; の名前制約が許可する必要がある名前の完全なセットを指定できます。指定された値は、pathToNames基準の以前の値を置き換えます。</target>
        </trans-unit>
        <trans-unit id="0bd4362610e1ac10a2f64be47d995751ffb00a8d" translate="yes" xml:space="preserve">
          <source>This method allows the caller to specify, with a single method call, the complete set of subject alternative names for the subjectAlternativeNames criterion. The specified value replaces the previous value for the subjectAlternativeNames criterion.</source>
          <target state="translated">このメソッドを使用すると、1 回のメソッド呼び出しで、subjectAlternativeNames 基準のサブジェクト代替名の完全なセットを指定できます。指定された値は、subjectAlternativeNames 基準の前の値に置き換わります。</target>
        </trans-unit>
        <trans-unit id="f9f90f491d215eeb67507ed96cdae148a66028d9" translate="yes" xml:space="preserve">
          <source>This method allows the dispatch of events into the implementations event model.</source>
          <target state="translated">このメソッドは、実装のイベントモデルにイベントをディスパッチすることを可能にします。</target>
        </trans-unit>
        <trans-unit id="59fad912283256dc0cd53da04c91a25d38451d2a" translate="yes" xml:space="preserve">
          <source>This method allows the dispatch of events into the implementations event model. Events dispatched in this manner will have the same capturing and bubbling behavior as events dispatched directly by the implementation. The target of the event is the &lt;code&gt; EventTarget&lt;/code&gt; on which &lt;code&gt;dispatchEvent&lt;/code&gt; is called.</source>
          <target state="translated">このメソッドを使用すると、実装イベントモデルにイベントをディスパッチできます。この方法でディスパッチされたイベントは、実装によって直接ディスパッチされたイベントと同じキャプチャおよびバブリング動作を行います。イベントのターゲットはある &lt;code&gt; EventTarget&lt;/code&gt; その上 &lt;code&gt;dispatchEvent&lt;/code&gt; 呼び出されました。</target>
        </trans-unit>
        <trans-unit id="6dcf82cfbb87bd32ad28c6229a44a3b34df3ca25" translate="yes" xml:space="preserve">
          <source>This method allows the registration of event listeners on the event target.</source>
          <target state="translated">このメソッドでは、イベント対象にイベントリスナーを登録することができます。</target>
        </trans-unit>
        <trans-unit id="8ff1e4da820f6cd003ae96cff1ee808d14554783" translate="yes" xml:space="preserve">
          <source>This method allows the registration of event listeners on the event target. If an &lt;code&gt;EventListener&lt;/code&gt; is added to an &lt;code&gt;EventTarget&lt;/code&gt; while it is processing an event, it will not be triggered by the current actions but may be triggered during a later stage of event flow, such as the bubbling phase.</source>
          <target state="translated">このメソッドを使用すると、イベントターゲットにイベントリスナーを登録できます。場合 &lt;code&gt;EventListener&lt;/code&gt; に追加される &lt;code&gt;EventTarget&lt;/code&gt; それがイベントを処理している間、それは現在のアクションによってトリガされないが、このようなバブリング段階として、イベントフローの後の段階中にトリガされてもよいです。</target>
        </trans-unit>
        <trans-unit id="31f4ef68f0f41698bceb054291b72f9794f67125" translate="yes" xml:space="preserve">
          <source>This method allows the removal of event listeners from the event target.</source>
          <target state="translated">このメソッドでは、イベント対象からイベントリスナーを削除することができます。</target>
        </trans-unit>
        <trans-unit id="c5afc15d05bde090b9fc40fc4fb71d785249cb2d" translate="yes" xml:space="preserve">
          <source>This method allows the removal of event listeners from the event target. If an &lt;code&gt;EventListener&lt;/code&gt; is removed from an &lt;code&gt;EventTarget&lt;/code&gt; while it is processing an event, it will not be triggered by the current actions. &lt;code&gt;EventListener&lt;/code&gt;s can never be invoked after being removed.</source>
          <target state="translated">このメソッドを使用すると、イベントターゲットからイベントリスナーを削除できます。イベントの処理中に &lt;code&gt;EventListener&lt;/code&gt; が &lt;code&gt;EventTarget&lt;/code&gt; から削除された場合、現在のアクションによってトリガーされることはありません。 &lt;code&gt;EventListener&lt;/code&gt; は、削除された後に呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="fa5b58913a9bb46725ae4548a0b5ad24164aa7d8" translate="yes" xml:space="preserve">
          <source>This method also accepts a single array as an argument. The element type of the resulting list will be the component type of the array, and the size of the list will be equal to the length of the array. To create a list with a single element that is an array, do the following:</source>
          <target state="translated">このメソッドは、引数として単一の配列を受け取ることもできます。結果として得られるリストの要素型は配列のコンポーネント型となり、リストのサイズは配列の長さと同じになります。単一の要素が配列であるリストを作成するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="5290936ab8f951658b677b245f18d7a9c3f576d3" translate="yes" xml:space="preserve">
          <source>This method also accepts a single array as an argument. The element type of the resulting set will be the component type of the array, and the size of the set will be equal to the length of the array. To create a set with a single element that is an array, do the following:</source>
          <target state="translated">このメソッドは、引数として単一の配列を受け取ることもできます。結果として得られる集合の要素型は配列のコンポーネント型となり、集合のサイズは配列の長さと同じになります。単一の要素が配列である集合を作成するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="6363dd2696fe7d2c7e0313fab52ebec04a0c819a" translate="yes" xml:space="preserve">
          <source>This method also allows a set of preferred &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt; to be specified for parsing. The matched preferred zone id will be used if the textural zone name being parsed is not unique.</source>
          <target state="translated">このメソッドでは、解析用に優先&lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; の&lt;/a&gt;セットを指定することもできます。解析されるテクスチャゾーン名が一意でない場合、一致した優先ゾーンIDが使用されます。</target>
        </trans-unit>
        <trans-unit id="1c705334a0f7cff751d14c4a4a21383e06465e76" translate="yes" xml:space="preserve">
          <source>This method also provides a convenient way to create a fixed-size list initialized to contain several elements:</source>
          <target state="translated">このメソッドは、複数の要素を含むように初期化された固定サイズのリストを作成する便利な方法も提供します。</target>
        </trans-unit>
        <trans-unit id="33989ec54357ff31534589bc846f46e3b3866393" translate="yes" xml:space="preserve">
          <source>This method also updates the line length based on &lt;code&gt;length&lt;/code&gt;. If this is invoked to output a newline, the current line length will need to be reset as will no longer be valid. If it is up to the caller to do this. Use &lt;code&gt;writeLineSeparator&lt;/code&gt; to write out a newline, which will property update the current line length.</source>
          <target state="translated">この方法は、またに基づいて行の長さに更新 &lt;code&gt;length&lt;/code&gt; 。これを呼び出して改行を出力する場合は、現在の行の長さをリセットする必要があります。これは無効になります。これを行うのが発信者次第である場合。 &lt;code&gt;writeLineSeparator&lt;/code&gt; を使用して改行を書き出します。これにより、現在の行の長さがプロパティで更新されます。</target>
        </trans-unit>
        <trans-unit id="10efe58e09a54d7be31a3a18541b3ef4a089b9ec" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with the charset's default replacement string. The &lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt;&lt;code&gt;CharsetDecoder&lt;/code&gt;&lt;/a&gt; class should be used when more control over the decoding process is required.</source>
          <target state="translated">このメソッドは、常に不正な形式の入力およびマップ不可能な文字シーケンスを文字セットのデフォルトの置換文字列に置き換えます。デコードプロセスをさらに制御する必要がある場合は、&lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt; &lt;code&gt;CharsetDecoder&lt;/code&gt; &lt;/a&gt;クラスを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="4fa62a2a0ad1a06eae0027923f56e07ec351d22f" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with the default replacement string for the platform's default character set. The &lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt;CharsetDecoder&lt;/a&gt; class should be used when more control over the decoding process is required.</source>
          <target state="translated">このメソッドは常に、不正な形式の入力とマッピング不可能な文字のシーケンスを、プラットフォームのデフォルトの文字セットのデフォルトの置換文字列に置き換えます。&lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt;CharsetDecoderの&lt;/a&gt;デコード処理をより詳細に制御が必要な場合にクラスが使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="7ecf2c16eaf38e3a3f1d0841641a821887c12161" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement byte array. In order to detect such sequences, use the &lt;a href=&quot;charsetdecoder#decode(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;CharsetDecoder.decode(java.nio.ByteBuffer)&lt;/code&gt;&lt;/a&gt; method directly.</source>
          <target state="translated">このメソッドは、常に不正な形式の入力およびマップ不可能な文字シーケンスを、この文字セットのデフォルトの置換バイト配列に置き換えます。このようなシーケンスを検出するには、&lt;a href=&quot;charsetdecoder#decode(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;CharsetDecoder.decode(java.nio.ByteBuffer)&lt;/code&gt; &lt;/a&gt;メソッドを直接使用します。</target>
        </trans-unit>
        <trans-unit id="2a3f7738d52d60d9dab45317ecb84bee2edd004d" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement byte array. In order to detect such sequences, use the &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;CharsetDecoder.decode(java.nio.ByteBuffer)&lt;/code&gt;&lt;/a&gt; method directly.</source>
          <target state="translated">このメソッドは常に、不正な入力のシーケンスとマッピングできない文字のシーケンスを、この文字セットのデフォルトの置換バイト配列に置き換えます。このようなシーケンスを検出するには、&lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;CharsetDecoder.decode(java.nio.ByteBuffer)&lt;/code&gt; &lt;/a&gt;メソッドを直接使用します。</target>
        </trans-unit>
        <trans-unit id="38587c881fb9338bfc5f7b0b4c57b21c51ed6440" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement byte array. The &lt;a href=&quot;../nio/charset/charsetencoder&quot;&gt;&lt;code&gt;CharsetEncoder&lt;/code&gt;&lt;/a&gt; class should be used when more control over the encoding process is required.</source>
          <target state="translated">このメソッドは常に、不正な入力のシーケンスとマッピングできない文字のシーケンスを、この文字セットのデフォルトの置換バイト配列に置き換えます。&lt;a href=&quot;../nio/charset/charsetencoder&quot;&gt; &lt;code&gt;CharsetEncoder&lt;/code&gt; の&lt;/a&gt;符号化処理をより詳細に制御が必要な場合にクラスが使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="432bb81bdbb0e99607af672168deb1b6a7034192" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement string. In order to detect such sequences, use the &lt;a href=&quot;charsetencoder#encode(java.nio.CharBuffer)&quot;&gt;&lt;code&gt;CharsetEncoder.encode(java.nio.CharBuffer)&lt;/code&gt;&lt;/a&gt; method directly.</source>
          <target state="translated">このメソッドは、常に不正な形式の入力およびマップ不可能な文字シーケンスをこの文字セットのデフォルトの置換文字列に置き換えます。このようなシーケンスを検出するには、&lt;a href=&quot;charsetencoder#encode(java.nio.CharBuffer)&quot;&gt; &lt;code&gt;CharsetEncoder.encode(java.nio.CharBuffer)&lt;/code&gt; &lt;/a&gt;メソッドを直接使用します。</target>
        </trans-unit>
        <trans-unit id="1f13faeb3f76e5dd8cc2f8d9308ca1a600558991" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement string. In order to detect such sequences, use the &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;CharsetEncoder.encode(java.nio.CharBuffer)&lt;/code&gt;&lt;/a&gt; method directly.</source>
          <target state="translated">このメソッドは常に、不正な形式の入力およびマッピング不可能な文字シーケンスを、この文字セットのデフォルトの置換文字列に置き換えます。このようなシーケンスを検出するには、&lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;CharsetEncoder.encode(java.nio.CharBuffer)&lt;/code&gt; &lt;/a&gt;メソッドを直接使用します。</target>
        </trans-unit>
        <trans-unit id="be8bfafc52125e8313cc18e3a05d6ae74e1d8f25" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement string. The &lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt;&lt;code&gt;CharsetDecoder&lt;/code&gt;&lt;/a&gt; class should be used when more control over the decoding process is required.</source>
          <target state="translated">このメソッドは常に、不正な形式の入力およびマッピング不可能な文字シーケンスを、この文字セットのデフォルトの置換文字列に置き換えます。&lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt; &lt;code&gt;CharsetDecoder&lt;/code&gt; の&lt;/a&gt;デコード処理をより詳細に制御が必要な場合にクラスが使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="31d89ea493db17d7d18f5d26846b42d4cd45c369" translate="yes" xml:space="preserve">
          <source>This method always returns &lt;code&gt;true&lt;/code&gt; when invoked on an unnamed module. A package that is &lt;a href=&quot;#isOpen(java.lang.String)&quot;&gt;&lt;code&gt;opened&lt;/code&gt;&lt;/a&gt; unconditionally is considered exported unconditionally at run-time and so this method returns &lt;code&gt;true&lt;/code&gt; if the package is opened unconditionally.</source>
          <target state="translated">このメソッドは、名前のないモジュールで呼び出されると常に &lt;code&gt;true&lt;/code&gt; を返します。無条件に&lt;a href=&quot;#isOpen(java.lang.String)&quot;&gt; &lt;code&gt;opened&lt;/code&gt; &lt;/a&gt;たパッケージは、実行時に無条件にエクスポートされたと見なされるため、パッケージが無条件に開かれた場合、このメソッドは &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="285d7f20de5584473ceabbdd9d24956a7fa1b1da" translate="yes" xml:space="preserve">
          <source>This method always returns &lt;code&gt;true&lt;/code&gt; when invoked on an unnamed module. Additionally, it always returns &lt;code&gt;true&lt;/code&gt; when invoked on an &lt;a href=&quot;module/moduledescriptor#isOpen()&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; module with a package in the module.</source>
          <target state="translated">このメソッドは、名前のないモジュールで呼び出されると常に &lt;code&gt;true&lt;/code&gt; を返します。さらに、モジュール内にパッケージがある&lt;a href=&quot;module/moduledescriptor#isOpen()&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;モジュールで呼び出されると、常に &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="57dc20e65565e132587a6bae1fa3b9925f66233f" translate="yes" xml:space="preserve">
          <source>This method always returns false for unresolved permissions.</source>
          <target state="translated">このメソッドは、未解決のパーミッションに対しては常に false を返します。</target>
        </trans-unit>
        <trans-unit id="cc60d1f3bbc26c7042daee639e5042e34e0d52e8" translate="yes" xml:space="preserve">
          <source>This method always returns false for unresolved permissions. That is, an UnresolvedPermission is never considered to imply another permission.</source>
          <target state="translated">このメソッドは、未解決のパーミッションに対しては常に false を返します。つまり、UnresolvedPermissionは決して別のパーミッションを意味するものとはみなされません。</target>
        </trans-unit>
        <trans-unit id="0f05635828e4aece22bcc87aaef94aaadd55b76d" translate="yes" xml:space="preserve">
          <source>This method always returns immediately, whether or not the audio clip exists. When this applet attempts to play the audio clip, the data will be loaded.</source>
          <target state="translated">このメソッドは、オーディオクリップが存在するかどうかに関わらず、常にすぐに戻ります。このアプレットがオーディオクリップを再生しようとすると、データが読み込まれます。</target>
        </trans-unit>
        <trans-unit id="62cd0afdee249bc7ec993c0089f76c2ab4357533" translate="yes" xml:space="preserve">
          <source>This method always returns immediately, whether or not the image exists. When the applet attempts to draw the image on the screen, the data will be loaded. The graphics primitives that draw the image will incrementally paint on the screen.</source>
          <target state="translated">このメソッドは、画像が存在するかどうかに関わらず、常にすぐに戻ります。アプレットが画面上に画像を描こうとすると、データが読み込まれます。画像を描画するグラフィック・プリミティブは、画面上にインクリメンタルに描画されます。</target>
        </trans-unit>
        <trans-unit id="f550c5e5043e5c4e3f19852733414bbbb9aefe52" translate="yes" xml:space="preserve">
          <source>This method always returns immediately, whether or not the image exists. When this applet attempts to draw the image on the screen, the data will be loaded. The graphics primitives that draw the image will incrementally paint on the screen.</source>
          <target state="translated">このメソッドは、画像が存在するかどうかに関わらず、常に即座に戻ります。このアプレットが画面上に画像を描こうとすると、データが読み込まれます。画像を描画するグラフィック・プリミティブは、画面上にインクリメンタルに描画されます。</target>
        </trans-unit>
        <trans-unit id="068c0abec377b125bf29eb559f87700c5119e492" translate="yes" xml:space="preserve">
          <source>This method always throws an UnsupportedOperationException and should not be used because SQL &lt;code&gt;Date&lt;/code&gt; values do not have a time component.</source>
          <target state="translated">このメソッドは常にUnsupportedOperationExceptionをスローし、SQLの &lt;code&gt;Date&lt;/code&gt; 値には時間コンポーネントがないため使用しないでください。</target>
        </trans-unit>
        <trans-unit id="6bf3933de9cd4244504ce7bebf9a6351ccc2b77b" translate="yes" xml:space="preserve">
          <source>This method always throws an UnsupportedOperationException and should not be used because SQL &lt;code&gt;Time&lt;/code&gt; values do not have a date component.</source>
          <target state="translated">このメソッドは常にUnsupportedOperationExceptionをスローし、SQL &lt;code&gt;Time&lt;/code&gt; 値には日付コンポーネントがないため、使用しないでください。</target>
        </trans-unit>
        <trans-unit id="118956f0bca7372a534ff95ad23286b9d53d9573" translate="yes" xml:space="preserve">
          <source>This method always uses the unscaled version of the image to render the scaled rectangle and performs the required scaling on the fly. It does not use a cached, scaled version of the image for this operation. Scaling of the image from source to destination is performed such that the first coordinate of the source rectangle is mapped to the first coordinate of the destination rectangle, and the second source coordinate is mapped to the second destination coordinate. The subimage is scaled and flipped as needed to preserve those mappings.</source>
          <target state="translated">このメソッドは,常に,スケーリングされた矩形をレンダリングするために画像の非スケーリングバージョンを使用し,必要なスケーリングをその場で実行します.この処理には,キャッシュされたスケーリングされたバージョンの画像は使用されません。元の矩形の 1 番目の座標が先の矩形の 1 番目の座標にマップされ、2 番目の元の座標が 2 番目の先の座標にマップされるように、画像の元から先へのスケーリングが実行されます。サブイメージは、これらのマッピングを保持するために、必要に応じてスケーリングされ、反転される。</target>
        </trans-unit>
        <trans-unit id="16225678abeadf71c6cbee077427074f7b270d0a" translate="yes" xml:space="preserve">
          <source>This method and/or the code it invokes may need to read some data from the stream to determine whether its data format is supported. The implementation may therefore need to mark the stream, read enough data to determine whether it is in a supported format, and reset the stream's read pointer to its original position. If the input stream does not permit this set of operations, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">このメソッドとそのメソッドが呼び出すコードは、そのデータ形式がサポートされているかどうかを判断するために、ストリームからデータを読み取る必要がある場合があります。したがって、実装では、ストリームにマークを付け、サポートされている形式かどうかを判断するのに十分なデータを読み取り、ストリームの読み取りポインタを元の位置にリセットする必要がある場合があります。入力ストリームがこの一連の操作を許可しない場合、このメソッドは &lt;code&gt;IOException&lt;/code&gt; で失敗することがあります。</target>
        </trans-unit>
        <trans-unit id="220bc5d5cf6a1c88e16fdcd92006d7257a133ce6" translate="yes" xml:space="preserve">
          <source>This method applies an arbitrary scale factor to each of the three RGB components of this &lt;code&gt;Color&lt;/code&gt; to create a brighter version of this &lt;code&gt;Color&lt;/code&gt;. The &lt;code&gt;alpha&lt;/code&gt; value is preserved. Although &lt;code&gt;brighter&lt;/code&gt; and &lt;code&gt;darker&lt;/code&gt; are inverse operations, the results of a series of invocations of these two methods might be inconsistent because of rounding errors.</source>
          <target state="translated">この方法は、この三のRGB成分の各々に任意のスケールファクタを適用する &lt;code&gt;Color&lt;/code&gt; 本の明るいバージョン作成する &lt;code&gt;Color&lt;/code&gt; 。 &lt;code&gt;alpha&lt;/code&gt; 値が保存されます。 &lt;code&gt;brighter&lt;/code&gt; と &lt;code&gt;darker&lt;/code&gt; 逆の操作があり、これらの2つの方法の呼び出しの一連の結果があるため、丸め誤差により一致しないことがあります。</target>
        </trans-unit>
        <trans-unit id="36ba40cb06c07aabc39276b6aae1f22449d6b735" translate="yes" xml:space="preserve">
          <source>This method applies an arbitrary scale factor to each of the three RGB components of this &lt;code&gt;Color&lt;/code&gt; to create a darker version of this &lt;code&gt;Color&lt;/code&gt;. The &lt;code&gt;alpha&lt;/code&gt; value is preserved. Although &lt;code&gt;brighter&lt;/code&gt; and &lt;code&gt;darker&lt;/code&gt; are inverse operations, the results of a series of invocations of these two methods might be inconsistent because of rounding errors.</source>
          <target state="translated">この方法は、この三のRGB成分の各々に任意のスケールファクタを適用する &lt;code&gt;Color&lt;/code&gt; 本の暗いバージョン作成する &lt;code&gt;Color&lt;/code&gt; 。 &lt;code&gt;alpha&lt;/code&gt; 値が保存されます。 &lt;code&gt;brighter&lt;/code&gt; と &lt;code&gt;darker&lt;/code&gt; 逆の操作があり、これらの2つの方法の呼び出しの一連の結果があるため、丸め誤差により一致しないことがあります。</target>
        </trans-unit>
        <trans-unit id="4da6da35c7250af512899cb384b862226dc445d2" translate="yes" xml:space="preserve">
          <source>This method applies the current rules for leap years across the whole time-line. In general, a year is a leap year if it is divisible by four without remainder. However, years divisible by 100, are not leap years, with the exception of years divisible by 400 which are.</source>
          <target state="translated">この方法は、現在のうるう年のルールを時間軸全体に適用します。一般的には、4 で割れる年は余白がなくてもうるう年となります。ただし、100で割れる年は閏年ではありませんが、400で割れる年は例外です。</target>
        </trans-unit>
        <trans-unit id="58d118980dcf7f4ec8ac86a1b8ea2252fc0dfc16" translate="yes" xml:space="preserve">
          <source>This method applies to a &lt;code&gt;RowSet&lt;/code&gt; object only while it is connected to a database using a JDBC driver.</source>
          <target state="translated">このメソッドは、JDBCドライバーを使用してデータベースに接続されている場合にのみ &lt;code&gt;RowSet&lt;/code&gt; オブジェクトに適用されます。</target>
        </trans-unit>
        <trans-unit id="94822fc61a39722aa704ca79332e8b359d9ee390" translate="yes" xml:space="preserve">
          <source>This method applies to a &lt;code&gt;RowSet&lt;/code&gt; object only while it is connected to a database using a JDBC driver. For connected &lt;code&gt;RowSet&lt;/code&gt; implementations such as &lt;code&gt;JdbcRowSet&lt;/code&gt;, this method has a direct and immediate effect on the underlying JDBC driver.</source>
          <target state="translated">このメソッドは、JDBCドライバーを使用してデータベースに接続されている場合にのみ &lt;code&gt;RowSet&lt;/code&gt; オブジェクトに適用されます。 &lt;code&gt;JdbcRowSet&lt;/code&gt; などの接続された &lt;code&gt;RowSet&lt;/code&gt; 実装の場合、このメソッドは、基盤となるJDBCドライバーに直接かつ即時に影響します。</target>
        </trans-unit>
        <trans-unit id="268718a6011dcfbddd887deca0fb0a458bf3d563" translate="yes" xml:space="preserve">
          <source>This method assigns a default &lt;a href=&quot;../security/protectiondomain&quot;&gt;&lt;code&gt;&lt;code&gt;ProtectionDomain&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; to the newly defined class. The &lt;code&gt;ProtectionDomain&lt;/code&gt; is effectively granted the same set of permissions returned when &lt;a href=&quot;../security/policy#getPermissions-java.security.CodeSource-&quot;&gt;&lt;code&gt;&lt;code&gt;Policy.getPolicy().getPermissions(new CodeSource(null, null))&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; is invoked. The default domain is created on the first invocation of &lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-&quot;&gt;&lt;code&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;, and re-used on subsequent invocations.</source>
          <target state="translated">このメソッドは、新しく定義されたクラスにデフォルトの&lt;a href=&quot;../security/protectiondomain&quot;&gt; &lt;code&gt;&lt;code&gt;ProtectionDomain&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;を割り当てます。 &lt;code&gt;ProtectionDomain&lt;/code&gt; を効果的にするときの権限の同じセットが返さ付与され&lt;a href=&quot;../security/policy#getPermissions-java.security.CodeSource-&quot;&gt; &lt;code&gt;&lt;code&gt;Policy.getPolicy().getPermissions(new CodeSource(null, null))&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;が呼び出されます。デフォルトドメインは、&lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-&quot;&gt; &lt;code&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;の最初の呼び出し時に作成され、その後の呼び出しで再利用されます。</target>
        </trans-unit>
        <trans-unit id="21f263dd4db449be2f65b287a3511dda8a269b1e" translate="yes" xml:space="preserve">
          <source>This method assigns a default &lt;a href=&quot;../security/protectiondomain&quot;&gt;&lt;code&gt;ProtectionDomain&lt;/code&gt;&lt;/a&gt; to the newly defined class. The &lt;code&gt;ProtectionDomain&lt;/code&gt; is effectively granted the same set of permissions returned when &lt;a href=&quot;../security/policy#getPermissions(java.security.CodeSource)&quot;&gt;&lt;code&gt;Policy.getPolicy().getPermissions(new CodeSource(null, null))&lt;/code&gt;&lt;/a&gt; is invoked. The default protection domain is created on the first invocation of &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/a&gt;, and re-used on subsequent invocations.</source>
          <target state="translated">このメソッドは、新しく定義されたクラスにデフォルトの&lt;a href=&quot;../security/protectiondomain&quot;&gt; &lt;code&gt;ProtectionDomain&lt;/code&gt; &lt;/a&gt;を割り当てます。 &lt;code&gt;ProtectionDomain&lt;/code&gt; を効果的にするときの権限の同じセットが返さ付与され&lt;a href=&quot;../security/policy#getPermissions(java.security.CodeSource)&quot;&gt; &lt;code&gt;Policy.getPolicy().getPermissions(new CodeSource(null, null))&lt;/code&gt; &lt;/a&gt;が呼び出されます。デフォルトの保護ドメインは、&lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;defineClass&lt;/code&gt; &lt;/a&gt;の最初の呼び出しで作成され、その後の呼び出しで再利用されます。</target>
        </trans-unit>
        <trans-unit id="a06830bb8cf26de066a52fad7e0c239478bcefaa" translate="yes" xml:space="preserve">
          <source>This method attempts to locate and load the class or interface. It does not link the class, and does not run the class initializer. If the class is not found, this method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a855004fac76ae452788b9d6bb51ee9388af7555" translate="yes" xml:space="preserve">
          <source>This method attempts to locate, load, and link the class or interface. It does not run the class initializer. If the class is not found, this method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、クラスまたはインターフェイスの検索、ロード、およびリンクを試みます。クラス初期化子は実行されません。クラスが見つからない場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f426f8160bb66663f3038acb7b0ab97dfff5f242" translate="yes" xml:space="preserve">
          <source>This method attempts to match the given certificate with each keystore entry. If the entry being considered was created by a call to &lt;code&gt;setCertificateEntry&lt;/code&gt;, or created by a call to &lt;code&gt;setEntry&lt;/code&gt; with a &lt;code&gt;TrustedCertificateEntry&lt;/code&gt;, then the given certificate is compared to that entry's certificate.</source>
          <target state="translated">このメソッドは、指定された証明書を各キーストアエントリと照合しようとします。対象のエントリが &lt;code&gt;setCertificateEntry&lt;/code&gt; の呼び出しによって作成された場合、または &lt;code&gt;TrustedCertificateEntry&lt;/code&gt; を &lt;code&gt;setEntry&lt;/code&gt; したsetEntryの呼び出しによって作成された場合、指定された証明書はそのエントリの証明書と比較されます。</target>
        </trans-unit>
        <trans-unit id="b55f6d668c98e4f21925df06791513339c91fad6" translate="yes" xml:space="preserve">
          <source>This method behaves as if (for non-&lt;code&gt;null&lt;/code&gt; array elements):</source>
          <target state="translated">このメソッドは、（ &lt;code&gt;null&lt;/code&gt; 以外の配列要素の場合）次のように動作します。</target>
        </trans-unit>
        <trans-unit id="0ebe86017c28d7421d042c4fed59b52ddd39f5ee" translate="yes" xml:space="preserve">
          <source>This method behaves as if (for non-&lt;code&gt;null&lt;/code&gt; array references and elements):</source>
          <target state="translated">このメソッドは、次のように動作します（ &lt;code&gt;null&lt;/code&gt; 以外の配列参照および要素の場合）。</target>
        </trans-unit>
        <trans-unit id="f552e85b78eeca3e673fb6dbf48fa9499e6d1a4d" translate="yes" xml:space="preserve">
          <source>This method behaves as if (for non-&lt;code&gt;null&lt;/code&gt; array references):</source>
          <target state="translated">このメソッドは、次のように動作します（ &lt;code&gt;null&lt;/code&gt; 以外の配列参照の場合）。</target>
        </trans-unit>
        <trans-unit id="f6548b6484bb5d6e1c2e0cfec77a947254dc94fe" translate="yes" xml:space="preserve">
          <source>This method behaves as if the method handle to be invoked is the result of adapting the given method handle, via &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;MethodHandle.asType(java.lang.invoke.MethodType)&lt;/code&gt;&lt;/a&gt;, to adjust the return type to the desired type.</source>
          <target state="translated">このメソッドは、呼び出されるメソッドハンドルが、&lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;MethodHandle.asType(java.lang.invoke.MethodType)&lt;/code&gt; &lt;/a&gt;を介して指定されたメソッドハンドルを適応させ、戻り値の型を目的の型に調整した結果であるかのように動作します。</target>
        </trans-unit>
        <trans-unit id="2bb8f56d354cd47ac54e9cf5407697f09cf92bb2" translate="yes" xml:space="preserve">
          <source>This method behaves as if:</source>
          <target state="translated">このメソッドはあたかもそうであるかのように動作します。</target>
        </trans-unit>
        <trans-unit id="17c6875b40f8854d2e8c9c961692d842b35cddb4" translate="yes" xml:space="preserve">
          <source>This method behaves exactly as &lt;code&gt;Subject.doAs&lt;/code&gt;, except that instead of retrieving the current Thread's &lt;code&gt;AccessControlContext&lt;/code&gt;, it uses the provided &lt;code&gt;AccessControlContext&lt;/code&gt;. If the provided &lt;code&gt;AccessControlContext&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method instantiates a new &lt;code&gt;AccessControlContext&lt;/code&gt; with an empty collection of ProtectionDomains.</source>
          <target state="translated">このメソッドは、現在のスレッドの &lt;code&gt;AccessControlContext&lt;/code&gt; を取得する代わりに、提供された &lt;code&gt;AccessControlContext&lt;/code&gt; を使用することを除いて、 &lt;code&gt;Subject.doAs&lt;/code&gt; とまったく同じように動作します。指定された &lt;code&gt;AccessControlContext&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは空のProtectionDomainsコレクションを使用して新しい &lt;code&gt;AccessControlContext&lt;/code&gt; をインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="6677fb815e4992e874b461ab8f62f78cce359d25" translate="yes" xml:space="preserve">
          <source>This method behaves the same as &lt;a href=&quot;#decode(java.lang.String,java.nio.charset.Charset)&quot;&gt;decode(java.lang.String,java.nio.charset.Charset)&lt;/a&gt; except that it will &lt;a href=&quot;../nio/charset/charset#forName(java.lang.String)&quot;&gt;look up the charset&lt;/a&gt; using the given encoding name.</source>
          <target state="translated">このメソッドは、指定されたエンコーディング名を使用&lt;a href=&quot;../nio/charset/charset#forName(java.lang.String)&quot;&gt;して文字セット&lt;/a&gt;を検索することを除いて&lt;a href=&quot;#decode(java.lang.String,java.nio.charset.Charset)&quot;&gt;、decode（java.lang.String、java.nio.charset.Charset）&lt;/a&gt;と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="b584428fffe2cb7319f7d3b9d2ef45265686d22f" translate="yes" xml:space="preserve">
          <source>This method behaves the same as &lt;a href=&quot;#encode(java.lang.String,java.nio.charset.Charset)&quot;&gt;encode(java.lang.String,java.nio.charset.Charset)&lt;/a&gt; except that it will &lt;a href=&quot;../nio/charset/charset#forName(java.lang.String)&quot;&gt;look up the charset&lt;/a&gt; using the given encoding name.</source>
          <target state="translated">このメソッドは、指定されたエンコード名を使用&lt;a href=&quot;../nio/charset/charset#forName(java.lang.String)&quot;&gt;して文字セット&lt;/a&gt;を検索することを除いて&lt;a href=&quot;#encode(java.lang.String,java.nio.charset.Charset)&quot;&gt;、encode（java.lang.String、java.nio.charset.Charset）&lt;/a&gt;と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="08fc4a5d50c6d15e38c5477baa68db4cba62e04c" translate="yes" xml:space="preserve">
          <source>This method behaves the same as &lt;a href=&quot;#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;&lt;code&gt;newMBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt;&lt;/a&gt;, but additionally, if &lt;code&gt;notificationEmitter&lt;/code&gt; is &lt;code&gt;
 true&lt;/code&gt;, then the MBean is assumed to be a &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; and the returned proxy will implement &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; as well as &lt;code&gt;interfaceClass&lt;/code&gt;. A call to &lt;a href=&quot;notificationbroadcaster#addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt;&lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt;&lt;/a&gt; on the proxy will result in a call to &lt;a href=&quot;mbeanserverconnection#addNotificationListener(javax.management.ObjectName,javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt;&lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName,
 NotificationListener, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;, and likewise for the other methods of &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt; &lt;code&gt;newMBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt; &lt;/a&gt;と同じように動作しますが、さらに、 &lt;code&gt;notificationEmitter&lt;/code&gt; が &lt;code&gt; true&lt;/code&gt; の場合、MBeanは&lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; である&lt;/a&gt;と見なされ、返されたプロキシは、 &lt;code&gt;interfaceClass&lt;/code&gt; と同様に&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;を実装します。呼び出し&lt;a href=&quot;notificationbroadcaster#addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt; &lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt; &lt;/a&gt;プロキシ上でのコールになり&lt;a href=&quot;mbeanserverconnection#addNotificationListener(javax.management.ObjectName,javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt; &lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; の&lt;/a&gt;他のメソッドについても同様です。</target>
        </trans-unit>
        <trans-unit id="a50e4a6345499807a9912ff057eaa3589805702b" translate="yes" xml:space="preserve">
          <source>This method behaves the same as &lt;a href=&quot;#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;&lt;code&gt;newMXBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt;&lt;/a&gt;, but additionally, if &lt;code&gt;notificationEmitter&lt;/code&gt; is &lt;code&gt;
 true&lt;/code&gt;, then the MXBean is assumed to be a &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; and the returned proxy will implement &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; as well as &lt;code&gt;interfaceClass&lt;/code&gt;. A call to &lt;a href=&quot;notificationbroadcaster#addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt;&lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt;&lt;/a&gt; on the proxy will result in a call to &lt;a href=&quot;mbeanserverconnection#addNotificationListener(javax.management.ObjectName,javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt;&lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName,
 NotificationListener, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;, and likewise for the other methods of &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt; &lt;code&gt;newMXBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt; &lt;/a&gt;と同じように動作しますが、さらに、 &lt;code&gt;notificationEmitter&lt;/code&gt; が &lt;code&gt; true&lt;/code&gt; の場合、MXBeanは&lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; である&lt;/a&gt;と見なされ、返されたプロキシは、 &lt;code&gt;interfaceClass&lt;/code&gt; だけでなく&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;も実装します。呼び出し&lt;a href=&quot;notificationbroadcaster#addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt; &lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt; &lt;/a&gt;プロキシ上でのコールになり&lt;a href=&quot;mbeanserverconnection#addNotificationListener(javax.management.ObjectName,javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt; &lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; の&lt;/a&gt;他のメソッドについても同様です。</target>
        </trans-unit>
        <trans-unit id="77855a893221f1ce4a0389601130e3a381d80efd" translate="yes" xml:space="preserve">
          <source>This method behaves the same as &lt;a href=&quot;#storeToXML(java.io.OutputStream,java.lang.String,java.nio.charset.Charset)&quot;&gt;storeToXML(OutputStream os, String comment, Charset charset)&lt;/a&gt; except that it will &lt;a href=&quot;../nio/charset/charset#forName(java.lang.String)&quot;&gt;look up the charset&lt;/a&gt; using the given encoding name.</source>
          <target state="translated">このメソッドは、指定されたエンコーディング名を使用&lt;a href=&quot;../nio/charset/charset#forName(java.lang.String)&quot;&gt;して文字セット&lt;/a&gt;を検索することを除いて&lt;a href=&quot;#storeToXML(java.io.OutputStream,java.lang.String,java.nio.charset.Charset)&quot;&gt;、storeToXML（OutputStream os、String comment、Charset charset）&lt;/a&gt;と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="7ab20aadadf75efe0ea98bf999bdd4234990df0e" translate="yes" xml:space="preserve">
          <source>This method behaves the same as &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;newMBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt;&lt;/a&gt;, but additionally, if &lt;code&gt;notificationEmitter&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, then the MBean is assumed to be a &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; and the returned proxy will implement &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; as well as &lt;code&gt;interfaceClass&lt;/code&gt;. A call to &lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt;&lt;/a&gt; on the proxy will result in a call to &lt;a href=&quot;mbeanserverconnection#addNotificationListener-javax.management.ObjectName-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName,
 NotificationListener, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;, and likewise for the other methods of &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この方法は同様に動作し&lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;newMBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt; &lt;/a&gt;が、場合さらに、 &lt;code&gt;notificationEmitter&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; 、その後MBeanがあると仮定される&lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; で&lt;/a&gt;または&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;と実装返されるプロキシ&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;ならびに &lt;code&gt;interfaceClass&lt;/code&gt; 。呼び出し&lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt; &lt;/a&gt;プロキシ上でのコールになり&lt;a href=&quot;mbeanserverconnection#addNotificationListener-javax.management.ObjectName-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; の&lt;/a&gt;他のメソッドについても同様です。</target>
        </trans-unit>
        <trans-unit id="040a2b5e4aeb36e7b9a8f65a99d90ff3a5e5bc95" translate="yes" xml:space="preserve">
          <source>This method behaves the same as &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;newMXBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt;&lt;/a&gt;, but additionally, if &lt;code&gt;notificationEmitter&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, then the MXBean is assumed to be a &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; and the returned proxy will implement &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; as well as &lt;code&gt;interfaceClass&lt;/code&gt;. A call to &lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt;&lt;/a&gt; on the proxy will result in a call to &lt;a href=&quot;mbeanserverconnection#addNotificationListener-javax.management.ObjectName-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName,
 NotificationListener, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;, and likewise for the other methods of &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この方法は同様に動作し&lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;newMXBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt; &lt;/a&gt;が、場合さらに、 &lt;code&gt;notificationEmitter&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; 、その後のMXBeanがあると仮定される&lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; で&lt;/a&gt;または&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;と実装返されるプロキシ&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;ならびに &lt;code&gt;interfaceClass&lt;/code&gt; 。呼び出し&lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt; &lt;/a&gt;プロキシ上でのコールになり&lt;a href=&quot;mbeanserverconnection#addNotificationListener-javax.management.ObjectName-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; の&lt;/a&gt;他のメソッドについても同様です。</target>
        </trans-unit>
        <trans-unit id="2a3a050dc4ad75c04fab2f530821a2d8b2826a19" translate="yes" xml:space="preserve">
          <source>This method behaves the same as calling &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt;&lt;code&gt;getBundle(String, Locale, ClassLoader, Control)&lt;/code&gt;&lt;/a&gt; passing a default instance of &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; unless another &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; is provided with the &lt;a href=&quot;spi/resourcebundlecontrolprovider&quot;&gt;&lt;code&gt;ResourceBundleControlProvider&lt;/code&gt;&lt;/a&gt; SPI. Refer to the description of &lt;a href=&quot;#modify_default_behavior&quot;&gt;modifying the default behavior&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、別の&lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;spi/resourcebundlecontrolprovider&quot;&gt; &lt;code&gt;ResourceBundleControlProvider&lt;/code&gt; &lt;/a&gt; SPIで提供されていない限り、&lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; の&lt;/a&gt;デフォルトインスタンスを渡して&lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt; &lt;code&gt;getBundle(String, Locale, ClassLoader, Control)&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じように動作します。&lt;a href=&quot;#modify_default_behavior&quot;&gt;デフォルトの動作&lt;/a&gt;の変更の説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="3c9caa97bdb472bf9e1d8c81bfe7a5c110e30b01" translate="yes" xml:space="preserve">
          <source>This method behaves very much like &lt;a href=&quot;#asCollector(java.lang.Class,int)&quot;&gt;&lt;code&gt;asCollector(Class, int)&lt;/code&gt;&lt;/a&gt;, but differs in that its &lt;code&gt;
 collectArgPos&lt;/code&gt; argument indicates at which position in the parameter list arguments should be collected. This index is zero-based.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#asCollector(java.lang.Class,int)&quot;&gt; &lt;code&gt;asCollector(Class, int)&lt;/code&gt; &lt;/a&gt;と非常によく似ていますが、 &lt;code&gt; collectArgPos&lt;/code&gt; 引数がパラメーターリストの引数を収集する位置を示すという点で異なります。このインデックスはゼロベースです。</target>
        </trans-unit>
        <trans-unit id="5604ac7620e207f4e23a637ce3fd305672c2f5d6" translate="yes" xml:space="preserve">
          <source>This method behaves very much like &lt;a href=&quot;#asSpreader(java.lang.Class,int)&quot;&gt;&lt;code&gt;asSpreader(Class, int)&lt;/code&gt;&lt;/a&gt;, but accepts an additional &lt;code&gt;spreadArgPos&lt;/code&gt; argument to indicate at which position in the parameter list the spreading should take place.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#asSpreader(java.lang.Class,int)&quot;&gt; &lt;code&gt;asSpreader(Class, int)&lt;/code&gt; &lt;/a&gt;と非常によく似た動作をしますが、追加の &lt;code&gt;spreadArgPos&lt;/code&gt; 引数を受け入れて、パラメーターリストのどの位置で拡散を行うかを示します。</target>
        </trans-unit>
        <trans-unit id="4ef540b8fd24f2da7b9e12b97b85f8eda555b2c9" translate="yes" xml:space="preserve">
          <source>This method blocks until a datagram is received. The &lt;code&gt;length&lt;/code&gt; field of the datagram packet object contains the length of the received message. If the message is longer than the packet's length, the message is truncated.</source>
          <target state="translated">このメソッドは、データグラムが受信されるまでブロックします。データグラムパケットオブジェクトの &lt;code&gt;length&lt;/code&gt; フィールドには、受信したメッセージの長さが含まれます。メッセージがパケットの長さより長い場合、メッセージは切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="9edb264cc1a33d9820b53af8c3cdc1fb275ae554" translate="yes" xml:space="preserve">
          <source>This method blocks until a newline character is read, a carriage return and the byte following it are read (to see if it is a newline), the end of the file is reached, or an exception is thrown.</source>
          <target state="translated">このメソッドは、改行文字が読み込まれるまで、キャリッジリターンとそれに続くバイトが読み込まれるまで(改行であるかどうかを確認するため)、ファイルの終了に到達するまで、または例外がスローされるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="65d90c85a52039a4ff19c943ccb3cb5f594c3337" translate="yes" xml:space="preserve">
          <source>This method blocks until all the bytes are read, the end of the stream is detected, or an exception is thrown.</source>
          <target state="translated">このメソッドは、すべてのバイトが読み込まれるか、ストリームの終了が検出されるか、例外がスローされるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="8613d9e28f1e50e06732c3a04ed3315fc4de1b49" translate="yes" xml:space="preserve">
          <source>This method blocks until input data is available, end of file is detected, or an exception is thrown.</source>
          <target state="translated">このメソッドは、入力データが利用可能になるまで、ファイルの終了が検出されるまで、または例外がスローされるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="69d6a4f6358b50ecc853876960af6eed4f3af288" translate="yes" xml:space="preserve">
          <source>This method blocks until one of the following conditions occurs:</source>
          <target state="translated">このメソッドは、以下の条件のいずれかが発生するまでブロックします。</target>
        </trans-unit>
        <trans-unit id="d24e22ae204bbffb1aae51350c2b8591a89a1031" translate="yes" xml:space="preserve">
          <source>This method blocks until the byte is read, the end of the stream is detected, or an exception is thrown.</source>
          <target state="translated">このメソッドは、バイトが読み込まれるか、ストリームの終了が検出されるか、例外がスローされるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="dc2aa5b3b05ad6ab736997f223584ea0ea01792a" translate="yes" xml:space="preserve">
          <source>This method blocks until the eight bytes are read, the end of the stream is detected, or an exception is thrown.</source>
          <target state="translated">このメソッドは、8 バイトが読み込まれるか、ストリームの終了が検出されるか、例外がスローされるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="9bb676367f81fc57a11814f7fb38d025266194d0" translate="yes" xml:space="preserve">
          <source>This method blocks until the four bytes are read, the end of the stream is detected, or an exception is thrown.</source>
          <target state="translated">このメソッドは、4 バイトが読み込まれるか、ストリームの終了が検出されるか、例外がスローされるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="3d5091fd6af7b86eae2699fd1b079cbd872ffc42" translate="yes" xml:space="preserve">
          <source>This method blocks until the group has terminated, or the timeout occurs, or the current thread is interrupted, whichever happens first.</source>
          <target state="translated">このメソッドは、グループが終了するか、タイムアウトが発生するか、現在のスレッドが中断されるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="371ee03cc5dd98ef08b15c10e5c894e5634e72b2" translate="yes" xml:space="preserve">
          <source>This method blocks until the requested number of bytes have been skipped, end of file is reached, or an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8079da03ae0f8ee6fddde7359cb926ba4859755c" translate="yes" xml:space="preserve">
          <source>This method blocks until the two bytes are read, the end of the stream is detected, or an exception is thrown.</source>
          <target state="translated">このメソッドは、2 バイトが読み込まれるか、ストリームの終了が検出されるか、例外がスローされるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="93e2b6fc7eb187fb8de015dfbdaad0350f0d9bea" translate="yes" xml:space="preserve">
          <source>This method builds a data model for the &lt;a href=&quot;../../../org/xml/sax/inputsource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; and calls &lt;a href=&quot;#evaluate(java.lang.Object,javax.xml.namespace.QName)&quot;&gt;&lt;code&gt;evaluate(Object item, QName returnType)&lt;/code&gt;&lt;/a&gt; on the resulting document object.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../../../org/xml/sax/inputsource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; の&lt;/a&gt;データモデルを構築し、結果のドキュメントオブジェクトに対して&lt;a href=&quot;#evaluate(java.lang.Object,javax.xml.namespace.QName)&quot;&gt; &lt;code&gt;evaluate(Object item, QName returnType)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="7549bd39810c91722092bed4e8d609ab6124a963" translate="yes" xml:space="preserve">
          <source>This method builds a data model for the &lt;a href=&quot;../../../org/xml/sax/inputsource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; and calls &lt;a href=&quot;#evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)&quot;&gt;&lt;code&gt;evaluate(String expression, Object item, QName returnType)&lt;/code&gt;&lt;/a&gt; on the resulting document object.</source>
          <target state="translated">この方法は、データのためのモデル構築し&lt;a href=&quot;../../../org/xml/sax/inputsource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt;とコール&lt;a href=&quot;#evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)&quot;&gt; &lt;code&gt;evaluate(String expression, Object item, QName returnType)&lt;/code&gt; &lt;/a&gt;結果の文書オブジェクトにします。</target>
        </trans-unit>
        <trans-unit id="0332bcfdaccf71a07c16f0d7577cb6e000cb73d8" translate="yes" xml:space="preserve">
          <source>This method builds a data model for the &lt;a href=&quot;../../../org/xml/sax/inputsource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; and calls &lt;a href=&quot;#evaluateExpression(java.lang.Object,java.lang.Class)&quot;&gt;&lt;code&gt;evaluateExpression(Object item, Class type)&lt;/code&gt;&lt;/a&gt; on the resulting document object.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../../../org/xml/sax/inputsource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; の&lt;/a&gt;データモデルを構築し、結果のドキュメントオブジェクトに対して&lt;a href=&quot;#evaluateExpression(java.lang.Object,java.lang.Class)&quot;&gt; &lt;code&gt;evaluateExpression(Object item, Class type)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="e6a3ad6efbb37110ff48ecafed0ca780e0812fb2" translate="yes" xml:space="preserve">
          <source>This method builds a data model for the &lt;a href=&quot;../../../org/xml/sax/inputsource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; and calls &lt;a href=&quot;#evaluateExpression(java.lang.String,java.lang.Object,java.lang.Class)&quot;&gt;&lt;code&gt;evaluateExpression(String expression, Object item, Class type)&lt;/code&gt;&lt;/a&gt; on the resulting document object. The data model is usually &lt;a href=&quot;../../../org/w3c/dom/document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../../../org/xml/sax/inputsource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; の&lt;/a&gt;データモデルを構築し、結果のドキュメントオブジェクトに対して&lt;a href=&quot;#evaluateExpression(java.lang.String,java.lang.Object,java.lang.Class)&quot;&gt; &lt;code&gt;evaluateExpression(String expression, Object item, Class type)&lt;/code&gt; &lt;/a&gt;を呼び出します。データモデルは通常&lt;a href=&quot;../../../org/w3c/dom/document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7db78271a125ac89c34ce9bb6bd2d9c603fda06" translate="yes" xml:space="preserve">
          <source>This method by default throws OperationNotSupportedException. A subclass should override this method if it supports schema.</source>
          <target state="translated">このメソッドはデフォルトでは OperationNotSupportedException をスローします。サブクラスはスキーマをサポートしている場合はこのメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="f00cb961b8001af76c8cba1d373956d2342fd3bf" translate="yes" xml:space="preserve">
          <source>This method calculates the maximum value of &lt;a href=&quot;calendar#WEEK_OF_YEAR&quot;&gt;&lt;code&gt;WEEK_OF_YEAR&lt;/code&gt;&lt;/a&gt; based on the &lt;a href=&quot;calendar#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt; (calendar year) value, not the &lt;a href=&quot;#week_year&quot;&gt;week year&lt;/a&gt;. Call &lt;a href=&quot;#getWeeksInWeekYear()&quot;&gt;&lt;code&gt;getWeeksInWeekYear()&lt;/code&gt;&lt;/a&gt; to get the maximum value of &lt;code&gt;
 WEEK_OF_YEAR&lt;/code&gt; in the week year of this &lt;code&gt;GregorianCalendar&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#week_year&quot;&gt;週の年&lt;/a&gt;ではなく、&lt;a href=&quot;calendar#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt;（暦年）の値に基づいて&lt;a href=&quot;calendar#WEEK_OF_YEAR&quot;&gt; &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; &lt;/a&gt;の最大値を計算します。&lt;a href=&quot;#getWeeksInWeekYear()&quot;&gt; &lt;code&gt;getWeeksInWeekYear()&lt;/code&gt; &lt;/a&gt;を呼び出して、この &lt;code&gt;GregorianCalendar&lt;/code&gt; の週の年の &lt;code&gt; WEEK_OF_YEAR&lt;/code&gt; の最大値を取得します。</target>
        </trans-unit>
        <trans-unit id="7b0c83cb3f14b5f9ba0e18c88bd5ebf12a4ae946" translate="yes" xml:space="preserve">
          <source>This method calculates the maximum value of &lt;a href=&quot;calendar#WEEK_OF_YEAR&quot;&gt;&lt;code&gt;WEEK_OF_YEAR&lt;/code&gt;&lt;/a&gt; based on the &lt;a href=&quot;calendar#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt; (calendar year) value, not the &lt;a href=&quot;#week_year&quot;&gt;week year&lt;/a&gt;. Call &lt;a href=&quot;gregoriancalendar#getWeeksInWeekYear--&quot;&gt;&lt;code&gt;getWeeksInWeekYear()&lt;/code&gt;&lt;/a&gt; to get the maximum value of &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; in the week year of this &lt;code&gt;GregorianCalendar&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、の最大値を計算&lt;a href=&quot;calendar#WEEK_OF_YEAR&quot;&gt; &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; &lt;/a&gt;に基づい&lt;a href=&quot;calendar#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt;（暦年）の値ではなく、&lt;a href=&quot;#week_year&quot;&gt;週年を&lt;/a&gt;。&lt;a href=&quot;gregoriancalendar#getWeeksInWeekYear--&quot;&gt; &lt;code&gt;getWeeksInWeekYear()&lt;/code&gt; &lt;/a&gt;を呼び出して、この &lt;code&gt;GregorianCalendar&lt;/code&gt; の週年の &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; の最大値を取得します。</target>
        </trans-unit>
        <trans-unit id="5ade30ad500240ec5041de280a08fc6f1364e7b4" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;#evaluate(java.lang.Object,javax.xml.namespace.QName)&quot;&gt;&lt;code&gt;evaluate(Object item, QName returnType)&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;returnType&lt;/code&gt; of &lt;a href=&quot;xpathconstants#STRING&quot;&gt;&lt;code&gt;XPathConstants.STRING&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;returnType&lt;/code&gt; が&lt;a href=&quot;xpathconstants#STRING&quot;&gt; &lt;code&gt;XPathConstants.STRING&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;#evaluate(java.lang.Object,javax.xml.namespace.QName)&quot;&gt; &lt;code&gt;evaluate(Object item, QName returnType)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="e87ed2d4d38703026cd1893c546ae4178a55dea8" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;#evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)&quot;&gt;&lt;code&gt;evaluate(String expression, Object item, QName returnType)&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;returnType&lt;/code&gt; of &lt;a href=&quot;xpathconstants#STRING&quot;&gt;&lt;code&gt;XPathConstants.STRING&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;returnType&lt;/code&gt; が&lt;a href=&quot;xpathconstants#STRING&quot;&gt; &lt;code&gt;XPathConstants.STRING&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;#evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)&quot;&gt; &lt;code&gt;evaluate(String expression, Object item, QName returnType)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="d0d1ecc8797f9bc95742de3bf84237eb2ac9b1f4" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;#evaluate(java.lang.String,org.xml.sax.InputSource,javax.xml.namespace.QName)&quot;&gt;&lt;code&gt;evaluate(String expression, InputSource source, QName returnType)&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;returnType&lt;/code&gt; of &lt;a href=&quot;xpathconstants#STRING&quot;&gt;&lt;code&gt;XPathConstants.STRING&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;returnType&lt;/code&gt; が&lt;a href=&quot;xpathconstants#STRING&quot;&gt; &lt;code&gt;XPathConstants.STRING&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;#evaluate(java.lang.String,org.xml.sax.InputSource,javax.xml.namespace.QName)&quot;&gt; &lt;code&gt;evaluate(String expression, InputSource source, QName returnType)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="93fa4d7db120cbf238837fbfc43637db1b235d6d" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;#evaluate(org.xml.sax.InputSource,javax.xml.namespace.QName)&quot;&gt;&lt;code&gt;evaluate(InputSource source, QName returnType)&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;returnType&lt;/code&gt; of &lt;a href=&quot;xpathconstants#STRING&quot;&gt;&lt;code&gt;XPathConstants.STRING&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;returnType&lt;/code&gt; が&lt;a href=&quot;xpathconstants#STRING&quot;&gt; &lt;code&gt;XPathConstants.STRING&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;#evaluate(org.xml.sax.InputSource,javax.xml.namespace.QName)&quot;&gt; &lt;code&gt;evaluate(InputSource source, QName returnType)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="5fe36911271723f5ccfa4a67a59619ae34e78e45" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;#getKind()&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fileobject#toUri()&quot;&gt;&lt;code&gt;FileObject.toUri()&lt;/code&gt;&lt;/a&gt; and does not access the fields &lt;a href=&quot;#uri&quot;&gt;&lt;code&gt;uri&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; directly.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#getKind()&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;fileobject#toUri()&quot;&gt; &lt;code&gt;FileObject.toUri()&lt;/code&gt; &lt;/a&gt;を呼び出し、フィールド&lt;a href=&quot;#uri&quot;&gt; &lt;code&gt;uri&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#kind&quot;&gt; &lt;code&gt;kind&lt;/code&gt; に&lt;/a&gt;直接アクセスしません。</target>
        </trans-unit>
        <trans-unit id="ebd0ae5483113bc432bfc32853310768e6929523" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;calendar#complete()&quot;&gt;&lt;code&gt;Calendar.complete()&lt;/code&gt;&lt;/a&gt; before adding the amount so that all the calendar fields are normalized. If there is any calendar field having an out-of-range value in non-lenient mode, then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">このメソッドは、金額を追加する前に&lt;a href=&quot;calendar#complete()&quot;&gt; &lt;code&gt;Calendar.complete()&lt;/code&gt; を&lt;/a&gt;呼び出して、すべてのカレンダーフィールドが正規化されるようにします。非寛容モードで範囲外の値を持つカレンダーフィールドがある場合、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="ee7da62d22051f70cb00bcf36d44c4eb6f430a77" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;calendar#complete()&quot;&gt;&lt;code&gt;Calendar.complete()&lt;/code&gt;&lt;/a&gt; before calculating the week year.</source>
          <target state="translated">このメソッドは、週の年を計算する前に&lt;a href=&quot;calendar#complete()&quot;&gt; &lt;code&gt;Calendar.complete()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="269bea040be761a329f2dcd426e9e7e5650eee88" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;calendar#complete--&quot;&gt;&lt;code&gt;Calendar.complete()&lt;/code&gt;&lt;/a&gt; before adding the amount so that all the calendar fields are normalized. If there is any calendar field having an out-of-range value in non-lenient mode, then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">このメソッドは、すべてのカレンダーフィールドが正規化されるように、金額を追加する前に&lt;a href=&quot;calendar#complete--&quot;&gt; &lt;code&gt;Calendar.complete()&lt;/code&gt; を&lt;/a&gt;呼び出します。非寛容モードで範囲外の値を持つカレンダーフィールドがある場合、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="37051f601b556b3395026e8474644866b3636c1d" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;calendar#complete--&quot;&gt;&lt;code&gt;Calendar.complete()&lt;/code&gt;&lt;/a&gt; before calculating the week year.</source>
          <target state="translated">このメソッドは、週の年を計算する前に&lt;a href=&quot;calendar#complete--&quot;&gt; &lt;code&gt;Calendar.complete()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="3d2e8eda130fd16fedb0d019fdddb0fc7a855cfa" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;simplejavafileobject#getKind--&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;simplejavafileobject#toUri--&quot;&gt;&lt;code&gt;toUri()&lt;/code&gt;&lt;/a&gt; and does not access the fields &lt;a href=&quot;simplejavafileobject#uri&quot;&gt;&lt;code&gt;uri&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;simplejavafileobject#kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; directly.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;simplejavafileobject#getKind--&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;simplejavafileobject#toUri--&quot;&gt; &lt;code&gt;toUri()&lt;/code&gt; &lt;/a&gt;を呼び出し、&lt;a href=&quot;simplejavafileobject#uri&quot;&gt; &lt;code&gt;uri&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;simplejavafileobject#kind&quot;&gt; &lt;code&gt;kind&lt;/code&gt; &lt;/a&gt;フィールドに直接アクセスしません。</target>
        </trans-unit>
        <trans-unit id="e06fe40c6f4df5c5dacf982a86322e1fc4b787d1" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;AccessController.checkPermission&lt;/code&gt; with the given permission.</source>
          <target state="translated">このメソッドは、指定された権限で &lt;code&gt;AccessController.checkPermission&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="19738604ec6313155cae470a190e14c1867fe9c5" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;AWTPermission(&quot;accessClipboard&quot;)&lt;/code&gt; permission. In the case of subset Profiles of Java SE that do not include the &lt;code&gt;java.awt&lt;/code&gt; package, &lt;code&gt;checkPermission&lt;/code&gt; is instead called to check the permission &lt;code&gt;java.security.AllPermission&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;AWTPermission(&quot;accessClipboard&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。 &lt;code&gt;java.awt&lt;/code&gt; パッケージを含まないJava SEのサブセットプロファイルの場合、代わりに &lt;code&gt;checkPermission&lt;/code&gt; が呼び出され、 &lt;code&gt;java.security.AllPermission&lt;/code&gt; のアクセス権がチェックされます。</target>
        </trans-unit>
        <trans-unit id="73c694fe3a42693c434e002d948fff87adb94657" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;AWTPermission(&quot;accessEventQueue&quot;)&lt;/code&gt; permission. In the case of subset Profiles of Java SE that do not include the &lt;code&gt;java.awt&lt;/code&gt; package, &lt;code&gt;checkPermission&lt;/code&gt; is instead called to check the permission &lt;code&gt;java.security.AllPermission&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;AWTPermission(&quot;accessEventQueue&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。 &lt;code&gt;java.awt&lt;/code&gt; パッケージを含まないJava SEのサブセットプロファイルの場合、代わりに &lt;code&gt;checkPermission&lt;/code&gt; が呼び出され、 &lt;code&gt;java.security.AllPermission&lt;/code&gt; のアクセス権がチェックされます。</target>
        </trans-unit>
        <trans-unit id="ae3f7d9a114a9c3d1fc1ce191ace01aa23dfb43f" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;AWTPermission(&quot;showWindowWithoutWarningBanner&quot;)&lt;/code&gt; permission, and returns &lt;code&gt;true&lt;/code&gt; if a SecurityException is not thrown, otherwise it returns &lt;code&gt;false&lt;/code&gt;. In the case of subset Profiles of Java SE that do not include the &lt;code&gt;java.awt&lt;/code&gt; package, &lt;code&gt;checkPermission&lt;/code&gt; is instead called to check the permission &lt;code&gt;java.security.AllPermission&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;AWTPermission(&quot;showWindowWithoutWarningBanner&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出し、SecurityExceptionがスローされない場合は &lt;code&gt;true&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;false&lt;/code&gt; を返します。 &lt;code&gt;java.awt&lt;/code&gt; パッケージを含まないJava SEのサブセットプロファイルの場合、代わりに &lt;code&gt;checkPermission&lt;/code&gt; が呼び出され、 &lt;code&gt;java.security.AllPermission&lt;/code&gt; のアクセス権がチェックされます。</target>
        </trans-unit>
        <trans-unit id="6fdeff44c78d3902723ee823eaba70d551148962" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;FilePermission(cmd,&quot;execute&quot;)&lt;/code&gt; permission if cmd is an absolute path, otherwise it calls &lt;code&gt;checkPermission&lt;/code&gt; with &lt;code&gt;FilePermission(&quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot;,&quot;execute&quot;)&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、呼び出して &lt;code&gt;checkPermission&lt;/code&gt; をと &lt;code&gt;FilePermission(cmd,&quot;execute&quot;)&lt;/code&gt; 、それ以外の場合は呼び出して、cmdが絶対パスの場合は許可を得 &lt;code&gt;checkPermission&lt;/code&gt; を持つ &lt;code&gt;FilePermission(&quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot;,&quot;execute&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4090e1573f03a7b969ed4eb8baecc6269248e94" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;FilePermission(file,&quot;delete&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;FilePermission(file,&quot;delete&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="5b08355483b5bd71a870e28cb3c5b9be8d105425" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;FilePermission(file,&quot;read&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;FilePermission(file,&quot;read&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="bf80d8cebcf2bce202e03e26fa56b4fb477a5349" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;FilePermission(file,&quot;write&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;FilePermission(file,&quot;write&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="cd2746d5381e5e48e2b8bdaa68b516a5e32229e4" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;PropertyPermission(&quot;*&quot;, &quot;read,write&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;PropertyPermission(&quot;*&quot;, &quot;read,write&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="9f92e0c9ec1b3265d4a078b50f0f7c17f3b27464" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;PropertyPermission(key, &quot;read&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;PropertyPermission(key, &quot;read&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="443e1d17071c8a6b440e7feff746619b08781cc6" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;createClassLoader&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;RuntimePermission(&quot;createClassLoader&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="fd341d2c15b82687c519829666f6ea5af730951d" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;exitVM.&quot;+status)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;RuntimePermission(&quot;exitVM.&quot;+status)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="bd503776cdbf3af7134033cff2c250360e0eb170" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;loadLibrary.&quot;+lib)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;RuntimePermission(&quot;loadLibrary.&quot;+lib)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="9a5f72e1a355b0bee29959fa41870127a6a77604" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;queuePrintJob&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;RuntimePermission(&quot;queuePrintJob&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="2c5a22c480aa72ad9bdd63094f6d01b22499680f" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;readFileDescriptor&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;RuntimePermission(&quot;readFileDescriptor&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="1805302599444c237841bd5b2fcf4b128fb3e5b9" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;setFactory&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;RuntimePermission(&quot;setFactory&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="2f2885e0544d4e73448a66b931e57fddd504ba67" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;writeFileDescriptor&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;RuntimePermission(&quot;writeFileDescriptor&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="6f6f908bf811b7f71042ad9e5310f118a65335bb" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;SocketPermission(&quot;localhost:&quot;+port,&quot;listen&quot;)&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;SocketPermission(&quot;localhost:&quot;+port,&quot;listen&quot;)&lt;/code&gt; &lt;code&gt;checkPermission&lt;/code&gt; してcheckPermissionを呼び出します。</target>
        </trans-unit>
        <trans-unit id="a6588ddd0d20ef53b4230dba57c169828b93e1b8" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;SocketPermission(host+&quot;:&quot;+port,&quot;accept&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;SocketPermission(host+&quot;:&quot;+port,&quot;accept&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="5782c7b7162da363323088e4f1544e5232ea96f2" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;SocketPermission(host+&quot;:&quot;+port,&quot;connect&quot;)&lt;/code&gt; permission if the port is not equal to -1. If the port is equal to -1, then it calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;SocketPermission(host,&quot;resolve&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、ポートが-1でない場合、 &lt;code&gt;SocketPermission(host+&quot;:&quot;+port,&quot;connect&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。ポートが-1の場合、 &lt;code&gt;SocketPermission(host,&quot;resolve&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="4fafc2d6e9c84a5d190a2a437331af72604794ee" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;java.net.SocketPermission(maddr.getHostAddress(),
 &quot;accept,connect&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;java.net.SocketPermission(maddr.getHostAddress(), &quot;accept,connect&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="a2e5f703172d1163aa6fd1c5af5682264111ba8e" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;flush&lt;/code&gt;, writes the closing postamble and then closes the output stream associated with this stream.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;flush&lt;/code&gt; を呼び出し、終了ポストアンブルを書き込んでから、このストリームに関連付けられている出力ストリームを閉じます。</target>
        </trans-unit>
        <trans-unit id="a4cd427e199dc0b479af836be9b3ba3b54a47bbe" translate="yes" xml:space="preserve">
          <source>This method calls into the &lt;code&gt;ComponentUI&lt;/code&gt; method of the same name. If this component does not have a &lt;code&gt;ComponentUI&lt;/code&gt; -1 will be returned. If a value &amp;gt;= 0 is returned, then the component has a valid baseline for any size &amp;gt;= the minimum size and &lt;code&gt;getBaselineResizeBehavior&lt;/code&gt; can be used to determine how the baseline changes with size.</source>
          <target state="translated">このメソッドは、同じ名前の &lt;code&gt;ComponentUI&lt;/code&gt; メソッドを呼び出します。このコンポーネントに &lt;code&gt;ComponentUI&lt;/code&gt; がない場合、-1が返されます。値&amp;gt; = 0が返される場合、コンポーネントには任意のサイズ&amp;gt; =最小サイズに対して有効なベースラインがあり、 &lt;code&gt;getBaselineResizeBehavior&lt;/code&gt; を使用して、ベースラインがサイズによってどのように変化するかを判断できます。</target>
        </trans-unit>
        <trans-unit id="4e21f6b965dc5468d92d3ed13f12dfdb2840d305" translate="yes" xml:space="preserve">
          <source>This method calls into the &lt;code&gt;ComponentUI&lt;/code&gt; method of the same name. If this component does not have a &lt;code&gt;ComponentUI&lt;/code&gt;&lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; will be returned. Subclasses should never return &lt;code&gt;null&lt;/code&gt;; if the baseline can not be calculated return &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt;. Callers should first ask for the baseline using &lt;code&gt;getBaseline&lt;/code&gt; and if a value &amp;gt;= 0 is returned use this method. It is acceptable for this method to return a value other than &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; even if &lt;code&gt;getBaseline&lt;/code&gt; returns a value less than 0.</source>
          <target state="translated">このメソッドは、同じ名前の &lt;code&gt;ComponentUI&lt;/code&gt; メソッドを呼び出します。このコンポーネントが持っていない場合 &lt;code&gt;ComponentUI&lt;/code&gt; の &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; が返されます。サブクラスが &lt;code&gt;null&lt;/code&gt; を返すことはありません。ベースラインを計算できない場合は、 &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; を返します。呼び出し元は、最初に &lt;code&gt;getBaseline&lt;/code&gt; を使用してベースラインを要求する必要があり、0より大きい値が返された場合は、このメソッドを使用します。 &lt;code&gt;getBaseline&lt;/code&gt; が0未満の値を返した場合でも、このメソッドが &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; 以外の値を返すことは許容されます。</target>
        </trans-unit>
        <trans-unit id="5d82ffb4febd31a6137f409a989965d5cbb64206" translate="yes" xml:space="preserve">
          <source>This method calls on this &lt;code&gt;CachedRowSet&lt;/code&gt; object's writer to do the work behind the scenes. Standard &lt;code&gt;CachedRowSet&lt;/code&gt; implementations should use the &lt;code&gt;SyncFactory&lt;/code&gt; singleton to obtain a &lt;code&gt;SyncProvider&lt;/code&gt; instance providing a &lt;code&gt;RowSetWriter&lt;/code&gt; object (writer). The writer will attempt to propagate changes made in this &lt;code&gt;CachedRowSet&lt;/code&gt; object back to the data source.</source>
          <target state="translated">このメソッドは、この &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトのライターを呼び出して、舞台裏で作業を行います。標準の &lt;code&gt;CachedRowSet&lt;/code&gt; 実装では、 &lt;code&gt;SyncFactory&lt;/code&gt; シングルトンを使用して、 &lt;code&gt;RowSetWriter&lt;/code&gt; オブジェクト（ライター）を提供する &lt;code&gt;SyncProvider&lt;/code&gt; インスタンスを取得する必要があります。ライターは、この &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトで行われた変更をデータソースに伝播しようとします。</target>
        </trans-unit>
        <trans-unit id="056704de3f264617d5178595663f8c57cdd5f1d0" translate="yes" xml:space="preserve">
          <source>This method calls the &lt;code&gt;exit&lt;/code&gt; method in class &lt;code&gt;Runtime&lt;/code&gt;. This method never returns normally.</source>
          <target state="translated">このメソッドは、クラス &lt;code&gt;Runtime&lt;/code&gt; の &lt;code&gt;exit&lt;/code&gt; メソッドを呼び出します。このメソッドは通常は戻りません。</target>
        </trans-unit>
        <trans-unit id="19910e494ac70504362312992306c0f21460cb09" translate="yes" xml:space="preserve">
          <source>This method calls the full featured &lt;a href=&quot;#print(java.text.MessageFormat,java.text.MessageFormat,boolean,javax.print.PrintService,javax.print.attribute.PrintRequestAttributeSet,boolean)&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; method to perform printing.</source>
          <target state="translated">このメソッドは、フル機能の&lt;a href=&quot;#print(java.text.MessageFormat,java.text.MessageFormat,boolean,javax.print.PrintService,javax.print.attribute.PrintRequestAttributeSet,boolean)&quot;&gt; &lt;code&gt;print&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して印刷を実行します。</target>
        </trans-unit>
        <trans-unit id="06b9c57a605a53610502cde7d2c38fff8d3a5277" translate="yes" xml:space="preserve">
          <source>This method calls the method &lt;a href=&quot;rmiserverimpl#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; on the connector server's &lt;code&gt;RMIServerImpl&lt;/code&gt; object.</source>
          <target state="translated">このメソッドは、コネクタサーバーの &lt;code&gt;RMIServerImpl&lt;/code&gt; オブジェクトでメソッド&lt;a href=&quot;rmiserverimpl#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="0c466e2b5d2a812ecbc3c46657a8721f4dcfe360" translate="yes" xml:space="preserve">
          <source>This method calls the method &lt;a href=&quot;rmiserverimpl#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; on the connector server's &lt;code&gt;RMIServerImpl&lt;/code&gt; object.</source>
          <target state="translated">このメソッドは、コネクタサーバーの &lt;code&gt;RMIServerImpl&lt;/code&gt; オブジェクトの&lt;a href=&quot;rmiserverimpl#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="03584ad9df1ca13639c4652a28102939262933ab" translate="yes" xml:space="preserve">
          <source>This method calls the various &lt;code&gt;getStandard*Node&lt;/code&gt; methods to supply each of the subtrees rooted at the children of the root node. If any of those methods returns &lt;code&gt;null&lt;/code&gt;, the corresponding subtree will be omitted. If all of them return &lt;code&gt;null&lt;/code&gt;, a tree consisting of a single root node will be returned.</source>
          <target state="translated">このメソッドは、さまざまな &lt;code&gt;getStandard*Node&lt;/code&gt; メソッドを呼び出して、ルートノードの子をルートとする各サブツリーを提供します。これらのメソッドのいずれかが &lt;code&gt;null&lt;/code&gt; を返す場合、対応するサブツリーは省略されます。それらのすべてが &lt;code&gt;null&lt;/code&gt; を返す場合、単一のルートノードで構成されるツリーが返されます。</target>
        </trans-unit>
        <trans-unit id="aede171c15ea87027366232d73799a4b5b5d8569" translate="yes" xml:space="preserve">
          <source>This method can also be overridden in a subclass. It is recommended to use the &lt;a href=&quot;formatter#formatMessage(java.util.logging.LogRecord)&quot;&gt;&lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt;&lt;/a&gt; convenience method to localize and format the message field.</source>
          <target state="translated">このメソッドは、サブクラスでオーバーライドすることもできます。&lt;a href=&quot;formatter#formatMessage(java.util.logging.LogRecord)&quot;&gt; &lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt; &lt;/a&gt;コンビニエンスメソッドを使用して、メッセージフィールドをローカライズおよびフォーマットすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ce3397a67d6e7430b7581b0bc7e5b19cf215832d" translate="yes" xml:space="preserve">
          <source>This method can also be overridden in a subclass. It is recommended to use the &lt;a href=&quot;formatter#formatMessage-java.util.logging.LogRecord-&quot;&gt;&lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt;&lt;/a&gt; convenience method to localize and format the message field.</source>
          <target state="translated">このメソッドは、サブクラスでオーバーライドすることもできます。&lt;a href=&quot;formatter#formatMessage-java.util.logging.LogRecord-&quot;&gt; &lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt; &lt;/a&gt;コンビニエンスメソッドを使用して、メッセージフィールドをローカライズおよびフォーマットすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c8df6391fe0e1a45f47456bdd69e24919b1e9aa0" translate="yes" xml:space="preserve">
          <source>This method can also be used with documents that have no DOCTYPE declaration. When the root element is encountered, but no DOCTYPE declaration has been seen, this method is invoked. If it returns a value for the external subset, that root element is declared to be the root element, giving the effect of splicing a DOCTYPE declaration at the end the prolog of a document that could not otherwise be valid. The sequence of parser callbacks in that case logically resembles this:</source>
          <target state="translated">このメソッドは、DOCTYPE宣言がない文書でも使用できます。ルート要素に遭遇したが、DOCTYPE宣言が見られなかった場合、このメソッドが呼び出されます。外部サブセットの値を返した場合、そのルート要素はルート要素であると宣言され、 他の方法では有効ではない文書のプロログの最後にDOCTYPE宣言を接続する効果を与えます。この場合のパーサコールバックのシーケンスは、論理的には次のようになります。</target>
        </trans-unit>
        <trans-unit id="863587eeeb9765c5166cdb0d93c028707abd1d5e" translate="yes" xml:space="preserve">
          <source>This method can be called at most once. It is generally called from within the constructor, or immediately after creating the throwable. If this throwable was created with &lt;a href=&quot;#%3Cinit%3E(java.lang.Throwable)&quot;&gt;&lt;code&gt;Throwable(Throwable)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.Throwable)&quot;&gt;&lt;code&gt;Throwable(String,Throwable)&lt;/code&gt;&lt;/a&gt;, this method cannot be called even once.</source>
          <target state="translated">このメソッドは、最大で1回呼び出すことができます。通常、コンストラクター内から、またはスロー可能ファイルを作成した直後に呼び出されます。このthrowableが&lt;a href=&quot;#%3Cinit%3E(java.lang.Throwable)&quot;&gt; &lt;code&gt;Throwable(Throwable)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.Throwable)&quot;&gt; &lt;code&gt;Throwable(String,Throwable)&lt;/code&gt; &lt;/a&gt;で作成された場合、このメソッドを1回でも呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="352b3b2ea94b58a5dcdb0f786a7107bbc301dd2c" translate="yes" xml:space="preserve">
          <source>This method can be called at most once. It is generally called from within the constructor, or immediately after creating the throwable. If this throwable was created with &lt;a href=&quot;#%3Cinit%3E(java.lang.Throwable)&quot;&gt;&lt;code&gt;TransformerException(Throwable)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.Throwable)&quot;&gt;&lt;code&gt;TransformerException(String,Throwable)&lt;/code&gt;&lt;/a&gt;, this method cannot be called even once.</source>
          <target state="translated">このメソッドは、最大で1回呼び出すことができます。通常、コンストラクター内から、またはスロー可能ファイルを作成した直後に呼び出されます。このthrowableが&lt;a href=&quot;#%3Cinit%3E(java.lang.Throwable)&quot;&gt; &lt;code&gt;TransformerException(Throwable)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.Throwable)&quot;&gt; &lt;code&gt;TransformerException(String,Throwable)&lt;/code&gt; &lt;/a&gt;で作成された場合、このメソッドを1回でも呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="106b60f2b5148ce2dfd6561051705bbc560592e1" translate="yes" xml:space="preserve">
          <source>This method can be called at most once. It is generally called from within the constructor, or immediately after creating the throwable. If this throwable was created with &lt;a href=&quot;../../../../java.base/java/lang/throwable#%3Cinit%3E(java.lang.Throwable)&quot;&gt;&lt;code&gt;Throwable(Throwable)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/lang/throwable#%3Cinit%3E(java.lang.String,java.lang.Throwable)&quot;&gt;&lt;code&gt;Throwable(String,Throwable)&lt;/code&gt;&lt;/a&gt;, this method cannot be called even once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3a331e5b72dbd387cdfa97e259d07f1ffd3519" translate="yes" xml:space="preserve">
          <source>This method can be called at most once. It is generally called from within the constructor, or immediately after creating the throwable. If this throwable was created with &lt;a href=&quot;../../../java/lang/throwable#Throwable-java.lang.Throwable-&quot;&gt;&lt;code&gt;Throwable.Throwable(Throwable)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../java/lang/throwable#Throwable-java.lang.String-java.lang.Throwable-&quot;&gt;&lt;code&gt;Throwable.Throwable(String,Throwable)&lt;/code&gt;&lt;/a&gt;, this method cannot be called even once.</source>
          <target state="translated">このメソッドは最大で1回呼び出すことができます。通常、コンストラクター内から、またはスロー可能オブジェクトを作成した直後に呼び出されます。このスロー可能オブジェクトが&lt;a href=&quot;../../../java/lang/throwable#Throwable-java.lang.Throwable-&quot;&gt; &lt;code&gt;Throwable.Throwable(Throwable)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../../java/lang/throwable#Throwable-java.lang.String-java.lang.Throwable-&quot;&gt; &lt;code&gt;Throwable.Throwable(String,Throwable)&lt;/code&gt; &lt;/a&gt;で作成された場合、このメソッドは一度も呼び出すことができません。</target>
        </trans-unit>
        <trans-unit id="9eceeaff05ffa1d9d5a81b7c43ae8cfaa35608b7" translate="yes" xml:space="preserve">
          <source>This method can be called at most once. It is generally called from within the constructor, or immediately after creating the throwable. If this throwable was created with &lt;a href=&quot;throwable#Throwable-java.lang.Throwable-&quot;&gt;&lt;code&gt;Throwable(Throwable)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-&quot;&gt;&lt;code&gt;Throwable(String,Throwable)&lt;/code&gt;&lt;/a&gt;, this method cannot be called even once.</source>
          <target state="translated">このメソッドは最大で1回呼び出すことができます。通常、コンストラクター内から、またはスロー可能オブジェクトを作成した直後に呼び出されます。このスロー可能オブジェクトが&lt;a href=&quot;throwable#Throwable-java.lang.Throwable-&quot;&gt; &lt;code&gt;Throwable(Throwable)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-&quot;&gt; &lt;code&gt;Throwable(String,Throwable)&lt;/code&gt; &lt;/a&gt;で作成された場合、このメソッドは一度も呼び出すことができません。</target>
        </trans-unit>
        <trans-unit id="451e8ea893a5b1c5ac03287943f0ded8f29954a5" translate="yes" xml:space="preserve">
          <source>This method can be called by any thread including the event dispatch thread. This thread will be blocked until the &lt;a href=&quot;#exit()&quot;&gt;&lt;code&gt;exit()&lt;/code&gt;&lt;/a&gt; method is called or the loop is terminated. A new secondary loop will be created on the event dispatch thread for dispatching events in either case.</source>
          <target state="translated">このメソッドは、イベントディスパッチスレッドを含む任意のスレッドから呼び出すことができます。このスレッドは、&lt;a href=&quot;#exit()&quot;&gt; &lt;code&gt;exit()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されるか、ループが終了するまでブロックされます。いずれの場合も、イベントをディスパッチするために、新しいセカンダリループがイベントディスパッチスレッドに作成されます。</target>
        </trans-unit>
        <trans-unit id="60b50eff7937b117f5a61dbded0f8ffb05cfc95d" translate="yes" xml:space="preserve">
          <source>This method can be called by multiple threads concurrently. Each invocation of this method enables or disables the verbose output globally.</source>
          <target state="translated">このメソッドは、複数のスレッドから同時に呼び出すことができます。このメソッドの各呼び出しは、グローバルに冗長出力を有効または無効にします。</target>
        </trans-unit>
        <trans-unit id="39e06517b3541bd17d5119122ded9843cb3329ea" translate="yes" xml:space="preserve">
          <source>This method can be called even during a middle of a validation.</source>
          <target state="translated">このメソッドは検証の途中でも呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="299c4e6667b32b99868f975c8bd6dd86e470f87b" translate="yes" xml:space="preserve">
          <source>This method can be called even if the &lt;code&gt;Sequencer&lt;/code&gt; is closed.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;Sequencer&lt;/code&gt; が閉じている場合でも呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="04935a12b0a22b12bf855a5e71e19bb9c50c2083" translate="yes" xml:space="preserve">
          <source>This method can be called more than once with different &lt;a href=&quot;../mbeanserverforwarder&quot;&gt;&lt;code&gt;MBeanServerForwarder&lt;/code&gt;&lt;/a&gt; objects. The result is a chain of forwarders. The last forwarder added is the first in the chain. In more detail:</source>
          <target state="translated">このメソッドは、異なる&lt;a href=&quot;../mbeanserverforwarder&quot;&gt; &lt;code&gt;MBeanServerForwarder&lt;/code&gt; &lt;/a&gt;オブジェクトで複数回呼び出すことができます。結果は、フォワーダーのチェーンです。追加された最後のフォワーダーがチェーンの最初です。さらに詳細に：</target>
        </trans-unit>
        <trans-unit id="4098755630331cc7cc4951a664fbc922c3cd70b1" translate="yes" xml:space="preserve">
          <source>This method can be called more than once with different &lt;a href=&quot;mbeanserverforwarder&quot;&gt;&lt;code&gt;MBeanServerForwarder&lt;/code&gt;&lt;/a&gt; objects. The result is a chain of forwarders. The last forwarder added is the first in the chain. In more detail:</source>
          <target state="translated">このメソッドは、異なる&lt;a href=&quot;mbeanserverforwarder&quot;&gt; &lt;code&gt;MBeanServerForwarder&lt;/code&gt; &lt;/a&gt;オブジェクトで複数回呼び出すことができます。結果は、フォワーダーのチェーンです。追加された最後のフォワーダーがチェーンの最初です。さらに詳細に：</target>
        </trans-unit>
        <trans-unit id="3cefca4869a02afd855fa38bb24a17d15f64911b" translate="yes" xml:space="preserve">
          <source>This method can be called while servicing the getTabbedSpan or getPreferredSize. It has to arrange for its own text buffer to make the measurements.</source>
          <target state="translated">このメソッドは、getTabbedSpan または getPreferredSize のサービス中に呼び出すことができます。このメソッドは、測定を行うためのテキストバッファを用意しなければなりません。</target>
        </trans-unit>
        <trans-unit id="152704c734848030c731049bd66073a9f3304ac8" translate="yes" xml:space="preserve">
          <source>This method can be invoked more than once, such as to set a limit for an area of JDBC code, and to reset to the default on exit from this area. Invocation of this method has no impact on already outstanding requests.</source>
          <target state="translated">このメソッドは複数回呼び出すことができ、例えば、JDBCコードの領域の制限を設定したり、この領域からの終了時にデフォルトにリセットしたりすることができる。このメソッドを呼び出しても、未処理のリクエストには何の影響もない。</target>
        </trans-unit>
        <trans-unit id="a41b91d7e4f07f0f6f9df115255c343bbf1f9c4a" translate="yes" xml:space="preserve">
          <source>This method can be overridden if the policy implementation supports returning a set of permissions granted to a ProtectionDomain.</source>
          <target state="translated">ポリシーの実装が、ProtectionDomain に付与された権限のセットを返すことをサポートしている場合、このメソッドはオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="0d3f1e249d40ca9606279e6b3d83f971baf37161" translate="yes" xml:space="preserve">
          <source>This method can be overridden in a subclass. It is recommended to use the &lt;a href=&quot;formatter#formatMessage(java.util.logging.LogRecord)&quot;&gt;&lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt;&lt;/a&gt; convenience method to localize and format the message field.</source>
          <target state="translated">このメソッドは、サブクラスでオーバーライドできます。&lt;a href=&quot;formatter#formatMessage(java.util.logging.LogRecord)&quot;&gt; &lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt; &lt;/a&gt;コンビニエンスメソッドを使用して、メッセージフィールドをローカライズおよびフォーマットすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ac5849453ee153448b53e320bc46f0e17e938bb7" translate="yes" xml:space="preserve">
          <source>This method can be overridden in a subclass. It is recommended to use the &lt;a href=&quot;formatter#formatMessage-java.util.logging.LogRecord-&quot;&gt;&lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt;&lt;/a&gt; convenience method to localize and format the message field.</source>
          <target state="translated">このメソッドは、サブクラスでオーバーライドできます。&lt;a href=&quot;formatter#formatMessage-java.util.logging.LogRecord-&quot;&gt; &lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt; &lt;/a&gt;コンビニエンスメソッドを使用して、メッセージフィールドをローカライズおよびフォーマットすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="711318b8052541a5e77ca790049f7305df0bef3f" translate="yes" xml:space="preserve">
          <source>This method can be reimplemented to use some other kind of type registry. This can be reimplemented to use the Java Activation Framework, for example.</source>
          <target state="translated">このメソッドは、他の種類の型レジストリを使用するために再実装することができます。これは、例えばJava Activation Frameworkを使用するために再実装することができます。</target>
        </trans-unit>
        <trans-unit id="1852617286275c45d6e39c38e26249e33a824e0c" translate="yes" xml:space="preserve">
          <source>This method can be used as an adapter between &lt;code&gt;
 BodyPublisher&lt;/code&gt; and &lt;code&gt;Flow.Publisher&lt;/code&gt;, where the amount of request body that the publisher will publish is known.</source>
          <target state="translated">このメソッドは、 &lt;code&gt; BodyPublisher&lt;/code&gt; と &lt;code&gt;Flow.Publisher&lt;/code&gt; の間のアダプターとして使用できます。この場合、パブリッシャーが公開するリクエスト本文の量がわかります。</target>
        </trans-unit>
        <trans-unit id="75b3b5419fa7dadd4d6c5ccef635f96d787acf74" translate="yes" xml:space="preserve">
          <source>This method can be used as an adapter between &lt;code&gt;
 BodyPublisher&lt;/code&gt; and &lt;code&gt;Flow.Publisher&lt;/code&gt;, where the amount of request body that the publisher will publish is unknown.</source>
          <target state="translated">このメソッドは、 &lt;code&gt; BodyPublisher&lt;/code&gt; と &lt;code&gt;Flow.Publisher&lt;/code&gt; の間のアダプターとして使用できます。この場合、パブリッシャーが公開するリクエスト本文の量は不明です。</target>
        </trans-unit>
        <trans-unit id="f22c8c5e786fe4e6f9c7ce23468c2bfa1e7bcf6b" translate="yes" xml:space="preserve">
          <source>This method can be used as an adapter between &lt;code&gt;
 BodySubscriber&lt;/code&gt; and &lt;code&gt;Flow.Subscriber&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt; BodySubscriber&lt;/code&gt; と &lt;code&gt;Flow.Subscriber&lt;/code&gt; の間のアダプターとして使用できます。</target>
        </trans-unit>
        <trans-unit id="55b865bcd8b2368a90962271fa6c0e6bd17372b4" translate="yes" xml:space="preserve">
          <source>This method can be used as an adapter between a &lt;code&gt;
 BodySubscriber&lt;/code&gt; and a text based &lt;code&gt;Flow.Subscriber&lt;/code&gt; that parses text line by line.</source>
          <target state="translated">このメソッドは、 &lt;code&gt; BodySubscriber&lt;/code&gt; と、テキストを1 &lt;code&gt;Flow.Subscriber&lt;/code&gt; 解析するテキストベースのFlow.Subscriberとの間のアダプターとして使用できます。</target>
        </trans-unit>
        <trans-unit id="8463a54210c00c023047945ec36b5c80e8f95890" translate="yes" xml:space="preserve">
          <source>This method can be used as an alternative to the &lt;code&gt;execute&lt;/code&gt; method when an application has a connection to an open &lt;code&gt;ResultSet&lt;/code&gt; object. Using the method &lt;code&gt;populate&lt;/code&gt; can be more efficient than using the version of the &lt;code&gt;execute&lt;/code&gt; method that takes no parameters because it does not open a new connection and re-execute this &lt;code&gt;CachedRowSet&lt;/code&gt; object's command. Using the &lt;code&gt;populate&lt;/code&gt; method is more a matter of convenience when compared to using the version of &lt;code&gt;execute&lt;/code&gt; that takes a &lt;code&gt;ResultSet&lt;/code&gt; object.</source>
          <target state="translated">このメソッドは、アプリケーションが開いている &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトに接続している場合に、 &lt;code&gt;execute&lt;/code&gt; メソッドの代わりに使用できます。メソッド &lt;code&gt;populate&lt;/code&gt; を使用すると、新しい接続を開いてこの &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトのコマンドを再実行しないため、パラメーターを受け取らないバージョンの &lt;code&gt;execute&lt;/code&gt; メソッドを使用するよりも効率的です。 &lt;code&gt;populate&lt;/code&gt; メソッドの使用は、 &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトを受け取るバージョンの &lt;code&gt;execute&lt;/code&gt; を使用する場合と比較すると、より便利です。</target>
        </trans-unit>
        <trans-unit id="28bf6b4f8f117dd9ab0d5110d4b86315aa73bdee" translate="yes" xml:space="preserve">
          <source>This method can be used as part of a chain to produce a date:</source>
          <target state="translated">このメソッドは、チェーンの一部として日付を生成するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="db24ab0dd8e2925069a021f43db80a3535884cf5" translate="yes" xml:space="preserve">
          <source>This method can be used by a server application that needs to observe the inbound data but still create valid SSL/TLS connections: for example, inspection of Server Name Indication (SNI) extensions (See section 3 of &lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;TLS Extensions (RFC6066)&lt;/a&gt;). Data that has been already removed from the underlying &lt;a href=&quot;../../../java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; should be loaded into the &lt;code&gt;consumed&lt;/code&gt; stream before this method is called, perhaps using a &lt;a href=&quot;../../../java/io/bytearrayinputstream&quot;&gt;&lt;code&gt;ByteArrayInputStream&lt;/code&gt;&lt;/a&gt;. When this &lt;a href=&quot;../../../java/net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; begins handshaking, it will read all of the data in &lt;code&gt;consumed&lt;/code&gt; until it reaches &lt;code&gt;EOF&lt;/code&gt;, then all further data is read from the underlying &lt;a href=&quot;../../../java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; as usual.</source>
          <target state="translated">この方法は、インバウンドデータを監視しながら有効なSSL / TLS接続を作成する必要があるサーバーアプリケーションで使用できます。たとえば、サーバー名表示（SNI）拡張の検査（&lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;TLS拡張（RFC6066）の&lt;/a&gt;セクション3を参照）。おそらく&lt;a href=&quot;../../../java/io/bytearrayinputstream&quot;&gt; &lt;code&gt;ByteArrayInputStream&lt;/code&gt; &lt;/a&gt;を使用して、このメソッドが呼び出される前に、基になる&lt;a href=&quot;../../../java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;からすでに削除されているデータを &lt;code&gt;consumed&lt;/code&gt; されたストリームにロードする必要があります。この&lt;a href=&quot;../../../java/net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt;がハンドシェイクを開始すると、 &lt;code&gt;consumed&lt;/code&gt; れたすべてのデータが &lt;code&gt;EOF&lt;/code&gt; に達するまで読み取られ、それ以降のデータはすべて、通常どおりに基本の&lt;a href=&quot;../../../java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;から読み取られます。</target>
        </trans-unit>
        <trans-unit id="993cd75a919a27d0b797eff972efac7d10d7004d" translate="yes" xml:space="preserve">
          <source>This method can be used by a server application that needs to observe the inbound data but still create valid SSL/TLS connections: for example, inspection of Server Name Indication (SNI) extensions (See section 3 of &lt;a href=&quot;https://www.ietf.org/rfc/rfc6066.txt&quot;&gt;TLS Extensions (RFC6066)&lt;/a&gt;). Data that has been already removed from the underlying &lt;a href=&quot;../../../java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; should be loaded into the &lt;code&gt;consumed&lt;/code&gt; stream before this method is called, perhaps using a &lt;a href=&quot;../../../java/io/bytearrayinputstream&quot;&gt;&lt;code&gt;ByteArrayInputStream&lt;/code&gt;&lt;/a&gt;. When this &lt;a href=&quot;../../../java/net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; begins handshaking, it will read all of the data in &lt;code&gt;consumed&lt;/code&gt; until it reaches &lt;code&gt;EOF&lt;/code&gt;, then all further data is read from the underlying &lt;a href=&quot;../../../java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; as usual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="213b3625cf6d5ba07208869fbd5adce1b71d45df" translate="yes" xml:space="preserve">
          <source>This method can be used by a server to verify the acceptable &lt;code&gt;SNIHostName&lt;/code&gt;s. For example,</source>
          <target state="translated">サーバーはこのメソッドを使用して、受け入れ可能な &lt;code&gt;SNIHostName&lt;/code&gt; を確認できます。例えば、</target>
        </trans-unit>
        <trans-unit id="431f2a04c941e9bafd2a6c3390c2e62b0b6f13eb" translate="yes" xml:space="preserve">
          <source>This method can be used for cases where a &lt;em&gt;consumer module&lt;/em&gt; uses a qualified opens to open a package to an &lt;em&gt;API module&lt;/em&gt; but where the reflective access to the members of classes in the consumer module is delegated to code in another module. Code in the API module can use this method to open the package in the consumer module to the other module.</source>
          <target state="translated">このメソッドは、&lt;em&gt;コンシューマーモジュール&lt;/em&gt;が修飾されたオープンを使用してパッケージを&lt;em&gt;APIモジュール&lt;/em&gt;に開くが、コンシューマーモジュールのクラスのメンバーへのリフレクティブアクセスが別のモジュールのコードに委任されている場合に使用できます。APIモジュールのコードは、このメソッドを使用して、コンシューマーモジュールのパッケージを他のモジュールに開くことができます。</target>
        </trans-unit>
        <trans-unit id="c00bdda37d48238fd8c0728f49001c92de5221d8" translate="yes" xml:space="preserve">
          <source>This method can be used in conjunction with the &lt;a href=&quot;#getHeaderFieldKey(int)&quot;&gt;&lt;code&gt;getHeaderFieldKey&lt;/code&gt;&lt;/a&gt; method to iterate through all the headers in the message.</source>
          <target state="translated">このメソッドを&lt;a href=&quot;#getHeaderFieldKey(int)&quot;&gt; &lt;code&gt;getHeaderFieldKey&lt;/code&gt; &lt;/a&gt;メソッドと組み合わせて使用​​すると、メッセージ内のすべてのヘッダーを反復処理できます。</target>
        </trans-unit>
        <trans-unit id="928c1d271faddcde95dcea8e56f6185dffe614f5" translate="yes" xml:space="preserve">
          <source>This method can be used in conjunction with the &lt;a href=&quot;httpurlconnection#getHeaderFieldKey-int-&quot;&gt;&lt;code&gt;getHeaderFieldKey&lt;/code&gt;&lt;/a&gt; method to iterate through all the headers in the message.</source>
          <target state="translated">このメソッドを&lt;a href=&quot;httpurlconnection#getHeaderFieldKey-int-&quot;&gt; &lt;code&gt;getHeaderFieldKey&lt;/code&gt; &lt;/a&gt;メソッドと組み合わせて使用​​して、メッセージ内のすべてのヘッダーを反復処理できます。</target>
        </trans-unit>
        <trans-unit id="f703d7479b308d8360a4a0178f9318bbca19adae" translate="yes" xml:space="preserve">
          <source>This method can be used in conjunction with the &lt;a href=&quot;urlconnection#getHeaderFieldKey-int-&quot;&gt;&lt;code&gt;getHeaderFieldKey&lt;/code&gt;&lt;/a&gt; method to iterate through all the headers in the message.</source>
          <target state="translated">このメソッドを&lt;a href=&quot;urlconnection#getHeaderFieldKey-int-&quot;&gt; &lt;code&gt;getHeaderFieldKey&lt;/code&gt; &lt;/a&gt;メソッドと組み合わせて使用​​して、メッセージ内のすべてのヘッダーを反復処理できます。</target>
        </trans-unit>
        <trans-unit id="c49ca84b0514b7b765442bb0401fc1d867d8b5e3" translate="yes" xml:space="preserve">
          <source>This method can be used in the &lt;code&gt;mouseDragged&lt;/code&gt; method of a UI class to extend a selection.</source>
          <target state="translated">このメソッドは、UIクラスの &lt;code&gt;mouseDragged&lt;/code&gt; メソッドで使用して、選択を拡張できます。</target>
        </trans-unit>
        <trans-unit id="02868c0c24d21acc9b85ee5a1068a3af1e28e5e1" translate="yes" xml:space="preserve">
          <source>This method can be used instead of &lt;a href=&quot;#setIconImages(java.util.List)&quot;&gt;&lt;code&gt;setIconImages()&lt;/code&gt;&lt;/a&gt; to specify a single image as a window's icon.</source>
          <target state="translated">&lt;a href=&quot;#setIconImages(java.util.List)&quot;&gt; &lt;code&gt;setIconImages()&lt;/code&gt; の&lt;/a&gt;代わりにこのメソッドを使用して、単一の画像をウィンドウのアイコンとして指定できます。</target>
        </trans-unit>
        <trans-unit id="4a85a2ca166ead5a15deaefb8c30ab84046ef4e7" translate="yes" xml:space="preserve">
          <source>This method can be used on fields annotated with &lt;code&gt;@Timespan&lt;/code&gt;, and of the following types: &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, and &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470265f986adaaa57a2c7396c7ab7136cc99a83d" translate="yes" xml:space="preserve">
          <source>This method can be used on fields annotated with &lt;code&gt;@Timestamp&lt;/code&gt;, and of the following types: &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt; and &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84062c4b7e877cfac58cf8068091f20cfd3f79a" translate="yes" xml:space="preserve">
          <source>This method can be used on fields of the following types: &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, and &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80bf2ecdebcbfa6984eb44425640e9057fed5e02" translate="yes" xml:space="preserve">
          <source>This method can be used on fields of the following types: &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, and &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0e0806849c24edb3012d13fc6914a570addf94" translate="yes" xml:space="preserve">
          <source>This method can be used on fields of the following types: &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, and &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ee520717af51f3b1155fe278457ee162ad2156" translate="yes" xml:space="preserve">
          <source>This method can be used on fields of the following types: &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, and &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f0037458dcf0e9601907d651ae6234308fd083b" translate="yes" xml:space="preserve">
          <source>This method can be used on the following types: &lt;code&gt;short&lt;/code&gt; and &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e38dd709c7fd1e6574c35d57d28c8173d7ce0bb" translate="yes" xml:space="preserve">
          <source>This method can be used to lookup CRL entries in indirect CRLs, that means CRLs that contain entries from issuers other than the CRL issuer. The default implementation will only return entries for certificates issued by the CRL issuer. Subclasses that wish to support indirect CRLs should override this method.</source>
          <target state="translated">このメソッドは、間接的な CRL、すなわち CRL 発行者以外の発行者からのエントリを含む CRL の CRL エントリを検索するために使用することができる。デフォルトの実装では、CRL 発行者によって発行された証明書のエントリのみを返します。間接的な CRL をサポートしたいサブクラスは、このメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="24a6fbecd6b7a97e5ee6d2d32f7469da543abf6c" translate="yes" xml:space="preserve">
          <source>This method can be used to transform a &lt;code&gt;Stream&lt;/code&gt; of optional doubles to a &lt;code&gt;DoubleStream&lt;/code&gt; of present doubles:</source>
          <target state="translated">このメソッドを使用して、オプションのdoubleの &lt;code&gt;Stream&lt;/code&gt; を現在のdoubleの &lt;code&gt;DoubleStream&lt;/code&gt; に変換できます。</target>
        </trans-unit>
        <trans-unit id="f87a58c2ee09f237fa1a33f2797a4c5ff3a10987" translate="yes" xml:space="preserve">
          <source>This method can be used to transform a &lt;code&gt;Stream&lt;/code&gt; of optional elements to a &lt;code&gt;Stream&lt;/code&gt; of present value elements:</source>
          <target state="translated">このメソッドは、オプション要素の &lt;code&gt;Stream&lt;/code&gt; を現在価値要素の &lt;code&gt;Stream&lt;/code&gt; に変換するために使用できます。</target>
        </trans-unit>
        <trans-unit id="3f850aad2294519b89350ed09111e9102e926bf5" translate="yes" xml:space="preserve">
          <source>This method can be used to transform a &lt;code&gt;Stream&lt;/code&gt; of optional integers to an &lt;code&gt;IntStream&lt;/code&gt; of present integers:</source>
          <target state="translated">このメソッドは、オプションの整数の &lt;code&gt;Stream&lt;/code&gt; を現在の整数の &lt;code&gt;IntStream&lt;/code&gt; に変換するために使用できます。</target>
        </trans-unit>
        <trans-unit id="c3f80e68ac33e9e9b656166704fc52757555cac1" translate="yes" xml:space="preserve">
          <source>This method can be used to transform a &lt;code&gt;Stream&lt;/code&gt; of optional longs to an &lt;code&gt;LongStream&lt;/code&gt; of present longs:</source>
          <target state="translated">この方法では、変換するために使用できる &lt;code&gt;Stream&lt;/code&gt; にオプションのlong型のを &lt;code&gt;LongStream&lt;/code&gt; 存在long型の：</target>
        </trans-unit>
        <trans-unit id="ab4d3b36814ecc5f9e6f1f1582133b3012251b42" translate="yes" xml:space="preserve">
          <source>This method can only be called while the dialog is not displayable. To make this dialog decorated, it must be opaque and have the default shape, otherwise the &lt;code&gt;IllegalComponentStateException&lt;/code&gt; will be thrown. Refer to &lt;a href=&quot;window#setShape(java.awt.Shape)&quot;&gt;&lt;code&gt;Window.setShape(java.awt.Shape)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;window#setOpacity(float)&quot;&gt;&lt;code&gt;Window.setOpacity(float)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;window#setBackground(java.awt.Color)&quot;&gt;&lt;code&gt;Window.setBackground(java.awt.Color)&lt;/code&gt;&lt;/a&gt; for details</source>
          <target state="translated">このメソッドは、ダイアログが表示されていないときにのみ呼び出すことができます。このダイアログを装飾するには、不透明でデフォルトの形状にする &lt;code&gt;IllegalComponentStateException&lt;/code&gt; があります。そうしないと、IllegalComponentStateExceptionがスローされます。詳細については、&lt;a href=&quot;window#setShape(java.awt.Shape)&quot;&gt; &lt;code&gt;Window.setShape(java.awt.Shape)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;window#setOpacity(float)&quot;&gt; &lt;code&gt;Window.setOpacity(float)&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;window#setBackground(java.awt.Color)&quot;&gt; &lt;code&gt;Window.setBackground(java.awt.Color)&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="59920c8c0965026ce9677374b818551b65b70db1" translate="yes" xml:space="preserve">
          <source>This method can only be called while the frame is not displayable. To make this frame decorated, it must be opaque and have the default shape, otherwise the &lt;code&gt;IllegalComponentStateException&lt;/code&gt; will be thrown. Refer to &lt;a href=&quot;window#setShape(java.awt.Shape)&quot;&gt;&lt;code&gt;Window.setShape(java.awt.Shape)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;window#setOpacity(float)&quot;&gt;&lt;code&gt;Window.setOpacity(float)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;window#setBackground(java.awt.Color)&quot;&gt;&lt;code&gt;Window.setBackground(java.awt.Color)&lt;/code&gt;&lt;/a&gt; for details</source>
          <target state="translated">このメソッドは、フレームが表示されていないときにのみ呼び出すことができます。このフレームを装飾するには、不透明でデフォルトの形状にする &lt;code&gt;IllegalComponentStateException&lt;/code&gt; があります。そうしないと、IllegalComponentStateExceptionがスローされます。詳細については、&lt;a href=&quot;window#setShape(java.awt.Shape)&quot;&gt; &lt;code&gt;Window.setShape(java.awt.Shape)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;window#setOpacity(float)&quot;&gt; &lt;code&gt;Window.setOpacity(float)&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;window#setBackground(java.awt.Color)&quot;&gt; &lt;code&gt;Window.setBackground(java.awt.Color)&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="515dbc83a9d17200131e255617345851e1d91d97" translate="yes" xml:space="preserve">
          <source>This method can only be used to measure elapsed time and is not related to any other notion of system or wall-clock time. The value returned represents nanoseconds since some fixed but arbitrary</source>
          <target state="translated">このメソッドは経過時間の測定にのみ使用でき、システム時間やウォールクロック時間の他の概念とは関係ありません。返される値は、固定ではあるが任意の</target>
        </trans-unit>
        <trans-unit id="1a51b53255dcd675cbaf2af24d47355a4b2c81d0" translate="yes" xml:space="preserve">
          <source>This method can only start one new event loop at a time per object. If a secondary event loop has already been started by this object and is currently still running, this method returns &lt;code&gt;false&lt;/code&gt; to indicate that it was not successful in starting a new event loop. Otherwise, this method blocks the calling thread and later returns &lt;code&gt;true&lt;/code&gt; when the new event loop is terminated. At such time, this object can again be used to start another new event loop.</source>
          <target state="translated">このメソッドは、オブジェクトごとに一度に1つの新しいイベントループのみを開始できます。セカンダリイベントループがこのオブジェクトによってすでに開始されていて、現在も実行されている場合、このメソッドは &lt;code&gt;false&lt;/code&gt; を返し、新しいイベントループの開始に成功しなかったことを示します。それ以外の場合、このメソッドは呼び出し元のスレッドをブロックし、後で新しいイベントループが終了すると &lt;code&gt;true&lt;/code&gt; を返します。このような場合、このオブジェクトを再度使用して、別の新しいイベントループを開始できます。</target>
        </trans-unit>
        <trans-unit id="e10030988b1a71e41e9ac9a62527916dd0f43b89" translate="yes" xml:space="preserve">
          <source>This method can quickly check whether Flight Recorder can be initialized, without actually doing the initialization work. The value may change during runtime and it is not safe to cache it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b13cf3cc1e2afcf12364ed3ba12cfcc714e0ba" translate="yes" xml:space="preserve">
          <source>This method can return the following value not defined on the IANA page:</source>
          <target state="translated">このメソッドは、IANAページで定義されていない以下の値を返すことができます。</target>
        </trans-unit>
        <trans-unit id="6b0826ff6d73c277dcb6df37b0800472398a3a4e" translate="yes" xml:space="preserve">
          <source>This method cannot be used to enable &lt;a href=&quot;#set(java.lang.Object,java.lang.Object)&quot;&gt;&lt;em&gt;write&lt;/em&gt;&lt;/a&gt; access to a &lt;em&gt;non-modifiable&lt;/em&gt; final field. The following fields are non-modifiable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fad408daef77d934d350d47817ef10514ea080b" translate="yes" xml:space="preserve">
          <source>This method cannot be used to enable &lt;a href=&quot;field#set(java.lang.Object,java.lang.Object)&quot;&gt;&lt;em&gt;write&lt;/em&gt;&lt;/a&gt; access to a &lt;em&gt;non-modifiable&lt;/em&gt; final field. The following fields are non-modifiable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0eedcac980f22bb465aa2bea247bb2a7edfea48" translate="yes" xml:space="preserve">
          <source>This method cannot be used to enable access to private members, members with default (package) access, protected instance members, or protected constructors when the declaring class is in a different module to the caller and the package containing the declaring class is not open to the caller's module.</source>
          <target state="translated">このメソッドは、宣言するクラスが呼び出し元とは異なるモジュールにあり、宣言するクラスを含むパッケージが呼び出し元のモジュールに開かれていない場合に、プライベートメンバー、デフォルト (パッケージ)アクセスのメンバー、保護されたインスタンスメンバー、または保護されたコンストラクタへのアクセスを有効にするために使用することはできません。</target>
        </trans-unit>
        <trans-unit id="37ac1594ca579fbc31f8bc26c78b28d0b47b952f" translate="yes" xml:space="preserve">
          <source>This method cannot be used to set the focus owner to no Component at all. Use &lt;code&gt;KeyboardFocusManager.clearGlobalFocusOwner()&lt;/code&gt; instead.</source>
          <target state="translated">このメソッドを使用して、フォーカス所有者をコンポーネントなしに設定することはできません。代わりに &lt;code&gt;KeyboardFocusManager.clearGlobalFocusOwner()&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="884543a9dea1ae99b90dc88120840de895e7ce48" translate="yes" xml:space="preserve">
          <source>This method cannot be used to set the focus owner to no component at all. Use &lt;code&gt;KeyboardFocusManager.clearGlobalFocusOwner&lt;/code&gt; instead.</source>
          <target state="translated">このメソッドを使用して、フォーカス所有者をコンポーネントなしに設定することはできません。代わりに &lt;code&gt;KeyboardFocusManager.clearGlobalFocusOwner&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="1026f02beb60ec3bc72723daed93928afc228cca" translate="yes" xml:space="preserve">
          <source>This method cannot handle &lt;a href=&quot;#supplementary&quot;&gt; supplementary characters&lt;/a&gt;. To support all Unicode characters, including supplementary characters, use the &lt;a href=&quot;#toString(int)&quot;&gt;&lt;code&gt;toString(int)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#supplementary&quot;&gt;補足文字を&lt;/a&gt;処理できません。補助文字を含むすべてのUnicode文字をサポートするには、&lt;a href=&quot;#toString(int)&quot;&gt; &lt;code&gt;toString(int)&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="43df95e88fab9a3f3c24f1b80d081aa01bbd9975" translate="yes" xml:space="preserve">
          <source>This method cannot reduce the set of modules that a module reads, nor reduce the set of packages that it exports or opens, nor reduce the set of services that it uses or provides. This method is a no-op when invoked to redefine an unnamed module.</source>
          <target state="translated">このメソッドは、モジュールが読み込むモジュールのセットを減らしたり、 エクスポートやオープンするパッケージのセットを減らしたり、使用したり提供したりする サービスのセットを減らしたりすることはできません。このメソッドは、名前のないモジュールを再定義するために呼び出された場合には実行されません。</target>
        </trans-unit>
        <trans-unit id="4fec536b3f6a191347ba70d3121bfd0d2cb06db2" translate="yes" xml:space="preserve">
          <source>This method causes the current thread (call it &lt;var&gt;T&lt;/var&gt;) to place itself in the wait set for this object and then to relinquish any and all synchronization claims on this object. Thread &lt;var&gt;T&lt;/var&gt; becomes disabled for thread scheduling purposes and lies dormant until one of four things happens:</source>
          <target state="translated">このメソッドは、現在のスレッド（ &lt;var&gt;T&lt;/var&gt; と呼ぶ）をこのオブジェクトの待機セットに配置し、このオブジェクトのすべての同期要求を放棄します。スレッド &lt;var&gt;T&lt;/var&gt; はスレッドスケジューリングの目的で無効になり、次の4つのいずれかが発生するまで待機します。</target>
        </trans-unit>
        <trans-unit id="5dd04fc27a643d764c5509eff4da64fb40bdba99" translate="yes" xml:space="preserve">
          <source>This method causes the current thread (referred to here as &lt;var&gt;T&lt;/var&gt;) to place itself in the wait set for this object and then to relinquish any and all synchronization claims on this object. Note that only the locks on this object are relinquished; any other objects on which the current thread may be synchronized remain locked while the thread waits.</source>
          <target state="translated">このメソッドにより、現在のスレッド（ここでは &lt;var&gt;T&lt;/var&gt; と呼ばれます）は、このオブジェクトの待機セットに自分自身を配置し、このオブジェクトに対するすべての同期要求を放棄します。このオブジェクトのロックのみが放棄されることに注意してください。現在のスレッドが同期される可能性のある他のオブジェクトは、スレッドが待機している間はロックされたままになります。</target>
        </trans-unit>
        <trans-unit id="8c8fb0901563ffb631d201729498da3e444ca3d2" translate="yes" xml:space="preserve">
          <source>This method causes this Configuration object to refresh/reload its contents in an implementation-dependent manner. For example, if this Configuration object stores its entries in a file, calling &lt;code&gt;refresh&lt;/code&gt; may cause the file to be re-read.</source>
          <target state="translated">このメソッドにより、このConfigurationオブジェクトは、実装に依存する方法でコンテンツを更新/再読み込みします。たとえば、このConfigurationオブジェクトがそのエントリをファイルに保存している場合、 &lt;code&gt;refresh&lt;/code&gt; を呼び出すと、ファイルが再度読み込まれることがあります。</target>
        </trans-unit>
        <trans-unit id="fddc8f5ad8ea28f9d3e410df7981f8dccd5dffee" translate="yes" xml:space="preserve">
          <source>This method causes this matcher to lose information about the groups of the last match that occurred. The matcher's position in the input is maintained and its last append position is unaffected.</source>
          <target state="translated">この方法では、このマッチャは最後に発生したマッチのグループに関する情報を失います。入力内のマッチャの位置は維持され、最後の追加位置は影響を受けません。</target>
        </trans-unit>
        <trans-unit id="1d1f81bab3a52524ce08c86b4332e81bfd92c55c" translate="yes" xml:space="preserve">
          <source>This method causes this object to refresh/reload its current Policy. This is implementation-dependent. For example, if the Policy object is stored in a file, calling &lt;code&gt;refresh&lt;/code&gt; will cause the file to be re-read.</source>
          <target state="translated">このメソッドにより、このオブジェクトは現在のポリシーを更新/再読み込みします。これは実装に依存します。たとえば、Policyオブジェクトがファイルに格納されている場合、 &lt;code&gt;refresh&lt;/code&gt; を呼び出すと、ファイルが再度読み込まれます。</target>
        </trans-unit>
        <trans-unit id="19a7aad3866fb9814353164cf676292b0af0ef72" translate="yes" xml:space="preserve">
          <source>This method changes layout-related information, and therefore, invalidates the component hierarchy.</source>
          <target state="translated">このメソッドはレイアウト関連の情報を変更するため、コンポーネント階層を無効にします。</target>
        </trans-unit>
        <trans-unit id="45778c96edf5c2b0d9dab1a64f79c9f3ef59c2a1" translate="yes" xml:space="preserve">
          <source>This method changes layout-related information, and therefore, invalidates the component hierarchy. If the container has already been displayed, the hierarchy must be validated thereafter in order to display the added component.</source>
          <target state="translated">このメソッドはレイアウト関連の情報を変更するため、コンポーネントの階層を無効にします。コンテナが既に表示されている場合、追加されたコンポーネントを表示するためには、その後に階層を検証する必要があります。</target>
        </trans-unit>
        <trans-unit id="a67ca0d624fc976ec54ab2f4324c067dadfb06de" translate="yes" xml:space="preserve">
          <source>This method changes layout-related information, and therefore, invalidates the component hierarchy. If the container has already been displayed, the hierarchy must be validated thereafter in order to reflect the changes.</source>
          <target state="translated">このメソッドはレイアウト関連の情報を変更するため、コンポーネント階層を無効にします。コンテナが既に表示されている場合、変更を反映させるためには、その後に階層を検証する必要があります。</target>
        </trans-unit>
        <trans-unit id="3296a2f999228f4cc6234021423bf4c10e89c1da" translate="yes" xml:space="preserve">
          <source>This method changes the time-zone and retains the instant. This normally results in a change to the local date-time.</source>
          <target state="translated">この方法は、タイムゾーンを変更して瞬間を保持します。これは通常、ローカルの日付時間を変更することになります。</target>
        </trans-unit>
        <trans-unit id="f58a4832d2894c57bf6b53fdc25d36c50ca64543" translate="yes" xml:space="preserve">
          <source>This method changes the time-zone and retains the local date-time. The local date-time is only changed if it is invalid for the new zone, determined using the same approach as &lt;a href=&quot;#ofLocal(java.time.LocalDateTime,java.time.ZoneId,java.time.ZoneOffset)&quot;&gt;&lt;code&gt;ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドはタイムゾーンを変更し、ローカルの日時を保持します。ローカル日時は、&lt;a href=&quot;#ofLocal(java.time.LocalDateTime,java.time.ZoneId,java.time.ZoneOffset)&quot;&gt; &lt;code&gt;ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt; &lt;/a&gt;と同じアプローチを使用して決定された、新しいゾーンに対して無効な場合にのみ変更されます。</target>
        </trans-unit>
        <trans-unit id="6d0f6dec553a6941b395b610d1f5cce0efbd8f9b" translate="yes" xml:space="preserve">
          <source>This method changes the time-zone and retains the local date-time. The local date-time is only changed if it is invalid for the new zone, determined using the same approach as &lt;a href=&quot;zoneddatetime#ofLocal-java.time.LocalDateTime-java.time.ZoneId-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドはタイムゾーンを変更し、ローカルの日時を保持します。ローカルの日時は、新しいゾーンに対して無効である場合にのみ変更され、&lt;a href=&quot;zoneddatetime#ofLocal-java.time.LocalDateTime-java.time.ZoneId-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt; &lt;/a&gt;と同じアプローチを使用して決定されます。</target>
        </trans-unit>
        <trans-unit id="46a23253baf38b2f1c044ac18305191965f3786a" translate="yes" xml:space="preserve">
          <source>This method changes the time-zone and retains the local date-time. The local date-time is only changed if it is invalid for the new zone.</source>
          <target state="translated">このメソッドはタイムゾーンを変更し、ローカルの日付時刻を保持する。ローカルの日時が変更されるのは、それが新しいゾーンでは無効な場合のみです。</target>
        </trans-unit>
        <trans-unit id="9b7dba98cefc7d4e08cd67030dfe875c9a5b7a1c" translate="yes" xml:space="preserve">
          <source>This method checks against the range of the field in the ISO-8601 calendar system. This range may be incorrect for other calendar systems. Use &lt;a href=&quot;../chrono/chronology#range(java.time.temporal.ChronoField)&quot;&gt;&lt;code&gt;Chronology.range(ChronoField)&lt;/code&gt;&lt;/a&gt; to access the correct range for a different calendar system.</source>
          <target state="translated">このメソッドは、ISO-8601カレンダーシステムのフィールドの範囲をチェックします。この範囲は、他のカレンダーシステムでは正しくない可能性があります。使用&lt;a href=&quot;../chrono/chronology#range(java.time.temporal.ChronoField)&quot;&gt; &lt;code&gt;Chronology.range(ChronoField)&lt;/code&gt; &lt;/a&gt;異なるカレンダーシステムの正しい範囲にアクセスします。</target>
        </trans-unit>
        <trans-unit id="5310049153ef893dddbedcbaea486c6508e001ef" translate="yes" xml:space="preserve">
          <source>This method checks against the range of the field in the ISO-8601 calendar system. This range may be incorrect for other calendar systems. Use &lt;a href=&quot;../chrono/chronology#range-java.time.temporal.ChronoField-&quot;&gt;&lt;code&gt;Chronology.range(ChronoField)&lt;/code&gt;&lt;/a&gt; to access the correct range for a different calendar system.</source>
          <target state="translated">このメソッドは、ISO-8601カレンダーシステムのフィールドの範囲をチェックします。この範囲は、他のカレンダーシステムでは正しくない場合があります。使用&lt;a href=&quot;../chrono/chronology#range-java.time.temporal.ChronoField-&quot;&gt; &lt;code&gt;Chronology.range(ChronoField)&lt;/code&gt; &lt;/a&gt;異なるカレンダーシステムの正しい範囲にアクセスします。</target>
        </trans-unit>
        <trans-unit id="c857b14e72d1582778eab33648b7bb93672a7ba7" translate="yes" xml:space="preserve">
          <source>This method checks if the &lt;code&gt;LogRecord&lt;/code&gt; has an appropriate &lt;code&gt;Level&lt;/code&gt; and whether it satisfies any &lt;code&gt;Filter&lt;/code&gt;. It also may make other &lt;code&gt;Handler&lt;/code&gt; specific checks that might prevent a handler from logging the &lt;code&gt;LogRecord&lt;/code&gt;. It will return false if the &lt;code&gt;LogRecord&lt;/code&gt; is null.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;LogRecord&lt;/code&gt; に適切な &lt;code&gt;Level&lt;/code&gt; があるかどうか、および任意の &lt;code&gt;Filter&lt;/code&gt; を満たすかどうかをチェックします。また、ハンドラーが &lt;code&gt;LogRecord&lt;/code&gt; をログに記録できないようにする他の &lt;code&gt;Handler&lt;/code&gt; 固有のチェックを行う場合もあります。 &lt;code&gt;LogRecord&lt;/code&gt; がnullの場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="b9cae628e4cbb314ffd27f1df73f8bc56609f660" translate="yes" xml:space="preserve">
          <source>This method checks if the &lt;code&gt;LogRecord&lt;/code&gt; has an appropriate level and whether it satisfies any &lt;code&gt;Filter&lt;/code&gt;. However it does &lt;b&gt;not&lt;/b&gt; check whether the &lt;code&gt;LogRecord&lt;/code&gt; would result in a &quot;push&quot; of the buffer contents. It will return false if the &lt;code&gt;LogRecord&lt;/code&gt; is null.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;LogRecord&lt;/code&gt; に適切なレベルがあるかどうか、および任意の &lt;code&gt;Filter&lt;/code&gt; を満たすかどうかをチェックします。ただし、 &lt;code&gt;LogRecord&lt;/code&gt; によってバッファの内容が「プッシュ」されるかどうかはチェックされませ&lt;b&gt;ん&lt;/b&gt;。 &lt;code&gt;LogRecord&lt;/code&gt; がnullの場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="7d654c3b8bd21b790c01a40658ed4f6204877578" translate="yes" xml:space="preserve">
          <source>This method checks if the &lt;code&gt;LogRecord&lt;/code&gt; has an appropriate level and whether it satisfies any &lt;code&gt;Filter&lt;/code&gt;. It will also return false if no output stream has been assigned yet or the LogRecord is null.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;LogRecord&lt;/code&gt; に適切なレベルがあるかどうか、および任意の &lt;code&gt;Filter&lt;/code&gt; を満たすかどうかをチェックします。また、出力ストリームがまだ割り当てられていない場合、またはLogRecordがnullの場合もfalseを返します。</target>
        </trans-unit>
        <trans-unit id="5f84a892f763ba53195d9e2c5adaa7a9d804bc54" translate="yes" xml:space="preserve">
          <source>This method checks if the specified &lt;code&gt;namespaceURI&lt;/code&gt; is the default namespace or not.</source>
          <target state="translated">このメソッドは、指定された &lt;code&gt;namespaceURI&lt;/code&gt; がデフォルトの名前空間であるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="383b68cf26d225dc362b15b7eac00ca6802a249a" translate="yes" xml:space="preserve">
          <source>This method checks if the specified package starts with or equals any of the packages in the &lt;code&gt;package.access&lt;/code&gt; Security Property. An implementation may also check the package against an additional list of restricted packages as noted below. If the package is restricted, &lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission(Permission)&lt;/code&gt;&lt;/a&gt; is called with a &lt;code&gt;RuntimePermission(&quot;accessClassInPackage.&quot;+pkg)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、指定されたパッケージが &lt;code&gt;package.access&lt;/code&gt; セキュリティプロパティ内のパッケージのいずれかで始まるか、それと等しいかどうかを確認します。実装は、以下に示すように、制限されたパッケージの追加リストに対してパッケージをチェックすることもできます。パッケージが制限されている &lt;code&gt;RuntimePermission(&quot;accessClassInPackage.&quot;+pkg)&lt;/code&gt; 、&lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission(Permission)&lt;/code&gt; &lt;/a&gt;はRuntimePermission（ &quot;accessClassInPackage。&quot; + pkg）権限で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="27b7aee2b9eacd15fd77b67ffe665a5bbbf61bf3" translate="yes" xml:space="preserve">
          <source>This method checks if the specified package starts with or equals any of the packages in the &lt;code&gt;package.definition&lt;/code&gt; Security Property. An implementation may also check the package against an additional list of restricted packages as noted below. If the package is restricted, &lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission(Permission)&lt;/code&gt;&lt;/a&gt; is called with a &lt;code&gt;RuntimePermission(&quot;defineClassInPackage.&quot;+pkg)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、指定されたパッケージが &lt;code&gt;package.definition&lt;/code&gt; セキュリティプロパティ内のいずれかのパッケージで始まるか、それと等しいかどうかを確認します。実装は、以下に示すように、制限されたパッケージの追加リストに対してパッケージをチェックすることもできます。パッケージが制限されている &lt;code&gt;RuntimePermission(&quot;defineClassInPackage.&quot;+pkg)&lt;/code&gt; 、&lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission(Permission)&lt;/code&gt; &lt;/a&gt;はRuntimePermission（ &quot;defineClassInPackage。&quot; + pkg）権限で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="74391c52a27ced5a9b2079a0933c22c720eef4b2" translate="yes" xml:space="preserve">
          <source>This method checks that &lt;code&gt;cmdarray&lt;/code&gt; is a valid operating system command. Which commands are valid is system-dependent, but at the very least the command must be a non-empty list of non-null strings.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;cmdarray&lt;/code&gt; が有効なオペレーティングシステムコマンドであることを確認します。有効なコマンドはシステムに依存しますが、少なくとも、コマンドは空でない非null文字列のリストである必要があります。</target>
        </trans-unit>
        <trans-unit id="02b9f2626413e81b573bfe50d50d41f41858234a" translate="yes" xml:space="preserve">
          <source>This method checks that the command is a valid operating system command. Which commands are valid is system-dependent, but at the very least the command must be a non-empty list of non-null strings.</source>
          <target state="translated">このメソッドは、コマンドが有効なオペレーティングシステムのコマンドであるかどうかをチェックします。どのコマンドが有効かはシステムに依存しますが、少なくともコマンドは空でない文字列のリストでなければなりません。</target>
        </trans-unit>
        <trans-unit id="80106af0f11970b7bc5d84c28e2c9715b1421695" translate="yes" xml:space="preserve">
          <source>This method checks the existence of a file and that this Java virtual machine has appropriate privileges that would allow it access the file according to all of access modes specified in the &lt;code&gt;modes&lt;/code&gt; parameter as follows:</source>
          <target state="translated">このメソッドは、ファイルの存在をチェックし、このJava仮想マシンが、 &lt;code&gt;modes&lt;/code&gt; パラメータで指定されたすべてのアクセスモードに従ってファイルへのアクセスを許可する適切な権限を持っていることを次のように確認します。</target>
        </trans-unit>
        <trans-unit id="3555333348f5253ac448ef05852394979a8a0107" translate="yes" xml:space="preserve">
          <source>This method checks to see that there is an &lt;code&gt;SQLPermission&lt;/code&gt; object before allowing the method to proceed. If a &lt;code&gt;SecurityManager&lt;/code&gt; exists and its &lt;code&gt;checkPermission&lt;/code&gt; method denies calling &lt;code&gt;abort&lt;/code&gt;, this method throws a &lt;code&gt;java.lang.SecurityException&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、メソッドの続行を許可する前に、 &lt;code&gt;SQLPermission&lt;/code&gt; オブジェクトがあることを確認します。 &lt;code&gt;SecurityManager&lt;/code&gt; が存在し、その &lt;code&gt;checkPermission&lt;/code&gt; メソッドが &lt;code&gt;abort&lt;/code&gt; の呼び出しを拒否した場合、このメソッドは &lt;code&gt;java.lang.SecurityException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="f3f39d8bbeca7640ed5bdcd4200bc9479efd8717" translate="yes" xml:space="preserve">
          <source>This method checks to see that there is an &lt;code&gt;SQLPermission&lt;/code&gt; object before allowing the method to proceed. If a &lt;code&gt;SecurityManager&lt;/code&gt; exists and its &lt;code&gt;checkPermission&lt;/code&gt; method denies calling &lt;code&gt;setNetworkTimeout&lt;/code&gt;, this method throws a &lt;code&gt;java.lang.SecurityException&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、メソッドの続行を許可する前に、 &lt;code&gt;SQLPermission&lt;/code&gt; オブジェクトがあることを確認します。場合 &lt;code&gt;SecurityManager&lt;/code&gt; が存在し、その &lt;code&gt;checkPermission&lt;/code&gt; メソッドが呼び出し拒否し &lt;code&gt;setNetworkTimeout&lt;/code&gt; を、この方法は、スロー &lt;code&gt;java.lang.SecurityException&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="b07c81c430ba1bb5857396f1dd0fa9273ee0e6f7" translate="yes" xml:space="preserve">
          <source>This method checks to see that there is an &lt;code&gt;SQLPermission&lt;/code&gt; object which grants the permission &lt;code&gt;setSyncFactory&lt;/code&gt; before allowing the method to succeed. If a &lt;code&gt;SecurityManager&lt;/code&gt; exists and its &lt;code&gt;checkPermission&lt;/code&gt; method denies calling &lt;code&gt;setJNDIContext&lt;/code&gt;, this method throws a &lt;code&gt;java.lang.SecurityException&lt;/code&gt;.</source>
          <target state="translated">この方法でチェックがあることを確認し &lt;code&gt;SQLPermission&lt;/code&gt; 権限付与対象 &lt;code&gt;setSyncFactory&lt;/code&gt; の方法を成功させる前に。場合 &lt;code&gt;SecurityManager&lt;/code&gt; が存在し、その &lt;code&gt;checkPermission&lt;/code&gt; メソッドが呼び出し拒否し &lt;code&gt;setJNDIContext&lt;/code&gt; を、この方法は、スロー &lt;code&gt;java.lang.SecurityException&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="8f20904499fa3053ce7e9e5bc9b9fd9c6c8f6b32" translate="yes" xml:space="preserve">
          <source>This method checks to see that there is an &lt;code&gt;SQLPermission&lt;/code&gt; object which grants the permission &lt;code&gt;setSyncFactory&lt;/code&gt; before allowing the method to succeed. If a &lt;code&gt;SecurityManager&lt;/code&gt; exists and its &lt;code&gt;checkPermission&lt;/code&gt; method denies calling &lt;code&gt;setLogger&lt;/code&gt;, this method throws a &lt;code&gt;java.lang.SecurityException&lt;/code&gt;.</source>
          <target state="translated">この方法でチェックがあることを確認し &lt;code&gt;SQLPermission&lt;/code&gt; 権限付与対象 &lt;code&gt;setSyncFactory&lt;/code&gt; の方法を成功させる前に。場合 &lt;code&gt;SecurityManager&lt;/code&gt; が存在し、その &lt;code&gt;checkPermission&lt;/code&gt; メソッドが呼び出し拒否し &lt;code&gt;setLogger&lt;/code&gt; を、この方法は、スロー &lt;code&gt;java.lang.SecurityException&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="813e7219d13ff3f0ff1e399420f1630dd4d45425" translate="yes" xml:space="preserve">
          <source>This method checks whether this month and day and the input year form a valid date. This can only return false for February 29th.</source>
          <target state="translated">このメソッドは、この月と日と入力された年が有効な日付を形成しているかどうかをチェックします。これは2月29日の場合のみfalseを返すことができます。</target>
        </trans-unit>
        <trans-unit id="6ca0ea3874885ad825737fe01643853174112aeb" translate="yes" xml:space="preserve">
          <source>This method checks whether this year and month and the input day form a valid date.</source>
          <target state="translated">このメソッドは、この年と月と入力された日のフォームが有効な日付であるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="b0ae8ca0a80a5b42c94d0b36381fb9056daa9563" translate="yes" xml:space="preserve">
          <source>This method checks whether this year and the input month and day form a valid date.</source>
          <target state="translated">このメソッドは、今年と入力された月日が有効な日付であるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="052b77b1752d1f1058dc33720d9da6f0e36d649c" translate="yes" xml:space="preserve">
          <source>This method cleans up any state that was originally saved as part of the authentication attempt from the &lt;code&gt;login&lt;/code&gt; and &lt;code&gt;commit&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca677a5a8086c56a096bf1cc7c3d7c11e81a570" translate="yes" xml:space="preserve">
          <source>This method clears the selection and resets any variable row heights.</source>
          <target state="translated">このメソッドは選択範囲をクリアし、変数の行の高さをリセットします。</target>
        </trans-unit>
        <trans-unit id="9d7cfe6c5917eedcd56be0220cd20dbf8d413d0c" translate="yes" xml:space="preserve">
          <source>This method closes the input stream associated with this stream.</source>
          <target state="translated">このメソッドは、このストリームに関連付けられた入力ストリームを閉じます。</target>
        </trans-unit>
        <trans-unit id="bf582cf8447bc598db54dfe48cb3b8dcda5ce503" translate="yes" xml:space="preserve">
          <source>This method closes this object and releases the resources that it held.</source>
          <target state="translated">このメソッドは、このオブジェクトを閉じ、保持していたリソースを解放します。</target>
        </trans-unit>
        <trans-unit id="6c0ae1cb88e9f88a79cbac7f33a7459027bfc011" translate="yes" xml:space="preserve">
          <source>This method closes this object and releases the resources that it held. The SQL XML object becomes invalid and neither readable or writable when this method is called. After &lt;code&gt;free&lt;/code&gt; has been called, any attempt to invoke a method other than &lt;code&gt;free&lt;/code&gt; will result in a &lt;code&gt;SQLException&lt;/code&gt; being thrown. If &lt;code&gt;free&lt;/code&gt; is called multiple times, the subsequent calls to &lt;code&gt;free&lt;/code&gt; are treated as a no-op.</source>
          <target state="translated">このメソッドは、このオブジェクトを閉じて、保持していたリソースを解放します。このメソッドが呼び出されると、SQL XMLオブジェクトは無効になり、読み取りも書き込みもできなくなります。後は &lt;code&gt;free&lt;/code&gt; 呼び出されている以外の方法で起動しようとするあらゆる試み &lt;code&gt;free&lt;/code&gt; になります &lt;code&gt;SQLException&lt;/code&gt; がスローされます。 &lt;code&gt;free&lt;/code&gt; が複数回呼び出された場合、その後の &lt;code&gt;free&lt;/code&gt; の呼び出しはno-opとして扱われます。</target>
        </trans-unit>
        <trans-unit id="4af619981e883e0ed74c8af20b4b6c4b1d11ed7b" translate="yes" xml:space="preserve">
          <source>This method combines &lt;a href=&quot;#isIntValue()&quot;&gt;&lt;code&gt;isIntValue()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#isValidValue(long)&quot;&gt;&lt;code&gt;isValidValue(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#isIntValue()&quot;&gt; &lt;code&gt;isIntValue()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#isValidValue(long)&quot;&gt; &lt;code&gt;isValidValue(long)&lt;/code&gt; を&lt;/a&gt;組み合わせたものです。</target>
        </trans-unit>
        <trans-unit id="dff493e06662208f386fd8c2f9ff5678c725d551" translate="yes" xml:space="preserve">
          <source>This method combines &lt;a href=&quot;valuerange#isIntValue--&quot;&gt;&lt;code&gt;isIntValue()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;valuerange#isValidValue-long-&quot;&gt;&lt;code&gt;isValidValue(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;valuerange#isIntValue--&quot;&gt; &lt;code&gt;isIntValue()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;valuerange#isValidValue-long-&quot;&gt; &lt;code&gt;isValidValue(long)&lt;/code&gt; を&lt;/a&gt;組み合わせたものです。</target>
        </trans-unit>
        <trans-unit id="1dd6469ce58e7474eb9aedf9925e9c38c3d7f088" translate="yes" xml:space="preserve">
          <source>This method completes a 2-phase authentication process by calling each configured LoginModule's &lt;code&gt;commit&lt;/code&gt; method if the overall authentication succeeded (the relevant REQUIRED, REQUISITE, SUFFICIENT, and OPTIONAL LoginModules succeeded), or by calling each configured LoginModule's &lt;code&gt;abort&lt;/code&gt; method if the overall authentication failed. If authentication succeeded, each successful LoginModule's &lt;code&gt;commit&lt;/code&gt; method associates the relevant Principals and Credentials with the &lt;code&gt;Subject&lt;/code&gt;. If authentication failed, each LoginModule's &lt;code&gt;abort&lt;/code&gt; method removes/destroys any previously stored state.</source>
          <target state="translated">このメソッドは、認証全体が成功した場合（関連するREQUIRED、REQUISITE、SUFFICIENT、およびOPTIONALのLoginModuleが成功した場合）、構成済みの各LoginModuleの &lt;code&gt;commit&lt;/code&gt; メソッドを呼び出すか、認証全体が失敗した場合に構成済みの各LoginModuleの &lt;code&gt;abort&lt;/code&gt; メソッドを呼び出すことにより、2フェーズ認証プロセスを完了します。認証が成功した場合、成功した各LoginModuleの &lt;code&gt;commit&lt;/code&gt; メソッドは、関連するPrincipalsおよびCredentialsを &lt;code&gt;Subject&lt;/code&gt; に関連付けます。認証が失敗した場合、各LoginModuleの &lt;code&gt;abort&lt;/code&gt; メソッドは、以前に保存された状態をすべて削除または破棄します。</target>
        </trans-unit>
        <trans-unit id="0bdf3031aebd241da3e146a392f7cd34da1b30e8" translate="yes" xml:space="preserve">
          <source>This method computes an approximation of the containment relation: If it returns &lt;code&gt;true&lt;/code&gt; then the given charset is known to be contained by this charset; if it returns &lt;code&gt;false&lt;/code&gt;, however, then it is not necessarily the case that the given charset is not contained in this charset.</source>
          <target state="translated">このメソッドは包含関係の近似を計算します。それが &lt;code&gt;true&lt;/code&gt; を返す場合、指定された文字セットはこの文字セットに含まれていることがわかります。ただし、 &lt;code&gt;false&lt;/code&gt; が返された場合、指定された文字セットがこの文字セットに含まれていないとは限りません。</target>
        </trans-unit>
        <trans-unit id="c6a131b13cabaff4b78300f7f15a82854308a329" translate="yes" xml:space="preserve">
          <source>This method conforms to &lt;a href=&quot;https://unicode.org/reports/tr31/#R1&quot;&gt; UAX31-R1: Default Identifiers&lt;/a&gt; requirement of the Unicode Standard, with the following profile of UAX31:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fefb6b9da151a9dbb26b6c1fc7fc84c27e6c3ee8" translate="yes" xml:space="preserve">
          <source>This method constructs a &lt;code&gt;ListSelectionEvent&lt;/code&gt; with this list as the source, and the specified arguments, and sends it to the registered &lt;code&gt;ListSelectionListeners&lt;/code&gt;.</source>
          <target state="translated">この方法では、構築し &lt;code&gt;ListSelectionEvent&lt;/code&gt; ソース、および指定された引数としてこのリストでは、登録に送信 &lt;code&gt;ListSelectionListeners&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="016880e8460b7fc1d677359206f7ba9fb7006a7b" translate="yes" xml:space="preserve">
          <source>This method constructs a new watch service that may be used to watch registered objects for changes and events.</source>
          <target state="translated">このメソッドは、登録されたオブジェクトの変更やイベントを監視するために使用される可能性のある新しいウォッチサービスを構築します。</target>
        </trans-unit>
        <trans-unit id="547aed285aaefda991ad0b3904151ce026c60ac4" translate="yes" xml:space="preserve">
          <source>This method constructs an absolute &lt;a href=&quot;../../net/uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;../../net/uri#getScheme()&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt; equal to the URI scheme that identifies the provider. The exact form of the scheme specific part is highly provider dependent.</source>
          <target state="translated">このメソッドは、プロバイダーを識別するURIスキームと等しい&lt;a href=&quot;../../net/uri#getScheme()&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt;絶対&lt;a href=&quot;../../net/uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;を構築します。スキーム固有の部分の正確な形式は、プロバイダーに大きく依存します。</target>
        </trans-unit>
        <trans-unit id="e45582cbf00c605da5516a5f1e3f215544800cb8" translate="yes" xml:space="preserve">
          <source>This method constructs an absolute &lt;a href=&quot;../../net/uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;../../net/uri#getScheme--&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt; equal to the URI scheme that identifies the provider. The exact form of the scheme specific part is highly provider dependent.</source>
          <target state="translated">このメソッドは、プロバイダーを識別するURIスキームと等しい&lt;a href=&quot;../../net/uri#getScheme--&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt;絶対&lt;a href=&quot;../../net/uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;を構築します。スキーム固有の部分の正確な形式は、プロバイダーによって大きく異なります。</target>
        </trans-unit>
        <trans-unit id="72795cabb6417067cf089969a9efc76ccd71e6d0" translate="yes" xml:space="preserve">
          <source>This method converts using the type of this enum. The output is defined relative to the 'before' offset of the transition.</source>
          <target state="translated">このメソッドは、このenumの型を使用して変換します。出力は、遷移の 'before' オフセットを基準にして定義されます。</target>
        </trans-unit>
        <trans-unit id="00dac656c296813381472debfacb1a05c81072c0" translate="yes" xml:space="preserve">
          <source>This method copies a file to the target file with the &lt;code&gt;
 options&lt;/code&gt; parameter specifying how the copy is performed. By default, the copy fails if the target file already exists or is a symbolic link, except if the source and target are the &lt;a href=&quot;#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt;&lt;code&gt;same&lt;/code&gt;&lt;/a&gt; file, in which case the method completes without copying the file. File attributes are not required to be copied to the target file. If symbolic links are supported, and the file is a symbolic link, then the final target of the link is copied. If the file is a directory then it creates an empty directory in the target location (entries in the directory are not copied). This method can be used with the &lt;a href=&quot;#walkFileTree(java.nio.file.Path,java.util.Set,int,java.nio.file.FileVisitor)&quot;&gt;&lt;code&gt;walkFileTree&lt;/code&gt;&lt;/a&gt; method to copy a directory and all entries in the directory, or an entire</source>
          <target state="translated">このメソッドは、コピーの実行方法を指定する &lt;code&gt; options&lt;/code&gt; パラメーターを使用してファイルをターゲットファイルにコピーします。デフォルトでは、ソースとターゲットが&lt;a href=&quot;#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt; &lt;code&gt;same&lt;/code&gt; &lt;/a&gt;ファイルである場合を除いて、ターゲットファイルがすでに存在するかシンボリックリンクである場合、コピーは失敗します。同じファイルの場合、メソッドはファイルをコピーせずに完了します。ファイル属性をターゲットファイルにコピーする必要はありません。シンボリックリンクがサポートされており、ファイルがシンボリックリンクである場合、リンクの最終的なターゲットがコピーされます。ファイルがディレクトリの場合、ターゲットの場所に空のディレクトリが作成されます（ディレクトリ内のエントリはコピーされません）。このメソッドを&lt;a href=&quot;#walkFileTree(java.nio.file.Path,java.util.Set,int,java.nio.file.FileVisitor)&quot;&gt; &lt;code&gt;walkFileTree&lt;/code&gt; &lt;/a&gt;メソッドとともに使用して、ディレクトリとディレクトリ内のすべてのエントリ、または全体をコピーできます。</target>
        </trans-unit>
        <trans-unit id="4e1e1c030bc0362fbc369e8636af9a9c47b0f469" translate="yes" xml:space="preserve">
          <source>This method copies a file to the target file with the &lt;code&gt;options&lt;/code&gt; parameter specifying how the copy is performed. By default, the copy fails if the target file already exists or is a symbolic link, except if the source and target are the &lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt;&lt;code&gt;same&lt;/code&gt;&lt;/a&gt; file, in which case the method completes without copying the file. File attributes are not required to be copied to the target file. If symbolic links are supported, and the file is a symbolic link, then the final target of the link is copied. If the file is a directory then it creates an empty directory in the target location (entries in the directory are not copied). This method can be used with the &lt;a href=&quot;files#walkFileTree-java.nio.file.Path-java.util.Set-int-java.nio.file.FileVisitor-&quot;&gt;&lt;code&gt;walkFileTree&lt;/code&gt;&lt;/a&gt; method to copy a directory and all entries in the directory, or an entire</source>
          <target state="translated">このメソッドは、コピーの実行方法を指定する &lt;code&gt;options&lt;/code&gt; パラメーターを使用して、ファイルをターゲットファイルにコピーします。デフォルトでは、ターゲットファイルがすでに存在するかシンボリックリンクの場合、コピーは失敗します。ただし、ソースとターゲットが&lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt; &lt;code&gt;same&lt;/code&gt; &lt;/a&gt;ファイルの場合は、ファイルをコピーせずにメソッドが完了します。ファイル属性をターゲットファイルにコピーする必要はありません。シンボリックリンクがサポートされていて、ファイルがシンボリックリンクの場合、リンクの最終ターゲットがコピーされます。ファイルがディレクトリの場合、ターゲットの場所に空のディレクトリが作成されます（ディレクトリ内のエントリはコピーされません）。このメソッドを&lt;a href=&quot;files#walkFileTree-java.nio.file.Path-java.util.Set-int-java.nio.file.FileVisitor-&quot;&gt; &lt;code&gt;walkFileTree&lt;/code&gt; &lt;/a&gt;メソッドとともに使用して、ディレクトリとディレクトリ内のすべてのエントリ、または全体をコピーできます。</target>
        </trans-unit>
        <trans-unit id="2780988947d63fadfb1235f1aa5adebc81ae0ea1" translate="yes" xml:space="preserve">
          <source>This method copies bytes into this buffer from the given source array. The position of this buffer is unchanged. An invocation of this method of the form &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; behaves in exactly the same way as the invocation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bbe608f4d25b6b4cfaa2c350800699e4dfeb415" translate="yes" xml:space="preserve">
          <source>This method copies chars into this buffer from the given source array. The position of this buffer is unchanged. An invocation of this method of the form &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; behaves in exactly the same way as the invocation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1a0992ecd5b9768639281136421c2e50ee4a87" translate="yes" xml:space="preserve">
          <source>This method copies doubles into this buffer from the given source array. The position of this buffer is unchanged. An invocation of this method of the form &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; behaves in exactly the same way as the invocation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd6d005bb36a2c473f02da66ebfcbce3a3f6871" translate="yes" xml:space="preserve">
          <source>This method copies floats into this buffer from the given source array. The position of this buffer is unchanged. An invocation of this method of the form &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; behaves in exactly the same way as the invocation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf1f09b4270149bced6a0d17e4da276c9490d4d" translate="yes" xml:space="preserve">
          <source>This method copies ints into this buffer from the given source array. The position of this buffer is unchanged. An invocation of this method of the form &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; behaves in exactly the same way as the invocation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef64ccfafbda48d7cd7e2798abddd99d403f2fe8" translate="yes" xml:space="preserve">
          <source>This method copies longs into this buffer from the given source array. The position of this buffer is unchanged. An invocation of this method of the form &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; behaves in exactly the same way as the invocation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd61c79c8c4fa840319fb240aed54673ecedc1a" translate="yes" xml:space="preserve">
          <source>This method copies shorts into this buffer from the given source array. The position of this buffer is unchanged. An invocation of this method of the form &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; behaves in exactly the same way as the invocation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecacf2e8b79b3e3f9abeeda02f6def2695827e53" translate="yes" xml:space="preserve">
          <source>This method corresponds to the fusedMultiplyAdd operation defined in IEEE 754-2008.</source>
          <target state="translated">このメソッドは、IEEE 754-2008 で定義されている fusedMultiplyAdd 操作に対応しています。</target>
        </trans-unit>
        <trans-unit id="8310f53ea86c0c1e41a135195fbc40f3bcfaa980" translate="yes" xml:space="preserve">
          <source>This method creates a &lt;code&gt;SecurityPermission&lt;/code&gt; object for the given permission target name and calls &lt;code&gt;checkPermission&lt;/code&gt; with it.</source>
          <target state="translated">このメソッドは、指定された権限ターゲット名の &lt;code&gt;SecurityPermission&lt;/code&gt; オブジェクトを作成し、それを &lt;code&gt;checkPermission&lt;/code&gt; してcheckPermissionを呼び出します。</target>
        </trans-unit>
        <trans-unit id="21728d2edb7d5eff2049d493420b1c7bc5fe6356" translate="yes" xml:space="preserve">
          <source>This method creates a cipher for the algorithm that had been used in the sealing operation, using an implementation of that algorithm from the given &lt;code&gt;provider&lt;/code&gt;. The Cipher object is initialized for decryption, using the given &lt;code&gt;key&lt;/code&gt; and the parameters (if any) that had been used in the sealing operation.</source>
          <target state="translated">このメソッドは、指定された &lt;code&gt;provider&lt;/code&gt; アルゴリズムの実装を使用して、封印操作で使用されたアルゴリズムの暗号を作成します。Cipherオブジェクトは、所定の &lt;code&gt;key&lt;/code&gt; と、封印操作で使用されたパラメーター（存在する場合）を使用して、復号化のために初期化されます。</target>
        </trans-unit>
        <trans-unit id="5900f0bafbcd4b92904f8343617b0ece38d9cf8f" translate="yes" xml:space="preserve">
          <source>This method creates a cipher for the algorithm that had been used in the sealing operation. If the default provider package provides an implementation of that algorithm, an instance of Cipher containing that implementation is used. If the algorithm is not available in the default package, other packages are searched. The Cipher object is initialized for decryption, using the given &lt;code&gt;key&lt;/code&gt; and the parameters (if any) that had been used in the sealing operation.</source>
          <target state="translated">このメソッドは、封印操作で使用されたアルゴリズムの暗号を作成します。デフォルトのプロバイダーパッケージがそのアルゴリズムの実装を提供する場合、その実装を含むCipherのインスタンスが使用されます。アルゴリズムがデフォルトパッケージで使用できない場合、他のパッケージが検索されます。 Cipherオブジェクトは、所定の &lt;code&gt;key&lt;/code&gt; と、封印操作で使用されたパラメーター（存在する場合）を使用して、復号化のために初期化されます。</target>
        </trans-unit>
        <trans-unit id="41c23fd7f248fecd4ef38ec3b17316eb566611c2" translate="yes" xml:space="preserve">
          <source>This method creates a copy that can be persisted to the data source.</source>
          <target state="translated">このメソッドは、データ・ソースに永続化できるコピーを作成します。</target>
        </trans-unit>
        <trans-unit id="395a4f6e2c26035768653bb2dc8996778868cd75" translate="yes" xml:space="preserve">
          <source>This method creates a new MBeanServer implementation object.</source>
          <target state="translated">このメソッドは、新しい MBeanServer 実装オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="996ced6827ff26e8c9efb36b41525f3db595392c" translate="yes" xml:space="preserve">
          <source>This method creates a new MBeanServer implementation object. When creating a new MBeanServer the &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; first calls &lt;code&gt;newMBeanServerDelegate()&lt;/code&gt; in order to obtain a new &lt;a href=&quot;mbeanserverdelegate&quot;&gt;&lt;code&gt;MBeanServerDelegate&lt;/code&gt;&lt;/a&gt; for the new MBeanServer. Then it calls &lt;code&gt;newMBeanServer(defaultDomain,outer,delegate)&lt;/code&gt; passing the &lt;var&gt;delegate&lt;/var&gt; that should be used by the MBeanServer implementation.</source>
          <target state="translated">このメソッドは、新しいMBeanServer実装オブジェクトを作成します。新しいMBeanServerを作成する場合、&lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; は&lt;/a&gt;最初に &lt;code&gt;newMBeanServerDelegate()&lt;/code&gt; を呼び出して、新しい&lt;a href=&quot;mbeanserverdelegate&quot;&gt; &lt;code&gt;MBeanServerDelegate&lt;/code&gt; &lt;/a&gt;の新しいMBeanServerDelegateを取得します。次に、MBeanServer実装で使用する必要がある &lt;var&gt;delegate&lt;/var&gt; を渡して &lt;code&gt;newMBeanServer(defaultDomain,outer,delegate)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="ec78ae9b0540978afd2265082aac940e99f2f5d9" translate="yes" xml:space="preserve">
          <source>This method creates a new MBeanServerDelegate for a new MBeanServer.</source>
          <target state="translated">このメソッドは、新しい MBeanServer のための新しい MBeanServerDelegate を作成します。</target>
        </trans-unit>
        <trans-unit id="bed9906b1f8929561794f9981e9f989e7b4781de" translate="yes" xml:space="preserve">
          <source>This method creates a new MBeanServerDelegate for a new MBeanServer. When creating a new MBeanServer the &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; first calls this method in order to create a new MBeanServerDelegate.</source>
          <target state="translated">このメソッドは、新しいMBeanServerの新しいMBeanServerDelegateを作成します。新しいMBeanServerを作成するとき、&lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; は&lt;/a&gt;最初にこのメソッドを呼び出して、新しいMBeanServerDelegateを作成します。</target>
        </trans-unit>
        <trans-unit id="6468f34ccbac98fc3854db7cffa8f4be6c6028de" translate="yes" xml:space="preserve">
          <source>This method creates a predicate that behaves as if it creates a matcher from the input sequence and then calls &lt;code&gt;find&lt;/code&gt;, for example a predicate of the form:</source>
          <target state="translated">このメソッドは、入力シーケンスからマッチャーを作成するかのように動作する述語を作成し、次に &lt;code&gt;find&lt;/code&gt; を呼び出します。たとえば、次の形式の述語です。</target>
        </trans-unit>
        <trans-unit id="78a16783512f805ad21d43d54ea02b6449fda80e" translate="yes" xml:space="preserve">
          <source>This method creates a predicate that behaves as if it creates a matcher from the input sequence and then calls &lt;code&gt;matches&lt;/code&gt;, for example a predicate of the form:</source>
          <target state="translated">このメソッドは、入力シーケンスからマッチャーを作成するかのように動作する述語を作成してから、 &lt;code&gt;matches&lt;/code&gt; を呼び出します。たとえば、次の形式の述語です。</target>
        </trans-unit>
        <trans-unit id="9ea803ee70e1400ed3818468ce56c18d0b33f1b8" translate="yes" xml:space="preserve">
          <source>This method creates an instance of the XMLEventAllocator.</source>
          <target state="translated">このメソッドは、XMLEventAllocator のインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="cc0ec02bce584b4a5320d012febd78367e2c2b41" translate="yes" xml:space="preserve">
          <source>This method creates an instance of the XMLEventAllocator. This allows the XMLInputFactory to allocate a new instance per reader.</source>
          <target state="translated">このメソッドは XMLEventAllocator のインスタンスを作成します。これにより、XMLInputFactoryはリーダーごとに新しいインスタンスを割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="240e1595b12fbf49cf9126d9525558e418a5e11e" translate="yes" xml:space="preserve">
          <source>This method deactivates the security context and creates an interprocess token which, when passed to &lt;a href=&quot;gssmanager#createContext(byte%5B%5D)&quot;&gt;&lt;code&gt;GSSManager.createContext&lt;/code&gt;&lt;/a&gt; in another process, will re-activate the context in the second process. Only a single instantiation of a given context may be active at any one time; a subsequent attempt by a context exporter to access the exported security context will fail.</source>
          <target state="translated">このメソッドは、セキュリティコンテキストを非アクティブ化し、プロセス間トークンを作成します。この&lt;a href=&quot;gssmanager#createContext(byte%5B%5D)&quot;&gt; &lt;code&gt;GSSManager.createContext&lt;/code&gt; &lt;/a&gt;は、別のプロセスでGSSManager.createContextに渡されると、2番目のプロセスでコンテキストを再アクティブ化します。特定のコンテキストの単一のインスタンス化のみが一度にアクティブになります。エクスポートされたセキュリティコンテキストにアクセスするためのコンテキストエクスポータによるその後の試行は失敗します。</target>
        </trans-unit>
        <trans-unit id="b6bcd4b8596622b5c825085a376773994f418477" translate="yes" xml:space="preserve">
          <source>This method declares a prefix in the current Namespace context; the prefix will remain in force until this context is popped, unless it is shadowed in a descendant context.</source>
          <target state="translated">このメソッドは、現在の Namespace コンテキストのプレフィックスを宣言します。 プレフィックスは、このコンテキストがポップされるまで有効です。</target>
        </trans-unit>
        <trans-unit id="88761bfb87eabecfd4e636cc525f40d9e9deede0" translate="yes" xml:space="preserve">
          <source>This method defines a package in this class loader corresponding to the package of the &lt;code&gt;Class&lt;/code&gt; (if such a package has not already been defined in this class loader). The name of the defined package is derived from the &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt; of the class specified by the byte array &lt;code&gt;b&lt;/code&gt;. Other properties of the defined package are as specified by &lt;a href=&quot;package&quot;&gt;&lt;code&gt;Package&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この方法は、パッケージに対応するローダこのクラスのパッケージを定義する &lt;code&gt;Class&lt;/code&gt; （このようなパッケージはすでにこのクラスローダで定義されていない場合）。定義されたパッケージの&lt;a href=&quot;#binary-name&quot;&gt;名前&lt;/a&gt;は、バイト配列 &lt;code&gt;b&lt;/code&gt; で指定されたクラスのバイナリ名から派生します。定義されたパッケージの他のプロパティは、&lt;a href=&quot;package&quot;&gt; &lt;code&gt;Package&lt;/code&gt; で&lt;/a&gt;指定されたとおりです。</target>
        </trans-unit>
        <trans-unit id="e4b8a6e84ce7db55c3f06614cad2a63db23a9e15" translate="yes" xml:space="preserve">
          <source>This method delegates to &lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;loadClass(String,String)&lt;/code&gt;&lt;/a&gt;, passing &lt;code&gt;null&lt;/code&gt; as the first argument and &lt;code&gt;name&lt;/code&gt; as the second argument.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;loadClass(String,String)&lt;/code&gt; &lt;/a&gt;に委任し、最初の引数として &lt;code&gt;null&lt;/code&gt; を渡し、2番目の引数として &lt;code&gt;name&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="25dd154e155822601a589b1e6b8e33c51e28a04f" translate="yes" xml:space="preserve">
          <source>This method delegates to the &lt;a href=&quot;rmiclassloaderspi#getClassAnnotation(java.lang.Class)&quot;&gt;&lt;code&gt;RMIClassLoaderSpi.getClassAnnotation(Class)&lt;/code&gt;&lt;/a&gt; method of the provider instance, passing &lt;code&gt;cl&lt;/code&gt; as the argument.</source>
          <target state="translated">このメソッドは、プロバイダーインスタンスの&lt;a href=&quot;rmiclassloaderspi#getClassAnnotation(java.lang.Class)&quot;&gt; &lt;code&gt;RMIClassLoaderSpi.getClassAnnotation(Class)&lt;/code&gt; &lt;/a&gt;メソッドに委任し、引数として &lt;code&gt;cl&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="40bce0f44a339529989512d987e3420e457c50bc" translate="yes" xml:space="preserve">
          <source>This method delegates to the &lt;a href=&quot;rmiclassloaderspi#getClassLoader(java.lang.String)&quot;&gt;&lt;code&gt;RMIClassLoaderSpi.getClassLoader(String)&lt;/code&gt;&lt;/a&gt; method of the provider instance, passing &lt;code&gt;codebase&lt;/code&gt; as the argument.</source>
          <target state="translated">このメソッドは、プロバイダーインスタンスの&lt;a href=&quot;rmiclassloaderspi#getClassLoader(java.lang.String)&quot;&gt; &lt;code&gt;RMIClassLoaderSpi.getClassLoader(String)&lt;/code&gt; &lt;/a&gt;メソッドに委任し、引数として &lt;code&gt;codebase&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="56d397a6b12f48e4195c4a8c43deca7c93858978" translate="yes" xml:space="preserve">
          <source>This method delegates to the &lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;RMIClassLoaderSpi.loadClass(String,String,ClassLoader)&lt;/code&gt;&lt;/a&gt; method of the provider instance, passing &lt;code&gt;codebase&lt;/code&gt; as the first argument, &lt;code&gt;name&lt;/code&gt; as the second argument, and &lt;code&gt;defaultLoader&lt;/code&gt; as the third argument.</source>
          <target state="translated">このメソッドは、プロバイダーインスタンスの&lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;RMIClassLoaderSpi.loadClass(String,String,ClassLoader)&lt;/code&gt; &lt;/a&gt;メソッドに委任し、最初の引数として &lt;code&gt;codebase&lt;/code&gt; 、2番目の引数として &lt;code&gt;name&lt;/code&gt; 、3番目の引数として &lt;code&gt;defaultLoader&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="be9d7b5e9cdfa8fa6e577784cff238e38fb49edf" translate="yes" xml:space="preserve">
          <source>This method delegates to the &lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;RMIClassLoaderSpi.loadClass(String,String,ClassLoader)&lt;/code&gt;&lt;/a&gt; method of the provider instance, passing &lt;code&gt;codebase&lt;/code&gt; as the first argument, &lt;code&gt;name&lt;/code&gt; as the second argument, and &lt;code&gt;null&lt;/code&gt; as the third argument.</source>
          <target state="translated">このメソッドは、プロバイダーインスタンスの&lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;RMIClassLoaderSpi.loadClass(String,String,ClassLoader)&lt;/code&gt; &lt;/a&gt;メソッドに委任し、最初の引数として &lt;code&gt;codebase&lt;/code&gt; 、2番目の引数として &lt;code&gt;name&lt;/code&gt; 、3番目の引数として &lt;code&gt;null&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="1807713d7184f8a7b230003b9a119a7995d270ce" translate="yes" xml:space="preserve">
          <source>This method delegates to the &lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;RMIClassLoaderSpi.loadClass(String,String,ClassLoader)&lt;/code&gt;&lt;/a&gt; method of the provider instance, passing the result of invoking &lt;a href=&quot;../../../../java.base/java/net/url#toString()&quot;&gt;&lt;code&gt;URL.toString()&lt;/code&gt;&lt;/a&gt; on the given URL (or &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;codebase&lt;/code&gt; is null) as the first argument, &lt;code&gt;name&lt;/code&gt; as the second argument, and &lt;code&gt;null&lt;/code&gt; as the third argument.</source>
          <target state="translated">この方法に委譲&lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;RMIClassLoaderSpi.loadClass(String,String,ClassLoader)&lt;/code&gt; &lt;/a&gt;呼び出しの結果通過プロバイダインスタンスの方法、&lt;a href=&quot;../../../../java.base/java/net/url#toString()&quot;&gt; &lt;code&gt;URL.toString()&lt;/code&gt; &lt;/a&gt;（または所定のURLに &lt;code&gt;null&lt;/code&gt; 場合に &lt;code&gt;codebase&lt;/code&gt; nullである）は、最初の引数としては、 &lt;code&gt;name&lt;/code&gt; として2番目の引数、および3番目の引数として &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="243fa7fd106a6da86b94f449e4f0b1a0b0c6f6ec" translate="yes" xml:space="preserve">
          <source>This method delegates to the &lt;a href=&quot;rmiclassloaderspi#loadProxyClass(java.lang.String,java.lang.String%5B%5D,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;RMIClassLoaderSpi.loadProxyClass(String,String[],ClassLoader)&lt;/code&gt;&lt;/a&gt; method of the provider instance, passing &lt;code&gt;codebase&lt;/code&gt; as the first argument, &lt;code&gt;interfaces&lt;/code&gt; as the second argument, and &lt;code&gt;defaultLoader&lt;/code&gt; as the third argument.</source>
          <target state="translated">このメソッドは、プロバイダーインスタンスの&lt;a href=&quot;rmiclassloaderspi#loadProxyClass(java.lang.String,java.lang.String%5B%5D,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;RMIClassLoaderSpi.loadProxyClass(String,String[],ClassLoader)&lt;/code&gt; &lt;/a&gt;メソッドに委任し、最初の引数として &lt;code&gt;codebase&lt;/code&gt; 、2番目の引数として &lt;code&gt;interfaces&lt;/code&gt; 、3番目の引数として &lt;code&gt;defaultLoader&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="d431575ba426919d2f1021e8e8d75877e5899e7c" translate="yes" xml:space="preserve">
          <source>This method determines whether the current element is in the range specified.</source>
          <target state="translated">このメソッドは、現在の要素が指定された範囲内にあるかどうかを判定します。</target>
        </trans-unit>
        <trans-unit id="9cb43f5e692129de5564aaab7ae1cf49dcf4520c" translate="yes" xml:space="preserve">
          <source>This method determines whether the current element is in the range specified. When no range is specified, the range is initialized to be the entire document. inRange() returns true if the range specified intersects with the element's range.</source>
          <target state="translated">このメソッドは、現在の要素が指定された範囲内にあるかどうかを判定します。範囲が指定されていない場合、範囲は文書全体として初期化されます。 inRange()は、指定された範囲が要素の範囲と交差する場合に真を返します。</target>
        </trans-unit>
        <trans-unit id="503bb0e0f19f77204d3e26371951b3cbbe9b2955" translate="yes" xml:space="preserve">
          <source>This method differs from &lt;a href=&quot;../../time/duration#toNanos()&quot;&gt;&lt;code&gt;Duration.toNanos()&lt;/code&gt;&lt;/a&gt; in that it does not throw &lt;a href=&quot;../../lang/arithmeticexception&quot;&gt;&lt;code&gt;ArithmeticException&lt;/code&gt;&lt;/a&gt; on numeric overflow.</source>
          <target state="translated">このメソッドは、数値のオーバーフロー時に&lt;a href=&quot;../../lang/arithmeticexception&quot;&gt; &lt;code&gt;ArithmeticException&lt;/code&gt; &lt;/a&gt;をスローしないという点で、&lt;a href=&quot;../../time/duration#toNanos()&quot;&gt; &lt;code&gt;Duration.toNanos()&lt;/code&gt; &lt;/a&gt;とは異なります。</target>
        </trans-unit>
        <trans-unit id="e6217d88652482916af1a176c3b94c9c0d618d7c" translate="yes" xml:space="preserve">
          <source>This method differs from the &lt;a href=&quot;rectangularshape#getBounds()&quot;&gt;&lt;code&gt;getBounds&lt;/code&gt;&lt;/a&gt; in that the &lt;code&gt;getBounds&lt;/code&gt; method only returns the bounds of the enclosing ellipse of this &lt;code&gt;Arc2D&lt;/code&gt; without considering the starting and ending angles of this &lt;code&gt;Arc2D&lt;/code&gt;.</source>
          <target state="translated">この方法が異なる&lt;a href=&quot;rectangularshape#getBounds()&quot;&gt; &lt;code&gt;getBounds&lt;/code&gt; &lt;/a&gt;その中 &lt;code&gt;getBounds&lt;/code&gt; 方法は、これだけの封入楕円の境界戻り &lt;code&gt;Arc2D&lt;/code&gt; 開始を考慮し、この角度終了せず &lt;code&gt;Arc2D&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e05d72a179b028472a2c491a28a1c40ca78f832f" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.OffsetDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、日時の瞬間のみを比較するという点で、&lt;a href=&quot;#compareTo(java.time.OffsetDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;の比較とは異なります。これは、 &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt; を使用するのと同じです。。</target>
        </trans-unit>
        <trans-unit id="a95810fcd150d876302b2538f0011def691efc42" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.OffsetDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、日時の瞬間のみを比較するという点で、&lt;a href=&quot;#compareTo(java.time.OffsetDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;の比較とは異なります。これは、 &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt; を使用するのと同じです。。</target>
        </trans-unit>
        <trans-unit id="e147669356b62e010541584db96b08793daff662" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.OffsetDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、日時の瞬間のみを比較するという点で、&lt;a href=&quot;#compareTo(java.time.OffsetDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; の&lt;/a&gt;比較とは異なります。これは、 &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt; を使用するのと同じです。。</target>
        </trans-unit>
        <trans-unit id="8deaacfbe410d059d0ad4fb6445dfc3f98f99857" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.OffsetDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying instant.</source>
          <target state="translated">このメソッドは、基になるインスタントのみを比較するという点で、&lt;a href=&quot;#compareTo(java.time.OffsetDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; の&lt;/a&gt;比較とは異なります。</target>
        </trans-unit>
        <trans-unit id="64deb8c1ec8ff978d9a9c9ced5f47266400d0a80" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.OffsetTime)&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the time. This is equivalent to converting both times to an instant using the same date and comparing the instants.</source>
          <target state="translated">このメソッドは、時刻の瞬間のみを比較するという点で、&lt;a href=&quot;#compareTo(java.time.OffsetTime)&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;の比較とは異なります。これは、同じ日付を使用して両方の時間をインスタントに変換し、インスタントを比較することと同じです。</target>
        </trans-unit>
        <trans-unit id="eafb0c41c6db1e63c84ada713a6949fd948981da" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.OffsetTime)&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the time. This is equivalent to converting both times to an instant using the same date and comparing the instants.</source>
          <target state="translated">このメソッドは、時刻の瞬間のみを比較するという点で、&lt;a href=&quot;#compareTo(java.time.OffsetTime)&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt; の&lt;/a&gt;比較とは異なります。これは、同じ日付を使用して両方の時間をインスタントに変換し、インスタントを比較することと同じです。</target>
        </trans-unit>
        <trans-unit id="7ded6f5945dd24118a0001490dfed25e31bce36a" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position. This is equivalent to using &lt;code&gt;date1.toEpochDay() &amp;gt; date2.toEpochDay()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; の&lt;/a&gt;比較とは異なり、基になる日付のみを比較し、時系列は比較しません。これにより、異なるカレンダーシステムの日付をタイムラインの位置に基づいて比較できます。これは、 &lt;code&gt;date1.toEpochDay() &amp;gt; date2.toEpochDay()&lt;/code&gt; を使用するのと同じです。</target>
        </trans-unit>
        <trans-unit id="4b83483aed8055a20f2e3ae66ddfce32120e1a6e" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position. This is equivalent to using &lt;code&gt;date1.toEpochDay() &amp;lt; date2.toEpochDay()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; の&lt;/a&gt;比較とは異なり、基になる日付のみを比較し、時系列は比較しません。これにより、異なるカレンダーシステムの日付をタイムラインの位置に基づいて比較できます。これは、 &lt;code&gt;date1.toEpochDay() &amp;lt; date2.toEpochDay()&lt;/code&gt; を使用するのと同じです。</target>
        </trans-unit>
        <trans-unit id="a25464eb19cbf4f40a0c9d6f579f44c12e949108" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position. This is equivalent to using &lt;code&gt;date1.toEpochDay() == date2.toEpochDay()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; の&lt;/a&gt;比較とは異なり、基になる日付のみを比較し、時系列は比較しません。これにより、異なるカレンダーシステムの日付をタイムラインの位置に基づいて比較できます。これは、 &lt;code&gt;date1.toEpochDay() == date2.toEpochDay()&lt;/code&gt; を使用するのと同じです。</target>
        </trans-unit>
        <trans-unit id="5e878ede181115290bcfc6f4f32e97c63f8887aa" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and time and not the chronology. This allows date-times in different calendar systems to be compared based on the time-line position.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;の比較とは異なり、基になる日付と時刻のみを比較し、時系列は比較しません。これにより、異なるカレンダーシステムの日時をタイムラインの位置に基づいて比較できます。</target>
        </trans-unit>
        <trans-unit id="9bf4dd3918f27c219f99b7d88ceb4ed3034de052" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date-time and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;の比較とは異なり、基になる日時のみを比較し、時系列は比較しません。これにより、異なるカレンダーシステムの日付をタイムラインの位置に基づいて比較できます。</target>
        </trans-unit>
        <trans-unit id="089a505f5df44176a312d0c72c836bb5a18d2ef3" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、日時の瞬間のみを比較するという点で、&lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;の比較とは異なります。これは、 &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt; を使用するのと同じです。。</target>
        </trans-unit>
        <trans-unit id="8529134b4f94eb68c2d21e23494147582f563ff5" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、日時の瞬間のみを比較するという点で、&lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;の比較とは異なります。これは、 &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt; を使用するのと同じです。。</target>
        </trans-unit>
        <trans-unit id="a3ef79b65f506a9e19a502b66c4753909e7759c9" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、日時の瞬間のみを比較するという点で、&lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;の比較とは異なります。これは、 &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt; を使用するのと同じです。。</target>
        </trans-unit>
        <trans-unit id="c8a8a426401075bfebe76bd1131b78e727507772" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position. This is equivalent to using &lt;code&gt;date1.toEpochDay() &amp;gt; date2.toEpochDay()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、基になる日付のみを比較し、&lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; &lt;/a&gt;比較しないという点で、compareTo（java.time.chrono.ChronoLocalDate）の比較とは異なります。これにより、タイムラインの位置に基づいて、異なるカレンダーシステムの日付を比較できます。これは、 &lt;code&gt;date1.toEpochDay() &amp;gt; date2.toEpochDay()&lt;/code&gt; を使用することと同じです。</target>
        </trans-unit>
        <trans-unit id="d865ce7bbce8731f8919dcc191c99881dc0763b3" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position. This is equivalent to using &lt;code&gt;date1.toEpochDay() &amp;lt; date2.toEpochDay()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、基になる日付のみを比較し、&lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; &lt;/a&gt;比較しないという点で、compareTo（java.time.chrono.ChronoLocalDate）の比較とは異なります。これにより、タイムラインの位置に基づいて、異なるカレンダーシステムの日付を比較できます。これは、 &lt;code&gt;date1.toEpochDay() &amp;lt; date2.toEpochDay()&lt;/code&gt; を使用することと同じです。</target>
        </trans-unit>
        <trans-unit id="e67dfebd9078f7bbd8a4464632831ff22f4db473" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position. This is equivalent to using &lt;code&gt;date1.toEpochDay() == date2.toEpochDay()&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、基になる日付のみを比較し、&lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; &lt;/a&gt;比較しないという点で、compareTo（java.time.chrono.ChronoLocalDate）の比較とは異なります。これにより、タイムラインの位置に基づいて、異なるカレンダーシステムの日付を比較できます。これは、 &lt;code&gt;date1.toEpochDay() == date2.toEpochDay()&lt;/code&gt; を使用するのと同じです。</target>
        </trans-unit>
        <trans-unit id="73af9e0f5eb7c76b238b4f76e4874c7da82c1c8e" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and time and not the chronology. This allows date-times in different calendar systems to be compared based on the time-line position.</source>
          <target state="translated">このメソッドは、基になる日付と時刻のみを比較し、年表を比較しない点で、&lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;の比較とは異なります。これにより、タイムラインの位置に基づいて、異なるカレンダーシステムの日時を比較できます。</target>
        </trans-unit>
        <trans-unit id="5e422892980a4143434c4a33271842f6ca101b62" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date-time and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position.</source>
          <target state="translated">このメソッドは、基になる日時のみを比較し、年表を比較しない点で、&lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;の比較とは異なります。これにより、タイムラインの位置に基づいて、異なるカレンダーシステムの日付を比較できます。</target>
        </trans-unit>
        <trans-unit id="69679f35e3a14abac97b704557a6a28c58d1d819" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;chronozoneddatetime#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、日付と時刻の瞬間のみを比較するという点で、&lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;chronozoneddatetime#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;の比較とは異なります。これは、 &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt; を使用するのと同じです。。</target>
        </trans-unit>
        <trans-unit id="2a310bdbafb8caf48753a75e15e9d61ad7c49945" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、日付と時刻の瞬間だけを比較するという点で、&lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;の比較とは異なります。これは、 &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt; を使用するのと同じです。。</target>
        </trans-unit>
        <trans-unit id="2efc5d8ad2ddce9136c3cbf23a4408d68bae821e" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、日付と時刻の瞬間だけを比較するという点で、&lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;の比較とは異なります。これは、 &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt; を使用することと同じです。。</target>
        </trans-unit>
        <trans-unit id="1c0acca56b765b2bc1764861b9d596c46bdc9784" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsetdatetime#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;offsetdatetime#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;の比較とは異なり、日付と時刻の瞬間のみを比較します。これは、 &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt; を使用するのと同じです。。</target>
        </trans-unit>
        <trans-unit id="95bd83ca10b6e2e579e7453880a4102248c15b52" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsetdatetime#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;offsetdatetime#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;の比較とは異なり、日付と時刻の瞬間のみを比較します。これは、 &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt; を使用するのと同じです。。</target>
        </trans-unit>
        <trans-unit id="b9b67c6d81b67989e43d00b4d9e11db5649e4712" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、日付と時刻の瞬間のみを比較するという点で、&lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; の&lt;/a&gt;比較とは異なります。これは、 &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt; を使用することと同じです。。</target>
        </trans-unit>
        <trans-unit id="276e0dc62cdc78db144c25c794c005156b01d95b" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying instant.</source>
          <target state="translated">このメソッドは、基になるインスタントのみを比較するという点で、&lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; の&lt;/a&gt;比較とは異なります。</target>
        </trans-unit>
        <trans-unit id="2b4a8edd55adb2adcee3e7f94c3d11b7b90edd30" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsettime#compareTo-java.time.OffsetTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsettime#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the time. This is equivalent to converting both times to an instant using the same date and comparing the instants.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;offsettime#compareTo-java.time.OffsetTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;offsettime#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;での比較とは異なり、時刻の瞬間のみを比較します。これは、同じ日付を使用して両方の時間をインスタントに変換し、インスタントを比較することと同じです。</target>
        </trans-unit>
        <trans-unit id="e4e5de1c223ead70e6f5f63ebf13ad79c5ab57cd" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsettime#compareTo-java.time.OffsetTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the time. This is equivalent to converting both times to an instant using the same date and comparing the instants.</source>
          <target state="translated">このメソッドは、時刻の瞬間のみを比較するという点で、&lt;a href=&quot;offsettime#compareTo-java.time.OffsetTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt; の&lt;/a&gt;比較とは異なります。これは、同じ日付を使用して両方の時間をインスタントに変換し、インスタントを比較することと同じです。</target>
        </trans-unit>
        <trans-unit id="81446ff3de29ce70008e0ee03dc5c04c4486f1e7" translate="yes" xml:space="preserve">
          <source>This method discovers the attributes and operations that an MBean exposes for management.</source>
          <target state="translated">このメソッドは、MBeanが管理のために公開している属性と操作を検出します。</target>
        </trans-unit>
        <trans-unit id="5c4b9860d67fd6071459494762d41825a9131b33" translate="yes" xml:space="preserve">
          <source>This method does &lt;em&gt;not&lt;/em&gt; report which of these caused the method to return. Callers should re-check the conditions which caused the thread to park in the first place. Callers may also determine, for example, the interrupt status of the thread upon return.</source>
          <target state="translated">このメソッドは、これらのどれがメソッドの戻りを引き起こした&lt;em&gt;かを&lt;/em&gt;報告しませ&lt;em&gt;ん&lt;/em&gt;。呼び出し元は、スレッドが最初に停止する原因となった状態を再確認する必要があります。呼び出し元は、たとえば、戻り時にスレッドの割り込みステータスを判別することもできます。</target>
        </trans-unit>
        <trans-unit id="4bcd6d36fb527564bc407ca010b1b0701d5a9c43" translate="yes" xml:space="preserve">
          <source>This method does &lt;em&gt;not&lt;/em&gt; report which of these caused the method to return. Callers should re-check the conditions which caused the thread to park in the first place. Callers may also determine, for example, the interrupt status of the thread, or the current time upon return.</source>
          <target state="translated">このメソッドは、これらのどれがメソッドの戻りを引き起こした&lt;em&gt;かを&lt;/em&gt;報告しませ&lt;em&gt;ん&lt;/em&gt;。呼び出し元は、スレッドが最初に停止する原因となった状態を再確認する必要があります。呼び出し元は、たとえば、スレッドの割り込みステータスや、戻り時の現在の時刻も判別できます。</target>
        </trans-unit>
        <trans-unit id="f230e6ae839a96b93aabb4880473f2a0be743de0" translate="yes" xml:space="preserve">
          <source>This method does &lt;em&gt;not&lt;/em&gt; report which of these caused the method to return. Callers should re-check the conditions which caused the thread to park in the first place. Callers may also determine, for example, the interrupt status of the thread, or the elapsed time upon return.</source>
          <target state="translated">このメソッドは、これらのどれがメソッドの戻りを引き起こした&lt;em&gt;かを&lt;/em&gt;報告しませ&lt;em&gt;ん&lt;/em&gt;。呼び出し元は、スレッドが最初に停止する原因となった状態を再確認する必要があります。呼び出し元は、たとえば、スレッドの割り込みステータスや、戻り時の経過時間も判別できます。</target>
        </trans-unit>
        <trans-unit id="28f335c86563c754acfdbd40ac1e41a91b21ad68" translate="yes" xml:space="preserve">
          <source>This method does &lt;em&gt;not&lt;/em&gt; translate Unicode escapes such as &quot;&lt;code&gt;\u2022&lt;/code&gt;&quot;. Unicode escapes are translated by the Java compiler when reading input characters and are not part of the string literal specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296a681616b3fe87058a60d901f78cfd8684f909" translate="yes" xml:space="preserve">
          <source>This method does custom mapping if the array elements are a UDT and the given type map has an entry for that UDT. Custom mapping is recursive, meaning that if, for instance, an element of an SQL structured type is an SQL structured type that itself has an element that is an SQL structured type, each structured type that has a custom mapping will be mapped according to the given type map.</source>
          <target state="translated">このメソッドは、配列要素がUDTであり、与えられたタイプマップにそのUDTのエントリがある場合にカスタムマッピングを行います。カスタムマッピングは再帰的であり、例えば、SQL構造化型の要素がSQL構造化型であり、それ自体がSQL構造化型である要素を持っている場合、カスタムマッピングを持つ各構造化型は、与えられた型マップに従ってマッピングされることを意味します。</target>
        </trans-unit>
        <trans-unit id="fab16aba06cb87779b43364062c9208954eabe14" translate="yes" xml:space="preserve">
          <source>This method does not accept the network interface on which to join the multicast group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e56bdbaf75c90317927e46f41f8030ff720d3a10" translate="yes" xml:space="preserve">
          <source>This method does not accept the network interface on which to join the multicast group. Use &lt;a href=&quot;#joinGroup(java.net.SocketAddress,java.net.NetworkInterface)&quot;&gt;&lt;code&gt;joinGroup(SocketAddress, NetworkInterface)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9980c7d65d4f7b5250987febca912e5cc04639" translate="yes" xml:space="preserve">
          <source>This method does not accept the network interface on which to leave the multicast group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c740f252095b60681a2933eeaab485a5a8968801" translate="yes" xml:space="preserve">
          <source>This method does not accept the network interface on which to leave the multicast group. Use &lt;a href=&quot;#leaveGroup(java.net.SocketAddress,java.net.NetworkInterface)&quot;&gt;&lt;code&gt;leaveGroup(SocketAddress, NetworkInterface)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec668043a6e942ad250bbeefecd6bb8d8002b6b" translate="yes" xml:space="preserve">
          <source>This method does not access the file system; the path may not locate a file that exists. Eliminating &quot;&lt;code&gt;..&lt;/code&gt;&quot; and a preceding name from a path may result in the path that locates a different file than the original path. This can arise when the preceding name is a symbolic link.</source>
          <target state="translated">このメソッドはファイルシステムにアクセスしません。パスが存在するファイルを見つけられない可能性があります。パスから「 &lt;code&gt;..&lt;/code&gt; 」とその前の名前を削除すると、元のパスとは異なるファイルを検索するパスになる場合があります。これは、前述の名前がシンボリックリンクである場合に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="9e40f43f5275cd9b2cf9e39b15d8ee8b5b58ae2e" translate="yes" xml:space="preserve">
          <source>This method does not actually change the active Window as far as the native windowing system is concerned. It merely stores the value to be subsequently returned by &lt;code&gt;getActiveWindow()&lt;/code&gt;. Use &lt;code&gt;Component.requestFocus()&lt;/code&gt; or &lt;code&gt;Component.requestFocusInWindow()&lt;/code&gt; to change the active Window, subject to platform limitations.</source>
          <target state="translated">このメソッドは、ネイティブウィンドウシステムに関する限り、実際にはアクティブなウィンドウを変更しません。 &lt;code&gt;getActiveWindow()&lt;/code&gt; によって後で返される値を格納するだけです。 &lt;code&gt;Component.requestFocus()&lt;/code&gt; または &lt;code&gt;Component.requestFocusInWindow()&lt;/code&gt; を使用して、プラットフォームの制限に従って、アクティブなウィンドウを変更します。</target>
        </trans-unit>
        <trans-unit id="48c31ae9e2272e95342caa210e4b2d45146a976a" translate="yes" xml:space="preserve">
          <source>This method does not actually change the focused Window as far as the native windowing system is concerned. It merely stores the value to be subsequently returned by &lt;code&gt;getFocusedWindow()&lt;/code&gt;. Use &lt;code&gt;Component.requestFocus()&lt;/code&gt; or &lt;code&gt;Component.requestFocusInWindow()&lt;/code&gt; to change the focused Window, subject to platform limitations.</source>
          <target state="translated">この方法では、ネイティブウィンドウシステムに関する限り、フォーカスされたウィンドウは実際には変更されません。 &lt;code&gt;getFocusedWindow()&lt;/code&gt; によって後で返される値を格納するだけです。 &lt;code&gt;Component.requestFocus()&lt;/code&gt; または &lt;code&gt;Component.requestFocusInWindow()&lt;/code&gt; を使用して、プラットフォームの制限に従って、フォーカスされたウィンドウを変更します。</target>
        </trans-unit>
        <trans-unit id="29efc8d1d0a975c0106803bf392fa8e4c9140058" translate="yes" xml:space="preserve">
          <source>This method does not actually erase the data in the buffer, but it is named as if it did because it will most often be used in situations in which that might as well be the case.</source>
          <target state="translated">このメソッドは実際にはバッファ内のデータを消去しませんが、あたかも消去したかのように名前が付けられています。</target>
        </trans-unit>
        <trans-unit id="13e7d2a2f4b73611ac0457aaf336b3f091c4bd91" translate="yes" xml:space="preserve">
          <source>This method does not actually set the focus to the specified Component. It merely stores the value to be subsequently returned by &lt;code&gt;getFocusOwner()&lt;/code&gt;. Use &lt;code&gt;Component.requestFocus()&lt;/code&gt; or &lt;code&gt;Component.requestFocusInWindow()&lt;/code&gt; to change the focus owner, subject to platform limitations.</source>
          <target state="translated">このメソッドは、実際には指定されたコンポーネントにフォーカスを設定しません。 &lt;code&gt;getFocusOwner()&lt;/code&gt; によって後で返される値を格納するだけです。 &lt;code&gt;Component.requestFocus()&lt;/code&gt; または &lt;code&gt;Component.requestFocusInWindow()&lt;/code&gt; を使用して、プラットフォームの制限に従って、フォーカスの所有者を変更します。</target>
        </trans-unit>
        <trans-unit id="710eb7d58c81047ff9568eaa375e5ee54de93791" translate="yes" xml:space="preserve">
          <source>This method does not actually set the focus to the specified Component. It merely stores the value to be subsequently returned by &lt;code&gt;getPermanentFocusOwner()&lt;/code&gt;. Use &lt;code&gt;Component.requestFocus()&lt;/code&gt; or &lt;code&gt;Component.requestFocusInWindow()&lt;/code&gt; to change the focus owner, subject to platform limitations.</source>
          <target state="translated">このメソッドは、実際には指定されたコンポーネントにフォーカスを設定しません。 &lt;code&gt;getPermanentFocusOwner()&lt;/code&gt; によって後で返される値を格納するだけです。 &lt;code&gt;Component.requestFocus()&lt;/code&gt; または &lt;code&gt;Component.requestFocusInWindow()&lt;/code&gt; を使用して、プラットフォームの制限に従って、フォーカスの所有者を変更します。</target>
        </trans-unit>
        <trans-unit id="d0462f8cd40a193807741b2a955105e488b1a6dc" translate="yes" xml:space="preserve">
          <source>This method does not attempt to locate &lt;code&gt;ImageReader&lt;/code&gt;s that can read directly from a &lt;code&gt;File&lt;/code&gt;; that may be accomplished using &lt;code&gt;IIORegistry&lt;/code&gt; and &lt;code&gt;ImageReaderSpi&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;File&lt;/code&gt; から直接読み取ることができる &lt;code&gt;ImageReader&lt;/code&gt; を見つけようとしません。 &lt;code&gt;IIORegistry&lt;/code&gt; と &lt;code&gt;ImageReaderSpi&lt;/code&gt; を使用して実現できます。</target>
        </trans-unit>
        <trans-unit id="f5028ce13fc5fa887cf07e88a999f30391cac7a8" translate="yes" xml:space="preserve">
          <source>This method does not attempt to locate &lt;code&gt;ImageReader&lt;/code&gt;s that can read directly from a &lt;code&gt;URL&lt;/code&gt;; that may be accomplished using &lt;code&gt;IIORegistry&lt;/code&gt; and &lt;code&gt;ImageReaderSpi&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;URL&lt;/code&gt; から直接読み取ることができる &lt;code&gt;ImageReader&lt;/code&gt; を見つけようとしません。 &lt;code&gt;IIORegistry&lt;/code&gt; と &lt;code&gt;ImageReaderSpi&lt;/code&gt; を使用して実現できます。</target>
        </trans-unit>
        <trans-unit id="08d84f5481057ffe75137ea92fd191d915f3dd45" translate="yes" xml:space="preserve">
          <source>This method does not attempt to locate &lt;code&gt;ImageReader&lt;/code&gt;s that can read directly from an &lt;code&gt;InputStream&lt;/code&gt;; that may be accomplished using &lt;code&gt;IIORegistry&lt;/code&gt; and &lt;code&gt;ImageReaderSpi&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;InputStream&lt;/code&gt; から直接読み取ることができる &lt;code&gt;ImageReader&lt;/code&gt; を見つけようとしません。 &lt;code&gt;IIORegistry&lt;/code&gt; と &lt;code&gt;ImageReaderSpi&lt;/code&gt; を使用して実現できます。</target>
        </trans-unit>
        <trans-unit id="9f08760e220c331627a09f409aecc4d1ef380373" translate="yes" xml:space="preserve">
          <source>This method does not automatically escape characters that are illegal in URLs.</source>
          <target state="translated">このメソッドは、URL内の不正な文字を自動的にエスケープしません。</target>
        </trans-unit>
        <trans-unit id="65240b95a4c361a7cb7f7fb6d928357b34b4e6db" translate="yes" xml:space="preserve">
          <source>This method does not automatically escape characters that are illegal in URLs. It is recommended that new code convert an abstract pathname into a URL by first converting it into a URI, via the &lt;a href=&quot;#toURI()&quot;&gt;&lt;code&gt;toURI&lt;/code&gt;&lt;/a&gt; method, and then converting the URI into a URL via the &lt;a href=&quot;../net/uri#toURL()&quot;&gt;&lt;code&gt;URI.toURL&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、URLで不正な文字を自動的にエスケープしません。新しいコードが最初に介して、URIに変換することにより、URLに抽象パス名を変換することをお勧めし&lt;a href=&quot;#toURI()&quot;&gt; &lt;code&gt;toURI&lt;/code&gt; の&lt;/a&gt;方法、及びその後介してURLにURIを変換&lt;a href=&quot;../net/uri#toURL()&quot;&gt; &lt;code&gt;URI.toURL&lt;/code&gt; の&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="fac3576c4d1c22034682c222249823c14a504b13" translate="yes" xml:space="preserve">
          <source>This method does not block. An invocation always returns immediately, either having acquired a lock on the requested region or having failed to do so. If it fails to acquire a lock because an overlapping lock is held by another program then it returns &lt;code&gt;null&lt;/code&gt;. If it fails to acquire a lock for any other reason then an appropriate exception is thrown.</source>
          <target state="translated">このメソッドはブロックしません。呼び出しは常に、要求された領域のロックを取得したか、ロックに失敗したかのいずれかですぐに戻ります。重複するロックが別のプログラムによって保持されているためにロックの取得に失敗した場合は、 &lt;code&gt;null&lt;/code&gt; を返します。その他の理由でロックの取得に失敗した場合は、適切な例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="739f6c4ec447092dad0768d6522ca501b45abbd6" translate="yes" xml:space="preserve">
          <source>This method does not cause &lt;a href=&quot;module/configuration#resolveAndBind(java.lang.module.ModuleFinder,java.lang.module.ModuleFinder,java.util.Collection)&quot;&gt;&lt;code&gt;resolveAndBind&lt;/code&gt;&lt;/a&gt; to be re-run.</source>
          <target state="translated">このメソッドによって&lt;a href=&quot;module/configuration#resolveAndBind(java.lang.module.ModuleFinder,java.lang.module.ModuleFinder,java.util.Collection)&quot;&gt; &lt;code&gt;resolveAndBind&lt;/code&gt; &lt;/a&gt;が再実行されることはありません。</target>
        </trans-unit>
        <trans-unit id="776db5599544763bcd336fd173724144761f8aed" translate="yes" xml:space="preserve">
          <source>This method does not cause any initialization except that which would occur under the customary JVM semantics. In other words, redefining a class does not cause its initializers to be run. The values of static variables will remain as they were prior to the call.</source>
          <target state="translated">このメソッドは、慣習的なJVMセマンティクスの下で発生する以外の初期化を発生させません。言い換えれば、クラスを再定義しても、そのクラスの初期化子が実行されることはありません。静的変数の値は、呼び出し前のままになります。</target>
        </trans-unit>
        <trans-unit id="0ff258b4775889f64e810ff1b7d83a79ed4e0058" translate="yes" xml:space="preserve">
          <source>This method does not cause the image to begin loading. An application must call &lt;code&gt;prepareImage&lt;/code&gt; to force the loading of an image.</source>
          <target state="translated">この方法では、画像の読み込みは開始されません。アプリケーションは &lt;code&gt;prepareImage&lt;/code&gt; を呼び出して、画像の読み込みを強制する必要があります。</target>
        </trans-unit>
        <trans-unit id="502696048ce187593e01a1e92f213bb9e32421f6" translate="yes" xml:space="preserve">
          <source>This method does not cause the image to begin loading. An application must use the &lt;code&gt;prepareImage&lt;/code&gt; method to force the loading of an image.</source>
          <target state="translated">この方法では、画像の読み込みは開始されません。アプリケーションは、 &lt;code&gt;prepareImage&lt;/code&gt; メソッドを使用して、画像を強制的にロードする必要があります。</target>
        </trans-unit>
        <trans-unit id="d5091406f447744b13fff86c3f85275b25918ca2" translate="yes" xml:space="preserve">
          <source>This method does not change the value of &lt;code&gt;java.class.path&lt;/code&gt;&lt;a href=&quot;../../../../java.base/java/lang/system#getProperties()&quot;&gt;&lt;code&gt;system property&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;java.class.path&lt;/code&gt; &lt;a href=&quot;../../../../java.base/java/lang/system#getProperties()&quot;&gt; &lt;code&gt;system property&lt;/code&gt; &lt;/a&gt;値を変更しません。</target>
        </trans-unit>
        <trans-unit id="029519cbdd36144790d6e5a27b657276f60210ce" translate="yes" xml:space="preserve">
          <source>This method does not change the value of &lt;code&gt;java.class.path&lt;/code&gt;&lt;a href=&quot;../system#getProperties--&quot;&gt;&lt;code&gt;system property&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;java.class.path&lt;/code&gt; &lt;a href=&quot;../system#getProperties--&quot;&gt; &lt;code&gt;system property&lt;/code&gt; &lt;/a&gt;値を変更しません。</target>
        </trans-unit>
        <trans-unit id="98a36351e0ecacf5f32a3587fc6f8e0fd34e5a19" translate="yes" xml:space="preserve">
          <source>This method does not check if the given module reads this module.</source>
          <target state="translated">このメソッドは、与えられたモジュールがこのモジュールを読むかどうかをチェックしません。</target>
        </trans-unit>
        <trans-unit id="5929427b54e2302f122807623467ff2382bc655b" translate="yes" xml:space="preserve">
          <source>This method does not check the arguments in any way. It is strongly recommended that &lt;code&gt;non-null&lt;/code&gt; values are supplied else exceptions may occur when &lt;code&gt;createValue&lt;/code&gt; is invoked on the returned object.</source>
          <target state="translated">このメソッドは、引数をチェックしません。 &lt;code&gt;non-null&lt;/code&gt; 値を指定することを強くお勧めします。そうしないと、返されたオブジェクトで &lt;code&gt;createValue&lt;/code&gt; が呼び出されたときに例外が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="4e51d88576feeacca335af8660cdb2a0b4826955" translate="yes" xml:space="preserve">
          <source>This method does not check whether the requested class is accessible to its caller.</source>
          <target state="translated">このメソッドは、要求されたクラスが呼び出し元にアクセス可能かどうかをチェックしません。</target>
        </trans-unit>
        <trans-unit id="bf7c40198c08d4b4ad4f93e1073ba63c702e0f5d" translate="yes" xml:space="preserve">
          <source>This method does not close the &lt;a href=&quot;../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; を&lt;/a&gt;閉じません。</target>
        </trans-unit>
        <trans-unit id="59c45ec5a546bc59cc86f4993fa3d3302d1df3ef" translate="yes" xml:space="preserve">
          <source>This method does not do full validation of the resulting &lt;code&gt;QName&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、結果の &lt;code&gt;QName&lt;/code&gt; の完全な検証を行いません。</target>
        </trans-unit>
        <trans-unit id="d76e4056f05ca2e3ee1fb23c60bd22d376458e51" translate="yes" xml:space="preserve">
          <source>This method does not find any method with name &quot;&lt;code&gt;&amp;lt;init&amp;gt;&lt;/code&gt;&quot; or &quot;&lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt;&quot;.</source>
          <target state="translated">このメソッドは、「 &lt;code&gt;&amp;lt;init&amp;gt;&lt;/code&gt; 」または「 &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt; 」という名前のメソッドを検出しません。</target>
        </trans-unit>
        <trans-unit id="0867a150fdb37c1ec80e7b7ddc899966608b687a" translate="yes" xml:space="preserve">
          <source>This method does not modify internal state of this &lt;code&gt;Builder&lt;/code&gt; object and can be called multiple times to generate multiple &lt;code&gt;JarSigner&lt;/code&gt; objects. After this method is called, calling any method on this &lt;code&gt;Builder&lt;/code&gt; will have no effect on the newly built &lt;code&gt;JarSigner&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16cbeb9b6b383c135b9d4fffaae8b1ac2d8b8242" translate="yes" xml:space="preserve">
          <source>This method does not modify this channel's position. If the given position is greater than the file's current size then no bytes are transferred. If the source channel has a position then bytes are read starting at that position and then the position is incremented by the number of bytes read.</source>
          <target state="translated">このメソッドは、このチャンネルの位置を変更しません。与えられた位置がファイルの現在のサイズより大きい場合、バイトは転送されません。ソースチャネルに位置がある場合は、その位置からバイトが読み込まれ、読み込まれたバイト数だけ位置が増加します。</target>
        </trans-unit>
        <trans-unit id="2f6fb75afad10086596870671066a96fdeb3f586" translate="yes" xml:space="preserve">
          <source>This method does not modify this channel's position. If the given position is greater than the file's current size then no bytes are transferred. If the target channel has a position then bytes are written starting at that position and then the position is incremented by the number of bytes written.</source>
          <target state="translated">このメソッドは、このチャンネルの位置を変更しません。指定された位置がファイルの現在のサイズより大きい場合、バイトは転送されません。ターゲットチャネルに位置がある場合は、その位置からバイトが書き込まれ、書き込まれたバイト数だけ位置が増加します。</target>
        </trans-unit>
        <trans-unit id="72c23e6263d976b1f680a7795906a0c4e0672722" translate="yes" xml:space="preserve">
          <source>This method does not offer real-time guarantees: It schedules the timeout as if by invoking the &lt;a href=&quot;../../lang/object#wait(long)&quot;&gt;&lt;code&gt;Object.wait(long)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、リアルタイムの保証を提供しません&lt;a href=&quot;../../lang/object#wait(long)&quot;&gt; &lt;code&gt;Object.wait(long)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すかのようにタイムアウトをスケジュールします。</target>
        </trans-unit>
        <trans-unit id="799659d1b1680f85ef944208828233ac6460e32e" translate="yes" xml:space="preserve">
          <source>This method does not offer real-time guarantees: It schedules the timeout as if by invoking the &lt;a href=&quot;../../lang/object#wait-long-&quot;&gt;&lt;code&gt;Object.wait(long)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、リアルタイムの保証を提供しません&lt;a href=&quot;../../lang/object#wait-long-&quot;&gt; &lt;code&gt;Object.wait(long)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すかのようにタイムアウトをスケジュールします。</target>
        </trans-unit>
        <trans-unit id="47483e602bdd01b38a25c8886a05c4277118ad08" translate="yes" xml:space="preserve">
          <source>This method does not offer real-time guarantees: It schedules the timeout as if by invoking the &lt;a href=&quot;../object#wait(long)&quot;&gt;&lt;code&gt;Object.wait(long)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、リアルタイムの保証を提供しません&lt;a href=&quot;../object#wait(long)&quot;&gt; &lt;code&gt;Object.wait(long)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すかのようにタイムアウトをスケジュールします。</target>
        </trans-unit>
        <trans-unit id="423dc1fb5fa90201dd1f3386013a35af973fbed0" translate="yes" xml:space="preserve">
          <source>This method does not offer real-time guarantees: It schedules the timeout as if by invoking the &lt;a href=&quot;../object#wait-long-&quot;&gt;&lt;code&gt;Object.wait(long)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、リアルタイムの保証を提供しません&lt;a href=&quot;../object#wait-long-&quot;&gt; &lt;code&gt;Object.wait(long)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すかのようにタイムアウトをスケジュールします。</target>
        </trans-unit>
        <trans-unit id="5b3139d01998a4214e8fa2b187962b58a7805f7f" translate="yes" xml:space="preserve">
          <source>This method does not perform type-safe checking to determine if the returned type is the expected type as this responsibility is delegated to the UDT mapping as implemented by a &lt;code&gt;SQLData&lt;/code&gt; implementation.</source>
          <target state="translated">この責任は &lt;code&gt;SQLData&lt;/code&gt; 実装によって実装されたUDTマッピングに委任されるため、このメソッドは、返されたタイプが予期されるタイプであるかどうかを判断するためのタイプセーフチェックを実行しません。</target>
        </trans-unit>
        <trans-unit id="8a94584d9f7a6f25ea37eb4f359358da8ae932f4" translate="yes" xml:space="preserve">
          <source>This method does not perform type-safe checking to determine if the returned type is the expected type; this responsibility is delegated to the UDT mapping as defined by a &lt;code&gt;SQLData&lt;/code&gt; implementation.</source>
          <target state="translated">このメソッドは、返されたタイプが予期されたタイプであるかどうかを判断するためのタイプセーフチェックを実行しません。この責任は、 &lt;code&gt;SQLData&lt;/code&gt; 実装で定義されているUDTマッピングに委任されます。</target>
        </trans-unit>
        <trans-unit id="f63e96ea52e997b8e7efa71e312ecad05edb18aa" translate="yes" xml:space="preserve">
          <source>This method does not properly convert bytes into characters.</source>
          <target state="translated">このメソッドは、バイトを正しく文字に変換しません。</target>
        </trans-unit>
        <trans-unit id="8e032a3094a39915f5d3643f41f97b0f7da21e9d" translate="yes" xml:space="preserve">
          <source>This method does not properly convert bytes into characters. As of JDK 1.1, the preferred way to do this is via the &lt;a href=&quot;#toString(java.lang.String)&quot;&gt;&lt;code&gt;toString(String charsetName)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#toString(java.nio.charset.Charset)&quot;&gt;&lt;code&gt;toString(Charset charset)&lt;/code&gt;&lt;/a&gt; method, which takes an encoding-name or charset argument, or the &lt;code&gt;toString()&lt;/code&gt; method, which uses the platform's default character encoding.</source>
          <target state="translated">このメソッドは、バイトを文字に適切に変換しません。JDK 1.1以降、これを行うための推奨される方法は、encoding-nameまたはcharset引数をとる&lt;a href=&quot;#toString(java.lang.String)&quot;&gt; &lt;code&gt;toString(String charsetName)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#toString(java.nio.charset.Charset)&quot;&gt; &lt;code&gt;toString(Charset charset)&lt;/code&gt; &lt;/a&gt;メソッド、またはプラットフォームのデフォルト文字を使用する &lt;code&gt;toString()&lt;/code&gt; メソッドを使用することです。エンコーディング。</target>
        </trans-unit>
        <trans-unit id="544372581daa3c4f898f6522f58a51d4a00bbee8" translate="yes" xml:space="preserve">
          <source>This method does not properly convert bytes into characters. As of JDK 1.1, the preferred way to do this is via the &lt;code&gt;String&lt;/code&gt; constructors that take a &lt;a href=&quot;../nio/charset/charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt;, charset name, or that use the platform's default charset.</source>
          <target state="translated">このメソッドは、バイトを文字に適切に変換しません。JDK 1.1以降、これを行うための推奨される方法は、&lt;a href=&quot;../nio/charset/charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;、charset名を受け取るか、プラットフォームのデフォルトのcharsetを使用する &lt;code&gt;String&lt;/code&gt; コンストラクターを使用することです。</target>
        </trans-unit>
        <trans-unit id="1ea789d5f5b5c57ff102d10970b22e6f22a0062d" translate="yes" xml:space="preserve">
          <source>This method does not properly convert bytes to characters.</source>
          <target state="translated">このメソッドは、バイトを正しく文字に変換しません。</target>
        </trans-unit>
        <trans-unit id="e6d9b371108b739a941164269f12b49cd128ae9b" translate="yes" xml:space="preserve">
          <source>This method does not properly convert bytes to characters. As of JDK 1.1, the preferred way to read lines of text is via the &lt;code&gt;BufferedReader.readLine()&lt;/code&gt; method. Programs that use the &lt;code&gt;DataInputStream&lt;/code&gt; class to read lines can be converted to use the &lt;code&gt;BufferedReader&lt;/code&gt; class by replacing code of the form:</source>
          <target state="translated">このメソッドは、バイトを文字に適切に変換しません。JDK 1.1以降、テキスト行を読み取るための推奨される方法は、 &lt;code&gt;BufferedReader.readLine()&lt;/code&gt; メソッドを使用することです。 &lt;code&gt;DataInputStream&lt;/code&gt; クラスを使用して行を読み取るプログラムは、次の形式のコードを置き換えることにより、 &lt;code&gt;BufferedReader&lt;/code&gt; クラスを使用するように変換できます。</target>
        </trans-unit>
        <trans-unit id="b7432fd7162333e764ce5a6da0930598f3742663" translate="yes" xml:space="preserve">
          <source>This method does not properly convert bytes to characters. see DataInputStream for the details and alternatives.</source>
          <target state="translated">このメソッドは、バイトから文字への変換を適切に行いません。詳細および代替手段については、DataInputStream を参照してください。</target>
        </trans-unit>
        <trans-unit id="0a2f240b42a61e95aa85ce4bb61e86e63ea9b95b" translate="yes" xml:space="preserve">
          <source>This method does not properly convert characters into bytes.</source>
          <target state="translated">このメソッドは、文字を正しくバイトに変換しません。</target>
        </trans-unit>
        <trans-unit id="35d697fca471ffff1987bb3cd921e1ff02318b44" translate="yes" xml:space="preserve">
          <source>This method does not properly convert characters into bytes. As of JDK 1.1, the preferred way to do this is via the &lt;a href=&quot;#getBytes()&quot;&gt;&lt;code&gt;getBytes()&lt;/code&gt;&lt;/a&gt; method, which uses the platform's default charset.</source>
          <target state="translated">このメソッドは、文字をバイトに適切に変換しません。JDK 1.1以降、これを行うための推奨される方法は、プラットフォームのデフォルトの文字セットを使用する&lt;a href=&quot;#getBytes()&quot;&gt; &lt;code&gt;getBytes()&lt;/code&gt; &lt;/a&gt;メソッドを使用することです。</target>
        </trans-unit>
        <trans-unit id="ef4e2b767949a4548f2c7dfa408e0075ab625240" translate="yes" xml:space="preserve">
          <source>This method does not reset this matcher. Matching starts on initiation of the terminal stream operation either at the beginning of this matcher's region, or, if the matcher has not since been reset, at the first character not matched by a previous match.</source>
          <target state="translated">こ の方法では、 こ のマ ッ チ ャ は リ セ ッ ト さ れません。マッチングは、ターミナルストリーム操作の開始時に、このマ ッ チ ャ ーの領域の先頭から開始されるか、あるいは、 マ ッ チ ャ ーが リ セ ッ ト さ れていない場合には、 以前のマ ッ チ ャ ーで マ ッ チ さ れなかった最初のキ ャ ラ ク タ から開始 さ れます。</target>
        </trans-unit>
        <trans-unit id="bbb597bced40ad019088b4772b4ed2482b1397a3" translate="yes" xml:space="preserve">
          <source>This method does not return a &lt;a href=&quot;../virtualmachine&quot;&gt;&lt;code&gt;VirtualMachine&lt;/code&gt;&lt;/a&gt;, and, normally, returns before any target VM initiates a connection. The connected target is obtained through &lt;a href=&quot;#accept(java.util.Map)&quot;&gt;&lt;code&gt;accept(java.util.Map&amp;lt;java.lang.String, ? extends com.sun.jdi.connect.Connector.Argument&amp;gt;)&lt;/code&gt;&lt;/a&gt; (using the same argument map as is passed to this method).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5570a434f19b86902951953a53543c81dd138c16" translate="yes" xml:space="preserve">
          <source>This method does not return a default parameter value, which cannot be determined until the node context is evaluated during the transformation process.</source>
          <target state="translated">このメソッドはデフォルトのパラメータ値を返さないので、変換処理中にノードコンテキストが評価されるまでは決定できません。</target>
        </trans-unit>
        <trans-unit id="d7f15777525f7e8945fda482bbcf045a1555dcdb" translate="yes" xml:space="preserve">
          <source>This method does not return an &lt;code&gt;Optional&amp;lt;ClassLoader&amp;gt;&lt;/code&gt; because `null` must be used to represent the bootstrap class loader.</source>
          <target state="translated">ブートストラップクラスローダーを表すには `null`を使用する必要があるため、このメソッドは &lt;code&gt;Optional&amp;lt;ClassLoader&amp;gt;&lt;/code&gt; 返しません。</target>
        </trans-unit>
        <trans-unit id="ae8c5701c43f6ce666072de5f4390fd87667a45c" translate="yes" xml:space="preserve">
          <source>This method does not run the class initializer. The class initializer may run at a later time, as detailed in section 12.4 of the &lt;em&gt;The Java Language Specification&lt;/em&gt;.</source>
          <target state="translated">このメソッドは、クラス初期化子を実行しません。クラス初期化子は、&lt;em&gt;Java言語仕様の&lt;/em&gt;セクション12.4で詳しく説明されているように、後で実行される可能性があります。</target>
        </trans-unit>
        <trans-unit id="518fdf9a62a1842e132c618648de357ecd4be46f" translate="yes" xml:space="preserve">
          <source>This method does not start loading the images if they are not already loading.</source>
          <target state="translated">このメソッドは、画像がまだ読み込まれていない場合、画像の読み込みを開始しません。</target>
        </trans-unit>
        <trans-unit id="c0bfc1092de4583f7c47d0938c2509e60107b2f4" translate="yes" xml:space="preserve">
          <source>This method does not throw an IOException if an I/O error occurs while saving the property list.</source>
          <target state="translated">このメソッドは、プロパティ・リストの保存中にI/Oエラーが発生した場合、IOExceptionをスローしません。</target>
        </trans-unit>
        <trans-unit id="030784be9e5c5d1721015f5e36e6b54d932fef1e" translate="yes" xml:space="preserve">
          <source>This method does not throw an IOException if an I/O error occurs while saving the property list. The preferred way to save a properties list is via the &lt;code&gt;store(OutputStream out,
 String comments)&lt;/code&gt; method or the &lt;code&gt;storeToXML(OutputStream os, String comment)&lt;/code&gt; method.</source>
          <target state="translated">プロパティリストの保存中にI / Oエラーが発生した場合、このメソッドはIOExceptionをスローしません。プロパティリストを保存するための推奨される方法は、 &lt;code&gt;store(OutputStream out, String comments)&lt;/code&gt; メソッドまたは &lt;code&gt;storeToXML(OutputStream os, String comment)&lt;/code&gt; メソッドを使用することです。</target>
        </trans-unit>
        <trans-unit id="34e93ac3f68ab2b9b6af400e0d50626a5d6e720b" translate="yes" xml:space="preserve">
          <source>This method does not wait for actively executing tasks to terminate. Use &lt;a href=&quot;#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">このメソッドは、アクティブに実行されているタスクが終了するのを待ちません。&lt;a href=&quot;#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;を行うには、awaitTerminationを使用します。</target>
        </trans-unit>
        <trans-unit id="f0e031463de8f37b10593f4a2c786da5b71fa914" translate="yes" xml:space="preserve">
          <source>This method does not wait for actively executing tasks to terminate. Use &lt;a href=&quot;executorservice#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">このメソッドは、アクティブに実行されているタスクが終了するのを待ちません。&lt;a href=&quot;executorservice#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;を行うには、awaitTerminationを使用します。</target>
        </trans-unit>
        <trans-unit id="0cfca155e4fe2088fe576ea1b39061a44946c4ff" translate="yes" xml:space="preserve">
          <source>This method does not wait for actively executing tasks to terminate. Use &lt;a href=&quot;executorservice#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">このメソッドは、アクティブに実行されているタスクが終了するのを待ちません。&lt;a href=&quot;executorservice#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;にはawaitTerminationを使用します。</target>
        </trans-unit>
        <trans-unit id="ae53fc019903cb63e96647acf94b63258487c8dc" translate="yes" xml:space="preserve">
          <source>This method does not wait for actively executing tasks to terminate. Use &lt;a href=&quot;threadpoolexecutor#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">このメソッドは、アクティブに実行されているタスクが終了するのを待ちません。&lt;a href=&quot;threadpoolexecutor#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;にはawaitTerminationを使用します。</target>
        </trans-unit>
        <trans-unit id="3925e6f51a78fc788c3de647dd1823c24cc018e1" translate="yes" xml:space="preserve">
          <source>This method does not wait for previously submitted tasks to complete execution. Use &lt;a href=&quot;#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">このメソッドは、以前に送信されたタスクが実行を完了するのを待ちません。&lt;a href=&quot;#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;を行うには、awaitTerminationを使用します。</target>
        </trans-unit>
        <trans-unit id="ddab13986e0508b266c9f24a0e3ee4836b168f6c" translate="yes" xml:space="preserve">
          <source>This method does not wait for previously submitted tasks to complete execution. Use &lt;a href=&quot;executorservice#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">このメソッドは、以前に送信されたタスクが実行を完了するのを待ちません。&lt;a href=&quot;executorservice#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;を行うには、awaitTerminationを使用します。</target>
        </trans-unit>
        <trans-unit id="6845b8bb705b91430417229ccdbccb9324f99e41" translate="yes" xml:space="preserve">
          <source>This method does not wait for previously submitted tasks to complete execution. Use &lt;a href=&quot;executorservice#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">このメソッドは、以前に送信されたタスクの実行が完了するのを待ちません。&lt;a href=&quot;executorservice#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;にはawaitTerminationを使用します。</target>
        </trans-unit>
        <trans-unit id="d8b986bb2830801c1c0e469068e7bda1db7a0f3a" translate="yes" xml:space="preserve">
          <source>This method does not wait for previously submitted tasks to complete execution. Use &lt;a href=&quot;threadpoolexecutor#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">このメソッドは、以前に送信されたタスクの実行が完了するのを待ちません。&lt;a href=&quot;threadpoolexecutor#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;にはawaitTerminationを使用します。</target>
        </trans-unit>
        <trans-unit id="4f3e08068e290d1bd435b2f9f76451c0b488a2d2" translate="yes" xml:space="preserve">
          <source>This method does not write the values contained by this &lt;code&gt;PutField&lt;/code&gt; object in a proper format, and may result in corruption of the serialization stream.</source>
          <target state="translated">このメソッドは、この &lt;code&gt;PutField&lt;/code&gt; オブジェクトに含まれる値を適切な形式で書き込まないため、シリアル化ストリームが破損する可能性があります。</target>
        </trans-unit>
        <trans-unit id="802083cd9c9fc6cd1c1858848242ac37646238e4" translate="yes" xml:space="preserve">
          <source>This method does not write the values contained by this &lt;code&gt;PutField&lt;/code&gt; object in a proper format, and may result in corruption of the serialization stream. The correct way to write &lt;code&gt;PutField&lt;/code&gt; data is by calling the &lt;a href=&quot;objectoutputstream#writeFields()&quot;&gt;&lt;code&gt;ObjectOutputStream.writeFields()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、この &lt;code&gt;PutField&lt;/code&gt; オブジェクトに含まれる値を適切な形式で書き込まないため、シリアル化ストリームが破損する可能性があります。 &lt;code&gt;PutField&lt;/code&gt; データを書き込む正しい方法は、&lt;a href=&quot;objectoutputstream#writeFields()&quot;&gt; &lt;code&gt;ObjectOutputStream.writeFields()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことです。</target>
        </trans-unit>
        <trans-unit id="cb7158612eaa76d7379392a77d066179a90687bb" translate="yes" xml:space="preserve">
          <source>This method does the same thing as the concatenateTransform method. It is here for backward compatibility with previous releases which misspelled the method name.</source>
          <target state="translated">このメソッドは concatenateTransform メソッドと同じことを行います。これは、以前のリリースでメソッド名にスペルミスがあった場合の下位互換性のためのものです。</target>
        </trans-unit>
        <trans-unit id="603e6c221899fe81d3a8e3e23a52d2b882f23156" translate="yes" xml:space="preserve">
          <source>This method does the same thing as the preConcatenateTransform method. It is here for backward compatibility with previous releases which misspelled the method name.</source>
          <target state="translated">このメソッドはpreConcatenateTransformメソッドと同じことを行います。これは、以前のリリースでメソッド名にスペルミスがあった場合の下位互換性のためのものです。</target>
        </trans-unit>
        <trans-unit id="a04f810e9c905f9c1329c7a9c73fea317cca2c2f" translate="yes" xml:space="preserve">
          <source>This method doesn't block, i.e. no reverse name service lookup is performed.</source>
          <target state="translated">このメソッドはブロックしません。つまり、逆引き名サービスの検索は行われません。</target>
        </trans-unit>
        <trans-unit id="3208bec693022db00751015acfc76d7263afdcf0" translate="yes" xml:space="preserve">
          <source>This method doesn't validate the specified character to be a valid Unicode code point. The caller must validate the character value using &lt;a href=&quot;#isValidCodePoint(int)&quot;&gt;&lt;code&gt;isValidCodePoint&lt;/code&gt;&lt;/a&gt; if necessary.</source>
          <target state="translated">このメソッドは、指定された文字が有効なUnicodeコードポイントであることを検証しません。呼び出し元は、必要に応じて&lt;a href=&quot;#isValidCodePoint(int)&quot;&gt; &lt;code&gt;isValidCodePoint&lt;/code&gt; &lt;/a&gt;を使用して文字値を検証する必要があります。</target>
        </trans-unit>
        <trans-unit id="1a1542c95859ae75bda25c0a1de2520f230fa72f" translate="yes" xml:space="preserve">
          <source>This method doesn't validate the specified character to be a valid Unicode code point. The caller must validate the character value using &lt;a href=&quot;../../../java.base/java/lang/character#isValidCodePoint(int)&quot;&gt;&lt;code&gt;Character.isValidCodePoint&lt;/code&gt;&lt;/a&gt; if necessary.</source>
          <target state="translated">このメソッドは、指定された文字が有効なUnicodeコードポイントであることを検証しません。呼び出し元は、必要に応じて&lt;a href=&quot;../../../java.base/java/lang/character#isValidCodePoint(int)&quot;&gt; &lt;code&gt;Character.isValidCodePoint&lt;/code&gt; &lt;/a&gt;を使用して文字値を検証する必要があります。</target>
        </trans-unit>
        <trans-unit id="b35853e0da75c2dd9285f53bc7ad476eb18426a5" translate="yes" xml:space="preserve">
          <source>This method doesn't validate the specified character to be a valid Unicode code point. The caller must validate the character value using &lt;a href=&quot;character#isValidCodePoint-int-&quot;&gt;&lt;code&gt;isValidCodePoint&lt;/code&gt;&lt;/a&gt; if necessary.</source>
          <target state="translated">このメソッドは、指定された文字が有効なUnicodeコードポイントであることを検証しません。呼び出し元は、必要に応じて&lt;a href=&quot;character#isValidCodePoint-int-&quot;&gt; &lt;code&gt;isValidCodePoint&lt;/code&gt; &lt;/a&gt;を使用して文字値を検証する必要があります。</target>
        </trans-unit>
        <trans-unit id="1048fa05f79a4bbc08eb87aea2b9b0a538ddeb9c" translate="yes" xml:space="preserve">
          <source>This method draws the polygon defined by &lt;code&gt;nPoint&lt;/code&gt; line segments, where the first &lt;code&gt;nPoint&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; line segments are line segments from &lt;code&gt;(xPoints[i&amp;nbsp;-&amp;nbsp;1],&amp;nbsp;yPoints[i&amp;nbsp;-&amp;nbsp;1])&lt;/code&gt; to &lt;code&gt;(xPoints[i],&amp;nbsp;yPoints[i])&lt;/code&gt;, for 1 &amp;le;</source>
          <target state="translated">このメソッドは、 &lt;code&gt;nPoint&lt;/code&gt; ラインセグメントによって定義されたポリゴンを描画します。最初の &lt;code&gt;nPoint&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; ラインセグメントは、 &lt;code&gt;(xPoints[i&amp;nbsp;-&amp;nbsp;1],&amp;nbsp;yPoints[i&amp;nbsp;-&amp;nbsp;1])&lt;/code&gt; から &lt;code&gt;(xPoints[i],&amp;nbsp;yPoints[i])&lt;/code&gt; までのラインセグメントです。、1&amp;le;の場合</target>
        </trans-unit>
        <trans-unit id="9b0d757f872c8992ebbba76f2a37b8cb57802645" translate="yes" xml:space="preserve">
          <source>This method eliminates the need for explicit range operations (of the sort that commonly exist for arrays). Any operation that expects a List can be used as a range operation by operating on a subList view instead of a whole List. For example, the following idiom removes a range of elements from a List:</source>
          <target state="translated">このメソッドは、明示的な範囲操作(配列に一般的に存在する種類のもの)を必要としません。リストを期待するあらゆる操作は、リスト全体ではなくサブリストビューで操作することで、範囲操作として使用することができます。例えば、次のイディオムは、リストから要素の範囲を削除します。</target>
        </trans-unit>
        <trans-unit id="b87f0cb9c5df7254ccafa323a476c57fb867a722" translate="yes" xml:space="preserve">
          <source>This method eliminates the need for explicit range operations (of the sort that commonly exist for arrays). Any operation that expects a list can be used as a range operation by passing a subList view instead of a whole list. For example, the following idiom removes a range of elements from a list:</source>
          <target state="translated">このメソッドは、明示的な範囲操作(配列に一般的に存在する種類のもの)を必要としません。リストを期待するあらゆる操作は、リスト全体の代わりにサブリストビューを渡すことで、範囲操作として使用することができます。例えば、次のイディオムは、リストから要素の範囲を削除します。</target>
        </trans-unit>
        <trans-unit id="b1ff817159e43733ecf46a19d3ed3ba55ea9ff82" translate="yes" xml:space="preserve">
          <source>This method empties a rowset, as opposed to the &lt;code&gt;close&lt;/code&gt; method, which marks the entire rowset as recoverable to allow the garbage collector the rowset's Java VM resources.</source>
          <target state="translated">このメソッドは、ガベージコレクターが行セットのJava VMリソースを使用できるように、行セット全体をリカバリー可能としてマークする &lt;code&gt;close&lt;/code&gt; メソッドとは対照的に、行セットを空にします。</target>
        </trans-unit>
        <trans-unit id="d1c6c7c0a3f0e3d56a14189ead8dc65d2d8ca336" translate="yes" xml:space="preserve">
          <source>This method enables the current &lt;code&gt;BeanInfo&lt;/code&gt; object to return an arbitrary collection of other &lt;code&gt;BeanInfo&lt;/code&gt; objects that provide additional information about the current bean.</source>
          <target state="translated">このメソッドにより、現在の &lt;code&gt;BeanInfo&lt;/code&gt; オブジェクトは、現在のBeanに関する追加情報を提供する他の &lt;code&gt;BeanInfo&lt;/code&gt; オブジェクトの任意のコレクションを返すことができます。</target>
        </trans-unit>
        <trans-unit id="ebf3fada9a8a6c4c60de6d762aaf5512b45b9cf4" translate="yes" xml:space="preserve">
          <source>This method encapsulates the basic decoding loop, decoding as many bytes as possible until it either runs out of input, runs out of room in the output buffer, or encounters a decoding error. This method is invoked by the &lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method, which handles result interpretation and error recovery.</source>
          <target state="translated">このメソッドは、基本的なデコードループをカプセル化し、入力が不足するか、出力バッファーのスペースが不足するか、デコードエラーが発生するまで、できるだけ多くのバイトをデコードします。このメソッドは、結果の解釈とエラー回復を処理&lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt;メソッドによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="78b1fe125c73b5076363add79751d8af78528e7f" translate="yes" xml:space="preserve">
          <source>This method encapsulates the basic decoding loop, decoding as many bytes as possible until it either runs out of input, runs out of room in the output buffer, or encounters a decoding error. This method is invoked by the &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method, which handles result interpretation and error recovery.</source>
          <target state="translated">このメソッドは、基本的なデコードループをカプセル化し、入力がなくなるか、出力バッファーのスペースがなくなるか、またはデコードエラーが発生するまで、可能な限り多くのバイトをデコードします。このメソッドは、結果の解釈とエラー回復を処理&lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt;メソッドによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9736e21d81231197049729da3a9a8a1d07dd6db3" translate="yes" xml:space="preserve">
          <source>This method encapsulates the basic encoding loop, encoding as many characters as possible until it either runs out of input, runs out of room in the output buffer, or encounters an encoding error. This method is invoked by the &lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method, which handles result interpretation and error recovery.</source>
          <target state="translated">このメソッドは、基本的なエンコードループをカプセル化し、入力が不足するか、出力バッファーのスペースが不足するか、エンコードエラーが発生するまで、できるだけ多くの文字をエンコードします。このメソッドは、結果の解釈とエラー回復を処理&lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt;メソッドによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="34cc00ba57c172360457e325a1b154234e6f6295" translate="yes" xml:space="preserve">
          <source>This method encapsulates the basic encoding loop, encoding as many characters as possible until it either runs out of input, runs out of room in the output buffer, or encounters an encoding error. This method is invoked by the &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method, which handles result interpretation and error recovery.</source>
          <target state="translated">このメソッドは、基本的なエンコードループをカプセル化し、入力がなくなるか、出力バッファーのスペースがなくなるか、またはエンコードエラーが発生するまで、可能な限り多くの文字をエンコードします。このメソッドは、結果の解釈とエラー回復を処理&lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt;メソッドによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e13d1eff2306bf62de827dd65b5dd54d90ab0411" translate="yes" xml:space="preserve">
          <source>This method ensures that the display is up-to-date. It is useful for animation.</source>
          <target state="translated">この方法は、表示が最新の状態になるようにします。アニメーションを作成する際に便利です。</target>
        </trans-unit>
        <trans-unit id="eead0dd018d2f589deaf560909f62c98c6fdfd3f" translate="yes" xml:space="preserve">
          <source>This method ensures the &lt;code&gt;document&lt;/code&gt; is not mutated during printing. To indicate it visually, &lt;code&gt;setEnabled(false)&lt;/code&gt; is set for the duration of printing.</source>
          <target state="translated">この方法により、印刷中に &lt;code&gt;document&lt;/code&gt; が変更されないことが保証されます。視覚的に示すために、 &lt;code&gt;setEnabled(false)&lt;/code&gt; が印刷中に設定されます。</target>
        </trans-unit>
        <trans-unit id="89bb57ef916608db7878a65d5364178a0fe60c35" translate="yes" xml:space="preserve">
          <source>This method establishes an ordering for &lt;a href=&quot;package-summary#reachability&quot;&gt;&lt;em&gt;strong reachability&lt;/em&gt;&lt;/a&gt; with respect to garbage collection. It controls relations that are otherwise only implicit in a program -- the reachability conditions triggering garbage collection. This method is designed for use in uncommon situations of premature finalization where using &lt;code&gt;synchronized&lt;/code&gt; blocks or methods, or using other synchronization facilities are not possible or do not provide the desired control. This method is applicable only when reclamation may have visible effects, which is possible for objects with finalizers (See &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se8/html/jls-12.html#jls-12.6&quot;&gt; Section 12.6 17 of &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;&lt;/a&gt;) that are implemented in ways that rely on ordering control for correctness.</source>
          <target state="translated">この方法は、ガベージコレクションに関して&lt;a href=&quot;package-summary#reachability&quot;&gt;&lt;em&gt;強力な到達可能性の&lt;/em&gt;&lt;/a&gt;順序を確立します。これは、プログラムに暗黙的にのみ含まれる関係、つまりガベージコレクションをトリガーする到達可能性条件を制御します。このメソッドは、 &lt;code&gt;synchronized&lt;/code&gt; ブロックまたはメソッドを使用したり、他の同期機能を使用したりできない、または目的の制御が提供されない、時期尚早のファイナライズというまれな状況で使用するように設計されています。この方法は、レクラメーションが目に見える効果をもたらす可能性がある場合にのみ適用できます。これは、正確さのために順序制御に依存する方法で実装されたファイナライザー（&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se8/html/jls-12.html#jls-12.6&quot;&gt;&lt;cite&gt;Java&amp;trade;言語仕様の&lt;/cite&gt;&lt;/a&gt;セクション12.6 17を&lt;cite&gt;&lt;/cite&gt;参照）を持つオブジェクトで可能です。</target>
        </trans-unit>
        <trans-unit id="bd6a0b6596e4b41e7f80c880ef175d933ff272f9" translate="yes" xml:space="preserve">
          <source>This method establishes an ordering for &lt;a href=&quot;package-summary#reachability&quot;&gt;&lt;em&gt;strong reachability&lt;/em&gt;&lt;/a&gt; with respect to garbage collection. It controls relations that are otherwise only implicit in a program -- the reachability conditions triggering garbage collection. This method is designed for use in uncommon situations of premature finalization where using &lt;code&gt;synchronized&lt;/code&gt; blocks or methods, or using other synchronization facilities are not possible or do not provide the desired control. This method is applicable only when reclamation may have visible effects, which is possible for objects with finalizers (See Section 12.6 of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ace9a4696b375af288eedb658c5a0479b2c340" translate="yes" xml:space="preserve">
          <source>This method evaluates the &lt;em&gt;existential quantification&lt;/em&gt; of the predicate over the elements of the stream (for some x P(x)).</source>
          <target state="translated">このメソッドは、ストリームの要素に対する述語の&lt;em&gt;存在定量化&lt;/em&gt;を評価します（一部のx P（x）の場合）。</target>
        </trans-unit>
        <trans-unit id="8e29b39c37d9f0876c9909a031c3012531b4c71c" translate="yes" xml:space="preserve">
          <source>This method evaluates the &lt;em&gt;universal quantification&lt;/em&gt; of the negated predicate over the elements of the stream (for all x ~P(x)). If the stream is empty, the quantification is said to be vacuously satisfied and is always &lt;code&gt;true&lt;/code&gt;, regardless of P(x).</source>
          <target state="translated">このメソッドは、ストリームの要素に対する否定述語の&lt;em&gt;普遍的な数量化&lt;/em&gt;を評価します（すべてのx〜P（x）に対して）。ストリームが空の場合、定量化は空虚に満たされていると言われ、P（x）に関係なく常に &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d7db2070540c2c562f74f31f3655c1a32f3083a2" translate="yes" xml:space="preserve">
          <source>This method evaluates the &lt;em&gt;universal quantification&lt;/em&gt; of the predicate over the elements of the stream (for all x P(x)). If the stream is empty, the quantification is said to be &lt;em&gt;vacuously satisfied&lt;/em&gt; and is always &lt;code&gt;true&lt;/code&gt; (regardless of P(x)).</source>
          <target state="translated">このメソッドは、ストリームの要素に対する述語の&lt;em&gt;普遍的な数量化&lt;/em&gt;を評価します（すべてのx P（x）に対して）。ストリームが空の場合、数量化は&lt;em&gt;空虚に満たさ&lt;/em&gt;れていると言われ、（P（x）に関係なく）常に &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6913a5692ccd2bbb3f38e0b7cb96fa5e17e992f5" translate="yes" xml:space="preserve">
          <source>This method examines each CardTerminal of this object. If a card was inserted into or removed from a CardTerminal since the previous call to &lt;code&gt;waitForChange()&lt;/code&gt;, it returns immediately. Otherwise, or if this is the first call to &lt;code&gt;waitForChange()&lt;/code&gt; on this object, it blocks until a card is inserted into or removed from a CardTerminal.</source>
          <target state="translated">このメソッドは、このオブジェクトの各CardTerminalを調べます。前回の &lt;code&gt;waitForChange()&lt;/code&gt; の呼び出し以降にカードがCardTerminalに挿入された、またはCardTerminalから削除された場合、カードはすぐに戻ります。それ以外の場合、またはこれがこのオブジェクトに対する &lt;code&gt;waitForChange()&lt;/code&gt; の最初の呼び出しである場合、カードがCardTerminalに挿入されるか、CardTerminalから削除されるまでブロックされます。</target>
        </trans-unit>
        <trans-unit id="16cf4a1fcc5d6973ae156692d6317157013b5c90" translate="yes" xml:space="preserve">
          <source>This method exists mainly to support debugging, where you want to see the elements as they flow past a certain point in a pipeline:</source>
          <target state="translated">このメソッドは主にデバッグをサポートするために存在します。</target>
        </trans-unit>
        <trans-unit id="982c59d7cd4f643b57742247e7e55732ba66ae60" translate="yes" xml:space="preserve">
          <source>This method exists primarily for writing test cases. Non test-code will typically use other methods to create an offset time. &lt;code&gt;LocalDateTime&lt;/code&gt; has five additional convenience variants of the equivalent factory method taking fewer arguments. They are not provided here to reduce the footprint of the API.</source>
          <target state="translated">このメソッドは、主にテストケースを作成するために存在します。非テストコードは通常、他の方法を使用してオフセット時間を作成します。 &lt;code&gt;LocalDateTime&lt;/code&gt; には、引数の数が少ない同等のファクトリメソッドの5つの便利なバリエーションがあります。APIのフットプリントを減らすために、ここでは提供されていません。</target>
        </trans-unit>
        <trans-unit id="cd1761201ffb394e8a819ed4bce3831fbbee5af5" translate="yes" xml:space="preserve">
          <source>This method exists primarily for writing test cases. Non test-code will typically use other methods to create an offset time. &lt;code&gt;LocalTime&lt;/code&gt; has two additional convenience variants of the equivalent factory method taking fewer arguments. They are not provided here to reduce the footprint of the API.</source>
          <target state="translated">このメソッドは、主にテストケースを作成するために存在します。非テストコードは通常、他の方法を使用してオフセット時間を作成します。 &lt;code&gt;LocalTime&lt;/code&gt; には、引数が少ない同等のファクトリメソッドの2つの便利なバリアントがあります。APIのフットプリントを減らすために、ここでは提供されていません。</target>
        </trans-unit>
        <trans-unit id="6c568dfc8a6465cd4ea3973fb49dd2c07553ddf6" translate="yes" xml:space="preserve">
          <source>This method exists so that Connectors may create a virtual machine mirror when a connection is established to a target VM. Only developers creating new Connector implementations should need to make direct use of this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f346697f89a2670d7238c30b8db3324b0fb3dc0" translate="yes" xml:space="preserve">
          <source>This method exists solely for use with &lt;a href=&quot;#suspend()&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt;, which has been deprecated because it is deadlock-prone.</source>
          <target state="translated">このメソッドは、デッドロックが発生しやすいため非推奨となった&lt;a href=&quot;#suspend()&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt;で使用するためだけに存在します。</target>
        </trans-unit>
        <trans-unit id="7e14e52b294b5085e008e5c63bbf9530225f503c" translate="yes" xml:space="preserve">
          <source>This method exists solely for use with &lt;a href=&quot;#suspend()&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt;, which has been deprecated because it is deadlock-prone. For more information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html&quot;&gt;Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、デッドロックが発生しやすいため非推奨となった&lt;a href=&quot;#suspend()&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt;で使用するためだけに存在します。詳細については、「&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html&quot;&gt;Thread.stop、Thread.suspend、およびThread.resumeが非推奨になる理由&lt;/a&gt;」を参照してください。。</target>
        </trans-unit>
        <trans-unit id="e81d676622985deb5cf0936cbe4b26a3ca193b9c" translate="yes" xml:space="preserve">
          <source>This method exists solely for use with &lt;a href=&quot;#suspend()&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt;, which has been deprecated because it is deadlock-prone. For more information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html&quot;&gt;Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b58458b6cd02ffd97fdf8240b91b18bd00bcd97" translate="yes" xml:space="preserve">
          <source>This method exists to be used as a &lt;a href=&quot;function/predicate&quot;&gt;&lt;code&gt;Predicate&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;filter(Objects::isNull)&lt;/code&gt;</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;function/predicate&quot;&gt; &lt;code&gt;Predicate&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;filter(Objects::isNull)&lt;/code&gt; として使用するために存在します</target>
        </trans-unit>
        <trans-unit id="ad117920c2cdf44107f517b6de5ada3dbf71681f" translate="yes" xml:space="preserve">
          <source>This method exists to be used as a &lt;a href=&quot;function/predicate&quot;&gt;&lt;code&gt;Predicate&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;filter(Objects::nonNull)&lt;/code&gt;</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;function/predicate&quot;&gt; &lt;code&gt;Predicate&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;filter(Objects::nonNull)&lt;/code&gt; として使用するために存在します</target>
        </trans-unit>
        <trans-unit id="a1587a8654f211ca8dc7252ca4186a66fa3fe887" translate="yes" xml:space="preserve">
          <source>This method filters &lt;a href=&quot;stackwalker.option#SHOW_REFLECT_FRAMES&quot;&gt;reflection frames&lt;/a&gt;, &lt;a href=&quot;invoke/methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt;hidden frames&lt;/a&gt; regardless of the &lt;a href=&quot;stackwalker.option#SHOW_REFLECT_FRAMES&quot;&gt;&lt;code&gt;SHOW_REFLECT_FRAMES&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt;&lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt;&lt;/a&gt; options this &lt;code&gt;StackWalker&lt;/code&gt; has been configured with.</source>
          <target state="translated">このメソッドは、この &lt;code&gt;StackWalker&lt;/code&gt; が構成されている&lt;a href=&quot;stackwalker.option#SHOW_REFLECT_FRAMES&quot;&gt; &lt;code&gt;SHOW_REFLECT_FRAMES&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt; &lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt; &lt;/a&gt;オプションに関係なく、&lt;a href=&quot;stackwalker.option#SHOW_REFLECT_FRAMES&quot;&gt;反射フレーム&lt;/a&gt;、&lt;a href=&quot;invoke/methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt;非表示フレーム&lt;/a&gt;をフィルター処理します。</target>
        </trans-unit>
        <trans-unit id="df6d84498f6e8e8102f003c3f11bd5dcd829650b" translate="yes" xml:space="preserve">
          <source>This method finds deadlocks involving only object monitors. To find deadlocks involving both object monitors and &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;ownable synchronizers&lt;/a&gt;, the &lt;a href=&quot;#findDeadlockedThreads()&quot;&gt;&lt;code&gt;findDeadlockedThreads&lt;/code&gt;&lt;/a&gt; method should be used.</source>
          <target state="translated">このメソッドは、オブジェクトモニターのみが関与するデッドロックを検出します。オブジェクトモニターと&lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;所有可能なシンクロナイザーの&lt;/a&gt;両方に関連するデッドロックを見つけるには、&lt;a href=&quot;#findDeadlockedThreads()&quot;&gt; &lt;code&gt;findDeadlockedThreads&lt;/code&gt; &lt;/a&gt;メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="3567eed99c163537118a86339bf638abc11755d6" translate="yes" xml:space="preserve">
          <source>This method finds deadlocks involving only object monitors. To find deadlocks involving both object monitors and &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;ownable synchronizers&lt;/a&gt;, the &lt;a href=&quot;threadmxbean#findDeadlockedThreads--&quot;&gt;&lt;code&gt;findDeadlockedThreads&lt;/code&gt;&lt;/a&gt; method should be used.</source>
          <target state="translated">このメソッドは、オブジェクトモニターのみを含むデッドロックを検出します。オブジェクトモニターと&lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;所有可能なシンクロナイザーの&lt;/a&gt;両方を含むデッドロックを見つけるには、&lt;a href=&quot;threadmxbean#findDeadlockedThreads--&quot;&gt; &lt;code&gt;findDeadlockedThreads&lt;/code&gt; &lt;/a&gt;メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2b4dc1a8cd711f7f3fa89cb707ce5c4e33beea21" translate="yes" xml:space="preserve">
          <source>This method finds the desired calendar system by in a manner equivalent to passing &quot;ca&quot; to &lt;a href=&quot;../../util/locale#getUnicodeLocaleType-java.lang.String-&quot;&gt;&lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt;&lt;/a&gt;. If the &quot;ca&quot; key is not present, then &lt;code&gt;IsoChronology&lt;/code&gt; is returned.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../../util/locale#getUnicodeLocaleType-java.lang.String-&quot;&gt; &lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt; に&lt;/a&gt;「ca」を渡すのと同じ方法で、目的のカレンダーシステムを見つけます。「ca」キーが存在しない場合、 &lt;code&gt;IsoChronology&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="4979da53ed79430975a42d2fc6d1d8f29cdba772" translate="yes" xml:space="preserve">
          <source>This method finds the desired calendar system in a manner equivalent to passing &quot;ca&quot; to &lt;a href=&quot;../../util/locale#getUnicodeLocaleType(java.lang.String)&quot;&gt;&lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt;&lt;/a&gt;. If the &quot;ca&quot; key is not present, then &lt;code&gt;IsoChronology&lt;/code&gt; is returned.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../../util/locale#getUnicodeLocaleType(java.lang.String)&quot;&gt; &lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt; に&lt;/a&gt;「ca」を渡すのと同じ方法で目的のカレンダーシステムを検索します。「ca」キーが存在しない場合、 &lt;code&gt;IsoChronology&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="2e3b0f852ae29e4879324d857fc31d934ccc57cf" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; is not equal to the current list.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;list&lt;/code&gt; が現在のリストと等しくない場合に &lt;code&gt;ChangeEvent&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="06a074e040067954b633d62ad58ccfa15051fb5c" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if the &lt;code&gt;calendarField&lt;/code&gt; has changed.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;calendarField&lt;/code&gt; が変更された場合に &lt;code&gt;ChangeEvent&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="850504b87b962593a8402fc6862d7fe014780127" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if the &lt;code&gt;end&lt;/code&gt; has changed.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;end&lt;/code&gt; が変更された場合に &lt;code&gt;ChangeEvent&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="4e33a47701e6220e1af994470a4a5b47fa0136f6" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if the &lt;code&gt;maximum&lt;/code&gt; has changed.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;maximum&lt;/code&gt; が変更された場合に &lt;code&gt;ChangeEvent&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="e5eabef80f7d43866fe8cfe1cfa369a8e99d42e0" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if the &lt;code&gt;minimum&lt;/code&gt; has changed.</source>
          <target state="translated">&lt;code&gt;minimum&lt;/code&gt; が変更された場合、このメソッドは &lt;code&gt;ChangeEvent&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="c6c725eaa2ab8fa77e09a915034e93dbb53a76e9" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if the &lt;code&gt;start&lt;/code&gt; has changed.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;start&lt;/code&gt; が変更された場合に &lt;code&gt;ChangeEvent&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="456564a673c1bf2fff461bd658e1be0a301d9f2f" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if the &lt;code&gt;stepSize&lt;/code&gt; has changed.</source>
          <target state="translated">&lt;code&gt;stepSize&lt;/code&gt; が変更された場合、このメソッドは &lt;code&gt;ChangeEvent&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="e0669704328a789efd980ec0b1450820e661edbc" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if the &lt;code&gt;value&lt;/code&gt; has changed.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;value&lt;/code&gt; が変更された場合に &lt;code&gt;ChangeEvent&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="d72ce51ee15e0aeb7febde5c83cb3ecf4954af7a" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if the value has changed.</source>
          <target state="translated">このメソッドは、値が変更された場合に &lt;code&gt;ChangeEvent&lt;/code&gt; を発生させます。</target>
        </trans-unit>
        <trans-unit id="53fa6df3bd702b6335d0c2b4aa744c4b73f261ae" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;PropertyChangeEvent&lt;/code&gt; when appropriate, with the property name &lt;code&gt;&quot;rowSorter&quot;&lt;/code&gt;. For backward-compatibility, this method fires an additional event with the property name &lt;code&gt;&quot;sorter&quot;&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、必要に応じて、プロパティ名 &lt;code&gt;&quot;rowSorter&quot;&lt;/code&gt; して &lt;code&gt;PropertyChangeEvent&lt;/code&gt; を発生させます。下位互換性のために、このメソッドはプロパティ名 &lt;code&gt;&quot;sorter&quot;&lt;/code&gt; 追加のイベントを発生させます。</target>
        </trans-unit>
        <trans-unit id="a776215816b7d8117a5194f494359e4d80da422b" translate="yes" xml:space="preserve">
          <source>This method first attempts to locate an installed provider in exactly the same manner as the &lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt;&lt;/a&gt; method. If none of the installed providers support the URI scheme then an attempt is made to locate the provider using the given class loader. If a provider supporting the URI scheme is located then its &lt;a href=&quot;spi/filesystemprovider#newFileSystem(java.net.URI,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt;&lt;/a&gt; is invoked to construct the new file system.</source>
          <target state="translated">このメソッドは、最初に、&lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt; &lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じ方法でインストールされたプロバイダーを見つけようとします。インストールされているプロバイダーのいずれもURIスキームをサポートしていない場合、指定されたクラスローダーを使用してプロバイダーを見つけようとします。URIスキームをサポートするプロバイダーが&lt;a href=&quot;spi/filesystemprovider#newFileSystem(java.net.URI,java.util.Map)&quot;&gt; &lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt; &lt;/a&gt;場合、そのnewFileSystem（URI、Map）が呼び出されて、新しいファイルシステムが構築されます。</target>
        </trans-unit>
        <trans-unit id="f6c5f19bb1ce9db9f3adffa77882c13da63267ec" translate="yes" xml:space="preserve">
          <source>This method first attempts to locate an installed provider in exactly the same manner as the &lt;a href=&quot;#newFileSystem(java.nio.file.Path,java.util.Map,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;newFileSystem(Path, Map, ClassLoader)&lt;/code&gt;&lt;/a&gt; method with an empty map. If none of the installed providers return a &lt;code&gt;FileSystem&lt;/code&gt; then an attempt is made to locate the provider using the given class loader. If a provider returns a file system then the lookup terminates and the file system is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b9bf8568a4cbe9b77bde3b1de7f3460a6fdcf9" translate="yes" xml:space="preserve">
          <source>This method first attempts to locate an installed provider in exactly the same manner as the &lt;a href=&quot;#newFileSystem(java.nio.file.Path,java.util.Map,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;newFileSystem(Path, Map, ClassLoader)&lt;/code&gt;&lt;/a&gt; method. If found, the provider's &lt;a href=&quot;spi/filesystemprovider#newFileSystem(java.nio.file.Path,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem(Path, Map)&lt;/code&gt;&lt;/a&gt; method is invoked to construct the new file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874ced70251c223abb61eaa20089bbdeb0f8bb58" translate="yes" xml:space="preserve">
          <source>This method first attempts to locate an installed provider in exactly the same manner as the &lt;a href=&quot;#newFileSystem(java.nio.file.Path,java.util.Map,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;newFileSystem(Path, Map, ClassLoader)&lt;/code&gt;&lt;/a&gt; method. If found, the provider's &lt;a href=&quot;spi/filesystemprovider#newFileSystem(java.nio.file.Path,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem(Path, Map)&lt;/code&gt;&lt;/a&gt; method is invoked with an empty map to construct the new file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2780f49595166eb2ccf26df44113b129089ef21e" translate="yes" xml:space="preserve">
          <source>This method first attempts to locate an installed provider in exactly the same manner as the &lt;a href=&quot;filesystems#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt;&lt;/a&gt; method. If none of the installed providers support the URI scheme then an attempt is made to locate the provider using the given class loader. If a provider supporting the URI scheme is located then its &lt;a href=&quot;spi/filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt;&lt;/a&gt; is invoked to construct the new file system.</source>
          <target state="translated">このメソッドは最初に、&lt;a href=&quot;filesystems#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じ方法で、インストールされているプロバイダーを見つけようとします。インストールされているプロバイダーがいずれもURIスキームをサポートしていない場合は、指定されたクラスローダーを使用してプロバイダーを検索しようとします。URIスキームをサポートするプロバイダーが&lt;a href=&quot;spi/filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt; &lt;/a&gt;場合、そのnewFileSystem（URI、Map）が呼び出されて、新しいファイルシステムが構築されます。</target>
        </trans-unit>
        <trans-unit id="4b57f25a6b3cc623b4e2792af6b2bd96a3576eb1" translate="yes" xml:space="preserve">
          <source>This method first calls &lt;a href=&quot;#getCachedMBeanInfo()&quot;&gt;&lt;code&gt;getCachedMBeanInfo()&lt;/code&gt;&lt;/a&gt; in order to retrieve the cached MBeanInfo for this MBean, if any. If the MBeanInfo returned by &lt;a href=&quot;#getCachedMBeanInfo()&quot;&gt;&lt;code&gt;getCachedMBeanInfo()&lt;/code&gt;&lt;/a&gt; is not null, then it is returned.</source>
          <target state="translated">このメソッドは、このMBeanのキャッシュされたMBeanInfoを取得するために、最初に&lt;a href=&quot;#getCachedMBeanInfo()&quot;&gt; &lt;code&gt;getCachedMBeanInfo()&lt;/code&gt; &lt;/a&gt;を呼び出します（存在する場合）。&lt;a href=&quot;#getCachedMBeanInfo()&quot;&gt; &lt;code&gt;getCachedMBeanInfo()&lt;/code&gt; &lt;/a&gt;によって返されるMBeanInfoがnullでない場合は、それが返されます。</target>
        </trans-unit>
        <trans-unit id="1798d4617d377c84e9b80df321391c4d2c5cf3ad" translate="yes" xml:space="preserve">
          <source>This method first calls &lt;a href=&quot;standardmbean#getCachedMBeanInfo--&quot;&gt;&lt;code&gt;getCachedMBeanInfo()&lt;/code&gt;&lt;/a&gt; in order to retrieve the cached MBeanInfo for this MBean, if any. If the MBeanInfo returned by &lt;a href=&quot;standardmbean#getCachedMBeanInfo--&quot;&gt;&lt;code&gt;getCachedMBeanInfo()&lt;/code&gt;&lt;/a&gt; is not null, then it is returned.</source>
          <target state="translated">このメソッドは、最初に&lt;a href=&quot;standardmbean#getCachedMBeanInfo--&quot;&gt; &lt;code&gt;getCachedMBeanInfo()&lt;/code&gt; &lt;/a&gt;を呼び出して、このMBeanのキャッシュされたMBeanInfoがある場合はそれを取得します。&lt;a href=&quot;standardmbean#getCachedMBeanInfo--&quot;&gt; &lt;code&gt;getCachedMBeanInfo()&lt;/code&gt; &lt;/a&gt;によって返されたMBeanInfo がnullでない場合、それが返されます。</target>
        </trans-unit>
        <trans-unit id="aacc6528fa3281a8c1b599e3c3459f4fc658ba24" translate="yes" xml:space="preserve">
          <source>This method first checks if there is a security manager installed. If so, the method calls the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with the corresponding permission to ensure that the access to the image is allowed. If the connection to the specified URL requires either &lt;code&gt;URLPermission&lt;/code&gt; or &lt;code&gt;SocketPermission&lt;/code&gt;, then &lt;code&gt;URLPermission&lt;/code&gt; is used for security checks.</source>
          <target state="translated">このメソッドは、最初にセキュリティマネージャがインストールされているかどうかを確認します。その場合、このメソッドは、対応する権限を持つセキュリティマネージャの &lt;code&gt;checkPermission&lt;/code&gt; メソッドを呼び出して、イメージへのアクセスが許可されていることを確認します。指定されたURLへの接続に &lt;code&gt;URLPermission&lt;/code&gt; または &lt;code&gt;SocketPermission&lt;/code&gt; のいずれかが必要な場合、 &lt;code&gt;URLPermission&lt;/code&gt; がセキュリティチェックに使用されます。</target>
        </trans-unit>
        <trans-unit id="6ea5c4bd66873346f9b1da750d44ed4f498cb983" translate="yes" xml:space="preserve">
          <source>This method first checks if there is a security manager installed. If so, the method calls the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with the corresponding permission to ensure that the image creation is allowed. If the connection to the specified URL requires either &lt;code&gt;URLPermission&lt;/code&gt; or &lt;code&gt;SocketPermission&lt;/code&gt;, then &lt;code&gt;URLPermission&lt;/code&gt; is used for security checks.</source>
          <target state="translated">このメソッドは、最初にセキュリティマネージャがインストールされているかどうかを確認します。その場合、メソッドは対応する権限を持つセキュリティマネージャの &lt;code&gt;checkPermission&lt;/code&gt; メソッドを呼び出して、イメージの作成が許可されていることを確認します。指定されたURLへの接続に &lt;code&gt;URLPermission&lt;/code&gt; または &lt;code&gt;SocketPermission&lt;/code&gt; のいずれかが必要な場合、 &lt;code&gt;URLPermission&lt;/code&gt; がセキュリティチェックに使用されます。</target>
        </trans-unit>
        <trans-unit id="7fc6ae63d9e644ae43455c4a2af401f8eab8e485" translate="yes" xml:space="preserve">
          <source>This method first checks if there is a security manager installed. If so, the method calls the security manager's &lt;code&gt;checkRead&lt;/code&gt; method with the file specified to ensure that the access to the image is allowed.</source>
          <target state="translated">このメソッドは、最初にセキュリティマネージャがインストールされているかどうかを確認します。その場合、このメソッドは、指定されたファイルを使用してセキュリティマネージャの &lt;code&gt;checkRead&lt;/code&gt; メソッドを呼び出し、イメージへのアクセスが許可されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="69fad2dcf99744deb714415f32d488ebfd5940dd" translate="yes" xml:space="preserve">
          <source>This method first checks if there is a security manager installed. If so, the method calls the security manager's &lt;code&gt;checkRead&lt;/code&gt; method with the specified file to ensure that the image creation is allowed.</source>
          <target state="translated">このメソッドは、最初にセキュリティマネージャがインストールされているかどうかを確認します。その場合、メソッドは指定されたファイルを使用してセキュリティマネージャの &lt;code&gt;checkRead&lt;/code&gt; メソッドを呼び出し、イメージの作成が許可されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="1d1d8095176e6fb0977224ddd2f62aa734054610" translate="yes" xml:space="preserve">
          <source>This method first determines the content type of the object by calling the &lt;code&gt;getContentType&lt;/code&gt; method. If this is the first time that the application has seen that specific content type, a content handler for that content type is created.</source>
          <target state="translated">このメソッドは、最初に &lt;code&gt;getContentType&lt;/code&gt; メソッドを呼び出して、オブジェクトのコンテンツタイプを決定します。アプリケーションがその特定のコンテンツタイプを初めて確認した場合は、そのコンテンツタイプのコンテンツハンドラーが作成されます。</target>
        </trans-unit>
        <trans-unit id="59140a76baec806eb4e690ef3b6f858bd5d141de" translate="yes" xml:space="preserve">
          <source>This method first determines the content type of the object by calling the &lt;code&gt;getContentType&lt;/code&gt; method. If this is the first time that the application has seen that specific content type, a content handler for that content type is created:</source>
          <target state="translated">このメソッドは、最初に &lt;code&gt;getContentType&lt;/code&gt; メソッドを呼び出して、オブジェクトのコンテンツタイプを決定します。アプリケーションが特定のコンテンツタイプを初めて確認した場合、そのコンテンツタイプのコンテンツハンドラーが作成されます。</target>
        </trans-unit>
        <trans-unit id="76c12afd2f5682a61d6b55898ae3f3e4274be13b" translate="yes" xml:space="preserve">
          <source>This method first encodes all input bytes into a base64 encoded byte array and then constructs a new String by using the encoded byte array and the &lt;a href=&quot;../nio/charset/standardcharsets#ISO_8859_1&quot;&gt;&lt;code&gt;ISO-8859-1&lt;/code&gt;&lt;/a&gt; charset.</source>
          <target state="translated">このメソッドは、最初にすべての入力バイトをbase64エンコードされたバイト配列にエンコードしてから、エンコードされたバイト配列と&lt;a href=&quot;../nio/charset/standardcharsets#ISO_8859_1&quot;&gt; &lt;code&gt;ISO-8859-1&lt;/code&gt; &lt;/a&gt;文字セットを使用して新しい文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="428e7d1173d67880a9e00fdf54335f66d0af40dd" translate="yes" xml:space="preserve">
          <source>This method first gets a list of restricted packages by obtaining a comma-separated list from a call to &lt;code&gt;java.security.Security.getProperty(&quot;package.access&quot;)&lt;/code&gt;, and checks to see if &lt;code&gt;pkg&lt;/code&gt; starts with or equals any of the restricted packages. If it does, then &lt;code&gt;checkPermission&lt;/code&gt; gets called with the &lt;code&gt;RuntimePermission(&quot;accessClassInPackage.&quot;+pkg)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、最初に &lt;code&gt;java.security.Security.getProperty(&quot;package.access&quot;)&lt;/code&gt; の呼び出しからコンマ区切りのリストを取得することによって制限付きパッケージのリストを取得し、 &lt;code&gt;pkg&lt;/code&gt; が制限付きパッケージのいずれかで始まるか等しいかどうかを確認します。含まれている場合、 &lt;code&gt;RuntimePermission(&quot;accessClassInPackage.&quot;+pkg)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="fd34702b84494134e43e3bafa9dd777fc7c1bdd2" translate="yes" xml:space="preserve">
          <source>This method first gets a list of restricted packages by obtaining a comma-separated list from a call to &lt;code&gt;java.security.Security.getProperty(&quot;package.definition&quot;)&lt;/code&gt;, and checks to see if &lt;code&gt;pkg&lt;/code&gt; starts with or equals any of the restricted packages. If it does, then &lt;code&gt;checkPermission&lt;/code&gt; gets called with the &lt;code&gt;RuntimePermission(&quot;defineClassInPackage.&quot;+pkg)&lt;/code&gt; permission.</source>
          <target state="translated">このメソッドは、まず &lt;code&gt;java.security.Security.getProperty(&quot;package.definition&quot;)&lt;/code&gt; の呼び出しからコンマ区切りのリストを取得して制限付きパッケージのリストを取得し、 &lt;code&gt;pkg&lt;/code&gt; が制限付きパッケージのいずれかで始まるか、または等しいかどうかを確認します。存在する場合、 &lt;code&gt;checkPermission&lt;/code&gt; は &lt;code&gt;RuntimePermission(&quot;defineClassInPackage.&quot;+pkg)&lt;/code&gt; 権限で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="cc04ec3ab29b13f97c8adbca0afe5de9bb6c72b6" translate="yes" xml:space="preserve">
          <source>This method first invalidates the component hierarchy starting from this component up to the nearest validate root. Afterwards, the component hierarchy is validated starting from the nearest validate root.</source>
          <target state="translated">このメソッドはまず、このコンポーネントから最も近いバリデートルートまでのコンポーネント階層を無効にします。その後、最も近いバリデートルートから始まるコンポーネント階層が検証されます。</target>
        </trans-unit>
        <trans-unit id="f52ec93dc4e339104e0b67d6d4053a3bbfe3135a" translate="yes" xml:space="preserve">
          <source>This method first invokes the &lt;a href=&quot;virtualmachinedescriptor#provider()&quot;&gt;&lt;code&gt;provider()&lt;/code&gt;&lt;/a&gt; method of the given virtual machine descriptor to obtain the attach provider. It then invokes the attach provider's &lt;a href=&quot;spi/attachprovider#attachVirtualMachine(com.sun.tools.attach.VirtualMachineDescriptor)&quot;&gt;&lt;code&gt;attachVirtualMachine&lt;/code&gt;&lt;/a&gt; to attach to the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="730855207dd47a9c40665bc4aefc8a6ed4d9f4ff" translate="yes" xml:space="preserve">
          <source>This method first looks up the &lt;code&gt;ActionMap&lt;/code&gt; from the defaults using the key &lt;code&gt;&quot;AuditoryCues.actionMap&quot;&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、最初にキー &lt;code&gt;&quot;AuditoryCues.actionMap&quot;&lt;/code&gt; を使用してデフォルトから &lt;code&gt;ActionMap&lt;/code&gt; を検索します。</target>
        </trans-unit>
        <trans-unit id="d4200ececcafa704647a20c671eb7acf0f0a9be1" translate="yes" xml:space="preserve">
          <source>This method first registers an activation descriptor for the specified object as follows. It obtains the activation system by invoking the method &lt;a href=&quot;activationgroup#getSystem()&quot;&gt;&lt;code&gt;ActivationGroup.getSystem&lt;/code&gt;&lt;/a&gt;. This method then obtains an &lt;a href=&quot;activationid&quot;&gt;&lt;code&gt;ActivationID&lt;/code&gt;&lt;/a&gt; for the object by invoking the activation system's &lt;a href=&quot;activationsystem#registerObject(java.rmi.activation.ActivationDesc)&quot;&gt;&lt;code&gt;registerObject&lt;/code&gt;&lt;/a&gt; method with an &lt;a href=&quot;activationdesc&quot;&gt;&lt;code&gt;ActivationDesc&lt;/code&gt;&lt;/a&gt; constructed with the specified object's class name, and the specified location, data, and restart mode. If an exception occurs obtaining the activation system or registering the activation descriptor, that exception is thrown to the caller.</source>
          <target state="translated">このメソッドは、最初に次のように指定されたオブジェクトのアクティベーション記述子を登録します。メソッド&lt;a href=&quot;activationgroup#getSystem()&quot;&gt; &lt;code&gt;ActivationGroup.getSystem&lt;/code&gt; &lt;/a&gt;を呼び出すことにより、アクティベーションシステムを取得します。次に、このメソッドは、指定されたオブジェクトのクラス名、指定された場所、データ、および再起動モードで構築された&lt;a href=&quot;activationdesc&quot;&gt; &lt;code&gt;ActivationDesc&lt;/code&gt; を&lt;/a&gt;使用してアクティベーションシステムの&lt;a href=&quot;activationsystem#registerObject(java.rmi.activation.ActivationDesc)&quot;&gt; &lt;code&gt;registerObject&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、オブジェクトの&lt;a href=&quot;activationid&quot;&gt; &lt;code&gt;ActivationID&lt;/code&gt; &lt;/a&gt;を取得します。アクティベーションシステムの取得またはアクティベーション記述子の登録で例外が発生した場合、その例外は呼び出し元にスローされます。</target>
        </trans-unit>
        <trans-unit id="d410430eeea2cb1c0a2ca1eba6bb4f828fcf9548" translate="yes" xml:space="preserve">
          <source>This method first resets this matcher. It then scans the input sequence looking for a match of the pattern. Characters that are not part of the match are appended directly to the result string; the match is replaced in the result by the applying the replacer function that returns a replacement string. The replacement string may contain references to captured subsequences as in the &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、最初にこのマッチャーをリセットします。次に、入力シーケンスをスキャンして、パターンの一致を探します。一致の一部ではない文字は、結果の文字列に直接追加されます。一致は、置換文字列を返す置換関数を適用することによって結果で置換されます。置換文字列には、&lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt;メソッドのように、キャプチャされたサブシーケンスへの参照が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="168d8133a872f0f2f16a18d76149ac6cc6c27d1a" translate="yes" xml:space="preserve">
          <source>This method first resets this matcher. It then scans the input sequence looking for a match of the pattern. Characters that are not part of the match are appended directly to the result string; the match is replaced in the result by the replacement string. The replacement string may contain references to captured subsequences as in the &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、最初にこのマッチャーをリセットします。次に、入力シーケンスをスキャンして、パターンの一致を探します。一致の一部ではない文字は、結果の文字列に直接追加されます。一致は、結果で置換文字列に置き換えられます。置換文字列には、&lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt;メソッドのように、キャプチャされたサブシーケンスへの参照が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="dee20129dc59e859025bd28928a1b166bb308aac" translate="yes" xml:space="preserve">
          <source>This method first resets this matcher. It then scans the input sequence looking for a match of the pattern. Characters that are not part of the match are appended directly to the result string; the match is replaced in the result by the replacement string. The replacement string may contain references to captured subsequences as in the &lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは最初にこの正規表現エンジンをリセットします。次に、入力シーケンスをスキャンして、パターンの一致を探します。一致の一部ではない文字は、結果の文字列に直接追加されます。結果の一致は置換文字列に置き換えられます。置換文字列には、&lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt;メソッドのように、キャプチャされたサブシーケンスへの参照を含めることができます。</target>
        </trans-unit>
        <trans-unit id="32a24529079404af9aa0856c5c0c11cb502ea26b" translate="yes" xml:space="preserve">
          <source>This method first resets this matcher. It then scans the input sequence looking for matches of the pattern. Characters that are not part of any match are appended directly to the result string; each match is replaced in the result by the applying the replacer function that returns a replacement string. Each replacement string may contain references to captured subsequences as in the &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、最初にこのマッチャーをリセットします。次に、入力シーケンスをスキャンして、パターンの一致を探します。一致の一部ではない文字は、結果の文字列に直接追加されます。結果の各一致は、置換文字列を返す置換関数を適用することによって置換されます。各置換文字列には、&lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt;メソッドのように、キャプチャされたサブシーケンスへの参照が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="9d887e5ee337e27333e8a38810e9f71beaff22c1" translate="yes" xml:space="preserve">
          <source>This method first resets this matcher. It then scans the input sequence looking for matches of the pattern. Characters that are not part of any match are appended directly to the result string; each match is replaced in the result by the replacement string. The replacement string may contain references to captured subsequences as in the &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、最初にこのマッチャーをリセットします。次に、入力シーケンスをスキャンして、パターンの一致を探します。一致の一部ではない文字は、結果の文字列に直接追加されます。結果の各一致は、置換文字列に置き換えられます。置換文字列には、&lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt;メソッドのように、キャプチャされたサブシーケンスへの参照が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="26f6cb3387c41fe104f31644a6b216b8ba0d8140" translate="yes" xml:space="preserve">
          <source>This method first resets this matcher. It then scans the input sequence looking for matches of the pattern. Characters that are not part of any match are appended directly to the result string; each match is replaced in the result by the replacement string. The replacement string may contain references to captured subsequences as in the &lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは最初にこの正規表現エンジンをリセットします。次に、入力シーケンスをスキャンして、パターンの一致を探します。一致の一部ではない文字は、結果の文字列に直接追加されます。結果の各一致は、置換文字列に置き換えられます。置換文字列には、&lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt;メソッドのように、キャプチャされたサブシーケンスへの参照を含めることができます。</target>
        </trans-unit>
        <trans-unit id="454b55b13454df1ffb7a9f545d399b9998fbac9f" translate="yes" xml:space="preserve">
          <source>This method first retrieves the current Thread's &lt;code&gt;AccessControlContext&lt;/code&gt; via &lt;code&gt;AccessController.getContext&lt;/code&gt;, and then instantiates a new &lt;code&gt;AccessControlContext&lt;/code&gt; using the retrieved context along with a new &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; (constructed using the provided &lt;code&gt;Subject&lt;/code&gt;). Finally, this method invokes &lt;code&gt;AccessController.doPrivileged&lt;/code&gt;, passing it the provided &lt;code&gt;PrivilegedAction&lt;/code&gt;, as well as the newly constructed &lt;code&gt;AccessControlContext&lt;/code&gt;.</source>
          <target state="translated">この方法は、最初に、現在のスレッドの取得し &lt;code&gt;AccessControlContext&lt;/code&gt; 介し &lt;code&gt;AccessController.getContext&lt;/code&gt; し、新しいインスタンス &lt;code&gt;AccessControlContext&lt;/code&gt; 新しいと共に検索コンテクストを使用 &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; に（提供用いて構築 &lt;code&gt;Subject&lt;/code&gt; ）。最後に、このメソッドは &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; を呼び出し、提供された &lt;code&gt;PrivilegedAction&lt;/code&gt; と新しく構築された &lt;code&gt;AccessControlContext&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="37b325e60cde38d418deb1d8e962ea5c6de2a359" translate="yes" xml:space="preserve">
          <source>This method first retrieves the current Thread's &lt;code&gt;AccessControlContext&lt;/code&gt; via &lt;code&gt;AccessController.getContext&lt;/code&gt;, and then instantiates a new &lt;code&gt;AccessControlContext&lt;/code&gt; using the retrieved context along with a new &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; (constructed using the provided &lt;code&gt;Subject&lt;/code&gt;). Finally, this method invokes &lt;code&gt;AccessController.doPrivileged&lt;/code&gt;, passing it the provided &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt;, as well as the newly constructed &lt;code&gt;AccessControlContext&lt;/code&gt;.</source>
          <target state="translated">この方法は、最初に、現在のスレッドの取得し &lt;code&gt;AccessControlContext&lt;/code&gt; 介し &lt;code&gt;AccessController.getContext&lt;/code&gt; し、新しいインスタンス &lt;code&gt;AccessControlContext&lt;/code&gt; 新しいと共に検索コンテクストを使用 &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; に（提供用いて構築 &lt;code&gt;Subject&lt;/code&gt; ）。最後に、このメソッドは &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; を呼び出し、提供された &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; と新しく構築された &lt;code&gt;AccessControlContext&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="3721220fa080e7d6464d6c7eb00c8b6d61b5f653" translate="yes" xml:space="preserve">
          <source>This method first verifies that this channel is open and that the given initial interest set is valid.</source>
          <target state="translated">このメソッドは、まず、このチャネルが開いていること、および与えられた初期関心セットが有効であることを検証します。</target>
        </trans-unit>
        <trans-unit id="7d0c6e67c905619f3119435a65c48ff048cc99c1" translate="yes" xml:space="preserve">
          <source>This method follows symbolic links if the file referenced by this object is a symbolic link. Depending on the implementation, this method may require to read file permissions, access control lists, or other file attributes in order to check the effective access to the file. To determine the effective access to a file may require access to several attributes and so in some implementations this method may not be atomic with respect to other file system operations.</source>
          <target state="translated">このメソッドは、このオブジェクトが参照するファイルがシンボリックリンクである場合、シンボリックリンクに従います。実装によっては、このメソッドは、ファイルへの有効なアクセスを確認するために、ファイルのパーミッション、アクセス制御リスト、または他のファイル属性を読み取る必要があるかもしれません。ファイルへの有効なアクセスを決定するためには、複数の属性へのアクセスが必要となる場合があるため、実装によっては、このメソッドは他のファイルシステム操作との関連でアトミックではない場合があります。</target>
        </trans-unit>
        <trans-unit id="3d054a9d374ac852644bb34d3645f826a25d06c4" translate="yes" xml:space="preserve">
          <source>This method follows the inheritance rules specified in the JLS (8.4.6) to determine visibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9416a62f512b9426d755bc916a71a8cb0c92c819" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;Array&lt;/code&gt; object and releases the resources that it holds.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;Array&lt;/code&gt; オブジェクトを解放し、保持しているリソースを解放します。</target>
        </trans-unit>
        <trans-unit id="bb29629cc3555edadfbf5a28ef80d4ae1f2bd6af" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;Array&lt;/code&gt; object and releases the resources that it holds. The object is invalid once the &lt;code&gt;free&lt;/code&gt; method is called.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;Array&lt;/code&gt; オブジェクトを解放し、保持しているリソースを解放します。 &lt;code&gt;free&lt;/code&gt; メソッドが呼び出されると、オブジェクトは無効になります。</target>
        </trans-unit>
        <trans-unit id="72ff3e6bcbf8666ac1344549049e7307f3dea02c" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;Blob&lt;/code&gt; object and releases the resources that it holds.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;Blob&lt;/code&gt; オブジェクトを解放し、保持しているリソースを解放します。</target>
        </trans-unit>
        <trans-unit id="35b690bde0d7c9dc42755353da794ebab895463f" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;Blob&lt;/code&gt; object and releases the resources that it holds. The object is invalid once the &lt;code&gt;free&lt;/code&gt; method is called.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;Blob&lt;/code&gt; オブジェクトを解放し、保持しているリソースを解放します。 &lt;code&gt;free&lt;/code&gt; メソッドが呼び出されると、オブジェクトは無効になります。</target>
        </trans-unit>
        <trans-unit id="f5b5f113b1ad563ea7d422b246c369b06c0ff043" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;SerialArray&lt;/code&gt; object and releases the resources that it holds.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;SerialArray&lt;/code&gt; オブジェクトを解放し、保持しているリソースを解放します。</target>
        </trans-unit>
        <trans-unit id="42c2c633c39322de9e165220b32376e593114ddf" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;SerialArray&lt;/code&gt; object and releases the resources that it holds. The object is invalid once the &lt;code&gt;free&lt;/code&gt; method is called.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;SerialArray&lt;/code&gt; オブジェクトを解放し、保持しているリソースを解放します。 &lt;code&gt;free&lt;/code&gt; メソッドが呼び出されると、オブジェクトは無効になります。</target>
        </trans-unit>
        <trans-unit id="2d647c1e3b28cde29410f634b69775c381d37eff" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;SerialBlob&lt;/code&gt; object and releases the resources that it holds.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;SerialBlob&lt;/code&gt; オブジェクトを解放し、保持しているリソースを解放します。</target>
        </trans-unit>
        <trans-unit id="3a6692ec888fc11d0f4a4d2eff35fbbf5a492ff6" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;SerialBlob&lt;/code&gt; object and releases the resources that it holds. The object is invalid once the &lt;code&gt;free&lt;/code&gt; method is called.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;SerialBlob&lt;/code&gt; オブジェクトを解放し、保持しているリソースを解放します。 &lt;code&gt;free&lt;/code&gt; メソッドが呼び出されると、オブジェクトは無効になります。</target>
        </trans-unit>
        <trans-unit id="fcd04518ff752369fda70b73ccfaf40f93448232" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;SerialClob&lt;/code&gt; object and releases the resources that it holds.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;SerialClob&lt;/code&gt; オブジェクトを解放し、保持しているリソースを解放します。</target>
        </trans-unit>
        <trans-unit id="6ed7b7277d94d3e61bdc0faf46ad15eebcac6272" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;SerialClob&lt;/code&gt; object and releases the resources that it holds. The object is invalid once the &lt;code&gt;free&lt;/code&gt; method is called.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;SerialClob&lt;/code&gt; オブジェクトを解放し、保持しているリソースを解放します。 &lt;code&gt;free&lt;/code&gt; メソッドが呼び出されると、オブジェクトは無効になります。</target>
        </trans-unit>
        <trans-unit id="b8e24bd7fc6343edc5e4b4c35d09f073ad5899c8" translate="yes" xml:space="preserve">
          <source>This method generally cannot be called to determine whether a connection to a database is valid or invalid. A typical client can determine that a connection is invalid by catching any exceptions that might be thrown when an operation is attempted.</source>
          <target state="translated">このメソッドは通常、データベースへの接続が有効か無効かを判断するために呼び出すことはできません。典型的なクライアントは、操作が試みられたときにスローされる可能性のある例外をキャッチすることで、接続が無効であることを判断することができます。</target>
        </trans-unit>
        <trans-unit id="2f4a455b4a0884cb4ca36d968f9c39ac863c667d" translate="yes" xml:space="preserve">
          <source>This method gets called every time when a rollover column in the table header is updated.</source>
          <target state="translated">このメソッドは、テーブルヘッダのロールオーバー列が更新されるたびに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="716689e661d3bd42f8f76a4094f93e53ebf0f2a9" translate="yes" xml:space="preserve">
          <source>This method gets called every time when a rollover column in the table header is updated. Every look and feel that supports a rollover effect in a table header should override this method and repaint the header.</source>
          <target state="translated">このメソッドはテーブルヘッダーのロールオーバーカラムが更新されるたびに呼び出されます。テーブルヘッダでロールオーバー効果をサポートしているすべてのルックアンドフィールは、このメソッドをオーバーライドしてヘッダを再描画しなければなりません。</target>
        </trans-unit>
        <trans-unit id="1ed696dd767146112c705a208dd3d445c09cc20a" translate="yes" xml:space="preserve">
          <source>This method gets called when a bound property is changed on the associated JTextComponent.</source>
          <target state="translated">このメソッドは、関連付けられたJTextComponentのバインドされたプロパティが変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f67870623db01abf4133046b5a9aab58f5364e1d" translate="yes" xml:space="preserve">
          <source>This method gets called when a bound property is changed on the associated JTextComponent. This is a hook which UI implementations may change to reflect how the UI displays bound properties of JTextComponent subclasses.</source>
          <target state="translated">このメソッドは、関連する JTextComponent のバインドプロパティが変更されたときに呼び出されます。これは、UI の実装が JTextComponent サブクラスのバインドされたプロパティの表示方法を反映させるために変更される可能性のあるフックです。</target>
        </trans-unit>
        <trans-unit id="3e845d79d662dcf6885270d2d8f70170cec96f62" translate="yes" xml:space="preserve">
          <source>This method gets called when a bound property is changed on the associated JTextComponent. This is a hook which UI implementations may change to reflect how the UI displays bound properties of JTextComponent subclasses. If the font, foreground or document has changed, the the appropriate property is set in the default style of the document.</source>
          <target state="translated">このメソッドは、関連する JTextComponent のバインドプロパティが変更されたときに呼び出されます。これは、UI の実装が JTextComponent サブクラスのバインドされたプロパティの表示方法を反映させるために変更する可能性のあるフックです。フォント、前景、ドキュメントのいずれかが変更された場合、適切なプロパティがドキュメントのデフォルトスタイルに設定されます。</target>
        </trans-unit>
        <trans-unit id="3ef43e46063d331cbfaf4b18ae2273343f2a2666" translate="yes" xml:space="preserve">
          <source>This method gets called when a bound property is changed on the associated JTextComponent. This is a hook which UI implementations may change to reflect how the UI displays bound properties of JTextComponent subclasses. This is implemented to do nothing (i.e. the response to properties in JTextComponent itself are handled prior to calling this method).</source>
          <target state="translated">このメソッドは、関連する JTextComponent のバインドプロパティが変更されたときに呼び出されます。これは、UI の実装が JTextComponent サブクラスのバインドされたプロパティの表示方法を反映させるために変更する可能性のあるフックです。これは何もしないように実装されています(つまり、JTextComponent 自体のプロパティに対するレスポンスは、このメソッドを呼び出す前に処理されます)。</target>
        </trans-unit>
        <trans-unit id="8b7b7c32e05929899e4bbf10e34641cb170273cd" translate="yes" xml:space="preserve">
          <source>This method gets called when a bound property is changed on the associated JTextComponent. This is a hook which UI implementations may change to reflect how the UI displays bound properties of JTextComponent subclasses. This is implemented to do nothing (i.e. the response to properties in JTextComponent itself are handled prior to calling this method). This implementation updates the background of the text component if the editable and/or enabled state changes.</source>
          <target state="translated">このメソッドは、関連する JTextComponent のバインドプロパティが変更されたときに呼び出されます。これは、UI の実装が JTextComponent サブクラスのバインドされたプロパティの表示方法を反映させるために変更する可能性のあるフックです。これは何もしないように実装されています(すなわち、JTextComponent 自体のプロパティへの応答は、このメソッドを呼び出す前に処理されます)。この実装は、編集可能な状態および/または有効化された状態が変化した場合、テキストコンポーネントの背景を更新します。</target>
        </trans-unit>
        <trans-unit id="0b3f899917d4222f21426921a11e9b94ecea8d90" translate="yes" xml:space="preserve">
          <source>This method gets called when a bound property is changed on the associated JTextComponent. This is a hook which UI implementations may change to reflect how the UI displays bound properties of JTextComponent subclasses. This is implemented to rebuild the ActionMap based upon an EditorKit change.</source>
          <target state="translated">このメソッドは、関連する JTextComponent のバインドプロパティが変更されたときに呼び出されます。これは、UI の実装が JTextComponent サブクラスのバインドされたプロパティの表示方法を反映させるために変更される可能性のあるフックです。これは、EditorKit の変更に基づいて ActionMap を再構築するために実装されています。</target>
        </trans-unit>
        <trans-unit id="5e8e43d425fb2b3f8d855c57cd9179f81cadec8e" translate="yes" xml:space="preserve">
          <source>This method gets called when a bound property is changed on the associated JTextComponent. This is a hook which UI implementations may change to reflect how the UI displays bound properties of JTextComponent subclasses. This is implemented to rebuild the View when the &lt;em&gt;WrapLine&lt;/em&gt; or the &lt;em&gt;WrapStyleWord&lt;/em&gt; property changes.</source>
          <target state="translated">このメソッドは、関連付けられたJTextComponentでバインドされたプロパティが変更されたときに呼び出されます。これは、UIがJTextComponentサブクラスのバインドされたプロパティを表示する方法を反映するためにUI実装が変更される可能性があるフックです。これは、&lt;em&gt;WrapLine&lt;/em&gt;または&lt;em&gt;WrapStyleWord&lt;/em&gt;プロパティが変更されたときにビューを再構築するために実装されています。</target>
        </trans-unit>
        <trans-unit id="d162285c691fe9ba58164f60c01d1f90afda5b8d" translate="yes" xml:space="preserve">
          <source>This method gets called when a bound property is changed.</source>
          <target state="translated">このメソッドは、バインドされたプロパティが変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e0a919a268cd80181fb6acbf66f00fc444540914" translate="yes" xml:space="preserve">
          <source>This method gets called when a child node is added.</source>
          <target state="translated">このメソッドは、子ノードが追加されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="fd9efef61dcaca2310dfb7656d4109520bd8413f" translate="yes" xml:space="preserve">
          <source>This method gets called when a child node is removed.</source>
          <target state="translated">このメソッドは、子ノードが削除されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c696073c099d1d3c7484136336e5c0f85bdff14b" translate="yes" xml:space="preserve">
          <source>This method gets called when a constrained property is changed.</source>
          <target state="translated">このメソッドは、制約付きプロパティが変更されたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2fd1ac397c8871de42362b11036ea73cbe290206" translate="yes" xml:space="preserve">
          <source>This method gets called when a preference is added, removed or when its value is changed.</source>
          <target state="translated">このメソッドは、プリファレンスが追加されたり削除されたり、値が変更されたりしたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="67c4b16e7a8f74ea8d858a0e27a6e8073b85e3c6" translate="yes" xml:space="preserve">
          <source>This method gives flow strategies access to the logical view of the FlowView.</source>
          <target state="translated">このメソッドは、フロー戦略がFlowViewの論理ビューにアクセスできるようにします。</target>
        </trans-unit>
        <trans-unit id="207eb5b964d32ee5e893b2d65f22257f9a8977ea" translate="yes" xml:space="preserve">
          <source>This method has been deprecated because it returns an instance of XMLInputFactory, which is of the wrong class.</source>
          <target state="translated">このメソッドは、間違ったクラスのXMLInputFactoryのインスタンスを返すため、このメソッドは非推奨となりました。</target>
        </trans-unit>
        <trans-unit id="14510be1a54f84764142cf23fd501ffc2bf126d7" translate="yes" xml:space="preserve">
          <source>This method has been deprecated because it returns an instance of XMLInputFactory, which is of the wrong class. Use the new method &lt;a href=&quot;#newFactory(java.lang.String,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;newFactory(java.lang.String,
              java.lang.ClassLoader)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">このメソッドは、間違ったクラスのXMLInputFactoryのインスタンスを返すため、非推奨になりました。代わりに、新しいメソッド&lt;a href=&quot;#newFactory(java.lang.String,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;newFactory(java.lang.String, java.lang.ClassLoader)&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="6b6eadd6ed5abe62940d217f1edc699a08051a61" translate="yes" xml:space="preserve">
          <source>This method has been deprecated to maintain API consistency.</source>
          <target state="translated">このメソッドはAPIの一貫性を維持するために非推奨となりました。</target>
        </trans-unit>
        <trans-unit id="2587168806a67ba083e4360aee6c340c1058a892" translate="yes" xml:space="preserve">
          <source>This method has been deprecated to maintain API consistency. All newInstance methods have been replaced with corresponding newFactory methods. The replacement &lt;a href=&quot;#newFactory(java.lang.String,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;newFactory(java.lang.String, java.lang.ClassLoader)&lt;/code&gt;&lt;/a&gt; method defines no changes in behavior.</source>
          <target state="translated">このメソッドは、APIの一貫性を維持するために非推奨になりました。すべてのnewInstanceメソッドは、対応するnewFactoryメソッドに置き換えられました。置換された&lt;a href=&quot;#newFactory(java.lang.String,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;newFactory(java.lang.String, java.lang.ClassLoader)&lt;/code&gt; &lt;/a&gt;メソッドは、動作の変更を定義しません。</target>
        </trans-unit>
        <trans-unit id="a1dcc62600f89ce19ff9bcfc62fa01450510f5c4" translate="yes" xml:space="preserve">
          <source>This method has been deprecated, as it is inherently deadlock-prone.</source>
          <target state="translated">このメソッドは本質的にデッドロックを起こしやすいため、非推奨とされています。</target>
        </trans-unit>
        <trans-unit id="2d373e87d490f98aee9a6b4780b2e36e033add7d" translate="yes" xml:space="preserve">
          <source>This method has been deprecated, as it is inherently deadlock-prone. If the target thread holds a lock on the monitor protecting a critical system resource when it is suspended, no thread can access this resource until the target thread is resumed. If the thread that would resume the target thread attempts to lock this monitor prior to calling &lt;code&gt;resume&lt;/code&gt;, deadlock results. Such deadlocks typically manifest themselves as &quot;frozen&quot; processes. For more information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html&quot;&gt;Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?&lt;/a&gt;.</source>
          <target state="translated">このメソッドは本質的にデッドロックが発生しやすいため、非推奨になりました。ターゲットスレッドが一時停止時に重要なシステムリソースを保護するモニターのロックを保持している場合、ターゲットスレッドが再開されるまで、スレッドはこのリソースにアクセスできません。ターゲット・スレッドの試みを再開するスレッドが呼び出す前にこのモニターロックした場合は &lt;code&gt;resume&lt;/code&gt; 、デッドロックの結果を。このようなデッドロックは通常、「凍結された」プロセスとして現れます。詳細については、「&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html&quot;&gt;Thread.stop、Thread.suspend、およびThread.resumeが非推奨になる理由&lt;/a&gt;」を参照してください。。</target>
        </trans-unit>
        <trans-unit id="282d6631d38a2c85b88b01772c0def013d1c5892" translate="yes" xml:space="preserve">
          <source>This method has been deprecated, as it is inherently deadlock-prone. If the target thread holds a lock on the monitor protecting a critical system resource when it is suspended, no thread can access this resource until the target thread is resumed. If the thread that would resume the target thread attempts to lock this monitor prior to calling &lt;code&gt;resume&lt;/code&gt;, deadlock results. Such deadlocks typically manifest themselves as &quot;frozen&quot; processes. For more information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html&quot;&gt;Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c38da1a7f1377b16091a41f41b36de52baa5fc8" translate="yes" xml:space="preserve">
          <source>This method has been superseded by the &lt;a href=&quot;#acquiredBy()&quot;&gt;&lt;code&gt;acquiredBy&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#acquiredBy()&quot;&gt; &lt;code&gt;acquiredBy&lt;/code&gt; &lt;/a&gt;メソッドに置き換えられました。</target>
        </trans-unit>
        <trans-unit id="9c6bfc3827438059a1a5628710ed9ab1b5dbd71f" translate="yes" xml:space="preserve">
          <source>This method has been superseded by the &lt;a href=&quot;filelock#acquiredBy--&quot;&gt;&lt;code&gt;acquiredBy&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;filelock#acquiredBy--&quot;&gt; &lt;code&gt;acquiredBy&lt;/code&gt; &lt;/a&gt;メソッドに置き換えられました。</target>
        </trans-unit>
        <trans-unit id="4df9de07317ceff1a8210df7d20f82d08d221595" translate="yes" xml:space="preserve">
          <source>This method has no effect if the package is already &lt;em&gt;open&lt;/em&gt; to the given module.</source>
          <target state="translated">パッケージが特定のモジュールに対してすでに&lt;em&gt;開か&lt;/em&gt;れて&lt;em&gt;いる&lt;/em&gt;場合、このメソッドは効果がありません。</target>
        </trans-unit>
        <trans-unit id="be48bab8316d91d535d99ea1285afc6f957304f5" translate="yes" xml:space="preserve">
          <source>This method has no effect if the package is already exported (or &lt;em&gt;open&lt;/em&gt;) to the given module.</source>
          <target state="translated">パッケージが指定されたモジュールにすでにエクスポートされている（または&lt;em&gt;開いている&lt;/em&gt;）場合、このメソッドは効果がありません。</target>
        </trans-unit>
        <trans-unit id="46656d29a1828add6efcdcf82ec4862c8f694eca" translate="yes" xml:space="preserve">
          <source>This method has no effect when the application provides a character stream.</source>
          <target state="translated">このメソッドは、アプリケーションが文字ストリームを提供する場合には効果がありません。</target>
        </trans-unit>
        <trans-unit id="634a3cfad53091bd832c4037a77d7a8811ca13ad" translate="yes" xml:space="preserve">
          <source>This method has no effect.</source>
          <target state="translated">この方法では効果がありません。</target>
        </trans-unit>
        <trans-unit id="38b5307892f13307c213bad78d134b69a08c9113" translate="yes" xml:space="preserve">
          <source>This method has no effect. The MBean Server used to obtain an attribute value is &lt;a href=&quot;queryeval#getMBeanServer()&quot;&gt;&lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この方法は効果がありません。属性値の取得に使用されるMBeanサーバーは&lt;a href=&quot;queryeval#getMBeanServer()&quot;&gt; &lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="e4c532ad9046d663b2d9ca41898a698ec54f6f23" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(V,V)&quot;&gt;&lt;code&gt;compareAndExchange(V, V)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(V,V)&quot;&gt;&lt;code&gt;compareAndSet(V, V)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このメソッドには単純なメモリ効果がありますが、メソッド名は揮発性メモリ効果を意味します（&lt;a href=&quot;#compareAndExchange(V,V)&quot;&gt; &lt;code&gt;compareAndExchange(V, V)&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#compareAndSet(V,V)&quot;&gt; &lt;code&gt;compareAndSet(V, V)&lt;/code&gt; &lt;/a&gt;などのメソッドを参照）。</target>
        </trans-unit>
        <trans-unit id="cd02e49d4de525cd43027c0a8b9d741a85ba2405" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(V,V)&quot;&gt;&lt;code&gt;compareAndExchange(V, V)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(V,V)&quot;&gt;&lt;code&gt;compareAndSet(V, V)&lt;/code&gt;&lt;/a&gt;). To avoid confusion over plain or volatile memory effects it is recommended that the method &lt;a href=&quot;#weakCompareAndSetPlain(V,V)&quot;&gt;&lt;code&gt;weakCompareAndSetPlain(V, V)&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">このメソッドには単純なメモリ効果がありますが、メソッド名は揮発性メモリ効果を意味します（&lt;a href=&quot;#compareAndExchange(V,V)&quot;&gt; &lt;code&gt;compareAndExchange(V, V)&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#compareAndSet(V,V)&quot;&gt; &lt;code&gt;compareAndSet(V, V)&lt;/code&gt; &lt;/a&gt;などのメソッドを参照）。プレーンメモリまたは揮発性メモリの影響に関する混乱を避けるために、代わりにメソッド&lt;a href=&quot;#weakCompareAndSetPlain(V,V)&quot;&gt; &lt;code&gt;weakCompareAndSetPlain(V, V)&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="0ae439f4ad31d44319933a43ae29db25bc1b0dc1" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(boolean,boolean)&quot;&gt;&lt;code&gt;compareAndExchange(boolean, boolean)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(boolean,boolean)&quot;&gt;&lt;code&gt;compareAndSet(boolean, boolean)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このメソッドには単純なメモリ効果がありますが、メソッド名は揮発性メモリ効果を意味します（&lt;a href=&quot;#compareAndExchange(boolean,boolean)&quot;&gt; &lt;code&gt;compareAndExchange(boolean, boolean)&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#compareAndSet(boolean,boolean)&quot;&gt; &lt;code&gt;compareAndSet(boolean, boolean)&lt;/code&gt; &lt;/a&gt;などのメソッドを参照）。</target>
        </trans-unit>
        <trans-unit id="2fcdc40f63d235c2adea02680e759e172b3acffd" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(boolean,boolean)&quot;&gt;&lt;code&gt;compareAndExchange(boolean, boolean)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(boolean,boolean)&quot;&gt;&lt;code&gt;compareAndSet(boolean, boolean)&lt;/code&gt;&lt;/a&gt;). To avoid confusion over plain or volatile memory effects it is recommended that the method &lt;a href=&quot;#weakCompareAndSetPlain(boolean,boolean)&quot;&gt;&lt;code&gt;weakCompareAndSetPlain(boolean, boolean)&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">このメソッドには単純なメモリ効果がありますが、メソッド名は揮発性メモリ効果を意味します（&lt;a href=&quot;#compareAndExchange(boolean,boolean)&quot;&gt; &lt;code&gt;compareAndExchange(boolean, boolean)&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#compareAndSet(boolean,boolean)&quot;&gt; &lt;code&gt;compareAndSet(boolean, boolean)&lt;/code&gt; &lt;/a&gt;などのメソッドを参照）。プレーンメモリまたは揮発性メモリの影響に関する混乱を避けるために、代わりにメソッド&lt;a href=&quot;#weakCompareAndSetPlain(boolean,boolean)&quot;&gt; &lt;code&gt;weakCompareAndSetPlain(boolean, boolean)&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a6a296b61d02a14af7deae2e4981e9236f2d70b8" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(int,E,E)&quot;&gt;&lt;code&gt;compareAndExchange(int, E, E)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(int,E,E)&quot;&gt;&lt;code&gt;compareAndSet(int, E, E)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このメソッドには単純なメモリ効果がありますが、メソッド名は揮発性メモリ効果を意味します（&lt;a href=&quot;#compareAndExchange(int,E,E)&quot;&gt; &lt;code&gt;compareAndExchange(int, E, E)&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#compareAndSet(int,E,E)&quot;&gt; &lt;code&gt;compareAndSet(int, E, E)&lt;/code&gt; &lt;/a&gt;などのメソッドを参照）。</target>
        </trans-unit>
        <trans-unit id="ee7abc334b2d55e1f51e4501ea8e975ae11a24b2" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(int,E,E)&quot;&gt;&lt;code&gt;compareAndExchange(int, E, E)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(int,E,E)&quot;&gt;&lt;code&gt;compareAndSet(int, E, E)&lt;/code&gt;&lt;/a&gt;). To avoid confusion over plain or volatile memory effects it is recommended that the method &lt;a href=&quot;#weakCompareAndSetPlain(int,E,E)&quot;&gt;&lt;code&gt;weakCompareAndSetPlain(int, E, E)&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">このメソッドには単純なメモリ効果がありますが、メソッド名は揮発性メモリ効果を意味します（&lt;a href=&quot;#compareAndExchange(int,E,E)&quot;&gt; &lt;code&gt;compareAndExchange(int, E, E)&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#compareAndSet(int,E,E)&quot;&gt; &lt;code&gt;compareAndSet(int, E, E)&lt;/code&gt; &lt;/a&gt;などのメソッドを参照）。プレーンメモリまたは揮発性メモリの影響に関する混乱を避けるために、代わりにメソッド&lt;a href=&quot;#weakCompareAndSetPlain(int,E,E)&quot;&gt; &lt;code&gt;weakCompareAndSetPlain(int, E, E)&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="b0ddf0c94c32a133090d344b5fccc21d6d78d2b8" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(int,int)&quot;&gt;&lt;code&gt;compareAndExchange(int, int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(int,int)&quot;&gt;&lt;code&gt;compareAndSet(int, int)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このメソッドには単純なメモリ効果がありますが、メソッド名は揮発性メモリ効果を意味します（&lt;a href=&quot;#compareAndExchange(int,int)&quot;&gt; &lt;code&gt;compareAndExchange(int, int)&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#compareAndSet(int,int)&quot;&gt; &lt;code&gt;compareAndSet(int, int)&lt;/code&gt; &lt;/a&gt;などのメソッドを参照）。</target>
        </trans-unit>
        <trans-unit id="c90d91ede833ec79934e330c75e6883f865b60cf" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(int,int)&quot;&gt;&lt;code&gt;compareAndExchange(int, int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(int,int)&quot;&gt;&lt;code&gt;compareAndSet(int, int)&lt;/code&gt;&lt;/a&gt;). To avoid confusion over plain or volatile memory effects it is recommended that the method &lt;a href=&quot;#weakCompareAndSetPlain(int,int)&quot;&gt;&lt;code&gt;weakCompareAndSetPlain(int, int)&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">このメソッドには単純なメモリ効果がありますが、メソッド名は揮発性メモリ効果を意味します（&lt;a href=&quot;#compareAndExchange(int,int)&quot;&gt; &lt;code&gt;compareAndExchange(int, int)&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#compareAndSet(int,int)&quot;&gt; &lt;code&gt;compareAndSet(int, int)&lt;/code&gt; &lt;/a&gt;などのメソッドを参照）。プレーンメモリまたは揮発性メモリの影響に関する混乱を避けるために、代わりにメソッド&lt;a href=&quot;#weakCompareAndSetPlain(int,int)&quot;&gt; &lt;code&gt;weakCompareAndSetPlain(int, int)&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="76a9c475b9ff989879bf4bdcb38c6d59bb82a20d" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(int,int,int)&quot;&gt;&lt;code&gt;compareAndExchange(int, int, int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(int,int,int)&quot;&gt;&lt;code&gt;compareAndSet(int, int, int)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このメソッドには単純なメモリ効果がありますが、メソッド名は揮発性メモリ効果を意味します（&lt;a href=&quot;#compareAndExchange(int,int,int)&quot;&gt; &lt;code&gt;compareAndExchange(int, int, int)&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#compareAndSet(int,int,int)&quot;&gt; &lt;code&gt;compareAndSet(int, int, int)&lt;/code&gt; &lt;/a&gt;などのメソッドを参照）。</target>
        </trans-unit>
        <trans-unit id="e126fef024aaf1a23ae7ec1d66f0eb886d34137c" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(int,int,int)&quot;&gt;&lt;code&gt;compareAndExchange(int, int, int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(int,int,int)&quot;&gt;&lt;code&gt;compareAndSet(int, int, int)&lt;/code&gt;&lt;/a&gt;). To avoid confusion over plain or volatile memory effects it is recommended that the method &lt;a href=&quot;#weakCompareAndSetPlain(int,int,int)&quot;&gt;&lt;code&gt;weakCompareAndSetPlain(int, int, int)&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">このメソッドには単純なメモリ効果がありますが、メソッド名は揮発性メモリ効果を意味します（&lt;a href=&quot;#compareAndExchange(int,int,int)&quot;&gt; &lt;code&gt;compareAndExchange(int, int, int)&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#compareAndSet(int,int,int)&quot;&gt; &lt;code&gt;compareAndSet(int, int, int)&lt;/code&gt; &lt;/a&gt;などのメソッドを参照）。プレーンメモリまたは揮発性メモリの影響に関する混乱を避けるために、代わりにメソッド&lt;a href=&quot;#weakCompareAndSetPlain(int,int,int)&quot;&gt; &lt;code&gt;weakCompareAndSetPlain(int, int, int)&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a6e28dac97bc15a27b3cd08c998d15e0fc2cf7d9" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(int,long,long)&quot;&gt;&lt;code&gt;compareAndExchange(int, long, long)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(int,long,long)&quot;&gt;&lt;code&gt;compareAndSet(int, long, long)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このメソッドには単純なメモリ効果がありますが、メソッド名は揮発性メモリ効果を意味します（&lt;a href=&quot;#compareAndExchange(int,long,long)&quot;&gt; &lt;code&gt;compareAndExchange(int, long, long)&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#compareAndSet(int,long,long)&quot;&gt; &lt;code&gt;compareAndSet(int, long, long)&lt;/code&gt; &lt;/a&gt;などのメソッドを参照）。</target>
        </trans-unit>
        <trans-unit id="e5226827d996e17bc9730515b341ac4d1b77438e" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(int,long,long)&quot;&gt;&lt;code&gt;compareAndExchange(int, long, long)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(int,long,long)&quot;&gt;&lt;code&gt;compareAndSet(int, long, long)&lt;/code&gt;&lt;/a&gt;). To avoid confusion over plain or volatile memory effects it is recommended that the method &lt;a href=&quot;#weakCompareAndSetPlain(int,long,long)&quot;&gt;&lt;code&gt;weakCompareAndSetPlain(int, long, long)&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">このメソッドには単純なメモリ効果がありますが、メソッド名は揮発性メモリ効果を意味します（&lt;a href=&quot;#compareAndExchange(int,long,long)&quot;&gt; &lt;code&gt;compareAndExchange(int, long, long)&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#compareAndSet(int,long,long)&quot;&gt; &lt;code&gt;compareAndSet(int, long, long)&lt;/code&gt; &lt;/a&gt;などのメソッドを参照）。プレーンメモリまたは揮発性メモリの影響に関する混乱を避けるために、代わりにメソッド&lt;a href=&quot;#weakCompareAndSetPlain(int,long,long)&quot;&gt; &lt;code&gt;weakCompareAndSetPlain(int, long, long)&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="35aac93e837fecb4131365d2180100cf295b5331" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(long,long)&quot;&gt;&lt;code&gt;compareAndExchange(long, long)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(long,long)&quot;&gt;&lt;code&gt;compareAndSet(long, long)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このメソッドには単純なメモリ効果がありますが、メソッド名は揮発性メモリ効果を意味します（&lt;a href=&quot;#compareAndExchange(long,long)&quot;&gt; &lt;code&gt;compareAndExchange(long, long)&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#compareAndSet(long,long)&quot;&gt; &lt;code&gt;compareAndSet(long, long)&lt;/code&gt; &lt;/a&gt;などのメソッドを参照）。</target>
        </trans-unit>
        <trans-unit id="f304dab6006c29fb7906255b9c5aa0d8e64d0e0e" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(long,long)&quot;&gt;&lt;code&gt;compareAndExchange(long, long)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(long,long)&quot;&gt;&lt;code&gt;compareAndSet(long, long)&lt;/code&gt;&lt;/a&gt;). To avoid confusion over plain or volatile memory effects it is recommended that the method &lt;a href=&quot;#weakCompareAndSetPlain(long,long)&quot;&gt;&lt;code&gt;weakCompareAndSetPlain(long, long)&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">このメソッドには単純なメモリ効果がありますが、メソッド名は揮発性メモリ効果を意味します（&lt;a href=&quot;#compareAndExchange(long,long)&quot;&gt; &lt;code&gt;compareAndExchange(long, long)&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;#compareAndSet(long,long)&quot;&gt; &lt;code&gt;compareAndSet(long, long)&lt;/code&gt; &lt;/a&gt;などのメソッドを参照）。プレーンメモリまたは揮発性メモリの影響に関する混乱を避けるために、代わりにメソッド&lt;a href=&quot;#weakCompareAndSetPlain(long,long)&quot;&gt; &lt;code&gt;weakCompareAndSetPlain(long, long)&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8ae8131f6e61c58e9d4e35ee2f177a95a5e20fd2" translate="yes" xml:space="preserve">
          <source>This method has the following implementation restriction. It returns masks for a limited number of buttons only. The maximum number is implementation dependent and may vary. This limit is defined by the relevant number of buttons that may hypothetically exist on the mouse but it is greater than the &lt;a href=&quot;../mouseinfo#getNumberOfButtons()&quot;&gt;&lt;code&gt;MouseInfo.getNumberOfButtons()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドには、次の実装制限があります。限られた数のボタンに対してのみマスクを返します。最大数は実装によって異なり、異なる場合があります。この制限は、マウスに仮想的に存在する可能性のある関連するボタンの数によって定義されますが、&lt;a href=&quot;../mouseinfo#getNumberOfButtons()&quot;&gt; &lt;code&gt;MouseInfo.getNumberOfButtons()&lt;/code&gt; &lt;/a&gt;よりも大きくなります。</target>
        </trans-unit>
        <trans-unit id="bfe3c4ed632064ac65107b4fcb553341f7587817" translate="yes" xml:space="preserve">
          <source>This method has the same behavior as &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドの動作は&lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(Object)&lt;/code&gt; &lt;/a&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="c1d89341c629d415526544a81b37c759f2c6cf67" translate="yes" xml:space="preserve">
          <source>This method has the same behavior as &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(Object)&lt;/code&gt;&lt;/a&gt;. The only difference being that it takes a &lt;code&gt;DataFlavor&lt;/code&gt; instance as a parameter.</source>
          <target state="translated">このメソッドの動作は&lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(Object)&lt;/code&gt; &lt;/a&gt;と同じです。唯一の違いは、 &lt;code&gt;DataFlavor&lt;/code&gt; インスタンスをパラメーターとして受け取ることです。</target>
        </trans-unit>
        <trans-unit id="0a6e588b77bbb04b209146042c0d7e7bcd41a69e" translate="yes" xml:space="preserve">
          <source>This method has the same effect as appending each of the constituent parts directly to this builder surrounded by an &lt;a href=&quot;#optionalStart()&quot;&gt;&lt;code&gt;optionalStart()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#optionalEnd()&quot;&gt;&lt;code&gt;optionalEnd()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#optionalStart()&quot;&gt; &lt;code&gt;optionalStart()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#optionalEnd()&quot;&gt; &lt;code&gt;optionalEnd()&lt;/code&gt; で&lt;/a&gt;囲まれたこのビルダーに各構成パーツを直接追加するのと同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="88bebe56fe3ff2e1591dbb7a6b5405ca671ad816" translate="yes" xml:space="preserve">
          <source>This method has the same effect as appending each of the constituent parts directly to this builder surrounded by an &lt;a href=&quot;datetimeformatterbuilder#optionalStart--&quot;&gt;&lt;code&gt;optionalStart()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datetimeformatterbuilder#optionalEnd--&quot;&gt;&lt;code&gt;optionalEnd()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドには、&lt;a href=&quot;datetimeformatterbuilder#optionalStart--&quot;&gt; &lt;code&gt;optionalStart()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;datetimeformatterbuilder#optionalEnd--&quot;&gt; &lt;code&gt;optionalEnd()&lt;/code&gt; で&lt;/a&gt;囲まれたこのビルダーに構成要素のそれぞれを直接追加するのと同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="96db534ebadbf295dac57f668d2d340d0f0dede6" translate="yes" xml:space="preserve">
          <source>This method has the same effect as appending each of the constituent parts of the formatter directly to this builder.</source>
          <target state="translated">このメソッドは、フォーマッタの各構成部分を直接このビルダに追加するのと同じ効果を持ちます。</target>
        </trans-unit>
        <trans-unit id="a5f4b409f13cc185e763af0b8d5703f2f1dc4105" translate="yes" xml:space="preserve">
          <source>This method implements &lt;a href=&quot;dynamicmbean#getMBeanInfo()&quot;&gt;&lt;code&gt;DynamicMBean.getMBeanInfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;dynamicmbean#getMBeanInfo()&quot;&gt; &lt;code&gt;DynamicMBean.getMBeanInfo()&lt;/code&gt; を&lt;/a&gt;実装します。</target>
        </trans-unit>
        <trans-unit id="51bbeed2db8fef426d1e1af8073829b7c5b2411c" translate="yes" xml:space="preserve">
          <source>This method implements &lt;a href=&quot;dynamicmbean#getMBeanInfo--&quot;&gt;&lt;code&gt;DynamicMBean.getMBeanInfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;dynamicmbean#getMBeanInfo--&quot;&gt; &lt;code&gt;DynamicMBean.getMBeanInfo()&lt;/code&gt; を&lt;/a&gt;実装します。</target>
        </trans-unit>
        <trans-unit id="8cfae46a7f5456687b8a16dfbdd9df59a7d55d3a" translate="yes" xml:space="preserve">
          <source>This method implements an entire &lt;a href=&quot;#steps&quot;&gt;decoding operation&lt;/a&gt;; that is, it resets this decoder, then it decodes the bytes in the given byte buffer, and finally it flushes this decoder. This method should therefore not be invoked if a decoding operation is already in progress.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#steps&quot;&gt;デコード操作&lt;/a&gt;全体を実装します。つまり、このデコーダーをリセットしてから、指定されたバイトバッファー内のバイトをデコードし、最後にこのデコーダーをフラッシュします。したがって、デコード操作がすでに進行中の場合は、このメソッドを呼び出さないでください。</target>
        </trans-unit>
        <trans-unit id="4ac9435c198b287b7c60fc48bf877b6db17d492c" translate="yes" xml:space="preserve">
          <source>This method implements an entire &lt;a href=&quot;#steps&quot;&gt;encoding operation&lt;/a&gt;; that is, it resets this encoder, then it encodes the characters in the given character buffer, and finally it flushes this encoder. This method should therefore not be invoked if an encoding operation is already in progress.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#steps&quot;&gt;エンコード操作&lt;/a&gt;全体を実装します。つまり、このエンコーダーをリセットしてから、指定された文字バッファー内の文字をエンコードし、最後にこのエンコーダーをフラッシュします。したがって、エンコード操作がすでに進行中の場合は、このメソッドを呼び出さないでください。</target>
        </trans-unit>
        <trans-unit id="a10d37ae7a842062c873687a0f71b2550b892fc4" translate="yes" xml:space="preserve">
          <source>This method implements the general contract of the corresponding &lt;code&gt;&lt;a href=&quot;inputstream#read(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class. As an additional convenience, it attempts to read as many bytes as possible by repeatedly invoking the &lt;code&gt;read&lt;/code&gt; method of the underlying stream. This iterated &lt;code&gt;read&lt;/code&gt; continues until one of the following conditions becomes true:</source>
          <target state="translated">このメソッドは、 &lt;code&gt;&lt;a href=&quot;inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; クラスの対応する &lt;code&gt;&lt;a href=&quot;inputstream#read(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドの一般的なコントラクトを実装します。追加の利便性として、基になるストリームの &lt;code&gt;read&lt;/code&gt; メソッドを繰り返し呼び出すことにより、できるだけ多くのバイトを読み取ろうとします。この反復 &lt;code&gt;read&lt;/code&gt; は、次の条件のいずれかが真になるまで続きます。</target>
        </trans-unit>
        <trans-unit id="a217daaac530aeb0811702d8e5b97de7db1d9da9" translate="yes" xml:space="preserve">
          <source>This method implements the general contract of the corresponding &lt;code&gt;&lt;a href=&quot;inputstream#read-byte:A-int-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class. As an additional convenience, it attempts to read as many bytes as possible by repeatedly invoking the &lt;code&gt;read&lt;/code&gt; method of the underlying stream. This iterated &lt;code&gt;read&lt;/code&gt; continues until one of the following conditions becomes true:</source>
          <target state="translated">このメソッドは、 &lt;code&gt;&lt;a href=&quot;inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; クラスの対応する &lt;code&gt;&lt;a href=&quot;inputstream#read-byte:A-int-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドの一般規約を実装します。追加の便宜として、基になるストリームの &lt;code&gt;read&lt;/code&gt; メソッドを繰り返し呼び出して、できるだけ多くのバイトを読み取ろうとします。この反復 &lt;code&gt;read&lt;/code&gt; は、次のいずれかの条件がtrueになるまで続きます。</target>
        </trans-unit>
        <trans-unit id="61df848a40336d8db01883b06b76e5e1e9b1bcce" translate="yes" xml:space="preserve">
          <source>This method implements the general contract of the corresponding &lt;code&gt;&lt;a href=&quot;reader#read(char%5B%5D,int,int)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class. As an additional convenience, it attempts to read as many characters as possible by repeatedly invoking the &lt;code&gt;read&lt;/code&gt; method of the underlying stream. This iterated &lt;code&gt;read&lt;/code&gt; continues until one of the following conditions becomes true:</source>
          <target state="translated">このメソッドは、 &lt;code&gt;&lt;a href=&quot;reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; クラスの対応する &lt;code&gt;&lt;a href=&quot;reader#read(char%5B%5D,int,int)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドの一般的なコントラクトを実装します。追加の利便性として、基になるストリームの &lt;code&gt;read&lt;/code&gt; メソッドを繰り返し呼び出すことにより、できるだけ多くの文字を読み取ろうとします。この反復 &lt;code&gt;read&lt;/code&gt; は、次の条件のいずれかが真になるまで続きます。</target>
        </trans-unit>
        <trans-unit id="d79db10c8a15dc4c5930fc6d96d770f283377867" translate="yes" xml:space="preserve">
          <source>This method implements the general contract of the corresponding &lt;code&gt;&lt;a href=&quot;reader#read-char:A-int-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class. As an additional convenience, it attempts to read as many characters as possible by repeatedly invoking the &lt;code&gt;read&lt;/code&gt; method of the underlying stream. This iterated &lt;code&gt;read&lt;/code&gt; continues until one of the following conditions becomes true:</source>
          <target state="translated">このメソッドは、 &lt;code&gt;&lt;a href=&quot;reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; クラスの対応する &lt;code&gt;&lt;a href=&quot;reader#read-char:A-int-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドの一般規約を実装します。追加の便宜として、基になるストリームの &lt;code&gt;read&lt;/code&gt; メソッドを繰り返し呼び出して、できるだけ多くの文字を読み取ろうとします。この反復 &lt;code&gt;read&lt;/code&gt; は、次のいずれかの条件がtrueになるまで続きます。</target>
        </trans-unit>
        <trans-unit id="bef6cd50581d421dc0e551ac77328ee9c627639c" translate="yes" xml:space="preserve">
          <source>This method indicates to the service provider that it is free to release resources associated with the enumeration, and can notify servers to cancel any outstanding requests. The &lt;code&gt;close()&lt;/code&gt; method is a hint to implementations for managing their resources. Implementations are encouraged to use appropriate algorithms to manage their resources when client omits the &lt;code&gt;close()&lt;/code&gt; calls.</source>
          <target state="translated">このメソッドは、列挙に関連付けられたリソースを自由に解放できることをサービスプロバイダーに示し、未処理の要求をキャンセルするようサーバーに通知できます。 &lt;code&gt;close()&lt;/code&gt; メソッドは、そのリソースを管理するための実装へのヒントです。実装では、クライアントが &lt;code&gt;close()&lt;/code&gt; 呼び出しを省略したときに、適切なアルゴリズムを使用してリソースを管理することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ae08174a88c2b44b1885525c111a3b0c1402b67b" translate="yes" xml:space="preserve">
          <source>This method initializes from a stream.</source>
          <target state="translated">このメソッドは、ストリームから初期化します。</target>
        </trans-unit>
        <trans-unit id="d4e736a50f66261316f0da1fa64f34b936de8f04" translate="yes" xml:space="preserve">
          <source>This method initializes from a stream. If the kit is set to be of type &lt;code&gt;HTMLEditorKit&lt;/code&gt;, and the &lt;code&gt;desc&lt;/code&gt; parameter is an &lt;code&gt;HTMLDocument&lt;/code&gt;, then it invokes the &lt;code&gt;HTMLEditorKit&lt;/code&gt; to initiate the read. Otherwise it calls the superclass method which loads the model as plain text.</source>
          <target state="translated">このメソッドは、ストリームから初期化します。キットは、型のものに設定されている場合 &lt;code&gt;HTMLEditorKit&lt;/code&gt; 、および &lt;code&gt;desc&lt;/code&gt; パラメータである &lt;code&gt;HTMLDocument&lt;/code&gt; の、それが呼び出し &lt;code&gt;HTMLEditorKit&lt;/code&gt; 読み出しを開始するために。それ以外の場合は、モデルをプレーンテキストとしてロードするスーパークラスメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="f9054da5984af09c0d9d749bf1f89c47945fed75" translate="yes" xml:space="preserve">
          <source>This method initiates a focus traversal operation if and only if the KeyEvent represents a focus traversal key for the specified focusedComponent.</source>
          <target state="translated">このメソッドは、KeyEvent が指定された focusedComponent のフォーカス・トラバーサル・キーを表す場合にのみ、フォーカス・トラバーサル操作を開始します。</target>
        </trans-unit>
        <trans-unit id="b17c6f22313492a0cc857cc51659fb999b5e238c" translate="yes" xml:space="preserve">
          <source>This method initiates a focus traversal operation if and only if the KeyEvent represents a focus traversal key for the specified focusedComponent. It is expected that focusedComponent is the current focus owner, although this need not be the case. If it is not, focus traversal will nevertheless proceed as if focusedComponent were the current focus owner.</source>
          <target state="translated">このメソッドは、KeyEvent が指定された focusedComponent のフォーカス・トラバーサル・キーを表す場合にのみ、フォーカス・トラバーサル操作を開始します。focusComponent が現在のフォーカスの所有者であることが期待されますが、そうである必要はありません。そうでない場合でも、focusComponent が現在のフォーカスの所有者であるかのように、フォーカスの探索が行われます。</target>
        </trans-unit>
        <trans-unit id="876ae4526bbf97e54dcc75d576d2244305e6d60b" translate="yes" xml:space="preserve">
          <source>This method initiates a focus traversal operation if and only if the KeyEvent represents a focus traversal key for the specified focusedComponent. It is expected that focusedComponent is the current focus owner, although this need not be the case. If it is not, focus traversal will nevertheless proceed as if focusedComponent were the focus owner.</source>
          <target state="translated">このメソッドは、KeyEvent が指定された focusedComponent のフォーカス・トラバーサル・キーを表す場合にのみ、フォーカス・トラバーサル操作を開始します。focusComponent が現在のフォーカスの所有者であることが期待されますが、そうである必要はありません。そうでない場合でも、focusComponent がフォーカスの所有者であるかのように、フォーカスの探索が行われます。</target>
        </trans-unit>
        <trans-unit id="2a35fe7383019769b12946558370f4e4eb84750d" translate="yes" xml:space="preserve">
          <source>This method initiates a read of up to</source>
          <target state="translated">このメソッドは、最大</target>
        </trans-unit>
        <trans-unit id="195dc1ea9cd446d54f70fa3ceb58eae15f2abec4" translate="yes" xml:space="preserve">
          <source>This method initiates a write of up to</source>
          <target state="translated">このメソッドは、最大</target>
        </trans-unit>
        <trans-unit id="5b4a146fe1db63f22764c064f29188fc4be633a5" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous operation to accept a connection made to this channel's socket. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when a connection is accepted (or the operation fails). The result passed to the completion handler is the &lt;a href=&quot;asynchronoussocketchannel&quot;&gt;&lt;code&gt;AsynchronousSocketChannel&lt;/code&gt;&lt;/a&gt; to the new connection.</source>
          <target state="translated">このメソッドは、このチャネルのソケットに対して行われた接続を受け入れるための非同期操作を開始します。 &lt;code&gt;handler&lt;/code&gt; パラメータは、接続が受け入れられる（または操作が失敗した）ときに呼び出される終了ハンドラです。完了ハンドラに渡される結果は、新しい接続への&lt;a href=&quot;asynchronoussocketchannel&quot;&gt; &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="7a4c8bb3b6c6879cd7f7a82f80ec89ace424cb84" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous operation to accept a connection made to this channel's socket. The method behaves in exactly the same manner as the &lt;a href=&quot;#accept(A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;accept(Object, CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;
 Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;asynchronoussocketchannel&quot;&gt;&lt;code&gt;AsynchronousSocketChannel&lt;/code&gt;&lt;/a&gt; to the new connection on successful completion.</source>
          <target state="translated">このメソッドは、非同期操作を開始して、このチャネルのソケットへの接続を受け入れます。このメソッドは、&lt;a href=&quot;#accept(A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;accept(Object, CompletionHandler)&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作しますが、完了ハンドラーを指定する代わりに、このメソッドが保留中の結果を表す &lt;code&gt;Future&lt;/code&gt; を返す点が異なります。 &lt;code&gt; Future&lt;/code&gt; の&lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドは返し&lt;a href=&quot;asynchronoussocketchannel&quot;&gt; &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; を&lt;/a&gt;正常に完了した新しい接続に。</target>
        </trans-unit>
        <trans-unit id="36c77446ccad13303c3b9fd58465698d5f302634" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous operation to accept a connection made to this channel's socket. The method behaves in exactly the same manner as the &lt;a href=&quot;asynchronousserversocketchannel#accept-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;accept(Object, CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;asynchronoussocketchannel&quot;&gt;&lt;code&gt;AsynchronousSocketChannel&lt;/code&gt;&lt;/a&gt; to the new connection on successful completion.</source>
          <target state="translated">このメソッドは、このチャネルのソケットに対して行われた接続を受け入れるための非同期操作を開始します。このメソッドは、完了ハンドラを指定する代わりに、このメソッドが保留中の結果を表す &lt;code&gt;Future&lt;/code&gt; を返すことを除いて、&lt;a href=&quot;asynchronousserversocketchannel#accept-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;accept(Object, CompletionHandler)&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作します。 &lt;code&gt;Future&lt;/code&gt; の&lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドは返し&lt;a href=&quot;asynchronoussocketchannel&quot;&gt; &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; を&lt;/a&gt;正常に完了した新しい接続に。</target>
        </trans-unit>
        <trans-unit id="ca924575c95b56e4ac6541e64d1a3b4577a289b9" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous read operation to read a sequence of bytes from this channel into the given buffer. The &lt;code&gt;
 handler&lt;/code&gt; parameter is a completion handler that is invoked when the read operation completes (or fails). The result passed to the completion handler is the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if no bytes could be read because the channel has reached end-of-stream.</source>
          <target state="translated">このメソッドは、非同期読み取り操作を開始して、このチャネルから指定されたバッファーにバイトのシーケンスを読み取ります。 &lt;code&gt; handler&lt;/code&gt; パラメータは、読み出し動作が完了（または失敗）が呼び出された終了ハンドラです。完了ハンドラーに渡される結果は、読み取られたバイト数、またはチャネルがストリームの終わりに達したために読み取ることができなかったバイト数の場合は &lt;code&gt;-1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ee6e1a56838a97e25f3a78eccf440495412459ce" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous read operation to read a sequence of bytes from this channel into the given buffer. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when the read operation completes (or fails). The result passed to the completion handler is the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if no bytes could be read because the channel has reached end-of-stream.</source>
          <target state="translated">このメソッドは、非同期の読み取り操作を開始して、バイトのシーケンスをこのチャネルから指定されたバッファーに読み取ります。 &lt;code&gt;handler&lt;/code&gt; パラメータは、読み出し動作が完了（または失敗）が呼び出された終了ハンドラです。完了ハンドラに渡される結果は、読み取られたバイト数、またはチャネルがストリームの終わりに達したためにバイトを読み取ることができなかった場合は &lt;code&gt;-1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1af641fa4e423c4c08645ad7f9eed9006e308c11" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous read operation to read a sequence of bytes from this channel into the given buffer. The method behaves in exactly the same manner as the &lt;a href=&quot;#read(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if no bytes could be read because the channel has reached end-of-stream.</source>
          <target state="translated">このメソッドは、非同期読み取り操作を開始して、このチャネルから指定されたバッファーにバイトのシーケンスを読み取ります。このメソッドは、&lt;a href=&quot;#read(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作しますが、完了ハンドラーを指定する代わりに、このメソッドが保留中の結果を表す &lt;code&gt;Future&lt;/code&gt; を返す点が異なります。 &lt;code&gt;Future&lt;/code&gt; のは&lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドが返すバイト数が読み取りまたは &lt;code&gt;-1&lt;/code&gt; チャネルがストリームの終わりに達したためにバイトを読み込めない可能性があります。</target>
        </trans-unit>
        <trans-unit id="64fbbff989da456cec7bcadaec9f0bebb07bc5de" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous read operation to read a sequence of bytes from this channel into the given buffer. The method behaves in exactly the same manner as the &lt;a href=&quot;asynchronousbytechannel#read(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if no bytes could be read because the channel has reached end-of-stream.</source>
          <target state="translated">このメソッドは、非同期読み取り操作を開始して、このチャネルから指定されたバッファーにバイトのシーケンスを読み取ります。このメソッドは、&lt;a href=&quot;asynchronousbytechannel#read(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作しますが、完了ハンドラーを指定する代わりに、このメソッドが保留中の結果を表す &lt;code&gt;Future&lt;/code&gt; を返す点が異なります。 &lt;code&gt;Future&lt;/code&gt; のは&lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドが返すバイト数が読み取りまたは &lt;code&gt;-1&lt;/code&gt; チャネルがストリームの終わりに達したためにバイトを読み込めない可能性があります。</target>
        </trans-unit>
        <trans-unit id="b4e5adf06733fe348da70a4c4ad9658c1cbcbd4f" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous read operation to read a sequence of bytes from this channel into the given buffer. The method behaves in exactly the same manner as the &lt;a href=&quot;asynchronousbytechannel#read-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if no bytes could be read because the channel has reached end-of-stream.</source>
          <target state="translated">このメソッドは、非同期の読み取り操作を開始して、バイトのシーケンスをこのチャネルから指定されたバッファーに読み取ります。このメソッドは、完了ハンドラを指定する代わりに、このメソッドが保留中の結果を表す &lt;code&gt;Future&lt;/code&gt; を返すことを除いて、&lt;a href=&quot;asynchronousbytechannel#read-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作します。 &lt;code&gt;Future&lt;/code&gt; のは&lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドが返すバイト数が読み取りまたは &lt;code&gt;-1&lt;/code&gt; チャネルがストリームの終わりに達したためにバイトを読み込めない可能性があります。</target>
        </trans-unit>
        <trans-unit id="a2e2249e76cb96a8bdf810bffadd9cb2cb6d63b3" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous write operation to write a sequence of bytes to this channel from the given buffer. The &lt;code&gt;
 handler&lt;/code&gt; parameter is a completion handler that is invoked when the write operation completes (or fails). The result passed to the completion handler is the number of bytes written.</source>
          <target state="translated">このメソッドは、非同期書き込み操作を開始して、指定されたバッファーからこのチャネルに一連のバイトを書き込みます。 &lt;code&gt; handler&lt;/code&gt; パラメータは、書き込み動作が完了（または失敗）が呼び出された終了ハンドラです。完了ハンドラーに渡される結果は、書き込まれたバイト数です。</target>
        </trans-unit>
        <trans-unit id="884f1eed34505d79db8e140611a1bda7f4feda2c" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous write operation to write a sequence of bytes to this channel from the given buffer. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when the write operation completes (or fails). The result passed to the completion handler is the number of bytes written.</source>
          <target state="translated">このメソッドは、指定されたバッファーからこのチャネルにバイトシーケンスを書き込むための非同期書き込み操作を開始します。 &lt;code&gt;handler&lt;/code&gt; パラメータは、書き込み動作が完了（または失敗）が呼び出された終了ハンドラです。完了ハンドラに渡される結果は、書き込まれたバイト数です。</target>
        </trans-unit>
        <trans-unit id="6280c2c1facc5c74fd815282490f419d0019166e" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous write operation to write a sequence of bytes to this channel from the given buffer. The method behaves in exactly the same manner as the &lt;a href=&quot;#write(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes written.</source>
          <target state="translated">このメソッドは、非同期書き込み操作を開始して、指定されたバッファーからこのチャネルに一連のバイトを書き込みます。このメソッドは、&lt;a href=&quot;#write(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作しますが、完了ハンドラーを指定する代わりに、このメソッドが保留中の結果を表す &lt;code&gt;Future&lt;/code&gt; を返す点が異なります。 &lt;code&gt;Future&lt;/code&gt; の&lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドは、書き込まれたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="989fda8feed6d0ea89f0f24d0f134aa25bf9fc9d" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous write operation to write a sequence of bytes to this channel from the given buffer. The method behaves in exactly the same manner as the &lt;a href=&quot;asynchronousbytechannel#write(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes written.</source>
          <target state="translated">このメソッドは、非同期書き込み操作を開始して、指定されたバッファーからこのチャネルに一連のバイトを書き込みます。このメソッドは、&lt;a href=&quot;asynchronousbytechannel#write(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作しますが、完了ハンドラーを指定する代わりに、このメソッドが保留中の結果を表す &lt;code&gt;Future&lt;/code&gt; を返す点が異なります。 &lt;code&gt;Future&lt;/code&gt; の&lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドは、書き込まれたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="425dcdb9947c1226ce9e013431356c819774a519" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous write operation to write a sequence of bytes to this channel from the given buffer. The method behaves in exactly the same manner as the &lt;a href=&quot;asynchronousbytechannel#write-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes written.</source>
          <target state="translated">このメソッドは、指定されたバッファーからこのチャネルにバイトシーケンスを書き込むための非同期書き込み操作を開始します。このメソッドは、完了ハンドラを指定する代わりに、このメソッドが保留中の結果を表す &lt;code&gt;Future&lt;/code&gt; を返すことを除いて、&lt;a href=&quot;asynchronousbytechannel#write-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作します。 &lt;code&gt;Future&lt;/code&gt; の&lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドは、書き込まれたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="d69bc96e539dc381a9fbbd2f36f985610a68eafc" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to acquire a lock on the given region of this channel's file. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when the lock is acquired (or the operation fails). The result passed to the completion handler is the resulting &lt;code&gt;FileLock&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、このチャネルのファイルの指定された領域のロックを取得する操作を開始します。 &lt;code&gt;handler&lt;/code&gt; パラメータは、ロックが取得される（または操作が失敗した）ときに呼び出される終了ハンドラです。完了ハンドラに渡される結果は、結果の &lt;code&gt;FileLock&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a52fcf3ae79eceaedd6da642a6fda9d7a15dafcd" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to acquire a lock on the given region of this channel's file. The method behaves in exactly the same manner as the &lt;a href=&quot;#lock(long,long,boolean,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;lock(long, long, boolean, Object, CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;FileLock&lt;/code&gt;&lt;/a&gt; on successful completion.</source>
          <target state="translated">このメソッドは、このチャネルのファイルの指定された領域のロックを取得する操作を開始します。このメソッドは、完了ハンドラーを指定する代わりに、保留中の結果を表す &lt;code&gt;Future&lt;/code&gt; を返すことを除いて、&lt;a href=&quot;#lock(long,long,boolean,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;lock(long, long, boolean, Object, CompletionHandler)&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作します。 &lt;code&gt;Future&lt;/code&gt; の&lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドは返し&lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;FileLock&lt;/code&gt; を&lt;/a&gt;正常に完了しました。</target>
        </trans-unit>
        <trans-unit id="ade494af179c7fa5dd56b70c37320ff095534a3d" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to acquire a lock on the given region of this channel's file. The method behaves in exactly the same manner as the &lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;lock(long, long, boolean, Object, CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;FileLock&lt;/code&gt;&lt;/a&gt; on successful completion.</source>
          <target state="translated">このメソッドは、このチャネルのファイルの指定された領域のロックを取得する操作を開始します。このメソッドは、完了ハンドラーを指定する代わりに、このメソッドが保留中の結果を表す &lt;code&gt;Future&lt;/code&gt; を返すことを除いて、&lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;lock(long, long, boolean, Object, CompletionHandler)&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作します。 &lt;code&gt;Future&lt;/code&gt; の&lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドは返し&lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;FileLock&lt;/code&gt; を&lt;/a&gt;正常に完了しました。</target>
        </trans-unit>
        <trans-unit id="8d90a68123fd61ba33b7753c6caa1615e99ad189" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to acquire an exclusive lock on this channel's file. The method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result of the operation. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;FileLock&lt;/code&gt;&lt;/a&gt; on successful completion.</source>
          <target state="translated">このメソッドは、このチャネルのファイルの排他ロックを取得する操作を開始します。このメソッドは、操作の保留中の結果を表す &lt;code&gt;Future&lt;/code&gt; を返します。 &lt;code&gt;Future&lt;/code&gt; の&lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドは返し&lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;FileLock&lt;/code&gt; を&lt;/a&gt;正常に完了しました。</target>
        </trans-unit>
        <trans-unit id="8efe04b7e4bd5e33dc579eaa5a2c7ba89e20c9d8" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to acquire an exclusive lock on this channel's file. The method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result of the operation. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;FileLock&lt;/code&gt;&lt;/a&gt; on successful completion.</source>
          <target state="translated">このメソッドは、このチャネルのファイルの排他ロックを取得する操作を開始します。このメソッドは、操作の保留中の結果を表す &lt;code&gt;Future&lt;/code&gt; を返します。 &lt;code&gt;Future&lt;/code&gt; の&lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドは返し&lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;FileLock&lt;/code&gt; を&lt;/a&gt;正常に完了しました。</target>
        </trans-unit>
        <trans-unit id="ccec9e8297a340fc281d8a33e5acb34845e0008f" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to connect this channel. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when the connection is successfully established or connection cannot be established. If the connection cannot be established then the channel is closed.</source>
          <target state="translated">このメソッドは、このチャネルを接続する操作を開始します。 &lt;code&gt;handler&lt;/code&gt; パラメータは、接続が正常に確立されるか、接続が確立できないときに呼び出される終了ハンドラです。接続を確立できない場合、チャネルは閉じられます。</target>
        </trans-unit>
        <trans-unit id="6532d1d48efb71683750abaca05d604dc7fa7f05" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to connect this channel. This method behaves in exactly the same manner as the &lt;a href=&quot;#connect(java.net.SocketAddress,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;connect(SocketAddress, Object, CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;
 Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;null&lt;/code&gt; on successful completion.</source>
          <target state="translated">このメソッドは、このチャネルを接続する操作を開始します。このメソッドは、&lt;a href=&quot;#connect(java.net.SocketAddress,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;connect(SocketAddress, Object, CompletionHandler)&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作しますが、完了ハンドラーを指定する代わりに、保留中の結果を表す &lt;code&gt; Future&lt;/code&gt; を返す点が異なります。 &lt;code&gt;Future&lt;/code&gt; の&lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドは返し &lt;code&gt;null&lt;/code&gt; 正常に完了しました。</target>
        </trans-unit>
        <trans-unit id="fa8f92f210402ec46afc6ff1e5c2f4ed013064dd" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to connect this channel. This method behaves in exactly the same manner as the &lt;a href=&quot;asynchronoussocketchannel#connect-java.net.SocketAddress-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;connect(SocketAddress, Object, CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;null&lt;/code&gt; on successful completion.</source>
          <target state="translated">このメソッドは、このチャネルを接続する操作を開始します。このメソッドは、完了ハンドラを指定する代わりに、保留中の結果を表す &lt;code&gt;Future&lt;/code&gt; を返すことを除いて、&lt;a href=&quot;asynchronoussocketchannel#connect-java.net.SocketAddress-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;connect(SocketAddress, Object, CompletionHandler)&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作します。 &lt;code&gt;Future&lt;/code&gt; の&lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドは返し &lt;code&gt;null&lt;/code&gt; 正常に完了しました。</target>
        </trans-unit>
        <trans-unit id="30130f900e70b9de0cdf13b5d4484fc27d0cf423" translate="yes" xml:space="preserve">
          <source>This method initiates the reading of a sequence of bytes from this channel into the given buffer, starting at the given file position. The result of the read is the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if the given position is greater than or equal to the file's size at the time that the read is attempted.</source>
          <target state="translated">このメソッドは、指定されたファイル位置から開始して、このチャネルから指定されたバッファーへの一連のバイトの読み取りを開始します。読み取りの結果は、読み取られたバイト数、または指定された位置が読み取りが試行された時点のファイルのサイズ以上の場合は &lt;code&gt;-1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c8e9fed9ef823a6e7aedd1d271b19802a305cde9" translate="yes" xml:space="preserve">
          <source>This method initiates the reading of a sequence of bytes from this channel into the given buffer, starting at the given file position. This method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result of the operation. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if the given position is greater than or equal to the file's size at the time that the read is attempted.</source>
          <target state="translated">このメソッドは、指定されたファイル位置から開始して、このチャネルから指定されたバッファへの一連のバイトの読み取りを開始します。このメソッドは、操作の保留中の結果を表す &lt;code&gt;Future&lt;/code&gt; を返します。 &lt;code&gt;Future&lt;/code&gt; の&lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドは、バイト数を読み取ったり返し &lt;code&gt;-1&lt;/code&gt; 指定された位置が、読み出しが試行されていること以上の時間で、ファイルのサイズに等しい場合。</target>
        </trans-unit>
        <trans-unit id="a3264d07d05d29bee8f76107fdf7105ffffe704b" translate="yes" xml:space="preserve">
          <source>This method initiates the reading of a sequence of bytes from this channel into the given buffer, starting at the given file position. This method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result of the operation. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if the given position is greater than or equal to the file's size at the time that the read is attempted.</source>
          <target state="translated">このメソッドは、指定されたファイル位置から開始して、このチャネルから指定されたバッファーへの一連のバイトの読み取りを開始します。このメソッドは、操作の保留中の結果を表す &lt;code&gt;Future&lt;/code&gt; を返します。 &lt;code&gt;Future&lt;/code&gt; の&lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドは、バイト数を読み取ったり返し &lt;code&gt;-1&lt;/code&gt; 指定された位置が、読み出しが試行されていること以上の時間で、ファイルのサイズに等しい場合。</target>
        </trans-unit>
        <trans-unit id="8c16aa65ee4f69d5712a24457ff9d6f1a3f2bbe7" translate="yes" xml:space="preserve">
          <source>This method initiates the writing of a sequence of bytes to this channel from the given buffer, starting at the given file position. The method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result of the write operation. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes written.</source>
          <target state="translated">このメソッドは、指定されたファイル位置から開始して、指定されたバッファからこのチャネルへのバイトシーケンスの書き込みを開始します。このメソッドは、書き込み操作の保留中の結果を表す &lt;code&gt;Future&lt;/code&gt; を返します。 &lt;code&gt;Future&lt;/code&gt; の&lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドは、書き込まれたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="4c8aa12f9311f3afdff1963436aba815aca9a681" translate="yes" xml:space="preserve">
          <source>This method initiates the writing of a sequence of bytes to this channel from the given buffer, starting at the given file position. The method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result of the write operation. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes written.</source>
          <target state="translated">このメソッドは、指定されたファイル位置から開始して、指定されたバッファからこのチャネルへのバイトシーケンスの書き込みを開始します。このメソッドは、書き込み操作の保留中の結果を表す &lt;code&gt;Future&lt;/code&gt; を返します。 &lt;code&gt;Future&lt;/code&gt; の&lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;メソッドは、書き込まれたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="46a4338713f2d071fd29cd8ad8a5faced93b314e" translate="yes" xml:space="preserve">
          <source>This method instructs the bean that it is OK to use the Gui.</source>
          <target state="translated">このメソッドは、Guiを使用してもよいことをBeanに指示します。</target>
        </trans-unit>
        <trans-unit id="d03ba6b1925fc9e4d5bdab71fe41aa59137b4d30" translate="yes" xml:space="preserve">
          <source>This method instructs the bean that it should not use the Gui.</source>
          <target state="translated">このメソッドは、Guiを使用しないようにBeanに指示します。</target>
        </trans-unit>
        <trans-unit id="6a0dcfddcee506e38f38fcfac4eb8e0084fa7bac" translate="yes" xml:space="preserve">
          <source>This method invokes &lt;a href=&quot;#readNBytes(int)&quot;&gt;&lt;code&gt;readNBytes(int)&lt;/code&gt;&lt;/a&gt; with a length of &lt;a href=&quot;../lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; の&lt;/a&gt;長さで&lt;a href=&quot;#readNBytes(int)&quot;&gt; &lt;code&gt;readNBytes(int)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="5d891fcf0ebd8ff0e8208eb5a8695e9445768a93" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#exportObject(java.rmi.Remote,java.lang.String,java.rmi.MarshalledObject,boolean,int)&quot;&gt;&lt;code&gt;exportObject&lt;/code&gt;&lt;/a&gt; method with this object, and the specified location, data, restart mode, and port. Subsequent calls to &lt;a href=&quot;#getID()&quot;&gt;&lt;code&gt;getID()&lt;/code&gt;&lt;/a&gt; will return the activation identifier returned from the call to &lt;code&gt;exportObject&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、このオブジェクト、および指定された場所、データ、再起動モード、およびポートを使用して&lt;a href=&quot;#exportObject(java.rmi.Remote,java.lang.String,java.rmi.MarshalledObject,boolean,int)&quot;&gt; &lt;code&gt;exportObject&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。以降の呼び出し&lt;a href=&quot;#getID()&quot;&gt; &lt;code&gt;getID()&lt;/code&gt; &lt;/a&gt;呼び出しから返された起動識別子戻ります &lt;code&gt;exportObject&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ba37a8a78f8f76e7ad837fc31994797df0aa8ca" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#exportObject(java.rmi.Remote,java.lang.String,java.rmi.MarshalledObject,boolean,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt;&lt;code&gt;exportObject&lt;/code&gt;&lt;/a&gt; method with the specified object, location, data, restart mode, and port, and &lt;code&gt;null&lt;/code&gt; for both client and server socket factories, and then returns the resulting activation identifier.</source>
          <target state="translated">このメソッドは、指定されたオブジェクト、場所、データ、再起動モード、ポート、およびクライアントとサーバーの両方のソケットファクトリに対して &lt;code&gt;null&lt;/code&gt; を指定して&lt;a href=&quot;#exportObject(java.rmi.Remote,java.lang.String,java.rmi.MarshalledObject,boolean,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt; &lt;code&gt;exportObject&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、結果のアクティベーション識別子を返します。</target>
        </trans-unit>
        <trans-unit id="b3895aedb16b9991f32b61932ea5c7bd7286ee22" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#exportObject(java.rmi.Remote,java.lang.String,java.rmi.MarshalledObject,boolean,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt;&lt;code&gt;exportObject&lt;/code&gt;&lt;/a&gt; method with this object, and the specified location, data, restart mode, port, and client and server socket factories. Subsequent calls to &lt;a href=&quot;#getID()&quot;&gt;&lt;code&gt;getID()&lt;/code&gt;&lt;/a&gt; will return the activation identifier returned from the call to &lt;code&gt;exportObject&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、このオブジェクトと、指定された場所、データ、再起動モード、ポート、およびクライアントとサーバーのソケットファクトリを使用して&lt;a href=&quot;#exportObject(java.rmi.Remote,java.lang.String,java.rmi.MarshalledObject,boolean,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt; &lt;code&gt;exportObject&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。以降の呼び出し&lt;a href=&quot;#getID()&quot;&gt; &lt;code&gt;getID()&lt;/code&gt; &lt;/a&gt;呼び出しから返された起動識別子戻ります &lt;code&gt;exportObject&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5cb64c26d67f708a429ee3472d60b15ec33d86f" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#implFlush(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;implFlush&lt;/code&gt;&lt;/a&gt; method to perform the actual flushing operation.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#implFlush(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;implFlush&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、実際のフラッシング操作を実行します。</target>
        </trans-unit>
        <trans-unit id="a729204a84931d6bcb08cd96b4ff744395c6591c" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#implFlush(java.nio.CharBuffer)&quot;&gt;&lt;code&gt;implFlush&lt;/code&gt;&lt;/a&gt; method to perform the actual flushing operation.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#implFlush(java.nio.CharBuffer)&quot;&gt; &lt;code&gt;implFlush&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、実際のフラッシング操作を実行します。</target>
        </trans-unit>
        <trans-unit id="0b5a85fbd3a063c22916d00144b237ba59bd5b6c" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#implOnMalformedInput(java.nio.charset.CodingErrorAction)&quot;&gt;&lt;code&gt;implOnMalformedInput&lt;/code&gt;&lt;/a&gt; method, passing the new action.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#implOnMalformedInput(java.nio.charset.CodingErrorAction)&quot;&gt; &lt;code&gt;implOnMalformedInput&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、新しいアクションを渡します。</target>
        </trans-unit>
        <trans-unit id="0e03b6a98aea482ce03a1d450be5dbb1d1fa4d79" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)&quot;&gt;&lt;code&gt;implOnUnmappableCharacter&lt;/code&gt;&lt;/a&gt; method, passing the new action.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)&quot;&gt; &lt;code&gt;implOnUnmappableCharacter&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、新しいアクションを渡します。</target>
        </trans-unit>
        <trans-unit id="75b5c3c5f9f32fff91e7e77c76719ae1b3f9727b" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#implReplaceWith(byte%5B%5D)&quot;&gt;&lt;code&gt;implReplaceWith&lt;/code&gt;&lt;/a&gt; method, passing the new replacement, after checking that the new replacement is acceptable.</source>
          <target state="translated">このメソッドは、新しい置換が受け入れ可能であることを確認した後、&lt;a href=&quot;#implReplaceWith(byte%5B%5D)&quot;&gt; &lt;code&gt;implReplaceWith&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、新しい置換を渡します。</target>
        </trans-unit>
        <trans-unit id="dd9e4f7796b1cff97e72b907cf4f01521f1e6fad" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#implReplaceWith(java.lang.String)&quot;&gt;&lt;code&gt;implReplaceWith&lt;/code&gt;&lt;/a&gt; method, passing the new replacement, after checking that the new replacement is acceptable.</source>
          <target state="translated">このメソッドは、新しい置換が受け入れ可能であることを確認した後、&lt;a href=&quot;#implReplaceWith(java.lang.String)&quot;&gt; &lt;code&gt;implReplaceWith&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、新しい置換を渡します。</target>
        </trans-unit>
        <trans-unit id="03410d0126e6258ad8ccb9de242ab55e097880f6" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#release()&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#release()&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="a480824b559deda0c7d1907f15913d6a60657889" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#release()&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; method. It was added to the class so that it could be used in conjunction with the automatic resource management block construct.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#release()&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。自動リソース管理ブロック構造と組み合わせて使用​​できるように、クラスに追加されました。</target>
        </trans-unit>
        <trans-unit id="eeff678a91716b0a42e47201bdbc4ceb988bbbf1" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetdecoder#implFlush-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;implFlush&lt;/code&gt;&lt;/a&gt; method to perform the actual flushing operation.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;charsetdecoder#implFlush-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;implFlush&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、実際のフラッシュ操作を実行します。</target>
        </trans-unit>
        <trans-unit id="7cc4bc54886d6e859dfb0a0349c595e5484237ea" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetdecoder#implOnMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt;&lt;code&gt;implOnMalformedInput&lt;/code&gt;&lt;/a&gt; method, passing the new action.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;charsetdecoder#implOnMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt; &lt;code&gt;implOnMalformedInput&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、新しいアクションを渡します。</target>
        </trans-unit>
        <trans-unit id="9382f3d508bb3cdc2b89496be0a551dc47ca8836" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetdecoder#implOnUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt;&lt;code&gt;implOnUnmappableCharacter&lt;/code&gt;&lt;/a&gt; method, passing the new action.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;charsetdecoder#implOnUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt; &lt;code&gt;implOnUnmappableCharacter&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、新しいアクションを渡します。</target>
        </trans-unit>
        <trans-unit id="31054bfe51b35fcc9c6c84d577625707b866633a" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetdecoder#implReplaceWith-java.lang.String-&quot;&gt;&lt;code&gt;implReplaceWith&lt;/code&gt;&lt;/a&gt; method, passing the new replacement, after checking that the new replacement is acceptable.</source>
          <target state="translated">このメソッドは、新しい置換が受け入れ可能であることを確認した後で、&lt;a href=&quot;charsetdecoder#implReplaceWith-java.lang.String-&quot;&gt; &lt;code&gt;implReplaceWith&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、新しい置換を渡します。</target>
        </trans-unit>
        <trans-unit id="5c104f7fb6d4a6bc7f7c359da6bb8e5370594817" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetencoder#implFlush-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;implFlush&lt;/code&gt;&lt;/a&gt; method to perform the actual flushing operation.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;charsetencoder#implFlush-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;implFlush&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、実際のフラッシュ操作を実行します。</target>
        </trans-unit>
        <trans-unit id="1d68eb989e6b2cec48fb1d9608b53360e33c5501" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetencoder#implOnMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt;&lt;code&gt;implOnMalformedInput&lt;/code&gt;&lt;/a&gt; method, passing the new action.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;charsetencoder#implOnMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt; &lt;code&gt;implOnMalformedInput&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、新しいアクションを渡します。</target>
        </trans-unit>
        <trans-unit id="afd6d10a1b1e6193932849b08ddb519274872dcb" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetencoder#implOnUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt;&lt;code&gt;implOnUnmappableCharacter&lt;/code&gt;&lt;/a&gt; method, passing the new action.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;charsetencoder#implOnUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt; &lt;code&gt;implOnUnmappableCharacter&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、新しいアクションを渡します。</target>
        </trans-unit>
        <trans-unit id="0b72b131850d9b320a093c2e3604e8be32c2042c" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetencoder#implReplaceWith-byte:A-&quot;&gt;&lt;code&gt;implReplaceWith&lt;/code&gt;&lt;/a&gt; method, passing the new replacement, after checking that the new replacement is acceptable.</source>
          <target state="translated">このメソッドは、新しい置換が受け入れ可能であることを確認した後で、&lt;a href=&quot;charsetencoder#implReplaceWith-byte:A-&quot;&gt; &lt;code&gt;implReplaceWith&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、新しい置換を渡します。</target>
        </trans-unit>
        <trans-unit id="ad0ffa02b5be5094d7b4978dfaa39f5914c1520b" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;filelock#release--&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; method. It was added to the class so that it could be used in conjunction with the automatic resource management block construct.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;filelock#release--&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。これは、自動リソース管理ブロック構成と組み合わせて使用​​できるようにクラスに追加されました。</target>
        </trans-unit>
        <trans-unit id="0d38c44073f00644ab9b57c3ea55d3a7eda2d72b" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;code&gt;doFinal&lt;/code&gt; method of the encapsulated cipher object, which causes any bytes buffered by the encapsulated cipher to be processed. The result is written out by calling the &lt;code&gt;flush&lt;/code&gt; method of this output stream.</source>
          <target state="translated">このメソッドは、カプセル化された暗号オブジェクトの &lt;code&gt;doFinal&lt;/code&gt; メソッドを呼び出します。これにより、カプセル化された暗号によってバッファリングされたバイトが処理されます。結果は、この出力ストリームの &lt;code&gt;flush&lt;/code&gt; メソッドを呼び出すことによって書き出されます。</target>
        </trans-unit>
        <trans-unit id="1bdb46a893dfa0483a9c4bd9290f9f4065057bd2" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;code&gt;login&lt;/code&gt; method for each LoginModule configured for the</source>
          <target state="translated">このメソッドは、呼び出し &lt;code&gt;login&lt;/code&gt; 用に設定された各LoginModuleの方法を</target>
        </trans-unit>
        <trans-unit id="945890c31957c102b30f2abb295e38f3d7c96e8d" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;code&gt;logout&lt;/code&gt; method for each &lt;code&gt;LoginModule&lt;/code&gt; configured for this &lt;code&gt;LoginContext&lt;/code&gt;. Each &lt;code&gt;LoginModule&lt;/code&gt; performs its respective logout procedure which may include removing/destroying &lt;code&gt;Principal&lt;/code&gt; and &lt;code&gt;Credential&lt;/code&gt; information from the &lt;code&gt;Subject&lt;/code&gt; and state cleanup.</source>
          <target state="translated">このメソッドは、この &lt;code&gt;LoginContext&lt;/code&gt; 用に構成された各 &lt;code&gt;LoginModule&lt;/code&gt; の &lt;code&gt;logout&lt;/code&gt; メソッドを呼び出します。各 &lt;code&gt;LoginModule&lt;/code&gt; は、それぞれのログアウト手順を実行します。これには、 &lt;code&gt;Subject&lt;/code&gt; からの &lt;code&gt;Principal&lt;/code&gt; および &lt;code&gt;Credential&lt;/code&gt; 情報の削除/破棄と状態のクリーンアップが含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="7fdde84115c0a56bd58b40513d143d43fdce1e31" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;restricted&lt;/em&gt;. Restricted methods are unsafe, and, if used incorrectly, their use might crash the JVM or, worse, silently result in memory corruption. Thus, clients should refrain from depending on restricted methods, and use safe and supported functionalities, where possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad108669fb35a290a1b897c6b625f43fcba7dbb" translate="yes" xml:space="preserve">
          <source>This method is a cover that delegates to &lt;code&gt;getMinSelectionIndex&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;getMinSelectionIndex&lt;/code&gt; に委任するカバーです。</target>
        </trans-unit>
        <trans-unit id="c3e9f338e4814e9694b9c8800990ba819781ee6b" translate="yes" xml:space="preserve">
          <source>This method is a no-op if the &lt;code&gt;accessible&lt;/code&gt; flag for this reflected object is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">この反映されたオブジェクトの &lt;code&gt;accessible&lt;/code&gt; フラグが &lt;code&gt;true&lt;/code&gt; の場合、このメソッドは何もしません。</target>
        </trans-unit>
        <trans-unit id="da0e1466ecd7a361566d14e2a3b23e59ec3e7651" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for the common case of reading a document from a system identifier. It is the exact equivalent of the following:</source>
          <target state="translated">このメソッドは、システム識別子から文書を読み取るという一般的なケースのショートカットです。これは以下のものと全く同じです。</target>
        </trans-unit>
        <trans-unit id="15edee9096244088501de41179160b4763526961" translate="yes" xml:space="preserve">
          <source>This method is a synonym for &lt;a href=&quot;#writeShort(int)&quot;&gt;&lt;code&gt;writeShort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#writeShort(int)&quot;&gt; &lt;code&gt;writeShort&lt;/code&gt; の&lt;/a&gt;同義語です。</target>
        </trans-unit>
        <trans-unit id="fdb1880895c894bfd297246b1aa1118ff40e8627" translate="yes" xml:space="preserve">
          <source>This method is a synonym for &lt;a href=&quot;imageoutputstream#writeShort-int-&quot;&gt;&lt;code&gt;writeShort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;imageoutputstream#writeShort-int-&quot;&gt; &lt;code&gt;writeShort&lt;/code&gt; の&lt;/a&gt;同義語です。</target>
        </trans-unit>
        <trans-unit id="a5cc06003433eebab8325177aa608d991144029e" translate="yes" xml:space="preserve">
          <source>This method is a way to explicitly initiate an LDAP &quot;bind&quot; operation. For example, you can use this method to set request controls for the LDAP &quot;bind&quot; operation, or to explicitly connect to the server to get response controls returned by the LDAP &quot;bind&quot; operation.</source>
          <target state="translated">このメソッドは、LDAP &quot;バインド &quot;操作を明示的に開始する方法です。例えば、このメソッドを使用してLDAP &quot;bind &quot;操作のリクエストコントロールを設定したり、LDAP &quot;bind &quot;操作によって返されたレスポンスコントロールを取得するために明示的にサーバーに接続したりすることができます。</target>
        </trans-unit>
        <trans-unit id="155b0904a24816755b685dc14f8a3b7dea7909ab" translate="yes" xml:space="preserve">
          <source>This method is also be invoked when a listener is added to an already initialized Flight Recorder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f682cfd7ed488d6df08e1bbda8fd4a9615756c5f" translate="yes" xml:space="preserve">
          <source>This method is also equivalent to the following code:</source>
          <target state="translated">この方法は、以下のコードにも相当します。</target>
        </trans-unit>
        <trans-unit id="07f1a21ff3dd618112585d4b6991b2bf70586a3b" translate="yes" xml:space="preserve">
          <source>This method is also the standard mechanism for setting extended handlers.</source>
          <target state="translated">このメソッドは、拡張ハンドラを設定するための標準的な仕組みでもあります。</target>
        </trans-unit>
        <trans-unit id="026f6f13a19bcd38af6d3577b7bac7af7a220278" translate="yes" xml:space="preserve">
          <source>This method is always invoked by the thread performing acquire. If this method reports failure, the acquire method may queue the thread, if it is not already queued, until it is signalled by a release from some other thread.</source>
          <target state="translated">このメソッドは、常に acquire を実行するスレッドによって呼び出されます。このメソッドが失敗を報告した場合、他のスレッドからの解放がシグナルとして通知されるまでの間、 そのスレッドがまだキューに入っていない場合、 acquire メソッドはそのスレッドをキューに入れることができます。</target>
        </trans-unit>
        <trans-unit id="137f6f823ea807cb22f2663f25b917c4ea7368d9" translate="yes" xml:space="preserve">
          <source>This method is always invoked by the thread performing acquire. If this method reports failure, the acquire method may queue the thread, if it is not already queued, until it is signalled by a release from some other thread. This can be used to implement method &lt;a href=&quot;lock#tryLock()&quot;&gt;&lt;code&gt;Lock.tryLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、取得を実行するスレッドによって常に呼び出されます。このメソッドが失敗を報告した場合、acquireメソッドは、スレッドがまだキューに入れられていなければ、他のスレッドからの解放によって通知されるまで、スレッドをキューに入れることがあります。これは、メソッド&lt;a href=&quot;lock#tryLock()&quot;&gt; &lt;code&gt;Lock.tryLock()&lt;/code&gt; &lt;/a&gt;を実装するために使用できます。</target>
        </trans-unit>
        <trans-unit id="854e9e724162b78faf1d56eae1beffd001d61340" translate="yes" xml:space="preserve">
          <source>This method is always invoked by the thread performing acquire. If this method reports failure, the acquire method may queue the thread, if it is not already queued, until it is signalled by a release from some other thread. This can be used to implement method &lt;a href=&quot;lock#tryLock--&quot;&gt;&lt;code&gt;Lock.tryLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、取得を実行するスレッドによって常に呼び出されます。このメソッドが失敗を報告した場合、獲得メソッドは、他のスレッドからの解放によって通知されるまで、まだキューに入れられていなければ、そのスレッドをキューに入れます。これは、&lt;a href=&quot;lock#tryLock--&quot;&gt; &lt;code&gt;Lock.tryLock()&lt;/code&gt; &lt;/a&gt;メソッドを実装するために使用できます。</target>
        </trans-unit>
        <trans-unit id="c66c1667c9809f5bac5c98e29f63d17cebc866ae" translate="yes" xml:space="preserve">
          <source>This method is always invoked by the thread performing release.</source>
          <target state="translated">このメソッドは、リリースを実行するスレッドによって常に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e12a158fafb7dc3b19a42b2172f8a90668b184b7" translate="yes" xml:space="preserve">
          <source>This method is always synchronous, even if the &lt;code&gt;LSParser&lt;/code&gt; is asynchronous (&lt;code&gt;LSParser.async&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">このメソッドは、 &lt;code&gt;LSParser&lt;/code&gt; が非同期（ &lt;code&gt;LSParser.async&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; ）であっても、常に同期です。</target>
        </trans-unit>
        <trans-unit id="7d2837baf09f33244695dcef0eb90a4fa45160bf" translate="yes" xml:space="preserve">
          <source>This method is an exception to the general rule that the results of concurrently executing multiple methods in this class yields results equivalent to some serial execution. If the preferences at this node are modified concurrently with an invocation of this method, the exported preferences comprise a &quot;fuzzy snapshot&quot; of the preferences contained in the node; some of the concurrent modifications may be reflected in the exported data while others may not.</source>
          <target state="translated">このメソッドは、このクラスの複数のメソッドを同時に実行した結果が、いくつかのシリアル実行と同等の結果をもたらすという一般的なルールの例外です。このメソッドの呼び出しと同時にこのノードの環境設定が変更された場合、エクスポートされた環境設定は、ノードに含まれる環境設定の &quot;ファジー・スナップショット&quot; で構成されます。</target>
        </trans-unit>
        <trans-unit id="64dc8b5021c31bbaac7e73e665736fe1345660d5" translate="yes" xml:space="preserve">
          <source>This method is an exception to the general rule that the results of concurrently executing multiple methods in this class yields results equivalent to some serial execution. If the preferences or nodes in the subtree rooted at this node are modified concurrently with an invocation of this method, the exported preferences comprise a &quot;fuzzy snapshot&quot; of the subtree; some of the concurrent modifications may be reflected in the exported data while others may not.</source>
          <target state="translated">このメソッドは、このクラスの複数のメソッドを同時に実行した結果、いくつかのシリアル実行と同等の結果が得られるという一般的なルールの例外です。このノードでルートされているサブツリーのプリファレンスまたはノードが、このメソッドの呼び出しと同時に変更された場合、エクスポートされたプリファレンスはサブツリーの &quot;ファジー・スナップショット &quot;となります。</target>
        </trans-unit>
        <trans-unit id="f400661c1d342f7d8aad41a7c6671c648807f98c" translate="yes" xml:space="preserve">
          <source>This method is an exception to the general rule that the results of concurrently executing multiple methods in this class yields results equivalent to some serial execution. The method behaves as if implemented on top of the other public methods in this class, notably &lt;a href=&quot;#node(java.lang.String)&quot;&gt;&lt;code&gt;node(String)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#put(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;put(String, String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、このクラスで複数のメソッドを同時に実行した結果が、いくつかのシリアル実行と同等の結果をもたらすという一般的な規則の例外です。このメソッドは、このクラスの他のパブリックメソッド、特に&lt;a href=&quot;#node(java.lang.String)&quot;&gt; &lt;code&gt;node(String)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#put(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;put(String, String)&lt;/code&gt; &lt;/a&gt;上に実装されているかのように動作します。</target>
        </trans-unit>
        <trans-unit id="21fb541cdce5155c0679500a74475ea5393d42c3" translate="yes" xml:space="preserve">
          <source>This method is an exception to the general rule that the results of concurrently executing multiple methods in this class yields results equivalent to some serial execution. The method behaves as if implemented on top of the other public methods in this class, notably &lt;a href=&quot;preferences#node-java.lang.String-&quot;&gt;&lt;code&gt;node(String)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;preferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String, String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、このクラスで複数のメソッドを同時に実行した結果、シリアル実行と同等の結果が得られるという一般的な規則の例外です。メソッドは、このクラスの他のパブリックメソッド、特に&lt;a href=&quot;preferences#node-java.lang.String-&quot;&gt; &lt;code&gt;node(String)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;preferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String, String)&lt;/code&gt; &lt;/a&gt;上に実装されているかのように動作します。</target>
        </trans-unit>
        <trans-unit id="d454ff45511ed4b12e30e058a0a7a4d9e297bf46" translate="yes" xml:space="preserve">
          <source>This method is analogous to &lt;a href=&quot;../optional#flatMap(java.util.function.Function)&quot;&gt;&lt;code&gt;Optional.flatMap&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../stream/stream#flatMap(java.util.function.Function)&quot;&gt;&lt;code&gt;Stream.flatMap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../optional#flatMap(java.util.function.Function)&quot;&gt; &lt;code&gt;Optional.flatMap&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../stream/stream#flatMap(java.util.function.Function)&quot;&gt; &lt;code&gt;Stream.flatMap&lt;/code&gt; に&lt;/a&gt;類似しています。</target>
        </trans-unit>
        <trans-unit id="2463f5fc1b81bec103c907724c2f36a021463ab7" translate="yes" xml:space="preserve">
          <source>This method is analogous to &lt;a href=&quot;../optional#map(java.util.function.Function)&quot;&gt;&lt;code&gt;Optional.map&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../stream/stream#map(java.util.function.Function)&quot;&gt;&lt;code&gt;Stream.map&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../optional#map(java.util.function.Function)&quot;&gt; &lt;code&gt;Optional.map&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../stream/stream#map(java.util.function.Function)&quot;&gt; &lt;code&gt;Stream.map&lt;/code&gt; に&lt;/a&gt;類似しています。</target>
        </trans-unit>
        <trans-unit id="9082bb5b477fb1f55bdafc54e1299e80956114bb" translate="yes" xml:space="preserve">
          <source>This method is associated with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8542852fa3bffcff27089b4783d473c11ff3d44" translate="yes" xml:space="preserve">
          <source>This method is based on retaining the same instant, thus gaps and overlaps in the local time-line have no effect on the result.</source>
          <target state="translated">この方法は、同じ瞬間を保持することに基づいているため、ローカルタイムラインのギャップやオーバーラップは結果に影響を与えません。</target>
        </trans-unit>
        <trans-unit id="2ea95ed80c3052b46d554f1c216450a40eb76143" translate="yes" xml:space="preserve">
          <source>This method is called</source>
          <target state="translated">このメソッドは</target>
        </trans-unit>
        <trans-unit id="c7ba826bf2926f9d34022ed208953d3cd0c31bdc" translate="yes" xml:space="preserve">
          <source>This method is called after an object has been read but before it is returned from readObject. The default resolveObject method just returns the same object.</source>
          <target state="translated">このメソッドは、オブジェクトが読み込まれた後、readObject から返される前に呼び出されます。デフォルトの resolveObject メソッドは、同じオブジェクトを返すだけです。</target>
        </trans-unit>
        <trans-unit id="1e41b7352b64f668a6f154b30077af26b623a697" translate="yes" xml:space="preserve">
          <source>This method is called automatically when any layout-related information changes (e.g. setting the bounds of the component, or adding the component to a container).</source>
          <target state="translated">このメソッドは、レイアウト関連の情報が変更されたとき(コンポーネントの境界を設定したり、コンテナにコンポーネントを追加したりなど)に自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c2ec115e817a5f9e800984c8a3b6f72d8a0d799f" translate="yes" xml:space="preserve">
          <source>This method is called before the popup menu becomes invisible Note that a JPopupMenu can become invisible any time</source>
          <target state="translated">このメソッドは、ポップアップメニューが非表示になる前に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a1a18c830a10a79dcdf8619d12a902e2ae25c6f1" translate="yes" xml:space="preserve">
          <source>This method is called before the popup menu becomes visible</source>
          <target state="translated">このメソッドは、ポップアップメニューが表示される前に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="158cc5239e1d2551b871a6e06c9c9acc16a0ff50" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;#getDescription(javax.management.MBeanAttributeInfo)&quot;&gt;&lt;code&gt;getDescription(MBeanAttributeInfo)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getDescription(javax.management.MBeanOperationInfo)&quot;&gt;&lt;code&gt;getDescription(MBeanOperationInfo)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getDescription(javax.management.MBeanConstructorInfo)&quot;&gt;&lt;code&gt;getDescription(MBeanConstructorInfo)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#getDescription(javax.management.MBeanAttributeInfo)&quot;&gt; &lt;code&gt;getDescription(MBeanAttributeInfo)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getDescription(javax.management.MBeanOperationInfo)&quot;&gt; &lt;code&gt;getDescription(MBeanOperationInfo)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getDescription(javax.management.MBeanConstructorInfo)&quot;&gt; &lt;code&gt;getDescription(MBeanConstructorInfo)&lt;/code&gt; &lt;/a&gt;によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="148d9e498cc5dd8d17eff6748107ecc9ea243f34" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;#sendNotification(javax.management.Notification)&quot;&gt;&lt;code&gt;sendNotification&lt;/code&gt;&lt;/a&gt; for each listener in order to send the notification to that listener.</source>
          <target state="translated">このメソッドは、リスナーに通知を送信するために、リスナーごとに&lt;a href=&quot;#sendNotification(javax.management.Notification)&quot;&gt; &lt;code&gt;sendNotification&lt;/code&gt; &lt;/a&gt;によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a59be729890b290cb4c1d42c34f56ddf2639c2ef" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;#sendNotification(javax.management.Notification)&quot;&gt;&lt;code&gt;sendNotification&lt;/code&gt;&lt;/a&gt; for each listener in order to send the notification to that listener. It can be overridden in subclasses to change the behavior of notification delivery, for instance to deliver the notification in a separate thread.</source>
          <target state="translated">このメソッドは、リスナーに通知を送信するために、リスナーごとに&lt;a href=&quot;#sendNotification(javax.management.Notification)&quot;&gt; &lt;code&gt;sendNotification&lt;/code&gt; &lt;/a&gt;によって呼び出されます。サブクラスでオーバーライドして、通知配信の動作を変更できます。たとえば、別のスレッドで通知を配信できます。</target>
        </trans-unit>
        <trans-unit id="4c787ecfe88e1d5f8aa0eba53588be0c6ff0e643" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;../inputcontext#dispatchEvent(java.awt.AWTEvent)&quot;&gt;&lt;code&gt;InputContext.dispatchEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../inputcontext#dispatchEvent(java.awt.AWTEvent)&quot;&gt; &lt;code&gt;InputContext.dispatchEvent&lt;/code&gt; &lt;/a&gt;によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="cb1971f5866b834410f37778c00158042f066487" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;../inputcontext#dispose()&quot;&gt;&lt;code&gt;InputContext.dispose&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../inputcontext#dispose()&quot;&gt; &lt;code&gt;InputContext.dispose&lt;/code&gt; &lt;/a&gt;によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f2610aa79c8673183b2120e38fba59ed63d25e56" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;../inputcontext#getInputMethodControlObject()&quot;&gt;&lt;code&gt;InputContext.getInputMethodControlObject&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../inputcontext#getInputMethodControlObject()&quot;&gt; &lt;code&gt;InputContext.getInputMethodControlObject&lt;/code&gt; &lt;/a&gt;によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ff341e7bc5d46602416051f72c683475703a0480" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;../inputcontext#reconvert()&quot;&gt;&lt;code&gt;InputContext.reconvert&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../inputcontext#reconvert()&quot;&gt; &lt;code&gt;InputContext.reconvert&lt;/code&gt; &lt;/a&gt;によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="3bff94f1340fb1f9335c9c4ecce1071136f2d6e6" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;../inputcontext#removeNotify(java.awt.Component)&quot;&gt;&lt;code&gt;InputContext.removeNotify&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../inputcontext#removeNotify(java.awt.Component)&quot;&gt; &lt;code&gt;InputContext.removeNotify&lt;/code&gt; &lt;/a&gt;によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="79425ac1087fb3dd51e651191d4533cb7b19b8da" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;notificationbroadcastersupport#sendNotification-javax.management.Notification-&quot;&gt;&lt;code&gt;sendNotification&lt;/code&gt;&lt;/a&gt; for each listener in order to send the notification to that listener. It can be overridden in subclasses to change the behavior of notification delivery, for instance to deliver the notification in a separate thread.</source>
          <target state="translated">このメソッドは、通知をリスナーに送信するために、リスナーごとに&lt;a href=&quot;notificationbroadcastersupport#sendNotification-javax.management.Notification-&quot;&gt; &lt;code&gt;sendNotification&lt;/code&gt; &lt;/a&gt;によって呼び出されます。サブクラスでオーバーライドして、通知配信の動作を変更することができます。たとえば、別のスレッドで通知を配信することができます。</target>
        </trans-unit>
        <trans-unit id="1ee68b73f449a54624673c8c02a1a403a8f6e744" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanAttributeInfo-&quot;&gt;&lt;code&gt;getDescription(MBeanAttributeInfo)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanOperationInfo-&quot;&gt;&lt;code&gt;getDescription(MBeanOperationInfo)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanConstructorInfo-&quot;&gt;&lt;code&gt;getDescription(MBeanConstructorInfo)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanAttributeInfo-&quot;&gt; &lt;code&gt;getDescription(MBeanAttributeInfo)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanOperationInfo-&quot;&gt; &lt;code&gt;getDescription(MBeanOperationInfo)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanConstructorInfo-&quot;&gt; &lt;code&gt;getDescription(MBeanConstructorInfo)&lt;/code&gt; &lt;/a&gt;によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="abe5b4a02d79b6ed369f46a9ad3120a21f027d94" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;code&gt;installUI&lt;/code&gt;.</source>
          <target state="translated">このメソッドは &lt;code&gt;installUI&lt;/code&gt; によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="5822ab480991ae893767f5fa62a415c8f564a823" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;code&gt;uninstallUI&lt;/code&gt;.</source>
          <target state="translated">このメソッドは &lt;code&gt;uninstallUI&lt;/code&gt; によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="78c36fbc7bd9b7e18589c618e0c328aa179c6064" translate="yes" xml:space="preserve">
          <source>This method is called by AWT when the invalidate method is called on the Container. Since the invalidate method may be called asynchronously to the event thread, this method may be called asynchronously.</source>
          <target state="translated">このメソッドは、コンテナ上でinvalidateメソッドが呼び出されたときに、AWTによって呼び出されます。invalidateメソッドはイベントスレッドに対して非同期に呼び出される可能性があるため、このメソッドは非同期に呼び出される可能性があります。</target>
        </trans-unit>
        <trans-unit id="6c6e929bbce3c103de0eef6428de998ec76d5193" translate="yes" xml:space="preserve">
          <source>This method is called by a &lt;code&gt;FilteredRowSet&lt;/code&gt; object to check whether the value lies between the filtering criterion (or criteria if multiple constraints exist) set using the &lt;code&gt;setFilter()&lt;/code&gt; method.</source>
          <target state="translated">このメソッドは &lt;code&gt;FilteredRowSet&lt;/code&gt; オブジェクトによって呼び出され、 &lt;code&gt;setFilter()&lt;/code&gt; メソッドを使用して設定されたフィルタリング基準（または複数の制約が存在する場合は基準）の間に値があるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="4eadd8fa5a1b76cb8181cbe7fd16cd75fe41648e" translate="yes" xml:space="preserve">
          <source>This method is called by components &lt;code&gt;prepareImage&lt;/code&gt; methods.</source>
          <target state="translated">このメソッドは、コンポーネントの &lt;code&gt;prepareImage&lt;/code&gt; メソッドによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7e4285348f892222bf022a4ee8689f23ff034614" translate="yes" xml:space="preserve">
          <source>This method is called by installUI to get the editor component of the &lt;code&gt;JSpinner&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、installUIによって呼び出され、 &lt;code&gt;JSpinner&lt;/code&gt; のエディターコンポーネントを取得します。</target>
        </trans-unit>
        <trans-unit id="c8575edcd7b394b0ef790ff68e1bc217aa8f95ed" translate="yes" xml:space="preserve">
          <source>This method is called by installUI to get the editor component of the &lt;code&gt;JSpinner&lt;/code&gt;. By default it just returns &lt;code&gt;JSpinner.getEditor()&lt;/code&gt;. Subclasses can override &lt;code&gt;createEditor&lt;/code&gt; to return a component that contains the spinner's editor or null, if they're going to handle adding the editor to the &lt;code&gt;JSpinner&lt;/code&gt; in an &lt;code&gt;installUI&lt;/code&gt; override.</source>
          <target state="translated">このメソッドは、installUIによって呼び出され、 &lt;code&gt;JSpinner&lt;/code&gt; のエディターコンポーネントを取得します。デフォルトでは、 &lt;code&gt;JSpinner.getEditor()&lt;/code&gt; を返すだけです。サブクラスは、 &lt;code&gt;createEditor&lt;/code&gt; をオーバーライドして、スピナーのエディターを含むコンポーネントを返すか、 &lt;code&gt;installUI&lt;/code&gt; オーバーライドで &lt;code&gt;JSpinner&lt;/code&gt; へのエディターの追加を処理する場合はnullを返すことができます。</target>
        </trans-unit>
        <trans-unit id="51594e02f9eba30f23b0c316d7b641c815bc036c" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;code&gt;FilteredRowSet&lt;/code&gt; object to check whether the value lies between the filtering criteria set using the setFilter method.</source>
          <target state="translated">このメソッドは &lt;code&gt;FilteredRowSet&lt;/code&gt; オブジェクトによって呼び出され、setFilterメソッドを使用して設定されたフィルタリング基準の間に値が存在するかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="3de0b2e3cdbdaf07c4fa04462cd483d787e7bcde" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;code&gt;LoginContext&lt;/code&gt; after this &lt;code&gt;LoginModule&lt;/code&gt; has been instantiated. The purpose of this method is to initialize this &lt;code&gt;LoginModule&lt;/code&gt; with the relevant information. If this &lt;code&gt;LoginModule&lt;/code&gt; does not understand any of the data stored in &lt;code&gt;sharedState&lt;/code&gt; or &lt;code&gt;options&lt;/code&gt; parameters, they can be ignored.</source>
          <target state="translated">このメソッドは、この &lt;code&gt;LoginModule&lt;/code&gt; がインスタンス化された後に &lt;code&gt;LoginContext&lt;/code&gt; によって呼び出されます。このメソッドの目的は、この &lt;code&gt;LoginModule&lt;/code&gt; を関連情報で初期化することです。この &lt;code&gt;LoginModule&lt;/code&gt; が &lt;code&gt;sharedState&lt;/code&gt; または &lt;code&gt;options&lt;/code&gt; パラメータに格納されているデータをまったく理解しない場合、それらは無視できます。</target>
        </trans-unit>
        <trans-unit id="e11ab4932ac374e31fa0b944a33cd4ccc0325ce4" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;code&gt;clear&lt;/code&gt; operation on this list and its subLists. Overriding this method to take advantage of the internals of the list implementation can</source>
          <target state="translated">このメソッドは、このリストとそのサブリストの &lt;code&gt;clear&lt;/code&gt; 操作によって呼び出されます。このメソッドをオーバーライドして、リスト実装の内部を利用すると、</target>
        </trans-unit>
        <trans-unit id="16983a0b5c69ac5b6174ce76db7b6ed59b401a9d" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;code&gt;loadClass&lt;/code&gt; method of some class loaders.</source>
          <target state="translated">このメソッドは、一部のクラスローダーの &lt;code&gt;loadClass&lt;/code&gt; メソッドによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="96196245341248b20f0b672f3d0fe197fee491b6" translate="yes" xml:space="preserve">
          <source>This method is called by the AWT event dispatcher requesting that the current KeyboardFocusManager dispatch the specified event on its behalf.</source>
          <target state="translated">このメソッドは、AWTイベントディスパッチャから呼び出され、現在のKeyboardFocusManagerが指定されたイベントをディスパッチするように要求します。</target>
        </trans-unit>
        <trans-unit id="62a269bbea2146aed4fe1bd92818f0fa37c8b53e" translate="yes" xml:space="preserve">
          <source>This method is called by the AWT event dispatcher requesting that the current KeyboardFocusManager dispatch the specified event on its behalf. DefaultKeyboardFocusManagers dispatch all FocusEvents, all WindowEvents related to focus, and all KeyEvents. These events are dispatched based on the KeyboardFocusManager's notion of the focus owner and the focused and active Windows, sometimes overriding the source of the specified AWTEvent. If this method returns &lt;code&gt;false&lt;/code&gt;, then the AWT event dispatcher will attempt to dispatch the event itself.</source>
          <target state="translated">このメソッドは、現在のKeyboardFocusManagerがその代わりに指定されたイベントをディスパッチすることを要求するAWTイベントディスパッチャーによって呼び出されます。DefaultKeyboardFocusManagersは、すべてのFocusEvents、フォーカスに関連するすべてのWindowEvents、およびすべてのKeyEventsをディスパッチします。これらのイベントは、KeyboardFocusManagerのフォーカス所有者とフォーカスされたアクティブなWindowsの概念に基づいてディスパッチされ、指定されたAWTEventのソースをオーバーライドする場合があります。このメソッドが &lt;code&gt;false&lt;/code&gt; を返す場合、AWTイベントディスパッチャはイベント自体をディスパッチしようとします。</target>
        </trans-unit>
        <trans-unit id="3cd8788bbf971b4fffcc5210be356e5e3a784e2c" translate="yes" xml:space="preserve">
          <source>This method is called by the AWT event dispatcher requesting that the current KeyboardFocusManager dispatch the specified event on its behalf. It is expected that all KeyboardFocusManagers will dispatch all FocusEvents, all WindowEvents related to focus, and all KeyEvents. These events should be dispatched based on the KeyboardFocusManager's notion of the focus owner and the focused and active Windows, sometimes overriding the source of the specified AWTEvent. Dispatching must be done using &lt;code&gt;redispatchEvent&lt;/code&gt; to prevent the AWT event dispatcher from recursively requesting that the KeyboardFocusManager dispatch the event again. If this method returns &lt;code&gt;false&lt;/code&gt;, then the AWT event dispatcher will attempt to dispatch the event itself.</source>
          <target state="translated">このメソッドは、現在のKeyboardFocusManagerがその代わりに指定されたイベントをディスパッチすることを要求するAWTイベントディスパッチャーによって呼び出されます。すべてのKeyboardFocusManagerは、すべてのFocusEvents、フォーカスに関連するすべてのWindowEvents、およびすべてのKeyEventsをディスパッチすることが期待されています。これらのイベントは、KeyboardFocusManagerのフォーカス所有者とフォーカスされたアクティブなWindowsの概念に基づいてディスパッチする必要があり、指定されたAWTEventのソースをオーバーライドする場合があります。AWTイベントディスパッチャーがKeyboardFocusManagerがイベントを再度 &lt;code&gt;redispatchEvent&lt;/code&gt; することを再帰的に要求しないようにするには、redispatchEventを使用してディスパッチを実行する必要があります。このメソッドが &lt;code&gt;false&lt;/code&gt; を返す場合、AWTイベントディスパッチャはイベント自体をディスパッチしようとします。</target>
        </trans-unit>
        <trans-unit id="eab8d65001f11023e79a91da8407b01caedde4b4" translate="yes" xml:space="preserve">
          <source>This method is called by the component's &lt;code&gt;checkImage&lt;/code&gt; methods.</source>
          <target state="translated">このメソッドは、コンポーネントの &lt;code&gt;checkImage&lt;/code&gt; メソッドによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a706401d3613ffe809e69feb9da559c71b74cf15" translate="yes" xml:space="preserve">
          <source>This method is called by the constructors to create the &lt;code&gt;JComponent&lt;/code&gt; that displays the current value of the sequence.</source>
          <target state="translated">このメソッドは、シーケンスの現在の値を表示する &lt;code&gt;JComponent&lt;/code&gt; を作成するためにコンストラクターによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="fa5bda590a4a2702fc8acd477a43d6a8ac040c64" translate="yes" xml:space="preserve">
          <source>This method is called by the constructors to create the &lt;code&gt;JComponent&lt;/code&gt; that displays the current value of the sequence. The editor may also allow the user to enter an element of the sequence directly. An editor must listen for &lt;code&gt;ChangeEvents&lt;/code&gt; on the &lt;code&gt;model&lt;/code&gt; and keep the value it displays in sync with the value of the model.</source>
          <target state="translated">このメソッドは、シーケンスの現在の値を表示する &lt;code&gt;JComponent&lt;/code&gt; を作成するためにコンストラクターによって呼び出されます。エディタは、ユーザーがシーケンスの要素を直接入力できるようにする場合もあります。編集者は、 &lt;code&gt;model&lt;/code&gt; &lt;code&gt;ChangeEvents&lt;/code&gt; をリッスンし、表示される値をモデルの値と同期させておく必要があります。</target>
        </trans-unit>
        <trans-unit id="08e88c55fb817a13854413c06eb1248bcb9bfc0b" translate="yes" xml:space="preserve">
          <source>This method is called by the current KeyboardFocusManager requesting that this KeyEventDispatcher dispatch the specified event on its behalf.</source>
          <target state="translated">このメソッドは、現在の KeyboardFocusManager によって呼び出され、この KeyEventDispatcher が指定されたイベントをディスパッチするように要求します。</target>
        </trans-unit>
        <trans-unit id="4fb713ed39b2e2bdbc5887ee28711789834dadb1" translate="yes" xml:space="preserve">
          <source>This method is called by the current KeyboardFocusManager requesting that this KeyEventDispatcher dispatch the specified event on its behalf. This KeyEventDispatcher is free to retarget the event, consume it, dispatch it itself, or make other changes. This capability is typically used to deliver KeyEvents to Components other than the focus owner. This can be useful when navigating children of non-focusable Windows in an accessible environment, for example. Note that if a KeyEventDispatcher dispatches the KeyEvent itself, it must use &lt;code&gt;redispatchEvent&lt;/code&gt; to prevent the current KeyboardFocusManager from recursively requesting that this KeyEventDispatcher dispatch the event again.</source>
          <target state="translated">このメソッドは、現在のKeyboardFocusManagerによって呼び出され、このKeyEventDispatcherが指定されたイベントを代わりにディスパッチするように要求します。このKeyEventDispatcherは、イベントの再ターゲット、消費、ディスパッチ、またはその他の変更を自由に行うことができます。この機能は通常、フォーカス所有者以外のコンポーネントにKeyEventを配信するために使用されます。これは、たとえば、アクセス可能な環境でフォーカスできないWindowsの子をナビゲートするときに役立ちます。 KeyEventDispatcherがKeyEvent自体を &lt;code&gt;redispatchEvent&lt;/code&gt; する場合は、redispatchEventを使用して、現在のKeyboardFocusManagerがこのKeyEventDispatcherがイベントを再度ディスパッチするように再帰的に要求しないようにする必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8721dadc199fed2fa3aa4c04f429272992094d05" translate="yes" xml:space="preserve">
          <source>This method is called by the current KeyboardFocusManager, requesting that this KeyEventPostProcessor perform any necessary post-processing which should be part of the KeyEvent's final resolution.</source>
          <target state="translated">このメソッドは、現在の KeyboardFocusManager によって呼び出され、この KeyEventPostProcessor が KeyEvent の最終的な解決の一部である必要な後処理を実行するように要求します。</target>
        </trans-unit>
        <trans-unit id="0fafc9ec7e2bb975511df409b7378e05f52b7ff2" translate="yes" xml:space="preserve">
          <source>This method is called by the current KeyboardFocusManager, requesting that this KeyEventPostProcessor perform any necessary post-processing which should be part of the KeyEvent's final resolution. At the time this method is invoked, typically the KeyEvent has already been dispatched to and handled by its target. However, if no Component in the application currently owns the focus, then the KeyEvent has not been dispatched to any Component. Typically, KeyEvent post-processing will be used to implement features which require global KeyEvent post-handling, such as menu shortcuts. Note that if a KeyEventPostProcessor wishes to dispatch the KeyEvent, it must use &lt;code&gt;redispatchEvent&lt;/code&gt; to prevent the AWT from recursively requesting that this KeyEventPostProcessor perform post-processing of the event again.</source>
          <target state="translated">このメソッドは、現在のKeyboardFocusManagerによって呼び出され、このKeyEventPostProcessorが、KeyEventの最終的な解決の一部である必要がある必要な後処理を実行するように要求します。このメソッドが呼び出された時点で、通常、KeyEventはすでにターゲットにディスパッチされ、ターゲットによって処理されています。ただし、アプリケーション内のどのコンポーネントも現在フォーカスを所有していない場合、KeyEventはどのコンポーネントにもディスパッチされていません。通常、KeyEvent後処理は、メニューショートカットなど、グローバルなKeyEvent後処理を必要とする機能を実装するために使用されます。 KeyEventPostProcessorがKeyEventを &lt;code&gt;redispatchEvent&lt;/code&gt; する場合は、redispatchEventを使用して、AWTがこのKeyEventPostProcessorにイベントの後処理を再度実行するように再帰的に要求しないようにする必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a9c102bcf51095e621b5b8e2021b08fb181e809b" translate="yes" xml:space="preserve">
          <source>This method is called by the toolkit internally and should not be called directly by programs. Code overriding this method should call &lt;code&gt;super.removeNotify&lt;/code&gt; as the first line of the overriding method.</source>
          <target state="translated">このメソッドはツールキットによって内部的に呼び出されるため、プログラムから直接呼び出すことはできません。このメソッドをオーバーライドするコードは、オーバーライドするメソッドの最初の行として &lt;code&gt;super.removeNotify&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="5a8d3936ceec8a0addfb729f9bcd067526799a89" translate="yes" xml:space="preserve">
          <source>This method is called by trusted subclasses of ObjectInputStream that constructed ObjectInputStream using the protected no-arg constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc3e12dbe7d61a7a2ced2b65d983a2f99e47f89" translate="yes" xml:space="preserve">
          <source>This method is called by trusted subclasses of ObjectInputStream that constructed ObjectInputStream using the protected no-arg constructor. The subclass is expected to provide an override method with the modifier &quot;final&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e609540e5ada6526046320bca805295867460b" translate="yes" xml:space="preserve">
          <source>This method is called by trusted subclasses of ObjectOutputStream that constructed ObjectOutputStream using the protected no-arg constructor.</source>
          <target state="translated">このメソッドは、保護された no-arg コンストラクタを使用して ObjectOutputStream を構築した ObjectOutputStream の信頼されたサブクラスによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="07cced3d72aa75fe15d69546e9ed868a56713ecf" translate="yes" xml:space="preserve">
          <source>This method is called by trusted subclasses of ObjectOutputStream that constructed ObjectOutputStream using the protected no-arg constructor. The subclass is expected to provide an override method with the modifier &quot;final&quot;.</source>
          <target state="translated">このメソッドは、保護された no-arg コンストラクタを使用して ObjectOutputStream を構築した ObjectOutputStream の信頼されたサブクラスによって呼び出されます。サブクラスは、修飾子 &quot;final&quot; を持つオーバーライドメソッドを提供することが期待されています。</target>
        </trans-unit>
        <trans-unit id="ab47d4a71e2e6b30c5f86017969bd0e1c4033693" translate="yes" xml:space="preserve">
          <source>This method is called each time the user requests a unit scroll.</source>
          <target state="translated">このメソッドは、ユーザがユニットスクロールを要求するたびに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0d0e648fcdb59d9e3a7ce6bcb5edadfe481a4723" translate="yes" xml:space="preserve">
          <source>This method is called exactly once for each unique proxy class descriptor in the stream.</source>
          <target state="translated">このメソッドは、ストリーム内の一意のプロキシクラス記述子ごとに一度だけ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4902d3756b01e69bda499308c33de60ca1a4f179" translate="yes" xml:space="preserve">
          <source>This method is called exactly once for each unique proxy class descriptor in the stream. The default implementation of this method in &lt;code&gt;ObjectOutputStream&lt;/code&gt; does nothing.</source>
          <target state="translated">このメソッドは、ストリーム内の一意のプロキシクラス記述子ごとに1回だけ呼び出されます。 &lt;code&gt;ObjectOutputStream&lt;/code&gt; でのこのメソッドのデフォルト実装は何もしません。</target>
        </trans-unit>
        <trans-unit id="668803da70b120993b475636cc80a01040df1564" translate="yes" xml:space="preserve">
          <source>This method is called for each parameter name/value pair and should return the normalized representation of the &lt;code&gt;parameterValue&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、パラメーター名と値のペアごとに呼び出され、parameterValueの正規化された表現を返す必要があり &lt;code&gt;parameterValue&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b16e23c438d362138bbd158668a5915c5bea4f4" translate="yes" xml:space="preserve">
          <source>This method is called from the default implementation of the &lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;getBundle(String, Locale)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;getBundle(String, Locale)&lt;/code&gt; &lt;/a&gt;メソッドのデフォルトの実装から呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0ff7635964cce9a2b09366d8936a1667c8418954" translate="yes" xml:space="preserve">
          <source>This method is called if the LoginContext's overall authentication failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62861d342032164149b4be32e3cdb512c31df69" translate="yes" xml:space="preserve">
          <source>This method is called if the LoginContext's overall authentication failed. (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules did not succeed).</source>
          <target state="translated">このメソッドは、LoginContext の全体的な認証に失敗した場合に呼び出されます。(関連する REQUIRED、REQUISITE、SUFFICIENT および OPTIONAL LoginModules が成功しなかった場合)。</target>
        </trans-unit>
        <trans-unit id="d7098aa1df43974ecddcceb11655f6df1d3b3f56" translate="yes" xml:space="preserve">
          <source>This method is called if the LoginContext's overall authentication succeeded (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules succeeded).</source>
          <target state="translated">このメソッドは、LoginContext の全体的な認証に成功した場合に呼び出されます (関連する REQUIRED、REQUISITE、SUFFICIENT および OPTIONAL LoginModules が成功した場合)。</target>
        </trans-unit>
        <trans-unit id="bce777a733f30b40b8e120285a1a945882c77d8d" translate="yes" xml:space="preserve">
          <source>This method is called if the overall authentication failed. (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules did not succeed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73138ad40dfe8f1f035e3713fc82e027cc055f9" translate="yes" xml:space="preserve">
          <source>This method is called in response to a call to &lt;code&gt;repaint&lt;/code&gt;. The canvas is first cleared by filling it with the background color, and then completely redrawn by calling this canvas's &lt;code&gt;paint&lt;/code&gt; method. Note: applications that override this method should either call super.update(g) or incorporate the functionality described above into their own code.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;repaint&lt;/code&gt; の呼び出しに応答して呼び出されます。キャンバスは、最初に背景色で塗りつぶしてクリアし、次にこのキャンバスの &lt;code&gt;paint&lt;/code&gt; メソッドを呼び出して完全に再描画します。注：このメソッドをオーバーライドするアプリケーションは、super.update（g）を呼び出すか、上記の機能を独自のコードに組み込む必要があります。</target>
        </trans-unit>
        <trans-unit id="1d0e91b2b0ec3e9627bea546c5687154c565e963" translate="yes" xml:space="preserve">
          <source>This method is called internally after the any modified values in the current row have been synchronized with the data source. The current row must be tagged as no longer inserted, deleted or updated.</source>
          <target state="translated">このメソッドは、現在の行の変更された値がデータ・ソースと同期化された後に内部的に呼び出されます。現在の行は、もはや挿入、削除、更新されていないとタグ付けされている必要があります。</target>
        </trans-unit>
        <trans-unit id="40c671b49d4481faf4c6abe49a51cd253275b713" translate="yes" xml:space="preserve">
          <source>This method is called internally by the &lt;code&gt;setCommand&lt;/code&gt; method to clear all of the parameters set for the previous command.</source>
          <target state="translated">このメソッドは、前のコマンドに設定されたすべてのパラメーターをクリアするために、 &lt;code&gt;setCommand&lt;/code&gt; メソッドによって内部的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7425d80641a211430f584e850e5d60ec11180445" translate="yes" xml:space="preserve">
          <source>This method is called on the error handler when an error occurs.</source>
          <target state="translated">このメソッドは、エラーが発生したときにエラーハンドラで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0da23fb97961c817b3aa6d45ae24b2b7dde1e6d9" translate="yes" xml:space="preserve">
          <source>This method is called once immediately after instantiating this input method.</source>
          <target state="translated">このメソッドは、この入力メソッドをインスタンス化した直後に一度だけ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7c368290535afffaa4821caf905a0e01d5eba0b7" translate="yes" xml:space="preserve">
          <source>This method is called only once when each object is first encountered. All subsequent references to the object will be redirected to the new object.</source>
          <target state="translated">このメソッドは、各オブジェクトが最初に遭遇したときに一度だけ呼び出されます。それ以降のオブジェクトへのすべての参照は、新しいオブジェクトにリダイレクトされます。</target>
        </trans-unit>
        <trans-unit id="33de51ae564d5ca1f29b4fe2db0bfe64dafb039f" translate="yes" xml:space="preserve">
          <source>This method is called only once when each object is first encountered. All subsequent references to the object will be redirected to the new object. This method should return the object to be substituted or the original object.</source>
          <target state="translated">このメソッドは、各オブジェクトが最初に遭遇したときに一度だけ呼び出されます。それ以降のオブジェクトへのすべての参照は、新しいオブジェクトにリダイレクトされます。このメソッドは、置換されるオブジェクトまたは元のオブジェクトを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="f94351efc79c41fe0153823b3f805af002bd870b" translate="yes" xml:space="preserve">
          <source>This method is called repeatedly during a drag and drop operation to allow the developer to configure properties of, and to return the acceptability of transfers; with a return value of &lt;code&gt;true&lt;/code&gt; indicating that the transfer represented by the given &lt;code&gt;TransferSupport&lt;/code&gt; (which contains all of the details of the transfer) is acceptable at the current time, and a value of &lt;code&gt;false&lt;/code&gt; rejecting the transfer.</source>
          <target state="translated">このメソッドは、ドラッグアンドドロップ操作中に繰り返し呼び出され、開発者がのプロパティを構成し、転送の受け入れ可能性を返すことができるようにします。戻り値 &lt;code&gt;true&lt;/code&gt; は、指定された &lt;code&gt;TransferSupport&lt;/code&gt; （転送のすべての詳細を含む）によって表される転送が現時点で受け入れ可能であることを示し、 &lt;code&gt;false&lt;/code&gt; の値は転送を拒否します。</target>
        </trans-unit>
        <trans-unit id="a0eed4d586185f4ffd1f91f2ebfffd35acbc4f03" translate="yes" xml:space="preserve">
          <source>This method is called to determine if the resource manager instance represented by the target object is the same as the resouce manager instance represented by the parameter</source>
          <target state="translated">このメソッドは、ターゲットオブジェクトが表すリソースマネージャのインスタンスが、パラメータ</target>
        </trans-unit>
        <trans-unit id="d1292d3d9de7277667d188cc1d8ef38c4478e139" translate="yes" xml:space="preserve">
          <source>This method is called to submit a form in response to a click on an image -- an &amp;lt;INPUT&amp;gt; form element of type &quot;image&quot;.</source>
          <target state="translated">このメソッドは、画像のクリックに応答してフォームを送信するために呼び出されます。これは、「image」タイプの&amp;lt;INPUT&amp;gt;フォーム要素です。</target>
        </trans-unit>
        <trans-unit id="068dab729154aa667cdce9f52f55abeef31ce05c" translate="yes" xml:space="preserve">
          <source>This method is called when a container calls its &lt;code&gt;getMinimumSize&lt;/code&gt; method. Most applications do not call this method directly.</source>
          <target state="translated">このメソッドは、コンテナーが &lt;code&gt;getMinimumSize&lt;/code&gt; メソッドを呼び出すときに呼び出されます。ほとんどのアプリケーションは、このメソッドを直接呼び出しません。</target>
        </trans-unit>
        <trans-unit id="e7ddcda585d8eb0c34c43752ae7410aca0f78d51" translate="yes" xml:space="preserve">
          <source>This method is called when a recoverable exception has been caught.</source>
          <target state="translated">このメソッドは、回復可能な例外が捕捉された場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7ab79e96d5e1eb6d413b78b2d871e7dbb2a7ab3a" translate="yes" xml:space="preserve">
          <source>This method is called when information about an image which was previously requested using an asynchronous interface becomes available.</source>
          <target state="translated">このメソッドは、以前に非同期インターフェースを使用して要求された画像に関する情報が利用可能になったときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="55143e3ff5be3ce84c1386fc6ebba055dbe1ca74" translate="yes" xml:space="preserve">
          <source>This method is called when information about an image which was previously requested using an asynchronous interface becomes available. Asynchronous interfaces are method calls such as getWidth(ImageObserver) and drawImage(img, x, y, ImageObserver) which take an ImageObserver object as an argument. Those methods register the caller as interested either in information about the overall image itself (in the case of getWidth(ImageObserver)) or about an output version of an image (in the case of the drawImage(img, x, y, [w, h,] ImageObserver) call).</source>
          <target state="translated">このメソッドは、以前に非同期インターフェースを使用して要求された画像に関する情報が利用可能になったときに呼び出されます。非同期インターフェースとは、getWidth(ImageObserver)やdrawImage(img,x,y,ImageObserver)のような、ImageObserverオブジェクトを引数に取るメソッド呼び出しのことです。これらのメソッドは,呼び出し元を,画像全体の情報(getWidth(ImageObserver)の場合)や画像の出力バージョン(drawImage(img,x,y,[w,h,]ImageObserver)の呼び出しの場合)に興味があるものとして登録します.</target>
        </trans-unit>
        <trans-unit id="ce2fc127451c7e31c5913cdb0568429a74bf929f" translate="yes" xml:space="preserve">
          <source>This method is called when the contents of the component should be painted; such as when the component is first being shown or is damaged and in need of repair. The clip rectangle in the &lt;code&gt;Graphics&lt;/code&gt; parameter is set to the area which needs to be painted. Subclasses of &lt;code&gt;Component&lt;/code&gt; that override this method need not call &lt;code&gt;super.paint(g)&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、コンポーネントのコンテンツをペイントする必要があるときに呼び出されます。コンポーネントが最初に表示されたとき、または損傷していて修理が必要なときなど。 &lt;code&gt;Graphics&lt;/code&gt; パラメータのクリップ長方形は、ペイントする必要のある領域に設定されています。このメソッドをオーバーライドする &lt;code&gt;Component&lt;/code&gt; のサブクラスは、 &lt;code&gt;super.paint(g)&lt;/code&gt; を呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="341439874d0b5630ceceea69d18dab9b69756dd0" translate="yes" xml:space="preserve">
          <source>This method is called when the frame becomes selected.</source>
          <target state="translated">このメソッドは、フレームが選択状態になったときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="eb828197d426f8558d7c6787dab9471dbf3a206e" translate="yes" xml:space="preserve">
          <source>This method is called when the frame becomes selected. This action is delegated to the desktopManager.</source>
          <target state="translated">このメソッドは、フレームが選択状態になったときに呼び出されます。このアクションはdesktopManagerに委譲されます。</target>
        </trans-unit>
        <trans-unit id="8a39e9860a715b851fed3c9e8095a515d83286b3" translate="yes" xml:space="preserve">
          <source>This method is called when the frame is no longer selected.</source>
          <target state="translated">このメソッドは、フレームが選択されなくなったときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7783c5ae1cb71f6a4b8c3dfaa04c3aab84743d56" translate="yes" xml:space="preserve">
          <source>This method is called when the frame is no longer selected. This action is delegated to the desktopManager.</source>
          <target state="translated">このメソッドは、フレームが選択されなくなったときに呼び出されます。このアクションは desktopManager に委譲されます。</target>
        </trans-unit>
        <trans-unit id="46417986305582645648e197e476e93ef6e4c9bc" translate="yes" xml:space="preserve">
          <source>This method is called when the popup menu is canceled</source>
          <target state="translated">このメソッドは、ポップアップメニューがキャンセルされたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0eb89c25e5822dc692763541c6b9178b62709a58" translate="yes" xml:space="preserve">
          <source>This method is called when the spinner's model's state changes.</source>
          <target state="translated">このメソッドは、スピナーのモデルの状態が変化したときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="bdb7c24844631b153208e5fbdd5c747a5ba3eec2" translate="yes" xml:space="preserve">
          <source>This method is called when the spinner's model's state changes. It sets the &lt;code&gt;value&lt;/code&gt; of the text field to the current value of the spinners model.</source>
          <target state="translated">このメソッドは、スピナーのモデルの状態が変化したときに呼び出されます。テキストフィールドの値をスピナーモデルの現在の値に設定し &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa63dac936486538d8e5c6256ff60a9716579dfb" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to close the frame.</source>
          <target state="translated">このメソッドは、ユーザーがフレームを閉じたいときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="93aa017dd25b46f737df3a8f3b3cb5b43556349d" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to close the frame. The &lt;code&gt;playCloseSound&lt;/code&gt; Action is fired. This action is delegated to the desktopManager.</source>
          <target state="translated">このメソッドは、ユーザーがフレームを閉じたいときに呼び出されます。 &lt;code&gt;playCloseSound&lt;/code&gt; アクションが発射されます。このアクションはdesktopManagerに委任されます。</target>
        </trans-unit>
        <trans-unit id="4688052964dd5ada15f085cf02409aeb6d35e7c4" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to deiconify the frame.</source>
          <target state="translated">このメソッドは、ユーザーがフレームをデアイコン化したい場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="b1e3dd5b85dfe123a3cb6c5689eb818cdc8f3ed2" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to deiconify the frame. The &lt;code&gt;playRestoreUpSound&lt;/code&gt; Action is fired. This action is delegated to the desktopManager.</source>
          <target state="translated">このメソッドは、ユーザーがフレームを非アイコン化するときに呼び出されます。 &lt;code&gt;playRestoreUpSound&lt;/code&gt; アクションが発射されます。このアクションはdesktopManagerに委任されます。</target>
        </trans-unit>
        <trans-unit id="5917f54542bf2e9b862425b4cbfc5cab686b7c34" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to iconify the frame.</source>
          <target state="translated">このメソッドは、ユーザーがフレームをアイコン化したい場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ccb80988993d08a7dc14bd540a8a82635affec54" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to iconify the frame. The &lt;code&gt;playMinimizeSound&lt;/code&gt; Action is fired. This action is delegated to the desktopManager.</source>
          <target state="translated">このメソッドは、ユーザーがフレームをアイコン化するときに呼び出されます。 &lt;code&gt;playMinimizeSound&lt;/code&gt; アクションが発射されます。このアクションはdesktopManagerに委任されます。</target>
        </trans-unit>
        <trans-unit id="85c067791e6333fa32d7ff14282adcefa288da2a" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to maximize the frame.</source>
          <target state="translated">このメソッドは、ユーザーがフレームを最大化したい場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="b762b368a2f813892990a6021afdfccf7cfd521b" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to maximize the frame. The &lt;code&gt;playMaximizeSound&lt;/code&gt; Action is fired. This action is delegated to the desktopManager.</source>
          <target state="translated">このメソッドは、ユーザーがフレームを最大化したいときに呼び出されます。 &lt;code&gt;playMaximizeSound&lt;/code&gt; アクションが発射されます。このアクションはdesktopManagerに委任されます。</target>
        </trans-unit>
        <trans-unit id="f2f32ddc0861e8f7d9021355838abba76eb6d68c" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to minimize the frame.</source>
          <target state="translated">このメソッドは、ユーザーがフレームを最小化したい場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0aae1ad268f13724c9ef54fe46beb90bfbfc63bd" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to minimize the frame. The &lt;code&gt;playRestoreDownSound&lt;/code&gt; Action is fired. This action is delegated to the desktopManager.</source>
          <target state="translated">このメソッドは、ユーザーがフレームを最小化したいときに呼び出されます。 &lt;code&gt;playRestoreDownSound&lt;/code&gt; アクションが発射されます。このアクションはdesktopManagerに委任されます。</target>
        </trans-unit>
        <trans-unit id="6527368ca8b52c1aefd2d22426b2413726f13956" translate="yes" xml:space="preserve">
          <source>This method is called whenever an event occurs of the type for which the &lt;code&gt; EventListener&lt;/code&gt; interface was registered.</source>
          <target state="translated">このメソッドは、 &lt;code&gt; EventListener&lt;/code&gt; インターフェースが登録されたタイプのイベントが発生するたびに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="39da71e95177699e92890004d5c76006e0584aaa" translate="yes" xml:space="preserve">
          <source>This method is called whenever the node for which this handler is registered is imported or cloned.</source>
          <target state="translated">このメソッドは、このハンドラが登録されているノードがインポートまたはクローン化されるたびに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4d6be72c0a0bc2f90a1ce5f903c04d4ec355dfb0" translate="yes" xml:space="preserve">
          <source>This method is called whenever the observed object is changed.</source>
          <target state="translated">このメソッドは、観測されたオブジェクトが変更されるたびに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9cca6ab3d4da2b086f82ba0002c0396f03a4b119" translate="yes" xml:space="preserve">
          <source>This method is called whenever the observed object is changed. An application calls an &lt;code&gt;Observable&lt;/code&gt; object's &lt;code&gt;notifyObservers&lt;/code&gt; method to have all the object's observers notified of the change.</source>
          <target state="translated">このメソッドは、監視対象オブジェクトが変更されるたびに呼び出されます。アプリケーションは、 &lt;code&gt;Observable&lt;/code&gt; オブジェクトの &lt;code&gt;notifyObservers&lt;/code&gt; メソッドを呼び出して、すべてのオブジェクトのオブザーバーに変更を通知します。</target>
        </trans-unit>
        <trans-unit id="fffb1c56a63b52b2e43abc2fb4153ff4c28cc913" translate="yes" xml:space="preserve">
          <source>This method is caller sensitive, which means that it may return different values to different callers.</source>
          <target state="translated">このメソッドは呼び出し元に依存するため、呼び出し元によって異なる値を返す可能性があります。</target>
        </trans-unit>
        <trans-unit id="42cb73f168bcaf88d12264f0507782007199aee0" translate="yes" xml:space="preserve">
          <source>This method is closely related to &lt;a href=&quot;#foldArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)&quot;&gt;&lt;code&gt;foldArguments(MethodHandle, MethodHandle)&lt;/code&gt;&lt;/a&gt;, but allows to control the position in the parameter list at which folding takes place. The argument controlling this, &lt;code&gt;pos&lt;/code&gt;, is a zero-based index. The aforementioned method &lt;a href=&quot;#foldArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)&quot;&gt;&lt;code&gt;foldArguments(MethodHandle, MethodHandle)&lt;/code&gt;&lt;/a&gt; assumes position 0.</source>
          <target state="translated">This method is closely related to &lt;a href=&quot;#foldArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)&quot;&gt; &lt;code&gt;foldArguments(MethodHandle, MethodHandle)&lt;/code&gt; &lt;/a&gt;, but allows to control the position in the parameter list at which folding takes place. The argument controlling this, &lt;code&gt;pos&lt;/code&gt; , is a zero-based index. The aforementioned method &lt;a href=&quot;#foldArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)&quot;&gt; &lt;code&gt;foldArguments(MethodHandle, MethodHandle)&lt;/code&gt; &lt;/a&gt; assumes position 0.</target>
        </trans-unit>
        <trans-unit id="9e1c5173e7f3fa222c06c11b3cc371c7b3d31b73" translate="yes" xml:space="preserve">
          <source>This method is defined as:</source>
          <target state="translated">として定義されている方法です。</target>
        </trans-unit>
        <trans-unit id="ae19898917349a14a11291ce84b8e211a3d13306" translate="yes" xml:space="preserve">
          <source>This method is defined for compatibility with &lt;code&gt;java.util.Random&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;java.util.Random&lt;/code&gt; との互換性のために定義されています。</target>
        </trans-unit>
        <trans-unit id="bf2642771743581deaaba7d7e735661a814734f8" translate="yes" xml:space="preserve">
          <source>This method is defined so that performance-sensitive Java code can allocate direct buffers with the same byte order as the hardware. Native code libraries are often more efficient when such buffers are used.</source>
          <target state="translated">このメソッドは、パフォーマンスに敏感なJavaコードがハードウェアと同じバイトオーダーで直接バッファを割り当てることができるように定義されています。ネイティブコードライブラリは、このようなバッファを使用した方が効率的であることが多いです。</target>
        </trans-unit>
        <trans-unit id="aa45c2b02a519a2f2aaaeb85a745efe28f883b9c" translate="yes" xml:space="preserve">
          <source>This method is defined so that the &lt;code&gt;String&lt;/code&gt; class can implement the &lt;a href=&quot;charsequence&quot;&gt;&lt;code&gt;CharSequence&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;String&lt;/code&gt; クラスが&lt;a href=&quot;charsequence&quot;&gt; &lt;code&gt;CharSequence&lt;/code&gt; &lt;/a&gt;インターフェースを実装できるように定義されています。</target>
        </trans-unit>
        <trans-unit id="804a666badc3dff32d376a89cfcffa549b4726d9" translate="yes" xml:space="preserve">
          <source>This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt; values do not have a date component.</source>
          <target state="translated">This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt; values do not have a date component.</target>
        </trans-unit>
        <trans-unit id="9620d2038291d98dd6c4e199b3c3d0010bbc195c" translate="yes" xml:space="preserve">
          <source>This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt; values do not have a day component.</source>
          <target state="translated">This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt; values do not have a day component.</target>
        </trans-unit>
        <trans-unit id="f6a5e9248323ee689466d0987f99636e5839c9e9" translate="yes" xml:space="preserve">
          <source>This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt; values do not have a month component.</source>
          <target state="translated">This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt; values do not have a month component.</target>
        </trans-unit>
        <trans-unit id="5ff10230e70acbdfee03d02e5d3fbb422e3cd1ae" translate="yes" xml:space="preserve">
          <source>This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt; values do not have a year component.</source>
          <target state="translated">This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt; values do not have a year component.</target>
        </trans-unit>
        <trans-unit id="d9bd70deab6c73de961348bb8c9bc5b416d9eb44" translate="yes" xml:space="preserve">
          <source>This method is deprecated and should not be used because SQL Date values do not have a time component.</source>
          <target state="translated">このメソッドは非推奨であり、SQL Dateの値には時間の要素がないため、使用すべきではありません。</target>
        </trans-unit>
        <trans-unit id="aa990b57ffc3bea2a543ffe858e6b2703dfc0c5a" translate="yes" xml:space="preserve">
          <source>This method is deprecated because it supports only static stubs.</source>
          <target state="translated">このメソッドは静的スタブのみをサポートしているため、非推奨です。</target>
        </trans-unit>
        <trans-unit id="89d1b53f1f692a3235f7b69db22ad00244a5c069" translate="yes" xml:space="preserve">
          <source>This method is deprecated because it supports only static stubs. Use &lt;a href=&quot;#exportObject(java.rmi.Remote,int)&quot;&gt;&lt;code&gt;exportObject(Remote, port)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#exportObject(java.rmi.Remote,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt;&lt;code&gt;exportObject(Remote, port, csf, ssf)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">This method is deprecated because it supports only static stubs. Use &lt;a href=&quot;#exportObject(java.rmi.Remote,int)&quot;&gt; &lt;code&gt;exportObject(Remote, port)&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#exportObject(java.rmi.Remote,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt; &lt;code&gt;exportObject(Remote, port, csf, ssf)&lt;/code&gt; &lt;/a&gt; instead.</target>
        </trans-unit>
        <trans-unit id="341bc6254eb2574735cca4401ef4c829c572bffc" translate="yes" xml:space="preserve">
          <source>This method is deprecated because its name hints that it checks if the reflected object is accessible when it actually indicates if the checks for Java language access control are suppressed.</source>
          <target state="translated">このメソッドは、その名前が、実際にはJava言語のアクセス制御のチェックが抑制されているかどうかを示しているのに、反映されたオブジェクトがアクセス可能かどうかをチェックしていることを示唆しているため、非推奨とされています。</target>
        </trans-unit>
        <trans-unit id="c4ff47686483784f448f5aefdcddece73c0c06c5" translate="yes" xml:space="preserve">
          <source>This method is deprecated because its name hints that it checks if the reflected object is accessible when it actually indicates if the checks for Java language access control are suppressed. This method may return &lt;code&gt;false&lt;/code&gt; on a reflected object that is accessible to the caller. To test if this reflected object is accessible, it should use &lt;a href=&quot;#canAccess(java.lang.Object)&quot;&gt;&lt;code&gt;canAccess(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is deprecated because its name hints that it checks if the reflected object is accessible when it actually indicates if the checks for Java language access control are suppressed. This method may return &lt;code&gt;false&lt;/code&gt; on a reflected object that is accessible to the caller. To test if this reflected object is accessible, it should use &lt;a href=&quot;#canAccess(java.lang.Object)&quot;&gt; &lt;code&gt;canAccess(Object)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b3abe168aefda8d09df2cff25ccabb9b1022fd8c" translate="yes" xml:space="preserve">
          <source>This method is deprecated; the method &lt;code&gt;getCharacterStream&lt;/code&gt; should be used in its place.</source>
          <target state="translated">This method is deprecated; the method &lt;code&gt;getCharacterStream&lt;/code&gt; should be used in its place.</target>
        </trans-unit>
        <trans-unit id="fe5b6f57087b04e0bc121233831d03f60237e3e6" translate="yes" xml:space="preserve">
          <source>This method is designed for troubleshooting use, but not for synchronization control. It might be an expensive operation.</source>
          <target state="translated">この方法はトラブルシューティング用ではありますが、同期制御用ではありません。高額な作業になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="5b65be200e753f327578c45c2734dd4d51b4756f" translate="yes" xml:space="preserve">
          <source>This method is designed for use in monitoring system memory usage and detecting low memory condition.</source>
          <target state="translated">この方法は、システムのメモリ使用状況を監視し、低メモリ状態を検出するために設計されています。</target>
        </trans-unit>
        <trans-unit id="0d3f0f88baf42118de72db535c5af7f9c932197f" translate="yes" xml:space="preserve">
          <source>This method is designed to allow a program to assert that the current thread already holds a specified lock:</source>
          <target state="translated">このメソッドは、現在のスレッドがすでに指定されたロックを保持していることをプログラムが主張できるように設計されています。</target>
        </trans-unit>
        <trans-unit id="243daba8ccba3dd657d68ba98ae805db34f22e88" translate="yes" xml:space="preserve">
          <source>This method is designed to be invoked by &lt;em&gt;other&lt;/em&gt; tasks. To terminate the current task, you can just return or throw an unchecked exception from its computation method, or invoke &lt;a href=&quot;#completeExceptionally(java.lang.Throwable)&quot;&gt;&lt;code&gt;completeExceptionally(Throwable)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is designed to be invoked by &lt;em&gt;other&lt;/em&gt; tasks. To terminate the current task, you can just return or throw an unchecked exception from its computation method, or invoke &lt;a href=&quot;#completeExceptionally(java.lang.Throwable)&quot;&gt; &lt;code&gt;completeExceptionally(Throwable)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a685d5c3b4c812a26f26b2438180d21020a9a02c" translate="yes" xml:space="preserve">
          <source>This method is designed to be invoked by &lt;em&gt;other&lt;/em&gt; tasks. To terminate the current task, you can just return or throw an unchecked exception from its computation method, or invoke &lt;a href=&quot;forkjointask#completeExceptionally-java.lang.Throwable-&quot;&gt;&lt;code&gt;completeExceptionally(Throwable)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;em&gt;他の&lt;/em&gt;タスクによって呼び出されるように設計されています。現在のタスクを終了するには、計算メソッドから未チェックの例外を返すかスローするか、&lt;a href=&quot;forkjointask#completeExceptionally-java.lang.Throwable-&quot;&gt; &lt;code&gt;completeExceptionally(Throwable)&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="68106609b6f6ccd0de9ffcdd406946b47ca7185a" translate="yes" xml:space="preserve">
          <source>This method is designed to be used by a fair synchronizer to avoid &lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;barging&lt;/a&gt;. Such a synchronizer's &lt;a href=&quot;#tryAcquire(int)&quot;&gt;&lt;code&gt;tryAcquire(int)&lt;/code&gt;&lt;/a&gt; method should return &lt;code&gt;false&lt;/code&gt;, and its &lt;a href=&quot;#tryAcquireShared(int)&quot;&gt;&lt;code&gt;tryAcquireShared(int)&lt;/code&gt;&lt;/a&gt; method should return a negative value, if this method returns &lt;code&gt;true&lt;/code&gt; (unless this is a reentrant acquire). For example, the &lt;code&gt;
 tryAcquire&lt;/code&gt; method for a fair, reentrant, exclusive mode synchronizer might look like this:</source>
          <target state="translated">This method is designed to be used by a fair synchronizer to avoid &lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;barging&lt;/a&gt;. Such a synchronizer's &lt;a href=&quot;#tryAcquire(int)&quot;&gt; &lt;code&gt;tryAcquire(int)&lt;/code&gt; &lt;/a&gt; method should return &lt;code&gt;false&lt;/code&gt; , and its &lt;a href=&quot;#tryAcquireShared(int)&quot;&gt; &lt;code&gt;tryAcquireShared(int)&lt;/code&gt; &lt;/a&gt; method should return a negative value, if this method returns &lt;code&gt;true&lt;/code&gt; (unless this is a reentrant acquire). For example, the &lt;code&gt; tryAcquire&lt;/code&gt; method for a fair, reentrant, exclusive mode synchronizer might look like this:</target>
        </trans-unit>
        <trans-unit id="4a31c2ee578e14493c9d0a18aafc85e4cd3407bd" translate="yes" xml:space="preserve">
          <source>This method is designed to be used by a fair synchronizer to avoid &lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;barging&lt;/a&gt;. Such a synchronizer's &lt;a href=&quot;#tryAcquire(long)&quot;&gt;&lt;code&gt;tryAcquire(long)&lt;/code&gt;&lt;/a&gt; method should return &lt;code&gt;false&lt;/code&gt;, and its &lt;a href=&quot;#tryAcquireShared(long)&quot;&gt;&lt;code&gt;tryAcquireShared(long)&lt;/code&gt;&lt;/a&gt; method should return a negative value, if this method returns &lt;code&gt;true&lt;/code&gt; (unless this is a reentrant acquire). For example, the &lt;code&gt;
 tryAcquire&lt;/code&gt; method for a fair, reentrant, exclusive mode synchronizer might look like this:</source>
          <target state="translated">This method is designed to be used by a fair synchronizer to avoid &lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;barging&lt;/a&gt;. Such a synchronizer's &lt;a href=&quot;#tryAcquire(long)&quot;&gt; &lt;code&gt;tryAcquire(long)&lt;/code&gt; &lt;/a&gt; method should return &lt;code&gt;false&lt;/code&gt; , and its &lt;a href=&quot;#tryAcquireShared(long)&quot;&gt; &lt;code&gt;tryAcquireShared(long)&lt;/code&gt; &lt;/a&gt; method should return a negative value, if this method returns &lt;code&gt;true&lt;/code&gt; (unless this is a reentrant acquire). For example, the &lt;code&gt; tryAcquire&lt;/code&gt; method for a fair, reentrant, exclusive mode synchronizer might look like this:</target>
        </trans-unit>
        <trans-unit id="74ee81fb970e8086cdb6cbd89cb3cb795e9c4467" translate="yes" xml:space="preserve">
          <source>This method is designed to be used by a fair synchronizer to avoid &lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;barging&lt;/a&gt;. Such a synchronizer's &lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquire-long-&quot;&gt;&lt;code&gt;tryAcquire(long)&lt;/code&gt;&lt;/a&gt; method should return &lt;code&gt;false&lt;/code&gt;, and its &lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquireShared-long-&quot;&gt;&lt;code&gt;tryAcquireShared(long)&lt;/code&gt;&lt;/a&gt; method should return a negative value, if this method returns &lt;code&gt;true&lt;/code&gt; (unless this is a reentrant acquire). For example, the &lt;code&gt;tryAcquire&lt;/code&gt; method for a fair, reentrant, exclusive mode synchronizer might look like this:</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;割り込み&lt;/a&gt;を回避するために公平なシンクロナイザによって使用されるように設計されています。このようなシンクロナイザーの&lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquire-long-&quot;&gt; &lt;code&gt;tryAcquire(long)&lt;/code&gt; &lt;/a&gt;メソッドは &lt;code&gt;false&lt;/code&gt; を返し、このメソッドが &lt;code&gt;true&lt;/code&gt; を返す場合（これがリエントラントな取得でない場合&lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquireShared-long-&quot;&gt; &lt;code&gt;tryAcquireShared(long)&lt;/code&gt; &lt;/a&gt;は、そのtryAcquireShared（long）メソッドが負の値を返す必要があります。たとえば、公平で再入可能な排他モードシンクロナイザの &lt;code&gt;tryAcquire&lt;/code&gt; メソッドは次のようになります。</target>
        </trans-unit>
        <trans-unit id="b59e8c2df3bab79c2fe16e6644745f396fb521c8" translate="yes" xml:space="preserve">
          <source>This method is designed to be used by a fair synchronizer to avoid &lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;barging&lt;/a&gt;. Such a synchronizer's &lt;a href=&quot;abstractqueuedsynchronizer#tryAcquire-int-&quot;&gt;&lt;code&gt;tryAcquire(int)&lt;/code&gt;&lt;/a&gt; method should return &lt;code&gt;false&lt;/code&gt;, and its &lt;a href=&quot;abstractqueuedsynchronizer#tryAcquireShared-int-&quot;&gt;&lt;code&gt;tryAcquireShared(int)&lt;/code&gt;&lt;/a&gt; method should return a negative value, if this method returns &lt;code&gt;true&lt;/code&gt; (unless this is a reentrant acquire). For example, the &lt;code&gt;tryAcquire&lt;/code&gt; method for a fair, reentrant, exclusive mode synchronizer might look like this:</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;割り込み&lt;/a&gt;を回避するために公平なシンクロナイザによって使用されるように設計されています。このようなシンクロナイザーの&lt;a href=&quot;abstractqueuedsynchronizer#tryAcquire-int-&quot;&gt; &lt;code&gt;tryAcquire(int)&lt;/code&gt; &lt;/a&gt;メソッドは &lt;code&gt;false&lt;/code&gt; を返し、&lt;a href=&quot;abstractqueuedsynchronizer#tryAcquireShared-int-&quot;&gt; &lt;code&gt;tryAcquireShared(int)&lt;/code&gt; &lt;/a&gt;メソッドは、このメソッドが &lt;code&gt;true&lt;/code&gt; を返す場合（これがリエントラントな取得でない場合）、負の値を返す必要があります。たとえば、公平で再入可能な排他モードシンクロナイザの &lt;code&gt;tryAcquire&lt;/code&gt; メソッドは次のようになります。</target>
        </trans-unit>
        <trans-unit id="fccbd3e6989670e486a81b6121525638bef59a71" translate="yes" xml:space="preserve">
          <source>This method is designed to provide a hint about the system load and may be queried frequently. The load average may be unavailable on some platform where it is expensive to implement this method.</source>
          <target state="translated">この方法は、システムの負荷に関するヒントを提供するために設計されており、頻繁に照会される可能性があります。このメソッドの実装にコストがかかるプラットフォームでは、負荷平均が利用できない場合があります。</target>
        </trans-unit>
        <trans-unit id="ec2901bd0d41cba4655d9eb80b10a539ac8b2b79" translate="yes" xml:space="preserve">
          <source>This method is empty, because all painting is done by &lt;a href=&quot;#paint(java.awt.Graphics)&quot;&gt;&lt;code&gt;paint(Graphics)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;plaf/componentui#update(java.awt.Graphics,javax.swing.JComponent)&quot;&gt;&lt;code&gt;ComponentUI.update(Graphics, JComponent)&lt;/code&gt;&lt;/a&gt; methods</source>
          <target state="translated">This method is empty, because all painting is done by &lt;a href=&quot;#paint(java.awt.Graphics)&quot;&gt; &lt;code&gt;paint(Graphics)&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;plaf/componentui#update(java.awt.Graphics,javax.swing.JComponent)&quot;&gt; &lt;code&gt;ComponentUI.update(Graphics, JComponent)&lt;/code&gt; &lt;/a&gt; methods</target>
        </trans-unit>
        <trans-unit id="96f36f108ff8beab249af70da0aac7e6ec0abfce" translate="yes" xml:space="preserve">
          <source>This method is equivalent to</source>
          <target state="translated">この方法は</target>
        </trans-unit>
        <trans-unit id="e630b5b2fd1df8564281b7fa74274a2a88a347fa" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#add(E)&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#add(E)&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b83998f084dce168c614587a74226ad9a07d3052" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#addFirst(E)&quot;&gt;&lt;code&gt;addFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#addFirst(E)&quot;&gt; &lt;code&gt;addFirst(E)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="34b2e65f06583c6220e77431d7b6204917225fd4" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#addFirst(E)&quot;&gt;&lt;code&gt;addFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#addFirst(E)&quot;&gt; &lt;code&gt;addFirst&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f28341ca05137434ee47b9e658b6772d0701966e" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#addLast(E)&quot;&gt;&lt;code&gt;addLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#addLast(E)&quot;&gt; &lt;code&gt;addLast(E)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5bd4aa74fb0950d987e34634b648e9c344495e1b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#addLast(E)&quot;&gt;&lt;code&gt;addLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#addLast(E)&quot;&gt; &lt;code&gt;addLast&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b7bd9952d5cb6047716e24422d6e16f568f64a04" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#connect(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt;&lt;code&gt;connect(serviceURL, null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#connect(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt; &lt;code&gt;connect(serviceURL, null)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="516a91a7e7509fc255e4cf9be5afac369f2dc992" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#createMBean(java.lang.String,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;createMBean(className, name, (Object[]) null, (String[])
 null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#createMBean(java.lang.String,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;createMBean(className, name, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2ba3e6028997a7c2d1ab6288f635ec4225511ecf" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#createMBean(java.lang.String,javax.management.ObjectName,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;createMBean(className, name, loaderName, (Object[]) null,
 (String[]) null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#createMBean(java.lang.String,javax.management.ObjectName,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;createMBean(className, name, loaderName, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="772363ff7be3272071362acf193d504d35a9f8f3" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#getFirst()&quot;&gt;&lt;code&gt;getFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#getFirst()&quot;&gt; &lt;code&gt;getFirst()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ff9a732b6a86f2be55c61f9e0940b85f41c66580" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#getFirst()&quot;&gt;&lt;code&gt;getFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#getFirst()&quot;&gt; &lt;code&gt;getFirst&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="78cc66d9dd92c49e796e8df7ef025d4a6c92aece" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#instantiate(java.lang.String,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;instantiate(className, (Object[]) null, (String[]) null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#instantiate(java.lang.String,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;instantiate(className, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="62584ee86ca75378e737c320d00e1154395f4812" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#instantiate(java.lang.String,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;instantiate(className, loaderName, (Object[]) null, (String[])
 null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#instantiate(java.lang.String,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;instantiate(className, loaderName, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f58507639a6eaaba6098da258d9b788ad92ad392" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class,boolean)&quot;&gt;&lt;code&gt;newMBeanProxy(connection, objectName, interfaceClass,
 false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class,boolean)&quot;&gt; &lt;code&gt;newMBeanProxy(connection, objectName, interfaceClass, false)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f5c15a7fd81fac47e3a418d6112b261809f0d647" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class,boolean)&quot;&gt;&lt;code&gt;newMXBeanProxy(connection, objectName, interfaceClass,
 false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class,boolean)&quot;&gt; &lt;code&gt;newMXBeanProxy(connection, objectName, interfaceClass, false)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3f7c13586198e8117d646fc3e77781e59639414e" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#offerLast(E)&quot;&gt;&lt;code&gt;offerLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#offerLast(E)&quot;&gt; &lt;code&gt;offerLast(E)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4ecc606006b09bb909777c6ed4ac080720811bd5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#offerLast(E)&quot;&gt;&lt;code&gt;offerLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#offerLast(E)&quot;&gt; &lt;code&gt;offerLast&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9595b55a29fcdfcf6ad885adb77fa91c406ce450" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#offerLast(E,long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;offerLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#offerLast(E,long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;offerLast&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7d05db7cc106ddc05bbe72ff87732228cbead48b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#peekFirst()&quot;&gt;&lt;code&gt;peekFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#peekFirst()&quot;&gt; &lt;code&gt;peekFirst()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8bd50e852a3dd8faa0150137f85c10a14b82b830" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</target>
        </trans-unit>
        <trans-unit id="fa7b874f63cf9546d63d1326c99d9e2286451ff0" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#pollFirst()&quot;&gt;&lt;code&gt;pollFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#pollFirst()&quot;&gt; &lt;code&gt;pollFirst()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d6fbf06d636489465e127fce2163ced1aacebad7" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#pollFirst(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;pollFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#pollFirst(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;pollFirst&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3303bd9f3c991005ee09dd868680c105fb6645f8" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#putLast(E)&quot;&gt;&lt;code&gt;putLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#putLast(E)&quot;&gt; &lt;code&gt;putLast&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9b079083ea9c6a74bfc6dd97a720e31172be961a" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#removeFirst()&quot;&gt;&lt;code&gt;removeFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#removeFirst()&quot;&gt; &lt;code&gt;removeFirst()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="25719809c3327998e7044cbc909b7b1dcb19e326" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#removeFirst()&quot;&gt;&lt;code&gt;removeFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#removeFirst()&quot;&gt; &lt;code&gt;removeFirst&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="48f69676f4cfdbda72c26f14121eb7aef7aca95d" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#removeFirstOccurrence(java.lang.Object)&quot;&gt;&lt;code&gt;removeFirstOccurrence(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#removeFirstOccurrence(java.lang.Object)&quot;&gt; &lt;code&gt;removeFirstOccurrence(Object)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f9a9b0b6282161e8020ebf2d63cc9b16c6a97862" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#removeFirstOccurrence(java.lang.Object)&quot;&gt;&lt;code&gt;removeFirstOccurrence&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#removeFirstOccurrence(java.lang.Object)&quot;&gt; &lt;code&gt;removeFirstOccurrence&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cff13b442d4d5a3da99b1ebab2a49f2eb6818f7b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#takeFirst()&quot;&gt;&lt;code&gt;takeFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#takeFirst()&quot;&gt; &lt;code&gt;takeFirst&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="31475f1d5ca622ab63f23c690428ec1a958a9f08" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#write(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;this.write(buf, 0, buf.length)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18a8e0db44f349b4c69b924c2600a8eae4ffcfc" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#write(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;write(b, 0, b.length)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;#write(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;write(b, 0, b.length)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="92d3caffdfc1f4211fba19e6ea46efe6a653a6a2" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../../../java.base/java/lang/reflect/proxy#newProxyInstance(java.lang.ClassLoader,java.lang.Class%5B%5D,java.lang.reflect.InvocationHandler)&quot;&gt;&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(interfaceClass.getClassLoader(),
 interfaces, handler)&lt;/code&gt;. Here &lt;code&gt;handler&lt;/code&gt; is the result of &lt;a href=&quot;#%3Cinit%3E(javax.management.MBeanServerConnection,javax.management.ObjectName,boolean)&quot;&gt;&lt;code&gt;new
 MBeanServerInvocationHandler(connection, objectName)&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;interfaces&lt;/code&gt; is an array that has one element if &lt;code&gt;notificationBroadcaster&lt;/code&gt; is false and two if it is true. The first element of &lt;code&gt;interfaces&lt;/code&gt; is &lt;code&gt;interfaceClass&lt;/code&gt; and the second, if present, is &lt;code&gt;NotificationEmitter.class&lt;/code&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;../../../java.base/java/lang/reflect/proxy#newProxyInstance(java.lang.ClassLoader,java.lang.Class%5B%5D,java.lang.reflect.InvocationHandler)&quot;&gt; &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(interfaceClass.getClassLoader(), interfaces, handler)&lt;/code&gt; . Here &lt;code&gt;handler&lt;/code&gt; is the result of &lt;a href=&quot;#%3Cinit%3E(javax.management.MBeanServerConnection,javax.management.ObjectName,boolean)&quot;&gt; &lt;code&gt;new MBeanServerInvocationHandler(connection, objectName)&lt;/code&gt; &lt;/a&gt;, and &lt;code&gt;interfaces&lt;/code&gt; is an array that has one element if &lt;code&gt;notificationBroadcaster&lt;/code&gt; is false and two if it is true. The first element of &lt;code&gt;interfaces&lt;/code&gt; is &lt;code&gt;interfaceClass&lt;/code&gt; and the second, if present, is &lt;code&gt;NotificationEmitter.class&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59627a0a952b2c96182d0298341a95db1edd5251" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../../java/lang/reflect/proxy#newProxyInstance-java.lang.ClassLoader-java.lang.Class:A-java.lang.reflect.InvocationHandler-&quot;&gt;&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(interfaceClass.getClassLoader(),
 interfaces, handler)&lt;/code&gt;. Here &lt;code&gt;handler&lt;/code&gt; is the result of &lt;a href=&quot;mbeanserverinvocationhandler#MBeanServerInvocationHandler-javax.management.MBeanServerConnection-javax.management.ObjectName-boolean-&quot;&gt;&lt;code&gt;new
 MBeanServerInvocationHandler(connection, objectName)&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;interfaces&lt;/code&gt; is an array that has one element if &lt;code&gt;notificationBroadcaster&lt;/code&gt; is false and two if it is true. The first element of &lt;code&gt;interfaces&lt;/code&gt; is &lt;code&gt;interfaceClass&lt;/code&gt; and the second, if present, is &lt;code&gt;NotificationEmitter.class&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;../../java/lang/reflect/proxy#newProxyInstance-java.lang.ClassLoader-java.lang.Class:A-java.lang.reflect.InvocationHandler-&quot;&gt; &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(interfaceClass.getClassLoader(), interfaces, handler)&lt;/code&gt; と同等です。ここで、 &lt;code&gt;handler&lt;/code&gt; は&lt;a href=&quot;mbeanserverinvocationhandler#MBeanServerInvocationHandler-javax.management.MBeanServerConnection-javax.management.ObjectName-boolean-&quot;&gt; &lt;code&gt;new MBeanServerInvocationHandler(connection, objectName)&lt;/code&gt; &lt;/a&gt;の結果であり、 &lt;code&gt;interfaces&lt;/code&gt; は、 &lt;code&gt;notificationBroadcaster&lt;/code&gt; がfalseの場合に1つの要素、trueの場合に2 つの要素を持つ配列です。 &lt;code&gt;interfaces&lt;/code&gt; の最初の要素は &lt;code&gt;interfaceClass&lt;/code&gt; で、2番目の要素は（存在する場合） &lt;code&gt;NotificationEmitter.class&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="210390569953d2a1fb65e39645490450f4c3e0c8" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#addFirst(E)&quot;&gt;&lt;code&gt;Deque.addFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;../deque#addFirst(E)&quot;&gt; &lt;code&gt;Deque.addFirst(E)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="41b871bbf5ed8b253ef9f92469346969fa3beca5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#addFirst-E-&quot;&gt;&lt;code&gt;Deque.addFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;../deque#addFirst-E-&quot;&gt; &lt;code&gt;Deque.addFirst(E)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="cac22f1855ae5b7390c25006ff238519ecbbd45d" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#getFirst()&quot;&gt;&lt;code&gt;Deque.getFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;../deque#getFirst()&quot;&gt; &lt;code&gt;Deque.getFirst()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5d59fb4e03f88c079b08b27c259e791e175ab325" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#getFirst()&quot;&gt;&lt;code&gt;getFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;../deque#getFirst()&quot;&gt; &lt;code&gt;getFirst&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2dcee12da93abc3c7af5ad4ce14c0019e041a784" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#getFirst--&quot;&gt;&lt;code&gt;Deque.getFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;../deque#getFirst--&quot;&gt; &lt;code&gt;Deque.getFirst()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="745e5cfa13c0d688770b3801419f42026f19e039" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#getFirst--&quot;&gt;&lt;code&gt;getFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;../deque#getFirst--&quot;&gt; &lt;code&gt;getFirst&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="f833cec6eb7d8141f17ad110249d3d533c1701f6" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#peekFirst()&quot;&gt;&lt;code&gt;peekFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;../deque#peekFirst()&quot;&gt; &lt;code&gt;peekFirst&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c382bb82fc2e86926ecec5c28b84071b57312910" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#peekFirst--&quot;&gt;&lt;code&gt;Deque.peekFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;../deque#peekFirst--&quot;&gt; &lt;code&gt;Deque.peekFirst()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="0631034b9db85350b6d3a5a0b58236179b145fe8" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#peekFirst--&quot;&gt;&lt;code&gt;peekFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;../deque#peekFirst--&quot;&gt; &lt;code&gt;peekFirst&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="e7e13d171fb7577c081824246f685fcdc83982a7" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#pollFirst()&quot;&gt;&lt;code&gt;Deque.pollFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;../deque#pollFirst()&quot;&gt; &lt;code&gt;Deque.pollFirst()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6d08a898f9783931fa0e55d9366a8934ed8f7cb8" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#pollFirst--&quot;&gt;&lt;code&gt;Deque.pollFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;../deque#pollFirst--&quot;&gt; &lt;code&gt;Deque.pollFirst()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="ebaa4e21fbeb534491dd25658127e7f9ca4beda4" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#removeFirst()&quot;&gt;&lt;code&gt;Deque.removeFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;../deque#removeFirst()&quot;&gt; &lt;code&gt;Deque.removeFirst()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="820d097b800c341352b183ead29bb4e687912d1b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#removeFirst()&quot;&gt;&lt;code&gt;removeFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;../deque#removeFirst()&quot;&gt; &lt;code&gt;removeFirst&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b38d19681d4dc401a29728e6d548c221f5bcb79a" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#removeFirst--&quot;&gt;&lt;code&gt;Deque.removeFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;../deque#removeFirst--&quot;&gt; &lt;code&gt;Deque.removeFirst()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="40f5c20b5451ca28023239544a541050d97c7b30" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#removeFirst--&quot;&gt;&lt;code&gt;removeFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;../deque#removeFirst--&quot;&gt; &lt;code&gt;removeFirst&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="f0366b7f34e5dd9a4ece4eca4d17b633c707b1f9" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;arraydeque#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="84aeefd9475793e355aa463fe4f64ffd579c71ff" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#addFirst-E-&quot;&gt;&lt;code&gt;addFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;arraydeque#addFirst-E-&quot;&gt; &lt;code&gt;addFirst(E)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="d3ff6d9782be86d95408c2001495dc4a2426d21b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#addLast-E-&quot;&gt;&lt;code&gt;addLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;arraydeque#addLast-E-&quot;&gt; &lt;code&gt;addLast(E)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="48503c548c56fcf06a9686103f293ac0edb786bc" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#getFirst--&quot;&gt;&lt;code&gt;getFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;arraydeque#getFirst--&quot;&gt; &lt;code&gt;getFirst()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="6b2f5465d56163a7753c4189e32633114cefa009" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#offerLast-E-&quot;&gt;&lt;code&gt;offerLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;arraydeque#offerLast-E-&quot;&gt; &lt;code&gt;offerLast(E)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="8f71cf790974f6f2687330e58932a14065507a97" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#peekFirst--&quot;&gt;&lt;code&gt;peekFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;arraydeque#peekFirst--&quot;&gt; &lt;code&gt;peekFirst()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="0c02821bab241c240b3f857eee16cb26153365c4" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#pollFirst--&quot;&gt;&lt;code&gt;pollFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;arraydeque#pollFirst--&quot;&gt; &lt;code&gt;pollFirst()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="45f21773493dfaad2f57844a4677ad0e0c138742" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#removeFirst--&quot;&gt;&lt;code&gt;removeFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;arraydeque#removeFirst--&quot;&gt; &lt;code&gt;removeFirst()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="14466d27f8fb0ddd3e20e6a928313d060fc8e944" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#removeFirstOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeFirstOccurrence(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;arraydeque#removeFirstOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeFirstOccurrence(Object)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="8a6cecb5cbbb864d6b6b93147fec644d39f919bd" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#addFirst(E)&quot;&gt;&lt;code&gt;addFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;blockingdeque#addFirst(E)&quot;&gt; &lt;code&gt;addFirst&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e26727ec89566260b76ce72249e4f122264c8810" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#addFirst-E-&quot;&gt;&lt;code&gt;addFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;blockingdeque#addFirst-E-&quot;&gt; &lt;code&gt;addFirst&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="4b1fa66f69196026a4f61822989e06cfa76d5a44" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#addLast-E-&quot;&gt;&lt;code&gt;addLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;blockingdeque#addLast-E-&quot;&gt; &lt;code&gt;addLast&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="69457576f81c07b3774cdcd9c0ea73fdba5004de" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#offerLast(E)&quot;&gt;&lt;code&gt;offerLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;blockingdeque#offerLast(E)&quot;&gt; &lt;code&gt;offerLast&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8fb51f5fbf56de87b5668cd78c0e2ec86451c98c" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#offerLast(E,long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;offerLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;blockingdeque#offerLast(E,long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;offerLast&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="15686caf1a02fd0b22268428a9ac9ff79b6814b4" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#offerLast-E-&quot;&gt;&lt;code&gt;offerLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;blockingdeque#offerLast-E-&quot;&gt; &lt;code&gt;offerLast&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="2d723e78205a7c25f18be4193f3f7c567b99f050" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#offerLast-E-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;offerLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;blockingdeque#offerLast-E-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;offerLast&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="532967591efc91576fc6e010529bea850ce4cea5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#pollFirst-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;pollFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;blockingdeque#pollFirst-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;pollFirst&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="bdf168a0ab3ba3b9d9a719bc144920f999cb59e7" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#putLast(E)&quot;&gt;&lt;code&gt;putLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;blockingdeque#putLast(E)&quot;&gt; &lt;code&gt;putLast&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="034c5b9ff9c457c13d6709bfd488955a171c19be" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#putLast-E-&quot;&gt;&lt;code&gt;putLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;blockingdeque#putLast-E-&quot;&gt; &lt;code&gt;putLast&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="7eb2a61b86ed7c494cc47cbe91537252b5654c68" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#removeFirstOccurrence(java.lang.Object)&quot;&gt;&lt;code&gt;removeFirstOccurrence&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;blockingdeque#removeFirstOccurrence(java.lang.Object)&quot;&gt; &lt;code&gt;removeFirstOccurrence&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f3c53069740e2e09f72f107766aba77990158398" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#removeFirstOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeFirstOccurrence&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;blockingdeque#removeFirstOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeFirstOccurrence&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="efa03c367d161f342aabff9967b488c6bb7165c6" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#takeFirst--&quot;&gt;&lt;code&gt;takeFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;blockingdeque#takeFirst--&quot;&gt; &lt;code&gt;takeFirst&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="2224c7eb479604f0ecca5e9a1e2c87ba0d1c5fe9" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;concurrentlinkeddeque#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;concurrentlinkeddeque#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="e1b6ac92f7a4569794ef3ba9510df764461fb67f" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;deque#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="fc7c08304f720f2c778b85321913e4057f82db47" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#addFirst-E-&quot;&gt;&lt;code&gt;addFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;deque#addFirst-E-&quot;&gt; &lt;code&gt;addFirst(E)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="f2a34939e65bb98ed731d8feb7d4b3c6b715405f" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#addLast-E-&quot;&gt;&lt;code&gt;addLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;deque#addLast-E-&quot;&gt; &lt;code&gt;addLast(E)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="7b56a92dcbc2c2ae04921fa93ee4fa2b9be3a456" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#getFirst--&quot;&gt;&lt;code&gt;getFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;deque#getFirst--&quot;&gt; &lt;code&gt;getFirst()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="2772efc22ade84a9481f3bf8c55e91f9cbd1c008" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#offerLast-E-&quot;&gt;&lt;code&gt;offerLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;deque#offerLast-E-&quot;&gt; &lt;code&gt;offerLast(E)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="fa6250a70146f2631f9fe33099bdcbbee72c179c" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#peekFirst()&quot;&gt;&lt;code&gt;Deque.peekFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;deque#peekFirst()&quot;&gt; &lt;code&gt;Deque.peekFirst()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="396765a86fbb7bdfb4abb942856005cf95afa374" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#peekFirst--&quot;&gt;&lt;code&gt;peekFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;deque#peekFirst--&quot;&gt; &lt;code&gt;peekFirst()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="7a613c8b576425dfa4ea9313922a4eb950542811" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#pollFirst()&quot;&gt;&lt;code&gt;Deque.pollFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;deque#pollFirst()&quot;&gt; &lt;code&gt;Deque.pollFirst()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3c429a0973aed6b85b67e3b540ed30b9cfc5b3b5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#pollFirst--&quot;&gt;&lt;code&gt;pollFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;deque#pollFirst--&quot;&gt; &lt;code&gt;pollFirst()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="3029d057d6dc59b232e7eed0a4af8f56540dbddf" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#removeFirst--&quot;&gt;&lt;code&gt;removeFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;deque#removeFirst--&quot;&gt; &lt;code&gt;removeFirst()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="24b009d11c7b1a8b9f8ac1e9ae63463a43aeac15" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#removeFirstOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeFirstOccurrence(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;deque#removeFirstOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeFirstOccurrence(Object)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="59f9a2170534a464fa749a403663fbd5a466cafb" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;instant#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">このメソッドは、量が否定された&lt;a href=&quot;instant#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;と同等です。加算、したがって減算がどのように機能するかについての完全な説明については、そのメソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="2109fc69a4aa29cb9580c5f081baad0a3c197997" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-boolean-&quot;&gt;&lt;code&gt;newMBeanProxy(connection, objectName, interfaceClass,
 false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-boolean-&quot;&gt; &lt;code&gt;newMBeanProxy(connection, objectName, interfaceClass, false)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="c341b0dac95e5c31e97ed0423dc9ed28097f483d" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-boolean-&quot;&gt;&lt;code&gt;newMXBeanProxy(connection, objectName, interfaceClass,
 false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-boolean-&quot;&gt; &lt;code&gt;newMXBeanProxy(connection, objectName, interfaceClass, false)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="2b318b118677eaab0a3ce1f299e1cb60ca177f38" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt;&lt;code&gt;connect(serviceURL, null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt; &lt;code&gt;connect(serviceURL, null)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="f74c047cfd571c36fd5612482e89d051e7303e33" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedblockingdeque#addLast-E-&quot;&gt;&lt;code&gt;addLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;linkedblockingdeque#addLast-E-&quot;&gt; &lt;code&gt;addLast(E)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="8bb02af00d191e0b898003f4e3593065418c52b8" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedblockingdeque#getFirst--&quot;&gt;&lt;code&gt;getFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;linkedblockingdeque#getFirst--&quot;&gt; &lt;code&gt;getFirst&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="7bac904e167d9f58308622a82640847f1c3cdf55" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedblockingdeque#removeFirst--&quot;&gt;&lt;code&gt;removeFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;linkedblockingdeque#removeFirst--&quot;&gt; &lt;code&gt;removeFirst&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="f58b8153cbaeb760942f5eecf4040c8767c9217e" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedblockingdeque#removeFirstOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeFirstOccurrence&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;linkedblockingdeque#removeFirstOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeFirstOccurrence&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="0a4edf0d1327f9808d462cef4f47a06f648fb8a1" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedlist#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;linkedlist#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="9353ad6d61cd960f6a999e78739cde0f5bea707a" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedlist#addFirst-E-&quot;&gt;&lt;code&gt;addFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;linkedlist#addFirst-E-&quot;&gt; &lt;code&gt;addFirst(E)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="7e3f9512237b529fd32d60838c5948d2fa44965b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedlist#addLast-E-&quot;&gt;&lt;code&gt;addLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;linkedlist#addLast-E-&quot;&gt; &lt;code&gt;addLast(E)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="5d6cfd107c0067d4ee4827243702402a98a58351" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedlist#removeFirst--&quot;&gt;&lt;code&gt;removeFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;linkedlist#removeFirst--&quot;&gt; &lt;code&gt;removeFirst()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="480913a4e825d16bba5cf2d5136bbd710a8bef4c" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">このメソッドは、量が否定された&lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;と同等です。加算、したがって減算がどのように機能するかについての完全な説明については、そのメソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="e8b6532c4d4626b0bb3bc299757ff1efa04249f1" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">このメソッドは、量が否定された&lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;と同等です。加算、したがって減算がどのように機能するかについての完全な説明については、そのメソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="f36ce6c9cc788422d65e5cda5aef1d9b37146ed5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">このメソッドは、量が否定された&lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;と同等です。加算、したがって減算がどのように機能するかについての完全な説明については、そのメソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="a1f72a850286a9f076e2ecc148078b95355283f7" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;mbeanserver#instantiate-java.lang.String-java.lang.Object:A-java.lang.String:A-&quot;&gt;&lt;code&gt;instantiate(className, (Object[]) null, (String[]) null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;mbeanserver#instantiate-java.lang.String-java.lang.Object:A-java.lang.String:A-&quot;&gt; &lt;code&gt;instantiate(className, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="635a12545432754314cfce59bd929ae63656163d" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;mbeanserver#instantiate-java.lang.String-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt;&lt;code&gt;instantiate(className, loaderName, (Object[]) null, (String[])
 null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;mbeanserver#instantiate-java.lang.String-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt; &lt;code&gt;instantiate(className, loaderName, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="91d86ce256ea70e69c10b5a1bcd240081ab5edb2" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;mbeanserverconnection#createMBean(java.lang.String,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;createMBean(className, name, (Object[]) null, (String[])
 null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;mbeanserverconnection#createMBean(java.lang.String,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;createMBean(className, name, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9071d4a9819b1b5c7be47c822ea8e88ba1b9dab1" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;mbeanserverconnection#createMBean(java.lang.String,javax.management.ObjectName,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;createMBean(className, name, loaderName, (Object[]) null,
 (String[]) null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;mbeanserverconnection#createMBean(java.lang.String,javax.management.ObjectName,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;createMBean(className, name, loaderName, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="89c45209680bfeca1fdbc673b25290f6aa7ca2f2" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;mbeanserverconnection#createMBean-java.lang.String-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt;&lt;code&gt;createMBean(className, name, (Object[]) null, (String[])
 null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;mbeanserverconnection#createMBean-java.lang.String-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt; &lt;code&gt;createMBean(className, name, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="a8cafac796cf6cc290c7cdd9b8110c234115831f" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;mbeanserverconnection#createMBean-java.lang.String-javax.management.ObjectName-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt;&lt;code&gt;createMBean(className, name, loaderName, (Object[]) null,
 (String[]) null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;mbeanserverconnection#createMBean-java.lang.String-javax.management.ObjectName-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt; &lt;code&gt;createMBean(className, name, loaderName, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="2a27ee3c7c2f51268d5714e413c4cafc2494dc1c" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;offsetdatetime#ofInstant(java.time.Instant,java.time.ZoneId)&quot;&gt;&lt;code&gt;OffsetDateTime.ofInstant(this, offset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;offsetdatetime#ofInstant(java.time.Instant,java.time.ZoneId)&quot;&gt; &lt;code&gt;OffsetDateTime.ofInstant(this, offset)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9814bf1be3d3dad27dd8c2c505eec033f65cf893" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;offsetdatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt;&lt;code&gt;OffsetDateTime.ofInstant(this, offset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、&lt;a href=&quot;offsetdatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt; &lt;code&gt;OffsetDateTime.ofInstant(this, offset)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="d6d59d8223469f3ae35b0245e0bff1fcceb2ea55" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;offsetdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">このメソッドは、量が否定された&lt;a href=&quot;offsetdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;と同等です。加算、したがって減算がどのように機能するかについての完全な説明については、そのメソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="bf56d3e110cc76842dd75c2fd043ba980b3ad666" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;offsettime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">このメソッドは、量が否定された&lt;a href=&quot;offsettime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;と同等です。加算、したがって減算がどのように機能するかについての完全な説明については、そのメソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="fce96be4ee850ad719075e237d19a3e8ef9d43d2" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;year#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">このメソッドは、量が否定された&lt;a href=&quot;year#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;と同等です。加算、したがって減算がどのように機能するかについての完全な説明については、そのメソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="fbff0b66132998944d5c7ce65390d17c579c87a7" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;yearmonth#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">このメソッドは、量が否定された&lt;a href=&quot;yearmonth#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;と同等です。加算、したがって減算がどのように機能するかについての完全な説明については、そのメソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="ee950cddf068259b7b63828c5f80ed32dc32e4ee" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;zoneddatetime#ofInstant(java.time.Instant,java.time.ZoneId)&quot;&gt;&lt;code&gt;ZonedDateTime.ofInstant(this, zone)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;a href=&quot;zoneddatetime#ofInstant(java.time.Instant,java.time.ZoneId)&quot;&gt; &lt;code&gt;ZonedDateTime.ofInstant(this, zone)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f9dcad95eef5e1f66a6642d3074dd0f7a03a518a" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;zoneddatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt;&lt;code&gt;ZonedDateTime.ofInstant(this, zone)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;zoneddatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt; &lt;code&gt;ZonedDateTime.ofInstant(this, zone)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="e975e726acee52c4dc0454797ccfac076ba7a0b4" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;zoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">このメソッドは、量が否定された&lt;a href=&quot;zoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;と同等です。加算、したがって減算がどのように機能するかについての完全な説明については、そのメソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="b6e4a5423f3536b44e4379b2da3db188b9402e89" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;#toString(charset)&lt;/code&gt; that takes a &lt;a href=&quot;../nio/charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is equivalent to &lt;code&gt;#toString(charset)&lt;/code&gt; that takes a &lt;a href=&quot;../nio/charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8cab3b49f8a92934fe2dbdd539367f4a62c851d5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;BitSet.valueOf(ByteBuffer.wrap(bytes))&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;BitSet.valueOf(ByteBuffer.wrap(bytes))&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="d6935f428861ade87e7ea9856a9d29a31becd903" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;BitSet.valueOf(LongBuffer.wrap(longs))&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;BitSet.valueOf(LongBuffer.wrap(longs))&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="59048ab6f8810d2f5ada4aecb2f2426cd2b2e241" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;String.format(this, args)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8b09948219057f50c5f99c3412208abd70ab8e" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;allLineLocations(vm.getDefaultStratum(),null)&lt;/code&gt; - see &lt;a href=&quot;#allLineLocations(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;allLineLocations(String,String)&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dffec148cec737fb0cf69df66b436b2e7a053121" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;createMBeanServer(null)&lt;/code&gt;.</source>
          <target state="translated">このメソッドは &lt;code&gt;createMBeanServer(null)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="1c6036fd658df93950ae3fe4c440892959188969" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;datesUntil(endExclusive, Period.ofDays(1))&lt;/code&gt;.</source>
          <target state="translated">This method is equivalent to &lt;code&gt;datesUntil(endExclusive, Period.ofDays(1))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f26e4b27c8f6a499c75deb49bcda20ff1525ae96" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;lineNumber(vm.getDefaultStratum())&lt;/code&gt; - see &lt;a href=&quot;#lineNumber(java.lang.String)&quot;&gt;&lt;code&gt;lineNumber(String)&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ffa14102ae3e2ad7a347713134cb61e4fd87e79" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;locationsOfLine(vm.getDefaultStratum(), null,
 lineNumber)&lt;/code&gt; - see &lt;a href=&quot;#locationsOfLine(java.lang.String,java.lang.String,int)&quot;&gt;&lt;code&gt;locationsOfLine(java.lang.String,java.lang.String,int)&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0616a07d400f5772695626b3597ddf043d782260" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;negotiate(null)&lt;/code&gt;.</source>
          <target state="translated">このメソッドは &lt;code&gt;negotiate(null)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="71235388a486a22b38053dcdde576c9698b499d6" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;newMBeanServer(null)&lt;/code&gt;.</source>
          <target state="translated">このメソッドは &lt;code&gt;newMBeanServer(null)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="0967c34cd3582219ab8e2f5593c1c9a618143505" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;setInput(input, false, false)&lt;/code&gt;.</source>
          <target state="translated">このメソッドは &lt;code&gt;setInput(input, false, false)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="c85782e3d2b82db588781506096398e47e5e35d5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;setInput(input, seekForwardOnly, false)&lt;/code&gt;.</source>
          <target state="translated">このメソッドは &lt;code&gt;setInput(input, seekForwardOnly, false)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="7a2d62e5bdbd4b4388f8f68d972d364e00cc20de" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;sourceName(vm.getDefaultStratum())&lt;/code&gt; - see &lt;a href=&quot;#sourceName(java.lang.String)&quot;&gt;&lt;code&gt;sourceName(String)&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd214db8fdff8138b049832745d1bbfac21f411b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;sourcePath(vm.getDefaultStratum())&lt;/code&gt; - see &lt;a href=&quot;#sourcePath(java.lang.String)&quot;&gt;&lt;code&gt;sourcePath(String)&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0820cbcc17f81d049d119b4c64c3ae608730da1" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling</source>
          <target state="translated">このメソッドは</target>
        </trans-unit>
        <trans-unit id="3af1ab758c175ff9f79dab21da14b593bfd56d46" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling &lt;code&gt;getName(X500Principal.RFC2253)&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;getName(X500Principal.RFC2253)&lt;/code&gt; を呼び出すことと同等です。</target>
        </trans-unit>
        <trans-unit id="f075d48644547d92366ba397af4b70b741827ced" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling &lt;code&gt;getSequencer(true)&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、 &lt;code&gt;getSequencer(true)&lt;/code&gt; を呼び出すことと同等です。</target>
        </trans-unit>
        <trans-unit id="e2941d45be7dc307d2080c5475534b439748562a" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling the &lt;a href=&quot;#getThreadAllocatedBytes(long)&quot;&gt;&lt;code&gt;getThreadAllocatedBytes(long)&lt;/code&gt;&lt;/a&gt; method for each thread ID in the input array &lt;code&gt;ids&lt;/code&gt; and setting the returned value in the corresponding element of the returned array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6395bce0b17c225d2d3df5f5eb9262ccf80a7e4" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling the &lt;a href=&quot;../../../../java.management/java/lang/management/threadmxbean#getThreadCpuTime(long)&quot;&gt;&lt;code&gt;ThreadMXBean.getThreadCpuTime(long)&lt;/code&gt;&lt;/a&gt; method for each thread ID in the input array &lt;code&gt;ids&lt;/code&gt; and setting the returned value in the corresponding element of the returned array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02dd3ddbad7cad9b1205b4a5b4d48fb15fc70a15" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling the &lt;a href=&quot;../../../../java.management/java/lang/management/threadmxbean#getThreadUserTime(long)&quot;&gt;&lt;code&gt;ThreadMXBean.getThreadUserTime(long)&lt;/code&gt;&lt;/a&gt; method for each thread ID in the input array &lt;code&gt;ids&lt;/code&gt; and setting the returned value in the corresponding element of the returned array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce70f0937eb327212fc0cce93b927154a630551c" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling the four-argument constructor with the arguments being &lt;code&gt;protocol&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;-1&lt;/code&gt;, and &lt;code&gt;file&lt;/code&gt;. No validation of the inputs is performed by this constructor.</source>
          <target state="translated">このメソッドは、引数が &lt;code&gt;protocol&lt;/code&gt; 、 &lt;code&gt;host&lt;/code&gt; 、 &lt;code&gt;-1&lt;/code&gt; 、および &lt;code&gt;file&lt;/code&gt; の4つの引数を持つコンストラクターを呼び出すのと同じです。このコンストラクタでは、入力の検証は行われません。</target>
        </trans-unit>
        <trans-unit id="e58276bc1e46bc13531c5457a1d84079eee2b94b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to invoking the 2-arg &lt;a href=&quot;#select(java.util.function.Consumer,long)&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; method with a timeout of &lt;code&gt;0&lt;/code&gt; to block indefinitely.</source>
          <target state="translated">This method is equivalent to invoking the 2-arg &lt;a href=&quot;#select(java.util.function.Consumer,long)&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt; method with a timeout of &lt;code&gt;0&lt;/code&gt; to block indefinitely.</target>
        </trans-unit>
        <trans-unit id="3a9494d0b0f9f9762ac18a11fa9dbac5b8dede9d" translate="yes" xml:space="preserve">
          <source>This method is equivalent to method &lt;code&gt;navigableKeySet&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、メソッド &lt;code&gt;navigableKeySet&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="9a2db21a63f9ffea23934ca2d8003cff93279948" translate="yes" xml:space="preserve">
          <source>This method is equivalent to testing if the set of &lt;a href=&quot;#modifiers()&quot;&gt;&lt;code&gt;modifiers&lt;/code&gt;&lt;/a&gt; contains the &lt;a href=&quot;moduledescriptor.modifier#OPEN&quot;&gt;&lt;code&gt;AUTOMATIC&lt;/code&gt;&lt;/a&gt; modifier.</source>
          <target state="translated">This method is equivalent to testing if the set of &lt;a href=&quot;#modifiers()&quot;&gt; &lt;code&gt;modifiers&lt;/code&gt; &lt;/a&gt; contains the &lt;a href=&quot;moduledescriptor.modifier#OPEN&quot;&gt; &lt;code&gt;AUTOMATIC&lt;/code&gt; &lt;/a&gt; modifier.</target>
        </trans-unit>
        <trans-unit id="4b595e2b228b94354bcd14d0f1c3dc39ed86a3de" translate="yes" xml:space="preserve">
          <source>This method is equivalent to testing if the set of &lt;a href=&quot;#modifiers()&quot;&gt;&lt;code&gt;modifiers&lt;/code&gt;&lt;/a&gt; contains the &lt;a href=&quot;moduledescriptor.modifier#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt; modifier.</source>
          <target state="translated">This method is equivalent to testing if the set of &lt;a href=&quot;#modifiers()&quot;&gt; &lt;code&gt;modifiers&lt;/code&gt; &lt;/a&gt; contains the &lt;a href=&quot;moduledescriptor.modifier#OPEN&quot;&gt; &lt;code&gt;OPEN&lt;/code&gt; &lt;/a&gt; modifier.</target>
        </trans-unit>
        <trans-unit id="9aec895eff1dfa52f137329c0a08508cf3037898" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the expression:</source>
          <target state="translated">この方法は式と同等です。</target>
        </trans-unit>
        <trans-unit id="d72ed373e62346cb1d21d1574436bb65f1419e38" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following call.</source>
          <target state="translated">このメソッドは、以下の呼び出しに相当します。</target>
        </trans-unit>
        <trans-unit id="708149fca6ea3cb8c860f0b39afae0e0706d4773" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following code (though it may be more efficient):</source>
          <target state="translated">この方法は以下のコードと同等です(より効率的かもしれませんが)。</target>
        </trans-unit>
        <trans-unit id="9c0f236b6b979c07fb74ccf1aea85ba1c004c1d6" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following code (though it may be more efficient): &lt;code&gt;publicLookup().findVirtual(MethodHandle.class, &quot;invoke&quot;, type)&lt;/code&gt;</source>
          <target state="translated">このメソッドは、次のコードと同等です（より効率的かもしれません）： &lt;code&gt;publicLookup().findVirtual(MethodHandle.class, &quot;invoke&quot;, type)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1c2c4ed439efc36310ee4144d344bd24547f01b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following code (though it may be more efficient): &lt;code&gt;publicLookup().findVirtual(MethodHandle.class, &quot;invokeExact&quot;, type)&lt;/code&gt;</source>
          <target state="translated">このメソッドは、次のコードと同等です（より効率的かもしれません）： &lt;code&gt;publicLookup().findVirtual(MethodHandle.class, &quot;invokeExact&quot;, type)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3fa1499b72e6ecfa3a62e1b55f0eb8701d336b5a" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following code (though it may be more efficient): &lt;code&gt;publicLookup().findVirtual(VarHandle.class, accessMode.name(), type)&lt;/code&gt;</source>
          <target state="translated">This method is equivalent to the following code (though it may be more efficient): &lt;code&gt;publicLookup().findVirtual(VarHandle.class, accessMode.name(), type)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1810dc7467cbaffdff093edae9768626e71d3188" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following code:</source>
          <target state="translated">このメソッドは以下のコードと同等です。</target>
        </trans-unit>
        <trans-unit id="4666da77ba161f3de91822d32d0e17494546a560" translate="yes" xml:space="preserve">
          <source>This method is equivalent to:</source>
          <target state="translated">この方法は、これに相当します。</target>
        </trans-unit>
        <trans-unit id="e820dd51328fec0cfd7b707bf309760fc23a3bd4" translate="yes" xml:space="preserve">
          <source>This method is equivalent to: &lt;code&gt;readString(path, StandardCharsets.UTF_8) &lt;/code&gt;</source>
          <target state="translated">This method is equivalent to: &lt;code&gt;readString(path, StandardCharsets.UTF_8) &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b9b90c52d68ff1057d1347dae6d63c590cfaeba" translate="yes" xml:space="preserve">
          <source>This method is equivalent to: &lt;code&gt;writeString(path, test, StandardCharsets.UTF_8, options) &lt;/code&gt;</source>
          <target state="translated">This method is equivalent to: &lt;code&gt;writeString(path, test, StandardCharsets.UTF_8, options) &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e49b542a8893f06fd6fe2f9d42babc87187d989a" translate="yes" xml:space="preserve">
          <source>This method is expected to have the side effect of establishing the content type, and therefore setting the appropriate &lt;code&gt;EditorKit&lt;/code&gt; to use for loading the stream.</source>
          <target state="translated">This method is expected to have the side effect of establishing the content type, and therefore setting the appropriate &lt;code&gt;EditorKit&lt;/code&gt; to use for loading the stream.</target>
        </trans-unit>
        <trans-unit id="d97c9cb5c9d68ff17377cf689580612ca1ea3f89" translate="yes" xml:space="preserve">
          <source>This method is first invoked early in the runtime's startup sequence, at which point it creates the system class loader and sets it as the context class loader of the invoking &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="translated">このメソッドは、最初にランタイムの起動シーケンスの早い段階で呼び出されます。その時点で、システムクラスローダーが作成され、それが呼び出し &lt;code&gt;Thread&lt;/code&gt; のコンテキストクラスローダーとして設定されます。</target>
        </trans-unit>
        <trans-unit id="b6a44a40b5b87ddd3879bf8845c499838cbec50d" translate="yes" xml:space="preserve">
          <source>This method is first invoked early in the runtime's startup sequence, at which point it creates the system class loader. This class loader will be the context class loader for the main application thread (for example, the thread that invokes the &lt;code&gt;main&lt;/code&gt; method of the main class).</source>
          <target state="translated">This method is first invoked early in the runtime's startup sequence, at which point it creates the system class loader. This class loader will be the context class loader for the main application thread (for example, the thread that invokes the &lt;code&gt;main&lt;/code&gt; method of the main class).</target>
        </trans-unit>
        <trans-unit id="2bafb551f599fd6bf4e070922d9b09831dc971ac" translate="yes" xml:space="preserve">
          <source>This method is for cases where a channel is closed when &lt;a href=&quot;../../../java.base/java/nio/channels/selectablechannel#isRegistered()&quot;&gt;&lt;code&gt;registered&lt;/code&gt;&lt;/a&gt; with one or more &lt;code&gt;Selector&lt;/code&gt;s. A channel may remain registered for some time after it is closed. This method is invoked when the channel is eventually deregistered from the last &lt;code&gt;Selector&lt;/code&gt; that it was registered with. It is invoked at most once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ac3f6f01758b6ecc583559b53037e889468544" translate="yes" xml:space="preserve">
          <source>This method is for observers to discover the structural changes that were made. This means that only elements that existed prior to the mutation (and still exist after the mutation) need to have ElementChange records. The changes made available need not be recursive.</source>
          <target state="translated">この方法は、オブザーバーが行われた構造変化を発見するためのものです。つまり、突然変異の前に存在していた(そして突然変異の後にもまだ存在している)要素だけが ElementChange レコードを持つ必要があるということです。利用可能になった変更は再帰的である必要はありません。</target>
        </trans-unit>
        <trans-unit id="3dd3187c1d03e770e6f83bd937acdd8615a19154" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to &lt;a href=&quot;#genKeyPair()&quot;&gt;&lt;code&gt;genKeyPair&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is functionally equivalent to &lt;a href=&quot;#genKeyPair()&quot;&gt; &lt;code&gt;genKeyPair&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="49f6d5ace2de78241a0bb5b94c37d13c87217537" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to &lt;a href=&quot;#generateKeyPair()&quot;&gt;&lt;code&gt;generateKeyPair&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method is functionally equivalent to &lt;a href=&quot;#generateKeyPair()&quot;&gt; &lt;code&gt;generateKeyPair&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b47611efdddda5528d61604e9ecb14293f370ee5" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to &lt;a href=&quot;keypairgenerator#genKeyPair--&quot;&gt;&lt;code&gt;genKeyPair&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、機能的には&lt;a href=&quot;keypairgenerator#genKeyPair--&quot;&gt; &lt;code&gt;genKeyPair&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="617f5c3ccebe696f11ba21ec03006677d00dacc7" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to &lt;a href=&quot;keypairgenerator#generateKeyPair--&quot;&gt;&lt;code&gt;generateKeyPair&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドは、機能的には&lt;a href=&quot;keypairgenerator#generateKeyPair--&quot;&gt; &lt;code&gt;generateKeyPair&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="bcb6e40e8009089b7c765aac669715fb7c2d8a7f" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to:</source>
          <target state="translated">この方法は機能的には同等です。</target>
        </trans-unit>
        <trans-unit id="da61400ab9b3619e2b481cbdab8b36bcaba8770b" translate="yes" xml:space="preserve">
          <source>This method is idempotent. It succeeds even if the terminal atomic name is not bound in the target context, but throws &lt;code&gt;NameNotFoundException&lt;/code&gt; if any of the intermediate contexts do not exist.</source>
          <target state="translated">このメソッドはべき等です。端末の原子名がターゲットコンテキストにバインドされていなくても成功しますが、中間コンテキストが存在しない場合は &lt;code&gt;NameNotFoundException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="7b1468159ff67e9e35f87b3d898eb55e55866de7" translate="yes" xml:space="preserve">
          <source>This method is idempotent: if the inbound side has already been closed, this method does not do anything.</source>
          <target state="translated">このメソッドは、受信側が既に閉じられている場合、このメソッドは何もしません。</target>
        </trans-unit>
        <trans-unit id="8a96ed950b6f8413be59b1869a08784b43f0f1cc" translate="yes" xml:space="preserve">
          <source>This method is idempotent: if the outbound side has already been closed, this method does not do anything.</source>
          <target state="translated">このメソッドは、出力側が既に閉じられている場合、このメソッドは何もしません。</target>
        </trans-unit>
        <trans-unit id="9f89a0125ece62c8e80accaec6b65003e4e7847d" translate="yes" xml:space="preserve">
          <source>This method is idempotent: invoking it on a context that has already been closed has no effect. Invoking any other method on a closed context is not allowed, and results in undefined behaviour.</source>
          <target state="translated">このメソッドは無意味です:既に閉じられているコンテキスト上でこのメソッドを呼び出しても何の効果もありません。閉じられたコンテキスト上で他のメソッドを呼び出すことは許可されておらず、未定義の振る舞いになります。</target>
        </trans-unit>
        <trans-unit id="040319066f0740be6b223e2c978c42a2db5d2721" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;#add(E)&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface).</source>
          <target state="translated">This method is identical in functionality to the &lt;a href=&quot;#add(E)&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; interface).</target>
        </trans-unit>
        <trans-unit id="34995c581c4067a9f14c1db8e667f72ce8770c12" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;#add(int,E)&quot;&gt;&lt;code&gt;add(int, E)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface). Note that the &lt;code&gt;add&lt;/code&gt; method reverses the order of the parameters, to more closely match array usage.</source>
          <target state="translated">This method is identical in functionality to the &lt;a href=&quot;#add(int,E)&quot;&gt; &lt;code&gt;add(int, E)&lt;/code&gt; &lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; interface). Note that the &lt;code&gt;add&lt;/code&gt; method reverses the order of the parameters, to more closely match array usage.</target>
        </trans-unit>
        <trans-unit id="d65dd2e2b66f278259e5d1b3314423b71eff9ef4" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;#clear()&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface).</source>
          <target state="translated">This method is identical in functionality to the &lt;a href=&quot;#clear()&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; interface).</target>
        </trans-unit>
        <trans-unit id="acaefd8a6a3fe2062709c9c76ec87f7bf1f9a4f1" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;#get(int)&quot;&gt;&lt;code&gt;get(int)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface).</source>
          <target state="translated">This method is identical in functionality to the &lt;a href=&quot;#get(int)&quot;&gt; &lt;code&gt;get(int)&lt;/code&gt; &lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; interface).</target>
        </trans-unit>
        <trans-unit id="1d74ada00cc126fab24dca9149fe62a61dad376b" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;#remove(int)&quot;&gt;&lt;code&gt;remove(int)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface). Note that the &lt;code&gt;remove&lt;/code&gt; method returns the old value that was stored at the specified position.</source>
          <target state="translated">This method is identical in functionality to the &lt;a href=&quot;#remove(int)&quot;&gt; &lt;code&gt;remove(int)&lt;/code&gt; &lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; interface). Note that the &lt;code&gt;remove&lt;/code&gt; method returns the old value that was stored at the specified position.</target>
        </trans-unit>
        <trans-unit id="b07b6fc3bcba9d57d07754893096181f0d4b88a5" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;#remove(java.lang.Object)&quot;&gt;&lt;code&gt;remove(Object)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface).</source>
          <target state="translated">This method is identical in functionality to the &lt;a href=&quot;#remove(java.lang.Object)&quot;&gt; &lt;code&gt;remove(Object)&lt;/code&gt; &lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; interface).</target>
        </trans-unit>
        <trans-unit id="97222cc5f74e6f04324037f45884e04dd546504b" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;#set(int,E)&quot;&gt;&lt;code&gt;set(int, E)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface). Note that the &lt;code&gt;set&lt;/code&gt; method reverses the order of the parameters, to more closely match array usage. Note also that the &lt;code&gt;set&lt;/code&gt; method returns the old value that was stored at the specified position.</source>
          <target state="translated">This method is identical in functionality to the &lt;a href=&quot;#set(int,E)&quot;&gt; &lt;code&gt;set(int, E)&lt;/code&gt; &lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; interface). Note that the &lt;code&gt;set&lt;/code&gt; method reverses the order of the parameters, to more closely match array usage. Note also that the &lt;code&gt;set&lt;/code&gt; method returns the old value that was stored at the specified position.</target>
        </trans-unit>
        <trans-unit id="b7f8b066278a49110a120a172d5b2d1cc50d1fbb" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;vector#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface).</source>
          <target state="translated">このメソッドの機能は、&lt;a href=&quot;vector#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;メソッド（&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;インターフェースの一部）と同じです。</target>
        </trans-unit>
        <trans-unit id="f6e8c2ec5f9d3776676bdd1e96762993efde14a2" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;vector#add-int-E-&quot;&gt;&lt;code&gt;add(int, E)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface). Note that the &lt;code&gt;add&lt;/code&gt; method reverses the order of the parameters, to more closely match array usage.</source>
          <target state="translated">このメソッドの機能は、&lt;a href=&quot;vector#add-int-E-&quot;&gt; &lt;code&gt;add(int, E)&lt;/code&gt; &lt;/a&gt;メソッド（&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;インターフェースの一部）と同じです。 &lt;code&gt;add&lt;/code&gt; メソッドはパラメータの順序を逆にして、配列の使用法にさらに一致させることに注意してください。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
