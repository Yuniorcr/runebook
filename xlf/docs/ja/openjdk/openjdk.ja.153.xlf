<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="315f63d583a4676ef18933ae7199a0ed0f9a00e4" translate="yes" xml:space="preserve">
          <source>The timer notifications are created and handled by the timer MBean.</source>
          <target state="translated">タイマー通知は、タイマーMBeanで作成・処理されます。</target>
        </trans-unit>
        <trans-unit id="cd191085be187917516f28d90bc41b5e0e055de2" translate="yes" xml:space="preserve">
          <source>The timer service relies on the system date of the host where the &lt;code&gt;Timer&lt;/code&gt; class is loaded. Listeners may receive untimely notifications if their host has a different system date. To avoid such problems, synchronize the system date of all host machines where timing is needed.</source>
          <target state="translated">タイマーサービスは、 &lt;code&gt;Timer&lt;/code&gt; クラスが読み込まれるホストのシステム日付に依存します。リスナーは、ホストのシステム日付が異なる場合、タイミングよく通知を受け取ることがあります。このような問題を回避するには、タイミングが必要なすべてのホストマシンのシステム日付を同期します。</target>
        </trans-unit>
        <trans-unit id="60a7b8fc73dec0735c0c82b6db258aba41d55181" translate="yes" xml:space="preserve">
          <source>The timestamp of this &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;UUID&lt;/code&gt; のタイムスタンプ。</target>
        </trans-unit>
        <trans-unit id="5d91c8abe6606f2a3d89bcf82e749e9e60f3b44c" translate="yes" xml:space="preserve">
          <source>The timestamp or &lt;code&gt;null&lt;/code&gt; if none is present.</source>
          <target state="translated">タイムスタンプ。存在しない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41a65048c31509f7e0113cb6ea8961ee3f79f086" translate="yes" xml:space="preserve">
          <source>The timestamp value associated with this UUID.</source>
          <target state="translated">このUUIDに関連付けられたタイムスタンプ値。</target>
        </trans-unit>
        <trans-unit id="77858a6a5789b904ad06d6e90ad129b1b4ed75fb" translate="yes" xml:space="preserve">
          <source>The timestamp value is only meaningful in a time-based UUID, which has version type 1. If this &lt;code&gt;UUID&lt;/code&gt; is not a time-based UUID then this method throws UnsupportedOperationException.</source>
          <target state="translated">タイムスタンプ値は、バージョンタイプ1の時間ベースのUUIDでのみ意味があります。この &lt;code&gt;UUID&lt;/code&gt; が時間ベースのUUIDでない場合、このメソッドはUnsupportedOperationExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="562d9979ad13d306cfdc69375e27b692b4c4e6be" translate="yes" xml:space="preserve">
          <source>The timestamp's date and time.</source>
          <target state="translated">タイムスタンプの日付と時刻。</target>
        </trans-unit>
        <trans-unit id="2f99efc0a5831891f40ab823d3bf06354b6d699f" translate="yes" xml:space="preserve">
          <source>The timing division type of the sequence.</source>
          <target state="translated">シーケンスのタイミング分割タイプ。</target>
        </trans-unit>
        <trans-unit id="b61d7655e56c95f2266c2fad01803ab318ea6674" translate="yes" xml:space="preserve">
          <source>The timing information and resolution for a track is controlled by and stored in the sequence containing the track. A given &lt;code&gt;Track&lt;/code&gt; is considered to belong to the particular &lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt; that maintains its timing. For this reason, a new (empty) track is created by calling the &lt;a href=&quot;sequence#createTrack()&quot;&gt;&lt;code&gt;Sequence.createTrack()&lt;/code&gt;&lt;/a&gt; method, rather than by directly invoking a &lt;code&gt;Track&lt;/code&gt; constructor.</source>
          <target state="translated">トラックのタイミング情報と解像度は、トラックを含むシーケンスによって制御され、保存されます。特定の &lt;code&gt;Track&lt;/code&gt; は、そのタイミングを維持する特定の&lt;a href=&quot;sequence&quot;&gt; &lt;code&gt;Sequence&lt;/code&gt; &lt;/a&gt;に属していると見なされます。このため、新しい（空の）トラックは、 &lt;code&gt;Track&lt;/code&gt; コンストラクターを直接呼び出すのではなく、&lt;a href=&quot;sequence#createTrack()&quot;&gt; &lt;code&gt;Sequence.createTrack()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって作成されます。</target>
        </trans-unit>
        <trans-unit id="d0374fbf6438fbc3467dbf34b4e05683b94595c3" translate="yes" xml:space="preserve">
          <source>The timing information and resolution for a track is controlled by and stored in the sequence containing the track. A given &lt;code&gt;Track&lt;/code&gt; is considered to belong to the particular &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; that maintains its timing. For this reason, a new (empty) track is created by calling the &lt;code&gt;&lt;a href=&quot;sequence#createTrack--&quot;&gt;&lt;code&gt;Sequence.createTrack()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method, rather than by directly invoking a &lt;code&gt;Track&lt;/code&gt; constructor.</source>
          <target state="translated">トラックのタイミング情報と解像度は、トラックを含むシーケンスによって制御および格納されます。特定の &lt;code&gt;Track&lt;/code&gt; は、そのタイミングを維持する特定の &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; に属していると見なされます。このため、 &lt;code&gt;Track&lt;/code&gt; コンストラクターを直接呼び出すのではなく、 &lt;code&gt;&lt;a href=&quot;sequence#createTrack--&quot;&gt;&lt;code&gt;Sequence.createTrack()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドを呼び出すことによって、新しい（空の）トラックが作成されます。</target>
        </trans-unit>
        <trans-unit id="6e6d3880f415cd4ec5def31690bbd751de4d2179" translate="yes" xml:space="preserve">
          <source>The timing resolution of the MIDI file.</source>
          <target state="translated">MIDIファイルのタイミング分解能。</target>
        </trans-unit>
        <trans-unit id="94d8255f666f78ba91e4c0653d1ddca333f07432" translate="yes" xml:space="preserve">
          <source>The timing resolution of the sequence.</source>
          <target state="translated">シーケンスのタイミング分解能。</target>
        </trans-unit>
        <trans-unit id="5ea038093e385d3d5e2fd57f0725ac3f67c851e4" translate="yes" xml:space="preserve">
          <source>The title displayed in this internal frame's title bar.</source>
          <target state="translated">この内部フレームのタイトルバーに表示されるタイトル。</target>
        </trans-unit>
        <trans-unit id="acaeefe50cb5c6ee79bdfe6165ed6efca1e633ed" translate="yes" xml:space="preserve">
          <source>The title for the dialog box.</source>
          <target state="translated">ダイアログボックスのタイトル。</target>
        </trans-unit>
        <trans-unit id="3a3106a5519a4cc49f3d21712c3f6fa49becfeb4" translate="yes" xml:space="preserve">
          <source>The title may or may not be displayed, depending on the actual type of window created.</source>
          <target state="translated">実際に作成されたウィンドウの種類によっては、タイトルが表示される場合とされない場合があります。</target>
        </trans-unit>
        <trans-unit id="8120bf9b224de89c2920e1546dcda46c8b1f8843" translate="yes" xml:space="preserve">
          <source>The title pane component used in the desktop icon.</source>
          <target state="translated">デスクトップアイコンで使用されるタイトルペインコンポーネント。</target>
        </trans-unit>
        <trans-unit id="53048a7dfc38ea7b3d5b7194f51d45f9a8b221a2" translate="yes" xml:space="preserve">
          <source>The title the border should display.</source>
          <target state="translated">ボーダーに表示するタイトル。</target>
        </trans-unit>
        <trans-unit id="6c8e5b4d5d69012c519b74be2af0f0e1bad6f4c4" translate="yes" xml:space="preserve">
          <source>The token was a duplicate of an earlier token.</source>
          <target state="translated">トークンは以前のトークンと重複していました。</target>
        </trans-unit>
        <trans-unit id="469511f0f8c8e5bb2c80808eab9d90b35b66e458" translate="yes" xml:space="preserve">
          <source>The token was a duplicate of an earlier token. This is a fatal error code that may occur during context establishment. It is not used to indicate supplementary status values. The MessageProp object is used for that purpose.</source>
          <target state="translated">トークンは以前のトークンと重複していました。これは、コンテキストの確立中に発生する可能性のある致命的なエラーコードです。補足的なステータス値を示すためには使用されません。MessageProp オブジェクトはその目的のために使用されます。</target>
        </trans-unit>
        <trans-unit id="309f8befb903508c4999847b0b027aa02db2ad23" translate="yes" xml:space="preserve">
          <source>The token's validity period has expired.</source>
          <target state="translated">トークンの有効期限が切れました。</target>
        </trans-unit>
        <trans-unit id="c12371230e30f66f3a76ec6704bded2a17df9644" translate="yes" xml:space="preserve">
          <source>The token's validity period has expired. This is a fatal error code that may occur during context establishment. It is not used to indicate supplementary status values. The MessageProp object is used for that purpose.</source>
          <target state="translated">トークンの有効期限が切れました。これは、コンテキストの確立中に発生する可能性のある致命的なエラーコードです。補足的なステータス値を示すためには使用されません。MessageProp オブジェクトはその目的のために使用されます。</target>
        </trans-unit>
        <trans-unit id="46bd53fc951ee54ff26208f7f7d6b401775175dc" translate="yes" xml:space="preserve">
          <source>The tool environment is not required to support annotation processors that access environmental resources, either &lt;a href=&quot;roundenvironment&quot;&gt;per round&lt;/a&gt; or &lt;a href=&quot;processingenvironment&quot;&gt;cross-round&lt;/a&gt;, in a multi-threaded fashion.</source>
          <target state="translated">ツール環境は、マルチスレッド方式で&lt;a href=&quot;processingenvironment&quot;&gt;ラウンド&lt;/a&gt;&lt;a href=&quot;roundenvironment&quot;&gt;ごと&lt;/a&gt;またはクロスラウンドごとに環境リソースにアクセスするアノテーションプロセッサをサポートする必要はありません。</target>
        </trans-unit>
        <trans-unit id="475033ec07ec172731d36e8e1a8c4e34cb1c0c10" translate="yes" xml:space="preserve">
          <source>The tool uses a</source>
          <target state="translated">ツールは</target>
        </trans-unit>
        <trans-unit id="60edabc59c6f9e62a5a0fdea67fe30d15095591d" translate="yes" xml:space="preserve">
          <source>The tooltip text displayed on the approve button when a directory is selected and the current selection mode is FILES_ONLY.</source>
          <target state="translated">ディレクトリが選択されていて、現在の選択モードがFILES_ONLYの場合、承認ボタンに表示されるツールチップテキスト。</target>
        </trans-unit>
        <trans-unit id="6ee07dce8496ccc8327ec779a3d953aaa0190c20" translate="yes" xml:space="preserve">
          <source>The top input tray in the printer.</source>
          <target state="translated">プリンター内の上部の入力トレイです。</target>
        </trans-unit>
        <trans-unit id="401590292bf1267b8c693854dc6321d52720a8be" translate="yes" xml:space="preserve">
          <source>The top inset of the border.</source>
          <target state="translated">ボーダーの上部のインセット。</target>
        </trans-unit>
        <trans-unit id="42a671ce68c829c9c3682af0e642fe256fbef14d" translate="yes" xml:space="preserve">
          <source>The top-level error handler that reacts to otherwise uncaught exceptions does not print out a message or otherwise notify the application if the uncaught exception is an instance of &lt;code&gt;ThreadDeath&lt;/code&gt;.</source>
          <target state="translated">キャッチされない例外に反応するトップレベルのエラーハンドラーは、メッセージを出力しないか、キャッチされない例外が &lt;code&gt;ThreadDeath&lt;/code&gt; のインスタンスであるかどうかをアプリケーションに通知しません。</target>
        </trans-unit>
        <trans-unit id="46f6d47ae13aad5695f239448bb57766c13e2aa1" translate="yes" xml:space="preserve">
          <source>The total length of the message in bytes (the status byte plus any data bytes)</source>
          <target state="translated">メッセージの総長をバイト単位で表したもの(ステータス・バイトとデータ・バイト)。</target>
        </trans-unit>
        <trans-unit id="17fecdd4ddcdb8672f8d5932951da08117bd4dd0" translate="yes" xml:space="preserve">
          <source>The total number of bits in the pixel.</source>
          <target state="translated">ピクセル内の総ビット数。</target>
        </trans-unit>
        <trans-unit id="05917e7da6988078054932792c0c5486cd4b1b28" translate="yes" xml:space="preserve">
          <source>The total number of points.</source>
          <target state="translated">総点数です。</target>
        </trans-unit>
        <trans-unit id="f62e7ead83f7b630f60dc2cbbcf456264118e6c3" translate="yes" xml:space="preserve">
          <source>The total number of points. The value of &lt;code&gt;npoints&lt;/code&gt; represents the number of valid points in this &lt;code&gt;Polygon&lt;/code&gt; and might be less than the number of elements in &lt;a href=&quot;#xpoints&quot;&gt;&lt;code&gt;xpoints&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ypoints&quot;&gt;&lt;code&gt;ypoints&lt;/code&gt;&lt;/a&gt;. This value can be 0.</source>
          <target state="translated">ポイントの総数。 &lt;code&gt;npoints&lt;/code&gt; の値は、この &lt;code&gt;Polygon&lt;/code&gt; 有効なポイントの数を表し、&lt;a href=&quot;#xpoints&quot;&gt; &lt;code&gt;xpoints&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#ypoints&quot;&gt; &lt;code&gt;ypoints&lt;/code&gt; の&lt;/a&gt;要素の数よりも少ない場合があります。この値は0にすることができます。</target>
        </trans-unit>
        <trans-unit id="7ad0ea114ec1ddf71f5fe2d46d0cb9e7197a57a0" translate="yes" xml:space="preserve">
          <source>The total number of significant digits in</source>
          <target state="translated">の有効桁数の合計。</target>
        </trans-unit>
        <trans-unit id="e8f848286d69d23ec4b7259715c33925c847df30" translate="yes" xml:space="preserve">
          <source>The total size of the document including all external resources, this number might change as a document is being parsed if references to more external resources are seen.</source>
          <target state="translated">すべての外部リソースを含むドキュメントの合計サイズですが、より多くの外部リソースへの参照が表示されている場合は、ドキュメントが解析されているときにこの数値が変わることがあります。</target>
        </trans-unit>
        <trans-unit id="1a52eb79799de442c045f35d0474d14d18b85672" translate="yes" xml:space="preserve">
          <source>The total size of the document including all external resources, this number might change as a document is being parsed if references to more external resources are seen. A value of &lt;code&gt;0&lt;/code&gt; is returned if the total size cannot be determined or estimated.</source>
          <target state="translated">すべての外部リソースを含むドキュメントの合計サイズ。より多くの外部リソースへの参照が見られる場合、ドキュメントの解析中にこの数値が変わる可能性があります。合計サイズを決定または見積もることができない場合は、値 &lt;code&gt;0&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="c7cfb3d21fdcbe867349c0a9b8497b711e26d212" translate="yes" xml:space="preserve">
          <source>The total size of the list.</source>
          <target state="translated">リストの合計サイズです。</target>
        </trans-unit>
        <trans-unit id="6b5d7d5da983bf443ff8b0d755377059b977f35d" translate="yes" xml:space="preserve">
          <source>The tracking value is multiplied by the font point size and passed through the font transform to determine an additional amount to add to the advance of each glyph cluster. Positive tracking values will inhibit formation of optional ligatures. Tracking values are typically between &lt;code&gt;-0.1&lt;/code&gt; and &lt;code&gt;0.3&lt;/code&gt;; values outside this range are generally not desirable.</source>
          <target state="translated">トラッキング値にフォントポイントサイズを掛け、フォント変換を通過させて、各グリフクラスターの前進に追加する追加の量を決定します。正のトラッキング値は、オプションの合字の形成を抑制します。追跡値は通常 &lt;code&gt;-0.1&lt;/code&gt; から &lt;code&gt;0.3&lt;/code&gt; の間です。この範囲外の値は一般的に望ましくありません。</target>
        </trans-unit>
        <trans-unit id="703deab7518e04de6cf78487901807570cefd5e8" translate="yes" xml:space="preserve">
          <source>The transaction branch has been heuristically committed and rolled back.</source>
          <target state="translated">トランザクションブランチはヒューリスティックにコミットされ、ロールバックされています。</target>
        </trans-unit>
        <trans-unit id="14b4d7ed7740cc11b56bff202adfa6d5c222e033" translate="yes" xml:space="preserve">
          <source>The transaction branch has been heuristically committed.</source>
          <target state="translated">トランザクションブランチはヒューリスティックにコミットされています。</target>
        </trans-unit>
        <trans-unit id="da0babcbf37a3af594d97dc69b6bf086d7544d2c" translate="yes" xml:space="preserve">
          <source>The transaction branch has been heuristically rolled back.</source>
          <target state="translated">取引分岐はヒューリスティックにロールバックされています。</target>
        </trans-unit>
        <trans-unit id="050d9fced3f39f16dd7abd1393e7514ef1ce5372" translate="yes" xml:space="preserve">
          <source>The transaction branch has been read-only and has been committed.</source>
          <target state="translated">トランザクションブランチは読み取り専用になっており、コミットされています。</target>
        </trans-unit>
        <trans-unit id="33db632dad51ea9ae41ea3cf6edbcd4f22719c4e" translate="yes" xml:space="preserve">
          <source>The transaction branch may have been heuristically completed.</source>
          <target state="translated">取引分岐はヒューリスティックに完了している可能性があります。</target>
        </trans-unit>
        <trans-unit id="861c2375e08c3476b0904853fa18832f2c36bb4e" translate="yes" xml:space="preserve">
          <source>The transaction branch was read-only and has been committed.</source>
          <target state="translated">トランザクションブランチは読み取り専用で、コミットされました。</target>
        </trans-unit>
        <trans-unit id="b793d2f86bb5ddf2929ec67d8f137dd2ab9dd816" translate="yes" xml:space="preserve">
          <source>The transaction work has been prepared normally.</source>
          <target state="translated">取引作業は普通に準備されています。</target>
        </trans-unit>
        <trans-unit id="9df96b47070ad60931e75c25b6080817de2717a9" translate="yes" xml:space="preserve">
          <source>The transfer &lt;em&gt;will not necessarily&lt;/em&gt; have been completed at the return of this call (i.e. the call does not block waiting for the drop). The transfer will take place through the Swing implementation of the &lt;code&gt;java.awt.dnd&lt;/code&gt; mechanism, requiring no further effort from the developer. The &lt;code&gt;exportDone&lt;/code&gt; method will be called when the transfer has completed.</source>
          <target state="translated">転送&lt;em&gt;は&lt;/em&gt;、このコールの戻り時に&lt;em&gt;必ずしも&lt;/em&gt;完了しているとは限りません（つまり、コールはドロップの待機をブロックしません）。転送は、 &lt;code&gt;java.awt.dnd&lt;/code&gt; メカニズムのSwing実装を介して行われ、開発者による追加の作業は必要ありません。 &lt;code&gt;exportDone&lt;/code&gt; の転送が完了したときにメソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a8c4e8eb43c79370beb6a0b967d482c111e1ea42" translate="yes" xml:space="preserve">
          <source>The transfer will take place using the &lt;code&gt;java.awt.datatransfer&lt;/code&gt; mechanism, requiring no further effort from the developer. Any data transfer &lt;em&gt;will&lt;/em&gt; be complete and the &lt;code&gt;exportDone&lt;/code&gt; method will be called with the action that occurred, before this method returns. Should the clipboard be unavailable when attempting to place data on it, the &lt;code&gt;IllegalStateException&lt;/code&gt; thrown by &lt;a href=&quot;../../../java.datatransfer/java/awt/datatransfer/clipboard#setContents(java.awt.datatransfer.Transferable,java.awt.datatransfer.ClipboardOwner)&quot;&gt;&lt;code&gt;Clipboard.setContents(Transferable, ClipboardOwner)&lt;/code&gt;&lt;/a&gt; will be propagated through this method. However, &lt;code&gt;exportDone&lt;/code&gt; will first be called with an action of &lt;code&gt;NONE&lt;/code&gt; for consistency.</source>
          <target state="translated">転送は &lt;code&gt;java.awt.datatransfer&lt;/code&gt; メカニズムを使用して行われ、開発者による追加の作業は必要ありません。このメソッドが戻る前に、すべてのデータ転送&lt;em&gt;が&lt;/em&gt;完了し、発生したアクションで &lt;code&gt;exportDone&lt;/code&gt; メソッドが呼び出されます。クリップボードにデータを配置しようとしたときにクリップボードが使用できない場合、&lt;a href=&quot;../../../java.datatransfer/java/awt/datatransfer/clipboard#setContents(java.awt.datatransfer.Transferable,java.awt.datatransfer.ClipboardOwner)&quot;&gt; &lt;code&gt;Clipboard.setContents(Transferable, ClipboardOwner)&lt;/code&gt; &lt;/a&gt;によってスローされた &lt;code&gt;IllegalStateException&lt;/code&gt; がこのメソッドを介して伝播されます。ただし、一貫性を &lt;code&gt;exportDone&lt;/code&gt; に、exportDoneは最初に &lt;code&gt;NONE&lt;/code&gt; のアクションで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d87f3db630bd4bc1d40103fa67e3e1b3f2db8546" translate="yes" xml:space="preserve">
          <source>The transformation API throw three types of specialized exceptions. A &lt;a href=&quot;transformerfactoryconfigurationerror&quot;&gt;&lt;code&gt;TransformerFactoryConfigurationError&lt;/code&gt;&lt;/a&gt; is parallel to the &lt;a href=&quot;../parsers/factoryconfigurationerror&quot;&gt;&lt;code&gt;FactoryConfigurationError&lt;/code&gt;&lt;/a&gt;, and is thrown when a configuration problem with the TransformerFactory exists. This error will typically be thrown when the transformation factory class specified with the &quot;javax.xml.transform.TransformerFactory&quot; system property cannot be found or instantiated.</source>
          <target state="translated">変換APIは、3種類の特殊な例外をスローします。A &lt;a href=&quot;transformerfactoryconfigurationerror&quot;&gt; &lt;code&gt;TransformerFactoryConfigurationError&lt;/code&gt; は&lt;/a&gt;に平行である&lt;a href=&quot;../parsers/factoryconfigurationerror&quot;&gt; &lt;code&gt;FactoryConfigurationError&lt;/code&gt; &lt;/a&gt;、およびTransformerFactoryの持つ構成の問題が存在する場合にスローされます。このエラーは通常、「javax.xml.transform.TransformerFactory」システムプロパティで指定された変換ファクトリクラスが見つからないか、インスタンス化できない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="fe701db82a538a1330d479e42d071cac878afdf3" translate="yes" xml:space="preserve">
          <source>The transformed &lt;code&gt;Raster&lt;/code&gt;.</source>
          <target state="translated">変換された &lt;code&gt;Raster&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d806ee0a87e3109095fc859ea8eb5cc5532045bc" translate="yes" xml:space="preserve">
          <source>The transformer must continue to try and provide normal transformation after invoking this method. It should still be possible for the application to process the document through to the end if no other errors are encountered.</source>
          <target state="translated">トランスフォーマは、このメソッドを呼び出した後も、通常の変換を提供しようとする必要があります。他のエラーが発生しなければ、アプリケーションはドキュメントを最後まで処理することができるはずです。</target>
        </trans-unit>
        <trans-unit id="5fa423bbef1d4f0ed7a551ce1858b400fcccf4df" translate="yes" xml:space="preserve">
          <source>The transition may be represented as occurring at 24:00.</source>
          <target state="translated">遷移は、24時に発生したものとして表現されてもよい。</target>
        </trans-unit>
        <trans-unit id="0bbbaf76aec7f9bf6cba6b78d515bbb3bf05d201" translate="yes" xml:space="preserve">
          <source>The translation between a parent and child Raster may be determined by subtracting the child's sampleModelTranslateX and sampleModelTranslateY values from those of the parent.</source>
          <target state="translated">親ラスタと子ラスタの間の変換は、親の値から子のsampleModelTranslateXとsampleModelTranslateYの値を差し引くことで決定することができます。</target>
        </trans-unit>
        <trans-unit id="4d3c8c5c72b6b96fb6f59ecad375ecd5b5124beb" translate="yes" xml:space="preserve">
          <source>The translation from pixel sample values to color/alpha components for display or processing purposes is based on a one-to-one correspondence of samples to components. Depending on the transfer type used to create an instance of &lt;code&gt;ComponentColorModel&lt;/code&gt;, the pixel sample values represented by that instance may be signed or unsigned and may be of integral type or float or double (see below for details). The translation from sample values to normalized color/alpha components must follow certain rules. For float and double samples, the translation is an identity, i.e. normalized component values are equal to the corresponding sample values. For integral samples, the translation should be only a simple scale and offset, where the scale and offset constants may be different for each component. The result of applying the scale and offset constants is a set of color/alpha component values, which are guaranteed to fall within a certain range. Typically, the range for a color component will be the range defined by the &lt;code&gt;getMinValue&lt;/code&gt; and &lt;code&gt;getMaxValue&lt;/code&gt; methods of the &lt;code&gt;ColorSpace&lt;/code&gt; class. The range for an alpha component should be 0.0 to 1.0.</source>
          <target state="translated">The translation from pixel sample values to color/alpha components for display or processing purposes is based on a one-to-one correspondence of samples to components. Depending on the transfer type used to create an instance of &lt;code&gt;ComponentColorModel&lt;/code&gt; , the pixel sample values represented by that instance may be signed or unsigned and may be of integral type or float or double (see below for details). The translation from sample values to normalized color/alpha components must follow certain rules. For float and double samples, the translation is an identity, i.e. normalized component values are equal to the corresponding sample values. For integral samples, the translation should be only a simple scale and offset, where the scale and offset constants may be different for each component. The result of applying the scale and offset constants is a set of color/alpha component values, which are guaranteed to fall within a certain range. Typically, the range for a color component will be the range defined by the &lt;code&gt;getMinValue&lt;/code&gt; and &lt;code&gt;getMaxValue&lt;/code&gt; methods of the &lt;code&gt;ColorSpace&lt;/code&gt; class. The range for an alpha component should be 0.0 to 1.0.</target>
        </trans-unit>
        <trans-unit id="b65a261d80d53542a10bedce8edbc81f70d91963" translate="yes" xml:space="preserve">
          <source>The translation from pixel values to color/alpha components for display or processing purposes is a one-to-one correspondence of samples to components. A &lt;code&gt;DirectColorModel&lt;/code&gt; is typically used with image data which uses masks to define packed samples. For example, a &lt;code&gt;DirectColorModel&lt;/code&gt; can be used in conjunction with a &lt;code&gt;SinglePixelPackedSampleModel&lt;/code&gt; to construct a &lt;a href=&quot;bufferedimage&quot;&gt;&lt;code&gt;BufferedImage&lt;/code&gt;&lt;/a&gt;. Normally the masks used by the &lt;a href=&quot;samplemodel&quot;&gt;&lt;code&gt;SampleModel&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;ColorModel&lt;/code&gt; would be the same. However, if they are different, the color interpretation of pixel data will be done according to the masks of the &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">The translation from pixel values to color/alpha components for display or processing purposes is a one-to-one correspondence of samples to components. A &lt;code&gt;DirectColorModel&lt;/code&gt; is typically used with image data which uses masks to define packed samples. For example, a &lt;code&gt;DirectColorModel&lt;/code&gt; can be used in conjunction with a &lt;code&gt;SinglePixelPackedSampleModel&lt;/code&gt; to construct a &lt;a href=&quot;bufferedimage&quot;&gt; &lt;code&gt;BufferedImage&lt;/code&gt; &lt;/a&gt;. Normally the masks used by the &lt;a href=&quot;samplemodel&quot;&gt; &lt;code&gt;SampleModel&lt;/code&gt; &lt;/a&gt; and the &lt;code&gt;ColorModel&lt;/code&gt; would be the same. However, if they are different, the color interpretation of pixel data will be done according to the masks of the &lt;code&gt;ColorModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="168b1d4ef4c25a61d82bab781cf817cb6ee6ff78" translate="yes" xml:space="preserve">
          <source>The translation from pixel values to color/alpha components for display or processing purposes is a one-to-one correspondence of samples to components. A &lt;code&gt;PackedColorModel&lt;/code&gt; is typically used with image data that uses masks to define packed samples. For example, a &lt;code&gt;PackedColorModel&lt;/code&gt; can be used in conjunction with a &lt;a href=&quot;singlepixelpackedsamplemodel&quot;&gt;&lt;code&gt;SinglePixelPackedSampleModel&lt;/code&gt;&lt;/a&gt; to construct a &lt;a href=&quot;bufferedimage&quot;&gt;&lt;code&gt;BufferedImage&lt;/code&gt;&lt;/a&gt;. Normally the masks used by the &lt;a href=&quot;samplemodel&quot;&gt;&lt;code&gt;SampleModel&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;ColorModel&lt;/code&gt; would be the same. However, if they are different, the color interpretation of pixel data is done according to the masks of the &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">The translation from pixel values to color/alpha components for display or processing purposes is a one-to-one correspondence of samples to components. A &lt;code&gt;PackedColorModel&lt;/code&gt; is typically used with image data that uses masks to define packed samples. For example, a &lt;code&gt;PackedColorModel&lt;/code&gt; can be used in conjunction with a &lt;a href=&quot;singlepixelpackedsamplemodel&quot;&gt; &lt;code&gt;SinglePixelPackedSampleModel&lt;/code&gt; &lt;/a&gt; to construct a &lt;a href=&quot;bufferedimage&quot;&gt; &lt;code&gt;BufferedImage&lt;/code&gt; &lt;/a&gt;. Normally the masks used by the &lt;a href=&quot;samplemodel&quot;&gt; &lt;code&gt;SampleModel&lt;/code&gt; &lt;/a&gt; and the &lt;code&gt;ColorModel&lt;/code&gt; would be the same. However, if they are different, the color interpretation of pixel data is done according to the masks of the &lt;code&gt;ColorModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5d7a0a9a5aa913b72a0d7dce956d6a2d0147d1c" translate="yes" xml:space="preserve">
          <source>The translucency levels of individual pixels may also be effected by the alpha component of their color (see &lt;a href=&quot;#setBackground(java.awt.Color)&quot;&gt;&lt;code&gt;setBackground(Color)&lt;/code&gt;&lt;/a&gt;) and the current shape of this window (see &lt;a href=&quot;#setShape(java.awt.Shape)&quot;&gt;&lt;code&gt;setShape(Shape)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">The translucency levels of individual pixels may also be effected by the alpha component of their color (see &lt;a href=&quot;#setBackground(java.awt.Color)&quot;&gt; &lt;code&gt;setBackground(Color)&lt;/code&gt; &lt;/a&gt;) and the current shape of this window (see &lt;a href=&quot;#setShape(java.awt.Shape)&quot;&gt; &lt;code&gt;setShape(Shape)&lt;/code&gt; &lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="2749ff4c08edcd16b069e9cf4d2ed0371273c113" translate="yes" xml:space="preserve">
          <source>The translucency levels of individual pixels may also be effected by the alpha component of their color (see &lt;a href=&quot;#setBackground(java.awt.Color)&quot;&gt;&lt;code&gt;setBackground(Color)&lt;/code&gt;&lt;/a&gt;) and the opacity value (see &lt;a href=&quot;#setOpacity(float)&quot;&gt;&lt;code&gt;setOpacity(float)&lt;/code&gt;&lt;/a&gt;). See &lt;a href=&quot;graphicsdevice.windowtranslucency&quot;&gt;&lt;code&gt;GraphicsDevice.WindowTranslucency&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">The translucency levels of individual pixels may also be effected by the alpha component of their color (see &lt;a href=&quot;#setBackground(java.awt.Color)&quot;&gt; &lt;code&gt;setBackground(Color)&lt;/code&gt; &lt;/a&gt;) and the opacity value (see &lt;a href=&quot;#setOpacity(float)&quot;&gt; &lt;code&gt;setOpacity(float)&lt;/code&gt; &lt;/a&gt;). See &lt;a href=&quot;graphicsdevice.windowtranslucency&quot;&gt; &lt;code&gt;GraphicsDevice.WindowTranslucency&lt;/code&gt; &lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="7c1306905f8e445cab20995e9caae10676aed4f2" translate="yes" xml:space="preserve">
          <source>The transparency of an &lt;code&gt;IndexColorModel&lt;/code&gt; object is determined by examining the alpha components of the colors in the colormap and choosing the most specific value after considering the optional alpha values and any transparent index specified. The transparency value is &lt;code&gt;Transparency.OPAQUE&lt;/code&gt; only if all valid colors in the colormap are opaque and there is no valid transparent pixel. If all valid colors in the colormap are either completely opaque (alpha = 1.0) or completely transparent (alpha = 0.0), which typically occurs when a valid transparent pixel is specified, the value is &lt;code&gt;Transparency.BITMASK&lt;/code&gt;. Otherwise, the value is &lt;code&gt;Transparency.TRANSLUCENT&lt;/code&gt;, indicating that some valid color has an alpha component that is neither completely transparent nor completely opaque (0.0 &amp;lt; alpha &amp;lt; 1.0).</source>
          <target state="translated">The transparency of an &lt;code&gt;IndexColorModel&lt;/code&gt; object is determined by examining the alpha components of the colors in the colormap and choosing the most specific value after considering the optional alpha values and any transparent index specified. The transparency value is &lt;code&gt;Transparency.OPAQUE&lt;/code&gt; only if all valid colors in the colormap are opaque and there is no valid transparent pixel. If all valid colors in the colormap are either completely opaque (alpha = 1.0) or completely transparent (alpha = 0.0), which typically occurs when a valid transparent pixel is specified, the value is &lt;code&gt;Transparency.BITMASK&lt;/code&gt; . Otherwise, the value is &lt;code&gt;Transparency.TRANSLUCENT&lt;/code&gt; , indicating that some valid color has an alpha component that is neither completely transparent nor completely opaque (0.0 &amp;lt; alpha &amp;lt; 1.0).</target>
        </trans-unit>
        <trans-unit id="c891870f2397ea5ffc5f4c8aade7bd8d1dab8055" translate="yes" xml:space="preserve">
          <source>The transparency value with which this image was created.</source>
          <target state="translated">この画像が作成された透明度の値。</target>
        </trans-unit>
        <trans-unit id="a2e25a1118ce8877391b5f01b4a57a8df400e4ba" translate="yes" xml:space="preserve">
          <source>The tree has no model</source>
          <target state="translated">木にはモデルがない</target>
        </trans-unit>
        <trans-unit id="dd6f791fb336426f0b5c534f66eae3384f79ccf9" translate="yes" xml:space="preserve">
          <source>The trigger.</source>
          <target state="translated">引き金だ</target>
        </trans-unit>
        <trans-unit id="19d46a2a9ae7b495f51fc356027feaf3becd628d" translate="yes" xml:space="preserve">
          <source>The truth value returned by this method is equivalent to: &lt;code&gt;getAnnotation(annotationClass) != null&lt;/code&gt;</source>
          <target state="translated">このメソッドによって返される真理値は次と同等です： &lt;code&gt;getAnnotation(annotationClass) != null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c46d6198c957c6c25b841cf0f4dfb6d6cb250b3" translate="yes" xml:space="preserve">
          <source>The ttl &lt;b&gt;must&lt;/b&gt; be in the range &lt;code&gt; 0 &amp;lt;= ttl &amp;lt;=
 255&lt;/code&gt; or an &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown. Multicast packets sent with a TTL of &lt;code&gt;0&lt;/code&gt; are not transmitted on the network but may be delivered locally.</source>
          <target state="translated">The ttl &lt;b&gt;must&lt;/b&gt; be in the range &lt;code&gt; 0 &amp;lt;= ttl &amp;lt;= 255&lt;/code&gt; or an &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown. Multicast packets sent with a TTL of &lt;code&gt;0&lt;/code&gt; are not transmitted on the network but may be delivered locally.</target>
        </trans-unit>
        <trans-unit id="2485bd279a135141b31dd6331097ba469508ddf1" translate="yes" xml:space="preserve">
          <source>The ttl &lt;b&gt;must&lt;/b&gt; be in the range &lt;code&gt;0 &amp;lt;= ttl &amp;lt;=
 255&lt;/code&gt; or an &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown. Multicast packets sent with a TTL of &lt;code&gt;0&lt;/code&gt; are not transmitted on the network but may be delivered locally.</source>
          <target state="translated">ttl &lt;b&gt;は&lt;/b&gt; &lt;code&gt;0 &amp;lt;= ttl &amp;lt;= 255&lt;/code&gt; の範囲内で&lt;b&gt;なければなりません。&lt;/b&gt;そうで&lt;b&gt;ない&lt;/b&gt;場合、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。TTLが &lt;code&gt;0&lt;/code&gt; で送信されたマルチキャストパケットはネットワーク上で送信されませんが、ローカルに配信される場合があります。</target>
        </trans-unit>
        <trans-unit id="6940391f4a3596501f2f3676ceed69996fe5b256" translate="yes" xml:space="preserve">
          <source>The ttl is an &lt;b&gt;unsigned&lt;/b&gt; 8-bit quantity, and so &lt;b&gt;must&lt;/b&gt; be in the range &lt;code&gt;0 &amp;lt;= ttl &amp;lt;= 0xFF &lt;/code&gt;.</source>
          <target state="translated">ttlは&lt;b&gt;符号なしの&lt;/b&gt; 8ビット量であるため、 &lt;code&gt;0 &amp;lt;= ttl &amp;lt;= 0xFF &lt;/code&gt; 範囲で&lt;b&gt;なければなりません&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="969fb09f0d47cbd4ef59365982ee80f259c1e668" translate="yes" xml:space="preserve">
          <source>The twelve methods described above are summarized in the following table:</source>
          <target state="translated">以上の12の方法をまとめると、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="60737d50d1714cdb7c9a212137135f035cb7e133" translate="yes" xml:space="preserve">
          <source>The two &lt;code&gt;Component&lt;/code&gt;s in a split pane can be aligned left to right using &lt;code&gt;JSplitPane.HORIZONTAL_SPLIT&lt;/code&gt;, or top to bottom using &lt;code&gt;JSplitPane.VERTICAL_SPLIT&lt;/code&gt;. The preferred way to change the size of the &lt;code&gt;Component&lt;/code&gt;s is to invoke &lt;code&gt;setDividerLocation&lt;/code&gt; where &lt;code&gt;location&lt;/code&gt; is either the new x or y position, depending on the orientation of the &lt;code&gt;JSplitPane&lt;/code&gt;.</source>
          <target state="translated">The two &lt;code&gt;Component&lt;/code&gt; s in a split pane can be aligned left to right using &lt;code&gt;JSplitPane.HORIZONTAL_SPLIT&lt;/code&gt; , or top to bottom using &lt;code&gt;JSplitPane.VERTICAL_SPLIT&lt;/code&gt; . The preferred way to change the size of the &lt;code&gt;Component&lt;/code&gt; s is to invoke &lt;code&gt;setDividerLocation&lt;/code&gt; where &lt;code&gt;location&lt;/code&gt; is either the new x or y position, depending on the orientation of the &lt;code&gt;JSplitPane&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3593155b51237a7085bf75da2140fc0fe3e8c66" translate="yes" xml:space="preserve">
          <source>The two calls have the same effect.</source>
          <target state="translated">2つのコールは同じ効果があります。</target>
        </trans-unit>
        <trans-unit id="b92a8d153cce49ff845ddf50531191cd3a963be7" translate="yes" xml:space="preserve">
          <source>The two cases (&quot;ja&quot;, &quot;JP&quot;, &quot;JP&quot;) and (&quot;th&quot;, &quot;TH&quot;, &quot;TH&quot;) are handled specially, see &lt;a href=&quot;#special_cases_constructor&quot;&gt;Special Cases&lt;/a&gt; for more information.</source>
          <target state="translated">2つのケース（ &quot;ja&quot;、 &quot;JP&quot;、 &quot;JP&quot;）および（ &quot;th&quot;、 &quot;TH&quot;、 &quot;TH&quot;）は特別に処理されます。詳細については、&lt;a href=&quot;#special_cases_constructor&quot;&gt;特殊なケース&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="28393cbfd67002d6ad36a08762b2e38653599b68" translate="yes" xml:space="preserve">
          <source>The two characters are the same (as compared by the &lt;code&gt;==&lt;/code&gt; operator)</source>
          <target state="translated">2つの文字が同じである（ &lt;code&gt;==&lt;/code&gt; 演算子と比較して）</target>
        </trans-unit>
        <trans-unit id="733cbbaea42ad75e1ffe40db5e03f1fed7b55f41" translate="yes" xml:space="preserve">
          <source>The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the indicated offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt;.</source>
          <target state="translated">The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the indicated offset in the order &lt;code&gt;[x0, y0, x1, y1, ..., xn, yn]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f19211fbe1e7f4c1e87ed754cadc6b0cc14be4e6" translate="yes" xml:space="preserve">
          <source>The two nodes are disconnected.</source>
          <target state="translated">2つのノードが切断されています。</target>
        </trans-unit>
        <trans-unit id="f398c8744bfdea0ef40d2e2e1377fe86aabbce87" translate="yes" xml:space="preserve">
          <source>The two nodes are disconnected. Order between disconnected nodes is always implementation-specific.</source>
          <target state="translated">2 つのノードは切断されています。切断されたノード間の順序は常に実装固有です。</target>
        </trans-unit>
        <trans-unit id="1ec974b380762a0bf9692b16ac0cfa7083a8a76b" translate="yes" xml:space="preserve">
          <source>The two nodes are of the same type.</source>
          <target state="translated">2つのノードは同じタイプのものです。</target>
        </trans-unit>
        <trans-unit id="4a8e8cdc02eb816448907e6ad7e73c37517a03bf" translate="yes" xml:space="preserve">
          <source>The two possible authentication types for a resource.</source>
          <target state="translated">リソースに対して可能な2つの認証タイプ。</target>
        </trans-unit>
        <trans-unit id="8562722983b5297a255d72d065fc4efeeada15b3" translate="yes" xml:space="preserve">
          <source>The two sequences of remaining elements, considered independently of their starting positions, are pointwise equal.</source>
          <target state="translated">残りの要素の2つの配列は、その開始位置から独立して考慮され、点方向に等しくなる。</target>
        </trans-unit>
        <trans-unit id="d9e7a9794b9c62912ab9b974fd3e586ad8ce077c" translate="yes" xml:space="preserve">
          <source>The two sequences of remaining elements, considered independently of their starting positions, are pointwise equal. This method considers two double elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to be equal if &lt;code&gt;(a == b) || (Double.isNaN(a) &amp;amp;&amp;amp; Double.isNaN(b))&lt;/code&gt;. The values &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;+0.0&lt;/code&gt; are considered to be equal, unlike &lt;a href=&quot;../lang/double#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Double.equals(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The two sequences of remaining elements, considered independently of their starting positions, are pointwise equal. This method considers two double elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to be equal if &lt;code&gt;(a == b) || (Double.isNaN(a) &amp;amp;&amp;amp; Double.isNaN(b))&lt;/code&gt; . The values &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;+0.0&lt;/code&gt; are considered to be equal, unlike &lt;a href=&quot;../lang/double#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Double.equals(Object)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1e9cc57517a9438e11a17414782fcda2ca6c93d7" translate="yes" xml:space="preserve">
          <source>The two sequences of remaining elements, considered independently of their starting positions, are pointwise equal. This method considers two double elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to be equal if &lt;code&gt;(a == b) || (Double.isNaN(a) &amp;amp;&amp;amp; Double.isNaN(b))&lt;/code&gt;. The values &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;+0.0&lt;/code&gt; are considered to be equal, unlike &lt;a href=&quot;../lang/double#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Double.equals(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">残りの要素の2つのシーケンスは、開始位置とは無関係に考慮され、点ごとに等しくなります。このメソッドは、 &lt;code&gt;(a == b) || (Double.isNaN(a) &amp;amp;&amp;amp; Double.isNaN(b))&lt;/code&gt; 場合 &lt;code&gt;a&lt;/code&gt; 2つのdouble要素aと &lt;code&gt;b&lt;/code&gt; が等しいと見なします。（Double.isNaN（a）&amp;amp;&amp;amp; Double.isNaN（b））。&lt;a href=&quot;../lang/double#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Double.equals(Object)&lt;/code&gt; &lt;/a&gt;とは異なり、値 &lt;code&gt;-0.0&lt;/code&gt; と &lt;code&gt;+0.0&lt;/code&gt; は等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="677d0a0fc0aa5495b5b9a1ef2701a071bddcad42" translate="yes" xml:space="preserve">
          <source>The two sequences of remaining elements, considered independently of their starting positions, are pointwise equal. This method considers two float elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to be equal if &lt;code&gt;(a == b) || (Float.isNaN(a) &amp;amp;&amp;amp; Float.isNaN(b))&lt;/code&gt;. The values &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;+0.0&lt;/code&gt; are considered to be equal, unlike &lt;a href=&quot;../lang/float#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Float.equals(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The two sequences of remaining elements, considered independently of their starting positions, are pointwise equal. This method considers two float elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to be equal if &lt;code&gt;(a == b) || (Float.isNaN(a) &amp;amp;&amp;amp; Float.isNaN(b))&lt;/code&gt; . The values &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;+0.0&lt;/code&gt; are considered to be equal, unlike &lt;a href=&quot;../lang/float#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Float.equals(Object)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f74bb945ec6a22ab7838a324a183e657cee9de65" translate="yes" xml:space="preserve">
          <source>The two sequences of remaining elements, considered independently of their starting positions, are pointwise equal. This method considers two float elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to be equal if &lt;code&gt;(a == b) || (Float.isNaN(a) &amp;amp;&amp;amp; Float.isNaN(b))&lt;/code&gt;. The values &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;+0.0&lt;/code&gt; are considered to be equal, unlike &lt;a href=&quot;../lang/float#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Float.equals(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">残りの要素の2つのシーケンスは、開始位置とは無関係に考慮され、点ごとに等しくなります。このメソッドは、 &lt;code&gt;(a == b) || (Float.isNaN(a) &amp;amp;&amp;amp; Float.isNaN(b))&lt;/code&gt; 場合 &lt;code&gt;a&lt;/code&gt; 2つのfloat要素aと &lt;code&gt;b&lt;/code&gt; が等しいと見なします。（Float.isNaN（a）&amp;amp;&amp;amp; Float.isNaN（b））。&lt;a href=&quot;../lang/float#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Float.equals(Object)&lt;/code&gt; &lt;/a&gt;とは異なり、値 &lt;code&gt;-0.0&lt;/code&gt; と &lt;code&gt;+0.0&lt;/code&gt; は等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="97983c767ff42d4647c2b3d8afd3922e461ec55b" translate="yes" xml:space="preserve">
          <source>The type</source>
          <target state="translated">タイプ</target>
        </trans-unit>
        <trans-unit id="8ac14b02e6f129743d1f8a28d779dc984a66b294" translate="yes" xml:space="preserve">
          <source>The type &lt;code&gt;T&lt;/code&gt; may be either a primitive or reference. Since type &lt;code&gt;Iterator&amp;lt;T&amp;gt;&lt;/code&gt; is erased in the method handle representation to the raw type &lt;code&gt;Iterator&lt;/code&gt;, the &lt;code&gt;iteratedLoop&lt;/code&gt; combinator adjusts the leading argument type for &lt;code&gt;body&lt;/code&gt; to &lt;code&gt;Object&lt;/code&gt; as if by the &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt; conversion method. Therefore, if an iterator of the wrong type appears as the loop is executed, runtime exceptions may occur as the result of dynamic conversions performed by &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;MethodHandle.asType(MethodType)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The type &lt;code&gt;T&lt;/code&gt; may be either a primitive or reference. Since type &lt;code&gt;Iterator&amp;lt;T&amp;gt;&lt;/code&gt; is erased in the method handle representation to the raw type &lt;code&gt;Iterator&lt;/code&gt; , the &lt;code&gt;iteratedLoop&lt;/code&gt; combinator adjusts the leading argument type for &lt;code&gt;body&lt;/code&gt; to &lt;code&gt;Object&lt;/code&gt; as if by the &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt; conversion method. Therefore, if an iterator of the wrong type appears as the loop is executed, runtime exceptions may occur as the result of dynamic conversions performed by &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;MethodHandle.asType(MethodType)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4d9c3e5a2e1ee1b8623092bbd4a2ad433a0d8102" translate="yes" xml:space="preserve">
          <source>The type and behavior of the adapter will be the same as the type and behavior of the target, except that certain &lt;code&gt;invoke&lt;/code&gt; and &lt;code&gt;asType&lt;/code&gt; requests can lead to trailing positional arguments being collected into target's trailing parameter. Also, the &lt;a href=&quot;methodtype#lastParameterType()&quot;&gt;last parameter type&lt;/a&gt; of the adapter will be &lt;code&gt;arrayType&lt;/code&gt;, even if the target has a different last parameter type.</source>
          <target state="translated">The type and behavior of the adapter will be the same as the type and behavior of the target, except that certain &lt;code&gt;invoke&lt;/code&gt; and &lt;code&gt;asType&lt;/code&gt; requests can lead to trailing positional arguments being collected into target's trailing parameter. Also, the &lt;a href=&quot;methodtype#lastParameterType()&quot;&gt;last parameter type&lt;/a&gt; of the adapter will be &lt;code&gt;arrayType&lt;/code&gt; , even if the target has a different last parameter type.</target>
        </trans-unit>
        <trans-unit id="c0ea19c65ec77bbed855a0ec57d24fe61a6f3cfc" translate="yes" xml:space="preserve">
          <source>The type and behavior of the adapter will be the same as the type and behavior of the target, except that certain &lt;code&gt;invoke&lt;/code&gt; and &lt;code&gt;asType&lt;/code&gt; requests can lead to trailing positional arguments being collected into target's trailing parameter. Also, the last parameter type of the adapter will be &lt;code&gt;arrayType&lt;/code&gt;, even if the target has a different last parameter type.</source>
          <target state="translated">アダプターのタイプと動作はターゲットのタイプと動作と同じですが、特定の &lt;code&gt;invoke&lt;/code&gt; 要求と &lt;code&gt;asType&lt;/code&gt; 要求により、末尾の位置引数がターゲットの末尾パラメーターに収集される可能性がある点が異なります。また、ターゲットの最後のパラメータータイプが異なる場合でも、アダプターの最後のパラメータータイプは &lt;code&gt;arrayType&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="b9274643a3bf4ca4addb78cb6a98b74268f87044" translate="yes" xml:space="preserve">
          <source>The type and encodings are described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#certificatefactory-types&quot;&gt; CertificateFactory section&lt;/a&gt; and the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#certpath-encodings&quot;&gt; CertPath Encodings section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other types or encodings are supported.</source>
          <target state="translated">The type and encodings are described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#certificatefactory-types&quot;&gt; CertificateFactory section&lt;/a&gt; and the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#certpath-encodings&quot;&gt; CertPath Encodings section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other types or encodings are supported.</target>
        </trans-unit>
        <trans-unit id="ff6bb0cadf07db39ec6be40e5dae1eed885b4134" translate="yes" xml:space="preserve">
          <source>The type and encodings are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertificateFactory&quot;&gt; CertificateFactory section&lt;/a&gt; and the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathEncodings&quot;&gt; CertPath Encodings section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other types or encodings are supported.</source>
          <target state="translated">タイプとエンコーディングについては、Java暗号化アーキテクチャ標準アルゴリズム名のドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertificateFactory&quot;&gt;CertificateFactoryセクション&lt;/a&gt;と&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathEncodings&quot;&gt;CertPathエンコーディングセクション&lt;/a&gt;で説明しています。他のタイプまたはエンコーディングがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="c6b186bc7aea698445dc40383caf4bf30781283e" translate="yes" xml:space="preserve">
          <source>The type associated with all custom cursors.</source>
          <target state="translated">すべてのカスタムカーソルに関連付けられたタイプ。</target>
        </trans-unit>
        <trans-unit id="8a0aad1afcd781464b76996d424e8348249f28ac" translate="yes" xml:space="preserve">
          <source>The type fingerprint that is set to indicate serialization compatibility with a previous version of the type.</source>
          <target state="translated">以前のバージョンの型とのシリアライズ互換性を示すために設定されている型のフィンガープリント。</target>
        </trans-unit>
        <trans-unit id="93dbc281a6a1652e30aac933243bf7afad98e3d0" translate="yes" xml:space="preserve">
          <source>The type information associated with this attribute.</source>
          <target state="translated">この属性に関連付けられた型情報。</target>
        </trans-unit>
        <trans-unit id="6035b72b31597b588131e4a84cda217fb3253aca" translate="yes" xml:space="preserve">
          <source>The type information associated with this attribute. While the type information contained in this attribute is guarantee to be correct after loading the document or invoking &lt;code&gt;Document.normalizeDocument()&lt;/code&gt;, &lt;code&gt;schemaTypeInfo&lt;/code&gt; may not be reliable if the node was moved.</source>
          <target state="translated">The type information associated with this attribute. While the type information contained in this attribute is guarantee to be correct after loading the document or invoking &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; , &lt;code&gt;schemaTypeInfo&lt;/code&gt; may not be reliable if the node was moved.</target>
        </trans-unit>
        <trans-unit id="e61ac73041fcfd164a7302e03c2c4eb5aa4c9644" translate="yes" xml:space="preserve">
          <source>The type information associated with this element.</source>
          <target state="translated">この要素に関連付けられた型情報。</target>
        </trans-unit>
        <trans-unit id="47aacc9e53df6990e6cd21e34ac8f46081f60e02" translate="yes" xml:space="preserve">
          <source>The type is a &lt;code&gt;String&lt;/code&gt; that identifies the type of &lt;code&gt;Certificate&lt;/code&gt;s in the certification path. For each certificate &lt;code&gt;cert&lt;/code&gt; in a certification path &lt;code&gt;certPath&lt;/code&gt;, &lt;code&gt;cert.getType().equals(certPath.getType())&lt;/code&gt; must be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">タイプは、証明書パス内の &lt;code&gt;Certificate&lt;/code&gt; のタイプを識別する &lt;code&gt;String&lt;/code&gt; です。証明書パス &lt;code&gt;certPath&lt;/code&gt; 内の証明書証明 &lt;code&gt;cert&lt;/code&gt; ごとに、 &lt;code&gt;cert.getType().equals(certPath.getType())&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="3992f3a6c4f1b89ac824af3b12e6534482315701" translate="yes" xml:space="preserve">
          <source>The type is an interface type and not an annotation type, enum, or class.</source>
          <target state="translated">この型はインターフェイス型であり、注釈型、列挙型、クラスではありません。</target>
        </trans-unit>
        <trans-unit id="e26cf268f40425be61bd9fa65b49f0d6fe506153" translate="yes" xml:space="preserve">
          <source>The type name corresponding to the supplied type constant.</source>
          <target state="translated">与えられた型定数に対応する型名。</target>
        </trans-unit>
        <trans-unit id="dbbee8087c3ba28222fa95426623818374828807" translate="yes" xml:space="preserve">
          <source>The type of &lt;a href=&quot;processbuilder.redirect#INHERIT&quot;&gt;&lt;code&gt;Redirect.INHERIT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect#INHERIT&quot;&gt; &lt;code&gt;Redirect.INHERIT&lt;/code&gt; &lt;/a&gt;のタイプ。</target>
        </trans-unit>
        <trans-unit id="c0ad9640a3999591dd1d2029f7ecfcb72b0d98b2" translate="yes" xml:space="preserve">
          <source>The type of &lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt;&lt;code&gt;Redirect.PIPE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt; &lt;code&gt;Redirect.PIPE&lt;/code&gt; &lt;/a&gt;のタイプ。</target>
        </trans-unit>
        <trans-unit id="e8d2db58ec658df2f7f6c171781a38ba46c53399" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;JOIN&lt;/code&gt; to be established is determined by setting one of the &lt;code&gt;JoinRowSet&lt;/code&gt; constants using the method &lt;code&gt;setJoinType&lt;/code&gt;. The following SQL &lt;code&gt;JOIN&lt;/code&gt; types can be set:</source>
          <target state="translated">The type of &lt;code&gt;JOIN&lt;/code&gt; to be established is determined by setting one of the &lt;code&gt;JoinRowSet&lt;/code&gt; constants using the method &lt;code&gt;setJoinType&lt;/code&gt; . The following SQL &lt;code&gt;JOIN&lt;/code&gt; types can be set:</target>
        </trans-unit>
        <trans-unit id="f56f95d6997ec10a60d61b49368aad5c85b0c93d" translate="yes" xml:space="preserve">
          <source>The type of MIDI file.</source>
          <target state="translated">MIDIファイルの種類。</target>
        </trans-unit>
        <trans-unit id="127e2dcfa435659f04a5c90d26c476f9ace2f0e1" translate="yes" xml:space="preserve">
          <source>The type of a &lt;a href=&quot;processbuilder.redirect&quot;&gt;&lt;code&gt;ProcessBuilder.Redirect&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect&quot;&gt; &lt;code&gt;ProcessBuilder.Redirect&lt;/code&gt; &lt;/a&gt;のタイプ。</target>
        </trans-unit>
        <trans-unit id="19a111fbf1a4085482090a96e6a31a6562e4dbf5" translate="yes" xml:space="preserve">
          <source>The type of a metric, one of the strings &quot;counter&quot; or &quot;gauge&quot;. A metric is a measurement exported by an MBean, usually an attribute but sometimes the result of an operation. A metric that is a &lt;em&gt;counter&lt;/em&gt; has a value that never decreases except by being reset to a starting value. Counter metrics are almost always non-negative integers. An example might be the number of requests received. A metric that is a &lt;em&gt;gauge&lt;/em&gt; has a numeric value that can increase or decrease. Examples might be the number of open connections or a cache hit rate or a temperature reading.</source>
          <target state="translated">指標のタイプ。文字列「counter」または「gauge」のいずれか。メトリックは、MBeanによってエクスポートされる測定値であり、通常は属性ですが、操作の結果である場合もあります。&lt;em&gt;カウンタである&lt;/em&gt;メトリックには、開始値にリセットされることを除いて、決して減少しない値があります。カウンタメトリックは、ほとんどの場合、負でない整数です。たとえば、受け取ったリクエストの数などです。&lt;em&gt;ゲージである&lt;/em&gt;メトリックには、増減できる数値があります。たとえば、開いている接続の数、キャッシュヒット率、温度の読み取り値などです。</target>
        </trans-unit>
        <trans-unit id="516804b0e5437ce278d19350e7c4ad6ec7d75a1d" translate="yes" xml:space="preserve">
          <source>The type of etch to be drawn by the border.</source>
          <target state="translated">ボーダーで描くエッチの種類。</target>
        </trans-unit>
        <trans-unit id="a72a6dcb29c4761d0c066bb8800e0746542672cb" translate="yes" xml:space="preserve">
          <source>The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#appendTo(java.io.File)&quot;&gt;&lt;code&gt;Redirect.appendTo(File)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#appendTo(java.io.File)&quot;&gt; &lt;code&gt;Redirect.appendTo(File)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="aa5066ac5677ba94a729db439698f3123b5e4800" translate="yes" xml:space="preserve">
          <source>The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#appendTo-java.io.File-&quot;&gt;&lt;code&gt;Redirect.appendTo(File)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect#appendTo-java.io.File-&quot;&gt; &lt;code&gt;Redirect.appendTo(File)&lt;/code&gt; &lt;/a&gt;から返されるリダイレクトのタイプ。</target>
        </trans-unit>
        <trans-unit id="3a8c1186e5832691f4a75427966c37b78296c9e6" translate="yes" xml:space="preserve">
          <source>The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#from(java.io.File)&quot;&gt;&lt;code&gt;Redirect.from(File)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#from(java.io.File)&quot;&gt; &lt;code&gt;Redirect.from(File)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b6c13fdf29d3471638747b7836301b890025ac8d" translate="yes" xml:space="preserve">
          <source>The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#from-java.io.File-&quot;&gt;&lt;code&gt;Redirect.from(File)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect#from-java.io.File-&quot;&gt; &lt;code&gt;Redirect.from(File)&lt;/code&gt; &lt;/a&gt;から返されるリダイレクトのタイプ。</target>
        </trans-unit>
        <trans-unit id="23b43930e30ca0b29892d575065e9b7d29d48983" translate="yes" xml:space="preserve">
          <source>The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#to(java.io.File)&quot;&gt;&lt;code&gt;Redirect.to(File)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#to(java.io.File)&quot;&gt; &lt;code&gt;Redirect.to(File)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1b7eaaee0ed7fe469cb15b4032d95ee3779bbd61" translate="yes" xml:space="preserve">
          <source>The type of redirects returned from &lt;a href=&quot;processbuilder.redirect#to-java.io.File-&quot;&gt;&lt;code&gt;Redirect.to(File)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;processbuilder.redirect#to-java.io.File-&quot;&gt; &lt;code&gt;Redirect.to(File)&lt;/code&gt; &lt;/a&gt;から返されるリダイレクトのタイプ。</target>
        </trans-unit>
        <trans-unit id="62d360876f66c4619f7a66dbb6e3f42e2c3d1fb3" translate="yes" xml:space="preserve">
          <source>The type of the call site is permanently set to the given type.</source>
          <target state="translated">コールサイトのタイプは、与えられたタイプに恒久的に設定されます。</target>
        </trans-unit>
        <trans-unit id="84d0df6847a2c34f170737cbf47a403351061610" translate="yes" xml:space="preserve">
          <source>The type of the context is implementation-dependent. If the value is null, the operation must have no dependency on the context, otherwise an XPathExpressionException will be thrown. For the purposes of evaluating XPath expressions, a DocumentFragment is treated like a Document node.</source>
          <target state="translated">コンテキストの型は実装に依存します。値が NULL の場合、操作はコンテキストに依存していない必要があり、そうでない場合は XPathExpressionException がスローされます。XPath 式を評価する目的で、DocumentFragment は Document ノードと同じように扱われます。</target>
        </trans-unit>
        <trans-unit id="85c774280ae0c09e2cb54be7281c7ab8c6b5e39a" translate="yes" xml:space="preserve">
          <source>The type of the context is usually &lt;a href=&quot;../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The type of the context is usually &lt;a href=&quot;../../../org/w3c/dom/node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0f38c67fdfb625338235f720fe145ed3f504d4e9" translate="yes" xml:space="preserve">
          <source>The type of the entity requesting authentication.</source>
          <target state="translated">認証を要求するエンティティのタイプ。</target>
        </trans-unit>
        <trans-unit id="c4ac73bf470d2de540cc66c6d49c584580982b87" translate="yes" xml:space="preserve">
          <source>The type of the entity.</source>
          <target state="translated">エンティティのタイプ。</target>
        </trans-unit>
        <trans-unit id="978109c7e8978b8fd7fbcdabcf48636f10ce3310" translate="yes" xml:space="preserve">
          <source>The type of the event.</source>
          <target state="translated">イベントの種類。</target>
        </trans-unit>
        <trans-unit id="05a0aedd8679b410dfd61aa7d127e3dcd930c83d" translate="yes" xml:space="preserve">
          <source>The type of the new method handle will drop the types for the bound parameters from the original target type, since the new method handle will no longer require those arguments to be supplied by its callers.</source>
          <target state="translated">新しいメソッドハンドルの型は、元のターゲット型からバインドされたパラメータの型を削除します。</target>
        </trans-unit>
        <trans-unit id="8627cf93d9b68632081d77f43eec00b2a809ba9f" translate="yes" xml:space="preserve">
          <source>The type of the new target must be &lt;a href=&quot;methodtype#equals(java.lang.Object)&quot;&gt;equal to&lt;/a&gt; the type of the old target.</source>
          <target state="translated">The type of the new target must be &lt;a href=&quot;methodtype#equals(java.lang.Object)&quot;&gt;equal to&lt;/a&gt; the type of the old target.</target>
        </trans-unit>
        <trans-unit id="689485c1e5985a3231bd5ec529f55e5aa04a546f" translate="yes" xml:space="preserve">
          <source>The type of the new target must be &lt;a href=&quot;methodtype#equals-java.lang.Object-&quot;&gt;equal to&lt;/a&gt; the type of the old target.</source>
          <target state="translated">新しいターゲットのタイプは、古いターゲットのタイプと&lt;a href=&quot;methodtype#equals-java.lang.Object-&quot;&gt;同じで&lt;/a&gt;なければなりません。</target>
        </trans-unit>
        <trans-unit id="a890ec2d11b23f48d0302a6f1ff678bb8116b7db" translate="yes" xml:space="preserve">
          <source>The type of the observed attribute is not correct.</source>
          <target state="translated">観測された属性の型が正しくありません。</target>
        </trans-unit>
        <trans-unit id="c37d7b8236ac8a0ff81b6ebd996e68b65203530e" translate="yes" xml:space="preserve">
          <source>The type of the returned invoker will not be the given &lt;code&gt;type&lt;/code&gt;, but rather will have all parameters except the first &lt;code&gt;leadingArgCount&lt;/code&gt; replaced by a single array of type &lt;code&gt;Object[]&lt;/code&gt;, which will be the final parameter.</source>
          <target state="translated">返される呼び出し側の型は、指定された &lt;code&gt;type&lt;/code&gt; ではなく、最初の &lt;code&gt;leadingArgCount&lt;/code&gt; を除くすべてのパラメーターが、最後のパラメーターとなる &lt;code&gt;Object[]&lt;/code&gt; 型の単一の配列に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="3713b00b65f5a644a274c8162bd2331606919143" translate="yes" xml:space="preserve">
          <source>The type of this event.</source>
          <target state="translated">このイベントの種類。</target>
        </trans-unit>
        <trans-unit id="efb86a4d23b927b4d7779a5f3229d3b046c17f0c" translate="yes" xml:space="preserve">
          <source>The types are compared for equality with their case ignored.</source>
          <target state="translated">型は、大文字小文字を無視して等しくなるように比較されます。</target>
        </trans-unit>
        <trans-unit id="59391c7d69614504e0086f4dff6684db3e9ee2b5" translate="yes" xml:space="preserve">
          <source>The types of notifications emitted by &lt;code&gt;MemoryMXBean&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;MemoryMXBean&lt;/code&gt; によって発行される通知のタイプは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="444baca227e7a21fbc93ead1d887a79a164df63b" translate="yes" xml:space="preserve">
          <source>The typical language value is a two or three-letter language code as defined in ISO639.</source>
          <target state="translated">典型的な言語値は、ISO639で定義されている2文字または3文字の言語コードです。</target>
        </trans-unit>
        <trans-unit id="5c660145e6f646b3735ac4f7205ca9ace38822eb" translate="yes" xml:space="preserve">
          <source>The typical region value is a two-letter ISO 3166 code or a three-digit UN M.49 area code.</source>
          <target state="translated">典型的な地域値は、2文字のISO3166コードまたは3桁のUN M.49エリアコードです。</target>
        </trans-unit>
        <trans-unit id="17cdcc250877b85946cb955da511369645e967cc" translate="yes" xml:space="preserve">
          <source>The typical script value is a four-letter script code as defined by ISO 15924.</source>
          <target state="translated">典型的なスクリプト値は、ISO 15924で定義されている4文字のスクリプトコードです。</target>
        </trans-unit>
        <trans-unit id="e493e7eb7efdddc83f3fbdc66df8a51d56849ee7" translate="yes" xml:space="preserve">
          <source>The underline affects both the visual bounds and the outline of the text.</source>
          <target state="translated">下線は、視覚的な境界線とテキストのアウトラインの両方に影響を与えます。</target>
        </trans-unit>
        <trans-unit id="20b0ef642374b714b39ebc2873baf17c5b426b78" translate="yes" xml:space="preserve">
          <source>The underlying &lt;code&gt;BoundedRangeModel&lt;/code&gt; handles any mathematical issues arising from assigning faulty values. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</source>
          <target state="translated">The underlying &lt;code&gt;BoundedRangeModel&lt;/code&gt; handles any mathematical issues arising from assigning faulty values. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</target>
        </trans-unit>
        <trans-unit id="121414ae83882d6978c3061ae2ccaf0b4cd3a7f5" translate="yes" xml:space="preserve">
          <source>The underlying character-input stream.</source>
          <target state="translated">下位の文字入力ストリーム。</target>
        </trans-unit>
        <trans-unit id="66e9f85ce07195fbd2dc5d2f06d3273076e5b33d" translate="yes" xml:space="preserve">
          <source>The underlying character-output stream of this &lt;code&gt;PrintWriter&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;PrintWriter&lt;/code&gt; の基本となる文字出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="997090c1014b7704de737ddf5326441d3f6eab7d" translate="yes" xml:space="preserve">
          <source>The underlying character-output stream.</source>
          <target state="translated">下位の文字出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="48e3e0bfbed1be484de7c256629bbfc344226e62" translate="yes" xml:space="preserve">
          <source>The underlying field's value is obtained as follows:</source>
          <target state="translated">基礎となるフィールドの値は、以下のようにして得られます。</target>
        </trans-unit>
        <trans-unit id="6b7dedd2916acda5e4ddd9bf5218b5756a52e4ca" translate="yes" xml:space="preserve">
          <source>The underlying memory used by the &lt;code&gt;src&lt;/code&gt; and &lt;code&gt;dsts ByteBuffer&lt;/code&gt;s must not be the same.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; と &lt;code&gt;dsts ByteBuffer&lt;/code&gt; 使用する基本メモリは同じであってはなりません。</target>
        </trans-unit>
        <trans-unit id="028d275e77138b148a731ed31ec7168887398dc7" translate="yes" xml:space="preserve">
          <source>The underlying memory used by the &lt;code&gt;srcs&lt;/code&gt; and &lt;code&gt;dst ByteBuffer&lt;/code&gt;s must not be the same.</source>
          <target state="translated">&lt;code&gt;srcs&lt;/code&gt; と &lt;code&gt;dst ByteBuffer&lt;/code&gt; によって使用される基本メモリは同じであってはなりません。</target>
        </trans-unit>
        <trans-unit id="b2dd44c58a8235d0ae8f513f91b8369937ea3aba" translate="yes" xml:space="preserve">
          <source>The underlying operating system is queried for an update as to the readiness of each remaining channel to perform any of the operations identified by its key's interest set as of the moment that the selection operation began.</source>
          <target state="translated">基盤となるオペレーティングシステムは、選択操作が開始された時点で、残りの各チャネルがそのキーのインタレストセットによって特定された操作のいずれかを実行する準備ができているかどうかを更新するために照会される。</target>
        </trans-unit>
        <trans-unit id="8bcc6a3ebcd69bf1c22f30e41fee2405130dbb8f" translate="yes" xml:space="preserve">
          <source>The underlying operating system is queried for an update as to the readiness of each remaining channel to perform any of the operations identified by its key's interest set as of the moment that the selection operation began. For a channel that is ready for at least one such operation, one of the following two actions is performed:</source>
          <target state="translated">基底となるオペレーティングシステムは、選択操作が開始された時点で、残りの各チャネルがそのキーのインタレストセットによって特定された操作のいずれかを実行する準備ができているかどうかを更新するために照会される。少なくとも1つの操作の準備ができているチャネルについては、以下の2つのアクションのうちの1つが実行される。</target>
        </trans-unit>
        <trans-unit id="5fac40f1f061f6b657772e9f893915f23de48bf5" translate="yes" xml:space="preserve">
          <source>The underlying output stream to be filtered.</source>
          <target state="translated">フィルタリングされる基礎となる出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="1a5764b11a39a7b859946ca022bc7546c2758d6c" translate="yes" xml:space="preserve">
          <source>The underlying signing algorithm is designated by the Signature object passed to the constructor and the &lt;code&gt;verify&lt;/code&gt; method. A typical usage for signing is the following:</source>
          <target state="translated">基本となる署名アルゴリズムは、コンストラクタに渡されたSignatureオブジェクトと &lt;code&gt;verify&lt;/code&gt; メソッドによって指定されます。署名の一般的な使用法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1a0c62e15b608a731329638c7175e259e5b752ff" translate="yes" xml:space="preserve">
          <source>The underscore character &lt;code&gt;'_'&lt;/code&gt; (&lt;code&gt;'\u005f'&lt;/code&gt;, &lt;small&gt;LOW LINE&lt;/small&gt;).</source>
          <target state="translated">アンダースコア文字 &lt;code&gt;'_'&lt;/code&gt; （ &lt;code&gt;'\u005f'&lt;/code&gt; 、&lt;small&gt;LOW LINE&lt;/small&gt;）。</target>
        </trans-unit>
        <trans-unit id="7c1ffa4ad50bf6adcf296f52ce5cec96c22f7318" translate="yes" xml:space="preserve">
          <source>The undo/redo presentation name</source>
          <target state="translated">元に戻す/やり直しのプレゼンテーション名</target>
        </trans-unit>
        <trans-unit id="c48b40a9584e8f5d48650d23e68347fe38a9dee0" translate="yes" xml:space="preserve">
          <source>The union filter operation.</source>
          <target state="translated">ユニオンフィルタの操作です。</target>
        </trans-unit>
        <trans-unit id="cae92f9fce61041c312223fede1e34d5be987d37" translate="yes" xml:space="preserve">
          <source>The uniquely named method is allowed to be multiply declared, with distinct type descriptors. (E.g., it can be overloaded, or can possess bridge methods.) All such declarations are connected directly to the target method handle. Argument and return types are adjusted by &lt;code&gt;asType&lt;/code&gt; for each individual declaration.</source>
          <target state="translated">一意に名前が付けられたメソッドは、異なる型記述子を使用して、複数宣言することができます。（たとえば、オーバーロードしたり、ブリッジメソッドを所有したりできます。）そのような宣言はすべて、ターゲットメソッドハンドルに直接接続されます。引数と戻り値の型は、個々の宣言の &lt;code&gt;asType&lt;/code&gt; によって調整されます。</target>
        </trans-unit>
        <trans-unit id="e2f80b55f26435dc0cbc6eebb8950484c5bf36aa" translate="yes" xml:space="preserve">
          <source>The unit decrement adjustment type.</source>
          <target state="translated">単位デクリメント調整タイプです。</target>
        </trans-unit>
        <trans-unit id="52717aab8cd685857c2c2638d23ee7812a035e0d" translate="yes" xml:space="preserve">
          <source>The unit increment adjustment type.</source>
          <target state="translated">ユニットインクリメント調整タイプです。</target>
        </trans-unit>
        <trans-unit id="1c7bdb009b913ad14ea197d918b5e289949be56f" translate="yes" xml:space="preserve">
          <source>The unit increment is the value that is added or subtracted when the user activates the unit increment area of the scroll bar, generally through a mouse or keyboard gesture that the scroll bar receives as an adjustment event. The unit increment must be greater than zero.</source>
          <target state="translated">単位増分は、ユーザがスクロールバーの単位増分領域をアクティブにしたときに加算または減算される値であり、一般的には、スクロールバーが調整イベントとして受け取るマウスまたはキーボードのジェスチャーによって行われる。単位増分はゼロより大きくなければなりません。</target>
        </trans-unit>
        <trans-unit id="701b9e479da0e3a00cf653bd228ba4360e20dee1" translate="yes" xml:space="preserve">
          <source>The unit increment is the value that is added or subtracted when the user activates the unit increment area of the scroll bar, generally through a mouse or keyboard gesture that the scroll bar receives as an adjustment event. The unit increment must be greater than zero. Attempts to set the unit increment to a value lower than 1 will result in a value of 1 being set.</source>
          <target state="translated">単位増分は、ユーザがスクロールバーの単位増分領域をアクティブにしたときに加算または減算される値であり、一般的には、スクロールバーが調整イベントとして受け取るマウスまたはキーボードのジェスチャーによって行われる。単位増分はゼロより大きくなければなりません。単位増分を1よりも小さい値に設定しようとすると、1が設定されます。</target>
        </trans-unit>
        <trans-unit id="de9b1e61ecdfc95fda63a3a7e8d69c26ea6cf658" translate="yes" xml:space="preserve">
          <source>The unit must have a &lt;a href=&quot;temporal/temporalunit#getDuration()&quot;&gt;duration&lt;/a&gt; that divides into the length of a standard day without remainder. This includes all &lt;a href=&quot;temporal/chronounit#isTimeBased()&quot;&gt;time-based units on {@code ChronoUnit}&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt;. Other ChronoUnits throw an exception.</source>
          <target state="translated">The unit must have a &lt;a href=&quot;temporal/temporalunit#getDuration()&quot;&gt;duration&lt;/a&gt; that divides into the length of a standard day without remainder. This includes all &lt;a href=&quot;temporal/chronounit#isTimeBased()&quot;&gt;time-based units on {@code ChronoUnit}&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; &lt;/a&gt;. Other ChronoUnits throw an exception.</target>
        </trans-unit>
        <trans-unit id="234aa0f061723f0a03a2a6d208b3bc5bcf171626" translate="yes" xml:space="preserve">
          <source>The unit must have a &lt;a href=&quot;temporal/temporalunit#getDuration()&quot;&gt;duration&lt;/a&gt; that divides into the length of a standard day without remainder. This includes all supplied time units on &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt;. Other units throw an exception.</source>
          <target state="translated">The unit must have a &lt;a href=&quot;temporal/temporalunit#getDuration()&quot;&gt;duration&lt;/a&gt; that divides into the length of a standard day without remainder. This includes all supplied time units on &lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; &lt;/a&gt;. Other units throw an exception.</target>
        </trans-unit>
        <trans-unit id="5191f12612fb84b7bbf9829ac12d3dce772f7d2d" translate="yes" xml:space="preserve">
          <source>The unit must have a &lt;a href=&quot;temporal/temporalunit#getDuration--&quot;&gt;duration&lt;/a&gt; that divides into the length of a standard day without remainder. This includes all supplied time units on &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;DAYS&lt;/code&gt;&lt;/a&gt;. Other units throw an exception.</source>
          <target state="translated">単位には、残りのない標準日の&lt;a href=&quot;temporal/temporalunit#getDuration--&quot;&gt;期間&lt;/a&gt;に分割される期間が必要です。これには、&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;DAYS&lt;/code&gt; で&lt;/a&gt;提供されるすべての時間単位が含まれます。他のユニットは例外をスローします。</target>
        </trans-unit>
        <trans-unit id="968e96267f6d7165d1ebba6675f71b714928a68b" translate="yes" xml:space="preserve">
          <source>The unit of structure (i.e. a node of the tree) is referred to by the &lt;a href=&quot;element&quot;&gt;Element&lt;/a&gt; interface. Each Element can be tagged with a set of attributes. These attributes (name/value pairs) are defined by the &lt;a href=&quot;attributeset&quot;&gt;AttributeSet&lt;/a&gt; interface.</source>
          <target state="translated">The unit of structure (i.e. a node of the tree) is referred to by the &lt;a href=&quot;element&quot;&gt;Element&lt;/a&gt; interface. Each Element can be tagged with a set of attributes. These attributes (name/value pairs) are defined by the &lt;a href=&quot;attributeset&quot;&gt;AttributeSet&lt;/a&gt; interface.</target>
        </trans-unit>
        <trans-unit id="b14bacca6f7c6b6b2bf4f146f5a2674ddf076dea" translate="yes" xml:space="preserve">
          <source>The unit of the field is the period that varies within the range. For example, in the field 'MonthOfYear', the unit is 'Months'. See also &lt;a href=&quot;#getRangeUnit()&quot;&gt;&lt;code&gt;getRangeUnit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The unit of the field is the period that varies within the range. For example, in the field 'MonthOfYear', the unit is 'Months'. See also &lt;a href=&quot;#getRangeUnit()&quot;&gt; &lt;code&gt;getRangeUnit()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5122174d5f83d404ea9a42f52e7c1c4179e0a65a" translate="yes" xml:space="preserve">
          <source>The unit of the field is the period that varies within the range. For example, in the field 'MonthOfYear', the unit is 'Months'. See also &lt;a href=&quot;temporalfield#getRangeUnit--&quot;&gt;&lt;code&gt;TemporalField.getRangeUnit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールドの単位は、範囲内で変化する期間です。たとえば、フィールド「MonthOfYear」では、単位は「Months」です。&lt;a href=&quot;temporalfield#getRangeUnit--&quot;&gt; &lt;code&gt;TemporalField.getRangeUnit()&lt;/code&gt; &lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="d2ac0d6412e7c41ea9d12640bb3ba8932b0b5834" translate="yes" xml:space="preserve">
          <source>The unit of the field is the period that varies within the range. For example, in the field 'MonthOfYear', the unit is 'Months'. See also &lt;a href=&quot;temporalfield#getRangeUnit--&quot;&gt;&lt;code&gt;getRangeUnit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールドの単位は、範囲内で変化する期間です。たとえば、フィールド「MonthOfYear」では、単位は「Months」です。&lt;a href=&quot;temporalfield#getRangeUnit--&quot;&gt; &lt;code&gt;getRangeUnit()&lt;/code&gt; &lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="1f111a51a42acb493693efa131e93c6ce9b6b10b" translate="yes" xml:space="preserve">
          <source>The unit that represents week-based-years for the purpose of addition and subtraction.</source>
          <target state="translated">足し算・引き算を目的とした週単位の年を表す単位。</target>
        </trans-unit>
        <trans-unit id="27ed7bbeff7184c6ce008c19d55f08c8ed276069" translate="yes" xml:space="preserve">
          <source>The unit works using double dispatch. Client code calls methods on a date-time like &lt;code&gt;LocalDateTime&lt;/code&gt; which check if the unit is a &lt;code&gt;ChronoUnit&lt;/code&gt;. If it is, then the date-time must handle it. Otherwise, the method call is re-dispatched to the matching method in this interface.</source>
          <target state="translated">ユニットはダブルディスパッチを使用して動作します。クライアントコードは、 &lt;code&gt;ChronoUnit&lt;/code&gt; ような日付時刻にメソッドを呼び出し、ユニットが &lt;code&gt;LocalDateTime&lt;/code&gt; かどうかを確認します。そうである場合、日時はそれを処理する必要があります。それ以外の場合、メソッド呼び出しは、このインターフェースの一致するメソッドに再ディスパッチされます。</target>
        </trans-unit>
        <trans-unit id="81a001136d3eb214fc80d07847b64a02ef39f1b1" translate="yes" xml:space="preserve">
          <source>The units in which an attribute, parameter, or operation return value is measured, for example &lt;code&gt;&quot;bytes&quot;&lt;/code&gt; or &lt;code&gt;
 &quot;seconds&quot;&lt;/code&gt;.</source>
          <target state="translated">The units in which an attribute, parameter, or operation return value is measured, for example &lt;code&gt;&quot;bytes&quot;&lt;/code&gt; or &lt;code&gt; &quot;seconds&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="337c6ca2e533607b16bd03301e040526d12b467c" translate="yes" xml:space="preserve">
          <source>The units in which an attribute, parameter, or operation return value is measured, for example &lt;code&gt;&quot;bytes&quot;&lt;/code&gt; or &lt;code&gt;&quot;seconds&quot;&lt;/code&gt;.</source>
          <target state="translated">属性、パラメーター、または操作の戻り値が測定される単位（例えば、 &lt;code&gt;&quot;bytes&quot;&lt;/code&gt; または &lt;code&gt;&quot;seconds&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3bd78e3001a8947a68a5cbb3ac87fe1fde628c2" translate="yes" xml:space="preserve">
          <source>The units used for the attributes &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;totalSize&lt;/code&gt; are not specified and can be implementation and input dependent.</source>
          <target state="translated">The units used for the attributes &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;totalSize&lt;/code&gt; are not specified and can be implementation and input dependent.</target>
        </trans-unit>
        <trans-unit id="b5d174c8b0683065fbf044b493c3ef8ed79dc428" translate="yes" xml:space="preserve">
          <source>The unknown conversion.</source>
          <target state="translated">未知の変換。</target>
        </trans-unit>
        <trans-unit id="c132eeb914111eef836f7b17954aa6d06ab7144e" translate="yes" xml:space="preserve">
          <source>The unmatched format specifier</source>
          <target state="translated">マッチしないフォーマット指定子</target>
        </trans-unit>
        <trans-unit id="9c3ed1d8f9191384bc27e1c770f53546798ad3be" translate="yes" xml:space="preserve">
          <source>The unnamed Module for this class loader</source>
          <target state="translated">このクラスローダーの名前のないモジュール</target>
        </trans-unit>
        <trans-unit id="89d7d1f2a0c6d2d00918acd6dc9254422a7dc31f" translate="yes" xml:space="preserve">
          <source>The unpacker engine converts the packed stream to a JAR file.</source>
          <target state="translated">アンパッカーエンジンは、パックされたストリームをJARファイルに変換します。</target>
        </trans-unit>
        <trans-unit id="f17f3d929a42461873323e53b16339238f41d1f2" translate="yes" xml:space="preserve">
          <source>The unpacker engine converts the packed stream to a JAR file. An instance of the engine can be obtained using &lt;a href=&quot;pack200#newUnpacker()&quot;&gt;&lt;code&gt;Pack200.newUnpacker()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The unpacker engine converts the packed stream to a JAR file. An instance of the engine can be obtained using &lt;a href=&quot;pack200#newUnpacker()&quot;&gt; &lt;code&gt;Pack200.newUnpacker()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c2a58d4aa16389063e1d4593b8080b538ec67075" translate="yes" xml:space="preserve">
          <source>The unpacker engine converts the packed stream to a JAR file. An instance of the engine can be obtained using &lt;a href=&quot;pack200#newUnpacker--&quot;&gt;&lt;code&gt;Pack200.newUnpacker()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">unpackerエンジンは、パックされたストリームをJARファイルに変換します。エンジンのインスタンスは&lt;a href=&quot;pack200#newUnpacker--&quot;&gt; &lt;code&gt;Pack200.newUnpacker()&lt;/code&gt; &lt;/a&gt;を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="1b7887467cb1970d34f42e962bd76f284036d6cd" translate="yes" xml:space="preserve">
          <source>The unpacker's progress as a percentage, as periodically updated by the unpacker.</source>
          <target state="translated">アンパッカーによって定期的に更新されるアンパッカーの進捗状況をパーセンテージで表したもの。</target>
        </trans-unit>
        <trans-unit id="101f5ee99703bb9848ebdb64b9a981d2574364ad" translate="yes" xml:space="preserve">
          <source>The unpacker's progress as a percentage, as periodically updated by the unpacker. Values of 0 - 100 are normal, and -1 indicates a stall. Progress can be monitored by polling the value of this property.</source>
          <target state="translated">アンパッカーによって定期的に更新されるアンパッカーの進捗状況をパーセンテージで表したもの。0 ~ 100 の値は正常であり、-1 は失速を示します。進捗状況は、このプロパティの値をポーリングすることで監視することができます。</target>
        </trans-unit>
        <trans-unit id="7b61a518de7509b59d212e291756906cb8ecb6f4" translate="yes" xml:space="preserve">
          <source>The unqualified name of a proxy class is unspecified. The space of class names that begin with the string &lt;code&gt;&quot;$Proxy&quot;&lt;/code&gt; should be, however, reserved for proxy classes.</source>
          <target state="translated">プロキシクラスの非修飾名は指定されていません。ただし、文字列 &lt;code&gt;&quot;$Proxy&quot;&lt;/code&gt; で始まるクラス名のスペースは、プロキシクラス用に予約する必要があります。</target>
        </trans-unit>
        <trans-unit id="eb7964c4b4dc617463023ff4866e3bcc872cfffc" translate="yes" xml:space="preserve">
          <source>The unsigned &lt;code&gt;long&lt;/code&gt; value is the argument plus 2&lt;sup&gt;64&lt;/sup&gt; if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in binary (base 2) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">unsigned &lt;code&gt;long&lt;/code&gt; 値は、引数が負の場合、引数+ 2 &lt;sup&gt;64&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、余分な先行 &lt;code&gt;0&lt;/code&gt; なしで、2進数（基数2）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="90b3bb257b666565307d76750b50c74e6f924841" translate="yes" xml:space="preserve">
          <source>The unsigned &lt;code&gt;long&lt;/code&gt; value is the argument plus 2&lt;sup&gt;64&lt;/sup&gt; if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in hexadecimal (base 16) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">unsigned &lt;code&gt;long&lt;/code&gt; 値は、引数が負の場合、引数+ 2 &lt;sup&gt;64&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、先頭に &lt;code&gt;0&lt;/code&gt; が追加されない16進数（基数16）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="43fc0c46437e63e9c1bc27fd8276c60615fc1eec" translate="yes" xml:space="preserve">
          <source>The unsigned &lt;code&gt;long&lt;/code&gt; value is the argument plus 2&lt;sup&gt;64&lt;/sup&gt; if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in octal (base 8) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">unsigned &lt;code&gt;long&lt;/code&gt; 値は、引数が負の場合、引数+ 2 &lt;sup&gt;64&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、先頭に &lt;code&gt;0&lt;/code&gt; が追加されない8進数（8進数）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="9ef8dc1e7e596de25447c72effc2b78e2e9eda78" translate="yes" xml:space="preserve">
          <source>The unsigned integer value is the argument plus 2&lt;sup&gt;32&lt;/sup&gt; if the argument is negative; otherwise it is equal to the argument. This value is converted to a string of ASCII digits in binary (base 2) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">符号なし整数値は、引数が負の場合、引数+ 2 &lt;sup&gt;32&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、余分な先行 &lt;code&gt;0&lt;/code&gt; なしで、2進数（基数2）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="054a6f2331c22a50fc40ea825d5bbe23a0c2752a" translate="yes" xml:space="preserve">
          <source>The unsigned integer value is the argument plus 2&lt;sup&gt;32&lt;/sup&gt; if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in hexadecimal (base 16) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">符号なし整数値は、引数が負の場合、引数+ 2 &lt;sup&gt;32&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、先頭に &lt;code&gt;0&lt;/code&gt; が追加されない16進数（基数16）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="4adf2f37edf13f4b7e5a873d42af291756d4bd27" translate="yes" xml:space="preserve">
          <source>The unsigned integer value is the argument plus 2&lt;sup&gt;32&lt;/sup&gt; if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in octal (base 8) with no extra leading &lt;code&gt;0&lt;/code&gt;s.</source>
          <target state="translated">符号なし整数値は、引数が負の場合、引数+ 2 &lt;sup&gt;32&lt;/sup&gt;です。それ以外の場合は、引数と同じです。この値は、先頭に &lt;code&gt;0&lt;/code&gt; が追加されない8進数（8進数）のASCII数字の文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="6060d22783b5de73678a070487c0c6a5f000dbdf" translate="yes" xml:space="preserve">
          <source>The unusual compilation and linkage behavior of &lt;code&gt;invokeExact&lt;/code&gt; and plain &lt;code&gt;invoke&lt;/code&gt; is referenced by the term &lt;em&gt;signature polymorphism&lt;/em&gt;. As defined in the Java Language Specification, a signature polymorphic method is one which can operate with any of a wide range of call signatures and return types.</source>
          <target state="translated">&lt;code&gt;invokeExact&lt;/code&gt; とplain &lt;code&gt;invoke&lt;/code&gt; の異常なコンパイルとリンケージの振る舞いは、&lt;em&gt;署名ポリモーフィズム&lt;/em&gt;という用語で参照されます。Java言語仕様で定義されているように、シグネチャポリモーフィックメソッドは、さまざまな呼び出しシグネチャと戻り値の型のいずれかで動作できるメソッドです。</target>
        </trans-unit>
        <trans-unit id="40b4d5652cfa127fc330a96253acd13ba3551734" translate="yes" xml:space="preserve">
          <source>The update event type.</source>
          <target state="translated">更新イベントの種類です。</target>
        </trans-unit>
        <trans-unit id="29059f1033a4f76e60bdc626ae645add4bfc3353" translate="yes" xml:space="preserve">
          <source>The update level.</source>
          <target state="translated">更新レベル。</target>
        </trans-unit>
        <trans-unit id="d313d97487f3c7f3cbc749779eb54e77639e2d72" translate="yes" xml:space="preserve">
          <source>The updated CompositeName, not a new one. Cannot be null.</source>
          <target state="translated">新しいコンポジット名ではなく、更新されたコンポジット名です。nullにすることはできません。</target>
        </trans-unit>
        <trans-unit id="9a42c811bccd6dd7e2f5a6b9d96175190ed03196" translate="yes" xml:space="preserve">
          <source>The updated CompoundName, not a new one. Cannot be null.</source>
          <target state="translated">新しいものではなく、更新されたCompoundNameです。null にすることはできません。</target>
        </trans-unit>
        <trans-unit id="b0a53b9e80856c6692659d4301653ca2c511f3f2" translate="yes" xml:space="preserve">
          <source>The updated LdapName, not a new instance. Cannot be null.</source>
          <target state="translated">新しいインスタンスではなく、更新されたLdapName。nullにすることはできません。</target>
        </trans-unit>
        <trans-unit id="7ff1724ae2775960bc3b129d71cefa43e6c05193" translate="yes" xml:space="preserve">
          <source>The updated name (not a new instance).</source>
          <target state="translated">更新された名前(新しいインスタンスではありません)。</target>
        </trans-unit>
        <trans-unit id="355083b7f57eecb4574c96df4e2dcb55b6e39ceb" translate="yes" xml:space="preserve">
          <source>The updated time instant is then converted back into a &lt;a href=&quot;../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object and used to update the given &lt;a href=&quot;../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">The updated time instant is then converted back into a &lt;a href=&quot;../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object and used to update the given &lt;a href=&quot;../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object.</target>
        </trans-unit>
        <trans-unit id="0baad8b72ddb35a83879b234fb143110d6defdf2" translate="yes" xml:space="preserve">
          <source>The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</source>
          <target state="translated">The updater methods are used to update column values in the current row or the insert row. The updater methods do not update the underlying database; instead the &lt;code&gt;updateRow&lt;/code&gt; or &lt;code&gt;insertRow&lt;/code&gt; methods are called to update the database.</target>
        </trans-unit>
        <trans-unit id="f2bcc2d49c180e5baf0e82f6c9fcc3ed64f68df8" translate="yes" xml:space="preserve">
          <source>The updater methods may be used in two ways:</source>
          <target state="translated">アップデータのメソッドには、2 つの方法があります。</target>
        </trans-unit>
        <trans-unit id="c660520ce3264961f8c352c1ced2cca916613b71" translate="yes" xml:space="preserve">
          <source>The upgrade module path</source>
          <target state="translated">アップグレードモジュールのパス</target>
        </trans-unit>
        <trans-unit id="7e25e2dbc84508e95baa5cc07d894f889b8081b4" translate="yes" xml:space="preserve">
          <source>The upgrade module path. This path contains compiled definitions of modules that will be observed in preference to the compiled definitions of any</source>
          <target state="translated">アップグレードモジュールのパス。このパスには、コンパイルされたモジュールの定義が含まれています。</target>
        </trans-unit>
        <trans-unit id="52b9900dc95e3fff929d15c46c76d6028fddcc38" translate="yes" xml:space="preserve">
          <source>The upper left corner of the Raster is given by the location argument. If location is null, (0, 0) will be used. The dataType parameter should be one of the enumerated values defined in the DataBuffer class.</source>
          <target state="translated">Raster の左上隅は location 引数で与えられます。locationがnullの場合は、(0,0)が使用されます。dataTypeパラメータは、DataBufferクラスで定義されている列挙された値のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="67d6b1496d85bc73b81c00c805158bd666f5dfae" translate="yes" xml:space="preserve">
          <source>The upper left corner of the Raster is given by the location argument. The dataType parameter should be one of the enumerated values defined in the DataBuffer class.</source>
          <target state="translated">Raster の左上隅は location 引数で与えられます。dataTypeパラメータは、DataBufferクラスで定義されている列挙された値のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="9e5507eac7b1c8f8528ce3b0b75192849c664597" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'a'&lt;/code&gt;. The entire string representing the number will be converted to upper case including the &lt;code&gt;'x'&lt;/code&gt; (&lt;code&gt;'\u0078'&lt;/code&gt;) and &lt;code&gt;'p'&lt;/code&gt; (&lt;code&gt;'\u0070'&lt;/code&gt; and all hexadecimal digits &lt;code&gt;'a'&lt;/code&gt; - &lt;code&gt;'f'&lt;/code&gt; (&lt;code&gt;'\u0061'&lt;/code&gt; - &lt;code&gt;'\u0066'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'a'&lt;/code&gt; の大文字のバリアント。数値を表す文字列全体は、 &lt;code&gt;'x'&lt;/code&gt; （ &lt;code&gt;'\u0078'&lt;/code&gt; ）および &lt;code&gt;'p'&lt;/code&gt; （ &lt;code&gt;'\u0070'&lt;/code&gt; およびすべての16進数字 &lt;code&gt;'a'&lt;/code&gt; - &lt;code&gt;'f'&lt;/code&gt; （ &lt;code&gt;'\u0061'&lt;/code&gt; - &lt;code&gt;'\u0066'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="13c5bb73738331e23e3b8d0a094ce01abeb63f19" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'b'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'b'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="322e75fb849065f4ca52a6addf60e0ac9b017449" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'c'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'c'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="a34a284aaae73cba16fd4c94692a85c43d38c457" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'e'&lt;/code&gt;. The exponent symbol will be &lt;code&gt;'E'&lt;/code&gt; (&lt;code&gt;'\u0045'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'e'&lt;/code&gt; の大文字のバリアント。指数記号は &lt;code&gt;'E'&lt;/code&gt; （ &lt;code&gt;'\u0045'&lt;/code&gt; ）になります。</target>
        </trans-unit>
        <trans-unit id="8e4023159140f742a67dc9be0c2aef26ca29decf" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'g'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'g'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="0a797a98a3e9c41bf7072b33c0c5562f599482a3" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'h'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'h'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="07e68ff070c96b0a5cf38a9497cd5a90681077a0" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'s'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'s'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="6d089cd4117c5c549f52accd43d02871b2e37215" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'t'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'t'&lt;/code&gt; の大文字のバリアント。</target>
        </trans-unit>
        <trans-unit id="3c81156a71ca9fedc956a7ac507aef205ed19e69" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'x'&lt;/code&gt;. The entire string representing the number will be converted to &lt;a href=&quot;../lang/string#toUpperCase(java.util.Locale)&quot;&gt;upper case&lt;/a&gt; including the &lt;code&gt;'x'&lt;/code&gt; (if any) and all hexadecimal digits &lt;code&gt;'a'&lt;/code&gt; - &lt;code&gt;'f'&lt;/code&gt; (&lt;code&gt;'\u0061'&lt;/code&gt; - &lt;code&gt;'\u0066'&lt;/code&gt;).</source>
          <target state="translated">The upper-case variant of &lt;code&gt;'x'&lt;/code&gt; . The entire string representing the number will be converted to &lt;a href=&quot;../lang/string#toUpperCase(java.util.Locale)&quot;&gt;upper case&lt;/a&gt; including the &lt;code&gt;'x'&lt;/code&gt; (if any) and all hexadecimal digits &lt;code&gt;'a'&lt;/code&gt; - &lt;code&gt;'f'&lt;/code&gt; ( &lt;code&gt;'\u0061'&lt;/code&gt; - &lt;code&gt;'\u0066'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a786ff8547a2a8f3e96b122c7d43bbbbe0cec7bd" translate="yes" xml:space="preserve">
          <source>The upper-case variant of &lt;code&gt;'x'&lt;/code&gt;. The entire string representing the number will be converted to &lt;a href=&quot;../lang/string#toUpperCase-java.util.Locale-&quot;&gt;upper case&lt;/a&gt; including the &lt;code&gt;'x'&lt;/code&gt; (if any) and all hexadecimal digits &lt;code&gt;'a'&lt;/code&gt; - &lt;code&gt;'f'&lt;/code&gt; (&lt;code&gt;'\u0061'&lt;/code&gt; - &lt;code&gt;'\u0066'&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;'x'&lt;/code&gt; の大文字のバリアント。数値を表す文字列全体は、 &lt;code&gt;'x'&lt;/code&gt; （存在する場合）とすべての16進数字 &lt;code&gt;'a'&lt;/code&gt; 〜 &lt;code&gt;'f'&lt;/code&gt; （ &lt;code&gt;'\u0061'&lt;/code&gt; 〜 &lt;code&gt;'\u0066'&lt;/code&gt; ）を含む&lt;a href=&quot;../lang/string#toUpperCase-java.util.Locale-&quot;&gt;大文字に&lt;/a&gt;変換されます。</target>
        </trans-unit>
        <trans-unit id="654f2289487545b8f3928941dfdc0d162440284e" translate="yes" xml:space="preserve">
          <source>The uppercase letters &lt;code&gt;'A'&lt;/code&gt; through &lt;code&gt;'Z'&lt;/code&gt; (&lt;code&gt;'\u0041'&lt;/code&gt; through &lt;code&gt;'\u005a'&lt;/code&gt;),</source>
          <target state="translated">大文字の &lt;code&gt;'A'&lt;/code&gt; から &lt;code&gt;'Z'&lt;/code&gt; （ &lt;code&gt;'\u0041'&lt;/code&gt; から &lt;code&gt;'\u005a'&lt;/code&gt; ）、</target>
        </trans-unit>
        <trans-unit id="4330d8d1977e43b23dd07bee2099b3f4b622bfa6" translate="yes" xml:space="preserve">
          <source>The url string has the following expected structure.</source>
          <target state="translated">url文字列は以下のような構造になっています。</target>
        </trans-unit>
        <trans-unit id="4cf7c2a834de05ed4f93377051cbab9b134c7cbe" translate="yes" xml:space="preserve">
          <source>The usage of the pseudo/hidden column cannot be determined.</source>
          <target state="translated">疑似/非表示欄の使用法がわからない。</target>
        </trans-unit>
        <trans-unit id="4af9a221919250af2a20e619455ccc9a51cf8601" translate="yes" xml:space="preserve">
          <source>The use of &lt;code&gt;synchronized&lt;/code&gt; methods or statements provides access to the implicit monitor lock associated with every object, but forces all lock acquisition and release to occur in a block-structured way: when multiple locks are acquired they must be released in the opposite order, and all locks must be released in the same lexical scope in which they were acquired.</source>
          <target state="translated">使用 &lt;code&gt;synchronized&lt;/code&gt; メソッドや文では、すべてのオブジェクトに関連付けられた暗黙の監視ロックへのアクセスを提供しますが、すべてのロック取得を強制し、ブロック構造の形で発生するリリース：複数のロックを取得したときには逆の順序で解放されなければならない、とすべてのロックは、それらが取得されたのと同じ字句スコープで解放する必要があります。</target>
        </trans-unit>
        <trans-unit id="f768e19a63b5119836728427dc1a9e6eab8e5416" translate="yes" xml:space="preserve">
          <source>The use of Object is conventional, and because the lookup modes are limited, there is no special access provided to the internals of Object, its package or its module. Consequently, the lookup context of this lookup object will be the bootstrap class loader, which means it cannot find user classes.</source>
          <target state="translated">Object の使用は従来のもので、ルックアップモードが制限されているため、Object の内部やそのパッケージ、モジュールへの特別なアクセスは提供されていません。その結果、このルックアップオブジェクトのルックアップコンテキストはブートストラップクラスローダとなり、ユーザクラスを見つけることができません。</target>
        </trans-unit>
        <trans-unit id="63a7e152cb80dbfba69bf4ce931d07a2966b3c06" translate="yes" xml:space="preserve">
          <source>The use of a &lt;code&gt;Supplier&lt;/code&gt; in this form provides a level of indirection that reduces the scope of potential interference with the source. Since the supplier is only invoked after the terminal operation commences, any modifications to the source up to the start of the terminal operation are reflected in the stream result. See &lt;a href=&quot;package-summary#NonInterference&quot;&gt;Non-Interference&lt;/a&gt; for more details.</source>
          <target state="translated">この形式で &lt;code&gt;Supplier&lt;/code&gt; を使用すると、ソースへの潜在的な干渉の範囲を削減する間接レベルが提供されます。ターミナル操作が開始した後にのみサプライヤが呼び出されるため、ターミナル操作の開始までのソースへの変更は、ストリーム結果に反映されます。詳細については、&lt;a href=&quot;package-summary#NonInterference&quot;&gt;非干渉&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="454af7b03b7693d82fd0e4233351ee60b0851423" translate="yes" xml:space="preserve">
          <source>The user can also, when creating his own MBean relation class, have it extending RelationSupport, to retrieve the implementations of required interfaces (see below).</source>
          <target state="translated">また、ユーザーは、自分自身のMBean関係クラスを作成する際に、必要なインターフェースの実装を取得するために、それをRelationSupportを拡張することができます(以下を参照してください)。</target>
        </trans-unit>
        <trans-unit id="df61ad83755512938c568feb25a069781cb800fc" translate="yes" xml:space="preserve">
          <source>The user data object. It is used for whatever data the notification source wishes to communicate to its consumers.</source>
          <target state="translated">ユーザーデータオブジェクト。これは、通知ソースが消費者に通信したいデータのために使用されます。</target>
        </trans-unit>
        <trans-unit id="3db14b3d19120ebd8508e01afa1c48fe94d62e5d" translate="yes" xml:space="preserve">
          <source>The user drop action is chosen for a drop as described in the documentation for &lt;a href=&quot;../../java/awt/dnd/droptargetdragevent&quot;&gt;&lt;code&gt;DropTargetDragEvent&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../java/awt/dnd/droptargetdropevent&quot;&gt;&lt;code&gt;DropTargetDropEvent&lt;/code&gt;&lt;/a&gt;. A different action may be chosen as the drop action by way of the &lt;code&gt;setDropAction&lt;/code&gt; method.</source>
          <target state="translated">The user drop action is chosen for a drop as described in the documentation for &lt;a href=&quot;../../java/awt/dnd/droptargetdragevent&quot;&gt; &lt;code&gt;DropTargetDragEvent&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;../../java/awt/dnd/droptargetdropevent&quot;&gt; &lt;code&gt;DropTargetDropEvent&lt;/code&gt; &lt;/a&gt;. A different action may be chosen as the drop action by way of the &lt;code&gt;setDropAction&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="ded37dd355a5696c21e0eddb21f83620c05ca906" translate="yes" xml:space="preserve">
          <source>The user has activated the &lt;em&gt;line down&lt;/em&gt; area of a scroll bar.</source>
          <target state="translated">The user has activated the &lt;em&gt;line down&lt;/em&gt; area of a scroll bar.</target>
        </trans-unit>
        <trans-unit id="a39c75ca8c5af9e1d6071e0c53aa08a01e2ada67" translate="yes" xml:space="preserve">
          <source>The user has activated the &lt;em&gt;line up&lt;/em&gt; area of a scroll bar.</source>
          <target state="translated">The user has activated the &lt;em&gt;line up&lt;/em&gt; area of a scroll bar.</target>
        </trans-unit>
        <trans-unit id="173345745a92c74955436882d12492db2df03cd8" translate="yes" xml:space="preserve">
          <source>The user has activated the &lt;em&gt;page down&lt;/em&gt; area of a scroll bar.</source>
          <target state="translated">The user has activated the &lt;em&gt;page down&lt;/em&gt; area of a scroll bar.</target>
        </trans-unit>
        <trans-unit id="193d0a150699d577c9a383562d0f5b4713e8495f" translate="yes" xml:space="preserve">
          <source>The user has activated the &lt;em&gt;page up&lt;/em&gt; area of a scroll bar.</source>
          <target state="translated">The user has activated the &lt;em&gt;page up&lt;/em&gt; area of a scroll bar.</target>
        </trans-unit>
        <trans-unit id="5e0125de9eae2e97f0496830f88ba461cb0bd321" translate="yes" xml:space="preserve">
          <source>The user has asked the window manager to de-iconify the window.</source>
          <target state="translated">ユーザーはウィンドウマネージャにウィンドウのデアイコン化を依頼しました。</target>
        </trans-unit>
        <trans-unit id="56242cc07cfff1cbe77e752555cb055840f3b2e4" translate="yes" xml:space="preserve">
          <source>The user has asked the window manager to expose the window.</source>
          <target state="translated">ユーザーはウィンドウマネージャにウィンドウを公開するように依頼しました。</target>
        </trans-unit>
        <trans-unit id="563dcb0f90c61b1caa7310cce78c1757d7f585c3" translate="yes" xml:space="preserve">
          <source>The user has asked the window manager to iconify the window.</source>
          <target state="translated">ユーザーはウィンドウマネージャにウィンドウのアイコン化を依頼しました。</target>
        </trans-unit>
        <trans-unit id="45e5f9d7b2d37a80979047ad0518fe4e6c2633b7" translate="yes" xml:space="preserve">
          <source>The user has asked the window manager to kill the window.</source>
          <target state="translated">ユーザーはウィンドウマネージャにウィンドウを終了するように依頼しました。</target>
        </trans-unit>
        <trans-unit id="014e44e3d624db2665350901310ffbe64ac20fb5" translate="yes" xml:space="preserve">
          <source>The user has asked the window manager to move the window.</source>
          <target state="translated">ユーザーはウィンドウマネージャにウィンドウの移動を依頼しました。</target>
        </trans-unit>
        <trans-unit id="764c2fd6c39c249418224b29ac8f824541a679bd" translate="yes" xml:space="preserve">
          <source>The user has moved the bubble (thumb) in a scroll bar, moving to an &quot;absolute&quot; position, rather than to an offset from the last position.</source>
          <target state="translated">ユーザーがスクロールバー内のバブル(親指)を移動させ、最後の位置からのオフセットではなく、「絶対」の位置に移動しました。</target>
        </trans-unit>
        <trans-unit id="ff728aa953bcf2dfb607b42f34ca43619a0f611c" translate="yes" xml:space="preserve">
          <source>The user has moved the frame.</source>
          <target state="translated">ユーザーがフレームを移動しました。</target>
        </trans-unit>
        <trans-unit id="041cfcebf87ffdf1af9afcebade80777aa0d5bda" translate="yes" xml:space="preserve">
          <source>The user has moved the frame. Calls to this method will be preceded by calls to beginDraggingFrame(). Normally &lt;b&gt;f&lt;/b&gt; will be a JInternalFrame.</source>
          <target state="translated">The user has moved the frame. Calls to this method will be preceded by calls to beginDraggingFrame(). Normally &lt;b&gt;f&lt;/b&gt; will be a JInternalFrame.</target>
        </trans-unit>
        <trans-unit id="6484fec4987e0f61783465b90329b2c62fb8a22a" translate="yes" xml:space="preserve">
          <source>The user has moved the mouse with a button pressed.</source>
          <target state="translated">ユーザーはボタンを押したままマウスを動かしたことになります。</target>
        </trans-unit>
        <trans-unit id="a0e022e701f05a9e192909dba1a6d7ed9a2e61d4" translate="yes" xml:space="preserve">
          <source>The user has moved the mouse with a button pressed. The &lt;code&gt;ALT_MASK&lt;/code&gt; flag indicates that the middle button is being pressed. The &lt;code&gt;META_MASK&lt;/code&gt; flag indicates that the right button is being pressed.</source>
          <target state="translated">The user has moved the mouse with a button pressed. The &lt;code&gt;ALT_MASK&lt;/code&gt; flag indicates that the middle button is being pressed. The &lt;code&gt;META_MASK&lt;/code&gt; flag indicates that the right button is being pressed.</target>
        </trans-unit>
        <trans-unit id="9478517673152b0a188ebd7f695a6909a35068ba" translate="yes" xml:space="preserve">
          <source>The user has pressed a non-ASCII &lt;em&gt;action&lt;/em&gt; key.</source>
          <target state="translated">The user has pressed a non-ASCII &lt;em&gt;action&lt;/em&gt; key.</target>
        </trans-unit>
        <trans-unit id="e8eebbabc6469cffd8745a8a7fbd45d53446ac29" translate="yes" xml:space="preserve">
          <source>The user has pressed a non-ASCII &lt;em&gt;action&lt;/em&gt; key. The &lt;code&gt;key&lt;/code&gt; field contains a value that indicates that the event occurred on one of the action keys, which comprise the 12 function keys, the arrow (cursor) keys, Page Up, Page Down, Home, End, Print Screen, Scroll Lock, Caps Lock, Num Lock, Pause, and Insert.</source>
          <target state="translated">The user has pressed a non-ASCII &lt;em&gt;action&lt;/em&gt; key. The &lt;code&gt;key&lt;/code&gt; field contains a value that indicates that the event occurred on one of the action keys, which comprise the 12 function keys, the arrow (cursor) keys, Page Up, Page Down, Home, End, Print Screen, Scroll Lock, Caps Lock, Num Lock, Pause, and Insert.</target>
        </trans-unit>
        <trans-unit id="67a001a3e9546194c18bfef01f6d9b32cdeb3c0a" translate="yes" xml:space="preserve">
          <source>The user has pressed a normal key.</source>
          <target state="translated">ユーザーは通常のキーを押したことがあります。</target>
        </trans-unit>
        <trans-unit id="2d8b4cb6c68d277da7928ca096027c71cc6a3f73" translate="yes" xml:space="preserve">
          <source>The user has pressed the mouse button.</source>
          <target state="translated">ユーザーがマウスボタンを押したことになります。</target>
        </trans-unit>
        <trans-unit id="9302404500330950cae7bd068446039128943bbe" translate="yes" xml:space="preserve">
          <source>The user has pressed the mouse button. The &lt;code&gt;ALT_MASK&lt;/code&gt; flag indicates that the middle button has been pressed. The &lt;code&gt;META_MASK&lt;/code&gt; flag indicates that the right button has been pressed.</source>
          <target state="translated">The user has pressed the mouse button. The &lt;code&gt;ALT_MASK&lt;/code&gt; flag indicates that the middle button has been pressed. The &lt;code&gt;META_MASK&lt;/code&gt; flag indicates that the right button has been pressed.</target>
        </trans-unit>
        <trans-unit id="33613d59d46f5c2208ee6543cbb932f56e91df53" translate="yes" xml:space="preserve">
          <source>The user has released a non-ASCII &lt;em&gt;action&lt;/em&gt; key.</source>
          <target state="translated">The user has released a non-ASCII &lt;em&gt;action&lt;/em&gt; key.</target>
        </trans-unit>
        <trans-unit id="59718788e158ca787b42a083c1cb7ebd55667f8c" translate="yes" xml:space="preserve">
          <source>The user has released a non-ASCII &lt;em&gt;action&lt;/em&gt; key. The &lt;code&gt;key&lt;/code&gt; field contains a value that indicates that the event occurred on one of the action keys, which comprise the 12 function keys, the arrow (cursor) keys, Page Up, Page Down, Home, End, Print Screen, Scroll Lock, Caps Lock, Num Lock, Pause, and Insert.</source>
          <target state="translated">The user has released a non-ASCII &lt;em&gt;action&lt;/em&gt; key. The &lt;code&gt;key&lt;/code&gt; field contains a value that indicates that the event occurred on one of the action keys, which comprise the 12 function keys, the arrow (cursor) keys, Page Up, Page Down, Home, End, Print Screen, Scroll Lock, Caps Lock, Num Lock, Pause, and Insert.</target>
        </trans-unit>
        <trans-unit id="c0a1a4af92c498ba1b109389e3aabef5125e5708" translate="yes" xml:space="preserve">
          <source>The user has released a normal key.</source>
          <target state="translated">ユーザーがノーマルキーを放った。</target>
        </trans-unit>
        <trans-unit id="e6720fdb33a7ffd5f47af56f5476bc8ec7c9b8c7" translate="yes" xml:space="preserve">
          <source>The user has released the mouse button.</source>
          <target state="translated">ユーザーはマウスボタンを離しました。</target>
        </trans-unit>
        <trans-unit id="8fb58f16edfb98f8014f0785412ed9cbc1597d4c" translate="yes" xml:space="preserve">
          <source>The user has released the mouse button. The &lt;code&gt;ALT_MASK&lt;/code&gt; flag indicates that the middle button has been released. The &lt;code&gt;META_MASK&lt;/code&gt; flag indicates that the right button has been released.</source>
          <target state="translated">The user has released the mouse button. The &lt;code&gt;ALT_MASK&lt;/code&gt; flag indicates that the middle button has been released. The &lt;code&gt;META_MASK&lt;/code&gt; flag indicates that the right button has been released.</target>
        </trans-unit>
        <trans-unit id="df69537d6480670d27808a2b57db35ab1f8d7fff" translate="yes" xml:space="preserve">
          <source>The user has resized the component.</source>
          <target state="translated">ユーザーがコンポーネントのサイズを変更しました。</target>
        </trans-unit>
        <trans-unit id="7d370243bff4516c98576e2fc9b139692a201877" translate="yes" xml:space="preserve">
          <source>The user has resized the component. Calls to this method will be preceded by calls to beginResizingFrame(). Normally &lt;b&gt;f&lt;/b&gt; will be a JInternalFrame.</source>
          <target state="translated">The user has resized the component. Calls to this method will be preceded by calls to beginResizingFrame(). Normally &lt;b&gt;f&lt;/b&gt; will be a JInternalFrame.</target>
        </trans-unit>
        <trans-unit id="8d09d4d514c51533f230bb3360a834a0337884b5" translate="yes" xml:space="preserve">
          <source>The user may also select what action the &lt;code&gt;LinearGradientPaint&lt;/code&gt; object takes when it is filling the space outside the start and end points by setting &lt;code&gt;CycleMethod&lt;/code&gt; to either &lt;code&gt;REFLECTION&lt;/code&gt; or &lt;code&gt;REPEAT&lt;/code&gt;. The distances between any two colors in any of the reflected or repeated copies of the gradient are the same as the distance between those same two colors between the start and end points. Note that some minor variations in distances may occur due to sampling at the granularity of a pixel. If no cycle method is specified, &lt;code&gt;NO_CYCLE&lt;/code&gt; will be chosen by default, which means the endpoint colors will be used to fill the remaining area.</source>
          <target state="translated">The user may also select what action the &lt;code&gt;LinearGradientPaint&lt;/code&gt; object takes when it is filling the space outside the start and end points by setting &lt;code&gt;CycleMethod&lt;/code&gt; to either &lt;code&gt;REFLECTION&lt;/code&gt; or &lt;code&gt;REPEAT&lt;/code&gt; . The distances between any two colors in any of the reflected or repeated copies of the gradient are the same as the distance between those same two colors between the start and end points. Note that some minor variations in distances may occur due to sampling at the granularity of a pixel. If no cycle method is specified, &lt;code&gt;NO_CYCLE&lt;/code&gt; will be chosen by default, which means the endpoint colors will be used to fill the remaining area.</target>
        </trans-unit>
        <trans-unit id="9a2632db7e1748002c562fd4ecddc561007b40d0" translate="yes" xml:space="preserve">
          <source>The user may also select what action the &lt;code&gt;RadialGradientPaint&lt;/code&gt; object takes when it is filling the space outside the circle's radius by setting &lt;code&gt;CycleMethod&lt;/code&gt; to either &lt;code&gt;REFLECTION&lt;/code&gt; or &lt;code&gt;REPEAT&lt;/code&gt;. The gradient color proportions are equal for any particular line drawn from the focus point. The following figure shows that the distance AB is equal to the distance BC, and the distance AD is equal to the distance DE.</source>
          <target state="translated">The user may also select what action the &lt;code&gt;RadialGradientPaint&lt;/code&gt; object takes when it is filling the space outside the circle's radius by setting &lt;code&gt;CycleMethod&lt;/code&gt; to either &lt;code&gt;REFLECTION&lt;/code&gt; or &lt;code&gt;REPEAT&lt;/code&gt; . The gradient color proportions are equal for any particular line drawn from the focus point. The following figure shows that the distance AB is equal to the distance BC, and the distance AD is equal to the distance DE.</target>
        </trans-unit>
        <trans-unit id="590a075b469a4f56c53bc731a726c007392423a0" translate="yes" xml:space="preserve">
          <source>The user must provide an array of floats specifying how to distribute the colors along the gradient. These values should range from 0.0 to 1.0 and act like keyframes along the gradient (they mark where the gradient should be exactly a particular color).</source>
          <target state="translated">ユーザーは、グラデーションに沿って色をどのように配分するかを指定するフロートの配列を与えなければなりません。これらの値は 0.0 から 1.0 の範囲で、 グラデーションに沿ってキーフレームのように振る舞います (グラデーションが特定の色に正確になるようにマークします)。</target>
        </trans-unit>
        <trans-unit id="2f92c89b3e1ea6558173650f9d78d79a1fd2e5a3" translate="yes" xml:space="preserve">
          <source>The user must specify the circle controlling the gradient pattern, which is described by a center point and a radius. The user can also specify a separate focus point within that circle, which controls the location of the first color of the gradient. By default the focus is set to be the center of the circle.</source>
          <target state="translated">グラデーションパターンを制御する円を指定しなければなりません。グラデーションの最初の色の位置を制御する円の中に別のフォーカスポイントを指定することもできます。デフォルトでは焦点は円の中心に設定されています。</target>
        </trans-unit>
        <trans-unit id="a90065a65c9a5ea16238f84c083e26d1b911ff17" translate="yes" xml:space="preserve">
          <source>The user-defined authenticator instance is passed to the connector server in the environment map as the value of the attribute &lt;a href=&quot;jmxconnectorserver#AUTHENTICATOR&quot;&gt;&lt;code&gt;JMXConnectorServer.AUTHENTICATOR&lt;/code&gt;&lt;/a&gt;. For connector servers that use only this authentication system, if this attribute is not present or its value is &lt;code&gt;null&lt;/code&gt; then no user authentication will be performed and full access to the methods exported by the &lt;code&gt;MBeanServerConnection&lt;/code&gt; object will be allowed.</source>
          <target state="translated">ユーザー定義のオーセンティケーターインスタンスは、&lt;a href=&quot;jmxconnectorserver#AUTHENTICATOR&quot;&gt; &lt;code&gt;JMXConnectorServer.AUTHENTICATOR&lt;/code&gt; &lt;/a&gt;属性の値として環境マップ内のコネクターサーバーに渡されます。この認証システムのみを使用するコネクタサーバーの場合、この属性が存在しないかその値が &lt;code&gt;null&lt;/code&gt; の場合、ユーザー認証は実行されず、 &lt;code&gt;MBeanServerConnection&lt;/code&gt; オブジェクトによってエクスポートされたメソッドへのフルアクセスが許可されます。</target>
        </trans-unit>
        <trans-unit id="c914f1ee26eb2ebcd79dbec38073d9056bf25e3d" translate="yes" xml:space="preserve">
          <source>The user-information component of a URI, if defined, only contains characters in the</source>
          <target state="translated">URIのユーザー情報コンポーネントは、定義されている場合には</target>
        </trans-unit>
        <trans-unit id="cecb19734468bf88cd49f4e0c07a6289251ea9f3" translate="yes" xml:space="preserve">
          <source>The user-visible name of the cursor.</source>
          <target state="translated">カーソルのユーザに見える名前。</target>
        </trans-unit>
        <trans-unit id="3fcb03e77d59691b4c3374ea557ceea588b9a5f2" translate="yes" xml:space="preserve">
          <source>The username/password, or &lt;code&gt;null&lt;/code&gt; if one can't be gotten.</source>
          <target state="translated">The username/password, or &lt;code&gt;null&lt;/code&gt; if one can't be gotten.</target>
        </trans-unit>
        <trans-unit id="852bcbc69c682da592bdc81c14977bb3eb3a85b8" translate="yes" xml:space="preserve">
          <source>The username/password, or null if one can't be gotten</source>
          <target state="translated">ユーザ名/パスワード、または取得できない場合はnull</target>
        </trans-unit>
        <trans-unit id="03440d126078d0084be21d674c68227ce0cda463" translate="yes" xml:space="preserve">
          <source>The username/password, or null if one can't be gotten.</source>
          <target state="translated">ユーザ名/パスワード、または取得できない場合はnull。</target>
        </trans-unit>
        <trans-unit id="17d6793bf33f91782b645959d723e53a09498647" translate="yes" xml:space="preserve">
          <source>The usual way to create an RMI connector server is to supply an RMI connector address to the method &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorserverfactory#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt;&lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt;&lt;/a&gt;. The MBean server to which the connector server is attached can be specified as a parameter to that method. Alternatively, the connector server can be registered as an MBean in that MBean server.</source>
          <target state="translated">The usual way to create an RMI connector server is to supply an RMI connector address to the method &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorserverfactory#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt; &lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt; &lt;/a&gt;. The MBean server to which the connector server is attached can be specified as a parameter to that method. Alternatively, the connector server can be registered as an MBean in that MBean server.</target>
        </trans-unit>
        <trans-unit id="ffbb7618ff4fd4460738f69cf1f76b5b5baf3e9a" translate="yes" xml:space="preserve">
          <source>The usual way to create an RMI connector server is to supply an RMI connector address to the method &lt;a href=&quot;../jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt;&lt;/a&gt;. The MBean server to which the connector server is attached can be specified as a parameter to that method. Alternatively, the connector server can be registered as an MBean in that MBean server.</source>
          <target state="translated">RMIコネクタサーバーを作成する通常の方法は、メソッド&lt;a href=&quot;../jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt; に&lt;/a&gt; RMIコネクタアドレスを提供することです。コネクタサーバーが接続されているMBeanサーバーは、そのメソッドのパラメータとして指定できます。または、コネクタサーバーをMBeanサーバーにMBeanとして登録することもできます。</target>
        </trans-unit>
        <trans-unit id="ee8fbb7c2ff253065f61fe611df6643442f33374" translate="yes" xml:space="preserve">
          <source>The utility method to check whether a host name is in a domain or not.</source>
          <target state="translated">ホスト名がドメイン内にあるかどうかを調べるユーティリティーメソッド。</target>
        </trans-unit>
        <trans-unit id="ec277891051115eca19f87e67b309f58b25f882b" translate="yes" xml:space="preserve">
          <source>The valid-operation set</source>
          <target state="translated">有効な操作セット</target>
        </trans-unit>
        <trans-unit id="6da16c658a7a0e79e77c0c1ee20586931f71b8d4" translate="yes" xml:space="preserve">
          <source>The validity period consists of two date/time values: the first and last dates (and times) on which the certificate is valid. It is defined in ASN.1 as:</source>
          <target state="translated">有効期間は、証明書が有効である最初の日付と最後の日付(および時刻)の 2 つの日時の値で構成される。ASN.1では次のように定義されている。</target>
        </trans-unit>
        <trans-unit id="9c29678c035dc87e004d700016db31124565f565" translate="yes" xml:space="preserve">
          <source>The value 0, with a scale of 0.</source>
          <target state="translated">値は0で、目盛りは0です。</target>
        </trans-unit>
        <trans-unit id="7ba5543468adcdfdcdc64230eac64e84fb598f9f" translate="yes" xml:space="preserve">
          <source>The value 1, with a scale of 0.</source>
          <target state="translated">値1で、目盛りは0です。</target>
        </trans-unit>
        <trans-unit id="88131b97bd60cff8f031f2c61496c018172d0043" translate="yes" xml:space="preserve">
          <source>The value 10, with a scale of 0.</source>
          <target state="translated">値は10で、目盛りは0です。</target>
        </trans-unit>
        <trans-unit id="6b104bf32cf4f6c1285966d49e578247ca454b86" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;1&lt;/code&gt; is associated with the 'Showa' era, because it contains 1970-01-01 (ISO calendar system).</source>
          <target state="translated">The value &lt;code&gt;1&lt;/code&gt; is associated with the 'Showa' era, because it contains 1970-01-01 (ISO calendar system).</target>
        </trans-unit>
        <trans-unit id="e93f2d941a20476418b0f5aa42a7a3c8ce886eed" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;isPalette&lt;/code&gt;</source>
          <target state="translated">The value &lt;code&gt;isPalette&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b914b287cb7e897169cbfac3e22ac4976186ab0" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;null&lt;/code&gt; is treated the same as the default value and results in the default behavior.</source>
          <target state="translated">値 &lt;code&gt;null&lt;/code&gt; はデフォルト値と同じように扱われ、デフォルトの動作になります。</target>
        </trans-unit>
        <trans-unit id="7ce28ca4a1d075cf5e8885c1cb0efc02a543555e" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;theme&lt;/code&gt; corresponds to the current &lt;code&gt;MetalTheme&lt;/code&gt;.</source>
          <target state="translated">値の &lt;code&gt;theme&lt;/code&gt; は、現在の &lt;code&gt;MetalTheme&lt;/code&gt; に対応しています。</target>
        </trans-unit>
        <trans-unit id="a0f7d33ccbee8c89c02bfac3ad06568c31157384" translate="yes" xml:space="preserve">
          <source>The value and extent set methods &quot;correct&quot; their argument to fit within the limits defined by the other three properties. For example if &lt;code&gt;value == maximum&lt;/code&gt;, &lt;code&gt;setExtent(10)&lt;/code&gt; would change the extent (back) to zero.</source>
          <target state="translated">値と範囲のセットメソッドは、他の3つのプロパティで定義された制限内に収まるように引数を「修正」します。たとえば、 &lt;code&gt;value == maximum&lt;/code&gt; 場合、 &lt;code&gt;setExtent(10)&lt;/code&gt; はエクステント（戻る）をゼロに変更します。</target>
        </trans-unit>
        <trans-unit id="2493c3149038a8c099fab7e9e4311ce1d4deb4f4" translate="yes" xml:space="preserve">
          <source>The value associated with the key must be a non-empty string. A provider satisfies this selection criterion iff the provider implements the specified algorithm or type for the specified cryptographic service and its implementation meets the constraint expressed by the specified attribute name/value pair.</source>
          <target state="translated">鍵に関連付けられた値は、空でない文字列でなければならない。プロバイダが、指定された暗号化サービスのために指定されたアルゴリズムまたはタイプを実装し、その実装が、指定された属性名/値のペアで表される制約を満たす場合、プロバイダは、この選択基準を満たす。</target>
        </trans-unit>
        <trans-unit id="391e2180db915adfa1b2cf6e71bfe20db996f02f" translate="yes" xml:space="preserve">
          <source>The value associated with the key must be an empty string.</source>
          <target state="translated">キーに関連付けられた値は空の文字列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="7bb6a82fa77874feef436d7637c68a730afd2083" translate="yes" xml:space="preserve">
          <source>The value being monitored can be a simple value contained within a complex type. For example, the &lt;a href=&quot;../../../java/lang/management/memorymxbean&quot;&gt;&lt;code&gt;MemoryMXBean&lt;/code&gt;&lt;/a&gt; defined in &lt;code&gt;java.lang.management&lt;/code&gt; has an attribute &lt;code&gt;HeapMemoryUsage&lt;/code&gt; of type &lt;a href=&quot;../../../java/lang/management/memoryusage&quot;&gt;&lt;code&gt;MemoryUsage&lt;/code&gt;&lt;/a&gt;. To monitor the amount of</source>
          <target state="translated">監視される値は、複合型に含まれる単純な値にすることができます。たとえば、 &lt;code&gt;java.lang.management&lt;/code&gt; で定義されている&lt;a href=&quot;../../../java/lang/management/memorymxbean&quot;&gt; &lt;code&gt;MemoryMXBean&lt;/code&gt; に&lt;/a&gt;は、タイプ&lt;a href=&quot;../../../java/lang/management/memoryusage&quot;&gt; &lt;code&gt;MemoryUsage&lt;/code&gt; の&lt;/a&gt;属性 &lt;code&gt;HeapMemoryUsage&lt;/code&gt; があります。量を監視するには</target>
        </trans-unit>
        <trans-unit id="22671dbb3a2fc0af5749f79de99c08b7020ea924" translate="yes" xml:space="preserve">
          <source>The value can also be set with a security property using the same name, but setting a system property will override the security property value.</source>
          <target state="translated">同名のセキュリティ・プロパティでも値を設定できますが、システム・プロパティを設定するとセキュリティ・プロパティの値が上書きされます。</target>
        </trans-unit>
        <trans-unit id="79fbee1710c4e5fba3cf79c5bfcda285dfaed740" translate="yes" xml:space="preserve">
          <source>The value can be anything the server chooses to send. Its value is probably of interest only to the server. The cookie's value can be changed after creation with the &lt;code&gt;setValue&lt;/code&gt; method.</source>
          <target state="translated">値は、サーバーが送信することを選択したものにすることができます。その値はおそらくサーバーのみに関係します。Cookieの値は、作成後に &lt;code&gt;setValue&lt;/code&gt; メソッドで変更できます。</target>
        </trans-unit>
        <trans-unit id="0402397f26735b2ed2400f8ddcfcc924e0ce9a91" translate="yes" xml:space="preserve">
          <source>The value can be retrieved by calling the &lt;code&gt;get&lt;/code&gt; method with a key that is equal to the original key.</source>
          <target state="translated">値は、元のキーと等しいキーで &lt;code&gt;get&lt;/code&gt; メソッドを呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="ca37fc0349fbf46d676537c35886a71febcb4b0e" translate="yes" xml:space="preserve">
          <source>The value element MUST have the name of the code generator.</source>
          <target state="translated">value 要素には、コード生成器の名前を持たなければならない[MUST]。</target>
        </trans-unit>
        <trans-unit id="b5bc78cb08fd63a200b521c8e2cfc74829815209" translate="yes" xml:space="preserve">
          <source>The value element MUST have the name of the code generator. The name is the fully qualified name of the code generator.</source>
          <target state="translated">value 要素には、コード・ジェネレーターの名前を持たなければならない[MUST]。nameはコード・ジェネレーターの完全修飾名である。</target>
        </trans-unit>
        <trans-unit id="2b849d5ab1b9e466df1b5b353714d586423cc336" translate="yes" xml:space="preserve">
          <source>The value element MUST have the name of the code generator. The recommended convention is to use the fully qualified name of the code generator. For example: com.acme.generator.CodeGen.</source>
          <target state="translated">value 要素には、コード・ジェネレータの名前を持たなければならない[MUST]。推奨される規約は、コード・ジェネレータの完全修飾名を使用することです。例:com.acme.generator.CodeGen。</target>
        </trans-unit>
        <trans-unit id="92457a36cc7103fbd6b5d7894167b1422c935465" translate="yes" xml:space="preserve">
          <source>The value for the Domain attribute contains no embedded dots, and the value is not .local.</source>
          <target state="translated">Domain属性の値には埋め込みドットが含まれておらず、値は.localではありません。</target>
        </trans-unit>
        <trans-unit id="0d5997f3b8a866c24134b984ca931d64c1fadf66" translate="yes" xml:space="preserve">
          <source>The value for the given parameter. Returns &lt;code&gt;null&lt;/code&gt; if no value is assigned to the key.</source>
          <target state="translated">指定されたパラメーターの値。キーに値が割り当てられていない場合は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="42d264b983e7f353bc8ad5829d7a8cba44eb4f1c" translate="yes" xml:space="preserve">
          <source>The value for the specified key.</source>
          <target state="translated">指定したキーの値。</target>
        </trans-unit>
        <trans-unit id="637e19f1d9d66194c3a5ef081d059355661838ba" translate="yes" xml:space="preserve">
          <source>The value from invoking &lt;code&gt;getToolTipText&lt;/code&gt; on the UI will be returned.</source>
          <target state="translated">UIで &lt;code&gt;getToolTipText&lt;/code&gt; を呼び出したときの値が返されます。</target>
        </trans-unit>
        <trans-unit id="4ed7f25d795cf27390131c4366e7a9398ee24222" translate="yes" xml:space="preserve">
          <source>The value in the data source that caused a conflict</source>
          <target state="translated">競合の原因となったデータ ソースの値</target>
        </trans-unit>
        <trans-unit id="342ca9859d12367903ff6777b29ff28319123dc1" translate="yes" xml:space="preserve">
          <source>The value is a hint and may not be applicable to all types of chooser panel.</source>
          <target state="translated">この値はヒントであり、すべてのタイプのチューザーパネルに適用できるわけではありません。</target>
        </trans-unit>
        <trans-unit id="16eb1ebbc57d65829c8ea71ba8f13bcf76d6b4be" translate="yes" xml:space="preserve">
          <source>The value is a sequence of 12 month lengths, for example: &quot;29 30 29 30 29 30 30 30 29 30 29 29&quot;</source>
          <target state="translated">値は、例えば、12ヶ月の長さの連続した値である。&quot;29 30 29 30 29 30 30 30 29 30 29 29&quot;</target>
        </trans-unit>
        <trans-unit id="5bb9d71b0461f94e69808933b8398c479395ae01" translate="yes" xml:space="preserve">
          <source>The value is returned.</source>
          <target state="translated">値を返します。</target>
        </trans-unit>
        <trans-unit id="a7de0a0d8ecc433a6e77aa5ef4e35000e3ea661f" translate="yes" xml:space="preserve">
          <source>The value is roughly the ratio of the advance width to that of the regular width.</source>
          <target state="translated">その値は、大まかに言えば、前進幅とレギュラー幅の比率です。</target>
        </trans-unit>
        <trans-unit id="fa1b2acf323d87e30788931ca04eec85714d2e07" translate="yes" xml:space="preserve">
          <source>The value is roughly the ratio of the stem width to that of the regular weight.</source>
          <target state="translated">ステムの幅とレギュラーウェイトの幅の比率を大まかに表した値です。</target>
        </trans-unit>
        <trans-unit id="066682b7ba9301c7bf0f1d401bddfaf27780415b" translate="yes" xml:space="preserve">
          <source>The value is roughly the slope of the stems of the font, expressed as the run over the rise. Positive values lean right.</source>
          <target state="translated">この値は、フォントのステムの傾きを大まかに表したもので、立ち上がりの上を走るように表されます。正の値は右に傾きます。</target>
        </trans-unit>
        <trans-unit id="aa7c0a226aead4605a5359d73bc37df988ab8233" translate="yes" xml:space="preserve">
          <source>The value is set to &lt;code&gt;HIDE_ON_CLOSE&lt;/code&gt; by default. Changes to the value of this property cause the firing of a property change event, with property name &quot;defaultCloseOperation&quot;.</source>
          <target state="translated">値はデフォルトで &lt;code&gt;HIDE_ON_CLOSE&lt;/code&gt; に設定されています。このプロパティの値を変更すると、プロパティ名「defaultCloseOperation」のプロパティ変更イベントが発生します。</target>
        </trans-unit>
        <trans-unit id="b4a9485366d4d3e9e98f4eb98c47c6e965d85121" translate="yes" xml:space="preserve">
          <source>The value may be unavailable (&lt;code&gt;null&lt;/code&gt;) if this exception has been serialized and then deserialized.</source>
          <target state="translated">この例外がシリアル化されてから逆シリアル化されている場合、値は使用できない（ &lt;code&gt;null&lt;/code&gt; ）可能性があります。</target>
        </trans-unit>
        <trans-unit id="d4656bc7f215cf6f15fb76158e42016f85338cb8" translate="yes" xml:space="preserve">
          <source>The value of &lt;a href=&quot;socketoptions#SO_RCVBUF&quot;&gt;&lt;code&gt;SO_RCVBUF&lt;/code&gt;&lt;/a&gt; is also used to set the TCP receive window that is advertized to the remote peer. Generally, the window size can be modified at any time when a socket is connected. However, if a receive window larger than 64K is required then this must be requested &lt;b&gt;before&lt;/b&gt; the socket is connected to the remote peer. There are two cases to be aware of:</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_RCVBUF&quot;&gt; &lt;code&gt;SO_RCVBUF&lt;/code&gt; &lt;/a&gt;の値は、リモートピアにアドバタイズされるTCP受信ウィンドウを設定するためにも使用されます。通常、ウィンドウサイズは、ソケットが接続されているときにいつでも変更できます。ただし、64Kより大きい受信ウィンドウが必要な場合は、ソケットをリモートピアに接続する&lt;b&gt;前に&lt;/b&gt;これを要求&lt;b&gt;する&lt;/b&gt;必要があります。注意が必要なケースが2つあります。</target>
        </trans-unit>
        <trans-unit id="b85d520eb7eadb3694e23d56197be67f17133e54" translate="yes" xml:space="preserve">
          <source>The value of &lt;a href=&quot;socketoptions#SO_RCVBUF&quot;&gt;&lt;code&gt;SO_RCVBUF&lt;/code&gt;&lt;/a&gt; is used both to set the size of the internal socket receive buffer, and to set the size of the TCP receive window that is advertized to the remote peer.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_RCVBUF&quot;&gt; &lt;code&gt;SO_RCVBUF&lt;/code&gt; &lt;/a&gt;の値は、内部ソケット受信バッファーのサイズの設定と、リモートピアにアドバタイズされるTCP受信ウィンドウのサイズの設定の両方に使用されます。</target>
        </trans-unit>
        <trans-unit id="8c4ff5577d151859242031a667b9521d4b7db2c5" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;get(uidClassID)&lt;/code&gt; must be the &lt;code&gt;String&lt;/code&gt; name of a class that implements the corresponding &lt;code&gt;ComponentUI&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;get(uidClassID)&lt;/code&gt; の値は、対応する &lt;code&gt;ComponentUI&lt;/code&gt; クラスを実装するクラスの &lt;code&gt;String&lt;/code&gt; 名である必要があります。</target>
        </trans-unit>
        <trans-unit id="3d7d9b9e9d3e50f723e3431d3e8e8aa5f40dcb83" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;get(uidClassID)&lt;/code&gt; must be the &lt;code&gt;String&lt;/code&gt; name of a class that implements the corresponding &lt;code&gt;ComponentUI&lt;/code&gt; class. If the class hasn't been loaded before, this method looks up the class with &lt;code&gt;uiClassLoader.loadClass()&lt;/code&gt; if a non &lt;code&gt;null&lt;/code&gt; class loader is provided, &lt;code&gt;classForName()&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;get(uidClassID)&lt;/code&gt; の値は、対応する &lt;code&gt;ComponentUI&lt;/code&gt; クラスを実装するクラスの &lt;code&gt;String&lt;/code&gt; 名である必要があります。クラスが以前にロードされていない場合、このメソッドはクラスと見上げ &lt;code&gt;uiClassLoader.loadClass()&lt;/code&gt; 以外の場合 &lt;code&gt;null&lt;/code&gt; クラスローダは、提供され &lt;code&gt;classForName()&lt;/code&gt; それ以外を。</target>
        </trans-unit>
        <trans-unit id="5a87ea63bb29fff9712ea9d7adb6cb32c825530f" translate="yes" xml:space="preserve">
          <source>The value of a &lt;code&gt;QName&lt;/code&gt; contains a &lt;strong&gt;Namespace URI&lt;/strong&gt;, &lt;strong&gt;local part&lt;/strong&gt; and &lt;strong&gt;prefix&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; の値には、&lt;strong&gt;名前空間URI&lt;/strong&gt;、&lt;strong&gt;ローカル部分&lt;/strong&gt;、および&lt;strong&gt;プレフィックス&lt;/strong&gt;が含まれ&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="47901eb75b98cda41165efa4708755552728c44a" translate="yes" xml:space="preserve">
          <source>The value of a floating-point sum is a function both of the input values as well as the order of addition operations. The order of addition operations of this method is intentionally not defined to allow for implementation flexibility to improve the speed and accuracy of the computed result. In particular, this method may be implemented using compensated summation or other technique to reduce the error bound in the numerical sum compared to a simple summation of &lt;code&gt;double&lt;/code&gt; values.</source>
          <target state="translated">浮動小数点合計の値は、入力値と加算演算の順序の両方の関数です。このメソッドの加算演算の順序は、計算結果の速度と精度を向上させる実装の柔軟性を考慮して、意図的に定義されていません。特に、この方法は、補償された合計または他の技術を使用して実装され、 &lt;code&gt;double&lt;/code&gt; 値の単純な合計と比較して、数値合計のエラー限界を減らすことができます。</target>
        </trans-unit>
        <trans-unit id="dbca91d177ed0205782c0c48a8895e3015b456f7" translate="yes" xml:space="preserve">
          <source>The value of a floating-point sum is a function both of the input values as well as the order of addition operations. The order of addition operations of this method is intentionally not defined to allow for implementation flexibility to improve the speed and accuracy of the computed result. In particular, this method may be implemented using compensated summation or other technique to reduce the error bound in the numerical sum compared to a simple summation of &lt;code&gt;double&lt;/code&gt; values. Because of the unspecified order of operations and the possibility of using differing summation schemes, the output of this method may vary on the same input elements.</source>
          <target state="translated">浮動小数点の合計の値は、入力値と加算演算の順序の両方の関数です。このメソッドの加算演算の順序は、計算結果の速度と精度を向上させるための実装の柔軟性を可能にするために意図的に定義されていません。特に、この方法は、 &lt;code&gt;double&lt;/code&gt; 値の単純な合計と比較して、数値合計の誤差限界を減らすために、補償された合計または他の技術を使用して実装することができる。操作の順序が指定されておらず、異なる合計スキームを使用する可能性があるため、このメソッドの出力は同じ入力要素で異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="1818b0cb32425fd7ada740f672d59ec05fcd88bb" translate="yes" xml:space="preserve">
          <source>The value of a floating-point sum is a function both of the input values as well as the order of addition operations. The order of addition operations of this method is intentionally not defined to allow for implementation flexibility to improve the speed and accuracy of the computed result. In particular, this method may be implemented using compensated summation or other technique to reduce the error bound in the numerical sum compared to a simple summation of &lt;code&gt;double&lt;/code&gt; values. Because of the unspecified order of operations and the possibility of using differing summation schemes, the output of this method may vary on the same input values.</source>
          <target state="translated">浮動小数点の合計の値は、入力値と加算演算の順序の両方の関数です。このメソッドの加算演算の順序は、計算結果の速度と精度を向上させるための実装の柔軟性を可能にするために意図的に定義されていません。特に、この方法は、 &lt;code&gt;double&lt;/code&gt; 値の単純な合計と比較して、数値合計の誤差限界を減らすために、補償された合計または他の技術を使用して実装することができる。操作の順序が指定されておらず、異なる合計スキームを使用する可能性があるため、このメソッドの出力は同じ入力値で異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="257716e5f7261a724275793b4cede7634e4a94a2" translate="yes" xml:space="preserve">
          <source>The value of either the &lt;code&gt;engineScope&lt;/code&gt; or &lt;code&gt;globalScope&lt;/code&gt; field.</source>
          <target state="translated">&lt;code&gt;engineScope&lt;/code&gt; または &lt;code&gt;globalScope&lt;/code&gt; フィールドの値。</target>
        </trans-unit>
        <trans-unit id="cc44f2ec78c81b386a8c310e62b47b764873b9be" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;CODE&lt;/code&gt; attribute of the &lt;code&gt;MLET&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;MLET&lt;/code&gt; タグの &lt;code&gt;CODE&lt;/code&gt; 属性の値。</target>
        </trans-unit>
        <trans-unit id="8ed71c2de4c7b018d8c2009db367a1d0adf781b3" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;NAME&lt;/code&gt; attribute of the &lt;code&gt;MLET&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;MLET&lt;/code&gt; タグの &lt;code&gt;NAME&lt;/code&gt; 属性の値。</target>
        </trans-unit>
        <trans-unit id="33a0213d4d41d39ffcaba8745b73f4b11a491bc0" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;OBJECT&lt;/code&gt; attribute of the &lt;code&gt;MLET&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;MLET&lt;/code&gt; タグの &lt;code&gt;OBJECT&lt;/code&gt; 属性の値。</target>
        </trans-unit>
        <trans-unit id="959bfb062f0baa61d452078c0860aff55768dad8" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;VERSION&lt;/code&gt; attribute of the &lt;code&gt;MLET&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;MLET&lt;/code&gt; タグの &lt;code&gt;VERSION&lt;/code&gt; 属性の値。</target>
        </trans-unit>
        <trans-unit id="6095c30c12ae59a730bdf5e89a5c5930d5296d54" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;agentArgs&lt;/code&gt; parameter is always the empty string.</source>
          <target state="translated">&lt;code&gt;agentArgs&lt;/code&gt; パラメーターの値は、常に空の文字列です。</target>
        </trans-unit>
        <trans-unit id="db253ce5afdfcb3423a0685c3f7a274daac0f99b" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;calendarField&lt;/code&gt; property must be one of the &lt;code&gt;java.util.Calendar&lt;/code&gt; constants that specify a field within a &lt;code&gt;Calendar&lt;/code&gt;. The &lt;code&gt;getNextValue&lt;/code&gt; and &lt;code&gt;getPreviousValue&lt;/code&gt; methods change the date forward or backwards by this amount. For example, if &lt;code&gt;calendarField&lt;/code&gt; is &lt;code&gt;Calendar.DAY_OF_WEEK&lt;/code&gt;, then &lt;code&gt;nextValue&lt;/code&gt; produces a &lt;code&gt;Date&lt;/code&gt; that's 24 hours after the current &lt;code&gt;value&lt;/code&gt;, and &lt;code&gt;previousValue&lt;/code&gt; produces a &lt;code&gt;Date&lt;/code&gt; that's 24 hours earlier.</source>
          <target state="translated">&lt;code&gt;calendarField&lt;/code&gt; プロパティの値は、 &lt;code&gt;Calendar&lt;/code&gt; 内のフィールドを指定する &lt;code&gt;java.util.Calendar&lt;/code&gt; 定数の1つである必要があります。 &lt;code&gt;getNextValue&lt;/code&gt; メソッドと &lt;code&gt;getPreviousValue&lt;/code&gt; メソッドは、この量だけ前方または後方日付を変更します。たとえば、 &lt;code&gt;calendarField&lt;/code&gt; はがあり &lt;code&gt;Calendar.DAY_OF_WEEK&lt;/code&gt; の場合、 &lt;code&gt;nextValue&lt;/code&gt; メソッドが生成 &lt;code&gt;Date&lt;/code&gt; 24時間、現在の後だ &lt;code&gt;value&lt;/code&gt; 、と &lt;code&gt;previousValue&lt;/code&gt; は生産 &lt;code&gt;Date&lt;/code&gt; 24時間前です。</target>
        </trans-unit>
        <trans-unit id="794cfe6b23a4d9ae5e0b56d35ae27d70aacb7d7e" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;initialSize&lt;/code&gt; parameter for the default group (see &lt;a href=&quot;#withCachedThreadPool(java.util.concurrent.ExecutorService,int)&quot;&gt;&lt;code&gt;withCachedThreadPool&lt;/code&gt;&lt;/a&gt;). The value of the property is taken to be the &lt;code&gt;String&lt;/code&gt; representation of an &lt;code&gt;Integer&lt;/code&gt; that is the initial size parameter. If the value cannot be parsed as an &lt;code&gt;Integer&lt;/code&gt; it causes an unspecified error to be thrown during the construction of the default group.</source>
          <target state="translated">デフォルトグループの &lt;code&gt;initialSize&lt;/code&gt; パラメーターの値（&lt;a href=&quot;#withCachedThreadPool(java.util.concurrent.ExecutorService,int)&quot;&gt; &lt;code&gt;withCachedThreadPool&lt;/code&gt; を&lt;/a&gt;参照）。プロパティの値は、初期サイズパラメータである &lt;code&gt;Integer&lt;/code&gt; &lt;code&gt;String&lt;/code&gt; 表現と見なされます。値を &lt;code&gt;Integer&lt;/code&gt; として解析できない場合、デフォルトグループの構築中に不特定のエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="f7db15370f7c34a2470defe5752a0b701343b9aa" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;initialSize&lt;/code&gt; parameter for the default group (see &lt;a href=&quot;asynchronouschannelgroup#withCachedThreadPool-java.util.concurrent.ExecutorService-int-&quot;&gt;&lt;code&gt;withCachedThreadPool&lt;/code&gt;&lt;/a&gt;). The value of the property is taken to be the &lt;code&gt;String&lt;/code&gt; representation of an &lt;code&gt;Integer&lt;/code&gt; that is the initial size parameter. If the value cannot be parsed as an &lt;code&gt;Integer&lt;/code&gt; it causes an unspecified error to be thrown during the construction of the default group.</source>
          <target state="translated">デフォルトグループの &lt;code&gt;initialSize&lt;/code&gt; パラメータの値（&lt;a href=&quot;asynchronouschannelgroup#withCachedThreadPool-java.util.concurrent.ExecutorService-int-&quot;&gt; &lt;code&gt;withCachedThreadPool&lt;/code&gt; を&lt;/a&gt;参照）。プロパティの値は、初期サイズパラメータである &lt;code&gt;Integer&lt;/code&gt; &lt;code&gt;String&lt;/code&gt; 表現であると解釈されます。値を &lt;code&gt;Integer&lt;/code&gt; として解析できない場合、デフォルトグループの構築中に不特定のエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="6dc8151f529dc33a68ca2fcf1cb579a5177476f4" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;pos&lt;/code&gt; field at the time the last &lt;code&gt;mark&lt;/code&gt; method was called.</source>
          <target state="translated">最後の &lt;code&gt;mark&lt;/code&gt; メソッドが呼び出されたときの &lt;code&gt;pos&lt;/code&gt; フィールドの値。</target>
        </trans-unit>
        <trans-unit id="3d7b6a331016128368d223794882c3c73304be01" translate="yes" xml:space="preserve">
          <source>The value of the alignment argument must be one of &lt;code&gt;FlowLayout.LEFT&lt;/code&gt;, &lt;code&gt;FlowLayout.RIGHT&lt;/code&gt;, &lt;code&gt;FlowLayout.CENTER&lt;/code&gt;, &lt;code&gt;FlowLayout.LEADING&lt;/code&gt;, or &lt;code&gt;FlowLayout.TRAILING&lt;/code&gt;.</source>
          <target state="translated">配置引数の値は、 &lt;code&gt;FlowLayout.LEFT&lt;/code&gt; 、 &lt;code&gt;FlowLayout.RIGHT&lt;/code&gt; 、 &lt;code&gt;FlowLayout.CENTER&lt;/code&gt; 、 &lt;code&gt;FlowLayout.LEADING&lt;/code&gt; 、または &lt;code&gt;FlowLayout.TRAILING&lt;/code&gt; のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="fd7c2e09ab2e7c092b2a7976a1eb466d93a6e429" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;#parseUnsignedInt(java.lang.String,int)&quot;&gt;&lt;code&gt;Integer.parseUnsignedInt(s, 16)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;#parseUnsignedInt(java.lang.String,int)&quot;&gt; &lt;code&gt;Integer.parseUnsignedInt(s, 16)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="e21e5913fb02bfd63d5ded2134431d5afbd21c2f" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;#parseUnsignedInt(java.lang.String,int)&quot;&gt;&lt;code&gt;Integer.parseUnsignedInt(s, 2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;#parseUnsignedInt(java.lang.String,int)&quot;&gt; &lt;code&gt;Integer.parseUnsignedInt(s, 2)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="b52dd7472776a922558cf8749735520a09027482" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;#parseUnsignedInt(java.lang.String,int)&quot;&gt;&lt;code&gt;Integer.parseUnsignedInt(s, 8)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;#parseUnsignedInt(java.lang.String,int)&quot;&gt; &lt;code&gt;Integer.parseUnsignedInt(s, 8)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="b5f367de23aed8fdc5d40501bc07e4493f43a22c" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;#parseUnsignedLong(java.lang.String,int)&quot;&gt;&lt;code&gt;Long.parseUnsignedLong(s,
 16)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;#parseUnsignedLong(java.lang.String,int)&quot;&gt; &lt;code&gt;Long.parseUnsignedLong(s, 16)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="e5f6ffb0b89f7ca3945ffdc8c9f746c806b1febf" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;#parseUnsignedLong(java.lang.String,int)&quot;&gt;&lt;code&gt;Long.parseUnsignedLong(s,
 2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;#parseUnsignedLong(java.lang.String,int)&quot;&gt; &lt;code&gt;Long.parseUnsignedLong(s, 2)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="8ef526b3a382f98770d90dab5e5ee23080eaf9c1" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;#parseUnsignedLong(java.lang.String,int)&quot;&gt;&lt;code&gt;Long.parseUnsignedLong(s,
 8)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;#parseUnsignedLong(java.lang.String,int)&quot;&gt; &lt;code&gt;Long.parseUnsignedLong(s, 8)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="83b12208c67365cc9a87568927cbc140c553a51c" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;integer#parseUnsignedInt-java.lang.String-int-&quot;&gt;&lt;code&gt;Integer.parseUnsignedInt(s, 16)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;integer#parseUnsignedInt-java.lang.String-int-&quot;&gt; &lt;code&gt;Integer.parseUnsignedInt(s, 16)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="d7c96fb72306b59eb6e27bbb68b4960125a44ad5" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;integer#parseUnsignedInt-java.lang.String-int-&quot;&gt;&lt;code&gt;Integer.parseUnsignedInt(s, 2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;integer#parseUnsignedInt-java.lang.String-int-&quot;&gt; &lt;code&gt;Integer.parseUnsignedInt(s, 2)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="ea713c8dbe3bbb434d598cf92fbf26c0ccad22fb" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;integer#parseUnsignedInt-java.lang.String-int-&quot;&gt;&lt;code&gt;Integer.parseUnsignedInt(s, 8)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;integer#parseUnsignedInt-java.lang.String-int-&quot;&gt; &lt;code&gt;Integer.parseUnsignedInt(s, 8)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="002109f6f0e34deda860d2f8c13101257bd26010" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;long#parseUnsignedLong-java.lang.String-int-&quot;&gt;&lt;code&gt;Long.parseUnsignedLong(s,
 16)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;long#parseUnsignedLong-java.lang.String-int-&quot;&gt; &lt;code&gt;Long.parseUnsignedLong(s, 16)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="2c8bd9a5106b83006a5daa1344bcf9fab6f821e2" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;long#parseUnsignedLong-java.lang.String-int-&quot;&gt;&lt;code&gt;Long.parseUnsignedLong(s,
 2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;long#parseUnsignedLong-java.lang.String-int-&quot;&gt; &lt;code&gt;Long.parseUnsignedLong(s, 2)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="85fe9464ad74c5e36e8aac8096c9a27cbff3e7e2" translate="yes" xml:space="preserve">
          <source>The value of the argument can be recovered from the returned string &lt;code&gt;s&lt;/code&gt; by calling &lt;a href=&quot;long#parseUnsignedLong-java.lang.String-int-&quot;&gt;&lt;code&gt;Long.parseUnsignedLong(s,
 8)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数の値は、&lt;a href=&quot;long#parseUnsignedLong-java.lang.String-int-&quot;&gt; &lt;code&gt;Long.parseUnsignedLong(s, 8)&lt;/code&gt; &lt;/a&gt;呼び出すことにより、返された文字列 &lt;code&gt;s&lt;/code&gt; から復元できます。</target>
        </trans-unit>
        <trans-unit id="944418cefa750e284562a352c57c1ac108123c86" translate="yes" xml:space="preserve">
          <source>The value of the attribute &lt;code&gt;Attr.isId&lt;/code&gt; for all &lt;code&gt;Attr&lt;/code&gt; nodes;</source>
          <target state="translated">すべての &lt;code&gt;Attr&lt;/code&gt; ノードの属性 &lt;code&gt;Attr.isId&lt;/code&gt; の値。</target>
        </trans-unit>
        <trans-unit id="a40df0d23a4275511eaaef080d1d315aca0bfdb7" translate="yes" xml:space="preserve">
          <source>The value of the attribute &lt;code&gt;Text.isElementContentWhitespace&lt;/code&gt; for all &lt;code&gt;Text&lt;/code&gt; nodes;</source>
          <target state="translated">すべての &lt;code&gt;Text&lt;/code&gt; ノードの属性 &lt;code&gt;Text.isElementContentWhitespace&lt;/code&gt; の値。</target>
        </trans-unit>
        <trans-unit id="92420401b1a66eb9d260a1d33bbda978b19012bf" translate="yes" xml:space="preserve">
          <source>The value of the attribute in the lowest scope for which an attribute with the given name is defined. Returns null if no attribute with the name exists in any scope.</source>
          <target state="translated">指定した名前の属性が定義されている最下位のスコープの属性の値。指定した名前の属性がどのスコープにも存在しない場合は null を返します。</target>
        </trans-unit>
        <trans-unit id="3da50d92e176dc63b5da07ccab80504daf8a1e18" translate="yes" xml:space="preserve">
          <source>The value of the attribute retrieved.</source>
          <target state="translated">取得した属性の値。</target>
        </trans-unit>
        <trans-unit id="92991f2b467a9dd9be161ffe7219ec382620ce83" translate="yes" xml:space="preserve">
          <source>The value of the attribute. May be null if the attribute is unknown.</source>
          <target state="translated">属性の値。属性が不明な場合は null になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="466e384c29b6463845ff35c548a12774880047a9" translate="yes" xml:space="preserve">
          <source>The value of the attribute. Returns &lt;code&gt;null&lt;/code&gt; is the name does not exist in the given scope.</source>
          <target state="translated">属性の値。指定されたスコープに名前が存在しない場合は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="74cdc8bebf5f468278c81d960a0037a2414259ba" translate="yes" xml:space="preserve">
          <source>The value of the client info property specified</source>
          <target state="translated">指定されたクライアント情報プロパティの値</target>
        </trans-unit>
        <trans-unit id="91e403e2eb1c324930b4e35dae6fc81cb5073836" translate="yes" xml:space="preserve">
          <source>The value of the data source name property can be used to do a lookup of a &lt;code&gt;DataSource&lt;/code&gt; object that has been registered with a naming service. After being retrieved, the &lt;code&gt;DataSource&lt;/code&gt; object can be used to create a connection to the data source that it represents.</source>
          <target state="translated">データソース名プロパティの値を使用して、ネーミングサービスに登録されている &lt;code&gt;DataSource&lt;/code&gt; オブジェクトを検索できます。取得した後、 &lt;code&gt;DataSource&lt;/code&gt; オブジェクトを使用して、それが表すデータソースへの接続を作成できます。</target>
        </trans-unit>
        <trans-unit id="89153ece260b7dfb644e9861ccd90ff459f98fed" translate="yes" xml:space="preserve">
          <source>The value of the entry corresponds to the &lt;code&gt;color&lt;/code&gt; of the &lt;code&gt;name-color&lt;/code&gt; pair. The value of the entry is calculated in one of two ways. With either approach the value is always a &lt;code&gt;ColorUIResource&lt;/code&gt;.</source>
          <target state="translated">エントリの値は、 &lt;code&gt;name-color&lt;/code&gt; ペアの &lt;code&gt;color&lt;/code&gt; に対応しています。エントリの値は、2つの方法のいずれかで計算されます。どちらのアプローチでも、値は常に &lt;code&gt;ColorUIResource&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a29338eb8aef71785b10debb2f0b72aa45d3ef71" translate="yes" xml:space="preserve">
          <source>The value of the feature element</source>
          <target state="translated">特徴要素の値</target>
        </trans-unit>
        <trans-unit id="e49deabc177c53d0801c439c0df42c2b5ea401a4" translate="yes" xml:space="preserve">
          <source>The value of the field will be output during a format. If the value cannot be obtained then an exception will be thrown.</source>
          <target state="translated">フィールドの値は、フォーマット中に出力されます。値を取得できない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="9f09895cfba5ef0e576e6f82bf3ed884e2defea3" translate="yes" xml:space="preserve">
          <source>The value of the horizontalAlignment property, one of the following constants defined in &lt;code&gt;SwingConstants&lt;/code&gt;: &lt;code&gt;LEFT&lt;/code&gt;, &lt;code&gt;CENTER&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt;, &lt;code&gt;LEADING&lt;/code&gt; or &lt;code&gt;TRAILING&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SwingConstants&lt;/code&gt; で定義されている次の定数の1つであるhorizo​​ntalAlignmentプロパティの値： &lt;code&gt;LEFT&lt;/code&gt; 、 &lt;code&gt;CENTER&lt;/code&gt; 、 &lt;code&gt;RIGHT&lt;/code&gt; 、 &lt;code&gt;LEADING&lt;/code&gt; または &lt;code&gt;TRAILING&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1aee812e8129cf619830b9c5ca742d61c7a90b98" translate="yes" xml:space="preserve">
          <source>The value of the interim element, or zero</source>
          <target state="translated">中間要素の値、またはゼロ</target>
        </trans-unit>
        <trans-unit id="87be2e085969e0b67e47a39ebaf8ecadcab9540e" translate="yes" xml:space="preserve">
          <source>The value of the job's &lt;a href=&quot;jobholduntil&quot;&gt;&lt;code&gt;JobHoldUntil&lt;/code&gt;&lt;/a&gt; attribute was specified with a date-time that is still in the future.</source>
          <target state="translated">ジョブの&lt;a href=&quot;jobholduntil&quot;&gt; &lt;code&gt;JobHoldUntil&lt;/code&gt; &lt;/a&gt;属性の値が、まだ未来の日時で指定されました。</target>
        </trans-unit>
        <trans-unit id="48e435e7bad97cf8759c8bed3884e0e05a6ca6c6" translate="yes" xml:space="preserve">
          <source>The value of the job's &lt;a href=&quot;jobholduntil&quot;&gt;&lt;code&gt;JobHoldUntil&lt;/code&gt;&lt;/a&gt; attribute was specified with a date-time that is still in the future. The job must not be a candidate for processing until this reason is removed and there are no other reasons to hold the job. This value should be supported if the &lt;a href=&quot;jobholduntil&quot;&gt;&lt;code&gt;JobHoldUntil&lt;/code&gt;&lt;/a&gt; job template attribute is supported.</source>
          <target state="translated">ジョブの&lt;a href=&quot;jobholduntil&quot;&gt; &lt;code&gt;JobHoldUntil&lt;/code&gt; &lt;/a&gt;属性の値が、まだ未来の日時で指定されました。この理由が取り除かれ、ジョブを保留する他の理由がなくなるまで、ジョブは処理の候補であってはなりません。&lt;a href=&quot;jobholduntil&quot;&gt; &lt;code&gt;JobHoldUntil&lt;/code&gt; &lt;/a&gt;ジョブテンプレート属性がサポートされている場合は、この値をサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="fa775d6651b666f860fc718e770f26380a796a79" translate="yes" xml:space="preserve">
          <source>The value of the method property identifies the overall method that should be used for outputting the result tree. Other non-namespaced values may be used, such as &quot;xhtml&quot;, but, if accepted, the handling of such values is implementation defined. If any of the method values are not accepted and are not namespace qualified, then &lt;a href=&quot;transformer#setOutputProperty(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;Transformer.setOutputProperty(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;transformer#setOutputProperties(java.util.Properties)&quot;&gt;&lt;code&gt;Transformer.setOutputProperties(java.util.Properties)&lt;/code&gt;&lt;/a&gt; will throw a &lt;a href=&quot;../../../../java.base/java/lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">methodプロパティの値は、結果ツリーの出力に使用する必要があるメソッド全体を識別します。「xhtml」など、名前空間を使用しない他の値を使用することもできますが、受け入れられる場合、そのような値の処理は実装で定義されます。メソッド値のいずれかが受け入れられず、名前空間で修飾されていない場合、&lt;a href=&quot;transformer#setOutputProperty(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;Transformer.setOutputProperty(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;transformer#setOutputProperties(java.util.Properties)&quot;&gt; &lt;code&gt;Transformer.setOutputProperties(java.util.Properties)&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;../../../../java.base/java/lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="9603d0dd485012e1f4fbb07ab95058c5884e0871" translate="yes" xml:space="preserve">
          <source>The value of the negotiated property. If null, the property was not negotiated or is not applicable to this mechanism.</source>
          <target state="translated">ネゴシエートされたプロパティの値。nullの場合、そのプロパティはネゴシエートされなかったか、このメカニズムには適用されません。</target>
        </trans-unit>
        <trans-unit id="96910b37863aa5f498f86d670ce5a0f5a3e1171c" translate="yes" xml:space="preserve">
          <source>The value of the orientation property, one of the following constants defined in &lt;code&gt;SwingConstants&lt;/code&gt;: &lt;code&gt;VERTICAL&lt;/code&gt;, or &lt;code&gt;HORIZONTAL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SwingConstants&lt;/code&gt; で定義されている次の定数のいずれかであるorientationプロパティの値： &lt;code&gt;VERTICAL&lt;/code&gt; 、または &lt;code&gt;HORIZONTAL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="122991b3abd0c365b5f861b9586921865f40f102" translate="yes" xml:space="preserve">
          <source>The value of the patch element, or zero</source>
          <target state="translated">パッチ要素の値、またはゼロ</target>
        </trans-unit>
        <trans-unit id="99ce23bc16d5210c1930a80ad3c2fe63bc0077c1" translate="yes" xml:space="preserve">
          <source>The value of the printer's &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; attribute ia &lt;code&gt;STOPPED&lt;/code&gt;.</source>
          <target state="translated">プリンターの&lt;a href=&quot;printerstate&quot;&gt; &lt;code&gt;PrinterState&lt;/code&gt; &lt;/a&gt;属性の値は &lt;code&gt;STOPPED&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1375a6bafbe98e90e4d0729db426a82bac246c11" translate="yes" xml:space="preserve">
          <source>The value of the printer's &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; attribute ia STOPPED.</source>
          <target state="translated">プリンターの&lt;a href=&quot;printerstate&quot;&gt; &lt;code&gt;PrinterState&lt;/code&gt; &lt;/a&gt;属性の値はSTOPPEDです。</target>
        </trans-unit>
        <trans-unit id="bd845a6682621e89df372f59113cf70e4aa903b3" translate="yes" xml:space="preserve">
          <source>The value of the printer's &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attribute contains a &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; value of &lt;code&gt;STOPPED_PARTLY&lt;/code&gt;.</source>
          <target state="translated">プリンターの&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; &lt;/a&gt;属性の値には、 &lt;code&gt;STOPPED_PARTLY&lt;/code&gt; の&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;値が含まれています。</target>
        </trans-unit>
        <trans-unit id="db78b0d3523e7732321ffc791c71a38c96846c14" translate="yes" xml:space="preserve">
          <source>The value of the printer's &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attribute contains a &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; value of STOPPED_PARTLY.</source>
          <target state="translated">プリンターの&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; &lt;/a&gt;属性の値には、STOPPED_PARTLYの&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;値が含まれています。</target>
        </trans-unit>
        <trans-unit id="694f6250ebd4b21e919f2ce2a0c6bc377ef96abc" translate="yes" xml:space="preserve">
          <source>The value of the property</source>
          <target state="translated">物件の価値</target>
        </trans-unit>
        <trans-unit id="6ad83955fc29c77c3dc843a219e4ba3bc203ece9" translate="yes" xml:space="preserve">
          <source>The value of the property &lt;code&gt;JScrollBar.isFreeStanding&lt;/code&gt;.</source>
          <target state="translated">プロパティ &lt;code&gt;JScrollBar.isFreeStanding&lt;/code&gt; の値。</target>
        </trans-unit>
        <trans-unit id="fb8346a856c58379f326dd0f040b72de62a3110f" translate="yes" xml:space="preserve">
          <source>The value of the property &lt;code&gt;JSlider.isFilled&lt;/code&gt;.</source>
          <target state="translated">プロパティ &lt;code&gt;JSlider.isFilled&lt;/code&gt; の値。</target>
        </trans-unit>
        <trans-unit id="d641a6d0cde426cfc0af9e3645444ea302f54a9b" translate="yes" xml:space="preserve">
          <source>The value of the property &lt;code&gt;JSlider.isFilled&lt;/code&gt;. By default, &lt;code&gt;false&lt;/code&gt; if the property is not set, &lt;code&gt;true&lt;/code&gt; for Ocean theme.</source>
          <target state="translated">プロパティ &lt;code&gt;JSlider.isFilled&lt;/code&gt; の値。デフォルトでは、プロパティが設定されていない場合は &lt;code&gt;false&lt;/code&gt; 、Oceanテーマの &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9a27d5104e8734003866e124ec7ac94839d9fdbf" translate="yes" xml:space="preserve">
          <source>The value of the property is not inherited by owned windows.</source>
          <target state="translated">所有している窓ではその価値は継承されません。</target>
        </trans-unit>
        <trans-unit id="e7acadd9356fd0eed465f05edbb22ae5050736f1" translate="yes" xml:space="preserve">
          <source>The value of the property, or null if there is no such property in this ObjectName.</source>
          <target state="translated">プロパティの値、またはこの ObjectName にそのようなプロパティがない場合は null。</target>
        </trans-unit>
        <trans-unit id="8e6b1a6d6df9caa879e4a52b4aef13f1d4aeeca5" translate="yes" xml:space="preserve">
          <source>The value of the property.</source>
          <target state="translated">物件の価値。</target>
        </trans-unit>
        <trans-unit id="7c68b6061bfa99862e097c1bb571847be45f5a36" translate="yes" xml:space="preserve">
          <source>The value of the property. Primitive types such as &quot;int&quot; will be wrapped as the corresponding object type such as &quot;java.lang.Integer&quot;.</source>
          <target state="translated">プロパティの値です。int」などのプリミティブ型は、「java.lang.Integer」などの対応するオブジェクト型としてラップされます。</target>
        </trans-unit>
        <trans-unit id="e6ce8c1b4a0539cb032514fafac80fbdabadd594" translate="yes" xml:space="preserve">
          <source>The value of the protected &lt;code&gt;context&lt;/code&gt; field.</source>
          <target state="translated">保護された &lt;code&gt;context&lt;/code&gt; フィールドの値。</target>
        </trans-unit>
        <trans-unit id="fb83c5f6d070a52b005abe4eb82a7b90aa2658ad" translate="yes" xml:space="preserve">
          <source>The value of the result.</source>
          <target state="translated">結果の値。</target>
        </trans-unit>
        <trans-unit id="a5c45270efc048e5f1b9cd9f6afbcaa1274b9a65" translate="yes" xml:space="preserve">
          <source>The value of the retrieved attribute from the descriptor 'value' field or from the invocation of the operation in the 'getMethod' field of the descriptor.</source>
          <target state="translated">ディスクリプタの'value'フィールドから、またはディスクリプタの'getMethod'フィールドの操作の呼び出しから取得した属性の値。</target>
        </trans-unit>
        <trans-unit id="b348eeda39c4d1e3238a0258085bfeb71a22ed5d" translate="yes" xml:space="preserve">
          <source>The value of the retrieved attribute.</source>
          <target state="translated">取得した属性の値。</target>
        </trans-unit>
        <trans-unit id="e2285df145b3c9ae26df5020d927db2f64460ec3" translate="yes" xml:space="preserve">
          <source>The value of the returned &lt;code&gt;BigDecimal&lt;/code&gt; is equal to</source>
          <target state="translated">返される値 &lt;code&gt;BigDecimal&lt;/code&gt; に等しいです。</target>
        </trans-unit>
        <trans-unit id="7150f328ed1ab9b34e2676e12c0ca0d1ef0ff8f7" translate="yes" xml:space="preserve">
          <source>The value of the socket option.</source>
          <target state="translated">ソケットオプションの値。</target>
        </trans-unit>
        <trans-unit id="535d078962378e613737dbb726452780163b4074" translate="yes" xml:space="preserve">
          <source>The value of the socket option. A value of &lt;code&gt;null&lt;/code&gt; may be a valid value for some socket options.</source>
          <target state="translated">ソケットオプションの値。値が &lt;code&gt;null&lt;/code&gt; では、いくつかのソケットオプションの有効な値であってもよいです。</target>
        </trans-unit>
        <trans-unit id="28d58f88eab8d9000d0c4ea336fd00f10e3fc44d" translate="yes" xml:space="preserve">
          <source>The value of the update element, or zero</source>
          <target state="translated">更新要素の値、またはゼロ</target>
        </trans-unit>
        <trans-unit id="7ae629426bd23caed26fa79e25619a881141187e" translate="yes" xml:space="preserve">
          <source>The value of the verticalAlignment property, one of the following constants defined in &lt;code&gt;SwingConstants&lt;/code&gt;: &lt;code&gt;TOP&lt;/code&gt;, &lt;code&gt;CENTER&lt;/code&gt;, or &lt;code&gt;BOTTOM&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SwingConstants&lt;/code&gt; で定義されている次の定数の1つであるverticalAlignmentプロパティの値： &lt;code&gt;TOP&lt;/code&gt; 、 &lt;code&gt;CENTER&lt;/code&gt; 、または &lt;code&gt;BOTTOM&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d50cdb99a13d27827b534e10ac604af9967b5a1" translate="yes" xml:space="preserve">
          <source>The value of this &lt;code&gt;cert.provider.x509v1&lt;/code&gt; property has to be changed to instantiate another implementation. If this security property is not set, a default implementation will be used. Currently, due to possible security restrictions on access to Security properties, this value is looked up and cached at class initialization time and will fallback on a default implementation if the Security property is not accessible.</source>
          <target state="translated">この &lt;code&gt;cert.provider.x509v1&lt;/code&gt; プロパティの値は、別の実装をインスタンス化するために変更する必要があります。このセキュリティプロパティが設定されていない場合、デフォルトの実装が使用されます。現在、セキュリティプロパティへのアクセスに対するセキュリティ制限の可能性があるため、この値はクラスの初期化時に検索およびキャッシュされ、セキュリティプロパティにアクセスできない場合はデフォルトの実装にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="0c1f825aa92de1380fa42da421fb94dab064632a" translate="yes" xml:space="preserve">
          <source>The value of this cell.</source>
          <target state="translated">このセルの値。</target>
        </trans-unit>
        <trans-unit id="b60a5da34c192f58211cc46053f1f572c4bcdf56" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.applet&quot;.</source>
          <target state="translated">この定数の値は &quot;java.naming.applet &quot;です。</target>
        </trans-unit>
        <trans-unit id="70be25b63d854a9373d506112dfd3d18c4830bec" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.authoritative&quot;.</source>
          <target state="translated">この定数の値は &quot;java.naming.authoritative &quot;です。</target>
        </trans-unit>
        <trans-unit id="b330540296e7168a688d0fb69bbfb34bf899dd2a" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.batchsize&quot;.</source>
          <target state="translated">この定数の値は「java.naming.batchsize」です。</target>
        </trans-unit>
        <trans-unit id="f985e2167f0d965a15bc9d49973d2222a40eafb6" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.dns.url&quot;.</source>
          <target state="translated">この定数の値は &quot;java.naming.dns.url &quot;です。</target>
        </trans-unit>
        <trans-unit id="505f54502cd8d68ab0da6463ca38a0fec91385e7" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.factory.control&quot;.</source>
          <target state="translated">この定数の値は「java.naming.factory.control」です。</target>
        </trans-unit>
        <trans-unit id="7151f0bb014c7a5ab1e3e977660775d91a8bd76c" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.factory.initial&quot;.</source>
          <target state="translated">この定数の値は「java.naming.factory.initial」です。</target>
        </trans-unit>
        <trans-unit id="db62ad09fcd4f30699d9b514e5ba9db02ab135dd" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.factory.object&quot;.</source>
          <target state="translated">この定数の値は「java.naming.factory.object」です。</target>
        </trans-unit>
        <trans-unit id="e9295a43ecaf172542c1bc89cc562dadd505eb4e" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.factory.state&quot;.</source>
          <target state="translated">この定数の値は「java.naming.factory.state」です。</target>
        </trans-unit>
        <trans-unit id="72e77db2979cf3c5d5df8c1f312fdcb7e3cf0dd8" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.factory.url.pkgs&quot;.</source>
          <target state="translated">この定数の値は &quot;java.naming.factory.url.pkgs &quot;です。</target>
        </trans-unit>
        <trans-unit id="c23367e5ddc754ace44be4965849c443f3d3cf88" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.language&quot;.</source>
          <target state="translated">この定数の値は &quot;java.naming.language &quot;です。</target>
        </trans-unit>
        <trans-unit id="debafaf87500101460cf58fe25d46bd025885114" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.provider.url&quot;.</source>
          <target state="translated">この定数の値は &quot;java.naming.provider.url &quot;です。</target>
        </trans-unit>
        <trans-unit id="89c2070cd88436218f7f16bf66cb4edf6ba490b2" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.referral&quot;.</source>
          <target state="translated">この定数の値は「java.naming.referral」です。</target>
        </trans-unit>
        <trans-unit id="9cc48d1c5ca0afebb5ebfd310dd2dbd8487ff419" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.security.authentication&quot;.</source>
          <target state="translated">この定数の値は「java.naming.security.authentication」です。</target>
        </trans-unit>
        <trans-unit id="4c0573f6efaba0c512fbcff0c36d7e5b791eae7f" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.security.credentials&quot;.</source>
          <target state="translated">この定数の値は「java.naming.security.credentials」です。</target>
        </trans-unit>
        <trans-unit id="d87cc085dd14ae23c4bfcf35065e84615877a976" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.security.principal&quot;.</source>
          <target state="translated">この定数の値は「java.naming.security.principal」です。</target>
        </trans-unit>
        <trans-unit id="faea59681e2f4d68a14cc8e707a0f644a7fab244" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.security.protocol&quot;.</source>
          <target state="translated">この定数の値は &quot;java.naming.security.protocol &quot;です。</target>
        </trans-unit>
        <trans-unit id="1eea6e7406196f98194d7dc4149b557304e5b765" translate="yes" xml:space="preserve">
          <source>The value of this constant is &quot;java.naming.spi.CannotProceedException&quot;.</source>
          <target state="translated">この定数の値は「java.naming.spi.CannotProceedException」です。</target>
        </trans-unit>
        <trans-unit id="ca2029255b18ef7fc07dffc1f1d98d2c4a798dec" translate="yes" xml:space="preserve">
          <source>The value of this constant is 0.</source>
          <target state="translated">この定数の値は0です。</target>
        </trans-unit>
        <trans-unit id="9e4a7844333ec948b380e774556e82eb6fe0c6a9" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.bound.server.name&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.bound.server.name&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c9f28810068395a3fbd50259cbc462fa2359430a" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.credentials&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.credentials&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="470d84324d3f7fbd7bbb9ea4bcbc9b6b988c1568" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.maxbuffer&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.maxbuffer&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="31211a3383721cd0f9f3b326fde5e252995d83ce" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.policy.credentials&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.policy.credentials&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="959a445f01f7aad3ebc64b3b1f531a15a4e437ce" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.policy.forward&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.policy.forward&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e431aa384161ffc86b3e1453b5fb9e26219c7419" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.policy.noactive&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.policy.noactive&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6a51b4b91f4b66398378907c088b0e7d664796c9" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.policy.noanonymous&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.policy.noanonymous&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0452024b914f4b0596371c42d90bfa7fba3f64b0" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.policy.nodictionary&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.policy.nodictionary&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fa422d1fabd0c76c81a41c9fb85f540e36c02f2b" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.policy.noplaintext&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.policy.noplaintext&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5ecd04d0142b9d176d5021d06e7368dededa7b0b" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.rawsendsize&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.rawsendsize&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8ac4a332444a4793633faa0cd515cf9f64bef452" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;&quot;javax.security.sasl.server.authentication&quot;&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;&quot;javax.security.sasl.server.authentication&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="03055235b2244f2e81fee5ab8a46b3ccf4c6c844" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5451c528917161e845b65a9600deb14a63245379" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f1f15de420d3f3cb04487857617eafedff4b7f93" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;2&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ddb9709927414a9036f3f779734e11c829be7e35" translate="yes" xml:space="preserve">
          <source>The value of this constant is &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">この定数の値は &lt;code&gt;3&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="dbdd77c61d7d11ab57c8e33e4d6f179994662c3b" translate="yes" xml:space="preserve">
          <source>The value of this field can be accessed by the &lt;code&gt;getURL&lt;/code&gt; method.</source>
          <target state="translated">このフィールドの値には、 &lt;code&gt;getURL&lt;/code&gt; メソッドを使用してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="fddbead7df76c109d78f7a8ca445c61cc40955f1" translate="yes" xml:space="preserve">
          <source>The value of this field can be set by the &lt;code&gt;setAllowUserInteraction&lt;/code&gt; method. Its value is returned by the &lt;code&gt;getAllowUserInteraction&lt;/code&gt; method. Its default value is the value of the argument in the last invocation of the &lt;code&gt;setDefaultAllowUserInteraction&lt;/code&gt; method.</source>
          <target state="translated">このフィールドの値は、 &lt;code&gt;setAllowUserInteraction&lt;/code&gt; メソッドで設定できます。その値は、 &lt;code&gt;getAllowUserInteraction&lt;/code&gt; メソッドによって返されます。そのデフォルト値は、 &lt;code&gt;setDefaultAllowUserInteraction&lt;/code&gt; メソッドの最後の呼び出しでの引数の値です。</target>
        </trans-unit>
        <trans-unit id="4b53899ba2aa37cfd5864abd51817769da4f0c3d" translate="yes" xml:space="preserve">
          <source>The value of this flag determines whether the children of entity reference nodes are visible to the &lt;code&gt;NodeIterator&lt;/code&gt;.</source>
          <target state="translated">このフラグの値は、実体参照ノードの子がに表示されているか否かを判断する &lt;code&gt;NodeIterator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8285f8fddd872b1ccac016aa24e9ffe794588d80" translate="yes" xml:space="preserve">
          <source>The value of this flag determines whether the children of entity reference nodes are visible to the &lt;code&gt;NodeIterator&lt;/code&gt;. If false, these children and their descendants will be rejected. Note that this rejection takes precedence over &lt;code&gt;whatToShow&lt;/code&gt; and the filter. Also note that this is currently the only situation where &lt;code&gt;NodeIterators&lt;/code&gt; may reject a complete subtree rather than skipping individual nodes.</source>
          <target state="translated">このフラグの値は、実体参照ノードの子がに表示されているか否かを判断する &lt;code&gt;NodeIterator&lt;/code&gt; 。falseの場合、これらの子とその子孫は拒否されます。この拒否は、 &lt;code&gt;whatToShow&lt;/code&gt; およびフィルターよりも優先されることに注意してください。また、これは現在、 &lt;code&gt;NodeIterators&lt;/code&gt; が個々のノードをスキップするのではなく、完全なサブツリーを拒否する唯一の状況であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4c87ec24eaccea0ae40777eb6ee299a01ac437b4" translate="yes" xml:space="preserve">
          <source>The value of this flag determines whether the children of entity reference nodes are visible to the &lt;code&gt;TreeWalker&lt;/code&gt;.</source>
          <target state="translated">このフラグの値は、エンティティ参照ノードの子が &lt;code&gt;TreeWalker&lt;/code&gt; に表示されるかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="acc960da8ff95973951c52d5661c52e0624a7cec" translate="yes" xml:space="preserve">
          <source>The value of this flag determines whether the children of entity reference nodes are visible to the &lt;code&gt;TreeWalker&lt;/code&gt;. If false, these children and their descendants will be rejected. Note that this rejection takes precedence over &lt;code&gt;whatToShow&lt;/code&gt; and the filter, if any.</source>
          <target state="translated">このフラグの値は、エンティティ参照ノードの子が &lt;code&gt;TreeWalker&lt;/code&gt; に表示されるかどうかを決定します。falseの場合、これらの子とその子孫は拒否されます。この拒否は、 &lt;code&gt;whatToShow&lt;/code&gt; およびフィルター（存在する場合）よりも優先されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="93e24fa416e38a6bf716c88887bf8da3c12c88a3" translate="yes" xml:space="preserve">
          <source>The value of this is updated as the properties relating to the mnemonic change (such as the mnemonic itself, the text...). You should only ever have to call this if you do not wish the default character to be underlined. For example, if the text at tab index 3 was 'Apple Price', with a mnemonic of 'p', and you wanted the 'P' to be decorated, as 'Apple &lt;u&gt;P&lt;/u&gt;rice', you would have to invoke &lt;code&gt;setDisplayedMnemonicIndex(3, 6)&lt;/code&gt; after invoking &lt;code&gt;setMnemonicAt(3, KeyEvent.VK_P)&lt;/code&gt;.</source>
          <target state="translated">この値は、ニーモニックの変更に関連するプロパティ（ニーモニック自体、テキストなど）として更新されます。デフォルトの文字に下線を付けたくない場合にのみ、これを呼び出す必要があります。たとえば、タブインデックス3のテキストが「ApplePrice」で、ニーモニックが「p」で、「P」を「Apple &lt;u&gt;P&lt;/u&gt; rice」のように装飾したい場合は、 &lt;code&gt;setDisplayedMnemonicIndex(3, 6)&lt;/code&gt; を呼び出す必要があります。、6） &lt;code&gt;setMnemonicAt(3, KeyEvent.VK_P)&lt;/code&gt; を呼び出した後。</target>
        </trans-unit>
        <trans-unit id="93e56d2a01d42f52c3a1f9fe48b9bdb10a596a95" translate="yes" xml:space="preserve">
          <source>The value of this is updated as the properties relating to the mnemonic change (such as the mnemonic itself, the text...). You should only ever have to call this if you do not wish the default character to be underlined. For example, if the text was 'Save As', with a mnemonic of 'a', and you wanted the 'A' to be decorated, as 'Save &lt;u&gt;A&lt;/u&gt;s', you would have to invoke &lt;code&gt;setDisplayedMnemonicIndex(5)&lt;/code&gt; after invoking &lt;code&gt;setDisplayedMnemonic(KeyEvent.VK_A)&lt;/code&gt;.</source>
          <target state="translated">この値は、ニーモニックの変更に関連するプロパティ（ニーモニック自体、テキストなど）として更新されます。デフォルトの文字に下線を付けたくない場合にのみ、これを呼び出す必要があります。テキストは「」のニーモニックと[名前を付けて保存]、だった、とあなたは「A」は「保存として、飾られたかった場合例えば、&lt;u&gt;A&lt;/u&gt; s」は、あなたが呼び出す必要があります &lt;code&gt;setDisplayedMnemonicIndex(5)&lt;/code&gt; 起動後 &lt;code&gt;setDisplayedMnemonic(KeyEvent.VK_A)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f4c672312363cd18956c41222b2c48a20cdcbcaf" translate="yes" xml:space="preserve">
          <source>The value of this is updated as the properties relating to the mnemonic change (such as the mnemonic itself, the text...). You should only ever have to call this if you do not wish the default character to be underlined. For example, if the text was 'Save As', with a mnemonic of 'a', and you wanted the 'A' to be decorated, as 'Save &lt;u&gt;A&lt;/u&gt;s', you would have to invoke &lt;code&gt;setDisplayedMnemonicIndex(5)&lt;/code&gt; after invoking &lt;code&gt;setMnemonic(KeyEvent.VK_A)&lt;/code&gt;.</source>
          <target state="translated">この値は、ニーモニックの変更に関連するプロパティ（ニーモニック自体、テキストなど）として更新されます。デフォルトの文字に下線を付けたくない場合にのみ、これを呼び出す必要があります。テキストは「」のニーモニックと[名前を付けて保存]、だった、とあなたは「A」は「保存として、飾られたかった場合例えば、&lt;u&gt;A&lt;/u&gt; s」は、あなたが呼び出す必要があります &lt;code&gt;setDisplayedMnemonicIndex(5)&lt;/code&gt; 呼び出しの後に &lt;code&gt;setMnemonic(KeyEvent.VK_A)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22e401b025a50784c8e45c2a0eed127a5b70d2f8" translate="yes" xml:space="preserve">
          <source>The value of this node, depending on its type; see the table above.</source>
          <target state="translated">このノードの値は、そのタイプに依存します。</target>
        </trans-unit>
        <trans-unit id="c2086f3c26756452a9cb73220e9e49cabcfd876f" translate="yes" xml:space="preserve">
          <source>The value of this node, depending on its type; see the table above. When it is defined to be &lt;code&gt;null&lt;/code&gt;, setting it has no effect, including if the node is read-only.</source>
          <target state="translated">タイプに応じた、このノードの値。上記の表を参照してください。 &lt;code&gt;null&lt;/code&gt; として定義されている場合、ノードが読み取り専用であるかどうかを含め、設定しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="4e9b5b9176900e2f7e73fa51e5d189eb641207bb" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.counter.threshold&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.counter.threshold&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="805bc0f84fb9bc3c7c29e277899cba9c75088a9e" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.error.attribute&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.error.attribute&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8aae8963b9d0d4c118706ad729d8d7101e29ded5" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.error.mbean&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.error.mbean&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="96f76369ba45bc9c5be134158fd29b7c372302c9" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.error.runtime&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.error.runtime&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="aff36f8311add070b34ea295a25633a58a58c2a0" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.error.threshold&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.error.threshold&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ed9ee71b1f970d4866364bbcf548b29ac9080a87" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.error.type&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.error.type&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3d5fc439fac56d5a0fb765bacfd4d488c995be13" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.gauge.high&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.gauge.high&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="16b9f89192e3138677e5519341c20486c7c08f31" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.gauge.low&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.gauge.low&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="07d0c2e7618db99121021ce2e78af95512f4d70e" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.string.differs&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.string.differs&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="99445c3c77b537173304b9ebd614ce3cc4025612" translate="yes" xml:space="preserve">
          <source>The value of this notification type is &lt;code&gt;jmx.monitor.string.matches&lt;/code&gt;.</source>
          <target state="translated">この通知タイプの値は &lt;code&gt;jmx.monitor.string.matches&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1c36785e4a19cb7ed48b6e59925e37acea61cb50" translate="yes" xml:space="preserve">
          <source>The value of this property is taken to be the fully-qualified name of a concrete &lt;a href=&quot;../../util/concurrent/threadfactory&quot;&gt;&lt;code&gt;ThreadFactory&lt;/code&gt;&lt;/a&gt; class. The class is loaded using the system class loader and instantiated. The factory's &lt;a href=&quot;../../util/concurrent/threadfactory#newThread(java.lang.Runnable)&quot;&gt;&lt;code&gt;newThread&lt;/code&gt;&lt;/a&gt; method is invoked to create each thread for the default group's thread pool. If the process to load and instantiate the value of the property fails then an unspecified error is thrown during the construction of the default group.</source>
          <target state="translated">このプロパティの値は、具象&lt;a href=&quot;../../util/concurrent/threadfactory&quot;&gt; &lt;code&gt;ThreadFactory&lt;/code&gt; &lt;/a&gt;クラスの完全修飾名と見なされます。クラスは、システムクラスローダーを使用してロードされ、インスタンス化されます。ファクトリの&lt;a href=&quot;../../util/concurrent/threadfactory#newThread(java.lang.Runnable)&quot;&gt; &lt;code&gt;newThread&lt;/code&gt; &lt;/a&gt;メソッドが呼び出され、デフォルトグループのスレッドプールの各スレッドが作成されます。プロパティの値をロードしてインスタンス化するプロセスが失敗した場合、デフォルトグループの構築中に不特定のエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="ac0faf0ee35ba6f9fe8a29efe20b4f587e920230" translate="yes" xml:space="preserve">
          <source>The value of this property is taken to be the fully-qualified name of a concrete &lt;a href=&quot;../../util/concurrent/threadfactory&quot;&gt;&lt;code&gt;ThreadFactory&lt;/code&gt;&lt;/a&gt; class. The class is loaded using the system class loader and instantiated. The factory's &lt;a href=&quot;../../util/concurrent/threadfactory#newThread-java.lang.Runnable-&quot;&gt;&lt;code&gt;newThread&lt;/code&gt;&lt;/a&gt; method is invoked to create each thread for the default group's thread pool. If the process to load and instantiate the value of the property fails then an unspecified error is thrown during the construction of the default group.</source>
          <target state="translated">このプロパティの値は、具象&lt;a href=&quot;../../util/concurrent/threadfactory&quot;&gt; &lt;code&gt;ThreadFactory&lt;/code&gt; &lt;/a&gt;クラスの完全修飾名と見なされます。クラスはシステムクラスローダーを使用してロードされ、インスタンス化されます。ファクトリの&lt;a href=&quot;../../util/concurrent/threadfactory#newThread-java.lang.Runnable-&quot;&gt; &lt;code&gt;newThread&lt;/code&gt; &lt;/a&gt;メソッドが呼び出され、デフォルトグループのスレッドプールの各スレッドが作成されます。プロパティの値をロードしてインスタンス化するプロセスが失敗すると、デフォルトグループの構築中に不特定のエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="faedb6e636b2c0bf3f25486ce02c8a4b90b5e19e" translate="yes" xml:space="preserve">
          <source>The value of this socket option is a &lt;a href=&quot;networkinterface&quot;&gt;&lt;code&gt;NetworkInterface&lt;/code&gt;&lt;/a&gt; that represents the outgoing interface for multicast datagrams sent by the datagram-oriented socket. For &lt;a href=&quot;standardprotocolfamily#INET6&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt;&lt;/a&gt; sockets then it is system dependent whether setting this option also sets the outgoing interface for multicast datagrams sent to IPv4 addresses.</source>
          <target state="translated">このソケットオプションの値は、データグラム指向のソケットによって送信されたマルチキャストデータグラムの発信インターフェイスを表す&lt;a href=&quot;networkinterface&quot;&gt; &lt;code&gt;NetworkInterface&lt;/code&gt; &lt;/a&gt;です。以下のため&lt;a href=&quot;standardprotocolfamily#INET6&quot;&gt; &lt;code&gt;IPv6&lt;/code&gt; &lt;/a&gt;ソケットそれは、このオプションを設定することも、IPv4アドレスに送信されたマルチキャストデータグラムの発信インターフェイスを設定するかどうかに依存するシステムです。</target>
        </trans-unit>
        <trans-unit id="52d41017b39ecaa0454385d328f3b6bd932b4bc4" translate="yes" xml:space="preserve">
          <source>The value of this socket option is a &lt;code&gt;Boolean&lt;/code&gt; that controls the &lt;em&gt;loopback&lt;/em&gt; of multicast datagrams. The value of the socket option represents if the option is enabled or disabled.</source>
          <target state="translated">このソケットオプションの値は、マルチキャストデータグラムの&lt;em&gt;ループバック&lt;/em&gt;を制御する &lt;code&gt;Boolean&lt;/code&gt; です。ソケットオプションの値は、オプションが有効か無効かを表します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0782095e27c4f63c26addb4f4b586af5276685e2" translate="yes" xml:space="preserve">
          <source>The value of this socket option is a &lt;code&gt;Boolean&lt;/code&gt; that represents whether the option is enabled or disabled. The exact semantics of this socket option are socket type and system dependent.</source>
          <target state="translated">このソケットオプションの値は、オプションが有効か無効かを表す &lt;code&gt;Boolean&lt;/code&gt; です。このソケットオプションの正確なセマンティクスは、ソケットのタイプとシステムに依存します。</target>
        </trans-unit>
        <trans-unit id="c799a28ae4a75daf519e682a26de2c11c010df2a" translate="yes" xml:space="preserve">
          <source>The value of this socket option is a &lt;code&gt;Boolean&lt;/code&gt; that represents whether the option is enabled or disabled. The option is specific to datagram-oriented sockets sending to &lt;a href=&quot;inet4address&quot;&gt;&lt;code&gt;IPv4&lt;/code&gt;&lt;/a&gt; broadcast addresses. When the socket option is enabled then the socket can be used to send &lt;em&gt;broadcast datagrams&lt;/em&gt;.</source>
          <target state="translated">このソケットオプションの値は、オプションが有効か無効かを表す &lt;code&gt;Boolean&lt;/code&gt; です。このオプションは、&lt;a href=&quot;inet4address&quot;&gt; &lt;code&gt;IPv4&lt;/code&gt; &lt;/a&gt;ブロードキャストアドレスに送信するデータグラム指向のソケットに固有です。ソケットオプションを有効にすると、ソケットを使用して&lt;em&gt;ブロードキャストデータグラム&lt;/em&gt;を送信できます。</target>
        </trans-unit>
        <trans-unit id="378a8b74d2abd11578002c1e83ca787b93b99699" translate="yes" xml:space="preserve">
          <source>The value of this socket option is a &lt;code&gt;Boolean&lt;/code&gt; that represents whether the option is enabled or disabled. The socket option is specific to stream-oriented sockets using the TCP/IP protocol. TCP/IP uses an algorithm known as &lt;em&gt;The Nagle Algorithm&lt;/em&gt; to coalesce short segments and improve network efficiency.</source>
          <target state="translated">このソケットオプションの値は、オプションが有効か無効かを表す &lt;code&gt;Boolean&lt;/code&gt; です。ソケットオプションは、TCP / IPプロトコルを使用するストリーム指向のソケットに固有です。TCP / IPは、&lt;em&gt;Nagleアルゴリズム&lt;/em&gt;と呼ばれるアルゴリズムを使用して、短いセグメントを結合し、ネットワーク効率を向上させます。</target>
        </trans-unit>
        <trans-unit id="f111eca53be5c4a77e641dab1abf0b374fefe83a" translate="yes" xml:space="preserve">
          <source>The value of this socket option is a &lt;code&gt;Boolean&lt;/code&gt; that represents whether the option is enabled or disabled. When the &lt;code&gt;SO_KEEPALIVE&lt;/code&gt; option is enabled the operating system may use a &lt;em&gt;keep-alive&lt;/em&gt; mechanism to periodically probe the other end of a connection when the connection is otherwise idle. The exact semantics of the keep alive mechanism is system dependent and therefore unspecified.</source>
          <target state="translated">このソケットオプションの値は、オプションが有効か無効かを表す &lt;code&gt;Boolean&lt;/code&gt; です。とき &lt;code&gt;SO_KEEPALIVE&lt;/code&gt; オプションが有効になっているオペレーティングシステムが使用可能&lt;em&gt;キープアライブ&lt;/em&gt;接続がアイドル状態のとき、定期的な接続のもう一方の端をプローブするメカニズムを。キープアライブメカニズムの正確なセマンティクスはシステムに依存するため、指定されていません。</target>
        </trans-unit>
        <trans-unit id="7ff8b71c0be896401e7f25bf544169440736d7ac" translate="yes" xml:space="preserve">
          <source>The value of this socket option is an &lt;code&gt;Integer&lt;/code&gt; in the range &lt;code&gt;0 &amp;lt;= value &amp;lt;= 255&lt;/code&gt;. It is used to control the scope of multicast datagrams sent by the datagram-oriented socket. In the case of an &lt;a href=&quot;standardprotocolfamily#INET&quot;&gt;&lt;code&gt;IPv4&lt;/code&gt;&lt;/a&gt; socket the option is the time-to-live (TTL) on multicast datagrams sent by the socket. Datagrams with a TTL of zero are not transmitted on the network but may be delivered locally. In the case of an &lt;a href=&quot;standardprotocolfamily#INET6&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt;&lt;/a&gt; socket the option is the &lt;em&gt;hop limit&lt;/em&gt; which is number of &lt;em&gt;hops&lt;/em&gt; that the datagram can pass through before expiring on the network. For IPv6 sockets it is system dependent whether the option also sets the &lt;em&gt;time-to-live&lt;/em&gt; on multicast datagrams sent to IPv4 addresses.</source>
          <target state="translated">このソケットオプションの値は、 &lt;code&gt;0 &amp;lt;= value &amp;lt;= 255&lt;/code&gt; 範囲の &lt;code&gt;Integer&lt;/code&gt; です。これは、データグラム指向のソケットによって送信されるマルチキャストデータグラムのスコープを制御するために使用されます。以下の場合には&lt;a href=&quot;standardprotocolfamily#INET&quot;&gt; &lt;code&gt;IPv4&lt;/code&gt; の&lt;/a&gt;オプションは、ソケットによって送信されたマルチキャストデータグラム上の生存時間（TTL）であるソケット。 TTLがゼロのデータグラムはネットワーク上で送信されませんが、ローカルに配信される場合があります。以下の場合には&lt;a href=&quot;standardprotocolfamily#INET6&quot;&gt; &lt;code&gt;IPv6&lt;/code&gt; の&lt;/a&gt;オプションがあるソケット&lt;em&gt;ホップリミット&lt;/em&gt;の数である&lt;em&gt;ホップ&lt;/em&gt;データグラムがネットワーク上の期限切れの前を通過することができます。 IPv6ソケットの場合、オプションがIPv4アドレスに送信されるマルチキャストデータグラムの存続&lt;em&gt;時間&lt;/em&gt;も設定するかどうかは、システムに依存します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c0aaeb374d470c89144bd7d473179b01228a3931" translate="yes" xml:space="preserve">
          <source>The value of this socket option is an &lt;code&gt;Integer&lt;/code&gt; representing the value of the ToS octet in IP packets sent by sockets to an &lt;a href=&quot;standardprotocolfamily#INET&quot;&gt;&lt;code&gt;IPv4&lt;/code&gt;&lt;/a&gt; socket. The interpretation of the ToS octet is network specific and is not defined by this class. Further information on the ToS octet can be found in &lt;a href=&quot;http://www.ietf.org/rfc/rfc1349.txt&quot;&gt;RFC 1349&lt;/a&gt; and &lt;a href=&quot;http://www.ietf.org/rfc/rfc2474.txt&quot;&gt;RFC 2474&lt;/a&gt;. The value of the socket option is a &lt;em&gt;hint&lt;/em&gt;. An implementation may ignore the value, or ignore specific values.</source>
          <target state="translated">このソケットオプションの値は、ソケットから&lt;a href=&quot;standardprotocolfamily#INET&quot;&gt; &lt;code&gt;IPv4&lt;/code&gt; &lt;/a&gt;ソケットに送信されるIPパケットのToSオクテットの値を表す &lt;code&gt;Integer&lt;/code&gt; です。 ToSオクテットの解釈はネットワーク固有であり、このクラスでは定義されていません。 ToSオクテットの詳細については、&lt;a href=&quot;http://www.ietf.org/rfc/rfc1349.txt&quot;&gt;RFC 1349&lt;/a&gt;および&lt;a href=&quot;http://www.ietf.org/rfc/rfc2474.txt&quot;&gt;RFC 2474を参照してください&lt;/a&gt;。 socketオプションの値は&lt;em&gt;ヒント&lt;/em&gt;です。実装は値を無視するか、特定の値を無視します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f9f336d96465d1b5cce00d70fe23ba02abe6c752" translate="yes" xml:space="preserve">
          <source>The value of this socket option is an &lt;code&gt;Integer&lt;/code&gt; that controls the action taken when unsent data is queued on the socket and a method to close the socket is invoked. If the value of the socket option is zero or greater, then it represents a timeout value, in seconds, known as the &lt;em&gt;linger interval&lt;/em&gt;. The linger interval is the timeout for the &lt;code&gt;close&lt;/code&gt; method to block while the operating system attempts to transmit the unsent data or it decides that it is unable to transmit the data. If the value of the socket option is less than zero then the option is disabled. In that case the &lt;code&gt;close&lt;/code&gt; method does not wait until unsent data is transmitted; if possible the operating system will transmit any unsent data before the connection is closed.</source>
          <target state="translated">このソケットオプションの値は、未送信のデータがソケットにキューイングされ、ソケットを閉じるメソッドが呼び出されたときに実行されるアクションを制御する &lt;code&gt;Integer&lt;/code&gt; です。ソケットオプションの値がゼロ以上の場合、それは&lt;em&gt;linger interval&lt;/em&gt;と呼ばれる秒単位のタイムアウト値を表し&lt;em&gt;ます&lt;/em&gt;。リンガー間隔は、オペレーティングシステムが未送信のデータを送信しようとしたとき、またはデータを送信できないと判断したときに、 &lt;code&gt;close&lt;/code&gt; メソッドがブロックするためのタイムアウトです。ソケットオプションの値がゼロ未満の場合、オプションは無効になります。その場合、 &lt;code&gt;close&lt;/code&gt; メソッドは未送信のデータが送信されるまで待機しません。可能であれば、接続が閉じられる前に、オペレーティングシステムは未送信のデータを送信します。</target>
        </trans-unit>
        <trans-unit id="aa78f370acd97919109586e7fab1f967828d0cb4" translate="yes" xml:space="preserve">
          <source>The value of this socket option is an &lt;code&gt;Integer&lt;/code&gt; that is the size of the socket receive buffer in bytes. The socket receive buffer is an input buffer used by the networking implementation. It may need to be increased for high-volume connections or decreased to limit the possible backlog of incoming data. The value of the socket option is a &lt;em&gt;hint&lt;/em&gt; to the implementation to size the buffer and the actual size may differ.</source>
          <target state="translated">このソケットオプションの値は、バイト単位のソケット受信バッファのサイズである &lt;code&gt;Integer&lt;/code&gt; です。ソケット受信バッファーは、ネットワーク実装で使用される入力バッファーです。大量接続の場合は増やすか、着信データのバックログを制限するために減らす必要があります。ソケットオプションの値は、バッファのサイズを設定する実装への&lt;em&gt;ヒントで&lt;/em&gt;あり、実際のサイズは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="3964a21153626d6dca5ee91d3e140a157ee18420" translate="yes" xml:space="preserve">
          <source>The value of this socket option is an &lt;code&gt;Integer&lt;/code&gt; that is the size of the socket send buffer in bytes. The socket send buffer is an output buffer used by the networking implementation. It may need to be increased for high-volume connections. The value of the socket option is a &lt;em&gt;hint&lt;/em&gt; to the implementation to size the buffer and the actual size may differ. The socket option can be queried to retrieve the actual size.</source>
          <target state="translated">このソケットオプションの値は、バイト単位のソケット送信バッファのサイズである &lt;code&gt;Integer&lt;/code&gt; です。ソケット送信バッファーは、ネットワーキング実装で使用される出力バッファーです。大量接続の場合は、増やす必要がある場合があります。ソケットオプションの値は、バッファのサイズを設定する実装への&lt;em&gt;ヒントで&lt;/em&gt;あり、実際のサイズは異なる場合があります。ソケットオプションを照会して、実際のサイズを取得できます。</target>
        </trans-unit>
        <trans-unit id="19e29e94ffa50d1811c8c377fed262ac17b18615" translate="yes" xml:space="preserve">
          <source>The value of this type string is &lt;code&gt;jmx.attribute.change&lt;/code&gt;.</source>
          <target state="translated">このタイプの文字列の値は &lt;code&gt;jmx.attribute.change&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="eae86827f3a1e6e6b1a2cc87015f797db0fbc402" translate="yes" xml:space="preserve">
          <source>The value passed in is converted to a byte, which may lose information.</source>
          <target state="translated">渡された値はバイトに変換され、情報が失われる可能性があります。</target>
        </trans-unit>
        <trans-unit id="d5b9d68f8861a0f3a1d298ab379faa4e96b2ee1c" translate="yes" xml:space="preserve">
          <source>The value previously associated with the given name. Returns null if no value was previously associated with the name.</source>
          <target state="translated">指定した名前に以前に関連付けられていた値。以前に名前に関連付けられていた値がない場合は、nullを返します。</target>
        </trans-unit>
        <trans-unit id="193e10e740caf76fa19a1f3cbe75690884cfc899" translate="yes" xml:space="preserve">
          <source>The value property of an &lt;code&gt;Expression&lt;/code&gt; is set to a unique private (non-&lt;code&gt;null&lt;/code&gt;) value by default and this value is used as an internal indication that the method has not yet been called. A return value of &lt;code&gt;null&lt;/code&gt; replaces this default value in the same way that any other value would, ensuring that expressions are never evaluated more than once.</source>
          <target state="translated">&lt;code&gt;Expression&lt;/code&gt; のvalueプロパティは、デフォルトで一意の非 &lt;code&gt;null&lt;/code&gt; （非null）値に設定され、この値はメソッドがまだ呼び出されていないことを示す内部的な指標として使用されます。 &lt;code&gt;null&lt;/code&gt; の戻り値は、他の値と同じ方法でこのデフォルト値を置き換え、式が2回以上評価されないようにします。</target>
        </trans-unit>
        <trans-unit id="56062e980fc25005712c46d7b85ed054b65b96fe" translate="yes" xml:space="preserve">
          <source>The value range represented by the bubble in this example is the &lt;em&gt;visible amount&lt;/em&gt;. The horizontal scroll bar in this example could be created with code like the following:</source>
          <target state="translated">この例でバブルで表される値の範囲は、&lt;em&gt;表示される量&lt;/em&gt;です。この例の水平スクロールバーは、次のようなコードで作成できます。</target>
        </trans-unit>
        <trans-unit id="31f5093977dcc1cdd4697dab36dd10971db541b7" translate="yes" xml:space="preserve">
          <source>The value represented by the string is larger than the largest unsigned &lt;code&gt;int&lt;/code&gt;, 2&lt;sup&gt;32&lt;/sup&gt;-1.</source>
          <target state="translated">文字列で表される値は、最大の符号なし &lt;code&gt;int&lt;/code&gt; 2 &lt;sup&gt;32&lt;/sup&gt; -1 より大きいです。</target>
        </trans-unit>
        <trans-unit id="d6f78b1ec9763b41e7fb9ba7f86d098e20d6f9a2" translate="yes" xml:space="preserve">
          <source>The value represented by the string is larger than the largest unsigned &lt;code&gt;long&lt;/code&gt;, 2&lt;sup&gt;64&lt;/sup&gt;-1.</source>
          <target state="translated">文字列で表される値は、最大のunsigned &lt;code&gt;long&lt;/code&gt; である2 &lt;sup&gt;64&lt;/sup&gt; -1 より大きいです。</target>
        </trans-unit>
        <trans-unit id="7ec8c505fdb637aca2b4b00c43e241fdc3c70c56" translate="yes" xml:space="preserve">
          <source>The value represented by the string is not a value of type &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">文字列で表される値は、 &lt;code&gt;byte&lt;/code&gt; 型の値ではありません。</target>
        </trans-unit>
        <trans-unit id="2dd516c49699030c6a86876fa65104bf2bacc9c3" translate="yes" xml:space="preserve">
          <source>The value represented by the string is not a value of type &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">文字列で表される値は、 &lt;code&gt;int&lt;/code&gt; 型の値ではありません。</target>
        </trans-unit>
        <trans-unit id="080e00aed4fe6d75b4b9f01ff131e35f0a26ccd4" translate="yes" xml:space="preserve">
          <source>The value represented by the string is not a value of type &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">文字列で表される値は、 &lt;code&gt;long&lt;/code&gt; 型の値ではありません。</target>
        </trans-unit>
        <trans-unit id="dd537294351459ff10862aaa7bdcdb05b16e77a1" translate="yes" xml:space="preserve">
          <source>The value represented by the string is not a value of type &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">文字列で表される値は、 &lt;code&gt;short&lt;/code&gt; 型の値ではありません。</target>
        </trans-unit>
        <trans-unit id="5e06dbc0376f2c39b3d860c99781e7379ae01651" translate="yes" xml:space="preserve">
          <source>The value represents changes to &lt;code&gt;JList&lt;/code&gt; model.</source>
          <target state="translated">この値は、 &lt;code&gt;JList&lt;/code&gt; モデルへの変更を表します。</target>
        </trans-unit>
        <trans-unit id="0f12330d9fb9c44cda30304a94bf0247a7def212" translate="yes" xml:space="preserve">
          <source>The value represents if the old border is painted.</source>
          <target state="translated">この値は、古い境界線が塗りつぶされているかどうかを表します。</target>
        </trans-unit>
        <trans-unit id="7461020eda03ffb8a4938984caf8473bc3d329d5" translate="yes" xml:space="preserve">
          <source>The value represents if the width of children should be synchronized.</source>
          <target state="translated">この値は、子供の幅を同期させるかどうかを表します。</target>
        </trans-unit>
        <trans-unit id="5e116924436bf7c8d4007129887075eebdca3586" translate="yes" xml:space="preserve">
          <source>The value returned by the procedure or function</source>
          <target state="translated">プロシージャまたは関数が返す値</target>
        </trans-unit>
        <trans-unit id="a4624000eb901432b19900a8426561fff4b2b375" translate="yes" xml:space="preserve">
          <source>The value returned by the procedure. The rules for converting the scripting variable returned by the script method to a Java Object are implementation-specific.</source>
          <target state="translated">プロシージャが返す値。scriptメソッドが返すスクリプト変数をJavaオブジェクトに変換するルールは、実装固有のものです。</target>
        </trans-unit>
        <trans-unit id="67e56c1928fd73288739bc1a971b0ef8da9c3a99" translate="yes" xml:space="preserve">
          <source>The value returned by the script execution, if any. Should return &lt;code&gt;null&lt;/code&gt; if no value is returned by the script execution.</source>
          <target state="translated">スクリプトの実行によって返される値（ある場合）。スクリプトの実行によって値が返されない場合は、 &lt;code&gt;null&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="110307d8995a99466a52bbbf0e1fd931923962c2" translate="yes" xml:space="preserve">
          <source>The value returned by the script.</source>
          <target state="translated">スクリプトが返す値。</target>
        </trans-unit>
        <trans-unit id="232a4c3688c018a1f715de261ad24f1b8ccdde7a" translate="yes" xml:space="preserve">
          <source>The value returned by this method is equal to the value that would be returned by &lt;code&gt;Arrays.asList(a).hashCode()&lt;/code&gt;, unless &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, in which case &lt;code&gt;0&lt;/code&gt; is returned.</source>
          <target state="translated">このメソッドによって返される値は、によって返される値に等しい &lt;code&gt;Arrays.asList(a).hashCode()&lt;/code&gt; しない限り、ある &lt;code&gt;null&lt;/code&gt; その場合には、 &lt;code&gt;0&lt;/code&gt; が返されます。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4830ed24165ee75d854121d512ff4c6287d16823" translate="yes" xml:space="preserve">
          <source>The value returned by this method is equal to the value that would be returned by &lt;code&gt;Arrays.asList(a).toString()&lt;/code&gt;, unless &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, in which case &lt;code&gt;&quot;null&quot;&lt;/code&gt; is returned.</source>
          <target state="translated">このメソッドによって返される値は、 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合を除いて、 &lt;code&gt;Arrays.asList(a).toString()&lt;/code&gt; によって返される値と同じです。この場合、 &lt;code&gt;&quot;null&quot;&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="232dc690dfd39932093a041bd1c51386276914f0" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode()&quot;&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は起動することによって得られるであろう同じ値である&lt;a href=&quot;list#hashCode()&quot;&gt; &lt;code&gt;hashCode&lt;/code&gt; &lt;/a&gt;上のメソッド&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;の配列を含む&lt;a href=&quot;../lang/boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;の要素を表すインスタンスと同じ順序です。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dcb0889a89cf753f196944afc79bf5930394212e" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode()&quot;&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/byte&quot;&gt;&lt;code&gt;Byte&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す一連の&lt;a href=&quot;../lang/byte&quot;&gt; &lt;code&gt;Byte&lt;/code&gt; &lt;/a&gt;インスタンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;list#hashCode()&quot;&gt; &lt;code&gt;hashCode&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="0c247535daa5438a006bd4fe6cb6a927686d1475" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode()&quot;&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は起動することによって得られるであろう同じ値である&lt;a href=&quot;list#hashCode()&quot;&gt; &lt;code&gt;hashCode&lt;/code&gt; &lt;/a&gt;上のメソッド&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;の配列を含む&lt;a href=&quot;../lang/character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; &lt;/a&gt;の要素を表すインスタンスと同じ順序です。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f70659dc298bb8fc9204c5ab38fee74c2fad99a" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode()&quot;&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/double&quot;&gt;&lt;code&gt;Double&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す一連の&lt;a href=&quot;../lang/double&quot;&gt; &lt;code&gt;Double&lt;/code&gt; &lt;/a&gt;インスタンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;list#hashCode()&quot;&gt; &lt;code&gt;hashCode&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="d72a0c9ed70e30930effbed3603918ae9c5b9c7c" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode()&quot;&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は起動することによって得られるであろう同じ値である&lt;a href=&quot;list#hashCode()&quot;&gt; &lt;code&gt;hashCode&lt;/code&gt; &lt;/a&gt;上のメソッド&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;の配列を含む&lt;a href=&quot;../lang/float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt;の要素を表すインスタンスと同じ順序です。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89e5930314a96e3dbf717f46716dfe509ba77c35" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode()&quot;&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す&lt;a href=&quot;../lang/integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt;インスタンスのシーケンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;list#hashCode()&quot;&gt; &lt;code&gt;hashCode&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="a8879341be0438371ec7102d7cde11423f91f127" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode()&quot;&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/long&quot;&gt;&lt;code&gt;Long&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す&lt;a href=&quot;../lang/long&quot;&gt; &lt;code&gt;Long&lt;/code&gt; &lt;/a&gt;インスタンスのシーケンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;list#hashCode()&quot;&gt; &lt;code&gt;hashCode&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="2baaebdb48a83638b0d0d8218eefc93c58d95bff" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode()&quot;&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/short&quot;&gt;&lt;code&gt;Short&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す&lt;a href=&quot;../lang/short&quot;&gt; &lt;code&gt;Short&lt;/code&gt; &lt;/a&gt;インスタンスのシーケンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;list#hashCode()&quot;&gt; &lt;code&gt;hashCode&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="497f48c5d27b5d369d6b9d0a0e986992c79396f5" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は起動することによって得られるであろう同じ値である&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;上のメソッド&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;の配列を含む&lt;a href=&quot;../lang/boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;の要素を表すインスタンスと同じ順序です。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d9dbfc6d6211692de527549b2fcd5858a66bb72" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/byte&quot;&gt;&lt;code&gt;Byte&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す&lt;a href=&quot;../lang/byte&quot;&gt; &lt;code&gt;Byte&lt;/code&gt; &lt;/a&gt;インスタンスのシーケンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="61e555fbf6ad7db5b6071c0b6b9e1c1677c17310" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す&lt;a href=&quot;../lang/character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; &lt;/a&gt;インスタンスのシーケンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="202f92c2c1f2690fa3631974cac693f1c7bc62a6" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/double&quot;&gt;&lt;code&gt;Double&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す&lt;a href=&quot;../lang/double&quot;&gt; &lt;code&gt;Double&lt;/code&gt; &lt;/a&gt;インスタンスのシーケンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="7c915104330624d5c65626efa3aeedf957b1ba02" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す一連の&lt;a href=&quot;../lang/float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt;インスタンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="d6086d722cb980f02f1d9be10f9049cb0b95e719" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す一連の&lt;a href=&quot;../lang/integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt;インスタンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="05c957e2b334ef39fa0169c9d7f5a824127ab492" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/long&quot;&gt;&lt;code&gt;Long&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す&lt;a href=&quot;../lang/long&quot;&gt; &lt;code&gt;Long&lt;/code&gt; &lt;/a&gt;インスタンスのシーケンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="630057fa5af0e23dd224c2a30f87a15dcf29fe3f" translate="yes" xml:space="preserve">
          <source>The value returned by this method is the same value that would be obtained by invoking the &lt;a href=&quot;list#hashCode--&quot;&gt;&lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method on a &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing a sequence of &lt;a href=&quot;../lang/short&quot;&gt;&lt;code&gt;Short&lt;/code&gt;&lt;/a&gt; instances representing the elements of &lt;code&gt;a&lt;/code&gt; in the same order. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method returns 0.</source>
          <target state="translated">このメソッドによって返される値は、同じ順序で &lt;code&gt;a&lt;/code&gt; の要素を表す&lt;a href=&quot;../lang/short&quot;&gt; &lt;code&gt;Short&lt;/code&gt; &lt;/a&gt;インスタンスのシーケンスを含む&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;list#hashCode--&quot;&gt; &lt;code&gt;&lt;code&gt;hashCode&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得される値と同じです。 &lt;code&gt;a&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは0を返します。</target>
        </trans-unit>
        <trans-unit id="b3446146db6ab390bdd9c3f968d4d845281bdb3a" translate="yes" xml:space="preserve">
          <source>The value returned from the execution of the script.</source>
          <target state="translated">スクリプトの実行から返される値。</target>
        </trans-unit>
        <trans-unit id="9e9bb57019f994d2e6cdaaaf2694c5939552e475" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;code&gt;count - pos&lt;/code&gt;, which is the number of bytes remaining to be read from the input buffer.</source>
          <target state="translated">返される値は &lt;code&gt;count - pos&lt;/code&gt; 。これは、入力バッファーから読み取られる残りのバイト数です。</target>
        </trans-unit>
        <trans-unit id="55349d45b1798417fa58a2e4c3952f10780b9ff0" translate="yes" xml:space="preserve">
          <source>The value returned is &lt;code&gt;count&amp;nbsp;- pos&lt;/code&gt;, which is the number of bytes remaining to be read from the input buffer.</source>
          <target state="translated">返される値は &lt;code&gt;count&amp;nbsp;- pos&lt;/code&gt; 。これは、入力バッファーから読み取られる残りのバイト数です。</target>
        </trans-unit>
        <trans-unit id="2036e23bfa2dc5e8d0a1aee47cc9e89872df1136" translate="yes" xml:space="preserve">
          <source>The value returned is a two-dimensional array of strings of size &lt;em&gt;n&lt;/em&gt; by &lt;em&gt;m&lt;/em&gt;, where &lt;em&gt;m&lt;/em&gt; is at least 5. Each of the &lt;em&gt;n&lt;/em&gt; rows is an entry containing the localized names for a single &lt;code&gt;TimeZone&lt;/code&gt;. Each such row contains (with &lt;code&gt;i&lt;/code&gt; ranging from 0..&lt;em&gt;n&lt;/em&gt;-1):</source>
          <target state="translated">返される値は、サイズ&lt;em&gt;n&lt;/em&gt; &amp;times; &lt;em&gt;mの&lt;/em&gt;文字列の2次元配列です。ここで、&lt;em&gt;m&lt;/em&gt;は少なくとも5です&lt;em&gt;。n&lt;/em&gt;行のそれぞれは、単一の &lt;code&gt;TimeZone&lt;/code&gt; のローカライズされた名前を含むエントリです。このような各行には、以下が含まれます（ &lt;code&gt;i&lt;/code&gt; の範囲は0 .. &lt;em&gt;n&lt;/em&gt; -1です）：</target>
        </trans-unit>
        <trans-unit id="03c9efb8c5db2500c4c240fcd8666dee938e1da7" translate="yes" xml:space="preserve">
          <source>The value returned is only an estimate because the number of thread groups may change dynamically while this method traverses internal data structures. This method is intended primarily for debugging and monitoring purposes.</source>
          <target state="translated">このメソッドが内部データ構造を横断している間にスレッドグループの数が動的に変化する可能性があるため、返される値は推定値にすぎません。このメソッドは、主にデバッグおよびモニタリングを目的としています。</target>
        </trans-unit>
        <trans-unit id="852cc356c26f432ab42fcc161a95ca76132880ee" translate="yes" xml:space="preserve">
          <source>The value returned is only an estimate because the number of threads may change dynamically while this method traverses internal data structures, and might be affected by the presence of certain system threads. This method is intended primarily for debugging and monitoring purposes.</source>
          <target state="translated">このメソッドが内部データ構造を通過している間にスレッド数が動的に変化する可能性があり、特定のシステム・スレッドの存在によって影響を受ける可能性があるため、返される値は推定値に過ぎません。このメソッドは、主にデバッグとモニタリングを目的としています。</target>
        </trans-unit>
        <trans-unit id="f7d0dcb8fef06003ce60cc41e24ee714539bc408" translate="yes" xml:space="preserve">
          <source>The value specified for the client info property was not valid.</source>
          <target state="translated">クライアント情報プロパティに指定された値が有効ではありませんでした。</target>
        </trans-unit>
        <trans-unit id="f34120cadaae7df3f69e5f2c0ac389c7948d108b" translate="yes" xml:space="preserve">
          <source>The value specified for the client info property was too large.</source>
          <target state="translated">クライアント情報プロパティに指定した値が大きすぎました。</target>
        </trans-unit>
        <trans-unit id="b84a0253c5b3c6f11eea15293b58032f1c52ac87" translate="yes" xml:space="preserve">
          <source>The value specified is not valid for the attribute.</source>
          <target state="translated">指定された値は、その属性では有効ではありません。</target>
        </trans-unit>
        <trans-unit id="14c8a2bbd1f24dad039061a5555c60e31d69ae69" translate="yes" xml:space="preserve">
          <source>The value that indicates whether the annotated class can be used as a container for other Swing components or not.</source>
          <target state="translated">アノテーションされたクラスを他のSwingコンポーネントのコンテナとして使用できるかどうかを示す値。</target>
        </trans-unit>
        <trans-unit id="7ae014891d799c92b6efbd397ed8cc4ce73acb48" translate="yes" xml:space="preserve">
          <source>The value that indicates whether the annotated property can be a &lt;a href=&quot;propertydescriptor#isBound()&quot;&gt;&lt;code&gt;bound&lt;/code&gt;&lt;/a&gt; property or not.</source>
          <target state="translated">注釈付きプロパティを&lt;a href=&quot;propertydescriptor#isBound()&quot;&gt; &lt;code&gt;bound&lt;/code&gt; &lt;/a&gt;プロパティにすることができるかどうかを示す値。</target>
        </trans-unit>
        <trans-unit id="24115412120085dcaf4f07f5548ba65079e68f69" translate="yes" xml:space="preserve">
          <source>The value that indicates whether the annotated property can be a &lt;a href=&quot;propertydescriptor#isBound()&quot;&gt;&lt;code&gt;bound&lt;/code&gt;&lt;/a&gt; property or not. This value applies only to the beans that have the &lt;a href=&quot;propertychangelistener&quot;&gt;&lt;code&gt;propertyChange&lt;/code&gt;&lt;/a&gt; event set.</source>
          <target state="translated">注釈付きプロパティを&lt;a href=&quot;propertydescriptor#isBound()&quot;&gt; &lt;code&gt;bound&lt;/code&gt; &lt;/a&gt;プロパティにすることができるかどうかを示す値。この値は、&lt;a href=&quot;propertychangelistener&quot;&gt; &lt;code&gt;propertyChange&lt;/code&gt; &lt;/a&gt;イベントが設定されているBeanにのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="bfc34c213af513bebf9467c68fef45126a00b778" translate="yes" xml:space="preserve">
          <source>The value that indicates whether the annotated property is a &lt;a href=&quot;featuredescriptor#isHidden()&quot;&gt;&lt;code&gt;hidden&lt;/code&gt;&lt;/a&gt; property or not.</source>
          <target state="translated">注釈付きプロパティが&lt;a href=&quot;featuredescriptor#isHidden()&quot;&gt; &lt;code&gt;hidden&lt;/code&gt; &lt;/a&gt;プロパティであるかどうかを示す値。</target>
        </trans-unit>
        <trans-unit id="aa6846c638215ea81b5c65296d28f66917b392d1" translate="yes" xml:space="preserve">
          <source>The value that indicates whether the annotated property is a &lt;a href=&quot;featuredescriptor#isPreferred()&quot;&gt;&lt;code&gt;preferred&lt;/code&gt;&lt;/a&gt; property or not.</source>
          <target state="translated">注釈付きプロパティが&lt;a href=&quot;featuredescriptor#isPreferred()&quot;&gt; &lt;code&gt;preferred&lt;/code&gt; &lt;/a&gt;プロパティであるかどうかを示す値。</target>
        </trans-unit>
        <trans-unit id="12269a6d0972fe1a940494817904c29acecac4e9" translate="yes" xml:space="preserve">
          <source>The value that indicates whether the annotated property is a required property or not.</source>
          <target state="translated">注釈付きプロパティが必須プロパティであるかどうかを示す値。</target>
        </trans-unit>
        <trans-unit id="a376114d4264e56522dce880ed537c8755a33a20" translate="yes" xml:space="preserve">
          <source>The value that indicates whether the annotated property is an &lt;a href=&quot;featuredescriptor#isExpert()&quot;&gt;&lt;code&gt;expert&lt;/code&gt;&lt;/a&gt; property or not.</source>
          <target state="translated">注釈付きプロパティが&lt;a href=&quot;featuredescriptor#isExpert()&quot;&gt; &lt;code&gt;expert&lt;/code&gt; &lt;/a&gt;プロパティであるかどうかを示す値。</target>
        </trans-unit>
        <trans-unit id="35079b9749d7066ba0ecc06aa3a23c3be2022203" translate="yes" xml:space="preserve">
          <source>The value that indicates whether the corresponding component is repainted after the annotated property got changed or not.</source>
          <target state="translated">アノテーションされたプロパティが変更された後、対応するコンポーネントが再塗装されるかどうかを示す値。</target>
        </trans-unit>
        <trans-unit id="500cac38ba0a7780ed53053b9886791f008d3156" translate="yes" xml:space="preserve">
          <source>The value will be printed as per the normal format of an integer value. Only negative numbers will be signed. No padding will be added.</source>
          <target state="translated">値は、整数値の通常のフォーマットに従って印刷されます。負の数値だけが符号付きで表示されます。パディングは追加されません。</target>
        </trans-unit>
        <trans-unit id="077fed1deaf9df7e8c41edbc6bfae89dbe78a3a1" translate="yes" xml:space="preserve">
          <source>The value will be the value as reported to applications, appropriately normalized and with entity and character references expanded.</source>
          <target state="translated">値は、アプリケーションに報告されている値で、適切に正規化され、実体と文字の参照が展開されたものになります。</target>
        </trans-unit>
        <trans-unit id="9e6acd3ee9804ea2240ae60fd89170c2a1ca81d0" translate="yes" xml:space="preserve">
          <source>The value will be zero-padded on the left. If the size of the value means that it cannot be printed within the width then an exception is thrown. If the value of the field is negative then an exception is thrown during formatting.</source>
          <target state="translated">値は左にゼロパッドされます。値のサイズが幅内に印刷できない場合は例外が発生します。フィールドの値が負の値の場合は、書式設定中に例外が発生します。</target>
        </trans-unit>
        <trans-unit id="96d7319e3b7d2f8db393dc70b5fe04dbc970989d" translate="yes" xml:space="preserve">
          <source>The values &lt;code&gt;-1&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; are associated with two earlier eras, Meiji and Taisho, respectively.</source>
          <target state="translated">値 &lt;code&gt;-1&lt;/code&gt; と &lt;code&gt;0&lt;/code&gt; は、それぞれ明治と大正の2つの初期の時代に関連付けられています。</target>
        </trans-unit>
        <trans-unit id="031c945b382d2bfa8a375b39b12c9b937e2dbd2c" translate="yes" xml:space="preserve">
          <source>The values are equal.</source>
          <target state="translated">価値観が一致しています。</target>
        </trans-unit>
        <trans-unit id="4c207ea95e8a56f3038b875f5e458580dce26ff8" translate="yes" xml:space="preserve">
          <source>The values are key/value pairs of two types. The first type of pairs consists of those whose keys are reserved and defined in this specification or by individual implementations. The values in the pairs with reserved keys have specified meanings.</source>
          <target state="translated">値は、2 つのタイプの鍵と値のペアである。最初のタイプのペアは、キーが予約されており、本仕様または個々の実装で定義されているものである。予約されたキーを持つペアの値は、指定された意味を持つ。</target>
        </trans-unit>
        <trans-unit id="a36e9ac0d41a47dcc5adf02d33d70256195d6bc3" translate="yes" xml:space="preserve">
          <source>The values are numbered following the ISO-8601 standard, from 1 (January) to 12 (December).</source>
          <target state="translated">1(1月)から12(12月)まで、ISO-8601規格に準じて数値に番号を付けています。</target>
        </trans-unit>
        <trans-unit id="4fbf2c5d52494af17a1c11cea5070baeda03267c" translate="yes" xml:space="preserve">
          <source>The values are numbered following the ISO-8601 standard, from 1 (Monday) to 7 (Sunday). See &lt;a href=&quot;temporal/weekfields#dayOfWeek()&quot;&gt;&lt;code&gt;WeekFields.dayOfWeek()&lt;/code&gt;&lt;/a&gt; for localized week-numbering.</source>
          <target state="translated">値は、ISO-8601標準に従って、1（月曜日）から7（日曜日）まで番号が付けられています。ローカライズされた週番号については、&lt;a href=&quot;temporal/weekfields#dayOfWeek()&quot;&gt; &lt;code&gt;WeekFields.dayOfWeek()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2f7227c6c87280051d32783be85f72f98db78fec" translate="yes" xml:space="preserve">
          <source>The values are numbered following the ISO-8601 standard, from 1 (Monday) to 7 (Sunday). See &lt;a href=&quot;temporal/weekfields#dayOfWeek--&quot;&gt;&lt;code&gt;WeekFields.dayOfWeek()&lt;/code&gt;&lt;/a&gt; for localized week-numbering.</source>
          <target state="translated">値には、ISO-8601規格に従って1（月曜日）から7（日曜日）までの番号が付けられています。ローカライズされた週番号については、&lt;a href=&quot;temporal/weekfields#dayOfWeek--&quot;&gt; &lt;code&gt;WeekFields.dayOfWeek()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4964f5f7d03897a69f31da6fe78d8fc1cf06ae6c" translate="yes" xml:space="preserve">
          <source>The values are only read out of UIManager once, and then cached. If you need to read the values again (for example, if the UI is being reloaded), then discard this NimbusStyle and read a new one from NimbusLookAndFeel using NimbusLookAndFeel.getStyle.</source>
          <target state="translated">値はUIManagerから一度だけ読み出され、その後キャッシュされます。値を再度読み込む必要がある場合(例えばUIがリロードされている場合など)は、このNimbusStyleを破棄し、NimbusLookAndFeel.getStyleを使用してNimbusLookAndFeelから新しい値を読み込みます。</target>
        </trans-unit>
        <trans-unit id="33b7873b8936786df23727b9369a432b05e1d503" translate="yes" xml:space="preserve">
          <source>The values for &lt;code&gt;WEIGHT&lt;/code&gt;, &lt;code&gt;WIDTH&lt;/code&gt;, and &lt;code&gt;POSTURE&lt;/code&gt; are interpolated by the system, which can select the 'nearest available' font or use other techniques to approximate the user's request.</source>
          <target state="translated">&lt;code&gt;WEIGHT&lt;/code&gt; 、 &lt;code&gt;WIDTH&lt;/code&gt; 、および &lt;code&gt;POSTURE&lt;/code&gt; の値は、システムによって補間されます。システムは、「最も近い」フォントを選択するか、他の手法を使用してユーザーの要求を概算できます。</target>
        </trans-unit>
        <trans-unit id="103d4a4344917ad71ffdead36a1faff6de82ef17" translate="yes" xml:space="preserve">
          <source>The values for an attribute are immutable, or must not be mutated by clients or storage. They are always passed by reference, and not cloned.</source>
          <target state="translated">属性の値は不変であり、クライアントやストレージによって変異されてはいけません。これらの値は常に参照によって渡され、クローン化されることはありません。</target>
        </trans-unit>
        <trans-unit id="6e249ae9bc2f78685ef11b72e309449abc9a2d7e" translate="yes" xml:space="preserve">
          <source>The values for these keys are the Strings returned by &lt;code&gt;getEngineName&lt;/code&gt;, &lt;code&gt;getEngineVersion&lt;/code&gt;, &lt;code&gt;getLanguageName&lt;/code&gt;, &lt;code&gt;getLanguageVersion&lt;/code&gt; for the first four keys respectively. For NAME, one of the Strings returned by &lt;code&gt;getNames&lt;/code&gt; is returned.</source>
          <target state="translated">これらのキーの値は、最初の4つのキーそれぞれに対して &lt;code&gt;getEngineName&lt;/code&gt; 、 &lt;code&gt;getEngineVersion&lt;/code&gt; 、 &lt;code&gt;getLanguageName&lt;/code&gt; 、 &lt;code&gt;getLanguageVersion&lt;/code&gt; によって返される文字列です。NAMEの場合、 &lt;code&gt;getNames&lt;/code&gt; によって返される文字列の 1つが返されます。</target>
        </trans-unit>
        <trans-unit id="2f9d10cc6e037fca6d3a56f31579dd60f8183de2" translate="yes" xml:space="preserve">
          <source>The values of &lt;code&gt;nodeName&lt;/code&gt;, &lt;code&gt;nodeValue&lt;/code&gt;, and &lt;code&gt;attributes&lt;/code&gt; vary according to the node type as follows:</source>
          <target state="translated">&lt;code&gt;nodeName&lt;/code&gt; 、 &lt;code&gt;nodeValue&lt;/code&gt; 、および &lt;code&gt;attributes&lt;/code&gt; の値は、ノードタイプによって次のように異なります。</target>
        </trans-unit>
        <trans-unit id="2a6a30969ed7a3364bae7b1eb735da94f1e68e29" translate="yes" xml:space="preserve">
          <source>The values of attributes must always be immutable.</source>
          <target state="translated">属性の値は常に不変でなければなりません。</target>
        </trans-unit>
        <trans-unit id="ed1518f76cd5c7850d1ed62e39ed9fbf6f653dda" translate="yes" xml:space="preserve">
          <source>The values of cipherSuites, protocols, cryptographic algorithm constraints, endpoint identification algorithm, server names and server name matchers are set to &lt;code&gt;null&lt;/code&gt;, useCipherSuitesOrder, wantClientAuth and needClientAuth are set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">cipherSuites、プロトコル、暗号化アルゴリズム制約、エンドポイント識別アルゴリズム、サーバー名、サーバー名マッチャーの値は &lt;code&gt;null&lt;/code&gt; に設定され、useCipherSuitesOrder、wantClientAuth、およびneedClientAuthは &lt;code&gt;false&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="c8ffb3bbf31cf82ee6ccc1322bcc6cb436298fdc" translate="yes" xml:space="preserve">
          <source>The values of cipherSuites, protocols, cryptographic algorithm constraints, endpoint identification algorithm, server names and server name matchers are set to &lt;code&gt;null&lt;/code&gt;; useCipherSuitesOrder, wantClientAuth and needClientAuth are set to &lt;code&gt;false&lt;/code&gt;; enableRetransmissions is set to &lt;code&gt;true&lt;/code&gt;; maximum network packet size is set to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">暗号スイート、プロトコル、暗号化アルゴリズムの制約、エンドポイント識別アルゴリズム、サーバー名、サーバー名マッチャーの値は &lt;code&gt;null&lt;/code&gt; に設定されます。useCipherSuitesOrder、wantClientAuth、needClientAuthは &lt;code&gt;false&lt;/code&gt; に設定されています。enableRetransmissionsは &lt;code&gt;true&lt;/code&gt; に設定されています; 最大ネットワークパケットサイズは &lt;code&gt;0&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="22711e927c4fe40a1d59a1b1a36e30db0d55cca6" translate="yes" xml:space="preserve">
          <source>The values of other calendar fields may be taken into account to determine a set of display names. For example, if this &lt;code&gt;Calendar&lt;/code&gt; is a lunisolar calendar system and the year value given by the &lt;a href=&quot;#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt; field has a leap month, this method would return month names containing the leap month name, and month names are mapped to their values specific for the year.</source>
          <target state="translated">表示名のセットを決定するために、他のカレンダーフィールドの値を考慮に入れることができます。たとえば、この &lt;code&gt;Calendar&lt;/code&gt; が太陰太陽暦システムであり、&lt;a href=&quot;#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt;フィールドで指定された年の値にうるう月がある場合、このメソッドはうるう月の名前を含む月の名前を返し、月の名前はその年に固有の値にマップされます。</target>
        </trans-unit>
        <trans-unit id="01f68b856f41bbdd549e5ce9ce35a7c9be9bec94" translate="yes" xml:space="preserve">
          <source>The values of other calendar fields may be taken into account to determine a set of display names. For example, if this &lt;code&gt;Calendar&lt;/code&gt; is a lunisolar calendar system and the year value given by the &lt;a href=&quot;calendar#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt; field has a leap month, this method would return month names containing the leap month name, and month names are mapped to their values specific for the year.</source>
          <target state="translated">他のカレンダーフィールドの値を考慮して、一連の表示名を決定できます。たとえば、この &lt;code&gt;Calendar&lt;/code&gt; が太陰暦のカレンダーシステムで、&lt;a href=&quot;calendar#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt;フィールドで指定された年の値にうるう月がある場合、このメソッドはうるう月の名前を含む月の名前を返し、月の名前はその年に固有の値にマップされます。</target>
        </trans-unit>
        <trans-unit id="9d66b37b53dfcf424a1c05306ea08bd465982359" translate="yes" xml:space="preserve">
          <source>The values of some &lt;code&gt;TextAttributes&lt;/code&gt; are not serializable, and therefore attempting to serialize an instance of &lt;code&gt;Font&lt;/code&gt; that has such values will not serialize them. This means a Font deserialized from such a stream will not compare equal to the original Font that contained the non-serializable attributes. This should very rarely pose a problem since these attributes are typically used only in special circumstances and are unlikely to be serialized.</source>
          <target state="translated">一部の &lt;code&gt;TextAttributes&lt;/code&gt; の値はシリアル化できないため、そのような値を持つ &lt;code&gt;Font&lt;/code&gt; のインスタンスをシリアル化しようとしても、それらはシリアル化されません。これは、そのようなストリームから逆シリアル化されたフォントが、シリアル化不可能な属性を含む元のフォントと比較されないことを意味します。これらの属性は通常、特別な状況でのみ使用され、シリアル化される可能性は低いため、これによって問題が発生することはめったにありません。</target>
        </trans-unit>
        <trans-unit id="465f58c72b3a6f0d702e1f81a258c44981222924" translate="yes" xml:space="preserve">
          <source>The values returned by this method become meaningful only when the difference between two such values, obtained within the same instance of a Java virtual machine, is computed.</source>
          <target state="translated">このメソッドによって返される値は、Java 仮想マシンの同じインスタンス内で取得された 2 つの値の差が計算された場合にのみ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="f0d19b69d59e11ca8f292d0de69a6446d6b6629e" translate="yes" xml:space="preserve">
          <source>The values that will be used to set the command's placeholder parameters are contained in the &lt;code&gt;RowSet&lt;/code&gt; object's &lt;code&gt;params&lt;/code&gt; field, which is a &lt;code&gt;Vector&lt;/code&gt; object. The &lt;code&gt;CachedRowSet&lt;/code&gt; class provides a set of setter methods for setting the elements in its &lt;code&gt;params&lt;/code&gt; field. The following code fragment demonstrates setting the two parameters in the query from the previous example.</source>
          <target state="translated">コマンドのプレースホルダーパラメーターを設定するために使用される値は、 &lt;code&gt;Vector&lt;/code&gt; オブジェクトである &lt;code&gt;RowSet&lt;/code&gt; オブジェクトの &lt;code&gt;params&lt;/code&gt; フィールドに含まれています。 &lt;code&gt;CachedRowSet&lt;/code&gt; クラスは、その中の要素を設定するためのセッターメソッドのセットを提供する &lt;code&gt;params&lt;/code&gt; フィールド。次のコードフラグメントは、前の例のクエリで2つのパラメーターを設定する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="079a4a19841585ed45b6bc0604118fa1b0d2a88a" translate="yes" xml:space="preserve">
          <source>The values used to index into the colormap are taken from the least significant &lt;em&gt;n&lt;/em&gt; bits of pixel representations where &lt;em&gt;n&lt;/em&gt; is based on the pixel size specified in the constructor. For pixel sizes smaller than 8 bits, &lt;em&gt;n&lt;/em&gt; is rounded up to a power of two (3 becomes 4 and 5,6,7 become 8). For pixel sizes between 8 and 16 bits, &lt;em&gt;n&lt;/em&gt; is equal to the pixel size. Pixel sizes larger than 16 bits are not supported by this class. Higher order bits beyond &lt;em&gt;n&lt;/em&gt; are ignored in pixel representations. Index values greater than or equal to the map size, but less than 2&lt;sup&gt;&lt;em&gt;n&lt;/em&gt;&lt;/sup&gt;, are undefined and return 0 for all color and alpha components.</source>
          <target state="translated">カラーマップへのインデックス付けに使用される値は、ピクセル表現の最下位&lt;em&gt;n&lt;/em&gt;ビットから取得されます&lt;em&gt;。n&lt;/em&gt;はコンストラクターで指定されたピクセルサイズに基づいています。 8ビットより小さいピクセルサイズの場合、&lt;em&gt;n&lt;/em&gt;は2の累乗に切り上げられます（3は4になり、5、6、7は8になります）。 8〜16ビットのピクセルサイズの場合、&lt;em&gt;n&lt;/em&gt;はピクセルサイズと同じです。 16ビットを超えるピクセルサイズは、このクラスではサポートされていません。&lt;em&gt;n&lt;/em&gt;を超える高次ビットは、ピクセル表現では無視されます。マップサイズ以上&lt;sup&gt;&lt;em&gt;2n&lt;/em&gt;&lt;/sup&gt;未満のインデックス値は未定義であり、すべてのカラーおよびアルファコンポーネントに対して0を返します。</target>
        </trans-unit>
        <trans-unit id="435a1cf9400bda5077ae76839f8ca846728da561" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;jrs&lt;/code&gt; now represents an instance of &lt;code&gt;JdbcRowSetImpl&lt;/code&gt; that is a thin wrapper around the &lt;code&gt;ResultSet&lt;/code&gt; object containing all the rows in the table &lt;code&gt;TITLES&lt;/code&gt; where the type of book is biography. At this point, operations called on &lt;code&gt;jrs&lt;/code&gt; will affect the rows in the result set, which is effectively a JavaBeans component.</source>
          <target state="translated">変数 &lt;code&gt;jrs&lt;/code&gt; は、本のタイプが伝記であるテーブル &lt;code&gt;TITLES&lt;/code&gt; のすべての行を含む &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトの薄いラッパーである &lt;code&gt;JdbcRowSetImpl&lt;/code&gt; のインスタンスを表すようになりました。この時点で、 &lt;code&gt;jrs&lt;/code&gt; で呼び出された操作は、結果セットの行に影響します。これは、事実上JavaBeansコンポーネントです。</target>
        </trans-unit>
        <trans-unit id="5cd18fd2ae18c7b303b9ff07577197ac1e8f395b" translate="yes" xml:space="preserve">
          <source>The variable arity parameter has a reifiable element type, which includes primitive types, &lt;code&gt;Object&lt;/code&gt;, and &lt;code&gt;String&lt;/code&gt;. (The unchecked warnings this annotation type suppresses already do not occur for a reifiable element type.)</source>
          <target state="translated">変数arityパラメーターには、プリミティブ型、 &lt;code&gt;Object&lt;/code&gt; 、および &lt;code&gt;String&lt;/code&gt; を含む、変更可能な要素型があります。（この注釈タイプが抑制する未チェックの警告は、reifiable要素タイプではすでに発生していません。）</target>
        </trans-unit>
        <trans-unit id="764870fc9e8aa42169b55363170e3518f28153a0" translate="yes" xml:space="preserve">
          <source>The variables value, or &lt;code&gt;null&lt;/code&gt; if no variable named &lt;code&gt;variableName&lt;/code&gt; exists. The value returned must be of a type appropriate for the underlying object model.</source>
          <target state="translated">変数の値。variableNameという名前の &lt;code&gt;variableName&lt;/code&gt; が存在しない場合は &lt;code&gt;null&lt;/code&gt; 。返される値は、基になるオブジェクトモデルに適したタイプである必要があります。</target>
        </trans-unit>
        <trans-unit id="3d3705f4b80513e86c1fef983b33a0e581672d50" translate="yes" xml:space="preserve">
          <source>The variant code, or the empty string if none is defined.</source>
          <target state="translated">バリアントコード、または定義されていない場合は空文字列。</target>
        </trans-unit>
        <trans-unit id="34fe545ab25916df903f5bea78d9449c53a8699c" translate="yes" xml:space="preserve">
          <source>The variant field contains a value which identifies the layout of the &lt;code&gt;UUID&lt;/code&gt;. The bit layout described above is valid only for a &lt;code&gt;
 UUID&lt;/code&gt; with a variant value of 2, which indicates the Leach-Salz variant.</source>
          <target state="translated">バリアントフィールドには、 &lt;code&gt;UUID&lt;/code&gt; のレイアウトを識別する値が含まれています。上記のビットレイアウトは、バリアント値が2の &lt;code&gt; UUID&lt;/code&gt; に対してのみ有効です。これは、Leach-Salzバリアントを示します。</target>
        </trans-unit>
        <trans-unit id="e1f53b3a3ade84d5fdc041ae16475767cdbbf2af" translate="yes" xml:space="preserve">
          <source>The variant field contains a value which identifies the layout of the &lt;code&gt;UUID&lt;/code&gt;. The bit layout described above is valid only for a &lt;code&gt;UUID&lt;/code&gt; with a variant value of 2, which indicates the Leach-Salz variant.</source>
          <target state="translated">バリアントフィールドには、 &lt;code&gt;UUID&lt;/code&gt; のレイアウトを識別する値が含まれています。上記のビットレイアウトは、Leach-Salzバリアントを示すバリアント値2の &lt;code&gt;UUID&lt;/code&gt; に対してのみ有効です。</target>
        </trans-unit>
        <trans-unit id="e259995f0509c3e3cb7f29e838fd983cda7d7bae" translate="yes" xml:space="preserve">
          <source>The variant number associated with this &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;UUID&lt;/code&gt; に関連付けられているバリアント番号。</target>
        </trans-unit>
        <trans-unit id="9ff76ceb354bc3cf76d2cc94fa0c1aadbaba32d0" translate="yes" xml:space="preserve">
          <source>The variant number associated with this &lt;code&gt;UUID&lt;/code&gt;. The variant number describes the layout of the &lt;code&gt;UUID&lt;/code&gt;. The variant number has the following meaning:</source>
          <target state="translated">この &lt;code&gt;UUID&lt;/code&gt; に関連付けられたバリアント番号。バリアント番号は、 &lt;code&gt;UUID&lt;/code&gt; のレイアウトを示します。バリアント番号には次の意味があります。</target>
        </trans-unit>
        <trans-unit id="0759d3d03dbf7321713ed34def228b0638c5dab2" translate="yes" xml:space="preserve">
          <source>The variant number of this &lt;code&gt;UUID&lt;/code&gt;</source>
          <target state="translated">この &lt;code&gt;UUID&lt;/code&gt; のバリアント番号</target>
        </trans-unit>
        <trans-unit id="1a899fd2ca276c66ee25e17717f728ddba571308" translate="yes" xml:space="preserve">
          <source>The various &lt;code&gt;add&lt;/code&gt; methods return the caller. This allows for easy chaining of invocations. For example, &lt;code&gt;group.addComponent(label1).addComponent(label2);&lt;/code&gt; is equivalent to &lt;code&gt;group.addComponent(label1); group.addComponent(label2);&lt;/code&gt;.</source>
          <target state="translated">さまざまな &lt;code&gt;add&lt;/code&gt; メソッドが呼び出し元を返します。これにより、呼び出しを簡単に連鎖させることができます。たとえば、 &lt;code&gt;group.addComponent(label1).addComponent(label2);&lt;/code&gt; &lt;code&gt;group.addComponent(label1); group.addComponent(label2);&lt;/code&gt; と同等です。group.addComponent（label2）; 。</target>
        </trans-unit>
        <trans-unit id="9a2987ccd904a7fa0f3359a297d67001c957cc55" translate="yes" xml:space="preserve">
          <source>The various &lt;code&gt;next&lt;/code&gt; methods of &lt;code&gt;Scanner&lt;/code&gt; make a match result available if they complete without throwing an exception. For instance, after an invocation of the &lt;a href=&quot;#nextInt()&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt; method that returned an int, this method returns a &lt;code&gt;MatchResult&lt;/code&gt; for the search of the &lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;Integer&lt;/i&gt;&lt;/a&gt; regular expression defined above. Similarly the &lt;a href=&quot;#findInLine(java.lang.String)&quot;&gt;&lt;code&gt;findInLine()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#findWithinHorizon(java.lang.String,int)&quot;&gt;&lt;code&gt;findWithinHorizon()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#skip(java.util.regex.Pattern)&quot;&gt;&lt;code&gt;skip()&lt;/code&gt;&lt;/a&gt; methods will make a match available if they succeed.</source>
          <target state="translated">&lt;code&gt;Scanner&lt;/code&gt; の &lt;code&gt;next&lt;/code&gt; のさまざまなメソッドは、例外をスローせずに完了すると、一致結果を利用できるようにします。たとえば、intを返した&lt;a href=&quot;#nextInt()&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出した後、このメソッドは、上記で定義された&lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;整数&lt;/i&gt;&lt;/a&gt;正規表現の検索に対して &lt;code&gt;MatchResult&lt;/code&gt; を返します。同様に、&lt;a href=&quot;#findInLine(java.lang.String)&quot;&gt; &lt;code&gt;findInLine()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#findWithinHorizon(java.lang.String,int)&quot;&gt; &lt;code&gt;findWithinHorizon()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#skip(java.util.regex.Pattern)&quot;&gt; &lt;code&gt;skip()&lt;/code&gt; &lt;/a&gt;メソッドは、成功した場合に一致を使用可能にします。&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="4f651a70a37a4814efdb6f28d7a64f3a1d099f21" translate="yes" xml:space="preserve">
          <source>The various &lt;code&gt;next&lt;/code&gt;methods of &lt;code&gt;Scanner&lt;/code&gt; make a match result available if they complete without throwing an exception. For instance, after an invocation of the &lt;a href=&quot;scanner#nextInt--&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt; method that returned an int, this method returns a &lt;code&gt;MatchResult&lt;/code&gt; for the search of the &lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;Integer&lt;/i&gt;&lt;/a&gt; regular expression defined above. Similarly the &lt;a href=&quot;scanner#findInLine-java.lang.String-&quot;&gt;&lt;code&gt;findInLine(java.lang.String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;scanner#findWithinHorizon-java.lang.String-int-&quot;&gt;&lt;code&gt;findWithinHorizon(java.lang.String, int)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;scanner#skip-java.util.regex.Pattern-&quot;&gt;&lt;code&gt;skip(java.util.regex.Pattern)&lt;/code&gt;&lt;/a&gt; methods will make a match available if they succeed.</source>
          <target state="translated">&lt;code&gt;Scanner&lt;/code&gt; のさまざまな &lt;code&gt;next&lt;/code&gt; メソッドは、例外をスローせずに完了した場合に一致結果を利用できるようにします。たとえば、intを返した&lt;a href=&quot;scanner#nextInt--&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出した後、このメソッドは上記で定義された&lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;整数の&lt;/i&gt;&lt;/a&gt;正規表現を検索するために &lt;code&gt;MatchResult&lt;/code&gt; を返します。同様に、&lt;a href=&quot;scanner#findInLine-java.lang.String-&quot;&gt; &lt;code&gt;findInLine(java.lang.String)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;scanner#findWithinHorizon-java.lang.String-int-&quot;&gt; &lt;code&gt;findWithinHorizon(java.lang.String, int)&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;scanner#skip-java.util.regex.Pattern-&quot;&gt; &lt;code&gt;skip(java.util.regex.Pattern)&lt;/code&gt; &lt;/a&gt;メソッドは、成功した場合に一致を使用できるようにします。&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="66a3528f0c1b55451a824e991967067e69ff6040" translate="yes" xml:space="preserve">
          <source>The vector containing the real UIs.</source>
          <target state="translated">実際の UI を含むベクトル。</target>
        </trans-unit>
        <trans-unit id="788eff506f4bfe4a0b3cd5df0f47b7e6cc4e70f0" translate="yes" xml:space="preserve">
          <source>The vector containing the real UIs. This is populated in the call to &lt;code&gt;createUI&lt;/code&gt;, and can be obtained by calling the &lt;code&gt;getUIs&lt;/code&gt; method. The first element is guaranteed to be the real UI obtained from the default look and feel.</source>
          <target state="translated">実際のUIを含むベクトル。これは &lt;code&gt;createUI&lt;/code&gt; の呼び出しで入力され、 &lt;code&gt;getUIs&lt;/code&gt; メソッドを呼び出すことで取得できます。最初の要素は、デフォルトのルックアンドフィールから取得された実際のUIであることが保証されています。</target>
        </trans-unit>
        <trans-unit id="1180351e5247e4780b4dc25a40f38943b4896262" translate="yes" xml:space="preserve">
          <source>The vector is empty if there is no timer notification registered for this timer MBean.</source>
          <target state="translated">このタイマーMBeanにタイマー通知が登録されていない場合、ベクトルは空です。</target>
        </trans-unit>
        <trans-unit id="d9e2d6864ec2b83e2c1a64a7dd7faed626bbda83" translate="yes" xml:space="preserve">
          <source>The vector is empty if there is no timer notifications registered for this timer MBean with the specified &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;type&lt;/code&gt; このタイマーMBeanに登録されたタイマー通知がない場合、ベクターは空です。</target>
        </trans-unit>
        <trans-unit id="ca17252692aed15c11d9f3da80840809cf0c1f83" translate="yes" xml:space="preserve">
          <source>The vector of elements</source>
          <target state="translated">要素のベクトル</target>
        </trans-unit>
        <trans-unit id="58462e7fd48bf8ac3b31199fbf9a449a7280a048" translate="yes" xml:space="preserve">
          <source>The vendor might supply the following &lt;code&gt;ChangeIDControl&lt;/code&gt; and &lt;code&gt;VendorXControlFactory&lt;/code&gt; classes. The &lt;code&gt;VendorXControlFactory&lt;/code&gt; will be used by the service provider when the provider receives response controls from the LDAP server.</source>
          <target state="translated">ベンダーは、次の &lt;code&gt;ChangeIDControl&lt;/code&gt; および &lt;code&gt;VendorXControlFactory&lt;/code&gt; クラスを提供する場合があります。 &lt;code&gt;VendorXControlFactory&lt;/code&gt; は、プロバイダがLDAPサーバから応答コントロールを受信したときに、サービスプロバイダによって使用されます。</target>
        </trans-unit>
        <trans-unit id="275585627b99c17300f68809698efafe7b5722ce" translate="yes" xml:space="preserve">
          <source>The version field holds a value that describes the type of this &lt;code&gt;
 UUID&lt;/code&gt;. There are four different basic types of UUIDs: time-based, DCE security, name-based, and randomly generated UUIDs. These types have a version value of 1, 2, 3 and 4, respectively.</source>
          <target state="translated">バージョンフィールドは、この &lt;code&gt; UUID&lt;/code&gt; のタイプを説明する値を保持します。UUIDには、時間ベース、DCEセキュリティ、名前ベース、およびランダムに生成されたUUIDの4つの異なる基本タイプがあります。これらのタイプのバージョン値は、それぞれ1、2、3、および4です。</target>
        </trans-unit>
        <trans-unit id="92b9d2715811e51e997d7d4ca0742429f1579adf" translate="yes" xml:space="preserve">
          <source>The version field holds a value that describes the type of this &lt;code&gt;UUID&lt;/code&gt;. There are four different basic types of UUIDs: time-based, DCE security, name-based, and randomly generated UUIDs. These types have a version value of 1, 2, 3 and 4, respectively.</source>
          <target state="translated">versionフィールドは、この &lt;code&gt;UUID&lt;/code&gt; のタイプを説明する値を保持します。UUIDには4つの異なる基本タイプがあります。時間ベース、DCEセキュリティ、名前ベース、およびランダムに生成されたUUIDです。これらのタイプのバージョン値は、それぞれ1、2、3、および4です。</target>
        </trans-unit>
        <trans-unit id="4d21175da4b48cbc3923c0f8323407a231d63c76" translate="yes" xml:space="preserve">
          <source>The version number associated with this &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;UUID&lt;/code&gt; に関連付けられているバージョン番号。</target>
        </trans-unit>
        <trans-unit id="05fd679ec54a555aaf6a087d093ec8e9634ec69d" translate="yes" xml:space="preserve">
          <source>The version number associated with this &lt;code&gt;UUID&lt;/code&gt;. The version number describes how this &lt;code&gt;UUID&lt;/code&gt; was generated. The version number has the following meaning:</source>
          <target state="translated">この &lt;code&gt;UUID&lt;/code&gt; に関連付けられているバージョン番号。バージョン番号は、この &lt;code&gt;UUID&lt;/code&gt; の生成方法を示しています。バージョン番号には次の意味があります。</target>
        </trans-unit>
        <trans-unit id="6cff03f566dfbcc1da388f423a088498b0bfb75e" translate="yes" xml:space="preserve">
          <source>The version number of this &lt;code&gt;UUID&lt;/code&gt;</source>
          <target state="translated">この &lt;code&gt;UUID&lt;/code&gt; のバージョン番号</target>
        </trans-unit>
        <trans-unit id="248333294329c0197bb12d0f6a414ff121dcbcff" translate="yes" xml:space="preserve">
          <source>The version of a file</source>
          <target state="translated">ファイルのバージョン</target>
        </trans-unit>
        <trans-unit id="f960447e30249f093071e1177d67cf04bcbfa430" translate="yes" xml:space="preserve">
          <source>The version of the Hijrah variant data</source>
          <target state="translated">ヒジュラ亜種データのバージョン</target>
        </trans-unit>
        <trans-unit id="a1a162c92dcdf70e3ab7e12651d184a634c2e241" translate="yes" xml:space="preserve">
          <source>The version of the RMI Connector Protocol understood by this connector server.</source>
          <target state="translated">このコネクタ サーバが理解する RMI コネクタ プロトコルのバージョン。</target>
        </trans-unit>
        <trans-unit id="cf8368aa8f5f9b58b1196c5b1361941f6ebe95f2" translate="yes" xml:space="preserve">
          <source>The version of the RMI Connector Protocol understood by this connector server. This is a string with the following format:</source>
          <target state="translated">このコネクタ サーバが理解する RMI コネクタ プロトコルのバージョン。これは、以下の形式の文字列です。</target>
        </trans-unit>
        <trans-unit id="67c46c943cb161ebaf61561a24251c325c38dcc4" translate="yes" xml:space="preserve">
          <source>The version of the information model in which this element was introduced. A set of MBeans defined by an application is collectively called an &lt;em&gt;information model&lt;/em&gt;. The application may also define versions of this model, and use the &lt;code&gt;&quot;since&quot;&lt;/code&gt; field to record the version in which an element first appeared.</source>
          <target state="translated">この要素が導入された情報モデルのバージョン。アプリケーションによって定義されたMBeanのセットは、まとめて&lt;em&gt;情報モデル&lt;/em&gt;と呼ばれます。アプリケーションはこのモデルのバージョンを定義することもでき、 &lt;code&gt;&quot;since&quot;&lt;/code&gt; フィールドを使用して、要素が最初に出現したバージョンを記録します。</target>
        </trans-unit>
        <trans-unit id="b0fb3351dd31095a4bced4cb99f1b7abda02c059" translate="yes" xml:space="preserve">
          <source>The version of the module if recorded at compile-time, or an empty &lt;code&gt;Optional&lt;/code&gt; if no version was recorded or the version string recorded is &lt;a href=&quot;moduledescriptor.version#parse(java.lang.String)&quot;&gt;unparseable&lt;/a&gt;</source>
          <target state="translated">コンパイル時に記録された場合はモジュールのバージョン、またはバージョンが記録されていない場合、または記録されたバージョン文字列が&lt;a href=&quot;moduledescriptor.version#parse(java.lang.String)&quot;&gt;解析&lt;/a&gt;できない場合は空の &lt;code&gt;Optional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3685bfd8924e2e12ab202fe7572e0fc113f3c96f" translate="yes" xml:space="preserve">
          <source>The version of the supported language.</source>
          <target state="translated">サポートされている言語のバージョンです。</target>
        </trans-unit>
        <trans-unit id="52422ac233670bbc923e26fc3ae16e5038fe1990" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java 2 Platform, Standard Edition 5.0.</source>
          <target state="translated">Java 2 Platform,Standard Edition 5.0で認識されるバージョン。</target>
        </trans-unit>
        <trans-unit id="493ae14aa8bda8f4cbb42c55258a1945f011ee02" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java 2 Platform, Standard Edition 5.0. The language described in</source>
          <target state="translated">Java 2 Platform,Standard Edition 5.0で認識されているバージョン。で記述されている言語。</target>
        </trans-unit>
        <trans-unit id="3022af772ae57790fa2262e880d2c67797961cc2" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java 2 Platform, Standard Edition, v 1.2.</source>
          <target state="translated">Java 2 Platform,Standard Edition,v 1.2で認識されるバージョン。</target>
        </trans-unit>
        <trans-unit id="6c8ee4fc6c4ec0e899d656f5815ce54f62279899" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java 2 Platform, Standard Edition, v 1.2. The language described in</source>
          <target state="translated">Java 2 Platform,Standard Edition,v 1.2で認識されたバージョン。で記述されている言語。</target>
        </trans-unit>
        <trans-unit id="c87429de5c2eea03bf3209808e67bffa7ff396a8" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java 2 Platform, Standard Edition, v 1.3.</source>
          <target state="translated">Java 2 Platform,Standard Edition,v 1.3で認識されるバージョン。</target>
        </trans-unit>
        <trans-unit id="60485dd1cd7fcf936094d3c03d7336c18a555a23" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java 2 Platform, Standard Edition, v 1.3. No major changes from &lt;code&gt;RELEASE_2&lt;/code&gt;.</source>
          <target state="translated">Java 2 Platform、Standard Edition、v 1.3によって認識されるバージョン。 &lt;code&gt;RELEASE_2&lt;/code&gt; からの大きな変更はありません。</target>
        </trans-unit>
        <trans-unit id="2e78a2f2926d700f4cd6d5f37fd5c574b8ae34c6" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java 2 Platform, Standard Edition, v 1.4.</source>
          <target state="translated">Java 2 Platform,Standard Edition,v 1.4で認識されるバージョン。</target>
        </trans-unit>
        <trans-unit id="33e65cacac89fcf14c1fb1ffd5441c1fd46da791" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java 2 Platform, Standard Edition, v 1.4. Added a simple assertion facility.</source>
          <target state="translated">Java 2 Platform,Standard Edition,v 1.4で認識されるバージョン。シンプルなアサーション機能を追加しました。</target>
        </trans-unit>
        <trans-unit id="efc94a5521bf14056c2a9e3e2badd893ae0879f0" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java Platform 1.1.</source>
          <target state="translated">Java Platform 1.1で認識されるバージョン。</target>
        </trans-unit>
        <trans-unit id="2af496d830b8e85fb7bdac6006a960dc011931da" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java Platform 1.1. The language is &lt;code&gt;RELEASE_0&lt;/code&gt; augmented with nested classes as described in the 1.1 update to</source>
          <target state="translated">Javaプラットフォーム1.1によって認識されるバージョン。言語は &lt;code&gt;RELEASE_0&lt;/code&gt; であり、1.1の更新で説明されているように、ネストされたクラスで拡張されています。</target>
        </trans-unit>
        <trans-unit id="831db96026fb5941758d6c84583e8162540fbe70" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java Platform, Standard Edition 10.</source>
          <target state="translated">Java Platform,Standard Edition 10で認識されるバージョン。</target>
        </trans-unit>
        <trans-unit id="d6737b50578e3baae7a758261a87c9177a3409a0" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java Platform, Standard Edition 10. Additions in this release include local-variable type inference (&lt;code&gt;var&lt;/code&gt;).</source>
          <target state="translated">Java Platform、Standard Edition 10で認識されるバージョン。このリリースでの追加には、ローカル変数型推論（ &lt;code&gt;var&lt;/code&gt; ）が含まれます。</target>
        </trans-unit>
        <trans-unit id="780b27fad1bbf4d75231ae700daf5fdc1d45d5d9" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java Platform, Standard Edition 11.</source>
          <target state="translated">Java Platform,Standard Edition 11で認識されるバージョン。</target>
        </trans-unit>
        <trans-unit id="3737ca22e2eb55bfafd4b8dc1f5fba8c8b1cfd22" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java Platform, Standard Edition 6.</source>
          <target state="translated">Java Platform,Standard Edition 6で認識されるバージョン。</target>
        </trans-unit>
        <trans-unit id="5a1c95c42d35f8469c63a9001750d4f9ec2552bd" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java Platform, Standard Edition 6. No major changes from &lt;code&gt;RELEASE_5&lt;/code&gt;.</source>
          <target state="translated">Java Platform、Standard Edition 6によって認識されたバージョン &lt;code&gt;RELEASE_5&lt;/code&gt; からの大きな変更はありません。</target>
        </trans-unit>
        <trans-unit id="00fc5992d9212219bc2dec2239671cfcbfca7361" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java Platform, Standard Edition 7.</source>
          <target state="translated">Java Platform,Standard Edition 7で認識されるバージョン。</target>
        </trans-unit>
        <trans-unit id="dc1600019466bdbd05352dcab9d2cc9fbdf36863" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java Platform, Standard Edition 7. Additions in this release include, diamond syntax for constructors, &lt;code&gt;try&lt;/code&gt;-with-resources, strings in switch, binary literals, and multi-catch.</source>
          <target state="translated">Java Platform、Standard Edition 7で認識されるバージョン。このリリースでの追加には、コンストラクタのダイヤモンド構文、 &lt;code&gt;try&lt;/code&gt; -with-resources、スイッチ内の文字列、バイナリリテラル、マルチキャッチなどがあります。</target>
        </trans-unit>
        <trans-unit id="b1ddcec7b2e0cef17b40c165b719411e9636873a" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java Platform, Standard Edition 8.</source>
          <target state="translated">Java Platform,Standard Edition 8で認識されるバージョン。</target>
        </trans-unit>
        <trans-unit id="ba5437ac950badfe9820695aa51943c8ac51fd94" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java Platform, Standard Edition 8. Additions in this release include lambda expressions and default methods.</source>
          <target state="translated">Java Platform,Standard Edition 8 で認識されるバージョン。このリリースでは、ラムダ式とデフォルトメソッドが追加されています。</target>
        </trans-unit>
        <trans-unit id="efdb5b38e63a12574a24d7ffd6e4d9afa0313bd2" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java Platform, Standard Edition 9.</source>
          <target state="translated">Java Platform,Standard Edition 9で認識されるバージョン。</target>
        </trans-unit>
        <trans-unit id="78798c9f8e8b2a50b0939b7a9df6df4d870d7e92" translate="yes" xml:space="preserve">
          <source>The version recognized by the Java Platform, Standard Edition 9. Additions in this release include modules and removal of a single underscore from the set of legal identifier names.</source>
          <target state="translated">Java Platform,Standard Edition 9で認識されるバージョン。このリリースで追加されたものには、モジュールと、法的な識別子名のセットから単一のアンダースコアを削除することが含まれています。</target>
        </trans-unit>
        <trans-unit id="0fa716a4f4a4c3e8cddf93a190ba1e2de52a5f5d" translate="yes" xml:space="preserve">
          <source>The version string</source>
          <target state="translated">バージョン文字列</target>
        </trans-unit>
        <trans-unit id="290af8b85b4cefbf054a388df69f2a0ce52ddc54" translate="yes" xml:space="preserve">
          <source>The version string contains a version number optionally followed by other information separated by one of the characters of '+', '-'. The format for the version number is:</source>
          <target state="translated">バージョン文字列には、バージョン番号の後に '+'、'-' のいずれかの文字で区切られた他の情報が含まれます。バージョン番号のフォーマットは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="572d44d97596be5977ef90937f3f79c89dc77e3c" translate="yes" xml:space="preserve">
          <source>The vertical axis consists of a sequential group containing two parallel groups. The parallel groups are configured to align their components along the baseline. The first parallel group contains the first label and first text field, and the second group consists of the second label and second text field.</source>
          <target state="translated">垂直軸は、2つの平行グループを含むシーケンシャルグループで構成されている。平行グループは、それらの構成要素をベースラインに沿って整列させるように構成されている。第1の平行グループは、第1のラベルおよび第1のテキストフィールドを含み、第2のグループは、第2のラベルおよび第2のテキストフィールドを含むように構成されている。</target>
        </trans-unit>
        <trans-unit id="d8dfff5b2076edab9e59d1c3378eba1d08acb891" translate="yes" xml:space="preserve">
          <source>The vertical coordinate at which the event occurred relative to the DOM implementation's client area.</source>
          <target state="translated">DOM 実装のクライアント領域に対するイベントが発生した垂直座標。</target>
        </trans-unit>
        <trans-unit id="a9239559621a77e540b5123e5d9c8d02e0b0b013" translate="yes" xml:space="preserve">
          <source>The vertical coordinate at which the event occurred relative to the origin of the screen coordinate system.</source>
          <target state="translated">画面座標系の原点に対するイベントが発生した垂直座標。</target>
        </trans-unit>
        <trans-unit id="108c69e8dffb80e19f78043abb75707aa45231ef" translate="yes" xml:space="preserve">
          <source>The vertical element of legs between nodes starts at the bottom of the parent node by default.</source>
          <target state="translated">ノード間の脚の垂直要素は、デフォルトでは親ノードの下部から始まります。</target>
        </trans-unit>
        <trans-unit id="e5fd69e750d794eef8525d7ead631d0c3df0865f" translate="yes" xml:space="preserve">
          <source>The vertical element of legs between nodes starts at the bottom of the parent node by default. This method makes the leg start below that.</source>
          <target state="translated">ノード間の脚の垂直要素は、デフォルトでは親ノードの下から始まります。この方法では、脚の開始位置をそれより下にします。</target>
        </trans-unit>
        <trans-unit id="1e86ac051433774659dea2eec70d74d2b9919890" translate="yes" xml:space="preserve">
          <source>The view and parent view are checked to see if they are &lt;code&gt;JComponents&lt;/code&gt;, if they aren't, stop and repaint the whole viewport.</source>
          <target state="translated">ビューと親ビューは、それらが &lt;code&gt;JComponents&lt;/code&gt; であるかどうかを確認するためにチェックされ、そうでない場合は、ビューポート全体を停止して再描画します。</target>
        </trans-unit>
        <trans-unit id="5ddeed9a4cf1044b6266e92a5f9f81d60ede6f4a" translate="yes" xml:space="preserve">
          <source>The view gets its allocation from the parent at paint time, so it must be prepared to redo layout if the allocated area is different from what it is prepared to deal with.</source>
          <target state="translated">ビューはペイント時に親から割り当てを受けるので、割り当てられた領域が処理するための準備と異なる場合は、レイアウトをやり直す準備をしなければなりません。</target>
        </trans-unit>
        <trans-unit id="62ac9cabb4ddf5d3df84c9f5b8fed3ec3e8cf875" translate="yes" xml:space="preserve">
          <source>The view has a &lt;code&gt;setSize&lt;/code&gt; method which is like &lt;code&gt;doLayout&lt;/code&gt; and &lt;code&gt;setSize&lt;/code&gt; in &lt;code&gt;Component&lt;/code&gt; combined. The view has a &lt;code&gt;preferenceChanged&lt;/code&gt; method which is like &lt;code&gt;invalidate&lt;/code&gt; in &lt;code&gt;Component&lt;/code&gt; except that one can invalidate just one axis and the child requesting the change is identified.</source>
          <target state="translated">ビューは、持ち &lt;code&gt;setSize&lt;/code&gt; ようなものである方法 &lt;code&gt;doLayout&lt;/code&gt; と &lt;code&gt;setSize&lt;/code&gt; における &lt;code&gt;Component&lt;/code&gt; 組み合わせを。ビューには、 &lt;code&gt;Component&lt;/code&gt; &lt;code&gt;invalidate&lt;/code&gt; に似た &lt;code&gt;preferenceChanged&lt;/code&gt; メソッドがありますが、1つの軸だけを無効化でき、変更を要求する子が識別される点が異なります。</target>
        </trans-unit>
        <trans-unit id="21bb89aacbc297246eff848668efb03c947a2c22" translate="yes" xml:space="preserve">
          <source>The view hierarchy is painted.</source>
          <target state="translated">ビューの階層が描かれています。</target>
        </trans-unit>
        <trans-unit id="c0baa902c30bbd5cd33ababaff1f531cda16a474" translate="yes" xml:space="preserve">
          <source>The view image used for a backing store.</source>
          <target state="translated">バッキングストアで使用しているビュー画像です。</target>
        </trans-unit>
        <trans-unit id="cd24d98b37b0f6f9781bc0653637b62644fed069" translate="yes" xml:space="preserve">
          <source>The view invokes the following methods on the &lt;code&gt;RowSorter&lt;/code&gt;:</source>
          <target state="translated">ビューは、 &lt;code&gt;RowSorter&lt;/code&gt; で次のメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="c631dab429ccbd9fa24264a600e66db40fdd0678" translate="yes" xml:space="preserve">
          <source>The view of a file provided by an instance of this class is guaranteed to be consistent with other views of the same file provided by other instances in the same program. The view provided by an instance of this class may or may not, however, be consistent with the views seen by other concurrently-running programs due to caching performed by the underlying operating system and delays induced by network-filesystem protocols. This is true regardless of the language in which these other programs are written, and whether they are running on the same machine or on some other machine. The exact nature of any such inconsistencies are system-dependent and are therefore unspecified.</source>
          <target state="translated">このクラスのインスタンスによって提供されるファイルのビューは、同じプログラムの他のインスタンスによって提供される同じファイルの他のビューと一致することが保証されています。しかし、このクラスのインスタンスによって提供されるビューは、基礎となるオペレーティング・システムによって実行されるキャッシュやネットワーク・ファイルシステム・プロトコルによって引き起こされる遅延のために、他の同時実行中のプログラムによって表示されるビューと一致している場合もあれば、一致していない場合もあります。これは、これらの他のプログラムが書かれた言語や、それらが同じマシン上で実行されているか、他のマシン上で実行されているかに関係なく当てはまります。このような矛盾の正確な性質はシステムに依存しており、そのため特定されていません。</target>
        </trans-unit>
        <trans-unit id="e69e4b05faf63e778871c0d3850aefc9998b9588" translate="yes" xml:space="preserve">
          <source>The view of the files and file system provided by classes in this package are guaranteed to be consistent with other views provided by other instances in the same Java virtual machine. The view may or may not, however, be consistent with the view of the file system as seen by other concurrently running programs due to caching performed by the underlying operating system and delays induced by network-filesystem protocols. This is true regardless of the language in which these other programs are written, and whether they are running on the same machine or on some other machine. The exact nature of any such inconsistencies are system-dependent and are therefore unspecified.</source>
          <target state="translated">本パッケージのクラスによって提供されるファイルとファイルシステムのビューは、同じJava仮想マシン内の他のインスタンスによって提供される他のビューと一致することが保証されています。しかし、そのビューは、基礎となるオペレーティング・システムによって実行されるキャッシングや、ネットワーク・ファイルシステム・プロトコルによって引き起こされる遅延のために、他の同時実行中のプログラムによって見られるファイル・システムのビューと一致している場合もあれば、一致していない場合もあります。これは、これらの他のプログラムが書かれた言語や、それらが同じマシン上で実行されているか、他のマシン上で実行されているかに関係なく当てはまります。このような矛盾の正確な性質はシステムに依存しており、そのため特定されていません。</target>
        </trans-unit>
        <trans-unit id="750b216e6591d42be7752c1ccc334f74dd8f12aa" translate="yes" xml:space="preserve">
          <source>The view supports breaking for the purpose of formatting. The fragments produced by breaking share the view that has primary responsibility for the element (i.e. they are nested classes and carry only a small amount of state of their own) so they can share its resources.</source>
          <target state="translated">ビューは書式設定のためのブレークをサポートしています。ブレークによって生成されたフラグメントは、その要素の主な責任を持つビューを共有します(つまり、それらはネストされたクラスであり、それ自身の状態を少量しか持ちません)。</target>
        </trans-unit>
        <trans-unit id="dcf26d7eb7f2b3b9db64cfa5669c95b2c00b65af" translate="yes" xml:space="preserve">
          <source>The view's &lt;code&gt;spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ビューの &lt;code&gt;spliterator&lt;/code&gt; は&lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; を&lt;/a&gt;報告します。</target>
        </trans-unit>
        <trans-unit id="7f5166b266b10230b8c5577f5d6f553331cc4405" translate="yes" xml:space="preserve">
          <source>The view's &lt;code&gt;spliterator&lt;/code&gt; reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#DISTINCT&quot;&gt;&lt;code&gt;Spliterator.DISTINCT&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ビューの &lt;code&gt;spliterator&lt;/code&gt; は、&lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../spliterator#DISTINCT&quot;&gt; &lt;code&gt;Spliterator.DISTINCT&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; を報告し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="e180456519029a61110027d18c36a686018713ed" translate="yes" xml:space="preserve">
          <source>The view's iterators and spliterators are &lt;a href=&quot;package-summary#Weakly&quot;&gt;&lt;i&gt;weakly consistent&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">ビューのイテレータとスプリッタは、&lt;a href=&quot;package-summary#Weakly&quot;&gt;&lt;i&gt;一貫性&lt;/i&gt;&lt;/a&gt;が&lt;i&gt;弱い&lt;/i&gt;です。</target>
        </trans-unit>
        <trans-unit id="4ab5f11baa74f707b7bb224c5de26ca66525f0ad" translate="yes" xml:space="preserve">
          <source>The viewport &quot;scrolls&quot; its child (called the &quot;view&quot;) by the normal parent/child clipping (typically the view is moved in the opposite direction of the scroll).</source>
          <target state="translated">ビューポートは、通常の親子クリッピングによってその子(「ビュー」と呼ばれる)を「スクロール」します(通常、ビューはスクロールの反対方向に移動します)。</target>
        </trans-unit>
        <trans-unit id="bc5cd82fcf166d9089fa7c633eeca4ed35d0fe95" translate="yes" xml:space="preserve">
          <source>The viewport &quot;scrolls&quot; its child (called the &quot;view&quot;) by the normal parent/child clipping (typically the view is moved in the opposite direction of the scroll). A non-&lt;code&gt;null&lt;/code&gt; border, or non-zero insets, isn't supported, to prevent the geometry of this component from becoming complex enough to inhibit subclassing. To create a &lt;code&gt;JViewport&lt;/code&gt; with a border, add it to a &lt;code&gt;JPanel&lt;/code&gt; that has a border.</source>
          <target state="translated">ビューポートは、通常の親/子クリッピングによって子（「ビュー」と呼ばれます）を「スクロール」します（通常、ビューはスクロールの反対方向に移動します）。このコンポーネントのジオメトリがサブクラス化を妨げるほど複雑になるのを防ぐために、 &lt;code&gt;null&lt;/code&gt; 以外の境界線、またはゼロ以外のインセットはサポートされていません。境界線のある &lt;code&gt;JViewport&lt;/code&gt; を作成するには、境界線のある &lt;code&gt;JPanel&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="6e9d0cf31c26e384ef599b5f9b6d0f271a301375" translate="yes" xml:space="preserve">
          <source>The viewport gets the space available after accounting for the previous constraints.</source>
          <target state="translated">ビューポートは、以前の制約を考慮した後、利用可能なスペースを取得します。</target>
        </trans-unit>
        <trans-unit id="c1f582e06f3b6e62c7c1e3d34a0b9a3c408789c8" translate="yes" xml:space="preserve">
          <source>The virtual machine is</source>
          <target state="translated">仮想マシンは</target>
        </trans-unit>
        <trans-unit id="e9f9a3839ed2055f08a26dbd35178cd5a027df29" translate="yes" xml:space="preserve">
          <source>The virtual machine is free to treat the &lt;code&gt;stackSize&lt;/code&gt; parameter as a suggestion. If the specified value is unreasonably low for the platform, the virtual machine may instead use some platform-specific minimum value; if the specified value is unreasonably high, the virtual machine may instead use some platform-specific maximum. Likewise, the virtual machine is free to round the specified value up or down as it sees fit (or to ignore it completely).</source>
          <target state="translated">仮想マシンは、 &lt;code&gt;stackSize&lt;/code&gt; パラメータを提案として自由に扱うことができます。指定された値がプラットフォームに対して不当に低い場合、仮想マシンは代わりにプラットフォーム固有の最小値を使用することがあります。指定された値が不当に高い場合、仮想マシンは代わりにプラットフォーム固有の最大値を使用する可能性があります。同様に、仮想マシンは、指定された値を、適切と思われるように（または完全に無視して）切り上げたり切り下げたりできます。</target>
        </trans-unit>
        <trans-unit id="47c721c30f38fc2edaadd8b6106e60056792e573" translate="yes" xml:space="preserve">
          <source>The virtual machine performs the finalization process automatically as needed, in a separate thread, if the &lt;code&gt;runFinalization&lt;/code&gt; method is not invoked explicitly.</source>
          <target state="translated">&lt;code&gt;runFinalization&lt;/code&gt; メソッドが明示的に呼び出されない場合、仮想マシンは別のスレッドで必要に応じてファイナライズプロセスを自動的に実行します。</target>
        </trans-unit>
        <trans-unit id="8642fbcebaba07b4669d35a2e26b8bad16051e94" translate="yes" xml:space="preserve">
          <source>The virtual machine's shutdown sequence consists of two phases. In the first phase all registered &lt;a href=&quot;runtime#addShutdownHook-java.lang.Thread-&quot;&gt;&lt;code&gt;shutdown hooks&lt;/code&gt;&lt;/a&gt;, if any, are started in some unspecified order and allowed to run concurrently until they finish. In the second phase all uninvoked finalizers are run if &lt;a href=&quot;runtime#runFinalizersOnExit-boolean-&quot;&gt;&lt;code&gt;finalization-on-exit&lt;/code&gt;&lt;/a&gt; has been enabled. Once this is done the virtual machine &lt;a href=&quot;runtime#halt-int-&quot;&gt;&lt;code&gt;halts&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">仮想マシンのシャットダウンシーケンスは、2つのフェーズで構成されます。最初のフェーズでは、登録されているすべての&lt;a href=&quot;runtime#addShutdownHook-java.lang.Thread-&quot;&gt; &lt;code&gt;shutdown hooks&lt;/code&gt; &lt;/a&gt;（存在する場合）が不特定の順序で開始され、完了するまで同時に実行できます。2番目のフェーズでは、&lt;a href=&quot;runtime#runFinalizersOnExit-boolean-&quot;&gt; &lt;code&gt;finalization-on-exit&lt;/code&gt; &lt;/a&gt;が有効になっている場合、呼び出されていないファイナライザがすべて実行されます。これが完了すると、仮想マシンが&lt;a href=&quot;runtime#halt-int-&quot;&gt; &lt;code&gt;halts&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="110918cc802a82b32ab393a11c540ffeccef7a5c" translate="yes" xml:space="preserve">
          <source>The visual behavior is platform and &lt;a href=&quot;taskbar.state&quot;&gt;&lt;code&gt;Taskbar.State&lt;/code&gt;&lt;/a&gt; dependent.</source>
          <target state="translated">視覚的な動作は、プラットフォームと&lt;a href=&quot;taskbar.state&quot;&gt; &lt;code&gt;Taskbar.State&lt;/code&gt; に&lt;/a&gt;依存します。</target>
        </trans-unit>
        <trans-unit id="49e03a8c2947801534530d04e65fd591f525fbb8" translate="yes" xml:space="preserve">
          <source>The visual bounds of the text is extended to include the logical bounds, if necessary. The outline is not affected.</source>
          <target state="translated">テキストの視覚的な境界線は、必要に応じて論理的な境界線を含むように拡張されます。アウトラインは影響を受けません。</target>
        </trans-unit>
        <trans-unit id="6ae8e7cd4a0bb7e3290fc509b4004aec986be05c" translate="yes" xml:space="preserve">
          <source>The volatile write to &lt;code&gt;V&lt;/code&gt; is placed (in an implementation specific manner) in the global synchronization order.</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; への揮発性書き込みは、（実装固有の方法で）グローバル同期順序で配置されます。</target>
        </trans-unit>
        <trans-unit id="de91da87d01e67078d8c18c3dfd783009a74b736" translate="yes" xml:space="preserve">
          <source>The wait cursor type.</source>
          <target state="translated">待ちカーソルタイプです。</target>
        </trans-unit>
        <trans-unit id="efd3407160c3ea0bff7fb2266c59d70afc3c6de5" translate="yes" xml:space="preserve">
          <source>The warning chain is automatically cleared each time a new row is read. This method may not be called on a &lt;code&gt;ResultSet&lt;/code&gt; object that has been closed; doing so will cause an &lt;code&gt;SQLException&lt;/code&gt; to be thrown.</source>
          <target state="translated">警告チェーンは、新しい行が読み取られるたびに自動的にクリアされます。このメソッドは、閉じられた &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトでは呼び出されない場合があります。これを行うと、 &lt;code&gt;SQLException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="43dffe00128f153c82de100cf774d69299ce1261" translate="yes" xml:space="preserve">
          <source>The warning chain is automatically cleared each time a statement is (re)executed. This method may not be called on a closed &lt;code&gt;Statement&lt;/code&gt; object; doing so will cause an &lt;code&gt;SQLException&lt;/code&gt; to be thrown.</source>
          <target state="translated">警告チェーンは、ステートメントが（再）実行されるたびに自動的にクリアされます。このメソッドは、閉じた &lt;code&gt;Statement&lt;/code&gt; オブジェクトでは呼び出せません。これを行うと、 &lt;code&gt;SQLException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="9e36f89b79c84c0caeedbd5793c33c4704e7fb40" translate="yes" xml:space="preserve">
          <source>The way attribute value normalization is performed by the DOM implementation depends on how much the implementation knows about the schema in use. Typically, the &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;nodeValue&lt;/code&gt; attributes of an &lt;code&gt;Attr&lt;/code&gt; node initially returns the normalized value given by the parser. It is also the case after &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; is called (assuming the right options have been set). But this may not be the case after mutation, independently of whether the mutation is performed by setting the string value directly or by changing the &lt;code&gt;Attr&lt;/code&gt; child nodes. In particular, this is true when &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#dt-charref&quot;&gt;character references&lt;/a&gt; are involved, given that they are not represented in the DOM and they impact attribute value normalization. On the other hand, if the implementation knows about the schema in use when the attribute value is changed, and it is of a different type than CDATA, it may normalize it again at that time. This is especially true of specialized DOM implementations, such as SVG DOM implementations, which store attribute values in an internal form different from a string.</source>
          <target state="translated">DOM実装によって属性値の正規化が実行される方法は、使用中のスキーマについて実装がどれだけ知っているかによって異なります。典型的には、 &lt;code&gt;value&lt;/code&gt; と &lt;code&gt;nodeValue&lt;/code&gt; の属性 &lt;code&gt;Attr&lt;/code&gt; ノードは、最初に、パーサによって与えられる正規化された値を返します。 &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; が呼び出された後も同様です（適切なオプションが設定されていると仮定します）。ただし、文字列値を直接設定するか、 &lt;code&gt;Attr&lt;/code&gt; 子ノードを変更することによって変更が実行されるかどうかに関係なく、変更後はそうではない場合があります。特に、これは&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#dt-charref&quot;&gt;文字参照の&lt;/a&gt;場合に当てはまりますそれらはDOMに表されておらず、属性値の正規化に影響を与えるため、関係しています。一方、属性値が変更されたときに使用中のスキーマを実装が認識していて、それがCDATAとは異なるタイプである場合、その時点で再度正規化することがあります。これは、文字列とは異なる内部形式で属性値を格納するSVGDOM実装などの特殊なDOM実装に特に当てはまります。</target>
        </trans-unit>
        <trans-unit id="c21a8aed036bbcc185b5b957c5388bff363a670b" translate="yes" xml:space="preserve">
          <source>The week-based-year itself is defined relative to the standard ISO proleptic year. It differs from the standard year in that it always starts on a Monday.</source>
          <target state="translated">週を基準とした年自体は、標準的なISO proleptic yearと相対的に定義されている。これは標準的な年とは異なり、常に月曜日に始まるという点で異なります。</target>
        </trans-unit>
        <trans-unit id="f875440be2605b4d9cefd62818b6c9405a8581de" translate="yes" xml:space="preserve">
          <source>The weight of this glyph.</source>
          <target state="translated">このグリフの重さ。</target>
        </trans-unit>
        <trans-unit id="df83281e755db0d0e327d674ce9bd650e8591ff9" translate="yes" xml:space="preserve">
          <source>The weight to indicate a view is a bad break opportunity for the purpose of formatting.</source>
          <target state="translated">ビューを示すための重みは、フォーマットの目的のために悪いブレークの機会です。</target>
        </trans-unit>
        <trans-unit id="6a445c04d72e116df0c559fdabcc3127aec707f0" translate="yes" xml:space="preserve">
          <source>The weight to indicate a view is a bad break opportunity for the purpose of formatting. This value indicates that no attempt should be made to break the view into fragments as the view has not been written to support fragmenting.</source>
          <target state="translated">フォーマットの目的のために、ビューを分割する機会が悪いことを示す重みです。この値は、ビューが断片化をサポートするように書かれていないため、ビューを断片化しようとしないことを示します。</target>
        </trans-unit>
        <trans-unit id="76874f67f43cc55af0d99866288189641d99cbec" translate="yes" xml:space="preserve">
          <source>The weight to indicate a view supports breaking, and must be broken to be represented properly when placed in a view that formats its children by breaking them.</source>
          <target state="translated">ビューがブレークをサポートしていることを示す重みで、その子をブレークしてフォーマットするビューに配置された場合、適切に表現されるようにブレークされなければなりません。</target>
        </trans-unit>
        <trans-unit id="66a46bf518e93456d81e1cc1896c3ea4c02d290a" translate="yes" xml:space="preserve">
          <source>The weight to indicate a view supports breaking, and this represents a very attractive place to break.</source>
          <target state="translated">ビューを示す重みがブレーキングをサポートしており、これは非常に魅力的なブレーキングの場所を表しています。</target>
        </trans-unit>
        <trans-unit id="eefcb368b9c72ba9550bf89a198ccfc8f734dd00" translate="yes" xml:space="preserve">
          <source>The weight to indicate a view supports breaking, but better opportunities probably exist.</source>
          <target state="translated">ビューを示すための重量は、ブレークをサポートしていますが、おそらくより良い機会が存在しています。</target>
        </trans-unit>
        <trans-unit id="3af0e31f3b0fc4344fe81ef46aca3c58ce22d30a" translate="yes" xml:space="preserve">
          <source>The west layout constraint (left side of container).</source>
          <target state="translated">西側のレイアウト制約(コンテナの左側)。</target>
        </trans-unit>
        <trans-unit id="73c5131fb0d3b07f411026b85ee08ba507a1e260" translate="yes" xml:space="preserve">
          <source>The west-resize cursor type.</source>
          <target state="translated">西リサイズのカーソルタイプです。</target>
        </trans-unit>
        <trans-unit id="d336c8b0105b02d9ce73f7d6cc89eeb2f4a9e56e" translate="yes" xml:space="preserve">
          <source>The width</source>
          <target state="translated">幅</target>
        </trans-unit>
        <trans-unit id="a5b89877fef3d4ce5b6e34c401295d24a5b1ecc1" translate="yes" xml:space="preserve">
          <source>The width dimension; negative values can be used.</source>
          <target state="translated">負の値を使用することができます。</target>
        </trans-unit>
        <trans-unit id="7fe9b320764e1c259d500225d7d4be176cd3d638" translate="yes" xml:space="preserve">
          <source>The width is defined as for &lt;a href=&quot;#genWidth&quot;&gt;General conversions&lt;/a&gt;.</source>
          <target state="translated">幅は、&lt;a href=&quot;#genWidth&quot;&gt;一般的な変換と&lt;/a&gt;同様に定義されます。</target>
        </trans-unit>
        <trans-unit id="b9b89fd07215f56373dd23dc6888317dc590ecf4" translate="yes" xml:space="preserve">
          <source>The width is the minimum number of characters to be written to the output including the &lt;code&gt;'%'&lt;/code&gt;. If the length of the converted value is less than the &lt;code&gt;width&lt;/code&gt; then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left. If width is not specified then just the &lt;code&gt;'%'&lt;/code&gt; is output.</source>
          <target state="translated">幅は、 &lt;code&gt;'%'&lt;/code&gt; を含む、出力に書き込まれる最小文字数です。変換された値の長さが &lt;code&gt;width&lt;/code&gt; より短い場合、文字の総数が幅と等しくなるまで、出力にスペース（ &lt;code&gt;'\u0020'&lt;/code&gt; ）が埋め込まれます。パディングは左側にあります。幅が指定されていない場合は、 &lt;code&gt;'%'&lt;/code&gt; のみが出力されます。</target>
        </trans-unit>
        <trans-unit id="08497cb4ffc4de43dc36a3a7a1421b6649c24786" translate="yes" xml:space="preserve">
          <source>The width is the minimum number of characters to be written to the output. For the line separator conversion, width is not applicable; if it is provided, an exception will be thrown.</source>
          <target state="translated">widthは,出力に書き込む最小文字数である。行区切り変換では,widthは適用されません。</target>
        </trans-unit>
        <trans-unit id="93c895f38cd814a0586673133f90d150b89f6aeb" translate="yes" xml:space="preserve">
          <source>The width is the minimum number of characters to be written to the output. If the length of the converted value is less than the &lt;code&gt;width&lt;/code&gt; then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</source>
          <target state="translated">幅は、出力に書き込まれる最小文字数です。変換された値の長さが &lt;code&gt;width&lt;/code&gt; より短い場合、文字の総数が幅と等しくなるまで、出力にスペース（ &lt;code&gt;'\u0020'&lt;/code&gt; ）が埋め込まれます。デフォルトでは、パディングは左側にあります。場合は &lt;code&gt;'-'&lt;/code&gt; フラグが指定され、右側にパディングされます。幅が指定されていない場合、最小値はありません。</target>
        </trans-unit>
        <trans-unit id="1a00be530872f28f11ef8e1267f18a7a37490125" translate="yes" xml:space="preserve">
          <source>The width of a track.</source>
          <target state="translated">トラックの幅。</target>
        </trans-unit>
        <trans-unit id="6cc9b1c619988f1a9026823b7d1be753d92f5b87" translate="yes" xml:space="preserve">
          <source>The width of cell.</source>
          <target state="translated">セルの幅。</target>
        </trans-unit>
        <trans-unit id="11573fd74f145064e80c81a509d0d28ecf0a475c" translate="yes" xml:space="preserve">
          <source>The width of each tile if tiling has been set, or 0 otherwise.</source>
          <target state="translated">タイリングが設定されている場合は各タイルの幅、設定されていない場合は0。</target>
        </trans-unit>
        <trans-unit id="26111ab9024cede0c7bcbac839d8d72eb95603f2" translate="yes" xml:space="preserve">
          <source>The width of the &lt;code&gt;Rectangle&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Rectangle&lt;/code&gt; の幅。</target>
        </trans-unit>
        <trans-unit id="6dbd0ce0b12788f8c6fe1a25c7715a5920af2e2f" translate="yes" xml:space="preserve">
          <source>The width of the arc that rounds off the corners.</source>
          <target state="translated">角を丸くする円弧の幅。</target>
        </trans-unit>
        <trans-unit id="2be9ff6eba22ed6f1a2440bbf3a39091a6762172" translate="yes" xml:space="preserve">
          <source>The width of the column.</source>
          <target state="translated">カラムの幅。</target>
        </trans-unit>
        <trans-unit id="ae74f194e7fe200808fa53b00965283e7837c271" translate="yes" xml:space="preserve">
          <source>The width of the matrix must be equal to the number of bands in the source &lt;code&gt;Raster&lt;/code&gt;, optionally plus one. If there is one more column in the matrix than the number of bands, there is an implied 1 at the end of the vector of band samples representing a pixel. The height of the matrix must be equal to the number of bands in the destination.</source>
          <target state="translated">マトリックスの幅は、ソース &lt;code&gt;Raster&lt;/code&gt; バンド数に等しくなければなりません（オプションで1を足したもの）。マトリックス内にバンドの数よりも1つ多い列がある場合、ピクセルを表すバンドサンプルのベクトルの最後に暗黙の1があります。マトリックスの高さは、宛先のバンドの数と等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="ec49c197d43c64b4897761f6df266e5358ba460b" translate="yes" xml:space="preserve">
          <source>The width of the printed fraction can be controlled. Setting the minimum width to zero will cause no output to be generated. The printed fraction will have the minimum width necessary between the minimum and maximum widths - trailing zeroes are omitted. No rounding occurs due to the maximum width - digits are simply dropped.</source>
          <target state="translated">印刷される端数の幅を制御することができます。最小幅をゼロに設定する と 、 出力は生成 さ れません。印刷される分数は、最小幅と最大幅の間に必要な最小幅を持ちます-末尾のゼロは省略されます。最大幅のために丸めは発生せず、 桁は単純に落とされます。</target>
        </trans-unit>
        <trans-unit id="4db7f10432db004de2848eb50eb2f97f278b4bde" translate="yes" xml:space="preserve">
          <source>The width of the scroll bar.</source>
          <target state="translated">スクロールバーの幅。</target>
        </trans-unit>
        <trans-unit id="bba108bcc6b63cc2c45f5b2bc0acff2a33d32159" translate="yes" xml:space="preserve">
          <source>The width of the source image.</source>
          <target state="translated">ソース画像の幅。</target>
        </trans-unit>
        <trans-unit id="467664440e728cd0513b8119f412e4725d00fa48" translate="yes" xml:space="preserve">
          <source>The width of this &lt;code&gt;Rectangle2D&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Rectangle2D&lt;/code&gt; の幅。</target>
        </trans-unit>
        <trans-unit id="f129436c32d43b679e1dc40b1904538aab43a278" translate="yes" xml:space="preserve">
          <source>The width of this &lt;code&gt;RoundRectangle2D&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;RoundRectangle2D&lt;/code&gt; の幅。</target>
        </trans-unit>
        <trans-unit id="da2e476462af867fea4cbe849e1dc3d400f5f75b" translate="yes" xml:space="preserve">
          <source>The width of this Raster.</source>
          <target state="translated">このラスターの幅。</target>
        </trans-unit>
        <trans-unit id="e6ca716e5e2fbbd59657bd7119f1d5b63fdfb718" translate="yes" xml:space="preserve">
          <source>The winding rule constant for specifying a non-zero rule for determining the interior of a path.</source>
          <target state="translated">パスの内部を決定するための非ゼロのルールを指定するための巻線ルール定数。</target>
        </trans-unit>
        <trans-unit id="17dd3723cfa6dddf3c10b7ea71c1c9ec63bc0dd5" translate="yes" xml:space="preserve">
          <source>The winding rule constant for specifying a non-zero rule for determining the interior of a path. The non-zero rule specifies that a point lies inside the path if a ray drawn in any direction from that point to infinity is crossed by path segments a different number of times in the counter-clockwise direction than the clockwise direction.</source>
          <target state="translated">パスの内部を決定するための非ゼロルールを指定するための巻線ルール定数。ゼロでない規則は、その点から無限大までの任意の方向に描かれた光線が、時計回り方向と反時計回り方向で異なる回数のパスセグメントによって交差された場合に、その点がパスの内側にあることを指定します。</target>
        </trans-unit>
        <trans-unit id="42897bc85e90af955b1b036d68df3ede0520e2d7" translate="yes" xml:space="preserve">
          <source>The winding rule constant for specifying an even-odd rule for determining the interior of a path.</source>
          <target state="translated">パスの内部を決定するための偶数ルールを指定するための巻線ルール定数。</target>
        </trans-unit>
        <trans-unit id="3ff56485c7b54311de67fa6367a706a77de06072" translate="yes" xml:space="preserve">
          <source>The winding rule constant for specifying an even-odd rule for determining the interior of a path. The even-odd rule specifies that a point lies inside the path if a ray drawn in any direction from that point to infinity is crossed by path segments an odd number of times.</source>
          <target state="translated">パスの内部を決定するための偶数奇数規則を指定するための巻線規則定数。偶数規則は、その点から無限大までの任意の方向に描かれた光線が奇数回パスセグメントによって交差された場合に、その点がパスの内側にあることを指定します。</target>
        </trans-unit>
        <trans-unit id="cb3dac7693e4da51d74dd397d6ac8d2f8822d5fb" translate="yes" xml:space="preserve">
          <source>The window closed event.</source>
          <target state="translated">ウィンドウが閉じたイベント。</target>
        </trans-unit>
        <trans-unit id="0ef1e15cdf59bfc15e5c7c19ba66a29ba977331a" translate="yes" xml:space="preserve">
          <source>The window closed event. This event is delivered after the displayable window has been closed as the result of a call to dispose.</source>
          <target state="translated">ウィンドウクローズイベント。このイベントは、廃棄の呼び出しの結果、表示可能なウィンドウが閉じられた後に配信されます。</target>
        </trans-unit>
        <trans-unit id="de02df67bc85e91662c4c591736b87f0cd0353a9" translate="yes" xml:space="preserve">
          <source>The window deiconified event type.</source>
          <target state="translated">ウィンドウデアイコン化されたイベントタイプ。</target>
        </trans-unit>
        <trans-unit id="9235256e89888414156b55feb8b39098b5ff03cd" translate="yes" xml:space="preserve">
          <source>The window deiconified event type. This event is delivered when the window has been changed from a minimized to a normal state.</source>
          <target state="translated">ウィンドウのデアイコン化イベントタイプです。このイベントは、ウィンドウが最小化された状態から通常の状態に変更されたときに配信されます。</target>
        </trans-unit>
        <trans-unit id="0e372d5a8465caac9411c2c0cf1477139b398aee" translate="yes" xml:space="preserve">
          <source>The window iconified event.</source>
          <target state="translated">ウィンドウアイコン化されたイベント。</target>
        </trans-unit>
        <trans-unit id="61db558573486e08d4a937e6a29ea7a159147807" translate="yes" xml:space="preserve">
          <source>The window iconified event. This event is delivered when the window has been changed from a normal to a minimized state. For many platforms, a minimized window is displayed as the icon specified in the window's iconImage property.</source>
          <target state="translated">ウィンドウのアイコン化イベントです。このイベントは、ウィンドウが通常の状態から最小化された状態に変更されたときに配信されます。多くのプラットフォームでは、最小化されたウィンドウはウィンドウの iconImage プロパティで指定されたアイコンとして表示されます。</target>
        </trans-unit>
        <trans-unit id="46898a0da1924e8243f2efb4d772e66f635671da" translate="yes" xml:space="preserve">
          <source>The window meets the requirements outlined in the &lt;a href=&quot;#isFocusableWindow()&quot;&gt;&lt;code&gt;isFocusableWindow()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ウィンドウは、&lt;a href=&quot;#isFocusableWindow()&quot;&gt; &lt;code&gt;isFocusableWindow()&lt;/code&gt; &lt;/a&gt;メソッドで概説されている要件を満たしています。</target>
        </trans-unit>
        <trans-unit id="8013fd08c38b0c136b4c63192fdf704c335236e9" translate="yes" xml:space="preserve">
          <source>The window must be undecorated (see &lt;a href=&quot;frame#setUndecorated(boolean)&quot;&gt;&lt;code&gt;Frame.setUndecorated(boolean)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;dialog#setUndecorated(boolean)&quot;&gt;&lt;code&gt;Dialog.setUndecorated(boolean)&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">ウィンドウは装飾されていない必要があります（&lt;a href=&quot;frame#setUndecorated(boolean)&quot;&gt; &lt;code&gt;Frame.setUndecorated(boolean)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;dialog#setUndecorated(boolean)&quot;&gt; &lt;code&gt;Dialog.setUndecorated(boolean)&lt;/code&gt; を&lt;/a&gt;参照）</target>
        </trans-unit>
        <trans-unit id="c31a61d56f8fbb4d525dfbb6bfb6163a1fc40d51" translate="yes" xml:space="preserve">
          <source>The window must not be in full-screen mode (see &lt;a href=&quot;graphicsdevice#setFullScreenWindow(java.awt.Window)&quot;&gt;&lt;code&gt;GraphicsDevice.setFullScreenWindow(Window)&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">ウィンドウは全画面モードであってはなりません（&lt;a href=&quot;graphicsdevice#setFullScreenWindow(java.awt.Window)&quot;&gt; &lt;code&gt;GraphicsDevice.setFullScreenWindow(Window)&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="12179198884def542b1e63dec6891ae3478228aa" translate="yes" xml:space="preserve">
          <source>The window opened event.</source>
          <target state="translated">ウィンドウが開いたイベント。</target>
        </trans-unit>
        <trans-unit id="d9c403769bb1b8ddcb5ee7eb7efd4dc97f5ba17c" translate="yes" xml:space="preserve">
          <source>The window opened event. This event is delivered only the first time a window is made visible.</source>
          <target state="translated">ウィンドウが開かれたイベントです。このイベントは、ウィンドウが最初に表示されたときにのみ配信されます。</target>
        </trans-unit>
        <trans-unit id="ccb573daae62a72c29efc1daca58ce1f319b8f8b" translate="yes" xml:space="preserve">
          <source>The window which appears during dragging the &lt;code&gt;JToolBar&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JToolBar&lt;/code&gt; のドラッグ中に表示されるウィンドウ。</target>
        </trans-unit>
        <trans-unit id="627ea3aec1aad90747aca022b53aff37eb58e0f4" translate="yes" xml:space="preserve">
          <source>The window will be shown at (10, 10) and &lt;code&gt;flag&lt;/code&gt; will be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ウィンドウは（10、10）に表示され、 &lt;code&gt;flag&lt;/code&gt; は &lt;code&gt;false&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="486d407655bd0137b66e348fad418045e32a3045" translate="yes" xml:space="preserve">
          <source>The window will be shown at platform's default location and &lt;code&gt;flag&lt;/code&gt; will be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ウィンドウはプラットフォームのデフォルトの場所に表示され、 &lt;code&gt;flag&lt;/code&gt; は &lt;code&gt;false&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="b482607b5b7693f411bfff481c78b79313d1cd0f" translate="yes" xml:space="preserve">
          <source>The window's property &lt;code&gt;autoRequestFocus&lt;/code&gt; is of the &lt;code&gt;true&lt;/code&gt; value.</source>
          <target state="translated">ウィンドウのプロパティ &lt;code&gt;autoRequestFocus&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; 値です。</target>
        </trans-unit>
        <trans-unit id="e9d1953e7c545d68c018dccb254a551ad30edc99" translate="yes" xml:space="preserve">
          <source>The window-activated event type.</source>
          <target state="translated">ウィンドウ起動型のイベントタイプです。</target>
        </trans-unit>
        <trans-unit id="05a1d8f582a9cb48572066d44594f6f9a0e95350" translate="yes" xml:space="preserve">
          <source>The window-activated event type. This event is delivered when the Window becomes the active Window. Only a Frame or a Dialog can be the active Window. The native windowing system may denote the active Window or its children with special decorations, such as a highlighted title bar. The active Window is always either the focused Window, or the first Frame or Dialog that is an owner of the focused Window.</source>
          <target state="translated">ウィンドウがアクティブになったイベントタイプです。このイベントは、ウィンドウがアクティブウィンドウになったときに配信されます。アクティブウィンドウになれるのはフレームかダイアログだけです。ネイティブウィンドウシステムでは、アクティブウィンドウやその子ウィンドウを、ハイライトされたタイトルバーのような特別な装飾で表示することができます。アクティブウィンドウは常にフォーカスされたウィンドウか、フォーカスされたウィンドウの所有者である最初のフレームまたはダイアログのいずれかです。</target>
        </trans-unit>
        <trans-unit id="620aac9452d22064e93f456a4ba7a240878b4cb2" translate="yes" xml:space="preserve">
          <source>The window-closing listener for the popup.</source>
          <target state="translated">ポップアップのウィンドウを閉じるリスナーです。</target>
        </trans-unit>
        <trans-unit id="5937c89c2aa1fabf6fb823ab66cb280051f96c32" translate="yes" xml:space="preserve">
          <source>The window-deactivated event type.</source>
          <target state="translated">ウィンドウが非アクティブ化されたイベントタイプ。</target>
        </trans-unit>
        <trans-unit id="c822528e2cae65479b7ced58d2f8ee70b3b6c23d" translate="yes" xml:space="preserve">
          <source>The window-deactivated event type. This event is delivered when the Window is no longer the active Window. Only a Frame or a Dialog can be the active Window. The native windowing system may denote the active Window or its children with special decorations, such as a highlighted title bar. The active Window is always either the focused Window, or the first Frame or Dialog that is an owner of the focused Window.</source>
          <target state="translated">Window-deactivated イベントタイプ。このイベントは、ウィンドウがアクティブなウィンドウでなくなったときに配信されます。アクティブなウィンドウになれるのはフレームかダイアログだけです。ネイティブウィンドウシステムでは、アクティブウィンドウやその子ウィンドウを、ハイライトされたタイトルバーのような特別な装飾で表示することができます。アクティブウィンドウは、常にフォーカスされたウィンドウか、フォーカスされたウィンドウの所有者である最初のフレームかダイアログのいずれかです。</target>
        </trans-unit>
        <trans-unit id="32c0b2bab232cd7fa45a3c809b9858ff0a4d0ccc" translate="yes" xml:space="preserve">
          <source>The window-gained-focus event type.</source>
          <target state="translated">ウィンドウゲインされたフォーカスイベントタイプ。</target>
        </trans-unit>
        <trans-unit id="fe95f333af206a0b02ba68561b21bf9f4477533d" translate="yes" xml:space="preserve">
          <source>The window-gained-focus event type. This event is delivered when the Window becomes the focused Window, which means that the Window, or one of its subcomponents, will receive keyboard events.</source>
          <target state="translated">window-gained-focus イベントタイプ。このイベントは、WindowがフォーカスされたWindowになったときに配信され、Windowまたはそのサブコンポーネントの1つがキーボードイベントを受信することを意味します。</target>
        </trans-unit>
        <trans-unit id="c7d4bb6299e2996b5c2fb075d5e44b4b1bd3efac" translate="yes" xml:space="preserve">
          <source>The window-lost-focus event type.</source>
          <target state="translated">ウィンドウロストフォーカスイベントタイプ。</target>
        </trans-unit>
        <trans-unit id="8524907cf338f83d544d4af56f4cc171c3a5e3d6" translate="yes" xml:space="preserve">
          <source>The window-lost-focus event type. This event is delivered when a Window is no longer the focused Window, which means keyboard events will no longer be delivered to the Window or any of its subcomponents.</source>
          <target state="translated">window-lost-focus イベントタイプ。このイベントは、WindowがフォーカスされたWindowでなくなったときに配信されます。つまり、キーボードイベントはWindowやそのサブコンポーネントに配信されなくなります。</target>
        </trans-unit>
        <trans-unit id="30ca39d08748f017be96913aa3f733ae5da76227" translate="yes" xml:space="preserve">
          <source>The window-state-changed event type.</source>
          <target state="translated">ウィンドウ状態変更イベントタイプ。</target>
        </trans-unit>
        <trans-unit id="7e5dbb9cc1f4ebccc0d301342951c952d5b9192f" translate="yes" xml:space="preserve">
          <source>The window-state-changed event type. This event is delivered when a Window's state is changed by virtue of it being iconified, maximized etc.</source>
          <target state="translated">window-state-changed イベントタイプ。このイベントは、ウィンドウがアイコン化されたり、最大化されたりすることでウィンドウの状態が変更されたときに配信されます。</target>
        </trans-unit>
        <trans-unit id="87463d379aacb015b2b5b4467fead7e3636e854d" translate="yes" xml:space="preserve">
          <source>The working directory does not exist.</source>
          <target state="translated">作業ディレクトリが存在しません。</target>
        </trans-unit>
        <trans-unit id="149ba28788d40521e03aae86481799a4aad8958e" translate="yes" xml:space="preserve">
          <source>The working directory of the new subprocess is specified by &lt;code&gt;dir&lt;/code&gt;. If &lt;code&gt;dir&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the subprocess inherits the current working directory of the current process.</source>
          <target state="translated">新しいサブプロセスの作業ディレクトリは &lt;code&gt;dir&lt;/code&gt; で指定されます。場合 &lt;code&gt;dir&lt;/code&gt; がある &lt;code&gt;null&lt;/code&gt; 、サブプロセスは現在のプロセスの現在の作業ディレクトリを継承します。</target>
        </trans-unit>
        <trans-unit id="9d7e42ba8563b4861562d9fedd9c297c3c802ae3" translate="yes" xml:space="preserve">
          <source>The wrapper instance will implement the requested interface and its super-types, but no other single-method interfaces. This means that the instance will not unexpectedly pass an &lt;code&gt;instanceof&lt;/code&gt; test for any unrequested type.</source>
          <target state="translated">ラッパーインスタンスは、要求されたインターフェイスとそのスーパータイプを実装しますが、他の単一メソッドインターフェイスは実装しません。これは、インスタンスが要求されていないタイプの &lt;code&gt;instanceof&lt;/code&gt; テストに予期せず合格しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="15818e243ca25bb45bac35d277861523076bc5b5" translate="yes" xml:space="preserve">
          <source>The wrapper pattern is employed by many JDBC driver implementations to provide extensions beyond the traditional JDBC API that are specific to a data source. Developers may wish to gain access to these resources that are wrapped (the delegates) as proxy class instances representing the the actual resources. This interface describes a standard mechanism to access these wrapped resources represented by their proxy, to permit direct access to the resource delegates.</source>
          <target state="translated">ラッパーパターンは、データソースに固有の従来のJDBC APIを超える拡張機能を提供するために、多くのJDBCドライバ実装で採用されています。開発者は、実際のリソースを表すプロキシクラスインスタンスとしてラップされたリソース(デリゲート)にアクセスしたいと思うかもしれません。このインタフェースは、プロキシで表現されたラップされたリソースにアクセスするための標準的なメカニズムを記述し、リソースのデリゲートへの直接アクセスを可能にする。</target>
        </trans-unit>
        <trans-unit id="3c15fc629a9a44eeca7f4fece2da5b14c32ef837" translate="yes" xml:space="preserve">
          <source>The wrapper will allow data to be collected on the native method call, but now the problem becomes linking up the wrapped method with the native implementation. That is, the method &lt;code&gt;wrapped_foo&lt;/code&gt; needs to be resolved to the native implementation of &lt;code&gt;foo&lt;/code&gt;, which might be:</source>
          <target state="translated">ラッパーを使用すると、ネイティブメソッドの呼び出しでデータを収集できますが、ラップされたメソッドとネイティブ実装をリンクする問題が発生します。つまり、メソッド &lt;code&gt;wrapped_foo&lt;/code&gt; は、次のような &lt;code&gt;foo&lt;/code&gt; のネイティブ実装に解決される必要があります。</target>
        </trans-unit>
        <trans-unit id="16ec3748a6bad8d0fc41d7ba859a56b2513c46d9" translate="yes" xml:space="preserve">
          <source>The write end of a pipe</source>
          <target state="translated">パイプの書き込み終了</target>
        </trans-unit>
        <trans-unit id="8f8bfaf5e08009c50abac22b29c0466e9561af91" translate="yes" xml:space="preserve">
          <source>The write lock is acquired by the current thread; or</source>
          <target state="translated">書き込みロックは、現在のスレッドで取得されます。</target>
        </trans-unit>
        <trans-unit id="0abe4db30711536753fa1129b368626382d73332" translate="yes" xml:space="preserve">
          <source>The write lock provides a &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; implementation that behaves in the same way, with respect to the write lock, as the &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; implementation provided by &lt;a href=&quot;reentrantlock#newCondition()&quot;&gt;&lt;code&gt;ReentrantLock.newCondition()&lt;/code&gt;&lt;/a&gt; does for &lt;a href=&quot;reentrantlock&quot;&gt;&lt;code&gt;ReentrantLock&lt;/code&gt;&lt;/a&gt;. This &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; can, of course, only be used with the write lock.</source>
          <target state="translated">書き込みロックを提供する&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;として書き込みロックに対して同じように動作し、その実装&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;によって提供された実装&lt;a href=&quot;reentrantlock#newCondition()&quot;&gt; &lt;code&gt;ReentrantLock.newCondition()&lt;/code&gt; &lt;/a&gt;の場合と&lt;a href=&quot;reentrantlock&quot;&gt; &lt;code&gt;ReentrantLock&lt;/code&gt; のを&lt;/a&gt;。もちろん、この&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;は書き込みロックでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="4479644870cc0b6de23ac32560cf11f5241f6aec" translate="yes" xml:space="preserve">
          <source>The write lock provides a &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; implementation that behaves in the same way, with respect to the write lock, as the &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; implementation provided by &lt;a href=&quot;reentrantlock#newCondition--&quot;&gt;&lt;code&gt;ReentrantLock.newCondition()&lt;/code&gt;&lt;/a&gt; does for &lt;a href=&quot;reentrantlock&quot;&gt;&lt;code&gt;ReentrantLock&lt;/code&gt;&lt;/a&gt;. This &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; can, of course, only be used with the write lock.</source>
          <target state="translated">書き込みロックを提供する&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;として書き込みロックに対して同じように動作し、その実装&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;によって提供された実装&lt;a href=&quot;reentrantlock#newCondition--&quot;&gt; &lt;code&gt;ReentrantLock.newCondition()&lt;/code&gt; &lt;/a&gt;の場合と&lt;a href=&quot;reentrantlock&quot;&gt; &lt;code&gt;ReentrantLock&lt;/code&gt; のを&lt;/a&gt;。もちろん、この&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;は書き込みロックでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="02bad978674eb6748c2b65fbeda2a59a87a1171a" translate="yes" xml:space="preserve">
          <source>The write operation may write up to</source>
          <target state="translated">までの書き込みが可能です。</target>
        </trans-unit>
        <trans-unit id="848f53cc5fb27d051b03412fae86949bd08f9ecd" translate="yes" xml:space="preserve">
          <source>The writeObject method is responsible for writing the state of the object for its particular class so that the corresponding readObject method can restore it. The default mechanism for saving the Object's fields can be invoked by calling out.defaultWriteObject. The method does not need to concern itself with the state belonging to its superclasses or subclasses. State is saved by writing the individual fields to the ObjectOutputStream using the writeObject method or by using the methods for primitive data types supported by DataOutput.</source>
          <target state="translated">writeObjectメソッドは、その特定のクラスのオブジェクトの状態を書き出し、対応するreadObjectメソッドがそれを復元できるようにします。オブジェクトのフィールドを保存するためのデフォルトのメカニズムは、 out.defaultWriteObject を呼び出すことで呼び出すことができます。このメソッドは、そのスーパークラスやサブクラスに属する状態を気にする必要はありません。状態は、個々のフィールドを writeObject メソッドを使用して ObjectOutputStream に書き込むか、DataOutput でサポートされているプリミティブ・データ型のメソッドを使用して保存されます。</target>
        </trans-unit>
        <trans-unit id="0bfd2d3d4a572740437c98d7a9b174fefaf95ccd" translate="yes" xml:space="preserve">
          <source>The writeObject method is responsible for writing the state of the object for its particular class so that the corresponding readObject method can restore it. The method does not need to concern itself with the state belonging to the object's superclasses or subclasses. State is saved by writing the individual fields to the ObjectOutputStream using the writeObject method or by using the methods for primitive data types supported by DataOutput.</source>
          <target state="translated">writeObject メソッドは、対応する readObject メソッドがそれを復元できるように、その特定のクラスのオブジェクトの状態を書き込むことを担当します。このメソッドは、オブジェクトのスーパークラスまたはサブクラスに属する状態を気にする必要はありません。状態は、個々のフィールドをwriteObjectメソッドを使用してObjectOutputStreamに書き込むか、DataOutputでサポートされているプリミティブ・データ型のメソッドを使用して保存されます。</target>
        </trans-unit>
        <trans-unit id="32895c9078e9c0d94dfbce29bcfd1e45f1dd1f75" translate="yes" xml:space="preserve">
          <source>The writeStreamHeader method is provided so subclasses can append or prepend their own header to the stream.</source>
          <target state="translated">サブクラスが自分のヘッダをストリームに追加したり、前置したりできるように writeStreamHeader メソッドが提供されています。</target>
        </trans-unit>
        <trans-unit id="12162856e28a75771ac79f11fb7626d43e724abb" translate="yes" xml:space="preserve">
          <source>The writeStreamHeader method is provided so subclasses can append or prepend their own header to the stream. It writes the magic number and version to the stream.</source>
          <target state="translated">サブクラスが自分のヘッダをストリームに追加したり、前置したりできるように writeStreamHeader メソッドが提供されています。これは、マジックナンバーとバージョンをストリームに書き込みます。</target>
        </trans-unit>
        <trans-unit id="275389c2830a7db9582b391c6c5af66340e673db" translate="yes" xml:space="preserve">
          <source>The writer's default action for malformed-input and unmappable-character errors is to &lt;a href=&quot;../charset/codingerroraction#REPORT&quot;&gt;report&lt;/a&gt; them. When more control over the error handling is required, the constructor that takes a &lt;a href=&quot;../charset/charsetencoder&quot;&gt;CharsetEncoder&lt;/a&gt; should be used.</source>
          <target state="translated">不正な入力およびマップ不可能な文字のエラーに対するライターのデフォルトのアクションは、それらを&lt;a href=&quot;../charset/codingerroraction#REPORT&quot;&gt;報告&lt;/a&gt;することです。エラー処理をさらに制御する必要がある場合は、&lt;a href=&quot;../charset/charsetencoder&quot;&gt;CharsetEncoder&lt;/a&gt;を使用するコンストラクターを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="62a34851e79619261706f169067b1e8ae983bacb" translate="yes" xml:space="preserve">
          <source>The writing is not complete until a call to &lt;code&gt;endWriteEmpty&lt;/code&gt; occurs. Calls to &lt;code&gt;prepareReplacePixels&lt;/code&gt;, &lt;code&gt;replacePixels&lt;/code&gt;, and &lt;code&gt;endReplacePixels&lt;/code&gt; may occur between calls to &lt;code&gt;prepareWriteEmpty&lt;/code&gt; and &lt;code&gt;endWriteEmpty&lt;/code&gt;. However, calls to &lt;code&gt;prepareWriteEmpty&lt;/code&gt; cannot be nested, and calls to &lt;code&gt;prepareWriteEmpty&lt;/code&gt; and &lt;code&gt;prepareInsertEmpty&lt;/code&gt; may not be interspersed.</source>
          <target state="translated">&lt;code&gt;endWriteEmpty&lt;/code&gt; の呼び出しが発生するまで、書き込みは完了しません。通話 &lt;code&gt;prepareReplacePixels&lt;/code&gt; 、 &lt;code&gt;replacePixels&lt;/code&gt; 、および &lt;code&gt;endReplacePixels&lt;/code&gt; はへの呼び出しの間で発生する可能性 &lt;code&gt;prepareWriteEmpty&lt;/code&gt; と &lt;code&gt;endWriteEmpty&lt;/code&gt; 。ただし、 &lt;code&gt;prepareWriteEmpty&lt;/code&gt; の呼び出しをネストすることはできず、 &lt;code&gt;prepareWriteEmpty&lt;/code&gt; と &lt;code&gt;prepareInsertEmpty&lt;/code&gt; の呼び出しを混在させることはできません。</target>
        </trans-unit>
        <trans-unit id="3f340ab186950cff3443ac085c8bde6bcffa4a47" translate="yes" xml:space="preserve">
          <source>The writing of interlaced images can be controlled by the progressive mode of the provided &lt;code&gt;ImageWriteParam&lt;/code&gt; instance. If progressive mode is &lt;code&gt;MODE_DISABLED&lt;/code&gt; then a non-interlaced image will be written. If progressive mode is &lt;code&gt;MODE_DEFAULT&lt;/code&gt; then an interlaced image will be written. If progressive mode is &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt;, then the metadata setting is used (if it is provided, otherwise an interlaced image will be written).</source>
          <target state="translated">インターレース画像の書き込みは、提供されている &lt;code&gt;ImageWriteParam&lt;/code&gt; インスタンスのプログレッシブモードで制御できます。プログレッシブモードが &lt;code&gt;MODE_DISABLED&lt;/code&gt; の場合、非インターレースイメージが書き込まれます。プログレッシブモードが &lt;code&gt;MODE_DEFAULT&lt;/code&gt; の場合、インターレースイメージが書き込まれます。プログレッシブモードが &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; の場合、メタデータ設定が使用されます（指定されている場合は、インターレースイメージが書き込まれます）。</target>
        </trans-unit>
        <trans-unit id="470f5ef5b9bb159907b73cd224384f1fb1f65e99" translate="yes" xml:space="preserve">
          <source>The year 1AD/CE is represented by 1.</source>
          <target state="translated">1AD/CEの年は1で表されます。</target>
        </trans-unit>
        <trans-unit id="94efbba691fdae1a9f89ed9e390e5077e5ec1212" translate="yes" xml:space="preserve">
          <source>The year 1BC/BCE is represented by 0.</source>
          <target state="translated">1BC/BCEの年は0で表されます。</target>
        </trans-unit>
        <trans-unit id="a4166e71717478dfbab468797a5aaf46cfd05d82" translate="yes" xml:space="preserve">
          <source>The year 2AD/CE is represented by 2.</source>
          <target state="translated">2AD/CEの年は2で表されます。</target>
        </trans-unit>
        <trans-unit id="109099de288ae4e09256b7ba426e8999e6a15a2f" translate="yes" xml:space="preserve">
          <source>The year 2BC/BCE is represented by -1.</source>
          <target state="translated">2BC/BCEの年は-1で表されます。</target>
        </trans-unit>
        <trans-unit id="07ec242f131c9a27b1dbfd15fa2dc1ccc37871eb" translate="yes" xml:space="preserve">
          <source>The year can be divided into four quarters. This method returns the first month of the quarter for the base month. January, February and March return January. April, May and June return April. July, August and September return July. October, November and December return October.</source>
          <target state="translated">1年を4つの四半期に分割することができます。この方法では、四半期の最初の月を基準月として返します。1月、2月、3月は1月を返します。4月、5月、6月は4月を返します。7月、8月、9月は7月を返します。10月、11月、12月は10月を返します。</target>
        </trans-unit>
        <trans-unit id="afab05cb473c717daf7febfb9975eb7cefe918aa" translate="yes" xml:space="preserve">
          <source>The year of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; の年。</target>
        </trans-unit>
        <trans-unit id="63b23bd5415b33a1dd713df991700a20700f76a3" translate="yes" xml:space="preserve">
          <source>The year returned by this method is proleptic as per &lt;code&gt;get(YEAR)&lt;/code&gt;.</source>
          <target state="translated">このメソッドによって返される年は &lt;code&gt;get(YEAR)&lt;/code&gt; のように前向きです。</target>
        </trans-unit>
        <trans-unit id="b6358c1cf0f427abe2556c16331c59f4b8d32da2" translate="yes" xml:space="preserve">
          <source>The year returned by this method is proleptic as per &lt;code&gt;get(YEAR)&lt;/code&gt;. To obtain the year-of-era, use &lt;code&gt;get(YEAR_OF_ERA)&lt;/code&gt;.</source>
          <target state="translated">このメソッドによって返される年は &lt;code&gt;get(YEAR)&lt;/code&gt; のように前向きです。年号を取得するには、 &lt;code&gt;get(YEAR_OF_ERA)&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="cbff7fe10e8b9cf90167f0d75f706532355546dc" translate="yes" xml:space="preserve">
          <source>The year within the era.</source>
          <target state="translated">時代の中の年。</target>
        </trans-unit>
        <trans-unit id="41d3f4e85bc99f5353fb949c0b4b1e34eb530da9" translate="yes" xml:space="preserve">
          <source>The year, month, and day are checked against the new requested HijrahChronology. If the chronology has a shorter month length for the month, the day is reduced to be the last day of the month.</source>
          <target state="translated">年、月、日は、新しいリクエストされたHijrahChronologyと照合されます。年表の月の長さが短い場合、日はその月の最終日に縮小されます。</target>
        </trans-unit>
        <trans-unit id="f49394166860fac852827d9d4a7948593a920114" translate="yes" xml:space="preserve">
          <source>The zeroed destination &lt;code&gt;Raster&lt;/code&gt;.</source>
          <target state="translated">ゼロ化された宛先 &lt;code&gt;Raster&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61c023d679e1c8ed9ff9b485125a4b40e5e8821a" translate="yes" xml:space="preserve">
          <source>The zeroed destination image.</source>
          <target state="translated">ゼロ化された宛先画像。</target>
        </trans-unit>
        <trans-unit id="95823fc22286c4941f6416c1b3d8f9df75024a4b" translate="yes" xml:space="preserve">
          <source>The zone ID is &lt;em&gt;not&lt;/em&gt; localized; it's one of the valid IDs of the &lt;a href=&quot;../util/timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; class that are not &lt;a href=&quot;../util/timezone#CustomID&quot;&gt;custom IDs&lt;/a&gt;. All other entries are localized names.</source>
          <target state="translated">ゾーンIDはローカライズされて&lt;em&gt;いません&lt;/em&gt;。これは、&lt;a href=&quot;../util/timezone#CustomID&quot;&gt;カスタムID&lt;/a&gt;ではない&lt;a href=&quot;../util/timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt;クラスの有効なIDの1つです。他のすべてのエントリはローカライズされた名前です。</target>
        </trans-unit>
        <trans-unit id="12a91a95938b30a6f68ad5300194d7afd44011e4" translate="yes" xml:space="preserve">
          <source>The zone ID is &lt;em&gt;not&lt;/em&gt; localized; it's one of the valid IDs of the &lt;a href=&quot;../util/timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; class that are not &lt;a href=&quot;../util/timezone#CustomID&quot;&gt;custom IDs&lt;/a&gt;. All other entries are localized names. If a zone does not implement daylight saving time, the daylight saving time names should not be used.</source>
          <target state="translated">ゾーンIDはローカライズされて&lt;em&gt;いません&lt;/em&gt;。これは、&lt;a href=&quot;../util/timezone#CustomID&quot;&gt;カスタムID&lt;/a&gt;ではない&lt;a href=&quot;../util/timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt;クラスの有効なIDの1つです。他のすべてのエントリはローカライズされた名前です。ゾーンが夏時間を実装していない場合、夏時間の名前は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="1e74dc8e4aa7b15926d1c952bce85e5bbf3526d8" translate="yes" xml:space="preserve">
          <source>The zone ID may be same as the &lt;a href=&quot;#getOffset()&quot;&gt;offset&lt;/a&gt;. If this is true, then any future calculations, such as addition or subtraction, have no complex edge cases due to time-zone rules. See also &lt;a href=&quot;#withFixedOffsetZone()&quot;&gt;&lt;code&gt;withFixedOffsetZone()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ゾーンIDは&lt;a href=&quot;#getOffset()&quot;&gt;オフセット&lt;/a&gt;と同じである可能性があります。これが当てはまる場合、加算や減算などの将来の計算には、タイムゾーンルールによる複雑なエッジケースはありません。&lt;a href=&quot;#withFixedOffsetZone()&quot;&gt; &lt;code&gt;withFixedOffsetZone()&lt;/code&gt; &lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="ef072be235e128f4417bff8f2ecc9a9fd327d55d" translate="yes" xml:space="preserve">
          <source>The zone ID may be same as the &lt;a href=&quot;zoneddatetime#getOffset--&quot;&gt;offset&lt;/a&gt;. If this is true, then any future calculations, such as addition or subtraction, have no complex edge cases due to time-zone rules. See also &lt;a href=&quot;zoneddatetime#withFixedOffsetZone--&quot;&gt;&lt;code&gt;withFixedOffsetZone()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ゾーンIDは&lt;a href=&quot;zoneddatetime#getOffset--&quot;&gt;オフセット&lt;/a&gt;と同じにすることができます。これが当てはまる場合、加算や減算などの将来の計算では、タイムゾーンルールによる複雑なエッジケースは発生しません。&lt;a href=&quot;zoneddatetime#withFixedOffsetZone--&quot;&gt; &lt;code&gt;withFixedOffsetZone()&lt;/code&gt; &lt;/a&gt;もご覧ください。</target>
        </trans-unit>
        <trans-unit id="0e5541312fac30d6776b7c47cc8181f1f41befb2" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;implies&lt;/code&gt; checks each of the following, in order, and for each returns true if the stated condition is true:</source>
          <target state="translated">その後 &lt;code&gt;implies&lt;/code&gt; 記載された条件が真である場合には、それぞれの戻りをチェック以下のそれぞれは、真：</target>
        </trans-unit>
        <trans-unit id="9548fcc35b330bbac33c7968b3c68d3a8baf60b6" translate="yes" xml:space="preserve">
          <source>Then every entry in this &lt;code&gt;Properties&lt;/code&gt; table is written out, one per line. For each entry the key string is written, then an ASCII &lt;code&gt;=&lt;/code&gt;, then the associated element string. For the key, all space characters are written with a preceding &lt;code&gt;\&lt;/code&gt; character. For the element, leading space characters, but not embedded or trailing space characters, are written with a preceding &lt;code&gt;\&lt;/code&gt; character. The key and element characters &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, and &lt;code&gt;:&lt;/code&gt; are written with a preceding backslash to ensure that they are properly loaded.</source>
          <target state="translated">次に、この &lt;code&gt;Properties&lt;/code&gt; テーブルのすべてのエントリが1行に1つずつ書き込まれます。エントリごとにキー文字列が書き込まれ、次にASCII &lt;code&gt;=&lt;/code&gt; 、次に関連する要素文字列が書き込まれます。キーの場合、すべての空白文字は、先行する &lt;code&gt;\&lt;/code&gt; 文字で記述されます。要素の場合、先行スペース文字は埋め込まれますが、後続スペース文字は先行 &lt;code&gt;\&lt;/code&gt; 文字で書き込まれません。キーと要素の文字 &lt;code&gt;#&lt;/code&gt; 、 &lt;code&gt;!&lt;/code&gt; 、 &lt;code&gt;=&lt;/code&gt; 、および &lt;code&gt;:&lt;/code&gt; は、それらが適切にロードされるように、前にバックスラッシュを付けて書き込まれます。</target>
        </trans-unit>
        <trans-unit id="f2515634c238092ca6ab3e114e72af7420724d4f" translate="yes" xml:space="preserve">
          <source>Then it calls &lt;code&gt;newMBeanServer(defaultDomain,outer,delegate)&lt;/code&gt; passing the &lt;var&gt;delegate&lt;/var&gt; that should be used by the MBeanServer implementation.</source>
          <target state="translated">次に、MBeanServer実装で使用する必要がある &lt;var&gt;delegate&lt;/var&gt; を渡して &lt;code&gt;newMBeanServer(defaultDomain,outer,delegate)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="5c9c219ad93a3973cb2bece1cad4c707c4e984e8" translate="yes" xml:space="preserve">
          <source>Then the floating-point result equals the value of the mathematical expression</source>
          <target state="translated">そして、浮動小数点の結果は、数式</target>
        </trans-unit>
        <trans-unit id="2305112f3cfd47ec6189ee9ae9aff82a3050640c" translate="yes" xml:space="preserve">
          <source>Then the following linkage invariants must hold:</source>
          <target state="translated">そうすると、次の連結不変量が保持されなければなりません。</target>
        </trans-unit>
        <trans-unit id="ed9c8aedb6a288d80aca27bb2abdd611ccdaa129" translate="yes" xml:space="preserve">
          <source>Then the method &lt;code&gt;doIt&lt;/code&gt; is overloaded. EventHandler will invoke the method that is appropriate based on the source. If the source is null, then either method is appropriate and the one that is invoked is undefined. For that reason we recommend against targeting overloaded methods.</source>
          <target state="translated">次に、メソッド &lt;code&gt;doIt&lt;/code&gt; がオーバーロードされます。EventHandlerは、ソースに基づいて適切なメソッドを呼び出します。ソースがnullの場合、どちらのメソッドも適切であり、呼び出されるメソッドは未定義です。そのため、オーバーロードされたメソッドをターゲットにしないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="2b4072d84089ea555465f4ab10a4485f817372e1" translate="yes" xml:space="preserve">
          <source>Then two durations are subtracted field by field. If the sign of any non-zero field &lt;code&gt;F&lt;/code&gt; is different from the sign of the most significant field, 1 (if &lt;code&gt;F&lt;/code&gt; is negative) or -1 (otherwise) will be borrowed from the next bigger unit of &lt;code&gt;F&lt;/code&gt;.</source>
          <target state="translated">次に、2つの期間がフィールドごとに減算されます。ゼロ以外のフィールド &lt;code&gt;F&lt;/code&gt; の符号が最も重要なフィールドの符号と異なる場合、1（ &lt;code&gt;F&lt;/code&gt; が負の場合）または-1（それ以外の場合）は &lt;code&gt;F&lt;/code&gt; の次に大きい単位から借用されます。</target>
        </trans-unit>
        <trans-unit id="bf6134715d80b46ffde96271931c92751bbdaf3f" translate="yes" xml:space="preserve">
          <source>Then you can execute:</source>
          <target state="translated">ならば、実行してもいい。</target>
        </trans-unit>
        <trans-unit id="c63c81bede51f6179d36f078fe8cba0feafc1e55" translate="yes" xml:space="preserve">
          <source>Then, before sending a notification to a listener registered with a filter, the notification broadcaster compares this notification type with all notification types enabled by the filter. The notification will be sent to the listener only if its filter enables this notification type.</source>
          <target state="translated">そして、フィルタに登録されているリスナーに通知を送信する前に、通知放送局は、この通知タイプをフィルタによって有効化されているすべての通知タイプと比較する。そのフィルタがこの通知タイプを有効にしている場合にのみ、リスナーに通知が送信されます。</target>
        </trans-unit>
        <trans-unit id="2304d640a16ae9bfebc931161006126d186e787e" translate="yes" xml:space="preserve">
          <source>Then:</source>
          <target state="translated">Then:</target>
        </trans-unit>
        <trans-unit id="d356dd80aaac6fd043102b988a584a6fc2fbf218" translate="yes" xml:space="preserve">
          <source>There are 3 HTTP cookie specifications:</source>
          <target state="translated">HTTPクッキーの仕様は3つあります。</target>
        </trans-unit>
        <trans-unit id="7da791d8e9fec115ce104b9f6b089536088c3804" translate="yes" xml:space="preserve">
          <source>There are 52 weeks in most week-based years, however on occasion there are 53 weeks.</source>
          <target state="translated">ほとんどの週単位の年は52週ですが、たまに53週になることもあります。</target>
        </trans-unit>
        <trans-unit id="ea75d499786717edf2fd9174e48f8b5e056e64a9" translate="yes" xml:space="preserve">
          <source>There are &lt;code&gt;SSLSessionContext&lt;/code&gt; parameters that affect how sessions are stored:</source>
          <target state="translated">あり &lt;code&gt;SSLSessionContext&lt;/code&gt; にセッションが保存されているどのように影響するパラメータは：</target>
        </trans-unit>
        <trans-unit id="ba07541dea0c364ec56d1886e075be191732b860" translate="yes" xml:space="preserve">
          <source>There are a couple of things to notice in this code:</source>
          <target state="translated">このコードにはいくつか注意すべき点があります。</target>
        </trans-unit>
        <trans-unit id="368828561f4d9578233a778592c44861ba54cf6a" translate="yes" xml:space="preserve">
          <source>There are a number of classes and interfaces in this package which are designed to ease the implementation of the SPI to customize the behavior of a compiler:</source>
          <target state="translated">このパッケージには、コンパイラの動作をカスタマイズするためにSPIの実装を容易にするために設計されたクラスやインターフェースがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="789da43f79f8e944dda13f428ba88942656ee3f5" translate="yes" xml:space="preserve">
          <source>There are a number of implementation choices in implementing a spliterator, nearly all of which are tradeoffs between simplicity of implementation and runtime performance of streams using that spliterator. The simplest, but least performant, way to create a spliterator is to create one from an iterator using &lt;a href=&quot;../spliterators#spliteratorUnknownSize(java.util.Iterator,int)&quot;&gt;&lt;code&gt;Spliterators.spliteratorUnknownSize(java.util.Iterator, int)&lt;/code&gt;&lt;/a&gt;. While such a spliterator will work, it will likely offer poor parallel performance, since we have lost sizing information (how big is the underlying data set), as well as being constrained to a simplistic splitting algorithm.</source>
          <target state="translated">スプリッターの実装には多くの実装上の選択肢があり、そのほとんどすべてが、実装の単純さとそのスプリッターを使用したスト​​リームの実行時パフォーマンスとの間のトレードオフです。スプリッターを作成する最も簡単ですが、パフォーマンスが最も低い方法は、&lt;a href=&quot;../spliterators#spliteratorUnknownSize(java.util.Iterator,int)&quot;&gt; &lt;code&gt;Spliterators.spliteratorUnknownSize(java.util.Iterator, int)&lt;/code&gt; &lt;/a&gt;を使用してイテレーターからスプリッターを作成することです。このようなスプリッターは機能しますが、サイズ情報（基になるデータセットの大きさ）が失われ、単純な分割アルゴリズムに制約されるため、並列パフォーマンスが低下する可能性があります。</target>
        </trans-unit>
        <trans-unit id="ef8f158deb14b7be2cf0d4efa8baefda6a71922f" translate="yes" xml:space="preserve">
          <source>There are a number of implementation choices in implementing a spliterator, nearly all of which are tradeoffs between simplicity of implementation and runtime performance of streams using that spliterator. The simplest, but least performant, way to create a spliterator is to create one from an iterator using &lt;a href=&quot;../spliterators#spliteratorUnknownSize-java.util.Iterator-int-&quot;&gt;&lt;code&gt;Spliterators.spliteratorUnknownSize(java.util.Iterator, int)&lt;/code&gt;&lt;/a&gt;. While such a spliterator will work, it will likely offer poor parallel performance, since we have lost sizing information (how big is the underlying data set), as well as being constrained to a simplistic splitting algorithm.</source>
          <target state="translated">スプリテレーターの実装にはいくつかの実装の選択肢があり、そのほとんどすべてが、実装の単純さと、そのスプリテレーターを使用するストリームの実行時パフォーマンスとの間のトレードオフです。&lt;a href=&quot;../spliterators#spliteratorUnknownSize-java.util.Iterator-int-&quot;&gt; &lt;code&gt;Spliterators.spliteratorUnknownSize(java.util.Iterator, int)&lt;/code&gt; &lt;/a&gt;を使用して、イテレータからスプリテレータを作成するのが最も簡単ですが、パフォーマンスが最も低い方法です。このようなスプリッターは機能しますが、サイズ情報（基になるデータセットの大きさ）が失われ、単純化された分割アルゴリズムに制約されているため、並列パフォーマンスが低下する可能性があります。</target>
        </trans-unit>
        <trans-unit id="1a48b716f28d61331736d2cc5791d878c15965b6" translate="yes" xml:space="preserve">
          <source>There are a number of popular technologies available for creating an XML schema. Some of the most popular ones include:</source>
          <target state="translated">XMLスキーマを作成するために利用できる一般的な技術は数多くあります。最も一般的なものには以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="9d878f03d7f9c2dbc33d5fa733c11fe1634d11ad" translate="yes" xml:space="preserve">
          <source>There are a set of &quot;log&quot; methods that take a log level, a message string, and optionally some parameters to the message string.</source>
          <target state="translated">ログレベル、メッセージ文字列、そしてオプションでメッセージ文字列にいくつかのパラメータを取る &quot;log &quot;メソッドのセットがあります。</target>
        </trans-unit>
        <trans-unit id="1f67ebc693e84bdf0873eac0e73efeaa82c19a53" translate="yes" xml:space="preserve">
          <source>There are a set of &quot;logp&quot; methods (for &quot;log precise&quot;) that are like the &quot;log&quot; methods, but also take an explicit source class name and method name.</source>
          <target state="translated">logp」メソッドのセット(「log精密」用)がありますが、これは「log」メソッドのようなもので、ソースクラス名とメソッド名を明示的に取ります。</target>
        </trans-unit>
        <trans-unit id="15b0598156ef25c63a8ccf779a6fbebb01022f73" translate="yes" xml:space="preserve">
          <source>There are a set of &quot;logrb&quot; method (for &quot;log with resource bundle&quot;) that are like the &quot;logp&quot; method, but also take an explicit resource bundle object for use in localizing the log message.</source>
          <target state="translated">logrb &quot;メソッド(&quot;リソースバンドル付きのログ &quot;のための)のセットがあります。</target>
        </trans-unit>
        <trans-unit id="3f937ce785a3bb7dfa8db17d663a42dbcf532f75" translate="yes" xml:space="preserve">
          <source>There are a variety of interactions depending on the current platform such as displaying progress of some task, appending user-specified menu to the application icon context menu, etc.</source>
          <target state="translated">タスクの進捗状況を表示したり、アプリケーションアイコンのコンテキストメニューにユーザー指定のメニューを追加したりと、現在のプラットフォームに応じて様々なインタラクションがあります。</target>
        </trans-unit>
        <trans-unit id="8342705b4ecbd7ef35248ece786679b644377bc2" translate="yes" xml:space="preserve">
          <source>There are adapters available to convert a SAX1 Parser to a SAX2 XMLReader and vice-versa.</source>
          <target state="translated">SAX1パーサーをSAX2 XMLReaderに変換するアダプタがあります。</target>
        </trans-unit>
        <trans-unit id="198896f4bb32a48314969671e1a0bed9b57f85c9" translate="yes" xml:space="preserve">
          <source>There are additional derived function shapes which extend the basic function shapes, including &lt;a href=&quot;unaryoperator&quot;&gt;&lt;code&gt;UnaryOperator&lt;/code&gt;&lt;/a&gt; (extends &lt;code&gt;Function&lt;/code&gt;) and &lt;a href=&quot;binaryoperator&quot;&gt;&lt;code&gt;BinaryOperator&lt;/code&gt;&lt;/a&gt; (extends &lt;code&gt;BiFunction&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;unaryoperator&quot;&gt; &lt;code&gt;UnaryOperator&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;Function&lt;/code&gt; 拡張）や&lt;a href=&quot;binaryoperator&quot;&gt; &lt;code&gt;BinaryOperator&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;BiFunction&lt;/code&gt; を拡張）など、基本的な関数の形状を拡張する派生関数の形状が追加されています。</target>
        </trans-unit>
        <trans-unit id="da12f2c258a3714932bec19ffbde602032cd7a0d" translate="yes" xml:space="preserve">
          <source>There are also times where you don't know a priori which permissions to check the context against. In these cases you can use the doPrivileged method that takes a context. You can also limit the scope of the privileged code by passing additional &lt;code&gt;Permission&lt;/code&gt; parameters.</source>
          <target state="translated">また、コンテキストをチェックする権限をアプリオリに知らない場合もあります。このような場合は、コンテキストを取るdoPrivilegedメソッドを使用できます。追加の &lt;code&gt;Permission&lt;/code&gt; パラメータを渡して、特権コードのスコープを制限することもできます。</target>
        </trans-unit>
        <trans-unit id="4ad81b6256410272632fc61cc04e04833c122dd8" translate="yes" xml:space="preserve">
          <source>There are cases, however, when applications need to use prefixes in character data or in attribute values, where they cannot safely be expanded automatically; the start/endPrefixMapping event supplies the information to the application to expand prefixes in those contexts itself, if necessary.</source>
          <target state="translated">しかし、アプリケーションが文字データや属性値の中で接頭辞を使用する必要がある場合、自動的に安全に接頭辞を展開することができない場合があります;start/endPrefixMappingイベントは、必要に応じてこれらのコンテキストで接頭辞を展開するための情報をアプリケーションに提供します。</target>
        </trans-unit>
        <trans-unit id="a3fe717a4310bd251c07830ac0f0685c5d479c19" translate="yes" xml:space="preserve">
          <source>There are certain methods in which the name must resolve to a context (for example, when searching a single level context). The documentation of such methods use the term &lt;em&gt;named context&lt;/em&gt; to describe their name parameter. For these methods, if the named object is not a DirContext, &lt;code&gt;NotContextException&lt;/code&gt; is thrown. Aside from these methods, there is no requirement that the &lt;em&gt;named object&lt;/em&gt; be a DirContext.</source>
          <target state="translated">名前がコンテキストに解決される必要がある特定のメソッドがあります（たとえば、単一レベルのコンテキストを検索する場合）。このようなメソッドのドキュメントでは、名前&lt;em&gt;付きコンテキスト&lt;/em&gt;という用語を使用して、名前パラメーターを説明しています。これらのメソッドでは、名前付きオブジェクトがDirContextでない場合、 &lt;code&gt;NotContextException&lt;/code&gt; がスローされます。これらのメソッドは別として、&lt;em&gt;名前付きオブジェクト&lt;/em&gt;がDirContextである必要はありません。</target>
        </trans-unit>
        <trans-unit id="94b019709222f6854929818bf02c4b3e4fa68677" translate="yes" xml:space="preserve">
          <source>There are convenience methods for tracing method entries (the &quot;entering&quot; methods), method returns (the &quot;exiting&quot; methods) and throwing exceptions (the &quot;throwing&quot; methods).</source>
          <target state="translated">メソッドのエントリ(「入る」メソッド)、メソッドのリターン(「出る」メソッド)、例外のスロー(「投げる」メソッド)をトレースするための便利なメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="618db28d57aed6ef38b8a1dbeb663ce327ce97c2" translate="yes" xml:space="preserve">
          <source>There are currently, as of 2013, two segments in the Java time-scale.</source>
          <target state="translated">2013年現在、Javaのタイムスケールには2つのセグメントがあります。</target>
        </trans-unit>
        <trans-unit id="69e5a8ce5effcab765b8137f9fe4d6de4c52414d" translate="yes" xml:space="preserve">
          <source>There are eight ways to export remote objects:</source>
          <target state="translated">リモートオブジェクトをエクスポートするには8つの方法があります。</target>
        </trans-unit>
        <trans-unit id="dc705dd39680a046181dbb1861c4932a0e3881d7" translate="yes" xml:space="preserve">
          <source>There are five distinct phases to an &lt;code&gt;SSLEngine&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; には5つの異なるフェーズがあります。</target>
        </trans-unit>
        <trans-unit id="2b0a4f63088373d76505ee3e5710b2bb4d1a2d15" translate="yes" xml:space="preserve">
          <source>There are five kinds of printing attributes: doc attributes, print request attributes, print job attributes, print service attributes, and supported-values attributes.</source>
          <target state="translated">印刷属性には、doc属性、印刷要求属性、印刷ジョブ属性、印刷サービス属性、サポートされている値属性の5種類があります。</target>
        </trans-unit>
        <trans-unit id="3074d45ed46a8a3d42300fcfe8ebb5db5bf3aa93" translate="yes" xml:space="preserve">
          <source>There are four different orientations used in modern languages as in the following table.</source>
          <target state="translated">現代の言語では、次の表のように4つの異なる方向が使われています。</target>
        </trans-unit>
        <trans-unit id="cad932612288aaada09723e6430aa6935c07b669" translate="yes" xml:space="preserve">
          <source>There are four main target uses of the logs:</source>
          <target state="translated">ログのターゲット用途は主に4つあります。</target>
        </trans-unit>
        <trans-unit id="3229708e8f565466bb07ef07847c54b18ae5a8fb" translate="yes" xml:space="preserve">
          <source>There are four possible types of icons: 16 x 16 color, 32 x 32 color, 16 x 16 mono, and 32 x 32 mono. If you implement a bean so that it supports a single icon, it is recommended to use 16 x 16 color. Another recommendation is to set a transparent background for the icons.</source>
          <target state="translated">アイコンの種類は4種類あります。16×16色、32×32色、16×16モノ、32×32モノです。単一のアイコンをサポートするようにビーンを実装する場合は、16×16色を使用することをお勧めします。また、アイコンの背景を透明に設定することも推奨されます。</target>
        </trans-unit>
        <trans-unit id="98c7cab3315e49a24f27fa42a75adda139b73fd1" translate="yes" xml:space="preserve">
          <source>There are many existing classes in the JDK whose signatures are well-suited for use with method references as arguments to &lt;code&gt;collect()&lt;/code&gt;. For example, the following will accumulate strings into an &lt;code&gt;ArrayList&lt;/code&gt;:</source>
          <target state="translated">JDKには多くの既存のクラスがあり、それらのシグニチャーは、メソッド参照を &lt;code&gt;collect()&lt;/code&gt; の引数として使用するのに適しています。たとえば、次は文字列を &lt;code&gt;ArrayList&lt;/code&gt; に蓄積します。</target>
        </trans-unit>
        <trans-unit id="6c8289dd97666af301b4b43ef1d06a9b97088c1a" translate="yes" xml:space="preserve">
          <source>There are multiple ways to deal with collisions between multiple elements mapping to the same key. The other forms of &lt;code&gt;toConcurrentMap&lt;/code&gt; simply use a merge function that throws unconditionally, but you can easily write more flexible merge policies. For example, if you have a stream of &lt;code&gt;Person&lt;/code&gt;, and you want to produce a &quot;phone book&quot; mapping name to address, but it is possible that two persons have the same name, you can do as follows to gracefully deal with these collisions, and produce a &lt;code&gt;ConcurrentMap&lt;/code&gt; mapping names to a concatenated list of addresses:</source>
          <target state="translated">同じキーにマッピングされている複数の要素間の衝突に対処するには、複数の方法があります。 &lt;code&gt;toConcurrentMap&lt;/code&gt; の他の形式は、無条件にスローするマージ関数を使用するだけですが、より柔軟なマージポリシーを簡単に作成できます。たとえば、 &lt;code&gt;Person&lt;/code&gt; のストリームがあり、住所にマッピング名を「電話帳」で作成したいが、2人が同じ名前である可能性がある場合は、次のようにしてこれらの衝突に適切に対処できます。そして、アドレスの連結リストに名前をマッピングする &lt;code&gt;ConcurrentMap&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="50c2a67a49e9e5ccc44a9144a8b2fa11e175cf65" translate="yes" xml:space="preserve">
          <source>There are multiple ways to deal with collisions between multiple elements mapping to the same key. The other forms of &lt;code&gt;toConcurrentMap&lt;/code&gt; simply use a merge function that throws unconditionally, but you can easily write more flexible merge policies. For example, if you have a stream of &lt;code&gt;Person&lt;/code&gt;, and you want to produce a &quot;phone book&quot; mapping name to address, but it is possible that two persons have the same name, you can do as follows to gracefully deals with these collisions, and produce a &lt;code&gt;Map&lt;/code&gt; mapping names to a concatenated list of addresses:</source>
          <target state="translated">同じキーにマッピングされている複数の要素間の衝突に対処するには、複数の方法があります。 &lt;code&gt;toConcurrentMap&lt;/code&gt; の他の形式は、無条件にスローするマージ関数を使用するだけですが、より柔軟なマージポリシーを簡単に作成できます。たとえば、 &lt;code&gt;Person&lt;/code&gt; のストリームがあり、アドレスに「電話帳」のマッピング名を作成したいが、2人の人物が同じ名前である可能性がある場合、次のようにしてこれらの衝突を適切に処理できます。そして、アドレスを連結したリストに &lt;code&gt;Map&lt;/code&gt; マッピング名を生成します。</target>
        </trans-unit>
        <trans-unit id="c1aa27dde80e55b2bf98bf31198222073cec87e8" translate="yes" xml:space="preserve">
          <source>There are multiple ways to deal with collisions between multiple elements mapping to the same key. The other forms of &lt;code&gt;toMap&lt;/code&gt; simply use a merge function that throws unconditionally, but you can easily write more flexible merge policies. For example, if you have a stream of &lt;code&gt;Person&lt;/code&gt;, and you want to produce a &quot;phone book&quot; mapping name to address, but it is possible that two persons have the same name, you can do as follows to gracefully deal with these collisions, and produce a &lt;code&gt;Map&lt;/code&gt; mapping names to a concatenated list of addresses:</source>
          <target state="translated">同じキーにマッピングされている複数の要素間の衝突に対処するには、複数の方法があります。 &lt;code&gt;toMap&lt;/code&gt; の他の形式は、無条件にスローするマージ関数を使用するだけですが、より柔軟なマージポリシーを簡単に作成できます。たとえば、 &lt;code&gt;Person&lt;/code&gt; のストリームがあり、住所にマッピング名を「電話帳」で作成したいが、2人が同じ名前である可能性がある場合は、次のようにしてこれらの衝突に適切に対処できます。そして、名前をアドレスの連結リストにマッピングする &lt;code&gt;Map&lt;/code&gt; 作成します。</target>
        </trans-unit>
        <trans-unit id="d570df6b0a511d807488f697e8fff67205fb8ca7" translate="yes" xml:space="preserve">
          <source>There are multiple ways to deal with collisions between multiple elements mapping to the same key. The other forms of &lt;code&gt;toMap&lt;/code&gt; simply use a merge function that throws unconditionally, but you can easily write more flexible merge policies. For example, if you have a stream of &lt;code&gt;Person&lt;/code&gt;, and you want to produce a &quot;phone book&quot; mapping name to address, but it is possible that two persons have the same name, you can do as follows to gracefully deals with these collisions, and produce a &lt;code&gt;Map&lt;/code&gt; mapping names to a concatenated list of addresses:</source>
          <target state="translated">同じキーにマッピングされている複数の要素間の衝突に対処するには、複数の方法があります。 &lt;code&gt;toMap&lt;/code&gt; の他の形式は、無条件にスローするマージ関数を使用するだけですが、より柔軟なマージポリシーを簡単に作成できます。たとえば、 &lt;code&gt;Person&lt;/code&gt; のストリームがあり、アドレスに「電話帳」のマッピング名を作成したいが、2人の人物が同じ名前である可能性がある場合、次のようにしてこれらの衝突を適切に処理できます。そして、アドレスを連結したリストに &lt;code&gt;Map&lt;/code&gt; マッピング名を生成します。</target>
        </trans-unit>
        <trans-unit id="4a26e68d8323da83a3aa42c70d8de93ca6b801fe" translate="yes" xml:space="preserve">
          <source>There are multiple ways to get a character set mapping to happen with &lt;code&gt;JEditorPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JEditorPane&lt;/code&gt; 文字セットマッピングを実行するには、複数の方法があります。</target>
        </trans-unit>
        <trans-unit id="49355ea4a7f0de6774fce9fba4ed5392d62aa873" translate="yes" xml:space="preserve">
          <source>There are nine predefined &lt;code&gt;Class&lt;/code&gt; objects to represent the eight primitive types and void. These are created by the Java Virtual Machine, and have the same names as the primitive types that they represent, namely &lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, and &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">8つのプリミティブ型とvoidを表す9つの定義済み &lt;code&gt;Class&lt;/code&gt; オブジェクトがあります。これらはJava仮想マシンによって作成され、それらが表すプリミティブ型と同じ名前、つまり &lt;code&gt;boolean&lt;/code&gt; 、 &lt;code&gt;byte&lt;/code&gt; 、 &lt;code&gt;char&lt;/code&gt; 、 &lt;code&gt;short&lt;/code&gt; 、 &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt;long&lt;/code&gt; 、 &lt;code&gt;float&lt;/code&gt; 、および &lt;code&gt;double&lt;/code&gt; を持っています。</target>
        </trans-unit>
        <trans-unit id="52dc29f92c1eac2b7d037b3580f08c6d5a292dc7" translate="yes" xml:space="preserve">
          <source>There are no guarantees beyond best-effort attempts to stop processing actively executing tasks. For example, typical implementations will cancel via &lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt;&lt;code&gt;Thread.interrupt()&lt;/code&gt;&lt;/a&gt;, so any task that fails to respond to interrupts may never terminate.</source>
          <target state="translated">アクティブに実行されているタスクの処理を停止するための最善の試み以外の保証はありません。たとえば、一般的な実装は&lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt; &lt;code&gt;Thread.interrupt()&lt;/code&gt; &lt;/a&gt;を介してキャンセルされるため、割り込みに応答しないタスクは決して終了しない可能性があります。</target>
        </trans-unit>
        <trans-unit id="5073f2e7c4323e6ba19e16f32d668e2082db861a" translate="yes" xml:space="preserve">
          <source>There are no guarantees beyond best-effort attempts to stop processing actively executing tasks. For example, typical implementations will cancel via &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;&lt;code&gt;Thread.interrupt()&lt;/code&gt;&lt;/a&gt;, so any task that fails to respond to interrupts may never terminate.</source>
          <target state="translated">アクティブに実行されているタスクの処理を停止するベストエフォート型の試みを超える保証はありません。たとえば、一般的な実装は&lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt; &lt;code&gt;Thread.interrupt()&lt;/code&gt; &lt;/a&gt;を介してキャンセルされるため、割り込みに応答しないタスクは決して終了しない場合があります。</target>
        </trans-unit>
        <trans-unit id="9f38732315c805219d239e42cbc8fc17be7b03f5" translate="yes" xml:space="preserve">
          <source>There are no guarantees beyond best-effort attempts to stop processing actively executing tasks. This implementation cancels tasks via &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;&lt;code&gt;Thread.interrupt()&lt;/code&gt;&lt;/a&gt;, so any task that fails to respond to interrupts may never terminate.</source>
          <target state="translated">アクティブに実行されているタスクの処理を停止するベストエフォート型の試みを超える保証はありません。この実装は&lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt; &lt;code&gt;Thread.interrupt()&lt;/code&gt; &lt;/a&gt;を介してタスクをキャンセルするため、割り込みへの応答に失敗したタスクは決して終了しない場合があります。</target>
        </trans-unit>
        <trans-unit id="ff9e7f533a1a283b4006daee725e1916b5e57352" translate="yes" xml:space="preserve">
          <source>There are no guarantees beyond best-effort attempts to stop processing actively executing tasks. This implementation interrupts tasks via &lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt;&lt;code&gt;Thread.interrupt()&lt;/code&gt;&lt;/a&gt;; any task that fails to respond to interrupts may never terminate.</source>
          <target state="translated">アクティブに実行されているタスクの処理を停止するための最善の試み以外の保証はありません。この実装は、&lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt; &lt;code&gt;Thread.interrupt()&lt;/code&gt; &lt;/a&gt;を介してタスクを中断します。割り込みに応答しないタスクは、決して終了しない場合があります。</target>
        </trans-unit>
        <trans-unit id="d9431ed708548e238ef515ee1cc518fdf2c9717e" translate="yes" xml:space="preserve">
          <source>There are no guarantees on the type, mutability, or serializability of the &lt;code&gt;ConcurrentMap&lt;/code&gt; or &lt;code&gt;List&lt;/code&gt; objects returned, or of the thread-safety of the &lt;code&gt;List&lt;/code&gt; objects returned.</source>
          <target state="translated">そこの種類、可変性、または直列可能に保証されない &lt;code&gt;ConcurrentMap&lt;/code&gt; または &lt;code&gt;List&lt;/code&gt; 返されたオブジェクトは、またはのスレッド安全性の &lt;code&gt;List&lt;/code&gt; 返されたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="0c59bce881980b812857f878712f5790533cee11" translate="yes" xml:space="preserve">
          <source>There are no guarantees on the type, mutability, or serializability of the &lt;code&gt;ConcurrentMap&lt;/code&gt; returned.</source>
          <target state="translated">返される &lt;code&gt;ConcurrentMap&lt;/code&gt; のタイプ、可変性、または直列化可能性についての保証はありません。</target>
        </trans-unit>
        <trans-unit id="c152317dbceb46ecf06e80209421468af5e327b5" translate="yes" xml:space="preserve">
          <source>There are no guarantees on the type, mutability, or serializability of the &lt;code&gt;Map&lt;/code&gt; or &lt;code&gt;List&lt;/code&gt; objects returned, or of the thread-safety of the &lt;code&gt;List&lt;/code&gt; objects returned.</source>
          <target state="translated">そこの種類、可変性、または直列可能に保証されていない &lt;code&gt;Map&lt;/code&gt; や &lt;code&gt;List&lt;/code&gt; 返されたオブジェクトは、またはのスレッド安全性の &lt;code&gt;List&lt;/code&gt; 返されたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="bb964f47cb21418a605ea5141958b9590922fa27" translate="yes" xml:space="preserve">
          <source>There are no guarantees on the type, mutability, serializability, or thread-safety of the &lt;code&gt;Map&lt;/code&gt; or &lt;code&gt;List&lt;/code&gt; objects returned.</source>
          <target state="translated">返される &lt;code&gt;Map&lt;/code&gt; オブジェクトまたは &lt;code&gt;List&lt;/code&gt; オブジェクトのタイプ、変更可能性、直列化可能性、またはスレッドセーフ性は保証されません。</target>
        </trans-unit>
        <trans-unit id="9cea59dafa3fd974f0fd6fa4fbe89e4cbe017d69" translate="yes" xml:space="preserve">
          <source>There are no guarantees on the type, mutability, serializability, or thread-safety of the &lt;code&gt;Map&lt;/code&gt; returned.</source>
          <target state="translated">返される &lt;code&gt;Map&lt;/code&gt; のタイプ、変更可能性、直列化可能性、またはスレッドセーフ性は保証されません。</target>
        </trans-unit>
        <trans-unit id="1b67b3f63cb8b0663e32aff4b81efd7144d13836" translate="yes" xml:space="preserve">
          <source>There are no modeling restrictions on what the agent &lt;code&gt;premain&lt;/code&gt; method may do. Anything application &lt;code&gt;main&lt;/code&gt; can do, including creating threads, is legal from &lt;code&gt;premain&lt;/code&gt;.</source>
          <target state="translated">エージェント &lt;code&gt;premain&lt;/code&gt; メソッドが実行できることに関するモデリングの制限はありません。スレッドの作成を含め、アプリケーション &lt;code&gt;main&lt;/code&gt; が実行できることは &lt;code&gt;premain&lt;/code&gt; 、premainから合法です。</target>
        </trans-unit>
        <trans-unit id="3af5183ddfe22ad90f82d0d2dcd147ae509134d5" translate="yes" xml:space="preserve">
          <source>There are no more results when the following is true:</source>
          <target state="translated">以下のようになると結果が出なくなります。</target>
        </trans-unit>
        <trans-unit id="48317d12afba8c65510a05ff0506a5d0b8e6169e" translate="yes" xml:space="preserve">
          <source>There are no public constructors for &lt;code&gt;Group&lt;/code&gt;s; instead use the create methods of &lt;code&gt;GroupLayout&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Group&lt;/code&gt; のパブリックコンストラクタはありません。代わりに、 &lt;code&gt;GroupLayout&lt;/code&gt; のcreateメソッドを使用してください。</target>
        </trans-unit>
        <trans-unit id="11eaa1b9730ffafb16c98ceedb286b10423b443b" translate="yes" xml:space="preserve">
          <source>There are no restrictions on the usage of the pseudo/hidden columns.</source>
          <target state="translated">疑似/非表示カラムの使用方法に制限はありません。</target>
        </trans-unit>
        <trans-unit id="1f86a858cb19185fc92cb0a1478447942a9e681e" translate="yes" xml:space="preserve">
          <source>There are occasions when a &lt;code&gt;RowSet&lt;/code&gt; object has a need to provide a degree of filtering to its contents. One possible solution is to provide a query language for all standard &lt;code&gt;RowSet&lt;/code&gt; implementations; however, this is an impractical approach for lightweight components such as disconnected &lt;code&gt;RowSet&lt;/code&gt; objects. The &lt;code&gt;FilteredRowSet&lt;/code&gt; interface seeks to address this need without supplying a heavyweight query language along with the processing that such a query language would require.</source>
          <target state="translated">とき機会があります &lt;code&gt;RowSet&lt;/code&gt; オブジェクトは、その内容にフィルタリングの程度を提供する必要があります。考えられる解決策の1つは、すべての標準 &lt;code&gt;RowSet&lt;/code&gt; 実装にクエリ言語を提供することです。ただし、これは、切断された &lt;code&gt;RowSet&lt;/code&gt; オブジェクトなどの軽量コンポーネントには実用的ではありません。 &lt;code&gt;FilteredRowSet&lt;/code&gt; インタフェースは、このようなクエリ言語が必要になるという処理と一緒にヘビー級のクエリ言語を供給することなく、このニーズに対処しようとします。</target>
        </trans-unit>
        <trans-unit id="fb1f2720f5e4869f1d5aa33e3942c41021d10b1b" translate="yes" xml:space="preserve">
          <source>There are several basic function shapes, including &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; (unary function from &lt;code&gt;T&lt;/code&gt; to &lt;code&gt;R&lt;/code&gt;), &lt;a href=&quot;consumer&quot;&gt;&lt;code&gt;Consumer&lt;/code&gt;&lt;/a&gt; (unary function from &lt;code&gt;T&lt;/code&gt; to &lt;code&gt;void&lt;/code&gt;), &lt;a href=&quot;predicate&quot;&gt;&lt;code&gt;Predicate&lt;/code&gt;&lt;/a&gt; (unary function from &lt;code&gt;T&lt;/code&gt; to &lt;code&gt;boolean&lt;/code&gt;), and &lt;a href=&quot;supplier&quot;&gt;&lt;code&gt;Supplier&lt;/code&gt;&lt;/a&gt; (nilary function to &lt;code&gt;R&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;T&lt;/code&gt; から &lt;code&gt;R&lt;/code&gt; までの単項関数）、&lt;a href=&quot;consumer&quot;&gt; &lt;code&gt;Consumer&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;T&lt;/code&gt; から &lt;code&gt;void&lt;/code&gt; までの単項関数）、&lt;a href=&quot;predicate&quot;&gt; &lt;code&gt;Predicate&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;T&lt;/code&gt; から &lt;code&gt;boolean&lt;/code&gt; までの単項関数）、&lt;a href=&quot;supplier&quot;&gt; &lt;code&gt;Supplier&lt;/code&gt; &lt;/a&gt;（無関数から &lt;code&gt;R&lt;/code&gt; まで）など、いくつかの基本的な関数の形があります。</target>
        </trans-unit>
        <trans-unit id="8a63d5f151634cfa4901bd743c74eb6cb121b4d4" translate="yes" xml:space="preserve">
          <source>There are several basic function shapes, including &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; (unary function from &lt;code&gt;T&lt;/code&gt; to &lt;code&gt;R&lt;/code&gt;), &lt;a href=&quot;consumer&quot;&gt;&lt;code&gt;Consumer&lt;/code&gt;&lt;/a&gt; (unary function from &lt;code&gt;T&lt;/code&gt; to &lt;code&gt;void&lt;/code&gt;), &lt;a href=&quot;predicate&quot;&gt;&lt;code&gt;Predicate&lt;/code&gt;&lt;/a&gt; (unary function from &lt;code&gt;T&lt;/code&gt; to &lt;code&gt;boolean&lt;/code&gt;), and &lt;a href=&quot;supplier&quot;&gt;&lt;code&gt;Supplier&lt;/code&gt;&lt;/a&gt; (nullary function to &lt;code&gt;R&lt;/code&gt;).</source>
          <target state="translated">含むいくつかの基本的な機能の形状、存在する&lt;a href=&quot;function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;（単項関数から &lt;code&gt;T&lt;/code&gt; へ &lt;code&gt;R&lt;/code&gt; ）、&lt;a href=&quot;consumer&quot;&gt; &lt;code&gt;Consumer&lt;/code&gt; &lt;/a&gt;（から単項関数 &lt;code&gt;T&lt;/code&gt; へ &lt;code&gt;void&lt;/code&gt; ）、&lt;a href=&quot;predicate&quot;&gt; &lt;code&gt;Predicate&lt;/code&gt; &lt;/a&gt;（から単項関数 &lt;code&gt;T&lt;/code&gt; する &lt;code&gt;boolean&lt;/code&gt; ）、および&lt;a href=&quot;supplier&quot;&gt; &lt;code&gt;Supplier&lt;/code&gt; &lt;/a&gt;（への引数なしの関数 &lt;code&gt;R&lt;/code&gt; が）。</target>
        </trans-unit>
        <trans-unit id="a2da96ddea93cc96c7a3493bc185e3b88403db18" translate="yes" xml:space="preserve">
          <source>There are several compatibility concerns to keep in mind if an annotation type</source>
          <target state="translated">アノテーションタイプの場合、いくつかの互換性の問題があります。</target>
        </trans-unit>
        <trans-unit id="4d6b76f15b787736c9401a42c8c4bb8a7e713611" translate="yes" xml:space="preserve">
          <source>There are several different ways to create a &lt;code&gt;Locale&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Locale&lt;/code&gt; オブジェクトを作成する方法はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="a7060bfcb421675b4266cd9db4d3a9cd95d172c8" translate="yes" xml:space="preserve">
          <source>There are several goals of the HTML EditorKit provided, that have an effect upon the way that HTML is modeled. These have influenced its design in a substantial way.</source>
          <target state="translated">提供されているHTML EditorKitには、HTMLがモデル化される方法に影響を与えるいくつかの目標があります。これらは、そのデザインにかなりの影響を与えています。</target>
        </trans-unit>
        <trans-unit id="9ad010658753417b64166337fccfa2064b4e7316" translate="yes" xml:space="preserve">
          <source>There are several reasons why an enabled cipher suite might not actually be used. For example: the server socket might not have appropriate private keys available to it or the cipher suite might be anonymous, precluding the use of client authentication, while the server socket has been told to require that sort of authentication.</source>
          <target state="translated">有効な暗号化スイートが実際に使用されない理由はいくつかある。例えば、サーバソケットが適切な秘密鍵を持っていなかったり、暗号化スイートが匿名であるためにクライアント認証ができなかったり、サーバソケットがそのような認証を必要としているのに、暗号化スイートが匿名である場合などです。</target>
        </trans-unit>
        <trans-unit id="06a988002378eef1c65c03ab8ae35ac92c999ee3" translate="yes" xml:space="preserve">
          <source>There are several restrictions on the parameters that may be passed to &lt;code&gt;Proxy.getProxyClass&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Proxy.getProxyClass&lt;/code&gt; に渡すことができるパラメーターにはいくつかの制限があります。</target>
        </trans-unit>
        <trans-unit id="7849eb124160ec5f6f98e9369d9e1fccc3c10479" translate="yes" xml:space="preserve">
          <source>There are several types of complex buffer strategies, including sequential ring buffering and blit buffering. Sequential ring buffering (i.e., double or triple buffering) is the most common; an application draws to a single</source>
          <target state="translated">複雑なバッファ戦略には、シーケンシャル リング バッファリングやブリット バッファリングなど、いくつかのタイプがあります。シーケンシャル・リング・バッファリング(ダブルまたはトリプル・バッファリング)は最も一般的なもので、アプリケーションは単一の</target>
        </trans-unit>
        <trans-unit id="065674b7ad4255710f31cf384fdf0ef078f22e00" translate="yes" xml:space="preserve">
          <source>There are several ways to load content into this component.</source>
          <target state="translated">このコンポーネントにコンテンツをロードする方法はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="bab2a8d3e9688f6ae91f468c2fa96062036606d4" translate="yes" xml:space="preserve">
          <source>There are three different names that you can get from a &lt;code&gt;Font&lt;/code&gt; object. The &lt;em&gt;logical font name&lt;/em&gt; is simply the name that was used to construct the font. The &lt;em&gt;font face name&lt;/em&gt;, or just &lt;em&gt;font name&lt;/em&gt; for short, is the name of a particular font face, like Helvetica Bold. The &lt;em&gt;family name&lt;/em&gt; is the name of the font family that determines the typographic design across several faces, like Helvetica.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; オブジェクトから取得できる3つの異なる名前があります。&lt;em&gt;論理フォント名は、&lt;/em&gt;単にフォントを構築するために使用された名前です。&lt;em&gt;フォントフェース名&lt;/em&gt;、または単に&lt;em&gt;フォント名&lt;/em&gt;の短いためには、太字のHelveticaのように、特定のフォントフェースの名前です。&lt;em&gt;姓は&lt;/em&gt;ヘルベチカのように、いくつかの面を越えて文字体裁デザインを決定し、フォントファミリの名前です。</target>
        </trans-unit>
        <trans-unit id="3bd6f67a832bd215f4e92e1b7ec5044236848741" translate="yes" xml:space="preserve">
          <source>There are three general strategies for queuing:</source>
          <target state="translated">キューイングの一般的な戦略は3つあります。</target>
        </trans-unit>
        <trans-unit id="a75f24f0c160cfac7adb08056cdce581127cc3e7" translate="yes" xml:space="preserve">
          <source>There are three kinds of Monitors:</source>
          <target state="translated">モニターには3種類あります。</target>
        </trans-unit>
        <trans-unit id="b0b5cd9acd8eb019e375df17f00020fb7070078d" translate="yes" xml:space="preserve">
          <source>There are three kinds of possible values: orientation relative, baseline relative and absolute. Orientation relative values are interpreted relative to the container's component orientation property, baseline relative values are interpreted relative to the baseline and absolute values are not. The absolute values are: &lt;code&gt;CENTER&lt;/code&gt;, &lt;code&gt;NORTH&lt;/code&gt;, &lt;code&gt;NORTHEAST&lt;/code&gt;, &lt;code&gt;EAST&lt;/code&gt;, &lt;code&gt;SOUTHEAST&lt;/code&gt;, &lt;code&gt;SOUTH&lt;/code&gt;, &lt;code&gt;SOUTHWEST&lt;/code&gt;, &lt;code&gt;WEST&lt;/code&gt;, and &lt;code&gt;NORTHWEST&lt;/code&gt;. The orientation relative values are: &lt;code&gt;PAGE_START&lt;/code&gt;, &lt;code&gt;PAGE_END&lt;/code&gt;, &lt;code&gt;LINE_START&lt;/code&gt;, &lt;code&gt;LINE_END&lt;/code&gt;, &lt;code&gt;FIRST_LINE_START&lt;/code&gt;, &lt;code&gt;FIRST_LINE_END&lt;/code&gt;, &lt;code&gt;LAST_LINE_START&lt;/code&gt; and &lt;code&gt;LAST_LINE_END&lt;/code&gt;. The baseline relative values are: &lt;code&gt;BASELINE&lt;/code&gt;, &lt;code&gt;BASELINE_LEADING&lt;/code&gt;, &lt;code&gt;BASELINE_TRAILING&lt;/code&gt;, &lt;code&gt;ABOVE_BASELINE&lt;/code&gt;, &lt;code&gt;ABOVE_BASELINE_LEADING&lt;/code&gt;, &lt;code&gt;ABOVE_BASELINE_TRAILING&lt;/code&gt;, &lt;code&gt;BELOW_BASELINE&lt;/code&gt;, &lt;code&gt;BELOW_BASELINE_LEADING&lt;/code&gt;, and &lt;code&gt;BELOW_BASELINE_TRAILING&lt;/code&gt;. The default value is &lt;code&gt;CENTER&lt;/code&gt;.</source>
          <target state="translated">可能な値には、方向相対、ベースライン相対、絶対の3種類があります。方向の相対値は、コンテナのコンポーネントの方向プロパティを基準にして解釈されます。ベースラインの相対値は、ベースラインを基準にして解釈されますが、絶対値は解釈されません。絶対値は： &lt;code&gt;CENTER&lt;/code&gt; 、 &lt;code&gt;NORTH&lt;/code&gt; 、 &lt;code&gt;NORTHEAST&lt;/code&gt; 、 &lt;code&gt;EAST&lt;/code&gt; 、 &lt;code&gt;SOUTHEAST&lt;/code&gt; 、 &lt;code&gt;SOUTH&lt;/code&gt; 、 &lt;code&gt;SOUTHWEST&lt;/code&gt; 、 &lt;code&gt;WEST&lt;/code&gt; 、および &lt;code&gt;NORTHWEST&lt;/code&gt; 。方向の相対値は次の &lt;code&gt;PAGE_START&lt;/code&gt; です：PAGE_START、 &lt;code&gt;PAGE_END&lt;/code&gt; 、 &lt;code&gt;LINE_START&lt;/code&gt; 、 &lt;code&gt;LINE_END&lt;/code&gt; 、 &lt;code&gt;FIRST_LINE_START&lt;/code&gt; 、 &lt;code&gt;FIRST_LINE_END&lt;/code&gt; 、 &lt;code&gt;LAST_LINE_START&lt;/code&gt; 、および &lt;code&gt;LAST_LINE_END&lt;/code&gt; 。ベースラインの相対値は、次のとおり &lt;code&gt;BASELINE&lt;/code&gt; 、 &lt;code&gt;BASELINE_LEADING&lt;/code&gt; 、 &lt;code&gt;BASELINE_TRAILING&lt;/code&gt; 、 &lt;code&gt;ABOVE_BASELINE&lt;/code&gt; 、 &lt;code&gt;ABOVE_BASELINE_LEADING&lt;/code&gt; 、 &lt;code&gt;ABOVE_BASELINE_TRAILING&lt;/code&gt; 、 &lt;code&gt;BELOW_BASELINE&lt;/code&gt; 、 &lt;code&gt;BELOW_BASELINE_LEADING&lt;/code&gt; 、及び &lt;code&gt;BELOW_BASELINE_TRAILING&lt;/code&gt; 。デフォルト値は &lt;code&gt;CENTER&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c25e15fc967b546c584ccdefa3b60e5531758f54" translate="yes" xml:space="preserve">
          <source>There are three main models for triggering a push of the buffer:</source>
          <target state="translated">バッファーのプッシュをトリガーにする機種は大きく分けて3つあります。</target>
        </trans-unit>
        <trans-unit id="0b997529c7c84200f70fc10cb9c45ebe777ca580" translate="yes" xml:space="preserve">
          <source>There are three phases to the use of a Signature object for either signing data or verifying a signature:</source>
          <target state="translated">データに署名したり、署名を検証したりするための署名オブジェクトの使用には、3つのフェーズがあります。</target>
        </trans-unit>
        <trans-unit id="727bc37c42491a711f91a5d5785d8bca4a3a886a" translate="yes" xml:space="preserve">
          <source>There are three possible events for a &lt;code&gt;RowSet&lt;/code&gt; object:</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; オブジェクトには3つの可能なイベントがあります。</target>
        </trans-unit>
        <trans-unit id="9a114e0c5ecd87e992d3fcc0bb2519744081844d" translate="yes" xml:space="preserve">
          <source>There are three predefined modes that specify possible masters for a sequencer: &lt;code&gt;INTERNAL_CLOCK&lt;/code&gt;, &lt;code&gt;MIDI_SYNC&lt;/code&gt;, and &lt;code&gt;MIDI_TIME_CODE&lt;/code&gt;. The latter two work if the sequencer receives MIDI messages from another device. In these two modes, the sequencer's time gets reset based on system real-time timing clock messages or MIDI time code (MTC) messages, respectively. These two modes can also be used as slave modes, in which case the sequencer sends the corresponding types of MIDI messages to its receiver (whether or not the sequencer is also receiving them from a master). A fourth mode, &lt;code&gt;NO_SYNC&lt;/code&gt;, is used to indicate that the sequencer should not control its receiver's timing.</source>
          <target state="translated">シーケンサーに使用できるマスターを指定する事前定義モードには、 &lt;code&gt;INTERNAL_CLOCK&lt;/code&gt; 、 &lt;code&gt;MIDI_SYNC&lt;/code&gt; 、および &lt;code&gt;MIDI_TIME_CODE&lt;/code&gt; の 3つがあります。後者の2つは、シーケンサーが別のデバイスからMIDIメッセージを受信した場合に機能します。これら2つのモードでは、シーケンサーの時間は、それぞれシステムのリアルタイムタイミングクロックメッセージまたはMIDIタイムコード（MTC）メッセージに基づいてリセットされます。これらの2つのモードはスレーブモードとしても使用できます。この場合、シーケンサーは対応するタイプのMIDIメッセージをレシーバーに送信します（シーケンサーがマスターからメッセージを受信して​​いるかどうかは関係ありません）。 4番目のモードである &lt;code&gt;NO_SYNC&lt;/code&gt; は、シーケンサーがレシーバーのタイミングを制御してはならないことを示すために使用されます。</target>
        </trans-unit>
        <trans-unit id="06fc3adaa09a9dc4abdad7a4769f286bc1581a6a" translate="yes" xml:space="preserve">
          <source>There are three threads involved in the life cycle of a &lt;code&gt;SwingWorker&lt;/code&gt; :</source>
          <target state="translated">&lt;code&gt;SwingWorker&lt;/code&gt; のライフサイクルには3つのスレッドが関係しています。</target>
        </trans-unit>
        <trans-unit id="f9f4282a0141a82a2de17fffc9351d57e318a288" translate="yes" xml:space="preserve">
          <source>There are three ways in which connection request controls are set:</source>
          <target state="translated">接続要求コントロールを設定するには、3 つの方法があります。</target>
        </trans-unit>
        <trans-unit id="f4b25b98bbf1bed6a0ab1c73f9a3229fba6803ca" translate="yes" xml:space="preserve">
          <source>There are two basic models of what attributes should be associated with. First, attributes may be directly associated with a DirContext object. In this model, an attribute operation on the named object is roughly equivalent to a lookup on the name (which returns the DirContext object), followed by the attribute operation invoked on the DirContext object in which the caller supplies an empty name. The attributes can be viewed as being stored along with the object (note that this does not imply that the implementation must do so).</source>
          <target state="translated">アトリビュートがどのようなものに関連付けられるべきかについては、2 つの基本的なモデルがあります。まず、属性は DirContext オブジェクトに直接関連付けることができます。このモデルでは、名前のついたオブジェクトに対する属性操作は、名前の検索 (DirContext オブジェクトを返す)とほぼ同等のものであり、その後に DirContext オブジェクトに対して呼び出された属性操作が行われ、呼び出し元が空の名前を提供することになります。属性はオブジェクトと一緒に保存されていると見ることができます (これは実装がそうしなければならないということを意味するものではないことに注意してください)。</target>
        </trans-unit>
        <trans-unit id="6277a3c91d311327a3eead7b7d8b16a596430d2c" translate="yes" xml:space="preserve">
          <source>There are two broad categories of print data, client formatted print data and service formatted print data.</source>
          <target state="translated">印刷データには、大きく分けて、クライアントフォーマットの印刷データとサービスフォーマットの印刷データがあります。</target>
        </trans-unit>
        <trans-unit id="e053f696696474cc554e2ee656c6df0dd65d2bd6" translate="yes" xml:space="preserve">
          <source>There are two common implementations. &lt;a href=&quot;../period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; is a date-based implementation, storing years, months and days. &lt;a href=&quot;../duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; is a time-based implementation, storing seconds and nanoseconds, but providing some access using other duration based units such as minutes, hours and fixed 24-hour days.</source>
          <target state="translated">2つの一般的な実装があります。&lt;a href=&quot;../period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; &lt;/a&gt;は日付ベースの実装であり、年、月、日を格納します。&lt;a href=&quot;../duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;は時間ベースの実装であり、秒とナノ秒を格納しますが、分、時間、固定24時間などの他の期間ベースの単位を使用して一部のアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="ebfd465408d113172e53262f7239645338b176ec" translate="yes" xml:space="preserve">
          <source>There are two distinguished supported locations (subtrees within the logical file system) where newly created files are placed: one for &lt;a href=&quot;../../tools/standardlocation#SOURCE_OUTPUT&quot;&gt;new source files&lt;/a&gt;, and one for &lt;a href=&quot;../../tools/standardlocation#CLASS_OUTPUT&quot;&gt;new class files&lt;/a&gt;. (These might be specified on a tool's command line, for example, using flags such as &lt;code&gt;-s&lt;/code&gt; and &lt;code&gt;-d&lt;/code&gt;.) The actual locations for new source files and new class files may or may not be distinct on a particular run of the tool. Resource files may be created in either location. The methods for reading and writing resources take a relative name argument. A relative name is a non-null, non-empty sequence of path segments separated by &lt;code&gt;'/'&lt;/code&gt;; &lt;code&gt;'.'&lt;/code&gt; and &lt;code&gt;'..'&lt;/code&gt; are invalid path segments. A valid relative name must match the &quot;path-rootless&quot; rule of &lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;, section 3.3.</source>
          <target state="translated">新しく作成されたファイルが配置される、サポートされている2つの区別された場所（論理ファイルシステム内のサブツリー）があります。1つは&lt;a href=&quot;../../tools/standardlocation#SOURCE_OUTPUT&quot;&gt;新しいソースファイル用&lt;/a&gt;、もう1つは&lt;a href=&quot;../../tools/standardlocation#CLASS_OUTPUT&quot;&gt;新しいクラスファイル&lt;/a&gt;用です。 （これらは、たとえば &lt;code&gt;-s&lt;/code&gt; や &lt;code&gt;-d&lt;/code&gt; などのフラグを使用して、ツールのコマンドラインで指定できます。）新しいソースファイルと新しいクラスファイルの実際の場所は、ツールの特定の実行で異なる場合があります。リソースファイルはどちらの場所にも作成できます。リソースの読み取りと書き込みのメソッドは、相対名の引数を取ります。相対名は、 &lt;code&gt;'/'&lt;/code&gt; で区切られたパスセグメントのnull以外で空でないシーケンスです。 &lt;code&gt;'.'&lt;/code&gt; と &lt;code&gt;'..'&lt;/code&gt; 無効なパスセグメントです。有効な相対名は、&lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986の&lt;/a&gt;セクション3.3の「パスルートレス」ルールに一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="d63c8b5fdaabf726c4340f0c67e85e581f64ce1a" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using a &lt;code&gt;TemporalAdjuster&lt;/code&gt;. The first is to invoke the method on the interface directly. The second is to use &lt;a href=&quot;temporal#with(java.time.temporal.TemporalAdjuster)&quot;&gt;&lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;TemporalAdjuster&lt;/code&gt; を使用する2つの同等の方法があります。1つは、インターフェイスでメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporal#with(java.time.temporal.TemporalAdjuster)&quot;&gt; &lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="72119fc16750a087fcef97d6993f73e9c9d8b934" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using a &lt;code&gt;TemporalAdjuster&lt;/code&gt;. The first is to invoke the method on the interface directly. The second is to use &lt;a href=&quot;temporal#with-java.time.temporal.TemporalAdjuster-&quot;&gt;&lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;TemporalAdjuster&lt;/code&gt; を使用する同等の方法が2つあります。1つ目は、インターフェイスのメソッドを直接呼び出すことです。2つ目は&lt;a href=&quot;temporal#with-java.time.temporal.TemporalAdjuster-&quot;&gt; &lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="c33eab314554bc07e34728c7b5c68f5a205347ba" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using a &lt;code&gt;TemporalAdjuster&lt;/code&gt;. The first is to invoke the method on this interface directly. The second is to use &lt;a href=&quot;temporal#with(java.time.temporal.TemporalAdjuster)&quot;&gt;&lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;TemporalAdjuster&lt;/code&gt; を使用する2つの同等の方法があります。1つ目は、このインターフェイスでメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporal#with(java.time.temporal.TemporalAdjuster)&quot;&gt; &lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="122c9761aea7bb48c6b202253cc10ffaf3858a78" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using a &lt;code&gt;TemporalAdjuster&lt;/code&gt;. The first is to invoke the method on this interface directly. The second is to use &lt;a href=&quot;temporal#with-java.time.temporal.TemporalAdjuster-&quot;&gt;&lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;TemporalAdjuster&lt;/code&gt; を使用する同等の方法が2つあります。1つ目は、このインターフェイスのメソッドを直接呼び出すことです。2つ目は&lt;a href=&quot;temporal#with-java.time.temporal.TemporalAdjuster-&quot;&gt; &lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="c9cf902b16106608a1ec02f9c62ad6970669fa9a" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using a &lt;code&gt;TemporalQuery&lt;/code&gt;. The first is to invoke the method on this interface directly. The second is to use &lt;a href=&quot;temporalaccessor#query(java.time.temporal.TemporalQuery)&quot;&gt;&lt;code&gt;TemporalAccessor.query(TemporalQuery)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;TemporalQuery&lt;/code&gt; を使用する2つの同等の方法があります。1つ目は、このインターフェイスでメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporalaccessor#query(java.time.temporal.TemporalQuery)&quot;&gt; &lt;code&gt;TemporalAccessor.query(TemporalQuery)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="221c7636be87b0733017baa83864b434059c108b" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using a &lt;code&gt;TemporalQuery&lt;/code&gt;. The first is to invoke the method on this interface directly. The second is to use &lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt;&lt;code&gt;TemporalAccessor.query(TemporalQuery)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;TemporalQuery&lt;/code&gt; を使用する同等の方法が2つあります。1つ目は、このインターフェイスのメソッドを直接呼び出すことです。2つ目は&lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt; &lt;code&gt;TemporalAccessor.query(TemporalQuery)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="28a74aa077d1efbd4dc327f7482aa6c4fdf7ca7d" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#minus(java.time.temporal.TemporalAmount)&quot;&gt;&lt;code&gt;Temporal.minus(TemporalAmount)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法を使用するには、2つの同等の方法があります。1つは、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporal#minus(java.time.temporal.TemporalAmount)&quot;&gt; &lt;code&gt;Temporal.minus(TemporalAmount)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="4f6ddab868b4d8af37cbc5e13d59377eb7bc1e1b" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#minus-java.time.temporal.TemporalAmount-&quot;&gt;&lt;code&gt;Temporal.minus(TemporalAmount)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2番目は&lt;a href=&quot;temporal#minus-java.time.temporal.TemporalAmount-&quot;&gt; &lt;code&gt;Temporal.minus(TemporalAmount)&lt;/code&gt; &lt;/a&gt;を使用することです：</target>
        </trans-unit>
        <trans-unit id="e233a0092aeb3207a767441e598623c26eda0016" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#plus(java.time.temporal.TemporalAmount)&quot;&gt;&lt;code&gt;Temporal.plus(TemporalAmount)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法を使用するには、2つの同等の方法があります。1つは、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporal#plus(java.time.temporal.TemporalAmount)&quot;&gt; &lt;code&gt;Temporal.plus(TemporalAmount)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="3912c8fc49848c13654d6a3b29033b645f8eab63" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;Temporal.plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法を使用するには、2つの同等の方法があります。1つは、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporal#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;Temporal.plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="9a9f36371a08c9e03929b3d371a732fe25c15a1a" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#plus-java.time.temporal.TemporalAmount-&quot;&gt;&lt;code&gt;Temporal.plus(TemporalAmount)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2番目は&lt;a href=&quot;temporal#plus-java.time.temporal.TemporalAmount-&quot;&gt; &lt;code&gt;Temporal.plus(TemporalAmount)&lt;/code&gt; &lt;/a&gt;を使用することです：</target>
        </trans-unit>
        <trans-unit id="19622de3e1de5aa717583d3f58905f5525534b2a" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;Temporal.plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2つ目は&lt;a href=&quot;temporal#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;Temporal.plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;を使用することです：</target>
        </trans-unit>
        <trans-unit id="ddf8faaa49b113ace9e8d9f3f14fb0866233d417" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;Temporal.until(Temporal, TemporalUnit)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法を使用するには、2つの同等の方法があります。1つは、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporal#until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;Temporal.until(Temporal, TemporalUnit)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="dc7049dde645017bc74c4cfbcd545b88a0f9312c" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#until-java.time.temporal.Temporal-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;Temporal.until(Temporal, TemporalUnit)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2つ目は&lt;a href=&quot;temporal#until-java.time.temporal.Temporal-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;Temporal.until(Temporal, TemporalUnit)&lt;/code&gt; &lt;/a&gt;を使用することです：</target>
        </trans-unit>
        <trans-unit id="085d9b02cf26b7e6f7c300c589e8f64694fdb61d" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#with(java.time.temporal.TemporalAdjuster)&quot;&gt;&lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法を使用するには、2つの同等の方法があります。1つは、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporal#with(java.time.temporal.TemporalAdjuster)&quot;&gt; &lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="9a0eb55a617a2c0898ebdaf88068239d76f9dcdc" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#with(java.time.temporal.TemporalField,long)&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法を使用するには、2つの同等の方法があります。1つは、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporal#with(java.time.temporal.TemporalField,long)&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="14641be0ebbb10666cf02dfef66e60e2e24f19de" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#with-java.time.temporal.TemporalAdjuster-&quot;&gt;&lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2つ目は&lt;a href=&quot;temporal#with-java.time.temporal.TemporalAdjuster-&quot;&gt; &lt;code&gt;Temporal.with(TemporalAdjuster)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="23c7abacd277c7c67a02cfdac67f8ec2ddb1e2a7" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporal#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporal#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;Temporal.with(TemporalField, long)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="f050118cb156fd672c72e9416109da76aa7bc843" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporalaccessor#getLong(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;TemporalAccessor.getLong(TemporalField)&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;temporalaccessor#get(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;TemporalAccessor.get(TemporalField)&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">この方法を使用するには、2つの同等の方法があります。1つは、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporalaccessor#getLong(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;TemporalAccessor.getLong(TemporalField)&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;temporalaccessor#get(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;TemporalAccessor.get(TemporalField)&lt;/code&gt; &lt;/a&gt;）を使用することです。</target>
        </trans-unit>
        <trans-unit id="d131f4265fdeb909d228a96a8cfb3506d44f7ffe" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporalaccessor#getLong-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;TemporalAccessor.getLong(TemporalField)&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;TemporalAccessor.get(TemporalField)&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporalaccessor#getLong-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;TemporalAccessor.getLong(TemporalField)&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;temporalaccessor#get-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;TemporalAccessor.get(TemporalField)&lt;/code&gt; &lt;/a&gt;）を使用することです。</target>
        </trans-unit>
        <trans-unit id="718e19b86f1c018be2151c92c4d105c8f339ffb5" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporalaccessor#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;TemporalAccessor.isSupported(TemporalField)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法を使用するには、2つの同等の方法があります。1つは、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporalaccessor#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;TemporalAccessor.isSupported(TemporalField)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="69e761971c5e4cae8513f296453b2fac6111a7fc" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporalaccessor#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;TemporalAccessor.isSupported(TemporalField)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporalaccessor#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;TemporalAccessor.isSupported(TemporalField)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="71169b1735c1b9aa5050cda8d9ec6f930958721b" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporalaccessor#query(java.time.temporal.TemporalQuery)&quot;&gt;&lt;code&gt;TemporalAccessor.query(TemporalQuery)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法を使用するには、2つの同等の方法があります。1つは、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporalaccessor#query(java.time.temporal.TemporalQuery)&quot;&gt; &lt;code&gt;TemporalAccessor.query(TemporalQuery)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="7a30794131e2de9a5dbaf4c9a1f6157f885e685a" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt;&lt;code&gt;TemporalAccessor.query(TemporalQuery)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2つ目は&lt;a href=&quot;temporalaccessor#query-java.time.temporal.TemporalQuery-&quot;&gt; &lt;code&gt;TemporalAccessor.query(TemporalQuery)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="ec76f64ef6ab13faacb8097462f1b044aecfde13" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporalaccessor#range(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;TemporalAccessor.range(TemporalField)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法を使用するには、2つの同等の方法があります。1つは、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporalaccessor#range(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;TemporalAccessor.range(TemporalField)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="b82d66ee70b01eb4f8a3cda3c1d15d8275ac3e27" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporalaccessor#range-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;TemporalAccessor.range(TemporalField)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporalaccessor#range-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;TemporalAccessor.range(TemporalField)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="dff5d0eaca16b70485b61e851f9043fbb98d46b2" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporalunit#between(java.time.temporal.Temporal,java.time.temporal.Temporal)&quot;&gt;&lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法を使用するには、2つの同等の方法があります。1つは、このメソッドを直接呼び出すことです。2つ目は、&lt;a href=&quot;temporalunit#between(java.time.temporal.Temporal,java.time.temporal.Temporal)&quot;&gt; &lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="f81056ea2c2becde1c2107f4139e24e0e6b5fd30" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use &lt;a href=&quot;temporalunit#between-java.time.temporal.Temporal-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを直接呼び出すことです。2番目は、&lt;a href=&quot;temporalunit#between-java.time.temporal.Temporal-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="267ab52c267ee1476943eb4633898b3fdbd746d6" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method. The second is to use &lt;a href=&quot;../temporal/temporalunit#between(java.time.temporal.Temporal,java.time.temporal.Temporal)&quot;&gt;&lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法を使用するには、2つの同等の方法があります。1つ目は、このメソッドを呼び出すことです。2つ目は、&lt;a href=&quot;../temporal/temporalunit#between(java.time.temporal.Temporal,java.time.temporal.Temporal)&quot;&gt; &lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="01700b17f3c068ac68e900641c6f6a6834b85ea7" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method. The second is to use &lt;a href=&quot;../temporal/temporalunit#between-java.time.temporal.Temporal-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを呼び出すことです。2番目は、&lt;a href=&quot;../temporal/temporalunit#between-java.time.temporal.Temporal-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="19d8f7a23531eed743941483834a3922f9197390" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method. The second is to use &lt;a href=&quot;period#between(java.time.LocalDate,java.time.LocalDate)&quot;&gt;&lt;code&gt;Period.between(LocalDate, LocalDate)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法を使用するには、2つの同等の方法があります。1つ目は、このメソッドを呼び出すことです。2つ目は、&lt;a href=&quot;period#between(java.time.LocalDate,java.time.LocalDate)&quot;&gt; &lt;code&gt;Period.between(LocalDate, LocalDate)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="c69dd529f917ee2a2e64e1fed358cbede056afdf" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method. The second is to use &lt;a href=&quot;period#between-java.time.LocalDate-java.time.LocalDate-&quot;&gt;&lt;code&gt;Period.between(LocalDate, LocalDate)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを呼び出すことです。2つ目は、&lt;a href=&quot;period#between-java.time.LocalDate-java.time.LocalDate-&quot;&gt; &lt;code&gt;Period.between(LocalDate, LocalDate)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="9492b93e045a3bf79273fb130acffec66707289f" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method. The second is to use &lt;a href=&quot;temporal/temporalunit#between(java.time.temporal.Temporal,java.time.temporal.Temporal)&quot;&gt;&lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法を使用するには、2つの同等の方法があります。1つ目は、このメソッドを呼び出すことです。2つ目は、&lt;a href=&quot;temporal/temporalunit#between(java.time.temporal.Temporal,java.time.temporal.Temporal)&quot;&gt; &lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="31b6839d92a1d7cc91a6f3682b7584519c917ea6" translate="yes" xml:space="preserve">
          <source>There are two equivalent ways of using this method. The first is to invoke this method. The second is to use &lt;a href=&quot;temporal/temporalunit#between-java.time.temporal.Temporal-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">この方法には、2つの同等の方法があります。1つ目は、このメソッドを呼び出すことです。2番目は、&lt;a href=&quot;temporal/temporalunit#between-java.time.temporal.Temporal-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt; &lt;/a&gt;を使用することです。</target>
        </trans-unit>
        <trans-unit id="b7019f051004e11b6b00277ad3a368c81695ab5e" translate="yes" xml:space="preserve">
          <source>There are two forms for RMI connector addresses:</source>
          <target state="translated">RMI コネクタのアドレスには、2 つの形式があります。</target>
        </trans-unit>
        <trans-unit id="e53aaf7a78abd414d9fb78d865d3dc8bfb49f2f5" translate="yes" xml:space="preserve">
          <source>There are two general types of decoding errors. If the input byte sequence is not legal for this charset then the input is considered</source>
          <target state="translated">デコードエラーには2つの一般的なタイプがあります。入力バイト列がこの文字セットに適していない場合、その入力は</target>
        </trans-unit>
        <trans-unit id="8736c93a7b7bb502b162e668f9dc8978cdb0b6fc" translate="yes" xml:space="preserve">
          <source>There are two general types of encoding errors. If the input character sequence is not a legal sixteen-bit Unicode sequence then the input is considered</source>
          <target state="translated">エンコーディングエラーには一般的に2つのタイプがあります。入力された文字列が正規の16ビットUnicode配列ではない場合、その入力は</target>
        </trans-unit>
        <trans-unit id="bd7ebb4ee3bd1aaafa978527a6396c0b5c9c4cf7" translate="yes" xml:space="preserve">
          <source>There are two groups of cipher suites which you will need to know about when managing cipher suites:</source>
          <target state="translated">暗号スイートを管理する際に知っておく必要がある暗号スイートには 2 つのグループがあります。</target>
        </trans-unit>
        <trans-unit id="36e94429dce8a0432578760912963aff83ad3eb1" translate="yes" xml:space="preserve">
          <source>There are two kinds of JNDI resource files: &lt;em&gt;provider&lt;/em&gt; and &lt;em&gt;application&lt;/em&gt;.</source>
          <target state="translated">JNDIリソースファイルには、&lt;em&gt;プロバイダー&lt;/em&gt;と&lt;em&gt;アプリケーションの&lt;/em&gt; 2種類があり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f62d3a9ac7482c31f4f464bf796548b98efcc186" translate="yes" xml:space="preserve">
          <source>There are two kinds of transformers, determined by the &lt;code&gt;canRetransform&lt;/code&gt; parameter of &lt;a href=&quot;instrumentation#addTransformer(java.lang.instrument.ClassFileTransformer,boolean)&quot;&gt;&lt;code&gt;Instrumentation.addTransformer(ClassFileTransformer,boolean)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;instrumentation#addTransformer(java.lang.instrument.ClassFileTransformer,boolean)&quot;&gt; &lt;code&gt;Instrumentation.addTransformer(ClassFileTransformer,boolean)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;canRetransform&lt;/code&gt; パラメーターによって決定される2種類のトランスフォーマーがあります。</target>
        </trans-unit>
        <trans-unit id="b1f12fecd42a80e7f754001eddff6ff78d61515c" translate="yes" xml:space="preserve">
          <source>There are two kinds of transformers, determined by the &lt;code&gt;canRetransform&lt;/code&gt; parameter of &lt;a href=&quot;instrumentation#addTransformer-java.lang.instrument.ClassFileTransformer-boolean-&quot;&gt;&lt;code&gt;Instrumentation.addTransformer(ClassFileTransformer,boolean)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;instrumentation#addTransformer-java.lang.instrument.ClassFileTransformer-boolean-&quot;&gt; &lt;code&gt;Instrumentation.addTransformer(ClassFileTransformer,boolean)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;canRetransform&lt;/code&gt; パラメータによって決定される2種類のトランスフォーマがあります。</target>
        </trans-unit>
        <trans-unit id="ad3d3d9ea7e13c7b9058e166fab62bea6cb7e20a" translate="yes" xml:space="preserve">
          <source>There are two levels of focus events: permanent and temporary. Permanent focus change events occur when focus is directly moved from one Component to another, such as through a call to requestFocus() or as the user uses the TAB key to traverse Components. Temporary focus change events occur when focus is temporarily lost for a Component as the indirect result of another operation, such as Window deactivation or a Scrollbar drag. In this case, the original focus state will automatically be restored once that operation is finished, or, for the case of Window deactivation, when the Window is reactivated. Both permanent and temporary focus events are delivered using the FOCUS_GAINED and FOCUS_LOST event ids; the level may be distinguished in the event using the isTemporary() method.</source>
          <target state="translated">フォーカス イベントには、恒久的なものと一時的なものの 2 つのレベルがあります。恒久的なフォーカス変更イベントは、requestFocus()の呼び出しや TAB キーを使用してコンポーネントを移動するなど、フォーカスがあるコンポーネントから別のコンポーネントに直接移動した場合に発生します。一時的なフォーカス変更イベントは、ウィンドウの非アクティブ化やスクロールバーのドラッグなど、別の操作の間接的な結果としてコンポーネントのフォーカスが一時的に失われた場合に発生します。この場合、元のフォーカス状態は、その操作が終了すると自動的に復元されます。永久的なフォーカス イベントと一時的なフォーカス イベントの両方とも、FOCUS_GAINED および FOCUS_LOST イベント ID を使用して配信されます。</target>
        </trans-unit>
        <trans-unit id="80be071c6ecd97b5c0ebef1df8ee841bd2ad1fb8" translate="yes" xml:space="preserve">
          <source>There are two other possible locale sensitive service providers, i.e., &quot;CLDR&quot; which is a provider based on Unicode Consortium's &lt;a href=&quot;http://cldr.unicode.org/&quot;&gt;CLDR Project&lt;/a&gt;, and &quot;HOST&quot; which is a provider that reflects the user's custom settings in the underlying operating system. These two providers may not be available, depending on the Java Runtime Environment implementation. Specifying &quot;JRE,SPI&quot; is identical to the default behavior, which is compatibile with the prior releases.</source>
          <target state="translated">ロケールに依存するサービスプロバイダーには、他に2つあります。つまり、Unicodeコンソーシアムの&lt;a href=&quot;http://cldr.unicode.org/&quot;&gt;CLDRプロジェクト&lt;/a&gt;に基づくプロバイダーである「CLDR」と、基盤となるオペレーティングシステムでのユーザーのカスタム設定を反映するプロバイダーである「HOST」です。これら2つのプロバイダーは、Javaランタイム環境の実装によっては使用できない場合があります。「JRE、SPI」の指定はデフォルトの動作と同じであり、以前のリリースと互換性があります。</target>
        </trans-unit>
        <trans-unit id="b2d65cf2e5d262a8fd810c74dbfbd680d4cae033" translate="yes" xml:space="preserve">
          <source>There are two places that the application can deliver an input source to the parser: as the argument to the Parser.parse method, or as the return value of the EntityResolver.resolveEntity method.</source>
          <target state="translated">アプリケーションがパーサに入力ソースを渡す場所は2つあります:Parser.parseメソッドの引数として、またはEntityResolver.resolveEntityメソッドの戻り値としてです。</target>
        </trans-unit>
        <trans-unit id="ff12985c6611d7ceaf5b220dd6a1ef040dc0377c" translate="yes" xml:space="preserve">
          <source>There are two possible ways in which this decoder could deal with illegal strings. It could either leave illegal characters alone or it could throw an &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt;. Which approach the decoder takes is left to the implementation.</source>
          <target state="translated">このデコーダーが不正な文字列を処理する方法は2つあります。不正な文字をそのまま残すか、&lt;a href=&quot;../lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; を&lt;/a&gt;スローする可能性があります。デコーダーがどのアプローチをとるかは実装に任されています。</target>
        </trans-unit>
        <trans-unit id="e20791d947ecc2091a239d09f2588e3bea6ead94" translate="yes" xml:space="preserve">
          <source>There are two properties which deal with newlines. The system property, &lt;code&gt;line.separator&lt;/code&gt;, is defined to be platform-dependent, either &quot;\n&quot;, &quot;\r&quot;, or &quot;\r\n&quot;. There is also a property defined in &lt;code&gt;DefaultEditorKit&lt;/code&gt;, called &lt;a href=&quot;#EndOfLineStringProperty&quot;&gt;&lt;code&gt;EndOfLineStringProperty&lt;/code&gt;&lt;/a&gt;, which is defined automatically when a document is loaded, to be the first occurrence of any of the newline characters. When a document is loaded, &lt;code&gt;EndOfLineStringProperty&lt;/code&gt; is set appropriately, and when the document is written back out, the &lt;code&gt;EndOfLineStringProperty&lt;/code&gt; is used. But while the document is in memory, the &quot;\n&quot; character is used to define a newline, regardless of how the newline is defined when the document is on disk. Therefore, for searching purposes, &quot;\n&quot; should always be used. When a new document is created, and the &lt;code&gt;EndOfLineStringProperty&lt;/code&gt; has not been defined, it will use the System property when writing out the document.</source>
          <target state="translated">改行を扱う2つのプロパティがあります。システムプロパティ &lt;code&gt;line.separator&lt;/code&gt; は、「\ n」、「\ r」、または「\ r \ n」のいずれかでプラットフォームに依存するように定義されています。 &lt;code&gt;DefaultEditorKit&lt;/code&gt; には、&lt;a href=&quot;#EndOfLineStringProperty&quot;&gt; &lt;code&gt;EndOfLineStringProperty&lt;/code&gt; &lt;/a&gt;と呼ばれるプロパティもあります。これは、ドキュメントの読み込み時に自動的に定義され、改行文字が最初に出現するように定義されています。文書がロードされると、 &lt;code&gt;EndOfLineStringProperty&lt;/code&gt; が適切に設定され、ドキュメントは、アウトライトバックされたときに &lt;code&gt;EndOfLineStringProperty&lt;/code&gt; を使用されている。ただし、ドキュメントがメモリ内にある間は、ドキュメントがディスク上にあるときに改行がどのように定義されているかに関係なく、「\ n」文字を使用して改行が定義されます。したがって、検索の目的では、常に「\ n」を使用する必要があります。新しいドキュメントが作成され、 &lt;code&gt;EndOfLineStringProperty&lt;/code&gt; が定義されていない場合、ドキュメントを書き出すときにSystemプロパティが使用されます。</target>
        </trans-unit>
        <trans-unit id="d91ceedcd52bc4240b139aedacb18606cb46b462" translate="yes" xml:space="preserve">
          <source>There are two separate trees of preference nodes, one for user preferences and one for system preferences. Each user has a separate user preference tree, and all users in a given system share the same system preference tree. The precise description of &quot;user&quot; and &quot;system&quot; will vary from implementation to implementation. Typical information stored in the user preference tree might include font choice, color choice, or preferred window location and size for a particular application. Typical information stored in the system preference tree might include installation configuration data for an application.</source>
          <target state="translated">環境設定ノードのツリーには、ユーザー設定用とシステム設定用の2つの別々のツリーがあります。各ユーザには個別のユーザ環境設定ツリーがあり、あるシステムのすべてのユーザは同じシステム環境設定ツリーを共有しています。ユーザー」と「システム」の正確な説明は、実装によって異なります。ユーザー環境設定ツリーに格納される典型的な情報には、フォントの選択、色の選択、または特定のアプリケーションのための好ましいウィンドウの位置とサイズが含まれるかもしれません。システム環境設定ツリーに格納される典型的な情報には、アプリケーションのインストール設定データが含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="6202432717df2ac02cb63931bf58fa0f63cab202" translate="yes" xml:space="preserve">
          <source>There are two situations where this query may return a non-zero period.</source>
          <target state="translated">このクエリがゼロではないピリオドを返す可能性がある状況は2つあります。</target>
        </trans-unit>
        <trans-unit id="21e75919a8d6dc8a964f582e10611fcfefe5d1d7" translate="yes" xml:space="preserve">
          <source>There are two types of filtering: filtering for basic language ranges (called &quot;basic filtering&quot;) and filtering for extended language ranges (called &quot;extended filtering&quot;). They may return different results by what kind of language ranges are included in the given Language Priority List. &lt;a href=&quot;locale.filteringmode&quot;&gt;&lt;code&gt;Locale.FilteringMode&lt;/code&gt;&lt;/a&gt; is a parameter to specify how filtering should be done.</source>
          <target state="translated">フィルタリングには、基本言語範囲のフィルタリング（「基本フィルタリング」と呼ばれる）と拡張言語範囲のフィルタリング（「拡張フィルタリング」と呼ばれる）の2種類があります。特定の言語優先リストに含まれている言語の範囲の種類によって、異なる結果が返される場合があります。&lt;a href=&quot;locale.filteringmode&quot;&gt; &lt;code&gt;Locale.FilteringMode&lt;/code&gt; &lt;/a&gt;は、フィルタリングの実行方法を指定するパラメーターです。</target>
        </trans-unit>
        <trans-unit id="863bb4e82b05433afe02f4bff6c94f9fcbaf46be" translate="yes" xml:space="preserve">
          <source>There are two types of language ranges: basic and extended. In RFC 4647, the syntax of language ranges is expressed in &lt;a href=&quot;http://tools.ietf.org/html/rfc4234&quot;&gt;ABNF&lt;/a&gt; as follows:</source>
          <target state="translated">言語範囲には、基本と拡張の2つのタイプがあります。RFC 4647では、言語範囲の構文は次のように&lt;a href=&quot;http://tools.ietf.org/html/rfc4234&quot;&gt;ABNF&lt;/a&gt;で表現されています。</target>
        </trans-unit>
        <trans-unit id="03767c30c8b687a49d6fbdbfbb2ec538574b74af" translate="yes" xml:space="preserve">
          <source>There are two types of request controls:</source>
          <target state="translated">リクエストコントロールには2種類あります。</target>
        </trans-unit>
        <trans-unit id="58334da2a0286115ac83f8532c53ee33fc146ada" translate="yes" xml:space="preserve">
          <source>There are two typical uses of this class:</source>
          <target state="translated">このクラスの代表的な使い方は2つあります。</target>
        </trans-unit>
        <trans-unit id="be03833ce8f129d53ac2624902bf28a6a154a424" translate="yes" xml:space="preserve">
          <source>There are two ways for a &lt;code&gt;CachedRowSet&lt;/code&gt; object to specify which &lt;code&gt;SyncProvider&lt;/code&gt; object it will use.</source>
          <target state="translated">&lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトが使用する &lt;code&gt;SyncProvider&lt;/code&gt; オブジェクトを指定する方法は2つあります。</target>
        </trans-unit>
        <trans-unit id="723bde258bb2a065ece49f2af6e47c912e129ae4" translate="yes" xml:space="preserve">
          <source>There are two ways for the SAX application to obtain information from the AttributeList. First, it can iterate through the entire list:</source>
          <target state="translated">SAXアプリケーションがAttributeListから情報を取得するには、2つの方法があります。第一に、リスト全体を反復処理することができます。</target>
        </trans-unit>
        <trans-unit id="b2fda0a5c05f0d77dfca57e037365613258cde0a" translate="yes" xml:space="preserve">
          <source>There are two ways in which a context instance gets its request controls:</source>
          <target state="translated">コンテキストインスタンスがリクエストコントロールを取得する方法は2つあります。</target>
        </trans-unit>
        <trans-unit id="975a7b038db4eb6bf41059eceb7313d6dd42998b" translate="yes" xml:space="preserve">
          <source>There are two ways to create a new thread of execution. One is to declare a class to be a subclass of &lt;code&gt;Thread&lt;/code&gt;. This subclass should override the &lt;code&gt;run&lt;/code&gt; method of class &lt;code&gt;Thread&lt;/code&gt;. An instance of the subclass can then be allocated and started. For example, a thread that computes primes larger than a stated value could be written as follows:</source>
          <target state="translated">新しい実行スレッドを作成するには、2つの方法があります。1つは、クラスを &lt;code&gt;Thread&lt;/code&gt; のサブクラスとして宣言することです。このサブクラスは、クラス &lt;code&gt;Thread&lt;/code&gt; の &lt;code&gt;run&lt;/code&gt; メソッドをオーバーライドする必要があります。その後、サブクラスのインスタンスを割り当てて開始できます。たとえば、指定された値より大きい素数を計算するスレッドは、次のように書くことができます。</target>
        </trans-unit>
        <trans-unit id="96e323c2ef38456a30754099b0b8f3942d493170" translate="yes" xml:space="preserve">
          <source>There are two ways to create an MBean. One is to construct a Java object that will be the MBean, then use the &lt;a href=&quot;mbeanserver#registerMBean(java.lang.Object,javax.management.ObjectName)&quot;&gt;&lt;code&gt;registerMBean&lt;/code&gt;&lt;/a&gt; method to register it in the MBean Server. The other is to create and register the MBean in a single operation using one of the &lt;a href=&quot;mbeanserver#createMBean(java.lang.String,javax.management.ObjectName)&quot;&gt;&lt;code&gt;createMBean&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">MBeanを作成する方法は2つあります。1つは、MBeanとなるJavaオブジェクトを作成し、&lt;a href=&quot;mbeanserver#registerMBean(java.lang.Object,javax.management.ObjectName)&quot;&gt; &lt;code&gt;registerMBean&lt;/code&gt; &lt;/a&gt;メソッドを使用してそれをMBeanサーバーに登録することです。もう1つは、&lt;a href=&quot;mbeanserver#createMBean(java.lang.String,javax.management.ObjectName)&quot;&gt; &lt;code&gt;createMBean&lt;/code&gt; &lt;/a&gt;メソッドの1つを使用して、1回の操作でMBeanを作成および登録することです。</target>
        </trans-unit>
        <trans-unit id="1130822317a86f6e57038bd5122e8e2e69d189a3" translate="yes" xml:space="preserve">
          <source>There are two ways to create an MBean. One is to construct a Java object that will be the MBean, then use the &lt;a href=&quot;mbeanserver#registerMBean-java.lang.Object-javax.management.ObjectName-&quot;&gt;&lt;code&gt;registerMBean&lt;/code&gt;&lt;/a&gt; method to register it in the MBean Server. The other is to create and register the MBean in a single operation using one of the &lt;a href=&quot;mbeanserver#createMBean-java.lang.String-javax.management.ObjectName-&quot;&gt;&lt;code&gt;createMBean&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">MBeanを作成するには2つの方法があります。1つは、MBeanとなるJavaオブジェクトを作成し、&lt;a href=&quot;mbeanserver#registerMBean-java.lang.Object-javax.management.ObjectName-&quot;&gt; &lt;code&gt;registerMBean&lt;/code&gt; &lt;/a&gt;メソッドを使用してMBeanサーバーに登録する方法です。もう1つは、&lt;a href=&quot;mbeanserver#createMBean-java.lang.String-javax.management.ObjectName-&quot;&gt; &lt;code&gt;createMBean&lt;/code&gt; &lt;/a&gt;メソッドの1つを使用して、1回の操作でMBeanを作成および登録することです。</target>
        </trans-unit>
        <trans-unit id="f02bb82aa08947d1c4db6345575e9a9a9391eb79" translate="yes" xml:space="preserve">
          <source>There are two ways to generate a key pair: in an algorithm-independent manner, and in an algorithm-specific manner. The only difference between the two is the initialization of the object:</source>
          <target state="translated">鍵ペアを生成する方法には、アルゴリズムに依存しない方法と、アルゴリズム固有の方法の2つがあります。この2つの違いは、オブジェクトの初期化だけです。</target>
        </trans-unit>
        <trans-unit id="fc8284f153af11fa26dc2b9e2c9486fe94b0031e" translate="yes" xml:space="preserve">
          <source>There are two ways to generate a key: in an algorithm-independent manner, and in an algorithm-specific manner. The only difference between the two is the initialization of the object:</source>
          <target state="translated">キーを生成する方法には、アルゴリズムに依存しない方法と、アルゴリズム固有の方法があります。この2つの違いは、オブジェクトの初期化だけです。</target>
        </trans-unit>
        <trans-unit id="159241de6eb6c0aad925571d76835e03dc536a22" translate="yes" xml:space="preserve">
          <source>There are two ways to make a Java object that is an MBean with this management interface. One is for the object to be of a class that has exactly the same name as the Java interface but without the &lt;code&gt;MBean&lt;/code&gt; suffix. So in the example the object would be of the class &lt;code&gt;Configuration&lt;/code&gt;, in the same Java package as &lt;code&gt;ConfigurationMBean&lt;/code&gt;. The second way is to use the &lt;a href=&quot;standardmbean&quot;&gt;&lt;code&gt;StandardMBean&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">この管理インターフェースでMBeanであるJavaオブジェクトを作成するには、2つの方法があります。1つは、オブジェクトがJavaインターフェースとまったく同じ名前で、 &lt;code&gt;MBean&lt;/code&gt; サフィックスのないクラスであるというものです。ですから、例えば、オブジェクトは、クラスであろう &lt;code&gt;Configuration&lt;/code&gt; と同じJavaパッケージには、 &lt;code&gt;ConfigurationMBean&lt;/code&gt; 。2番目の方法は、&lt;a href=&quot;standardmbean&quot;&gt; &lt;code&gt;StandardMBean&lt;/code&gt; &lt;/a&gt;クラスを使用することです。</target>
        </trans-unit>
        <trans-unit id="90012bb7cf1245412cbc193a80e9ac8ba45df7dd" translate="yes" xml:space="preserve">
          <source>There are two ways to obtain an instance of the &lt;code&gt;Instrumentation&lt;/code&gt; interface:</source>
          <target state="translated">&lt;code&gt;Instrumentation&lt;/code&gt; インターフェースのインスタンスを取得するには、2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="771a213e98d7cf68dc3b44a652ef624310ae5943" translate="yes" xml:space="preserve">
          <source>There are two ways to set a &lt;code&gt;Calendar&lt;/code&gt; to a date-time value. One is to set the instant parameter to a millisecond offset from the &lt;a href=&quot;calendar#Epoch&quot;&gt;Epoch&lt;/a&gt;. The other is to set individual field parameters, such as &lt;a href=&quot;calendar#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt;, to their desired values. These two ways can't be mixed. Trying to set both the instant and individual fields will cause an &lt;a href=&quot;../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt; to be thrown. However, it is permitted to override previous values of the instant or field parameters.</source>
          <target state="translated">&lt;code&gt;Calendar&lt;/code&gt; を日時値に設定するには2つの方法があります。1つは、インスタントパラメータを&lt;a href=&quot;calendar#Epoch&quot;&gt;Epoch&lt;/a&gt;からのミリ秒オフセットに設定することです。もう1つは、&lt;a href=&quot;calendar#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt;などの個々のフィールドパラメータを目的の値に設定することです。これら2つの方法を混在させることはできません。インスタントフィールドと個別フィールドの両方を設定しようとすると、&lt;a href=&quot;../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;がスローされます。ただし、インスタントパラメータまたはフィールドパラメータの以前の値を上書きすることは許可されています。</target>
        </trans-unit>
        <trans-unit id="18c4aa4c3dad5442ad3148498e9b2b89e070dc8d" translate="yes" xml:space="preserve">
          <source>There are various ways to handle the conversion from a &lt;code&gt;LocalDateTime&lt;/code&gt;. One technique, using this method, would be:</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; からの変換を処理するには、さまざまな方法があります。この方法を使用する1つの手法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a3918cb605e7d0c3c6f2663575261375e1b19245" translate="yes" xml:space="preserve">
          <source>There are, however, some limited use cases where users believe they need to store and use dates in arbitrary calendar systems throughout the application. This is supported by &lt;a href=&quot;chrono/chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt;, however it is vital to read all the associated warnings in the Javadoc of that interface before using it. In summary, applications that require general interoperation between multiple calendar systems typically need to be written in a very different way to those only using the ISO calendar, thus most applications should just use ISO and avoid &lt;code&gt;ChronoLocalDate&lt;/code&gt;.</source>
          <target state="translated">ただし、アプリケーション全体で任意のカレンダーシステムに日付を保存して使用する必要があるとユーザーが考える場合には、いくつかの限られた使用例があります。これは&lt;a href=&quot;chrono/chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt;でサポートされていますが、使用する前に、そのインターフェースのJavadocで関連するすべての警告を読むことが重要です。要約すると、複数のカレンダーシステム間の一般的な相互運用を必要とするアプリケーションは、通常、ISOカレンダーのみを使用するアプリケーションとは非常に異なる方法で作成する必要があるため、ほとんどのアプリケーションはISOを使用し、 &lt;code&gt;ChronoLocalDate&lt;/code&gt; を避ける必要があります。</target>
        </trans-unit>
        <trans-unit id="ad68c71cd005733d3d27a578116ef8c19e4d7ff1" translate="yes" xml:space="preserve">
          <source>There can be different implementations of &lt;code&gt;Name&lt;/code&gt;; for example, composite names, URLs, or namespace-specific compound names.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; の実装はさまざまです。たとえば、複合名、URL、名前空間固有の複合名などです。</target>
        </trans-unit>
        <trans-unit id="de8c4bc02482e28cffe1f4a7a174d6c99f5c155f" translate="yes" xml:space="preserve">
          <source>There can be only one full-screen window on a device at any time, so calling this method while there is an existing full-screen Window will cause the existing full-screen window to return to windowed mode.</source>
          <target state="translated">デバイス上には常に 1 つのフルスクリーンウィンドウしか存在しないため、既存のフルスクリーンウィンドウが存在する間にこのメソッドを呼び出すと、既存のフルスクリーンウィンドウがウィンドウモードに戻ります。</target>
        </trans-unit>
        <trans-unit id="ce433d14a2eedfbb470ac526e7184d30f9308adf" translate="yes" xml:space="preserve">
          <source>There exist different variants of these global identifiers. The methods of this class are for manipulating the Leach-Salz variant, although the constructors allow the creation of any variant of UUID (described below).</source>
          <target state="translated">これらのグローバル識別子には様々なバリアントが存在します。このクラスのメソッドは Leach-Salz のバリアントを操作するためのものですが、コンストラクタでは UUID の任意のバリアント (後述)を作成することができます。</target>
        </trans-unit>
        <trans-unit id="00997846c1193c358f37824f2d009c61e62de2e2" translate="yes" xml:space="preserve">
          <source>There is a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html#Ipv4IPv6&quot;&gt;couple of System Properties&lt;/a&gt; affecting how IPv4 and IPv6 addresses are used.</source>
          <target state="translated">ある&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html#Ipv4IPv6&quot;&gt;システムのプロパティのカップルの&lt;/a&gt;IPv4アドレスとIPv6アドレスが使用されている方法に影響を与えるが。</target>
        </trans-unit>
        <trans-unit id="6074e75d203b0395cdf525ce296145ded214ba29" translate="yes" xml:space="preserve">
          <source>There is a JVM limit (classfile structural constraint): no method can call with more than 255 slots. This limits the number of static and dynamic arguments one can pass to bootstrap method. Since there are potential concatenation strategies that use &lt;code&gt;MethodHandle&lt;/code&gt; combinators, we need to reserve a few empty slots on the parameter lists to capture the temporal results. This is why bootstrap methods in this factory do not accept more than 200 argument slots. Users requiring more than 200 argument slots in concatenation are expected to split the large concatenation in smaller expressions.</source>
          <target state="translated">JVMの制限（クラスファイルの構造上の制約）があります。255を超えるスロットでメソッドを呼び出すことはできません。これにより、ブートストラップメソッドに渡すことができる静的引数と動的引数の数が制限されます。 &lt;code&gt;MethodHandle&lt;/code&gt; コンビネータを使用する潜在的な連結戦略があるため、一時的な結果をキャプチャするために、パラメータリストにいくつかの空のスロットを予約する必要があります。これが、このファクトリのブートストラップメソッドが200を超える引数スロットを受け入れない理由です。連結で200を超える引数スロットを必要とするユーザーは、大きな連結を小さな式に分割することが期待されます。</target>
        </trans-unit>
        <trans-unit id="fbdeb2575b41cbcf1a0c50743f59d79e06e928f0" translate="yes" xml:space="preserve">
          <source>There is a buffer class for each non-boolean primitive type. Each class defines a family of</source>
          <target state="translated">各非ブーリアンプリミティブ型にはバッファクラスがあります。各クラスは</target>
        </trans-unit>
        <trans-unit id="e611c9ca26ee759c4b00b3f9330825ec933eabb1" translate="yes" xml:space="preserve">
          <source>There is a couple of System Properties affecting how IPv4 and IPv6 addresses are used.</source>
          <target state="translated">IPv4およびIPv6アドレスの使用方法に影響を与えるシステムプロパティがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="efc2c6b7e2736b91bfc3bf3c344c481fe814c808" translate="yes" xml:space="preserve">
          <source>There is a distinction between an attribute's Java language type, as returned by &lt;a href=&quot;../mbeanattributeinfo#getType()&quot;&gt;&lt;code&gt;getType()&lt;/code&gt;&lt;/a&gt;, and its &lt;code&gt;OpenType&lt;/code&gt;, as returned by &lt;a href=&quot;openmbeanparameterinfo#getOpenType()&quot;&gt;&lt;code&gt;getOpenType()&lt;/code&gt;&lt;/a&gt;. For example, if the Java language type is &lt;code&gt;java.lang.String&lt;/code&gt;, the &lt;code&gt;OpenType&lt;/code&gt; will be &lt;a href=&quot;simpletype#STRING&quot;&gt;&lt;code&gt;SimpleType.String&lt;/code&gt;&lt;/a&gt;. If the Java language type is &lt;a href=&quot;compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;OpenType&lt;/code&gt; will be a &lt;a href=&quot;compositetype&quot;&gt;&lt;code&gt;CompositeType&lt;/code&gt;&lt;/a&gt; that describes the items in the &lt;code&gt;CompositeData&lt;/code&gt; instances for the attribute.</source>
          <target state="translated">そこで返される属性のJava言語の種類の区別は、ある&lt;a href=&quot;../mbeanattributeinfo#getType()&quot;&gt; &lt;code&gt;getType()&lt;/code&gt; &lt;/a&gt;、およびその &lt;code&gt;OpenType&lt;/code&gt; フォントで返される、&lt;a href=&quot;openmbeanparameterinfo#getOpenType()&quot;&gt; &lt;code&gt;getOpenType()&lt;/code&gt; &lt;/a&gt;。たとえば、Java言語タイプが &lt;code&gt;java.lang.String&lt;/code&gt; の場合、 &lt;code&gt;OpenType&lt;/code&gt; は&lt;a href=&quot;simpletype#STRING&quot;&gt; &lt;code&gt;SimpleType.String&lt;/code&gt; になり&lt;/a&gt;ます。 Java言語の種類がある場合&lt;a href=&quot;compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;OpenType&lt;/code&gt; フォントはなり&lt;a href=&quot;compositetype&quot;&gt; &lt;code&gt;CompositeType&lt;/code&gt; &lt;/a&gt;内の項目について説明し &lt;code&gt;CompositeData&lt;/code&gt; 属性のインスタンスを。</target>
        </trans-unit>
        <trans-unit id="e457efe2a17a4c04ee89e9b13d9382d5d98aca7c" translate="yes" xml:space="preserve">
          <source>There is a distinction between an attribute's Java language type, as returned by &lt;a href=&quot;../mbeanattributeinfo#getType--&quot;&gt;&lt;code&gt;getType()&lt;/code&gt;&lt;/a&gt;, and its &lt;code&gt;OpenType&lt;/code&gt;, as returned by &lt;a href=&quot;openmbeanparameterinfo#getOpenType--&quot;&gt;&lt;code&gt;getOpenType()&lt;/code&gt;&lt;/a&gt;. For example, if the Java language type is &lt;code&gt;java.lang.String&lt;/code&gt;, the &lt;code&gt;OpenType&lt;/code&gt; will be &lt;a href=&quot;simpletype#STRING&quot;&gt;&lt;code&gt;SimpleType.String&lt;/code&gt;&lt;/a&gt;. If the Java language type is &lt;a href=&quot;compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;OpenType&lt;/code&gt; will be a &lt;a href=&quot;compositetype&quot;&gt;&lt;code&gt;CompositeType&lt;/code&gt;&lt;/a&gt; that describes the items in the &lt;code&gt;CompositeData&lt;/code&gt; instances for the attribute.</source>
          <target state="translated">&lt;a href=&quot;../mbeanattributeinfo#getType--&quot;&gt; &lt;code&gt;getType()&lt;/code&gt; &lt;/a&gt;によって返される属性のJava言語タイプと、&lt;a href=&quot;openmbeanparameterinfo#getOpenType--&quot;&gt; &lt;code&gt;getOpenType()&lt;/code&gt; &lt;/a&gt;によって返されるその &lt;code&gt;OpenType&lt;/code&gt; には違いがあります。たとえば、Java言語タイプが &lt;code&gt;java.lang.String&lt;/code&gt; の場合、 &lt;code&gt;OpenType&lt;/code&gt; は&lt;a href=&quot;simpletype#STRING&quot;&gt; &lt;code&gt;SimpleType.String&lt;/code&gt; になり&lt;/a&gt;ます。 Java言語の種類がある場合&lt;a href=&quot;compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;OpenType&lt;/code&gt; フォントはなり&lt;a href=&quot;compositetype&quot;&gt; &lt;code&gt;CompositeType&lt;/code&gt; &lt;/a&gt;内の項目について説明し &lt;code&gt;CompositeData&lt;/code&gt; 属性のインスタンスを。</target>
        </trans-unit>
        <trans-unit id="47ec9ff2dff4067d12469aae62647665afd970c0" translate="yes" xml:space="preserve">
          <source>There is a one-to-one mapping between keys and identities, and there can only be one copy of one key per scope. For example, suppose &lt;b&gt;Acme Software, Inc&lt;/b&gt; is a software publisher known to a user. Suppose it is an Identity, that is, it has a public key, and a set of associated certificates. It is named in the scope using the name &quot;Acme Software&quot;. No other named Identity in the scope has the same public key. Of course, none has the same name as well.</source>
          <target state="translated">キーとIDの間には1対1のマッピングがあり、スコープごとに1つのキーのコピーは1つしか存在できません。たとえば、&lt;b&gt;Acme Software、Inc&lt;/b&gt;がユーザーに知られているソフトウェア発行元であるとします。それがアイデンティティであると仮定します。つまり、公開鍵と、関連する証明書のセットを持っているとします。スコープ内では「Acme Software」という名前が付けられています。スコープ内の他の名前付きIDには同じ公開鍵はありません。もちろん、同じ名前のものはありません。</target>
        </trans-unit>
        <trans-unit id="78efa11c02a6f618b8cfe49957d8fd3c2e7e47c3" translate="yes" xml:space="preserve">
          <source>There is a one-to-one mapping between the distinguishable &lt;code&gt;BigDecimal&lt;/code&gt; values and the result of this conversion. That is, every distinguishable &lt;code&gt;BigDecimal&lt;/code&gt; value (unscaled value and scale) has a unique string representation as a result of using &lt;code&gt;toString&lt;/code&gt;. If that string representation is converted back to a &lt;code&gt;BigDecimal&lt;/code&gt; using the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, then the original value will be recovered.</source>
          <target state="translated">識別可能な &lt;code&gt;BigDecimal&lt;/code&gt; 値とこの変換の結果の間には1対1のマッピングがあります。つまり、 &lt;code&gt;toString&lt;/code&gt; を使用した結果として、識別可能なすべての &lt;code&gt;BigDecimal&lt;/code&gt; 値（スケーリングされていない値とスケール）に一意の文字列表現があります。その文字列表現が&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して &lt;code&gt;BigDecimal&lt;/code&gt; に変換された場合、元の値が復元されます。</target>
        </trans-unit>
        <trans-unit id="54e8a1cf0a979c6bead49e4451cc625e0cb7132c" translate="yes" xml:space="preserve">
          <source>There is a one-to-one mapping between the distinguishable &lt;code&gt;BigDecimal&lt;/code&gt; values and the result of this conversion. That is, every distinguishable &lt;code&gt;BigDecimal&lt;/code&gt; value (unscaled value and scale) has a unique string representation as a result of using &lt;code&gt;toString&lt;/code&gt;. If that string representation is converted back to a &lt;code&gt;BigDecimal&lt;/code&gt; using the &lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor, then the original value will be recovered.</source>
          <target state="translated">区別可能な &lt;code&gt;BigDecimal&lt;/code&gt; 値とこの変換の結果の間には、1対1のマッピングがあります。つまり、 &lt;code&gt;toString&lt;/code&gt; を使用した結果として、区別可能なすべての &lt;code&gt;BigDecimal&lt;/code&gt; 値（スケーリングされていない値とスケール）には一意の文字列表現があります。その文字列表現が&lt;a href=&quot;bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して &lt;code&gt;BigDecimal&lt;/code&gt; に変換されると、元の値が復元されます。</target>
        </trans-unit>
        <trans-unit id="07a170e47ba1b28632f7de6a7126103d894a204e" translate="yes" xml:space="preserve">
          <source>There is a single global LogManager object that is used to maintain a set of shared state about Loggers and log services.</source>
          <target state="translated">ロガーとログ サービスに関する共有状態のセットを維持するために使用される、単一のグローバル LogManager オブジェクトがあります。</target>
        </trans-unit>
        <trans-unit id="16f6696f8357f83f1e4bc66cdc5dac5cd0bb4624" translate="yes" xml:space="preserve">
          <source>There is a single global instance of the &lt;code&gt;LoggingMXBean&lt;/code&gt;. This instance is an &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;&lt;code&gt;MXBean&lt;/code&gt;&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;logmanager#getLoggingMXBean--&quot;&gt;&lt;code&gt;LogManager.getLoggingMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;../../lang/management/managementfactory#getPlatformMBeanServer--&quot;&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;LoggingMXBean&lt;/code&gt; の単一のグローバルインスタンスがあります。このインスタンスは&lt;a href=&quot;../../../javax/management/mxbean&quot;&gt; &lt;code&gt;MXBean&lt;/code&gt; &lt;/a&gt;であり、&lt;a href=&quot;logmanager#getLoggingMXBean--&quot;&gt; &lt;code&gt;LogManager.getLoggingMXBean()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すか、&lt;a href=&quot;../../lang/management/managementfactory#getPlatformMBeanServer--&quot;&gt;プラットフォーム &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt;から取得できます。</target>
        </trans-unit>
        <trans-unit id="7f8fc35d9806679382a2134903e7a75c027df1ce" translate="yes" xml:space="preserve">
          <source>There is a single global instance of the &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt;. The &lt;a href=&quot;managementfactory#getPlatformMXBean(java.lang.Class)&quot;&gt;&lt;code&gt;ManagementFactory.getPlatformMXBean&lt;/code&gt;&lt;/a&gt; method can be used to obtain the &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; object as follows:</source>
          <target state="translated">&lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; の単一のグローバルインスタンスがあります。&lt;a href=&quot;managementfactory#getPlatformMXBean(java.lang.Class)&quot;&gt; &lt;code&gt;ManagementFactory.getPlatformMXBean&lt;/code&gt; &lt;/a&gt;方法を得るために使用することができる &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; 次のようにオブジェクトを：</target>
        </trans-unit>
        <trans-unit id="1db9183d0fe9302b767e7cc23a636f50f0a9febc" translate="yes" xml:space="preserve">
          <source>There is a single global instance of the &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt;. The &lt;a href=&quot;managementfactory#getPlatformMXBean-java.lang.Class-&quot;&gt;&lt;code&gt;ManagementFactory.getPlatformMXBean&lt;/code&gt;&lt;/a&gt; method can be used to obtain the &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; object as follows:</source>
          <target state="translated">&lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; の単一のグローバルインスタンスがあります。&lt;a href=&quot;managementfactory#getPlatformMXBean-java.lang.Class-&quot;&gt; &lt;code&gt;ManagementFactory.getPlatformMXBean&lt;/code&gt; &lt;/a&gt;方法を得るために使用することができる &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; 次のようにオブジェクトを：</target>
        </trans-unit>
        <trans-unit id="cdccdd64637cc92dadca7fef587f9c1a806a3e4a" translate="yes" xml:space="preserve">
          <source>There is also an option to supply an alternate parentTag and addTag. These will be checked for if there is no parentTag at offset.</source>
          <target state="translated">代替の parentTag と addTag を与えるオプションもあります。これらは、offsetにparentTagがない場合にチェックされます。</target>
        </trans-unit>
        <trans-unit id="658d1d725d598b21d0b29423aca52f884a5ab418" translate="yes" xml:space="preserve">
          <source>There is an asynchronous operation already outstanding.</source>
          <target state="translated">既に未処理の非同期操作があります。</target>
        </trans-unit>
        <trans-unit id="c7a5bc5db07687d87e493216c4aa134192f8acdc" translate="yes" xml:space="preserve">
          <source>There is an exception for the second condition (the value of the &lt;code&gt;autoRequestFocus&lt;/code&gt; property). The property is not taken into account if the window is a modal dialog, which blocks the currently focused window.</source>
          <target state="translated">2番目の条件（ &lt;code&gt;autoRequestFocus&lt;/code&gt; プロパティの値）には例外があります。ウィンドウが現在フォーカスされているウィンドウをブロックするモーダルダイアログの場合、プロパティは考慮されません。</target>
        </trans-unit>
        <trans-unit id="ef852b41e85d5b8d7d0516574ed1e5208aad1805" translate="yes" xml:space="preserve">
          <source>There is no &lt;code&gt;unsetDestinationOffset&lt;/code&gt; method; simply call &lt;code&gt;setDestinationOffset(new Point(0, 0))&lt;/code&gt; to restore default values.</source>
          <target state="translated">&lt;code&gt;unsetDestinationOffset&lt;/code&gt; メソッドはありません。デフォルト値を復元するには &lt;code&gt;setDestinationOffset(new Point(0, 0))&lt;/code&gt; 単にsetDestinationOffset（new Point（0、0））を呼び出します。</target>
        </trans-unit>
        <trans-unit id="75fe41e0afde47fd04c96028c6e0c36054c90aa2" translate="yes" xml:space="preserve">
          <source>There is no &lt;code&gt;unsetSourceProgressivePasses&lt;/code&gt; method; the same effect may be obtained by calling &lt;code&gt;setSourceProgressivePasses(0, Integer.MAX_VALUE)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;unsetSourceProgressivePasses&lt;/code&gt; メソッドはありません。 &lt;code&gt;setSourceProgressivePasses(0, Integer.MAX_VALUE)&lt;/code&gt; 呼び出しても同じ効果が得られます。</target>
        </trans-unit>
        <trans-unit id="fb3c1caf12670f746761a1a308b04f8a646c8f65" translate="yes" xml:space="preserve">
          <source>There is no &lt;code&gt;unsetSourceSubsampling&lt;/code&gt; method; simply call &lt;code&gt;setSourceSubsampling(1, 1, 0, 0)&lt;/code&gt; to restore default values.</source>
          <target state="translated">&lt;code&gt;unsetSourceSubsampling&lt;/code&gt; メソッドはありません。デフォルト値に戻すには &lt;code&gt;setSourceSubsampling(1, 1, 0, 0)&lt;/code&gt; 単にsetSourceSubsampling（1、1、0、0）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="ee54f15ef2cec490cdcfa73e2f78c4e3b949be5c" translate="yes" xml:space="preserve">
          <source>There is no defined order among annotation elements. As a matter of style, the &lt;code&gt;since&lt;/code&gt; element should be placed first.</source>
          <target state="translated">注釈要素間に定義された順序はありません。スタイルの問題として、 &lt;code&gt;since&lt;/code&gt; 要素を最初に配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="bf4f6a6600ccefd5bc95c8181388c200994df259" translate="yes" xml:space="preserve">
          <source>There is no embedded flag character for enabling canonical equivalence.</source>
          <target state="translated">正準等価を有効にするためのフラグ文字は埋め込まれていません。</target>
        </trans-unit>
        <trans-unit id="5c437702dae33f4479582f804dd1b9271378f690" translate="yes" xml:space="preserve">
          <source>There is no embedded flag character for enabling literal parsing.</source>
          <target state="translated">リテラル解析を有効にするためのフラグ文字は埋め込まれていません。</target>
        </trans-unit>
        <trans-unit id="361c082d07aaf113aa3cccd8b88a0834688fd8ed" translate="yes" xml:space="preserve">
          <source>There is no guarantee about when the &lt;code&gt;MemoryMXBean&lt;/code&gt; will emit a threshold notification and when the notification will be delivered. When a notification listener is invoked, the memory usage of the memory pool may have crossed the usage threshold more than once. The &lt;a href=&quot;memorynotificationinfo#getCount()&quot;&gt;&lt;code&gt;MemoryNotificationInfo.getCount()&lt;/code&gt;&lt;/a&gt; method returns the number of times that the memory usage has crossed the usage threshold at the point in time when the notification was constructed. It can be compared with the current usage threshold count returned by the &lt;a href=&quot;#getUsageThresholdCount()&quot;&gt;&lt;code&gt;getUsageThresholdCount()&lt;/code&gt;&lt;/a&gt; method to determine if such situation has occurred.</source>
          <target state="translated">&lt;code&gt;MemoryMXBean&lt;/code&gt; がしきい値通知を発行する時期と、通知が配信される時期についての保証はありません。通知リスナーが呼び出されたときに、メモリプールのメモリ使用量が使用量のしきい値を複数回超えた可能性があります。&lt;a href=&quot;memorynotificationinfo#getCount()&quot;&gt; &lt;code&gt;MemoryNotificationInfo.getCount()&lt;/code&gt; &lt;/a&gt;メソッドは、通知が構築されたときにメモリ使用量が時点で使用量しきい値を超えた回数を返します。&lt;a href=&quot;#getUsageThresholdCount()&quot;&gt; &lt;code&gt;getUsageThresholdCount()&lt;/code&gt; &lt;/a&gt;メソッドによって返される現在の使用しきい値カウントと比較して、そのような状況が発生したかどうかを判断できます。</target>
        </trans-unit>
        <trans-unit id="2476cd0e3a3386674e0ed89def19edc4b13b242e" translate="yes" xml:space="preserve">
          <source>There is no guarantee about when the &lt;code&gt;MemoryMXBean&lt;/code&gt; will emit a threshold notification and when the notification will be delivered. When a notification listener is invoked, the memory usage of the memory pool may have crossed the usage threshold more than once. The &lt;a href=&quot;memorynotificationinfo#getCount--&quot;&gt;&lt;code&gt;MemoryNotificationInfo.getCount()&lt;/code&gt;&lt;/a&gt; method returns the number of times that the memory usage has crossed the usage threshold at the point in time when the notification was constructed. It can be compared with the current usage threshold count returned by the &lt;a href=&quot;memorypoolmxbean#getUsageThresholdCount--&quot;&gt;&lt;code&gt;getUsageThresholdCount()&lt;/code&gt;&lt;/a&gt; method to determine if such situation has occurred.</source>
          <target state="translated">&lt;code&gt;MemoryMXBean&lt;/code&gt; がいつしきい値通知を発行するか、いつ通知が配信されるかについての保証はありません。通知リスナーが呼び出されたときに、メモリプールのメモリ使用量が使用量しきい値を2回以上超えている可能性があります。&lt;a href=&quot;memorynotificationinfo#getCount--&quot;&gt; &lt;code&gt;MemoryNotificationInfo.getCount()&lt;/code&gt; &lt;/a&gt;メソッドは、通知が構築されたときにメモリ使用量が時点で使用量しきい値を超えた回数を返します。これを&lt;a href=&quot;memorypoolmxbean#getUsageThresholdCount--&quot;&gt; &lt;code&gt;getUsageThresholdCount()&lt;/code&gt; &lt;/a&gt;メソッドによって返された現在の使用量しきい値カウントと比較して、そのような状況が発生したかどうかを判断できます。</target>
        </trans-unit>
        <trans-unit id="d60f97f9703f42d93a54253e7d22123ed3faa9b8" translate="yes" xml:space="preserve">
          <source>There is no guarantee that the &lt;code&gt;asType&lt;/code&gt; call is actually made. If the JVM can predict the results of making the call, it may perform adaptations directly on the caller's arguments, and call the target method handle according to its own exact type.</source>
          <target state="translated">&lt;code&gt;asType&lt;/code&gt; 呼び出しが実際に行われる保証はありません。JVMが呼び出しの結果を予測できる場合、JVMは呼び出し元の引数に直接適応を実行し、独自の正確な型に従ってターゲットメソッドハンドルを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="563bedb54b5f2fda07232672d28d980b59e9cdfa" translate="yes" xml:space="preserve">
          <source>There is no guarantee that the name strings in the resulting array will appear in any specific order; they are not, in particular, guaranteed to appear in alphabetical order.</source>
          <target state="translated">結果として得られる配列内の名前文字列が特定の順序で表示されることは保証されていません。</target>
        </trans-unit>
        <trans-unit id="046583b6eeaeb8b5922df31707e6fa286b439c21" translate="yes" xml:space="preserve">
          <source>There is no guarantee that the notation declaration will be reported before any unparsed entities that use it.</source>
          <target state="translated">記法宣言が、それを使用しているパースされていないエンティティの前に報告されることを保証するものではありません。</target>
        </trans-unit>
        <trans-unit id="4b5307904581616c49620a8afa65d4a7ad0b81a2" translate="yes" xml:space="preserve">
          <source>There is no limit on the amount of data that may be written, so use this with care.</source>
          <target state="translated">書いてもいいデータ量に制限はありませんので、注意して使いましょう。</target>
        </trans-unit>
        <trans-unit id="caa61a6745a38d47cfa3d5d57583320bc8d9204d" translate="yes" xml:space="preserve">
          <source>There is no limit to integer digits set by this routine, since that is the typical end-user desire; use setMaximumInteger if you want to set a real value. For negative numbers, use a second pattern, separated by a semicolon</source>
          <target state="translated">このルーチンで設定される整数の桁数に制限はありません。これは典型的なエンドユーザの要求なので、実数を設定したい場合は setMaximumInteger を使用してください。負の値の場合は、セミコロンで区切られた2つ目のパターンを使用します。</target>
        </trans-unit>
        <trans-unit id="998f9151c1110aaa94300df3294ecd2bb59d3edc" translate="yes" xml:space="preserve">
          <source>There is no pathname transformation, except that the system file separator is replaced by the JAR file separator '/'.</source>
          <target state="translated">パス名の変換はありませんが、システムファイルの区切り文字が JAR ファイルの区切り文字 '/' に置き換えられることを除いては、パス名の変換はありません。</target>
        </trans-unit>
        <trans-unit id="40cfd7dfadd3391c252abf3662f2ca699044a90b" translate="yes" xml:space="preserve">
          <source>There is no requirement for a compiler at runtime. However, if a default compiler is provided, it can be located using the &lt;a href=&quot;toolprovider&quot;&gt;ToolProvider&lt;/a&gt;, for example:</source>
          <target state="translated">実行時にコンパイラーは必要ありません。ただし、デフォルトのコンパイラが提供されている場合は、次のように&lt;a href=&quot;toolprovider&quot;&gt;ToolProvider&lt;/a&gt;を使用して見つけることができます。</target>
        </trans-unit>
        <trans-unit id="e86520d525eca5d9dc11030c4679128fdfa1c011" translate="yes" xml:space="preserve">
          <source>There is no requirement that a distinct result be returned each time the supplier is invoked.</source>
          <target state="translated">サプライヤが呼び出されるたびに明確な結果を返す必要はありません。</target>
        </trans-unit>
        <trans-unit id="198941742d95f771d09454ad8b8b1eb431801562" translate="yes" xml:space="preserve">
          <source>There is no requirement that a new or distinct result be returned each time the supplier is invoked.</source>
          <target state="translated">サプライヤーが呼び出されるたびに、新しい結果または別個の結果が返される必要はありません。</target>
        </trans-unit>
        <trans-unit id="6ac505bd21b647e3b0d66513534387f91f440e63" translate="yes" xml:space="preserve">
          <source>There is no requirement that a process represented by a &lt;code&gt;Process&lt;/code&gt; object execute asynchronously or concurrently with respect to the Java process that owns the &lt;code&gt;Process&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Process&lt;/code&gt; オブジェクトによって表されるプロセスが、 &lt;code&gt;Process&lt;/code&gt; オブジェクトを所有するJavaプロセスに対して非同期的または同時に実行されるという要件はありません。</target>
        </trans-unit>
        <trans-unit id="c16939470ebf7792b98ec8e5a304d0db0649596f" translate="yes" xml:space="preserve">
          <source>There is no requirement that a thread that releases a permit must have acquired that permit by calling &lt;a href=&quot;#acquire()&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt;. Correct usage of a semaphore is established by programming convention in the application.</source>
          <target state="translated">許可を解放するスレッドが、&lt;a href=&quot;#acquire()&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; を&lt;/a&gt;呼び出してその許可を取得している必要はありません。セマフォの正しい使用法は、アプリケーションのプログラミング規約によって確立されます。</target>
        </trans-unit>
        <trans-unit id="7d6e3be26ab58c8cff0d781adf4ccda3335e3f3e" translate="yes" xml:space="preserve">
          <source>There is no requirement that a thread that releases a permit must have acquired that permit by calling &lt;a href=&quot;#acquire()&quot;&gt;&lt;code&gt;acquire&lt;/code&gt;&lt;/a&gt;. Correct usage of a semaphore is established by programming convention in the application.</source>
          <target state="translated">許可を解放するスレッドが、&lt;a href=&quot;#acquire()&quot;&gt; &lt;code&gt;acquire&lt;/code&gt; &lt;/a&gt;を呼び出してその許可を取得している必要はありません。セマフォの正しい使用法は、アプリケーションのプログラミング規約によって確立されます。</target>
        </trans-unit>
        <trans-unit id="6bb1589cbaa1bcec5ff870e1e9b12d1f77370ebe" translate="yes" xml:space="preserve">
          <source>There is no requirement that a thread that releases a permit must have acquired that permit by calling &lt;a href=&quot;semaphore#acquire--&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt;. Correct usage of a semaphore is established by programming convention in the application.</source>
          <target state="translated">許可を解放するスレッドが、&lt;a href=&quot;semaphore#acquire--&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; を&lt;/a&gt;呼び出してその許可を取得している必要はありません。セマフォの正しい使用法は、アプリケーションのプログラミング規約によって確立されます。</target>
        </trans-unit>
        <trans-unit id="d19982f377f29e5caf430a892cc8364a3737d224" translate="yes" xml:space="preserve">
          <source>There is no requirement that a thread that releases a permit must have acquired that permit by calling &lt;a href=&quot;semaphore#acquire--&quot;&gt;&lt;code&gt;acquire&lt;/code&gt;&lt;/a&gt;. Correct usage of a semaphore is established by programming convention in the application.</source>
          <target state="translated">パーミットを解放するスレッドが、&lt;a href=&quot;semaphore#acquire--&quot;&gt; &lt;code&gt;acquire&lt;/code&gt; &lt;/a&gt;を呼び出してそのパーミットを取得している必要はありません。セマフォの正しい使用法は、アプリケーションのプログラミング規約によって確立されます。</target>
        </trans-unit>
        <trans-unit id="097e8899c7da1936057fe5002a0dd8a4411bffdd" translate="yes" xml:space="preserve">
          <source>There is no requirement that the process represented by a &lt;code&gt;
 Process&lt;/code&gt; object execute asynchronously or concurrently with respect to the Java process that owns the &lt;code&gt;Process&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt; Process&lt;/code&gt; オブジェクトによって表されるプロセスが、 &lt;code&gt;Process&lt;/code&gt; オブジェクトを所有するJavaプロセスに関して非同期または同時に実行される必要はありません。</target>
        </trans-unit>
        <trans-unit id="f87607fb5edefaad832093c1a18ed5623b9f0f26" translate="yes" xml:space="preserve">
          <source>There is no restriction on the number of client threads that may be simultaneously accessing the same doc. Therefore, all implementations of interface &lt;code&gt;Doc&lt;/code&gt; must be designed to be multiple thread safe.</source>
          <target state="translated">同じドキュメントに同時にアクセスできるクライアントスレッドの数に制限はありません。したがって、インターフェイス &lt;code&gt;Doc&lt;/code&gt; のすべての実装は、マルチスレッドセーフになるように設計する必要があります。</target>
        </trans-unit>
        <trans-unit id="a1210cbd94c899524cbebe37d1b7a14d3758c7b6" translate="yes" xml:space="preserve">
          <source>There is no restriction on the number of client threads that may be simultaneously accessing the same doc. Therefore, all implementations of interface Doc must be designed to be multiple thread safe.</source>
          <target state="translated">同じ Doc に同時にアクセスできるクライアントスレッドの数に制限はありません。したがって、インターフェイスDocのすべての実装は、マルチスレッドセーフであるように設計されなければなりません。</target>
        </trans-unit>
        <trans-unit id="54d1bdd3c5393ebf87fe28c474c4187eeec91d09" translate="yes" xml:space="preserve">
          <source>There is no restriction on the number of client threads that may be simultaneously accessing the same multidoc. Therefore, all implementations of interface MultiDoc must be designed to be multiple thread safe. In fact, a client thread could be adding docs to the end of the (conceptual) list while a Print Job thread is simultaneously obtaining docs from the beginning of the list; provided the multidoc object synchronizes the threads properly, the two threads will not interfere with each other</source>
          <target state="translated">同じMultidocに同時にアクセスできるクライアントスレッドの数に制限はありません。したがって、インターフェイスMultiDocのすべての実装は、マルチスレッドセーフであるように設計されなければならない。実際には、クライアントスレッドが(概念的な)リストの最後にdocsを追加している間に、Print Jobスレッドが同時にリストの最初からdocsを取得している可能性があります;multidocオブジェクトがスレッドを適切に同期させれば、2つのスレッドは互いに干渉しません。</target>
        </trans-unit>
        <trans-unit id="9957dc281beac2f6bbba1b838150d8a8101149b9" translate="yes" xml:space="preserve">
          <source>There is no restriction on the number of client threads that may be simultaneously accessing the same multidoc. Therefore, all implementations of interface MultiDoc must be designed to be multiple thread safe. In fact, a client thread could be adding docs to the end of the (conceptual) list while a Print Job thread is simultaneously obtaining docs from the beginning of the list; provided the multidoc object synchronizes the threads properly, the two threads will not interfere with each other.</source>
          <target state="translated">同じMultidocに同時にアクセスできるクライアントスレッドの数に制限はありません。したがって、インターフェイスMultiDocのすべての実装は、マルチスレッドセーフであるように設計されなければならない。実際、クライアントスレッドが(概念的な)リストの最後にdocsを追加している間に、Print Jobスレッドが同時にリストの最初からdocsを取得している可能性があります;multidocオブジェクトがスレッドを適切に同期させれば、2つのスレッドがお互いに干渉することはありません。</target>
        </trans-unit>
        <trans-unit id="d5b4a3972e1a2f7f3338a732047fe875411d8907" translate="yes" xml:space="preserve">
          <source>There is no restriction on the value of &lt;code&gt;fromIndex&lt;/code&gt;. If it is negative, it has the same effect as if it were zero: this entire string may be searched. If it is greater than the length of this string, it has the same effect as if it were equal to the length of this string: &lt;code&gt;-1&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;fromIndex&lt;/code&gt; の値に制限はありません。負の場合は、ゼロの場合と同じ効果があります。この文字列全体を検索できます。この文字列の長さより大きい場合は、この文字列の長さに等しい場合と同じ効果があります。 &lt;code&gt;-1&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="e340b37b39ba453a5230e865c6c6369e8aa4a836" translate="yes" xml:space="preserve">
          <source>There is no root in the tree</source>
          <target state="translated">木には根がない</target>
        </trans-unit>
        <trans-unit id="41d4b46878c902aebcab2313c7f766261a893b1b" translate="yes" xml:space="preserve">
          <source>There is one circumstance under which &lt;code&gt;putSpi, removeSpi and
 childSpi&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;putSpi, removeSpi and childSpi&lt;/code&gt; が使用される状況は1つです。</target>
        </trans-unit>
        <trans-unit id="514e11614a5cff7c22ae4d822f5dd9cd11012a75" translate="yes" xml:space="preserve">
          <source>There is one subclass of this class for each non-boolean primitive type.</source>
          <target state="translated">このクラスのサブクラスは、非ブーリアンプリミティブ型ごとに1つずつあります。</target>
        </trans-unit>
        <trans-unit id="633f37c2f9ed69daba67e576cc65222c3b761eee" translate="yes" xml:space="preserve">
          <source>There is only one Configuration object installed in the runtime at any given time. A Configuration object can be installed by calling the &lt;code&gt;setConfiguration&lt;/code&gt; method. The installed Configuration object can be obtained by calling the &lt;code&gt;getConfiguration&lt;/code&gt; method.</source>
          <target state="translated">ランタイムにインストールされるConfigurationオブジェクトは常に1つだけです。Configurationオブジェクトは、 &lt;code&gt;setConfiguration&lt;/code&gt; メソッドを呼び出すことでインストールできます。インストールされているConfigurationオブジェクトは、 &lt;code&gt;getConfiguration&lt;/code&gt; メソッドを呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="70c5e4ecda10caf422eac93731e929117c0b2433" translate="yes" xml:space="preserve">
          <source>There is only one Policy object installed in the runtime at any given time. A Policy object can be installed by calling the &lt;code&gt;setPolicy&lt;/code&gt; method. The installed Policy object can be obtained by calling the &lt;code&gt;getPolicy&lt;/code&gt; method.</source>
          <target state="translated">ランタイムにインストールされるポリシーオブジェクトは常に1つだけです。Policyオブジェクトは、 &lt;code&gt;setPolicy&lt;/code&gt; メソッドを呼び出すことによってインストールできます。インストールされたPolicyオブジェクトは、 &lt;code&gt;getPolicy&lt;/code&gt; メソッドを呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="7e8219f9fa1e5ad5fd8b7ff9a0008b52bda96130" translate="yes" xml:space="preserve">
          <source>There is some nonnegative integer</source>
          <target state="translated">ある非負の整数</target>
        </trans-unit>
        <trans-unit id="d6aeefc5fc1e3b4b3221ed888ba5591b270dae86" translate="yes" xml:space="preserve">
          <source>There may be more than one method with a particular name and parameter types in a class because while the Java language forbids a class to declare multiple methods with the same signature but different return types, the Java virtual machine does not. This increased flexibility in the virtual machine can be used to implement various language features. For example, covariant returns can be implemented with &lt;a href=&quot;reflect/method#isBridge()&quot;&gt;bridge methods&lt;/a&gt;; the bridge method and the overriding method would have the same signature but different return types.</source>
          <target state="translated">クラス内に特定の名前とパラメータータイプを持つメソッドが複数存在する場合があります。これは、Java言語では、クラスが同じ署名で異なる戻りタイプを持つ複数のメソッドを宣言することを禁止しているのに対し、Java仮想マシンでは禁止していないためです。この仮想マシンの柔軟性の向上は、さまざまな言語機能を実装するために使用できます。たとえば、共変リターンは&lt;a href=&quot;reflect/method#isBridge()&quot;&gt;ブリッジメソッドを使用して&lt;/a&gt;実装できます。ブリッジメソッドとオーバーライドメソッドのシグネチャは同じですが、戻り値の型が異なります。</target>
        </trans-unit>
        <trans-unit id="ba97abd4748de1b1cab09b1271aeb675d2d60a5d" translate="yes" xml:space="preserve">
          <source>There may be more than one method with matching name and parameter types in a class because while the Java language forbids a class to declare multiple methods with the same signature but different return types, the Java virtual machine does not. This increased flexibility in the virtual machine can be used to implement various language features. For example, covariant returns can be implemented with &lt;a href=&quot;reflect/method#isBridge()&quot;&gt;bridge methods&lt;/a&gt;; the bridge method and the overriding method would have the same signature but different return types. This method would return the overriding method as it would have a more specific return type.</source>
          <target state="translated">クラス内に名前とパラメーターの型が一致するメソッドが複数存在する場合があります。これは、Java言語では、クラスが同じ署名で戻り型が異なる複数のメソッドを宣言することを禁止しているのに対し、Java仮想マシンでは禁止していないためです。この仮想マシンの柔軟性の向上は、さまざまな言語機能を実装するために使用できます。たとえば、共変リターンは&lt;a href=&quot;reflect/method#isBridge()&quot;&gt;ブリッジメソッドを使用して&lt;/a&gt;実装できます。ブリッジメソッドとオーバーライドメソッドのシグネチャは同じですが、戻り値の型が異なります。このメソッドは、より具体的な戻り値の型を持つため、オーバーライドするメソッドを返します。</target>
        </trans-unit>
        <trans-unit id="2134dbfd5d5d90acff44e032a45a72212d5e15eb" translate="yes" xml:space="preserve">
          <source>There must be at least one non-omitted pred function.</source>
          <target state="translated">省略されていないプレッド関数が少なくとも1つは存在しなければならない。</target>
        </trans-unit>
        <trans-unit id="9d456bd878e06fa4545ebcea4f3178823c1af57a" translate="yes" xml:space="preserve">
          <source>There should never be start/endPrefixMapping events for the &quot;xml&quot; prefix, since it is predeclared and immutable.</source>
          <target state="translated">プレフィックス &quot;xml&quot; の start/endPrefixMapping イベントは、事前に宣言されていて不変であるため、決してあってはなりません。</target>
        </trans-unit>
        <trans-unit id="dd857f58606b9ccfec2f4438f9f07a8293a4e421" translate="yes" xml:space="preserve">
          <source>There will typically be one provider per platform, such as Windows or Linux, to support accessibility for screen readers and magnifiers. However, more than one service provider can be activated. For example, a test tool which provides visual results obtained by interrogating the Java Accessibility API can be activated along with the activation of the support for screen readers and screen magnifiers.</source>
          <target state="translated">通常、スクリーンリーダーや拡大鏡のアクセシビリティをサポートするために、WindowsやLinuxなどのプラットフォームごとに1つのプロバイダが存在します。しかし、複数のサービス・プロバイダを有効化することもできます。例えば、JavaアクセシビリティAPIを照会して得られた視覚的な結果を提供するテストツールを、スクリーンリーダとスクリーン拡大鏡のサポートの有効化とともに有効化することができます。</target>
        </trans-unit>
        <trans-unit id="2567bf148c60cd0704ecaf928436c03eebe56e55" translate="yes" xml:space="preserve">
          <source>There're various ways user can hook up his own HTTP cookie management behavior, e.g.</source>
          <target state="translated">ユーザが自分自身のHTTPクッキー管理動作をフックアップするための様々な方法があります。</target>
        </trans-unit>
        <trans-unit id="5d7377bb136e7ab1b807921fa3bbfd29b224b919" translate="yes" xml:space="preserve">
          <source>Therefore, the predicate set on a &lt;code&gt;FilteredRowSet&lt;/code&gt; object must be considered as bi-directional and the set criterion as the gating mechanism for all views and updates to the &lt;code&gt;FilteredRowSet&lt;/code&gt; object. Any attempt to update the &lt;code&gt;FilteredRowSet&lt;/code&gt; that violates the criterion will result in a &lt;code&gt;SQLException&lt;/code&gt; object being thrown.</source>
          <target state="translated">したがって、 &lt;code&gt;FilteredRowSet&lt;/code&gt; オブジェクトに設定された述語は双方向と見なされ、設定された基準はすべてのビューと &lt;code&gt;FilteredRowSet&lt;/code&gt; オブジェクトの更新のゲーティングメカニズムと見なされる必要があります。基準に違反する &lt;code&gt;FilteredRowSet&lt;/code&gt; を更新しようとすると、 &lt;code&gt;SQLException&lt;/code&gt; オブジェクトがスローされます。</target>
        </trans-unit>
        <trans-unit id="508f2c406ee1e58b8f5ad1a09d306c653186d83b" translate="yes" xml:space="preserve">
          <source>These &lt;code&gt;SyncProvider&lt;/code&gt; implementations are bundled with the reference implementation, which makes them always available to &lt;code&gt;RowSet&lt;/code&gt; implementations. &lt;code&gt;SyncProvider&lt;/code&gt; implementations make themselves available by being registered with the &lt;code&gt;SyncFactory&lt;/code&gt; singleton. When a &lt;code&gt;RowSet&lt;/code&gt; object requests a provider, by specifying it in the constructor or as an argument to the &lt;code&gt;CachedRowSet&lt;/code&gt; method &lt;code&gt;setSyncProvider&lt;/code&gt;, the &lt;code&gt;SyncFactory&lt;/code&gt; singleton checks to see if the requested provider has been registered with it. If it has, the &lt;code&gt;SyncFactory&lt;/code&gt; creates an instance of it and passes it to the requesting &lt;code&gt;RowSet&lt;/code&gt; object. If the &lt;code&gt;SyncProvider&lt;/code&gt; implementation that is specified has not been registered, the &lt;code&gt;SyncFactory&lt;/code&gt; singleton causes a &lt;code&gt;SyncFactoryException&lt;/code&gt; object to be thrown. If no provider is specified, the &lt;code&gt;SyncFactory&lt;/code&gt; singleton will create an instance of the default provider implementation, &lt;code&gt;RIOptimisticProvider&lt;/code&gt;, and pass it to the requesting &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">これらの &lt;code&gt;SyncProvider&lt;/code&gt; 実装はリファレンス実装にバンドルされているため、 &lt;code&gt;RowSet&lt;/code&gt; 実装で常に利用できます。 &lt;code&gt;SyncProvider&lt;/code&gt; 実装は、 &lt;code&gt;SyncFactory&lt;/code&gt; シングルトンに登録することで利用可能になります。場合 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトは、コンストラクタまたは引数として指定することにより、プロバイダを要求 &lt;code&gt;CachedRowSet&lt;/code&gt; の方法 &lt;code&gt;setSyncProvider&lt;/code&gt; 、 &lt;code&gt;SyncFactory&lt;/code&gt; が要求されたプロバイダは、それに登録されているかどうかをチェックシングルトン。存在する場合、 &lt;code&gt;SyncFactory&lt;/code&gt; はそのインスタンスを作成し、それを要求元の &lt;code&gt;RowSet&lt;/code&gt; に渡します。オブジェクト。指定された &lt;code&gt;SyncProvider&lt;/code&gt; 実装が登録されていない場合、 &lt;code&gt;SyncFactory&lt;/code&gt; シングルトンによって &lt;code&gt;SyncFactoryException&lt;/code&gt; オブジェクトがスローされます。プロバイダの指定がない場合、 &lt;code&gt;SyncFactory&lt;/code&gt; がシングルトンは、デフォルトのプロバイダの実装のインスタンスを作成します &lt;code&gt;RIOptimisticProvider&lt;/code&gt; を、と要求に渡し &lt;code&gt;RowSet&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="0fa6040eb2b02513907d3a38e0abe79567d2b28a" translate="yes" xml:space="preserve">
          <source>These APIs model declarations and types of the Java programming language, and define interfaces for tools such as compilers which can be invoked from a program.</source>
          <target state="translated">これらのAPIは、Javaプログラミング言語の宣言と型をモデル化し、プログラムから呼び出すことができるコンパイラなどのツールのためのインタフェースを定義します。</target>
        </trans-unit>
        <trans-unit id="8405dc8d6e96295949c0c54f86ccd888ec7eea86" translate="yes" xml:space="preserve">
          <source>These IDs are the string form of a &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらのIDは、&lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; の&lt;/a&gt;文字列形式です。</target>
        </trans-unit>
        <trans-unit id="631b878b0ebefad46a326de5071673b0a67c7ab6" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#algorithmparametergenerator-algorithms&quot;&gt; AlgorithmParameterGenerator section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムは、Javaセキュリティ標準アルゴリズム名仕様の&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#algorithmparametergenerator-algorithms&quot;&gt;AlgorithmParameterGeneratorセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="7b4e71dfd3212a92bf027c0a518f7b889484ef7b" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#algorithmparameters-algorithms&quot;&gt; AlgorithmParameters section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムは、Javaセキュリティ標準アルゴリズム名仕様の&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#algorithmparameters-algorithms&quot;&gt;AlgorithmParametersセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="c0f1ee4ebecb85d3bec7c2ace6256272d6386866" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#keyfactory-algorithms&quot;&gt; KeyFactory section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムは、Javaセキュリティ標準アルゴリズム名仕様の&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#keyfactory-algorithms&quot;&gt;KeyFactoryセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1c2c57df12cc4620800eb20ecc3f898adfb43697" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#keygenerator-algorithms&quot;&gt; KeyGenerator section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムは、Javaセキュリティ標準アルゴリズム名仕様の&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#keygenerator-algorithms&quot;&gt;KeyGeneratorセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="dd46e1a239bac9d173c7fde28f7662e24c021745" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#keypairgenerator-algorithms&quot;&gt; KeyPairGenerator section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムは、Javaセキュリティ標準アルゴリズム名仕様の&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#keypairgenerator-algorithms&quot;&gt;KeyPairGeneratorセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="bd271b39c88e6341c8b4f26677a469b412a58b57" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#mac-algorithms&quot;&gt; Mac section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムは、Javaセキュリティ標準アルゴリズム名仕様の&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#mac-algorithms&quot;&gt;Macセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="3825569337e6a25c5ecf05277da5594fd76ab773" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#messagedigest-algorithms&quot;&gt; MessageDigest section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムは、Javaセキュリティ標準アルゴリズム名仕様の&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#messagedigest-algorithms&quot;&gt;MessageDigestセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="fd691ad65238fef472ba79b9c93faa459d1b7590" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#secretkeyfactory-algorithms&quot;&gt; SecretKeyFactory section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムは、Javaセキュリティ標準アルゴリズム名仕様の&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#secretkeyfactory-algorithms&quot;&gt;SecretKeyFactoryセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="263cf3bda54999e2ef74f653be2bb0b98dc6e03f" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#signature-algorithms&quot;&gt; Signature section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムは、Javaセキュリティ標準アルゴリズム名仕様の&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#signature-algorithms&quot;&gt;署名セクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="2ac6d107158b337a6c06b66cc752f623087b39c6" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#AlgorithmParameterGenerator&quot;&gt; AlgorithmParameterGenerator section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムについては、Java暗号化アーキテクチャ標準アルゴリズム名ドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#AlgorithmParameterGenerator&quot;&gt;AlgorithmParameterGeneratorセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="2840e4cdcf1ea5e28eecc02068cd6e631114c12e" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#AlgorithmParameters&quot;&gt; AlgorithmParameters section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムについては、Java暗号化アーキテクチャ標準アルゴリズム名ドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#AlgorithmParameters&quot;&gt;AlgorithmParametersセクション&lt;/a&gt;で説明しています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="7810b58cc40d92a27956a4ca52be2a76493d1bab" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyFactory&quot;&gt; KeyFactory section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムについては、Java暗号化アーキテクチャ標準アルゴリズム名ドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyFactory&quot;&gt;KeyFactoryセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="a50f9efd915eeed3ad86d74499ef1250eabefdda" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyGenerator&quot;&gt; KeyGenerator section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムについては、Java暗号化アーキテクチャ標準アルゴリズム名ドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyGenerator&quot;&gt;KeyGeneratorセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="24c1f8a9dcc7a5506f057dba5d8bfbe7a8fd8ab2" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyPairGenerator&quot;&gt; KeyPairGenerator section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムについては、Java暗号化アーキテクチャ標準アルゴリズム名ドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#KeyPairGenerator&quot;&gt;KeyPairGeneratorセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="67fa782ff8eb29fae6354c59022ac3e4584f2bd2" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Mac&quot;&gt; Mac section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムは、Java暗号化アーキテクチャの標準アルゴリズム名のドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Mac&quot;&gt;Macセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="df11e8427aa46377243a3bc2fdea20b313fc069f" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#MessageDigest&quot;&gt; MessageDigest section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムは、Java暗号化アーキテクチャの標準アルゴリズム名のドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#MessageDigest&quot;&gt;MessageDigestセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="5d0b5ae813100c512f39daa5af7097e9f5e4bc52" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#SecretKeyFactory&quot;&gt; SecretKeyFactory section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムは、Java暗号化アーキテクチャの標準アルゴリズム名のドキュメントの&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#SecretKeyFactory&quot;&gt;SecretKeyFactoryセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="fc5cf5ef0ceb706cddfb7a9b2c6fe158ff062a97" translate="yes" xml:space="preserve">
          <source>These algorithms are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Signature&quot;&gt; Signature section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのアルゴリズムは、Java暗号化アーキテクチャの標準アルゴリズム名のドキュメントの「&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Signature&quot;&gt;署名」セクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="10bbd31b59aad04b291f617b226c818f14f26a0a" translate="yes" xml:space="preserve">
          <source>These are &lt;code&gt;'\u0030'&lt;/code&gt; through &lt;code&gt;'\u0039'&lt;/code&gt; and &lt;code&gt;'\u0061'&lt;/code&gt; through &lt;code&gt;'\u007A'&lt;/code&gt;. If &lt;code&gt;radix&lt;/code&gt; is &lt;var&gt;N&lt;/var&gt;, then the first &lt;var&gt;N&lt;/var&gt; of these characters are used as radix-&lt;var&gt;N&lt;/var&gt; digits in the order shown. Thus, the digits for hexadecimal (radix 16) are &lt;code&gt;0123456789abcdef&lt;/code&gt;. If uppercase letters are desired, the &lt;a href=&quot;string#toUpperCase()&quot;&gt;&lt;code&gt;String.toUpperCase()&lt;/code&gt;&lt;/a&gt; method may be called on the result:</source>
          <target state="translated">これらは、 &lt;code&gt;'\u0030'&lt;/code&gt; から &lt;code&gt;'\u0039'&lt;/code&gt; および &lt;code&gt;'\u0061'&lt;/code&gt; から &lt;code&gt;'\u007A'&lt;/code&gt; です。 &lt;code&gt;radix&lt;/code&gt; が &lt;var&gt;N&lt;/var&gt; の場合、これらの文字の最初の &lt;var&gt;N&lt;/var&gt; は、示されている順序で基数 &lt;var&gt;N&lt;/var&gt; 桁として使用されます。したがって、16進数（基数16）の数字は &lt;code&gt;0123456789abcdef&lt;/code&gt; です。大文字が必要な場合は、&lt;a href=&quot;string#toUpperCase()&quot;&gt; &lt;code&gt;String.toUpperCase()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="e0bd70779c56b886df3b68e00d621608fc2cd850" translate="yes" xml:space="preserve">
          <source>These are &lt;code&gt;'\u0030'&lt;/code&gt; through &lt;code&gt;'\u0039'&lt;/code&gt; and &lt;code&gt;'\u0061'&lt;/code&gt; through &lt;code&gt;'\u007A'&lt;/code&gt;. If &lt;code&gt;radix&lt;/code&gt; is &lt;var&gt;N&lt;/var&gt;, then the first &lt;var&gt;N&lt;/var&gt; of these characters are used as radix-&lt;var&gt;N&lt;/var&gt; digits in the order shown. Thus, the digits for hexadecimal (radix 16) are &lt;code&gt;0123456789abcdef&lt;/code&gt;. If uppercase letters are desired, the &lt;a href=&quot;string#toUpperCase--&quot;&gt;&lt;code&gt;String.toUpperCase()&lt;/code&gt;&lt;/a&gt; method may be called on the result:</source>
          <target state="translated">これらは &lt;code&gt;'\u0030'&lt;/code&gt; から &lt;code&gt;'\u0039'&lt;/code&gt; および &lt;code&gt;'\u0061'&lt;/code&gt; から &lt;code&gt;'\u007A'&lt;/code&gt; です。 &lt;code&gt;radix&lt;/code&gt; が &lt;var&gt;N&lt;/var&gt; の場合、これらの文字の最初の &lt;var&gt;N&lt;/var&gt; は、示されている順序で基数 &lt;var&gt;N&lt;/var&gt; の数字として使用されます。したがって、16進数（基数16）の数字は &lt;code&gt;0123456789abcdef&lt;/code&gt; です。大文字が必要な場合は、&lt;a href=&quot;string#toUpperCase--&quot;&gt; &lt;code&gt;String.toUpperCase()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="c8a604fade3d0169b49ea521e11dcac00afe51a7" translate="yes" xml:space="preserve">
          <source>These are &lt;code&gt;'\u0030'&lt;/code&gt; through &lt;code&gt;'\u0039'&lt;/code&gt; and &lt;code&gt;'\u0061'&lt;/code&gt; through &lt;code&gt;'\u007a'&lt;/code&gt;. If &lt;code&gt;radix&lt;/code&gt; is &lt;var&gt;N&lt;/var&gt;, then the first &lt;var&gt;N&lt;/var&gt; of these characters are used as radix-&lt;var&gt;N&lt;/var&gt; digits in the order shown. Thus, the digits for hexadecimal (radix 16) are &lt;code&gt;0123456789abcdef&lt;/code&gt;. If uppercase letters are desired, the &lt;a href=&quot;string#toUpperCase()&quot;&gt;&lt;code&gt;String.toUpperCase()&lt;/code&gt;&lt;/a&gt; method may be called on the result:</source>
          <target state="translated">これらは、 &lt;code&gt;'\u0030'&lt;/code&gt; から &lt;code&gt;'\u0039'&lt;/code&gt; および &lt;code&gt;'\u0061'&lt;/code&gt; から &lt;code&gt;'\u007a'&lt;/code&gt; です。 &lt;code&gt;radix&lt;/code&gt; が &lt;var&gt;N&lt;/var&gt; の場合、これらの文字の最初の &lt;var&gt;N&lt;/var&gt; は、示されている順序で基数 &lt;var&gt;N&lt;/var&gt; 桁として使用されます。したがって、16進数（基数16）の数字は &lt;code&gt;0123456789abcdef&lt;/code&gt; です。大文字が必要な場合は、&lt;a href=&quot;string#toUpperCase()&quot;&gt; &lt;code&gt;String.toUpperCase()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="6ce73c7a8bcb9b77ceb02b691c9f5e1120078896" translate="yes" xml:space="preserve">
          <source>These are &lt;code&gt;'\u0030'&lt;/code&gt; through &lt;code&gt;'\u0039'&lt;/code&gt; and &lt;code&gt;'\u0061'&lt;/code&gt; through &lt;code&gt;'\u007a'&lt;/code&gt;. If &lt;code&gt;radix&lt;/code&gt; is &lt;var&gt;N&lt;/var&gt;, then the first &lt;var&gt;N&lt;/var&gt; of these characters are used as radix-&lt;var&gt;N&lt;/var&gt; digits in the order shown. Thus, the digits for hexadecimal (radix 16) are &lt;code&gt;0123456789abcdef&lt;/code&gt;. If uppercase letters are desired, the &lt;a href=&quot;string#toUpperCase--&quot;&gt;&lt;code&gt;String.toUpperCase()&lt;/code&gt;&lt;/a&gt; method may be called on the result:</source>
          <target state="translated">これらは &lt;code&gt;'\u0030'&lt;/code&gt; から &lt;code&gt;'\u0039'&lt;/code&gt; および &lt;code&gt;'\u0061'&lt;/code&gt; から &lt;code&gt;'\u007a'&lt;/code&gt; です。 &lt;code&gt;radix&lt;/code&gt; が &lt;var&gt;N&lt;/var&gt; の場合、これらの文字の最初の &lt;var&gt;N&lt;/var&gt; は、示されている順序で基数 &lt;var&gt;N&lt;/var&gt; の数字として使用されます。したがって、16進数（基数16）の数字は &lt;code&gt;0123456789abcdef&lt;/code&gt; です。大文字が必要な場合は、&lt;a href=&quot;string#toUpperCase--&quot;&gt; &lt;code&gt;String.toUpperCase()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="1959b44b606d1297e43332ac44b1adaf84cdd4db" translate="yes" xml:space="preserve">
          <source>These are some of the Unicode characters for which this method returns &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">これらは、このメソッドが &lt;code&gt;true&lt;/code&gt; を返すUnicode文字の一部です。</target>
        </trans-unit>
        <trans-unit id="fa0898612837a31f540bec1dccf10ba5ee8752d0" translate="yes" xml:space="preserve">
          <source>These are some of the points that must be considered before using this interface throughout an application.</source>
          <target state="translated">これらは、アプリケーション全体でこのインターフェースを使用する前に考慮しなければならないポイントのいくつかです。</target>
        </trans-unit>
        <trans-unit id="48b003314e199b67286aa0a74af0f5fe08230f55" translate="yes" xml:space="preserve">
          <source>These are the characters &lt;code&gt;'\u0030'&lt;/code&gt; through &lt;code&gt;'\u0037'&lt;/code&gt;.</source>
          <target state="translated">これらは &lt;code&gt;'\u0030'&lt;/code&gt; から &lt;code&gt;'\u0037'&lt;/code&gt; までの文字です。</target>
        </trans-unit>
        <trans-unit id="3bd9664c12b4b82014197950bcb6a76aced5ea74" translate="yes" xml:space="preserve">
          <source>These are the characters &lt;code&gt;'\u0030'&lt;/code&gt; through &lt;code&gt;'\u0039'&lt;/code&gt; and &lt;code&gt;'\u0061'&lt;/code&gt; through &lt;code&gt;'\u0066'&lt;/code&gt;. If uppercase letters are desired, the &lt;a href=&quot;string#toUpperCase()&quot;&gt;&lt;code&gt;String.toUpperCase()&lt;/code&gt;&lt;/a&gt; method may be called on the result:</source>
          <target state="translated">これらは、文字 &lt;code&gt;'\u0030'&lt;/code&gt; から &lt;code&gt;'\u0039'&lt;/code&gt; および &lt;code&gt;'\u0061'&lt;/code&gt; から &lt;code&gt;'\u0066'&lt;/code&gt; です。大文字が必要な場合は、&lt;a href=&quot;string#toUpperCase()&quot;&gt; &lt;code&gt;String.toUpperCase()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="08694341e216489e339c217c51678557a14dc442" translate="yes" xml:space="preserve">
          <source>These are the characters &lt;code&gt;'\u0030'&lt;/code&gt; through &lt;code&gt;'\u0039'&lt;/code&gt; and &lt;code&gt;'\u0061'&lt;/code&gt; through &lt;code&gt;'\u0066'&lt;/code&gt;. If uppercase letters are desired, the &lt;a href=&quot;string#toUpperCase--&quot;&gt;&lt;code&gt;String.toUpperCase()&lt;/code&gt;&lt;/a&gt; method may be called on the result:</source>
          <target state="translated">これらは &lt;code&gt;'\u0030'&lt;/code&gt; から &lt;code&gt;'\u0039'&lt;/code&gt; および &lt;code&gt;'\u0061'&lt;/code&gt; から &lt;code&gt;'\u0066'&lt;/code&gt; です。大文字が必要な場合は、&lt;a href=&quot;string#toUpperCase--&quot;&gt; &lt;code&gt;String.toUpperCase()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="75b84747262f07da09c94e7a4dea245f9f7c3b81" translate="yes" xml:space="preserve">
          <source>These are the main advantages of using a &lt;code&gt;DataSource&lt;/code&gt; object to make a connection:</source>
          <target state="translated">これらは、データ &lt;code&gt;DataSource&lt;/code&gt; オブジェクトを使用して接続を確立する主な利点です。</target>
        </trans-unit>
        <trans-unit id="14bf67841c7333a36b970333f8654472760a62e1" translate="yes" xml:space="preserve">
          <source>These are the views that represent the child elements of the element this view represents (The logical view to translate to a physical view).</source>
          <target state="translated">これらは、このビューが表す要素の子要素を表すビューです(物理ビューに変換するための論理ビュー)。</target>
        </trans-unit>
        <trans-unit id="0dc25ce5ef285fd983e7cc3db174ba44009404f3" translate="yes" xml:space="preserve">
          <source>These are the views that represent the child elements of the element this view represents (The logical view to translate to a physical view). These are not directly children of this view. These are either placed into the rows directly or used for the purpose of breaking into smaller chunks, to form the physical view.</source>
          <target state="translated">これらは、このビューが表す要素の子要素を表すビューです(物理ビューに変換する論理ビュー)。これらは、このビューの直接の子ではありません。これらは、直接行に配置されるか、物理的なビューを形成するために、より小さなチャンクに分割する目的で使用されます。</target>
        </trans-unit>
        <trans-unit id="99b100126a9566a5dfd6a5042da372581f55c4cf" translate="yes" xml:space="preserve">
          <source>These are used to set the initial settings for the initially displayed print service. Values which are not supported by the print service are ignored. As the user browses print services, attributes and values are copied to the new display. If a user browses a print service which does not support a particular attribute-value, the default for that service is used as the new value to be copied.</source>
          <target state="translated">最初に表示されるプリントサービスの初期設定に使用します。プリントサービスでサポートされていない値は無視されます。ユーザーが印刷サービスをブラウズすると、属性と値が新しい表示にコピーされます。ユーザーが特定の属性値をサポートしていない印刷サービスを閲覧した場合、そのサービスのデフォルト値がコピーされる新しい値として使用されます。</target>
        </trans-unit>
        <trans-unit id="23359efff4d455ce40dbe667ac079776cbdfec68" translate="yes" xml:space="preserve">
          <source>These behaviours allow an application to directly pass the user settings returned from &lt;code&gt;printDialog(PrintRequestAttributeSet attributes&lt;/code&gt; to this print() method.</source>
          <target state="translated">これらの動作により、アプリケーションは、 &lt;code&gt;printDialog(PrintRequestAttributeSet attributes&lt;/code&gt; から返されたユーザー設定をこのprint（）メソッドに直接渡すことができます。</target>
        </trans-unit>
        <trans-unit id="3be6610f951c812ed29655c7c3c7855bd120baa2" translate="yes" xml:space="preserve">
          <source>These bulk operations accept a &lt;code&gt;parallelismThreshold&lt;/code&gt; argument. Methods proceed sequentially if the current map size is estimated to be less than the given threshold. Using a value of &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; suppresses all parallelism. Using a value of &lt;code&gt;1&lt;/code&gt; results in maximal parallelism by partitioning into enough subtasks to fully utilize the &lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt; that is used for all parallel computations. Normally, you would initially choose one of these extreme values, and then measure performance of using in-between values that trade off overhead versus throughput.</source>
          <target state="translated">これらの一括操作は、 &lt;code&gt;parallelismThreshold&lt;/code&gt; 引数を受け入れます。現在のマップサイズが指定されたしきい値よりも小さいと推定される場合、メソッドは順番に進行します。 &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の値を使用すると、すべての並列処理が抑制されます。値 &lt;code&gt;1&lt;/code&gt; を使用すると、すべての並列計算に使用される&lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt;を完全に利用するのに十分なサブタスクに分割することにより、最大の並列処理が実現します。通常、最初にこれらの極値の1つを選択してから、オーバーヘッドとスループットをトレードオフする中間値を使用した場合のパフォーマンスを測定します。</target>
        </trans-unit>
        <trans-unit id="8e8017b0b68c1f6f870bc8aa6a50aadf98ce71b6" translate="yes" xml:space="preserve">
          <source>These bulk operations accept a &lt;code&gt;parallelismThreshold&lt;/code&gt; argument. Methods proceed sequentially if the current map size is estimated to be less than the given threshold. Using a value of &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; suppresses all parallelism. Using a value of &lt;code&gt;1&lt;/code&gt; results in maximal parallelism by partitioning into enough subtasks to fully utilize the &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt; that is used for all parallel computations. Normally, you would initially choose one of these extreme values, and then measure performance of using in-between values that trade off overhead versus throughput.</source>
          <target state="translated">これらの一括操作は、 &lt;code&gt;parallelismThreshold&lt;/code&gt; 引数を受け入れます。現在のマップサイズが指定されたしきい値よりも小さいと推定される場合、メソッドは順次処理されます。 &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の値を使用すると、すべての並列処理が抑制されます。値 &lt;code&gt;1&lt;/code&gt; を使用すると、すべての並列計算に使用される&lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt;を完全に利用するのに十分なサブタスクに分割することにより、並列処理が最大になります。通常、最初にこれらの極端な値の1つを選択し、オーバーヘッドとスループットのトレードオフとなる中間値を使用してパフォーマンスを測定します。</target>
        </trans-unit>
        <trans-unit id="9b9c967868c87c3fa1c1eb6a72aaec7b24732e2f" translate="yes" xml:space="preserve">
          <source>These byte totals, as well as the &lt;a href=&quot;#getBytesRead()&quot;&gt;total bytes read&lt;/a&gt; and the &lt;a href=&quot;#getBytesWritten()&quot;&gt;total bytes written&lt;/a&gt; values, will be updated even in the event that a &lt;a href=&quot;dataformatexception&quot;&gt;&lt;code&gt;DataFormatException&lt;/code&gt;&lt;/a&gt; is thrown to reflect the amount of data consumed and produced before the exception occurred.</source>
          <target state="translated">これらのバイト合計、および&lt;a href=&quot;#getBytesRead()&quot;&gt;読み取ら&lt;/a&gt;れた&lt;a href=&quot;#getBytesWritten()&quot;&gt;合計バイト数と書き込まれ&lt;/a&gt;た合計バイト数の値は、例外が発生する前に消費および生成されたデータの量を反映するために&lt;a href=&quot;dataformatexception&quot;&gt; &lt;code&gt;DataFormatException&lt;/code&gt; &lt;/a&gt;がスローされた場合でも更新されます。</target>
        </trans-unit>
        <trans-unit id="61e99440ec085de26d7fa6b38952f9639f22cdf5" translate="yes" xml:space="preserve">
          <source>These callbacks are used when the default rules for URL hostname verification fail.</source>
          <target state="translated">これらのコールバックは、URLホスト名検証のデフォルトルールが失敗した場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="bd87981d1c383695eeedcb97149451439e2b8d64" translate="yes" xml:space="preserve">
          <source>These can be long lived, and frequently correspond to an entire login session for some user. The session specifies a particular cipher suite which is being actively used by all connections in that session, as well as the identities of the session's client and server.</source>
          <target state="translated">これらは長く続くことがあり、あるユーザのログインセッション全体に対応していることが多いです。セッションは、そのセッション内のすべての接続でアクティブに使用されている特定の暗号スイートと、 セッションのクライアントとサーバの身元を指定します。</target>
        </trans-unit>
        <trans-unit id="30905a97f0d453c12f6b8ea895f71cbb656d45d8" translate="yes" xml:space="preserve">
          <source>These certificates are managed and vouched for by &lt;em&gt;Certificate Authorities&lt;/em&gt; (CAs). CAs are services which create certificates by placing data in the X.509 standard format and then digitally signing that data. CAs act as trusted third parties, making introductions between principals who have no direct knowledge of each other. CA certificates are either signed by themselves, or by some other CA such as a &quot;root&quot; CA.</source>
          <target state="translated">これらの証明書は、&lt;em&gt;認証局&lt;/em&gt;（CA）によって管理および保証されています。CAは、X.509標準形式でデータを配置し、そのデータにデジタル署名することで証明書を作成するサービスです。CAは信頼できるサードパーティとして機能し、互いに直接の知識を持たないプリンシパル間を紹介します。CA証明書は、それ自体、または「ルート」CAなどの他のCAによって署名されています。</target>
        </trans-unit>
        <trans-unit id="e7654f792c1fa0442a29a75f4478a4533c2aa670" translate="yes" xml:space="preserve">
          <source>These certificates are widely used to support authentication and other functionality in Internet security systems. Common applications include Privacy Enhanced Mail (PEM), Transport Layer Security (SSL), code signing for trusted software distribution, and Secure Electronic Transactions (SET).</source>
          <target state="translated">これらの証明書は、インターネットセキュリティシステムにおける認証やその他の機能をサポートするために広く利用されています。一般的なアプリケーションには、プライバシー強化メール(PEM)、トランスポート・レイヤー・セキュリティ(SSL)、信頼できるソフトウェア配布のためのコード署名、セキュア電子取引(SET)などがあります。</target>
        </trans-unit>
        <trans-unit id="fcf252c78cf14eb2a837fd99fd0be8d1928c2eee" translate="yes" xml:space="preserve">
          <source>These choices are set in each implementation and are not directly managed by the &lt;code&gt;SecureRandom&lt;/code&gt; API. Check your DRBG provider's documentation to find an appropriate implementation for the situation.</source>
          <target state="translated">これらの選択肢は各実装で設定され、 &lt;code&gt;SecureRandom&lt;/code&gt; APIによって直接管理されることはありません。DRBGプロバイダーのドキュメントを確認して、状況に適した実装を見つけてください。</target>
        </trans-unit>
        <trans-unit id="9e42e0ff806cf170a11e36b37a054c3229ccff88" translate="yes" xml:space="preserve">
          <source>These classes are capable of formatting dates, numbers, and messages, parsing; searching and sorting strings; and iterating over characters, words, sentences, and line breaks. This package contains three main groups of classes and interfaces:</source>
          <target state="translated">これらのクラスは、日付、数字、メッセージの書式設定、解析、文字列の検索とソート、文字、単語、文章、改行の反復処理を行うことができます。本パッケージには、3 つの主要なクラス群とインタフェースが含まれています。</target>
        </trans-unit>
        <trans-unit id="b6318825cf21ef29caa7cfa108177774e36244df" translate="yes" xml:space="preserve">
          <source>These classes are designed to be used while the corresponding &lt;code&gt;LookAndFeel&lt;/code&gt; class has been installed (&lt;code&gt;UIManager.setLookAndFeel(new &lt;i&gt;XXX&lt;/i&gt;LookAndFeel())&lt;/code&gt;). Using them while a different &lt;code&gt;LookAndFeel&lt;/code&gt; is installed may produce unexpected results, including exceptions. Additionally, changing the &lt;code&gt;LookAndFeel&lt;/code&gt; maintained by the &lt;code&gt;UIManager&lt;/code&gt; without updating the corresponding &lt;code&gt;ComponentUI&lt;/code&gt; of any &lt;code&gt;JComponent&lt;/code&gt;s may also produce unexpected results, such as the wrong colors showing up, and is generally not encouraged.</source>
          <target state="translated">これらのクラスは、対応する &lt;code&gt;LookAndFeel&lt;/code&gt; クラスがインストールされているときに使用するように設計されています（ &lt;code&gt;UIManager.setLookAndFeel(new &lt;i&gt;XXX&lt;/i&gt;LookAndFeel())&lt;/code&gt; ）。別の &lt;code&gt;LookAndFeel&lt;/code&gt; がインストールされているときにそれらを使用すると、例外を含む予期しない結果が生じる可能性があります。また、変化 &lt;code&gt;LookAndFeel&lt;/code&gt; によって維持 &lt;code&gt;UIManager&lt;/code&gt; 対応する更新せずに &lt;code&gt;ComponentUI&lt;/code&gt; 任意の &lt;code&gt;JComponent&lt;/code&gt; にも、このような間違った色が現れて、一般的に奨励されていないなどの予期しない結果を生成することができるのです。</target>
        </trans-unit>
        <trans-unit id="ca888f834a79bc5727a72955ff3d1e6b86d9c717" translate="yes" xml:space="preserve">
          <source>These classes are not general purpose replacements for &lt;code&gt;
 java.lang.Integer&lt;/code&gt; and related classes. They do &lt;em&gt;not&lt;/em&gt; define methods such as &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt; and &lt;code&gt;
 compareTo&lt;/code&gt;. Because atomic variables are expected to be mutated, they are poor choices for hash table keys.</source>
          <target state="translated">これらのクラスは、 &lt;code&gt; java.lang.Integer&lt;/code&gt; および関連するクラスの汎用的な代替ではありません。 &lt;code&gt;equals&lt;/code&gt; 、 &lt;code&gt;hashCode&lt;/code&gt; 、 &lt;code&gt; compareTo&lt;/code&gt; などのメソッド&lt;em&gt;は&lt;/em&gt;定義されてい&lt;em&gt;ません&lt;/em&gt;。アトミック変数は変更されることが予想されるため、ハッシュテーブルキーには適していません。</target>
        </trans-unit>
        <trans-unit id="536ba11d6da2845bb0c80905149fb7531b460122" translate="yes" xml:space="preserve">
          <source>These comments apply to gain controls in general, not just master gain controls. A line can have more than one gain control. For example, a mixer (which is itself a line) might have a master gain control, an auxiliary return control, a reverb return control, and, on each of its source lines, an individual aux send and reverb send.</source>
          <target state="translated">これらのコメントは、マスターゲインコントロールだけでなく、一般的なゲインコントロールにも適用されます。ラインには複数のゲインコントロールがあります。例えば、ミキサー(それ自体がラインである)は、マスターゲインコントロール、AUX リターンコントロール、リバーブリターンコントロール、そしてソースラインごとに個別の Aux センドとリバーブセンドを持っているかもしれません。</target>
        </trans-unit>
        <trans-unit id="182525e92bb8eaa995d5c702244b1a4f1d994019" translate="yes" xml:space="preserve">
          <source>These conditions are tested against the character information from version 10.0 of the Unicode Standard.</source>
          <target state="translated">これらの条件は、Unicode標準のバージョン10.0の文字情報に対してテストされています。</target>
        </trans-unit>
        <trans-unit id="51036f2530440491bfa4fee7adaeaacd963ca219" translate="yes" xml:space="preserve">
          <source>These constants &lt;b&gt;should&lt;/b&gt; be considered complementary to the grade constants. The default setting for the majority of grade settings requires that no data source locks remain when a &lt;code&gt;RowSet&lt;/code&gt; object is disconnected from its data source. The grades &lt;code&gt;GRADE_LOCK_WHEN_MODIFIED&lt;/code&gt; and &lt;code&gt;GRADE_LOCK_WHEN_LOADED&lt;/code&gt; allow a disconnected &lt;code&gt;RowSet&lt;/code&gt; object to have a fine-grained control over the degree of locking.</source>
          <target state="translated">これらの定数&lt;b&gt;は&lt;/b&gt;、グレード定数を補完するものと見なす&lt;b&gt;必要&lt;/b&gt;があります。大部分の勾配設定のデフォルト設定では、 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトがデータソースから切断されたときにデータソースロックが残っていない必要があります。グレード &lt;code&gt;GRADE_LOCK_WHEN_MODIFIED&lt;/code&gt; および &lt;code&gt;GRADE_LOCK_WHEN_LOADED&lt;/code&gt; を使用すると、切断された &lt;code&gt;RowSet&lt;/code&gt; オブジェクトでロックの程度をきめ細かく制御できます。</target>
        </trans-unit>
        <trans-unit id="b185b37a150dff33728e3a9f01c22ad788650779" translate="yes" xml:space="preserve">
          <source>These constants are explained in the preceding section (4.0).</source>
          <target state="translated">これらの定数については、前節(4.</target>
        </trans-unit>
        <trans-unit id="b94d3dafeba2df086880b1a2cf9128a4df924018" translate="yes" xml:space="preserve">
          <source>These constraints mean that a GUI application with time intensive computing needs at least two threads: 1) a thread to perform the lengthy task and 2) the</source>
          <target state="translated">これらの制約は、時間のかかるコンピューティングを行うGUIアプリケーションには、少なくとも2つのスレッドが必要であることを意味します。1)長時間のタスクを実行するためのスレッドと</target>
        </trans-unit>
        <trans-unit id="6863080fd292838b064091acab8ec4a7e59422e3" translate="yes" xml:space="preserve">
          <source>These constructors allow you to create a &lt;code&gt;Locale&lt;/code&gt; object with language, country and variant, but you cannot specify script or extensions.</source>
          <target state="translated">これらのコンストラクターを使用すると、言語、国、バリアントを含む &lt;code&gt;Locale&lt;/code&gt; オブジェクトを作成できますが、スクリプトや拡張機能を指定することはできません。</target>
        </trans-unit>
        <trans-unit id="4f834728921b0f3ab0a540e3f3bf6b14d71c7bcf" translate="yes" xml:space="preserve">
          <source>These different rule types can be expressed and queried.</source>
          <target state="translated">これらの異なるルールタイプを表現したり、問い合わせたりすることができます。</target>
        </trans-unit>
        <trans-unit id="7dc9733f213a93286a012b485967533fe72f014c" translate="yes" xml:space="preserve">
          <source>These encodings are described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#certpath-encodings&quot;&gt; CertPath Encodings section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other encodings are supported.</source>
          <target state="translated">これらのエンコーディングは、Javaセキュリティ標準アルゴリズム名仕様の&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#certpath-encodings&quot;&gt;CertPathエンコーディングセクション&lt;/a&gt;で説明されています。実装のリリースドキュメントを参照して、他のエンコーディングがサポートされているかどうかを確認してください。</target>
        </trans-unit>
        <trans-unit id="f08e754a38dde7958ef1c6f1638768b615f3f1ca" translate="yes" xml:space="preserve">
          <source>These encodings are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathEncodings&quot;&gt; CertPath Encodings section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other encodings are supported.</source>
          <target state="translated">これらのエンコーディングについては、Java暗号化アーキテクチャ標準アルゴリズム名のドキュメントの「&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#CertPathEncodings&quot;&gt;CertPathエンコーディング」セクション&lt;/a&gt;で説明されています。他のエンコーディングがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="b32f25bab2a6f9d22d42132cf2929dcee766e8c6" translate="yes" xml:space="preserve">
          <source>These fields are intended to be applicable in multiple calendar systems. For example, most non-ISO calendar systems define dates as a year, month and day, just with slightly different rules. The documentation of each field explains how it operates.</source>
          <target state="translated">これらのフィールドは、複数のカレンダシステムに適用することを意図しています。例えば、ほとんどの非ISOカレンダーシステムでは、日付を年、月、日として定義していますが、わずかに異なるルールで定義しています。各フィールドのドキュメントでは、その動作を説明しています。</target>
        </trans-unit>
        <trans-unit id="f71a58fc2f85a34846eba4205dc69caa813474de" translate="yes" xml:space="preserve">
          <source>These flags can be logically OR'ed together.</source>
          <target state="translated">これらのフラグは論理的に論理和することができます。</target>
        </trans-unit>
        <trans-unit id="2a00b200b8092958ccb95d52e492735fb5a88b33" translate="yes" xml:space="preserve">
          <source>These general methods allow polymorphic parsing and formatting of objects and are used, for example, by &lt;code&gt;MessageFormat&lt;/code&gt;. Subclasses often also provide additional &lt;code&gt;format&lt;/code&gt; methods for specific input types as well as &lt;code&gt;parse&lt;/code&gt; methods for specific result types. Any &lt;code&gt;parse&lt;/code&gt; method that does not take a &lt;code&gt;ParsePosition&lt;/code&gt; argument should throw &lt;code&gt;ParseException&lt;/code&gt; when no text in the required format is at the beginning of the input text.</source>
          <target state="translated">これらの一般的なメソッドは、オブジェクトの多態性の解析とフォーマットを可能にし、たとえば &lt;code&gt;MessageFormat&lt;/code&gt; によって使用されます。多くの場合、サブクラスは、特定の入力タイプ用の追加の &lt;code&gt;format&lt;/code&gt; メソッドと、特定の結果タイプ用の &lt;code&gt;parse&lt;/code&gt; メソッドも提供します。どれ &lt;code&gt;parse&lt;/code&gt; 取らないメソッド &lt;code&gt;ParsePosition&lt;/code&gt; 引数には、スローすべき &lt;code&gt;ParseException&lt;/code&gt; 必要な形式でテキストが入力テキストの先頭でないとき。</target>
        </trans-unit>
        <trans-unit id="111e337198ca6d68db33b84d5df6564b0dbbe13a" translate="yes" xml:space="preserve">
          <source>These hints can equally be applied when rendering to software images, but these images may not then be suitable for general export, as the text will have been rendered appropriately for a specific subpixel organisation. Also lossy images are not a good choice, nor image formats such as GIF which have limited colors. So unless the image is destined solely for rendering on a display device with the same configuration, some other text anti-aliasing hint such as &lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_ON&quot;&gt;&lt;code&gt;VALUE_TEXT_ANTIALIAS_ON&lt;/code&gt;&lt;/a&gt; may be a better choice.</source>
          <target state="translated">これらのヒントは、ソフトウェアイメージにレンダリングするときにも同様に適用できますが、テキストは特定のサブピクセル組織に適切にレンダリングされるため、これらのイメージは一般的なエクスポートには適さない場合があります。また、不可逆画像や、色が制限されているGIFなどの画像形式は適切ではありません。したがって、画像が同じ構成のディスプレイデバイスでのレンダリングのみを目的としている場合を除き、&lt;a href=&quot;#VALUE_TEXT_ANTIALIAS_ON&quot;&gt; &lt;code&gt;VALUE_TEXT_ANTIALIAS_ON&lt;/code&gt; &lt;/a&gt;などの他のテキストアンチエイリアシングヒントの方が適している場合があります。</target>
        </trans-unit>
        <trans-unit id="76de812af34579a03375f04c3864f5f693151c31" translate="yes" xml:space="preserve">
          <source>These implementations all attempt to honor the same equations, but use different tradeoffs of integer and floating point math and reduced or full equations. To account for such differences, it is probably best to expect only that the premultiplied form of the results to match between implementations and image formats. In this case both answers, expressed in premultiplied form would equate to:</source>
          <target state="translated">これらの実装はすべて同じ方程式を尊重しようとしていますが、整数演算と浮動小数点演算のトレードオフや、縮小または完全な方程式のトレードオフが異なります。このような違いを考慮するためには、実装と画像フォーマットの間で結果の予積形式が一致することだけを期待するのが最善でしょう。この場合、どちらの答えも予積形式で表現すると次のようになります。</target>
        </trans-unit>
        <trans-unit id="ffa00cb1f134ab4340bd427dad46d11a43cd0f34" translate="yes" xml:space="preserve">
          <source>These implementations do not examine the status code, meaning the body is always accepted. They typically return an equivalently named &lt;code&gt;BodySubscriber&lt;/code&gt;. Alternatively, a custom handler can be used to examine the status code and headers, and return a different body subscriber, of the same type, as appropriate.</source>
          <target state="translated">これらの実装はステータスコードを調べません。つまり、本文は常に受け入れられます。通常、同等の名前の &lt;code&gt;BodySubscriber&lt;/code&gt; を返します。または、カスタムハンドラーを使用して、ステータスコードとヘッダーを調べ、必要に応じて、同じタイプの別の本体サブスクライバーを返すこともできます。</target>
        </trans-unit>
        <trans-unit id="eab7b0e51c3bfdf0586a547fefddc0d8e955988f" translate="yes" xml:space="preserve">
          <source>These interfaces and classes are required as part of the Java&amp;trade; Platform, Standard Edition (Java SE), but there is no requirement to provide any tools implementing them.</source>
          <target state="translated">これらのインターフェースとクラスは、Java&amp;trade;Platform、Standard Edition（Java SE）の一部として必要ですが、それらを実装するツールを提供する必要はありません。</target>
        </trans-unit>
        <trans-unit id="3302651ec6ecf4b0cac5d3b0e6afbf9434f88e14" translate="yes" xml:space="preserve">
          <source>These interfaces are used by the transaction manager; an application does not use them directly.</source>
          <target state="translated">これらのインターフェイスはトランザクション・マネージャによって使用されます。</target>
        </trans-unit>
        <trans-unit id="b50b8c65fee1150bc034d27f94b24eb1e37abbb8" translate="yes" xml:space="preserve">
          <source>These interfaces correspond to the &lt;a href=&quot;http://www.reactive-streams.org/&quot;&gt; reactive-streams&lt;/a&gt; specification. They apply in both concurrent and distributed asynchronous settings: All (seven) methods are defined in &lt;code&gt;
 void&lt;/code&gt; &quot;one-way&quot; message style. Communication relies on a simple form of flow control (method &lt;a href=&quot;flow.subscription#request(long)&quot;&gt;&lt;code&gt;Flow.Subscription.request(long)&lt;/code&gt;&lt;/a&gt;) that can be used to avoid resource management problems that may otherwise occur in &quot;push&quot; based systems.</source>
          <target state="translated">これらのインターフェースは、&lt;a href=&quot;http://www.reactive-streams.org/&quot;&gt;リアクティブストリームの&lt;/a&gt;仕様に対応しています。これらは、同時および分散非同期設定の両方に適用されます。すべて（7）のメソッドは、 &lt;code&gt; void&lt;/code&gt; 「一方向」メッセージスタイルで定義されます。通信は、「プッシュ」ベースのシステムで発生する可能性のあるリソース管理の問題を回避するために使用できる単純な形式のフロー制御（メソッド&lt;a href=&quot;flow.subscription#request(long)&quot;&gt; &lt;code&gt;Flow.Subscription.request(long)&lt;/code&gt; &lt;/a&gt;）に依存しています。</target>
        </trans-unit>
        <trans-unit id="69a3f32f3321c8dd0341d385f7705d3bdbb396b6" translate="yes" xml:space="preserve">
          <source>These kinds of protection are specified by a &quot;cipher suite&quot;, which is a combination of cryptographic algorithms used by a given SSL connection. During the negotiation process, the two endpoints must agree on a cipher suite that is available in both environments. If there is no such suite in common, no SSL connection can be established, and no data can be exchanged.</source>
          <target state="translated">これらの種類の保護は「暗号スイート」によって指定され、これは与えられたSSL接続で使用される暗号アルゴリズムの組み合わせです。ネゴシエーションの過程で、2つのエンドポイントは両方の環境で利用可能な暗号スイートに合意しなければなりません。このような共通の暗号スイートがない場合は、SSL接続を確立することができず、データの交換もできません。</target>
        </trans-unit>
        <trans-unit id="7ff41a76c06a874e4c78ae8f4beb0185f7f249d3" translate="yes" xml:space="preserve">
          <source>These kinds of protection are specified by a &quot;cipher suite&quot;, which is a combination of cryptographic algorithms used by a given SSL connection. During the negotiation process, the two endpoints must agree on a ciphersuite that is available in both environments. If there is no such suite in common, no SSL connection can be established, and no data can be exchanged.</source>
          <target state="translated">これらの種類の保護は、与えられたSSL接続で使用される暗号アルゴリズムの組み合わせである「暗号スイート」によって指定されます。ネゴシエーションの過程で、2つのエンドポイントは両方の環境で利用可能な暗号スイートに合意しなければなりません。このような共通の暗号スイートがない場合、SSL接続は確立できず、データの交換もできません。</target>
        </trans-unit>
        <trans-unit id="7b9c276e86b40b1083fdf2a0734e76f5ff35e720" translate="yes" xml:space="preserve">
          <source>These limits imply that certain method handles cannot be created, solely because of the JVM limit on stacked arguments. For example, if a static JVM method accepts exactly 255 arguments, a method handle cannot be created for it. Attempts to create method handles with impossible method types lead to an &lt;a href=&quot;../illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt;. In particular, a method handle&amp;rsquo;s type must not have an arity of the exact maximum 255.</source>
          <target state="translated">これらの制限は、スタックされた引数に対するJVMの制限のために、特定のメソッドハンドルを作成できないことを意味します。たとえば、静的JVMメソッドが正確に255個の引数を受け入れる場合、そのメソッドのメソッドハンドルを作成できません。不可能なメソッドタイプでメソッドハンドルを作成しようとすると、&lt;a href=&quot;../illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; が発生し&lt;/a&gt;ます。特に、メソッドハンドルのタイプには、正確な最大値255のアリティがあってはなりません。</target>
        </trans-unit>
        <trans-unit id="2aef62f1a686aa612f7dadf32611ec60612d24e1" translate="yes" xml:space="preserve">
          <source>These linkage methods are designed to support the evaluation of &lt;em&gt;lambda expressions&lt;/em&gt; and &lt;em&gt;method references&lt;/em&gt; in the Java Language. For every lambda expressions or method reference in the source code, there is a target type which is a functional interface. Evaluating a lambda expression produces an object of its target type. The recommended mechanism for evaluating lambda expressions is to desugar the lambda body to a method, invoke an invokedynamic call site whose static argument list describes the sole method of the functional interface and the desugared implementation method, and returns an object (the lambda object) that implements the target type. (For method references, the implementation method is simply the referenced method; no desugaring is needed.)</source>
          <target state="translated">これらのリンケージメソッドは、Java言語での&lt;em&gt;ラムダ式&lt;/em&gt;および&lt;em&gt;メソッド参照の&lt;/em&gt;評価をサポートするように設計されています。ソースコード内のすべてのラムダ式またはメソッド参照には、関数型インターフェイスであるターゲットタイプがあります。ラムダ式を評価すると、そのターゲットタイプのオブジェクトが生成されます。ラムダ式を評価するための推奨されるメカニズムは、ラムダ本体をメソッドにデ糖化し、静的な引数リストが機能インターフェイスの唯一のメソッドと脱糖化された実装メソッドを記述しているinvokedynamic呼び出しサイトを呼び出し、オブジェクト（ラムダオブジェクト）を返すことです。ターゲットタイプを実装します。 （メソッド参照の場合、実装メソッドは単に参照メソッドであり、desugaringは必要ありません。）</target>
        </trans-unit>
        <trans-unit id="f76b936989514145bd202de1643f4d241fbb018e" translate="yes" xml:space="preserve">
          <source>These mechanisms are described in the &lt;a href=&quot;package-summary&quot;&gt;package specification&lt;/a&gt;.</source>
          <target state="translated">これらのメカニズムについては、&lt;a href=&quot;package-summary&quot;&gt;パッケージ仕様で&lt;/a&gt;説明されています。</target>
        </trans-unit>
        <trans-unit id="c5618ab72a51ab91e8bc7984d97068e027245df5" translate="yes" xml:space="preserve">
          <source>These methods allow an application to add one &lt;code&gt;RowSet&lt;/code&gt; object at a time or to add multiple &lt;code&gt;RowSet&lt;/code&gt; objects at one time. In either case, the methods may specify the match column for each &lt;code&gt;RowSet&lt;/code&gt; object being added.</source>
          <target state="translated">これらの方法は、1つの追加するアプリケーション許可 &lt;code&gt;RowSet&lt;/code&gt; 時に物体を、または複数の追加する &lt;code&gt;RowSet&lt;/code&gt; 一度オブジェクトを。いずれの場合も、メソッドは、追加される各 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトの一致列を指定できます。</target>
        </trans-unit>
        <trans-unit id="24ac5b741a325296e9f1f056304a110b8a722ad5" translate="yes" xml:space="preserve">
          <source>These methods are designed to be used as tools for creating higher-level synchronization utilities, and are not in themselves useful for most concurrency control applications. The &lt;code&gt;park&lt;/code&gt; method is designed for use only in constructions of the form:</source>
          <target state="translated">これらのメソッドは、より高いレベルの同期ユーティリティを作成するためのツールとして使用するように設計されており、それ自体はほとんどの同時実行制御アプリケーションには役立ちません。 &lt;code&gt;park&lt;/code&gt; 方法は、形だけの構成で使用するために設計されています。</target>
        </trans-unit>
        <trans-unit id="80b2b542cff995913a77f4654f407bd25dd4c1a4" translate="yes" xml:space="preserve">
          <source>These methods provide basic scripting functionality. Applications written to this simple interface are expected to work with minimal modifications in every implementation. It includes methods that execute scripts, and ones that set and get values.</source>
          <target state="translated">これらのメソッドは基本的なスクリプト機能を提供します。このシンプルなインターフェイスで書かれたアプリケーションは、すべての実装において最小限の変更で動作することが期待されています。スクリプトを実行するメソッドと、値を設定したり取得したりするメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="cc2bd340a5cd3a9169090ae3d84cd382f6d6375a" translate="yes" xml:space="preserve">
          <source>These nodes can all be adopted. No specifics.</source>
          <target state="translated">これらのノードはすべて採用可能です。具体性はありません。</target>
        </trans-unit>
        <trans-unit id="297752b6a18f573e9c56aa0c6689ca4f4e9ec102" translate="yes" xml:space="preserve">
          <source>These objects may only be accessed via the following public static final variables, and are the only &lt;code&gt;Class&lt;/code&gt; objects for which this method returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">これらのオブジェクトは、次のパブリックstatic final変数を介してのみアクセスでき、このメソッドが &lt;code&gt;true&lt;/code&gt; を返す唯一の &lt;code&gt;Class&lt;/code&gt; オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="a96ccc8f3e2fd8fe4c1dbd6fc649068f34d0702f" translate="yes" xml:space="preserve">
          <source>These operations are exposed in the constructors and methods of this class as follows:</source>
          <target state="translated">これらの操作は、以下のようにこのクラスのコンストラクタとメソッドで公開されています。</target>
        </trans-unit>
        <trans-unit id="47cbaf1cf3b15e600a882f2b865f9a1538cc73da" translate="yes" xml:space="preserve">
          <source>These parameter rules are also applicable to the set rule methods, such as &lt;code&gt;setStartRule&lt;/code&gt;.</source>
          <target state="translated">これらのパラメータルールは、 &lt;code&gt;setStartRule&lt;/code&gt; などのセットルールメソッドにも適用できます。</target>
        </trans-unit>
        <trans-unit id="2e28c1b9b8fb783d140150ed1d2b8973462224f2" translate="yes" xml:space="preserve">
          <source>These policies are explored in more detail in the &lt;a href=&quot;syncfactory&quot;&gt; &lt;code&gt;SyncFactory&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">これらのポリシーについては、&lt;a href=&quot;syncfactory&quot;&gt; &lt;code&gt;SyncFactory&lt;/code&gt; &lt;/a&gt;クラスで詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="647770bcf1eb1a38d71a54bfe8c3e7ad6de8bd78" translate="yes" xml:space="preserve">
          <source>These properties are interpreted according to the following rules:</source>
          <target state="translated">これらのプロパティは、以下のルールに従って解釈されます。</target>
        </trans-unit>
        <trans-unit id="5d242321b38871e376bb238866bf118b57b125f0" translate="yes" xml:space="preserve">
          <source>These protocols are described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#sslcontext-algorithms&quot;&gt; SSLContext section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other algorithms are supported.</source>
          <target state="translated">これらのプロトコルは、Javaセキュリティ標準アルゴリズム名仕様の&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#sslcontext-algorithms&quot;&gt;SSLContextセクション&lt;/a&gt;で説明されています。他のアルゴリズムがサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="d206af1d2dc412e81e7644b4cec4700275f97ba3" translate="yes" xml:space="preserve">
          <source>These purposes are served in this class by three related operations:</source>
          <target state="translated">これらの目的は、このクラスでは3つの関連する操作によって実現されています。</target>
        </trans-unit>
        <trans-unit id="e42b277937f8a596084eb371e31744be7cbbfdeb" translate="yes" xml:space="preserve">
          <source>These reduction operations can run safely in parallel with almost no modification:</source>
          <target state="translated">これらの削減操作は、ほとんど手を加えることなく、安全に並行して実行することができます。</target>
        </trans-unit>
        <trans-unit id="342157b7938368eea83fec1686ef1431f444180d" translate="yes" xml:space="preserve">
          <source>These requirements ensure that streams produced by the &lt;a href=&quot;#stream()&quot;&gt;&lt;code&gt;stream()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#parallelStream()&quot;&gt;&lt;code&gt;parallelStream()&lt;/code&gt;&lt;/a&gt; methods will reflect the contents of the collection as of initiation of the terminal stream operation.</source>
          <target state="translated">これらの要件により、&lt;a href=&quot;#stream()&quot;&gt; &lt;code&gt;stream()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#parallelStream()&quot;&gt; &lt;code&gt;parallelStream()&lt;/code&gt; &lt;/a&gt;メソッドとparallelStream（）メソッドによって生成されたストリームが、ターミナルストリーム操作の開始時のコレクションの内容を反映することが保証されます。</target>
        </trans-unit>
        <trans-unit id="b5fe1b43768fd591f3bcb574e2cd4e802bb59264" translate="yes" xml:space="preserve">
          <source>These requirements ensure that streams produced by the &lt;a href=&quot;collection#stream--&quot;&gt;&lt;code&gt;stream()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;collection#parallelStream--&quot;&gt;&lt;code&gt;parallelStream()&lt;/code&gt;&lt;/a&gt; methods will reflect the contents of the collection as of initiation of the terminal stream operation.</source>
          <target state="translated">これらの要件により、&lt;a href=&quot;collection#stream--&quot;&gt; &lt;code&gt;stream()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;collection#parallelStream--&quot;&gt; &lt;code&gt;parallelStream()&lt;/code&gt; &lt;/a&gt;メソッドによって生成されたストリームが、ターミナルストリーム操作の開始時のコレクションの内容を確実に反映するようになります。</target>
        </trans-unit>
        <trans-unit id="9ce6632fdcabd56179ddf7edadcea4b6aaa39c33" translate="yes" xml:space="preserve">
          <source>These requirements significantly reduce the scope of potential interference between mutations of the stream source and execution of stream pipelines. Streams based on spliterators with the desired characteristics, or those using the Supplier-based factory forms, are immune to modifications of the data source prior to commencement of the terminal operation (provided the behavioral parameters to the stream operations meet the required criteria for non-interference and statelessness). See &lt;a href=&quot;package-summary#NonInterference&quot;&gt;Non-Interference&lt;/a&gt; for more details.</source>
          <target state="translated">これらの要件により、ストリームソースの変更とストリームパイプラインの実行の間の潜在的な干渉の範囲が大幅に削減されます。目的の特性を持つスプリッターに基づくストリーム、またはサプライヤーベースのファクトリフォームを使用するストリームは、ターミナル操作の開始前のデータソースの変更の影響を受けません（ストリーム操作の動作パラメーターが、干渉と無国籍）。詳細については、&lt;a href=&quot;package-summary#NonInterference&quot;&gt;非干渉&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="f76fe1fde2a58cf1420c28ae186dba0fd8cdb513" translate="yes" xml:space="preserve">
          <source>These response controls might have been generated by a successful or failed operation.</source>
          <target state="translated">これらの応答制御は、操作の成功または失敗によって生成された可能性があります。</target>
        </trans-unit>
        <trans-unit id="3133b61143c4a97991f32b65e594ea52115dd6e5" translate="yes" xml:space="preserve">
          <source>These rules imply that there is a one-to-one mapping between quoted and unquoted forms.</source>
          <target state="translated">これらの規則は、引用形と非引用形の間に一対一の対応付けがあることを暗示しています。</target>
        </trans-unit>
        <trans-unit id="515dc9d95cc15e6e31346b7231f767f0ba0d486f" translate="yes" xml:space="preserve">
          <source>These rules mean that extra items can be added to a &lt;code&gt;
 CompositeData&lt;/code&gt; without making it invalid for a &lt;code&gt;CompositeType&lt;/code&gt; that does not have those items.</source>
          <target state="translated">これらのルールは、それらのアイテムを持たない &lt;code&gt;CompositeType&lt;/code&gt; に対して無効にすることなく、 &lt;code&gt; CompositeData&lt;/code&gt; に追加のアイテムを追加できることを意味します。</target>
        </trans-unit>
        <trans-unit id="fef3e7eb79137df43be121f2de5aa7417409ab48" translate="yes" xml:space="preserve">
          <source>These rules mean that extra items can be added to a &lt;code&gt;CompositeData&lt;/code&gt; without making it invalid for a &lt;code&gt;CompositeType&lt;/code&gt; that does not have those items.</source>
          <target state="translated">これらのルールは、それらのアイテムを持たない &lt;code&gt;CompositeType&lt;/code&gt; に対して無効にすることなく、追加のアイテムを &lt;code&gt;CompositeData&lt;/code&gt; に追加できることを意味します。</target>
        </trans-unit>
        <trans-unit id="93285ed9687ceae878834b3cc5f3c85f4529ac14" translate="yes" xml:space="preserve">
          <source>These scales are the ones used by the methods which return exact arithmetic results; except that an exact divide may have to use a larger scale since the exact result may have more digits. For example, &lt;code&gt;1/32&lt;/code&gt; is &lt;code&gt;0.03125&lt;/code&gt;.</source>
          <target state="translated">これらのスケールは、正確な算術結果を返すメソッドで使用されるものです。ただし、正確な除算では、正確な結果の桁数が増える可能性があるため、より大きなスケールを使用する必要がある場合があります。たとえば、 &lt;code&gt;1/32&lt;/code&gt; は &lt;code&gt;0.03125&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8e810c9cd3c3d10bac6318c77d76a5f66cc69714" translate="yes" xml:space="preserve">
          <source>These styles are used when obtaining a date-time style from configuration. See &lt;a href=&quot;datetimeformatter&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datetimeformatterbuilder&quot;&gt;&lt;code&gt;DateTimeFormatterBuilder&lt;/code&gt;&lt;/a&gt; for usage.</source>
          <target state="translated">これらのスタイルは、構成から日時スタイルを取得するときに使用されます。使用方法については、&lt;a href=&quot;datetimeformatter&quot;&gt; &lt;code&gt;DateTimeFormatter&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;datetimeformatterbuilder&quot;&gt; &lt;code&gt;DateTimeFormatterBuilder&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="47a31e4f1754b1fff887f8b5e25b8721c241aad1" translate="yes" xml:space="preserve">
          <source>These three types of nodes inheriting from &lt;code&gt;CharacterData&lt;/code&gt; copy their &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; attributes from those of the source node.Note that the &lt;code&gt;deep&lt;/code&gt; parameter has no effect on these types of nodes since they cannot have any children.</source>
          <target state="translated">継承ノードのこれらの3種類 &lt;code&gt;CharacterData&lt;/code&gt; そのコピーし &lt;code&gt;data&lt;/code&gt; と &lt;code&gt;length&lt;/code&gt; というソースnode.Noteのものの中から属性を &lt;code&gt;deep&lt;/code&gt; 彼らは子を持つことができないので、パラメータは、ノードのこれらのタイプには影響しません。</target>
        </trans-unit>
        <trans-unit id="bc114217be17e6aa99adce30106bd9ef6d7477d8" translate="yes" xml:space="preserve">
          <source>These transformations are described in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#cipher-algorithm-names&quot;&gt; Cipher section&lt;/a&gt; of the Java Security Standard Algorithm Names Specification. Consult the release documentation for your implementation to see if any other transformations are supported.</source>
          <target state="translated">これらの変換については、Javaセキュリティ標準アルゴリズム名仕様の&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#cipher-algorithm-names&quot;&gt;暗号セクション&lt;/a&gt;で説明されています。実装のリリースドキュメントを参照して、他の変換がサポートされているかどうかを確認してください。</target>
        </trans-unit>
        <trans-unit id="1e707b74f1bd6747e77b6eba32772900f7b93a32" translate="yes" xml:space="preserve">
          <source>These transformations are described in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Cipher&quot;&gt; Cipher section&lt;/a&gt; of the Java Cryptography Architecture Standard Algorithm Name Documentation. Consult the release documentation for your implementation to see if any other transformations are supported.</source>
          <target state="translated">これらの変換については、Java暗号化アーキテクチャ標準アルゴリズム名のドキュメントの暗号&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html#Cipher&quot;&gt;セクション&lt;/a&gt;で説明されています。他の変換がサポートされているかどうかを確認するには、実装のリリースドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="998abafd744dbc64c5eb0e4aa97e8d53ca3729ba" translate="yes" xml:space="preserve">
          <source>These two APIs provide callers the means to query the Policy for Principal-based Permission entries.</source>
          <target state="translated">これらの 2 つの API は、呼び出し元に Principal-based Permission エントリのポリシーを問い合わせる手段を提供します。</target>
        </trans-unit>
        <trans-unit id="a115f527807f7ad38aadc1251aabbfdf3dc66f31" translate="yes" xml:space="preserve">
          <source>These two properties may be specified on the command line to the &quot;java&quot; command, or as system property definitions passed to JNI_CreateJavaVM.</source>
          <target state="translated">これら2つのプロパティは、&quot;java &quot;コマンドへのコマンドラインで指定するか、JNI_CreateJavaVMに渡されるシステム・プロパティ定義として指定することができます。</target>
        </trans-unit>
        <trans-unit id="812eeb510b3ce50d4d154618d053e87caeed62d6" translate="yes" xml:space="preserve">
          <source>These two system properties may be specified on the command line to the &quot;java&quot; command, or as system property definitions passed to JNI_CreateJavaVM.</source>
          <target state="translated">これら2つのシステム・プロパティは、&quot;java &quot;コマンドへのコマンドラインで指定するか、JNI_CreateJavaVMに渡されるシステム・プロパティ定義として指定することができます。</target>
        </trans-unit>
        <trans-unit id="996bd5dd03cf13a899ae43ea59349cc73d3d4dc4" translate="yes" xml:space="preserve">
          <source>These units are intended to be applicable in multiple calendar systems. For example, most non-ISO calendar systems define units of years, months and days, just with slightly different rules. The documentation of each unit explains how it operates.</source>
          <target state="translated">これらの単位は、複数の暦システムに適用することを意図しています。例えば、ほとんどのISO以外のカレンダーシステムでは、年、月、日の単位を定義していますが、わずかに異なるルールで定義されています。各単位の説明書には、その動作方法が記載されています。</target>
        </trans-unit>
        <trans-unit id="dad5d8e9242a36a4adbe99a3c9514dc461d6647b" translate="yes" xml:space="preserve">
          <source>These will be silently expanded, with no indication of where the original entity boundaries were.</source>
          <target state="translated">これらは、元の実体の境界がどこにあったかを示すことなく、静かに展開されます。</target>
        </trans-unit>
        <trans-unit id="28091910ad0d10b0849e0f9381c4be4de3c17165" translate="yes" xml:space="preserve">
          <source>They are &lt;a href=&quot;collection#unmodifiable&quot;&gt;&lt;i&gt;unmodifiable&lt;/i&gt;&lt;/a&gt;. Elements cannot be added or removed. Calling any mutator method on the Set will always cause &lt;code&gt;UnsupportedOperationException&lt;/code&gt; to be thrown. However, if the contained elements are themselves mutable, this may cause the Set to behave inconsistently or its contents to appear to change.</source>
          <target state="translated">それらは&lt;a href=&quot;collection#unmodifiable&quot;&gt;&lt;i&gt;変更でき&lt;/i&gt;&lt;/a&gt;ません。要素を追加または削除することはできません。セットでミューテーターメソッドを呼び出すと、常に &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされます。ただし、含まれている要素自体が変更可能である場合、これにより、セットの動作に一貫性がなくなったり、その内容が変更されたように見えることがあります。</target>
        </trans-unit>
        <trans-unit id="86b998929a3905fca757a882b2d4ecc129d2c53a" translate="yes" xml:space="preserve">
          <source>They are &lt;a href=&quot;collection#unmodifiable&quot;&gt;&lt;i&gt;unmodifiable&lt;/i&gt;&lt;/a&gt;. Elements cannot be added, removed, or replaced. Calling any mutator method on the List will always cause &lt;code&gt;UnsupportedOperationException&lt;/code&gt; to be thrown. However, if the contained elements are themselves mutable, this may cause the List's contents to appear to change.</source>
          <target state="translated">それらは&lt;a href=&quot;collection#unmodifiable&quot;&gt;&lt;i&gt;変更でき&lt;/i&gt;&lt;/a&gt;ません。要素を追加、削除、または置き換えることはできません。リストのミューテーターメソッドを呼び出すと、常に &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされます。ただし、含まれている要素自体が変更可能である場合は、リストの内容が変更されているように見える可能性があります。</target>
        </trans-unit>
        <trans-unit id="d6f86d7a552f2470ec8e231432dfa29a3a5256d6" translate="yes" xml:space="preserve">
          <source>They are &lt;a href=&quot;collection#unmodifiable&quot;&gt;&lt;i&gt;unmodifiable&lt;/i&gt;&lt;/a&gt;. Keys and values cannot be added, removed, or updated. Calling any mutator method on the Map will always cause &lt;code&gt;UnsupportedOperationException&lt;/code&gt; to be thrown. However, if the contained keys or values are themselves mutable, this may cause the Map to behave inconsistently or its contents to appear to change.</source>
          <target state="translated">それらは&lt;a href=&quot;collection#unmodifiable&quot;&gt;&lt;i&gt;変更でき&lt;/i&gt;&lt;/a&gt;ません。キーと値を追加、削除、または更新することはできません。マップ上のミューテーターメソッドを呼び出すと、常に &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされます。ただし、含まれているキーまたは値自体が変更可能である場合、マップの動作に一貫性がなくなったり、その内容が変更されたように見えることがあります。</target>
        </trans-unit>
        <trans-unit id="90d7dd3b65fdfdd51ffd291a28e90716ee658c1e" translate="yes" xml:space="preserve">
          <source>They are &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt;. Callers should make no assumptions about the identity of the returned instances. Factories are free to create new instances or reuse existing ones. Therefore, identity-sensitive operations on these instances (reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, and synchronization) are unreliable and should be avoided.</source>
          <target state="translated">それらは&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;値ベース&lt;/a&gt;です。呼び出し元は、返されたインスタンスのIDについて何も想定しないでください。工場は自由に新しいインスタンスを作成したり、既存のインスタンスを再利用したりできます。したがって、これらのインスタンスに対するIDに依存する操作（参照の同等性（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、および同期）は信頼性が低く、回避する必要があります。</target>
        </trans-unit>
        <trans-unit id="4188161f84c01b1b343edf0e05caa723037593b5" translate="yes" xml:space="preserve">
          <source>They are &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;value-based&lt;/a&gt;. Callers should make no assumptions about the identity of the returned instances. This method is free to create new instances or reuse existing ones. Therefore, identity-sensitive operations on these instances (reference equality (&lt;code&gt;==&lt;/code&gt;), identity hash code, and synchronization) are unreliable and should be avoided.</source>
          <target state="translated">それらは&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/ValueBased.html&quot;&gt;値ベース&lt;/a&gt;です。呼び出し元は、返されたインスタンスのIDについて何も想定しないでください。この方法では、新しいインスタンスを自由に作成したり、既存のインスタンスを再利用したりできます。したがって、これらのインスタンスに対するIDに依存する操作（参照の同等性（ &lt;code&gt;==&lt;/code&gt; ）、IDハッシュコード、および同期）は信頼性が低く、回避する必要があります。</target>
        </trans-unit>
        <trans-unit id="5188a71bd0122eb574523ea50229e4ab1c0bae0a" translate="yes" xml:space="preserve">
          <source>They are not serializable.</source>
          <target state="translated">これらは直列化できません。</target>
        </trans-unit>
        <trans-unit id="dd33cb623d9fc537ca2f0b0c7a02cd8a97161300" translate="yes" xml:space="preserve">
          <source>They are serializable if all elements are serializable.</source>
          <target state="translated">すべての要素がシリアライズ可能な場合、それらはシリアライズ可能です。</target>
        </trans-unit>
        <trans-unit id="3cbbbf0e9f9a63e48e62a9bf1c9b334a297119f0" translate="yes" xml:space="preserve">
          <source>They are serializable if all keys and values are serializable.</source>
          <target state="translated">すべてのキーと値がシリアライズ可能な場合、それらはシリアライズ可能です。</target>
        </trans-unit>
        <trans-unit id="44614328ee29e0917b45e28712b968a3c6a97d23" translate="yes" xml:space="preserve">
          <source>They are serialized as specified on the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/serialized-form.html#java.util.CollSer&quot;&gt;Serialized Form&lt;/a&gt; page.</source>
          <target state="translated">それらは、&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/serialized-form.html#java.util.CollSer&quot;&gt;SerializedForm&lt;/a&gt;ページで指定されているようにシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="137c282e027f2a565e5c35e25834f4b959718861" translate="yes" xml:space="preserve">
          <source>They are unmodifiable. Calls to &lt;a href=&quot;map.entry#setValue(V)&quot;&gt;&lt;code&gt;Entry.setValue()&lt;/code&gt;&lt;/a&gt; on a returned &lt;code&gt;Entry&lt;/code&gt; result in &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">それらは変更できません。返された &lt;code&gt;Entry&lt;/code&gt; &lt;a href=&quot;map.entry#setValue(V)&quot;&gt; &lt;code&gt;Entry.setValue()&lt;/code&gt; &lt;/a&gt;を呼び出すと、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="59b8e86d0e45fc55f0ca4da9ff149e4d1e68afb8" translate="yes" xml:space="preserve">
          <source>They disallow &lt;code&gt;null&lt;/code&gt; elements. Attempts to create them with &lt;code&gt;null&lt;/code&gt; elements result in &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 要素は許可されません。 &lt;code&gt;null&lt;/code&gt; 要素を使用してそれらを作成しようとすると、 &lt;code&gt;NullPointerException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="03b2e41bdbee0e4cf1f96bbf532d5cf2f0e69e8a" translate="yes" xml:space="preserve">
          <source>They disallow &lt;code&gt;null&lt;/code&gt; keys and values. Attempts to create them using a &lt;code&gt;null&lt;/code&gt; key or value result in &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; キーと値は許可されません。 &lt;code&gt;null&lt;/code&gt; キーまたは値を使用してそれらを作成しようとすると、 &lt;code&gt;NullPointerException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="5399d0a7276917024969b25bd71b01ccd5d2784f" translate="yes" xml:space="preserve">
          <source>They disallow &lt;code&gt;null&lt;/code&gt; keys and values. Attempts to create them with &lt;code&gt;null&lt;/code&gt; keys or values result in &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; キーと値は許可されません。 &lt;code&gt;null&lt;/code&gt; キーまたは値を使用してそれらを作成しようとすると、 &lt;code&gt;NullPointerException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="c5472c0639969a263b9f755acdf389e0d8c3da22" translate="yes" xml:space="preserve">
          <source>They have the same element type,</source>
          <target state="translated">これらは同じ要素の型を持っています。</target>
        </trans-unit>
        <trans-unit id="cdfeeb8a91a65cd73f75c6e587083ef66ea635a5" translate="yes" xml:space="preserve">
          <source>They have the same number of remaining elements, and</source>
          <target state="translated">それらは、残りの要素の数が同じであり</target>
        </trans-unit>
        <trans-unit id="1b2edcdb089ab60cba21f42efe299c3451e3c185" translate="yes" xml:space="preserve">
          <source>They may be used to monitor both print services (such as printers going on-line &amp;amp; off-line), and the progress of a specific print job.</source>
          <target state="translated">これらは、両方の印刷サービス（オンラインおよびオフラインになるプリンターなど）と特定の印刷ジョブの進行状況を監視するために使用できます。</target>
        </trans-unit>
        <trans-unit id="cc920574d9a9e1b56f44e6dd778f5aac65049880" translate="yes" xml:space="preserve">
          <source>They reject duplicate elements at creation time. Duplicate elements passed to a static factory method result in &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">作成時に重複する要素を拒否します。静的ファクトリメソッドに渡された要素が重複すると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="62810637d2fc3ba27fcf48e9c65badcc7e3fe251" translate="yes" xml:space="preserve">
          <source>They reject duplicate keys at creation time. Duplicate keys passed to a static factory method result in &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">作成時に重複キーを拒否します。静的ファクトリメソッドに渡されたキーが重複すると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="1fc25fcbcce0a6e736219b76a3c496a39fdfbfaf" translate="yes" xml:space="preserve">
          <source>Thickness of the border.</source>
          <target state="translated">境界線の厚さ。</target>
        </trans-unit>
        <trans-unit id="c9817dde9253443f7c2405ea71c3564c292de17d" translate="yes" xml:space="preserve">
          <source>Third parties may wish to provide value-add wrappers around the facility objects from this interface, for example a &lt;code&gt;Filer&lt;/code&gt; extension that allows multiple processors to coordinate writing out a single source file. To enable this, for processors running in a context where their side effects via the API could be visible to each other, the tool infrastructure must provide corresponding facility objects that are &lt;code&gt;.equals&lt;/code&gt;, &lt;code&gt;Filer&lt;/code&gt;s that are &lt;code&gt;.equals&lt;/code&gt;, and so on. In addition, the tool invocation must be able to be configured such that from the perspective of the running annotation processors, at least the chosen subset of helper classes are viewed as being loaded by the same class loader. (Since the facility objects manage shared state, the implementation of a wrapper class must know whether or not the same base facility object has been wrapped before.)</source>
          <target state="translated">サードパーティは、このインターフェイスからファシリティオブジェクトの付加価値ラッパーを提供することを望む場合があります。たとえば、複数のプロセッサが単一のソースファイルの書き込みを調整できるようにする &lt;code&gt;Filer&lt;/code&gt; 拡張などです。 APIを介して、それらの副作用が相互に見えるかもしれないここでコンテキストで実行されているプロセッサのために、これを可能にするために、ある施設オブジェクト対応提供しなければならないツールインフラ &lt;code&gt;.equals&lt;/code&gt; 、 &lt;code&gt;Filer&lt;/code&gt; であるS &lt;code&gt;.equals&lt;/code&gt; を、 等々。さらに、ツールの呼び出しは、実行中の注釈プロセッサの観点から、少なくとも選択されたヘルパークラスのサブセットが同じクラスローダーによってロードされていると見なされるように構成できる必要があります。（ファシリティオブジェクトは共有状態を管理するため、ラッパークラスの実装は、同じ基本ファシリティオブジェクトが以前にラップされているかどうかを知る必要があります。）</target>
        </trans-unit>
        <trans-unit id="7af406c3aaa271300eedbb974c7a54d928cca6a4" translate="yes" xml:space="preserve">
          <source>This &lt;b&gt;&lt;i&gt;grant&lt;/i&gt;&lt;/b&gt; entry specifies that code from &quot;foo.com&quot;, signed by &quot;foo', and running as a &lt;code&gt;SolarisPrincipal&lt;/code&gt; with the name, duke, has one &lt;code&gt;Permission&lt;/code&gt;. This &lt;code&gt;Permission&lt;/code&gt; permits the executing code to read and write files in the directory, &quot;/home/duke&quot;.</source>
          <target state="translated">この&lt;b&gt;&lt;i&gt;助成金&lt;/i&gt;&lt;/b&gt;により署名された「foo.com」からコード、「foo」であり、として実行されていることを、エントリが指定 &lt;code&gt;SolarisPrincipal&lt;/code&gt; 名、公爵では、1つの持っている &lt;code&gt;Permission&lt;/code&gt; 。この &lt;code&gt;Permission&lt;/code&gt; ディレクトリ内のファイルを読み書きするための実行コードを許可し、」 / home / duke」。</target>
        </trans-unit>
        <trans-unit id="a0574eaa19de0e15db5fdb797729f29466170c1f" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;@Target&lt;/code&gt; meta-annotation indicates that the declared type is intended solely for use as a member type in complex annotation type declarations. It cannot be used to annotate anything directly:</source>
          <target state="translated">この &lt;code&gt;@Target&lt;/code&gt; メタアノテーションは、宣言された型が、複雑なアノテーション型宣言のメンバー型としての使用のみを目的としていることを示しています。直接何かを注釈するために使用することはできません：</target>
        </trans-unit>
        <trans-unit id="8937167eb448a8245dac8cda5d87eb347ac2e8b9" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;AccessibleSelection&lt;/code&gt; interface provides the standard mechanism for an assistive technology to determine what the current selected children are, as well as modify the selection set.</source>
          <target state="translated">この &lt;code&gt;AccessibleSelection&lt;/code&gt; インターフェースは、現在選択されている子が何であるかを判別し、選択セットを変更するための支援技術の標準メカニズムを提供します。</target>
        </trans-unit>
        <trans-unit id="a8fc559ee5afce2e599a7e2f487b65459918d2c3" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;AccessibleSelection&lt;/code&gt; interface provides the standard mechanism for an assistive technology to determine what the current selected children are, as well as modify the selection set. Any object that has children that can be selected should support the &lt;code&gt;AccessibleSelection&lt;/code&gt; interface. Applications can determine if an object supports the &lt;code&gt;AccessibleSelection&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleSelection()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleSelection()&lt;/code&gt;&lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">この &lt;code&gt;AccessibleSelection&lt;/code&gt; インターフェースは、現在選択されている子が何であるかを判別し、選択セットを変更するための支援技術の標準メカニズムを提供します。選択可能な子を持つオブジェクトはすべて、 &lt;code&gt;AccessibleSelection&lt;/code&gt; インターフェイスをサポートする必要があります。アプリケーションは、最初に &lt;code&gt;AccessibleContext&lt;/code&gt; を取得し（&lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; を&lt;/a&gt;参照）、次に&lt;a href=&quot;accessiblecontext#getAccessibleSelection()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleSelection()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、オブジェクトが &lt;code&gt;AccessibleSelection&lt;/code&gt; インターフェイスをサポートしているかどうかを判断できます。戻り値が &lt;code&gt;null&lt;/code&gt; でない場合、オブジェクトはこのインターフェースをサポートします。</target>
        </trans-unit>
        <trans-unit id="e4413fb83791c77b9384cc10020a41370edc8037" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;CachedRowSet&lt;/code&gt; object should lock until its contents and associated updates are fully cleared, thus preventing 'dirty' reads by other components that hold a reference to this &lt;code&gt;RowSet&lt;/code&gt; object. In addition, the contents cannot be released until all components reading this &lt;code&gt;CachedRowSet&lt;/code&gt; object have completed their reads. This &lt;code&gt;CachedRowSet&lt;/code&gt; object should be returned to normal behavior after firing the &lt;code&gt;rowSetChanged&lt;/code&gt; event.</source>
          <target state="translated">この &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトは、その内容と関連する更新が完全にクリアされるまでロックする必要があります。これにより、この &lt;code&gt;RowSet&lt;/code&gt; オブジェクトへの参照を保持する他のコンポーネントによる「ダーティ」読み取りが防止されます。さらに、この &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトを読み取るすべてのコンポーネントが読み取りを完了するまで、コンテンツを解放することはできません。この &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトは、 &lt;code&gt;rowSetChanged&lt;/code&gt; イベントを発生させた後、通常の動作に戻す必要があります。</target>
        </trans-unit>
        <trans-unit id="756e3bd12852d947c03b9c6314f75be46cd5c89f" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;CaretPolicy&lt;/code&gt; is used when a policy is not specified by the client.</source>
          <target state="translated">この &lt;code&gt;CaretPolicy&lt;/code&gt; は、ポリシーがクライアントによって指定されていない場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="5b7a3673cda0021143e7a7de398440feb9b0f820" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;CaretPolicy&lt;/code&gt; is used when a policy is not specified by the client. With this policy, a hit on a character whose direction is the same as the line direction is stronger than a hit on a counterdirectional character. If the characters' directions are the same, a hit on the leading edge of a character is stronger than a hit on the trailing edge of a character.</source>
          <target state="translated">この &lt;code&gt;CaretPolicy&lt;/code&gt; は、ポリシーがクライアントによって指定されていない場合に使用されます。このポリシーでは、方向が線の方向と同じであるキャラクターへのヒ​​ットは、反対方向のキャラクターへのヒ​​ットよりも強くなります。キャラクターの方向が同じである場合、キャラクターの前縁でのヒットは、キャラクターの後縁でのヒットよりも強くなります。</target>
        </trans-unit>
        <trans-unit id="939142716b149e711b414ed3aa1cdb7ca70db881" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;ColorModel&lt;/code&gt; class supports two representations of pixel values. A pixel value can be a single 32-bit int or an array of primitive types. The Java(tm) Platform 1.0 and 1.1 APIs represented pixels as single &lt;code&gt;byte&lt;/code&gt; or single &lt;code&gt;int&lt;/code&gt; values. For purposes of the &lt;code&gt;ColorModel&lt;/code&gt; class, pixel value arguments were passed as ints. The Java(tm) 2 Platform API introduced additional classes for representing images. With &lt;a href=&quot;bufferedimage&quot;&gt;&lt;code&gt;BufferedImage&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;renderedimage&quot;&gt;&lt;code&gt;RenderedImage&lt;/code&gt;&lt;/a&gt; objects, based on &lt;a href=&quot;raster&quot;&gt;&lt;code&gt;Raster&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;samplemodel&quot;&gt;&lt;code&gt;SampleModel&lt;/code&gt;&lt;/a&gt; classes, pixel values might not be conveniently representable as a single int. Consequently, &lt;code&gt;ColorModel&lt;/code&gt; now has methods that accept pixel values represented as arrays of primitive types. The primitive type used by a particular &lt;code&gt;ColorModel&lt;/code&gt; object is called its transfer type.</source>
          <target state="translated">この &lt;code&gt;ColorModel&lt;/code&gt; クラスは、ピクセル値の2つの表現をサポートします。ピクセル値は、単一の32ビットintまたはプリミティブ型の配列にすることができます。 Java（tm）Platform1.0および1.1APIは、ピクセルを単一 &lt;code&gt;byte&lt;/code&gt; または単一の &lt;code&gt;int&lt;/code&gt; 値として表しました。 &lt;code&gt;ColorModel&lt;/code&gt; クラスの目的のために、ピクセル値の引数はintとして渡されました。 Java（tm）2プラットフォームAPIは、画像を表すための追加のクラスを導入しました。&lt;a href=&quot;bufferedimage&quot;&gt; &lt;code&gt;BufferedImage&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;renderedimage&quot;&gt; &lt;code&gt;RenderedImage&lt;/code&gt; の&lt;/a&gt;に基づいて、オブジェクト、&lt;a href=&quot;raster&quot;&gt; &lt;code&gt;Raster&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;samplemodel&quot;&gt; &lt;code&gt;SampleModel&lt;/code&gt; &lt;/a&gt;クラス、ピクセル値は単一のintとしては表現できない場合があります。したがって、 &lt;code&gt;ColorModel&lt;/code&gt; プリミティブ型の配列として表されるピクセル値を受け入れるメソッドが追加されました。特定の &lt;code&gt;ColorModel&lt;/code&gt; オブジェクトで使用されるプリミティブ型は、その転送型と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="98f93f642c8589caf925501755e90c3a3667c633" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;Configuration&lt;/code&gt; specifies that an application named, &quot;Login&quot;, requires users to first authenticate to the</source>
          <target state="translated">この &lt;code&gt;Configuration&lt;/code&gt; は、「ログイン」という名前のアプリケーションがユーザーに最初に認証することを要求することを指定します</target>
        </trans-unit>
        <trans-unit id="45ca1aadc765e8a322d246f05d591b249f9cf18e" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;DataFlavor&lt;/code&gt; has been &lt;b&gt;deprecated&lt;/b&gt; because:</source>
          <target state="translated">この &lt;code&gt;DataFlavor&lt;/code&gt; は、次の理由で&lt;b&gt;非推奨になりまし&lt;/b&gt;た。</target>
        </trans-unit>
        <trans-unit id="a94761c9fc06aa6df0ec0f6c2e4b04e9a7754980" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;FileAttributeView&lt;/code&gt; provides a view of a file's user-defined attributes as a set of name/value pairs, where the attribute name is represented by a &lt;code&gt;String&lt;/code&gt;. An implementation may require to encode and decode from the platform or file system representation when accessing the attribute. The value has opaque content. This attribute view defines the &lt;a href=&quot;#read(java.lang.String,java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#write(java.lang.String,java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods to read the value into or write from a &lt;a href=&quot;../../bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;. This &lt;code&gt;FileAttributeView&lt;/code&gt; is not intended for use where the size of an attribute value is larger than &lt;a href=&quot;../../../lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この &lt;code&gt;FileAttributeView&lt;/code&gt; は、ファイルのユーザー定義属性のビューを名前と値のペアのセットとして提供します。属性名は &lt;code&gt;String&lt;/code&gt; 表されます。実装では、属性にアクセスするときに、プラットフォームまたはファイルシステム表現からエンコードおよびデコードする必要がある場合があります。値の内容は不透明です。この属性ビューは、&lt;a href=&quot;../../bytebuffer&quot;&gt; &lt;code&gt;ByteBuffer&lt;/code&gt; に&lt;/a&gt;値を読み込んだり、ByteBufferから値を書き込んだりするための読み取りメソッドと&lt;a href=&quot;#write(java.lang.String,java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;メソッドを定義し&lt;a href=&quot;#read(java.lang.String,java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;。この &lt;code&gt;FileAttributeView&lt;/code&gt; は、属性値のサイズが&lt;a href=&quot;../../../lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/a&gt;より大きい場合の使用を目的としていません。</target>
        </trans-unit>
        <trans-unit id="e7dca1afa768c61eb8246089859bd808f78d59fc" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;FileAttributeView&lt;/code&gt; provides a view of a file's user-defined attributes as a set of name/value pairs, where the attribute name is represented by a &lt;code&gt;String&lt;/code&gt;. An implementation may require to encode and decode from the platform or file system representation when accessing the attribute. The value has opaque content. This attribute view defines the &lt;a href=&quot;userdefinedfileattributeview#read-java.lang.String-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;userdefinedfileattributeview#write-java.lang.String-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods to read the value into or write from a &lt;a href=&quot;../../bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;. This &lt;code&gt;FileAttributeView&lt;/code&gt; is not intended for use where the size of an attribute value is larger than &lt;a href=&quot;../../../lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この &lt;code&gt;FileAttributeView&lt;/code&gt; は、ファイルのユーザー定義属性のビューを名前と値のペアのセットとして提供します。属性名は &lt;code&gt;String&lt;/code&gt; で表されます。実装では、属性にアクセスするときに、プラットフォームまたはファイルシステムの表現からエンコードおよびデコードする必要がある場合があります。値は不透明な内容です。この属性ビューは、&lt;a href=&quot;../../bytebuffer&quot;&gt; &lt;code&gt;ByteBuffer&lt;/code&gt; に&lt;/a&gt;値を書き込んだり、ByteBufferから値を&lt;a href=&quot;userdefinedfileattributeview#write-java.lang.String-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;userdefinedfileattributeview#read-java.lang.String-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;するための読み取りおよび書き込みメソッドを定義します。この &lt;code&gt;FileAttributeView&lt;/code&gt; は、属性値のサイズが&lt;a href=&quot;../../../lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/a&gt;より大きい場合の使用を意図していません。</target>
        </trans-unit>
        <trans-unit id="192cbe98cd1c85864afc298aebdfde8926cbabb4" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;Graphics2D&lt;/code&gt; class extends the &lt;a href=&quot;graphics&quot;&gt;&lt;code&gt;Graphics&lt;/code&gt;&lt;/a&gt; class to provide more sophisticated control over geometry, coordinate transformations, color management, and text layout.</source>
          <target state="translated">この &lt;code&gt;Graphics2D&lt;/code&gt; クラスは、&lt;a href=&quot;graphics&quot;&gt; &lt;code&gt;Graphics&lt;/code&gt; &lt;/a&gt;クラスを拡張して、ジオメトリ、座標変換、カラーマネジメント、およびテキストレイアウトをより高度に制御できるようにします。</target>
        </trans-unit>
        <trans-unit id="f61e08625365c2213c595965bea2c14367ca5f93" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;Graphics2D&lt;/code&gt; class extends the &lt;a href=&quot;graphics&quot;&gt;&lt;code&gt;Graphics&lt;/code&gt;&lt;/a&gt; class to provide more sophisticated control over geometry, coordinate transformations, color management, and text layout. This is the fundamental class for rendering 2-dimensional shapes, text and images on the Java(tm) platform.</source>
          <target state="translated">この &lt;code&gt;Graphics2D&lt;/code&gt; クラスは、&lt;a href=&quot;graphics&quot;&gt; &lt;code&gt;Graphics&lt;/code&gt; &lt;/a&gt;クラスを拡張して、ジオメトリ、座標変換、カラーマネジメント、およびテキストレイアウトをより高度に制御できるようにします。これは、Java（tm）プラットフォームで2次元の形状、テキスト、および画像をレンダリングするための基本的なクラスです。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
