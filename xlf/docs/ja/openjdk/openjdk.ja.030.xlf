<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="aea30617bd4a8cafa3d23bd0a2a5c7f3b376a99d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/defaulttreecelleditor.defaulttextfield&quot;&gt;DefaultTreeCellEditor.DefaultTextField&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;jformattedtextfield&quot;&gt;JFormattedTextField&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;jpasswordfield&quot;&gt;JPasswordField&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/defaulttreecelleditor.defaulttextfield&quot;&gt;DefaultTreeCellEditor.DefaultTextField&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;jformattedtextfield&quot;&gt;JFormattedTextField&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;jpasswordfield&quot;&gt;JPasswordField&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9762c14384e2f40790b4abfd0253ecf40ba3e88c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#addPropertyChangeListener(java.beans.PropertyChangeListener)&quot;&gt;addPropertyChangeListener&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#addPropertyChangeListener(java.beans.PropertyChangeListener)&quot;&gt;addPropertyChangeListener&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt; クラスのaddPropertyChangeListener</target>
        </trans-unit>
        <trans-unit id="7fbaaf6b1ea3b4d4e4ee476a9ea07c3f9d46dc86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#addSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;addSelectionPaths&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#addSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;addSelectionPaths&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt; クラスのaddSelectionPaths</target>
        </trans-unit>
        <trans-unit id="a7f8d3ab9dc3d173ce14f305898685e884d06713" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#addTreeSelectionListener(javax.swing.event.TreeSelectionListener)&quot;&gt;addTreeSelectionListener&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#addTreeSelectionListener(javax.swing.event.TreeSelectionListener)&quot;&gt;addTreeSelectionListener&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt; クラスのaddTreeSelectionListener</target>
        </trans-unit>
        <trans-unit id="bc221a9fd2c53580552d1ba959484aef8e988ed8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#removePropertyChangeListener(java.beans.PropertyChangeListener)&quot;&gt;removePropertyChangeListener&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#removePropertyChangeListener(java.beans.PropertyChangeListener)&quot;&gt;removePropertyChangeListener&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt; クラスのremovePropertyChangeListener</target>
        </trans-unit>
        <trans-unit id="3998d646e0fdf6ec9757195cf3fcb46a4b781939" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#removeSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;removeSelectionPaths&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#removeSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;removeSelectionPaths&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt; クラスのremoveSelectionPaths</target>
        </trans-unit>
        <trans-unit id="0428066be9f009c4b8d090a92cffd87524180bd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#removeTreeSelectionListener(javax.swing.event.TreeSelectionListener)&quot;&gt;removeTreeSelectionListener&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#removeTreeSelectionListener(javax.swing.event.TreeSelectionListener)&quot;&gt;removeTreeSelectionListener&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt; クラスのremoveTreeSelectionListener</target>
        </trans-unit>
        <trans-unit id="cb3a2d3e44989278b65016992b792d8dd3176847" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#setRowMapper(javax.swing.tree.RowMapper)&quot;&gt;setRowMapper&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#setRowMapper(javax.swing.tree.RowMapper)&quot;&gt;setRowMapper&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt; クラスのsetRowMapper</target>
        </trans-unit>
        <trans-unit id="6ad44a494480084670e9b8c6fcf8bd50f4818a2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#setSelectionMode(int)&quot;&gt;setSelectionMode&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#setSelectionMode(int)&quot;&gt;setSelectionMode&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt; クラスのsetSelectionMode</target>
        </trans-unit>
        <trans-unit id="1bb9a548224c93a013be1f2b96a6c4f1231e9c55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#setSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;setSelectionPaths&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel#setSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;setSelectionPaths&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;tree/defaulttreeselectionmodel&quot;&gt;DefaultTreeSelectionModel&lt;/a&gt;&lt;/code&gt; クラスのsetSelectionPaths</target>
        </trans-unit>
        <trans-unit id="bd84d77a36e757bedbdeddfd6d31b48300e2eec6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/expandvetoexception&quot;&gt;ExpandVetoException&lt;/a&gt;&lt;/code&gt; - if the collapse is prevented from occurring</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/expandvetoexception&quot;&gt;ExpandVetoException&lt;/a&gt;&lt;/code&gt; -崩壊の発生が防止されている場合</target>
        </trans-unit>
        <trans-unit id="96fee84dd177e5c31e5eeab53ebf7f8a43d7e2e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/expandvetoexception&quot;&gt;ExpandVetoException&lt;/a&gt;&lt;/code&gt; - if the expansion is prevented from occurring</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/expandvetoexception&quot;&gt;ExpandVetoException&lt;/a&gt;&lt;/code&gt; -拡張の発生が防止されている場合</target>
        </trans-unit>
        <trans-unit id="b7b98957887e0ef4b1c510b3dc16dc32d4a043cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/treecelleditor#getTreeCellEditorComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int)&quot;&gt;getTreeCellEditorComponent&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;tree/treecelleditor&quot;&gt;TreeCellEditor&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/treecelleditor#getTreeCellEditorComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int)&quot;&gt;getTreeCellEditorComponent&lt;/a&gt;&lt;/code&gt; でインタフェース &lt;code&gt;&lt;a href=&quot;tree/treecelleditor&quot;&gt;TreeCellEditor&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="253842d78f383a5630b9998c59c40dad0c8dc414" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/treenode#children()&quot;&gt;children&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;tree/treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/treenode#children()&quot;&gt;children&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;tree/treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt; の子</target>
        </trans-unit>
        <trans-unit id="f8243babb131cf03cd81af79e31af8df3aaf168b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/treenode#getChildAt(int)&quot;&gt;getChildAt&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;tree/treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/treenode#getChildAt(int)&quot;&gt;getChildAt&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;tree/treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt; のgetChildAt</target>
        </trans-unit>
        <trans-unit id="4d41ec5f34a16c60cf66ef2e61e11792a1197f98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/treenode#getChildCount()&quot;&gt;getChildCount&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;tree/treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/treenode#getChildCount()&quot;&gt;getChildCount&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;tree/treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt; のgetChildCount</target>
        </trans-unit>
        <trans-unit id="54314bd52ba4bc9f1ff9265c6671750384cddbbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/treenode#isLeaf()&quot;&gt;isLeaf&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;tree/treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/treenode#isLeaf()&quot;&gt;isLeaf&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;tree/treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt; のisLeaf</target>
        </trans-unit>
        <trans-unit id="a2f7ba079ca347b433998be3dfb030d9198152c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#addPropertyChangeListener(java.beans.PropertyChangeListener)&quot;&gt;addPropertyChangeListener&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#addPropertyChangeListener(java.beans.PropertyChangeListener)&quot;&gt;addPropertyChangeListener&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のaddPropertyChangeListener</target>
        </trans-unit>
        <trans-unit id="6cb45c924c76e8cf957d05f099153fc4b489ba73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#addSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;addSelectionPaths&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#addSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;addSelectionPaths&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のaddSelectionPaths</target>
        </trans-unit>
        <trans-unit id="adcfe8b2a1571c57727a32abe1a181b01ec2be6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#addTreeSelectionListener(javax.swing.event.TreeSelectionListener)&quot;&gt;addTreeSelectionListener&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#addTreeSelectionListener(javax.swing.event.TreeSelectionListener)&quot;&gt;addTreeSelectionListener&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のaddTreeSelectionListener</target>
        </trans-unit>
        <trans-unit id="094f46071efa518fa43b5e9c603584ed3d2d2014" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#removePropertyChangeListener(java.beans.PropertyChangeListener)&quot;&gt;removePropertyChangeListener&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#removePropertyChangeListener(java.beans.PropertyChangeListener)&quot;&gt;removePropertyChangeListener&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のremovePropertyChangeListener</target>
        </trans-unit>
        <trans-unit id="8345cd96075d34aac7f33a68374276584a09b618" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#removeSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;removeSelectionPaths&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#removeSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;removeSelectionPaths&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のremoveSelectionPaths</target>
        </trans-unit>
        <trans-unit id="6923c8e7f3cf741f5514f0d4eab519dbf4f567f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#removeTreeSelectionListener(javax.swing.event.TreeSelectionListener)&quot;&gt;removeTreeSelectionListener&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#removeTreeSelectionListener(javax.swing.event.TreeSelectionListener)&quot;&gt;removeTreeSelectionListener&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のremoveTreeSelectionListener</target>
        </trans-unit>
        <trans-unit id="3ae5305eabc01dc48949986342a949636cc40ed5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#setRowMapper(javax.swing.tree.RowMapper)&quot;&gt;setRowMapper&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#setRowMapper(javax.swing.tree.RowMapper)&quot;&gt;setRowMapper&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のsetRowMapper</target>
        </trans-unit>
        <trans-unit id="fde090b3bdf5669d5324e318a2ed4917cfe82b9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#setSelectionMode(int)&quot;&gt;setSelectionMode&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#setSelectionMode(int)&quot;&gt;setSelectionMode&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のsetSelectionMode</target>
        </trans-unit>
        <trans-unit id="158e3d93b9948b79bccb3e8ea1667483bbef67c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#setSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;setSelectionPaths&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel#setSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;setSelectionPaths&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;tree/treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のsetSelectionPaths</target>
        </trans-unit>
        <trans-unit id="66124c74fa2a677c992f24c353d33983e132983a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treecelleditor#getTreeCellEditorComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int)&quot;&gt;getTreeCellEditorComponent&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treecelleditor&quot;&gt;TreeCellEditor&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treecelleditor#getTreeCellEditorComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int)&quot;&gt;getTreeCellEditorComponent&lt;/a&gt;&lt;/code&gt; でインタフェース &lt;code&gt;&lt;a href=&quot;treecelleditor&quot;&gt;TreeCellEditor&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db2930fc51467b772aa2b2ea272fbf30c17b8a34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treecellrenderer#getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)&quot;&gt;getTreeCellRendererComponent&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treecellrenderer&quot;&gt;TreeCellRenderer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treecellrenderer#getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)&quot;&gt;getTreeCellRendererComponent&lt;/a&gt;&lt;/code&gt; インタフェースで &lt;code&gt;&lt;a href=&quot;treecellrenderer&quot;&gt;TreeCellRenderer&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f0fff371e75f93e109df51b0db93ae6a9ee3189" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treemodel#addTreeModelListener(javax.swing.event.TreeModelListener)&quot;&gt;addTreeModelListener&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treemodel&quot;&gt;TreeModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treemodel#addTreeModelListener(javax.swing.event.TreeModelListener)&quot;&gt;addTreeModelListener&lt;/a&gt;&lt;/code&gt; インタフェースで &lt;code&gt;&lt;a href=&quot;treemodel&quot;&gt;TreeModel&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3423eb5816aaf86232b1f5dcb971fcf66787a605" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treemodel#getChild(java.lang.Object,int)&quot;&gt;getChild&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treemodel&quot;&gt;TreeModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treemodel#getChild(java.lang.Object,int)&quot;&gt;getChild&lt;/a&gt;&lt;/code&gt; インタフェースで &lt;code&gt;&lt;a href=&quot;treemodel&quot;&gt;TreeModel&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04d11c381eb27fc131ba76bbe5e16854bd2e4691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treemodel#getChildCount(java.lang.Object)&quot;&gt;getChildCount&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treemodel&quot;&gt;TreeModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treemodel#getChildCount(java.lang.Object)&quot;&gt;getChildCount&lt;/a&gt;&lt;/code&gt; インタフェースで &lt;code&gt;&lt;a href=&quot;treemodel&quot;&gt;TreeModel&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5480940173bcca61869b3a2b4b05bb45beca3072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treemodel#getIndexOfChild(java.lang.Object,java.lang.Object)&quot;&gt;getIndexOfChild&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treemodel&quot;&gt;TreeModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treemodel#getIndexOfChild(java.lang.Object,java.lang.Object)&quot;&gt;getIndexOfChild&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treemodel&quot;&gt;TreeModel&lt;/a&gt;&lt;/code&gt; のgetIndexOfChild</target>
        </trans-unit>
        <trans-unit id="289aac5d1949b9bb44062f704d51ed9ea15b084e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treemodel#getRoot()&quot;&gt;getRoot&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treemodel&quot;&gt;TreeModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treemodel#getRoot()&quot;&gt;getRoot&lt;/a&gt;&lt;/code&gt; インタフェースで &lt;code&gt;&lt;a href=&quot;treemodel&quot;&gt;TreeModel&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2728e890d94ab16cccb0a5c217a64b27f0f39fc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treemodel#isLeaf(java.lang.Object)&quot;&gt;isLeaf&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treemodel&quot;&gt;TreeModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treemodel#isLeaf(java.lang.Object)&quot;&gt;isLeaf&lt;/a&gt;&lt;/code&gt; インタフェースで &lt;code&gt;&lt;a href=&quot;treemodel&quot;&gt;TreeModel&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b9623a35f893eff0303495d68b760e893c063ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treemodel#removeTreeModelListener(javax.swing.event.TreeModelListener)&quot;&gt;removeTreeModelListener&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treemodel&quot;&gt;TreeModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treemodel#removeTreeModelListener(javax.swing.event.TreeModelListener)&quot;&gt;removeTreeModelListener&lt;/a&gt;&lt;/code&gt; インタフェースで &lt;code&gt;&lt;a href=&quot;treemodel&quot;&gt;TreeModel&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d9912c5a349a81257ca5125dff095b2d3c94b31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treemodel#valueForPathChanged(javax.swing.tree.TreePath,java.lang.Object)&quot;&gt;valueForPathChanged&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treemodel&quot;&gt;TreeModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treemodel#valueForPathChanged(javax.swing.tree.TreePath,java.lang.Object)&quot;&gt;valueForPathChanged&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treemodel&quot;&gt;TreeModel&lt;/a&gt;&lt;/code&gt; のvalueForPathChanged</target>
        </trans-unit>
        <trans-unit id="fb1b81d711add5a3f41f7f24ae1b1b49cb76776c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treenode#children()&quot;&gt;children&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treenode#children()&quot;&gt;children&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt; の子</target>
        </trans-unit>
        <trans-unit id="0b06a2fbb6c3de187d82cb51e868cc4703b71882" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treenode#getAllowsChildren()&quot;&gt;getAllowsChildren&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treenode#getAllowsChildren()&quot;&gt;getAllowsChildren&lt;/a&gt;&lt;/code&gt; インターフェース &lt;code&gt;&lt;a href=&quot;treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt; のgetAllowsChildren</target>
        </trans-unit>
        <trans-unit id="a123b2333467ede6d5f41dc1259b42c173b595ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treenode#getChildAt(int)&quot;&gt;getChildAt&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treenode#getChildAt(int)&quot;&gt;getChildAt&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt; のgetChildAt</target>
        </trans-unit>
        <trans-unit id="b0ad149ac81b2555630cb266ebf3003564807b6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treenode#getChildCount()&quot;&gt;getChildCount&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treenode#getChildCount()&quot;&gt;getChildCount&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt; のgetChildCount</target>
        </trans-unit>
        <trans-unit id="1072088e189b0ee18daa4ea6438063cae4013967" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treenode#getIndex(javax.swing.tree.TreeNode)&quot;&gt;getIndex&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treenode#getIndex(javax.swing.tree.TreeNode)&quot;&gt;getIndex&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt; のgetIndex</target>
        </trans-unit>
        <trans-unit id="9f057f020c684708e0719c59553680463807e4ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treenode#getParent()&quot;&gt;getParent&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treenode#getParent()&quot;&gt;getParent&lt;/a&gt;&lt;/code&gt; インターフェース &lt;code&gt;&lt;a href=&quot;treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt; のgetParent</target>
        </trans-unit>
        <trans-unit id="6d0a64db7cedd5bb0afc8e4db145c69238aecf84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treenode#isLeaf()&quot;&gt;isLeaf&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treenode#isLeaf()&quot;&gt;isLeaf&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treenode&quot;&gt;TreeNode&lt;/a&gt;&lt;/code&gt; のisLeaf</target>
        </trans-unit>
        <trans-unit id="3b7c466bbfcc3dacfbd95124fe1a17456805fa29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#addPropertyChangeListener(java.beans.PropertyChangeListener)&quot;&gt;addPropertyChangeListener&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#addPropertyChangeListener(java.beans.PropertyChangeListener)&quot;&gt;addPropertyChangeListener&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のaddPropertyChangeListener</target>
        </trans-unit>
        <trans-unit id="d8831b6bce94c1ceae7072e956d8759465176ce3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#addSelectionPath(javax.swing.tree.TreePath)&quot;&gt;addSelectionPath&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#addSelectionPath(javax.swing.tree.TreePath)&quot;&gt;addSelectionPath&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のaddSelectionPath</target>
        </trans-unit>
        <trans-unit id="a4cbfb8bbdf8a79445ee494edd9db99524369825" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#addSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;addSelectionPaths&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#addSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;addSelectionPaths&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のaddSelectionPaths</target>
        </trans-unit>
        <trans-unit id="81a2d822f873d6d63d387125f21b4367a7deef80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#addTreeSelectionListener(javax.swing.event.TreeSelectionListener)&quot;&gt;addTreeSelectionListener&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#addTreeSelectionListener(javax.swing.event.TreeSelectionListener)&quot;&gt;addTreeSelectionListener&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のaddTreeSelectionListener</target>
        </trans-unit>
        <trans-unit id="e3c0be18421caadfa380f58a0d669ac1384ade2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#clearSelection()&quot;&gt;clearSelection&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#clearSelection()&quot;&gt;clearSelection&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のclearSelection</target>
        </trans-unit>
        <trans-unit id="1e6b01edbd23afe564354d054333523099ec755b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getLeadSelectionPath()&quot;&gt;getLeadSelectionPath&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getLeadSelectionPath()&quot;&gt;getLeadSelectionPath&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のgetLeadSelectionPath</target>
        </trans-unit>
        <trans-unit id="5b2755bcde68adc4c9131dcffc386a6280f52e27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getLeadSelectionRow()&quot;&gt;getLeadSelectionRow&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getLeadSelectionRow()&quot;&gt;getLeadSelectionRow&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のgetLeadSelectionRow</target>
        </trans-unit>
        <trans-unit id="34c1285d1e9cfb277987ae200013153e995a33d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getMaxSelectionRow()&quot;&gt;getMaxSelectionRow&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getMaxSelectionRow()&quot;&gt;getMaxSelectionRow&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のgetMaxSelectionRow</target>
        </trans-unit>
        <trans-unit id="5dbdcee284d040437e28d3bcaeb8ee85ff0c6620" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getMinSelectionRow()&quot;&gt;getMinSelectionRow&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getMinSelectionRow()&quot;&gt;getMinSelectionRow&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のgetMinSelectionRow</target>
        </trans-unit>
        <trans-unit id="05672897768077ed87f697334332d33f1a5d6ce5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getRowMapper()&quot;&gt;getRowMapper&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getRowMapper()&quot;&gt;getRowMapper&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のgetRowMapper</target>
        </trans-unit>
        <trans-unit id="37a0fc6ffcc76ae994e5615399bb673772d38c5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getSelectionCount()&quot;&gt;getSelectionCount&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getSelectionCount()&quot;&gt;getSelectionCount&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のgetSelectionCount</target>
        </trans-unit>
        <trans-unit id="14dd55f77839fd35cbd98370d12846bac1641ba8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getSelectionMode()&quot;&gt;getSelectionMode&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getSelectionMode()&quot;&gt;getSelectionMode&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のgetSelectionMode</target>
        </trans-unit>
        <trans-unit id="d148f915d586ac53c112460c206dceb911dd57af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getSelectionPath()&quot;&gt;getSelectionPath&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getSelectionPath()&quot;&gt;getSelectionPath&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のgetSelectionPath</target>
        </trans-unit>
        <trans-unit id="6a357138965037e9e107f39c6a564d76d1eb80bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getSelectionPaths()&quot;&gt;getSelectionPaths&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getSelectionPaths()&quot;&gt;getSelectionPaths&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のgetSelectionPaths</target>
        </trans-unit>
        <trans-unit id="79e7ba7692780f890e44be11e62c407f63a1b0eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getSelectionRows()&quot;&gt;getSelectionRows&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#getSelectionRows()&quot;&gt;getSelectionRows&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のgetSelectionRows</target>
        </trans-unit>
        <trans-unit id="9d52769bd9b73f3eefe18799ad4097fef4cdaac6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#isPathSelected(javax.swing.tree.TreePath)&quot;&gt;isPathSelected&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#isPathSelected(javax.swing.tree.TreePath)&quot;&gt;isPathSelected&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のisPathSelected</target>
        </trans-unit>
        <trans-unit id="25fded2f819f834403c775f45386f9c478924e43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#isRowSelected(int)&quot;&gt;isRowSelected&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#isRowSelected(int)&quot;&gt;isRowSelected&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のisRowSelected</target>
        </trans-unit>
        <trans-unit id="cf29abdd2da382eb60f18b32104fe1465163c29a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#isSelectionEmpty()&quot;&gt;isSelectionEmpty&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#isSelectionEmpty()&quot;&gt;isSelectionEmpty&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のisSelectionEmpty</target>
        </trans-unit>
        <trans-unit id="e53bdc992bc5e1edd13e88ded19639b41f9685c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#removePropertyChangeListener(java.beans.PropertyChangeListener)&quot;&gt;removePropertyChangeListener&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#removePropertyChangeListener(java.beans.PropertyChangeListener)&quot;&gt;removePropertyChangeListener&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のremovePropertyChangeListener</target>
        </trans-unit>
        <trans-unit id="7a7b1a4071c34bd380ee8e327221b219c03035d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#removeSelectionPath(javax.swing.tree.TreePath)&quot;&gt;removeSelectionPath&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#removeSelectionPath(javax.swing.tree.TreePath)&quot;&gt;removeSelectionPath&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のremoveSelectionPath</target>
        </trans-unit>
        <trans-unit id="47a23836ddf3fbb8a46fec55b77dccfc35bcde8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#removeSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;removeSelectionPaths&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#removeSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;removeSelectionPaths&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のremoveSelectionPaths</target>
        </trans-unit>
        <trans-unit id="85c107d73ad10dce840bd9abaac61b9e7393f7c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#removeTreeSelectionListener(javax.swing.event.TreeSelectionListener)&quot;&gt;removeTreeSelectionListener&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#removeTreeSelectionListener(javax.swing.event.TreeSelectionListener)&quot;&gt;removeTreeSelectionListener&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のremoveTreeSelectionListener</target>
        </trans-unit>
        <trans-unit id="90d171177b1fd433b8a02b640115fca316d42e06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#resetRowSelection()&quot;&gt;resetRowSelection&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#resetRowSelection()&quot;&gt;resetRowSelection&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のresetRowSelection</target>
        </trans-unit>
        <trans-unit id="5c5d799eb56229152adb8f2ac04a81c3965d59d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#setRowMapper(javax.swing.tree.RowMapper)&quot;&gt;setRowMapper&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#setRowMapper(javax.swing.tree.RowMapper)&quot;&gt;setRowMapper&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のsetRowMapper</target>
        </trans-unit>
        <trans-unit id="49b033998431f43d2f8c26be24923dbe2f790f6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#setSelectionMode(int)&quot;&gt;setSelectionMode&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#setSelectionMode(int)&quot;&gt;setSelectionMode&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のsetSelectionMode</target>
        </trans-unit>
        <trans-unit id="bf523844ee5a754d57ae788603833354fd78d869" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#setSelectionPath(javax.swing.tree.TreePath)&quot;&gt;setSelectionPath&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#setSelectionPath(javax.swing.tree.TreePath)&quot;&gt;setSelectionPath&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のsetSelectionPath</target>
        </trans-unit>
        <trans-unit id="9206e7ffa3087ecf2a6dc7cd6957c87f734dd860" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;treeselectionmodel#setSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;setSelectionPaths&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;treeselectionmodel#setSelectionPaths(javax.swing.tree.TreePath%5B%5D)&quot;&gt;setSelectionPaths&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;treeselectionmodel&quot;&gt;TreeSelectionModel&lt;/a&gt;&lt;/code&gt; のsetSelectionPaths</target>
        </trans-unit>
        <trans-unit id="b5da7023a10833fb1f094d72f6920343f3634613" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;trustmanager&quot;&gt;TrustManager&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;x509trustmanager&quot;&gt;X509TrustManager&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;trustmanager&quot;&gt;TrustManager&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;x509trustmanager&quot;&gt;X509TrustManager&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52e38d687c662be36803c73268e80bfc508ea63b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;type/arraytype&quot;&gt;ArrayType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;type/declaredtype&quot;&gt;DeclaredType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;element/element&quot;&gt;Element&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;type/errortype&quot;&gt;ErrorType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;element/executableelement&quot;&gt;ExecutableElement&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;type/executabletype&quot;&gt;ExecutableType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;type/intersectiontype&quot;&gt;IntersectionType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;element/moduleelement&quot;&gt;ModuleElement&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;type/notype&quot;&gt;NoType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;type/nulltype&quot;&gt;NullType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;element/packageelement&quot;&gt;PackageElement&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;element/parameterizable&quot;&gt;Parameterizable&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;type/primitivetype&quot;&gt;PrimitiveType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;element/qualifiednameable&quot;&gt;QualifiedNameable&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;type/referencetype&quot;&gt;ReferenceType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;element/typeelement&quot;&gt;TypeElement&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;type/typemirror&quot;&gt;TypeMirror&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;element/typeparameterelement&quot;&gt;TypeParameterElement&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;type/typevariable&quot;&gt;TypeVariable&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;type/uniontype&quot;&gt;UnionType&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;element/variableelement&quot;&gt;VariableElement&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;type/wildcardtype&quot;&gt;WildcardType&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;type/arraytype&quot;&gt;ArrayType&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;type/declaredtype&quot;&gt;DeclaredType&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;element/element&quot;&gt;Element&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;type/errortype&quot;&gt;ErrorType&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;element/executableelement&quot;&gt;ExecutableElement&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;type/executabletype&quot;&gt;ExecutableType&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;type/intersectiontype&quot;&gt;IntersectionType&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;element/moduleelement&quot;&gt;ModuleElement&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;type/notype&quot;&gt;NoType&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;type/nulltype&quot;&gt;NullType&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;element/packageelement&quot;&gt;PackageElement&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;element/parameterizable&quot;&gt;Parameterizable&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;type/primitivetype&quot;&gt;PrimitiveType&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;element/qualifiednameable&quot;&gt;QualifiedNameable&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;type/referencetype&quot;&gt;ReferenceType&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;element/typeelement&quot;&gt;TypeElement&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;type/typemirror&quot;&gt;TypeMirror&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;element/typeparameterelement&quot;&gt;TypeParameterElement&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;type/typevariable&quot;&gt;TypeVariable&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;type/uniontype&quot;&gt;UnionType&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;element/variableelement&quot;&gt;VariableElement&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;type/wildcardtype&quot;&gt;WildcardType&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec6b6365fda6b85f2865e9ffa22035b62187aa59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;typekindvisitor6#visitNoTypeAsModule(javax.lang.model.type.NoType,P)&quot;&gt;visitNoTypeAsModule&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;typekindvisitor6&quot;&gt;TypeKindVisitor6&lt;/a&gt;&amp;lt;&lt;a href=&quot;typekindvisitor9&quot;&gt;R&lt;/a&gt;,​&lt;a href=&quot;typekindvisitor9&quot;&gt;P&lt;/a&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;typekindvisitor6#visitNoTypeAsModule(javax.lang.model.type.NoType,P)&quot;&gt;visitNoTypeAsModule&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;typekindvisitor6&quot;&gt;TypeKindVisitor6&lt;/a&gt;&amp;lt;&lt;a href=&quot;typekindvisitor9&quot;&gt;R&lt;/a&gt;,​&lt;a href=&quot;typekindvisitor9&quot;&gt;P&lt;/a&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ac9adb1cfc85edcca789ffa0d29a0f4f4d4bf2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;typenotpresentexception&quot;&gt;TypeNotPresentException&lt;/a&gt;&lt;/code&gt; - if any of the generic superinterfaces refers to a non-existent type declaration</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;typenotpresentexception&quot;&gt;TypeNotPresentException&lt;/a&gt;&lt;/code&gt; -汎用スーパーインターフェースのいずれかが存在しない型宣言を参照している場合</target>
        </trans-unit>
        <trans-unit id="5d28c6597b8e05c6ee21acbd8f12365ed6125e94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;typenotpresentexception&quot;&gt;TypeNotPresentException&lt;/a&gt;&lt;/code&gt; - if the generic superclass refers to a non-existent type declaration</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;typenotpresentexception&quot;&gt;TypeNotPresentException&lt;/a&gt;&lt;/code&gt; -ジェネリックスーパークラスが存在しない型宣言を参照する場合</target>
        </trans-unit>
        <trans-unit id="388c8bd1c785069a99175de9d92cafaf108a4e05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uidefaults.lazyinputmap&quot;&gt;UIDefaults.LazyInputMap&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;uidefaults.proxylazyvalue&quot;&gt;UIDefaults.ProxyLazyValue&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uidefaults.lazyinputmap&quot;&gt;UIDefaults.LazyInputMap&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;uidefaults.proxylazyvalue&quot;&gt;UIDefaults.ProxyLazyValue&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a69c4871014bdf67584376324222c9b65dc7d095" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;uidefaults.lazyvalue#createValue(javax.swing.UIDefaults)&quot;&gt;createValue&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;uidefaults.lazyvalue&quot;&gt;UIDefaults.LazyValue&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;uidefaults.lazyvalue#createValue(javax.swing.UIDefaults)&quot;&gt;createValue&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;uidefaults.lazyvalue&quot;&gt;UIDefaults.LazyValue&lt;/a&gt;&lt;/code&gt; のcreateValue</target>
        </trans-unit>
        <trans-unit id="388c54c2cc8d95ef97f82aeb64471b4c258a8d91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;undoableedit#addEdit(javax.swing.undo.UndoableEdit)&quot;&gt;addEdit&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;undoableedit#addEdit(javax.swing.undo.UndoableEdit)&quot;&gt;addEdit&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt; のaddEdit</target>
        </trans-unit>
        <trans-unit id="d00e8da7f936b42dc5b4c66a0fa50289ef572019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;undoableedit#canRedo()&quot;&gt;canRedo&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;undoableedit#canRedo()&quot;&gt;canRedo&lt;/a&gt;&lt;/code&gt; インターフェース &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt; のcanRedo</target>
        </trans-unit>
        <trans-unit id="04b5f6a662f124030e8d157a2bb75ce951fa40c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;undoableedit#canUndo()&quot;&gt;canUndo&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;undoableedit#canUndo()&quot;&gt;canUndo&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt; のcanUndo</target>
        </trans-unit>
        <trans-unit id="b909d142a3cfd309ac6aa1af8ea172a9322ff896" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;undoableedit#die()&quot;&gt;die&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;undoableedit#die()&quot;&gt;die&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt; で死ぬ</target>
        </trans-unit>
        <trans-unit id="3d06453b5e960bb5fae52fd268946468eaf25b70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;undoableedit#getPresentationName()&quot;&gt;getPresentationName&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;undoableedit#getPresentationName()&quot;&gt;getPresentationName&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt; のgetPresentationName</target>
        </trans-unit>
        <trans-unit id="9aceffbca0bbdd37e354198c25ddc08578dfd608" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;undoableedit#getRedoPresentationName()&quot;&gt;getRedoPresentationName&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;undoableedit#getRedoPresentationName()&quot;&gt;getRedoPresentationName&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt; のgetRedoPresentationName</target>
        </trans-unit>
        <trans-unit id="8d9e52deb46e456d736686ae8ed5058e3d65a227" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;undoableedit#getUndoPresentationName()&quot;&gt;getUndoPresentationName&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;undoableedit#getUndoPresentationName()&quot;&gt;getUndoPresentationName&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt; のgetUndoPresentationName</target>
        </trans-unit>
        <trans-unit id="c447af667caa4c857ba14a860718604eb7384eb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;undoableedit#isSignificant()&quot;&gt;isSignificant&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;undoableedit#isSignificant()&quot;&gt;isSignificant&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt; のisSignificant</target>
        </trans-unit>
        <trans-unit id="57705237aa62f86edeae24826977e56d3f18e170" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;undoableedit#redo()&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;undoableedit#redo()&quot;&gt;redo&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt; でやり直し</target>
        </trans-unit>
        <trans-unit id="993d3b0bc8357ed74676eb4919e2c10f82662a4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;undoableedit#replaceEdit(javax.swing.undo.UndoableEdit)&quot;&gt;replaceEdit&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;undoableedit#replaceEdit(javax.swing.undo.UndoableEdit)&quot;&gt;replaceEdit&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt; のreplaceEdit</target>
        </trans-unit>
        <trans-unit id="b98ad2f58181e1d28458558ff897d870ef5b0208" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;undoableedit#undo()&quot;&gt;undo&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;undoableedit#undo()&quot;&gt;undo&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;undoableedit&quot;&gt;UndoableEdit&lt;/a&gt;&lt;/code&gt; で元に戻す</target>
        </trans-unit>
        <trans-unit id="d42f2a7d90ab14c9f61c79a12474a019e1eb8177" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownannotationvalueexception&quot;&gt;UnknownAnnotationValueException&lt;/a&gt;&lt;/code&gt; - a visitor implementation may optionally throw this exception</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownannotationvalueexception&quot;&gt;UnknownAnnotationValueException&lt;/a&gt;&lt;/code&gt; -訪問者の実装はオプションでこの例外をスローする場合がある</target>
        </trans-unit>
        <trans-unit id="4e402a39cb4547238af52f4d6c2fbc6f524acfb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknowndirectiveexception&quot;&gt;UnknownDirectiveException&lt;/a&gt;&lt;/code&gt; - a visitor implementation may optionally throw this exception</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknowndirectiveexception&quot;&gt;UnknownDirectiveException&lt;/a&gt;&lt;/code&gt; -訪問者の実装はオプションでこの例外をスローできます</target>
        </trans-unit>
        <trans-unit id="fd8b9a212cdef32a5746886832e4a5d2e8cfadeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownelementexception&quot;&gt;UnknownElementException&lt;/a&gt;&lt;/code&gt; - a visitor implementation may optionally throw this exception</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownelementexception&quot;&gt;UnknownElementException&lt;/a&gt;&lt;/code&gt; -訪問者の実装がオプションでこの例外をスローする場合がある</target>
        </trans-unit>
        <trans-unit id="d1534b011a4816b06be2172389f39d6fe65b53c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknowngroupexception&quot;&gt;UnknownGroupException&lt;/a&gt;&lt;/code&gt; - if &lt;code&gt;id&lt;/code&gt; is not registered</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknowngroupexception&quot;&gt;UnknownGroupException&lt;/a&gt;&lt;/code&gt; - &lt;code&gt;id&lt;/code&gt; が登録されていない場合</target>
        </trans-unit>
        <trans-unit id="3039b606891785a72fedc406051c126e9ae17745" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknowngroupexception&quot;&gt;UnknownGroupException&lt;/a&gt;&lt;/code&gt; - if group id in &lt;code&gt;desc&lt;/code&gt; is not registered with the activation system</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknowngroupexception&quot;&gt;UnknownGroupException&lt;/a&gt;&lt;/code&gt; - &lt;code&gt;desc&lt;/code&gt; のグループIDがアクティベーションシステムに登録されていない場合</target>
        </trans-unit>
        <trans-unit id="b6fe0687bbabf1607ea3643435bdf28c6839c6c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknowngroupexception&quot;&gt;UnknownGroupException&lt;/a&gt;&lt;/code&gt; - if group is not registered</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknowngroupexception&quot;&gt;UnknownGroupException&lt;/a&gt;&lt;/code&gt; -グループが登録されていない場合</target>
        </trans-unit>
        <trans-unit id="a4af873dc76bd0b229b2423483233f9c3e147479" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknowngroupexception&quot;&gt;UnknownGroupException&lt;/a&gt;&lt;/code&gt; - if group is unknown</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknowngroupexception&quot;&gt;UnknownGroupException&lt;/a&gt;&lt;/code&gt; -グループが不明な場合</target>
        </trans-unit>
        <trans-unit id="a4e2ef2d3d3f3062b4f77eca3497c19f65170d83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknowngroupexception&quot;&gt;UnknownGroupException&lt;/a&gt;&lt;/code&gt; - if group referred to in &lt;code&gt;desc&lt;/code&gt; is not registered with this system</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknowngroupexception&quot;&gt;UnknownGroupException&lt;/a&gt;&lt;/code&gt; - &lt;code&gt;desc&lt;/code&gt; で参照されているグループがこのシステムに登録されていない場合</target>
        </trans-unit>
        <trans-unit id="578ec0cab597ca9de0037ac3e892bdb60e9eb7b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknowngroupexception&quot;&gt;UnknownGroupException&lt;/a&gt;&lt;/code&gt; - the group associated with &lt;code&gt;desc&lt;/code&gt; is not a registered group</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknowngroupexception&quot;&gt;UnknownGroupException&lt;/a&gt;&lt;/code&gt; - &lt;code&gt;desc&lt;/code&gt; に関連付けられているグループは登録済みグループではありません</target>
        </trans-unit>
        <trans-unit id="9ba852a8669880851d511658b1430e76d0fd84dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknowngroupexception&quot;&gt;UnknownGroupException&lt;/a&gt;&lt;/code&gt; - the group associated with &lt;code&gt;id&lt;/code&gt; is not a registered group</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknowngroupexception&quot;&gt;UnknownGroupException&lt;/a&gt;&lt;/code&gt; - &lt;code&gt;id&lt;/code&gt; に関連付けられたグループは登録済みグループではありません</target>
        </trans-unit>
        <trans-unit id="90ad51a6967f0dee6accb613577706f5cad4a428" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknowngroupexception&quot;&gt;UnknownGroupException&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknowngroupexception&quot;&gt;UnknownGroupException&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64c336ca8dd743fd277d7156f0389f65357cf8be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownhostexception&quot;&gt;UnknownHostException&lt;/a&gt;&lt;/code&gt; - if IP address is of illegal length</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownhostexception&quot;&gt;UnknownHostException&lt;/a&gt;&lt;/code&gt; -IPアドレスの長さが不正な場合</target>
        </trans-unit>
        <trans-unit id="f0a3383745809a95fc9d478243fbce858e9e01c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownhostexception&quot;&gt;UnknownHostException&lt;/a&gt;&lt;/code&gt; - if IP address is of illegal length, or if the interface does not have a numeric scope_id assigned for the given address type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownhostexception&quot;&gt;UnknownHostException&lt;/a&gt;&lt;/code&gt; -IPアドレスの長さが不正である場合、または指定されたアドレスタイプに割り当てられている数値のscope_idがインターフェイスにない場合。</target>
        </trans-unit>
        <trans-unit id="acfcf7f6a786f8d961736ece9933e9d4c952db2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownhostexception&quot;&gt;UnknownHostException&lt;/a&gt;&lt;/code&gt; - if IP address is of illegal length.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownhostexception&quot;&gt;UnknownHostException&lt;/a&gt;&lt;/code&gt; -IPアドレスの長さが不正な場合。</target>
        </trans-unit>
        <trans-unit id="0d9e29673e092a06903596dd3e7f7bb8bb74e34e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownhostexception&quot;&gt;UnknownHostException&lt;/a&gt;&lt;/code&gt; - if no IP address for the &lt;code&gt;host&lt;/code&gt; could be found, or if a scope_id was specified for a global IPv6 address.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownhostexception&quot;&gt;UnknownHostException&lt;/a&gt;&lt;/code&gt; - &lt;code&gt;host&lt;/code&gt; IPアドレスが見つからなかった場合、またはグローバルIPv6アドレスにscope_idが指定された場合</target>
        </trans-unit>
        <trans-unit id="7048e86f29cca7a4bc721826fa8a2723d18ec9ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownhostexception&quot;&gt;UnknownHostException&lt;/a&gt;&lt;/code&gt; - if the IP address of the host could not be determined.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownhostexception&quot;&gt;UnknownHostException&lt;/a&gt;&lt;/code&gt; -ホストのIPアドレスを判別できなかった場合。</target>
        </trans-unit>
        <trans-unit id="11c5427fd0059a8aa794bc1ad025d3b0e572cc73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownhostexception&quot;&gt;UnknownHostException&lt;/a&gt;&lt;/code&gt; - if the local host name could not be resolved into an address.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownhostexception&quot;&gt;UnknownHostException&lt;/a&gt;&lt;/code&gt; -ローカルホスト名をアドレスに解決できなかった場合。</target>
        </trans-unit>
        <trans-unit id="fde71dff984f0af949bb97827b09d212502736bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; - if &lt;code&gt;id&lt;/code&gt; is not registered</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; - &lt;code&gt;id&lt;/code&gt; が登録されていない場合</target>
        </trans-unit>
        <trans-unit id="38ae0d0457acf14b66b3c5fb6b54f419c8388658" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; - if object (&lt;code&gt;id&lt;/code&gt;) is unknown</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; -オブジェクト（ &lt;code&gt;id&lt;/code&gt; ）が不明な場合</target>
        </trans-unit>
        <trans-unit id="1191f401961815faba672d653de4c5633aba1f6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; - if object is not known (it may already be inactive)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; -オブジェクトが不明な場合（すでに非アクティブになっている可能性があります）</target>
        </trans-unit>
        <trans-unit id="16144c7ac538fdc53b365f05f0ebd8ea3cec13a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; - if object is not registered</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; -オブジェクトが登録されていない場合</target>
        </trans-unit>
        <trans-unit id="88dc40b491c4f8c4096834b1dd6bdd4df2727eb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; - if object is unknown</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; -オブジェクトが不明な場合</target>
        </trans-unit>
        <trans-unit id="971546a52bd6080cd5995bd09e375658dcccab6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; - if object is unknown (may already be inactive)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; -オブジェクトが不明な場合（すでに非アクティブになっている可能性があります）</target>
        </trans-unit>
        <trans-unit id="c5354b82ae54eae186c68c3dc96157ce61e645ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; - if object is unknown (not registered)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; -オブジェクトが不明な場合（登録されていない場合）</target>
        </trans-unit>
        <trans-unit id="dde7498440c79720e4c6778d6130a5374f104097" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; - if the object is unknown</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; -オブジェクトが不明な場合</target>
        </trans-unit>
        <trans-unit id="6c27fcbdd0787ff439a1f79b4c609e7360b9816e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; - the activation &lt;code&gt;id&lt;/code&gt; is not registered</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownobjectexception&quot;&gt;UnknownObjectException&lt;/a&gt;&lt;/code&gt; -アクティベーション &lt;code&gt;id&lt;/code&gt; が登録されていません</target>
        </trans-unit>
        <trans-unit id="d7781fe2cc9c7df58e78e4708d2eacbb2644af74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownserviceexception&quot;&gt;UnknownServiceException&lt;/a&gt;&lt;/code&gt; - if the protocol does not support input.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownserviceexception&quot;&gt;UnknownServiceException&lt;/a&gt;&lt;/code&gt; -プロトコルが入力をサポートしていない場合。</target>
        </trans-unit>
        <trans-unit id="4d5a419dd449b485da035d601a694336ee02d752" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownserviceexception&quot;&gt;UnknownServiceException&lt;/a&gt;&lt;/code&gt; - if the protocol does not support output.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownserviceexception&quot;&gt;UnknownServiceException&lt;/a&gt;&lt;/code&gt; -プロトコルが出力をサポートしていない場合。</target>
        </trans-unit>
        <trans-unit id="54f966b48abb7c26cf2a65f4f85717e5c0732fed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknownserviceexception&quot;&gt;UnknownServiceException&lt;/a&gt;&lt;/code&gt; - if the protocol does not support the content type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknownserviceexception&quot;&gt;UnknownServiceException&lt;/a&gt;&lt;/code&gt; -プロトコルがコンテンツタイプをサポートしていない場合。</target>
        </trans-unit>
        <trans-unit id="78bf412b1d1fdea3e62be4804ee3121db494b009" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unknowntypeexception&quot;&gt;UnknownTypeException&lt;/a&gt;&lt;/code&gt; - a visitor implementation may optionally throw this exception</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unknowntypeexception&quot;&gt;UnknownTypeException&lt;/a&gt;&lt;/code&gt; -訪問者の実装がオプションでこの例外をスローする場合がある</target>
        </trans-unit>
        <trans-unit id="84931f5302315a0ffeb30479d20a68918f5652e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unmappablecharacterexception&quot;&gt;UnmappableCharacterException&lt;/a&gt;&lt;/code&gt; - If the byte sequence starting at the input buffer's current position cannot be mapped to an equivalent character sequence and the current unmappable-character action is &lt;a href=&quot;codingerroraction#REPORT&quot;&gt;&lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unmappablecharacterexception&quot;&gt;UnmappableCharacterException&lt;/a&gt;&lt;/code&gt; -入力バッファーの現在の位置から始まるバイトシーケンスを同等の文字シーケンスにマップできず、現在のマップできない文字アクションが&lt;a href=&quot;codingerroraction#REPORT&quot;&gt; &lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt; の場合&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="036d5648488617b677bd544ec4031a02d4b75904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unmappablecharacterexception&quot;&gt;UnmappableCharacterException&lt;/a&gt;&lt;/code&gt; - If the character sequence starting at the input buffer's current position cannot be mapped to an equivalent byte sequence and the current unmappable-character action is &lt;a href=&quot;codingerroraction#REPORT&quot;&gt;&lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unmappablecharacterexception&quot;&gt;UnmappableCharacterException&lt;/a&gt;&lt;/code&gt; -入力バッファーの現在の位置で始まる文字シーケンスを同等のバイトシーケンスにマップできず、現在のマップできない文字のアクションが&lt;a href=&quot;codingerroraction#REPORT&quot;&gt; &lt;code&gt;CodingErrorAction.REPORT&lt;/code&gt; の場合&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecdc072f1432ef846b7d64bbc256e170a461c527" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unmappablecharacterexception&quot;&gt;UnmappableCharacterException&lt;/a&gt;&lt;/code&gt; - If this object represents an unmappable-character error; the exceptions length value will be that of this object</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unmappablecharacterexception&quot;&gt;UnmappableCharacterException&lt;/a&gt;&lt;/code&gt; -このオブジェクトがマップ不可文字エラーを表す場合。例外の長さの値はこのオブジェクトの値になります</target>
        </trans-unit>
        <trans-unit id="e40bc0ecf08f00400df8d4324c81ca72f3c5dc53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unmodifiableclassexception&quot;&gt;UnmodifiableClassException&lt;/a&gt;&lt;/code&gt; - if a specified class cannot be modified (&lt;a href=&quot;#isModifiableClass(java.lang.Class)&quot;&gt;&lt;code&gt;isModifiableClass(java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; would return &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unmodifiableclassexception&quot;&gt;UnmodifiableClassException&lt;/a&gt;&lt;/code&gt; 指定されたクラスを変更できない場合（&lt;a href=&quot;#isModifiableClass(java.lang.Class)&quot;&gt; &lt;code&gt;isModifiableClass(java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;false&lt;/code&gt; を返します）</target>
        </trans-unit>
        <trans-unit id="531a24afc36fc3aaea15500801a81cf28a185b30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unmodifiableclassexception&quot;&gt;UnmodifiableClassException&lt;/a&gt;&lt;/code&gt; - if a specified class cannot be modified (&lt;a href=&quot;instrumentation#isModifiableClass-java.lang.Class-&quot;&gt;&lt;code&gt;isModifiableClass(java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; would return &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unmodifiableclassexception&quot;&gt;UnmodifiableClassException&lt;/a&gt;&lt;/code&gt; -指定されたクラスを変更できない場合（&lt;a href=&quot;instrumentation#isModifiableClass-java.lang.Class-&quot;&gt; &lt;code&gt;isModifiableClass(java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;false&lt;/code&gt; を返します）</target>
        </trans-unit>
        <trans-unit id="4d431ad38ee446ef0e42b50c88d62d1b260ea866" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unmodifiablemoduleexception&quot;&gt;UnmodifiableModuleException&lt;/a&gt;&lt;/code&gt; - if the module cannot be modified</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unmodifiablemoduleexception&quot;&gt;UnmodifiableModuleException&lt;/a&gt;&lt;/code&gt; モジュールを変更できない場合</target>
        </trans-unit>
        <trans-unit id="fffdb037f486419b0268d91f10760217493f64ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; - (Unchecked exception) Thrown if this attribute set does not support the &lt;code&gt;addAll()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; -（チェックされない例外）この属性セットが &lt;code&gt;addAll()&lt;/code&gt; メソッドをサポートしない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="120a1095514367fbacebe85b50d4441393cdeff8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; - (Unchecked exception) Thrown if this attribute set does not support the &lt;code&gt;addAll(AttributeSet)&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; -（未チェックの例外）この属性セットが &lt;code&gt;addAll(AttributeSet)&lt;/code&gt; メソッドをサポートしていない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="0ea61b3ce46ffddc5651e39529f183e7e4706e7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; - (unchecked exception) Thrown if this attribute set does not support the &lt;code&gt;add()&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; -（未チェックの例外）この属性セットが &lt;code&gt;add()&lt;/code&gt; 操作をサポートしていない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="3689b74a17bc71429983ba9bf87b7d83249d3fe8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; - (unchecked exception) Thrown if this attribute set does not support the &lt;code&gt;clear()&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; -（未チェックの例外）この属性セットが &lt;code&gt;clear()&lt;/code&gt; 操作をサポートしていない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="0a06ff218fa29ee6a4663879c753658d8a70ffc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; - (unchecked exception) Thrown if this attribute set does not support the &lt;code&gt;remove()&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; -（未チェックの例外）この属性セットが &lt;code&gt;remove()&lt;/code&gt; 操作をサポートしていない場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="4c7175584fd2ef8565ca3e16d1e21f5bb7ef66c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; - if this attribute set does not support the &lt;code&gt;add()&lt;/code&gt; operation</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; この属性セットが &lt;code&gt;add()&lt;/code&gt; 操作をサポートしていない場合</target>
        </trans-unit>
        <trans-unit id="c763c58430e41d689bd80890fec5829babeb3379" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; - if this attribute set does not support the &lt;code&gt;addAll()&lt;/code&gt; method</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; この属性セットが &lt;code&gt;addAll()&lt;/code&gt; メソッドをサポートしていない場合</target>
        </trans-unit>
        <trans-unit id="2e27dbf5ac730ebceb184288c11b95c636beaf3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; - if this attribute set does not support the &lt;code&gt;addAll(AttributeSet)&lt;/code&gt; method</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; この属性セットが &lt;code&gt;addAll(AttributeSet)&lt;/code&gt; メソッドをサポートしていない場合</target>
        </trans-unit>
        <trans-unit id="9fa9a286b3eeaa674ae4bc5e8a9c3ee47f07977d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; - if this attribute set does not support the &lt;code&gt;clear()&lt;/code&gt; operation</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; この属性セットが &lt;code&gt;clear()&lt;/code&gt; 操作をサポートしていない場合</target>
        </trans-unit>
        <trans-unit id="e841bd6779fcd0227846007fd0b45444e7e7105c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; - if this attribute set does not support the &lt;code&gt;remove()&lt;/code&gt; operation</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unmodifiablesetexception&quot;&gt;UnmodifiableSetException&lt;/a&gt;&lt;/code&gt; この属性セットが &lt;code&gt;remove()&lt;/code&gt; 操作をサポートしていない場合</target>
        </trans-unit>
        <trans-unit id="1c5b10b8bb5d9fe3a8dd8b91e29125bf513ebf60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unrecoverableentryexception&quot;&gt;UnrecoverableEntryException&lt;/a&gt;&lt;/code&gt; - if the specified &lt;code&gt;protParam&lt;/code&gt; were insufficient or invalid</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unrecoverableentryexception&quot;&gt;UnrecoverableEntryException&lt;/a&gt;&lt;/code&gt; -指定された &lt;code&gt;protParam&lt;/code&gt; が不十分または無効な場合</target>
        </trans-unit>
        <trans-unit id="d232271c51083f081caf3eaff7c1177aa66ec67f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unrecoverablekeyexception&quot;&gt;UnrecoverableKeyException&lt;/a&gt;&lt;/code&gt; - if the entry is a &lt;code&gt;PrivateKeyEntry&lt;/code&gt; or &lt;code&gt;SecretKeyEntry&lt;/code&gt; and the specified &lt;code&gt;protParam&lt;/code&gt; does not contain the information needed to recover the key (e.g. wrong password)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unrecoverablekeyexception&quot;&gt;UnrecoverableKeyException&lt;/a&gt;&lt;/code&gt; -エントリが &lt;code&gt;PrivateKeyEntry&lt;/code&gt; または &lt;code&gt;SecretKeyEntry&lt;/code&gt; であり、指定された &lt;code&gt;protParam&lt;/code&gt; にキーの回復に必要な情報が含まれていない場合（例：間違ったパスワード）</target>
        </trans-unit>
        <trans-unit id="17b541e86115c83cb6b4ef4908a212c5bc48de50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unrecoverablekeyexception&quot;&gt;UnrecoverableKeyException&lt;/a&gt;&lt;/code&gt; - if the key cannot be recovered (e.g., the given password is wrong).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unrecoverablekeyexception&quot;&gt;UnrecoverableKeyException&lt;/a&gt;&lt;/code&gt; -キーを回復できない場合（たとえば、指定されたパスワードが間違っている場合）。</target>
        </trans-unit>
        <trans-unit id="8855cd4b9da12b7604b90f88343aae29aeef1e59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unresolvedaddressexception&quot;&gt;UnresolvedAddressException&lt;/a&gt;&lt;/code&gt; - If the given remote address is not fully resolved</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unresolvedaddressexception&quot;&gt;UnresolvedAddressException&lt;/a&gt;&lt;/code&gt; -指定されたリモートアドレスが完全に解決されていない場合</target>
        </trans-unit>
        <trans-unit id="3f9236f507a68bc51cd576572ae382dfa98c1e60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsatisfiedlinkerror&quot;&gt;UnsatisfiedLinkError&lt;/a&gt;&lt;/code&gt; - if either the filename is not an absolute path name, the native library is not statically linked with the VM, or the library cannot be mapped to a native library image by the host system.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsatisfiedlinkerror&quot;&gt;UnsatisfiedLinkError&lt;/a&gt;&lt;/code&gt; -ファイル名が絶対パス名でない場合、ネイティブライブラリはVMと静的にリンクされていないか、ホストシステムがライブラリをネイティブライブラリイメージにマップできません。</target>
        </trans-unit>
        <trans-unit id="ab115b29ff45451a016220f48b2ff9302dbb2a91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsatisfiedlinkerror&quot;&gt;UnsatisfiedLinkError&lt;/a&gt;&lt;/code&gt; - if either the libname argument contains a file path, the native library is not statically linked with the VM, or the library cannot be mapped to a native library image by the host system.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsatisfiedlinkerror&quot;&gt;UnsatisfiedLinkError&lt;/a&gt;&lt;/code&gt; -libname引数にファイルパスが含まれている場合、ネイティブライブラリがVMに静的にリンクされていないか、ホストシステムがライブラリをネイティブライブラリイメージにマップできません。</target>
        </trans-unit>
        <trans-unit id="fca2a784a79efea9e6dbc6af56f664205c0166bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedaddresstypeexception&quot;&gt;UnsupportedAddressTypeException&lt;/a&gt;&lt;/code&gt; - If the type of the given address is not supported</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedaddresstypeexception&quot;&gt;UnsupportedAddressTypeException&lt;/a&gt;&lt;/code&gt; -指定されたアドレスのタイプがサポートされていない場合</target>
        </trans-unit>
        <trans-unit id="68ff861f7f3b844bbf4122b151a1f37da487a171" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedaddresstypeexception&quot;&gt;UnsupportedAddressTypeException&lt;/a&gt;&lt;/code&gt; - If the type of the given remote address is not supported</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedaddresstypeexception&quot;&gt;UnsupportedAddressTypeException&lt;/a&gt;&lt;/code&gt; -指定されたリモートアドレスのタイプがサポートされていない場合</target>
        </trans-unit>
        <trans-unit id="4453fd437397597ce0963cddf645f8041be93020" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedaudiofileexception&quot;&gt;UnsupportedAudioFileException&lt;/a&gt;&lt;/code&gt; - if the &lt;code&gt;File&lt;/code&gt; does not point to valid audio file data recognized by the system</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedaudiofileexception&quot;&gt;UnsupportedAudioFileException&lt;/a&gt;&lt;/code&gt; - &lt;code&gt;File&lt;/code&gt; がシステムによって認識された有効なオーディオファイルデータを指していない場合</target>
        </trans-unit>
        <trans-unit id="63273f6296818999c905d163b5a18d20482b49c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedaudiofileexception&quot;&gt;UnsupportedAudioFileException&lt;/a&gt;&lt;/code&gt; - if the &lt;code&gt;URL&lt;/code&gt; does not point to valid audio file data recognized by the system</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedaudiofileexception&quot;&gt;UnsupportedAudioFileException&lt;/a&gt;&lt;/code&gt; - &lt;code&gt;URL&lt;/code&gt; がシステムによって認識された有効なオーディオファイルデータを指していない場合</target>
        </trans-unit>
        <trans-unit id="51d5b70d0acc6d24de105ea67ece92e8ebb2c055" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedaudiofileexception&quot;&gt;UnsupportedAudioFileException&lt;/a&gt;&lt;/code&gt; - if the URL does not point to valid audio file data recognized by the system</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedaudiofileexception&quot;&gt;UnsupportedAudioFileException&lt;/a&gt;&lt;/code&gt; -URLがシステムによって認識された有効なオーディオファイルデータを指していない場合</target>
        </trans-unit>
        <trans-unit id="47867bac1d29115adf5a41c5ccfa432731f93293" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedaudiofileexception&quot;&gt;UnsupportedAudioFileException&lt;/a&gt;&lt;/code&gt; - if the stream does not point to valid audio file data recognized by the system</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedaudiofileexception&quot;&gt;UnsupportedAudioFileException&lt;/a&gt;&lt;/code&gt; -ストリームがシステムによって認識された有効なオーディオファイルデータを指していない場合</target>
        </trans-unit>
        <trans-unit id="ff6d370e04c700bf0b423f929f9393f923d6878f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedcallbackexception&quot;&gt;UnsupportedCallbackException&lt;/a&gt;&lt;/code&gt; - if the implementation of this method does not support one or more of the Callbacks specified in the &lt;code&gt;callbacks&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedcallbackexception&quot;&gt;UnsupportedCallbackException&lt;/a&gt;&lt;/code&gt; -このメソッドの実装が、 &lt;code&gt;callbacks&lt;/code&gt; パラメーターで指定された1つ以上のコールバックをサポートしていない場合。</target>
        </trans-unit>
        <trans-unit id="08ad52dffa60478e9dbf598f07894508566ed5c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedcharsetexception&quot;&gt;UnsupportedCharsetException&lt;/a&gt;&lt;/code&gt; - If no support for the named charset is available in this instance of the Java virtual machine</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedcharsetexception&quot;&gt;UnsupportedCharsetException&lt;/a&gt;&lt;/code&gt; -指定された文字セットのサポートがJava仮想マシンのこのインスタンスで使用できない場合</target>
        </trans-unit>
        <trans-unit id="0e95c9fce41cb51532f013bd4ff66b35bf0aac07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedencodingexception&quot;&gt;UnsupportedEncodingException&lt;/a&gt;&lt;/code&gt; - If the named charset is not supported</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedencodingexception&quot;&gt;UnsupportedEncodingException&lt;/a&gt;&lt;/code&gt; -指定された文字セットがサポートされていない場合</target>
        </trans-unit>
        <trans-unit id="30eac49a6cbe1fba715a665f0c62a82f2d084daa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedencodingexception&quot;&gt;UnsupportedEncodingException&lt;/a&gt;&lt;/code&gt; - If the named encoding is not supported</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedencodingexception&quot;&gt;UnsupportedEncodingException&lt;/a&gt;&lt;/code&gt; -指定されたエンコーディングがサポートされていない場合</target>
        </trans-unit>
        <trans-unit id="428cb37dd8f52eb9361c9b8ace75ca50ebf3620d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedflavorexception&quot;&gt;UnsupportedFlavorException&lt;/a&gt;&lt;/code&gt; - if the &lt;code&gt;Transferable&lt;/code&gt; does not support this flavor</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedflavorexception&quot;&gt;UnsupportedFlavorException&lt;/a&gt;&lt;/code&gt; - &lt;code&gt;Transferable&lt;/code&gt; がこのフレーバーをサポートしていない場合</target>
        </trans-unit>
        <trans-unit id="29f125451b567cb154e49e0381a53a083907c71d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedflavorexception&quot;&gt;UnsupportedFlavorException&lt;/a&gt;&lt;/code&gt; - if the requested &lt;code&gt;DataFlavor&lt;/code&gt; is not available</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedflavorexception&quot;&gt;UnsupportedFlavorException&lt;/a&gt;&lt;/code&gt; -要求された &lt;code&gt;DataFlavor&lt;/code&gt; が利用できない場合</target>
        </trans-unit>
        <trans-unit id="062b947c01917d2644dcf08b6db67b2877e1c62a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedflavorexception&quot;&gt;UnsupportedFlavorException&lt;/a&gt;&lt;/code&gt; - if the requested data flavor is not equivalent to either &lt;code&gt;DataFlavor.stringFlavor&lt;/code&gt; or &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedflavorexception&quot;&gt;UnsupportedFlavorException&lt;/a&gt;&lt;/code&gt; -要求されたデータフレーバーが &lt;code&gt;DataFlavor.stringFlavor&lt;/code&gt; または &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt; のいずれとも同等でない場合</target>
        </trans-unit>
        <trans-unit id="fc4f014d5eb99f041fa5e01e48dc742ec3196a57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedflavorexception&quot;&gt;UnsupportedFlavorException&lt;/a&gt;&lt;/code&gt; - if the requested data flavor is not supported</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedflavorexception&quot;&gt;UnsupportedFlavorException&lt;/a&gt;&lt;/code&gt; -要求されたデータフレーバーがサポートされていない場合</target>
        </trans-unit>
        <trans-unit id="a5ae0e8eed045489a79e34f533e2e2ca37b6b5f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedlookandfeelexception&quot;&gt;UnsupportedLookAndFeelException&lt;/a&gt;&lt;/code&gt; - if &lt;code&gt;lnf.isSupportedLookAndFeel()&lt;/code&gt; is false</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedlookandfeelexception&quot;&gt;UnsupportedLookAndFeelException&lt;/a&gt;&lt;/code&gt; - &lt;code&gt;lnf.isSupportedLookAndFeel()&lt;/code&gt; がfalseの場合</target>
        </trans-unit>
        <trans-unit id="466261e32f12af19a4040c643e5ca98371dde915" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedlookandfeelexception&quot;&gt;UnsupportedLookAndFeelException&lt;/a&gt;&lt;/code&gt; - if &lt;code&gt;newLookAndFeel&lt;/code&gt; is &lt;code&gt;non-null&lt;/code&gt; and &lt;code&gt;newLookAndFeel.isSupportedLookAndFeel()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedlookandfeelexception&quot;&gt;UnsupportedLookAndFeelException&lt;/a&gt;&lt;/code&gt; - &lt;code&gt;newLookAndFeel&lt;/code&gt; が &lt;code&gt;non-null&lt;/code&gt; 、 &lt;code&gt;newLookAndFeel.isSupportedLookAndFeel()&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; を返す場合</target>
        </trans-unit>
        <trans-unit id="f2c84353e91dece50a508013aca3f5c067c7506a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedlookandfeelexception&quot;&gt;UnsupportedLookAndFeelException&lt;/a&gt;&lt;/code&gt; - if the built-in Java &lt;code&gt;L&amp;amp;F&lt;/code&gt; is not found for the given name or it is not supported by the underlying platform</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedlookandfeelexception&quot;&gt;UnsupportedLookAndFeelException&lt;/a&gt;&lt;/code&gt; -組み込みのJavaL &lt;code&gt;L&amp;amp;F&lt;/code&gt; が指定された名前で見つからない場合、または基盤となるプラットフォームでサポートされていない場合</target>
        </trans-unit>
        <trans-unit id="19841d37a5d30117b5734f1b1126a8abec1838c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;&lt;/code&gt; - If the operating system does not support the creation of processes</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;&lt;/code&gt; -オペレーティングシステムがプロセスの作成をサポートしていない場合</target>
        </trans-unit>
        <trans-unit id="1254af1e44252a07ee90bcb36355a1315cf0a729" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;&lt;/code&gt; - If the operating system does not support the creation of processes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;&lt;/code&gt; -オペレーティングシステムがプロセスの作成をサポートしていない場合。</target>
        </trans-unit>
        <trans-unit id="b06559ea3046b4b195e6572fed8e295da3405b82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;&lt;/code&gt; - if the Process implementation does not support this operation</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;&lt;/code&gt; -プロセス実装がこの操作をサポートしていない場合</target>
        </trans-unit>
        <trans-unit id="acd12f582e8ef1862642524938c836d90299b0ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;&lt;/code&gt; - if the implementation does not support this operation</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;&lt;/code&gt; -実装がこの操作をサポートしていない場合</target>
        </trans-unit>
        <trans-unit id="1a62cfd72c7ee85796d52e01d390f1179a2a6a46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;&lt;/code&gt; - if this &lt;code&gt;StackWalker&lt;/code&gt; is not configured with &lt;a href=&quot;stackwalker.option#RETAIN_CLASS_REFERENCE&quot;&gt;&lt;code&gt;Option.RETAIN_CLASS_REFERENCE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;&lt;/code&gt; -この場合 &lt;code&gt;StackWalker&lt;/code&gt; はで構成されていません&lt;a href=&quot;stackwalker.option#RETAIN_CLASS_REFERENCE&quot;&gt; &lt;code&gt;Option.RETAIN_CLASS_REFERENCE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="52c1eb9f5483ea4202aade4b460693674e91f588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;UnsupportedTemporalTypeException&lt;/a&gt;&lt;/code&gt; - if the &lt;code&gt;unit&lt;/code&gt; is not supported</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;UnsupportedTemporalTypeException&lt;/a&gt;&lt;/code&gt; - &lt;code&gt;unit&lt;/code&gt; がサポートされていない場合</target>
        </trans-unit>
        <trans-unit id="45cb6d2a7c854b05206161ad2643285b1bbabf4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;UnsupportedTemporalTypeException&lt;/a&gt;&lt;/code&gt; - if the field is not supported</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;UnsupportedTemporalTypeException&lt;/a&gt;&lt;/code&gt; -フィールドがサポートされていない場合</target>
        </trans-unit>
        <trans-unit id="a9964ee1264154122d9f2b22521920c8621af1c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;UnsupportedTemporalTypeException&lt;/a&gt;&lt;/code&gt; - if the field is not supported by the temporal</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;UnsupportedTemporalTypeException&lt;/a&gt;&lt;/code&gt; -フィールドがテンポラルでサポートされていない場合</target>
        </trans-unit>
        <trans-unit id="ee0e06366e25650273e0716ba3f397a7083ae1e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;UnsupportedTemporalTypeException&lt;/a&gt;&lt;/code&gt; - if the field is not supported or the range of values exceeds an &lt;code&gt;int&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;UnsupportedTemporalTypeException&lt;/a&gt;&lt;/code&gt; -フィールドがサポートされていない場合、または値の範囲が &lt;code&gt;int&lt;/code&gt; を超えている場合</target>
        </trans-unit>
        <trans-unit id="c3a6cb487267053bc984ee14b1a2ac634e12672a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;UnsupportedTemporalTypeException&lt;/a&gt;&lt;/code&gt; - if the unit is not supported</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;UnsupportedTemporalTypeException&lt;/a&gt;&lt;/code&gt; -ユニットがサポートされていない場合</target>
        </trans-unit>
        <trans-unit id="f559cfb7df8297866ace1a34e85b8a6923d9374e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;UnsupportedTemporalTypeException&lt;/a&gt;&lt;/code&gt; - if the unit is not supported by the temporal</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;UnsupportedTemporalTypeException&lt;/a&gt;&lt;/code&gt; -ユニットが一時的なものでサポートされていない場合</target>
        </trans-unit>
        <trans-unit id="908919c97b40f790343c36b49ecef5ef3982b14a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;urireferenceexception&quot;&gt;URIReferenceException&lt;/a&gt;&lt;/code&gt; - if an exception occurs while dereferencing the specified &lt;code&gt;uriReference&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;urireferenceexception&quot;&gt;URIReferenceException&lt;/a&gt;&lt;/code&gt; -指定された &lt;code&gt;uriReference&lt;/code&gt; の逆参照中に例外が発生した場合</target>
        </trans-unit>
        <trans-unit id="9ffe125277be1c66000f883341a7bcd7527f59db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;urisyntaxexception&quot;&gt;URISyntaxException&lt;/a&gt;&lt;/code&gt; - If both a scheme and a path are given but the path is relative, if the URI string constructed from the given components violates RFC 2396, or if the authority component of the string is present but cannot be parsed as a server-based authority</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;urisyntaxexception&quot;&gt;URISyntaxException&lt;/a&gt;&lt;/code&gt; -スキームとパスの両方が指定されているが、パスが相対的である場合、指定されたコンポーネントから構築されたURI文字列がRFC 2396に違反している場合、または文字列の権限コンポーネントが存在するがサーバーベースの権限として解析できない場合</target>
        </trans-unit>
        <trans-unit id="3e0706e028e57fa4ddb1b3220d4cf6c62c9c175c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;urisyntaxexception&quot;&gt;URISyntaxException&lt;/a&gt;&lt;/code&gt; - If the URI string constructed from the given components violates RFC 2396</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;urisyntaxexception&quot;&gt;URISyntaxException&lt;/a&gt;&lt;/code&gt; -指定されたコンポーネントから構築されたURI文字列がRFC 2396に違反している場合</target>
        </trans-unit>
        <trans-unit id="80cc9a1d8b5e0b0eb3ebe3d7b059622629419a1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;urisyntaxexception&quot;&gt;URISyntaxException&lt;/a&gt;&lt;/code&gt; - If the authority component of this URI is defined but cannot be parsed as a server-based authority according to RFC 2396</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;urisyntaxexception&quot;&gt;URISyntaxException&lt;/a&gt;&lt;/code&gt; -このURIの機関コンポーネントが定義されているが、RFC 2396に従ってサーバーベースの機関として解析できない場合</target>
        </trans-unit>
        <trans-unit id="a6b0694b9310fddfd4f5e138840ace53082e0b98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;urisyntaxexception&quot;&gt;URISyntaxException&lt;/a&gt;&lt;/code&gt; - If the given string violates RFC 2396, as augmented by the above deviations</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;urisyntaxexception&quot;&gt;URISyntaxException&lt;/a&gt;&lt;/code&gt; -与えられた文字列がRFC 2396に違反している場合（上記の逸脱により増大）</target>
        </trans-unit>
        <trans-unit id="83c7c1d6a65ae8c3cd003837668e9be82160ce97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;urisyntaxexception&quot;&gt;URISyntaxException&lt;/a&gt;&lt;/code&gt; - if this URL is not formatted strictly according to to RFC2396 and cannot be converted to a URI.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;urisyntaxexception&quot;&gt;URISyntaxException&lt;/a&gt;&lt;/code&gt; -このURLがRFC2396に厳密に従ってフォーマットされておらず、URIに変換できない場合。</target>
        </trans-unit>
        <trans-unit id="3a6221508cd9b87132605ea0ec7a4eec62d1c4a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;urlconnection#getHeaderField(int)&quot;&gt;getHeaderField&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;urlconnection#getHeaderField(int)&quot;&gt;getHeaderField&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt;&lt;/code&gt; のgetHeaderField</target>
        </trans-unit>
        <trans-unit id="ebae8fa88830002f0520e72473a736d910056e86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;urlconnection#getHeaderField-int-&quot;&gt;getHeaderField&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;urlconnection#getHeaderField-int-&quot;&gt;getHeaderField&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt;&lt;/code&gt; 内の getHeaderField</target>
        </trans-unit>
        <trans-unit id="6df369ff0f087b2f58d7a33e316ea8de5f25e01b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;urlconnection#getHeaderFieldDate-java.lang.String-long-&quot;&gt;getHeaderFieldDate&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;urlconnection#getHeaderFieldDate-java.lang.String-long-&quot;&gt;getHeaderFieldDate&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt;&lt;/code&gt; 内の getHeaderFieldDate</target>
        </trans-unit>
        <trans-unit id="17b2a129d949315aa101a2c977611b72113b39fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;urlconnection#getHeaderFieldKey(int)&quot;&gt;getHeaderFieldKey&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;urlconnection#getHeaderFieldKey(int)&quot;&gt;getHeaderFieldKey&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt;&lt;/code&gt; のgetHeaderFieldKey</target>
        </trans-unit>
        <trans-unit id="96cea82918a7f9f9e0ca4cea0d0dca17aea162b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;urlconnection#getHeaderFieldKey-int-&quot;&gt;getHeaderFieldKey&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;urlconnection#getHeaderFieldKey-int-&quot;&gt;getHeaderFieldKey&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt;&lt;/code&gt; 内の getHeaderFieldKey</target>
        </trans-unit>
        <trans-unit id="4ea4d0754dc085d2aa0ccb3ad2700446a05c088b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;urlconnection#getPermission()&quot;&gt;getPermission&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;urlconnection#getPermission()&quot;&gt;getPermission&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt;&lt;/code&gt; のgetPermission</target>
        </trans-unit>
        <trans-unit id="55dacadc46c674d77ad7d6e8055d15b3a5f9a53b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;urlconnection#getPermission--&quot;&gt;getPermission&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;urlconnection#getPermission--&quot;&gt;getPermission&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;urlconnection&quot;&gt;URLConnection&lt;/a&gt;&lt;/code&gt; 内の getPermission</target>
        </trans-unit>
        <trans-unit id="de31b695e1e2412ba35008ac9ae7df8cbe0a9369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;userprincipalnotfoundexception&quot;&gt;UserPrincipalNotFoundException&lt;/a&gt;&lt;/code&gt; - the principal does not exist</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;userprincipalnotfoundexception&quot;&gt;UserPrincipalNotFoundException&lt;/a&gt;&lt;/code&gt; -プリンシパルが存在しない</target>
        </trans-unit>
        <trans-unit id="093ca1b6c362508260b239df6d15e2167c54a0d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;userprincipalnotfoundexception&quot;&gt;UserPrincipalNotFoundException&lt;/a&gt;&lt;/code&gt; - the principal does not exist or is not a group</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;userprincipalnotfoundexception&quot;&gt;UserPrincipalNotFoundException&lt;/a&gt;&lt;/code&gt; -プリンシパルが存在しないか、グループではありません</target>
        </trans-unit>
        <trans-unit id="9777062ddeeb82da57b5811a1c062409cc569c3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;utfdataformatexception&quot;&gt;UTFDataFormatException&lt;/a&gt;&lt;/code&gt; - if read bytes do not represent a valid modified UTF-8 encoding of a string</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;utfdataformatexception&quot;&gt;UTFDataFormatException&lt;/a&gt;&lt;/code&gt; -読み込まれたバイトが文字列の有効な変更済みUTF-8エンコーディングを表していない場合</target>
        </trans-unit>
        <trans-unit id="8178bae311ab71a7e673576443cd29dd5c373602" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;utfdataformatexception&quot;&gt;UTFDataFormatException&lt;/a&gt;&lt;/code&gt; - if the bytes do not represent a valid modified UTF-8 encoding of a Unicode string.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;utfdataformatexception&quot;&gt;UTFDataFormatException&lt;/a&gt;&lt;/code&gt; -バイトがUnicode文字列の有効な変更済みUTF-8エンコーディングを表していない場合。</target>
        </trans-unit>
        <trans-unit id="e4d4678c0bc8de42b16ed202215a078c0d0bd1c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;utfdataformatexception&quot;&gt;UTFDataFormatException&lt;/a&gt;&lt;/code&gt; - if the bytes do not represent a valid modified UTF-8 encoding of a string.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;utfdataformatexception&quot;&gt;UTFDataFormatException&lt;/a&gt;&lt;/code&gt; -バイトが文字列の有効な変更済みUTF-8エンコーディングを表していない場合。</target>
        </trans-unit>
        <trans-unit id="bebb134e9718fdd81ce9767de9b2df0e95b28e10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;utfdataformatexception&quot;&gt;UTFDataFormatException&lt;/a&gt;&lt;/code&gt; - if the bytes do not represent valid modified UTF-8 encoding of a Unicode string.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;utfdataformatexception&quot;&gt;UTFDataFormatException&lt;/a&gt;&lt;/code&gt; -バイトがUnicode文字列の有効な変更済みUTF-8エンコーディングを表していない場合。</target>
        </trans-unit>
        <trans-unit id="432eb9652fbe7e7138d2324902cf2a02d132a780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;util/xmleventconsumer#add(javax.xml.stream.events.XMLEvent)&quot;&gt;add&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;util/xmleventconsumer&quot;&gt;XMLEventConsumer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;util/xmleventconsumer#add(javax.xml.stream.events.XMLEvent)&quot;&gt;add&lt;/a&gt;&lt;/code&gt; インターフェイス &lt;code&gt;&lt;a href=&quot;util/xmleventconsumer&quot;&gt;XMLEventConsumer&lt;/a&gt;&lt;/code&gt; を追加します</target>
        </trans-unit>
        <trans-unit id="e08eb4e79b5c1628ec5ed4e5ac9be04a1690c0f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;valueexp#apply(javax.management.ObjectName)&quot;&gt;apply&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;valueexp&quot;&gt;ValueExp&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;valueexp#apply(javax.management.ObjectName)&quot;&gt;apply&lt;/a&gt;&lt;/code&gt; インターフェース &lt;code&gt;&lt;a href=&quot;valueexp&quot;&gt;ValueExp&lt;/a&gt;&lt;/code&gt; に適用</target>
        </trans-unit>
        <trans-unit id="b5dbc93ff65efbd2ef617c868e369263ad0186b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;valueexp#apply-javax.management.ObjectName-&quot;&gt;apply&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;valueexp&quot;&gt;ValueExp&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;valueexp#apply-javax.management.ObjectName-&quot;&gt;apply&lt;/a&gt;&lt;/code&gt; インターフェース &lt;code&gt;&lt;a href=&quot;valueexp&quot;&gt;ValueExp&lt;/a&gt;&lt;/code&gt; に適用</target>
        </trans-unit>
        <trans-unit id="9c07b253f91dd816f71f1819f88a2c0b0205b210" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;valueexp#setMBeanServer(javax.management.MBeanServer)&quot;&gt;setMBeanServer&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;valueexp&quot;&gt;ValueExp&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;valueexp#setMBeanServer(javax.management.MBeanServer)&quot;&gt;setMBeanServer&lt;/a&gt;&lt;/code&gt; インタフェースで &lt;code&gt;&lt;a href=&quot;valueexp&quot;&gt;ValueExp&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5013eeaa079ad7cc327b7ff73c691962dd691ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;valueexp#setMBeanServer-javax.management.MBeanServer-&quot;&gt;setMBeanServer&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;valueexp&quot;&gt;ValueExp&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;valueexp#setMBeanServer-javax.management.MBeanServer-&quot;&gt;setMBeanServer&lt;/a&gt;&lt;/code&gt; インタフェースで &lt;code&gt;&lt;a href=&quot;valueexp&quot;&gt;ValueExp&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b5eceb5fe2304a5588908513be2f7b4c0c8ce02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;vetoablechangelistener&quot;&gt;VetoableChangeListener&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../../../java.base/java/util/eventlistener&quot;&gt;EventListener&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;vetoablechangelistener&quot;&gt;VetoableChangeListener&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../../../java.base/java/util/eventlistener&quot;&gt;EventListener&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c57f1bd2c1a1ededaaaddec2edf9c6bffc5526a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;vetoablechangelistener#vetoableChange(java.beans.PropertyChangeEvent)&quot;&gt;vetoableChange&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;vetoablechangelistener&quot;&gt;VetoableChangeListener&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;vetoablechangelistener#vetoableChange(java.beans.PropertyChangeEvent)&quot;&gt;vetoableChange&lt;/a&gt;&lt;/code&gt; インタフェースで &lt;code&gt;&lt;a href=&quot;vetoablechangelistener&quot;&gt;VetoableChangeListener&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6745072a0cdecff6f5cda504b4e30b913399157" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;vetoablechangelistener#vetoableChange-java.beans.PropertyChangeEvent-&quot;&gt;vetoableChange&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;vetoablechangelistener&quot;&gt;VetoableChangeListener&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;vetoablechangelistener#vetoableChange-java.beans.PropertyChangeEvent-&quot;&gt;vetoableChange&lt;/a&gt;&lt;/code&gt; インタフェースで &lt;code&gt;&lt;a href=&quot;vetoablechangelistener&quot;&gt;VetoableChangeListener&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c00bfd5c3e82c65034c7d81c735bedf38865f1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#breakView(int,int,float,float)&quot;&gt;breakView&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#breakView(int,int,float,float)&quot;&gt;breakView&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; breakView</target>
        </trans-unit>
        <trans-unit id="dbe68b0e3bd51134fac4621c6f650daa1e879ee3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#changedUpdate(javax.swing.event.DocumentEvent,java.awt.Shape,javax.swing.text.ViewFactory)&quot;&gt;changedUpdate&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#changedUpdate(javax.swing.event.DocumentEvent,java.awt.Shape,javax.swing.text.ViewFactory)&quot;&gt;changedUpdate&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; changedUpdate</target>
        </trans-unit>
        <trans-unit id="012400110b41de3e346ae4ca225e0792e13be920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#createFragment(int,int)&quot;&gt;createFragment&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#createFragment(int,int)&quot;&gt;createFragment&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; createFragment</target>
        </trans-unit>
        <trans-unit id="cefbec7f98c7912ebbfec6e8f3e986aae754c16f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#forwardUpdate(javax.swing.event.DocumentEvent.ElementChange,javax.swing.event.DocumentEvent,java.awt.Shape,javax.swing.text.ViewFactory)&quot;&gt;forwardUpdate&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#forwardUpdate(javax.swing.event.DocumentEvent.ElementChange,javax.swing.event.DocumentEvent,java.awt.Shape,javax.swing.text.ViewFactory)&quot;&gt;forwardUpdate&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; forwardUpdate</target>
        </trans-unit>
        <trans-unit id="f41a69b92870c35474d792a4d64f1a01b68aaece" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#getAlignment(int)&quot;&gt;getAlignment&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#getAlignment(int)&quot;&gt;getAlignment&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; getAlignment</target>
        </trans-unit>
        <trans-unit id="cebc32847f4380910a154d819f3e8e5df5755196" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#getBreakWeight(int,float,float)&quot;&gt;getBreakWeight&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#getBreakWeight(int,float,float)&quot;&gt;getBreakWeight&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; getBreakWeight</target>
        </trans-unit>
        <trans-unit id="56e36534bd75a78ce7c64f3cd812e44d37b162b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#getChildAllocation(int,java.awt.Shape)&quot;&gt;getChildAllocation&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#getChildAllocation(int,java.awt.Shape)&quot;&gt;getChildAllocation&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; getChildAllocation</target>
        </trans-unit>
        <trans-unit id="6e9493fb03b9d2e5c451669e482b33aa641b8352" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#getEndOffset()&quot;&gt;getEndOffset&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#getEndOffset()&quot;&gt;getEndOffset&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; getEndOffset</target>
        </trans-unit>
        <trans-unit id="6d82b17e1673d3718b5182986664c2f3ed1778f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#getMaximumSpan(int)&quot;&gt;getMaximumSpan&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#getMaximumSpan(int)&quot;&gt;getMaximumSpan&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; getMaximumSpan</target>
        </trans-unit>
        <trans-unit id="bb0f7c7c007e5396c44680baa686c947a7e5fa17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#getMinimumSpan(int)&quot;&gt;getMinimumSpan&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#getMinimumSpan(int)&quot;&gt;getMinimumSpan&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; getMinimumSpan</target>
        </trans-unit>
        <trans-unit id="48e54d2048a145b919baa029fee5fc5bec27b794" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#getNextVisualPositionFrom(int,javax.swing.text.Position.Bias,java.awt.Shape,int,javax.swing.text.Position.Bias%5B%5D)&quot;&gt;getNextVisualPositionFrom&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#getNextVisualPositionFrom(int,javax.swing.text.Position.Bias,java.awt.Shape,int,javax.swing.text.Position.Bias%5B%5D)&quot;&gt;getNextVisualPositionFrom&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; getNextVisualPositionFrom</target>
        </trans-unit>
        <trans-unit id="776f2c5d9aa39c31a78aff83ae15c055abf32b08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#getPreferredSpan(int)&quot;&gt;getPreferredSpan&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#getPreferredSpan(int)&quot;&gt;getPreferredSpan&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; getPreferredSpan</target>
        </trans-unit>
        <trans-unit id="41fe4e8f4e5b5064d828a25e65ad696b62b17221" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#getResizeWeight(int)&quot;&gt;getResizeWeight&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#getResizeWeight(int)&quot;&gt;getResizeWeight&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; getResizeWeight</target>
        </trans-unit>
        <trans-unit id="0d327620f89b788ab53c601df727478d3216100b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#getStartOffset()&quot;&gt;getStartOffset&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#getStartOffset()&quot;&gt;getStartOffset&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; getStartOffset</target>
        </trans-unit>
        <trans-unit id="1cb0b0bee9e0e8d9a227fc52478b64c5cc4768e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#getView(int)&quot;&gt;getView&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#getView(int)&quot;&gt;getView&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; getView</target>
        </trans-unit>
        <trans-unit id="2b23a611af6111c6ccf5e0d7a52dbeb05d5c0e84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#getViewCount()&quot;&gt;getViewCount&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#getViewCount()&quot;&gt;getViewCount&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; のgetViewCount</target>
        </trans-unit>
        <trans-unit id="cfffd1ffba31f69fb46bfffa64bb96e0f0e730fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#getViewIndex(int,javax.swing.text.Position.Bias)&quot;&gt;getViewIndex&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#getViewIndex(int,javax.swing.text.Position.Bias)&quot;&gt;getViewIndex&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; のgetViewIndex</target>
        </trans-unit>
        <trans-unit id="30f3537be9ef4c9501aecc4f191518982855dd4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#insertUpdate(javax.swing.event.DocumentEvent,java.awt.Shape,javax.swing.text.ViewFactory)&quot;&gt;insertUpdate&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#insertUpdate(javax.swing.event.DocumentEvent,java.awt.Shape,javax.swing.text.ViewFactory)&quot;&gt;insertUpdate&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; insertUpdate</target>
        </trans-unit>
        <trans-unit id="79fb772f519cc1f9d613b88ad73331b9cf8121ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#modelToView(int,java.awt.Shape,javax.swing.text.Position.Bias)&quot;&gt;modelToView&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#modelToView(int,java.awt.Shape,javax.swing.text.Position.Bias)&quot;&gt;modelToView&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; modelToView</target>
        </trans-unit>
        <trans-unit id="575b0e32caab29b8ab152022397df264799c6b06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#modelToView(int,javax.swing.text.Position.Bias,int,javax.swing.text.Position.Bias,java.awt.Shape)&quot;&gt;modelToView&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#modelToView(int,javax.swing.text.Position.Bias,int,javax.swing.text.Position.Bias,java.awt.Shape)&quot;&gt;modelToView&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; modelToView</target>
        </trans-unit>
        <trans-unit id="712a42cc750f20b4406b211ccc141a3efcef0185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#paint(java.awt.Graphics,java.awt.Shape)&quot;&gt;paint&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#paint(java.awt.Graphics,java.awt.Shape)&quot;&gt;paint&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; ペイント</target>
        </trans-unit>
        <trans-unit id="6ba117b4c931041e8adf18df8e9a527d87c7932e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#preferenceChanged(javax.swing.text.View,boolean,boolean)&quot;&gt;preferenceChanged&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#preferenceChanged(javax.swing.text.View,boolean,boolean)&quot;&gt;preferenceChanged&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; preferenceChanged</target>
        </trans-unit>
        <trans-unit id="0b5678f8dddb77573ed9685a287ed91804a34a9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#removeUpdate(javax.swing.event.DocumentEvent,java.awt.Shape,javax.swing.text.ViewFactory)&quot;&gt;removeUpdate&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#removeUpdate(javax.swing.event.DocumentEvent,java.awt.Shape,javax.swing.text.ViewFactory)&quot;&gt;removeUpdate&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; removeUpdate</target>
        </trans-unit>
        <trans-unit id="a785a20d6daa368bcaaad049940058971c7b82fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#replace(int,int,javax.swing.text.View%5B%5D)&quot;&gt;replace&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#replace(int,int,javax.swing.text.View%5B%5D)&quot;&gt;replace&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt; 置換</target>
        </trans-unit>
        <trans-unit id="eb6974fa1df165a1eca42e8bca78163c4fc5d19e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#setParent(javax.swing.text.View)&quot;&gt;setParent&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#setParent(javax.swing.text.View)&quot;&gt;setParent&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da5d3ec0e875b0f8f842f94520080d267e44feb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#setSize(float,float)&quot;&gt;setSize&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#setSize(float,float)&quot;&gt;setSize&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="02075d2ef5b491e01a6da8496c2416551438cd0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#updateChildren(javax.swing.event.DocumentEvent.ElementChange,javax.swing.event.DocumentEvent,javax.swing.text.ViewFactory)&quot;&gt;updateChildren&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#updateChildren(javax.swing.event.DocumentEvent.ElementChange,javax.swing.event.DocumentEvent,javax.swing.text.ViewFactory)&quot;&gt;updateChildren&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26aac7be5de27768cfe23bbd4835640fa24f4081" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#updateLayout(javax.swing.event.DocumentEvent.ElementChange,javax.swing.event.DocumentEvent,java.awt.Shape)&quot;&gt;updateLayout&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#updateLayout(javax.swing.event.DocumentEvent.ElementChange,javax.swing.event.DocumentEvent,java.awt.Shape)&quot;&gt;updateLayout&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e0fa1a210311735bfbf1906f3efd76f8f796baef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;view#viewToModel(float,float,java.awt.Shape,javax.swing.text.Position.Bias%5B%5D)&quot;&gt;viewToModel&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;view#viewToModel(float,float,java.awt.Shape,javax.swing.text.Position.Bias%5B%5D)&quot;&gt;viewToModel&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;view&quot;&gt;View&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c717a1431e4d8d164bd8ff58afb2c67fc3cc6dde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;watchable#register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind%5B%5D,java.nio.file.WatchEvent.Modifier...)&quot;&gt;register&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;watchable&quot;&gt;Watchable&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;watchable#register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind%5B%5D,java.nio.file.WatchEvent.Modifier...)&quot;&gt;register&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;watchable&quot;&gt;Watchable&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b67e2fcf3954a7750693850f9042ca84c7441f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;watchable#register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind...)&quot;&gt;register&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;watchable&quot;&gt;Watchable&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;watchable#register(java.nio.file.WatchService,java.nio.file.WatchEvent.Kind...)&quot;&gt;register&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;watchable&quot;&gt;Watchable&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71b3483fad0ced561822ccf9fa2b0728a034ebae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;watchable#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind...-&quot;&gt;register&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;watchable&quot;&gt;Watchable&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;watchable#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind...-&quot;&gt;register&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;watchable&quot;&gt;Watchable&lt;/a&gt;&lt;/code&gt; インターフェースに登録</target>
        </trans-unit>
        <trans-unit id="74ec06ed33ee7ff2785ce86d098ee8e9c0ae3077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;watchable#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-&quot;&gt;register&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;watchable&quot;&gt;Watchable&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;watchable#register-java.nio.file.WatchService-java.nio.file.WatchEvent.Kind:A-java.nio.file.WatchEvent.Modifier...-&quot;&gt;register&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;watchable&quot;&gt;Watchable&lt;/a&gt;&lt;/code&gt; インターフェースに登録</target>
        </trans-unit>
        <trans-unit id="a15ca1d44b1226d0bdbd4b9b9f9f64129079218c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;window#addNotify()&quot;&gt;addNotify&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;window&quot;&gt;Window&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;window#addNotify()&quot;&gt;addNotify&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;window&quot;&gt;Window&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b2c2452bc7090ac3a65d662f0c3bc12d67e9702" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;window#getAccessibleContext()&quot;&gt;getAccessibleContext&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;window&quot;&gt;Window&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;window#getAccessibleContext()&quot;&gt;getAccessibleContext&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;window&quot;&gt;Window&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2bf5b6df7b052cf782b6ab8bda17d6fce33bff76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;window#hide()&quot;&gt;hide&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;window&quot;&gt;Window&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;window#hide()&quot;&gt;hide&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;window&quot;&gt;Window&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8efe59ac73ab4c75a80251bb3e805848368767e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;window#setVisible(boolean)&quot;&gt;setVisible&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;window&quot;&gt;Window&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;window#setVisible(boolean)&quot;&gt;setVisible&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;window&quot;&gt;Window&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a3c03c10562094f08fd21a5c965c0f5f14b35b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;window#show()&quot;&gt;show&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;window&quot;&gt;Window&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;window#show()&quot;&gt;show&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;window&quot;&gt;Window&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="132851989fdfce6895fc8be8104a364790fd42ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;window#toBack()&quot;&gt;toBack&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;window&quot;&gt;Window&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;window#toBack()&quot;&gt;toBack&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;window&quot;&gt;Window&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c60e0b72cc5b673e08f459bc3afdfe943cf95776" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;window.accessibleawtwindow#getAccessibleRole()&quot;&gt;getAccessibleRole&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;window.accessibleawtwindow&quot;&gt;Window.AccessibleAWTWindow&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;window.accessibleawtwindow#getAccessibleRole()&quot;&gt;getAccessibleRole&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;window.accessibleawtwindow&quot;&gt;Window.AccessibleAWTWindow&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47e6d04954ca0ff97c39e8cf6b75ca537da25352" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;window.accessibleawtwindow#getAccessibleStateSet()&quot;&gt;getAccessibleStateSet&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;window.accessibleawtwindow&quot;&gt;Window.AccessibleAWTWindow&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;window.accessibleawtwindow#getAccessibleStateSet()&quot;&gt;getAccessibleStateSet&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;window.accessibleawtwindow&quot;&gt;Window.AccessibleAWTWindow&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3b6983ada83a3ccf651077a463fe372166506e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;windowfocuslistener&quot;&gt;WindowFocusListener&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;windowlistener&quot;&gt;WindowListener&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;windowstatelistener&quot;&gt;WindowStateListener&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../../../../java.base/java/util/eventlistener&quot;&gt;EventListener&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;windowfocuslistener&quot;&gt;WindowFocusListener&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;windowlistener&quot;&gt;WindowListener&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;windowstatelistener&quot;&gt;WindowStateListener&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../../../../java.base/java/util/eventlistener&quot;&gt;EventListener&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aaaa4290f3c43a6d8d8061d58e58f17f6baba0d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;windowfocuslistener#windowGainedFocus(java.awt.event.WindowEvent)&quot;&gt;windowGainedFocus&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowfocuslistener&quot;&gt;WindowFocusListener&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;windowfocuslistener#windowGainedFocus(java.awt.event.WindowEvent)&quot;&gt;windowGainedFocus&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowfocuslistener&quot;&gt;WindowFocusListener&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e79ad0788e5c3a14af3b8ed5450ca2a017299e57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;windowfocuslistener#windowLostFocus(java.awt.event.WindowEvent)&quot;&gt;windowLostFocus&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowfocuslistener&quot;&gt;WindowFocusListener&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;windowfocuslistener#windowLostFocus(java.awt.event.WindowEvent)&quot;&gt;windowLostFocus&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowfocuslistener&quot;&gt;WindowFocusListener&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6dfad620785686d3f3052498b6d1352d8e09a017" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;windowlistener#windowActivated(java.awt.event.WindowEvent)&quot;&gt;windowActivated&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowlistener&quot;&gt;WindowListener&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;windowlistener#windowActivated(java.awt.event.WindowEvent)&quot;&gt;windowActivated&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowlistener&quot;&gt;WindowListener&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="873cf5c34f51a092dfd9ef66a6584fb5d9e0640d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;windowlistener#windowClosed(java.awt.event.WindowEvent)&quot;&gt;windowClosed&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowlistener&quot;&gt;WindowListener&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;windowlistener#windowClosed(java.awt.event.WindowEvent)&quot;&gt;windowClosed&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowlistener&quot;&gt;WindowListener&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="74ae58798c6701733c55eb792b80ba447161cf29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;windowlistener#windowClosing(java.awt.event.WindowEvent)&quot;&gt;windowClosing&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowlistener&quot;&gt;WindowListener&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;windowlistener#windowClosing(java.awt.event.WindowEvent)&quot;&gt;windowClosing&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowlistener&quot;&gt;WindowListener&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d70ae77f2a4a68848a795c8c177ec8fb01cb699" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;windowlistener#windowDeactivated(java.awt.event.WindowEvent)&quot;&gt;windowDeactivated&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowlistener&quot;&gt;WindowListener&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;windowlistener#windowDeactivated(java.awt.event.WindowEvent)&quot;&gt;windowDeactivated&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowlistener&quot;&gt;WindowListener&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2fc51bf185107e6ee3265a8e4f2ed423c1f4a17f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;windowlistener#windowDeiconified(java.awt.event.WindowEvent)&quot;&gt;windowDeiconified&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowlistener&quot;&gt;WindowListener&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;windowlistener#windowDeiconified(java.awt.event.WindowEvent)&quot;&gt;windowDeiconified&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowlistener&quot;&gt;WindowListener&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fa53ab504e50369486759010366c7ab9800ee7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;windowlistener#windowIconified(java.awt.event.WindowEvent)&quot;&gt;windowIconified&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowlistener&quot;&gt;WindowListener&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;windowlistener#windowIconified(java.awt.event.WindowEvent)&quot;&gt;windowIconified&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowlistener&quot;&gt;WindowListener&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="951c6d31ee61cf36ad1279d9c6b44cde0cfc9693" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;windowlistener#windowOpened(java.awt.event.WindowEvent)&quot;&gt;windowOpened&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowlistener&quot;&gt;WindowListener&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;windowlistener#windowOpened(java.awt.event.WindowEvent)&quot;&gt;windowOpened&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowlistener&quot;&gt;WindowListener&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83ba41ec42cd027870b00643d37dee537dfaa3a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;windowstatelistener#windowStateChanged(java.awt.event.WindowEvent)&quot;&gt;windowStateChanged&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowstatelistener&quot;&gt;WindowStateListener&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;windowstatelistener#windowStateChanged(java.awt.event.WindowEvent)&quot;&gt;windowStateChanged&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;windowstatelistener&quot;&gt;WindowStateListener&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b1fbc2bb63c66076cc210b06d7936bcbe452683" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablebytechannel&quot;&gt;WritableByteChannel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablebytechannel&quot;&gt;WritableByteChannel&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8863a3483588519100bc26156c5db2efb2791449" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablebytechannel&quot;&gt;WritableByteChannel&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt;write&lt;/a&gt;&lt;/code&gt; インタフェースで &lt;code&gt;&lt;a href=&quot;writablebytechannel&quot;&gt;WritableByteChannel&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c28f4aaf62ba6b82a114210d4fc51f226a2e207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writablerenderedimage#addTileObserver(java.awt.image.TileObserver)&quot;&gt;addTileObserver&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablerenderedimage&quot;&gt;WritableRenderedImage&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writablerenderedimage#addTileObserver(java.awt.image.TileObserver)&quot;&gt;addTileObserver&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablerenderedimage&quot;&gt;WritableRenderedImage&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0ec3fd05393a6becaf5ec03cf0d637fe8820be6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writablerenderedimage#getWritableTile(int,int)&quot;&gt;getWritableTile&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablerenderedimage&quot;&gt;WritableRenderedImage&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writablerenderedimage#getWritableTile(int,int)&quot;&gt;getWritableTile&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablerenderedimage&quot;&gt;WritableRenderedImage&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d682f25e4f29e94d444db4daf58d4e3ec91c6326" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writablerenderedimage#getWritableTileIndices()&quot;&gt;getWritableTileIndices&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablerenderedimage&quot;&gt;WritableRenderedImage&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writablerenderedimage#getWritableTileIndices()&quot;&gt;getWritableTileIndices&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablerenderedimage&quot;&gt;WritableRenderedImage&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09ce545e0a8f36b0af87fb51388804719515c6f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writablerenderedimage#hasTileWriters()&quot;&gt;hasTileWriters&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablerenderedimage&quot;&gt;WritableRenderedImage&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writablerenderedimage#hasTileWriters()&quot;&gt;hasTileWriters&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablerenderedimage&quot;&gt;WritableRenderedImage&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60f7a70f8fdc4133b314536528a9a0cbc69eb0e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writablerenderedimage#isTileWritable(int,int)&quot;&gt;isTileWritable&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablerenderedimage&quot;&gt;WritableRenderedImage&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writablerenderedimage#isTileWritable(int,int)&quot;&gt;isTileWritable&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablerenderedimage&quot;&gt;WritableRenderedImage&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="242027435a1088d21b420fbadccd76c478ba470c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writablerenderedimage#releaseWritableTile(int,int)&quot;&gt;releaseWritableTile&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablerenderedimage&quot;&gt;WritableRenderedImage&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writablerenderedimage#releaseWritableTile(int,int)&quot;&gt;releaseWritableTile&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablerenderedimage&quot;&gt;WritableRenderedImage&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f22c74bf06bc10c283d01f967154de34a2bd7ea2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writablerenderedimage#removeTileObserver(java.awt.image.TileObserver)&quot;&gt;removeTileObserver&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablerenderedimage&quot;&gt;WritableRenderedImage&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writablerenderedimage#removeTileObserver(java.awt.image.TileObserver)&quot;&gt;removeTileObserver&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablerenderedimage&quot;&gt;WritableRenderedImage&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a01d876304c17d6c571af2223cf8e5c8361ffaf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writablerenderedimage#setData(java.awt.image.Raster)&quot;&gt;setData&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablerenderedimage&quot;&gt;WritableRenderedImage&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writablerenderedimage#setData(java.awt.image.Raster)&quot;&gt;setData&lt;/a&gt;&lt;/code&gt; in interface &lt;code&gt;&lt;a href=&quot;writablerenderedimage&quot;&gt;WritableRenderedImage&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c135fec1ea344a85629921fbb2be3753c8ea9180" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writependingexception&quot;&gt;WritePendingException&lt;/a&gt;&lt;/code&gt; - If a write operation is already in progress on this channel</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writependingexception&quot;&gt;WritePendingException&lt;/a&gt;&lt;/code&gt; -このチャネルで書き込み操作がすでに進行中の場合</target>
        </trans-unit>
        <trans-unit id="cdba451dcb7c6c084f6ff057aed01c7c9d727109" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writependingexception&quot;&gt;WritePendingException&lt;/a&gt;&lt;/code&gt; - If the channel does not allow more than one write to be outstanding and a previous write has not completed</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writependingexception&quot;&gt;WritePendingException&lt;/a&gt;&lt;/code&gt; -チャネルが複数の書き込みの未処理を許可せず、以前の書き込みが完了していない場合</target>
        </trans-unit>
        <trans-unit id="f31ab5565bf9ea3f065fa0e17aaf8efc4de8b298" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#append(char)&quot;&gt;append&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#append(char)&quot;&gt;append&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e973956b89c05f72a01a16b8933ea234e005285e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#append(java.lang.CharSequence)&quot;&gt;append&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#append(java.lang.CharSequence)&quot;&gt;append&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="278b65c7c28c09667785d216aa051ea082b574dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#append(java.lang.CharSequence,int,int)&quot;&gt;append&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#append(java.lang.CharSequence,int,int)&quot;&gt;append&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="97ecf8c821be8be938afe865b3ea750e6bb731d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#append-char-&quot;&gt;append&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#append-char-&quot;&gt;append&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt; に追加</target>
        </trans-unit>
        <trans-unit id="099382eef1e1f84ebee5d375b3252e739dd50473" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#append-java.lang.CharSequence-&quot;&gt;append&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#append-java.lang.CharSequence-&quot;&gt;append&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt; に追加</target>
        </trans-unit>
        <trans-unit id="3618d63d1474f0396db7583d44b67f7a0204b7c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#append-java.lang.CharSequence-int-int-&quot;&gt;append&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#append-java.lang.CharSequence-int-int-&quot;&gt;append&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt; に追加</target>
        </trans-unit>
        <trans-unit id="54533a7d26609f04607348679f35b434f7cb9ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#close()&quot;&gt;close&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#close()&quot;&gt;close&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6da91499200d0542ccce1336a39029cb79f0b07d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#close--&quot;&gt;close&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#close--&quot;&gt;close&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt; で閉じる</target>
        </trans-unit>
        <trans-unit id="ff36f5ddddde5f7029a097bfd585aa98d1268ee8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#flush()&quot;&gt;flush&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#flush()&quot;&gt;flush&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="059960c7972ca1ba6425eadbe49c209e07da7514" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#flush--&quot;&gt;flush&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#flush--&quot;&gt;flush&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt; のフラッシュ</target>
        </trans-unit>
        <trans-unit id="d2c82aee8896c8711c815ffef4f8a2634670557c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#write(char%5B%5D)&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#write(char%5B%5D)&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e95590442b3680667f977c5aea91bef1dfff7c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#write(char%5B%5D,int,int)&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#write(char%5B%5D,int,int)&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6eb277032dcf81e2d1bb49b5f6b5cefa875fc5d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#write(int)&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#write(int)&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9de4a83827f9fb3885a95c294aa0cff406520a52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#write(java.lang.String)&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#write(java.lang.String)&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="63f4f416df42433da8f6d791d94509efe7078efc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#write(java.lang.String,int,int)&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#write(java.lang.String,int,int)&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c8f0d7ee5f6bda12b06cd2c95ce775ff88acf09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#write-char:A-&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#write-char:A-&quot;&gt;write&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt; に書き込む</target>
        </trans-unit>
        <trans-unit id="1df22c4f031d722b4d4a697386535750557df5eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#write-char:A-int-int-&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#write-char:A-int-int-&quot;&gt;write&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt; に書き込む</target>
        </trans-unit>
        <trans-unit id="d186a20b8e4736049e4cfd052cce79e268499ec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#write-int-&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#write-int-&quot;&gt;write&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt; に書き込む</target>
        </trans-unit>
        <trans-unit id="c8bfc0eebb73d3edea846af5c90b120adac73063" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#write-java.lang.String-&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#write-java.lang.String-&quot;&gt;write&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt; に書き込む</target>
        </trans-unit>
        <trans-unit id="33d7391e576d93e401adc250a016b802420e2577" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;writer#write-java.lang.String-int-int-&quot;&gt;write&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;writer#write-java.lang.String-int-int-&quot;&gt;write&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;writer&quot;&gt;Writer&lt;/a&gt;&lt;/code&gt; に書き込む</target>
        </trans-unit>
        <trans-unit id="ec12425ec3b8acf452a0d5702febd2fcaf6cba2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; - if the access mode type does not match the caller's symbolic type descriptor.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; - if the access mode type does not match the caller's symbolic type descriptor.</target>
        </trans-unit>
        <trans-unit id="dd1861778f643b6f03c60cb2ddd2f1dedb5f8530" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; - if the access mode type is not compatible with the caller's symbolic type descriptor.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; - if the access mode type is not compatible with the caller's symbolic type descriptor.</target>
        </trans-unit>
        <trans-unit id="5d78f2c0a9f511e6e93a4c8ad0432dfbd89168ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; - if the conversion cannot be made</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; -変換できない場合</target>
        </trans-unit>
        <trans-unit id="72f64a5c6f4bf77056b6a6090fdba6ed973ebcd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; - if the handle's method type cannot be adjusted to take the given number of arguments, or if the handle's return type cannot be adjusted to the desired type</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; - if the handle's method type cannot be adjusted to take the given number of arguments, or if the handle's return type cannot be adjusted to the desired type</target>
        </trans-unit>
        <trans-unit id="4ac4d55e3c86bf11dac3f5ebe4dbfbb52d753ce3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; - if the hook cannot be invoked on the required arguments, or if the target returned by the hook is not of the given &lt;code&gt;targetType&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; -必要な引数でフックを呼び出すことができない場合、またはフックによって返されたターゲットが指定された &lt;code&gt;targetType&lt;/code&gt; でない場合</target>
        </trans-unit>
        <trans-unit id="3bb38e62a9e3379b4f17849294b430353db52c56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; - if the implied &lt;code&gt;asType&lt;/code&gt; call fails</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; -暗黙の &lt;code&gt;asType&lt;/code&gt; 呼び出しが失敗した場合</target>
        </trans-unit>
        <trans-unit id="6db6db1a8b254bdda08d2839b36dfea960909bb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; - if the proposed new target has a method type that differs from the previous target</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; -提案された新しいターゲットに、以前のターゲットとは異なるメソッドタイプがある場合</target>
        </trans-unit>
        <trans-unit id="3a771e1cd1c1aa04f7ba4e9f872ec787de60e695" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; - if the target cannot be converted to the type required by the requested interface</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; -ターゲットを、要求されたインターフェースが必要とするタイプに変換できない場合</target>
        </trans-unit>
        <trans-unit id="ce0d90f56cf9d0ce0c57fe829eec4b6ef1124f0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; - if the target's type cannot be adjusted to take the given number of &lt;code&gt;Object&lt;/code&gt; arguments</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; -ターゲットのタイプを調整して、指定された数の &lt;code&gt;Object&lt;/code&gt; 引数を取ることができない場合</target>
        </trans-unit>
        <trans-unit id="450b7ed0cbb075c96c9dc3ccc7407fdbdc770087" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; - if the target's type cannot be adjusted to the caller's symbolic type descriptor</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; -ターゲットのタイプを呼び出し元のシンボリックタイプ記述子に調整できない場合</target>
        </trans-unit>
        <trans-unit id="0001d46c32c0bb492659a1711de784d3907ba137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; - if the target's type is not identical with the caller's symbolic type descriptor</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;wrongmethodtypeexception&quot;&gt;WrongMethodTypeException&lt;/a&gt;&lt;/code&gt; -ターゲットのタイプが呼び出し元のシンボリックタイプ記述子と同一でない場合</target>
        </trans-unit>
        <trans-unit id="5fbaeb3c9d244b5a23b374796d02ac57cd936edd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;x509certificate&quot;&gt;X509Certificate&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;x509crl&quot;&gt;X509CRL&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;x509crlentry&quot;&gt;X509CRLEntry&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;x509certificate&quot;&gt;X509Certificate&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;x509crl&quot;&gt;X509CRL&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;x509crlentry&quot;&gt;X509CRLEntry&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96fb357438ff3f86c576e923b3cb21f93087bcd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred.</target>
        </trans-unit>
        <trans-unit id="16115470e7b40cfbdd6ca6225a841499825bf257" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred. Possible XAException values are XAER_RMERR, XAER_RMFAILED, XAER_NOTA, XAER_INVAL, XAER_PROTO, or XA_RB*.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred. Possible XAException values are XAER_RMERR, XAER_RMFAILED, XAER_NOTA, XAER_INVAL, XAER_PROTO, or XA_RB*.</target>
        </trans-unit>
        <trans-unit id="0ae609ef0f8b599d418d36de8b241756217ede65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred. Possible XAExceptions are XA_HEURHAZ, XA_HEURCOM, XA_HEURRB, XA_HEURMIX, XAER_RMERR, XAER_RMFAIL, XAER_NOTA, XAER_INVAL, or XAER_PROTO.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred. Possible XAExceptions are XA_HEURHAZ, XA_HEURCOM, XA_HEURRB, XA_HEURMIX, XAER_RMERR, XAER_RMFAIL, XAER_NOTA, XAER_INVAL, or XAER_PROTO.</target>
        </trans-unit>
        <trans-unit id="b84c18ad5a7a490aec7dc7e5e3ad48a05c385c9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred. Possible exception values are XAER_RMERR and XAER_RMFAIL.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred. Possible exception values are XAER_RMERR and XAER_RMFAIL.</target>
        </trans-unit>
        <trans-unit id="814db1635dbce39c06caf8774c05651372cd885e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred. Possible exception values are XAER_RMERR, XAER_RMFAIL, XAER_NOTA, XAER_INVAL, or XAER_PROTO.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred. Possible exception values are XAER_RMERR, XAER_RMFAIL, XAER_NOTA, XAER_INVAL, or XAER_PROTO.</target>
        </trans-unit>
        <trans-unit id="011db6d538ef513a040c5c6a487457ec68d3d2b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred. Possible exception values are XAER_RMERR, XAER_RMFAIL, or XAER_INVAL.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred. Possible exception values are XAER_RMERR, XAER_RMFAIL, or XAER_INVAL.</target>
        </trans-unit>
        <trans-unit id="757b995ff83ab6e86e49ca2b36c244356c7fb2fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred. Possible exception values are: XA_RB*, XAER_RMERR, XAER_RMFAIL, XAER_NOTA, XAER_INVAL, or XAER_PROTO.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred. Possible exception values are: XA_RB*, XAER_RMERR, XAER_RMFAIL, XAER_NOTA, XAER_INVAL, or XAER_PROTO.</target>
        </trans-unit>
        <trans-unit id="2657502738dd69fa807c20f1fa9fc52c56f3fe1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred. Possible exceptions are XA_RB*, XAER_RMERR, XAER_RMFAIL, XAER_DUPID, XAER_OUTSIDE, XAER_NOTA, XAER_INVAL, or XAER_PROTO.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred. Possible exceptions are XA_RB*, XAER_RMERR, XAER_RMFAIL, XAER_DUPID, XAER_OUTSIDE, XAER_NOTA, XAER_INVAL, or XAER_PROTO.</target>
        </trans-unit>
        <trans-unit id="54b0b4163ced1d1811ebae642ab8d703776316f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred. Possible values are XAER_RMERR, XAER_RMFAIL, XAER_INVAL, and XAER_PROTO.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xaexception&quot;&gt;XAException&lt;/a&gt;&lt;/code&gt; - An error has occurred. Possible values are XAER_RMERR, XAER_RMFAIL, XAER_INVAL, and XAER_PROTO.</target>
        </trans-unit>
        <trans-unit id="52abb70405a3f1460bddb2c95379cb662adc7fec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xecprivatekey&quot;&gt;XECPrivateKey&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;xecpublickey&quot;&gt;XECPublicKey&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xecprivatekey&quot;&gt;XECPrivateKey&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;xecpublickey&quot;&gt;XECPublicKey&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="831ab97d7f25b149339c529cb6f47f456db332ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlevent&quot;&gt;XMLEvent&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../xmlstreamconstants&quot;&gt;XMLStreamConstants&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlevent&quot;&gt;XMLEvent&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../xmlstreamconstants&quot;&gt;XMLStreamConstants&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24fb96b712ec992d7f7b5ad1dfd8473462855fae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlparseexception&quot;&gt;XMLParseException&lt;/a&gt;&lt;/code&gt; - XML parsing problem while parsing the input String</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlparseexception&quot;&gt;XMLParseException&lt;/a&gt;&lt;/code&gt; -入力文字列の解析中のXML解析問題</target>
        </trans-unit>
        <trans-unit id="e618d2771fcc08b9d8b70d25998ebf137fd57151" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlsignatureexception&quot;&gt;XMLSignatureException&lt;/a&gt;&lt;/code&gt; - if an unexpected error occurs during validation that prevented the validation operation from completing</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlsignatureexception&quot;&gt;XMLSignatureException&lt;/a&gt;&lt;/code&gt; - if an unexpected error occurs during validation that prevented the validation operation from completing</target>
        </trans-unit>
        <trans-unit id="44af5f9ebe446d72e5dbb6a4cf388f71023db72e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlsignatureexception&quot;&gt;XMLSignatureException&lt;/a&gt;&lt;/code&gt; - if an unexpected exception occurs while generating the signature</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlsignatureexception&quot;&gt;XMLSignatureException&lt;/a&gt;&lt;/code&gt; - if an unexpected exception occurs while generating the signature</target>
        </trans-unit>
        <trans-unit id="fc9baa44bdd0326add203e58fb2f6ff345ee18e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlsignatureexception&quot;&gt;XMLSignatureException&lt;/a&gt;&lt;/code&gt; - if an unexpected exception occurs while validating the reference</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlsignatureexception&quot;&gt;XMLSignatureException&lt;/a&gt;&lt;/code&gt; - if an unexpected exception occurs while validating the reference</target>
        </trans-unit>
        <trans-unit id="d5e7dc7bccb2ba2ed0350c71f84362e1aeabfd13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlsignatureexception&quot;&gt;XMLSignatureException&lt;/a&gt;&lt;/code&gt; - if an unexpected exception occurs while validating the signature</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlsignatureexception&quot;&gt;XMLSignatureException&lt;/a&gt;&lt;/code&gt; - if an unexpected exception occurs while validating the signature</target>
        </trans-unit>
        <trans-unit id="fd25676fb98a3e0f4926cb45ce08e5465dbc93e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - If given encoding does not match encoding of the underlying stream</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - If given encoding does not match encoding of the underlying stream</target>
        </trans-unit>
        <trans-unit id="37dbeaf32e12e274de33d97f75aa433e6a54ea84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if anything other than space characters are encountered</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if anything other than space characters are encountered</target>
        </trans-unit>
        <trans-unit id="bc56b602c2967e7384a2671bf77d0ee91d78636f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if the current event is not a START_ELEMENT or if a non text element is encountered</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if the current event is not a START_ELEMENT or if a non text element is encountered</target>
        </trans-unit>
        <trans-unit id="27285289394d977740eb41a15b93fabaf8195c6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if the current event is not white space, PROCESSING_INSTRUCTION, START_ELEMENT or END_ELEMENT</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if the current event is not white space, PROCESSING_INSTRUCTION, START_ELEMENT or END_ELEMENT</target>
        </trans-unit>
        <trans-unit id="2f8c8045074584d6cdd8729de71b0b082a606959" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if the namespace URI has not been bound to a prefix and javax.xml.stream.isRepairingNamespaces has not been set to true</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if the namespace URI has not been bound to a prefix and javax.xml.stream.isRepairingNamespaces has not been set to true</target>
        </trans-unit>
        <trans-unit id="bef0308ec2b6afbd9c6fe4ef00e38904d07bec06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if the required values are not matched.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if the required values are not matched.</target>
        </trans-unit>
        <trans-unit id="7aa6fd8783eb172dc27f821a6e9f8044ce47127e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if the underlying XML source is not well-formed</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if the underlying XML source is not well-formed</target>
        </trans-unit>
        <trans-unit id="f769693e483a9023fbcf1e4069301a1916e76e8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if there are errors freeing associated resources</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if there are errors freeing associated resources</target>
        </trans-unit>
        <trans-unit id="1bdd4d283299a62fc958325f9c178cf7c41087af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if there is a fatal error detecting the next state</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if there is a fatal error detecting the next state</target>
        </trans-unit>
        <trans-unit id="6064d475cc9585c80fa76b3b2e4b2f33b8cd7d8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if there is an error processing the underlying XML source</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if there is an error processing the underlying XML source</target>
        </trans-unit>
        <trans-unit id="c1f4b30da2082ae4a99d3c4861173f552468b4a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if there is an error with the underlying XML.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if there is an error with the underlying XML.</target>
        </trans-unit>
        <trans-unit id="ba982f154a332cff5fe920560332ab3e341e1f2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if there was a failure attempting to resolve the resource.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xmlstreamexception&quot;&gt;XMLStreamException&lt;/a&gt;&lt;/code&gt; - if there was a failure attempting to resolve the resource.</target>
        </trans-unit>
        <trans-unit id="8ddba11a22d49ba9d0c9386486578f989d3da591" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xpathexception&quot;&gt;XPathException&lt;/a&gt;&lt;/code&gt; - If the index is out of range (index &amp;lt; 0 || index &amp;gt;= size())</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xpathexception&quot;&gt;XPathException&lt;/a&gt;&lt;/code&gt; - If the index is out of range (index &amp;lt; 0 || index &amp;gt;= size())</target>
        </trans-unit>
        <trans-unit id="812b46f7e1c9d582613e5df770913c6be5c5a1d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xpathexpressionexception&quot;&gt;XPathExpressionException&lt;/a&gt;&lt;/code&gt; - If &lt;code&gt;expression&lt;/code&gt; cannot be compiled.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xpathexpressionexception&quot;&gt;XPathExpressionException&lt;/a&gt;&lt;/code&gt; - If &lt;code&gt;expression&lt;/code&gt; cannot be compiled.</target>
        </trans-unit>
        <trans-unit id="b3f7cdf85ff8faecfcafa3a953bb642bb83e2ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xpathexpressionexception&quot;&gt;XPathExpressionException&lt;/a&gt;&lt;/code&gt; - If &lt;code&gt;expression&lt;/code&gt; cannot be evaluated.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xpathexpressionexception&quot;&gt;XPathExpressionException&lt;/a&gt;&lt;/code&gt; - If &lt;code&gt;expression&lt;/code&gt; cannot be evaluated.</target>
        </trans-unit>
        <trans-unit id="809d766cfdd5ba849235a47b6f110a38de8be7b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xpathexpressionexception&quot;&gt;XPathExpressionException&lt;/a&gt;&lt;/code&gt; - If expression cannot be evaluated.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xpathexpressionexception&quot;&gt;XPathExpressionException&lt;/a&gt;&lt;/code&gt; - If expression cannot be evaluated.</target>
        </trans-unit>
        <trans-unit id="23379e290552fa00dc58df1b7749c3ba9b923199" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xpathexpressionexception&quot;&gt;XPathExpressionException&lt;/a&gt;&lt;/code&gt; - If the expression cannot be evaluated.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xpathexpressionexception&quot;&gt;XPathExpressionException&lt;/a&gt;&lt;/code&gt; - If the expression cannot be evaluated.</target>
        </trans-unit>
        <trans-unit id="1de1fbd2cd17ccc6c05f6d05f9e6e19b3b035cac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xpathexpressionexception&quot;&gt;XPathExpressionException&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;xpathfactoryconfigurationexception&quot;&gt;XPathFactoryConfigurationException&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xpathexpressionexception&quot;&gt;XPathExpressionException&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;xpathfactoryconfigurationexception&quot;&gt;XPathFactoryConfigurationException&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e3e5614d6e9ad80630d94f54d1f1912e5d8532a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xpathfactoryconfigurationexception&quot;&gt;XPathFactoryConfigurationException&lt;/a&gt;&lt;/code&gt; - If the specified object model is unavailable, or if there is a configuration error.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xpathfactoryconfigurationexception&quot;&gt;XPathFactoryConfigurationException&lt;/a&gt;&lt;/code&gt; - If the specified object model is unavailable, or if there is a configuration error.</target>
        </trans-unit>
        <trans-unit id="d84e47df11c65825d6a01748ae0ccfaec9271a9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xpathfactoryconfigurationexception&quot;&gt;XPathFactoryConfigurationException&lt;/a&gt;&lt;/code&gt; - if &lt;code&gt;factoryClassName&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, or the factory class cannot be loaded, instantiated or the factory class does not support the object model specified in the &lt;code&gt;uri&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xpathfactoryconfigurationexception&quot;&gt;XPathFactoryConfigurationException&lt;/a&gt;&lt;/code&gt; - if &lt;code&gt;factoryClassName&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; , or the factory class cannot be loaded, instantiated or the factory class does not support the object model specified in the &lt;code&gt;uri&lt;/code&gt; parameter.</target>
        </trans-unit>
        <trans-unit id="c8ebbd21648a3af28064bcf1ffe27a949e6f23c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xpathfactoryconfigurationexception&quot;&gt;XPathFactoryConfigurationException&lt;/a&gt;&lt;/code&gt; - if this &lt;code&gt;XPathFactory&lt;/code&gt; or the &lt;code&gt;XPath&lt;/code&gt;s it creates cannot support this feature.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xpathfactoryconfigurationexception&quot;&gt;XPathFactoryConfigurationException&lt;/a&gt;&lt;/code&gt; - if this &lt;code&gt;XPathFactory&lt;/code&gt; or the &lt;code&gt;XPath&lt;/code&gt; s it creates cannot support this feature.</target>
        </trans-unit>
        <trans-unit id="e699dd4d2d4ecabcdfbc94406026a2576b406da0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;xpathfunctionexception&quot;&gt;XPathFunctionException&lt;/a&gt;&lt;/code&gt; - If &lt;code&gt;args&lt;/code&gt; cannot be evaluated with this &lt;code&gt;XPath&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;xpathfunctionexception&quot;&gt;XPathFunctionException&lt;/a&gt;&lt;/code&gt; - If &lt;code&gt;args&lt;/code&gt; cannot be evaluated with this &lt;code&gt;XPath&lt;/code&gt; function.</target>
        </trans-unit>
        <trans-unit id="ff23c4911243d7feab3386ef9f6e6974772164a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zipexception&quot;&gt;ZipException&lt;/a&gt;&lt;/code&gt; - if a GZIP format error has occurred or the compression method used is unsupported</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zipexception&quot;&gt;ZipException&lt;/a&gt;&lt;/code&gt; -GZIP形式のエラーが発生した場合、または使用されている圧縮方法がサポートされていない場合</target>
        </trans-unit>
        <trans-unit id="9e32d3b3388d61e21580d917806b55bb26fb2e73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zipexception&quot;&gt;ZipException&lt;/a&gt;&lt;/code&gt; - if a ZIP file error has occurred</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zipexception&quot;&gt;ZipException&lt;/a&gt;&lt;/code&gt; -ZIPファイルのエラーが発生した場合</target>
        </trans-unit>
        <trans-unit id="f9077850c4a988cbc1db9488ffd2e83f308fada7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zipexception&quot;&gt;ZipException&lt;/a&gt;&lt;/code&gt; - if a ZIP format error has occurred</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zipexception&quot;&gt;ZipException&lt;/a&gt;&lt;/code&gt; -ZIP形式のエラーが発生した場合</target>
        </trans-unit>
        <trans-unit id="e898ecd49dec31763584769bf6502611a5c6a782" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zipexception&quot;&gt;ZipException&lt;/a&gt;&lt;/code&gt; - if a compression (ZIP) format error occurs</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zipexception&quot;&gt;ZipException&lt;/a&gt;&lt;/code&gt; -圧縮（ZIP）形式のエラーが発生した場合</target>
        </trans-unit>
        <trans-unit id="88d98d07eb60a0f071f22f97b5bc25d0fb7d39e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zipexception&quot;&gt;ZipException&lt;/a&gt;&lt;/code&gt; - if the compressed input data is corrupt.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zipexception&quot;&gt;ZipException&lt;/a&gt;&lt;/code&gt; -圧縮された入力データが破損している場合。</target>
        </trans-unit>
        <trans-unit id="8b87dc07041c24fb5a483467bf94b724cf8668af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zone/zonerulesexception&quot;&gt;ZoneRulesException&lt;/a&gt;&lt;/code&gt; - if no rules are available for this ID</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zone/zonerulesexception&quot;&gt;ZoneRulesException&lt;/a&gt;&lt;/code&gt; -このIDに使用できるルールがない場合</target>
        </trans-unit>
        <trans-unit id="322c97df8076e41eac8bfcc1760a54446c43e9be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zone/zonerulesexception&quot;&gt;ZoneRulesException&lt;/a&gt;&lt;/code&gt; - if the converted zone region ID cannot be found</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zone/zonerulesexception&quot;&gt;ZoneRulesException&lt;/a&gt;&lt;/code&gt; -変換されたゾーンリージョンIDが見つからない場合</target>
        </trans-unit>
        <trans-unit id="f4113bf975fead5d0a4888fd43896d4dee48dff5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zone/zonerulesexception&quot;&gt;ZoneRulesException&lt;/a&gt;&lt;/code&gt; - if the zone ID is a region ID that cannot be found</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zone/zonerulesexception&quot;&gt;ZoneRulesException&lt;/a&gt;&lt;/code&gt; -ゾーンIDが見つからないリージョンIDの場合</target>
        </trans-unit>
        <trans-unit id="114f6019dc1b93c17735c8e2cd747a0aad4127d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zoneid#equals(java.lang.Object)&quot;&gt;equals&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zoneid#equals(java.lang.Object)&quot;&gt;equals&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c626fc0e850a1e2b7b74135d96d7fa358c113c76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zoneid#equals-java.lang.Object-&quot;&gt;equals&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zoneid#equals-java.lang.Object-&quot;&gt;equals&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt; で等しい</target>
        </trans-unit>
        <trans-unit id="4516eab2e4e263c67358f0cfa5de752fddfe6da6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zoneid#getId()&quot;&gt;getId&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zoneid#getId()&quot;&gt;getId&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2b7c8731adfbb28b08b71c1defd9ab06722a274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zoneid#getId--&quot;&gt;getId&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zoneid#getId--&quot;&gt;getId&lt;/a&gt;&lt;/code&gt; クラスで &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f2011ba9a39b9827e0b576a62ec1d89a0646397" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zoneid#getRules()&quot;&gt;getRules&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zoneid#getRules()&quot;&gt;getRules&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa906a857e85db0906c5e0d73b39bcae95c2ad1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zoneid#getRules--&quot;&gt;getRules&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zoneid#getRules--&quot;&gt;getRules&lt;/a&gt;&lt;/code&gt; クラスで &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5cfbf2a56da3e71fb130d3ddf3d1541ca4af3bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zoneid#hashCode()&quot;&gt;hashCode&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zoneid#hashCode()&quot;&gt;hashCode&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e87b8b71ee04e56138896475a6fc640eaa67857a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zoneid#hashCode--&quot;&gt;hashCode&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zoneid#hashCode--&quot;&gt;hashCode&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt; のhashCode</target>
        </trans-unit>
        <trans-unit id="02dc775190a60c010c18d004bf7be18c842fed5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zoneid#toString()&quot;&gt;toString&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zoneid#toString()&quot;&gt;toString&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c9fd199c3d02c83818ba8ed651082add7900fbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zoneid#toString--&quot;&gt;toString&lt;/a&gt;&lt;/code&gt; in class &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zoneid#toString--&quot;&gt;toString&lt;/a&gt;&lt;/code&gt; クラス &lt;code&gt;&lt;a href=&quot;zoneid&quot;&gt;ZoneId&lt;/a&gt;&lt;/code&gt; のtoString</target>
        </trans-unit>
        <trans-unit id="4c7eaa577a63c47e26952a7cc62ed8decdabe358" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zonerulesexception&quot;&gt;ZoneRulesException&lt;/a&gt;&lt;/code&gt; - if a problem occurs while providing the IDs</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zonerulesexception&quot;&gt;ZoneRulesException&lt;/a&gt;&lt;/code&gt; -IDの提供中に問題が発生した場合</target>
        </trans-unit>
        <trans-unit id="620f46a050bb30d9783d4f7c7bf948a0b393869e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zonerulesexception&quot;&gt;ZoneRulesException&lt;/a&gt;&lt;/code&gt; - if a zone ID is already registered</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zonerulesexception&quot;&gt;ZoneRulesException&lt;/a&gt;&lt;/code&gt; -ゾーンIDがすでに登録されている場合</target>
        </trans-unit>
        <trans-unit id="775542726dd120a60822f1d6a7aa4d56473e61f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zonerulesexception&quot;&gt;ZoneRulesException&lt;/a&gt;&lt;/code&gt; - if an error occurs during the refresh</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zonerulesexception&quot;&gt;ZoneRulesException&lt;/a&gt;&lt;/code&gt; -更新中にエラーが発生した場合</target>
        </trans-unit>
        <trans-unit id="0e234a6d4015b48f8685847087e14f5e5d2ec4d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zonerulesexception&quot;&gt;ZoneRulesException&lt;/a&gt;&lt;/code&gt; - if history cannot be obtained for the zone ID</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zonerulesexception&quot;&gt;ZoneRulesException&lt;/a&gt;&lt;/code&gt; -ゾーンIDの履歴を取得できない場合</target>
        </trans-unit>
        <trans-unit id="373d0cab5295dbb9e280e102e2f5ebbf9b30f44c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;zonerulesexception&quot;&gt;ZoneRulesException&lt;/a&gt;&lt;/code&gt; - if rules cannot be obtained for the zone ID</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;zonerulesexception&quot;&gt;ZoneRulesException&lt;/a&gt;&lt;/code&gt; -ゾーンIDのルールを取得できない場合</target>
        </trans-unit>
        <trans-unit id="ae0818e56a0e1ea63660896add1954241776372e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;b&gt;NONUPDATABLE_VIEW_SYNC&lt;/b&gt;&lt;/code&gt; - Indicates that a &lt;code&gt;SyncProvider&lt;/code&gt; implementation does not support synchronization with an SQL &lt;code&gt;VIEW&lt;/code&gt; as the underlying source of data for the &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;&lt;b&gt;NONUPDATABLE_VIEW_SYNC&lt;/b&gt;&lt;/code&gt; - Indicates that a &lt;code&gt;SyncProvider&lt;/code&gt; implementation does not support synchronization with an SQL &lt;code&gt;VIEW&lt;/code&gt; as the underlying source of data for the &lt;code&gt;RowSet&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="3cfbef9109aded89f9726241459cd6c3da2d5d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;b&gt;UPDATABLE_VIEW_SYNC&lt;/b&gt;&lt;/code&gt; - Indicates that a &lt;code&gt;SyncProvider&lt;/code&gt; implementation supports synchronization with an SQL &lt;code&gt;VIEW&lt;/code&gt; as the underlying source of data.</source>
          <target state="translated">&lt;code&gt;&lt;b&gt;UPDATABLE_VIEW_SYNC&lt;/b&gt;&lt;/code&gt; - Indicates that a &lt;code&gt;SyncProvider&lt;/code&gt; implementation supports synchronization with an SQL &lt;code&gt;VIEW&lt;/code&gt; as the underlying source of data.</target>
        </trans-unit>
        <trans-unit id="fcfd1c0c0a452b2dba2e8d21e33d094bd23f7427" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;b&gt;eval(Reader,ScriptContext)&lt;/b&gt;&lt;/code&gt; or &lt;code&gt;&lt;b&gt;eval(String, ScriptContext)&lt;/b&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;b&gt;eval(Reader,ScriptContext)&lt;/b&gt;&lt;/code&gt; または &lt;code&gt;&lt;b&gt;eval(String, ScriptContext)&lt;/b&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7bc30bb74457e34aa461dca24370415b7494a968" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;em&gt;sap&lt;/em&gt;&lt;/code&gt; is the address at which the connector server is found. This address uses a subset of the syntax defined by RFC 2609 for IP-based protocols. It is a subset because the &lt;code&gt;user@host&lt;/code&gt; syntax is not supported.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;sap&lt;/em&gt;&lt;/code&gt; は、コネクタサーバーが見つかったアドレスです。このアドレスは、IPベースのプロトコルに対してRFC 2609で定義された構文のサブセットを使用します。 &lt;code&gt;user@host&lt;/code&gt; 構文はサポートされていないため、これはサブセットです。</target>
        </trans-unit>
        <trans-unit id="3730e8b45fb48571526eb6dab82d8d83c95d9ab4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; - The &lt;code&gt;BasicFileAttributes&lt;/code&gt; type</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; - &lt;code&gt;BasicFileAttributes&lt;/code&gt; タイプ</target>
        </trans-unit>
        <trans-unit id="ceded5bf377700f82686c5cb2e9a29dc2e717a93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; - The intermediate accumulation type of the new collector</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; -新しいコレクターの中間累積タイプ</target>
        </trans-unit>
        <trans-unit id="d6d3cb6c290d0ceafd792c9a3cbc48df38270511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; - The type of the attachment</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; -添付ファイルのタイプ</target>
        </trans-unit>
        <trans-unit id="5285e0393bf8f1a68ae791ed368fc0315794a9c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; - The type of the object attached to the I/O operation</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; -I / O操作にアタッチされたオブジェクトのタイプ</target>
        </trans-unit>
        <trans-unit id="ff854724f146690e078d4a10fd2a8fa6934d5095" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; - intermediate accumulation type of the downstream collector</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; -下流コレクターの中間蓄積タイプ</target>
        </trans-unit>
        <trans-unit id="5de3bc6fe598c21fbaf3d350c4bd339e6acdc5ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; - the annotation type</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; -注釈タイプ</target>
        </trans-unit>
        <trans-unit id="a9782bd5fa117afe4e044a4e1afeadb76c1a3dd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; - the component type of the resulting array</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; - the component type of the resulting array</target>
        </trans-unit>
        <trans-unit id="6b9df8d185e94f40aaa28aa1cbbd843a3a4f7f7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; - the element type of the resulting array</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; -結果の配列の要素型</target>
        </trans-unit>
        <trans-unit id="6b047b98d54adae0cb1bf0f4413628ade33e014c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; - the intermediate accumulation type of the &lt;code&gt;Collector&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; - &lt;code&gt;Collector&lt;/code&gt; 中間蓄積タイプ</target>
        </trans-unit>
        <trans-unit id="4b6df94da4e5836798ba9652f68998cd69885afc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; - the intermediate accumulation type of the downstream collector</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; -下流コレクターの中間蓄積タイプ</target>
        </trans-unit>
        <trans-unit id="2c5c995422649336ec4f82d84cf076ccdf83e2b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; - the mutable accumulation type of the reduction operation (often hidden as an implementation detail)</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; -リダクション演算の可変累積型（実装の詳細として隠されることが多い）</target>
        </trans-unit>
        <trans-unit id="08c465fb26d296b2d7a0e61a9ff248ca7b939eb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; - the type of the annotation to query for and return if directly or indirectly present</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; -直接または間接的に存在する場合に照会して返すアノテーションのタイプ</target>
        </trans-unit>
        <trans-unit id="13d63eb1dad6b650508f66c50c448b84c15f48fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; - the type of the annotation to query for and return if directly present</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; -照会して、直接存在する場合に返す注釈のタイプ</target>
        </trans-unit>
        <trans-unit id="1a047972691e4d8c213423ae3e91275d6671abb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;A&lt;/code&gt; - the type of the annotation to query for and return if present</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; -照会して存在する場合は返すアノテーションのタイプ</target>
        </trans-unit>
        <trans-unit id="d7e6e0cf276508056b66fd7c2f652498abcabae2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ACHuffmanTables&lt;/code&gt; - An array of Huffman table objects.</source>
          <target state="translated">&lt;code&gt;ACHuffmanTables&lt;/code&gt; -Huffmanテーブルオブジェクトの配列。</target>
        </trans-unit>
        <trans-unit id="adc9fd414f1140dd76aae069e1a18fb803d979a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ACHuffmanTables&lt;/code&gt; - an array of Huffman table objects.</source>
          <target state="translated">&lt;code&gt;ACHuffmanTables&lt;/code&gt; -ハフマンテーブルオブジェクトの配列。</target>
        </trans-unit>
        <trans-unit id="c4a5a8e44815c8c01213b2b9392a3aeaaa4ef9d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AES/CBC/NoPadding&lt;/code&gt; (128)</source>
          <target state="translated">&lt;code&gt;AES/CBC/NoPadding&lt;/code&gt; （128）</target>
        </trans-unit>
        <trans-unit id="2e0a3e13c3ce3689ed11ca5ab05f142dbdd306ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AES/CBC/PKCS5Padding&lt;/code&gt; (128)</source>
          <target state="translated">&lt;code&gt;AES/CBC/PKCS5Padding&lt;/code&gt; （128）</target>
        </trans-unit>
        <trans-unit id="541432e097a0df728b7a97500eb331cce49cee6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AES/ECB/NoPadding&lt;/code&gt; (128)</source>
          <target state="translated">&lt;code&gt;AES/ECB/NoPadding&lt;/code&gt; （128）</target>
        </trans-unit>
        <trans-unit id="e3c993e5e47a5f1b535f569475982cb0c29e6539" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AES/ECB/PKCS5Padding&lt;/code&gt; (128)</source>
          <target state="translated">&lt;code&gt;AES/ECB/PKCS5Padding&lt;/code&gt; （128）</target>
        </trans-unit>
        <trans-unit id="16297cbca63832f0ee3c98c811d076acc321fc10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AES/GCM/NoPadding&lt;/code&gt; (128)</source>
          <target state="translated">&lt;code&gt;AES/GCM/NoPadding&lt;/code&gt; (128)</target>
        </trans-unit>
        <trans-unit id="7cddf15bc98847a74e913f0cf9ccf2d8b207ea74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AES&lt;/code&gt; (128)</source>
          <target state="translated">&lt;code&gt;AES&lt;/code&gt; （128）</target>
        </trans-unit>
        <trans-unit id="20482e85a0106a4a49cd0b66df8d7b0d0847e28c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_MONTH&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified aligned-day-of-week. The date is adjusted to the specified month-based aligned-day-of-week. Aligned weeks are counted such that the first week of a given month starts on the first day of that month. This may cause the date to be moved up to 6 days into the following month.</source>
          <target state="translated">&lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_MONTH&lt;/code&gt; -指定された位置合わせされた &lt;code&gt;LocalDate&lt;/code&gt; でLocalDateを返します。日付は、指定された月ベースの調整された曜日に調整されます。整列された週は、特定の月の最初の週がその月の最初の日から始まるようにカウントされます。これにより、日付が翌月に最大6日間移動する場合があります。</target>
        </trans-unit>
        <trans-unit id="554c974114733306caf5ae530c7288aa381fc595" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_YEAR&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified aligned-day-of-week. The date is adjusted to the specified year-based aligned-day-of-week. Aligned weeks are counted such that the first week of a given year starts on the first day of that year. This may cause the date to be moved up to 6 days into the following year.</source>
          <target state="translated">&lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_YEAR&lt;/code&gt; -指定された位置合わせされた &lt;code&gt;LocalDate&lt;/code&gt; でLocalDateを返します。日付は、指定された年ベースの調整された曜日に調整されます。整列された週は、特定の年の最初の週がその年の最初の日から始まるようにカウントされます。これにより、日付が翌年に最大6日間移動することがあります。</target>
        </trans-unit>
        <trans-unit id="181a436a1e8e7ae0b6729575f973c62c91159e6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALIGNED_WEEK_OF_MONTH&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified aligned-week-of-month. Aligned weeks are counted such that the first week of a given month starts on the first day of that month. This adjustment moves the date in whole week chunks to match the specified week. The result will have the same day-of-week as this date. This may cause the date to be moved into the following month.</source>
          <target state="translated">&lt;code&gt;ALIGNED_WEEK_OF_MONTH&lt;/code&gt; -指定した位置合わせされた週で &lt;code&gt;LocalDate&lt;/code&gt; を返します。整列された週は、特定の月の最初の週がその月の最初の日から始まるように数えられます。この調整により、指定された週と一致するように、日付が週単位で移動します。結果はこの日付と同じ曜日になります。これにより、日付が翌月に移動する場合があります。</target>
        </trans-unit>
        <trans-unit id="3cc99ff8a2e486da43b5b8b89753695cd8490cee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALIGNED_WEEK_OF_YEAR&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified aligned-week-of-year. Aligned weeks are counted such that the first week of a given year starts on the first day of that year. This adjustment moves the date in whole week chunks to match the specified week. The result will have the same day-of-week as this date. This may cause the date to be moved into the following year.</source>
          <target state="translated">&lt;code&gt;ALIGNED_WEEK_OF_YEAR&lt;/code&gt; -指定された位置合わせされた週で &lt;code&gt;LocalDate&lt;/code&gt; を返します。整列された週は、特定の年の最初の週がその年の最初の日から始まるようにカウントされます。この調整により、指定された週と一致するように、日付が週単位で移動します。結果はこの日付と同じ曜日になります。これにより、日付が翌年に移動する可能性があります。</target>
        </trans-unit>
        <trans-unit id="3b747529787e7a7025359248ab1778c74a6a4fc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ALWAYS_UPDATE&lt;/code&gt;: the caret always tracks document changes. For regular changes it increases its position if an insertion occurs before or at its current position, and decreases position if a removal occurs before its current position. For undo/redo updates it is always moved to the position where update occurred. The caret also tries to keep itself visible by calling &lt;code&gt;adjustVisibility&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;ALWAYS_UPDATE&lt;/code&gt; : the caret always tracks document changes. For regular changes it increases its position if an insertion occurs before or at its current position, and decreases position if a removal occurs before its current position. For undo/redo updates it is always moved to the position where update occurred. The caret also tries to keep itself visible by calling &lt;code&gt;adjustVisibility&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="bf2c673ade2f46de1d6a1210604b19f8450261d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AMPM_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified AM/PM. The hour-of-am-pm, minute-of-hour, second-of-minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;AMPM_OF_DAY&lt;/code&gt; -指定されたAM / PMで &lt;code&gt;LocalTime&lt;/code&gt; を返します。時、分、秒、ナノ秒は変更されません。</target>
        </trans-unit>
        <trans-unit id="daa76440741e34cdbbc00629420b1a6e6114150d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;APPLICATION_EXCLUDE&lt;/code&gt; indicates that a top-level window won't be blocked by any application-modal dialogs.</source>
          <target state="translated">&lt;code&gt;APPLICATION_EXCLUDE&lt;/code&gt; indicates that a top-level window won't be blocked by any application-modal dialogs.</target>
        </trans-unit>
        <trans-unit id="abefbd5de1bbc6bacd398a6d7c6d5f8e368eff81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;APPLICATION_EXCLUDE&lt;/code&gt; indicates that a top-level window won't be blocked by any application-modal dialogs. Also, it isn't blocked by document-modal dialogs from outside of its child hierarchy.</source>
          <target state="translated">&lt;code&gt;APPLICATION_EXCLUDE&lt;/code&gt; indicates that a top-level window won't be blocked by any application-modal dialogs. Also, it isn't blocked by document-modal dialogs from outside of its child hierarchy.</target>
        </trans-unit>
        <trans-unit id="0c54cd0475485d2af953e1cbd01eccbb5fa21c9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ARCHIVE = &quot;&lt;/code&gt;&lt;var&gt;archiveList&lt;/var&gt;&lt;code&gt;&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ARCHIVE = &quot;&lt;/code&gt; &lt;var&gt;archiveList&lt;/var&gt; &lt;code&gt;&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c77b7e9c22d664e2f880426b48ec7ac5fe8815ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AWTEventMulticaster&lt;/code&gt; implements efficient and thread-safe multi-cast event dispatching for the AWT events defined in the &lt;code&gt;java.awt.event&lt;/code&gt; package.</source>
          <target state="translated">&lt;code&gt;AWTEventMulticaster&lt;/code&gt; implements efficient and thread-safe multi-cast event dispatching for the AWT events defined in the &lt;code&gt;java.awt.event&lt;/code&gt; package.</target>
        </trans-unit>
        <trans-unit id="7855619c567746df4fa3ce810e860cb0126c2bdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AWTEventMulticaster&lt;/code&gt; is implemented as a pair of &lt;code&gt;
 EventListeners&lt;/code&gt; that are set at construction time. &lt;code&gt;
 AWTEventMulticaster&lt;/code&gt; is immutable. The &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;
 remove&lt;/code&gt; methods do not alter &lt;code&gt;AWTEventMulticaster&lt;/code&gt; in anyway. If necessary, a new &lt;code&gt;AWTEventMulticaster&lt;/code&gt; is created. In this way it is safe to add and remove listeners during the process of an event dispatching. However, event listeners added during the process of an event dispatch operation are not notified of the event currently being dispatched.</source>
          <target state="translated">&lt;code&gt;AWTEventMulticaster&lt;/code&gt; is implemented as a pair of &lt;code&gt; EventListeners&lt;/code&gt; that are set at construction time. &lt;code&gt; AWTEventMulticaster&lt;/code&gt; is immutable. The &lt;code&gt;add&lt;/code&gt; and &lt;code&gt; remove&lt;/code&gt; methods do not alter &lt;code&gt;AWTEventMulticaster&lt;/code&gt; in anyway. If necessary, a new &lt;code&gt;AWTEventMulticaster&lt;/code&gt; is created. In this way it is safe to add and remove listeners during the process of an event dispatching. However, event listeners added during the process of an event dispatch operation are not notified of the event currently being dispatched.</target>
        </trans-unit>
        <trans-unit id="9c0703f2dd8e0777dabe89e96f2281195541143b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AWTKeyStroke&lt;/code&gt;s should not be constructed by client code. Use a variant of &lt;code&gt;getAWTKeyStroke&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;AWTKeyStroke&lt;/code&gt; は、クライアントコードで作成しないでください。代わりに、 &lt;code&gt;getAWTKeyStroke&lt;/code&gt; のバリアントを使用してください。</target>
        </trans-unit>
        <trans-unit id="eb2c3916129d2968f7d4f41d74092477e56b4d4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AWTKeyStrokes&lt;/code&gt; are immutable, and are intended to be unique. Client code should never create an &lt;code&gt;AWTKeyStroke&lt;/code&gt; on its own, but should instead use a variant of &lt;code&gt;getAWTKeyStroke&lt;/code&gt;. Client use of these factory methods allows the &lt;code&gt;AWTKeyStroke&lt;/code&gt; implementation to cache and share instances efficiently.</source>
          <target state="translated">&lt;code&gt;AWTKeyStrokes&lt;/code&gt; は不変であり、一意であることが意図されています。クライアントコードは、それ自体で &lt;code&gt;AWTKeyStroke&lt;/code&gt; を作成することはできませんが、代わりに &lt;code&gt;getAWTKeyStroke&lt;/code&gt; のバリアントを使用する必要があります。クライアントがこれらのファクトリメソッドを使用すると、 &lt;code&gt;AWTKeyStroke&lt;/code&gt; 実装でインスタンスを効率的にキャッシュおよび共有できます。</target>
        </trans-unit>
        <trans-unit id="3f7eda9451a2f16af3971c5148f4b1e80f3631ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AbstractFormatterFactory&lt;/code&gt; used to determine &lt;code&gt;AbstractFormatter&lt;/code&gt;s</source>
          <target state="translated">&lt;code&gt;AbstractFormatterFactory&lt;/code&gt; が決定するために使用さ &lt;code&gt;AbstractFormatter&lt;/code&gt; 秒</target>
        </trans-unit>
        <trans-unit id="744584237fcab1c8f3eab1540a17c8488508b574" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AbstractListModel&lt;/code&gt; subclasses must call this method &lt;b&gt;after&lt;/b&gt; one or more elements are added to the model.</source>
          <target state="translated">&lt;code&gt;AbstractListModel&lt;/code&gt; サブクラスは&lt;b&gt;、&lt;/b&gt; 1つ以上の要素がモデルに追加された&lt;b&gt;後、&lt;/b&gt;このメソッドを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="1c9706ccf4f39a76989117740d0c9036e15608f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AbstractListModel&lt;/code&gt; subclasses must call this method &lt;b&gt;after&lt;/b&gt; one or more elements are added to the model. The new elements are specified by a closed interval index0, index1 -- the enpoints are included. Note that index0 need not be less than or equal to index1.</source>
          <target state="translated">&lt;code&gt;AbstractListModel&lt;/code&gt; サブクラスは&lt;b&gt;、&lt;/b&gt; 1つ以上の要素がモデルに追加された&lt;b&gt;後、&lt;/b&gt;このメソッドを呼び出す必要があります。新しい要素は、閉区間index0、index1によって指定されます-enpointsが含まれます。index0はindex1以下である必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="9bbd87c35ea7a91f59a0f15fbb907c6aadf50bcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AbstractListModel&lt;/code&gt; subclasses must call this method &lt;b&gt;after&lt;/b&gt; one or more elements are removed from the model.</source>
          <target state="translated">&lt;code&gt;AbstractListModel&lt;/code&gt; サブクラスは&lt;b&gt;、&lt;/b&gt; 1つ以上の要素がモデルから削除された&lt;b&gt;後、&lt;/b&gt;このメソッドを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="d2b6aca612ec044c3fdb55e21bec93f08a17ddaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AbstractListModel&lt;/code&gt; subclasses must call this method &lt;b&gt;after&lt;/b&gt; one or more elements are removed from the model. &lt;code&gt;index0&lt;/code&gt; and &lt;code&gt;index1&lt;/code&gt; are the end points of the interval that's been removed. Note that &lt;code&gt;index0&lt;/code&gt; need not be less than or equal to &lt;code&gt;index1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AbstractListModel&lt;/code&gt; サブクラスは&lt;b&gt;、&lt;/b&gt; 1つ以上の要素がモデルから削除された&lt;b&gt;後、&lt;/b&gt;このメソッドを呼び出す必要があります。 &lt;code&gt;index0&lt;/code&gt; からと &lt;code&gt;index1&lt;/code&gt; 削除されています間隔のエンドポイントです。注意 &lt;code&gt;index0&lt;/code&gt; 必要性がより少ないか等しいではない &lt;code&gt;index1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eab99073aa31b84dce8619848b2676d212e58d91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AbstractListModel&lt;/code&gt; subclasses must call this method &lt;b&gt;after&lt;/b&gt; one or more elements of the list change.</source>
          <target state="translated">&lt;code&gt;AbstractListModel&lt;/code&gt; サブクラスは、リストの1つ以上の要素が変更された&lt;b&gt;後に&lt;/b&gt;このメソッドを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="66025e18b54765196dc30d489bed0b54a9f239b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AbstractListModel&lt;/code&gt; subclasses must call this method &lt;b&gt;after&lt;/b&gt; one or more elements of the list change. The changed elements are specified by the closed interval index0, index1 -- the endpoints are included. Note that index0 need not be less than or equal to index1.</source>
          <target state="translated">&lt;code&gt;AbstractListModel&lt;/code&gt; サブクラスは、リストの1つ以上の要素が変更された&lt;b&gt;後に&lt;/b&gt;このメソッドを呼び出す必要があります。変更された要素は、閉区間index0、index1によって指定されます-エンドポイントが含まれます。index0はindex1以下である必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="12077fd2f429c727fa450b6a5abee2601f89a2b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AbstractResourceBundleProvider&lt;/code&gt; is an abstract class that provides the basic support for a provider implementation class for &lt;a href=&quot;resourcebundleprovider&quot;&gt;&lt;code&gt;ResourceBundleProvider&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;AbstractResourceBundleProvider&lt;/code&gt; は、&lt;a href=&quot;resourcebundleprovider&quot;&gt; &lt;code&gt;ResourceBundleProvider&lt;/code&gt; の&lt;/a&gt;プロバイダー実装クラスの基本的なサポートを提供する抽象クラスです。</target>
        </trans-unit>
        <trans-unit id="73640f6267c3b04208a91cb71f3d49fcf8a4feb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleAction&lt;/code&gt; if supported by object; else return &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AccessibleAction&lt;/code&gt; オブジェクトでサポートされている場合はAccessibleAction。それ以外の場合は &lt;code&gt;null&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="556f84a6eb6590cbdeb704ea17d5325253113ca7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleComponent&lt;/code&gt; if supported by object; else return &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AccessibleComponent&lt;/code&gt; オブジェクトでサポートされている場合はAccessibleComponent。それ以外の場合は &lt;code&gt;null&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="d9258774de4bc7bf14826d65f948a20569a2a2df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleContext&lt;/code&gt; associated with this &lt;code&gt;CellRendererPan&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AccessibleContext&lt;/code&gt; この &lt;code&gt;CellRendererPan&lt;/code&gt; に関連付けられたAccessibleContext</target>
        </trans-unit>
        <trans-unit id="debf6bced160286f504ab9677cf613fbe5990a9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleContext&lt;/code&gt; associated with this &lt;code&gt;JApplet&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AccessibleContext&lt;/code&gt; この &lt;code&gt;JApplet&lt;/code&gt; に関連付けられたAccessibleContext</target>
        </trans-unit>
        <trans-unit id="c441a4b501c29b6dbd69212aaa6c4770b0b9bab8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleContext&lt;/code&gt; associated with this &lt;code&gt;JDialog&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AccessibleContext&lt;/code&gt; この &lt;code&gt;JDialog&lt;/code&gt; に関連付けられたAccessibleContext</target>
        </trans-unit>
        <trans-unit id="b0cc3c0f338556528355ae37f2bc7975e331bf0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleContext&lt;/code&gt; associated with this &lt;code&gt;JFileChooser&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AccessibleContext&lt;/code&gt; この &lt;code&gt;JFileChooser&lt;/code&gt; に関連付けられたAccessibleContext</target>
        </trans-unit>
        <trans-unit id="532c665c303fcf3b5af4cd3114d42b140d6b269f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleContext&lt;/code&gt; represents the minimum information all accessible objects return.</source>
          <target state="translated">&lt;code&gt;AccessibleContext&lt;/code&gt; は、すべてのアクセス可能なオブジェクトが返す最小限の情報を表します。</target>
        </trans-unit>
        <trans-unit id="6b0661705e45a9d91e9ee993d5b71a8a680bdd6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleContext&lt;/code&gt; represents the minimum information all accessible objects return. This information includes the accessible name, description, role, and state of the object, as well as information about its parent and children. &lt;code&gt;AccessibleContext&lt;/code&gt; also contains methods for obtaining more specific accessibility information about a component. If the component supports them, these methods will return an object that implements one or more of the following interfaces:</source>
          <target state="translated">&lt;code&gt;AccessibleContext&lt;/code&gt; は、すべてのアクセス可能なオブジェクトが返す最小限の情報を表します。この情報には、アクセス可能な名前、説明、役割、オブジェクトの状態、およびその親と子に関する情報が含まれます。 &lt;code&gt;AccessibleContext&lt;/code&gt; には、コンポーネントに関するより具体的なアクセシビリティ情報を取得するためのメソッドも含まれています。コンポーネントがそれらをサポートしている場合、これらのメソッドは、次のインターフェイスの1つ以上を実装するオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="f7cd2def218d1a1dc927287c6a44f594f020463f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleEditableText&lt;/code&gt; if supported by object; else return &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AccessibleEditableText&lt;/code&gt; オブジェクトでサポートされている場合はAccessibleEditableText。それ以外の場合は &lt;code&gt;null&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="888147ff50cefbdfdcf44e6877bc7f621367bf68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleJSpinner&lt;/code&gt; implements accessibility support for the &lt;code&gt;JSpinner&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;AccessibleJSpinner&lt;/code&gt; は、 &lt;code&gt;JSpinner&lt;/code&gt; クラスのアクセシビリティサポートを実装します。</target>
        </trans-unit>
        <trans-unit id="76e6755cb5cf7ea2a882d92a0160c1d456f7a307" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleObject&lt;/code&gt; allows suppression of access checks if the necessary &lt;code&gt;ReflectPermission&lt;/code&gt; is available.</source>
          <target state="translated">&lt;code&gt;AccessibleObject&lt;/code&gt; を使用すると、必要な &lt;code&gt;ReflectPermission&lt;/code&gt; が使用可能な場合にアクセスチェックを抑制できます。</target>
        </trans-unit>
        <trans-unit id="1918aff07159a2ac4351051c8167179de354443e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleProgressMonitor&lt;/code&gt; implements accessibility support for the &lt;code&gt;ProgressMonitor&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;AccessibleProgressMonitor&lt;/code&gt; は、 &lt;code&gt;ProgressMonitor&lt;/code&gt; クラスのアクセシビリティサポートを実装します。</target>
        </trans-unit>
        <trans-unit id="0ae960a7fba55f598e418abafb42723254cf4a0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleRelation&lt;/code&gt; array contacting the current relation</source>
          <target state="translated">&lt;code&gt;AccessibleRelation&lt;/code&gt; 現在の関係に接続しているAccessibleRelation配列</target>
        </trans-unit>
        <trans-unit id="5eae7423512686f83dc88b300c79b1036568ce27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleSelection&lt;/code&gt; if supported by object; else return &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AccessibleSelection&lt;/code&gt; オブジェクトでサポートされている場合はAccessibleSelection。それ以外の場合は &lt;code&gt;null&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="f29a676e2e88717924f0c66b181432c4a2afafe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleState&lt;/code&gt; array containing the current state</source>
          <target state="translated">&lt;code&gt;AccessibleState&lt;/code&gt; 現在の状態を含むAccessibleState配列</target>
        </trans-unit>
        <trans-unit id="95e79570852f7962fb7c27d1ac446ab1a9e9c070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleText&lt;/code&gt; for the JPasswordField</source>
          <target state="translated">&lt;code&gt;AccessibleText&lt;/code&gt; JPasswordFieldのAccessibleText</target>
        </trans-unit>
        <trans-unit id="039aab2bdf45467eeb7e6c88a71c494398e9de17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleText&lt;/code&gt; if supported by object; else return &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AccessibleText&lt;/code&gt; オブジェクトでサポートされている場合はAccessibleText。それ以外の場合は &lt;code&gt;null&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="bd4b5c8b28bff1b7ec138117befb3e7254b4ea06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AccessibleValue&lt;/code&gt; if supported by object; else return &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AccessibleValue&lt;/code&gt; オブジェクトでサポートされている場合はAccessibleValue。それ以外の場合は &lt;code&gt;null&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="d121bc91cead883790ae8b03f86c2ce0a3770d2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Action&lt;/code&gt; uses &lt;code&gt;PropertyChangeListener&lt;/code&gt; to inform listeners the &lt;code&gt;Action&lt;/code&gt; has changed. The beans specification indicates that a &lt;code&gt;null&lt;/code&gt; property name can be used to indicate multiple values have changed. By default Swing components that take an &lt;code&gt;Action&lt;/code&gt; do not handle such a change. To indicate that Swing should treat &lt;code&gt;null&lt;/code&gt; according to the beans specification set the system property &lt;code&gt;swing.actions.reconfigureOnNull&lt;/code&gt; to the &lt;code&gt;String&lt;/code&gt; value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Action&lt;/code&gt; は &lt;code&gt;PropertyChangeListener&lt;/code&gt; を使用して、 &lt;code&gt;Action&lt;/code&gt; が変更されたことをリスナーに通知します。Beanの仕様は、 &lt;code&gt;null&lt;/code&gt; プロパティ名を使用して、複数の値が変更されたことを示すことができることを示しています。デフォルトでは、 &lt;code&gt;Action&lt;/code&gt; 実行するSwingコンポーネントはそのような変更を処理しません。SwingがBeanの仕様に従って &lt;code&gt;null&lt;/code&gt; を処理する必要があることを示すには、システムプロパティ &lt;code&gt;swing.actions.reconfigureOnNull&lt;/code&gt; を &lt;code&gt;String&lt;/code&gt; 値 &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="8cb819e2ffecea5a32754ecf794f01d7fb132f91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActionListener&lt;/code&gt;s added to the combo box will be notified with an &lt;code&gt;ActionEvent&lt;/code&gt; when this method is called.</source>
          <target state="translated">&lt;code&gt;ActionListener&lt;/code&gt; コンボボックスに追加されたActionListenerは、このメソッドが呼び出されると &lt;code&gt;ActionEvent&lt;/code&gt; で通知されます。</target>
        </trans-unit>
        <trans-unit id="6f28cd754b5693bf680665d2077be3f60aaf8f57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActionMap&lt;/code&gt; provides mappings from &lt;code&gt;Object&lt;/code&gt;s (called &lt;em&gt;keys&lt;/em&gt; or &lt;em&gt;&lt;code&gt;Action&lt;/code&gt; names&lt;/em&gt;) to &lt;code&gt;Action&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ActionMap&lt;/code&gt; は、 &lt;code&gt;Object&lt;/code&gt; （&lt;em&gt;キー&lt;/em&gt;または&lt;em&gt; &lt;code&gt;Action&lt;/code&gt; 名&lt;/em&gt;と呼ばれる）から &lt;code&gt;Action&lt;/code&gt; へのマッピングを提供します。</target>
        </trans-unit>
        <trans-unit id="1c7854934b647a4bdef65f6d7e135b59e78378d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActionMap&lt;/code&gt; provides mappings from &lt;code&gt;Object&lt;/code&gt;s (called &lt;em&gt;keys&lt;/em&gt; or &lt;em&gt;&lt;code&gt;Action&lt;/code&gt; names&lt;/em&gt;) to &lt;code&gt;Action&lt;/code&gt;s. An &lt;code&gt;ActionMap&lt;/code&gt; is usually used with an &lt;code&gt;InputMap&lt;/code&gt; to locate a particular action when a key is pressed. As with &lt;code&gt;InputMap&lt;/code&gt;, an &lt;code&gt;ActionMap&lt;/code&gt; can have a parent that is searched for keys not defined in the &lt;code&gt;ActionMap&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ActionMap&lt;/code&gt; は、 &lt;code&gt;Object&lt;/code&gt; （&lt;em&gt;キー&lt;/em&gt;または&lt;em&gt; &lt;code&gt;Action&lt;/code&gt; 名&lt;/em&gt;と呼ばれる）から &lt;code&gt;Action&lt;/code&gt; へのマッピングを提供します。アン &lt;code&gt;ActionMap&lt;/code&gt; 通常に使用されている &lt;code&gt;InputMap&lt;/code&gt; をキーが押されたときに特定のアクションを検索します。同様 &lt;code&gt;InputMap&lt;/code&gt; 、 &lt;code&gt;ActionMap&lt;/code&gt; で定義されていないキーが検索され、親持つことができる &lt;code&gt;ActionMap&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eddeee91096f77eb34f3c80eb32e740ddb4314d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActivationGroup_Stub&lt;/code&gt; is a stub class for the subclasses of &lt;code&gt;java.rmi.activation.ActivationGroup&lt;/code&gt; that are exported as a &lt;code&gt;java.rmi.server.UnicastRemoteObject&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ActivationGroup_Stub&lt;/code&gt; はのサブクラスのスタブクラスです &lt;code&gt;java.rmi.activation.ActivationGroup&lt;/code&gt; としてエクスポートされ &lt;code&gt;java.rmi.server.UnicastRemoteObject&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17713ec93920bb261c00e186819dea467bab9c6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdjustmentEvent.BLOCK_DECREMENT&lt;/code&gt; is sent out when the user clicks in the track, to the right of the bubble on a horizontal scroll bar, or below the bubble on a vertical scroll bar. By convention, the &lt;b&gt;Page Down&lt;/b&gt; key is equivalent, if the user is using a keyboard that defines a &lt;b&gt;Page Down&lt;/b&gt; key.</source>
          <target state="translated">&lt;code&gt;AdjustmentEvent.BLOCK_DECREMENT&lt;/code&gt; は、ユーザーがトラックをクリックしたとき、水平スクロールバーのバブルの右側、または垂直スクロールバーのバブルの下に送信されます。慣例により、ユーザーが&lt;b&gt;Page Down&lt;/b&gt;キーを定義するキーボードを使用している場合、&lt;b&gt;PageDown&lt;/b&gt;キーは同等です。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="470ce8981e61ec0066b991a43c92f10d89ad33ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdjustmentEvent.BLOCK_DECREMENT&lt;/code&gt; replaces &lt;code&gt;Event.SCROLL_PAGE_DOWN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AdjustmentEvent.BLOCK_DECREMENT&lt;/code&gt; 置き換え &lt;code&gt;Event.SCROLL_PAGE_DOWN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68407e9f84c7ddb2b18a2715093a15e17be4abe0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdjustmentEvent.BLOCK_INCREMENT&lt;/code&gt; is sent out when the user clicks in the track, to the left of the bubble on a horizontal scroll bar, or above the bubble on a vertical scroll bar. By convention, the &lt;b&gt;Page Up&lt;/b&gt; key is equivalent, if the user is using a keyboard that defines a &lt;b&gt;Page Up&lt;/b&gt; key.</source>
          <target state="translated">&lt;code&gt;AdjustmentEvent.BLOCK_INCREMENT&lt;/code&gt; は、ユーザーがトラックをクリックしたとき、水平スクロールバーのバブルの左側、または垂直スクロールバーのバブルの上に送信されます。慣例により、ユーザーが&lt;b&gt;Page Up&lt;/b&gt;キーを定義するキーボードを使用している場合、&lt;b&gt;PageUp&lt;/b&gt;キーは同等です。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="47cfb25edb8ed4f28b2df1c22a61ba7e354ec068" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdjustmentEvent.BLOCK_INCREMENT&lt;/code&gt; replaces &lt;code&gt;Event.SCROLL_PAGE_UP&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AdjustmentEvent.BLOCK_INCREMENT&lt;/code&gt; 置き換え &lt;code&gt;Event.SCROLL_PAGE_UP&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09ae5663294cf60f9889409dcf77f2d37e2c6577" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdjustmentEvent.TRACK&lt;/code&gt; is sent out when the user drags the scroll bar's bubble.</source>
          <target state="translated">&lt;code&gt;AdjustmentEvent.TRACK&lt;/code&gt; ユーザーがスクロールバーのバブルをドラッグすると、AdjustmentEvent.TRACKが送信されます。</target>
        </trans-unit>
        <trans-unit id="1c86c97cc9dc5add40938f20eae9411dbf1f3025" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdjustmentEvent.TRACK&lt;/code&gt; replaces &lt;code&gt;Event.SCROLL_ABSOLUTE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AdjustmentEvent.TRACK&lt;/code&gt; 置き換え &lt;code&gt;Event.SCROLL_ABSOLUTE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26a7d23568210cff90bffb25faf146a23270aa85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdjustmentEvent.UNIT_DECREMENT&lt;/code&gt; is sent out when the user clicks in the right arrow of a horizontal scroll bar, or the bottom arrow of a vertical scroll bar, or makes the equivalent gesture from the keyboard.</source>
          <target state="translated">&lt;code&gt;AdjustmentEvent.UNIT_DECREMENT&lt;/code&gt; は、ユーザーが水平スクロールバーの右矢印、または垂直スクロールバーの下矢印をクリックするか、キーボードから同等のジェスチャを行うと送信されます。</target>
        </trans-unit>
        <trans-unit id="534fc81c3c84da2c9dac4ee3f8132d0de5a97db6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdjustmentEvent.UNIT_DECREMENT&lt;/code&gt; replaces &lt;code&gt;Event.SCROLL_LINE_DOWN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AdjustmentEvent.UNIT_DECREMENT&lt;/code&gt; 置き換え &lt;code&gt;Event.SCROLL_LINE_DOWN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="240ff24f50215047f58d50e089c0d49a6f7a8baa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdjustmentEvent.UNIT_INCREMENT&lt;/code&gt; is sent out when the user clicks in the left arrow of a horizontal scroll bar, or the top arrow of a vertical scroll bar, or makes the equivalent gesture from the keyboard.</source>
          <target state="translated">&lt;code&gt;AdjustmentEvent.UNIT_INCREMENT&lt;/code&gt; は、ユーザーが水平スクロールバーの左矢印、または垂直スクロールバーの上矢印をクリックするか、キーボードから同等のジェスチャを行うと送信されます。</target>
        </trans-unit>
        <trans-unit id="1210056228f2305f7ffda4185b922653f589de16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AdjustmentEvent.UNIT_INCREMENT&lt;/code&gt; replaces &lt;code&gt;Event.SCROLL_LINE_UP&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AdjustmentEvent.UNIT_INCREMENT&lt;/code&gt; 置き換え &lt;code&gt;Event.SCROLL_LINE_UP&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a18bcf29830b00d24c63e3c0fff8a56e3a37a057" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AlgorithmConstraints&lt;/code&gt; objects are immutable. An implementation of this interface should not provide methods that can change the state of an instance once it has been created.</source>
          <target state="translated">&lt;code&gt;AlgorithmConstraints&lt;/code&gt; オブジェクトは不変です。このインターフェイスの実装では、インスタンスが作成された後でインスタンスの状態を変更できるメソッドを提供しないでください。</target>
        </trans-unit>
        <trans-unit id="145edd6bff27102ac1252c0547d795348165bf33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AlphaComposite&lt;/code&gt; object that implements the opaque CLEAR rule with an alpha of 1.0f.</source>
          <target state="translated">&lt;code&gt;AlphaComposite&lt;/code&gt; アルファが1.0fの不透明なCLEARルールを実装するAlphaCompositeオブジェクト。</target>
        </trans-unit>
        <trans-unit id="abdeaa5dec730139fbe8457e35ecb9a55fbf7eca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AlphaComposite&lt;/code&gt; object that implements the opaque DST rule with an alpha of 1.0f.</source>
          <target state="translated">&lt;code&gt;AlphaComposite&lt;/code&gt; アルファが1.0fの不透明なDSTルールを実装するAlphaCompositeオブジェクト。</target>
        </trans-unit>
        <trans-unit id="f248c6b70c56285706dbe02284f341b59c1b81c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AlphaComposite&lt;/code&gt; object that implements the opaque DST_ATOP rule with an alpha of 1.0f.</source>
          <target state="translated">&lt;code&gt;AlphaComposite&lt;/code&gt; アルファが1.0fの不透明なDST_ATOPルールを実装するAlphaCompositeオブジェクト。</target>
        </trans-unit>
        <trans-unit id="491dc123038055f158e2dfedc6feb05d4bc1d4b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AlphaComposite&lt;/code&gt; object that implements the opaque DST_IN rule with an alpha of 1.0f.</source>
          <target state="translated">&lt;code&gt;AlphaComposite&lt;/code&gt; アルファが1.0fの不透明なDST_INルールを実装するAlphaCompositeオブジェクト。</target>
        </trans-unit>
        <trans-unit id="e3f9fa763452f92e47ea92be2b25b97e3d013b8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AlphaComposite&lt;/code&gt; object that implements the opaque DST_OUT rule with an alpha of 1.0f.</source>
          <target state="translated">&lt;code&gt;AlphaComposite&lt;/code&gt; アルファが1.0fの不透明なDST_OUTルールを実装するAlphaCompositeオブジェクト。</target>
        </trans-unit>
        <trans-unit id="f775f1a7a5064585ce9c4d2e7df12ff24fabe252" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AlphaComposite&lt;/code&gt; object that implements the opaque DST_OVER rule with an alpha of 1.0f.</source>
          <target state="translated">&lt;code&gt;AlphaComposite&lt;/code&gt; アルファが1.0fの不透明なDST_OVERルールを実装するAlphaCompositeオブジェクト。</target>
        </trans-unit>
        <trans-unit id="4f72db19e12de17c447ec7732bc61a768fb7af7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AlphaComposite&lt;/code&gt; object that implements the opaque SRC rule with an alpha of 1.0f.</source>
          <target state="translated">&lt;code&gt;AlphaComposite&lt;/code&gt; アルファが1.0fの不透明なSRCルールを実装するAlphaCompositeオブジェクト。</target>
        </trans-unit>
        <trans-unit id="46914f7d578fb0be48ce3d79931be2458b94f8d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AlphaComposite&lt;/code&gt; object that implements the opaque SRC_ATOP rule with an alpha of 1.0f.</source>
          <target state="translated">&lt;code&gt;AlphaComposite&lt;/code&gt; アルファが1.0fの不透明なSRC_ATOPルールを実装するAlphaCompositeオブジェクト。</target>
        </trans-unit>
        <trans-unit id="035a0f89a7692627ca994189b90f8710383d3381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AlphaComposite&lt;/code&gt; object that implements the opaque SRC_IN rule with an alpha of 1.0f.</source>
          <target state="translated">&lt;code&gt;AlphaComposite&lt;/code&gt; アルファが1.0fの不透明なSRC_INルールを実装するAlphaCompositeオブジェクト。</target>
        </trans-unit>
        <trans-unit id="1482c4c6cfd1457f26a9f91cd515f71a8ee0b2bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AlphaComposite&lt;/code&gt; object that implements the opaque SRC_OUT rule with an alpha of 1.0f.</source>
          <target state="translated">&lt;code&gt;AlphaComposite&lt;/code&gt; アルファが1.0fの不透明なSRC_OUTルールを実装するAlphaCompositeオブジェクト。</target>
        </trans-unit>
        <trans-unit id="184bb9d5fdaa56ef862b3fcfa6230594fc94a300" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AlphaComposite&lt;/code&gt; object that implements the opaque SRC_OVER rule with an alpha of 1.0f.</source>
          <target state="translated">&lt;code&gt;AlphaComposite&lt;/code&gt; アルファが1.0fの不透明なSRC_OVERルールを実装するAlphaCompositeオブジェクト。</target>
        </trans-unit>
        <trans-unit id="db0e4e68247eeea01713eba5edeee22a8fe12e1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AlphaComposite&lt;/code&gt; object that implements the opaque XOR rule with an alpha of 1.0f.</source>
          <target state="translated">&lt;code&gt;AlphaComposite&lt;/code&gt; アルファが1.0fの不透明なXORルールを実装するAlphaCompositeオブジェクト。</target>
        </trans-unit>
        <trans-unit id="53ef538ceb5c7619ced65db40121129444f0ddd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AnnotatedArrayType&lt;/code&gt; represents the potentially annotated use of an array type, whose component type may itself represent the annotated use of a type.</source>
          <target state="translated">&lt;code&gt;AnnotatedArrayType&lt;/code&gt; は、潜在的に注釈が付けられた配列型の使用を表します。そのコンポーネントタイプ自体が、注釈付きの型の使用を表す場合があります。</target>
        </trans-unit>
        <trans-unit id="3d3137ae0691f0500bd2ee63ca848159f846ed6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AnnotatedParameterizedType&lt;/code&gt; represents the potentially annotated use of a parameterized type, whose type arguments may themselves represent annotated uses of types.</source>
          <target state="translated">&lt;code&gt;AnnotatedParameterizedType&lt;/code&gt; は、パラメーター化された型の潜在的に注釈が付けられた使用を表します。その型引数自体が、注釈付きの型の使用を表す場合があります。</target>
        </trans-unit>
        <trans-unit id="d5bfd107370a39a7ac4fcd7bfd3e92a9517e33bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AnnotatedType&lt;/code&gt; represents the potentially annotated use of a type in the program currently running in this VM.</source>
          <target state="translated">&lt;code&gt;AnnotatedType&lt;/code&gt; は、このVMで現在実行されているプログラム内の型の潜在的に注釈が付けられた使用を表します。</target>
        </trans-unit>
        <trans-unit id="71bc216173a5b85b20013aa72e4f99a7a186b78a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AnnotatedType&lt;/code&gt; represents the potentially annotated use of a type in the program currently running in this VM. The use may be of any type in the Java programming language, including an array type, a parameterized type, a type variable, or a wildcard type.</source>
          <target state="translated">&lt;code&gt;AnnotatedType&lt;/code&gt; は、このVMで現在実行されているプログラム内の型の潜在的に注釈が付けられた使用を表します。配列型、パラメーター化された型、型変数、ワイルドカード型など、Javaプログラミング言語の任意の型を使用できます。</target>
        </trans-unit>
        <trans-unit id="ae4f69e059f7c176379b7814c6425d4cd555ac8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AnnotatedTypeVariable&lt;/code&gt; represents the potentially annotated use of a type variable, whose declaration may have bounds which themselves represent annotated uses of types.</source>
          <target state="translated">&lt;code&gt;AnnotatedTypeVariable&lt;/code&gt; は、注釈付きの型変数の使用を表します。その宣言には、注釈付きの型の使用を表す境界が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="61c5985d17eaa5516abd25c100d427aff33e8bc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AnnotatedWildcardType&lt;/code&gt; represents the potentially annotated use of a wildcard type argument, whose upper or lower bounds may themselves represent annotated uses of types.</source>
          <target state="translated">&lt;code&gt;AnnotatedWildcardType&lt;/code&gt; は、注釈付きのワイルドカード型引数の使用を表します。その上限または下限自体が、注釈付きの型の使用を表す場合があります。</target>
        </trans-unit>
        <trans-unit id="97b8a832252e731277a38c6838d5a3e225995f4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Applet&lt;/code&gt; objects are the validate roots, and, therefore, they override this method to return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Applet&lt;/code&gt; オブジェクトは検証ルートであるため、このメソッドをオーバーライドして &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c6ada910c2aaea1a14108c84962f6e6782450a29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Arc2D&lt;/code&gt; is the abstract superclass for all objects that store a 2D arc defined by a framing rectangle, start angle, angular extent (length of the arc), and a closure type (&lt;code&gt;OPEN&lt;/code&gt;, &lt;code&gt;CHORD&lt;/code&gt;, or &lt;code&gt;PIE&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Arc2D&lt;/code&gt; は、フレーミング長方形、開始角度、角度範囲（円弧の長さ）、およびクロージャータイプ（ &lt;code&gt;OPEN&lt;/code&gt; 、 &lt;code&gt;CHORD&lt;/code&gt; 、または &lt;code&gt;PIE&lt;/code&gt; ）によって定義される2D円弧を格納するすべてのオブジェクトの抽象スーパークラスです。</target>
        </trans-unit>
        <trans-unit id="1f9e32990f3a0e2dccf621ca6528c91ac7713246" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;ARRAY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; インターフェース &lt;code&gt;ARRAY&lt;/code&gt; マッピング</target>
        </trans-unit>
        <trans-unit id="a245758c4b49c7ce265b1c174f8515670e70b31f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&lt;/code&gt; permits widening conversions to occur during a get or set operation, but throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if a narrowing conversion would occur.</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; は、取得または設定操作中に拡大変換を行うことができますが、縮小変換が発生すると &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="95e2b32dd9b44679dbad831362d897a94c67b8d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&lt;/code&gt; provides static methods to dynamically create and access arrays.</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; は、配列を動的に作成してアクセスするための静的メソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="5bf5b1c5e7813019882b9cc919780a5cb0d5ff5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ArrayType.getArrayType(&lt;/code&gt;&lt;em&gt;opentype(E)&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ArrayType.getArrayType(&lt;/code&gt;&lt;em&gt;opentype(E)&lt;/em&gt;&lt;code&gt;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f5ac72367c1d694c10c46c084a69d671bd94ae6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ArrayType.getPrimitiveArrayType(int[].class)&lt;/code&gt; etc</source>
          <target state="translated">&lt;code&gt;ArrayType.getPrimitiveArrayType(int[].class)&lt;/code&gt; など</target>
        </trans-unit>
        <trans-unit id="1575e2aa48459414a197965f1eb07931ef572b3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Attr&lt;/code&gt; objects inherit the &lt;code&gt;Node&lt;/code&gt; interface, but since they are not actually child nodes of the element they describe, the DOM does not consider them part of the document tree. Thus, the &lt;code&gt;Node&lt;/code&gt; attributes &lt;code&gt;parentNode&lt;/code&gt;, &lt;code&gt;previousSibling&lt;/code&gt;, and &lt;code&gt;nextSibling&lt;/code&gt; have a &lt;code&gt;null&lt;/code&gt; value for &lt;code&gt;Attr&lt;/code&gt; objects. The DOM takes the view that attributes are properties of elements rather than having a separate identity from the elements they are associated with; this should make it more efficient to implement such features as default attributes associated with all elements of a given type. Furthermore, &lt;code&gt;Attr&lt;/code&gt; nodes may not be immediate children of a &lt;code&gt;DocumentFragment&lt;/code&gt;. However, they can be associated with &lt;code&gt;Element&lt;/code&gt; nodes contained within a &lt;code&gt;DocumentFragment&lt;/code&gt;. In short, users and implementors of the DOM need to be aware that &lt;code&gt;Attr&lt;/code&gt; nodes have some things in common with other objects inheriting the &lt;code&gt;Node&lt;/code&gt; interface, but they also are quite distinct.</source>
          <target state="translated">&lt;code&gt;Attr&lt;/code&gt; オブジェクトは &lt;code&gt;Node&lt;/code&gt; インターフェースを継承しますが、実際にはそれらが記述する要素の子ノードではないため、DOMはそれらをドキュメントツリーの一部とは見なしません。したがって、 &lt;code&gt;Node&lt;/code&gt; 属性 &lt;code&gt;parentNode&lt;/code&gt; 、 &lt;code&gt;previousSibling&lt;/code&gt; 、および &lt;code&gt;nextSibling&lt;/code&gt; は、 &lt;code&gt;Attr&lt;/code&gt; オブジェクトに対して &lt;code&gt;null&lt;/code&gt; 値を持ちます。 DOMは、属性は、関連付けられている要素とは別のIDを持つのではなく、要素のプロパティであるという見方をします。これにより、特定のタイプのすべての要素に関連付けられたデフォルト属性などの機能をより効率的に実装できるようになります。さらに、 &lt;code&gt;Attr&lt;/code&gt; ノードはの直接の子ではない可能性があります &lt;code&gt;DocumentFragment&lt;/code&gt; 。ただし、 &lt;code&gt;DocumentFragment&lt;/code&gt; 内に含まれる &lt;code&gt;Element&lt;/code&gt; ノードに関連付けることができます。要するに、DOMのユーザーと実装者は、 &lt;code&gt;Attr&lt;/code&gt; ノードには、 &lt;code&gt;Node&lt;/code&gt; インターフェイスを継承する他のオブジェクトといくつかの共通点があることに注意する必要がありますが、それらもまったく異なります。</target>
        </trans-unit>
        <trans-unit id="5cc895b4d2f08ea31e1d4a121fc8ea12ad75a8cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AttributeException&lt;/code&gt;. If one or more of the attributes are not valid for this print job.</source>
          <target state="translated">&lt;code&gt;AttributeException&lt;/code&gt; 。1つ以上の属性がこの印刷ジョブに対して有効でない場合。</target>
        </trans-unit>
        <trans-unit id="168ce6e8ae02c5a72fb08f1489458fd034f34a05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AudioFormat&lt;/code&gt; is the class that specifies a particular arrangement of data in a sound stream.</source>
          <target state="translated">&lt;code&gt;AudioFormat&lt;/code&gt; は、サウンドストリーム内のデータの特定の配置を指定するクラスです。</target>
        </trans-unit>
        <trans-unit id="362faf25fd05beb01ae766c84feb1268dbb49b3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AudioFormat&lt;/code&gt; is the class that specifies a particular arrangement of data in a sound stream. By examining the information stored in the audio format, you can discover how to interpret the bits in the binary sound data.</source>
          <target state="translated">&lt;code&gt;AudioFormat&lt;/code&gt; は、サウンドストリーム内のデータの特定の配置を指定するクラスです。オーディオ形式で格納されている情報を調べることにより、バイナリサウンドデータのビットを解釈する方法を見つけることができます。</target>
        </trans-unit>
        <trans-unit id="03c4d738e44e1c164702e1264a42cf37f852ed57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BOTH&lt;/code&gt;: Make the component fill its display area entirely.</source>
          <target state="translated">&lt;code&gt;BOTH&lt;/code&gt; ：コンポーネントを表示領域全体に塗りつぶします。</target>
        </trans-unit>
        <trans-unit id="f753ba3c31be735f708550324346993d16e38ac1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BasicListUI&lt;/code&gt; instances cannot be shared between multiple lists.</source>
          <target state="translated">&lt;code&gt;BasicListUI&lt;/code&gt; インスタンスを複数のリスト間で共有することはできません。</target>
        </trans-unit>
        <trans-unit id="6fae88031b3ec90e1029078bdf7db395a11f201d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BatchUpdateException&lt;/code&gt; -- thrown to indicate that not all commands in a batch update executed successfully</source>
          <target state="translated">&lt;code&gt;BatchUpdateException&lt;/code&gt; -バッチ更新のすべてのコマンドが正常に実行されたわけではないことを示すためにスローされます</target>
        </trans-unit>
        <trans-unit id="4c975beefbba8112db4bf7ef3d2221d683bd659f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BeanContextEvent&lt;/code&gt; is the abstract root event class for all events emitted from, and pertaining to the semantics of, a &lt;code&gt;BeanContext&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BeanContextEvent&lt;/code&gt; は、BeanContextから発行され、 &lt;code&gt;BeanContext&lt;/code&gt; のセマンティクスに関係するすべてのイベントの抽象ルートイベントクラスです。</target>
        </trans-unit>
        <trans-unit id="36a9fb2c0506ee304b7aab168194f4df978644b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BeanContextEvent&lt;/code&gt; is the abstract root event class for all events emitted from, and pertaining to the semantics of, a &lt;code&gt;BeanContext&lt;/code&gt;. This class introduces a mechanism to allow the propagation of &lt;code&gt;BeanContextEvent&lt;/code&gt; subclasses through a hierarchy of &lt;code&gt;BeanContext&lt;/code&gt;s. The &lt;code&gt;setPropagatedFrom()&lt;/code&gt; and &lt;code&gt;getPropagatedFrom()&lt;/code&gt; methods allow a &lt;code&gt;BeanContext&lt;/code&gt; to identify itself as the source of a propagated event.</source>
          <target state="translated">&lt;code&gt;BeanContextEvent&lt;/code&gt; は、BeanContextから発行され、 &lt;code&gt;BeanContext&lt;/code&gt; のセマンティクスに関係するすべてのイベントの抽象ルートイベントクラスです。このクラスは、 &lt;code&gt;BeanContext&lt;/code&gt; の階層を通じて &lt;code&gt;BeanContextEvent&lt;/code&gt; サブクラスの伝播を可能にするメカニズムを導入します。 &lt;code&gt;setPropagatedFrom()&lt;/code&gt; と &lt;code&gt;getPropagatedFrom()&lt;/code&gt; メソッドは、許可 &lt;code&gt;BeanContext&lt;/code&gt; 伝播イベントのソースとして自身を識別します。</target>
        </trans-unit>
        <trans-unit id="c604e8d9ca7d70c9550a3105d0deb75cdb83536e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BigDecimal(0)&lt;/code&gt; if &lt;code&gt;isParseBigDecimal()&lt;/code&gt; is true,</source>
          <target state="translated">&lt;code&gt;BigDecimal(0)&lt;/code&gt; 場合 &lt;code&gt;isParseBigDecimal()&lt;/code&gt; が真です、</target>
        </trans-unit>
        <trans-unit id="7b05336282e1f0d0e12ae7d3c8af86f2ca5692c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Blob&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;BLOB&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Blob&lt;/code&gt; インタフェース- SQLのマッピング &lt;code&gt;BLOB&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="603927b95bd15ef729966265a1a326f62f601fa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BlockingDeque&lt;/code&gt; methods come in four forms, with different ways of handling operations that cannot be satisfied immediately, but may be satisfied at some point in the future: one throws an exception, the second returns a special value (either &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, depending on the operation), the third blocks the current thread indefinitely until the operation can succeed, and the fourth blocks for only a given maximum time limit before giving up. These methods are summarized in the following table:</source>
          <target state="translated">&lt;code&gt;BlockingDeque&lt;/code&gt; メソッドには4つの形式があり、操作を処理するさまざまな方法があり、すぐには満たされませんが、将来のある時点で満たされる可能性があります。1つ目は例外をスローし、2つ目は特別な値（ &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; 、操作）、3番目は操作が成功するまで無期限に現在のスレッドをブロックし、4番目はあきらめる前に指定された最大時間制限の間だけブロックします。これらの方法を次の表にまとめます。</target>
        </trans-unit>
        <trans-unit id="ce34084471f102c2348f7852fe0edb3f9e5673a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BlockingQueue&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;BlockingQueue&lt;/code&gt; メソッド</target>
        </trans-unit>
        <trans-unit id="2f8783c366035686a35af36990bb207b46d1d851" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BlockingQueue&lt;/code&gt; implementations are designed to be used primarily for producer-consumer queues, but additionally support the &lt;a href=&quot;../collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; interface. So, for example, it is possible to remove an arbitrary element from a queue using &lt;code&gt;remove(x)&lt;/code&gt;. However, such operations are in general &lt;em&gt;not&lt;/em&gt; performed very efficiently, and are intended for only occasional use, such as when a queued message is cancelled.</source>
          <target state="translated">&lt;code&gt;BlockingQueue&lt;/code&gt; の実装は、主にプロデューサー/コンシューマーキューで使用するように設計されていますが、&lt;a href=&quot;../collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;インターフェイスもサポートしています。したがって、たとえば、 &lt;code&gt;remove(x)&lt;/code&gt; を使用してキューから任意の要素を削除することが可能です。ただし、このような操作は一般に非常に効率的に実行される&lt;em&gt;わけではなく&lt;/em&gt;、キューに入れられたメッセージがキャンセルされたときなど、たまにしか使用されません。</target>
        </trans-unit>
        <trans-unit id="004effc145e4ef8c12fc98f63c31749afd0b8d11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BlockingQueue&lt;/code&gt; implementations are thread-safe. All queuing methods achieve their effects atomically using internal locks or other forms of concurrency control. However, the &lt;em&gt;bulk&lt;/em&gt; Collection operations &lt;code&gt;addAll&lt;/code&gt;, &lt;code&gt;containsAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt; and &lt;code&gt;removeAll&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; necessarily performed atomically unless specified otherwise in an implementation. So it is possible, for example, for &lt;code&gt;addAll(c)&lt;/code&gt; to fail (throwing an exception) after adding only some of the elements in &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BlockingQueue&lt;/code&gt; の実装はスレッドセーフです。すべてのキューイングメソッドは、内部ロックまたは他の形式の同時実行制御を使用して、アトミックに効果を達成します。ただし、&lt;em&gt;一括&lt;/em&gt;コレクション操作 &lt;code&gt;addAll&lt;/code&gt; 、 &lt;code&gt;containsAll&lt;/code&gt; 、 &lt;code&gt;retainAll&lt;/code&gt; 、および &lt;code&gt;removeAll&lt;/code&gt; は、実装で特に指定されていない限り、必ずしもアトミックに実行されるとは限り&lt;em&gt;ません&lt;/em&gt;。そのため、たとえば、 &lt;code&gt;addAll(c)&lt;/code&gt; 一部の要素のみを追加した後、addAll（c）が失敗する（例外がスローされる）可能性があり &lt;code&gt;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="310e03213aa930b1139d39bc83ca73d3d88060cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BlockingQueue&lt;/code&gt; methods come in four forms, with different ways of handling operations that cannot be satisfied immediately, but may be satisfied at some point in the future: one throws an exception, the second returns a special value (either &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, depending on the operation), the third blocks the current thread indefinitely until the operation can succeed, and the fourth blocks for only a given maximum time limit before giving up. These methods are summarized in the following table:</source>
          <target state="translated">&lt;code&gt;BlockingQueue&lt;/code&gt; の特別な値（いずれか一方が例外をスローし、第二の戻り値：方法が直ちに満たすことができない操作を処理するさまざまな方法を用いて、4つの形式で来るが、将来のある時点で満たされてもよい &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; に応じて、操作）、3番目は操作が成功するまで無期限に現在のスレッドをブロックし、4番目はあきらめる前に指定された最大時間制限の間だけブロックします。これらの方法を次の表にまとめます。</target>
        </trans-unit>
        <trans-unit id="5b8d99ed4027dbd5272cb0784a794aaa434b8bc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Boolean&lt;/code&gt; -- &lt;code&gt;Boolean.class&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; - &lt;code&gt;Boolean.class&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9892baed39d93e49fa68a2d3357e899a0049ec6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Builder&lt;/code&gt; is used to build instances of &lt;code&gt;Locale&lt;/code&gt; from values configured by the setters.</source>
          <target state="translated">&lt;code&gt;Builder&lt;/code&gt; は、setterによって構成された値から &lt;code&gt;Locale&lt;/code&gt; のインスタンスを構築するために使用されます。</target>
        </trans-unit>
        <trans-unit id="0e4852d34c41c87665fa6a9662c4ddde2f873619" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Builder&lt;/code&gt; is used to build instances of &lt;code&gt;Locale&lt;/code&gt; from values configured by the setters. Unlike the &lt;code&gt;Locale&lt;/code&gt; constructors, the &lt;code&gt;Builder&lt;/code&gt; checks if a value configured by a setter satisfies the syntax requirements defined by the &lt;code&gt;Locale&lt;/code&gt; class. A &lt;code&gt;Locale&lt;/code&gt; object created by a &lt;code&gt;Builder&lt;/code&gt; is well-formed and can be transformed to a well-formed IETF BCP 47 language tag without losing information.</source>
          <target state="translated">&lt;code&gt;Builder&lt;/code&gt; は、セッターによって構成された値から &lt;code&gt;Locale&lt;/code&gt; インスタンスを構築するために使用されます。 &lt;code&gt;Locale&lt;/code&gt; コンストラクターとは異なり、 &lt;code&gt;Builder&lt;/code&gt; は、セッターによって構成された値が &lt;code&gt;Locale&lt;/code&gt; クラスによって定義された構文要件を満たすかどうかをチェックします。 &lt;code&gt;Locale&lt;/code&gt; によって作成されたオブジェクト &lt;code&gt;Builder&lt;/code&gt; よく形成され、情報を失うことなく、十分に形成されたIETF BCP 47言語タグに変換することができます。</target>
        </trans-unit>
        <trans-unit id="7cdd4f31e365cfaadc4fd2275a7b0ab564af8ef6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ButtonAreaLayout&lt;/code&gt; behaves in a similar manner to &lt;code&gt;FlowLayout&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ButtonAreaLayout&lt;/code&gt; は、 &lt;code&gt;FlowLayout&lt;/code&gt; と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="f8093cb5c04436b0935426c1762e3494f573a0a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ButtonAreaLayout&lt;/code&gt; behaves in a similar manner to &lt;code&gt;FlowLayout&lt;/code&gt;. It lays out all components from left to right. If &lt;code&gt;syncAllWidths&lt;/code&gt; is true, the widths of each component will be set to the largest preferred size width. This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of &lt;code&gt;BasicOptionPaneUI&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ButtonAreaLayout&lt;/code&gt; は、 &lt;code&gt;FlowLayout&lt;/code&gt; と同じように動作します。すべてのコンポーネントを左から右にレイアウトします。 &lt;code&gt;syncAllWidths&lt;/code&gt; がtrueの場合、各コンポーネントの幅は最大の推奨サイズ幅に設定されます。このクラスは、「保護された」内部クラスとして扱う必要があります。 &lt;code&gt;BasicOptionPaneUI&lt;/code&gt; のサブクラス内でのみインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="064e6ec38d49620f2b9c6ebc61cf84e2e564fca6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C&lt;/code&gt; - the type of the resulting &lt;code&gt;Collection&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; -結果の &lt;code&gt;Collection&lt;/code&gt; タイプ</target>
        </trans-unit>
        <trans-unit id="60bcbd991eca62349143326c2287a8674dfe2e73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C&lt;/code&gt; and &lt;code&gt;D&lt;/code&gt; are in the same module.</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; と &lt;code&gt;D&lt;/code&gt; は同じモジュールにあります。</target>
        </trans-unit>
        <trans-unit id="95f076cb37e03dbef5c7fec5b833600c69d8d4cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CDATAsections&lt;/code&gt; containing content characters that cannot be represented in the specified output encoding are handled according to the &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-split-cdata-sections&quot;&gt;split-cdata-sections&lt;/a&gt;&quot; parameter. If the parameter is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;CDATAsections&lt;/code&gt; are split, and the unrepresentable characters are serialized as numeric character references in ordinary content. The exact position and number of splits is not specified. If the parameter is set to &lt;code&gt;false&lt;/code&gt;, unrepresentable characters in a &lt;code&gt;CDATAsection&lt;/code&gt; are reported as &lt;code&gt;&quot;wf-invalid-character&quot;&lt;/code&gt; errors if the parameter &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-well-formed&quot;&gt;well-formed&lt;/a&gt;&quot; is set to &lt;code&gt;true&lt;/code&gt;. The error is not recoverable - there is no mechanism for supplying alternative characters and continuing with the serialization.</source>
          <target state="translated">&lt;code&gt;CDATAsections&lt;/code&gt; 指定された出力エンコーディングで表現できないコンテンツ文字を含むCDATAsectionは、「&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-split-cdata-sections&quot;&gt;split-cdata-sections&lt;/a&gt;」パラメーターに従って処理されます。パラメータが &lt;code&gt;true&lt;/code&gt; に設定されている場合、 &lt;code&gt;CDATAsections&lt;/code&gt; は分割され、表現できない文字は通常のコンテンツで数値文字参照としてシリアル化されます。分割の正確な位置と数は指定されていません。パラメータが &lt;code&gt;false&lt;/code&gt; に設定されている場合、パラメータ「&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-well-formed&quot;&gt;整形式&lt;/a&gt;」が &lt;code&gt;true&lt;/code&gt; に設定されていると、 &lt;code&gt;CDATAsection&lt;/code&gt; 表現できない文字は &lt;code&gt;&quot;wf-invalid-character&quot;&lt;/code&gt; エラーとして報告されます。。エラーは回復できません。代替文字を指定してシリアル化を続行するメカニズムはありません。</target>
        </trans-unit>
        <trans-unit id="85e1cb629a7a90add054acda78aa131853ae3956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CENTURIES&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of centuries added. This is equivalent to calling &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 100. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;CENTURIES&lt;/code&gt; -指定された世紀数が追加された &lt;code&gt;LocalDate&lt;/code&gt; を返します。これは、金額に100を掛けて&lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じです。日は、新しい月と年で無効にならない限り、変更されません。その場合、日は新しい月と年の最大有効値に調整されます。</target>
        </trans-unit>
        <trans-unit id="eae7d2ad3b2523116c528a59221494868982508a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CENTURIES&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of centuries added. This is equivalent to calling &lt;a href=&quot;localdate#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 100. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;CENTURIES&lt;/code&gt; -指定された世紀数が追加された &lt;code&gt;LocalDate&lt;/code&gt; を返します。これは、100を掛けた値で&lt;a href=&quot;localdate#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。新しい月と年で無効にならない限り、月の日は変更されません。その場合、日は新しい月と年の最大有効値に調整されます。</target>
        </trans-unit>
        <trans-unit id="fefdca125a14da82f280f9b0f25b0ada91f53d52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CENTURIES&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified number of centuries added. This is equivalent to calling &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 100.</source>
          <target state="translated">&lt;code&gt;CENTURIES&lt;/code&gt; -指定された世紀数が追加された &lt;code&gt;Year&lt;/code&gt; を返します。これは、金額に100を掛けて&lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="83178117384a3b5cf80c9a002a8694250ff3fa62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CENTURIES&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified number of centuries added. This is equivalent to calling &lt;a href=&quot;year#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 100.</source>
          <target state="translated">&lt;code&gt;CENTURIES&lt;/code&gt; -指定された世紀数が追加された &lt;code&gt;Year&lt;/code&gt; を返します。これは、100倍した量で&lt;a href=&quot;year#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="aa22ee02d87924ee5b5f246cbc8d19cf96d9a912" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CENTURIES&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of centuries added. This is equivalent to calling &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 100.</source>
          <target state="translated">&lt;code&gt;CENTURIES&lt;/code&gt; -指定された世紀数が追加された &lt;code&gt;YearMonth&lt;/code&gt; を返します。これは、金額に100を掛けて&lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="746cca5919e204394ed4aa906b1a3ed95a2fcece" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CENTURIES&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of centuries added. This is equivalent to calling &lt;a href=&quot;yearmonth#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 100.</source>
          <target state="translated">&lt;code&gt;CENTURIES&lt;/code&gt; -指定された世紀数が追加された &lt;code&gt;YearMonth&lt;/code&gt; を返します。これは、100倍した量で&lt;a href=&quot;yearmonth#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="218aa8deabdae6be7174a8a4d9280b5c2333af3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CHAR_REPLACEMENT&lt;/code&gt; uses &lt;code&gt;GraphicAttribute&lt;/code&gt; values. The subclasses &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; and &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; are not serializable.</source>
          <target state="translated">&lt;code&gt;CHAR_REPLACEMENT&lt;/code&gt; は &lt;code&gt;GraphicAttribute&lt;/code&gt; 値を使用します。サブクラス &lt;code&gt;ShapeGraphicAttribute&lt;/code&gt; および &lt;code&gt;ImageGraphicAttribute&lt;/code&gt; はシリアル化できません。</target>
        </trans-unit>
        <trans-unit id="c935a0816d64daa887fdca68f66a238d38803588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLOCK_HOUR_OF_AMPM&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified clock-hour-of-am-pm. The AM/PM, minute-of-hour, second-of-minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;CLOCK_HOUR_OF_AMPM&lt;/code&gt; -指定された午前時のクロックで &lt;code&gt;LocalTime&lt;/code&gt; を返します。AM / PM、分、秒、ナノ秒は変更されません。</target>
        </trans-unit>
        <trans-unit id="aeb028dd9ad8cc3666fc26bff13608ddcf6de751" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CLOCK_HOUR_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified clock-hour-of-day. The minute-of-hour, second-of-minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;CLOCK_HOUR_OF_DAY&lt;/code&gt; -指定された時刻で &lt;code&gt;LocalTime&lt;/code&gt; を返します。分、秒、ナノ秒は変更されません。</target>
        </trans-unit>
        <trans-unit id="cf90144323d3d5179c64c01b8db3a904bbd3140f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CODE = &lt;/code&gt;&lt;var&gt;class&lt;/var&gt;</source>
          <target state="translated">&lt;code&gt;CODE = &lt;/code&gt; &lt;var&gt;class&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="54a1adaa0fc4944d3a6a46b4721ca365d4762175" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CODE = &lt;/code&gt;&lt;var&gt;class&lt;/var&gt;&lt;code&gt; | OBJECT = &lt;/code&gt;&lt;var&gt;serfile&lt;/var&gt;</source>
          <target state="translated">&lt;code&gt;CODE = &lt;/code&gt; &lt;var&gt;class&lt;/var&gt; &lt;code&gt; | OBJECT = &lt;/code&gt; &lt;var&gt;serfile&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="56eceb7078dd82e2c3d96fdfe5cc986acb255eee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CODEBASE = &lt;/code&gt;&lt;var&gt;codebaseURL&lt;/var&gt;</source>
          <target state="translated">&lt;code&gt;CODEBASE = &lt;/code&gt; &lt;var&gt;codebaseURL&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="b07f59aa6792302c0936573d6fa1c00620552637" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COPY&lt;/code&gt; if the transfer property can be found, otherwise returns &lt;code&gt;NONE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;COPY&lt;/code&gt; 転送プロパティが見つかった場合はCOPY、それ以外の場合は &lt;code&gt;NONE&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="dc795d1208628abe37fdc5fa40d1234ca5538efc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CRIF&lt;/code&gt; - a ContextualRenderedImageFactory object</source>
          <target state="translated">&lt;code&gt;CRIF&lt;/code&gt; -ContextualRenderedImageFactoryオブジェクト</target>
        </trans-unit>
        <trans-unit id="e8d6c9a68efc55ee28c8847ba9fc691e1cb225b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Calendar.Builder&lt;/code&gt; is used for creating a &lt;code&gt;Calendar&lt;/code&gt; from various date-time parameters.</source>
          <target state="translated">&lt;code&gt;Calendar.Builder&lt;/code&gt; は、さまざまな日時パラメーターから &lt;code&gt;Calendar&lt;/code&gt; を作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="5718e3530d5c77637d9a11ede11873a21fe149f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Calendar&lt;/code&gt; defines a locale-specific seven day week using two parameters: the first day of the week and the minimal days in first week (from 1 to 7). These numbers are taken from the locale resource data or the locale itself when a &lt;code&gt;Calendar&lt;/code&gt; is constructed. If the designated locale contains &quot;fw&quot; and/or &quot;rg&quot; &lt;a href=&quot;locale#def_locale_extension&quot;&gt; Unicode extensions&lt;/a&gt;, the first day of the week will be obtained according to those extensions. If both &quot;fw&quot; and &quot;rg&quot; are specified, the value from the &quot;fw&quot; extension supersedes the implicit one from the &quot;rg&quot; extension. They may also be specified explicitly through the methods for setting their values.</source>
          <target state="translated">&lt;code&gt;Calendar&lt;/code&gt; は、週の最初の日と最初の週の最小日（1から7）の2つのパラメーターを使用して、ロケール固有の7日間の週を定義します。これらの番号は、 &lt;code&gt;Calendar&lt;/code&gt; が作成されるときに、ロケールリソースデータまたはロケール自体から取得されます。指定されたロケールに「fw」および/または「rg」&lt;a href=&quot;locale#def_locale_extension&quot;&gt;Unicode拡張子&lt;/a&gt;が含まれている場合、週の最初の日はそれらの拡張子に従って取得されます。 「fw」と「rg」の両方が指定されている場合、「fw」拡張子の値は「rg」拡張子の暗黙の値に優先します。それらは、値を設定するためのメソッドを介して明示的に指定することもできます。</target>
        </trans-unit>
        <trans-unit id="2ca7542382daade5e998fc0f4a2a9c11b0ecc788" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Calendar&lt;/code&gt; defines a locale-specific seven day week using two parameters: the first day of the week and the minimal days in first week (from 1 to 7). These numbers are taken from the locale resource data when a &lt;code&gt;Calendar&lt;/code&gt; is constructed. They may also be specified explicitly through the methods for setting their values.</source>
          <target state="translated">&lt;code&gt;Calendar&lt;/code&gt; は、週の最初の日と最初の週の最小日（1から7）の2つのパラメーターを使用して、ロケール固有の7日間の週を定義します。これらの数値は、 &lt;code&gt;Calendar&lt;/code&gt; 作成時にロケールリソースデータから取得されます。また、値を設定するメソッドを介して明示的に指定することもできます。</target>
        </trans-unit>
        <trans-unit id="e5127207356385aa4a2c182d9ecd0d2216d5114a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Calendar&lt;/code&gt; has two modes for interpreting the calendar fields, &lt;em&gt;lenient&lt;/em&gt; and &lt;em&gt;non-lenient&lt;/em&gt;. When a &lt;code&gt;Calendar&lt;/code&gt; is in lenient mode, it accepts a wider range of calendar field values than it produces. When a &lt;code&gt;Calendar&lt;/code&gt; recomputes calendar field values for return by &lt;code&gt;get()&lt;/code&gt;, all of the calendar fields are normalized. For example, a lenient &lt;code&gt;GregorianCalendar&lt;/code&gt; interprets &lt;code&gt;MONTH == JANUARY&lt;/code&gt;, &lt;code&gt;DAY_OF_MONTH == 32&lt;/code&gt; as February 1.</source>
          <target state="translated">&lt;code&gt;Calendar&lt;/code&gt; には、カレンダーフィールドを解釈するための2つのモード、&lt;em&gt;lenient&lt;/em&gt;および&lt;em&gt;non-lenientがあり&lt;/em&gt;ます。 &lt;code&gt;Calendar&lt;/code&gt; が寛大なモードの場合、Calendarは生成するよりも広い範囲のカレンダーフィールド値を受け入れます。とき &lt;code&gt;Calendar&lt;/code&gt; による返品のためのカレンダフィールド値を再計算 &lt;code&gt;get()&lt;/code&gt; 、カレンダーのすべてのフィールドが正規化されています。たとえば、寛大な &lt;code&gt;GregorianCalendar&lt;/code&gt; は &lt;code&gt;MONTH == JANUARY&lt;/code&gt; 、 &lt;code&gt;DAY_OF_MONTH == 32&lt;/code&gt; を2月1日と解釈します。</target>
        </trans-unit>
        <trans-unit id="88359fc7e219586f0692c019146f59cd19951371" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CallSite&lt;/code&gt; is an abstract class which does not allow direct subclassing by users. It has three immediate, concrete subclasses that may be either instantiated or subclassed.</source>
          <target state="translated">&lt;code&gt;CallSite&lt;/code&gt; は、ユーザーによる直接のサブクラス化を許可しない抽象クラスです。これには、インスタンス化またはサブクラス化できる3つの直接的な具象サブクラスがあります。</target>
        </trans-unit>
        <trans-unit id="97eb143296cc3297aad873dfbc31dbbc43c0e66a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CallableStatement&lt;/code&gt; -- used to call database stored procedures (derived from &lt;code&gt;PreparedStatement&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;CallableStatement&lt;/code&gt; -データベースのストアドプロシージャ（ &lt;code&gt;PreparedStatement&lt;/code&gt; から派生）を呼び出すために使用されます</target>
        </trans-unit>
        <trans-unit id="42d1c60e8ac6d8fb0774ce32c48822d5f85c32b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Callback&lt;/code&gt; implementations do not retrieve or display the information requested by underlying security services. &lt;code&gt;Callback&lt;/code&gt; implementations simply provide the means to pass such requests to applications, and for applications, if appropriate, to return requested information back to the underlying security services.</source>
          <target state="translated">&lt;code&gt;Callback&lt;/code&gt; 実装は、基礎となるセキュリティサービスによって要求された情報を取得または表示しません。 &lt;code&gt;Callback&lt;/code&gt; 実装は、そのような要求をアプリケーションに渡し、必要に応じてアプリケーションが要求された情報を基盤のセキュリティサービスに返すための手段を提供するだけです。</target>
        </trans-unit>
        <trans-unit id="4fe7f205f77f28077c63aa6a4c67e5a2e0083fcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CertPath&lt;/code&gt; objects can be created with a &lt;code&gt;CertificateFactory&lt;/code&gt; or they can be returned by other classes, such as a &lt;code&gt;CertPathBuilder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CertPath&lt;/code&gt; オブジェクトは &lt;code&gt;CertificateFactory&lt;/code&gt; で作成するか、 &lt;code&gt;CertPathBuilder&lt;/code&gt; などの他のクラスから返すことができます。</target>
        </trans-unit>
        <trans-unit id="88cc4cff9552e8269ed54a43985a281353bdaa2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChangeListener&lt;/code&gt; installed on the horizontal scrollbar.</source>
          <target state="translated">&lt;code&gt;ChangeListener&lt;/code&gt; は、水平スクロールバーの上にインストールされています。</target>
        </trans-unit>
        <trans-unit id="7c7216595b0f3753d7db9bbc63800b096975dc9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChangeListener&lt;/code&gt; installed on the vertical scrollbar.</source>
          <target state="translated">&lt;code&gt;ChangeListener&lt;/code&gt; は、垂直スクロールバーの上にインストールされています。</target>
        </trans-unit>
        <trans-unit id="33348eda304f889161b104bc2bd3643bbd98f447" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChangeListener&lt;/code&gt; installed on the viewport.</source>
          <target state="translated">&lt;code&gt;ChangeListener&lt;/code&gt; は、ビューポートにインストールされています。</target>
        </trans-unit>
        <trans-unit id="c41d2ca9f5b139e42d3bbccc38e9d3a511002ffb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChronoField&lt;/code&gt; instances are resolved by this method, which may be overridden in subclasses.</source>
          <target state="translated">&lt;code&gt;ChronoField&lt;/code&gt; インスタンスはこのメソッドによって解決され、サブクラスでオーバーライドされる場合があります。</target>
        </trans-unit>
        <trans-unit id="c971309be2aacfec6d959f5350eff487daa230ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChronoField&lt;/code&gt; instances on the ISO calendar system are resolved as follows.</source>
          <target state="translated">&lt;code&gt;ChronoField&lt;/code&gt; ISOカレンダーシステムのChronoFieldインスタンスは、次のように解決されます。</target>
        </trans-unit>
        <trans-unit id="fcc4ff34db6ff1d75435610f8727fa92fb0778e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChronoLocalDate&lt;/code&gt; returns &lt;code&gt;DAYS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ChronoLocalDate&lt;/code&gt; は &lt;code&gt;DAYS&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="1dde05fb16c440a7fde17cf7d7016ac8d3975904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChronoLocalDate&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;ChronoLocalDate&lt;/code&gt; がnullを返す</target>
        </trans-unit>
        <trans-unit id="b43f0d4085e9ce5f0f7c2e26f8d7bb10ecbbb817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChronoLocalDate&lt;/code&gt; returns the associated chronology</source>
          <target state="translated">&lt;code&gt;ChronoLocalDate&lt;/code&gt; は、関連する年表を返します</target>
        </trans-unit>
        <trans-unit id="eeed14558ccc55e652e67703e1802d1a2df62e5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChronoLocalDateTime&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ChronoLocalDateTime&lt;/code&gt; は返し &lt;code&gt;NANOS&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="e4a5693754b69ba9360d07d4db32c5037e2b2d75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChronoLocalDateTime&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;ChronoLocalDateTime&lt;/code&gt; がnullを返す</target>
        </trans-unit>
        <trans-unit id="db145ce58d2e0d2358525bb6c0bf98a05796c280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChronoLocalDateTime&lt;/code&gt; returns the associated chronology</source>
          <target state="translated">&lt;code&gt;ChronoLocalDateTime&lt;/code&gt; は、関連する年表を返します</target>
        </trans-unit>
        <trans-unit id="d768fff00703495fdef4824862198c7feb4fea79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChronoZonedDateTime&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ChronoZonedDateTime&lt;/code&gt; は &lt;code&gt;NANOS&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="ade2b5a936a8a3b29ca55eff27e3f4c12cbb343f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChronoZonedDateTime&lt;/code&gt; returns the associated chronology</source>
          <target state="translated">&lt;code&gt;ChronoZonedDateTime&lt;/code&gt; は関連する年代順を返します</target>
        </trans-unit>
        <trans-unit id="b367d94912db16aeea6c821e36b05ac8e506c59b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChronoZonedDateTime&lt;/code&gt; returns the associated zone</source>
          <target state="translated">&lt;code&gt;ChronoZonedDateTime&lt;/code&gt; は関連付けられたゾーンを返します</target>
        </trans-unit>
        <trans-unit id="5a813fb9798eaf9cc896964f4b8a039974596278" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class&lt;/code&gt; has no public constructor. Instead &lt;code&gt;Class&lt;/code&gt; objects are constructed automatically by the Java Virtual Machine as classes are loaded and by calls to the &lt;code&gt;defineClass&lt;/code&gt; method in the class loader.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; はパブリックコンストラクタがありません。代わりに、クラスがロードされるときにJava仮想マシンによって、およびクラスローダーの &lt;code&gt;defineClass&lt;/code&gt; メソッドの呼び出しによって、 &lt;code&gt;Class&lt;/code&gt; オブジェクトが自動的に構築されます。</target>
        </trans-unit>
        <trans-unit id="527961029cd05d9242fbe2bb8162751fabb946d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class&lt;/code&gt; has no public constructor. Instead a &lt;code&gt;Class&lt;/code&gt; object is constructed automatically by the Java Virtual Machine when a class loader invokes one of the &lt;a href=&quot;classloader#defineClass(java.lang.String,byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/a&gt; methods and passes the bytes of a &lt;code&gt;class&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; はパブリックコンストラクタがありません。代わりに、クラスローダーが&lt;a href=&quot;classloader#defineClass(java.lang.String,byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;defineClass&lt;/code&gt; &lt;/a&gt;メソッドの1つを呼び出し、 &lt;code&gt;class&lt;/code&gt; ファイルのバイトを渡すと、 &lt;code&gt;Class&lt;/code&gt; オブジェクトがJava仮想マシンによって自動的に構築されます。</target>
        </trans-unit>
        <trans-unit id="ac4ffca27e41aaa59e8b5d6c1f7b48727c03bb76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class&lt;/code&gt; object of the caller's caller invoking this method.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; このメソッドを呼び出す呼び出し元の呼び出し元のクラスオブジェクト。</target>
        </trans-unit>
        <trans-unit id="272f2eee89333da2cb81eae8e5a11834cc6fc90c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class&lt;/code&gt; object of the given name defined in the given module; &lt;code&gt;null&lt;/code&gt; if not found.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 指定されたモジュールで定義された指定された名前のクラスオブジェクト。見つからない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d62170e4d6cd66c36fab837d4bdea6f45bfdcf37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class&lt;/code&gt; objects for array classes are not created by class loaders, but are created automatically as required by the Java runtime. The class loader for an array class, as returned by &lt;a href=&quot;class#getClassLoader()&quot;&gt;&lt;code&gt;Class.getClassLoader()&lt;/code&gt;&lt;/a&gt; is the same as the class loader for its element type; if the element type is a primitive type, then the array class has no class loader.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 配列クラスのクラスオブジェクトは、クラスローダーによって作成されませんが、Javaランタイムの必要に応じて自動的に作成されます。&lt;a href=&quot;class#getClassLoader()&quot;&gt; &lt;code&gt;Class.getClassLoader()&lt;/code&gt; &lt;/a&gt;によって返される配列クラスのクラスローダーは、その要素タイプのクラスローダーと同じです。要素型がプリミティブ型の場合、配列クラスにはクラスローダーがありません。</target>
        </trans-unit>
        <trans-unit id="7bcfe38d05d89af3066dc2094e7ee4be14a36b07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class&lt;/code&gt; objects for array classes are not created by class loaders, but are created automatically as required by the Java runtime. The class loader for an array class, as returned by &lt;a href=&quot;class#getClassLoader--&quot;&gt;&lt;code&gt;Class.getClassLoader()&lt;/code&gt;&lt;/a&gt; is the same as the class loader for its element type; if the element type is a primitive type, then the array class has no class loader.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 配列クラスのクラスオブジェクトはクラスローダーでは作成されませんが、Javaランタイムの必要に応じて自動的に作成されます。&lt;a href=&quot;class#getClassLoader--&quot;&gt; &lt;code&gt;Class.getClassLoader()&lt;/code&gt; &lt;/a&gt;によって返される配列クラスのクラスローダーは、その要素型のクラスローダーと同じです。要素タイプがプリミティブタイプの場合、配列クラスにはクラスローダーがありません。</target>
        </trans-unit>
        <trans-unit id="7df1490d0c0b286cbe2611c755c2516a12e95761" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cleanable&lt;/code&gt; represents an object and a cleaning action registered in a &lt;code&gt;Cleaner&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Cleanable&lt;/code&gt; は、 &lt;code&gt;Cleaner&lt;/code&gt; 登録されているオブジェクトとクリーニングアクションを表します。</target>
        </trans-unit>
        <trans-unit id="c8fa2599184704e2a54f756123570b8bf7fbe426" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cleaner&lt;/code&gt; manages a set of object references and corresponding cleaning actions.</source>
          <target state="translated">&lt;code&gt;Cleaner&lt;/code&gt; は、一連のオブジェクト参照と対応するクリーニングアクションを管理します。</target>
        </trans-unit>
        <trans-unit id="d1bb60e45b3b437a58aecbf19713d6442b3ff733" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Clob&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;CLOB&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Clob&lt;/code&gt; インタフェース- SQLのためのマッピング &lt;code&gt;CLOB&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fee64685c1d0feec8ef2a2ec520324a38175e864" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollationElementIterator.next&lt;/code&gt; returns the collation order of the next character. A collation order consists of primary order, secondary order and tertiary order. The data type of the collation order is &lt;strong&gt;int&lt;/strong&gt;. The first 16 bits of a collation order is its primary order; the next 8 bits is the secondary order and the last 8 bits is the tertiary order.</source>
          <target state="translated">&lt;code&gt;CollationElementIterator.next&lt;/code&gt; は、次の文字の照合順序を返します。照合順序は、1次、2次、および3次で構成されます。照合順序のデータ型は&lt;strong&gt;int&lt;/strong&gt;です。照合順序の最初の16ビットは、その主要な順序です。次の8ビットは2次で、最後の8ビットは3次です。</target>
        </trans-unit>
        <trans-unit id="f49913331383e74114ae2a2d9fee6feea9e5aae3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Collator&lt;/code&gt; is an abstract base class. Subclasses implement specific collation strategies. One subclass, &lt;code&gt;RuleBasedCollator&lt;/code&gt;, is currently provided with the Java Platform and is applicable to a wide set of languages. Other subclasses may be created to handle more specialized needs.</source>
          <target state="translated">&lt;code&gt;Collator&lt;/code&gt; は抽象基本クラスです。サブクラスは特定の照合戦略を実装します。1つのサブクラス &lt;code&gt;RuleBasedCollator&lt;/code&gt; 、現在Javaプラットフォームで提供されており、幅広い言語のセットに適用できます。より特殊なニーズに対応するために、他のサブクラスが作成される場合があります。</target>
        </trans-unit>
        <trans-unit id="00d6012e049f78fc92e5327aa25ccef8ca068a7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ColorModel&lt;/code&gt; is an abstract class that encapsulates the ability to translate between the pixel values of an image and its red, green, blue, and alpha components.</source>
          <target state="translated">&lt;code&gt;ColorModel&lt;/code&gt; は、画像のピクセル値とその赤、緑、青、およびアルファコンポーネントの間で変換する機能をカプセル化する抽象クラスです。</target>
        </trans-unit>
        <trans-unit id="6920c21f3ad779f9d7cf257ba22b7a206b387e8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ColorModel&lt;/code&gt; objects used with images for which pixel values are not conveniently representable as a single int throw an &lt;a href=&quot;../../../../java.base/java/lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; when methods taking a single int pixel argument are called. Subclasses of &lt;code&gt;ColorModel&lt;/code&gt; must specify the conditions under which this occurs. This does not occur with &lt;a href=&quot;directcolormodel&quot;&gt;&lt;code&gt;DirectColorModel&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;indexcolormodel&quot;&gt;&lt;code&gt;IndexColorModel&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;code&gt;ColorModel&lt;/code&gt; ピクセル値が単一のintとして便利に表現できない画像で使用されるColorModelオブジェクトは、単一のintピクセル引数を取るメソッドが呼び出されたときに&lt;a href=&quot;../../../../java.base/java/lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; を&lt;/a&gt;スローします。 &lt;code&gt;ColorModel&lt;/code&gt; のサブクラスは、これが発生する条件を指定する必要があります。これは、&lt;a href=&quot;directcolormodel&quot;&gt; &lt;code&gt;DirectColorModel&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;indexcolormodel&quot;&gt; &lt;code&gt;IndexColorModel&lt;/code&gt; &lt;/a&gt;オブジェクトでは発生しません。</target>
        </trans-unit>
        <trans-unit id="09dcb96489f1322bb745a0b8a43e3bd236aa8805" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ColorSpace&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;ColorSpace&lt;/code&gt; タイプ。</target>
        </trans-unit>
        <trans-unit id="a742d5c97857d7093ceb7514d93e22fba4a20752" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CompletableFuture&lt;/code&gt;s returned by this API will throw &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; for their &lt;a href=&quot;../../../../java.base/java/util/concurrent/completablefuture#obtrudeValue(T)&quot;&gt;&lt;code&gt;obtrudeValue&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../../java.base/java/util/concurrent/completablefuture#obtrudeException(java.lang.Throwable)&quot;&gt;&lt;code&gt;obtrudeException&lt;/code&gt;&lt;/a&gt; methods. Invoking the &lt;a href=&quot;../../../../java.base/java/util/concurrent/completablefuture#cancel(boolean)&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method on a &lt;code&gt;CompletableFuture&lt;/code&gt; returned by this API may not interrupt the underlying operation, but may be useful to complete, exceptionally, dependent stages that have not already completed.</source>
          <target state="translated">&lt;code&gt;CompletableFuture&lt;/code&gt; このAPIによって返さsがスローされます&lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; が&lt;/a&gt;彼らのために&lt;a href=&quot;../../../../java.base/java/util/concurrent/completablefuture#obtrudeValue(T)&quot;&gt; &lt;code&gt;obtrudeValue&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../../../java.base/java/util/concurrent/completablefuture#obtrudeException(java.lang.Throwable)&quot;&gt; &lt;code&gt;obtrudeException&lt;/code&gt; &lt;/a&gt;方法。起動&lt;a href=&quot;../../../../java.base/java/util/concurrent/completablefuture#cancel(boolean)&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt;に方法を &lt;code&gt;CompletableFuture&lt;/code&gt; このAPIかもしれない割り込み基本となる操作によって返されたが、まだ完了していない、非常に、依存段階を完了するために有用である可能性があります。</target>
        </trans-unit>
        <trans-unit id="3ab9e3a0e71f5b05b462e2cb42190b3d7b9a0eed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CompletionStage&lt;/code&gt;s returned from the receive methods have nothing to do with the &lt;a href=&quot;websocket#counter&quot;&gt;counter of invocations&lt;/a&gt;. Namely, a &lt;code&gt;CompletionStage&lt;/code&gt; does not have to be completed in order to receive more invocations of the listener's methods. Here is an example of a listener that requests invocations, one at a time, until a complete message has been accumulated, then processes the result, and completes the &lt;code&gt;CompletionStage&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;CompletionStage&lt;/code&gt; receiveメソッドから返されるCompletionStage&lt;a href=&quot;websocket#counter&quot;&gt;は、呼び出し&lt;/a&gt;のカウンターとは何の関係もありません。つまり、リスナーのメソッドの呼び出しをさらに受信するために、 &lt;code&gt;CompletionStage&lt;/code&gt; を完了する必要はありません。これは、完全なメッセージが蓄積されるまで一度に1つずつ呼び出しを要求し、その結果を処理して &lt;code&gt;CompletionStage&lt;/code&gt; を完了するリスナーの例です。</target>
        </trans-unit>
        <trans-unit id="d3ae5cc90f5f40f591817ba3b1dc1630e0249d34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ComponentPlacement&lt;/code&gt; is an enumeration of the possible ways two components can be placed relative to each other.</source>
          <target state="translated">&lt;code&gt;ComponentPlacement&lt;/code&gt; は、2つのコンポーネントを相互に相対的に配置できる方法の列挙です。</target>
        </trans-unit>
        <trans-unit id="885539a102340f6b28a858a7f51e549c7e8c7ab5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ComponentPlacement&lt;/code&gt; is an enumeration of the possible ways two components can be placed relative to each other. &lt;code&gt;ComponentPlacement&lt;/code&gt; is used by the &lt;code&gt;LayoutStyle&lt;/code&gt; method &lt;code&gt;getPreferredGap&lt;/code&gt;. Refer to &lt;code&gt;LayoutStyle&lt;/code&gt; for more information.</source>
          <target state="translated">&lt;code&gt;ComponentPlacement&lt;/code&gt; は、2つのコンポーネントを相互に相対的に配置できる方法の列挙です。 &lt;code&gt;ComponentPlacement&lt;/code&gt; は、 &lt;code&gt;LayoutStyle&lt;/code&gt; メソッド &lt;code&gt;getPreferredGap&lt;/code&gt; によって使用されます。詳細については、 &lt;code&gt;LayoutStyle&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="c271254218dcdf9adbc2a305ea75769a310cab09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ComponentUI&lt;/code&gt; implementations should use the various install methods provided by this class as they handle the necessary checking and install the property using the recommended guidelines.</source>
          <target state="translated">&lt;code&gt;ComponentUI&lt;/code&gt; 実装は、必要なチェックを処理し、推奨ガイドラインを使用してプロパティをインストールするため、このクラスによって提供されるさまざまなインストールメソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="0f44e02b525451ff1346f416e996f0a2f33938a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CompositeData&lt;/code&gt; is an interface. The concrete class that is used to represent a type as Open Data is &lt;a href=&quot;openmbean/compositedatasupport&quot;&gt;&lt;code&gt;CompositeDataSupport&lt;/code&gt;&lt;/a&gt;, or another class implementing &lt;code&gt;
      CompositeData&lt;/code&gt; that serializes as &lt;code&gt;
      CompositeDataSupport&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CompositeData&lt;/code&gt; はインターフェースです。オープンデータとして型を表すために使用される具象クラスは、&lt;a href=&quot;openmbean/compositedatasupport&quot;&gt; &lt;code&gt;CompositeDataSupport&lt;/code&gt; &lt;/a&gt;、または &lt;code&gt; CompositeData&lt;/code&gt; Supportとしてシリアル化される &lt;code&gt; CompositeDataSupport&lt;/code&gt; 実装する別のクラスです。</target>
        </trans-unit>
        <trans-unit id="fb1abd3486e9626e1874f98f5a43f27408ec3def" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CompositeData&lt;/code&gt; is an interface. The concrete class that is used to represent a type as Open Data is &lt;a href=&quot;openmbean/compositedatasupport&quot;&gt;&lt;code&gt;CompositeDataSupport&lt;/code&gt;&lt;/a&gt;, or another class implementing &lt;code&gt;CompositeData&lt;/code&gt; that serializes as &lt;code&gt;CompositeDataSupport&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CompositeData&lt;/code&gt; はインターフェースです。オープンデータであるようなタイプを表すために使用される具体的なクラス&lt;a href=&quot;openmbean/compositedatasupport&quot;&gt; &lt;code&gt;CompositeDataSupport&lt;/code&gt; &lt;/a&gt;、または実装別のクラス &lt;code&gt;CompositeData&lt;/code&gt; ように直列化 &lt;code&gt;CompositeDataSupport&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e374cbf873c6ebecd9ebd849849cb40a42859175" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CompositeView&lt;/code&gt; is an abstract &lt;code&gt;View&lt;/code&gt; implementation which manages one or more child views.</source>
          <target state="translated">&lt;code&gt;CompositeView&lt;/code&gt; は、1つ以上の子ビューを管理する抽象 &lt;code&gt;View&lt;/code&gt; 実装です。</target>
        </trans-unit>
        <trans-unit id="9b81db9d426514e5b3b18e6f405d3cd4e0108353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CompositeView&lt;/code&gt; is an abstract &lt;code&gt;View&lt;/code&gt; implementation which manages one or more child views. (Note that &lt;code&gt;CompositeView&lt;/code&gt; is intended for managing relatively small numbers of child views.) &lt;code&gt;CompositeView&lt;/code&gt; is intended to be used as a starting point for &lt;code&gt;View&lt;/code&gt; implementations, such as &lt;code&gt;BoxView&lt;/code&gt;, that will contain child &lt;code&gt;View&lt;/code&gt;s. Subclasses that wish to manage the collection of child &lt;code&gt;View&lt;/code&gt;s should use the &lt;a href=&quot;#replace(int,int,javax.swing.text.View%5B%5D)&quot;&gt;&lt;code&gt;replace(int, int, javax.swing.text.View[])&lt;/code&gt;&lt;/a&gt; method. As &lt;code&gt;View&lt;/code&gt; invokes &lt;code&gt;replace&lt;/code&gt; during &lt;code&gt;DocumentListener&lt;/code&gt; notification, you normally won't need to directly invoke &lt;code&gt;replace&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CompositeView&lt;/code&gt; は、1つ以上の子ビューを管理する抽象 &lt;code&gt;View&lt;/code&gt; 実装です。（ &lt;code&gt;CompositeView&lt;/code&gt; は、比較的少数の子ビューを管理することを目的としています。） &lt;code&gt;CompositeView&lt;/code&gt; は、子 &lt;code&gt;View&lt;/code&gt; を含む &lt;code&gt;BoxView&lt;/code&gt; などの &lt;code&gt;View&lt;/code&gt; 実装の開始点として使用することを目的としています。子 &lt;code&gt;View&lt;/code&gt; のコレクションを管理するサブクラスは、&lt;a href=&quot;#replace(int,int,javax.swing.text.View%5B%5D)&quot;&gt; &lt;code&gt;replace(int, int, javax.swing.text.View[])&lt;/code&gt; &lt;/a&gt;メソッドを使用する必要があります。 &lt;code&gt;View&lt;/code&gt; 呼び出すが &lt;code&gt;replace&lt;/code&gt; 時の &lt;code&gt;DocumentListener&lt;/code&gt; の通知は、通常、直接呼び出す必要はありません。 &lt;code&gt;replace&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="2d422c242483b5c65951feb937293577554e3099" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ConcurrentModificationException&lt;/code&gt; should be used only to detect bugs.</source>
          <target state="translated">&lt;code&gt;ConcurrentModificationException&lt;/code&gt; は、バグを検出するためにのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="9405d9eb1d2e107fb5bfbfbf4ec371abb8cc2e1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Condition&lt;/code&gt; factors out the &lt;code&gt;Object&lt;/code&gt; monitor methods (&lt;a href=&quot;../../../lang/object#wait()&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../lang/object#notify()&quot;&gt;&lt;code&gt;notify&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../lang/object#notifyAll()&quot;&gt;&lt;code&gt;notifyAll&lt;/code&gt;&lt;/a&gt;) into distinct objects to give the effect of having multiple wait-sets per object, by combining them with the use of arbitrary &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; implementations.</source>
          <target state="translated">&lt;code&gt;Condition&lt;/code&gt; は、 &lt;code&gt;Object&lt;/code&gt; モニターメソッド（&lt;a href=&quot;../../../lang/object#wait()&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../lang/object#notify()&quot;&gt; &lt;code&gt;notify&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../lang/object#notifyAll()&quot;&gt; &lt;code&gt;notifyAll&lt;/code&gt; &lt;/a&gt;）を個別のオブジェクトに分解し、任意の&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;実装を使用してそれらを組み合わせることにより、オブジェクトごとに複数の待機セットを持つ効果を与えます。</target>
        </trans-unit>
        <trans-unit id="d65a852b7db552c89abd0abf9e46add09572ebe6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Condition&lt;/code&gt; factors out the &lt;code&gt;Object&lt;/code&gt; monitor methods (&lt;a href=&quot;../../../lang/object#wait()&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../lang/object#notify()&quot;&gt;&lt;code&gt;notify&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../lang/object#notifyAll()&quot;&gt;&lt;code&gt;notifyAll&lt;/code&gt;&lt;/a&gt;) into distinct objects to give the effect of having multiple wait-sets per object, by combining them with the use of arbitrary &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; implementations. Where a &lt;code&gt;Lock&lt;/code&gt; replaces the use of &lt;code&gt;synchronized&lt;/code&gt; methods and statements, a &lt;code&gt;Condition&lt;/code&gt; replaces the use of the Object monitor methods.</source>
          <target state="translated">&lt;code&gt;Condition&lt;/code&gt; は、 &lt;code&gt;Object&lt;/code&gt; モニターメソッド（&lt;a href=&quot;../../../lang/object#wait()&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../lang/object#notify()&quot;&gt; &lt;code&gt;notify&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../lang/object#notifyAll()&quot;&gt; &lt;code&gt;notifyAll&lt;/code&gt; &lt;/a&gt;）を個別のオブジェクトに分解し、任意の&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;実装を使用してそれらを組み合わせることにより、オブジェクトごとに複数の待機セットを持つ効果を与えます。ここで、 &lt;code&gt;Lock&lt;/code&gt; の使用代わる &lt;code&gt;synchronized&lt;/code&gt; メソッドや文を、 &lt;code&gt;Condition&lt;/code&gt; オブジェクトのモニタ方法の使用を置き換えます。</target>
        </trans-unit>
        <trans-unit id="c11e0f633fc25b9e315cae8660b7a3b9d4c4e3e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Condition&lt;/code&gt; factors out the &lt;code&gt;Object&lt;/code&gt; monitor methods (&lt;a href=&quot;../../../lang/object#wait--&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../lang/object#notify--&quot;&gt;&lt;code&gt;notify&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../lang/object#notifyAll--&quot;&gt;&lt;code&gt;notifyAll&lt;/code&gt;&lt;/a&gt;) into distinct objects to give the effect of having multiple wait-sets per object, by combining them with the use of arbitrary &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; implementations.</source>
          <target state="translated">&lt;code&gt;Condition&lt;/code&gt; は、 &lt;code&gt;Object&lt;/code&gt; モニターメソッド（&lt;a href=&quot;../../../lang/object#wait--&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../lang/object#notify--&quot;&gt; &lt;code&gt;notify&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../../lang/object#notifyAll--&quot;&gt; &lt;code&gt;notifyAll&lt;/code&gt; &lt;/a&gt;）を個別のオブジェクトに分解し、それらを任意の&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;実装の使用と組み合わせることにより、オブジェクトごとに複数の待機セットを持つ効果を与えます。</target>
        </trans-unit>
        <trans-unit id="6a5d68fb2038ac76f0f9c84528e2afe5c20067a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Condition&lt;/code&gt; factors out the &lt;code&gt;Object&lt;/code&gt; monitor methods (&lt;a href=&quot;../../../lang/object#wait--&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../lang/object#notify--&quot;&gt;&lt;code&gt;notify&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../lang/object#notifyAll--&quot;&gt;&lt;code&gt;notifyAll&lt;/code&gt;&lt;/a&gt;) into distinct objects to give the effect of having multiple wait-sets per object, by combining them with the use of arbitrary &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; implementations. Where a &lt;code&gt;Lock&lt;/code&gt; replaces the use of &lt;code&gt;synchronized&lt;/code&gt; methods and statements, a &lt;code&gt;Condition&lt;/code&gt; replaces the use of the Object monitor methods.</source>
          <target state="translated">&lt;code&gt;Condition&lt;/code&gt; は、 &lt;code&gt;Object&lt;/code&gt; モニターメソッド（&lt;a href=&quot;../../../lang/object#wait--&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../lang/object#notify--&quot;&gt; &lt;code&gt;notify&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../../../lang/object#notifyAll--&quot;&gt; &lt;code&gt;notifyAll&lt;/code&gt; &lt;/a&gt;）を個別のオブジェクトに分解し、それらを任意の&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;実装の使用と組み合わせることにより、オブジェクトごとに複数の待機セットを持つ効果を与えます。ここで、 &lt;code&gt;Lock&lt;/code&gt; の使用代わる &lt;code&gt;synchronized&lt;/code&gt; メソッドや文を、 &lt;code&gt;Condition&lt;/code&gt; オブジェクトのモニタ方法の使用を置き換えます。</target>
        </trans-unit>
        <trans-unit id="e4ac18d3e4f404d29cc31d4d0f059dabc9eec218" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Connection&lt;/code&gt; interface -- provides methods for creating statements and managing connections and their properties</source>
          <target state="translated">&lt;code&gt;Connection&lt;/code&gt; インターフェース-ステートメントを作成し、接続とそのプロパティを管理するためのメソッドを提供します</target>
        </trans-unit>
        <trans-unit id="d45a2fb62a6570dc379bba10605b620b1ed75464" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Constructor&lt;/code&gt; permits widening conversions to occur when matching the actual parameters to newInstance() with the underlying constructor's formal parameters, but throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if a narrowing conversion would occur.</source>
          <target state="translated">&lt;code&gt;Constructor&lt;/code&gt; は、実際のパラメーターをnewInstance（）と基になるコンストラクターの仮パラメーターと照合するときに拡大変換が発生することを許可しますが、縮小変換が発生する場合は &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="4eeb059e54525edc859d578f5c93fd37c804b3da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Constructor&lt;/code&gt; provides information about, and access to, a single constructor for a class.</source>
          <target state="translated">&lt;code&gt;Constructor&lt;/code&gt; は、クラスの単一のコンストラクタに関する情報とアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="e859c1b5be12a6fc17e3222034d1f7545b6f4591" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Context.close()&lt;/code&gt; is invoked on the &lt;code&gt;EventContext&lt;/code&gt; instance with which it has registered.</source>
          <target state="translated">&lt;code&gt;Context.close()&lt;/code&gt; は、登録されている &lt;code&gt;EventContext&lt;/code&gt; インスタンスで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c94c12f704d29fb363b61bbdebfe18eef900dd40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;D&lt;/code&gt; - the concrete type for the date of this date-time</source>
          <target state="translated">&lt;code&gt;D&lt;/code&gt; -この日時の日付の具体的な型</target>
        </trans-unit>
        <trans-unit id="389811b9d1c73efecbe2ed8456b40592559fa55b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;D&lt;/code&gt; - the result type of the downstream reduction</source>
          <target state="translated">&lt;code&gt;D&lt;/code&gt; -ダウンストリーム削減の結果タイプ</target>
        </trans-unit>
        <trans-unit id="cbbe20e39c2a2ffe35378130def1f24c6c295951" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;D&lt;/code&gt; - the type of generic declaration that declared the underlying type variable.</source>
          <target state="translated">&lt;code&gt;D&lt;/code&gt; -基本となる型変数を宣言した総称宣言の型。</target>
        </trans-unit>
        <trans-unit id="d5555d812e55c5944de98424ee254b4addc8ef9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;D&lt;/code&gt; is in a package that the module containing &lt;code&gt;D&lt;/code&gt;&lt;a href=&quot;../module#isOpen(java.lang.String,java.lang.Module)&quot;&gt;&lt;code&gt;opens&lt;/code&gt;&lt;/a&gt; to at least the module containing &lt;code&gt;C&lt;/code&gt;. All packages in unnamed and open modules are open to all modules and so this method always succeeds when &lt;code&gt;D&lt;/code&gt; is in an unnamed or open module.</source>
          <target state="translated">&lt;code&gt;D&lt;/code&gt; を含むモジュール、そのパッケージ内にある &lt;code&gt;D&lt;/code&gt; が&lt;a href=&quot;../module#isOpen(java.lang.String,java.lang.Module)&quot;&gt; &lt;code&gt;opens&lt;/code&gt; &lt;/a&gt;含む少なくともモジュールに &lt;code&gt;C&lt;/code&gt; を。名前のないモジュールと開いているモジュールのすべてのパッケージはすべてのモジュールに対して開かれているため、 &lt;code&gt;D&lt;/code&gt; が名前のないモジュールまたは開いているモジュールにある場合、このメソッドは常に成功します。</target>
        </trans-unit>
        <trans-unit id="4de8522b43c3432b3663e493a93089fc89b43e1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DARK&lt;/code&gt; is used for the property &lt;code&gt;Tree.expandedIcon&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DARK&lt;/code&gt; は、プロパティ &lt;code&gt;Tree.expandedIcon&lt;/code&gt; に使用されます。</target>
        </trans-unit>
        <trans-unit id="45d2d48ba75595cbe753457a168f2673f131435c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DAYS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of days added. This is equivalent to &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 86,400 (24 hours).</source>
          <target state="translated">&lt;code&gt;DAYS&lt;/code&gt; -指定された日数が追加された &lt;code&gt;Instant&lt;/code&gt; を返します。これは、&lt;a href=&quot;instant#plusSeconds-long-&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; に&lt;/a&gt; 86,400（24時間）を掛けたものに相当します。</target>
        </trans-unit>
        <trans-unit id="5081c2f81c7b81f65a0aabe23809acfd7a440ad7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DAYS&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of days added. This is equivalent to &lt;a href=&quot;#plusDays(long)&quot;&gt;&lt;code&gt;plusDays(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DAYS&lt;/code&gt; -指定された日数が追加された &lt;code&gt;LocalDate&lt;/code&gt; を返します。これは&lt;a href=&quot;#plusDays(long)&quot;&gt; &lt;code&gt;plusDays(long)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="4b45414349cb0af2ed0e7766a37b520c25e05b1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DAYS&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of days added. This is equivalent to &lt;a href=&quot;localdate#plusDays-long-&quot;&gt;&lt;code&gt;plusDays(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DAYS&lt;/code&gt; -指定された日数を加算した &lt;code&gt;LocalDate&lt;/code&gt; を返します。これは&lt;a href=&quot;localdate#plusDays-long-&quot;&gt; &lt;code&gt;plusDays(long)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="9fa6fa09439806cc983e5fc18d95606d8c1dda95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DAYS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of days added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 86,400 (24 hours).</source>
          <target state="translated">&lt;code&gt;DAYS&lt;/code&gt; -指定された日数が追加された &lt;code&gt;Instant&lt;/code&gt; を返します。これは、&lt;a href=&quot;#plusSeconds(long)&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; に&lt;/a&gt;86,400（24時間）を掛けたものに相当します。</target>
        </trans-unit>
        <trans-unit id="3b7d2e8b30d9c6b8a3179452302140c88343cf40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DAY_OF_MONTH&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified day-of-month. The month and year will be unchanged. If the day-of-month is invalid for the year and month, then a &lt;code&gt;DateTimeException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;DAY_OF_MONTH&lt;/code&gt; -指定された日付で &lt;code&gt;LocalDate&lt;/code&gt; を返します。月と年は変更されません。年月日が無効な場合、 &lt;code&gt;DateTimeException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="e5410b084b97f18dcd33e662774235198a357cbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DAY_OF_WEEK&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified day-of-week. The date is adjusted up to 6 days forward or backward within the boundary of a Monday to Sunday week.</source>
          <target state="translated">&lt;code&gt;DAY_OF_WEEK&lt;/code&gt; -指定された曜日の &lt;code&gt;LocalDate&lt;/code&gt; を返します。日付は、月曜日から日曜日の週の境界内で最大6日前後に調整されます。</target>
        </trans-unit>
        <trans-unit id="37beafae313f589702d908af4d721601c8021b9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DAY_OF_YEAR&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified day-of-year. The year will be unchanged. If the day-of-year is invalid for the year, then a &lt;code&gt;DateTimeException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;DAY_OF_YEAR&lt;/code&gt; -指定された日付で &lt;code&gt;LocalDate&lt;/code&gt; を返します。年は変更されません。年の日付がその年に対して無効である場合、 &lt;code&gt;DateTimeException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="6e1a90c7166d711f0fcc0ef4b8529eb2a5aab094" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DCHuffmanTables&lt;/code&gt; - An array of Huffman table objects.</source>
          <target state="translated">&lt;code&gt;DCHuffmanTables&lt;/code&gt; -Huffmanテーブルオブジェクトの配列。</target>
        </trans-unit>
        <trans-unit id="8fd5a6e13fdd97637b5299e3528e167b9412a55a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DCHuffmanTables&lt;/code&gt; - an array of Huffman table objects.</source>
          <target state="translated">&lt;code&gt;DCHuffmanTables&lt;/code&gt; -ハフマンテーブルオブジェクトの配列。</target>
        </trans-unit>
        <trans-unit id="78359b9f51b915913130d4bb6e271d0e48b2cf9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEBUG&lt;/code&gt; level: usually used to log debug information traces.</source>
          <target state="translated">&lt;code&gt;DEBUG&lt;/code&gt; レベル：通常、デバッグ情報のトレースをログに記録するために使用されます。</target>
        </trans-unit>
        <trans-unit id="88dc6639ef6f46033cc44ed86a139300c67fb3f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEBUG&lt;/code&gt; level: usually used to log debug information traces. This level &lt;a href=&quot;#getSeverity()&quot;&gt;severity&lt;/a&gt; is &lt;code&gt;500&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DEBUG&lt;/code&gt; レベル：通常、デバッグ情報のトレースをログに記録するために使用されます。このレベルの&lt;a href=&quot;#getSeverity()&quot;&gt;重大度&lt;/a&gt;は &lt;code&gt;500&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9fd6f6c97433803a110657d07408d898d910d586" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DECADES&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of decades added. This is equivalent to calling &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 10. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;DECADES&lt;/code&gt; -指定された10年数が追加された &lt;code&gt;LocalDate&lt;/code&gt; を返します。これは、金額に10を掛けて&lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。日は、新しい月と年で無効にならない限り、変更されません。その場合、日は新しい月と年の最大有効値に調整されます。</target>
        </trans-unit>
        <trans-unit id="eed03793cb64b9ebf3b89d22c00025d8655f7741" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DECADES&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of decades added. This is equivalent to calling &lt;a href=&quot;localdate#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 10. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;DECADES&lt;/code&gt; -指定された十年の数が追加された &lt;code&gt;LocalDate&lt;/code&gt; を返します。これは、&lt;a href=&quot;localdate#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;を10倍した値で呼び出すのと同じです。新しい月と年で無効にならない限り、月の日は変更されません。その場合、日は新しい月と年の最大有効値に調整されます。</target>
        </trans-unit>
        <trans-unit id="36693aef89b1abb9df92735dac31e0654b4a686e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DECADES&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified number of decades added. This is equivalent to calling &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 10.</source>
          <target state="translated">&lt;code&gt;DECADES&lt;/code&gt; -指定された10年数が追加された &lt;code&gt;Year&lt;/code&gt; を返します。これは、金額に10を掛けて&lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="966191c59ea247283b43d37679bef906cc65d132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DECADES&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified number of decades added. This is equivalent to calling &lt;a href=&quot;year#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 10.</source>
          <target state="translated">&lt;code&gt;DECADES&lt;/code&gt; -指定された十年の数が追加された &lt;code&gt;Year&lt;/code&gt; を返します。これは、10倍した量で&lt;a href=&quot;year#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="12d4242ea64e786018a9cb48399ce0e2fced16a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DECADES&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of decades added. This is equivalent to calling &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 10.</source>
          <target state="translated">&lt;code&gt;DECADES&lt;/code&gt; -返し &lt;code&gt;YearMonth&lt;/code&gt; 追加数十年の指定した数とします。これは、金額に10を掛けて&lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="e8357e8f47e01dd58f308cbc954e1655e8e47717" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DECADES&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of decades added. This is equivalent to calling &lt;a href=&quot;yearmonth#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 10.</source>
          <target state="translated">&lt;code&gt;DECADES&lt;/code&gt; -返し &lt;code&gt;YearMonth&lt;/code&gt; 追加数十年の指定した数とします。これは、10倍した量で&lt;a href=&quot;yearmonth#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="f6bcbf8ba25004e3ff817a81f93dc621280b3e75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEFAULT_NS_PREFIX&lt;/code&gt; (&quot;&quot;)</source>
          <target state="translated">&lt;code&gt;DEFAULT_NS_PREFIX&lt;/code&gt; （ &quot;&quot;）</target>
        </trans-unit>
        <trans-unit id="07be2dfbd9b076fe5968b4d83db86603c1c24a1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEFAULT_VALUE&lt;/code&gt; unless overridden</source>
          <target state="translated">&lt;code&gt;DEFAULT_VALUE&lt;/code&gt; オーバーライドされない限り、DEFAULT_VALUE</target>
        </trans-unit>
        <trans-unit id="ec07851d7ab21e3b64ad7ba4a37205d75b8e7c8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DELETE&lt;/code&gt; - one or more rows and/or columns have been deleted</source>
          <target state="translated">&lt;code&gt;DELETE&lt;/code&gt; -1つ以上の行や列が削除されました</target>
        </trans-unit>
        <trans-unit id="b341b7e105133d4b64c9f83cbaf793ec5b1998ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DES/CBC/NoPadding&lt;/code&gt; (56)</source>
          <target state="translated">&lt;code&gt;DES/CBC/NoPadding&lt;/code&gt; （56）</target>
        </trans-unit>
        <trans-unit id="f16f72e393e06d4b2b16a0b2cc85f7f2dafa55a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DES/CBC/PKCS5Padding&lt;/code&gt; (56)</source>
          <target state="translated">&lt;code&gt;DES/CBC/PKCS5Padding&lt;/code&gt; （56）</target>
        </trans-unit>
        <trans-unit id="c78ac6c7301efe1b82818680ffd80849d9cc3cb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DES/ECB/NoPadding&lt;/code&gt; (56)</source>
          <target state="translated">&lt;code&gt;DES/ECB/NoPadding&lt;/code&gt; （56）</target>
        </trans-unit>
        <trans-unit id="c6db2d325848cfa26b5fc2500c376cb5754849b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DES/ECB/PKCS5Padding&lt;/code&gt; (56)</source>
          <target state="translated">&lt;code&gt;DES/ECB/PKCS5Padding&lt;/code&gt; （56）</target>
        </trans-unit>
        <trans-unit id="62ba4960d1159ac10981c339cf632e13708e7544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DES&lt;/code&gt; (56)</source>
          <target state="translated">&lt;code&gt;DES&lt;/code&gt; （56）</target>
        </trans-unit>
        <trans-unit id="44873b0ab4570b0f6ec8d0eee6803775fbbbd82a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DESede/CBC/NoPadding&lt;/code&gt; (168)</source>
          <target state="translated">&lt;code&gt;DESede/CBC/NoPadding&lt;/code&gt; （168）</target>
        </trans-unit>
        <trans-unit id="a7c3f08e47c4c2eb550754990b35f19faeda9fe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DESede/CBC/PKCS5Padding&lt;/code&gt; (168)</source>
          <target state="translated">&lt;code&gt;DESede/CBC/PKCS5Padding&lt;/code&gt; （168）</target>
        </trans-unit>
        <trans-unit id="8f2c0d7d59f2c0d131c20362c681ad7dfe7e0692" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DESede/ECB/NoPadding&lt;/code&gt; (168)</source>
          <target state="translated">&lt;code&gt;DESede/ECB/NoPadding&lt;/code&gt; （168）</target>
        </trans-unit>
        <trans-unit id="093135316e5fe6ce0b053fa1e2ea8510b15692b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DESede/ECB/PKCS5Padding&lt;/code&gt; (168)</source>
          <target state="translated">&lt;code&gt;DESede/ECB/PKCS5Padding&lt;/code&gt; （168）</target>
        </trans-unit>
        <trans-unit id="3e22c62715ceb3c29688cfb7fec1ef54c9dfe4fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DESede&lt;/code&gt; (168)</source>
          <target state="translated">&lt;code&gt;DESede&lt;/code&gt; （168）</target>
        </trans-unit>
        <trans-unit id="ccbf5e5ca73e1439a2f0227933322fab5e6dfd00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DISPOSE_ON_CLOSE&lt;/code&gt; (defined in &lt;code&gt;WindowConstants&lt;/code&gt;): Automatically hide and dispose the dialog after invoking any registered &lt;code&gt;WindowListener&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;DISPOSE_ON_CLOSE&lt;/code&gt; （WindowConstantsで定義）：登録された &lt;code&gt;WindowListener&lt;/code&gt; オブジェクトを呼び出した後、ダイアログを自動的に非表示にして &lt;code&gt;WindowConstants&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="0407490c2a0eba9c5527d95ff9e1c2b1741f45ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DISPOSE_ON_CLOSE&lt;/code&gt; (defined in &lt;code&gt;WindowConstants&lt;/code&gt;): Automatically hide and dispose the frame after invoking any registered &lt;code&gt;WindowListener&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;DISPOSE_ON_CLOSE&lt;/code&gt; （WindowConstantsで定義）：登録された &lt;code&gt;WindowListener&lt;/code&gt; オブジェクトを呼び出した後、フレームを自動的に非表示にして &lt;code&gt;WindowConstants&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="596f57f7d91684b49975c164b6f278b7e6915b45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DOMError&lt;/code&gt; is an interface that describes an error.</source>
          <target state="translated">&lt;code&gt;DOMError&lt;/code&gt; は、エラーを説明するインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="0fcaffdf70e9d3628cf2cb01c6e912703b82b687" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DOMErrorHandler&lt;/code&gt; is a callback interface that the DOM implementation can call when reporting errors that happens while processing XML data, or when doing some other processing (e.g. validating a document).</source>
          <target state="translated">&lt;code&gt;DOMErrorHandler&lt;/code&gt; は、XMLデータの処理中に発生したエラーを報告するとき、またはその他の処理（ドキュメントの検証など）を実行するときに、DOM実装が呼び出すことができるコールバックインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="4769188d5d383a68dee98fa1333f36fc2aa2748c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DOMErrorHandler&lt;/code&gt; is a callback interface that the DOM implementation can call when reporting errors that happens while processing XML data, or when doing some other processing (e.g. validating a document). A &lt;code&gt;DOMErrorHandler&lt;/code&gt; object can be attached to a &lt;code&gt;Document&lt;/code&gt; using the &quot;error-handler&quot; on the &lt;code&gt;DOMConfiguration&lt;/code&gt; interface. If more than one error needs to be reported during an operation, the sequence and numbers of the errors passed to the error handler are implementation dependent.</source>
          <target state="translated">&lt;code&gt;DOMErrorHandler&lt;/code&gt; は、XMLデータの処理中に発生したエラーを報告するとき、またはその他の処理（ドキュメントの検証など）を実行するときに、DOM実装が呼び出すことができるコールバックインターフェイスです。A &lt;code&gt;DOMErrorHandler&lt;/code&gt; のオブジェクトは、に取り付けることができる &lt;code&gt;Document&lt;/code&gt; の「エラーハンドラ」を使用 &lt;code&gt;DOMConfiguration&lt;/code&gt; インタフェース。操作中に複数のエラーを報告する必要がある場合、エラーハンドラーに渡されるエラーの順序と数は実装によって異なります。</target>
        </trans-unit>
        <trans-unit id="e66ab3a63f5afbf5d7f72e26970535d065b793cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DOMImplementationLS&lt;/code&gt; contains the factory methods for creating Load and Save objects.</source>
          <target state="translated">&lt;code&gt;DOMImplementationLS&lt;/code&gt; には、LoadオブジェクトとSaveオブジェクトを作成するためのファクトリメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="b094e18068402a1de976a9520535c673f49fe54c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DOMLocator&lt;/code&gt; is an interface that describes a location (e.g.</source>
          <target state="translated">&lt;code&gt;DOMLocator&lt;/code&gt; は、場所を記述するインターフェイスです（例：</target>
        </trans-unit>
        <trans-unit id="bc32ab6221993850270fbc9b2e902281ab9bb2aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DOMLocator&lt;/code&gt; is an interface that describes a location (e.g. where an error occurred).</source>
          <target state="translated">&lt;code&gt;DOMLocator&lt;/code&gt; は、場所（エラーが発生した場所など）を記述するインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="3e13b17ca0ef5624239935e27ec9348c46357de2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DO_NOTHING_ON_CLOSE&lt;/code&gt; (defined in &lt;code&gt;WindowConstants&lt;/code&gt;): Don't do anything; require the program to handle the operation in the &lt;code&gt;windowClosing&lt;/code&gt; method of a registered &lt;code&gt;WindowListener&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;DO_NOTHING_ON_CLOSE&lt;/code&gt; （で定義されて &lt;code&gt;WindowConstants&lt;/code&gt; ）：DOは何もしません。登録された &lt;code&gt;WindowListener&lt;/code&gt; オブジェクトの &lt;code&gt;windowClosing&lt;/code&gt; メソッドで操作を処理するようにプログラムに要求します。</target>
        </trans-unit>
        <trans-unit id="c63f233b6dc1af52db98a7be1d26195cff667742" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DSA&lt;/code&gt; (1024)</source>
          <target state="translated">&lt;code&gt;DSA&lt;/code&gt; （1024）</target>
        </trans-unit>
        <trans-unit id="31d5d00fa6767526e01296651e887049f80c4852" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DSA&lt;/code&gt; (1024, 2048)</source>
          <target state="translated">&lt;code&gt;DSA&lt;/code&gt; （1024、2048）</target>
        </trans-unit>
        <trans-unit id="cd11ec0ece994468b0fcc09e2d287b358d0f1543" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DataLine&lt;/code&gt; adds media-related functionality to its superinterface, &lt;code&gt;&lt;a href=&quot;line&quot;&gt;&lt;code&gt;Line&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DataLine&lt;/code&gt; は、メディア関連の機能をスーパーインターフェイスである &lt;code&gt;&lt;a href=&quot;line&quot;&gt;&lt;code&gt;Line&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="14624f7c431c4ed2d4ec58d9652ef9c0904bae33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DataLine&lt;/code&gt; adds media-related functionality to its superinterface, &lt;code&gt;&lt;a href=&quot;line&quot;&gt;&lt;code&gt;Line&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;. This functionality includes transport-control methods that start, stop, drain, and flush the audio data that passes through the line. A data line can also report the current position, volume, and audio format of the media. Data lines are used for output of audio by means of the subinterfaces &lt;code&gt;&lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;, which allow an application program to write data. Similarly, audio input is handled by the subinterface &lt;code&gt;&lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;, which allows data to be read.</source>
          <target state="translated">&lt;code&gt;DataLine&lt;/code&gt; は、メディア関連の機能をスーパーインターフェイスである &lt;code&gt;&lt;a href=&quot;line&quot;&gt;&lt;code&gt;Line&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; に追加します。この機能には、ラインを通過するオーディオデータを開始、停止、排出、およびフラッシュするトランスポート制御メソッドが含まれます。データラインは、メディアの現在の位置、ボリューム、およびオーディオ形式も報告できます。データラインは、アプリケーションプログラムがデータを書き込むことができるようにする &lt;code&gt;&lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; のサブインターフェースを使用してオーディオの出力に使用されます。同様に、オーディオ入力はサブデータ &lt;code&gt;&lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; によって処理され、データを読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="28137c67102e3f3505d4f37b79412b553ac51c62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DataLine&lt;/code&gt; adds media-related functionality to its superinterface, &lt;code&gt;Line&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DataLine&lt;/code&gt; は、メディア関連の機能をそのスーパーインターフェイスである &lt;code&gt;Line&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="728d914e263ce1b6d257687ca02f23b0c76c74aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DataLine&lt;/code&gt; adds media-related functionality to its superinterface, &lt;code&gt;Line&lt;/code&gt;. This functionality includes transport-control methods that start, stop, drain, and flush the audio data that passes through the line. A data line can also report the current position, volume, and audio format of the media. Data lines are used for output of audio by means of the subinterfaces &lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;, which allow an application program to write data. Similarly, audio input is handled by the subinterface &lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;, which allows data to be read.</source>
          <target state="translated">&lt;code&gt;DataLine&lt;/code&gt; は、メディア関連の機能をそのスーパーインターフェイスである &lt;code&gt;Line&lt;/code&gt; に追加します。この機能には、回線を通過するオーディオデータを開始、停止、ドレイン、およびフラッシュするトランスポート制御メソッドが含まれます。データラインは、メディアの現在の位置、音量、およびオーディオ形式を報告することもできます。データラインは、サブインターフェイス&lt;a href=&quot;sourcedataline&quot;&gt; &lt;code&gt;SourceDataLine&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;clip&quot;&gt; &lt;code&gt;Clip&lt;/code&gt; &lt;/a&gt;を使用してオーディオを出力するために使用されます。これにより、アプリケーションプログラムはデータを書き込むことができます。同様に、オーディオ入力はサブインターフェイス&lt;a href=&quot;targetdataline&quot;&gt; &lt;code&gt;TargetDataLine&lt;/code&gt; &lt;/a&gt;によって処理され、データの読み取りが可能になります。</target>
        </trans-unit>
        <trans-unit id="d6b2df0ad904d9421fc24466c8da2d4173d71700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DataTruncation&lt;/code&gt; -- thrown to indicate that data may have been truncated</source>
          <target state="translated">&lt;code&gt;DataTruncation&lt;/code&gt; -データが切り捨てられた可能性があることを示すためにスローされます</target>
        </trans-unit>
        <trans-unit id="329c741db34d2f0376155c8c7e47fe9faa5b5b64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DatabaseMetaData&lt;/code&gt; interface -- provides information about the database</source>
          <target state="translated">&lt;code&gt;DatabaseMetaData&lt;/code&gt; インターフェース-データベースに関する情報を提供します</target>
        </trans-unit>
        <trans-unit id="cacba501db40175a13ef41b80f586a906ebcc5f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DatabaseMetaData&lt;/code&gt; methods to return PseudoColumns and if a generated key is always returned</source>
          <target state="translated">&lt;code&gt;DatabaseMetaData&lt;/code&gt; PseudoColumnsを返すDatabaseMetaDataメソッド、および生成されたキーが常に返されるかどうか</target>
        </trans-unit>
        <trans-unit id="aa32dfe10e8a610bc08ac344c2fad5ce58a2f68d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DatabaseMetaData&lt;/code&gt; methods to return maximum Logical LOB size and if Ref Cursors are supported</source>
          <target state="translated">&lt;code&gt;DatabaseMetaData&lt;/code&gt; 最大論理LOBサイズを返すDatabaseMetaDataメソッド、および参照カーソルがサポートされているかどうか</target>
        </trans-unit>
        <trans-unit id="50a1a5b584a01d2242b7dbee0459dde430cac23f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Date&lt;/code&gt; class -- mapping for SQL &lt;code&gt;DATE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Date&lt;/code&gt; クラス &lt;code&gt;DATE&lt;/code&gt; マッピング</target>
        </trans-unit>
        <trans-unit id="f1784f171a73635ccdb68cb9354974f2e943ea23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormat&lt;/code&gt; helps you to format and parse dates for any locale. Your code can be completely independent of the locale conventions for months, days of the week, or even the calendar format: lunar vs. solar.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; は、任意のロケールの日付をフォーマットして解析するのに役立ちます。あなたのコードは、月、曜日、またはカレンダーのフォーマットでさえ、ロケールの慣習から完全に独立することができます：月対太陽。</target>
        </trans-unit>
        <trans-unit id="9f50521d542dee5c5af6d8ea854e3ca1bd6ff74b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormat&lt;/code&gt; is an abstract class for date/time formatting subclasses which formats and parses dates or time in a language-independent manner.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; は、言語に依存しない方法で日付または時刻をフォーマットおよび解析する日付/時刻フォーマットサブクラスの抽象クラスです。</target>
        </trans-unit>
        <trans-unit id="29f62771fd780387e1c2a9b447d2c5473efac054" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormat&lt;/code&gt; is an abstract class for date/time formatting subclasses which formats and parses dates or time in a language-independent manner. The date/time formatting subclass, such as &lt;a href=&quot;simpledateformat&quot;&gt;&lt;code&gt;SimpleDateFormat&lt;/code&gt;&lt;/a&gt;, allows for formatting (i.e., date &amp;rarr; text), parsing (text &amp;rarr; date), and normalization. The date is represented as a &lt;code&gt;Date&lt;/code&gt; object or as the milliseconds since January 1, 1970, 00:00:00 GMT.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; は、言語に依存しない方法で日付または時刻をフォーマットおよび解析する日付/時刻フォーマットサブクラスの抽象クラスです。&lt;a href=&quot;simpledateformat&quot;&gt; &lt;code&gt;SimpleDateFormat&lt;/code&gt; &lt;/a&gt;などの日付/時刻フォーマットサブクラスでは、フォーマット（つまり、日付&amp;rarr;テキスト）、解析（テキスト&amp;rarr;日付）、および正規化が可能です。日付は、 &lt;code&gt;Date&lt;/code&gt; オブジェクトとして、または1970年1月1日00:00:00 GMTからのミリ秒として表されます。</target>
        </trans-unit>
        <trans-unit id="db10af39b813a7b46842289dc7d504656eca81b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormat&lt;/code&gt; provides many class methods for obtaining default date/time formatters based on the default or a given locale and a number of formatting styles. The formatting styles include &lt;a href=&quot;#FULL&quot;&gt;&lt;code&gt;FULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#LONG&quot;&gt;&lt;code&gt;LONG&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#MEDIUM&quot;&gt;&lt;code&gt;MEDIUM&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#SHORT&quot;&gt;&lt;code&gt;SHORT&lt;/code&gt;&lt;/a&gt;. More detail and examples of using these styles are provided in the method descriptions.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; は、デフォルトまたは特定のロケールといくつかのフォーマットスタイルに基づいてデフォルトの日付/時刻フォーマッタを取得するための多くのクラスメソッドを提供します。書式設定スタイルには、&lt;a href=&quot;#FULL&quot;&gt; &lt;code&gt;FULL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#LONG&quot;&gt; &lt;code&gt;LONG&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#MEDIUM&quot;&gt; &lt;code&gt;MEDIUM&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#SHORT&quot;&gt; &lt;code&gt;SHORT&lt;/code&gt; が含まれ&lt;/a&gt;ます。これらのスタイルの使用の詳細と例は、メソッドの説明に記載されています。</target>
        </trans-unit>
        <trans-unit id="5b035c794cb89fd3270eb68d8bbd9da71d5ac1e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormat&lt;/code&gt; provides many class methods for obtaining default date/time formatters based on the default or a given locale and a number of formatting styles. The formatting styles include &lt;a href=&quot;dateformat#FULL&quot;&gt;&lt;code&gt;FULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dateformat#LONG&quot;&gt;&lt;code&gt;LONG&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dateformat#MEDIUM&quot;&gt;&lt;code&gt;MEDIUM&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;dateformat#SHORT&quot;&gt;&lt;code&gt;SHORT&lt;/code&gt;&lt;/a&gt;. More detail and examples of using these styles are provided in the method descriptions.</source>
          <target state="translated">&lt;code&gt;DateFormat&lt;/code&gt; は、デフォルトまたは特定のロケールといくつかのフォーマットスタイルに基づいて、デフォルトの日付/時刻フォーマッターを取得するための多くのクラスメソッドを提供します。書式設定スタイルには、&lt;a href=&quot;dateformat#FULL&quot;&gt; &lt;code&gt;FULL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;dateformat#LONG&quot;&gt; &lt;code&gt;LONG&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;dateformat#MEDIUM&quot;&gt; &lt;code&gt;MEDIUM&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;dateformat#SHORT&quot;&gt; &lt;code&gt;SHORT&lt;/code&gt; があり&lt;/a&gt;ます。これらのスタイルの詳細と使用例は、メソッドの説明に記載されています。</target>
        </trans-unit>
        <trans-unit id="7102570a3872fc2eccd96900b02ead6fa6e5467b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormatSymbols&lt;/code&gt; is a public class for encapsulating localizable date-time formatting data, such as the names of the months, the names of the days of the week, and the time zone data.</source>
          <target state="translated">&lt;code&gt;DateFormatSymbols&lt;/code&gt; は、月の名前、曜日の名前、タイムゾーンデータなど、ローカライズ可能な日時フォーマットデータをカプセル化するためのパブリッククラスです。</target>
        </trans-unit>
        <trans-unit id="f17c3accd23ff6eb64c0dd51be77e36f0a89b198" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormatSymbols&lt;/code&gt; is a public class for encapsulating localizable date-time formatting data, such as the names of the months, the names of the days of the week, and the time zone data. &lt;code&gt;SimpleDateFormat&lt;/code&gt; uses &lt;code&gt;DateFormatSymbols&lt;/code&gt; to encapsulate this information.</source>
          <target state="translated">&lt;code&gt;DateFormatSymbols&lt;/code&gt; は、月の名前、曜日の名前、タイムゾーンデータなど、ローカライズ可能な日時フォーマットデータをカプセル化するためのパブリッククラスです。 &lt;code&gt;SimpleDateFormat&lt;/code&gt; は、 &lt;code&gt;DateFormatSymbols&lt;/code&gt; を使用してこの情報をカプセル化します。</target>
        </trans-unit>
        <trans-unit id="b931b83548968bc9b09b5a12dc104ee6f1e36cfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateFormatSymbols&lt;/code&gt; objects are cloneable. When you obtain a &lt;code&gt;DateFormatSymbols&lt;/code&gt; object, feel free to modify the date-time formatting data. For instance, you can replace the localized date-time format pattern characters with the ones that you feel easy to remember. Or you can change the representative cities to your favorite ones.</source>
          <target state="translated">&lt;code&gt;DateFormatSymbols&lt;/code&gt; オブジェクトは複製可能です。 &lt;code&gt;DateFormatSymbols&lt;/code&gt; オブジェクトを取得したら、日時フォーマットデータを自由に変更してください。たとえば、ローカライズされた日時書式パターン文字を覚えやすい文字に置き換えることができます。または、代表的な都市をお気に入りの都市に変更できます。</target>
        </trans-unit>
        <trans-unit id="ba14072c622b98365c8f93d49048f23cac5387bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DayOfWeek&lt;/code&gt; is an enum representing the 7 days of the week - Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.</source>
          <target state="translated">&lt;code&gt;DayOfWeek&lt;/code&gt; は、月曜、火曜、水曜、木曜、金曜、土曜、日曜の7日間を表す列挙型です。</target>
        </trans-unit>
        <trans-unit id="7aa33573e5e4c4ee84673e9a302c8f8b44547021" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DayOfWeek&lt;/code&gt; is an enum representing the 7 days of the week. This factory allows the enum to be obtained from the &lt;code&gt;int&lt;/code&gt; value. The &lt;code&gt;int&lt;/code&gt; value follows the ISO-8601 standard, from 1 (Monday) to 7 (Sunday).</source>
          <target state="translated">&lt;code&gt;DayOfWeek&lt;/code&gt; は、週の7日を表す列挙型です。このファクトリでは、列挙型を &lt;code&gt;int&lt;/code&gt; 値から取得できます。 &lt;code&gt;int&lt;/code&gt; 型の値は、7日（日）に1からISO-8601標準、（月曜日）に従います。</target>
        </trans-unit>
        <trans-unit id="4dd1311030562ce950b326d49e5d1cbf37181043" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DayOfWeek&lt;/code&gt; returns &lt;code&gt;DAYS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DayOfWeek&lt;/code&gt; は &lt;code&gt;DAYS&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="c91c3a0022f19f52c352b7d692a4c1367bc2738b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DayOfWeek&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;DayOfWeek&lt;/code&gt; はnullを返します</target>
        </trans-unit>
        <trans-unit id="312f426d7d11f3683c933095b436500109d070f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DayOfWeek&lt;/code&gt; returns null (shared across chronologies)</source>
          <target state="translated">&lt;code&gt;DayOfWeek&lt;/code&gt; はnullを返します（暦全体で共有）</target>
        </trans-unit>
        <trans-unit id="36f3ee3ea939b71acf1555d4ffe33a177f2bf4ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecimalFormat&lt;/code&gt; is a concrete subclass of &lt;code&gt;NumberFormat&lt;/code&gt; that formats decimal numbers.</source>
          <target state="translated">&lt;code&gt;DecimalFormat&lt;/code&gt; は、10進数をフォーマットする &lt;code&gt;NumberFormat&lt;/code&gt; の具象サブクラスです。</target>
        </trans-unit>
        <trans-unit id="1e06e90b92f127303652caaf26a73456f99be709" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecimalFormat&lt;/code&gt; is a concrete subclass of &lt;code&gt;NumberFormat&lt;/code&gt; that formats decimal numbers. It has a variety of features designed to make it possible to parse and format numbers in any locale, including support for Western, Arabic, and Indic digits. It also supports different kinds of numbers, including integers (123), fixed-point numbers (123.4), scientific notation (1.23E4), percentages (12%), and currency amounts ($123). All of these can be localized.</source>
          <target state="translated">&lt;code&gt;DecimalFormat&lt;/code&gt; は、10進数をフォーマットする &lt;code&gt;NumberFormat&lt;/code&gt; の具象サブクラスです。西洋、アラビア語、インドの数字のサポートを含め、あらゆるロケールで数値を解析およびフォーマットできるように設計されたさまざまな機能があります。また、整数（123）、固定小数点数（123.4）、科学表記（1.23E4）、パーセンテージ（12％）、通貨金額（$ 123）など、さまざまな種類の数値もサポートしています。これらはすべてローカライズできます。</target>
        </trans-unit>
        <trans-unit id="296ebefaa86f8a8a1d922cd3d2a1418a021465d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecimalFormat&lt;/code&gt; parses all Unicode characters that represent decimal digits, as defined by &lt;code&gt;Character.digit()&lt;/code&gt;. In addition, &lt;code&gt;DecimalFormat&lt;/code&gt; also recognizes as digits the ten consecutive characters starting with the localized zero digit defined in the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;DecimalFormat&lt;/code&gt; は、 &lt;code&gt;Character.digit()&lt;/code&gt; で定義されているように、10進数を表すすべてのUnicode文字を解析します。さらに、 &lt;code&gt;DecimalFormat&lt;/code&gt; は、 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; オブジェクトで定義されているローカライズされたゼロ桁で始まる10個の連続した文字を数字として認識します。</target>
        </trans-unit>
        <trans-unit id="73481d290bc9a0bc3a623a91a94f73d95954c437" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecimalFormat&lt;/code&gt; patterns have the following syntax:</source>
          <target state="translated">&lt;code&gt;DecimalFormat&lt;/code&gt; パターンの構文は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="48bbd87a3a8178de393d41e1f9a4dc20ff90f13c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DecimalFormat&lt;/code&gt; provides rounding modes defined in &lt;a href=&quot;../math/roundingmode&quot;&gt;&lt;code&gt;RoundingMode&lt;/code&gt;&lt;/a&gt; for formatting. By default, it uses &lt;a href=&quot;../math/roundingmode#HALF_EVEN&quot;&gt;&lt;code&gt;RoundingMode.HALF_EVEN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;DecimalFormat&lt;/code&gt; は、フォーマット用に&lt;a href=&quot;../math/roundingmode&quot;&gt; &lt;code&gt;RoundingMode&lt;/code&gt; &lt;/a&gt;で定義された丸めモードを提供します。デフォルトでは、&lt;a href=&quot;../math/roundingmode#HALF_EVEN&quot;&gt; &lt;code&gt;RoundingMode.HALF_EVEN&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="8e1b6f07144283290279351996fc7e9520525743" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Default&lt;/code&gt; - a default value.</source>
          <target state="translated">&lt;code&gt;Default&lt;/code&gt; -デフォルト値。</target>
        </trans-unit>
        <trans-unit id="74881dff9189c4c783328b65bea467f4ead78f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Default&lt;/code&gt; - the default value.</source>
          <target state="translated">&lt;code&gt;Default&lt;/code&gt; -デフォルト値。</target>
        </trans-unit>
        <trans-unit id="013ad656021a30c0fcc5b39c3840413a1b4d25f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultFormatter&lt;/code&gt; formats arbitrary objects.</source>
          <target state="translated">&lt;code&gt;DefaultFormatter&lt;/code&gt; は任意のオブジェクトをフォーマットします。</target>
        </trans-unit>
        <trans-unit id="b1a3c706ae4fdaf19fc797fbdf54f6ee28ed6e27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultFormatter&lt;/code&gt; formats arbitrary objects. Formatting is done by invoking the &lt;code&gt;toString&lt;/code&gt; method. In order to convert the value back to a String, your class must provide a constructor that takes a String argument. If no single argument constructor that takes a String is found, the returned value will be the String passed into &lt;code&gt;stringToValue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DefaultFormatter&lt;/code&gt; は任意のオブジェクトをフォーマットします。フォーマットは、 &lt;code&gt;toString&lt;/code&gt; メソッドを呼び出すことによって行われます。値を文字列に戻すには、クラスが文字列引数を取るコンストラクターを提供する必要があります。Stringを &lt;code&gt;stringToValue&lt;/code&gt; 単一の引数コンストラクターが見つからない場合、戻り値はstringToValueに渡されたStringになります。</target>
        </trans-unit>
        <trans-unit id="b63bdff99c08cc0803b28dfa4c7ee1ec923132ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultMetalTheme&lt;/code&gt; uses bold fonts for many controls. To make all controls (with the exception of the internal frame title bars and client decorated frame title bars) use plain fonts you can do either of the following:</source>
          <target state="translated">&lt;code&gt;DefaultMetalTheme&lt;/code&gt; は、多くのコントロールに太字のフォントを使用しています。すべてのコントロール（内部フレームタイトルバーとクライアント装飾フレームタイトルバーを除く）でプレーンフォントを使用するには、次のいずれかを実行できます。</target>
        </trans-unit>
        <trans-unit id="8530508038c8b24055b893842eef1cd4d28d0b46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultRowSorter.ModelWrapper&lt;/code&gt; is responsible for providing the data that gets sorted by &lt;code&gt;DefaultRowSorter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DefaultRowSorter.ModelWrapper&lt;/code&gt; は、 &lt;code&gt;DefaultRowSorter&lt;/code&gt; によって並べ替えられるデータを提供する役割を果たします。</target>
        </trans-unit>
        <trans-unit id="29873af872a40852989ab9782213e3c555b4127e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultRowSorter.ModelWrapper&lt;/code&gt; is responsible for providing the data that gets sorted by &lt;code&gt;DefaultRowSorter&lt;/code&gt;. You normally do not interact directly with &lt;code&gt;ModelWrapper&lt;/code&gt;. Subclasses of &lt;code&gt;DefaultRowSorter&lt;/code&gt; provide an implementation of &lt;code&gt;ModelWrapper&lt;/code&gt; wrapping another model. For example, &lt;code&gt;TableRowSorter&lt;/code&gt; provides a &lt;code&gt;ModelWrapper&lt;/code&gt; that wraps a &lt;code&gt;TableModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DefaultRowSorter.ModelWrapper&lt;/code&gt; は、 &lt;code&gt;DefaultRowSorter&lt;/code&gt; によって並べ替えられるデータを提供する役割を果たします。通常、 &lt;code&gt;ModelWrapper&lt;/code&gt; と直接対話することはありません。 &lt;code&gt;DefaultRowSorter&lt;/code&gt; のサブクラスは、別のモデルをラップする &lt;code&gt;ModelWrapper&lt;/code&gt; の実装を提供します。たとえば、 &lt;code&gt;TableRowSorter&lt;/code&gt; は、 &lt;code&gt;TableModel&lt;/code&gt; をラップする &lt;code&gt;ModelWrapper&lt;/code&gt; を提供します。</target>
        </trans-unit>
        <trans-unit id="4afdd229f8b121d7cdb57ceb13a8e95f4b4f7280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultRowSorter&lt;/code&gt; has two formal type parameters. The first type parameter corresponds to the class of the model, for example &lt;code&gt;DefaultTableModel&lt;/code&gt;. The second type parameter corresponds to the class of the identifier passed to the &lt;code&gt;RowFilter&lt;/code&gt;. Refer to &lt;code&gt;TableRowSorter&lt;/code&gt; and &lt;code&gt;RowFilter&lt;/code&gt; for more details on the type parameters.</source>
          <target state="translated">&lt;code&gt;DefaultRowSorter&lt;/code&gt; には、2つの正式な型パラメーターがあります。最初のタイプパラメータは、モデルのクラスに対応します（例： &lt;code&gt;DefaultTableModel&lt;/code&gt; )。 2番目の型パラメーターは、 &lt;code&gt;RowFilter&lt;/code&gt; に渡される識別子のクラスに対応します。参照してください &lt;code&gt;TableRowSorter&lt;/code&gt; はと &lt;code&gt;RowFilter&lt;/code&gt; 型パラメータの詳細については。</target>
        </trans-unit>
        <trans-unit id="f05dcd2d1e9a51b9437f7e57a3a4e51a0e10484b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultRowSorter&lt;/code&gt; is an abstract class. Concrete subclasses must provide access to the underlying data by invoking &lt;code&gt;setModelWrapper&lt;/code&gt;. The &lt;code&gt;setModelWrapper&lt;/code&gt; method &lt;b&gt;must&lt;/b&gt; be invoked soon after the constructor is called, ideally from within the subclass's constructor. Undefined behavior will result if you use a &lt;code&gt;
 DefaultRowSorter&lt;/code&gt; without specifying a &lt;code&gt;ModelWrapper&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DefaultRowSorter&lt;/code&gt; は抽象クラスです。具象サブクラスは、 &lt;code&gt;setModelWrapper&lt;/code&gt; を呼び出して、基になるデータへのアクセスを提供する必要があります。 &lt;code&gt;setModelWrapper&lt;/code&gt; の方法が&lt;b&gt;なければなりません&lt;/b&gt;コンストラクタが呼び出された後、理想的にサブクラスのコンストラクタ内から、すぐに呼び出すこと。 &lt;code&gt;ModelWrapper&lt;/code&gt; を指定せずに &lt;code&gt; DefaultRowSorter&lt;/code&gt; を使用すると、未定義の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="8d7e3d656af321377b0de756c2f2d297b453de34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Deque&lt;/code&gt; implementations generally do not define element-based versions of the &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; methods, but instead inherit the identity-based versions from class &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Deque&lt;/code&gt; 実装は通常、 &lt;code&gt;equals&lt;/code&gt; &lt;code&gt;hashCode&lt;/code&gt; とhashCodeメソッドの要素ベースのバージョンを定義せず、代わりにクラス &lt;code&gt;Object&lt;/code&gt; からIDベースのバージョンを継承します。</target>
        </trans-unit>
        <trans-unit id="40cffbac4a1f83e6256195266a7d20f5564b4d94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DialogType.COMMON&lt;/code&gt;, &lt;code&gt;DialogType.NATIVE&lt;/code&gt;, or &lt;code&gt;DialogType.NONE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DialogType.COMMON&lt;/code&gt; 、 &lt;code&gt;DialogType.NATIVE&lt;/code&gt; 、または &lt;code&gt;DialogType.NONE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c53d0fb64a00ee4cb716575127743bcda6209fc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DiffieHellman&lt;/code&gt; (1024)</source>
          <target state="translated">&lt;code&gt;DiffieHellman&lt;/code&gt; （1024）</target>
        </trans-unit>
        <trans-unit id="914677f73256948b55184ea61d5c17ff0123eeb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DiffieHellman&lt;/code&gt; (1024, 2048)</source>
          <target state="translated">&lt;code&gt;DiffieHellman&lt;/code&gt; （1024、2048）</target>
        </trans-unit>
        <trans-unit id="0a6b42bc4d64ddd0f190d08d4d10625c706c5375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DiffieHellman&lt;/code&gt; (1024, 2048, 4096)</source>
          <target state="translated">&lt;code&gt;DiffieHellman&lt;/code&gt; （1024、2048、4096）</target>
        </trans-unit>
        <trans-unit id="a89ea9c0771a38eb80fdae677e70a1bdfd4cd7a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DirContext&lt;/code&gt; also behaves as a naming context by extending the &lt;code&gt;Context&lt;/code&gt; interface in the &lt;code&gt;javax.naming&lt;/code&gt; package. This means that any directory object can also provide a naming context. For example, the directory object for a person might contain the attributes of that person, and at the same time provide a context for naming objects relative to that person such as his printers and home directory.</source>
          <target state="translated">&lt;code&gt;DirContext&lt;/code&gt; は、 &lt;code&gt;javax.naming&lt;/code&gt; パッケージの &lt;code&gt;Context&lt;/code&gt; インターフェースを拡張することにより、ネーミングコンテキストとしても動作します。これは、どのディレクトリオブジェクトも名前付けコンテキストを提供できることを意味します。たとえば、人物のディレクトリオブジェクトには、その人物の属性が含まれていると同時に、プリンタやホームディレクトリなど、その人物に関連するオブジェクトに名前を付けるためのコンテキストが提供されている場合があります。</target>
        </trans-unit>
        <trans-unit id="5792729aa4540c3123da205e3eb0ace9a9fe61c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DirContext&lt;/code&gt; contains methods for performing content-based searching of the directory. In the simplest and most common form of usage, the application specifies a set of attributes--possibly with specific values--to match, and submits this attribute set, to the &lt;code&gt;search()&lt;/code&gt; method. There are other overloaded forms of &lt;code&gt;search()&lt;/code&gt; that support more sophisticated &lt;em&gt;search filters&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;DirContext&lt;/code&gt; には、ディレクトリのコンテンツベースの検索を実行するためのメソッドが含まれています。最も単純で最も一般的な使用方法では、アプリケーションは、特定の値を使用する可能性のある属性のセットを指定して、この属性セットを &lt;code&gt;search()&lt;/code&gt; メソッドに送信します。より洗練された&lt;em&gt;検索フィルター&lt;/em&gt;をサポートする他のオーバーロードされた形式の &lt;code&gt;search()&lt;/code&gt; があります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="09df54d6c818038812565940d73a4163f3e53360" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DirectoryManager.getObjectInstance()&lt;/code&gt; successively loads in object factories. If it encounters a &lt;code&gt;DirObjectFactory&lt;/code&gt;, it will invoke &lt;code&gt;DirObjectFactory.getObjectInstance()&lt;/code&gt;; otherwise, it invokes &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt;. It does this until a factory produces a non-null answer.</source>
          <target state="translated">&lt;code&gt;DirectoryManager.getObjectInstance()&lt;/code&gt; は、オブジェクトファクトリに連続してロードします。それが遭遇した場合 &lt;code&gt;DirObjectFactory&lt;/code&gt; を、それが起動します &lt;code&gt;DirObjectFactory.getObjectInstance()&lt;/code&gt; ; それ以外の場合は、 &lt;code&gt;ObjectFactory.getObjectInstance()&lt;/code&gt; を呼び出します。これは、ファクトリがnull以外の回答を生成するまで行われます。</target>
        </trans-unit>
        <trans-unit id="f86324db481587886f342c04b19ddf73e6679064" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt; successively loads in state factories. If a factory implements &lt;code&gt;DirStateFactory&lt;/code&gt;, &lt;code&gt;DirectoryManager&lt;/code&gt; invokes this method; otherwise, it invokes &lt;code&gt;StateFactory.getStateToBind()&lt;/code&gt;. It does this until a factory produces a non-null answer.</source>
          <target state="translated">&lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt; は、ステートファクトリに連続してロードします。ファクトリが &lt;code&gt;DirStateFactory&lt;/code&gt; を実装している場合、 &lt;code&gt;DirectoryManager&lt;/code&gt; はこのメソッドを呼び出します。それ以外の場合は、 &lt;code&gt;StateFactory.getStateToBind()&lt;/code&gt; を呼び出します。これは、ファクトリがnull以外の回答を生成するまで行われます。</target>
        </trans-unit>
        <trans-unit id="2064d6f94b778843b611daf1f37f67fd34ec2d37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DirectoryManager&lt;/code&gt; is safe for concurrent access by multiple threads.</source>
          <target state="translated">&lt;code&gt;DirectoryManager&lt;/code&gt; は、複数のスレッドによる同時アクセスに対して安全です。</target>
        </trans-unit>
        <trans-unit id="a92c0395bd973c1d7a5990789758ae8d67cdc80f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocAttribute&lt;/code&gt;s which are to be specified on the &lt;code&gt;Doc&lt;/code&gt; must be included in this set to accurately represent the context.</source>
          <target state="translated">&lt;code&gt;DocAttribute&lt;/code&gt; &lt;code&gt;Doc&lt;/code&gt; で指定されるDocAttributeは、コンテキストを正確に表すためにこのセットに含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="0c6a919f97734d4e67d8dbc26bb50eaa928e4894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DockingListener&lt;/code&gt; for &lt;code&gt;MetalToolBarUI&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DockingListener&lt;/code&gt; の &lt;code&gt;MetalToolBarUI&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="543ebc95484a5c30bb8a17d799a0d20faa874af7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document.inputEncoding&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;Document.inputEncoding&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="b45f1d389e09ebca5519e73cf3a872524800a7ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document.xmlEncoding&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Document.xmlEncoding&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="7b407aa8b7ae77dbddfbfe395e59ea6177846984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document&lt;/code&gt; nodes are written, including the XML declaration (unless the parameter &quot;xml-declaration&quot; is set to &lt;code&gt;false&lt;/code&gt;) and a DTD subset, if one exists in the DOM. Writing a &lt;code&gt;Document&lt;/code&gt; node serializes the entire document.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; XML宣言（パラメーター &quot;xml-declaration&quot;が &lt;code&gt;false&lt;/code&gt; に設定されている場合を除く）およびDTDサブセット（DOMに存在する場合）を含むドキュメントノードが書き込まれます。 &lt;code&gt;Document&lt;/code&gt; ノードを作成すると、ドキュメント全体がシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="b37d487719ba02c4168d6e8b316b96235c3e38d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document&lt;/code&gt; nodes cannot be adopted.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; ノードは採用できません。</target>
        </trans-unit>
        <trans-unit id="95ed47064f6dad9b43129d869396522461467783" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document&lt;/code&gt; nodes cannot be imported.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; ノードはインポートできません。</target>
        </trans-unit>
        <trans-unit id="0d766e16445218d1589b4eaa94bf64c97df9a921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document&lt;/code&gt; result of parsing the &lt;code&gt;InputStream&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; &lt;code&gt;InputStream&lt;/code&gt; の解析結果を文書化します</target>
        </trans-unit>
        <trans-unit id="0c492d3683adb0835b33cde3d91883965efbf45b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Document&lt;/code&gt;, &lt;code&gt;DocumentType&lt;/code&gt;, &lt;code&gt;DocumentFragment&lt;/code&gt;, &lt;code&gt;Notation&lt;/code&gt;, &lt;code&gt;Entity&lt;/code&gt; , and children of &lt;code&gt;Attr&lt;/code&gt; nodes are not passed to the filter. The child nodes of an &lt;code&gt;EntityReference&lt;/code&gt; node are only passed to the filter if the &lt;code&gt;EntityReference&lt;/code&gt; node is skipped by the method &lt;code&gt;LSParserFilter.acceptNode()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; 、 &lt;code&gt;DocumentType&lt;/code&gt; 、 &lt;code&gt;DocumentFragment&lt;/code&gt; 、 &lt;code&gt;Notation&lt;/code&gt; 、 &lt;code&gt;Entity&lt;/code&gt; 、および &lt;code&gt;Attr&lt;/code&gt; ノードの子はフィルターに渡されません。子ノード &lt;code&gt;EntityReference&lt;/code&gt; 場合ノードのみフィルタに渡される &lt;code&gt;EntityReference&lt;/code&gt; ノードがメソッドによってスキップさ &lt;code&gt;LSParserFilter.acceptNode()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4bb2c607723c47087e45826c3c7cb4428361e527" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentBuilder&lt;/code&gt; is reset to the same state as when it was created with &lt;a href=&quot;documentbuilderfactory#newDocumentBuilder()&quot;&gt;&lt;code&gt;DocumentBuilderFactory.newDocumentBuilder()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;reset()&lt;/code&gt; is designed to allow the reuse of existing &lt;code&gt;DocumentBuilder&lt;/code&gt;s thus saving resources associated with the creation of new &lt;code&gt;DocumentBuilder&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;DocumentBuilder&lt;/code&gt; は、&lt;a href=&quot;documentbuilderfactory#newDocumentBuilder()&quot;&gt; &lt;code&gt;DocumentBuilderFactory.newDocumentBuilder()&lt;/code&gt; で&lt;/a&gt;作成されたときと同じ状態にリセットされます。 &lt;code&gt;reset()&lt;/code&gt; は、既存の &lt;code&gt;DocumentBuilder&lt;/code&gt; を再利用できるように設計されているため、新しい &lt;code&gt;DocumentBuilder&lt;/code&gt; の作成に関連するリソースを節約できます。</target>
        </trans-unit>
        <trans-unit id="81d2cf523601208f09d89c363fd2bc11e1d5b9b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentFilter&lt;/code&gt;, as the name implies, is a filter for the &lt;code&gt;Document&lt;/code&gt; mutation methods.</source>
          <target state="translated">&lt;code&gt;DocumentFilter&lt;/code&gt; は、その名前が示すように、 &lt;code&gt;Document&lt;/code&gt; ミューテーションメソッドのフィルターです。</target>
        </trans-unit>
        <trans-unit id="9f7baec10ddb03e92b7880ce7dd440573017b206" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentFilter&lt;/code&gt;, as the name implies, is a filter for the &lt;code&gt;Document&lt;/code&gt; mutation methods. When a &lt;code&gt;Document&lt;/code&gt; containing a &lt;code&gt;DocumentFilter&lt;/code&gt; is modified (either through &lt;code&gt;insert&lt;/code&gt; or &lt;code&gt;remove&lt;/code&gt;), it forwards the appropriate method invocation to the &lt;code&gt;DocumentFilter&lt;/code&gt;. The default implementation allows the modification to occur. Subclasses can filter the modifications by conditionally invoking methods on the superclass, or invoking the necessary methods on the passed in &lt;code&gt;FilterBypass&lt;/code&gt;. Subclasses should NOT call back into the Document for the modification instead call into the superclass or the &lt;code&gt;FilterBypass&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DocumentFilter&lt;/code&gt; は、その名前が示すように、 &lt;code&gt;Document&lt;/code&gt; ミューテーションメソッドのフィルターです。場合 &lt;code&gt;Document&lt;/code&gt; 含有 &lt;code&gt;DocumentFilter&lt;/code&gt; は、（いずれかを介して修飾されている &lt;code&gt;insert&lt;/code&gt; または &lt;code&gt;remove&lt;/code&gt; するには、前方に適切なメソッド呼び出し） &lt;code&gt;DocumentFilter&lt;/code&gt; 。デフォルトの実装では、変更を行うことができます。サブクラスは、スーパークラスで条件付きでメソッドを呼び出すか、 &lt;code&gt;FilterBypass&lt;/code&gt; で渡されたメソッドで必要なメソッドを呼び出すことにより、変更をフィルタリングできます。サブクラスは、変更のためにドキュメントをコールバックしないで &lt;code&gt;FilterBypass&lt;/code&gt; 。代わりに、スーパークラスまたはFilterBypassを呼び出してください。</target>
        </trans-unit>
        <trans-unit id="4ccfd2a5dcdb05e199a7df560efc65280cd3e8ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentFragment&lt;/code&gt; is a &quot;lightweight&quot; or &quot;minimal&quot; &lt;code&gt;Document&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;DocumentFragment&lt;/code&gt; は、「軽量」または「最小」の &lt;code&gt;Document&lt;/code&gt; オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="4ac63a67802d1b43d585cfac083f7d21e3b1595f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentFragment&lt;/code&gt; is a &quot;lightweight&quot; or &quot;minimal&quot; &lt;code&gt;Document&lt;/code&gt; object. It is very common to want to be able to extract a portion of a document's tree or to create a new fragment of a document. Imagine implementing a user command like cut or rearranging a document by moving fragments around. It is desirable to have an object which can hold such fragments and it is quite natural to use a Node for this purpose. While it is true that a &lt;code&gt;Document&lt;/code&gt; object could fulfill this role, a &lt;code&gt;Document&lt;/code&gt; object can potentially be a heavyweight object, depending on the underlying implementation. What is really needed for this is a very lightweight object. &lt;code&gt;DocumentFragment&lt;/code&gt; is such an object.</source>
          <target state="translated">&lt;code&gt;DocumentFragment&lt;/code&gt; は、「軽量」または「最小」の &lt;code&gt;Document&lt;/code&gt; オブジェクトです。ドキュメントのツリーの一部を抽出したり、ドキュメントの新しいフラグメントを作成したりすることは非常に一般的です。フラグメントを移動してドキュメントを切り取ったり再配置したりするようなユーザーコマンドを実装することを想像してみてください。このようなフラグメントを保持できるオブジェクトが望ましいので、この目的でノードを使用するのは非常に自然です。 &lt;code&gt;Document&lt;/code&gt; オブジェクトがこの役割を果たすことができるのは事実ですが、基盤となる実装によっては、 &lt;code&gt;Document&lt;/code&gt; オブジェクトが重量級のオブジェクトになる可能性があります。これに本当に必要なのは、非常に軽量なオブジェクトです。 &lt;code&gt;DocumentFragment&lt;/code&gt; はそのようなオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="b902b96377a51b8b38b72a56177252d7d4579c68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentFragment&lt;/code&gt; nodes are serialized by serializing the children of the document fragment in the order they appear in the document fragment.</source>
          <target state="translated">&lt;code&gt;DocumentFragment&lt;/code&gt; ノードは、ドキュメントフラグメントの子を、ドキュメントフラグメントに表示される順序でシリアル化することによってシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="659895d243b0c297153cbbe188cfdd0d9cdb35bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentTraversal&lt;/code&gt; contains methods that create &lt;code&gt;NodeIterators&lt;/code&gt; and &lt;code&gt;TreeWalkers&lt;/code&gt; to traverse a node and its children in document order (depth first, pre-order traversal, which is equivalent to the order in which the start tags occur in the text representation of the document).</source>
          <target state="translated">&lt;code&gt;DocumentTraversal&lt;/code&gt; には、 &lt;code&gt;NodeIterators&lt;/code&gt; と &lt;code&gt;TreeWalkers&lt;/code&gt; を作成して、ノードとその子をドキュメントの順序でトラバースするメソッドが含まれています（深さ優先、プレオーダートラバーサル。これは、ドキュメントのテキスト表現で開始タグが発生する順序と同じです）。</target>
        </trans-unit>
        <trans-unit id="c2fcf6c0454a88db8728e286edbaddcc0e999a37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentTraversal&lt;/code&gt; contains methods that create &lt;code&gt;NodeIterators&lt;/code&gt; and &lt;code&gt;TreeWalkers&lt;/code&gt; to traverse a node and its children in document order (depth first, pre-order traversal, which is equivalent to the order in which the start tags occur in the text representation of the document). In DOMs which support the Traversal feature, &lt;code&gt;DocumentTraversal&lt;/code&gt; will be implemented by the same objects that implement the Document interface.</source>
          <target state="translated">&lt;code&gt;DocumentTraversal&lt;/code&gt; には、 &lt;code&gt;NodeIterators&lt;/code&gt; と &lt;code&gt;TreeWalkers&lt;/code&gt; を作成して、ノードとその子をドキュメントの順序でトラバースするメソッドが含まれています（深さ優先、プレオーダートラバーサル。これは、ドキュメントのテキスト表現で開始タグが発生する順序と同じです）。トラバーサル機能をサポートするDOMでは、 &lt;code&gt;DocumentTraversal&lt;/code&gt; は、Documentインターフェイスを実装するのと同じオブジェクトによって実装されます。</target>
        </trans-unit>
        <trans-unit id="d381ad218fdf0fca28cd300d73912b49f9158dfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentType&lt;/code&gt; nodes cannot be adopted.</source>
          <target state="translated">&lt;code&gt;DocumentType&lt;/code&gt; ノードは採用できません。</target>
        </trans-unit>
        <trans-unit id="f54d62aa176ae72ad1969fa2a268a0a5b07edafd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DocumentType&lt;/code&gt; nodes cannot be imported.</source>
          <target state="translated">&lt;code&gt;DocumentType&lt;/code&gt; ノードはインポートできません。</target>
        </trans-unit>
        <trans-unit id="9048d91e0f8c8d923c9e8cb627c66dcf1cc58c9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Double(-0.0)&lt;/code&gt; if both &lt;code&gt;isParseBigDecimal()&lt;/code&gt; and &lt;code&gt;isParseIntegerOnly()&lt;/code&gt; are false.</source>
          <target state="translated">&lt;code&gt;Double(-0.0)&lt;/code&gt; &lt;code&gt;isParseBigDecimal()&lt;/code&gt; と &lt;code&gt;isParseIntegerOnly()&lt;/code&gt; の両方がfalseの場合、Double（-0.0）。</target>
        </trans-unit>
        <trans-unit id="9da8cff5c95b35967306da5e5b2f8c9fad055766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Double.NaN&lt;/code&gt; is considered by this method to be equal to itself and greater than all other &lt;code&gt;double&lt;/code&gt; values (including &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Double.NaN&lt;/code&gt; このメソッドでは、Double.NaNはそれ自体と等しく、他のすべての &lt;code&gt;double&lt;/code&gt; 値（ &lt;code&gt;Double.POSITIVE_INFINITY&lt;/code&gt; を含む）よりも大きいと見なされます。</target>
        </trans-unit>
        <trans-unit id="4dd312cf923103aca3696c7f4775ff77c24070dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DoubleStream.iterate&lt;/code&gt; should produce the same sequence of elements as produced by the corresponding for-loop:</source>
          <target state="translated">&lt;code&gt;DoubleStream.iterate&lt;/code&gt; は、対応するforループによって生成されるものと同じ要素のシーケンスを生成する必要があります。</target>
        </trans-unit>
        <trans-unit id="beb0f3783d20d53b34997322c5fa55b324d54a20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;reduction&lt;/a&gt; target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; は、&lt;a href=&quot;stream/stream&quot;&gt;ストリームの&lt;/a&gt;&lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;削減&lt;/a&gt;ターゲットとして使用できます。例えば：</target>
        </trans-unit>
        <trans-unit id="8dbc465130bcec70ae126f81e19d9136dabeb003" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;reduction&lt;/a&gt; target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; は、&lt;a href=&quot;stream/stream&quot;&gt;ストリームの&lt;/a&gt;&lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;削減&lt;/a&gt;ターゲットとして使用できます。例えば：</target>
        </trans-unit>
        <trans-unit id="36167a6d8ef9e69497700eec1acae687e88e8b1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DragSourceEvent&lt;/code&gt;s are generated whenever the drag enters, moves over, or exits a drop site, when the drop action changes, and when the drag ends. The location for the generated &lt;code&gt;DragSourceEvent&lt;/code&gt; specifies the mouse cursor location in screen coordinates at the moment this event occurred.</source>
          <target state="translated">&lt;code&gt;DragSourceEvent&lt;/code&gt; は、ドラッグがドロップサイトに入る、移動する、または出るとき、ドロップアクションが変更されるとき、およびドラッグが終了するときに生成されます。生成された &lt;code&gt;DragSourceEvent&lt;/code&gt; の場所は、このイベントが発生した瞬間の画面座標でのマウスカーソルの場所を指定します。</target>
        </trans-unit>
        <trans-unit id="14bf5fa06cba37be55b3590487b71d48993380ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Driver&lt;/code&gt; interface -- provides the API for registering and connecting drivers based on JDBC technology (&quot;JDBC drivers&quot;); generally used only by the &lt;code&gt;DriverManager&lt;/code&gt; class</source>
          <target state="translated">&lt;code&gt;Driver&lt;/code&gt; インターフェイス-JDBCテクノロジーに基づいてドライバーを登録および接続するためのAPI（「JDBCドライバー」）を提供します。通常、 &lt;code&gt;DriverManager&lt;/code&gt; クラスでのみ使用されます</target>
        </trans-unit>
        <trans-unit id="dc514f897b1c82361eeeb08f2c0916b30f7f5506" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DriverManager&lt;/code&gt; class -- makes a connection with a driver</source>
          <target state="translated">&lt;code&gt;DriverManager&lt;/code&gt; クラス-ドライバーとの接続を確立します</target>
        </trans-unit>
        <trans-unit id="76034b55e4d0e1e48f244f47e3a2bf96a7116609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DriverManager&lt;/code&gt; initialization is done lazily and looks up service providers using the thread context class loader. The drivers loaded and available to an application will depend on the thread context class loader of the thread that triggers driver initialization by &lt;code&gt;DriverManager&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DriverManager&lt;/code&gt; の初期化は遅延して行われ、スレッドコンテキストクラスローダーを使用してサービスプロバイダーを検索します。ロードされてアプリケーションで使用できるドライバーは、 &lt;code&gt;DriverManager&lt;/code&gt; によるドライバーの初期化をトリガーするスレッドのスレッドコンテキストクラスローダーに依存します。</target>
        </trans-unit>
        <trans-unit id="2353186265de4b132202e3a99ad04eb87e53996d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DriverPropertyInfo&lt;/code&gt; class -- provides properties for a JDBC driver; not used by the general user</source>
          <target state="translated">&lt;code&gt;DriverPropertyInfo&lt;/code&gt; クラス-JDBCドライバーのプロパティを提供します。一般ユーザーは使用しません</target>
        </trans-unit>
        <trans-unit id="1c1004d82e6f836c5fca36164c84bebdaad75e4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DropTarget&lt;/code&gt; objects manifest &quot;Drag Under&quot; feedback to the user, in the typical case, by rendering animations into their associated GUI &lt;code&gt;Component&lt;/code&gt;(s) under the GUI Cursor.</source>
          <target state="translated">&lt;code&gt;DropTarget&lt;/code&gt; オブジェクトは、通常、GUIカーソルの下で関連するGUI &lt;code&gt;Component&lt;/code&gt; アニメーションをレンダリングすることにより、ユーザーに「下にドラッグ」フィードバックを明示します。</target>
        </trans-unit>
        <trans-unit id="ea562f4880999384cb9584bc386c0a82713cbfff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Duration&lt;/code&gt; of years and months of this &lt;code&gt;Duration&lt;/code&gt; as days.</source>
          <target state="translated">&lt;code&gt;Duration&lt;/code&gt; の年と月の &lt;code&gt;Duration&lt;/code&gt; を日数として。</target>
        </trans-unit>
        <trans-unit id="0882532caac551c9de94e6fa0a0c59351867e102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DynamicUtilTreeNode&lt;/code&gt; can wrap vectors/hashtables/arrays/strings and create the appropriate children tree nodes as necessary.</source>
          <target state="translated">&lt;code&gt;DynamicUtilTreeNode&lt;/code&gt; は、ベクトル/ハッシュテーブル/配列/文字列をラップし、必要に応じて適切な子ツリーノードを作成できます。</target>
        </trans-unit>
        <trans-unit id="2b94df8ae8c2b3667e474d3108259cd82e1598b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DynamicUtilTreeNode&lt;/code&gt; can wrap vectors/hashtables/arrays/strings and create the appropriate children tree nodes as necessary. It is dynamic in that it will only create the children as necessary.</source>
          <target state="translated">&lt;code&gt;DynamicUtilTreeNode&lt;/code&gt; は、ベクトル/ハッシュテーブル/配列/文字列をラップし、必要に応じて適切な子ツリーノードを作成できます。必要な場合にのみ子を作成するという点で動的です。</target>
        </trans-unit>
        <trans-unit id="0faa3cb9d71752dc2c186446730225f2317ec969" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The base class of elements held in this array</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -この配列に保持されている要素の基本クラス</target>
        </trans-unit>
        <trans-unit id="bf1437cc83c446bf4aa593e17085e1af9ba9ce95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The class of the elements in the collection</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -コレクション内の要素のクラス</target>
        </trans-unit>
        <trans-unit id="361e98d763634ad8ec7a10bf657261ee37729657" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The class of the elements in the enum set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -列挙セットの要素のクラス</target>
        </trans-unit>
        <trans-unit id="8ec8941e9851ee55fe24c26103e577c50d64baea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The class of the elements in the set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -セット内の要素のクラス</target>
        </trans-unit>
        <trans-unit id="7d76cc61fcf088a06b26e3a5f7d98b04e375009c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The class of the parameter elements and of the set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -パラメータ要素とセットのクラス</target>
        </trans-unit>
        <trans-unit id="b25490b1c8ed44bbd9edd0693726eed05004841d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The class of the specified element and of the set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -指定された要素とセットのクラス</target>
        </trans-unit>
        <trans-unit id="d2de7ed4a566f06b473b0513e7b5f8989042d895" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The enum type for which a constant value is to be returned</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -定数値が返される列挙型</target>
        </trans-unit>
        <trans-unit id="ad253a36a7d7b3b3a100cec773acd949f4c61316" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - The enum type subclass</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -列挙型サブクラス</target>
        </trans-unit>
        <trans-unit id="297cda062ba4927b388aa132a3b710de3d42ce41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - Type of component elements</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -構成要素のタイプ</target>
        </trans-unit>
        <trans-unit id="bf2496dabd6861a8a3375b92943a60260dc05350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the &lt;code&gt;List&lt;/code&gt;'s element type</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - &lt;code&gt;List&lt;/code&gt; の要素型</target>
        </trans-unit>
        <trans-unit id="524cc3c0c1c76c6cb03e13a0bc5f633f19a22757" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the &lt;code&gt;Set&lt;/code&gt;'s element type</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; - &lt;code&gt;Set&lt;/code&gt; の要素型</target>
        </trans-unit>
        <trans-unit id="dec398885250622eb9629f1fa14fcf6bde23d555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the Java type that described instances must have</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -インスタンスを記述したJavaタイプは</target>
        </trans-unit>
        <trans-unit id="c72a0eaef3c43f14fb8eba41af201909d684d8c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the class of the map keys and of the objects in the returned set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -マップキーと返されたセット内のオブジェクトのクラス</target>
        </trans-unit>
        <trans-unit id="9f86769f0bada4e55235e6b1c975d051e63c8d3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the class of the objects in the collection</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -コレクション内のオブジェクトのクラス</target>
        </trans-unit>
        <trans-unit id="7fc113d7abe10ac7f2fc4eb5bb2af975a242c727" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the class of the objects in the list</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -リスト内のオブジェクトのクラス</target>
        </trans-unit>
        <trans-unit id="69601f08684e4e26ce097f560e0fc1583618dbfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the class of the objects in the queue</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -キュー内のオブジェクトのクラス</target>
        </trans-unit>
        <trans-unit id="12fa27c904b9b0de01918fc369202a3951fc403b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the class of the objects in the set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -セット内のオブジェクトのクラス</target>
        </trans-unit>
        <trans-unit id="0f086297c933260861f3f493814f7d98364778e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements held in this collection</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -このコレクションに保持されている要素のタイプ</target>
        </trans-unit>
        <trans-unit id="cefaab8a71cf76be7a437b56508cb0b3d45edf86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements held in this deque</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -この両端キューに保持されている要素のタイプ</target>
        </trans-unit>
        <trans-unit id="0695e7f9d1279d77cdf133ec26175ff3b0d937d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements held in this list</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -このリストに保持されている要素のタイプ</target>
        </trans-unit>
        <trans-unit id="d88da2df9071d078e83dc963f539d08e43070408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements held in this queue</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -このキューに保持されている要素のタイプ</target>
        </trans-unit>
        <trans-unit id="0c05513393245baadd78c93632560368cb7e8974" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements held in this set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -このセットに保持されている要素のタイプ</target>
        </trans-unit>
        <trans-unit id="7d52f8802f1780fa99fea81b4cc597fb84353327" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements in this collection</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -このコレクションの要素のタイプ</target>
        </trans-unit>
        <trans-unit id="47bf0a88e642d5ced3075e45b22161ea6cae79b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements in this list</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -このリストの要素のタイプ</target>
        </trans-unit>
        <trans-unit id="98ec22579763e9440abdcf6f96ae2666c72c4ae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements maintained by this set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -このセットによって維持される要素のタイプ</target>
        </trans-unit>
        <trans-unit id="7c2862c0bd229619f4f8345dd2fa1c0a2be89520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of elements returned by this iterator</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -この反復子によって返される要素のタイプ</target>
        </trans-unit>
        <trans-unit id="4f509f05e252c39b1801ac266a69457b08f83615" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of the elements of this combo box</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -このコンボボックスの要素のタイプ</target>
        </trans-unit>
        <trans-unit id="58b481b9a5308e41fbf722a42fbe2607e51807f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of the elements of this list</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -このリストの要素のタイプ</target>
        </trans-unit>
        <trans-unit id="6a33816c08a58aadb803fa75f7b77b179ff344af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of the elements of this model</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -このモデルの要素のタイプ</target>
        </trans-unit>
        <trans-unit id="315e17caea7b0a2448bc434639bc139188d21662" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - the type of values this renderer can be used for</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -このレンダラーを使用できる値のタイプ</target>
        </trans-unit>
        <trans-unit id="6ddf4a863c5be0beaf9068a557e640b0e5335d4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; - type of elements, if there were any, in the set</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; -セット内の要素のタイプ（存在する場合）</target>
        </trans-unit>
        <trans-unit id="c7e37d0a4f1a261fd00413c2e238eb392794c1a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EPOCH_DAY&lt;/code&gt; - If present, this is converted to a &lt;code&gt;LocalDate&lt;/code&gt; and all other date fields are then cross-checked against the date.</source>
          <target state="translated">&lt;code&gt;EPOCH_DAY&lt;/code&gt; -存在する場合、これは &lt;code&gt;LocalDate&lt;/code&gt; に変換され、他のすべての日付フィールドが日付に対してクロスチェックされます。</target>
        </trans-unit>
        <trans-unit id="0cc19a47c9bf9256cbb4905ca348e76e7ea08359" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EPOCH_DAY&lt;/code&gt; - If present, this is converted to a date and all other date fields are then cross-checked against the date.</source>
          <target state="translated">&lt;code&gt;EPOCH_DAY&lt;/code&gt; -存在する場合、これは日付に変換され、他のすべての日付フィールドは日付に対してクロスチェックされます。</target>
        </trans-unit>
        <trans-unit id="8aa6cf32a77705b393f789573e90523569e4533f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EPOCH_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified epoch-day. This completely replaces the date and is equivalent to &lt;a href=&quot;#ofEpochDay(long)&quot;&gt;&lt;code&gt;ofEpochDay(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;EPOCH_DAY&lt;/code&gt; -指定されたエポック日を持つ &lt;code&gt;LocalDate&lt;/code&gt; を返します。これは日付を完全に置き換え、&lt;a href=&quot;#ofEpochDay(long)&quot;&gt; &lt;code&gt;ofEpochDay(long)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="f7121d811ef992feec385966eb2e4889abb23c78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EPOCH_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified epoch-day. This completely replaces the date and is equivalent to &lt;a href=&quot;localdate#ofEpochDay-long-&quot;&gt;&lt;code&gt;ofEpochDay(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;EPOCH_DAY&lt;/code&gt; -指定されたエポック日で &lt;code&gt;LocalDate&lt;/code&gt; を返します。これは日付を完全に置き換え、&lt;a href=&quot;localdate#ofEpochDay-long-&quot;&gt; &lt;code&gt;ofEpochDay(long)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="d055afcf83204542d1a5eb967ddb5a854a77b5dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERA&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified era. The year-of-era and month will be unchanged. The day-of-month will also be unchanged, unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;ERA&lt;/code&gt; は -返し &lt;code&gt;LocalDate&lt;/code&gt; 指定された時代では。年号と月号は変更されません。月の日も、新しい月と年で無効にならない限り、変更されません。その場合、日は新しい月と年の最大有効値に調整されます。</target>
        </trans-unit>
        <trans-unit id="7192bcbcaa950d940ddff2aac0b184ee2878fd2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERA&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified era. The year-of-era will be unchanged.</source>
          <target state="translated">&lt;code&gt;ERA&lt;/code&gt; -指定された &lt;code&gt;Year&lt;/code&gt; を返します。年号は変更されません。</target>
        </trans-unit>
        <trans-unit id="5592ee89ee78259f7422a7461ebb8100053d8828" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERA&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified era. The month and year-of-era will be unchanged.</source>
          <target state="translated">&lt;code&gt;ERA&lt;/code&gt; は -返し &lt;code&gt;YearMonth&lt;/code&gt; 指定された時代では。月と年は変更されません。</target>
        </trans-unit>
        <trans-unit id="92d60b1fa4241d1b363fe6a15064ffb7756f3c10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERAS&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of eras added. Only two eras are supported so the amount must be one, zero or minus one. If the amount is non-zero then the year is changed such that the year-of-era is unchanged. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;ERAS&lt;/code&gt; -指定された &lt;code&gt;LocalDate&lt;/code&gt; が追加されたLocalDateを返します。2つの時代のみがサポートされているため、金額は1、ゼロ、またはマイナス1でなければなりません。金額がゼロ以外の場合、年は変更され、元号の年は変更されません。月の日は、新しい月と年で無効にならない限り、変更されません。その場合、日は新しい月と年の最大有効値に調整されます。</target>
        </trans-unit>
        <trans-unit id="436c7c34644682dc6664730ace48d38160ccfce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERAS&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified number of eras added. Only two eras are supported so the amount must be one, zero or minus one. If the amount is non-zero then the year is changed such that the year-of-era is unchanged.</source>
          <target state="translated">&lt;code&gt;ERAS&lt;/code&gt; -指定された &lt;code&gt;Year&lt;/code&gt; が追加された年を返します。2つの時代のみがサポートされているため、金額は1、ゼロ、またはマイナス1でなければなりません。金額がゼロ以外の場合、年は変更され、元号の年は変更されません。</target>
        </trans-unit>
        <trans-unit id="1699937a84ba6ad8bd1a082586a5e1944f13a06f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERAS&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of eras added. Only two eras are supported so the amount must be one, zero or minus one. If the amount is non-zero then the year is changed such that the year-of-era is unchanged.</source>
          <target state="translated">&lt;code&gt;ERAS&lt;/code&gt; は -返し &lt;code&gt;YearMonth&lt;/code&gt; 追加時代の指定された数とを。2つの時代のみがサポートされているため、金額は1、ゼロ、またはマイナス1でなければなりません。金額がゼロ以外の場合、年は変更され、元号の年は変更されません。</target>
        </trans-unit>
        <trans-unit id="a9422738414f8bc460037cdc3be55582ba06ad65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERROR&lt;/code&gt; level: usually used to log error messages.</source>
          <target state="translated">&lt;code&gt;ERROR&lt;/code&gt; レベル：通常、エラーメッセージをログに記録するために使用されます。</target>
        </trans-unit>
        <trans-unit id="5419867910ba863344df43054bf633f2cbf4df88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERROR&lt;/code&gt; level: usually used to log error messages. This level &lt;a href=&quot;#getSeverity()&quot;&gt;severity&lt;/a&gt; is &lt;code&gt;1000&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ERROR&lt;/code&gt; レベル：通常、エラーメッセージをログに記録するために使用されます。このレベルの&lt;a href=&quot;#getSeverity()&quot;&gt;重大度&lt;/a&gt;は &lt;code&gt;1000&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0fd8828d44db21a3c67a6fc02ed7689a1bab858b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EXIT_ON_CLOSE&lt;/code&gt; (defined in &lt;code&gt;WindowConstants&lt;/code&gt;): Exit the application using the &lt;code&gt;System&lt;/code&gt;&lt;code&gt;exit&lt;/code&gt; method. Use this only in applications.</source>
          <target state="translated">&lt;code&gt;EXIT_ON_CLOSE&lt;/code&gt; （で定義されて &lt;code&gt;WindowConstants&lt;/code&gt; ）：使用してアプリケーションを終了し &lt;code&gt;System&lt;/code&gt; &lt;code&gt;exit&lt;/code&gt; 方法を。これはアプリケーションでのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="8e5a65e686d575c44f22ac408a8801a25074e345" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EmptySelectionModel&lt;/code&gt; is a &lt;code&gt;TreeSelectionModel&lt;/code&gt; that does not allow anything to be selected.</source>
          <target state="translated">&lt;code&gt;EmptySelectionModel&lt;/code&gt; は、何も選択できない &lt;code&gt;TreeSelectionModel&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0ba9184609fdda58a17d4ca99ec16ca7f8538f62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Entity&lt;/code&gt; nodes can be imported, however in the current release of the DOM the &lt;code&gt;DocumentType&lt;/code&gt; is readonly. Ability to add these imported nodes to a &lt;code&gt;DocumentType&lt;/code&gt; will be considered for addition to a future release of the DOM.On import, the &lt;code&gt;publicId&lt;/code&gt;, &lt;code&gt;systemId&lt;/code&gt;, and &lt;code&gt;notationName&lt;/code&gt; attributes are copied. If a &lt;code&gt;deep&lt;/code&gt; import is requested, the descendants of the the source &lt;code&gt;Entity&lt;/code&gt; are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</source>
          <target state="translated">&lt;code&gt;Entity&lt;/code&gt; ノードはインポートできますが、DOMの現在のリリースでは、 &lt;code&gt;DocumentType&lt;/code&gt; は読み取り専用です。これらのインポートされたノードを &lt;code&gt;DocumentType&lt;/code&gt; に追加する機能は、DOMの将来のリリースに追加するために検討されます。インポート時に、 &lt;code&gt;publicId&lt;/code&gt; 、 &lt;code&gt;systemId&lt;/code&gt; 、および &lt;code&gt;notationName&lt;/code&gt; 属性がコピーされます。 &lt;code&gt;deep&lt;/code&gt; インポートが要求された場合、ソース &lt;code&gt;Entity&lt;/code&gt; 子孫が再帰的にインポートされ、結果のノードが再構築されて、対応するサブツリーが形成されます。</target>
        </trans-unit>
        <trans-unit id="2ece41806e5911c85908381b8e2a153c52badab3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Entity&lt;/code&gt; nodes cannot be adopted.</source>
          <target state="translated">&lt;code&gt;Entity&lt;/code&gt; ノードは採用できません。</target>
        </trans-unit>
        <trans-unit id="2cb6a6158fd92155f5b9b63ec7bb51d344ef21c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Entity&lt;/code&gt; nodes, when written directly by &lt;code&gt;LSSerializer.write&lt;/code&gt;, outputs the entity expansion but no namespace fixup is done. The resulting output will be valid as an external entity.</source>
          <target state="translated">&lt;code&gt;Entity&lt;/code&gt; ノードは、 &lt;code&gt;LSSerializer.write&lt;/code&gt; によって直接書き込まれると、エンティティ拡張を出力しますが、名前空間の修正は行われません。結果の出力は、外部エンティティとして有効になります。</target>
        </trans-unit>
        <trans-unit id="2bd6af26cb179e2c9c63c07856120ebfe1563820" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EntityReference&lt;/code&gt; nodes may be used to represent an entity reference in the tree.</source>
          <target state="translated">&lt;code&gt;EntityReference&lt;/code&gt; ノードは、ツリー内のエンティティ参照を表すために使用できます。</target>
        </trans-unit>
        <trans-unit id="c71b309f4451b904dd8b954021969ec850b75700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EntityReference&lt;/code&gt; nodes may be used to represent an entity reference in the tree. Note that character references and references to predefined entities are considered to be expanded by the HTML or XML processor so that characters are represented by their Unicode equivalent rather than by an entity reference. Moreover, the XML processor may completely expand references to entities while building the &lt;code&gt;Document&lt;/code&gt;, instead of providing &lt;code&gt;EntityReference&lt;/code&gt; nodes. If it does provide such nodes, then for an &lt;code&gt;EntityReference&lt;/code&gt; node that represents a reference to a known entity an &lt;code&gt;Entity&lt;/code&gt; exists, and the subtree of the &lt;code&gt;EntityReference&lt;/code&gt; node is a copy of the &lt;code&gt;Entity&lt;/code&gt; node subtree. However, the latter may not be true when an entity contains an unbound namespace prefix. In such a case, because the namespace prefix resolution depends on where the entity reference is, the descendants of the &lt;code&gt;EntityReference&lt;/code&gt; node may be bound to different namespace URIs. When an &lt;code&gt;EntityReference&lt;/code&gt; node represents a reference to an unknown entity, the node has no children and its replacement value, when used by &lt;code&gt;Attr.value&lt;/code&gt; for example, is empty.</source>
          <target state="translated">&lt;code&gt;EntityReference&lt;/code&gt; ノードは、ツリー内のエンティティ参照を表すために使用できます。文字参照および事前定義されたエンティティへの参照は、HTMLまたはXMLプロセッサによって拡張されたと見なされるため、文字はエンティティ参照ではなく、同等のUnicodeで表されることに注意してください。さらに、XMLプロセッサは、 &lt;code&gt;EntityReference&lt;/code&gt; ノードを提供する代わりに、 &lt;code&gt;Document&lt;/code&gt; 中にエンティティへの参照を完全に拡張する場合があります。そのようなノードを提供する場合、既知のエンティティへの参照を表す &lt;code&gt;EntityReference&lt;/code&gt; ノードの場合、 &lt;code&gt;Entity&lt;/code&gt; が存在し、 &lt;code&gt;EntityReference&lt;/code&gt; ノードのサブツリーは &lt;code&gt;Entity&lt;/code&gt; コピーです。ノードサブツリー。ただし、エンティティにバインドされていない名前空間プレフィックスが含まれている場合、後者は当てはまらない可能性があります。このような場合、名前空間プレフィックスの解決はエンティティ参照の場所に依存するため、 &lt;code&gt;EntityReference&lt;/code&gt; ノードの子孫は異なる名前空間URIにバインドされる可能性があります。 &lt;code&gt;EntityReference&lt;/code&gt; ノードが不明なエンティティへの参照を表す場合、ノードには子がなく、たとえば &lt;code&gt;Attr.value&lt;/code&gt; で使用される場合、その置換値は空です。</target>
        </trans-unit>
        <trans-unit id="c6c8c75a843a696aa22bb97cbd1c0166de9cd0b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Era&lt;/code&gt; returns &lt;code&gt;ERAS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Era&lt;/code&gt; は &lt;code&gt;ERAS&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="583e47b2348bb953596dfef107cbc3d6bf478432" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Era&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;Era&lt;/code&gt; はnullを返します</target>
        </trans-unit>
        <trans-unit id="79fc68e18753cfbbe2367d304206e532d69df9df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Era&lt;/code&gt; returns the associated chronology</source>
          <target state="translated">&lt;code&gt;Era&lt;/code&gt; は関連する年表を返します</target>
        </trans-unit>
        <trans-unit id="b0bd94277b509521f6b0d76b3f181090c5e24828" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Event&lt;/code&gt; is a platform-independent class that encapsulates events from the platform's Graphical User Interface in the Java 1.0 event model. In Java 1.1 and later versions, the &lt;code&gt;Event&lt;/code&gt; class is maintained only for backwards compatibility. The information in this class description is provided to assist programmers in converting Java 1.0 programs to the new event model.</source>
          <target state="translated">&lt;code&gt;Event&lt;/code&gt; は、プラットフォームに依存しないクラスであり、プラットフォームのグラフィカルユーザーインターフェイスからのイベントをJava1.0イベントモデルにカプセル化します。Java 1.1以降のバージョンでは、 &lt;code&gt;Event&lt;/code&gt; クラスは下位互換性のためにのみ維持されます。このクラスの説明の情報は、プログラマーがJava1.0プログラムを新しいイベントモデルに変換するのを支援するために提供されています。</target>
        </trans-unit>
        <trans-unit id="90b4c5122f384da2b33a8c47aee335116a89598a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EventQueue&lt;/code&gt; is a platform-independent class that queues events, both from the underlying peer classes and from trusted application classes.</source>
          <target state="translated">&lt;code&gt;EventQueue&lt;/code&gt; は、基盤となるピアクラスと信頼できるアプリケーションクラスの両方からのイベントをキューに入れる、プラットフォームに依存しないクラスです。</target>
        </trans-unit>
        <trans-unit id="5be692751fb19ebf9647e17be2c244dfc7b8cc3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; - the kind of file object forwarded to by this object</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; -このオブジェクトによって転送されるファイルオブジェクトの種類</target>
        </trans-unit>
        <trans-unit id="cba960ec4c81ca0de97fa7fd5a5b2acef3592fc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_ACCEPT&lt;/code&gt; if the &lt;code&gt;Element&lt;/code&gt; should be included in the DOM document being built.</source>
          <target state="translated">&lt;code&gt;FILTER_ACCEPT&lt;/code&gt; 中のDOMドキュメントに &lt;code&gt;Element&lt;/code&gt; を含める必要がある場合はFILTER_ACCEPT。</target>
        </trans-unit>
        <trans-unit id="cdb365489828fe5f7aa7e7e89f053527e5b53fce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_ACCEPT&lt;/code&gt; if this &lt;code&gt;Node&lt;/code&gt; should be included in the DOM document being built.</source>
          <target state="translated">&lt;code&gt;FILTER_ACCEPT&lt;/code&gt; この &lt;code&gt;Node&lt;/code&gt; を構築中のDOMドキュメントに含める必要がある場合はFILTER_ACCEPT。</target>
        </trans-unit>
        <trans-unit id="f5d22d13b475a2e19e2f36de25e79b3abc15fe49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_INTERRUPT&lt;/code&gt; if the filter wants to stop the processing of the document. Interrupting the processing of the document does no longer guarantee that the resulting DOM tree is XML well-formed. The &lt;code&gt;Element&lt;/code&gt; is rejected.</source>
          <target state="translated">&lt;code&gt;FILTER_INTERRUPT&lt;/code&gt; フィルタがドキュメントの処理を停止したい場合は、FILTER_INTERRUPT。ドキュメントの処理を中断しても、結果のDOMツリーがXMLで整形式であることが保証されなくなりました。 &lt;code&gt;Element&lt;/code&gt; 拒否されます。</target>
        </trans-unit>
        <trans-unit id="2f9b2f9c0745c204bfc472facf3e22d57ddb382e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_INTERRUPT&lt;/code&gt; if the filter wants to stop the processing of the document. Interrupting the processing of the document does no longer guarantee that the resulting DOM tree is XML well-formed. The &lt;code&gt;Node&lt;/code&gt; is accepted and will be the last completely parsed node.</source>
          <target state="translated">&lt;code&gt;FILTER_INTERRUPT&lt;/code&gt; フィルタがドキュメントの処理を停止したい場合は、FILTER_INTERRUPT。ドキュメントの処理を中断しても、結果のDOMツリーがXMLで整形式であることが保証されなくなりました。 &lt;code&gt;Node&lt;/code&gt; 受け入れられ、最後に完全に解析されたノードとなります。</target>
        </trans-unit>
        <trans-unit id="aa9be6163725d49380f8a0d3232fb6457d3efa2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_REJECT&lt;/code&gt; if the &lt;code&gt;Element&lt;/code&gt; and all of its children should be rejected.</source>
          <target state="translated">&lt;code&gt;FILTER_REJECT&lt;/code&gt; &lt;code&gt;Element&lt;/code&gt; とそのすべての子を拒否する必要がある場合は、FILTER_REJECT。</target>
        </trans-unit>
        <trans-unit id="4c6bf521cf55c183abb0baa51d7c2137eab0204f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_REJECT&lt;/code&gt; if the &lt;code&gt;Node&lt;/code&gt; and all of its children should be rejected.</source>
          <target state="translated">&lt;code&gt;FILTER_REJECT&lt;/code&gt; &lt;code&gt;Node&lt;/code&gt; とそのすべての子を拒否する必要がある場合は、FILTER_REJECT。</target>
        </trans-unit>
        <trans-unit id="6a43f64dd5b6cd50eac4a1bc25d94a1d5d9603d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_SKIP&lt;/code&gt; if the &lt;code&gt;Element&lt;/code&gt; should be skipped. All of its children are inserted in place of the skipped &lt;code&gt;Element&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;FILTER_SKIP&lt;/code&gt; &lt;code&gt;Element&lt;/code&gt; をスキップする必要がある場合はFILTER_SKIP。スキップされた &lt;code&gt;Element&lt;/code&gt; ノードの代わりに、そのすべての子が挿入されます。</target>
        </trans-unit>
        <trans-unit id="1b4dd3bdcef625de6de84a7811e612f2f55f8f53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FILTER_SKIP&lt;/code&gt; if the &lt;code&gt;Node&lt;/code&gt; should be skipped and the &lt;code&gt;Node&lt;/code&gt; should be replaced by all the children of the &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FILTER_SKIP&lt;/code&gt; 場合は &lt;code&gt;Node&lt;/code&gt; スキップされるべきと &lt;code&gt;Node&lt;/code&gt; 、すべての子どもたちに置き換える必要がある &lt;code&gt;Node&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="629d29c206731a97fc916c39b34395adad34522c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FONT&lt;/code&gt; is used for special situations where clients already have a &lt;code&gt;Font&lt;/code&gt; instance but still need to use &lt;code&gt;Map&lt;/code&gt;-based APIs. Typically, there will be no other attributes in the &lt;code&gt;Map&lt;/code&gt; except the &lt;code&gt;FONT&lt;/code&gt; attribute. With &lt;code&gt;Map&lt;/code&gt;-based APIs the common case is to specify all attributes individually, so &lt;code&gt;FONT&lt;/code&gt; is not needed or desirable.</source>
          <target state="translated">&lt;code&gt;FONT&lt;/code&gt; は、クライアントがすでに &lt;code&gt;Font&lt;/code&gt; インスタンスを持っているが、それでも &lt;code&gt;Map&lt;/code&gt; ベースのAPIを使用する必要がある特別な状況で使用されます。通常、 &lt;code&gt;Map&lt;/code&gt; は &lt;code&gt;FONT&lt;/code&gt; 属性以外の属性はありません。 &lt;code&gt;Map&lt;/code&gt; ので、一般的な場合は、個別にすべての属性を指定することであるAPIをベース &lt;code&gt;FONT&lt;/code&gt; 必要または望ましいされていません。</target>
        </trans-unit>
        <trans-unit id="f1c4f0e5d2f3ee6dd6ba02bb13ae2f21c342fed0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FOREGROUND&lt;/code&gt; and &lt;code&gt;BACKGROUND&lt;/code&gt; use &lt;code&gt;Paint&lt;/code&gt; values. The subclass &lt;code&gt;Color&lt;/code&gt; is serializable, while &lt;code&gt;GradientPaint&lt;/code&gt; and &lt;code&gt;TexturePaint&lt;/code&gt; are not.</source>
          <target state="translated">&lt;code&gt;FOREGROUND&lt;/code&gt; と &lt;code&gt;BACKGROUND&lt;/code&gt; は &lt;code&gt;Paint&lt;/code&gt; 値を使用します。サブクラス &lt;code&gt;Color&lt;/code&gt; はシリアル化可能ですが、 &lt;code&gt;GradientPaint&lt;/code&gt; と &lt;code&gt;TexturePaint&lt;/code&gt; はシリアル化できません。</target>
        </trans-unit>
        <trans-unit id="e3ab6915a15e18ace8239e0d1239fd06842d0f81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FieldPosition&lt;/code&gt; is a simple class used by &lt;code&gt;Format&lt;/code&gt; and its subclasses to identify fields in formatted output.</source>
          <target state="translated">&lt;code&gt;FieldPosition&lt;/code&gt; は、フォーマットされた出力のフィールドを識別するために &lt;code&gt;Format&lt;/code&gt; とそのサブクラスで使用される単純なクラスです。</target>
        </trans-unit>
        <trans-unit id="fda64cbfb2561fa529680eb4dcd35983f4574716" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FieldPosition&lt;/code&gt; is a simple class used by &lt;code&gt;Format&lt;/code&gt; and its subclasses to identify fields in formatted output. Fields can be identified in two ways:</source>
          <target state="translated">&lt;code&gt;FieldPosition&lt;/code&gt; は、フォーマットされた出力のフィールドを識別するために &lt;code&gt;Format&lt;/code&gt; とそのサブクラスで使用される単純なクラスです。フィールドは次の2つの方法で識別できます。</target>
        </trans-unit>
        <trans-unit id="66d8c4e02a9ae1f6d9d57f566aefd6d9839cc41b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FieldPosition&lt;/code&gt; keeps track of the position of the field within the formatted output with two indices: the index of the first character of the field and the index of the last character of the field.</source>
          <target state="translated">&lt;code&gt;FieldPosition&lt;/code&gt; は、フォーマットされた出力内のフィールドの位置を2つのインデックス（フィールドの最初の文字のインデックスとフィールドの最後の文字のインデックス）で追跡します。</target>
        </trans-unit>
        <trans-unit id="2bb0a06ff0f9e0567e91d312b3f3769ebc3d0845" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileFilter&lt;/code&gt; is an abstract class used by &lt;code&gt;JFileChooser&lt;/code&gt; for filtering the set of files shown to the user.</source>
          <target state="translated">&lt;code&gt;FileFilter&lt;/code&gt; は、ユーザーに表示されるファイルのセットをフィルタリングするために &lt;code&gt;JFileChooser&lt;/code&gt; によって使用される抽象クラスです。</target>
        </trans-unit>
        <trans-unit id="bd6c31e0bc4c051ed7a19ff8a1acf19468ee3512" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileFilter&lt;/code&gt; is an abstract class used by &lt;code&gt;JFileChooser&lt;/code&gt; for filtering the set of files shown to the user. See &lt;code&gt;FileNameExtensionFilter&lt;/code&gt; for an implementation that filters using the file name extension.</source>
          <target state="translated">&lt;code&gt;FileFilter&lt;/code&gt; は、ユーザーに表示されるファイルのセットをフィルタリングするために &lt;code&gt;JFileChooser&lt;/code&gt; によって使用される抽象クラスです。ファイル名拡張子を使用してフィルタリングする実装については、 &lt;code&gt;FileNameExtensionFilter&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="bda55279bf1395102f4c2fd5b7ba10266002c018" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileInputStream&lt;/code&gt; is meant for reading streams of raw bytes such as image data. For reading streams of characters, consider using &lt;code&gt;FileReader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileInputStream&lt;/code&gt; は、画像データなどの生バイトのストリームを読み取るためのものです。文字のストリームを読み取るには、 &lt;code&gt;FileReader&lt;/code&gt; の使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="ada3748517c825d7b93819ccfd538cc1bf08cb90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileOutputStream&lt;/code&gt; is meant for writing streams of raw bytes such as image data. For writing streams of characters, consider using &lt;code&gt;FileWriter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileOutputStream&lt;/code&gt; は、画像データなどの生バイトのストリームを書き込むためのものです。文字のストリームを書き込むには、 &lt;code&gt;FileWriter&lt;/code&gt; の使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="e3b4a87bff782fbf99e63f9b586a9fd6571b5349" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileReader&lt;/code&gt; is meant for reading streams of characters. For reading streams of raw bytes, consider using a &lt;code&gt;FileInputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileReader&lt;/code&gt; は、文字のストリームを読み取るためのものです。生バイトのストリームを読み取るには、 &lt;code&gt;FileInputStream&lt;/code&gt; の使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="ac15f3d7a2af52f0935898602d2d48b66b7a0979" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileTime&lt;/code&gt; can store points on the time-line further in the future and further in the past than &lt;code&gt;Instant&lt;/code&gt;. Conversion from such further time points saturates to &lt;a href=&quot;../../../time/instant#MIN&quot;&gt;&lt;code&gt;Instant.MIN&lt;/code&gt;&lt;/a&gt; if earlier than &lt;code&gt;Instant.MIN&lt;/code&gt; or &lt;a href=&quot;../../../time/instant#MAX&quot;&gt;&lt;code&gt;Instant.MAX&lt;/code&gt;&lt;/a&gt; if later than &lt;code&gt;Instant.MAX&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileTime&lt;/code&gt; は、 &lt;code&gt;Instant&lt;/code&gt; よりも未来および過去のタイムライン上のポイントを保存できます。このような更なる時点飽和から変換&lt;a href=&quot;../../../time/instant#MIN&quot;&gt; &lt;code&gt;Instant.MIN&lt;/code&gt; &lt;/a&gt;よりも早い場合 &lt;code&gt;Instant.MIN&lt;/code&gt; 又は&lt;a href=&quot;../../../time/instant#MAX&quot;&gt; &lt;code&gt;Instant.MAX&lt;/code&gt; &lt;/a&gt;より後なら &lt;code&gt;Instant.MAX&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca56c87eb1dc576b27179980fc510da7644e22f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileView&lt;/code&gt; defines an abstract class that can be implemented to provide the filechooser with UI information for a &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileView&lt;/code&gt; は、filechooserに &lt;code&gt;File&lt;/code&gt; のUI情報を提供するために実装できる抽象クラスを定義します。</target>
        </trans-unit>
        <trans-unit id="a27524f79276ffe7f2c58d564637073c4b609ef4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileView&lt;/code&gt; defines an abstract class that can be implemented to provide the filechooser with UI information for a &lt;code&gt;File&lt;/code&gt;. Each L&amp;amp;F &lt;code&gt;JFileChooserUI&lt;/code&gt; object implements this class to pass back the correct icons and type descriptions specific to that L&amp;amp;F. For example, the Microsoft Windows L&amp;amp;F returns the generic Windows icons for directories and generic files. Additionally, you may want to provide your own &lt;code&gt;FileView&lt;/code&gt; to &lt;code&gt;JFileChooser&lt;/code&gt; to return different icons or additional information using &lt;a href=&quot;../jfilechooser#setFileView(javax.swing.filechooser.FileView)&quot;&gt;&lt;code&gt;JFileChooser.setFileView(javax.swing.filechooser.FileView)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;FileView&lt;/code&gt; は、 &lt;code&gt;File&lt;/code&gt; UI情報をファイルチューザーに提供するために実装できる抽象クラスを定義します。各L＆F &lt;code&gt;JFileChooserUI&lt;/code&gt; オブジェクトは、このクラスを実装して、そのL＆Fに固有の正しいアイコンとタイプの説明を返します。たとえば、Microsoft Windows L＆Fは、ディレクトリと汎用ファイルの汎用Windowsアイコンを返します。さらに、&lt;a href=&quot;../jfilechooser#setFileView(javax.swing.filechooser.FileView)&quot;&gt; &lt;code&gt;JFileChooser.setFileView(javax.swing.filechooser.FileView)&lt;/code&gt; &lt;/a&gt;を使用して、さまざまなアイコンや追加情報を返すために、独自の &lt;code&gt;FileView&lt;/code&gt; を &lt;code&gt;JFileChooser&lt;/code&gt; に提供することもできます。</target>
        </trans-unit>
        <trans-unit id="a790825a9e717827b75ebf3946247521a25807c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileWriter&lt;/code&gt; is meant for writing streams of characters. For writing streams of raw bytes, consider using a &lt;code&gt;FileOutputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FileWriter&lt;/code&gt; は、文字のストリームを書き込むためのものです。生のバイトのストリームを書き込むには、 &lt;code&gt;FileOutputStream&lt;/code&gt; の使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="0e9e751657ebec6ebbc76a771274c62f7a59ce8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FlavorEvent&lt;/code&gt; is used to notify interested parties that available &lt;a href=&quot;dataflavor&quot;&gt;&lt;code&gt;DataFlavor&lt;/code&gt;&lt;/a&gt;s have changed in the &lt;a href=&quot;clipboard&quot;&gt;&lt;code&gt;Clipboard&lt;/code&gt;&lt;/a&gt; (the event source).</source>
          <target state="translated">&lt;code&gt;FlavorEvent&lt;/code&gt; は、&lt;a href=&quot;clipboard&quot;&gt; &lt;code&gt;Clipboard&lt;/code&gt; &lt;/a&gt;（イベントソース）で使用可能な&lt;a href=&quot;dataflavor&quot;&gt; &lt;code&gt;DataFlavor&lt;/code&gt; &lt;/a&gt;が変更されたことを関係者に通知するために使用されます。</target>
        </trans-unit>
        <trans-unit id="1436c5ba3e88606e2237f1f1f8ec20d656ec1846" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FlavorException&lt;/code&gt;. If the document has a flavor not supported by this print job.</source>
          <target state="translated">&lt;code&gt;FlavorException&lt;/code&gt; 。ドキュメントにこの印刷ジョブでサポートされていないフレーバーがある場合。</target>
        </trans-unit>
        <trans-unit id="765e7b336ed61134d2c9e5cd2128f29f7276e436" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Float.NaN&lt;/code&gt; is considered by this method to be equal to itself and greater than all other &lt;code&gt;float&lt;/code&gt; values (including &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Float.NaN&lt;/code&gt; このメソッドでは、Float.NaNはそれ自体と等しく、他のすべての &lt;code&gt;float&lt;/code&gt; 値（ &lt;code&gt;Float.POSITIVE_INFINITY&lt;/code&gt; を含む）よりも大きいと見なされます。</target>
        </trans-unit>
        <trans-unit id="637ef1470aa27d35e688638b0badff5e9cf0a4c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FocusListener&lt;/code&gt; that are attached to the &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FocusListener&lt;/code&gt; &lt;code&gt;JTable&lt;/code&gt; に接続されているFocusListener。</target>
        </trans-unit>
        <trans-unit id="d6a6d3e6a36cc50c4ca6ec901f02a2f3548442f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FocusListener&lt;/code&gt; that attached to &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FocusListener&lt;/code&gt; にアタッチされた &lt;code&gt;JList&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d47124dca2bc4d669a09c09246ac4abaee8ea3ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Font&lt;/code&gt; in this &lt;code&gt;GraphicsEnvironment&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; この &lt;code&gt;GraphicsEnvironment&lt;/code&gt; のフォント。</target>
        </trans-unit>
        <trans-unit id="c55f8b6ca0604a6285d7b7b0add2ef888859fdad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Font&lt;/code&gt; in this &lt;code&gt;GraphicsEnvironment&lt;/code&gt;. A created font is one that was returned from calling &lt;a href=&quot;font#createFont(int,java.io.InputStream)&quot;&gt;&lt;code&gt;Font.createFont(int, java.io.InputStream)&lt;/code&gt;&lt;/a&gt;, or derived from a created font by calling &lt;a href=&quot;font#deriveFont(int,float)&quot;&gt;&lt;code&gt;Font.deriveFont(int, float)&lt;/code&gt;&lt;/a&gt;. After calling this method for such a font, it is available to be used in constructing new &lt;code&gt;Font&lt;/code&gt;s by name or family name, and is enumerated by &lt;a href=&quot;#getAvailableFontFamilyNames()&quot;&gt;&lt;code&gt;getAvailableFontFamilyNames()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getAllFonts()&quot;&gt;&lt;code&gt;getAllFonts()&lt;/code&gt;&lt;/a&gt; within the execution context of this application or applet. This means applets cannot register fonts in a way that they are visible to other applets.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; この &lt;code&gt;GraphicsEnvironment&lt;/code&gt; のフォント。作成されたフォントは&lt;a href=&quot;font#createFont(int,java.io.InputStream)&quot;&gt; &lt;code&gt;Font.createFont(int, java.io.InputStream)&lt;/code&gt; &lt;/a&gt;呼び出しから返されたフォント、または&lt;a href=&quot;font#deriveFont(int,float)&quot;&gt; &lt;code&gt;Font.deriveFont(int, float)&lt;/code&gt; &lt;/a&gt;呼び出しによって作成されたフォントから派生したフォントです。このようなフォントに対してこのメ​​ソッドを呼び出した後、名前または姓で新しい &lt;code&gt;Font&lt;/code&gt; を作成する際に使用でき、このアプリケーションまたはアプレットの実行コンテキスト内で&lt;a href=&quot;#getAvailableFontFamilyNames()&quot;&gt; &lt;code&gt;getAvailableFontFamilyNames()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#getAllFonts()&quot;&gt; &lt;code&gt;getAllFonts()&lt;/code&gt; &lt;/a&gt;によって列挙されます。これは、アプレットが他のアプレットに表示される方法でフォントを登録できないことを意味します。</target>
        </trans-unit>
        <trans-unit id="0e182e216ed621f72714d3893bd0a590ca28b868" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Font&lt;/code&gt; supports most &lt;code&gt;TextAttribute&lt;/code&gt;s. This makes some operations, such as rendering underlined text, convenient since it is not necessary to explicitly construct a &lt;code&gt;TextLayout&lt;/code&gt; object. Attributes can be set on a Font by constructing or deriving it using a &lt;code&gt;Map&lt;/code&gt; of &lt;code&gt;TextAttribute&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; はほとんどの &lt;code&gt;TextAttribute&lt;/code&gt; をサポートします。これにより、 &lt;code&gt;TextLayout&lt;/code&gt; オブジェクトを明示的に作成する必要がないため、下線付きテキストのレンダリングなどの一部の操作が便利になります。 &lt;code&gt;TextAttribute&lt;/code&gt; 値の &lt;code&gt;Map&lt;/code&gt; を使用してフォントを作成または導出することにより、フォントに属性を設定できます。</target>
        </trans-unit>
        <trans-unit id="016ca9568911c6fae35586d06c0d33cf0e9cabf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Font&lt;/code&gt; used to create this &lt;code&gt;GlyphVector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt; この &lt;code&gt;GlyphVector&lt;/code&gt; の作成に使用されるフォント。</target>
        </trans-unit>
        <trans-unit id="fd1a90f175dfa8abb6d76861f25d4b4c96620e51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Font&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Font&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="faf7e468c322d805314bfe554b4394cf7eff07eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FontRenderContext&lt;/code&gt; used to create this &lt;code&gt;GlyphVector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FontRenderContext&lt;/code&gt; この作成に使用し &lt;code&gt;GlyphVector&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c80c194d85330eba1df1471b0c8a7010ea54635" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Format&lt;/code&gt; defines the programming interface for formatting locale-sensitive objects into &lt;code&gt;String&lt;/code&gt;s (the &lt;code&gt;format&lt;/code&gt; method) and for parsing &lt;code&gt;String&lt;/code&gt;s back into objects (the &lt;code&gt;parseObject&lt;/code&gt; method).</source>
          <target state="translated">&lt;code&gt;Format&lt;/code&gt; は、ロケールに依存するオブジェクトを &lt;code&gt;String&lt;/code&gt; に &lt;code&gt;format&lt;/code&gt; （formatメソッド）し、 &lt;code&gt;String&lt;/code&gt; を解析してオブジェクトに戻す（ &lt;code&gt;parseObject&lt;/code&gt; メソッド）ためのプログラミングインターフェイスを定義します。</target>
        </trans-unit>
        <trans-unit id="c59f9e8d3608aea2b5056402fc29df21518df4bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Format&lt;/code&gt; is an abstract base class for formatting locale-sensitive information such as dates, messages, and numbers.</source>
          <target state="translated">&lt;code&gt;Format&lt;/code&gt; は、日付、メッセージ、数値などのロケールに依存する情報をフォーマットするための抽象基本クラスです。</target>
        </trans-unit>
        <trans-unit id="da7bcc736d2882db7bc7fc0eded36953550dc16e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FractionalSecond&lt;/code&gt; is optional and has a value of &lt;code&gt;null&lt;/code&gt; when it is undefined.</source>
          <target state="translated">&lt;code&gt;FractionalSecond&lt;/code&gt; はオプションであり、未定義の場合は &lt;code&gt;null&lt;/code&gt; の値になります。</target>
        </trans-unit>
        <trans-unit id="8e1ef4f87d3f427db9ce18ec1f8cb30a45e0fe25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Frame.NORMAL&lt;/code&gt; or &lt;code&gt;Frame.ICONIFIED&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Frame.NORMAL&lt;/code&gt; または &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe72b97ebf3428cbb8bb5cc6319b3975c4535280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET&lt;/code&gt; corresponds to the GET form method</source>
          <target state="translated">&lt;code&gt;GET&lt;/code&gt; はGETフォームメソッドに対応します</target>
        </trans-unit>
        <trans-unit id="996bae03ecfe64c70dbcd63440edd88798972644" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GeneralPath&lt;/code&gt; is a legacy final class which exactly implements the behavior of its superclass &lt;a href=&quot;path2d.float&quot;&gt;&lt;code&gt;Path2D.Float&lt;/code&gt;&lt;/a&gt;. Together with &lt;a href=&quot;path2d.double&quot;&gt;&lt;code&gt;Path2D.Double&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;path2d&quot;&gt;&lt;code&gt;Path2D&lt;/code&gt;&lt;/a&gt; classes provide full implementations of a general geometric path that support all of the functionality of the &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; interfaces with the ability to explicitly select different levels of internal coordinate precision.</source>
          <target state="translated">&lt;code&gt;GeneralPath&lt;/code&gt; は、スーパークラス&lt;a href=&quot;path2d.float&quot;&gt; &lt;code&gt;Path2D.Float&lt;/code&gt; の&lt;/a&gt;動作を正確に実装するレガシー最終クラスです。&lt;a href=&quot;path2d.double&quot;&gt; &lt;code&gt;Path2D.Double&lt;/code&gt; &lt;/a&gt;とともに、&lt;a href=&quot;path2d&quot;&gt; &lt;code&gt;Path2D&lt;/code&gt; &lt;/a&gt;クラスは、さまざまなレベルの内部座標精度を明示的に選択する機能を備えた&lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;インターフェイスのすべての機能をサポートする一般的な幾何学的パスの完全な実装を提供します。</target>
        </trans-unit>
        <trans-unit id="b1f322f9576a1567586923394a42f31058e731d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GenericArrayType&lt;/code&gt; represents an array type whose component type is either a parameterized type or a type variable.</source>
          <target state="translated">&lt;code&gt;GenericArrayType&lt;/code&gt; は、コンポーネント型がパラメーター化された型または型変数のいずれかである配列型を表します。</target>
        </trans-unit>
        <trans-unit id="2bb4eb7ff6a8be3c5843cac4ed24136d23fe97c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GraphicsConfiguration&lt;/code&gt; is the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; of the &lt;code&gt;Component&lt;/code&gt; on which the drag gesture for the current drag operation was recognized. If the cursor location is outside the bounds of the initiator &lt;code&gt;GraphicsConfiguration&lt;/code&gt;, the reported coordinates are clipped to fit within the bounds of that &lt;code&gt;GraphicsConfiguration&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GraphicsConfiguration&lt;/code&gt; は、現在のドラッグ操作のドラッグジェスチャが認識された &lt;code&gt;Component&lt;/code&gt; の &lt;code&gt;GraphicsConfiguration&lt;/code&gt; です。カーソル位置がイニシエーター &lt;code&gt;GraphicsConfiguration&lt;/code&gt; の境界外にある場合、報告された座標は、その &lt;code&gt;GraphicsConfiguration&lt;/code&gt; の境界内に収まるようにクリップされます。</target>
        </trans-unit>
        <trans-unit id="7c6b825eade96f846f628d2d3d18fa928a0567eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GraphicsConfiguration&lt;/code&gt;. The</source>
          <target state="translated">&lt;code&gt;GraphicsConfiguration&lt;/code&gt; 。ザ・</target>
        </trans-unit>
        <trans-unit id="5d2b1320d4ccb976126c9779aa03486dbf1dcf13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GraphicsDevice&lt;/code&gt; corresponding to the pointer</source>
          <target state="translated">&lt;code&gt;GraphicsDevice&lt;/code&gt; ポインタに対応するGraphicsDevice</target>
        </trans-unit>
        <trans-unit id="ea6114ac0b5bca275d6c5f44233cbba34c6c7f2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GregorianCalendar&lt;/code&gt; implements &lt;em&gt;proleptic&lt;/em&gt; Gregorian and Julian calendars. That is, dates are computed by extrapolating the current rules indefinitely far backward and forward in time. As a result, &lt;code&gt;GregorianCalendar&lt;/code&gt; may be used for all years to generate meaningful and consistent results. However, dates obtained using &lt;code&gt;GregorianCalendar&lt;/code&gt; are historically accurate only from March 1, 4 AD onward, when modern Julian calendar rules were adopted. Before this date, leap year rules were applied irregularly, and before 45 BC the Julian calendar did not even exist.</source>
          <target state="translated">&lt;code&gt;GregorianCalendar&lt;/code&gt; は、&lt;em&gt;プログレプティックな&lt;/em&gt;グレゴリオ暦とユリウス暦を実装します。つまり、日付は、現在の規則を時間的に遠くまで無期限に外挿することによって計算されます。結果として、 &lt;code&gt;GregorianCalendar&lt;/code&gt; は、意味のある一貫した結果を生成するために、すべての年の間使用される可能性があります。ただし、 &lt;code&gt;GregorianCalendar&lt;/code&gt; を使用して取得された日付は、歴史的に正確であるが、現代のユリウス暦の規則が採用された西暦4年3月1日以降のみである。この日付より前は、うるう年の規則は不規則に適用され、紀元前45年より前はユリウス暦も存在しませんでした。</target>
        </trans-unit>
        <trans-unit id="ddf1c29076c0f6197dc9ff1b322c41f015d287a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GregorianCalendar&lt;/code&gt; is a concrete subclass of &lt;code&gt;Calendar&lt;/code&gt; and provides the standard calendar system used by most of the world.</source>
          <target state="translated">&lt;code&gt;GregorianCalendar&lt;/code&gt; は &lt;code&gt;Calendar&lt;/code&gt; の具象サブクラスであり、ほとんどの世界で使用されている標準のカレンダーシステムを提供します。</target>
        </trans-unit>
        <trans-unit id="94759b7172a9bedfbb466e01aed3eaebe49b5707" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GregorianCalendar&lt;/code&gt; is a hybrid calendar that supports both the Julian and Gregorian calendar systems with the support of a single discontinuity, which corresponds by default to the Gregorian date when the Gregorian calendar was instituted (October 15, 1582 in some countries, later in others). The cutover date may be changed by the caller by calling &lt;a href=&quot;#setGregorianChange(java.util.Date)&quot;&gt;&lt;code&gt;setGregorianChange()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GregorianCalendar&lt;/code&gt; は、単一の不連続性をサポートするユリウス暦とグレゴリオ暦の両方のシステムをサポートするハイブリッドカレンダーです。これは、デフォルトで、グレゴリオ暦が作成されたグレゴリオ暦の日付に対応します（一部の国では1582年10月15日、他の国では後で）。カットオーバー日は、呼び出し元が&lt;a href=&quot;#setGregorianChange(java.util.Date)&quot;&gt; &lt;code&gt;setGregorianChange()&lt;/code&gt; を&lt;/a&gt;呼び出すことによって変更できます。</target>
        </trans-unit>
        <trans-unit id="1088c8f0e4b9e54f2b41f4e0f3a6ea2cf397c790" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GregorianCalendar&lt;/code&gt; is a hybrid calendar that supports both the Julian and Gregorian calendar systems with the support of a single discontinuity, which corresponds by default to the Gregorian date when the Gregorian calendar was instituted (October 15, 1582 in some countries, later in others). The cutover date may be changed by the caller by calling &lt;a href=&quot;gregoriancalendar#setGregorianChange-java.util.Date-&quot;&gt;&lt;code&gt;setGregorianChange()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GregorianCalendar&lt;/code&gt; は、単一の不連続性をサポートして、ユリウス暦とグレゴリオ暦の両方のカレンダーシステムをサポートするハイブリッドカレンダーです。これは、デフォルトで、グレゴリオ暦が制定されたときのグレゴリオ暦の日付に対応します（一部の国では1582年10月15日、後に他の国で）。カットオーバー日付は、呼び出し元が&lt;a href=&quot;gregoriancalendar#setGregorianChange-java.util.Date-&quot;&gt; &lt;code&gt;setGregorianChange()&lt;/code&gt; を&lt;/a&gt;呼び出して変更できます。</target>
        </trans-unit>
        <trans-unit id="8ba962651252d77c200e1e3da4e48691cc3b0985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GridBagConstraints.CENTER&lt;/code&gt; (the default)</source>
          <target state="translated">&lt;code&gt;GridBagConstraints.CENTER&lt;/code&gt; （デフォルト）</target>
        </trans-unit>
        <trans-unit id="6ecb6ad7b3fcfb423b1672c87862145fa073880d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Group&lt;/code&gt; provides the basis for the two types of operations supported by &lt;code&gt;GroupLayout&lt;/code&gt;: laying out components one after another (&lt;a href=&quot;grouplayout.sequentialgroup&quot;&gt;&lt;code&gt;SequentialGroup&lt;/code&gt;&lt;/a&gt;) or aligned (&lt;a href=&quot;grouplayout.parallelgroup&quot;&gt;&lt;code&gt;ParallelGroup&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;Group&lt;/code&gt; は、 &lt;code&gt;GroupLayout&lt;/code&gt; でサポートされる2種類の操作の基礎を提供します。コンポーネントを次々にレイアウトする（&lt;a href=&quot;grouplayout.sequentialgroup&quot;&gt; &lt;code&gt;SequentialGroup&lt;/code&gt; &lt;/a&gt;）または整列する（&lt;a href=&quot;grouplayout.parallelgroup&quot;&gt; &lt;code&gt;ParallelGroup&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="50204599fc141672bb54402eb7e28e56f6669dd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Group&lt;/code&gt; provides the basis for the two types of operations supported by &lt;code&gt;GroupLayout&lt;/code&gt;: laying out components one after another (&lt;a href=&quot;grouplayout.sequentialgroup&quot;&gt;&lt;code&gt;SequentialGroup&lt;/code&gt;&lt;/a&gt;) or aligned (&lt;a href=&quot;grouplayout.parallelgroup&quot;&gt;&lt;code&gt;ParallelGroup&lt;/code&gt;&lt;/a&gt;). &lt;code&gt;Group&lt;/code&gt; and its subclasses have no public constructor; to create one use one of &lt;code&gt;createSequentialGroup&lt;/code&gt; or &lt;code&gt;createParallelGroup&lt;/code&gt;. Additionally, taking a &lt;code&gt;Group&lt;/code&gt; created from one &lt;code&gt;GroupLayout&lt;/code&gt; and using it with another will produce undefined results.</source>
          <target state="translated">&lt;code&gt;Group&lt;/code&gt; は、 &lt;code&gt;GroupLayout&lt;/code&gt; でサポートされる2種類の操作の基礎を提供します。コンポーネントを次々にレイアウトする（&lt;a href=&quot;grouplayout.sequentialgroup&quot;&gt; &lt;code&gt;SequentialGroup&lt;/code&gt; &lt;/a&gt;）または整列する（&lt;a href=&quot;grouplayout.parallelgroup&quot;&gt; &lt;code&gt;ParallelGroup&lt;/code&gt; &lt;/a&gt;）。 &lt;code&gt;Group&lt;/code&gt; とそのサブクラスにはパブリックコンストラクターがありません。1つを作成するには、 &lt;code&gt;createSequentialGroup&lt;/code&gt; または &lt;code&gt;createParallelGroup&lt;/code&gt; のいずれかを使用します。さらに、ある &lt;code&gt;GroupLayout&lt;/code&gt; から作成された &lt;code&gt;Group&lt;/code&gt; を取得し、それを別のGroupLayoutで使用すると、未定義の結果が生成されます。</target>
        </trans-unit>
        <trans-unit id="9e775e94c1a699fe7db608341bec9a1f3129432e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupLayout&lt;/code&gt; is a &lt;code&gt;LayoutManager&lt;/code&gt; that hierarchically groups components in order to position them in a &lt;code&gt;Container&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GroupLayout&lt;/code&gt; は、コンポーネントを &lt;code&gt;Container&lt;/code&gt; に配置するためにコンポーネントを階層的にグループ化する &lt;code&gt;LayoutManager&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fdf4c2ce3f17a0487e172b88a4d5e60ea53dd2ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupLayout&lt;/code&gt; is a &lt;code&gt;LayoutManager&lt;/code&gt; that hierarchically groups components in order to position them in a &lt;code&gt;Container&lt;/code&gt;. &lt;code&gt;GroupLayout&lt;/code&gt; is intended for use by builders, but may be hand-coded as well. Grouping is done by instances of the &lt;a href=&quot;grouplayout.group&quot;&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/a&gt; class. &lt;code&gt;
 GroupLayout&lt;/code&gt; supports two types of groups. A sequential group positions its child elements sequentially, one after another. A parallel group aligns its child elements in one of four ways.</source>
          <target state="translated">&lt;code&gt;GroupLayout&lt;/code&gt; は、コンポーネントを &lt;code&gt;Container&lt;/code&gt; に配置するためにコンポーネントを階層的にグループ化する &lt;code&gt;LayoutManager&lt;/code&gt; です。 &lt;code&gt;GroupLayout&lt;/code&gt; はビルダーによる使用を目的としていますが、手動でコーディングすることもできます。グループ化は、&lt;a href=&quot;grouplayout.group&quot;&gt; &lt;code&gt;Group&lt;/code&gt; &lt;/a&gt;クラスのインスタンスによって行われます。 &lt;code&gt; GroupLayout&lt;/code&gt; は、2種類のグループをサポートします。シーケンシャルグループは、その子要素を次々に順番に配置します。並列グループは、4つの方法のいずれかで子要素を整列します。</target>
        </trans-unit>
        <trans-unit id="20d65a6d452d2a3e66918629b47cff47f0769242" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupLayout&lt;/code&gt; provides the ability to insert gaps between &lt;code&gt;Component&lt;/code&gt;s. The size of the gap is determined by an instance of &lt;code&gt;LayoutStyle&lt;/code&gt;. This may be turned on using the &lt;code&gt;setAutoCreateGaps&lt;/code&gt; method. Similarly, you may use the &lt;code&gt;setAutoCreateContainerGaps&lt;/code&gt; method to insert gaps between components that touch the edge of the parent container and the container.</source>
          <target state="translated">&lt;code&gt;GroupLayout&lt;/code&gt; は、 &lt;code&gt;Component&lt;/code&gt; 間にギャップを挿入する機能を提供します。ギャップのサイズは、 &lt;code&gt;LayoutStyle&lt;/code&gt; のインスタンスによって決定されます。これは、 &lt;code&gt;setAutoCreateGaps&lt;/code&gt; メソッドを使用してオンにすることができます。同様に、 &lt;code&gt;setAutoCreateContainerGaps&lt;/code&gt; メソッドを使用して、親コンテナーとコンテナーのエッジに接触するコンポーネント間にギャップを挿入できます。</target>
        </trans-unit>
        <trans-unit id="6c1a79c6653641b512b3d9cda866565bd88bb68b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupLayout&lt;/code&gt; treats each axis independently. That is, there is a group representing the horizontal axis, and a group representing the vertical axis. The horizontal group is responsible for determining the minimum, preferred and maximum size along the horizontal axis as well as setting the x and width of the components contained in it. The vertical group is responsible for determining the minimum, preferred and maximum size along the vertical axis as well as setting the y and height of the components contained in it. Each &lt;code&gt;Component&lt;/code&gt; must exist in both a horizontal and vertical group, otherwise an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown during layout, or when the minimum, preferred or maximum size is requested.</source>
          <target state="translated">&lt;code&gt;GroupLayout&lt;/code&gt; は、各軸を個別に扱います。つまり、横軸を表すグループと縦軸を表すグループがあります。水平グループは、水平軸に沿った最小、優先、および最大サイズを決定し、それに含まれるコンポーネントのxと幅を設定する責任があります。垂直グループは、垂直軸に沿った最小、優先、および最大サイズを決定し、それに含まれるコンポーネントのyと高さを設定する責任があります。各 &lt;code&gt;Component&lt;/code&gt; は、水平グループと垂直グループの両方に存在する必要があります。存在しない場合、レイアウト中、または最小、優先、または最大サイズが要求されたときに &lt;code&gt;IllegalStateException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="124830507ddf0d5eaaf2e64ea8d09214f1e187ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;H&lt;/code&gt; - the height of the &lt;code&gt;Rectangle&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;H&lt;/code&gt; - &lt;code&gt;Rectangle&lt;/code&gt; の高さ</target>
        </trans-unit>
        <trans-unit id="6b4cbca4d3fe15fb7b895c66b2086d15751c5231" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HALF_DAYS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of half-days added. This is equivalent to &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 43,200 (12 hours).</source>
          <target state="translated">&lt;code&gt;HALF_DAYS&lt;/code&gt; -指定された数の半日が追加された &lt;code&gt;Instant&lt;/code&gt; を返します。これは、&lt;a href=&quot;instant#plusSeconds-long-&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; に&lt;/a&gt; 43,200（12時間）を掛けたものに相当します。</target>
        </trans-unit>
        <trans-unit id="0cc8134ab443eb4f429cd4a13865ed0f4eba41dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HALF_DAYS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of half-days added. This is equivalent to &lt;a href=&quot;#plusHours(long)&quot;&gt;&lt;code&gt;plusHours(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 12.</source>
          <target state="translated">&lt;code&gt;HALF_DAYS&lt;/code&gt; -指定された &lt;code&gt;LocalTime&lt;/code&gt; 数が追加されたLocalTimeを返します。これは、&lt;a href=&quot;#plusHours(long)&quot;&gt; &lt;code&gt;plusHours(long)&lt;/code&gt; に&lt;/a&gt;12を掛けた量に相当します。</target>
        </trans-unit>
        <trans-unit id="7ef2428e099a376ff0ca3d4874d88d3ddab5836e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HALF_DAYS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of half-days added. This is equivalent to &lt;a href=&quot;localtime#plusHours-long-&quot;&gt;&lt;code&gt;plusHours(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 12.</source>
          <target state="translated">&lt;code&gt;HALF_DAYS&lt;/code&gt; -指定された数の半日が追加された &lt;code&gt;LocalTime&lt;/code&gt; を返します。これは、と等価である&lt;a href=&quot;localtime#plusHours-long-&quot;&gt; &lt;code&gt;plusHours(long)&lt;/code&gt; &lt;/a&gt; 12を乗じた額と。</target>
        </trans-unit>
        <trans-unit id="a9fa6e6639a74cbd80c4a4878a027b64dee7ec3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HALF_DAYS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of half-days added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 43,200 (12 hours).</source>
          <target state="translated">&lt;code&gt;HALF_DAYS&lt;/code&gt; -指定された半日数が追加された &lt;code&gt;Instant&lt;/code&gt; を返します。これは、&lt;a href=&quot;#plusSeconds(long)&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; に&lt;/a&gt;43,200（12時間）を掛けたものに相当します。</target>
        </trans-unit>
        <trans-unit id="d2e683184741e9a320e1b093390059b153e3f19d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HIDE_ON_CLOSE&lt;/code&gt; (defined in &lt;code&gt;WindowConstants&lt;/code&gt;): Automatically hide the dialog after invoking any registered &lt;code&gt;WindowListener&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;HIDE_ON_CLOSE&lt;/code&gt; （で定義されて &lt;code&gt;WindowConstants&lt;/code&gt; ）：自動的に登録されているすべての呼び出し後にダイアログ隠す &lt;code&gt;WindowListener&lt;/code&gt; オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="93523687d5449333476d93cc59ef735ec73959d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HIDE_ON_CLOSE&lt;/code&gt; (defined in &lt;code&gt;WindowConstants&lt;/code&gt;): Automatically hide the frame after invoking any registered &lt;code&gt;WindowListener&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;HIDE_ON_CLOSE&lt;/code&gt; （で定義された &lt;code&gt;WindowConstants&lt;/code&gt; ）：自動的に登録された起動後のフレーム隠す &lt;code&gt;WindowListener&lt;/code&gt; オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="17a0b849b2586a2cb52e8c4c77b8bfa0e24007e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HORIZONTAL&lt;/code&gt; or &lt;code&gt;VERTICAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HORIZONTAL&lt;/code&gt; または &lt;code&gt;VERTICAL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4b90ce04e423e60422a73e763cd652a64042621" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HORIZONTAL&lt;/code&gt;: Make the component wide enough to fill its display area horizontally, but do not change its height.</source>
          <target state="translated">&lt;code&gt;HORIZONTAL&lt;/code&gt; ：コンポーネントを表示領域を水平方向に埋めるのに十分な幅にしますが、高さは変更しないでください。</target>
        </trans-unit>
        <trans-unit id="85016515254065489b3026630c065fccdcc5686d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOURS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of hours added. This is equivalent to &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 3,600.</source>
          <target state="translated">&lt;code&gt;HOURS&lt;/code&gt; -指定された時間数が追加された &lt;code&gt;Instant&lt;/code&gt; を返します。これは、&lt;a href=&quot;instant#plusSeconds-long-&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; に&lt;/a&gt; 3,600を掛けたものと同等です。</target>
        </trans-unit>
        <trans-unit id="8c33c5e3931c0a4918502f136f81dfe78bbec516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOURS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of hours added. This is equivalent to &lt;a href=&quot;#plusHours(long)&quot;&gt;&lt;code&gt;plusHours(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;HOURS&lt;/code&gt; -戻り値 &lt;code&gt;LocalTime&lt;/code&gt; 追加指定した時間数とを。これは&lt;a href=&quot;#plusHours(long)&quot;&gt; &lt;code&gt;plusHours(long)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="948c34d01c92eee1bb29cc183a83d9babdf61038" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOURS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of hours added. This is equivalent to &lt;a href=&quot;localtime#plusHours-long-&quot;&gt;&lt;code&gt;plusHours(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;HOURS&lt;/code&gt; -戻り値 &lt;code&gt;LocalTime&lt;/code&gt; 追加指定した時間数とを。これは&lt;a href=&quot;localtime#plusHours-long-&quot;&gt; &lt;code&gt;plusHours(long)&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="a1e780e1f7265bff9ccb184801153876c8f30ca5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOURS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of hours added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 3,600.</source>
          <target state="translated">&lt;code&gt;HOURS&lt;/code&gt; -指定された時間数が追加された &lt;code&gt;Instant&lt;/code&gt; を返します。これは、&lt;a href=&quot;#plusSeconds(long)&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; に&lt;/a&gt;3,600を掛けたものに相当します。</target>
        </trans-unit>
        <trans-unit id="20d6de7da97fd2ce2eae7be6b1f905d5e1e4b3e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOUR_OF_AMPM&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified hour-of-am-pm. The AM/PM, minute-of-hour, second-of-minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;HOUR_OF_AMPM&lt;/code&gt; -指定された午前の時間で &lt;code&gt;LocalTime&lt;/code&gt; を返します。AM / PM、分、秒、ナノ秒は変更されません。</target>
        </trans-unit>
        <trans-unit id="3448c8c6d8cbdb203548ac51e774b574ad6b7b93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HOUR_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified hour-of-day. The minute-of-hour, second-of-minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;HOUR_OF_DAY&lt;/code&gt; -指定された &lt;code&gt;LocalTime&lt;/code&gt; を返します。分、秒、ナノ秒は変更されません。</target>
        </trans-unit>
        <trans-unit id="480fbc78f1f24a847a4c4c2362a1bafca7902cdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HTMLEditorKit.createDefaultDocument&lt;/code&gt; will set the parser for you. If you create an &lt;code&gt;HTMLDocument&lt;/code&gt; by hand, be sure and set the parser accordingly.</source>
          <target state="translated">&lt;code&gt;HTMLEditorKit.createDefaultDocument&lt;/code&gt; は、パーサーを設定します。 &lt;code&gt;HTMLDocument&lt;/code&gt; を手動で作成する場合は、必ずそれに応じてパーサーを設定してください。</target>
        </trans-unit>
        <trans-unit id="526a609bbcca3d331e1ea8860b3c31e279e64830" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Handler&lt;/code&gt; classes typically use &lt;code&gt;LogManager&lt;/code&gt; properties to set default values for the &lt;code&gt;Handler&lt;/code&gt;'s &lt;code&gt;Filter&lt;/code&gt;, &lt;code&gt;Formatter&lt;/code&gt;, and &lt;code&gt;Level&lt;/code&gt;. See the specific documentation for each concrete &lt;code&gt;Handler&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;Handler&lt;/code&gt; クラスは通常、 &lt;code&gt;LogManager&lt;/code&gt; プロパティを使用して、 &lt;code&gt;Handler&lt;/code&gt; の &lt;code&gt;Filter&lt;/code&gt; 、 &lt;code&gt;Formatter&lt;/code&gt; 、および &lt;code&gt;Level&lt;/code&gt; デフォルト値を設定します。各具象 &lt;code&gt;Handler&lt;/code&gt; クラスの特定のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="0288ba468f1edff8e8fe620576d0b70f8b4719e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Handler&lt;/code&gt; that buffers requests in a circular buffer in memory.</source>
          <target state="translated">&lt;code&gt;Handler&lt;/code&gt; メモリ内の循環バッファにリクエストをバッファリングするハンドラ。</target>
        </trans-unit>
        <trans-unit id="00da1c453b813694b52e9c716cf92707d2e80b47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HttpHeaders&lt;/code&gt; instances are immutable.</source>
          <target state="translated">&lt;code&gt;HttpHeaders&lt;/code&gt; インスタンスは不変です。</target>
        </trans-unit>
        <trans-unit id="b5ea1b6135a1ffc196e6540fb72c78084aef39a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HttpsURLConnection&lt;/code&gt; extends &lt;code&gt;HttpURLConnection&lt;/code&gt; with support for https-specific features.</source>
          <target state="translated">&lt;code&gt;HttpsURLConnection&lt;/code&gt; は、https固有の機能をサポートして &lt;code&gt;HttpURLConnection&lt;/code&gt; を拡張します。</target>
        </trans-unit>
        <trans-unit id="2452fdf7156c7cd9635cca800bbfd27507d77463" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I&lt;/code&gt; - the identifier supplied to the filter</source>
          <target state="translated">&lt;code&gt;I&lt;/code&gt; -フィルターに提供された識別子</target>
        </trans-unit>
        <trans-unit id="9ef05e31546ec0abd8f05f33d98fb7788f04dfc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I&lt;/code&gt; - the type of the identifier passed to the &lt;code&gt;RowFilter&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;I&lt;/code&gt; - &lt;code&gt;RowFilter&lt;/code&gt; に渡される識別子のタイプ</target>
        </trans-unit>
        <trans-unit id="7c3ccb6c442ddb7dd1d1f76da061d832e9b51fde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I&lt;/code&gt; - the type of the identifier; when using &lt;code&gt;TableRowSorter&lt;/code&gt; this will be &lt;code&gt;Integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;I&lt;/code&gt; -識別子のタイプ。 &lt;code&gt;TableRowSorter&lt;/code&gt; を使用する場合、これは &lt;code&gt;Integer&lt;/code&gt; なります</target>
        </trans-unit>
        <trans-unit id="f5f317e9f8e734ae7b9f5316144e757140022c68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ID&lt;/code&gt; - The time zone ID which is given to this object.</source>
          <target state="translated">&lt;code&gt;ID&lt;/code&gt; -このオブジェクトに与えられるタイムゾーンID。</target>
        </trans-unit>
        <trans-unit id="cb8f2d905964f73467653a60cf68edb92903c568" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ID&lt;/code&gt; - The time zone name that is given to this instance.</source>
          <target state="translated">&lt;code&gt;ID&lt;/code&gt; -このインスタンスに与えられたタイムゾーン名。</target>
        </trans-unit>
        <trans-unit id="aad7b55de5995caef3f57461e861f0dc2be533d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ID&lt;/code&gt; - a time zone ID string</source>
          <target state="translated">&lt;code&gt;ID&lt;/code&gt; -タイムゾーンID文字列</target>
        </trans-unit>
        <trans-unit id="bc9ff596b1493ada8f15a4e1e11e83aa035a46cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ID&lt;/code&gt; - the ID for a &lt;code&gt;TimeZone&lt;/code&gt;, either an abbreviation such as &quot;PST&quot;, a full name such as &quot;America/Los_Angeles&quot;, or a custom ID such as &quot;GMT-8:00&quot;. Note that the support of abbreviations is for JDK 1.1.x compatibility only and full names should be used.</source>
          <target state="translated">&lt;code&gt;ID&lt;/code&gt; - &lt;code&gt;TimeZone&lt;/code&gt; のID。「PST」などの省略形、「America / Los_Angeles」などの完全な名前、または「GMT-8：00」などのカスタムID。省略形のサポートはJDK 1.1.x互換性のためだけであり、フルネームを使用する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="409a85e3b5f09d277a588807ed62379b0d76d23e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ID&lt;/code&gt; - the new time zone ID.</source>
          <target state="translated">&lt;code&gt;ID&lt;/code&gt; -新しいタイムゾーンID。</target>
        </trans-unit>
        <trans-unit id="16f10c877b65167347c059317cd08215c8aa74c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IMAGE_INCOMPATIBLE&lt;/code&gt; if the image is incompatible with the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; object passed into the &lt;code&gt;validate&lt;/code&gt; method. Incompatibility implies that the image may need to be recreated with a new &lt;code&gt;Component&lt;/code&gt; or &lt;code&gt;GraphicsConfiguration&lt;/code&gt; in order to get an image that can be used successfully with this &lt;code&gt;GraphicsConfiguration&lt;/code&gt;. An incompatible image is not checked for whether restoration was necessary, so the state of the image is unchanged after a return value of &lt;code&gt;IMAGE_INCOMPATIBLE&lt;/code&gt; and this return value implies nothing about whether the image needs to be restored.</source>
          <target state="translated">&lt;code&gt;IMAGE_INCOMPATIBLE&lt;/code&gt; 画像が &lt;code&gt;validate&lt;/code&gt; メソッドに渡された &lt;code&gt;GraphicsConfiguration&lt;/code&gt; オブジェクトと互換性がない場合はIMAGE_INCOMPATIBLE。非互換性は、この &lt;code&gt;GraphicsConfiguration&lt;/code&gt; で正常に使用できるイメージを取得するために、新しい &lt;code&gt;Component&lt;/code&gt; または &lt;code&gt;GraphicsConfiguration&lt;/code&gt; でイメージを再作成する必要がある可能性があることを意味します。互換性のないイメージは復元が必要かどうかチェックされないため、 &lt;code&gt;IMAGE_INCOMPATIBLE&lt;/code&gt; の戻り値の後、イメージの状態は変更されません。この戻り値は、イメージを復元する必要があるかどうかについては何も意味しません。</target>
        </trans-unit>
        <trans-unit id="6660b9f0d0673107d7714fa4a6cd596ab34629dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IMAGE_OK&lt;/code&gt; if the image did not need validation</source>
          <target state="translated">&lt;code&gt;IMAGE_OK&lt;/code&gt; 画像の検証が不要な場合はIMAGE_OK</target>
        </trans-unit>
        <trans-unit id="ad8dcff493a0d3c16cd0bcf850a908d009b28fd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IMAGE_RESTORED&lt;/code&gt; if the image needed restoration. Restoration implies that the contents of the image may have been affected and the image may need to be re-rendered.</source>
          <target state="translated">&lt;code&gt;IMAGE_RESTORED&lt;/code&gt; イメージを復元する必要がある場合は、IMAGE_RESTORED。復元とは、画像の内容が影響を受けている可能性があり、画像の再レンダリングが必要な可能性があることを意味します。</target>
        </trans-unit>
        <trans-unit id="f4ffc8e36f8525f7d84e5118df9edbe7b47ef074" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INFO&lt;/code&gt; level: usually used to log information messages.</source>
          <target state="translated">&lt;code&gt;INFO&lt;/code&gt; レベル：通常、情報メッセージをログに記録するために使用されます。</target>
        </trans-unit>
        <trans-unit id="68db4d44c771cfe646a6742d3f28ccff5850b97e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INFO&lt;/code&gt; level: usually used to log information messages. This level &lt;a href=&quot;#getSeverity()&quot;&gt;severity&lt;/a&gt; is &lt;code&gt;800&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INFO&lt;/code&gt; レベル：通常、情報メッセージをログに記録するために使用されます。このレベルの&lt;a href=&quot;#getSeverity()&quot;&gt;重大度&lt;/a&gt;は &lt;code&gt;800&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fb8286c60bf174dbf1a52ff17c347bca85989b16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INNER_JOIN&lt;/code&gt; - the default if no &lt;code&gt;JOIN&lt;/code&gt; type has been set</source>
          <target state="translated">&lt;code&gt;INNER_JOIN&lt;/code&gt; - &lt;code&gt;JOIN&lt;/code&gt; タイプが設定されていない場合のデフォルト</target>
        </trans-unit>
        <trans-unit id="86b463a184732abf0f41437ba4a0ba319aca0952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INPUT_METHOD_HIGHLIGHT&lt;/code&gt; uses &lt;code&gt;InputMethodHighlight&lt;/code&gt; values, which are not serializable. See &lt;a href=&quot;im/inputmethodhighlight&quot;&gt;&lt;code&gt;InputMethodHighlight&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;INPUT_METHOD_HIGHLIGHT&lt;/code&gt; は、シリアル化できない &lt;code&gt;InputMethodHighlight&lt;/code&gt; 値を使用します。&lt;a href=&quot;im/inputmethodhighlight&quot;&gt; &lt;code&gt;InputMethodHighlight&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0ef7b28e4d3d9f4f9a99b95a87e7a125737ba1f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSERT&lt;/code&gt; - one or more rows and/or columns have been inserted</source>
          <target state="translated">&lt;code&gt;INSERT&lt;/code&gt; -1つ以上の行または列、あるいはその両方が挿入されました</target>
        </trans-unit>
        <trans-unit id="82f189e497a0d70871e7ca9aa0d85434a16ccd00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INSTANT_SECONDS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified epoch-second. The nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;INSTANT_SECONDS&lt;/code&gt; -指定されたエポック秒の &lt;code&gt;Instant&lt;/code&gt; を返します。ナノ秒は変更されません。</target>
        </trans-unit>
        <trans-unit id="884650ae4eae993a0ec7a597bcb7a32091aa2c49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IV&lt;/code&gt;: Initialization Vector (IV)</source>
          <target state="translated">&lt;code&gt;IV&lt;/code&gt; ：初期化ベクトル（IV）</target>
        </trans-unit>
        <trans-unit id="f163789351aa87e3a08da7731a7e414640753e6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown</source>
          <target state="translated">&lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます</target>
        </trans-unit>
        <trans-unit id="d31eb4cde08c0ee9263bd6229c87968680e5983f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if the input buffer is not in valid Base64 encoding scheme. The position of the input buffer will not be advanced in this case.</source>
          <target state="translated">&lt;code&gt;IllegalArgumentException&lt;/code&gt; は、入力バッファーが有効なBase64エンコードスキームにない場合にスローされます。この場合、入力バッファーの位置は進みません。</target>
        </trans-unit>
        <trans-unit id="80a441081531d8a599e712331cd27d79118676af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown if any of the following restrictions is violated:</source>
          <target state="translated">&lt;code&gt;IllegalArgumentException&lt;/code&gt; 次の制限のいずれかに違反した場合、IllegalArgumentExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="25a6dbceb7c32563fdcbbfb1abdda8b839413452" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImageReader&lt;/code&gt; objects are normally instantiated by the service provider interface (SPI) class for the specific format. Service provider classes (e.g., instances of &lt;code&gt;ImageReaderSpi&lt;/code&gt;) are registered with the &lt;code&gt;IIORegistry&lt;/code&gt;, which uses them for format recognition and presentation of available format readers and writers.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; オブジェクトは、通常、特定の形式のサービスプロバイダーインターフェイス（SPI）クラスによってインスタンス化されます。サービスプロバイダークラス（ &lt;code&gt;ImageReaderSpi&lt;/code&gt; のインスタンスなど）は &lt;code&gt;IIORegistry&lt;/code&gt; に登録されます。IIORegistryは、それらを使用して、フォーマットの認識と、使用可能なフォーマットリーダーおよびライターのプレゼンテーションを行います。</target>
        </trans-unit>
        <trans-unit id="ef33e288b67701c24a861558997dcb7853df94a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImageReader&lt;/code&gt;s that do not support setting of the source render size may ignore this value.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; ソースレンダリングサイズの設定をサポートしないImageReaderは、この値を無視する場合があります。</target>
        </trans-unit>
        <trans-unit id="b500dbb0f638633f0db3963336fdbdc9e2e308fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImageReader&lt;/code&gt;s that do not support setting of the source render size should set this value to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; ソースレンダリングサイズの設定をサポートしないImageReaderは、この値を &lt;code&gt;false&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="406cefd978145765934d99c7349bccdd08a9b643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImageWriter&lt;/code&gt; objects are normally instantiated by the service provider class for the specific format. Service provider classes are registered with the &lt;code&gt;IIORegistry&lt;/code&gt;, which uses them for format recognition and presentation of available format readers and writers.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; オブジェクトは通常、特定の形式のサービスプロバイダークラスによってインスタンス化されます。サービスプロバイダークラスは &lt;code&gt;IIORegistry&lt;/code&gt; に登録されます。IIORegistryは、使用可能なフォーマットリーダーとライターのフォーマット認識とプレゼンテーションにそれらを使用します。</target>
        </trans-unit>
        <trans-unit id="3e28c1473fed9c9f42e3c3710f6b4c36dab3863e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InputMap&lt;/code&gt; provides a binding between an input event (currently only &lt;code&gt;KeyStroke&lt;/code&gt;s are used) and an &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;InputMap&lt;/code&gt; は、入力イベント（現在は &lt;code&gt;KeyStroke&lt;/code&gt; のみが使用されます）と &lt;code&gt;Object&lt;/code&gt; 間のバインディングを提供します。</target>
        </trans-unit>
        <trans-unit id="0186cbf4fdcc81e96895ac727fd24d21b1e9f6da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InputMap&lt;/code&gt; provides a binding between an input event (currently only &lt;code&gt;KeyStroke&lt;/code&gt;s are used) and an &lt;code&gt;Object&lt;/code&gt;. &lt;code&gt;InputMap&lt;/code&gt;s are usually used with an &lt;code&gt;ActionMap&lt;/code&gt;, to determine an &lt;code&gt;Action&lt;/code&gt; to perform when a key is pressed. An &lt;code&gt;InputMap&lt;/code&gt; can have a parent that is searched for bindings not defined in the &lt;code&gt;InputMap&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;InputMap&lt;/code&gt; は、入力イベント（現在は &lt;code&gt;KeyStroke&lt;/code&gt; のみが使用されます）と &lt;code&gt;Object&lt;/code&gt; 間のバインディングを提供します。 &lt;code&gt;InputMap&lt;/code&gt; は通常、 &lt;code&gt;Action&lt;/code&gt; &lt;code&gt;ActionMap&lt;/code&gt; とともに使用され、キーが押されたときに実行するアクションを決定します。アン &lt;code&gt;InputMap&lt;/code&gt; で定義されていないバインディングのために検索された親持つことができ &lt;code&gt;InputMap&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b3e52db9842641fd18ff547c88682ba9942c744" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InputStream&lt;/code&gt; through which the partial &lt;code&gt;Blob&lt;/code&gt; value can be read.</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; 部分的な &lt;code&gt;Blob&lt;/code&gt; 値を読み取ることができるInputStream。</target>
        </trans-unit>
        <trans-unit id="c009719418adcf7d42aea467fa64571c4800bf89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; can store points on the time-line further in the future and further in the past than &lt;code&gt;Date&lt;/code&gt;. In this scenario, this method will throw an exception.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; は、 &lt;code&gt;Date&lt;/code&gt; よりも未来および過去のタイムライン上のポイントを保存できます。このシナリオでは、このメソッドは例外をスローします。</target>
        </trans-unit>
        <trans-unit id="aa134bd1f75399bc7781fff961870a9b2e8b870b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; is the closest equivalent class to &lt;code&gt;java.util.Date&lt;/code&gt;. &lt;code&gt;ZonedDateTime&lt;/code&gt; is the closest equivalent class to &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; は &lt;code&gt;java.util.Date&lt;/code&gt; に最も近い同等のクラスです。 &lt;code&gt;ZonedDateTime&lt;/code&gt; は、 &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt; に最も近い同等のクラスです。</target>
        </trans-unit>
        <trans-unit id="d10b3c5ea0c355cfcf9354f410a7fac28f94deb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; &lt;code&gt;NANOS&lt;/code&gt; の即時返品</target>
        </trans-unit>
        <trans-unit id="489a3cc302b61344308b8cf9e6d8de209a02be72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; はnullを返します</target>
        </trans-unit>
        <trans-unit id="ad42bbc428fc6f915c39ece2daa07897b692dd17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; returns null (does not represent a date)</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; はnullを返します（日付を表しません）</target>
        </trans-unit>
        <trans-unit id="00d7da128e9dcb0029aa870ecbf560f510800458" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; uses a precision of nanoseconds, whereas &lt;code&gt;Date&lt;/code&gt; uses a precision of milliseconds. The conversion will trancate any excess precision information as though the amount in nanoseconds was subject to integer division by one million.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; はナノ秒の精度を使用しますが、 &lt;code&gt;Date&lt;/code&gt; はミリ秒の精度を使用します。変換により、ナノ秒単位の量が100万による整数除算の対象であるかのように、余分な精度情報が変換されます。</target>
        </trans-unit>
        <trans-unit id="22947d123c87ac99fabaa692c24d7d62800431c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instant&lt;/code&gt; uses a precision of nanoseconds, whereas &lt;code&gt;Date&lt;/code&gt; uses a precision of milliseconds. The conversion will truncate any excess precision information as though the amount in nanoseconds was subject to integer division by one million.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; はナノ秒の精度を使用しますが、 &lt;code&gt;Date&lt;/code&gt; はミリ秒の精度を使用します。変換により、ナノ秒単位の量が100万で整数除算されたかのように、余分な精度の情報が切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="96984a798524fb70da361b9d15f265e505e95265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IntStream.iterate&lt;/code&gt; should produce the same sequence of elements as produced by the corresponding for-loop:</source>
          <target state="translated">&lt;code&gt;IntStream.iterate&lt;/code&gt; は、対応するforループによって生成されるものと同じ要素のシーケンスを生成する必要があります。</target>
        </trans-unit>
        <trans-unit id="b673966989262dc2de450a295e652501c6dde358" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IntSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;reduction&lt;/a&gt; target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;IntSummaryStatistics&lt;/code&gt; は、&lt;a href=&quot;stream/stream&quot;&gt;ストリームの&lt;/a&gt;&lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;削減&lt;/a&gt;ターゲットとして使用できます。例えば：</target>
        </trans-unit>
        <trans-unit id="efbdc2e5ab1a95f4c01cced9efaa42caed4e921e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IntSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;reduction&lt;/a&gt; target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;IntSummaryStatistics&lt;/code&gt; は、&lt;a href=&quot;stream/stream&quot;&gt;ストリームの&lt;/a&gt;&lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;削減&lt;/a&gt;ターゲットとして使用できます。例えば：</target>
        </trans-unit>
        <trans-unit id="de04aa860f9254de370b5655f9592aa115418acf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; (as specified by &lt;a href=&quot;blockingqueue#remainingCapacity()&quot;&gt;&lt;code&gt;BlockingQueue.remainingCapacity()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; （&lt;a href=&quot;blockingqueue#remainingCapacity()&quot;&gt; &lt;code&gt;BlockingQueue.remainingCapacity()&lt;/code&gt; で&lt;/a&gt;指定）</target>
        </trans-unit>
        <trans-unit id="f10e22b7d65a6887a91fb513ed9582789f93c402" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; (as specified by &lt;a href=&quot;blockingqueue#remainingCapacity--&quot;&gt;&lt;code&gt;BlockingQueue.remainingCapacity&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; （&lt;a href=&quot;blockingqueue#remainingCapacity--&quot;&gt; &lt;code&gt;BlockingQueue.remainingCapacity&lt;/code&gt; で&lt;/a&gt;指定）</target>
        </trans-unit>
        <trans-unit id="be7bfaf45f65c0824f09169bae91b3496ffef726" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; always</source>
          <target state="translated">&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; は常に</target>
        </trans-unit>
        <trans-unit id="f6e79cfcede6096bb5c0298312c9592495399732" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;, etc</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; 、 &lt;code&gt;Boolean&lt;/code&gt; など</target>
        </trans-unit>
        <trans-unit id="6338c153f250ef81745f3004fb310a7288d787b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;ObjectName&lt;/code&gt;, etc</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; 、 &lt;code&gt;ObjectName&lt;/code&gt; など</target>
        </trans-unit>
        <trans-unit id="3331529aaf6e845963846c592f00ed0bac7ed32c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InternationalFormatter&lt;/code&gt; extends &lt;code&gt;DefaultFormatter&lt;/code&gt;, using an instance of &lt;code&gt;java.text.Format&lt;/code&gt; to handle the conversion to a String, and the conversion from a String.</source>
          <target state="translated">&lt;code&gt;InternationalFormatter&lt;/code&gt; は、 &lt;code&gt;java.text.Format&lt;/code&gt; のインスタンスを使用して &lt;code&gt;DefaultFormatter&lt;/code&gt; を拡張し、文字列への変換と文字列からの変換を処理します。</target>
        </trans-unit>
        <trans-unit id="2cc2d8ab1140f9ecdd79ce4beabb6c81c987179d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InternationalFormatter&lt;/code&gt; implements &lt;code&gt;stringToValue&lt;/code&gt; in this manner so that you can specify an alternate Class than &lt;code&gt;Format&lt;/code&gt; may return.</source>
          <target state="translated">&lt;code&gt;InternationalFormatter&lt;/code&gt; は、この方法で &lt;code&gt;stringToValue&lt;/code&gt; を実装しているため、 &lt;code&gt;Format&lt;/code&gt; が返す可能性のある代替クラスを指定できます。</target>
        </trans-unit>
        <trans-unit id="ee137fae54c4cea8b2088f0ef6457821116103c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InternationalFormatter&lt;/code&gt;'s behavior of &lt;code&gt;stringToValue&lt;/code&gt; is slightly different than that of &lt;code&gt;DefaultTextFormatter&lt;/code&gt;, it does the following:</source>
          <target state="translated">&lt;code&gt;InternationalFormatter&lt;/code&gt; の &lt;code&gt;stringToValue&lt;/code&gt; の動作は、 &lt;code&gt;DefaultTextFormatter&lt;/code&gt; の動作とは少し異なり、次のようになります。</target>
        </trans-unit>
        <trans-unit id="5ef7409c4b47ce43d825d9e4094126501b146adf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InvocationHandler&lt;/code&gt; is the interface implemented by the</source>
          <target state="translated">&lt;code&gt;InvocationHandler&lt;/code&gt; は、</target>
        </trans-unit>
        <trans-unit id="c527833daa9300953a05dbfdf160201cc738ca5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IsoEra&lt;/code&gt; is an enum representing the ISO eras of BCE/CE. This factory allows the enum to be obtained from the &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;IsoEra&lt;/code&gt; は、BCE / CEのISO時代を表す列挙型です。このファクトリでは、列挙型を &lt;code&gt;int&lt;/code&gt; 値から取得できます。</target>
        </trans-unit>
        <trans-unit id="879476c65678c7bca891731cffd2e531f1ed33d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Iterator&lt;/code&gt; for all prefixes bound to the Namespace URI in the current scope</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; 現在のスコープ内の名前空間URIにバインドされているすべてのプレフィックスのイテレータ</target>
        </trans-unit>
        <trans-unit id="45e87b228485535623057c3224f04fb14268a993" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Iterator&lt;/code&gt; over prefixes bound to Namespace URI in the current scope in an arbitrary, &lt;strong&gt;implementation dependent&lt;/strong&gt;, order</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; &lt;strong&gt;実装に依存&lt;/strong&gt;する任意の順序で、現在のスコープの名前空間URIにバインドされたプレフィックスに対するイテレータ</target>
        </trans-unit>
        <trans-unit id="f62ff1974b6b3148df0f420949fb5e19be43636a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Iterator&lt;/code&gt; with one element set to &lt;code&gt;XMLConstants.XMLNS_ATTRIBUTE&lt;/code&gt; (&quot;xmlns&quot;)</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; に設定する一つの要素と &lt;code&gt;XMLConstants.XMLNS_ATTRIBUTE&lt;/code&gt; （「のxmlns」）</target>
        </trans-unit>
        <trans-unit id="35c64831e809bb3406e92be705b3932c30cffb0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Iterator&lt;/code&gt; with one element set to &lt;code&gt;XMLConstants.XML_NS_PREFIX&lt;/code&gt; (&quot;xml&quot;)</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; に設定する一つの要素と &lt;code&gt;XMLConstants.XML_NS_PREFIX&lt;/code&gt; （「XML」）</target>
        </trans-unit>
        <trans-unit id="106cf98e5df497b025ce3a9503ba79a90aa2401f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JColorChooser&lt;/code&gt; provides a pane of controls designed to allow a user to manipulate and select a color.</source>
          <target state="translated">&lt;code&gt;JColorChooser&lt;/code&gt; は、ユーザーが色を操作および選択できるように設計されたコントロールペインを提供します。</target>
        </trans-unit>
        <trans-unit id="44ed52d5ff3e19fad4ae9d8d23aea7ab427f9fa0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JColorChooser&lt;/code&gt; provides a pane of controls designed to allow a user to manipulate and select a color. For information about using color choosers, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/colorchooser.html&quot;&gt;How to Use Color Choosers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JColorChooser&lt;/code&gt; は、ユーザーが色を操作および選択できるように設計されたコントロールペインを提供します。&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/colorchooser.html&quot;&gt;カラーチューザの使用&lt;/a&gt;については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションの「カラーチューザの使用方法」を参照してください。</target>
        </trans-unit>
        <trans-unit id="7603bfdccd10a6ab059f029c69fbea275bdf2c5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JComponent&lt;/code&gt; and its subclasses document default values for certain properties. For example, &lt;code&gt;JTable&lt;/code&gt; documents the default row height as 16. Each &lt;code&gt;JComponent&lt;/code&gt; subclass that has a &lt;code&gt;ComponentUI&lt;/code&gt; will create the &lt;code&gt;ComponentUI&lt;/code&gt; as part of its constructor. In order to provide a particular look and feel each &lt;code&gt;ComponentUI&lt;/code&gt; may set properties back on the &lt;code&gt;JComponent&lt;/code&gt; that created it. For example, a custom look and feel may require &lt;code&gt;JTable&lt;/code&gt;s to have a row height of 24. The documented defaults are the value of a property BEFORE the &lt;code&gt;ComponentUI&lt;/code&gt; has been installed. If you need a specific value for a particular property you should explicitly set it.</source>
          <target state="translated">&lt;code&gt;JComponent&lt;/code&gt; とそのサブクラスは、特定のプロパティのデフォルト値を文書化します。たとえば、 &lt;code&gt;JTable&lt;/code&gt; はデフォルトの行の高さを16として文書化します &lt;code&gt;JComponent&lt;/code&gt; を持つ各JComponentサブクラスは、コンストラクターの一部として &lt;code&gt;ComponentUI&lt;/code&gt; を作成し &lt;code&gt;ComponentUI&lt;/code&gt; 。特定のルックアンドフィールを提供するために、各 &lt;code&gt;ComponentUI&lt;/code&gt; はそれを作成した &lt;code&gt;JComponent&lt;/code&gt; にプロパティを設定し直す場合があります。たとえば、カスタムのルックアンドフィールでは、 &lt;code&gt;JTable&lt;/code&gt; の行の高さが24である必要がある場合があります。文書化されたデフォルトは、 &lt;code&gt;ComponentUI&lt;/code&gt; の前のプロパティの値です。インストールされました。特定のプロパティに特定の値が必要な場合は、明示的に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="a527e2994de1518dc31e3334f491619cf306117f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JComponent&lt;/code&gt; subclasses that need to be painted when any of their children are repainted should override this method to return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JComponent&lt;/code&gt; 子のいずれかが再描画されるときに描画する必要があるJComponentサブクラスは、 &lt;code&gt;true&lt;/code&gt; を返すようにこのメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="2b3868bc233636db4d38d59db5b2035c838c1fc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFileChooser&lt;/code&gt; first looks to see if there is a user defined &lt;code&gt;FileView&lt;/code&gt;, if there is, it gets type information from there first. If &lt;code&gt;FileView&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt; for any method, &lt;code&gt;JFileChooser&lt;/code&gt; then uses the L&amp;amp;F specific view to get the information. So, for example, if you provide a &lt;code&gt;FileView&lt;/code&gt; class that returns an &lt;code&gt;Icon&lt;/code&gt; for JPG files, and returns &lt;code&gt;null&lt;/code&gt; icons for all other files, the UI's &lt;code&gt;FileView&lt;/code&gt; will provide default icons for all other files.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; は、最初にユーザー定義の &lt;code&gt;FileView&lt;/code&gt; があるかどうかを確認し、ある場合は、そこからタイプ情報を最初に取得します。 &lt;code&gt;FileView&lt;/code&gt; がいずれかのメソッドに対して &lt;code&gt;null&lt;/code&gt; を返す場合、 &lt;code&gt;JFileChooser&lt;/code&gt; はL＆F固有のビューを使用して情報を取得します。したがって、たとえば、JPGファイルの &lt;code&gt;Icon&lt;/code&gt; を返し、他のすべてのファイルの &lt;code&gt;null&lt;/code&gt; アイコンを返す &lt;code&gt;FileView&lt;/code&gt; クラスを提供する場合、UIの &lt;code&gt;FileView&lt;/code&gt; は他のすべてのファイルのデフォルトアイコンを提供します。</target>
        </trans-unit>
        <trans-unit id="7ee79c41dfcf6f92948da9c9fbf9bcee6a9a7899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFileChooser&lt;/code&gt; provides a simple mechanism for the user to choose a file.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; は、ユーザーがファイルを選択するための簡単なメカニズムを提供します。</target>
        </trans-unit>
        <trans-unit id="b1ae99fbe784b42aa7527beb889b91d151661956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFileChooser&lt;/code&gt; provides a simple mechanism for the user to choose a file. For information about using &lt;code&gt;JFileChooser&lt;/code&gt;, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;How to Use File Choosers&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; は、ユーザーがファイルを選択するための簡単なメカニズムを提供します。使用方法の詳細については &lt;code&gt;JFileChooser&lt;/code&gt; のを参照してください&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/filechooser.html&quot;&gt;どのように使うファイルチューに&lt;/a&gt;、セクション&lt;em&gt;Javaチュートリアル&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a1fb51de2ad213046ddadd20440cb91ad363752a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; is also responsible for determining when values are committed to the &lt;code&gt;JFormattedTextField&lt;/code&gt;. Some &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt;s will make new values available on every edit, and others will never commit the value. You can force the current value to be obtained from the current &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; by way of invoking &lt;code&gt;commitEdit&lt;/code&gt;. &lt;code&gt;commitEdit&lt;/code&gt; will be invoked whenever return is pressed in the &lt;code&gt;JFormattedTextField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; は、値が &lt;code&gt;JFormattedTextField&lt;/code&gt; にコミットされるタイミングを決定する役割も果たします。 &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; の中には、編集のたびに新しい値を使用できるものもあれば、値をコミットしないものもあります。 &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; を呼び出すことにより、現在のJFormattedTextField.AbstractFormatterから現在の値を強制的に取得 &lt;code&gt;commitEdit&lt;/code&gt; ます。 &lt;code&gt;commitEdit&lt;/code&gt; は、 &lt;code&gt;JFormattedTextField&lt;/code&gt; でreturnが押されるたびに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="92b55cf9238083c742347f07fe26e5831d2d0895" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; allows configuring what action should be taken when focus is lost. The possible configurations are:</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; を使用すると、フォーカスが失われたときに実行するアクションを構成できます。可能な構成は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="f3e143dafd7434c7bd687b6669c51fbaad5815a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; allows the focus to leave, even if the currently edited value is invalid. To lock the focus down while the &lt;code&gt;JFormattedTextField&lt;/code&gt; is an invalid edit state you can attach an &lt;code&gt;InputVerifier&lt;/code&gt;. The following code snippet shows a potential implementation of such an &lt;code&gt;InputVerifier&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; を使用すると、現在編集されている値が無効な場合でも、フォーカスを離れることができます。一方、フォーカスをロックダウンするには &lt;code&gt;JFormattedTextField&lt;/code&gt; のは、あなたが添付することができ、無効な編集状態である &lt;code&gt;InputVerifier&lt;/code&gt; を。次のコードスニペットは、そのような &lt;code&gt;InputVerifier&lt;/code&gt; の潜在的な実装を示しています。</target>
        </trans-unit>
        <trans-unit id="49cbb6148263e7269a076333a72993b96f8cf566" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; does not do the formatting it self, rather formatting is done through an instance of &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; which is obtained from an instance of &lt;code&gt;JFormattedTextField.AbstractFormatterFactory&lt;/code&gt;. Instances of &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; are notified when they become active by way of the &lt;code&gt;install&lt;/code&gt; method, at which point the &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; can install whatever it needs to, typically a &lt;code&gt;DocumentFilter&lt;/code&gt;. Similarly when &lt;code&gt;JFormattedTextField&lt;/code&gt; no longer needs the &lt;code&gt;AbstractFormatter&lt;/code&gt;, it will invoke &lt;code&gt;uninstall&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; は、それ自体でフォーマットを実行するのではなく、 &lt;code&gt;JFormattedTextField.AbstractFormatterFactory&lt;/code&gt; のインスタンスから取得された &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; のインスタンスを介してフォーマットを実行します。 &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; のインスタンスは、 &lt;code&gt;install&lt;/code&gt; メソッドを介してアクティブになると通知されます。その時点で、 &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; は、必要なもの（通常は &lt;code&gt;DocumentFilter&lt;/code&gt; )をインストールできます。同様に、 &lt;code&gt;JFormattedTextField&lt;/code&gt; が &lt;code&gt;AbstractFormatter&lt;/code&gt; を必要としなくなった場合、 &lt;code&gt;uninstall&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a5eebc1724a3b2ed75af911e5e4fb2942c7a5ed1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; extends &lt;code&gt;JTextField&lt;/code&gt; adding support for formatting arbitrary values, as well as retrieving a particular object once the user has edited the text.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; は &lt;code&gt;JTextField&lt;/code&gt; を拡張し、任意の値のフォーマットのサポートを追加し、ユーザーがテキストを編集した後に特定のオブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="2d33f62b99f836614b3345ef6242a567c59b4336" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; extends &lt;code&gt;JTextField&lt;/code&gt; adding support for formatting arbitrary values, as well as retrieving a particular object once the user has edited the text. The following illustrates configuring a &lt;code&gt;JFormattedTextField&lt;/code&gt; to edit dates:</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; は &lt;code&gt;JTextField&lt;/code&gt; を拡張し、任意の値のフォーマットのサポートを追加し、ユーザーがテキストを編集した後に特定のオブジェクトを取得します。以下に、 &lt;code&gt;JFormattedTextField&lt;/code&gt; を編集するためのJFormattedTextFieldの構成を示します。</target>
        </trans-unit>
        <trans-unit id="8de2c393530108fb48973a702fbfb63cf8eadec7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JFormattedTextField&lt;/code&gt; typically queries the &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; for an &lt;code&gt;AbstractFormat&lt;/code&gt; when it gains or loses focus. Although this can change based on the focus lost policy. If the focus lost policy is &lt;code&gt;JFormattedTextField.PERSIST&lt;/code&gt; and the &lt;code&gt;JFormattedTextField&lt;/code&gt; has been edited, the &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; will not be queried until the value has been committed. Similarly if the focus lost policy is &lt;code&gt;JFormattedTextField.COMMIT&lt;/code&gt; and an exception is thrown from &lt;code&gt;stringToValue&lt;/code&gt;, the &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; will not be queried when focus is lost or gained.</source>
          <target state="translated">&lt;code&gt;JFormattedTextField&lt;/code&gt; は通常、フォーカスを取得または失ったときに、 &lt;code&gt;AbstractFormat&lt;/code&gt; terFactoryに &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; を照会します。これはフォーカスロストポリシーに基づいて変更できますが。フォーカスが失われたポリシーが &lt;code&gt;JFormattedTextField.PERSIST&lt;/code&gt; であり、 &lt;code&gt;JFormattedTextField&lt;/code&gt; が編集されている場合、値がコミットされるまで、 &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; は照会されません。ポリシーを失っフォーカスがある場合も同様 &lt;code&gt;JFormattedTextField.COMMIT&lt;/code&gt; と例外がスローされるから &lt;code&gt;stringToValue&lt;/code&gt; 、 &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; はフォーカスが失われたり、獲得されたときに照会されることはありません。</target>
        </trans-unit>
        <trans-unit id="c4825a454e1efc9ea32e8b5998d0d0a25051f9ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayer&lt;/code&gt; delegates the handling of painting and input events to a &lt;a href=&quot;plaf/layerui&quot;&gt;&lt;code&gt;LayerUI&lt;/code&gt;&lt;/a&gt; object, which performs the actual decoration.</source>
          <target state="translated">&lt;code&gt;JLayer&lt;/code&gt; は、実際の装飾を実行する&lt;a href=&quot;plaf/layerui&quot;&gt; &lt;code&gt;LayerUI&lt;/code&gt; &lt;/a&gt;オブジェクトにペイントおよび入力イベントの処理を委任します。</target>
        </trans-unit>
        <trans-unit id="5658d1fc91ec90d609cf7e545fccb07006a043d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayer&lt;/code&gt; is a good solution if you only need to do custom painting over compound component or catch input events from its subcomponents.</source>
          <target state="translated">&lt;code&gt;JLayer&lt;/code&gt; は、複合コンポーネントに対してカスタムペイントを実行するか、そのサブコンポーネントから入力イベントをキャッチするだけでよい場合に適したソリューションです。</target>
        </trans-unit>
        <trans-unit id="1cfa5807b40e968fb11105f6d8e9d30ae6521ad0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayer&lt;/code&gt; is a universal decorator for Swing components which enables you to implement various advanced painting effects as well as receive notifications of all &lt;code&gt;AWTEvent&lt;/code&gt;s generated within its borders.</source>
          <target state="translated">&lt;code&gt;JLayer&lt;/code&gt; は、Swingコンポーネントのユニバーサルデコレータであり、さまざまな高度なペイントエフェクトを実装したり、境界内で生成されたすべての &lt;code&gt;AWTEvent&lt;/code&gt; の通知を受信したりできます。</target>
        </trans-unit>
        <trans-unit id="dae3e634d4e19647cd61699bb22003d2a8179264" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayeredPane&lt;/code&gt; adds depth to a JFC/Swing container, allowing components to overlap each other when needed.</source>
          <target state="translated">&lt;code&gt;JLayeredPane&lt;/code&gt; は、JFC / Swingコンテナに奥行きを追加し、必要に応じてコンポーネントを互いにオーバーラップできるようにします。</target>
        </trans-unit>
        <trans-unit id="485c8639befdb7591dd512dac093f4a950d4120a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayeredPane&lt;/code&gt; adds depth to a JFC/Swing container, allowing components to overlap each other when needed. An &lt;code&gt;Integer&lt;/code&gt; object specifies each component's depth in the container, where higher-numbered components sit &quot;on top&quot; of other components. For task-oriented documentation and examples of using layered panes see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/layeredpane.html&quot;&gt;How to Use a Layered Pane&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JLayeredPane&lt;/code&gt; は、JFC / Swingコンテナに奥行きを追加し、必要に応じてコンポーネントを互いにオーバーラップできるようにします。 AN &lt;code&gt;Integer&lt;/code&gt; オブジェクトは、より高い番号の構成要素が他の構成要素の「上に」座るコンテナの各コンポーネントの深さを指定します。タスク指向のドキュメントとレイヤードペインの使用例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションで&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/layeredpane.html&quot;&gt;あるレイヤードペインの使用方法を&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96ed1919ccda17cbb871a15b03f600f1f6ee7af6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JLayeredPane&lt;/code&gt; manages its list of children like &lt;code&gt;Container&lt;/code&gt;, but allows for the definition of a several layers within itself. Children in the same layer are managed exactly like the normal &lt;code&gt;Container&lt;/code&gt; object, with the added feature that when children components overlap, children in higher layers display above the children in lower layers.</source>
          <target state="translated">&lt;code&gt;JLayeredPane&lt;/code&gt; は、 &lt;code&gt;Container&lt;/code&gt; のように子のリストを管理しますが、それ自体の中にいくつかのレイヤーを定義することができます。同じレイヤーの子は、通常の &lt;code&gt;Container&lt;/code&gt; オブジェクトとまったく同じように管理されますが、子コンポーネントがオーバーラップすると、上位レイヤーの子が下位レイヤーの子の上に表示されるという機能が追加されています。</target>
        </trans-unit>
        <trans-unit id="a0bda5d0bd1b60d17cd7346425b4c3c8cc93f71b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JList&lt;/code&gt; doesn't implement scrolling directly. To create a list that scrolls, make it the viewport view of a &lt;code&gt;JScrollPane&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;JList&lt;/code&gt; は直接スクロールを実装していません。スクロールするリストを作成するには、それを &lt;code&gt;JScrollPane&lt;/code&gt; のビューポートビューにします。例えば：</target>
        </trans-unit>
        <trans-unit id="55f8e3b4df354ba954f8b7f55a2e805688f37c78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JList&lt;/code&gt; doesn't provide any special handling of double or triple (or N) mouse clicks, but it's easy to add a &lt;code&gt;MouseListener&lt;/code&gt; if you wish to take action on these events. Use the &lt;code&gt;locationToIndex&lt;/code&gt; method to determine what cell was clicked. For example:</source>
          <target state="translated">&lt;code&gt;JList&lt;/code&gt; は、ダブルまたはトリプル（またはN）のマウスクリックの特別な処理を提供しませんが、これらのイベントに対してアクションを実行する場合は、 &lt;code&gt;MouseListener&lt;/code&gt; を簡単に追加できます。 &lt;code&gt;locationToIndex&lt;/code&gt; メソッドを使用して、クリックされたセルを判別します。例えば：</target>
        </trans-unit>
        <trans-unit id="7cfe7bb2790141c82b668eaf1d38714fbf5f2b6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JList&lt;/code&gt; supports the following drop modes:</source>
          <target state="translated">&lt;code&gt;JList&lt;/code&gt; は、次のドロップモードをサポートしています。</target>
        </trans-unit>
        <trans-unit id="51dfeb4e7cb7476d93f7a530d56e5f4c66f1c567" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JMImplementation:type=MBeanServerDelegate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JMImplementation:type=MBeanServerDelegate&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="59a2b620c313da2a435b69a817319b85d4467e21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JOptionPane&lt;/code&gt; makes it easy to pop up a standard dialog box that prompts users for a value or informs them of something.</source>
          <target state="translated">&lt;code&gt;JOptionPane&lt;/code&gt; を使用すると、ユーザーに値の入力を求めたり、何かを通知したりする標準のダイアログボックスを簡単にポップアップできます。</target>
        </trans-unit>
        <trans-unit id="58d29c83736d46256bcd531f94d98c7e14761eee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JOptionPane&lt;/code&gt; makes it easy to pop up a standard dialog box that prompts users for a value or informs them of something. For information about using &lt;code&gt;JOptionPane&lt;/code&gt;, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;How to Make Dialogs&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JOptionPane&lt;/code&gt; を使用すると、ユーザーに値の入力を求めたり、何かを通知したりする標準のダイアログボックスを簡単にポップアップできます。 &lt;code&gt;JOptionPane&lt;/code&gt; の使用については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションの&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;「ダイアログの作成方法」を&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eab64e6a5c9c3c5957a4e4b76257f9fce08caca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JOptionPane&lt;/code&gt; that the receiver is providing the look and feel for.</source>
          <target state="translated">&lt;code&gt;JOptionPane&lt;/code&gt; レシーバーがルックアンドフィールを提供しているJOptionPane。</target>
        </trans-unit>
        <trans-unit id="ff37d16ae6ac2004a4f2c3929c33004527e7c2c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPanel&lt;/code&gt; is a generic lightweight container.</source>
          <target state="translated">&lt;code&gt;JPanel&lt;/code&gt; は一般的な軽量コンテナです。</target>
        </trans-unit>
        <trans-unit id="548b97d7ce70cdd68abfeb12617a4fd40d41b06f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPanel&lt;/code&gt; is a generic lightweight container. For examples and task-oriented documentation for JPanel, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/panel.html&quot;&gt;How to Use Panels&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JPanel&lt;/code&gt; は一般的な軽量コンテナです。JPanelの例とタスク指向のドキュメントについては&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションである&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/panel.html&quot;&gt;パネルの使用方法」を&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b61171be88dd8f716c3c9e99aa55c5538537364" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPasswordField&lt;/code&gt; is a lightweight component that allows the editing of a single line of text where the view indicates something was typed, but does not show the original characters.</source>
          <target state="translated">&lt;code&gt;JPasswordField&lt;/code&gt; は、ビューが何かが入力されたことを示しているが、元の文字を表示していない1行のテキストの編集を可能にする軽量コンポーネントです。</target>
        </trans-unit>
        <trans-unit id="77b9076cae2e4c91e7983362180178af747ed236" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPasswordField&lt;/code&gt; is a lightweight component that allows the editing of a single line of text where the view indicates something was typed, but does not show the original characters. You can find further information and examples in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;How to Use Text Fields&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;JPasswordField&lt;/code&gt; は、ビューが何かが入力されたことを示しているが、元の文字を表示していない1行のテキストの編集を可能にする軽量コンポーネントです。詳細と例については、&lt;em&gt;Javaチュートリアルの&lt;/em&gt;セクションにある&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;テキストフィールドの使用方法」を参照してください&lt;/a&gt;&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07e3e9fdc1a796b9d8877250e87aba14bba4a8f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPasswordField&lt;/code&gt; is intended to be source-compatible with &lt;code&gt;java.awt.TextField&lt;/code&gt; used with &lt;code&gt;echoChar&lt;/code&gt; set. It is provided separately to make it easier to safely change the UI for the &lt;code&gt;JTextField&lt;/code&gt; without affecting password entries.</source>
          <target state="translated">&lt;code&gt;JPasswordField&lt;/code&gt; は、 &lt;code&gt;echoChar&lt;/code&gt; セットで使用される &lt;code&gt;java.awt.TextField&lt;/code&gt; とソース互換であることを目的としています。パスワード入力に影響を与えることなく、 &lt;code&gt;JTextField&lt;/code&gt; のUIを安全に変更しやすくするために、個別に提供されています。</target>
        </trans-unit>
        <trans-unit id="52712d3a5ca640a791f1ccbf642d9b8b84ead558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPopupMenu&lt;/code&gt; assigned for this component or &lt;code&gt;null&lt;/code&gt; if no popup assigned</source>
          <target state="translated">&lt;code&gt;JPopupMenu&lt;/code&gt; このコンポーネントにJPopupMenuが割り当てられているか、ポップアップが割り当てられていない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0f45e4a6129beaab4110a8b85afa60ba9ebebfa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JPopupMenu&lt;/code&gt;, &lt;code&gt;JToolBar&lt;/code&gt; and &lt;code&gt;JMenu&lt;/code&gt; all provide convenience methods for creating a component and setting the &lt;code&gt;Action&lt;/code&gt; on the corresponding component. Refer to each of these classes for more information.</source>
          <target state="translated">&lt;code&gt;JPopupMenu&lt;/code&gt; 、 &lt;code&gt;JToolBar&lt;/code&gt; 、および &lt;code&gt;JMenu&lt;/code&gt; はすべて、コンポーネントを作成し、対応するコンポーネントに &lt;code&gt;Action&lt;/code&gt; を設定するための便利なメソッドを提供します。詳細については、これらの各クラスを参照してください。</target>
        </trans-unit>
        <trans-unit id="799fa21b1eda4fc60a9187dd4e770fca16b103e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JProgressBar&lt;/code&gt; uses a &lt;code&gt;BoundedRangeModel&lt;/code&gt; as its data model, with the &lt;code&gt;value&lt;/code&gt; property representing the &quot;current&quot; state of the task, and the &lt;code&gt;minimum&lt;/code&gt; and &lt;code&gt;maximum&lt;/code&gt; properties representing the beginning and end points, respectively.</source>
          <target state="translated">&lt;code&gt;JProgressBar&lt;/code&gt; は、データモデルとして &lt;code&gt;BoundedRangeModel&lt;/code&gt; を使用し、 &lt;code&gt;value&lt;/code&gt; プロパティはタスクの「現在の」状態を表し、 &lt;code&gt;minimum&lt;/code&gt; プロパティと &lt;code&gt;maximum&lt;/code&gt; プロパティはそれぞれ開始点と終了点を表します。</target>
        </trans-unit>
        <trans-unit id="1b516a434f9f3ef95f9f9e851378e62a62eae793" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSeparator&lt;/code&gt; provides a general purpose component for implementing divider lines - most commonly used as a divider between menu items that breaks them up into logical groupings.</source>
          <target state="translated">&lt;code&gt;JSeparator&lt;/code&gt; は、仕切り線を実装するための汎用コンポーネントを提供します。最も一般的には、メニュー項目を論理グループに分割するメニュー項目間の仕切りとして使用されます。</target>
        </trans-unit>
        <trans-unit id="b36fd04b0fc62f41cd7781d0f17d099e4e59b249" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSeparator&lt;/code&gt; provides a general purpose component for implementing divider lines - most commonly used as a divider between menu items that breaks them up into logical groupings. Instead of using &lt;code&gt;JSeparator&lt;/code&gt; directly, you can use the &lt;code&gt;JMenu&lt;/code&gt; or &lt;code&gt;JPopupMenu&lt;/code&gt;&lt;code&gt;addSeparator&lt;/code&gt; method to create and add a separator. &lt;code&gt;JSeparator&lt;/code&gt;s may also be used elsewhere in a GUI wherever a visual divider is useful.</source>
          <target state="translated">&lt;code&gt;JSeparator&lt;/code&gt; は、仕切り線を実装するための汎用コンポーネントを提供します。最も一般的には、メニュー項目を論理グループに分割するメニュー項目間の仕切りとして使用されます。 &lt;code&gt;JSeparator&lt;/code&gt; を直接使用する代わりに、 &lt;code&gt;JMenu&lt;/code&gt; または &lt;code&gt;JPopupMenu&lt;/code&gt; &lt;code&gt;addSeparator&lt;/code&gt; メソッドを使用して、セパレーターを作成および追加できます。 &lt;code&gt;JSeparator&lt;/code&gt; は、視覚的な仕切りが役立つ場合はいつでも、GUIの他の場所で使用することもできます。</target>
        </trans-unit>
        <trans-unit id="c6db90e53a9985e0f7adf31f2ddc167a0cde83a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSpinner&lt;/code&gt; ancestor; &lt;code&gt;null&lt;/code&gt; if none of the ancestors are a &lt;code&gt;JSpinner&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;JSpinner&lt;/code&gt; の祖先; 祖先のいずれも &lt;code&gt;JSpinner&lt;/code&gt; でない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5ce35029df4d40232dfb701b71813f555e739ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSplitPane&lt;/code&gt; is used to divide two (and only two) &lt;code&gt;Component&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;JSplitPane&lt;/code&gt; は、2つ（および2つのみ）の &lt;code&gt;Component&lt;/code&gt; を分割するために使用されます。</target>
        </trans-unit>
        <trans-unit id="86b77964cdd1e61da5138c190a52bc82fc0bb927" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSplitPane&lt;/code&gt; is used to divide two (and only two) &lt;code&gt;Component&lt;/code&gt;s. The two &lt;code&gt;Component&lt;/code&gt;s are graphically divided based on the look and feel implementation, and the two &lt;code&gt;Component&lt;/code&gt;s can then be interactively resized by the user. Information on using &lt;code&gt;JSplitPane&lt;/code&gt; is in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html&quot;&gt;How to Use Split Panes&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JSplitPane&lt;/code&gt; は、2つ（および2つのみ）の &lt;code&gt;Component&lt;/code&gt; を分割するために使用されます。2つの &lt;code&gt;Component&lt;/code&gt; はルックアンドフィールの実装に基づいてグラフィカルに分割され、2つの &lt;code&gt;Component&lt;/code&gt; はユーザーがインタラクティブにサイズ変更できます。使用上の情報 &lt;code&gt;JSplitPane&lt;/code&gt; のはである&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/splitpane.html&quot;&gt;どのように使用するのスプリットペイン&lt;/a&gt;で&lt;em&gt;Javaチュートリアル&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b5de9a5fc81e16d6dc5f31c98411c11523cecfda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTable&lt;/code&gt; supports the following drop modes:</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; は、次のドロップモードをサポートしています。</target>
        </trans-unit>
        <trans-unit id="7606fe914e7d81929dfff4717fa95f2b0ed10207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTable&lt;/code&gt;'s row-based methods and &lt;code&gt;JTable&lt;/code&gt;'s selection model refer to the view and not the underlying model. Therefore, it is necessary to convert between the two. For example, to get the selection in terms of &lt;code&gt;myModel&lt;/code&gt; you need to convert the indices:</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; の行ベースのメソッドと &lt;code&gt;JTable&lt;/code&gt; の選択モデルは、基になるモデルではなくビューを参照します。したがって、2つの間で変換する必要があります。たとえば、 &lt;code&gt;myModel&lt;/code&gt; の観点から選択を取得するには、インデックスを変換する必要があります。</target>
        </trans-unit>
        <trans-unit id="caa017b6686d727916808a78c96c6ef105c58db9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTable&lt;/code&gt;s are typically placed inside of a &lt;code&gt;JScrollPane&lt;/code&gt;. By default, a &lt;code&gt;JTable&lt;/code&gt; will adjust its width such that a horizontal scrollbar is unnecessary. To allow for a horizontal scrollbar, invoke &lt;a href=&quot;#setAutoResizeMode(int)&quot;&gt;&lt;code&gt;setAutoResizeMode(int)&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;AUTO_RESIZE_OFF&lt;/code&gt;. Note that if you wish to use a &lt;code&gt;JTable&lt;/code&gt; in a standalone view (outside of a &lt;code&gt;JScrollPane&lt;/code&gt;) and want the header displayed, you can get it using &lt;a href=&quot;#getTableHeader()&quot;&gt;&lt;code&gt;getTableHeader()&lt;/code&gt;&lt;/a&gt; and display it separately.</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; は通常、 &lt;code&gt;JScrollPane&lt;/code&gt; 内に配置されます。デフォルトでは、 &lt;code&gt;JTable&lt;/code&gt; は、水平スクロールバーが不要になるように幅を調整します。水平スクロールバーを使用できるようにするには、&lt;a href=&quot;#setAutoResizeMode(int)&quot;&gt; &lt;code&gt;setAutoResizeMode(int)&lt;/code&gt; &lt;/a&gt;を指定してsetAutoResizeMode（int）を &lt;code&gt;AUTO_RESIZE_OFF&lt;/code&gt; ます。スタンドアロンビュー（ &lt;code&gt;JScrollPane&lt;/code&gt; の外部）で &lt;code&gt;JTable&lt;/code&gt; を使用し、ヘッダーを表示する場合は、&lt;a href=&quot;#getTableHeader()&quot;&gt; &lt;code&gt;getTableHeader()&lt;/code&gt; &lt;/a&gt;を使用して取得し、個別に表示できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6eb8d9d3cb483a6a13db69f01e132ddaa6a891d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextComponent&lt;/code&gt; is the base class for swing text components.</source>
          <target state="translated">&lt;code&gt;JTextComponent&lt;/code&gt; は、スイングテキストコンポーネントの基本クラスです。</target>
        </trans-unit>
        <trans-unit id="dcc1b5f2bf4b9f1ea87c929136493fea70e539f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextComponent&lt;/code&gt; is the base class for swing text components. It tries to be compatible with the &lt;code&gt;java.awt.TextComponent&lt;/code&gt; class where it can reasonably do so. Also provided are other services for additional flexibility (beyond the pluggable UI and bean support). You can find information on how to use the functionality this class provides in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/generaltext.html&quot;&gt;General Rules for Using Text Components&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;JTextComponent&lt;/code&gt; は、スイングテキストコンポーネントの基本クラスです。それは、合理的にそうすることができる &lt;code&gt;java.awt.TextComponent&lt;/code&gt; クラスとの互換性を試みます。柔軟性を高めるための他のサービスも提供されます（プラグ可能なUIとBeanのサポート以外）。このクラスが提供する機能の使用方法に関する情報は、&lt;em&gt;Javaチュートリアルの&lt;/em&gt;セクションである&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/generaltext.html&quot;&gt;テキストコンポーネントの使用に関する一般的な規則」にあり&lt;/a&gt;&lt;em&gt;ます。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd86112155bd8ab808f845dfa0e7719361f3dc31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextComponents&lt;/code&gt; support the following drop modes:</source>
          <target state="translated">&lt;code&gt;JTextComponents&lt;/code&gt; は、次のドロップモードをサポートしています。</target>
        </trans-unit>
        <trans-unit id="249c5f2b33a773ceea4a522fc3384cbe691d233b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextField&lt;/code&gt; has a method to establish the string used as the command string for the action event that gets fired. The &lt;code&gt;java.awt.TextField&lt;/code&gt; used the text of the field as the command string for the &lt;code&gt;ActionEvent&lt;/code&gt;. &lt;code&gt;JTextField&lt;/code&gt; will use the command string set with the &lt;code&gt;setActionCommand&lt;/code&gt; method if not &lt;code&gt;null&lt;/code&gt;, otherwise it will use the text of the field as a compatibility with &lt;code&gt;java.awt.TextField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JTextField&lt;/code&gt; には、発生するアクションイベントのコマンド文字列として使用される文字列を確立するメソッドがあります。 &lt;code&gt;java.awt.TextField&lt;/code&gt; のはのためのコマンド文字列としてフィールドのテキストを使用 &lt;code&gt;ActionEvent&lt;/code&gt; 。 &lt;code&gt;JTextField&lt;/code&gt; は、 &lt;code&gt;null&lt;/code&gt; でない場合は &lt;code&gt;setActionCommand&lt;/code&gt; メソッドで設定されたコマンド文字列を使用します。それ以外の場合は、 &lt;code&gt;java.awt.TextField&lt;/code&gt; との互換性としてフィールドのテキストを使用します。</target>
        </trans-unit>
        <trans-unit id="93e9584291de7455790b0357847da0fc1f817f51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextField&lt;/code&gt; is a lightweight component that allows the editing of a single line of text.</source>
          <target state="translated">&lt;code&gt;JTextField&lt;/code&gt; は、1行のテキストの編集を可能にする軽量コンポーネントです。</target>
        </trans-unit>
        <trans-unit id="4a1fd03bab5db3521fa449bc489afcc01fcd4373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextField&lt;/code&gt; is a lightweight component that allows the editing of a single line of text. For information on and examples of using text fields, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;How to Use Text Fields&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;JTextField&lt;/code&gt; は、1行のテキストの編集を可能にする軽量コンポーネントです。テキストフィールドの使用例と使用例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/textfield.html&quot;&gt;テキストフィールドの使用方法を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="db2d5b2fc957016529f40c6da6e79efca4096132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTextField&lt;/code&gt; is intended to be source-compatible with &lt;code&gt;java.awt.TextField&lt;/code&gt; where it is reasonable to do so. This component has capabilities not found in the &lt;code&gt;java.awt.TextField&lt;/code&gt; class. The superclass should be consulted for additional capabilities.</source>
          <target state="translated">&lt;code&gt;JTextField&lt;/code&gt; は、 &lt;code&gt;java.awt.TextField&lt;/code&gt; とソース互換性があることを目的としています。このコンポーネントには、 &lt;code&gt;java.awt.TextField&lt;/code&gt; クラスにはない機能があります。追加機能については、スーパークラスを参照する必要があります。</target>
        </trans-unit>
        <trans-unit id="d2ce0cf272ba250797b53f3787838f87c19684f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JToggleButton&lt;/code&gt;, &lt;code&gt;JCheckBox&lt;/code&gt;, &lt;code&gt;JRadioButton&lt;/code&gt;, &lt;code&gt;JCheckBoxMenuItem&lt;/code&gt; and &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;JToggleButton&lt;/code&gt; 、 &lt;code&gt;JCheckBox&lt;/code&gt; 、 &lt;code&gt;JRadioButton&lt;/code&gt; 、 &lt;code&gt;JCheckBoxMenuItem&lt;/code&gt; 、および &lt;code&gt;JRadioButtonMenuItem&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a94ee21261936d748fb093ab1194f83ce8644c20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JToolBar&lt;/code&gt; provides a component that is useful for displaying commonly used &lt;code&gt;Action&lt;/code&gt;s or controls.</source>
          <target state="translated">&lt;code&gt;JToolBar&lt;/code&gt; は、一般的に使用される &lt;code&gt;Action&lt;/code&gt; またはコントロールを表示するのに役立つコンポーネントを提供します。</target>
        </trans-unit>
        <trans-unit id="f25c6d0f33277a31cc5cec0601adad51e336ea85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JToolBar&lt;/code&gt; provides a component that is useful for displaying commonly used &lt;code&gt;Action&lt;/code&gt;s or controls. For examples and information on using tool bars see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/toolbar.html&quot;&gt;How to Use Tool Bars&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JToolBar&lt;/code&gt; は、一般的に使用される &lt;code&gt;Action&lt;/code&gt; またはコントロールを表示するのに役立つコンポーネントを提供します。ツールバーの使用例と情報については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションにあるツールバーの&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/toolbar.html&quot;&gt;使用方法を&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="545f76a44333f3ce6627c792c6823f554ec44b63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTree&lt;/code&gt; and its related classes make extensive use of &lt;code&gt;TreePath&lt;/code&gt;s for identifying nodes in the &lt;code&gt;TreeModel&lt;/code&gt;. If a &lt;code&gt;TreeModel&lt;/code&gt; returns the same object, as compared by &lt;code&gt;equals&lt;/code&gt;, at two different indices under the same parent than the resulting &lt;code&gt;TreePath&lt;/code&gt; objects will be considered equal as well. Some implementations may assume that if two &lt;code&gt;TreePath&lt;/code&gt;s are equal, they identify the same node. If this condition is not met, painting problems and other oddities may result. In other words, if &lt;code&gt;getChild&lt;/code&gt; for a given parent returns the same Object (as determined by &lt;code&gt;equals&lt;/code&gt;) problems may result, and it is recommended you avoid doing this.</source>
          <target state="translated">&lt;code&gt;JTree&lt;/code&gt; とその関連クラスは、 &lt;code&gt;TreeModel&lt;/code&gt; 内のノードを識別するために &lt;code&gt;TreePath&lt;/code&gt; を広範囲に使用します。 &lt;code&gt;TreeModel&lt;/code&gt; が &lt;code&gt;equals&lt;/code&gt; と比較して同じオブジェクトを返す場合、同じ親の下にある2つの異なるインデックスで、結果の &lt;code&gt;TreePath&lt;/code&gt; オブジェクトも等しいと見なされます。一部の実装では、2つの &lt;code&gt;TreePath&lt;/code&gt; が等しい場合、それらは同じノードを識別すると想定する場合があります。この条件が満たされない場合、塗装の問題やその他の奇妙な結果が生じる可能性があります。つまり、特定の親の &lt;code&gt;getChild&lt;/code&gt; が同じオブジェクト（ &lt;code&gt;equals&lt;/code&gt; によって決定される）を返す場合、問題が発生する可能性があるため、これを回避することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5c513c289f58d0471f1eaef0e0451185c2d64100" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTree&lt;/code&gt; instance listening too.</source>
          <target state="translated">&lt;code&gt;JTree&lt;/code&gt; インスタンスもリッスンしています。</target>
        </trans-unit>
        <trans-unit id="1aba9a9e59002555242f73b4a8cda8061b293812" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JTree&lt;/code&gt; supports the following drop modes:</source>
          <target state="translated">&lt;code&gt;JTree&lt;/code&gt; は、次のドロップモードをサポートしています。</target>
        </trans-unit>
        <trans-unit id="707cf5ee063f62698d0be7a76353051f290d8776" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JobState&lt;/code&gt; is a printing attribute class, an enumeration, that identifies the current state of a print job.</source>
          <target state="translated">&lt;code&gt;JobState&lt;/code&gt; は、印刷ジョブの現在の状態を識別する列挙型の印刷属性クラスです。</target>
        </trans-unit>
        <trans-unit id="d5d6a5c8a568cb33231bb583a7be5eb643c6308f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JobState&lt;/code&gt; is a printing attribute class, an enumeration, that identifies the current state of a print job. Class &lt;code&gt;JobState&lt;/code&gt; defines standard job state values. A Print Service implementation only needs to report those job states which are appropriate for the particular implementation; it does not have to report every defined job state. The &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute augments the &lt;code&gt;JobState&lt;/code&gt; attribute to give more detailed information about the job in the given job state.</source>
          <target state="translated">&lt;code&gt;JobState&lt;/code&gt; は、印刷ジョブの現在の状態を識別する列挙型の印刷属性クラスです。クラス &lt;code&gt;JobState&lt;/code&gt; は、標準のジョブ状態値を定義します。印刷サービスの実装では、特定の実装に適したジョブの状態を報告するだけで済みます。定義されたすべてのジョブ状態を報告する必要はありません。&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; 属性の&lt;/a&gt;属性は、補強し &lt;code&gt;JobState&lt;/code&gt; が与えられたジョブの状態にあるジョブについてのより詳細な情報を提供する属性を。</target>
        </trans-unit>
        <trans-unit id="91518f1203fb584c25d36533968bb5bb1afa6652" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;July&lt;/code&gt;; &lt;code&gt;Jul&lt;/code&gt;; &lt;code&gt;07&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;July&lt;/code&gt; ; &lt;code&gt;Jul&lt;/code&gt; ; &lt;code&gt;07&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44cc6d7a6a6f2e0fe1dc06353c2890a74d802d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; type of then map keys</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; - &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;、マップキーの種類</target>
        </trans-unit>
        <trans-unit id="07fc0ca4437a126863a6f1173268bf388ad94d50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the &lt;code&gt;Map&lt;/code&gt;'s key type</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; - &lt;code&gt;Map&lt;/code&gt; の鍵タイプ</target>
        </trans-unit>
        <trans-unit id="52c513e3a95ba55a9158e6d9497540077cdfacb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the class of the map keys</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -マップキーのクラス</target>
        </trans-unit>
        <trans-unit id="9342a0ae454e755e09dcfcd765e885d49c896320" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the element type of the returned set</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -返されるセットの要素タイプ</target>
        </trans-unit>
        <trans-unit id="4b796ac99576adddcb26ba0d79aeb9f52baa9050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the key's type</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -キーのタイプ</target>
        </trans-unit>
        <trans-unit id="326d2bdfabb0c34b57b9174ca11e81b63731848a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the output type of the key mapping function</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -キーマッピング関数の出力タイプ</target>
        </trans-unit>
        <trans-unit id="e7460ccfe2e406676ace0a64c960bd17443b48e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the type of keys maintained by this map</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -このマップによって維持されるキーのタイプ</target>
        </trans-unit>
        <trans-unit id="b814f5cc3dc2d8322ab691f546272e3be800cc6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the type of the keys</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -キーのタイプ</target>
        </trans-unit>
        <trans-unit id="c311265dbddc5089d39ac2a0212516fbd115348a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - the type of the map keys</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -マップキーのタイプ</target>
        </trans-unit>
        <trans-unit id="9a186af7c485f74dd35835ddff394e6f821c3f31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;K&lt;/code&gt; - type of map keys</source>
          <target state="translated">&lt;code&gt;K&lt;/code&gt; -マップキーのタイプ</target>
        </trans-unit>
        <trans-unit id="b912d08b4cb540fbad74e69760a53f63a0912b18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KEY_PRESSED&lt;/code&gt; and &lt;code&gt;KEY_RELEASED&lt;/code&gt; events are not intended for reporting of character input. Therefore, the values returned by this method are guaranteed to be meaningful only for &lt;code&gt;KEY_TYPED&lt;/code&gt; events.</source>
          <target state="translated">&lt;code&gt;KEY_PRESSED&lt;/code&gt; と &lt;code&gt;KEY_RELEASED&lt;/code&gt; イベントは文字入力の報告のために意図されていません。したがって、このメソッドによって返される値は、 &lt;code&gt;KEY_TYPED&lt;/code&gt; イベントに対してのみ意味があることが保証されています。</target>
        </trans-unit>
        <trans-unit id="253cb144964913578f52b727b9d200ca37424dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyEvent.KEY_PRESSED&lt;/code&gt;, &lt;code&gt;KeyEvent.KEY_TYPED&lt;/code&gt;, or &lt;code&gt;KeyEvent.KEY_RELEASED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;KeyEvent.KEY_PRESSED&lt;/code&gt; 、 &lt;code&gt;KeyEvent.KEY_TYPED&lt;/code&gt; 、または &lt;code&gt;KeyEvent.KEY_RELEASED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3bcdc42d52710ffd469d36294eb5e4dccc14e6fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyInfo&lt;/code&gt; objects can also be marshalled to XML by invoking the &lt;a href=&quot;#marshal(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)&quot;&gt;&lt;code&gt;marshal&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;KeyInfo&lt;/code&gt; オブジェクトは、&lt;a href=&quot;#marshal(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)&quot;&gt; &lt;code&gt;marshal&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによってXMLにマーシャリングすることもできます。</target>
        </trans-unit>
        <trans-unit id="9facf2e0242425ccc01bccf4fb2737bae6062ad1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyInfoFactory&lt;/code&gt; implementations are registered and loaded using the &lt;a href=&quot;../../../../../../java.base/java/security/provider&quot;&gt;&lt;code&gt;Provider&lt;/code&gt;&lt;/a&gt; mechanism. For example, a service provider that supports the DOM mechanism would be specified in the &lt;code&gt;Provider&lt;/code&gt; subclass as:</source>
          <target state="translated">&lt;code&gt;KeyInfoFactory&lt;/code&gt; の実装は、&lt;a href=&quot;../../../../../../java.base/java/security/provider&quot;&gt; &lt;code&gt;Provider&lt;/code&gt; &lt;/a&gt;メカニズムを使用して登録およびロードされます。たとえば、DOMメカニズムをサポートするサービスプロバイダーは、 &lt;code&gt;Provider&lt;/code&gt; サブクラスで次のように指定されます。</target>
        </trans-unit>
        <trans-unit id="23d62b9ad68e06cba7bf1e4a1c5866c9b7220c50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyListener&lt;/code&gt; that are attached to the &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;KeyListener&lt;/code&gt; &lt;code&gt;JTable&lt;/code&gt; に接続されているKeyListener。</target>
        </trans-unit>
        <trans-unit id="31a46f8e065592007c532eb083fa0cbebb0b7cee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyManager&lt;/code&gt;s are created by either using a &lt;code&gt;KeyManagerFactory&lt;/code&gt;, or by implementing one of the &lt;code&gt;KeyManager&lt;/code&gt; subclasses.</source>
          <target state="translated">&lt;code&gt;KeyManager&lt;/code&gt; は、 &lt;code&gt;KeyManagerFactory&lt;/code&gt; を使用するか、 &lt;code&gt;KeyManager&lt;/code&gt; サブクラスの1つを実装することによって作成されます。</target>
        </trans-unit>
        <trans-unit id="f3ea9ba3304be11cff444bb5e929fefa7efef714" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;KeyManager&lt;/code&gt;s are responsible for managing the key material which is used to authenticate the local SSLSocket to its peer. If no key material is available, the socket will be unable to present authentication credentials.</source>
          <target state="translated">&lt;code&gt;KeyManager&lt;/code&gt; は、ローカルSSLSocketをピアに認証するために使用される鍵素材を管理します。キーマテリアルが利用できない場合、ソケットは認証資格情報を提示できません。</target>
        </trans-unit>
        <trans-unit id="90b936b8bdf424dc6fb197a7392c56332b718d38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LIGHT&lt;/code&gt; is used for the property &lt;code&gt;Tree.collapsedIcon&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LIGHT&lt;/code&gt; は、プロパティ &lt;code&gt;Tree.collapsedIcon&lt;/code&gt; に使用されます。</target>
        </trans-unit>
        <trans-unit id="e3174e8c9e822c80f9fb583f7f332b80eeb4b400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSInput&lt;/code&gt; objects belong to the application. The DOM implementation will never modify them (though it may make copies and modify the copies, if necessary).</source>
          <target state="translated">&lt;code&gt;LSInput&lt;/code&gt; オブジェクトはアプリケーションに属します。DOM実装はそれらを変更することはありません（ただし、必要に応じてコピーを作成し、コピーを変更する場合があります）。</target>
        </trans-unit>
        <trans-unit id="664aaeea2ca3a59c0693f642988bf423fe117b56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSOutput.encoding&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;LSOutput.encoding&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="30d4fb0b3b1c8dd2b8a90ee99a83d32d8faa9298" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSOutput&lt;/code&gt; objects belong to the application. The DOM implementation will never modify them (though it may make copies and modify the copies, if necessary).</source>
          <target state="translated">&lt;code&gt;LSOutput&lt;/code&gt; オブジェクトはアプリケーションに属します。DOM実装はそれらを変更することはありません（ただし、必要に応じてコピーを作成し、コピーを変更する場合があります）。</target>
        </trans-unit>
        <trans-unit id="d41359c88fd70ac492e585d8e251588b90b64e3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSParser&lt;/code&gt; provides an API for parsing XML and building the corresponding DOM document structure. A &lt;code&gt;LSParser&lt;/code&gt; instance can be obtained by invoking the &lt;code&gt;DOMImplementationLS.createLSParser()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;LSParser&lt;/code&gt; は、XMLを解析し、対応するDOMドキュメント構造を構築するためのAPIを提供します。 &lt;code&gt;LSParser&lt;/code&gt; インスタンスを呼び出すことによって得ることができる &lt;code&gt;DOMImplementationLS.createLSParser()&lt;/code&gt; メソッドを。</target>
        </trans-unit>
        <trans-unit id="a8f04b5acbb539ddb9c6081c40f613adc04830ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSParserFilter&lt;/code&gt;s provide applications the ability to examine nodes as they are being constructed while parsing.</source>
          <target state="translated">&lt;code&gt;LSParserFilter&lt;/code&gt; は、解析中にノードが構築されているときにノードを調べる機能をアプリケーションに提供します。</target>
        </trans-unit>
        <trans-unit id="3da36f7925cf63f6a47bf4d1542a0c5da40791c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSParserFilter&lt;/code&gt;s provide applications the ability to examine nodes as they are being constructed while parsing. As each node is examined, it may be modified or removed, or the entire parse may be terminated early.</source>
          <target state="translated">&lt;code&gt;LSParserFilter&lt;/code&gt; は、解析中にノードが構築されているときにノードを調べる機能をアプリケーションに提供します。各ノードが検査されるときに、ノードが変更または削除されるか、解析全体が早期に終了する場合があります。</target>
        </trans-unit>
        <trans-unit id="6724960f548208794f001d66bd8d40673d635654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSResourceResolver&lt;/code&gt; provides a way for applications to redirect references to external resources.</source>
          <target state="translated">&lt;code&gt;LSResourceResolver&lt;/code&gt; は、アプリケーションが参照を外部リソースにリダイレクトする方法を提供します。</target>
        </trans-unit>
        <trans-unit id="900760c626833d318beceffc058fd647ef15c085" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSSerializer&lt;/code&gt; accepts any node type for serialization. For nodes of type &lt;code&gt;Document&lt;/code&gt; or &lt;code&gt;Entity&lt;/code&gt;, well-formed XML will be created when possible (well-formedness is guaranteed if the document or entity comes from a parse operation and is unchanged since it was created). The serialized output for these node types is either as a XML document or an External XML Entity, respectively, and is acceptable input for an XML parser. For all other types of nodes the serialized form is implementation dependent.</source>
          <target state="translated">&lt;code&gt;LSSerializer&lt;/code&gt; は、シリアル化のために任意のノードタイプを受け入れます。タイプが &lt;code&gt;Document&lt;/code&gt; または &lt;code&gt;Entity&lt;/code&gt; のノードの場合、可能な場合は整形式のXMLが作成されます（ドキュメントまたはエンティティが解析操作から取得され、作成されてから変更されていない場合、整形式であることが保証されます）。これらのノードタイプのシリアル化された出力は、それぞれXMLドキュメントまたは外部XMLエンティティのいずれかであり、XMLパーサーの入力として受け入れられます。他のすべてのタイプのノードの場合、シリアル化された形式は実装に依存します。</target>
        </trans-unit>
        <trans-unit id="a7acee96b3e5a9c8f50f59ab39fe3ea11280aff8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSSerializerFilter&lt;/code&gt;s provide applications the ability to examine nodes as they are being serialized and decide what nodes should be serialized or not.</source>
          <target state="translated">&lt;code&gt;LSSerializerFilter&lt;/code&gt; は、シリアル化されているノードを調べて、どのノードをシリアル化するかを決定する機能をアプリケーションに提供します。</target>
        </trans-unit>
        <trans-unit id="2ad61db5c66abeafc9d06184ecb18aea19821ed9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LSSerializerFilter&lt;/code&gt;s provide applications the ability to examine nodes as they are being serialized and decide what nodes should be serialized or not. The &lt;code&gt;LSSerializerFilter&lt;/code&gt; interface is based on the &lt;code&gt;NodeFilter&lt;/code&gt; interface defined in [&lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOM Level 2 Traversal and Range&lt;/a&gt;] .</source>
          <target state="translated">&lt;code&gt;LSSerializerFilter&lt;/code&gt; は、シリアル化されているノードを調べて、どのノードをシリアル化するかを決定する機能をアプリケーションに提供します。 &lt;code&gt;LSSerializerFilter&lt;/code&gt; のインターフェースはに基づいて &lt;code&gt;NodeFilter&lt;/code&gt; 【で定義されたインタフェース&lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113&quot;&gt;DOMレベル2トラバーサルおよび範囲&lt;/a&gt;]。</target>
        </trans-unit>
        <trans-unit id="48c6a27663ab28f7c04836ac7c5e997c089d10b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LabelUI&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;LabelUI&lt;/code&gt; オブジェクト</target>
        </trans-unit>
        <trans-unit id="ee39e660515ded42a6fbda28547851471b1041ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LayoutStyle&lt;/code&gt; provides information about how to position components.</source>
          <target state="translated">&lt;code&gt;LayoutStyle&lt;/code&gt; は、コンポーネントの配置方法に関する情報を提供します。</target>
        </trans-unit>
        <trans-unit id="83028f700e447cb92db4328157f99769b597b9d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LayoutStyle&lt;/code&gt; provides information about how to position components. This class is primarily useful for visual tools and layout managers. Most developers will not need to use this class.</source>
          <target state="translated">&lt;code&gt;LayoutStyle&lt;/code&gt; は、コンポーネントの配置方法に関する情報を提供します。このクラスは、主にビジュアルツールとレイアウトマネージャーに役立ちます。ほとんどの開発者は、このクラスを使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="975a021496115d6781efed95e7ca1fa7bef79ee0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LazyInputMap&lt;/code&gt; will create a &lt;code&gt;InputMap&lt;/code&gt; in its &lt;code&gt;createValue&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;LazyInputMap&lt;/code&gt; は、 &lt;code&gt;createValue&lt;/code&gt; メソッドで &lt;code&gt;InputMap&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="2bd063a22a2bed8185d4bb68d4f90396d3ceb7d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LazyInputMap&lt;/code&gt; will create a &lt;code&gt;InputMap&lt;/code&gt; in its &lt;code&gt;createValue&lt;/code&gt; method. The bindings are passed in the constructor. The bindings are an array with the even number entries being string &lt;code&gt;KeyStrokes&lt;/code&gt; (eg &quot;alt SPACE&quot;) and the odd number entries being the value to use in the &lt;code&gt;InputMap&lt;/code&gt; (and the key in the &lt;code&gt;ActionMap&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;LazyInputMap&lt;/code&gt; は、 &lt;code&gt;createValue&lt;/code&gt; メソッドで &lt;code&gt;InputMap&lt;/code&gt; を作成します。バインディングはコンストラクターで渡されます。バインディングは、偶数のエントリが文字列 &lt;code&gt;KeyStrokes&lt;/code&gt; （たとえば、「alt SPACE」）であり、奇数のエントリが &lt;code&gt;InputMap&lt;/code&gt; （および &lt;code&gt;ActionMap&lt;/code&gt; のキー）で使用する値である配列です。</target>
        </trans-unit>
        <trans-unit id="9a519258100423707f0968c203607a1ce8a9aba7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LdapName&lt;/code&gt; will properly parse all valid names, but does not attempt to detect all possible violations when parsing invalid names. It is &quot;generous&quot; in accepting invalid names. The &quot;validity&quot; of a name is determined ultimately when it is supplied to an LDAP server, which may accept or reject the name based on factors such as its schema information and interoperability considerations.</source>
          <target state="translated">&lt;code&gt;LdapName&lt;/code&gt; はすべての有効な名前を適切に解析しますが、無効な名前を解析するときにすべての可能な違反を検出しようとはしません。無効な名前を受け入れることは「寛大」です。名前の「有効性」は、最終的にLDAPサーバーに提供されたときに決定されます。LDAPサーバーは、スキーマ情報や相互運用性の考慮事項などの要因に基づいて名前を受け入れるか拒否するかを決定します。</target>
        </trans-unit>
        <trans-unit id="75c16543fa6d774a575de4f098eb2fb1b7caf5cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LineBreakMeasurer&lt;/code&gt; implements the most commonly used line-breaking policy: Every word that fits within the wrapping width is placed on the line. If the first word does not fit, then all of the characters that fit within the wrapping width are placed on the line. At least one character is placed on each line.</source>
          <target state="translated">&lt;code&gt;LineBreakMeasurer&lt;/code&gt; は、最も一般的に使用される改行ポリシーを実装します。折り返し幅内に収まるすべての単語が行に配置されます。最初の単語が収まらない場合は、折り返し幅に収まるすべての文字が行に配置されます。各行に少なくとも1文字が配置されます。</target>
        </trans-unit>
        <trans-unit id="15fa6f2b1cfa84a440d7ce92b496498dc4c85afa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LineBreakMeasurer&lt;/code&gt; is constructed with an iterator over styled text. The iterator's range should be a single paragraph in the text. &lt;code&gt;LineBreakMeasurer&lt;/code&gt; maintains a position in the text for the start of the next text segment. Initially, this position is the start of text. Paragraphs are assigned an overall direction (either left-to-right or right-to-left) according to the bidirectional formatting rules. All segments obtained from a paragraph have the same direction as the paragraph.</source>
          <target state="translated">&lt;code&gt;LineBreakMeasurer&lt;/code&gt; は、スタイル設定されたテキストに対するイテレータを使用して構築されます。イテレータの範囲は、テキスト内の1つの段落である必要があります。 &lt;code&gt;LineBreakMeasurer&lt;/code&gt; は、次のテキストセグメントの開始のためにテキスト内の位置を維持します。最初は、この位置がテキストの始まりです。段落には、双方向の書式設定ルールに従って、全体的な方向（左から右または右から左）が割り当てられます。段落から取得されたすべてのセグメントは、段落と同じ方向を持ちます。</target>
        </trans-unit>
        <trans-unit id="f586310c053ffa95ccc0b35ac9d4a247d8cbddab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;List&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;List&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0367347003be39d8a7fbfcb37b6e968265cdc4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;List&amp;lt;? extends AnnotationValue&amp;gt;&lt;/code&gt; (representing the elements, in declared order, if the value is an array)</source>
          <target state="translated">&lt;code&gt;List&amp;lt;? extends AnnotationValue&amp;gt;&lt;/code&gt; （値が配列の場合、宣言された順序で要素を表します）</target>
        </trans-unit>
        <trans-unit id="957e21563e2786d4b55037aefd935e8a6999a397" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListDataListener&lt;/code&gt; that attached to &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ListDataListener&lt;/code&gt; にアタッチされた &lt;code&gt;JList&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca656788abf2eef40b1501dbe90f5693b06e3bd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListResourceBundle&lt;/code&gt; is an abstract subclass of &lt;code&gt;ResourceBundle&lt;/code&gt; that manages resources for a locale in a convenient and easy to use list.</source>
          <target state="translated">&lt;code&gt;ListResourceBundle&lt;/code&gt; は、便利で使いやすいリストでロケールの &lt;code&gt;ResourceBundle&lt;/code&gt; を管理するResourceBundleの抽象サブクラスです。</target>
        </trans-unit>
        <trans-unit id="a6a9a9d27e1eede167eb175cc65fa7393ffafa85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListResourceBundle&lt;/code&gt; is an abstract subclass of &lt;code&gt;ResourceBundle&lt;/code&gt; that manages resources for a locale in a convenient and easy to use list. See &lt;code&gt;ResourceBundle&lt;/code&gt; for more information about resource bundles in general.</source>
          <target state="translated">&lt;code&gt;ListResourceBundle&lt;/code&gt; は、便利で使いやすいリストでロケールの &lt;code&gt;ResourceBundle&lt;/code&gt; を管理するResourceBundleの抽象サブクラスです。一般的なリソースバンドルの詳細については、 &lt;code&gt;ResourceBundle&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="7401235292d816014a85119baff0346ec67ae456" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionListener&lt;/code&gt; that attached to &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ListSelectionListener&lt;/code&gt; &lt;code&gt;JList&lt;/code&gt; にアタッチされたListSelectionListener。</target>
        </trans-unit>
        <trans-unit id="dba22fc604261a1babc290c09524d08b9cc705f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionModel.MULTIPLE_INTERVAL_SELECTION&lt;/code&gt; - In this mode, there's no restriction on what can be selected.</source>
          <target state="translated">&lt;code&gt;ListSelectionModel.MULTIPLE_INTERVAL_SELECTION&lt;/code&gt; -このモードでは、何を選択できるかについての制限はありません。</target>
        </trans-unit>
        <trans-unit id="1eb84dd12d67adca7c254290bda202be1163effb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionModel.MULTIPLE_INTERVAL_SELECTION&lt;/code&gt; - In this mode, there's no restriction on what can be selected. This mode is the default.</source>
          <target state="translated">&lt;code&gt;ListSelectionModel.MULTIPLE_INTERVAL_SELECTION&lt;/code&gt; -このモードでは、何を選択できるかについての制限はありません。このモードがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="0ceb767d70cf5d4533eb5a18135179abbf98c126" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionModel.SINGLE_INTERVAL_SELECTION&lt;/code&gt; - Only one contiguous interval can be selected at a time. In this mode, &lt;code&gt;addSelectionInterval&lt;/code&gt; behaves like &lt;code&gt;setSelectionInterval&lt;/code&gt; (replacing the current selection), unless the given interval is immediately adjacent to or overlaps the existing selection, and can therefore be used to grow it.</source>
          <target state="translated">&lt;code&gt;ListSelectionModel.SINGLE_INTERVAL_SELECTION&lt;/code&gt; -一度に選択できる連続する間隔は1つだけです。このモードでは、 &lt;code&gt;addSelectionInterval&lt;/code&gt; は &lt;code&gt;setSelectionInterval&lt;/code&gt; （現在の選択を置き換える）のように動作します。ただし、指定された間隔が既存の選択に直接隣接しているか重複している場合を除き、これを使用して選択を拡大できます。</target>
        </trans-unit>
        <trans-unit id="d691b6597f6d0de647fe7ac0aead6854f9542767" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionModel.SINGLE_INTERVAL_SELECTION&lt;/code&gt; - Only one contiguous interval can be selected at a time. In this mode, &lt;code&gt;addSelectionInterval&lt;/code&gt; behaves like &lt;code&gt;setSelectionInterval&lt;/code&gt; (replacing the current selection}, unless the given interval is immediately adjacent to or overlaps the existing selection, and can be used to grow the selection.</source>
          <target state="translated">&lt;code&gt;ListSelectionModel.SINGLE_INTERVAL_SELECTION&lt;/code&gt; -一度に選択できる連続する間隔は1つだけです。このモードでは、 &lt;code&gt;addSelectionInterval&lt;/code&gt; は &lt;code&gt;setSelectionInterval&lt;/code&gt; （現在の選択を置き換える}のように動作します。ただし、指定された間隔が既存の選択に直接隣接しているか重複している場合を除き、選択を拡大するために使用できます。</target>
        </trans-unit>
        <trans-unit id="17fd096a7fe71d81552943c7156afc9c76feda47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListSelectionModel.SINGLE_SELECTION&lt;/code&gt; - Only one list index can be selected at a time. In this mode, &lt;code&gt;setSelectionInterval&lt;/code&gt; and &lt;code&gt;addSelectionInterval&lt;/code&gt; are equivalent, both replacing the current selection with the index represented by the second argument (the &quot;lead&quot;).</source>
          <target state="translated">&lt;code&gt;ListSelectionModel.SINGLE_SELECTION&lt;/code&gt; -一度に選択できるリストインデックスは1つだけです。このモードでは、 &lt;code&gt;setSelectionInterval&lt;/code&gt; と &lt;code&gt;addSelectionInterval&lt;/code&gt; は同等であり、どちらも現在の選択を2番目の引数（「リード」）で表されるインデックスに置き換えます。</target>
        </trans-unit>
        <trans-unit id="bd6cc2bf16660d492a4b7ea7dcb0e4a0596a929b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoaderHandler&lt;/code&gt; is an interface used internally by the RMI runtime in previous implementation versions. It should never be accessed by application code.</source>
          <target state="translated">&lt;code&gt;LoaderHandler&lt;/code&gt; は、以前の実装バージョンのRMIランタイムによって内部的に使用されていたインターフェースです。アプリケーションコードからアクセスしないでください。</target>
        </trans-unit>
        <trans-unit id="0ed15ee2ee38bd494d6a4a680be1ddb607b94b5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDate&lt;/code&gt; implements this interface as it represents a set of fields that are contiguous from days to forever and require no external information to determine the validity of each date. It is therefore able to implement plus/minus correctly.</source>
          <target state="translated">&lt;code&gt;LocalDate&lt;/code&gt; は、このインターフェイスを実装します。これは、日から永久に連続するフィールドのセットを表し、各日付の有効性を判断するために外部情報を必要としないためです。したがって、プラス/マイナスを正しく実装できます。</target>
        </trans-unit>
        <trans-unit id="b164d30df690ada780a7e4a4e896d59973145ee1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDate&lt;/code&gt; is an immutable date-time object that represents a date, often viewed as year-month-day. Other date fields, such as day-of-year, day-of-week and week-of-year, can also be accessed. For example, the value &quot;2nd October 2007&quot; can be stored in a &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LocalDate&lt;/code&gt; は、日付を表す不変の日時オブジェクトであり、年月日として表示されることがよくあります。年の日、曜日、年の週などの他の日付フィールドにもアクセスできます。たとえば、「2007年10月2日」という値は &lt;code&gt;LocalDate&lt;/code&gt; に格納できます。</target>
        </trans-unit>
        <trans-unit id="60170d11336300553c83286800fe3fe502330942" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDate&lt;/code&gt; returns &lt;code&gt;DAYS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LocalDate&lt;/code&gt; は &lt;code&gt;DAYS&lt;/code&gt; を返します</target>
        </trans-unit>
        <trans-unit id="c81d531e769bd9ae681a95232e11ab8654e6e3c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDate&lt;/code&gt; returns &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LocalDate&lt;/code&gt; リターン &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5320f46bcbe47a3a9fa891e4ec41a81c90424fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDate&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;LocalDate&lt;/code&gt; はnullを返します</target>
        </trans-unit>
        <trans-unit id="a419ab33f8557e8bea7860ae514e2d9c02811fad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDateTime&lt;/code&gt; is an immutable date-time object that represents a date-time, often viewed as year-month-day-hour-minute-second. Other date and time fields, such as day-of-year, day-of-week and week-of-year, can also be accessed. Time is represented to nanosecond precision. For example, the value &quot;2nd October 2007 at 13:45.30.123456789&quot; can be stored in a &lt;code&gt;LocalDateTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; は、日時を表す不変の日時オブジェクトであり、多くの場合、年、月、日、時、分、秒と表示されます。日、週、週などのその他の日付と時刻フィールドにもアクセスできます。時間はナノ秒の精度で表されます。たとえば、値が「第2回10月13日で2007：45.30.123456789は」に保存することができる &lt;code&gt;LocalDateTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3efcb9931bf615bb0e029072548769f4931553d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDateTime&lt;/code&gt; returns &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; のリターン &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca3bc7a0598ce7093020620768b609a00bf2584a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDateTime&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; は返し &lt;code&gt;NANOS&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="5c083245c0527d4043ca70dd4876067710b6c7ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDateTime&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; はnullを返します</target>
        </trans-unit>
        <trans-unit id="e47ab7cc24703b37a4970dcf8e824a8ddcf6943d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalDateTime&lt;/code&gt; uses a precision of nanoseconds, whereas this class uses a precision of milliseconds. The conversion will truncate any excess precision information as though the amount in nanoseconds was subject to integer division by one million.</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; はナノ秒の精度を使用しますが、このクラスはミリ秒の精度を使用します。変換により、ナノ秒単位の量が100万で整数除算されたかのように、余分な精度の情報が切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="c2178509e97c86a408c6cc9dcdc43de58b9784f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalTime&lt;/code&gt; implements this interface as it represents a set of fields that are contiguous from nanos to within days and require no external information to determine validity. It is able to implement plus/minus correctly, by wrapping around the day.</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; はこのインターフェースを実装します。これは、nanoから数日以内に隣接し、有効性を判断するための外部情報を必要としない一連のフィールドを表すためです。1日をラップすることで、プラス/マイナスを正しく実装できます。</target>
        </trans-unit>
        <trans-unit id="0b1ff1a7e083726a18ec2548b2ac82070642d37a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalTime&lt;/code&gt; is an immutable date-time object that represents a time, often viewed as hour-minute-second. Time is represented to nanosecond precision. For example, the value &quot;13:45.30.123456789&quot; can be stored in a &lt;code&gt;LocalTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; は、時間を表す不変の日時オブジェクトであり、多くの場合、時分秒として表示されます。時間はナノ秒の精度で表されます。例えば、値「13：45.30.123456789は」に格納することができる &lt;code&gt;LocalTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4831478f50a9606abb9443e1d405e0f064c0d78b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalTime&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; は返し &lt;code&gt;NANOS&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="8474d3a63814f4d7570b6a0ff081a32a34d4ed9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalTime&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; はnullを返します</target>
        </trans-unit>
        <trans-unit id="621730de2bb2243f31b0beaf83d3aed58b728952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalTime&lt;/code&gt; returns null (does not represent a date)</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; はnullを返します（日付を表しません）</target>
        </trans-unit>
        <trans-unit id="e31c54ebc280fc6d9da2ac5b2c982b9624bf1fca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Locale(&quot;no&quot;, &quot;NO&quot;, &quot;POSIX&quot;)&lt;/code&gt; would generate the same list except that locales with &quot;no&quot; would appear before the corresponding locales with &quot;nb&quot;.</source>
          <target state="translated">&lt;code&gt;Locale(&quot;no&quot;, &quot;NO&quot;, &quot;POSIX&quot;)&lt;/code&gt; は同じリストを生成しますが、 &quot;no&quot;のロケールは &quot;nb&quot;の対応するロケールの前に表示されます。</target>
        </trans-unit>
        <trans-unit id="a6814649d068191641c350a4ac7c9314232b04f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocateRegistry&lt;/code&gt; is used to obtain a reference to a bootstrap remote object registry on a particular host (including the local host), or to create a remote object registry that accepts calls on a specific port.</source>
          <target state="translated">&lt;code&gt;LocateRegistry&lt;/code&gt; は、特定のホスト（ローカルホストを含​​む）上のブートストラップリモートオブジェクトレジストリへの参照を取得するため、または特定のポートでの呼び出しを受け入れるリモートオブジェクトレジストリを作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="8d8e92f7df41403e727bd170263d9f91d8697676" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lock&lt;/code&gt; implementations provide additional functionality over the use of &lt;code&gt;synchronized&lt;/code&gt; methods and statements by providing a non-blocking attempt to acquire a lock (&lt;a href=&quot;#tryLock()&quot;&gt;&lt;code&gt;tryLock()&lt;/code&gt;&lt;/a&gt;), an attempt to acquire the lock that can be interrupted (&lt;a href=&quot;#lockInterruptibly()&quot;&gt;&lt;code&gt;lockInterruptibly()&lt;/code&gt;&lt;/a&gt;, and an attempt to acquire the lock that can timeout (&lt;a href=&quot;#tryLock(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;tryLock(long, TimeUnit)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;Lock&lt;/code&gt; 実装は、ロックを取得するための非ブロッキング試行（&lt;a href=&quot;#tryLock()&quot;&gt; &lt;code&gt;tryLock()&lt;/code&gt; &lt;/a&gt;）、中断可能なロックを取得するための試行（&lt;a href=&quot;#lockInterruptibly()&quot;&gt; &lt;code&gt;lockInterruptibly()&lt;/code&gt; )&lt;/a&gt;、および取得の試行を提供することにより、 &lt;code&gt;synchronized&lt;/code&gt; メソッドとステートメントの使用に加えて追加機能を提供します。タイムアウトできるロック（&lt;a href=&quot;#tryLock(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;tryLock(long, TimeUnit)&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c33cf344eddf551fcccfa7a6fff8450bd67f550b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lock&lt;/code&gt; implementations provide additional functionality over the use of &lt;code&gt;synchronized&lt;/code&gt; methods and statements by providing a non-blocking attempt to acquire a lock (&lt;a href=&quot;lock#tryLock--&quot;&gt;&lt;code&gt;tryLock()&lt;/code&gt;&lt;/a&gt;), an attempt to acquire the lock that can be interrupted (&lt;a href=&quot;lock#lockInterruptibly--&quot;&gt;&lt;code&gt;lockInterruptibly()&lt;/code&gt;&lt;/a&gt;, and an attempt to acquire the lock that can timeout (&lt;a href=&quot;lock#tryLock-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;tryLock(long, TimeUnit)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;Lock&lt;/code&gt; 実装は、ロックを取得する非ブロッキングの試行（&lt;a href=&quot;lock#tryLock--&quot;&gt; &lt;code&gt;tryLock()&lt;/code&gt; &lt;/a&gt;）、中断できるロックの取得の試行（&lt;a href=&quot;lock#lockInterruptibly--&quot;&gt; &lt;code&gt;lockInterruptibly()&lt;/code&gt; &lt;/a&gt;、および取得の試行を提供することにより、 &lt;code&gt;synchronized&lt;/code&gt; メソッドとステートメントの使用に追加の機能を提供しますタイムアウトする可能性のあるロック（&lt;a href=&quot;lock#tryLock-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;tryLock(long, TimeUnit)&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5673096caf43b509458ac48821caba1c37ff2d0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lock&lt;/code&gt; implementations provide more extensive locking operations than can be obtained using &lt;code&gt;synchronized&lt;/code&gt; methods and statements.</source>
          <target state="translated">&lt;code&gt;Lock&lt;/code&gt; 実装は、 &lt;code&gt;synchronized&lt;/code&gt; メソッドとステートメントを使用して取得できるよりも広範なロック操作を提供します。</target>
        </trans-unit>
        <trans-unit id="c77ac305aad6dbe832b47a89e75ccb3bc94d9d14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Lock&lt;/code&gt; implementations provide more extensive locking operations than can be obtained using &lt;code&gt;synchronized&lt;/code&gt; methods and statements. They allow more flexible structuring, may have quite different properties, and may support multiple associated &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;code&gt;Lock&lt;/code&gt; 実装は、 &lt;code&gt;synchronized&lt;/code&gt; メソッドとステートメントを使用して取得できるよりも広範なロック操作を提供します。それらはより柔軟な構造化を可能にし、まったく異なるプロパティを持ち、複数の関連する&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;オブジェクトをサポートするかもしれません。</target>
        </trans-unit>
        <trans-unit id="08a19829fa13ac8eeb1d4a6736c0ebad77e95bd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LockInfo&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; as specified in the &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;LockInfo&lt;/code&gt; は、&lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt;メソッドで指定された&lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; に&lt;/a&gt;マップされます。</target>
        </trans-unit>
        <trans-unit id="d3d29d3664efbeba95a5c2c7b8e16d15e3405fcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LockInfo&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; as specified in the &lt;a href=&quot;lockinfo#from-javax.management.openmbean.CompositeData-&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;LockInfo&lt;/code&gt; は、&lt;a href=&quot;lockinfo#from-javax.management.openmbean.CompositeData-&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt;メソッドで指定された&lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; に&lt;/a&gt;マップされます。</target>
        </trans-unit>
        <trans-unit id="c29857290d6c7476b2ee7ba595096c91939db848" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LockInfo&lt;/code&gt; of an object for which the thread is blocked waiting if any; &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;LockInfo&lt;/code&gt; スレッドがブロックされているオブジェクトのLockInfo（存在する場合）。それ以外の場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb91e6cd1754ca35d21c20ae401cfb45358a347a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LogRecords&lt;/code&gt; are published to a given &lt;code&gt;java.io.OutputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LogRecords&lt;/code&gt; は、指定された &lt;code&gt;java.io.OutputStream&lt;/code&gt; に公開されます。</target>
        </trans-unit>
        <trans-unit id="6b9d32f93c9de2f3bebb3a15d07b0ed263c1da50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LogRecords&lt;/code&gt; are published to a network stream connection. By default the &lt;code&gt;XMLFormatter&lt;/code&gt; class is used for formatting.</source>
          <target state="translated">&lt;code&gt;LogRecords&lt;/code&gt; はネットワークストリーム接続に公開されます。デフォルトでは、 &lt;code&gt;XMLFormatter&lt;/code&gt; クラスがフォーマットに使用されます。</target>
        </trans-unit>
        <trans-unit id="feb0884875afa29bf98a02930fa7b49fbb9c52f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LogStream&lt;/code&gt; provides a mechanism for logging errors that are of possible interest to those monitoring a system.</source>
          <target state="translated">&lt;code&gt;LogStream&lt;/code&gt; は、システムを監視しているユーザーが関心を持つ可能性のあるエラーをログに記録するためのメカニズムを提供します。</target>
        </trans-unit>
        <trans-unit id="b994775ffa12a3bcd16f3afcd3037edea64983e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoggingMXBean&lt;/code&gt; is no longer a &lt;a href=&quot;../../../../java.management/java/lang/management/platformmanagedobject&quot;&gt;&lt;code&gt;platform MXBean&lt;/code&gt;&lt;/a&gt; and is replaced with &lt;a href=&quot;../../../../java.management/java/lang/management/platformloggingmxbean&quot;&gt;&lt;code&gt;PlatformLoggingMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;LoggingMXBean&lt;/code&gt; は&lt;a href=&quot;../../../../java.management/java/lang/management/platformmanagedobject&quot;&gt; &lt;code&gt;platform MXBean&lt;/code&gt; &lt;/a&gt;はなくなり、&lt;a href=&quot;../../../../java.management/java/lang/management/platformloggingmxbean&quot;&gt; &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; に&lt;/a&gt;置き換えられました。</target>
        </trans-unit>
        <trans-unit id="0fa38de80a015e11b4309d61ef002e7cc06af7c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoggingMXBean&lt;/code&gt; is no longer a &lt;a href=&quot;../../../../java.management/java/lang/management/platformmanagedobject&quot;&gt;&lt;code&gt;platform MXBean&lt;/code&gt;&lt;/a&gt; and is replaced with &lt;a href=&quot;../../../../java.management/java/lang/management/platformloggingmxbean&quot;&gt;&lt;code&gt;PlatformLoggingMXBean&lt;/code&gt;&lt;/a&gt;. It will not register in the platform &lt;code&gt;MBeanServer&lt;/code&gt;. Use &lt;code&gt;ManagementFactory.getPlatformMXBean(PlatformLoggingMXBean.class)&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;LoggingMXBean&lt;/code&gt; は&lt;a href=&quot;../../../../java.management/java/lang/management/platformmanagedobject&quot;&gt; &lt;code&gt;platform MXBean&lt;/code&gt; &lt;/a&gt;はなくなり、&lt;a href=&quot;../../../../java.management/java/lang/management/platformloggingmxbean&quot;&gt; &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; に&lt;/a&gt;置き換えられました。プラットフォーム &lt;code&gt;MBeanServer&lt;/code&gt; には登録されません。代わりに、 &lt;code&gt;ManagementFactory.getPlatformMXBean(PlatformLoggingMXBean.class)&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="bafc9d5d2b42fcd6cc057a7201f7806f1bed16df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoginModule&lt;/code&gt; describes the interface implemented by authentication technology providers.</source>
          <target state="translated">&lt;code&gt;LoginModule&lt;/code&gt; は、認証技術プロバイダーによって実装されるインターフェースを記述します。</target>
        </trans-unit>
        <trans-unit id="33dc38c10d3809b30c11d4aac67a4f11cdba26b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoginModule&lt;/code&gt; describes the interface implemented by authentication technology providers. LoginModules are plugged in under applications to provide a particular type of authentication.</source>
          <target state="translated">&lt;code&gt;LoginModule&lt;/code&gt; は、認証技術プロバイダーによって実装されるインターフェースを記述します。LoginModuleはアプリケーションの下にプラグインされ、特定のタイプの認証を提供します。</target>
        </trans-unit>
        <trans-unit id="f866ed1761767576e0395095240c4a27b8e02380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoginModule&lt;/code&gt; is configured and succeeds, then only the</source>
          <target state="translated">&lt;code&gt;LoginModule&lt;/code&gt; が構成されて成功した場合は、</target>
        </trans-unit>
        <trans-unit id="aa876cf2d06335f653a7c76c2d3df0cf4cd70552" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoginModule&lt;/code&gt; must succeed.</source>
          <target state="translated">&lt;code&gt;LoginModule&lt;/code&gt; は成功する必要があります。</target>
        </trans-unit>
        <trans-unit id="b4fac527fa58329a3ffd016f3f81f59cc95cefe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoginModule&lt;/code&gt; need to have succeeded for the overall authentication to succeed. If no</source>
          <target state="translated">&lt;code&gt;LoginModule&lt;/code&gt; 全体が成功するには、LoginModuleが成功している必要があります。いいえの場合</target>
        </trans-unit>
        <trans-unit id="6ee9cc4d98d18b2cfc904839ca2abf435888e29f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Long(0)&lt;/code&gt; if &lt;code&gt;isParseBigDecimal()&lt;/code&gt; is false and &lt;code&gt;isParseIntegerOnly()&lt;/code&gt; is true,</source>
          <target state="translated">&lt;code&gt;Long(0)&lt;/code&gt; 場合 &lt;code&gt;isParseBigDecimal()&lt;/code&gt; は偽であり、 &lt;code&gt;isParseIntegerOnly()&lt;/code&gt; が真です、</target>
        </trans-unit>
        <trans-unit id="12306d267038cb4cda55bb56e12d8917381bd5f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LongStream.iterate&lt;/code&gt; should produce the same sequence of elements as produced by the corresponding for-loop:</source>
          <target state="translated">&lt;code&gt;LongStream.iterate&lt;/code&gt; は、対応するforループによって生成されるものと同じ要素のシーケンスを生成する必要があります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
