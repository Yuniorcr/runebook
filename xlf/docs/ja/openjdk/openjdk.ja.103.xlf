<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="3b3629e1c7a434db3fa94e4624595c63c91c3763" translate="yes" xml:space="preserve">
          <source>If the lock is held by another thread then the current thread becomes disabled for thread scheduling purposes and lies dormant until one of three things happens:</source>
          <target state="translated">ロックが他のスレッドによって保持されている場合、現在のスレッドはスレッドスケジューリングのために無効化され、3つのうちの1つが起こるまで休止状態になります。</target>
        </trans-unit>
        <trans-unit id="bc3fb57c41848bc377b297ddabc5e3ff9216fa1a" translate="yes" xml:space="preserve">
          <source>If the lock is held by another thread then the current thread becomes disabled for thread scheduling purposes and lies dormant until one of two things happens:</source>
          <target state="translated">ロックが他のスレッドによって保持されている場合、現在のスレッドはスレッドスケジューリングのために無効化され、次の2つのいずれかが起こるまで休止状態になります。</target>
        </trans-unit>
        <trans-unit id="9a8c566c06708381b95a076b6d0a7ff9c3dd5f9a" translate="yes" xml:space="preserve">
          <source>If the lock is held by another thread then the current thread becomes disabled for thread scheduling purposes and lies dormant until the lock has been acquired, at which time the lock hold count is set to one.</source>
          <target state="translated">ロックが他のスレッドによって保持されている場合、現在のスレッドはスレッドスケジューリングのために無効になり、ロックが取得されるまで休止状態になります。</target>
        </trans-unit>
        <trans-unit id="d853278a5b45d2ebee3420faecb6ce65095ece12" translate="yes" xml:space="preserve">
          <source>If the lock is held by another thread then the current thread becomes disabled for thread scheduling purposes and lies dormant until the write lock has been acquired, at which time the write lock hold count is set to one.</source>
          <target state="translated">ロックが他のスレッドに保持されている場合、現在のスレッドはスレッドスケジューリングのために無効になり、書き込みロックが取得されるまで休止状態になります。</target>
        </trans-unit>
        <trans-unit id="918d784e15001f2097233989116a220695ba3605" translate="yes" xml:space="preserve">
          <source>If the lock is held by another thread then this method will return immediately with the value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ロックが別のスレッドによって保持されている場合、このメソッドは値 &lt;code&gt;false&lt;/code&gt; ですぐに戻ります。</target>
        </trans-unit>
        <trans-unit id="85233bd93c41bf81d5bd16d44009dd4101f01d92" translate="yes" xml:space="preserve">
          <source>If the lock is not available then the current thread becomes disabled for thread scheduling purposes and lies dormant until one of two things happens:</source>
          <target state="translated">ロックが利用できない場合、現在のスレッドはスレッドスケジューリングのために無効化され、次の2つのいずれかが起こるまで休止状態になります。</target>
        </trans-unit>
        <trans-unit id="2fcde55af63c37dc1d170326de90648dbad927ec" translate="yes" xml:space="preserve">
          <source>If the lock is not available then the current thread becomes disabled for thread scheduling purposes and lies dormant until the lock has been acquired.</source>
          <target state="translated">ロックが利用できない場合、現在のスレッドはスレッドスケジューリングのために無効化され、ロックが取得されるまで休止状態になります。</target>
        </trans-unit>
        <trans-unit id="98452bdc04ba24a75162b80592faf24a66256700" translate="yes" xml:space="preserve">
          <source>If the lock state matches the given stamp then, atomically, if the stamp represents holding a lock, releases it and returns an observation stamp.</source>
          <target state="translated">ロックの状態が与えられたスタンプと一致した場合、そのスタンプがロックを保持していることを表すものであれば、原子的にロックを解放し、観測スタンプを返します。</target>
        </trans-unit>
        <trans-unit id="9531444c267d5feba915ddbb6e8e98d082819147" translate="yes" xml:space="preserve">
          <source>If the lock state matches the given stamp then, atomically, if the stamp represents holding a lock, releases it and returns an observation stamp. Or, if an optimistic read, returns it if validated. This method returns zero in all other cases, and so may be useful as a form of &quot;tryUnlock&quot;.</source>
          <target state="translated">ロックの状態が与えられたスタンプと一致した場合、そのスタンプがロックを保持していることを表していれば、アトミックにロックを解除して観測スタンプを返します。あるいは、楽観的な読み込みであれば、検証済みであればそれを返します。このメソッドは、それ以外の場合はゼロを返すので、&quot;tryUnlock&quot; の一形態として便利です。</target>
        </trans-unit>
        <trans-unit id="a09e194cce7b274be7295eeba5f7cce4ea171773" translate="yes" xml:space="preserve">
          <source>If the lock state matches the given stamp then, if the stamp represents holding a lock, releases it and returns an observation stamp. Or, if an optimistic read, returns it if validated. This method returns zero in all other cases, and so may be useful as a form of &quot;tryUnlock&quot;.</source>
          <target state="translated">ロックの状態が与えられたスタンプと一致した場合、そのスタンプがロックを保持していることを表している場合、ロックを解除して観測スタンプを返します。あるいは、楽観的な読み込みであれば、検証済みであればそれを返します。このメソッドは、それ以外の場合はすべてゼロを返すので、&quot;tryUnlock&quot; の形式として便利です。</target>
        </trans-unit>
        <trans-unit id="c02dbead9b54aba8193788d721d9f35fe265e8ac" translate="yes" xml:space="preserve">
          <source>If the lock state matches the given stamp, atomically performs one of the following actions.</source>
          <target state="translated">ロック状態が指定されたスタンプと一致した場合、以下のいずれかのアクションをアトミックに実行します。</target>
        </trans-unit>
        <trans-unit id="c68f8e544ee0dc6483d80e98a4e234377462da50" translate="yes" xml:space="preserve">
          <source>If the lock state matches the given stamp, atomically performs one of the following actions. If the stamp represents holding a write lock, releases it and obtains a read lock. Or, if a read lock, returns it. Or, if an optimistic read, acquires a read lock and returns a read stamp only if immediately available. This method returns zero in all other cases.</source>
          <target state="translated">ロック状態が指定されたスタンプと一致した場合、以下のいずれかのアクションをアトミックに実行します。スタンプが書き込みロックを保持していることを表している場合は、それを解除して読み出しロックを取得します。または、リードロックを保持している場合は、それを返す。または、楽観的な読み取りの場合は、読み取りロックを取得し、すぐに利用可能な場合にのみ読み取りスタンプを返します。このメソッドは、それ以外の場合はすべてゼロを返します。</target>
        </trans-unit>
        <trans-unit id="a4406ed634a16a7a2fc6a312ac7fcd3088591c18" translate="yes" xml:space="preserve">
          <source>If the lock state matches the given stamp, atomically performs one of the following actions. If the stamp represents holding a write lock, returns it. Or, if a read lock, if the write lock is available, releases the read lock and returns a write stamp. Or, if an optimistic read, returns a write stamp only if immediately available. This method returns zero in all other cases.</source>
          <target state="translated">ロック状態が指定されたスタンプと一致した場合、以下のアクションのいずれかをアトミックに実行します。スタンプが書き込みロックを保持していることを表している場合は、それを返す。または、リードロックの場合、書き込みロックが利用可能であれば、リードロックを解放して書き込みスタンプを返す。または、楽観的な読み取りの場合は、すぐに利用可能な場合にのみ書き込みスタンプを返します。このメソッドは、それ以外のすべての場合にゼロを返します。</target>
        </trans-unit>
        <trans-unit id="eefa68914d354c4eea9a7f9d2e87edb5b5d3616c" translate="yes" xml:space="preserve">
          <source>If the lock state matches the given stamp, performs one of the following actions. If the stamp represents holding a write lock, releases it and obtains a read lock. Or, if a read lock, returns it. Or, if an optimistic read, acquires a read lock and returns a read stamp only if immediately available. This method returns zero in all other cases.</source>
          <target state="translated">ロック状態が指定されたスタンプと一致した場合、以下のいずれかのアクションを実行します。スタンプが書き込みロックを保持していることを表している場合、それを解除して読み取りロックを取得します。または、読み取りロックの場合は、それを返す。または、楽観的な読み取りの場合は、読み取りロックを取得し、すぐに利用可能な場合にのみ読み取りスタンプを返します。このメソッドは、それ以外の場合はすべてゼロを返します。</target>
        </trans-unit>
        <trans-unit id="3fe6cd5b7f1314dfe53912057e75419a458d6c46" translate="yes" xml:space="preserve">
          <source>If the lock state matches the given stamp, performs one of the following actions. If the stamp represents holding a write lock, returns it. Or, if a read lock, if the write lock is available, releases the read lock and returns a write stamp. Or, if an optimistic read, returns a write stamp only if immediately available. This method returns zero in all other cases.</source>
          <target state="translated">ロック状態が指定されたスタンプと一致する場合、以下のいずれかのアクションを実行します。スタンプが書き込みロックを保持していることを表している場合は、それを返す。または、読み取りロックの場合、書き込みロックが利用可能であれば、読み取りロックを解放して書き込みスタンプを返します。または、楽観的な読み取りの場合は、すぐに利用可能な場合にのみ書き込みスタンプを返します。このメソッドは、それ以外のすべての場合にゼロを返します。</target>
        </trans-unit>
        <trans-unit id="14a53c83eff403dc5c623bd9e147872ed3ff94fc" translate="yes" xml:space="preserve">
          <source>If the lock state matches the given stamp, releases the corresponding mode of the lock.</source>
          <target state="translated">ロック状態が指定されたスタンプと一致した場合、ロックの対応するモードを解除します。</target>
        </trans-unit>
        <trans-unit id="3114f1897355cfbc96b7a2b2a9909376a9675347" translate="yes" xml:space="preserve">
          <source>If the lock state matches the given stamp, releases the exclusive lock.</source>
          <target state="translated">ロック状態が指定されたスタンプと一致した場合、排他的ロックを解除します。</target>
        </trans-unit>
        <trans-unit id="4a3ebac76180e9eaa8e069fe7a9c0cce392315b8" translate="yes" xml:space="preserve">
          <source>If the lock state matches the given stamp, releases the non-exclusive lock.</source>
          <target state="translated">ロック状態が指定されたスタンプと一致した場合、非排他的ロックを解除します。</target>
        </trans-unit>
        <trans-unit id="e004c7523986b5ecc4e1749a86febcd1a6784511" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the CONFIG message level then the given message is forwarded to all the registered output Handler objects.</source>
          <target state="translated">ロガーが CONFIG メッセージ レベルで現在有効になっている場合、指定されたメッセージは、登録されたすべての 出力ハンドラ オブジェクトに転送されます。</target>
        </trans-unit>
        <trans-unit id="2480ae012f96dc55272b45f972094f52d29f7772" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the CONFIG message level then the message is constructed by invoking the provided supplier function and forwarded to all the registered output Handler objects.</source>
          <target state="translated">ロガーが CONFIG メッセージ レベルで現在有効になっている場合、メッセージは、提供されたサプライヤ関数を呼び出すことで構築され、登録されたすべての 出力ハンドラ オブジェクトに転送されます。</target>
        </trans-unit>
        <trans-unit id="f74f4184b1114d21694c20083bffeca6773ddbdc" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the FINE message level then the given message is forwarded to all the registered output Handler objects.</source>
          <target state="translated">ロガーが現在 FINE メッセージ レベルで有効になっている場合、指定されたメッセージは、登録されているすべての出力ハンドラー オブジェクトに転送されます。</target>
        </trans-unit>
        <trans-unit id="ef129fafed8fea9b1b19398062aeaf0403caccda" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the FINE message level then the message is constructed by invoking the provided supplier function and forwarded to all the registered output Handler objects.</source>
          <target state="translated">ロガーが現在 FINE メッセージ レベルで有効になっている場合、メッセージは、提供されたサプライヤ関数を呼び出すことで構築され、登録されたすべての 出力ハンドラ オブジェクトに転送されます。</target>
        </trans-unit>
        <trans-unit id="5c488b5e8261b0b9f6a94d2c335e06b774d3e4c2" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the FINER message level then the given message is forwarded to all the registered output Handler objects.</source>
          <target state="translated">ロガーが現在 FINER メッセージ レベルで有効になっている場合、指定されたメッセージは、登録されているすべての 出力ハンドラ オブジェクトに転送されます。</target>
        </trans-unit>
        <trans-unit id="400e0c53967d73d6073541aa2955ecfaedacc619" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the FINER message level then the message is constructed by invoking the provided supplier function and forwarded to all the registered output Handler objects.</source>
          <target state="translated">ロガーが現在 FINER メッセージ レベルで有効になっている場合、メッセージは、提供されたサプライヤ関数を呼び出すことで構築され、登録されたすべての 出力ハンドラ オブジェクトに転送されます。</target>
        </trans-unit>
        <trans-unit id="c08c72ddfcb02350456ab868e8db332930e255e4" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the FINEST message level then the given message is forwarded to all the registered output Handler objects.</source>
          <target state="translated">ロガーが現在 FINEST メッセージ レベルで有効になっている場合、指定されたメッセージは、登録されているすべての 出力ハンドラ オブジェクトに転送されます。</target>
        </trans-unit>
        <trans-unit id="776e22483061c922dbf981169c45b199faadcb6b" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the FINEST message level then the message is constructed by invoking the provided supplier function and forwarded to all the registered output Handler objects.</source>
          <target state="translated">ロガーが現在 FINEST メッセージ レベルで有効になっている場合、メッセージは、提供されたサプライヤ関数を呼び出すことで構築され、登録されたすべての 出力ハンドラ オブジェクトに転送されます。</target>
        </trans-unit>
        <trans-unit id="0c3de4bfb7369cf5faf7dd1122bdabc955fddf2e" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the INFO message level then the given message is forwarded to all the registered output Handler objects.</source>
          <target state="translated">ロガーが現在 INFO メッセージ レベルで有効になっている場合、指定されたメッセージは、登録されたすべての出力ハンドラ オブジェクトに転送されます。</target>
        </trans-unit>
        <trans-unit id="b7c2334c2c90239d4c59ec8c7a0e4b1e0b78f35b" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the INFO message level then the message is constructed by invoking the provided supplier function and forwarded to all the registered output Handler objects.</source>
          <target state="translated">ロガーが現在 INFO メッセージ レベルで有効になっている場合、メッセージは、提供されたサプライヤー関数を呼び出すことで構築され、登録されたすべての出力ハンドラ オブジェクトに転送されます。</target>
        </trans-unit>
        <trans-unit id="ab7e0ed2e38d83c57cfc908b346ba953ba01ea6e" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the SEVERE message level then the given message is forwarded to all the registered output Handler objects.</source>
          <target state="translated">ロガーが現在 SEVERE メッセージ レベルで有効になっている場合、指定されたメッセージは、登録されたすべての出力ハンドラー オブジェクトに転送されます。</target>
        </trans-unit>
        <trans-unit id="8e167659c676fd6a76d1a8ff361acf900cf2dee4" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the SEVERE message level then the message is constructed by invoking the provided supplier function and forwarded to all the registered output Handler objects.</source>
          <target state="translated">ロガーが現在 SEVERE メッセージ レベルで有効になっている場合、メッセージは、提供されたサプライヤ関数を呼び出すことで構築され、登録されたすべての 出力ハンドラ オブジェクトに転送されます。</target>
        </trans-unit>
        <trans-unit id="700de6b174ae4293a822d7062908049e15243b9c" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the WARNING message level then the given message is forwarded to all the registered output Handler objects.</source>
          <target state="translated">ロガーが現在、警告メッセージ レベルで有効になっている場合、指定されたメッセージは、登録されているすべての出力ハンドラー オブジェクトに転送されます。</target>
        </trans-unit>
        <trans-unit id="8548b61ec8126b5ee81ca57df60b3e51531c5a8a" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the WARNING message level then the message is constructed by invoking the provided supplier function and forwarded to all the registered output Handler objects.</source>
          <target state="translated">ロガーが現在、警告メッセージ レベルで有効になっている場合、メッセージは、提供されたサプライヤー関数を呼び出すことで構築され、登録されたすべての出力ハンドラ オブジェクトに転送されます。</target>
        </trans-unit>
        <trans-unit id="5a707ce3f0ebdced7855946db27b8b7e46bf0539" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the given message &lt;code&gt;level&lt;/code&gt; then a corresponding &lt;code&gt;LogRecord&lt;/code&gt; is created and forwarded to all the registered output &lt;code&gt;Handler&lt;/code&gt; objects.</source>
          <target state="translated">If the logger is currently enabled for the given message &lt;code&gt;level&lt;/code&gt; then a corresponding &lt;code&gt;LogRecord&lt;/code&gt; is created and forwarded to all the registered output &lt;code&gt;Handler&lt;/code&gt; objects.</target>
        </trans-unit>
        <trans-unit id="b378f215976c2e18ee9b57b56cfaa682e43ca7e1" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the given message &lt;code&gt;level&lt;/code&gt; then the given arguments are stored in a &lt;code&gt;LogRecord&lt;/code&gt; which is forwarded to all registered output handlers.</source>
          <target state="translated">If the logger is currently enabled for the given message &lt;code&gt;level&lt;/code&gt; then the given arguments are stored in a &lt;code&gt;LogRecord&lt;/code&gt; which is forwarded to all registered output handlers.</target>
        </trans-unit>
        <trans-unit id="2998fe288d20db38f6f02724d9a3e1e03f44693c" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the given message level then a corresponding LogRecord is created and forwarded to all the registered output Handler objects.</source>
          <target state="translated">ロガーが指定されたメッセージ レベルで現在有効になっている場合、対応する LogRecord が作成され、登録されているすべての出力ハンドラ オブジェクトに転送されます。</target>
        </trans-unit>
        <trans-unit id="5672874e662c52b70bec899dedf5a6f7d4107f79" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the given message level then the given arguments are stored in a LogRecord which is forwarded to all registered output handlers.</source>
          <target state="translated">ロガーが現在、指定されたメッセージ レベルで有効になっている場合、指定された引数は、登録されたすべての出力ハンドラーに転送される LogRecord に格納されます。</target>
        </trans-unit>
        <trans-unit id="0a20e1ab3ef4c4dda5575d5b6fbf96f00af911a8" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the given message level then the given arguments are stored in a LogRecord which is forwarded to all registered output handlers. The LogRecord's message is set to &quot;THROW&quot;.</source>
          <target state="translated">ロガーが現在、指定されたメッセージ レベルで有効になっている場合、指定された引数は、登録されたすべての出力ハンドラに転送される LogRecord に格納されます。LogRecord のメッセージは &quot;THROW&quot; に設定されています。</target>
        </trans-unit>
        <trans-unit id="325dfec7a72934c84f66843540d89c8f3769035b" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the given message level then the given message is forwarded to all the registered output Handler objects.</source>
          <target state="translated">ロガーが指定されたメッセージ レベルで現在有効になっている場合、指定されたメッセージは、登録されているすべての出力ハンドラー オブジェクトに転送されます。</target>
        </trans-unit>
        <trans-unit id="09b15fa7220dfe741c8baffb5087e302fb89c908" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the given message level then the message is constructed by invoking the provided supplier function and forwarded to all the registered output Handler objects.</source>
          <target state="translated">ロガーが現在、指定されたメッセージ レベルで有効になっている場合、メッセージは、提供されたサプライヤ関数を呼び出すことで構築され、登録されたすべての 出力ハンドラ オブジェクトに転送されます。</target>
        </trans-unit>
        <trans-unit id="c33be9e7edb44141d7868af8327eb0567ce6ec4f" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the given message level then the message is constructed by invoking the provided supplier function. The message and the given &lt;a href=&quot;../../../../java.base/java/lang/throwable&quot;&gt;&lt;code&gt;Throwable&lt;/code&gt;&lt;/a&gt; are then stored in a &lt;a href=&quot;logrecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; which is forwarded to all registered output handlers.</source>
          <target state="translated">If the logger is currently enabled for the given message level then the message is constructed by invoking the provided supplier function. The message and the given &lt;a href=&quot;../../../../java.base/java/lang/throwable&quot;&gt; &lt;code&gt;Throwable&lt;/code&gt; &lt;/a&gt; are then stored in a &lt;a href=&quot;logrecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; &lt;/a&gt; which is forwarded to all registered output handlers.</target>
        </trans-unit>
        <trans-unit id="72eff8884364ee54a875323cb549fca604cb4b7b" translate="yes" xml:space="preserve">
          <source>If the logger is currently enabled for the given message level then the message is constructed by invoking the provided supplier function. The message and the given &lt;a href=&quot;../../lang/throwable&quot;&gt;&lt;code&gt;Throwable&lt;/code&gt;&lt;/a&gt; are then stored in a &lt;a href=&quot;logrecord&quot;&gt;&lt;code&gt;LogRecord&lt;/code&gt;&lt;/a&gt; which is forwarded to all registered output handlers.</source>
          <target state="translated">指定されたメッセージレベルでロガーが現在有効になっている場合、メッセージは提供されたサプライヤ関数を呼び出すことによって構築されます。メッセージと指定された&lt;a href=&quot;../../lang/throwable&quot;&gt; &lt;code&gt;Throwable&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;logrecord&quot;&gt; &lt;code&gt;LogRecord&lt;/code&gt; に&lt;/a&gt;格納され、登録されているすべての出力ハンドラーに転送されます。</target>
        </trans-unit>
        <trans-unit id="bb1c400f82a20624d25957d22a9309735bd25ad8" translate="yes" xml:space="preserve">
          <source>If the looked-up method has a &lt;a href=&quot;methodhandle#maxarity&quot;&gt;very large arity&lt;/a&gt;, the method handle creation may fail with an &lt;code&gt;IllegalArgumentException&lt;/code&gt;, due to the method handle type having &lt;a href=&quot;methodhandle#maxarity&quot;&gt;too many parameters.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df68511496b32d8949f42994423a12d97c5a37a3" translate="yes" xml:space="preserve">
          <source>If the looked-up method has a &lt;a href=&quot;methodhandle#maxarity&quot;&gt;very large arity&lt;/a&gt;, the method handle creation may fail, due to the method handle type having too many parameters.</source>
          <target state="translated">ルックアップされたメソッドの&lt;a href=&quot;methodhandle#maxarity&quot;&gt;アリティ&lt;/a&gt;が非常に大きい場合、メソッドハンドルタイプのパラメーターが多すぎるため、メソッドハンドルの作成が失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="d5a1d5c49aae5cb26d9965efa2b543eb65306a01" translate="yes" xml:space="preserve">
          <source>If the magnitude is zero, it is represented by a single zero character &lt;code&gt;'0'&lt;/code&gt; (&lt;code&gt;'\u0030'&lt;/code&gt;); otherwise, the first character of the representation of the magnitude will not be the zero character.</source>
          <target state="translated">マグニチュードがゼロの場合、単一のゼロ文字 &lt;code&gt;'0'&lt;/code&gt; （ &lt;code&gt;'\u0030'&lt;/code&gt; ）で表されます。そうでない場合、絶対値の表現の最初の文字はゼロ文字にはなりません。</target>
        </trans-unit>
        <trans-unit id="e2b282ebf7062ed0ca134866fb50f5fe7dd48ced" translate="yes" xml:space="preserve">
          <source>If the main task must later await termination, it may re-register and then execute a similar loop:</source>
          <target state="translated">メインタスクが後で終了を待たなければならない場合、メインタスクは再登録してから同様のループを実行することができます。</target>
        </trans-unit>
        <trans-unit id="531cc08b857c4e56e257070320ab4f3d2accadae" translate="yes" xml:space="preserve">
          <source>If the mapped keys contain duplicates (according to &lt;a href=&quot;../../lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;), an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown when the collection operation is performed. If the mapped keys may have duplicates, use &lt;a href=&quot;#toConcurrentMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)&quot;&gt;&lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">If the mapped keys contain duplicates (according to &lt;a href=&quot;../../lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt;), an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown when the collection operation is performed. If the mapped keys may have duplicates, use &lt;a href=&quot;#toConcurrentMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)&quot;&gt; &lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator)&lt;/code&gt; &lt;/a&gt; instead.</target>
        </trans-unit>
        <trans-unit id="088f14da8d2c154179e131d3ed238aa448ab02fb" translate="yes" xml:space="preserve">
          <source>If the mapped keys contain duplicates (according to &lt;a href=&quot;../../lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;), an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown when the collection operation is performed. If the mapped keys might have duplicates, use &lt;a href=&quot;#toMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)&quot;&gt;&lt;code&gt;toMap(Function, Function, BinaryOperator)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">If the mapped keys contain duplicates (according to &lt;a href=&quot;../../lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt;), an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown when the collection operation is performed. If the mapped keys might have duplicates, use &lt;a href=&quot;#toMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)&quot;&gt; &lt;code&gt;toMap(Function, Function, BinaryOperator)&lt;/code&gt; &lt;/a&gt; instead.</target>
        </trans-unit>
        <trans-unit id="a291cf6a416b3035d499691d19d66c91e9db3e1a" translate="yes" xml:space="preserve">
          <source>If the mapped keys contain duplicates (according to &lt;a href=&quot;../../lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;), an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown when the collection operation is performed. If the mapped keys might have duplicates, use &lt;a href=&quot;#toUnmodifiableMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)&quot;&gt;&lt;code&gt;toUnmodifiableMap(Function, Function, BinaryOperator)&lt;/code&gt;&lt;/a&gt; to handle merging of the values.</source>
          <target state="translated">If the mapped keys contain duplicates (according to &lt;a href=&quot;../../lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt;), an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown when the collection operation is performed. If the mapped keys might have duplicates, use &lt;a href=&quot;#toUnmodifiableMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)&quot;&gt; &lt;code&gt;toUnmodifiableMap(Function, Function, BinaryOperator)&lt;/code&gt; &lt;/a&gt; to handle merging of the values.</target>
        </trans-unit>
        <trans-unit id="b1373a2f67fea002749155a531d7ee46df51febf" translate="yes" xml:space="preserve">
          <source>If the mapped keys contain duplicates (according to &lt;a href=&quot;../../lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;), the value mapping function is applied to each equal element, and the results are merged using the provided merging function.</source>
          <target state="translated">If the mapped keys contain duplicates (according to &lt;a href=&quot;../../lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt;), the value mapping function is applied to each equal element, and the results are merged using the provided merging function.</target>
        </trans-unit>
        <trans-unit id="d6ebb09d651c50d7a498fdb18d45eddf7b8ceeeb" translate="yes" xml:space="preserve">
          <source>If the mapped keys contain duplicates (according to &lt;a href=&quot;../../lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;), the value mapping function is applied to each equal element, and the results are merged using the provided merging function. The &lt;code&gt;ConcurrentMap&lt;/code&gt; is created by a provided supplier function.</source>
          <target state="translated">If the mapped keys contain duplicates (according to &lt;a href=&quot;../../lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt;), the value mapping function is applied to each equal element, and the results are merged using the provided merging function. The &lt;code&gt;ConcurrentMap&lt;/code&gt; is created by a provided supplier function.</target>
        </trans-unit>
        <trans-unit id="2e75e6f9c272bcc58cd0a4bb014e176c452d721a" translate="yes" xml:space="preserve">
          <source>If the mapped keys contain duplicates (according to &lt;a href=&quot;../../lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;), the value mapping function is applied to each equal element, and the results are merged using the provided merging function. The &lt;code&gt;Map&lt;/code&gt; is created by a provided supplier function.</source>
          <target state="translated">If the mapped keys contain duplicates (according to &lt;a href=&quot;../../lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt;), the value mapping function is applied to each equal element, and the results are merged using the provided merging function. The &lt;code&gt;Map&lt;/code&gt; is created by a provided supplier function.</target>
        </trans-unit>
        <trans-unit id="91601953e386bbcbf0a6b2f49eca2d05544c99f8" translate="yes" xml:space="preserve">
          <source>If the mapped keys contains duplicates (according to &lt;a href=&quot;../../lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;), an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown when the collection operation is performed. If the mapped keys may have duplicates, use &lt;a href=&quot;collectors#toConcurrentMap-java.util.function.Function-java.util.function.Function-java.util.function.BinaryOperator-&quot;&gt;&lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">マップされたキーに重複が含まれている場合（&lt;a href=&quot;../../lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; に&lt;/a&gt;よると）、コレクション操作が実行されると &lt;code&gt;IllegalStateException&lt;/code&gt; がスローされます。マップされたキーが重複している可能性がある場合は、代わりに&lt;a href=&quot;collectors#toConcurrentMap-java.util.function.Function-java.util.function.Function-java.util.function.BinaryOperator-&quot;&gt; &lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator)&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="42bc70fbf81ca2e8ef91fd72811c9886f9c29e43" translate="yes" xml:space="preserve">
          <source>If the mapped keys contains duplicates (according to &lt;a href=&quot;../../lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;), an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown when the collection operation is performed. If the mapped keys may have duplicates, use &lt;a href=&quot;collectors#toMap-java.util.function.Function-java.util.function.Function-java.util.function.BinaryOperator-&quot;&gt;&lt;code&gt;toMap(Function, Function, BinaryOperator)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">マップされたキーに重複が含まれている場合（&lt;a href=&quot;../../lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; に&lt;/a&gt;よると）、コレクション操作が実行されると &lt;code&gt;IllegalStateException&lt;/code&gt; がスローされます。マップされたキーが重複している可能性がある場合は、代わりに&lt;a href=&quot;collectors#toMap-java.util.function.Function-java.util.function.Function-java.util.function.BinaryOperator-&quot;&gt; &lt;code&gt;toMap(Function, Function, BinaryOperator)&lt;/code&gt; &lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="ebd1a935a059b20128bc5042763d4c45de22fb0b" translate="yes" xml:space="preserve">
          <source>If the mapped keys contains duplicates (according to &lt;a href=&quot;../../lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;), the value mapping function is applied to each equal element, and the results are merged using the provided merging function.</source>
          <target state="translated">マップされたキーに重複が含まれている場合（&lt;a href=&quot;../../lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt;に従って）、値のマッピング関数が各等しい要素に適用され、提供されたマージ関数を使用して結果がマージされます。</target>
        </trans-unit>
        <trans-unit id="0ab1f12a020b33fa5cdaa6c8e92a327756ecc141" translate="yes" xml:space="preserve">
          <source>If the mapped keys contains duplicates (according to &lt;a href=&quot;../../lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;), the value mapping function is applied to each equal element, and the results are merged using the provided merging function. The &lt;code&gt;ConcurrentMap&lt;/code&gt; is created by a provided supplier function.</source>
          <target state="translated">マップされたキーに重複が含まれている場合（&lt;a href=&quot;../../lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt;に従って）、値のマッピング関数が各等しい要素に適用され、提供されたマージ関数を使用して結果がマージされます。 &lt;code&gt;ConcurrentMap&lt;/code&gt; を提供するサプライヤー機能によって作成されます。</target>
        </trans-unit>
        <trans-unit id="5d55abd598d0098b46d878c1a82407a1edf09085" translate="yes" xml:space="preserve">
          <source>If the mapped keys contains duplicates (according to &lt;a href=&quot;../../lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;), the value mapping function is applied to each equal element, and the results are merged using the provided merging function. The &lt;code&gt;Map&lt;/code&gt; is created by a provided supplier function.</source>
          <target state="translated">マップされたキーに重複が含まれている場合（&lt;a href=&quot;../../lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt;に従って）、値のマッピング関数が各等しい要素に適用され、提供されたマージ関数を使用して結果がマージされます。 &lt;code&gt;Map&lt;/code&gt; 提供するサプライヤー機能によって作成されます。</target>
        </trans-unit>
        <trans-unit id="6776bff4be9d5889c77b053d4d78e203a02dda2b" translate="yes" xml:space="preserve">
          <source>If the mapping function returns &lt;code&gt;null&lt;/code&gt;, no mapping is recorded. If the mapping function itself throws an (unchecked) exception, the exception is rethrown, and no mapping is recorded. The most common usage is to construct a new object serving as an initial mapped value or memoized result, as in:</source>
          <target state="translated">If the mapping function returns &lt;code&gt;null&lt;/code&gt; , no mapping is recorded. If the mapping function itself throws an (unchecked) exception, the exception is rethrown, and no mapping is recorded. The most common usage is to construct a new object serving as an initial mapped value or memoized result, as in:</target>
        </trans-unit>
        <trans-unit id="cb025d3bf5eb9ce361d77c9eec5cc70908428bf7" translate="yes" xml:space="preserve">
          <source>If the mapping function returns a &lt;code&gt;null&lt;/code&gt; result then this method returns an empty &lt;code&gt;Optional&lt;/code&gt;.</source>
          <target state="translated">If the mapping function returns a &lt;code&gt;null&lt;/code&gt; result then this method returns an empty &lt;code&gt;Optional&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12d75596707c6333177ca57803e56fd8714ec021" translate="yes" xml:space="preserve">
          <source>If the match succeeds then more information can be obtained via the &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;, and &lt;code&gt;group&lt;/code&gt; methods, and subsequent invocations of the &lt;a href=&quot;#find()&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; method will start at the first character not matched by this match.</source>
          <target state="translated">If the match succeeds then more information can be obtained via the &lt;code&gt;start&lt;/code&gt; , &lt;code&gt;end&lt;/code&gt; , and &lt;code&gt;group&lt;/code&gt; methods, and subsequent invocations of the &lt;a href=&quot;#find()&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt; method will start at the first character not matched by this match.</target>
        </trans-unit>
        <trans-unit id="38fcc3a9324656c7f62d52adcd0bcdf26f23941f" translate="yes" xml:space="preserve">
          <source>If the match succeeds then more information can be obtained via the &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;, and &lt;code&gt;group&lt;/code&gt; methods, and subsequent invocations of the &lt;a href=&quot;matcher#find--&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; method will start at the first character not matched by this match.</source>
          <target state="translated">一致が成功した場合、 &lt;code&gt;start&lt;/code&gt; 、 &lt;code&gt;end&lt;/code&gt; 、および &lt;code&gt;group&lt;/code&gt; メソッドを介してより多くの情報を取得できます。その後の&lt;a href=&quot;matcher#find--&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しは、この一致に一致しない最初の文字から開始されます。</target>
        </trans-unit>
        <trans-unit id="e45d30a935b4cf0dbcaf8698457f96e2ee71e0db" translate="yes" xml:space="preserve">
          <source>If the match succeeds then more information can be obtained via the &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;, and &lt;code&gt;group&lt;/code&gt; methods.</source>
          <target state="translated">一致が成功した場合、 &lt;code&gt;start&lt;/code&gt; 、 &lt;code&gt;end&lt;/code&gt; 、および &lt;code&gt;group&lt;/code&gt; メソッドを使用して、より多くの情報を取得できます。</target>
        </trans-unit>
        <trans-unit id="4646f11996bf69cea5464367c1335e753c401c2e" translate="yes" xml:space="preserve">
          <source>If the match was successful but the group specified failed to match any part of the input sequence, then &lt;code&gt;null&lt;/code&gt; is returned. Note that some groups, for example &lt;code&gt;(a*)&lt;/code&gt;, match the empty string. This method will return the empty string when such a group successfully matches the empty string in the input.</source>
          <target state="translated">一致は成功したが、指定されたグループが入力シーケンスのどの部分にも一致しなかった場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。 &lt;code&gt;(a*)&lt;/code&gt; などの一部のグループは空の文字列と一致することに注意してください。このメソッドは、そのようなグループが入力の空の文字列と正常に一致すると、空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="7978619400e787b4fa09d19e22379298e6ddd77a" translate="yes" xml:space="preserve">
          <source>If the matcher is to be used for further matching operations after the terminal stream operation completes then it should be first reset.</source>
          <target state="translated">終端ストリーム操作が完了した後に、 マ ッ チ ャ ーがそれ以降の マ ッ チ ャ ー操作に使用 さ れ る 場合は、 最初に リ セ ッ ト す る 必要があ り ます。</target>
        </trans-unit>
        <trans-unit id="e27c63987af47673a3557d130f21afb577235397" translate="yes" xml:space="preserve">
          <source>If the maximum number of integer digits is greater than their minimum number and greater than 1, it forces the exponent to be a multiple of the maximum number of integer digits, and the minimum number of integer digits to be interpreted as 1. The most common use of this is to generate &lt;em&gt;engineering notation&lt;/em&gt;, in which the exponent is a multiple of three, e.g., &lt;code&gt;&quot;##0.#####E0&quot;&lt;/code&gt;. Using this pattern, the number 12345 formats to &lt;code&gt;&quot;12.345E3&quot;&lt;/code&gt;, and 123456 formats to &lt;code&gt;&quot;123.456E3&quot;&lt;/code&gt;.</source>
          <target state="translated">整数の最大桁数が最小数より大きく1より大きい場合、指数は整数の最大桁数の倍数になり、整数の最小桁数は1と解釈されます。これを使用すると、指数が3の倍数となる&lt;em&gt;技術表記&lt;/em&gt;（ &lt;code&gt;&quot;##0.#####E0&quot;&lt;/code&gt; ます。このパターンを使用すると、数値12345は &lt;code&gt;&quot;12.345E3&quot;&lt;/code&gt; に、123456は &lt;code&gt;&quot;123.456E3&quot;&lt;/code&gt; にフォーマットされます。</target>
        </trans-unit>
        <trans-unit id="fc02abf9ff2a8cfb39d93ed0d23fa96b285931bc" translate="yes" xml:space="preserve">
          <source>If the maximum packet size is too small to hold a minimal record, an implementation may attempt to generate as minimal records as possible. However, this may cause a generated packet to be larger than the maximum packet size.</source>
          <target state="translated">最大パケットサイズが小さすぎて最小レコードを保持できない場合、実装は、可能な限り最小レコードを生成しようとすることができる。しかし、これは、生成されたパケットが最大パケットサイズよりも大きくなる可能性がある。</target>
        </trans-unit>
        <trans-unit id="4b7136459975c689cb618446a7775563184c4f97" translate="yes" xml:space="preserve">
          <source>If the maximum size has been set to a non-&lt;code&gt;null&lt;/code&gt; value just returns it.</source>
          <target state="translated">If the maximum size has been set to a non- &lt;code&gt;null&lt;/code&gt; value just returns it.</target>
        </trans-unit>
        <trans-unit id="86b3b7a5e5f22c1bf8fae091e74834fd7dca174e" translate="yes" xml:space="preserve">
          <source>If the maximum size has been set to a non-&lt;code&gt;null&lt;/code&gt; value just returns it. If the UI delegate's &lt;code&gt;getMaximumSize&lt;/code&gt; method returns a non-&lt;code&gt;null&lt;/code&gt; value then return that; otherwise defer to the component's layout manager.</source>
          <target state="translated">If the maximum size has been set to a non- &lt;code&gt;null&lt;/code&gt; value just returns it. If the UI delegate's &lt;code&gt;getMaximumSize&lt;/code&gt; method returns a non- &lt;code&gt;null&lt;/code&gt; value then return that; otherwise defer to the component's layout manager.</target>
        </trans-unit>
        <trans-unit id="a8ec7f18e844715a365255a5c9ce58a9ea8cde37" translate="yes" xml:space="preserve">
          <source>If the maximum value is different from the previous maximum, all change listeners are notified.</source>
          <target state="translated">最大値が前回の最大値と異なる場合は、すべての変更リスナーに通知されます。</target>
        </trans-unit>
        <trans-unit id="838dcf4d5b32bbaaf6507ff34ec3b9a39315ea1c" translate="yes" xml:space="preserve">
          <source>If the mechanism has an initial response, the library invokes &lt;code&gt;evaluateChallenge()&lt;/code&gt; with an empty challenge and to get initial response. Protocols such as IMAP4, which do not include an initial response with their first authentication command to the server, initiates the authentication without first calling &lt;code&gt;hasInitialResponse()&lt;/code&gt; or &lt;code&gt;evaluateChallenge()&lt;/code&gt;. When the server responds to the command, it sends an initial challenge. For a SASL mechanism in which the client sends data first, the server should have issued a challenge with no data. This will then result in a call (on the client) to &lt;code&gt;evaluateChallenge()&lt;/code&gt; with an empty challenge.</source>
          <target state="translated">メカニズムに初期応答がある場合、ライブラリは、空のチャレンジを使用して &lt;code&gt;evaluateChallenge()&lt;/code&gt; を呼び出し、初期応答を取得します。 IMAP4などのプロトコルは、サーバーに対する最初の認証コマンドでの初期応答を含まず、最初に &lt;code&gt;hasInitialResponse()&lt;/code&gt; または &lt;code&gt;evaluateChallenge()&lt;/code&gt; を呼び出さずに認証を開始します。サーバーがコマンドに応答すると、最初のチャレンジが送信されます。クライアントが最初にデータを送信するSASLメカニズムの場合、サーバーはデータのないチャレンジを発行する必要があります。これにより、（クライアントで）空のチャレンジを使用して &lt;code&gt;evaluateChallenge()&lt;/code&gt; を呼び出す結果になります。</target>
        </trans-unit>
        <trans-unit id="4583d5e7e45e0fa2e945cb9ac4db80337ed6eff8" translate="yes" xml:space="preserve">
          <source>If the membership key represents a membership to receive all datagrams then the membership is dropped and the channel will no longer receive any datagrams sent to the group. If the membership key is source-specific then the channel will no longer receive datagrams sent to the group from that source address.</source>
          <target state="translated">メンバーシップ・キーがすべてのデータグラムを受信するメンバーシップを表している場合、そのメンバーシップは削除され、チャネルはグループに送信されたデータグラムを一切受信しなくなる。メンバーシップキーがソース固有のものである場合、チャネルはそのソースアドレスからグループに送信されたデータグラムを受信できなくなります。</target>
        </trans-unit>
        <trans-unit id="6001952d56f121e245b493dc6d0d725d39114278" translate="yes" xml:space="preserve">
          <source>If the metadata does contain tables, the tables given in a &lt;code&gt;JPEGImageWriteParam&lt;/code&gt; are ignored. Furthermore, once a set of tables has been written, only tables in the metadata can override them for subsequent writes, whether to the same stream or a different one. In order to specify new tables using this class, the &lt;a href=&quot;../../imagewriter#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; method of the writer must be called.</source>
          <target state="translated">If the metadata does contain tables, the tables given in a &lt;code&gt;JPEGImageWriteParam&lt;/code&gt; are ignored. Furthermore, once a set of tables has been written, only tables in the metadata can override them for subsequent writes, whether to the same stream or a different one. In order to specify new tables using this class, the &lt;a href=&quot;../../imagewriter#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt; method of the writer must be called.</target>
        </trans-unit>
        <trans-unit id="578b6c8818072cd3e8eeb57e000ffbfdfb02eb42" translate="yes" xml:space="preserve">
          <source>If the metadata does contain tables, the tables given in a &lt;code&gt;JPEGImageWriteParam&lt;/code&gt; are ignored. Furthermore, once a set of tables has been written, only tables in the metadata can override them for subsequent writes, whether to the same stream or a different one. In order to specify new tables using this class, the &lt;a href=&quot;../../imagewriter#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; method of the writer must be called.</source>
          <target state="translated">メタデータにテーブルが含まれている場合、 &lt;code&gt;JPEGImageWriteParam&lt;/code&gt; で指定されたテーブルは無視されます。さらに、一連のテーブルが書き込まれると、メタデータ内のテーブルのみが、同じストリームまたは異なるストリームへの後続の書き込みのためにそれらをオーバーライドできます。このクラスを使用して新しいテーブルを指定するには、ライターの&lt;a href=&quot;../../imagewriter#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;メソッドを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="ad0276650305bd3de8e01175bff74048c2dfe026" translate="yes" xml:space="preserve">
          <source>If the method &lt;code&gt;mark&lt;/code&gt; has not been called since the stream was created, or the number of bytes read from the stream since &lt;code&gt;mark&lt;/code&gt; was last called is larger than the argument to &lt;code&gt;mark&lt;/code&gt; at that last call, then an &lt;code&gt;IOException&lt;/code&gt; might be thrown.</source>
          <target state="translated">ストリームが作成されてからメソッド &lt;code&gt;mark&lt;/code&gt; が呼び出されていない場合、または最後に &lt;code&gt;mark&lt;/code&gt; が呼び出されてからストリームから読み取られたバイト数が、最後の呼び出しで &lt;code&gt;mark&lt;/code&gt; する引数よりも大きい場合は、 &lt;code&gt;IOException&lt;/code&gt; がスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="2cd81035982e12d53ca7e2f58a6ad2d674721fd8" translate="yes" xml:space="preserve">
          <source>If the method &lt;code&gt;markSupported&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, then:</source>
          <target state="translated">&lt;code&gt;markSupported&lt;/code&gt; メソッドが &lt;code&gt;false&lt;/code&gt; を返す場合、次のようになります。</target>
        </trans-unit>
        <trans-unit id="864c00c6cb70175672417e9637771a48ccc4d334" translate="yes" xml:space="preserve">
          <source>If the method &lt;code&gt;markSupported&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, then:</source>
          <target state="translated">&lt;code&gt;markSupported&lt;/code&gt; メソッドが &lt;code&gt;true&lt;/code&gt; を返す場合、次のようになります。</target>
        </trans-unit>
        <trans-unit id="257969b0bfbf03841c2811e4e4900ba062f566de" translate="yes" xml:space="preserve">
          <source>If the method call of a filter or listener throws an &lt;a href=&quot;../../../java.base/java/lang/exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;, then that exception does not prevent other listeners from being invoked. However, if the method call of a filter or of &lt;code&gt;Executor.execute&lt;/code&gt; or of &lt;code&gt;handleNotification&lt;/code&gt; (when no &lt;code&gt;Excecutor&lt;/code&gt; is specified) throws an &lt;a href=&quot;../../../java.base/java/lang/error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;, then that &lt;code&gt;Error&lt;/code&gt; is propagated to the caller of &lt;a href=&quot;#sendNotification(javax.management.Notification)&quot;&gt;&lt;code&gt;sendNotification&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If the method call of a filter or listener throws an &lt;a href=&quot;../../../java.base/java/lang/exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;, then that exception does not prevent other listeners from being invoked. However, if the method call of a filter or of &lt;code&gt;Executor.execute&lt;/code&gt; or of &lt;code&gt;handleNotification&lt;/code&gt; (when no &lt;code&gt;Excecutor&lt;/code&gt; is specified) throws an &lt;a href=&quot;../../../java.base/java/lang/error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;, then that &lt;code&gt;Error&lt;/code&gt; is propagated to the caller of &lt;a href=&quot;#sendNotification(javax.management.Notification)&quot;&gt; &lt;code&gt;sendNotification&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4a268179b4de151a916f950d2bb56b82b6124706" translate="yes" xml:space="preserve">
          <source>If the method call of a filter or listener throws an &lt;a href=&quot;../../../java.base/java/lang/exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;, then that exception should not prevent other listeners from being invoked. However, if the method call throws an &lt;a href=&quot;../../../java.base/java/lang/error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;, then it is recommended that processing of the notification stop at that point, and if it is possible to propagate the &lt;code&gt;Error&lt;/code&gt; to the sender of the notification, this should be done.</source>
          <target state="translated">If the method call of a filter or listener throws an &lt;a href=&quot;../../../java.base/java/lang/exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;, then that exception should not prevent other listeners from being invoked. However, if the method call throws an &lt;a href=&quot;../../../java.base/java/lang/error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;, then it is recommended that processing of the notification stop at that point, and if it is possible to propagate the &lt;code&gt;Error&lt;/code&gt; to the sender of the notification, this should be done.</target>
        </trans-unit>
        <trans-unit id="eaea82c9a23067ef7f772f7e498b434c683c927b" translate="yes" xml:space="preserve">
          <source>If the method call of a filter or listener throws an &lt;a href=&quot;../../java/lang/exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;, then that exception does not prevent other listeners from being invoked. However, if the method call of a filter or of &lt;code&gt;Executor.execute&lt;/code&gt; or of &lt;code&gt;handleNotification&lt;/code&gt; (when no &lt;code&gt;Excecutor&lt;/code&gt; is specified) throws an &lt;a href=&quot;../../java/lang/error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;, then that &lt;code&gt;Error&lt;/code&gt; is propagated to the caller of &lt;a href=&quot;notificationbroadcastersupport#sendNotification-javax.management.Notification-&quot;&gt;&lt;code&gt;sendNotification&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィルターまたはリスナーのメソッド呼び出しが&lt;a href=&quot;../../java/lang/exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; を&lt;/a&gt;スローした場合、その例外は他のリスナーの呼び出しを妨げません。ただし、フィルタまたは &lt;code&gt;Executor.execute&lt;/code&gt; または &lt;code&gt;handleNotification&lt;/code&gt; （ &lt;code&gt;Excecutor&lt;/code&gt; が指定されていない場合）のメソッド呼び出しが&lt;a href=&quot;../../java/lang/error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; を&lt;/a&gt;スローした場合、その &lt;code&gt;Error&lt;/code&gt; は&lt;a href=&quot;notificationbroadcastersupport#sendNotification-javax.management.Notification-&quot;&gt; &lt;code&gt;sendNotification&lt;/code&gt; &lt;/a&gt;の呼び出し元に伝達されます。</target>
        </trans-unit>
        <trans-unit id="267719667d5da83b9f20baec6b480b3574e95dc7" translate="yes" xml:space="preserve">
          <source>If the method call of a filter or listener throws an &lt;a href=&quot;../../java/lang/exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;, then that exception should not prevent other listeners from being invoked. However, if the method call throws an &lt;a href=&quot;../../java/lang/error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;, then it is recommended that processing of the notification stop at that point, and if it is possible to propagate the &lt;code&gt;Error&lt;/code&gt; to the sender of the notification, this should be done.</source>
          <target state="translated">フィルターまたはリスナーのメソッド呼び出しが&lt;a href=&quot;../../java/lang/exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; を&lt;/a&gt;スローする場合、その例外は他のリスナーの呼び出しを妨げるべきではありません。ただし、メソッド呼び出しが&lt;a href=&quot;../../java/lang/error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; を&lt;/a&gt;スローする場合は、その時点で通知の処理を停止することをお勧めします。通知の送信者に &lt;code&gt;Error&lt;/code&gt; を伝播できる場合は、これを行う必要があります。</target>
        </trans-unit>
        <trans-unit id="9f5c827066a55f3bfdaa44e5351bcaf2001cab9a" translate="yes" xml:space="preserve">
          <source>If the method completes normally, the value it returns is returned to the caller of invoke; if the value has a primitive type, it is first appropriately wrapped in an object. However, if the value has the type of an array of a primitive type, the elements of the array are</source>
          <target state="translated">メソッドが正常に完了した場合、そのメソッドが返す値は invoke の呼び出し元に返却され、値がプリミティブ型を持つ場合は、まずオブジェクトで適切にラップされます。しかし、値がプリミティブ型の配列の型を持つ場合、配列の要素は</target>
        </trans-unit>
        <trans-unit id="b17c4dd6d3aeaac2e8381aefcb1bb96824a4c8a8" translate="yes" xml:space="preserve">
          <source>If the method given to &lt;a href=&quot;../../../../java.base/java/lang/reflect/invocationhandler#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; is the method &lt;code&gt;boolean equals(Object)&lt;/code&gt; inherited from &lt;code&gt;Object&lt;/code&gt;, then it will return true if and only if the argument is a &lt;code&gt;Proxy&lt;/code&gt; whose &lt;code&gt;InvocationHandler&lt;/code&gt; is also a &lt;code&gt;
   CompositeDataInvocationHandler&lt;/code&gt; and whose backing &lt;code&gt;
   CompositeData&lt;/code&gt; is equal (not necessarily identical) to this object's. If the method given to &lt;code&gt;invoke&lt;/code&gt; is the method &lt;code&gt;int hashCode()&lt;/code&gt; inherited from &lt;code&gt;Object&lt;/code&gt;, then it will return a value that is consistent with this definition of &lt;code&gt;
   equals&lt;/code&gt;: if two objects are equal according to &lt;code&gt;equals&lt;/code&gt;, then they will have the same &lt;code&gt;hashCode&lt;/code&gt;.</source>
          <target state="translated">If the method given to &lt;a href=&quot;../../../../java.base/java/lang/reflect/invocationhandler#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt; is the method &lt;code&gt;boolean equals(Object)&lt;/code&gt; inherited from &lt;code&gt;Object&lt;/code&gt; , then it will return true if and only if the argument is a &lt;code&gt;Proxy&lt;/code&gt; whose &lt;code&gt;InvocationHandler&lt;/code&gt; is also a &lt;code&gt; CompositeDataInvocationHandler&lt;/code&gt; and whose backing &lt;code&gt; CompositeData&lt;/code&gt; is equal (not necessarily identical) to this object's. If the method given to &lt;code&gt;invoke&lt;/code&gt; is the method &lt;code&gt;int hashCode()&lt;/code&gt; inherited from &lt;code&gt;Object&lt;/code&gt; , then it will return a value that is consistent with this definition of &lt;code&gt; equals&lt;/code&gt; : if two objects are equal according to &lt;code&gt;equals&lt;/code&gt; , then they will have the same &lt;code&gt;hashCode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16a48723a8d9e2801b89e415c711042c7335165b" translate="yes" xml:space="preserve">
          <source>If the method given to &lt;a href=&quot;compositedatainvocationhandler#invoke-java.lang.Object-java.lang.reflect.Method-java.lang.Object:A-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; is the method &lt;code&gt;boolean equals(Object)&lt;/code&gt; inherited from &lt;code&gt;Object&lt;/code&gt;, then it will return true if and only if the argument is a &lt;code&gt;Proxy&lt;/code&gt; whose &lt;code&gt;InvocationHandler&lt;/code&gt; is also a &lt;code&gt;CompositeDataInvocationHandler&lt;/code&gt; and whose backing &lt;code&gt;CompositeData&lt;/code&gt; is equal (not necessarily identical) to this object's. If the method given to &lt;code&gt;invoke&lt;/code&gt; is the method &lt;code&gt;int hashCode()&lt;/code&gt; inherited from &lt;code&gt;Object&lt;/code&gt;, then it will return a value that is consistent with this definition of &lt;code&gt;equals&lt;/code&gt;: if two objects are equal according to &lt;code&gt;equals&lt;/code&gt;, then they will have the same &lt;code&gt;hashCode&lt;/code&gt;.</source>
          <target state="translated">与えられた方法ならば&lt;a href=&quot;compositedatainvocationhandler#invoke-java.lang.Object-java.lang.reflect.Method-java.lang.Object:A-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;メソッドである &lt;code&gt;boolean equals(Object)&lt;/code&gt; から継承された &lt;code&gt;Object&lt;/code&gt; は、それがあれば真を返すし、引数がある場合にのみ &lt;code&gt;Proxy&lt;/code&gt; を持つ &lt;code&gt;InvocationHandler&lt;/code&gt; も &lt;code&gt;CompositeDataInvocationHandler&lt;/code&gt; 、そのバッキング &lt;code&gt;CompositeData&lt;/code&gt; に（必ずしも同一ではない）と等しいですこのオブジェクトの。 &lt;code&gt;invoke&lt;/code&gt; 指定されたメソッドが &lt;code&gt;Object&lt;/code&gt; から継承されたメソッド &lt;code&gt;int hashCode()&lt;/code&gt; である場合、この &lt;code&gt;equals&lt;/code&gt; 定義と一致する値を返します。2つのオブジェクトが等号に従って &lt;code&gt;equals&lt;/code&gt; 、それらは同じ &lt;code&gt;hashCode&lt;/code&gt; を持ちます。</target>
        </trans-unit>
        <trans-unit id="89482ab6ffc986fc87454df58fb0e43c7e1caddc" translate="yes" xml:space="preserve">
          <source>If the method is native or abstract, an empty list is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c8dd855a596d9b3681ae2a62cc0d2f6c52ee22d" translate="yes" xml:space="preserve">
          <source>If the method shows the window then the window is also made focused under the following conditions:</source>
          <target state="translated">メソッドがウィンドウを表示している場合は、以下の条件でウィンドウもフォーカスされます。</target>
        </trans-unit>
        <trans-unit id="2b6f07a7fdaf466e246e416a6d8be9d141006087" translate="yes" xml:space="preserve">
          <source>If the method throws an unchecked exception it is ignored except in the case of EJBs where the EJB can handle exceptions.</source>
          <target state="translated">メソッドがチェックされていない例外を投げる場合は、EJBが例外を処理できるEJBの場合を除いて無視されます。</target>
        </trans-unit>
        <trans-unit id="dd7f5b04deb2b9061789f4f81f1da0be43e66b30" translate="yes" xml:space="preserve">
          <source>If the method throws an unchecked exception the class MUST NOT be put into service except in the case of EJBs where the EJB can handle exceptions and even recover from them.</source>
          <target state="translated">メソッドがチェックされていない例外を投げた場合、EJBが例外を処理し、その例外から回復することさえできるEJBの場合を除いて、クラスはサービスに投入されてはなりません[MUST NOT]。</target>
        </trans-unit>
        <trans-unit id="71fad1ecc8a08eac94d160de9bd1bcb1628402e9" translate="yes" xml:space="preserve">
          <source>If the methods that return configuration information about the annotation processor return &lt;code&gt;null&lt;/code&gt;, return other invalid input, or throw an exception, the tool infrastructure must treat this as an error condition.</source>
          <target state="translated">アノテーションプロセッサに関する構成情報を返すメソッドが &lt;code&gt;null&lt;/code&gt; を返す、他の無効な入力を返す、または例外をスローする場合、ツールインフラストラクチャはこれをエラー条件として扱う必要があります。</target>
        </trans-unit>
        <trans-unit id="4d9250ed3bc9c6d4ff0b925cf3b480e2220dbd67" translate="yes" xml:space="preserve">
          <source>If the mimeType is &quot;application/x-java-serialized-object; class=&amp;lt;representation class&amp;gt;&quot;, the result is the same as calling &lt;code&gt;new DataFlavor(Class.forName(&amp;lt;representation class&amp;gt;)&lt;/code&gt;.</source>
          <target state="translated">If the mimeType is &quot;application/x-java-serialized-object; class=&amp;lt;representation class&amp;gt;&quot;, the result is the same as calling &lt;code&gt;new DataFlavor(Class.forName(&amp;lt;representation class&amp;gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="645cb7d243c1be249a152ed3e295457a416dfa10" translate="yes" xml:space="preserve">
          <source>If the minimum size has been set to a non-&lt;code&gt;null&lt;/code&gt; value just returns it.</source>
          <target state="translated">If the minimum size has been set to a non- &lt;code&gt;null&lt;/code&gt; value just returns it.</target>
        </trans-unit>
        <trans-unit id="8876db76229cee3d170e10fbb666ffa91c4f625e" translate="yes" xml:space="preserve">
          <source>If the minimum size has been set to a non-&lt;code&gt;null&lt;/code&gt; value just returns it. If the UI delegate's &lt;code&gt;getMinimumSize&lt;/code&gt; method returns a non-&lt;code&gt;null&lt;/code&gt; value then return that; otherwise defer to the component's layout manager.</source>
          <target state="translated">If the minimum size has been set to a non- &lt;code&gt;null&lt;/code&gt; value just returns it. If the UI delegate's &lt;code&gt;getMinimumSize&lt;/code&gt; method returns a non- &lt;code&gt;null&lt;/code&gt; value then return that; otherwise defer to the component's layout manager.</target>
        </trans-unit>
        <trans-unit id="34725787b80a4ac3e39668b42bbcaa23889b0833" translate="yes" xml:space="preserve">
          <source>If the minimum value is different from the previous minimum, all change listeners are notified.</source>
          <target state="translated">最小値が前回の最小値と異なる場合は、すべての変更リスナーに通知されます。</target>
        </trans-unit>
        <trans-unit id="691404a8b3e5b3eda8e1acec57c701c9733bf667" translate="yes" xml:space="preserve">
          <source>If the model isn't empty, the width is the preferred size's width, typically the width of the widest list element. The height is the height of the cell with index 0 multiplied by the &lt;code&gt;visibleRowCount&lt;/code&gt;, plus the list's vertical insets.</source>
          <target state="translated">モデルが空でない場合、幅は優先サイズの幅であり、通常は最も幅の広いリスト要素の幅です。高さは、インデックス0に &lt;code&gt;visibleRowCount&lt;/code&gt; を掛けたセルの高さと、リストの垂直方向の挿入図です。</target>
        </trans-unit>
        <trans-unit id="0b88a0b55b2b80ffaa036b69fe4a0d5c5dc0f38c" translate="yes" xml:space="preserve">
          <source>If the module name consists of one identifier, then this method returns that identifier, which is deemed to be module's fully qualified name despite not being in qualified form. If the module name consists of more than one identifier, then this method returns the entire name.</source>
          <target state="translated">モジュール名が 1 つの識別子で構成されている場合、このメソッドはその識別子を返します。モジュール名が複数の識別子で構成されている場合、このメソッドはその識別子を返します。</target>
        </trans-unit>
        <trans-unit id="f7fafdcfebc35bea4dd094bd5605e29e57f9bd44" translate="yes" xml:space="preserve">
          <source>If the module name consists of one identifier, then this method returns that identifier. If the module name consists of more than one identifier, then this method returns the rightmost such identifier, which is deemed to be the module's simple name.</source>
          <target state="translated">モジュール名が 1 つの識別子で構成されている場合、このメソッドはその識別子を返す。モジュール名が複数の識別子で構成されている場合、このメソッドはモジュールの単純名とみなされる一番右の識別子を返します。</target>
        </trans-unit>
        <trans-unit id="1d5473331af759f2d8229027168bed280516c881" translate="yes" xml:space="preserve">
          <source>If the module reader can determine that the name locates a directory then the resulting URI will end with a slash ('/').</source>
          <target state="translated">モジュールリーダが名前がディレクトリを探していると判断できた場合、結果のURIはスラッシュ('/')で終わります。</target>
        </trans-unit>
        <trans-unit id="504335c7ed6dbcdfc8abf3c7edbaa85154a6e4d7" translate="yes" xml:space="preserve">
          <source>If the mouse is pressed above the &quot;thumb&quot; component then reduce the scrollbars value by one page (&quot;page up&quot;), otherwise increase it by one page.</source>
          <target state="translated">マウスが &quot;thumb &quot;コンポーネントの上で押された場合、スクロールバーの値を1ページ分減らし(&quot;page up&quot;)、そうでない場合は1ページ分増やします。</target>
        </trans-unit>
        <trans-unit id="ba4fc2c0db235b256084eb10160b50a98ca67f0a" translate="yes" xml:space="preserve">
          <source>If the mouse is pressed above the &quot;thumb&quot; component then reduce the scrollbars value by one page (&quot;page up&quot;), otherwise increase it by one page. If there is no thumb then page up if the mouse is in the upper half of the track.</source>
          <target state="translated">マウスが &quot;thumb&quot; コンポーネントの上で押された場合、スクロールバーの値を 1 ページ分減らし(&quot;page up&quot;)、そうでない場合は 1 ページ分増やします。サムがない場合は、マウスがトラックの上半分にある場合はページアップします。</target>
        </trans-unit>
        <trans-unit id="d66f64c9f7d27c9865a5a830293bbaacc7ca8be1" translate="yes" xml:space="preserve">
          <source>If the name matches the regular expression &lt;code&gt;
         &quot;-(\\d+(\\.|$))&quot;&lt;/code&gt; then the module name will be derived from the subsequence preceding the hyphen of the first occurrence. The subsequence after the hyphen is parsed as a &lt;a href=&quot;moduledescriptor.version&quot;&gt;&lt;code&gt;Version&lt;/code&gt;&lt;/a&gt; and ignored if it cannot be parsed as a &lt;code&gt;Version&lt;/code&gt;.</source>
          <target state="translated">名前が正規表現 &lt;code&gt; &quot;-(\\d+(\\.|$))&quot;&lt;/code&gt; 一致する場合、モジュール名は最初に出現するハイフンの前のサブシーケンスから取得されます。ハイフンの後のサブシーケンスをとして解析される&lt;a href=&quot;moduledescriptor.version&quot;&gt; &lt;code&gt;Version&lt;/code&gt; &lt;/a&gt;、それは次のように解析できない場合、無視 &lt;code&gt;Version&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c345ae50909ad753edc18ff3d914c0995558637" translate="yes" xml:space="preserve">
          <source>If the named Logger already exists and does not yet have a localization resource bundle then the given resource bundle name is used. If the named Logger already exists and has a different resource bundle name then an IllegalArgumentException is thrown.</source>
          <target state="translated">指定されたロガーが既に存在し、ローカリゼーション リソース バンドルをまだ持っていない場合は、指定されたリソース バンドル名が使用されます。指定されたロガーが既に存在し、異なるリソース バンドル名を持つ場合は、IllegalArgumentException がスローされます。</target>
        </trans-unit>
        <trans-unit id="68506597c2f99be04b0f47ace8cfa88608b7a8be" translate="yes" xml:space="preserve">
          <source>If the named class is not a top-level class, this invocation will have no effect on the actual assertion status of any class.</source>
          <target state="translated">指定されたクラスがトップレベル・クラスでない場合、この呼び出しはどのクラスの実際のアサーション・ステータスにも影響を与えません。</target>
        </trans-unit>
        <trans-unit id="482df42008c5e582c9e2d80de4a8c2c7a964f035" translate="yes" xml:space="preserve">
          <source>If the named file does not exist, is a directory rather than a regular file, or for some other reason cannot be opened for reading then a &lt;code&gt;FileNotFoundException&lt;/code&gt; is thrown.</source>
          <target state="translated">指定されたファイルが存在しない場合、通常のファイルではなくディレクトリの場合、またはその他の理由で読み取り用に開けない場合は、 &lt;code&gt;FileNotFoundException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="95905c4bd2793861fb30aaa68b18d361d2c40205" translate="yes" xml:space="preserve">
          <source>If the named object is not a DirContext, search only the object. If the named object is a DirContext, search the subtree rooted at the named object, including the named object itself.</source>
          <target state="translated">指定されたオブジェクトが DirContext でない場合は、そのオブジェクトのみを検索します。指定されたオブジェクトが DirContext の場合は、指定されたオブジェクトを含む、指定されたオブジェクトのルートにあるサブツリーを検索します。</target>
        </trans-unit>
        <trans-unit id="c355566b5306844a932460e0a37f46753cb3dc74" translate="yes" xml:space="preserve">
          <source>If the namespace-prefixes feature (see above) is &lt;var&gt;false&lt;/var&gt;, access by qualified name may not be available; if the &lt;code&gt;http://xml.org/sax/features/namespaces&lt;/code&gt; feature is &lt;var&gt;false&lt;/var&gt;, access by Namespace-qualified names may not be available.</source>
          <target state="translated">名前空間プレフィックス機能（上記を参照）が &lt;var&gt;false&lt;/var&gt; の場合、修飾名によるアクセスが利用できない可能性があります。 &lt;code&gt;http://xml.org/sax/features/namespaces&lt;/code&gt; 機能が &lt;var&gt;false&lt;/var&gt; の場合、名前空間で修飾された名前によるアクセスが利用できない場合があります。</target>
        </trans-unit>
        <trans-unit id="a797ab321ba29b078906111b6a9d36444e539b67" translate="yes" xml:space="preserve">
          <source>If the nano-of-second is zero or not available then the format is complete.</source>
          <target state="translated">ナノ・オブ・秒がゼロであるか、利用できない場合は、フォーマットが完了していることになります。</target>
        </trans-unit>
        <trans-unit id="7b5bb80313d91ea06fa6a854209eaa7ff1477dde" translate="yes" xml:space="preserve">
          <source>If the natural result is a node set when &lt;code&gt;ANY_TYPE&lt;/code&gt; was requested, then &lt;code&gt;UNORDERED_NODE_ITERATOR_TYPE&lt;/code&gt; is always the resulting type. Any other representation of a node set must be explicitly requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa9630681cd403ee0de2e898abe3034087ed2d1" translate="yes" xml:space="preserve">
          <source>If the nest host of the lookup class of this &lt;code&gt;Lookup&lt;/code&gt; has previously been determined, then let &lt;code&gt;H&lt;/code&gt; be the nest host of the lookup class. Otherwise, the nest host of the lookup class is determined using the algorithm in JVMS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.4.4&quot;&gt;5.4.4&lt;/a&gt;, yielding &lt;code&gt;H&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5582ab669009a8a27be652376823390e57a44c93" translate="yes" xml:space="preserve">
          <source>If the new &lt;code&gt;Node&lt;/code&gt; replaces an existing node the replaced &lt;code&gt;Node&lt;/code&gt; is returned, otherwise &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">新しい &lt;code&gt;Node&lt;/code&gt; が既存のノードを置き換える場合は、置き換えられた &lt;code&gt;Node&lt;/code&gt; が返され &lt;code&gt;null&lt;/code&gt; 。それ以外の場合は、nullが返されます。</target>
        </trans-unit>
        <trans-unit id="2bc796f960d0884f7fa3798155b8968a45c48d83" translate="yes" xml:space="preserve">
          <source>If the new &lt;code&gt;TransferHandler&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method removes the drop target.</source>
          <target state="translated">新しい &lt;code&gt;TransferHandler&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドはドロップターゲットを削除します。</target>
        </trans-unit>
        <trans-unit id="1dda90377648f98704c19dc7bb65377bbe60c5ed" translate="yes" xml:space="preserve">
          <source>If the new &lt;code&gt;TransferHandler&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, this method also installs a &lt;b&gt;new&lt;/b&gt;&lt;code&gt;DropTarget&lt;/code&gt; on the component to activate drop handling through the &lt;code&gt;TransferHandler&lt;/code&gt; and activate any built-in support (such as calculating and displaying potential drop locations). If you do not wish for this component to respond in any way to drops, you can disable drop support entirely either by removing the drop target (&lt;code&gt;setDropTarget(null)&lt;/code&gt;) or by de-activating it (&lt;code&gt;getDropTaget().setActive(false)&lt;/code&gt;).</source>
          <target state="translated">新しい &lt;code&gt;TransferHandler&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合、このメソッドはコンポーネントに&lt;b&gt;新しい&lt;/b&gt; &lt;code&gt;DropTarget&lt;/code&gt; をインストールして、 &lt;code&gt;TransferHandler&lt;/code&gt; を介したドロップ処理をアクティブにし、組み込みのサポート（潜在的なドロップ位置の計算や表示など）をアクティブにします。このコンポーネントがドロップに応答しないようにする場合は、ドロップターゲットを削除するか（ &lt;code&gt;setDropTarget(null)&lt;/code&gt; ）、非アクティブ化する（ &lt;code&gt;getDropTaget().setActive(false)&lt;/code&gt; ）ことで、ドロップサポートを完全に無効にできます。。</target>
        </trans-unit>
        <trans-unit id="0388ea5e05300452be6a29d74452f310aa91ce94" translate="yes" xml:space="preserve">
          <source>If the new extent value is different from the previous extent value, all change listeners are notified.</source>
          <target state="translated">新しいエクステント値が以前のエクステント値と異なる場合は、すべての変更リスナーに通知されます。</target>
        </trans-unit>
        <trans-unit id="18bffcd626a18ef77083ada33a312e98a304ff4c" translate="yes" xml:space="preserve">
          <source>If the new level is null, it means that this node should inherit its level from its nearest ancestor with a specific (non-null) level value.</source>
          <target state="translated">新しいレベルが NULL の場合、このノードは、特定の (非 NULL の)レベル値を持つ最も近い祖先からそのレベルを継承する必要があることを意味します。</target>
        </trans-unit>
        <trans-unit id="e9cd03b46165de5658cfad6de7730a3839030abf" translate="yes" xml:space="preserve">
          <source>If the new lookup class differs from the old one then &lt;code&gt;UNCONDITIONAL&lt;/code&gt; is lost.</source>
          <target state="translated">新しいルックアップクラスが古いルックアップクラスと異なる場合、 &lt;code&gt;UNCONDITIONAL&lt;/code&gt; は失われます。</target>
        </trans-unit>
        <trans-unit id="bc536a2662e091e215ec8f641a7473d3709fe706" translate="yes" xml:space="preserve">
          <source>If the new lookup class differs from the old one, protected members will not be accessible by virtue of inheritance. (Protected members may continue to be accessible because of package sharing.)</source>
          <target state="translated">新しいルックアップクラスが古いものと異なる場合、protectedメンバは継承によってアクセスできなくなります。(保護されたメンバーはパッケージの共有のためにアクセス可能な状態が続くかもしれません)。</target>
        </trans-unit>
        <trans-unit id="3e53f9b359a105bac148750d2761e52e1cd4e8b5" translate="yes" xml:space="preserve">
          <source>If the new lookup class is in a different module from the old lookup class, the new previous lookup class is the old lookup class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ba8835bff009366d798076903baa59224c126e" translate="yes" xml:space="preserve">
          <source>If the new lookup class is in a different module from the old one, i.e. &lt;a href=&quot;#MODULE&quot;&gt;&lt;code&gt;MODULE&lt;/code&gt;&lt;/a&gt; access is lost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a377cca7fdb7bec2b3b01bf2e347da0c2ef86e72" translate="yes" xml:space="preserve">
          <source>If the new lookup class is in a different package than the old one, protected and default (package) members will not be accessible, i.e. &lt;a href=&quot;#PROTECTED&quot;&gt;&lt;code&gt;PROTECTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt; access are lost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f2db2d23a3b70ce0836cac49cb47c5b9f6353f" translate="yes" xml:space="preserve">
          <source>If the new lookup class is in a different package than the old one, protected and default (package) members will not be accessible.</source>
          <target state="translated">新しいルックアップクラスが古いものとは異なるパッケージにある場合、 protected と default (パッケージ)のメンバーにはアクセスできません。</target>
        </trans-unit>
        <trans-unit id="68dca4027c2017d1c1cfe6cad29219610bdc524e" translate="yes" xml:space="preserve">
          <source>If the new lookup class is in the same module as the old lookup class, the new previous lookup class is the old previous lookup class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea2f0333a7bf60c58a21448f2c80569656a34b7" translate="yes" xml:space="preserve">
          <source>If the new lookup class is not &lt;a href=&quot;#accessClass(java.lang.Class)&quot;&gt;accessible&lt;/a&gt; to this lookup, then no members, not even public members, will be accessible i.e. all access modes are lost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca96aa918a0139c5241a9be60ea7a47fde358969" translate="yes" xml:space="preserve">
          <source>If the new lookup class is not accessible to the old lookup class, then no members, not even public members, will be accessible. (In all other cases, public members will continue to be accessible.)</source>
          <target state="translated">新しいルックアップクラスが古いルックアップクラスにアクセスできない場合、パブリックメンバーでさえもアクセスできなくなります。(それ以外のすべての場合、パブリック・メンバーは引き続きアクセス可能です)。</target>
        </trans-unit>
        <trans-unit id="70a1ed61c4e5681283e25d035abcda938a4809a1" translate="yes" xml:space="preserve">
          <source>If the new lookup class is not within the same package member as the old one, private members will not be accessible, and protected members will not be accessible by virtue of inheritance, i.e. &lt;a href=&quot;#PRIVATE&quot;&gt;&lt;code&gt;PRIVATE&lt;/code&gt;&lt;/a&gt; access is lost. (Protected members may continue to be accessible because of package sharing.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f23def278f0153e203621371a62fdba4471bd7" translate="yes" xml:space="preserve">
          <source>If the new lookup class is not within the same package member as the old one, private members will not be accessible, and protected members will not be accessible by virtue of inheritance. (Protected members may continue to be accessible because of package sharing.)</source>
          <target state="translated">新しいルックアップ・クラスが古いものと同じパッケージ・メンバー内にない場合、プライベート・メンバーにはアクセスできませんし、保護されたメンバーには継承によってアクセスできなくなります。(保護されたメンバーは、パッケージの共有のためにアクセス可能な状態が続くかもしれません)。</target>
        </trans-unit>
        <trans-unit id="1a7e98a2066ab4c0cf93405953a8d0cbcca7cb64" translate="yes" xml:space="preserve">
          <source>If the new lookup class is not within the same package member as the old one, private members will not be accessible.</source>
          <target state="translated">新しいルックアップ・クラスが古いものと同じパッケージ・メンバー内にない場合、プライベート・メンバーにはアクセスできません。</target>
        </trans-unit>
        <trans-unit id="603c087e553c404966d23a0567bdcc13996bea64" translate="yes" xml:space="preserve">
          <source>If the new lookup class, the old lookup class and the previous lookup class are all in different modules i.e. teleporting to a third module, all access modes are lost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe55e352ffb78a39a10dfbfe04744d52fb7c8ef9" translate="yes" xml:space="preserve">
          <source>If the new lookup object has &lt;a href=&quot;#UNCONDITIONAL&quot;&gt;&lt;code&gt;UNCONDITIONAL&lt;/code&gt;&lt;/a&gt; bit, the new previous lookup class is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacfac52fe886f7cd2e9a3abcbc070941615f373" translate="yes" xml:space="preserve">
          <source>If the new maximum value is different from the previous maximum value, all change listeners are notified.</source>
          <target state="translated">新しい最大値が以前の最大値と異なる場合は、すべての変更リスナーに通知されます。</target>
        </trans-unit>
        <trans-unit id="86bb426f7dca2fb9a6984cb3ba264576f8178a89" translate="yes" xml:space="preserve">
          <source>If the new minimum value is different from the previous minimum value, all change listeners are notified.</source>
          <target state="translated">新しい最小値が以前の最小値と異なる場合は、すべての変更リスナーに通知されます。</target>
        </trans-unit>
        <trans-unit id="5c61d4985d9e12a6258d359254a6ef98f882749e" translate="yes" xml:space="preserve">
          <source>If the new value is different from the previous value, all change listeners are notified.</source>
          <target state="translated">新しい値が以前の値と異なる場合は、すべての変更リスナーに通知されます。</target>
        </trans-unit>
        <trans-unit id="dd3bd21f414045efb5b6e0572af661119b6ef82c" translate="yes" xml:space="preserve">
          <source>If the next token matches the &lt;a href=&quot;#Decimal-regex&quot;&gt;&lt;i&gt;Decimal&lt;/i&gt;&lt;/a&gt; regular expression defined above then the token is converted into a &lt;code&gt;BigDecimal&lt;/code&gt; value as if by removing all group separators, mapping non-ASCII digits into ASCII digits via the &lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, and passing the resulting string to the &lt;a href=&quot;../math/bigdecimal#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">次のトークンが上記で定義された&lt;a href=&quot;#Decimal-regex&quot;&gt;&lt;i&gt;Decimal&lt;/i&gt;&lt;/a&gt;正規表現と一致する場合、トークンは、すべてのグループセパレータを削除し、&lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; &lt;/a&gt;を介して非ASCII数字をASCII数字にマッピングし、結果の文字列を&lt;a href=&quot;../math/bigdecimal#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt;渡すことによって、 &lt;code&gt;BigDecimal&lt;/code&gt; 値に変換されます。（文字列）コンストラクタ。</target>
        </trans-unit>
        <trans-unit id="070950b6983687a52f5c8a4982aa2eebcfd77d61" translate="yes" xml:space="preserve">
          <source>If the next token matches the &lt;a href=&quot;#Decimal-regex&quot;&gt;&lt;i&gt;Decimal&lt;/i&gt;&lt;/a&gt; regular expression defined above then the token is converted into a &lt;code&gt;BigDecimal&lt;/code&gt; value as if by removing all group separators, mapping non-ASCII digits into ASCII digits via the &lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, and passing the resulting string to the &lt;a href=&quot;../math/bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">次のトークンが上記で定義された&lt;a href=&quot;#Decimal-regex&quot;&gt;&lt;i&gt;Decimal&lt;/i&gt;&lt;/a&gt;正規表現と一致する場合、すべてのグループセパレーターを削除し、ASCII以外の数字を&lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; &lt;/a&gt;を介してASCII数字にマッピングし、結果の文字列を&lt;a href=&quot;../math/bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt;渡すかのように、トークンは &lt;code&gt;BigDecimal&lt;/code&gt; 値に変換されます。（文字列）コンストラクタ。</target>
        </trans-unit>
        <trans-unit id="efd903809d871bfd2261f9bb7c6f8847849f99dc" translate="yes" xml:space="preserve">
          <source>If the next token matches the &lt;a href=&quot;#Float-regex&quot;&gt;&lt;i&gt;Float&lt;/i&gt;&lt;/a&gt; regular expression defined above then the token is converted into a &lt;code&gt;double&lt;/code&gt; value as if by removing all locale specific prefixes, group separators, and locale specific suffixes, then mapping non-ASCII digits into ASCII digits via &lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, prepending a negative sign (-) if the locale specific negative prefixes and suffixes were present, and passing the resulting string to &lt;a href=&quot;../lang/double#parseDouble(java.lang.String)&quot;&gt;&lt;code&gt;Double.parseDouble&lt;/code&gt;&lt;/a&gt;. If the token matches the localized NaN or infinity strings, then either &quot;Nan&quot; or &quot;Infinity&quot; is passed to &lt;a href=&quot;../lang/double#parseDouble(java.lang.String)&quot;&gt;&lt;code&gt;Double.parseDouble&lt;/code&gt;&lt;/a&gt; as appropriate.</source>
          <target state="translated">次のトークンが上記で定義された&lt;a href=&quot;#Float-regex&quot;&gt;&lt;i&gt;Float&lt;/i&gt;&lt;/a&gt;正規表現と一致する場合、トークンは、ロケール固有のプレフィックス、グループセパレータ、およびロケール固有のサフィックスをすべて削除し、&lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; を&lt;/a&gt;介して非ASCII数字をASCII数字にマッピングするかのように &lt;code&gt;double&lt;/code&gt; 値に変換されます。、ロケール固有の負のプレフィックスとサフィックスが存在する場合は負の符号（-）を&lt;a href=&quot;../lang/double#parseDouble(java.lang.String)&quot;&gt; &lt;code&gt;Double.parseDouble&lt;/code&gt; &lt;/a&gt;、結果の文字列をDouble.parseDoubleに渡します。トークンがローカライズされたNaNまたは無限大の文字列と一致する場合、「Nan」または「Infinity」のいずれかが必要に応じて&lt;a href=&quot;../lang/double#parseDouble(java.lang.String)&quot;&gt; &lt;code&gt;Double.parseDouble&lt;/code&gt; に渡さ&lt;/a&gt;れます。</target>
        </trans-unit>
        <trans-unit id="e2b55b595ce54b4c7a0ff65ce30ecb0da6b4383c" translate="yes" xml:space="preserve">
          <source>If the next token matches the &lt;a href=&quot;#Float-regex&quot;&gt;&lt;i&gt;Float&lt;/i&gt;&lt;/a&gt; regular expression defined above then the token is converted into a &lt;code&gt;double&lt;/code&gt; value as if by removing all locale specific prefixes, group separators, and locale specific suffixes, then mapping non-ASCII digits into ASCII digits via &lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, prepending a negative sign (-) if the locale specific negative prefixes and suffixes were present, and passing the resulting string to &lt;a href=&quot;../lang/double#parseDouble-java.lang.String-&quot;&gt;&lt;code&gt;Double.parseDouble&lt;/code&gt;&lt;/a&gt;. If the token matches the localized NaN or infinity strings, then either &quot;Nan&quot; or &quot;Infinity&quot; is passed to &lt;a href=&quot;../lang/double#parseDouble-java.lang.String-&quot;&gt;&lt;code&gt;Double.parseDouble&lt;/code&gt;&lt;/a&gt; as appropriate.</source>
          <target state="translated">次のトークンが上記で定義された&lt;a href=&quot;#Float-regex&quot;&gt;&lt;i&gt;Float&lt;/i&gt;&lt;/a&gt;正規表現に一致する場合、すべてのロケール固有のプレフィックス、グループセパレーター、およびロケール固有のサフィックスを削除し、&lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; を&lt;/a&gt;介して非ASCII桁をASCII桁にマッピングすることにより、トークンは &lt;code&gt;double&lt;/code&gt; 値に変換されます。、ロケール固有の負の接頭辞と接尾辞が存在する場合は負符号（-）を前に付け、結果の文字列を&lt;a href=&quot;../lang/double#parseDouble-java.lang.String-&quot;&gt; &lt;code&gt;Double.parseDouble&lt;/code&gt; に渡し&lt;/a&gt;ます。トークンがローカライズされたNaNまたは無限文字列と一致する場合、「Nan」または「Infinity」が&lt;a href=&quot;../lang/double#parseDouble-java.lang.String-&quot;&gt; &lt;code&gt;Double.parseDouble&lt;/code&gt; &lt;/a&gt;に適宜渡されます。</target>
        </trans-unit>
        <trans-unit id="3eb97346bea3b5a1c66d1ff73d9a7571c94316bf" translate="yes" xml:space="preserve">
          <source>If the next token matches the &lt;a href=&quot;#Float-regex&quot;&gt;&lt;i&gt;Float&lt;/i&gt;&lt;/a&gt; regular expression defined above then the token is converted into a &lt;code&gt;float&lt;/code&gt; value as if by removing all locale specific prefixes, group separators, and locale specific suffixes, then mapping non-ASCII digits into ASCII digits via &lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, prepending a negative sign (-) if the locale specific negative prefixes and suffixes were present, and passing the resulting string to &lt;a href=&quot;../lang/float#parseFloat(java.lang.String)&quot;&gt;&lt;code&gt;Float.parseFloat&lt;/code&gt;&lt;/a&gt;. If the token matches the localized NaN or infinity strings, then either &quot;Nan&quot; or &quot;Infinity&quot; is passed to &lt;a href=&quot;../lang/float#parseFloat(java.lang.String)&quot;&gt;&lt;code&gt;Float.parseFloat&lt;/code&gt;&lt;/a&gt; as appropriate.</source>
          <target state="translated">次のトークンが上記で定義された&lt;a href=&quot;#Float-regex&quot;&gt;&lt;i&gt;Float&lt;/i&gt;&lt;/a&gt;正規表現と一致する場合、トークンは、ロケール固有のプレフィックス、グループセパレータ、およびロケール固有のサフィックスをすべて削除し、&lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; を&lt;/a&gt;介して非ASCII数字をASCII数字にマッピングするかのように、 &lt;code&gt;float&lt;/code&gt; 値に変換されます。、ロケール固有の負のプレフィックスとサフィックスが存在する場合は負の符号（-）を&lt;a href=&quot;../lang/float#parseFloat(java.lang.String)&quot;&gt; &lt;code&gt;Float.parseFloat&lt;/code&gt; &lt;/a&gt;、結果の文字列をFloat.parseFloatに渡します。トークンがローカライズされたNaNまたは無限大の文字列と一致する場合、「Nan」または「Infinity」のいずれかが必要に応じて&lt;a href=&quot;../lang/float#parseFloat(java.lang.String)&quot;&gt; &lt;code&gt;Float.parseFloat&lt;/code&gt; に渡さ&lt;/a&gt;れます。</target>
        </trans-unit>
        <trans-unit id="6a79c16b442949a70d19c9e0f0f3c3e6d85edf9f" translate="yes" xml:space="preserve">
          <source>If the next token matches the &lt;a href=&quot;#Float-regex&quot;&gt;&lt;i&gt;Float&lt;/i&gt;&lt;/a&gt; regular expression defined above then the token is converted into a &lt;code&gt;float&lt;/code&gt; value as if by removing all locale specific prefixes, group separators, and locale specific suffixes, then mapping non-ASCII digits into ASCII digits via &lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, prepending a negative sign (-) if the locale specific negative prefixes and suffixes were present, and passing the resulting string to &lt;a href=&quot;../lang/float#parseFloat-java.lang.String-&quot;&gt;&lt;code&gt;Float.parseFloat&lt;/code&gt;&lt;/a&gt;. If the token matches the localized NaN or infinity strings, then either &quot;Nan&quot; or &quot;Infinity&quot; is passed to &lt;a href=&quot;../lang/float#parseFloat-java.lang.String-&quot;&gt;&lt;code&gt;Float.parseFloat&lt;/code&gt;&lt;/a&gt; as appropriate.</source>
          <target state="translated">次のトークンが上記で定義された&lt;a href=&quot;#Float-regex&quot;&gt;&lt;i&gt;Float&lt;/i&gt;&lt;/a&gt;正規表現と一致する場合、すべてのロケール固有の接頭辞、グループ区切り文字、およびロケール固有の接尾辞を削除し、&lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; を&lt;/a&gt;介して非ASCII数字をASCII数字にマッピングするかのように、トークンは &lt;code&gt;float&lt;/code&gt; 値に変換されます。、ロケール固有の負の接頭辞と接尾辞が存在する場合は負の符号（-）を前に付け、結果の文字列を&lt;a href=&quot;../lang/float#parseFloat-java.lang.String-&quot;&gt; &lt;code&gt;Float.parseFloat&lt;/code&gt; に渡し&lt;/a&gt;ます。トークンがローカライズされたNaNまたは無限文字列と一致する場合、「Nan」または「Infinity」のいずれかが&lt;a href=&quot;../lang/float#parseFloat-java.lang.String-&quot;&gt; &lt;code&gt;Float.parseFloat&lt;/code&gt; &lt;/a&gt;に適切に渡されます。</target>
        </trans-unit>
        <trans-unit id="5d2ff6a2387c543b478a622ed06f1bb7df0d7421" translate="yes" xml:space="preserve">
          <source>If the next token matches the &lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;Integer&lt;/i&gt;&lt;/a&gt; regular expression defined above then the token is converted into a &lt;code&gt;BigInteger&lt;/code&gt; value as if by removing all group separators, mapping non-ASCII digits into ASCII digits via the &lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, and passing the resulting string to the &lt;a href=&quot;../math/biginteger#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigInteger(String, int)&lt;/code&gt;&lt;/a&gt; constructor with the specified radix.</source>
          <target state="translated">次のトークンが上記で定義された&lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;整数&lt;/i&gt;&lt;/a&gt;正規式と一致する場合、トークンは、すべてのグループ区切り文字を削除し、&lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; &lt;/a&gt;を介して非ASCII数字をASCII数字にマッピングし、結果の文字列を&lt;a href=&quot;../math/biginteger#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigInteger(String, int)&lt;/code&gt; &lt;/a&gt;渡すことによって、 &lt;code&gt;BigInteger&lt;/code&gt; 値に変換されます。（String、int）指定されたradixのコンストラクター。</target>
        </trans-unit>
        <trans-unit id="1a4727cf6304247402307e6eaca3eff6d0258644" translate="yes" xml:space="preserve">
          <source>If the next token matches the &lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;Integer&lt;/i&gt;&lt;/a&gt; regular expression defined above then the token is converted into a &lt;code&gt;BigInteger&lt;/code&gt; value as if by removing all group separators, mapping non-ASCII digits into ASCII digits via the &lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, and passing the resulting string to the &lt;a href=&quot;../math/biginteger#BigInteger-java.lang.String-&quot;&gt;&lt;code&gt;BigInteger(String, int)&lt;/code&gt;&lt;/a&gt; constructor with the specified radix.</source>
          <target state="translated">次のトークンが上記で定義された&lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;Integer&lt;/i&gt;&lt;/a&gt;正規表現と一致する場合、すべてのグループセパレーターを削除し、ASCII以外の数字を&lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; &lt;/a&gt;を介してASCII数字にマッピングし、結果の文字列を&lt;a href=&quot;../math/biginteger#BigInteger-java.lang.String-&quot;&gt; &lt;code&gt;BigInteger(String, int)&lt;/code&gt; &lt;/a&gt;渡すかのように、トークンは &lt;code&gt;BigInteger&lt;/code&gt; 値に変換されます。（String、int）指定された基数を持つコンストラクター。</target>
        </trans-unit>
        <trans-unit id="fac93df718c735e73535bc4d3d4b9324ef4c5caf" translate="yes" xml:space="preserve">
          <source>If the next token matches the &lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;Integer&lt;/i&gt;&lt;/a&gt; regular expression defined above then the token is converted into a &lt;code&gt;byte&lt;/code&gt; value as if by removing all locale specific prefixes, group separators, and locale specific suffixes, then mapping non-ASCII digits into ASCII digits via &lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, prepending a negative sign (-) if the locale specific negative prefixes and suffixes were present, and passing the resulting string to &lt;a href=&quot;../lang/byte#parseByte(java.lang.String,int)&quot;&gt;&lt;code&gt;Byte.parseByte&lt;/code&gt;&lt;/a&gt; with the specified radix.</source>
          <target state="translated">次のトークンが上記で定義された&lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;整数&lt;/i&gt;&lt;/a&gt;正規表現と一致する場合、トークンは、ロケール固有のプレフィックス、グループセパレータ、およびロケール固有のサフィックスをすべて削除し、&lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; を&lt;/a&gt;介して非ASCII数字をASCII数字にマッピングするかのように &lt;code&gt;byte&lt;/code&gt; 値に変換されます。、ロケール固有の負のプレフィックスとサフィックスが存在する場合は負の符号（-）を&lt;a href=&quot;../lang/byte#parseByte(java.lang.String,int)&quot;&gt; &lt;code&gt;Byte.parseByte&lt;/code&gt; &lt;/a&gt;し、結果の文字列を指定された基数でByte.parseByteに渡します。</target>
        </trans-unit>
        <trans-unit id="12b289473a0cfbe9016bed30eea7221cdd374181" translate="yes" xml:space="preserve">
          <source>If the next token matches the &lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;Integer&lt;/i&gt;&lt;/a&gt; regular expression defined above then the token is converted into a &lt;code&gt;byte&lt;/code&gt; value as if by removing all locale specific prefixes, group separators, and locale specific suffixes, then mapping non-ASCII digits into ASCII digits via &lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, prepending a negative sign (-) if the locale specific negative prefixes and suffixes were present, and passing the resulting string to &lt;a href=&quot;../lang/byte#parseByte-java.lang.String-int-&quot;&gt;&lt;code&gt;Byte.parseByte&lt;/code&gt;&lt;/a&gt; with the specified radix.</source>
          <target state="translated">次のトークンが上記で定義された&lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;整数&lt;/i&gt;&lt;/a&gt;正規表現と一致する場合、すべてのロケール固有のプレフィックス、グループセパレーター、およびロケール固有のサフィックスを削除し、&lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; を&lt;/a&gt;介して非ASCII桁をASCII桁にマッピングすることによって、トークンは &lt;code&gt;byte&lt;/code&gt; 値に変換されます。、ロケール固有の負の接頭辞と接尾辞が存在する場合は負の符号（-）を前に付け、結果の文字列を指定された基数で&lt;a href=&quot;../lang/byte#parseByte-java.lang.String-int-&quot;&gt; &lt;code&gt;Byte.parseByte&lt;/code&gt; に渡し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="3589f798ea949bb8459c5766611ecd61d78cc6ed" translate="yes" xml:space="preserve">
          <source>If the next token matches the &lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;Integer&lt;/i&gt;&lt;/a&gt; regular expression defined above then the token is converted into a &lt;code&gt;long&lt;/code&gt; value as if by removing all locale specific prefixes, group separators, and locale specific suffixes, then mapping non-ASCII digits into ASCII digits via &lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, prepending a negative sign (-) if the locale specific negative prefixes and suffixes were present, and passing the resulting string to &lt;a href=&quot;../lang/long#parseLong(java.lang.String,int)&quot;&gt;&lt;code&gt;Long.parseLong&lt;/code&gt;&lt;/a&gt; with the specified radix.</source>
          <target state="translated">次のトークンが上記で定義された&lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;整数&lt;/i&gt;&lt;/a&gt;正規表現と一致する場合、トークンは、ロケール固有のプレフィックス、グループセパレータ、およびロケール固有のサフィックスをすべて削除し、&lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; を&lt;/a&gt;介して非ASCII数字をASCII数字にマッピングするかのように、 &lt;code&gt;long&lt;/code&gt; 値に変換されます。、ロケール固有の負のプレフィックスとサフィックスが存在する場合は負の符号（-）を&lt;a href=&quot;../lang/long#parseLong(java.lang.String,int)&quot;&gt; &lt;code&gt;Long.parseLong&lt;/code&gt; &lt;/a&gt;し、結果の文字列を指定された基数でLong.parseLongに渡します。</target>
        </trans-unit>
        <trans-unit id="b349deb1d290eaa1752d8feff84d8af8caefc093" translate="yes" xml:space="preserve">
          <source>If the next token matches the &lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;Integer&lt;/i&gt;&lt;/a&gt; regular expression defined above then the token is converted into a &lt;code&gt;long&lt;/code&gt; value as if by removing all locale specific prefixes, group separators, and locale specific suffixes, then mapping non-ASCII digits into ASCII digits via &lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, prepending a negative sign (-) if the locale specific negative prefixes and suffixes were present, and passing the resulting string to &lt;a href=&quot;../lang/long#parseLong-java.lang.String-int-&quot;&gt;&lt;code&gt;Long.parseLong&lt;/code&gt;&lt;/a&gt; with the specified radix.</source>
          <target state="translated">次のトークンが上記で定義された&lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;整数の&lt;/i&gt;&lt;/a&gt;正規表現と一致する場合、すべてのロケール固有のプレフィックス、グループセパレーター、およびロケール固有のサフィックスを削除し、&lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; を&lt;/a&gt;介して非ASCII数字をASCII数字にマッピングするかのように、トークンは &lt;code&gt;long&lt;/code&gt; 値に変換されます。、ロケール固有の負の接頭辞と接尾辞が存在する場合は負の符号（-）を前に付け、結果の文字列を指定された基数で&lt;a href=&quot;../lang/long#parseLong-java.lang.String-int-&quot;&gt; &lt;code&gt;Long.parseLong&lt;/code&gt; に渡し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="b68e5822216b2d7fa77ca18249aad6224e4ec92a" translate="yes" xml:space="preserve">
          <source>If the next token matches the &lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;Integer&lt;/i&gt;&lt;/a&gt; regular expression defined above then the token is converted into a &lt;code&gt;short&lt;/code&gt; value as if by removing all locale specific prefixes, group separators, and locale specific suffixes, then mapping non-ASCII digits into ASCII digits via &lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, prepending a negative sign (-) if the locale specific negative prefixes and suffixes were present, and passing the resulting string to &lt;a href=&quot;../lang/short#parseShort(java.lang.String,int)&quot;&gt;&lt;code&gt;Short.parseShort&lt;/code&gt;&lt;/a&gt; with the specified radix.</source>
          <target state="translated">次のトークンが上記で定義された&lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;整数&lt;/i&gt;&lt;/a&gt;正規表現と一致する場合、トークンは、ロケール固有のプレフィックス、グループセパレータ、およびロケール固有のサフィックスをすべて削除し、&lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; を&lt;/a&gt;介して非ASCII数字をASCII数字にマッピングするかのように、 &lt;code&gt;short&lt;/code&gt; 値に変換されます。、ロケール固有の負のプレフィックスとサフィックスが存在する場合は負の符号（-）を&lt;a href=&quot;../lang/short#parseShort(java.lang.String,int)&quot;&gt; &lt;code&gt;Short.parseShort&lt;/code&gt; &lt;/a&gt;し、結果の文字列を指定された基数でShort.parseShortに渡します。</target>
        </trans-unit>
        <trans-unit id="cde2372e3435e6554a5b5741f761096f7eea5fcf" translate="yes" xml:space="preserve">
          <source>If the next token matches the &lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;Integer&lt;/i&gt;&lt;/a&gt; regular expression defined above then the token is converted into a &lt;code&gt;short&lt;/code&gt; value as if by removing all locale specific prefixes, group separators, and locale specific suffixes, then mapping non-ASCII digits into ASCII digits via &lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, prepending a negative sign (-) if the locale specific negative prefixes and suffixes were present, and passing the resulting string to &lt;a href=&quot;../lang/short#parseShort-java.lang.String-int-&quot;&gt;&lt;code&gt;Short.parseShort&lt;/code&gt;&lt;/a&gt; with the specified radix.</source>
          <target state="translated">次のトークンが上記で定義された&lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;整数&lt;/i&gt;&lt;/a&gt;正規表現と一致する場合、トークンは、すべてのロケール固有のプレフィックス、グループセパレーター、およびロケール固有のサフィックスを削除し、&lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; を&lt;/a&gt;介して非ASCII桁をASCII桁にマッピングすることによって、 &lt;code&gt;short&lt;/code&gt; 値に変換されます。、ロケール固有の負の接頭辞と接尾辞が存在する場合は負の符号（-）を前に付け、結果の文字列を指定された基数で&lt;a href=&quot;../lang/short#parseShort-java.lang.String-int-&quot;&gt; &lt;code&gt;Short.parseShort&lt;/code&gt; に渡し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="d5aa82aacf2b2fd955865f9e55427bb7ea1a38f3" translate="yes" xml:space="preserve">
          <source>If the next token matches the &lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;Integer&lt;/i&gt;&lt;/a&gt; regular expression defined above then the token is converted into an &lt;code&gt;int&lt;/code&gt; value as if by removing all locale specific prefixes, group separators, and locale specific suffixes, then mapping non-ASCII digits into ASCII digits via &lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, prepending a negative sign (-) if the locale specific negative prefixes and suffixes were present, and passing the resulting string to &lt;a href=&quot;../lang/integer#parseInt(java.lang.String,int)&quot;&gt;&lt;code&gt;Integer.parseInt&lt;/code&gt;&lt;/a&gt; with the specified radix.</source>
          <target state="translated">次のトークンが上記で定義された&lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;整数&lt;/i&gt;&lt;/a&gt;正規表現と一致する場合、トークンは、ロケール固有のプレフィックス、グループセパレータ、およびロケール固有のサフィックスをすべて削除し、&lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; を&lt;/a&gt;介して非ASCII数字をASCII数字にマッピングするかのように、 &lt;code&gt;int&lt;/code&gt; 値に変換されます。、ロケール固有の負のプレフィックスとサフィックスが存在する場合は負の符号（-）を&lt;a href=&quot;../lang/integer#parseInt(java.lang.String,int)&quot;&gt; &lt;code&gt;Integer.parseInt&lt;/code&gt; &lt;/a&gt;し、結果の文字列を指定された基数でInteger.parseIntに渡します。</target>
        </trans-unit>
        <trans-unit id="e2e6b9af16a7a0f10ca898c5788d2527ee4c8561" translate="yes" xml:space="preserve">
          <source>If the next token matches the &lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;Integer&lt;/i&gt;&lt;/a&gt; regular expression defined above then the token is converted into an &lt;code&gt;int&lt;/code&gt; value as if by removing all locale specific prefixes, group separators, and locale specific suffixes, then mapping non-ASCII digits into ASCII digits via &lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, prepending a negative sign (-) if the locale specific negative prefixes and suffixes were present, and passing the resulting string to &lt;a href=&quot;../lang/integer#parseInt-java.lang.String-int-&quot;&gt;&lt;code&gt;Integer.parseInt&lt;/code&gt;&lt;/a&gt; with the specified radix.</source>
          <target state="translated">次のトークンが上記で定義された&lt;a href=&quot;#Integer-regex&quot;&gt;&lt;i&gt;整数の&lt;/i&gt;&lt;/a&gt;正規表現と一致する場合、すべてのロケール固有のプレフィックス、グループセパレーター、およびロケール固有のサフィックスを削除し、&lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; を&lt;/a&gt;介して非ASCII桁をASCII桁にマッピングすることによって、トークンは &lt;code&gt;int&lt;/code&gt; 値に変換されます。、ロケール固有の負の接頭辞と接尾辞が存在する場合は負の符号（-）を前に付け、結果の文字列を指定された基数で&lt;a href=&quot;../lang/integer#parseInt-java.lang.String-int-&quot;&gt; &lt;code&gt;Integer.parseInt&lt;/code&gt; に&lt;/a&gt;渡します。</target>
        </trans-unit>
        <trans-unit id="f51b9968b885ef1885dbe34821dc425278cfb9c3" translate="yes" xml:space="preserve">
          <source>If the node being visited has more than one child, the result will be determined by calling &lt;code&gt;scan&lt;/code&gt; each child in turn, and then combining the result of each scan after the first with the cumulative result so far, as determined by the &lt;a href=&quot;#reduce(R,R)&quot;&gt;&lt;code&gt;reduce(R, R)&lt;/code&gt;&lt;/a&gt; method. Each child may be either a simple node of a list of nodes. The default behavior of the &lt;code&gt;reduce&lt;/code&gt; method is such that the result of the visitXYZ method will be the result of the last child scanned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c52658cbffb38373b711425c29a4d9b7f3c889c" translate="yes" xml:space="preserve">
          <source>If the node being visited has no children, the result will be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77bd3efb080ea23321f595eec5e2b18f84442b5f" translate="yes" xml:space="preserve">
          <source>If the node being visited has one child, the result will be the result of calling &lt;code&gt;scan&lt;/code&gt; on that child. The child may be a simple node or itself a list of nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50647ef6cfa173ffb331678172077c93b906dc08" translate="yes" xml:space="preserve">
          <source>If the number is followed by a colon, it is regarded as an hour, unless an hour has already been recognized, in which case it is regarded as a minute.</source>
          <target state="translated">数字の後にコロンが続く場合は、すでに1時間が認識されていない限り1時間とみなされ、その場合は1分とみなされます。</target>
        </trans-unit>
        <trans-unit id="2185b02dab1b8be5d039095147b6a86e141a45f4" translate="yes" xml:space="preserve">
          <source>If the number is followed by a slash, it is regarded as a month (it is decreased by 1 to produce a number in the range &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;11&lt;/code&gt;), unless a month has already been recognized, in which case it is regarded as a day of the month.</source>
          <target state="translated">数字の後にスラッシュが付いている場合、月が認識されていない限り、月と見なされます（1を減じて &lt;code&gt;0&lt;/code&gt; から &lt;code&gt;11&lt;/code&gt; の範囲の数値が生成されます）。その場合、月と見なされます。今月の。</target>
        </trans-unit>
        <trans-unit id="24c204655d0c4e49fdb27ee92ac3fcb02b0bfac3" translate="yes" xml:space="preserve">
          <source>If the number is followed by whitespace, a comma, a hyphen, or end of string, then if an hour has been recognized but not a minute, it is regarded as a minute; otherwise, if a minute has been recognized but not a second, it is regarded as a second; otherwise, it is regarded as a day of the month.</source>
          <target state="translated">数字の後に空白、カンマ、ハイフン、文字列の末尾が続く場合、時が認識されていても分が認識されていない場合は分とみなされ、そうでない場合は分が認識されていても秒が認識されていない場合は秒とみなされ、そうでない場合は月の日とみなされます。</target>
        </trans-unit>
        <trans-unit id="6291ad948edcd3847ce9e2ff7d5cea133a2c5935" translate="yes" xml:space="preserve">
          <source>If the number of arguments in the specified constructor is non-zero and the class of &lt;code&gt;oldInstance&lt;/code&gt; explicitly declares an &quot;equals&quot; method this method returns the value of &lt;code&gt;oldInstance.equals(newInstance)&lt;/code&gt;.</source>
          <target state="translated">指定されたコンストラクターの引数の数がゼロ以外であり、 &lt;code&gt;oldInstance&lt;/code&gt; のクラスが明示的に「equals」メソッドを宣言している場合、このメソッドは &lt;code&gt;oldInstance.equals(newInstance)&lt;/code&gt; の値を返します。</target>
        </trans-unit>
        <trans-unit id="28b1d7370c2a1b58a891d34fad7ee082b38756d3" translate="yes" xml:space="preserve">
          <source>If the number of arguments in the specified constructor is non-zero and the class of &lt;code&gt;oldInstance&lt;/code&gt; explicitly declares an &quot;equals&quot; method this method returns the value of &lt;code&gt;oldInstance.equals(newInstance)&lt;/code&gt;. Otherwise, this method uses the superclass's definition which returns true if the classes of the two instances are equal.</source>
          <target state="translated">指定されたコンストラクターの引数の数がゼロ以外で、 &lt;code&gt;oldInstance&lt;/code&gt; のクラスが明示的に &quot;equals&quot;メソッドを宣言している場合、このメソッドは &lt;code&gt;oldInstance.equals(newInstance)&lt;/code&gt; の値を返します。それ以外の場合、このメソッドは、2つのインスタンスのクラスが等しい場合にtrueを返すスーパークラスの定義を使用します。</target>
        </trans-unit>
        <trans-unit id="c24fe213e64505f30b52e8476bd73dee9a4a91ca" translate="yes" xml:space="preserve">
          <source>If the number of bands is more than one, the SampleModel will be a SinglePixelPackedSampleModel, with each band having bitsPerBand bits. In either case, the requirements on dataType and bitsPerBand imposed by the corresponding SampleModel must be met.</source>
          <target state="translated">バンド数が複数の場合、SampleModel は SinglePixelPackedSampleModel となり、各バンドは bitsPerBand のビット数を持ちます。いずれの場合も、対応する SampleModel によって課される dataType と bitsPerBand の要件を満たさなければなりません。</target>
        </trans-unit>
        <trans-unit id="d4af9d2d4726a8f3ade67f849e06bc1d1ab1564a" translate="yes" xml:space="preserve">
          <source>If the number of formal parameters required by the underlying constructor is 0, the supplied &lt;code&gt;initargs&lt;/code&gt; array may be of length 0 or null.</source>
          <target state="translated">基になるコンストラクターに必要な仮パラメーターの数が0の場合、提供される &lt;code&gt;initargs&lt;/code&gt; 配列は長さが0またはnullになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="1a45750d8cf5475f9813ae9cb718f088a466add3" translate="yes" xml:space="preserve">
          <source>If the number of formal parameters required by the underlying method is 0, the supplied &lt;code&gt;args&lt;/code&gt; array may be of length 0 or null.</source>
          <target state="translated">基になるメソッドで必要な仮パラメーターの数が0の場合、指定された &lt;code&gt;args&lt;/code&gt; 配列は長さ0またはnullになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="d6aa952eaa67d2b3ae4ac72907b831466314c9b3" translate="yes" xml:space="preserve">
          <source>If the number of pattern letters is 4 or more, &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; is thrown when constructing a &lt;code&gt;
     SimpleDateFormat&lt;/code&gt; or &lt;a href=&quot;#applyPattern(java.lang.String)&quot;&gt;applying a pattern&lt;/a&gt;.</source>
          <target state="translated">パターン文字の数が4以上の場合、 &lt;code&gt; SimpleDateFormat&lt;/code&gt; を作成するとき、または&lt;a href=&quot;#applyPattern(java.lang.String)&quot;&gt;パターンを適用する&lt;/a&gt;ときに&lt;a href=&quot;../lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="aecea4a5924a64f71d7845e41d1c3b018c067a01" translate="yes" xml:space="preserve">
          <source>If the number of pattern letters is 4 or more, &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; is thrown when constructing a &lt;code&gt;SimpleDateFormat&lt;/code&gt; or &lt;a href=&quot;simpledateformat#applyPattern-java.lang.String-&quot;&gt;applying a pattern&lt;/a&gt;.</source>
          <target state="translated">パターン文字の数が4以上の場合、 &lt;code&gt;SimpleDateFormat&lt;/code&gt; の構築時または&lt;a href=&quot;simpledateformat#applyPattern-java.lang.String-&quot;&gt;パターンの適用&lt;/a&gt;時に&lt;a href=&quot;../lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="40ebc6195d83e88d053f6b7f4d083dcca34d15e6" translate="yes" xml:space="preserve">
          <source>If the number of readers is now zero then the lock is made available for write lock attempts.</source>
          <target state="translated">リーダの数がゼロになった場合は、書き込みロックの試行でロックが利用可能になります。</target>
        </trans-unit>
        <trans-unit id="57761664428c22b67f54914f3d10f06ea9626ec9" translate="yes" xml:space="preserve">
          <source>If the number of readers is now zero then the lock is made available for write lock attempts. If the current thread does not hold this lock then &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt;&lt;code&gt;IllegalMonitorStateException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">リーダーの数がゼロになった場合、ロックは書き込みロックの試行に使用できるようになります。現在のスレッドがこのロックを保持していない場合、&lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt; &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="9539dfa1e1c4ed8a395e2b48d8e6f0bcbf6c71d0" translate="yes" xml:space="preserve">
          <source>If the object does not have a requested attribute, that nonexistent attribute will be ignored. Those requested attributes that the object does have will be returned.</source>
          <target state="translated">オブジェクトが要求された属性を持っていない場合、その存在しない属性は無視されます。要求された属性のうち、オブジェクトが持っている属性が返されます。</target>
        </trans-unit>
        <trans-unit id="ba188f9b3d08b409858ffc14dad0538d6c066ad5" translate="yes" xml:space="preserve">
          <source>If the object does not have an attribute specified, the directory will ignore the nonexistent attribute and return those requested attributes that the object does have.</source>
          <target state="translated">オブジェクトが指定された属性を持っていない場合、ディレクトリは存在しない属性を無視して、オブジェクトが持っている要求された属性を返します。</target>
        </trans-unit>
        <trans-unit id="1d2b3a1e7cd5b23b39d1f5133dc5c01a091b5bb9" translate="yes" xml:space="preserve">
          <source>If the object does not have the attribute specified, the directory will ignore the nonexistent attribute and return the requested attributes that the object does have.</source>
          <target state="translated">オブジェクトが指定された属性を持っていない場合、ディレクトリは存在しない属性を無視して、オブジェクトが持っている要求された属性を返します。</target>
        </trans-unit>
        <trans-unit id="f7640b018347f47539ec443ff012615b370426e4" translate="yes" xml:space="preserve">
          <source>If the object has a &lt;code&gt;getPropertyChangeListeners&lt;/code&gt; method then the array returned could be a mixture of &lt;code&gt;PropertyChangeListener&lt;/code&gt; and &lt;code&gt;PropertyChangeListenerProxy&lt;/code&gt; objects.</source>
          <target state="translated">オブジェクトが有する場合 &lt;code&gt;getPropertyChangeListeners&lt;/code&gt; の方法を返さ配列の混合物とすることができる &lt;code&gt;PropertyChangeListener&lt;/code&gt; と &lt;code&gt;PropertyChangeListenerProxy&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="3efaaa6db916f5e8dd0c50701e6e2af84aea78e5" translate="yes" xml:space="preserve">
          <source>If the object has a &lt;code&gt;getVetoableChangeListeners&lt;/code&gt; method then the array returned could be a mixture of &lt;code&gt;VetoableChangeListener&lt;/code&gt; and &lt;code&gt;VetoableChangeListenerProxy&lt;/code&gt; objects.</source>
          <target state="translated">オブジェクトが有する場合 &lt;code&gt;getVetoableChangeListeners&lt;/code&gt; の方法を返さ配列の混合物とすることができる &lt;code&gt;VetoableChangeListener&lt;/code&gt; と &lt;code&gt;VetoableChangeListenerProxy&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="a0000bd104b2da8f8fad009e5ad16ebe1912acd0" translate="yes" xml:space="preserve">
          <source>If the object has a custom mapping (is of a class implementing the interface &lt;code&gt;SQLData&lt;/code&gt;), the JDBC driver should call the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt; to write it to the SQL data stream. If, on the other hand, the object is of a class implementing &lt;code&gt;Ref&lt;/code&gt;, &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;Clob&lt;/code&gt;, &lt;code&gt;NClob&lt;/code&gt;, &lt;code&gt;Struct&lt;/code&gt;, &lt;code&gt;java.net.URL&lt;/code&gt;, or &lt;code&gt;Array&lt;/code&gt;, the driver should pass it to the database as a value of the corresponding SQL type.</source>
          <target state="translated">オブジェクトにカスタムマッピングがある場合（インターフェイス &lt;code&gt;SQLData&lt;/code&gt; を実装するクラスのものである場合）、JDBCドライバーはメソッド &lt;code&gt;SQLData.writeSQL&lt;/code&gt; を呼び出して、SQLデータストリームに書き込む必要があります。一方、オブジェクトが &lt;code&gt;Ref&lt;/code&gt; 、 &lt;code&gt;Blob&lt;/code&gt; 、 &lt;code&gt;Clob&lt;/code&gt; 、 &lt;code&gt;NClob&lt;/code&gt; 、 &lt;code&gt;Struct&lt;/code&gt; 、 &lt;code&gt;java.net.URL&lt;/code&gt; 、または &lt;code&gt;Array&lt;/code&gt; を実装するクラスである場合、ドライバーは対応するSQLタイプの値としてデータベースに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="c633f6da7ab2fee69bd882fac3b3abc472fa5a8a" translate="yes" xml:space="preserve">
          <source>If the object is a &lt;code&gt;DirContext&lt;/code&gt;, any existing attributes associated with the name are replaced with those of the object. Otherwise, any existing attributes associated with the name remain unchanged.</source>
          <target state="translated">オブジェクトが &lt;code&gt;DirContext&lt;/code&gt; の場合、名前に関連付けられている既存の属性はオブジェクトの属性に置き換えられます。それ以外の場合、名前に関連付けられている既存の属性は変更されません。</target>
        </trans-unit>
        <trans-unit id="80b22f0afff8183f235d7fd8ee96b05798cb0cf3" translate="yes" xml:space="preserve">
          <source>If the object is of a class implementing &lt;code&gt;SQLData&lt;/code&gt;, the rowset should call the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt; to write the object to an &lt;code&gt;SQLOutput&lt;/code&gt; data stream. If, on the other hand, the object is of a class implementing &lt;code&gt;Ref&lt;/code&gt;, &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;Clob&lt;/code&gt;, &lt;code&gt;NClob&lt;/code&gt;, &lt;code&gt;Struct&lt;/code&gt;, &lt;code&gt;java.net.URL&lt;/code&gt;, or &lt;code&gt;Array&lt;/code&gt;, the driver should pass it to the database as a value of the corresponding SQL type.</source>
          <target state="translated">オブジェクトが &lt;code&gt;SQLData&lt;/code&gt; を実装するクラスのものである場合、行セットはメソッド &lt;code&gt;SQLData.writeSQL&lt;/code&gt; を呼び出して、オブジェクトを &lt;code&gt;SQLOutput&lt;/code&gt; データストリームに書き込む必要があります。一方、オブジェクトが &lt;code&gt;Ref&lt;/code&gt; 、 &lt;code&gt;Blob&lt;/code&gt; 、 &lt;code&gt;Clob&lt;/code&gt; 、 &lt;code&gt;NClob&lt;/code&gt; 、 &lt;code&gt;Struct&lt;/code&gt; 、 &lt;code&gt;java.net.URL&lt;/code&gt; 、または &lt;code&gt;Array&lt;/code&gt; を実装するクラスである場合、ドライバーは対応するSQLタイプの値としてデータベースに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="4f5b3142d8650d58dfbe46a9e556320ac2bd2e7d" translate="yes" xml:space="preserve">
          <source>If the offset is not available then the format is complete.</source>
          <target state="translated">オフセットが利用できない場合は、フォーマットが完了していることになります。</target>
        </trans-unit>
        <trans-unit id="2519e323e000b11bce96906bcfd196efd2dc89f9" translate="yes" xml:space="preserve">
          <source>If the offset is not available to format or parse then the format is complete.</source>
          <target state="translated">オフセットがフォーマットまたはパースに利用できない場合は、フォーマットが完了していることになります。</target>
        </trans-unit>
        <trans-unit id="83f30839a17edd7cfbb33b3121aaa65bc609378b" translate="yes" xml:space="preserve">
          <source>If the old configuration defined a level for a logger, and the resulting configuration doesn't, then this change will not be propagated to existing loggers, if any. To completely replace a configuration - the caller should therefore call &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; to empty the current configuration, before calling &lt;code&gt;updateConfiguration&lt;/code&gt;.</source>
          <target state="translated">古い構成でロガーのレベルが定義されていて、結果の構成で定義されていない場合、この変更は既存のロガーに伝播されません。したがって、構成を完全に置き換えるには、呼び出し元は、 &lt;code&gt;updateConfiguration&lt;/code&gt; を呼び出す前に、&lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;を呼び出して現在の構成を空にする必要があります。</target>
        </trans-unit>
        <trans-unit id="50ff0a2d4c9016d9ad590b91ba476d4fd341c512" translate="yes" xml:space="preserve">
          <source>If the old configuration defined some handlers for a logger, and the resulting configuration doesn't, if that logger exists, its handlers will be removed and closed.</source>
          <target state="translated">古い設定がロガーのためにいくつかのハンドラを定義していて、結果の設定が定義されていない場合、そのロガーが存在する場合、そのハンドラは削除されて閉じられます。</target>
        </trans-unit>
        <trans-unit id="6272ea50e04f5a7acc04b3b46505bc6dc3d28d4e" translate="yes" xml:space="preserve">
          <source>If the old lookup class is in a &lt;a href=&quot;../module#isNamed()&quot;&gt;&lt;code&gt;named&lt;/code&gt;&lt;/a&gt; module, and the new lookup class is in a different module &lt;code&gt;M&lt;/code&gt;, then no members, not even public members in &lt;code&gt;M&lt;/code&gt;'s exported packages, will be accessible. The exception to this is when this lookup is &lt;a href=&quot;methodhandles#publicLookup()&quot;&gt;&lt;code&gt;publicLookup&lt;/code&gt;&lt;/a&gt;, in which case &lt;code&gt;PUBLIC&lt;/code&gt; access is not lost.</source>
          <target state="translated">古いルックアップクラスが&lt;a href=&quot;../module#isNamed()&quot;&gt; &lt;code&gt;named&lt;/code&gt; &lt;/a&gt;モジュールにあり、新しいルックアップクラスが別のモジュール &lt;code&gt;M&lt;/code&gt; にある場合、 &lt;code&gt;M&lt;/code&gt; のエクスポートされたパッケージのパブリックメンバーでさえも、メンバーはアクセスできません。これに対する例外は、このルックアップが&lt;a href=&quot;methodhandles#publicLookup()&quot;&gt; &lt;code&gt;publicLookup&lt;/code&gt; &lt;/a&gt;である場合です。この場合、 &lt;code&gt;PUBLIC&lt;/code&gt; アクセスは失われません。</target>
        </trans-unit>
        <trans-unit id="befd5d850eccad70e74cebb655eecf125efcc787" translate="yes" xml:space="preserve">
          <source>If the old lookup class is in an unnamed module, and the new lookup class is a different module then &lt;a href=&quot;#MODULE&quot;&gt;&lt;code&gt;MODULE&lt;/code&gt;&lt;/a&gt; access is lost.</source>
          <target state="translated">古いルックアップクラスが名前のないモジュールにあり、新しいルックアップクラスが別のモジュールである場合、&lt;a href=&quot;#MODULE&quot;&gt; &lt;code&gt;MODULE&lt;/code&gt; &lt;/a&gt;アクセスは失われます。</target>
        </trans-unit>
        <trans-unit id="4c280c860cb9f7effbb5d1573c9db972ff6dade1" translate="yes" xml:space="preserve">
          <source>If the opaque representation of a key (see &lt;a href=&quot;../key&quot;&gt;&lt;code&gt;Key&lt;/code&gt;&lt;/a&gt;) can be transformed (see &lt;a href=&quot;../keyfactory&quot;&gt;&lt;code&gt;KeyFactory&lt;/code&gt;&lt;/a&gt;) into this key specification (or a subclass of it), &lt;code&gt;getFormat&lt;/code&gt; called on the opaque key returns the same value as the &lt;code&gt;getFormat&lt;/code&gt; method of this key specification.</source>
          <target state="translated">キー（参照の不透明な表現があれば&lt;a href=&quot;../key&quot;&gt; &lt;code&gt;Key&lt;/code&gt; &lt;/a&gt;）（参照形質転換することができる&lt;a href=&quot;../keyfactory&quot;&gt; &lt;code&gt;KeyFactory&lt;/code&gt; &lt;/a&gt;この鍵仕様（またはそのサブクラス）への） &lt;code&gt;getFormat&lt;/code&gt; と同じ値の不透明なキーリターンに呼ばれる &lt;code&gt;getFormat&lt;/code&gt; この鍵仕様の方法。</target>
        </trans-unit>
        <trans-unit id="26d2d84804d4a76528e348ab91515fb0509d099f" translate="yes" xml:space="preserve">
          <source>If the operating system does not support the creation of processes, an &lt;a href=&quot;unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">オペレーティングシステムがプロセスの作成をサポートしていない場合、&lt;a href=&quot;unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="7608927d8184c584cd9d11cef0e073e1bb7bf926" translate="yes" xml:space="preserve">
          <source>If the operation is a &lt;code&gt;draw(Shape)&lt;/code&gt; operation, then the &lt;a href=&quot;stroke#createStrokedShape(java.awt.Shape)&quot;&gt;&lt;code&gt;createStrokedShape&lt;/code&gt;&lt;/a&gt; method on the current &lt;a href=&quot;stroke&quot;&gt;&lt;code&gt;Stroke&lt;/code&gt;&lt;/a&gt; attribute in the &lt;code&gt;Graphics2D&lt;/code&gt; context is used to construct a new &lt;code&gt;Shape&lt;/code&gt; object that contains the outline of the specified &lt;code&gt;Shape&lt;/code&gt;.</source>
          <target state="translated">操作が &lt;code&gt;draw(Shape)&lt;/code&gt; 操作の場合、 &lt;code&gt;Graphics2D&lt;/code&gt; コンテキストの現在の&lt;a href=&quot;stroke&quot;&gt; &lt;code&gt;Stroke&lt;/code&gt; &lt;/a&gt;属性の&lt;a href=&quot;stroke#createStrokedShape(java.awt.Shape)&quot;&gt; &lt;code&gt;createStrokedShape&lt;/code&gt; &lt;/a&gt;メソッドを使用して、指定された &lt;code&gt;Shape&lt;/code&gt; のアウトラインを含む新しい &lt;code&gt;Shape&lt;/code&gt; オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="a3a6f1065b50c79f203f06252e6050cc498ea0ba" translate="yes" xml:space="preserve">
          <source>If the original type and new type are equal, returns &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">元のタイプと新しいタイプが等しい場合、 &lt;code&gt;this&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="15d571df526b560a24fbbc6f542b12d585fc4182" translate="yes" xml:space="preserve">
          <source>If the original type and new type are equal, returns target.</source>
          <target state="translated">元の型と新しい型が等しい場合、ターゲットを返します。</target>
        </trans-unit>
        <trans-unit id="d132531fc669e517a82a3d82919ac097d06f2259" translate="yes" xml:space="preserve">
          <source>If the other &lt;code&gt;StringJoiner&lt;/code&gt; is using a different delimiter, then elements from the other &lt;code&gt;StringJoiner&lt;/code&gt; are concatenated with that delimiter and the result is appended to this &lt;code&gt;StringJoiner&lt;/code&gt; as a single element.</source>
          <target state="translated">他の場合 &lt;code&gt;StringJoiner&lt;/code&gt; は異なる区切り文字を使用して、その後他の要素 &lt;code&gt;StringJoiner&lt;/code&gt; はその区切り文字で連結され、その結果がこれに追加され &lt;code&gt;StringJoiner&lt;/code&gt; 単一の要素として。</target>
        </trans-unit>
        <trans-unit id="613b81a7888d7292adb45fa99af137ae84272f3b" translate="yes" xml:space="preserve">
          <source>If the output is an &lt;code&gt;ImageOutputStream&lt;/code&gt;, the existing contents of the output prior to the current seek position are flushed, and need not be readable or writable. If the format requires that &lt;code&gt;endWriteSequence&lt;/code&gt; be able to rewind to patch up the header information, such as for a sequence of images in a single TIFF file, then the metadata written by this method must remain in a writable portion of the stream. Other formats may flush the stream after this method and after each image.</source>
          <target state="translated">出力が &lt;code&gt;ImageOutputStream&lt;/code&gt; の場合、現在のシーク位置より前の出力の既存のコンテンツはフラッシュされ、読み取りまたは書き込み可能である必要はありません。単一のTIFFファイル内の一連の画像の場合など、フォーマットで &lt;code&gt;endWriteSequence&lt;/code&gt; を巻き戻してヘッダー情報をパッチアップできる必要がある場合、このメソッドによって書き込まれるメタデータは、ストリームの書き込み可能な部分に残す必要があります。他のフォーマットでは、このメソッドの後と各画像の後にストリームをフラッシュする場合があります。</target>
        </trans-unit>
        <trans-unit id="08f1019969adaf9147a2917277718270a6117c0e" translate="yes" xml:space="preserve">
          <source>If the overall view is represented by many pieces (which is the best situation if one want to be able to change the view and write the least amount of new code), it would be impractical to have a huge number of &lt;code&gt;DocumentListener&lt;/code&gt;s. If each view listened to the model, only a few would actually be interested in the changes broadcasted at any given time. Since the model has no knowledge of views, it has no way to filter the broadcast of change information. The view hierarchy itself is instead responsible for propagating the change information. At any level in the view hierarchy, that view knows enough about its children to best distribute the change information further. Changes are therefore broadcasted starting from the root of the view hierarchy. The methods for doing this are:</source>
          <target state="translated">ビュー全体が多数の部分で表されている場合（ビューを変更して新しいコードを最小限に抑えたい場合に最適な状況です）、大量の &lt;code&gt;DocumentListener&lt;/code&gt; を使用することは現実的ではありません。各ビューがモデルをリッスンした場合、特定の時間にブロードキャストされた変更に実際に関心を持つのはごくわずかです。モデルにはビューの知識がないため、変更情報のブロードキャストをフィルタリングする方法がありません。代わりに、ビュー階層自体が変更情報の伝播を担当します。ビュー階層のどのレベルでも、そのビューはその子について十分に知っているため、変更情報をさらに適切に配布できます。したがって、変更はビュー階層のルートからブロードキャストされます。これを行う方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="78a74da7cebb7ba0feae1474dc321fbaaddcde66" translate="yes" xml:space="preserve">
          <source>If the owner document of the &lt;code&gt;DOMStructure&lt;/code&gt; is different than the target document of an &lt;code&gt;XMLSignature&lt;/code&gt;, the &lt;a href=&quot;../dsig/xmlsignature#sign(javax.xml.crypto.dsig.XMLSignContext)&quot;&gt;&lt;code&gt;XMLSignature.sign(XMLSignContext)&lt;/code&gt;&lt;/a&gt; method imports the node into the target document before generating the signature.</source>
          <target state="translated">&lt;code&gt;DOMStructure&lt;/code&gt; の所有者ドキュメントが &lt;code&gt;XMLSignature&lt;/code&gt; のターゲットドキュメントと異なる場合、&lt;a href=&quot;../dsig/xmlsignature#sign(javax.xml.crypto.dsig.XMLSignContext)&quot;&gt; &lt;code&gt;XMLSignature.sign(XMLSignContext)&lt;/code&gt; &lt;/a&gt;メソッドは、署名を生成する前にノードをターゲットドキュメントにインポートします。</target>
        </trans-unit>
        <trans-unit id="fa93ae60cb7452d1a5da6932448d22165c4af9a2" translate="yes" xml:space="preserve">
          <source>If the parameter &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-entities&quot;&gt;entities&lt;/a&gt;&quot; is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;EntityReference&lt;/code&gt; nodes are serialized as an entity reference of the form &quot; &lt;code&gt;&amp;amp;entityName;&lt;/code&gt;&quot; in the output. Child nodes (the expansion) of the entity reference are ignored. If the parameter &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-entities&quot;&gt;entities&lt;/a&gt;&quot; is set to &lt;code&gt;false&lt;/code&gt;, only the children of the entity reference are serialized. &lt;code&gt;EntityReference&lt;/code&gt; nodes with no children (no corresponding &lt;code&gt;Entity&lt;/code&gt; node or the corresponding &lt;code&gt;Entity&lt;/code&gt; nodes have no children) are always serialized.</source>
          <target state="translated">パラメータ「&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-entities&quot;&gt;entities&lt;/a&gt;」が &lt;code&gt;true&lt;/code&gt; に設定されている場合、 &lt;code&gt;EntityReference&lt;/code&gt; ノードは、出力で「 &lt;code&gt;&amp;amp;entityName;&lt;/code&gt; 」の形式のエンティティ参照としてシリアル化されます。エンティティ参照の子ノード（展開）は無視されます。パラメータ「&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-entities&quot;&gt;entities&lt;/a&gt;」が &lt;code&gt;false&lt;/code&gt; に設定されている場合、エンティティ参照の子のみがシリアル化されます。 &lt;code&gt;EntityReference&lt;/code&gt; がない子供（該当するとノードは、 &lt;code&gt;Entity&lt;/code&gt; ノードまたは対応する &lt;code&gt;Entity&lt;/code&gt; ノードが子を持たない）は常に直列化されます。</target>
        </trans-unit>
        <trans-unit id="bb3ac957b69da27cb19dfba9a08e05602d603ed4" translate="yes" xml:space="preserve">
          <source>If the parameter &lt;code&gt;isId&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, this method declares the specified attribute to be a user-determined ID attribute .</source>
          <target state="translated">パラメータ &lt;code&gt;isId&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、このメソッドは、指定された属性をユーザーが決定したID属性として宣言します。</target>
        </trans-unit>
        <trans-unit id="41c4967bfb211978283a04544f0d61d21594df4d" translate="yes" xml:space="preserve">
          <source>If the parameter &lt;code&gt;isId&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, this method declares the specified attribute to be a user-determined ID attribute . This affects the value of &lt;code&gt;Attr.isId&lt;/code&gt; and the behavior of &lt;code&gt;Document.getElementById&lt;/code&gt;, but does not change any schema that may be in use, in particular this does not affect the &lt;code&gt;Attr.schemaTypeInfo&lt;/code&gt; of the specified &lt;code&gt;Attr&lt;/code&gt; node. Use the value &lt;code&gt;false&lt;/code&gt; for the parameter &lt;code&gt;isId&lt;/code&gt; to undeclare an attribute for being a user-determined ID attribute.</source>
          <target state="translated">パラメータ &lt;code&gt;isId&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、このメソッドは、指定された属性をユーザーが決定したID属性として宣言します。これは、 &lt;code&gt;Attr.isId&lt;/code&gt; の値と &lt;code&gt;Document.getElementById&lt;/code&gt; の動作に影響しますが、使用されている可能性のあるスキーマは変更しません。特に、指定した &lt;code&gt;Attr&lt;/code&gt; ノードの &lt;code&gt;Attr.schemaTypeInfo&lt;/code&gt; には影響しません。パラメータ &lt;code&gt;isId&lt;/code&gt; に値 &lt;code&gt;false&lt;/code&gt; を使用して、ユーザーが決定したID属性であるための属性を宣言解除します。</target>
        </trans-unit>
        <trans-unit id="170b05155c2fff91755b761f2183540c80aa9948" translate="yes" xml:space="preserve">
          <source>If the parameter does not have a user-defined or &lt;code&gt;REF&lt;/code&gt; type, the given &lt;code&gt;typeName&lt;/code&gt; parameter is ignored.</source>
          <target state="translated">パラメーターにユーザー定義または &lt;code&gt;REF&lt;/code&gt; タイプがない場合、指定された &lt;code&gt;typeName&lt;/code&gt; パラメーターは無視されます。</target>
        </trans-unit>
        <trans-unit id="18c245a7f9ecfcc3d829455a0e0abe420832d2a6" translate="yes" xml:space="preserve">
          <source>If the parameter is negative or beyond the length of the document, the caret is placed at the beginning or at the end, respectively.</source>
          <target state="translated">パラメータが負の値であったり、文書の長さを超えている場合は、それぞれ先頭と末尾にキャレットを配置します。</target>
        </trans-unit>
        <trans-unit id="8249c3394f9981a5c6710331cd767e75fd4509a3" translate="yes" xml:space="preserve">
          <source>If the parameters exist in XML form, the &lt;a href=&quot;#init(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)&quot;&gt;&lt;code&gt;init(XMLStructure, XMLCryptoContext)&lt;/code&gt;&lt;/a&gt; method should be used to initialize the &lt;code&gt;TransformService&lt;/code&gt;.</source>
          <target state="translated">パラメータがXML形式で存在する場合は、&lt;a href=&quot;#init(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)&quot;&gt; &lt;code&gt;init(XMLStructure, XMLCryptoContext)&lt;/code&gt; &lt;/a&gt;メソッドを使用して &lt;code&gt;TransformService&lt;/code&gt; を初期化する必要があります。</target>
        </trans-unit>
        <trans-unit id="a23d99be271523bb82052d907e3db3f2dbe428c3" translate="yes" xml:space="preserve">
          <source>If the parent is specified as &lt;code&gt;null&lt;/code&gt; (for the bootstrap class loader) then there is no guarantee that all platform classes are visible.</source>
          <target state="translated">親が &lt;code&gt;null&lt;/code&gt; として指定されている場合（ブートストラップクラスローダーの場合）、すべてのプラットフォームクラスが表示される保証はありません。</target>
        </trans-unit>
        <trans-unit id="a54204b2e99d7d060bb6235389e37beb7f049e32" translate="yes" xml:space="preserve">
          <source>If the parse completes without reading the entire length of the text, or a problem occurs during parsing or merging, then an exception is thrown.</source>
          <target state="translated">テキストの長さ全体を読まずに解析が完了した場合や、解析やマージ中に問題が発生した場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="966672a90f95f435f932b758ca1be0521185c7b2" translate="yes" xml:space="preserve">
          <source>If the parsed set of schemas includes error(s) as specified in the section 5.1 of the XML Schema spec, then the error must be reported to the &lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">解析されたスキーマのセットに、XMLスキーマ仕様のセクション5.1で指定されているエラーが含まれている場合は、エラーを&lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; に&lt;/a&gt;報告する必要があります。</target>
        </trans-unit>
        <trans-unit id="1ec9adbbdbd63160216787347e59341d3fd1989d" translate="yes" xml:space="preserve">
          <source>If the parser has not read a declaration for the attribute, or if the parser does not report attribute types, then it must return the value &quot;CDATA&quot; as stated in the XML 1.0 Recommendation (clause 3.3.3, &quot;Attribute-Value Normalization&quot;).</source>
          <target state="translated">パーサが属性の宣言を読んでいない場合、または属性タイプを報告していない場合、XML 1.0勧告(3.3.3項「属性値の正規化」)に記載されているように、値 &quot;CDATA &quot;を返さなければなりません。</target>
        </trans-unit>
        <trans-unit id="951efcf89e37dc37c87ce691e02e23742bc9d33e" translate="yes" xml:space="preserve">
          <source>If the parser has not read a declaration for the attribute, or if the parser does not report attribute types, then it must return the value &quot;CDATA&quot; as stated in the XML 1.0 Recommentation (clause 3.3.3, &quot;Attribute-Value Normalization&quot;).</source>
          <target state="translated">パーサが属性の宣言を読んでいない場合、または属性タイプを報告していない場合、XML 1.0 Recommentation(3.3.3項「属性値の正規化」)に記載されているように、値 &quot;CDATA &quot;を返さなければなりません。</target>
        </trans-unit>
        <trans-unit id="ee0a795fb5ae860545c1f74e1564f3e8fc66414d" translate="yes" xml:space="preserve">
          <source>If the parser or application needs to include information about a specific location in an XML document, it should use the &lt;a href=&quot;saxparseexception&quot;&gt;&lt;code&gt;SAXParseException&lt;/code&gt;&lt;/a&gt; subclass.</source>
          <target state="translated">パーサーまたはアプリケーションがXMLドキュメント内の特定の場所に関する情報を含める必要がある場合は、&lt;a href=&quot;saxparseexception&quot;&gt; &lt;code&gt;SAXParseException&lt;/code&gt; &lt;/a&gt;サブクラスを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="27392b4b5ae25c2878c249c3152c3d3160b5375b" translate="yes" xml:space="preserve">
          <source>If the partialReturn property on the txt parameter is false, the data returned in the Segment will be the entire length requested and may or may not be a copy depending upon how the data was stored. If the partialReturn property is true, only the amount of text that can be returned without creating a copy is returned. Using partial returns will give better performance for situations where large parts of the document are being scanned. The following is an example of using the partial return to access the entire document:</source>
          <target state="translated">txt パラメータの partialReturn プロパティが false の場合、Segment で返されるデータは、要求された全体の長さとなり、データがどのように保存されたかに応じてコピーになるかどうかが決まります。partialReturn プロパティが true の場合、コピーを作成せずに返すことができるテキストの量だけが返されます。部分的なリターンを使用すると、ドキュメントの大部分がスキャンされている状況でより良いパフォーマンスが得られます。以下は、文書全体にアクセスするためにパーシャルリターンを使用する例です。</target>
        </trans-unit>
        <trans-unit id="310a520f747ac0f430b2cb202c7289354ce38544" translate="yes" xml:space="preserve">
          <source>If the passed in operation is a &lt;a href=&quot;namespaceoperation&quot;&gt;&lt;code&gt;NamespaceOperation&lt;/code&gt;&lt;/a&gt;, or a &lt;a href=&quot;namedoperation&quot;&gt;&lt;code&gt;NamedOperation&lt;/code&gt;&lt;/a&gt; wrapping a &lt;a href=&quot;namespaceoperation&quot;&gt;&lt;code&gt;NamespaceOperation&lt;/code&gt;&lt;/a&gt;, then it returns the first (if any) &lt;a href=&quot;standardnamespace&quot;&gt;&lt;code&gt;StandardNamespace&lt;/code&gt;&lt;/a&gt; in its namespace list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7bd44336d4b3666a0011d9d7cbae158269a6fd5" translate="yes" xml:space="preserve">
          <source>If the passed in operation is a &lt;a href=&quot;namespaceoperation&quot;&gt;&lt;code&gt;NamespaceOperation&lt;/code&gt;&lt;/a&gt;, or a &lt;a href=&quot;namedoperation&quot;&gt;&lt;code&gt;NamedOperation&lt;/code&gt;&lt;/a&gt; wrapping a &lt;a href=&quot;namespaceoperation&quot;&gt;&lt;code&gt;NamespaceOperation&lt;/code&gt;&lt;/a&gt;, then it returns the first (if any) &lt;a href=&quot;standardnamespace&quot;&gt;&lt;code&gt;StandardNamespace&lt;/code&gt;&lt;/a&gt; in its namespace list. If the passed operation is not a namespace operation (optionally wrapped in a named operation), or if it doesn't have any standard namespaces in it, returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d69da696a97838674e241d7ea5d2d8014fb0e5" translate="yes" xml:space="preserve">
          <source>If the passed operation is a named operation, returns its &lt;a href=&quot;#getBaseOperation()&quot;&gt;&lt;code&gt;getBaseOperation()&lt;/code&gt;&lt;/a&gt;, otherwise returns the operation as is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d934bcf86fcc533735822d99eeae5629daf70231" translate="yes" xml:space="preserve">
          <source>If the passed operation is a named operation, returns its &lt;a href=&quot;#getName()&quot;&gt;&lt;code&gt;getName()&lt;/code&gt;&lt;/a&gt;, otherwise returns null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955cd55c42b1c749bf0d0200c01dd32b47c3552c" translate="yes" xml:space="preserve">
          <source>If the passed operation is a named operation, returns its &lt;a href=&quot;#getName()&quot;&gt;&lt;code&gt;getName()&lt;/code&gt;&lt;/a&gt;, otherwise returns null. Note that a named operation object can never have a null name, therefore returning null is indicative that the passed operation is not, in fact, a named operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f8e527f319773c3b4cecd9c9f7becb955367cb" translate="yes" xml:space="preserve">
          <source>If the passed operation is a namespace operation, returns its &lt;a href=&quot;#getBaseOperation()&quot;&gt;&lt;code&gt;getBaseOperation()&lt;/code&gt;&lt;/a&gt;, otherwise returns the operation as is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c652576684afac677e6258e3c80046a8f1e595" translate="yes" xml:space="preserve">
          <source>If the passed operation is a namespace operation, returns its &lt;a href=&quot;#getNamespaces()&quot;&gt;&lt;code&gt;getNamespaces()&lt;/code&gt;&lt;/a&gt;, otherwise returns an empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed75a33bb4145623122f20c780e9bac95e43865" translate="yes" xml:space="preserve">
          <source>If the path is relative, and if its first segment contains a colon character (&lt;code&gt;':'&lt;/code&gt;), then a &lt;code&gt;&quot;.&quot;&lt;/code&gt; segment is prepended. This prevents a relative URI with a path such as &lt;code&gt;&quot;a:b/c/d&quot;&lt;/code&gt; from later being re-parsed as an opaque URI with a scheme of &lt;code&gt;&quot;a&quot;&lt;/code&gt; and a scheme-specific part of &lt;code&gt;&quot;b/c/d&quot;&lt;/code&gt;. &lt;b&gt;&lt;i&gt;(Deviation from RFC 2396)&lt;/i&gt;&lt;/b&gt;</source>
          <target state="translated">パスが相対パスで、その最初のセグメントにコロン文字（ &lt;code&gt;':'&lt;/code&gt; ）が含まれている場合は、 &lt;code&gt;&quot;.&quot;&lt;/code&gt; セグメントが追加されます。これにより、 &lt;code&gt;&quot;a:b/c/d&quot;&lt;/code&gt; などのパスを持つ相対URIが、スキーム &lt;code&gt;&quot;a&quot;&lt;/code&gt; とスキーム固有の部分 &lt;code&gt;&quot;b/c/d&quot;&lt;/code&gt; を持つ不透明なURIとして再解析されなくなります。。&lt;b&gt;&lt;i&gt;（RFC 2396からの逸脱）&lt;/i&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="bd2e4303923c73137d6318c7fb1a6ecc2cd9b62d" translate="yes" xml:space="preserve">
          <source>If the pattern contains &quot;/&quot;, the non-empty prefix up to the &quot;/&quot; is the module name; if the module name matches the module name of the class then the remaining pattern is matched with the class name. If there is no &quot;/&quot;, the module name is not compared.</source>
          <target state="translated">パターンに&quot;/&quot;が含まれている場合、&quot;/&quot;までの空でない接頭辞がモジュール名となり、モジュール名がクラスのモジュール名と一致する場合、残りのパターンはクラス名と一致します。モジュール名がクラスのモジュール名と一致した場合、残りのパターンはクラス名と一致します。「/」がない場合、モジュール名は比較されません。</target>
        </trans-unit>
        <trans-unit id="47d65275395c58dc9640d193b6ab38182a27d80c" translate="yes" xml:space="preserve">
          <source>If the pattern ends with &quot;*&quot;, it matches any class with the pattern as a prefix.</source>
          <target state="translated">パターンが &quot;*&quot; で終わる場合は、そのパターンを接頭辞として持つ任意のクラスにマッチします。</target>
        </trans-unit>
        <trans-unit id="2b99798368562eadf341b3140c731a962ac17514" translate="yes" xml:space="preserve">
          <source>If the pattern ends with &quot;.*&quot; it matches any class in the package.</source>
          <target state="translated">パターンが &quot;.*&quot; で終わる場合は、パッケージ内の任意のクラスにマッチします。</target>
        </trans-unit>
        <trans-unit id="64908fcc581dd6ae74cbec11495eb53bd054a169" translate="yes" xml:space="preserve">
          <source>If the pattern ends with &quot;.**&quot; it matches any class in the package and all subpackages.</source>
          <target state="translated">パターンが&quot;.**&quot;で終わる場合は、パッケージ内の任意のクラスとすべてのサブパッケージにマッチします。</target>
        </trans-unit>
        <trans-unit id="d4631732bf01387295ef2c9727234cf63af52f66" translate="yes" xml:space="preserve">
          <source>If the pattern is equal to the class name, it matches.</source>
          <target state="translated">パターンがクラス名と一致している場合は一致します。</target>
        </trans-unit>
        <trans-unit id="72a8f0cca7462c028e15e68df7691503088ae3a6" translate="yes" xml:space="preserve">
          <source>If the pattern letter is 'v' the output provides the zone name ignoring daylight savings time. If the count of letters is one, then the short name is output. If the count of letters is four, then the full name is output. Two, three and five or more letters throw &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">パターン文字が「v」の場合、出力は夏時間を無視してゾーン名を提供します。文字数が1の場合、短い名前が出力されます。文字数が4の場合、フルネームが出力されます。 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 文字以上はIllegalArgumentExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="2047fa1b9e42f9c7566436cd904af026a1d6b5e2" translate="yes" xml:space="preserve">
          <source>If the pattern starts with &quot;!&quot;, the class is rejected if the remaining pattern is matched; otherwise the class is allowed if the pattern matches.</source>
          <target state="translated">パターンが&quot;!&quot;で始まる場合、残りのパターンにマッチした場合にはクラスは拒否され、そうでない場合にはパターンにマッチした場合にはクラスは許可されます。</target>
        </trans-unit>
        <trans-unit id="87a4c8fb790be59120806baf097d003e2948d992" translate="yes" xml:space="preserve">
          <source>If the pending count is nonzero, (atomically) decrements it.</source>
          <target state="translated">保留数が0以外の場合、(原子的に)デクリメントします。</target>
        </trans-unit>
        <trans-unit id="8ad7048ac80247a957da8eeed8a41a5f37a54c39" translate="yes" xml:space="preserve">
          <source>If the pending count is nonzero, decrements the count; otherwise invokes &lt;a href=&quot;#onCompletion(java.util.concurrent.CountedCompleter)&quot;&gt;&lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt;&lt;/a&gt; and then similarly tries to complete this task's completer, if one exists, else marks this task as complete.</source>
          <target state="translated">保留中のカウントがゼロ以外の場合、カウントをデクリメントします。それ以外の場合は、&lt;a href=&quot;#onCompletion(java.util.concurrent.CountedCompleter)&quot;&gt; &lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt; &lt;/a&gt;を呼び出し、同様にこのタスクのコンプリーターが存在する場合はそれを完了しようとし、そうでない場合はこのタスクを完了としてマークします。</target>
        </trans-unit>
        <trans-unit id="e572cb5e5dee791d5b39d6f57ac77915682e21a1" translate="yes" xml:space="preserve">
          <source>If the pending count is nonzero, decrements the count; otherwise invokes &lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt;&lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt;&lt;/a&gt; and then similarly tries to complete this task's completer, if one exists, else marks this task as complete.</source>
          <target state="translated">保留中のカウントがゼロ以外の場合は、カウントを減らします。それ以外の場合は、&lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt; &lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt; &lt;/a&gt;を呼び出してから、このタスクのコンプリーターを完了しようとします（存在する場合）。それ以外の場合は、このタスクを完了としてマークします。</target>
        </trans-unit>
        <trans-unit id="bc17ec5f581dec30fa586e110a04b1eaf5b5b327" translate="yes" xml:space="preserve">
          <source>If the permit is available then it is consumed and the call returns immediately; otherwise the current thread becomes disabled for thread scheduling purposes and lies dormant until one of four things happens:</source>
          <target state="translated">そうでなければ、現在のスレッドはスレッドスケジューリングのために無効化され、次の4つのうちの1つが起こるまで休止状態になります。</target>
        </trans-unit>
        <trans-unit id="d4223a7d1829a5930922236b794117f0ecfa3ef5" translate="yes" xml:space="preserve">
          <source>If the permit is available then it is consumed and the call returns immediately; otherwise the current thread becomes disabled for thread scheduling purposes and lies dormant until one of three things happens:</source>
          <target state="translated">そうでなければ、現在のスレッドはスレッドスケジューリングのために無効化され、次の3つのうちの1つが起こるまで休止状態になります。</target>
        </trans-unit>
        <trans-unit id="1c7072c32b05b6fd0de10d7da5998d3dbfa5ec38" translate="yes" xml:space="preserve">
          <source>If the permits are acquired then the value &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">許可が取得されると、値 &lt;code&gt;true&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="4cea382e9b6e94d448d8b5b7931ce98c85d158e1" translate="yes" xml:space="preserve">
          <source>If the persist field of the attribute's descriptor is not null then Persistence policy from the attribute descriptor is used to guide storing the attribute in a persistent store.</source>
          <target state="translated">属性の記述子のpersistフィールドがnullでない場合、属性記述子からのPersistenceポリシーは、属性を永続的なストアに格納するためのガイドとして使用されます。</target>
        </trans-unit>
        <trans-unit id="0f4b331cf13e540556f5aca90f86b4e8ad5c60f9" translate="yes" xml:space="preserve">
          <source>If the plug-in does not handle image metadata, null should be returned.</source>
          <target state="translated">プラグインが画像のメタデータを処理しない場合は、nullを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="aab4c0c381c1b7fcd5929e45b451378e4a93f9be" translate="yes" xml:space="preserve">
          <source>If the plug-in does not handle metadata, null should be returned.</source>
          <target state="translated">プラグインがメタデータを処理しない場合は、nullを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="06277a1c71d67301bd303d6a030fc9040d866b9c" translate="yes" xml:space="preserve">
          <source>If the point is colinear with the line segment, but not between the end points, then the value will be -1 if the point lies &quot;beyond &lt;code&gt;(x1,y1)&lt;/code&gt;&quot; or 1 if the point lies &quot;beyond &lt;code&gt;(x2,y2)&lt;/code&gt;&quot;.</source>
          <target state="translated">ポイントがラインセグメントと同一直線上にあるが、エンドポイント間ではない場合、値は、ポイントが「 &lt;code&gt;(x1,y1)&lt;/code&gt; を超えて」ある場合は-1になり、ポイントが「 &lt;code&gt;(x2,y2)&lt;/code&gt; を超えて」ある場合は1になります。 。</target>
        </trans-unit>
        <trans-unit id="566f0e2c0058f212146ef4067827ea84b517258f" translate="yes" xml:space="preserve">
          <source>If the pool currently has more than corePoolSize threads, excess threads will be terminated if they have been idle for more than the keepAliveTime (see &lt;a href=&quot;#getKeepAliveTime(java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;getKeepAliveTime(TimeUnit)&lt;/code&gt;&lt;/a&gt;). This provides a means of reducing resource consumption when the pool is not being actively used. If the pool becomes more active later, new threads will be constructed. This parameter can also be changed dynamically using method &lt;a href=&quot;#setKeepAliveTime(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;setKeepAliveTime(long,
 TimeUnit)&lt;/code&gt;&lt;/a&gt;. Using a value of &lt;code&gt;Long.MAX_VALUE&lt;/code&gt;&lt;a href=&quot;timeunit#NANOSECONDS&quot;&gt;&lt;code&gt;TimeUnit.NANOSECONDS&lt;/code&gt;&lt;/a&gt; effectively disables idle threads from ever terminating prior to shut down. By default, the keep-alive policy applies only when there are more than corePoolSize threads, but method &lt;a href=&quot;#allowCoreThreadTimeOut(boolean)&quot;&gt;&lt;code&gt;allowCoreThreadTimeOut(boolean)&lt;/code&gt;&lt;/a&gt; can be used to apply this time-out policy to core threads as well, so long as the keepAliveTime value is non-zero.</source>
          <target state="translated">プールに現在corePoolSizeを超えるスレッドがある場合、keepAliveTimeを超えてアイドル状態になっていると、余分なスレッドは終了します（&lt;a href=&quot;#getKeepAliveTime(java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;getKeepAliveTime(TimeUnit)&lt;/code&gt; を&lt;/a&gt;参照）。これは、プールがアクティブに使用されていないときにリソース消費を削減する手段を提供します。後でプールがよりアクティブになると、新しいスレッドが構築されます。このパラメーターは&lt;a href=&quot;#setKeepAliveTime(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;setKeepAliveTime(long, TimeUnit)&lt;/code&gt; &lt;/a&gt;メソッドsetKeepAliveTime（long、TimeUnit）を使用して動的に変更することもできます。 &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; &lt;a href=&quot;timeunit#NANOSECONDS&quot;&gt; &lt;code&gt;TimeUnit.NANOSECONDS&lt;/code&gt; の&lt;/a&gt;値を使用すると、アイドル状態のスレッドがシャットダウンする前に終了するのを効果的に無効にします。デフォルトでは、キープアライブポリシーは、corePoolSizeを超えるスレッドがある場合にのみ適用されますが、メソッド&lt;a href=&quot;#allowCoreThreadTimeOut(boolean)&quot;&gt; &lt;code&gt;allowCoreThreadTimeOut(boolean)&lt;/code&gt; &lt;/a&gt; keepAliveTime値がゼロ以外である限り、このタイムアウトポリシーをコアスレッドにも適用するために使用できます。</target>
        </trans-unit>
        <trans-unit id="5bf226ccbe41713d478e11aab7ab361a597353a7" translate="yes" xml:space="preserve">
          <source>If the pool currently has more than corePoolSize threads, excess threads will be terminated if they have been idle for more than the keepAliveTime (see &lt;a href=&quot;threadpoolexecutor#getKeepAliveTime-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;getKeepAliveTime(TimeUnit)&lt;/code&gt;&lt;/a&gt;). This provides a means of reducing resource consumption when the pool is not being actively used. If the pool becomes more active later, new threads will be constructed. This parameter can also be changed dynamically using method &lt;a href=&quot;threadpoolexecutor#setKeepAliveTime-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;setKeepAliveTime(long,
 TimeUnit)&lt;/code&gt;&lt;/a&gt;. Using a value of &lt;code&gt;Long.MAX_VALUE&lt;/code&gt;&lt;a href=&quot;timeunit#NANOSECONDS&quot;&gt;&lt;code&gt;TimeUnit.NANOSECONDS&lt;/code&gt;&lt;/a&gt; effectively disables idle threads from ever terminating prior to shut down. By default, the keep-alive policy applies only when there are more than corePoolSize threads. But method &lt;a href=&quot;threadpoolexecutor#allowCoreThreadTimeOut-boolean-&quot;&gt;&lt;code&gt;allowCoreThreadTimeOut(boolean)&lt;/code&gt;&lt;/a&gt; can be used to apply this time-out policy to core threads as well, so long as the keepAliveTime value is non-zero.</source>
          <target state="translated">現在、プールにcorePoolSizeを超えるスレッドがある場合、余分なスレッドは、keepAliveTime（&lt;a href=&quot;threadpoolexecutor#getKeepAliveTime-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;getKeepAliveTime(TimeUnit)&lt;/code&gt; を&lt;/a&gt;参照）を超えてアイドル状態になっていると終了します。これにより、プールがアクティブに使用されていないときにリソース消費を削減できます。後でプールがよりアクティブになると、新しいスレッドが構築されます。このパラメーターは&lt;a href=&quot;threadpoolexecutor#setKeepAliveTime-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;setKeepAliveTime(long, TimeUnit)&lt;/code&gt; &lt;/a&gt;メソッドsetKeepAliveTime（long、TimeUnit）を使用して動的に変更することもできます。 &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; &lt;a href=&quot;timeunit#NANOSECONDS&quot;&gt; &lt;code&gt;TimeUnit.NANOSECONDS&lt;/code&gt; の&lt;/a&gt;値を使用すると、アイドルスレッドがシャットダウン前に終了することを効果的に無効にします。デフォルトでは、キープアライブポリシーは、corePoolSizeを超えるスレッドがある場合にのみ適用されます。ただし、メソッド&lt;a href=&quot;threadpoolexecutor#allowCoreThreadTimeOut-boolean-&quot;&gt; &lt;code&gt;allowCoreThreadTimeOut(boolean)&lt;/code&gt; &lt;/a&gt; keepAliveTime値がゼロ以外であれば、このタイムアウトポリシーをコアスレッドに適用するためにも使用できます。</target>
        </trans-unit>
        <trans-unit id="9a3ff33f4d5e297ea7ec3916317d36251a2ccb95" translate="yes" xml:space="preserve">
          <source>If the prefix is &quot;GMT&quot;, &quot;UTC&quot;, or &quot;UT&quot; a &lt;code&gt;ZoneId&lt;/code&gt; with the prefix and the non-zero offset is returned. If the prefix is empty &lt;code&gt;&quot;&quot;&lt;/code&gt; the &lt;code&gt;ZoneOffset&lt;/code&gt; is returned.</source>
          <target state="translated">プレフィックスが「GMT」、「UTC」、または「UT」の &lt;code&gt;ZoneId&lt;/code&gt; 、プレフィックスとゼロ以外のオフセットを持つZoneIdが返されます。プレフィックスが空の場合 &lt;code&gt;&quot;&quot;&lt;/code&gt; 、 &lt;code&gt;ZoneOffset&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="a88d71fc9f54022eac4890ef06a233fa0844cac0" translate="yes" xml:space="preserve">
          <source>If the prefix is &lt;code&gt;null&lt;/code&gt;, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. Use &lt;a href=&quot;../xmlconstants#DEFAULT_NS_PREFIX&quot;&gt;&lt;code&gt;XMLConstants.DEFAULT_NS_PREFIX&lt;/code&gt;&lt;/a&gt; to explicitly indicate that no prefix is present or the prefix is not relevant.</source>
          <target state="translated">プレフィックスが &lt;code&gt;null&lt;/code&gt; の場合、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。&lt;a href=&quot;../xmlconstants#DEFAULT_NS_PREFIX&quot;&gt; &lt;code&gt;XMLConstants.DEFAULT_NS_PREFIX&lt;/code&gt; &lt;/a&gt;を使用して、プレフィックスが存在しないか、プレフィックスが関連していないことを明示的に示します。</target>
        </trans-unit>
        <trans-unit id="2958ef27e71136debb4afdbdf265b117d00e567e" translate="yes" xml:space="preserve">
          <source>If the present length of the file as returned by the &lt;code&gt;length&lt;/code&gt; method is greater than the &lt;code&gt;newLength&lt;/code&gt; argument then the file will be truncated. In this case, if the file offset as returned by the &lt;code&gt;getFilePointer&lt;/code&gt; method is greater than &lt;code&gt;newLength&lt;/code&gt; then after this method returns the offset will be equal to &lt;code&gt;newLength&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; メソッドで返されるファイルの現在の長さが &lt;code&gt;newLength&lt;/code&gt; 引数より大きい場合、ファイルは切り捨てられます。この場合、 &lt;code&gt;getFilePointer&lt;/code&gt; メソッドによって返されるファイルオフセットが &lt;code&gt;newLength&lt;/code&gt; より大きい場合、このメソッドが返された後のオフセットは &lt;code&gt;newLength&lt;/code&gt; と等しくなります。</target>
        </trans-unit>
        <trans-unit id="9cef2b80409c01c0c853b230c56f0ff2824529e5" translate="yes" xml:space="preserve">
          <source>If the present length of the file as returned by the &lt;code&gt;length&lt;/code&gt; method is smaller than the &lt;code&gt;newLength&lt;/code&gt; argument then the file will be extended. In this case, the contents of the extended portion of the file are not defined.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; メソッドによって返されたファイルの現在の長さが &lt;code&gt;newLength&lt;/code&gt; 引数より小さい場合、ファイルは拡張されます。この場合、ファイルの拡張部分の内容は定義されていません。</target>
        </trans-unit>
        <trans-unit id="087d7d53cb32d81d4bb2e8d37c5e0f4bd813cb56" translate="yes" xml:space="preserve">
          <source>If the previous step fails to find a protocol handler, the constructor reads the value of the system property:</source>
          <target state="translated">前のステップでプロトコルハンドラが見つからなかった場合、コンストラクタはシステムプロパティの値を読み込みます。</target>
        </trans-unit>
        <trans-unit id="c6c92eb74a9e692df342c2385a09b40d4ef27afc" translate="yes" xml:space="preserve">
          <source>If the previous step fails to find a protocol handler, then the constructor tries to load a built-in protocol handler. If this class does not exist, or if the class exists but it is not a subclass of &lt;code&gt;URLStreamHandler&lt;/code&gt;, then a &lt;code&gt;MalformedURLException&lt;/code&gt; is thrown.</source>
          <target state="translated">前の手順でプロトコルハンドラーが見つからなかった場合、コンストラクターは組み込みのプロトコルハンドラーを読み込もうとします。このクラスが存在しない場合、またはクラスは存在するが &lt;code&gt;URLStreamHandler&lt;/code&gt; のサブクラスではない場合、 &lt;code&gt;MalformedURLException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="dec7b0fc3a3fa3565bc2b4d09d4d15db4b1e4a93" translate="yes" xml:space="preserve">
          <source>If the previous step fails to find a protocol handler, then the constructor tries to load from a system default package.</source>
          <target state="translated">前のステップでプロトコルハンドラが見つからなかった場合、コンストラクタはシステムのデフォルトパッケージからロードしようとします。</target>
        </trans-unit>
        <trans-unit id="6585f9f7ecc69964ba3abd119ebdf439ff37f98d" translate="yes" xml:space="preserve">
          <source>If the previous step has found no resource bundle, proceed to Step 6. If a bundle has been found that is a base bundle (a bundle for &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt;), and the candidate locale list only contained &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt;, return the bundle to the caller. If a bundle has been found that is a base bundle, but the candidate locale list contained locales other than Locale(&quot;&quot;), put the bundle on hold and proceed to Step 6. If a bundle has been found that is not a base bundle, proceed to Step 7.</source>
          <target state="translated">前の手順でリソースバンドルが見つからなかった場合は、手順6に進みます。基本バンドル（ &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; のバンドル）であるバンドルが見つかり、ロケール候補リストに &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; のみが含まれていた場合は、バンドルを呼び出し元に返します。基本バンドルであるバンドルが見つかったが、候補ロケールリストにLocale（ &quot;&quot;）以外のロケールが含まれていた場合は、バンドルを保留にしてステップ6に進みます。基本バンドルではないバンドルが見つかった場合、ステップ7に進みます。</target>
        </trans-unit>
        <trans-unit id="ea2595038e3728d521540b9e147c81e0fa793394" translate="yes" xml:space="preserve">
          <source>If the principal system property or key is already provided, the value of &quot;javax.security.auth.login.name&quot; in the shared state is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6778bed4bae7f4aceabe96f43a91b258db12e0c7" translate="yes" xml:space="preserve">
          <source>If the print data is a stream, or a print job requests data as a stream, then &lt;code&gt;SimpleDoc&lt;/code&gt; does not monitor if the service properly closes the stream after data transfer completion or job termination. Clients may prefer to use provide their own implementation of doc that adds a listener to monitor job completion and to validate that resources such as streams are freed (ie closed).</source>
          <target state="translated">印刷データがストリームの場合、または印刷ジョブがデータをストリームとして要求する場合、 &lt;code&gt;SimpleDoc&lt;/code&gt; は、データ転送の完了またはジョブの終了後にサービスがストリームを適切に閉じるかどうかを監視しません。クライアントは、ジョブの完了を監視し、ストリームなどのリソースが解放されている（つまり閉じられている）ことを検証するリスナーを追加する独自のdoc実装を使用することを好む場合があります。</target>
        </trans-unit>
        <trans-unit id="bebb66852f6964b9bd2e3cea1ce8a7ef48446b3a" translate="yes" xml:space="preserve">
          <source>If the process has already terminated then this method returns immediately with the value &lt;code&gt;true&lt;/code&gt;. If the process has not terminated and the timeout value is less than, or equal to, zero, then this method returns immediately with the value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">プロセスがすでに終了している場合、このメソッドは値 &lt;code&gt;true&lt;/code&gt; ですぐに戻ります。プロセスが終了しておらず、タイムアウト値がゼロ以下の場合、このメソッドは値 &lt;code&gt;false&lt;/code&gt; ですぐに戻ります。</target>
        </trans-unit>
        <trans-unit id="b6c209a5eafb6c3fed5697bfbb41d0d1e8b8dc27" translate="yes" xml:space="preserve">
          <source>If the processor class is annotated with &lt;a href=&quot;supportedannotationtypes&quot;&gt;&lt;code&gt;SupportedAnnotationTypes&lt;/code&gt;&lt;/a&gt;, return an unmodifiable set with the same set of strings as the annotation.</source>
          <target state="translated">プロセッサクラスに&lt;a href=&quot;supportedannotationtypes&quot;&gt; &lt;code&gt;SupportedAnnotationTypes&lt;/code&gt; の&lt;/a&gt;注釈が付けられている場合は、注釈と同じ文字列のセットを持つ変更不可能なセットを返します。</target>
        </trans-unit>
        <trans-unit id="88bf35bed53cf1a7b9c25c4c647bfc4d663ad0d2" translate="yes" xml:space="preserve">
          <source>If the processor class is annotated with &lt;a href=&quot;supportedannotationtypes&quot;&gt;&lt;code&gt;SupportedAnnotationTypes&lt;/code&gt;&lt;/a&gt;, return an unmodifiable set with the same set of strings as the annotation. If the class is not so annotated, an empty set is returned.</source>
          <target state="translated">プロセッサクラスに&lt;a href=&quot;supportedannotationtypes&quot;&gt; &lt;code&gt;SupportedAnnotationTypes&lt;/code&gt; &lt;/a&gt;で注釈が付けられている場合は、注釈と同じ文字列のセットを持つ変更不可能なセットを返します。クラスに注釈が付けられていない場合、空のセットが返されます。</target>
        </trans-unit>
        <trans-unit id="f41793fe3304ceb1d00d62771a4aa39cb3d71ae7" translate="yes" xml:space="preserve">
          <source>If the processor class is annotated with &lt;a href=&quot;supportedannotationtypes&quot;&gt;&lt;code&gt;SupportedAnnotationTypes&lt;/code&gt;&lt;/a&gt;, return an unmodifiable set with the same set of strings as the annotation. If the class is not so annotated, an empty set is returned. If the &lt;a href=&quot;processingenvironment#getSourceVersion()&quot;&gt;&lt;code&gt;source
 version&lt;/code&gt;&lt;/a&gt; does not support modules, in other words if it is less than or equal to &lt;a href=&quot;../../lang/model/sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt;, then any leading &lt;a href=&quot;processor#getSupportedAnnotationTypes()&quot;&gt;&lt;code&gt;module prefixes&lt;/code&gt;&lt;/a&gt; are stripped from the names.</source>
          <target state="translated">プロセッサクラスに&lt;a href=&quot;supportedannotationtypes&quot;&gt; &lt;code&gt;SupportedAnnotationTypes&lt;/code&gt; の&lt;/a&gt;注釈が付けられている場合は、注釈と同じ文字列のセットを持つ変更不可能なセットを返します。クラスにそのように注釈が付けられていない場合は、空のセットが返されます。&lt;a href=&quot;processingenvironment#getSourceVersion()&quot;&gt; &lt;code&gt;source version&lt;/code&gt; &lt;/a&gt;がモジュールをサポートしていない場合、つまり&lt;a href=&quot;../../lang/model/sourceversion#RELEASE_8&quot;&gt; &lt;code&gt;RELEASE_8&lt;/code&gt; &lt;/a&gt;以下の場合、先頭の&lt;a href=&quot;processor#getSupportedAnnotationTypes()&quot;&gt; &lt;code&gt;module prefixes&lt;/code&gt; &lt;/a&gt;は名前から削除されます。</target>
        </trans-unit>
        <trans-unit id="7d2a0bffaf2c47cc7d7f992548c87fe48e574cab" translate="yes" xml:space="preserve">
          <source>If the processor class is annotated with &lt;a href=&quot;supportedannotationtypes&quot;&gt;&lt;code&gt;SupportedAnnotationTypes&lt;/code&gt;&lt;/a&gt;, return an unmodifiable set with the same set of strings as the annotation. If the class is not so annotated, an empty set is returned. If the &lt;a href=&quot;processingenvironment#getSourceVersion()&quot;&gt;source version&lt;/a&gt; does not support modules, in other words if it is less than or equal to &lt;a href=&quot;../../lang/model/sourceversion#RELEASE_8&quot;&gt;&lt;code&gt;RELEASE_8&lt;/code&gt;&lt;/a&gt;, then any leading &lt;a href=&quot;processor#getSupportedAnnotationTypes()&quot;&gt;module prefixes&lt;/a&gt; are stripped from the names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f67fa776d861f7bdbdce342363185f87f166e6" translate="yes" xml:space="preserve">
          <source>If the processor class is annotated with &lt;a href=&quot;supportedoptions&quot;&gt;&lt;code&gt;SupportedOptions&lt;/code&gt;&lt;/a&gt;, return an unmodifiable set with the same set of strings as the annotation.</source>
          <target state="translated">プロセッサクラスに&lt;a href=&quot;supportedoptions&quot;&gt; &lt;code&gt;SupportedOptions&lt;/code&gt; の&lt;/a&gt;注釈が付けられている場合は、注釈と同じ文字列のセットを持つ変更不可能なセットを返します。</target>
        </trans-unit>
        <trans-unit id="09f9046e5ee10b9263ce6a07905ea1779eccbaa9" translate="yes" xml:space="preserve">
          <source>If the processor class is annotated with &lt;a href=&quot;supportedoptions&quot;&gt;&lt;code&gt;SupportedOptions&lt;/code&gt;&lt;/a&gt;, return an unmodifiable set with the same set of strings as the annotation. If the class is not so annotated, an empty set is returned.</source>
          <target state="translated">プロセッサクラスに&lt;a href=&quot;supportedoptions&quot;&gt; &lt;code&gt;SupportedOptions&lt;/code&gt; &lt;/a&gt;で注釈が付けられている場合は、注釈と同じ文字列のセットを持つ変更不可能なセットを返します。クラスに注釈が付けられていない場合、空のセットが返されます。</target>
        </trans-unit>
        <trans-unit id="b36cf0c2beb0dbdd953aff6325943dc74920fe4e" translate="yes" xml:space="preserve">
          <source>If the processor class is annotated with &lt;a href=&quot;supportedsourceversion&quot;&gt;&lt;code&gt;SupportedSourceVersion&lt;/code&gt;&lt;/a&gt;, return the source version in the annotation.</source>
          <target state="translated">プロセッサクラスに&lt;a href=&quot;supportedsourceversion&quot;&gt; &lt;code&gt;SupportedSourceVersion&lt;/code&gt; &lt;/a&gt;アノテーションが付けられている場合は、アノテーションでソースバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="7003e770420135c1df12e09d555ca6780cff43c6" translate="yes" xml:space="preserve">
          <source>If the processor class is annotated with &lt;a href=&quot;supportedsourceversion&quot;&gt;&lt;code&gt;SupportedSourceVersion&lt;/code&gt;&lt;/a&gt;, return the source version in the annotation. If the class is not so annotated, &lt;a href=&quot;../../lang/model/sourceversion#RELEASE_6&quot;&gt;&lt;code&gt;SourceVersion.RELEASE_6&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">プロセッサクラスに&lt;a href=&quot;supportedsourceversion&quot;&gt; &lt;code&gt;SupportedSourceVersion&lt;/code&gt; &lt;/a&gt;で注釈が付けられている場合は、注釈でソースバージョンを返します。クラスに注釈が付けられていない場合、&lt;a href=&quot;../../lang/model/sourceversion#RELEASE_6&quot;&gt; &lt;code&gt;SourceVersion.RELEASE_6&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="83fa47aeaeb40c5cd4a73d7078ea6a57dab4dfda" translate="yes" xml:space="preserve">
          <source>If the profile has specified the corresponding TRC as linear (gamma = 1.0) or as a simple gamma value, this method throws an exception. In this case, the &lt;a href=&quot;#getGamma(int)&quot;&gt;&lt;code&gt;getGamma(int)&lt;/code&gt;&lt;/a&gt; method should be used to get the gamma value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31cac7c5487d20649f40e4f99c36175d92d8d730" translate="yes" xml:space="preserve">
          <source>If the profile represents the TRC for the corresponding component as a table rather than a single gamma value, an exception is thrown. In this case the actual table can be obtained through the &lt;a href=&quot;#getTRC(int)&quot;&gt;&lt;code&gt;getTRC(int)&lt;/code&gt;&lt;/a&gt; method. When using a gamma value, the linear component (R, G, or B) is computed as follows:</source>
          <target state="translated">プロファイルが対応するコンポーネントのTRCを単一のガンマ値ではなくテーブルとして表す場合、例外がスローされます。この場合、実際のテーブルは&lt;a href=&quot;#getTRC(int)&quot;&gt; &lt;code&gt;getTRC(int)&lt;/code&gt; &lt;/a&gt;メソッドを介して取得できます。ガンマ値を使用する場合、線形成分（R、G、またはB）は次のように計算されます。</target>
        </trans-unit>
        <trans-unit id="2a28ee9e20388a55d35f948cd48fff9c84de8808" translate="yes" xml:space="preserve">
          <source>If the program doesn't explicitly hide or dispose the window while processing this event, the window close operation is canceled.</source>
          <target state="translated">このイベントの処理中にプログラムが明示的にウィンドウの非表示や廃棄を行わなかった場合、ウィンドウクローズ操作はキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="b31e3a1fd2087ce273c8b857c1c713db2fbc7119" translate="yes" xml:space="preserve">
          <source>If the program wants to handle this exception in particular, it should catch AuthenticationException explicitly before attempting to catch NamingException. After catching AuthenticationException, the program could reattempt the authentication by updating the resolved context's environment properties with the appropriate appropriate credentials.</source>
          <target state="translated">プログラムがこの例外を特に扱いたい場合は、NamingException をキャッチしようとする前に AuthenticationException を明示的にキャッチしなければなりません。AuthenticationException をキャッチした後、プログラムは、解決したコンテキストの環境プロパティを適切な認証情報で更新することで、認証を再試行することができる。</target>
        </trans-unit>
        <trans-unit id="1c285b45955c2c11ff3e733840c81852c7f62aeb" translate="yes" xml:space="preserve">
          <source>If the program wants to handle this exception in particular, it should catch AuthenticationException explicitly before attempting to catch NamingException. After catching AuthenticationException, the program could reattempt the authentication by updating the resolved context's environment properties with the appropriate credentials.</source>
          <target state="translated">プログラムがこの例外を特に扱いたい場合は、NamingException をキャッチしようとする前に AuthenticationException を明示的にキャッチしなければなりません。AuthenticationException をキャッチした後、プログラムは、解決したコンテキストの環境プロパティを適切な認証情報で更新することで、認証を再試行することができる。</target>
        </trans-unit>
        <trans-unit id="6f2dc297aa51d5849276a390a4e74ee5aecc6575" translate="yes" xml:space="preserve">
          <source>If the program wants to handle this exception in particular, it should catch AuthenticationNotSupportedException explicitly before attempting to catch NamingException. After catching &lt;code&gt;AuthenticationNotSupportedException&lt;/code&gt;, the program could reattempt the authentication using a different authentication flavor by updating the resolved context's environment properties accordingly.</source>
          <target state="translated">プログラムがこの例外を特に処理したい場合は、NamingExceptionをキャッチする前に、AuthenticationNotSupportedExceptionを明示的にキャッチする必要があります。 &lt;code&gt;AuthenticationNotSupportedException&lt;/code&gt; をキャッチした後、プログラムは解決されたコンテキストの環境プロパティを適宜更新することにより、異なる認証フレーバーを使用して認証を再試行できます。</target>
        </trans-unit>
        <trans-unit id="6aa89d5f48713a94a294fbe63d3a7465ee70153d" translate="yes" xml:space="preserve">
          <source>If the program wants to handle this exception in particular, it should catch CannotProceedException explicitly before attempting to catch NamingException.</source>
          <target state="translated">プログラムがこの例外を特に扱いたい場合は、NamingException をキャッチしようとする前に CannotProceedException を明示的にキャッチしなければなりません。</target>
        </trans-unit>
        <trans-unit id="e8620b756848fd740f3151a464311aed319d8483" translate="yes" xml:space="preserve">
          <source>If the program wants to handle this exception in particular, it should catch ContextNotEmptyException explicitly before attempting to catch NamingException. For example, after catching ContextNotEmptyException, the program might try to remove the contents of the context before reattempting the destroy.</source>
          <target state="translated">プログラムがこの例外を特に扱いたい場合は、NamingException をキャッチしようとする前に明示的に ContextNotEmptyException をキャッチしなければなりません。例えば、ContextNotEmptyException をキャッチした後、プログラムは destroy を再試行する前にコンテキストの内容を削除しようとするかもしれません。</target>
        </trans-unit>
        <trans-unit id="895af51843785805eb993f6b245e3c37e050b292" translate="yes" xml:space="preserve">
          <source>If the program wants to handle this exception in particular, it should catch NamingSecurityException explicitly before attempting to catch NamingException. A program might want to do this, for example, if it wants to treat security-related exceptions specially from other sorts of naming exception.</source>
          <target state="translated">プログラムがこの例外を特別に扱いたい場合は、NamingException をキャッチしようとする前に NamingSecurityException を明示的にキャッチしなければなりません。プログラムは、例えば、セキュリティ関連の例外を他の種類の命名例外から特別に扱いたい場合などに、これを行いたいと思うかもしれません。</target>
        </trans-unit>
        <trans-unit id="cb41eee27e4dcb52452672c25f0afd9d73a6363a" translate="yes" xml:space="preserve">
          <source>If the properties for this image are not yet known, this method returns &lt;code&gt;null&lt;/code&gt;, and the &lt;code&gt;ImageObserver&lt;/code&gt; object is notified later.</source>
          <target state="translated">この画像のプロパティがまだわかっていない場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返し、 &lt;code&gt;ImageObserver&lt;/code&gt; オブジェクトは後で通知されます。</target>
        </trans-unit>
        <trans-unit id="c6f5f7560de8700736d8932ba9b65417b272c5ae" translate="yes" xml:space="preserve">
          <source>If the property editor class has a public constructor that takes an Object argument then it will be invoked using the bean parameter as the argument. Otherwise, the default constructor will be invoked.</source>
          <target state="translated">プロパティ・エディタ・クラスがオブジェクトの引数を取るパブリック・コンストラクタを持っている場合は、引数として bean パラメータを使用して呼び出されます。そうでない場合は、デフォルトのコンストラクタが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9e0db0c19ce124c9165b021df450a93e7c1b610d" translate="yes" xml:space="preserve">
          <source>If the property value begins with the ASCII character &lt;code&gt;0&lt;/code&gt; followed by another character, it is parsed as an octal integer exactly as by the method &lt;a href=&quot;#valueOf(java.lang.String,int)&quot;&gt;&lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt;&lt;/a&gt; with radix 8.</source>
          <target state="translated">プロパティ値がASCII文字 &lt;code&gt;0&lt;/code&gt; で始まり、その後に別の文字が続く場合、基数8のメソッド&lt;a href=&quot;#valueOf(java.lang.String,int)&quot;&gt; &lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt; &lt;/a&gt;とまったく同じように、8進整数として解析されます。</target>
        </trans-unit>
        <trans-unit id="b2f66e3274b70113dec5b6e974df0367593c3c3b" translate="yes" xml:space="preserve">
          <source>If the property value begins with the ASCII character &lt;code&gt;0&lt;/code&gt; followed by another character, it is parsed as an octal integer exactly as by the method &lt;a href=&quot;integer#valueOf-java.lang.String-int-&quot;&gt;&lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt;&lt;/a&gt; with radix 8.</source>
          <target state="translated">プロパティ値がASCII文字 &lt;code&gt;0&lt;/code&gt; で始まり、その後に別の文字が続く場合、基数8 のメソッド&lt;a href=&quot;integer#valueOf-java.lang.String-int-&quot;&gt; &lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt; &lt;/a&gt;とまったく同じように、8進整数として解析されます。</target>
        </trans-unit>
        <trans-unit id="d846b960ac8982dfe609a8cc87db59aceb1d4596" translate="yes" xml:space="preserve">
          <source>If the property value begins with the ASCII character &lt;code&gt;0&lt;/code&gt; followed by another character, it is parsed as an octal integer exactly as by the method &lt;a href=&quot;long#valueOf-java.lang.String-int-&quot;&gt;&lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt;&lt;/a&gt; with radix 8.</source>
          <target state="translated">プロパティ値がASCII文字 &lt;code&gt;0&lt;/code&gt; で始まり、その後に別の文字が続く場合、基数8 のメソッド&lt;a href=&quot;long#valueOf-java.lang.String-int-&quot;&gt; &lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt; &lt;/a&gt;とまったく同じように、8進整数として解析されます。</target>
        </trans-unit>
        <trans-unit id="f31812e2389a3fbd5e06ae57741d1eba9e8ae01c" translate="yes" xml:space="preserve">
          <source>If the property value begins with the two ASCII characters &lt;code&gt;0x&lt;/code&gt; or the ASCII character &lt;code&gt;#&lt;/code&gt;, not followed by a minus sign, then the rest of it is parsed as a hexadecimal integer exactly as by the method &lt;a href=&quot;#valueOf(java.lang.String,int)&quot;&gt;&lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt;&lt;/a&gt; with radix 16.</source>
          <target state="translated">プロパティ値が2つのASCII文字 &lt;code&gt;0x&lt;/code&gt; またはASCII文字 &lt;code&gt;#&lt;/code&gt; で始まり、マイナス記号が続かない場合、残りはメソッド&lt;a href=&quot;#valueOf(java.lang.String,int)&quot;&gt; &lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt; &lt;/a&gt;まったく同じように16進整数として解析されます。基数16で。</target>
        </trans-unit>
        <trans-unit id="0c2a7d82245ca935ebfab36515f8332c15126b95" translate="yes" xml:space="preserve">
          <source>If the property value begins with the two ASCII characters &lt;code&gt;0x&lt;/code&gt; or the ASCII character &lt;code&gt;#&lt;/code&gt;, not followed by a minus sign, then the rest of it is parsed as a hexadecimal integer exactly as by the method &lt;a href=&quot;integer#valueOf-java.lang.String-int-&quot;&gt;&lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt;&lt;/a&gt; with radix 16.</source>
          <target state="translated">プロパティ値が2つのASCII文字 &lt;code&gt;0x&lt;/code&gt; またはASCII文字 &lt;code&gt;#&lt;/code&gt; で始まり、その後にマイナス記号が付いていない場合、残りの値は&lt;a href=&quot;integer#valueOf-java.lang.String-int-&quot;&gt; &lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように16進整数として解析されます。基数16。</target>
        </trans-unit>
        <trans-unit id="3e08b19ba4e6b5c03dd249dfcc97aa3c284ebfc6" translate="yes" xml:space="preserve">
          <source>If the property value begins with the two ASCII characters &lt;code&gt;0x&lt;/code&gt; or the ASCII character &lt;code&gt;#&lt;/code&gt;, not followed by a minus sign, then the rest of it is parsed as a hexadecimal integer exactly as for the method &lt;a href=&quot;#valueOf(java.lang.String,int)&quot;&gt;&lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt;&lt;/a&gt; with radix 16.</source>
          <target state="translated">プロパティ値が2つのASCII文字 &lt;code&gt;0x&lt;/code&gt; またはASCII文字 &lt;code&gt;#&lt;/code&gt; で始まり、マイナス記号が続かない場合、残りはメソッド&lt;a href=&quot;#valueOf(java.lang.String,int)&quot;&gt; &lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt; &lt;/a&gt;まったく同じように16進整数として解析されます。基数16で。</target>
        </trans-unit>
        <trans-unit id="b9750c4a61406d17de53527d1fc84ece847954d5" translate="yes" xml:space="preserve">
          <source>If the property value begins with the two ASCII characters &lt;code&gt;0x&lt;/code&gt; or the ASCII character &lt;code&gt;#&lt;/code&gt;, not followed by a minus sign, then the rest of it is parsed as a hexadecimal integer exactly as for the method &lt;a href=&quot;long#valueOf-java.lang.String-int-&quot;&gt;&lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt;&lt;/a&gt; with radix 16.</source>
          <target state="translated">プロパティ値が2つのASCII文字 &lt;code&gt;0x&lt;/code&gt; またはASCII文字 &lt;code&gt;#&lt;/code&gt; で始まり、その後にマイナス記号が付いていない場合、プロパティの残りは、&lt;a href=&quot;long#valueOf-java.lang.String-int-&quot;&gt; &lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように16進整数として解析されます。基数16。</target>
        </trans-unit>
        <trans-unit id="9341abc5c400faccf17a3a07de7fac11536f5e5a" translate="yes" xml:space="preserve">
          <source>If the property value must be one of a set of known tagged values, then this method should return an array of the tag values.</source>
          <target state="translated">プロパティ値が既知のタグ付き値のセットのいずれかでなければならない場合、このメソッドはタグ値の配列を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="6bfe54e945e0b7d817f4c40688004d1c3e18c1e7" translate="yes" xml:space="preserve">
          <source>If the property value must be one of a set of known tagged values, then this method should return an array of the tag values. This can be used to represent (for example) enum values. If a PropertyEditor supports tags, then it should support the use of setAsText with a tag value as a way of setting the value.</source>
          <target state="translated">プロパティ値が既知のタグ付き値のセットのいずれかでなければならない場合、このメソッドはタグ付き値の配列を返す必要があります。これは、(例えば)列挙型の値を表現するために使用できます。PropertyEditor がタグをサポートしている場合は、値を設定する方法としてタグ値を用いた setAsText の使用をサポートしている必要があります。</target>
        </trans-unit>
        <trans-unit id="6cd73dc02e49fa592dbe8e15dd72558ce6881cfe" translate="yes" xml:space="preserve">
          <source>If the property value must be one of a set of known tagged values, then this method should return an array of the tags.</source>
          <target state="translated">プロパティ値が既知のタグ付き値のセットのいずれかでなければならない場合、このメソッドはタグの配列を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="ef546a8769cb06ecdb14394d21b131483d0cbdbf" translate="yes" xml:space="preserve">
          <source>If the property value must be one of a set of known tagged values, then this method should return an array of the tags. This can be used to represent (for example) enum values. If a PropertyEditor supports tags, then it should support the use of setAsText with a tag value as a way of setting the value and the use of getAsText to identify the current value.</source>
          <target state="translated">プロパティ値が既知のタグ付き値のセットのいずれかでなければならない場合、このメソッドはタグの配列を返す必要があります。これは、(例えば)列挙型の値を表現するために使用できます。PropertyEditor がタグをサポートしている場合は、値を設定する方法としてタグ値を持つ setAsText の使用と、現在の値を識別するための getAsText の使用をサポートしている必要があります。</target>
        </trans-unit>
        <trans-unit id="9d4476facb38f8ef6d3eac0b77402edf9355a984" translate="yes" xml:space="preserve">
          <source>If the protected key is of type &lt;code&gt;java.security.PrivateKey&lt;/code&gt;, it must be accompanied by a certificate chain certifying the corresponding public key.</source>
          <target state="translated">保護された鍵のタイプが &lt;code&gt;java.security.PrivateKey&lt;/code&gt; である場合、対応する公開鍵を証明する証明書チェーンを伴う必要があります。</target>
        </trans-unit>
        <trans-unit id="8efe5ceae64e694176e05313f25266d8f3110e7f" translate="yes" xml:space="preserve">
          <source>If the protected key is of type &lt;code&gt;java.security.PrivateKey&lt;/code&gt;, it must be accompanied by a certificate chain certifying the corresponding public key. If the underlying keystore implementation is of type &lt;code&gt;jks&lt;/code&gt;, &lt;code&gt;key&lt;/code&gt; must be encoded as an &lt;code&gt;EncryptedPrivateKeyInfo&lt;/code&gt; as defined in the PKCS #8 standard.</source>
          <target state="translated">保護された鍵のタイプが &lt;code&gt;java.security.PrivateKey&lt;/code&gt; である場合、対応する公開鍵を証明する証明書チェーンを伴う必要があります。基になるキーストアの実装のタイプが &lt;code&gt;jks&lt;/code&gt; の場合、PKCS＃8標準で定義されているように、 &lt;code&gt;key&lt;/code&gt; &lt;code&gt;EncryptedPrivateKeyInfo&lt;/code&gt; としてエンコードする必要があります。</target>
        </trans-unit>
        <trans-unit id="1e8fade5fe2a933f005d764f4f99cdb58a44ddd5" translate="yes" xml:space="preserve">
          <source>If the protocol is &quot;file&quot; and there is an authority component, then permission to connect to and accept connections from that authority may be granted. If the protocol is &quot;file&quot; and the path specifies a file, then permission to read that file is granted. If protocol is &quot;file&quot; and the path is a directory, permission is granted to read all files and (recursively) all files and subdirectories contained in that directory.</source>
          <target state="translated">プロトコルが「file」であり、権限のコンポーネントが存在する場合、その権限への 接続とその権限からの接続を受け入れる許可が与えられるかもしれない。プロトコルが &quot;file &quot;でパスがファイルを指定している場合、そのファイルを読む権限が与えられる。プロトコルが &quot;file &quot;でパスがディレクトリの場合、そのディレクトリに含まれる全てのファイルと(再帰的に)全てのファイルとサブディレクトリを読み込む権限が付与されます。</target>
        </trans-unit>
        <trans-unit id="bb5e9c9f7d7d328c23292e6a5e585815516946f8" translate="yes" xml:space="preserve">
          <source>If the protocol is not &quot;file&quot;, then permission to connect to and accept connections from the URL's host is granted.</source>
          <target state="translated">プロトコルが &quot;file &quot;でない場合は、URLのホストへの接続とそのホストからの接続を受け入れる許可が与えられます。</target>
        </trans-unit>
        <trans-unit id="40b1f09001ad2f74e8788b23bbde2accb73745d9" translate="yes" xml:space="preserve">
          <source>If the protocol of this URL is &quot;jar&quot;, then the permission granted is based on the permission that is required by the URL of the Jar file.</source>
          <target state="translated">このURLのプロトコルが &quot;jar &quot;の場合、付与されるパーミッションは、JarファイルのURLが要求するパーミッションに基づいています。</target>
        </trans-unit>
        <trans-unit id="2f6b4c1a7017bece1784e1294dd82a4357362b10" translate="yes" xml:space="preserve">
          <source>If the provider class is specified, and it can be successfully retrieved from the installed providers, the list of &lt;code&gt;MidiDevice.Info&lt;/code&gt; objects is retrieved from the provider. Otherwise, or when these devices do not provide a subsequent match, the list is retrieved from &lt;a href=&quot;#getMidiDeviceInfo()&quot;&gt;&lt;code&gt;getMidiDeviceInfo()&lt;/code&gt;&lt;/a&gt; to contain all available &lt;code&gt;MidiDevice.Info&lt;/code&gt; objects.</source>
          <target state="translated">プロバイダークラスが指定されていて、インストールされているプロバイダーから正常に取得できる場合、 &lt;code&gt;MidiDevice.Info&lt;/code&gt; オブジェクトのリストがプロバイダーから取得されます。それ以外の場合、またはこれらのデバイスが後続の一致を提供しない場合、リストは&lt;a href=&quot;#getMidiDeviceInfo()&quot;&gt; &lt;code&gt;getMidiDeviceInfo()&lt;/code&gt; &lt;/a&gt;から取得され、使用可能なすべての &lt;code&gt;MidiDevice.Info&lt;/code&gt; オブジェクトが含まれます。</target>
        </trans-unit>
        <trans-unit id="f7aff0ef21850924145fd8d1eef710a0152583e2" translate="yes" xml:space="preserve">
          <source>If the provider class is specified, and it can be successfully retrieved from the installed providers, the list of &lt;code&gt;MidiDevice.Info&lt;/code&gt; objects is retrieved from the provider. Otherwise, or when these devices do not provide a subsequent match, the list is retrieved from &lt;a href=&quot;midisystem#getMidiDeviceInfo--&quot;&gt;&lt;code&gt;getMidiDeviceInfo()&lt;/code&gt;&lt;/a&gt; to contain all available &lt;code&gt;MidiDevice.Info&lt;/code&gt; objects.</source>
          <target state="translated">プロバイダークラスが指定されていて、インストールされているプロバイダーから正常に取得できる場合、 &lt;code&gt;MidiDevice.Info&lt;/code&gt; オブジェクトのリストがプロバイダーから取得されます。それ以外の場合、またはこれらのデバイスが後続の一致を提供しない場合、リストは&lt;a href=&quot;midisystem#getMidiDeviceInfo--&quot;&gt; &lt;code&gt;getMidiDeviceInfo()&lt;/code&gt; &lt;/a&gt;から取得され、使用可能なすべての &lt;code&gt;MidiDevice.Info&lt;/code&gt; オブジェクトが含まれます。</target>
        </trans-unit>
        <trans-unit id="4f695eb9c45a7476a06cdea16f6e7dbf1118f942" translate="yes" xml:space="preserve">
          <source>If the provider class is specified, and it can be successfully retrieved from the installed providers, the list of &lt;code&gt;Mixer.Info&lt;/code&gt; objects is retrieved from the provider. Otherwise, or when these mixers do not provide a subsequent match, the list is retrieved from &lt;a href=&quot;#getMixerInfo()&quot;&gt;&lt;code&gt;getMixerInfo()&lt;/code&gt;&lt;/a&gt; to contain all available &lt;code&gt;Mixer.Info&lt;/code&gt; objects.</source>
          <target state="translated">プロバイダークラスが指定されていて、インストールされているプロバイダーから正常に取得できる場合、 &lt;code&gt;Mixer.Info&lt;/code&gt; オブジェクトのリストがプロバイダーから取得されます。それ以外の場合、またはこれらのミキサーが後続の一致を提供しない場合、リストは&lt;a href=&quot;#getMixerInfo()&quot;&gt; &lt;code&gt;getMixerInfo()&lt;/code&gt; &lt;/a&gt;から取得され、使用可能なすべての &lt;code&gt;Mixer.Info&lt;/code&gt; オブジェクトが含まれます。</target>
        </trans-unit>
        <trans-unit id="0e695a51fa3964ae1c7613ee0169a232ee920a9d" translate="yes" xml:space="preserve">
          <source>If the provider class is specified, and it can be successfully retrieved from the installed providers, the list of &lt;code&gt;Mixer.Info&lt;/code&gt; objects is retrieved from the provider. Otherwise, or when these mixers do not provide a subsequent match, the list is retrieved from &lt;a href=&quot;audiosystem#getMixerInfo--&quot;&gt;&lt;code&gt;getMixerInfo()&lt;/code&gt;&lt;/a&gt; to contain all available &lt;code&gt;Mixer.Info&lt;/code&gt; objects.</source>
          <target state="translated">プロバイダークラスが指定されていて、インストールされているプロバイダーから正常に取得できる場合、 &lt;code&gt;Mixer.Info&lt;/code&gt; オブジェクトのリストがプロバイダーから取得されます。それ以外の場合、またはこれらのミキサーが後続の一致を提供しない場合、リストは&lt;a href=&quot;audiosystem#getMixerInfo--&quot;&gt; &lt;code&gt;getMixerInfo()&lt;/code&gt; &lt;/a&gt;から取得され、使用可能なすべての &lt;code&gt;Mixer.Info&lt;/code&gt; オブジェクトが含まれます。</target>
        </trans-unit>
        <trans-unit id="60186988e7792b549f33f598eb6796ff82e377be" translate="yes" xml:space="preserve">
          <source>If the provider implementation is dynamic, then the flag gives the option of preventing the returned rules from being cached in &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt;. When the flag is true, the provider is permitted to return null, where null will prevent the rules from being cached in &lt;code&gt;ZoneId&lt;/code&gt;. When the flag is false, the provider must return non-null rules.</source>
          <target state="translated">プロバイダーの実装が動的である場合、フラグにより​​、返されたルールが&lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; &lt;/a&gt;にキャッシュされないようにするオプションが提供されます。フラグがtrueの場合、プロバイダーはnullを返すことが許可されます &lt;code&gt;ZoneId&lt;/code&gt; は、ルールがZoneIdにキャッシュされないようにします。フラグがfalseの場合、プロバイダーはnull以外のルールを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="e445a3443a37b81ff119acc67b2ad73cb5fb6432" translate="yes" xml:space="preserve">
          <source>If the provider implementation is not dynamic, then the result of the method must be the non-null set of rules selected by the ID.</source>
          <target state="translated">プロバイダの実装が動的でない場合、メソッドの結果は、IDによって選択されたルールの非ヌルのセットでなければなりません。</target>
        </trans-unit>
        <trans-unit id="17253c90de92aa58bc36b4a773f197b6ca04e1e5" translate="yes" xml:space="preserve">
          <source>If the provider package list exists and is not empty, then for each element &lt;code&gt;&lt;em&gt;pkg&lt;/em&gt;&lt;/code&gt; of the list, the factory will attempt to load the class</source>
          <target state="translated">プロバイダーパッケージリストが存在し、空ではない場合、リストの各要素 &lt;code&gt;&lt;em&gt;pkg&lt;/em&gt;&lt;/code&gt; について、ファクトリーはクラスのロードを試みます</target>
        </trans-unit>
        <trans-unit id="622b60c7279314ec79406efe2e9c7dcfd8abc786" translate="yes" xml:space="preserve">
          <source>If the proxy could not be created, a &lt;a href=&quot;../stubnotfoundexception&quot;&gt;&lt;code&gt;StubNotFoundException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">プロキシを作成できなかった場合、&lt;a href=&quot;../stubnotfoundexception&quot;&gt; &lt;code&gt;StubNotFoundException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="d01e7ab79ccc797c94edb821e2001a4b21858cc0" translate="yes" xml:space="preserve">
          <source>If the queue fits in the specified array with room to spare (i.e., the array has more elements than the queue), the element in the array immediately following the end of the collection is set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">キューに余裕がある指定された配列に収まる場合（つまり、配列にキューより多くの要素がある場合）、コレクションの最後の直後の配列の要素は &lt;code&gt;null&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="9a336b114f09759ab0e34346b42e3f6b6437e8fc" translate="yes" xml:space="preserve">
          <source>If the radix is less than &lt;a href=&quot;../lang/character#MIN_RADIX&quot;&gt;&lt;code&gt;Character.MIN_RADIX&lt;/code&gt;&lt;/a&gt; or greater than &lt;a href=&quot;../lang/character#MAX_RADIX&quot;&gt;&lt;code&gt;Character.MAX_RADIX&lt;/code&gt;&lt;/a&gt;, then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">基数未満である場合&lt;a href=&quot;../lang/character#MIN_RADIX&quot;&gt; &lt;code&gt;Character.MIN_RADIX&lt;/code&gt; &lt;/a&gt;以上より&lt;a href=&quot;../lang/character#MAX_RADIX&quot;&gt; &lt;code&gt;Character.MAX_RADIX&lt;/code&gt; &lt;/a&gt;、その後、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="99b3e8d45f37070b6c7a53d21e9f356902e9580a" translate="yes" xml:space="preserve">
          <source>If the radix is less than &lt;code&gt;Character.MIN_RADIX&lt;/code&gt; or greater than &lt;code&gt;Character.MAX_RADIX&lt;/code&gt;, then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">基数未満である場合 &lt;code&gt;Character.MIN_RADIX&lt;/code&gt; 以上より &lt;code&gt;Character.MAX_RADIX&lt;/code&gt; 、その後、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="a648ff4273d99de4e1bc95f12a1486f421ca4054" translate="yes" xml:space="preserve">
          <source>If the radix is not in the range &lt;code&gt;MIN_RADIX&lt;/code&gt; &amp;le; &lt;code&gt;radix&lt;/code&gt; &amp;le; &lt;code&gt;MAX_RADIX&lt;/code&gt; or if the character is not a valid digit in the specified radix, &lt;code&gt;-1&lt;/code&gt; is returned. A character is a valid digit if at least one of the following is true:</source>
          <target state="translated">基数が範囲内にない場合 &lt;code&gt;MIN_RADIX&lt;/code&gt; &amp;le; &lt;code&gt;radix&lt;/code&gt; &amp;le; &lt;code&gt;MAX_RADIX&lt;/code&gt; や文字が指定された基数の有効数字でない場合は、 &lt;code&gt;-1&lt;/code&gt; が返されます。以下の少なくとも1つが当てはまる場合、文字は有効な数字です。</target>
        </trans-unit>
        <trans-unit id="d4a1e7fa070e5bd8bde88ce903f985156a6f1b0d" translate="yes" xml:space="preserve">
          <source>If the radix is not in the range &lt;code&gt;MIN_RADIX&lt;/code&gt; &amp;le; &lt;code&gt;radix&lt;/code&gt; &amp;le; &lt;code&gt;MAX_RADIX&lt;/code&gt; or if the value of &lt;code&gt;ch&lt;/code&gt; is not a valid digit in the specified radix, &lt;code&gt;-1&lt;/code&gt; is returned. A character is a valid digit if at least one of the following is true:</source>
          <target state="translated">基数が範囲内にない場合 &lt;code&gt;MIN_RADIX&lt;/code&gt; &amp;le; &lt;code&gt;radix&lt;/code&gt; &amp;le; &lt;code&gt;MAX_RADIX&lt;/code&gt; の価値場合は &lt;code&gt;ch&lt;/code&gt; が指定された基数の有効数字ではありません、 &lt;code&gt;-1&lt;/code&gt; が返されます。以下の少なくとも1つが当てはまる場合、文字は有効な数字です。</target>
        </trans-unit>
        <trans-unit id="671d0d109c8316ebaf1f99c9e9a6b5ad599bcdb9" translate="yes" xml:space="preserve">
          <source>If the radix is smaller than &lt;code&gt;Character.MIN_RADIX&lt;/code&gt; or larger than &lt;code&gt;Character.MAX_RADIX&lt;/code&gt;, then the radix &lt;code&gt;10&lt;/code&gt; is used instead.</source>
          <target state="translated">基数がより小さい場合 &lt;code&gt;Character.MIN_RADIX&lt;/code&gt; より以上 &lt;code&gt;Character.MAX_RADIX&lt;/code&gt; 、次いで基数 &lt;code&gt;10&lt;/code&gt; が代わりに使用されます。</target>
        </trans-unit>
        <trans-unit id="88c548789120cc039a2be678f91a294c4a57446d" translate="yes" xml:space="preserve">
          <source>If the read lock is acquired then the value &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">読み取りロックが取得されると、値 &lt;code&gt;true&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="f1de0197561ab1c42739d318716c6da06cb232ac" translate="yes" xml:space="preserve">
          <source>If the reader does not support thumbnails, (&lt;code&gt;readerSupportsThumbnails&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;), an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; will be thrown regardless of whether an input source has been set or whether the indices are in bounds.</source>
          <target state="translated">リーダーがサムネイルをサポートしない場合（ &lt;code&gt;readerSupportsThumbnails&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; を返す）、入力ソースが設定されているかどうか、またはインデックスが境界内にあるかどうかに関係なく、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="bb2451c0113cb8c1e0775121dff8874d947bd15f" translate="yes" xml:space="preserve">
          <source>If the reader does not support thumbnails, (&lt;code&gt;readerSupportsThumbnails&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;), an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; will be thrown.</source>
          <target state="translated">リーダーがサムネイルをサポートしていない場合（ &lt;code&gt;readerSupportsThumbnails&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; を返す）、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="79b35d0dc9d2895dea0c8a3b110254c91b6bdc53" translate="yes" xml:space="preserve">
          <source>If the receiver is laying its &lt;code&gt;View&lt;/code&gt;s along the &lt;code&gt;Y_AXIS&lt;/code&gt;, this will return the value from invoking the same method on the &lt;code&gt;View&lt;/code&gt; responsible for rendering &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;bias&lt;/code&gt;. Otherwise this will return false.</source>
          <target state="translated">受信者が &lt;code&gt;View&lt;/code&gt; &lt;code&gt;Y_AXIS&lt;/code&gt; に沿って配置している場合、これは、レンダリング &lt;code&gt;position&lt;/code&gt; と &lt;code&gt;bias&lt;/code&gt; 担当する &lt;code&gt;View&lt;/code&gt; 同じメソッドを呼び出したときの値を返します。それ以外の場合、これはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="00cde4cc70dae1cb495d031cb9acb67bc8abef24" translate="yes" xml:space="preserve">
          <source>If the recognized year number is less than 100, it is interpreted as an abbreviated year relative to a century of which dates are within 80 years before and 19 years after the time when the Date class is initialized. After adjusting the year number, 1900 is subtracted from it. For example, if the current year is 1999 then years in the range 19 to 99 are assumed to mean 1919 to 1999, while years from 0 to 18 are assumed to mean 2000 to 2018. Note that this is slightly different from the interpretation of years less than 100 that is used in &lt;a href=&quot;../text/simpledateformat&quot;&gt;&lt;code&gt;SimpleDateFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">認識された年数が100未満の場合、日付クラスが初期化された時刻の前の80年から後の19年以内にある世紀を基準にした省略年として解釈されます。年数を調整した後、それから1900が引かれます。たとえば、現在の年が1999年の場合、19から99の範囲の年は1919から1999を意味すると見なされ、0から18の年は2000から2018を意味すると見なされます。これは年の解釈とわずかに異なることに注意してください。&lt;a href=&quot;../text/simpledateformat&quot;&gt; &lt;code&gt;SimpleDateFormat&lt;/code&gt; &lt;/a&gt;で使用される100未満。</target>
        </trans-unit>
        <trans-unit id="010a039d9be90452e6c238ffa1c527f615bc99fe" translate="yes" xml:space="preserve">
          <source>If the recorded values contain infinities of one sign and an intermediate sum overflows to an infinity of the opposite sign, the sum may be NaN.</source>
          <target state="translated">記録された値が1つの符号の無限大を含み、中間和が反対符号の無限大にオーバーフローする場合、その和はNaNであってもよい。</target>
        </trans-unit>
        <trans-unit id="fcacf666045f97e91725b22bc1de0a3b50a4cbe3" translate="yes" xml:space="preserve">
          <source>If the recorded values contain infinities of opposite sign, the sum will be NaN.</source>
          <target state="translated">記録された値に逆符号の無限大が含まれている場合、和はNaNとなります。</target>
        </trans-unit>
        <trans-unit id="75c49e5b2d7ecad5d026c07a5fdde433fcf5271a" translate="yes" xml:space="preserve">
          <source>If the recorded values contain one or more infinities, the sum will be infinite or NaN.</source>
          <target state="translated">記録された値に1つ以上の無限大が含まれている場合、その合計は無限大またはNaNとなります。</target>
        </trans-unit>
        <trans-unit id="3499044671723182fe3ed32287d4d0e02001dbb2" translate="yes" xml:space="preserve">
          <source>If the recording is already closed, invoking this method has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ad84aa4b7a2b33d920b4d445e6eaeb418fc1cc" translate="yes" xml:space="preserve">
          <source>If the region is such that this width is zero, an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown.</source>
          <target state="translated">領域がこの幅がゼロである場合、 &lt;code&gt;IllegalStateException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="5c3b8b1f31e8b1eb0578d0596a852433e7405f3a" translate="yes" xml:space="preserve">
          <source>If the relation is represented by an MBean (created by the user and added as a relation in the Relation Service), returns the ObjectName of the MBean.</source>
          <target state="translated">リレーションが MBean (ユーザによって作成され、リレーションサービスでリレーションとして追加されたもの)で表現されている場合、MBean の ObjectName を返します。</target>
        </trans-unit>
        <trans-unit id="a4fea0cc0a062ac6f4b44054eaf08ec5f2eead20" translate="yes" xml:space="preserve">
          <source>If the relationship between nested types is expressed directly through the &lt;code&gt;NestHost&lt;/code&gt; and &lt;code&gt;NestMembers&lt;/code&gt; attributes (see the Java Virtual Machine Specification, sections 4.7.28 and 4.7.29), then the associated &lt;code&gt;Lookup&lt;/code&gt; object provides direct access to the lookup class and all of its nestmates (see &lt;a href=&quot;../class#getNestHost()&quot;&gt;&lt;code&gt;Class.getNestHost&lt;/code&gt;&lt;/a&gt;). Otherwise, access between nested classes is obtained by the Java compiler creating a wrapper method to access a private method of another class in the same nest. For example, a nested class &lt;code&gt;C.D&lt;/code&gt; can access private members within other related classes such as &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;C.D.E&lt;/code&gt;, or &lt;code&gt;C.B&lt;/code&gt;, but the Java compiler may need to generate wrapper methods in those related classes. In such cases, a &lt;code&gt;Lookup&lt;/code&gt; object on &lt;code&gt;C.E&lt;/code&gt; would be unable to access those private members. A workaround for this limitation is the &lt;a href=&quot;#in(java.lang.Class)&quot;&gt;&lt;code&gt;Lookup.in&lt;/code&gt;&lt;/a&gt; method, which can transform a lookup on &lt;code&gt;C.E&lt;/code&gt; into one on any of those other classes, without special elevation of privilege.</source>
          <target state="translated">ネストされたタイプとの関係を介して直接表現されている場合は &lt;code&gt;NestHost&lt;/code&gt; と &lt;code&gt;NestMembers&lt;/code&gt; 属性（Java仮想マシン仕様を参照してください、セクション4.7.28および4.7.29）は、その後、関連する &lt;code&gt;Lookup&lt;/code&gt; オブジェクトは、ルックアップクラスへの直接アクセスを提供し、そのnestmatesのすべて（&lt;a href=&quot;../class#getNestHost()&quot;&gt; &lt;code&gt;Class.getNestHost&lt;/code&gt; を&lt;/a&gt;参照してください）。それ以外の場合、ネストされたクラス間のアクセスは、同じネスト内の別のクラスのプライベートメソッドにアクセスするラッパーメソッドを作成するJavaコンパイラによって取得されます。たとえば、ネストされたクラス &lt;code&gt;C.D&lt;/code&gt; は、 &lt;code&gt;C&lt;/code&gt; 、 &lt;code&gt;C.D.E&lt;/code&gt; 、または &lt;code&gt;C.B&lt;/code&gt; などの他の関連クラス内のプライベートメンバーにアクセスできます。ただし、Javaコンパイラは、これらの関連クラスでラッパーメソッドを生成する必要がある場合があります。このような場合、 &lt;code&gt;C.E&lt;/code&gt; &lt;code&gt;Lookup&lt;/code&gt; オブジェクトはそれらのプライベートメンバーにアクセスできません。この制限の回避策は、&lt;a href=&quot;#in(java.lang.Class)&quot;&gt; &lt;code&gt;Lookup.in&lt;/code&gt; &lt;/a&gt;メソッドです。このメソッドは、特別な特権の昇格なしに、 &lt;code&gt;C.E&lt;/code&gt; ルックアップを他のクラスのルックアップに変換できます。</target>
        </trans-unit>
        <trans-unit id="47d94839dfe119ae8b427b70bc88efb6e6b48192" translate="yes" xml:space="preserve">
          <source>If the relationship between nested types is expressed directly through the &lt;code&gt;NestHost&lt;/code&gt; and &lt;code&gt;NestMembers&lt;/code&gt; attributes (see the Java Virtual Machine Specification, sections &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.7.28&quot;&gt;4.7.28&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.7.29&quot;&gt;4.7.29&lt;/a&gt;), then the associated &lt;code&gt;Lookup&lt;/code&gt; object provides direct access to the lookup class and all of its nestmates (see &lt;a href=&quot;../class#getNestHost()&quot;&gt;&lt;code&gt;Class.getNestHost&lt;/code&gt;&lt;/a&gt;). Otherwise, access between nested classes is obtained by the Java compiler creating a wrapper method to access a private method of another class in the same nest. For example, a nested class &lt;code&gt;C.D&lt;/code&gt; can access private members within other related classes such as &lt;code&gt;C&lt;/code&gt;, &lt;code&gt;C.D.E&lt;/code&gt;, or &lt;code&gt;C.B&lt;/code&gt;, but the Java compiler may need to generate wrapper methods in those related classes. In such cases, a &lt;code&gt;Lookup&lt;/code&gt; object on &lt;code&gt;C.E&lt;/code&gt; would be unable to access those private members. A workaround for this limitation is the &lt;a href=&quot;#in(java.lang.Class)&quot;&gt;&lt;code&gt;Lookup.in&lt;/code&gt;&lt;/a&gt; method, which can transform a lookup on &lt;code&gt;C.E&lt;/code&gt; into one on any of those other classes, without special elevation of privilege.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b1911621b01dde472303d885688d4202ac98fc" translate="yes" xml:space="preserve">
          <source>If the remapping function returns &lt;code&gt;null&lt;/code&gt;, the mapping is removed (or remains absent if initially absent). If the remapping function itself throws an (unchecked) exception, the exception is rethrown, and the current mapping is left unchanged.</source>
          <target state="translated">再マッピング関数が &lt;code&gt;null&lt;/code&gt; を返す場合、マッピングは削除されます（または、最初に存在しない場合は存在しないままになります）。再マッピング関数自体が（チェックされていない）例外をスローした場合、例外は再スローされ、現在のマッピングは変更されません。</target>
        </trans-unit>
        <trans-unit id="eed62fa294d3e85832e433cc3d47b46c67241064" translate="yes" xml:space="preserve">
          <source>If the remapping function returns &lt;code&gt;null&lt;/code&gt;, the mapping is removed. If the remapping function itself throws an (unchecked) exception, the exception is rethrown, and the current mapping is left unchanged.</source>
          <target state="translated">再マッピング関数が &lt;code&gt;null&lt;/code&gt; を返す場合、マッピングは削除されます。再マッピング関数自体が（チェックされていない）例外をスローした場合、例外は再スローされ、現在のマッピングは変更されません。</target>
        </trans-unit>
        <trans-unit id="6c90ca0b52fc5c89008817da193bca78cfc36ed6" translate="yes" xml:space="preserve">
          <source>If the remote MBean Server is 1.2</source>
          <target state="translated">リモートの MBean サーバが 1.2 の場合</target>
        </trans-unit>
        <trans-unit id="03cc18ab3cabbd8e48236da939259f3b987d3f83" translate="yes" xml:space="preserve">
          <source>If the remote destination to which the socket is connected does not exist, or is otherwise unreachable, and if an ICMP destination unreachable packet has been received for that address, then a subsequent call to send or receive may throw a PortUnreachableException. Note, there is no guarantee that the exception will be thrown.</source>
          <target state="translated">ソケットが接続されているリモートの宛先が存在しないか、または到達できない場合、そのアドレスに対して ICMP 宛先到達不能パケットを受信した場合、その後の送信または受信呼び出しで PortUnreachableException がスローされる可能性があります。ただし、例外がスローされることを保証するものではありません。</target>
        </trans-unit>
        <trans-unit id="57098f4ee262627cd7b01db63d1f7f1265d43afa" translate="yes" xml:space="preserve">
          <source>If the requested attribute is not in the list, this is a no-op.</source>
          <target state="translated">要求された属性がリストにない場合は無効です。</target>
        </trans-unit>
        <trans-unit id="018a97b62ca2a70069aed6a1c61c5a920e8d9cac" translate="yes" xml:space="preserve">
          <source>If the requested opacity value is less than &lt;code&gt;1.0f&lt;/code&gt;, and any of the above conditions are not met, the window opacity will not change, and the &lt;code&gt;IllegalComponentStateException&lt;/code&gt; will be thrown.</source>
          <target state="translated">要求された不透明度の値が &lt;code&gt;1.0f&lt;/code&gt; 未満で、上記の条件のいずれかが満たされない場合、ウィンドウの不透明度は変更されず、 &lt;code&gt;IllegalComponentStateException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="1d89a1cc49adab461bf1f01dc66545d017f8bacb" translate="yes" xml:space="preserve">
          <source>If the requested option is binary, it can be set using this method by a java.lang.Boolean:</source>
          <target state="translated">要求されたオプションがバイナリの場合は、このメソッドを使用してjava.lang.Booleanで設定することができます。</target>
        </trans-unit>
        <trans-unit id="38ce1c03b79a7b89afd15d63c7ba902df5495593" translate="yes" xml:space="preserve">
          <source>If the requested permission is allowed, this method returns quietly. If denied, a SecurityException is raised.</source>
          <target state="translated">要求された許可が許可されている場合、このメソッドは静かに返されます。拒否された場合は SecurityException が発生します。</target>
        </trans-unit>
        <trans-unit id="f2e93c0c542e53839669b61ae87dd1ffe992a629" translate="yes" xml:space="preserve">
          <source>If the requested shape is not &lt;code&gt;null&lt;/code&gt;, and any of the above conditions are not met, the shape of this window will not change, and either the &lt;code&gt;UnsupportedOperationException&lt;/code&gt; or &lt;code&gt;
 IllegalComponentStateException&lt;/code&gt; will be thrown.</source>
          <target state="translated">要求された形状が &lt;code&gt;null&lt;/code&gt; でなく、上記の条件のいずれかが満たされない場合、このウィンドウの形状は変更されず、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; または &lt;code&gt; IllegalComponentStateException&lt;/code&gt; のいずれかがスローされます。</target>
        </trans-unit>
        <trans-unit id="4c37b9290b4ade460cdf802abd93f12770f8d7f0" translate="yes" xml:space="preserve">
          <source>If the required access and argument checks succeed and the instantiation will proceed, the constructor's declaring class is initialized if it has not already been initialized.</source>
          <target state="translated">必要なアクセスと引数のチェックが成功してインスタンス化が進むと、コンストラクタの宣言クラスがまだ初期化されていない場合は初期化されます。</target>
        </trans-unit>
        <trans-unit id="0f30dad69df088eb0e8a01273d14f832b9a0aeff" translate="yes" xml:space="preserve">
          <source>If the required properties have not been set, an exception is thrown. If this method is successful, the current contents of the rowset are discarded and the rowset's metadata is also (re)set. If there are outstanding updates, they are ignored.</source>
          <target state="translated">必要なプロパティが設定されていない場合は例外が発生します。このメソッドが成功した場合、現在の行セットの内容は破棄され、行セットのメタデータも(再)設定されます。未処理の更新がある場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="1eeec4d99736a2aab560f80ec43309d2f90d3ed3" translate="yes" xml:space="preserve">
          <source>If the resolver argument is null, the URIResolver value will be cleared and the transformer will no longer have a resolver.</source>
          <target state="translated">resolver 引数が null の場合、URIResolver の値はクリアされ、トランスフォーマは resolver を持たなくなります。</target>
        </trans-unit>
        <trans-unit id="fa7d4a7621c617404117d28c394ccda5b256dfa2" translate="yes" xml:space="preserve">
          <source>If the resource manager did not commit the transaction and the paramether onePhase is set to true, the resource manager may throw one of the XA_RB* exceptions. Upon return, the resource manager has rolled back the branch's work and has released all held resources.</source>
          <target state="translated">リソースマネージャがトランザクションをコミットしておらず、パラメータ onePhase が true に設定されている場合、リソースマネージャは XA_RB*例外をスローすることがあります。この場合、リソースマネージャはブランチの作業をロールバックし、保持していたすべてのリソースを解放します。</target>
        </trans-unit>
        <trans-unit id="03e08a40eb5811e25250f7c549a9fd7b28757670" translate="yes" xml:space="preserve">
          <source>If the resource name ends with &quot;&lt;code&gt;.class&lt;/code&gt;&quot; then it is not encapsulated.</source>
          <target state="translated">リソース名が「 &lt;code&gt;.class&lt;/code&gt; 」で終わる場合、カプセル化されていません。</target>
        </trans-unit>
        <trans-unit id="62e2c41caf4aaf142a44a8c6c165f53c1d68b4be" translate="yes" xml:space="preserve">
          <source>If the result of this method is used to access the event source, for example, to look up the object or get its attributes, then it needs to be locked because implementations of &lt;code&gt;Context&lt;/code&gt; are not guaranteed to be thread-safe (and &lt;code&gt;EventContext&lt;/code&gt; is a subinterface of &lt;code&gt;Context&lt;/code&gt;). See the &lt;a href=&quot;package-summary#THREADING&quot;&gt;package description&lt;/a&gt; for more information on threading issues.</source>
          <target state="translated">このメソッドの結果を使用して、たとえばオブジェクトを検索したり、その属性を取得したりするなど、イベントソースにアクセスする場合は、 &lt;code&gt;Context&lt;/code&gt; の実装がスレッドセーフであることが保証されていないため、ロックする必要があります（ &lt;code&gt;EventContext&lt;/code&gt; は、 &lt;code&gt;Context&lt;/code&gt; のサブインターフェース）。スレッドの問題の詳細については、&lt;a href=&quot;package-summary#THREADING&quot;&gt;パッケージの説明&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="da3549687bea03167816a9b17ffaee344e82b496" translate="yes" xml:space="preserve">
          <source>If the resulting &lt;code&gt;OffsetDateTime&lt;/code&gt; is invalid, an exception is thrown. The time and offset do not affect the calculation and will be the same in the result.</source>
          <target state="translated">結果の &lt;code&gt;OffsetDateTime&lt;/code&gt; が無効な場合、例外がスローされます。時間とオフセットは計算に影響を与えず、結果は同じになります。</target>
        </trans-unit>
        <trans-unit id="35a287431d52af9ee48c2d5a75b9272669222ecb" translate="yes" xml:space="preserve">
          <source>If the resulting &lt;code&gt;Rectangle&lt;/code&gt; would have a dimension too large to be expressed as an &lt;code&gt;int&lt;/code&gt;, the result will have a dimension of &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; along that dimension.</source>
          <target state="translated">結果の &lt;code&gt;Rectangle&lt;/code&gt; の次元が大きすぎて &lt;code&gt;int&lt;/code&gt; として表現できない場合、結果はその次元に沿って &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; の次元になります。</target>
        </trans-unit>
        <trans-unit id="1d921983024b3a73fd6c36177cb6aac0894e7d34" translate="yes" xml:space="preserve">
          <source>If the resulting configuration defines a level for a logger and if the resulting level is different than the level specified in the the old configuration, or not specified in the old configuration, then if the logger exists or if children for that logger exist, the level for that logger will be updated, and the change propagated to any existing logger children. This may cause the logger to be created, if necessary.</source>
          <target state="translated">結果の設定がロガーのレベルを定義し、結果のレベルが古い設定で指定されたレベルと異なる場合、または古い設定で 指定されていない場合、ロガーが存在するか、そのロガーの子が存在する場合、そのロガーのレベルが更新され、その変更は既存のロガーの子に伝 達することになります。これにより、必要に応じてロガーが作成される場合があります。</target>
        </trans-unit>
        <trans-unit id="587aeb87194f308dfa93440ba8ff79e1c3891aa4" translate="yes" xml:space="preserve">
          <source>If the resulting configuration defines a list of handlers for a logger, and if the resulting list is different than the list specified in the old configuration for that logger (that could be empty), then if the logger exists or its children exist, the handlers associated with that logger are closed and removed and the new handlers will be created per the resulting configuration and added to that logger, creating that logger if necessary.</source>
          <target state="translated">結果の設定がロガーのハンドラのリストを定義し、結果のリストがそのロガーの古い設定で指定されたリスト(空の可能性がある)と異なる場合、ロガーが存在するか、その子が存在する場合、そのロガーに関連付けられた ハンドラは閉じられて削除され、新しいハンドラは結果の設定に従って作成され、そのロガーに追加され、必要に応じてそのロガーが作成されます。</target>
        </trans-unit>
        <trans-unit id="8a3d11d3b73e216be8517618d151d35e100edd64" translate="yes" xml:space="preserve">
          <source>If the resulting date is invalid, an exception is thrown.</source>
          <target state="translated">結果の日付が無効な場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="6ca351660a2dc03d4cb71b7bc124559d23a4db29" translate="yes" xml:space="preserve">
          <source>If the resulting date-time is invalid, an exception is thrown.</source>
          <target state="translated">結果の日付時刻が無効な場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="44ca6bebbc9287dfb9c1097c7e056b162daf7bcb" translate="yes" xml:space="preserve">
          <source>If the resulting date-time is invalid, an exception is thrown. The time does not affect the calculation and will be the same in the result.</source>
          <target state="translated">結果の日付時刻が無効な場合、例外がスローされます。時間は計算には影響せず、結果は同じになります。</target>
        </trans-unit>
        <trans-unit id="4f6dc2bf2873abab7867f3b616c93e4b15b446fa" translate="yes" xml:space="preserve">
          <source>If the return type &lt;em&gt;T0&lt;/em&gt; is void and &lt;em&gt;T1&lt;/em&gt; a primitive, a zero value is introduced.</source>
          <target state="translated">戻りの型&lt;em&gt;T0&lt;/em&gt;が空で、&lt;em&gt;T1&lt;/em&gt;がプリミティブの場合、ゼロ値が導入されます。</target>
        </trans-unit>
        <trans-unit id="f822d109dcf5c55256ad0bbca3b4f4180ce12367" translate="yes" xml:space="preserve">
          <source>If the return type &lt;em&gt;T0&lt;/em&gt; is void and &lt;em&gt;T1&lt;/em&gt; a reference, a null value is introduced.</source>
          <target state="translated">戻りの型&lt;em&gt;T0&lt;/em&gt;がvoidで、&lt;em&gt;T1&lt;/em&gt;が参照の場合、null値が導入されます。</target>
        </trans-unit>
        <trans-unit id="22bfe5b1532d3b1937f6f097fa6b7e18ec35a472" translate="yes" xml:space="preserve">
          <source>If the return type &lt;em&gt;T1&lt;/em&gt; is marked as void, any returned value is discarded</source>
          <target state="translated">戻りタイプ&lt;em&gt;T1&lt;/em&gt;がvoidとしてマークされている場合、戻り値は破棄されます</target>
        </trans-unit>
        <trans-unit id="d8afd9f745cfb7d28652f05e0fd4637227b676db" translate="yes" xml:space="preserve">
          <source>If the return type is a parameterized type, the &lt;code&gt;Type&lt;/code&gt; object returned must accurately reflect the actual type arguments used in the source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a413e6168d2b6897adbb71ca65aa2bb806445d1" translate="yes" xml:space="preserve">
          <source>If the return type is a parameterized type, the &lt;code&gt;Type&lt;/code&gt; object returned must accurately reflect the actual type parameters used in the source code.</source>
          <target state="translated">戻り値の型がパラメーター化された型の場合、返される &lt;code&gt;Type&lt;/code&gt; オブジェクトは、ソースコードで使用される実際の型パラメーターを正確に反映する必要があります。</target>
        </trans-unit>
        <trans-unit id="c790d87847b61c0198be1f5880f62ee8cbf59f42" translate="yes" xml:space="preserve">
          <source>If the return type is a type variable or a parameterized type, it is created. Otherwise, it is resolved.</source>
          <target state="translated">戻り値の型が型変数またはパラメータ化された型であれば、それが作成されます。それ以外の場合は解決されます。</target>
        </trans-unit>
        <trans-unit id="29af74f5a09429dcfd9193c144c392b2c8199600" translate="yes" xml:space="preserve">
          <source>If the return type of any of the methods is a primitive type or void, then all of the methods must have that same return type.</source>
          <target state="translated">いずれかのメソッドの戻り値の型がプリミティブ型または void である場合、すべてのメソッドは同じ戻り値の型を持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="a5a546d9693c1042591033e7eb00ca2f2a455047" translate="yes" xml:space="preserve">
          <source>If the return value is &lt;code&gt;non-null&lt;/code&gt;, all attributes in the returned set are unsupported with this &lt;code&gt;DocFlavor&lt;/code&gt;. The returned set does not distinguish attribute categories that are unsupported from unsupported attribute values.</source>
          <target state="translated">戻り値が &lt;code&gt;non-null&lt;/code&gt; 場合、返されるセット内のすべての属性は、この &lt;code&gt;DocFlavor&lt;/code&gt; ではサポートされていません。返されるセットは、サポートされていない属性カテゴリとサポートされていない属性値を区別しません。</target>
        </trans-unit>
        <trans-unit id="17d771c49fde9fd06df899fa732fea09b1398c4a" translate="yes" xml:space="preserve">
          <source>If the return value is non-null, all attributes in the returned set are unsupported with this DocFlavor. The returned set does not distinguish attribute categories that are unsupported from unsupported attribute values.</source>
          <target state="translated">返り値が非 null の場合、返されたセットに含まれるすべての属性は、この DocFlavor でサポートされていません。返されたセットは、サポートされていない属性カテゴリとサポートされていない属性値を区別しません。</target>
        </trans-unit>
        <trans-unit id="5779215ae457d29d8170805afb88e18c9cd73378" translate="yes" xml:space="preserve">
          <source>If the returned VarHandle is operated on, the declaring class will be initialized, if it has not already been initialized.</source>
          <target state="translated">返された VarHandle が操作された場合、宣言クラスは、まだ初期化されていない場合は初期化されます。</target>
        </trans-unit>
        <trans-unit id="eccb50eb8fca6c917cb62a8ea7ba110f808e9efb" translate="yes" xml:space="preserve">
          <source>If the returned method handle is invoked with a &lt;code&gt;null&lt;/code&gt; array reference, a &lt;code&gt;NullPointerException&lt;/code&gt; will be thrown.</source>
          <target state="translated">返されたメソッドハンドルが &lt;code&gt;null&lt;/code&gt; 配列参照で呼び出された場合、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="a121ca0e7664dd7a93409420197145f4f87f1e39" translate="yes" xml:space="preserve">
          <source>If the returned method handle is invoked with a negative array size, a &lt;code&gt;NegativeArraySizeException&lt;/code&gt; will be thrown.</source>
          <target state="translated">返されたメソッドハンドルが負の配列サイズで呼び出された場合、 &lt;code&gt;NegativeArraySizeException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="d67afcae574c0dadec33d0948d30e110523b788e" translate="yes" xml:space="preserve">
          <source>If the returned method handle is invoked, the constructor's class will be initialized, if it has not already been initialized.</source>
          <target state="translated">返されたメソッドハンドルが呼び出された場合、コンストラクタのクラスがまだ初期化されていなければ初期化されます。</target>
        </trans-unit>
        <trans-unit id="bba8a24f154f8c33c7318be4afad7cbac85009fd" translate="yes" xml:space="preserve">
          <source>If the returned method handle is invoked, the field's class will be initialized, if it has not already been initialized.</source>
          <target state="translated">返されたメソッドハンドルが呼び出された場合、フィールドのクラスは、まだ初期化されていない場合は初期化されます。</target>
        </trans-unit>
        <trans-unit id="51fb639a4d11801aea7b926f5d54285fffc4a0fb" translate="yes" xml:space="preserve">
          <source>If the returned method handle is invoked, the method's class will be initialized, if it has not already been initialized.</source>
          <target state="translated">返されたメソッドハンドルが呼び出された場合、メソッドのクラスがまだ初期化されていなければ、そのクラスが初期化されます。</target>
        </trans-unit>
        <trans-unit id="062c7a8a96f0cd16df82fd6a3d7ef90b21f0c525" translate="yes" xml:space="preserve">
          <source>If the returned node did not exist prior to this call, this node and any ancestors that were created by this call are not guaranteed to become permanent until the &lt;code&gt;flush&lt;/code&gt; method is called on the returned node (or one of its ancestors or descendants).</source>
          <target state="translated">返されたノードがこの呼び出しの前に存在しなかった場合、このノードとこの呼び出しによって作成された祖先は、返されたノード（またはその祖先または子孫の1つ）で &lt;code&gt;flush&lt;/code&gt; メソッドが呼び出されるまで永続的であるとは限りません。</target>
        </trans-unit>
        <trans-unit id="31845fc89c4f6a02a974ef2eb4b2ee1fabe487a0" translate="yes" xml:space="preserve">
          <source>If the returned object represents a &lt;a href=&quot;javafileobject.kind#SOURCE&quot;&gt;source&lt;/a&gt; or &lt;a href=&quot;javafileobject.kind#CLASS&quot;&gt;class&lt;/a&gt; file, it must be an instance of &lt;a href=&quot;javafileobject&quot;&gt;&lt;code&gt;JavaFileObject&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されたオブジェクトが&lt;a href=&quot;javafileobject.kind#SOURCE&quot;&gt;ソース&lt;/a&gt;ファイルまたは&lt;a href=&quot;javafileobject.kind#CLASS&quot;&gt;クラス&lt;/a&gt;ファイルを表す場合、それは&lt;a href=&quot;javafileobject&quot;&gt; &lt;code&gt;JavaFileObject&lt;/code&gt; の&lt;/a&gt;インスタンスでなければなりません。</target>
        </trans-unit>
        <trans-unit id="730234ede727312ada9b756fde5db3279ce11863" translate="yes" xml:space="preserve">
          <source>If the root node isn't visible, it is generally a good to make this value true. Otherwise, the tree looks exactly like a list, and users may not know that the &quot;list entries&quot; are actually tree nodes.</source>
          <target state="translated">ルートノードが表示されていない場合は、一般的にこの値をtrueにするのが良いでしょう。そうしないと、ツリーがリストのように見えてしまい、&quot;リストのエントリ &quot;が実際にはツリーノードであることに気づかないかもしれません。</target>
        </trans-unit>
        <trans-unit id="5ec11db983f71de1343f50235b7b5724bd516b85" translate="yes" xml:space="preserve">
          <source>If the row number is positive, the cursor moves to the given row number with respect to the beginning of the result set. The first row is row 1, the second is row 2, and so on.</source>
          <target state="translated">行番号が正の場合、カーソルは結果集合の先頭から指定された行番号に移動します。最初の行は1行目、2番目の行は2行目となります。</target>
        </trans-unit>
        <trans-unit id="dca61f9ccb26f5859e93cf51aef9999003d9187e" translate="yes" xml:space="preserve">
          <source>If the row number specified is zero, the cursor is moved to before the first row.</source>
          <target state="translated">指定された行番号が0の場合、カーソルは最初の行の前に移動します。</target>
        </trans-unit>
        <trans-unit id="6e65e674c2c9738a67b46cbdff85eddf6bd7d6d6" translate="yes" xml:space="preserve">
          <source>If the rule defines a week where the cutover might occur, then this method returns the day-of-week that the month-day will be adjusted to. If the day is positive then the adjustment is later. If the day is negative then the adjustment is earlier.</source>
          <target state="translated">ルールがカットオーバーが発生する可能性のある週を定義している場合、このメソッドは月日が調整される曜日を返します。曜日が正の場合、調整は後回しになります。日が負の場合は、調整は前倒しになります。</target>
        </trans-unit>
        <trans-unit id="ab9f1126ac23de664120eeb0433d59deaee2f7bd" translate="yes" xml:space="preserve">
          <source>If the rule defines a week where the transition might occur, then the day defines either the start of the end of the transition week.</source>
          <target state="translated">ルールが移行が発生する可能性のある週を定義している場合、その日は移行週の開始日と終了日のどちらかを定義します。</target>
        </trans-unit>
        <trans-unit id="89f95b53b5119c06e7c28d0a4953b38d65679d33" translate="yes" xml:space="preserve">
          <source>If the rule defines a week where the transition might occur, then the month if the month of either the earliest or latest possible date of the cutover.</source>
          <target state="translated">ルールで移行が発生する可能性のある週を定義している場合は、カットオーバーの可能性のある最も早い日または最新の日のいずれかの月を指定します。</target>
        </trans-unit>
        <trans-unit id="c5876d137cd994c7ad4a664d7beaa1b898954c4d" translate="yes" xml:space="preserve">
          <source>If the rule defines an exact date then the day is the month of that date.</source>
          <target state="translated">ルールが正確な日付を定義している場合、その日はその日の月になります。</target>
        </trans-unit>
        <trans-unit id="7a405331c7ddef3021a3335c00454f67145186ff" translate="yes" xml:space="preserve">
          <source>If the rule defines an exact date then the month is the month of that date.</source>
          <target state="translated">ルールが正確な日付を定義している場合、月はその日付の月になります。</target>
        </trans-unit>
        <trans-unit id="5034d0b228d4988928265c1d8ac1f628685a4b7f" translate="yes" xml:space="preserve">
          <source>If the rule defines an exact date then this returns null.</source>
          <target state="translated">ルールが正確な日付を定義している場合、これはnullを返します。</target>
        </trans-unit>
        <trans-unit id="188251de9eebdf9999e55d3130ae4d68d97ee026" translate="yes" xml:space="preserve">
          <source>If the same &lt;code&gt;Action&lt;/code&gt; is used with menus and buttons you'll typically specify both a &lt;code&gt;SMALL_ICON&lt;/code&gt; and a &lt;code&gt;LARGE_ICON_KEY&lt;/code&gt;. The menu will use the &lt;code&gt;SMALL_ICON&lt;/code&gt; and the button the &lt;code&gt;LARGE_ICON_KEY&lt;/code&gt;.</source>
          <target state="translated">同じ場合は &lt;code&gt;Action&lt;/code&gt; メニューやボタンで使用されますが、通常の両方を指定します &lt;code&gt;SMALL_ICON&lt;/code&gt; と &lt;code&gt;LARGE_ICON_KEY&lt;/code&gt; を。メニューは &lt;code&gt;SMALL_ICON&lt;/code&gt; を使用し、ボタンは &lt;code&gt;LARGE_ICON_KEY&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="77685adc8a0c8449f2dc16b0f092c4e3cf760fa3" translate="yes" xml:space="preserve">
          <source>If the same &lt;code&gt;Action&lt;/code&gt; is used with menus and buttons you'll typically specify both a &lt;code&gt;SMALL_ICON&lt;/code&gt; and a &lt;code&gt;LARGE_ICON_KEY&lt;/code&gt;. The menu will use the &lt;code&gt;SMALL_ICON&lt;/code&gt; and the button will use the &lt;code&gt;LARGE_ICON_KEY&lt;/code&gt;.</source>
          <target state="translated">同じ場合は &lt;code&gt;Action&lt;/code&gt; メニューやボタンで使用されますが、通常の両方を指定します &lt;code&gt;SMALL_ICON&lt;/code&gt; と &lt;code&gt;LARGE_ICON_KEY&lt;/code&gt; を。メニューは &lt;code&gt;SMALL_ICON&lt;/code&gt; を使用し、ボタンは &lt;code&gt;LARGE_ICON_KEY&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="2f0e91ac8cea622cd628a97cacbf583516eb1203" translate="yes" xml:space="preserve">
          <source>If the same MXBean were registered under two different &lt;code&gt;ObjectName&lt;/code&gt;s, a reference to that MXBean from another MXBean would be ambiguous. Therefore, if an MXBean object is already registered in an MBean Server and an attempt is made to register it in the same MBean Server under another name, the result is an &lt;a href=&quot;instancealreadyexistsexception&quot;&gt;&lt;code&gt;InstanceAlreadyExistsException&lt;/code&gt;&lt;/a&gt;. Registering the same MBean object under more than one name is discouraged in general, notably because it does not work well for MBeans that are &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">同じMXBeanが2つの異なる &lt;code&gt;ObjectName&lt;/code&gt; で登録された場合、別のMXBeanからそのMXBeanへの参照があいまいになります。したがって、MXBeanオブジェクトがすでにMBeanサーバーに登録されており、同じMBeanサーバーに別の名前で登録しようとすると、結果は&lt;a href=&quot;instancealreadyexistsexception&quot;&gt; &lt;code&gt;InstanceAlreadyExistsException&lt;/code&gt; になり&lt;/a&gt;ます。同じMBeanオブジェクトを複数の名前で登録することは、特に&lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt;であるMBeanではうまく機能しないため、一般的にはお勧めできません。</target>
        </trans-unit>
        <trans-unit id="50eb773388c08998af191260a43e85de5e2d0eab" translate="yes" xml:space="preserve">
          <source>If the same listener is added more than once, it is considered as many times as it was added. It is often useful to add the same listener with different filters or handback objects.</source>
          <target state="translated">同じリスナーが複数回追加された場合は、追加された回数とみなされます。同じリスナーを異なるフィルタやハンドバックオブジェクトで追加すると便利なことが多いです。</target>
        </trans-unit>
        <trans-unit id="7408f6bcba8070d6e3a1c46a3adc49506ab7c38a" translate="yes" xml:space="preserve">
          <source>If the same listener is added multiple times, only one instance is removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a530990bfaa8ba340ab7814bcb938600df0674e3" translate="yes" xml:space="preserve">
          <source>If the same listener was added more than once, it will be notified one less time after being removed. If &lt;code&gt;listener&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, or was never added, no exception is thrown and no action is taken.</source>
          <target state="translated">同じリスナーが複数回追加された場合は、削除された後、通知が1回少なくなります。 &lt;code&gt;listener&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、または追加されたことがない場合、例外はスローされず、アクションは実行されません。</target>
        </trans-unit>
        <trans-unit id="8a2f1faa361a4f239eecfaa4480ce58bb66c8e63" translate="yes" xml:space="preserve">
          <source>If the scale is greater than or equal to zero and the adjusted exponent is greater than or equal to &lt;code&gt;-6&lt;/code&gt;, the number will be converted to a character form without using exponential notation. In this case, if the scale is zero then no decimal point is added and if the scale is positive a decimal point will be inserted with the scale specifying the number of characters to the right of the decimal point. &lt;code&gt;'0'&lt;/code&gt; characters are added to the left of the converted unscaled value as necessary. If no character precedes the decimal point after this insertion then a conventional &lt;code&gt;'0'&lt;/code&gt; character is prefixed.</source>
          <target state="translated">スケールがゼロ以上で、調整された指数が &lt;code&gt;-6&lt;/code&gt; 以上の場合、数値は指数表記を使用せずに文字形式に変換されます。この場合、スケールがゼロの場合、小数点は追加されません。スケールが正の場合、小数点が挿入され、小数点の右側の文字数をスケールで指定します。必要に応じて、変換されたスケールなしの値の左側に &lt;code&gt;'0'&lt;/code&gt; 文字が追加されます。この挿入の後、小数点の前に文字がない場合は、従来の &lt;code&gt;'0'&lt;/code&gt; 文字が前に付加されます。</target>
        </trans-unit>
        <trans-unit id="b6699480c9af01ef59363f0886670fc80f9f3dd6" translate="yes" xml:space="preserve">
          <source>If the scheme component is defined in the given spec and does not match the scheme of the context, then the new URL is created as an absolute URL based on the spec alone. Otherwise the scheme component is inherited from the context URL.</source>
          <target state="translated">スキームコンポーネントが与えられた仕様で定義されていて、コンテキストのスキームと一致しない場合、新しい URL は仕様だけに基づいて絶対 URL として作成されます。そうでない場合は、スキームコンポーネントはコンテキストURLから継承されます。</target>
        </trans-unit>
        <trans-unit id="0f6fbda65188dadd280d2d62127e7bf188917970" translate="yes" xml:space="preserve">
          <source>If the screens configuration does not allow the window to be moved from one screen to another, then the window is only placed at the location determined according to the above conditions and its &lt;code&gt;GraphicsConfiguration&lt;/code&gt; is not changed.</source>
          <target state="translated">画面構成でウィンドウをある画面から別の画面に移動できない場合、ウィンドウは上記の条件に従って決定された場所にのみ配置され、その &lt;code&gt;GraphicsConfiguration&lt;/code&gt; は変更されません。</target>
        </trans-unit>
        <trans-unit id="9dcb8547b15783f8929c319cccddbb69b3b6cf00" translate="yes" xml:space="preserve">
          <source>If the scrollbar display policy is defined as &quot;never&quot;, then the scrollpane can still be programmatically scrolled using the setScrollPosition() method and the scrollpane will move and clip the child's contents appropriately. This policy is useful if the program needs to create and manage its own adjustable controls.</source>
          <target state="translated">スクロールバーの表示ポリシーが &quot;never&quot; と定義されている場合でも、setScrollPosition()メソッドを使用してスクロールペインをプログラム的にスクロールすることができ、スクロールペインは子コンテンツを適切に移動してクリップします。このポリシーは、プログラムが独自の調整可能なコントロールを作成して管理する必要がある場合に便利です。</target>
        </trans-unit>
        <trans-unit id="481d140f57a30b2cc9e64db972e10c648c8a2a3b" translate="yes" xml:space="preserve">
          <source>If the scrollpane has a non-&lt;code&gt;null&lt;/code&gt;&lt;code&gt;viewportBorder&lt;/code&gt;, then space is allocated for that.</source>
          <target state="translated">スクロールペインに &lt;code&gt;null&lt;/code&gt; 以外の &lt;code&gt;viewportBorder&lt;/code&gt; がある場合、そのためにスペースが割り当てられます。</target>
        </trans-unit>
        <trans-unit id="6ccd5d8778f5d88a5474e8c59978eccee5689a2e" translate="yes" xml:space="preserve">
          <source>If the second argument is 1.0, then the result is the same as the first argument.</source>
          <target state="translated">第2引数が1.0であれば、結果は第1引数と同じになります。</target>
        </trans-unit>
        <trans-unit id="f8344687c76c61e184619d725d0545c562c31518" translate="yes" xml:space="preserve">
          <source>If the second argument is NaN, then the result is NaN.</source>
          <target state="translated">第2引数がNaNであれば、結果はNaNとなります。</target>
        </trans-unit>
        <trans-unit id="728f5c52b29916aebc4c06ac0928425a83bcd984" translate="yes" xml:space="preserve">
          <source>If the second argument is an &lt;code&gt;InputStream&lt;/code&gt; then the stream must contain number of bytes specified by scaleOrLength. If the second argument is a &lt;code&gt;Reader&lt;/code&gt; then the reader must contain the number of characters specified by scaleOrLength. If these conditions are not true the driver will generate a &lt;code&gt;SQLException&lt;/code&gt; when the statement is executed.</source>
          <target state="translated">2番目の引数が &lt;code&gt;InputStream&lt;/code&gt; の場合、ストリームにはscaleOrLengthで指定されたバイト数が含まれている必要があります。2番目の引数が &lt;code&gt;Reader&lt;/code&gt; の場合、readerにはscaleOrLengthで指定された文字数が含まれている必要があります。これらの条件が当てはまらない場合、ドライバーはステートメントの実行時に &lt;code&gt;SQLException&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="5e66ea14e901f2694aafe98690642d15fedd9f3e" translate="yes" xml:space="preserve">
          <source>If the second argument is an &lt;code&gt;InputStream&lt;/code&gt; then the stream must contain the number of bytes specified by scaleOrLength. If the second argument is a &lt;code&gt;Reader&lt;/code&gt; then the reader must contain the number of characters specified by scaleOrLength. If these conditions are not true the driver will generate a &lt;code&gt;SQLException&lt;/code&gt; when the statement is executed.</source>
          <target state="translated">2番目の引数が &lt;code&gt;InputStream&lt;/code&gt; の場合、ストリームにはscaleOrLengthで指定されたバイト数が含まれている必要があります。2番目の引数が &lt;code&gt;Reader&lt;/code&gt; の場合、readerにはscaleOrLengthで指定された文字数が含まれている必要があります。これらの条件が当てはまらない場合、ドライバーはステートメントの実行時に &lt;code&gt;SQLException&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="83af07e72de969c0ada685452a5155bf504024e7" translate="yes" xml:space="preserve">
          <source>If the second argument is positive or negative zero, then the result is 1.0.</source>
          <target state="translated">第2引数が正または負の0であれば、結果は1.</target>
        </trans-unit>
        <trans-unit id="9b941ca67a1b9bc33a6bb0d7bf06f63dc95c2df8" translate="yes" xml:space="preserve">
          <source>If the second-of-minute is not available then jump to the next space.</source>
          <target state="translated">分目が利用できない場合は、次のスペースにジャンプします。</target>
        </trans-unit>
        <trans-unit id="6ea372174aa5c23af0c1777c675872adacfad266" translate="yes" xml:space="preserve">
          <source>If the second-of-minute is not available then the format is complete.</source>
          <target state="translated">2分目が利用できない場合は、その時点でフォーマットは完了しています。</target>
        </trans-unit>
        <trans-unit id="a0ca0c8f14e74d6e3c35517091b31f9d9d7a6b0c" translate="yes" xml:space="preserve">
          <source>If the seconds field carries more digits than milli-second order, those will be simply discarded (or in other words, rounded to zero.) For example, for any &lt;code&gt;Date&lt;/code&gt; value &lt;code&gt;x&lt;/code&gt;,</source>
          <target state="translated">秒フィールドの桁数がミリ秒単位より多い場合、それらは単純に破棄されます（つまり、ゼロに丸められます）。たとえば、任意の &lt;code&gt;Date&lt;/code&gt; 値 &lt;code&gt;x&lt;/code&gt; の場合、</target>
        </trans-unit>
        <trans-unit id="6762d0d3f73a120d76591aa7109ff493352a5101" translate="yes" xml:space="preserve">
          <source>If the seconds field carries more digits than milli-second order, those will be simply discarded (or in other words, rounded to zero.) For example, for any Calendar value &lt;code&gt;x&lt;/code&gt;,</source>
          <target state="translated">秒フィールドの桁数がミリ秒単位より多い場合、それらは単純に破棄されます（つまり、ゼロに丸められます）。たとえば、任意のカレンダー値 &lt;code&gt;x&lt;/code&gt; の場合、</target>
        </trans-unit>
        <trans-unit id="5653b3f59b63219b61535639dd8eec29f7dad782" translate="yes" xml:space="preserve">
          <source>If the security property is set to the fully qualified name of a &lt;code&gt;CallbackHandler&lt;/code&gt; implementation class, then a &lt;code&gt;LoginContext&lt;/code&gt; will load the specified &lt;code&gt;CallbackHandler&lt;/code&gt; and pass it to the underlying LoginModules. The &lt;code&gt;LoginContext&lt;/code&gt; only loads the default handler if it was not provided one.</source>
          <target state="translated">セキュリティプロパティが &lt;code&gt;CallbackHandler&lt;/code&gt; 実装クラスの完全修飾名に設定されている場合、 &lt;code&gt;LoginContext&lt;/code&gt; は指定された &lt;code&gt;CallbackHandler&lt;/code&gt; をロードし、それを基礎となるLoginModuleに渡します。 &lt;code&gt;LoginContext&lt;/code&gt; はそれがものを提供されなかった場合にのみ、デフォルトのハンドラをロードします。</target>
        </trans-unit>
        <trans-unit id="d64a3fa99372fe6ed29fb93b51136151680efc81" translate="yes" xml:space="preserve">
          <source>If the selection includes the leftmost (topmost) position, the selection is extended to the left (top) of &lt;code&gt;bounds&lt;/code&gt;. If the selection includes the rightmost (bottommost) position, the selection is extended to the right (bottom) of the bounds. The height (width on vertical lines) of the selection is always extended to &lt;code&gt;bounds&lt;/code&gt;.</source>
          <target state="translated">選択範囲に左端（最上部）の位置が含まれている場合、選択 &lt;code&gt;bounds&lt;/code&gt; は境界の左（上）に拡張されます。選択範囲に右端（最下部）の位置が含まれている場合、選択範囲は境界の右（下）に拡張されます。選択 &lt;code&gt;bounds&lt;/code&gt; の高さ（垂直線の幅）は常に境界まで拡張されます。</target>
        </trans-unit>
        <trans-unit id="9c6ce13905c3b53f290f1fe802b6aed3d33f0e9f" translate="yes" xml:space="preserve">
          <source>If the selection mode is &lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt;, and adding the new paths would make the selection discontiguous. Then two things can result: if the TreePaths in &lt;code&gt;paths&lt;/code&gt; are contiguous, then the selection becomes these TreePaths, otherwise the TreePaths aren't contiguous and the selection becomes the first TreePath in &lt;code&gt;paths&lt;/code&gt;.</source>
          <target state="translated">選択モードが &lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt; の場合、新しいパスを追加すると、選択が不連続になります。次に、2つの結果が生じる可能性があり &lt;code&gt;paths&lt;/code&gt; 内のTreePathが連続している場合、選択はこれらのTreePathになります。そうでない場合、TreePathは連続しておらず、選択は &lt;code&gt;paths&lt;/code&gt; 内の最初のTreePathになります。</target>
        </trans-unit>
        <trans-unit id="6e2c6505b616998dc824a56fb69330d1ffe1a66c" translate="yes" xml:space="preserve">
          <source>If the selection mode is &lt;code&gt;SINGLE_TREE_SELECTION&lt;/code&gt; and more than one TreePath is selected, the selection is reset to contain the first path currently selected.</source>
          <target state="translated">選択モードが &lt;code&gt;SINGLE_TREE_SELECTION&lt;/code&gt; で、複数のTreePathが選択されている場合、選択はリセットされ、現在選択されている最初のパスが含まれます。</target>
        </trans-unit>
        <trans-unit id="a9329c3f6f88e34510974b909e266bf49fd3da54" translate="yes" xml:space="preserve">
          <source>If the selection range includes the first logical character, the selection is extended to the portion of &lt;code&gt;bounds&lt;/code&gt; before the start of this &lt;code&gt;TextLayout&lt;/code&gt;. If the range includes the last logical character, the selection is extended to the portion of &lt;code&gt;bounds&lt;/code&gt; after the end of this &lt;code&gt;TextLayout&lt;/code&gt;. The height (width on vertical lines) of the selection is always extended to &lt;code&gt;bounds&lt;/code&gt;.</source>
          <target state="translated">選択範囲に最初の論理文字が含まれている場合、選択はこの &lt;code&gt;TextLayout&lt;/code&gt; の開始前の &lt;code&gt;bounds&lt;/code&gt; の部分に拡張されます。範囲に最後の論理文字が含まれている場合、選択範囲はこの &lt;code&gt;TextLayout&lt;/code&gt; の終了後の &lt;code&gt;bounds&lt;/code&gt; の部分に拡張されます。選択 &lt;code&gt;bounds&lt;/code&gt; の高さ（垂直線の幅）は常に境界まで拡張されます。</target>
        </trans-unit>
        <trans-unit id="e6707140df46f6eb04938367483bc2c365bdb2e5" translate="yes" xml:space="preserve">
          <source>If the selector has already been closed then this method returns immediately. Otherwise it marks the selector as closed and then invokes the &lt;a href=&quot;#implCloseSelector()&quot;&gt;&lt;code&gt;implCloseSelector&lt;/code&gt;&lt;/a&gt; method in order to complete the close operation.</source>
          <target state="translated">セレクターがすでに閉じられている場合、このメソッドはすぐに戻ります。それ以外の場合は、セレクターを閉じたものとしてマークしてから、閉じる操作を完了するために&lt;a href=&quot;#implCloseSelector()&quot;&gt; &lt;code&gt;implCloseSelector&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="08dd4228bba4510d42bc79e395b01540dece6a1f" translate="yes" xml:space="preserve">
          <source>If the selector has already been closed then this method returns immediately. Otherwise it marks the selector as closed and then invokes the &lt;a href=&quot;abstractselector#implCloseSelector--&quot;&gt;&lt;code&gt;implCloseSelector&lt;/code&gt;&lt;/a&gt; method in order to complete the close operation.</source>
          <target state="translated">セレクタがすでに閉じている場合、このメソッドはすぐに戻ります。それ以外の場合は、セレクターをクローズ済みとしてマークしてから、&lt;a href=&quot;abstractselector#implCloseSelector--&quot;&gt; &lt;code&gt;implCloseSelector&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してクローズ操作を完了します。</target>
        </trans-unit>
        <trans-unit id="c7ad935cdc55d4a107502fb1347aaf4da85ef291" translate="yes" xml:space="preserve">
          <source>If the selector itself is closed then the channel will be deregistered, and the key representing its registration will be invalidated, without further delay.</source>
          <target state="translated">セレクタ自体が閉じられている場合は、チャンネルの登録が解除され、その登録を表すキーは、それ以上の遅延なしに無効になります。</target>
        </trans-unit>
        <trans-unit id="527b7c6f507b87aa21ddf93053b13e95205bb2c8" translate="yes" xml:space="preserve">
          <source>If the sequence is mutated while the stream is being read, the result is undefined.</source>
          <target state="translated">ストリームの読み込み中にシーケンスが突然変異した場合、結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="68365060e1fd3c2daf69dad059677cfed6352297" translate="yes" xml:space="preserve">
          <source>If the sequence of characters is already available as a character array, using this constructor is faster than converting the &lt;code&gt;char&lt;/code&gt; array to string and using the &lt;code&gt;BigDecimal(String)&lt;/code&gt; constructor.</source>
          <target state="translated">文字のシーケンスがすでに文字配列として使用可能な場合、このコンストラクターを使用すると、 &lt;code&gt;char&lt;/code&gt; 配列を文字列に変換して &lt;code&gt;BigDecimal(String)&lt;/code&gt; コンストラクターを使用するよりも高速になります。</target>
        </trans-unit>
        <trans-unit id="44599ce71e2e538b01fd695f05e20f34c21d8951" translate="yes" xml:space="preserve">
          <source>If the sequence of characters is already available within a character array, using this constructor is faster than converting the &lt;code&gt;char&lt;/code&gt; array to string and using the &lt;code&gt;BigDecimal(String)&lt;/code&gt; constructor.</source>
          <target state="translated">文字のシーケンスが文字配列内ですでに使用可能な場合、このコンストラクターを使用すると、 &lt;code&gt;char&lt;/code&gt; 配列を文字列に変換して &lt;code&gt;BigDecimal(String)&lt;/code&gt; コンストラクターを使用するよりも高速になります。</target>
        </trans-unit>
        <trans-unit id="905718a38e6e40a4a44a638dd8e38175f57a597e" translate="yes" xml:space="preserve">
          <source>If the service provider declares a provider method, then the service loader invokes that method to obtain an instance of the service provider. A provider method is a public static method named &quot;provider&quot; with no formal parameters and a return type that is assignable to the service's interface or class.</source>
          <target state="translated">サービス・プロバイダがプロバイダ・メソッドを宣言している場合、サービス・ローダはそのメソッドを呼び出してサービス・プロバイダのインスタンスを取得します。プロバイダ・メソッドとは、正式なパラメータを持たず、サービスのインタフェースまたはクラスに割り当て可能な戻り値の型を持つ、&quot;provider&quot; という名前のパブリック・スタティック・メソッドです。</target>
        </trans-unit>
        <trans-unit id="3b23056cdaee0c387d69777057adce2233310c89" translate="yes" xml:space="preserve">
          <source>If the service provider does not declare a provider method, then the service provider is instantiated directly, via its provider constructor. A provider constructor is a public constructor with no formal parameters.</source>
          <target state="translated">サービスプロバイダがプロバイダメソッドを宣言していない場合、サービスプロバイダはそのプロバイダのコンストラクタを介して直接インスタンス化されます。プロバイダのコンストラクタは、正式なパラメータを持たないパブリックなコンストラクタです。</target>
        </trans-unit>
        <trans-unit id="96cc80cb5c49589843f4c152dbe187b0d7672c14" translate="yes" xml:space="preserve">
          <source>If the set contains &lt;code&gt;null&lt;/code&gt; or elements that are not of type &lt;code&gt;PosixFilePermission&lt;/code&gt; then these elements are ignored.</source>
          <target state="translated">セットに &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;PosixFilePermission&lt;/code&gt; タイプではない要素が含まれている場合、これらの要素は無視されます。</target>
        </trans-unit>
        <trans-unit id="bdd7ddd5abc6f06de4935b22a2b32f438818b4c2" translate="yes" xml:space="preserve">
          <source>If the set is modified after the iterator is created, in any way except by invoking the iterator's own &lt;a href=&quot;../../util/iterator#remove()&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; method, then a &lt;a href=&quot;../../util/concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">イテレータの作成後にセットが変更された場合、イテレータ自体の&lt;a href=&quot;../../util/iterator#remove()&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;メソッドを呼び出す以外の方法で、&lt;a href=&quot;../../util/concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="6a2fc5c10d29d945ad7e76e24ac30350f31297ef" translate="yes" xml:space="preserve">
          <source>If the set is modified after the iterator is created, in any way except by invoking the iterator's own &lt;a href=&quot;../../util/iterator#remove--&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; method, then a &lt;a href=&quot;../../util/concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">イテレータの作成後にセットが変更されると、イテレータの独自の&lt;a href=&quot;../../util/iterator#remove--&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;メソッドを呼び出す以外の方法で、&lt;a href=&quot;../../util/concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="f6638fbdc996aa0e831fc1abcabd26d13939d37e" translate="yes" xml:space="preserve">
          <source>If the setting control represents a boolean condition and four recordings are running at the same time with the following values &lt;code&gt;&quot;true&quot;&lt;/code&gt;, &lt;code&gt;&quot;false&quot;&lt;/code&gt;, &lt;code&gt;&quot;false&quot;&lt;/code&gt;, and &lt;code&gt;&quot;incorrect&quot;&lt;/code&gt;, this method returns &lt;code&gt;&quot;true&quot;&lt;/code&gt;, because all recordings get at least all the requested data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f213e623005cb03ce8a996eda62ae9d104d49741" translate="yes" xml:space="preserve">
          <source>If the setting control represents a set of names and two recordings are running at the same time with the setting values &lt;code&gt;&quot;Smith, Jones&quot;&lt;/code&gt; and &lt;code&gt;&quot;Jones,
 Williams&quot;&lt;/code&gt; the returned value is &lt;code&gt;&quot;Smith, Jones, Williams&quot;&lt;/code&gt; because all names would be accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc7e4a8c7928920f09d0830931380727e4c575d" translate="yes" xml:space="preserve">
          <source>If the setting lacks a content type, the content type for the type that is associated with this setting is returned, or &lt;code&gt;null&lt;/code&gt; if not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3303157e26b918aa41092329e21abb66fb1b45ac" translate="yes" xml:space="preserve">
          <source>If the setting lacks a description, the description for the type that is associated with this setting is returned, or &lt;code&gt;null&lt;/code&gt; if doesn't exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe14664f5baaf914d6c2209b660139b1bf58f90" translate="yes" xml:space="preserve">
          <source>If the setting lacks a label, the label for the type that is associated with this setting is returned, or &lt;code&gt;null&lt;/code&gt; if doesn't exist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41dd85f3f179642b62aec20efd62519a0e7d8ea5" translate="yes" xml:space="preserve">
          <source>If the setting value is not valid for this setting, this method does not throw an exception. Instead, the value is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f544e9f4637d730c544f2df049efe3bc2241c9" translate="yes" xml:space="preserve">
          <source>If the signs of arguments are unknown and a positive modulus is needed it can be computed as &lt;code&gt;(floorMod(x, y) + abs(y)) % abs(y)&lt;/code&gt;.</source>
          <target state="translated">引数の符号が不明で正の係数が必要な場合は、 &lt;code&gt;(floorMod(x, y) + abs(y)) % abs(y)&lt;/code&gt; として計算できます。</target>
        </trans-unit>
        <trans-unit id="3d63f4df1fec01d153e077a0cd492720daea9604" translate="yes" xml:space="preserve">
          <source>If the signs of the arguments are different, the quotient is negative and &lt;code&gt;floorDiv&lt;/code&gt; returns the integer less than or equal to the quotient and the &lt;code&gt;/&lt;/code&gt; operator returns the integer closest to zero.</source>
          <target state="translated">引数の符号が異なる場合、商は負であり、 &lt;code&gt;floorDiv&lt;/code&gt; は商以下の整数を返し、 &lt;code&gt;/&lt;/code&gt; 演算子はゼロに最も近い整数を返します。</target>
        </trans-unit>
        <trans-unit id="8b3eddbc3f191c883b4734fcd232862a579d8785" translate="yes" xml:space="preserve">
          <source>If the signs of the arguments are different, the results differ from the &lt;code&gt;%&lt;/code&gt; operator.</source>
          <target state="translated">引数の符号が異なる場合、結果は &lt;code&gt;%&lt;/code&gt; 演算子とは異なります。</target>
        </trans-unit>
        <trans-unit id="8893f46ae7c980fbb6e68ff03e7cfa2f4485e10e" translate="yes" xml:space="preserve">
          <source>If the signs of the arguments are the same, the results of &lt;code&gt;floorDiv&lt;/code&gt; and the &lt;code&gt;/&lt;/code&gt; operator are the same.</source>
          <target state="translated">引数の符号が同じ場合、 &lt;code&gt;floorDiv&lt;/code&gt; と &lt;code&gt;/&lt;/code&gt; 演算子の結果は同じです。</target>
        </trans-unit>
        <trans-unit id="e7d5446141374acaa0bf3d68df3adaaf0963a7c6" translate="yes" xml:space="preserve">
          <source>If the signs of the arguments are the same, the results of &lt;code&gt;floorMod&lt;/code&gt; and the &lt;code&gt;%&lt;/code&gt; operator are the same.</source>
          <target state="translated">引数の符号が同じ場合、 &lt;code&gt;floorMod&lt;/code&gt; と &lt;code&gt;%&lt;/code&gt; 演算子の結果は同じです。</target>
        </trans-unit>
        <trans-unit id="7c0c3191c882ae94e067ec4dbb9ae1efa5c18a6b" translate="yes" xml:space="preserve">
          <source>If the size of the map (the number of key-value mappings) sufficiently exceeds the expected maximum size, the number of buckets is increased. Increasing the number of buckets (&quot;rehashing&quot;) may be fairly expensive, so it pays to create identity hash maps with a sufficiently large expected maximum size. On the other hand, iteration over collection views requires time proportional to the number of buckets in the hash table, so it pays not to set the expected maximum size too high if you are especially concerned with iteration performance or memory usage.</source>
          <target state="translated">マップのサイズ(キーと値のマッピングの数)が予想される最大サイズを十分に超える場合、バケットの数が増加します。バケットの数を増やす(「リハッシュ」)にはかなりのコストがかかるので、期待される最大サイズが十分に大きい ID ハッシュ・マップを作成する必要があります。一方、コレクションビューに対する反復処理は、ハッシュテーブルのバケット数に比例した時間を必要とするため、反復処理のパフォーマンスやメモリ使用量を特に気にする場合は、期待される最大サイズを高く設定しすぎないようにしましょう。</target>
        </trans-unit>
        <trans-unit id="49af0f5d2c34bab8d6d7bf3a55a636eed438a349" translate="yes" xml:space="preserve">
          <source>If the smaller index is outside the list's range of cells, this method returns &lt;code&gt;null&lt;/code&gt;. If the smaller index is valid, but the larger index is outside the list's range, the bounds of just the first index is returned. Otherwise, the bounds of the valid range is returned.</source>
          <target state="translated">小さい方のインデックスがリストのセル範囲外にある場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。小さい方のインデックスが有効であるが、大きい方のインデックスがリストの範囲外にある場合は、最初のインデックスのみの境界が返されます。それ以外の場合は、有効な範囲の境界が返されます。</target>
        </trans-unit>
        <trans-unit id="b48f7eb14ba4fe0ba8d12278087b9bd58de5fe30" translate="yes" xml:space="preserve">
          <source>If the socket was bound prior to being &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return &lt;code&gt;true&lt;/code&gt; after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前にバインドされていた場合、このメソッドはソケットが閉じられた後も &lt;code&gt;true&lt;/code&gt; を返し続けます。</target>
        </trans-unit>
        <trans-unit id="c08afa2dd83781248a8b6598b34ddd6bd609cd7b" translate="yes" xml:space="preserve">
          <source>If the socket was bound prior to being &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return the address of the endpoint after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前にバインドされていた場合、このメソッドは、ソケットが閉じられた後もエンドポイントのアドレスを返し続けます。</target>
        </trans-unit>
        <trans-unit id="8ef9dc97922014b6a635ad3f24d3c2f309797f78" translate="yes" xml:space="preserve">
          <source>If the socket was bound prior to being &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return the local address after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前にバインドされていた場合、このメソッドは、ソケットが閉じられた後もローカルアドレスを返し続けます。</target>
        </trans-unit>
        <trans-unit id="795364986502a26fa06bf27ac780aeadecd43628" translate="yes" xml:space="preserve">
          <source>If the socket was bound prior to being &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return the local port number after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前にバインドされていた場合、このメソッドは、ソケットが閉じられた後もローカルポート番号を返し続けます。</target>
        </trans-unit>
        <trans-unit id="22d427b6f3e432eb55922847295296fb762a16b8" translate="yes" xml:space="preserve">
          <source>If the socket was bound prior to being &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return the port number after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前にバインドされていた場合、このメソッドはソケットが閉じられた後もポート番号を返し続けます。</target>
        </trans-unit>
        <trans-unit id="1b4b4f804a6b1c8756d6a9edd0658d83fbd67c5c" translate="yes" xml:space="preserve">
          <source>If the socket was bound prior to being &lt;a href=&quot;#close()&quot;&gt;closed&lt;/a&gt;, then this method will continue to return &lt;code&gt;true&lt;/code&gt; after the socket is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca2d090f17022dd5e73b01197f1d6848c079ffd" translate="yes" xml:space="preserve">
          <source>If the socket was bound prior to being &lt;a href=&quot;datagramsocket#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return &lt;code&gt;true&lt;/code&gt; after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;datagramsocket#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前にバインドされていた場合、このメソッドは、ソケットが閉じられた後も引き続き &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="59679157176f257978bbe9def3e0740bb5fb205a" translate="yes" xml:space="preserve">
          <source>If the socket was bound prior to being &lt;a href=&quot;serversocket#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return the address of the endpoint after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;serversocket#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前にバインドされていた場合、このメソッドは、ソケットが閉じられた後もエンドポイントのアドレスを返し続けます。</target>
        </trans-unit>
        <trans-unit id="0e21984f9cc07335c38e61e8524fe85a27b1d410" translate="yes" xml:space="preserve">
          <source>If the socket was bound prior to being &lt;a href=&quot;serversocket#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return the local address after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;serversocket#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前にバインドされていた場合、このメソッドは、ソケットが閉じられた後もローカルアドレスを返し続けます。</target>
        </trans-unit>
        <trans-unit id="763b9cd171c3cff366fd68dad3b49caafc1fe527" translate="yes" xml:space="preserve">
          <source>If the socket was bound prior to being &lt;a href=&quot;serversocket#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return the port number after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;serversocket#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前にバインドされていた場合、このメソッドは、ソケットが閉じられた後もポート番号を返し続けます。</target>
        </trans-unit>
        <trans-unit id="cd6141b5241054244025e22ff3d73a0248d5fc8c" translate="yes" xml:space="preserve">
          <source>If the socket was bound prior to being &lt;a href=&quot;socket#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return the local port number after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;socket#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前にバインドされていた場合、このメソッドは、ソケットが閉じられた後もローカルポート番号を返します。</target>
        </trans-unit>
        <trans-unit id="6e9dae5be20db8da3e58f51cd7b51d1fb85b6fbf" translate="yes" xml:space="preserve">
          <source>If the socket was connected prior to being &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return &lt;code&gt;true&lt;/code&gt; after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前に接続されていた場合、このメソッドはソケットが閉じられた後も &lt;code&gt;true&lt;/code&gt; を返し続けます。</target>
        </trans-unit>
        <trans-unit id="917ebef9402f85a9edd81896ca3483affe543bd7" translate="yes" xml:space="preserve">
          <source>If the socket was connected prior to being &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return the connected address after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前に接続されていた場合、このメソッドは、ソケットが閉じられた後も接続されたアドレスを返し続けます。</target>
        </trans-unit>
        <trans-unit id="1204ee019c4cde4f66441dc7934326b11df3ec43" translate="yes" xml:space="preserve">
          <source>If the socket was connected prior to being &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return the connected port number after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前に接続されていた場合、このメソッドは、ソケットが閉じられた後も接続されたポート番号を返し続けます。</target>
        </trans-unit>
        <trans-unit id="7fc8e1670126679859d5c660bcdcb0e5c4dce29e" translate="yes" xml:space="preserve">
          <source>If the socket was connected prior to being &lt;a href=&quot;datagramsocket#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return &lt;code&gt;true&lt;/code&gt; after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;datagramsocket#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前に接続されていた場合、このメソッドは、ソケットが閉じられた後も引き続き &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="eded3cce47a4f9690c31a1eee5141c639e63658a" translate="yes" xml:space="preserve">
          <source>If the socket was connected prior to being &lt;a href=&quot;datagramsocket#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return the connected address after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;datagramsocket#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前に接続されていた場合、このメソッドは、ソケットが閉じられた後も接続されたアドレスを返し続けます。</target>
        </trans-unit>
        <trans-unit id="d3d182eb3854cd39ce3f790ae76cf8abf4ec7f3e" translate="yes" xml:space="preserve">
          <source>If the socket was connected prior to being &lt;a href=&quot;datagramsocket#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return the connected port number after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;datagramsocket#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前に接続されていた場合、このメソッドは、ソケットが閉じられた後も接続されたポート番号を返します。</target>
        </trans-unit>
        <trans-unit id="ac6a556c1933db902b091802b19407a613fc41d9" translate="yes" xml:space="preserve">
          <source>If the socket was connected prior to being &lt;a href=&quot;socket#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return the connected address after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;socket#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前に接続されていた場合、このメソッドは、ソケットが閉じられた後も接続されたアドレスを返し続けます。</target>
        </trans-unit>
        <trans-unit id="abfab3eeb26c13c0835e0da8c32c95bf0e46c4ed" translate="yes" xml:space="preserve">
          <source>If the socket was connected prior to being &lt;a href=&quot;socket#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return the connected port number after the socket is closed.</source>
          <target state="translated">ソケットが&lt;a href=&quot;socket#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;前に接続されていた場合、このメソッドは、ソケットが閉じられた後も接続されたポート番号を返します。</target>
        </trans-unit>
        <trans-unit id="ca2d424b7fdfc2a79a2dfc6c0453d110b7859bc0" translate="yes" xml:space="preserve">
          <source>If the source is &lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt;&lt;code&gt;Redirect.PIPE&lt;/code&gt;&lt;/a&gt; (the initial value), then the standard input of a subprocess can be written to using the output stream returned by &lt;a href=&quot;process#getOutputStream()&quot;&gt;&lt;code&gt;Process.getOutputStream()&lt;/code&gt;&lt;/a&gt;. If the source is set to any other value, then &lt;a href=&quot;process#getOutputStream()&quot;&gt;&lt;code&gt;Process.getOutputStream()&lt;/code&gt;&lt;/a&gt; will return a &lt;a href=&quot;#redirect-input&quot;&gt;null output stream&lt;/a&gt;.</source>
          <target state="translated">ソースが&lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt; &lt;code&gt;Redirect.PIPE&lt;/code&gt; &lt;/a&gt;（初期値）の場合、サブプロセスの標準入力は、&lt;a href=&quot;process#getOutputStream()&quot;&gt; &lt;code&gt;Process.getOutputStream()&lt;/code&gt; &lt;/a&gt;によって返される出力ストリームを使用して書き込むことができます。ソースが他の値に設定されている場合、&lt;a href=&quot;process#getOutputStream()&quot;&gt; &lt;code&gt;Process.getOutputStream()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#redirect-input&quot;&gt;null出力ストリーム&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="c74e08fa061f46bcfc74bd1ceb1c899db939f1d9" translate="yes" xml:space="preserve">
          <source>If the source is &lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt;&lt;code&gt;Redirect.PIPE&lt;/code&gt;&lt;/a&gt; (the initial value), then the standard input of a subprocess can be written to using the output stream returned by &lt;a href=&quot;process#getOutputStream--&quot;&gt;&lt;code&gt;Process.getOutputStream()&lt;/code&gt;&lt;/a&gt;. If the source is set to any other value, then &lt;a href=&quot;process#getOutputStream--&quot;&gt;&lt;code&gt;Process.getOutputStream()&lt;/code&gt;&lt;/a&gt; will return a &lt;a href=&quot;#redirect-input&quot;&gt;null output stream&lt;/a&gt;.</source>
          <target state="translated">ソースが&lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt; &lt;code&gt;Redirect.PIPE&lt;/code&gt; &lt;/a&gt;（初期値）の場合、サブプロセスの標準入力は、&lt;a href=&quot;process#getOutputStream--&quot;&gt; &lt;code&gt;Process.getOutputStream()&lt;/code&gt; &lt;/a&gt;によって返された出力ストリームを使用して書き込むことができます。ソースが他の値に設定されている場合、&lt;a href=&quot;process#getOutputStream--&quot;&gt; &lt;code&gt;Process.getOutputStream()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#redirect-input&quot;&gt;null出力ストリーム&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="f6c84516f9aebb90d613c9f7eb26a5e9fd1dca09" translate="yes" xml:space="preserve">
          <source>If the source is a BufferedImage with premultiplied alpha, the color components are divided by the alpha component before color conversion. If the destination is a BufferedImage with premultiplied alpha, the color components are multiplied by the alpha component after conversion. Rasters are treated as having no alpha channel, i.e. all bands are color bands.</source>
          <target state="translated">入力画像がアルファ化前のBufferedImageの場合,色変換前に色成分がアルファ成分で分割されます.出力先が事前にアルファ化されたBufferedImageであれば,色成分は変換後にアルファ成分で乗算されます.ラスタは,アルファチャンネルを持たないものとして扱われます.</target>
        </trans-unit>
        <trans-unit id="1c6d739298af4f4dfdbeb07ff847cfc9d3c6a7a7" translate="yes" xml:space="preserve">
          <source>If the source of the PropertyChangeEvent &lt;code&gt;e&lt;/code&gt; equals the optionPane and is one of the ICON_PROPERTY, MESSAGE_PROPERTY, OPTIONS_PROPERTY or INITIAL_VALUE_PROPERTY, validateComponent is invoked.</source>
          <target state="translated">PropertyChangeEvent &lt;code&gt;e&lt;/code&gt; のソースがoptionPaneと等しく、ICON_PROPERTY、MESSAGE_PROPERTY、OPTIONS_PROPERTY、またはINITIAL_VALUE_PROPERTYのいずれかである場合、validateComponentが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="661f6402b0c9208e67543bc3982626f5f2502c0a" translate="yes" xml:space="preserve">
          <source>If the source of the notification is a reference to an MBean object, the MBean server will replace it by that MBean's ObjectName. Otherwise the source is unchanged.</source>
          <target state="translated">通知のソースが MBean オブジェクトへの参照である場合、MBean サーバはその MBean の ObjectName で置き換えます。それ以外の場合、ソースは変更されません。</target>
        </trans-unit>
        <trans-unit id="bc0afb74deac5658d35d1df20daa373ddaf8091c" translate="yes" xml:space="preserve">
          <source>If the spec's path component begins with a slash character &quot;/&quot; then the path is treated as absolute and the spec path replaces the context path.</source>
          <target state="translated">specのパスコンポーネントがスラッシュ文字&quot;/&quot;で始まる場合、パスは絶対パスとして扱われ、specのパスがコンテキストパスに置き換わります。</target>
        </trans-unit>
        <trans-unit id="9a4f4b68138d4550ce0ad6e021c29ead94a8e3ad" translate="yes" xml:space="preserve">
          <source>If the specified &lt;code&gt;DataFlavor&lt;/code&gt; is previously unknown to the data transfer subsystem and the data transfer subsystem is unable to translate this &lt;code&gt;DataFlavor&lt;/code&gt; to any existing native, then invoking this method will establish a mapping in both directions between the specified &lt;code&gt;DataFlavor&lt;/code&gt; and an encoded version of its MIME type as its native.</source>
          <target state="translated">指定された &lt;code&gt;DataFlavor&lt;/code&gt; が以前にデータ転送サブシステムに &lt;code&gt;DataFlavor&lt;/code&gt; れておらず、データ転送サブシステムがこのDataFlavorを既存のネイティブに変換できない場合、このメソッドを呼び出すと、指定された &lt;code&gt;DataFlavor&lt;/code&gt; とそのMIMEのエンコードされたバージョンの間で双方向のマッピングが確立されます。ネイティブとして入力します。</target>
        </trans-unit>
        <trans-unit id="ec28138e6077c419b066b58918bda314e27771f9" translate="yes" xml:space="preserve">
          <source>If the specified &lt;code&gt;locale&lt;/code&gt; contains &quot;cu&quot; and/or &quot;rg&quot; &lt;a href=&quot;locale#def_locale_extension&quot;&gt;Unicode extensions&lt;/a&gt;, the instance returned from this method reflects the values specified with those extensions. If both &quot;cu&quot; and &quot;rg&quot; are specified, the currency from the &quot;cu&quot; extension supersedes the implicit one from the &quot;rg&quot; extension.</source>
          <target state="translated">指定された &lt;code&gt;locale&lt;/code&gt; に「cu」および/または「rg」&lt;a href=&quot;locale#def_locale_extension&quot;&gt;Unicode拡張子&lt;/a&gt;が含まれている場合、このメソッドから返されるインスタンスは、それらの拡張子で指定された値を反映します。「cu」と「rg」の両方が指定されている場合、「cu」拡張子の通貨は「rg」拡張子の暗黙の通貨に優先します。</target>
        </trans-unit>
        <trans-unit id="e385849f938ca3e361afb2eab43ee21415cbd43e" translate="yes" xml:space="preserve">
          <source>If the specified &lt;code&gt;locale&lt;/code&gt; contains &quot;rg&quot; (region override) &lt;a href=&quot;locale#def_locale_extension&quot;&gt;Unicode extension&lt;/a&gt;, the symbol returned from this method reflects the value specified with that extension.</source>
          <target state="translated">指定された &lt;code&gt;locale&lt;/code&gt; に「rg」（領域オーバーライド）&lt;a href=&quot;locale#def_locale_extension&quot;&gt;Unicode拡張子&lt;/a&gt;が含まれている場合、このメソッドから返される記号は、その拡張子で指定された値を反映します。</target>
        </trans-unit>
        <trans-unit id="257aba8bf323b9c1c989b22a9946ac7416be5538" translate="yes" xml:space="preserve">
          <source>If the specified &lt;code&gt;name&lt;/code&gt; begins with &quot;&lt;code&gt;java.&lt;/code&gt;&quot;, it can only be defined by the &lt;a href=&quot;#getPlatformClassLoader()&quot;&gt;platform class loader&lt;/a&gt; or its ancestors; otherwise &lt;code&gt;SecurityException&lt;/code&gt; will be thrown. If &lt;code&gt;name&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, it must be equal to the &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt; of the class specified by the byte array &lt;code&gt;b&lt;/code&gt;, otherwise a &lt;a href=&quot;noclassdeffounderror&quot;&gt;&lt;code&gt;NoClassDefFoundError&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">指定された &lt;code&gt;name&lt;/code&gt; が「 &lt;code&gt;java.&lt;/code&gt; 」で始まる場合、&lt;a href=&quot;#getPlatformClassLoader()&quot;&gt;プラットフォームクラスローダー&lt;/a&gt;またはその祖先によってのみ定義できます。そうしないと、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされます。 &lt;code&gt;name&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合は、バイト配列 &lt;code&gt;b&lt;/code&gt; で指定されたクラスの&lt;a href=&quot;#binary-name&quot;&gt;バイナリ名&lt;/a&gt;と同じである必要があります。そうでない場合、&lt;a href=&quot;noclassdeffounderror&quot;&gt; &lt;code&gt;NoClassDefFoundError&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="97c03df7f79f779f19dbd94c565abdfcc104d7ca" translate="yes" xml:space="preserve">
          <source>If the specified IP address is bound to multiple network interfaces it is not defined which network interface is returned.</source>
          <target state="translated">指定したIPアドレスが複数のネットワークインタフェースにバインドされている場合、どのネットワークインタフェースが返されるかは定義されていません。</target>
        </trans-unit>
        <trans-unit id="96c68f935629df479cecc1daf2323805432c7c1f" translate="yes" xml:space="preserve">
          <source>If the specified amount is a &lt;code&gt;ChronoPeriod&lt;/code&gt; then it must have the same chronology as this period. Implementations may choose to accept or reject other &lt;code&gt;TemporalAmount&lt;/code&gt; implementations.</source>
          <target state="translated">指定された金額が &lt;code&gt;ChronoPeriod&lt;/code&gt; の場合、この期間と同じ年表である必要があります。実装は、他の &lt;code&gt;TemporalAmount&lt;/code&gt; 実装を受け入れるか拒否するかを選択できます。</target>
        </trans-unit>
        <trans-unit id="09cff20bf42b9ad1e7365bfddfe3a021913c702f" translate="yes" xml:space="preserve">
          <source>If the specified calendar doesn't support week dates, the &lt;a href=&quot;#build()&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; method will throw an &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定されたカレンダーが週の日付をサポートしていない場合、&lt;a href=&quot;#build()&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt;メソッドは&lt;a href=&quot;../lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="aeb138890341e49f448dcdb19a0436d6eccb12fa" translate="yes" xml:space="preserve">
          <source>If the specified calendar doesn't support week dates, the &lt;a href=&quot;calendar.builder#build--&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; method will throw an &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定されたカレンダーが曜日をサポートしていない場合、&lt;a href=&quot;calendar.builder#build--&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt;メソッドは&lt;a href=&quot;../lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="21d5a2365b7e2ef9cdf719d377a83491e9b996d8" translate="yes" xml:space="preserve">
          <source>If the specified comment is &lt;code&gt;null&lt;/code&gt; then no comment will be stored in the document.</source>
          <target state="translated">指定されたコメントが &lt;code&gt;null&lt;/code&gt; の場合、コメントはドキュメントに保存されません。</target>
        </trans-unit>
        <trans-unit id="5c00aef2c14db555263f047e1c32a11c40196454" translate="yes" xml:space="preserve">
          <source>If the specified comparator is &lt;code&gt;null&lt;/code&gt; then all elements in this list must implement the &lt;a href=&quot;../../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; interface and the elements' &lt;a href=&quot;../../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; should be used.</source>
          <target state="translated">指定されたコンパレーターが &lt;code&gt;null&lt;/code&gt; の場合、このリストのすべての要素は&lt;a href=&quot;../../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;インターフェースを実装する必要があり、要素の&lt;a href=&quot;../../lang/comparable&quot;&gt;自然順序付け&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="aefe2d484ac87a9f75945af0a56cb6b62891cb32" translate="yes" xml:space="preserve">
          <source>If the specified comparator is &lt;code&gt;null&lt;/code&gt; then all elements in this list must implement the &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; interface and the elements' &lt;a href=&quot;../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; should be used.</source>
          <target state="translated">指定されたコンパレーターが &lt;code&gt;null&lt;/code&gt; の場合、このリストのすべての要素は&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;インターフェースを実装する必要があり、要素の&lt;a href=&quot;../lang/comparable&quot;&gt;自然順序付け&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2a543a9a4c58a21fee89ee30e3c66f4521a79acb" translate="yes" xml:space="preserve">
          <source>If the specified component is already a child of this then we don't bother doing anything - stacking order doesn't matter for cell renderer components (CellRendererPane doesn't paint anyway).</source>
          <target state="translated">指定されたコンポーネントがすでにこのコンポーネントの子である場合は、何もしなくてもよいことになります-スタッキングの順番はセルレンダラコンポーネントには関係ありません (CellRendererPane はいずれにせよペイントしません)。</target>
        </trans-unit>
        <trans-unit id="1142a4e571e7e45e0126c1fa376f4b7549ff134a" translate="yes" xml:space="preserve">
          <source>If the specified date-time has already passed, the job must be a candidate for processing immediately. Thus, one way to make the job immediately become a candidate for processing is to specify a &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute constructed like this (denoting a date-time of January 1, 1970, 00:00:00 GMT):</source>
          <target state="translated">指定された日時がすでに経過している場合、ジョブはすぐに処理の候補になる必要があります。したがって、ジョブをすぐに処理の候補にする1つの方法は、次のように構成された &lt;code&gt;JobHoldUntil&lt;/code&gt; 属性を指定することです（1970年1月1日00:00:00 GMTの日時を示します）。</target>
        </trans-unit>
        <trans-unit id="e90b9efbdd73e57fac8cf7dcbd6a9324c80a3a89" translate="yes" xml:space="preserve">
          <source>If the specified date-time has already passed, the job must be a candidate for processing immediately. Thus, one way to make the job immediately become a candidate for processing is to specify a JobHoldUntil attribute constructed like this (denoting a date-time of January 1, 1970, 00:00:00 GMT):</source>
          <target state="translated">指定された日時が既に過ぎている場合、そのジョブは直ちに処理の候補にならなければなりません。したがって、ジョブを直ちに処理の候補にする一つの方法は、次のように構築されたJobHoldUntil属性を指定することです(1970年1月1日、00:00:00 GMTの日付時刻を示す)。</target>
        </trans-unit>
        <trans-unit id="7cc62287dac9dd3318ff0227906bfc56c107c2f1" translate="yes" xml:space="preserve">
          <source>If the specified driver is not found in the list of registered drivers, then no action is taken. If the driver was found, it will be removed from the list of registered drivers.</source>
          <target state="translated">指定されたドライバーが登録ドライバーのリストから見つからなかった場合は、何の処置も行われません。指定されたドライバーが見つかった場合は、登録ドライバーのリストから削除されます。</target>
        </trans-unit>
        <trans-unit id="9579f0c52418214efdc0671f46a3ff5e4527ea42" translate="yes" xml:space="preserve">
          <source>If the specified field is present, this method returns a non-null non-negative &lt;a href=&quot;../../../../java.base/java/lang/number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object that represents its value. If it is not present, return null. For YEARS, MONTHS, DAYS, HOURS, and MINUTES, this method returns a &lt;a href=&quot;../../../../java.base/java/math/biginteger&quot;&gt;&lt;code&gt;BigInteger&lt;/code&gt;&lt;/a&gt; object. For SECONDS, this method returns a &lt;a href=&quot;../../../../java.base/java/math/bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定されたフィールドが存在する場合、このメソッドは、その値を表すnull以外の負でない&lt;a href=&quot;../../../../java.base/java/lang/number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。存在しない場合は、nullを返します。YEARS、MONTHS、DAYS、HOURS、およびMINUTESの場合、このメソッドは&lt;a href=&quot;../../../../java.base/java/math/biginteger&quot;&gt; &lt;code&gt;BigInteger&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。SECONDSの場合、このメソッドは&lt;a href=&quot;../../../../java.base/java/math/bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="ab27614aa1a1e159b8f3228af15f24fff13239ec" translate="yes" xml:space="preserve">
          <source>If the specified file is a directory, the file manager of the current platform is launched to open it.</source>
          <target state="translated">指定されたファイルがディレクトリの場合、現在のプラットフォームのファイルマネージャが起動してファイルを開きます。</target>
        </trans-unit>
        <trans-unit id="6ddc595a62cbea355de55b31675b042692a29bee" translate="yes" xml:space="preserve">
          <source>If the specified host is &lt;code&gt;null&lt;/code&gt; it is the equivalent of specifying the address as &lt;a href=&quot;inetaddress#getByName(java.lang.String)&quot;&gt;&lt;code&gt;InetAddress.getByName&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(null)&lt;/code&gt;. In other words, it is equivalent to specifying an address of the loopback interface.</source>
          <target state="translated">指定されたホストが &lt;code&gt;null&lt;/code&gt; の場合、アドレスを&lt;a href=&quot;inetaddress#getByName(java.lang.String)&quot;&gt; &lt;code&gt;InetAddress.getByName&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(null)&lt;/code&gt; として指定するのと同じです。つまり、ループバックインターフェイスのアドレスを指定するのと同じです。</target>
        </trans-unit>
        <trans-unit id="2496623a004f15dd4819ee54aa8493f7e338eba3" translate="yes" xml:space="preserve">
          <source>If the specified host is &lt;code&gt;null&lt;/code&gt; it is the equivalent of specifying the address as &lt;a href=&quot;inetaddress#getByName-java.lang.String-&quot;&gt;&lt;code&gt;InetAddress.getByName&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(null)&lt;/code&gt;. In other words, it is equivalent to specifying an address of the loopback interface.</source>
          <target state="translated">指定されたホストが &lt;code&gt;null&lt;/code&gt; の場合は、アドレスを&lt;a href=&quot;inetaddress#getByName-java.lang.String-&quot;&gt; &lt;code&gt;InetAddress.getByName&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(null)&lt;/code&gt; として指定することと同じです。つまり、ループバックインターフェイスのアドレスを指定することと同じです。</target>
        </trans-unit>
        <trans-unit id="c33d8531f7d2499b880c450b0b37d9ef3fa77c82" translate="yes" xml:space="preserve">
          <source>If the specified key is not already associated with a (non-null) value, associates it with the given value.</source>
          <target state="translated">指定されたキーがまだ (非 null)値と関連付けられていない場合は、指定された値と関連付けます。</target>
        </trans-unit>
        <trans-unit id="900d04445ca5a80f48077470ed1101681577ef82" translate="yes" xml:space="preserve">
          <source>If the specified key is not already associated with a (non-null) value, associates it with the given value. Otherwise, replaces the value with the results of the given remapping function, or removes if &lt;code&gt;null&lt;/code&gt;. The entire method invocation is performed atomically. Some attempted update operations on this map by other threads may be blocked while computation is in progress, so the computation should be short and simple, and must not attempt to update any other mappings of this Map.</source>
          <target state="translated">指定されたキーが（null以外の）値に関連付けられていない場合は、指定された値に関連付けます。それ以外の場合は、指定されたリマッピング関数の結果で値を置き換えるか、 &lt;code&gt;null&lt;/code&gt; の場合は削除します。メソッド呼び出し全体がアトミックに実行されます。他のスレッドがこのマップに対して試みた更新操作の一部は、計算の進行中にブロックされる可能性があるため、計算は短く単純である必要があり、このマップの他のマッピングの更新を試みてはなりません。</target>
        </trans-unit>
        <trans-unit id="327e72df9ef84db72836c87a15ef8d4fb475f995" translate="yes" xml:space="preserve">
          <source>If the specified key is not already associated with a value (or is mapped to &lt;code&gt;null&lt;/code&gt;) associates it with the given value and returns &lt;code&gt;null&lt;/code&gt;, else returns the current value.</source>
          <target state="translated">指定されたキーがまだ値に関連付けられていない（または &lt;code&gt;null&lt;/code&gt; にマップされている）場合、そのキーを指定された値に関連付けて &lt;code&gt;null&lt;/code&gt; を返し、それ以外の場合は現在の値を返します。</target>
        </trans-unit>
        <trans-unit id="7b0beef1230b8f936ac0be883b146508d29a805b" translate="yes" xml:space="preserve">
          <source>If the specified key is not already associated with a value (or is mapped to &lt;code&gt;null&lt;/code&gt;), attempts to compute its value using the given mapping function and enters it into this map unless &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">指定されたキーがまだ値に関連付けられていない（または &lt;code&gt;null&lt;/code&gt; にマップされている）場合は、指定されたマッピング関数を使用してその値を計算し、 &lt;code&gt;null&lt;/code&gt; でない限り、このマップに入力します。</target>
        </trans-unit>
        <trans-unit id="59de12c4feb8699041392433808d90a4be2dd1b8" translate="yes" xml:space="preserve">
          <source>If the specified key is not already associated with a value or is associated with null, associates it with the given non-null value.</source>
          <target state="translated">指定されたキーがまだ値と関連付けられていない場合、またはnullと関連付けられている場合は、指定された非null値と関連付けます。</target>
        </trans-unit>
        <trans-unit id="50fe8f5b029680a754d045deccf54d554f1ecb50" translate="yes" xml:space="preserve">
          <source>If the specified key is not already associated with a value or is associated with null, associates it with the given non-null value. Otherwise, replaces the associated value with the results of the given remapping function, or removes if the result is &lt;code&gt;null&lt;/code&gt;. This method may be of use when combining multiple mapped values for a key. For example, to either create or append a &lt;code&gt;String msg&lt;/code&gt; to a value mapping:</source>
          <target state="translated">指定されたキーがまだ値に関連付けられていないか、nullに関連付けられている場合、それを指定されたnull以外の値に関連付けます。それ以外の場合は、関連付けられた値を特定のリマッピング関数の結果で置き換えるか、結果が &lt;code&gt;null&lt;/code&gt; の場合は削除します。このメソッドは、キーの複数のマップされた値を組み合わせるときに役立ちます。たとえば、 &lt;code&gt;String msg&lt;/code&gt; を作成するか、値マッピングに追加するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="ec2236aaf5d6e4455671d55125f8980e4fa9768d" translate="yes" xml:space="preserve">
          <source>If the specified key is not already associated with a value or is associated with null, associates it with the given value.</source>
          <target state="translated">指定されたキーがまだ値と関連付けられていない場合、またはnullと関連付けられている場合は、指定された値と関連付けます。</target>
        </trans-unit>
        <trans-unit id="07aab8862177972b392beb8f0bf5c9cd52e38ac3" translate="yes" xml:space="preserve">
          <source>If the specified key is not already associated with a value or is associated with null, associates it with the given value. Otherwise, replaces the value with the results of the given remapping function, or removes if the result is null. This method may be of use when combining multiple mapped values for a key.</source>
          <target state="translated">指定されたキーがまだ値と関連付けられていない場合、またはnullと関連付けられている場合は、指定された値と関連付けます。それ以外の場合は、指定されたリマッピング関数の結果で値を置換し、結果がNULLの場合は削除します。このメソッドは、キーに対して複数のマッピングされた値を結合する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="f4925c79cda2f9aaf0050cbbfb1bd9cb1cde5984" translate="yes" xml:space="preserve">
          <source>If the specified key is not already associated with a value, associate it with the given value. This is equivalent to</source>
          <target state="translated">指定されたキーがまだ値と関連付けられていない場合は、指定された値と関連付けます。これは</target>
        </trans-unit>
        <trans-unit id="d4876e55c0474ed2aee75208b622ba1f147600e9" translate="yes" xml:space="preserve">
          <source>If the specified key is not already associated with a value, associates it with the given value.</source>
          <target state="translated">指定されたキーがまだ値と関連付けられていない場合は、指定された値と関連付けます。</target>
        </trans-unit>
        <trans-unit id="df5a13cc298f2e36b4088599af2bf52a36c46112" translate="yes" xml:space="preserve">
          <source>If the specified key is not already associated with a value, associates it with the given value. Otherwise, replaces the value with the results of the given remapping function, or removes if &lt;code&gt;null&lt;/code&gt;. The function is &lt;em&gt;NOT&lt;/em&gt; guaranteed to be applied once atomically.</source>
          <target state="translated">指定されたキーがまだ値に関連付けられていない場合は、指定された値に関連付けます。それ以外の場合は、指定されたリマッピング関数の結果で値を置き換えるか、 &lt;code&gt;null&lt;/code&gt; の場合は削除します。関数がアトミックに一度適用されることは保証されてい&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e0e2aa4c62a637c17a37f4738b005d30fd80554c" translate="yes" xml:space="preserve">
          <source>If the specified key is not already associated with a value, associates it with the given value. This is equivalent to, for this &lt;code&gt;map&lt;/code&gt;:</source>
          <target state="translated">指定されたキーがまだ値に関連付けられていない場合は、指定された値に関連付けます。これは、この &lt;code&gt;map&lt;/code&gt; 場合と同等です。</target>
        </trans-unit>
        <trans-unit id="6107b4d5266bf408264e8a734eb446c3449b2b14" translate="yes" xml:space="preserve">
          <source>If the specified key is not already associated with a value, attempts to compute its value using the given mapping function and enters it into this map unless &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">指定されたキーがまだ値に関連付けられていない場合、指定されたマッピング関数を使用してその値を計算し、 &lt;code&gt;null&lt;/code&gt; でない限りこのマップに入力しようとします。</target>
        </trans-unit>
        <trans-unit id="551c906c1bb44aa217c725bb3e6835b67419ea34" translate="yes" xml:space="preserve">
          <source>If the specified key is not already associated with a value, attempts to compute its value using the given mapping function and enters it into this map unless &lt;code&gt;null&lt;/code&gt;. The entire method invocation is performed atomically, so the function is applied at most once per key. Some attempted update operations on this map by other threads may be blocked while computation is in progress, so the computation should be short and simple, and must not attempt to update any other mappings of this map.</source>
          <target state="translated">指定されたキーがまだ値に関連付けられていない場合、 &lt;code&gt;null&lt;/code&gt; でない限り、指定されたマッピング関数を使用してその値を計算し、このマップに入力します。メソッド呼び出し全体がアトミックに実行されるため、関数はキーごとに最大で1回適用されます。他のスレッドによってこのマップに対して行われた更新操作の一部は、計算の進行中にブロックされる可能性があるため、計算は短く単純である必要があり、このマップの他のマッピングの更新を試みてはなりません。</target>
        </trans-unit>
        <trans-unit id="a7ba2104811a8cc71437ff79090a01cae2c82bf2" translate="yes" xml:space="preserve">
          <source>If the specified key is not already associated with a value, attempts to compute its value using the given mapping function and enters it into this map unless &lt;code&gt;null&lt;/code&gt;. The entire method invocation is performed atomically. The supplied function is invoked exactly once per invocation of this method if the key is absent, else not at all. Some attempted update operations on this map by other threads may be blocked while computation is in progress, so the computation should be short and simple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199aa69d5cf4c4d157c5d05ec7094035a1890fc8" translate="yes" xml:space="preserve">
          <source>If the specified key is not already associated with a value, attempts to compute its value using the given mapping function and enters it into this map unless &lt;code&gt;null&lt;/code&gt;. The function is &lt;em&gt;NOT&lt;/em&gt; guaranteed to be applied once atomically only if the value is not present.</source>
          <target state="translated">指定されたキーがまだ値に関連付けられていない場合は、指定されたマッピング関数を使用してその値を計算し、 &lt;code&gt;null&lt;/code&gt; でない限り、このマップに入力します。関数は、値が存在しない場合にのみ、アトミックに1回適用されることは保証されてい&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ac522be26b00567361a746d74b58f7524d15d7ee" translate="yes" xml:space="preserve">
          <source>If the specified language tag contains any ill-formed subtags, the first such subtag and all following subtags are ignored. Compare to &lt;a href=&quot;locale.builder#setLanguageTag(java.lang.String)&quot;&gt;&lt;code&gt;Locale.Builder.setLanguageTag(java.lang.String)&lt;/code&gt;&lt;/a&gt; which throws an exception in this case.</source>
          <target state="translated">指定された言語タグに不正な形式のサブタグが含まれている場合、最初のそのようなサブタグとそれに続くすべてのサブタグは無視されます。この場合に例外をスローする&lt;a href=&quot;locale.builder#setLanguageTag(java.lang.String)&quot;&gt; &lt;code&gt;Locale.Builder.setLanguageTag(java.lang.String)&lt;/code&gt; &lt;/a&gt;と比較してください。</target>
        </trans-unit>
        <trans-unit id="74ec46a56735923288ea9182f5be9a7235b7c574" translate="yes" xml:space="preserve">
          <source>If the specified language tag contains any ill-formed subtags, the first such subtag and all following subtags are ignored. Compare to &lt;a href=&quot;locale.builder#setLanguageTag-java.lang.String-&quot;&gt;&lt;code&gt;Locale.Builder.setLanguageTag(java.lang.String)&lt;/code&gt;&lt;/a&gt; which throws an exception in this case.</source>
          <target state="translated">指定された言語タグに不適切な形式のサブタグが含まれている場合、そのような最初のサブタグとそれに続くすべてのサブタグは無視されます。この場合に例外をスローする&lt;a href=&quot;locale.builder#setLanguageTag-java.lang.String-&quot;&gt; &lt;code&gt;Locale.Builder.setLanguageTag(java.lang.String)&lt;/code&gt; &lt;/a&gt;と比較してください。</target>
        </trans-unit>
        <trans-unit id="495384335ab36e262e909f5285ee42e18f9010ef" translate="yes" xml:space="preserve">
          <source>If the specified list is small or implements the &lt;a href=&quot;randomaccess&quot;&gt;&lt;code&gt;RandomAccess&lt;/code&gt;&lt;/a&gt; interface, this implementation exchanges the first element into the location it should go, and then repeatedly exchanges the displaced element into the location it should go until a displaced element is swapped into the first element. If necessary, the process is repeated on the second and successive elements, until the rotation is complete. If the specified list is large and doesn't implement the &lt;code&gt;RandomAccess&lt;/code&gt; interface, this implementation breaks the list into two sublist views around index &lt;code&gt;-distance mod size&lt;/code&gt;. Then the &lt;a href=&quot;#reverse(java.util.List)&quot;&gt;&lt;code&gt;reverse(List)&lt;/code&gt;&lt;/a&gt; method is invoked on each sublist view, and finally it is invoked on the entire list. For a more complete description of both algorithms, see Section 2.3 of Jon Bentley's</source>
          <target state="translated">指定されたリストが小さいか、&lt;a href=&quot;randomaccess&quot;&gt; &lt;code&gt;RandomAccess&lt;/code&gt; &lt;/a&gt;インターフェイスを実装している場合、この実装は、最初の要素を移動する場所に交換し、次に、移動した要素が最初の要素に交換されるまで、移動した要素を移動する場所に繰り返し交換します。必要に応じて、回転が完了するまで、2番目以降の要素でこのプロセスが繰り返されます。指定されたリストが大きく、 &lt;code&gt;RandomAccess&lt;/code&gt; インターフェースを実装していない場合、この実装はリストをindex &lt;code&gt;-distance mod size&lt;/code&gt; 周りの2つのサブリストビューに分割します。次に、&lt;a href=&quot;#reverse(java.util.List)&quot;&gt; &lt;code&gt;reverse(List)&lt;/code&gt; &lt;/a&gt;メソッドは各サブリストビューで呼び出され、最後にリスト全体で呼び出されます。両方のアルゴリズムの詳細については、JonBentleyのセクション2.3を参照してください。</target>
        </trans-unit>
        <trans-unit id="29e16cfca3f81f7f2c484ea21572aa935aba3557" translate="yes" xml:space="preserve">
          <source>If the specified list is small or implements the &lt;a href=&quot;randomaccess&quot;&gt;&lt;code&gt;RandomAccess&lt;/code&gt;&lt;/a&gt; interface, this implementation exchanges the first element into the location it should go, and then repeatedly exchanges the displaced element into the location it should go until a displaced element is swapped into the first element. If necessary, the process is repeated on the second and successive elements, until the rotation is complete. If the specified list is large and doesn't implement the &lt;code&gt;RandomAccess&lt;/code&gt; interface, this implementation breaks the list into two sublist views around index &lt;code&gt;-distance mod size&lt;/code&gt;. Then the &lt;a href=&quot;collections#reverse-java.util.List-&quot;&gt;&lt;code&gt;reverse(List)&lt;/code&gt;&lt;/a&gt; method is invoked on each sublist view, and finally it is invoked on the entire list. For a more complete description of both algorithms, see Section 2.3 of Jon Bentley's</source>
          <target state="translated">指定されたリストが小さいか、&lt;a href=&quot;randomaccess&quot;&gt; &lt;code&gt;RandomAccess&lt;/code&gt; &lt;/a&gt;インターフェースを実装している場合、この実装は最初の要素を移動先の場所に交換し、次に、移動された要素を移動先の場所に繰り返し交換します。必要に応じて、回転が完了するまで、2番目以降の要素でプロセスが繰り返されます。指定されたリストが大きく、 &lt;code&gt;RandomAccess&lt;/code&gt; インターフェースを実装していない場合、この実装はリストをindex &lt;code&gt;-distance mod size&lt;/code&gt; に関する2つのサブリストビューに分割します。次に&lt;a href=&quot;collections#reverse-java.util.List-&quot;&gt; &lt;code&gt;reverse(List)&lt;/code&gt; &lt;/a&gt;メソッドは各サブリストビューで呼び出され、最後にリスト全体で呼び出されます。両方のアルゴリズムの詳細については、Jon Bentleyのセクション2.3を参照してください。</target>
        </trans-unit>
        <trans-unit id="a34d2ff62cb9dee92bc87d570b5cda8f97027ea5" translate="yes" xml:space="preserve">
          <source>If the specified local address is &lt;code&gt;null&lt;/code&gt; it is the equivalent of specifying the address as the AnyLocal address (see &lt;a href=&quot;inetaddress#isAnyLocalAddress()&quot;&gt;&lt;code&gt;InetAddress.isAnyLocalAddress&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt;).</source>
          <target state="translated">指定されたローカルアドレスが &lt;code&gt;null&lt;/code&gt; の場合、そのアドレスをAnyLocalアドレスとして指定するのと同じです（&lt;a href=&quot;inetaddress#isAnyLocalAddress()&quot;&gt; &lt;code&gt;InetAddress.isAnyLocalAddress&lt;/code&gt; &lt;/a&gt; &lt;code&gt;()&lt;/code&gt; を参照）。</target>
        </trans-unit>
        <trans-unit id="e207478f4c307f8daec04a1eb43edfa1b56c4337" translate="yes" xml:space="preserve">
          <source>If the specified local address is &lt;code&gt;null&lt;/code&gt; it is the equivalent of specifying the address as the AnyLocal address (see &lt;a href=&quot;inetaddress#isAnyLocalAddress--&quot;&gt;&lt;code&gt;InetAddress.isAnyLocalAddress&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()&lt;/code&gt;).</source>
          <target state="translated">指定されたローカルアドレスが &lt;code&gt;null&lt;/code&gt; の場合は、アドレスをAnyLocalアドレスとして指定するのと同じです（&lt;a href=&quot;inetaddress#isAnyLocalAddress--&quot;&gt; &lt;code&gt;InetAddress.isAnyLocalAddress&lt;/code&gt; &lt;/a&gt; &lt;code&gt;()&lt;/code&gt; を参照）。</target>
        </trans-unit>
        <trans-unit id="e20d600ab6dd5dfc2718408c731259b979d97003" translate="yes" xml:space="preserve">
          <source>If the specified locale contains &quot;ca&quot; (calendar), &quot;rg&quot; (region override), and/or &quot;tz&quot; (timezone) &lt;a href=&quot;../util/locale#def_locale_extension&quot;&gt;Unicode extensions&lt;/a&gt;, the calendar, the country and/or the time zone for formatting are overridden. If both &quot;ca&quot; and &quot;rg&quot; are specified, the calendar from the &quot;ca&quot; extension supersedes the implicit one from the &quot;rg&quot; extension.</source>
          <target state="translated">指定されたロケールに「ca」（カレンダー）、「rg」（リージョンオーバーライド）、または「tz」（タイムゾーン）&lt;a href=&quot;../util/locale#def_locale_extension&quot;&gt;Unicode拡張子が含まれている&lt;/a&gt;場合、カレンダー、国、および/またはフォーマットのタイムゾーンがオーバーライドされます。「ca」と「rg」の両方が指定されている場合、「ca」拡張子のカレンダーは「rg」拡張子の暗黙のカレンダーよりも優先されます。</target>
        </trans-unit>
        <trans-unit id="880a5d6295e66934e1af3a345f9a64565c2063d5" translate="yes" xml:space="preserve">
          <source>If the specified locale contains the &quot;&lt;code&gt;cf&lt;/code&gt;&quot; ( &lt;a href=&quot;https://www.unicode.org/reports/tr35/tr35.html#UnicodeCurrencyFormatIdentifier&quot;&gt; currency format style&lt;/a&gt;) &lt;a href=&quot;../util/locale#def_locale_extension&quot;&gt;Unicode extension&lt;/a&gt;, the returned currency format uses the style if it is available. Otherwise, the style uses the default &quot;&lt;code&gt;standard&lt;/code&gt;&quot; currency format. For example, if the style designates &quot;&lt;code&gt;account&lt;/code&gt;&quot;, negative currency amounts use a pair of parentheses in some locales.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb4277707fb1b363f377904ef8a00ae80162edc" translate="yes" xml:space="preserve">
          <source>If the specified name is already in the list of enabled attribute names, this method has no effect.</source>
          <target state="translated">指定された名前が既に有効な属性名のリストにある場合、このメソッドは何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="5fdd0b3e89e1f58df16acb73daa9598c19a8c783" translate="yes" xml:space="preserve">
          <source>If the specified name is not in the list of enabled attribute names, this method has no effect.</source>
          <target state="translated">指定された名前が有効な属性名のリストにない場合、このメソッドは何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="06d84325d01c60c6779f1c995e33cf0b305c715d" translate="yes" xml:space="preserve">
          <source>If the specified native is not a properly encoded native and the mappings for this native have not been altered with &lt;code&gt;setFlavorsForNative&lt;/code&gt;, then the contents of the &lt;code&gt;List&lt;/code&gt; is platform dependent, but &lt;code&gt;null&lt;/code&gt; cannot be returned.</source>
          <target state="translated">指定されたネイティブが適切にエンコードされたネイティブではなく、このネイティブのマッピングが &lt;code&gt;setFlavorsForNative&lt;/code&gt; で変更されていない場合、 &lt;code&gt;List&lt;/code&gt; の内容はプラットフォームに依存し &lt;code&gt;null&lt;/code&gt; が、nullを返すことはできません。</target>
        </trans-unit>
        <trans-unit id="25d850bc5c8154fd5a609c44324b0fd903372382" translate="yes" xml:space="preserve">
          <source>If the specified native is previously unknown to the data transfer subsystem, and that native has been properly encoded, then invoking this method will establish a mapping in both directions between the specified native and a &lt;code&gt;DataFlavor&lt;/code&gt; whose MIME type is a decoded version of the native.</source>
          <target state="translated">指定されたネイティブが以前にデータ転送サブシステムに認識されておらず、そのネイティブが適切にエンコードされている場合、このメソッドを呼び出すと、指定されたネイティブと、MIMEタイプがネイティブのデコードバージョンである &lt;code&gt;DataFlavor&lt;/code&gt; との間で双方向のマッピングが確立されます。</target>
        </trans-unit>
        <trans-unit id="92b923f20f66bacef4d2ff1b575298d2082a6d3b" translate="yes" xml:space="preserve">
          <source>If the specified object is an instance of &lt;code&gt;Throwable&lt;/code&gt;, it becomes the</source>
          <target state="translated">指定されたオブジェクトが &lt;code&gt;Throwable&lt;/code&gt; のインスタンスである場合、それは</target>
        </trans-unit>
        <trans-unit id="f07c1a027ba244740b1e94181579aafe6b9799f7" translate="yes" xml:space="preserve">
          <source>If the specified prefix is already in the list of enabled notification types, this method has no effect.</source>
          <target state="translated">指定されたプレフィックスが既に有効な通知タイプのリストにある場合、このメソッドは何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="35c19bfb0ddf95e53e5300c7d5d437ccd663d657" translate="yes" xml:space="preserve">
          <source>If the specified prefix is not in the list of enabled notification types, this method has no effect.</source>
          <target state="translated">指定された接頭辞が有効な通知タイプのリストにない場合、このメソッドは何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="f43c50810daae04d0ace6639274dabc1168944f9" translate="yes" xml:space="preserve">
          <source>If the specified property is not defined for a particular file format, this method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">指定されたプロパティが特定のファイル形式に対して定義されていない場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0dde80edd4786d58af9002dd456373854e678d38" translate="yes" xml:space="preserve">
          <source>If the specified property is not found or cannot be parsed as an integer then the &lt;code&gt;Color&lt;/code&gt; specified by the second argument is returned instead.</source>
          <target state="translated">指定されたプロパティが見つからないか、整数として解析できない場合は、代わりに2番目の引数で指定された &lt;code&gt;Color&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="bdabf1d6b2382f70866806891245d3b01a4f4527" translate="yes" xml:space="preserve">
          <source>If the specified property is not found or could not be parsed as an integer then &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">指定されたプロパティが見つからないか、整数として解析できなかった場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="3d802140ffd78fd804cf7b1fd2b7295c7e5afc88" translate="yes" xml:space="preserve">
          <source>If the specified property is not found or could not be parsed as an integer then the integer value &lt;code&gt;v&lt;/code&gt; is used instead, and is converted to a &lt;code&gt;Color&lt;/code&gt; object.</source>
          <target state="translated">指定されたプロパティが見つからないか、整数として解析できなかった場合は、代わりに整数値 &lt;code&gt;v&lt;/code&gt; が使用され、 &lt;code&gt;Color&lt;/code&gt; オブジェクトに変換されます。</target>
        </trans-unit>
        <trans-unit id="c4834c64d62740309c88f771524fdcb223e3fc7b" translate="yes" xml:space="preserve">
          <source>If the specified range of text does not fit into a &lt;code&gt;DOMString&lt;/code&gt;.</source>
          <target state="translated">指定されたテキスト範囲が &lt;code&gt;DOMString&lt;/code&gt; に収まらない場合。</target>
        </trans-unit>
        <trans-unit id="caa74ec04f197f8793bb6217e9a34e0badeccd71" translate="yes" xml:space="preserve">
          <source>If the specified system ID is a relative URI reference (see section 5 in [&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC 2396&lt;/a&gt;]), the DOM implementation will attempt to resolve the relative URI with the &lt;code&gt;baseURI&lt;/code&gt; as the base, if that fails, the behavior is implementation dependent.</source>
          <target state="translated">指定されたシステムIDが相対URI参照である場合（[ &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC 2396&lt;/a&gt; ]のセクション5を参照）、DOM実装は &lt;code&gt;baseURI&lt;/code&gt; をベースとして相対URIを解決しようとします。失敗した場合、動作は実装に依存します。</target>
        </trans-unit>
        <trans-unit id="ccebe2f1442b09ad81733fcfdb75c424f50597a4" translate="yes" xml:space="preserve">
          <source>If the specified system ID is a relative URI reference (see section 5 in [&lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC 2396&lt;/a&gt;]), the DOM implementation will attempt to resolve the relative URI with the &lt;code&gt;baseURI&lt;/code&gt; as the base, if that fails, the behavior is implementation dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1954d35e1a8126307e2b4392ca7004d2cfa54884" translate="yes" xml:space="preserve">
          <source>If the specified waiting time elapses then &lt;a href=&quot;timeoutexception&quot;&gt;&lt;code&gt;TimeoutException&lt;/code&gt;&lt;/a&gt; is thrown. If the time is less than or equal to zero, the method will not wait at all.</source>
          <target state="translated">指定された待機時間が経過すると、&lt;a href=&quot;timeoutexception&quot;&gt; &lt;code&gt;TimeoutException&lt;/code&gt; &lt;/a&gt;がスローされます。時間がゼロ以下の場合、メソッドはまったく待機しません。</target>
        </trans-unit>
        <trans-unit id="310c63f9de70d34cca02c16171cb0b3c368911f0" translate="yes" xml:space="preserve">
          <source>If the specified waiting time elapses then the value &lt;code&gt;false&lt;/code&gt; is returned. If the time is less than or equal to zero, the method will not wait at all.</source>
          <target state="translated">指定された待機時間が経過すると、値 &lt;code&gt;false&lt;/code&gt; が返されます。時間がゼロ以下の場合、メソッドはまったく待機しません。</target>
        </trans-unit>
        <trans-unit id="9bdd6bad6b7c4c04adc8addbdd6baac39622961b" translate="yes" xml:space="preserve">
          <source>If the specified waiting time elapses then the value &lt;code&gt;false&lt;/code&gt; is returned. If the time is less than or equal to zero, the method will not wait at all. Any permits that were to be assigned to this thread, are instead assigned to other threads trying to acquire permits, as if the permits had been made available by a call to &lt;a href=&quot;#release()&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された待機時間が経過すると、値 &lt;code&gt;false&lt;/code&gt; が返されます。時間がゼロ以下の場合、メソッドはまったく待機しません。このスレッドに割り当てられるはずだった許可は、&lt;a href=&quot;#release()&quot;&gt; &lt;code&gt;release()&lt;/code&gt; の&lt;/a&gt;呼び出しによって許可が使用可能にされたかのように、代わりに許可を取得しようとする他のスレッドに割り当てられます。</target>
        </trans-unit>
        <trans-unit id="229ff9ac1c41d305f35a7c0608935889e0aaec6b" translate="yes" xml:space="preserve">
          <source>If the specified waiting time elapses then the value &lt;code&gt;false&lt;/code&gt; is returned. If the time is less than or equal to zero, the method will not wait at all. Any permits that were to be assigned to this thread, are instead assigned to other threads trying to acquire permits, as if the permits had been made available by a call to &lt;a href=&quot;semaphore#release--&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された待機時間が経過すると、値 &lt;code&gt;false&lt;/code&gt; が返されます。時間がゼロ以下の場合、メソッドはまったく待機しません。このスレッドに割り当てられるはずだったすべての許可は、代わりに、許可を取得しようとする他のスレッドに割り当てられます。まるで、許可が&lt;a href=&quot;semaphore#release--&quot;&gt; &lt;code&gt;release()&lt;/code&gt; の&lt;/a&gt;呼び出しによって利用可能になったかのようです。</target>
        </trans-unit>
        <trans-unit id="6e9384353fa1c2365434f6e7663568dfb603f1c6" translate="yes" xml:space="preserve">
          <source>If the specified waiting time is zero or negative, the method does nothing. Otherwise, if the permit is available then it is consumed and the call returns immediately; otherwise the current thread becomes disabled for thread scheduling purposes and lies dormant until one of four things happens:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2fa8250cbec1b974164fdd92ff3bc201feb96b" translate="yes" xml:space="preserve">
          <source>If the stack trace of this &lt;code&gt;Throwable&lt;/code&gt;&lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;is not writable&lt;/a&gt;, calling this method has no effect other than validating its argument.</source>
          <target state="translated">この &lt;code&gt;Throwable&lt;/code&gt; のスタックトレースが&lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;書き込み可能&lt;/a&gt;でない場合、このメソッドを呼び出しても、引数を検証する以外の効果はありません。</target>
        </trans-unit>
        <trans-unit id="6d793547d8065207a7a2a3b64f74bfbae2f70956" translate="yes" xml:space="preserve">
          <source>If the stack trace of this &lt;code&gt;Throwable&lt;/code&gt;&lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;is not writable&lt;/a&gt;, calling this method has no effect.</source>
          <target state="translated">この &lt;code&gt;Throwable&lt;/code&gt; のスタックトレースが&lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;書き込み可能&lt;/a&gt;でない場合、このメソッドを呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="3dda73785392b01747ad72630377e93ff7ebd123" translate="yes" xml:space="preserve">
          <source>If the stack trace of this &lt;code&gt;Throwable&lt;/code&gt;&lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;is not writable&lt;/a&gt;, calling this method has no effect other than validating its argument.</source>
          <target state="translated">この &lt;code&gt;Throwable&lt;/code&gt; のスタックトレースが&lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;書き込み可能&lt;/a&gt;でない場合、このメソッドを呼び出しても、引数を検証する以外の効果はありません。</target>
        </trans-unit>
        <trans-unit id="f140d470f07fad292b66fc6ee306ae6d2a54ab2a" translate="yes" xml:space="preserve">
          <source>If the stack trace of this &lt;code&gt;Throwable&lt;/code&gt;&lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;is not writable&lt;/a&gt;, calling this method has no effect.</source>
          <target state="translated">この &lt;code&gt;Throwable&lt;/code&gt; のスタックトレースが&lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;書き込み可能&lt;/a&gt;でない場合、このメソッドを呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="4a0c7fbb44b44d8e097852c8b27b45e37f7b8b9c" translate="yes" xml:space="preserve">
          <source>If the standard error of the process has been redirected using &lt;a href=&quot;processbuilder#redirectError(java.lang.ProcessBuilder.Redirect)&quot;&gt;&lt;code&gt;ProcessBuilder.redirectError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;processbuilder#redirectErrorStream(boolean)&quot;&gt;&lt;code&gt;ProcessBuilder.redirectErrorStream&lt;/code&gt;&lt;/a&gt; then this method will return a &lt;a href=&quot;processbuilder#redirect-output&quot;&gt;null input stream&lt;/a&gt;.</source>
          <target state="translated">プロセスの標準エラーが&lt;a href=&quot;processbuilder#redirectError(java.lang.ProcessBuilder.Redirect)&quot;&gt; &lt;code&gt;ProcessBuilder.redirectError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;processbuilder#redirectErrorStream(boolean)&quot;&gt; &lt;code&gt;ProcessBuilder.redirectErrorStream&lt;/code&gt; &lt;/a&gt;を使用してリダイレクトされている場合、このメソッドは&lt;a href=&quot;processbuilder#redirect-output&quot;&gt;null入力ストリーム&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="077ba9a63c85f3c79b6472adbd6bd273ed829948" translate="yes" xml:space="preserve">
          <source>If the standard error of the subprocess has been redirected using &lt;a href=&quot;processbuilder#redirectError-java.lang.ProcessBuilder.Redirect-&quot;&gt;&lt;code&gt;ProcessBuilder.redirectError&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;processbuilder#redirectErrorStream-boolean-&quot;&gt;&lt;code&gt;ProcessBuilder.redirectErrorStream&lt;/code&gt;&lt;/a&gt; then this method will return a &lt;a href=&quot;processbuilder#redirect-output&quot;&gt;null input stream&lt;/a&gt;.</source>
          <target state="translated">サブプロセスの標準エラーが&lt;a href=&quot;processbuilder#redirectError-java.lang.ProcessBuilder.Redirect-&quot;&gt; &lt;code&gt;ProcessBuilder.redirectError&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;processbuilder#redirectErrorStream-boolean-&quot;&gt; &lt;code&gt;ProcessBuilder.redirectErrorStream&lt;/code&gt; &lt;/a&gt;を使用してリダイレクトされている場合、このメソッドは&lt;a href=&quot;processbuilder#redirect-output&quot;&gt;null入力ストリーム&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="68b1b68d307d6ca1fc6a760c2ae878282f015b92" translate="yes" xml:space="preserve">
          <source>If the standard input of the process has been redirected using &lt;a href=&quot;processbuilder#redirectInput(java.lang.ProcessBuilder.Redirect)&quot;&gt;&lt;code&gt;ProcessBuilder.redirectInput&lt;/code&gt;&lt;/a&gt; then this method will return a &lt;a href=&quot;processbuilder#redirect-input&quot;&gt;null output stream&lt;/a&gt;.</source>
          <target state="translated">プロセスの標準入力が&lt;a href=&quot;processbuilder#redirectInput(java.lang.ProcessBuilder.Redirect)&quot;&gt; &lt;code&gt;ProcessBuilder.redirectInput&lt;/code&gt; &lt;/a&gt;を使用してリダイレクトされている場合、このメソッドは&lt;a href=&quot;processbuilder#redirect-input&quot;&gt;null出力ストリーム&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="86430b03fbc71403519b5c3b7220021c3f6618a7" translate="yes" xml:space="preserve">
          <source>If the standard input of the subprocess has been redirected using &lt;a href=&quot;processbuilder#redirectInput-java.lang.ProcessBuilder.Redirect-&quot;&gt;&lt;code&gt;ProcessBuilder.redirectInput&lt;/code&gt;&lt;/a&gt; then this method will return a &lt;a href=&quot;processbuilder#redirect-input&quot;&gt;null output stream&lt;/a&gt;.</source>
          <target state="translated">サブプロセスの標準入力が&lt;a href=&quot;processbuilder#redirectInput-java.lang.ProcessBuilder.Redirect-&quot;&gt; &lt;code&gt;ProcessBuilder.redirectInput&lt;/code&gt; &lt;/a&gt;を使用してリダイレクトされている場合、このメソッドは&lt;a href=&quot;processbuilder#redirect-input&quot;&gt;null出力ストリーム&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="3193a3f874d9883f06995425c57bb9f49f95c498" translate="yes" xml:space="preserve">
          <source>If the standard output of the process has been redirected using &lt;a href=&quot;processbuilder#redirectOutput(java.lang.ProcessBuilder.Redirect)&quot;&gt;&lt;code&gt;ProcessBuilder.redirectOutput&lt;/code&gt;&lt;/a&gt; then this method will return a &lt;a href=&quot;processbuilder#redirect-output&quot;&gt;null input stream&lt;/a&gt;.</source>
          <target state="translated">プロセスの標準出力が&lt;a href=&quot;processbuilder#redirectOutput(java.lang.ProcessBuilder.Redirect)&quot;&gt; &lt;code&gt;ProcessBuilder.redirectOutput&lt;/code&gt; &lt;/a&gt;を使用してリダイレクトされている場合、このメソッドは&lt;a href=&quot;processbuilder#redirect-output&quot;&gt;null入力ストリーム&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="7075f6432f67c8c99f417e3aed9f9abd4674447d" translate="yes" xml:space="preserve">
          <source>If the standard output of the subprocess has been redirected using &lt;a href=&quot;processbuilder#redirectOutput-java.lang.ProcessBuilder.Redirect-&quot;&gt;&lt;code&gt;ProcessBuilder.redirectOutput&lt;/code&gt;&lt;/a&gt; then this method will return a &lt;a href=&quot;processbuilder#redirect-output&quot;&gt;null input stream&lt;/a&gt;.</source>
          <target state="translated">サブプロセスの標準出力が&lt;a href=&quot;processbuilder#redirectOutput-java.lang.ProcessBuilder.Redirect-&quot;&gt; &lt;code&gt;ProcessBuilder.redirectOutput&lt;/code&gt; &lt;/a&gt;を使用してリダイレクトされている場合、このメソッドは&lt;a href=&quot;processbuilder#redirect-output&quot;&gt;null入力ストリーム&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="ef7d1e9b0031ea83269d5adfbd99e3c687130e6f" translate="yes" xml:space="preserve">
          <source>If the state of this check box is &lt;code&gt;true&lt;/code&gt; and the new group already has a check box selected, this check box's state is changed to &lt;code&gt;false&lt;/code&gt;. If the state of this check box is &lt;code&gt;true&lt;/code&gt; and the new group has no check box selected, this check box becomes the selected checkbox for the new group and its state is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このチェックボックスの状態が &lt;code&gt;true&lt;/code&gt; で、新しいグループですでにチェックボックスが選択されている場合、このチェックボックスの状態は &lt;code&gt;false&lt;/code&gt; に変更されます。このチェックボックスの状態が &lt;code&gt;true&lt;/code&gt; で、新しいグループでチェックボックスが選択されていない場合、このチェックボックスは新しいグループの選択されたチェックボックスになり、その状態は &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d366f3eb6bf9e4d636eed0b8ad01a318338322f7" translate="yes" xml:space="preserve">
          <source>If the stream argument is &lt;code&gt;true&lt;/code&gt;, this creates a stream socket. If the stream argument is &lt;code&gt;false&lt;/code&gt;, it creates a datagram socket.</source>
          <target state="translated">stream引数が &lt;code&gt;true&lt;/code&gt; の場合、これはストリームソケットを作成します。stream引数が &lt;code&gt;false&lt;/code&gt; の場合、データグラムソケットを作成します。</target>
        </trans-unit>
        <trans-unit id="99da69fcd16c1de3a48462f6d509743df4ef63c3" translate="yes" xml:space="preserve">
          <source>If the stream is already closed, invoking this method has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb34c7e224c2415946e3db9d58aac4984e092ef" translate="yes" xml:space="preserve">
          <source>If the stream is already closed, the action will be performed immediately in the current thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92109724254a6a952d63389232984fc4b39d101f" translate="yes" xml:space="preserve">
          <source>If the stream is parallel, and the &lt;code&gt;Collector&lt;/code&gt; is &lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt;&lt;code&gt;concurrent&lt;/code&gt;&lt;/a&gt;, and either the stream is unordered or the collector is &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt;&lt;code&gt;unordered&lt;/code&gt;&lt;/a&gt;, then a concurrent reduction will be performed (see &lt;a href=&quot;collector&quot;&gt;&lt;code&gt;Collector&lt;/code&gt;&lt;/a&gt; for details on concurrent reduction.)</source>
          <target state="translated">ストリームが並列で、 &lt;code&gt;Collector&lt;/code&gt; が&lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt; &lt;code&gt;concurrent&lt;/code&gt; &lt;/a&gt;であり、ストリームが順序付けられていないか、コレクターが&lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt; &lt;code&gt;unordered&lt;/code&gt; &lt;/a&gt;場合、並行削減が実行されます（並行削減の詳細については、&lt;a href=&quot;collector&quot;&gt; &lt;code&gt;Collector&lt;/code&gt; &lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="f3975bae6f8df00f0d259552436dae709c82b9db" translate="yes" xml:space="preserve">
          <source>If the style sheet is a linked style sheet, the value of its attribute is its location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8936505a02a28236a091f15ae37b5daf1c18699" translate="yes" xml:space="preserve">
          <source>If the style sheet is a linked style sheet, the value of its attribute is its location. For inline style sheets, the value of this attribute is &lt;code&gt;null&lt;/code&gt;. See the href attribute definition for the &lt;code&gt;LINK&lt;/code&gt; element in HTML 4.0, and the href pseudo-attribute for the XML style sheet processing instruction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649cf82f464f662aa965403c73cf99d556fea581" translate="yes" xml:space="preserve">
          <source>If the subprocess has already terminated then this method returns immediately with the value &lt;code&gt;true&lt;/code&gt;. If the process has not terminated and the timeout value is less than, or equal to, zero, then this method returns immediately with the value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">サブプロセスがすでに終了している場合、このメソッドは値 &lt;code&gt;true&lt;/code&gt; ですぐに戻ります。プロセスが終了しておらず、タイムアウト値がゼロ以下の場合、このメソッドは値 &lt;code&gt;false&lt;/code&gt; ですぐに戻ります。</target>
        </trans-unit>
        <trans-unit id="eadbeed59697fe559cad7872f812e28abf5d75a2" translate="yes" xml:space="preserve">
          <source>If the superclass is a parameterized type, the &lt;code&gt;Type&lt;/code&gt; object returned must accurately reflect the actual type arguments used in the source code. The parameterized type representing the superclass is created if it had not been created before. See the declaration of &lt;a href=&quot;reflect/parameterizedtype&quot;&gt;&lt;code&gt;ParameterizedType&lt;/code&gt;&lt;/a&gt; for the semantics of the creation process for parameterized types. If this &lt;code&gt;Class&lt;/code&gt; object represents either the &lt;code&gt;Object&lt;/code&gt; class, an interface, a primitive type, or void, then null is returned. If this &lt;code&gt;Class&lt;/code&gt; object represents an array class then the &lt;code&gt;Class&lt;/code&gt; object representing the &lt;code&gt;Object&lt;/code&gt; class is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0a8ba1234c9978531ae814a7cbb1dae0a3c230" translate="yes" xml:space="preserve">
          <source>If the superclass is a parameterized type, the &lt;code&gt;Type&lt;/code&gt; object returned must accurately reflect the actual type parameters used in the source code. The parameterized type representing the superclass is created if it had not been created before. See the declaration of &lt;a href=&quot;reflect/parameterizedtype&quot;&gt;&lt;code&gt;ParameterizedType&lt;/code&gt;&lt;/a&gt; for the semantics of the creation process for parameterized types. If this &lt;code&gt;Class&lt;/code&gt; represents either the &lt;code&gt;Object&lt;/code&gt; class, an interface, a primitive type, or void, then null is returned. If this object represents an array class then the &lt;code&gt;Class&lt;/code&gt; object representing the &lt;code&gt;Object&lt;/code&gt; class is returned.</source>
          <target state="translated">スーパークラスがパラメーター化された型である場合、返される &lt;code&gt;Type&lt;/code&gt; オブジェクトは、ソースコードで使用される実際の型パラメーターを正確に反映する必要があります。スーパークラスを表すパラメーター化された型は、それがまだ作成されていない場合に作成されます。&lt;a href=&quot;reflect/parameterizedtype&quot;&gt; &lt;code&gt;ParameterizedType&lt;/code&gt; &lt;/a&gt;れた型の作成プロセスのセマンティクスについては、ParameterizedTypeの宣言を参照してください。この &lt;code&gt;Class&lt;/code&gt; が &lt;code&gt;Object&lt;/code&gt; クラス、インターフェース、プリミティブ型、またはvoidのいずれかを表す場合、nullが返されます。このオブジェクトが配列クラスを表す場合、 &lt;code&gt;Object&lt;/code&gt; クラスを表す &lt;code&gt;Class&lt;/code&gt; オブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="702061aae71a7b0bc29035519b62837f0bf9ee3d" translate="yes" xml:space="preserve">
          <source>If the supplied &lt;code&gt;ImageReadParam&lt;/code&gt; contains optional setting values not supported by this reader (</source>
          <target state="translated">指定された &lt;code&gt;ImageReadParam&lt;/code&gt; に、このリーダーでサポートされていないオプションの設定値が含まれている場合（</target>
        </trans-unit>
        <trans-unit id="a6062faf5608aab9b4601cbc2c84f0f96e088fa9" translate="yes" xml:space="preserve">
          <source>If the supplied &lt;code&gt;ImageWriteParam&lt;/code&gt; contains optional setting values not supported by this writer (</source>
          <target state="translated">指定された &lt;code&gt;ImageWriteParam&lt;/code&gt; に、このライターでサポートされていないオプションの設定値が含まれている場合（</target>
        </trans-unit>
        <trans-unit id="e0ec08c9bcf3ded436efba803a4101d1da6386d3" translate="yes" xml:space="preserve">
          <source>If the supplied &lt;code&gt;ImageWriteParam&lt;/code&gt; contains optional setting values not understood by this writer or transcoder, they will be ignored.</source>
          <target state="translated">提供された &lt;code&gt;ImageWriteParam&lt;/code&gt; に、このライターまたはトランスコーダーが理解できないオプションの設定値が含まれている場合、それらは無視されます。</target>
        </trans-unit>
        <trans-unit id="83332eaf39cb8bfd82ea83337e6eefff71ef19fb" translate="yes" xml:space="preserve">
          <source>If the support for extended mouse buttons is &lt;a href=&quot;toolkit#areExtraMouseButtonsEnabled()&quot;&gt;&lt;code&gt;disabled&lt;/code&gt;&lt;/a&gt; by Java then it is allowed to use only the following standard button masks: &lt;code&gt;InputEvent.BUTTON1_DOWN_MASK&lt;/code&gt;, &lt;code&gt;InputEvent.BUTTON2_DOWN_MASK&lt;/code&gt;, &lt;code&gt;InputEvent.BUTTON3_DOWN_MASK&lt;/code&gt;.</source>
          <target state="translated">拡張マウスボタンのサポートがJavaによって&lt;a href=&quot;toolkit#areExtraMouseButtonsEnabled()&quot;&gt; &lt;code&gt;disabled&lt;/code&gt; &lt;/a&gt;されている場合、次の標準ボタンマスクのみを使用できます： &lt;code&gt;InputEvent.BUTTON1_DOWN_MASK&lt;/code&gt; 、 &lt;code&gt;InputEvent.BUTTON2_DOWN_MASK&lt;/code&gt; 、 &lt;code&gt;InputEvent.BUTTON3_DOWN_MASK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="96b9d55f1b2271749505c66ce5e0fd46a6ed130f" translate="yes" xml:space="preserve">
          <source>If the support for extended mouse buttons is &lt;a href=&quot;toolkit#areExtraMouseButtonsEnabled()&quot;&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/a&gt; by Java then it is allowed to use the standard button masks and masks for existing extended mouse buttons, if the mouse has more then three buttons. In that way, it is allowed to use the button masks corresponding to the buttons in the range from 1 to &lt;a href=&quot;mouseinfo#getNumberOfButtons()&quot;&gt;&lt;code&gt;MouseInfo.getNumberOfButtons()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">拡張マウスボタンのサポートがJavaによって&lt;a href=&quot;toolkit#areExtraMouseButtonsEnabled()&quot;&gt; &lt;code&gt;enabled&lt;/code&gt; &lt;/a&gt;ている場合、マウスに3つ以上のボタンがある場合は、標準のボタンマスクと既存の拡張マウスボタンのマスクを使用できます。このようにして、1から&lt;a href=&quot;mouseinfo#getNumberOfButtons()&quot;&gt; &lt;code&gt;MouseInfo.getNumberOfButtons()&lt;/code&gt; の&lt;/a&gt;範囲のボタンに対応するボタンマスクを使用できます。</target>
        </trans-unit>
        <trans-unit id="4c7431ea9b95b75172bde5cfc89a8c0841e0ed59" translate="yes" xml:space="preserve">
          <source>If the system ID is a URL, it will be fully resolved.</source>
          <target state="translated">システムIDがURLの場合は完全に解決されます。</target>
        </trans-unit>
        <trans-unit id="7b5818c71edba95dbdcbbbe03f31b7344a7f8756" translate="yes" xml:space="preserve">
          <source>If the system ID is a relative URI reference (see section 5 in [&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC 2396&lt;/a&gt;]), the behavior is implementation dependent.</source>
          <target state="translated">システムIDが相対URI参照である場合（[ &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC 2396&lt;/a&gt; ]のセクション5を参照）、動作は実装に依存します。</target>
        </trans-unit>
        <trans-unit id="331d34dbe48eb64c17b2f5bc6cd336e62af8577b" translate="yes" xml:space="preserve">
          <source>If the system ID is a relative URI reference (see section 5 in [&lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;IETF RFC 2396&lt;/a&gt;]), the behavior is implementation dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c8152472d911028fe75c0272d12bdc08e6d5e4" translate="yes" xml:space="preserve">
          <source>If the system does not support environment variables, an empty map is returned.</source>
          <target state="translated">システムが環境変数をサポートしていない場合、空のマップが返されます。</target>
        </trans-unit>
        <trans-unit id="06f52e1b071eac0948a9acca87880e3e4138c05f" translate="yes" xml:space="preserve">
          <source>If the system identifier is a URL, it must be fully resolved (it may not be a relative URL).</source>
          <target state="translated">システム識別子がURLの場合は、完全に解決されていなければなりません(相対URLであってはいけません)。</target>
        </trans-unit>
        <trans-unit id="702582a6612c4020970698031381ca0b9cdc6250" translate="yes" xml:space="preserve">
          <source>If the system identifier is a URL, it must be fully resolved by the application before it is passed to the parser.</source>
          <target state="translated">システム識別子がURLの場合、パーサに渡される前にアプリケーションで完全に解決されている必要があります。</target>
        </trans-unit>
        <trans-unit id="e1141b9ff132e9f64996b3e44968c6f92596158e" translate="yes" xml:space="preserve">
          <source>If the system identifier is a URL, it will have been resolved fully.</source>
          <target state="translated">システム識別子がURLの場合は、完全に解決されています。</target>
        </trans-unit>
        <trans-unit id="69c62c9017d4450e514b7c2160989710e82b3ed0" translate="yes" xml:space="preserve">
          <source>If the system identifier is a URL, the SAX parser must resolve it fully before reporting it to the application.</source>
          <target state="translated">システム識別子がURLの場合、SAXパーサはアプリケーションに報告する前に、それを完全に解決しなければなりません。</target>
        </trans-unit>
        <trans-unit id="84493bb7e50a00814aa34c277d5716aea3301f50" translate="yes" xml:space="preserve">
          <source>If the system identifier is a URL, the parser must resolve it fully before passing it to the application.</source>
          <target state="translated">システム識別子がURLの場合、パーサはアプリケーションに渡す前にそれを完全に解決しなければなりません。</target>
        </trans-unit>
        <trans-unit id="63e187f8aea2b4eaa14f670a85e3ec3f6d417906" translate="yes" xml:space="preserve">
          <source>If the system identifier is a URL, the parser must resolve it fully before passing it to the application. For example, a file name must always be provided as a &lt;em&gt;file:...&lt;/em&gt; URL, and other kinds of relative URI are also resolved against their bases.</source>
          <target state="translated">システム識別子がURLの場合、パーサーはそれをアプリケーションに渡す前に完全に解決する必要があります。たとえば、ファイル名は常に&lt;em&gt;file：...&lt;/em&gt; URLとして提供する必要があり、他の種類の相対URIもそれらのベースに対して解決されます。</target>
        </trans-unit>
        <trans-unit id="1d4775f63756839b1ddacbd6914b05abbe4f7038" translate="yes" xml:space="preserve">
          <source>If the system property &quot;&lt;code&gt;&lt;span id=&quot;java.system.class.loader&quot;&gt;java.system.class.loader&lt;/span&gt;&lt;/code&gt;&quot; is defined when this method is first invoked then the value of that property is taken to be the name of a class that will be returned as the system class loader. The class is loaded using the default system class loader and must define a public constructor that takes a single parameter of type &lt;code&gt;ClassLoader&lt;/code&gt; which is used as the delegation parent. An instance is then created using this constructor with the default system class loader as the parameter. The resulting class loader is defined to be the system class loader. During construction, the class loader should take great care to avoid calling &lt;code&gt;getSystemClassLoader()&lt;/code&gt;. If circular initialization of the system class loader is detected then an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fa5298bfbc9c3dc738e30b2cfbc794eda77505" translate="yes" xml:space="preserve">
          <source>If the system property &quot;&lt;code&gt;java.system.class.loader&lt;/code&gt;&quot; is defined when this method is first invoked then the value of that property is taken to be the name of a class that will be returned as the system class loader. The class is loaded using the default system class loader and must define a public constructor that takes a single parameter of type &lt;code&gt;ClassLoader&lt;/code&gt; which is used as the delegation parent. An instance is then created using this constructor with the default system class loader as the parameter. The resulting class loader is defined to be the system class loader.</source>
          <target state="translated">このメソッドが最初に呼び出されたときにシステムプロパティ「 &lt;code&gt;java.system.class.loader&lt;/code&gt; 」が定義されている場合、そのプロパティの値は、システムクラスローダーとして返されるクラスの名前と見なされます。クラスは、デフォルトのシステムクラスローダーを使用して読み込まれ、委任の親として使用される &lt;code&gt;ClassLoader&lt;/code&gt; 型の単一パラメーターを取るパブリックコンストラクターを定義する必要があります。次に、このコンストラクターを使用して、デフォルトのシステムクラスローダーをパラメーターとしてインスタンスが作成されます。結果のクラスローダーは、システムクラスローダーとして定義されます。</target>
        </trans-unit>
        <trans-unit id="72daeec5943fe704e6b6f79f778edda5bb93a7be" translate="yes" xml:space="preserve">
          <source>If the system property &quot;&lt;code&gt;java.system.class.loader&lt;/code&gt;&quot; is defined when this method is first invoked then the value of that property is taken to be the name of a class that will be returned as the system class loader. The class is loaded using the default system class loader and must define a public constructor that takes a single parameter of type &lt;code&gt;ClassLoader&lt;/code&gt; which is used as the delegation parent. An instance is then created using this constructor with the default system class loader as the parameter. The resulting class loader is defined to be the system class loader. During construction, the class loader should take great care to avoid calling &lt;code&gt;getSystemClassLoader()&lt;/code&gt;. If circular initialization of the system class loader is detected then an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown.</source>
          <target state="translated">このメソッドが最初に呼び出されたときにシステムプロパティ「 &lt;code&gt;java.system.class.loader&lt;/code&gt; 」が定義されている場合、そのプロパティの値は、システムクラスローダーとして返されるクラスの名前と見なされます。クラスはデフォルトのシステムクラスローダーを使用してロードされ、委任の親として使用される &lt;code&gt;ClassLoader&lt;/code&gt; タイプの単一のパラメーターを受け取るパブリックコンストラクターを定義する必要があります。次に、デフォルトのシステムクラスローダーをパラメーターとして使用して、このコンストラクターを使用してインスタンスが作成されます。結果のクラスローダーは、システムクラスローダーとして定義されます。構築中、クラスローダーは &lt;code&gt;getSystemClassLoader()&lt;/code&gt; を呼び出さないように細心の注意を払う必要があります。システムクラスローダーの循環初期化が検出された場合、 &lt;code&gt;IllegalStateException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="b99d8bdd490b40a5b7b3869d55b18d0b463d68ae" translate="yes" xml:space="preserve">
          <source>If the system property &lt;a href=&quot;#DEFAULT_PROPERTY_NAME&quot;&gt;&lt;code&gt;DEFAULT_PROPERTY_NAME&lt;/code&gt;&lt;/a&gt; + &quot;:uri&quot; is present, where uri is the parameter to this method, then its value is read as a class name. The method will try to create a new instance of this class by using the class loader, and returns it if it is successfully created.</source>
          <target state="translated">システムプロパティ&lt;a href=&quot;#DEFAULT_PROPERTY_NAME&quot;&gt; &lt;code&gt;DEFAULT_PROPERTY_NAME&lt;/code&gt; &lt;/a&gt; + &quot;：uri&quot;が存在する場合（uriはこのメソッドのパラメーター）、その値はクラス名として読み取られます。このメソッドは、クラスローダーを使用してこのクラスの新しいインスタンスを作成しようとし、正常に作成された場合はそれを返します。</target>
        </trans-unit>
        <trans-unit id="07bb24fbcfd01038cb271accdc3621d725d60279" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;&quot;javax.xml.validation.SchemaFactory:&amp;lt;i&amp;gt;schemaLanguage&amp;lt;/i&amp;gt;&quot;&lt;/code&gt; is present (where</source>
          <target state="translated">システムプロパティ &lt;code&gt;&quot;javax.xml.validation.SchemaFactory:&amp;lt;i&amp;gt;schemaLanguage&amp;lt;/i&amp;gt;&quot;&lt;/code&gt; が存在する場合（ここで</target>
        </trans-unit>
        <trans-unit id="7f7a9a303f9cb45f840f5c2ab595c9253722c6a7" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;&lt;span id=&quot;com.sun.net.httpserver.HttpServerProvider&quot;&gt;com.sun.net.httpserver.HttpServerProvider&lt;/span&gt;&lt;/code&gt; is defined then it is taken to be the fully-qualified name of a concrete provider class. The class is loaded and instantiated; if this process fails then an unspecified unchecked error or exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e51147b8722cac897d95fae276f73bfae5bacd" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;&lt;span id=&quot;java.nio.channels.spi.AsynchronousChannelProvider&quot;&gt;java.nio.channels.spi.AsynchronousChannelProvider&lt;/span&gt;&lt;/code&gt; is defined then it is taken to be the fully-qualified name of a concrete provider class. The class is loaded and instantiated; if this process fails then an unspecified error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef75bfa5083a390acda97a096494d6c039249d74" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;&lt;span id=&quot;java.nio.channels.spi.SelectorProvider&quot;&gt;java.nio.channels.spi.SelectorProvider&lt;/span&gt;&lt;/code&gt; is defined then it is taken to be the fully-qualified name of a concrete provider class. The class is loaded and instantiated; if this process fails then an unspecified error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae664d66a76b02b3110fa2464812b1011bc5ba9" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;&lt;span id=&quot;java.rmi.server.RMIClassLoaderSpi&quot;&gt;java.rmi.server.RMIClassLoaderSpi&lt;/span&gt;&lt;/code&gt; is defined, then if its value equals the string &lt;code&gt;&quot;default&quot;&lt;/code&gt;, the provider instance will be the value returned by an invocation of the &lt;a href=&quot;#getDefaultProviderInstance()&quot;&gt;&lt;code&gt;getDefaultProviderInstance()&lt;/code&gt;&lt;/a&gt; method, and for any other value, if a class named with the value of the property can be loaded by the system class loader (see &lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;&lt;code&gt;ClassLoader.getSystemClassLoader()&lt;/code&gt;&lt;/a&gt;) and that class is assignable to &lt;a href=&quot;rmiclassloaderspi&quot;&gt;&lt;code&gt;RMIClassLoaderSpi&lt;/code&gt;&lt;/a&gt; and has a public no-argument constructor, then that constructor will be invoked to create the provider instance. If the property is defined but any other of those conditions are not true, then an unspecified &lt;code&gt;Error&lt;/code&gt; will be thrown to code that attempts to use &lt;code&gt;RMIClassLoader&lt;/code&gt;, indicating the failure to obtain a provider instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ac08bfd515249091e7394a6ee49c9a2fed5e70" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;&lt;span id=&quot;java.rmi.server.randomIDs&quot;&gt;java.rmi.server.randomIDs&lt;/span&gt;&lt;/code&gt; is defined to equal the string &lt;code&gt;&quot;true&quot;&lt;/code&gt; (case insensitive), then the &lt;a href=&quot;#%3Cinit%3E()&quot;&gt;&lt;code&gt;ObjID()&lt;/code&gt;&lt;/a&gt; constructor will use a cryptographically strong random number generator to choose the object number of the returned &lt;code&gt;ObjID&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16322c9765cf14a6f819de14a9ca0ba3b1b00413" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;&lt;span id=&quot;javax.rmi.ssl.client.enabledCipherSuites&quot;&gt;javax.rmi.ssl.client.enabledCipherSuites&lt;/span&gt;&lt;/code&gt; is specified, the &lt;a href=&quot;#createSocket(java.lang.String,int)&quot;&gt;&lt;code&gt;createSocket(String,int)&lt;/code&gt;&lt;/a&gt; method will call &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslsocket#setEnabledCipherSuites(java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;SSLSocket.setEnabledCipherSuites(String[])&lt;/code&gt;&lt;/a&gt; before returning the socket. The value of this system property is a string that is a comma-separated list of SSL/TLS cipher suites to enable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="596e2084ca2c577ef4c311446714119d3d18b3ee" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;&lt;span id=&quot;javax.rmi.ssl.client.enabledCipherSuites-1&quot;&gt;javax.rmi.ssl.client.enabledCipherSuites&lt;/span&gt;&lt;/code&gt; is specified, this method will call &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslsocket#setEnabledCipherSuites(java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;SSLSocket.setEnabledCipherSuites(String[])&lt;/code&gt;&lt;/a&gt; before returning the socket. The value of this system property is a string that is a comma-separated list of SSL/TLS cipher suites to enable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e125dd8fdc5133e26429f181bd79c7949497ac" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;&lt;span id=&quot;javax.rmi.ssl.client.enabledProtocols&quot;&gt;javax.rmi.ssl.client.enabledProtocols&lt;/span&gt;&lt;/code&gt; is specified, the &lt;a href=&quot;#createSocket(java.lang.String,int)&quot;&gt;&lt;code&gt;createSocket(String,int)&lt;/code&gt;&lt;/a&gt; method will call &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslsocket#setEnabledProtocols(java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;SSLSocket.setEnabledProtocols(String[])&lt;/code&gt;&lt;/a&gt; before returning the socket. The value of this system property is a string that is a comma-separated list of SSL/TLS protocol versions to enable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="631a5d993700cbd8957a989d51b00a4545052b7d" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;&lt;span id=&quot;javax.rmi.ssl.client.enabledProtocols-1&quot;&gt;javax.rmi.ssl.client.enabledProtocols&lt;/span&gt;&lt;/code&gt; is specified, this method will call &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslsocket#setEnabledProtocols(java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;SSLSocket.setEnabledProtocols(String[])&lt;/code&gt;&lt;/a&gt; before returning the socket. The value of this system property is a string that is a comma-separated list of SSL/TLS protocol versions to enable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eecf6f38d2140ba1e50010cc6e9645ed8e47e5a9" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;awt.dnd.drag.threshold&lt;/code&gt; is set to a positive integer, this method returns the value of the system property; otherwise if a pertinent desktop property is available and supported by the implementation of the Java platform, this method returns the value of that property; otherwise this method returns some default value. The pertinent desktop property can be queried using &lt;code&gt;java.awt.Toolkit.getDesktopProperty(&quot;DnD.gestureMotionThreshold&quot;)&lt;/code&gt;.</source>
          <target state="translated">システムプロパティ &lt;code&gt;awt.dnd.drag.threshold&lt;/code&gt; が正の整数に設定されている場合、このメソッドはシステムプロパティの値を返します。それ以外の場合、関連するデスクトッププロパティが利用可能であり、Javaプラットフォームの実装によってサポートされている場合、このメソッドはそのプロパティの値を返します。それ以外の場合、このメソッドはデフォルト値を返します。関連するデスクトッププロパティは、 &lt;code&gt;java.awt.Toolkit.getDesktopProperty(&quot;DnD.gestureMotionThreshold&quot;)&lt;/code&gt; を使用して照会できます。</target>
        </trans-unit>
        <trans-unit id="5504ea1f8b0b864e39c0da5d0938dff7d5fce0a6" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;awt.image.incrementaldraw&lt;/code&gt; is missing or has the value &lt;code&gt;true&lt;/code&gt;, the image is incrementally drawn. If the system property has any other value, then the image is not drawn until it has been completely loaded.</source>
          <target state="translated">システムプロパティ &lt;code&gt;awt.image.incrementaldraw&lt;/code&gt; が欠落しているか、値が &lt;code&gt;true&lt;/code&gt; の場合、画像は段階的に描画されます。システムプロパティに他の値がある場合、画像は完全に読み込まれるまで描画されません。</target>
        </trans-unit>
        <trans-unit id="3a82eebeff03c982f8a2c8e7b92fff81f4e06e38" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;java.nio.channels.spi.AsynchronousChannelProvider&lt;/code&gt; is defined then it is taken to be the fully-qualified name of a concrete provider class. The class is loaded and instantiated; if this process fails then an unspecified error is thrown.</source>
          <target state="translated">システムプロパティ &lt;code&gt;java.nio.channels.spi.AsynchronousChannelProvider&lt;/code&gt; が定義されている場合は、具象プロバイダークラスの完全修飾名と見なされます。クラスがロードされてインスタンス化されます。このプロセスが失敗すると、不特定のエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="52c1afd219c316bf40da492c932d1f909b2e0fe8" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;java.nio.channels.spi.SelectorProvider&lt;/code&gt; is defined then it is taken to be the fully-qualified name of a concrete provider class. The class is loaded and instantiated; if this process fails then an unspecified error is thrown.</source>
          <target state="translated">システムプロパティ &lt;code&gt;java.nio.channels.spi.SelectorProvider&lt;/code&gt; が定義されている場合は、具象プロバイダークラスの完全修飾名と見なされます。クラスがロードされてインスタンス化されます。このプロセスが失敗すると、不特定のエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="5093af58ccd31e98a4f37d4eff5d606412ea6ad9" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; is defined then it is taken to be a list of one or more fully-qualified names of concrete provider classes identified by the URI scheme &lt;code&gt;&quot;file&quot;&lt;/code&gt;. Where the property is a list of more than one name then the names are separated by a comma. Each class is loaded, using the system class loader, and instantiated by invoking a one argument constructor whose formal parameter type is &lt;code&gt;FileSystemProvider&lt;/code&gt;. The providers are loaded and instantiated in the order they are listed in the property. If this process fails or a provider's scheme is not equal to &lt;code&gt;&quot;file&quot;&lt;/code&gt; then an unspecified error is thrown. URI schemes are normally compared without regard to case but for the default provider, the scheme is required to be &lt;code&gt;&quot;file&quot;&lt;/code&gt;. The first provider class is instantiated by invoking it with a reference to the system-default provider. The second provider class is instantiated by invoking it with a reference to the first provider instance. The third provider class is instantiated by invoking it with a reference to the second instance, and so on. The last provider to be instantiated becomes the default provider; its &lt;code&gt;
 getFileSystem&lt;/code&gt; method is invoked with the URI &lt;code&gt;&quot;file:///&quot;&lt;/code&gt; to get a reference to the default file system.</source>
          <target state="translated">システムプロパティ &lt;code&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; が定義されている場合、URIスキーム &lt;code&gt;&quot;file&quot;&lt;/code&gt; 識別される具象プロバイダークラスの1つ以上の完全修飾名のリストと見なされます。プロパティが複数の名前のリストである場合、名前はコンマで区切られます。各クラスは、システムクラスローダーを使用してロードされ、仮パラメーターの型が &lt;code&gt;FileSystemProvider&lt;/code&gt; である1つの引数コンストラクターを呼び出すことによってインスタンス化されます。プロバイダーは、プロパティにリストされている順序でロードおよびインスタンス化されます。このプロセスが失敗した場合、またはプロバイダーのスキームが &lt;code&gt;&quot;file&quot;&lt;/code&gt; と等しくない場合その後、不特定のエラーがスローされます。 URIスキームは通常、大文字と小文字を区別せずに比較されますが、デフォルトプロバイダーの場合、スキームは &lt;code&gt;&quot;file&quot;&lt;/code&gt; 必要があります。最初のプロバイダークラスは、システムデフォルトプロバイダーへの参照を使用して呼び出すことによってインスタンス化されます。 2番目のプロバイダークラスは、最初のプロバイダーインスタンスへの参照を使用して呼び出すことによってインスタンス化されます。 3番目のプロバイダークラスは、2番目のインスタンスへの参照を使用して呼び出すことによってインスタンス化されます。インスタンス化される最後のプロバイダーがデフォルトプロバイダーになります。その &lt;code&gt; getFileSystem&lt;/code&gt; メソッドは、デフォルトのファイルシステムへの参照を取得するためにURI &lt;code&gt;&quot;file:///&quot;&lt;/code&gt; 呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f3d062ab7060d9b3ee095375a8de4d829bd4225b" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; is defined then it is taken to be a list of one or more fully-qualified names of concrete provider classes identified by the URI scheme &lt;code&gt;&quot;file&quot;&lt;/code&gt;. Where the property is a list of more than one name then the names are separated by a comma. Each class is loaded, using the system class loader, and instantiated by invoking a one argument constructor whose formal parameter type is &lt;code&gt;FileSystemProvider&lt;/code&gt;. The providers are loaded and instantiated in the order they are listed in the property. If this process fails or a provider's scheme is not equal to &lt;code&gt;&quot;file&quot;&lt;/code&gt; then an unspecified error is thrown. URI schemes are normally compared without regard to case but for the default provider, the scheme is required to be &lt;code&gt;&quot;file&quot;&lt;/code&gt;. The first provider class is instantiated by invoking it with a reference to the system-default provider. The second provider class is instantiated by invoking it with a reference to the first provider instance. The third provider class is instantiated by invoking it with a reference to the second instance, and so on. The last provider to be instantiated becomes the default provider; its &lt;code&gt;getFileSystem&lt;/code&gt; method is invoked with the URI &lt;code&gt;&quot;file:///&quot;&lt;/code&gt; to get a reference to the default file system.</source>
          <target state="translated">システムプロパティ &lt;code&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; が定義されている場合は、URIスキーム &lt;code&gt;&quot;file&quot;&lt;/code&gt; によって識別される具象プロバイダークラスの1つ以上の完全修飾名のリストと見なされます。プロパティが複数の名前のリストである場合、名前はコンマで区切られます。各クラスは、システムクラスローダーを使用して読み込まれ、仮パラメーターのタイプが &lt;code&gt;FileSystemProvider&lt;/code&gt; である1つの引数のコンストラクターを呼び出すことによってインスタンス化されます。プロバイダーは、プロパティにリストされている順序でロードおよびインスタンス化されます。このプロセスが失敗した場合、またはプロバイダーのスキームが &lt;code&gt;&quot;file&quot;&lt;/code&gt; 等しくない場合その後、不特定のエラーがスローされます。 URIスキームは通常、大文字と小文字を区別せずに比較されますが、デフォルトのプロバイダーの場合、スキームは &lt;code&gt;&quot;file&quot;&lt;/code&gt; である必要があります。最初のプロバイダークラスは、システムデフォルトプロバイダーへの参照を指定して呼び出すことでインスタンス化されます。 2番目のプロバイダークラスは、最初のプロバイダーインスタンスへの参照を指定して呼び出すことでインスタンス化されます。 3番目のプロバイダークラスは、2番目のインスタンスへの参照を指定して呼び出すことでインスタンス化されます。インスタンス化される最後のプロバイダーがデフォルトのプロバイダーになります。その &lt;code&gt;getFileSystem&lt;/code&gt; の方法は、URIで呼び出される &lt;code&gt;&quot;file:///&quot;&lt;/code&gt; デフォルトのファイルシステムへの参照を取得します。</target>
        </trans-unit>
        <trans-unit id="46b65db3ac8212073211f72ace037edb568ab174" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;java.rmi.server.RMIClassLoaderSpi&lt;/code&gt; is defined, then if its value equals the string &lt;code&gt;&quot;default&quot;&lt;/code&gt;, the provider instance will be the value returned by an invocation of the &lt;a href=&quot;#getDefaultProviderInstance()&quot;&gt;&lt;code&gt;getDefaultProviderInstance()&lt;/code&gt;&lt;/a&gt; method, and for any other value, if a class named with the value of the property can be loaded by the system class loader (see &lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;&lt;code&gt;ClassLoader.getSystemClassLoader()&lt;/code&gt;&lt;/a&gt;) and that class is assignable to &lt;a href=&quot;rmiclassloaderspi&quot;&gt;&lt;code&gt;RMIClassLoaderSpi&lt;/code&gt;&lt;/a&gt; and has a public no-argument constructor, then that constructor will be invoked to create the provider instance. If the property is defined but any other of those conditions are not true, then an unspecified &lt;code&gt;Error&lt;/code&gt; will be thrown to code that attempts to use &lt;code&gt;RMIClassLoader&lt;/code&gt;, indicating the failure to obtain a provider instance.</source>
          <target state="translated">システムプロパティ &lt;code&gt;java.rmi.server.RMIClassLoaderSpi&lt;/code&gt; が定義されている場合、その値が文字列 &lt;code&gt;&quot;default&quot;&lt;/code&gt; と等しい場合、プロバイダーインスタンスは、&lt;a href=&quot;#getDefaultProviderInstance()&quot;&gt; &lt;code&gt;getDefaultProviderInstance()&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しによって返される値になり、その他の値の場合は、プロパティの値で名前が付けられたクラスは、システムクラスローダーによってロードでき（&lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt; &lt;code&gt;ClassLoader.getSystemClassLoader()&lt;/code&gt; を&lt;/a&gt;参照）、そのクラスは&lt;a href=&quot;rmiclassloaderspi&quot;&gt; &lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; に&lt;/a&gt;割り当て可能であり、パブリックの引数なしコンストラクターがあり、そのコンストラクターが呼び出されて、プロバイダーインスタンス。プロパティが定義されているが、これらの条件のいずれかが真でない場合、使用しようとするコードに不特定の &lt;code&gt;Error&lt;/code&gt; がスローされます &lt;code&gt;RMIClassLoader&lt;/code&gt; は、プロバイダーインスタンスの取得に失敗したことを示します。</target>
        </trans-unit>
        <trans-unit id="3f46166d5f46be810080dff80c8423bab7a1101a" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;java.rmi.server.randomIDs&lt;/code&gt; is defined to equal the string &lt;code&gt;&quot;true&quot;&lt;/code&gt; (case insensitive), then the &lt;a href=&quot;#%3Cinit%3E()&quot;&gt;&lt;code&gt;ObjID()&lt;/code&gt;&lt;/a&gt; constructor will use a cryptographically strong random number generator to choose the object number of the returned &lt;code&gt;ObjID&lt;/code&gt;.</source>
          <target state="translated">システムプロパティ &lt;code&gt;java.rmi.server.randomIDs&lt;/code&gt; が文字列 &lt;code&gt;&quot;true&quot;&lt;/code&gt; （大文字と小文字を区別しない）と等しくなるように定義されている場合、&lt;a href=&quot;#%3Cinit%3E()&quot;&gt; &lt;code&gt;ObjID()&lt;/code&gt; &lt;/a&gt;コンストラクターは暗号的に強力な乱数ジェネレーターを使用して、返される &lt;code&gt;ObjID&lt;/code&gt; のオブジェクト番号を選択します。</target>
        </trans-unit>
        <trans-unit id="8d2fee9a69da418ea608c03885c80bf1ca4b886c" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;java.rmi.server.randomIDs&lt;/code&gt; is defined to equal the string &lt;code&gt;&quot;true&quot;&lt;/code&gt; (case insensitive), then this constructor will use a cryptographically strong random number generator to choose the object number of the returned &lt;code&gt;ObjID&lt;/code&gt;.</source>
          <target state="translated">システムプロパティ &lt;code&gt;java.rmi.server.randomIDs&lt;/code&gt; が文字列 &lt;code&gt;&quot;true&quot;&lt;/code&gt; （大文字と小文字を区別しない）と等しくなるように定義されている場合、このコンストラクターは暗号的に強力な乱数ジェネレーターを使用して、返される &lt;code&gt;ObjID&lt;/code&gt; のオブジェクト番号を選択します。</target>
        </trans-unit>
        <trans-unit id="dd24e048fc15e059868d56f4f568438df6b0caf5" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;java.util.jar.Pack200.Packer&lt;/code&gt; is defined, then the value is taken to be the fully-qualified name of a concrete implementation class, which must implement Packer. This class is loaded and instantiated. If this process fails then an unspecified error is thrown.</source>
          <target state="translated">システムプロパティ &lt;code&gt;java.util.jar.Pack200.Packer&lt;/code&gt; が定義されている場合、値は、Packerを実装する必要がある具象実装クラスの完全修飾名と見なされます。このクラスはロードされ、インスタンス化されます。このプロセスが失敗すると、不特定のエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="45a9607a9147c5f0b3360c97b95442bd171c997a" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;java.util.jar.Pack200.Unpacker&lt;/code&gt; is defined, then the value is taken to be the fully-qualified name of a concrete implementation class, which must implement Unpacker. The class is loaded and instantiated. If this process fails then an unspecified error is thrown.</source>
          <target state="translated">システムプロパティ &lt;code&gt;java.util.jar.Pack200.Unpacker&lt;/code&gt; が定義されている場合、その値は、Unpackerを実装する必要がある具象実装クラスの完全修飾名と見なされます。クラスがロードされ、インスタンス化されます。このプロセスが失敗すると、不特定のエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="e75189cd7136093b1d6f408091c23d0de22eb446" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;java.util.prefs.PreferencesFactory&lt;/code&gt; is defined, then it is taken to be the fully-qualified name of a class implementing the &lt;code&gt;PreferencesFactory&lt;/code&gt; interface. The class is loaded and instantiated; if this process fails then an unspecified error is thrown.</source>
          <target state="translated">システムプロパティ &lt;code&gt;java.util.prefs.PreferencesFactory&lt;/code&gt; が定義されている場合、それは &lt;code&gt;PreferencesFactory&lt;/code&gt; インターフェースを実装するクラスの完全修飾名と見なされます。クラスがロードされてインスタンス化されます。このプロセスが失敗すると、不特定のエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="a7e27f744d6efd52e983b8075a0c2febcea34f65" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;javax.management.builder.initial&lt;/code&gt; is set, the platform &lt;code&gt;MBeanServer&lt;/code&gt; creation will be done by the specified &lt;a href=&quot;../../../javax/management/mbeanserverbuilder&quot;&gt;&lt;code&gt;MBeanServerBuilder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">システムプロパティ &lt;code&gt;javax.management.builder.initial&lt;/code&gt; が設定されている場合、プラットフォーム &lt;code&gt;MBeanServer&lt;/code&gt; の作成は、指定された&lt;a href=&quot;../../../javax/management/mbeanserverbuilder&quot;&gt; &lt;code&gt;MBeanServerBuilder&lt;/code&gt; &lt;/a&gt;によって行われます。</target>
        </trans-unit>
        <trans-unit id="d066e5cdc048829a2f626bea353ff4aba240c230" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;javax.rmi.ssl.client.enabledCipherSuites&lt;/code&gt; is specified, the &lt;a href=&quot;#createSocket(java.lang.String,int)&quot;&gt;&lt;code&gt;createSocket(String,int)&lt;/code&gt;&lt;/a&gt; method will call &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslsocket#setEnabledCipherSuites(java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;SSLSocket.setEnabledCipherSuites(String[])&lt;/code&gt;&lt;/a&gt; before returning the socket. The value of this system property is a string that is a comma-separated list of SSL/TLS cipher suites to enable.</source>
          <target state="translated">システムプロパティ &lt;code&gt;javax.rmi.ssl.client.enabledCipherSuites&lt;/code&gt; が指定されている場合、&lt;a href=&quot;#createSocket(java.lang.String,int)&quot;&gt; &lt;code&gt;createSocket(String,int)&lt;/code&gt; &lt;/a&gt;メソッドはソケットを返す前に&lt;a href=&quot;../../../../java.base/javax/net/ssl/sslsocket#setEnabledCipherSuites(java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;SSLSocket.setEnabledCipherSuites(String[])&lt;/code&gt; &lt;/a&gt;を呼び出します。このシステムプロパティの値は、有効にするSSL / TLS暗号スイートのコンマ区切りのリストである文字列です。</target>
        </trans-unit>
        <trans-unit id="9cdd13fa82f3ac48193dd93680807e448f9971c6" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;javax.rmi.ssl.client.enabledCipherSuites&lt;/code&gt; is specified, this method will call &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslsocket#setEnabledCipherSuites(java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;SSLSocket.setEnabledCipherSuites(String[])&lt;/code&gt;&lt;/a&gt; before returning the socket. The value of this system property is a string that is a comma-separated list of SSL/TLS cipher suites to enable.</source>
          <target state="translated">システムプロパティ &lt;code&gt;javax.rmi.ssl.client.enabledCipherSuites&lt;/code&gt; が指定されている場合、このメソッドはソケットを返す前に&lt;a href=&quot;../../../../java.base/javax/net/ssl/sslsocket#setEnabledCipherSuites(java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;SSLSocket.setEnabledCipherSuites(String[])&lt;/code&gt; &lt;/a&gt;を呼び出します。このシステムプロパティの値は、有効にするSSL / TLS暗号スイートのコンマ区切りのリストである文字列です。</target>
        </trans-unit>
        <trans-unit id="e3beb140976a34dd92e43f005e5cdc896cbf0e59" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;javax.rmi.ssl.client.enabledProtocols&lt;/code&gt; is specified, the &lt;a href=&quot;#createSocket(java.lang.String,int)&quot;&gt;&lt;code&gt;createSocket(String,int)&lt;/code&gt;&lt;/a&gt; method will call &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslsocket#setEnabledProtocols(java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;SSLSocket.setEnabledProtocols(String[])&lt;/code&gt;&lt;/a&gt; before returning the socket. The value of this system property is a string that is a comma-separated list of SSL/TLS protocol versions to enable.</source>
          <target state="translated">システムプロパティ &lt;code&gt;javax.rmi.ssl.client.enabledProtocols&lt;/code&gt; が指定されている場合、&lt;a href=&quot;#createSocket(java.lang.String,int)&quot;&gt; &lt;code&gt;createSocket(String,int)&lt;/code&gt; &lt;/a&gt;メソッドはソケットを返す前に&lt;a href=&quot;../../../../java.base/javax/net/ssl/sslsocket#setEnabledProtocols(java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;SSLSocket.setEnabledProtocols(String[])&lt;/code&gt; &lt;/a&gt;を呼び出します。このシステムプロパティの値は、有効にするSSL / TLSプロトコルバージョンのコンマ区切りのリストである文字列です。</target>
        </trans-unit>
        <trans-unit id="2c1710dbf416654c2b07f01e4c116984afd32006" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;javax.rmi.ssl.client.enabledProtocols&lt;/code&gt; is specified, this method will call &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslsocket#setEnabledProtocols(java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;SSLSocket.setEnabledProtocols(String[])&lt;/code&gt;&lt;/a&gt; before returning the socket. The value of this system property is a string that is a comma-separated list of SSL/TLS protocol versions to enable.</source>
          <target state="translated">システムプロパティ &lt;code&gt;javax.rmi.ssl.client.enabledProtocols&lt;/code&gt; が指定されている場合、このメソッドはソケットを返す前に&lt;a href=&quot;../../../../java.base/javax/net/ssl/sslsocket#setEnabledProtocols(java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;SSLSocket.setEnabledProtocols(String[])&lt;/code&gt; &lt;/a&gt;を呼び出します。このシステムプロパティの値は、有効にするSSL / TLSプロトコルバージョンのコンマ区切りのリストである文字列です。</target>
        </trans-unit>
        <trans-unit id="d37a20fcf5fe426fc5b5a1c3bcefbc944d6b8689" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;javax.sound.midi.Receiver&lt;/code&gt; is defined or it is defined in the file &quot;sound.properties&quot;, it is used to identify the device that provides the default receiver. For details, refer to the &lt;a href=&quot;midisystem&quot;&gt;&lt;code&gt;class description&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">システムプロパティ &lt;code&gt;javax.sound.midi.Receiver&lt;/code&gt; が定義されているか、ファイル「sound.properties」で定義されている場合、デフォルトのレシーバーを提供するデバイスを識別するために使用されます。詳細については、&lt;a href=&quot;midisystem&quot;&gt; &lt;code&gt;class description&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0cde7239c70f83bff85e4440c46d6384691316ad" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;javax.sound.midi.Receiver&lt;/code&gt; is defined or it is defined in the file &quot;sound.properties&quot;, it is used to identify the device that provides the default receiver. For details, refer to the &lt;a href=&quot;midisystem&quot;&gt;&lt;code&gt;class description&lt;/code&gt;&lt;/a&gt;. If a suitable MIDI port is not available, the Receiver is retrieved from an installed synthesizer.</source>
          <target state="translated">システムプロパティ &lt;code&gt;javax.sound.midi.Receiver&lt;/code&gt; が定義されているか、ファイル「sound.properties」で定義されている場合、デフォルトのレシーバーを提供するデバイスを識別するために使用されます。詳細については、&lt;a href=&quot;midisystem&quot;&gt; &lt;code&gt;class description&lt;/code&gt; &lt;/a&gt;参照してください。適切なMIDIポートが利用できない場合、Receiverはインストールされているシンセサイザーから取得されます。</target>
        </trans-unit>
        <trans-unit id="91d3c314661dc26f163d797ffb58967de288f2ac" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;javax.sound.midi.Sequencer&lt;/code&gt; is defined or it is defined in the file &quot;sound.properties&quot;, it is used to identify the default sequencer. For details, refer to the &lt;a href=&quot;midisystem&quot;&gt;&lt;code&gt;class description&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">システムプロパティ &lt;code&gt;javax.sound.midi.Sequencer&lt;/code&gt; が定義されているか、ファイル「sound.properties」で定義されている場合、デフォルトのシーケンサーを識別するために使用されます。詳細については、&lt;a href=&quot;midisystem&quot;&gt; &lt;code&gt;class description&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="00dcdd9d0bce1154db11492279afceeca3e08d7a" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;javax.sound.midi.Synthesizer&lt;/code&gt; is defined or it is defined in the file &quot;sound.properties&quot;, it is used to identify the default synthesizer. For details, refer to the &lt;a href=&quot;midisystem&quot;&gt;&lt;code&gt;class description&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">システムプロパティ &lt;code&gt;javax.sound.midi.Synthesizer&lt;/code&gt; が定義されているか、「sound.properties」ファイルで定義されている場合、デフォルトのシンセサイザを識別するために使用されます。詳細については、&lt;a href=&quot;midisystem&quot;&gt; &lt;code&gt;class description&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="30df19d74bec068b077f43c95c9174eacf908696" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;javax.sound.midi.Transmitter&lt;/code&gt; is defined or it is defined in the file &quot;sound.properties&quot;, it is used to identify the device that provides the default transmitter. For details, refer to the &lt;a href=&quot;midisystem&quot;&gt;&lt;code&gt;class description&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">システムプロパティ &lt;code&gt;javax.sound.midi.Transmitter&lt;/code&gt; が定義されているか、「sound.properties」ファイルで定義されている場合、デフォルトのトランスミッタを提供するデバイスを識別するために使用されます。詳細については、&lt;a href=&quot;midisystem&quot;&gt; &lt;code&gt;class description&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2db720e9cdab4ebfc9f02a35fbd8f738bb2171b1" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;javax.sound.sampled.Clip&lt;/code&gt; is defined or it is defined in the file &quot;sound.properties&quot;, it is used to retrieve the default clip. For details, refer to the &lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;class description&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">システムプロパティ &lt;code&gt;javax.sound.sampled.Clip&lt;/code&gt; が定義されているか、「sound.properties」ファイルで定義されている場合、デフォルトのクリップを取得するために使用されます。詳細については、&lt;a href=&quot;audiosystem&quot;&gt; &lt;code&gt;class description&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="878cc5542428544d5bac13085b41e0430d054903" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;javax.sound.sampled.SourceDataLine&lt;/code&gt; is defined or it is defined in the file &quot;sound.properties&quot;, it is used to retrieve the default source data line. For details, refer to the &lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;class description&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">システムプロパティ &lt;code&gt;javax.sound.sampled.SourceDataLine&lt;/code&gt; が定義されているか、ファイル &quot;sound.properties&quot;で定義されている場合、デフォルトのソースデータ行を取得するために使用されます。詳細については、&lt;a href=&quot;audiosystem&quot;&gt; &lt;code&gt;class description&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b8d607cde38af381ba0dfdab64a53303e271b212" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;javax.sound.sampled.TargetDataLine&lt;/code&gt; is defined or it is defined in the file &quot;sound.properties&quot;, it is used to retrieve the default target data line. For details, refer to the &lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;class description&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">システムプロパティ &lt;code&gt;javax.sound.sampled.TargetDataLine&lt;/code&gt; が定義されているか、ファイル &quot;sound.properties&quot;で定義されている場合、デフォルトのターゲットデータ行を取得するために使用されます。詳細については、&lt;a href=&quot;audiosystem&quot;&gt; &lt;code&gt;class description&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d07239e369381a0fb6e04b89573dbf0f8758c57d" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;org.xml.sax.driver&lt;/code&gt; has a value, that is used as an XMLReader class name.</source>
          <target state="translated">システムプロパティ &lt;code&gt;org.xml.sax.driver&lt;/code&gt; に値がある場合、それはXMLReaderクラス名として使用されます。</target>
        </trans-unit>
        <trans-unit id="7eb7d836f2f43aa70bd878289c523ee9226c1901" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;suppressSwingDropSupport&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; (the default) and the current drop target on this component is either &lt;code&gt;null&lt;/code&gt; or not a user-set drop target, this method will change the drop target as follows: If &lt;code&gt;newHandler&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; it will clear the drop target. If not &lt;code&gt;null&lt;/code&gt; it will install a new &lt;code&gt;DropTarget&lt;/code&gt;.</source>
          <target state="translated">システムプロパティ &lt;code&gt;suppressSwingDropSupport&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; （デフォルト）で、このコンポーネントの現在のドロップターゲットが &lt;code&gt;null&lt;/code&gt; であるか、ユーザーが設定したドロップターゲットではない場合、このメソッドはドロップターゲットを次のように変更します &lt;code&gt;newHandler&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、ドロップをクリアします。目標。 &lt;code&gt;null&lt;/code&gt; でない場合は、新しい &lt;code&gt;DropTarget&lt;/code&gt; がインストールされます。</target>
        </trans-unit>
        <trans-unit id="d7708124db0ebabf9cd252ce976d692ad91505f5" translate="yes" xml:space="preserve">
          <source>If the system property &lt;code&gt;swing.defaultlaf&lt;/code&gt; is &lt;code&gt;non-null&lt;/code&gt;, use its value as the default look and feel class name.</source>
          <target state="translated">システムプロパティ &lt;code&gt;swing.defaultlaf&lt;/code&gt; が &lt;code&gt;non-null&lt;/code&gt; 場合は、その値をデフォルトのルックアンドフィールクラス名として使用します。</target>
        </trans-unit>
        <trans-unit id="8ff71830cbe5c28d3e3792ef57a69165cfffa083" translate="yes" xml:space="preserve">
          <source>If the system property is not set or the getInstance() call fails for any reason, the system defaults to an implementation specific default type and TerminalFactory.</source>
          <target state="translated">システムプロパティが設定されていないか、何らかの理由でgetInstance()の呼び出しに失敗した場合、システムは実装固有のデフォルト型とTerminalFactoryをデフォルトとします。</target>
        </trans-unit>
        <trans-unit id="de8593fcec2e6dbf96521d87b6c0f3273e22eb58" translate="yes" xml:space="preserve">
          <source>If the system property specified by &lt;a href=&quot;#DATATYPEFACTORY_PROPERTY&quot;&gt;&lt;code&gt;DATATYPEFACTORY_PROPERTY&lt;/code&gt;&lt;/a&gt;, &quot;&lt;code&gt;javax.xml.datatype.DatatypeFactory&lt;/code&gt;&quot;, exists, a class with the name of the property value is instantiated. Any Exception thrown during the instantiation process is wrapped as a &lt;a href=&quot;datatypeconfigurationexception&quot;&gt;&lt;code&gt;DatatypeConfigurationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#DATATYPEFACTORY_PROPERTY&quot;&gt; &lt;code&gt;DATATYPEFACTORY_PROPERTY&lt;/code&gt; &lt;/a&gt;で指定されたシステムプロパティ「 &lt;code&gt;javax.xml.datatype.DatatypeFactory&lt;/code&gt; 」が存在する場合、プロパティ値の名前を持つクラスがインスタンス化されます。インスタンス化プロセス中にスローされた例外はすべて、&lt;a href=&quot;datatypeconfigurationexception&quot;&gt; &lt;code&gt;DatatypeConfigurationException&lt;/code&gt; &lt;/a&gt;としてラップされます。</target>
        </trans-unit>
        <trans-unit id="0de1cc0e4dda5fcc7e4aa252a0cbf64fbed0f628" translate="yes" xml:space="preserve">
          <source>If the target VM is disconnected during the invoke (for example, through &lt;a href=&quot;virtualmachine#dispose()&quot;&gt;&lt;code&gt;VirtualMachine.dispose()&lt;/code&gt;&lt;/a&gt;) the method invocation continues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8886f362ca8263086eee9b95c52f35ec0d45cf61" translate="yes" xml:space="preserve">
          <source>If the target VM terminates before the disconnection, this event will be preceded by a &lt;a href=&quot;vmdeathevent&quot;&gt;&lt;code&gt;VMDeathEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af05deaf58fe154a4b75ce321753672bae18f99" translate="yes" xml:space="preserve">
          <source>If the target file exists, then the target file is replaced if it is not a non-empty directory. If the target file exists and is a symbolic link, then the symbolic link itself, not the target of the link, is replaced.</source>
          <target state="translated">対象のファイルが存在する場合、対象のファイルが空でないディレクトリでない場合、対象のファイルが置き換えられます。ターゲットファイルが存在し、シンボリックリンクであれば、リンクのターゲットではなくシンボリックリンク自体が置き換えられます。</target>
        </trans-unit>
        <trans-unit id="ac457e75b3f1b21e3f75382a66191d55b4a52e0f" translate="yes" xml:space="preserve">
          <source>If the target is _parent, then it deletes the parent element, which is a &amp;lt;FRAMESET&amp;gt; element, and inserts a new &amp;lt;FRAME&amp;gt; element, and sets its &lt;code&gt;HTML.Attribute.SRC&lt;/code&gt; attribute to have a value equal to the destination URL and fire a &lt;code&gt;RemovedUpdate&lt;/code&gt; and &lt;code&gt;InsertUpdate&lt;/code&gt;.</source>
          <target state="translated">ターゲットが_parentの場合、&amp;lt;FRAMESET&amp;gt;要素である親要素を削除し、新しい&amp;lt;FRAME&amp;gt;要素を挿入し、その &lt;code&gt;HTML.Attribute.SRC&lt;/code&gt; 属性を宛先URLと等しい値に設定して起動します &lt;code&gt;RemovedUpdate&lt;/code&gt; と &lt;code&gt;InsertUpdate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf1de5041cbc9489101a1efbb3aa93f8e3747f64" translate="yes" xml:space="preserve">
          <source>If the target is _top, this method does nothing. In the implementation of the view for a frame, namely the &lt;code&gt;FrameView&lt;/code&gt;, the processing of _top is handled. Given that _top implies replacing the entire document, it made sense to handle this outside of the document that it will replace.</source>
          <target state="translated">ターゲットが_topの場合、このメソッドは何もしません。フレームのビュー、つまり &lt;code&gt;FrameView&lt;/code&gt; の実装では、_topの処理が処理されます。_topはドキュメント全体を置き換えることを意味するため、置き換えるドキュメントの外部でこれを処理することは理にかなっています。</target>
        </trans-unit>
        <trans-unit id="05419b4ed8480b175c0a67be127a4f47601c6536" translate="yes" xml:space="preserve">
          <source>If the target is a named frame, then the element hierarchy is searched for an element with a name equal to the target, its &lt;code&gt;HTML.Attribute.SRC&lt;/code&gt; attribute is updated and a &lt;code&gt;ChangedUpdate&lt;/code&gt; event is fired.</source>
          <target state="translated">ターゲットが名前付きフレームの場合、要素階層でターゲットと同じ名前の要素が検索され、その &lt;code&gt;HTML.Attribute.SRC&lt;/code&gt; 属性が更新され、 &lt;code&gt;ChangedUpdate&lt;/code&gt; イベントが発生します。</target>
        </trans-unit>
        <trans-unit id="3c180e88e82b133d4c219bf7bc995901410956a4" translate="yes" xml:space="preserve">
          <source>If the target method handle consumes no arguments besides than the result (if any) of the filter &lt;code&gt;coll&lt;/code&gt;, then &lt;code&gt;collectArguments(mh, 0, coll)&lt;/code&gt; is equivalent to &lt;code&gt;filterReturnValue(coll, mh)&lt;/code&gt;. If the filter method handle &lt;code&gt;coll&lt;/code&gt; consumes one argument and produces a non-void result, then &lt;code&gt;collectArguments(mh, N, coll)&lt;/code&gt; is equivalent to &lt;code&gt;filterArguments(mh, N, coll)&lt;/code&gt;. Other equivalences are possible but would require argument permutation.</source>
          <target state="translated">ターゲットメソッドハンドルがフィルター &lt;code&gt;coll&lt;/code&gt; の結果（存在する場合）以外に引数を消費しない場合、 &lt;code&gt;collectArguments(mh, 0, coll)&lt;/code&gt; は &lt;code&gt;filterReturnValue(coll, mh)&lt;/code&gt; と同等です。フィルタメソッドハンドル場合 &lt;code&gt;coll&lt;/code&gt; 一つの引数を消費し、非ボイド結果を生成し、次いで &lt;code&gt;collectArguments(mh, N, coll)&lt;/code&gt; と等価である &lt;code&gt;filterArguments(mh, N, coll)&lt;/code&gt; 。他の同値も可能ですが、引数の置換が必要になります。</target>
        </trans-unit>
        <trans-unit id="458e499fec0b734951e6d53ad84671bd6e68d6c5" translate="yes" xml:space="preserve">
          <source>If the target method handle has variable arity, and the argument list is longer than that arity, the excess arguments, starting at the position of the trailing array argument, will be gathered (if possible, as if by &lt;code&gt;asType&lt;/code&gt; conversions) into an array of the appropriate type, and invocation will proceed on the shortened argument list. In this way, &lt;em&gt;jumbo argument lists&lt;/em&gt; which would spread into more than 254 slots can still be processed uniformly.</source>
          <target state="translated">ターゲットメソッドハンドルに可変アリティがあり、引数リストがそのアリティよりも長い場合、末尾の配列引数の位置から始まる余分な引数は、（可能であれば、 &lt;code&gt;asType&lt;/code&gt; 変換によるかのように）次の配列に収集されます。適切なタイプ、および呼び出しは短縮された引数リストで続行されます。このようにして、254を超えるスロットに広がる&lt;em&gt;ジャンボ引数リスト&lt;/em&gt;を引き続き均一に処理できます。</target>
        </trans-unit>
        <trans-unit id="9a6410dfb8cfd393874164170a840502005c25ad" translate="yes" xml:space="preserve">
          <source>If the target returns a value, the filter must accept that value as its only argument. If the target returns void, the filter must accept no arguments.</source>
          <target state="translated">ターゲットが値を返す場合、フィルタはその値を唯一の引数として受け入れなければなりません。ターゲットが void を返す場合は、フィルタは引数を受け付けません。</target>
        </trans-unit>
        <trans-unit id="933efa6315f31837fd252efc9f236faa4bf2d497" translate="yes" xml:space="preserve">
          <source>If the target text component is specified as the source of the ActionEvent and there is a command string, the command string will be interpreted as an integer that should be one of the legal values for the &lt;code&gt;StyleConstants.Alignment&lt;/code&gt; attribute.</source>
          <target state="translated">ターゲットテキストコンポーネントがActionEventのソースとして指定されていて、コマンド文字列がある場合、コマンド文字列は、 &lt;code&gt;StyleConstants.Alignment&lt;/code&gt; 属性の有効な値の1つである必要がある整数として解釈されます。</target>
        </trans-unit>
        <trans-unit id="ad7689e60ae1c9939383833d9772f90e200fa26d" translate="yes" xml:space="preserve">
          <source>If the target text component is specified as the source of the ActionEvent and there is a command string, the command string will be interpreted as the foreground color. It will be interpreted by called &lt;code&gt;Color.decode&lt;/code&gt;, and should therefore be legal input for that method.</source>
          <target state="translated">ターゲットテキストコンポーネントがActionEventのソースとして指定されていて、コマンド文字列がある場合、コマンド文字列は前景色として解釈されます。これは、呼び出された &lt;code&gt;Color.decode&lt;/code&gt; によって解釈されるため、そのメソッドの正当な入力である必要があります。</target>
        </trans-unit>
        <trans-unit id="60ff5ddff7c5d899dfe402e4472a1b9b2a332d25" translate="yes" xml:space="preserve">
          <source>If the temporal object does not contain a date, but does contain one or more &lt;code&gt;ChronoField&lt;/code&gt; date fields, then a &lt;code&gt;DateTimeException&lt;/code&gt; is thrown. In all other cases, the override chronology is added to the temporal, replacing any previous chronology, but without changing the date/time.</source>
          <target state="translated">一時オブジェクトに日付が含まれていないが、1つ以上の &lt;code&gt;ChronoField&lt;/code&gt; 日付フィールドが含まれている場合、 &lt;code&gt;DateTimeException&lt;/code&gt; がスローされます。他のすべての場合では、オーバーライドの年表が時間に追加され、以前の年表が置き換えられますが、日付/時刻は変更されません。</target>
        </trans-unit>
        <trans-unit id="dd85e14ed75c47c84beea3f122d891fc9308e690" translate="yes" xml:space="preserve">
          <source>If the temporal object does not contain an instant, but does contain an offset then an additional check is made. If the normalized override zone is an offset that differs from the offset of the temporal, then a &lt;code&gt;DateTimeException&lt;/code&gt; is thrown. In all other cases, the override zone is added to the temporal, replacing any previous zone, but without changing the date/time.</source>
          <target state="translated">一時オブジェクトにインスタントが含まれておらず、オフセットが含まれている場合は、追加のチェックが行われます。正規化されたオーバーライドゾーンがテンポラルのオフセットとは異なるオフセットである場合、 &lt;code&gt;DateTimeException&lt;/code&gt; がスローされます。それ以外の場合はすべて、オーバーライドゾーンがテンポラルに追加され、以前のゾーンが置き換えられますが、日付/時刻は変更されません。</target>
        </trans-unit>
        <trans-unit id="9c09abaae8508d70028ba67cefa61277b54360a6" translate="yes" xml:space="preserve">
          <source>If the thread argument is a system thread (belongs to the thread group with a &lt;code&gt;null&lt;/code&gt; parent) then this method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;modifyThread&quot;)&lt;/code&gt; permission. If the thread argument is</source>
          <target state="translated">スレッド引数がシステムスレッド（親が &lt;code&gt;null&lt;/code&gt; のスレッドグループに属する）の場合、このメソッドは、 &lt;code&gt;RuntimePermission(&quot;modifyThread&quot;)&lt;/code&gt; 権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。スレッド引数が</target>
        </trans-unit>
        <trans-unit id="956a4caf473783d2c99b96d529421cc001582508" translate="yes" xml:space="preserve">
          <source>If the thread group argument is the system thread group ( has a &lt;code&gt;null&lt;/code&gt; parent) then this method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;modifyThreadGroup&quot;)&lt;/code&gt; permission. If the thread group argument is</source>
          <target state="translated">スレッドグループ引数がシステムスレッドグループである &lt;code&gt;RuntimePermission(&quot;modifyThreadGroup&quot;)&lt;/code&gt; 親が &lt;code&gt;null&lt;/code&gt; の場合）、このメソッドは、RuntimePermission（ &quot;modifyThreadGroup&quot;）権限で &lt;code&gt;checkPermission&lt;/code&gt; を呼び出します。スレッドグループの引数が</target>
        </trans-unit>
        <trans-unit id="2851f30724641ecca099288cb8621aaa00615fd6" translate="yes" xml:space="preserve">
          <source>If the thread is alive but suspended, it is resumed and is permitted to make progress in its execution.</source>
          <target state="translated">スレッドが生きているが中断されている場合、そのスレッドは再開され、実行の進行が許可されます。</target>
        </trans-unit>
        <trans-unit id="a8d129983d6e8dc28983c9eb2cd579ed898cf687" translate="yes" xml:space="preserve">
          <source>If the thread is alive, it is suspended and makes no further progress unless and until it is resumed.</source>
          <target state="translated">スレッドが生きていれば、そのスレッドは中断され、再開されない限り、それ以上の進展はありません。</target>
        </trans-unit>
        <trans-unit id="95f23b0ab1d9ecd54f0d7d1cfdcbc8a705f2c602" translate="yes" xml:space="preserve">
          <source>If the thread of the specified ID is not alive or does not exist, this method returns &lt;code&gt;-1&lt;/code&gt;. If CPU time measurement is disabled, this method returns &lt;code&gt;-1&lt;/code&gt;. A thread is alive if it has been started and has not yet died.</source>
          <target state="translated">指定されたIDのスレッドが有効でないか存在しない場合、このメソッドは &lt;code&gt;-1&lt;/code&gt; を返します。CPU時間の測定が無効になっている場合、このメソッドは &lt;code&gt;-1&lt;/code&gt; を返します。スレッドが開始されていて、まだ死んでいない場合、そのスレッドは生きています。</target>
        </trans-unit>
        <trans-unit id="2f1597e2b1b784b5b3de28848e78b8e4d92ff74b" translate="yes" xml:space="preserve">
          <source>If the thread with the specified ID is not alive or does not exist, this method returns &lt;code&gt;-1&lt;/code&gt;. If thread memory allocation measurement is disabled, this method returns &lt;code&gt;-1&lt;/code&gt;. A thread is alive if it has been started and has not yet died.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97aef73764a8b235d11df488cc792228726de005" translate="yes" xml:space="preserve">
          <source>If the time '23:59:60' is received, then a simple conversion is applied, replacing the second-of-minute of 60 with 59. This query can be used on the parse result to determine if the leap-second adjustment was made. The query will return &lt;code&gt;true&lt;/code&gt; if it did adjust to remove the leap-second, and &lt;code&gt;false&lt;/code&gt; if not. Note that applying a leap-second smoothing mechanism, such as UTC-SLS, is the responsibility of the application, as follows:</source>
          <target state="translated">時刻「23:59:60」を受け取った場合は、単純な変換が適用され、60分の秒が59に置き換えられます。このクエリを解析結果で使用して、うるう秒の調整が行われたかどうかを判断できます製。クエリが返され &lt;code&gt;true&lt;/code&gt; それは、うるう秒を取り除くために調整し、なかった場合 &lt;code&gt;false&lt;/code&gt; の場合ではありません。以下のように、UTC-SLSなどのうるう秒平滑化メカニズムの適用は、アプリケーションの責任であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6ae6878cfd3b1d0ceb5a94fe0301dc8e364dcc4f" translate="yes" xml:space="preserve">
          <source>If the timeout limit is set to 't' seconds, a session exceeds the timeout limit 't' seconds after its creation time. When the timeout limit is exceeded for a session, the &lt;code&gt;SSLSession&lt;/code&gt; object is invalidated and future connections cannot resume or rejoin the session. A check for sessions exceeding the timeout is made immediately whenever the timeout limit is changed for this &lt;code&gt;SSLSessionContext&lt;/code&gt;.</source>
          <target state="translated">タイムアウト制限が「t」秒に設定されている場合、セッションはその作成時間のタイムアウト制限「t」秒を超えます。セッションのタイムアウト制限を超えると、 &lt;code&gt;SSLSession&lt;/code&gt; オブジェクトは無効になり、今後の接続でセッションを再開したり、セッションに再参加したりすることはできません。この &lt;code&gt;SSLSessionContext&lt;/code&gt; のタイムアウト制限が変更されるたびに、タイムアウトを超えるセッションのチェックがすぐに行われます。</target>
        </trans-unit>
        <trans-unit id="ad1adddf8356c433278ef7cd10d12a5f2bd6c761" translate="yes" xml:space="preserve">
          <source>If the timeout limit is set to 't' seconds, a session exceeds the timeout limit 't' seconds after its creation time. When the timeout limit is exceeded for a session, the &lt;code&gt;SSLSession&lt;/code&gt; object is invalidated and future connections cannot resume or rejoin the session. A check for sessions exceeding the timeout limit is made immediately whenever the timeout limit is changed for this &lt;code&gt;SSLSessionContext&lt;/code&gt;.</source>
          <target state="translated">タイムアウト制限が「t」秒に設定されている場合、セッションはその作成時間のタイムアウト制限「t」秒を超えます。セッションのタイムアウト制限を超えると、 &lt;code&gt;SSLSession&lt;/code&gt; オブジェクトは無効になり、今後の接続でセッションを再開したり、セッションに再参加したりすることはできません。この &lt;code&gt;SSLSessionContext&lt;/code&gt; のタイムアウト制限が変更されるたびに、タイムアウト制限を超えるセッションのチェックがすぐに行われます。</target>
        </trans-unit>
        <trans-unit id="44775d676f01ccf28f57333e6fb89f1c12f0cfd6" translate="yes" xml:space="preserve">
          <source>If the timer notification to be inserted has a date that is before the current date, the method behaves as if the specified date were the current date and the notification is delivered immediately.</source>
          <target state="translated">挿入するタイマー通知に現在の日付より前の日付がある場合、このメソッドは、指定された日付が現在の日付であるかのように動作し、通知は直ちに配信されます。</target>
        </trans-unit>
        <trans-unit id="8056b6ccedf3aca7fb9d63268e271ee88e090cd9" translate="yes" xml:space="preserve">
          <source>If the timer notification to be inserted has a date that is before the current date, the method behaves as if the specified date were the current date.</source>
          <target state="translated">挿入するタイマー通知に現在の日付よりも前の日付がある場合、このメソッドは、指定した日付が現在の日付であるかのように動作します。</target>
        </trans-unit>
        <trans-unit id="f7ed1fef67b3c31fe3734b8ae38aa892bb880b72" translate="yes" xml:space="preserve">
          <source>If the timer notification to be inserted has a date that is before the current date, the method behaves as if the specified date were the current date. The first notification is delivered immediately and the subsequent ones are spaced as specified by the period parameter.</source>
          <target state="translated">挿入されるタイマー通知に現在の日付よりも前の日付がある場合、このメソッドは、指定された日付が現在の日付であるかのように動作します。最初の通知はすぐに配信され、その後の通知は期間パラメータで指定された間隔で配信されます。</target>
        </trans-unit>
        <trans-unit id="38b2e2e16267baf4e1e54405bd70137ca888e8ed" translate="yes" xml:space="preserve">
          <source>If the timer's task execution thread terminates unexpectedly, for example, because its &lt;code&gt;stop&lt;/code&gt; method is invoked, any further attempt to schedule a task on the timer will result in an &lt;code&gt;IllegalStateException&lt;/code&gt;, as if the timer's &lt;code&gt;cancel&lt;/code&gt; method had been invoked.</source>
          <target state="translated">たとえば、 &lt;code&gt;stop&lt;/code&gt; メソッドが呼び出されたために、タイマーのタスク実行スレッドが予期せず終了した場合、タイマーでタスクをスケジュールしようとすると、タイマーの &lt;code&gt;cancel&lt;/code&gt; メソッドが呼び出されたかのように &lt;code&gt;IllegalStateException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="ac3591693d15d3e4209a0731ba617c073e32bb40" translate="yes" xml:space="preserve">
          <source>If the transformer throws an exception (which it doesn't catch), subsequent transformers will still be called and the load, redefine or retransform will still be attempted. Thus, throwing an exception has the same effect as returning &lt;code&gt;null&lt;/code&gt;. To prevent unexpected behavior when unchecked exceptions are generated in transformer code, a transformer can catch &lt;code&gt;Throwable&lt;/code&gt;. If the transformer believes the &lt;code&gt;classFileBuffer&lt;/code&gt; does not represent a validly formatted class file, it should throw an &lt;code&gt;IllegalClassFormatException&lt;/code&gt;; while this has the same effect as returning null. it facilitates the logging or debugging of format corruptions.</source>
          <target state="translated">トランスフォーマーが（キャッチしない）例外をスローした場合でも、後続のトランスフォーマーが呼び出され、引き続きロード、再定義、または再変換が試行されます。したがって、例外をスローすると、 &lt;code&gt;null&lt;/code&gt; を返すのと同じ効果があります。未確認の例外がトランスフォーマーのコードで生成されたときの予期しない動作を防ぐために、トランスフォーマーは &lt;code&gt;Throwable&lt;/code&gt; をキャッチできます。トランスフォーマーは、 &lt;code&gt;classFileBuffer&lt;/code&gt; が有効にフォーマットされたクラスファイルを表していないと &lt;code&gt;IllegalClassFormatException&lt;/code&gt; 場合、IllegalClassFormatExceptionをスローする必要があります。これはnullを返すのと同じ効果があります。これは、フォーマットの破損のロギングまたはデバッグを容易にします。</target>
        </trans-unit>
        <trans-unit id="b2202f39f213e519d8a6a914b9451df18b3b6cd6" translate="yes" xml:space="preserve">
          <source>If the traversal key has not been explicitly set for this Window, then this Window's parent's traversal key is returned. If the traversal key has not been explicitly set for any of this Window's ancestors, then the current KeyboardFocusManager's default traversal key is returned.</source>
          <target state="translated">このウィンドウに明示的にトラバーサル キーが設定されていない場合、このウィンドウの親のトラバーサル キーが返されます。この Window の先祖に明示的にトラバーサル キーが設定されていない場合は、現在の KeyboardFocusManager のデフォルトのトラバーサル キーが返されます。</target>
        </trans-unit>
        <trans-unit id="10849c037dd8bc1c2fc1c741b858e266697ece21" translate="yes" xml:space="preserve">
          <source>If the two arrays share a common prefix then the lexicographic comparison is the result of comparing two elements of type &lt;code&gt;T&lt;/code&gt; at an index &lt;code&gt;i&lt;/code&gt; within the respective arrays that is the prefix length, as if by:</source>
          <target state="translated">2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、次のように、プレフィックス長であるそれぞれの配列内のインデックス &lt;code&gt;i&lt;/code&gt; でタイプ &lt;code&gt;T&lt;/code&gt; の2つの要素を比較した結果です。</target>
        </trans-unit>
        <trans-unit id="b155792f2e510e17ec8d253fc3a0fb59ca79f8dd" translate="yes" xml:space="preserve">
          <source>If the two arrays share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/boolean#compare(boolean,boolean)&quot;&gt;&lt;code&gt;Boolean.compare(boolean, boolean)&lt;/code&gt;&lt;/a&gt;, at an index within the respective arrays that is the prefix length. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two array lengths. (See &lt;a href=&quot;#mismatch(boolean%5B%5D,boolean%5B%5D)&quot;&gt;&lt;code&gt;mismatch(boolean[], boolean[])&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">2つの配列が共通の接頭辞を共有する場合、辞書式比較は、接頭辞の長さであるそれぞれの配列内のインデックスで、&lt;a href=&quot;../lang/boolean#compare(boolean,boolean)&quot;&gt; &lt;code&gt;Boolean.compare(boolean, boolean)&lt;/code&gt; &lt;/a&gt;ように2つの要素を比較した結果です。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの配列の長さを比較した結果です。 （一般的で適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(boolean%5B%5D,boolean%5B%5D)&quot;&gt; &lt;code&gt;mismatch(boolean[], boolean[])&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="57243fdb8f978c78fb76c986d30f96d7bf6d4774" translate="yes" xml:space="preserve">
          <source>If the two arrays share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/byte#compare(byte,byte)&quot;&gt;&lt;code&gt;Byte.compare(byte, byte)&lt;/code&gt;&lt;/a&gt;, at an index within the respective arrays that is the prefix length. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two array lengths. (See &lt;a href=&quot;#mismatch(byte%5B%5D,byte%5B%5D)&quot;&gt;&lt;code&gt;mismatch(byte[], byte[])&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">2つの配列が共通のプレフィックスを共有している場合、辞書式の比較は、&lt;a href=&quot;../lang/byte#compare(byte,byte)&quot;&gt; &lt;code&gt;Byte.compare(byte, byte)&lt;/code&gt; &lt;/a&gt;に、プレフィックスの長さであるそれぞれの配列内のインデックスで2つの要素を比較した結果です。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの配列の長さを比較した結果です。 （一般的で適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(byte%5B%5D,byte%5B%5D)&quot;&gt; &lt;code&gt;mismatch(byte[], byte[])&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="efbf4a94c94fc3222d7e00ab8ab0707b70f1d4e9" translate="yes" xml:space="preserve">
          <source>If the two arrays share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/byte#compareUnsigned(byte,byte)&quot;&gt;&lt;code&gt;Byte.compareUnsigned(byte, byte)&lt;/code&gt;&lt;/a&gt;, at an index within the respective arrays that is the prefix length. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two array lengths. (See &lt;a href=&quot;#mismatch(byte%5B%5D,byte%5B%5D)&quot;&gt;&lt;code&gt;mismatch(byte[], byte[])&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">2つの配列が共通のプレフィックスを共有する場合、辞書式の比較は、&lt;a href=&quot;../lang/byte#compareUnsigned(byte,byte)&quot;&gt; &lt;code&gt;Byte.compareUnsigned(byte, byte)&lt;/code&gt; &lt;/a&gt;に、プレフィックスの長さであるそれぞれの配列内のインデックスで2つの要素を比較した結果です。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの配列の長さを比較した結果です。 （一般的で適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(byte%5B%5D,byte%5B%5D)&quot;&gt; &lt;code&gt;mismatch(byte[], byte[])&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="4e8abaf672daa90f27c4a28744cf3bffbed58f1b" translate="yes" xml:space="preserve">
          <source>If the two arrays share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/character#compare(char,char)&quot;&gt;&lt;code&gt;Character.compare(char, char)&lt;/code&gt;&lt;/a&gt;, at an index within the respective arrays that is the prefix length. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two array lengths. (See &lt;a href=&quot;#mismatch(char%5B%5D,char%5B%5D)&quot;&gt;&lt;code&gt;mismatch(char[], char[])&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">2つの配列が共通のプレフィックスを共有している場合、辞書式比較は、&lt;a href=&quot;../lang/character#compare(char,char)&quot;&gt; &lt;code&gt;Character.compare(char, char)&lt;/code&gt; &lt;/a&gt;に、プレフィックスの長さであるそれぞれの配列内のインデックスで2つの要素を比較した結果です。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの配列の長さを比較した結果です。 （一般的で適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(char%5B%5D,char%5B%5D)&quot;&gt; &lt;code&gt;mismatch(char[], char[])&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="a1fa6e3b313e74e85610c3d66b8ff693e012d72d" translate="yes" xml:space="preserve">
          <source>If the two arrays share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/double#compare(double,double)&quot;&gt;&lt;code&gt;Double.compare(double, double)&lt;/code&gt;&lt;/a&gt;, at an index within the respective arrays that is the prefix length. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two array lengths. (See &lt;a href=&quot;#mismatch(double%5B%5D,double%5B%5D)&quot;&gt;&lt;code&gt;mismatch(double[], double[])&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">2つの配列が共通の接頭辞を共有する場合、辞書式比較は、接頭辞の長さであるそれぞれの配列内のインデックスで、&lt;a href=&quot;../lang/double#compare(double,double)&quot;&gt; &lt;code&gt;Double.compare(double, double)&lt;/code&gt; &lt;/a&gt;ように2つの要素を比較した結果です。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの配列の長さを比較した結果です。 （一般的で適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(double%5B%5D,double%5B%5D)&quot;&gt; &lt;code&gt;mismatch(double[], double[])&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="1c4f63f453b8509aa4d20ab07035dc58ee1cb446" translate="yes" xml:space="preserve">
          <source>If the two arrays share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/float#compare(float,float)&quot;&gt;&lt;code&gt;Float.compare(float, float)&lt;/code&gt;&lt;/a&gt;, at an index within the respective arrays that is the prefix length. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two array lengths. (See &lt;a href=&quot;#mismatch(float%5B%5D,float%5B%5D)&quot;&gt;&lt;code&gt;mismatch(float[], float[])&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">2つの配列が共通のプレフィックスを共有している場合、辞書式比較は、&lt;a href=&quot;../lang/float#compare(float,float)&quot;&gt; &lt;code&gt;Float.compare(float, float)&lt;/code&gt; &lt;/a&gt;に、プレフィックスの長さであるそれぞれの配列内のインデックスで2つの要素を比較した結果です。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの配列の長さを比較した結果です。 （一般的で適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(float%5B%5D,float%5B%5D)&quot;&gt; &lt;code&gt;mismatch(float[], float[])&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="3a6dc406fb7fd94c09e0c48b3ba97eeaadc82d2f" translate="yes" xml:space="preserve">
          <source>If the two arrays share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/integer#compare(int,int)&quot;&gt;&lt;code&gt;Integer.compare(int, int)&lt;/code&gt;&lt;/a&gt;, at an index within the respective arrays that is the prefix length. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two array lengths. (See &lt;a href=&quot;#mismatch(int%5B%5D,int%5B%5D)&quot;&gt;&lt;code&gt;mismatch(int[], int[])&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、プレフィックスの長さであるそれぞれの配列内のインデックスで、&lt;a href=&quot;../lang/integer#compare(int,int)&quot;&gt; &lt;code&gt;Integer.compare(int, int)&lt;/code&gt; &lt;/a&gt;ように2つの要素を比較した結果です。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの配列の長さを比較した結果です。 （一般的で適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(int%5B%5D,int%5B%5D)&quot;&gt; &lt;code&gt;mismatch(int[], int[])&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="f49296e451be67acc72ebac21d6d5d2ab335c399" translate="yes" xml:space="preserve">
          <source>If the two arrays share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/integer#compareUnsigned(int,int)&quot;&gt;&lt;code&gt;Integer.compareUnsigned(int, int)&lt;/code&gt;&lt;/a&gt;, at an index within the respective arrays that is the prefix length. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two array lengths. (See &lt;a href=&quot;#mismatch(int%5B%5D,int%5B%5D)&quot;&gt;&lt;code&gt;mismatch(int[], int[])&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、プレフィックスの長さであるそれぞれの配列内のインデックスで、&lt;a href=&quot;../lang/integer#compareUnsigned(int,int)&quot;&gt; &lt;code&gt;Integer.compareUnsigned(int, int)&lt;/code&gt; &lt;/a&gt;ように2つの要素を比較した結果です。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの配列の長さを比較した結果です。 （一般的で適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(int%5B%5D,int%5B%5D)&quot;&gt; &lt;code&gt;mismatch(int[], int[])&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="b63db0f74eabd287280b9ce88e153dd64850efd0" translate="yes" xml:space="preserve">
          <source>If the two arrays share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/long#compare(long,long)&quot;&gt;&lt;code&gt;Long.compare(long, long)&lt;/code&gt;&lt;/a&gt;, at an index within the respective arrays that is the prefix length. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two array lengths. (See &lt;a href=&quot;#mismatch(long%5B%5D,long%5B%5D)&quot;&gt;&lt;code&gt;mismatch(long[], long[])&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">2つの配列が共通のプレフィックスを共有している場合、辞書式比較は、&lt;a href=&quot;../lang/long#compare(long,long)&quot;&gt; &lt;code&gt;Long.compare(long, long)&lt;/code&gt; &lt;/a&gt;に、プレフィックスの長さであるそれぞれの配列内のインデックスで2つの要素を比較した結果です。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの配列の長さを比較した結果です。 （一般的で適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(long%5B%5D,long%5B%5D)&quot;&gt; &lt;code&gt;mismatch(long[], long[])&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="1bcb7cd8bec0f1fcffe21770a5583ac7e1aa23a1" translate="yes" xml:space="preserve">
          <source>If the two arrays share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/long#compareUnsigned(long,long)&quot;&gt;&lt;code&gt;Long.compareUnsigned(long, long)&lt;/code&gt;&lt;/a&gt;, at an index within the respective arrays that is the prefix length. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two array lengths. (See &lt;a href=&quot;#mismatch(long%5B%5D,long%5B%5D)&quot;&gt;&lt;code&gt;mismatch(long[], long[])&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、&lt;a href=&quot;../lang/long#compareUnsigned(long,long)&quot;&gt; &lt;code&gt;Long.compareUnsigned(long, long)&lt;/code&gt; &lt;/a&gt;に、プレフィックスの長さであるそれぞれの配列内のインデックスで2つの要素を比較した結果です。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの配列の長さを比較した結果です。 （一般的で適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(long%5B%5D,long%5B%5D)&quot;&gt; &lt;code&gt;mismatch(long[], long[])&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="3d148b2dafd16e299cfcc608fd7bc9a2b486aed0" translate="yes" xml:space="preserve">
          <source>If the two arrays share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/short#compare(short,short)&quot;&gt;&lt;code&gt;Short.compare(short, short)&lt;/code&gt;&lt;/a&gt;, at an index within the respective arrays that is the prefix length. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two array lengths. (See &lt;a href=&quot;#mismatch(short%5B%5D,short%5B%5D)&quot;&gt;&lt;code&gt;mismatch(short[], short[])&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">2つの配列が共通のプレフィックスを共有している場合、辞書式比較は、&lt;a href=&quot;../lang/short#compare(short,short)&quot;&gt; &lt;code&gt;Short.compare(short, short)&lt;/code&gt; &lt;/a&gt;に、プレフィックスの長さであるそれぞれの配列内のインデックスで2つの要素を比較した結果です。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの配列の長さを比較した結果です。 （一般的で適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(short%5B%5D,short%5B%5D)&quot;&gt; &lt;code&gt;mismatch(short[], short[])&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="10bcf2ff1ce53653290b9af98721a6b69481041d" translate="yes" xml:space="preserve">
          <source>If the two arrays share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/short#compareUnsigned(short,short)&quot;&gt;&lt;code&gt;Short.compareUnsigned(short, short)&lt;/code&gt;&lt;/a&gt;, at an index within the respective arrays that is the prefix length. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two array lengths. (See &lt;a href=&quot;#mismatch(short%5B%5D,short%5B%5D)&quot;&gt;&lt;code&gt;mismatch(short[], short[])&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、&lt;a href=&quot;../lang/short#compareUnsigned(short,short)&quot;&gt; &lt;code&gt;Short.compareUnsigned(short, short)&lt;/code&gt; &lt;/a&gt;に、プレフィックスの長さであるそれぞれの配列内のインデックスで2つの要素を比較した結果です。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの配列の長さを比較した結果です。 （一般的で適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(short%5B%5D,short%5B%5D)&quot;&gt; &lt;code&gt;mismatch(short[], short[])&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="9b48c79397e666c5c9e58c00b0300c3f32625780" translate="yes" xml:space="preserve">
          <source>If the two arrays share a common prefix then the lexicographic comparison is the result of comparing with the specified comparator two elements at an index within the respective arrays that is the prefix length. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two array lengths. (See &lt;a href=&quot;#mismatch(java.lang.Object%5B%5D,java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;mismatch(Object[], Object[])&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">2つの配列が共通のプレフィックスを共有している場合、辞書式比較は、プレフィックスの長さであるそれぞれの配列内のインデックスで、指定されたコンパレータと2つの要素を比較した結果です。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの配列の長さを比較した結果です。（一般的で適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(java.lang.Object%5B%5D,java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;mismatch(Object[], Object[])&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="751f847fc7eff31ed05d5e61dc95a845161d2ad3" translate="yes" xml:space="preserve">
          <source>If the two arrays share a common prefix then the returned index is the length of the common prefix and it follows that there is a mismatch between the two elements at that index within the respective arrays. If one array is a proper prefix of the other then the returned index is the length of the smaller array and it follows that the index is only valid for the larger array. Otherwise, there is no mismatch.</source>
          <target state="translated">2つの配列が共通の接頭辞を共有している場合,返されるインデックスは共通の接頭辞の長さとなり,それぞれの配列内でそのインデックスにある2つの要素の間に不一致があることになります.一方の配列が他方の配列の適切な接頭辞である場合,返されるインデックスは小さい方の配列の長さとなり,そのインデックスは大きい方の配列に対してのみ有効となります.それ以外の場合は、不一致はありません。</target>
        </trans-unit>
        <trans-unit id="6e2839946586ddeda4b1002deade56dce2c14f22" translate="yes" xml:space="preserve">
          <source>If the two arrays, over the specified ranges, share a common prefix then the lexicographic comparison is the result of comparing two elements of type &lt;code&gt;T&lt;/code&gt; at a relative index &lt;code&gt;i&lt;/code&gt; within the respective arrays that is the prefix length, as if by:</source>
          <target state="translated">指定された範囲で2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、次のように、プレフィックスの長さであるそれぞれの配列内の相対インデックス &lt;code&gt;i&lt;/code&gt; でタイプ &lt;code&gt;T&lt;/code&gt; の2つの要素を比較した結果です。</target>
        </trans-unit>
        <trans-unit id="f3f948cd0dc8d1832d6c7cda8991ab71dcb99b17" translate="yes" xml:space="preserve">
          <source>If the two arrays, over the specified ranges, share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/boolean#compare(boolean,boolean)&quot;&gt;&lt;code&gt;Boolean.compare(boolean, boolean)&lt;/code&gt;&lt;/a&gt;, at a relative index within the respective arrays that is the length of the prefix. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two range lengths. (See &lt;a href=&quot;#mismatch(boolean%5B%5D,int,int,boolean%5B%5D,int,int)&quot;&gt;&lt;code&gt;mismatch(boolean[], int, int, boolean[], int, int)&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">指定された範囲で2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、&lt;a href=&quot;../lang/boolean#compare(boolean,boolean)&quot;&gt; &lt;code&gt;Boolean.compare(boolean, boolean)&lt;/code&gt; &lt;/a&gt;に、長さであるそれぞれの配列内の相対インデックスで2つの要素を比較した結果です。プレフィックスの。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの範囲の長さを比較した結果です。 （一般的で適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(boolean%5B%5D,int,int,boolean%5B%5D,int,int)&quot;&gt; &lt;code&gt;mismatch(boolean[], int, int, boolean[], int, int)&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="a6e94f75faa2282739b4f3b904d2d252589549dd" translate="yes" xml:space="preserve">
          <source>If the two arrays, over the specified ranges, share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/byte#compare(byte,byte)&quot;&gt;&lt;code&gt;Byte.compare(byte, byte)&lt;/code&gt;&lt;/a&gt;, at a relative index within the respective arrays that is the length of the prefix. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two range lengths. (See &lt;a href=&quot;#mismatch(byte%5B%5D,int,int,byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;mismatch(byte[], int, int, byte[], int, int)&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">指定された範囲で2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、&lt;a href=&quot;../lang/byte#compare(byte,byte)&quot;&gt; &lt;code&gt;Byte.compare(byte, byte)&lt;/code&gt; &lt;/a&gt;に、長さであるそれぞれの配列内の相対インデックスで2つの要素を比較した結果です。プレフィックスの。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの範囲の長さを比較した結果です。 （共通の適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(byte%5B%5D,int,int,byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;mismatch(byte[], int, int, byte[], int, int)&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="d99ad3f23655df7e4fbd277c7e8afb3093422df6" translate="yes" xml:space="preserve">
          <source>If the two arrays, over the specified ranges, share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/byte#compareUnsigned(byte,byte)&quot;&gt;&lt;code&gt;Byte.compareUnsigned(byte, byte)&lt;/code&gt;&lt;/a&gt;, at a relative index within the respective arrays that is the length of the prefix. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two range lengths. (See &lt;a href=&quot;#mismatch(byte%5B%5D,int,int,byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;mismatch(byte[], int, int, byte[], int, int)&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">指定された範囲で2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、&lt;a href=&quot;../lang/byte#compareUnsigned(byte,byte)&quot;&gt; &lt;code&gt;Byte.compareUnsigned(byte, byte)&lt;/code&gt; &lt;/a&gt;に、長さであるそれぞれの配列内の相対インデックスで2つの要素を比較した結果です。プレフィックスの。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの範囲の長さを比較した結果です。 （共通の適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(byte%5B%5D,int,int,byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;mismatch(byte[], int, int, byte[], int, int)&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="689546c82dfde445df7cb6060f65882dc0abca33" translate="yes" xml:space="preserve">
          <source>If the two arrays, over the specified ranges, share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/character#compare(char,char)&quot;&gt;&lt;code&gt;Character.compare(char, char)&lt;/code&gt;&lt;/a&gt;, at a relative index within the respective arrays that is the length of the prefix. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two range lengths. (See &lt;a href=&quot;#mismatch(char%5B%5D,int,int,char%5B%5D,int,int)&quot;&gt;&lt;code&gt;mismatch(char[], int, int, char[], int, int)&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">指定された範囲で2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、&lt;a href=&quot;../lang/character#compare(char,char)&quot;&gt; &lt;code&gt;Character.compare(char, char)&lt;/code&gt; &lt;/a&gt;に、長さであるそれぞれの配列内の相対インデックスで2つの要素を比較した結果です。プレフィックスの。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの範囲の長さを比較した結果です。 （共通の適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(char%5B%5D,int,int,char%5B%5D,int,int)&quot;&gt; &lt;code&gt;mismatch(char[], int, int, char[], int, int)&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="33f0cf3594f25f4cb36a42269d56adb60385fdc6" translate="yes" xml:space="preserve">
          <source>If the two arrays, over the specified ranges, share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/double#compare(double,double)&quot;&gt;&lt;code&gt;Double.compare(double, double)&lt;/code&gt;&lt;/a&gt;, at a relative index within the respective arrays that is the length of the prefix. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two range lengths. (See &lt;a href=&quot;#mismatch(double%5B%5D,int,int,double%5B%5D,int,int)&quot;&gt;&lt;code&gt;mismatch(double[], int, int, double[], int, int)&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">指定された範囲で2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、&lt;a href=&quot;../lang/double#compare(double,double)&quot;&gt; &lt;code&gt;Double.compare(double, double)&lt;/code&gt; &lt;/a&gt;に、長さであるそれぞれの配列内の相対インデックスで2つの要素を比較した結果です。プレフィックスの。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの範囲の長さを比較した結果です。 （共通の適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(double%5B%5D,int,int,double%5B%5D,int,int)&quot;&gt; &lt;code&gt;mismatch(double[], int, int, double[], int, int)&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="96dc20aff5dbee21053cf86a2f97932e6e113e17" translate="yes" xml:space="preserve">
          <source>If the two arrays, over the specified ranges, share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/float#compare(float,float)&quot;&gt;&lt;code&gt;Float.compare(float, float)&lt;/code&gt;&lt;/a&gt;, at a relative index within the respective arrays that is the length of the prefix. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two range lengths. (See &lt;a href=&quot;#mismatch(float%5B%5D,int,int,float%5B%5D,int,int)&quot;&gt;&lt;code&gt;mismatch(float[], int, int, float[], int, int)&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">指定された範囲で2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、&lt;a href=&quot;../lang/float#compare(float,float)&quot;&gt; &lt;code&gt;Float.compare(float, float)&lt;/code&gt; &lt;/a&gt;に、長さであるそれぞれの配列内の相対インデックスで2つの要素を比較した結果です。プレフィックスの。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの範囲の長さを比較した結果です。 （一般的で適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(float%5B%5D,int,int,float%5B%5D,int,int)&quot;&gt; &lt;code&gt;mismatch(float[], int, int, float[], int, int)&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="efb772271b892ca76f0e7c60394b0c3288a55976" translate="yes" xml:space="preserve">
          <source>If the two arrays, over the specified ranges, share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/integer#compare(int,int)&quot;&gt;&lt;code&gt;Integer.compare(int, int)&lt;/code&gt;&lt;/a&gt;, at a relative index within the respective arrays that is the length of the prefix. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two range lengths. (See &lt;a href=&quot;#mismatch(int%5B%5D,int,int,int%5B%5D,int,int)&quot;&gt;&lt;code&gt;mismatch(int[], int, int, int[], int, int)&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">指定された範囲で2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、&lt;a href=&quot;../lang/integer#compare(int,int)&quot;&gt; &lt;code&gt;Integer.compare(int, int)&lt;/code&gt; &lt;/a&gt;に、長さであるそれぞれの配列内の相対インデックスで2つの要素を比較した結果です。プレフィックスの。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの範囲の長さを比較した結果です。 （共通の適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(int%5B%5D,int,int,int%5B%5D,int,int)&quot;&gt; &lt;code&gt;mismatch(int[], int, int, int[], int, int)&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="fc1abfae5f6bec827afbe78092dd5076cbb73043" translate="yes" xml:space="preserve">
          <source>If the two arrays, over the specified ranges, share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/integer#compareUnsigned(int,int)&quot;&gt;&lt;code&gt;Integer.compareUnsigned(int, int)&lt;/code&gt;&lt;/a&gt;, at a relative index within the respective arrays that is the length of the prefix. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two range lengths. (See &lt;a href=&quot;#mismatch(int%5B%5D,int,int,int%5B%5D,int,int)&quot;&gt;&lt;code&gt;mismatch(int[], int, int, int[], int, int)&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">指定された範囲で2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、&lt;a href=&quot;../lang/integer#compareUnsigned(int,int)&quot;&gt; &lt;code&gt;Integer.compareUnsigned(int, int)&lt;/code&gt; &lt;/a&gt;に、長さであるそれぞれの配列内の相対インデックスで2つの要素を比較した結果です。プレフィックスの。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの範囲の長さを比較した結果です。 （共通の適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(int%5B%5D,int,int,int%5B%5D,int,int)&quot;&gt; &lt;code&gt;mismatch(int[], int, int, int[], int, int)&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="3f390c1a0173f067f002963d99ec1e933697624f" translate="yes" xml:space="preserve">
          <source>If the two arrays, over the specified ranges, share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/long#compare(long,long)&quot;&gt;&lt;code&gt;Long.compare(long, long)&lt;/code&gt;&lt;/a&gt;, at a relative index within the respective arrays that is the length of the prefix. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two range lengths. (See &lt;a href=&quot;#mismatch(long%5B%5D,int,int,long%5B%5D,int,int)&quot;&gt;&lt;code&gt;mismatch(long[], int, int, long[], int, int)&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">指定された範囲で2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、&lt;a href=&quot;../lang/long#compare(long,long)&quot;&gt; &lt;code&gt;Long.compare(long, long)&lt;/code&gt; &lt;/a&gt;に、長さであるそれぞれの配列内の相対インデックスで2つの要素を比較した結果です。プレフィックスの。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの範囲の長さを比較した結果です。 （共通の適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(long%5B%5D,int,int,long%5B%5D,int,int)&quot;&gt; &lt;code&gt;mismatch(long[], int, int, long[], int, int)&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="acdbd4d409077318826faeff1066f127d79d2e03" translate="yes" xml:space="preserve">
          <source>If the two arrays, over the specified ranges, share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/long#compareUnsigned(long,long)&quot;&gt;&lt;code&gt;Long.compareUnsigned(long, long)&lt;/code&gt;&lt;/a&gt;, at a relative index within the respective arrays that is the length of the prefix. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two range lengths. (See &lt;a href=&quot;#mismatch(long%5B%5D,int,int,long%5B%5D,int,int)&quot;&gt;&lt;code&gt;mismatch(long[], int, int, long[], int, int)&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">指定された範囲で2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、&lt;a href=&quot;../lang/long#compareUnsigned(long,long)&quot;&gt; &lt;code&gt;Long.compareUnsigned(long, long)&lt;/code&gt; &lt;/a&gt;に、長さであるそれぞれの配列内の相対インデックスで2つの要素を比較した結果です。プレフィックスの。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの範囲の長さを比較した結果です。 （共通の適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(long%5B%5D,int,int,long%5B%5D,int,int)&quot;&gt; &lt;code&gt;mismatch(long[], int, int, long[], int, int)&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="165852849eadb60efdc65ee7e29e23a132211a7c" translate="yes" xml:space="preserve">
          <source>If the two arrays, over the specified ranges, share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/short#compare(short,short)&quot;&gt;&lt;code&gt;Short.compare(short, short)&lt;/code&gt;&lt;/a&gt;, at a relative index within the respective arrays that is the length of the prefix. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two range lengths. (See &lt;a href=&quot;#mismatch(short%5B%5D,int,int,short%5B%5D,int,int)&quot;&gt;&lt;code&gt;mismatch(short[], int, int, short[], int, int)&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">指定された範囲で2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、&lt;a href=&quot;../lang/short#compare(short,short)&quot;&gt; &lt;code&gt;Short.compare(short, short)&lt;/code&gt; &lt;/a&gt;に、長さであるそれぞれの配列内の相対インデックスで2つの要素を比較した結果です。プレフィックスの。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの範囲の長さを比較した結果です。 （一般的で適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(short%5B%5D,int,int,short%5B%5D,int,int)&quot;&gt; &lt;code&gt;mismatch(short[], int, int, short[], int, int)&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="92a13ef6017334f61c5516d921592620158e34a6" translate="yes" xml:space="preserve">
          <source>If the two arrays, over the specified ranges, share a common prefix then the lexicographic comparison is the result of comparing two elements, as if by &lt;a href=&quot;../lang/short#compareUnsigned(short,short)&quot;&gt;&lt;code&gt;Short.compareUnsigned(short, short)&lt;/code&gt;&lt;/a&gt;, at a relative index within the respective arrays that is the length of the prefix. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two range lengths. (See &lt;a href=&quot;#mismatch(short%5B%5D,int,int,short%5B%5D,int,int)&quot;&gt;&lt;code&gt;mismatch(short[], int, int, short[], int, int)&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">指定された範囲で2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、&lt;a href=&quot;../lang/short#compareUnsigned(short,short)&quot;&gt; &lt;code&gt;Short.compareUnsigned(short, short)&lt;/code&gt; &lt;/a&gt;に、長さであるそれぞれの配列内の相対インデックスで2つの要素を比較した結果です。プレフィックスの。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの範囲の長さを比較した結果です。 （一般的で適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(short%5B%5D,int,int,short%5B%5D,int,int)&quot;&gt; &lt;code&gt;mismatch(short[], int, int, short[], int, int)&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="0adc08ed767ba5fcac736354cc12489898dcbc7c" translate="yes" xml:space="preserve">
          <source>If the two arrays, over the specified ranges, share a common prefix then the lexicographic comparison is the result of comparing with the specified comparator two elements at a relative index within the respective arrays that is the prefix length. Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two range lengths. (See &lt;a href=&quot;#mismatch(java.lang.Object%5B%5D,int,int,java.lang.Object%5B%5D,int,int)&quot;&gt;&lt;code&gt;mismatch(Object[], int, int, Object[], int, int)&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">指定された範囲で2つの配列が共通のプレフィックスを共有する場合、辞書式比較は、プレフィックスの長さであるそれぞれの配列内の相対インデックスで、指定されたコンパレータと2つの要素を比較した結果です。それ以外の場合、一方の配列は他方の適切な接頭辞であり、辞書式比較は2つの範囲の長さを比較した結果です。 （共通の適切なプレフィックスの定義については、&lt;a href=&quot;#mismatch(java.lang.Object%5B%5D,int,int,java.lang.Object%5B%5D,int,int)&quot;&gt; &lt;code&gt;mismatch(Object[], int, int, Object[], int, int)&lt;/code&gt; &lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="de179b6b61556777afe0f0139dc8277c77218327" translate="yes" xml:space="preserve">
          <source>If the two arrays, over the specified ranges, share a common prefix then the returned relative index is the length of the common prefix and it follows that there is a mismatch between the two elements at that relative index within the respective arrays. If one array is a proper prefix of the other, over the specified ranges, then the returned relative index is the length of the smaller range and it follows that the relative index is only valid for the array with the larger range. Otherwise, there is no mismatch.</source>
          <target state="translated">指定された範囲内で2つの配列が共通の接頭辞を共有している場合,返される相対インデックスはその共通の接頭辞の長さとなり,それぞれの配列内でその相対インデックスの2つの要素の間に不一致が存在することになります.一方の配列が他方の配列の適切な接頭辞を指定された範囲内で共有している場合,返される相対インデックスは小さい方の範囲の長さとなり,相対インデックスは大きい方の範囲の配列に対してのみ有効となります.それ以外の場合は、不一致はありません。</target>
        </trans-unit>
        <trans-unit id="3ff68f92a851855ba68fbc7ed3f7e692a3962b65" translate="yes" xml:space="preserve">
          <source>If the two buffers share a common prefix then the returned index is the length of the common prefix and it follows that there is a mismatch between the two buffers at that index within the respective buffers. If one buffer is a proper prefix of the other then the returned index is the smaller of the remaining elements in each buffer, and it follows that the index is only valid for the buffer with the larger number of remaining elements. Otherwise, there is no mismatch.</source>
          <target state="translated">2 つのバッファが共通のプレフィックスを共有している場合、返されるインデックスは共通のプレフィックスの長さであり、それぞれのバッファ内のそのインデックスで 2 つのバッファ間に不一致があることを意味します。一方のバッファが他方のバッファの適切な接頭辞である場合、返されるインデックスは各バッファの残りの要素のうち小さい方のものであり、インデックスは残りの要素の数が多い方のバッファに対してのみ有効であることになります。それ以外の場合は、不一致はありません。</target>
        </trans-unit>
        <trans-unit id="051c9daf6b939af50cb443665c610f27abeb1722" translate="yes" xml:space="preserve">
          <source>If the two interfaces are mixed (including serialization), Unicode range values are mapped to their counterparts where such mapping is possible, such as &lt;code&gt;NumericShaper.Range.ARABIC&lt;/code&gt; from/to &lt;code&gt;NumericShaper.ARABIC&lt;/code&gt;. If any unmappable range values are specified, such as &lt;code&gt;NumericShaper.Range.BALINESE&lt;/code&gt;, those ranges are ignored.</source>
          <target state="translated">2つのインターフェイスが混在している場合（シリアル化を含む）、Unicode範囲値は、 &lt;code&gt;NumericShaper.Range.ARABIC&lt;/code&gt; から/への &lt;code&gt;NumericShaper.ARABIC&lt;/code&gt; など、そのようなマッピングが可能な対応するものにマップされます。 &lt;code&gt;NumericShaper.Range.BALINESE&lt;/code&gt; など、マップできない範囲値が指定されている場合、それらの範囲は無視されます。</target>
        </trans-unit>
        <trans-unit id="b2f14e6b9879b33cc948a3f23d891c8c9a5dfd45" translate="yes" xml:space="preserve">
          <source>If the two segments share a common prefix then the returned offset is the length of the common prefix and it follows that there is a mismatch between the two segments at that offset within the respective segments. If one segment is a proper prefix of the other then the returned offset is the smaller of the segment sizes, and it follows that the offset is only valid for the larger segment. Otherwise, there is no mismatch and &lt;code&gt;
 -1&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac1823b4d109a58d8c15953a4c53e9282211329" translate="yes" xml:space="preserve">
          <source>If the type is &lt;code&gt;null&lt;/code&gt;, a shared internal persistence delegate is returned that encodes &lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">タイプが &lt;code&gt;null&lt;/code&gt; の場合、 &lt;code&gt;null&lt;/code&gt; 値をエンコードする共有内部永続デリゲートが返されます。</target>
        </trans-unit>
        <trans-unit id="24624d93ce0bd52bd62b61c2d340c4e06907a0dd" translate="yes" xml:space="preserve">
          <source>If the type is a &lt;code&gt;enum&lt;/code&gt; declaration, a shared internal persistence delegate is returned that encodes constants of this enumeration by their names.</source>
          <target state="translated">タイプが &lt;code&gt;enum&lt;/code&gt; 型宣言の場合は、この列挙型の定数を名前でエンコードする共有内部永続デリゲートが返されます。</target>
        </trans-unit>
        <trans-unit id="17c7dfdd306d9dca345cd59fbb286fb56494c02b" translate="yes" xml:space="preserve">
          <source>If the type is a primitive type or the corresponding wrapper, a shared internal persistence delegate is returned that encodes values of the given type.</source>
          <target state="translated">型がプリミティブ型またはそれに対応するラッパーである場合、与えられた型の値をエンコードする共有内部永続化デリゲートが返されます。</target>
        </trans-unit>
        <trans-unit id="e83ddcadc497b3ac8c423eb1d1497d6d589d42af" translate="yes" xml:space="preserve">
          <source>If the type is a proxy, a shared internal persistence delegate is returned that encodes a proxy instance by using the &lt;a href=&quot;../../../java.base/java/lang/reflect/proxy#newProxyInstance(java.lang.ClassLoader,java.lang.Class%5B%5D,java.lang.reflect.InvocationHandler)&quot;&gt;&lt;code&gt;Proxy.newProxyInstance(java.lang.ClassLoader, java.lang.Class&amp;lt;?&amp;gt;[], java.lang.reflect.InvocationHandler)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">タイプがプロキシの場合、&lt;a href=&quot;../../../java.base/java/lang/reflect/proxy#newProxyInstance(java.lang.ClassLoader,java.lang.Class%5B%5D,java.lang.reflect.InvocationHandler)&quot;&gt; &lt;code&gt;Proxy.newProxyInstance(java.lang.ClassLoader, java.lang.Class&amp;lt;?&amp;gt;[], java.lang.reflect.InvocationHandler)&lt;/code&gt; &lt;/a&gt;を使用してプロキシインスタンスをエンコードする共有内部永続性デリゲートが返されます）メソッド。</target>
        </trans-unit>
        <trans-unit id="7266e7d4fe52b4f4bd2947e2022cc33489854699" translate="yes" xml:space="preserve">
          <source>If the type is a proxy, a shared internal persistence delegate is returned that encodes a proxy instance by using the &lt;a href=&quot;../lang/reflect/proxy#newProxyInstance-java.lang.ClassLoader-java.lang.Class:A-java.lang.reflect.InvocationHandler-&quot;&gt;&lt;code&gt;Proxy.newProxyInstance(java.lang.ClassLoader, java.lang.Class&amp;lt;?&amp;gt;[], java.lang.reflect.InvocationHandler)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">タイプがプロキシの場合、&lt;a href=&quot;../lang/reflect/proxy#newProxyInstance-java.lang.ClassLoader-java.lang.Class:A-java.lang.reflect.InvocationHandler-&quot;&gt; &lt;code&gt;Proxy.newProxyInstance(java.lang.ClassLoader, java.lang.Class&amp;lt;?&amp;gt;[], java.lang.reflect.InvocationHandler)&lt;/code&gt; &lt;/a&gt;を使用してプロキシインスタンスをエンコードする共有内部永続デリゲートが返されます）メソッド。</target>
        </trans-unit>
        <trans-unit id="7d57cd67c4f9b115595d9ab402c68b98705b5fc3" translate="yes" xml:space="preserve">
          <source>If the type is an &lt;code&gt;enum&lt;/code&gt; declaration, a shared internal persistence delegate is returned that encodes constants of this enumeration by their names.</source>
          <target state="translated">タイプが &lt;code&gt;enum&lt;/code&gt; 型宣言の場合、この列挙型の定数を名前でエンコードする共有内部永続性デリゲートが返されます。</target>
        </trans-unit>
        <trans-unit id="6d791c963ef8e6e2b0fde7ef89bca6d1754b00b4" translate="yes" xml:space="preserve">
          <source>If the type is an array, a shared internal persistence delegate is returned that encodes an array of the appropriate type and length, and each of its elements as if they are properties.</source>
          <target state="translated">型が配列の場合は、適切な型と長さの配列と、それらの要素をあたかもプロパティであるかのようにエンコードする共有内部永続化デリゲートが返されます。</target>
        </trans-unit>
        <trans-unit id="0b2e4d1a1790e1526fd1d7230bad3ff1e34601cd" translate="yes" xml:space="preserve">
          <source>If the type of an object is incompatible with the expected type of the parameter associated to the object.</source>
          <target state="translated">オブジェクトの型が、そのオブジェクトに関連付けられたパラメータの期待される型と互換性がない場合。</target>
        </trans-unit>
        <trans-unit id="99f690abde7ac9507cafcabd4eb11b9f675436cc" translate="yes" xml:space="preserve">
          <source>If the type of the underlying field is a type variable or a parameterized type, it is created. Otherwise, it is resolved.</source>
          <target state="translated">基底フィールドの型が型変数またはパラメータ化された型である場合、その型が作成されます。それ以外の場合は解決されます。</target>
        </trans-unit>
        <trans-unit id="bba92f2510991dff47988d4605e2d098cf44722d" translate="yes" xml:space="preserve">
          <source>If the type of the underlying record component is a type variable or a parameterized type, it is created. Otherwise, it is resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595e9b134500ae042fb86dbdf0154307a723dc06" translate="yes" xml:space="preserve">
          <source>If the underlying class is an array class, then its &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;private&lt;/code&gt; and &lt;code&gt;protected&lt;/code&gt; modifiers are the same as those of its component type. If this &lt;code&gt;Class&lt;/code&gt; object represents a primitive type or void, its &lt;code&gt;public&lt;/code&gt; modifier is always &lt;code&gt;true&lt;/code&gt;, and its &lt;code&gt;protected&lt;/code&gt; and &lt;code&gt;private&lt;/code&gt; modifiers are always &lt;code&gt;false&lt;/code&gt;. If this &lt;code&gt;Class&lt;/code&gt; object represents an array class, a primitive type or void, then its &lt;code&gt;final&lt;/code&gt; modifier is always &lt;code&gt;true&lt;/code&gt; and its interface modifier is always &lt;code&gt;false&lt;/code&gt;. The values of its other modifiers are not determined by this specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b62dfc82fc14777b26e50687d5b79596a57206" translate="yes" xml:space="preserve">
          <source>If the underlying class is an array class, then its &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;private&lt;/code&gt; and &lt;code&gt;protected&lt;/code&gt; modifiers are the same as those of its component type. If this &lt;code&gt;Class&lt;/code&gt; represents a primitive type or void, its &lt;code&gt;public&lt;/code&gt; modifier is always &lt;code&gt;true&lt;/code&gt;, and its &lt;code&gt;protected&lt;/code&gt; and &lt;code&gt;private&lt;/code&gt; modifiers are always &lt;code&gt;false&lt;/code&gt;. If this object represents an array class, a primitive type or void, then its &lt;code&gt;final&lt;/code&gt; modifier is always &lt;code&gt;true&lt;/code&gt; and its interface modifier is always &lt;code&gt;false&lt;/code&gt;. The values of its other modifiers are not determined by this specification.</source>
          <target state="translated">基になるクラスが配列クラスの場合、その &lt;code&gt;public&lt;/code&gt; 、 &lt;code&gt;private&lt;/code&gt; および &lt;code&gt;protected&lt;/code&gt; 修飾子は、そのコンポーネント型の修飾子と同じです。この &lt;code&gt;Class&lt;/code&gt; がプリミティブ型またはvoidを表す場合、その &lt;code&gt;public&lt;/code&gt; 修飾子は常に &lt;code&gt;true&lt;/code&gt; であり、その &lt;code&gt;protected&lt;/code&gt; および &lt;code&gt;private&lt;/code&gt; 修飾子は常に &lt;code&gt;false&lt;/code&gt; です。このオブジェクトが配列クラス、プリミティブ型、またはvoidを表す場合、その &lt;code&gt;final&lt;/code&gt; 修飾子は常に &lt;code&gt;true&lt;/code&gt; であり、そのインターフェイス修飾子は常に &lt;code&gt;false&lt;/code&gt; です。他の修飾子の値は、この仕様では決定されません。</target>
        </trans-unit>
        <trans-unit id="b6635d2c90407f220bf7ecba5d59930986096dac" translate="yes" xml:space="preserve">
          <source>If the underlying field is a static field, the &lt;code&gt;obj&lt;/code&gt; argument is ignored; it may be null.</source>
          <target state="translated">基本フィールドが静的フィールドの場合、 &lt;code&gt;obj&lt;/code&gt; 引数は無視されます。nullの可能性があります。</target>
        </trans-unit>
        <trans-unit id="61e60b6593bad05aa260e774035853633abadd33" translate="yes" xml:space="preserve">
          <source>If the underlying field is final, the method throws an &lt;code&gt;IllegalAccessException&lt;/code&gt; unless &lt;code&gt;setAccessible(true)&lt;/code&gt; has succeeded for this &lt;code&gt;Field&lt;/code&gt; object and the field is non-static. Setting a final field in this way is meaningful only during deserialization or reconstruction of instances of classes with blank final fields, before they are made available for access by other parts of a program. Use in any other context may have unpredictable effects, including cases in which other parts of a program continue to use the original value of this field.</source>
          <target state="translated">基になるフィールドがfinalの場合、この &lt;code&gt;Field&lt;/code&gt; オブジェクトに対して &lt;code&gt;setAccessible(true)&lt;/code&gt; が成功し、フィールドが静的でない限り、メソッドは &lt;code&gt;IllegalAccessException&lt;/code&gt; をスローします。このようにfinalフィールドを設定することは、プログラムの他の部分からアクセスできるようになる前に、空白のfinalフィールドを持つクラスのインスタンスの逆シリアル化または再構築中にのみ意味があります。他のコンテキストで使用すると、プログラムの他の部分がこのフィールドの元の値を使用し続ける場合など、予測できない影響が生じる可能性があります。</target>
        </trans-unit>
        <trans-unit id="269ef8898f71d5139fc6e4b1292850037573e45e" translate="yes" xml:space="preserve">
          <source>If the underlying field is final, this &lt;code&gt;Field&lt;/code&gt; object has &lt;em&gt;write&lt;/em&gt; access if and only if the following conditions are met:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ffdb31707c7c6f0d8ea54510f297f85f678ae3" translate="yes" xml:space="preserve">
          <source>If the underlying field is of a primitive type, an unwrapping conversion is attempted to convert the new value to a value of a primitive type. If this attempt fails, the method throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">基本となるフィールドがプリミティブ型の場合、アンラップ変換が試行され、新しい値がプリミティブ型の値に変換されます。この試行が失敗した場合、メソッドは &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="35c398b7568f2f6829527a1ee4e8ad05ab589757" translate="yes" xml:space="preserve">
          <source>If the underlying field is static, the &lt;code&gt;obj&lt;/code&gt; argument is ignored; it may be null.</source>
          <target state="translated">基本となるフィールドが静的である場合、 &lt;code&gt;obj&lt;/code&gt; 引数は無視されます。nullの可能性があります。</target>
        </trans-unit>
        <trans-unit id="79473e9ad073a8c2b30d02714d81cdc8e02b2e5d" translate="yes" xml:space="preserve">
          <source>If the underlying field is static, the class that declared the field is initialized if it has not already been initialized.</source>
          <target state="translated">基礎となるフィールドが静的な場合、そのフィールドを宣言したクラスがまだ初期化されていない場合は初期化されます。</target>
        </trans-unit>
        <trans-unit id="884f8872373909a62519ac7ae071245b57ecb411" translate="yes" xml:space="preserve">
          <source>If the underlying method is &lt;a href=&quot;methodhandles.lookup#callsens&quot;&gt;caller sensitive&lt;/a&gt;, the direct method handle will have been &quot;bound&quot; to a particular caller class, the &lt;a href=&quot;methodhandles.lookup#lookupClass()&quot;&gt;lookup class&lt;/a&gt; of the lookup object used to create it. Cracking this method handle with a different lookup class will fail even if the underlying method is public (like &lt;code&gt;Class.forName&lt;/code&gt;).</source>
          <target state="translated">基になるメソッドが&lt;a href=&quot;methodhandles.lookup#callsens&quot;&gt;呼び出し元に依存する&lt;/a&gt;場合、直接メソッドハンドルは、特定の呼び出し元クラス（作成に使用されたルックアップオブジェクトの&lt;a href=&quot;methodhandles.lookup#lookupClass()&quot;&gt;ルックアップクラス）&lt;/a&gt;に「バインド」されます。基になるメソッドがパブリック（ &lt;code&gt;Class.forName&lt;/code&gt; など）であっても、別のルックアップクラスでこのメソッドハンドルをクラックすると失敗します。</target>
        </trans-unit>
        <trans-unit id="5c2e8ba35ddb7d491a4530be7e2d58c63b91b804" translate="yes" xml:space="preserve">
          <source>If the underlying method is &lt;a href=&quot;methodhandles.lookup#callsens&quot;&gt;caller sensitive&lt;/a&gt;, the direct method handle will have been &quot;bound&quot; to a particular caller class, the &lt;a href=&quot;methodhandles.lookup#lookupClass--&quot;&gt;lookup class&lt;/a&gt; of the lookup object used to create it. Cracking this method handle with a different lookup class will fail even if the underlying method is public (like &lt;code&gt;Class.forName&lt;/code&gt;).</source>
          <target state="translated">基になるメソッドが&lt;a href=&quot;methodhandles.lookup#callsens&quot;&gt;呼び出し元に依存する&lt;/a&gt;場合、直接メソッドハンドルは特定の呼び出し元クラス（作成に使用されたルックアップオブジェクトの&lt;a href=&quot;methodhandles.lookup#lookupClass--&quot;&gt;ルックアップクラス）&lt;/a&gt;に「バインド」されます。基になるメソッドが（ &lt;code&gt;Class.forName&lt;/code&gt; のように）パブリックであっても、このメソッドハンドルを別のルックアップクラスでクラックすると失敗します。</target>
        </trans-unit>
        <trans-unit id="315e1d5687f0be0717ab38a86bf5bdc38d92fd67" translate="yes" xml:space="preserve">
          <source>If the underlying method is an instance method, it is invoked using dynamic method lookup as documented in The Java Language Specification, Second Edition, section 15.12.4.4; in particular, overriding based on the runtime type of the target object will occur.</source>
          <target state="translated">基礎となるメソッドがインスタンス・メソッドである場合、Java言語仕様書第2版15.12.4.4項で説明されているように、動的なメソッド・ルックアップを使用して呼び出され、特に、ターゲット・オブジェクトのランタイム・タイプに基づくオーバーライドが発生します。</target>
        </trans-unit>
        <trans-unit id="5b1ed6ee8640dbbd801323bd87c98b861047134d" translate="yes" xml:space="preserve">
          <source>If the underlying method is an instance method, it is invoked using dynamic method lookup as documented in The Java Language Specification, section 15.12.4.4; in particular, overriding based on the runtime type of the target object may occur.</source>
          <target state="translated">基礎となるメソッドがインスタンス・メソッドである場合、Java言語仕様書15.12.4.4.4項で説明されているように、動的なメソッド・ルックアップを使用して呼び出されます。</target>
        </trans-unit>
        <trans-unit id="38f2cdfc3191616e303143bb27c18fb2f6e69964" translate="yes" xml:space="preserve">
          <source>If the underlying method is an instance method, it is invoked using dynamic method lookup as documented in The Java Language Specification, section &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se15/html/jls-15.html#jls-15.12.4.4&quot;&gt;15.12.4.4&lt;/a&gt;; in particular, overriding based on the runtime type of the target object may occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fdc5865953923b940ef228e2839e6291e6d1529" translate="yes" xml:space="preserve">
          <source>If the underlying method is static, the class that declared the method is initialized if it has not already been initialized.</source>
          <target state="translated">基礎となるメソッドが静的な場合、メソッドを宣言したクラスがまだ初期化されていない場合は、そのクラスが初期化されます。</target>
        </trans-unit>
        <trans-unit id="5417f1946175b0c601b43e5b5d82e2dfa1a39a1f" translate="yes" xml:space="preserve">
          <source>If the underlying method is static, then the specified &lt;code&gt;obj&lt;/code&gt; argument is ignored. It may be null.</source>
          <target state="translated">基本となるメソッドが静的である場合、指定された &lt;code&gt;obj&lt;/code&gt; 引数は無視されます。nullの可能性があります。</target>
        </trans-unit>
        <trans-unit id="baee3bb7bafb1339b8300d582f80c05c628c3c7f" translate="yes" xml:space="preserve">
          <source>If the underlying model of the &lt;code&gt;RowSorter&lt;/code&gt; differs from that of this &lt;code&gt;JTable&lt;/code&gt; undefined behavior will result.</source>
          <target state="translated">&lt;code&gt;RowSorter&lt;/code&gt; の基礎となるモデルがこの &lt;code&gt;JTable&lt;/code&gt; のモデルと異なる場合、未定義の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="dae88d15741d2fff1d10727455001428453c69fc" translate="yes" xml:space="preserve">
          <source>If the underlying model structure changes (the &lt;code&gt;modelStructureChanged&lt;/code&gt; method is invoked) the following are reset to their default values: &lt;code&gt;Comparator&lt;/code&gt;s by column, current sort order, and whether each column is sortable. The default sort order is natural (the same as the model), and columns are sortable by default.</source>
          <target state="translated">基になるモデル構造が変更された場合（ &lt;code&gt;modelStructureChanged&lt;/code&gt; メソッドが呼び出された場合）、次のものがデフォルト値にリセットされます。列ごとの &lt;code&gt;Comparator&lt;/code&gt; 、現在の並べ替え順序、および各列が並べ替え可能かどうか。デフォルトの並べ替え順序は自然で（モデルと同じ）、列はデフォルトで並べ替え可能です。</target>
        </trans-unit>
        <trans-unit id="9883703230204600dade0bca3c6ef6ed2362790c" translate="yes" xml:space="preserve">
          <source>If the underlying model structure changes (the &lt;code&gt;modelStructureChanged&lt;/code&gt; method is invoked) the following are reset to their default values: &lt;code&gt;Comparator&lt;/code&gt;s by column, current sort order, and whether each column is sortable. To find the default &lt;code&gt;Comparator&lt;/code&gt;s, see the concrete implementation (for example, &lt;a href=&quot;table/tablerowsorter&quot;&gt;&lt;code&gt;TableRowSorter&lt;/code&gt;&lt;/a&gt;). The default sort order is unsorted (the same as the model), and columns are sortable by default.</source>
          <target state="translated">基になるモデル構造が変更された場合（ &lt;code&gt;modelStructureChanged&lt;/code&gt; メソッドが呼び出された場合）、次のものがデフォルト値にリセットされます。列ごとの &lt;code&gt;Comparator&lt;/code&gt; 、現在の並べ替え順序、および各列が並べ替え可能かどうか。デフォルトの &lt;code&gt;Comparator&lt;/code&gt; を見つけるには、具体的な実装（&lt;a href=&quot;table/tablerowsorter&quot;&gt; &lt;code&gt;TableRowSorter&lt;/code&gt; など&lt;/a&gt;）を参照してください。デフォルトのソート順はソートされておらず（モデルと同じ）、列はデフォルトでソート可能です。</target>
        </trans-unit>
        <trans-unit id="9921e56a78b932a99ec7c118f676e37975b2d1c9" translate="yes" xml:space="preserve">
          <source>If the underlying platform has a &quot;native&quot; look and feel, and this is an implementation of it, return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">基盤となるプラットフォームに「ネイティブ」なルックアンドフィールがあり、これがその実装である場合は、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="afbbef7a28945de7e4c59f1f0a920532651223f3" translate="yes" xml:space="preserve">
          <source>If the underlying platform has a &quot;native&quot; look and feel, and this is an implementation of it, return &lt;code&gt;true&lt;/code&gt;. For example, when the underlying platform is Solaris running CDE a CDE/Motif look and feel implementation would return &lt;code&gt;
 true&lt;/code&gt;.</source>
          <target state="translated">基盤となるプラットフォームに「ネイティブ」なルックアンドフィールがあり、これがその実装である場合は、 &lt;code&gt;true&lt;/code&gt; を返します。たとえば、基盤となるプラットフォームがCDEを実行しているSolarisの場合、CDE / Motifのルックアンドフィールの実装は &lt;code&gt; true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2221ca8e8e96c757d1acb4e9dea9f2b5398db497" translate="yes" xml:space="preserve">
          <source>If the unit is a &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The supported units are:</source>
          <target state="translated">ユニットが&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。サポートされている単位は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="cd8d281301aa1d20e9a67171d9933765d4124562" translate="yes" xml:space="preserve">
          <source>If the unit is not a &lt;code&gt;ChronoUnit&lt;/code&gt;, then the result of this method is obtained by invoking &lt;code&gt;TemporalUnit.addTo(Temporal, long)&lt;/code&gt; passing &lt;code&gt;this&lt;/code&gt; as the first argument.</source>
          <target state="translated">ユニットがない場合 &lt;code&gt;ChronoUnit&lt;/code&gt; 、この方法の結果が呼び出して取得する &lt;code&gt;TemporalUnit.addTo(Temporal, long)&lt;/code&gt; 渡し &lt;code&gt;this&lt;/code&gt; 最初の引数として。</target>
        </trans-unit>
        <trans-unit id="6f71bc9db5b6219e1ae283e954d88ba321dd8591" translate="yes" xml:space="preserve">
          <source>If the unit is not a &lt;code&gt;ChronoUnit&lt;/code&gt;, then the result of this method is obtained by invoking &lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt; passing &lt;code&gt;this&lt;/code&gt; as the first argument and the converted input temporal as the second argument.</source>
          <target state="translated">単位が &lt;code&gt;ChronoUnit&lt;/code&gt; ではない場合、このメソッドの結果は、 &lt;code&gt;TemporalUnit.between(Temporal, Temporal)&lt;/code&gt; を呼び出して、 &lt;code&gt;this&lt;/code&gt; を最初の引数として渡し、変換された入力時間を2番目の引数として渡します。</target>
        </trans-unit>
        <trans-unit id="66bc82b1dd235049a5511719d85e81950af05fd7" translate="yes" xml:space="preserve">
          <source>If the unit is not a &lt;code&gt;ChronoUnit&lt;/code&gt;, then the result of this method is obtained by invoking &lt;code&gt;TemporalUnit.isSupportedBy(Temporal)&lt;/code&gt; passing &lt;code&gt;this&lt;/code&gt; as the argument. Whether the unit is supported is determined by the unit.</source>
          <target state="translated">ユニットがない場合 &lt;code&gt;ChronoUnit&lt;/code&gt; 、この方法の結果が呼び出すことによって得られる &lt;code&gt;TemporalUnit.isSupportedBy(Temporal)&lt;/code&gt; 通過 &lt;code&gt;this&lt;/code&gt; 引数として。ユニットがサポートされているかどうかは、ユニットによって決まります。</target>
        </trans-unit>
        <trans-unit id="906c58bb1f6e7950ac3b30334d2bb84e89a6b83b" translate="yes" xml:space="preserve">
          <source>If the unsigned magnitude is zero, it is represented by a single zero character &lt;code&gt;'0'&lt;/code&gt; (&lt;code&gt;'\u0030'&lt;/code&gt;); otherwise, the first character of the representation of the unsigned magnitude will not be the zero character. The characters &lt;code&gt;'0'&lt;/code&gt; (&lt;code&gt;'\u0030'&lt;/code&gt;) and &lt;code&gt;
 '1'&lt;/code&gt; (&lt;code&gt;'\u0031'&lt;/code&gt;) are used as binary digits.</source>
          <target state="translated">符号なしの大きさがゼロの場合、単一のゼロ文字 &lt;code&gt;'0'&lt;/code&gt; （ &lt;code&gt;'\u0030'&lt;/code&gt; ）で表されます。それ以外の場合、符号なしの大きさの表現の最初の文字はゼロ文字にはなりません。文字 &lt;code&gt;'0'&lt;/code&gt; （ &lt;code&gt;'\u0030'&lt;/code&gt; ）および &lt;code&gt; '1'&lt;/code&gt; （ &lt;code&gt;'\u0031'&lt;/code&gt; ）は2進数として使用されます。</target>
        </trans-unit>
        <trans-unit id="20661569ddc05848e0dfeb41e06e5676e4ccca6a" translate="yes" xml:space="preserve">
          <source>If the unsigned magnitude is zero, it is represented by a single zero character &lt;code&gt;'0'&lt;/code&gt; (&lt;code&gt;'\u0030'&lt;/code&gt;); otherwise, the first character of the representation of the unsigned magnitude will not be the zero character. The characters &lt;code&gt;'0'&lt;/code&gt; (&lt;code&gt;'\u0030'&lt;/code&gt;) and &lt;code&gt;'1'&lt;/code&gt; (&lt;code&gt;'\u0031'&lt;/code&gt;) are used as binary digits.</source>
          <target state="translated">符号なしの &lt;code&gt;'\u0030'&lt;/code&gt; 値がゼロの場合、単一のゼロ文字 &lt;code&gt;'0'&lt;/code&gt; （「\ u0030」）で表されます。それ以外の場合、符号なしマグニチュードの表現の最初の文字はゼロ文字にはなりません。文字 &lt;code&gt;'0'&lt;/code&gt; （ &lt;code&gt;'\u0030'&lt;/code&gt; ）および &lt;code&gt;'1'&lt;/code&gt; （ &lt;code&gt;'\u0031'&lt;/code&gt; ）は2進数として使用されます。</target>
        </trans-unit>
        <trans-unit id="c10c42689b734462a910f9cd90fb2d17103287f1" translate="yes" xml:space="preserve">
          <source>If the unsigned magnitude is zero, it is represented by a single zero character &lt;code&gt;'0'&lt;/code&gt; (&lt;code&gt;'\u0030'&lt;/code&gt;); otherwise, the first character of the representation of the unsigned magnitude will not be the zero character. The following characters are used as hexadecimal digits:</source>
          <target state="translated">符号なしの &lt;code&gt;'\u0030'&lt;/code&gt; 値がゼロの場合、単一のゼロ文字 &lt;code&gt;'0'&lt;/code&gt; （「\ u0030」）で表されます。それ以外の場合、符号なしマグニチュードの表現の最初の文字はゼロ文字にはなりません。次の文字が16進数として使用されます。</target>
        </trans-unit>
        <trans-unit id="f07ca050a4a81c4b683387f3c53d9089c379035d" translate="yes" xml:space="preserve">
          <source>If the unsigned magnitude is zero, it is represented by a single zero character &lt;code&gt;'0'&lt;/code&gt; (&lt;code&gt;'\u0030'&lt;/code&gt;); otherwise, the first character of the representation of the unsigned magnitude will not be the zero character. The following characters are used as octal digits:</source>
          <target state="translated">符号なしの &lt;code&gt;'\u0030'&lt;/code&gt; 値がゼロの場合、単一のゼロ文字 &lt;code&gt;'0'&lt;/code&gt; （「\ u0030」）で表されます。それ以外の場合、符号なしマグニチュードの表現の最初の文字はゼロ文字にはなりません。次の文字が8進数として使用されます。</target>
        </trans-unit>
        <trans-unit id="ffd8f31b308ededd50592fa98b7b8942dd2be329" translate="yes" xml:space="preserve">
          <source>If the user cancels the dialog, the returned attributes will not reflect any changes made by the user.</source>
          <target state="translated">ユーザーがダイアログをキャンセルした場合、返される属性にはユーザーによる変更は反映されません。</target>
        </trans-unit>
        <trans-unit id="cb6714e942d1212dc9686ac25a627707c330ee39" translate="yes" xml:space="preserve">
          <source>If the user cancels the dialog, the returned attributes will not reflect any changes made by the user. A typical basic usage of this method may be :</source>
          <target state="translated">ユーザがダイアログをキャンセルした場合、返される属性にはユーザによる変更は反映されません。このメソッドの典型的な基本的な使用法は次のようになります。</target>
        </trans-unit>
        <trans-unit id="7208f9f9b8096f5bc1e213faa64052c112ef12fa" translate="yes" xml:space="preserve">
          <source>If the user cancels the file dialog, then the method returns an empty array.</source>
          <target state="translated">ユーザがファイルダイアログをキャンセルした場合、このメソッドは空の配列を返します。</target>
        </trans-unit>
        <trans-unit id="de0b9944a16bfd19e85e0670561c553ba7b1eeb4" translate="yes" xml:space="preserve">
          <source>If the user doesn't select a drop action, the set of &lt;code&gt;DnDConstants&lt;/code&gt; that represents the set of drop actions supported by the drag source is searched for &lt;code&gt;DnDConstants.ACTION_MOVE&lt;/code&gt;, then for &lt;code&gt;DnDConstants.ACTION_COPY&lt;/code&gt;, then for &lt;code&gt;DnDConstants.ACTION_LINK&lt;/code&gt; and the</source>
          <target state="translated">ユーザーがドロップアクションを選択しない場合は、一連の &lt;code&gt;DnDConstants&lt;/code&gt; ドラッグソースでサポートされているドロップアクションのセットを表すために検索され &lt;code&gt;DnDConstants.ACTION_MOVE&lt;/code&gt; 、その後のため、 &lt;code&gt;DnDConstants.ACTION_COPY&lt;/code&gt; 、そのため &lt;code&gt;DnDConstants.ACTION_LINK&lt;/code&gt; と</target>
        </trans-unit>
        <trans-unit id="93c5fdab4572abcb9f84bc6e6f772f374b7d5ea5" translate="yes" xml:space="preserve">
          <source>If the user has previously selected an input method or keyboard layout for the requested locale from the user interface, then the most recently selected such input method or keyboard layout is reselected.</source>
          <target state="translated">要求されたロケールの入力方法やキーボードレイアウトをユーザが以前にユーザインタフェースから選択していた場合は、 最近選択した入力方法やキーボードレイアウトが再選択されます。</target>
        </trans-unit>
        <trans-unit id="0a3ff22bd71bfe0f9cb8dffa032e252c7a72a011" translate="yes" xml:space="preserve">
          <source>If the user provides an &lt;code&gt;RMIServerImpl&lt;/code&gt; rather than a &lt;code&gt;JMXServiceURL&lt;/code&gt;, then the generated &lt;code&gt;JMXServiceURL&lt;/code&gt; will have the local host name in its &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; part and no &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt;.</source>
          <target state="translated">ユーザーが提供した場合 &lt;code&gt;RMIServerImpl&lt;/code&gt; のではなく &lt;code&gt;JMXServiceURL&lt;/code&gt; 、その後、生成され &lt;code&gt;JMXServiceURL&lt;/code&gt; その中にローカルホスト名を持つことになります &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 部分なし &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c751f889067dd8cb1ad34d217d14ea94b60a4ea0" translate="yes" xml:space="preserve">
          <source>If the user selects a drop action, the</source>
          <target state="translated">ユーザーがドロップアクションを選択すると</target>
        </trans-unit>
        <trans-unit id="790177d5a2da0339061b07b0e2796a63d5c7bba4" translate="yes" xml:space="preserve">
          <source>If the user wants to represent more complex relations, involving properties and/or methods, he has to provide his own class implementing the Relation interface. This can be achieved either by inheriting from RelationSupport class, or by implementing the interface (fully or delegation to a RelationSupport object member).</source>
          <target state="translated">プロパティやメソッドを含む、より複雑な関係を表現したい場合は、 Relation インターフェースを実装した独自のクラスを用意しなければなりません。これは RelationSupport クラスを継承するか、 インターフェースを実装することで実現できます (完全に実装するか RelationSupport オブジェクトのメンバに委譲するか)。</target>
        </trans-unit>
        <trans-unit id="4e426a67bb1131fd615e1eb1f3e1e7dddce68bf0" translate="yes" xml:space="preserve">
          <source>If the value at the anchor index is not selected, do the same thing in reverse selecting values in the old range and deselecting values in the new one.</source>
          <target state="translated">アンカーインデックスの値が選択されていない場合は、古い範囲の値を選択し、新しい範囲の値を選択解除するという逆の方法で同じことを行います。</target>
        </trans-unit>
        <trans-unit id="2d22c3736384d8f57852c160122995e97ee6f65b" translate="yes" xml:space="preserve">
          <source>If the value cannot be obtained then an exception will be thrown. If the value is negative an exception will be thrown. If the field does not have a fixed set of valid values then an exception will be thrown. If the field value in the date-time to be printed is invalid it cannot be printed and an exception will be thrown.</source>
          <target state="translated">値を取得できない場合は例外がスローされます。値が負の場合は例外がスローされます。フィールドに有効な値が固定されていない場合は、例外がスローされます。印刷される日時のフィールド値が無効な場合は印刷できず、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="3d99b539ed5fff0ea996e5c36ef46a4ab0d55246" translate="yes" xml:space="preserve">
          <source>If the value does not represent a valid &lt;a href=&quot;../java.base/java/lang/runtime.version&quot;&gt;Java SE Platform version number&lt;/a&gt;, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee0cd8b8e0f022dac140b1064202354f2993085" translate="yes" xml:space="preserve">
          <source>If the value for the specified key is present and non-null, attempts to compute a new mapping given the key and its current mapped value.</source>
          <target state="translated">指定されたキーの値が存在し、かつ非ヌルである場合、キーとその現在のマップされた値を指定して新しいマッピングを計算しようとします。</target>
        </trans-unit>
        <trans-unit id="ecdf413c04b1da892ae0fa943003fe90e373d5c1" translate="yes" xml:space="preserve">
          <source>If the value for the specified key is present, attempts to compute a new mapping given the key and its current mapped value.</source>
          <target state="translated">指定されたキーの値が存在する場合、そのキーと現在のマップされた値を指定して新しいマッピングの計算を試みます。</target>
        </trans-unit>
        <trans-unit id="4b761882d9981acf5026d5923e5e847a58120eb7" translate="yes" xml:space="preserve">
          <source>If the value for the specified key is present, attempts to compute a new mapping given the key and its current mapped value. The entire method invocation is performed atomically. Some attempted update operations on this map by other threads may be blocked while computation is in progress, so the computation should be short and simple, and must not attempt to update any other mappings of this map.</source>
          <target state="translated">指定されたキーの値が存在する場合、そのキーと現在のマップされた値を指定して新しいマッピングの計算を試みます。メソッドの呼び出し全体がアトミックに実行されます。他のスレッドによるこのマップの更新操作の一部は、計算中にブロックされる可能性があるため、計算は短くシンプルであるべきであり、このマップの他のマッピングを更新しようとしてはなりません。</target>
        </trans-unit>
        <trans-unit id="ab9247f09f8a914d5d3a273cd57f46206435c082" translate="yes" xml:space="preserve">
          <source>If the value for the specified key is present, attempts to compute a new mapping given the key and its current mapped value. The entire method invocation is performed atomically. The supplied function is invoked exactly once per invocation of this method if the key is present, else not at all. Some attempted update operations on this map by other threads may be blocked while computation is in progress, so the computation should be short and simple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3db5a9e74f7891f194526ea0f347239e63fa2ef" translate="yes" xml:space="preserve">
          <source>If the value for the specified key is present, attempts to compute a new mapping given the key and its current mapped value. The function is &lt;em&gt;NOT&lt;/em&gt; guaranteed to be applied once atomically.</source>
          <target state="translated">指定されたキーの値が存在する場合、キーとその現在のマッピングされた値を指定して、新しいマッピングの計算を試みます。関数がアトミックに一度適用されることは保証されてい&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c5e8a168b387e1a676dd90915381d221d843a6ab" translate="yes" xml:space="preserve">
          <source>If the value in the designated column has a custom mapping, this method returns the name of the class that implements &lt;code&gt;SQLData&lt;/code&gt;. When the method &lt;code&gt;ResultSet.getObject&lt;/code&gt; is called to retrieve a value from the designated column, it will create an instance of this class or one of its subclasses.</source>
          <target state="translated">指定された列の値にカスタムマッピングがある場合、このメソッドは &lt;code&gt;SQLData&lt;/code&gt; を実装するクラスの名前を返します。指定された列から値を取得するためにメソッド &lt;code&gt;ResultSet.getObject&lt;/code&gt; が呼び出されると、このクラスまたはそのサブクラスの1つのインスタンスが作成されます。</target>
        </trans-unit>
        <trans-unit id="76a62dcfb0cff96625fd935bd1e2f63de3a120f6" translate="yes" xml:space="preserve">
          <source>If the value is 0, this means to wait indefinitely.</source>
          <target state="translated">値が0の場合、これは無期限に待機することを意味します。</target>
        </trans-unit>
        <trans-unit id="c7ba3202bd2d7e0d3d7e70603c207b47eb8a22d0" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;&quot;DEFLATED&quot;&lt;/code&gt; or the property is not set, the Zip file system provider will use data compression when writing entries to the Zip file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4915503ed46018ca7714a4810995361ec058bdf" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;&quot;STORED&quot;&lt;/code&gt;, the Zip file system provider will not compress entries when writing to the Zip file system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da17a5162837fd71057188c7c8f9d55cafe8683" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;&quot;runtime&quot;&lt;/code&gt;, the version entry will be determined by invoking &lt;a href=&quot;../java.base/java/lang/runtime.version#feature()&quot;&gt;Runtime.Version.feature()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de4492c54d50e85bf0da62b3577996044c41c74" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;non-null&lt;/code&gt;, it is returned. If the value of the default &lt;code&gt;&quot;AuditoryCues.actionMap&quot;&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and the value of the default &lt;code&gt;&quot;AuditoryCues.cueList&quot;&lt;/code&gt; is &lt;code&gt;non-null&lt;/code&gt;, an &lt;code&gt;ActionMapUIResource&lt;/code&gt; is created and populated. Population is done by iterating over each of the elements of the &lt;code&gt;&quot;AuditoryCues.cueList&quot;&lt;/code&gt; array, and invoking &lt;code&gt;createAudioAction()&lt;/code&gt; to create an &lt;code&gt;
 Action&lt;/code&gt; for each element. The resulting &lt;code&gt;Action&lt;/code&gt; is placed in the &lt;code&gt;ActionMapUIResource&lt;/code&gt;, using the array element as the key. For example, if the &lt;code&gt;
 &quot;AuditoryCues.cueList&quot;&lt;/code&gt; array contains a single-element, &lt;code&gt;
 &quot;audioKey&quot;&lt;/code&gt;, the &lt;code&gt;ActionMapUIResource&lt;/code&gt; is created, then populated by way of &lt;code&gt;actionMap.put(cueList[0],
 createAudioAction(cueList[0]))&lt;/code&gt;.</source>
          <target state="translated">値が &lt;code&gt;non-null&lt;/code&gt; 場合は、返されます。デフォルトの値ならば &lt;code&gt;&quot;AuditoryCues.actionMap&quot;&lt;/code&gt; され &lt;code&gt;null&lt;/code&gt; 、デフォルトの値 &lt;code&gt;&quot;AuditoryCues.cueList&quot;&lt;/code&gt; ある &lt;code&gt;non-null&lt;/code&gt; 、 &lt;code&gt;ActionMapUIResource&lt;/code&gt; 作成して移入されます。設定は、 &lt;code&gt;&quot;AuditoryCues.cueList&quot;&lt;/code&gt; 配列の各要素を反復処理し、 &lt;code&gt;createAudioAction()&lt;/code&gt; を呼び出して各要素の &lt;code&gt; Action&lt;/code&gt; を作成することによって行われます。結果の &lt;code&gt;Action&lt;/code&gt; は、配列要素をキーとして使用して、 &lt;code&gt;ActionMapUIResource&lt;/code&gt; に配置されます。たとえば、 &lt;code&gt; &quot;AuditoryCues.cueList&quot;&lt;/code&gt; 場合配列に単一要素 &lt;code&gt; &quot;audioKey&quot;&lt;/code&gt; が含まれている場合、 &lt;code&gt;ActionMapUIResource&lt;/code&gt; が作成され、 &lt;code&gt;actionMap.put(cueList[0], createAudioAction(cueList[0]))&lt;/code&gt; を介して入力されます。</target>
        </trans-unit>
        <trans-unit id="48f26593351b6f67f120030ffb29e742cf0e8005" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;null&lt;/code&gt; or the property is not set, then the JAR will be treated as an un-versioned JAR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f1ab8d6bcff2c595a675585e42d96731f03925" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;true&lt;/code&gt;, the Zip file system provider creates a new Zip or JAR file if it does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b9c97637681e9e7a63c9db0dc64ec2ca509020" translate="yes" xml:space="preserve">
          <source>If the value is &lt;code&gt;true&lt;/code&gt;, the Zip file system will support the &lt;a href=&quot;../java.base/java/nio/file/attribute/posixfileattributeview&quot;&gt;&lt;code&gt;PosixFileAttributeView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="301076cf0d84829c80ed3ada45bc0a362fb8a4d9" translate="yes" xml:space="preserve">
          <source>If the value is NaN or infinite, the literal strings &quot;NaN&quot; or &quot;Infinity&quot;, respectively, will be output.</source>
          <target state="translated">値がNaNまたは無限大の場合は、それぞれリテラル文字列 &quot;NaN &quot;または &quot;Infinity &quot;が出力されます。</target>
        </trans-unit>
        <trans-unit id="ab06ef8615a9271c661fe8e0122f8b8d95f1110e" translate="yes" xml:space="preserve">
          <source>If the value is NaN or positive infinity the literal strings &quot;NaN&quot; or &quot;Infinity&quot; respectively, will be output. If the value is negative infinity, then the output will be &quot;(Infinity)&quot; if the &lt;code&gt;'('&lt;/code&gt; flag is given otherwise the output will be &quot;-Infinity&quot;. These values are not localized.</source>
          <target state="translated">値がNaNまたは正の無限大の場合、リテラル文字列「NaN」または「Infinity」がそれぞれ出力されます。値が負の無限大の場合、 &lt;code&gt;'('&lt;/code&gt; フラグを指定すると出力は「（無限大）」になります。それ以外の場合、出力は「-無限大」になります。これらの値はローカライズされていません。</target>
        </trans-unit>
        <trans-unit id="0835f0832141e69a77792c43ed4cdb23fe77095b" translate="yes" xml:space="preserve">
          <source>If the value is a URN, the &lt;code&gt;href&lt;/code&gt; attribute is recognized as a &lt;code&gt;publicId&lt;/code&gt;, and used to search &lt;code&gt;public&lt;/code&gt; entries. If the value is a URI, it is taken as a &lt;code&gt;systemId&lt;/code&gt;, and used to search both &lt;code&gt;system&lt;/code&gt; and &lt;code&gt;uri&lt;/code&gt; entries.</source>
          <target state="translated">値がURNの場合、 &lt;code&gt;href&lt;/code&gt; 属性は &lt;code&gt;publicId&lt;/code&gt; として認識され、 &lt;code&gt;public&lt;/code&gt; エントリの検索に使用されます。値がURIの場合、それは &lt;code&gt;systemId&lt;/code&gt; と見なされ、 &lt;code&gt;system&lt;/code&gt; エントリと &lt;code&gt;uri&lt;/code&gt; エントリの両方を検索するために使用されます。</target>
        </trans-unit>
        <trans-unit id="a8386f5e063110a495ec4902ded50dbabab418fe" translate="yes" xml:space="preserve">
          <source>If the value is negative (or floating-point negative zero) and &lt;code&gt;'('&lt;/code&gt; flag is not given, then a &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002d'&lt;/code&gt;) is prepended.</source>
          <target state="translated">値が負（または浮動小数点の負のゼロ）であり、 &lt;code&gt;'('&lt;/code&gt; フラグが指定されていない場合は、 &lt;code&gt;'-'&lt;/code&gt; （ &lt;code&gt;'\u002d'&lt;/code&gt; ）が付加されます。</target>
        </trans-unit>
        <trans-unit id="6f6d817a3f4c5b41b572c9b2e4daf5c4281d9fee" translate="yes" xml:space="preserve">
          <source>If the value is negative and the &lt;code&gt;'('&lt;/code&gt; flag is given, then a &lt;code&gt;'('&lt;/code&gt; (&lt;code&gt;'\u0028'&lt;/code&gt;) is prepended and a &lt;code&gt;')'&lt;/code&gt; (&lt;code&gt;'\u0029'&lt;/code&gt;) is appended.</source>
          <target state="translated">値が負で、 &lt;code&gt;'('&lt;/code&gt; フラグが指定されている場合、 &lt;code&gt;'('&lt;/code&gt; （ &lt;code&gt;'\u0028'&lt;/code&gt; ）が前に付加され、 &lt;code&gt;')'&lt;/code&gt; （ &lt;code&gt;'\u0029'&lt;/code&gt; ）が付加されます。</target>
        </trans-unit>
        <trans-unit id="79c5db2353984efc6cb7e1c18940f5eb527e5ef9" translate="yes" xml:space="preserve">
          <source>If the value is negative, then it represents the number of days back from the end of the month where &lt;code&gt;-1&lt;/code&gt; is the last day of the month. In this case, the day identified is the latest possible date that the transition can be.</source>
          <target state="translated">値が負の場合は、月末からさかのぼって日数を表します。 &lt;code&gt;-1&lt;/code&gt; は月の最終日です。この場合、識別された日は、移行が可能な最も最近の日付です。</target>
        </trans-unit>
        <trans-unit id="f585bd91e3b9e65403bebed531867a10e356498c" translate="yes" xml:space="preserve">
          <source>If the value is not &lt;code&gt;&quot;STORED&quot;&lt;/code&gt; or &lt;code&gt;&quot;DEFLATED&quot;&lt;/code&gt;, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown when the Zip filesystem is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a221fc4de816cd6c7effceee4131da4c33e0f4df" translate="yes" xml:space="preserve">
          <source>If the value is not of the proper type, the attribute will be ignored.</source>
          <target state="translated">値が適切な型でない場合、その属性は無視されます。</target>
        </trans-unit>
        <trans-unit id="a89c880bd0c92196eb9e203f110acd320c2580c9" translate="yes" xml:space="preserve">
          <source>If the value is positive, then it represents a normal day-of-month, and is the earliest possible date that the transition can be. The date may refer to 29th February which should be treated as 1st March in non-leap years.</source>
          <target state="translated">値が正の場合、それは通常の月日を表しており、移行する可能性のある最も早い日付となります。日付は、うるう年以外の年では3月1日として扱われるべき2月29日を参照することができます。</target>
        </trans-unit>
        <trans-unit id="3334ef34b1cd3c138c012c02960e8363c7beb397" translate="yes" xml:space="preserve">
          <source>If the value is set to &lt;code&gt;true&lt;/code&gt;, then:</source>
          <target state="translated">値が &lt;code&gt;true&lt;/code&gt; に設定されている場合、次のようになります。</target>
        </trans-unit>
        <trans-unit id="e02310a0ea5559eabc6294ef56491025a14c4eb6" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;DISPLAYED_MNEMONIC_INDEX_KEY&lt;/code&gt; is beyond the bounds of the text, it is ignored. When &lt;code&gt;setAction&lt;/code&gt; is called, if the value from the &lt;code&gt;Action&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the displayed mnemonic index is not updated. In any subsequent changes to &lt;code&gt;DISPLAYED_MNEMONIC_INDEX_KEY&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; is treated as -1.</source>
          <target state="translated">&lt;code&gt;DISPLAYED_MNEMONIC_INDEX_KEY&lt;/code&gt; の値がテキストの範囲を超えている場合、それは無視されます。 &lt;code&gt;setAction&lt;/code&gt; が呼び出されたときに、 &lt;code&gt;Action&lt;/code&gt; の値が &lt;code&gt;null&lt;/code&gt; の場合、表示されたニーモニックインデックスは更新されません。その後の &lt;code&gt;DISPLAYED_MNEMONIC_INDEX_KEY&lt;/code&gt; の変更では、 &lt;code&gt;null&lt;/code&gt; は-1として扱われます。</target>
        </trans-unit>
        <trans-unit id="22c60f3a7542e4a41034dd5216a61c3aba7c36d9" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; for the given &lt;code&gt;Locale&lt;/code&gt; is a &lt;code&gt;Border&lt;/code&gt; return it, otherwise return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">値ならば &lt;code&gt;key&lt;/code&gt; 与えられたため &lt;code&gt;Locale&lt;/code&gt; ある &lt;code&gt;Border&lt;/code&gt; そう返し、それを返す &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eba252138c8090a37a788c71e19e8a3cb0276356" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; for the given &lt;code&gt;Locale&lt;/code&gt; is a &lt;code&gt;Color&lt;/code&gt; return it, otherwise return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">値ならば &lt;code&gt;key&lt;/code&gt; 与えられたため &lt;code&gt;Locale&lt;/code&gt; ある &lt;code&gt;Color&lt;/code&gt; そう返し、それを返す &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="367d8e2f0ca28a2ea644636137ef64c997bec18b" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; for the given &lt;code&gt;Locale&lt;/code&gt; is a &lt;code&gt;Dimension&lt;/code&gt; return it, otherwise return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">値ならば &lt;code&gt;key&lt;/code&gt; 与えられたため &lt;code&gt;Locale&lt;/code&gt; ある &lt;code&gt;Dimension&lt;/code&gt; それを返し、そうでない場合は返す &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2be0d9b17a5e47e7e93a2913690292ed9a69b7ff" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; for the given &lt;code&gt;Locale&lt;/code&gt; is a &lt;code&gt;Font&lt;/code&gt; return it, otherwise return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">値ならば &lt;code&gt;key&lt;/code&gt; 与えられたため &lt;code&gt;Locale&lt;/code&gt; ある &lt;code&gt;Font&lt;/code&gt; そう返し、それを返す &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c67916533b9dbb5dc83f598e1e6382427cd552f9" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; for the given &lt;code&gt;Locale&lt;/code&gt; is a &lt;code&gt;String&lt;/code&gt; return it, otherwise return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">値ならば &lt;code&gt;key&lt;/code&gt; 与えられたため &lt;code&gt;Locale&lt;/code&gt; ある &lt;code&gt;String&lt;/code&gt; そう返し、それを返す &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d2bfc7c723ba35a6fcf6c4b6137b4f780a0b3de" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; for the given &lt;code&gt;Locale&lt;/code&gt; is an &lt;code&gt;Icon&lt;/code&gt; return it, otherwise return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">値ならば &lt;code&gt;key&lt;/code&gt; 与えられたため &lt;code&gt;Locale&lt;/code&gt; ある &lt;code&gt;Icon&lt;/code&gt; そう返し、それを返す &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab2d62c2054fc3fa0f8b523b4eab33e78eb557e0" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; for the given &lt;code&gt;Locale&lt;/code&gt; is an &lt;code&gt;Insets&lt;/code&gt; return it, otherwise return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">値ならば &lt;code&gt;key&lt;/code&gt; 与えられたため &lt;code&gt;Locale&lt;/code&gt; ある &lt;code&gt;Insets&lt;/code&gt; それを返し、そうでない場合は返す &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0260b2e58bbf30b3665cb0865cc9a91961481c68" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; for the given &lt;code&gt;Locale&lt;/code&gt; is an &lt;code&gt;Integer&lt;/code&gt; return its integer value, otherwise return 0.</source>
          <target state="translated">値場合 &lt;code&gt;key&lt;/code&gt; 所与のために &lt;code&gt;Locale&lt;/code&gt; ある &lt;code&gt;Integer&lt;/code&gt; そうでなければ0を返す、その整数値を返します。</target>
        </trans-unit>
        <trans-unit id="a6474e2edb69dbe8cb6a10bd386064bfd71534a0" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; for the given &lt;code&gt;Locale&lt;/code&gt; is boolean, return the boolean value, otherwise return false.</source>
          <target state="translated">指定された &lt;code&gt;Locale&lt;/code&gt; &lt;code&gt;key&lt;/code&gt; の値がブール値の場合はブール値を返し、そうでない場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="1b6d5bd5fca8a25f1dd49217534639ed2ffe7fe4" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; is a &lt;code&gt;Border&lt;/code&gt; return it, otherwise return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">値ならば &lt;code&gt;key&lt;/code&gt; ある &lt;code&gt;Border&lt;/code&gt; 、それはリターン、そうでない場合は返す &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3be018e83c846fe1b30aea1f6bf6ccf6c10c541" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; is a &lt;code&gt;Color&lt;/code&gt; return it, otherwise return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">値ならば &lt;code&gt;key&lt;/code&gt; ある &lt;code&gt;Color&lt;/code&gt; 、それを返し、そうでない場合は返す &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c8b42e483eff7d7568eb7eb3163a2f5cbbf4c96" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; is a &lt;code&gt;Dimension&lt;/code&gt; return it, otherwise return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">値ならば &lt;code&gt;key&lt;/code&gt; ある &lt;code&gt;Dimension&lt;/code&gt; それを返し、そうでない場合は返す &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5785760f42f1977942d08aa328b366f8fc0db0e" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; is a &lt;code&gt;Font&lt;/code&gt; return it, otherwise return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">値ならば &lt;code&gt;key&lt;/code&gt; ある &lt;code&gt;Font&lt;/code&gt; を返し、そうでない場合は返す &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4141012d327f30dfb544d88d4209e96defccecb8" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; is a &lt;code&gt;String&lt;/code&gt; return it, otherwise return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">値ならば &lt;code&gt;key&lt;/code&gt; ある &lt;code&gt;String&lt;/code&gt; を返し、そうでない場合は返す &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ba848583bb0ce0d7c9675fd82c19e9dbc0309d4" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; is an &lt;code&gt;Icon&lt;/code&gt; return it, otherwise return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">値ならば &lt;code&gt;key&lt;/code&gt; ある &lt;code&gt;Icon&lt;/code&gt; にそれを返し、そうでない場合は返す &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eba09aea4ed9d543ab5701573b6ee8091b5b8904" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; is an &lt;code&gt;Insets&lt;/code&gt; return it, otherwise return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">値ならば &lt;code&gt;key&lt;/code&gt; ある &lt;code&gt;Insets&lt;/code&gt; それを返し、そうでない場合は返す &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5234ac47786667f30dde0ed0ff67d97ce01bff63" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; is an &lt;code&gt;Integer&lt;/code&gt; return its integer value, otherwise return 0.</source>
          <target state="translated">値場合に &lt;code&gt;key&lt;/code&gt; ある &lt;code&gt;Integer&lt;/code&gt; その整数値を返し、そうでなければ0を返します。</target>
        </trans-unit>
        <trans-unit id="f45a7d95af981044e17417d792efc75f1ad87858" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;key&lt;/code&gt; is boolean, return the boolean value, otherwise return false.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; の値がブール値の場合はブール値を返し、そうでない場合はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="43c44811372338e5d89625fd7f4ec1fe65b36ee4" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;load&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, then this method starts loading any images that are not yet being loaded.</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; の値が &lt;code&gt;true&lt;/code&gt; の場合、このメソッドはまだロードされていないすべてのイメージのロードを開始します。</target>
        </trans-unit>
        <trans-unit id="f6fe9c920cf87a3961283663010d0cc7faf04891" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;mode&lt;/code&gt; is &lt;code&gt;LOAD&lt;/code&gt;, then the file dialog is finding a file to read, and the files shown are those in the current directory. If the value of &lt;code&gt;mode&lt;/code&gt; is &lt;code&gt;SAVE&lt;/code&gt;, the file dialog is finding a place to write a file.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; の値が &lt;code&gt;LOAD&lt;/code&gt; の場合、ファイルダイアログは読み取るファイルを検索しており、表示されるファイルは現在のディレクトリにあるファイルです。 &lt;code&gt;mode&lt;/code&gt; の値が &lt;code&gt;SAVE&lt;/code&gt; の場合、ファイルダイアログはファイルを書き込む場所を見つけています。</target>
        </trans-unit>
        <trans-unit id="8a25b68c044cd0c1ec4edc8c60c29d6185e1c049" translate="yes" xml:space="preserve">
          <source>If the value of a field is not a String, then the toString() method will be called on it and the returned value, enclosed in parentheses, used as the value for the field in the returned array. If the value of a field is null, then the value of the field in the returned array will be empty. If the descriptor is empty, you will get an empty array.</source>
          <target state="translated">フィールドの値が String でない場合は、そのフィールドに対して toString()メソッドが呼び出され、括弧で囲まれた戻り値が、返される配列のフィールドの値として使用されます。フィールドの値が NULL の場合、返される配列のフィールドの値は空になります。記述子が空の場合は、空の配列を取得します。</target>
        </trans-unit>
        <trans-unit id="1efefa1818e57cc73d4ed09d390b1ca62795c0cf" translate="yes" xml:space="preserve">
          <source>If the value of a shorthand property can not be decomposed into its component longhand properties, as is the case for the &lt;code&gt;font&lt;/code&gt; property with a value of &quot;menu&quot;, querying for the values of the component longhand properties should return the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c88da9b0c956884891afc187b29ac9d1d3914af" translate="yes" xml:space="preserve">
          <source>If the value of that system property is not &lt;code&gt;null&lt;/code&gt;, it is interpreted as a list of packages separated by a vertical slash character '&lt;code&gt;|&lt;/code&gt;'. The constructor tries to load the class named:</source>
          <target state="translated">そのシステムプロパティの値が &lt;code&gt;null&lt;/code&gt; でない場合、垂直スラッシュ文字 ' &lt;code&gt;|&lt;/code&gt; で区切られたパッケージのリストとして解釈されます。'。コンストラクターは、次の名前のクラスをロードしようとします。</target>
        </trans-unit>
        <trans-unit id="189b2a483106b850cb5a3377c0425a501b7adcff" translate="yes" xml:space="preserve">
          <source>If the value of the &lt;code&gt;len&lt;/code&gt; parameter is negative then no characters are written. This is contrary to the specification of this method in the &lt;a href=&quot;writer#write-java.lang.String-int-int-&quot;&gt;superclass&lt;/a&gt;, which requires that an &lt;a href=&quot;../lang/indexoutofboundsexception&quot;&gt;&lt;code&gt;IndexOutOfBoundsException&lt;/code&gt;&lt;/a&gt; be thrown.</source>
          <target state="translated">値ならば &lt;code&gt;len&lt;/code&gt; パラメータが負で、その後何の文字が書かれていません。これは、&lt;a href=&quot;writer#write-java.lang.String-int-int-&quot;&gt;スーパークラス&lt;/a&gt;でのこのメソッドの仕様とは逆であり、&lt;a href=&quot;../lang/indexoutofboundsexception&quot;&gt; &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; をスロー&lt;/a&gt;する必要があります。</target>
        </trans-unit>
        <trans-unit id="8a175ebc49437ed81722116dff77ef058a7b66c3" translate="yes" xml:space="preserve">
          <source>If the value of the &lt;code&gt;load&lt;/code&gt; flag is &lt;code&gt;true&lt;/code&gt;, then this method starts loading any images that are not yet being loaded.</source>
          <target state="translated">&lt;code&gt;load&lt;/code&gt; フラグの値が &lt;code&gt;true&lt;/code&gt; の場合、このメソッドはまだロードされていないすべてのイメージのロードを開始します。</target>
        </trans-unit>
        <trans-unit id="b153c1760d762182820a11651725f26d981a5d3a" translate="yes" xml:space="preserve">
          <source>If the value of the &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;preferredWidth&lt;/code&gt; property is less than the new minimum width, this method sets that property to the new minimum width.</source>
          <target state="translated">&lt;code&gt;width&lt;/code&gt; または &lt;code&gt;preferredWidth&lt;/code&gt; プロパティの値が新しい最小幅よりも小さい場合、このメソッドはそのプロパティを新しい最小幅に設定します。</target>
        </trans-unit>
        <trans-unit id="d3222faa7f28cca7505e3db00febf3a73dfdf614" translate="yes" xml:space="preserve">
          <source>If the value of the &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;preferredWidth&lt;/code&gt; property is more than the new maximum width, this method sets that property to the new maximum width.</source>
          <target state="translated">&lt;code&gt;width&lt;/code&gt; または &lt;code&gt;preferredWidth&lt;/code&gt; プロパティの値が新しい最大幅より大きい場合、このメソッドはそのプロパティを新しい最大幅に設定します。</target>
        </trans-unit>
        <trans-unit id="1faf4afd4927c3eff93f389c43a673f5145f1898" translate="yes" xml:space="preserve">
          <source>If the value of the default &lt;code&gt;&quot;AuditoryCues.actionMap&quot;&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and the value of the default &lt;code&gt;&quot;AuditoryCues.cueList&quot;&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, an empty &lt;code&gt;ActionMapUIResource&lt;/code&gt; is created.</source>
          <target state="translated">デフォルトの値ならば &lt;code&gt;&quot;AuditoryCues.actionMap&quot;&lt;/code&gt; され &lt;code&gt;null&lt;/code&gt; 、デフォルトの値 &lt;code&gt;&quot;AuditoryCues.cueList&quot;&lt;/code&gt; である &lt;code&gt;null&lt;/code&gt; 、空 &lt;code&gt;ActionMapUIResource&lt;/code&gt; 作成されます。</target>
        </trans-unit>
        <trans-unit id="677e23258402aae540c1aad5d995a866d4b392f9" translate="yes" xml:space="preserve">
          <source>If the value of the system property is set to &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt; is converted to a &lt;a href=&quot;../nio/file/path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; object named &lt;code&gt;npath&lt;/code&gt; after &lt;a href=&quot;../nio/file/path#normalize()&quot;&gt;&lt;code&gt;normalization&lt;/code&gt;&lt;/a&gt;. No canonicalization is performed which means the underlying file system is not accessed. If an &lt;a href=&quot;../nio/file/invalidpathexception&quot;&gt;&lt;code&gt;InvalidPathException&lt;/code&gt;&lt;/a&gt; is thrown during the conversion, this &lt;code&gt;FilePermission&lt;/code&gt; will be labeled as invalid.</source>
          <target state="translated">システムプロパティの値が &lt;code&gt;false&lt;/code&gt; に設定されている場合、 &lt;code&gt;path&lt;/code&gt; は&lt;a href=&quot;../nio/file/path#normalize()&quot;&gt; &lt;code&gt;normalization&lt;/code&gt; &lt;/a&gt;後に &lt;code&gt;npath&lt;/code&gt; という名前の&lt;a href=&quot;../nio/file/path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;オブジェクトに変換されます。正規化は実行されません。これは、基盤となるファイルシステムにアクセスされないことを意味します。変換中に&lt;a href=&quot;../nio/file/invalidpathexception&quot;&gt; &lt;code&gt;InvalidPathException&lt;/code&gt; &lt;/a&gt;がスローされた場合、この &lt;code&gt;FilePermission&lt;/code&gt; は無効としてラベル付けされます。</target>
        </trans-unit>
        <trans-unit id="9d3cf19c572562cc39301cdc9457c2f8ef2d7a44" translate="yes" xml:space="preserve">
          <source>If the value of the system property is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt; is canonicalized and stored as a String object named &lt;code&gt;cpath&lt;/code&gt;. This means a relative path is converted to an absolute path, a Windows DOS-style 8.3 path is expanded to a long path, and a symbolic link is resolved to its target, etc.</source>
          <target state="translated">システムプロパティの値が &lt;code&gt;true&lt;/code&gt; に設定されている場合、 &lt;code&gt;path&lt;/code&gt; は正規化され、 &lt;code&gt;cpath&lt;/code&gt; という名前のStringオブジェクトとして格納されます。これは、相対パスが絶対パスに変換され、Windows DOSスタイルの8.3パスが長いパスに展開され、シンボリックリンクがそのターゲットに解決されることなどを意味します。</target>
        </trans-unit>
        <trans-unit id="9bbd078cde15abb1e52c1f5b43c7ab7eadad9320" translate="yes" xml:space="preserve">
          <source>If the value of this attribute specifies a date-time that is in the future, the printer should add the &lt;a href=&quot;jobstatereason&quot;&gt;&lt;code&gt;JobStateReason&lt;/code&gt;&lt;/a&gt; value of &lt;code&gt;JOB_HOLD_UNTIL_SPECIFIED&lt;/code&gt; to the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute, must move the job to the &lt;code&gt;PENDING_HELD&lt;/code&gt; state, and must not schedule the job for printing until the specified date-time arrives.</source>
          <target state="translated">この属性の値が将来の日時を指定する&lt;a href=&quot;jobstatereason&quot;&gt; &lt;code&gt;JobStateReason&lt;/code&gt; &lt;/a&gt;、プリンターは &lt;code&gt;JOB_HOLD_UNTIL_SPECIFIED&lt;/code&gt; のJobStateReason値をジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性に追加し、ジョブを &lt;code&gt;PENDING_HELD&lt;/code&gt; 状態に移動する必要があり、印刷用にジョブをスケジュールしないでください。指定された日時が到着します。</target>
        </trans-unit>
        <trans-unit id="3351a4cf5b5a7a09cdd906eb6fad0d706861c179" translate="yes" xml:space="preserve">
          <source>If the value of this attribute specifies a date-time that is in the future, the printer should add the &lt;a href=&quot;jobstatereason&quot;&gt;&lt;code&gt;JobStateReason&lt;/code&gt;&lt;/a&gt; value of JOB_HOLD_UNTIL_SPECIFIED to the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute, must move the job to the PENDING_HELD state, and must not schedule the job for printing until the specified date-time arrives.</source>
          <target state="translated">この属性の値が将来の日時を指定している場合、プリンターはJOB_HOLD_UNTIL_SPECIFIED の&lt;a href=&quot;jobstatereason&quot;&gt; &lt;code&gt;JobStateReason&lt;/code&gt; &lt;/a&gt;値をジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性に追加し、ジョブをPENDING_HELD状態に移動する必要があります。指定された日時が到着します。</target>
        </trans-unit>
        <trans-unit id="48a7960d847d0c7897f06eee9795f35f60cafa1b" translate="yes" xml:space="preserve">
          <source>If the value property of this instance is not already set, this method dynamically finds the method with the specified methodName on this target with these arguments and calls it.</source>
          <target state="translated">このインスタンスの value プロパティがまだ設定されていない場合、このメソッドは、これらの引数を持つこのターゲット上の指定された methodName を持つメソッドを動的に見つけ、それを呼び出します。</target>
        </trans-unit>
        <trans-unit id="fa55bedef91ce7d9c1fec0b52fe91e9615e15668" translate="yes" xml:space="preserve">
          <source>If the value property of this instance is not already set, this method dynamically finds the method with the specified methodName on this target with these arguments and calls it. The result of the method invocation is first copied into the value property of this expression and then returned as the result of &lt;code&gt;getValue&lt;/code&gt;. If the value property was already set, either by a call to &lt;code&gt;setValue&lt;/code&gt; or a previous call to &lt;code&gt;getValue&lt;/code&gt; then the value property is returned without either looking up or calling the method.</source>
          <target state="translated">このインスタンスのvalueプロパティがまだ設定されていない場合、このメソッドは、これらの引数を使用して、このターゲットで指定されたmethodNameを持つメソッドを動的に検索し、それを呼び出します。メソッド呼び出しの結果は、最初にこの式のvalueプロパティにコピーされ、次に &lt;code&gt;getValue&lt;/code&gt; の結果として返されます。 &lt;code&gt;setValue&lt;/code&gt; への呼び出しまたは &lt;code&gt;getValue&lt;/code&gt; への以前の呼び出しのいずれかによってvalueプロパティがすでに設定されている場合、valueプロパティは、メソッドを検索したり呼び出したりせずに返されます。</target>
        </trans-unit>
        <trans-unit id="a6f8f305677180b918ee9ef198861d8afd741517" translate="yes" xml:space="preserve">
          <source>If the value returned is not &lt;code&gt;null&lt;/code&gt;, it is a &lt;code&gt;Collection&lt;/code&gt; of names. Each name is a &lt;code&gt;String&lt;/code&gt; or a byte array representing a distinguished name (in RFC 2253 or ASN.1 DER encoded form, respectively). Note that the &lt;code&gt;Collection&lt;/code&gt; returned may contain duplicate names.</source>
          <target state="translated">返された値が &lt;code&gt;null&lt;/code&gt; でない場合、それは名前の &lt;code&gt;Collection&lt;/code&gt; です。各名前は、識別名を表す &lt;code&gt;String&lt;/code&gt; またはバイト配列です（それぞれRFC 2253またはASN.1 DERエンコード形式）。返される &lt;code&gt;Collection&lt;/code&gt; には重複した名前が含まれる場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d32dd70eeac4617e75643e7232c7906050d5b2bd" translate="yes" xml:space="preserve">
          <source>If the value returned is not &lt;code&gt;null&lt;/code&gt;, it is a &lt;code&gt;Collection&lt;/code&gt; with one entry for each name to be included in the pathToNames criterion. Each entry is a &lt;code&gt;List&lt;/code&gt; whose first entry is an &lt;code&gt;Integer&lt;/code&gt; (the name type, 0-8) and whose second entry is a &lt;code&gt;String&lt;/code&gt; or a byte array (the name, in string or ASN.1 DER encoded form, respectively). There can be multiple names of the same type. Note that the &lt;code&gt;Collection&lt;/code&gt; returned may contain duplicate names (same name and name type).</source>
          <target state="translated">返された値が &lt;code&gt;null&lt;/code&gt; でない場合は、pathToNames基準に含まれる名前ごとに1つのエントリを持つ &lt;code&gt;Collection&lt;/code&gt; です。各エントリは、最初のエントリが &lt;code&gt;Integer&lt;/code&gt; （名前のタイプ、0〜8）であり、2番目のエントリが &lt;code&gt;String&lt;/code&gt; またはバイト配列（それぞれ、文字列またはASN.1 DERエンコード形式の名前）である &lt;code&gt;List&lt;/code&gt; です。同じタイプの名前が複数存在する可能性があります。返される &lt;code&gt;Collection&lt;/code&gt; には重複した名前（同じ名前と名前タイプ）が含まれている場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d26bd3763c8755d23c2f1916d343c204ac5aaffe" translate="yes" xml:space="preserve">
          <source>If the value returned is not &lt;code&gt;null&lt;/code&gt;, it is a &lt;code&gt;Collection&lt;/code&gt; with one entry for each name to be included in the subject alternative name criterion. Each entry is a &lt;code&gt;List&lt;/code&gt; whose first entry is an &lt;code&gt;Integer&lt;/code&gt; (the name type, 0-8) and whose second entry is a &lt;code&gt;String&lt;/code&gt; or a byte array (the name, in string or ASN.1 DER encoded form, respectively). There can be multiple names of the same type. Note that the &lt;code&gt;Collection&lt;/code&gt; returned may contain duplicate names (same name and name type).</source>
          <target state="translated">返された値が &lt;code&gt;null&lt;/code&gt; でない場合、サブジェクトの別名基準に含まれる名前ごとに1つのエントリを持つ &lt;code&gt;Collection&lt;/code&gt; です。各エントリは、最初のエントリが &lt;code&gt;Integer&lt;/code&gt; （名前のタイプ、0〜8）であり、2番目のエントリが &lt;code&gt;String&lt;/code&gt; またはバイト配列（それぞれ、文字列またはASN.1 DERエンコード形式の名前）である &lt;code&gt;List&lt;/code&gt; です。同じタイプの名前が複数存在する可能性があります。返される &lt;code&gt;Collection&lt;/code&gt; には重複した名前（同じ名前と名前タイプ）が含まれている場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="174489e8b5c4498b78d97a375b5ea6bab3a43a71" translate="yes" xml:space="preserve">
          <source>If the value returned is not &lt;code&gt;null&lt;/code&gt;, it is a byte array containing a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure is supplied in the documentation for &lt;a href=&quot;#setIssuer(byte%5B%5D)&quot;&gt;&lt;code&gt;setIssuer(byte [] issuerDN)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返される値が &lt;code&gt;null&lt;/code&gt; でない場合は、X.501で定義されているように、DERでエンコードされた単一の識別名を含むバイト配列です。この構造のASN.1表記は、&lt;a href=&quot;#setIssuer(byte%5B%5D)&quot;&gt; &lt;code&gt;setIssuer(byte [] issuerDN)&lt;/code&gt; &lt;/a&gt;ドキュメントに記載されています。</target>
        </trans-unit>
        <trans-unit id="06d0b31d05f2e63feb86aed4d9a330fd81f56f90" translate="yes" xml:space="preserve">
          <source>If the value returned is not &lt;code&gt;null&lt;/code&gt;, it is a byte array containing a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure is supplied in the documentation for &lt;a href=&quot;#setSubject(byte%5B%5D)&quot;&gt;&lt;code&gt;setSubject(byte [] subjectDN)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返される値が &lt;code&gt;null&lt;/code&gt; でない場合は、X.501で定義されているように、DERでエンコードされた単一の識別名を含むバイト配列です。この構造のASN.1表記は、&lt;a href=&quot;#setSubject(byte%5B%5D)&quot;&gt; &lt;code&gt;setSubject(byte [] subjectDN)&lt;/code&gt; &lt;/a&gt;ドキュメントに記載されています。</target>
        </trans-unit>
        <trans-unit id="c2adc8f493111a0124aaa2df328143a9d50bda6b" translate="yes" xml:space="preserve">
          <source>If the value returned is not &lt;code&gt;null&lt;/code&gt;, it is a byte array containing a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure is supplied in the documentation for &lt;a href=&quot;x509certselector#setIssuer-byte:A-&quot;&gt;&lt;code&gt;setIssuer(byte [] issuerDN)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返された値が &lt;code&gt;null&lt;/code&gt; でない場合、X.501で定義されているように、DERエンコードされた単一の識別名を含むバイト配列です。この構造のASN.1表記は、&lt;a href=&quot;x509certselector#setIssuer-byte:A-&quot;&gt; &lt;code&gt;setIssuer(byte [] issuerDN)&lt;/code&gt; &lt;/a&gt;ドキュメントで提供されています。</target>
        </trans-unit>
        <trans-unit id="b5bfe0070c603a52728ff84ece5362c0b7ddae9b" translate="yes" xml:space="preserve">
          <source>If the value returned is not &lt;code&gt;null&lt;/code&gt;, it is a byte array containing a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure is supplied in the documentation for &lt;a href=&quot;x509certselector#setSubject-byte:A-&quot;&gt;&lt;code&gt;setSubject(byte [] subjectDN)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返された値が &lt;code&gt;null&lt;/code&gt; でない場合、X.501で定義されているように、DERエンコードされた単一の識別名を含むバイト配列です。この構造のASN.1表記は、&lt;a href=&quot;x509certselector#setSubject-byte:A-&quot;&gt; &lt;code&gt;setSubject(byte [] subjectDN)&lt;/code&gt; &lt;/a&gt;ドキュメントで提供されています。</target>
        </trans-unit>
        <trans-unit id="ce45de7cc21b8ac51cf0ba8fa224985e1d61a9e9" translate="yes" xml:space="preserve">
          <source>If the value returned is not &lt;code&gt;null&lt;/code&gt;, it is a distinguished name, in RFC 2253 format.</source>
          <target state="translated">返された値が &lt;code&gt;null&lt;/code&gt; でない場合は、RFC 2253形式の識別名です。</target>
        </trans-unit>
        <trans-unit id="5b8d5b4ce751bcbd27dc2db355066e723ecb44dc" translate="yes" xml:space="preserve">
          <source>If the value returned is not &lt;code&gt;null&lt;/code&gt;, it is a unmodifiable &lt;code&gt;Collection&lt;/code&gt; of &lt;code&gt;X500Principal&lt;/code&gt;s.</source>
          <target state="translated">返された値が &lt;code&gt;null&lt;/code&gt; でない場合、それは &lt;code&gt;X500Principal&lt;/code&gt; の変更不可能な &lt;code&gt;Collection&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6566f72aa07086a575c5856c5262b23d64492e56" translate="yes" xml:space="preserve">
          <source>If the value specified to this method is greater than the maximum length for the property the driver may either truncate the value and generate a warning or generate a &lt;code&gt;SQLClientInfoException&lt;/code&gt;. If the driver generates a &lt;code&gt;SQLClientInfoException&lt;/code&gt;, the value specified was not set on the connection.</source>
          <target state="translated">このメソッドに指定された値がプロパティの最大長よりも大きい場合、ドライバーは値を切り捨てて警告を生成するか、 &lt;code&gt;SQLClientInfoException&lt;/code&gt; を生成する可能性があります。ドライバが &lt;code&gt;SQLClientInfoException&lt;/code&gt; を生成する場合、指定された値は接続に設定されていません。</target>
        </trans-unit>
        <trans-unit id="751e6d0216d0808c1e052a74a279b7c68e16f026" translate="yes" xml:space="preserve">
          <source>If the value supplied is less than the current &lt;code&gt;minimum&lt;/code&gt; or greater than the current &lt;code&gt;maximum - visibleAmount&lt;/code&gt;, then either &lt;code&gt;minimum&lt;/code&gt; or &lt;code&gt;maximum - visibleAmount&lt;/code&gt; is substituted, as appropriate.</source>
          <target state="translated">指定された値が現在の &lt;code&gt;minimum&lt;/code&gt; よりも小さいか、現在の &lt;code&gt;maximum - visibleAmount&lt;/code&gt; ）よりも大きい場合は、 &lt;code&gt;minimum&lt;/code&gt; 応じて、最小値または &lt;code&gt;maximum - visibleAmount&lt;/code&gt; いずれかが置き換えられます。</target>
        </trans-unit>
        <trans-unit id="12fe3656fcca79e989b3edac8aeb79cce5390758" translate="yes" xml:space="preserve">
          <source>If the value supplied is less than the current minimum or greater than the current maximum, then one of those values is substituted, as appropriate.</source>
          <target state="translated">供給された値が現在の最小値よりも小さいか、または現在の最大値よりも大きい場合には、それらの値のいずれかが適宜置換される。</target>
        </trans-unit>
        <trans-unit id="0d365fd08bc1c9a61dd923fc4e345493754eacc1" translate="yes" xml:space="preserve">
          <source>If the values for all the longhand properties that compose a particular string are the initial values, then a string consisting of all the initial values should be returned (e.g. a &lt;code&gt;border-width&lt;/code&gt; value of &quot;medium&quot; should be returned as such, not as &quot;&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab17023ef639bf29e49c32902183016851239f29" translate="yes" xml:space="preserve">
          <source>If the values of the width and height arguments are both &lt;code&gt;-1&lt;/code&gt;, this method prepares the image for rendering on the default screen; otherwise, this method prepares an image for rendering on the default screen at the specified width and height.</source>
          <target state="translated">width引数とheight引数の値が両方とも &lt;code&gt;-1&lt;/code&gt; の場合、このメソッドはデフォルト画面でレンダリングするために画像を準備します。それ以外の場合、このメソッドは、指定された幅と高さでデフォルト画面にレンダリングするための画像を準備します。</target>
        </trans-unit>
        <trans-unit id="062fc19b785fff8baef488c9df986bc3034c7cd8" translate="yes" xml:space="preserve">
          <source>If the values of the width and height arguments are both &lt;code&gt;-1&lt;/code&gt;, this method returns the construction status of a screen representation of the specified image in this toolkit. Otherwise, this method returns the construction status of a scaled representation of the image at the specified width and height.</source>
          <target state="translated">width引数とheight引数の値が両方とも &lt;code&gt;-1&lt;/code&gt; の場合、このメソッドは、このツールキットで指定された画像の画面表現の構築ステータスを返します。それ以外の場合、このメソッドは、指定された幅と高さでの画像のスケーリングされた表現の構築ステータスを返します。</target>
        </trans-unit>
        <trans-unit id="31962e30b961885e15e6a668db59bf31ea069bcf" translate="yes" xml:space="preserve">
          <source>If the variable type is &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt; then atomic update access modes compare values using their bitwise representation (see &lt;a href=&quot;../float#floatToRawIntBits(float)&quot;&gt;&lt;code&gt;Float.floatToRawIntBits(float)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../double#doubleToRawLongBits(double)&quot;&gt;&lt;code&gt;Double.doubleToRawLongBits(double)&lt;/code&gt;&lt;/a&gt;, respectively).</source>
          <target state="translated">変数タイプが &lt;code&gt;float&lt;/code&gt; または &lt;code&gt;double&lt;/code&gt; の場合、アトミック更新アクセスモードはビット単位の表現を使用して値を比較します（それぞれ&lt;a href=&quot;../float#floatToRawIntBits(float)&quot;&gt; &lt;code&gt;Float.floatToRawIntBits(float)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../double#doubleToRawLongBits(double)&quot;&gt; &lt;code&gt;Double.doubleToRawLongBits(double)&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="f203f0949cc7b918d1e2d216ac08216e57175fa4" translate="yes" xml:space="preserve">
          <source>If the variable type is the non-integral &lt;code&gt;boolean&lt;/code&gt; type then a logical AND is performed instead of a bitwise AND.</source>
          <target state="translated">If the variable type is the non-integral &lt;code&gt;boolean&lt;/code&gt; type then a logical AND is performed instead of a bitwise AND.</target>
        </trans-unit>
        <trans-unit id="317918488b3cba82b42ec854abe818df328b4867" translate="yes" xml:space="preserve">
          <source>If the variable type is the non-integral &lt;code&gt;boolean&lt;/code&gt; type then a logical OR is performed instead of a bitwise OR.</source>
          <target state="translated">If the variable type is the non-integral &lt;code&gt;boolean&lt;/code&gt; type then a logical OR is performed instead of a bitwise OR.</target>
        </trans-unit>
        <trans-unit id="8f69ebca5baf035e2d13b6c96c1a80a913bdc9ac" translate="yes" xml:space="preserve">
          <source>If the variable type is the non-integral &lt;code&gt;boolean&lt;/code&gt; type then a logical XOR is performed instead of a bitwise XOR.</source>
          <target state="translated">If the variable type is the non-integral &lt;code&gt;boolean&lt;/code&gt; type then a logical XOR is performed instead of a bitwise XOR.</target>
        </trans-unit>
        <trans-unit id="49f80850c03dac4ccd69fe704a52eb909e453d10" translate="yes" xml:space="preserve">
          <source>If the view component of this layer implements &lt;a href=&quot;scrollable&quot;&gt;&lt;code&gt;Scrollable&lt;/code&gt;&lt;/a&gt;, this method delegates its implementation to the view component.</source>
          <target state="translated">If the view component of this layer implements &lt;a href=&quot;scrollable&quot;&gt; &lt;code&gt;Scrollable&lt;/code&gt; &lt;/a&gt;, this method delegates its implementation to the view component.</target>
        </trans-unit>
        <trans-unit id="e6056598d7fc6e1f9bab9fde45ff4e85d32b9431" translate="yes" xml:space="preserve">
          <source>If the view implements &lt;code&gt;Scrollable&lt;/code&gt; a combination of &lt;code&gt;getPreferredScrollableViewportSize&lt;/code&gt;, &lt;code&gt;getScrollableTracksViewportWidth&lt;/code&gt; and &lt;code&gt;getScrollableTracksViewportHeight&lt;/code&gt;is used, otherwise</source>
          <target state="translated">If the view implements &lt;code&gt;Scrollable&lt;/code&gt; a combination of &lt;code&gt;getPreferredScrollableViewportSize&lt;/code&gt; , &lt;code&gt;getScrollableTracksViewportWidth&lt;/code&gt; and &lt;code&gt;getScrollableTracksViewportHeight&lt;/code&gt; is used, otherwise</target>
        </trans-unit>
        <trans-unit id="6e8e8c7689ef325d78e889713b9aed6e71529da2" translate="yes" xml:space="preserve">
          <source>If the view's size hasn't been explicitly set, return the preferred size, otherwise return the view's current size.</source>
          <target state="translated">ビューのサイズが明示的に設定されていない場合は、優先されるサイズを返し、そうでない場合はビューの現在のサイズを返します。</target>
        </trans-unit>
        <trans-unit id="15a76a9f42e8b551caa02ec901e3cd32d7b99d18" translate="yes" xml:space="preserve">
          <source>If the view's size hasn't been explicitly set, return the preferred size, otherwise return the view's current size. If there is no view, return 0,0.</source>
          <target state="translated">ビューのサイズが明示的に設定されていない場合は、優先されるサイズを返し、そうでない場合はビューの現在のサイズを返します。ビューが存在しない場合は、0,0を返します。</target>
        </trans-unit>
        <trans-unit id="80fb55d57fa2a3783b757491a0aafb1381a47c58" translate="yes" xml:space="preserve">
          <source>If the viewport is obscured by an ancestor, stop and repaint the whole viewport.</source>
          <target state="translated">ビューポートが先祖によって見えなくなっている場合は、ビューポート全体を停止して塗り直します。</target>
        </trans-unit>
        <trans-unit id="ac85a1b5c14ea33446482faac76a04c937a42f22" translate="yes" xml:space="preserve">
          <source>If the visible amount supplied is less than &lt;code&gt;one&lt;/code&gt; or greater than the current &lt;code&gt;maximum - minimum&lt;/code&gt;, then either &lt;code&gt;one&lt;/code&gt; or &lt;code&gt;maximum - minimum&lt;/code&gt; is substituted, as appropriate.</source>
          <target state="translated">If the visible amount supplied is less than &lt;code&gt;one&lt;/code&gt; or greater than the current &lt;code&gt;maximum - minimum&lt;/code&gt; , then either &lt;code&gt;one&lt;/code&gt; or &lt;code&gt;maximum - minimum&lt;/code&gt; is substituted, as appropriate.</target>
        </trans-unit>
        <trans-unit id="c974944a24bc22bfa54c303b025a9e590bd03f10" translate="yes" xml:space="preserve">
          <source>If the visible row count is &amp;lt;= 0, the preferred height is dictated by the number of columns, which will be as many as can fit in the width of the &lt;code&gt;JList&lt;/code&gt; (width / max cell width), with at least one column. The preferred height then becomes the model size / number of columns * maximum cell height. Max cell height is either the fixed cell height, or is determined by iterating through all the cells to find the maximum height from the ListCellRenderer.</source>
          <target state="translated">If the visible row count is &amp;lt;= 0, the preferred height is dictated by the number of columns, which will be as many as can fit in the width of the &lt;code&gt;JList&lt;/code&gt; (width / max cell width), with at least one column. The preferred height then becomes the model size / number of columns * maximum cell height. Max cell height is either the fixed cell height, or is determined by iterating through all the cells to find the maximum height from the ListCellRenderer.</target>
        </trans-unit>
        <trans-unit id="5f5fba29ff007e49901e18f55046f0713af8526d" translate="yes" xml:space="preserve">
          <source>If the visible row count is greater than zero, the preferredHeight is the maximum cell height * adjustedRowCount. Where visibleRowCount is used to determine the number of columns. Because this lays out horizontally the number of rows is then determined from the column count. For example, lets say you have a model with 10 items and the visible row count is 8. The number of columns needed to display this is 2, but you no longer need 8 rows to display this, you only need 5, thus the adjustedRowCount is 5.</source>
          <target state="translated">可視行数が0より大きい場合、preferredHeightは最大セル高さ*adjustedRowCountです。ここで、visibleRowCountは列数を決定するために使用されます。これは水平方向にレイアウトされているため、行数は列数から決定されます。例えば、10個のアイテムを持つモデルがあり、可視行数が8であるとします。 これを表示するのに必要な列の数は2ですが、これを表示するのに8行はもはや必要ありません、5つだけ必要なので、adjustedRowCountは5です。</target>
        </trans-unit>
        <trans-unit id="af8f2aafa2c4ff83395f11d4e625de90952dbebf" translate="yes" xml:space="preserve">
          <source>If the visible row count is greater than zero, the preferredHeight is the maximum cell height * visibleRowCount. If the visible row count is &amp;lt;= 0, the preferred height is either the current height of the list, or the maximum cell height, whichever is bigger. The preferred width is than the maximum cell width * number of columns needed. Where the number of columns needs is list.height / max cell height. Max cell height is either the fixed cell height, or is determined by iterating through all the cells to find the maximum height from the ListCellRenderer.</source>
          <target state="translated">If the visible row count is greater than zero, the preferredHeight is the maximum cell height * visibleRowCount. If the visible row count is &amp;lt;= 0, the preferred height is either the current height of the list, or the maximum cell height, whichever is bigger. The preferred width is than the maximum cell width * number of columns needed. Where the number of columns needs is list.height / max cell height. Max cell height is either the fixed cell height, or is determined by iterating through all the cells to find the maximum height from the ListCellRenderer.</target>
        </trans-unit>
        <trans-unit id="bde030a57b155127406abe290ea916c308394ff9" translate="yes" xml:space="preserve">
          <source>If the voice is not currently processing a MIDI note, it is considered inactive. A voice is inactive when it has been given no note-on commands, or when every note-on command received has been terminated by a corresponding note-off (or by an &quot;all notes off&quot; message). For example, this happens when a synthesizer capable of playing 16 simultaneous notes is told to play a four-note chord; only four voices are active in this case (assuming no earlier notes are still playing). Usually, a voice whose status is reported as active is producing audible sound, but this is not always true; it depends on the details of the instrument (that is, the synthesis algorithm) and how long the note has been going on. For example, a voice may be synthesizing the sound of a single hand-clap. Because this sound dies away so quickly, it may become inaudible before a note-off message is received. In such a situation, the voice is still considered active even though no sound is currently being produced.</source>
          <target state="translated">ボイスが現在MIDIノートを処理していない場合、それは非アクティブと見なされます。ボイスが非アクティブなのは、ノートオンコマンドが与えられていない場合や、受信したすべてのノートオンコマンドが、対応するノートオフ(または &quot;all notes off &quot;メッセージ)によって終了している場合です。例えば、16音を同時に演奏できるシンセサイザーが4音のコードを演奏するように指示された場合、このようなことが起こります。この場合、4つの音色だけがアクティブになります(以前の音がまだ演奏されていないと仮定します)。通常、アクティブであると報告された音色は可聴音を出していますが、これは必ずしも正しいとは限りません。例えば、ある声は単一の手拍子の音を合成しているかもしれません。この音はすぐに消えてしまうため、ノートオフメッセージが受信される前に聞き取れなくなることがあります。このような状況では、現在何も音が出ていないにもかかわらず、音声はアクティブとみなされます。</target>
        </trans-unit>
        <trans-unit id="f1b51ec0e550c0c529f4869085fbe1c6f15be1a3" translate="yes" xml:space="preserve">
          <source>If the waiting thread wakes up without dispatching the event, the &lt;code&gt;isDispatched()&lt;/code&gt; method returns &lt;code&gt;false&lt;/code&gt;, and the &lt;code&gt;while&lt;/code&gt; loop executes once more, thus, causing the awakened thread to revert to the waiting mode.</source>
          <target state="translated">If the waiting thread wakes up without dispatching the event, the &lt;code&gt;isDispatched()&lt;/code&gt; method returns &lt;code&gt;false&lt;/code&gt; , and the &lt;code&gt;while&lt;/code&gt; loop executes once more, thus, causing the awakened thread to revert to the waiting mode.</target>
        </trans-unit>
        <trans-unit id="eea99a16ca9472ba7577a6286f0c99175c71b6e9" translate="yes" xml:space="preserve">
          <source>If the window and/or its owner are not displayable yet, both of them are made displayable before calculating the preferred size. The Window is validated after its size is being calculated.</source>
          <target state="translated">ウィンドウおよび/またはその所有者がまだ表示可能でない場合は、優先されるサイズを計算する前に両方とも表示可能にする。ウィンドウは、そのサイズが計算された後に検証されます。</target>
        </trans-unit>
        <trans-unit id="99602aee7fccb8c26815c6abd3610a017f32754c" translate="yes" xml:space="preserve">
          <source>If the window is secure, then &lt;code&gt;getWarningString&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;. If the window is insecure, this method checks for the system property &lt;code&gt;awt.appletWarning&lt;/code&gt; and returns the string value of that property.</source>
          <target state="translated">If the window is secure, then &lt;code&gt;getWarningString&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt; . If the window is insecure, this method checks for the system property &lt;code&gt;awt.appletWarning&lt;/code&gt; and returns the string value of that property.</target>
        </trans-unit>
        <trans-unit id="5a7732dc7a32e7541fda0d87428f498a5f17066e" translate="yes" xml:space="preserve">
          <source>If the windowing system supports the &lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSLUCENT&quot;&gt;&lt;code&gt;PERPIXEL_TRANSLUCENT&lt;/code&gt;&lt;/a&gt; translucency, the alpha component of the given background color may effect the mode of operation for this window: it indicates whether this window must be opaque (alpha equals &lt;code&gt;1.0f&lt;/code&gt;) or per-pixel translucent (alpha is less than &lt;code&gt;1.0f&lt;/code&gt;). If the given background color is &lt;code&gt;null&lt;/code&gt;, the window is considered completely opaque.</source>
          <target state="translated">If the windowing system supports the &lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSLUCENT&quot;&gt; &lt;code&gt;PERPIXEL_TRANSLUCENT&lt;/code&gt; &lt;/a&gt; translucency, the alpha component of the given background color may effect the mode of operation for this window: it indicates whether this window must be opaque (alpha equals &lt;code&gt;1.0f&lt;/code&gt; ) or per-pixel translucent (alpha is less than &lt;code&gt;1.0f&lt;/code&gt; ). If the given background color is &lt;code&gt;null&lt;/code&gt; , the window is considered completely opaque.</target>
        </trans-unit>
        <trans-unit id="653f1f40cfb615ca17661dd80259d388f697bee1" translate="yes" xml:space="preserve">
          <source>If the write lock is acquired by the current thread then the lock hold count is set to one.</source>
          <target state="translated">現在のスレッドが書き込みロックを取得した場合、ロックホールド数は1に設定されます。</target>
        </trans-unit>
        <trans-unit id="0805140ae31a0f4050f9a4cfea06b4f470819eca" translate="yes" xml:space="preserve">
          <source>If the write lock is acquired then the value &lt;code&gt;true&lt;/code&gt; is returned and the write lock hold count is set to one.</source>
          <target state="translated">書き込みロックが取得されると、値 &lt;code&gt;true&lt;/code&gt; が返され、書き込みロック保持カウントが1に設定されます。</target>
        </trans-unit>
        <trans-unit id="a07048d034065274e4ede5c8a84bad27f47aabea" translate="yes" xml:space="preserve">
          <source>If the write lock is held by another thread then the current thread becomes disabled for thread scheduling purposes and lies dormant until one of three things happens:</source>
          <target state="translated">書き込みロックが他のスレッドによって保持されている場合、現在のスレッドはスレッドスケジューリングのために無効化され、3つのうちの1つが起こるまで休止状態になります。</target>
        </trans-unit>
        <trans-unit id="74ef7c44b070eb1cc369e6589e8a1122f0468708" translate="yes" xml:space="preserve">
          <source>If the write lock is held by another thread then the current thread becomes disabled for thread scheduling purposes and lies dormant until one of two things happens:</source>
          <target state="translated">書き込みロックが他のスレッドによって保持されている場合、現在のスレッドはスレッドスケジューリングのために無効化され、次の2つのいずれかが起こるまで休止状態になります。</target>
        </trans-unit>
        <trans-unit id="4fbef50e47f6976d0537a04edb35c78320ba5006" translate="yes" xml:space="preserve">
          <source>If the write lock is held by another thread then the current thread becomes disabled for thread scheduling purposes and lies dormant until the read lock has been acquired.</source>
          <target state="translated">書き込みロックが他のスレッドによって保持されている場合、スレッドスケジューリングのために現在のスレッドは無効になり、読み込みロックが取得されるまで休止状態になります。</target>
        </trans-unit>
        <trans-unit id="30ab94fb63654ae631cd1d744ae39fbebb43dde7" translate="yes" xml:space="preserve">
          <source>If the write lock is held by another thread then this method will return immediately with the value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">書き込みロックが別のスレッドによって保持されている場合、このメソッドは値 &lt;code&gt;false&lt;/code&gt; ですぐに戻ります。</target>
        </trans-unit>
        <trans-unit id="7ef816b7e6153a6a58cc075b78ddfa153cbea13c" translate="yes" xml:space="preserve">
          <source>If the writer only offers a single, mandatory form of compression, it is not necessary to provide any named compression types. Named compression types should only be used where the user is able to make a meaningful choice between different schemes.</source>
          <target state="translated">ライターが単一の必須圧縮形式のみを提供する場合は、名前付き圧縮形式を提供する必要はありません。名前付き圧縮タイプは、ユーザが異なる方式の間で意味のある選択を行うことができる場合にのみ使用すべきである。</target>
        </trans-unit>
        <trans-unit id="3d7d2702baf6e372c2fd974b9ceb0e8765e0573d" translate="yes" xml:space="preserve">
          <source>If the years field is present, return its value as an &lt;code&gt;int&lt;/code&gt;, else return &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">If the years field is present, return its value as an &lt;code&gt;int&lt;/code&gt; , else return &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cb2436b74f4b1b03e972c41f1699a7b257b5b16" translate="yes" xml:space="preserve">
          <source>If the zone ID consists of a single letter, the zone ID is invalid and &lt;code&gt;DateTimeException&lt;/code&gt; is thrown.</source>
          <target state="translated">ゾーンIDが1文字で構成されている場合、ゾーンIDは無効であり、 &lt;code&gt;DateTimeException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="06d35c94a78d00be0bce80775b09f94dc2815e57" translate="yes" xml:space="preserve">
          <source>If the zone ID equals 'GMT', 'UTC' or 'UT' then the result is a &lt;code&gt;ZoneId&lt;/code&gt; with the same ID and rules equivalent to &lt;code&gt;ZoneOffset.UTC&lt;/code&gt;.</source>
          <target state="translated">ゾーンIDが「GMT」、「UTC」、または「UT」と等しい場合、結果は同じIDを持つ &lt;code&gt;ZoneId&lt;/code&gt; であり、ZoneOffset.UTCと同等のルール &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7be309d5b31d6d9fd94ee00c0bd12eacb646dab8" translate="yes" xml:space="preserve">
          <source>If the zone ID equals 'Z', the result is &lt;code&gt;ZoneOffset.UTC&lt;/code&gt;.</source>
          <target state="translated">ゾーンIDが「Z」の場合、結果は &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="87e6092693d13cc8dfc7ff32db6b3e49ec91630a" translate="yes" xml:space="preserve">
          <source>If the zone ID is a &lt;a href=&quot;zoneoffset&quot;&gt;&lt;code&gt;ZoneOffset&lt;/code&gt;&lt;/a&gt;, then the result always has a time of midnight.</source>
          <target state="translated">ゾーンIDが&lt;a href=&quot;zoneoffset&quot;&gt; &lt;code&gt;ZoneOffset&lt;/code&gt; の&lt;/a&gt;場合、結果は常に午前0時になります。</target>
        </trans-unit>
        <trans-unit id="4b48da9c9e601217a4f5ae92f654428afda6e1aa" translate="yes" xml:space="preserve">
          <source>If the zone ID is not available or is a &lt;code&gt;ZoneOffset&lt;/code&gt; then the format is complete.</source>
          <target state="translated">ゾーンIDが使用できないか、 &lt;code&gt;ZoneOffset&lt;/code&gt; である場合、フォーマットは完了です。</target>
        </trans-unit>
        <trans-unit id="cb96bf777d809e7b3490ab730d9c70ee13ec5673" translate="yes" xml:space="preserve">
          <source>If the zone ID starts with '+' or '-', the ID is parsed as a &lt;code&gt;ZoneOffset&lt;/code&gt; using &lt;a href=&quot;zoneoffset#of(java.lang.String)&quot;&gt;&lt;code&gt;ZoneOffset.of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If the zone ID starts with '+' or '-', the ID is parsed as a &lt;code&gt;ZoneOffset&lt;/code&gt; using &lt;a href=&quot;zoneoffset#of(java.lang.String)&quot;&gt; &lt;code&gt;ZoneOffset.of(String)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="87677aa24c82d7da48f53ccb0c5b3d24a805cbe9" translate="yes" xml:space="preserve">
          <source>If the zone ID starts with '+' or '-', the ID is parsed as a &lt;code&gt;ZoneOffset&lt;/code&gt; using &lt;a href=&quot;zoneoffset#of-java.lang.String-&quot;&gt;&lt;code&gt;ZoneOffset.of(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">「 - 」ゾーンIDは「+」またはで始まる場合、IDは、のように解析され &lt;code&gt;ZoneOffset&lt;/code&gt; 使用&lt;a href=&quot;zoneoffset#of-java.lang.String-&quot;&gt; &lt;code&gt;ZoneOffset.of(String)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="602223c8f8d238b617198cc90ea4b499d3a80171" translate="yes" xml:space="preserve">
          <source>If the zone ID starts with 'UTC+', 'UTC-', 'GMT+', 'GMT-', 'UT+' or 'UT-' then the ID is a prefixed offset-based ID. The ID is split in two, with a two or three letter prefix and a suffix starting with the sign. The suffix is parsed as a &lt;a href=&quot;zoneoffset#of(java.lang.String)&quot;&gt;&lt;code&gt;ZoneOffset&lt;/code&gt;&lt;/a&gt;. The result will be a &lt;code&gt;ZoneId&lt;/code&gt; with the specified UTC/GMT/UT prefix and the normalized offset ID as per &lt;a href=&quot;zoneoffset#getId()&quot;&gt;&lt;code&gt;ZoneOffset.getId()&lt;/code&gt;&lt;/a&gt;. The rules of the returned &lt;code&gt;ZoneId&lt;/code&gt; will be equivalent to the parsed &lt;code&gt;ZoneOffset&lt;/code&gt;.</source>
          <target state="translated">If the zone ID starts with 'UTC+', 'UTC-', 'GMT+', 'GMT-', 'UT+' or 'UT-' then the ID is a prefixed offset-based ID. The ID is split in two, with a two or three letter prefix and a suffix starting with the sign. The suffix is parsed as a &lt;a href=&quot;zoneoffset#of(java.lang.String)&quot;&gt; &lt;code&gt;ZoneOffset&lt;/code&gt; &lt;/a&gt;. The result will be a &lt;code&gt;ZoneId&lt;/code&gt; with the specified UTC/GMT/UT prefix and the normalized offset ID as per &lt;a href=&quot;zoneoffset#getId()&quot;&gt; &lt;code&gt;ZoneOffset.getId()&lt;/code&gt; &lt;/a&gt;. The rules of the returned &lt;code&gt;ZoneId&lt;/code&gt; will be equivalent to the parsed &lt;code&gt;ZoneOffset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1780773eff7ca92ecd4ba03a3e8ea655fd0b8589" translate="yes" xml:space="preserve">
          <source>If the zone ID starts with 'UTC+', 'UTC-', 'GMT+', 'GMT-', 'UT+' or 'UT-' then the ID is a prefixed offset-based ID. The ID is split in two, with a two or three letter prefix and a suffix starting with the sign. The suffix is parsed as a &lt;a href=&quot;zoneoffset#of-java.lang.String-&quot;&gt;&lt;code&gt;ZoneOffset&lt;/code&gt;&lt;/a&gt;. The result will be a &lt;code&gt;ZoneId&lt;/code&gt; with the specified UTC/GMT/UT prefix and the normalized offset ID as per &lt;a href=&quot;zoneoffset#getId--&quot;&gt;&lt;code&gt;ZoneOffset.getId()&lt;/code&gt;&lt;/a&gt;. The rules of the returned &lt;code&gt;ZoneId&lt;/code&gt; will be equivalent to the parsed &lt;code&gt;ZoneOffset&lt;/code&gt;.</source>
          <target state="translated">ゾーンIDが「UTC +」、「UTC-」、「GMT +」、「GMT-」、「UT +」、または「UT-」で始まる場合、IDは接頭辞付きのオフセットベースのIDです。 IDは2つに分割され、2つまたは3つの文字の接頭辞と接尾辞が符号で始まります。サフィックスは&lt;a href=&quot;zoneoffset#of-java.lang.String-&quot;&gt; &lt;code&gt;ZoneOffset&lt;/code&gt; &lt;/a&gt;として解析されます。結果は次のようになります &lt;code&gt;ZoneId&lt;/code&gt; 当たりとして指定UTC / GMT / UTプレフィックス正規化オフセットIDと&lt;a href=&quot;zoneoffset#getId--&quot;&gt; &lt;code&gt;ZoneOffset.getId()&lt;/code&gt; &lt;/a&gt;。返される &lt;code&gt;ZoneId&lt;/code&gt; のルールは、解析された &lt;code&gt;ZoneOffset&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="41b8bc898e51c548630ae4313953f5a0179fbf8d" translate="yes" xml:space="preserve">
          <source>If the zone cannot be parsed then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">ゾーンを解析できない場合は、フォーマッタのセクションがオプションでない限り例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="716de69875ef09bdf51d065ceec30a6b7a11919e" translate="yes" xml:space="preserve">
          <source>If the zone defines daylight savings into the future, then the list will normally be of size two and hold information about entering and exiting daylight savings. If the zone does not have daylight savings, or information about future changes is uncertain, then the list will be empty.</source>
          <target state="translated">ゾーンが将来に向けてサマータイムを定義している場合、リストのサイズは通常2であり、サマータイムの開始と終了に関する情報を保持する。ゾーンにサマータイムを設定していない場合、または将来の変更に関する情報が不明な場合、リストは空となる。</target>
        </trans-unit>
        <trans-unit id="a223a21923ebbbeb7ae1d7b22472f2e489ded7a7" translate="yes" xml:space="preserve">
          <source>If there are any calendar fields whose values haven't been set in the selected field combination, &lt;code&gt;Calendar&lt;/code&gt; uses their default values. The default value of each field may vary by concrete calendar systems. For example, in &lt;code&gt;GregorianCalendar&lt;/code&gt;, the default of a field is the same as that of the start of the Epoch: i.e., &lt;code&gt;YEAR = 1970&lt;/code&gt;, &lt;code&gt;MONTH =
 JANUARY&lt;/code&gt;, &lt;code&gt;DAY_OF_MONTH = 1&lt;/code&gt;, etc.</source>
          <target state="translated">選択したフィールドの組み合わせで値が設定されていないカレンダーフィールドがある場合、 &lt;code&gt;Calendar&lt;/code&gt; はデフォルト値を使用します。各フィールドのデフォルト値は、具体的なカレンダーシステムによって異なる場合があります。たとえば、 &lt;code&gt;GregorianCalendar&lt;/code&gt; では、フィールドのデフォルトはエポックの開始時と同じです。つまり、 &lt;code&gt;YEAR = 1970&lt;/code&gt; 、 &lt;code&gt;MONTH = JANUARY&lt;/code&gt; 、 &lt;code&gt;DAY_OF_MONTH = 1&lt;/code&gt; などです。</target>
        </trans-unit>
        <trans-unit id="2f3668df86278c8a1e88d94210aa98ee6165c605" translate="yes" xml:space="preserve">
          <source>If there are any previously existing preferences that conflict with the preference being set here, then the GSSManager should ignore this request.</source>
          <target state="translated">ここで設定されているプリファレンスと競合する既存のプリファレンスがある場合、GSSManagerはこの要求を無視する必要があります。</target>
        </trans-unit>
        <trans-unit id="74ff37baa980c0a61132f301ce21852b4bc130d4" translate="yes" xml:space="preserve">
          <source>If there are bytes following the module descriptor then it is implementation specific as to whether those bytes are read, ignored, or reported as an &lt;code&gt;InvalidModuleDescriptorException&lt;/code&gt;. If this method fails with an &lt;code&gt;InvalidModuleDescriptorException&lt;/code&gt; or &lt;code&gt;
 IOException&lt;/code&gt; then it may do so after some, but not all, bytes have been read from the input stream. It is strongly recommended that the stream be promptly closed and discarded if an exception occurs.</source>
          <target state="translated">If there are bytes following the module descriptor then it is implementation specific as to whether those bytes are read, ignored, or reported as an &lt;code&gt;InvalidModuleDescriptorException&lt;/code&gt; . If this method fails with an &lt;code&gt;InvalidModuleDescriptorException&lt;/code&gt; or &lt;code&gt; IOException&lt;/code&gt; then it may do so after some, but not all, bytes have been read from the input stream. It is strongly recommended that the stream be promptly closed and discarded if an exception occurs.</target>
        </trans-unit>
        <trans-unit id="92b113a4ce2494a131747fc911a67441d1d05a57" translate="yes" xml:space="preserve">
          <source>If there are bytes following the module descriptor then it is implementation specific as to whether those bytes are read, ignored, or reported as an &lt;code&gt;InvalidModuleDescriptorException&lt;/code&gt;. If this method fails with an &lt;code&gt;InvalidModuleDescriptorException&lt;/code&gt; then it may do so after some, but not all, bytes have been read.</source>
          <target state="translated">If there are bytes following the module descriptor then it is implementation specific as to whether those bytes are read, ignored, or reported as an &lt;code&gt;InvalidModuleDescriptorException&lt;/code&gt; . If this method fails with an &lt;code&gt;InvalidModuleDescriptorException&lt;/code&gt; then it may do so after some, but not all, bytes have been read.</target>
        </trans-unit>
        <trans-unit id="e1f64fb5716e07724c0a7d48c0a02647c58da231" translate="yes" xml:space="preserve">
          <source>If there are conflicts or overlaps between the information provided by different &lt;code&gt;BeanInfo&lt;/code&gt; objects, the current &lt;code&gt;BeanInfo&lt;/code&gt; object takes priority over the additional &lt;code&gt;BeanInfo&lt;/code&gt; objects. Array elements with higher indices take priority over the elements with lower indices.</source>
          <target state="translated">異なる &lt;code&gt;BeanInfo&lt;/code&gt; オブジェクトによって提供される情報の間に競合または重複がある場合、現在の &lt;code&gt;BeanInfo&lt;/code&gt; オブジェクトが追加の &lt;code&gt;BeanInfo&lt;/code&gt; オブジェクトよりも優先されます。高いインデックスを持つ配列要素は、低いインデックスを持つ要素よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="530a00d062bd6f003dc671b04ddaa979158f274f" translate="yes" xml:space="preserve">
          <source>If there are different resources for different countries, you can make specializations: for example, &quot;MyResources_de_CH&quot; contains objects for the German language (de) in Switzerland (CH). If you want to only modify some of the resources in the specialization, you can do so.</source>
          <target state="translated">例えば、「MyResources_de_CH」にはスイス(CH)のドイツ語(de)のオブジェクトが含まれています。例えば、「MyResources_de_CH」にはスイス(CH)にあるドイツ語(de)のオブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="43c5f52ef558689fc38e846808ccf12921cc7008" translate="yes" xml:space="preserve">
          <source>If there are mnemonic names to be associated with the legal data values for the tag, &lt;a href=&quot;#addValueName(int,java.lang.String)&quot;&gt;&lt;code&gt;addValueName()&lt;/code&gt;&lt;/a&gt; should be called on the new instance for each name. Mnemonic names apply only to tags which have integral data type.</source>
          <target state="translated">If there are mnemonic names to be associated with the legal data values for the tag, &lt;a href=&quot;#addValueName(int,java.lang.String)&quot;&gt; &lt;code&gt;addValueName()&lt;/code&gt; &lt;/a&gt; should be called on the new instance for each name. Mnemonic names apply only to tags which have integral data type.</target>
        </trans-unit>
        <trans-unit id="0a003779b8a649ef8cb40c3f51dd00ab52590b8c" translate="yes" xml:space="preserve">
          <source>If there are more arguments than format specifiers, the extra arguments are ignored.</source>
          <target state="translated">フォーマット指定子よりも多くの引数がある場合、余分な引数は無視されます。</target>
        </trans-unit>
        <trans-unit id="af82728ab0f3eefda7b3d99ca5d34ea41f8be9f9" translate="yes" xml:space="preserve">
          <source>If there are more than one node in the actual result, the single node returned might not be the first in document order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3bf8d2720860eb61e319f9623619d679a6a03d2" translate="yes" xml:space="preserve">
          <source>If there are more than one node in the actual result, the single node returned will be the first in document order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb195b2b9fae2539cd1155fb241509f69b8a781" translate="yes" xml:space="preserve">
          <source>If there are multiple compression types but none has been set, an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown.</source>
          <target state="translated">複数の圧縮タイプがあっても設定されていない &lt;code&gt;IllegalStateException&lt;/code&gt; は、IllegalStateExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="768dcb3e70295dbb108fd5dd725293766667ea22" translate="yes" xml:space="preserve">
          <source>If there are multiple runs of text, information about the runs can be accessed by indexing to get the start, limit, and level of a run. The level represents both the direction and the 'nesting level' of a directional run. Odd levels are right-to-left, while even levels are left-to-right. So for example level 0 represents left-to-right text, while level 1 represents right-to-left text, and level 2 represents left-to-right text embedded in a right-to-left run.</source>
          <target state="translated">テキストの実行が複数ある場合、インデックスを作成することで、実行に関する情報にアクセスして、実行の開始、制限、レベルを取得することができます。レベルは、方向性のある実行の方向と「入れ子レベル」の両方を表します。奇数レベルは右から左に、偶数レベルは左から右になります。例えば、レベル0は左から右へのテキストを表し、レベル1は右から左へのテキストを表し、レベル2は右から左へのランに埋め込まれた左から右へのテキストを表します。</target>
        </trans-unit>
        <trans-unit id="95fa2c7c9d03744e4ab294e05332429d827cf658" translate="yes" xml:space="preserve">
          <source>If there are multiple text directions present in the associated document, a flag indicating the caret bias will be rendered. This will occur only if the associated document is a subclass of AbstractDocument and there are multiple bidi levels present in the bidi element structure (i.e. the text has multiple directions associated with it).</source>
          <target state="translated">関連づけられた文書内に複数のテキスト方向が存在する場合には、キャレットバイアスを示すフラグが表示されます。これは、関連付けられた文書がAbstractDocumentのサブクラスであり、bidi要素構造の中に複数のbidiレベルが存在する場合にのみ発生します(すなわち、テキストには複数の方向が関連付けられています)。</target>
        </trans-unit>
        <trans-unit id="8a6ca385a1344a83e96b59363dfacd7ef2452f9f" translate="yes" xml:space="preserve">
          <source>If there are native methods in the call stack at the time of the exception, there are important restrictions to note about the returned catch location. In such cases, it is not possible to predict whether an exception will be handled by some native method on the call stack. Thus, it is possible that exceptions considered uncaught here will, in fact, be handled by a native method and not cause termination of the target VM. Furthermore, it cannot be assumed that the catch location returned here will ever be reached by the throwing thread. If there is a native frame between the current location and the catch location, the exception might be handled and cleared in that native method instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91aa0c8a84bbac8b5804b3100754fe9bb7d1dcbe" translate="yes" xml:space="preserve">
          <source>If there are no bytes buffered on the socket, and the socket has not been closed using &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt;, then &lt;a href=&quot;../io/inputstream#available()&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt; will return &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">If there are no bytes buffered on the socket, and the socket has not been closed using &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;, then &lt;a href=&quot;../io/inputstream#available()&quot;&gt; &lt;code&gt;available&lt;/code&gt; &lt;/a&gt; will return &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3fd8782c948e6644afcfe2c7b88c23640ca646b" translate="yes" xml:space="preserve">
          <source>If there are no bytes buffered on the socket, and the socket has not been closed using &lt;a href=&quot;socket#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt;, then &lt;a href=&quot;../io/inputstream#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt; will return &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">ソケットにバッファリングされたバイトがなく、ソケットが&lt;a href=&quot;socket#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;を使用して閉じられていない場合、&lt;a href=&quot;../io/inputstream#available--&quot;&gt; &lt;code&gt;available&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;0&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="899f5685138aa94e92de9d02a27528d96a112601" translate="yes" xml:space="preserve">
          <source>If there are no bytes buffered on the socket, or all buffered bytes have been consumed by &lt;a href=&quot;../io/inputstream#read()&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;, then all subsequent calls to &lt;a href=&quot;../io/inputstream#read()&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; will throw an &lt;a href=&quot;../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If there are no bytes buffered on the socket, or all buffered bytes have been consumed by &lt;a href=&quot;../io/inputstream#read()&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;, then all subsequent calls to &lt;a href=&quot;../io/inputstream#read()&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; will throw an &lt;a href=&quot;../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="70808ff13ea15a635fe9933aa430b40622465ff0" translate="yes" xml:space="preserve">
          <source>If there are no bytes buffered on the socket, or all buffered bytes have been consumed by &lt;a href=&quot;../io/inputstream#read--&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;, then all subsequent calls to &lt;a href=&quot;../io/inputstream#read--&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; will throw an &lt;a href=&quot;../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ソケットにバッファリングされたバイトがない場合、またはバッファリングされたすべてのバイトが&lt;a href=&quot;../io/inputstream#read--&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;によって消費された&lt;a href=&quot;../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;、それ以降のすべての&lt;a href=&quot;../io/inputstream#read--&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;呼び出しはIOExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="d97fea5e3b07fef354727bb8ea01358071cedc12" translate="yes" xml:space="preserve">
          <source>If there are no fields in the descriptor, then an empty String is returned.</source>
          <target state="translated">記述子にフィールドがない場合は、空のStringが返されます。</target>
        </trans-unit>
        <trans-unit id="a5d1f0a062afbc6cda49f87f90c8e9a1acb2dd5c" translate="yes" xml:space="preserve">
          <source>If there are no fini functions, the loop return type is &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">If there are no fini functions, the loop return type is &lt;code&gt;void&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="452463b6bb8122e8d19b3e5165c3baa6dd891166" translate="yes" xml:space="preserve">
          <source>If there are no originating elements, none need to be passed. This information may be used in an incremental environment to determine the need to rerun processors or remove generated files. Non-incremental environments may ignore the originating element information.</source>
          <target state="translated">原点となる要素がない場合は、何も渡す必要はありません。この情報は、インクリメンタル環境でプロセッサの再実行や生成ファイルの削除の必要性を判断するために使用されることがあります。インクリメンタル環境以外の環境では、元になる要素の情報を無視してもよい。</target>
        </trans-unit>
        <trans-unit id="2d1b6e296a2b77ef070997fd74f624d1c0686a93" translate="yes" xml:space="preserve">
          <source>If there are no parameters, no formatter is used.</source>
          <target state="translated">パラメータがない場合、フォーマッタは使用されません。</target>
        </trans-unit>
        <trans-unit id="256816c6b5677c8691bdb94b6765ccbc5f24a09f" translate="yes" xml:space="preserve">
          <source>If there are several such threads, the bootstrap method may be invoked in several threads concurrently. Therefore, bootstrap methods which access global application data must take the usual precautions against race conditions. In any case, every &lt;code&gt;invokedynamic&lt;/code&gt; instruction is either unlinked or linked to a unique &lt;code&gt;CallSite&lt;/code&gt; object.</source>
          <target state="translated">そのようなスレッドが複数ある場合は、ブートストラップメソッドを複数のスレッドで同時に呼び出すことができます。したがって、グローバルアプリケーションデータにアクセスするブートストラップメソッドは、競合状態に対して通常の予防策を講じる必要があります。いずれの場合も、すべての &lt;code&gt;invokedynamic&lt;/code&gt; 命令は、リンク解除されるか、一意の &lt;code&gt;CallSite&lt;/code&gt; オブジェクトにリンクされます。</target>
        </trans-unit>
        <trans-unit id="19df7c3245481a0b870f8b690f97116f667d21a7" translate="yes" xml:space="preserve">
          <source>If there are specialization prefixes for all arguments, the arity prefix may be left out (as in &lt;a href=&quot;objintconsumer&quot;&gt;&lt;code&gt;ObjIntConsumer&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">すべての引数に特殊化接頭辞がある場合、arity接頭辞は&lt;a href=&quot;objintconsumer&quot;&gt; &lt;code&gt;ObjIntConsumer&lt;/code&gt; &lt;/a&gt;できます（ObjIntConsumerの場合など）。</target>
        </trans-unit>
        <trans-unit id="5496a27b9238a94964b622c624cac4a711b3706d" translate="yes" xml:space="preserve">
          <source>If there are two sets of quotes, a specific begin-quote must be matched by its corresponding end-quote.</source>
          <target state="translated">2つの引用符のセットがある場合、特定の開始引用符は、対応する終了引用符と一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="f6d2e2287b3f940a2108e0447a31bf2c4dae6c7e" translate="yes" xml:space="preserve">
          <source>If there is a &lt;a href=&quot;linkageerror&quot;&gt;linkage error&lt;/a&gt; accessing the nest host, or if this class or interface is not enumerated as a member of the nest by the nest host, then it is considered to belong to its own nest and &lt;code&gt;this&lt;/code&gt; is returned as the host.</source>
          <target state="translated">If there is a &lt;a href=&quot;linkageerror&quot;&gt;linkage error&lt;/a&gt; accessing the nest host, or if this class or interface is not enumerated as a member of the nest by the nest host, then it is considered to belong to its own nest and &lt;code&gt;this&lt;/code&gt; is returned as the host.</target>
        </trans-unit>
        <trans-unit id="60fe5e1f14261b51420b2f4800ed45295f2b7b43" translate="yes" xml:space="preserve">
          <source>If there is a &lt;code&gt;Filter&lt;/code&gt;, its &lt;code&gt;isLoggable&lt;/code&gt; method is called to check if the given log record is loggable. If not we return. Otherwise the given record is copied into an internal circular buffer. Then the record's level property is compared with the &lt;code&gt;pushLevel&lt;/code&gt;. If the given level is greater than or equal to the &lt;code&gt;pushLevel&lt;/code&gt; then &lt;code&gt;push&lt;/code&gt; is called to write all buffered records to the target output &lt;code&gt;Handler&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Filter&lt;/code&gt; がある場合、その &lt;code&gt;isLoggable&lt;/code&gt; メソッドが呼び出されて、指定されたログレコードがロギング可能かどうかを確認します。そうでない場合は戻ります。それ以外の場合、指定されたレコードは内部循環バッファーにコピーされます。次に、レコードのlevelプロパティが &lt;code&gt;pushLevel&lt;/code&gt; と比較されます。所与のレベルが以上の場合 &lt;code&gt;pushLevel&lt;/code&gt; 次に &lt;code&gt;push&lt;/code&gt; 目標出力にすべての緩衝レコードを書き込むために呼び出される &lt;code&gt;Handler&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5dab46b4549ff2feda5be50fc66d249aaffc422" translate="yes" xml:space="preserve">
          <source>If there is a &lt;code&gt;ParseException&lt;/code&gt; in converting the current value to a String, this will set the text to an empty String, and mark the &lt;code&gt;JFormattedTextField&lt;/code&gt; as being in an invalid state.</source>
          <target state="translated">If there is a &lt;code&gt;ParseException&lt;/code&gt; in converting the current value to a String, this will set the text to an empty String, and mark the &lt;code&gt;JFormattedTextField&lt;/code&gt; as being in an invalid state.</target>
        </trans-unit>
        <trans-unit id="8264923428e93189de3d9488f3d02a8d83fd11ec" translate="yes" xml:space="preserve">
          <source>If there is a character stream specified, the SAX parser will ignore any byte stream and will not attempt to open a URI connection to the system identifier.</source>
          <target state="translated">文字ストリームが指定されている場合、SAX パーサはバイトストリームを無視し、システム識別子への URI 接続を開こうとしません。</target>
        </trans-unit>
        <trans-unit id="41cf28f3b00327296b2da5a55e1ed9b510e74f92" translate="yes" xml:space="preserve">
          <source>If there is a charset definition specified as a parameter of the content type specification, it will be used when loading input streams using the associated &lt;code&gt;EditorKit&lt;/code&gt;. For example if the type is specified as &lt;code&gt;text/html; charset=EUC-JP&lt;/code&gt; the content will be loaded using the &lt;code&gt;EditorKit&lt;/code&gt; registered for &lt;code&gt;text/html&lt;/code&gt; and the Reader provided to the &lt;code&gt;EditorKit&lt;/code&gt; to load unicode into the document will use the &lt;code&gt;EUC-JP&lt;/code&gt; charset for translating to unicode. If the type is not recognized, the content will be loaded using the &lt;code&gt;EditorKit&lt;/code&gt; registered for plain text, &lt;code&gt;text/plain&lt;/code&gt;.</source>
          <target state="translated">If there is a charset definition specified as a parameter of the content type specification, it will be used when loading input streams using the associated &lt;code&gt;EditorKit&lt;/code&gt; . For example if the type is specified as &lt;code&gt;text/html; charset=EUC-JP&lt;/code&gt; the content will be loaded using the &lt;code&gt;EditorKit&lt;/code&gt; registered for &lt;code&gt;text/html&lt;/code&gt; and the Reader provided to the &lt;code&gt;EditorKit&lt;/code&gt; to load unicode into the document will use the &lt;code&gt;EUC-JP&lt;/code&gt; charset for translating to unicode. If the type is not recognized, the content will be loaded using the &lt;code&gt;EditorKit&lt;/code&gt; registered for plain text, &lt;code&gt;text/plain&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e0a6d33db9099e5da02b63b1c08b711314ed1070" translate="yes" xml:space="preserve">
          <source>If there is a current output stream then the &lt;code&gt;Formatter&lt;/code&gt;'s tail string is written and the stream is flushed and closed. Then the output stream is replaced with the new output stream.</source>
          <target state="translated">現在の出力ストリームがある場合、 &lt;code&gt;Formatter&lt;/code&gt; のテール文字列が書き込まれ、ストリームがフラッシュされて閉じられます。次に、出力ストリームが新しい出力ストリームに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="360eb0e694f70b9c0d8a6d2539b8b95168589f9b" translate="yes" xml:space="preserve">
          <source>If there is a language tag which matches completely to a language range above, the language tag is returned.</source>
          <target state="translated">上記の言語範囲に完全に一致する言語タグがあれば、その言語タグを返します。</target>
        </trans-unit>
        <trans-unit id="7fe9d5f4f323a99adea908fdeaf0c559a2234dc4" translate="yes" xml:space="preserve">
          <source>If there is a positive entry that grants a principal a particular permission, and a negative entry that denies the principal the same permission, the result is as though the permission was never granted or denied.</source>
          <target state="translated">ある校長に特定の許可を与える正のエントリがあり、同じ許可を拒否する負のエントリがある場合、その結果は、許可が与えられなかったか、または拒否されなかったかのようになります。</target>
        </trans-unit>
        <trans-unit id="b820edb0cd4651acfa98bad6a1adbcc5b12aee0a" translate="yes" xml:space="preserve">
          <source>If there is a public subclass representing the type of &lt;code&gt;XMLStructure&lt;/code&gt;, it is returned as an instance of that class (ex: a &lt;code&gt;SignatureProperties&lt;/code&gt; element would be returned as an instance of &lt;a href=&quot;signatureproperties&quot;&gt;&lt;code&gt;SignatureProperties&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">If there is a public subclass representing the type of &lt;code&gt;XMLStructure&lt;/code&gt; , it is returned as an instance of that class (ex: a &lt;code&gt;SignatureProperties&lt;/code&gt; element would be returned as an instance of &lt;a href=&quot;signatureproperties&quot;&gt; &lt;code&gt;SignatureProperties&lt;/code&gt; &lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="9a0ac9d4b223e6ba398b5c03bdbdea908d2e6008" translate="yes" xml:space="preserve">
          <source>If there is a public subclass representing the type of &lt;code&gt;XMLStructure&lt;/code&gt;, it is returned as an instance of that class (ex: an &lt;code&gt;X509Data&lt;/code&gt; element would be returned as an instance of &lt;a href=&quot;x509data&quot;&gt;&lt;code&gt;X509Data&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">If there is a public subclass representing the type of &lt;code&gt;XMLStructure&lt;/code&gt; , it is returned as an instance of that class (ex: an &lt;code&gt;X509Data&lt;/code&gt; element would be returned as an instance of &lt;a href=&quot;x509data&quot;&gt; &lt;code&gt;X509Data&lt;/code&gt; &lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="7d2642219ae6689a90935a889cec5cc47e6b73a4" translate="yes" xml:space="preserve">
          <source>If there is a security manager already installed, this method first calls the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with a &lt;code&gt;RuntimePermission(&quot;setSecurityManager&quot;)&lt;/code&gt; permission to ensure it's ok to replace the existing security manager. This may result in throwing a &lt;code&gt;SecurityException&lt;/code&gt;.</source>
          <target state="translated">すでにセキュリティマネージャーがインストールされている場合、このメソッドは最初に、 &lt;code&gt;RuntimePermission(&quot;setSecurityManager&quot;)&lt;/code&gt; 権限を使用してセキュリティマネージャーの &lt;code&gt;checkPermission&lt;/code&gt; メソッドを呼び出し、既存のセキュリティマネージャーを置き換えても問題がないことを確認します。これにより、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="34d939280196d74fc1d1d34c5817d26280f87f75" translate="yes" xml:space="preserve">
          <source>If there is a security manager already installed, this method first calls the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with the &lt;code&gt;RuntimePermission(&quot;createSecurityManager&quot;)&lt;/code&gt; permission to ensure the calling thread has permission to create a new security manager. This may result in throwing a &lt;code&gt;SecurityException&lt;/code&gt;.</source>
          <target state="translated">すでにセキュリティマネージャーがインストールされている場合、このメソッドはまず、 &lt;code&gt;RuntimePermission(&quot;createSecurityManager&quot;)&lt;/code&gt; 権限を使用してセキュリティマネージャーの &lt;code&gt;checkPermission&lt;/code&gt; メソッドを呼び出し、呼び出し元のスレッドに新しいセキュリティマネージャーを作成する権限があることを確認します。これにより、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="5672428ce2d0310db13a3f85f67e993338e8598a" translate="yes" xml:space="preserve">
          <source>If there is a security manager and &lt;code&gt;host&lt;/code&gt; is not null and &lt;code&gt;host.length() &lt;/code&gt; is not equal to zero, the security manager's &lt;code&gt;checkConnect&lt;/code&gt; method is called with the hostname and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed.</source>
          <target state="translated">セキュリティーマネージャーがあり、 &lt;code&gt;host&lt;/code&gt; がnullではなく、 &lt;code&gt;host.length() &lt;/code&gt; がゼロでない場合、操作が許可されているかどうかを確認するために、セキュリティーマネージャーの &lt;code&gt;checkConnect&lt;/code&gt; メソッドがホスト名と &lt;code&gt;-1&lt;/code&gt; を引数として呼び出されます。</target>
        </trans-unit>
        <trans-unit id="aa68b021538f0471826642ff3267e740630d422f" translate="yes" xml:space="preserve">
          <source>If there is a security manager and this lookup does not have &lt;a href=&quot;#hasFullPrivilegeAccess()&quot;&gt;full privilege access&lt;/a&gt;, its &lt;code&gt;checkPermission&lt;/code&gt; method is first called to check &lt;code&gt;RuntimePermission(&quot;defineClass&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5ff852f368770ab762748f1c19d1dda73aa1db" translate="yes" xml:space="preserve">
          <source>If there is a security manager installed, it can forbid the lookup on various grounds (&lt;a href=&quot;methodhandles.lookup#secmgr&quot;&gt;see below&lt;/a&gt;). By contrast, the &lt;code&gt;ldc&lt;/code&gt; instruction on a &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; constant is not subject to security manager checks.</source>
          <target state="translated">セキュリティマネージャがインストールされている場合、さまざまな理由でルックアップが禁止される可能性があります（&lt;a href=&quot;methodhandles.lookup#secmgr&quot;&gt;以下を参照&lt;/a&gt;）。対照的に、 &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; 定数の &lt;code&gt;ldc&lt;/code&gt; 命令は、セキュリティマネージャーチェックの対象ではありません。</target>
        </trans-unit>
        <trans-unit id="b156cc02a90506f8eb9b81ce87ad4e2f4f5e01f7" translate="yes" xml:space="preserve">
          <source>If there is a security manager installed, its &lt;code&gt;checkAccess&lt;/code&gt; method is called with &lt;code&gt;this&lt;/code&gt; as its argument. This may result in a &lt;code&gt;SecurityException&lt;/code&gt; being raised (in the current thread).</source>
          <target state="translated">セキュリティマネージャーがインストールされている場合、その &lt;code&gt;checkAccess&lt;/code&gt; メソッドは、 &lt;code&gt;this&lt;/code&gt; を引数として呼び出されます。これにより、（現在のスレッドで） &lt;code&gt;SecurityException&lt;/code&gt; が発生する場合があります。</target>
        </trans-unit>
        <trans-unit id="5128105dcb411eeec7bd98eb31dc6c9f32f36396" translate="yes" xml:space="preserve">
          <source>If there is a security manager installed, this method first calls the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with a &lt;code&gt;SerializablePermission(&quot;enableSubclassImplementation&quot;)&lt;/code&gt; permission to ensure it's ok to enable subclassing.</source>
          <target state="translated">セキュリティマネージャがインストールされている場合、このメソッドは最初に &lt;code&gt;SerializablePermission(&quot;enableSubclassImplementation&quot;)&lt;/code&gt; アクセス許可を使用してセキュリティマネージャの &lt;code&gt;checkPermission&lt;/code&gt; メソッドを呼び出し、サブクラス化を有効にしても問題ないことを確認します。</target>
        </trans-unit>
        <trans-unit id="31761f6c70fa775cd9eb51012f53c8d7db6b5b68" translate="yes" xml:space="preserve">
          <source>If there is a security manager installed, this method first calls the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with the &lt;code&gt;SerializablePermission(&quot;enableSubclassImplementation&quot;)&lt;/code&gt; permission to ensure it's ok to enable subclassing.</source>
          <target state="translated">セキュリティマネージャーがインストールされている場合、このメソッドは最初に &lt;code&gt;SerializablePermission(&quot;enableSubclassImplementation&quot;)&lt;/code&gt; アクセス許可を使用してセキュリティマネージャーの &lt;code&gt;checkPermission&lt;/code&gt; メソッドを呼び出し、サブクラス化を有効にしても問題ないことを確認します。</target>
        </trans-unit>
        <trans-unit id="d92f5c22aaa435017a22a7870a8799131bb3b4bf" translate="yes" xml:space="preserve">
          <source>If there is a security manager set then its &lt;a href=&quot;../../../java.base/java/lang/securitymanager#checkRead(java.io.FileDescriptor)&quot;&gt;&lt;code&gt;checkRead&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../java.base/java/lang/securitymanager#checkWrite(java.io.FileDescriptor)&quot;&gt;&lt;code&gt;checkWrite&lt;/code&gt;&lt;/a&gt; methods are invoked to check that the caller has permission to both read from and write to the file descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e92b1005890b8e36b5a3e3ec1d22670527621dc" translate="yes" xml:space="preserve">
          <source>If there is a security manager set then its &lt;a href=&quot;../securitymanager#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method is invoked to check that the caller has been granted &lt;a href=&quot;../runtimepermission&quot;&gt;&lt;code&gt;RuntimePermission(&quot;accessSystemModules&quot;)&lt;/code&gt;&lt;/a&gt; to access the system modules.</source>
          <target state="translated">If there is a security manager set then its &lt;a href=&quot;../securitymanager#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt; method is invoked to check that the caller has been granted &lt;a href=&quot;../runtimepermission&quot;&gt; &lt;code&gt;RuntimePermission(&quot;accessSystemModules&quot;)&lt;/code&gt; &lt;/a&gt; to access the system modules.</target>
        </trans-unit>
        <trans-unit id="3db3bf435e3205478cee741a5d2c93114bf55e60" translate="yes" xml:space="preserve">
          <source>If there is a security manager set, and this socket is &lt;a href=&quot;#isBound()&quot;&gt;bound&lt;/a&gt;, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the local address and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, an &lt;code&gt;InetAddress&lt;/code&gt; representing the &lt;a href=&quot;inetaddress#getLoopbackAddress()&quot;&gt;&lt;code&gt;loopback&lt;/code&gt;&lt;/a&gt; address is returned as the implementation address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86d00a2babbd52f7023cffa0fd1499e014ec134" translate="yes" xml:space="preserve">
          <source>If there is a security manager set, it is invoked to check &lt;code&gt;AWTPermission(&quot;showWindowWithoutWarningBanner&quot;)&lt;/code&gt;. If that check fails with a &lt;code&gt;SecurityException&lt;/code&gt; then a warning banner is created.</source>
          <target state="translated">If there is a security manager set, it is invoked to check &lt;code&gt;AWTPermission(&quot;showWindowWithoutWarningBanner&quot;)&lt;/code&gt; . If that check fails with a &lt;code&gt;SecurityException&lt;/code&gt; then a warning banner is created.</target>
        </trans-unit>
        <trans-unit id="64d3f1b6faeb8fe10d38810363c8cc48f8921c9d" translate="yes" xml:space="preserve">
          <source>If there is a security manager set, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the local address and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, a &lt;code&gt;SocketAddress&lt;/code&gt; representing the &lt;a href=&quot;../../net/inetaddress#getLoopbackAddress()&quot;&gt;&lt;code&gt;loopback&lt;/code&gt;&lt;/a&gt; address and the local port of the channel's socket is returned.</source>
          <target state="translated">If there is a security manager set, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the local address and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, a &lt;code&gt;SocketAddress&lt;/code&gt; representing the &lt;a href=&quot;../../net/inetaddress#getLoopbackAddress()&quot;&gt; &lt;code&gt;loopback&lt;/code&gt; &lt;/a&gt; address and the local port of the channel's socket is returned.</target>
        </trans-unit>
        <trans-unit id="efeea28b8db5bdbdbe7665022456615ea9a2a02a" translate="yes" xml:space="preserve">
          <source>If there is a security manager set, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the local address and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, a &lt;code&gt;SocketAddress&lt;/code&gt; representing the &lt;a href=&quot;../../net/inetaddress#getLoopbackAddress--&quot;&gt;&lt;code&gt;loopback&lt;/code&gt;&lt;/a&gt; address and the local port of the channel's socket is returned.</source>
          <target state="translated">セキュリティーマネージャーが設定されている場合、ローカルのアドレスと &lt;code&gt;-1&lt;/code&gt; を引数として &lt;code&gt;checkConnect&lt;/code&gt; メソッドが呼び出され、操作が許可されているかどうかが確認されます。操作が許可されていない場合、&lt;a href=&quot;../../net/inetaddress#getLoopbackAddress--&quot;&gt; &lt;code&gt;loopback&lt;/code&gt; &lt;/a&gt;アドレスとチャネルのソケットのローカルポートを表す &lt;code&gt;SocketAddress&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="314e1e1967331821237d640541c5b0e1313b59bd" translate="yes" xml:space="preserve">
          <source>If there is a security manager set, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the local address and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, a &lt;code&gt;SocketAddress&lt;/code&gt; representing the &lt;a href=&quot;inetaddress#getLoopbackAddress()&quot;&gt;&lt;code&gt;loopback&lt;/code&gt;&lt;/a&gt; address and the local port to which the socket is bound is returned.</source>
          <target state="translated">If there is a security manager set, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the local address and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, a &lt;code&gt;SocketAddress&lt;/code&gt; representing the &lt;a href=&quot;inetaddress#getLoopbackAddress()&quot;&gt; &lt;code&gt;loopback&lt;/code&gt; &lt;/a&gt; address and the local port to which the socket is bound is returned.</target>
        </trans-unit>
        <trans-unit id="c7de07e801ccd99c1e04407e222cb2fc9764b11a" translate="yes" xml:space="preserve">
          <source>If there is a security manager set, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the local address and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, a &lt;code&gt;SocketAddress&lt;/code&gt; representing the &lt;a href=&quot;inetaddress#getLoopbackAddress()&quot;&gt;&lt;code&gt;loopback&lt;/code&gt;&lt;/a&gt; address and the local port to which this socket is bound is returned.</source>
          <target state="translated">If there is a security manager set, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the local address and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, a &lt;code&gt;SocketAddress&lt;/code&gt; representing the &lt;a href=&quot;inetaddress#getLoopbackAddress()&quot;&gt; &lt;code&gt;loopback&lt;/code&gt; &lt;/a&gt; address and the local port to which this socket is bound is returned.</target>
        </trans-unit>
        <trans-unit id="bd4504e52760544f5802fe95b384c420e8994a88" translate="yes" xml:space="preserve">
          <source>If there is a security manager set, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the local address and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, a &lt;code&gt;SocketAddress&lt;/code&gt; representing the &lt;a href=&quot;inetaddress#getLoopbackAddress--&quot;&gt;&lt;code&gt;loopback&lt;/code&gt;&lt;/a&gt; address and the local port to which the socket is bound is returned.</source>
          <target state="translated">セキュリティーマネージャーが設定されている場合、ローカルのアドレスと &lt;code&gt;-1&lt;/code&gt; を引数として &lt;code&gt;checkConnect&lt;/code&gt; メソッドが呼び出され、操作が許可されているかどうかが確認されます。操作が許可されていない場合、&lt;a href=&quot;inetaddress#getLoopbackAddress--&quot;&gt; &lt;code&gt;loopback&lt;/code&gt; &lt;/a&gt;アドレスとソケットがバインドされているローカルポートを表す &lt;code&gt;SocketAddress&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="3e9d7c04bc4d0c36452207dc47930704ce6c96d6" translate="yes" xml:space="preserve">
          <source>If there is a security manager set, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the local address and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, a &lt;code&gt;SocketAddress&lt;/code&gt; representing the &lt;a href=&quot;inetaddress#getLoopbackAddress--&quot;&gt;&lt;code&gt;loopback&lt;/code&gt;&lt;/a&gt; address and the local port to which this socket is bound is returned.</source>
          <target state="translated">セキュリティーマネージャーが設定されている場合、ローカルのアドレスと &lt;code&gt;-1&lt;/code&gt; を引数として &lt;code&gt;checkConnect&lt;/code&gt; メソッドが呼び出され、操作が許可されているかどうかが確認されます。操作が許可されていない場合、&lt;a href=&quot;inetaddress#getLoopbackAddress--&quot;&gt; &lt;code&gt;loopback&lt;/code&gt; &lt;/a&gt;アドレスとこのソケットがバインドされているローカルポートを表す &lt;code&gt;SocketAddress&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="d707ade497c4fb2f188d76f169d44a01ba531e6e" translate="yes" xml:space="preserve">
          <source>If there is a security manager set, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the local address and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, an &lt;code&gt;InetAddress&lt;/code&gt; representing the &lt;a href=&quot;inetaddress#getLoopbackAddress()&quot;&gt;&lt;code&gt;loopback&lt;/code&gt;&lt;/a&gt; address is returned as the implementation address.</source>
          <target state="translated">If there is a security manager set, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the local address and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, an &lt;code&gt;InetAddress&lt;/code&gt; representing the &lt;a href=&quot;inetaddress#getLoopbackAddress()&quot;&gt; &lt;code&gt;loopback&lt;/code&gt; &lt;/a&gt; address is returned as the implementation address.</target>
        </trans-unit>
        <trans-unit id="d2186903b27dd0e412d3c41bc56df02edfa54b96" translate="yes" xml:space="preserve">
          <source>If there is a security manager set, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the local address and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, an &lt;code&gt;InetAddress&lt;/code&gt; representing the &lt;a href=&quot;inetaddress#getLoopbackAddress--&quot;&gt;&lt;code&gt;loopback&lt;/code&gt;&lt;/a&gt; address is returned as the implementation address.</source>
          <target state="translated">セキュリティーマネージャーが設定されている場合、ローカルのアドレスと &lt;code&gt;-1&lt;/code&gt; を引数として &lt;code&gt;checkConnect&lt;/code&gt; メソッドが呼び出され、操作が許可されているかどうかが確認されます。操作が許可されていない場合、&lt;a href=&quot;inetaddress#getLoopbackAddress--&quot;&gt; &lt;code&gt;loopback&lt;/code&gt; &lt;/a&gt;アドレスを表す &lt;code&gt;InetAddress&lt;/code&gt; が実装アドレスとして返されます。</target>
        </trans-unit>
        <trans-unit id="b7859548d6fe21c1371c700ba9e5a16a116554b8" translate="yes" xml:space="preserve">
          <source>If there is a security manager set, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the local address and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, the &lt;a href=&quot;inetaddress#getLoopbackAddress()&quot;&gt;&lt;code&gt;loopback&lt;/code&gt;&lt;/a&gt; address is returned.</source>
          <target state="translated">If there is a security manager set, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the local address and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, the &lt;a href=&quot;inetaddress#getLoopbackAddress()&quot;&gt; &lt;code&gt;loopback&lt;/code&gt; &lt;/a&gt; address is returned.</target>
        </trans-unit>
        <trans-unit id="e5eea39d0bafa27479de1740d6a3bd033e70cc0a" translate="yes" xml:space="preserve">
          <source>If there is a security manager set, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the local address and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, the &lt;a href=&quot;inetaddress#getLoopbackAddress--&quot;&gt;&lt;code&gt;loopback&lt;/code&gt;&lt;/a&gt; address is returned.</source>
          <target state="translated">セキュリティーマネージャーが設定されている場合、ローカルのアドレスと &lt;code&gt;-1&lt;/code&gt; を引数として &lt;code&gt;checkConnect&lt;/code&gt; メソッドが呼び出され、操作が許可されているかどうかが確認されます。操作が許可されていない場合は、&lt;a href=&quot;inetaddress#getLoopbackAddress--&quot;&gt; &lt;code&gt;loopback&lt;/code&gt; &lt;/a&gt;アドレスが返されます。</target>
        </trans-unit>
        <trans-unit id="c4393236d40a93051b0ea6d79cd37ab06006e55e" translate="yes" xml:space="preserve">
          <source>If there is a security manager then its &lt;a href=&quot;../../../java.base/java/lang/securitymanager#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method is called to check &lt;code&gt;AWTPermission(&quot;accessEventQueue&quot;)&lt;/code&gt;.</source>
          <target state="translated">If there is a security manager then its &lt;a href=&quot;../../../java.base/java/lang/securitymanager#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt; method is called to check &lt;code&gt;AWTPermission(&quot;accessEventQueue&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcd0ea8c723035f1f68d96d6ce02d00d5e694624" translate="yes" xml:space="preserve">
          <source>If there is a security manager then its &lt;code&gt;checkPermission&lt;/code&gt; method if first called with a &lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt; permission to check that the caller is allowed to get access to the class loader.</source>
          <target state="translated">If there is a security manager then its &lt;code&gt;checkPermission&lt;/code&gt; method if first called with a &lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt; permission to check that the caller is allowed to get access to the class loader.</target>
        </trans-unit>
        <trans-unit id="975b403d7a17640c61b22b1fe12733ab70ac0406" translate="yes" xml:space="preserve">
          <source>If there is a security manager then its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt; permission to check that the caller is allowed to get access to the class loader.</source>
          <target state="translated">If there is a security manager then its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt; permission to check that the caller is allowed to get access to the class loader.</target>
        </trans-unit>
        <trans-unit id="70274ada9a62f6bd34849b3ea45696f8033443f7" translate="yes" xml:space="preserve">
          <source>If there is a security manager then the class loader created by this method will load classes and resources with privileges that are restricted by the calling context of this method.</source>
          <target state="translated">セキュリティマネージャがある場合、このメソッドによって作成されたクラスローダは、このメソッドの呼び出しコンテキストによって制限されている特権を持つクラスとリソースをロードします。</target>
        </trans-unit>
        <trans-unit id="f21f2cb00e18158e239acee5b75d0e9108e9c70d" translate="yes" xml:space="preserve">
          <source>If there is a security manager then the class loaders created by this method will load classes and resources with privileges that are restricted by the calling context of this method.</source>
          <target state="translated">セキュリティマネージャがある場合、このメソッドによって作成されたクラスローダは、このメソッドの呼び出しコンテキストによって制限された特権を持つクラスとリソースをロードします。</target>
        </trans-unit>
        <trans-unit id="501526fb9b9e2e222246e9cd9786ee96d321d66c" translate="yes" xml:space="preserve">
          <source>If there is a security manager, a packet cannot be received if the security manager's &lt;code&gt;checkAccept&lt;/code&gt; method does not allow it.</source>
          <target state="translated">セキュリティマネージャーがある場合、セキュリティマネージャーの &lt;code&gt;checkAccept&lt;/code&gt; メソッドで許可されていないと、パケットを受信できません。</target>
        </trans-unit>
        <trans-unit id="8d8ccd4fade79b52387ca219cceec58d9c7bfd0d" translate="yes" xml:space="preserve">
          <source>If there is a security manager, an &lt;a href=&quot;inquireseccontextpermission&quot;&gt;&lt;code&gt;InquireSecContextPermission&lt;/code&gt;&lt;/a&gt; with the name &lt;code&gt;type.mech&lt;/code&gt; must be granted. Otherwise, this could result in a &lt;a href=&quot;../../../../../java.base/java/lang/securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfbfad4dd09ad7ea7b2126cee4029ecba6ab2815" translate="yes" xml:space="preserve">
          <source>If there is a security manager, and &lt;code&gt;host&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;host.length() &lt;/code&gt; is not equal to zero, the security manager's &lt;code&gt;checkConnect&lt;/code&gt; method is called with the hostname and &lt;code&gt;-1&lt;/code&gt; as its arguments to determine if the operation is allowed.</source>
          <target state="translated">If there is a security manager, and &lt;code&gt;host&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;host.length() &lt;/code&gt; is not equal to zero, the security manager's &lt;code&gt;checkConnect&lt;/code&gt; method is called with the hostname and &lt;code&gt;-1&lt;/code&gt; as its arguments to determine if the operation is allowed.</target>
        </trans-unit>
        <trans-unit id="9cc5fcc49e4c5f23df1182ea1b133caeed726d61" translate="yes" xml:space="preserve">
          <source>If there is a security manager, and the socket is not currently connected to a remote address, a packet cannot be received if the security manager's &lt;code&gt;checkAccept&lt;/code&gt; method does not allow it. Datagrams that are not permitted by the security manager are silently discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78bc0f4a72c52e6defa54f26456df6b6bfdcd359" translate="yes" xml:space="preserve">
          <source>If there is a security manager, and the socket is not currently connected to a remote address, this method first performs some security checks. First, if &lt;code&gt;p.getAddress().isMulticastAddress()&lt;/code&gt; is true, this method calls the security manager's &lt;code&gt;checkMulticast&lt;/code&gt; method with &lt;code&gt;p.getAddress()&lt;/code&gt; as its argument. If the evaluation of that expression is false, this method instead calls the security manager's &lt;code&gt;checkConnect&lt;/code&gt; method with arguments &lt;code&gt;p.getAddress().getHostAddress()&lt;/code&gt; and &lt;code&gt;p.getPort()&lt;/code&gt;. Each call to a security manager method could result in a SecurityException if the operation is not allowed.</source>
          <target state="translated">セキュリティーマネージャーがあり、ソケットが現在リモートアドレスに接続されていない場合、このメソッドは最初にいくつかのセキュリティーチェックを実行します。まず、 &lt;code&gt;p.getAddress().isMulticastAddress()&lt;/code&gt; がtrueの場合、このメソッドは &lt;code&gt;p.getAddress()&lt;/code&gt; を引数としてセキュリティマネージャーの &lt;code&gt;checkMulticast&lt;/code&gt; メソッドを呼び出します。その式の評価がfalseの場合、このメソッドは代わりに、引数 &lt;code&gt;p.getAddress().getHostAddress()&lt;/code&gt; および &lt;code&gt;p.getPort()&lt;/code&gt; を使用してセキュリティマネージャの &lt;code&gt;checkConnect&lt;/code&gt; メソッドを呼び出します。操作が許可されていない場合、セキュリティマネージャメソッドを呼び出すたびにSecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="5f2dc991bc054662c9aaf92a4f81920cc42b0299" translate="yes" xml:space="preserve">
          <source>If there is a security manager, and this thread is not the current thread, then the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;RuntimePermission(&quot;getStackTrace&quot;)&lt;/code&gt; permission to see if it's ok to get the stack trace.</source>
          <target state="translated">セキュリティマネージャーがあり、このスレッドが現在のスレッドではない &lt;code&gt;RuntimePermission(&quot;getStackTrace&quot;)&lt;/code&gt; 、RuntimePermission（ &quot;getStackTrace&quot;）アクセス許可を &lt;code&gt;checkPermission&lt;/code&gt; てセキュリティマネージャーのcheckPermissionメソッドを呼び出し、スタックトレースを取得してもよいかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="d1b98d766cc337fb9898419e46a662c7d8de062a" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;a href=&quot;securitymanager#checkAccess(java.lang.ThreadGroup)&quot;&gt;&lt;code&gt;checkAccess&lt;/code&gt;&lt;/a&gt; method is invoked with the ThreadGroup as its argument.</source>
          <target state="translated">If there is a security manager, its &lt;a href=&quot;securitymanager#checkAccess(java.lang.ThreadGroup)&quot;&gt; &lt;code&gt;checkAccess&lt;/code&gt; &lt;/a&gt; method is invoked with the ThreadGroup as its argument.</target>
        </trans-unit>
        <trans-unit id="9414114a34df41ef68dcd065db4f4c005b486dbe" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;a href=&quot;securitymanager#checkAccess-java.lang.ThreadGroup-&quot;&gt;&lt;code&gt;checkAccess&lt;/code&gt;&lt;/a&gt; method is invoked with the ThreadGroup as its argument.</source>
          <target state="translated">セキュリティーマネージャーがある場合、その&lt;a href=&quot;securitymanager#checkAccess-java.lang.ThreadGroup-&quot;&gt; &lt;code&gt;checkAccess&lt;/code&gt; &lt;/a&gt;メソッドは、ThreadGroupを引数として呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7fd4592e446f7faba341b06f36e03f193c3eabf7" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;a href=&quot;securitymanager#checkCreateClassLoader()&quot;&gt;&lt;code&gt;checkCreateClassLoader&lt;/code&gt;&lt;/a&gt; method is invoked. This may result in a security exception.</source>
          <target state="translated">If there is a security manager, its &lt;a href=&quot;securitymanager#checkCreateClassLoader()&quot;&gt; &lt;code&gt;checkCreateClassLoader&lt;/code&gt; &lt;/a&gt; method is invoked. This may result in a security exception.</target>
        </trans-unit>
        <trans-unit id="3533ff6ee33a3d65c462d1050b52aa5438f30879" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;a href=&quot;securitymanager#checkCreateClassLoader--&quot;&gt;&lt;code&gt;&lt;code&gt;checkCreateClassLoader&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method is invoked. This may result in a security exception.</source>
          <target state="translated">セキュリティーマネージャーがある場合は、その&lt;a href=&quot;securitymanager#checkCreateClassLoader--&quot;&gt; &lt;code&gt;&lt;code&gt;checkCreateClassLoader&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されます。これにより、セキュリティ例外が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="eab087ce5a6c8b2fb5dba3d7042957f448b206c1" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;a href=&quot;securitymanager#checkExec(java.lang.String)&quot;&gt;&lt;code&gt;checkExec&lt;/code&gt;&lt;/a&gt; method is called with the first component of each process builder's &lt;code&gt;command&lt;/code&gt; array as its argument. This may result in a &lt;a href=&quot;securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd5e5d0112178d816deaa79996ddbde5d42d22e" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;a href=&quot;securitymanager#checkExec(java.lang.String)&quot;&gt;&lt;code&gt;checkExec&lt;/code&gt;&lt;/a&gt; method is called with the first component of this object's &lt;code&gt;command&lt;/code&gt; array as its argument. This may result in a &lt;a href=&quot;securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">If there is a security manager, its &lt;a href=&quot;securitymanager#checkExec(java.lang.String)&quot;&gt; &lt;code&gt;checkExec&lt;/code&gt; &lt;/a&gt; method is called with the first component of this object's &lt;code&gt;command&lt;/code&gt; array as its argument. This may result in a &lt;a href=&quot;securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt; being thrown.</target>
        </trans-unit>
        <trans-unit id="85a1e97c5d37987df52e3f2db8dd957eb6a2e0a1" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;a href=&quot;securitymanager#checkExec-java.lang.String-&quot;&gt;&lt;code&gt;checkExec&lt;/code&gt;&lt;/a&gt; method is called with the first component of this object's &lt;code&gt;command&lt;/code&gt; array as its argument. This may result in a &lt;a href=&quot;securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">セキュリティーマネージャーがある場合、その&lt;a href=&quot;securitymanager#checkExec-java.lang.String-&quot;&gt; &lt;code&gt;checkExec&lt;/code&gt; &lt;/a&gt;メソッドは、このオブジェクトの &lt;code&gt;command&lt;/code&gt; 配列の最初のコンポーネントを引数として呼び出されます。これにより、&lt;a href=&quot;securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt;がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="9c30beb89be73a967106d6bb017cc3341325b7e4" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkAccess&lt;/code&gt; method is called with this thread as its argument. This may result in throwing a &lt;code&gt;SecurityException&lt;/code&gt;.</source>
          <target state="translated">セキュリティマネージャがある場合、その &lt;code&gt;checkAccess&lt;/code&gt; メソッドは、このスレッドを引数として呼び出されます。これにより、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="959b09fe0d2c452907b0520da6e28a90c4ae65f9" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkAccess&lt;/code&gt; method is called with this thread group as its argument. This may result in throwing a &lt;code&gt;SecurityException&lt;/code&gt;.</source>
          <target state="translated">セキュリティーマネージャーがある場合、その &lt;code&gt;checkAccess&lt;/code&gt; メソッドは、このスレッドグループを引数として呼び出されます。これにより、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="3c17150f3dc1fd1d9a170113f445867d696c2b24" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkConnect&lt;/code&gt; method is called for each InetAddress. Only InetAddresses where the &lt;code&gt;checkConnect&lt;/code&gt; doesn't throw a SecurityException will be returned in the Enumeration. However, if the caller has the &lt;a href=&quot;netpermission&quot;&gt;&lt;code&gt;NetPermission&lt;/code&gt;&lt;/a&gt;(&quot;getNetworkInformation&quot;) permission, then all InetAddresses are returned.</source>
          <target state="translated">セキュリティーマネージャーがある場合、その &lt;code&gt;checkConnect&lt;/code&gt; メソッドはInetAddressごとに呼び出されます。Enumerationでは、 &lt;code&gt;checkConnect&lt;/code&gt; がSecurityExceptionをスローしないInetAddressesのみが返されます。ただし、呼び出し元に&lt;a href=&quot;netpermission&quot;&gt; &lt;code&gt;NetPermission&lt;/code&gt; &lt;/a&gt;（ &quot;getNetworkInformation&quot;）権限がある場合、すべてのInetAddressesが返されます。</target>
        </trans-unit>
        <trans-unit id="58541a971b5c4b55ce89f0aa08744fea81192c9b" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkConnect&lt;/code&gt; method is called for each InetAddress. Only InetAddresses where the &lt;code&gt;checkConnect&lt;/code&gt; doesn't throw a SecurityException will be returned in the Stream. However, if the caller has the &lt;a href=&quot;netpermission&quot;&gt;&lt;code&gt;NetPermission&lt;/code&gt;&lt;/a&gt;(&quot;getNetworkInformation&quot;) permission, then all InetAddresses are returned.</source>
          <target state="translated">If there is a security manager, its &lt;code&gt;checkConnect&lt;/code&gt; method is called for each InetAddress. Only InetAddresses where the &lt;code&gt;checkConnect&lt;/code&gt; doesn't throw a SecurityException will be returned in the Stream. However, if the caller has the &lt;a href=&quot;netpermission&quot;&gt; &lt;code&gt;NetPermission&lt;/code&gt; &lt;/a&gt;(&quot;getNetworkInformation&quot;) permission, then all InetAddresses are returned.</target>
        </trans-unit>
        <trans-unit id="16d27bea720609eee04166dfd76b88b456132798" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with &lt;code&gt;host.getHostAddress()&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; as its arguments. This could result in a SecurityException.</source>
          <target state="translated">セキュリティーマネージャーがある場合、その &lt;code&gt;checkConnect&lt;/code&gt; メソッドは、引数として &lt;code&gt;host.getHostAddress()&lt;/code&gt; および &lt;code&gt;port&lt;/code&gt; を使用して呼び出されます。これにより、SecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="43c71e671e00781339f5ba759f2bcd61a8b7a34b" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the InetAddress for each InterfaceAddress. Only InterfaceAddresses where the &lt;code&gt;checkConnect&lt;/code&gt; doesn't throw a SecurityException will be returned in the List.</source>
          <target state="translated">セキュリティーマネージャーがある場合、その &lt;code&gt;checkConnect&lt;/code&gt; メソッドは、各InterfaceAddressのInetAddressで呼び出されます。 &lt;code&gt;checkConnect&lt;/code&gt; がSecurityExceptionをスローしないInterfaceAddressesのみがリストに返されます。</target>
        </trans-unit>
        <trans-unit id="78af07133b038dacb150089b40e78b0ca1d3d753" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the host address and &lt;code&gt;port&lt;/code&gt; as its arguments. This could result in a SecurityException.</source>
          <target state="translated">セキュリティーマネージャーがある場合、その &lt;code&gt;checkConnect&lt;/code&gt; メソッドは、ホストアドレスと &lt;code&gt;port&lt;/code&gt; を引数として呼び出されます。これにより、SecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="2d2ddb66aff693ec81fe7a3cff9c33e416a967ed" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the host name as its argument to check the permission to resolve it. This could result in a SecurityException.</source>
          <target state="translated">セキュリティーマネージャーがある場合は、その &lt;code&gt;checkConnect&lt;/code&gt; メソッドがホスト名を引数として呼び出され、解決するための権限をチェックします。これにより、SecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="01ae3cd02649f51bc3641c7c81a3016b88a1579b" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the local host name and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, an InetAddress representing the loopback address is returned.</source>
          <target state="translated">セキュリティーマネージャーがある場合、その &lt;code&gt;checkConnect&lt;/code&gt; メソッドは、ローカルホスト名と &lt;code&gt;-1&lt;/code&gt; を引数として呼び出され、操作が許可されているかどうかを確認します。操作が許可されていない場合、ループバックアドレスを表すInetAddressが返されます。</target>
        </trans-unit>
        <trans-unit id="4d128c55ea8e46338a04c172173181318ab739b7" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkConnect&lt;/code&gt; method is called with the proxy host address and port number as its arguments. This could result in a SecurityException.</source>
          <target state="translated">セキュリティーマネージャーがある場合、その &lt;code&gt;checkConnect&lt;/code&gt; メソッドは、プロキシホストアドレスとポート番号を引数として呼び出されます。これにより、SecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="bca28a5046aedb2445dad871f1870c7cd86fe222" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkConnect&lt;/code&gt; method is first called with the host address and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed.</source>
          <target state="translated">セキュリティーマネージャーが存在する場合、最初にホストアドレスと &lt;code&gt;-1&lt;/code&gt; を引数として &lt;code&gt;checkConnect&lt;/code&gt; メソッドが呼び出され、操作が許可されているかどうかが確認されます。</target>
        </trans-unit>
        <trans-unit id="fd69bfacd3a48bd3c84ffe11c3502373bc1b717d" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkConnect&lt;/code&gt; method is first called with the hostname and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the operation is allowed. If the operation is not allowed, it will return the textual representation of the IP address.</source>
          <target state="translated">セキュリティーマネージャーがある場合、その &lt;code&gt;checkConnect&lt;/code&gt; メソッドは、最初にホスト名と &lt;code&gt;-1&lt;/code&gt; を引数として呼び出され、操作が許可されているかどうかを確認します。操作が許可されていない場合は、IPアドレスのテキスト表現を返します。</target>
        </trans-unit>
        <trans-unit id="19b8451790374e638a897d576809e75ff26e4bdc" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkExit&lt;/code&gt; method is first called with 0 as its argument to ensure the exit is allowed. This could result in a SecurityException.</source>
          <target state="translated">セキュリティーマネージャーがある場合、その &lt;code&gt;checkExit&lt;/code&gt; メソッドが最初に呼び出され、引数として0を使用して、出口が許可されるようにします。これにより、SecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="3ad778e38f7a8fa1a04c66c84bec80348990751b" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkListen&lt;/code&gt; method is called with the &lt;code&gt;port&lt;/code&gt; argument as its argument to ensure the operation is allowed. This could result in a SecurityException.</source>
          <target state="translated">セキュリティーマネージャーがある場合、その &lt;code&gt;checkListen&lt;/code&gt; メソッドは、引数として &lt;code&gt;port&lt;/code&gt; 引数を指定して呼び出され、操作が許可されていることを確認します。これにより、SecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="4275d6bc9ac0d95a70ff7bc44ead467a08203c23" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkListen&lt;/code&gt; method is called with the &lt;code&gt;port&lt;/code&gt; argument as its argument to ensure the operation is allowed. This could result in a SecurityException. The &lt;code&gt;backlog&lt;/code&gt; argument is the requested maximum number of pending connections on the socket. Its exact semantics are implementation specific. In particular, an implementation may impose a maximum length or may choose to ignore the parameter altogether. The value provided should be greater than &lt;code&gt;0&lt;/code&gt;. If it is less than or equal to &lt;code&gt;0&lt;/code&gt;, then an implementation specific default will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84eacac097d36c19fe75054afbaa3ba99bf8985e" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkListen&lt;/code&gt; method is called with the &lt;code&gt;port&lt;/code&gt; argument as its argument to ensure the operation is allowed. This could result in a SecurityException. The &lt;code&gt;backlog&lt;/code&gt; argument is the requested maximum number of pending connections on the socket. Its exact semantics are implementation specific. In particular, an implementation may impose a maximum length or may choose to ignore the parameter altogther. The value provided should be greater than &lt;code&gt;0&lt;/code&gt;. If it is less than or equal to &lt;code&gt;0&lt;/code&gt;, then an implementation specific default will be used.</source>
          <target state="translated">セキュリティーマネージャーがある場合、その &lt;code&gt;checkListen&lt;/code&gt; メソッドは、引数として &lt;code&gt;port&lt;/code&gt; 引数を指定して呼び出され、操作が許可されていることを確認します。これにより、SecurityExceptionが発生する可能性があります。 &lt;code&gt;backlog&lt;/code&gt; 引数は、ソケット上の保留中の接続の要求の最大数です。その正確なセマンティクスは実装固有です。特に、実装では最大長を課したり、パラメータをすべて無視したりする場合があります。指定する値は &lt;code&gt;0&lt;/code&gt; より大きい必要があります。 &lt;code&gt;0&lt;/code&gt; 以下の場合、実装固有のデフォルトが使用されます。</target>
        </trans-unit>
        <trans-unit id="7696a640bf74fb64021433fe004320c4e69fec7e" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkListen&lt;/code&gt; method is first called with 0 as its argument to ensure the operation is allowed. This could result in a SecurityException.</source>
          <target state="translated">セキュリティマネージャが存在する場合、操作が許可されるように、最初に引数として0を指定して &lt;code&gt;checkListen&lt;/code&gt; メソッドが呼び出されます。これにより、SecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="f7d8bb6cd4c61d496d648276b50f92f3feba88b5" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkListen&lt;/code&gt; method is first called with the &lt;code&gt;port&lt;/code&gt; argument as its argument to ensure the operation is allowed. This could result in a SecurityException.</source>
          <target state="translated">セキュリティーマネージャーが存在する場合、その &lt;code&gt;checkListen&lt;/code&gt; メソッドが最初に呼び出され、引数として &lt;code&gt;port&lt;/code&gt; 引数を使用して、操作が許可されていることを確認します。これにより、SecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="2550b60768f930b8dee700df520c5f4176ce28d3" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkListen&lt;/code&gt; method is first called with the SocketAddress port as its argument to ensure the operation is allowed. This could result in a SecurityException.</source>
          <target state="translated">セキュリティーマネージャーがある場合、操作が許可されるようにするために、最初にSocketAddressポートを引数としてその &lt;code&gt;checkListen&lt;/code&gt; メソッドが呼び出されます。これにより、SecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="a229539b4a28c2f5ec8ded7c3825ecf64243199f" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkListen&lt;/code&gt; method is first called with the port from the socket address as its argument to ensure the operation is allowed. This could result in a SecurityException.</source>
          <target state="translated">セキュリティーマネージャーがある場合、操作が許可されるようにするために、最初にソケットアドレスからのポートを引数としてその &lt;code&gt;checkListen&lt;/code&gt; メソッドが呼び出されます。これにより、SecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="0a67ec5feda224ae64b8c4ed0abf118d7033d1c2" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called to check &lt;code&gt;ReflectPermission(&quot;suppressAccessChecks&quot;)&lt;/code&gt; and that must return normally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526f451df552a77dd63ebe02272aee894aeec911" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called to check &lt;code&gt;ReflectPermission(&quot;suppressAccessChecks&quot;)&lt;/code&gt;.</source>
          <target state="translated">If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called to check &lt;code&gt;ReflectPermission(&quot;suppressAccessChecks&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1362fabcddab928d786a66dfafce71193c90bbd3" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;PropertyPermission(&quot;user.language&quot;, &quot;write&quot;)&lt;/code&gt; permission before the default locale is changed.</source>
          <target state="translated">セキュリティーマネージャーがある場合、デフォルトのロケールが変更される前に、その &lt;code&gt;checkPermission&lt;/code&gt; メソッドが &lt;code&gt;PropertyPermission(&quot;user.language&quot;, &quot;write&quot;)&lt;/code&gt; 権限で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4a19d07ab57d6d32ab3bfc3854e57cbabaa6348e" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;ReflectPermission(&quot;suppressAccessChecks&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">セキュリティーマネージャーがある場合、その &lt;code&gt;checkPermission&lt;/code&gt; メソッドは &lt;code&gt;ReflectPermission(&quot;suppressAccessChecks&quot;)&lt;/code&gt; 権限で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2046cd2160f064fcca12b8ed464d009e531b209f" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with an &lt;code&gt;AWTPermission(&quot;watchMousePointer&quot;)&lt;/code&gt; permission before creating and returning a &lt;code&gt;PointerInfo&lt;/code&gt; object. This may result in a &lt;code&gt;SecurityException&lt;/code&gt;.</source>
          <target state="translated">If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with an &lt;code&gt;AWTPermission(&quot;watchMousePointer&quot;)&lt;/code&gt; permission before creating and returning a &lt;code&gt;PointerInfo&lt;/code&gt; object. This may result in a &lt;code&gt;SecurityException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="023c7b6fa6e64e85c534968cd82b886f189f68e0" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with the &lt;code&gt;AWTPermission(&quot;setAppletStub&quot;)&lt;/code&gt; permission if a stub has already been set.</source>
          <target state="translated">If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with the &lt;code&gt;AWTPermission(&quot;setAppletStub&quot;)&lt;/code&gt; permission if a stub has already been set.</target>
        </trans-unit>
        <trans-unit id="a5901e8f5f3e827f7dec190acb7b2c680e3d8a12" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is first called to check &lt;code&gt;RuntimePermission(&quot;defineClass&quot;)&lt;/code&gt;.</source>
          <target state="translated">If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is first called to check &lt;code&gt;RuntimePermission(&quot;defineClass&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba736daa95eab79c3e9ec30a15feed15b6f2153e" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is first called with a &lt;code&gt;ReflectPermission(&quot;suppressAccessChecks&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is first called with a &lt;code&gt;ReflectPermission(&quot;suppressAccessChecks&quot;)&lt;/code&gt; permission.</target>
        </trans-unit>
        <trans-unit id="b73ff7cd0749e2fe69c0f2fcc0421edecf259b2d" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method will be invoked with a &lt;code&gt;RuntimePermission(&quot;setFactory&quot;)&lt;/code&gt; permission; this could result in a &lt;code&gt;SecurityException&lt;/code&gt;.</source>
          <target state="translated">If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method will be invoked with a &lt;code&gt;RuntimePermission(&quot;setFactory&quot;)&lt;/code&gt; permission; this could result in a &lt;code&gt;SecurityException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e19a3d6b18c7f288973d4faca480e353d3119ae" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method will be invoked with a &lt;code&gt;java.util.logging.LoggingPermission(&quot;control&quot;)&lt;/code&gt; permission; this could result in a &lt;code&gt;SecurityException&lt;/code&gt;.</source>
          <target state="translated">If there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method will be invoked with a &lt;code&gt;java.util.logging.LoggingPermission(&quot;control&quot;)&lt;/code&gt; permission; this could result in a &lt;code&gt;SecurityException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cb05ace85aa7a9edcb040bdd423405912174b9c" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkPropertiesAccess&lt;/code&gt; method is called. This could result in a &lt;a href=&quot;../../../java.base/java/lang/securityexception&quot;&gt;SecurityException&lt;/a&gt;.</source>
          <target state="translated">If there is a security manager, its &lt;code&gt;checkPropertiesAccess&lt;/code&gt; method is called. This could result in a &lt;a href=&quot;../../../java.base/java/lang/securityexception&quot;&gt;SecurityException&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b812e22f1f04741048de016813ab27b17900ad4d" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkPropertiesAccess&lt;/code&gt; method is called. This could result in a &lt;a href=&quot;../lang/securityexception&quot;&gt;SecurityException&lt;/a&gt;.</source>
          <target state="translated">セキュリティーマネージャーがある場合は、その &lt;code&gt;checkPropertiesAccess&lt;/code&gt; メソッドが呼び出されます。これにより、&lt;a href=&quot;../lang/securityexception&quot;&gt;SecurityException&lt;/a&gt;が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="61ad58a3688694c18343d625b7add7843909f0fc" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkRead&lt;/code&gt; method is called with the &lt;code&gt;name&lt;/code&gt; argument as its argument to see if read access to the file is allowed. If the mode allows writing, the security manager's &lt;code&gt;checkWrite&lt;/code&gt; method is also called with the &lt;code&gt;name&lt;/code&gt; argument as its argument to see if write access to the file is allowed.</source>
          <target state="translated">セキュリティーマネージャーがある場合、ファイルへの読み取りアクセスが許可されているかどうかを確認するために、引数として &lt;code&gt;name&lt;/code&gt; 引数を使用してその &lt;code&gt;checkRead&lt;/code&gt; メソッドが呼び出されます。モードが書き込みを許可している場合は、セキュリティマネージャーの &lt;code&gt;checkWrite&lt;/code&gt; メソッドも &lt;code&gt;name&lt;/code&gt; 引数を引数として呼び出され、ファイルへの書き込みアクセスが許可されているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="e8440e06fb5641cd0bbb2e4e19fe4021dbf3d258" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkRead&lt;/code&gt; method is called with the file descriptor &lt;code&gt;fdObj&lt;/code&gt; as its argument to see if it's ok to read the file descriptor. If read access is denied to the file descriptor a &lt;code&gt;SecurityException&lt;/code&gt; is thrown.</source>
          <target state="translated">セキュリティーマネージャーがある場合、ファイル記述子を読み取ることができるかどうかを確認するために、引数としてファイル記述子 &lt;code&gt;fdObj&lt;/code&gt; を使用して、その &lt;code&gt;checkRead&lt;/code&gt; メソッドが呼び出されます。ファイル記述子への読み取りアクセスが拒否された場合、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="07ece2acfb17b36150e2dd4f7e477c94e9f4a76d" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkRead&lt;/code&gt; method is called with the pathname of the &lt;code&gt;file&lt;/code&gt; argument as its argument to see if read access to the file is allowed. If the mode allows writing, the security manager's &lt;code&gt;checkWrite&lt;/code&gt; method is also called with the path argument to see if write access to the file is allowed.</source>
          <target state="translated">セキュリティーマネージャーがある場合、ファイルへの読み取りアクセスが許可されているかどうかを確認するために、引数として &lt;code&gt;file&lt;/code&gt; 引数のパス名を指定して、その &lt;code&gt;checkRead&lt;/code&gt; メソッドが呼び出されます。モードが書き込みを許可している場合、セキュリティマネージャーの &lt;code&gt;checkWrite&lt;/code&gt; メソッドもpath引数を指定して呼び出され、ファイルへの書き込みアクセスが許可されているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="31b66585dd5ded5b4cf8149540abcf6d797f5618" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its checkPermission method is called with a PropertyPermission(&quot;user.language&quot;, &quot;write&quot;) permission before the default locale is changed.</source>
          <target state="translated">セキュリティマネージャがある場合、デフォルトのロケールが変更される前に、そのcheckPermissionメソッドがPropertyPermission(&quot;user.language&quot;,&quot;write&quot;)パーミッションで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8825d17638da814f3b0c11ec345292fdd5696887" translate="yes" xml:space="preserve">
          <source>If there is a security manager, the &lt;a href=&quot;../lang/securitymanager#checkSecurityAccess(java.lang.String)&quot;&gt;&lt;code&gt;SecurityManager.checkSecurityAccess(java.lang.String)&lt;/code&gt;&lt;/a&gt; method is called with the &lt;code&gt;&quot;insertProvider&quot;&lt;/code&gt; permission target name to see if it's ok to add a new provider. If this permission check is denied, &lt;code&gt;checkSecurityAccess&lt;/code&gt; is called again with the &lt;code&gt;&quot;insertProvider.&quot;+provider.getName()&lt;/code&gt; permission target name. If both checks are denied, a &lt;code&gt;SecurityException&lt;/code&gt; is thrown.</source>
          <target state="translated">If there is a security manager, the &lt;a href=&quot;../lang/securitymanager#checkSecurityAccess(java.lang.String)&quot;&gt; &lt;code&gt;SecurityManager.checkSecurityAccess(java.lang.String)&lt;/code&gt; &lt;/a&gt; method is called with the &lt;code&gt;&quot;insertProvider&quot;&lt;/code&gt; permission target name to see if it's ok to add a new provider. If this permission check is denied, &lt;code&gt;checkSecurityAccess&lt;/code&gt; is called again with the &lt;code&gt;&quot;insertProvider.&quot;+provider.getName()&lt;/code&gt; permission target name. If both checks are denied, a &lt;code&gt;SecurityException&lt;/code&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="bd97e3f8323cfe0de6530417bd6292cf0553996a" translate="yes" xml:space="preserve">
          <source>If there is a security manager, the &lt;a href=&quot;../lang/securitymanager#checkSecurityAccess-java.lang.String-&quot;&gt;&lt;code&gt;SecurityManager.checkSecurityAccess(java.lang.String)&lt;/code&gt;&lt;/a&gt; method is called with the &lt;code&gt;&quot;insertProvider&quot;&lt;/code&gt; permission target name to see if it's ok to add a new provider. If this permission check is denied, &lt;code&gt;checkSecurityAccess&lt;/code&gt; is called again with the &lt;code&gt;&quot;insertProvider.&quot;+provider.getName()&lt;/code&gt; permission target name. If both checks are denied, a &lt;code&gt;SecurityException&lt;/code&gt; is thrown.</source>
          <target state="translated">セキュリティマネージャーがある場合、 &lt;code&gt;&quot;insertProvider&quot;&lt;/code&gt; 権限のターゲット名を指定して&lt;a href=&quot;../lang/securitymanager#checkSecurityAccess-java.lang.String-&quot;&gt; &lt;code&gt;SecurityManager.checkSecurityAccess(java.lang.String)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、新しいプロバイダーを追加してもよいかどうかを確認します。この権限チェックが拒否された &lt;code&gt;checkSecurityAccess&lt;/code&gt; 、 &lt;code&gt;&quot;insertProvider.&quot;+provider.getName()&lt;/code&gt; 権限ターゲット名でcheckSecurityAccessが再度呼び出されます。両方のチェックが拒否された場合、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="9b31a15f0a361ace0e86d27297cb7544846a2131" translate="yes" xml:space="preserve">
          <source>If there is a security manager, then the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;RuntimePermission(&quot;getStackTrace&quot;)&lt;/code&gt; permission as well as &lt;code&gt;RuntimePermission(&quot;modifyThreadGroup&quot;)&lt;/code&gt; permission to see if it is ok to get the stack trace of all threads.</source>
          <target state="translated">セキュリティマネージャーがある場合、セキュリティマネージャーの &lt;code&gt;checkPermission&lt;/code&gt; メソッドは、 &lt;code&gt;RuntimePermission(&quot;getStackTrace&quot;)&lt;/code&gt; 権限と &lt;code&gt;RuntimePermission(&quot;modifyThreadGroup&quot;)&lt;/code&gt; 権限で呼び出され、すべてのスレッドのスタックトレースを取得してもよいかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="372f832c98aee8a28f1bafce4413d10d1d87c33d" translate="yes" xml:space="preserve">
          <source>If there is a security manager, this method calls its &lt;code&gt;checkListen&lt;/code&gt; method with the &lt;code&gt;port&lt;/code&gt; argument as its argument to ensure the operation is allowed. This could result in a SecurityException. The &lt;code&gt;backlog&lt;/code&gt; argument is the requested maximum number of pending connections on the socket. Its exact semantics are implementation specific. In particular, an implementation may impose a maximum length or may choose to ignore the parameter altogether. The value provided should be greater than &lt;code&gt;0&lt;/code&gt;. If it is less than or equal to &lt;code&gt;0&lt;/code&gt;, then an implementation specific default will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3774f41cca13a332ee025b0313241e9bb0d0309d" translate="yes" xml:space="preserve">
          <source>If there is a security manager, this method calls its &lt;code&gt;checkListen&lt;/code&gt; method with the &lt;code&gt;port&lt;/code&gt; argument as its argument to ensure the operation is allowed. This could result in a SecurityException. The &lt;code&gt;backlog&lt;/code&gt; argument is the requested maximum number of pending connections on the socket. Its exact semantics are implementation specific. In particular, an implementation may impose a maximum length or may choose to ignore the parameter altogther. The value provided should be greater than &lt;code&gt;0&lt;/code&gt;. If it is less than or equal to &lt;code&gt;0&lt;/code&gt;, then an implementation specific default will be used.</source>
          <target state="translated">セキュリティーマネージャーがある場合、このメソッドは、引数として &lt;code&gt;port&lt;/code&gt; 引数を指定して &lt;code&gt;checkListen&lt;/code&gt; メソッドを呼び出し、操作が許可されていることを確認します。これにより、SecurityExceptionが発生する可能性があります。 &lt;code&gt;backlog&lt;/code&gt; 引数は、ソケット上の保留中の接続の要求の最大数です。その正確なセマンティクスは実装固有です。特に、実装では最大長を課したり、パラメータをすべて無視したりする場合があります。指定する値は &lt;code&gt;0&lt;/code&gt; より大きい必要があります。 &lt;code&gt;0&lt;/code&gt; 以下の場合、実装固有のデフォルトが使用されます。</target>
        </trans-unit>
        <trans-unit id="c49df9821bd54b67f07151d3efea906c51666fdf" translate="yes" xml:space="preserve">
          <source>If there is a security manager, this method first calls its &lt;code&gt;checkConnect&lt;/code&gt; method with the hostname and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the calling code is allowed to know the hostname for this IP address, i.e., to connect to the host. If the operation is not allowed, it will return the textual representation of the IP address.</source>
          <target state="translated">セキュリティマネージャーがある場合、このメソッドはまず、引数としてホスト名と &lt;code&gt;-1&lt;/code&gt; を指定して &lt;code&gt;checkConnect&lt;/code&gt; メソッドを呼び出し、呼び出しコードがこのIPアドレスのホスト名を認識できるかどうか、つまりホストに接続できるかどうかを確認します。操作が許可されていない場合は、IPアドレスのテキスト表現を返します。</target>
        </trans-unit>
        <trans-unit id="999933e43cb5d7cfb6601989d19930a2a9186ce5" translate="yes" xml:space="preserve">
          <source>If there is a security manager, this method first calls its &lt;code&gt;checkMulticast&lt;/code&gt; method with the &lt;code&gt;mcastaddr&lt;/code&gt; argument as its argument.</source>
          <target state="translated">セキュリティーマネージャーが存在する場合、このメソッドは最初に &lt;code&gt;mcastaddr&lt;/code&gt; 引数を引数として &lt;code&gt;checkMulticast&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="1e8e454b01623ff9ba56024fdcbb8a6e018247b0" translate="yes" xml:space="preserve">
          <source>If there is a security manager, this method first calls the security manager's &lt;code&gt;checkCreateClassLoader&lt;/code&gt; method to ensure creation of a class loader is allowed.</source>
          <target state="translated">セキュリティーマネージャーがある場合、このメソッドは最初にセキュリティーマネージャーの &lt;code&gt;checkCreateClassLoader&lt;/code&gt; メソッドを呼び出して、クラスローダーの作成が許可されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="799f9e285d27c3aa5aa412489ee33ebf55b4583d" translate="yes" xml:space="preserve">
          <source>If there is a security manager, this method first calls the security manager's &lt;code&gt;checkSetFactory&lt;/code&gt; method to ensure the operation is allowed. This could result in a &lt;code&gt;SecurityException&lt;/code&gt;.</source>
          <target state="translated">If there is a security manager, this method first calls the security manager's &lt;code&gt;checkSetFactory&lt;/code&gt; method to ensure the operation is allowed. This could result in a &lt;code&gt;SecurityException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="532913bfc0592ca00219b6f161a58e7676757794" translate="yes" xml:space="preserve">
          <source>If there is a security manager, this method first calls the security manager's &lt;code&gt;checkSetFactory&lt;/code&gt; method to ensure the operation is allowed. This could result in a SecurityException.</source>
          <target state="translated">セキュリティーマネージャーがある場合、このメソッドは最初にセキュリティーマネージャーの &lt;code&gt;checkSetFactory&lt;/code&gt; メソッドを呼び出して、操作が許可されていることを確認します。これにより、SecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="b85ee089e6901857f30792e22767b9407897d233" translate="yes" xml:space="preserve">
          <source>If there is a security manager, this method first calls the security manager's &lt;code&gt;checkSetFactory&lt;/code&gt; method. This could result in a SecurityException.</source>
          <target state="translated">If there is a security manager, this method first calls the security manager's &lt;code&gt;checkSetFactory&lt;/code&gt; method. This could result in a SecurityException.</target>
        </trans-unit>
        <trans-unit id="d0319ca077ddde1bcf2e693ddcb559868dc66ee3" translate="yes" xml:space="preserve">
          <source>If there is a security manager, this method first performs some security checks. First, if &lt;code&gt;p.getAddress().isMulticastAddress()&lt;/code&gt; is true, this method calls the security manager's &lt;code&gt;checkMulticast&lt;/code&gt; method with &lt;code&gt;p.getAddress()&lt;/code&gt; and &lt;code&gt;ttl&lt;/code&gt; as its arguments. If the evaluation of that expression is false, this method instead calls the security manager's &lt;code&gt;checkConnect&lt;/code&gt; method with arguments &lt;code&gt;p.getAddress().getHostAddress()&lt;/code&gt; and &lt;code&gt;p.getPort()&lt;/code&gt;. Each call to a security manager method could result in a SecurityException if the operation is not allowed.</source>
          <target state="translated">セキュリティーマネージャーがある場合、このメソッドは最初にいくつかのセキュリティーチェックを実行します。まず、 &lt;code&gt;p.getAddress().isMulticastAddress()&lt;/code&gt; がtrueの場合、このメソッドは &lt;code&gt;p.getAddress()&lt;/code&gt; と &lt;code&gt;ttl&lt;/code&gt; を引数としてセキュリティマネージャーの &lt;code&gt;checkMulticast&lt;/code&gt; メソッドを呼び出します。その式の評価がfalseの場合、このメソッドは代わりに引数 &lt;code&gt;p.getAddress().getHostAddress()&lt;/code&gt; および &lt;code&gt;p.getPort()&lt;/code&gt; を使用してセキュリティマネージャーの &lt;code&gt;checkConnect&lt;/code&gt; メソッドを呼び出します。操作が許可されていない場合、セキュリティマネージャメソッドを呼び出すたびにSecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="63982b929f4b12662afdfb3691962ff7e8ce5aaa" translate="yes" xml:space="preserve">
          <source>If there is a security manger, its &lt;code&gt;checkPermission&lt;/code&gt; method will be invoked with a &lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt; permission; this could result in a &lt;code&gt;SecurityException&lt;/code&gt;. The implementation of this method may also perform further security checks to verify that the calling context has permission to connect to all of the URLs in the codebase URL path.</source>
          <target state="translated">If there is a security manger, its &lt;code&gt;checkPermission&lt;/code&gt; method will be invoked with a &lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt; permission; this could result in a &lt;code&gt;SecurityException&lt;/code&gt; . The implementation of this method may also perform further security checks to verify that the calling context has permission to connect to all of the URLs in the codebase URL path.</target>
        </trans-unit>
        <trans-unit id="bf4410fbd9dbb3855c2a0c2fc2a80606e063a5a3" translate="yes" xml:space="preserve">
          <source>If there is a security manger, its &lt;code&gt;checkPermission&lt;/code&gt; method will be invoked with a &lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt; permission; this could result in a &lt;code&gt;SecurityException&lt;/code&gt;. The provider implementation of this method may also perform further security checks to verify that the calling context has permission to connect to all of the URLs in the codebase URL path.</source>
          <target state="translated">If there is a security manger, its &lt;code&gt;checkPermission&lt;/code&gt; method will be invoked with a &lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt; permission; this could result in a &lt;code&gt;SecurityException&lt;/code&gt; . The provider implementation of this method may also perform further security checks to verify that the calling context has permission to connect to all of the URLs in the codebase URL path.</target>
        </trans-unit>
        <trans-unit id="696cdd286fb1f9966bf04867ac93a074e1dded21" translate="yes" xml:space="preserve">
          <source>If there is a way to convert &lt;em&gt;opendata(J)&lt;/em&gt; back to &lt;em&gt;J&lt;/em&gt; then we say that &lt;em&gt;J&lt;/em&gt; is &lt;em&gt;reconstructible&lt;/em&gt;. All method parameters in an MXBean interface must be reconstructible, because when the MXBean framework is invoking a method it will need to convert those parameters from &lt;em&gt;opendata(J)&lt;/em&gt; to &lt;em&gt;J&lt;/em&gt;. In a proxy generated by &lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt;&lt;/a&gt;, it is the return values of the methods in the MXBean interface that must be reconstructible.</source>
          <target state="translated">If there is a way to convert &lt;em&gt;opendata(J)&lt;/em&gt; back to &lt;em&gt;J&lt;/em&gt; then we say that &lt;em&gt;J&lt;/em&gt; is &lt;em&gt;reconstructible&lt;/em&gt;. All method parameters in an MXBean interface must be reconstructible, because when the MXBean framework is invoking a method it will need to convert those parameters from &lt;em&gt;opendata(J)&lt;/em&gt; to &lt;em&gt;J&lt;/em&gt;. In a proxy generated by &lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; &lt;/a&gt;, it is the return values of the methods in the MXBean interface that must be reconstructible.</target>
        </trans-unit>
        <trans-unit id="f00389ed8595939dc871f12e3fcfe41a5531ae8a" translate="yes" xml:space="preserve">
          <source>If there is a way to convert &lt;em&gt;opendata(J)&lt;/em&gt; back to &lt;em&gt;J&lt;/em&gt; then we say that &lt;em&gt;J&lt;/em&gt; is &lt;em&gt;reconstructible&lt;/em&gt;. All method parameters in an MXBean interface must be reconstructible, because when the MXBean framework is invoking a method it will need to convert those parameters from &lt;em&gt;opendata(J)&lt;/em&gt; to &lt;em&gt;J&lt;/em&gt;. In a proxy generated by &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt;&lt;/a&gt;, it is the return values of the methods in the MXBean interface that must be reconstructible.</source>
          <target state="translated">&lt;em&gt;opendata（J）&lt;/em&gt;を&lt;em&gt;Jに&lt;/em&gt;戻す方法がある場合、&lt;em&gt;J&lt;/em&gt;は&lt;em&gt;再構築可能である&lt;/em&gt;と言います。MXBeanフレームワークがメソッドを呼び出すときに、これらのパラメーターを&lt;em&gt;opendata（J）&lt;/em&gt;から&lt;em&gt;J&lt;/em&gt;に変換する必要があるため、MXBeanインターフェースのすべてのメソッドパラメーターは再構築可能である必要があります。&lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; &lt;/a&gt;によって生成されたプロキシでは、再構築可能でなければならないのは、MXBeanインターフェースのメソッドの戻り値です。</target>
        </trans-unit>
        <trans-unit id="b80859daf00685681791770cf08af14640ed386a" translate="yes" xml:space="preserve">
          <source>If there is an embedded exception, and if the SAXException has no detail message of its own, this method will return the detail message from the embedded exception.</source>
          <target state="translated">埋め込まれた例外があり、SAXExceptionにそれ自身の詳細メッセージがない場合、このメソッドは埋め込まれた例外の詳細メッセージを返します。</target>
        </trans-unit>
        <trans-unit id="d2e96a33766dec8129dace08a450401d0d9f28dc" translate="yes" xml:space="preserve">
          <source>If there is an error while loading or scaling an image, that image is considered to have finished loading. Use the &lt;code&gt;isErrorAny&lt;/code&gt; and &lt;code&gt;isErrorID&lt;/code&gt; methods to check for errors.</source>
          <target state="translated">If there is an error while loading or scaling an image, that image is considered to have finished loading. Use the &lt;code&gt;isErrorAny&lt;/code&gt; and &lt;code&gt;isErrorID&lt;/code&gt; methods to check for errors.</target>
        </trans-unit>
        <trans-unit id="a5644f977cf03bc3dcfd54d5e5282d96e0e8e7ab" translate="yes" xml:space="preserve">
          <source>If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the &lt;code&gt;isErrorAny&lt;/code&gt; and &lt;code&gt;isErrorID&lt;/code&gt; methods to check for errors.</source>
          <target state="translated">If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the &lt;code&gt;isErrorAny&lt;/code&gt; and &lt;code&gt;isErrorID&lt;/code&gt; methods to check for errors.</target>
        </trans-unit>
        <trans-unit id="dac5311ab03433886854f19241b442e660113c11" translate="yes" xml:space="preserve">
          <source>If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the &lt;code&gt;isErrorAny&lt;/code&gt; or &lt;code&gt;isErrorID&lt;/code&gt; methods to check for errors.</source>
          <target state="translated">If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the &lt;code&gt;isErrorAny&lt;/code&gt; or &lt;code&gt;isErrorID&lt;/code&gt; methods to check for errors.</target>
        </trans-unit>
        <trans-unit id="46881d0768f79ef8afcf68abaa71937fc7171ad1" translate="yes" xml:space="preserve">
          <source>If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the &lt;code&gt;statusID&lt;/code&gt;, &lt;code&gt;isErrorID&lt;/code&gt;, and &lt;code&gt;isErrorAny&lt;/code&gt; methods to check for errors.</source>
          <target state="translated">If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the &lt;code&gt;statusID&lt;/code&gt; , &lt;code&gt;isErrorID&lt;/code&gt; , and &lt;code&gt;isErrorAny&lt;/code&gt; methods to check for errors.</target>
        </trans-unit>
        <trans-unit id="b8ec246e3bef63fa40b6bd7a53890c4d682a9eac" translate="yes" xml:space="preserve">
          <source>If there is an existing owner different from the argument &lt;code&gt;owner&lt;/code&gt;, that owner is notified that it no longer holds ownership of the clipboard contents via an invocation of &lt;code&gt;ClipboardOwner.lostOwnership()&lt;/code&gt; on that owner. An implementation of &lt;code&gt;setContents()&lt;/code&gt; is free not to invoke &lt;code&gt;lostOwnership()&lt;/code&gt; directly from this method. For example, &lt;code&gt;lostOwnership()&lt;/code&gt; may be invoked later on a different thread. The same applies to &lt;code&gt;FlavorListener&lt;/code&gt;s registered on this clipboard.</source>
          <target state="translated">If there is an existing owner different from the argument &lt;code&gt;owner&lt;/code&gt; , that owner is notified that it no longer holds ownership of the clipboard contents via an invocation of &lt;code&gt;ClipboardOwner.lostOwnership()&lt;/code&gt; on that owner. An implementation of &lt;code&gt;setContents()&lt;/code&gt; is free not to invoke &lt;code&gt;lostOwnership()&lt;/code&gt; directly from this method. For example, &lt;code&gt;lostOwnership()&lt;/code&gt; may be invoked later on a different thread. The same applies to &lt;code&gt;FlavorListener&lt;/code&gt; s registered on this clipboard.</target>
        </trans-unit>
        <trans-unit id="9bde7f17c2deabb0575bd222ed2f85f576a5ede8" translate="yes" xml:space="preserve">
          <source>If there is any error (say, I/O error or format error) during the reading process of the KeyTab file, a saved result should be returned. If there is no saved result (say, this is the first time this method is called, or, all previous read attempts failed), an empty array should be returned. This can make sure the result is not drastically changed during the (probably slow) update of the keytab file.</source>
          <target state="translated">KeyTabファイルの読み込み処理中にエラー(I/Oエラーやフォーマットエラーなど)が発生した場合は、保存された結果が返されなければなりません。保存された結果がない場合(例えば、このメソッドを呼び出すのが初めてだったり、以前の読み込みの試みがすべて失敗した場合)、空の配列が返されます。これにより、keytabファイルの(おそらく遅い)更新中に結果が大幅に変更されないことを確認することができます。</target>
        </trans-unit>
        <trans-unit id="20616256852615e42dbadb55ba5815746032d11a" translate="yes" xml:space="preserve">
          <source>If there is any error (say, I/O error or format error) during the reading process of the keytab file, a saved result should be returned. If there is no saved result (say, this is the first time this method is called, or, all previous read attempts failed), an empty array should be returned. This can make sure the result is not drastically changed during the (probably slow) update of the keytab file.</source>
          <target state="translated">keytabファイルの読み込み処理中にエラー(I/Oエラーやフォーマット・エラーなど)が発生した場合は、保存された結果を返す必要があります。保存された結果がない場合(例えば、このメソッドが呼び出されたのが初めてだったり、以前の読み込みに失敗した場合など)、空の配列が返されます。これにより、keytabファイルの(おそらく遅い)更新中に結果が大幅に変更されないことを確認することができます。</target>
        </trans-unit>
        <trans-unit id="e2521f70370beeb7a65247f5ecdb6409da533aa1" translate="yes" xml:space="preserve">
          <source>If there is any inherited context, then it has already been copied into the &lt;code&gt;URL&lt;/code&gt; argument.</source>
          <target state="translated">継承されたコンテキストがある場合、それはすでに &lt;code&gt;URL&lt;/code&gt; 引数にコピーされています。</target>
        </trans-unit>
        <trans-unit id="1538c9e56cc4a72171a55abc846e5acdad6ad5c5" translate="yes" xml:space="preserve">
          <source>If there is at least one getter and every getter has a convertible type, then &lt;em&gt;opentype(J)&lt;/em&gt; is a &lt;code&gt;
      CompositeType&lt;/code&gt; with one item for every getter. If the getter is</source>
          <target state="translated">If there is at least one getter and every getter has a convertible type, then &lt;em&gt;opentype(J)&lt;/em&gt; is a &lt;code&gt; CompositeType&lt;/code&gt; with one item for every getter. If the getter is</target>
        </trans-unit>
        <trans-unit id="ce492db546ed8f744751a5952cc84069d57cdf28" translate="yes" xml:space="preserve">
          <source>If there is at least one getter and every getter has a convertible type, then &lt;em&gt;opentype(J)&lt;/em&gt; is a &lt;code&gt;CompositeType&lt;/code&gt; with one item for every getter. If the getter is</source>
          <target state="translated">少なくとも1つのゲッターがあり、すべてのゲッターが変換可能なタイプを持っている場合、&lt;em&gt;opentype（J）&lt;/em&gt;は、すべてのゲッターに対して1つのアイテムを持つ &lt;code&gt;CompositeType&lt;/code&gt; です。ゲッターが</target>
        </trans-unit>
        <trans-unit id="f0a5ce38d1565c12f161531f62c2ed657aa770d3" translate="yes" xml:space="preserve">
          <source>If there is exactly one such interface, or if there is one such interface that is a subinterface of all the others, then the object is an MXBean. The interface in question is the &lt;em&gt;MXBean interface&lt;/em&gt;. In the example above, the MXBean interface is &lt;code&gt;MemoryPoolMXBean&lt;/code&gt;.</source>
          <target state="translated">そのようなインターフェースが1つだけある場合、または他のすべてのサブインターフェースであるインターフェースが1つある場合、オブジェクトはMXBeanです。問題のインターフェースは&lt;em&gt;MXBeanインターフェース&lt;/em&gt;です。上記の例では、MXBeanインターフェースは &lt;code&gt;MemoryPoolMXBean&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2719aa3eb5a7fffd1ca38e949931f67f1421af57" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;serviceURL&lt;/code&gt;, there must be a user-provided &lt;code&gt;RMIServerImpl&lt;/code&gt;. If the &lt;a href=&quot;rmiserverimpl#toStub--&quot;&gt;&lt;code&gt;toStub&lt;/code&gt;&lt;/a&gt; method on this object returns an instance of &lt;a href=&quot;/openjdk~8_web/javax/rmi/corba/stub&quot;&gt;&lt;code&gt;Stub&lt;/code&gt;&lt;/a&gt;, then the connector server will generate a &lt;code&gt;JMXServiceURL&lt;/code&gt; using the &lt;code&gt;iiop&lt;/code&gt; form above. Otherwise, it will generate a &lt;code&gt;JMXServiceURL&lt;/code&gt; using the &lt;code&gt;rmi&lt;/code&gt; form.</source>
          <target state="translated">&lt;code&gt;serviceURL&lt;/code&gt; がない場合は、ユーザー提供の &lt;code&gt;RMIServerImpl&lt;/code&gt; が必要です。場合&lt;a href=&quot;rmiserverimpl#toStub--&quot;&gt; &lt;code&gt;toStub&lt;/code&gt; の&lt;/a&gt;このオブジェクトのメソッドがインスタンス返す&lt;a href=&quot;/openjdk~8_web/javax/rmi/corba/stub&quot;&gt; &lt;code&gt;Stub&lt;/code&gt; &lt;/a&gt;、次いで、コネクタサーバーは、生成され &lt;code&gt;JMXServiceURL&lt;/code&gt; 使用して &lt;code&gt;iiop&lt;/code&gt; 上記フォーム。それ以外の場合は、 &lt;code&gt;rmi&lt;/code&gt; フォームを使用して &lt;code&gt;JMXServiceURL&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="8a2bf9ecdfc5d61123d9e4fc43dc1ffa56add6c1" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;serviceURL&lt;/code&gt;, there must be a user-provided &lt;code&gt;RMIServerImpl&lt;/code&gt;. The connector server will generate a &lt;code&gt;JMXServiceURL&lt;/code&gt; using the &lt;code&gt;rmi&lt;/code&gt; form.</source>
          <target state="translated">If there is no &lt;code&gt;serviceURL&lt;/code&gt; , there must be a user-provided &lt;code&gt;RMIServerImpl&lt;/code&gt; . The connector server will generate a &lt;code&gt;JMXServiceURL&lt;/code&gt; using the &lt;code&gt;rmi&lt;/code&gt; form.</target>
        </trans-unit>
        <trans-unit id="f8c7ed9aa34be8bbca1c409e4e9d8af9947fac39" translate="yes" xml:space="preserve">
          <source>If there is no association existing between this channel's socket and the intended receiver, identified by the address in the given messageInfo, then one will be automatically setup to the intended receiver. This is considered to be Implicit Association Setup. Upon successful association setup, an &lt;a href=&quot;associationchangenotification&quot;&gt;&lt;code&gt;association changed&lt;/code&gt;&lt;/a&gt; notification will be put to the SCTP stack with its &lt;code&gt;event&lt;/code&gt; parameter set to &lt;a href=&quot;associationchangenotification.assocchangeevent#COMM_UP&quot;&gt;&lt;code&gt;COMM_UP&lt;/code&gt;&lt;/a&gt; . This notification can be received by invoking &lt;a href=&quot;#receive(java.nio.ByteBuffer,T,com.sun.nio.sctp.NotificationHandler)&quot;&gt;&lt;code&gt;receive&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc3dec11f4378075a31721786189ded4db361d5" translate="yes" xml:space="preserve">
          <source>If there is no current set of system properties, a set of system properties is first created and initialized in the same manner as for the &lt;code&gt;getProperties&lt;/code&gt; method.</source>
          <target state="translated">システムプロパティの現在のセットがない場合は、最初にシステムプロパティのセットが作成され、 &lt;code&gt;getProperties&lt;/code&gt; メソッドと同じ方法で初期化されます。</target>
        </trans-unit>
        <trans-unit id="62385658f9c9d30f2326007c7be1947af3806233" translate="yes" xml:space="preserve">
          <source>If there is no display name for the locale then a suitable default must be returned.</source>
          <target state="translated">ロケールの表示名がない場合は、適切なデフォルト値を返さなければなりません。</target>
        </trans-unit>
        <trans-unit id="14d757aed623c13896747a1cb10d2fafe0c24ef5" translate="yes" xml:space="preserve">
          <source>If there is no entry for a particular principal, then the principal is considered to have a null (empty) permission set.</source>
          <target state="translated">特定のプリンシパルのエントリがない場合、そのプリンシパルはヌル (空)のパーミッションセットを持っていると見なされます。</target>
        </trans-unit>
        <trans-unit id="83cc3943509d49fbbe54f8e7d0348cb9ef645fa2" translate="yes" xml:space="preserve">
          <source>If there is no entry in this Access Control List for the specified principal, an empty permission set is returned.</source>
          <target state="translated">指定されたプリンシパルのこのアクセス・コントロール・リストにエントリがない場合、空のパーミッション・セットが返されます。</target>
        </trans-unit>
        <trans-unit id="97ef1aceb0bd9ccbc5a3e085bc385c17a96da05c" translate="yes" xml:space="preserve">
          <source>If there is no index position at which they differ, then the shorter string lexicographically precedes the longer string. In this case, &lt;code&gt;compareTo&lt;/code&gt; returns the difference of the lengths of the strings -- that is, the value:</source>
          <target state="translated">それらが異なるインデックス位置がない場合は、短い文字列が辞書順で長い文字列に先行します。この場合、 &lt;code&gt;compareTo&lt;/code&gt; は文字列の長さの差、つまり値を返します。</target>
        </trans-unit>
        <trans-unit id="a5b86c82cbb33ba85e2cf972377173b04ef65d60" translate="yes" xml:space="preserve">
          <source>If there is no input method or keyboard layout available that supports the requested locale, the current input method or keyboard layout remains selected.</source>
          <target state="translated">要求されたロケールをサポートする入力方式やキーボードレイアウトがない場合は、現在の入力方式やキーボードレイアウトが選択されたままになります。</target>
        </trans-unit>
        <trans-unit id="f38d945bc914e61ae40e4aad1f19fc041a605394" translate="yes" xml:space="preserve">
          <source>If there is no match, then either the first or last index is used, depending on whether the number (X) is too low or too high. If the limit array is not in ascending order, the results of formatting will be incorrect. ChoiceFormat also accepts &lt;code&gt;\u221E&lt;/code&gt; as equivalent to infinity(INF).</source>
          <target state="translated">一致しない場合、数値（X）が小さすぎるか高すぎるかに応じて、最初または最後のインデックスが使用されます。制限配列が昇順でない場合、フォーマットの結果は正しくありません。ChoiceFormatは、 &lt;code&gt;\u221E&lt;/code&gt; u221Eもinfinity（INF）と同等のものとして受け入れます。</target>
        </trans-unit>
        <trans-unit id="2648977b5bfdd7de94f30791f17e5163fa9fa3c2" translate="yes" xml:space="preserve">
          <source>If there is no parent reader set, any attempt to parse or to set or get a feature or property will fail.</source>
          <target state="translated">親リーダが設定されていない場合、機能やプロパティを解析したり、設定したり取得したりしようとすると失敗します。</target>
        </trans-unit>
        <trans-unit id="f3d0e4d2da1282aaec455fc4732cff1c598c3d7c" translate="yes" xml:space="preserve">
          <source>If there is no property with the specified name, if the specified name is empty or &lt;code&gt;null&lt;/code&gt;, or if the property does not have the correct numeric format, then &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">指定された名前のプロパティがない場合、指定された名前が空または &lt;code&gt;null&lt;/code&gt; の場合、またはプロパティの数値形式が正しくない場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="ebec043b114adf3a66c121103ae990378ebe9b9b" translate="yes" xml:space="preserve">
          <source>If there is no property with the specified name, or if the specified name is empty or null, then &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="translated">指定された名前のプロパティがない場合、または指定された名前が空またはnullの場合は、 &lt;code&gt;false&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="217c4e72fc9b4dd43cf1ac4eaa272b71123427a9" translate="yes" xml:space="preserve">
          <source>If there is no such parameter list, the external parameter list is taken to be the empty sequence.</source>
          <target state="translated">そのようなパラメータリストがない場合、外部パラメータリストは空のシーケンスとして扱われます。</target>
        </trans-unit>
        <trans-unit id="62eecfe9a255148d750e0784a244f5d095566c9e" translate="yes" xml:space="preserve">
          <source>If there is one or more timer notifications before the time in the list of notifications, the notification is sent according to the &lt;code&gt;sendPastNotifications&lt;/code&gt; flag and then, updated according to its period and remaining number of occurrences. If the timer notification date remains earlier than the current date, this notification is just removed from the list of notifications.</source>
          <target state="translated">通知リストの時間より前に1つ以上のタイマー通知がある場合、通知は &lt;code&gt;sendPastNotifications&lt;/code&gt; フラグに従って送信され、その後、その期間と残りの発生回数に従って更新されます。タイマー通知の日付が現在の日付より前の場合、この通知は通知のリストから削除されるだけです。</target>
        </trans-unit>
        <trans-unit id="b3edef51748fde1dc3cb9b0db38c74d836448067" translate="yes" xml:space="preserve">
          <source>If these fields have not been set, meaning that the &lt;code&gt;execute&lt;/code&gt; method has not executed successfully, no methods other than &lt;code&gt;execute&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; may be called on the rowset. All other public methods will throw an exception.</source>
          <target state="translated">If these fields have not been set, meaning that the &lt;code&gt;execute&lt;/code&gt; method has not executed successfully, no methods other than &lt;code&gt;execute&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; may be called on the rowset. All other public methods will throw an exception.</target>
        </trans-unit>
        <trans-unit id="da9dbbb1b206e8e0a44cdf5f294d39074c1d1013" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class or interface that implements no interfaces, the method returns an array of length 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bea1d12841642f06cd5c576dd8ad73a21f49fc5b" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class or interface whose declaration does not explicitly indicate any annotated superinterfaces, the return value is an array of length 0.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが、その宣言が注釈付きスーパーインターフェースを明示的に示さないクラスまたはインターフェースを表す場合、戻り値は長さ0の配列です。</target>
        </trans-unit>
        <trans-unit id="6e8416f8b31967b12db27ca7304aeef5569fa6c8" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class or interface with no accessible public fields, then this method returns an array of length 0.</source>
          <target state="translated">If this &lt;code&gt;Class&lt;/code&gt; object represents a class or interface with no accessible public fields, then this method returns an array of length 0.</target>
        </trans-unit>
        <trans-unit id="94f6da01be13858770dcd2fbeb1c8376bf8f27d5" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class or interface with no declared fields, then this method returns an array of length 0.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがフィールドが宣言されていないクラスまたはインターフェースを表す場合、このメソッドは長さが0の配列を返します。</target>
        </trans-unit>
        <trans-unit id="c5e526ec67c2b068f6813c00e0742ddec3d6151e" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class or interface with no declared methods, then the returned array has length 0.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが宣言されたメソッドのないクラスまたはインターフェースを表す場合、返される配列の長さは0です。</target>
        </trans-unit>
        <trans-unit id="d4ce471ae16ab801b2259a590ff7a0fee5c25fdb" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class or interface with no no accessible public fields, then this method returns an array of length 0.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが、アクセス可能なパブリックフィールドがないクラスまたはインターフェースを表す場合、このメソッドは長さ0の配列を返します。</target>
        </trans-unit>
        <trans-unit id="89bb69095909bff1e8994753820a646783cdac75" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class or interface, not an array class, then:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c664406d0522e22c26f8aa4cf18c2f0c9efc994e" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class, the return value is an array containing objects representing all interfaces directly implemented by the class. The order of the interface objects in the array corresponds to the order of the interface names in the &lt;code&gt;implements&lt;/code&gt; clause of the declaration of the class represented by this &lt;code&gt;Class&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db27714da382f703a913c7a11179d75442553bce" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class, the return value is an array containing objects representing all interfaces directly implemented by the class. The order of the interface objects in the array corresponds to the order of the interface names in the &lt;code&gt;implements&lt;/code&gt; clause of the declaration of the class represented by this &lt;code&gt;Class&lt;/code&gt; object. For example, given the declaration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9c0f2616e4b918558184c0ef2f121a34cc9b89a" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class, the return value is an array containing objects representing the uses of interface types to specify interfaces implemented by the class. The order of the objects in the array corresponds to the order of the interface types used in the 'implements' clause of the declaration of this &lt;code&gt;Class&lt;/code&gt; object.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがクラスを表す場合、戻り値は、クラスによって実装されるインターフェースを指定するためのインターフェースタイプの使用を表すオブジェクトを含む配列です。配列内のオブジェクトの順序は、この &lt;code&gt;Class&lt;/code&gt; オブジェクトの宣言の 'implements'句で使用されるインターフェイスタイプの順序に対応しています。</target>
        </trans-unit>
        <trans-unit id="972bf4d56f599ffc46c00671b73ed210f8ab96fd" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class, then this method returns the public fields of the class and of all its superclasses and superinterfaces.</source>
          <target state="translated">If this &lt;code&gt;Class&lt;/code&gt; object represents a class, then this method returns the public fields of the class and of all its superclasses and superinterfaces.</target>
        </trans-unit>
        <trans-unit id="8ea0225aadb3a9617c32673581f4007aea0f62a1" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class, then this method returns the public fields of the class and of all its superclasses.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがクラスを表す場合、このメソッドはクラスとそのすべてのスーパークラスのパブリックフィールドを返します。</target>
        </trans-unit>
        <trans-unit id="19efbdc41b97ce163692b9570014a1cf2d915716" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a local or anonymous class within a constructor, returns a &lt;a href=&quot;reflect/constructor&quot;&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt; object representing the immediately enclosing constructor of the underlying class.</source>
          <target state="translated">If this &lt;code&gt;Class&lt;/code&gt; object represents a local or anonymous class within a constructor, returns a &lt;a href=&quot;reflect/constructor&quot;&gt; &lt;code&gt;Constructor&lt;/code&gt; &lt;/a&gt; object representing the immediately enclosing constructor of the underlying class.</target>
        </trans-unit>
        <trans-unit id="42af070ad6a4d3648b309df9a277dd2d8e338352" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a local or anonymous class within a constructor, returns a &lt;a href=&quot;reflect/constructor&quot;&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt; object representing the immediately enclosing constructor of the underlying class. Returns &lt;code&gt;null&lt;/code&gt; otherwise. In particular, this method returns &lt;code&gt;null&lt;/code&gt; if the underlying class is a local or anonymous class immediately enclosed by a type declaration, instance initializer or static initializer.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがコンストラクター内のローカルクラスまたは匿名クラスを表す場合、基になるクラスのすぐ外側のコンストラクターを表す&lt;a href=&quot;reflect/constructor&quot;&gt; &lt;code&gt;Constructor&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。それ以外の場合は &lt;code&gt;null&lt;/code&gt; を返します。特に、このメソッドは、基になるクラスが、型宣言、インスタンス初期化子、または静的初期化子によってすぐに囲まれたローカルクラスまたは匿名クラスである場合、 &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="97ef3bf0bcc99ac4678b3a68f5947eddd7c49a75" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a local or anonymous class within a method, returns a &lt;a href=&quot;reflect/method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; object representing the immediately enclosing method of the underlying class.</source>
          <target state="translated">If this &lt;code&gt;Class&lt;/code&gt; object represents a local or anonymous class within a method, returns a &lt;a href=&quot;reflect/method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; object representing the immediately enclosing method of the underlying class.</target>
        </trans-unit>
        <trans-unit id="4477ae736ceef4ce368b1839297468a2918b1155" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a local or anonymous class within a method, returns a &lt;a href=&quot;reflect/method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; object representing the immediately enclosing method of the underlying class. Returns &lt;code&gt;null&lt;/code&gt; otherwise. In particular, this method returns &lt;code&gt;null&lt;/code&gt; if the underlying class is a local or anonymous class immediately enclosed by a type declaration, instance initializer or static initializer.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがメソッド内のローカルクラスまたは匿名クラスを表す場合、基になるクラスのすぐ外側のメソッドを表す&lt;a href=&quot;reflect/method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。それ以外の場合は &lt;code&gt;null&lt;/code&gt; を返します。特に、このメソッドは、基になるクラスが、型宣言、インスタンス初期化子、または静的初期化子によってすぐに囲まれたローカルクラスまたは匿名クラスである場合、 &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2a3ae28f0cc9994a8418c1f25794acf0dba7ddbd" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a primitive type or &lt;code&gt;void&lt;/code&gt;, then the result is a field descriptor string which is a one-letter code corresponding to a primitive type or &lt;code&gt;void&lt;/code&gt; (&lt;code&gt;&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;F&quot;, &quot;I&quot;, &quot;J&quot;, &quot;S&quot;, &quot;Z&quot;, &quot;V&quot;&lt;/code&gt;) (JVMS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.3.2&quot;&gt;4.3.2&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddd017ac2fa648338a5adfef36719dffa6cd4a7" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a primitive type or &lt;code&gt;void&lt;/code&gt;, then the result is a string with the same spelling as the Java language keyword which corresponds to the primitive type or &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce8f59b51441dc3e0dfd4f500ca0b103d2aa378" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a primitive type or void, null is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e1076c9609cebd2628d37243affd492d58bbb2" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a primitive type or void, the method returns an array of length 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bd7175460e43940d330fea2bc43e369e031bbb" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a primitive type or void, then the returned array has length 0.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがプリミティブ型またはvoidを表す場合、返される配列の長さは0です。</target>
        </trans-unit>
        <trans-unit id="3854e372a9cd1fcdc624d6d86e1f2d3b92f49c92" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a primitive type, an array type, or &lt;code&gt;void&lt;/code&gt;, then this method returns &lt;code&gt;this&lt;/code&gt;, indicating that the represented entity belongs to the nest consisting only of itself, and is the nest host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfe2652412126a5eafdde5443108fc5fd2020f2" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a primitive type, an array type, or &lt;code&gt;void&lt;/code&gt;, then this method returns a single-element array containing &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02c0ed1f5bae30d0291b5a6aaf11110bd96f07d" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a type that has a class initialization method &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt;, then the returned array does &lt;em&gt;not&lt;/em&gt; have a corresponding &lt;code&gt;Method&lt;/code&gt; object.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがクラス初期化メソッド &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt; を持つ型を表す場合、返される配列には対応する &lt;code&gt;Method&lt;/code&gt; オブジェクトがありませ&lt;em&gt;ん&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c4b86687e1e312e67b7460fddd5aed10106e1e53" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a type that has multiple declared methods with the same name and parameter types, but different return types, then the returned array has a &lt;code&gt;Method&lt;/code&gt; object for each such method.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが、名前とパラメーターの型が同じで戻り値の型が異なる複数の宣言されたメソッドを持つ型を表す場合、返される配列には、そのような各 &lt;code&gt;Method&lt;/code&gt; オブジェクトがあります。</target>
        </trans-unit>
        <trans-unit id="6a5139658d7d0116078759c8a142a520e5a7e171" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a type that has multiple public methods with the same name and parameter types, but different return types, then the returned array has a &lt;code&gt;Method&lt;/code&gt; object for each such method.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが、名前とパラメーターの型が同じで戻り値の型が異なる複数のパブリックメソッドを持つ型を表す場合、返される配列には、そのようなメソッドごとに &lt;code&gt;Method&lt;/code&gt; オブジェクトがあります。</target>
        </trans-unit>
        <trans-unit id="f9710c2aebb0499fff54a4c1fab48952630f8353" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a type whose declaration does not explicitly indicate an annotated superclass, then the return value is an &lt;code&gt;AnnotatedType&lt;/code&gt; object representing an element with no annotations.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが、宣言が注釈付きスーパークラスを明示的に示さない型を表す場合、戻り値は、 &lt;code&gt;AnnotatedType&lt;/code&gt; ない要素を表すAnnotatedTypeオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="abacab4cf9b024f594f0b3f572123f051f06c2c5" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a type with a class initialization method &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt;, then the returned array does &lt;em&gt;not&lt;/em&gt; have a corresponding &lt;code&gt;Method&lt;/code&gt; object.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがクラス初期化メソッド &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt; を持つ型を表す場合、返される配列には対応する &lt;code&gt;Method&lt;/code&gt; オブジェクトがありませ&lt;em&gt;ん&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="967e996b2092a0d523d490bc35ee89ac74138a79" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an array class, then the result is a string consisting of one or more '&lt;code&gt;[&lt;/code&gt;' characters representing the depth of the array nesting, followed by the descriptor string of the element type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14a8b922cdce1119585c5f1a0795f16cbd6be65" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an array class, then the result is a string consisting of one or more '&lt;code&gt;[&lt;/code&gt;' characters representing the depth of the array nesting, followed by the element type as encoded using the following table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bebb6eaefac5ae2ce6d923cc8da1eb725883029" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an array type, a primitive type, or void, then the returned array has length 0.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが配列型、プリミティブ型、またはvoidを表す場合、返される配列の長さは0です。</target>
        </trans-unit>
        <trans-unit id="70b797601062908da356817410150aa204020fc1" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an array type, a primitive type, or void, then this method returns an array of length 0.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが配列型、プリミティブ型、またはvoidを表す場合、このメソッドは長さが0の配列を返します。</target>
        </trans-unit>
        <trans-unit id="20332c048f55b2154c66a445225edb4bdb3e274e" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an array type, the interfaces &lt;code&gt;Cloneable&lt;/code&gt; and &lt;code&gt;java.io.Serializable&lt;/code&gt; are returned in that order.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが配列型を表す場合、インターフェイス &lt;code&gt;Cloneable&lt;/code&gt; および &lt;code&gt;java.io.Serializable&lt;/code&gt; がこの順序で返されます。</target>
        </trans-unit>
        <trans-unit id="348539037139d48e6387c9a62912e6564911c876" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an array type, then the returned array has a &lt;code&gt;Method&lt;/code&gt; object for each of the public methods inherited by the array type from &lt;code&gt;Object&lt;/code&gt;. It does not contain a &lt;code&gt;Method&lt;/code&gt; object for &lt;code&gt;clone()&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが配列型を表す場合、返される配列には、 &lt;code&gt;Object&lt;/code&gt; から配列型によって継承されたパブリックメソッドごとに &lt;code&gt;Method&lt;/code&gt; オブジェクトがあります。 &lt;code&gt;clone()&lt;/code&gt; の &lt;code&gt;Method&lt;/code&gt; オブジェクトは含まれていません。</target>
        </trans-unit>
        <trans-unit id="29e81a940f259cfb7b07c0e245bb52be63c0dd30" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an array type, then this method does not find the &lt;code&gt;clone()&lt;/code&gt; method.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが配列型を表す場合、このメソッドは &lt;code&gt;clone()&lt;/code&gt; メソッドを見つけられません。</target>
        </trans-unit>
        <trans-unit id="cb178a8f1871d07a34cdb3bb2de9a0c1fb20f2b9" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an array type, then this method does not find the &lt;code&gt;length&lt;/code&gt; field of the array type.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが配列型を表す場合、このメソッドは配列型の &lt;code&gt;length&lt;/code&gt; フィールドを見つけられません。</target>
        </trans-unit>
        <trans-unit id="4bd7f84a076a4583d7107678dfa8e8e6a579b02f" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an array type, then this method finds any public method inherited by the array type from &lt;code&gt;Object&lt;/code&gt; except method &lt;code&gt;clone()&lt;/code&gt;.</source>
          <target state="translated">If this &lt;code&gt;Class&lt;/code&gt; object represents an array type, then this method finds any public method inherited by the array type from &lt;code&gt;Object&lt;/code&gt; except method &lt;code&gt;clone()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c4b35440106aa65e3bd6d1155d9e17869493181" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an interface then the returned array does not contain any implicitly declared methods from &lt;code&gt;Object&lt;/code&gt;. Therefore, if no methods are explicitly declared in this interface or any of its superinterfaces then the returned array has length 0. (Note that a &lt;code&gt;Class&lt;/code&gt; object which represents a class always has public methods, inherited from &lt;code&gt;Object&lt;/code&gt;.)</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがインターフェースを表す場合、返される配列には、 &lt;code&gt;Object&lt;/code&gt; から暗黙的に宣言されたメソッドは含まれません。したがって、このインターフェイスまたはそのスーパーインターフェイスのいずれかでメソッドが明示的に宣言されていない場合、返される配列の長さは0です（ &lt;code&gt;Class&lt;/code&gt; を表すClassオブジェクトには常に &lt;code&gt;Object&lt;/code&gt; から継承されたパブリックメソッドがあることに注意してください）。</target>
        </trans-unit>
        <trans-unit id="50a58368b3e27e2351421689396e8aedc8df4704" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an interface then this method does not find any implicitly declared method from &lt;code&gt;Object&lt;/code&gt;. Therefore, if no methods are explicitly declared in this interface or any of its superinterfaces, then this method does not find any method.</source>
          <target state="translated">If this &lt;code&gt;Class&lt;/code&gt; object represents an interface then this method does not find any implicitly declared method from &lt;code&gt;Object&lt;/code&gt; . Therefore, if no methods are explicitly declared in this interface or any of its superinterfaces, then this method does not find any method.</target>
        </trans-unit>
        <trans-unit id="45c9a0ebbda8feb26f5e010d8c8f598fe0c99748" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an interface, the array contains objects representing all interfaces directly extended by the interface. The order of the interface objects in the array corresponds to the order of the interface names in the &lt;code&gt;extends&lt;/code&gt; clause of the declaration of the interface represented by this &lt;code&gt;Class&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2d45c96fc82cd4f5045bb65c083bb3e36fa1de" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an interface, the return value is an array containing objects representing the uses of interface types to specify interfaces directly extended by the interface. The order of the objects in the array corresponds to the order of the interface types used in the 'extends' clause of the declaration of this &lt;code&gt;Class&lt;/code&gt; object.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがインターフェースを表す場合、戻り値は、インターフェースによって直接拡張されるインターフェースを指定するためのインターフェースタイプの使用を表すオブジェクトを含む配列です。配列内のオブジェクトの順序は、この &lt;code&gt;Class&lt;/code&gt; オブジェクトの宣言の 'extends'句で使用されるインターフェイスタイプの順序に対応しています。</target>
        </trans-unit>
        <trans-unit id="0f7aab31089775b3540a55de72ec8246707dca71" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an interface, then this method returns the fields of the interface and of all its superinterfaces.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがインターフェースを表す場合、このメソッドはインターフェースとそのすべてのスーパーインターフェースのフィールドを返します。</target>
        </trans-unit>
        <trans-unit id="24fcfbcd558d192b46d9d8daf24bd3361c63931e" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents either the &lt;code&gt;Object&lt;/code&gt; class, an array type, a primitive type, or void, the return value is an array of length 0.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが &lt;code&gt;Object&lt;/code&gt; クラス、配列型、プリミティブ型、またはvoidのいずれかを表す場合、戻り値は長さが0の配列です。</target>
        </trans-unit>
        <trans-unit id="74ef85a38a3ffe3f10aa47e5d033acb048da33fd" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; represents either the &lt;code&gt;Object&lt;/code&gt; class, an interface type, an array type, a primitive type, or void, the return value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; が &lt;code&gt;Object&lt;/code&gt; クラス、インターフェース型、配列型、プリミティブ型、またはvoidのいずれかを表す場合、戻り値は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b79ca71cca6aeb6a7facb903fa697dd31da36756" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Container&lt;/code&gt; is not valid, this method invokes the &lt;code&gt;validateTree&lt;/code&gt; method and marks this &lt;code&gt;Container&lt;/code&gt; as valid. Otherwise, no action is performed.</source>
          <target state="translated">If this &lt;code&gt;Container&lt;/code&gt; is not valid, this method invokes the &lt;code&gt;validateTree&lt;/code&gt; method and marks this &lt;code&gt;Container&lt;/code&gt; as valid. Otherwise, no action is performed.</target>
        </trans-unit>
        <trans-unit id="d61b3bb217a8c25d2209158ddd28a60999b5d264" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Deflater&lt;/code&gt; has been subclassed and the &lt;code&gt;end&lt;/code&gt; method has been overridden, the &lt;code&gt;end&lt;/code&gt; method will be called by the finalization when the deflater is unreachable. But the subclasses should not depend on this specific implementation; the finalization is not reliable and the &lt;code&gt;finalize&lt;/code&gt; method is deprecated to be removed.</source>
          <target state="translated">If this &lt;code&gt;Deflater&lt;/code&gt; has been subclassed and the &lt;code&gt;end&lt;/code&gt; method has been overridden, the &lt;code&gt;end&lt;/code&gt; method will be called by the finalization when the deflater is unreachable. But the subclasses should not depend on this specific implementation; the finalization is not reliable and the &lt;code&gt;finalize&lt;/code&gt; method is deprecated to be removed.</target>
        </trans-unit>
        <trans-unit id="6c005c11b66aec51de31e87c510532c6a448273e" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Field&lt;/code&gt; object is enforcing Java language access control, and the underlying field is inaccessible, the method throws an &lt;code&gt;IllegalAccessException&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Field&lt;/code&gt; オブジェクトがJava言語アクセス制御を実施していて、基になるフィールドにアクセスできない場合、メソッドは &lt;code&gt;IllegalAccessException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="bfff6651d72785da15b50a35bc44c7be29e967f4" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Field&lt;/code&gt; object is enforcing Java language access control, and the underlying field is inaccessible, the method throws an &lt;code&gt;IllegalAccessException&lt;/code&gt;. If the underlying field is static, the class that declared the field is initialized if it has not already been initialized.</source>
          <target state="translated">この &lt;code&gt;Field&lt;/code&gt; オブジェクトがJava言語アクセス制御を実施していて、基になるフィールドにアクセスできない場合、メソッドは &lt;code&gt;IllegalAccessException&lt;/code&gt; をスローします。基本となるフィールドが静的である場合、フィールドを宣言したクラスは、まだ初期化されていない場合は初期化されます。</target>
        </trans-unit>
        <trans-unit id="eb5b424e32b92ab7192512c0fc09ab99276ccc50" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Graphics2D&lt;/code&gt; context is drawing to a &lt;code&gt;Component&lt;/code&gt; on the display screen and the &lt;code&gt;Composite&lt;/code&gt; is a custom object rather than an instance of the &lt;code&gt;AlphaComposite&lt;/code&gt; class, and if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with an &lt;code&gt;AWTPermission(&quot;readDisplayPixels&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">If this &lt;code&gt;Graphics2D&lt;/code&gt; context is drawing to a &lt;code&gt;Component&lt;/code&gt; on the display screen and the &lt;code&gt;Composite&lt;/code&gt; is a custom object rather than an instance of the &lt;code&gt;AlphaComposite&lt;/code&gt; class, and if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with an &lt;code&gt;AWTPermission(&quot;readDisplayPixels&quot;)&lt;/code&gt; permission.</target>
        </trans-unit>
        <trans-unit id="1dcd83e4433ffbc1ebbf7b8020d46089730ee740" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;HttpResponse&lt;/code&gt; was returned from an invocation of &lt;a href=&quot;#previousResponse()&quot;&gt;&lt;code&gt;previousResponse()&lt;/code&gt;&lt;/a&gt; then this method returns &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">If this &lt;code&gt;HttpResponse&lt;/code&gt; was returned from an invocation of &lt;a href=&quot;#previousResponse()&quot;&gt; &lt;code&gt;previousResponse()&lt;/code&gt; &lt;/a&gt; then this method returns &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f7ccb08c5fb1d4a7665d31d16cc3af87c0f7a6b" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Inflater&lt;/code&gt; has been subclassed and the &lt;code&gt;end&lt;/code&gt; method has been overridden, the &lt;code&gt;end&lt;/code&gt; method will be called by the finalization when the inflater is unreachable. But the subclasses should not depend on this specific implementation; the finalization is not reliable and the &lt;code&gt;finalize&lt;/code&gt; method is deprecated to be removed.</source>
          <target state="translated">If this &lt;code&gt;Inflater&lt;/code&gt; has been subclassed and the &lt;code&gt;end&lt;/code&gt; method has been overridden, the &lt;code&gt;end&lt;/code&gt; method will be called by the finalization when the inflater is unreachable. But the subclasses should not depend on this specific implementation; the finalization is not reliable and the &lt;code&gt;finalize&lt;/code&gt; method is deprecated to be removed.</target>
        </trans-unit>
        <trans-unit id="66c4254fec3d7e2e4edd4f26fd06d26cd6621cde" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Inflater&lt;/code&gt; has been subclassed and the &lt;code&gt;end&lt;/code&gt; method has been overridden, the &lt;code&gt;end&lt;/code&gt; method will be called when the inflater is unreachable.</source>
          <target state="translated">If this &lt;code&gt;Inflater&lt;/code&gt; has been subclassed and the &lt;code&gt;end&lt;/code&gt; method has been overridden, the &lt;code&gt;end&lt;/code&gt; method will be called when the inflater is unreachable.</target>
        </trans-unit>
        <trans-unit id="c26daa984a3e23882bcf4505853a0f173ed21163" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;JInternalFrame&lt;/code&gt; is active, returns the child that has focus.</source>
          <target state="translated">If this &lt;code&gt;JInternalFrame&lt;/code&gt; is active, returns the child that has focus.</target>
        </trans-unit>
        <trans-unit id="bc9401f368e3758d3188ace75004f7819d77e1f2" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;JInternalFrame&lt;/code&gt; is active, returns the child that has focus. Otherwise, returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">If this &lt;code&gt;JInternalFrame&lt;/code&gt; is active, returns the child that has focus. Otherwise, returns &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6828b57248dc55ee33f2d0f727d461ced903c7ae" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;JTable&lt;/code&gt; is the &lt;code&gt;viewportView&lt;/code&gt; of an enclosing &lt;code&gt;JScrollPane&lt;/code&gt; (the usual situation), configure this &lt;code&gt;ScrollPane&lt;/code&gt; by, amongst other things, installing the table's &lt;code&gt;tableHeader&lt;/code&gt; as the &lt;code&gt;columnHeaderView&lt;/code&gt; of the scroll pane.</source>
          <target state="translated">If this &lt;code&gt;JTable&lt;/code&gt; is the &lt;code&gt;viewportView&lt;/code&gt; of an enclosing &lt;code&gt;JScrollPane&lt;/code&gt; (the usual situation), configure this &lt;code&gt;ScrollPane&lt;/code&gt; by, amongst other things, installing the table's &lt;code&gt;tableHeader&lt;/code&gt; as the &lt;code&gt;columnHeaderView&lt;/code&gt; of the scroll pane.</target>
        </trans-unit>
        <trans-unit id="95bc5377a471ae3598176805da8df7dc9f63dc18" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;JTable&lt;/code&gt; is the &lt;code&gt;viewportView&lt;/code&gt; of an enclosing &lt;code&gt;JScrollPane&lt;/code&gt; (the usual situation), configure this &lt;code&gt;ScrollPane&lt;/code&gt; by, amongst other things, installing the table's &lt;code&gt;tableHeader&lt;/code&gt; as the &lt;code&gt;columnHeaderView&lt;/code&gt; of the scroll pane. When a &lt;code&gt;JTable&lt;/code&gt; is added to a &lt;code&gt;JScrollPane&lt;/code&gt; in the usual way, using &lt;code&gt;new JScrollPane(myTable)&lt;/code&gt;, &lt;code&gt;addNotify&lt;/code&gt; is called in the &lt;code&gt;JTable&lt;/code&gt; (when the table is added to the viewport). &lt;code&gt;JTable&lt;/code&gt;'s &lt;code&gt;addNotify&lt;/code&gt; method in turn calls this method, which is protected so that this default installation procedure can be overridden by a subclass.</source>
          <target state="translated">If this &lt;code&gt;JTable&lt;/code&gt; is the &lt;code&gt;viewportView&lt;/code&gt; of an enclosing &lt;code&gt;JScrollPane&lt;/code&gt; (the usual situation), configure this &lt;code&gt;ScrollPane&lt;/code&gt; by, amongst other things, installing the table's &lt;code&gt;tableHeader&lt;/code&gt; as the &lt;code&gt;columnHeaderView&lt;/code&gt; of the scroll pane. When a &lt;code&gt;JTable&lt;/code&gt; is added to a &lt;code&gt;JScrollPane&lt;/code&gt; in the usual way, using &lt;code&gt;new JScrollPane(myTable)&lt;/code&gt; , &lt;code&gt;addNotify&lt;/code&gt; is called in the &lt;code&gt;JTable&lt;/code&gt; (when the table is added to the viewport). &lt;code&gt;JTable&lt;/code&gt; 's &lt;code&gt;addNotify&lt;/code&gt; method in turn calls this method, which is protected so that this default installation procedure can be overridden by a subclass.</target>
        </trans-unit>
        <trans-unit id="971006a579f4cd386294bc03012306a545ec65dd" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;JarFile&lt;/code&gt; is a multi-release jar file and is configured to be processed as such, then a search is performed to find and return a &lt;code&gt;JarEntry&lt;/code&gt; that is the latest versioned entry associated with the given entry name. The returned &lt;code&gt;JarEntry&lt;/code&gt; is the versioned entry corresponding to the given base entry name prefixed with the string &lt;code&gt;&quot;META-INF/versions/{n}/&quot;&lt;/code&gt;, for the largest value of &lt;code&gt;n&lt;/code&gt; for which an entry exists. If such a versioned entry does not exist, then the &lt;code&gt;JarEntry&lt;/code&gt; for the base entry is returned, otherwise &lt;code&gt;null&lt;/code&gt; is returned if no entries are found. The initial value for the version &lt;code&gt;n&lt;/code&gt; is the maximum version as returned by the method &lt;a href=&quot;#getVersion()&quot;&gt;&lt;code&gt;getVersion()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If this &lt;code&gt;JarFile&lt;/code&gt; is a multi-release jar file and is configured to be processed as such, then a search is performed to find and return a &lt;code&gt;JarEntry&lt;/code&gt; that is the latest versioned entry associated with the given entry name. The returned &lt;code&gt;JarEntry&lt;/code&gt; is the versioned entry corresponding to the given base entry name prefixed with the string &lt;code&gt;&quot;META-INF/versions/{n}/&quot;&lt;/code&gt; , for the largest value of &lt;code&gt;n&lt;/code&gt; for which an entry exists. If such a versioned entry does not exist, then the &lt;code&gt;JarEntry&lt;/code&gt; for the base entry is returned, otherwise &lt;code&gt;null&lt;/code&gt; is returned if no entries are found. The initial value for the version &lt;code&gt;n&lt;/code&gt; is the maximum version as returned by the method &lt;a href=&quot;#getVersion()&quot;&gt; &lt;code&gt;getVersion()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a42359b2547fcf0cced67f0b8abbfee7db30652b" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;JarFile&lt;/code&gt; is a multi-release jar file and is configured to be processed as such, then a search is performed to find and return a &lt;code&gt;ZipEntry&lt;/code&gt; that is the latest versioned entry associated with the given entry name. The returned &lt;code&gt;ZipEntry&lt;/code&gt; is the versioned entry corresponding to the given base entry name prefixed with the string &lt;code&gt;&quot;META-INF/versions/{n}/&quot;&lt;/code&gt;, for the largest value of &lt;code&gt;n&lt;/code&gt; for which an entry exists. If such a versioned entry does not exist, then the &lt;code&gt;ZipEntry&lt;/code&gt; for the base entry is returned, otherwise &lt;code&gt;null&lt;/code&gt; is returned if no entries are found. The initial value for the version &lt;code&gt;n&lt;/code&gt; is the maximum version as returned by the method &lt;a href=&quot;#getVersion()&quot;&gt;&lt;code&gt;getVersion()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If this &lt;code&gt;JarFile&lt;/code&gt; is a multi-release jar file and is configured to be processed as such, then a search is performed to find and return a &lt;code&gt;ZipEntry&lt;/code&gt; that is the latest versioned entry associated with the given entry name. The returned &lt;code&gt;ZipEntry&lt;/code&gt; is the versioned entry corresponding to the given base entry name prefixed with the string &lt;code&gt;&quot;META-INF/versions/{n}/&quot;&lt;/code&gt; , for the largest value of &lt;code&gt;n&lt;/code&gt; for which an entry exists. If such a versioned entry does not exist, then the &lt;code&gt;ZipEntry&lt;/code&gt; for the base entry is returned, otherwise &lt;code&gt;null&lt;/code&gt; is returned if no entries are found. The initial value for the version &lt;code&gt;n&lt;/code&gt; is the maximum version as returned by the method &lt;a href=&quot;#getVersion()&quot;&gt; &lt;code&gt;getVersion()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4544200625ea70ebc9bce4110deacb71c8b2c125" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;JarFile&lt;/code&gt; is a multi-release jar file and is configured to be processed as such, then an entry in the stream is the latest versioned entry associated with the corresponding base entry name. The maximum version of the latest versioned entry is the version returned by &lt;a href=&quot;#getVersion()&quot;&gt;&lt;code&gt;getVersion()&lt;/code&gt;&lt;/a&gt;. The returned stream may include an entry that only exists as a versioned entry. If the jar file is not a multi-release jar file or the &lt;code&gt;JarFile&lt;/code&gt; is not configured for processing a multi-release jar file, this method returns the same stream that &lt;a href=&quot;#stream()&quot;&gt;&lt;code&gt;stream()&lt;/code&gt;&lt;/a&gt; returns.</source>
          <target state="translated">If this &lt;code&gt;JarFile&lt;/code&gt; is a multi-release jar file and is configured to be processed as such, then an entry in the stream is the latest versioned entry associated with the corresponding base entry name. The maximum version of the latest versioned entry is the version returned by &lt;a href=&quot;#getVersion()&quot;&gt; &lt;code&gt;getVersion()&lt;/code&gt; &lt;/a&gt;. The returned stream may include an entry that only exists as a versioned entry. If the jar file is not a multi-release jar file or the &lt;code&gt;JarFile&lt;/code&gt; is not configured for processing a multi-release jar file, this method returns the same stream that &lt;a href=&quot;#stream()&quot;&gt; &lt;code&gt;stream()&lt;/code&gt; &lt;/a&gt; returns.</target>
        </trans-unit>
        <trans-unit id="8fc33555c25f80831c0628ad15a0ccf77251dea3" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;JarFile&lt;/code&gt; is not a multi-release jar file or is not configured to be processed as such, then the version returned will be the same as that returned from &lt;a href=&quot;#baseVersion()&quot;&gt;&lt;code&gt;baseVersion()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If this &lt;code&gt;JarFile&lt;/code&gt; is not a multi-release jar file or is not configured to be processed as such, then the version returned will be the same as that returned from &lt;a href=&quot;#baseVersion()&quot;&gt; &lt;code&gt;baseVersion()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8557e1e1be59bc05bf4e2df145cc3c316c6e80c0" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Locale&lt;/code&gt; has a language, country, or variant that does not satisfy the IETF BCP 47 language tag syntax requirements, this method handles these fields as described below:</source>
          <target state="translated">この &lt;code&gt;Locale&lt;/code&gt; の言語、国、またはバリアントがIETF BCP 47言語タグ構文要件を満たしていない場合、このメソッドはこれらのフィールドを以下のように処理します。</target>
        </trans-unit>
        <trans-unit id="f49a3fde11d5db0ed881977831e9e3ba3cc4fab5" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;PopupMenu&lt;/code&gt; is being used as a &lt;code&gt;Menu&lt;/code&gt; (i.e., it has a non-&lt;code&gt;Component&lt;/code&gt; parent), then you cannot call this method on the &lt;code&gt;PopupMenu&lt;/code&gt;.</source>
          <target state="translated">If this &lt;code&gt;PopupMenu&lt;/code&gt; is being used as a &lt;code&gt;Menu&lt;/code&gt; (i.e., it has a non- &lt;code&gt;Component&lt;/code&gt; parent), then you cannot call this method on the &lt;code&gt;PopupMenu&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7731e7aef77ad748710b57493f4b7ea47070b36" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Rectangle&lt;/code&gt; has any dimension less than zero, the rules for &lt;a href=&quot;#NonExistent&quot;&gt;non-existent&lt;/a&gt; rectangles apply. In that case, the new bounds of this &lt;code&gt;Rectangle&lt;/code&gt; will have a location equal to the coordinates of the specified &lt;code&gt;Point&lt;/code&gt; and width and height equal to zero.</source>
          <target state="translated">If this &lt;code&gt;Rectangle&lt;/code&gt; has any dimension less than zero, the rules for &lt;a href=&quot;#NonExistent&quot;&gt;non-existent&lt;/a&gt; rectangles apply. In that case, the new bounds of this &lt;code&gt;Rectangle&lt;/code&gt; will have a location equal to the coordinates of the specified &lt;code&gt;Point&lt;/code&gt; and width and height equal to zero.</target>
        </trans-unit>
        <trans-unit id="1b8dc137f02a58d56274933aac40eb866926b6a8" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Rectangle&lt;/code&gt; has any dimension less than zero, the rules for &lt;a href=&quot;#NonExistent&quot;&gt;non-existent&lt;/a&gt; rectangles apply. In that case, the new bounds of this &lt;code&gt;Rectangle&lt;/code&gt; will have a location equal to the specified coordinates and width and height equal to zero.</source>
          <target state="translated">If this &lt;code&gt;Rectangle&lt;/code&gt; has any dimension less than zero, the rules for &lt;a href=&quot;#NonExistent&quot;&gt;non-existent&lt;/a&gt; rectangles apply. In that case, the new bounds of this &lt;code&gt;Rectangle&lt;/code&gt; will have a location equal to the specified coordinates and width and height equal to zero.</target>
        </trans-unit>
        <trans-unit id="d37a0ebcc6085e0c5c10ef85dea41aa701353317" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;RowSet&lt;/code&gt; object does not maintain a continuous connection with its source of data, it may use a &lt;code&gt;Reader&lt;/code&gt; (a &lt;code&gt;RowSetReader&lt;/code&gt; object) to fill itself with data. In this case, a &lt;code&gt;Reader&lt;/code&gt; will have been registered with this &lt;code&gt;RowSet&lt;/code&gt; object, and the method &lt;code&gt;execute&lt;/code&gt; will call on the &lt;code&gt;Reader&lt;/code&gt;'s &lt;code&gt;readData&lt;/code&gt; method as part of its implementation.</source>
          <target state="translated">If this &lt;code&gt;RowSet&lt;/code&gt; object does not maintain a continuous connection with its source of data, it may use a &lt;code&gt;Reader&lt;/code&gt; (a &lt;code&gt;RowSetReader&lt;/code&gt; object) to fill itself with data. In this case, a &lt;code&gt;Reader&lt;/code&gt; will have been registered with this &lt;code&gt;RowSet&lt;/code&gt; object, and the method &lt;code&gt;execute&lt;/code&gt; will call on the &lt;code&gt;Reader&lt;/code&gt; 's &lt;code&gt;readData&lt;/code&gt; method as part of its implementation.</target>
        </trans-unit>
        <trans-unit id="ae1424f53f74471f85637ef0b51790d77bcaf639" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;SSLEngine&lt;/code&gt; has not yet started its initial handshake, this method will automatically start the handshake.</source>
          <target state="translated">この &lt;code&gt;SSLEngine&lt;/code&gt; が初期ハンドシェイクをまだ開始していない場合、このメソッドは自動的にハンドシェイクを開始します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
