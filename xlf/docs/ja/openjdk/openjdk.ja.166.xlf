<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="d20e6c840d9627a8eaa7891d9565907ed4a7abbb" translate="yes" xml:space="preserve">
          <source>The readObject method is responsible for reading from the stream and restoring the classes fields. It may call in.defaultReadObject to invoke the default mechanism for restoring the object's non-static and non-transient fields. The defaultReadObject method uses information in the stream to assign the fields of the object saved in the stream with the correspondingly named fields in the current object. This handles the case when the class has evolved to add new fields. The method does not need to concern itself with the state belonging to its superclasses or subclasses. State is saved by writing the individual fields to the ObjectOutputStream using the writeObject method or by using the methods for primitive data types supported by DataOutput.</source>
          <target state="translated">readObject メソッドは、ストリームからの読み込みとクラスのフィールドの復元を担当します。これは in.defaultReadObject を呼び出して、オブジェクトの非静的および非一時的なフィールドを復元するためのデフォルトのメカニズムを呼び出すことができます。defaultReadObject メソッドは、ストリーム内の情報を使用して、ストリーム内に保存されたオブジェクトのフィールドを、現在のオブジェクト内の対応する名前のフィールドに割り当てます。これは、クラスが新しいフィールドを追加するために進化した場合を処理します。このメソッドは、そのスーパークラスやサブクラスに属する状態を気にする必要はありません。状態は、個々のフィールドを writeObject メソッドを使用して ObjectOutputStream に書き込むか、DataOutput でサポートされているプリミティブ・データ型のメソッドを使用して保存されます。</target>
        </trans-unit>
        <trans-unit id="1a89c7b63eeec0e71ccea53ce7c51271148781b8" translate="yes" xml:space="preserve">
          <source>The readObjectNoData method is responsible for initializing the state of the object for its particular class in the event that the serialization stream does not list the given class as a superclass of the object being deserialized. This may occur in cases where the receiving party uses a different version of the deserialized instance's class than the sending party, and the receiver's version extends classes that are not extended by the sender's version. This may also occur if the serialization stream has been tampered; hence, readObjectNoData is useful for initializing deserialized objects properly despite a &quot;hostile&quot; or incomplete source stream.</source>
          <target state="translated">readObjectNoDataメソッドは、シリアル化ストリームが、デシリアライズされるオブジェクトのスーパークラスとして指定されたクラスをリストしない場合に、その特定のクラスのオブジェクトの状態を初期化する責任があります。これは、受信側が送信側とは異なるバージョンのデシリアライズされたインスタンスのクラスを使用し、受信側のバージョンが送信側のバージョンでは拡張されていないクラスを拡張している場合に発生する可能性があります。これは、シリアライズストリームが改ざんされた場合にも発生する可能性があります。 そのため、readObjectNoDataは、ソースストリームが「敵対的」または不完全であるにもかかわらず、デシリアライズされたオブジェクトを適切に初期化するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="db45e6393a0e6e733dd17719a250e994558a12bb" translate="yes" xml:space="preserve">
          <source>The readStreamHeader method is provided to allow subclasses to read and verify their own stream headers.</source>
          <target state="translated">readStreamHeader メソッドは、サブクラスが自分のストリームヘッダを読み込んで検証できるようにするために提供されています。</target>
        </trans-unit>
        <trans-unit id="f02ead4cd4d703a4fc4aec1b89640970265ef72c" translate="yes" xml:space="preserve">
          <source>The readStreamHeader method is provided to allow subclasses to read and verify their own stream headers. It reads and verifies the magic number and version number.</source>
          <target state="translated">readStreamHeaderメソッドは、サブクラスが自分のストリームヘッダを読み込んで検証できるようにするために提供されています。これは、マジックナンバーとバージョン番号を読み込んで検証します。</target>
        </trans-unit>
        <trans-unit id="b8970b91121ef6350ebd73016d3cfaeca16ee503" translate="yes" xml:space="preserve">
          <source>The reader associated with this console</source>
          <target state="translated">このコンソールに関連付けられたリーダー</target>
        </trans-unit>
        <trans-unit id="34e5f7ec6cf4640a064600b8a13abb578ea1e6fd" translate="yes" xml:space="preserve">
          <source>The reader can be configured by registering actions (of type &lt;code&gt;HTMLDocument.HTMLReader.TagAction&lt;/code&gt;) that describe how to handle the action. The idea behind the actions provided is that the most natural text editing operations can be provided if the element structure boils down to paragraphs with runs of some kind of style in them. Some things are more naturally specified structurally, so arbitrary structure should be allowed above the paragraphs, but will need to be edited with structural actions. The implication of this is that some of the HTML elements specified in the stream being parsed will be collapsed into attributes, and in some cases paragraphs will be synthesized. When HTML elements have been converted to attributes, the attribute key will be of type HTML.Tag, and the value will be of type AttributeSet so that no information is lost. This enables many of the existing actions to work so that the user can type input, hit the return key, backspace, delete, etc and have a reasonable result. Selections can be created, and attributes applied or removed, etc. With this in mind, the work done by the reader can be categorized into the following kinds of tasks:</source>
          <target state="translated">リーダーは、アクション（ &lt;code&gt;HTMLDocument.HTMLReader.TagAction&lt;/code&gt; タイプ）を登録することで構成できます。）アクションの処理方法を説明します。提供されるアクションの背後にある考え方は、要素構造が、ある種のスタイルの実行を含む段落に要約される場合に、最も自然なテキスト編集操作を提供できるということです。より自然に構造的に指定されるものもあるため、段落の上で任意の構造を許可する必要がありますが、構造アクションで編集する必要があります。これは、解析されるストリームで指定されたHTML要素の一部が属性に折りたたまれ、場合によっては段落が合成されることを意味します。 HTML要素が属性に変換されると、属性キーはHTML.Tagタイプになり、値はAttributeSetタイプになるため、情報が失われることはありません。これにより、既存のアクションの多くが機能するようになり、ユーザーは入力を入力してリターンキーを押し、バックスペース、削除など、妥当な結果が得られます。選択範囲を作成したり、属性を適用または削除したりすることができます。これを念頭に置いて、読者が行う作業は、次の種類のタスクに分類できます。</target>
        </trans-unit>
        <trans-unit id="cf210785560df5e3fd9338a81e883e6a91061562" translate="yes" xml:space="preserve">
          <source>The reader for this &lt;code&gt;CachedRowSet&lt;/code&gt; object will use</source>
          <target state="translated">この &lt;code&gt;CachedRowSet&lt;/code&gt; オブジェクトのリーダーは</target>
        </trans-unit>
        <trans-unit id="6c69219580471766868b9f3ba0f7605623a45c33" translate="yes" xml:space="preserve">
          <source>The reader must not be operated on during the execution of the terminal stream operation. Otherwise, the result of the terminal stream operation is undefined.</source>
          <target state="translated">端末ストリーム操作の実行中にリーダを操作してはならない。そうでなければ、ターミナルストリーム操作の結果は未定義である。</target>
        </trans-unit>
        <trans-unit id="5ae6624a403eb2ed6a2939e1c276174b1b68bae0" translate="yes" xml:space="preserve">
          <source>The reader's default action for malformed-input and unmappable-character errors is to &lt;a href=&quot;../charset/codingerroraction#REPORT&quot;&gt;report&lt;/a&gt; them. When more control over the error handling is required, the constructor that takes a &lt;a href=&quot;../charset/charsetdecoder&quot;&gt;CharsetDecoder&lt;/a&gt; should be used.</source>
          <target state="translated">不正な入力およびマップ不可能な文字のエラーに対する読者のデフォルトのアクションは、それらを&lt;a href=&quot;../charset/codingerroraction#REPORT&quot;&gt;報告&lt;/a&gt;することです。エラー処理をさらに制御する必要がある場合は、&lt;a href=&quot;../charset/charsetdecoder&quot;&gt;CharsetDecoder&lt;/a&gt;を使用するコンストラクターを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="453ec519eda3fcb734a7ed183e48753d77c803a1" translate="yes" xml:space="preserve">
          <source>The reader/writer facility provided by the &lt;code&gt;SyncProvider&lt;/code&gt; class is pluggable, allowing for the customization of data retrieval and updating. If a different concurrency control mechanism is desired, a different implementation of &lt;code&gt;SyncProvider&lt;/code&gt; can be plugged in using the method &lt;code&gt;setSyncProvider&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SyncProvider&lt;/code&gt; クラスによって提供されるリーダー/ライター機能はプラグイン可能であり、データの取得と更新をカスタマイズできます。別の同時実行制御メカニズムが必要な場合は、メソッド &lt;code&gt;setSyncProvider&lt;/code&gt; を使用して &lt;code&gt;SyncProvider&lt;/code&gt; の別の実装をプラグインできます。</target>
        </trans-unit>
        <trans-unit id="8998e48671432cbbcd265dfa2ebdacbf0a22841c" translate="yes" xml:space="preserve">
          <source>The real paint behavior occurs naturally from the association that the component has with its parent container (the same container hosting this view).</source>
          <target state="translated">実際のペイント動作は、コンポーネントがその親コンテナ(このビューをホストしている同じコンテナ)との関連付けから自然に発生します。</target>
        </trans-unit>
        <trans-unit id="6634676b2a3890f259f108b85e360b357783a624" translate="yes" xml:space="preserve">
          <source>The real paint behavior occurs naturally from the association that the component has with its parent container (the same container hosting this view). This is implemented to do nothing.</source>
          <target state="translated">実際のペイント動作は、コンポーネントがその親コンテナ(このビューをホストしている同じコンテナ)との関連付けから自然に発生します。これは何もしないように実装されています。</target>
        </trans-unit>
        <trans-unit id="1937fc02231b146a373cfbbd353a2e3a9bef7353" translate="yes" xml:space="preserve">
          <source>The real source.</source>
          <target state="translated">本当のソース。</target>
        </trans-unit>
        <trans-unit id="b9d32ae3ca8a166a78d846fc7aad0c5b1d696a11" translate="yes" xml:space="preserve">
          <source>The reason string</source>
          <target state="translated">理由の文字列</target>
        </trans-unit>
        <trans-unit id="c02940838e2a0e7c78ef96311f0f4a5d64f9e4e9" translate="yes" xml:space="preserve">
          <source>The reason that listeners created with &lt;code&gt;EventHandler&lt;/code&gt; have such a small footprint is that the &lt;code&gt;Proxy&lt;/code&gt; class, on which the &lt;code&gt;EventHandler&lt;/code&gt; relies, shares implementations of identical interfaces. For example, if you use the &lt;code&gt;EventHandler create&lt;/code&gt; methods to make all the &lt;code&gt;ActionListener&lt;/code&gt;s in an application, all the action listeners will be instances of a single class (one created by the &lt;code&gt;Proxy&lt;/code&gt; class). In general, listeners based on the &lt;code&gt;Proxy&lt;/code&gt; class require one listener class to be created per &lt;em&gt;listener type&lt;/em&gt; (interface), whereas the inner class approach requires one class to be created per &lt;em&gt;listener&lt;/em&gt; (object that implements the interface).</source>
          <target state="translated">&lt;code&gt;EventHandler&lt;/code&gt; で作成されたリスナーのフットプリントが非常に小さい理由は、 &lt;code&gt;EventHandler&lt;/code&gt; が依存する &lt;code&gt;Proxy&lt;/code&gt; クラスが、同一のインターフェースの実装を共有するためです。たとえば、 &lt;code&gt;EventHandler create&lt;/code&gt; メソッドを使用してアプリケーション内のすべての &lt;code&gt;ActionListener&lt;/code&gt; を作成する場合、すべてのアクションリスナーは単一のクラス（ &lt;code&gt;Proxy&lt;/code&gt; クラスによって作成されたもの）のインスタンスになります。一般に、 &lt;code&gt;Proxy&lt;/code&gt; クラスに基づくリスナーでは、&lt;em&gt;リスナータイプ&lt;/em&gt;（インターフェイス）ごとに1つのリスナークラスを作成する必要がありますが、内部クラスアプローチでは、&lt;em&gt;リスナー&lt;/em&gt;ごとに1つのクラスを作成する必要があり&lt;em&gt;ます。&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt; （インターフェースを実装するオブジェクト）。</target>
        </trans-unit>
        <trans-unit id="343e073c1a04a45f15bfaa37758a836c0b9ae1dd" translate="yes" xml:space="preserve">
          <source>The reason that listeners created with &lt;code&gt;EventHandler&lt;/code&gt; have such a small footprint is that the &lt;code&gt;Proxy&lt;/code&gt; class, on which the &lt;code&gt;EventHandler&lt;/code&gt; relies, shares implementations of identical interfaces. For example, if you use the &lt;code&gt;EventHandler&lt;/code&gt;&lt;code&gt;create&lt;/code&gt; methods to make all the &lt;code&gt;ActionListener&lt;/code&gt;s in an application, all the action listeners will be instances of a single class (one created by the &lt;code&gt;Proxy&lt;/code&gt; class). In general, listeners based on the &lt;code&gt;Proxy&lt;/code&gt; class require one listener class to be created per &lt;em&gt;listener type&lt;/em&gt; (interface), whereas the inner class approach requires one class to be created per &lt;em&gt;listener&lt;/em&gt; (object that implements the interface).</source>
          <target state="translated">&lt;code&gt;EventHandler&lt;/code&gt; で作成されたリスナーのフットプリントが非常に小さいのは、 &lt;code&gt;EventHandler&lt;/code&gt; が依存する &lt;code&gt;Proxy&lt;/code&gt; クラスが同一のインターフェースの実装を共有するためです。たとえば、 &lt;code&gt;EventHandler&lt;/code&gt; &lt;code&gt;create&lt;/code&gt; メソッドを使用してアプリケーション内のすべての &lt;code&gt;ActionListener&lt;/code&gt; を作成する場合、すべてのアクションリスナーは単一のクラス（ &lt;code&gt;Proxy&lt;/code&gt; クラスによって作成されたもの）のインスタンスになります。一般に、 &lt;code&gt;Proxy&lt;/code&gt; クラスに基づくリスナーでは、&lt;em&gt;リスナータイプ&lt;/em&gt;（インターフェース）ごとに1つのリスナークラスを作成する必要がありますが、内部クラスアプローチでは、&lt;em&gt;リスナー&lt;/em&gt;ごとに1つのクラスを作成する必要があり&lt;em&gt;ます&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt; （インターフェースを実装するオブジェクト）。</target>
        </trans-unit>
        <trans-unit id="4bcf2d174d6450c449f0d4b03a4ca6b52b25a266" translate="yes" xml:space="preserve">
          <source>The reason the validation algorithm failed.</source>
          <target state="translated">検証アルゴリズムが失敗した理由。</target>
        </trans-unit>
        <trans-unit id="fad799b782c71b721e74eb716a062272a08611cd" translate="yes" xml:space="preserve">
          <source>The reason to deny access can vary. For example, the requested permission might be of an incorrect type, contain an invalid value, or request access that is not allowed according to the security policy. Such information should be given whenever possible at the time the exception is thrown.</source>
          <target state="translated">アクセスを拒否する理由はさまざまです。例えば、要求されたアクセス許可の型が間違っていたり、無効な値を含んでいたり、セキュリティポリシーに従って許可されていないアクセスを要求したりすることがあります。このような情報は、例外が発生したときに可能な限り与えなければなりません。</target>
        </trans-unit>
        <trans-unit id="1aeeb073ceae77eaa12f37a803ff57f9b6861457" translate="yes" xml:space="preserve">
          <source>The receiving interface of &lt;code&gt;WebSocket&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WebSocket&lt;/code&gt; の受信インターフェース。</target>
        </trans-unit>
        <trans-unit id="19aa33a5763e532698ec85898ffde7fa19da36dd" translate="yes" xml:space="preserve">
          <source>The recommended approach to waiting is to check the condition being awaited in a &lt;code&gt;while&lt;/code&gt; loop around the call to &lt;code&gt;wait&lt;/code&gt;, as shown in the example below. Among other things, this approach avoids problems that can be caused by spurious wakeups.</source>
          <target state="translated">待機するための推奨されるアプローチは、以下の例に示すように、 &lt;code&gt;wait&lt;/code&gt; する呼び出しの周りの &lt;code&gt;while&lt;/code&gt; ループで待機されている条件を確認することです。とりわけ、このアプローチは、誤ったウェイクアップによって引き起こされる可能性のある問題を回避します。</target>
        </trans-unit>
        <trans-unit id="8b540068386b3455f296a75095372235296b6e2b" translate="yes" xml:space="preserve">
          <source>The recommended usage is to use &lt;a href=&quot;uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; to identify resources, then convert it into a &lt;a href=&quot;url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; when it is time to access the resource. From that URL, you can either get the &lt;a href=&quot;urlconnection&quot;&gt;&lt;code&gt;URLConnection&lt;/code&gt;&lt;/a&gt; for fine control, or get directly the InputStream.</source>
          <target state="translated">推奨される使用法は、&lt;a href=&quot;uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;を使用してリソースを識別し、リソースにアクセスするときに&lt;a href=&quot;url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;に変換することです。そのURLから、詳細な制御のために&lt;a href=&quot;urlconnection&quot;&gt; &lt;code&gt;URLConnection&lt;/code&gt; &lt;/a&gt;を取得するか、InputStreamを直接取得できます。</target>
        </trans-unit>
        <trans-unit id="578396e39ec38d7bef97bc806ee34eccfc93aa26" translate="yes" xml:space="preserve">
          <source>The recommended way to transform a diagnostic command name into a MBean operation name is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4b6352f99070e472d8efe1d2a56870b1ae33835" translate="yes" xml:space="preserve">
          <source>The record class declaring this record component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58defc644c6b9584268a16fa887f610fbf3769e6" translate="yes" xml:space="preserve">
          <source>The recording is closed and all resources that are associated with the recording are released.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed2687517b4d680e346376dafc9478b171de0e8a" translate="yes" xml:space="preserve">
          <source>The recording is recording data and an invocation of the &lt;a href=&quot;recording#stop()&quot;&gt;&lt;code&gt;Recording.stop()&lt;/code&gt;&lt;/a&gt; method will transition the recording to the &lt;code&gt;STOPPED&lt;/code&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c86b78d094fd89c1accafbcca74e0924941ef97" translate="yes" xml:space="preserve">
          <source>The recording is scheduled to start with a start time in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1637c88eac1e949cc3286252e2a81aa6ec585cf9" translate="yes" xml:space="preserve">
          <source>The recording is stopped and is holding recorded data that can be dumped to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611441fb9860b54f9a8f66c2bf62fee1547405d0" translate="yes" xml:space="preserve">
          <source>The recording with the specified ID must be stopped before a stream can be opened. This restriction might be lifted in future releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a02d456a5b72dc15bc50cf4cbcbe8e2427ba00e2" translate="yes" xml:space="preserve">
          <source>The rectangular printable area is defined thus: The (x,y) origin is positioned at the top-left of the paper in portrait mode regardless of the orientation specified in the requesting context. For example a printable area for A4 paper in portrait or landscape orientation will have height &amp;gt; width.</source>
          <target state="translated">長方形の印刷可能領域は次のように定義されます。（x、y）原点は、要求するコンテキストで指定された向きに関係なく、縦長モードで用紙の左上に配置されます。たとえば、縦向きまたは横向きのA4用紙の印刷可能領域は、高さ&amp;gt;幅になります。</target>
        </trans-unit>
        <trans-unit id="078eace4dd337040ba2ae72d27be838bc237864c" translate="yes" xml:space="preserve">
          <source>The red color component for the specified pixel, as an int.</source>
          <target state="translated">指定されたピクセルの赤色成分をintで表します.</target>
        </trans-unit>
        <trans-unit id="98a309e25e6dab75aafbad36b2cae3eb6daac137" translate="yes" xml:space="preserve">
          <source>The redefinition may change method bodies, the constant pool and attributes (unless explicitly prohibited). The redefinition must not add, remove or rename fields or methods, change the signatures of methods, or change inheritance. The redefinition must not change the &lt;code&gt;NestHost&lt;/code&gt; or &lt;code&gt;NestMembers&lt;/code&gt; attributes. These restrictions may be lifted in future versions. The class file bytes are not checked, verified and installed until after the transformations have been applied, if the resultant bytes are in error this method will throw an exception.</source>
          <target state="translated">再定義により、メソッド本体、定数プール、および属性が変更される場合があります（明示的に禁止されている場合を除く）。再定義では、フィールドまたはメソッドを追加、削除、または名前変更したり、メソッドのシグネチャを変更したり、継承を変更したりしてはなりません。再定義によって、 &lt;code&gt;NestHost&lt;/code&gt; または &lt;code&gt;NestMembers&lt;/code&gt; 属性を変更してはなりません。これらの制限は、将来のバージョンで解除される可能性があります。クラスファイルのバイトは、変換が適用されるまでチェック、検証、およびインストールされません。結果のバイトにエラーがある場合、このメソッドは例外をスローします。</target>
        </trans-unit>
        <trans-unit id="6cf742cf21d433441fd0b0bc61621152f8db92ae" translate="yes" xml:space="preserve">
          <source>The redefinition may change method bodies, the constant pool and attributes. The redefinition must not add, remove or rename fields or methods, change the signatures of methods, or change inheritance. These restrictions maybe be lifted in future versions. The class file bytes are not checked, verified and installed until after the transformations have been applied, if the resultant bytes are in error this method will throw an exception.</source>
          <target state="translated">再定義では、メソッド本体、定数プール、および属性を変更することができます。再定義では、フィールドやメソッドの追加、削除、名前の変更、メソッドのシグネチャの変更、継承の変更はできません。これらの制限は将来のバージョンで解除されるかもしれません。クラスファイルのバイトは、変換が適用されるまでチェック、検証、インストールされません。</target>
        </trans-unit>
        <trans-unit id="6f19c83b6a43c97e8d1cefd627e0b3c8dadfded2" translate="yes" xml:space="preserve">
          <source>The reference &lt;code&gt;x&lt;/code&gt; must be convertible to the first parameter type of the target.</source>
          <target state="translated">参照 &lt;code&gt;x&lt;/code&gt; は、ターゲットの最初のパラメーター型に変換可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="44017fc6a35a5f9dd8fcf726c29aa2e0e60bb2ce" translate="yes" xml:space="preserve">
          <source>The reference implementation (RI) provides two synchronization providers.</source>
          <target state="translated">参照実装(RI)は2つの同期プロバイダを提供します。</target>
        </trans-unit>
        <trans-unit id="5409eeca3c33981649af20f4b7e7f4d34b54dae8" translate="yes" xml:space="preserve">
          <source>The reference implementation is targeted to ship with J2SE 1.5, which will include an additional resource file that may be edited by hand. Here is an example of the properties file included in the reference implementation:</source>
          <target state="translated">リファレンス実装はJ2SE 1.5での出荷を目標としており、手編集可能なリソースファイルを追加で同梱する予定です。ここでは、リファレンス実装に含まれるプロパティファイルの例を示します。</target>
        </trans-unit>
        <trans-unit id="60999b6f0306efbef13e0ce2d4acd07ba041bfaf" translate="yes" xml:space="preserve">
          <source>The reference implementation of the &lt;code&gt;CachedRowSet&lt;/code&gt; interface provided by Oracle Corporation is a standard implementation. Developers may use this implementation just as it is, they may extend it, or they may choose to write their own implementations of this interface.</source>
          <target state="translated">Oracle Corporationが提供する &lt;code&gt;CachedRowSet&lt;/code&gt; インターフェースのリファレンス実装は、標準の実装です。開発者は、この実装をそのまま使用することも、拡張することも、このインターフェイスの独自の実装を作成することを選択することもできます。</target>
        </trans-unit>
        <trans-unit id="cdbc6f393391fdc2aa74409e53d076bab2c56284" translate="yes" xml:space="preserve">
          <source>The reference implementation of the &lt;code&gt;JdbcRowSet&lt;/code&gt; interface, &lt;code&gt;JdbcRowSetImpl&lt;/code&gt;, provides an implementation of the default constructor. A new instance is initialized with default values, which can be set with new values as needed. A new instance is not really functional until its &lt;code&gt;execute&lt;/code&gt; method is called. In general, this method does the following:</source>
          <target state="translated">リファレンス実装 &lt;code&gt;JdbcRowSet&lt;/code&gt; のインターフェース、 &lt;code&gt;JdbcRowSetImpl&lt;/code&gt; は、デフォルトコンストラクタの実装を提供します。新しいインスタンスはデフォルト値で初期化され、必要に応じて新しい値で設定できます。新しいインスタンスは、 &lt;code&gt;execute&lt;/code&gt; メソッドが呼び出されるまで実際には機能しません。一般に、このメソッドは次のことを行います。</target>
        </trans-unit>
        <trans-unit id="1bef56dc5a152e5cab8e0b183e0324bc9dbed6ee" translate="yes" xml:space="preserve">
          <source>The reference implementation of this method returns the MIME type &lt;code&gt;String&lt;/code&gt; of the specified &lt;code&gt;DataFlavor&lt;/code&gt; prefixed with &lt;code&gt;JAVA_DATAFLAVOR:&lt;/code&gt;.</source>
          <target state="translated">このメソッドのリファレンス実装は、 &lt;code&gt;JAVA_DATAFLAVOR:&lt;/code&gt; というプレフィックスが付いた指定された &lt;code&gt;DataFlavor&lt;/code&gt; のMIMEタイプ &lt;code&gt;String&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0db6d72998455f6d8d159947d15deb882e4e6208" translate="yes" xml:space="preserve">
          <source>The reference implementation of this method returns the specified MIME type &lt;code&gt;String&lt;/code&gt; prefixed with &lt;code&gt;JAVA_DATAFLAVOR:&lt;/code&gt;.</source>
          <target state="translated">このメソッドのリファレンス実装は、 &lt;code&gt;JAVA_DATAFLAVOR:&lt;/code&gt; というプレフィックスが付いた指定されたMIMEタイプの &lt;code&gt;String&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3c96b6a18efdd8f02c853b851fa382edd202cc59" translate="yes" xml:space="preserve">
          <source>The reference is parsed into the scheme, authority, path, query and fragment parts. If the path component is empty and the scheme, authority, and query components are undefined, then the new URL is a reference to the current document. Otherwise, the fragment and query parts present in the spec are used in the new URL.</source>
          <target state="translated">参照は、スキーム、オーソリティ、パス、クエリ、フラグメントの各部分に解析されます。pathコンポーネントが空で、スキーム、オーソリティ、クエリコンポーネントが未定義の場合、新しいURLは現在のドキュメントへの参照となります。それ以外の場合は、仕様に存在するフラグメントとクエリの部分が新しいURLで使用されます。</target>
        </trans-unit>
        <trans-unit id="1e1b7f522e51adfd670896cc10d510ac4a355747" translate="yes" xml:space="preserve">
          <source>The reference to the module's content</source>
          <target state="translated">モジュールのコンテンツへの参照</target>
        </trans-unit>
        <trans-unit id="2cf99cd156e1535ee0739b3761f44ba4ad8f59a0" translate="yes" xml:space="preserve">
          <source>The reference type definition is derived by extension from the other type definition if the other type definition can be reached recursively following the {base type definition} property from the reference type definition, and at least one of the &lt;em&gt;derivation methods&lt;/em&gt; involved is an extension.</source>
          <target state="translated">参照型定義の{基本型定義}プロパティに従って他の型定義に再帰的に到達でき、関連する&lt;em&gt;派生メソッドの&lt;/em&gt;少なくとも1つが拡張である場合、参照型定義は他の型定義からの拡張によって&lt;em&gt;派生します&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="d289101b23ccf25d80de6a72dd72816e3bcb1157" translate="yes" xml:space="preserve">
          <source>The reference type definition is derived by list from the other type definition if there exists two type definitions T1 and T2 such as the reference type definition is derived from T1 by &lt;code&gt;DERIVATION_RESTRICTION&lt;/code&gt; or &lt;code&gt;DERIVATION_EXTENSION&lt;/code&gt;, T2 is derived from the other type definition by &lt;code&gt;DERIVATION_RESTRICTION&lt;/code&gt;, T1 has {variety} &lt;em&gt;list&lt;/em&gt;, and T2 is the {item type definition}. Note that T1 could be the same as the reference type definition, and T2 could be the same as the other type definition.</source>
          <target state="translated">参照型定義が &lt;code&gt;DERIVATION_RESTRICTION&lt;/code&gt; または &lt;code&gt;DERIVATION_EXTENSION&lt;/code&gt; によってT1から派生し、T2が &lt;code&gt;DERIVATION_RESTRICTION&lt;/code&gt; によって他の型定義から派生しているなど、2つの型定義T1とT2が存在する場合、参照型定義は他の型定義からリストによって派生します。 {variety}&lt;em&gt;リスト&lt;/em&gt;、T2は{item typedefinition}です。 T1は参照型定義と同じであり、T2は他の型定義と同じである可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="dffb6e6d8b2d6f55eafb2e232eb84ee4de39afa8" translate="yes" xml:space="preserve">
          <source>The reference type definition is derived by restriction from the other type definition if the other type definition is the same as the reference type definition, or if the other type definition can be reached recursively following the {base type definition} property from the reference type definition, and all the &lt;em&gt;derivation methods&lt;/em&gt; involved are restriction.</source>
          <target state="translated">参照型定義は、他の型定義が参照型定義と同じである場合、または参照型定義の{base typedefinition}プロパティに従って他の型定義に再帰的に到達できる場合に他の型定義からの制限によって導出されます。 、および関連するすべての&lt;em&gt;導出方法&lt;/em&gt;は制限です。</target>
        </trans-unit>
        <trans-unit id="16ef2fe88de2d7e30fdc46db81d300b65bcac937" translate="yes" xml:space="preserve">
          <source>The reference type definition is derived by union from the other type definition if there exists two type definitions T1 and T2 such as the reference type definition is derived from T1 by &lt;code&gt;DERIVATION_RESTRICTION&lt;/code&gt; or &lt;code&gt;DERIVATION_EXTENSION&lt;/code&gt;, T2 is derived from the other type definition by &lt;code&gt;DERIVATION_RESTRICTION&lt;/code&gt;, T1 has {variety} &lt;em&gt;union&lt;/em&gt;, and one of the {member type definitions} is T2. Note that T1 could be the same as the reference type definition, and T2 could be the same as the other type definition.</source>
          <target state="translated">参照型定義が &lt;code&gt;DERIVATION_RESTRICTION&lt;/code&gt; または &lt;code&gt;DERIVATION_EXTENSION&lt;/code&gt; によってT1から派生し、T2が &lt;code&gt;DERIVATION_RESTRICTION&lt;/code&gt; によって他の型定義から派生しているなど、2つの型定義T1とT2が存在する場合、参照型定義は他の型定義から結合によって派生します。 {variety}&lt;em&gt;ユニオン&lt;/em&gt;、および{メンバータイプ定義}の1つはT2です。T1は参照型定義と同じであり、T2は他の型定義と同じである可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="27a0672b9281e7b40b24731935d7c4c815d57f66" translate="yes" xml:space="preserve">
          <source>The referral context is created using &lt;code&gt;env&lt;/code&gt; as its environment properties. This method should be used instead of the no-arg overloaded form when the caller needs to use different environment properties for the referral context. It might need to do this, for example, when it needs to supply different authentication information to the referred server in order to create the referral context.</source>
          <target state="translated">参照コンテキストは、 &lt;code&gt;env&lt;/code&gt; を環境プロパティとして使用して作成されます。このメソッドは、呼び出し元が参照コンテキストに異なる環境プロパティを使用する必要がある場合、引数なしのオーバーロードされたフォームの代わりに使用する必要があります。たとえば、参照コンテキストを作成するために、参照先のサーバーに異なる認証情報を提供する必要がある場合に、これを行う必要があります。</target>
        </trans-unit>
        <trans-unit id="a4ce274ab6ae3f0c9ee72f8b65f07fb79d7e2a06" translate="yes" xml:space="preserve">
          <source>The region of interest is defined by the bounding box of the source &lt;code&gt;Image&lt;/code&gt;. This bounding box is specified in Image Space, which is the &lt;code&gt;Image&lt;/code&gt; object's local coordinate system.</source>
          <target state="translated">関心のある領域は、ソース &lt;code&gt;Image&lt;/code&gt; バウンディングボックスによって定義されます。この境界ボックスは、 &lt;code&gt;Image&lt;/code&gt; オブジェクトのローカル座標系であるImageSpaceで指定されます。</target>
        </trans-unit>
        <trans-unit id="2ae7c56b2cdef8fa8f60172c89227929f50be69e" translate="yes" xml:space="preserve">
          <source>The region of the image to be written is determined by first intersecting the actual bounds of the image with the rectangle specified by &lt;code&gt;IIOParam.setSourceRegion&lt;/code&gt;, if any. If the resulting rectangle has a width or height of zero, the writer will throw an &lt;code&gt;IIOException&lt;/code&gt;. If the intersection is non-empty, writing will commence with the first subsampled pixel and include additional pixels within the intersected bounds according to the horizontal and vertical subsampling factors specified by &lt;a href=&quot;iioparam#setSourceSubsampling(int,int,int,int)&quot;&gt;&lt;code&gt;IIOParam.setSourceSubsampling&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">書き込まれる画像の領域は、最初に画像の実際の境界を &lt;code&gt;IIOParam.setSourceRegion&lt;/code&gt; （存在する場合）で指定された長方形と交差させることによって決定されます。結果の長方形の幅または高さがゼロの場合、ライターは &lt;code&gt;IIOException&lt;/code&gt; をスローします。交差が空でない場合、書き込みは最初のサブサンプリングされたピクセルから開始され、&lt;a href=&quot;iioparam#setSourceSubsampling(int,int,int,int)&quot;&gt; &lt;code&gt;IIOParam.setSourceSubsampling&lt;/code&gt; で&lt;/a&gt;指定された水平および垂直のサブサンプリング係数に従って、交差した境界内に追加のピクセルが含まれます。</target>
        </trans-unit>
        <trans-unit id="d0ee23ed794b80c251d3a1fe843993862775ce5a" translate="yes" xml:space="preserve">
          <source>The region of the image to be written is determined by first intersecting the actual bounds of the image with the rectangle specified by &lt;code&gt;IIOParam.setSourceRegion&lt;/code&gt;, if any. If the resulting rectangle has a width or height of zero, the writer will throw an &lt;code&gt;IIOException&lt;/code&gt;. If the intersection is non-empty, writing will commence with the first subsampled pixel and include additional pixels within the intersected bounds according to the horizontal and vertical subsampling factors specified by &lt;a href=&quot;iioparam#setSourceSubsampling-int-int-int-int-&quot;&gt;&lt;code&gt;IIOParam.setSourceSubsampling&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">書き込まれる画像の領域は、最初に画像の実際の境界を &lt;code&gt;IIOParam.setSourceRegion&lt;/code&gt; で指定された長方形と交差させます。結果の四角形の幅または高さが0の場合、ライターは &lt;code&gt;IIOException&lt;/code&gt; をスローします。交差が空でない場合、書き込みは最初のサブサンプリングされたピクセルから開始され、&lt;a href=&quot;iioparam#setSourceSubsampling-int-int-int-int-&quot;&gt; &lt;code&gt;IIOParam.setSourceSubsampling&lt;/code&gt; で&lt;/a&gt;指定された水平および垂直サブサンプリングファクターに従って交差した境界内に追加のピクセルが含まれます。</target>
        </trans-unit>
        <trans-unit id="bf75c137f4d08f499b676efedda08b261ecc10e0" translate="yes" xml:space="preserve">
          <source>The region specified by the &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; parameters need not be contained within, or even overlap, the actual underlying file. Lock regions are fixed in size; if a locked region initially contains the end of the file and the file grows beyond the region then the new portion of the file will not be covered by the lock. If a file is expected to grow in size and a lock on the entire file is required then a region starting at zero, and no smaller than the expected maximum size of the file, should be locked. The two-argument &lt;a href=&quot;#lock(A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;lock(Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method simply locks a region of size &lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt;&lt;code&gt;Long.MAX_VALUE&lt;/code&gt;&lt;/a&gt;. If a lock that overlaps the requested region is already held by this Java virtual machine, or this method has been invoked to lock an overlapping region and that operation has not completed, then this method throws &lt;a href=&quot;overlappingfilelockexception&quot;&gt;&lt;code&gt;OverlappingFileLockException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; と &lt;code&gt;size&lt;/code&gt; パラメーターで指定された領域は、実際の基になるファイル内に含まれている必要はなく、重複している必要もありません。ロック領域のサイズは固定されています。ロックされた領域に最初にファイルの終わりが含まれていて、ファイルがその領域を超えて大きくなる場合、ファイルの新しい部分はロックの対象になりません。ファイルのサイズが大きくなることが予想され、ファイル全体をロックする必要がある場合は、ゼロから始まり、ファイルの予想される最大サイズ以上の領域をロックする必要があります。 2つの引数の&lt;a href=&quot;#lock(A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;lock(Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt;メソッドは、サイズが&lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt; &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の&lt;/a&gt;領域をロックするだけです。。要求された領域と重複するロックがこのJava仮想マシンによってすでに保持されている場合、またはこのメソッドが呼び出されて重複領域をロックし、その操作が完了していない場合、このメソッドは&lt;a href=&quot;overlappingfilelockexception&quot;&gt; &lt;code&gt;OverlappingFileLockException&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="412cd087a882e3390f6eb99cb3444e0f99865817" translate="yes" xml:space="preserve">
          <source>The region specified by the &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; parameters need not be contained within, or even overlap, the actual underlying file. Lock regions are fixed in size; if a locked region initially contains the end of the file and the file grows beyond the region then the new portion of the file will not be covered by the lock. If a file is expected to grow in size and a lock on the entire file is required then a region starting at zero, and no smaller than the expected maximum size of the file, should be locked. The two-argument &lt;a href=&quot;asynchronousfilechannel#lock-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;lock(Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method simply locks a region of size &lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt;&lt;code&gt;Long.MAX_VALUE&lt;/code&gt;&lt;/a&gt;. If a lock that overlaps the requested region is already held by this Java virtual machine, or this method has been invoked to lock an overlapping region and that operation has not completed, then this method throws &lt;a href=&quot;overlappingfilelockexception&quot;&gt;&lt;code&gt;OverlappingFileLockException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; と &lt;code&gt;size&lt;/code&gt; パラメータで指定された領域は、実際の基本ファイル内に含まれていたり、実際に重なっている必要はありません。ロック領域のサイズは固定されています。ロックされた領域が最初にファイルの終わりを含み、ファイルが領域を超えて大きくなる場合、ファイルの新しい部分はロックによってカバーされません。ファイルのサイズが大きくなることが予想され、ファイル全体のロックが必要な場合は、ゼロから始まり、ファイルの予想最大サイズ以上の領域をロックする必要があります。 2つの引数を持つ&lt;a href=&quot;asynchronousfilechannel#lock-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;lock(Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt;メソッドは、サイズが&lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt; &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の&lt;/a&gt;領域をロックするだけです。。要求された領域と重複するロックがこのJava仮想マシンによってすでに保持されている場合、またはこのメソッドが呼び出されて重複領域をロックし、その操作が完了していない場合、このメソッドは&lt;a href=&quot;overlappingfilelockexception&quot;&gt; &lt;code&gt;OverlappingFileLockException&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="7f8ccadc40b179a069619b37209e7a82323388a3" translate="yes" xml:space="preserve">
          <source>The region specified by the &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; parameters need not be contained within, or even overlap, the actual underlying file. Lock regions are fixed in size; if a locked region initially contains the end of the file and the file grows beyond the region then the new portion of the file will not be covered by the lock. If a file is expected to grow in size and a lock on the entire file is required then a region starting at zero, and no smaller than the expected maximum size of the file, should be locked. The zero-argument &lt;a href=&quot;#lock()&quot;&gt;&lt;code&gt;lock()&lt;/code&gt;&lt;/a&gt; method simply locks a region of size &lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt;&lt;code&gt;Long.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; と &lt;code&gt;size&lt;/code&gt; パラメーターで指定された領域は、実際の基になるファイル内に含まれている必要はなく、重複している必要もありません。ロック領域のサイズは固定されています。ロックされた領域に最初にファイルの終わりが含まれていて、ファイルがその領域を超えて大きくなる場合、ファイルの新しい部分はロックの対象になりません。ファイルのサイズが大きくなることが予想され、ファイル全体をロックする必要がある場合は、ゼロから始まり、ファイルの予想される最大サイズ以上の領域をロックする必要があります。引数がゼロの&lt;a href=&quot;#lock()&quot;&gt; &lt;code&gt;lock()&lt;/code&gt; &lt;/a&gt;メソッドは、サイズが&lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt; &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の&lt;/a&gt;領域をロックするだけです。</target>
        </trans-unit>
        <trans-unit id="6cff2d7fbc06e1a140db665b0a54e775297aaed1" translate="yes" xml:space="preserve">
          <source>The region specified by the &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; parameters need not be contained within, or even overlap, the actual underlying file. Lock regions are fixed in size; if a locked region initially contains the end of the file and the file grows beyond the region then the new portion of the file will not be covered by the lock. If a file is expected to grow in size and a lock on the entire file is required then a region starting at zero, and no smaller than the expected maximum size of the file, should be locked. The zero-argument &lt;a href=&quot;#tryLock()&quot;&gt;&lt;code&gt;tryLock()&lt;/code&gt;&lt;/a&gt; method simply locks a region of size &lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt;&lt;code&gt;Long.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; と &lt;code&gt;size&lt;/code&gt; パラメーターで指定された領域は、実際の基になるファイル内に含まれている必要はなく、重複している必要もありません。ロック領域のサイズは固定されています。ロックされた領域に最初にファイルの終わりが含まれていて、ファイルがその領域を超えて大きくなる場合、ファイルの新しい部分はロックの対象になりません。ファイルのサイズが大きくなることが予想され、ファイル全体をロックする必要がある場合は、ゼロから始まり、ファイルの予想される最大サイズ以上の領域をロックする必要があります。引数がゼロの&lt;a href=&quot;#tryLock()&quot;&gt; &lt;code&gt;tryLock()&lt;/code&gt; &lt;/a&gt;メソッドは、サイズが&lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt; &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の&lt;/a&gt;領域をロックするだけです。</target>
        </trans-unit>
        <trans-unit id="813d5453cbb41f59eb6e5e97b38357b9ea00bdde" translate="yes" xml:space="preserve">
          <source>The region specified by the &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; parameters need not be contained within, or even overlap, the actual underlying file. Lock regions are fixed in size; if a locked region initially contains the end of the file and the file grows beyond the region then the new portion of the file will not be covered by the lock. If a file is expected to grow in size and a lock on the entire file is required then a region starting at zero, and no smaller than the expected maximum size of the file, should be locked. The zero-argument &lt;a href=&quot;filechannel#lock--&quot;&gt;&lt;code&gt;lock()&lt;/code&gt;&lt;/a&gt; method simply locks a region of size &lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt;&lt;code&gt;Long.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; と &lt;code&gt;size&lt;/code&gt; パラメータで指定された領域は、実際の基本ファイル内に含まれていたり、実際に重なっている必要はありません。ロック領域のサイズは固定されています。ロックされた領域が最初にファイルの終わりを含み、ファイルが領域を超えて大きくなる場合、ファイルの新しい部分はロックによってカバーされません。ファイルのサイズが大きくなることが予想され、ファイル全体のロックが必要な場合は、ゼロから始まり、予想されるファイルの最大サイズ以上の領域をロックする必要があります。引数なしの&lt;a href=&quot;filechannel#lock--&quot;&gt; &lt;code&gt;lock()&lt;/code&gt; &lt;/a&gt;メソッドは、サイズが&lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt; &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の&lt;/a&gt;領域をロックするだけです。</target>
        </trans-unit>
        <trans-unit id="617ac4e34e018358f5e81a33f698a400aa0685af" translate="yes" xml:space="preserve">
          <source>The region specified by the &lt;code&gt;position&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; parameters need not be contained within, or even overlap, the actual underlying file. Lock regions are fixed in size; if a locked region initially contains the end of the file and the file grows beyond the region then the new portion of the file will not be covered by the lock. If a file is expected to grow in size and a lock on the entire file is required then a region starting at zero, and no smaller than the expected maximum size of the file, should be locked. The zero-argument &lt;a href=&quot;filechannel#tryLock--&quot;&gt;&lt;code&gt;tryLock()&lt;/code&gt;&lt;/a&gt; method simply locks a region of size &lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt;&lt;code&gt;Long.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; と &lt;code&gt;size&lt;/code&gt; パラメータで指定された領域は、実際の基本ファイル内に含まれていたり、実際に重なっている必要はありません。ロック領域のサイズは固定されています。ロックされた領域が最初にファイルの終わりを含み、ファイルが領域を超えて大きくなる場合、ファイルの新しい部分はロックによってカバーされません。ファイルのサイズが大きくなることが予想され、ファイル全体のロックが必要な場合は、ゼロから始まり、ファイルの予想最大サイズ以上の領域をロックする必要があります。引数&lt;a href=&quot;filechannel#tryLock--&quot;&gt; &lt;code&gt;tryLock()&lt;/code&gt; &lt;/a&gt;メソッドは、サイズが&lt;a href=&quot;../../lang/long#MAX_VALUE&quot;&gt; &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の&lt;/a&gt;領域をロックするだけです。</target>
        </trans-unit>
        <trans-unit id="2018bb0b35a071dd77f0537c6308e64613671b58" translate="yes" xml:space="preserve">
          <source>The registered &lt;a href=&quot;#addConfigurationListener(java.lang.Runnable)&quot;&gt;configuration listeners&lt;/a&gt; will be invoked after the configuration is successfully updated.</source>
          <target state="translated">登録された&lt;a href=&quot;#addConfigurationListener(java.lang.Runnable)&quot;&gt;構成リスナー&lt;/a&gt;は、構成が正常に更新された後に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="3d0fc73493ecda447bb85c445c6e4f953b759f7f" translate="yes" xml:space="preserve">
          <source>The registration/deregistration methods accept an instance of &lt;code&gt;NamingListener&lt;/code&gt;. There are subinterfaces of &lt;code&gt;NamingListener&lt;/code&gt; for different of event types of &lt;code&gt;NamingEvent&lt;/code&gt;. For example, the &lt;code&gt;ObjectChangeListener&lt;/code&gt; interface is for the &lt;code&gt;NamingEvent.OBJECT_CHANGED&lt;/code&gt; event type. To register interest in multiple event types, the listener implementation should implement multiple &lt;code&gt;NamingListener&lt;/code&gt; subinterfaces and use a single invocation of &lt;code&gt;addNamingListener()&lt;/code&gt;. In addition to reducing the number of method calls and possibly the code size of the listeners, this allows some service providers to optimize the registration.</source>
          <target state="translated">登録/登録 &lt;code&gt;NamingListener&lt;/code&gt; メソッドは、NamingListenerのインスタンスを受け入れます。 &lt;code&gt;NamingListener&lt;/code&gt; のさまざまなイベントタイプに &lt;code&gt;NamingEvent&lt;/code&gt; サブインターフェイスがあります。たとえば、 &lt;code&gt;ObjectChangeListener&lt;/code&gt; インターフェイスは、 &lt;code&gt;NamingEvent.OBJECT_CHANGED&lt;/code&gt; イベントタイプ用です。複数のイベントタイプへの関心を登録するには、リスナー実装が複数の &lt;code&gt;NamingListener&lt;/code&gt; サブインターフェースを実装し、 &lt;code&gt;addNamingListener()&lt;/code&gt; の単一の呼び出しを使用する必要があります。メソッド呼び出しの数を減らし、場合によってはリスナーのコードサイズを減らすことに加えて、一部のサービスプロバイダーは登録を最適化できます。</target>
        </trans-unit>
        <trans-unit id="6005af0d0e955fa02a5ecc341d6d2cbed8810f0c" translate="yes" xml:space="preserve">
          <source>The regular expression &lt;code&gt;.&lt;/code&gt; matches any character except a line terminator unless the &lt;a href=&quot;#DOTALL&quot;&gt;&lt;code&gt;DOTALL&lt;/code&gt;&lt;/a&gt; flag is specified.</source>
          <target state="translated">正規表現 &lt;code&gt;.&lt;/code&gt; &lt;a href=&quot;#DOTALL&quot;&gt; &lt;code&gt;DOTALL&lt;/code&gt; &lt;/a&gt;フラグが指定されていない限り、行末記号以外のすべての文字に一致します。</target>
        </trans-unit>
        <trans-unit id="d4b28ceb290f94f79d557bc3e4312d5d5404a206" translate="yes" xml:space="preserve">
          <source>The regular expression &lt;code&gt;.&lt;/code&gt; matches any character except a line terminator unless the &lt;a href=&quot;pattern#DOTALL&quot;&gt;&lt;code&gt;DOTALL&lt;/code&gt;&lt;/a&gt; flag is specified.</source>
          <target state="translated">正規表現 &lt;code&gt;.&lt;/code&gt; &lt;a href=&quot;pattern#DOTALL&quot;&gt; &lt;code&gt;DOTALL&lt;/code&gt; &lt;/a&gt;フラグが指定されていない限り、行末記号以外の任意の文字に一致します。</target>
        </trans-unit>
        <trans-unit id="06c07dbec7777602883d6500283e28c86a80e923" translate="yes" xml:space="preserve">
          <source>The related &lt;code&gt;DOMError.type&lt;/code&gt; dependent data if any.</source>
          <target state="translated">関連する &lt;code&gt;DOMError.type&lt;/code&gt; 依存データ（存在する場合）。</target>
        </trans-unit>
        <trans-unit id="92e8bde63f8804130f51216402f7e58eed8b42f4" translate="yes" xml:space="preserve">
          <source>The related platform dependent exception if any.</source>
          <target state="translated">もしあれば、関連するプラットフォーム依存の例外。</target>
        </trans-unit>
        <trans-unit id="6e4b1af8982753fca149df2aa7452224b647d528" translate="yes" xml:space="preserve">
          <source>The relation objects of that type will be removed from the Relation Service.</source>
          <target state="translated">そのタイプのリレーションオブジェクトは、リレーションサービスから削除されます。</target>
        </trans-unit>
        <trans-unit id="aa44fb4b73ba3a7eb0fa699a55544e1d6fb4e2cf" translate="yes" xml:space="preserve">
          <source>The relationship between &lt;code&gt;floorDiv&lt;/code&gt; and &lt;code&gt;floorMod&lt;/code&gt; is such that:</source>
          <target state="translated">&lt;code&gt;floorDiv&lt;/code&gt; と &lt;code&gt;floorMod&lt;/code&gt; の関係は次のようなものです。</target>
        </trans-unit>
        <trans-unit id="6427ac31d87ab27b06603a0df3c2ae4a7cbf6dfa" translate="yes" xml:space="preserve">
          <source>The relationship between &lt;code&gt;this&lt;/code&gt;&lt;code&gt;XMLGregorianCalendar&lt;/code&gt; and the specified &lt;code&gt;xmlGregorianCalendar&lt;/code&gt; as &lt;a href=&quot;datatypeconstants#LESSER&quot;&gt;&lt;code&gt;DatatypeConstants.LESSER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypeconstants#EQUAL&quot;&gt;&lt;code&gt;DatatypeConstants.EQUAL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypeconstants#GREATER&quot;&gt;&lt;code&gt;DatatypeConstants.GREATER&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;datatypeconstants#INDETERMINATE&quot;&gt;&lt;code&gt;DatatypeConstants.INDETERMINATE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">関係 &lt;code&gt;this&lt;/code&gt; &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; 、指定 &lt;code&gt;xmlGregorianCalendar&lt;/code&gt; として&lt;a href=&quot;datatypeconstants#LESSER&quot;&gt; &lt;code&gt;DatatypeConstants.LESSER&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;datatypeconstants#EQUAL&quot;&gt; &lt;code&gt;DatatypeConstants.EQUAL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;datatypeconstants#GREATER&quot;&gt; &lt;code&gt;DatatypeConstants.GREATER&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;datatypeconstants#INDETERMINATE&quot;&gt; &lt;code&gt;DatatypeConstants.INDETERMINATE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5c08d18f5dc47b416f3b07369175323c6d88f7a" translate="yes" xml:space="preserve">
          <source>The relationship between a WebSocket and the associated Listener is analogous to that of a Subscription and the associated Subscriber of type &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow&quot;&gt;&lt;code&gt;Flow&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">WebSocketと関連するリスナーの関係は、サブスクリプションと&lt;a href=&quot;../../../../java.base/java/util/concurrent/flow&quot;&gt; &lt;code&gt;Flow&lt;/code&gt; &lt;/a&gt;タイプの関連するサブスクライバーの関係に類似しています。</target>
        </trans-unit>
        <trans-unit id="1f651804f5ccc3a0272c1aca813a81ab9ff66d03" translate="yes" xml:space="preserve">
          <source>The relationship between a registered reference object and its queue is one-sided. That is, a queue does not keep track of the references that are registered with it. If a registered reference becomes unreachable itself, then it will never be enqueued. It is the responsibility of the program using reference objects to ensure that the objects remain reachable for as long as the program is interested in their referents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d34477c420fd977fd8f945aedd832fb3f7c9dfd" translate="yes" xml:space="preserve">
          <source>The relative URL need not specify all the components of a URL. If the protocol, host name, or port number is missing, the value is inherited from the fully specified URL. The file component must be specified. The optional fragment is not inherited.</source>
          <target state="translated">相対 URL は、URL のすべての構成要素を指定する必要はありません。プロトコル、ホスト名、ポート番号が指定されていない場合、その値は完全に指定されたURLから継承されます。ファイルの構成要素を指定する必要があります。オプションのフラグメントは継承されません。</target>
        </trans-unit>
        <trans-unit id="2f061ca1fba773cc35eb218fcd97124e40600f26" translate="yes" xml:space="preserve">
          <source>The relative index of the first mismatch between this and the given buffer, otherwise -1 if no mismatch.</source>
          <target state="translated">このバッファと指定されたバッファとの間の最初の不一致の相対インデックス。</target>
        </trans-unit>
        <trans-unit id="c5c5f181f6e29a7276bf6337e3a4edd8b847077a" translate="yes" xml:space="preserve">
          <source>The relativization of the given URI against this URI is computed as follows:</source>
          <target state="translated">このURIに対する与えられたURIの相対化は次のように計算される。</target>
        </trans-unit>
        <trans-unit id="e707cc2158f347f5aab8350d2339ff22d2e3b87b" translate="yes" xml:space="preserve">
          <source>The reliability of this method is important for the ability to use it to make security decisions, so its implementation should not just test if the class in question extends &lt;code&gt;Proxy&lt;/code&gt;.</source>
          <target state="translated">このメソッドの信頼性は、このメソッドを使用してセキュリティの決定を行う機能にとって重要であるため、問題のクラスが &lt;code&gt;Proxy&lt;/code&gt; を拡張するかどうかをテストするだけではありません。</target>
        </trans-unit>
        <trans-unit id="f22668315e9121681e1e68864a75519fe9de5684" translate="yes" xml:space="preserve">
          <source>The remainder is given by &lt;code&gt;this.subtract(this.divideToIntegralValue(divisor).multiply(divisor))&lt;/code&gt;. Note that this is &lt;em&gt;not&lt;/em&gt; the modulo operation (the result can be negative).</source>
          <target state="translated">余りは &lt;code&gt;this.subtract(this.divideToIntegralValue(divisor).multiply(divisor))&lt;/code&gt; で与えられます。これはモジュロ演算では&lt;em&gt;ない&lt;/em&gt;ことに注意してください（結果は負になる可能性があります）。</target>
        </trans-unit>
        <trans-unit id="8b7ae0cdf8ad17c67c6a33deb5e3ca85d6e010c4" translate="yes" xml:space="preserve">
          <source>The remainder is given by &lt;code&gt;this.subtract(this.divideToIntegralValue(divisor).multiply(divisor))&lt;/code&gt;. Note that this is not the modulo operation (the result can be negative).</source>
          <target state="translated">残りは &lt;code&gt;this.subtract(this.divideToIntegralValue(divisor).multiply(divisor))&lt;/code&gt; によって与えられます。これはモジュロ演算ではないことに注意してください（結果が負になる場合があります）。</target>
        </trans-unit>
        <trans-unit id="e82e7847d0c5f7329094a894a4727d5cc71d2c00" translate="yes" xml:space="preserve">
          <source>The remainder is given by &lt;code&gt;this.subtract(this.divideToIntegralValue(divisor,
 mc).multiply(divisor))&lt;/code&gt;. Note that this is not the modulo operation (the result can be negative).</source>
          <target state="translated">残りは &lt;code&gt;this.subtract(this.divideToIntegralValue(divisor, mc).multiply(divisor))&lt;/code&gt; によって与えられます。これはモジュロ演算ではないことに注意してください（結果が負になる場合があります）。</target>
        </trans-unit>
        <trans-unit id="cbccf12ec336d37bab08d7866f9df36a1069a2aa" translate="yes" xml:space="preserve">
          <source>The remaining SPI methods &lt;a href=&quot;#putSpi(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;putSpi(String,String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#removeSpi(java.lang.String)&quot;&gt;&lt;code&gt;removeSpi(String)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; have more complicated exception behavior. They are not specified to throw &lt;code&gt;BackingStoreException&lt;/code&gt;, as they can generally obey their contracts even if the backing store is unavailable. This is true because they return no information and their effects are not required to become permanent until a subsequent call to &lt;a href=&quot;preferences#flush()&quot;&gt;&lt;code&gt;Preferences.flush()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;preferences#sync()&quot;&gt;&lt;code&gt;Preferences.sync()&lt;/code&gt;&lt;/a&gt;. Generally speaking, these SPI methods should not throw exceptions. In some implementations, there may be circumstances under which these calls cannot even enqueue the requested operation for later processing. Even under these circumstances it is generally better to simply ignore the invocation and return, rather than throwing an exception. Under these circumstances, however, subsequently invoking &lt;code&gt;flush()&lt;/code&gt; or &lt;code&gt;sync&lt;/code&gt; would not imply that all previous operations had successfully been made permanent.</source>
          <target state="translated">残りのSPIメソッド&lt;a href=&quot;#putSpi(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;putSpi(String,String)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#removeSpi(java.lang.String)&quot;&gt; &lt;code&gt;removeSpi(String)&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#childSpi(java.lang.String)&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; に&lt;/a&gt;は、より複雑な例外動作があります。バッキングストアが利用できない場合でも、通常はコントラクトに従うことができる &lt;code&gt;BackingStoreException&lt;/code&gt; 、BackingStoreExceptionをスローするように指定されていません。これは、情報を返さず、&lt;a href=&quot;preferences#flush()&quot;&gt; &lt;code&gt;Preferences.flush()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;preferences#sync()&quot;&gt; &lt;code&gt;Preferences.sync()&lt;/code&gt; を&lt;/a&gt;後で呼び出すまで、その効果を永続的にする必要がないためです。。一般的に、これらのSPIメソッドは例外をスローするべきではありません。一部の実装では、これらの呼び出しが、後で処理するために要求された操作をキューに入れることさえできない状況が存在する場合があります。このような状況でも、例外をスローするのではなく、呼び出しを無視して返す方が一般的には優れています。ただし、これらの状況では、その後 &lt;code&gt;flush()&lt;/code&gt; または &lt;code&gt;sync&lt;/code&gt; を呼び出しても、以前のすべての操作が正常に永続化されたことを意味するわけではありません。</target>
        </trans-unit>
        <trans-unit id="47da9e589f25b7bfcd11328b7b51fd360a0d60ec" translate="yes" xml:space="preserve">
          <source>The remaining SPI methods &lt;a href=&quot;abstractpreferences#putSpi-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;putSpi(String,String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;abstractpreferences#removeSpi-java.lang.String-&quot;&gt;&lt;code&gt;removeSpi(String)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt;&lt;code&gt;childSpi(String)&lt;/code&gt;&lt;/a&gt; have more complicated exception behavior. They are not specified to throw &lt;code&gt;BackingStoreException&lt;/code&gt;, as they can generally obey their contracts even if the backing store is unavailable. This is true because they return no information and their effects are not required to become permanent until a subsequent call to &lt;a href=&quot;preferences#flush--&quot;&gt;&lt;code&gt;Preferences.flush()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;preferences#sync--&quot;&gt;&lt;code&gt;Preferences.sync()&lt;/code&gt;&lt;/a&gt;. Generally speaking, these SPI methods should not throw exceptions. In some implementations, there may be circumstances under which these calls cannot even enqueue the requested operation for later processing. Even under these circumstances it is generally better to simply ignore the invocation and return, rather than throwing an exception. Under these circumstances, however, all subsequent invocations of &lt;code&gt;flush()&lt;/code&gt; and &lt;code&gt;sync&lt;/code&gt; should return &lt;code&gt;false&lt;/code&gt;, as returning &lt;code&gt;true&lt;/code&gt; would imply that all previous operations had successfully been made permanent.</source>
          <target state="translated">残りのSPIメソッド&lt;a href=&quot;abstractpreferences#putSpi-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;putSpi(String,String)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;abstractpreferences#removeSpi-java.lang.String-&quot;&gt; &lt;code&gt;removeSpi(String)&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;abstractpreferences#childSpi-java.lang.String-&quot;&gt; &lt;code&gt;childSpi(String)&lt;/code&gt; に&lt;/a&gt;は、より複雑な例外動作があります。通常、バッキングストアが利用できない場合でもコントラクトに従うことができる &lt;code&gt;BackingStoreException&lt;/code&gt; 、BackingStoreExceptionをスローするように指定されていません。これは、それらが情報を返さず、その後の&lt;a href=&quot;preferences#flush--&quot;&gt; &lt;code&gt;Preferences.flush()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;preferences#sync--&quot;&gt; &lt;code&gt;Preferences.sync()&lt;/code&gt; の&lt;/a&gt;呼び出しまで永続化する必要がないためです。。一般的に言って、これらのSPIメソッドは例外をスローすべきではありません。一部の実装では、これらの呼び出しが、要求された操作を後で処理するためにエンキューすることさえできない状況があるかもしれません。このような状況下でも、例外をスローするよりも、呼び出しと戻りを単に無視する方が一般的には適切です。ただし、これらの状況では、後続のすべての &lt;code&gt;flush()&lt;/code&gt; および &lt;code&gt;sync&lt;/code&gt; の呼び出しは &lt;code&gt;false&lt;/code&gt; を返す必要があり &lt;code&gt;true&lt;/code&gt; を返すことは、以前のすべての操作が正常に永続化されたことを意味します。</target>
        </trans-unit>
        <trans-unit id="04a436b0f38850e482765bfe8b244ada2271191c" translate="yes" xml:space="preserve">
          <source>The remaining characters of the result represent the magnitude of the first argument. If the magnitude is zero, it is represented by a single zero character &lt;code&gt;'0'&lt;/code&gt; (&lt;code&gt;'\u0030'&lt;/code&gt;); otherwise, the first character of the representation of the magnitude will not be the zero character. The following ASCII characters are used as digits:</source>
          <target state="translated">結果の残りの文字は、最初の引数の大きさを表します。マグニチュードがゼロの場合、単一のゼロ文字 &lt;code&gt;'0'&lt;/code&gt; （ &lt;code&gt;'\u0030'&lt;/code&gt; ）で表されます。そうでない場合、絶対値の表現の最初の文字はゼロ文字にはなりません。次のASCII文字が数字として使用されます。</target>
        </trans-unit>
        <trans-unit id="b031f20190ca11166d6c7b1f498a8021f1fd8160" translate="yes" xml:space="preserve">
          <source>The remaining details of the &lt;code&gt;MBeanInfo&lt;/code&gt; for a Standard MBean are not specified. This includes the description of any contained constructors, and notifications; the names of parameters to constructors and operations; and the descriptions of constructor parameters.</source>
          <target state="translated">標準MBeanの &lt;code&gt;MBeanInfo&lt;/code&gt; の残りの詳細は指定されていません。これには、含まれているコンストラクターの説明と通知が含まれます。コンストラクタと操作に対するパラメータの名前。コンストラクタパラメータの説明。</target>
        </trans-unit>
        <trans-unit id="c7f4b12e2049eb0d2dbae4e0935da9f089467437" translate="yes" xml:space="preserve">
          <source>The remaining unresolved portion of the name. Cannot be null but empty OK.</source>
          <target state="translated">名前の未解決の残りの部分。nullにすることはできませんが、空であればOKです。</target>
        </trans-unit>
        <trans-unit id="ea85bdd68a733447d59816d26042ab04cf3dcc37" translate="yes" xml:space="preserve">
          <source>The remapping function must not modify this map during computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7050822aac2eaeaa73f4b961d1cb35d5d5e11578" translate="yes" xml:space="preserve">
          <source>The remapping function should not modify this map during computation.</source>
          <target state="translated">リマッピング関数は、計算中にこのマップを変更してはいけません。</target>
        </trans-unit>
        <trans-unit id="bc31c724cb4c9ebbaec1ed20f6acbd3909843172" translate="yes" xml:space="preserve">
          <source>The remote address; &lt;code&gt;null&lt;/code&gt; if the channel's socket is not connected</source>
          <target state="translated">リモートアドレス。チャネルのソケットが接続されていない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="673bd2ce7ddc2683e972ea4f5e6861895e8c2684" translate="yes" xml:space="preserve">
          <source>The remote agent runs in the execution process (separate from the main JShell process).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb8323319dc2708c5b633b881cd58ff8450c0c14" translate="yes" xml:space="preserve">
          <source>The remote agent runs in the execution process (separate from the main JShell process). This agent loads code over a socket from the main JShell process, executes the code, and other misc, Specialization of &lt;a href=&quot;directexecutioncontrol&quot;&gt;&lt;code&gt;DirectExecutionControl&lt;/code&gt;&lt;/a&gt; which adds stop support controlled by an external process. Designed to work with &lt;a href=&quot;jdidefaultexecutioncontrol&quot;&gt;&lt;code&gt;JdiDefaultExecutionControl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef7ea0baae0260a25616113571983d978e4ff08" translate="yes" xml:space="preserve">
          <source>The remote agent to launch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e7bc56b939ee7935299e6e6d043373f7df2f25b" translate="yes" xml:space="preserve">
          <source>The remote object becomes available. The header fields and the contents of the remote object can be accessed.</source>
          <target state="translated">リモートオブジェクトが利用可能になります。ヘッダフィールドとリモートオブジェクトの内容にアクセスできるようになります。</target>
        </trans-unit>
        <trans-unit id="5e100a0f6c2f94294ad6e3cd0c330ac89e4c13e0" translate="yes" xml:space="preserve">
          <source>The removal is not guaranteed to be persistent until the &lt;code&gt;flush&lt;/code&gt; method is called on this node (or an ancestor).</source>
          <target state="translated">このノード（または祖先）で &lt;code&gt;flush&lt;/code&gt; メソッドが呼び出されるまで、削除は永続的であることが保証されません。</target>
        </trans-unit>
        <trans-unit id="a80e61fbbbe10c51d6c88507a5031484ad5e8f17" translate="yes" xml:space="preserve">
          <source>The removal may or may not cause a reduction in the actual file size.</source>
          <target state="translated">削除すると実際のファイルサイズが小さくなる場合とそうでない場合があります。</target>
        </trans-unit>
        <trans-unit id="d723447722497695e77f4caccb3c9a5c643a12a5" translate="yes" xml:space="preserve">
          <source>The removal of a node needn't become persistent until the &lt;code&gt;flush&lt;/code&gt; method is invoked on this node (or an ancestor).</source>
          <target state="translated">ノードの削除は、このノード（または祖先）で &lt;code&gt;flush&lt;/code&gt; メソッドが呼び出されるまで持続する必要はありません。</target>
        </trans-unit>
        <trans-unit id="b282c26f23a8ff63876d094fed5b0b9dceb07331" translate="yes" xml:space="preserve">
          <source>The remove operation is not supported by this implementation of &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="translated">削除操作は、この &lt;code&gt;Iterator&lt;/code&gt; の実装ではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="3c4efa145e520c4a7598346c393df2dbbefdc968" translate="yes" xml:space="preserve">
          <source>The removed value.</source>
          <target state="translated">削除された値。</target>
        </trans-unit>
        <trans-unit id="6ff8f9058796bef90ed321ab88ccf0d012f42526" translate="yes" xml:space="preserve">
          <source>The renamed node. This is either the specified node or the new node that was created to replace the specified node.</source>
          <target state="translated">名前が変更されたノード。これは、指定されたノードか、指定されたノードを置き換えるために作成された新しいノードのいずれかです。</target>
        </trans-unit>
        <trans-unit id="fb9b7cdcd454dd83954d48a119b69fc6d29f5c43" translate="yes" xml:space="preserve">
          <source>The renderer used to draw the data cells of the column.</source>
          <target state="translated">列のデータセルを描画するために使用されるレンダラーです。</target>
        </trans-unit>
        <trans-unit id="713971eadcf5411214bfe63ca9c0cd65073e7a98" translate="yes" xml:space="preserve">
          <source>The renderer used to draw the header of the column.</source>
          <target state="translated">列のヘッダーを描画するために使用されるレンダラーです。</target>
        </trans-unit>
        <trans-unit id="ac7f1cf8057b8bea9aa3a7381065318220564c73" translate="yes" xml:space="preserve">
          <source>The reordering array need not specify an actual permutation. An incoming argument will be duplicated if its index appears more than once in the array, and an incoming argument will be dropped if its index does not appear in the array. As in the case of &lt;a href=&quot;#dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)&quot;&gt;&lt;code&gt;dropArguments&lt;/code&gt;&lt;/a&gt;, incoming arguments which are not mentioned in the reordering array may be of any type, as determined only by &lt;code&gt;newType&lt;/code&gt;.</source>
          <target state="translated">並べ替え配列は、実際の順列を指定する必要はありません。インデックスが配列に複数回出現する場合、着信引数は複製され、インデックスが配列に出現しない場合、着信引数はドロップされます。&lt;a href=&quot;#dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)&quot;&gt; &lt;code&gt;dropArguments&lt;/code&gt; &lt;/a&gt;の場合と同様に、並べ替え配列に記載されていない着信引数は、 &lt;code&gt;newType&lt;/code&gt; によってのみ決定されるように、任意のタイプにすることができます。</target>
        </trans-unit>
        <trans-unit id="7ee9a68c9011522398b40024ebeb43b4a5fda590" translate="yes" xml:space="preserve">
          <source>The reordering array need not specify an actual permutation. An incoming argument will be duplicated if its index appears more than once in the array, and an incoming argument will be dropped if its index does not appear in the array. As in the case of &lt;a href=&quot;methodhandles#dropArguments-java.lang.invoke.MethodHandle-int-java.util.List-&quot;&gt;&lt;code&gt;dropArguments&lt;/code&gt;&lt;/a&gt;, incoming arguments which are not mentioned in the reordering array are may be any type, as determined only by &lt;code&gt;newType&lt;/code&gt;.</source>
          <target state="translated">並べ替え配列は、実際の順列を指定する必要はありません。着信引数は、そのインデックスが配列に複数回出現する場合は複製され、その引数が配列に出現しない場合は削除されます。&lt;a href=&quot;methodhandles#dropArguments-java.lang.invoke.MethodHandle-int-java.util.List-&quot;&gt; &lt;code&gt;dropArguments&lt;/code&gt; &lt;/a&gt;の場合と同様に、並べ替え配列で言及されていない入力引数は、 &lt;code&gt;newType&lt;/code&gt; によってのみ決定される任意のタイプにすることができます。</target>
        </trans-unit>
        <trans-unit id="94e20896a8d370dd44b10d541260e63623383466" translate="yes" xml:space="preserve">
          <source>The reordering array need not specify an actual permutation. An incoming coordinate will be duplicated if its index appears more than once in the array, and an incoming coordinate will be dropped if its index does not appear in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51e74f5d8487e855f129611f92abf36e6a28994" translate="yes" xml:space="preserve">
          <source>The replacement string may contain references to subsequences captured during the previous match: Each occurrence of &lt;code&gt;$&lt;/code&gt;</source>
          <target state="translated">置換文字列は、前の試合中に捕獲サブへの参照が含まれる場合があります。それぞれの発生 &lt;code&gt;$&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="11b366ce3d5519585e67264e9f68f215e953b69e" translate="yes" xml:space="preserve">
          <source>The replacement string may contain references to subsequences captured during the previous match: Each occurrence of &lt;code&gt;${&lt;/code&gt;</source>
          <target state="translated">置換文字列は、前の試合中に取り込まサブシーケンスへの参照を含むことができる：各発生 &lt;code&gt;${&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49ab89b061a41906c8763945c85297d70e2bd282" translate="yes" xml:space="preserve">
          <source>The replacement text of the entity.</source>
          <target state="translated">実体の置換テキスト。</target>
        </trans-unit>
        <trans-unit id="75ec87cf75e7574e625f69514e58b5152817990b" translate="yes" xml:space="preserve">
          <source>The replacement text of the entity. This method will only return non-null if this is an internal entity.</source>
          <target state="translated">エンティティの置換テキスト。このメソッドは、これが内部エンティティである場合にのみ、非 null を返します。</target>
        </trans-unit>
        <trans-unit id="cf33c4bd273f01e0c22bc67185a111143ddb62b3" translate="yes" xml:space="preserve">
          <source>The replacer function should not modify this matcher's state during replacement. This method will, on a best-effort basis, throw a &lt;a href=&quot;../concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt; if such modification is detected.</source>
          <target state="translated">置換関数は、置換中にこのマッチャーの状態を変更しないでください。このメソッドは、ベストエフォートベースで、そのような変更が検出された場合に&lt;a href=&quot;../concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="3a325ac974e7b645dae1cacad32338ebd82736bc" translate="yes" xml:space="preserve">
          <source>The reported coordinates for mouse drag events are clipped to fit within the bounds of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; associated with the &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">マウスドラッグイベントについて報告された座標は、 &lt;code&gt;Component&lt;/code&gt; 関連付けられた &lt;code&gt;GraphicsConfiguration&lt;/code&gt; の境界内に収まるようにクリップされます。</target>
        </trans-unit>
        <trans-unit id="eb6b8031115b561f37eb9a4d7da91ed0656b375b" translate="yes" xml:space="preserve">
          <source>The reported coordinates for mouse drag events are clipped to fit within the bounds of the virtual device associated with the &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">マウスドラッグイベントについて報告された座標は、 &lt;code&gt;Component&lt;/code&gt; 関連付けられた仮想デバイスの境界内に収まるようにクリップされます。</target>
        </trans-unit>
        <trans-unit id="288c5e2c9b272e95a0d7c59900658548e9747ef2" translate="yes" xml:space="preserve">
          <source>The reporter that will be set on any XMLStreamReader or XMLEventReader created by this factory instance.</source>
          <target state="translated">このファクトリ インスタンスによって作成された XMLStreamReader または XMLEventReader に設定されるレポーター。</target>
        </trans-unit>
        <trans-unit id="55f25e93574df5310447cf5bb1c8796f989fc6ae" translate="yes" xml:space="preserve">
          <source>The reporting of parameter entities (including the external DTD subset) is optional, and SAX2 drivers that report LexicalHandler events may not implement it; you can use the &lt;code&gt;http://xml.org/sax/features/lexical-handler/parameter-entities&lt;/code&gt; feature to query or control the reporting of parameter entities.</source>
          <target state="translated">パラメータエンティティ（外部DTDサブセットを含む）のレポートはオプションであり、LexicalHandlerイベントをレポートするSAX2ドライバはそれを実装しない場合があります。 &lt;code&gt;http://xml.org/sax/features/lexical-handler/parameter-entities&lt;/code&gt; 機能を使用して、パラメーターエンティティのレポートを照会または制御できます。</target>
        </trans-unit>
        <trans-unit id="8c61cf9cb2860f72199b40004f9fd1739f05d6c2" translate="yes" xml:space="preserve">
          <source>The representation (mapping) in the Java programming language of an SQL &lt;code&gt;BLOB&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2aa7611b6b32d07253ef65ff7e061cbf6527495" translate="yes" xml:space="preserve">
          <source>The representation (mapping) in the Java programming language of an SQL &lt;code&gt;BLOB&lt;/code&gt; value. An SQL &lt;code&gt;BLOB&lt;/code&gt; is a built-in type that stores a Binary Large Object as a column value in a row of a database table. By default drivers implement &lt;code&gt;Blob&lt;/code&gt; using an SQL &lt;code&gt;locator(BLOB)&lt;/code&gt;, which means that a &lt;code&gt;Blob&lt;/code&gt; object contains a logical pointer to the SQL &lt;code&gt;BLOB&lt;/code&gt; data rather than the data itself. A &lt;code&gt;Blob&lt;/code&gt; object is valid for the duration of the transaction in which is was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6083e0509485bc16d1b67f9cd0c180d1fac35b49" translate="yes" xml:space="preserve">
          <source>The representation (mapping) in the Java programming language of an SQL ROWID value.</source>
          <target state="translated">SQL ROWID値のJavaプログラミング言語での表現(マッピング)。</target>
        </trans-unit>
        <trans-unit id="0acb89110741064b366cdd1922c5e4764ac516a3" translate="yes" xml:space="preserve">
          <source>The representation (mapping) in the Java programming language of an SQL ROWID value. An SQL ROWID is a built-in type, a value of which can be thought of as an address for its identified row in a database table. Whether that address is logical or, in any respects, physical is determined by its originating data source.</source>
          <target state="translated">SQL ROWID値のJavaプログラミング言語での表現(マッピング)。SQL ROWIDは組み込み型で、その値はデータベース・テーブル内で識別された行のアドレスと考えることができます。そのアドレスが論理的なものであるか、物理的なものであるかは、元のデータソースによって決定されます。</target>
        </trans-unit>
        <trans-unit id="a5a234babedabfce29cc4aa701cb753ce00ac220" translate="yes" xml:space="preserve">
          <source>The representation (mapping) in the Java&amp;trade; programming language of an SQL &lt;code&gt;BLOB&lt;/code&gt; value.</source>
          <target state="translated">SQL &lt;code&gt;BLOB&lt;/code&gt; 値のJava&amp;trade;プログラミング言語での表現（マッピング）。</target>
        </trans-unit>
        <trans-unit id="4d77c9a7464d84c1e1a1e7121b389a8cb2d1668e" translate="yes" xml:space="preserve">
          <source>The representation (mapping) in the Java&amp;trade; programming language of an SQL &lt;code&gt;BLOB&lt;/code&gt; value. An SQL &lt;code&gt;BLOB&lt;/code&gt; is a built-in type that stores a Binary Large Object as a column value in a row of a database table. By default drivers implement &lt;code&gt;Blob&lt;/code&gt; using an SQL &lt;code&gt;locator(BLOB)&lt;/code&gt;, which means that a &lt;code&gt;Blob&lt;/code&gt; object contains a logical pointer to the SQL &lt;code&gt;BLOB&lt;/code&gt; data rather than the data itself. A &lt;code&gt;Blob&lt;/code&gt; object is valid for the duration of the transaction in which is was created.</source>
          <target state="translated">SQL &lt;code&gt;BLOB&lt;/code&gt; 値のJava&amp;trade;プログラミング言語での表現（マッピング）。SQL &lt;code&gt;BLOB&lt;/code&gt; は、データベーステーブルの行の列値としてバイナリラージオブジェクトを格納する組み込み型です。デフォルトでは、ドライバーはSQL &lt;code&gt;locator(BLOB)&lt;/code&gt; を使用して &lt;code&gt;Blob&lt;/code&gt; を実装します。つまり、 &lt;code&gt;Blob&lt;/code&gt; オブジェクトには、データ自体ではなく、 &lt;code&gt;BLOB&lt;/code&gt; データへの論理ポインターが含まれます。A &lt;code&gt;Blob&lt;/code&gt; オブジェクトが作成されたされたトランザクションの期間中に有効です。</target>
        </trans-unit>
        <trans-unit id="3b478ac46ccb7d878a2f5619e7d5a35540bff2b2" translate="yes" xml:space="preserve">
          <source>The representation class associated with this &lt;code&gt;DataFlavor&lt;/code&gt; identifies the Java type of an object returned as a reference from an invocation &lt;code&gt;java.awt.datatransfer.getTransferData&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;DataFlavor&lt;/code&gt; に関連付けられた表現クラスは、呼び出し &lt;code&gt;java.awt.datatransfer.getTransferData&lt;/code&gt; から参照として返されるオブジェクトのJavaタイプを識別します。</target>
        </trans-unit>
        <trans-unit id="2b778106af4a2d34f18fd72da9905b02ac996017" translate="yes" xml:space="preserve">
          <source>The representation is exactly the one returned by the &lt;code&gt;Double.toString&lt;/code&gt; method of one argument.</source>
          <target state="translated">表現は、1 つの引数の &lt;code&gt;Double.toString&lt;/code&gt; メソッドによって返されるものとまったく同じです。</target>
        </trans-unit>
        <trans-unit id="58244bdf257d357f8d92e2421ad210e0d7962bd1" translate="yes" xml:space="preserve">
          <source>The representation is exactly the one returned by the &lt;code&gt;Float.toString&lt;/code&gt; method of one argument.</source>
          <target state="translated">表現は、1 つの引数の &lt;code&gt;Float.toString&lt;/code&gt; メソッドによって返されるものとまったく同じです。</target>
        </trans-unit>
        <trans-unit id="ded2585e0b6c084c04a4f0859a53141f76d123ae" translate="yes" xml:space="preserve">
          <source>The representation is exactly the one returned by the &lt;code&gt;Integer.toString&lt;/code&gt; method of one argument.</source>
          <target state="translated">この表現は、1 つの引数の &lt;code&gt;Integer.toString&lt;/code&gt; メソッドによって返されるものとまったく同じです。</target>
        </trans-unit>
        <trans-unit id="6aab087f6a2f2da33d64c153ee96c99fa034a1e7" translate="yes" xml:space="preserve">
          <source>The representation is exactly the one returned by the &lt;code&gt;Long.toString&lt;/code&gt; method of one argument.</source>
          <target state="translated">表現は、1 つの引数の &lt;code&gt;Long.toString&lt;/code&gt; メソッドによって返されるものとまったく同じです。</target>
        </trans-unit>
        <trans-unit id="b9a0adc7cc916f3011d7fe2d1b1539f1d22e7cd4" translate="yes" xml:space="preserve">
          <source>The representation of a savepoint, which is a point within the current transaction that can be referenced from the &lt;code&gt;Connection.rollback&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;Connection.rollback&lt;/code&gt; メソッドから参照できる現在のトランザクション内のポイントであるセーブポイントの表現。</target>
        </trans-unit>
        <trans-unit id="16e0f89431331e3c19f8e9168d79da480c3ea351" translate="yes" xml:space="preserve">
          <source>The representation of a savepoint, which is a point within the current transaction that can be referenced from the &lt;code&gt;Connection.rollback&lt;/code&gt; method. When a transaction is rolled back to a savepoint all changes made after that savepoint are undone.</source>
          <target state="translated">&lt;code&gt;Connection.rollback&lt;/code&gt; メソッドから参照できる現在のトランザクション内のポイントであるセーブポイントの表現。トランザクションがセーブポイントにロールバックされると、そのセーブポイント以降に行われたすべての変更が取り消されます。</target>
        </trans-unit>
        <trans-unit id="c10c8df535a59f66cf15a0bfa27c32d6f30bfdb3" translate="yes" xml:space="preserve">
          <source>The representation of an SGML DTD.</source>
          <target state="translated">SGML DTD の表現。</target>
        </trans-unit>
        <trans-unit id="f354ab4341294adf05dcc226d6afe0dd75fdc477" translate="yes" xml:space="preserve">
          <source>The representation of an SGML DTD. DTD describes a document syntax and is used in parsing of HTML documents. It contains a list of elements and their attributes as well as a list of entities defined in the DTD.</source>
          <target state="translated">SGMLのDTDを表現したもの。DTDは、文書の構文を記述したもので、HTML文書の解析に用いられる。DTDには、要素とその属性のリストと、DTDで定義された実体のリストが含まれている。</target>
        </trans-unit>
        <trans-unit id="0d60a9c0e70768f0432c0076bb2b850f773e5a83" translate="yes" xml:space="preserve">
          <source>The request controls supplied to the initial context constructor are &lt;em&gt;not&lt;/em&gt; used as the context request controls for subsequent context operations such as searches and lookups. Context request controls are set and updated by using &lt;code&gt;setRequestControls()&lt;/code&gt;.</source>
          <target state="translated">初期コンテキストコンストラクターに提供された要求コントロールは、検索やルックアップなどの後続のコンテキスト操作のコンテキスト要求コントロールとしては使用され&lt;em&gt;ません&lt;/em&gt;。コンテキスト要求コントロールは、 &lt;code&gt;setRequestControls()&lt;/code&gt; を使用して設定および更新されます。</target>
        </trans-unit>
        <trans-unit id="3c538826a3a1f2f420e3436c5b667643e5f793cd" translate="yes" xml:space="preserve">
          <source>The request-host is a HDN (not IP address) and has the form HD, where D is the value of the Domain attribute, and H is a string that contains one or more dots.</source>
          <target state="translated">リクエストホストはHDN(IPアドレスではない)であり、HDの形をしており、DはDomain属性の値であり、Hは1つ以上のドットを含む文字列である。</target>
        </trans-unit>
        <trans-unit id="a57362ff710e86a82bac45526ef9e2b2169857b3" translate="yes" xml:space="preserve">
          <source>The requested &lt;code&gt;Locale&lt;/code&gt; may contain an &lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt; extension&lt;/a&gt; for specifying the desired numbering system. For example, &lt;code&gt;&quot;ar-u-nu-arab&quot;&lt;/code&gt; (in the BCP 47 language tag form) specifies Arabic with the Arabic-Indic digits and symbols, while &lt;code&gt;&quot;ar-u-nu-latn&quot;&lt;/code&gt; specifies Arabic with the Latin digits and symbols. Refer to the &lt;em&gt;Unicode Locale Data Markup Language (LDML)&lt;/em&gt; specification for numbering systems.</source>
          <target state="translated">要求された &lt;code&gt;Locale&lt;/code&gt; は、目的の番号付けシステムを指定するための&lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt;拡張子&lt;/a&gt;が含まれている場合があります。たとえば、 &lt;code&gt;&quot;ar-u-nu-arab&quot;&lt;/code&gt; （BCP 47言語タグ形式）はアラビア語をアラビア語とインドの数字と記号で指定し、 &lt;code&gt;&quot;ar-u-nu-latn&quot;&lt;/code&gt; はアラビア語とラテン語の数字と記号を指定します。 。ナンバリングシステムについては、&lt;em&gt;Unicode Locale Data Markup Language（LDML）&lt;/em&gt;仕様を参照してください。</target>
        </trans-unit>
        <trans-unit id="e4313d8db2408961b8c6e4e788b166da71d191f7" translate="yes" xml:space="preserve">
          <source>The requested coder-result object</source>
          <target state="translated">要求されたコーダ-結果オブジェクト</target>
        </trans-unit>
        <trans-unit id="c473246769f43aa19b3ba4b2ef431369ba324d78" translate="yes" xml:space="preserve">
          <source>The requested data array element as an integer.</source>
          <target state="translated">要求されたデータ配列要素を整数で指定します。</target>
        </trans-unit>
        <trans-unit id="bc4af42dc723a89b139169dad6f6ac48341fa317" translate="yes" xml:space="preserve">
          <source>The requested type is any line that matches the description in the provided &lt;code&gt;Line.Info&lt;/code&gt; object. For example, if the info object represents a speaker port, and the mixer supports exactly one speaker port, this method should return 1. If the info object represents a source data line and the mixer supports the use of 32 source data lines simultaneously, the return value should be 32. If there is no limit, this function returns &lt;a href=&quot;audiosystem#NOT_SPECIFIED&quot;&gt;&lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要求されたタイプは、提供された &lt;code&gt;Line.Info&lt;/code&gt; オブジェクトの説明に一致する任意の行です。たとえば、infoオブジェクトがスピーカーポートを表し、ミキサーが1つのスピーカーポートのみをサポートする場合、このメソッドは1を返す必要があります。infoオブジェクトがソースデータラインを表し、ミキサーが32のソースデータラインの使用を同時にサポートする場合、戻り値は32である必要があります。制限がない場合、この関数は&lt;a href=&quot;audiosystem#NOT_SPECIFIED&quot;&gt; &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="248e76eb2ee596cc71b6a4da144a1ff22287b387" translate="yes" xml:space="preserve">
          <source>The requested type must have a return type of &lt;code&gt;void&lt;/code&gt;. (This is consistent with the JVM's treatment of constructor type descriptors.)</source>
          <target state="translated">要求されたタイプには、戻りタイプの &lt;code&gt;void&lt;/code&gt; が必要です。（これは、JVMのコンストラクター型記述子の扱いと一致しています。）</target>
        </trans-unit>
        <trans-unit id="516805460907e538d55b063de2a7d8a474251df4" translate="yes" xml:space="preserve">
          <source>The requester has canceled the job or the printer has aborted the job, but the printer is still performing some actions on the job until a specified stop point occurs or job termination/cleanup is completed.</source>
          <target state="translated">依頼元がジョブをキャンセルしたか、プリンタがジョブを中止したが、プリンタは指定された停止ポイントが発生するか、ジョブの終了/クリーンアップが完了するまで、ジョブの一部の動作を継続しています。</target>
        </trans-unit>
        <trans-unit id="6f22f6979881830731d65c0765a1fe0d7c814e17" translate="yes" xml:space="preserve">
          <source>The required</source>
          <target state="translated">必要な</target>
        </trans-unit>
        <trans-unit id="745e1e490c53f8464a11eebd65e0f35408648502" translate="yes" xml:space="preserve">
          <source>The required &lt;code&gt;hashCode&lt;/code&gt; behavior for Permission Objects is the following:</source>
          <target state="translated">権限オブジェクトに必要な &lt;code&gt;hashCode&lt;/code&gt; の動作は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="0b8bab1511c52f5ddaa9f2aab1201197de8e2410" translate="yes" xml:space="preserve">
          <source>The requirement of lookup object matching provides a &quot;fast fail&quot; behavior for programs which may otherwise trust erroneous revelation of a method handle with symbolic information (or caller binding) from an unexpected scope. Use &lt;a href=&quot;methodhandles#reflectAs(java.lang.Class,java.lang.invoke.MethodHandle)&quot;&gt;&lt;code&gt;MethodHandles.reflectAs(java.lang.Class&amp;lt;T&amp;gt;, java.lang.invoke.MethodHandle)&lt;/code&gt;&lt;/a&gt; to override this limitation.</source>
          <target state="translated">ルックアップオブジェクトマッチングの要件は、予期しないスコープからのシンボリック情報（または呼び出し元バインディング）を使用したメソッドハンドルの誤った公開を信頼する可能性のあるプログラムに「高速失敗」動作を提供します。&lt;a href=&quot;methodhandles#reflectAs(java.lang.Class,java.lang.invoke.MethodHandle)&quot;&gt; &lt;code&gt;MethodHandles.reflectAs(java.lang.Class&amp;lt;T&amp;gt;, java.lang.invoke.MethodHandle)&lt;/code&gt; &lt;/a&gt;を使用して、この制限をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="55d02efa54b09ebdcdd937fdc51b7ffc1d272c16" translate="yes" xml:space="preserve">
          <source>The requirement of lookup object matching provides a &quot;fast fail&quot; behavior for programs which may otherwise trust erroneous revelation of a method handle with symbolic information (or caller binding) from an unexpected scope. Use &lt;a href=&quot;methodhandles#reflectAs-java.lang.Class-java.lang.invoke.MethodHandle-&quot;&gt;&lt;code&gt;MethodHandles.reflectAs(java.lang.Class&amp;lt;T&amp;gt;, java.lang.invoke.MethodHandle)&lt;/code&gt;&lt;/a&gt; to override this limitation.</source>
          <target state="translated">ルックアップオブジェクトマッチングの要件は、予期しないスコープからのシンボリック情報（または呼び出し元のバインディング）によるメソッドハンドルの誤った開示を信頼するプログラムに「高速失敗」動作を提供します。この制限をオーバーライドするには、&lt;a href=&quot;methodhandles#reflectAs-java.lang.Class-java.lang.invoke.MethodHandle-&quot;&gt; &lt;code&gt;MethodHandles.reflectAs(java.lang.Class&amp;lt;T&amp;gt;, java.lang.invoke.MethodHandle)&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="0cbf46ff6901cb358f2bf2adf82f26fea12aff47" translate="yes" xml:space="preserve">
          <source>The reseedable and prediction resistance capabilities of a DRBG.</source>
          <target state="translated">DRBGのリシード可能性と予測耐性。</target>
        </trans-unit>
        <trans-unit id="88faedd860fdc4cb6207174dad3840e3bf7612c6" translate="yes" xml:space="preserve">
          <source>The reserved method name &quot;new&quot; may be used to call a class's constructor as if all classes defined static &quot;new&quot; methods. Constructor invocations are typically considered &lt;code&gt;Expression&lt;/code&gt;s rather than &lt;code&gt;Statement&lt;/code&gt;s as they return a value.</source>
          <target state="translated">予約されたメソッド名「new」は、すべてのクラスが静的な「new」メソッドを定義しているかのように、クラスのコンストラクターを呼び出すために使用できます。コンストラクターの呼び出しは、値を返すため、通常、 &lt;code&gt;Statement&lt;/code&gt; ではなく &lt;code&gt;Expression&lt;/code&gt; と見なされます。</target>
        </trans-unit>
        <trans-unit id="754706891133e7ad865e654b5b80f53d473f0298" translate="yes" xml:space="preserve">
          <source>The reset &lt;code&gt;DocumentBuilder&lt;/code&gt; is not guaranteed to have the same &lt;a href=&quot;../../../org/xml/sax/entityresolver&quot;&gt;&lt;code&gt;EntityResolver&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Object&lt;/code&gt;s, e.g. &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object obj)&lt;/code&gt;&lt;/a&gt;. It is guaranteed to have a functionally equal &lt;code&gt;EntityResolver&lt;/code&gt; and &lt;code&gt;ErrorHandler&lt;/code&gt;.</source>
          <target state="translated">リセット &lt;code&gt;DocumentBuilder&lt;/code&gt; 同じ持つことが保証されていない&lt;a href=&quot;../../../org/xml/sax/entityresolver&quot;&gt; &lt;code&gt;EntityResolver&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;Object&lt;/code&gt; 、秒など&lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object obj)&lt;/code&gt; &lt;/a&gt;。機能的に等しい &lt;code&gt;EntityResolver&lt;/code&gt; と &lt;code&gt;ErrorHandler&lt;/code&gt; を持つことが保証されています。</target>
        </trans-unit>
        <trans-unit id="f7e567940636717249f219f15560c4ebd13f7896" translate="yes" xml:space="preserve">
          <source>The reset &lt;code&gt;SAXParser&lt;/code&gt; is not guaranteed to have the same &lt;a href=&quot;../validation/schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Object&lt;/code&gt;, e.g. &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object obj)&lt;/code&gt;&lt;/a&gt;. It is guaranteed to have a functionally equal &lt;code&gt;Schema&lt;/code&gt;.</source>
          <target state="translated">リセット &lt;code&gt;SAXParser&lt;/code&gt; のは、同じ持つことが保証されていない&lt;a href=&quot;../validation/schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Object&lt;/code&gt; 、例えば&lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object obj)&lt;/code&gt; &lt;/a&gt;。機能的に等しい &lt;code&gt;Schema&lt;/code&gt; を持つことが保証されています。</target>
        </trans-unit>
        <trans-unit id="c30f2a2b35a74fb90b7aae0cc5ec8665873d5df5" translate="yes" xml:space="preserve">
          <source>The reset &lt;code&gt;Transformer&lt;/code&gt; is not guaranteed to have the same &lt;a href=&quot;uriresolver&quot;&gt;&lt;code&gt;URIResolver&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;errorlistener&quot;&gt;&lt;code&gt;ErrorListener&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Object&lt;/code&gt;s, e.g. &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object obj)&lt;/code&gt;&lt;/a&gt;. It is guaranteed to have a functionally equal &lt;code&gt;URIResolver&lt;/code&gt; and &lt;code&gt;ErrorListener&lt;/code&gt;.</source>
          <target state="translated">リセット &lt;code&gt;Transformer&lt;/code&gt; 同じ持つことが保証されていない&lt;a href=&quot;uriresolver&quot;&gt; &lt;code&gt;URIResolver&lt;/code&gt; &lt;/a&gt;か&lt;a href=&quot;errorlistener&quot;&gt; &lt;code&gt;ErrorListener&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Object&lt;/code&gt; 、秒など&lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object obj)&lt;/code&gt; &lt;/a&gt;。機能的に等しい &lt;code&gt;URIResolver&lt;/code&gt; と &lt;code&gt;ErrorListener&lt;/code&gt; を持つことが保証されています。</target>
        </trans-unit>
        <trans-unit id="01b3d7c853e31dc0a7995e2fca623c0cc7a8afec" translate="yes" xml:space="preserve">
          <source>The reset &lt;code&gt;Validator&lt;/code&gt; is not guaranteed to have the same &lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt;&lt;code&gt;LSResourceResolver&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Object&lt;/code&gt;s, e.g. &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object obj)&lt;/code&gt;&lt;/a&gt;. It is guaranteed to have a functionally equal &lt;code&gt;LSResourceResolver&lt;/code&gt; and &lt;code&gt;ErrorHandler&lt;/code&gt;.</source>
          <target state="translated">リセット &lt;code&gt;Validator&lt;/code&gt; は同じ持つことが保証されていない&lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt; &lt;code&gt;LSResourceResolver&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;Object&lt;/code&gt; 、秒など&lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object obj)&lt;/code&gt; &lt;/a&gt;。機能的に等しい &lt;code&gt;LSResourceResolver&lt;/code&gt; と &lt;code&gt;ErrorHandler&lt;/code&gt; を持つことが保証されています。</target>
        </trans-unit>
        <trans-unit id="5f47dccbff991860b05f0ad7e168ff6056c8b397" translate="yes" xml:space="preserve">
          <source>The reset &lt;code&gt;XPath&lt;/code&gt; is not guaranteed to have the same &lt;a href=&quot;xpathfunctionresolver&quot;&gt;&lt;code&gt;XPathFunctionResolver&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;xpathvariableresolver&quot;&gt;&lt;code&gt;XPathVariableResolver&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../namespace/namespacecontext&quot;&gt;&lt;code&gt;NamespaceContext&lt;/code&gt;&lt;/a&gt;&lt;code&gt;Object&lt;/code&gt;s, e.g. &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object obj)&lt;/code&gt;&lt;/a&gt;. It is guaranteed to have a functionally equal &lt;code&gt;XPathFunctionResolver&lt;/code&gt;, &lt;code&gt;XPathVariableResolver&lt;/code&gt; and &lt;code&gt;NamespaceContext&lt;/code&gt;.</source>
          <target state="translated">リセット &lt;code&gt;XPath&lt;/code&gt; 同じ持つことが保証されていない&lt;a href=&quot;xpathfunctionresolver&quot;&gt; &lt;code&gt;XPathFunctionResolver&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;xpathvariableresolver&quot;&gt; &lt;code&gt;XPathVariableResolver&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../namespace/namespacecontext&quot;&gt; &lt;code&gt;NamespaceContext&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Object&lt;/code&gt; の、例えば&lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object obj)&lt;/code&gt; &lt;/a&gt;。機能的に等しい &lt;code&gt;XPathFunctionResolver&lt;/code&gt; 、 &lt;code&gt;XPathVariableResolver&lt;/code&gt; 、および &lt;code&gt;NamespaceContext&lt;/code&gt; を持つことが保証されています。</target>
        </trans-unit>
        <trans-unit id="df87b115c664fd653afbf26bb11c0fc8970cab09" translate="yes" xml:space="preserve">
          <source>The resolution of the system identifiers associated with entities is done using &lt;code&gt;Document.documentURI&lt;/code&gt;. However, when the feature &quot;LS&quot; defined in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407&quot;&gt;DOM Level 3 Load and Save&lt;/a&gt;] is supported by the DOM implementation, the parameter &quot;resource-resolver&quot; can also be used on &lt;code&gt;DOMConfiguration&lt;/code&gt; objects attached to &lt;code&gt;Document&lt;/code&gt; nodes. If this parameter is set, &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; will invoke the resource resolver instead of using &lt;code&gt;Document.documentURI&lt;/code&gt;.</source>
          <target state="translated">エンティティに関連付けられたシステム識別子の解決は、 &lt;code&gt;Document.documentURI&lt;/code&gt; を使用して行われます。ただし、[ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407&quot;&gt;DOMレベル3のロードと保存&lt;/a&gt;]で定義された機能「LS」がDOM実装でサポートされている場合、パラメータ「resource-resolver」は &lt;code&gt;Document&lt;/code&gt; ノードにアタッチされた &lt;code&gt;DOMConfiguration&lt;/code&gt; オブジェクトでも使用できます。このパラメータが設定されている場合、 &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; 代わりに使用するリソースリゾルバを呼び出す &lt;code&gt;Document.documentURI&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="15648f82ccf848914068cb11110f72edc4adf8dc" translate="yes" xml:space="preserve">
          <source>The resolution of the system identifiers associated with entities is done using &lt;code&gt;Document.documentURI&lt;/code&gt;. However, when the feature &quot;LS&quot; defined in [&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407&quot;&gt;DOM Level 3 Load and Save&lt;/a&gt;] is supported by the DOM implementation, the parameter &quot;resource-resolver&quot; can also be used on &lt;code&gt;DOMConfiguration&lt;/code&gt; objects attached to &lt;code&gt;Document&lt;/code&gt; nodes. If this parameter is set, &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; will invoke the resource resolver instead of using &lt;code&gt;Document.documentURI&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1022ae785514449efe40f2c8963abb11d2504058" translate="yes" xml:space="preserve">
          <source>The resolve phase is controlled by two parameters, set on this class.</source>
          <target state="translated">解決位相は、このクラスに設定された2つのパラメータによって制御されます。</target>
        </trans-unit>
        <trans-unit id="6ad35174cec491d7c90515cea6438bbe6eeb865e" translate="yes" xml:space="preserve">
          <source>The resolved module with the given name or an empty &lt;code&gt;
         Optional&lt;/code&gt; if there isn't a module with this name in this configuration or any parent configurations</source>
          <target state="translated">指定された名前または空の解決されたモジュールこの構成または親構成にこの名前のモジュールがない場合は &lt;code&gt; Optional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a888b0082bf1bba928794b9e262d95500605aec" translate="yes" xml:space="preserve">
          <source>The resolved type descriptor at the call site of &lt;code&gt;invoke&lt;/code&gt; must be a valid argument to the receivers &lt;code&gt;asType&lt;/code&gt; method. In particular, the caller must specify the same argument arity as the callee's type, if the callee is not a &lt;a href=&quot;#asVarargsCollector(java.lang.Class)&quot;&gt;variable arity collector&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;invoke&lt;/code&gt; の呼び出しサイトで解決された型記述子は、レシーバーの &lt;code&gt;asType&lt;/code&gt; メソッドに対する有効な引数である必要があります。特に、呼び出し先が&lt;a href=&quot;#asVarargsCollector(java.lang.Class)&quot;&gt;可変アリティコレクターで&lt;/a&gt;ない場合、呼び出し元は呼び出し先のタイプと同じ引数アリティを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="c2a61f04ea30a79177449a58b04a28b104802818" translate="yes" xml:space="preserve">
          <source>The resolved type descriptor at the call site of &lt;code&gt;invoke&lt;/code&gt; must be a valid argument to the receivers &lt;code&gt;asType&lt;/code&gt; method. In particular, the caller must specify the same argument arity as the callee's type, if the callee is not a &lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;variable arity collector&lt;/a&gt;.</source>
          <target state="translated">呼び出しサイトで解決型記述子 &lt;code&gt;invoke&lt;/code&gt; レシーバへの有効な引数でなければなりません &lt;code&gt;asType&lt;/code&gt; の方法。特に、呼び出し先が&lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;可変アリティコレクターで&lt;/a&gt;ない場合、呼び出し元は呼び出し先のタイプと同じ引数アリティを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="eea421ae13a64e1dbdbe93927bc945b3bf0f2116" translate="yes" xml:space="preserve">
          <source>The resolver that will be set on any XMLStreamReader or XMLEventReader created by this factory instance.</source>
          <target state="translated">このファクトリ インスタンスによって作成された XMLStreamReader または XMLEventReader に設定されるリゾルバ。</target>
        </trans-unit>
        <trans-unit id="adc8b5b806ac4d1ec6811f56446ced5b92623119" translate="yes" xml:space="preserve">
          <source>The resolver will first search the system-type of entries with the specified &lt;code&gt;systemId&lt;/code&gt;. The system entries include &lt;code&gt;system&lt;/code&gt;, &lt;code&gt;rewriteSystem&lt;/code&gt; and &lt;code&gt;systemSuffix&lt;/code&gt; entries.</source>
          <target state="translated">リゾルバーは最初に、指定された &lt;code&gt;systemId&lt;/code&gt; を持つエントリのシステムタイプを検索します。システムエントリには、 &lt;code&gt;system&lt;/code&gt; 、 &lt;code&gt;rewriteSystem&lt;/code&gt; 、および &lt;code&gt;systemSuffix&lt;/code&gt; エントリが含まれます。</target>
        </trans-unit>
        <trans-unit id="043a5d4e92d9440bd14303d4b664c8b6162aa2d5" translate="yes" xml:space="preserve">
          <source>The resource manager is doing work outside a global transaction.</source>
          <target state="translated">リソースマネージャーはグローバル取引の外で仕事をしています。</target>
        </trans-unit>
        <trans-unit id="3a78066f6d7d65570a29e16f616bfab963bff0e5" translate="yes" xml:space="preserve">
          <source>The resource manager returns zero or more XIDs of the transaction branches that are currently in a prepared or heuristically completed state. If an error occurs during the operation, the resource manager should throw the appropriate XAException.</source>
          <target state="translated">リソースマネージャは、現在準備された状態またはヒューリスティックに完了した状態にあるトランザクションブランチのゼロまたはそれ以上のXIDを返す。操作中にエラーが発生した場合、リソースマネージャは適切な XAException をスローしなければなりません。</target>
        </trans-unit>
        <trans-unit id="71062e973d41f6ccd0f7868eee574273010d7036" translate="yes" xml:space="preserve">
          <source>The resource manager rolled back the transaction branch for a reason not on this list.</source>
          <target state="translated">リソースマネージャは、このリストにない理由でトランザクションブランチをロールバックしました。</target>
        </trans-unit>
        <trans-unit id="9ef095cc8f8eb9deb63e621a30579efd048e54dd" translate="yes" xml:space="preserve">
          <source>The resource requested or null.</source>
          <target state="translated">要求されたリソースまたはヌル。</target>
        </trans-unit>
        <trans-unit id="4cdbf0e8f46078714d3bc07542a4974803f2d6c4" translate="yes" xml:space="preserve">
          <source>The resources will be located when the returned stream is evaluated. If the evaluation results in an &lt;code&gt;IOException&lt;/code&gt; then the I/O exception is wrapped in an &lt;a href=&quot;../io/uncheckedioexception&quot;&gt;&lt;code&gt;UncheckedIOException&lt;/code&gt;&lt;/a&gt; that is then thrown.</source>
          <target state="translated">返されたストリームが評価されるときに、リソースが配置されます。評価の結果が &lt;code&gt;IOException&lt;/code&gt; になった場合、I / O例外は&lt;a href=&quot;../io/uncheckedioexception&quot;&gt; &lt;code&gt;UncheckedIOException&lt;/code&gt; に&lt;/a&gt;ラップされ、その後スローされます。</target>
        </trans-unit>
        <trans-unit id="c3d61363b6633b0d99e034696664c54cea2da612" translate="yes" xml:space="preserve">
          <source>The response body can be discarded using one of &lt;a href=&quot;httpresponse.bodyhandlers#discarding()&quot;&gt;&lt;code&gt;discarding&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;httpresponse.bodyhandlers#replacing(U)&quot;&gt;&lt;code&gt;replacing&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">応答本文は、&lt;a href=&quot;httpresponse.bodyhandlers#discarding()&quot;&gt; &lt;code&gt;discarding&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;httpresponse.bodyhandlers#replacing(U)&quot;&gt; &lt;code&gt;replacing&lt;/code&gt; &lt;/a&gt;いずれかを使用して破棄できます。</target>
        </trans-unit>
        <trans-unit id="e89a0946db3ad76329915dbe1fb2d058415e9c15" translate="yes" xml:space="preserve">
          <source>The response body is not available through this, or the &lt;code&gt;
 HttpResponse&lt;/code&gt; API, but instead all response body is forwarded to the given &lt;code&gt;subscriber&lt;/code&gt;, which should make it available, if appropriate, through some other mechanism, e.g. an entry in a database, etc.</source>
          <target state="translated">応答本文は、これまたは &lt;code&gt; HttpResponse&lt;/code&gt; APIを介して利用できませんが、代わりにすべての応答本文が特定の &lt;code&gt;subscriber&lt;/code&gt; 転送されます。これにより、必要に応じて、データベースのエントリなど、他のメカニズムを介して応答本文を利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="6dd06ecc31472bc0ffa478932d69394294897b00" translate="yes" xml:space="preserve">
          <source>The restore button text property.</source>
          <target state="translated">復元ボタンのテキスト プロパティ。</target>
        </trans-unit>
        <trans-unit id="99b6d2884fc55c38d82210c2985b9069bbb9d028" translate="yes" xml:space="preserve">
          <source>The result code. A zero value indicates success.</source>
          <target state="translated">結果コード。ゼロの値は成功を示します。</target>
        </trans-unit>
        <trans-unit id="8613290fff9e558c87a48402abefab9874ccc8e4" translate="yes" xml:space="preserve">
          <source>The result does not depend on the local time zone.</source>
          <target state="translated">結果は現地の時間帯に依存しません。</target>
        </trans-unit>
        <trans-unit id="921d7223769295c006da8a5575b7156fcaa03cc8" translate="yes" xml:space="preserve">
          <source>The result from JDK classes implementing &lt;code&gt;TemporalAccessor&lt;/code&gt; is as follows:</source>
          <target state="translated">&lt;code&gt;TemporalAccessor&lt;/code&gt; を実装するJDKクラスの結果は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="295420590a431895b0a9587ea2bb7cf9aa9bc5d8" translate="yes" xml:space="preserve">
          <source>The result is &lt;code&gt;true&lt;/code&gt; if and only if the argument is not &lt;code&gt;
 null&lt;/code&gt; and is a &lt;code&gt;FileTime&lt;/code&gt; that represents the same time. This method satisfies the general contract of the &lt;code&gt;Object.equals&lt;/code&gt; method.</source>
          <target state="translated">引数が &lt;code&gt; null&lt;/code&gt; でなく、同じ時刻を表す &lt;code&gt;FileTime&lt;/code&gt; で &lt;code&gt;true&lt;/code&gt; 場合にのみ、結果はtrueになります。このメソッドは、 &lt;code&gt;Object.equals&lt;/code&gt; メソッドの一般的なコントラクトを満たします。</target>
        </trans-unit>
        <trans-unit id="f6bd1c0a2aca7f162dd073e90d5740cb1616d84f" translate="yes" xml:space="preserve">
          <source>The result is &lt;code&gt;true&lt;/code&gt; if and only if the argument is not &lt;code&gt;null&lt;/code&gt; and is a &lt;code&gt;Color&lt;/code&gt; object that has the same red, green, blue, and alpha values as this object.</source>
          <target state="translated">結果は、引数が &lt;code&gt;null&lt;/code&gt; でなく、このオブジェクトと同じ赤、緑、青、およびアルファ値を持つ &lt;code&gt;Color&lt;/code&gt; オブジェクトで &lt;code&gt;true&lt;/code&gt; 場合にのみtrueになります。</target>
        </trans-unit>
        <trans-unit id="17e6a87b8d0781fae57ea50faf6f5b7a370d70bb" translate="yes" xml:space="preserve">
          <source>The result is &lt;code&gt;true&lt;/code&gt; if and only if the argument is not &lt;code&gt;null&lt;/code&gt; and is a &lt;code&gt;FileTime&lt;/code&gt; that represents the same time. This method satisfies the general contract of the &lt;code&gt;Object.equals&lt;/code&gt; method.</source>
          <target state="translated">結果は &lt;code&gt;true&lt;/code&gt; と引数がない場合にのみ場合 &lt;code&gt;null&lt;/code&gt; とある &lt;code&gt;FileTime&lt;/code&gt; 同じ時間を表しています。このメソッドは、 &lt;code&gt;Object.equals&lt;/code&gt; メソッドの一般規約を満たします。</target>
        </trans-unit>
        <trans-unit id="5e94f4c32498ea093ba8d30e7750bbbc7e9c3bb7" translate="yes" xml:space="preserve">
          <source>The result is &lt;code&gt;true&lt;/code&gt; if and only if the argument is not &lt;code&gt;null&lt;/code&gt; and is a &lt;code&gt;Rectangle&lt;/code&gt; object that has the same upper-left corner, width, and height as this &lt;code&gt;Rectangle&lt;/code&gt;.</source>
          <target state="translated">結果は、引数が &lt;code&gt;null&lt;/code&gt; でなく、この &lt;code&gt;Rectangle&lt;/code&gt; と同じ左上隅、幅、および高さを持つ &lt;code&gt;Rectangle&lt;/code&gt; オブジェクトで &lt;code&gt;true&lt;/code&gt; 場合にのみtrueになります。</target>
        </trans-unit>
        <trans-unit id="5ad28501616ab98234ec816e4489d80b5e85181f" translate="yes" xml:space="preserve">
          <source>The result is &lt;code&gt;true&lt;/code&gt; if and only if the argument is not &lt;code&gt;null&lt;/code&gt; and is an &lt;code&gt;AlphaComposite&lt;/code&gt; object that has the same compositing rule and alpha value as this object.</source>
          <target state="translated">引数が &lt;code&gt;null&lt;/code&gt; でなく、このオブジェクトと同じ合成ルールとアルファ値を持つ &lt;code&gt;AlphaComposite&lt;/code&gt; オブジェクトで &lt;code&gt;true&lt;/code&gt; 場合にのみ、結果はtrueになります。</target>
        </trans-unit>
        <trans-unit id="b0dee0b193f5269aef268cfda1e03af61caf65f1" translate="yes" xml:space="preserve">
          <source>The result is &lt;code&gt;true&lt;/code&gt; only if two cookies come from same domain (case-insensitive), have same name (case-insensitive), and have same path (case-sensitive).</source>
          <target state="translated">2つのCookieが同じドメイン（大文字と小文字を区別しない）からのもので、名前が同じ（大文字と小文字を区別しない）、パスが同じ（大文字と小文字を区別する）の場合にのみ、結果は &lt;code&gt;true&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="838dc70d106c3ae54e71b7f7448a352db88afffd" translate="yes" xml:space="preserve">
          <source>The result is a Unicode character</source>
          <target state="translated">その結果、ユニコード文字</target>
        </trans-unit>
        <trans-unit id="bc5bbca2ba8440cf736ca085cdafbcea982ef541" translate="yes" xml:space="preserve">
          <source>The result is a boolean as defined by .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6daca0572fa2e3689be9cd969023993b388ff672" translate="yes" xml:space="preserve">
          <source>The result is a boolean as defined by . Document modification does not invalidate the boolean, but may mean that reevaluation would not yield the same boolean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432ed2e9a36f0af4da6066cc56714de8ffa1b599" translate="yes" xml:space="preserve">
          <source>The result is a lexical representation generated by &lt;a href=&quot;#toXMLFormat()&quot;&gt;&lt;code&gt;toXMLFormat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">結果は、&lt;a href=&quot;#toXMLFormat()&quot;&gt; &lt;code&gt;toXMLFormat()&lt;/code&gt; &lt;/a&gt;によって生成された字句表現です。</target>
        </trans-unit>
        <trans-unit id="35b56830c2c27888962f73364e19ecf38d296dd4" translate="yes" xml:space="preserve">
          <source>The result is a literal &lt;code&gt;'%'&lt;/code&gt; (&lt;code&gt;'\u0025'&lt;/code&gt;)</source>
          <target state="translated">結果はリテラル &lt;code&gt;'%'&lt;/code&gt; （ &lt;code&gt;'\u0025'&lt;/code&gt; ）です</target>
        </trans-unit>
        <trans-unit id="ae4eff0014f50b7dcbf3e89936f518508841602b" translate="yes" xml:space="preserve">
          <source>The result is a node set as defined by and will be accessed as a single node, which may be &lt;code&gt;null&lt;/code&gt; if the node set is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f3383429aa4ff51f0bc6d090c4af1239ac45bb" translate="yes" xml:space="preserve">
          <source>The result is a node set as defined by and will be accessed as a single node, which may be &lt;code&gt;null&lt;/code&gt; if the node set is empty. Document modification does not invalidate the node, but may mean that the result node no longer corresponds to the current document. This is a convenience that permits optimization since the implementation can stop once the first node in document order of the resulting set has been found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb1726b9875e2a160bca58ffbe30b5ab0c41014" translate="yes" xml:space="preserve">
          <source>The result is a node set as defined by and will be accessed as a single node, which may be &lt;code&gt;null&lt;/code&gt;if the node set is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358c732c868abb77279bab5cc8355ef2118ac571" translate="yes" xml:space="preserve">
          <source>The result is a node set as defined by and will be accessed as a single node, which may be &lt;code&gt;null&lt;/code&gt;if the node set is empty. Document modification does not invalidate the node, but may mean that the result node no longer corresponds to the current document. This is a convenience that permits optimization since the implementation can stop once any node in the in the resulting set has been found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85edb7883c94b4c8f105d8587ec9c989aef0737b" translate="yes" xml:space="preserve">
          <source>The result is a node set as defined by that will be accessed as a snapshot list of nodes that may not be in a particular order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174b1d816c94549926923caa33456b0dc42ce588" translate="yes" xml:space="preserve">
          <source>The result is a node set as defined by that will be accessed as a snapshot list of nodes that may not be in a particular order. Document modification does not invalidate the snapshot but may mean that reevaluation would not yield the same snapshot and nodes in the snapshot may have been altered, moved, or removed from the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843611d51bb59b3e46eddfa39c865102ee04bd8a" translate="yes" xml:space="preserve">
          <source>The result is a node set as defined by that will be accessed as a snapshot list of nodes that will be in original document order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15beecaa1540be581986e19ad22b5b109e2aea0a" translate="yes" xml:space="preserve">
          <source>The result is a node set as defined by that will be accessed as a snapshot list of nodes that will be in original document order. Document modification does not invalidate the snapshot but may mean that reevaluation would not yield the same snapshot and nodes in the snapshot may have been altered, moved, or removed from the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800140e8356bd90792a7a183fb4673bef95846e1" translate="yes" xml:space="preserve">
          <source>The result is a node set as defined by that will be accessed iteratively, which may not produce nodes in a particular order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f70ef0354dbeb103906c1ec6e6a7165b67c87a" translate="yes" xml:space="preserve">
          <source>The result is a node set as defined by that will be accessed iteratively, which may not produce nodes in a particular order. Document modification invalidates the iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4784f6a3b87d1fb8bfb9674268f934c807402e" translate="yes" xml:space="preserve">
          <source>The result is a node set as defined by that will be accessed iteratively, which will produce document-ordered nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd68e4dbc9bd25a15e9385de489db23b32943a06" translate="yes" xml:space="preserve">
          <source>The result is a node set as defined by that will be accessed iteratively, which will produce document-ordered nodes. Document modification invalidates the iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b70fea7b0375f4f023b9de739b0c74b0a84fcb" translate="yes" xml:space="preserve">
          <source>The result is a number as defined by .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366c87b0e726800596d866a1e609cd6c5037d777" translate="yes" xml:space="preserve">
          <source>The result is a number as defined by . Document modification does not invalidate the number, but may mean that reevaluation would not yield the same number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5d5a70ee2f877804a1742cf70fe027bad91629" translate="yes" xml:space="preserve">
          <source>The result is a string as defined by .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8727572713e384109dec911a60ada1205deaeec1" translate="yes" xml:space="preserve">
          <source>The result is a string as defined by . Document modification does not invalidate the string, but may mean that the string no longer corresponds to the current document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef02a3668d69ce2348a1bc4508f08e4804908b1b" translate="yes" xml:space="preserve">
          <source>The result is a string that represents the sign and magnitude (absolute value) of the argument</source>
          <target state="translated">結果は、引数の符号と大きさ(絶対値)を表す文字列です。</target>
        </trans-unit>
        <trans-unit id="50a9d6bfa24192970ed8fb8258874aefd0c97173" translate="yes" xml:space="preserve">
          <source>The result is a string that represents the sign and magnitude (absolute value) of the argument. The formatting of the sign is described in the &lt;a href=&quot;#L10nAlgorithm&quot;&gt;localization algorithm&lt;/a&gt;. The formatting of the magnitude</source>
          <target state="translated">結果は、引数の符号と大きさ（絶対値）を表す文字列です。符号のフォーマットについては、&lt;a href=&quot;#L10nAlgorithm&quot;&gt;ローカライズアルゴリズムで&lt;/a&gt;説明しています。マグニチュードのフォーマット</target>
        </trans-unit>
        <trans-unit id="f2cfd2a95bfe92fd8ecc073d54de4e5f2a29bf7c" translate="yes" xml:space="preserve">
          <source>The result is associated with the first type that successfully parses. Normally, applications will use &lt;code&gt;instanceof&lt;/code&gt; to check the result. For example:</source>
          <target state="translated">結果は、正常に解析された最初のタイプに関連付けられています。通常、アプリケーションは &lt;code&gt;instanceof&lt;/code&gt; を使用して結果を確認します。例えば：</target>
        </trans-unit>
        <trans-unit id="2603fe8103afc50e2378d77be85a45908bf61f3a" translate="yes" xml:space="preserve">
          <source>The result is formatted according to the XML Schema 1.0 spec and can be always parsed back later into the equivalent &lt;code&gt;Duration Object&lt;/code&gt; by &lt;a href=&quot;datatypefactory#newDuration(java.lang.String)&quot;&gt;&lt;code&gt;DatatypeFactory.newDuration(String  lexicalRepresentation)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">結果はXMLスキーマ1.0仕様に従ってフォーマットされ、&lt;a href=&quot;datatypefactory#newDuration(java.lang.String)&quot;&gt; &lt;code&gt;DatatypeFactory.newDuration(String lexicalRepresentation)&lt;/code&gt; &lt;/a&gt;によって、後でいつでも同等の &lt;code&gt;Duration Object&lt;/code&gt; 解析して戻すことができます。</target>
        </trans-unit>
        <trans-unit id="6c479cf3264a2832bd0cd79a44afc9492a7822f3" translate="yes" xml:space="preserve">
          <source>The result is formatted as a decimal integer</source>
          <target state="translated">結果は10進整数としてフォーマットされます。</target>
        </trans-unit>
        <trans-unit id="1baf7d104748e0c4f8533df16bd664f663e30ad1" translate="yes" xml:space="preserve">
          <source>The result is formatted as a decimal number</source>
          <target state="translated">結果は10進数で表示されます。</target>
        </trans-unit>
        <trans-unit id="5f14b19f3b75abbc59e057304d121d6548d56189" translate="yes" xml:space="preserve">
          <source>The result is formatted as a decimal number in computerized scientific notation</source>
          <target state="translated">結果は、コンピュータ化された科学的表記法で10進数としてフォーマットされています。</target>
        </trans-unit>
        <trans-unit id="5ab4d798c9eeb9edc29f6dcdd7b9bd66fea5cc6a" translate="yes" xml:space="preserve">
          <source>The result is formatted as a hexadecimal floating-point number with a significand and an exponent. This conversion is &lt;b&gt;not&lt;/b&gt; supported for the &lt;code&gt;BigDecimal&lt;/code&gt; type despite the latter's being in the</source>
          <target state="translated">結果は、仮数と指数を含む16進浮動小数点数としてフォーマットされます。この変換は &lt;code&gt;BigDecimal&lt;/code&gt; タイプで&lt;b&gt;は&lt;/b&gt;サポートされて&lt;b&gt;いません。&lt;/b&gt;後者は</target>
        </trans-unit>
        <trans-unit id="42563538eaee038d859706aa7ad8dd76aaba6a51" translate="yes" xml:space="preserve">
          <source>The result is formatted as a hexadecimal integer</source>
          <target state="translated">結果は16進整数でフォーマットされます。</target>
        </trans-unit>
        <trans-unit id="5e4dac5beac66ef686eb3d95b633320454953615" translate="yes" xml:space="preserve">
          <source>The result is formatted as an octal integer</source>
          <target state="translated">結果は8進整数としてフォーマットされます。</target>
        </trans-unit>
        <trans-unit id="b924acf7a536ce1992d3ebe1342457a6f36dca7a" translate="yes" xml:space="preserve">
          <source>The result is formatted using computerized scientific notation or decimal format, depending on the precision and the value after rounding.</source>
          <target state="translated">結果は、精度と四捨五入後の値に応じて、コンピュータ化された科学表記法または10進法を使用してフォーマットされます。</target>
        </trans-unit>
        <trans-unit id="9909e6819bf8d3b2b56ef5ec3cec62f6ed40ce7e" translate="yes" xml:space="preserve">
          <source>The result is obtained by invoking &lt;code&gt;Integer.toHexString(arg.hashCode())&lt;/code&gt;.</source>
          <target state="translated">結果は、 &lt;code&gt;Integer.toHexString(arg.hashCode())&lt;/code&gt; を呼び出すことによって取得されます。</target>
        </trans-unit>
        <trans-unit id="9bb45f182258a186b18790c8b6cad368f2f9319d" translate="yes" xml:space="preserve">
          <source>The result is returned in an enumeration of &lt;code&gt;SearchResult&lt;/code&gt;s. Each &lt;code&gt;SearchResult&lt;/code&gt; contains the name of the object and other information about the object (see SearchResult). The name is either relative to the target context of the search (which is named by the &lt;code&gt;name&lt;/code&gt; parameter), or it is a URL string. If the target context is included in the enumeration (as is possible when &lt;code&gt;cons&lt;/code&gt; specifies a search scope of &lt;code&gt;SearchControls.OBJECT_SCOPE&lt;/code&gt; or &lt;code&gt;SearchControls.SUBSTREE_SCOPE&lt;/code&gt;), its name is the empty string. The &lt;code&gt;SearchResult&lt;/code&gt; may also contain attributes of the matching object if the &lt;code&gt;cons&lt;/code&gt; argument specified that attributes be returned.</source>
          <target state="translated">結果は &lt;code&gt;SearchResult&lt;/code&gt; の列挙で返されます。各 &lt;code&gt;SearchResult&lt;/code&gt; には、オブジェクトの名前とオブジェクトに関するその他の情報が含まれます（SearchResultを参照）。名前は、検索のターゲットコンテキスト（ &lt;code&gt;name&lt;/code&gt; パラメーターによって名前が付けられます）に関連するか、URL文字列です。ターゲットコンテキストが列挙に含まれている場合（ &lt;code&gt;cons&lt;/code&gt; が &lt;code&gt;SearchControls.OBJECT_SCOPE&lt;/code&gt; または &lt;code&gt;SearchControls.SUBSTREE_SCOPE&lt;/code&gt; の検索範囲を指定している場合に可能）、その名前は空の文字列です。 &lt;code&gt;SearchResult&lt;/code&gt; は、場合も、一致するオブジェクトの属性を含むことが &lt;code&gt;cons&lt;/code&gt; 引数は属性が返されることを指定しました。</target>
        </trans-unit>
        <trans-unit id="06f5e6bd8fe2e41c0946b6e4854fa774421e66fe" translate="yes" xml:space="preserve">
          <source>The result is that two threads are running concurrently: the current thread (which returns from the call to the &lt;code&gt;start&lt;/code&gt; method) and the other thread (which executes its &lt;code&gt;run&lt;/code&gt; method).</source>
          <target state="translated">その結果、2つのスレッドが同時に実行されます。現在のスレッド（ &lt;code&gt;start&lt;/code&gt; メソッドへの呼び出しから戻る）ともう1つのスレッド（ &lt;code&gt;run&lt;/code&gt; メソッドを実行する）です。</target>
        </trans-unit>
        <trans-unit id="d28d29bf955a0a2e562abe4616fe55325dd93e91" translate="yes" xml:space="preserve">
          <source>The result is the platform-specific line separator</source>
          <target state="translated">その結果、プラットフォーム固有のラインセパレータ</target>
        </trans-unit>
        <trans-unit id="16028df40d71c4c09ff419d356b5d9be1d2801c3" translate="yes" xml:space="preserve">
          <source>The result is the same as when using the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41412fe4e863ea723be458262dd0cc609691ec90" translate="yes" xml:space="preserve">
          <source>The result is undefined if a given argument is out of bounds.</source>
          <target state="translated">与えられた引数が範囲外の場合、結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="058151d93a1ffc55deb73095cbeeabd4b91f7162" translate="yes" xml:space="preserve">
          <source>The result may be the same object or a different object. If the requested target view isn't available then the given bean is returned.</source>
          <target state="translated">結果は同じオブジェクトか異なるオブジェクトになります。要求されたターゲットビューが利用できない場合は、与えられたビーンが返されます。</target>
        </trans-unit>
        <trans-unit id="d71f2225914f95f63b3119e8410020da3a87b63a" translate="yes" xml:space="preserve">
          <source>The result must be a concrete subclass of StartTlsResponse and must have a public zero-argument constructor.</source>
          <target state="translated">結果は StartTlsResponse の具体的なサブクラスであり、パブリックなゼロ引数のコンストラクタを持たなければなりません。</target>
        </trans-unit>
        <trans-unit id="af94abbaed2e088160b3ad60033de749b3e7b4aa" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;analyzeCompletion(String input)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5518c091fb9ed01f7f40cd601b33ede38bcea9" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;analyzeCompletion(String input)&lt;/code&gt;. Describes the completeness of the first snippet in the given input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddede63825319f46b754a759b7ce8eb4372db01a" translate="yes" xml:space="preserve">
          <source>The result of a DNS lookup for an LDAP URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6582fb948afbcc413b57e54cea0b30bde81e737" translate="yes" xml:space="preserve">
          <source>The result of a bulk copy is unspecified if, in the uncommon case, the source segment and this segment do not overlap, but refer to overlapping regions of the same backing storage using different addresses. For example, this may occur if the same file is &lt;a href=&quot;#mapFromPath(java.nio.file.Path,long,long,java.nio.channels.FileChannel.MapMode)&quot;&gt;&lt;code&gt;mapped&lt;/code&gt;&lt;/a&gt; to two segments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ef281b848eda832ef63d0cbb4b3167978fdaff" translate="yes" xml:space="preserve">
          <source>The result of a match operation.</source>
          <target state="translated">マッチ操作の結果。</target>
        </trans-unit>
        <trans-unit id="16ff2b07c82c6850565061f19a2fba35ea83719e" translate="yes" xml:space="preserve">
          <source>The result of any attempt to modify a node passed to a &lt;code&gt;LSSerializerFilter&lt;/code&gt; is implementation dependent.</source>
          <target state="translated">&lt;code&gt;LSSerializerFilter&lt;/code&gt; に渡されたノードを変更しようとした結果は、実装に依存します。</target>
        </trans-unit>
        <trans-unit id="86cbe802aaee405937142c5c8477e8e564f921ce" translate="yes" xml:space="preserve">
          <source>The result of applying this method to these arguments.</source>
          <target state="translated">このメソッドをこれらの引数に適用した結果です。</target>
        </trans-unit>
        <trans-unit id="b31380d4fb2e0fe70212e83955d24c3b92a4b2b8" translate="yes" xml:space="preserve">
          <source>The result of dereferencing a &lt;code&gt;URIReference&lt;/code&gt; is either an instance of &lt;a href=&quot;octetstreamdata&quot;&gt;&lt;code&gt;OctetStreamData&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;nodesetdata&quot;&gt;&lt;code&gt;NodeSetData&lt;/code&gt;&lt;/a&gt;. Unless the &lt;code&gt;URIReference&lt;/code&gt; is a</source>
          <target state="translated">&lt;code&gt;URIReference&lt;/code&gt; を逆参照した結果は、&lt;a href=&quot;octetstreamdata&quot;&gt; &lt;code&gt;OctetStreamData&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;nodesetdata&quot;&gt; &lt;code&gt;NodeSetData&lt;/code&gt; の&lt;/a&gt;インスタンスのいずれかです。ない限り &lt;code&gt;URIReference&lt;/code&gt; のです</target>
        </trans-unit>
        <trans-unit id="57688b2e9247501954c4e97e1843bbe216d0db07" translate="yes" xml:space="preserve">
          <source>The result of evaluating an XPath expression as a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">XPath式を &lt;code&gt;String&lt;/code&gt; として評価した結果。</target>
        </trans-unit>
        <trans-unit id="187dde591e1a356faf91de53b761157c44b78684" translate="yes" xml:space="preserve">
          <source>The result of evaluating an XPath expression as an &lt;code&gt;Object&lt;/code&gt; of &lt;code&gt;returnType&lt;/code&gt;.</source>
          <target state="translated">XPath式を &lt;code&gt;returnType&lt;/code&gt; の &lt;code&gt;Object&lt;/code&gt; として評価した結果。</target>
        </trans-unit>
        <trans-unit id="06c9132221a6a96dee79b4ca2f11200dc474b3d2" translate="yes" xml:space="preserve">
          <source>The result of evaluating the &lt;code&gt;XPath&lt;/code&gt; function as an &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XPath&lt;/code&gt; 関数を &lt;code&gt;Object&lt;/code&gt; として評価した結果。</target>
        </trans-unit>
        <trans-unit id="0fbfd9ab10f2fcfc0e43605231238f6c0ded7faf" translate="yes" xml:space="preserve">
          <source>The result of evaluating the expression.</source>
          <target state="translated">式を評価した結果。</target>
        </trans-unit>
        <trans-unit id="5429cf36c8fd7a2562aad20c9d7f000fb4661122" translate="yes" xml:space="preserve">
          <source>The result of invoking &lt;code&gt;toString()&lt;/code&gt; on the destination for the output</source>
          <target state="translated">出力の宛先で &lt;code&gt;toString()&lt;/code&gt; を呼び出した結果</target>
        </trans-unit>
        <trans-unit id="f10bfc6a52d64bcc34aea2bf2ebde23c53dfafd9" translate="yes" xml:space="preserve">
          <source>The result of parsing drives these callback methods.</source>
          <target state="translated">解析の結果がこれらのコールバックメソッドを駆動します。</target>
        </trans-unit>
        <trans-unit id="73d45b66d9ffa1146363db71d3dd68e129484be6" translate="yes" xml:space="preserve">
          <source>The result of parsing drives these callback methods. The open and close actions should be balanced. The &lt;code&gt;flush&lt;/code&gt; method will be the last method called, to give the receiver a chance to flush any pending data into the document.</source>
          <target state="translated">解析の結果は、これらのコールバックメソッドを駆動します。オープンアクションとクローズアクションのバランスをとる必要があります。 &lt;code&gt;flush&lt;/code&gt; 方法は、受信機に文書に保留中のデータをフラッシュする機会を与えるために、最後に呼び出されたメソッドになります。</target>
        </trans-unit>
        <trans-unit id="44e206b266ba20a6d4c2e1a04be2e9225595f101" translate="yes" xml:space="preserve">
          <source>The result of processing a given input is not a function of the presence or absence of other inputs (orthogonality).</source>
          <target state="translated">与えられた入力を処理した結果は、他の入力の有無の関数ではありません(直交性)。</target>
        </trans-unit>
        <trans-unit id="352941c0badf85a2fe4b0a279f773a8faeda5d6a" translate="yes" xml:space="preserve">
          <source>The result of the evaluation of the XPath expression.For XPath 1.0 results, this object will be of type &lt;code&gt;XPathResult&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe195ae57fa315bdb0e05f0a54cdd78c21fbbf3c" translate="yes" xml:space="preserve">
          <source>The result of this algorithm is chosen arbitrarily from the methods with most specific return type among all selected methods from step 3. Let R be a return type of a method M from the set of all selected methods from step 3. M is a method with most specific return type if there is no such method N != M from the same set, having return type S != R, such that S is a subtype of R as determined by R.class.&lt;a href=&quot;#isAssignableFrom(java.lang.Class)&quot;&gt;&lt;code&gt;isAssignableFrom(java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt;(S.class).</source>
          <target state="translated">このアルゴリズムの結果は、ステップ3で選択したすべてのメソッドの中で最も特定の戻り値の型を持つメソッドから任意に選択されます。Rをステップ3で選択したすべてのメソッドのセットからのメソッドMの戻り値の型とします。Mは次のメソッドです。同じセットからそのようなメソッドN！= Mがなく、戻り値の型S！= Rを持ち、SがR.classによって決定されるRのサブタイプである場合の最も具体的な戻り値の型。&lt;a href=&quot;#isAssignableFrom(java.lang.Class)&quot;&gt; &lt;code&gt;isAssignableFrom(java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;（S.class）。</target>
        </trans-unit>
        <trans-unit id="e7fdb4e83c0852b667620524f411ba48b7948b95" translate="yes" xml:space="preserve">
          <source>The result of this algorithm is the union of all selected methods from step 3.</source>
          <target state="translated">このアルゴリズムの結果は、ステップ3から選択されたすべてのメソッドの和となります。</target>
        </trans-unit>
        <trans-unit id="53dcb69ac17959659b0334122a358f8985fa05ac" translate="yes" xml:space="preserve">
          <source>The result of this method can be a negative period if the end is before the start. In most cases, the positive/negative sign will be the same in each of the supported fields.</source>
          <target state="translated">このメソッドの結果は、終了が開始よりも前であれば、負の期間になることがあります。ほとんどの場合、サポートされているフィールドのそれぞれで正負の符号は同じになります。</target>
        </trans-unit>
        <trans-unit id="7daa711ab9261153416c162a0aec24648bdcf12b" translate="yes" xml:space="preserve">
          <source>The result of this method can be a negative period if the end is before the start. The negative sign will be the same in each of year, month and day.</source>
          <target state="translated">この方法の結果、終了が開始よりも前であれば、マイナス期間になることもあります。年、月、日のそれぞれでマイナスの符号は同じになります。</target>
        </trans-unit>
        <trans-unit id="70f2097d3f2bdbf3980ebc845ba5296b4a7310cf" translate="yes" xml:space="preserve">
          <source>The result of this method can be a negative period if the end is before the start. To guarantee to obtain a positive duration call &lt;a href=&quot;#abs()&quot;&gt;&lt;code&gt;abs()&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">この方法の結果は、終了が開始の前である場合、負の期間になる可能性があります。正の期間を確実に取得するには、結果に対して&lt;a href=&quot;#abs()&quot;&gt; &lt;code&gt;abs()&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="84fc9d37222c832e8afbf150d8f6699253efda20" translate="yes" xml:space="preserve">
          <source>The result of this method can be a negative period if the end is before the start. To guarantee to obtain a positive duration call &lt;a href=&quot;duration#abs--&quot;&gt;&lt;code&gt;abs()&lt;/code&gt;&lt;/a&gt; on the result.</source>
          <target state="translated">このメソッドの結果は、終了が開始の前にある場合、負の期間になる可能性があります。正の期間を確実に取得するには、結果に対して&lt;a href=&quot;duration#abs--&quot;&gt; &lt;code&gt;abs()&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="fdc023462e3c1d38fa0fae3a92e16cba6d2639d7" translate="yes" xml:space="preserve">
          <source>The result of this method is &lt;code&gt;TemporalAccessor&lt;/code&gt; which represents the data as seen in the input. Values are not validated, thus parsing a date string of '2012-00-65' would result in a temporal with three fields - year of '2012', month of '0' and day-of-month of '65'.</source>
          <target state="translated">このメソッドの結果は、入力に表示されるデータを表す &lt;code&gt;TemporalAccessor&lt;/code&gt; です。値は検証されないため、「2012-00-65」の日付文字列を解析すると、「2012」の年、「0」の月、「65」の月の3つのフィールドを持つ一時データが生成されます。</target>
        </trans-unit>
        <trans-unit id="52fc7eddd6f4fde58aa8d10634dec95344d469b7" translate="yes" xml:space="preserve">
          <source>The result of this method is absolute if, and only if, either this URI is absolute or the given URI is absolute.</source>
          <target state="translated">このメソッドの結果は、このURIが絶対的であるか、与えられたURIが絶対的である場合にのみ、絶対的なものとなります。</target>
        </trans-unit>
        <trans-unit id="09c0c8baacc8b26a7914b1dbea349839039a03cd" translate="yes" xml:space="preserve">
          <source>The result of this method is exactly the same as if it were an invocation of this object's &lt;a href=&quot;#insert(int,java.lang.CharSequence,int,int)&quot;&gt;&lt;code&gt;insert&lt;/code&gt;&lt;/a&gt;(dstOffset, s, 0, s.length()) method.</source>
          <target state="translated">このメソッドの結果は、このオブジェクトの&lt;a href=&quot;#insert(int,java.lang.CharSequence,int,int)&quot;&gt; &lt;code&gt;insert&lt;/code&gt; &lt;/a&gt;（dstOffset、s、0、s.length（））メソッドの呼び出しである場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="33f42a4bb7c7ad421307948fd84808d9ca5b7265" translate="yes" xml:space="preserve">
          <source>The result of this method is exactly the same as if it were an invocation of this object's &lt;a href=&quot;stringbuffer#insert-int-java.lang.CharSequence-int-int-&quot;&gt;&lt;code&gt;insert&lt;/code&gt;&lt;/a&gt;(dstOffset, s, 0, s.length()) method.</source>
          <target state="translated">このメソッドの結果は、このオブジェクトの&lt;a href=&quot;stringbuffer#insert-int-java.lang.CharSequence-int-int-&quot;&gt; &lt;code&gt;insert&lt;/code&gt; &lt;/a&gt;（dstOffset、s、0、s.length（））メソッドを呼び出した場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="e72a2494b9f2adf3a9c829328a4201155a935ee8" translate="yes" xml:space="preserve">
          <source>The result of this method is exactly the same as if it were an invocation of this object's &lt;a href=&quot;stringbuilder#insert-int-java.lang.CharSequence-int-int-&quot;&gt;&lt;code&gt;insert&lt;/code&gt;&lt;/a&gt;(dstOffset, s, 0, s.length()) method.</source>
          <target state="translated">このメソッドの結果は、このオブジェクトの&lt;a href=&quot;stringbuilder#insert-int-java.lang.CharSequence-int-int-&quot;&gt; &lt;code&gt;insert&lt;/code&gt; &lt;/a&gt;（dstOffset、s、0、s.length（））メソッドを呼び出した場合とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="8aac06f8f47a270c52f5af0438f30546f8c15210" translate="yes" xml:space="preserve">
          <source>The result of this method is exactly the same as if it were an invocation of this.append(s, 0, s.length());</source>
          <target state="translated">このメソッドの結果は、this.append(s,0,s.length())の呼び出しと全く同じです。</target>
        </trans-unit>
        <trans-unit id="7b7539ebe1108c837cb3ebf5e22050282d869cda" translate="yes" xml:space="preserve">
          <source>The result of this method is never null. This method only associates the returned &lt;code&gt;KeyTab&lt;/code&gt; object with the default keytab file and does not read it.</source>
          <target state="translated">このメソッドの結果がnullになることはありません。このメソッドは、返された &lt;code&gt;KeyTab&lt;/code&gt; オブジェクトをデフォルトのキータブファイルに関連付けるだけで、それを読み取りません。</target>
        </trans-unit>
        <trans-unit id="7001452e9a69f2ce57bba98f6683a9cf75e695fd" translate="yes" xml:space="preserve">
          <source>The result of this method is never null. This method only associates the returned &lt;code&gt;KeyTab&lt;/code&gt; object with the file and does not read it.</source>
          <target state="translated">このメソッドの結果がnullになることはありません。このメソッドは、返された &lt;code&gt;KeyTab&lt;/code&gt; オブジェクトのみをファイルに関連付け、それを読み取りません。</target>
        </trans-unit>
        <trans-unit id="c5dddf426eb8badc7192516892b3925d64fec814" translate="yes" xml:space="preserve">
          <source>The result of this method is obtained by invoking the &lt;a href=&quot;../temporal/temporalquery#queryFrom(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;TemporalQuery.queryFrom(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; method on the specified query passing &lt;code&gt;this&lt;/code&gt; as the argument.</source>
          <target state="translated">この方法の結果を呼び出すことによって得られる&lt;a href=&quot;../temporal/temporalquery#queryFrom(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;TemporalQuery.queryFrom(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;通過指定されたクエリのメソッドを &lt;code&gt;this&lt;/code&gt; 引数として。</target>
        </trans-unit>
        <trans-unit id="c493abfdae35894af24f4901c426e667b33769ca" translate="yes" xml:space="preserve">
          <source>The result of this method is obtained by invoking the &lt;a href=&quot;../temporal/temporalquery#queryFrom-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;TemporalQuery.queryFrom(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; method on the specified query passing &lt;code&gt;this&lt;/code&gt; as the argument.</source>
          <target state="translated">このメソッドの結果は、指定されたクエリで&lt;a href=&quot;../temporal/temporalquery#queryFrom-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;TemporalQuery.queryFrom(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、 &lt;code&gt;this&lt;/code&gt; を引数として渡します。</target>
        </trans-unit>
        <trans-unit id="cf14aaf159e93918c79f0986121a7011b52fe97e" translate="yes" xml:space="preserve">
          <source>The result of this method is obtained by invoking the &lt;a href=&quot;temporal/temporaladjuster#adjustInto(java.time.temporal.Temporal)&quot;&gt;&lt;code&gt;TemporalAdjuster.adjustInto(Temporal)&lt;/code&gt;&lt;/a&gt; method on the specified adjuster passing &lt;code&gt;this&lt;/code&gt; as the argument.</source>
          <target state="translated">この方法の結果を呼び出すことによって得られる&lt;a href=&quot;temporal/temporaladjuster#adjustInto(java.time.temporal.Temporal)&quot;&gt; &lt;code&gt;TemporalAdjuster.adjustInto(Temporal)&lt;/code&gt; &lt;/a&gt;通過指定アジャスタのメソッドを &lt;code&gt;this&lt;/code&gt; 引数として。</target>
        </trans-unit>
        <trans-unit id="c9079bf22411247394dc7e14291f74d7e689d317" translate="yes" xml:space="preserve">
          <source>The result of this method is obtained by invoking the &lt;a href=&quot;temporal/temporaladjuster#adjustInto-java.time.temporal.Temporal-&quot;&gt;&lt;code&gt;TemporalAdjuster.adjustInto(Temporal)&lt;/code&gt;&lt;/a&gt; method on the specified adjuster passing &lt;code&gt;this&lt;/code&gt; as the argument.</source>
          <target state="translated">このメソッドの結果は、指定されたアジャスターで&lt;a href=&quot;temporal/temporaladjuster#adjustInto-java.time.temporal.Temporal-&quot;&gt; &lt;code&gt;TemporalAdjuster.adjustInto(Temporal)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、 &lt;code&gt;this&lt;/code&gt; を引数として渡します。</target>
        </trans-unit>
        <trans-unit id="952caf818a8c4cd6663bea809ef9d640be5e151b" translate="yes" xml:space="preserve">
          <source>The result of this method is obtained by invoking the &lt;a href=&quot;temporal/temporalquery#queryFrom(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;TemporalQuery.queryFrom(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; method on the specified query passing &lt;code&gt;this&lt;/code&gt; as the argument.</source>
          <target state="translated">この方法の結果を呼び出すことによって得られる&lt;a href=&quot;temporal/temporalquery#queryFrom(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;TemporalQuery.queryFrom(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;通過指定されたクエリのメソッドを &lt;code&gt;this&lt;/code&gt; 引数として。</target>
        </trans-unit>
        <trans-unit id="ed9634345d8412156512a42500e34a894cf4c2f5" translate="yes" xml:space="preserve">
          <source>The result of this method is obtained by invoking the &lt;a href=&quot;temporal/temporalquery#queryFrom-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;TemporalQuery.queryFrom(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; method on the specified query passing &lt;code&gt;this&lt;/code&gt; as the argument.</source>
          <target state="translated">このメソッドの結果は、指定されたクエリで&lt;a href=&quot;temporal/temporalquery#queryFrom-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;TemporalQuery.queryFrom(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、 &lt;code&gt;this&lt;/code&gt; を引数として渡します。</target>
        </trans-unit>
        <trans-unit id="9b7fc7cadcbbb563002dfc29694594763d5fe98f" translate="yes" xml:space="preserve">
          <source>The result of this method will make up the contents of the SASL buffer as defined in RFC 2222 without the leading four octet field that represents the length. &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;len&lt;/code&gt; specify the portion of &lt;code&gt;outgoing&lt;/code&gt; to use.</source>
          <target state="translated">このメソッドの結果は、長さを表す先頭の4オクテットフィールドなしで、RFC 2222で定義されているSASLバッファーのコンテンツを構成します。 &lt;code&gt;offset&lt;/code&gt; および &lt;code&gt;len&lt;/code&gt; は、使用する &lt;code&gt;outgoing&lt;/code&gt; の部分を指定します。</target>
        </trans-unit>
        <trans-unit id="1b8cb5fb0da99e3e289350d5c66fac89988702d0" translate="yes" xml:space="preserve">
          <source>The result returned by the &lt;a href=&quot;keyselector#select(javax.xml.crypto.dsig.keyinfo.KeyInfo,javax.xml.crypto.KeySelector.Purpose,javax.xml.crypto.AlgorithmMethod,javax.xml.crypto.XMLCryptoContext)&quot;&gt;&lt;code&gt;KeySelector.select&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;keyselector#select(javax.xml.crypto.dsig.keyinfo.KeyInfo,javax.xml.crypto.KeySelector.Purpose,javax.xml.crypto.AlgorithmMethod,javax.xml.crypto.XMLCryptoContext)&quot;&gt; &lt;code&gt;KeySelector.select&lt;/code&gt; &lt;/a&gt;メソッドによって返される結果。</target>
        </trans-unit>
        <trans-unit id="9369d2fab7f01eadc45cae17b70a104674f355e1" translate="yes" xml:space="preserve">
          <source>The result returned by the call is boxed if it is a primitive, or forced to null if the return type is void.</source>
          <target state="translated">呼び出しによって返された結果は、それがプリミティブであれば箱形になり、戻り値の型が void であれば強制的に null になります。</target>
        </trans-unit>
        <trans-unit id="806535d76174a264f9b4ff6d7c99faca08eddf1e" translate="yes" xml:space="preserve">
          <source>The result returned by the hook must be a method handle of exactly the same type as the call site.</source>
          <target state="translated">フックが返す結果は、コールサイトと全く同じ型のメソッドハンドルでなければなりません。</target>
        </trans-unit>
        <trans-unit id="ab16e8f218d193e2ac56d5cea7e3ab465621608f" translate="yes" xml:space="preserve">
          <source>The result set contains one row for each array element, with two columns in each row. The second column stores the element value; the first column stores the index into the array for that element (with the first array element being at index 1). The rows are in ascending order corresponding to the order of the indices.</source>
          <target state="translated">結果集合は,各配列要素に対して1行ずつ,各行には2つの列が含まれます.2 番目のカラムには要素の値が格納され,1 番目のカラムにはその要素の配列へのインデックスが格納されます(最初の配列要素はインデックス 1 です).行は,インデックスの順序に対応する昇順に並べられます.</target>
        </trans-unit>
        <trans-unit id="c7fbca7853e7e584b81e78e65665e66e2c6c2224" translate="yes" xml:space="preserve">
          <source>The result set has one row for each element of the SQL array designated by this object, with the first row containing the element at index &lt;code&gt;index&lt;/code&gt;. The result set has up to &lt;code&gt;count&lt;/code&gt; rows in ascending order based on the indices. Each row has two columns: The second column stores the element value; the first column stores the index into the array for that element.</source>
          <target state="translated">結果セットには、このオブジェクトによって指定されたSQL配列の要素ごとに1つの行があり、最初の行にはインデックス &lt;code&gt;index&lt;/code&gt; 要素が含まれています。結果セットには、インデックスに基づいて昇順で行を &lt;code&gt;count&lt;/code&gt; することができます。各行には2つの列があります。2番目の列には要素値が格納されます。最初の列は、その要素の配列にインデックスを格納します。</target>
        </trans-unit>
        <trans-unit id="59d025c7c37030729df1da6ef20378d1c89b991c" translate="yes" xml:space="preserve">
          <source>The result should use a conversion-dependent alternate form</source>
          <target state="translated">結果は変換に依存する代替形式を使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="8f5827a90eb65856b4b89ffb933882240c216cc7" translate="yes" xml:space="preserve">
          <source>The result type of a &lt;a href=&quot;filevisitor&quot;&gt;&lt;code&gt;FileVisitor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;filevisitor&quot;&gt; &lt;code&gt;FileVisitor&lt;/code&gt; &lt;/a&gt;の結果タイプ。</target>
        </trans-unit>
        <trans-unit id="3849090ea96c80661699ab68840a57cdce6665f1" translate="yes" xml:space="preserve">
          <source>The result value of successful run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb40e009ce6b33ab82fd10fa336473f4e491d2a" translate="yes" xml:space="preserve">
          <source>The result value of successful run. The value is null if not executed or an exception was thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7644c465280fb43e327f5847a1469aaa7aec19" translate="yes" xml:space="preserve">
          <source>The result will always include a sign</source>
          <target state="translated">結果には必ず記号が含まれます。</target>
        </trans-unit>
        <trans-unit id="c5f0ab9813b2497b6aace9d0a659cb51a7b9e650" translate="yes" xml:space="preserve">
          <source>The result will be left-justified.</source>
          <target state="translated">結果は左寄せになります。</target>
        </trans-unit>
        <trans-unit id="5cd03f8040d572a14698fa4790b45d2dea79538f" translate="yes" xml:space="preserve">
          <source>The result will be null if it is called on the root Logger in the namespace.</source>
          <target state="translated">名前空間のルート ロガーで呼び出された場合、結果は null になります。</target>
        </trans-unit>
        <trans-unit id="eebffb3b7f508dfd870235eaedb8bd617c34fb42" translate="yes" xml:space="preserve">
          <source>The result will be zero-padded</source>
          <target state="translated">結果はゼロパッドになります。</target>
        </trans-unit>
        <trans-unit id="ac5d38a04d258f50b2e728006d792d84ec797c12" translate="yes" xml:space="preserve">
          <source>The result will enclose negative numbers in parentheses</source>
          <target state="translated">結果は負の数値を括弧で囲みます。</target>
        </trans-unit>
        <trans-unit id="b60dbdb0c739a0db71280a2d5057407b2907dcbf" translate="yes" xml:space="preserve">
          <source>The result will include a leading space for positive values</source>
          <target state="translated">その結果、ポジティブな価値観のリーディングスペースを含む</target>
        </trans-unit>
        <trans-unit id="99b73d58b5f8e32d7a839a384b8c3e4612121e9f" translate="yes" xml:space="preserve">
          <source>The result will include locale-specific &lt;a href=&quot;../text/decimalformatsymbols#getGroupingSeparator()&quot;&gt;grouping separators&lt;/a&gt;</source>
          <target state="translated">結果には、ロケール固有の&lt;a href=&quot;../text/decimalformatsymbols#getGroupingSeparator()&quot;&gt;グループ化区切り文字&lt;/a&gt;が含まれます</target>
        </trans-unit>
        <trans-unit id="86565ee42252b8d90b6fc4f6a7e56b8ff7846015" translate="yes" xml:space="preserve">
          <source>The result will include locale-specific &lt;a href=&quot;../text/decimalformatsymbols#getGroupingSeparator--&quot;&gt;grouping separators&lt;/a&gt;</source>
          <target state="translated">結果には、ロケール固有の&lt;a href=&quot;../text/decimalformatsymbols#getGroupingSeparator--&quot;&gt;グループ化区切り文字&lt;/a&gt;が含まれます</target>
        </trans-unit>
        <trans-unit id="da36d6b79c4c033f7a27b28c533a4819c6e58026" translate="yes" xml:space="preserve">
          <source>The resultant byte array</source>
          <target state="translated">結果のバイト配列</target>
        </trans-unit>
        <trans-unit id="094bc7c12af1c9c170e626d26c061113ab22168d" translate="yes" xml:space="preserve">
          <source>The resulting &lt;code&gt;Class&lt;/code&gt; object</source>
          <target state="translated">結果の &lt;code&gt;Class&lt;/code&gt; オブジェクト</target>
        </trans-unit>
        <trans-unit id="776a2beb758c091693ee57d4a8d599511a9379bd" translate="yes" xml:space="preserve">
          <source>The resulting &lt;code&gt;Class&lt;/code&gt; object, or &lt;code&gt;null&lt;/code&gt; if the class could not be found.</source>
          <target state="translated">結果の &lt;code&gt;Class&lt;/code&gt; オブジェクト、またはクラスが見つからなかった場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="04d7e541442907c4718e4aa6df8cb95ea6facb8b" translate="yes" xml:space="preserve">
          <source>The resulting &lt;code&gt;Path&lt;/code&gt;</source>
          <target state="translated">結果の &lt;code&gt;Path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d9cee928349ecad8207afb80abfb3ac1e49b7c6" translate="yes" xml:space="preserve">
          <source>The resulting &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">結果の &lt;code&gt;String&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9c998e00f65f9ad466e49086e9abcbd51c428c9" translate="yes" xml:space="preserve">
          <source>The resulting &lt;code&gt;Version&lt;/code&gt;</source>
          <target state="translated">結果の &lt;code&gt;Version&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2eb30aecd9ce3fd342fd1fb862917adbede7e62" translate="yes" xml:space="preserve">
          <source>The resulting Class object.</source>
          <target state="translated">結果として得られるクラスオブジェクト。</target>
        </trans-unit>
        <trans-unit id="64fd0e638650ed8a264bb09d0464e8bdf66b1c52" translate="yes" xml:space="preserve">
          <source>The resulting URI</source>
          <target state="translated">結果として得られるURI</target>
        </trans-unit>
        <trans-unit id="f09e99077085a93a3362b510af059c6626ecc325" translate="yes" xml:space="preserve">
          <source>The resulting URI string is then parsed as if by invoking the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;URI(String)&lt;/code&gt;&lt;/a&gt; constructor and then invoking the &lt;a href=&quot;#parseServerAuthority()&quot;&gt;&lt;code&gt;parseServerAuthority()&lt;/code&gt;&lt;/a&gt; method upon the result; this may cause a &lt;a href=&quot;urisyntaxexception&quot;&gt;&lt;code&gt;URISyntaxException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">結果のURI文字列は、&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;URI(String)&lt;/code&gt; &lt;/a&gt;コンストラクターを呼び出してから、結果&lt;a href=&quot;#parseServerAuthority()&quot;&gt; &lt;code&gt;parseServerAuthority()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すかのように解析されます。これにより、&lt;a href=&quot;urisyntaxexception&quot;&gt; &lt;code&gt;URISyntaxException&lt;/code&gt; &lt;/a&gt;がスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="7419fc69db0c5232d5bde59115b8e8bbc2a129ee" translate="yes" xml:space="preserve">
          <source>The resulting URI string is then parsed as if by invoking the &lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt;&lt;code&gt;URI(String)&lt;/code&gt;&lt;/a&gt; constructor and then invoking the &lt;a href=&quot;uri#parseServerAuthority--&quot;&gt;&lt;code&gt;parseServerAuthority()&lt;/code&gt;&lt;/a&gt; method upon the result; this may cause a &lt;a href=&quot;urisyntaxexception&quot;&gt;&lt;code&gt;URISyntaxException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">次に、結果のURI文字列は、&lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt; &lt;code&gt;URI(String)&lt;/code&gt; &lt;/a&gt;コンストラクターを呼び出してから、結果&lt;a href=&quot;uri#parseServerAuthority--&quot;&gt; &lt;code&gt;parseServerAuthority()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すようにして解析されます。これにより、&lt;a href=&quot;urisyntaxexception&quot;&gt; &lt;code&gt;URISyntaxException&lt;/code&gt; &lt;/a&gt;がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="e0092d38cbcba375e121b4dfada28b43109355f6" translate="yes" xml:space="preserve">
          <source>The resulting URI string is then parsed in order to create the new URI instance as if by invoking the &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;URI(String)&lt;/code&gt;&lt;/a&gt; constructor; this may cause a &lt;a href=&quot;urisyntaxexception&quot;&gt;&lt;code&gt;URISyntaxException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">次に、結果のURI文字列が解析され、&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;URI(String)&lt;/code&gt; &lt;/a&gt;コンストラクターを呼び出すかのように新しいURIインスタンスが作成されます。これにより、&lt;a href=&quot;urisyntaxexception&quot;&gt; &lt;code&gt;URISyntaxException&lt;/code&gt; &lt;/a&gt;がスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="5a50f9807a1fa543061a71bf50d779ccfe528067" translate="yes" xml:space="preserve">
          <source>The resulting URI string is then parsed in order to create the new URI instance as if by invoking the &lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt;&lt;code&gt;URI(String)&lt;/code&gt;&lt;/a&gt; constructor; this may cause a &lt;a href=&quot;urisyntaxexception&quot;&gt;&lt;code&gt;URISyntaxException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">次に、結果のURI文字列が解析され、&lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt; &lt;code&gt;URI(String)&lt;/code&gt; &lt;/a&gt;コンストラクターが呼び出されたかのように新しいURIインスタンスが作成されます。これにより、&lt;a href=&quot;urisyntaxexception&quot;&gt; &lt;code&gt;URISyntaxException&lt;/code&gt; &lt;/a&gt;がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="f1cbbe9ae02dde33f88ed9dbc263ec8e5ac65206" translate="yes" xml:space="preserve">
          <source>The resulting adapter is the same type as the target, except that the first parameter type is dropped, if it corresponds to the result of the combiner.</source>
          <target state="translated">結果として得られるアダプタはターゲットと同じ型になりますが、 コンバイナの結果に対応するものであれば、最初のパラメータの型は削除されます。</target>
        </trans-unit>
        <trans-unit id="0492a8e1954857252e9e87bc20c1aba15bfe6e4d" translate="yes" xml:space="preserve">
          <source>The resulting arc begins at &lt;code&gt;startAngle&lt;/code&gt; and extends for &lt;code&gt;arcAngle&lt;/code&gt; degrees, using the current color. Angles are interpreted such that 0 degrees is at the 3 o'clock position. A positive value indicates a counter-clockwise rotation while a negative value indicates a clockwise rotation.</source>
          <target state="translated">結果の円弧は &lt;code&gt;startAngle&lt;/code&gt; で始まり、現在の色を使用して &lt;code&gt;arcAngle&lt;/code&gt; 度まで拡張します。角度は、0度が3時の位置になるように解釈されます。正の値は反時計回りの回転を示し、負の値は時計回りの回転を示します。</target>
        </trans-unit>
        <trans-unit id="43e6530ff8fe5ba50d8fda3e44fc6556cf949d6b" translate="yes" xml:space="preserve">
          <source>The resulting arc begins at &lt;code&gt;startAngle&lt;/code&gt; and extends for &lt;code&gt;arcAngle&lt;/code&gt; degrees. Angles are interpreted such that 0 degrees is at the 3 o'clock position. A positive value indicates a counter-clockwise rotation while a negative value indicates a clockwise rotation.</source>
          <target state="translated">結果の円弧は &lt;code&gt;startAngle&lt;/code&gt; で始まり、 &lt;code&gt;arcAngle&lt;/code&gt; 度まで伸びます。角度は、0度が3時の位置になるように解釈されます。正の値は反時計回りの回転を示し、負の値は時計回りの回転を示します。</target>
        </trans-unit>
        <trans-unit id="f03fd98b1be6d4bac23f1b8c056fc776f2b93ba7" translate="yes" xml:space="preserve">
          <source>The resulting arc covers an area &lt;code&gt;width&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; pixels wide by &lt;code&gt;height&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; pixels tall.</source>
          <target state="translated">結果の円弧は、領域の &lt;code&gt;width&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; ピクセル幅x &lt;code&gt;height&amp;nbsp;+&amp;nbsp;1&lt;/code&gt; ピクセルの高さをカバーします。</target>
        </trans-unit>
        <trans-unit id="6c786abb2aba329e942d81e1d06f1d11b97967b9" translate="yes" xml:space="preserve">
          <source>The resulting array is of exactly the same class as the original array.</source>
          <target state="translated">結果として得られる配列は,元の配列と全く同じクラスの配列となります.</target>
        </trans-unit>
        <trans-unit id="c5a1157b9f760855069d2f10df624ea637e64ca4" translate="yes" xml:space="preserve">
          <source>The resulting asynchronous channel group reuses a fixed number of threads. At any point, at most &lt;code&gt;nThreads&lt;/code&gt; threads will be active processing tasks that are submitted to handle I/O events and dispatch completion results for operations initiated on asynchronous channels in the group.</source>
          <target state="translated">結果の非同期チャネルグループは、固定数のスレッドを再利用します。任意の時点で、最大で &lt;code&gt;nThreads&lt;/code&gt; スレッドがアクティブな処理タスクとなり、I / Oイベントを処理し、グループ内の非同期チャネルで開始された操作の完了結果をディスパッチします。</target>
        </trans-unit>
        <trans-unit id="2e1c0df7b54fbf773f3c4b5bcdbc4bfa62115cb7" translate="yes" xml:space="preserve">
          <source>The resulting attribute has the set difference of its prior value set and the specified value set. If no values are specified, deletes the entire attribute. If the attribute does not exist, or if some or all members of the specified value set do not exist, this absence may be ignored and the operation succeeds, or a NamingException may be thrown to indicate the absence. Removal of the last value will remove the attribute if the attribute is required to have at least one value.</source>
          <target state="translated">結果として得られる属性は、その前の値のセットと指定された値のセットの差を持つ。値が指定されていない場合は、属性全体を削除する。属性が存在しない場合、または指定された値集合の一部またはすべてのメンバが存在しない場合、この不在は無視されて操作が成功するか、不在を示すNamingExceptionがスローされることがあります。最後の値の削除は、属性が少なくとも一つの値を持つことが要求されている場合に、その属性を削除します。</target>
        </trans-unit>
        <trans-unit id="5f77135844d22a07c9384b526ec687f24d01356f" translate="yes" xml:space="preserve">
          <source>The resulting buffer's byte order is &lt;a href=&quot;../../../../java.base/java/nio/byteorder#BIG_ENDIAN&quot;&gt;&lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt;&lt;/a&gt;; this can be changed using &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer#order(java.nio.ByteOrder)&quot;&gt;&lt;code&gt;ByteBuffer.order(java.nio.ByteOrder)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8b051c029a9cb257557ce55a86701099f33ad0" translate="yes" xml:space="preserve">
          <source>The resulting channel is associated with default thread pool to which tasks are submitted to handle I/O events and dispatch to completion handlers that consume the result of asynchronous operations performed on the resulting channel.</source>
          <target state="translated">結果のチャネルは、I/O イベントを処理するためにタスクが投入され、結果のチャネルで実行された非同期操作の結果を消費する補完ハンドラにディスパッチされるデフォルトのスレッドプールに関連付けられます。</target>
        </trans-unit>
        <trans-unit id="2e0477159a435eb4c7b6e87913d4947dad931600" translate="yes" xml:space="preserve">
          <source>The resulting channel will not be buffered; it will simply redirect its I/O operations to the given stream. Closing the channel will in turn cause the stream to be closed.</source>
          <target state="translated">結果として得られるチャネルはバッファリングされず、単にその I/O 操作を指定されたストリームにリダイレクトします。チャネルを閉じると、そのストリームも閉じられます。</target>
        </trans-unit>
        <trans-unit id="b0000228e6c4ee5b53397bc48274afbcc1060a57" translate="yes" xml:space="preserve">
          <source>The resulting collector functions do the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c15e2a1ba12feb9a34cac207a386731897606ad" translate="yes" xml:space="preserve">
          <source>The resulting collector is &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt;&lt;code&gt;Collector.Characteristics.UNORDERED&lt;/code&gt;&lt;/a&gt; if both downstream collectors are unordered and &lt;a href=&quot;collector.characteristics#CONCURRENT&quot;&gt;&lt;code&gt;Collector.Characteristics.CONCURRENT&lt;/code&gt;&lt;/a&gt; if both downstream collectors are concurrent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7f4afa7fa2b1530937581bdba920189b54b7a0" translate="yes" xml:space="preserve">
          <source>The resulting context is for resolving URLs of the scheme &lt;code&gt;scheme&lt;/code&gt;. The resulting context is not tied to a specific URL. It is able to handle arbitrary URLs with the specified scheme.</source>
          <target state="translated">結果のコンテキストは、スキーム &lt;code&gt;scheme&lt;/code&gt; の URLを解決するためのものです。結果のコンテキストは、特定のURLに関連付けられていません。指定されたスキームで任意のURLを処理できます。</target>
        </trans-unit>
        <trans-unit id="b4ed36145c18184a4c0192876b36f57186eb11b9" translate="yes" xml:space="preserve">
          <source>The resulting file attribute view can be used to read or update the attributes of file in this directory. The &lt;code&gt;type&lt;/code&gt; parameter specifies the type of the attribute view and the method returns an instance of that type if supported. Invoking this method to obtain a &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; always returns an instance of that class that is bound to the file in the directory.</source>
          <target state="translated">結果のファイル属性ビューを使用して、このディレクトリ内のファイルの属性を読み取りまたは更新できます。 &lt;code&gt;type&lt;/code&gt; パラメータは、属性ビューのタイプを指定し、サポートされている場合の方法は、そのタイプのインスタンスを返します。このメソッドを&lt;a href=&quot;attribute/basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;を取得すると、常に、ディレクトリ内のファイルにバインドされているそのクラスのインスタンスが返されます。</target>
        </trans-unit>
        <trans-unit id="d791ce15a89946bb449aad309d10e2028011d0e0" translate="yes" xml:space="preserve">
          <source>The resulting file attribute view can be used to read or update the attributes of this (open) directory. The &lt;code&gt;type&lt;/code&gt; parameter specifies the type of the attribute view and the method returns an instance of that type if supported. Invoking this method to obtain a &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; always returns an instance of that class that is bound to this open directory.</source>
          <target state="translated">結果のファイル属性ビューを使用して、この（開いている）ディレクトリの属性を読み取りまたは更新できます。 &lt;code&gt;type&lt;/code&gt; パラメータは、属性ビューのタイプを指定し、サポートされている場合の方法は、そのタイプのインスタンスを返します。このメソッドを&lt;a href=&quot;attribute/basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;を取得すると、常にこの開いているディレクトリにバインドされているそのクラスのインスタンスが返されます。</target>
        </trans-unit>
        <trans-unit id="1c0268e4ebd731468a02d197d2029a7d6d6cfbfc" translate="yes" xml:space="preserve">
          <source>The resulting file names must match exactly as strings with their occurrences in the JAR file.</source>
          <target state="translated">結果として得られるファイル名は、JARファイル内で発生したものと文字列として正確に一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="3d48fd783d3474da2a240f1521be0f07a0215d13" translate="yes" xml:space="preserve">
          <source>The resulting filter performs the limit checks and then tries to match the class, if any. If any of the limits are exceeded, the filter returns &lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt;&lt;code&gt;Status.REJECTED&lt;/code&gt;&lt;/a&gt;. If the class is an array type, the class to be matched is the element type. Arrays of any number of dimensions are treated the same as the element type. For example, a pattern of &quot;&lt;code&gt;!example.Foo&lt;/code&gt;&quot;, rejects creation of any instance or array of &lt;code&gt;example.Foo&lt;/code&gt;. The first pattern that matches, working from left to right, determines the &lt;a href=&quot;objectinputfilter.status#ALLOWED&quot;&gt;&lt;code&gt;Status.ALLOWED&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt;&lt;code&gt;Status.REJECTED&lt;/code&gt;&lt;/a&gt; result. If the limits are not exceeded and no pattern matches the class, the result is &lt;a href=&quot;objectinputfilter.status#UNDECIDED&quot;&gt;&lt;code&gt;Status.UNDECIDED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">結果のフィルターは、制限チェックを実行してから、クラスがある場合はそれを照合しようとします。制限のいずれかを超えると、フィルターは&lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt; &lt;code&gt;Status.REJECTED&lt;/code&gt; を&lt;/a&gt;返します。クラスが配列型の場合、照合されるクラスは要素型です。任意の数の次元の配列は、要素タイプと同じように扱われます。たとえば、「 &lt;code&gt;!example.Foo&lt;/code&gt; 」のパターンは、 &lt;code&gt;example.Foo&lt;/code&gt; のインスタンスまたは配列の作成を拒否します。一致する最初のパターンは、左から右に機能して、&lt;a href=&quot;objectinputfilter.status#ALLOWED&quot;&gt; &lt;code&gt;Status.ALLOWED&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt; &lt;code&gt;Status.REJECTED&lt;/code&gt; の&lt;/a&gt;結果を決定します。制限を超えておらず、クラスに一致するパターンがない場合、結果は&lt;a href=&quot;objectinputfilter.status#UNDECIDED&quot;&gt; &lt;code&gt;Status.UNDECIDED&lt;/code&gt; になり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="39b37f06bbf698636d93a2ea1a9e0ccaad0b21fe" translate="yes" xml:space="preserve">
          <source>The resulting formatted String will normally include a localized and formatted version of the LogRecord's message field. It is recommended to use the &lt;a href=&quot;#formatMessage(java.util.logging.LogRecord)&quot;&gt;&lt;code&gt;formatMessage(java.util.logging.LogRecord)&lt;/code&gt;&lt;/a&gt; convenience method to localize and format the message field.</source>
          <target state="translated">結果のフォーマットされた文字列には、通常、LogRecordのメッセージフィールドのローカライズおよびフォーマットされたバージョンが含まれます。&lt;a href=&quot;#formatMessage(java.util.logging.LogRecord)&quot;&gt; &lt;code&gt;formatMessage(java.util.logging.LogRecord)&lt;/code&gt; &lt;/a&gt;コンビニエンスメソッドを使用して、メッセージフィールドをローカライズおよびフォーマットすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c1dd0222947bfa0316d9b432e87769219a094695" translate="yes" xml:space="preserve">
          <source>The resulting formatted String will normally include a localized and formatted version of the LogRecord's message field. It is recommended to use the &lt;a href=&quot;formatter#formatMessage-java.util.logging.LogRecord-&quot;&gt;&lt;code&gt;formatMessage(java.util.logging.LogRecord)&lt;/code&gt;&lt;/a&gt; convenience method to localize and format the message field.</source>
          <target state="translated">結果としてフォーマットされた文字列には、通常、ローカライズされフォーマットされたバージョンのLogRecordのメッセージフィールドが含まれます。メッセージフィールドをローカライズしてフォーマットするには、&lt;a href=&quot;formatter#formatMessage-java.util.logging.LogRecord-&quot;&gt; &lt;code&gt;formatMessage(java.util.logging.LogRecord)&lt;/code&gt; &lt;/a&gt;コンビニエンスメソッドを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a440b10bec8baf92c276afc34bf461c3ea93f484" translate="yes" xml:space="preserve">
          <source>The resulting handle will have the same return type as the target handle.</source>
          <target state="translated">結果として得られるハンドルは、ターゲットハンドルと同じ戻り値の型になります。</target>
        </trans-unit>
        <trans-unit id="f9b393261c3425d386d8251817252af6f14e85a9" translate="yes" xml:space="preserve">
          <source>The resulting instance of the required type will respond to invocation of the type's uniquely named method by calling the given target on the incoming arguments, and returning or throwing whatever the target returns or throws. The invocation will be as if by &lt;code&gt;target.invoke&lt;/code&gt;. The target's type will be checked before the instance is created, as if by a call to &lt;code&gt;asType&lt;/code&gt;, which may result in a &lt;code&gt;WrongMethodTypeException&lt;/code&gt;.</source>
          <target state="translated">必要なタイプの結果のインスタンスは、着信引数で指定されたターゲットを呼び出し、ターゲットが返すまたはスローするものをすべて返すまたはスローすることにより、タイプの一意に名前が付けられたメソッドの呼び出しに応答します。呼び出しは、 &lt;code&gt;target.invoke&lt;/code&gt; によるかのようになります。ターゲットのタイプは、インスタンスが作成される前に、 &lt;code&gt;asType&lt;/code&gt; の呼び出しのようにチェックされ、その結果、 &lt;code&gt;WrongMethodTypeException&lt;/code&gt; が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="7de4b752490153330ced19eb1636ec25661fe14d" translate="yes" xml:space="preserve">
          <source>The resulting list is &lt;code&gt;[a, c, d, b, e]&lt;/code&gt;.</source>
          <target state="translated">結果のリストは &lt;code&gt;[a, c, d, b, e]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c292f8233ecc218c4ef8e408a4e751545e0593e6" translate="yes" xml:space="preserve">
          <source>The resulting list would contain &lt;code&gt;&quot;abc&quot;&lt;/code&gt;, &lt;code&gt;&quot;def&quot;&lt;/code&gt;, the empty string, and &lt;code&gt;&quot;ghi&quot;&lt;/code&gt;.</source>
          <target state="translated">結果のリストには、 &lt;code&gt;&quot;abc&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;def&quot;&lt;/code&gt; 、空の文字列、および &lt;code&gt;&quot;ghi&quot;&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="2678a315bb7b0ca19efcf39c01d949c69b6ab3c7" translate="yes" xml:space="preserve">
          <source>The resulting lookup's capabilities for loading classes (used during &lt;a href=&quot;#findClass(java.lang.String)&quot;&gt;&lt;code&gt;findClass(java.lang.String)&lt;/code&gt;&lt;/a&gt; invocations) are determined by the lookup class' loader, which may change due to this operation.</source>
          <target state="translated">クラスをロードするための結果のルックアップの機能（&lt;a href=&quot;#findClass(java.lang.String)&quot;&gt; &lt;code&gt;findClass(java.lang.String)&lt;/code&gt; の&lt;/a&gt;呼び出し中に使用される）は、ルックアップクラスのローダーによって決定されます。ローダーはこの操作によって変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="bf2be7ac8c067fddb839990370820b0eb8d4e56d" translate="yes" xml:space="preserve">
          <source>The resulting loop handle's result type and parameter signature are determined as follows:</source>
          <target state="translated">結果として得られるループハンドルの結果タイプとパラメータシグネチャは、以下のように決定されます。</target>
        </trans-unit>
        <trans-unit id="04a2c48749521167a182d6f3ff0325e14730438e" translate="yes" xml:space="preserve">
          <source>The resulting memory segment keeps a reference to the backing array, to ensure it remains &lt;em&gt;reachable&lt;/em&gt; for the life-time of the segment. The segment will feature all &lt;a href=&quot;#access-modes&quot;&gt;access modes&lt;/a&gt; (see &lt;a href=&quot;#ALL_ACCESS&quot;&gt;&lt;code&gt;ALL_ACCESS&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb42de5b1a780911505c096c6696a965b40d19d6" translate="yes" xml:space="preserve">
          <source>The resulting memory segment keeps a reference to the backing array, to ensure it remains &lt;em&gt;reachable&lt;/em&gt; for the life-time of the segment. The segment will feature all &lt;a href=&quot;#access-modes&quot;&gt;access modes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8bc2d5a235fa88774ad990ce639f2528d31aaae" translate="yes" xml:space="preserve">
          <source>The resulting memory segment keeps a reference to the backing buffer, to ensure it remains &lt;em&gt;reachable&lt;/em&gt; for the life-time of the segment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1884f6b5e1183ba90dbd15f7cef2ddc5936af5e3" translate="yes" xml:space="preserve">
          <source>The resulting metadata object is only responsible for returning documents in the format named by &lt;code&gt;formatName&lt;/code&gt;. Within any documents that are returned, only nodes whose names are members of &lt;code&gt;nodeNames&lt;/code&gt; are required to be returned. In this way, the amount of metadata processing done by the reader may be kept to a minimum, based on what information is actually needed.</source>
          <target state="translated">結果のメタデータオブジェクトは、 &lt;code&gt;formatName&lt;/code&gt; で指定された形式でドキュメントを返すことのみを担当します。返されるドキュメント内では、 &lt;code&gt;nodeNames&lt;/code&gt; のメンバーである名前を持つノードのみを返す必要があります。このようにして、実際に必要な情報に基づいて、リーダーによって実行されるメタデータ処理の量を最小限に抑えることができます。</target>
        </trans-unit>
        <trans-unit id="9c5c220cd80df632d39ecb3d8b6a70f850252346" translate="yes" xml:space="preserve">
          <source>The resulting period will be day-based, with the amount of days equal to the number of weeks multiplied by 7. The years and months units will be zero.</source>
          <target state="translated">結果として得られる期間は日ベースとなり、日数は週数に7を掛けたものとなります。 年と月の単位はゼロとなります。</target>
        </trans-unit>
        <trans-unit id="a6b95edf4e81e9e6b6619e37b7ddbb8faf120000" translate="yes" xml:space="preserve">
          <source>The resulting period will have the specified days. The years and months units will be zero.</source>
          <target state="translated">結果として得られる期間は、指定された日数を持つことになります。年と月の単位はゼロになります。</target>
        </trans-unit>
        <trans-unit id="9ed86d9dd063303868aa5b67521032ff19d3dd44" translate="yes" xml:space="preserve">
          <source>The resulting period will have the specified months. The years and days units will be zero.</source>
          <target state="translated">結果として得られる期間は、指定された月を持つことになります。年と日の単位はゼロになります。</target>
        </trans-unit>
        <trans-unit id="29d3631062d098fb17c4652fb16c3cf33dfe26c4" translate="yes" xml:space="preserve">
          <source>The resulting period will have the specified years. The months and days units will be zero.</source>
          <target state="translated">結果として得られる期間は、指定された年を持つことになります。月と日の単位はゼロになります。</target>
        </trans-unit>
        <trans-unit id="95444b5a8c83dcd2572f1e1d42e1076adc4c44ce" translate="yes" xml:space="preserve">
          <source>The resulting proxy class must not exceed any limits imposed on classes by the virtual machine. For example, the VM may limit the number of interfaces that a class may implement to 65535; in that case, the size of the &lt;code&gt;interfaces&lt;/code&gt; array must not exceed 65535.</source>
          <target state="translated">結果のプロキシクラスは、仮想マシンによってクラスに課される制限を超えてはなりません。たとえば、VMは、クラスが実装できるインターフェイスの数を65535に制限する場合があります。その場合、 &lt;code&gt;interfaces&lt;/code&gt; 配列のサイズは65535を超えてはなりません。</target>
        </trans-unit>
        <trans-unit id="6387f721ca72aada5ca623b823df6496720b727a" translate="yes" xml:space="preserve">
          <source>The resulting reader will start reading at the given &lt;code&gt;offset&lt;/code&gt;. The total number of &lt;code&gt;char&lt;/code&gt; values that can be read from this reader will be either &lt;code&gt;length&lt;/code&gt; or &lt;code&gt;buf.length-offset&lt;/code&gt;, whichever is smaller.</source>
          <target state="translated">結果のリーダーは、指定 &lt;code&gt;offset&lt;/code&gt; れたオフセットで読み取りを開始します。このリーダーから読み取ることができる &lt;code&gt;char&lt;/code&gt; 値の総数は、 &lt;code&gt;length&lt;/code&gt; または &lt;code&gt;buf.length-offset&lt;/code&gt; のいずれか小さい方になります。</target>
        </trans-unit>
        <trans-unit id="913ac6b499d59e4b63e4cdaa10016b85296c4fef" translate="yes" xml:space="preserve">
          <source>The resulting region is then subsampled according to the factors given in &lt;a href=&quot;iioparam#setSourceSubsampling(int,int,int,int)&quot;&gt;&lt;code&gt;IIOParam.setSourceSubsampling&lt;/code&gt;&lt;/a&gt;. The first pixel, the number of pixels per row, and the number of rows all depend on the subsampling settings. Call the minimum X and Y coordinates of the resulting rectangle (&lt;code&gt;minX&lt;/code&gt;, &lt;code&gt;minY&lt;/code&gt;), its width &lt;code&gt;w&lt;/code&gt; and its height &lt;code&gt;h&lt;/code&gt;.</source>
          <target state="translated">結果の領域は、&lt;a href=&quot;iioparam#setSourceSubsampling(int,int,int,int)&quot;&gt; &lt;code&gt;IIOParam.setSourceSubsampling&lt;/code&gt; で&lt;/a&gt;指定された係数に従ってサブサンプリングされます。最初のピクセル、1行あたりのピクセル数、および行数はすべて、サブサンプリング設定によって異なります。結果の長方形の最小X座標とY座標（ &lt;code&gt;minX&lt;/code&gt; 、 &lt;code&gt;minY&lt;/code&gt; ）、その幅 &lt;code&gt;w&lt;/code&gt; 、およびその高さ &lt;code&gt;h&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="ebf284259891b966795d0320eaa89a9efa9f184a" translate="yes" xml:space="preserve">
          <source>The resulting region is then subsampled according to the factors given in &lt;a href=&quot;iioparam#setSourceSubsampling-int-int-int-int-&quot;&gt;&lt;code&gt;IIOParam.setSourceSubsampling&lt;/code&gt;&lt;/a&gt;. The first pixel, the number of pixels per row, and the number of rows all depend on the subsampling settings. Call the minimum X and Y coordinates of the resulting rectangle (&lt;code&gt;minX&lt;/code&gt;, &lt;code&gt;minY&lt;/code&gt;), its width &lt;code&gt;w&lt;/code&gt; and its height &lt;code&gt;h&lt;/code&gt;.</source>
          <target state="translated">結果の領域は、&lt;a href=&quot;iioparam#setSourceSubsampling-int-int-int-int-&quot;&gt; &lt;code&gt;IIOParam.setSourceSubsampling&lt;/code&gt; で&lt;/a&gt;指定された係数に従ってサブサンプリングされます。最初のピクセル、行ごとのピクセル数、および行数はすべて、サブサンプリング設定に依存します。結果の四角形（ &lt;code&gt;minX&lt;/code&gt; 、 &lt;code&gt;minY&lt;/code&gt; ）の最小のXおよびY座標、その幅 &lt;code&gt;w&lt;/code&gt; および高さ &lt;code&gt;h&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="a3bd1f6e9cb9121d8ce0c043ff1f95fd3d713991" translate="yes" xml:space="preserve">
          <source>The resulting schema contains components from the specified sources. The same result would be achieved if all these sources were imported, using appropriate values for schemaLocation and namespace, into a single schema document with a different targetNamespace and no components of its own, if the import elements were given in the same order as the sources. Section 4.2.3 of the XML Schema recommendation describes the options processors have in this regard. While a processor should be consistent in its treatment of JAXP schema sources and XML Schema imports, the behaviour between JAXP-compliant parsers may vary; in particular, parsers may choose to ignore all but the first &lt;code&gt;&amp;lt;import&amp;gt;&lt;/code&gt; for a given namespace, regardless of information provided in schemaLocation.</source>
          <target state="translated">結果のスキーマには、指定されたソースからのコンポーネントが含まれます。インポート要素がソースと同じ順序で指定されている場合、schemaLocationとnamespaceの適切な値を使用して、これらすべてのソースが異なるtargetNamespaceを持ち、独自のコンポーネントがない単一のスキーマドキュメントにインポートされた場合、同じ結果が得られます。 。 XMLスキーマ推奨のセクション4.2.3は、この点に関してプロセッサーが持つオプションについて説明しています。プロセッサはJAXPスキーマソースとXMLスキーマインポートの処理に一貫性がある必要がありますが、JAXP準拠のパーサー間の動作は異なる場合があります。特に、パーサーは、schemaLocationで提供される情報に関係なく、特定の名前空間の最初の &lt;code&gt;&amp;lt;import&amp;gt;&lt;/code&gt; を除くすべてを無視することを選択できます。</target>
        </trans-unit>
        <trans-unit id="d5fb5a6cf150b79c1760d1a0a2b75c334f95c52c" translate="yes" xml:space="preserve">
          <source>The resulting sequence may be empty if the &lt;code&gt;hasNext&lt;/code&gt; predicate does not hold on the seed value. Otherwise the first element will be the supplied &lt;code&gt;seed&lt;/code&gt; value, the next element (if present) will be the result of applying the &lt;code&gt;next&lt;/code&gt; function to the &lt;code&gt;seed&lt;/code&gt; value, and so on iteratively until the &lt;code&gt;hasNext&lt;/code&gt; predicate indicates that the stream should terminate.</source>
          <target state="translated">&lt;code&gt;hasNext&lt;/code&gt; 述部がシード値を保持していない場合、結果のシーケンスは空になる可能性があります。それ以外の場合、最初の要素は指定された &lt;code&gt;seed&lt;/code&gt; 値になり、次の要素（存在する場合）は &lt;code&gt;next&lt;/code&gt; 関数を &lt;code&gt;seed&lt;/code&gt; 値に適用した結果になります。 &lt;code&gt;hasNext&lt;/code&gt; 、hasNext述語がストリームの終了を示すまで繰り返します。</target>
        </trans-unit>
        <trans-unit id="59cf2006f3357a0978267c2dafbd40a8eb21f662" translate="yes" xml:space="preserve">
          <source>The resulting stream is sequential and ordered. All stream elements are non-null.</source>
          <target state="translated">結果として得られるストリームは、シーケンシャルで順序付けられています。すべてのストリーム要素は非 null です。</target>
        </trans-unit>
        <trans-unit id="fc6e671adbb8a182924f1ac35bcd56e979e41944" translate="yes" xml:space="preserve">
          <source>The resulting stream will contain an internal input buffer of at least &lt;code&gt;minBufferCap&lt;/code&gt; bytes. The stream's &lt;code&gt;read&lt;/code&gt; methods will, as needed, fill the buffer by reading bytes from the underlying channel; if the channel is in non-blocking mode when bytes are to be read then an &lt;a href=&quot;illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt; will be thrown. The resulting stream will not otherwise be buffered, and it will not support the &lt;a href=&quot;../../io/reader#mark(int)&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../io/reader#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; methods. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">結果のストリームには、少なくとも &lt;code&gt;minBufferCap&lt;/code&gt; バイトの内部入力バッファーが含まれます。ストリームの &lt;code&gt;read&lt;/code&gt; メソッドは、必要に応じて、基になるチャネルからバイトを読み取ることによってバッファーを満たします。バイトを読み取るときにチャネルが非ブロッキングモードの場合、&lt;a href=&quot;illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt;がスローされます。結果のストリームは他の方法ではバッファリングされず、&lt;a href=&quot;../../io/reader#mark(int)&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/reader#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;メソッドをサポートしません。ストリームを閉じると、チャネルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="7927acc85bf7485dc11e63b36c81bfd277412443" translate="yes" xml:space="preserve">
          <source>The resulting stream will contain an internal input buffer of at least &lt;code&gt;minBufferCap&lt;/code&gt; bytes. The stream's &lt;code&gt;read&lt;/code&gt; methods will, as needed, fill the buffer by reading bytes from the underlying channel; if the channel is in non-blocking mode when bytes are to be read then an &lt;a href=&quot;illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt; will be thrown. The resulting stream will not otherwise be buffered, and it will not support the &lt;a href=&quot;../../io/reader#mark-int-&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../io/reader#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; methods. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">結果のストリームには、少なくとも &lt;code&gt;minBufferCap&lt;/code&gt; バイトの内部入力バッファーが含まれます。ストリームの &lt;code&gt;read&lt;/code&gt; メソッドは、必要に応じて、基になるチャネルからバイトを読み取ることにより、バッファーを満たします。バイトが読み取られるときにチャネルが非ブロッキングモードの場合、&lt;a href=&quot;illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt;がスローされます。結果のストリームは、他の方法ではバッファリングされず、&lt;a href=&quot;../../io/reader#mark-int-&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/reader#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;メソッドをサポートしません。ストリームを閉じると、チャネルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="0d580035bd2b566457432a5e4d925677447d221a" translate="yes" xml:space="preserve">
          <source>The resulting stream will contain an internal output buffer of at least &lt;code&gt;minBufferCap&lt;/code&gt; bytes. The stream's &lt;code&gt;write&lt;/code&gt; methods will, as needed, flush the buffer by writing bytes to the underlying channel; if the channel is in non-blocking mode when bytes are to be written then an &lt;a href=&quot;illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt; will be thrown. The resulting stream will not otherwise be buffered. Closing the stream will in turn cause the channel to be closed.</source>
          <target state="translated">結果のストリームには、少なくとも &lt;code&gt;minBufferCap&lt;/code&gt; バイトの内部出力バッファーが含まれます。ストリームの &lt;code&gt;write&lt;/code&gt; メソッドは、必要に応じて、基になるチャネルにバイトを書き込むことにより、バッファーをフラッシュします。バイトが書き込まれるときにチャネルが非ブロッキングモードの場合、&lt;a href=&quot;illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt;がスローされます。結果のストリームは、他の方法ではバッファリングされません。ストリームを閉じると、チャネルが閉じられます。</target>
        </trans-unit>
        <trans-unit id="b5709861225c7ba3b6865800d13497f86bd85df6" translate="yes" xml:space="preserve">
          <source>The resulting string</source>
          <target state="translated">結果として得られる文字列</target>
        </trans-unit>
        <trans-unit id="7323183be989f820aa6475e0d8caa99ce479a4fb" translate="yes" xml:space="preserve">
          <source>The resulting string may vary depending on the platform's default encoding.</source>
          <target state="translated">結果として得られる文字列は、プラットフォームのデフォルトのエンコーディングに応じて変化する可能性があります。</target>
        </trans-unit>
        <trans-unit id="3ec362e72494de8b3c1c872dc58fe0a8f261890f" translate="yes" xml:space="preserve">
          <source>The resulting string may vary depending on the platform's default encoding. Instead, use the decode(String,String) method to specify the encoding.</source>
          <target state="translated">結果として得られる文字列は、プラットフォームのデフォルトのエンコーディングによって異なる可能性があります。その代わりに、 decode(String,String)メソッドを使用してエンコーディングを指定します。</target>
        </trans-unit>
        <trans-unit id="b48d31f1fb8209f2d9205d68efebbcc7c9cbd82b" translate="yes" xml:space="preserve">
          <source>The resulting string may vary depending on the platform's default encoding. Instead, use the encode(String,String) method to specify the encoding.</source>
          <target state="translated">結果として得られる文字列は、プラットフォームのデフォルトのエンコーディングに依存して変化する可能性があります。その代わり、エンコーディングを指定するには encode(String,String)メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="0242c011bc55e1252b1407ded7fa2f64f005fdf7" translate="yes" xml:space="preserve">
          <source>The resulting value for these property will be stored in the LogManager properties, but &lt;code&gt;updateConfiguration&lt;/code&gt; will not parse or process their values.</source>
          <target state="translated">これらのプロパティの結果の値はLogManagerプロパティに格納されますが、 &lt;code&gt;updateConfiguration&lt;/code&gt; はそれらの値を解析または処理しません。</target>
        </trans-unit>
        <trans-unit id="1c5ccef77ff39639671b29d2b92776dcab2dc448" translate="yes" xml:space="preserve">
          <source>The resulting var handle will feature the same access modes (see &lt;a href=&quot;../../../../java.base/java/lang/invoke/varhandle.accessmode&quot;&gt;&lt;code&gt;VarHandle.AccessMode&lt;/code&gt;&lt;/a&gt; and atomic access guarantees as those featured by the target var handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07dbe5f1c9e0316638391b2baf771ad39103ad09" translate="yes" xml:space="preserve">
          <source>The resulting var handle will feature the same access modes (see &lt;a href=&quot;../../../../java.base/java/lang/invoke/varhandle.accessmode&quot;&gt;&lt;code&gt;VarHandle.AccessMode&lt;/code&gt;&lt;/a&gt;) and atomic access guarantees as those featured by the target var handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74bf552fafa0986a788039357cfc15a0f6c622fd" translate="yes" xml:space="preserve">
          <source>The results of this constructor can be somewhat unpredictable and its use is generally not recommended; see the notes under the &lt;a href=&quot;#%3Cinit%3E(double)&quot;&gt;&lt;code&gt;BigDecimal(double)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">このコンストラクターの結果は多少予測できない可能性があり、通常、その使用は推奨されません。&lt;a href=&quot;#%3Cinit%3E(double)&quot;&gt; &lt;code&gt;BigDecimal(double)&lt;/code&gt; &lt;/a&gt;コンストラクターの下の注記を参照してください。</target>
        </trans-unit>
        <trans-unit id="65db06e467299c29537ab9336bf47bbbf5cdbd84" translate="yes" xml:space="preserve">
          <source>The results of this constructor can be somewhat unpredictable and its use is generally not recommended; see the notes under the &lt;a href=&quot;bigdecimal#BigDecimal-double-&quot;&gt;&lt;code&gt;BigDecimal(double)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">このコンストラクターの結果は多少予測不可能になる可能性があり、その使用は一般に推奨されません。&lt;a href=&quot;bigdecimal#BigDecimal-double-&quot;&gt; &lt;code&gt;BigDecimal(double)&lt;/code&gt; &lt;/a&gt;コンストラクターの下のメモを参照してください。</target>
        </trans-unit>
        <trans-unit id="cbb3bb7280c618deda0717f345ca0d0a3e5a617a" translate="yes" xml:space="preserve">
          <source>The results of this constructor can be somewhat unpredictable. One might assume that writing &lt;code&gt;new BigDecimal(0.1)&lt;/code&gt; in Java creates a &lt;code&gt;BigDecimal&lt;/code&gt; which is exactly equal to 0.1 (an unscaled value of 1, with a scale of 1), but it is actually equal to 0.1000000000000000055511151231257827021181583404541015625. This is because 0.1 cannot be represented exactly as a &lt;code&gt;double&lt;/code&gt; (or, for that matter, as a binary fraction of any finite length). Thus, the value that is being passed</source>
          <target state="translated">このコンストラクタの結果は、いくらか予測できない場合があります。Javaで &lt;code&gt;new BigDecimal(0.1)&lt;/code&gt; を書き込むと、正確に0.1（スケールなしの1、スケール1）に等しい &lt;code&gt;BigDecimal&lt;/code&gt; が作成されますが、実際には0.1000000000000000055511151231257827021181583404541015625に等しいと想定する人もいます。これは、0.1を &lt;code&gt;double&lt;/code&gt; として正確に表すことができないためです（つまり、有限の長さの2進数の小数として）。したがって、渡される値は</target>
        </trans-unit>
        <trans-unit id="a60e1eda493280339b2d07bf3ec089112f276d07" translate="yes" xml:space="preserve">
          <source>The results of this constructor can be somewhat unpredictable. One might assume that writing &lt;code&gt;new BigDecimal(0.1)&lt;/code&gt; in Java creates a &lt;code&gt;BigDecimal&lt;/code&gt; which is exactly equal to 0.1 (an unscaled value of 1, with a scale of 1), but it is actually equal to 0.1000000000000000055511151231257827021181583404541015625. This is because 0.1 cannot be represented exactly as a &lt;code&gt;double&lt;/code&gt; (or, for that matter, as a binary fraction of any finite length). Thus, the value that is being passed &lt;em&gt;in&lt;/em&gt; to the constructor is not exactly equal to 0.1, appearances notwithstanding.</source>
          <target state="translated">このコンストラクターの結果は、多少予測できない場合があります。Javaで &lt;code&gt;new BigDecimal(0.1)&lt;/code&gt; を書き込むと、0.1（スケールなしの値1、スケール1）に正確に等しい &lt;code&gt;BigDecimal&lt;/code&gt; が作成されると思われるかもしれませんが、実際には0.1000000000000000055511151231257827021181583404541015625に等しくなります。これは、0.1を正確に &lt;code&gt;double&lt;/code&gt; として（または、さらに言えば、任意の有限長の2進分数として）表すことができないためです。したがって、コンストラクターに渡さ&lt;em&gt;れる&lt;/em&gt;値は、外観にもかかわらず、0.1と正確に等しくはありません。</target>
        </trans-unit>
        <trans-unit id="93760e92a1fc812ab19b0ed28984ff85fa220322" translate="yes" xml:space="preserve">
          <source>The results only need to be adjusted if they are to be stored back into a destination buffer that holds data that is not premultiplied, using the following equations:</source>
          <target state="translated">結果を調整する必要があるのは、次の式を使用して、予積されていないデータを保持しているデスティネーションバッファに格納し直す場合だけです。</target>
        </trans-unit>
        <trans-unit id="1e7164f77665270f67e8f397eca3785e4e6b5066" translate="yes" xml:space="preserve">
          <source>The results should be the same as obtaining all the &lt;code&gt;PrintServices&lt;/code&gt; and querying each one individually on its support for the specified attributes and flavors, but the process can be more efficient by taking advantage of the capabilities of lookup services for the print services.</source>
          <target state="translated">結果は、すべての &lt;code&gt;PrintServices&lt;/code&gt; を取得し、指定された属性とフレーバーのサポートについてそれぞれを個別にクエリするのと同じであるはずですが、印刷サービスのルックアップサービスの機能を利用することで、プロセスをより効率的にすることができます。</target>
        </trans-unit>
        <trans-unit id="72b26f2b5e9e76c38d5206ceaa707fac001defe0" translate="yes" xml:space="preserve">
          <source>The results should be the same as obtaining all the PrintServices and querying each one individually on its support for the specified attributes and flavors, but the process can be more efficient by taking advantage of the capabilities of lookup services for the print services.</source>
          <target state="translated">結果は、すべてのPrintServicesを取得し、指定された属性やフレーバーに対するサポートについて個別に問い合わせを行うのと同じであるべきですが、プリントサービスのルックアップサービスの機能を活用することで、プロセスをより効率的にすることができます。</target>
        </trans-unit>
        <trans-unit id="e5af3a05b778776e5694ec63dd4fb3b5fc8fb0b8" translate="yes" xml:space="preserve">
          <source>The resumption of other threads during the invocation can be prevented by specifying the &lt;a href=&quot;#INVOKE_SINGLE_THREADED&quot;&gt;&lt;code&gt;INVOKE_SINGLE_THREADED&lt;/code&gt;&lt;/a&gt; bit flag in the &lt;code&gt;options&lt;/code&gt; argument; however, there is no protection against or recovery from the deadlocks described above, so this option should be used with great caution. Only the specified thread will be resumed (as described for all threads above). Upon completion of a single threaded invoke, the invoking thread will be suspended once again. Note that any threads started during the single threaded invocation will not be suspended when the invocation completes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13feddb193cd0cfdf609b74927a9c48142c61e19" translate="yes" xml:space="preserve">
          <source>The resumption of other threads during the invocation can be prevented by specifying the &lt;a href=&quot;classtype#INVOKE_SINGLE_THREADED&quot;&gt;&lt;code&gt;ClassType.INVOKE_SINGLE_THREADED&lt;/code&gt;&lt;/a&gt; bit flag in the &lt;code&gt;options&lt;/code&gt; argument; however, there is no protection against or recovery from the deadlocks described above, so this option should be used with great caution. Only the specified thread will be resumed (as described for all threads above). Upon completion of a single threaded invoke, the invoking thread will be suspended once again. Note that any threads started during the single threaded invocation will not be suspended when the invocation completes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3cf3e1fd73a22414ddca5e3fb189a104cf44e85" translate="yes" xml:space="preserve">
          <source>The retransformation may change method bodies, the constant pool and attributes (unless explicitly prohibited). The retransformation must not add, remove or rename fields or methods, change the signatures of methods, or change inheritance. The retransformation must not change the &lt;code&gt;NestHost&lt;/code&gt; or &lt;code&gt;NestMembers&lt;/code&gt; attributes. These restrictions may be lifted in future versions. The class file bytes are not checked, verified and installed until after the transformations have been applied, if the resultant bytes are in error this method will throw an exception.</source>
          <target state="translated">再変換により、メソッド本体、定数プール、および属性が変更される場合があります（明示的に禁止されている場合を除く）。再変換では、フィールドまたはメソッドを追加、削除、名前変更したり、メソッドのシグネチャを変更したり、継承を変更したりしてはなりません。再変換によって、 &lt;code&gt;NestHost&lt;/code&gt; または &lt;code&gt;NestMembers&lt;/code&gt; 属性を変更してはなりません。これらの制限は、将来のバージョンで解除される可能性があります。クラスファイルのバイトは、変換が適用されるまでチェック、検証、およびインストールされません。結果のバイトにエラーがある場合、このメソッドは例外をスローします。</target>
        </trans-unit>
        <trans-unit id="2f2a2d456b1fe7f946cf6afcde99facfbb1b054d" translate="yes" xml:space="preserve">
          <source>The retransformation may change method bodies, the constant pool and attributes. The retransformation must not add, remove or rename fields or methods, change the signatures of methods, or change inheritance. These restrictions maybe be lifted in future versions. The class file bytes are not checked, verified and installed until after the transformations have been applied, if the resultant bytes are in error this method will throw an exception.</source>
          <target state="translated">再変換は、メソッド本体、定数プール、属性を変更することができます。再変換は、フィールドやメソッドの追加、削除、名前の変更、メソッドのシグネチャの変更、継承の変更を行ってはいけません。これらの制限は将来のバージョンで解除されるかもしれません。クラスファイルのバイトは、変換が適用されるまでチェック、検証、インストールされません。</target>
        </trans-unit>
        <trans-unit id="62fd7b2e815ada1d9ad838170833576f45e44251" translate="yes" xml:space="preserve">
          <source>The return of a &lt;code&gt;false&lt;/code&gt; value for a given access mode indicates that an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; is thrown on invocation of the corresponding access mode method.</source>
          <target state="translated">特定のアクセスモードに対して &lt;code&gt;false&lt;/code&gt; 値が返される場合は、対応するアクセスモードメソッドの呼び出し時に &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされることを示します。</target>
        </trans-unit>
        <trans-unit id="ca960eb615ad53bc0b3135b373d2036434995b22" translate="yes" xml:space="preserve">
          <source>The return type Rt is void, or the return type Ra is not void and is adaptable to Rt</source>
          <target state="translated">戻り値の型Rtがvoidであるか、または戻り値の型Raがvoidではなく、Rtに適応しています。</target>
        </trans-unit>
        <trans-unit id="0a90f1198e5deb5b2534122b1f369aa219e8f116" translate="yes" xml:space="preserve">
          <source>The return type in &lt;code&gt;concatType&lt;/code&gt; is assignable from &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;concatType&lt;/code&gt; の戻り値の型は&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;から割り当て可能です</target>
        </trans-unit>
        <trans-unit id="9fa2e82a8911ac326301fece552df2e83f13bdc2" translate="yes" xml:space="preserve">
          <source>The return type in &lt;code&gt;concatType&lt;/code&gt; is assignable from &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, and matches the return type of the returned &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;concatType&lt;/code&gt; の戻り値の型は、&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;から割り当て可能であり、返された&lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;の戻り値の型と一致します。</target>
        </trans-unit>
        <trans-unit id="08c7dcac11b655355c8f407e5172d1bcf0c4208a" translate="yes" xml:space="preserve">
          <source>The return type is specified by a &lt;a href=&quot;../namespace/qname&quot;&gt;&lt;code&gt;QName&lt;/code&gt;&lt;/a&gt; parameter in method call used to evaluate the expression, which is either a call to &lt;code&gt;XPathExpression.evalute(...)&lt;/code&gt; or &lt;code&gt;XPath.evaluate(...)&lt;/code&gt; methods.</source>
          <target state="translated">戻り値の型は、式の評価に使用されるメソッド呼び出しの&lt;a href=&quot;../namespace/qname&quot;&gt; &lt;code&gt;QName&lt;/code&gt; &lt;/a&gt;パラメーターによって指定されます。これは、 &lt;code&gt;XPathExpression.evalute(...)&lt;/code&gt; または &lt;code&gt;XPath.evaluate(...)&lt;/code&gt; メソッドの呼び出しです。</target>
        </trans-unit>
        <trans-unit id="151afbc17f6742b5bf10a29157b5cc4cbd7ee6c5" translate="yes" xml:space="preserve">
          <source>The return type may be a primitive type or a subclass of &lt;a href=&quot;recordedobject&quot;&gt;&lt;code&gt;RecordedObject&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c09d015f75e8bee39bac035a68343e43b9f9d8" translate="yes" xml:space="preserve">
          <source>The return type of the filter replaces the return type of the target in the resulting adapted method handle. The argument type of the filter (if any) must be identical to the return type of the target.</source>
          <target state="translated">フィルタの戻り値の型は,結果として適応されたメソッドハンドル内のターゲットの戻り値の型に置き換わります。フィルタの引数の型 (もしあれば)は,ターゲットの戻り値の型と同じでなければなりません.</target>
        </trans-unit>
        <trans-unit id="c6a026e7ef017e49a86ae81d83b570e4f3b988ce" translate="yes" xml:space="preserve">
          <source>The return value from &lt;code&gt;eval(Reader, ScriptContext)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;eval(Reader, ScriptContext)&lt;/code&gt; からの戻り値</target>
        </trans-unit>
        <trans-unit id="d250b67419c015be49448c5b2b4064b04039b13f" translate="yes" xml:space="preserve">
          <source>The return value from &lt;code&gt;eval(String, ScriptContext)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;eval(String, ScriptContext)&lt;/code&gt; からの戻り値</target>
        </trans-unit>
        <trans-unit id="18c586324069b76d67cca48a59dcffb8f32f65de" translate="yes" xml:space="preserve">
          <source>The return value from the script execution</source>
          <target state="translated">スクリプト実行時の戻り値</target>
        </trans-unit>
        <trans-unit id="3e87c8c10ff310371a9f3d96d03e6c0bad31b37f" translate="yes" xml:space="preserve">
          <source>The return value here is a hint, it is ultimately up to the look and feel to honor the return value in some meaningful way.</source>
          <target state="translated">ここでの戻り値はヒントであり、最終的には何らかの意味のある方法で戻り値を尊重するかどうかは見た目にかかっています。</target>
        </trans-unit>
        <trans-unit id="339d740994f90a652ddcc5a1527a27502fd12e3d" translate="yes" xml:space="preserve">
          <source>The return value here is a hint, it is ultimately up to the look and feel to honor the return value in some meaningful way. For example, a look and feel may wish to render each &lt;code&gt;AbstractColorChooserPanel&lt;/code&gt; in a &lt;code&gt;JTabbedPane&lt;/code&gt;, and further use this return value to underline a character in the &lt;code&gt;getDisplayName&lt;/code&gt;.</source>
          <target state="translated">ここでの戻り値はヒントです。意味のある方法で戻り値を尊重するかどうかは、最終的にはルックアンドフィール次第です。たとえば、ルックアンドフィールでは、各 &lt;code&gt;AbstractColorChooserPanel&lt;/code&gt; を &lt;code&gt;JTabbedPane&lt;/code&gt; でレンダリングし、さらにこの戻り値を使用して &lt;code&gt;getDisplayName&lt;/code&gt; の文字に下線を付けることができます。</target>
        </trans-unit>
        <trans-unit id="d7e61cce8a603e1ed7dd41104b64452e72191f66" translate="yes" xml:space="preserve">
          <source>The return value indicates whether the deadline has elapsed, which can be used as follows:</source>
          <target state="translated">戻り値は、期限が経過したかどうかを示すもので、以下のように使用することができます。</target>
        </trans-unit>
        <trans-unit id="7b117098b5c546c14491ff8cf89569aadc8a2ea4" translate="yes" xml:space="preserve">
          <source>The return value is a constant for the lifetime of the implementing instance</source>
          <target state="translated">戻り値は、実装インスタンスの有効期間中の定数です。</target>
        </trans-unit>
        <trans-unit id="ef240b9287f693729ee8736cf3b50be17225bd35" translate="yes" xml:space="preserve">
          <source>The return value is an approximation of the column number in the document entity or external parsed entity where the markup that triggered the event appears.</source>
          <target state="translated">戻り値は、イベントのトリガーとなったマークアップが表示されるドキュメントエンティティまたは外部解析されたエンティティのカラム番号の近似値です。</target>
        </trans-unit>
        <trans-unit id="1b239c60495bf8042c7d3c6cd2a1059554bfa5e2" translate="yes" xml:space="preserve">
          <source>The return value is an approximation of the column number in the document entity or external parsed entity where the markup triggering the event appears.</source>
          <target state="translated">戻り値は、イベントのトリガーとなるマークアップが表示されているドキュメントエンティティまたは外部解析されたエンティティのカラム番号の近似値です。</target>
        </trans-unit>
        <trans-unit id="8ffa6dc5a63793e0cd89ca59a2500e0682da449a" translate="yes" xml:space="preserve">
          <source>The return value is an approximation of the line number in the document entity or external parsed entity where the markup that triggered the event appears.</source>
          <target state="translated">戻り値は、イベントのトリガーとなったマークアップが表示されるドキュメントエンティティまたは外部解析されたエンティティの行番号の近似値です。</target>
        </trans-unit>
        <trans-unit id="df14b7af1f8f1168f052f357a4d4d570216b0e96" translate="yes" xml:space="preserve">
          <source>The return value is an approximation of the line number in the document entity or external parsed entity where the markup triggering the event appears.</source>
          <target state="translated">戻り値は、イベントのトリガーとなるマークアップが表示されているドキュメントエンティティまたは外部解析されたエンティティの行番号の近似値です。</target>
        </trans-unit>
        <trans-unit id="5d010f320e15d99aa04c62f2ae7a00fe4348d9c8" translate="yes" xml:space="preserve">
          <source>The return value is never null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873937197ae1055f97215cc23c27aad938455d09" translate="yes" xml:space="preserve">
          <source>The return value is non-negative in the range of &lt;code&gt;0&lt;/code&gt; (inclusive) up to &lt;code&gt;unitSize&lt;/code&gt; (exclusive), with zero indicating that the address of the byte at the index is aligned for the unit size, and a positive value that the address is misaligned for the unit size. If the address of the byte at the index is misaligned, the return value represents how much the index should be adjusted to locate a byte at an aligned address. Specifically, the index should either be decremented by the return value if the latter is not greater than &lt;code&gt;index&lt;/code&gt;, or be incremented by the unit size minus the return value. Therefore given</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e62b909f604f540851de4e9220c29855a3c379" translate="yes" xml:space="preserve">
          <source>The return value is not intended to take into account the current size and position of &lt;code&gt;component2&lt;/code&gt; or &lt;code&gt;component1&lt;/code&gt;. The return value may take into consideration various properties of the components. For example, the space may vary based on font size, or the preferred size of the component.</source>
          <target state="translated">戻り値は、 &lt;code&gt;component2&lt;/code&gt; または &lt;code&gt;component1&lt;/code&gt; の現在のサイズと位置を考慮に入れることを意図したものではありません。戻り値は、コンポーネントのさまざまなプロパティを考慮に入れる場合があります。たとえば、スペースはフォントサイズやコンポーネントの推奨サイズによって異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="6862bdbf23c8a75ce946b35c34fe4f5784a92cab" translate="yes" xml:space="preserve">
          <source>The return value is reassigned to the variable &lt;code&gt;y&lt;/code&gt;, because a new array will be allocated and returned if the collection &lt;code&gt;x&lt;/code&gt; has too many elements to fit into the existing array &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">コレクション &lt;code&gt;x&lt;/code&gt; の要素が多すぎて既存の配列 &lt;code&gt;y&lt;/code&gt; に収まらない場合は、新しい配列が割り当てられて返されるため、戻り値は変数 &lt;code&gt;y&lt;/code&gt; に再割り当てされます。</target>
        </trans-unit>
        <trans-unit id="cf5abc13dd7f11ea0e437763bb82152d9c9c44c6" translate="yes" xml:space="preserve">
          <source>The return value is the public identifier of the document entity or of the external parsed entity in which the markup that triggered the event appears.</source>
          <target state="translated">戻り値は、イベントのトリガーとなったマークアップが表示されているドキュメントエンティティまたは外部解析されたエンティティの公開識別子です。</target>
        </trans-unit>
        <trans-unit id="4eab4f2d235e9eb1c2ee1b4d56bb6a0656d5046f" translate="yes" xml:space="preserve">
          <source>The return value is the public identifier of the document entity or of the external parsed entity in which the markup triggering the event appears.</source>
          <target state="translated">戻り値は、イベントのトリガーとなるマークアップが表示されているドキュメントエンティティまたは外部解析されたエンティティの公開識別子です。</target>
        </trans-unit>
        <trans-unit id="79298db5b9ecefcf08a93ac7001f8247745f88be" translate="yes" xml:space="preserve">
          <source>The return value is the same as the return value for getType(int).</source>
          <target state="translated">戻り値はgetType(int)の戻り値と同じです。</target>
        </trans-unit>
        <trans-unit id="ad228ac22a92c30a5a17bbe1cc5511d3e6d6efe6" translate="yes" xml:space="preserve">
          <source>The return value is the same as the return value for getValue(int).</source>
          <target state="translated">戻り値はgetValue(int)の戻り値と同じです。</target>
        </trans-unit>
        <trans-unit id="305fb729cefceff62bd86eeab21b84fdfc657b36" translate="yes" xml:space="preserve">
          <source>The return value is the system identifier of the document entity or of the external parsed entity in which the markup that triggered the event appears.</source>
          <target state="translated">戻り値は、イベントのトリガーとなったマークアップが表示されているドキュメントエンティティまたは外部解析されたエンティティのシステム識別子です。</target>
        </trans-unit>
        <trans-unit id="157a1ea5a78e25b7b7edb134a522fe0ad73f0731" translate="yes" xml:space="preserve">
          <source>The return value is the system identifier of the document entity or of the external parsed entity in which the markup triggering the event appears.</source>
          <target state="translated">戻り値は、イベントのトリガーとなるマークアップが表示されているドキュメントエンティティまたは外部解析されたエンティティのシステム識別子です。</target>
        </trans-unit>
        <trans-unit id="d5e42cb5bf57e4282c3a4431545a3164ae31c157" translate="yes" xml:space="preserve">
          <source>The return value of &lt;code&gt;dispatchEvent&lt;/code&gt; indicates whether any of the listeners which handled the event called &lt;code&gt;preventDefault&lt;/code&gt;. If &lt;code&gt;preventDefault&lt;/code&gt; was called the value is false, else the value is true.</source>
          <target state="translated">&lt;code&gt;dispatchEvent&lt;/code&gt; の戻り値は、 &lt;code&gt;preventDefault&lt;/code&gt; と呼ばれるイベントを処理したリスナーがあるかどうかを示します。場合 &lt;code&gt;preventDefault&lt;/code&gt; 値がfalseであると呼ばれていた、それ以外の値はtrueです。</target>
        </trans-unit>
        <trans-unit id="6589d2c87a3593f5b725f019c0648f0fe516d29b" translate="yes" xml:space="preserve">
          <source>The return value of the method specifies whether the event is to be written to the Flight Recorder system or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4219f41ab6bb669a3af2e1f70f85e439bc1d24f1" translate="yes" xml:space="preserve">
          <source>The return value of this method is the string form of the value of a Multipurpose Internet Mail Extension (MIME) content type as defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;&lt;i&gt;RFC 2045: Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies&lt;/i&gt;&lt;/a&gt;. The string is guaranteed to be parsable according to the grammar in the RFC.</source>
          <target state="translated">このメソッドの戻り値は、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;&lt;i&gt;RFC 2045：多目的インターネットメール拡張（MIME）パート1：インターネットメッセージ本文の形式で&lt;/i&gt;&lt;/a&gt;定義され&lt;i&gt;て&lt;/i&gt;いる多目的インターネットメール拡張（MIME）コンテンツタイプの値の文字列形式です。文字列は、RFCの文法に従って解析可能であることが保証されています。</target>
        </trans-unit>
        <trans-unit id="365783bcde1708d89a0bd8c6da5a4edb395db805" translate="yes" xml:space="preserve">
          <source>The return value of this method is the string form of the value of a Multipurpose Internet Mail Extension (MIME) content type as defined by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2045.txt&quot;&gt;&lt;i&gt;RFC 2045: Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies&lt;/i&gt;&lt;/a&gt;. The string is guaranteed to be parsable according to the grammar in the RFC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d6884c96ab13575074a3fd88c171169562433f" translate="yes" xml:space="preserve">
          <source>The return value will always meet this requirement. A request to read a number of bytes representing a non-integral number of sample frames cannot be fulfilled and may result in an IllegalArgumentException.</source>
          <target state="translated">戻り値は常にこの要件を満たします。非積分数のサンプルフレームを表すバイト数を読み取る要求を満たすことはできず、IllegalArgumentExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="bab3d5729e7a670151bb1fa0f6d52b4a1a2b1601" translate="yes" xml:space="preserve">
          <source>The return value will always meet this requirement. A request to write a number of bytes representing a non-integral number of sample frames cannot be fulfilled and may result in an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">戻り値は常にこの要件を満たします。非整数のサンプルフレームを表すバイト数を書き込むリクエストは実行できず、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="fb820cab50d0998d1ebde65dd99e143bc7773114" translate="yes" xml:space="preserve">
          <source>The return value will be a PageFormat equivalent to the selections in the PrintRequestAttributeSet. If the user cancels the dialog, the attributes will not reflect any changes made by the user, and the return value will be null.</source>
          <target state="translated">戻り値は、PrintRequestAttributeSet内の選択内容と同等のPageFormatとなります。ユーザーがダイアログをキャンセルした場合、属性にはユーザーによる変更は反映されず、戻り値はNULLとなります。</target>
        </trans-unit>
        <trans-unit id="7a1cb10291ece8ab0cb0d59c17a95c5985d00fc8" translate="yes" xml:space="preserve">
          <source>The return value will be one of &lt;a href=&quot;#INITIATE_ONLY&quot;&gt;&lt;code&gt;INITIATE_ONLY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ACCEPT_ONLY&quot;&gt;&lt;code&gt;ACCEPT_ONLY&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#INITIATE_AND_ACCEPT&quot;&gt;&lt;code&gt;INITIATE_AND_ACCEPT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">戻り値は、&lt;a href=&quot;#INITIATE_ONLY&quot;&gt; &lt;code&gt;INITIATE_ONLY&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ACCEPT_ONLY&quot;&gt; &lt;code&gt;ACCEPT_ONLY&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#INITIATE_AND_ACCEPT&quot;&gt; &lt;code&gt;INITIATE_AND_ACCEPT&lt;/code&gt; の&lt;/a&gt;いずれかになります。</target>
        </trans-unit>
        <trans-unit id="f6bfc96df054b19c8bae5f8772d6621a71f8e532" translate="yes" xml:space="preserve">
          <source>The return values of navigation methods may be ambiguous in implementations that permit &lt;code&gt;null&lt;/code&gt; elements. However, even in this case the result can be disambiguated by checking &lt;code&gt;contains(null)&lt;/code&gt;. To avoid such issues, implementations of this interface are encouraged to &lt;em&gt;not&lt;/em&gt; permit insertion of &lt;code&gt;null&lt;/code&gt; elements. (Note that sorted sets of &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; elements intrinsically do not permit &lt;code&gt;null&lt;/code&gt;.)</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 要素を許可する実装では、ナビゲーションメソッドの戻り値があいまいになる場合があります。ただし、この場合でも、 &lt;code&gt;contains(null)&lt;/code&gt; をチェックすることで結果を明確にすることができます。このような問題を回避するには、このインターフェイスの実装で &lt;code&gt;null&lt;/code&gt; 要素の挿入を許可し&lt;em&gt;ない&lt;/em&gt;ことをお勧めします。（ソート&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt;要素のセットは、本質的に &lt;code&gt;null&lt;/code&gt; を許可しないことに注意してください。）</target>
        </trans-unit>
        <trans-unit id="c185003fa3929e25d997e006634131e9b1d47337" translate="yes" xml:space="preserve">
          <source>The returned &lt;a href=&quot;../../text/format&quot;&gt;&lt;code&gt;Format&lt;/code&gt;&lt;/a&gt; instance will format any &lt;a href=&quot;../temporal/temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt; and parses to a resolved &lt;a href=&quot;../temporal/temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返された&lt;a href=&quot;../../text/format&quot;&gt; &lt;code&gt;Format&lt;/code&gt; &lt;/a&gt;インスタンスは、&lt;a href=&quot;../temporal/temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; &lt;/a&gt;をフォーマットし、解決された&lt;a href=&quot;../temporal/temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; に&lt;/a&gt;解析します。</target>
        </trans-unit>
        <trans-unit id="75a801763a5d854e8d95b623a5d3a94dcbfe58f1" translate="yes" xml:space="preserve">
          <source>The returned &lt;a href=&quot;../../text/format&quot;&gt;&lt;code&gt;Format&lt;/code&gt;&lt;/a&gt; instance will format any &lt;a href=&quot;../temporal/temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt; and parses to the type specified. The type must be one that is supported by &lt;a href=&quot;#parse(java.lang.CharSequence)&quot;&gt;&lt;code&gt;parse(java.lang.CharSequence)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返された&lt;a href=&quot;../../text/format&quot;&gt; &lt;code&gt;Format&lt;/code&gt; &lt;/a&gt;インスタンスは、&lt;a href=&quot;../temporal/temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; &lt;/a&gt;をフォーマットし、指定されたタイプに解析します。タイプは、&lt;a href=&quot;#parse(java.lang.CharSequence)&quot;&gt; &lt;code&gt;parse(java.lang.CharSequence)&lt;/code&gt; で&lt;/a&gt;サポートされているタイプである必要があります。</target>
        </trans-unit>
        <trans-unit id="b4d4661665beda529a4501a1035be4de025066b7" translate="yes" xml:space="preserve">
          <source>The returned &lt;a href=&quot;../../text/format&quot;&gt;&lt;code&gt;Format&lt;/code&gt;&lt;/a&gt; instance will format any &lt;a href=&quot;../temporal/temporalaccessor&quot;&gt;&lt;code&gt;TemporalAccessor&lt;/code&gt;&lt;/a&gt; and parses to the type specified. The type must be one that is supported by &lt;a href=&quot;datetimeformatter#parse-java.lang.CharSequence-&quot;&gt;&lt;code&gt;parse(java.lang.CharSequence)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返された&lt;a href=&quot;../../text/format&quot;&gt; &lt;code&gt;Format&lt;/code&gt; &lt;/a&gt;インスタンスは、&lt;a href=&quot;../temporal/temporalaccessor&quot;&gt; &lt;code&gt;TemporalAccessor&lt;/code&gt; &lt;/a&gt;をフォーマットし、指定されたタイプに解析します。タイプは、&lt;a href=&quot;datetimeformatter#parse-java.lang.CharSequence-&quot;&gt; &lt;code&gt;parse(java.lang.CharSequence)&lt;/code&gt; で&lt;/a&gt;サポートされているタイプである必要があります。</target>
        </trans-unit>
        <trans-unit id="6130888b3d4f3e79271a0f0fd2b1121269c73460" translate="yes" xml:space="preserve">
          <source>The returned &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; instance supports the same usages as do the &lt;a href=&quot;../../../lang/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; monitor methods (&lt;a href=&quot;../../../lang/object#wait()&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../lang/object#notify()&quot;&gt;&lt;code&gt;notify&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../../lang/object#notifyAll()&quot;&gt;&lt;code&gt;notifyAll&lt;/code&gt;&lt;/a&gt;) when used with the built-in monitor lock.</source>
          <target state="translated">返される&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;インスタンスは、組み込みのモニターロックとともに使用した場合、&lt;a href=&quot;../../../lang/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;モニターメソッド（&lt;a href=&quot;../../../lang/object#wait()&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../lang/object#notify()&quot;&gt; &lt;code&gt;notify&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../lang/object#notifyAll()&quot;&gt; &lt;code&gt;notifyAll&lt;/code&gt; &lt;/a&gt;）と同じ使用法をサポートします。</target>
        </trans-unit>
        <trans-unit id="5e5dd44d28dfbc6bc47cbc61187f37930a55da27" translate="yes" xml:space="preserve">
          <source>The returned &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; instance supports the same usages as do the &lt;a href=&quot;../../../lang/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; monitor methods (&lt;a href=&quot;../../../lang/object#wait--&quot;&gt;&lt;code&gt;wait&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../lang/object#notify--&quot;&gt;&lt;code&gt;notify&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../../lang/object#notifyAll--&quot;&gt;&lt;code&gt;notifyAll&lt;/code&gt;&lt;/a&gt;) when used with the built-in monitor lock.</source>
          <target state="translated">返された&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;インスタンスは、組み込みのモニターロックで使用される場合、&lt;a href=&quot;../../../lang/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;モニターメソッド（&lt;a href=&quot;../../../lang/object#wait--&quot;&gt; &lt;code&gt;wait&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../lang/object#notify--&quot;&gt; &lt;code&gt;notify&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../../../lang/object#notifyAll--&quot;&gt; &lt;code&gt;notifyAll&lt;/code&gt; &lt;/a&gt;）と同じ使用法をサポートします。</target>
        </trans-unit>
        <trans-unit id="903fab1dd6031a929646339ff8331ce972297982" translate="yes" xml:space="preserve">
          <source>The returned &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; object assumes that if documents refer to the same URL in the schema location hints, they will always resolve to the same schema document. This asusmption allows implementations to reuse parsed results of schema documents so that multiple validations against the same schema will run faster.</source>
          <target state="translated">返される&lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;オブジェクトは、ドキュメントがスキーマロケーションヒントで同じURLを参照している場合、それらは常に同じスキーマドキュメントに解決されると想定しています。この仮定により、実装はスキーマドキュメントの解析結果を再利用できるため、同じスキーマに対する複数の検証がより高速に実行されます。</target>
        </trans-unit>
        <trans-unit id="1bdefa0087b8327c86ac80a033c0a312632ffe64" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;ActionMap&lt;/code&gt; contains &lt;code&gt;Actions&lt;/code&gt; that embody the ability to render an auditory cue. These auditory cues map onto user and system activities that may be useful for an end user to know about (such as a dialog box appearing).</source>
          <target state="translated">返される &lt;code&gt;ActionMap&lt;/code&gt; には、聴覚キューをレンダリングする機能を具体化する &lt;code&gt;Actions&lt;/code&gt; が含まれています。これらの聴覚的手がかりは、エンドユーザーが知るのに役立つ可能性のあるユーザーおよびシステムのアクティビティ（ダイアログボックスの表示など）にマッピングされます。</target>
        </trans-unit>
        <trans-unit id="6e7d12400bfb4401dc47af91d14c791db925e333" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If it is not required that results are inserted into the &lt;code&gt;Map&lt;/code&gt; in encounter order, using &lt;a href=&quot;#toConcurrentMap(java.util.function.Function,java.util.function.Function)&quot;&gt;&lt;code&gt;toConcurrentMap(Function, Function)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 機能は、あるマップから別のマップにキーをマージすることによって動作しますが、これはコストのかかる操作になる可能性があります。結果を遭遇順に &lt;code&gt;Map&lt;/code&gt; に挿入する必要がない場合は、&lt;a href=&quot;#toConcurrentMap(java.util.function.Function,java.util.function.Function)&quot;&gt; &lt;code&gt;toConcurrentMap(Function, Function)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="1bc1730d912a2f1b769dce259c025673a7214e32" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If it is not required that results are inserted into the &lt;code&gt;Map&lt;/code&gt; in encounter order, using &lt;a href=&quot;collectors#toConcurrentMap-java.util.function.Function-java.util.function.Function-&quot;&gt;&lt;code&gt;toConcurrentMap(Function, Function)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 関数は1つのマップから別のマップにキーをマージすることによって動作しますが、これは負荷の高い操作になる可能性があります。結果が遭遇順に &lt;code&gt;Map&lt;/code&gt; に挿入される必要がない場合は、&lt;a href=&quot;collectors#toConcurrentMap-java.util.function.Function-java.util.function.Function-&quot;&gt; &lt;code&gt;toConcurrentMap(Function, Function)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="455cc87f0f7a7b7d3bd10e8e76906fe2717f5568" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If it is not required that results are merged into the &lt;code&gt;Map&lt;/code&gt; in encounter order, using &lt;a href=&quot;#toConcurrentMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)&quot;&gt;&lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 機能は、あるマップから別のマップにキーをマージすることによって動作しますが、これはコストのかかる操作になる可能性があります。結果を遭遇順に &lt;code&gt;Map&lt;/code&gt; にマージする必要がない場合は、&lt;a href=&quot;#toConcurrentMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)&quot;&gt; &lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="dce3945a38794bedbeea1ec896b627af457c67f5" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If it is not required that results are merged into the &lt;code&gt;Map&lt;/code&gt; in encounter order, using &lt;a href=&quot;#toConcurrentMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator,java.util.function.Supplier)&quot;&gt;&lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator, Supplier)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 機能は、あるマップから別のマップにキーをマージすることによって動作しますが、これはコストのかかる操作になる可能性があります。結果を遭遇順に &lt;code&gt;Map&lt;/code&gt; にマージする必要がない場合は、&lt;a href=&quot;#toConcurrentMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator,java.util.function.Supplier)&quot;&gt; &lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator, Supplier)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="5f7e9e01d3dfa3cb980421cf908b620f48d72c26" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If it is not required that results are merged into the &lt;code&gt;Map&lt;/code&gt; in encounter order, using &lt;a href=&quot;collectors#toConcurrentMap-java.util.function.Function-java.util.function.Function-java.util.function.BinaryOperator-&quot;&gt;&lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 関数は1つのマップから別のマップにキーをマージすることによって動作しますが、これは負荷の高い操作になる可能性があります。結果が遭遇順に &lt;code&gt;Map&lt;/code&gt; にマージされる必要がない場合、&lt;a href=&quot;collectors#toConcurrentMap-java.util.function.Function-java.util.function.Function-java.util.function.BinaryOperator-&quot;&gt; &lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="43da3d7de62b7245f65cab710cfb2f032f89515e" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If it is not required that results are merged into the &lt;code&gt;Map&lt;/code&gt; in encounter order, using &lt;a href=&quot;collectors#toConcurrentMap-java.util.function.Function-java.util.function.Function-java.util.function.BinaryOperator-java.util.function.Supplier-&quot;&gt;&lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator, Supplier)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 関数は1つのマップから別のマップにキーをマージすることによって動作しますが、これは負荷の高い操作になる可能性があります。結果が &lt;code&gt;Map&lt;/code&gt; にマージされる必要がない場合は、&lt;a href=&quot;collectors#toConcurrentMap-java.util.function.Function-java.util.function.Function-java.util.function.BinaryOperator-java.util.function.Supplier-&quot;&gt; &lt;code&gt;toConcurrentMap(Function, Function, BinaryOperator, Supplier)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="57c6b99569016327c62bebb7ad77957c25e8eed6" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If preservation of the order in which elements appear in the resulting &lt;code&gt;Map&lt;/code&gt; collector is not required, using &lt;a href=&quot;#groupingByConcurrent(java.util.function.Function)&quot;&gt;&lt;code&gt;groupingByConcurrent(Function)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 機能は、あるマップから別のマップにキーをマージすることによって動作しますが、これはコストのかかる操作になる可能性があります。結果の &lt;code&gt;Map&lt;/code&gt; コレクターに要素が表示される順序を保持する必要がない場合は、&lt;a href=&quot;#groupingByConcurrent(java.util.function.Function)&quot;&gt; &lt;code&gt;groupingByConcurrent(Function)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="f0cbd679a1ec8205268de13a97a9624457c2a964" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If preservation of the order in which elements appear in the resulting &lt;code&gt;Map&lt;/code&gt; collector is not required, using &lt;a href=&quot;collectors#groupingByConcurrent-java.util.function.Function-&quot;&gt;&lt;code&gt;groupingByConcurrent(Function)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 関数は1つのマップから別のマップにキーをマージすることによって動作しますが、これは負荷の高い操作になる可能性があります。結果の &lt;code&gt;Map&lt;/code&gt; コレクターに表示される要素の順序を維持する必要がない場合は、&lt;a href=&quot;collectors#groupingByConcurrent-java.util.function.Function-&quot;&gt; &lt;code&gt;groupingByConcurrent(Function)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="0a6ca58a5af4a56d396c6a6e708ba41db7d674a1" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If preservation of the order in which elements are presented to the downstream collector is not required, using &lt;a href=&quot;#groupingByConcurrent(java.util.function.Function,java.util.function.Supplier,java.util.stream.Collector)&quot;&gt;&lt;code&gt;groupingByConcurrent(Function, Supplier, Collector)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 機能は、あるマップから別のマップにキーをマージすることによって動作しますが、これはコストのかかる操作になる可能性があります。要素がダウンストリームコレクターに提示される順序を保持する必要がない場合は、&lt;a href=&quot;#groupingByConcurrent(java.util.function.Function,java.util.function.Supplier,java.util.stream.Collector)&quot;&gt; &lt;code&gt;groupingByConcurrent(Function, Supplier, Collector)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="45a9fc109957eb2a04aabfd7fb897648b56499d3" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If preservation of the order in which elements are presented to the downstream collector is not required, using &lt;a href=&quot;#groupingByConcurrent(java.util.function.Function,java.util.stream.Collector)&quot;&gt;&lt;code&gt;groupingByConcurrent(Function, Collector)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 機能は、あるマップから別のマップにキーをマージすることによって動作しますが、これはコストのかかる操作になる可能性があります。要素がダウンストリームコレクターに提示される順序を保持する必要がない場合は、&lt;a href=&quot;#groupingByConcurrent(java.util.function.Function,java.util.stream.Collector)&quot;&gt; &lt;code&gt;groupingByConcurrent(Function, Collector)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="7ac6dd6552e8a0aeddbedc87ca5a64e77ba22719" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If preservation of the order in which elements are presented to the downstream collector is not required, using &lt;a href=&quot;collectors#groupingByConcurrent-java.util.function.Function-java.util.function.Supplier-java.util.stream.Collector-&quot;&gt;&lt;code&gt;groupingByConcurrent(Function, Supplier, Collector)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 関数は1つのマップから別のマップにキーをマージすることによって動作しますが、これは負荷の高い操作になる可能性があります。要素がダウンストリームコレクターに提示される順序を維持する必要がない場合は、&lt;a href=&quot;collectors#groupingByConcurrent-java.util.function.Function-java.util.function.Supplier-java.util.stream.Collector-&quot;&gt; &lt;code&gt;groupingByConcurrent(Function, Supplier, Collector)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="dbaf8d671c4e4b5aa32fa0703a9603589a87b608" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Collector&lt;/code&gt; is not concurrent. For parallel stream pipelines, the &lt;code&gt;combiner&lt;/code&gt; function operates by merging the keys from one map into another, which can be an expensive operation. If preservation of the order in which elements are presented to the downstream collector is not required, using &lt;a href=&quot;collectors#groupingByConcurrent-java.util.function.Function-java.util.stream.Collector-&quot;&gt;&lt;code&gt;groupingByConcurrent(Function, Collector)&lt;/code&gt;&lt;/a&gt; may offer better parallel performance.</source>
          <target state="translated">返された &lt;code&gt;Collector&lt;/code&gt; は同時ではありません。並列ストリームパイプラインの場合、 &lt;code&gt;combiner&lt;/code&gt; 関数は1つのマップから別のマップにキーをマージすることによって動作しますが、これは負荷の高い操作になる可能性があります。要素がダウンストリームコレクターに提示される順序を維持する必要がない場合は、&lt;a href=&quot;collectors#groupingByConcurrent-java.util.function.Function-java.util.stream.Collector-&quot;&gt; &lt;code&gt;groupingByConcurrent(Function, Collector)&lt;/code&gt; &lt;/a&gt;を使用すると、並列パフォーマンスが向上する可能性があります。</target>
        </trans-unit>
        <trans-unit id="592e2671cbce0f06db4108a4c9a20ac5ff26eb80" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;DataFlavor&lt;/code&gt; will have the following characteristics:</source>
          <target state="translated">返される &lt;code&gt;DataFlavor&lt;/code&gt; には、次の特性があります。</target>
        </trans-unit>
        <trans-unit id="641ba86405285a860416ed87151b9ce572461645" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;HttpRequest&lt;/code&gt; may not be the initiating request provided when &lt;a href=&quot;httpclient#send(java.net.http.HttpRequest,java.net.http.HttpResponse.BodyHandler)&quot;&gt;sending&lt;/a&gt;. For example, if the initiating request was redirected, then the request returned by this method will have the redirected URI, which will be different from the initiating request URI.</source>
          <target state="translated">返される &lt;code&gt;HttpRequest&lt;/code&gt; は、を&lt;a href=&quot;httpclient#send(java.net.http.HttpRequest,java.net.http.HttpResponse.BodyHandler)&quot;&gt;送信&lt;/a&gt;するときに提供される開始要求ではない場合があります。たとえば、開始リクエストがリダイレクトされた場合、このメソッドによって返されるリクエストにはリダイレクトされたURIが含まれます。これは、開始リクエストURIとは異なります。</target>
        </trans-unit>
        <trans-unit id="b59f34697c17be29d15a67dae37118e8cb592e3b" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Map&lt;/code&gt; always contains mappings for both &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;true&lt;/code&gt; keys. There are no guarantees on the type, mutability, serializability, or thread-safety of the &lt;code&gt;Map&lt;/code&gt; returned.</source>
          <target state="translated">返される &lt;code&gt;Map&lt;/code&gt; 常に &lt;code&gt;false&lt;/code&gt; キーと &lt;code&gt;true&lt;/code&gt; キーの両方のマッピングが含まれています。返される &lt;code&gt;Map&lt;/code&gt; のタイプ、可変性、直列化可能性、またはスレッドセーフについての保証はありません。</target>
        </trans-unit>
        <trans-unit id="d858b7e7a502a697faadc883094465ade5ac1148" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Printable&lt;/code&gt; can be printed on any thread.</source>
          <target state="translated">返された &lt;code&gt;Printable&lt;/code&gt; は、任意のスレッドに印刷できます。</target>
        </trans-unit>
        <trans-unit id="3084584bbfa81c3dd9e5d128a1532aa3f6cd7c81" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Printable&lt;/code&gt; shares the &lt;code&gt;document&lt;/code&gt; with this &lt;code&gt;JTextComponent&lt;/code&gt;. It is the responsibility of the developer to ensure that the &lt;code&gt;document&lt;/code&gt; is not mutated while this &lt;code&gt;Printable&lt;/code&gt; is used. Printing behavior is undefined when the &lt;code&gt;document&lt;/code&gt; is mutated during printing.</source>
          <target state="translated">返された &lt;code&gt;Printable&lt;/code&gt; は、 &lt;code&gt;document&lt;/code&gt; をこの &lt;code&gt;JTextComponent&lt;/code&gt; と共有します。この &lt;code&gt;Printable&lt;/code&gt; の使用中に &lt;code&gt;document&lt;/code&gt; が変更されないようにするのは、開発者の責任です。印刷中に &lt;code&gt;document&lt;/code&gt; が変更された場合の印刷動作は定義されていません。</target>
        </trans-unit>
        <trans-unit id="22281dd911bd249a01a74dd9023a085760102f82" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Printable&lt;/code&gt; when printed, formats the document content appropriately for the page size. For correct line wrapping the &lt;code&gt;imageable width&lt;/code&gt; of all pages must be the same. See &lt;a href=&quot;../../../java/awt/print/pageformat#getImageableWidth()&quot;&gt;&lt;code&gt;PageFormat.getImageableWidth()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Printable&lt;/code&gt; 時に返されるPrintableは、ドキュメントのコンテンツをページサイズに合わせて適切にフォーマットします。正しい行の折り返しを行うには、すべてのページの &lt;code&gt;imageable width&lt;/code&gt; が同じである必要があります。&lt;a href=&quot;../../../java/awt/print/pageformat#getImageableWidth()&quot;&gt; &lt;code&gt;PageFormat.getImageableWidth()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="25ddc39787057b4a5d98836cd1d91a3011cd8509" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Set&lt;/code&gt; is backed by this Subject's internal &lt;code&gt;Principal&lt;/code&gt;&lt;code&gt;Set&lt;/code&gt;. Any modification to the returned &lt;code&gt;Set&lt;/code&gt; affects the internal &lt;code&gt;Principal&lt;/code&gt;&lt;code&gt;Set&lt;/code&gt; as well.</source>
          <target state="translated">返された &lt;code&gt;Set&lt;/code&gt; は、このサブジェクトの内部 &lt;code&gt;Principal&lt;/code&gt; &lt;code&gt;Set&lt;/code&gt; によってサポートされています。返された &lt;code&gt;Set&lt;/code&gt; への変更は、内部の &lt;code&gt;Principal&lt;/code&gt; &lt;code&gt;Set&lt;/code&gt; にも影響します。</target>
        </trans-unit>
        <trans-unit id="5d4e1626c242857a248f0940fc4963421f11cce0" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Set&lt;/code&gt; is backed by this Subject's internal private Credential &lt;code&gt;Set&lt;/code&gt;. Any modification to the returned &lt;code&gt;Set&lt;/code&gt; affects the internal private Credential &lt;code&gt;Set&lt;/code&gt; as well.</source>
          <target state="translated">返された &lt;code&gt;Set&lt;/code&gt; は、このサブジェクトの内部プライベートクレデンシャル &lt;code&gt;Set&lt;/code&gt; によってサポートされています。返された &lt;code&gt;Set&lt;/code&gt; への変更は、内部のプライベート資格情報 &lt;code&gt;Set&lt;/code&gt; にも影響します。</target>
        </trans-unit>
        <trans-unit id="92eab9cfd3076bb306b67853f4acd835335f8a36" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Set&lt;/code&gt; is backed by this Subject's internal public Credential &lt;code&gt;Set&lt;/code&gt;. Any modification to the returned &lt;code&gt;Set&lt;/code&gt; affects the internal public Credential &lt;code&gt;Set&lt;/code&gt; as well.</source>
          <target state="translated">返された &lt;code&gt;Set&lt;/code&gt; は、このサブジェクトの内部公開資格 &lt;code&gt;Set&lt;/code&gt; によって裏付けられています。返された &lt;code&gt;Set&lt;/code&gt; への変更は、内部の公開資格 &lt;code&gt;Set&lt;/code&gt; にも影響します。</target>
        </trans-unit>
        <trans-unit id="615020d8b91ea3150d89b8eb5df521518f2bf0e3" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Set&lt;/code&gt; is not backed by this Subject's internal &lt;code&gt;Principal&lt;/code&gt;&lt;code&gt;Set&lt;/code&gt;. A new &lt;code&gt;Set&lt;/code&gt; is created and returned for each method invocation. Modifications to the returned &lt;code&gt;Set&lt;/code&gt; will not affect the internal &lt;code&gt;Principal&lt;/code&gt;&lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">返された &lt;code&gt;Set&lt;/code&gt; は、このサブジェクトの内部 &lt;code&gt;Principal&lt;/code&gt; &lt;code&gt;Set&lt;/code&gt; によってサポートされていません。メソッドの呼び出しごとに新しい &lt;code&gt;Set&lt;/code&gt; が作成されて返されます。返された &lt;code&gt;Set&lt;/code&gt; を変更しても、内部の &lt;code&gt;Principal&lt;/code&gt; &lt;code&gt;Set&lt;/code&gt; は影響しません。</target>
        </trans-unit>
        <trans-unit id="60e6e37a29504c686a29d93cf1b8a805cadab51b" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Set&lt;/code&gt; is not backed by this Subject's internal private Credential &lt;code&gt;Set&lt;/code&gt;. A new &lt;code&gt;Set&lt;/code&gt; is created and returned for each method invocation. Modifications to the returned &lt;code&gt;Set&lt;/code&gt; will not affect the internal private Credential &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">返された &lt;code&gt;Set&lt;/code&gt; は、このサブジェクトの内部プライベートクレデンシャル &lt;code&gt;Set&lt;/code&gt; によってサポートされていません。メソッドの呼び出しごとに新しい &lt;code&gt;Set&lt;/code&gt; が作成されて返されます。返された &lt;code&gt;Set&lt;/code&gt; を変更しても、内部のプライベート資格情報 &lt;code&gt;Set&lt;/code&gt; は影響しません。</target>
        </trans-unit>
        <trans-unit id="4a692bd81d1139698e9955f1301dc1ea4476c6cb" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;Set&lt;/code&gt; is not backed by this Subject's internal public Credential &lt;code&gt;Set&lt;/code&gt;. A new &lt;code&gt;Set&lt;/code&gt; is created and returned for each method invocation. Modifications to the returned &lt;code&gt;Set&lt;/code&gt; will not affect the internal public Credential &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">返された &lt;code&gt;Set&lt;/code&gt; は、このサブジェクトの内部の公開資格 &lt;code&gt;Set&lt;/code&gt; によってサポートされていません。メソッドの呼び出しごとに新しい &lt;code&gt;Set&lt;/code&gt; が作成されて返されます。返された &lt;code&gt;Set&lt;/code&gt; を変更しても、内部の公開資格 &lt;code&gt;Set&lt;/code&gt; は影響しません。</target>
        </trans-unit>
        <trans-unit id="e6ee6fed903cbcc5abb5de7f51ad1081371937c6" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;SourceDataLine&lt;/code&gt;'s default audio format will be initialized with &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="translated">返される &lt;code&gt;SourceDataLine&lt;/code&gt; のデフォルトのオーディオ形式は、 &lt;code&gt;format&lt;/code&gt; で初期化されます。</target>
        </trans-unit>
        <trans-unit id="10e5de58fd5281c7858b3f0d4c85924e449e2f2d" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;TargetDataLine&lt;/code&gt;'s default audio format will be initialized with &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="translated">返された &lt;code&gt;TargetDataLine&lt;/code&gt; のデフォルトのオーディオ形式は、 &lt;code&gt;format&lt;/code&gt; で初期化されます。</target>
        </trans-unit>
        <trans-unit id="5203d861af68a72a81fc4a8395381f4dbaed35cd" translate="yes" xml:space="preserve">
          <source>The returned Collector disallows null keys and values. If either mapping function returns null, &lt;code&gt;NullPointerException&lt;/code&gt; will be thrown.</source>
          <target state="translated">返されたコレクターは、nullキーと値を許可しません。いずれかのマッピング関数がnullを返す場合、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="8630bcc03c8d8bdf7a974e7ae6032481c51ae1c3" translate="yes" xml:space="preserve">
          <source>The returned ReferenceType will be a &lt;a href=&quot;classtype&quot;&gt;&lt;code&gt;ClassType&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;arraytype&quot;&gt;&lt;code&gt;ArrayType&lt;/code&gt;&lt;/a&gt; and never an &lt;a href=&quot;interfacetype&quot;&gt;&lt;code&gt;InterfaceType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fd9c231706d0da0d4eddb1a0ac608bee0a7ed4e" translate="yes" xml:space="preserve">
          <source>The returned SecureRandom object has not been seeded. To seed the returned object, call the &lt;code&gt;setSeed&lt;/code&gt; method. If &lt;code&gt;setSeed&lt;/code&gt; is not called, the first call to &lt;code&gt;nextBytes&lt;/code&gt; will force the SecureRandom object to seed itself. This self-seeding will not occur if &lt;code&gt;setSeed&lt;/code&gt; was previously called.</source>
          <target state="translated">返されたSecureRandomオブジェクトはシードされていません。返されたオブジェクトをシードするには、 &lt;code&gt;setSeed&lt;/code&gt; メソッドを呼び出します。場合 &lt;code&gt;setSeed&lt;/code&gt; 呼び出されない、の最初の呼び出し &lt;code&gt;nextBytes&lt;/code&gt; 自分自身をシードするSecureRandomオブジェクトを強制します。 &lt;code&gt;setSeed&lt;/code&gt; が以前に呼び出された場合、この自己シードは発生しません。</target>
        </trans-unit>
        <trans-unit id="f4f45b323d8e60fb385aaaddf4bf5212cf5012ca" translate="yes" xml:space="preserve">
          <source>The returned array comprises all the code signers that have signed this entry.</source>
          <target state="translated">返される配列は、このエントリに署名したすべてのコード署名者から構成されます。</target>
        </trans-unit>
        <trans-unit id="90a2eb89a967b2512d9881060ad43029b93df120" translate="yes" xml:space="preserve">
          <source>The returned array contains the MIDI controller numbers for which the listener will now receive events. Some sequencers might not support controller event notification, in which case the array has a length of 0. Other sequencers might support notification for some controllers but not all. This method may be invoked repeatedly. Each time, the returned array indicates all the controllers that the listener will be notified about, not only the controllers requested in that particular invocation.</source>
          <target state="translated">返される配列には、リスナーがイベントを受信する MIDI コントローラ番号が含まれます。シーケンサによっては、コントローラのイベント通知をサポートしていない場合、配列の長さは 0 になります。 その他のシーケンサは、いくつかのコントローラの通知をサポートしているかもしれませんが、すべてのコントローラの通知をサポートしているわけではありません。このメソッドは繰り返し実行される可能性があります。そのたびに返される配列は、その特定の呼び出しでリクエストされたコントローラだけではなく、 リスナーに通知されるすべてのコントローラを表します。</target>
        </trans-unit>
        <trans-unit id="75b91bbe61375a64edfb1c042e15ed189b6a5113" translate="yes" xml:space="preserve">
          <source>The returned array does not include &lt;a href=&quot;../../../../java.base/java/lang/class#isHidden()&quot;&gt;hidden classes or interfaces&lt;/a&gt; or array classes whose &lt;a href=&quot;../../../../java.base/java/lang/class#componentType()&quot;&gt;element type&lt;/a&gt; is a &lt;a href=&quot;../../../../java.base/java/lang/class#isHidden()&quot;&gt;hidden class or interface&lt;/a&gt;. as they cannot be discovered by any class loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ab42c8180b6e9c1c6e98009e4ce02c9ee2fc2b" translate="yes" xml:space="preserve">
          <source>The returned array includes cipher suites from the list of standard cipher suite names in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#jsse-cipher-suite-names&quot;&gt; JSSE Cipher Suite Names&lt;/a&gt; section of the Java Cryptography Architecture Standard Algorithm Name Documentation, and may also include other cipher suites that the provider supports.</source>
          <target state="translated">返される配列には、Java Cryptography Architecture Standard Algorithm &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#jsse-cipher-suite-names&quot;&gt;NameDocumentationのJSSECipher Suite Names&lt;/a&gt;セクションにある標準暗号スイート名のリストからの暗号スイートが含まれ、プロバイダーがサポートする他の暗号スイートも含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="b2c51d4e4d3bd5a97c993f659d1ebf0700b61499" translate="yes" xml:space="preserve">
          <source>The returned array includes cipher suites from the list of standard cipher suite names in the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/security/standard-names.html#jsse-cipher-suite-names&quot;&gt; JSSE Cipher Suite Names&lt;/a&gt; section of the Java Cryptography Architecture Standard Algorithm Name Documentation, and may also include other cipher suites that the provider supports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430c0e4d4b5300f2390bbbd1594ba94d4fe7bf7e" translate="yes" xml:space="preserve">
          <source>The returned array includes only the nest members recorded in the &lt;code&gt;NestMembers&lt;/code&gt; attribute, and not any hidden classes that were added to the nest via &lt;a href=&quot;invoke/methodhandles.lookup#defineHiddenClass(byte%5B%5D,boolean,java.lang.invoke.MethodHandles.Lookup.ClassOption...)&quot;&gt;&lt;code&gt;Lookup::defineHiddenClass&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f2116b38feb165a5a7fcbeabdd2f6355db1df7" translate="yes" xml:space="preserve">
          <source>The returned array is a copy of the actual array and may be modified in any way without affecting the system tray. To remove a &lt;code&gt;TrayIcon&lt;/code&gt; from the &lt;code&gt;SystemTray&lt;/code&gt;, use the &lt;a href=&quot;#remove(java.awt.TrayIcon)&quot;&gt;&lt;code&gt;remove(TrayIcon)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">返される配列は実際の配列のコピーであり、システムトレイに影響を与えることなく任意の方法で変更できます。 &lt;code&gt;SystemTray&lt;/code&gt; から &lt;code&gt;TrayIcon&lt;/code&gt; を削除するには、&lt;a href=&quot;#remove(java.awt.TrayIcon)&quot;&gt; &lt;code&gt;remove(TrayIcon)&lt;/code&gt; &lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="3624c3e8b713f9750ee56a62c2997bd2cc1b21d9" translate="yes" xml:space="preserve">
          <source>The returned array is a shallow copy of the internal array, which means that it is a copy of the internal array of references to the &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; objects but that each referenced &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; object is not copied.</source>
          <target state="translated">返される配列は内部配列の浅いコピーです。つまり、 &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; オブジェクトへの参照の内部配列のコピーですが、参照される各 &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; オブジェクトはコピーされません。</target>
        </trans-unit>
        <trans-unit id="2fcde0250fbd9f37a68a63dc986de2a345538306" translate="yes" xml:space="preserve">
          <source>The returned array is a shallow copy of the internal array, which means that it is a copy of the internal array of references to the &lt;code&gt;MBeanParameterInfo&lt;/code&gt; objects but that each referenced &lt;code&gt;MBeanParameterInfo&lt;/code&gt; object is not copied.</source>
          <target state="translated">返される配列は内部配列の浅いコピーです。つまり、これは &lt;code&gt;MBeanParameterInfo&lt;/code&gt; オブジェクトへの参照の内部配列のコピーですが、参照される各 &lt;code&gt;MBeanParameterInfo&lt;/code&gt; オブジェクトはコピーされません。</target>
        </trans-unit>
        <trans-unit id="05ba6a5f60e0641d1235e4005ef40904baaa60b1" translate="yes" xml:space="preserve">
          <source>The returned array never contains methods with names &quot;&lt;code&gt;&amp;lt;init&amp;gt;&lt;/code&gt;&quot; or &quot;&lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt;&quot;.</source>
          <target state="translated">返される配列には、「 &lt;code&gt;&amp;lt;init&amp;gt;&lt;/code&gt; 」または「 &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt; 」という名前のメソッドが含まれることはありません。</target>
        </trans-unit>
        <trans-unit id="f6c37647bf61a5b5c430747eb2b5e030dc0e7ee8" translate="yes" xml:space="preserve">
          <source>The returned array will be &quot;safe&quot; in that no references to it are maintained by this collection. (In other words, this method must allocate a new array even if this collection is backed by an array). The caller is thus free to modify the returned array.</source>
          <target state="translated">返される配列は、このコレクションによってその配列への参照が保持されないという意味で「安全な」配列となります(言い換えれば、このコレクションが配列によってバックアップされている場合でも、このメソッドは新しい配列を確保しなければなりません)。(言い換えれば、このメソッドは、たとえこのコレクションが配列によってバックアップされていたとしても、新しい配列を割り当てなければなりません)。このように、呼び出し元は返された配列を自由に変更することができます。</target>
        </trans-unit>
        <trans-unit id="2c7b12233cde488615989699afe78dcad6ed4384" translate="yes" xml:space="preserve">
          <source>The returned array will be &quot;safe&quot; in that no references to it are maintained by this deque. (In other words, this method must allocate a new array). The caller is thus free to modify the returned array.</source>
          <target state="translated">返される配列は、このdequeによってその配列への参照が保持されないという意味で &quot;安全な &quot;配列となります (言い換えれば、このメソッドは新しい配列を確保しなければなりません)。(言い換えれば、このメソッドは新しい配列を確保しなければなりません)。このように、呼び出し元は返された配列を自由に変更することができます。</target>
        </trans-unit>
        <trans-unit id="15b26c8c7a310fbb9e54174ebdb2dbcf36348363" translate="yes" xml:space="preserve">
          <source>The returned array will be &quot;safe&quot; in that no references to it are maintained by this list. (In other words, this method must allocate a new array even if this list is backed by an array). The caller is thus free to modify the returned array.</source>
          <target state="translated">返される配列は、このリストによってその配列への参照が保持されないという意味で「安全な」配列となります (言い換えれば、このリストが配列によってバックアップされている場合でも、このメソッドは新しい配列を確保しなければなりません)。(言い換えれば、このリストが配列によってバックアップされている場合でも、このメソッドは新しい配列を確保しなければなりません)。このように、呼び出し元は返された配列を自由に変更することができます。</target>
        </trans-unit>
        <trans-unit id="9957755e8c40fe5adbd7d7d8d5843d2e55923750" translate="yes" xml:space="preserve">
          <source>The returned array will be &quot;safe&quot; in that no references to it are maintained by this list. (In other words, this method must allocate a new array). The caller is thus free to modify the returned array.</source>
          <target state="translated">返される配列は、このリストによってその配列への参照が保持されないという意味で「安全な」配列となります (言い換えれば、このメソッドは新しい配列を確保しなければなりません)。(言い換えれば、このメソッドは新しい配列を確保しなければなりません)。このように、呼び出し元は返された配列を自由に変更することができます。</target>
        </trans-unit>
        <trans-unit id="9e282460816c42a0ccd3dcea485b9239559bb18e" translate="yes" xml:space="preserve">
          <source>The returned array will be &quot;safe&quot; in that no references to it are maintained by this queue. (In other words, this method must allocate a new array). The caller is thus free to modify the returned array.</source>
          <target state="translated">返される配列は、このキューによってそれへの参照が保持されないという意味で「安全な」配列となります。(言い換えれば、このメソッドは新しい配列を割り当てなければなりません)。このように、呼び出し元は返された配列を自由に変更することができます。</target>
        </trans-unit>
        <trans-unit id="6e87afccdc8466069c7b753215ae2cacd201fd10" translate="yes" xml:space="preserve">
          <source>The returned array will be &quot;safe&quot; in that no references to it are maintained by this set. (In other words, this method must allocate a new array even if this set is backed by an array). The caller is thus free to modify the returned array.</source>
          <target state="translated">返される配列は、このセットによってそれへの参照が保持されないという意味で「安全な」配列となります(言い換えれば、このメソッドは、このセットが配列によってバックアップされていたとしても、新しい配列を確保しなければなりません)。(言い換えれば、このメソッドは、たとえこのセットが配列によってバックアップされていたとしても、新しい配列を割り当てなければなりません)。このように、呼び出し元は返された配列を自由に変更することができます。</target>
        </trans-unit>
        <trans-unit id="8651aa449d701f684570ddf36fba5191566388d6" translate="yes" xml:space="preserve">
          <source>The returned attribute information is limited to runs that contain the current character.</source>
          <target state="translated">返される属性情報は、現在の文字を含むランに限定されます。</target>
        </trans-unit>
        <trans-unit id="dd3d33c31d474f6dd046417604a6a9ae4803e6b9" translate="yes" xml:space="preserve">
          <source>The returned certificate array comprises all the signer certificates that were used to verify this entry. Each signer certificate is followed by its supporting certificate chain (which may be empty). Each signer certificate and its supporting certificate chain are ordered bottom-to-top (i.e., with the signer certificate first and the (root) certificate authority last).</source>
          <target state="translated">返される証明書の配列は、このエントリの検証に使用されたすべての署名者証明書で構成されます。各署名者証明書の後には、サポートする証明書チェインが続きます (空の場合もあります)。各署名者証明書とそれをサポートする証明書チェインは、下から上に順番に並べられます (つまり、署名者証明書が最初で、(ルートの)証明書局が最後になります)。</target>
        </trans-unit>
        <trans-unit id="61c3a6711385606db98b86cc4dc71d68bdea4436" translate="yes" xml:space="preserve">
          <source>The returned clip must be opened with the &lt;code&gt;open(AudioFormat)&lt;/code&gt; or &lt;code&gt;open(AudioInputStream)&lt;/code&gt; method.</source>
          <target state="translated">返されたクリップは、 &lt;code&gt;open(AudioFormat)&lt;/code&gt; または &lt;code&gt;open(AudioInputStream)&lt;/code&gt; メソッドで開く必要があります。</target>
        </trans-unit>
        <trans-unit id="ceb417aa63a35568772d2ba08459a4d0f57ffbee" translate="yes" xml:space="preserve">
          <source>The returned collection does</source>
          <target state="translated">返されたコレクションは</target>
        </trans-unit>
        <trans-unit id="b07c416f52316fbf6c7d40a634719186c13469b3" translate="yes" xml:space="preserve">
          <source>The returned collection will be serializable if the specified collection is serializable.</source>
          <target state="translated">返されたコレクションは、指定されたコレクションがシリアライズ可能な場合、シリアライズ可能になります。</target>
        </trans-unit>
        <trans-unit id="3be1f1672220475d8271f6e01c1f720a84f08e5b" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable (assuming the specified comparator is also serializable or &lt;code&gt;null&lt;/code&gt;).</source>
          <target state="translated">返されるコンパレータはシリアル化可能です（指定されたコンパレータもシリアル化可能または &lt;code&gt;null&lt;/code&gt; であると想定）。</target>
        </trans-unit>
        <trans-unit id="2812de92165ec02fbb836f9148b615e9ccc3b5b2" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable and throws &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; when comparing &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">返されるコンパレータはシリアライズ可能であり、 &lt;code&gt;null&lt;/code&gt; を比較するときに&lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="77a6f4be0bfa1c8aa5aedc5a42831ad20378a870" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable and throws &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; when comparing an entry with a null key.</source>
          <target state="translated">返されたコンパレータはシリアル化可能であり、エントリをnullキーと比較すると&lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="22bf28f66c9f612e083df0a59239e3c46c04c933" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable and throws &lt;a href=&quot;../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; when comparing an entry with null values.</source>
          <target state="translated">返されたコンパレータはシリアル化可能であり、エントリをnull値と比較するときに&lt;a href=&quot;../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="51644083b4b8fda187f5a628a6258b22d611a598" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable if the specified comparator is also serializable.</source>
          <target state="translated">返されるコンパレータは、指定されたコンパレータもシリアライズ可能な場合はシリアライズ可能です。</target>
        </trans-unit>
        <trans-unit id="d69bb8caf8d86905d98a11aab0d0a3baa774bad3" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable if the specified comparator is serializable.</source>
          <target state="translated">返されたコンパレータは、指定されたコンパレータがシリアライズ可能な場合はシリアライズ可能です。</target>
        </trans-unit>
        <trans-unit id="f0576c7aa360de3b65d8c8efe158571eec213ab2" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable if the specified function and comparator are both serializable.</source>
          <target state="translated">指定された関数とコンパレータの両方がシリアライズ可能な場合、返されるコンパレータはシリアライズ可能です。</target>
        </trans-unit>
        <trans-unit id="ba917226177854af620439263d809c330c5d69cf" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable if the specified function is also serializable.</source>
          <target state="translated">返されるコンパレータは、指定された関数もシリアライズ可能な場合はシリアライズ可能です。</target>
        </trans-unit>
        <trans-unit id="0334b290d5844794dff470460f3065bc09010f74" translate="yes" xml:space="preserve">
          <source>The returned comparator is serializable.</source>
          <target state="translated">返されるコンパレータはシリアライズ可能です。</target>
        </trans-unit>
        <trans-unit id="84b94e59406a95c4ca5a8d11de2db0b0bbe9f7c0" translate="yes" xml:space="preserve">
          <source>The returned completable future completes exceptionally with:</source>
          <target state="translated">返された完成可能な未来は、例外的にそれで完成します。</target>
        </trans-unit>
        <trans-unit id="c615624e02206189b87ea763df189e93fca46655" translate="yes" xml:space="preserve">
          <source>The returned completable future, if completed successfully, completes with an &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&lt;/code&gt; that contains the response status, headers, and body ( as handled by given response body handler ).</source>
          <target state="translated">返される完了可能なfutureは、正常に完了すると、応答ステータス、ヘッダー、および本文（指定された応答本文ハンドラーによって処理される）を含む&lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;T&amp;gt;&lt;/code&gt; で完了します。</target>
        </trans-unit>
        <trans-unit id="c5d33135e5a1f395b41fad98d6b20e99dae320a6" translate="yes" xml:space="preserve">
          <source>The returned era will be a singleton capable of being compared with the constants in &lt;a href=&quot;chrono/isochronology&quot;&gt;&lt;code&gt;IsoChronology&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;==&lt;/code&gt; operator.</source>
          <target state="translated">返される時代は、 &lt;code&gt;==&lt;/code&gt; 演算子を使用して&lt;a href=&quot;chrono/isochronology&quot;&gt; &lt;code&gt;IsoChronology&lt;/code&gt; &lt;/a&gt;の定数と比較できるシングルトンになります。</target>
        </trans-unit>
        <trans-unit id="8932377dd8e02a84a648c771d6426ce831a87e6f" translate="yes" xml:space="preserve">
          <source>The returned filter uses &lt;a href=&quot;../../../java.base/java/util/regex/matcher#find()&quot;&gt;&lt;code&gt;Matcher.find()&lt;/code&gt;&lt;/a&gt; to test for inclusion. To test for exact matches use the characters '^' and '$' to match the beginning and end of the string respectively. For example, &quot;^foo$&quot; includes only rows whose string is exactly &quot;foo&quot; and not, for example, &quot;food&quot;. See &lt;a href=&quot;../../../java.base/java/util/regex/pattern&quot;&gt;&lt;code&gt;Pattern&lt;/code&gt;&lt;/a&gt; for a complete description of the supported regular-expression constructs.</source>
          <target state="translated">返されたフィルターは、&lt;a href=&quot;../../../java.base/java/util/regex/matcher#find()&quot;&gt; &lt;code&gt;Matcher.find()&lt;/code&gt; &lt;/a&gt;を使用して包含をテストします。完全一致をテストするには、文字「^」と「$」を使用して、それぞれ文字列の最初と最後に一致させます。たとえば、「^ foo $」には、文字列が正確に「foo」であり、たとえば「food」ではない行のみが含まれます。サポートされている正規表現構造の完全な説明については、&lt;a href=&quot;../../../java.base/java/util/regex/pattern&quot;&gt; &lt;code&gt;Pattern&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="685a6e900daf413e8d8765bf083707c3fc12c8e0" translate="yes" xml:space="preserve">
          <source>The returned formatter has a chronology of ISO set to ensure dates in other calendar systems are correctly converted. It has no override zone and uses the &lt;a href=&quot;resolverstyle#SMART&quot;&gt;&lt;code&gt;SMART&lt;/code&gt;&lt;/a&gt; resolver style.</source>
          <target state="translated">返されるフォーマッターには、他のカレンダーシステムの日付が正しく変換されるように、ISOの年表が設定されています。オーバーライドゾーンはなく、&lt;a href=&quot;resolverstyle#SMART&quot;&gt; &lt;code&gt;SMART&lt;/code&gt; &lt;/a&gt;リゾルバースタイルを使用します。</target>
        </trans-unit>
        <trans-unit id="617ab648dccda8ea4bfed9ff5c0e4dca48843eb4" translate="yes" xml:space="preserve">
          <source>The returned formatter has a chronology of ISO set to ensure dates in other calendar systems are correctly converted. It has no override zone and uses the &lt;a href=&quot;resolverstyle#SMART&quot;&gt;&lt;code&gt;SMART&lt;/code&gt;&lt;/a&gt; resolver style. The &lt;code&gt;FULL&lt;/code&gt; and &lt;code&gt;LONG&lt;/code&gt; styles typically require a time-zone. When formatting using these styles, a &lt;code&gt;ZoneId&lt;/code&gt; must be available, either by using &lt;code&gt;ZonedDateTime&lt;/code&gt; or &lt;a href=&quot;#withZone(java.time.ZoneId)&quot;&gt;&lt;code&gt;withZone(java.time.ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるフォーマッタには、他のカレンダーシステムの日付が正しく変換されるようにISOの年表が設定されています。オーバーライドゾーンはなく、&lt;a href=&quot;resolverstyle#SMART&quot;&gt; &lt;code&gt;SMART&lt;/code&gt; &lt;/a&gt;リゾルバースタイルを使用します。 &lt;code&gt;FULL&lt;/code&gt; と &lt;code&gt;LONG&lt;/code&gt; スタイルは、通常時間帯が必要です。これらのスタイルを使用してフォーマットする場合、 &lt;code&gt;ZonedDateTime&lt;/code&gt; または&lt;a href=&quot;#withZone(java.time.ZoneId)&quot;&gt; &lt;code&gt;withZone(java.time.ZoneId)&lt;/code&gt; &lt;/a&gt;を使用して、 &lt;code&gt;ZoneId&lt;/code&gt; が使用可能である必要があります。</target>
        </trans-unit>
        <trans-unit id="c7747f70640f1e4a45424ed0c1270bbc9549330f" translate="yes" xml:space="preserve">
          <source>The returned formatter has a chronology of ISO set to ensure dates in other calendar systems are correctly converted. It has no override zone and uses the &lt;a href=&quot;resolverstyle#STRICT&quot;&gt;&lt;code&gt;STRICT&lt;/code&gt;&lt;/a&gt; resolver style.</source>
          <target state="translated">返されるフォーマッターには、他のカレンダーシステムの日付が正しく変換されるように、ISOの年表が設定されています。オーバーライドゾーンはなく、&lt;a href=&quot;resolverstyle#STRICT&quot;&gt; &lt;code&gt;STRICT&lt;/code&gt; &lt;/a&gt;リゾルバースタイルを使用します。</target>
        </trans-unit>
        <trans-unit id="c3dda27b1c2af94aa2edb7b9c334041c2040aee1" translate="yes" xml:space="preserve">
          <source>The returned formatter has no override chronology or zone. It uses &lt;a href=&quot;resolverstyle#SMART&quot;&gt;&lt;code&gt;SMART&lt;/code&gt;&lt;/a&gt; resolver style.</source>
          <target state="translated">返されるフォーマッターには、年表やゾーンのオーバーライドはありません。&lt;a href=&quot;resolverstyle#SMART&quot;&gt; &lt;code&gt;SMART&lt;/code&gt; &lt;/a&gt;リゾルバスタイルを使用します。</target>
        </trans-unit>
        <trans-unit id="65f23c4bdba155d972d5a5c334ace90811627c2f" translate="yes" xml:space="preserve">
          <source>The returned formatter has no override chronology or zone. It uses the &lt;a href=&quot;resolverstyle#STRICT&quot;&gt;&lt;code&gt;STRICT&lt;/code&gt;&lt;/a&gt; resolver style.</source>
          <target state="translated">返されるフォーマッターには、年表やゾーンのオーバーライドはありません。&lt;a href=&quot;resolverstyle#STRICT&quot;&gt; &lt;code&gt;STRICT&lt;/code&gt; &lt;/a&gt;リゾルバースタイルを使用します。</target>
        </trans-unit>
        <trans-unit id="93e620ed0c6b2f581405e4ca186e0d0c26a039f0" translate="yes" xml:space="preserve">
          <source>The returned implementation is immutable, thread-safe and &lt;code&gt;Serializable&lt;/code&gt; providing that the base clock is.</source>
          <target state="translated">返される実装は不変でスレッドセーフであり、ベースクロックがそうであれば &lt;code&gt;Serializable&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1ebf894963bb17de1c19228a9892a378efc764d2" translate="yes" xml:space="preserve">
          <source>The returned implementation is immutable, thread-safe and &lt;code&gt;Serializable&lt;/code&gt;.</source>
          <target state="translated">返される実装は、不変で、スレッドセーフで、 &lt;code&gt;Serializable&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="16aec74c31404fdf24dbc2481edc9947ae28ae7f" translate="yes" xml:space="preserve">
          <source>The returned implementation is immutable, thread-safe and &lt;code&gt;Serializable&lt;/code&gt;. It is equivalent to &lt;code&gt;system(ZoneId.systemDefault())&lt;/code&gt;.</source>
          <target state="translated">返される実装は、不変で、スレッドセーフで、 &lt;code&gt;Serializable&lt;/code&gt; です。 &lt;code&gt;system(ZoneId.systemDefault())&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="28e83331df05c75aa0965f68cf383b4fa1ce4775" translate="yes" xml:space="preserve">
          <source>The returned implementation is immutable, thread-safe and &lt;code&gt;Serializable&lt;/code&gt;. It is equivalent to &lt;code&gt;system(ZoneOffset.UTC)&lt;/code&gt;.</source>
          <target state="translated">返される実装は、不変で、スレッドセーフで、 &lt;code&gt;Serializable&lt;/code&gt; です。 &lt;code&gt;system(ZoneOffset.UTC)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="256a067cbdccb5e2e330ac00c3dcdb3f79fff5d2" translate="yes" xml:space="preserve">
          <source>The returned implementation is immutable, thread-safe and &lt;code&gt;Serializable&lt;/code&gt;. It is equivalent to &lt;code&gt;tick(system(zone), Duration.ofMillis(1))&lt;/code&gt;.</source>
          <target state="translated">返される実装は、不変で、スレッドセーフで、 &lt;code&gt;Serializable&lt;/code&gt; です。これは、 &lt;code&gt;tick(system(zone), Duration.ofMillis(1))&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="39695b971886168cd9e28cf54007c2987d52ae31" translate="yes" xml:space="preserve">
          <source>The returned implementation is immutable, thread-safe and &lt;code&gt;Serializable&lt;/code&gt;. It is equivalent to &lt;code&gt;tick(system(zone), Duration.ofMinutes(1))&lt;/code&gt;.</source>
          <target state="translated">返される実装は、不変で、スレッドセーフで、 &lt;code&gt;Serializable&lt;/code&gt; です。 &lt;code&gt;tick(system(zone), Duration.ofMinutes(1))&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="b0d8edb2d119f60ce6b547f8aeea62c8bb10250e" translate="yes" xml:space="preserve">
          <source>The returned implementation is immutable, thread-safe and &lt;code&gt;Serializable&lt;/code&gt;. It is equivalent to &lt;code&gt;tick(system(zone), Duration.ofSeconds(1))&lt;/code&gt;.</source>
          <target state="translated">返される実装は、不変で、スレッドセーフで、 &lt;code&gt;Serializable&lt;/code&gt; です。 &lt;code&gt;tick(system(zone), Duration.ofSeconds(1))&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="2ab8e6a2c1e29941612774d35818b8817f708321" translate="yes" xml:space="preserve">
          <source>The returned index is the largest value</source>
          <target state="translated">返されるインデックスは最大値</target>
        </trans-unit>
        <trans-unit id="324947fcc7f39d43c0a0080101a27650dcd91d17" translate="yes" xml:space="preserve">
          <source>The returned index is the largest value &lt;code&gt;k&lt;/code&gt; for which:</source>
          <target state="translated">返されるインデックスは、次の最大値 &lt;code&gt;k&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1010f5a375a5d3f29e20face9e80371d4a90f440" translate="yes" xml:space="preserve">
          <source>The returned index is the smallest value</source>
          <target state="translated">返されるインデックスは最小値</target>
        </trans-unit>
        <trans-unit id="b96444254cceb87f3cb7ff9401f1b082c1d382c7" translate="yes" xml:space="preserve">
          <source>The returned index is the smallest value &lt;code&gt;k&lt;/code&gt; for which:</source>
          <target state="translated">返されるインデックスは、次のような最小値 &lt;code&gt;k&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="30fb35855f9641f7209a86fa609966716cae03af" translate="yes" xml:space="preserve">
          <source>The returned indexes are limited to the range of the iterator.</source>
          <target state="translated">返されるインデックスは、イテレータの範囲に制限されます。</target>
        </trans-unit>
        <trans-unit id="c52ca666bd6ac96a80f0c043191a66ce94fda2cf" translate="yes" xml:space="preserve">
          <source>The returned instance will have its &lt;a href=&quot;#isUnordered()&quot;&gt;&lt;code&gt;unordered&lt;/code&gt;&lt;/a&gt; value set to &lt;code&gt;false&lt;/code&gt;, its &lt;a href=&quot;#timeToLive()&quot;&gt;&lt;code&gt;timeToLive&lt;/code&gt;&lt;/a&gt; value set to &lt;code&gt;0&lt;/code&gt;, its &lt;a href=&quot;#isComplete()&quot;&gt;&lt;code&gt;complete&lt;/code&gt;&lt;/a&gt; value set to &lt;code&gt;true&lt;/code&gt;, and its &lt;a href=&quot;#payloadProtocolID()&quot;&gt;&lt;code&gt;payloadProtocolID&lt;/code&gt;&lt;/a&gt; value set to &lt;code&gt;0&lt;/code&gt;. These values, if required, can be set through the appropriate setter method before sending the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45bc891e1f438dd01ea7196d9842b794781ae4f" translate="yes" xml:space="preserve">
          <source>The returned instants from &lt;code&gt;Clock&lt;/code&gt; work on a time-scale that ignores leap seconds, as described in &lt;a href=&quot;instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt;. If the implementation wraps a source that provides leap second information, then a mechanism should be used to &quot;smooth&quot; the leap second. The Java Time-Scale mandates the use of UTC-SLS, however clock implementations may choose how accurate they are with the time-scale so long as they document how they work. Implementations are therefore not required to actually perform the UTC-SLS slew or to otherwise be aware of leap seconds.</source>
          <target state="translated">&lt;code&gt;Clock&lt;/code&gt; から返されるインスタントは、「&lt;a href=&quot;instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; &lt;/a&gt;説明されているように、うるう秒を無視する時間スケールで動作します。うるう秒情報を提供するソースを実装がラップする場合、うるう秒を「スムーズ」にするメカニズムを使用する必要があります。 Java Time-ScaleはUTC-SLSの使用を義務付けていますが、クロックの実装は、それらがどのように機能するかを文書化している限り、タイムスケールでの正確さを選択できます。したがって、実装ではUTC-SLSスルーを実際に実行したり、うるう秒を認識したりする必要はありません。</target>
        </trans-unit>
        <trans-unit id="7dfea46346d425f47431ab48a0b9973f65d3a3d0" translate="yes" xml:space="preserve">
          <source>The returned iterator is &lt;a href=&quot;#fail-fast&quot;&gt;&lt;i&gt;fail-fast&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるイテレータは&lt;a href=&quot;#fail-fast&quot;&gt;&lt;i&gt;フェイルファスト&lt;/i&gt;&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="4d825a47643cf28fa3b87aadae1a13cf5b1f8bb0" translate="yes" xml:space="preserve">
          <source>The returned iterator is &lt;a href=&quot;package-summary#Weakly&quot;&gt;&lt;i&gt;weakly consistent&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるイテレータは&lt;a href=&quot;package-summary#Weakly&quot;&gt;&lt;i&gt;一貫性&lt;/i&gt;&lt;/a&gt;が&lt;i&gt;弱い&lt;/i&gt;です。</target>
        </trans-unit>
        <trans-unit id="9ef6fd11db72e67c90473d6e296ebd844318cf20" translate="yes" xml:space="preserve">
          <source>The returned iterator provides a snapshot of the state of the list when the iterator was constructed. No synchronization is needed while traversing the iterator. The iterator does &lt;em&gt;NOT&lt;/em&gt; support the &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">返された反復子は、反復子が作成されたときのリストの状態のスナップショットを提供します。イテレーターをトラバースする間、同期は必要ありません。イテレータは、 &lt;code&gt;remove&lt;/code&gt; メソッドをサポートしてい&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="dd06f34d84c884510eb2daefd756631c982e6784" translate="yes" xml:space="preserve">
          <source>The returned iterator provides a snapshot of the state of the list when the iterator was constructed. No synchronization is needed while traversing the iterator. The iterator does &lt;em&gt;NOT&lt;/em&gt; support the &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;add&lt;/code&gt; methods.</source>
          <target state="translated">返された反復子は、反復子が作成されたときのリストの状態のスナップショットを提供します。イテレーターをトラバースする間、同期は必要ありません。イテレータは、 &lt;code&gt;remove&lt;/code&gt; 、 &lt;code&gt;set&lt;/code&gt; 、または &lt;code&gt;add&lt;/code&gt; メソッドをサポートしてい&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6c8995a19beeeaa38d931dd04ead46af4bf6aeaf" translate="yes" xml:space="preserve">
          <source>The returned iterator provides a snapshot of the state of the set when the iterator was constructed. No synchronization is needed while traversing the iterator. The iterator does &lt;em&gt;NOT&lt;/em&gt; support the &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">返された反復子は、反復子が作成されたときのセットの状態のスナップショットを提供します。イテレーターをトラバースする間、同期は必要ありません。イテレータは、 &lt;code&gt;remove&lt;/code&gt; メソッドをサポートしてい&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b28ef914634dbd42c57b4fb798bc270a1b137343" translate="yes" xml:space="preserve">
          <source>The returned line should be opened with the &lt;code&gt;open(AudioFormat)&lt;/code&gt; or &lt;code&gt;open(AudioFormat, int)&lt;/code&gt; method.</source>
          <target state="translated">返された行は、 &lt;code&gt;open(AudioFormat)&lt;/code&gt; または &lt;code&gt;open(AudioFormat, int)&lt;/code&gt; メソッドで開く必要があります。</target>
        </trans-unit>
        <trans-unit id="603df59fcea4e98e66008bfad2caba193eee7e62" translate="yes" xml:space="preserve">
          <source>The returned list consists of language ranges from the given &lt;code&gt;ranges&lt;/code&gt; and their equivalents found in the IANA Language Subtag Registry. For example, if the given &lt;code&gt;ranges&lt;/code&gt; is &lt;code&gt;&quot;Accept-Language: iw,en-us;q=0.7,en;q=0.3&quot;&lt;/code&gt;, the elements in the list to be returned are:</source>
          <target state="translated">返されたリストは、与えられたから、言語の範囲で構成されてい &lt;code&gt;ranges&lt;/code&gt; およびその同等物は、IANA言語サブタグレジストリで見つかりました。たとえば、指定された &lt;code&gt;ranges&lt;/code&gt; が &lt;code&gt;&quot;Accept-Language: iw,en-us;q=0.7,en;q=0.3&quot;&lt;/code&gt; 場合、返されるリストの要素は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ea6ef8590a840eacd817ee2b90a2f4e62a449824" translate="yes" xml:space="preserve">
          <source>The returned list does not include &lt;a href=&quot;../../../../java.base/java/lang/class#isHidden()&quot;&gt;hidden classes or interfaces&lt;/a&gt; or array classes whose &lt;a href=&quot;arraytype#componentType()&quot;&gt;element type&lt;/a&gt; is a &lt;a href=&quot;../../../../java.base/java/lang/class#isHidden()&quot;&gt;hidden class or interface&lt;/a&gt;. as they cannot be discovered by any class loader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb1e0c77eddff020314d13ac5b80139ee3a974d0" translate="yes" xml:space="preserve">
          <source>The returned list implements the optional &lt;code&gt;Collection&lt;/code&gt; methods, except those that would change the size of the returned list. Those methods leave the list unchanged and throw &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ccf04805571d510869c52da4e3447fdf55cace" translate="yes" xml:space="preserve">
          <source>The returned list includes all reference types, including &lt;a href=&quot;../../../../java.base/java/lang/class#isHidden()&quot;&gt;&lt;code&gt;hidden classes or interfaces&lt;/code&gt;&lt;/a&gt;, loaded at least to the point of preparation and types (like array) for which preparation is not defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e4b3e38d248cd7e5998a34d9a87596fd1c1fda" translate="yes" xml:space="preserve">
          <source>The returned list is modifiable so as to facilitate changes to the existing ACL. The &lt;a href=&quot;#setAcl(java.util.List)&quot;&gt;&lt;code&gt;setAcl&lt;/code&gt;&lt;/a&gt; method is used to update the file's ACL attribute.</source>
          <target state="translated">返されるリストは、既存のACLへの変更を容易にするために変更可能です。&lt;a href=&quot;#setAcl(java.util.List)&quot;&gt; &lt;code&gt;setAcl&lt;/code&gt; &lt;/a&gt;方法は、ファイルのACL属性を更新するために使用されます。</target>
        </trans-unit>
        <trans-unit id="afce95588c0380c39f79771261da47a2d309e9a8" translate="yes" xml:space="preserve">
          <source>The returned list is modifiable so as to facilitate changes to the existing ACL. The &lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt;&lt;code&gt;setAcl&lt;/code&gt;&lt;/a&gt; method is used to update the file's ACL attribute.</source>
          <target state="translated">返されるリストは、既存のACLへの変更を容易にするために変更可能です。&lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt; &lt;code&gt;setAcl&lt;/code&gt; &lt;/a&gt;方法は、ファイルのACL属性を更新するために使用されます。</target>
        </trans-unit>
        <trans-unit id="c503093f4e0ea3beb8f9f47ec55e6810f3e4744d" translate="yes" xml:space="preserve">
          <source>The returned list is not necessarily exhaustive. That is, the MBean may have a public constructor that is not in the list. In this case, the MBean server can construct another instance of this MBean's class using that constructor, even though it is not listed here.</source>
          <target state="translated">返されるリストは必ずしも全てを網羅しているわけではありません。つまり、MBean にはリストにないパブリック コンストラクタがあるかもしれません。この場合、MBean サーバは、リストにはないが、そのコンストラクタを使用して、この MBean クラスの別のインスタンスを作成することができます。</target>
        </trans-unit>
        <trans-unit id="6c4ba1a6fc0e1176884c27c61e7f3010f2b892f0" translate="yes" xml:space="preserve">
          <source>The returned list iterator is &lt;a href=&quot;#fail-fast&quot;&gt;&lt;i&gt;fail-fast&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるリストイテレータは&lt;a href=&quot;#fail-fast&quot;&gt;&lt;i&gt;フェイルファスト&lt;/i&gt;&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="8e5480482a345877ff721b616ca16ea8ed32101e" translate="yes" xml:space="preserve">
          <source>The returned list may contain multiple locations for a particular line number, if the compiler and/or VM has mapped that line to two or more disjoint code index ranges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca9df76291579b501b3fdfee2f39774c2720a485" translate="yes" xml:space="preserve">
          <source>The returned list will be serializable if the specified list is serializable.</source>
          <target state="translated">返されたリストは、指定されたリストがシリアライズ可能な場合はシリアライズ可能になります。</target>
        </trans-unit>
        <trans-unit id="b51e7cf95fea371d30e6037819047e729ec2ba1c" translate="yes" xml:space="preserve">
          <source>The returned list will be serializable if the specified list is serializable. Similarly, the returned list will implement &lt;a href=&quot;randomaccess&quot;&gt;&lt;code&gt;RandomAccess&lt;/code&gt;&lt;/a&gt; if the specified list does.</source>
          <target state="translated">指定されたリストが直列化可能である場合、返されるリストは直列化可能です。同様に、返されたリストは、指定されたリストが実装している場合、&lt;a href=&quot;randomaccess&quot;&gt; &lt;code&gt;RandomAccess&lt;/code&gt; &lt;/a&gt;を実装します。</target>
        </trans-unit>
        <trans-unit id="04d0f9b8a9ef829e7c7e0bf6383b9f855499c50e" translate="yes" xml:space="preserve">
          <source>The returned list will include reference types loaded at least to the point of preparation and types (like array) for which preparation is not defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf755a47227812109e329812c17f2e30f9fb6597" translate="yes" xml:space="preserve">
          <source>The returned logger will perform message localization as specified by &lt;a href=&quot;system.loggerfinder#getLocalizedLogger(java.lang.String,java.util.ResourceBundle,java.lang.Module)&quot;&gt;&lt;code&gt;LoggerFinder.getLocalizedLogger(name, bundle, module)&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;module&lt;/code&gt; is the caller's module. In cases where &lt;code&gt;System.getLogger&lt;/code&gt; is called from a context where there is no caller frame on the stack (e.g when called directly from a JNI attached thread), &lt;code&gt;IllegalCallerException&lt;/code&gt; is thrown. To obtain a logger in such a context, use an auxiliary class that will implicitly be identified as the caller, or use the system &lt;a href=&quot;system.loggerfinder#getLoggerFinder()&quot;&gt;&lt;code&gt;LoggerFinder&lt;/code&gt;&lt;/a&gt; to obtain a logger instead. Note that doing the latter may eagerly initialize the underlying logging system.</source>
          <target state="translated">返されたロガーは、&lt;a href=&quot;system.loggerfinder#getLocalizedLogger(java.lang.String,java.util.ResourceBundle,java.lang.Module)&quot;&gt; &lt;code&gt;LoggerFinder.getLocalizedLogger(name, bundle, module)&lt;/code&gt; &lt;/a&gt;で指定されたメッセージのローカリゼーションを実行します。ここで、 &lt;code&gt;module&lt;/code&gt; は呼び出し元のモジュールです。ケースで &lt;code&gt;System.getLogger&lt;/code&gt; が（直接JNI添付のスレッドから呼び出された場合など）、スタックには、発信者のフレームが存在しないコンテキストから呼び出され、 &lt;code&gt;IllegalCallerException&lt;/code&gt; がスローされます。このようなコンテキストでロガーを取得するには、呼び出し元として暗黙的に識別される補助クラスを使用するか、代わりにシステム&lt;a href=&quot;system.loggerfinder#getLoggerFinder()&quot;&gt; &lt;code&gt;LoggerFinder&lt;/code&gt; &lt;/a&gt;を使用してロガーを取得します。後者を実行すると、基盤となるロギングシステムが熱心に初期化される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a3cf87e163405abbca1ef35f4f6b362d57c5c392" translate="yes" xml:space="preserve">
          <source>The returned map and its collection views may not obey the general contract of the &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">返されるマップとそのコレクションビューは、&lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;とObject.hashCode（）メソッドの一般的なコントラクトに従わない場合があります。</target>
        </trans-unit>
        <trans-unit id="04550933f42e1b20dd67a722e85a83b892d29e8b" translate="yes" xml:space="preserve">
          <source>The returned map and its collection views may not obey the general contract of the &lt;a href=&quot;object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">返されたマップとそのコレクションビューは、&lt;a href=&quot;object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;メソッドの一般規約に従っていない場合があります。</target>
        </trans-unit>
        <trans-unit id="2592b2ccc5cce39b4370391737f4d234053e34d0" translate="yes" xml:space="preserve">
          <source>The returned map contains one entry for each tab to be added in the tabbed pane in a JConsole window with the tab name as the key and the &lt;a href=&quot;../../../../../java.desktop/javax/swing/jpanel&quot;&gt;&lt;code&gt;JPanel&lt;/code&gt;&lt;/a&gt; object as the value. This method returns an empty map if no tab is added by this plugin. This method will be called from the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8d64063c7ed0ea19647d547170466cdf6c7ae7" translate="yes" xml:space="preserve">
          <source>The returned map does not permit null keys or values. Attempting to insert or query the presence of a null key or value will throw a &lt;a href=&quot;nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt;. Attempting to query the presence of a key or value which is not of type &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; will throw a &lt;a href=&quot;classcastexception&quot;&gt;&lt;code&gt;ClassCastException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されたマップはnullキーまたは値を許可しません。nullキーまたは値の存在を挿入または照会しようとすると、&lt;a href=&quot;nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;型ではないキーまたは値の存在を照会しようとすると、&lt;a href=&quot;classcastexception&quot;&gt; &lt;code&gt;ClassCastException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="6adecd8da1fa6d74979ab4b71410df2ad020d787" translate="yes" xml:space="preserve">
          <source>The returned map has an ordering equivalent to &lt;a href=&quot;../collections#reverseOrder(java.util.Comparator)&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(comparator())&lt;/code&gt;. The expression &lt;code&gt;m.descendingMap().descendingMap()&lt;/code&gt; returns a view of &lt;code&gt;m&lt;/code&gt; essentially equivalent to &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">返されるマップには、&lt;a href=&quot;../collections#reverseOrder(java.util.Comparator)&quot;&gt; &lt;code&gt;Collections.reverseOrder&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(comparator())&lt;/code&gt; と同等の順序があります。式 &lt;code&gt;m.descendingMap().descendingMap()&lt;/code&gt; は、本質的に &lt;code&gt;m&lt;/code&gt; と同等の &lt;code&gt;m&lt;/code&gt; のビューを返します。</target>
        </trans-unit>
        <trans-unit id="de626c9a4a06c5beb2eb08bc7e1023f6785c4bcc" translate="yes" xml:space="preserve">
          <source>The returned map has an ordering equivalent to &lt;a href=&quot;../collections#reverseOrder-java.util.Comparator-&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(comparator())&lt;/code&gt;. The expression &lt;code&gt;m.descendingMap().descendingMap()&lt;/code&gt; returns a view of &lt;code&gt;m&lt;/code&gt; essentially equivalent to &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">返されるマップには、&lt;a href=&quot;../collections#reverseOrder-java.util.Comparator-&quot;&gt; &lt;code&gt;Collections.reverseOrder&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(comparator())&lt;/code&gt; と同等の順序があります。式 &lt;code&gt;m.descendingMap().descendingMap()&lt;/code&gt; は、本質的に &lt;code&gt;m&lt;/code&gt; と同等の &lt;code&gt;m&lt;/code&gt; のビューを返します。</target>
        </trans-unit>
        <trans-unit id="c6e78c6f35b029ca60ae6001c0f097568236673e" translate="yes" xml:space="preserve">
          <source>The returned map has an ordering equivalent to &lt;a href=&quot;collections#reverseOrder(java.util.Comparator)&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(comparator())&lt;/code&gt;. The expression &lt;code&gt;m.descendingMap().descendingMap()&lt;/code&gt; returns a view of &lt;code&gt;m&lt;/code&gt; essentially equivalent to &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">返されるマップには、&lt;a href=&quot;collections#reverseOrder(java.util.Comparator)&quot;&gt; &lt;code&gt;Collections.reverseOrder&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(comparator())&lt;/code&gt; と同等の順序があります。式 &lt;code&gt;m.descendingMap().descendingMap()&lt;/code&gt; は、本質的に &lt;code&gt;m&lt;/code&gt; と同等の &lt;code&gt;m&lt;/code&gt; のビューを返します。</target>
        </trans-unit>
        <trans-unit id="47af6d18a03dd37ca75973b55abf606e91a20528" translate="yes" xml:space="preserve">
          <source>The returned map has an ordering equivalent to &lt;code&gt;&lt;a href=&quot;collections#reverseOrder-java.util.Comparator-&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;(comparator())&lt;/code&gt;. The expression &lt;code&gt;m.descendingMap().descendingMap()&lt;/code&gt; returns a view of &lt;code&gt;m&lt;/code&gt; essentially equivalent to &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">返されるマップには、 &lt;code&gt;&lt;a href=&quot;collections#reverseOrder-java.util.Comparator-&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;(comparator())&lt;/code&gt; と同等の順序があります。式 &lt;code&gt;m.descendingMap().descendingMap()&lt;/code&gt; は、本質的に &lt;code&gt;m&lt;/code&gt; と同等の &lt;code&gt;m&lt;/code&gt; のビューを返します。</target>
        </trans-unit>
        <trans-unit id="2a6919fc63dffbd2b665571fbe3d0e62befa5d6f" translate="yes" xml:space="preserve">
          <source>The returned map implements all optional &lt;a href=&quot;../sortedmap&quot;&gt;&lt;code&gt;SortedMap&lt;/code&gt;&lt;/a&gt; operations</source>
          <target state="translated">返されたマップは、すべてのオプションの&lt;a href=&quot;../sortedmap&quot;&gt; &lt;code&gt;SortedMap&lt;/code&gt; &lt;/a&gt;操作を実装します</target>
        </trans-unit>
        <trans-unit id="3e60ce6cdb39e55f6aea0270ae6050c5d468141c" translate="yes" xml:space="preserve">
          <source>The returned map is typically case-sensitive on all platforms.</source>
          <target state="translated">返されるマップは通常、すべてのプラットフォームで大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="ebb8ac95b0820624300e6c51aa32adf9bf40ac27" translate="yes" xml:space="preserve">
          <source>The returned map will be serializable if the specified map is serializable.</source>
          <target state="translated">返されたマップは、指定されたマップがシリアライズ可能な場合、シリアライズ可能になります。</target>
        </trans-unit>
        <trans-unit id="3580abdef3f87a6bd80d4bea2b490670bec97aa7" translate="yes" xml:space="preserve">
          <source>The returned map will never contain null keys or values. Attempting to query the presence of a null key or value will throw a &lt;a href=&quot;nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt;. Attempting to query the presence of a key or value which is not of type &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; will throw a &lt;a href=&quot;classcastexception&quot;&gt;&lt;code&gt;ClassCastException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるマップには、nullキーまたは値が含まれることはありません。nullキーまたは値の存在をクエリしようとすると、&lt;a href=&quot;nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;型ではないキーまたは値の存在を照会しようとすると、&lt;a href=&quot;classcastexception&quot;&gt; &lt;code&gt;ClassCastException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="186b57fc3142be2ab7c06b068233e86af34426e7" translate="yes" xml:space="preserve">
          <source>The returned map will throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; on an attempt to insert a key outside its range.</source>
          <target state="translated">返されたマップは、その範囲外にキーを挿入しようとすると &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="38495ee31c82f624af115d8608382ab49eee4275" translate="yes" xml:space="preserve">
          <source>The returned map will throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; on an attempt to insert a key outside of its range, or to construct a submap either of whose endpoints lie outside its range.</source>
          <target state="translated">返されたマップは、範囲外にキーを挿入しようとしたり、エンドポイントが範囲外にあるサブマップを作成したりしようとすると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="cb7427863a48aa5f4ceb84b369a735b8a29e3170" translate="yes" xml:space="preserve">
          <source>The returned method (if non-null) is a component of &lt;a href=&quot;classtype&quot;&gt;&lt;code&gt;ClassType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7da5ac39ea912d89eb86cf1f58a17a89487bae" translate="yes" xml:space="preserve">
          <source>The returned method handle is equivalent to &lt;code&gt;dropArguments(zero(type.returnType()), 0, type.parameterList())&lt;/code&gt;.</source>
          <target state="translated">返されるメソッドハンドルは、 &lt;code&gt;dropArguments(zero(type.returnType()), 0, type.parameterList())&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="be839b6e9781e2a92a16b75b05df60ab61f8f103" translate="yes" xml:space="preserve">
          <source>The returned method handle is equivalent to &lt;code&gt;empty(methodType(type))&lt;/code&gt;. It is also equivalent to &lt;code&gt;explicitCastArguments(constant(Object.class, null), methodType(type))&lt;/code&gt;, since &lt;code&gt;explicitCastArguments&lt;/code&gt; converts &lt;code&gt;null&lt;/code&gt; to default values.</source>
          <target state="translated">返されるメソッドハンドルは、 &lt;code&gt;empty(methodType(type))&lt;/code&gt; と同等です。また、 &lt;code&gt;explicitCastArguments&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; をデフォルト値に変換するため、 &lt;code&gt;explicitCastArguments(constant(Object.class, null), methodType(type))&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="bf341b930019b986feaa3025d94588cbf0b07082" translate="yes" xml:space="preserve">
          <source>The returned method handle is equivalent to &lt;code&gt;identity(type).bindTo(value)&lt;/code&gt;.</source>
          <target state="translated">返されるメソッドハンドルは、 &lt;code&gt;identity(type).bindTo(value)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="08c6e093f65426cb1d1abfa5dcc5c30c713506d0" translate="yes" xml:space="preserve">
          <source>The returned method handle will have &lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt;variable arity&lt;/a&gt; if and only if the constructor's variable arity modifier bit (&lt;code&gt;0x0080&lt;/code&gt;) is set.</source>
          <target state="translated">返されるメソッドハンドルは、コンストラクターの可変アリティ修飾子ビット（ &lt;code&gt;0x0080&lt;/code&gt; ）が設定されている場合にのみ、&lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt;可変アリティ&lt;/a&gt;を持ちます。</target>
        </trans-unit>
        <trans-unit id="68be879cb87a23db36e0a68951f564309bd3df0e" translate="yes" xml:space="preserve">
          <source>The returned method handle will have &lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt;variable arity&lt;/a&gt; if and only if the method's variable arity modifier bit (&lt;code&gt;0x0080&lt;/code&gt;) is set &lt;em&gt;and&lt;/em&gt; the trailing array argument is not the only argument. (If the trailing array argument is the only argument, the given receiver value will be bound to it.)</source>
          <target state="translated">返されるメソッドハンドルは、メソッドの可変アリティ修飾子ビット（ &lt;code&gt;0x0080&lt;/code&gt; ）が設定され&lt;em&gt;ていて&lt;/em&gt;、末尾の配列引数が唯一の引数ではない場合にのみ、&lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt;可変アリティ&lt;/a&gt;を持ちます。（末尾の配列引数が唯一の引数である場合、指定されたレシーバー値がそれにバインドされます。）&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="97d70a1480f82e4e58a7bae7833050abcbcd7b02" translate="yes" xml:space="preserve">
          <source>The returned method handle will have &lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt;variable arity&lt;/a&gt; if and only if the method's variable arity modifier bit (&lt;code&gt;0x0080&lt;/code&gt;) is set.</source>
          <target state="translated">返されるメソッドハンドルは、メソッドの可変アリティ修飾子ビット（ &lt;code&gt;0x0080&lt;/code&gt; ）が設定されている場合にのみ、&lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt;可変アリティ&lt;/a&gt;を持ちます。</target>
        </trans-unit>
        <trans-unit id="cf12e977e77f8c538e96bf14109eaad3316041c8" translate="yes" xml:space="preserve">
          <source>The returned method handle will have &lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;variable arity&lt;/a&gt; if and only if the constructor's variable arity modifier bit (&lt;code&gt;0x0080&lt;/code&gt;) is set.</source>
          <target state="translated">返されるメソッドハンドルは、コンストラクターの可変アリティ修飾子ビット（ &lt;code&gt;0x0080&lt;/code&gt; ）が設定されている場合にのみ、&lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;可変アリティ&lt;/a&gt;を持ちます。</target>
        </trans-unit>
        <trans-unit id="3b84ac4232d79eefcfa3e985c888ae7cb52f78ae" translate="yes" xml:space="preserve">
          <source>The returned method handle will have &lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;variable arity&lt;/a&gt; if and only if the method's variable arity modifier bit (&lt;code&gt;0x0080&lt;/code&gt;) is set &lt;em&gt;and&lt;/em&gt; the trailing array argument is not the only argument. (If the trailing array argument is the only argument, the given receiver value will be bound to it.)</source>
          <target state="translated">返されるメソッドハンドルは、メソッドの可変アリティ修飾子ビット（ &lt;code&gt;0x0080&lt;/code&gt; ）が設定され&lt;em&gt;ていて&lt;/em&gt;、末尾の配列引数が唯一の引数ではない場合にのみ、&lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;可変アリティ&lt;/a&gt;を持ちます。（末尾の配列引数が唯一の引数である場合、指定されたレシーバー値がそれにバインドされます。）&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fdb52f5efb367c3a0c6f85b8e5a561c3fd955c91" translate="yes" xml:space="preserve">
          <source>The returned method handle will have &lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;variable arity&lt;/a&gt; if and only if the method's variable arity modifier bit (&lt;code&gt;0x0080&lt;/code&gt;) is set.</source>
          <target state="translated">返されるメソッドハンドルは、メソッドの可変アリティ修飾子ビット（ &lt;code&gt;0x0080&lt;/code&gt; ）が設定されている場合にのみ、&lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;可変アリティ&lt;/a&gt;を持ちます。</target>
        </trans-unit>
        <trans-unit id="b7fc53c29677f5d1950f8b1cceaed84e97f9c71b" translate="yes" xml:space="preserve">
          <source>The returned multicaster contains all the listeners in this multicaster with the exception of all occurrences of &lt;code&gt;oldl&lt;/code&gt;. If the resulting multicaster contains only one regular listener the regular listener may be returned. If the resulting multicaster is empty, then &lt;code&gt;null&lt;/code&gt; may be returned instead.</source>
          <target state="translated">返されるマルチキャストには、 &lt;code&gt;oldl&lt;/code&gt; のすべてのオカレンスを除いて、このマルチキャストのすべてのリスナーが含まれます。結果のマルチキャストに通常のリスナーが1つしかない場合は、通常のリスナーが返されることがあります。結果のマルチキャストが空の場合、代わりに &lt;code&gt;null&lt;/code&gt; が返される場合があります。</target>
        </trans-unit>
        <trans-unit id="812acb325d7ae416383679e0dc980c9b542376d7" translate="yes" xml:space="preserve">
          <source>The returned name is dependent on VM's default stratum (&lt;a href=&quot;virtualmachine#getDefaultStratum()&quot;&gt;&lt;code&gt;VirtualMachine.getDefaultStratum()&lt;/code&gt;&lt;/a&gt;). In the reference implementation, when using the base stratum, the returned string is the unqualified name of the source file containing the declaration of this type. In other strata the returned source name is the first source name for that stratum. Since other languages may have more than one source name for a reference type, the use of &lt;a href=&quot;location#sourceName()&quot;&gt;&lt;code&gt;Location.sourceName()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#sourceNames(java.lang.String)&quot;&gt;&lt;code&gt;sourceNames(String)&lt;/code&gt;&lt;/a&gt; is preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221f6133ad0d362e01edda7bf12ed28159130583" translate="yes" xml:space="preserve">
          <source>The returned names are for the specified stratum (see &lt;a href=&quot;location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; for a description of strata). In the reference implementation, when using the Java programming language stratum, the returned List contains one element: a String which is the unqualified name of the source file containing the declaration of this type. In other strata the returned source names are all the source names defined for that stratum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b799c087978df49d2fe6286478b6ecedece7b2a8" translate="yes" xml:space="preserve">
          <source>The returned navigable map will be serializable if the specified navigable map is serializable.</source>
          <target state="translated">指定されたナビゲータブル・マップがシリアライズ可能な場合、返されたナビゲータブル・マップはシリアライズ可能になります。</target>
        </trans-unit>
        <trans-unit id="63e22369ffd2f4700f3d4c6318fbd029fc94516b" translate="yes" xml:space="preserve">
          <source>The returned navigable set will be serializable if the specified navigable set is serializable.</source>
          <target state="translated">指定されたナビゲーブル・セットがシリアライズ可能な場合、返されたナビゲーブル・セットはシリアライズ可能になります。</target>
        </trans-unit>
        <trans-unit id="a727d4e4fbf63ea3befd9b45ef8b69bf9cfb1312" translate="yes" xml:space="preserve">
          <source>The returned number of available bytes is a hint, but not a guarantee, that it is possible to use most or any of these bytes. The number of available bytes is most likely to be accurate immediately after this call. It is likely to be made inaccurate by any external I/O operations including those made on the system outside of this virtual machine. This method makes no guarantee that write operations to this file system will succeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22109190c7021a569021e7447b7b84963fc23137" translate="yes" xml:space="preserve">
          <source>The returned number of available bytes is a hint, but not a guarantee, that it is possible to use most or any of these bytes. The number of unallocated bytes is most likely to be accurate immediately after this call. It is likely to be made inaccurate by any external I/O operations including those made on the system outside of this virtual machine. This method makes no guarantee that write operations to this file system will succeed.</source>
          <target state="translated">返される利用可能なバイト数は、これらのバイトのほとんどまたはいずれかを使用することが可能であるというヒントですが、保証するものではありません。割り当てられていないバイト数は、この呼び出しの直後に正確になる可能性が高いです。この仮想マシン以外のシステム上で行われたものも含め、外部からの I/O 操作によって不正確になる可能性があります。このメソッドは、このファイルシステムへの書き込み操作が成功することを保証するものではありません。</target>
        </trans-unit>
        <trans-unit id="37078f56cceda1a46ec4284d20998d8403b393be" translate="yes" xml:space="preserve">
          <source>The returned number of available bytes is a hint, but not a guarantee, that it is possible to use most or any of these bytes. The number of usable bytes is most likely to be accurate immediately after the space attributes are obtained. It is likely to be made inaccurate by any external I/O operations including those made on the system outside of this Java virtual machine.</source>
          <target state="translated">返される使用可能バイト数は、これらのバイトのほとんどまたはいずれかを使用可能であるというヒントであり、保証するものではありません。使用可能なバイト数は、スペース属性を取得した直後に正確になる可能性が高い。このJava仮想マシン以外のシステム上で行われたものも含め、外部のI/O操作によって不正確になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="c9ec8ab1c6179c271d12fffbe706c3b736240a28" translate="yes" xml:space="preserve">
          <source>The returned number of unallocated bytes is a hint, but not a guarantee, that it is possible to use most or any of these bytes. The number of unallocated bytes is most likely to be accurate immediately after the space attributes are obtained. It is likely to be made inaccurate by any external I/O operations including those made on the system outside of this virtual machine.</source>
          <target state="translated">返される未割り当てバイト数はヒントであり、これらのバイトのほとんどまたはいずれかを使用できることを保証するものではありません。未割り当てバイト数は、スペース属性を取得した直後に正確になる可能性が高いです。この仮想マシン以外のシステム上で行われたものも含め、外部のI/O操作によって不正確になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="4abb292a819da63fe264f4077cd386242fe657dd" translate="yes" xml:space="preserve">
          <source>The returned number of unallocated bytes is a hint, but not a guarantee, that it is possible to use most or any of these bytes. The number of unallocated bytes is most likely to be accurate immediately after this call. It is likely to be made inaccurate by any external I/O operations including those made on the system outside of this virtual machine. This method makes no guarantee that write operations to this file system will succeed.</source>
          <target state="translated">返される未割り当てバイト数はヒントであり、これらのバイトのほとんどまたはいずれかを使用できることを保証するものではありません。未割り当てバイト数は、この呼び出しの直後に正確になる可能性が高いです。この仮想マシン以外のシステム上で行われたものも含め、外部からの I/O 操作によって不正確になる可能性があります。このメソッドは、このファイルシステムへの書き込み操作が成功することを保証するものではありません。</target>
        </trans-unit>
        <trans-unit id="9bf3ae18f78108540f59e74bf023c42294fa7cf2" translate="yes" xml:space="preserve">
          <source>The returned object is unmodifiable and contains the tag names of all &lt;code&gt;TIFFTag&lt;/code&gt;s in this &lt;code&gt;TIFFTagSet&lt;/code&gt; sorted into ascending order according to &lt;a href=&quot;../../../../../java.base/java/lang/comparable#compareTo(T)&quot;&gt;&lt;code&gt;Comparable.compareTo(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるオブジェクトは変更できず、&lt;a href=&quot;../../../../../java.base/java/lang/comparable#compareTo(T)&quot;&gt; &lt;code&gt;Comparable.compareTo(Object)&lt;/code&gt; &lt;/a&gt;に従って昇順でソートされたこの &lt;code&gt;TIFFTagSet&lt;/code&gt; 内のすべての &lt;code&gt;TIFFTag&lt;/code&gt; のタグ名が含まれています。</target>
        </trans-unit>
        <trans-unit id="9e796af45c9611651ce65ec6c4b30604165ccfde" translate="yes" xml:space="preserve">
          <source>The returned object is unmodifiable and contains the tag numbers of all &lt;code&gt;TIFFTag&lt;/code&gt;s in this &lt;code&gt;TIFFTagSet&lt;/code&gt; sorted into ascending order according to &lt;a href=&quot;../../../../../java.base/java/lang/comparable#compareTo(T)&quot;&gt;&lt;code&gt;Comparable.compareTo(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されるオブジェクトは変更できず、&lt;a href=&quot;../../../../../java.base/java/lang/comparable#compareTo(T)&quot;&gt; &lt;code&gt;Comparable.compareTo(Object)&lt;/code&gt; &lt;/a&gt;に従って昇順でソートされたこの &lt;code&gt;TIFFTagSet&lt;/code&gt; 内のすべての &lt;code&gt;TIFFTag&lt;/code&gt; のタグ番号が含まれています。</target>
        </trans-unit>
        <trans-unit id="492c119dd4628b39858412c60847fb3a194906f2" translate="yes" xml:space="preserve">
          <source>The returned object may be modified using ordinary &lt;a href=&quot;../util/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; operations. These modifications will be visible to subprocesses started via the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method. Two &lt;code&gt;ProcessBuilder&lt;/code&gt; instances always contain independent process environments, so changes to the returned map will never be reflected in any other &lt;code&gt;ProcessBuilder&lt;/code&gt; instance or the values returned by &lt;a href=&quot;system#getenv(java.lang.String)&quot;&gt;&lt;code&gt;System.getenv&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されたオブジェクトは、通常の&lt;a href=&quot;../util/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;操作を使用して変更できます。これらの変更は、&lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;メソッドを介して開始されたサブプロセスに表示されます。2つの &lt;code&gt;ProcessBuilder&lt;/code&gt; インスタンスには常に独立したプロセス環境が含まれているため、返されるマップへの変更が他の &lt;code&gt;ProcessBuilder&lt;/code&gt; インスタンスや&lt;a href=&quot;system#getenv(java.lang.String)&quot;&gt; &lt;code&gt;System.getenv&lt;/code&gt; &lt;/a&gt;によって返される値に反映されることはありません。</target>
        </trans-unit>
        <trans-unit id="c0e131d9f7c12cd49d0e3def257a8126d1849784" translate="yes" xml:space="preserve">
          <source>The returned object may be modified using ordinary &lt;a href=&quot;../util/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; operations. These modifications will be visible to subprocesses started via the &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method. Two &lt;code&gt;ProcessBuilder&lt;/code&gt; instances always contain independent process environments, so changes to the returned map will never be reflected in any other &lt;code&gt;ProcessBuilder&lt;/code&gt; instance or the values returned by &lt;a href=&quot;system#getenv-java.lang.String-&quot;&gt;&lt;code&gt;System.getenv&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されたオブジェクトは、通常の&lt;a href=&quot;../util/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;操作を使用して変更できます。これらの変更は、&lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;メソッドを介して開始されたサブプロセスに表示されます。2つの &lt;code&gt;ProcessBuilder&lt;/code&gt; インスタンスには常に独立したプロセス環境が含まれているため、返されたマップへの変更が他の &lt;code&gt;ProcessBuilder&lt;/code&gt; インスタンスや&lt;a href=&quot;system#getenv-java.lang.String-&quot;&gt; &lt;code&gt;System.getenv&lt;/code&gt; &lt;/a&gt;によって返された値に反映されることはありません。</target>
        </trans-unit>
        <trans-unit id="10758f1a6b50ea2e6c130aeb5c0b77e0c66fbab0" translate="yes" xml:space="preserve">
          <source>The returned object will not declare any public methods that are not declared in the &lt;a href=&quot;../../net/datagramsocket&quot;&gt;&lt;code&gt;DatagramSocket&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">返されたオブジェクトは、&lt;a href=&quot;../../net/datagramsocket&quot;&gt; &lt;code&gt;DatagramSocket&lt;/code&gt; &lt;/a&gt;クラスで宣言されていないパブリックメソッドを宣言しません。</target>
        </trans-unit>
        <trans-unit id="6661a89d64621663c740fc5bd7a203767c62c2b9" translate="yes" xml:space="preserve">
          <source>The returned object will not declare any public methods that are not declared in the &lt;a href=&quot;../../net/serversocket&quot;&gt;&lt;code&gt;ServerSocket&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">返されたオブジェクトは、&lt;a href=&quot;../../net/serversocket&quot;&gt; &lt;code&gt;ServerSocket&lt;/code&gt; &lt;/a&gt;クラスで宣言されていないパブリックメソッドを宣言しません。</target>
        </trans-unit>
        <trans-unit id="b4f4ca2ce4cf8222c87458553d37b2d17a03fa4b" translate="yes" xml:space="preserve">
          <source>The returned object will not declare any public methods that are not declared in the &lt;a href=&quot;../../net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">返されたオブジェクトは、&lt;a href=&quot;../../net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt;クラスで宣言されていないパブリックメソッドを宣言しません。</target>
        </trans-unit>
        <trans-unit id="0472b263351c4d126d5ea013a83e7af5df81b296" translate="yes" xml:space="preserve">
          <source>The returned parameter object must be initialized via a call to &lt;code&gt;init&lt;/code&gt;, using an appropriate parameter specification or parameter encoding.</source>
          <target state="translated">返されたパラメーターオブジェクトは、適切なパラメーター仕様またはパラメーターエンコーディングを使用して、 &lt;code&gt;init&lt;/code&gt; の呼び出しを介して初期化する必要があります。</target>
        </trans-unit>
        <trans-unit id="47dc492778d2d3b5a2a328f21d3d9313d13e099e" translate="yes" xml:space="preserve">
          <source>The returned parameters can be typecast to a &lt;a href=&quot;spec/c14nmethodparameterspec&quot;&gt;&lt;code&gt;C14NMethodParameterSpec&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">返されるパラメーターは、&lt;a href=&quot;spec/c14nmethodparameterspec&quot;&gt; &lt;code&gt;C14NMethodParameterSpec&lt;/code&gt; &lt;/a&gt;オブジェクトにタイプキャストできます。</target>
        </trans-unit>
        <trans-unit id="3ddc417851bcf3ea126e833b688c0a6913e44637" translate="yes" xml:space="preserve">
          <source>The returned parameters can be typecast to a &lt;a href=&quot;spec/digestmethodparameterspec&quot;&gt;&lt;code&gt;DigestMethodParameterSpec&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">返されるパラメーターは、&lt;a href=&quot;spec/digestmethodparameterspec&quot;&gt; &lt;code&gt;DigestMethodParameterSpec&lt;/code&gt; &lt;/a&gt;オブジェクトにタイプキャストできます。</target>
        </trans-unit>
        <trans-unit id="83acc9ac6764336702eb89931e745c9306c55b1b" translate="yes" xml:space="preserve">
          <source>The returned parameters can be typecast to a &lt;a href=&quot;spec/signaturemethodparameterspec&quot;&gt;&lt;code&gt;SignatureMethodParameterSpec&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">返されるパラメーターは、&lt;a href=&quot;spec/signaturemethodparameterspec&quot;&gt; &lt;code&gt;SignatureMethodParameterSpec&lt;/code&gt; &lt;/a&gt;オブジェクトにタイプキャストできます。</target>
        </trans-unit>
        <trans-unit id="27e366a23cd79e1859b47622e908ca1f0d6b5314" translate="yes" xml:space="preserve">
          <source>The returned parameters can be typecast to a &lt;a href=&quot;spec/transformparameterspec&quot;&gt;&lt;code&gt;TransformParameterSpec&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">返されるパラメーターは、&lt;a href=&quot;spec/transformparameterspec&quot;&gt; &lt;code&gt;TransformParameterSpec&lt;/code&gt; &lt;/a&gt;オブジェクトにタイプキャストできます。</target>
        </trans-unit>
        <trans-unit id="4df3bd992ed9cf08b8043aa23cc9ef35cfb0d899" translate="yes" xml:space="preserve">
          <source>The returned parameters may be the same that were used to initialize this cipher, or may contain a combination of default and random parameter values used by the underlying cipher implementation if this cipher requires algorithm parameters but was not initialized with any.</source>
          <target state="translated">返されるパラメータは、この暗号の初期化に使用されたものと同じか、この暗号がアルゴリズムパラメータを必要としているにもかかわらず初期化されていない場合は、基礎となる暗号の実装で使用されるデフォルトパラメータとランダムパラメータの組み合わせが含まれているかもしれません。</target>
        </trans-unit>
        <trans-unit id="752ffb538b7e9750a71c7c4cf9e60e4eee90c425" translate="yes" xml:space="preserve">
          <source>The returned parameters may be the same that were used to initialize this signature engine, or may contain a combination of default and randomly generated parameter values used by the underlying signature implementation if this signature engine requires algorithm parameters but was not initialized with any.</source>
          <target state="translated">返されるパラメータは、このシグネチャエンジンの初期化に使用されたものと同じであってもよいし、このシグネチャエンジンがアルゴリズムパラメータを必要とするが、何も初期化されていない場合には、基礎となるシグネチャ実装によって使用されるデフォルトのパラメータ値とランダムに生成されたパラメータ値の組み合わせを含んでいてもよい。</target>
        </trans-unit>
        <trans-unit id="e45bd612510ae15a9437f55deeaebac11cc09c8c" translate="yes" xml:space="preserve">
          <source>The returned parameters may be the same that were used to initialize this signature, or may contain a combination of default and randomly generated parameter values used by the underlying signature implementation if this signature requires algorithm parameters but was not initialized with any.</source>
          <target state="translated">返されるパラメータは、このシグネチャを初期化するために使用されたものと同じであってもよいし、このシグネチャがアルゴリズムパラメータを必要とするが、何も初期化されていない場合には、基礎となるシグネチャの実装で使用されるデフォルトのパラメータ値とランダムに生成されたパラメータ値の組み合わせを含んでいてもよい。</target>
        </trans-unit>
        <trans-unit id="1c3309fd588c4ac6caa981d38e4c41575c42f8ec" translate="yes" xml:space="preserve">
          <source>The returned path string uses the default name &lt;a href=&quot;filesystem#getSeparator()&quot;&gt;&lt;code&gt;separator&lt;/code&gt;&lt;/a&gt; to separate names in the path.</source>
          <target state="translated">返されるパス文字列は、デフォルトの名前&lt;a href=&quot;filesystem#getSeparator()&quot;&gt; &lt;code&gt;separator&lt;/code&gt; &lt;/a&gt;文字を使用して、パス内の名前を区切ります。</target>
        </trans-unit>
        <trans-unit id="31a706d9a79d6d8447286cc51c0dbac2857f3fb0" translate="yes" xml:space="preserve">
          <source>The returned path string uses the default name &lt;a href=&quot;filesystem#getSeparator--&quot;&gt;&lt;code&gt;separator&lt;/code&gt;&lt;/a&gt; to separate names in the path.</source>
          <target state="translated">返されるパス文字列は、デフォルトの名前&lt;a href=&quot;filesystem#getSeparator--&quot;&gt; &lt;code&gt;separator&lt;/code&gt; &lt;/a&gt;文字を使用してパス内の名前を区切ります。</target>
        </trans-unit>
        <trans-unit id="b0933f83db192e30cf7d1d42e8e9f97596c83f59" translate="yes" xml:space="preserve">
          <source>The returned paths are for the specified stratum (see &lt;a href=&quot;location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; for a description of strata). In the reference implementation, for strata which do not explicitly specify source path (the Java programming language stratum never does), the returned strings are the &lt;a href=&quot;#sourceNames(java.lang.String)&quot;&gt;&lt;code&gt;sourceNames(String)&lt;/code&gt;&lt;/a&gt; prefixed by the package name of this ReferenceType converted to a platform dependent path. For example, on a Windows platform, &lt;code&gt;java.lang.Thread&lt;/code&gt; would return a List containing one element: &lt;code&gt;&quot;java\lang\Thread.java&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf31a0a552eb3e572f95b3b75985ef817599500" translate="yes" xml:space="preserve">
          <source>The returned period is immutable and thread-safe.</source>
          <target state="translated">返される期間は不変であり、スレッドセーフです。</target>
        </trans-unit>
        <trans-unit id="0fc1b4afe410c4184d3ee0067023a81a530b2ac3" translate="yes" xml:space="preserve">
          <source>The returned queue will be serializable if the specified queue is serializable.</source>
          <target state="translated">返されたキューは、指定されたキューがシリアライズ可能な場合、シリアライズ可能になります。</target>
        </trans-unit>
        <trans-unit id="94748f1f2e891952e253a00d663b435df6de9323" translate="yes" xml:space="preserve">
          <source>The returned request will control stepping only in the specified &lt;code&gt;thread&lt;/code&gt;; all other threads will be unaffected. A &lt;code&gt;size&lt;/code&gt; value of &lt;a href=&quot;steprequest#STEP_MIN&quot;&gt;&lt;code&gt;StepRequest.STEP_MIN&lt;/code&gt;&lt;/a&gt; will generate a step event each time the code index changes. It represents the smallest step size available and often maps to the instruction level. A &lt;code&gt;size&lt;/code&gt; value of &lt;a href=&quot;steprequest#STEP_LINE&quot;&gt;&lt;code&gt;StepRequest.STEP_LINE&lt;/code&gt;&lt;/a&gt; will generate a step event each time the source line changes unless line number information is not available, in which case a STEP_MIN will be done instead. For example, no line number information is available during the execution of a method that has been rendered obsolete by by a &lt;a href=&quot;../virtualmachine#redefineClasses(java.util.Map)&quot;&gt;&lt;code&gt;VirtualMachine.redefineClasses(java.util.Map&amp;lt;? extends com.sun.jdi.ReferenceType, byte[]&amp;gt;)&lt;/code&gt;&lt;/a&gt; operation. A &lt;code&gt;depth&lt;/code&gt; value of &lt;a href=&quot;steprequest#STEP_INTO&quot;&gt;&lt;code&gt;StepRequest.STEP_INTO&lt;/code&gt;&lt;/a&gt; will generate step events in any called methods. A &lt;code&gt;depth&lt;/code&gt; value of &lt;a href=&quot;steprequest#STEP_OVER&quot;&gt;&lt;code&gt;StepRequest.STEP_OVER&lt;/code&gt;&lt;/a&gt; restricts step events to the current frame or caller frames. A &lt;code&gt;depth&lt;/code&gt; value of &lt;a href=&quot;steprequest#STEP_OUT&quot;&gt;&lt;code&gt;StepRequest.STEP_OUT&lt;/code&gt;&lt;/a&gt; restricts step events to caller frames only. All depth restrictions are relative to the call stack immediately before the step takes place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be45c831c6cb6ad3b20e650176014c1026fccd42" translate="yes" xml:space="preserve">
          <source>The returned set has an ordering equivalent to &lt;a href=&quot;../collections#reverseOrder(java.util.Comparator)&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(comparator())&lt;/code&gt;. The expression &lt;code&gt;s.descendingSet().descendingSet()&lt;/code&gt; returns a view of &lt;code&gt;s&lt;/code&gt; essentially equivalent to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">返されるセットには、&lt;a href=&quot;../collections#reverseOrder(java.util.Comparator)&quot;&gt; &lt;code&gt;Collections.reverseOrder&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(comparator())&lt;/code&gt; と同等の順序があります。式 &lt;code&gt;s.descendingSet().descendingSet()&lt;/code&gt; は、本質的に &lt;code&gt;s&lt;/code&gt; と同等の &lt;code&gt;s&lt;/code&gt; のビューを返します。</target>
        </trans-unit>
        <trans-unit id="4e3b490a0b68921e5f2d54982954ae5db0e3015e" translate="yes" xml:space="preserve">
          <source>The returned set has an ordering equivalent to &lt;a href=&quot;../collections#reverseOrder-java.util.Comparator-&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(comparator())&lt;/code&gt;. The expression &lt;code&gt;s.descendingSet().descendingSet()&lt;/code&gt; returns a view of &lt;code&gt;s&lt;/code&gt; essentially equivalent to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">返されるセットには、&lt;a href=&quot;../collections#reverseOrder-java.util.Comparator-&quot;&gt; &lt;code&gt;Collections.reverseOrder&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(comparator())&lt;/code&gt; と同等の順序があります。式 &lt;code&gt;s.descendingSet().descendingSet()&lt;/code&gt; は、本質的に &lt;code&gt;s&lt;/code&gt; と同等の &lt;code&gt;s&lt;/code&gt; のビューを返します。</target>
        </trans-unit>
        <trans-unit id="377684bc5b679d5593f89c67fdae0d1615f86030" translate="yes" xml:space="preserve">
          <source>The returned set has an ordering equivalent to &lt;a href=&quot;collections#reverseOrder(java.util.Comparator)&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(comparator())&lt;/code&gt;. The expression &lt;code&gt;s.descendingSet().descendingSet()&lt;/code&gt; returns a view of &lt;code&gt;s&lt;/code&gt; essentially equivalent to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">返されるセットには、&lt;a href=&quot;collections#reverseOrder(java.util.Comparator)&quot;&gt; &lt;code&gt;Collections.reverseOrder&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(comparator())&lt;/code&gt; と同等の順序があります。式 &lt;code&gt;s.descendingSet().descendingSet()&lt;/code&gt; は、本質的に &lt;code&gt;s&lt;/code&gt; と同等の &lt;code&gt;s&lt;/code&gt; のビューを返します。</target>
        </trans-unit>
        <trans-unit id="f3e0a450b88e9e02addbc6c115aa54b248453093" translate="yes" xml:space="preserve">
          <source>The returned set has an ordering equivalent to &lt;code&gt;&lt;a href=&quot;collections#reverseOrder-java.util.Comparator-&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;(comparator())&lt;/code&gt;. The expression &lt;code&gt;s.descendingSet().descendingSet()&lt;/code&gt; returns a view of &lt;code&gt;s&lt;/code&gt; essentially equivalent to &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">返されるセットには、 &lt;code&gt;&lt;a href=&quot;collections#reverseOrder-java.util.Comparator-&quot;&gt;&lt;code&gt;Collections.reverseOrder&lt;/code&gt;&lt;/a&gt;(comparator())&lt;/code&gt; と同等の順序があります。式 &lt;code&gt;s.descendingSet().descendingSet()&lt;/code&gt; は、本質的に &lt;code&gt;s&lt;/code&gt; と同等の &lt;code&gt;s&lt;/code&gt; のビューを返します。</target>
        </trans-unit>
        <trans-unit id="220883a1d6410f4ba7ef330e4aa7ccfbc79da085" translate="yes" xml:space="preserve">
          <source>The returned set is a modifiable copy of the flags.</source>
          <target state="translated">返されるセットは、フラグの変更可能なコピーです。</target>
        </trans-unit>
        <trans-unit id="c5cb0f1cda390591cbbfdd982f4f651a475f6f50" translate="yes" xml:space="preserve">
          <source>The returned set is a modifiable copy of the permissions.</source>
          <target state="translated">返されるセットは、パーミッションの変更可能なコピーです。</target>
        </trans-unit>
        <trans-unit id="130457322e83b65d75a40390b0669abbd4a7d5d4" translate="yes" xml:space="preserve">
          <source>The returned set is not backed by the &lt;code&gt;Properties&lt;/code&gt; object. Changes to this &lt;code&gt;Properties&lt;/code&gt; are not reflected in the set, or vice versa.</source>
          <target state="translated">返されたセットは、 &lt;code&gt;Properties&lt;/code&gt; オブジェクトによってサポートされていません。この &lt;code&gt;Properties&lt;/code&gt; への変更はセットに反映されず、その逆も同様です。</target>
        </trans-unit>
        <trans-unit id="109db5fe06aff8f3e5ce1040e372e7064c0c41dd" translate="yes" xml:space="preserve">
          <source>The returned set is not backed by this &lt;code&gt;Properties&lt;/code&gt; object. Changes to this &lt;code&gt;Properties&lt;/code&gt; object are not reflected in the returned set.</source>
          <target state="translated">返されたセットは、この &lt;code&gt;Properties&lt;/code&gt; オブジェクトによってサポートされていません。この &lt;code&gt;Properties&lt;/code&gt; オブジェクトへの変更は、返されるセットには反映されません。</target>
        </trans-unit>
        <trans-unit id="47d177e63a245cb42be905e7f49ce82ba1aab77e" translate="yes" xml:space="preserve">
          <source>The returned set of associations is a snapshot of the open associations at the time that this method is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9bbc6259b7b305420033286153988e609e2dfe" translate="yes" xml:space="preserve">
          <source>The returned set will be serializable if the specified set is serializable.</source>
          <target state="translated">返されたセットは、指定されたセットがシリアライズ可能な場合、シリアライズ可能なセットになります。</target>
        </trans-unit>
        <trans-unit id="6add43a3d565273146ff21959e52c46e37133f8b" translate="yes" xml:space="preserve">
          <source>The returned set will throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; on an attempt to insert an element outside its range.</source>
          <target state="translated">返されたセットは、その範囲外に要素を挿入しようとすると &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="08dbebf4ee48b0815ada6801ab8ff9946c69da0f" translate="yes" xml:space="preserve">
          <source>The returned socket is configured using the socket options established for this factory, and is set to use server mode when handshaking (see &lt;a href=&quot;sslsocket#setUseClientMode(boolean)&quot;&gt;&lt;code&gt;SSLSocket.setUseClientMode(boolean)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">返されるソケットは、このファクトリ用に確立されたソケットオプションを使用して構成され、ハンドシェイク時にサーバーモードを使用するように設定されます（&lt;a href=&quot;sslsocket#setUseClientMode(boolean)&quot;&gt; &lt;code&gt;SSLSocket.setUseClientMode(boolean)&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="36ef4c7e56e059e7cc6ecb7f25266519a33c9874" translate="yes" xml:space="preserve">
          <source>The returned socket is configured using the socket options established for this factory, and is set to use server mode when handshaking (see &lt;a href=&quot;sslsocket#setUseClientMode-boolean-&quot;&gt;&lt;code&gt;SSLSocket.setUseClientMode(boolean)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">返されるソケットは、このファクトリ用に確立されたソケットオプションを使用して構成され、ハンドシェイク時にサーバーモードを使用するように設定されます（&lt;a href=&quot;sslsocket#setUseClientMode-boolean-&quot;&gt; &lt;code&gt;SSLSocket.setUseClientMode(boolean)&lt;/code&gt; を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="8f90f95fa6a4a814b30bb64a73971367f5cea036" translate="yes" xml:space="preserve">
          <source>The returned sorted map will be serializable if the specified sorted map is serializable.</source>
          <target state="translated">返されたソートマップは、指定されたソートマップがシリアライズ可能な場合にシリアライズ可能になります。</target>
        </trans-unit>
        <trans-unit id="84b2dfe035ba12d83875affd06b6d4712350f778" translate="yes" xml:space="preserve">
          <source>The returned sorted set will be serializable if the specified sorted set is serializable.</source>
          <target state="translated">返されたソートセットは、指定されたソートセットがシリアライズ可能な場合にシリアライズ可能になります。</target>
        </trans-unit>
        <trans-unit id="0daff3577dae1f88c6b38a7fd8e4b3abd97adeb1" translate="yes" xml:space="preserve">
          <source>The returned spliterator always reports the characteristics &lt;code&gt;SIZED&lt;/code&gt; and &lt;code&gt;SUBSIZED&lt;/code&gt;. The caller may provide additional characteristics for the spliterator to report. (For example, if it is known the array will not be further modified, specify &lt;code&gt;IMMUTABLE&lt;/code&gt;; if the array data is considered to have an an encounter order, specify &lt;code&gt;ORDERED&lt;/code&gt;). The method &lt;a href=&quot;arrays#spliterator-long:A-int-int-&quot;&gt;&lt;code&gt;Arrays.spliterator(long[], int, int)&lt;/code&gt;&lt;/a&gt; can often be used instead, which returns a spliterator that reports &lt;code&gt;SIZED&lt;/code&gt;, &lt;code&gt;SUBSIZED&lt;/code&gt;, &lt;code&gt;IMMUTABLE&lt;/code&gt;, and &lt;code&gt;ORDERED&lt;/code&gt;.</source>
          <target state="translated">返されたスプリッターは常に特性 &lt;code&gt;SIZED&lt;/code&gt; および &lt;code&gt;SUBSIZED&lt;/code&gt; を報告します。呼び出し元は、スプリテレーターが報告する追加の特性を提供できます。 （たとえば、配列がさらに変更されないことがわかっている場合は、 &lt;code&gt;IMMUTABLE&lt;/code&gt; を指定します。配列データが遭遇順序を持つと見なされる場合は、 &lt;code&gt;ORDERED&lt;/code&gt; を指定します）。&lt;a href=&quot;arrays#spliterator-long:A-int-int-&quot;&gt; &lt;code&gt;Arrays.spliterator(long[], int, int)&lt;/code&gt; &lt;/a&gt;メソッドがよく使用され、 &lt;code&gt;SIZED&lt;/code&gt; 、 &lt;code&gt;SUBSIZED&lt;/code&gt; 、 &lt;code&gt;IMMUTABLE&lt;/code&gt; 、 &lt;code&gt;ORDERED&lt;/code&gt; を報告するスプリッターを返します。</target>
        </trans-unit>
        <trans-unit id="e608e572bf2565a5091c6b2b59f30af46dea54ce" translate="yes" xml:space="preserve">
          <source>The returned spliterator always reports the characteristics &lt;code&gt;SIZED&lt;/code&gt; and &lt;code&gt;SUBSIZED&lt;/code&gt;. The caller may provide additional characteristics for the spliterator to report. (For example, if it is known the array will not be further modified, specify &lt;code&gt;IMMUTABLE&lt;/code&gt;; if the array data is considered to have an encounter order, specify &lt;code&gt;ORDERED&lt;/code&gt;). The method &lt;a href=&quot;arrays#spliterator(long%5B%5D,int,int)&quot;&gt;&lt;code&gt;Arrays.spliterator(long[], int, int)&lt;/code&gt;&lt;/a&gt; can often be used instead, which returns a spliterator that reports &lt;code&gt;SIZED&lt;/code&gt;, &lt;code&gt;SUBSIZED&lt;/code&gt;, &lt;code&gt;IMMUTABLE&lt;/code&gt;, and &lt;code&gt;ORDERED&lt;/code&gt;.</source>
          <target state="translated">返されるスプリッターは、常に特性 &lt;code&gt;SIZED&lt;/code&gt; および &lt;code&gt;SUBSIZED&lt;/code&gt; を報告します。呼び出し元は、スプリッターが報告する追加の特性を提供する場合があります。（たとえば、配列がそれ以上変更されないことがわかっている場合は、 &lt;code&gt;IMMUTABLE&lt;/code&gt; を指定します。配列データに遭遇順序があると見なされる場合は、 &lt;code&gt;ORDERED&lt;/code&gt; を指定します）。&lt;a href=&quot;arrays#spliterator(long%5B%5D,int,int)&quot;&gt; &lt;code&gt;Arrays.spliterator(long[], int, int)&lt;/code&gt; &lt;/a&gt;メソッドを代わりに使用できることがよくあり &lt;code&gt;ORDERED&lt;/code&gt; 。この &lt;code&gt;IMMUTABLE&lt;/code&gt; 、 &lt;code&gt;SIZED&lt;/code&gt; 、 &lt;code&gt;SUBSIZED&lt;/code&gt; 、IMMUTABLE、およびORDEREDを報告するスプリッターを返します。</target>
        </trans-unit>
        <trans-unit id="3f1d245446dcb633ef538a6c950f3a6bc13a27b6" translate="yes" xml:space="preserve">
          <source>The returned spliterator always reports the characteristics &lt;code&gt;SIZED&lt;/code&gt; and &lt;code&gt;SUBSIZED&lt;/code&gt;. The caller may provide additional characteristics for the spliterator to report; it is common to additionally specify &lt;code&gt;IMMUTABLE&lt;/code&gt; and &lt;code&gt;ORDERED&lt;/code&gt;.</source>
          <target state="translated">返されたスプリッターは常に特性 &lt;code&gt;SIZED&lt;/code&gt; および &lt;code&gt;SUBSIZED&lt;/code&gt; を報告します。呼び出し元は、スプリテレーターが報告する追加の特性を提供できます。さらに、 &lt;code&gt;IMMUTABLE&lt;/code&gt; および &lt;code&gt;ORDERED&lt;/code&gt; を指定するのが一般的です。</target>
        </trans-unit>
        <trans-unit id="9c6cec62aaea6011c796172046e0e045b666f75f" translate="yes" xml:space="preserve">
          <source>The returned spliterator effectively allows to slice a segment into disjoint sub-segments, which can then be processed in parallel by multiple threads (if the access mode &lt;a href=&quot;#ACQUIRE&quot;&gt;&lt;code&gt;ACQUIRE&lt;/code&gt;&lt;/a&gt; is set). While closing the segment (see &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;) during pending concurrent execution will generally fail with an exception, it is possible to close a segment when a spliterator has been obtained but no thread is actively working on it using &lt;a href=&quot;../../../../java.base/java/util/spliterator#tryAdvance(java.util.function.Consumer)&quot;&gt;&lt;code&gt;Spliterator.tryAdvance(Consumer)&lt;/code&gt;&lt;/a&gt;; in such cases, any subsequent call to &lt;a href=&quot;../../../../java.base/java/util/spliterator#tryAdvance(java.util.function.Consumer)&quot;&gt;&lt;code&gt;Spliterator.tryAdvance(Consumer)&lt;/code&gt;&lt;/a&gt; will fail with an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448ee2ba55f195d0baa345b55208a1fe5ff52b70" translate="yes" xml:space="preserve">
          <source>The returned spliterator is &lt;a href=&quot;package-summary#Weakly&quot;&gt;&lt;i&gt;weakly consistent&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">返されたスプリッターは&lt;a href=&quot;package-summary#Weakly&quot;&gt;&lt;i&gt;一貫性&lt;/i&gt;&lt;/a&gt;が&lt;i&gt;弱い&lt;/i&gt;です。</target>
        </trans-unit>
        <trans-unit id="6f2400d7a2aaaa17fc5812d2a385fbf8098fa7b6" translate="yes" xml:space="preserve">
          <source>The returned spliterator should report the set of characteristics derived from the stream pipeline (namely the characteristics derived from the stream source spliterator and the intermediate operations). Implementations may report a sub-set of those characteristics. For example, it may be too expensive to compute the entire set for some or all possible stream pipelines.</source>
          <target state="translated">返されたスプリッタは、ストリームパイプラインに由来する特性のセット(すなわち、ストリームソーススプリッタと中間演算に由来する特性)を報告することが望ましい。実装は、それらの特性のサブセットを報告してもよい。例えば、いくつかまたはすべての可能性のあるストリームパイプラインのためにセット全体を計算するのはコストがかかりすぎるかもしれない。</target>
        </trans-unit>
        <trans-unit id="6234e63cf95b525ef3e4e3cac2e74c567f7b62ce" translate="yes" xml:space="preserve">
          <source>The returned spliterator splits the segment according to the specified sequence layout; that is, if the supplied layout is a sequence layout whose element count is &lt;code&gt;N&lt;/code&gt;, then calling &lt;a href=&quot;../../../../java.base/java/util/spliterator#trySplit()&quot;&gt;&lt;code&gt;Spliterator.trySplit()&lt;/code&gt;&lt;/a&gt; will result in a spliterator serving approximatively &lt;code&gt;N/2&lt;/code&gt; elements (depending on whether N is even or not). As such, splitting is possible as long as &lt;code&gt;N &amp;gt;= 2&lt;/code&gt;. The spliterator returns segments that feature the same &lt;a href=&quot;#access-modes&quot;&gt;access modes&lt;/a&gt; as the given segment less the &lt;a href=&quot;#CLOSE&quot;&gt;&lt;code&gt;CLOSE&lt;/code&gt;&lt;/a&gt; access mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39320309f6acb1e293c4b0f88be30f7d21cd9419" translate="yes" xml:space="preserve">
          <source>The returned stream contains a reference to an open directory. The directory is closed by closing the stream.</source>
          <target state="translated">返されるストリームには、開いているディレクトリへの参照が含まれています。ディレクトリはストリームを閉じることで閉じられます。</target>
        </trans-unit>
        <trans-unit id="7b8591462e635ab93bf50430fdf54a1ccdf66f0b" translate="yes" xml:space="preserve">
          <source>The returned stream contains a reference to an open file. The file is closed by closing the stream.</source>
          <target state="translated">返されるストリームには、開いているファイルへの参照が含まれています。ファイルはストリームを閉じることで閉じられます。</target>
        </trans-unit>
        <trans-unit id="d2ceba9dd83dd39b4220abff8b7e79783a77866b" translate="yes" xml:space="preserve">
          <source>The returned stream contains references to one or more open directories. The directories are closed by closing the stream.</source>
          <target state="translated">返されるストリームには、1 つ以上の開いているディレクトリへの参照が含まれます。ディレクトリは、ストリームを閉じることで閉じられます。</target>
        </trans-unit>
        <trans-unit id="17f6fef10c7c1d7faa5f4bb6d1cad19315fbac4b" translate="yes" xml:space="preserve">
          <source>The returned stream encapsulates a &lt;a href=&quot;../../io/reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt;. If timely disposal of file system resources is required, the try-with-resources construct should be used to ensure that the stream's &lt;a href=&quot;../../util/stream/basestream#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method is invoked after the stream operations are completed.</source>
          <target state="translated">返されたストリームは&lt;a href=&quot;../../io/reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; を&lt;/a&gt;カプセル化します。ファイルシステムリソースをタイムリーに破棄する必要がある場合は、try-with-resourcesコンストラクトを使用して、ストリーム操作の完了後にストリームの&lt;a href=&quot;../../util/stream/basestream#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="1ddd602fbd78f0cc6b843db33e616208261076d4" translate="yes" xml:space="preserve">
          <source>The returned stream encapsulates a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt;. If timely disposal of file system resources is required, the &lt;code&gt;try&lt;/code&gt;-with-resources construct should be used to ensure that the stream's &lt;a href=&quot;../../util/stream/basestream#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method is invoked after the stream operations are completed.</source>
          <target state="translated">返されたストリームは&lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; を&lt;/a&gt;カプセル化します。ファイルシステムリソースをタイムリーに破棄する必要がある場合は、 &lt;code&gt;try&lt;/code&gt; -with-resourcesコンストラクトを使用して、ストリーム操作の完了後にストリームの&lt;a href=&quot;../../util/stream/basestream#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="5d94964406c818caac85b35a4e7cb8afabde4f74" translate="yes" xml:space="preserve">
          <source>The returned stream encapsulates one or more &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt;s. If timely disposal of file system resources is required, the &lt;code&gt;try&lt;/code&gt;-with-resources construct should be used to ensure that the stream's &lt;a href=&quot;../../util/stream/basestream#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method is invoked after the stream operations are completed. Operating on a closed stream will result in an &lt;a href=&quot;../../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されたストリームは、1つ以上の&lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; を&lt;/a&gt;カプセル化します。ファイルシステムリソースをタイムリーに破棄する必要がある場合は、 &lt;code&gt;try&lt;/code&gt; -with-resourcesコンストラクトを使用して、ストリーム操作の完了後にストリームの&lt;a href=&quot;../../util/stream/basestream#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されるようにする必要があります。閉じたストリームを操作すると、&lt;a href=&quot;../../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="0a3477259359f64c96ff7a386ac7319ab96e368d" translate="yes" xml:space="preserve">
          <source>The returned string corresponds to the single-string representation of a Kerberos Principal name as specified in Section 2.1 of &lt;a href=&quot;http://www.ietf.org/rfc/rfc1964.txt&quot;&gt;RFC 1964&lt;/a&gt;.</source>
          <target state="translated">返される文字列は、&lt;a href=&quot;http://www.ietf.org/rfc/rfc1964.txt&quot;&gt;RFC 1964の&lt;/a&gt;セクション2.1で指定されているKerberosプリンシパル名の単一文字列表現に対応しています。</target>
        </trans-unit>
        <trans-unit id="aeaa1ef305cb08fffd452f88478ffdf5d9519170" translate="yes" xml:space="preserve">
          <source>The returned string corresponds to the single-string representation of a Kerberos Principal name as specified in Section 2.1 of &lt;a href=&quot;https://www.ietf.org/rfc/rfc1964.txt&quot;&gt;RFC 1964&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26feeececce41b9d8c59910820970f32523261ba" translate="yes" xml:space="preserve">
          <source>The returned string is the unqualified name of the source file for this Location. For example, &lt;code&gt;java.lang.Thread&lt;/code&gt; would return &lt;code&gt;&quot;Thread.java&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039a60e7c46840b10c86b70b65de45c83c9d707d" translate="yes" xml:space="preserve">
          <source>The returned string must be &lt;a href=&quot;https://www.w3.org/TR/html52/dom.html#flow-content&quot;&gt;flow content&lt;/a&gt;, or any valid fragment of HTML code that may appear in the body of a document. There may be additional constraints, depending on how the tag is to be used in a documentation comment: for example, if the tag may be used within an inline element such as &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt;, the taglet must not return a string containing block tags, like &lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841859c36cd0dcf425672ed5d01487176dcb8a7a" translate="yes" xml:space="preserve">
          <source>The returned string must be suitable content for a definition list, or &lt;code&gt;&amp;lt;dl&amp;gt;&lt;/code&gt; element. It will typically be a series of pairs of &lt;code&gt;&amp;lt;dt&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;dd&amp;gt;&lt;/code&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a1f202277c175f03aecd904b2c2e11e846fece" translate="yes" xml:space="preserve">
          <source>The returned subscriber delegates its &lt;a href=&quot;httpresponse.bodysubscriber#getBody()&quot;&gt;&lt;code&gt;getBody()&lt;/code&gt;&lt;/a&gt; method to the downstream subscriber.</source>
          <target state="translated">返されたサブスクライバーは、&lt;a href=&quot;httpresponse.bodysubscriber#getBody()&quot;&gt; &lt;code&gt;getBody()&lt;/code&gt; &lt;/a&gt;メソッドをダウンストリームサブスクライバーに委任します。</target>
        </trans-unit>
        <trans-unit id="65a647177496c8d5054ff3cb3925fa8f89b66ac7" translate="yes" xml:space="preserve">
          <source>The returned system identifier is always &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">返されるシステム識別子は常に &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e0df4196fa6df65f0d8f0e826fb8a455f9827860" translate="yes" xml:space="preserve">
          <source>The returned value can be different from the &lt;code&gt;SecureRandomParameters&lt;/code&gt; object passed into a &lt;code&gt;getInstance&lt;/code&gt; method, but it cannot change during the lifetime of this &lt;code&gt;SecureRandom&lt;/code&gt; object.</source>
          <target state="translated">戻り値は、 &lt;code&gt;getInstance&lt;/code&gt; メソッドに渡される &lt;code&gt;SecureRandomParameters&lt;/code&gt; オブジェクトとは異なる場合がありますが、この &lt;code&gt;SecureRandom&lt;/code&gt; オブジェクトの存続期間中は変更できません。</target>
        </trans-unit>
        <trans-unit id="655c3437b11ed617a579abf2fa9ff34b511b4b98" translate="yes" xml:space="preserve">
          <source>The returned value consists of a quote ('&quot;'), a sequence of characters corresponding to the characters of &lt;code&gt;s&lt;/code&gt;, and another quote. Characters in &lt;code&gt;s&lt;/code&gt; appear unchanged within the returned value except:</source>
          <target state="translated">戻り値は、引用符（ '&quot;'）、 &lt;code&gt;s&lt;/code&gt; の文字に対応する文字のシーケンス、および別の引用符で構成されます。sの文字は、次 &lt;code&gt;s&lt;/code&gt; 場合を除いて、戻り値内で変更されずに表示されます。</target>
        </trans-unit>
        <trans-unit id="e492071d6dc92885ae84e7ac0ea668a268c3161b" translate="yes" xml:space="preserve">
          <source>The returned value is a hint, rather than a guarantee, because the underlying operating system may have paged out some of the buffer's data by the time that an invocation of this method returns.</source>
          <target state="translated">このメソッドの呼び出しが返されるまでに、 オペレーティングシステムがバッファのデータの一部をページアウトしている可能性があるため、 返される値は保証ではなくヒントです。</target>
        </trans-unit>
        <trans-unit id="0bbbc5f5c0326fb3e876924f2d2c9ce847035850" translate="yes" xml:space="preserve">
          <source>The returned value is a hint, rather than a guarantee, because the underlying operating system may have paged out some of the segment's data by the time that an invocation of this method returns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425df3891c9eb5df84066e4a31f4cde44028c0f6" translate="yes" xml:space="preserve">
          <source>The returned value is relying upon information from some underlying system font, and the correctness of that information is outside of AWT's control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f3edcf1a031a34eab7ff35463ec7ac1c19de38" translate="yes" xml:space="preserve">
          <source>The returned value may be unmodifiable. If it is modifiable, changing it has no effect on this ObjectName.</source>
          <target state="translated">返される値は変更できない場合があります。変更可能な場合、それを変更してもこの ObjectName には何の影響もありません。</target>
        </trans-unit>
        <trans-unit id="2ea1bfc4ee9b99c8f427dd634732ade255abe11d" translate="yes" xml:space="preserve">
          <source>The returned value may or may not be identical to &lt;code&gt;name&lt;/code&gt;. Calling this method twice with the same parameters may return the same object or two equal but not identical objects.</source>
          <target state="translated">戻り値は &lt;code&gt;name&lt;/code&gt; と同じ場合も、そうでない場合もあります。同じパラメーターでこのメソッドを2回呼び出すと、同じオブジェクトまたは2つの等しいが同一ではないオブジェクトが返される場合があります。</target>
        </trans-unit>
        <trans-unit id="0d51a48610ecce7391c6a83d6ba1a127d5dea1ff" translate="yes" xml:space="preserve">
          <source>The returned value represents the maximum column size for the given parameter. For numeric data, this is the maximum precision. For character data, this is the length in characters. For datetime datatypes, this is the length in characters of the String representation (assuming the maximum allowed precision of the fractional seconds component). For binary data, this is the length in bytes. For the ROWID datatype, this is the length in bytes. 0 is returned for data types where the column size is not applicable.</source>
          <target state="translated">返される値は、指定されたパラメータの最大列サイズを表します。数値データの場合、これは最大精度です。文字データの場合、これは文字単位の長さです。データ型が時刻データ型の場合、これは文字列表現の長さです(小数の秒成分の最大許容精度を想定しています)。バイナリ・データの場合、これはバイト単位の長さです。ROWIDデータ型の場合、これはバイト単位の長さです。列サイズが適用されないデータ型の場合、0 が返されます。</target>
        </trans-unit>
        <trans-unit id="acbe0bb1e8cac70ef2ee8e36d939f9c27237d0ec" translate="yes" xml:space="preserve">
          <source>The returned var handle can be used to conveniently treat unsigned primitive data types as if they were a wider signed primitive type. For example, it is often convenient to model an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c26af39a02a98d0e1210295352bef1d03e4602" translate="yes" xml:space="preserve">
          <source>The returned var handle will feature the variable type &lt;code&gt;adaptedType&lt;/code&gt;, and the same access coordinates, the same access modes (see &lt;a href=&quot;../../../../java.base/java/lang/invoke/varhandle.accessmode&quot;&gt;&lt;code&gt;VarHandle.AccessMode&lt;/code&gt;&lt;/a&gt;, and the same atomic access guarantees, as those featured by the &lt;code&gt;target&lt;/code&gt; var handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40fbf63a5d2b277e35cf6ac3daf6ae7ec5474ac" translate="yes" xml:space="preserve">
          <source>The returned versions remain available and valid for the lifetime of the application. A dynamic provider may increase the set of versions as more data becomes available.</source>
          <target state="translated">返されたバージョンは、利用可能なままで、アプリケーションの有効期間中は有効です。動的なプロバイダは、より多くのデータが利用可能になるとバージョンのセットを増やすことができます。</target>
        </trans-unit>
        <trans-unit id="37fa82a55b240bd660f3e3d8cef39a1191e27f3f" translate="yes" xml:space="preserve">
          <source>The returned zone IDs remain available and valid for the lifetime of the application. A dynamic provider may increase the set of IDs as more data becomes available.</source>
          <target state="translated">返されたゾーンIDは、利用可能なままであり、アプリケーションの有効期間中は有効である。動的なプロバイダは、利用可能なデータが増えれば、IDのセットを増やすことができます。</target>
        </trans-unit>
        <trans-unit id="ce5b7000f5b21a055cbac4854384a1e8094660e0" translate="yes" xml:space="preserve">
          <source>The returns a normalized &lt;code&gt;ZoneId&lt;/code&gt; that can be used in place of this ID. The result will have &lt;code&gt;ZoneRules&lt;/code&gt; equivalent to those returned by this object, however the ID returned by &lt;code&gt;getId()&lt;/code&gt; may be different.</source>
          <target state="translated">は、このIDの代わりに使用できる正規化された &lt;code&gt;ZoneId&lt;/code&gt; を返します。結果には、このオブジェクトによって返されるものと同等の &lt;code&gt;ZoneRules&lt;/code&gt; がありますが、 &lt;code&gt;getId()&lt;/code&gt; によって返されるIDは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="36bbd913f2a35dc1f4e96953ef2e235b576a9f17" translate="yes" xml:space="preserve">
          <source>The reverberation parameters provided by &lt;code&gt;ReverbType&lt;/code&gt; consist of the delay time and intensity of early reflections, the delay time and intensity of late reflections, and an overall decay time. Early reflections are the initial individual low-order reflections of the direct signal off the surfaces in the room. The late Reflections are the dense, high-order reflections that characterize the room's reverberation. The delay times for the start of these two reflection types give the listener a sense of the overall size and complexity of the room's shape and contents. The larger the room, the longer the reflection delay times. The early and late reflections' intensities define the gain (in decibels) of the reflected signals as compared to the direct signal. These intensities give the listener an impression of the absorptive nature of the surfaces and objects in the room. The decay time defines how long the reverberation takes to exponentially decay until it is no longer perceptible (&quot;effective zero&quot;). The larger and less absorbent the surfaces, the longer the decay time.</source>
          <target state="translated">&lt;code&gt;ReverbType&lt;/code&gt; によって提供される残響パラメーターは、初期反射の遅延時間と強度、遅延反射の遅延時間と強度、および全体的な減衰時間で構成されます。初期反射は、部屋の表面からの直接信号の最初の個々の低次反射です。後期リフレクションは、部屋の残響を特徴付ける高密度の高次のリフレクションです。これら2つの反射タイプの開始の遅延時間は、部屋の形状と内容の全体的なサイズと複雑さの感覚をリスナーに提供します。部屋が大きいほど、反射遅延時間が長くなります。初期反射と後期反射の強度は、直接信号と比較した反射信号のゲイン（デシベル単位）を定義します。これらの強度は、リスナーに部屋の表面とオブジェクトの吸収性の性質の印象を与えます。減衰時間は、残響が知覚できなくなるまで（「実効ゼロ」）、残響が指数関数的に減衰するのにかかる時間を定義します。表面が大きく、吸収性が低いほど、減衰時間は長くなります。</target>
        </trans-unit>
        <trans-unit id="b9b984f130a384b4996712c3a39651b3107b8463" translate="yes" xml:space="preserve">
          <source>The reverberation parameters provided by &lt;code&gt;ReverbType&lt;/code&gt; consist of the delay time and intensity of early reflections, the delay time and intensity of late reflections, and an overall decay time. Early reflections are the initial individual low-order reflections of the direct signal off the surfaces in the room. The late reflections are the dense, high-order reflections that characterize the room's reverberation. The delay times for the start of these two reflection types give the listener a sense of the overall size and complexity of the room's shape and contents. The larger the room, the longer the reflection delay times. The early and late reflections' intensities define the gain (in decibels) of the reflected signals as compared to the direct signal. These intensities give the listener an impression of the absorptive nature of the surfaces and objects in the room. The decay time defines how long the reverberation takes to exponentially decay until it is no longer perceptible (&quot;effective zero&quot;). The larger and less absorbent the surfaces, the longer the decay time.</source>
          <target state="translated">&lt;code&gt;ReverbType&lt;/code&gt; によって提供される残響パラメーター初期反射の遅延時間と強度、後期反射の遅延時間と強度、および全体的な減衰時間で構成されます。初期反射は、部屋の表面からの直接信号の最初の個々の低次反射です。遅い反射は、部屋の残響を特徴付ける高密度の高次反射です。これら2つの反射タイプの開始の遅延時間は、リスナーに部屋の形状と内容の全体的なサイズと複雑さの感覚を与えます。部屋が大きいほど、反射遅延時間が長くなります。初期反射と後期反射の強度は、直接信号と比較した場合の反射信号のゲイン（デシベル単位）を定義します。これらの強度は、リスナーに部屋の表面や物体の吸収性の印象を与えます。減衰時間は、残響が知覚できなくなるまで指数関数的に減衰するまでにかかる時間を定義します（「実効ゼロ」）。表面が大きく吸収性が低いほど、減衰時間が長くなります。</target>
        </trans-unit>
        <trans-unit id="2c7630f4923d39844ce7c44d0bac8d9004f68f3b" translate="yes" xml:space="preserve">
          <source>The reverse mapping is illustrated by the following change to the &lt;code&gt;ModuleMXBean&lt;/code&gt; interface:</source>
          <target state="translated">逆のマッピングは、 &lt;code&gt;ModuleMXBean&lt;/code&gt; インターフェースに対する次の変更によって示されています。</target>
        </trans-unit>
        <trans-unit id="4492356e6ba71c3c852cf9939e4f74a8d7a573fe" translate="yes" xml:space="preserve">
          <source>The revocation status of the certificate could not be determined.</source>
          <target state="translated">証明書の失効状況を判断することはできませんでした。</target>
        </trans-unit>
        <trans-unit id="119ef6d6012154c68b97d88f0635440451102e2a" translate="yes" xml:space="preserve">
          <source>The right inset of the border.</source>
          <target state="translated">ボーダーの右インセット。</target>
        </trans-unit>
        <trans-unit id="898927d0724755ab7db22d60f2744e42ca622381" translate="yes" xml:space="preserve">
          <source>The right or bottom component.</source>
          <target state="translated">右側または下側の成分。</target>
        </trans-unit>
        <trans-unit id="315fe5d039365e7227ec2a4b72b363b039df2bd0" translate="yes" xml:space="preserve">
          <source>The root class from which all event state objects shall be derived.</source>
          <target state="translated">すべてのイベント状態オブジェクトが派生するルートクラス。</target>
        </trans-unit>
        <trans-unit id="f75abe063c2e29766eb9c4fdf22b1d6554824455" translate="yes" xml:space="preserve">
          <source>The root event class for all AWT events.</source>
          <target state="translated">すべてのAWTイベントのルートイベントクラス。</target>
        </trans-unit>
        <trans-unit id="7d1ec967c823196dca7258196b828781578926c4" translate="yes" xml:space="preserve">
          <source>The root event class for all AWT events. This class and its subclasses supersede the original java.awt.Event class. Subclasses of this root AWTEvent class defined outside of the java.awt.event package should define event ID values greater than the value defined by RESERVED_ID_MAX.</source>
          <target state="translated">すべてのAWTイベントのルートイベントクラスです。このクラスとそのサブクラスは、オリジナルのjava.awt.Eventクラスよりも優先されます。java.awt.eventパッケージの外で定義されたこのルートAWTEventクラスのサブクラスは、RESERVEDED_ID_MAXで定義された値よりも大きいイベントIDを定義しなければなりません。</target>
        </trans-unit>
        <trans-unit id="8aa66cdd224b61725fb7c7f0951cf9aec6e9c9d4" translate="yes" xml:space="preserve">
          <source>The root event class for all component-level input events.</source>
          <target state="translated">すべてのコンポーネントレベルの入力イベントのルートイベントクラス。</target>
        </trans-unit>
        <trans-unit id="1b9b7f573454243c391475013425ee8ac3d59559" translate="yes" xml:space="preserve">
          <source>The root event class for all component-level input events. Input events are delivered to listeners before they are processed normally by the source where they originated. This allows listeners and component subclasses to &quot;consume&quot; the event so that the source will not process them in their default manner. For example, consuming mousePressed events on a Button component will prevent the Button from being activated.</source>
          <target state="translated">すべてのコンポーネントレベルの入力イベントのルートイベントクラス。入力イベントは、それらが発生したソースによって通常処理される前にリスナーに配信されます。これにより、リスナーとコンポーネントのサブクラスはイベントを「消費」し、ソースがデフォルトの方法で処理しないようにすることができます。例えば、Button コンポーネントで mousePressed イベントを消費すると、Button がアクティブにならないようにします。</target>
        </trans-unit>
        <trans-unit id="e57f0a87b56114c25a3425b649a0fc72c9816ae3" translate="yes" xml:space="preserve">
          <source>The root interface in the</source>
          <target state="translated">のルートインターフェースは</target>
        </trans-unit>
        <trans-unit id="d09865ec5ef96bb1232174ca8eb33da20d24915d" translate="yes" xml:space="preserve">
          <source>The root is a leaf node</source>
          <target state="translated">ルートはリーフノード</target>
        </trans-unit>
        <trans-unit id="72cdacd0ec76595acc856611a3b1130c6dda01a1" translate="yes" xml:space="preserve">
          <source>The root is collapsed</source>
          <target state="translated">根元が崩れている</target>
        </trans-unit>
        <trans-unit id="59bb7a92b878735bfc6bdf6731b3391ad71122f8" translate="yes" xml:space="preserve">
          <source>The root node has a node name of the empty string (&quot;&quot;). Every other node has an arbitrary node name, specified at the time it is created. The only restrictions on this name are that it cannot be the empty string, and it cannot contain the slash character ('/').</source>
          <target state="translated">ルート・ノードには、空文字列(&quot;&quot;)のノード名が付けられます。他のすべてのノードは、作成時に指定された任意のノード名を持ちます。この名前の唯一の制限は、空文字列にすることができず、スラッシュ文字 ('/')を含めることができないということです。</target>
        </trans-unit>
        <trans-unit id="7c4a2a95c5adac20299823e2ab805439c46a7560" translate="yes" xml:space="preserve">
          <source>The root node has an absolute path name of &lt;code&gt;&quot;/&quot;&lt;/code&gt;. Children of the root node have absolute path names of &lt;code&gt;&quot;/&quot; + &lt;/code&gt;</source>
          <target state="translated">ルートノードの絶対パス名は &lt;code&gt;&quot;/&quot;&lt;/code&gt; です。ルートノードの子には、 &lt;code&gt;&quot;/&quot; + &lt;/code&gt; 絶対パス名があります。</target>
        </trans-unit>
        <trans-unit id="3d033ca267a4e43656fa30a33c122a68a94a7f29" translate="yes" xml:space="preserve">
          <source>The root node of the &lt;code&gt;NodeIterator&lt;/code&gt;, as specified when it was created.</source>
          <target state="translated">The root node of the &lt;code&gt;NodeIterator&lt;/code&gt; , as specified when it was created.</target>
        </trans-unit>
        <trans-unit id="d6f015d10efdbb0ad4a1e372a60c869566bb49e0" translate="yes" xml:space="preserve">
          <source>The root object is completely restored when all of its fields and the objects it references are completely restored. At this point the object validation callbacks are executed in order based on their registered priorities. The callbacks are registered by objects (in the readObject special methods) as they are individually restored.</source>
          <target state="translated">ルート・オブジェクトは、そのフィールドと参照するオブジェクトのすべてが完全にリストアされると、完全にリストアされます。この時点で、オブジェクト検証コールバックは、登録された優先度に基づいて順番に実行されます。コールバックは、オブジェクトが個別にリストアされると、(readObject 特別メソッドで)オブジェクトによって登録されます。</target>
        </trans-unit>
        <trans-unit id="a2dd63def1d3b47ca894c952456612a156d812ba" translate="yes" xml:space="preserve">
          <source>The row header child.</source>
          <target state="translated">行のヘッダーの子。</target>
        </trans-unit>
        <trans-unit id="7abd29b02efd947317ce37795d7811a15d2cbbad" translate="yes" xml:space="preserve">
          <source>The row header child. Default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">The row header child. Default is &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2605996690cb3e7a1bcd3ac39232dc16f382f39c" translate="yes" xml:space="preserve">
          <source>The row header, if present and visible, gets its preferred width and the viewport's height.</source>
          <target state="translated">行ヘッダが存在し、表示されている場合、その行の幅とビューポートの高さを取得します。</target>
        </trans-unit>
        <trans-unit id="368a0506317221347890aff306183d4c221ad4af" translate="yes" xml:space="preserve">
          <source>The rule is a &lt;code&gt;CSSCharsetRule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377aa5ac1c817533652bfbc40c05fc01592b6213" translate="yes" xml:space="preserve">
          <source>The rule is a &lt;code&gt;CSSFontFaceRule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52291a8aa5284cca277c8cdbd32533837ec40b6c" translate="yes" xml:space="preserve">
          <source>The rule is a &lt;code&gt;CSSImportRule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd8e0d4e219d1f2eba921548f6799cf70cf769d" translate="yes" xml:space="preserve">
          <source>The rule is a &lt;code&gt;CSSMediaRule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4221ce3291c07892e72179b20d969dff2727a78e" translate="yes" xml:space="preserve">
          <source>The rule is a &lt;code&gt;CSSPageRule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4530f91d2c77e8e183455a252d4df7dbf8b891" translate="yes" xml:space="preserve">
          <source>The rule is a &lt;code&gt;CSSStyleRule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c0c64e3398dc278a079fe0a4f79c79410410b6" translate="yes" xml:space="preserve">
          <source>The rule is a &lt;code&gt;CSSUnknownRule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="638fc291740e16e3557281ff224cfb954c40e4a5" translate="yes" xml:space="preserve">
          <source>The rules about the first class defined in a package determining the set of certificates for the package, and the restrictions on class names are identical to those specified in the documentation for &lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-java.security.ProtectionDomain-&quot;&gt;&lt;code&gt;defineClass(String, byte[], int, int, ProtectionDomain)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パッケージの証明書のセットを決定するパッケージで定義された最初のクラスに関するルール、およびクラス名の制限は、&lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-java.security.ProtectionDomain-&quot;&gt; &lt;code&gt;defineClass(String, byte[], int, int, ProtectionDomain)&lt;/code&gt; &lt;/a&gt;のドキュメントで指定されているものと同じです。</target>
        </trans-unit>
        <trans-unit id="c634f0f52823012e70f8192869edd96115163537" translate="yes" xml:space="preserve">
          <source>The rules about the first class defined in a package determining the set of certificates for the package, the restrictions on class names, and the defined package of the class are identical to those specified in the documentation for &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt;&lt;code&gt;defineClass(String, byte[], int, int, ProtectionDomain)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The rules about the first class defined in a package determining the set of certificates for the package, the restrictions on class names, and the defined package of the class are identical to those specified in the documentation for &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt; &lt;code&gt;defineClass(String, byte[], int, int, ProtectionDomain)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6d45a10a6e24eaa7c3cdfde29bd66f6b11f5bc37" translate="yes" xml:space="preserve">
          <source>The rules are loaded via &lt;a href=&quot;zonerulesprovider&quot;&gt;&lt;code&gt;ZoneRulesProvider&lt;/code&gt;&lt;/a&gt; using a &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt;. The same rules may be shared internally between multiple zone IDs.</source>
          <target state="translated">ルールは、&lt;a href=&quot;zonerulesprovider&quot;&gt; &lt;code&gt;ZoneRulesProvider&lt;/code&gt; &lt;/a&gt;を使用して&lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; &lt;/a&gt;経由でロードされます。同じルールが複数のゾーンID間で内部的に共有される場合があります。</target>
        </trans-unit>
        <trans-unit id="b7d29710bebc6dfb854d9319d167bdaa66f76644" translate="yes" xml:space="preserve">
          <source>The rules are stored as named styles, and other information is stored to translate the context of an element to a rule quickly. The following code fragment will display the named styles, and therefore the CSS rules contained.</source>
          <target state="translated">ルールは名前付きスタイルとして格納され、その他の情報は要素のコンテキストを素早くルールに変換するために格納されます。次のコード断片は、名前付きスタイル、したがって含まれるCSSルールを表示します。</target>
        </trans-unit>
        <trans-unit id="4c558d54ff2e89b5ae0559dc27450ddadbb740a9" translate="yes" xml:space="preserve">
          <source>The rules are supplied by &lt;a href=&quot;zone/zonerulesprovider&quot;&gt;&lt;code&gt;ZoneRulesProvider&lt;/code&gt;&lt;/a&gt;. An advanced provider may support dynamic updates to the rules without restarting the Java Runtime. If so, then the result of this method may change over time. Each individual call will be still remain thread-safe.</source>
          <target state="translated">ルールは&lt;a href=&quot;zone/zonerulesprovider&quot;&gt; &lt;code&gt;ZoneRulesProvider&lt;/code&gt; &lt;/a&gt;によって提供されます。高度なプロバイダーは、Javaランタイムを再起動せずにルールの動的更新をサポートする場合があります。その場合、このメソッドの結果は時間とともに変化する可能性があります。個々の呼び出しは引き続きスレッドセーフのままです。</target>
        </trans-unit>
        <trans-unit id="1bccb89406bfb2d00bc457815b4e62d2470b7af9" translate="yes" xml:space="preserve">
          <source>The rules defining how the zone offset varies for a single time-zone.</source>
          <target state="translated">1つのタイムゾーンに対して、ゾーンオフセットがどのように変化するかを定義するルール。</target>
        </trans-unit>
        <trans-unit id="1b49d1af7b23bfa9889a2696229a5d15447e0c34" translate="yes" xml:space="preserve">
          <source>The rules for &lt;code&gt;get&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; and &lt;code&gt;is&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; collectively define the notion of a &lt;em&gt;getter&lt;/em&gt;. The rule for &lt;code&gt;set&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; defines the notion of a &lt;em&gt;setter&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;get&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; および &lt;code&gt;is&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; のルールは、&lt;em&gt;ゲッターの&lt;/em&gt;概念を集合的に定義します。 &lt;code&gt;set&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; のルールは、&lt;em&gt;セッターの&lt;/em&gt;概念を定義します。</target>
        </trans-unit>
        <trans-unit id="23679fbbad04df1e812f689c70ce1d6ec4726cea" translate="yes" xml:space="preserve">
          <source>The rules for addition add the number of week-based-years to the existing value for the week-based-year field retaining the week-of-week-based-year and day-of-week, unless the week number it too large for the target year. In that case, the week is set to the last week of the year with the same day-of-week.</source>
          <target state="translated">追加のルールでは、週数が対象の年に対して大きすぎる場合を除き、週ベースの年の週と曜日を保持したまま、週ベースの年フィールドの既存の値に週ベースの年の数を追加します。その場合、週は同じ曜日でその年の最終週に設定されます。</target>
        </trans-unit>
        <trans-unit id="9fe755e8390c62eea10e1546677bdab04050afb0" translate="yes" xml:space="preserve">
          <source>The rules for addition add the number of week-based-years to the existing value for the week-based-year field. If the resulting week-based-year only has 52 weeks, then the date will be in week 1 of the following week-based-year.</source>
          <target state="translated">追加のルールは、週ベースの年フィールドの既存の値に週ベースの年の数を追加します。結果として得られる週ベースの年が52週しかない場合、日付は次の週ベースの年の第1週になります。</target>
        </trans-unit>
        <trans-unit id="b8227871731be6c3964a85ded8d67582566b32f1" translate="yes" xml:space="preserve">
          <source>The rules for using quotes within message format patterns unfortunately have shown to be somewhat confusing. In particular, it isn't always obvious to localizers whether single quotes need to be doubled or not. Make sure to inform localizers about the rules, and tell them (for example, by using comments in resource bundle source files) which strings will be processed by &lt;code&gt;MessageFormat&lt;/code&gt;. Note that localizers may need to use single quotes in translated strings where the original version doesn't have them.</source>
          <target state="translated">メッセージ形式のパターン内で引用符を使用するためのルールは、残念ながらやや混乱を招くことがわかっています。特に、ローカライザにとって、一重引用符を二重にする必要があるかどうかは必ずしも明らかではありません。ルールについてローカライザに通知し、（たとえば、リソースバンドルソースファイルのコメントを使用して） &lt;code&gt;MessageFormat&lt;/code&gt; によって処理される文字列を伝えてください。ローカライザは、元のバージョンにない単一引用符を翻訳文字列で使用する必要がある場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="38de80f84a46f228ca25c1f0d5e10459bf313f19" translate="yes" xml:space="preserve">
          <source>The rules model all the historic and future transitions for a time-zone. &lt;a href=&quot;zoneoffsettransition&quot;&gt;&lt;code&gt;ZoneOffsetTransition&lt;/code&gt;&lt;/a&gt; is used for known transitions, typically historic. &lt;a href=&quot;zoneoffsettransitionrule&quot;&gt;&lt;code&gt;ZoneOffsetTransitionRule&lt;/code&gt;&lt;/a&gt; is used for future transitions that are based on the result of an algorithm.</source>
          <target state="translated">ルールは、タイムゾーンのすべての履歴および将来の遷移をモデル化します。&lt;a href=&quot;zoneoffsettransition&quot;&gt; &lt;code&gt;ZoneOffsetTransition&lt;/code&gt; &lt;/a&gt;は、通常は歴史的な既知の遷移に使用されます。&lt;a href=&quot;zoneoffsettransitionrule&quot;&gt; &lt;code&gt;ZoneOffsetTransitionRule&lt;/code&gt; &lt;/a&gt;は、アルゴリズムの結果に基づく将来の遷移に使用されます。</target>
        </trans-unit>
        <trans-unit id="dca1ae5cccdb05f3a9c9df600b491c9af1bbd005" translate="yes" xml:space="preserve">
          <source>The rules on special characters and quoting apply regardless of which constructor is used to make an ObjectName.</source>
          <target state="translated">特殊文字と引用符の規則は、どのコンストラクタを使用して ObjectName を作成するかに関係なく適用されます。</target>
        </trans-unit>
        <trans-unit id="1083994538afe151cee646e2eddf1109ecd48eef" translate="yes" xml:space="preserve">
          <source>The rules provide the functionality associated with a time-zone, such as finding the offset for a given instant or local date-time.</source>
          <target state="translated">このルールは、特定の瞬間やローカルの日付時間のオフセットを見つけるなど、タイムゾーンに関連した機能を提供します。</target>
        </trans-unit>
        <trans-unit id="1a48b9196407480649d1d001e180f9ae21afeae3" translate="yes" xml:space="preserve">
          <source>The rules used to interpret an &lt;code&gt;ObservedAttribute&lt;/code&gt; like &lt;code&gt;&quot;HeapMemoryUsage.used&quot;&lt;/code&gt; are as follows. Suppose the string is</source>
          <target state="translated">&lt;code&gt;&quot;HeapMemoryUsage.used&quot;&lt;/code&gt; ような &lt;code&gt;ObservedAttribute&lt;/code&gt; を解釈するために使用されるルールは次のとおりです。文字列が</target>
        </trans-unit>
        <trans-unit id="b9da9e1a0bb979727268d68de18fe949fd2aa76a" translate="yes" xml:space="preserve">
          <source>The rules will always return this offset when queried. The implementation class is immutable, thread-safe and serializable.</source>
          <target state="translated">ルールは、問い合わせの際には常にこのオフセットを返します。実装クラスは不変で、スレッドセーフ、シリアル化可能です。</target>
        </trans-unit>
        <trans-unit id="3470726a7bfc514d0ba03c927d548da38eafa9b5" translate="yes" xml:space="preserve">
          <source>The runnable method for this class.</source>
          <target state="translated">このクラスの実行可能なメソッド。</target>
        </trans-unit>
        <trans-unit id="a744db65793d8a5bd6e364f10507f38a106bc516" translate="yes" xml:space="preserve">
          <source>The runnable method for this class. This will produce an image using the current RenderableImage and RenderContext and send it to all the ImageConsumer currently registered with this class.</source>
          <target state="translated">このクラスの実行可能なメソッドです。これは、現在のRenderableImageとRenderContextを使用して画像を生成し、このクラスに現在登録されているすべてのImageConsumerに送信します。</target>
        </trans-unit>
        <trans-unit id="033cb38b43d17b8786bafc897bec4b3c4ae8e783" translate="yes" xml:space="preserve">
          <source>The sRGB color space defined at &lt;a href=&quot;http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html&quot;&gt; http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html &lt;/a&gt;.</source>
          <target state="translated">The sRGB color space defined at &lt;a href=&quot;http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html&quot;&gt; http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d2e3c9fbb81bbccde31fafa3b8f93c84d7d348af" translate="yes" xml:space="preserve">
          <source>The sRGB color space defined at &lt;a href=&quot;https://www.w3.org/pub/WWW/Graphics/Color/sRGB.html&quot;&gt; http://www.w3.org/pub/WWW/Graphics/Color/sRGB.html&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b7df0e9c02bba95c1b1a33d5e13601bd0ce3f8" translate="yes" xml:space="preserve">
          <source>The same call site may be used in several places at once.</source>
          <target state="translated">同じコールサイトを一度に複数の場所で利用することができます。</target>
        </trans-unit>
        <trans-unit id="bfba385507e5c958ec5cdd390b4ae7ee0ff23620" translate="yes" xml:space="preserve">
          <source>The same conversions are allowed as for &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;MethodHandle.asType&lt;/code&gt;&lt;/a&gt;, and some additional conversions are also applied if those conversions fail. Given types &lt;em&gt;T0&lt;/em&gt;, &lt;em&gt;T1&lt;/em&gt;, one of the following conversions is applied if possible, before or instead of any conversions done by &lt;code&gt;asType&lt;/code&gt;:</source>
          <target state="translated">The same conversions are allowed as for &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;MethodHandle.asType&lt;/code&gt; &lt;/a&gt;, and some additional conversions are also applied if those conversions fail. Given types &lt;em&gt;T0&lt;/em&gt;, &lt;em&gt;T1&lt;/em&gt;, one of the following conversions is applied if possible, before or instead of any conversions done by &lt;code&gt;asType&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="28bec6c576b1271de1ae3d70fc04df24e271a729" translate="yes" xml:space="preserve">
          <source>The same conversions are allowed as for &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;MethodHandle.asType&lt;/code&gt;&lt;/a&gt;, and some additional conversions are also applied if those conversions fail. Given types &lt;em&gt;T0&lt;/em&gt;, &lt;em&gt;T1&lt;/em&gt;, one of the following conversions is applied if possible, before or instead of any conversions done by &lt;code&gt;asType&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;MethodHandle.asType&lt;/code&gt; の&lt;/a&gt;場合と同じ変換が許可され、それらの変換が失敗した場合は、いくつかの追加の変換も適用されます。タイプ&lt;em&gt;T0&lt;/em&gt;、&lt;em&gt;T1が&lt;/em&gt;与えられると、 &lt;code&gt;asType&lt;/code&gt; によって行われる変換の前または代わりに、可能であれば、次の変換のいずれかが適用されます。</target>
        </trans-unit>
        <trans-unit id="a6ab80d33fa4b7f4a321447e169ab216836d5a87" translate="yes" xml:space="preserve">
          <source>The same example, dropping arguments and using combinators:</source>
          <target state="translated">同じ例で、引数を落としたり、コンビネーターを使ったりしています。</target>
        </trans-unit>
        <trans-unit id="3156cf800cbaf487594e90d4f19f68e8ba277657" translate="yes" xml:space="preserve">
          <source>The same listener object may be added more than once, and will be called as many times as it is added. If &lt;code&gt;listener&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is taken.</source>
          <target state="translated">同じリスナーオブジェクトは複数回追加される可能性があり、追加された回数だけ呼び出されます。 &lt;code&gt;listener&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、例外はスローされず、アクションは実行されません。</target>
        </trans-unit>
        <trans-unit id="791680086f6d9e78094100fb9300338027ea15fa" translate="yes" xml:space="preserve">
          <source>The same naming conventions are applied to the methods in an MXBean as in a Standard MBean:</source>
          <target state="translated">MXBeanのメソッドには、標準MBeanと同じ命名規則が適用されます。</target>
        </trans-unit>
        <trans-unit id="681f3cced20ba9e0fb93240854ee9634fa1a6146" translate="yes" xml:space="preserve">
          <source>The same output can be generated with this code, which uses a regular expression to parse all four tokens at once:</source>
          <target state="translated">このコードでは、正規表現を使用して4つのトークンを一度に解析することで、同じ出力を生成することができます。</target>
        </trans-unit>
        <trans-unit id="1aca9034c5ce7f0103f2b633705ed622da3b779f" translate="yes" xml:space="preserve">
          <source>The same principle holds true for setting layout managers, removing components, listing children, etc. All these methods are invoked on the &lt;code&gt;contentPane&lt;/code&gt; instead of on the &lt;code&gt;JRootPane&lt;/code&gt;.</source>
          <target state="translated">The same principle holds true for setting layout managers, removing components, listing children, etc. All these methods are invoked on the &lt;code&gt;contentPane&lt;/code&gt; instead of on the &lt;code&gt;JRootPane&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7706c997f0206204d48e6784227fbc2dcd70a39c" translate="yes" xml:space="preserve">
          <source>The same rules are used for locating the configuration properties as are used at startup. So normally the logging properties will be re-read from the same file that was used at startup.</source>
          <target state="translated">起動時に使用されるのと同じルールで設定プロパティを検索します。そのため、通常、ロギングプロパティは起動時に使用されたのと同じファイルから再読み込みされます。</target>
        </trans-unit>
        <trans-unit id="40c696d758a9065648ff0c79befb43bf73945edb" translate="yes" xml:space="preserve">
          <source>The same value</source>
          <target state="translated">同一の値</target>
        </trans-unit>
        <trans-unit id="457dd191617eea60f8880ece3469c77e1ea4e638" translate="yes" xml:space="preserve">
          <source>The sample chrominance quantization table given in the JPEG specification, table K.1, with all elements divided by 2.</source>
          <target state="translated">JPEG仕様の表K.1に与えられたサンプルクロミナンス量子化テーブルで、全要素を2で割ったもの。</target>
        </trans-unit>
        <trans-unit id="66abdaa3d456aeedbf328a69ececa50ab9fd015c" translate="yes" xml:space="preserve">
          <source>The sample chrominance quantization table given in the JPEG specification, table K.1, with all elements divided by 2. According to the specification, these values produce &quot;very good&quot; quality output. This is the table usually used for &quot;visually lossless&quot; encoding, and is the default chrominance table used if the default tables and quality settings are used.</source>
          <target state="translated">JPEG仕様の表K.1で与えられたサンプルのクロミナンス量子化テーブルで、すべての要素を2で割ったものです。 仕様によると、これらの値は &quot;非常に良い &quot;品質の出力を生成します。これは通常、&quot;視覚的にロスのない &quot;エンコーディングに使用されるテーブルであり、デフォルトのテーブルと品質設定が使用されている場合に使用されるデフォルトのクロミナンステーブルです。</target>
        </trans-unit>
        <trans-unit id="b5e23252dc7982b61ec60d6fa4b1c02b4d854c18" translate="yes" xml:space="preserve">
          <source>The sample chrominance quantization table given in the JPEG specification, table K.2.</source>
          <target state="translated">JPEG仕様の表K.2で与えられたサンプルクロミナンス量子化テーブル。</target>
        </trans-unit>
        <trans-unit id="1cb7bb906bae31a02cfce6b8aa3fb45b84e3040c" translate="yes" xml:space="preserve">
          <source>The sample chrominance quantization table given in the JPEG specification, table K.2. According to the specification, these values produce &quot;good&quot; quality output.</source>
          <target state="translated">JPEG仕様で与えられたサンプルクロミナンス量子化テーブル、表K.2。仕様によれば、これらの値は &quot;良い &quot;品質の出力を生成します。</target>
        </trans-unit>
        <trans-unit id="25c651e5098644d6cd24f42dc03c0a707b13d70d" translate="yes" xml:space="preserve">
          <source>The sample luminance quantization table given in the JPEG specification, table K.1, with all elements divided by 2.</source>
          <target state="translated">JPEG仕様で与えられたサンプル輝度量子化テーブル、表K.</target>
        </trans-unit>
        <trans-unit id="e37dceb33c264c204dc116d8ce75114c90f4c7a3" translate="yes" xml:space="preserve">
          <source>The sample luminance quantization table given in the JPEG specification, table K.1, with all elements divided by 2. According to the specification, these values produce &quot;very good&quot; quality output. This is the table usually used for &quot;visually lossless&quot; encoding, and is the default luminance table used if the default tables and quality settings are used.</source>
          <target state="translated">JPEG仕様の表K.1で与えられているサンプル輝度量子化テーブルで、すべての要素を2で割ったもの。 仕様によると、これらの値は「非常に良い」品質の出力を生成する。これは通常、&quot;視覚的にロスのない &quot;エンコードに使用されるテーブルであり、デフォルトのテーブルと品質設定が使用されている場合に使用されるデフォルトの輝度テーブルである。</target>
        </trans-unit>
        <trans-unit id="d0b62fba0a5289bbc7385bf5f89b4ca6d49b2768" translate="yes" xml:space="preserve">
          <source>The sample luminance quantization table given in the JPEG specification, table K.1.</source>
          <target state="translated">JPEG仕様で与えられたサンプル輝度量子化テーブル、表K.</target>
        </trans-unit>
        <trans-unit id="41d6745b125ca8d196d6a79815800d21e82cdffb" translate="yes" xml:space="preserve">
          <source>The sample luminance quantization table given in the JPEG specification, table K.1. According to the specification, these values produce &quot;good&quot; quality output.</source>
          <target state="translated">JPEG仕様で与えられたサンプル輝度量子化テーブル、表K.仕様によれば,これらの値は &quot;良い &quot;品質の出力を生成する。</target>
        </trans-unit>
        <trans-unit id="b999ec10517f908ef6af8dfcfecb7806f54e48fb" translate="yes" xml:space="preserve">
          <source>The scale of the returned &lt;code&gt;BigDecimal&lt;/code&gt; will be the number of digits in the fraction, or zero if the string contains no decimal point, subject to adjustment for any exponent; if the string contains an exponent, the exponent is subtracted from the scale. The value of the resulting scale must lie between &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt; and &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;, inclusive.</source>
          <target state="translated">返される &lt;code&gt;BigDecimal&lt;/code&gt; のスケールは、小数部の桁数、または文字列に小数点が含まれていない場合はゼロになり、指数の調整に従います。文字列に指数が含まれている場合、その指数はスケールから減算されます。結果のスケールの値は、 &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt; と &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; の間にある必要があります。</target>
        </trans-unit>
        <trans-unit id="7396cf813336a30d0a1bab52aed3246ae5a6aefb" translate="yes" xml:space="preserve">
          <source>The scanner can also use delimiters other than whitespace. This example reads several items in from a string:</source>
          <target state="translated">スキャナは、空白以外の区切り文字を使用することもできます。この例では、文字列からいくつかの項目を読み込みます。</target>
        </trans-unit>
        <trans-unit id="a4947ea8b0c611076ba187f044654968e3ab9ec3" translate="yes" xml:space="preserve">
          <source>The scheduling policy of StampedLock does not consistently prefer readers over writers or vice versa. All &quot;try&quot; methods are best-effort and do not necessarily conform to any scheduling or fairness policy. A zero return from any &quot;try&quot; method for acquiring or converting locks does not carry any information about the state of the lock; a subsequent invocation may succeed.</source>
          <target state="translated">StampedLockのスケジューリングポリシーは、一貫してライターよりも読者を優先するものではありませんし、その逆もあります。すべての &quot;try &quot;メソッドはベストエフォートであり、スケジューリングポリシーや公平性のポリシーに従う必要はありません。ロックを取得または変換するための &quot;try &quot;メソッドからのゼロリターンは、ロックの状態に関する情報を持ちません。</target>
        </trans-unit>
        <trans-unit id="b03631e0a864ad17eff8a3140236f245127ccd24" translate="yes" xml:space="preserve">
          <source>The schema columns are:</source>
          <target state="translated">スキーマのカラムは</target>
        </trans-unit>
        <trans-unit id="8e88c8d4c87637576e7f0f88b7eb8972efe2f3f6" translate="yes" xml:space="preserve">
          <source>The schema definition describes the internal data of a &lt;code&gt;RowSet&lt;/code&gt; object in three distinct areas:</source>
          <target state="translated">The schema definition describes the internal data of a &lt;code&gt;RowSet&lt;/code&gt; object in three distinct areas:</target>
        </trans-unit>
        <trans-unit id="0bb86dfd7dd2cb7c7dabbe5b9afa0ca86ee85837" translate="yes" xml:space="preserve">
          <source>The scheme component of a URI cannot contain escaped octets, hence this method does not perform any decoding.</source>
          <target state="translated">URIのスキームコンポーネントはエスケープされたオクテットを含むことができないので、このメソッドはデコードを行いません。</target>
        </trans-unit>
        <trans-unit id="03f4421d79610120278b2b05c4ad70853ae92f0a" translate="yes" xml:space="preserve">
          <source>The scheme component of a URI, if defined, only contains characters in the</source>
          <target state="translated">URIのスキームコンポーネントが定義されている場合、そのURIは</target>
        </trans-unit>
        <trans-unit id="552a02db11e3a965b8192d8915eaba47a77bf1a7" translate="yes" xml:space="preserve">
          <source>The scheme component of this URI, or &lt;code&gt;null&lt;/code&gt; if the scheme is undefined</source>
          <target state="translated">このURIのスキーマコンポーネント。スキーマが未定義の場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="347507e3914af1d8c1191601bb5aa53cb19b0fe4" translate="yes" xml:space="preserve">
          <source>The scheme-specific part of a URI only contains legal URI characters.</source>
          <target state="translated">URIのスキーマ固有の部分は、合法的なURI文字のみを含む。</target>
        </trans-unit>
        <trans-unit id="786e33a9934f50290255272a6f6e5a002f9a8ca7" translate="yes" xml:space="preserve">
          <source>The scope that is printed out may be a filename, in which case it may convey local system information. For example, here's a sample printout of an identity named &quot;carol&quot;, who is marked not trusted in the user's identity database:</source>
          <target state="translated">プリントアウトされるスコープは、ファイル名であってもよいが、その場合はローカルシステム情報を伝えることができる。例えば、ユーザの ID データベースで信頼されていないとマークされている「carol」という名前の ID のプリントアウトのサンプルを以下に示します。</target>
        </trans-unit>
        <trans-unit id="b44f515dc7972f5ec50a61a5a4b5d182cf8f1fa1" translate="yes" xml:space="preserve">
          <source>The scope, returningObj flag, and returningAttributes flag from the search controls &lt;code&gt;ctls&lt;/code&gt; are used to control the selection of objects that the listener is interested in, and determines what information is returned in the eventual &lt;code&gt;NamingEvent&lt;/code&gt; object. Note that the requested information to be returned might not be present in the &lt;code&gt;NamingEvent&lt;/code&gt; object if they are unavailable or could not be obtained by the service provider or service.</source>
          <target state="translated">検索コントロール &lt;code&gt;ctls&lt;/code&gt; のスコープ、returningObjフラグ、returningAttributesフラグを使用して、リスナーが関心を持つオブジェクトの選択を制御し、最終的な &lt;code&gt;NamingEvent&lt;/code&gt; オブジェクトで返される情報を決定します。返されるように要求された情報は、それらが利用できない場合、またはサービスプロバイダーまたはサービスによって取得できない場合、 &lt;code&gt;NamingEvent&lt;/code&gt; オブジェクトに存在しない可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4e7ec0bc18757e2695eb1c71f854b0d45664eafa" translate="yes" xml:space="preserve">
          <source>The script code, or the empty string if none is defined.</source>
          <target state="translated">スクリプトコード、または定義されていない場合は空文字列。</target>
        </trans-unit>
        <trans-unit id="76538a8f01a55793d97f2332439c69463ccd6129" translate="yes" xml:space="preserve">
          <source>The script content of the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9cd18270d845ffc1ce9a3c3c4df5a00249e7be6" translate="yes" xml:space="preserve">
          <source>The script names supported by &lt;code&gt;Pattern&lt;/code&gt; are the valid script names accepted and defined by &lt;a href=&quot;../../lang/character.unicodescript#forName(java.lang.String)&quot;&gt;&lt;code&gt;UnicodeScript.forName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The script names supported by &lt;code&gt;Pattern&lt;/code&gt; are the valid script names accepted and defined by &lt;a href=&quot;../../lang/character.unicodescript#forName(java.lang.String)&quot;&gt; &lt;code&gt;UnicodeScript.forName&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ef23874ea1d91d27f386b1f20ccc288696d91d71" translate="yes" xml:space="preserve">
          <source>The script names supported by &lt;code&gt;Pattern&lt;/code&gt; are the valid script names accepted and defined by &lt;a href=&quot;../../lang/character.unicodescript#forName-java.lang.String-&quot;&gt;&lt;code&gt;UnicodeScript.forName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Pattern&lt;/code&gt; サポートされているスクリプト名は、&lt;a href=&quot;../../lang/character.unicodescript#forName-java.lang.String-&quot;&gt; &lt;code&gt;UnicodeScript.forName&lt;/code&gt; で&lt;/a&gt;受け入れられ、定義されている有効なスクリプト名です。</target>
        </trans-unit>
        <trans-unit id="afafae7f294d0de7bc87bb9a26199785990e9648" translate="yes" xml:space="preserve">
          <source>The scripting API consists of interfaces and classes that define Java &lt;sup&gt;TM&lt;/sup&gt; Scripting Engines and provides a framework for their use in Java applications.</source>
          <target state="translated">スクリプトAPIは、Java &lt;sup&gt;TM&lt;/sup&gt;スクリプトエンジンを定義するインターフェイスとクラスで構成され、Javaアプリケーションで使用するためのフレームワークを提供します。</target>
        </trans-unit>
        <trans-unit id="c9c43eef002cb23064cdf0bd61ad8d93fd63d843" translate="yes" xml:space="preserve">
          <source>The scripting API consists of interfaces and classes that define Java &lt;sup&gt;TM&lt;/sup&gt; Scripting Engines and provides a framework for their use in Java applications. This API is intended for use by application programmers who wish to execute programs written in scripting languages in their Java applications. The scripting language programs are usually provided by the end-users of the applications.</source>
          <target state="translated">スクリプトAPIは、Java &lt;sup&gt;TM&lt;/sup&gt;スクリプトエンジンを定義するインターフェイスとクラスで構成され、Javaアプリケーションで使用するためのフレームワークを提供します。このAPIは、Javaアプリケーションでスクリプト言語で記述されたプログラムを実行したいアプリケーションプログラマによる使用を目的としています。スクリプト言語プログラムは通常、アプリケーションのエンドユーザーによって提供されます。</target>
        </trans-unit>
        <trans-unit id="d96741ff8c133f9dbd116d9cc354913f3613d032" translate="yes" xml:space="preserve">
          <source>The scripting API consists of interfaces and classes that define Java Scripting Engines and provides a framework for their use in Java applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb830255138e90189174d64ec193b2360d58854" translate="yes" xml:space="preserve">
          <source>The scripting API consists of interfaces and classes that define Java Scripting Engines and provides a framework for their use in Java applications. This API is intended for use by application programmers who wish to execute programs written in scripting languages in their Java applications. The scripting language programs are usually provided by the end-users of the applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91a09023d6539d10b0c1f584fa294076db23ca2e" translate="yes" xml:space="preserve">
          <source>The scripting API consists of interfaces and classes that define Java&amp;trade; Scripting Engines and provides a framework for their use in Java applications.</source>
          <target state="translated">The scripting API consists of interfaces and classes that define Java&amp;trade; Scripting Engines and provides a framework for their use in Java applications.</target>
        </trans-unit>
        <trans-unit id="dbb04c3cbf16a517019ff0d16573062dacfefe7e" translate="yes" xml:space="preserve">
          <source>The scripting API consists of interfaces and classes that define Java&amp;trade; Scripting Engines and provides a framework for their use in Java applications. This API is intended for use by application programmers who wish to execute programs written in scripting languages in their Java applications. The scripting language programs are usually provided by the end-users of the applications.</source>
          <target state="translated">The scripting API consists of interfaces and classes that define Java&amp;trade; Scripting Engines and provides a framework for their use in Java applications. This API is intended for use by application programmers who wish to execute programs written in scripting languages in their Java applications. The scripting language programs are usually provided by the end-users of the applications.</target>
        </trans-unit>
        <trans-unit id="1874cbc91889750bd4ed8944d7e77907c076a39f" translate="yes" xml:space="preserve">
          <source>The scroll bar's bubble may not be displayed when it is not moveable (e.g. when it takes up the entire length of the scroll bar's track, or when the scroll bar is disabled). Whether the bubble is displayed or not will not affect the value returned by &lt;code&gt;getVisibleAmount&lt;/code&gt;.</source>
          <target state="translated">The scroll bar's bubble may not be displayed when it is not moveable (e.g. when it takes up the entire length of the scroll bar's track, or when the scroll bar is disabled). Whether the bubble is displayed or not will not affect the value returned by &lt;code&gt;getVisibleAmount&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97033424809eec61b4328169ae2d5e8590d94a71" translate="yes" xml:space="preserve">
          <source>The scroll begin event.</source>
          <target state="translated">スクロール開始イベント。</target>
        </trans-unit>
        <trans-unit id="bbde2811daac4486a0d468cb8007d4cb47236d0e" translate="yes" xml:space="preserve">
          <source>The scroll end event.</source>
          <target state="translated">スクロール終了イベント。</target>
        </trans-unit>
        <trans-unit id="004e7fbf09f50fe4e8b7ac9e967dfbe4024d2b0c" translate="yes" xml:space="preserve">
          <source>The scrollbar is flexible along it's scrolling axis and rigid along the other axis.</source>
          <target state="translated">スクロールバーはスクロール軸に沿って柔軟性があり、他の軸に沿って剛性があります。</target>
        </trans-unit>
        <trans-unit id="382eadecc4f037382eec5e741ad0ea680bcfcb6e" translate="yes" xml:space="preserve">
          <source>The scrollpane's horizontal scrollbar child.</source>
          <target state="translated">スクロールペインの水平スクロールバーの子。</target>
        </trans-unit>
        <trans-unit id="1e11140820d076c7d796e1e85149749c745f6fe9" translate="yes" xml:space="preserve">
          <source>The scrollpane's horizontal scrollbar child. Default is a &lt;code&gt;JScrollBar&lt;/code&gt;.</source>
          <target state="translated">The scrollpane's horizontal scrollbar child. Default is a &lt;code&gt;JScrollBar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c8de2f0f7fbe23e6af5b111099c0e258b48a689" translate="yes" xml:space="preserve">
          <source>The scrollpane's vertical scrollbar child.</source>
          <target state="translated">スクロールペインの垂直スクロールバーの子。</target>
        </trans-unit>
        <trans-unit id="9ede92af942aaedafaf8414479c489583940b562" translate="yes" xml:space="preserve">
          <source>The scrollpane's vertical scrollbar child. Default is a &lt;code&gt;JScrollBar&lt;/code&gt;.</source>
          <target state="translated">The scrollpane's vertical scrollbar child. Default is a &lt;code&gt;JScrollBar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed6800d98f16995f5770b6c60e908abcfe32f1d9" translate="yes" xml:space="preserve">
          <source>The scrollpane's viewport child.</source>
          <target state="translated">スクロールペインのビューポートの子。</target>
        </trans-unit>
        <trans-unit id="0e686b1765e2793e43fa880f8aa01f46c51c762b" translate="yes" xml:space="preserve">
          <source>The scrollpane's viewport child. Default is an empty &lt;code&gt;JViewport&lt;/code&gt;.</source>
          <target state="translated">The scrollpane's viewport child. Default is an empty &lt;code&gt;JViewport&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1adc17dbde6a6617e4245b5f40d3e5c15d6310c1" translate="yes" xml:space="preserve">
          <source>The search is started in the current catalog. If a match is found, no further attempt will be made. Only if there is no match in the current catalog, will alternate catalogs including delegate and next catalogs be considered.</source>
          <target state="translated">検索は現在のカタログから開始されます。一致するものが見つかった場合は、それ以上の試みは行われません。現在のカタログに一致するものがない場合にのみ、デリゲートやネクストカタログを含む代替カタログが検討されます。</target>
        </trans-unit>
        <trans-unit id="234d2029591ee11c919d4dd5c206f5910e43d339" translate="yes" xml:space="preserve">
          <source>The search order is described in the documentation for &lt;a href=&quot;#getResource(java.lang.String)&quot;&gt;&lt;code&gt;getResource(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The search order is described in the documentation for &lt;a href=&quot;#getResource(java.lang.String)&quot;&gt; &lt;code&gt;getResource(String)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="81db3c5442cb31038e49ee8d70757fa89532101d" translate="yes" xml:space="preserve">
          <source>The search order is described in the documentation for &lt;a href=&quot;#getSystemResource(java.lang.String)&quot;&gt;&lt;code&gt;getSystemResource(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The search order is described in the documentation for &lt;a href=&quot;#getSystemResource(java.lang.String)&quot;&gt; &lt;code&gt;getSystemResource(String)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5785d6097b7d16726e6bb2855b1f1eebb4a0faba" translate="yes" xml:space="preserve">
          <source>The search order is described in the documentation for &lt;a href=&quot;../lang/classloader#getResource(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.getResource(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The search order is described in the documentation for &lt;a href=&quot;../lang/classloader#getResource(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.getResource(String)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6cbe5e391a79ef4fb56cc4fe90eb28db84ba088c" translate="yes" xml:space="preserve">
          <source>The search order is described in the documentation for &lt;a href=&quot;../lang/classloader#getResource-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.getResource(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">検索順序は&lt;a href=&quot;../lang/classloader#getResource-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.getResource(String)&lt;/code&gt; の&lt;/a&gt;ドキュメントに記載されています。</target>
        </trans-unit>
        <trans-unit id="14a9f3a688129049dc155e8aa96211ff37a84c5a" translate="yes" xml:space="preserve">
          <source>The search order is described in the documentation for &lt;a href=&quot;classloader#getResource-java.lang.String-&quot;&gt;&lt;code&gt;getResource(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">検索順序は、&lt;a href=&quot;classloader#getResource-java.lang.String-&quot;&gt; &lt;code&gt;getResource(String)&lt;/code&gt; の&lt;/a&gt;ドキュメントに記載されています。</target>
        </trans-unit>
        <trans-unit id="7b1a2e358f079002238a405e9b7e93cabc439a00" translate="yes" xml:space="preserve">
          <source>The search order is described in the documentation for &lt;a href=&quot;classloader#getSystemResource-java.lang.String-&quot;&gt;&lt;code&gt;getSystemResource(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">検索順序は、&lt;a href=&quot;classloader#getSystemResource-java.lang.String-&quot;&gt; &lt;code&gt;getSystemResource(String)&lt;/code&gt; の&lt;/a&gt;ドキュメントで説明されています。</target>
        </trans-unit>
        <trans-unit id="08ee7f2ec763cae105fa5de7897720ebb90d644f" translate="yes" xml:space="preserve">
          <source>The search order of locale sensitive services can be configured by using the &quot;java.locale.providers&quot; system property. This system property declares the user's preferred order for looking up the locale sensitive services separated by a comma. It is only read at the Java runtime startup, so the later call to System.setProperty() won't affect the order.</source>
          <target state="translated">ロケールに依存するサービスの検索順は、システムプロパティ &quot;java.locale.providers&quot; を使用して設定することができます。このシステムプロパティは、ロケールに依存するサービスをカンマで区切って検索する際に、ユーザが希望する検索順序を宣言します。このプロパティは、Java 実行時の起動時にのみ読み込まれるので、後から System.setProperty()を呼び出しても順序には影響しません。</target>
        </trans-unit>
        <trans-unit id="536221f09c2f4ed88cacc3f1f5304b4667b08f99" translate="yes" xml:space="preserve">
          <source>The search order of locale sensitive services can be configured by using the &lt;code&gt;&lt;span id=&quot;java.locale.providers&quot;&gt;java.locale.providers&lt;/span&gt;&lt;/code&gt; system property. This system property declares the user's preferred order for looking up the locale sensitive services separated by a comma. It is only read at the Java runtime startup, so the later call to System.setProperty() won't affect the order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a60b10d749f6decd1a4f3bf2354bd215518658a" translate="yes" xml:space="preserve">
          <source>The search scope of this SearchControls.</source>
          <target state="translated">この SearchControls の検索スコープ。</target>
        </trans-unit>
        <trans-unit id="8c894820daeb9009f19e3e0e441e8caf2831e1c8" translate="yes" xml:space="preserve">
          <source>The search will not cross naming system boundaries.</source>
          <target state="translated">検索はネーミングシステムの境界を越えることはありません。</target>
        </trans-unit>
        <trans-unit id="71dac0f2a283224db1975250180f8302d951ec94" translate="yes" xml:space="preserve">
          <source>The searched-for class definition existed when the currently executing class was compiled, but the definition can no longer be found.</source>
          <target state="translated">現在実行中のクラスがコンパイルされたときに検索されたクラス定義が存在しましたが、定義が見つからなくなりました。</target>
        </trans-unit>
        <trans-unit id="19f0094b2e54dfb70b25925659062cdceddabfdd" translate="yes" xml:space="preserve">
          <source>The second argument is the default value. A &lt;code&gt;Long&lt;/code&gt; object that represents the value of the second argument is returned if there is no property of the specified name, if the property does not have the correct numeric format, or if the specified name is empty or null.</source>
          <target state="translated">2番目の引数はデフォルト値です。A &lt;code&gt;Long&lt;/code&gt; 指定された名前のプロパティがない場合プロパティが正しい数値形式を持っていない場合、または指定された名前が空またはnullの場合は、2番目の引数の値を表すオブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="6fd52e585e241819acf494d6ce4e0623d9e9bbc2" translate="yes" xml:space="preserve">
          <source>The second argument is the default value. An &lt;code&gt;Integer&lt;/code&gt; object that represents the value of the second argument is returned if there is no property of the specified name, if the property does not have the correct numeric format, or if the specified name is empty or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">2番目の引数はデフォルト値です。アン &lt;code&gt;Integer&lt;/code&gt; 指定された名前のプロパティがない場合プロパティが正しい数値形式を持っていない場合、または指定した名前が空かである場合は、2番目の引数の値を表すオブジェクトは、返される &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f48b892ab5983e62a64c20f51aeb4852a6d40d4" translate="yes" xml:space="preserve">
          <source>The second argument is the default value. The default value is returned if there is no property of the specified name, if the property does not have the correct numeric format, or if the specified name is empty or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">2番目の引数はデフォルト値です。指定された名前のプロパティがない場合、プロパティの数値形式が正しくない場合、または指定された名前が空または &lt;code&gt;null&lt;/code&gt; の場合は、デフォルト値が返されます。</target>
        </trans-unit>
        <trans-unit id="9b877a4fee0f652a4de1a3f21e57f77c02aa594f" translate="yes" xml:space="preserve">
          <source>The second argument of the permission required to execute this diagnostic command or null if the permission constructor has only one argument (like the ManagementPermission) or if no permission is required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303b0b21ef5bd9a39866e8a3b7d318393f6ec28b" translate="yes" xml:space="preserve">
          <source>The second conversion is better than the first one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41fe98f3d794287cf7faede901c217eb147c5f5" translate="yes" xml:space="preserve">
          <source>The second highest justification priority.</source>
          <target state="translated">正当化の優先順位が2番目に高い。</target>
        </trans-unit>
        <trans-unit id="846dd73201fada82f56344da711130e328206130" translate="yes" xml:space="preserve">
          <source>The second is a completion signal that allows the driver to wait until all workers have completed.</source>
          <target state="translated">つ目は、全ての作業者が完了するまで待つことができる完了信号です。</target>
        </trans-unit>
        <trans-unit id="84e48120fa361c307626734228e297300ca0735a" translate="yes" xml:space="preserve">
          <source>The second lowest justification priority.</source>
          <target state="translated">正当化の優先順位が2番目に低い</target>
        </trans-unit>
        <trans-unit id="9c74ca16e8df45ce54eac3795a7c789ada4f5436" translate="yes" xml:space="preserve">
          <source>The second model is that attributes are associated with a name (typically an atomic name) in a DirContext. In this model, an attribute operation on the named object is roughly equivalent to a lookup on the name of the parent DirContext of the named object, followed by the attribute operation invoked on the parent in which the caller supplies the terminal atomic name. The attributes can be viewed as being stored in the parent DirContext (again, this does not imply that the implementation must do so). Objects that are not DirContexts can have attributes, as long as their parents are DirContexts.</source>
          <target state="translated">2 番目のモデルは、属性が DirContext 内の名前 (通常はアトミック名)に関連付けられているというものです。このモデルでは、名前のついたオブジェクトに対する属性操作は、名前のついたオブジェクトの親の DirContext の名前を検索することとほぼ同等であり、その後、親に対して呼び出された属性操作が行われ、呼び出し元が端末の原子名を提供します。属性は親の DirContext に格納されていると見ることができます(ここでも、実装がそうしなければならないことを意味するものではありません)。DirContexts でないオブジェクトは、親が DirContexts である限り、属性を持つことができます。</target>
        </trans-unit>
        <trans-unit id="08627207b7124af34d47a11be9d4eb35f89c3aa4" translate="yes" xml:space="preserve">
          <source>The second node precedes the reference node.</source>
          <target state="translated">2番目のノードは、参照ノードの前に配置されます。</target>
        </trans-unit>
        <trans-unit id="e114c9855232da640f7bcf88369ff012eb0d38ce" translate="yes" xml:space="preserve">
          <source>The second of minute of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;, from 0 to 59.</source>
          <target state="translated">The second of minute of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; , from 0 to 59.</target>
        </trans-unit>
        <trans-unit id="a1a191dfba3988b37aebbbf772bf95fd6c7c5ef5" translate="yes" xml:space="preserve">
          <source>The second-of-day.</source>
          <target state="translated">二日目のこと。</target>
        </trans-unit>
        <trans-unit id="0e870041b0c18ce21d4cc73d1cbae5e1e2aeb07b" translate="yes" xml:space="preserve">
          <source>The second-of-minute.</source>
          <target state="translated">分のうちの2分。</target>
        </trans-unit>
        <trans-unit id="f6efcc10b579d40e24ab34cc216d6d80435a8d31" translate="yes" xml:space="preserve">
          <source>The seconds and nanoseconds are extracted from the specified milliseconds.</source>
          <target state="translated">指定したミリ秒から秒とナノ秒を抽出します。</target>
        </trans-unit>
        <trans-unit id="23a2616566fd816bf2a993165e25281f4a18c7b6" translate="yes" xml:space="preserve">
          <source>The seconds and nanoseconds are extracted from the specified nanoseconds.</source>
          <target state="translated">指定したナノ秒から秒とナノ秒を抽出します。</target>
        </trans-unit>
        <trans-unit id="7a0383fffb7779acd5ef652edbc25f76897e0327" translate="yes" xml:space="preserve">
          <source>The seconds are calculated based on the standard definition of a day, where each day is 86400 seconds which implies a 24 hour day. The nanosecond in second field is set to zero.</source>
          <target state="translated">秒は1日の標準的な定義に基づいて計算され、各日は86400秒であり、これは24時間の1日を意味します。秒フィールドのナノ秒はゼロに設定されています。</target>
        </trans-unit>
        <trans-unit id="18dafaf48750adbb9e664a9c182377f5852b8936" translate="yes" xml:space="preserve">
          <source>The seconds are calculated based on the standard definition of a minute, where each minute is 60 seconds. The nanosecond in second field is set to zero.</source>
          <target state="translated">秒は、1分が60秒である標準的な1分の定義に基づいて計算されます。秒フィールドのナノ秒はゼロに設定されています。</target>
        </trans-unit>
        <trans-unit id="2bdf17cabd8f715fb436e568230500a070a9d89b" translate="yes" xml:space="preserve">
          <source>The seconds are calculated based on the standard definition of an hour, where each hour is 3600 seconds. The nanosecond in second field is set to zero.</source>
          <target state="translated">秒は1時間の標準的な定義に基づいて計算され、1時間は3600秒です。秒フィールドのナノ秒はゼロに設定されています。</target>
        </trans-unit>
        <trans-unit id="a48467f35f4c20748fa3acc00c4bb7c44e6d23fb" translate="yes" xml:space="preserve">
          <source>The secure communications modes include:</source>
          <target state="translated">安全な通信モードには、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="eb1ed30a436bf227420125540bd43fdab515b945" translate="yes" xml:space="preserve">
          <source>The security consideration is important with respect to internationalization domain name support. For example, English domain names may be</source>
          <target state="translated">国際化ドメイン名対応に関しては、セキュリティへの配慮が重要です。例えば、英語のドメイン名は</target>
        </trans-unit>
        <trans-unit id="8754c4a5e5f52f313c5ec7c42a10eeb348a2de09" translate="yes" xml:space="preserve">
          <source>The security manager is a class that allows applications to implement a security policy.</source>
          <target state="translated">セキュリティマネージャは、アプリケーションがセキュリティポリシーを実装するためのクラスです。</target>
        </trans-unit>
        <trans-unit id="5f541439356895d1a7b18c9420f1d7b1125db20e" translate="yes" xml:space="preserve">
          <source>The security manager is a class that allows applications to implement a security policy. Granting the setSecurityManager permission would allow code to change which security manager is used by installing a different, possibly less restrictive security manager, thereby bypassing checks that would have been enforced by the original security manager.</source>
          <target state="translated">セキュリティマネージャは、アプリケーションがセキュリティポリシーを実装するためのクラスです。setSecurityManager 権限を付与することで、コードは別の、制限が少ない可能性のあるセキュリティマネージャをインストールすることで、使用するセキュリティマネージャを変更することができ、それによって、元のセキュリティマネージャによって実施されていたであろうチェックをバイパスすることができます。</target>
        </trans-unit>
        <trans-unit id="ea632fc690ffe8730861707a2c56b33a9b6867d2" translate="yes" xml:space="preserve">
          <source>The security manager is a class that allows applications to implement a security policy. It allows an application to determine, before performing a possibly unsafe or sensitive operation, what the operation is and whether it is being attempted in a security context that allows the operation to be performed. The application can allow or disallow the operation.</source>
          <target state="translated">セキュリティマネージャは、アプリケーションがセキュリティポリシーを実装するためのクラスです。これにより、アプリケーションは、安全でない可能性のある操作や機密性の高い操作を実行する前に、 その操作が何であるか、また、その操作を可能にするセキュリティコンテキストで実行しようとしているかどうかを判断することができます。アプリケーションは、操作を許可したり、許可しなかったりすることができます。</target>
        </trans-unit>
        <trans-unit id="77cdd2014731846d35b1ae24ee942e1177ba673e" translate="yes" xml:space="preserve">
          <source>The security manager is thereby given an opportunity to prevent completion of the operation by throwing an exception. A security manager routine simply returns if the operation is permitted, but throws a &lt;code&gt;SecurityException&lt;/code&gt; if the operation is not permitted.</source>
          <target state="translated">The security manager is thereby given an opportunity to prevent completion of the operation by throwing an exception. A security manager routine simply returns if the operation is permitted, but throws a &lt;code&gt;SecurityException&lt;/code&gt; if the operation is not permitted.</target>
        </trans-unit>
        <trans-unit id="c0ed1fb6cefbd737d506d963693aa54fe70100ed" translate="yes" xml:space="preserve">
          <source>The security manager is thereby given an opportunity to prevent completion of the operation by throwing an exception. A security manager routine simply returns if the operation is permitted, but throws a &lt;code&gt;SecurityException&lt;/code&gt; if the operation is not permitted. The only exception to this convention is &lt;code&gt;checkTopLevelWindow&lt;/code&gt;, which returns a &lt;code&gt;boolean&lt;/code&gt; value.</source>
          <target state="translated">これにより、セキュリティマネージャは、例外をスローすることで操作の完了を防ぐ機会が与えられます。操作が許可されている場合、セキュリティマネージャルーチンは単純に戻りますが、操作が許可されていない場合は &lt;code&gt;SecurityException&lt;/code&gt; をスローします。この規則の唯一の例外は、 &lt;code&gt;boolean&lt;/code&gt; 値を返す &lt;code&gt;checkTopLevelWindow&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a67c38f887b66e32ea2617d5a99442f063242dfe" translate="yes" xml:space="preserve">
          <source>The security provider framework uses this method with some types of services to quickly exclude non-matching implementations for consideration. Applications will typically not need to call it.</source>
          <target state="translated">セキュリティプロバイダのフレームワークでは、このメソッドをいくつかのタイプのサービスで使用して、非一致の実装を素早く除外して検討します。アプリケーションは通常、このメソッドを呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="741ac520b2873a175ac0092c4d1afb002e856fbf" translate="yes" xml:space="preserve">
          <source>The segment type constant for a point that specifies the end point of a line to be drawn from the most recently specified point.</source>
          <target state="translated">直近で指定した点から引く線の終点を指定する点のセグメント型定数です。</target>
        </trans-unit>
        <trans-unit id="3973bcf55ac17cd3ee487605b4f605a51f7088ed" translate="yes" xml:space="preserve">
          <source>The segment type constant for a point that specifies the starting location for a new subpath.</source>
          <target state="translated">新しいサブパスの開始位置を指定する点のセグメント型定数。</target>
        </trans-unit>
        <trans-unit id="80aba145fc2824f9bd007706a9f479370c0b4eb2" translate="yes" xml:space="preserve">
          <source>The segment type constant for the pair of points that specify a quadratic parametric curve to be drawn from the most recently specified point.</source>
          <target state="translated">直近に指定された点から描画される二次パラメトリック曲線を指定する点の組のセグメント型定数。</target>
        </trans-unit>
        <trans-unit id="c18a9968e10da3d03ea7eda9a64c42aeb83bb165" translate="yes" xml:space="preserve">
          <source>The segment type constant for the pair of points that specify a quadratic parametric curve to be drawn from the most recently specified point. The curve is interpolated by solving the parametric control equation in the range &lt;code&gt;(t=[0..1])&lt;/code&gt; using the most recently specified (current) point (CP), the first control point (P1), and the final interpolated control point (P2). The parametric control equation for this curve is:</source>
          <target state="translated">The segment type constant for the pair of points that specify a quadratic parametric curve to be drawn from the most recently specified point. The curve is interpolated by solving the parametric control equation in the range &lt;code&gt;(t=[0..1])&lt;/code&gt; using the most recently specified (current) point (CP), the first control point (P1), and the final interpolated control point (P2). The parametric control equation for this curve is:</target>
        </trans-unit>
        <trans-unit id="87af03fe4753c3d0fd37c06a404fc52727178751" translate="yes" xml:space="preserve">
          <source>The segment type constant for the set of 3 points that specify a cubic parametric curve to be drawn from the most recently specified point.</source>
          <target state="translated">直近に指定された点から描画される立方パラメトリック曲線を指定する3点の集合のセグメント型定数。</target>
        </trans-unit>
        <trans-unit id="0339b07d46a1df3c557c177f88fe1e9060e280d6" translate="yes" xml:space="preserve">
          <source>The segment type constant for the set of 3 points that specify a cubic parametric curve to be drawn from the most recently specified point. The curve is interpolated by solving the parametric control equation in the range &lt;code&gt;(t=[0..1])&lt;/code&gt; using the most recently specified (current) point (CP), the first control point (P1), the second control point (P2), and the final interpolated control point (P3). The parametric control equation for this curve is:</source>
          <target state="translated">The segment type constant for the set of 3 points that specify a cubic parametric curve to be drawn from the most recently specified point. The curve is interpolated by solving the parametric control equation in the range &lt;code&gt;(t=[0..1])&lt;/code&gt; using the most recently specified (current) point (CP), the first control point (P1), the second control point (P2), and the final interpolated control point (P3). The parametric control equation for this curve is:</target>
        </trans-unit>
        <trans-unit id="cb56a94440f8726332fb64d2dd4609e5fa3a2ec8" translate="yes" xml:space="preserve">
          <source>The segment type constant that specifies that the preceding subpath should be closed by appending a line segment back to the point corresponding to the most recent SEG_MOVETO.</source>
          <target state="translated">直近のSEG_MOVETOに対応する点に戻る線分を追加することで、先行するサブパスを閉じることを指定するセグメント型定数。</target>
        </trans-unit>
        <trans-unit id="894b97382dba3f9e20b3cdb2eb76214dc93c0d83" translate="yes" xml:space="preserve">
          <source>The segment will feature all &lt;a href=&quot;#access-modes&quot;&gt;access modes&lt;/a&gt; (see &lt;a href=&quot;#ALL_ACCESS&quot;&gt;&lt;code&gt;ALL_ACCESS&lt;/code&gt;&lt;/a&gt;), unless the given buffer is &lt;a href=&quot;../../../../java.base/java/nio/buffer#isReadOnly()&quot;&gt;read-only&lt;/a&gt; in which case the segment will not feature the &lt;a href=&quot;#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; access mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae4e3fc46f78df27972d9dd0ebb202d4893af1a" translate="yes" xml:space="preserve">
          <source>The segment will feature all &lt;a href=&quot;#access-modes&quot;&gt;access modes&lt;/a&gt; (see &lt;a href=&quot;#ALL_ACCESS&quot;&gt;&lt;code&gt;ALL_ACCESS&lt;/code&gt;&lt;/a&gt;), unless the given mapping mode is &lt;a href=&quot;../../../../java.base/java/nio/channels/filechannel.mapmode#READ_ONLY&quot;&gt;READ_ONLY&lt;/a&gt;, in which case the segment will not feature the &lt;a href=&quot;#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; access mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb168e08c1a8515aa7a7100cc2b03043e09a9bd1" translate="yes" xml:space="preserve">
          <source>The select element allows the selection of an option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60543c3c5021576a51e4fad1230baab48b889f69" translate="yes" xml:space="preserve">
          <source>The select element allows the selection of an option. The contained options can be directly accessed through the select element as a collection. See the SELECT element definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c41846f7c607b568e2f811d680db13431de42230" translate="yes" xml:space="preserve">
          <source>The selectable channel</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f99f7b7b77b1d24238b1a7159cfaaf7109131828" translate="yes" xml:space="preserve">
          <source>The selected item may not necessarily be managed by the underlying &lt;code&gt;ListModel&lt;/code&gt;. This disjoint behavior allows for the temporary storage and retrieval of a selected item in the model.</source>
          <target state="translated">The selected item may not necessarily be managed by the underlying &lt;code&gt;ListModel&lt;/code&gt; . This disjoint behavior allows for the temporary storage and retrieval of a selected item in the model.</target>
        </trans-unit>
        <trans-unit id="72d6ad2310e85fb1d6829a4a5954408f8cdc0c95" translate="yes" xml:space="preserve">
          <source>The selected item or &lt;code&gt;null&lt;/code&gt; if there is no selection</source>
          <target state="translated">The selected item or &lt;code&gt;null&lt;/code&gt; if there is no selection</target>
        </trans-unit>
        <trans-unit id="980a17db139f93c4be1dbeca6c1ec98c6a583f36" translate="yes" xml:space="preserve">
          <source>The selected-key set is &lt;a href=&quot;#ksc&quot;&gt;not thread-safe&lt;/a&gt;.</source>
          <target state="translated">選択されたキーセットは&lt;a href=&quot;#ksc&quot;&gt;スレッドセーフで&lt;/a&gt;はありません。</target>
        </trans-unit>
        <trans-unit id="cf5971d519d788492de5d5d81d0e5637fab2e9f3" translate="yes" xml:space="preserve">
          <source>The selected-key set is &lt;a href=&quot;#sksc&quot;&gt;not thread-safe&lt;/a&gt;.</source>
          <target state="translated">The selected-key set is &lt;a href=&quot;#sksc&quot;&gt;not thread-safe&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2853e7255aa0a673fced6a6df84b0254f3157771" translate="yes" xml:space="preserve">
          <source>The selection can be discontiguous on lines with mixed-direction text. Only those characters in the logical range between start and limit appear selected. For example, consider the text 'ABCdef' where capital letters indicate right-to-left text, rendered on a right-to-left line, with a logical selection from 0 to 4 ('ABCd'). The text appears as follows, with bold standing in for the selection, and underlining for the extension:</source>
          <target state="translated">方向が混在するテ キ ス ト を持つ行では、 選択範囲が不連続にな る こ と があ り ます。開始と制限の間の論理範囲内の文字だけが選択されて表示されます。例えば、テキスト 'ABCdef' を考えてみましょう。大文字は右から左へのテキストを示し、右から左への行で表示され、0 から 4 までの論理的な選択範囲 ('ABCd')があります。テキストは次のように表示され、太字が選択範囲を、下線が拡張範囲を表しています。</target>
        </trans-unit>
        <trans-unit id="ee377636b8b2866aeab5296e00c6c54b19e71ed5" translate="yes" xml:space="preserve">
          <source>The selection criteria are represented by a map. Each map entry represents a selection criterion. A provider is selected iff it satisfies all selection criteria. The key for any entry in such a map must be in one of the following two formats:</source>
          <target state="translated">選択基準はマップで表されます。各マップの項目は選択基準を表している。プロバイダは、すべての選択基準を満たす場合に選択される。このようなマップ内のエントリのキーは、以下の 2 つの形式のいずれかでなければならない。</target>
        </trans-unit>
        <trans-unit id="e44ffedc1f376eadaacdab4f99049fa47e9e98b9" translate="yes" xml:space="preserve">
          <source>The selection criterion must be specified in one of the following two formats:</source>
          <target state="translated">選択基準は、次の 2 つの形式のいずれかで指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="74c7112680921edb20e3d4d4f9eaa109f3c9a083" translate="yes" xml:space="preserve">
          <source>The selection is discontiguous because the selected characters are visually discontiguous. Also note that since the range includes the first logical character (A), the selection is extended to the portion of the &lt;code&gt;bounds&lt;/code&gt; before the start of the layout, which in this case (a right-to-left line) is the right portion of the &lt;code&gt;bounds&lt;/code&gt;.</source>
          <target state="translated">The selection is discontiguous because the selected characters are visually discontiguous. Also note that since the range includes the first logical character (A), the selection is extended to the portion of the &lt;code&gt;bounds&lt;/code&gt; before the start of the layout, which in this case (a right-to-left line) is the right portion of the &lt;code&gt;bounds&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f8f3e58fee457f743d90cb3a11b275bb0e5c734" translate="yes" xml:space="preserve">
          <source>The selection model property name.</source>
          <target state="translated">選択モデルのプロパティ名。</target>
        </trans-unit>
        <trans-unit id="5b8e52c4dc1170658ac68079e913b9282a57c2c8" translate="yes" xml:space="preserve">
          <source>The selection operations synchronize on the selector itself, on the key set, and on the selected-key set, in that order. They also synchronize on the cancelled-key set during steps (1) and (3) above.</source>
          <target state="translated">選択操作は、セレクタ自体、キーセット、選択されたキーセットの順に同期します。また、上記(1)と(3)の手順では、キャンセルされたキーセットでも同期します。</target>
        </trans-unit>
        <trans-unit id="a904ff842ccfcf481664d94ff854e457ba5bfb75" translate="yes" xml:space="preserve">
          <source>The selection operations synchronize on the selector itself, on the selected-key set, in that order. They also synchronize on the cancelled-key set during steps (1) and (3) above.</source>
          <target state="translated">選択操作は、セレクタ自身と選択されたキーセットの順に同期します。また、上記の (1)と (3)の手順の間にキャンセルされたキーセットでも同期します。</target>
        </trans-unit>
        <trans-unit id="f0fdc28581457a5d51859c43f5da1f56889794b2" translate="yes" xml:space="preserve">
          <source>The selection state of a &lt;code&gt;JList&lt;/code&gt; is managed by another separate model, an instance of &lt;code&gt;ListSelectionModel&lt;/code&gt;. &lt;code&gt;JList&lt;/code&gt; is initialized with a selection model on construction, and also contains methods to query or set this selection model. Additionally, &lt;code&gt;JList&lt;/code&gt; provides convenient methods for easily managing the selection. These methods, such as &lt;code&gt;setSelectedIndex&lt;/code&gt; and &lt;code&gt;getSelectedValue&lt;/code&gt;, are cover methods that take care of the details of interacting with the selection model. By default, &lt;code&gt;JList&lt;/code&gt;'s selection model is configured to allow any combination of items to be selected at a time; selection mode &lt;code&gt;MULTIPLE_INTERVAL_SELECTION&lt;/code&gt;. The selection mode can be changed on the selection model directly, or via &lt;code&gt;JList&lt;/code&gt;'s cover method. Responsibility for updating the selection model in response to user gestures lies with the list's &lt;code&gt;ListUI&lt;/code&gt;.</source>
          <target state="translated">The selection state of a &lt;code&gt;JList&lt;/code&gt; is managed by another separate model, an instance of &lt;code&gt;ListSelectionModel&lt;/code&gt; . &lt;code&gt;JList&lt;/code&gt; is initialized with a selection model on construction, and also contains methods to query or set this selection model. Additionally, &lt;code&gt;JList&lt;/code&gt; provides convenient methods for easily managing the selection. These methods, such as &lt;code&gt;setSelectedIndex&lt;/code&gt; and &lt;code&gt;getSelectedValue&lt;/code&gt; , are cover methods that take care of the details of interacting with the selection model. By default, &lt;code&gt;JList&lt;/code&gt; 's selection model is configured to allow any combination of items to be selected at a time; selection mode &lt;code&gt;MULTIPLE_INTERVAL_SELECTION&lt;/code&gt; . The selection mode can be changed on the selection model directly, or via &lt;code&gt;JList&lt;/code&gt; 's cover method. Responsibility for updating the selection model in response to user gestures lies with the list's &lt;code&gt;ListUI&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac9f90ca688127c456774524ecd9188f16470783" translate="yes" xml:space="preserve">
          <source>The semantics for when a CSS style should overide visual attributes defined by an element are not well defined. For example, the html &lt;code&gt;&amp;lt;body bgcolor=red&amp;gt;&lt;/code&gt; makes the body have a red background. But if the html file also contains the CSS rule &lt;code&gt;body { background: blue }&lt;/code&gt; it becomes less clear as to what color the background of the body should be. The current implementation gives visual attributes defined in the element the highest precedence, that is they are always checked before any styles. Therefore, in the previous example the background would have a red color as the body element defines the background color to be red.</source>
          <target state="translated">The semantics for when a CSS style should overide visual attributes defined by an element are not well defined. For example, the html &lt;code&gt;&amp;lt;body bgcolor=red&amp;gt;&lt;/code&gt; makes the body have a red background. But if the html file also contains the CSS rule &lt;code&gt;body { background: blue }&lt;/code&gt; it becomes less clear as to what color the background of the body should be. The current implementation gives visual attributes defined in the element the highest precedence, that is they are always checked before any styles. Therefore, in the previous example the background would have a red color as the body element defines the background color to be red.</target>
        </trans-unit>
        <trans-unit id="7c8755086b4e6b5bb57770b4a79b8f7bdaccf4ae" translate="yes" xml:space="preserve">
          <source>The semantics of how setting values are combined depends on the setting control that is implemented, but all recordings should get at least all the events they request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95202ca438f08b9e0031b9c4bfdeb9b4df852c33" translate="yes" xml:space="preserve">
          <source>The semantics of the List returned by this method become undefined if the backing list (i.e., this List) is</source>
          <target state="translated">このメソッドが返すリストのセマンティクスは、バッキング・リスト (すなわち、このリスト)が</target>
        </trans-unit>
        <trans-unit id="453d2ffd1b3b134c5fd9217f7532df9b822182d8" translate="yes" xml:space="preserve">
          <source>The semantics of the beanName parameter are defined by java.beans.Beans.instantiate.</source>
          <target state="translated">BeanNameパラメータのセマンティクスはjava.bean.Beans.instantiateで定義されています。</target>
        </trans-unit>
        <trans-unit id="384632fa38dae55d93e0e907e62e3a2804bb5387" translate="yes" xml:space="preserve">
          <source>The semantics of the list returned by this method become undefined if the backing list (i.e., this list) is</source>
          <target state="translated">このメソッドが返すリストのセマンティクスは、バッキングリスト(すなわち、このリスト)が</target>
        </trans-unit>
        <trans-unit id="6eb76390f1c14aef2312c3b26cdfb1a9faf1c0d3" translate="yes" xml:space="preserve">
          <source>The semantics of the list returned by this method become undefined if the backing list (i.e., this list) is modified in any way other than via the returned list.</source>
          <target state="translated">このメソッドによって返されたリストのセマンティクスは、返されたリスト以外の方法でバッキング・リスト (すなわち、このリスト)が変更された場合、不定となります。</target>
        </trans-unit>
        <trans-unit id="d20ea275f88276269e77c1a6a3f0a0a12013fb0a" translate="yes" xml:space="preserve">
          <source>The semantics of this method are unspecified if the arguments could not have been produced by an instance of some valid dynamic proxy class containing this invocation handler.</source>
          <target state="translated">このメソッドのセマンティクスは、この呼び出しハンドラを含む有効な動的プロキシクラスの インスタンスによって引数が生成されなかった場合には不定です。</target>
        </trans-unit>
        <trans-unit id="b8513f09b48ac39c6481ad6003d15d1ff8cbf1f1" translate="yes" xml:space="preserve">
          <source>The semantics of this method may differ from those of the other &lt;code&gt;read&lt;/code&gt; methods in several ways. First, any destination image and/or image type set in the &lt;code&gt;ImageReadParam&lt;/code&gt; may be ignored. Second, the usual listener calls are not guaranteed to be made, or to be meaningful if they are. This is because the returned image may not be fully populated with pixel data at the time it is returned, or indeed at any time.</source>
          <target state="translated">このメソッドのセマンティクスは、他の &lt;code&gt;read&lt;/code&gt; メソッドのセマンティクスといくつかの点で異なる場合があります。まず、 &lt;code&gt;ImageReadParam&lt;/code&gt; に設定されている宛先イメージやイメージタイプは無視されます。第2に、通常のリスナー呼び出しが行われること、または行われる場合に意味があることが保証されていません。これは、返された画像が返されたとき、または実際にはいつでも、返された画像にピクセルデータが完全に入力されていない可能性があるためです。</target>
        </trans-unit>
        <trans-unit id="1cc6107a3ab38aa44b20de1eca06580ad330b25d" translate="yes" xml:space="preserve">
          <source>The sentinel value is chosen so that reflective queries can be made directly against the result value. The sentinel value cannot be confused with a real parameter, since &lt;code&gt;void&lt;/code&gt; is never acceptable as a parameter type. For variable arity invocation modes, the expression &lt;a href=&quot;../class#getComponentType()&quot;&gt;&lt;code&gt;lastParameterType().getComponentType()&lt;/code&gt;&lt;/a&gt; is useful to query the type of the &quot;varargs&quot; parameter.</source>
          <target state="translated">The sentinel value is chosen so that reflective queries can be made directly against the result value. The sentinel value cannot be confused with a real parameter, since &lt;code&gt;void&lt;/code&gt; is never acceptable as a parameter type. For variable arity invocation modes, the expression &lt;a href=&quot;../class#getComponentType()&quot;&gt; &lt;code&gt;lastParameterType().getComponentType()&lt;/code&gt; &lt;/a&gt; is useful to query the type of the &quot;varargs&quot; parameter.</target>
        </trans-unit>
        <trans-unit id="161693ca410ae026e19d3b93be91d521d736f95e" translate="yes" xml:space="preserve">
          <source>The separator between a keystore name prefix and an entry name. When specified, it applies to all the entries in a domain. Its default value is a space.</source>
          <target state="translated">キーストア名の接頭辞とエントリ名の間の区切り文字。指定すると、ドメイン内のすべてのエントリに適用される。デフォルト値はスペースです。</target>
        </trans-unit>
        <trans-unit id="c33bef4fc18f12b61dd742c406adeaac8d64a82d" translate="yes" xml:space="preserve">
          <source>The sequence may be of arbitrary length but the first four elements are assigned specific meanings, as follows:</source>
          <target state="translated">シーケンスは任意の長さであってもよいが、最初の4つの要素には、以下のように特定の意味が割り当てられている。</target>
        </trans-unit>
        <trans-unit id="fddaff8ebac1c2c5c7b43da5bf7781d174bd01f1" translate="yes" xml:space="preserve">
          <source>The sequence number of the earliest notification still in the buffer.</source>
          <target state="translated">バッファに残っている最も古い通知のシーケンス番号。</target>
        </trans-unit>
        <trans-unit id="a4b01bb88787366b6d9e829887a4ae25a588e430" translate="yes" xml:space="preserve">
          <source>The sequence number of the next notification available for querying. This will be the starting sequence number for the next notification query.</source>
          <target state="translated">クエリ可能な次の通知のシーケンス番号。これは、次の通知クエリの開始シーケンス番号になります。</target>
        </trans-unit>
        <trans-unit id="bf0008ac9d1317707e44c068d027348ed859c00f" translate="yes" xml:space="preserve">
          <source>The sequence of characters following an optional sign and/or radix specifier (&quot;&lt;code&gt;0x&lt;/code&gt;&quot;, &quot;&lt;code&gt;0X&lt;/code&gt;&quot;, &quot;&lt;code&gt;#&lt;/code&gt;&quot;, or leading zero) is parsed as by the &lt;code&gt;
 Byte.parseByte&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt;&lt;code&gt;NumberFormatException&lt;/code&gt;&lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">The sequence of characters following an optional sign and/or radix specifier (&quot; &lt;code&gt;0x&lt;/code&gt; &quot;, &quot; &lt;code&gt;0X&lt;/code&gt; &quot;, &quot; &lt;code&gt;#&lt;/code&gt; &quot;, or leading zero) is parsed as by the &lt;code&gt; Byte.parseByte&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt; &lt;code&gt;NumberFormatException&lt;/code&gt; &lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04a5cebfd92c347160af912e87639fade424841a" translate="yes" xml:space="preserve">
          <source>The sequence of characters following an optional sign and/or radix specifier (&quot;&lt;code&gt;0x&lt;/code&gt;&quot;, &quot;&lt;code&gt;0X&lt;/code&gt;&quot;, &quot;&lt;code&gt;#&lt;/code&gt;&quot;, or leading zero) is parsed as by the &lt;code&gt;
 Integer.parseInt&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt;&lt;code&gt;NumberFormatException&lt;/code&gt;&lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;
 String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">The sequence of characters following an optional sign and/or radix specifier (&quot; &lt;code&gt;0x&lt;/code&gt; &quot;, &quot; &lt;code&gt;0X&lt;/code&gt; &quot;, &quot; &lt;code&gt;#&lt;/code&gt; &quot;, or leading zero) is parsed as by the &lt;code&gt; Integer.parseInt&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt; &lt;code&gt;NumberFormatException&lt;/code&gt; &lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt; String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f47a3f697e9bed49511091c71b4c3caa8900d5a" translate="yes" xml:space="preserve">
          <source>The sequence of characters following an optional sign and/or radix specifier (&quot;&lt;code&gt;0x&lt;/code&gt;&quot;, &quot;&lt;code&gt;0X&lt;/code&gt;&quot;, &quot;&lt;code&gt;#&lt;/code&gt;&quot;, or leading zero) is parsed as by the &lt;code&gt;
 Long.parseLong&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt;&lt;code&gt;NumberFormatException&lt;/code&gt;&lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">The sequence of characters following an optional sign and/or radix specifier (&quot; &lt;code&gt;0x&lt;/code&gt; &quot;, &quot; &lt;code&gt;0X&lt;/code&gt; &quot;, &quot; &lt;code&gt;#&lt;/code&gt; &quot;, or leading zero) is parsed as by the &lt;code&gt; Long.parseLong&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt; &lt;code&gt;NumberFormatException&lt;/code&gt; &lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a8c9c139a21299d680c43bec3c9a7c26de6811f" translate="yes" xml:space="preserve">
          <source>The sequence of characters following an optional sign and/or radix specifier (&quot;&lt;code&gt;0x&lt;/code&gt;&quot;, &quot;&lt;code&gt;0X&lt;/code&gt;&quot;, &quot;&lt;code&gt;#&lt;/code&gt;&quot;, or leading zero) is parsed as by the &lt;code&gt;
 Short.parseShort&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt;&lt;code&gt;NumberFormatException&lt;/code&gt;&lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;
 String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">The sequence of characters following an optional sign and/or radix specifier (&quot; &lt;code&gt;0x&lt;/code&gt; &quot;, &quot; &lt;code&gt;0X&lt;/code&gt; &quot;, &quot; &lt;code&gt;#&lt;/code&gt; &quot;, or leading zero) is parsed as by the &lt;code&gt; Short.parseShort&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt; &lt;code&gt;NumberFormatException&lt;/code&gt; &lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt; String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed0c9428f6e0126963f745de2465f141332a6026" translate="yes" xml:space="preserve">
          <source>The sequence of characters following an optional sign and/or radix specifier (&quot;&lt;code&gt;0x&lt;/code&gt;&quot;, &quot;&lt;code&gt;0X&lt;/code&gt;&quot;, &quot;&lt;code&gt;#&lt;/code&gt;&quot;, or leading zero) is parsed as by the &lt;code&gt;Byte.parseByte&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt;&lt;code&gt;NumberFormatException&lt;/code&gt;&lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">オプションの符号または基数指定子（ &quot; &lt;code&gt;0x&lt;/code&gt; &quot;、 &quot; &lt;code&gt;0X&lt;/code&gt; &quot;、 &quot; &lt;code&gt;#&lt;/code&gt; &quot;、または先行ゼロ）に続く文字のシーケンスは、指定された基数（ &lt;code&gt;Byte.parseByte&lt;/code&gt; 、または8 ）を使用してByte.parseByteメソッドによって解析されます。 ）。この文字シーケンスは正の値を表す必要があり&lt;a href=&quot;numberformatexception&quot;&gt; &lt;code&gt;NumberFormatException&lt;/code&gt; &lt;/a&gt;。そうしないと、NumberFormatExceptionがスローされます。指定された &lt;code&gt;String&lt;/code&gt; 最初の文字がマイナス記号の場合、結果は否定されます。 &lt;code&gt;String&lt;/code&gt; で空白文字を使用することはできません。</target>
        </trans-unit>
        <trans-unit id="2c063e5411741f160ae6a46bec35b7a73c1e07d1" translate="yes" xml:space="preserve">
          <source>The sequence of characters following an optional sign and/or radix specifier (&quot;&lt;code&gt;0x&lt;/code&gt;&quot;, &quot;&lt;code&gt;0X&lt;/code&gt;&quot;, &quot;&lt;code&gt;#&lt;/code&gt;&quot;, or leading zero) is parsed as by the &lt;code&gt;Integer.parseInt&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt;&lt;code&gt;NumberFormatException&lt;/code&gt;&lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">オプションの符号または基数指定子（ &quot; &lt;code&gt;0x&lt;/code&gt; &quot;、 &quot; &lt;code&gt;0X&lt;/code&gt; &quot;、 &quot; &lt;code&gt;#&lt;/code&gt; &quot;、または先行ゼロ）に続く文字のシーケンスは、指定された基数（ &lt;code&gt;Integer.parseInt&lt;/code&gt; 、または8 ）を使用してInteger.parseIntメソッドによって解析されます。）。この文字シーケンスは正の値を表す必要があり&lt;a href=&quot;numberformatexception&quot;&gt; &lt;code&gt;NumberFormatException&lt;/code&gt; &lt;/a&gt;。そうしないと、NumberFormatExceptionがスローされます。指定された &lt;code&gt;String&lt;/code&gt; 最初の文字がマイナス記号の場合、結果は否定されます。 &lt;code&gt;String&lt;/code&gt; で空白文字を使用することはできません。</target>
        </trans-unit>
        <trans-unit id="7ce5c427a4177226515b1b8cfab424168d32e788" translate="yes" xml:space="preserve">
          <source>The sequence of characters following an optional sign and/or radix specifier (&quot;&lt;code&gt;0x&lt;/code&gt;&quot;, &quot;&lt;code&gt;0X&lt;/code&gt;&quot;, &quot;&lt;code&gt;#&lt;/code&gt;&quot;, or leading zero) is parsed as by the &lt;code&gt;Long.parseLong&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt;&lt;code&gt;NumberFormatException&lt;/code&gt;&lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">オプションの符号または基数指定子（ &quot; &lt;code&gt;0x&lt;/code&gt; &quot;、 &quot; &lt;code&gt;0X&lt;/code&gt; &quot;、 &quot; &lt;code&gt;#&lt;/code&gt; &quot;、または先行ゼロ）に続く文字のシーケンスは、指定された基数（ &lt;code&gt;Long.parseLong&lt;/code&gt; 、または8 ）を使用してLong.parseLongメソッドによって解析されます。 ）。この文字シーケンスは正の値を表す必要があり&lt;a href=&quot;numberformatexception&quot;&gt; &lt;code&gt;NumberFormatException&lt;/code&gt; &lt;/a&gt;。そうしないと、NumberFormatExceptionがスローされます。指定された &lt;code&gt;String&lt;/code&gt; 最初の文字がマイナス記号の場合、結果は否定されます。 &lt;code&gt;String&lt;/code&gt; で空白文字を使用することはできません。</target>
        </trans-unit>
        <trans-unit id="f4974fa4ef44b513af1028ff49c4b453f94609bd" translate="yes" xml:space="preserve">
          <source>The sequence of characters following an optional sign and/or radix specifier (&quot;&lt;code&gt;0x&lt;/code&gt;&quot;, &quot;&lt;code&gt;0X&lt;/code&gt;&quot;, &quot;&lt;code&gt;#&lt;/code&gt;&quot;, or leading zero) is parsed as by the &lt;code&gt;Short.parseShort&lt;/code&gt; method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a &lt;a href=&quot;numberformatexception&quot;&gt;&lt;code&gt;NumberFormatException&lt;/code&gt;&lt;/a&gt; will be thrown. The result is negated if first character of the specified &lt;code&gt;String&lt;/code&gt; is the minus sign. No whitespace characters are permitted in the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">オプションの符号または基数指定子（ &quot; &lt;code&gt;0x&lt;/code&gt; &quot;、 &quot; &lt;code&gt;0X&lt;/code&gt; &quot;、 &quot; &lt;code&gt;#&lt;/code&gt; &quot;、または先行ゼロ）に続く文字のシーケンスは、指定された基数（ &lt;code&gt;Short.parseShort&lt;/code&gt; 、または8 ）を使用してShort.parseShortメソッドによって解析されます。 ）。この文字シーケンスは正の値を表す必要があり&lt;a href=&quot;numberformatexception&quot;&gt; &lt;code&gt;NumberFormatException&lt;/code&gt; &lt;/a&gt;。そうしないと、NumberFormatExceptionがスローされます。指定された &lt;code&gt;String&lt;/code&gt; 最初の文字がマイナス記号の場合、結果は否定されます。 &lt;code&gt;String&lt;/code&gt; で空白文字を使用することはできません。</target>
        </trans-unit>
        <trans-unit id="405b55aaa46e13a89f534b404603b82ce083cf31" translate="yes" xml:space="preserve">
          <source>The sequence of numerals in a version number is compared to another such sequence in numerical, pointwise fashion; &lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;
 10.0.4&lt;/code&gt; is less than &lt;code&gt;10.1.2&lt;/code&gt;. If one sequence is shorter than another then the missing elements of the shorter sequence are considered to be less than the corresponding elements of the longer sequence; &lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;10.0.2&lt;/code&gt; is less than &lt;code&gt;10.0.2.1&lt;/code&gt;.</source>
          <target state="translated">The sequence of numerals in a version number is compared to another such sequence in numerical, pointwise fashion; &lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt; 10.0.4&lt;/code&gt; is less than &lt;code&gt;10.1.2&lt;/code&gt; . If one sequence is shorter than another then the missing elements of the shorter sequence are considered to be less than the corresponding elements of the longer sequence; &lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;10.0.2&lt;/code&gt; is less than &lt;code&gt;10.0.2.1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b7e641ecc2ddbeb716b792bb33db3785fdea384" translate="yes" xml:space="preserve">
          <source>The sequence of task executions continues indefinitely until one of the following exceptional completions occur:</source>
          <target state="translated">タスクの実行シーケンスは、以下の例外的な完了のいずれかが発生するまで無期限に継続します。</target>
        </trans-unit>
        <trans-unit id="e434dd3150cc80ca7cae2f8b8eaeb4038c9e904c" translate="yes" xml:space="preserve">
          <source>The sequence of the candidate locales also corresponds to the runtime resource lookup path (also known as the</source>
          <target state="translated">候補ロケールのシーケンスは、ランタイムリソースのルックアップパス(別名</target>
        </trans-unit>
        <trans-unit id="f7e487534567beaaaf886a79c2a34b214dbcb31b" translate="yes" xml:space="preserve">
          <source>The sequence property will be initialized with a new unique value. These sequence values are allocated in increasing order within a VM.</source>
          <target state="translated">シーケンスプロパティは、新しい一意の値で初期化されます。これらのシーケンス値は、VM内で順番に割り当てられます。</target>
        </trans-unit>
        <trans-unit id="a7cd757d66959c5ea95a29c3e377f5ce005f6f9a" translate="yes" xml:space="preserve">
          <source>The sequential group along the horizontal axis is rendered as a solid blue line. Notice the sequential group is the sum of the children elements it contains.</source>
          <target state="translated">横軸に沿った連続したグループは、青の実線で表示されます。シーケンシャルグループは、それが含む子要素の合計であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c00ff75511a0de0a28d3c3e6f1b65b2b2cd9a528" translate="yes" xml:space="preserve">
          <source>The serial version of the class does not match that of the class descriptor read from the stream</source>
          <target state="translated">クラスのシリアル・バージョンが、ストリームから読み込んだクラス記述子と一致しません。</target>
        </trans-unit>
        <trans-unit id="1bb17ac47a0c237bc15ecd3f6d7915bd46810b1f" translate="yes" xml:space="preserve">
          <source>The serialization filter is initialized to the value of &lt;a href=&quot;objectinputfilter.config#getSerialFilter()&quot;&gt;&lt;code&gt;ObjectInputFilter.Config.getSerialFilter&lt;/code&gt;&lt;/a&gt; when the &lt;code&gt; ObjectInputStream&lt;/code&gt; is constructed and can be set to a custom filter only once.</source>
          <target state="translated">The serialization filter is initialized to the value of &lt;a href=&quot;objectinputfilter.config#getSerialFilter()&quot;&gt; &lt;code&gt;ObjectInputFilter.Config.getSerialFilter&lt;/code&gt; &lt;/a&gt; when the &lt;code&gt; ObjectInputStream&lt;/code&gt; is constructed and can be set to a custom filter only once.</target>
        </trans-unit>
        <trans-unit id="201566c3836942d058babbf949a4164803b90149" translate="yes" xml:space="preserve">
          <source>The serialization filter is initialized to the value of &lt;a href=&quot;objectinputfilter.config#getSerialFilter()&quot;&gt;&lt;code&gt;ObjectInputFilter.Config.getSerialFilter&lt;/code&gt;&lt;/a&gt; when the &lt;code&gt; ObjectInputStream&lt;/code&gt; is constructed and can be set to a custom filter only once. The filter must be set before reading any objects from the stream; for example, by calling &lt;a href=&quot;#readObject()&quot;&gt;&lt;code&gt;readObject()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#readUnshared()&quot;&gt;&lt;code&gt;readUnshared()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b47e4393e9fad0dd6a3358b5377e4c805ad3c8" translate="yes" xml:space="preserve">
          <source>The serialization filter is initialized to the value of &lt;a href=&quot;objectinputfilter.config#getSerialFilter()&quot;&gt;the process-wide filter&lt;/a&gt;.</source>
          <target state="translated">The serialization filter is initialized to the value of &lt;a href=&quot;objectinputfilter.config#getSerialFilter()&quot;&gt;the process-wide filter&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f500ee4e778bcc52718bc32f469d80100beb7550" translate="yes" xml:space="preserve">
          <source>The serialization filter is initialized to the value of &lt;a href=&quot;objectinputfilter.config#getSerialFilter()&quot;&gt;the system-wide filter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3a14fa4f45c6e41704c2ee36ac6cb02bf7a515" translate="yes" xml:space="preserve">
          <source>The serialization filter, when not &lt;code&gt;null&lt;/code&gt;, is invoked for each object (regular or class) read to reconstruct the root object. See &lt;a href=&quot;#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt;&lt;code&gt;setObjectInputFilter&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">The serialization filter, when not &lt;code&gt;null&lt;/code&gt; , is invoked for each object (regular or class) read to reconstruct the root object. See &lt;a href=&quot;#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt; &lt;code&gt;setObjectInputFilter&lt;/code&gt; &lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="bd73bf37e348582139983df9cefa4606f813c326" translate="yes" xml:space="preserve">
          <source>The serialization runtime associates with each serializable class a version number, called a serialVersionUID, which is used during deserialization to verify that the sender and receiver of a serialized object have loaded classes for that object that are compatible with respect to serialization. If the receiver has loaded a class for the object that has a different serialVersionUID than that of the corresponding sender's class, then deserialization will result in an &lt;a href=&quot;invalidclassexception&quot;&gt;&lt;code&gt;InvalidClassException&lt;/code&gt;&lt;/a&gt;. A serializable class can declare its own serialVersionUID explicitly by declaring a field named &lt;code&gt;&quot;serialVersionUID&quot;&lt;/code&gt; that must be static, final, and of type &lt;code&gt;long&lt;/code&gt;:</source>
          <target state="translated">シリアル化ランタイムは、シリアル化可能な各クラスに、serialVersionUIDと呼ばれるバージョン番号を関連付けます。これは、シリアル化されたオブジェクトの送信者と受信者が、そのオブジェクトに対して、シリアル化に関して互換性のあるクラスを読み込んだことを確認するために使用されます。レシーバーが、対応するセンダーのクラスとは異なるserialVersionUIDを持つオブジェクトのクラスをロードした場合、デシリアライズは&lt;a href=&quot;invalidclassexception&quot;&gt; &lt;code&gt;InvalidClassException&lt;/code&gt; になり&lt;/a&gt;ます。直列化可能クラスは、名前のフィールド宣言することにより、独自のserialVersionUIDを明示的に宣言することができ &lt;code&gt;&quot;serialVersionUID&quot;&lt;/code&gt; 静的、最終的でなければならない、とタイプの &lt;code&gt;long&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ae097a868679cbc698e55bf19085a91cd00d50c7" translate="yes" xml:space="preserve">
          <source>The serialver tool</source>
          <target state="translated">シリアルバーツール</target>
        </trans-unit>
        <trans-unit id="72c82fbb03fb7e60a420ba06895a6063d87792bd" translate="yes" xml:space="preserve">
          <source>The server side might use the following variation of this source:</source>
          <target state="translated">サーバー側では、このソースを以下のようなバリエーションで使用することがあります。</target>
        </trans-unit>
        <trans-unit id="c6b7ba8d6780756feb02181d1f3b8e6bc1232ed3" translate="yes" xml:space="preserve">
          <source>The server was able to connect to the output device (or is always connected), but was unable to get a response from the output device.</source>
          <target state="translated">サーバは出力装置に接続できた(または常時接続されている)が、出力装置からの応答を得ることができなかった。</target>
        </trans-unit>
        <trans-unit id="7fc00d2c6bd145d9268cc5b5645d6faef5160f5c" translate="yes" xml:space="preserve">
          <source>The server-side sort control's assigned object identifier is 1.2.840.113556.1.4.473.</source>
          <target state="translated">サーバー側のソートコントロールに割り当てられたオブジェクト識別子は1.2.840.11356.1.4.473です。</target>
        </trans-unit>
        <trans-unit id="683960c5bca78c73afa4105fa8def718cb10bbd7" translate="yes" xml:space="preserve">
          <source>The server-side sort response control's assigned object identifier is 1.2.840.113556.1.4.474.</source>
          <target state="translated">サーバ側ソート応答制御の割り当てられたオブジェクト識別子は、1.2.840.113566.1.4.474です。</target>
        </trans-unit>
        <trans-unit id="99ea3539e9368c270061c3ac165425c2cc085eda" translate="yes" xml:space="preserve">
          <source>The service class must be one of the service types listed in the class specification. If it is not, &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown.</source>
          <target state="translated">The service class must be one of the service types listed in the class specification. If it is not, &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown.</target>
        </trans-unit>
        <trans-unit id="339bce1745ff0ddf550af41337f79c273e458f7f" translate="yes" xml:space="preserve">
          <source>The service named has been registered. getService requests for this service may now be made.</source>
          <target state="translated">指定したサービスが登録されました。</target>
        </trans-unit>
        <trans-unit id="7df31dfe1040963f739d9dbd1f8945217536f695" translate="yes" xml:space="preserve">
          <source>The service named has been revoked. getService requests for this service will no longer be satisfied.</source>
          <target state="translated">指定されたサービスは無効になりました。このサービスに対する getService 要求は、もはや満たされません。</target>
        </trans-unit>
        <trans-unit id="2312f997c09c219c1c3cc983985a51f259efd5c0" translate="yes" xml:space="preserve">
          <source>The service principal name is the canonical name of the &lt;code&gt;KerberosPrincipal&lt;/code&gt; supplying the service, that is the KerberosPrincipal represents a Kerberos service principal. This name is treated in a case sensitive manner. An asterisk may appear by itself, to signify any service principal.</source>
          <target state="translated">サービスプリンシパル名は、サービスを提供する &lt;code&gt;KerberosPrincipal&lt;/code&gt; の正規名です。つまり、KerberosPrincipalはKerberosサービスプリンシパルを表します。この名前は大文字と小文字を区別して扱われます。サービスプリンシパルを示すために、アスタリスクが単独で表示される場合があります。</target>
        </trans-unit>
        <trans-unit id="3eb5c3ef3ec84e9aaec370cd0ee1bf641ca69144" translate="yes" xml:space="preserve">
          <source>The service provider cannot be loaded.</source>
          <target state="translated">サービス提供者の読み込みができません。</target>
        </trans-unit>
        <trans-unit id="82991bdbc004754a76d1b3ab1788eba153946852" translate="yes" xml:space="preserve">
          <source>The service provider class file has more than one public static no-args method named &quot;&lt;code&gt;provider&lt;/code&gt;&quot;.</source>
          <target state="translated">The service provider class file has more than one public static no-args method named &quot; &lt;code&gt;provider&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="6747b4a2a337f04bdc6c20288be6a874d897923c" translate="yes" xml:space="preserve">
          <source>The service provider classes are intended to be lightweight and quick to load. Implementations of these interfaces should avoid complex dependencies on other classes and on native code.</source>
          <target state="translated">サービスプロバイダクラスは、軽量かつ高速にロードできるように設計されています。これらのインタフェースの実装は、他のクラスやネイティブコードへの複雑な依存関係を避けなければなりません。</target>
        </trans-unit>
        <trans-unit id="c3138211b8863e1d6bc3cf853dd276be24d5ca1e" translate="yes" xml:space="preserve">
          <source>The service provider classes should be lightweight and quick to load. Implementations of these interfaces should avoid complex dependencies on other classes and on native code. The usual pattern for more complex services is to register a lightweight proxy for the heavyweight service.</source>
          <target state="translated">サービスプロバイダクラスは、軽量で読み込みが速いものでなければなりません。これらのインタフェースの実装は、他のクラスやネイティブコードへの複雑な依存関係を避けるべきです。より複雑なサービスのための通常のパターンは、ヘビーウェイトサービスのために軽量なプロキシを登録することです。</target>
        </trans-unit>
        <trans-unit id="f444b1559da4e9d86d6d648069e2d0a6eeb225b7" translate="yes" xml:space="preserve">
          <source>The service provider classes should be to be lightweight and quick to load. Implementations of these interfaces should avoid complex dependencies on other classes and on native code. The usual pattern for more complex services is to register a lightweight proxy for the heavyweight service.</source>
          <target state="translated">サービスプロバイダクラスは、軽量かつ高速にロードできるようにしなければなりません。これらのインタフェースの実装は、他のクラスやネイティブコードへの複雑な依存関係を避けるべきです。より複雑なサービスのための通常のパターンは、ヘビーウェイトサービスのために軽量なプロキシを登録することです。</target>
        </trans-unit>
        <trans-unit id="608ee288ee27216e454b0a3a685e8712eeefa3ae" translate="yes" xml:space="preserve">
          <source>The service provider declares a provider method and it fails by returning &lt;code&gt;null&lt;/code&gt; or throwing an exception.</source>
          <target state="translated">The service provider declares a provider method and it fails by returning &lt;code&gt;null&lt;/code&gt; or throwing an exception.</target>
        </trans-unit>
        <trans-unit id="76904639c98eb74089f8e96e6ac7feed61ec1c9f" translate="yes" xml:space="preserve">
          <source>The service provider declares a public static no-args method named &quot;provider&quot; with a return type that is not assignable to the service's interface or class.</source>
          <target state="translated">サービスプロバイダは、サービスのインターフェイスやクラスに割り当てられない戻り値の型を持つ「プロバイダ」という名前のパブリックな静的無引数メソッドを宣言しています。</target>
        </trans-unit>
        <trans-unit id="e899262ca235e8c71b29084806db99b3aa3bd13b" translate="yes" xml:space="preserve">
          <source>The service provider does not declare a provider method, and either it is not assignable to the service's interface/class or does not have a provider constructor.</source>
          <target state="translated">サービス・プロバイダがプロバイダ・メソッドを宣言しておらず、サービスのインターフェイス/クラスに割り当てられていないか、プロバイダ・コンストラクタを持っていません。</target>
        </trans-unit>
        <trans-unit id="5cd0a169a020016b59c9011b24d88a2afce8a08a" translate="yes" xml:space="preserve">
          <source>The service provider does not declare a provider method, and its provider constructor fails by throwing an exception.</source>
          <target state="translated">サービスプロバイダがプロバイダメソッドを宣言しておらず、プロバイダのコンストラクタが例外を投げて失敗しています。</target>
        </trans-unit>
        <trans-unit id="39722a75ad6a5d7f9c535e0c0bae2bb029dadcb9" translate="yes" xml:space="preserve">
          <source>The service provider for &lt;code&gt;ctx&lt;/code&gt; uses a state factory to obtain the state of &lt;code&gt;printer&lt;/code&gt; for binding into its namespace. A state factory for the &lt;code&gt;Printer&lt;/code&gt; type object might return a more compact object for storage in the naming system.</source>
          <target state="translated">&lt;code&gt;ctx&lt;/code&gt; のサービスプロバイダーは、状態ファクトリを使用して、その名前空間にバインドするための &lt;code&gt;printer&lt;/code&gt; の状態を取得します。 &lt;code&gt;Printer&lt;/code&gt; タイプオブジェクトの状態ファクトリは、ネーミングシステムに格納するためのよりコンパクトなオブジェクトを返す場合があります。</target>
        </trans-unit>
        <trans-unit id="ec2f45b96a8af4cfac898c3be7b94db00df1c82f" translate="yes" xml:space="preserve">
          <source>The service provider instance is chosen as follows:</source>
          <target state="translated">サービスプロバイダのインスタンスは以下のように選択されます。</target>
        </trans-unit>
        <trans-unit id="38127cd4aa0815400585c455d9b08bc1a04388ab" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageInputStream&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageInputStream&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。</target>
        </trans-unit>
        <trans-unit id="1f43b817f684f623aff5dad130484f2da8b725fa" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageInputStream&lt;/code&gt;s. For more information on service provider interfaces, see the class comment for the &lt;code&gt;IIORegistry&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;ImageInputStream&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。サービスプロバイダーインターフェイスの詳細については、 &lt;code&gt;IIORegistry&lt;/code&gt; クラスのコメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="4a256fe03be1948fb7463bd5c25f91b70d8bb367" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageOutputStream&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageOutputStream&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。</target>
        </trans-unit>
        <trans-unit id="baa871f87fb50e99d06890cf145ed5a968d9d468" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageOutputStream&lt;/code&gt;s. For more information on service provider interfaces, see the class comment for the &lt;code&gt;IIORegistry&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;ImageOutputStream&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。サービスプロバイダーインターフェイスの詳細については、 &lt;code&gt;IIORegistry&lt;/code&gt; クラスのコメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="237770f3170d2d602f3c067509f29ea8083b1e81" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageReader&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。</target>
        </trans-unit>
        <trans-unit id="45ed743b0330766c9e4bf1587f45b4bca8c763dd" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageReader&lt;/code&gt;s. For more information on service provider classes, see the class comment for the &lt;code&gt;IIORegistry&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;ImageReader&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。サービスプロバイダークラスの詳細については、 &lt;code&gt;IIORegistry&lt;/code&gt; クラスのコメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="cdf130a89b8ecdd0fc56c8841a6256d234f7b1d5" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageTranscoder&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageTranscoder&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。</target>
        </trans-unit>
        <trans-unit id="4e56bbbc7919ab4d22d10e83ee3380885f3821d8" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageTranscoder&lt;/code&gt;s. For more information on service provider classes, see the class comment for the &lt;code&gt;IIORegistry&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;ImageTranscoder&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。サービスプロバイダークラスの詳細については、 &lt;code&gt;IIORegistry&lt;/code&gt; クラスのコメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="967704522c5f16add19f7f3f928885832f2dc066" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageWriter&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。</target>
        </trans-unit>
        <trans-unit id="59d3345b89b02c0a3b5eb368b40b37277fb4680d" translate="yes" xml:space="preserve">
          <source>The service provider interface (SPI) for &lt;code&gt;ImageWriter&lt;/code&gt;s. For more information on service provider classes, see the class comment for the &lt;code&gt;IIORegistry&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;ImageWriter&lt;/code&gt; のサービスプロバイダーインターフェイス（SPI）。サービスプロバイダークラスの詳細については、 &lt;code&gt;IIORegistry&lt;/code&gt; クラスのコメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="d312587539e81ed58f42177944ea87bb18494524" translate="yes" xml:space="preserve">
          <source>The service provider package allows different implementations to be plugged in dynamically. These different implementations include those for the &lt;em&gt;initial context&lt;/em&gt;, and implementations for contexts that can be reached from the initial context.</source>
          <target state="translated">The service provider package allows different implementations to be plugged in dynamically. These different implementations include those for the &lt;em&gt;initial context&lt;/em&gt;, and implementations for contexts that can be reached from the initial context.</target>
        </trans-unit>
        <trans-unit id="a98e2ef3c24a3f8bc1edb7be60c8b0ba1c2ff65d" translate="yes" xml:space="preserve">
          <source>The service provider package provides support for implementors of the &lt;code&gt;javax.naming.Context.lookup()&lt;/code&gt; method and related methods to return Java objects that are natural and intuitive for the Java programmer. For example, when looking up a printer name from the directory, it is natural for you to expect to get back a printer object on which to operate.</source>
          <target state="translated">The service provider package provides support for implementors of the &lt;code&gt;javax.naming.Context.lookup()&lt;/code&gt; method and related methods to return Java objects that are natural and intuitive for the Java programmer. For example, when looking up a printer name from the directory, it is natural for you to expect to get back a printer object on which to operate.</target>
        </trans-unit>
        <trans-unit id="81e08ce13e4bc1e787c03d053631be4ab8564f41" translate="yes" xml:space="preserve">
          <source>The service provider.</source>
          <target state="translated">サービス提供者です。</target>
        </trans-unit>
        <trans-unit id="37af36e76b9cf4fce8d917861e80abd5df5d0dad" translate="yes" xml:space="preserve">
          <source>The service type &lt;code&gt;Provider&lt;/code&gt; is reserved for use by the security framework. Services of this type cannot be added, removed, or modified by applications. The following attributes are automatically placed in each Provider object:</source>
          <target state="translated">サービスタイプ &lt;code&gt;Provider&lt;/code&gt; は、セキュリティフレームワークで使用するために予約されています。このタイプのサービスは、アプリケーションによって追加、削除、または変更することはできません。次の属性は、各プロバイダーオブジェクトに自動的に配置されます。</target>
        </trans-unit>
        <trans-unit id="b78ad8bf21cd550da7623c37d70d45b0515dd961" translate="yes" xml:space="preserve">
          <source>The service type is in a &lt;code&gt;spi&lt;/code&gt; subpackage as it may be packaged in a module separate from the resource bundle providers. For example, the service for a resource bundle named &lt;code&gt;com.example.app.MyResources&lt;/code&gt; must be &lt;code&gt;com.example.app.spi.MyResourcesProvider&lt;/code&gt;:</source>
          <target state="translated">The service type is in a &lt;code&gt;spi&lt;/code&gt; subpackage as it may be packaged in a module separate from the resource bundle providers. For example, the service for a resource bundle named &lt;code&gt;com.example.app.MyResources&lt;/code&gt; must be &lt;code&gt;com.example.app.spi.MyResourcesProvider&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="462d23cf2b980e00ea9308bfd5172025ae0208b0" translate="yes" xml:space="preserve">
          <source>The service will throw a &lt;code&gt;PrintException&lt;/code&gt; if the cancellation did not succeed. A job which has not yet been submitted for printing should throw this exception. Cancelling an already successfully cancelled Print Job is not considered an error and will always succeed.</source>
          <target state="translated">The service will throw a &lt;code&gt;PrintException&lt;/code&gt; if the cancellation did not succeed. A job which has not yet been submitted for printing should throw this exception. Cancelling an already successfully cancelled Print Job is not considered an error and will always succeed.</target>
        </trans-unit>
        <trans-unit id="3e064776c20c4d1bdfca5a291b86a1d978043bc3" translate="yes" xml:space="preserve">
          <source>The service will throw a PrintException if the cancellation did not succeed. A job which has not yet been submitted for printing should throw this exception. Cancelling an already successfully cancelled Print Job is not considered an error and will always succeed.</source>
          <target state="translated">キャンセルが成功しなかった場合、サービスは PrintException をスローします。まだ印刷のために投入されていないジョブは、この例外をスローする必要があります。すでにキャンセルに成功した印刷ジョブのキャンセルはエラーとはみなされず、常に成功します。</target>
        </trans-unit>
        <trans-unit id="7d9cc09e14462c6647d9a6c4a38c382e9755d701" translate="yes" xml:space="preserve">
          <source>The session has been locked/unlocked.</source>
          <target state="translated">セッションがロックされました/ロック解除されました。</target>
        </trans-unit>
        <trans-unit id="00fd623a86061c4531c2be6803ace8d3954aef8e" translate="yes" xml:space="preserve">
          <source>The session was connected/disconnected to the console terminal.</source>
          <target state="translated">コンソールターミナルにセッションが接続/切断されました。</target>
        </trans-unit>
        <trans-unit id="a3cfa1527f162db4e68a86de541d7adab335ef3f" translate="yes" xml:space="preserve">
          <source>The session was connected/disconnected to the remote terminal.</source>
          <target state="translated">セッションがリモート端末に接続/切断されました。</target>
        </trans-unit>
        <trans-unit id="5c8bbfd75efcc20ccff9db728df43aa79026640f" translate="yes" xml:space="preserve">
          <source>The set includes a dependency on &quot;&lt;code&gt;java.base&lt;/code&gt;&quot; when this module is not named &quot;&lt;code&gt;java.base&lt;/code&gt;&quot;. If this module is an automatic module then it does not have a dependency on any module other than &quot;&lt;code&gt;java.base&lt;/code&gt;&quot;.</source>
          <target state="translated">The set includes a dependency on &quot; &lt;code&gt;java.base&lt;/code&gt; &quot; when this module is not named &quot; &lt;code&gt;java.base&lt;/code&gt; &quot;. If this module is an automatic module then it does not have a dependency on any module other than &quot; &lt;code&gt;java.base&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="b64d278b964f5fb0f174b56402a1688783011c63" translate="yes" xml:space="preserve">
          <source>The set is &lt;a href=&quot;#ksc&quot;&gt;safe&lt;/a&gt; for use by multiple concurrent threads.</source>
          <target state="translated">The set is &lt;a href=&quot;#ksc&quot;&gt;safe&lt;/a&gt; for use by multiple concurrent threads.</target>
        </trans-unit>
        <trans-unit id="939369237a0093ae8b76203fbafeae8ecee1df1c" translate="yes" xml:space="preserve">
          <source>The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. If the map is modified while an iteration over the set is in progress (except through the iterator's own &lt;code&gt;remove&lt;/code&gt; operation), the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the map, via the &lt;code&gt;Iterator.remove&lt;/code&gt;, &lt;code&gt;Set.remove&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt;, and &lt;code&gt;clear&lt;/code&gt; operations. It does not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;addAll&lt;/code&gt; operations.</source>
          <target state="translated">セットはマップによってサポートされているため、マップへの変更はセットに反映され、その逆も同様です。セットの反復処理の進行中にマップが変更された場合（イテレータ自体の &lt;code&gt;remove&lt;/code&gt; 操作を除く）、反復の結果は未定義です。セットは、 &lt;code&gt;Iterator.remove&lt;/code&gt; 、 &lt;code&gt;Set.remove&lt;/code&gt; 、 &lt;code&gt;removeAll&lt;/code&gt; 、 &lt;code&gt;retainAll&lt;/code&gt; 、および &lt;code&gt;clear&lt;/code&gt; オペレーションを介して、対応するマッピングをマップから削除する要素の削除をサポートしています。 &lt;code&gt;add&lt;/code&gt; または &lt;code&gt;addAll&lt;/code&gt; 操作はサポートしていません。</target>
        </trans-unit>
        <trans-unit id="08401de134cf52abcaf1f8af2a1683d7c74313a4" translate="yes" xml:space="preserve">
          <source>The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. If the map is modified while an iteration over the set is in progress (except through the iterator's own &lt;code&gt;remove&lt;/code&gt; operation, or through the &lt;code&gt;setValue&lt;/code&gt; operation on a map entry returned by the iterator) the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the map, via the &lt;code&gt;Iterator.remove&lt;/code&gt;, &lt;code&gt;Set.remove&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt; and &lt;code&gt;clear&lt;/code&gt; operations. It does not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;addAll&lt;/code&gt; operations.</source>
          <target state="translated">セットはマップによってサポートされているため、マップへの変更はセットに反映され、その逆も同様です。セットの反復処理中にマップが変更された場合（イテレータ自体の &lt;code&gt;remove&lt;/code&gt; 操作、またはイテレータから返されたマップエントリの &lt;code&gt;setValue&lt;/code&gt; 操作を除く）、反復の結果は未定義です。セットは、 &lt;code&gt;Iterator.remove&lt;/code&gt; 、 &lt;code&gt;Set.remove&lt;/code&gt; 、 &lt;code&gt;removeAll&lt;/code&gt; 、 &lt;code&gt;retainAll&lt;/code&gt; 、および &lt;code&gt;clear&lt;/code&gt; オペレーションを介して、対応するマッピングをマップから削除する要素の削除をサポートします。 &lt;code&gt;add&lt;/code&gt; または &lt;code&gt;addAll&lt;/code&gt; 操作はサポートしていません。</target>
        </trans-unit>
        <trans-unit id="852ef9de08250d48c0d0fc367b3fbed7a9bf4099" translate="yes" xml:space="preserve">
          <source>The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. The set supports element removal, which removes the corresponding mapping from the map, via the &lt;code&gt;Iterator.remove&lt;/code&gt;, &lt;code&gt;Set.remove&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt; and &lt;code&gt;clear&lt;/code&gt; operations. It does not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;addAll&lt;/code&gt; operations.</source>
          <target state="translated">セットはマップによってサポートされているため、マップへの変更はセットに反映され、その逆も同様です。セットは、 &lt;code&gt;Iterator.remove&lt;/code&gt; 、 &lt;code&gt;Set.remove&lt;/code&gt; 、 &lt;code&gt;removeAll&lt;/code&gt; 、 &lt;code&gt;retainAll&lt;/code&gt; 、および &lt;code&gt;clear&lt;/code&gt; オペレーションを介して、対応するマッピングをマップから削除する要素の削除をサポートします。 &lt;code&gt;add&lt;/code&gt; または &lt;code&gt;addAll&lt;/code&gt; 操作はサポートしていません。</target>
        </trans-unit>
        <trans-unit id="335b178dce95c35bddb6f9a6dfbb5dbd684f0d11" translate="yes" xml:space="preserve">
          <source>The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. The set supports element removal, which removes the corresponding mapping from the map, via the &lt;code&gt;Iterator.remove&lt;/code&gt;, &lt;code&gt;Set.remove&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt;, and &lt;code&gt;clear&lt;/code&gt; operations. It does not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;addAll&lt;/code&gt; operations.</source>
          <target state="translated">セットはマップによってサポートされているため、マップへの変更はセットに反映され、その逆も同様です。セットは、 &lt;code&gt;Iterator.remove&lt;/code&gt; 、 &lt;code&gt;Set.remove&lt;/code&gt; 、 &lt;code&gt;removeAll&lt;/code&gt; 、 &lt;code&gt;retainAll&lt;/code&gt; 、および &lt;code&gt;clear&lt;/code&gt; オペレーションを介して、対応するマッピングをマップから削除する要素の削除をサポートしています。 &lt;code&gt;add&lt;/code&gt; または &lt;code&gt;addAll&lt;/code&gt; 操作はサポートしていません。</target>
        </trans-unit>
        <trans-unit id="6f4f2cfd47ef65402bf2cd171ee3694a2946949e" translate="yes" xml:space="preserve">
          <source>The set is created the first time this method is called, and returned in response to all subsequent calls. No synchronization is performed, so there is a slight chance that multiple calls to this method will not all return the same set.</source>
          <target state="translated">セットは、このメソッドが最初に呼び出されたときに作成され、その後のすべての呼び出しに応答して返されます。同期は行われないので、このメソッドを複数回呼び出してもすべて同じセットが返ってこない可能性が少しあります。</target>
        </trans-unit>
        <trans-unit id="5c6dbb0140fcb03f42d68d9b039f3ccf70fab2f5" translate="yes" xml:space="preserve">
          <source>The set of Unicode locale keys, or the empty set if this locale has no Unicode locale keywords.</source>
          <target state="translated">Unicode ロケールキーの集合、あるいはこのロケールが Unicode ロケールキーワードを持たない場合は空の集合。</target>
        </trans-unit>
        <trans-unit id="420b44f1196d7d8713b274baff300cd1830c3000" translate="yes" xml:space="preserve">
          <source>The set of access modes that specify how a variable, referenced by a VarHandle, is accessed.</source>
          <target state="translated">VarHandle によって参照される変数がどのようにアクセスされるかを指定するアクセスモードのセット。</target>
        </trans-unit>
        <trans-unit id="03d9f1bf0b7313c94bfc617aaf5a0c81cfb6185f" translate="yes" xml:space="preserve">
          <source>The set of all legal URI characters consists of the</source>
          <target state="translated">すべての合法的なURI文字の集合は</target>
        </trans-unit>
        <trans-unit id="6452b41f9aa8aa9467f2200dc381d1cdeab705b6" translate="yes" xml:space="preserve">
          <source>The set of all module references that this finder locates</source>
          <target state="translated">このファインダーが検索するすべてのモジュール参照のセット</target>
        </trans-unit>
        <trans-unit id="621a29c69b103747e0b5a4f9c4564c47401600b9" translate="yes" xml:space="preserve">
          <source>The set of attributes.</source>
          <target state="translated">属性の集合体。</target>
        </trans-unit>
        <trans-unit id="3f9639f8c60c46f82dff9817fb5e46940cb7b600" translate="yes" xml:space="preserve">
          <source>The set of available chronologies can be extended by applications. Adding a new calendar system requires the writing of an implementation of &lt;code&gt;Chronology&lt;/code&gt;, &lt;code&gt;ChronoLocalDate&lt;/code&gt; and &lt;code&gt;Era&lt;/code&gt;. The majority of the logic specific to the calendar system will be in the &lt;code&gt;ChronoLocalDate&lt;/code&gt; implementation. The &lt;code&gt;Chronology&lt;/code&gt; implementation acts as a factory.</source>
          <target state="translated">利用可能な暦のセットは、アプリケーションによって拡張できます。新しいカレンダーシステムを追加するには、 &lt;code&gt;Chronology&lt;/code&gt; 、 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 、および &lt;code&gt;Era&lt;/code&gt; の実装を作成する必要があります。カレンダーシステムに固有のロジックの大部分は、 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 実装にあります。 &lt;code&gt;Chronology&lt;/code&gt; 実装では、工場として機能します。</target>
        </trans-unit>
        <trans-unit id="cb548aee392f5b54ce790b2cd4397125011cb980" translate="yes" xml:space="preserve">
          <source>The set of available filters is dependent on the event request, some examples of filters are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e9447eb9ee970654c805a676dce29fdcfb735b" translate="yes" xml:space="preserve">
          <source>The set of bindings used to create the keymap is fetched from the UIManager using a key formed by combining the &lt;a href=&quot;#getPropertyPrefix()&quot;&gt;&lt;code&gt;getPropertyPrefix()&lt;/code&gt;&lt;/a&gt; method and the string &lt;code&gt;.keyBindings&lt;/code&gt;. The type is expected to be &lt;code&gt;JTextComponent.KeyBinding[]&lt;/code&gt;.</source>
          <target state="translated">The set of bindings used to create the keymap is fetched from the UIManager using a key formed by combining the &lt;a href=&quot;#getPropertyPrefix()&quot;&gt; &lt;code&gt;getPropertyPrefix()&lt;/code&gt; &lt;/a&gt; method and the string &lt;code&gt;.keyBindings&lt;/code&gt; . The type is expected to be &lt;code&gt;JTextComponent.KeyBinding[]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="681a49f0545cead8f88402e7d9a0b8bf02da8310" translate="yes" xml:space="preserve">
          <source>The set of categories supported by this class is limited to the following standard Image I/O service types:</source>
          <target state="translated">このクラスでサポートされるカテゴリのセットは、以下の標準画像 I/O サービスタイプに限定される。</target>
        </trans-unit>
        <trans-unit id="72c91458b3846bafb66088203a2752b0abccf720" translate="yes" xml:space="preserve">
          <source>The set of class options that specify whether a hidden class created by &lt;a href=&quot;#defineHiddenClass(byte%5B%5D,boolean,java.lang.invoke.MethodHandles.Lookup.ClassOption...)&quot;&gt;&lt;code&gt;Lookup::defineHiddenClass&lt;/code&gt;&lt;/a&gt; method is dynamically added as a new member to the nest of a lookup class and/or whether a hidden class has a strong relationship with the class loader marked as its defining loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651fe013855f1c7ef2e80301da1cf9f1fe1b713c" translate="yes" xml:space="preserve">
          <source>The set of class options that specify whether a hidden class created by &lt;a href=&quot;methodhandles.lookup#defineHiddenClass(byte%5B%5D,boolean,java.lang.invoke.MethodHandles.Lookup.ClassOption...)&quot;&gt;&lt;code&gt;Lookup::defineHiddenClass&lt;/code&gt;&lt;/a&gt; method is dynamically added as a new member to the nest of a lookup class and/or whether a hidden class has a strong relationship with the class loader marked as its defining loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b989013791c04777bdc8434807fe06cb2e6445b2" translate="yes" xml:space="preserve">
          <source>The set of classes that make up the package may implement a particular specification and if so the specification title, version number, and vendor strings identify that specification. An application can ask if the package is compatible with a particular version, see the &lt;a href=&quot;package#isCompatibleWith-java.lang.String-&quot;&gt;&lt;code&gt;isCompatibleWith&lt;/code&gt;&lt;/a&gt; method for details.</source>
          <target state="translated">パッケージを構成する一連のクラスは特定の仕様を実装する場合があり、実装する場合は、仕様のタイトル、バージョン番号、およびベンダー文字列がその仕様を識別します。アプリケーションは、パッケージが特定のバージョンと互換性があるかどうかを尋ねることができます。詳細については、&lt;a href=&quot;package#isCompatibleWith-java.lang.String-&quot;&gt; &lt;code&gt;isCompatibleWith&lt;/code&gt; &lt;/a&gt;メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="2e76b0b3c09cccc2eda6d0f3d42ddad87d8c8d18" translate="yes" xml:space="preserve">
          <source>The set of classes that make up the run-time package may implement a particular specification. The specification title, version, and vendor (indicating the owner/maintainer of the specification) can be provided when the &lt;code&gt;Package&lt;/code&gt; is defined. An application can ask if the &lt;code&gt;Package&lt;/code&gt; is compatible with a particular specification version by using the &lt;a href=&quot;#isCompatibleWith(java.lang.String)&quot;&gt;&lt;code&gt;Package.isCompatibleWith(String)&lt;/code&gt;&lt;/a&gt; method. In addition, information about the actual classes that make up the run-time package can be provided when the Package is defined. This information consists of an implementation title, version, and vendor (indicating the supplier of the classes).</source>
          <target state="translated">The set of classes that make up the run-time package may implement a particular specification. The specification title, version, and vendor (indicating the owner/maintainer of the specification) can be provided when the &lt;code&gt;Package&lt;/code&gt; is defined. An application can ask if the &lt;code&gt;Package&lt;/code&gt; is compatible with a particular specification version by using the &lt;a href=&quot;#isCompatibleWith(java.lang.String)&quot;&gt; &lt;code&gt;Package.isCompatibleWith(String)&lt;/code&gt; &lt;/a&gt; method. In addition, information about the actual classes that make up the run-time package can be provided when the Package is defined. This information consists of an implementation title, version, and vendor (indicating the supplier of the classes).</target>
        </trans-unit>
        <trans-unit id="bd487059260b770e35e4c25b3c8267f64420d5bc" translate="yes" xml:space="preserve">
          <source>The set of defaults a particular look and feel supports is defined and documented by that look and feel. In addition, each look and feel, or &lt;code&gt;ComponentUI&lt;/code&gt; provided by a look and feel, may access the defaults at different times in their life cycle. Some look and feels may aggressively look up defaults, so that changing a default may not have an effect after installing the look and feel. Other look and feels may lazily access defaults so that a change to the defaults may effect an existing look and feel. Finally, other look and feels might not configure themselves from the defaults table in any way. None-the-less it is usually the case that a look and feel expects certain defaults, so that in general a &lt;code&gt;ComponentUI&lt;/code&gt; provided by one look and feel will not work with another look and feel.</source>
          <target state="translated">The set of defaults a particular look and feel supports is defined and documented by that look and feel. In addition, each look and feel, or &lt;code&gt;ComponentUI&lt;/code&gt; provided by a look and feel, may access the defaults at different times in their life cycle. Some look and feels may aggressively look up defaults, so that changing a default may not have an effect after installing the look and feel. Other look and feels may lazily access defaults so that a change to the defaults may effect an existing look and feel. Finally, other look and feels might not configure themselves from the defaults table in any way. None-the-less it is usually the case that a look and feel expects certain defaults, so that in general a &lt;code&gt;ComponentUI&lt;/code&gt; provided by one look and feel will not work with another look and feel.</target>
        </trans-unit>
        <trans-unit id="8566d5bad5a6af80ccaae4ebc526f12877ada443" translate="yes" xml:space="preserve">
          <source>The set of delimiters (the characters that separate tokens) may be specified either at creation time or on a per-token basis.</source>
          <target state="translated">区切り文字(トークンを区切る文字)のセットは、作成時に指定することも、トークンごとに指定することもできます。</target>
        </trans-unit>
        <trans-unit id="6cfc5f58aa65a6eb138573039e7e6c8ed576bdaf" translate="yes" xml:space="preserve">
          <source>The set of destination bands to be used, as an array of &lt;code&gt;int&lt;/code&gt;s.</source>
          <target state="translated">The set of destination bands to be used, as an array of &lt;code&gt;int&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="7bdff17e6129a79d93316f1c821db4d8f82ede91" translate="yes" xml:space="preserve">
          <source>The set of destination bands to be used, as an array of &lt;code&gt;int&lt;/code&gt;s. By default, the value is &lt;code&gt;null&lt;/code&gt;, indicating all destination bands should be written in order.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; の配列として使用される宛先バンドのセット。デフォルトでは、値は &lt;code&gt;null&lt;/code&gt; で、すべての宛先バンドが順番に書き込まれることを示します。</target>
        </trans-unit>
        <trans-unit id="86fb7d781b8180b73ea69252e860cc7647d23a17" translate="yes" xml:space="preserve">
          <source>The set of elements specified by the user are considered to be &lt;em&gt;specified elements&lt;/em&gt;. Specified elements provide the starting points for determining the &lt;em&gt;included elements&lt;/em&gt; to be documented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b084606f5dbb7234dbaaff078b54b1db5148b15" translate="yes" xml:space="preserve">
          <source>The set of elements that can occur inside the element</source>
          <target state="translated">要素の内部で発生しうる要素の集合</target>
        </trans-unit>
        <trans-unit id="b6dca056975449aabae25e6f632010d1fc2e0826" translate="yes" xml:space="preserve">
          <source>The set of elements that must not occur inside the element</source>
          <target state="translated">要素内で発生してはならない要素の集合</target>
        </trans-unit>
        <trans-unit id="729a1180bc7c2901cd889e8f040bc5045cacfb92" translate="yes" xml:space="preserve">
          <source>The set of events may include additional implementation specific event that are not defined by the enum &lt;a href=&quot;standardwatcheventkinds&quot;&gt;&lt;code&gt;StandardWatchEventKinds&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">イベントのセットには、列挙型&lt;a href=&quot;standardwatcheventkinds&quot;&gt; &lt;code&gt;StandardWatchEventKinds&lt;/code&gt; で&lt;/a&gt;定義されていない、実装固有の追加イベントが含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="5c728dd3ce97aa1a197697a57af717e73be26f0b" translate="yes" xml:space="preserve">
          <source>The set of extension keys, or the empty set if this locale has no extensions.</source>
          <target state="translated">拡張子キーのセット、あるいはこのロケールが拡張子を持たない場合は空のセット。</target>
        </trans-unit>
        <trans-unit id="1ca105b2eec11893f8655aa15ad8f33d78fa091c" translate="yes" xml:space="preserve">
          <source>The set of formats may differ according to the particular images being read or written; this method should indicate all the additional formats supported by the plug-in under any circumstances.</source>
          <target state="translated">フォーマットのセットは、読み書きされる特定の画像によって異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="d6298735c68384e5ce50faeb99e64508afa7e2cb" translate="yes" xml:space="preserve">
          <source>The set of icons and colors used by &lt;code&gt;DefaultTreeCellRenderer&lt;/code&gt; can be configured using the various setter methods. The value for each property is initialized from the defaults table. When the look and feel changes (&lt;code&gt;updateUI&lt;/code&gt; is invoked), any properties that have a value of type &lt;code&gt;UIResource&lt;/code&gt; are refreshed from the defaults table. The following table lists the mapping between &lt;code&gt;DefaultTreeCellRenderer&lt;/code&gt; property and defaults table key:</source>
          <target state="translated">&lt;code&gt;DefaultTreeCellRenderer&lt;/code&gt; で使用されるアイコンと色のセットは、さまざまなセッターメソッドを使用して構成できます。各プロパティの値は、デフォルトのテーブルから初期化されます。ルックアンドフィールが変更されると（ &lt;code&gt;updateUI&lt;/code&gt; が呼び出されると）、 &lt;code&gt;UIResource&lt;/code&gt; 型の値を持つすべてのプロパティがデフォルトテーブルから更新されます。次の表に、 &lt;code&gt;DefaultTreeCellRenderer&lt;/code&gt; プロパティとデフォルトのテーブルキーの間のマッピングを示します。</target>
        </trans-unit>
        <trans-unit id="c3d89520f73d19bfe68e399e47cbe902639a37fe" translate="yes" xml:space="preserve">
          <source>The set of observable modules at both compile-time and run-time is determined by searching several different paths, and also by searching the compiled modules built in to the environment. The search order is as follows:</source>
          <target state="translated">コンパイル時と実行時の両方で観測可能なモジュールのセットは、いくつかの異なるパスを検索し、環境に組み込まれたコンパイル済みモジュールを検索することで決定されます。検索順序は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="6d0d29b95d763e2af0d05f2e532dc0d00a275aa0" translate="yes" xml:space="preserve">
          <source>The set of packages in the module are accumulated by the &lt;code&gt;
 Builder&lt;/code&gt; as the &lt;a href=&quot;#exports(java.lang.String)&quot;&gt;&lt;code&gt;exports&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#opens(java.lang.String)&quot;&gt;&lt;code&gt;opens&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#packages(java.util.Set)&quot;&gt;&lt;code&gt;packages&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#provides(java.lang.String,java.util.List)&quot;&gt;&lt;code&gt;provides&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#mainClass(java.lang.String)&quot;&gt;&lt;code&gt;mainClass&lt;/code&gt;&lt;/a&gt; methods are invoked.</source>
          <target state="translated">モジュール内のパッケージのセットはによって蓄積されている &lt;code&gt; Builder&lt;/code&gt; として&lt;a href=&quot;#exports(java.lang.String)&quot;&gt; &lt;code&gt;exports&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#opens(java.lang.String)&quot;&gt; &lt;code&gt;opens&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#packages(java.util.Set)&quot;&gt; &lt;code&gt;packages&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#provides(java.lang.String,java.util.List)&quot;&gt; &lt;code&gt;provides&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#mainClass(java.lang.String)&quot;&gt; &lt;code&gt;mainClass&lt;/code&gt; の&lt;/a&gt;メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="af1c485e3af079d0e0b924f990daf5f80d7e2329" translate="yes" xml:space="preserve">
          <source>The set of packages in the module is derived from the non-directory entries in the JAR file that have names ending in &quot;&lt;code&gt;.class&lt;/code&gt;&quot;. A candidate package name is derived from the name using the characters up to, but not including, the last forward slash. All remaining forward slashes are replaced with dot (&lt;code&gt;&quot;.&quot;&lt;/code&gt;). If the resulting string is a legal package name then it is assumed to be a package name. For example, if the JAR file contains the entry &quot;&lt;code&gt;p/q/Foo.class&lt;/code&gt;&quot; then the package name derived is &quot;&lt;code&gt;p.q&lt;/code&gt;&quot;.</source>
          <target state="translated">モジュール内のパッケージのセットは、名前が「 &lt;code&gt;.class&lt;/code&gt; 」で終わるJARファイル内の非ディレクトリエントリから派生します。候補パッケージ名は、最後のスラッシュまでの文字を使用した名前から派生しますが、最後のスラッシュは含まれません。残りのすべてのスラッシュはドット（ &lt;code&gt;&quot;.&quot;&lt;/code&gt; ）に置き換えられます。結果の文字列が有効なパッケージ名である場合、それはパッケージ名であると見なされます。たとえば、JARファイルにエントリ「 &lt;code&gt;p/q/Foo.class&lt;/code&gt; 」が含まれている場合、派生するパッケージ名は「 &lt;code&gt;p.q&lt;/code&gt; 」です。</target>
        </trans-unit>
        <trans-unit id="bb27f124976a9cb1da8caffebba927a6c5a0a2ee" translate="yes" xml:space="preserve">
          <source>The set of packages includes all exported and open packages, as well as the packages of any service providers, and the package for the main class.</source>
          <target state="translated">パッケージのセットには、すべてのエクスポートされたパッケージとオープンなパッケージ、サービスプロバイダのパッケージ、メインクラスのパッケージが含まれます。</target>
        </trans-unit>
        <trans-unit id="10d94f3aa7e712fbe40291f913b08a2062951f72" translate="yes" xml:space="preserve">
          <source>The set of parameters defined here may not include all aspects of reverberation as specified by some systems. For example, the Midi Manufacturer's Association (MMA) has an Interactive Audio Special Interest Group (IASIG), which has a 3-D Working Group that has defined a Level 2 Spec (I3DL2). I3DL2 supports filtering of reverberation and control of reverb density. These properties are not included in the JavaSound 1.0 definition of a reverb control. In such a case, the implementing system should either extend the defined reverb control to include additional parameters, or else interpret the system's additional capabilities in a way that fits the model described here.</source>
          <target state="translated">ここで定義されているパラメータのセットは、いくつかのシステムで規定されている残響のすべての側面を含んでいない場合があります。例えば、Midi Manufacturer's Association (MMA)にはInteractive Audio Special Interest Group (IASIG)があり、その中に3-D Working Groupがあり、Level 2 Spec (I3DL2)を定義しています。I3DL2は、残響のフィルタリングと残響密度の制御をサポートしています。これらの特性は、JavaSound 1.0の残響コントロールの定義には含まれていません。このような場合、実装システムは、定義された残響制御を拡張して追加のパラメータを含むようにするか、ここで説明されているモデルに適合するようにシステムの追加機能を解釈しなければなりません。</target>
        </trans-unit>
        <trans-unit id="68d403ff4ac7d3e26edbaf2a349d84bb408ad098" translate="yes" xml:space="preserve">
          <source>The set of permissions evaluated is a function of whether the ProtectionDomain was constructed with a static set of permissions or it was bound to a dynamically mapped set of permissions.</source>
          <target state="translated">評価されるパーミッションのセットは、ProtectionDomainが静的なパーミッションのセットで構築されたか、動的にマップされたパーミッションのセットにバインドされたかの関数です。</target>
        </trans-unit>
        <trans-unit id="0b9b26c8c7dd24de7fa7e0a2e0ee1b1f709f4d4b" translate="yes" xml:space="preserve">
          <source>The set of permissions granted to the principal is then calculated using the simple rule that individual permissions always override the group permissions. That is, the principal's individual negative permission set (specific denial of permissions) overrides the group positive permission set, and the principal's individual positive permission set overrides the group negative permission set.</source>
          <target state="translated">次に、校長に付与された許可のセットは、個々の許可が常にグループの許可を上書きするという単純なルールを使用して計算されます。つまり、校長の個々の否定的な許可セット(許可の特定の拒否)は、グループの肯定的な許可セットを上書きし、校長の個々の肯定的な許可セットは、グループの否定的な許可セットを上書きします。</target>
        </trans-unit>
        <trans-unit id="7c5293b4016e691dbff48573988eed608f1e59b6" translate="yes" xml:space="preserve">
          <source>The set of root modules at compile-time is usually the set of modules being compiled. At run-time, the set of root modules is usually the application module specified to the 'java' launcher. When compiling code in the unnamed module, or at run-time when the main application class is loaded from the class path, then the default set of root modules is implementation specific. In the JDK the default set of root modules contains every module that is observable on the upgrade module path or among the system modules, and that exports at least one package without qualification.</source>
          <target state="translated">コンパイル時のルートモジュールのセットは、通常、コンパイル中のモジュールのセットです。ランタイムでは、ルートモジュールのセットは通常、'java'ランチャーに指定されたアプリケーションモジュールです。名前のないモジュールのコードをコンパイルするとき、または、メインのアプリケーションクラスがクラスパスからロードされたときの実行時には、ルートモジュールのデフォルトセットは実装固有のものになります。JDK では、ルートモジュールのデフォルトセットには、アップグレードモジュールのパス上またはシステムモジュールの中で観測可能で、資格なしで少なくとも 1 つのパッケージをエクスポートするすべてのモジュールが含まれています。</target>
        </trans-unit>
        <trans-unit id="c855c2b33fa2f72b9413d964ffae18f1b08660a6" translate="yes" xml:space="preserve">
          <source>The set of root modules, whose names are the initial input to this algorithm, is determined in an implementation specific manner. The set of root modules may include automatic modules.</source>
          <target state="translated">名前がこのアルゴリズムへの初期入力であるルートモジュールのセットは、実装固有の方法で決定される。ルートモジュールのセットは、自動モジュールを含んでもよい。</target>
        </trans-unit>
        <trans-unit id="1c5e4eed3c1a6ad50555dc5a120636aac05d2d14" translate="yes" xml:space="preserve">
          <source>The set of source bands to be read and destination bands to be written is determined by calling &lt;code&gt;getSourceBands&lt;/code&gt; and &lt;code&gt;getDestinationBands&lt;/code&gt; on the supplied &lt;code&gt;ImageReadParam&lt;/code&gt;. If the lengths of the arrays returned by these methods differ, the set of source bands contains an index larger that the largest available source index, or the set of destination bands contains an index larger than the largest legal destination index, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">読み取られるソースバンドと書き込まれる宛先バンドのセットは、提供された &lt;code&gt;ImageReadParam&lt;/code&gt; で &lt;code&gt;getSourceBands&lt;/code&gt; と &lt;code&gt;getDestinationBands&lt;/code&gt; を呼び出すことによって決定されます。これらのメソッドによって返される配列の長さが異なる場合、ソースバンドのセットに、利用可能な最大のソースインデックスより大きいインデックスが含まれるか、宛先バンドのセットに最大の有効な宛先インデックスより大きいインデックスが含まれる場合、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="867285dfa3b219730bb1492c7d1c6f1144979f5b" translate="yes" xml:space="preserve">
          <source>The set of supported access modes can only be made stricter (by supporting &lt;em&gt;fewer&lt;/em&gt; access modes). This means that restricting the set of access modes supported by a segment before sharing it with other clients is generally a good practice if the creator of the segment wants to retain some control over how the segment is going to be accessed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c7711952ed69b023e8f9dad86209b75e9faa4e" translate="yes" xml:space="preserve">
          <source>The set of supported fields is defined by the chronology and normally includes all &lt;code&gt;ChronoField&lt;/code&gt; date and time fields.</source>
          <target state="translated">サポートされるフィールドのセットは年代順に定義され、通常、すべての &lt;code&gt;ChronoField&lt;/code&gt; の日付と時刻のフィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="17f958194f63b45fb85cee1d1ff860e19a4ebff9" translate="yes" xml:space="preserve">
          <source>The set of supported fields is defined by the chronology and normally includes all &lt;code&gt;ChronoField&lt;/code&gt; date fields.</source>
          <target state="translated">サポートされるフィールドのセットは年代順に定義され、通常はすべての &lt;code&gt;ChronoField&lt;/code&gt; 日付フィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="7b87b275acd5b0bbff5b52b9d09fd971743dbb82" translate="yes" xml:space="preserve">
          <source>The set of supported fields is defined by the chronology and normally includes all &lt;code&gt;ChronoField&lt;/code&gt; fields.</source>
          <target state="translated">サポートされているフィールドのセットは年代順に定義され、通常はすべての &lt;code&gt;ChronoField&lt;/code&gt; フィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="0cd5b52cb97e9595d03bfd112aa6100ad3af1552" translate="yes" xml:space="preserve">
          <source>The set of supported units is defined by the chronology and normally includes all &lt;code&gt;ChronoUnit&lt;/code&gt; date units except &lt;code&gt;FOREVER&lt;/code&gt;.</source>
          <target state="translated">サポートされる単位のセットは年代順に定義され、通常は &lt;code&gt;FOREVER&lt;/code&gt; を除くすべての &lt;code&gt;ChronoUnit&lt;/code&gt; 日付単位が含まれます。</target>
        </trans-unit>
        <trans-unit id="cf91e64de9db3a085379dbaade3e6f6c15d84327" translate="yes" xml:space="preserve">
          <source>The set of supported units is defined by the chronology and normally includes all &lt;code&gt;ChronoUnit&lt;/code&gt; units except &lt;code&gt;FOREVER&lt;/code&gt;.</source>
          <target state="translated">サポートされているユニットのセットは年代順に定義され、通常は &lt;code&gt;FOREVER&lt;/code&gt; を除くすべての &lt;code&gt;ChronoUnit&lt;/code&gt; ユニットが含まれます。</target>
        </trans-unit>
        <trans-unit id="bdc888943012a194683232c2ed49f35bebd1e353" translate="yes" xml:space="preserve">
          <source>The set of target module names or for an unqualified &lt;code&gt;Opens&lt;/code&gt;, an empty set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ac334c4e2b7db89d71bf277bf47b78996510f3" translate="yes" xml:space="preserve">
          <source>The set of target module names or for an unqualified export, an empty set</source>
          <target state="translated">ターゲットモジュール名のセット、または修飾されていないエクスポートの場合は空のセット</target>
        </trans-unit>
        <trans-unit id="6411c296dc3589a36374e8f730a51bc836538d36" translate="yes" xml:space="preserve">
          <source>The set of target module names or for an unqualified opens, an empty set</source>
          <target state="translated">対象となるモジュール名のセット、または修飾されていないオープンの場合は空のセット</target>
        </trans-unit>
        <trans-unit id="5cec8d2be735850abe92747462139ac2c64dc724" translate="yes" xml:space="preserve">
          <source>The set of terminals supported by a TerminalFactory.</source>
          <target state="translated">TerminalFactoryがサポートする端末の集合です。</target>
        </trans-unit>
        <trans-unit id="1eb0b192e307c8d6408074ffabaad779d8fef889" translate="yes" xml:space="preserve">
          <source>The set of terminals supported by a TerminalFactory. This class allows applications to enumerate the available CardTerminals, obtain a specific CardTerminal, or wait for the insertion or removal of cards.</source>
          <target state="translated">TerminalFactoryがサポートする端末のセット。このクラスは、アプリケーションが利用可能なCardTerminalを列挙したり、特定のCardTerminalを取得したり、カードの挿抜を待ったりすることを可能にします。</target>
        </trans-unit>
        <trans-unit id="921bf8ce163fe63c69e39a66bfba8aae02a1cc6f" translate="yes" xml:space="preserve">
          <source>The set of warnings that are to be suppressed by the compiler in the annotated element.</source>
          <target state="translated">アノテーションされた要素でコンパイラが抑制する警告のセット。</target>
        </trans-unit>
        <trans-unit id="fe5205d619c2546cedc0aae80e2949df5b42d127" translate="yes" xml:space="preserve">
          <source>The set of warnings that are to be suppressed by the compiler in the annotated element. Duplicate names are permitted. The second and successive occurrences of a name are ignored. The presence of unrecognized warning names is</source>
          <target state="translated">アノテーションされた要素の中でコンパイラが抑制する警告のセット。名前の重複を許可します。名前の2回目以降の出現は無視されます。認識されていない警告名の存在は</target>
        </trans-unit>
        <trans-unit id="cf50745559139179ac02ea11a6006ec30ea95b4e" translate="yes" xml:space="preserve">
          <source>The set of zone IDs can increase over time, although in a typical application the set of IDs is fixed. Each call to this method is thread-safe.</source>
          <target state="translated">典型的なアプリケーションではIDのセットは固定ですが、ゾーンIDのセットは時間の経過とともに増加することがあります。このメソッドを呼び出すたびにスレッドセーフになります。</target>
        </trans-unit>
        <trans-unit id="b28e0ecb07f1416bf310fc7c1fb31a72ea753196" translate="yes" xml:space="preserve">
          <source>The set's iterator returns the entries in ascending key order. The set's spliterator additionally reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, with an encounter order that is ascending key order.</source>
          <target state="translated">セットの反復子は、エントリをキーの昇順で返します。セットのspliteratorはさらに報告&lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; を&lt;/a&gt;キーの昇順された出会いのために、。</target>
        </trans-unit>
        <trans-unit id="f353985651bff15e75e3ef09bec38c15d74624a5" translate="yes" xml:space="preserve">
          <source>The set's iterator returns the entries in ascending key order. The set's spliterator is &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;fail-fast&lt;/em&gt;, and additionally reports &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt; with an encounter order that is ascending key order.</source>
          <target state="translated">セットのイテレータは、キーの昇順でエントリを返します。セットのスプリッターは&lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;遅延バインディングであり&lt;/a&gt;&lt;/em&gt;、&lt;em&gt;フェイルファスト&lt;/em&gt;であり、さらに、キーの昇順である遭遇順序で&lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;を報告します。</target>
        </trans-unit>
        <trans-unit id="499442b22634bbf31c6cc45cc4b266d5e35f872c" translate="yes" xml:space="preserve">
          <source>The set's iterator returns the entries in ascending key order. The sets's spliterator is &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;fail-fast&lt;/em&gt;, and additionally reports &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt; with an encounter order that is ascending key order.</source>
          <target state="translated">セットの反復子は、エントリをキーの昇順で返します。セットのスプリッターは&lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;遅延バインディング&lt;/a&gt;&lt;/em&gt;、&lt;em&gt;フェイルファスト&lt;/em&gt;であり、さらに、キーの昇順であるエンカウンター順序で&lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;を報告します。</target>
        </trans-unit>
        <trans-unit id="57326adf471d0608ffe63f3c2ada3c27d35abf46" translate="yes" xml:space="preserve">
          <source>The set's iterator returns the keys in ascending order. The set's spliterator additionally reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, with an encounter order that is ascending key order.</source>
          <target state="translated">セットのイテレータは、キーを昇順で返します。セットのspliteratorはさらに報告&lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; を&lt;/a&gt;キーの昇順された出会いのために、。</target>
        </trans-unit>
        <trans-unit id="4685b0d5732f702ab85c0ed76d92a22ff9945c14" translate="yes" xml:space="preserve">
          <source>The set's iterator returns the keys in ascending order. The set's spliterator additionally reports &lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt;&lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#NONNULL&quot;&gt;&lt;code&gt;Spliterator.NONNULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, with an encounter order that is ascending key order. The spliterator's comparator (see &lt;a href=&quot;../spliterator#getComparator--&quot;&gt;&lt;code&gt;Spliterator.getComparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt; if the map's comparator (see &lt;a href=&quot;concurrentskiplistmap#comparator--&quot;&gt;&lt;code&gt;comparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the map's comparator.</source>
          <target state="translated">セットの反復子は、キーを昇順で返します。セットのspliteratorはさらに報告&lt;a href=&quot;../spliterator#CONCURRENT&quot;&gt; &lt;code&gt;Spliterator.CONCURRENT&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../spliterator#NONNULL&quot;&gt; &lt;code&gt;Spliterator.NONNULL&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; を&lt;/a&gt;キーの昇順された出会いのために、。マップのコンパレーター（&lt;a href=&quot;concurrentskiplistmap#comparator--&quot;&gt; &lt;code&gt;comparator()&lt;/code&gt; を&lt;/a&gt;参照）が &lt;code&gt;null&lt;/code&gt; の場合、スプリッターのコンパレーター（&lt;a href=&quot;../spliterator#getComparator--&quot;&gt; &lt;code&gt;Spliterator.getComparator()&lt;/code&gt; &lt;/a&gt;参照）は &lt;code&gt;null&lt;/code&gt; です。それ以外の場合、スプリッターのコンパレーターは、マップのコンパレーターと同じか、同じ合計順序付けを課します。</target>
        </trans-unit>
        <trans-unit id="2714c6b13a1764a93e6b5af72f255c2219e07aa4" translate="yes" xml:space="preserve">
          <source>The set's iterator returns the keys in ascending order. The set's spliterator is &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;fail-fast&lt;/em&gt;, and additionally reports &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt; with an encounter order that is ascending key order. The spliterator's comparator (see &lt;a href=&quot;spliterator#getComparator()&quot;&gt;&lt;code&gt;Spliterator.getComparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt; if the tree map's comparator (see &lt;a href=&quot;sortedmap#comparator()&quot;&gt;&lt;code&gt;SortedMap.comparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the tree map's comparator.</source>
          <target state="translated">セットのイテレータは、キーを昇順で返します。セットのスプリッターは&lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;遅延バインディングであり&lt;/a&gt;&lt;/em&gt;、&lt;em&gt;フェイルファスト&lt;/em&gt;であり、さらに、キーの昇順である遭遇順序で&lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;を報告します。ツリーマップのコンパレーター（&lt;a href=&quot;sortedmap#comparator()&quot;&gt; &lt;code&gt;SortedMap.comparator()&lt;/code&gt; を&lt;/a&gt;参照）が &lt;code&gt;null&lt;/code&gt; の場合、スプリッターのコンパレーター（&lt;a href=&quot;spliterator#getComparator()&quot;&gt; &lt;code&gt;Spliterator.getComparator()&lt;/code&gt; &lt;/a&gt;参照）は &lt;code&gt;null&lt;/code&gt; になります。それ以外の場合、スプリッターのコンパレーターは、ツリーマップのコンパレーターと同じであるか、同じ全順序を課します。</target>
        </trans-unit>
        <trans-unit id="46790b7f24e0bc5b45cc4e19d698ecf9c001e4f2" translate="yes" xml:space="preserve">
          <source>The set's iterator returns the keys in ascending order. The set's spliterator is &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;fail-fast&lt;/em&gt;, and additionally reports &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;Spliterator.SORTED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt; with an encounter order that is ascending key order. The spliterator's comparator (see &lt;a href=&quot;spliterator#getComparator--&quot;&gt;&lt;code&gt;Spliterator.getComparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt; if the tree map's comparator (see &lt;a href=&quot;treemap#comparator--&quot;&gt;&lt;code&gt;comparator()&lt;/code&gt;&lt;/a&gt;) is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the tree map's comparator.</source>
          <target state="translated">セットの反復子は、キーを昇順で返します。セットのスプリッターは&lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;遅延バインディング&lt;/a&gt;&lt;/em&gt;、&lt;em&gt;フェイルファスト&lt;/em&gt;であり、さらに、キーの昇順であるエンカウンター順序で&lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;Spliterator.SORTED&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; &lt;/a&gt;を報告します。ツリーマップのコンパレータ（&lt;a href=&quot;treemap#comparator--&quot;&gt; &lt;code&gt;comparator()&lt;/code&gt; を&lt;/a&gt;参照）が &lt;code&gt;null&lt;/code&gt; の場合、スプリッタのコンパレータ（&lt;a href=&quot;spliterator#getComparator--&quot;&gt; &lt;code&gt;Spliterator.getComparator()&lt;/code&gt; &lt;/a&gt;参照）は &lt;code&gt;null&lt;/code&gt; です。それ以外の場合、スプリッターのコンパレーターは、ツリーマップのコンパレーターと同じか、または同じ合計順序付けを課します。</target>
        </trans-unit>
        <trans-unit id="a4aff37df53c764fa75784f9af7cc154baaca8cd" translate="yes" xml:space="preserve">
          <source>The setColorModel method is part of the ImageConsumer API which this class must implement to retrieve the pixels.</source>
          <target state="translated">setColorModelメソッドは、このクラスがピクセルを取得するために実装しなければならないImageConsumer APIの一部です。</target>
        </trans-unit>
        <trans-unit id="669f9b373a4883c6affe2d61f4ab478337d861f6" translate="yes" xml:space="preserve">
          <source>The setDimensions method is part of the ImageConsumer API which this class must implement to retrieve the pixels.</source>
          <target state="translated">setDimensions メソッドは、このクラスがピクセルを取得するために実装しなければならない ImageConsumer API の一部です。</target>
        </trans-unit>
        <trans-unit id="c2516eb73a401a0d51802b1215cb53ea3fcb29df" translate="yes" xml:space="preserve">
          <source>The setHints method is part of the ImageConsumer API which this class must implement to retrieve the pixels.</source>
          <target state="translated">setHintsメソッドは、このクラスがピクセルを取得するために実装しなければならないImageConsumer APIの一部です。</target>
        </trans-unit>
        <trans-unit id="0a7737011ca3b4f6d30e5001bcd5a5d682f03093" translate="yes" xml:space="preserve">
          <source>The setPixels method is part of the ImageConsumer API which this class must implement to retrieve the pixels.</source>
          <target state="translated">setPixelsメソッドは、このクラスがピクセルを取得するために実装しなければならないImageConsumer APIの一部です。</target>
        </trans-unit>
        <trans-unit id="253bd9282184644a5e60303ce0fbf43d67f6a7dd" translate="yes" xml:space="preserve">
          <source>The setProperties method is part of the ImageConsumer API which this class must implement to retrieve the pixels.</source>
          <target state="translated">setPropertiesメソッドは、このクラスがピクセルを取得するために実装しなければならないImageConsumer APIの一部です。</target>
        </trans-unit>
        <trans-unit id="780812be2038ec016303466bdffb453d52a56bf6" translate="yes" xml:space="preserve">
          <source>The sets of bindings and actions may be empty but must be non-&lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">バインディングとアクションのセットは空の場合がありますが、 &lt;code&gt;null&lt;/code&gt; 以外である必要があります。</target>
        </trans-unit>
        <trans-unit id="f87c627e8f563bcad46fffe662d14aaf1610d0aa" translate="yes" xml:space="preserve">
          <source>The setting control must have a default constructor that can be invoked when the event is registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f060c2185618cf2a6c32ef4425c5bbd1f9463f3a" translate="yes" xml:space="preserve">
          <source>The setup parameters and general request properties are manipulated.</source>
          <target state="translated">セットアップパラメータと一般的なリクエストプロパティを操作します。</target>
        </trans-unit>
        <trans-unit id="e45a6b9c2d290d870eaa0f880a9a918246e71542" translate="yes" xml:space="preserve">
          <source>The setup parameters are modified using the following methods:</source>
          <target state="translated">設定パラメータは以下の方法で変更します。</target>
        </trans-unit>
        <trans-unit id="3cd13c7488ba25ddcfcc26fab92f485990ee6b61" translate="yes" xml:space="preserve">
          <source>The seven one-argument public constructors provided by this class ensure that the assertion error returned by the invocation:</source>
          <target state="translated">このクラスが提供する7つの1引数のパブリック・コンストラクタは、呼び出しによって返されるアサーション・エラーを確実にします。</target>
        </trans-unit>
        <trans-unit id="c50586a794dd2d03708cb38eeaec0dfc03ceb15a" translate="yes" xml:space="preserve">
          <source>The severity of the error described by the &lt;code&gt;DOMError&lt;/code&gt; is error.</source>
          <target state="translated">&lt;code&gt;DOMError&lt;/code&gt; によって記述されたエラーの重大度はerrorです。</target>
        </trans-unit>
        <trans-unit id="cbfb5b21f94b1f39201ec64311f786525c788517" translate="yes" xml:space="preserve">
          <source>The severity of the error described by the &lt;code&gt;DOMError&lt;/code&gt; is error. A &lt;code&gt;SEVERITY_ERROR&lt;/code&gt; may not cause the processing to stop if the error can be recovered, unless &lt;code&gt;DOMErrorHandler.handleError()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMError&lt;/code&gt; によって記述されたエラーの重大度はerrorです。A &lt;code&gt;SEVERITY_ERROR&lt;/code&gt; は、エラーが回復することができる場合はしない限り、処理は、停止しない場合があります原因 &lt;code&gt;DOMErrorHandler.handleError()&lt;/code&gt; が返す &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3090b59cda4a3cfaaada15e1b142bdc3aab39edc" translate="yes" xml:space="preserve">
          <source>The severity of the error described by the &lt;code&gt;DOMError&lt;/code&gt; is fatal error.</source>
          <target state="translated">&lt;code&gt;DOMError&lt;/code&gt; によって記述されるエラーの重大度は致命的なエラーです。</target>
        </trans-unit>
        <trans-unit id="c3466b748260d572fcdcf4e5af7a15d80687e823" translate="yes" xml:space="preserve">
          <source>The severity of the error described by the &lt;code&gt;DOMError&lt;/code&gt; is fatal error. A &lt;code&gt;SEVERITY_FATAL_ERROR&lt;/code&gt; will cause the normal processing to stop. The return value of &lt;code&gt;DOMErrorHandler.handleError()&lt;/code&gt; is ignored unless the implementation chooses to continue, in which case the behavior becomes undefined.</source>
          <target state="translated">&lt;code&gt;DOMError&lt;/code&gt; によって記述されるエラーの重大度は致命的なエラーです。A &lt;code&gt;SEVERITY_FATAL_ERROR&lt;/code&gt; は、通常の処理を停止します。実装が続行することを選択しない限り、 &lt;code&gt;DOMErrorHandler.handleError()&lt;/code&gt; の戻り値は無視されます。続行することを選択した場合、動作は未定義になります。</target>
        </trans-unit>
        <trans-unit id="4dce1e66e356c13f39b0e1da4baf5b92e91bdf40" translate="yes" xml:space="preserve">
          <source>The severity of the error described by the &lt;code&gt;DOMError&lt;/code&gt; is warning.</source>
          <target state="translated">&lt;code&gt;DOMError&lt;/code&gt; によって記述されたエラーの重大度は警告です。</target>
        </trans-unit>
        <trans-unit id="faecc9cb5575ec0247ec8c48b1fbdcc24296de12" translate="yes" xml:space="preserve">
          <source>The severity of the error described by the &lt;code&gt;DOMError&lt;/code&gt; is warning. A &lt;code&gt;SEVERITY_WARNING&lt;/code&gt; will not cause the processing to stop, unless &lt;code&gt;DOMErrorHandler.handleError()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMError&lt;/code&gt; によって記述されたエラーの重大度は警告です。 &lt;code&gt;SEVERITY_WARNING&lt;/code&gt; がない限り、停止する処理が発生することはありません &lt;code&gt;DOMErrorHandler.handleError()&lt;/code&gt; が返す &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6683228de459fdaf28b8a641613d107e9fd7efe" translate="yes" xml:space="preserve">
          <source>The severity of the error, either &lt;code&gt;SEVERITY_WARNING&lt;/code&gt;, &lt;code&gt;SEVERITY_ERROR&lt;/code&gt;, or &lt;code&gt;SEVERITY_FATAL_ERROR&lt;/code&gt;.</source>
          <target state="translated">エラーの重大度 &lt;code&gt;SEVERITY_WARNING&lt;/code&gt; 、 &lt;code&gt;SEVERITY_ERROR&lt;/code&gt; 、または &lt;code&gt;SEVERITY_FATAL_ERROR&lt;/code&gt; のいずれかです。</target>
        </trans-unit>
        <trans-unit id="8d1d146216a151be9f0ea1c3654e3497f9a52dbb" translate="yes" xml:space="preserve">
          <source>The severity of this notification. It can be 0 to mean unknown severity or a value from 1 to 6 representing decreasing levels of severity. It can be represented as a decimal string or an &lt;code&gt;Integer&lt;/code&gt;.</source>
          <target state="translated">この通知の重大度。不明な重大度を意味する0か、重大度のレベルの低下を表す1から6の値です。10進文字列または &lt;code&gt;Integer&lt;/code&gt; として表すことができます。</target>
        </trans-unit>
        <trans-unit id="e160a4b6aeb2272b4bceb08e59e88dd16f02efed" translate="yes" xml:space="preserve">
          <source>The shape of the active area.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b69b5002f102c1af993d1ab3b6f359d9642e8af" translate="yes" xml:space="preserve">
          <source>The shape of the active area. The coordinates are given by &lt;code&gt;coords&lt;/code&gt; . See the shape attribute definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0eccb8cc0e921de7917ea0c1ada9687bb891455" translate="yes" xml:space="preserve">
          <source>The shaper assumes EUROPEAN as the starting context, that is, if EUROPEAN digits are encountered before any strong directional text in the string, the context is presumed to be EUROPEAN, and so the digits will not shape.</source>
          <target state="translated">シェーパは、開始コンテキストとして EUROPEAN を想定しています。つまり、文字列内の強い方向性のあるテキストの前に EUROPEAN の数字があった場合、そのコンテキストは EUROPEAN であると想定されるため、数字はシェイプされません。</target>
        </trans-unit>
        <trans-unit id="7c0ee07626a06ec319c5fa6dda80e5cd02b895c5" translate="yes" xml:space="preserve">
          <source>The shift modifier.</source>
          <target state="translated">シフト修飾子です。</target>
        </trans-unit>
        <trans-unit id="71c1d09d15500daa94744a275e60c6c2939bb498" translate="yes" xml:space="preserve">
          <source>The shift modifier. An indicator that the shift key was held down during the event.</source>
          <target state="translated">シフト修飾子。イベント中にシフトキーが押されたことを示すインジケータ。</target>
        </trans-unit>
        <trans-unit id="a66fafeb6fbab36159ed0d7cb6e57d97215745bd" translate="yes" xml:space="preserve">
          <source>The short at the buffer's current position</source>
          <target state="translated">バッファの現在位置でのショート</target>
        </trans-unit>
        <trans-unit id="576f2f40fa40978110faae7dddc7b0f100fba9e6" translate="yes" xml:space="preserve">
          <source>The short at the given index</source>
          <target state="translated">指定されたインデックスでのショート</target>
        </trans-unit>
        <trans-unit id="66f18505d5b42c405be6d263a2a68a91ad1ba54c" translate="yes" xml:space="preserve">
          <source>The short value at the buffer's current position</source>
          <target state="translated">バッファの現在位置でのショート値</target>
        </trans-unit>
        <trans-unit id="445cdd9d7081047dd595fe2a9c000aec02dddce0" translate="yes" xml:space="preserve">
          <source>The short value at the given index</source>
          <target state="translated">指定されたインデックスでの短い値</target>
        </trans-unit>
        <trans-unit id="d44b2f7b9945d3e00f503b32d73edd3c18066dda" translate="yes" xml:space="preserve">
          <source>The shorts between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the short at index</source>
          <target state="translated">バッファの現在位置とリミットの間のショートは、もしあればバッファの先頭にコピーされます。つまり、インデックス</target>
        </trans-unit>
        <trans-unit id="e6144db94e8f968200473ae365392fcfc5ce0cb6" translate="yes" xml:space="preserve">
          <source>The should be of the format 'BaseOfRange', such as 'MonthOfYear', unless the field has a range of &lt;code&gt;FOREVER&lt;/code&gt;, when only the base unit is mentioned, such as 'Year' or 'Era'.</source>
          <target state="translated">フィールドの範囲が &lt;code&gt;FOREVER&lt;/code&gt; でない限り、「Year」や「Era」などの基本単位のみが言及されている場合は、「MonthOfYear」などの「BaseOfRange」の形式にする必要があります。</target>
        </trans-unit>
        <trans-unit id="3add085de9aaf5d9e08da4a23124aa74c77dac0e" translate="yes" xml:space="preserve">
          <source>The side input tray.</source>
          <target state="translated">側面の入力トレイです。</target>
        </trans-unit>
        <trans-unit id="32380dd36b39ecdac95d6475271f9fd1eac8171d" translate="yes" xml:space="preserve">
          <source>The sign of the hours and minutes components must match. Thus, if the hours is negative, the minutes must be negative or zero. If the hours is zero, the minutes may be positive, negative or zero.</source>
          <target state="translated">時間成分と分成分の符号は一致しなければなりません。したがって、時間が負の場合、分は負またはゼロでなければなりません。時間がゼロの場合、分は正、負、ゼロのいずれかになります。</target>
        </trans-unit>
        <trans-unit id="dc2a7170814ac7bf2d717ef435fa78b42211f6f7" translate="yes" xml:space="preserve">
          <source>The sign of the hours, minutes and seconds components must match. Thus, if the hours is negative, the minutes and seconds must be negative or zero.</source>
          <target state="translated">時間、分、秒の成分の符号は一致しなければなりません。したがって、時が負の場合、分と秒は負またはゼロでなければなりません。</target>
        </trans-unit>
        <trans-unit id="ee96bcfbe6567e84f1f76ed99e4ecc836a96fca7" translate="yes" xml:space="preserve">
          <source>The sign of the years and months units will be the same after normalization. For example, a period of &quot;1 year and -25 months&quot; will be normalized to &quot;-1 year and -1 month&quot;.</source>
          <target state="translated">年月単位の符号は正規化後も同じになります。例えば、「1年-25ヶ月」の期間は「-1年-1ヶ月」に正規化されます。</target>
        </trans-unit>
        <trans-unit id="63a67b56142738f69b16820d1365a14f5a4ee3f6" translate="yes" xml:space="preserve">
          <source>The signature algorithm can be, among others, the NIST standard DSA, using DSA and SHA-1. The DSA algorithm using the SHA-1 message digest algorithm can be specified as &lt;code&gt;SHA1withDSA&lt;/code&gt;. In the case of RSA, there are multiple choices for the message digest algorithm, so the signing algorithm could be specified as, for example, &lt;code&gt;MD2withRSA&lt;/code&gt;, &lt;code&gt;MD5withRSA&lt;/code&gt;, or &lt;code&gt;SHA1withRSA&lt;/code&gt;. The algorithm name must be specified, as there is no default.</source>
          <target state="translated">署名アルゴリズムは、とりわけ、DSAおよびSHA-1を使用するNIST標準DSAです。SHA-1メッセージダイジェストアルゴリズムを使用するDSAアルゴリズムは、 &lt;code&gt;SHA1withDSA&lt;/code&gt; として指定できます。RSAの場合、メッセージダイジェストアルゴリズムには複数の選択肢があるため、署名アルゴリズムは、たとえば、 &lt;code&gt;MD2withRSA&lt;/code&gt; 、 &lt;code&gt;MD5withRSA&lt;/code&gt; 、または &lt;code&gt;SHA1withRSA&lt;/code&gt; として指定できます。デフォルトがないため、アルゴリズム名を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="9a3f13d175903d19542fafe1776e926f2289f74d" translate="yes" xml:space="preserve">
          <source>The signature algorithm can be, among others, the NIST standard DSA, using DSA and SHA-1. The algorithm is specified using the same convention as that for signatures. The DSA algorithm using the SHA-1 message digest algorithm can be specified, for example, as &quot;SHA/DSA&quot; or &quot;SHA-1/DSA&quot; (they are equivalent). In the case of RSA, there are multiple choices for the message digest algorithm, so the signing algorithm could be specified as, for example, &quot;MD2/RSA&quot;, &quot;MD5/RSA&quot; or &quot;SHA-1/RSA&quot;. The algorithm name must be specified, as there is no default.</source>
          <target state="translated">署名アルゴリズムは、とりわけ、DSAおよびSHA-1を使用して、NIST標準のDSAとすることができる。アルゴリズムは、署名の場合と同じ規約を用いて指定される。SHA-1メッセージダイジェストアルゴリズムを用いたDSAアルゴリズムは、例えば、「SHA/DSA」または「SHA-1/DSA」として指定することができる(これらは等価である)。RSAの場合、メッセージダイジェストアルゴリズムには複数の選択肢があるため、署名アルゴリズムは、例えば、「MD2/RSA」、「MD5/RSA」、または「SHA-1/RSA」のように指定することができる。デフォルトではないので、アルゴリズム名を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="a4580befbe651a07f41f435d90006b6e04a4a69a" translate="yes" xml:space="preserve">
          <source>The signature algorithm can be, among others, the NIST standard DSA, using DSA and SHA-256. The DSA algorithm using the SHA-256 message digest algorithm can be specified as &lt;code&gt;SHA256withDSA&lt;/code&gt;. In the case of RSA the signing algorithm could be specified as, for example, &lt;code&gt;SHA256withRSA&lt;/code&gt;. The algorithm name must be specified, as there is no default.</source>
          <target state="translated">署名アルゴリズムは、とりわけ、DSAおよびSHA-256を使用するNIST標準DSAにすることができます。SHA-256メッセージダイジェストアルゴリズムを使用するDSAアルゴリズムは、 &lt;code&gt;SHA256withDSA&lt;/code&gt; として指定できます。RSAの場合、署名アルゴリズムは、たとえば、 &lt;code&gt;SHA256withRSA&lt;/code&gt; として指定できます。デフォルトがないため、アルゴリズム名を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="b6ff0462ece74d8c29d34b7ea3288f3bf76eb9da" translate="yes" xml:space="preserve">
          <source>The signature algorithm can be, among others, the NIST standard DSA, using DSA and SHA-256. The algorithm is specified using the same convention as that for signatures. The DSA algorithm using the SHA-256 message digest algorithm can be specified, for example, as &quot;SHA256withDSA&quot;. In the case of RSA the signing algorithm could be specified as, for example, &quot;SHA256withRSA&quot;. The algorithm name must be specified, as there is no default.</source>
          <target state="translated">署名アルゴリズムは、とりわけ、DSAおよびSHA-256を使用して、NIST標準のDSAとすることができる。アルゴリズムは、署名の場合と同じ規約を用いて指定される。SHA-256メッセージダイジェストアルゴリズムを使用するDSAアルゴリズムは、例えば「SHA256withDSA」として指定できる。RSA の場合、署名アルゴリズムは、例えば「SHA256withRSA」と指定できる。既定値がないので、アルゴリズム名を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="ff39bceb78bb23fcbbe70e1f5873034144eb781f" translate="yes" xml:space="preserve">
          <source>The signature algorithm name must be a standard Java Security name (such as &quot;SHA1withRSA&quot;, &quot;SHA256withECDSA&quot;, and so on). See Appendix A in the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/crypto/CryptoSpec.html#AppA&quot;&gt; Java Cryptography Architecture API Specification &amp;amp; Reference &lt;/a&gt; for information about standard algorithm names.</source>
          <target state="translated">署名アルゴリズム名は、標準のJavaセキュリティー名でなければなりません（「SHA1withRSA」、「SHA256withECDSA」など）。標準アルゴリズム名については、&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/security/crypto/CryptoSpec.html#AppA&quot;&gt;Java暗号化アーキテクチャAPI仕様＆リファレンスの&lt;/a&gt;付録Aを参照してください。</target>
        </trans-unit>
        <trans-unit id="54dcf510ed19a2b7f8be77cd8487aba2b8f5418c" translate="yes" xml:space="preserve">
          <source>The signature algorithm name must be a standard Java Security name (such as &quot;SHA1withRSA&quot;, &quot;SHA256withECDSA&quot;, and so on). See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html&quot;&gt; Java Security Standard Algorithm Names&lt;/a&gt; document for information about standard algorithm names.</source>
          <target state="translated">署名アルゴリズム名は、標準のJavaセキュリティ名（「SHA1withRSA」、「SHA256withECDSA」など）である必要があります。&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html&quot;&gt;標準アルゴリズム名&lt;/a&gt;については、Javaセキュリティの標準アルゴリズム名のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="99ba91b212deb5cbd4f03a4ada4aa8a3e35bedeb" translate="yes" xml:space="preserve">
          <source>The signature algorithm name must be a standard Java Security name (such as &quot;SHA1withRSA&quot;, &quot;SHA256withECDSA&quot;, and so on). See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/security/standard-names.html&quot;&gt; Java Security Standard Algorithm Names&lt;/a&gt; document for information about standard algorithm names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb3f7329a67b3d4fbdda3d73c3b635eb5d93e29" translate="yes" xml:space="preserve">
          <source>The signature implementation is reset to its initial state (the state it was in after a call to one of the &lt;code&gt;engineInitSign&lt;/code&gt; methods) and can be reused to generate further signatures with the same private key. This method should be abstract, but we leave it concrete for binary compatibility. Knowledgeable providers should override this method.</source>
          <target state="translated">署名の実装は初期状態（ &lt;code&gt;engineInitSign&lt;/code&gt; メソッドの1つを呼び出した後の状態）にリセットされ、同じ秘密鍵でさらに署名を生成するために再利用できます。このメソッドは抽象的である必要がありますが、バイナリ互換性のために具体化します。知識のあるプロバイダーは、このメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="045f0d9e22ad722e6aac3627bd8e3b08a1c1d73b" translate="yes" xml:space="preserve">
          <source>The signature is invalid.</source>
          <target state="translated">署名は無効です。</target>
        </trans-unit>
        <trans-unit id="42f242a0d237c989ce338fd4a99732b1e016a258" translate="yes" xml:space="preserve">
          <source>The signature of the given element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ded27c36fe5ab7411d3e61933f2340152846415" translate="yes" xml:space="preserve">
          <source>The signed object is a &quot;deep copy&quot; (in serialized form) of an original object. Once the copy is made, further manipulation of the original object has no side effect on the copy.</source>
          <target state="translated">署名されたオブジェクトは、オリジナルのオブジェクトの「ディープコピー」(シリアル化された形で)です。一度コピーが作成されると、元のオブジェクトをそれ以上操作してもコピーには何の副作用もありません。</target>
        </trans-unit>
        <trans-unit id="f0a59c44048f0e255610b14982004df77ebcfed2" translate="yes" xml:space="preserve">
          <source>The simple name of an array is the simple name of the component type with &quot;[]&quot; appended. In particular the simple name of an array whose component type is anonymous is &quot;[]&quot;.</source>
          <target state="translated">配列の単純名は、コンポーネント型の単純名に「[]」を付加したものです。特にコンポーネント型が無名の配列の単純名は&quot;[]&quot;です。</target>
        </trans-unit>
        <trans-unit id="4856758e2bc679598150b5beb9072d5658f18a73" translate="yes" xml:space="preserve">
          <source>The simplest implementation of this interface is just:</source>
          <target state="translated">このインターフェイスの最もシンプルな実装は、ただのものです。</target>
        </trans-unit>
        <trans-unit id="2790b740b20a089db3044ca3bea2a585feabf923" translate="yes" xml:space="preserve">
          <source>The simplest method is XYZ scaling. In this method each device XYZ value is converted to a PCS XYZ value by multiplying it by the ratio of the PCS white point (D50) to the device white point.</source>
          <target state="translated">最も単純な方法は XYZ スケーリングである。この方法では、各デバイスの XYZ 値を PCS の白点とデバイスの白点の比(D50)を乗じて PCS の XYZ 値に変換する。</target>
        </trans-unit>
        <trans-unit id="7601d63e6d779f847c6607714e8ec53d040dbbd9" translate="yes" xml:space="preserve">
          <source>The simplest type of ID is that from &lt;code&gt;ZoneOffset&lt;/code&gt;. This consists of 'Z' and IDs starting with '+' or '-'.</source>
          <target state="translated">最も単純なタイプのIDは、 &lt;code&gt;ZoneOffset&lt;/code&gt; からのものです。これは、「Z」と「+」または「-」で始まるIDで構成されます。</target>
        </trans-unit>
        <trans-unit id="c4705f5b2ef8f72b3f9ee11b55f079122ada80e7" translate="yes" xml:space="preserve">
          <source>The simplest use of &lt;code&gt;EventHandler&lt;/code&gt; is to install a listener that calls a method on the target object with no arguments. In the following example we create an &lt;code&gt;ActionListener&lt;/code&gt; that invokes the &lt;code&gt;toFront&lt;/code&gt; method on an instance of &lt;code&gt;javax.swing.JFrame&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EventHandler&lt;/code&gt; の最も簡単な使用法は、引数なしでターゲットオブジェクトのメソッドを呼び出すリスナーをインストールすることです。次の例では、 &lt;code&gt;javax.swing.JFrame&lt;/code&gt; のインスタンスで &lt;code&gt;toFront&lt;/code&gt; メソッドを呼び出す &lt;code&gt;ActionListener&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="ddd983cd346b58b2aaf0f326494e8259d55fa6b4" translate="yes" xml:space="preserve">
          <source>The simulated full-screen mode places and resizes the window to the maximum possible visible area of the screen. However, the native windowing system may modify the requested geometry-related data, so that the &lt;code&gt;Window&lt;/code&gt; object is placed and sized in a way that corresponds closely to the desktop settings.</source>
          <target state="translated">シミュレートされた全画面モードでは、ウィンドウが画面の可能な最大表示領域に配置およびサイズ変更されます。ただし、ネイティブウィンドウシステムは、要求されたジオメトリ関連データを変更する場合があるため、デスクトップ設定に厳密に対応する方法で &lt;code&gt;Window&lt;/code&gt; オブジェクトが配置およびサイズ変更されます。</target>
        </trans-unit>
        <trans-unit id="72ac5c657bc308d65c18c1fea6c9f1bba77d6a25" translate="yes" xml:space="preserve">
          <source>The single instance of &lt;code&gt;EmptySelectionModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EmptySelectionModel&lt;/code&gt; の単一インスタンス。</target>
        </trans-unit>
        <trans-unit id="37fb3690360544e839a41fbd8b8e5c5a45340b29" translate="yes" xml:space="preserve">
          <source>The singleton instance for the 'Heisei' era (1989-01-08 - 2019-04-30) which has the value 2.</source>
          <target state="translated">値2を持つ「平成」時代(1989-01-08~2019-04-30)のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="e33d8bb98b0a97976f391846111c47207f038c46" translate="yes" xml:space="preserve">
          <source>The singleton instance for the 'Heisei' era (1989-01-08 - current) which has the value 2.</source>
          <target state="translated">平成の時代(1989-01-08-現在)のシングルトンインスタンスで、値は2です。</target>
        </trans-unit>
        <trans-unit id="2ad53a43c41fc711e9fc765c7a76f4717f283334" translate="yes" xml:space="preserve">
          <source>The singleton instance for the 'Meiji' era (1868-01-01 - 1912-07-29) which has the value -1.</source>
          <target state="translated">値 -1 を持つ '明治' 時代 (1868-01-01-1912-07-29)のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="b9db443e933ddfb77a938341252b1fee77a5a329" translate="yes" xml:space="preserve">
          <source>The singleton instance for the 'Reiwa' era (2019-05-01 - ) which has the value 3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b69eb560816c3df54a738d4e567691842c889c" translate="yes" xml:space="preserve">
          <source>The singleton instance for the 'Reiwa' era (2019-05-01 - ) which has the value 3. The end date of this era is not specified, unless the Japanese Government defines it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90af347fd6251915ffab61ea28205da8ea6f749" translate="yes" xml:space="preserve">
          <source>The singleton instance for the 'Showa' era (1926-12-25 - 1989-01-07) which has the value 1.</source>
          <target state="translated">値1を持つ「昭和」時代のシングルトンインスタンス(1926-12-25-1989-01-07)。</target>
        </trans-unit>
        <trans-unit id="374b989066c6a8b313cd532f43d4978a478afb4f" translate="yes" xml:space="preserve">
          <source>The singleton instance for the 'Taisho' era (1912-07-30 - 1926-12-24) which has the value 0.</source>
          <target state="translated">大正時代(1912-07-30~1926-12-24)のシングルトンインスタンスで、値は0です。</target>
        </trans-unit>
        <trans-unit id="d1b649d3aca82f1b585114b89db8e7c3dce97afa" translate="yes" xml:space="preserve">
          <source>The singleton instance for the current era, 'Anno Hegirae', which has the numeric value 1.</source>
          <target state="translated">現在の時代のシングルトンインスタンス 'Anno Hegirae' は数値 1 を持っています。</target>
        </trans-unit>
        <trans-unit id="33553f68eda534c6d7ec7b5b2097412f8aa169ef" translate="yes" xml:space="preserve">
          <source>The singleton instance for the current era, 'Buddhist Era', which has the numeric value 1.</source>
          <target state="translated">現在の時代、'仏教時代'のシングルトンインスタンスで、数値は1です。</target>
        </trans-unit>
        <trans-unit id="18e0a9282dc09dc3f8d780bd88319f70049b3bc8" translate="yes" xml:space="preserve">
          <source>The singleton instance for the current era, 'Current Era', which has the numeric value 1.</source>
          <target state="translated">現在の時代のシングルトンインスタンスである'Current Era'は、数値1を持っています。</target>
        </trans-unit>
        <trans-unit id="a9078c5f2b2fb0c83101cd2aab438d63e4d37967" translate="yes" xml:space="preserve">
          <source>The singleton instance for the current era, 'Republic of China Era', which has the numeric value 1.</source>
          <target state="translated">現在の時代、'Republic of China Era'のシングルトンインスタンスで、数値は1です。</target>
        </trans-unit>
        <trans-unit id="37056cb4b1f3c2ee07efbc354ac2f5400ad2df63" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Friday.</source>
          <target state="translated">金曜日の曜日のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="831fb5e46d4c1ddc036d82d37411d75aecf60668" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Friday. This has the numeric value of &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">金曜日のシングルトンインスタンス。これの数値は &lt;code&gt;5&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2ec9586cccb6a778352e7a8dd8a12d2579e4859d" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Monday.</source>
          <target state="translated">月曜日の曜日のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="854466f9d7677acbef6b426929908eeaea0c0ac9" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Monday. This has the numeric value of &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">月曜日の曜日のシングルトンインスタンス。これの数値は &lt;code&gt;1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="95b6e13ea6c89b236812e595ea75de12418330ff" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Saturday.</source>
          <target state="translated">土曜日の曜日のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="6eec5084ed707e201918c7bb81e4ef4045f48ec1" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Saturday. This has the numeric value of &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">土曜日の曜日のシングルトンインスタンス。これの数値は &lt;code&gt;6&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="78d35379c7acd7ced1ce07f8a02d53fa46868e5c" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Sunday.</source>
          <target state="translated">日曜日の曜日のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="ec410919ffc74e6ed0841570a165d1ab4f8518b3" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Sunday. This has the numeric value of &lt;code&gt;7&lt;/code&gt;.</source>
          <target state="translated">日曜日の曜日のシングルトンインスタンス。これの数値は &lt;code&gt;7&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="44f30fc5690e19a76a107f962afc755c430f1fa8" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Thursday.</source>
          <target state="translated">木曜日の曜日のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="1b47f4c269ae66d8d89624e16dab12fae314b4ae" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Thursday. This has the numeric value of &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">木曜日の曜日のシングルトンインスタンス。これの数値は &lt;code&gt;4&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9f862e8dc4406d39bdc49daea39643bfd67e82cc" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Tuesday.</source>
          <target state="translated">火曜日の曜日のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="8710ed5941f516f24bb8dc09854d8cbc78a468d6" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Tuesday. This has the numeric value of &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">火曜日の曜日のシングルトンインスタンス。これの数値は &lt;code&gt;2&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4203c1fdd0478946eb06f1dc84aca7d5d14b634f" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Wednesday.</source>
          <target state="translated">水曜日の曜日のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="74f5d636b9653c07ec4dfb5343c1209f6f45dee7" translate="yes" xml:space="preserve">
          <source>The singleton instance for the day-of-week of Wednesday. This has the numeric value of &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">水曜日の曜日のシングルトンインスタンス。これの数値は &lt;code&gt;3&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d7713ef876ec0d0ff70d52271f9980dec01c333d" translate="yes" xml:space="preserve">
          <source>The singleton instance for the era before the current one, 'Before Buddhist Era', which has the numeric value 0.</source>
          <target state="translated">現在の時代よりも前の時代である「仏教時代以前」のシングルトンインスタンスで、数値は0です。</target>
        </trans-unit>
        <trans-unit id="b7f42f3144aa34fcb5eacd6614462e8933d9e7c5" translate="yes" xml:space="preserve">
          <source>The singleton instance for the era before the current one, 'Before Current Era', which has the numeric value 0.</source>
          <target state="translated">現在の時代よりも前の時代、'Before Current Era'のシングルトンインスタンスで、数値は0です。</target>
        </trans-unit>
        <trans-unit id="4b5ed684b1759647e9750f9a4982ba3a88602d2a" translate="yes" xml:space="preserve">
          <source>The singleton instance for the era before the current one, 'Before Republic of China Era', which has the numeric value 0.</source>
          <target state="translated">現在の時代よりも前の時代、'Before Republic of China Era'のシングルトンインスタンスで、数値は0です。</target>
        </trans-unit>
        <trans-unit id="41eacb4f52ecff4535c6e0cd6e7596d3c29916cb" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of April with 30 days.</source>
          <target state="translated">30日の4月の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="3498e33856b3bc1fa91dfe207455e4d516871a4f" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of April with 30 days. This has the numeric value of &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">30日の4月のシングルトンインスタンス。これの数値は &lt;code&gt;4&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="70bb761c71fbabd2f2c266b82d999a1f7068ff4d" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of August with 31 days.</source>
          <target state="translated">8月の31日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="a0dc754b17787f96f2b3260ec04194b05222744d" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of August with 31 days. This has the numeric value of &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="translated">31日の8月のシングルトンインスタンス。これの数値は &lt;code&gt;8&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d30a73566a6e9dbf9efa2a653e803caa4ad5d73d" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of December with 31 days.</source>
          <target state="translated">12月の31日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="afeded1a61c1256c947b92fd91be8f38f688ade2" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of December with 31 days. This has the numeric value of &lt;code&gt;12&lt;/code&gt;.</source>
          <target state="translated">31日の12月のシングルトンインスタンス。これの数値は &lt;code&gt;12&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="806b6cb116e04b29f83c29dc9e3bdcb40a592e14" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of February with 28 days, or 29 in a leap year.</source>
          <target state="translated">2月の28日、うるう年の29日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="58ce16c9d66eb0950d2e8d8a844af1f67a40ea2b" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of February with 28 days, or 29 in a leap year. This has the numeric value of &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">2月の28日のシングルトンインスタンス、またはうるう年の29日。これの数値は &lt;code&gt;2&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="74e203bb14a07d04b6220cd4725722658def7d5a" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of January with 31 days.</source>
          <target state="translated">1月の31日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="dbbaed2d99f6b4a91bd5a263c15920ce26db8422" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of January with 31 days. This has the numeric value of &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">31日の1月のシングルトンインスタンス。これの数値は &lt;code&gt;1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="84a201e965918b73f6f0a51fb95d40167274284d" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of July with 31 days.</source>
          <target state="translated">7月の31日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="dbf8150d5e374559752b5a4144a24f8a49cc43d5" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of July with 31 days. This has the numeric value of &lt;code&gt;7&lt;/code&gt;.</source>
          <target state="translated">31日の7月のシングルトンインスタンス。これの数値は &lt;code&gt;7&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9d2ece5339a8942535bba2423c8f2d06bdcec0c3" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of June with 30 days.</source>
          <target state="translated">6月の30日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="171ab07a731170963fee5c54879a243aba461820" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of June with 30 days. This has the numeric value of &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">6月の30日間のシングルトンインスタンス。これの数値は &lt;code&gt;6&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5b1f2132810b846baf93a7cbba2b98223085cec9" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of March with 31 days.</source>
          <target state="translated">3月の31日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="c44b47253f5146f50a56c9c4736034ad855145f6" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of March with 31 days. This has the numeric value of &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">3月の31日間のシングルトンインスタンス。これの数値は &lt;code&gt;3&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e931f22dda40194f4e445071e6bc03593a7d73b9" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of May with 31 days.</source>
          <target state="translated">31日の5月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="695b98cf8bd88f36fe7a8d59e7b014104eb39c42" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of May with 31 days. This has the numeric value of &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">5月の31日のシングルトンインスタンス。これの数値は &lt;code&gt;5&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="573cb230de428c272b4736649c6a3825e16254bc" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of November with 30 days.</source>
          <target state="translated">30日の11月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="5e6f9285c59d2cfa11644efd29aaef36209c76e3" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of November with 30 days. This has the numeric value of &lt;code&gt;11&lt;/code&gt;.</source>
          <target state="translated">11月の30日間のシングルトンインスタンス。これの数値は &lt;code&gt;11&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d5882f0e70b11a8c3279fc0103861f8c7c5df376" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of October with 31 days.</source>
          <target state="translated">10月の31日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="77d17e30353cc1d8703e4ac383dfbcf24f64b2d7" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of October with 31 days. This has the numeric value of &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">31日の10月のシングルトンインスタンス。これの数値は &lt;code&gt;10&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="680e4d7736cb5471597da49f9edf29e6acb2f15a" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of September with 30 days.</source>
          <target state="translated">9月の30日の月のシングルトンインスタンス。</target>
        </trans-unit>
        <trans-unit id="cd70f2cccb7c35228c39eb4016b4bd39aab9ea64" translate="yes" xml:space="preserve">
          <source>The singleton instance for the month of September with 30 days. This has the numeric value of &lt;code&gt;9&lt;/code&gt;.</source>
          <target state="translated">9月の30日間のシングルトンインスタンス。これの数値は &lt;code&gt;9&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c2680158e394a00554706dd97e3706afc22ecd31" translate="yes" xml:space="preserve">
          <source>The size (in bytes) of this memory segment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73fac7de9937b7c2c258ee59ea1bff17d0831e6" translate="yes" xml:space="preserve">
          <source>The size button text property.</source>
          <target state="translated">size ボタンのテキストプロパティです。</target>
        </trans-unit>
        <trans-unit id="6477b3618879a5e84f85a97df286437336401595" translate="yes" xml:space="preserve">
          <source>The size is measured in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4a376ac4e2c6d17da8f59a9b9910d704858cb8" translate="yes" xml:space="preserve">
          <source>The size is updated when recording buffers are flushed. If the recording is not written to the disk repository the returned size is always &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d53c63b615a428bc85b992b7c04eed456185922" translate="yes" xml:space="preserve">
          <source>The size of &lt;code&gt;JOptionPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JOptionPane&lt;/code&gt; のサイズ。</target>
        </trans-unit>
        <trans-unit id="af1f4f7f642c922c1567312119a5e4ad52a0724a" translate="yes" xml:space="preserve">
          <source>The size of a doc is computed based on the print data representation class as specified by the doc's &lt;a href=&quot;../../docflavor&quot;&gt;&lt;code&gt;DocFlavor&lt;/code&gt;&lt;/a&gt;, as shown in the table below.</source>
          <target state="translated">次の表に示すように、ドキュメントのサイズは、ドキュメントの&lt;a href=&quot;../../docflavor&quot;&gt; &lt;code&gt;DocFlavor&lt;/code&gt; &lt;/a&gt;で指定された印刷データ表現クラスに基づいて計算されます。</target>
        </trans-unit>
        <trans-unit id="23d732c5b294224e6c7bc0db0723f73dec9504a9" translate="yes" xml:space="preserve">
          <source>The size of components.</source>
          <target state="translated">部品の大きさ。</target>
        </trans-unit>
        <trans-unit id="2b33100b39966e88e8e151f1b8c55dcbceae0f08" translate="yes" xml:space="preserve">
          <source>The size of each frame, in bytes.</source>
          <target state="translated">各フレームのサイズをバイト単位で指定します。</target>
        </trans-unit>
        <trans-unit id="8f9034f1b6e8e551c9315d1f020fa1ede6c673ba" translate="yes" xml:space="preserve">
          <source>The size of each segment is estimated by counting the size of each input file to be transmitted in the segment, along with the size of its name and other transmitted properties.</source>
          <target state="translated">各セグメントのサイズは、セグメント内で送信される各入力ファイルのサイズを、その名前やその他の送信プロパティのサイズとともにカウントすることで推定される。</target>
        </trans-unit>
        <trans-unit id="6945db6b9aaec59e9a237996f6de7fd4d6e01473" translate="yes" xml:space="preserve">
          <source>The size of the attribute value, in bytes.</source>
          <target state="translated">属性値のサイズをバイト単位で指定します。</target>
        </trans-unit>
        <trans-unit id="d377fbc634cb1fcaa6d6aeebdf8a7126697e9a7f" translate="yes" xml:space="preserve">
          <source>The size of the divider while the dragging session is valid.</source>
          <target state="translated">ドラッグセッションが有効な間の仕切りのサイズ。</target>
        </trans-unit>
        <trans-unit id="2babd81935a68bc574cf140a8ed25e62a8a4ddfe" translate="yes" xml:space="preserve">
          <source>The size of the frame includes any area designated for the border. The dimensions of the border area may be obtained using the &lt;code&gt;getInsets&lt;/code&gt; method, however, since these dimensions are platform-dependent, a valid insets value cannot be obtained until the frame is made displayable by either calling &lt;code&gt;pack&lt;/code&gt; or &lt;code&gt;show&lt;/code&gt;. Since the border area is included in the overall size of the frame, the border effectively obscures a portion of the frame, constraining the area available for rendering and/or displaying subcomponents to the rectangle which has an upper-left corner location of &lt;code&gt;(insets.left, insets.top)&lt;/code&gt;, and has a size of &lt;code&gt;width - (insets.left + insets.right)&lt;/code&gt; by &lt;code&gt;height - (insets.top + insets.bottom)&lt;/code&gt;.</source>
          <target state="translated">フレームのサイズには、境界線用に指定された領域が含まれます。境界領域の寸法は &lt;code&gt;getInsets&lt;/code&gt; メソッドを使用して取得できますが、これらの寸法はプラットフォームに依存するため、 &lt;code&gt;pack&lt;/code&gt; または &lt;code&gt;show&lt;/code&gt; を呼び出してフレームを表示できるようになるまで、有効なインセット値を取得できません。境界領域はフレームの全体的なサイズに含まれるため、境界はフレームの一部を効果的に覆い隠し、サブコンポーネントのレンダリングや表示に使用できる領域を、左上隅の位置が &lt;code&gt;(insets.left, insets.top)&lt;/code&gt; の長方形に制限します。 、左insets.top） 、及びサイズ有する &lt;code&gt;width - (insets.left + insets.right)&lt;/code&gt; することにより &lt;code&gt;height - (insets.top + insets.bottom)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aef354301526547b65cbdbff808019ed00981550" translate="yes" xml:space="preserve">
          <source>The size of the locked region</source>
          <target state="translated">ロック領域のサイズ</target>
        </trans-unit>
        <trans-unit id="62d979f3aaa643816fa9bb9e52650da3be4ad740" translate="yes" xml:space="preserve">
          <source>The size of the smaller file (in bytes) when the files are different sizes and every byte of the smaller file is identical to the corresponding byte of the larger file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd49f5a54a05c0e211000f48c06808a4e45ab2a" translate="yes" xml:space="preserve">
          <source>The size of the socket receive buffer</source>
          <target state="translated">ソケット受信バッファのサイズ</target>
        </trans-unit>
        <trans-unit id="b93eb1ff5703dad725f268be21bfebee369e1241" translate="yes" xml:space="preserve">
          <source>The size of the socket receive buffer.</source>
          <target state="translated">ソケット受信バッファのサイズ。</target>
        </trans-unit>
        <trans-unit id="ac94f9348a7ec8ca8eb5a0577c7a3672cb67beac" translate="yes" xml:space="preserve">
          <source>The size of the socket send buffer</source>
          <target state="translated">ソケット送信バッファのサイズ</target>
        </trans-unit>
        <trans-unit id="afb9a30fb21697b87a94f349ade50c4c64721e5a" translate="yes" xml:space="preserve">
          <source>The size of the socket send buffer.</source>
          <target state="translated">ソケット送信バッファのサイズ。</target>
        </trans-unit>
        <trans-unit id="f546bdf38de152c096164ced3cb3faeef1188d54" translate="yes" xml:space="preserve">
          <source>The size, in bytes, of the partition or &lt;code&gt;0L&lt;/code&gt; if this abstract pathname does not name a partition</source>
          <target state="translated">パーティションのサイズ（バイト単位）、またはこの抽象パス名がパーティションを指定していない場合は &lt;code&gt;0L&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ff81126a609e08d4d5e8904a818aea8df3f6adb" translate="yes" xml:space="preserve">
          <source>The size, in bytes, of the partition or &lt;code&gt;0L&lt;/code&gt; if this abstract pathname does not name a partition or if the size cannot be obtained</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e7580d4eabd26a16573da1f1e6884d637aaaa9" translate="yes" xml:space="preserve">
          <source>The slider can show both major tick marks, and minor tick marks between the major ones. The number of values between the tick marks is controlled with &lt;code&gt;setMajorTickSpacing&lt;/code&gt; and &lt;code&gt;setMinorTickSpacing&lt;/code&gt;. Painting of tick marks is controlled by &lt;code&gt;setPaintTicks&lt;/code&gt;.</source>
          <target state="translated">スライダーには、メジャー目盛りとメジャー目盛りの間のマイナー目盛りの両方を表示できます。目盛り間の値の数は、 &lt;code&gt;setMajorTickSpacing&lt;/code&gt; および &lt;code&gt;setMinorTickSpacing&lt;/code&gt; で制御されます。目盛りのペイントは、 &lt;code&gt;setPaintTicks&lt;/code&gt; によって制御されます。</target>
        </trans-unit>
        <trans-unit id="eb6ffd0649eec316588f1e098e996254023ca6c5" translate="yes" xml:space="preserve">
          <source>The smallest acceptable size for the thumb.</source>
          <target state="translated">親指の許容最小サイズ。</target>
        </trans-unit>
        <trans-unit id="608588a6ce7faa309c72f3d591de7b6a527d1475" translate="yes" xml:space="preserve">
          <source>The smallest grid that can be laid out by the grid bag layout.</source>
          <target state="translated">グリッドバッグのレイアウトでレイアウトできる最小のグリッド。</target>
        </trans-unit>
        <trans-unit id="eccc9011507e2f8d69cd68d30db124741a00ce17" translate="yes" xml:space="preserve">
          <source>The smallest integer in this set-of-integer attribute that is greater than &lt;code&gt;x&lt;/code&gt;, or &lt;code&gt;-1&lt;/code&gt; if no integer in this set-of-integer attribute is greater than &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">より大きい整数型セットの属性の中で最小の整数 &lt;code&gt;x&lt;/code&gt; 、または &lt;code&gt;-1&lt;/code&gt; この整数型セットの属性には整数がより大きくない場合 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
