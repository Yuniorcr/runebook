<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="72a83add2c5ede877c10d23f302d3e17accbadab" translate="yes" xml:space="preserve">
          <source>Objects</source>
          <target state="translated">Objects</target>
        </trans-unit>
        <trans-unit id="e5df1121f466f02f01f792c05e41d25ef819ff1f" translate="yes" xml:space="preserve">
          <source>Objects are stored in naming and directory services in different ways. If an object store supports storing Java objects, it might support storing an object in its serialized form. However, some naming and directory services do not support the storing of Java objects. Furthermore, for some objects in the directory, Java programs are but one group of applications that access them. In this case, a serialized Java object might not be the most appropriate representation. JNDI defines a &lt;em&gt;reference&lt;/em&gt;, represented by the &lt;code&gt;Reference&lt;/code&gt; class, which contains information on how to construct a copy of the object. JNDI will attempt to turn references looked up from the directory into the Java objects they represent, so that JNDI clients have the illusion that what is stored in the directory are Java objects.</source>
          <target state="translated">オブジェクトは、さまざまな方法でネーミングサービスとディレクトリサービスに格納されます。オブジェクトストアがJavaオブジェクトの格納をサポートしている場合は、シリアル化された形式でオブジェクトを格納することもできます。ただし、一部のネーミングサービスとディレクトリサービスは、Javaオブジェクトの格納をサポートしていません。さらに、ディレクトリ内の一部のオブジェクトでは、Javaプログラムはそれらにアクセスするアプリケーションの1つのグループにすぎません。この場合、シリアライズされたJavaオブジェクトは、最も適切な表現ではない可能性があります。JNDIを定義&lt;em&gt;参照&lt;/em&gt;によって表される、 &lt;code&gt;Reference&lt;/code&gt; オブジェクトのコピーを作成する方法に関する情報を含むクラス。JNDIは、ディレクトリから検索された参照をそれらが表すJavaオブジェクトに変換しようとするため、JNDIクライアントは、ディレクトリに格納されているものがJavaオブジェクトであると錯覚します。</target>
        </trans-unit>
        <trans-unit id="34b34106a5eafb1f2a9d13366aeebbc33aead71f" translate="yes" xml:space="preserve">
          <source>Objects implementing the &lt;code&gt;NamedNodeMap&lt;/code&gt; interface are used to represent collections of nodes that can be accessed by name.</source>
          <target state="translated">Objects implementing the &lt;code&gt;NamedNodeMap&lt;/code&gt; interface are used to represent collections of nodes that can be accessed by name.</target>
        </trans-unit>
        <trans-unit id="52795a0dce869385a8cee69c56469fcb15c3f029" translate="yes" xml:space="preserve">
          <source>Objects implementing the &lt;code&gt;NamedNodeMap&lt;/code&gt; interface are used to represent collections of nodes that can be accessed by name. Note that &lt;code&gt;NamedNodeMap&lt;/code&gt; does not inherit from &lt;code&gt;NodeList&lt;/code&gt;; &lt;code&gt;NamedNodeMaps&lt;/code&gt; are not maintained in any particular order. Objects contained in an object implementing &lt;code&gt;NamedNodeMap&lt;/code&gt; may also be accessed by an ordinal index, but this is simply to allow convenient enumeration of the contents of a &lt;code&gt;NamedNodeMap&lt;/code&gt;, and does not imply that the DOM specifies an order to these Nodes.</source>
          <target state="translated">Objects implementing the &lt;code&gt;NamedNodeMap&lt;/code&gt; interface are used to represent collections of nodes that can be accessed by name. Note that &lt;code&gt;NamedNodeMap&lt;/code&gt; does not inherit from &lt;code&gt;NodeList&lt;/code&gt; ; &lt;code&gt;NamedNodeMaps&lt;/code&gt; are not maintained in any particular order. Objects contained in an object implementing &lt;code&gt;NamedNodeMap&lt;/code&gt; may also be accessed by an ordinal index, but this is simply to allow convenient enumeration of the contents of a &lt;code&gt;NamedNodeMap&lt;/code&gt; , and does not imply that the DOM specifies an order to these Nodes.</target>
        </trans-unit>
        <trans-unit id="900d06349f5dc9d0ceec4b7e0449d34288391046" translate="yes" xml:space="preserve">
          <source>Objects of this class are recognized by the &lt;a href=&quot;beanslinker&quot;&gt;&lt;code&gt;BeansLinker&lt;/code&gt;&lt;/a&gt; as being special, and operations on them will be linked against the represented class' static members. The &lt;code&gt;&quot;class&quot;&lt;/code&gt; synthetic property is additionally recognized and returns the Java &lt;a href=&quot;../../../../java.base/java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object, just as in Java &lt;code&gt;System.class&lt;/code&gt; evaluates to the &lt;code&gt;Class&lt;/code&gt; object for the System class. Conversely, &lt;a href=&quot;../../../../java.base/java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; objects exposed through &lt;a href=&quot;beanslinker&quot;&gt;&lt;code&gt;BeansLinker&lt;/code&gt;&lt;/a&gt; expose the &lt;code&gt;&quot;static&quot;&lt;/code&gt; synthetic property which returns their &lt;code&gt;StaticClass&lt;/code&gt; object (there is no equivalent to this in Java).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea5e5a35dfb798b50fe196790445b3f881cf1f2" translate="yes" xml:space="preserve">
          <source>Objects of this type are passed to the &lt;a href=&quot;notificationhandler&quot;&gt;&lt;code&gt;NotificationHandler&lt;/code&gt;&lt;/a&gt; when a notification is received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc61e3178580635814e1bc7f9a8c8a469128d8ad" translate="yes" xml:space="preserve">
          <source>Objects of this type are used by methods such as &lt;a href=&quot;files#newOutputStream(java.nio.file.Path,java.nio.file.OpenOption...)&quot;&gt;&lt;code&gt;newOutputStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;files#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;newByteChannel&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../channels/filechannel#open(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;FileChannel.open&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../channels/asynchronousfilechannel#open(java.nio.file.Path,java.util.Set,java.util.concurrent.ExecutorService,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;AsynchronousFileChannel.open&lt;/code&gt;&lt;/a&gt; when opening or creating a file.</source>
          <target state="translated">Objects of this type are used by methods such as &lt;a href=&quot;files#newOutputStream(java.nio.file.Path,java.nio.file.OpenOption...)&quot;&gt; &lt;code&gt;newOutputStream&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;files#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;newByteChannel&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;../channels/filechannel#open(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;FileChannel.open&lt;/code&gt; &lt;/a&gt;, and &lt;a href=&quot;../channels/asynchronousfilechannel#open(java.nio.file.Path,java.util.Set,java.util.concurrent.ExecutorService,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;AsynchronousFileChannel.open&lt;/code&gt; &lt;/a&gt; when opening or creating a file.</target>
        </trans-unit>
        <trans-unit id="173f61ab85c77344bac7e706876da71e6c86812c" translate="yes" xml:space="preserve">
          <source>Objects of this type are used by methods such as &lt;a href=&quot;files#newOutputStream-java.nio.file.Path-java.nio.file.OpenOption...-&quot;&gt;&lt;code&gt;newOutputStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;newByteChannel&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../channels/filechannel#open-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;FileChannel.open&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../channels/asynchronousfilechannel#open-java.nio.file.Path-java.util.Set-java.util.concurrent.ExecutorService-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;AsynchronousFileChannel.open&lt;/code&gt;&lt;/a&gt; when opening or creating a file.</source>
          <target state="translated">このタイプのオブジェクトは、ファイルを開いたり作成したりするときに、&lt;a href=&quot;files#newOutputStream-java.nio.file.Path-java.nio.file.OpenOption...-&quot;&gt; &lt;code&gt;newOutputStream&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;newByteChannel&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../channels/filechannel#open-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;FileChannel.open&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../channels/asynchronousfilechannel#open-java.nio.file.Path-java.util.Set-java.util.concurrent.ExecutorService-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;AsynchronousFileChannel.open&lt;/code&gt; &lt;/a&gt;などのメソッドで使用されます。</target>
        </trans-unit>
        <trans-unit id="36c89391016fb4356a9d0f5222dc50a14eddf423" translate="yes" xml:space="preserve">
          <source>Objects of this type may be used with the &lt;a href=&quot;files#copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption...)&quot;&gt;&lt;code&gt;Files.copy(Path,Path,CopyOption...)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;files#copy(java.io.InputStream,java.nio.file.Path,java.nio.file.CopyOption...)&quot;&gt;&lt;code&gt;Files.copy(InputStream,Path,CopyOption...)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;files#move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption...)&quot;&gt;&lt;code&gt;Files.move(Path,Path,CopyOption...)&lt;/code&gt;&lt;/a&gt; methods to configure how a file is copied or moved.</source>
          <target state="translated">Objects of this type may be used with the &lt;a href=&quot;files#copy(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption...)&quot;&gt; &lt;code&gt;Files.copy(Path,Path,CopyOption...)&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;files#copy(java.io.InputStream,java.nio.file.Path,java.nio.file.CopyOption...)&quot;&gt; &lt;code&gt;Files.copy(InputStream,Path,CopyOption...)&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;files#move(java.nio.file.Path,java.nio.file.Path,java.nio.file.CopyOption...)&quot;&gt; &lt;code&gt;Files.move(Path,Path,CopyOption...)&lt;/code&gt; &lt;/a&gt; methods to configure how a file is copied or moved.</target>
        </trans-unit>
        <trans-unit id="0cd77d257d0279c57d269b67247225be74adf612" translate="yes" xml:space="preserve">
          <source>Objects of this type may be used with the &lt;a href=&quot;files#copy-java.nio.file.Path-java.nio.file.Path-java.nio.file.CopyOption...-&quot;&gt;&lt;code&gt;Files.copy(Path,Path,CopyOption...)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;files#copy-java.io.InputStream-java.nio.file.Path-java.nio.file.CopyOption...-&quot;&gt;&lt;code&gt;Files.copy(InputStream,Path,CopyOption...)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;files#move-java.nio.file.Path-java.nio.file.Path-java.nio.file.CopyOption...-&quot;&gt;&lt;code&gt;Files.move(Path,Path,CopyOption...)&lt;/code&gt;&lt;/a&gt; methods to configure how a file is copied or moved.</source>
          <target state="translated">このタイプのオブジェクトは、&lt;a href=&quot;files#copy-java.nio.file.Path-java.nio.file.Path-java.nio.file.CopyOption...-&quot;&gt; &lt;code&gt;Files.copy(Path,Path,CopyOption...)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;files#copy-java.io.InputStream-java.nio.file.Path-java.nio.file.CopyOption...-&quot;&gt; &lt;code&gt;Files.copy(InputStream,Path,CopyOption...)&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;files#move-java.nio.file.Path-java.nio.file.Path-java.nio.file.CopyOption...-&quot;&gt; &lt;code&gt;Files.move(Path,Path,CopyOption...)&lt;/code&gt; &lt;/a&gt;ファイルのコピーまたは移動方法を構成するメソッド。</target>
        </trans-unit>
        <trans-unit id="efce534ee107a573ac4f7acb5f273f03861f3037" translate="yes" xml:space="preserve">
          <source>Objects such as credentials may optionally implement this interface to provide the capability to destroy its contents.</source>
          <target state="translated">クレデンシャルのようなオブジェクトは、オプションでこのインターフェイスを実装して、そのコンテンツを破壊する能力を提供してもよい。</target>
        </trans-unit>
        <trans-unit id="5404cee88d97281aee8179a1f58a97053244fbd7" translate="yes" xml:space="preserve">
          <source>Objects such as credentials may optionally implement this interface to provide the capability to refresh itself.</source>
          <target state="translated">クレデンシャルのようなオブジェクトは、オプションでこのインタフェースを実装して、それ自身をリフレッシュする能力を提供してもよい。</target>
        </trans-unit>
        <trans-unit id="0a6eb86c2b2b700ca2c3eaafdc9659feba6e4511" translate="yes" xml:space="preserve">
          <source>Objects such as credentials may optionally implement this interface to provide the capability to refresh itself. For example, a credential with a particular time-restricted lifespan may implement this interface to allow callers to refresh the time period for which it is valid.</source>
          <target state="translated">クレデンシャルなどのオブジェクトは、それ自体をリフレッシュする機能を提供するために、オプションでこのインター フェースを実装することができる。例えば、特定の時間制限のある寿命を持つクレデンシャルは、呼び出し側がそれが有効な期間を更新できるように、このインターフェイスを実装してもよい。</target>
        </trans-unit>
        <trans-unit id="a43af962be307df171444df2025365c873c3f682" translate="yes" xml:space="preserve">
          <source>Objects that are visible will also have the &lt;code&gt;AccessibleState.VISIBLE&lt;/code&gt; state set in their &lt;code&gt;AccessibleStateSets&lt;/code&gt;.</source>
          <target state="translated">Objects that are visible will also have the &lt;code&gt;AccessibleState.VISIBLE&lt;/code&gt; state set in their &lt;code&gt;AccessibleStateSets&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="942adbdd42f48022bfc6a38e1cd973115fe10dc4" translate="yes" xml:space="preserve">
          <source>Objects that are visible will also have the AccessibleState.VISIBLE state set in their AccessibleStateSet.</source>
          <target state="translated">また、可視化されているオブジェクトは、AccessibleStateSetにAccessibleState.VISIBLEステートが設定されています。</target>
        </trans-unit>
        <trans-unit id="a8ec33623d0ca6b3e3effd3593192f415f14c63d" translate="yes" xml:space="preserve">
          <source>Objects that implement this interface are created with the &lt;a href=&quot;eventqueue#createSecondaryLoop()&quot;&gt;&lt;code&gt;EventQueue.createSecondaryLoop()&lt;/code&gt;&lt;/a&gt; method. The interface provides two methods, &lt;a href=&quot;#enter()&quot;&gt;&lt;code&gt;enter()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#exit()&quot;&gt;&lt;code&gt;exit()&lt;/code&gt;&lt;/a&gt;, which can be used to start and stop the event loop.</source>
          <target state="translated">Objects that implement this interface are created with the &lt;a href=&quot;eventqueue#createSecondaryLoop()&quot;&gt; &lt;code&gt;EventQueue.createSecondaryLoop()&lt;/code&gt; &lt;/a&gt; method. The interface provides two methods, &lt;a href=&quot;#enter()&quot;&gt; &lt;code&gt;enter()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#exit()&quot;&gt; &lt;code&gt;exit()&lt;/code&gt; &lt;/a&gt;, which can be used to start and stop the event loop.</target>
        </trans-unit>
        <trans-unit id="6f986a23dd260a27f46186da5e3bb180601b360e" translate="yes" xml:space="preserve">
          <source>Objects that implement this interface, shall fire a java.beans.PropertyChangeEvent, with parameters: propertyName &quot;beanContext&quot;, oldValue (the previous nesting &lt;code&gt;BeanContext&lt;/code&gt; instance, or &lt;code&gt;null&lt;/code&gt;), newValue (the current nesting &lt;code&gt;BeanContext&lt;/code&gt; instance, or &lt;code&gt;null&lt;/code&gt;).</source>
          <target state="translated">このインタフェースを実装するオブジェクトは、java.beans.PropertyChangeEventを、パラメータ：propertyName &quot;beanContext&quot;、oldValue（以前の入れ子の &lt;code&gt;BeanContext&lt;/code&gt; インスタンス、または &lt;code&gt;null&lt;/code&gt; ）、newValue（現在の入れ子の &lt;code&gt;BeanContext&lt;/code&gt; インスタンス、または &lt;code&gt;null&lt;/code&gt; ）で起動します。</target>
        </trans-unit>
        <trans-unit id="0169ecdcb0afb8752a5144ad7a5d0edff4bb306e" translate="yes" xml:space="preserve">
          <source>Objects wishing to be notified of changes in tile writability must implement the TileObserver interface, and are added by a call to addTileObserver. Multiple calls to addTileObserver for the same object will result in multiple notifications. An existing observer may reduce its notifications by calling removeTileObserver; if the observer had no notifications the operation is a no-op.</source>
          <target state="translated">タイル書き込み性の変更を通知したいオブジェクトは、TileObserver インターフェースを実装する必要があり、addTileObserver を呼び出すことで追加されます。同じオブジェクトに対して addTileObserver を複数回呼び出すと、複数の通知が発生します。既存のオブザーバは removeTileObserver を呼び出すことで通知を減らすことができます。</target>
        </trans-unit>
        <trans-unit id="32b8aa8fbae964444e41f43ce707efb31530d401" translate="yes" xml:space="preserve">
          <source>Objects.compare()</source>
          <target state="translated">Objects.compare()</target>
        </trans-unit>
        <trans-unit id="4fb1716b75bfa13bb3fc8c6113a291c4bbed6ce2" translate="yes" xml:space="preserve">
          <source>Objects.deepEquals()</source>
          <target state="translated">Objects.deepEquals()</target>
        </trans-unit>
        <trans-unit id="fb673cc919334af6a7d3df91c5f5b9b2a4cbdff5" translate="yes" xml:space="preserve">
          <source>Objects.equals()</source>
          <target state="translated">Objects.equals()</target>
        </trans-unit>
        <trans-unit id="ac4e8c4f0c408803a7e2a27ec5dd0c14131313de" translate="yes" xml:space="preserve">
          <source>Objects.hash()</source>
          <target state="translated">Objects.hash()</target>
        </trans-unit>
        <trans-unit id="03b8d8d4686628d5a1e58bda5b9acc6317a90222" translate="yes" xml:space="preserve">
          <source>Objects.hashCode()</source>
          <target state="translated">Objects.hashCode()</target>
        </trans-unit>
        <trans-unit id="0da6b8a858cbb20f6b622be4f99c39ff011e0efd" translate="yes" xml:space="preserve">
          <source>Objects.isNull()</source>
          <target state="translated">Objects.isNull()</target>
        </trans-unit>
        <trans-unit id="5e7f34d74fd1c8a431fcde752a2c5ec09c5d9e88" translate="yes" xml:space="preserve">
          <source>Objects.nonNull()</source>
          <target state="translated">Objects.nonNull()</target>
        </trans-unit>
        <trans-unit id="a8b90f599eaa01222985db21cf3b266ca720e3ed" translate="yes" xml:space="preserve">
          <source>Objects.requireNonNull()</source>
          <target state="translated">Objects.requireNonNull()</target>
        </trans-unit>
        <trans-unit id="910d4a8d4d1698a0f2f7bec7f0266bd0963a110b" translate="yes" xml:space="preserve">
          <source>Objects.toString()</source>
          <target state="translated">Objects.toString()</target>
        </trans-unit>
        <trans-unit id="c92258fa87a7fd87bfb0eac39b2cad3876c1531d" translate="yes" xml:space="preserve">
          <source>Observable</source>
          <target state="translated">Observable</target>
        </trans-unit>
        <trans-unit id="e99c0e92b789cc46fb3423a5aef5fc15295db463" translate="yes" xml:space="preserve">
          <source>Observable modules</source>
          <target state="translated">観測可能なモジュール</target>
        </trans-unit>
        <trans-unit id="9bb5ffccfd23658627e0c1080911cdf4d2961c11" translate="yes" xml:space="preserve">
          <source>Observable.addObserver()</source>
          <target state="translated">Observable.addObserver()</target>
        </trans-unit>
        <trans-unit id="51ae793617870f76a510f1e6e20e626b8645f653" translate="yes" xml:space="preserve">
          <source>Observable.clearChanged()</source>
          <target state="translated">Observable.clearChanged()</target>
        </trans-unit>
        <trans-unit id="d153a1cbc910ab8c52b6250e6db51650416b3781" translate="yes" xml:space="preserve">
          <source>Observable.countObservers()</source>
          <target state="translated">Observable.countObservers()</target>
        </trans-unit>
        <trans-unit id="9d61482bf159cd72d8c5ddb8abcaa85394ca6f55" translate="yes" xml:space="preserve">
          <source>Observable.deleteObserver()</source>
          <target state="translated">Observable.deleteObserver()</target>
        </trans-unit>
        <trans-unit id="115b24a4f22d0fc8442b61697e13dc1aa8057ddf" translate="yes" xml:space="preserve">
          <source>Observable.deleteObservers()</source>
          <target state="translated">Observable.deleteObservers()</target>
        </trans-unit>
        <trans-unit id="c2bfce5d03a91d1ffc3147ad331f5fc5ed6f447a" translate="yes" xml:space="preserve">
          <source>Observable.hasChanged()</source>
          <target state="translated">Observable.hasChanged()</target>
        </trans-unit>
        <trans-unit id="f41bd720fe50006634f07ce51be173c4797a2e10" translate="yes" xml:space="preserve">
          <source>Observable.notifyObservers()</source>
          <target state="translated">Observable.notifyObservers()</target>
        </trans-unit>
        <trans-unit id="0b011ce290b1e37abd11c57ef812f3b2d1782995" translate="yes" xml:space="preserve">
          <source>Observable.setChanged()</source>
          <target state="translated">Observable.setChanged()</target>
        </trans-unit>
        <trans-unit id="ab7e64c97fc5b12d3a53c3eaa9ee4e2f13560916" translate="yes" xml:space="preserve">
          <source>Observer</source>
          <target state="translated">Observer</target>
        </trans-unit>
        <trans-unit id="7e785346895e06eb917fede02e5c0252fb72b8d3" translate="yes" xml:space="preserve">
          <source>Observer.update()</source>
          <target state="translated">Observer.update()</target>
        </trans-unit>
        <trans-unit id="b9ee641386958ddb66395bceb51daadb24ad2daa" translate="yes" xml:space="preserve">
          <source>Obsolete - not used</source>
          <target state="translated">廃止された-使用されていない</target>
        </trans-unit>
        <trans-unit id="f273179c83958ae970fea3d62718ca80faa9bdf7" translate="yes" xml:space="preserve">
          <source>Obsolete - not used.</source>
          <target state="translated">廃止された-使用されていません。</target>
        </trans-unit>
        <trans-unit id="d7695fe16631ba9b4e442982bfdb6ad2f2869814" translate="yes" xml:space="preserve">
          <source>Obsolete RCS version identity.</source>
          <target state="translated">廃止された RCS のバージョン ID。</target>
        </trans-unit>
        <trans-unit id="cecfb3f1f6ba753e2583a68ebd187854b7320cfc" translate="yes" xml:space="preserve">
          <source>Obsolete as of Java 2 platform v1.1.</source>
          <target state="translated">Java 2 プラットフォーム v1.1 の時点で廃止されています。</target>
        </trans-unit>
        <trans-unit id="47f89b0fd51527626c0aeafb411ae74a024a3ee6" translate="yes" xml:space="preserve">
          <source>Obsolete as of Java 2 platform v1.1. Please use the &lt;code&gt;add&lt;/code&gt; method instead.</source>
          <target state="translated">Obsolete as of Java 2 platform v1.1. Please use the &lt;code&gt;add&lt;/code&gt; method instead.</target>
        </trans-unit>
        <trans-unit id="8fb88376c2c725bcf6d04bae863a17f70c03bea9" translate="yes" xml:space="preserve">
          <source>Obsolete as of Java 2 platform v1.3.</source>
          <target state="translated">Java 2 プラットフォーム v1.3 の時点で廃止されています。</target>
        </trans-unit>
        <trans-unit id="34ec3ca44583bc6eec6ce41ebd2a8399142f8498" translate="yes" xml:space="preserve">
          <source>Obsolete as of Java 2 platform v1.3. Please use &lt;code&gt;setRowCount&lt;/code&gt; instead.</source>
          <target state="translated">Obsolete as of Java 2 platform v1.3. Please use &lt;code&gt;setRowCount&lt;/code&gt; instead.</target>
        </trans-unit>
        <trans-unit id="616d993d365cf2de17ec94ff007936962e1ff15a" translate="yes" xml:space="preserve">
          <source>Obsolete as of Java 2 platform v1.3. Please use string literals to identify properties.</source>
          <target state="translated">Java 2 プラットフォーム v1.3 で廃止されました。プロパティの識別には文字列リテラルを使用してください。</target>
        </trans-unit>
        <trans-unit id="b28612b5b4c912a0657f6e1b41f6bed40c8b2b7c" translate="yes" xml:space="preserve">
          <source>Obsolete as of Java 2 platform v1.3. Please use the &lt;code&gt;rowSelectionAllowed&lt;/code&gt; property and the &lt;code&gt;columnSelectionAllowed&lt;/code&gt; property of the &lt;code&gt;columnModel&lt;/code&gt; instead. Or use the method &lt;code&gt;getCellSelectionEnabled&lt;/code&gt;.</source>
          <target state="translated">Obsolete as of Java 2 platform v1.3. Please use the &lt;code&gt;rowSelectionAllowed&lt;/code&gt; property and the &lt;code&gt;columnSelectionAllowed&lt;/code&gt; property of the &lt;code&gt;columnModel&lt;/code&gt; instead. Or use the method &lt;code&gt;getCellSelectionEnabled&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1d9a4c82739da51c0a61b950add3b0dc882de63" translate="yes" xml:space="preserve">
          <source>Obsolete as of Java 2 platform v1.3. Real time repaints, in response to column dragging or resizing, are now unconditional.</source>
          <target state="translated">Java 2 プラットフォーム v1.3 で廃止されました。列のドラッグやサイズ変更に応じたリアルタイムの再描画は、無条件に行われるようになりました。</target>
        </trans-unit>
        <trans-unit id="da82d5373a1173979915a84615efb2118239700e" translate="yes" xml:space="preserve">
          <source>Obsolete as of Java 2 platform v1.4.</source>
          <target state="translated">Java 2 プラットフォーム v1.4 の時点で廃止されています。</target>
        </trans-unit>
        <trans-unit id="7582df486f7b1ebd8bd37f261fc3e5c649b8f712" translate="yes" xml:space="preserve">
          <source>Obsolete as of Java 2 platform v1.4. Please use the &lt;code&gt;doLayout()&lt;/code&gt; method instead.</source>
          <target state="translated">Obsolete as of Java 2 platform v1.4. Please use the &lt;code&gt;doLayout()&lt;/code&gt; method instead.</target>
        </trans-unit>
        <trans-unit id="7c84f16965eca0483b11fe48eca011361cf23878" translate="yes" xml:space="preserve">
          <source>Obsolete class, not used in this version.</source>
          <target state="translated">このバージョンでは使用されていません。</target>
        </trans-unit>
        <trans-unit id="ed6fd18f9c85b0cfb4dd9929e57e2e394938e336" translate="yes" xml:space="preserve">
          <source>Obtain a new &lt;em&gt;unchecked&lt;/em&gt; memory address instance from given long address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322c1fe6432c38d5bf5024d1ee94358e836dd5b9" translate="yes" xml:space="preserve">
          <source>Obtain a new &lt;em&gt;unchecked&lt;/em&gt; memory address instance from given long address. The returned address is &lt;em&gt;not&lt;/em&gt; backed by a memory segment and hence it cannot be dereferenced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbaf9b61defa7018f3b0634fe4d7b672571e37f" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;DOMImplementationRegistry&lt;/code&gt;.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;DOMImplementationRegistry&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5431bf3eb534302e4ac22d8ede548db318aef0a9" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;DOMImplementationRegistry&lt;/code&gt;. The &lt;code&gt;DOMImplementationRegistry&lt;/code&gt; is initialized by the application or the implementation, depending on the context, by first checking the value of the Java system property &lt;code&gt;org.w3c.dom.DOMImplementationSourceList&lt;/code&gt; and the service provider whose contents are at &quot;&lt;code&gt;META_INF/services/org.w3c.dom.DOMImplementationSourceList&lt;/code&gt;&quot;. The value of this property is a white-space separated list of names of availables classes implementing the &lt;code&gt;DOMImplementationSource&lt;/code&gt; interface. Each class listed in the class name list is instantiated and any exceptions encountered are thrown to the application.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;DOMImplementationRegistry&lt;/code&gt; . The &lt;code&gt;DOMImplementationRegistry&lt;/code&gt; is initialized by the application or the implementation, depending on the context, by first checking the value of the Java system property &lt;code&gt;org.w3c.dom.DOMImplementationSourceList&lt;/code&gt; and the service provider whose contents are at &quot; &lt;code&gt;META_INF/services/org.w3c.dom.DOMImplementationSourceList&lt;/code&gt; &quot;. The value of this property is a white-space separated list of names of availables classes implementing the &lt;code&gt;DOMImplementationSource&lt;/code&gt; interface. Each class listed in the class name list is instantiated and any exceptions encountered are thrown to the application.</target>
        </trans-unit>
        <trans-unit id="ebe627c6c911fe01e50be5ec06aaf81d2d0e5471" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;DatatypeFactory&lt;/code&gt; from class name.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;DatatypeFactory&lt;/code&gt; from class name.</target>
        </trans-unit>
        <trans-unit id="d94a0c145836c9f96655faa216892806e4a2b702" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;DatatypeFactory&lt;/code&gt; from class name. This function is useful when there are multiple providers in the classpath. It gives more control to the application as it can specify which provider should be loaded.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;DatatypeFactory&lt;/code&gt; from class name. This function is useful when there are multiple providers in the classpath. It gives more control to the application as it can specify which provider should be loaded.</target>
        </trans-unit>
        <trans-unit id="ecf58842d13e847174574bd2fbd64328ffbcb42c" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;DatatypeFactory&lt;/code&gt;.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;DatatypeFactory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79915b5124397624f9a8f7dc10e5b8c7f6bf8ddd" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; from class name.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; from class name.</target>
        </trans-unit>
        <trans-unit id="dd27fcd8e3f69f40c3b478bc235c29d5a61f6b79" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; from class name. This function is useful when there are multiple providers in the classpath. It gives more control to the application as it can specify which provider should be loaded.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; from class name. This function is useful when there are multiple providers in the classpath. It gives more control to the application as it can specify which provider should be loaded.</target>
        </trans-unit>
        <trans-unit id="176617d4549947b75e3c84acf015723094fbc9c4" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;DocumentBuilderFactory&lt;/code&gt;.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21a853ede111529cbb436aad565025f5985709cc" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;DocumentBuilderFactory&lt;/code&gt;. This static method creates a new factory instance. This method uses the following ordered lookup procedure to determine the &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; implementation class to load:</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; . This static method creates a new factory instance. This method uses the following ordered lookup procedure to determine the &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; implementation class to load:</target>
        </trans-unit>
        <trans-unit id="6ec74ca3db56c10c377df4a2667211a4591b3544" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;Duration&lt;/code&gt; specifying the &lt;code&gt;Duration&lt;/code&gt; as isPositive, years, months, days, hours, minutes, seconds.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;Duration&lt;/code&gt; specifying the &lt;code&gt;Duration&lt;/code&gt; as isPositive, years, months, days, hours, minutes, seconds.</target>
        </trans-unit>
        <trans-unit id="da9f8dd0fc4d169d7f0bc1020767c6e698692637" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;Duration&lt;/code&gt; specifying the &lt;code&gt;Duration&lt;/code&gt; as its string representation, &quot;PnYnMnDTnHnMnS&quot;, as defined in XML Schema 1.0 section 3.2.6.1.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;Duration&lt;/code&gt; specifying the &lt;code&gt;Duration&lt;/code&gt; as its string representation, &quot;PnYnMnDTnHnMnS&quot;, as defined in XML Schema 1.0 section 3.2.6.1.</target>
        </trans-unit>
        <trans-unit id="5d55ad18a7867f361b78747cbd3b1c1cb2efcc0a" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;Duration&lt;/code&gt; specifying the &lt;code&gt;Duration&lt;/code&gt; as milliseconds.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;Duration&lt;/code&gt; specifying the &lt;code&gt;Duration&lt;/code&gt; as milliseconds.</target>
        </trans-unit>
        <trans-unit id="0e35600e61b998ad3c0f8dcfbab09dc1e6f47723" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;SAXParserFactory&lt;/code&gt; from class name.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;SAXParserFactory&lt;/code&gt; from class name.</target>
        </trans-unit>
        <trans-unit id="70171fcc1f871377bdd32b5a92602316c3c47da8" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;SAXParserFactory&lt;/code&gt; from class name. This function is useful when there are multiple providers in the classpath. It gives more control to the application as it can specify which provider should be loaded.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;SAXParserFactory&lt;/code&gt; from class name. This function is useful when there are multiple providers in the classpath. It gives more control to the application as it can specify which provider should be loaded.</target>
        </trans-unit>
        <trans-unit id="42e1dfd4a6b6733d6be3aa4eb1b397f97d71b83c" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;SAXParserFactory&lt;/code&gt;.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;SAXParserFactory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a05e02d1423c10deadb3c719e7ebaeaea603f611" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;SAXParserFactory&lt;/code&gt;. This static method creates a new factory instance This method uses the following ordered lookup procedure to determine the &lt;code&gt;SAXParserFactory&lt;/code&gt; implementation class to load:</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;SAXParserFactory&lt;/code&gt; . This static method creates a new factory instance This method uses the following ordered lookup procedure to determine the &lt;code&gt;SAXParserFactory&lt;/code&gt; implementation class to load:</target>
        </trans-unit>
        <trans-unit id="b3db79d5ab3ab4dee10282408cf13bb0339698a1" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;SchemaFactory&lt;/code&gt; from class name.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;SchemaFactory&lt;/code&gt; from class name.</target>
        </trans-unit>
        <trans-unit id="e6a0187d40d383d82f0c13cb492dbe0c2969443e" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;SchemaFactory&lt;/code&gt; from class name. &lt;code&gt;SchemaFactory&lt;/code&gt; is returned if specified factory class name supports the specified schema language. This function is useful when there are multiple providers in the classpath. It gives more control to the application as it can specify which provider should be loaded.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;SchemaFactory&lt;/code&gt; from class name. &lt;code&gt;SchemaFactory&lt;/code&gt; is returned if specified factory class name supports the specified schema language. This function is useful when there are multiple providers in the classpath. It gives more control to the application as it can specify which provider should be loaded.</target>
        </trans-unit>
        <trans-unit id="4403ba04cfc539adbbe01af272251b2e79e11abc" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;TransformerFactory&lt;/code&gt; from factory class name.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;TransformerFactory&lt;/code&gt; from factory class name.</target>
        </trans-unit>
        <trans-unit id="aef2928e60ccdf0e519543bef4ee63a436159fcf" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;TransformerFactory&lt;/code&gt; from factory class name. This function is useful when there are multiple providers in the classpath. It gives more control to the application as it can specify which provider should be loaded.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;TransformerFactory&lt;/code&gt; from factory class name. This function is useful when there are multiple providers in the classpath. It gives more control to the application as it can specify which provider should be loaded.</target>
        </trans-unit>
        <trans-unit id="7176f9906dfe5b1a8c3efa68ee78331cb8c2b651" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;TransformerFactory&lt;/code&gt;.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;TransformerFactory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0290e9c68639e148e8bccb2f31e887f831c5db0a" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;TransformerFactory&lt;/code&gt;. This static method creates a new factory instance.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;TransformerFactory&lt;/code&gt; . This static method creates a new factory instance.</target>
        </trans-unit>
        <trans-unit id="7675ffd4fbc01a673cb491fcca4dcb54116157a3" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;XPathFactory&lt;/code&gt; from a factory class name.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;XPathFactory&lt;/code&gt; from a factory class name.</target>
        </trans-unit>
        <trans-unit id="197de799f5aa81151b0bcd685c38ace862a5d756" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a &lt;code&gt;XPathFactory&lt;/code&gt; from a factory class name. &lt;code&gt;XPathFactory&lt;/code&gt; is returned if specified factory class supports the specified object model. This function is useful when there are multiple providers in the classpath. It gives more control to the application as it can specify which provider should be loaded.</source>
          <target state="translated">Obtain a new instance of a &lt;code&gt;XPathFactory&lt;/code&gt; from a factory class name. &lt;code&gt;XPathFactory&lt;/code&gt; is returned if specified factory class supports the specified object model. This function is useful when there are multiple providers in the classpath. It gives more control to the application as it can specify which provider should be loaded.</target>
        </trans-unit>
        <trans-unit id="6fe41beabc53d22ea21a5260268d7197f697e147" translate="yes" xml:space="preserve">
          <source>Obtain a new instance of a DOM &lt;a href=&quot;../../../org/w3c/dom/document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; object to build a DOM tree with.</source>
          <target state="translated">Obtain a new instance of a DOM &lt;a href=&quot;../../../org/w3c/dom/document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt; object to build a DOM tree with.</target>
        </trans-unit>
        <trans-unit id="321333282acfb7616d1f9c7c5fbd7f5f1051c3ea" translate="yes" xml:space="preserve">
          <source>Obtain a pure Gregorian Calendar by invoking &lt;code&gt;GregorianCalendar.setGregorianChange(
   new Date(Long.MIN_VALUE))&lt;/code&gt;.</source>
          <target state="translated">Obtain a pure Gregorian Calendar by invoking &lt;code&gt;GregorianCalendar.setGregorianChange( new Date(Long.MIN_VALUE))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f6d0e66a3137552b490cb8e7dc417995d12108b" translate="yes" xml:space="preserve">
          <source>Obtain an instance of a &lt;a href=&quot;../../../org/w3c/dom/domimplementation&quot;&gt;&lt;code&gt;DOMImplementation&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Obtain an instance of a &lt;a href=&quot;../../../org/w3c/dom/domimplementation&quot;&gt; &lt;code&gt;DOMImplementation&lt;/code&gt; &lt;/a&gt; object.</target>
        </trans-unit>
        <trans-unit id="06cf72ce5769cd5dc23ebb0b75e66995286ea2b5" translate="yes" xml:space="preserve">
          <source>Obtain an object that implements interface &lt;code&gt;Accessible&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2898eaa5de52d107ebb54ae1bb9bac7a86dc469b" translate="yes" xml:space="preserve">
          <source>Obtain an object that implements interface &lt;code&gt;Accessible&lt;/code&gt;. If the object passed in already implements interface &lt;code&gt;Accessible&lt;/code&gt;, &lt;code&gt;getAccessible&lt;/code&gt; merely returns the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21fc18131fcd9e8276a16f96947a0b6503df3c3e" translate="yes" xml:space="preserve">
          <source>Obtain an unmodifiable map of properties.</source>
          <target state="translated">変更不可能なプロパティのマップを取得します。</target>
        </trans-unit>
        <trans-unit id="a0e91af531a70e11c169757d0f6771465d4358a5" translate="yes" xml:space="preserve">
          <source>Obtain an unmodifiable map of properties. The concept of properties is further explained in the &lt;a href=&quot;audiofileformat&quot;&gt;&lt;code&gt;class description&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プロパティの変更不可能なマップを取得します。プロパティの概念は、&lt;a href=&quot;audiofileformat&quot;&gt; &lt;code&gt;class description&lt;/code&gt; &lt;/a&gt;説明でさらに説明されています。</target>
        </trans-unit>
        <trans-unit id="714c6fb551e9e419b3e33f7857409d19585d2d81" translate="yes" xml:space="preserve">
          <source>Obtain an unmodifiable map of properties. The concept of properties is further explained in the &lt;a href=&quot;midifileformat&quot;&gt;&lt;code&gt;class description&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プロパティの変更不可能なマップを取得します。プロパティの概念は、&lt;a href=&quot;midifileformat&quot;&gt; &lt;code&gt;class description&lt;/code&gt; &lt;/a&gt;説明でさらに説明されています。</target>
        </trans-unit>
        <trans-unit id="ebe284b186351cb516b80eccbb1e140d97551547" translate="yes" xml:space="preserve">
          <source>Obtain an unmodifiable set view of the individual printer state reason attributes at the given severity level in this &lt;code&gt;PrinterStateReasons&lt;/code&gt; attribute.</source>
          <target state="translated">Obtain an unmodifiable set view of the individual printer state reason attributes at the given severity level in this &lt;code&gt;PrinterStateReasons&lt;/code&gt; attribute.</target>
        </trans-unit>
        <trans-unit id="a4f031aac5c02703b4473151b60677ca9ba3d74d" translate="yes" xml:space="preserve">
          <source>Obtain an unmodifiable set view of the individual printer state reason attributes at the given severity level in this &lt;code&gt;PrinterStateReasons&lt;/code&gt; attribute. Each element in the set view is a &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; object. The only elements in the set view are the &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; objects that map to the given severity value. The set view is backed by this &lt;code&gt;PrinterStateReasons&lt;/code&gt; attribute, so changes to this &lt;code&gt;PrinterStateReasons&lt;/code&gt; attribute are reflected in the set view. The set view does not support element insertion or removal. The set view's iterator does not support element removal.</source>
          <target state="translated">Obtain an unmodifiable set view of the individual printer state reason attributes at the given severity level in this &lt;code&gt;PrinterStateReasons&lt;/code&gt; attribute. Each element in the set view is a &lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt; object. The only elements in the set view are the &lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt; objects that map to the given severity value. The set view is backed by this &lt;code&gt;PrinterStateReasons&lt;/code&gt; attribute, so changes to this &lt;code&gt;PrinterStateReasons&lt;/code&gt; attribute are reflected in the set view. The set view does not support element insertion or removal. The set view's iterator does not support element removal.</target>
        </trans-unit>
        <trans-unit id="6913390ab4fa09bf03f91e49d1e36fa611ef0e55" translate="yes" xml:space="preserve">
          <source>Obtain an unmodifiable set view of the individual printer state reason attributes at the given severity level in this PrinterStateReasons attribute. Each element in the set view is a &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; object. The only elements in the set view are the &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; objects that map to the given severity value. The set view is backed by this PrinterStateReasons attribute, so changes to this PrinterStateReasons attribute are reflected in the set view. The set view does not support element insertion or removal. The set view's iterator does not support element removal.</source>
          <target state="translated">このPrinterStateReasons属性の特定の重大度レベルで、個々のプリンター状態理由属性の変更不可能なセットビューを取得します。セットビューの各要素は、&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;オブジェクトです。セットビューの唯一の要素は、指定された重大度値にマップする&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;オブジェクトです。セットビューはこのPrinterStateReasons属性によってサポートされているため、このPrinterStateReasons属性への変更はセットビューに反映されます。セットビューは、要素の挿入または削除をサポートしていません。セットビューのイテレータは要素の削除をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="ab2746bb60c7b68e949dcba71f66039507329950" translate="yes" xml:space="preserve">
          <source>Obtain new instance of a class that implements Packer.</source>
          <target state="translated">Packerを実装したクラスの新しいインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="bfa01704721273dc36bb0f3ea8ac043a6bd68e98" translate="yes" xml:space="preserve">
          <source>Obtain new instance of a class that implements Unpacker.</source>
          <target state="translated">Unpackerを実装したクラスの新しいインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="118c0610d08f1356e80bd57dac837f5c26f6160f" translate="yes" xml:space="preserve">
          <source>Obtain the &lt;a href=&quot;../../../../../../java.desktop/javax/accessibility/accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt; object at the given point on the Screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c1242da978bea8f2f48e306f55bacd5a759ad92" translate="yes" xml:space="preserve">
          <source>Obtain the &lt;a href=&quot;../../../../../../java.desktop/javax/accessibility/accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt; object at the given point on the Screen. The return value may be null if an &lt;code&gt;Accessible&lt;/code&gt; object cannot be found at the particular point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d595920816ecdce7c39656e6efcdad6c63a4cd11" translate="yes" xml:space="preserve">
          <source>Obtain the ancestor &lt;code&gt;Window&lt;/code&gt;'s graphics and do a &lt;code&gt;copyArea&lt;/code&gt; on the scrolled region.</source>
          <target state="translated">Obtain the ancestor &lt;code&gt;Window&lt;/code&gt; 's graphics and do a &lt;code&gt;copyArea&lt;/code&gt; on the scrolled region.</target>
        </trans-unit>
        <trans-unit id="044a9a369ff50e90435224091aaf966d8def010f" translate="yes" xml:space="preserve">
          <source>Obtain the current doc object.</source>
          <target state="translated">現在のdocオブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="b1dd39b999ad77ec0a0da8c8693f764e3b6b4c30" translate="yes" xml:space="preserve">
          <source>Obtain the format identifier part of the XID.</source>
          <target state="translated">XID のフォーマット識別子部分を取得します。</target>
        </trans-unit>
        <trans-unit id="7aeb2f650b3f77c7b137d50ee20ea808b8a5430f" translate="yes" xml:space="preserve">
          <source>Obtain the global transaction identifier part of XID as an array of bytes.</source>
          <target state="translated">XID のグローバルトランザクション識別子部分をバイトの配列として取得する。</target>
        </trans-unit>
        <trans-unit id="1a454e07cab4dc6e1f54c9a898da4125cf2b8ffb" translate="yes" xml:space="preserve">
          <source>Obtain the print data representation object, which is an instance of the doc flavor's representation class. The Print Job can then obtain the actual print data from the representation object.</source>
          <target state="translated">docフレーバーの表現クラスのインスタンスである印刷データ表現オブジェクトを取得します。その後、プリントジョブは、表現オブジェクトから実際の印刷データを取得することができます。</target>
        </trans-unit>
        <trans-unit id="df005d4074d22848bdb64170e720a2fbd3a7ca99" translate="yes" xml:space="preserve">
          <source>Obtain the printing attributes that specify additional characteristics of the doc or that specify processing instructions to be applied to the doc. Printing attributes are defined in package &lt;a href=&quot;attribute/package-summary&quot;&gt;&lt;code&gt;javax.print.attribute&lt;/code&gt;&lt;/a&gt;. The doc returns its printing attributes stored in an &lt;a href=&quot;attribute/docattributeset&quot;&gt;&lt;code&gt;javax.print.attribute.DocAttributeSet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ドキュメントの追加の特性を指定する、またはドキュメントに適用する処理命令を指定する印刷属性を取得します。印刷属性は、パッケージ&lt;a href=&quot;attribute/package-summary&quot;&gt; &lt;code&gt;javax.print.attribute&lt;/code&gt; で&lt;/a&gt;定義されています。ドキュメントは、&lt;a href=&quot;attribute/docattributeset&quot;&gt; &lt;code&gt;javax.print.attribute.DocAttributeSet&lt;/code&gt; に&lt;/a&gt;保存されている印刷属性を返します。</target>
        </trans-unit>
        <trans-unit id="4747f006c78e0f4fdfd33b710e2cb0842dfa7744" translate="yes" xml:space="preserve">
          <source>Obtain the property value specified by the key.</source>
          <target state="translated">キーで指定されたプロパティ値を取得します。</target>
        </trans-unit>
        <trans-unit id="e2e75fccad77fbf6cb4a81c4ccde4f443312857d" translate="yes" xml:space="preserve">
          <source>Obtain the property value specified by the key. The concept of properties is further explained in the &lt;a href=&quot;audiofileformat&quot;&gt;&lt;code&gt;class description&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">キーで指定されたプロパティ値を取得します。プロパティの概念は、&lt;a href=&quot;audiofileformat&quot;&gt; &lt;code&gt;class description&lt;/code&gt; &lt;/a&gt;説明でさらに説明されています。</target>
        </trans-unit>
        <trans-unit id="f8dabbeceb5591636156d792412283f2a18dbe6f" translate="yes" xml:space="preserve">
          <source>Obtain the property value specified by the key. The concept of properties is further explained in the &lt;a href=&quot;midifileformat&quot;&gt;&lt;code&gt;class description&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">キーで指定されたプロパティ値を取得します。プロパティの概念は、&lt;a href=&quot;midifileformat&quot;&gt; &lt;code&gt;class description&lt;/code&gt; &lt;/a&gt;説明でさらに説明されています。</target>
        </trans-unit>
        <trans-unit id="b6c3bde1b613d84169e11de17f2579465ff5ed20" translate="yes" xml:space="preserve">
          <source>Obtain the transaction branch identifier part of XID as an array of bytes.</source>
          <target state="translated">XID のトランザクションブランチ識別子部分をバイトの配列として取得する。</target>
        </trans-unit>
        <trans-unit id="15bdb31969dedbad295843e05b45ed1fc347acc0" translate="yes" xml:space="preserve">
          <source>Obtain the value of a specific attribute of the Dynamic MBean.</source>
          <target state="translated">Dynamic MBean の特定の属性の値を取得します。</target>
        </trans-unit>
        <trans-unit id="61b7aef03354674a2eeef986727fe28c7c9fb3b7" translate="yes" xml:space="preserve">
          <source>Obtain this set-of-integer attribute's members in canonical array form.</source>
          <target state="translated">この set-of-integer 属性のメンバを正規配列形式で取得します。</target>
        </trans-unit>
        <trans-unit id="d79c8ca3efee69f626d6c5746075fbab571d5e9e" translate="yes" xml:space="preserve">
          <source>Obtain this set-of-integer attribute's members in canonical array form. The returned array is &quot;safe;&quot; the client may alter it without affecting this set-of-integer attribute.</source>
          <target state="translated">この set-of-integer 属性のメンバを正規配列形式で取得する。返される配列は &quot;セーフ &quot;であり、クライアントはこの set-of-integer 属性に影響を与えずに配列を変更することができる。</target>
        </trans-unit>
        <trans-unit id="712a3162b658a7e8d16ea1a34780b47c56cf55ec" translate="yes" xml:space="preserve">
          <source>Obtained from a &lt;code&gt;MultiDocPrintService&lt;/code&gt;, a &lt;code&gt;MultiDocPrintJob&lt;/code&gt; can print a specified collection of documents as a single print job with a set of job attributes.</source>
          <target state="translated">Obtained from a &lt;code&gt;MultiDocPrintService&lt;/code&gt; , a &lt;code&gt;MultiDocPrintJob&lt;/code&gt; can print a specified collection of documents as a single print job with a set of job attributes.</target>
        </trans-unit>
        <trans-unit id="e278c757a0ff665f25b7a8d65d5ef7e18a653c41" translate="yes" xml:space="preserve">
          <source>Obtained from a MultiDocPrintService, a MultiDocPrintJob can print a specified collection of documents as a single print job with a set of job attributes.</source>
          <target state="translated">MultiDocPrintServiceから取得したMultiDocPrintJobは、ジョブ属性のセットを持つ単一の印刷ジョブとして、指定されたドキュメントのコレクションを印刷することができます。</target>
        </trans-unit>
        <trans-unit id="8dc03a47e97d6db5e33479c9705ab50a7436a4f9" translate="yes" xml:space="preserve">
          <source>Obtaining a &lt;code&gt;Receiver&lt;/code&gt; with this method does not open the device. To be able to use the device, it has to be opened explicitly by calling &lt;a href=&quot;#open()&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;. Also, closing the &lt;code&gt;Receiver&lt;/code&gt; does not close the device. It has to be closed explicitly by calling &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Obtaining a &lt;code&gt;Receiver&lt;/code&gt; with this method does not open the device. To be able to use the device, it has to be opened explicitly by calling &lt;a href=&quot;#open()&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;. Also, closing the &lt;code&gt;Receiver&lt;/code&gt; does not close the device. It has to be closed explicitly by calling &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="95a8eb5ac6b8ddebb401cb52b1054fc79e78da18" translate="yes" xml:space="preserve">
          <source>Obtaining a &lt;code&gt;Receiver&lt;/code&gt; with this method does not open the device. To be able to use the device, it has to be opened explicitly by calling &lt;a href=&quot;mididevice#open--&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;. Also, closing the &lt;code&gt;Receiver&lt;/code&gt; does not close the device. It has to be closed explicitly by calling &lt;a href=&quot;mididevice#close--&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この方法で &lt;code&gt;Receiver&lt;/code&gt; を取得しても、デバイスは開きません。デバイスを使用できるようにするには、&lt;a href=&quot;mididevice#open--&quot;&gt; &lt;code&gt;open()&lt;/code&gt; を&lt;/a&gt;呼び出してデバイスを明示的に開く必要があります。また、 &lt;code&gt;Receiver&lt;/code&gt; を閉じてもデバイスは閉じません。&lt;a href=&quot;mididevice#close--&quot;&gt; &lt;code&gt;close()&lt;/code&gt; を&lt;/a&gt;呼び出して明示的に閉じる必要があります。</target>
        </trans-unit>
        <trans-unit id="bffae96cedd76dac73a94a7a7167e4aa2e22240a" translate="yes" xml:space="preserve">
          <source>Obtaining a &lt;code&gt;Transmitter&lt;/code&gt; with this method does not open the device. To be able to use the device, it has to be opened explicitly by calling &lt;a href=&quot;#open()&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;. Also, closing the &lt;code&gt;Transmitter&lt;/code&gt; does not close the device. It has to be closed explicitly by calling &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Obtaining a &lt;code&gt;Transmitter&lt;/code&gt; with this method does not open the device. To be able to use the device, it has to be opened explicitly by calling &lt;a href=&quot;#open()&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;. Also, closing the &lt;code&gt;Transmitter&lt;/code&gt; does not close the device. It has to be closed explicitly by calling &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="efd9992ab49e494291078c9fa559ff42da6659c1" translate="yes" xml:space="preserve">
          <source>Obtaining a &lt;code&gt;Transmitter&lt;/code&gt; with this method does not open the device. To be able to use the device, it has to be opened explicitly by calling &lt;a href=&quot;mididevice#open--&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt;. Also, closing the &lt;code&gt;Transmitter&lt;/code&gt; does not close the device. It has to be closed explicitly by calling &lt;a href=&quot;mididevice#close--&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この方法で &lt;code&gt;Transmitter&lt;/code&gt; を取得しても、デバイスは開きません。デバイスを使用できるようにするには、&lt;a href=&quot;mididevice#open--&quot;&gt; &lt;code&gt;open()&lt;/code&gt; を&lt;/a&gt;呼び出してデバイスを明示的に開く必要があります。また、 &lt;code&gt;Transmitter&lt;/code&gt; 閉じてもデバイスは閉じません。&lt;a href=&quot;mididevice#close--&quot;&gt; &lt;code&gt;close()&lt;/code&gt; を&lt;/a&gt;呼び出して明示的に閉じる必要があります。</target>
        </trans-unit>
        <trans-unit id="fc952415feb68c8c8280e0dbd8d1c5c7db010509" translate="yes" xml:space="preserve">
          <source>Obtaining a service loader</source>
          <target state="translated">サービスローダーの取得</target>
        </trans-unit>
        <trans-unit id="ce9eb253f1a6b347d0788adcaa63c08e69353d74" translate="yes" xml:space="preserve">
          <source>Obtaining resource bundles from providers</source>
          <target state="translated">プロバイダからのリソースバンドルの取得</target>
        </trans-unit>
        <trans-unit id="1e9d78a959a371bba61afc751ef503903857b3c6" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;a href=&quot;../../../java/util/list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; containing all &lt;a href=&quot;sniservername&quot;&gt;&lt;code&gt;SNIServerName&lt;/code&gt;&lt;/a&gt;s of the requested Server Name Indication (SNI) extension.</source>
          <target state="translated">取得&lt;a href=&quot;../../../java/util/list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;すべて含む&lt;a href=&quot;sniservername&quot;&gt; &lt;code&gt;SNIServerName&lt;/code&gt; &lt;/a&gt;のSは、サーバー名表示（SNI）拡張子を要求しました。</target>
        </trans-unit>
        <trans-unit id="1f47067a7e13ad6aba68a3df940bfbc51c44fc4b" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;ChronoPeriod&lt;/code&gt; consisting of amount of time between two dates.</source>
          <target state="translated">取得 &lt;code&gt;ChronoPeriod&lt;/code&gt; は、 2つの日付の間の時間の量からなります。</target>
        </trans-unit>
        <trans-unit id="d1a8e8bfe696c726a799560aefd95bc64c727b7d" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; in this chronology from an &lt;code&gt;Instant&lt;/code&gt;.</source>
          <target state="translated">取得 &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; から、この年表で &lt;code&gt;Instant&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab39f55dfdcf04cebb9c26b0388b5076032c225d" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; in this chronology from another temporal object.</source>
          <target state="translated">取得 &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; は別の一時的なオブジェクトからこの年表で。</target>
        </trans-unit>
        <trans-unit id="60135188dbee43c639863dbc77ffa034482fee8a" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;Duration&lt;/code&gt; from a text string such as &lt;code&gt;PnDTnHnMn.nS&lt;/code&gt;.</source>
          <target state="translated">取得 &lt;code&gt;Duration&lt;/code&gt; などのテキスト文字列から &lt;code&gt;PnDTnHnMn.nS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3bc917fa03d6fe8eff206d808c1510565324a795" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;Duration&lt;/code&gt; representing a number of milliseconds.</source>
          <target state="translated">ミリ秒数を表す &lt;code&gt;Duration&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="400c531b02de0f7d01cdcb25faa22a68c9664b8d" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;Duration&lt;/code&gt; representing a number of nanoseconds.</source>
          <target state="translated">取得 &lt;code&gt;Duration&lt;/code&gt; ナノ秒の数を表します。</target>
        </trans-unit>
        <trans-unit id="992f31f9351746f2932e7637b0633b000e124f94" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;Duration&lt;/code&gt; representing a number of seconds and an adjustment in nanoseconds.</source>
          <target state="translated">秒数とナノ秒単位の調整を表す &lt;code&gt;Duration&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="e61494bc4ec59cb8b5135632edcacb8e8e7c9c36" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;Duration&lt;/code&gt; representing a number of seconds.</source>
          <target state="translated">秒数を表す &lt;code&gt;Duration&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="0e021af16bcde992e387ea745e36eabc8beba62b" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;Duration&lt;/code&gt; representing a number of standard 24 hour days.</source>
          <target state="translated">標準の24時間の日数を表す &lt;code&gt;Duration&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="df6a4f94e07d75902dc2a8d0bc848227b30b2d7f" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;Duration&lt;/code&gt; representing a number of standard hours.</source>
          <target state="translated">標準時間数を表す &lt;code&gt;Duration&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="fbefb72d23d5d4ed26eb4c167d6eb3fff32acf2c" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;Duration&lt;/code&gt; representing a number of standard minutes.</source>
          <target state="translated">標準の分数を表す &lt;code&gt;Duration&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="33488d8e4fc40b420ea3bffc0247d870c649db12" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;Duration&lt;/code&gt; representing an amount in the specified unit.</source>
          <target state="translated">指定された単位で金額を表す &lt;code&gt;Duration&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="1d51ab4d1c96f6cd46be51cb00c160405d98d110" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;Duration&lt;/code&gt; representing the duration between two temporal objects.</source>
          <target state="translated">2つの一時オブジェクト間の &lt;code&gt;Duration&lt;/code&gt; 表すDurationを取得します。</target>
        </trans-unit>
        <trans-unit id="ce9bff59449a5ad21a1699994850614dc6ef5371" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;HijrahDate&lt;/code&gt; of the Islamic Umm Al-Qura calendar from a temporal object.</source>
          <target state="translated">取得 &lt;code&gt;HijrahDate&lt;/code&gt; 一時オブジェクトからイスラムウムアルQuraカレンダーの。</target>
        </trans-unit>
        <trans-unit id="210bb8c7de73ecdda5866a5e8778fb1b6dab4c54" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;HijrahDate&lt;/code&gt; of the Islamic Umm Al-Qura calendar from the proleptic-year, month-of-year and day-of-month fields.</source>
          <target state="translated">取得 &lt;code&gt;HijrahDate&lt;/code&gt; proleptic年からイスラムウムアルQuraカレンダーの月-の年と日の-月フィールド。</target>
        </trans-unit>
        <trans-unit id="fbe29b7f602ffaa59a901dd828edb0cc372768d3" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;JapaneseDate&lt;/code&gt; from a temporal object.</source>
          <target state="translated">一時オブジェクトから &lt;code&gt;JapaneseDate&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="de7ea857942bbf60892ff4f4de9a6e24c8ec7d6c" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;JapaneseDate&lt;/code&gt; representing a date in the Japanese calendar system from the era, year-of-era, month-of-year and day-of-month fields.</source>
          <target state="translated">年号、年号、年号、および月号のフィールドから、日本のカレンダーシステムの日付を表す &lt;code&gt;JapaneseDate&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="0c7e7c823c06e2f4f7780cee7a257d28925a6571" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;JapaneseDate&lt;/code&gt; representing a date in the Japanese calendar system from the proleptic-year, month-of-year and day-of-month fields.</source>
          <target state="translated">取得 &lt;code&gt;JapaneseDate&lt;/code&gt; proleptic年から日本のカレンダーシステムの日付を表す、月-の年と日の-月フィールド。</target>
        </trans-unit>
        <trans-unit id="6763fc9b0633117b8418ef2925fc440ea4eaf031" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;MidiDevice&lt;/code&gt; object which is an owner of this &lt;code&gt;Receiver&lt;/code&gt;.</source>
          <target state="translated">Obtains a &lt;code&gt;MidiDevice&lt;/code&gt; object which is an owner of this &lt;code&gt;Receiver&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7537a23f1feb0d74c4470481d75c2b58d5aef7d1" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;MidiDevice&lt;/code&gt; object which is an owner of this &lt;code&gt;Transmitter&lt;/code&gt;.</source>
          <target state="translated">Obtains a &lt;code&gt;MidiDevice&lt;/code&gt; object which is an owner of this &lt;code&gt;Transmitter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d63bc7c1774af143d941a3aba6149ae2b669646" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;MinguoDate&lt;/code&gt; from a temporal object.</source>
          <target state="translated">取得 &lt;code&gt;MinguoDate&lt;/code&gt; は、時間的オブジェクトから。</target>
        </trans-unit>
        <trans-unit id="b5e6dd8982d4d0e516ad834f435e8ff4d9f4e0ce" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;MinguoDate&lt;/code&gt; representing a date in the Minguo calendar system from the proleptic-year, month-of-year and day-of-month fields.</source>
          <target state="translated">取得 &lt;code&gt;MinguoDate&lt;/code&gt; proleptic年から民国紀元システムの日付を表す、月-の年と日の-月フィールド。</target>
        </trans-unit>
        <trans-unit id="36dcc743890ee55feb79aa64acb429e763d11b35" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;Period&lt;/code&gt; consisting of the number of years, months, and days between two dates.</source>
          <target state="translated">2つの日付の間の年数、月数、日数で構成される &lt;code&gt;Period&lt;/code&gt; 取得します。</target>
        </trans-unit>
        <trans-unit id="6f04cb7f0e0c617ac6ce572efffb89d91db27491" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;Period&lt;/code&gt; from a text string such as &lt;code&gt;PnYnMnD&lt;/code&gt;.</source>
          <target state="translated">取得 &lt;code&gt;Period&lt;/code&gt; などのテキスト文字列から &lt;code&gt;PnYnMnD&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9976b4c18cd32fa6cacc8d1cb25e953780357bff" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;Period&lt;/code&gt; representing a number of days.</source>
          <target state="translated">日数を表す &lt;code&gt;Period&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="d201085184fefce8ea5ac840106239cc4deb7c38" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;Period&lt;/code&gt; representing a number of months.</source>
          <target state="translated">月数を表す &lt;code&gt;Period&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="194f0a1529c5d4bb3bca0cfb82e750d39357d3a2" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;Period&lt;/code&gt; representing a number of weeks.</source>
          <target state="translated">週数を表す &lt;code&gt;Period&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="c1048cb2e3ff92854ee7699cd524d6595f7ac2f1" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;Period&lt;/code&gt; representing a number of years, months and days.</source>
          <target state="translated">年、月、日の数を表す &lt;code&gt;Period&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="ef3fdcbe8c73423860ce57b9afba71e886a5ef49" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;Period&lt;/code&gt; representing a number of years.</source>
          <target state="translated">年数を表す &lt;code&gt;Period&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="28f6ac17701ee1e6f5961bca988fefa90def84d5" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;TemporalAdjuster&lt;/code&gt; that wraps a date adjuster.</source>
          <target state="translated">日付アジャスターをラップする &lt;code&gt;TemporalAdjuster&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="0e7124afbad457b5fc2cd147370d9560f7813482" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; from a temporal object.</source>
          <target state="translated">取得 &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; は、時間的オブジェクトから。</target>
        </trans-unit>
        <trans-unit id="7ad8f88142346d85ad8bb3c97e6c7b1be726cd16" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; representing a date in the Thai Buddhist calendar system from the proleptic-year, month-of-year and day-of-month fields.</source>
          <target state="translated">取得 &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; proleptic年からタイ仏暦システムの日付を表す、月-の年と日の-月フィールド。</target>
        </trans-unit>
        <trans-unit id="87f19f8b0fa9a0c0dd9530a8e439e95f079e088a" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;string&lt;/code&gt; naming the company that provides the sound bank</source>
          <target state="translated">サウンドバンクを提供する会社の名前を表す &lt;code&gt;string&lt;/code&gt; 取得します</target>
        </trans-unit>
        <trans-unit id="2126f841b25e7587cdb4d57f886627b093888d1d" translate="yes" xml:space="preserve">
          <source>Obtains a &lt;code&gt;string&lt;/code&gt; naming the company that provides the sound bank.</source>
          <target state="translated">Obtains a &lt;code&gt;string&lt;/code&gt; naming the company that provides the sound bank.</target>
        </trans-unit>
        <trans-unit id="f9373c7f45b67104d537a6da006b7513bf6d8443" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI IN receiver through which the MIDI device may receive MIDI data.</source>
          <target state="translated">MIDI機器がMIDIデータを受信するためのMIDI INレシーバーを取得します。</target>
        </trans-unit>
        <trans-unit id="bf5330ad36f61eea6ca7c8df9b51b464976a4807" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI IN receiver through which the MIDI device may receive MIDI data. The returned receiver must be closed when the application has finished using it.</source>
          <target state="translated">MIDI デバイスが MIDI データを受信できる MIDI IN レシーバーを取得します。返された受信機は、アプリケーションの使用が終了したら閉じなければなりません。</target>
        </trans-unit>
        <trans-unit id="0189a2e1d35446db41efc966852411a48ee002ac" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI OUT connection from which the MIDI device will transmit MIDI data The returned transmitter must be closed when the application has finished using it.</source>
          <target state="translated">MIDIデバイスがMIDIデータを送信するMIDI OUT接続を取得します。</target>
        </trans-unit>
        <trans-unit id="6a125a9513ab936a5a93f8008e99c717f6c5b60c" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI OUT connection from which the MIDI device will transmit MIDI data.</source>
          <target state="translated">MIDI機器がMIDIデータを送信するMIDI OUT接続を取得します。</target>
        </trans-unit>
        <trans-unit id="5ea6b58c67324597c7d8819e79e09b5f03e3b274" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI OUT connection from which the MIDI device will transmit MIDI data. The returned transmitter must be closed when the application has finished using it.</source>
          <target state="translated">MIDI デバイスが MIDI データを送信する MIDI OUT 接続を取得します。アプリケーションの使用が終了したら、返却された送信機を閉じなければなりません。</target>
        </trans-unit>
        <trans-unit id="31ce0c1c4f1f024a762c957538586ca7db2477d0" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI receiver from an external MIDI port or other default device.</source>
          <target state="translated">外部MIDIポートやその他のデフォルトデバイスからMIDIレシーバーを取得します。</target>
        </trans-unit>
        <trans-unit id="9e7f0334ac65b041a30aec0799b09dddbe73110d" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI receiver from an external MIDI port or other default device. The returned receiver always implements the &lt;code&gt;MidiDeviceReceiver&lt;/code&gt; interface.</source>
          <target state="translated">外部MIDIポートまたはその他のデフォルトデバイスからMIDIレシーバーを取得します。返されたレシーバーは常に &lt;code&gt;MidiDeviceReceiver&lt;/code&gt; インターフェイスを実装します。</target>
        </trans-unit>
        <trans-unit id="f3589425172d06a005f64cd67db53cca16d4ecd7" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI sequence from the &lt;code&gt;File&lt;/code&gt; provided.</source>
          <target state="translated">Obtains a MIDI sequence from the &lt;code&gt;File&lt;/code&gt; provided.</target>
        </trans-unit>
        <trans-unit id="91e9e18eb96dd618704e583856afaf59028c6407" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI sequence from the &lt;code&gt;File&lt;/code&gt; provided. The &lt;code&gt;File&lt;/code&gt; must point to valid MIDI file data.</source>
          <target state="translated">指定された &lt;code&gt;File&lt;/code&gt; からMIDIシーケンスを取得します。 &lt;code&gt;File&lt;/code&gt; 、有効なMIDIファイルデータを示す必要があります。</target>
        </trans-unit>
        <trans-unit id="ee1a1b80d6cda2d17d38c2f8858890e4781e5b9e" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI sequence from the &lt;code&gt;URL&lt;/code&gt; provided.</source>
          <target state="translated">Obtains a MIDI sequence from the &lt;code&gt;URL&lt;/code&gt; provided.</target>
        </trans-unit>
        <trans-unit id="16fc8be49a0a8bc9c282b0ec454edc5c4bc2be86" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI sequence from the &lt;code&gt;URL&lt;/code&gt; provided. The &lt;code&gt;URL&lt;/code&gt; must point to valid MIDI file data.</source>
          <target state="translated">Obtains a MIDI sequence from the &lt;code&gt;URL&lt;/code&gt; provided. The &lt;code&gt;URL&lt;/code&gt; must point to valid MIDI file data.</target>
        </trans-unit>
        <trans-unit id="57fa6d054e687dae63f05975e89f63c531acda6c" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI sequence from the URL provided. The URL must point to valid MIDI file data.</source>
          <target state="translated">指定された URL から MIDI シーケンスを取得します。URL は有効な MIDI ファイルデータを指している必要があります。</target>
        </trans-unit>
        <trans-unit id="8697cfc265eaca58151ec1a77080e5d140d351c5" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI sequence from the input stream provided.</source>
          <target state="translated">提供された入力ストリームから MIDI シーケンスを取得します。</target>
        </trans-unit>
        <trans-unit id="614c12ede46f0d3c2223a754b0b0354a43f5a889" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI sequence from the input stream provided. The stream must point to valid MIDI file data. In general, MIDI file readers may need to read some data from the stream before determining whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and, if not, reset the stream's read pointer to its original position. If the input stream does not support this, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">Obtains a MIDI sequence from the input stream provided. The stream must point to valid MIDI file data. In general, MIDI file readers may need to read some data from the stream before determining whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and, if not, reset the stream's read pointer to its original position. If the input stream does not support this, this method may fail with an &lt;code&gt;IOException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cbc40396042d82c2cc77c34582051def42771c4f" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI sequence from the input stream provided. The stream must point to valid MIDI file data. In general, MIDI file readers may need to read some data from the stream before determining whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and, if not, reset the stream's read pointer to its original position. If the input stream does not support this, this method may fail with an IOException.</source>
          <target state="translated">与えられた入力ストリームから MIDI シーケンスを取得します。ストリームは有効な MIDI ファイルデータを指している必要があります。一般に、MIDI ファイルリーダは、サポートしているかどうかを判断する前に、ストリームからデータを読み取る必要があるかもしれません。これらのパーサは、ストリームをマークし、ストリームをサポートしているかどうかを判断するのに十分なデータを読み込み、サポートしていない場合は、ストリームの読み込みポインタを元の位置にリセットすることができなければなりません。入力ストリームがこれをサポートしていない場合、このメソッドは IOException で失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="bb726f200a48401c24f9287fd54cd918e23f4064" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI sequence from the specified &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">Obtains a MIDI sequence from the specified &lt;code&gt;File&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41de4918afc0f37f6e43c63cad4a022b824cd462" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI sequence from the specified &lt;code&gt;File&lt;/code&gt;. The &lt;code&gt;File&lt;/code&gt; must point to valid MIDI file data for a file type recognized by the system.</source>
          <target state="translated">指定された &lt;code&gt;File&lt;/code&gt; からMIDIシーケンスを取得します。 &lt;code&gt;File&lt;/code&gt; システムが認識したファイル型に有効なMIDIファイルデータを示す必要があります。</target>
        </trans-unit>
        <trans-unit id="2eca17c2452caf92bee6aa2741615b8d3e07a11d" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI sequence from the specified URL.</source>
          <target state="translated">指定したURLからMIDIシーケンスを取得します。</target>
        </trans-unit>
        <trans-unit id="c394d4a2e2e47f80e938142b92a783568095aa26" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI sequence from the specified URL. The URL must point to valid MIDI file data for a file type recognized by the system.</source>
          <target state="translated">指定された URL から MIDI シーケンスを取得します。URLはシステムが認識するファイルタイプの有効なMIDIファイルデータを指している必要があります。</target>
        </trans-unit>
        <trans-unit id="362d9238c8f1dd9187f2aa2d14eeac4f330a68fc" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI sequence from the specified input stream.</source>
          <target state="translated">指定された入力ストリームから MIDI シーケンスを取得します。</target>
        </trans-unit>
        <trans-unit id="82c6d62c418aff35ac7579764c4d19484ca7e2d4" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI sequence from the specified input stream. The stream must point to valid MIDI file data for a file type recognized by the system.</source>
          <target state="translated">指定された入力ストリームから MIDI シーケンスを取得します。ストリームは、システムが認識するファイルタイプの有効なMIDIファイルデータを指している必要があります。</target>
        </trans-unit>
        <trans-unit id="bd159010812f5bbf345020b1bde59901a981902b" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI transmitter from an external MIDI port or other default source.</source>
          <target state="translated">外部MIDIポートまたはその他のデフォルトソースからMIDIトランスミッタを取得します。</target>
        </trans-unit>
        <trans-unit id="6ec8aa22671786b28ad0d4cdb481251179d79127" translate="yes" xml:space="preserve">
          <source>Obtains a MIDI transmitter from an external MIDI port or other default source. The returned transmitter always implements the &lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; interface.</source>
          <target state="translated">外部MIDIポートまたはその他のデフォルトソースからMIDIトランスミッタを取得します。返されたトランスミッターは常に &lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; インターフェースを実装します。</target>
        </trans-unit>
        <trans-unit id="f577bdb5964d66876b1d5266c0e17b5b7439afbf" translate="yes" xml:space="preserve">
          <source>Obtains a MidiDevice object which is an owner of this Receiver.</source>
          <target state="translated">このレシーバの所有者であるMidiDeviceオブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="bb9282c47f7f29968da8aecec398e438f9241b6b" translate="yes" xml:space="preserve">
          <source>Obtains a MidiDevice object which is an owner of this Transmitter.</source>
          <target state="translated">本送信機の所有者である MidiDevice オブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="94cf7fbcd6ab5bb3944688647b69fb1af76fbbf7" translate="yes" xml:space="preserve">
          <source>Obtains a String describing the control type and its current state.</source>
          <target state="translated">コントロールの種類と現在の状態を表す文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="616faf7066598ac791b79e93880da7eae7d2a2fa" translate="yes" xml:space="preserve">
          <source>Obtains a clip from the specified mixer that can be used for playing back an audio file or an audio stream.</source>
          <target state="translated">オーディオファイルやオーディオストリームの再生に使用できる、指定されたミキサーからクリップを取得します。</target>
        </trans-unit>
        <trans-unit id="4c08d975d6d06f370424c858abc21d5679367ba2" translate="yes" xml:space="preserve">
          <source>Obtains a clip that can be used for playing back an audio file or an audio stream.</source>
          <target state="translated">オーディオファイルやオーディオストリームの再生に使用できるクリップを取得します。</target>
        </trans-unit>
        <trans-unit id="dc95e711ddc25677f0f4e2885d5af26464094609" translate="yes" xml:space="preserve">
          <source>Obtains a clip that can be used for playing back an audio file or an audio stream. The returned clip will be provided by the default system mixer, or, if not possible, by any other mixer installed in the system that supports a &lt;code&gt;Clip&lt;/code&gt; object.</source>
          <target state="translated">オーディオファイルまたはオーディオストリームの再生に使用できるクリップを取得します。返されたクリップは、デフォルトのシステムミキサーによって提供されるか、または可能でない場合は、 &lt;code&gt;Clip&lt;/code&gt; オブジェクトをサポートするシステムにインストールされている他のミキサーによって提供されます。</target>
        </trans-unit>
        <trans-unit id="47e979cca76c2f8b1eb41e0546653a457a45f8d3" translate="yes" xml:space="preserve">
          <source>Obtains a clock that always returns the same instant.</source>
          <target state="translated">常に同じ瞬間を返す時計を取得します。</target>
        </trans-unit>
        <trans-unit id="766d2ff63f32a17ad64be7f45bd51f1d5d84268f" translate="yes" xml:space="preserve">
          <source>Obtains a clock that returns instants from the specified clock truncated to the nearest occurrence of the specified duration.</source>
          <target state="translated">指定されたクロックから、指定された持続時間の最も近い出現に切り捨てられたインスタンツを返すクロックを取得します。</target>
        </trans-unit>
        <trans-unit id="e33ab336df4cf5eebf9c846063daa8ede6cb5343" translate="yes" xml:space="preserve">
          <source>Obtains a clock that returns instants from the specified clock with the specified duration added</source>
          <target state="translated">指定されたクロックから、指定された時間を加算したインスタンスを返すクロックを取得します。</target>
        </trans-unit>
        <trans-unit id="7b47f5227c931c4c69221c449a0feb96965c8c67" translate="yes" xml:space="preserve">
          <source>Obtains a clock that returns the current instant ticking in whole milliseconds using the best available system clock.</source>
          <target state="translated">利用可能な最良のシステムクロックを使用して、現在の瞬間の刻みを全ミリ秒単位で返すクロックを取得します。</target>
        </trans-unit>
        <trans-unit id="c0fc4e6beceb729a4fbfe132fe447e1efe862b33" translate="yes" xml:space="preserve">
          <source>Obtains a clock that returns the current instant ticking in whole minutes using best available system clock.</source>
          <target state="translated">最良のシステムクロックを使用して、現在の瞬間的な刻みを1分単位で返すクロックを取得します。</target>
        </trans-unit>
        <trans-unit id="28036916b940254ea5ac7791e6ecdcfaba772ebe" translate="yes" xml:space="preserve">
          <source>Obtains a clock that returns the current instant ticking in whole minutes using the best available system clock.</source>
          <target state="translated">利用可能な最良のシステムクロックを使用して、現在の瞬間的な刻みを分単位で返すクロックを取得します。</target>
        </trans-unit>
        <trans-unit id="a70eb1cc7e0c396508730ba1555de6e0f536237e" translate="yes" xml:space="preserve">
          <source>Obtains a clock that returns the current instant ticking in whole seconds using best available system clock.</source>
          <target state="translated">利用可能な最良のシステムクロックを使用して、現在の瞬間的な刻みを秒単位で返すクロックを取得します。</target>
        </trans-unit>
        <trans-unit id="72eab234d6d2f9954ae80a2bff1da76984a87b35" translate="yes" xml:space="preserve">
          <source>Obtains a clock that returns the current instant ticking in whole seconds using the best available system clock.</source>
          <target state="translated">利用可能な最良のシステムクロックを使用して、現在の瞬間的な刻みを秒単位で返すクロックを取得します。</target>
        </trans-unit>
        <trans-unit id="1122985b2871dce21a607748a50f5ea9b49ab94a" translate="yes" xml:space="preserve">
          <source>Obtains a clock that returns the current instant using best available system clock.</source>
          <target state="translated">最適なシステムクロックを使用して、現在の瞬間を返すクロックを取得します。</target>
        </trans-unit>
        <trans-unit id="2950b464bfb425e4ae38020d1b1458c8f63bbde4" translate="yes" xml:space="preserve">
          <source>Obtains a clock that returns the current instant using the best available system clock, converting to date and time using the UTC time-zone.</source>
          <target state="translated">利用可能な最良のシステムクロックを使用して現在の瞬間を返し、UTCタイムゾーンを使用して日付と時間に変換するクロックを取得します。</target>
        </trans-unit>
        <trans-unit id="fde5068f448df7c3de9d37d70f755dde89bc725d" translate="yes" xml:space="preserve">
          <source>Obtains a clock that returns the current instant using the best available system clock, converting to date and time using the default time-zone.</source>
          <target state="translated">デフォルトのタイムゾーンを使用して日付と時間に変換し、利用可能な最良のシステムクロックを使用して現在の瞬間を返すクロックを取得します。</target>
        </trans-unit>
        <trans-unit id="78b41cdc566e70ee2d70ea9b933edbf032f429a8" translate="yes" xml:space="preserve">
          <source>Obtains a clock that returns the current instant using the best available system clock.</source>
          <target state="translated">利用可能な最良のシステムクロックを使用して、現在の瞬間を返すクロックを取得します。</target>
        </trans-unit>
        <trans-unit id="9f466b2e366466140e553dcb89651be76430c1e3" translate="yes" xml:space="preserve">
          <source>Obtains a control of the specified type, if there is any.</source>
          <target state="translated">指定された型のコントロールがあれば、それを取得します。</target>
        </trans-unit>
        <trans-unit id="54a71b410522af32e0b51a21b3b1b4bf2a1dec5d" translate="yes" xml:space="preserve">
          <source>Obtains a control of the specified type, if there is any. Some controls may only be available when the line is open.</source>
          <target state="translated">指定されたタイプのコントロールがあれば、それを取得します。コントロールの中には、行が開いているときにしか利用できないものがあるかもしれません。</target>
        </trans-unit>
        <trans-unit id="ffd85f00a45637ce6c734da3c7aaad6d16af8bf3" translate="yes" xml:space="preserve">
          <source>Obtains a copy of the data for the meta message.</source>
          <target state="translated">メタメッセージのデータのコピーを取得します。</target>
        </trans-unit>
        <trans-unit id="4f82b49946578ff05e9d3667f028a0d7a40760fc" translate="yes" xml:space="preserve">
          <source>Obtains a copy of the data for the meta message. The returned array of bytes does not include the status byte or the message length data. The length of the data for the meta message is the length of the array. Note that the length of the entire message includes the status byte and the meta message type byte, and therefore may be longer than the returned array.</source>
          <target state="translated">メタメッセージのデータのコピーを取得します。返されるバイト数の配列には、ステータスバイトやメッセージ長データは含まれません。メタ・メッセージのデータの長さは、配列の長さになります。メッセージ全体の長さにはステータス・バイトとメタ・メッセージ・タイプ・バイトが含まれているため、返される配列の長さよりも長くなる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="65b5fce42653a4ddc765bf65d7a5a251fbef2b6a" translate="yes" xml:space="preserve">
          <source>Obtains a copy of the data for the system exclusive message.</source>
          <target state="translated">システム専用メッセージのデータのコピーを取得します。</target>
        </trans-unit>
        <trans-unit id="385aa4313bf25231e9aaf89f9a6e1d9462c67075" translate="yes" xml:space="preserve">
          <source>Obtains a copy of the data for the system exclusive message. The returned array of bytes does not include the status byte.</source>
          <target state="translated">システム専用メッセージのデータのコピーを取得します。返されるバイト数の配列には、ステータスバイトは含まれません。</target>
        </trans-unit>
        <trans-unit id="1783ba500f721b59b57f595fcf98b9e9e6ee36c6" translate="yes" xml:space="preserve">
          <source>Obtains a fixed value range.</source>
          <target state="translated">固定値範囲を取得します。</target>
        </trans-unit>
        <trans-unit id="d1a3350b98bb1eeb773a74a34961c7780a25c838" translate="yes" xml:space="preserve">
          <source>Obtains a fully variable value range.</source>
          <target state="translated">完全可変値範囲を取得します。</target>
        </trans-unit>
        <trans-unit id="1d3d03a2c1fa4a4f99405c7e5716788e44e3d25e" translate="yes" xml:space="preserve">
          <source>Obtains a line that is available for use and that matches the description in the specified &lt;code&gt;Line.Info&lt;/code&gt; object.</source>
          <target state="translated">使用可能で、指定された &lt;code&gt;Line.Info&lt;/code&gt; オブジェクトの説明と一致するラインを取得します。</target>
        </trans-unit>
        <trans-unit id="c54dd598198bf815a2e8854ce1ac4d2ee9e676cb" translate="yes" xml:space="preserve">
          <source>Obtains a line that matches the description in the specified &lt;code&gt;Line.Info&lt;/code&gt; object.</source>
          <target state="translated">指定された &lt;code&gt;Line.Info&lt;/code&gt; オブジェクトの説明と一致する行を取得します。</target>
        </trans-unit>
        <trans-unit id="bde20c0af738450ac9da9bb796037de07f9bf78a" translate="yes" xml:space="preserve">
          <source>Obtains a list of instruments contained in this sound bank.</source>
          <target state="translated">このサウンドバンクに含まれる楽器のリストを取得します。</target>
        </trans-unit>
        <trans-unit id="23daa04e14be9b734c250abc7e7bd8de01b812ca" translate="yes" xml:space="preserve">
          <source>Obtains a list of instruments that come with the synthesizer.</source>
          <target state="translated">シンセサイザーに付属する楽器のリストを取得します。</target>
        </trans-unit>
        <trans-unit id="8ed01997085af5b57501b31a2064cd1bf9e0f170" translate="yes" xml:space="preserve">
          <source>Obtains a list of instruments that come with the synthesizer. These instruments might be built into the synthesizer, or they might be part of a default soundbank provided with the synthesizer, etc.</source>
          <target state="translated">シンセサイザーに付属しているインストゥルメントのリストを取得します。これらの楽器はシンセサイザーに組み込まれているかもしれませんし、シンセサイザーに付属しているデフォルトのサウンドバンクに含まれているかもしれません。</target>
        </trans-unit>
        <trans-unit id="12704948e582869f3c13ddee842f5d61ffade23b" translate="yes" xml:space="preserve">
          <source>Obtains a list of patches referenced in this sequence.</source>
          <target state="translated">このシーケンスで参照されているパッチのリストを取得します。</target>
        </trans-unit>
        <trans-unit id="e3f3f37f01f9a592b6d02def1771131bcc192dfa" translate="yes" xml:space="preserve">
          <source>Obtains a list of patches referenced in this sequence. This patch list may be used to load the required &lt;a href=&quot;instrument&quot;&gt;&lt;code&gt;Instrument&lt;/code&gt;&lt;/a&gt; objects into a &lt;a href=&quot;synthesizer&quot;&gt;&lt;code&gt;Synthesizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Obtains a list of patches referenced in this sequence. This patch list may be used to load the required &lt;a href=&quot;instrument&quot;&gt; &lt;code&gt;Instrument&lt;/code&gt; &lt;/a&gt; objects into a &lt;a href=&quot;synthesizer&quot;&gt; &lt;code&gt;Synthesizer&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="39af462840dc93bd33b97403350886cee443dc2c" translate="yes" xml:space="preserve">
          <source>Obtains a list of patches referenced in this sequence. This patch list may be used to load the required &lt;code&gt;&lt;a href=&quot;instrument&quot;&gt;&lt;code&gt;Instrument&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; objects into a &lt;code&gt;&lt;a href=&quot;synthesizer&quot;&gt;&lt;code&gt;Synthesizer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">このシーケンスで参照されているパッチのリストを取得します。このパッチリストは、必要な &lt;code&gt;&lt;a href=&quot;instrument&quot;&gt;&lt;code&gt;Instrument&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; オブジェクトを &lt;code&gt;&lt;a href=&quot;synthesizer&quot;&gt;&lt;code&gt;Synthesizer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; にロードするために使用できます。</target>
        </trans-unit>
        <trans-unit id="6d0597bfd60f09cc27712e22d2c66feaf1c733a3" translate="yes" xml:space="preserve">
          <source>Obtains a list of prepared transaction branches from a resource manager.</source>
          <target state="translated">リソースマネージャから準備されたトランザクションブランチのリストを取得します。</target>
        </trans-unit>
        <trans-unit id="41fa54b15f4b31e441ef1003b44ca0715442b675" translate="yes" xml:space="preserve">
          <source>Obtains a list of prepared transaction branches from a resource manager. The transaction manager calls this method during recovery to obtain the list of transaction branches that are currently in prepared or heuristically completed states.</source>
          <target state="translated">リソース・マネージャから準備されたトランザクション・ブランチのリストを取得します。トランザクション・マネージャは、現在準備された状態またはヒューリスティックに完了した状態にあるトランザクション・ブランチのリストを取得するために、リカバリ中にこのメソッドを呼び出す。</target>
        </trans-unit>
        <trans-unit id="da51db0b001d35a8eb868cc3e7071bd40db9a2b6" translate="yes" xml:space="preserve">
          <source>Obtains a list of the instruments that are currently loaded onto this &lt;code&gt;Synthesizer&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Synthesizer&lt;/code&gt; に現在ロードされているインストゥルメントのリストを取得します。</target>
        </trans-unit>
        <trans-unit id="98edf019235f50a1b067717211db080708951266" translate="yes" xml:space="preserve">
          <source>Obtains a local date in Hijrah calendar system from the era, year-of-era and day-of-year fields.</source>
          <target state="translated">時代、年号、曜日のフィールドから、ヒジュラ暦システムの現地の日付を取得します。</target>
        </trans-unit>
        <trans-unit id="3a7dd97c0c0de7710e0a9ed9867a6b0edc7931e5" translate="yes" xml:space="preserve">
          <source>Obtains a local date in Hijrah calendar system from the era, year-of-era, month-of-year and day-of-month fields.</source>
          <target state="translated">時代、年号、年月、月日の各フィールドから、ヒジュラ暦システムのローカルな日付を取得します。</target>
        </trans-unit>
        <trans-unit id="de45d70c33c3a0878e452f2cd04ea9d58faf3aa4" translate="yes" xml:space="preserve">
          <source>Obtains a local date in Hijrah calendar system from the proleptic-year and day-of-year fields.</source>
          <target state="translated">プロレプティックイヤーとデイオブイヤーのフィールドから、ヒジュラ暦システムのローカルな日付を取得します。</target>
        </trans-unit>
        <trans-unit id="599cfb70482f15423912b34539e664e5818ee0b1" translate="yes" xml:space="preserve">
          <source>Obtains a local date in Hijrah calendar system from the proleptic-year, month-of-year and day-of-month fields.</source>
          <target state="translated">プロレプト年、年月、月日のフィールドからヒジュラ暦システムのローカルな日付を取得します。</target>
        </trans-unit>
        <trans-unit id="652074249c765bd86b08cee578ba67ceaa264716" translate="yes" xml:space="preserve">
          <source>Obtains a local date in Japanese calendar system from the era, year-of-era and day-of-year fields.</source>
          <target state="translated">時代、年号、年号の欄から和暦の現地日を取得します。</target>
        </trans-unit>
        <trans-unit id="8775c427fffabe381eb763429ec2cb3e5cf5a766" translate="yes" xml:space="preserve">
          <source>Obtains a local date in Japanese calendar system from the era, year-of-era, month-of-year and day-of-month fields.</source>
          <target state="translated">時代、年号、月号、月日の各フィールドから、和暦での現地日付を取得します。</target>
        </trans-unit>
        <trans-unit id="8be0496a9cceda247e6fdbdfa1d1673d910d993d" translate="yes" xml:space="preserve">
          <source>Obtains a local date in Japanese calendar system from the proleptic-year and day-of-year fields.</source>
          <target state="translated">プロレプティックイヤーとデイオブイヤーのフィールドから、和暦システムにおける現地の日付を取得します。</target>
        </trans-unit>
        <trans-unit id="ba2e446816d066b2859228d8ee88c4b22fbc4e2f" translate="yes" xml:space="preserve">
          <source>Obtains a local date in Japanese calendar system from the proleptic-year, month-of-year and day-of-month fields.</source>
          <target state="translated">暦年、暦月、暦月、暦日のフィールドから和暦での現地日付を取得します。</target>
        </trans-unit>
        <trans-unit id="0bcfdcd506f888752eddbb7a92cf936f6d413685" translate="yes" xml:space="preserve">
          <source>Obtains a local date in Minguo calendar system from the era, year-of-era and day-of-year fields.</source>
          <target state="translated">時代・年号・曜日の欄から、民国暦システムの現地の日付を取得します。</target>
        </trans-unit>
        <trans-unit id="0d7f779c38ba4a1d7c3e74c34f2768a4bb8f0c49" translate="yes" xml:space="preserve">
          <source>Obtains a local date in Minguo calendar system from the era, year-of-era, month-of-year and day-of-month fields.</source>
          <target state="translated">時代、年号、年月、月日のフィールドから、民国暦システムの現地の日付を取得します。</target>
        </trans-unit>
        <trans-unit id="e782a9aaa08d2a18ea7eaa0a37bd9af6bb1ee86e" translate="yes" xml:space="preserve">
          <source>Obtains a local date in Minguo calendar system from the proleptic-year and day-of-year fields.</source>
          <target state="translated">プロレプト年と曜日のフィールドから、みんぐう暦システムのローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="78c010d20eeb7f9cb79330f2707673fa863353e6" translate="yes" xml:space="preserve">
          <source>Obtains a local date in Minguo calendar system from the proleptic-year, month-of-year and day-of-month fields.</source>
          <target state="translated">プロレプト年、年月、月日のフィールドから、民国暦システムのローカルな日付を取得します。</target>
        </trans-unit>
        <trans-unit id="17a8bc6020bcdf996e9becb7b12f2b4beec22e39" translate="yes" xml:space="preserve">
          <source>Obtains a local date in Thai Buddhist calendar system from the era, year-of-era and day-of-year fields.</source>
          <target state="translated">タイ仏教暦システムにおける現地の日付を、時代、年号、年号の欄から取得します。</target>
        </trans-unit>
        <trans-unit id="d61c4894300419ef56f74db13179886e57d5a836" translate="yes" xml:space="preserve">
          <source>Obtains a local date in Thai Buddhist calendar system from the era, year-of-era, month-of-year and day-of-month fields.</source>
          <target state="translated">時代、年号、年月、月日の欄から、タイ仏教暦の現地の日付を取得します。</target>
        </trans-unit>
        <trans-unit id="bb41a4ae14214ad16105c93a135b96ce598d369a" translate="yes" xml:space="preserve">
          <source>Obtains a local date in Thai Buddhist calendar system from the proleptic-year and day-of-year fields.</source>
          <target state="translated">プロレプティック・イヤーとデイ・オブ・イヤーのフィールドから、タイ仏教暦システムにおける現地の日付を取得します。</target>
        </trans-unit>
        <trans-unit id="47f31f01dc85e4597bb7e9134bc738b72144a066" translate="yes" xml:space="preserve">
          <source>Obtains a local date in Thai Buddhist calendar system from the proleptic-year, month-of-year and day-of-month fields.</source>
          <target state="translated">プロレプティック年、年月、月日のフィールドから、タイ仏教暦システムにおける現地の日付を取得します。</target>
        </trans-unit>
        <trans-unit id="3a766c0d17507a7a0123f6788c36f303ec3c8075" translate="yes" xml:space="preserve">
          <source>Obtains a local date in the Hijrah calendar system from the epoch-day.</source>
          <target state="translated">エポックデイからヒジュラ暦システムのローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="ae2f5542292bf4a30e6f82a223fcde2287a792e8" translate="yes" xml:space="preserve">
          <source>Obtains a local date in the Japanese calendar system from the epoch-day.</source>
          <target state="translated">エポックデイから和暦システムのローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="6ec3241c66c118160e7cacad5388f724fc2ac8ac" translate="yes" xml:space="preserve">
          <source>Obtains a local date in the Minguo calendar system from the epoch-day.</source>
          <target state="translated">エポックデイからみんぐう暦システムのローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="77749cad1b764357691f06e13cf1d67b39667ae8" translate="yes" xml:space="preserve">
          <source>Obtains a local date in the Thai Buddhist calendar system from the epoch-day.</source>
          <target state="translated">エポックデイからタイ仏教暦システムのローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="c1b7840c4afbbc8e9c43369f508ec1884ee9f62d" translate="yes" xml:space="preserve">
          <source>Obtains a local date in this chronology from another temporal object.</source>
          <target state="translated">別の時間オブジェクトから、この年表のローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="75eed1c49105d10a3b8f910377b0289e8dfbf682" translate="yes" xml:space="preserve">
          <source>Obtains a local date in this chronology from the epoch-day.</source>
          <target state="translated">エポック日からこの年表のローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="ef642079c1c94521317d4ffeb32d2010405ab8b1" translate="yes" xml:space="preserve">
          <source>Obtains a local date in this chronology from the era, year-of-era and day-of-year fields.</source>
          <target state="translated">この年表では、時代、年号、年号、年号の分野から現地の日付を取得します。</target>
        </trans-unit>
        <trans-unit id="9baef71491444337040424e993c37c79828d4d79" translate="yes" xml:space="preserve">
          <source>Obtains a local date in this chronology from the era, year-of-era, month-of-year and day-of-month fields.</source>
          <target state="translated">年代、年号、年号、月号、および月日の各フィールドから、この年表のローカルな日付を取得します。</target>
        </trans-unit>
        <trans-unit id="cbc7a7712e7c84ac33d813ab320d7a19b1bf95fb" translate="yes" xml:space="preserve">
          <source>Obtains a local date in this chronology from the proleptic-year and day-of-year fields.</source>
          <target state="translated">Proleptic-yearとday-of-yearのフィールドから、この年表のローカルな日付を取得します。</target>
        </trans-unit>
        <trans-unit id="4db45ff1c73ebf593887dcf929aa15b9a4f66f90" translate="yes" xml:space="preserve">
          <source>Obtains a local date in this chronology from the proleptic-year, month-of-year and day-of-month fields.</source>
          <target state="translated">Proleptic-year、month-of-year、およびday-of-monthフィールドから、この年表のローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="9ca51c454c4674aaff505d6a65a60a285f8d7f42" translate="yes" xml:space="preserve">
          <source>Obtains a local date-time in this chronology from another temporal object.</source>
          <target state="translated">別の時間オブジェクトから、このクロノロジー内のローカルな日付時刻を取得します。</target>
        </trans-unit>
        <trans-unit id="f7a185b9dbbd76c5c345ed26c13e1199f60468b0" translate="yes" xml:space="preserve">
          <source>Obtains a method handle bound to this VarHandle and the given access mode.</source>
          <target state="translated">この VarHandle と指定されたアクセスモードにバインドされたメソッドハンドルを取得します。</target>
        </trans-unit>
        <trans-unit id="a8c3c8c0fa3e52932e6acf90475fd46d0c1f0c12" translate="yes" xml:space="preserve">
          <source>Obtains a new instance of a &lt;a href=&quot;../xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Obtains a new instance of a &lt;a href=&quot;../xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e25bfb2e822278a8da4aaaea92fd73fb2aa933bd" translate="yes" xml:space="preserve">
          <source>Obtains a new instance of a &lt;a href=&quot;../xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt;. This method uses the following ordered lookup procedure to find and load the &lt;a href=&quot;../xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; implementation class:</source>
          <target state="translated">&lt;a href=&quot;../xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; の&lt;/a&gt;新しいインスタンスを取得します。このメソッドは、次の順序付きルックアッププロシージャを使用して、&lt;a href=&quot;../xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt;実装クラスを検索してロードします。</target>
        </trans-unit>
        <trans-unit id="e4d5902ccddfb163279e99e0ecad2e6bda9f408f" translate="yes" xml:space="preserve">
          <source>Obtains a new memory segment backed by the same underlying memory region as this segment, but with different owner thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23b2972704c08d58dc6cbfbcdb4415a0fee4df1" translate="yes" xml:space="preserve">
          <source>Obtains a new memory segment backed by the same underlying memory region as this segment, but with different owner thread. As a side-effect, this segment will be marked as &lt;em&gt;not alive&lt;/em&gt;, and subsequent operations on this segment will result in runtime errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b42f9f87b20a31e2f17cd1f82606fb6ef31e09e" translate="yes" xml:space="preserve">
          <source>Obtains a new memory segment view whose base address is the same as the base address of this segment plus a given offset, and whose new size is specified by the given argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c6fa07936982a6cfa7fff5ee9b5e5d323db04b" translate="yes" xml:space="preserve">
          <source>Obtains a new sequence layout with same element layout, alignment constraints and name as this sequence layout but with the new specified element count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e663f11513f16b3f7b7fea3353842bd6cbb7491a" translate="yes" xml:space="preserve">
          <source>Obtains a period for this chronology based on years, months and days.</source>
          <target state="translated">年、月、日に基づいて、この年表の期間を取得します。</target>
        </trans-unit>
        <trans-unit id="779758d7833f66f2a44cefe9d9c1ff2876516b49" translate="yes" xml:space="preserve">
          <source>Obtains a reader for extracting character print data from this doc.</source>
          <target state="translated">本ドキュメントから文字印字データを抽出するためのリーダを取得します。</target>
        </trans-unit>
        <trans-unit id="6b600ae2eeff8aec9aa6c1a5359adf2066244811" translate="yes" xml:space="preserve">
          <source>Obtains a reader for extracting character print data from this doc. The &lt;code&gt;Doc&lt;/code&gt; implementation is required to support this method if the &lt;code&gt;DocFlavor&lt;/code&gt; has one of the following print data representation classes, and return &lt;code&gt;null&lt;/code&gt; otherwise:</source>
          <target state="translated">このドキュメントから文字印刷データを抽出するためのリーダーを取得します。 &lt;code&gt;DocFlavor&lt;/code&gt; に次の印刷データ表現クラスのいずれかがある場合、このメソッドをサポートし、それ以外の場合は &lt;code&gt;null&lt;/code&gt; を返すには、 &lt;code&gt;Doc&lt;/code&gt; 実装が必要です。</target>
        </trans-unit>
        <trans-unit id="6f97c7809333777ab1942e8a433d8251f2ff8b7c" translate="yes" xml:space="preserve">
          <source>Obtains a reader for extracting character print data from this doc. The Doc implementation is required to support this method if the DocFlavor has one of the following print data representation classes, and return null otherwise:</source>
          <target state="translated">このdocから文字印刷データを抽出するためのリーダを取得します。DocFlavorが以下の印刷データ表現クラスのいずれかを持っている場合、Docの実装はこのメソッドをサポートする必要があり、それ以外の場合はnullを返します。</target>
        </trans-unit>
        <trans-unit id="98c036a802525d30ce195c545281597933e56c0b" translate="yes" xml:space="preserve">
          <source>Obtains a segment view with specific &lt;a href=&quot;#access-modes&quot;&gt;access modes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22fba880f6d79298e3fafcfe8a93df8f3cd0f7a5" translate="yes" xml:space="preserve">
          <source>Obtains a segment view with specific &lt;a href=&quot;#access-modes&quot;&gt;access modes&lt;/a&gt;. Supported access modes are &lt;a href=&quot;#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#CLOSE&quot;&gt;&lt;code&gt;CLOSE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ACQUIRE&quot;&gt;&lt;code&gt;ACQUIRE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#HANDOFF&quot;&gt;&lt;code&gt;HANDOFF&lt;/code&gt;&lt;/a&gt;. It is generally not possible to go from a segment with stricter access modes to one with less strict access modes. For instance, attempting to add &lt;a href=&quot;#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; access mode to a read-only segment will be met with an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0612e088b94748f29f85e55a576cb3aa436adfa7" translate="yes" xml:space="preserve">
          <source>Obtains a segment view with specific &lt;a href=&quot;#access-modes&quot;&gt;access modes&lt;/a&gt;. Supported access modes are &lt;a href=&quot;memorysegment#READ&quot;&gt;&lt;code&gt;MemorySegment.READ&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;memorysegment#WRITE&quot;&gt;&lt;code&gt;MemorySegment.WRITE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;memorysegment#CLOSE&quot;&gt;&lt;code&gt;MemorySegment.CLOSE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;memorysegment#ACQUIRE&quot;&gt;&lt;code&gt;MemorySegment.ACQUIRE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;memorysegment#HANDOFF&quot;&gt;&lt;code&gt;MemorySegment.HANDOFF&lt;/code&gt;&lt;/a&gt;. It is generally not possible to go from a segment with stricter access modes to one with less strict access modes. For instance, attempting to add &lt;a href=&quot;memorysegment#WRITE&quot;&gt;&lt;code&gt;MemorySegment.WRITE&lt;/code&gt;&lt;/a&gt; access mode to a read-only segment will be met with an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66d3acb4f1c5da9d2dac8b9efd96f4b0b6bc018" translate="yes" xml:space="preserve">
          <source>Obtains a set of audio formats supported by the data line.</source>
          <target state="translated">データラインがサポートするオーディオフォーマットのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="11f193cf55c530ea502a87853feb7afe724b3a68" translate="yes" xml:space="preserve">
          <source>Obtains a set of audio formats supported by the data line. Note that &lt;code&gt;isFormatSupported(AudioFormat)&lt;/code&gt; might return &lt;code&gt;true&lt;/code&gt; for certain additional formats that are missing from the set returned by &lt;code&gt;getFormats()&lt;/code&gt;. The reverse is not the case: &lt;code&gt;isFormatSupported(AudioFormat)&lt;/code&gt; is guaranteed to return &lt;code&gt;true&lt;/code&gt; for all formats returned by &lt;code&gt;getFormats()&lt;/code&gt;.</source>
          <target state="translated">データラインでサポートされているオーディオ形式のセットを取得します。 &lt;code&gt;isFormatSupported(AudioFormat)&lt;/code&gt; は、 &lt;code&gt;getFormats()&lt;/code&gt; によって返されるセットから欠落している特定の追加フォーマットに対して &lt;code&gt;true&lt;/code&gt; を返す場合があることに注意してください。逆は &lt;code&gt;isFormatSupported(AudioFormat)&lt;/code&gt; ません。isFormatSupported（AudioFormat）は、 &lt;code&gt;getFormats()&lt;/code&gt; によって返されるすべての形式に対して &lt;code&gt;true&lt;/code&gt; を返すことが保証されています。</target>
        </trans-unit>
        <trans-unit id="423691fef8b04e363d97313e09e47f2195d54a97" translate="yes" xml:space="preserve">
          <source>Obtains a set of audio formats supported by the data line. Note that &lt;code&gt;isFormatSupported(AudioFormat)&lt;/code&gt; might return &lt;code&gt;true&lt;/code&gt; for certain additional formats that are missing from the set returned by &lt;code&gt;getFormats()&lt;/code&gt;. The reverse is not the case: &lt;code&gt;isFormatSupported(AudioFormat)&lt;/code&gt; is guaranteed to return &lt;code&gt;true&lt;/code&gt; for all formats returned by &lt;code&gt;getFormats()&lt;/code&gt;. Some fields in the AudioFormat instances can be set to &lt;a href=&quot;audiosystem#NOT_SPECIFIED&quot;&gt;&lt;code&gt;NOT_SPECIFIED&lt;/code&gt;&lt;/a&gt; if that field does not apply to the format, or if the format supports a wide range of values for that field. For example, a multi-channel device supporting up to 64 channels, could set the channel field in the &lt;code&gt;AudioFormat&lt;/code&gt; instances returned by this method to &lt;code&gt;NOT_SPECIFIED&lt;/code&gt;.</source>
          <target state="translated">データラインでサポートされているオーディオ形式のセットを取得します。 &lt;code&gt;isFormatSupported(AudioFormat)&lt;/code&gt; は、 &lt;code&gt;getFormats()&lt;/code&gt; によって返されたセットから欠落している特定の追加フォーマットに対して &lt;code&gt;true&lt;/code&gt; を返す場合があることに注意してください。逆はそうではありません： &lt;code&gt;isFormatSupported(AudioFormat)&lt;/code&gt; は、 &lt;code&gt;getFormats()&lt;/code&gt; によって返されるすべてのフォーマットに対して &lt;code&gt;true&lt;/code&gt; を返すことが保証されています。 AudioFormatインスタンスの一部のフィールドは、そのフィールドがフォーマットに適用されない場合、またはフォーマットがそのフィールドの広範な値をサポートする場合、&lt;a href=&quot;audiosystem#NOT_SPECIFIED&quot;&gt; &lt;code&gt;NOT_SPECIFIED&lt;/code&gt; &lt;/a&gt;に設定できます。たとえば、最大64チャネルをサポートするマルチチャネルデバイスは、 &lt;code&gt;AudioFormat&lt;/code&gt; のチャネルフィールドを設定できます。このメソッドによって &lt;code&gt;NOT_SPECIFIED&lt;/code&gt; に返されるインスタンス。</target>
        </trans-unit>
        <trans-unit id="353b18af0fdd6fafed0d64ed262fe26134a130ce" translate="yes" xml:space="preserve">
          <source>Obtains a soundbank object from the &lt;code&gt;File&lt;/code&gt; provided.</source>
          <target state="translated">指定された &lt;code&gt;File&lt;/code&gt; からサウンドバンクオブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="17c643212bdce42481dc144396b91fde04c5ca43" translate="yes" xml:space="preserve">
          <source>Obtains a soundbank object from the &lt;code&gt;InputStream&lt;/code&gt; provided.</source>
          <target state="translated">指定された &lt;code&gt;InputStream&lt;/code&gt; からサウンドバンクオブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="cecddcbf2ef7024b78f67dfa7a09148f3ffd7837" translate="yes" xml:space="preserve">
          <source>Obtains a soundbank object from the &lt;code&gt;URL&lt;/code&gt; provided.</source>
          <target state="translated">指定された &lt;code&gt;URL&lt;/code&gt; からサウンドバンクオブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="7275c201f8ce19b23861ae19c6c6acff929c902a" translate="yes" xml:space="preserve">
          <source>Obtains a soundbank object from the URL provided.</source>
          <target state="translated">指定されたURLからサウンドバンクオブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="3904ae138c2734183aba6f6f1f20a9f8380f9f2f" translate="yes" xml:space="preserve">
          <source>Obtains a source data line that can be used for playing back audio data in the format specified by the &lt;code&gt;AudioFormat&lt;/code&gt; object, provided by the mixer specified by the &lt;code&gt;Mixer.Info&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Mixer.Info&lt;/code&gt; オブジェクトで指定されたミキサーによって提供される、 &lt;code&gt;AudioFormat&lt;/code&gt; オブジェクトで指定された形式でオーディオデータを再生するために使用できるソースデータラインを取得します。</target>
        </trans-unit>
        <trans-unit id="8c7c33b7d722fa210ef8544aec50aeb713ecd23d" translate="yes" xml:space="preserve">
          <source>Obtains a source data line that can be used for playing back audio data in the format specified by the &lt;code&gt;AudioFormat&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;AudioFormat&lt;/code&gt; オブジェクトで指定された形式でオーディオデータを再生するために使用できるソースデータ行を取得します。</target>
        </trans-unit>
        <trans-unit id="160d254c6eb6cdeba30db0e16213b81b02f1c4cc" translate="yes" xml:space="preserve">
          <source>Obtains a source data line that can be used for playing back audio data in the format specified by the &lt;code&gt;AudioFormat&lt;/code&gt; object. The returned line will be provided by the default system mixer, or, if not possible, by any other mixer installed in the system that supports a matching &lt;code&gt;SourceDataLine&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;AudioFormat&lt;/code&gt; オブジェクトで指定された形式でオーディオデータを再生するために使用できるソースデータラインを取得します。返されたラインは、デフォルトのシステムミキサーによって提供されるか、または可能でない場合、一致する &lt;code&gt;SourceDataLine&lt;/code&gt; オブジェクトをサポートするシステムにインストールされている他のミキサーによって提供されます。</target>
        </trans-unit>
        <trans-unit id="5a7ba4510272585b7ceec1fcc4cf66ec7fdf2733" translate="yes" xml:space="preserve">
          <source>Obtains a string describing the control type and its current state.</source>
          <target state="translated">制御タイプと現在の状態を表す文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="6dd92bbfdc357608bf9601dd17c15f8c313ab92d" translate="yes" xml:space="preserve">
          <source>Obtains a string representation of the event.</source>
          <target state="translated">イベントの文字列表現を取得します。</target>
        </trans-unit>
        <trans-unit id="bb09eb773900fc376035944ab027f3d040358289" translate="yes" xml:space="preserve">
          <source>Obtains a string representation of the event. The contents of the string may vary between implementations of Java Sound.</source>
          <target state="translated">イベントの文字列表現を取得します。文字列の内容は、Java Soundの実装によって異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="f513bdf11257c47a7fd6811c87b8613b7a06f8a8" translate="yes" xml:space="preserve">
          <source>Obtains a target data line that can be used for recording audio data in the format specified by the &lt;code&gt;AudioFormat&lt;/code&gt; object, provided by the mixer specified by the &lt;code&gt;Mixer.Info&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Mixer.Info&lt;/code&gt; オブジェクトで指定されたミキサーによって提供される、 &lt;code&gt;AudioFormat&lt;/code&gt; オブジェクトで指定された形式でオーディオデータを記録するために使用できるターゲットデータラインを取得します。</target>
        </trans-unit>
        <trans-unit id="7c8fbb60ccd0241096aef9e306e175f7a1087ff9" translate="yes" xml:space="preserve">
          <source>Obtains a target data line that can be used for recording audio data in the format specified by the &lt;code&gt;AudioFormat&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;AudioFormat&lt;/code&gt; オブジェクトで指定された形式でオーディオデータを録音するために使用できるターゲットデータラインを取得します。</target>
        </trans-unit>
        <trans-unit id="ce26ecb7973199ea21218b1ee9b1402ba889918e" translate="yes" xml:space="preserve">
          <source>Obtains a target data line that can be used for recording audio data in the format specified by the &lt;code&gt;AudioFormat&lt;/code&gt; object. The returned line will be provided by the default system mixer, or, if not possible, by any other mixer installed in the system that supports a matching &lt;code&gt;TargetDataLine&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;AudioFormat&lt;/code&gt; オブジェクトで指定された形式でオーディオデータを記録するために使用できるターゲットデータラインを取得します。返されたラインは、デフォルトのシステムミキサーによって提供されるか、または可能でない場合、一致する &lt;code&gt;TargetDataLine&lt;/code&gt; オブジェクトをサポートするシステムにインストールされている他のミキサーによって提供されます。</target>
        </trans-unit>
        <trans-unit id="9bfe189518cc80bb3cc42be438a5312070e6d0ee" translate="yes" xml:space="preserve">
          <source>Obtains a textual description of the data line info.</source>
          <target state="translated">データ行情報のテキスト説明を取得します。</target>
        </trans-unit>
        <trans-unit id="9e5e6be5a298482cb4147c1d8c4c78a3cba8bc59" translate="yes" xml:space="preserve">
          <source>Obtains a textual description of the line info.</source>
          <target state="translated">行情報のテキスト説明を取得します。</target>
        </trans-unit>
        <trans-unit id="cd20db131ec285aed1ee0cc7baf1376134cdc50a" translate="yes" xml:space="preserve">
          <source>Obtains a textual description of the sound bank, suitable for display.</source>
          <target state="translated">表示に適したサウンドバンクのテキスト説明を取得します。</target>
        </trans-unit>
        <trans-unit id="f91be41a9e9f16d9c0d48982fa90d1a65f5dc73c" translate="yes" xml:space="preserve">
          <source>Obtains a value for the specified desktop property.</source>
          <target state="translated">指定されたデスクトッププロパティの値を取得します。</target>
        </trans-unit>
        <trans-unit id="3eba16dcbea14ffe17c88716617b60211c800f6e" translate="yes" xml:space="preserve">
          <source>Obtains a value for the specified desktop property. A desktop property is a uniquely named value for a resource that is Toolkit global in nature. Usually it also is an abstract representation for an underlying platform dependent desktop setting. For more information on desktop properties supported by the AWT see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/DesktopProperties.html&quot;&gt;AWT Desktop Properties&lt;/a&gt;.</source>
          <target state="translated">指定されたデスクトッププロパティの値を取得します。デスクトッププロパティは、本質的にToolkitグローバルであるリソースの一意の名前の値です。通常、これは、基盤となるプラットフォームに依存するデスクトップ設定の抽象的な表現でもあります。AWTでサポートされている&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/DesktopProperties.html&quot;&gt;デスクトッププロパティの&lt;/a&gt;詳細については、AWTデスクトッププロパティを参照してください。</target>
        </trans-unit>
        <trans-unit id="4efc6b728aa233b3225bb29c5958d8ab1862b465" translate="yes" xml:space="preserve">
          <source>Obtains a value for the specified desktop property. A desktop property is a uniquely named value for a resource that is Toolkit global in nature. Usually it also is an abstract representation for an underlying platform dependent desktop setting. For more information on desktop properties supported by the AWT see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/DesktopProperties.html&quot;&gt;AWT Desktop Properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1734e5f4fdb2e77d7aab32efcfe6bbf7b9d94093" translate="yes" xml:space="preserve">
          <source>Obtains a variable value range.</source>
          <target state="translated">変数値の範囲を取得します。</target>
        </trans-unit>
        <trans-unit id="d00d8f4f26a15b9b942b3ea863950bf0ec11e138" translate="yes" xml:space="preserve">
          <source>Obtains an &lt;code&gt;Instrument&lt;/code&gt; from the given &lt;code&gt;Patch&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;Patch&lt;/code&gt; から &lt;code&gt;Instrument&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="338a8c232313c1badcae41a9fe760c5c47090df1" translate="yes" xml:space="preserve">
          <source>Obtains an ISO local date from another date-time object.</source>
          <target state="translated">別の日付-時刻オブジェクトから ISO ローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="6f9e21477f1740f4c1cfc23f700317ffc484c6b7" translate="yes" xml:space="preserve">
          <source>Obtains an ISO local date from the epoch-day.</source>
          <target state="translated">エポックデイからISOローカルの日付を取得します。</target>
        </trans-unit>
        <trans-unit id="92ebe33113207d6b26914ba75e3a995d6a086c7e" translate="yes" xml:space="preserve">
          <source>Obtains an ISO local date from the era, year-of-era and day-of-year fields.</source>
          <target state="translated">時代、年号、日号のフィールドから ISO ローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="77c1502c7ed1130a2b53baddee64d76fba1f6c41" translate="yes" xml:space="preserve">
          <source>Obtains an ISO local date from the era, year-of-era, month-of-year and day-of-month fields.</source>
          <target state="translated">時代、年号、年月、月日の各フィールドから ISO ローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="4263b178d8ef8790b3d7c999b7dda66c44d76780" translate="yes" xml:space="preserve">
          <source>Obtains an ISO local date from the proleptic-year and day-of-year fields.</source>
          <target state="translated">proleptic-year と day-of-year フィールドから ISO ローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="537b56d1146bb950f8765a1d26dcc09f75c268ab" translate="yes" xml:space="preserve">
          <source>Obtains an ISO local date from the proleptic-year, month-of-year and day-of-month fields.</source>
          <target state="translated">proleptic-year、month-of-year、および day-of-month フィールドから ISO ローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="745aacab7820c1684c7beb46dbc4d57df52865f4" translate="yes" xml:space="preserve">
          <source>Obtains an ISO local date-time from another date-time object.</source>
          <target state="translated">別の日付時間オブジェクトからISOローカルの日付時間を取得します。</target>
        </trans-unit>
        <trans-unit id="4ab71e50e6a46e7c02bbaff995a0445cbd467b34" translate="yes" xml:space="preserve">
          <source>Obtains an ISO zoned date-time from another date-time object.</source>
          <target state="translated">別の日付時間オブジェクトからISOゾーン化された日付時間を取得します。</target>
        </trans-unit>
        <trans-unit id="f3805f3af931674e09618fd0b92ee596095b88db" translate="yes" xml:space="preserve">
          <source>Obtains an ISO zoned date-time in this chronology from an &lt;code&gt;Instant&lt;/code&gt;.</source>
          <target state="translated">この年表で &lt;code&gt;Instant&lt;/code&gt; からISOゾーンの日時を取得します。</target>
        </trans-unit>
        <trans-unit id="bc0afb0c349708eb9aae06627a59ceeb5644739a" translate="yes" xml:space="preserve">
          <source>Obtains an array containing all the tracks in this sequence.</source>
          <target state="translated">このシーケンスの全トラックを含む配列を取得します。</target>
        </trans-unit>
        <trans-unit id="bd490ea261a9626783189fc9f838569117450ced" translate="yes" xml:space="preserve">
          <source>Obtains an array containing all the tracks in this sequence. If the sequence contains no tracks, an array of length 0 is returned.</source>
          <target state="translated">シーケンス内のすべてのトラックを含む配列を取得します。シーケンスにトラックが含まれていない場合は、長さ 0 の配列を返します。</target>
        </trans-unit>
        <trans-unit id="b39cc4968a1b6a07dec9ced2e027dbb3909f4cbb" translate="yes" xml:space="preserve">
          <source>Obtains an array of information objects representing the set of all MIDI devices available on the system.</source>
          <target state="translated">システム上で利用可能なすべてのMIDIデバイスのセットを表す情報オブジェクトの配列を取得します。</target>
        </trans-unit>
        <trans-unit id="33b7230492e4cd1cc78276030984303068f4f853" translate="yes" xml:space="preserve">
          <source>Obtains an array of information objects representing the set of all MIDI devices available on the system. A returned information object can then be used to obtain the corresponding device object, by invoking &lt;a href=&quot;#getMidiDevice(javax.sound.midi.MidiDevice.Info)&quot;&gt;&lt;code&gt;getMidiDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">システムで使用可能なすべてのMIDIデバイスのセットを表す情報オブジェクトの配列を取得します。返された情報オブジェクトは、&lt;a href=&quot;#getMidiDevice(javax.sound.midi.MidiDevice.Info)&quot;&gt; &lt;code&gt;getMidiDevice&lt;/code&gt; &lt;/a&gt;を呼び出すことにより、対応するデバイスオブジェクトを取得するために使用できます。</target>
        </trans-unit>
        <trans-unit id="888bdc5fa4a7d63296f0a19184d760d90b383648" translate="yes" xml:space="preserve">
          <source>Obtains an array of information objects representing the set of all MIDI devices available on the system. A returned information object can then be used to obtain the corresponding device object, by invoking &lt;a href=&quot;midisystem#getMidiDevice-javax.sound.midi.MidiDevice.Info-&quot;&gt;&lt;code&gt;getMidiDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">システムで使用可能なすべてのMIDIデバイスのセットを表す情報オブジェクトの配列を取得します。次に、返された情報オブジェクトを使用して、&lt;a href=&quot;midisystem#getMidiDevice-javax.sound.midi.MidiDevice.Info-&quot;&gt; &lt;code&gt;getMidiDevice&lt;/code&gt; &lt;/a&gt;を呼び出すことにより、対応するデバイスオブジェクトを取得できます。</target>
        </trans-unit>
        <trans-unit id="7fd375a588283a4f661ded12a2216fceac37a3c4" translate="yes" xml:space="preserve">
          <source>Obtains an array of mixer info objects that represents the set of audio mixers that are currently installed on the system.</source>
          <target state="translated">現在システムにインストールされているオーディオミキサーのセットを表すミキサー情報オブジェクトの配列を取得します。</target>
        </trans-unit>
        <trans-unit id="42c605eee0d9218016e94c83addc75fda3b84275" translate="yes" xml:space="preserve">
          <source>Obtains an array of supported signature algorithms that the local side is willing to use.</source>
          <target state="translated">ローカル側が使用することを望むサポートされている署名アルゴリズムの配列を取得します。</target>
        </trans-unit>
        <trans-unit id="b8e124535883cacae9b531898241a8e505f2636c" translate="yes" xml:space="preserve">
          <source>Obtains an array of supported signature algorithms that the peer is able to use.</source>
          <target state="translated">ピアが使用できるサポートされている署名アルゴリズムの配列を取得します。</target>
        </trans-unit>
        <trans-unit id="1ca67cc5989442df579630e80b23a1ab46b3bd1f" translate="yes" xml:space="preserve">
          <source>Obtains an audio input stream from the &lt;code&gt;File&lt;/code&gt; provided.</source>
          <target state="translated">提供された &lt;code&gt;File&lt;/code&gt; からオーディオ入力ストリームを取得します。</target>
        </trans-unit>
        <trans-unit id="e7b8f0b5ee64810cb7ba34c9272c4c196b2f6724" translate="yes" xml:space="preserve">
          <source>Obtains an audio input stream from the &lt;code&gt;File&lt;/code&gt; provided. The &lt;code&gt;File&lt;/code&gt; must point to valid audio file data.</source>
          <target state="translated">指定された &lt;code&gt;File&lt;/code&gt; からオーディオ入力ストリームを取得します。 &lt;code&gt;File&lt;/code&gt; 有効なオーディオファイルデータを示す必要があります。</target>
        </trans-unit>
        <trans-unit id="0a7a20fddfedc881d66b71b0a3a8b2b8e524a52f" translate="yes" xml:space="preserve">
          <source>Obtains an audio input stream from the &lt;code&gt;URL&lt;/code&gt; provided.</source>
          <target state="translated">指定された &lt;code&gt;URL&lt;/code&gt; からオーディオ入力ストリームを取得します。</target>
        </trans-unit>
        <trans-unit id="63c726d66e509efc7d4d918d2920ea18b6b3fa52" translate="yes" xml:space="preserve">
          <source>Obtains an audio input stream from the &lt;code&gt;URL&lt;/code&gt; provided. The &lt;code&gt;URL&lt;/code&gt; must point to valid audio file data.</source>
          <target state="translated">指定された &lt;code&gt;URL&lt;/code&gt; からオーディオ入力ストリームを取得します。 &lt;code&gt;URL&lt;/code&gt; は、有効なオーディオファイルデータを示す必要があります。</target>
        </trans-unit>
        <trans-unit id="abeced7112f861d78c1a470a2e580608cdcf838a" translate="yes" xml:space="preserve">
          <source>Obtains an audio input stream from the URL provided. The URL must point to valid audio file data.</source>
          <target state="translated">指定された URL から音声入力ストリームを取得します。URL は有効なオーディオファイルデータを指している必要があります。</target>
        </trans-unit>
        <trans-unit id="aeec05cb9916c3fdc5eaa0a9cf051c0e75650df0" translate="yes" xml:space="preserve">
          <source>Obtains an audio input stream from the input stream provided.</source>
          <target state="translated">提供された入力ストリームから音声入力ストリームを取得します。</target>
        </trans-unit>
        <trans-unit id="f577e95cee604860d3e89c5af9f6c21c7ececdef" translate="yes" xml:space="preserve">
          <source>Obtains an audio input stream from the input stream provided. The stream must point to valid audio file data. In general, audio file readers may need to read some data from the stream before determining whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and reset the stream's read pointer to its original position. If the input stream does not support this, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">提供された入力ストリームからオーディオ入力ストリームを取得します。ストリームは、有効なオーディオファイルデータを指している必要があります。一般に、オーディオファイルリーダーは、サポートされているかどうかを判断する前に、ストリームからデータを読み取る必要がある場合があります。これらのパーサーは、ストリームにマークを付け、ストリームをサポートするかどうかを判断するのに十分なデータを読み取り、ストリームの読み取りポインターを元の位置にリセットできる必要があります。入力ストリームがこれをサポートしていない場合、このメソッドは &lt;code&gt;IOException&lt;/code&gt; で失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="3d5bac695344dcca36bdce6a2ad5dc543c313854" translate="yes" xml:space="preserve">
          <source>Obtains an audio input stream from the input stream provided. The stream must point to valid audio file data. In general, audio file readers may need to read some data from the stream before determining whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and, if not, reset the stream's read pointer to its original position. If the input stream does not support this, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">提供された入力ストリームからオーディオ入力ストリームを取得します。ストリームは、有効なオーディオファイルデータを指している必要があります。一般に、オーディオファイルリーダーは、ストリームをサポートしているかどうかを判断する前に、ストリームからデータを読み取る必要がある場合があります。これらのパーサーは、ストリームをマークし、ストリームをサポートするかどうかを判断するのに十分なデータを読み取り、サポートしていない場合は、ストリームの読み取りポインターを元の位置にリセットできる必要があります。入力ストリームがこれをサポートしていない場合、このメソッドは &lt;code&gt;IOException&lt;/code&gt; で失敗することがあります。</target>
        </trans-unit>
        <trans-unit id="8febc9226a843cfe401e1da94cecb850c4f570a1" translate="yes" xml:space="preserve">
          <source>Obtains an audio input stream from the provided &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">提供された &lt;code&gt;File&lt;/code&gt; からオーディオ入力ストリームを取得します。</target>
        </trans-unit>
        <trans-unit id="fb7b7d354643c6fd01b263470de0169f99f321b7" translate="yes" xml:space="preserve">
          <source>Obtains an audio input stream from the provided &lt;code&gt;File&lt;/code&gt;. The &lt;code&gt;File&lt;/code&gt; must point to valid audio file data.</source>
          <target state="translated">指定された &lt;code&gt;File&lt;/code&gt; からオーディオ入力ストリームを取得します。 &lt;code&gt;File&lt;/code&gt; 有効なオーディオファイルデータを示す必要があります。</target>
        </trans-unit>
        <trans-unit id="6378b230c11208fb8a0d17516513857035d21ce2" translate="yes" xml:space="preserve">
          <source>Obtains an audio input stream from the provided input stream.</source>
          <target state="translated">提供された入力ストリームから音声入力ストリームを取得します。</target>
        </trans-unit>
        <trans-unit id="ca7177153f06c2cfdc8225acb0ce8c7eefae3f80" translate="yes" xml:space="preserve">
          <source>Obtains an audio input stream from the provided input stream. The stream must point to valid audio file data. The implementation of this method may require multiple parsers to examine the stream to determine whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and reset the stream's read pointer to its original position. If the input stream does not support these operation, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">提供された入力ストリームからオーディオ入力ストリームを取得します。ストリームは、有効なオーディオファイルデータを指している必要があります。このメソッドの実装では、複数のパーサーがストリームを調べて、それをサポートしているかどうかを判断する必要がある場合があります。これらのパーサーは、ストリームにマークを付け、ストリームをサポートするかどうかを判断するのに十分なデータを読み取り、ストリームの読み取りポインターを元の位置にリセットできる必要があります。入力ストリームがこれらの操作をサポートしていない場合、このメソッドは &lt;code&gt;IOException&lt;/code&gt; で失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="faf3e2f91f4f5560d0c74969d9f9a87716458168" translate="yes" xml:space="preserve">
          <source>Obtains an audio input stream from the provided input stream. The stream must point to valid audio file data. The implementation of this method may require multiple parsers to examine the stream to determine whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and, if not, reset the stream's read pointer to its original position. If the input stream does not support these operation, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">提供された入力ストリームからオーディオ入力ストリームを取得します。ストリームは、有効なオーディオファイルデータを指している必要があります。このメソッドの実装では、ストリームを調べてサポートするかどうかを判断するために複数のパーサーが必要になる場合があります。これらのパーサーは、ストリームをマークし、ストリームをサポートするかどうかを判断するのに十分なデータを読み取り、サポートしていない場合は、ストリームの読み取りポインターを元の位置にリセットできる必要があります。入力ストリームがこれらの操作をサポートしていない場合、このメソッドは &lt;code&gt;IOException&lt;/code&gt; で失敗することがあります。</target>
        </trans-unit>
        <trans-unit id="afd9c30aeb228d011f1c0cfeb2faa7b403cc08cc" translate="yes" xml:space="preserve">
          <source>Obtains an audio input stream of the indicated encoding, by converting the provided audio input stream.</source>
          <target state="translated">提供された音声入力ストリームを変換して、指示された符号化方式の音声入力ストリームを取得する。</target>
        </trans-unit>
        <trans-unit id="8167897e79a619418361b4fc1ee3278439327fa4" translate="yes" xml:space="preserve">
          <source>Obtains an audio input stream of the indicated format, by converting the provided audio input stream.</source>
          <target state="translated">提供された音声入力ストリームを変換して、指示されたフォーマットの音声入力ストリームを取得する。</target>
        </trans-unit>
        <trans-unit id="c1cc0b7d7ef277e8d6bdce51bf182798b937b118" translate="yes" xml:space="preserve">
          <source>Obtains an audio input stream with the specified encoding from the given audio input stream.</source>
          <target state="translated">指定されたオーディオ入力ストリームから、指定されたエンコーディングのオーディオ入力ストリームを取得する。</target>
        </trans-unit>
        <trans-unit id="3243dccaff4cafd6f232922f9440fdd4946268f9" translate="yes" xml:space="preserve">
          <source>Obtains an audio input stream with the specified format from the given audio input stream.</source>
          <target state="translated">指定された音声入力ストリームから、指定されたフォーマットの音声入力ストリームを取得する。</target>
        </trans-unit>
        <trans-unit id="557390521c67d4bdedb2396f0f3d888d40976526" translate="yes" xml:space="preserve">
          <source>Obtains an image of this application's icon.</source>
          <target state="translated">このアプリケーションのアイコンの画像を取得します。</target>
        </trans-unit>
        <trans-unit id="4a74bfac9f9d89cc628751518e398c2c8284363b" translate="yes" xml:space="preserve">
          <source>Obtains an input stream for extracting byte print data from this doc.</source>
          <target state="translated">本ドキュメントからバイト印刷データを抽出するための入力ストリームを取得します。</target>
        </trans-unit>
        <trans-unit id="54e1b00b00041b688d13e318011fa54353a68192" translate="yes" xml:space="preserve">
          <source>Obtains an input stream for extracting byte print data from this doc. The &lt;code&gt;Doc&lt;/code&gt; implementation is required to support this method if the &lt;code&gt;DocFlavor&lt;/code&gt; has one of the following print data representation classes, and return &lt;code&gt;null&lt;/code&gt; otherwise:</source>
          <target state="translated">このドキュメントからバイト印刷データを抽出するための入力ストリームを取得します。 &lt;code&gt;Doc&lt;/code&gt; 実装は場合は、この方法をサポートするために必要な &lt;code&gt;DocFlavor&lt;/code&gt; 次の印刷データ表現クラスのいずれかを持っている、と返す &lt;code&gt;null&lt;/code&gt; それ以外の場合は：</target>
        </trans-unit>
        <trans-unit id="a80692f9a8bf185037bceb9e5df01b5b00c48865" translate="yes" xml:space="preserve">
          <source>Obtains an input stream for extracting byte print data from this doc. The &lt;code&gt;Doc&lt;/code&gt; implementation is required to support this method if the &lt;code&gt;DocFlavor&lt;/code&gt; has one of the following print data representation classes; otherwise this method returns &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">このドキュメントからバイト印刷データを抽出するための入力ストリームを取得します。 &lt;code&gt;Doc&lt;/code&gt; 実装は場合は、この方法をサポートするために必要とされる &lt;code&gt;DocFlavor&lt;/code&gt; 次の印刷データ表現クラスの1つを有します。それ以外の場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="090cbba7e52e3275510bc0b3f588738080c04b25" translate="yes" xml:space="preserve">
          <source>Obtains an input stream for extracting byte print data from this doc. The Doc implementation is required to support this method if the DocFlavor has one of the following print data representation classes, and return null otherwise:</source>
          <target state="translated">このdocからバイト印刷データを抽出するための入力ストリームを取得します。Docの実装は、DocFlavorが以下の印刷データ表現クラスのいずれかを持っている場合にこのメソッドをサポートする必要があり、それ以外の場合はnullを返します。</target>
        </trans-unit>
        <trans-unit id="8af57e81488a8e93193926e6d6ba2e07c575e7b0" translate="yes" xml:space="preserve">
          <source>Obtains an instance defining a transition between two offsets.</source>
          <target state="translated">2つのオフセット間の遷移を定義するインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="1f874cc04709b582b5f8b8e10f491f021e543713" translate="yes" xml:space="preserve">
          <source>Obtains an instance defining the yearly rule to create transitions between two offsets.</source>
          <target state="translated">2つのオフセット間の遷移を作成するための年規則を定義したインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="ff3ec989f2fc9cb064ec3550946f0729bccf7287" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ChronoLocalDate&lt;/code&gt; from a temporal object.</source>
          <target state="translated">時間オブジェクトから &lt;code&gt;ChronoLocalDate&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="c814dfda4e7b2a970aed672ade83dcf84f4abf49" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; from a temporal object.</source>
          <target state="translated">時間オブジェクトから &lt;code&gt;ChronoLocalDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="8acd99bb787b822a17ce56c27fa9e9709cf92632" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; from a temporal object.</source>
          <target state="translated">一時オブジェクトから &lt;code&gt;ChronoZonedDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="6c169cc59d60c85fae6c03dcee28d514a2ca3170" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Chronology&lt;/code&gt; from a chronology ID or calendar system type.</source>
          <target state="translated">年表IDまたはカレンダーシステムタイプから &lt;code&gt;Chronology&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="7e4da6998b0a4ac59d80bec586696b916ca71165" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Chronology&lt;/code&gt; from a locale.</source>
          <target state="translated">ロケールから &lt;code&gt;Chronology&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="7e3c93ce892bb672164b9861d1a9cd8cec3fe9c3" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Chronology&lt;/code&gt; from a temporal object.</source>
          <target state="translated">時間オブジェクトから &lt;code&gt;Chronology&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="a836080c1b8e9ecd1eb41552a64a18d28ff0a289" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Date&lt;/code&gt; from a &lt;a href=&quot;../../../java.base/java/time/localdate&quot;&gt;&lt;code&gt;LocalDate&lt;/code&gt;&lt;/a&gt; object with the same year, month and day of month value as the given &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">インスタンス取得 &lt;code&gt;Date&lt;/code&gt; から&lt;a href=&quot;../../../java.base/java/time/localdate&quot;&gt; &lt;code&gt;LocalDate&lt;/code&gt; &lt;/a&gt;同じ年を持つオブジェクトを、与えられたとして、月の値の月と日 &lt;code&gt;LocalDate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c7eeb7da3e616134da208942cf98d9f45089044" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Date&lt;/code&gt; from an &lt;code&gt;Instant&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; オブジェクトから &lt;code&gt;Date&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="cfc4f4b5cbbd837109ded842a69aefc1c92df95f" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;DayOfWeek&lt;/code&gt; from a temporal object.</source>
          <target state="translated">一時オブジェクトから &lt;code&gt;DayOfWeek&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="10cb63fa64241b0a8db6371915c7c575d0af08cb" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;DayOfWeek&lt;/code&gt; from an &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 値から &lt;code&gt;DayOfWeek&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="8b4bf90bf4c4c9bc1706e8a83823e8546b0fc5d7" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Duration&lt;/code&gt; from a temporal amount.</source>
          <target state="translated">時間的な量から &lt;code&gt;Duration&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="7ac8d36cb1b061f75f46200e2f8ba3d2a416bb76" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;GregorianCalendar&lt;/code&gt; with the default locale from a &lt;code&gt;ZonedDateTime&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;ZonedDateTime&lt;/code&gt; オブジェクトからデフォルトのロケールで &lt;code&gt;GregorianCalendar&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="e29adeee4bb37a50a95242c67d45e82714c351e0" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;HijrahEra&lt;/code&gt; from an &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 値から &lt;code&gt;HijrahEra&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="1180dac9ee0e3965e1880b0ae742c14c1a32fa51" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Instant&lt;/code&gt; from a temporal object.</source>
          <target state="translated">一時オブジェクトから &lt;code&gt;Instant&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="5d4269ef7b40cf4f3b11a6e84137e40b315fdd30" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Instant&lt;/code&gt; from a text string such as &lt;code&gt;2007-12-03T10:15:30.00Z&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;2007-12-03T10:15:30.00Z&lt;/code&gt; などのテキスト文字列から &lt;code&gt;Instant&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="71657f54e41bb916c31e0504eaeacb71c8625313" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Instant&lt;/code&gt; using milliseconds from the epoch of 1970-01-01T00:00:00Z.</source>
          <target state="translated">1970-01-01T00：00：00Zのエポックからミリ秒を使用して &lt;code&gt;Instant&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="cd94557b0962a2b1d689d3e8716bc3dfbc65665f" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Instant&lt;/code&gt; using seconds from the epoch of 1970-01-01T00:00:00Z and nanosecond fraction of second.</source>
          <target state="translated">1970-01-01T00：00：00Zのエポックからの秒とナノ秒の秒を使用して、 &lt;code&gt;Instant&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="6b802345f68d72f30e93c48e3d27337589d2d169" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Instant&lt;/code&gt; using seconds from the epoch of 1970-01-01T00:00:00Z.</source>
          <target state="translated">1970-01-01T00：00：00Zのエポックから秒を使用して &lt;code&gt;Instant&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="c5a523df0344bb73379e8c4022ea060f42906b59" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;IsoEra&lt;/code&gt; from an &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;IsoEra&lt;/code&gt; のインスタンスを &lt;code&gt;int&lt;/code&gt; 値から取得します。</target>
        </trans-unit>
        <trans-unit id="8bc298c98e8e4a9d3a2fee350605e34b4ec93d00" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;JapaneseEra&lt;/code&gt; from an &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 値から &lt;code&gt;JapaneseEra&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="e6d2202d3fea61b423c9f4e33b6e32a325b82dcd" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalDate&lt;/code&gt; from a temporal object.</source>
          <target state="translated">一時オブジェクトから &lt;code&gt;LocalDate&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="0184b8a4b0150b3e343f3c77b352d1df6fb333b4" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalDate&lt;/code&gt; from a text string such as &lt;code&gt;2007-12-03&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;2007-12-03&lt;/code&gt; などのテキスト文字列から &lt;code&gt;LocalDate&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="591eee3aa377293252147b24eeb08062def27808" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalDate&lt;/code&gt; from a text string using a specific formatter.</source>
          <target state="translated">特定のフォーマッタを使用して、テキスト文字列から &lt;code&gt;LocalDate&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="16a3dfec6b6da82f2ebad1da8ffc810f25ba9ec5" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalDate&lt;/code&gt; from a year and day-of-year.</source>
          <target state="translated">年と日付から &lt;code&gt;LocalDate&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="ce38b0cede1dca1f79fce7ce0c5be3d7379ea429" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalDate&lt;/code&gt; from a year, month and day.</source>
          <target state="translated">年、月、日から &lt;code&gt;LocalDate&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="6a28cd8ef228270f65642aa36ba4e4f27a9c98db" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalDate&lt;/code&gt; from an &lt;code&gt;Instant&lt;/code&gt; and zone ID.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; IDとゾーンIDから &lt;code&gt;LocalDate&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="46bd4e014929cc0eeaa6a70ecd481ae60531d9b8" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalDate&lt;/code&gt; from the epoch day count.</source>
          <target state="translated">エポック &lt;code&gt;LocalDate&lt;/code&gt; からLocalDateのインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="01275039c71de1342743f977cb0ecd31f35eb9e8" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalDateTime&lt;/code&gt; from a date and time.</source>
          <target state="translated">日付と時刻から &lt;code&gt;LocalDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="41dddf72567c63dfde9dd5e63e2edbc6e5fc8efa" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalDateTime&lt;/code&gt; from a temporal object.</source>
          <target state="translated">一時オブジェクトから &lt;code&gt;LocalDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="9c09c3e3371b179a248ce61b95edaa3993d2f16f" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalDateTime&lt;/code&gt; from a text string such as &lt;code&gt;2007-12-03T10:15:30&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;2007-12-03T10:15:30&lt;/code&gt; などのテキスト文字列から &lt;code&gt;LocalDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="702aa8244823cdde872ce7ffc5d2d8fb272772c1" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalDateTime&lt;/code&gt; from a text string using a specific formatter.</source>
          <target state="translated">特定のフォーマッタを使用して、テキスト文字列から &lt;code&gt;LocalDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="68d2f1a61ef56c30543dbae930028d44bfd7cacb" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalDateTime&lt;/code&gt; from an &lt;code&gt;Instant&lt;/code&gt; and zone ID.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; IDとゾーンID から &lt;code&gt;LocalDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="705aa88b7e22d1d5fd40fea56e257db2af07e3b2" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalDateTime&lt;/code&gt; from year, month, day, hour and minute, setting the second and nanosecond to zero.</source>
          <target state="translated">年、月、日、時、分から &lt;code&gt;LocalDateTime&lt;/code&gt; のインスタンスを取得し、秒とナノ秒をゼロに設定します。</target>
        </trans-unit>
        <trans-unit id="3a425296acd936f365c79a1380e7f288d66ccb62" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalDateTime&lt;/code&gt; from year, month, day, hour, minute and second, setting the nanosecond to zero.</source>
          <target state="translated">年、月、日、時、分、秒から &lt;code&gt;LocalDateTime&lt;/code&gt; のインスタンスを取得し、ナノ秒をゼロに設定します。</target>
        </trans-unit>
        <trans-unit id="65f39a1fe27f1e77a86c05d39b60a03b730955e4" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalDateTime&lt;/code&gt; from year, month, day, hour, minute, second and nanosecond.</source>
          <target state="translated">年、月、日、時、分、秒、ナノ秒から &lt;code&gt;LocalDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="3c1ca5ee3d7042f71f631eaf91692de367203fff" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalDateTime&lt;/code&gt; using seconds from the epoch of 1970-01-01T00:00:00Z.</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; ：00：00Zのエポックからの秒数を使用してLocalDateTimeのインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="bec029700cc36b3bdd792ec0b1ad82065a307389" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalTime&lt;/code&gt; from a nanos-of-day value.</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; からLocalTimeのインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="6caa75f7af99f3a0b3f30921c575b4d4fce568f0" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalTime&lt;/code&gt; from a second-of-day value.</source>
          <target state="translated">1日の値から &lt;code&gt;LocalTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="3d5c7777d2690f026e750dbd57c5972965cff71f" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalTime&lt;/code&gt; from a temporal object.</source>
          <target state="translated">一時オブジェクトから &lt;code&gt;LocalTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="2215a41529cd874aa28edbdcb3c0959a6d53eed5" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalTime&lt;/code&gt; from a text string such as &lt;code&gt;10:15&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;10:15&lt;/code&gt; などのテキスト文字列から &lt;code&gt;LocalTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="65b4d95b09779eb1d082eda5f2b586f9f4f67a51" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalTime&lt;/code&gt; from a text string using a specific formatter.</source>
          <target state="translated">特定のフォーマッタを使用して、テキスト文字列から &lt;code&gt;LocalTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="2bec4333e5ff2d9eb5ae0bf6d95b2549a1254b25" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalTime&lt;/code&gt; from an &lt;code&gt;Instant&lt;/code&gt; and zone ID.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; IDとゾーンIDから &lt;code&gt;LocalTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="e767eae15b1ee1c0713b46ac9526b0f9fcec3dfe" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalTime&lt;/code&gt; from an hour and minute.</source>
          <target state="translated">時間と分から &lt;code&gt;LocalTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="f0e664d8e953edd1f0f4ea216b15e89df8d5b83a" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalTime&lt;/code&gt; from an hour, minute and second.</source>
          <target state="translated">時間、分、秒から &lt;code&gt;LocalTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="946deb76b1176c3a9809bc7a2f015cb025a12d09" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;LocalTime&lt;/code&gt; from an hour, minute, second and nanosecond.</source>
          <target state="translated">時間、分、秒、ナノ秒から &lt;code&gt;LocalTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="8e949380de80159ec872173f7af3502151957626" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;MinguoEra&lt;/code&gt; from an &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;MinguoEra&lt;/code&gt; のインスタンスを &lt;code&gt;int&lt;/code&gt; 値から取得します。</target>
        </trans-unit>
        <trans-unit id="c0f6eb691f030e25c3349dceff7049ffe37abdc1" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Month&lt;/code&gt; from a temporal object.</source>
          <target state="translated">時間オブジェクトから &lt;code&gt;Month&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="c180da8413fce434e5db979d831a0ef87e844e23" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Month&lt;/code&gt; from an &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 値から &lt;code&gt;Month&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="1af58c1cf225e9592f8ee450a5d294c9d25c380e" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;MonthDay&lt;/code&gt; from a temporal object.</source>
          <target state="translated">時間オブジェクトから &lt;code&gt;MonthDay&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="08931c8ad36eb37e2e462d861985807a78559133" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;MonthDay&lt;/code&gt; from a text string such as &lt;code&gt;--12-03&lt;/code&gt;.</source>
          <target state="translated">取得のインスタンス &lt;code&gt;MonthDay&lt;/code&gt; テキスト文字列などから &lt;code&gt;--12-03&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd5c1bd80c757f0416b5f5627f5da17e29030689" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;MonthDay&lt;/code&gt; from a text string using a specific formatter.</source>
          <target state="translated">特定のフォーマッタを使用して、テキスト文字列から &lt;code&gt;MonthDay&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="e56a57761c171d44256bf48808bfb9f713b3a140" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;MonthDay&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MonthDay&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="69da5b59da44df66fb64014c1ce20e98d39400ff" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;OffsetDateTime&lt;/code&gt; from a date, time and offset.</source>
          <target state="translated">日付、時刻、オフセットから &lt;code&gt;OffsetDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="78c406c47cf3671db48bfaeb4a2c6324c050e6f1" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;OffsetDateTime&lt;/code&gt; from a date-time and offset.</source>
          <target state="translated">日時とオフセットから &lt;code&gt;OffsetDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="da0602cc3c3c3433063b2f60047a8f52493a74ae" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;OffsetDateTime&lt;/code&gt; from a temporal object.</source>
          <target state="translated">一時オブジェクトから &lt;code&gt;OffsetDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="d41578cce8740a890391f0b6d351ccd5a7bccf7c" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;OffsetDateTime&lt;/code&gt; from a text string such as &lt;code&gt;2007-12-03T10:15:30+01:00&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;2007-12-03T10:15:30+01:00&lt;/code&gt; などのテキスト文字列から &lt;code&gt;OffsetDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="d488f5321fb722393f23825af1878bc07526708b" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;OffsetDateTime&lt;/code&gt; from a text string using a specific formatter.</source>
          <target state="translated">特定のフォーマッタを使用して、テキスト文字列から &lt;code&gt;OffsetDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="e2123ddb4375448f79959004723d31ec797847f6" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;OffsetDateTime&lt;/code&gt; from a year, month, day, hour, minute, second, nanosecond and offset.</source>
          <target state="translated">年、月、日、時、分、秒、ナノ秒、およびオフセットから &lt;code&gt;OffsetDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="e3d3e3ead05af39c7af5234ff6907b7a96fb978a" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;OffsetDateTime&lt;/code&gt; from an &lt;code&gt;Instant&lt;/code&gt; and zone ID.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; IDとゾーンID から &lt;code&gt;OffsetDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="be1f91854c159c65c24783b7c12e770cf6de0cd2" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;OffsetTime&lt;/code&gt; from a local time and an offset.</source>
          <target state="translated">ローカル時間とオフセットから &lt;code&gt;OffsetTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="18f02dceb3db7e7946aa6b2523cbd2f7700e4647" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;OffsetTime&lt;/code&gt; from a temporal object.</source>
          <target state="translated">時間オブジェクトから &lt;code&gt;OffsetTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="0e39f739156c825c0c848108caebc95b08e5d1b6" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;OffsetTime&lt;/code&gt; from a text string such as &lt;code&gt;10:15:30+01:00&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; &lt;code&gt;10:15:30+01:00&lt;/code&gt; などのテキスト文字列からOffsetTimeのインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="bcfe715f716a6dbea88a494afec2fa17e94ebd56" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;OffsetTime&lt;/code&gt; from a text string using a specific formatter.</source>
          <target state="translated">特定のフォーマッタを使用して、テキスト文字列から &lt;code&gt;OffsetTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="042a77298bae0729104e72de356d6999f597ac99" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;OffsetTime&lt;/code&gt; from an &lt;code&gt;Instant&lt;/code&gt; and zone ID.</source>
          <target state="translated">&lt;code&gt;Instant&lt;/code&gt; IDとゾーンID から &lt;code&gt;OffsetTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="13fee1ba1ae94e7a5a3eb20a6001c9eeb46345f7" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;OffsetTime&lt;/code&gt; from an hour, minute, second and nanosecond.</source>
          <target state="translated">時間、分、秒、ナノ秒から &lt;code&gt;OffsetTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="4c600d9c9336ba93e0f8933e5c6d9b90a52c01c0" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Period&lt;/code&gt; from a temporal amount.</source>
          <target state="translated">時間的な量から &lt;code&gt;Period&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="8b9d69c848c1be43f57ae40f342ac9f7c9623836" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ThaiBuddhistEra&lt;/code&gt; from an &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 値から &lt;code&gt;ThaiBuddhistEra&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="70722f4985c54b47efdf3f62d28de5c166c7bea9" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Time&lt;/code&gt; from a &lt;a href=&quot;../../../java.base/java/time/localtime&quot;&gt;&lt;code&gt;LocalTime&lt;/code&gt;&lt;/a&gt; object with the same hour, minute and second time value as the given &lt;code&gt;LocalTime&lt;/code&gt;.</source>
          <target state="translated">取得のインスタンス &lt;code&gt;Time&lt;/code&gt; から&lt;a href=&quot;../../../java.base/java/time/localtime&quot;&gt; &lt;code&gt;LocalTime&lt;/code&gt; &lt;/a&gt;所定の同じ時間、分、秒の時間値を持つオブジェクト &lt;code&gt;LocalTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74fa508ea4ea605dd946ebfa6bd00de8952b81bc" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Time&lt;/code&gt; from a &lt;a href=&quot;../../../java.base/java/time/localtime&quot;&gt;&lt;code&gt;LocalTime&lt;/code&gt;&lt;/a&gt; object with the same hour, minute and second time value as the given &lt;code&gt;LocalTime&lt;/code&gt;. The nanosecond field from &lt;code&gt;LocalTime&lt;/code&gt; is not part of the newly created &lt;code&gt;Time&lt;/code&gt; object.</source>
          <target state="translated">取得のインスタンス &lt;code&gt;Time&lt;/code&gt; から&lt;a href=&quot;../../../java.base/java/time/localtime&quot;&gt; &lt;code&gt;LocalTime&lt;/code&gt; &lt;/a&gt;所定の同じ時間、分、秒の時間値を持つオブジェクト &lt;code&gt;LocalTime&lt;/code&gt; 。 &lt;code&gt;LocalTime&lt;/code&gt; のナノ秒フィールドは、新しく作成された &lt;code&gt;Time&lt;/code&gt; オブジェクトの一部ではありません。</target>
        </trans-unit>
        <trans-unit id="35c4851ecf21b1f541ed570a22ece3658109bc7e" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Timestamp&lt;/code&gt; from a &lt;code&gt;LocalDateTime&lt;/code&gt; object, with the same year, month, day of month, hours, minutes, seconds and nanos date-time value as the provided &lt;code&gt;LocalDateTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LocalDateTime&lt;/code&gt; オブジェクトから &lt;code&gt;Timestamp&lt;/code&gt; のインスタンスを取得します。指定されたLocalDateTimeと同じ年、月、日、時間、分、秒、およびnanos日時の値を &lt;code&gt;LocalDateTime&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="e43571dd4b211afcbc76380b50a63045ae11d893" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Timestamp&lt;/code&gt; from an &lt;a href=&quot;../../../java.base/java/time/instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;../../../java.base/java/time/instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; &lt;/a&gt;オブジェクトから &lt;code&gt;Timestamp&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="d89007faecc3080fee7f670d0c7392037726edd3" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;WeekFields&lt;/code&gt; appropriate for a locale.</source>
          <target state="translated">ロケールに適した &lt;code&gt;WeekFields&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="0d6ccf1137b24d7f6dc8e472044f0ff66bd933a4" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;WeekFields&lt;/code&gt; from the first day-of-week and minimal days.</source>
          <target state="translated">最初の曜日と最小日から &lt;code&gt;WeekFields&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="1ce1f7f0abe829eb9d9f77c25944e73956b960ed" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Year&lt;/code&gt; from a temporal object.</source>
          <target state="translated">時間オブジェクトから &lt;code&gt;Year&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="e1c2a03b33c1a1c541090b108db730019851d819" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Year&lt;/code&gt; from a text string such as &lt;code&gt;2007&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;2007&lt;/code&gt; などのテキスト文字列から &lt;code&gt;Year&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="724c3662f87eaafb76069652f22d45db3a2b37af" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Year&lt;/code&gt; from a text string using a specific formatter.</source>
          <target state="translated">特定のフォーマッタを使用して、テキスト文字列から &lt;code&gt;Year&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="25bc5842ade1546febaa0db0eae8a46bbff016fb" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;Year&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Year&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="34a2c18a977942a6c3e003728ebbd834b4c2f82d" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;YearMonth&lt;/code&gt; from a temporal object.</source>
          <target state="translated">時間オブジェクトからYearMonthのインスタンスを &lt;code&gt;YearMonth&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="d8681d3bc9812ece962c1a1c3bd595b2a486a4ed" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;YearMonth&lt;/code&gt; from a text string such as &lt;code&gt;2007-12&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;2007-12&lt;/code&gt; などのテキスト文字列からYearMonthのインスタンスを &lt;code&gt;YearMonth&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="492ea34afa4e8bc1c2525a484ca6adacc6a21551" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;YearMonth&lt;/code&gt; from a text string using a specific formatter.</source>
          <target state="translated">特定のフォーマッタを使用して、テキスト文字列からYearMonthのインスタンスを &lt;code&gt;YearMonth&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="600af77cb8e02ebf70379f37e60da6721b2db8c8" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;YearMonth&lt;/code&gt; from a year and month.</source>
          <target state="translated">年月からYearMonthのインスタンスを &lt;code&gt;YearMonth&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="fa52c1b87954240d28acbcca72b87704ab60a530" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZoneId&lt;/code&gt; from a temporal object.</source>
          <target state="translated">一時オブジェクトから &lt;code&gt;ZoneId&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="a87159e347b02dac8f1a0e83a684449146449e2e" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZoneId&lt;/code&gt; from an ID ensuring that the ID is valid and available for use.</source>
          <target state="translated">IDから &lt;code&gt;ZoneId&lt;/code&gt; のインスタンスを取得し、IDが有効で使用可能であることを確認します。</target>
        </trans-unit>
        <trans-unit id="94cde218ed0baa401bd62f917418b1922ceff4c0" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZoneId&lt;/code&gt; using its ID using a map of aliases to supplement the standard zone IDs.</source>
          <target state="translated">標準ゾーンIDを補足するエイリアスのマップを使用して、IDを使用して &lt;code&gt;ZoneId&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="365ebece941c5396e9935ed54a8061098860bc39" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZoneId&lt;/code&gt; wrapping an offset.</source>
          <target state="translated">オフセットをラップする &lt;code&gt;ZoneId&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="b28f587bf0df3430bc3b953f277721acc5217fb5" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZoneOffset&lt;/code&gt; from a temporal object.</source>
          <target state="translated">一時オブジェクトから &lt;code&gt;ZoneOffset&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="c30f1e5585d46184e935c319096b7d7b9b0fb32d" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZoneOffset&lt;/code&gt; specifying the total offset in seconds</source>
          <target state="translated">秒単位で合計オフセットを指定する &lt;code&gt;ZoneOffset&lt;/code&gt; のインスタンスを取得します</target>
        </trans-unit>
        <trans-unit id="6add614071486a657c3ebfad43a636462867b156" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZoneOffset&lt;/code&gt; using an offset in hours and minutes.</source>
          <target state="translated">時間と分のオフセットを使用して &lt;code&gt;ZoneOffset&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="7ecd2d3431f2536cf946b250a506a692c6fd4be1" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZoneOffset&lt;/code&gt; using an offset in hours, minutes and seconds.</source>
          <target state="translated">時間、分、秒単位のオフセットを使用して &lt;code&gt;ZoneOffset&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="6bdf0ab09d2ca550691fffff06c2bd19e4a42190" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZoneOffset&lt;/code&gt; using an offset in hours.</source>
          <target state="translated">時間単位のオフセットを使用して &lt;code&gt;ZoneOffset&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="3b57c795ffaba785d2f633b1a8566fc593110d4c" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZoneOffset&lt;/code&gt; using the ID.</source>
          <target state="translated">IDを使用して &lt;code&gt;ZoneOffset&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="1bd4f669b7c80b9d42c83e69a195441508ba6b9f" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from a local date and time.</source>
          <target state="translated">ローカルの日付と時刻から &lt;code&gt;ZonedDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="1e35b430aad31cdc4b7c4f3fdf9e9c388229ae4a" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from a local date-time using the preferred offset if possible.</source>
          <target state="translated">可能な場合は優先オフセットを使用して、ローカルの日時から &lt;code&gt;ZonedDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="90e620ad40357c0ed6fabccd9fa0698844cc7f09" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from a local date-time.</source>
          <target state="translated">ローカル日時から &lt;code&gt;ZonedDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="daa7352efd20a4d5ce9ac3574e9875eed6e3abd7" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from a temporal object.</source>
          <target state="translated">一時オブジェクトから &lt;code&gt;ZonedDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="b053ac8c108f895fd83aba564572cf1e13e0f80b" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from a text string such as &lt;code&gt;2007-12-03T10:15:30+01:00[Europe/Paris]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;2007-12-03T10:15:30+01:00[Europe/Paris]&lt;/code&gt; などのテキスト文字列から &lt;code&gt;ZonedDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="a1310eed28b093dd2b16b8a8e6489c5bbe73a75c" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from a text string using a specific formatter.</source>
          <target state="translated">特定のフォーマッタを使用して、テキスト文字列から &lt;code&gt;ZonedDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="311510ede1a6fcce1a6133495fa115efe0788e78" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from a year, month, day, hour, minute, second, nanosecond and time-zone.</source>
          <target state="translated">年、月、日、時、分、秒、ナノ秒、およびタイムゾーンから &lt;code&gt;ZonedDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="439e844b515221df651a082f7619a11332dc731a" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from an &lt;code&gt;Instant&lt;/code&gt;.</source>
          <target state="translated">取得のインスタンス &lt;code&gt;ZonedDateTime&lt;/code&gt; から &lt;code&gt;Instant&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9bdc9cf32b7467fa178f1cb23f3b9ee0276a60be" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; from the instant formed by combining the local date-time and offset.</source>
          <target state="translated">ローカルの日時とオフセットを組み合わせて形成されたインスタントから &lt;code&gt;ZonedDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="5709c655590fc8a3a1dc687db7144abfdcefeb5f" translate="yes" xml:space="preserve">
          <source>Obtains an instance of &lt;code&gt;ZonedDateTime&lt;/code&gt; strictly validating the combination of local date-time, offset and zone ID.</source>
          <target state="translated">ローカルの日時、オフセット、ゾーンIDの組み合わせを厳密に検証する &lt;code&gt;ZonedDateTime&lt;/code&gt; のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="838dfb236058641c2080940a840e5ce4f3ab77b3" translate="yes" xml:space="preserve">
          <source>Obtains an instance of ZoneRules that has fixed zone rules.</source>
          <target state="translated">固定ゾーンルールを持つZoneRulesのインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="6f877d06d7aae1497878242ead869b09bc386b9b" translate="yes" xml:space="preserve">
          <source>Obtains an instance of a ZoneRules.</source>
          <target state="translated">ZoneRules のインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="0506ad01f3b1921875266ec1facd91614a199d23" translate="yes" xml:space="preserve">
          <source>Obtains an instance of the device represented by the info object.</source>
          <target state="translated">info オブジェクトで表されるデバイスのインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="6a4324003b1fbf28f78d682549fd0e1257c617b8" translate="yes" xml:space="preserve">
          <source>Obtains an instance of the mixer represented by the info object.</source>
          <target state="translated">info オブジェクトで表されるミキサーのインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="925f2febbb34c84aef204d86e3f7a30f686cf0fa" translate="yes" xml:space="preserve">
          <source>Obtains an instance of the mixer represented by the info object. If &lt;code&gt;null&lt;/code&gt; is passed, then the default mixer will be returned.</source>
          <target state="translated">infoオブジェクトで表されるミキサーのインスタンスを取得します。場合は &lt;code&gt;null&lt;/code&gt; が渡され、デフォルトのミキサーが返されます。</target>
        </trans-unit>
        <trans-unit id="af2a3bb0a1bb46ca2bdb9c34d22ea2b69e2eaad0" translate="yes" xml:space="preserve">
          <source>Obtains and ignores the next task that the executor would otherwise execute, if one is immediately available, and then retries execution of task r, unless the executor is shut down, in which case task r is instead discarded.</source>
          <target state="translated">実行者が実行するであろう次のタスクがすぐに利用可能であれば、それを取得して無視し、実行者がシャットダウンされない限り、タスク r の実行を再試行します(その場合、タスク r は破棄されます)。</target>
        </trans-unit>
        <trans-unit id="34755b1184b7a1a53586f1827c4761c06bbced68" translate="yes" xml:space="preserve">
          <source>Obtains information about all source lines of a particular type that are supported by the installed mixers.</source>
          <target state="translated">インストールされているミキサーがサポートしている特定のタイプの全ソースラインの情報を取得します。</target>
        </trans-unit>
        <trans-unit id="b237bf9463e75c6d7abbea7cac551b1787d891f6" translate="yes" xml:space="preserve">
          <source>Obtains information about all target lines of a particular type that are supported by the installed mixers.</source>
          <target state="translated">インストールされているミキサーがサポートしている特定のタイプの全ターゲットラインの情報を取得します。</target>
        </trans-unit>
        <trans-unit id="0e1d63c30b084d9b19df9b91378d19562cf91b7c" translate="yes" xml:space="preserve">
          <source>Obtains information about source lines of a particular type supported by the mixer.</source>
          <target state="translated">ミキサーがサポートする特定のタイプのソースラインの情報を取得します。</target>
        </trans-unit>
        <trans-unit id="1687d09bbe98e5d92e08fbd42b5de2105d9e9ec8" translate="yes" xml:space="preserve">
          <source>Obtains information about source lines of a particular type supported by the mixer. Some source lines may only be available when this mixer is open.</source>
          <target state="translated">ミキサーがサポートしている特定のタイプのソース行の情報を取得します。一部のソース行は、このミキサーがオープンされているときにのみ利用可能な場合があります。</target>
        </trans-unit>
        <trans-unit id="a642c2226510768574d3a8353aa3c747c320e0b3" translate="yes" xml:space="preserve">
          <source>Obtains information about target lines of a particular type supported by the mixer.</source>
          <target state="translated">ミキサがサポートする特定のタイプのターゲットラインの情報を取得します。</target>
        </trans-unit>
        <trans-unit id="2f89093d691a03b62e6d1c8d68be0e22b7be6bbf" translate="yes" xml:space="preserve">
          <source>Obtains information about target lines of a particular type supported by the mixer. Some target lines may only be available when this mixer is open.</source>
          <target state="translated">ミキサーがサポートしている特定のタイプのターゲットラインの情報を取得します。ターゲットラインの中には、このミキサーが開いているときにしか利用できないものもあります。</target>
        </trans-unit>
        <trans-unit id="f5862ebecc90468a75732f3851f549d2f030353a" translate="yes" xml:space="preserve">
          <source>Obtains information about the device, including its Java class and &lt;code&gt;Strings&lt;/code&gt; containing its name, vendor, and description.</source>
          <target state="translated">デバイスのJavaクラスや、名前、ベンダー、説明を含む &lt;code&gt;Strings&lt;/code&gt; 列など、デバイスに関する情報を取得します。</target>
        </trans-unit>
        <trans-unit id="997e261db921af6bd87fbdf4e0f17e808e7ba6b9" translate="yes" xml:space="preserve">
          <source>Obtains information about the set of source lines supported by this mixer.</source>
          <target state="translated">このミキサーがサポートするソースラインのセットの情報を取得します。</target>
        </trans-unit>
        <trans-unit id="2e05c0250dd2ef8fce3346c7fd3120387d747e00" translate="yes" xml:space="preserve">
          <source>Obtains information about the set of source lines supported by this mixer. Some source lines may only be available when this mixer is open.</source>
          <target state="translated">このミキサーがサポートするソースラインのセットに関する情報を取得します。このミキサーが開いているときにのみ利用できるソースラインもあります。</target>
        </trans-unit>
        <trans-unit id="627093d5dd82a012fdf884024acff536a8b94546" translate="yes" xml:space="preserve">
          <source>Obtains information about the set of target lines supported by this mixer.</source>
          <target state="translated">このミキサがサポートするターゲットラインのセットの情報を取得します。</target>
        </trans-unit>
        <trans-unit id="25e4cece4a8eb3c13d3687fc8756ca124448ac2f" translate="yes" xml:space="preserve">
          <source>Obtains information about the set of target lines supported by this mixer. Some target lines may only be available when this mixer is open.</source>
          <target state="translated">このミキサーがサポートするターゲットラインのセットに関する情報を取得します。ターゲットラインの中には、このミキサーが開いているときにのみ使用可能なものもあります。</target>
        </trans-unit>
        <trans-unit id="b5def9de893e95e0ddaf731d654a91f081696045" translate="yes" xml:space="preserve">
          <source>Obtains information about this mixer, including the product's name, version, vendor, etc.</source>
          <target state="translated">製品名、バージョン、ベンダーなど、このミキサーに関する情報を取得します。</target>
        </trans-unit>
        <trans-unit id="287f118c5f33c813b1e61a07eaecba0af974efd1" translate="yes" xml:space="preserve">
          <source>Obtains the &lt;a href=&quot;typeinfoprovider&quot;&gt;&lt;code&gt;TypeInfoProvider&lt;/code&gt;&lt;/a&gt; implementation of this &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">取得&lt;a href=&quot;typeinfoprovider&quot;&gt; &lt;code&gt;TypeInfoProvider&lt;/code&gt; の&lt;/a&gt;本の実装&lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d39563d8cf73a6c4f1d3dc0b5dca96a9fa82d3d1" translate="yes" xml:space="preserve">
          <source>Obtains the &lt;code&gt;Line.Info&lt;/code&gt; object describing this line.</source>
          <target state="translated">このラインを説明する &lt;code&gt;Line.Info&lt;/code&gt; オブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="e19199c172a2c63cde746ad023170cb98150cf83" translate="yes" xml:space="preserve">
          <source>Obtains the &lt;code&gt;Patch&lt;/code&gt; object that indicates the bank and program numbers where this instrument is to be stored in the synthesizer.</source>
          <target state="translated">この音源がシンセサイザーに保存されるバンクとプログラム番号を示す &lt;code&gt;Patch&lt;/code&gt; オブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="866ca1b843dcc5124c0488b887fb96d46bb03e0d" translate="yes" xml:space="preserve">
          <source>Obtains the DecimalStyle for the default &lt;a href=&quot;../../util/locale.category#FORMAT&quot;&gt;&lt;code&gt;FORMAT&lt;/code&gt;&lt;/a&gt; locale.</source>
          <target state="translated">デフォルトの&lt;a href=&quot;../../util/locale.category#FORMAT&quot;&gt; &lt;code&gt;FORMAT&lt;/code&gt; &lt;/a&gt;ロケールのDecimalStyleを取得します。</target>
        </trans-unit>
        <trans-unit id="aed36f20e3e9faa6ec5b0f031d431ef1f2bba9ef" translate="yes" xml:space="preserve">
          <source>Obtains the DecimalStyle for the specified locale.</source>
          <target state="translated">指定したロケールのDecimalStyleを取得します。</target>
        </trans-unit>
        <trans-unit id="6177b2afbdb7119b22c3ae04796e0300d7180c4a" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI channel associated with this event.</source>
          <target state="translated">このイベントに関連付けられた MIDI チャンネルを取得します。</target>
        </trans-unit>
        <trans-unit id="6002a183023c0a5535b130e708c387f22f519cec" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI channel associated with this event. This method assumes that the event is a MIDI channel message; if not, the return value will not be meaningful.</source>
          <target state="translated">このイベントに関連付けられた MIDI チャンネルを取得します。このメソッドはイベントが MIDI チャンネルメッセージであることを前提としており、そうでない場合、戻り値は意味を持ちません。</target>
        </trans-unit>
        <trans-unit id="0b3b04dc9f2015db68f66197f5333a59ce7ea51b" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI command associated with this event.</source>
          <target state="translated">このイベントに関連する MIDI コマンドを取得します。</target>
        </trans-unit>
        <trans-unit id="d60c7d12355decd92516795017049872697fcaaf" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI command associated with this event. This method assumes that the event is a MIDI channel message; if not, the return value will not be meaningful.</source>
          <target state="translated">このイベントに関連する MIDI コマンドを取得します。このメソッドはイベントが MIDI チャンネルメッセージであることを前提としていますが、そうでない場合、戻り値は意味を持ちません。</target>
        </trans-unit>
        <trans-unit id="54c6a3846464a9ac1055bea410a67091070ec4bf" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the &lt;code&gt;File&lt;/code&gt; provided.</source>
          <target state="translated">提供された &lt;code&gt;File&lt;/code&gt; MIDIファイル形式を取得します。</target>
        </trans-unit>
        <trans-unit id="8334eae69f7ce2fe6dbfe9b350872dd8339bb993" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the &lt;code&gt;File&lt;/code&gt; provided. The &lt;code&gt;File&lt;/code&gt; must point to valid MIDI file data.</source>
          <target state="translated">取得のMIDIファイル形式 &lt;code&gt;File&lt;/code&gt; 提供します。 &lt;code&gt;File&lt;/code&gt; 、有効なMIDIファイルデータを示す必要があります。</target>
        </trans-unit>
        <trans-unit id="b127c1ff90b9eafa3bf13b0e52ebdd5347d73846" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the &lt;code&gt;URL&lt;/code&gt; provided.</source>
          <target state="translated">指定された &lt;code&gt;URL&lt;/code&gt; のMIDIファイル形式を取得します。</target>
        </trans-unit>
        <trans-unit id="3665154cd0065a9280c198f6743338234da6785b" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the &lt;code&gt;URL&lt;/code&gt; provided. The &lt;code&gt;URL&lt;/code&gt; must point to valid MIDI file data.</source>
          <target state="translated">指定された &lt;code&gt;URL&lt;/code&gt; のMIDIファイル形式を取得します。 &lt;code&gt;URL&lt;/code&gt; は、有効なMIDIファイルデータを示す必要があります。</target>
        </trans-unit>
        <trans-unit id="ec7b9635c04904a6a613a805cb310a61fcc86b51" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the URL provided. The URL must point to valid MIDI file data.</source>
          <target state="translated">指定されたURLのMIDIファイルフォーマットを取得します。URLは有効なMIDIファイルデータを指している必要があります。</target>
        </trans-unit>
        <trans-unit id="cad0491ae922cd67eb5fb295cfb54508c32f8e5e" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the data in the specified URL.</source>
          <target state="translated">指定したURLのデータのMIDIファイル形式を取得します。</target>
        </trans-unit>
        <trans-unit id="594da249118253fa08cb7e16b797a02e62e8164c" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the data in the specified URL. The URL must point to valid MIDI file data for a file type recognized by the system.</source>
          <target state="translated">指定したURLにあるデータのMIDIファイル形式を取得します。URLはシステムが認識しているファイルタイプの有効なMIDIファイルデータを指している必要があります。</target>
        </trans-unit>
        <trans-unit id="423dd4fbb96b46d17c2873ed19327f259ad149e9" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the data in the specified input stream.</source>
          <target state="translated">指定された入力ストリームのデータの MIDI ファイル形式を取得します。</target>
        </trans-unit>
        <trans-unit id="cc6b502ad6faa22fbc33d8e5eceae6fba09ab077" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the data in the specified input stream. The stream must point to valid MIDI file data for a file type recognized by the system.</source>
          <target state="translated">指定された入力ストリームのデータのMIDIファイルフォーマットを取得します。ストリームは、システムが認識するファイルタイプの有効なMIDIファイルデータを指している必要があります。</target>
        </trans-unit>
        <trans-unit id="4ec0fe79fabd3c11572565bc3b89c3817616f8b6" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the input stream provided.</source>
          <target state="translated">提供された入力ストリームのMIDIファイル形式を取得します。</target>
        </trans-unit>
        <trans-unit id="3fef377b55f5d73fcb3cf88678ac50a2e3ef40f4" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the input stream provided. The stream must point to valid MIDI file data. In general, MIDI file readers may need to read some data from the stream before determining whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and, if not, reset the stream's read pointer to its original position. If the input stream does not support this, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">指定された入力ストリームのMIDIファイル形式を取得します。ストリームは有効なMIDIファイルデータを指している必要があります。一般に、MIDIファイルリーダーは、サポートするかどうかを判断する前に、ストリームからデータを読み取る必要がある場合があります。これらのパーサーは、ストリームをマークし、ストリームをサポートするかどうかを判断するのに十分なデータを読み取り、サポートしていない場合は、ストリームの読み取りポインターを元の位置にリセットできる必要があります。入力ストリームがこれをサポートしていない場合、このメソッドは &lt;code&gt;IOException&lt;/code&gt; で失敗することがあります。</target>
        </trans-unit>
        <trans-unit id="dcdfc22459e4e472cb8f76bd6d2635c854bae0f8" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the specified &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">指定した &lt;code&gt;File&lt;/code&gt; のMIDIファイル形式を取得します。</target>
        </trans-unit>
        <trans-unit id="8367a131e88ac4b66d7a1da0414f7222035a6945" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file format of the specified &lt;code&gt;File&lt;/code&gt;. The &lt;code&gt;File&lt;/code&gt; must point to valid MIDI file data for a file type recognized by the system.</source>
          <target state="translated">指定された &lt;code&gt;File&lt;/code&gt; のMIDIファイル形式を取得します。 &lt;code&gt;File&lt;/code&gt; システムが認識したファイル型に有効なMIDIファイルデータを示す必要があります。</target>
        </trans-unit>
        <trans-unit id="0e9c0935f8a1407a86c8ffbf28863c848cfdb0d9" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI file type.</source>
          <target state="translated">MIDIファイルの種類を取得します。</target>
        </trans-unit>
        <trans-unit id="621accf0e9130d6eee915a010dd071a6fe56e70a" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI message contained in the event.</source>
          <target state="translated">イベントに含まれる MIDI メッセージを取得します。</target>
        </trans-unit>
        <trans-unit id="50f183b76954dfe5f6b28eaae750ee52a32e3ec4" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI message data.</source>
          <target state="translated">MIDI メッセージデータを取得します。</target>
        </trans-unit>
        <trans-unit id="66a72abedfe464b96e307d3d5260b7f2d88de59a" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI message data. The first byte of the returned byte array is the status byte of the message. Any subsequent bytes up to the length of the message are data bytes. The byte array may have a length which is greater than that of the actual message; the total length of the message in bytes is reported by the &lt;a href=&quot;#getLength()&quot;&gt;&lt;code&gt;getLength()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">MIDIメッセージデータを取得します。返されるバイト配列の最初のバイトは、メッセージのステータスバイトです。メッセージの長さまでの後続のバイトはすべてデータバイトです。バイト配列の長さは、実際のメッセージの長さよりも長くなる場合があります。メッセージのバイト単位の全長は、&lt;a href=&quot;#getLength()&quot;&gt; &lt;code&gt;getLength()&lt;/code&gt; &lt;/a&gt;メソッドによって報告されます。</target>
        </trans-unit>
        <trans-unit id="d610dc5bc4155dfa5f8f38219b2bf306c3f23b91" translate="yes" xml:space="preserve">
          <source>Obtains the MIDI message data. The first byte of the returned byte array is the status byte of the message. Any subsequent bytes up to the length of the message are data bytes. The byte array may have a length which is greater than that of the actual message; the total length of the message in bytes is reported by the &lt;code&gt;&lt;a href=&quot;midimessage#getLength--&quot;&gt;&lt;code&gt;getLength()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">MIDIメッセージデータを取得します。返されるバイト配列の最初のバイトは、メッセージのステータスバイトです。メッセージの長さまでの後続のバイトはすべてデータバイトです。バイト配列の長さは、実際のメッセージよりも長い場合があります。メッセージの全長（バイト単位）は、 &lt;code&gt;&lt;a href=&quot;midimessage#getLength--&quot;&gt;&lt;code&gt;getLength()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドによって報告されます。</target>
        </trans-unit>
        <trans-unit id="4a571759f900e8720f384f972fd99f945dbb75cd" translate="yes" xml:space="preserve">
          <source>Obtains the access mode type for this VarHandle and a given access mode.</source>
          <target state="translated">この VarHandle のアクセスモードタイプと指定されたアクセスモードを取得します。</target>
        </trans-unit>
        <trans-unit id="38359d7b5536b885b41758a677aa7db3d6666458" translate="yes" xml:space="preserve">
          <source>Obtains the approximate maximum number of lines of the requested type that can be open simultaneously on the mixer.</source>
          <target state="translated">ミキサー上で同時に開くことができる、要求されたタイプのおおよその最大行数を取得します。</target>
        </trans-unit>
        <trans-unit id="80189b12b48b1a74aa12afe68097775ca4d3ce5c" translate="yes" xml:space="preserve">
          <source>Obtains the approximate maximum number of lines of the requested type that can be open simultaneously on the mixer. Certain types of mixers do not have a hard bound and may allow opening more lines. Since certain lines are a shared resource, a mixer may not be able to open the maximum number of lines if another process has opened lines of this mixer. The requested type is any line that matches the description in the provided &lt;code&gt;Line.Info&lt;/code&gt; object. For example, if the info object represents a speaker port, and the mixer supports exactly one speaker port, this method should return 1. If the info object represents a source data line and the mixer supports the use of 32 source data lines simultaneously, the return value should be 32. If there is no limit, this function returns &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;.</source>
          <target state="translated">ミキサーで同時に開くことができる、要求されたタイプのおおよその最大ライン数を取得します。特定のタイプのミキサーにはハードバウンドがなく、より多くのラインを開くことができます。特定のラインが共有リソースであるため、別のプロセスがこのミキサーのラインを開いている場合、ミキサーは最大数のラインを開くことができない場合があります。要求されたタイプは、提供された &lt;code&gt;Line.Info&lt;/code&gt; オブジェクトの説明と一致する任意の行です。たとえば、infoオブジェクトがスピーカーポートを表し、ミキサーが1つのスピーカーポートをサポートしている場合、このメソッドは1を返します。infoオブジェクトがソースデータラインを表し、ミキサーが32個のソースデータラインの使用を同時にサポートしている場合、戻り値は32である必要があります。制限がない場合、この関数は &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; を返します。。</target>
        </trans-unit>
        <trans-unit id="e585985b7d572e1468c9dc3d49c389be7c9f0636" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the &lt;code&gt;File&lt;/code&gt; provided.</source>
          <target state="translated">提供された &lt;code&gt;File&lt;/code&gt; オーディオファイル形式を取得します。</target>
        </trans-unit>
        <trans-unit id="b8f174d936c167faf8bf2ac4ea1471dadb9f647a" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the &lt;code&gt;File&lt;/code&gt; provided. The &lt;code&gt;File&lt;/code&gt; must point to valid audio file data.</source>
          <target state="translated">取得のオーディオファイル形式 &lt;code&gt;File&lt;/code&gt; 提供します。 &lt;code&gt;File&lt;/code&gt; 有効なオーディオファイルデータを示す必要があります。</target>
        </trans-unit>
        <trans-unit id="8d7edbaf6999fb9972a40ccbc0ce0100bd3e594a" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the &lt;code&gt;URL&lt;/code&gt; provided.</source>
          <target state="translated">指定された &lt;code&gt;URL&lt;/code&gt; のオーディオファイル形式を取得します。</target>
        </trans-unit>
        <trans-unit id="08c8c9bf7f3afe047ef7381a943ac9816d2085de" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the &lt;code&gt;URL&lt;/code&gt; provided. The &lt;code&gt;URL&lt;/code&gt; must point to valid audio file data.</source>
          <target state="translated">指定された &lt;code&gt;URL&lt;/code&gt; のオーディオファイル形式を取得します。 &lt;code&gt;URL&lt;/code&gt; は、有効なオーディオファイルデータを示す必要があります。</target>
        </trans-unit>
        <trans-unit id="03528fa61d9f89e9e17fad5c52f82d0832bbfd8c" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the URL provided. The URL must point to valid audio file data.</source>
          <target state="translated">指定された URL のオーディオファイル形式を取得します。URLは有効なオーディオファイルデータを指している必要があります。</target>
        </trans-unit>
        <trans-unit id="a92d22dc24e5c109f09ac7b0094007112ee76326" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the input stream provided.</source>
          <target state="translated">指定された入力ストリームの音声ファイル形式を取得します。</target>
        </trans-unit>
        <trans-unit id="ee84bec4575ad5f997f00464f11d01e575d34f50" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the input stream provided. The stream must point to valid audio file data. In general, audio file readers may need to read some data from the stream before determining whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and reset the stream's read pointer to its original position. If the input stream does not support this, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">提供された入力ストリームのオーディオファイル形式を取得します。ストリームは、有効なオーディオファイルデータを指している必要があります。一般に、オーディオファイルリーダーは、サポートされているかどうかを判断する前に、ストリームからデータを読み取る必要がある場合があります。これらのパーサーは、ストリームにマークを付け、ストリームをサポートするかどうかを判断するのに十分なデータを読み取り、ストリームの読み取りポインターを元の位置にリセットできる必要があります。入力ストリームがこれをサポートしていない場合、このメソッドは &lt;code&gt;IOException&lt;/code&gt; で失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="bc080b75208a3f48bf6102331df9ade12e067aa2" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the input stream provided. The stream must point to valid audio file data. In general, audio file readers may need to read some data from the stream before determining whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and, if not, reset the stream's read pointer to its original position. If the input stream does not support this, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">提供された入力ストリームのオーディオファイル形式を取得します。ストリームは、有効なオーディオファイルデータを指している必要があります。一般に、オーディオファイルリーダーは、ストリームをサポートしているかどうかを判断する前に、ストリームからデータを読み取る必要がある場合があります。これらのパーサーは、ストリームをマークし、ストリームをサポートするかどうかを判断するのに十分なデータを読み取り、サポートしていない場合は、ストリームの読み取りポインターを元の位置にリセットできる必要があります。入力ストリームがこれをサポートしていない場合、このメソッドは &lt;code&gt;IOException&lt;/code&gt; で失敗することがあります。</target>
        </trans-unit>
        <trans-unit id="7d39c4dc879cd77fd17653b42ff63ab18c77e11d" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the provided input stream.</source>
          <target state="translated">指定された入力ストリームのオーディオファイル形式を取得します。</target>
        </trans-unit>
        <trans-unit id="d4e9dd8a413bc19a02c9acd73866bdc8f567c90c" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the provided input stream. The stream must point to valid audio file data. The implementation of this method may require multiple parsers to examine the stream to determine whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and reset the stream's read pointer to its original position. If the input stream does not support these operations, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">指定された入力ストリームのオーディオファイル形式を取得します。ストリームは、有効なオーディオファイルデータを指している必要があります。このメソッドの実装では、複数のパーサーがストリームを調べて、それをサポートしているかどうかを判断する必要がある場合があります。これらのパーサーは、ストリームにマークを付け、ストリームをサポートするかどうかを判断するのに十分なデータを読み取り、ストリームの読み取りポインターを元の位置にリセットできる必要があります。入力ストリームがこれらの操作をサポートしていない場合、このメソッドは &lt;code&gt;IOException&lt;/code&gt; で失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="3a86610b6404fc975b9b2a4a1ebe9f193d66a05a" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the provided input stream. The stream must point to valid audio file data. The implementation of this method may require multiple parsers to examine the stream to determine whether they support it. These parsers must be able to mark the stream, read enough data to determine whether they support the stream, and, if not, reset the stream's read pointer to its original position. If the input stream does not support these operations, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">指定された入力ストリームのオーディオファイル形式を取得します。ストリームは、有効なオーディオファイルデータを指している必要があります。このメソッドの実装では、ストリームを調べてサポートするかどうかを判断するために複数のパーサーが必要になる場合があります。これらのパーサーは、ストリームをマークし、ストリームをサポートするかどうかを判断するのに十分なデータを読み取り、サポートしていない場合は、ストリームの読み取りポインターを元の位置にリセットできる必要があります。入力ストリームがこれらの操作をサポートしていない場合、このメソッドは &lt;code&gt;IOException&lt;/code&gt; で失敗することがあります。</target>
        </trans-unit>
        <trans-unit id="7242b76f7d2ef489d7b39d49d97f4e51dec618b7" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the specified &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;File&lt;/code&gt; のオーディオファイル形式を取得します。</target>
        </trans-unit>
        <trans-unit id="b09a03fde8dcae0786283a6957b7cc779331ee29" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the specified &lt;code&gt;File&lt;/code&gt;. The &lt;code&gt;File&lt;/code&gt; must point to valid audio file data.</source>
          <target state="translated">指定された &lt;code&gt;File&lt;/code&gt; のオーディオファイル形式を取得します。 &lt;code&gt;File&lt;/code&gt; 有効なオーディオファイルデータを示す必要があります。</target>
        </trans-unit>
        <trans-unit id="c35de6d3af8fa01e44cf1b63a195740ca3a98b3b" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the specified &lt;code&gt;URL&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;URL&lt;/code&gt; のオーディオファイル形式を取得します。</target>
        </trans-unit>
        <trans-unit id="112ae938f17a3d9d8f2d0a73236ac71757b8b0c6" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the specified &lt;code&gt;URL&lt;/code&gt;. The &lt;code&gt;URL&lt;/code&gt; must point to valid audio file data.</source>
          <target state="translated">指定された &lt;code&gt;URL&lt;/code&gt; のオーディオファイル形式を取得します。 &lt;code&gt;URL&lt;/code&gt; は、有効なオーディオファイルデータを示す必要があります。</target>
        </trans-unit>
        <trans-unit id="ab0557131863b519d585882624812102b56bf051" translate="yes" xml:space="preserve">
          <source>Obtains the audio file format of the specified URL. The URL must point to valid audio file data.</source>
          <target state="translated">指定した URL のオーディオファイル形式を取得します。URL は有効なオーディオファイルデータを指している必要があります。</target>
        </trans-unit>
        <trans-unit id="2293c8af0003ed7730ec015d13273f98db30852d" translate="yes" xml:space="preserve">
          <source>Obtains the audio file type, such as &lt;code&gt;WAVE&lt;/code&gt; or &lt;code&gt;AU&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WAVE&lt;/code&gt; や &lt;code&gt;AU&lt;/code&gt; などのオーディオファイルタイプを取得します。</target>
        </trans-unit>
        <trans-unit id="7a7c8855705b1d4247296961e8d80b63bffa5dbe" translate="yes" xml:space="preserve">
          <source>Obtains the audio format of the sound data in this audio input stream.</source>
          <target state="translated">音声入力ストリームの音声データの音声フォーマットを取得します。</target>
        </trans-unit>
        <trans-unit id="86ffa217f7aef8a3a28cb0298847e3f8b4ed940b" translate="yes" xml:space="preserve">
          <source>Obtains the audio line that is the source of this event.</source>
          <target state="translated">このイベントの元となった音声ラインを取得します。</target>
        </trans-unit>
        <trans-unit id="f7fdaede817b413f6721fca2f3660716c58a3981" translate="yes" xml:space="preserve">
          <source>Obtains the channel's keyboard pressure.</source>
          <target state="translated">チャンネルのキーボードの圧力を取得します。</target>
        </trans-unit>
        <trans-unit id="40fd35a866fc5ae0ff6bd957d1c1c7d5981dedfa" translate="yes" xml:space="preserve">
          <source>Obtains the channel's keyboard pressure. If the device does not support setting channel pressure, this method always returns 0. Calling &lt;code&gt;setChannelPressure&lt;/code&gt; will have no effect then.</source>
          <target state="translated">チャネルのキーボード圧力を取得します。デバイスがチャネル圧力の設定をサポートしていない場合、このメソッドは常に0を返します。その場合、 &lt;code&gt;setChannelPressure&lt;/code&gt; を呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="f109655c9667b6feff5f250e44a1c93ce7101531" translate="yes" xml:space="preserve">
          <source>Obtains the class of the line that this &lt;code&gt;Line.Info&lt;/code&gt; object describes.</source>
          <target state="translated">この &lt;code&gt;Line.Info&lt;/code&gt; オブジェクトが記述する行のクラスを取得します。</target>
        </trans-unit>
        <trans-unit id="a95a719d69b1f5bd85d6f861d096ec45e91060ef" translate="yes" xml:space="preserve">
          <source>Obtains the class of the line that this Line.Info object describes.</source>
          <target state="translated">このLine.Infoオブジェクトが記述する行のクラスを取得します。</target>
        </trans-unit>
        <trans-unit id="af77cbacb9037345f5d5f8b979da96586aea2ef7" translate="yes" xml:space="preserve">
          <source>Obtains the class used by this sample to represent its data.</source>
          <target state="translated">このサンプルがデータを表現するために使用するクラスを取得します。</target>
        </trans-unit>
        <trans-unit id="d8568ac81ecdfa3fc7b0ee5af0f96c78d459e18d" translate="yes" xml:space="preserve">
          <source>Obtains the class used by this sample to represent its data. The object returned by &lt;code&gt;getData&lt;/code&gt; will be of this class. If this &lt;code&gt;SoundbankResource&lt;/code&gt; object does not support direct access to its data, returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このサンプルがデータを表すために使用するクラスを取得します。 &lt;code&gt;getData&lt;/code&gt; によって返されるオブジェクトは、このクラスのものです。この &lt;code&gt;SoundbankResource&lt;/code&gt; オブジェクトがデータへの直接アクセスをサポートしていない場合は、 &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="90455cad157c4b119c34c9b945be091632e560bb" translate="yes" xml:space="preserve">
          <source>Obtains the common file name extension for this file type.</source>
          <target state="translated">このファイルタイプの共通ファイル名拡張子を取得します。</target>
        </trans-unit>
        <trans-unit id="7aad42c15f174dbf010548fb823ed563370590cb" translate="yes" xml:space="preserve">
          <source>Obtains the control's type.</source>
          <target state="translated">コントロールのタイプを取得します。</target>
        </trans-unit>
        <trans-unit id="7df36035dc28e27337cd625969600057fb951e74" translate="yes" xml:space="preserve">
          <source>Obtains the credentials delegated by the context initiator to the context acceptor.</source>
          <target state="translated">コンテキスト開始者からコンテキストアクセプタに委任された資格情報を取得します。</target>
        </trans-unit>
        <trans-unit id="8dfadb754a58be5052ba32e5aea173e77137f80c" translate="yes" xml:space="preserve">
          <source>Obtains the credentials delegated by the context initiator to the context acceptor. It should be called only on the context acceptor's side, and once the context is fully established. The caller can use the method &lt;a href=&quot;#getCredDelegState()&quot;&gt;&lt;code&gt;getCredDelegState&lt;/code&gt;&lt;/a&gt; to determine if there are any delegated credentials.</source>
          <target state="translated">コンテキストイニシエーターからコンテキストアクセプターに委任された資格情報を取得します。コンテキストアクセプター側でのみ、コンテキストが完全に確立されたら呼び出す必要があります。呼び出し元は、メソッド&lt;a href=&quot;#getCredDelegState()&quot;&gt; &lt;code&gt;getCredDelegState&lt;/code&gt; &lt;/a&gt;を使用して、委任された資格情報があるかどうかを判別できます。</target>
        </trans-unit>
        <trans-unit id="e1b96a911e2bdfac9912af61bf69b9ac4211f85f" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;HijrahDate&lt;/code&gt; of the Islamic Umm Al-Qura calendar from the specified clock.</source>
          <target state="translated">指定されたクロックからイスラムUmm Al- &lt;code&gt;HijrahDate&lt;/code&gt; の現在のHijrahDateを取得します。</target>
        </trans-unit>
        <trans-unit id="78bf9d52b687f4ebf2c29d2c7ab26ca5c9fe3c4a" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;HijrahDate&lt;/code&gt; of the Islamic Umm Al-Qura calendar in the default time-zone.</source>
          <target state="translated">デフォルトのタイムゾーンでのイスラムのUmm Al- &lt;code&gt;HijrahDate&lt;/code&gt; の現在のHijrahDateを取得します。</target>
        </trans-unit>
        <trans-unit id="76c693a2d48e7ba7f7f852b52161202e5b85c0c6" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;HijrahDate&lt;/code&gt; of the Islamic Umm Al-Qura calendar in the specified time-zone.</source>
          <target state="translated">指定されたタイムゾーンのイスラムUmm Al- &lt;code&gt;HijrahDate&lt;/code&gt; の現在のHijrahDateを取得します。</target>
        </trans-unit>
        <trans-unit id="3e41eb5d1002ae828fea820d14b3b57d379ec499" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;JapaneseDate&lt;/code&gt; from the specified clock.</source>
          <target state="translated">指定されたクロックから現在の &lt;code&gt;JapaneseDate&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="8855f6e6360df7e0301125152f3db92abae115e8" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;JapaneseDate&lt;/code&gt; from the system clock in the default time-zone.</source>
          <target state="translated">デフォルトのタイムゾーンのシステムクロックから現在の &lt;code&gt;JapaneseDate&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="5c0eaa4f33e050bda28aedefb785f8c677387db0" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;JapaneseDate&lt;/code&gt; from the system clock in the specified time-zone.</source>
          <target state="translated">指定されたタイムゾーンのシステムクロックから現在の &lt;code&gt;JapaneseDate&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="c1abd117542fe9b3854814db88ddc5efb27737a2" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;MinguoDate&lt;/code&gt; from the specified clock.</source>
          <target state="translated">指定されたクロックから現在の &lt;code&gt;MinguoDate&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="69915d33ab383de7792ed86f3db86022bf814716" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;MinguoDate&lt;/code&gt; from the system clock in the default time-zone.</source>
          <target state="translated">デフォルトのタイムゾーンのシステムクロックから現在の &lt;code&gt;MinguoDate&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="a3769c7be97b5f5961a3b06322519a89cc91b96b" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;MinguoDate&lt;/code&gt; from the system clock in the specified time-zone.</source>
          <target state="translated">指定されたタイムゾーンのシステムクロックから現在の &lt;code&gt;MinguoDate&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="44f334fee7d7b15601192061b21534c699708e78" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; from the specified clock.</source>
          <target state="translated">指定されたクロックから現在の &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="67756a4b52bb11661a50be18f5e956cb6386dfe9" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; from the system clock in the default time-zone.</source>
          <target state="translated">デフォルトのタイムゾーンのシステムクロックから現在の &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="17c9e32a688fd2943abea0422e6e2c2b66bb40d6" translate="yes" xml:space="preserve">
          <source>Obtains the current &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; from the system clock in the specified time-zone.</source>
          <target state="translated">指定されたタイムゾーンのシステムクロックから現在の &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="ab3be0d5c8fb66a5d56bffbbb0ed936472e9484b" translate="yes" xml:space="preserve">
          <source>Obtains the current ISO local date from the specified clock.</source>
          <target state="translated">指定した時計から現在の ISO ローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="8b5254d4f49135376bcf558f8374c5253e8428cf" translate="yes" xml:space="preserve">
          <source>Obtains the current ISO local date from the system clock in the default time-zone.</source>
          <target state="translated">デフォルトのタイムゾーンのシステムクロックから現在のISOローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="10ed5b0685938d5f0241c85a9490c11f9a3a4955" translate="yes" xml:space="preserve">
          <source>Obtains the current ISO local date from the system clock in the specified time-zone.</source>
          <target state="translated">指定されたタイムゾーンのシステムクロックから現在のISOローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="488d9ceb431e400c791e5f3bcf4a79291942a327" translate="yes" xml:space="preserve">
          <source>Obtains the current date from the specified clock.</source>
          <target state="translated">指定した時計から現在の日付を取得します。</target>
        </trans-unit>
        <trans-unit id="f6132be69b22df5d9e80f8312f0714643ff26727" translate="yes" xml:space="preserve">
          <source>Obtains the current date from the system clock in the default time-zone.</source>
          <target state="translated">デフォルトのタイムゾーンのシステムクロックから現在の日付を取得します。</target>
        </trans-unit>
        <trans-unit id="21a39824fb9f5e9e2d04dc9028fcf8b8d94c8b80" translate="yes" xml:space="preserve">
          <source>Obtains the current date from the system clock in the specified time-zone.</source>
          <target state="translated">指定したタイムゾーンのシステムクロックから現在の日付を取得します。</target>
        </trans-unit>
        <trans-unit id="a2ef2832a469e078db9e28504b1bb3da8780dd8c" translate="yes" xml:space="preserve">
          <source>Obtains the current date-time from the specified clock.</source>
          <target state="translated">指定した時計から現在の日付時刻を取得します。</target>
        </trans-unit>
        <trans-unit id="aab0ce9224992418781f087511e1d8e6c25ceaa1" translate="yes" xml:space="preserve">
          <source>Obtains the current date-time from the system clock in the default time-zone.</source>
          <target state="translated">デフォルトのタイムゾーンのシステムクロックから現在の日付時刻を取得します。</target>
        </trans-unit>
        <trans-unit id="297784e178ef897f46c14ea28efa14c74d95efc2" translate="yes" xml:space="preserve">
          <source>Obtains the current date-time from the system clock in the specified time-zone.</source>
          <target state="translated">指定されたタイムゾーンのシステムクロックから現在の日付時刻を取得します。</target>
        </trans-unit>
        <trans-unit id="83a355b3fa1f6a3620d0a264d9755c1ebf48e771" translate="yes" xml:space="preserve">
          <source>Obtains the current format (encoding, sample rate, number of channels, etc.) of the data line's audio data.</source>
          <target state="translated">データラインのオーディオデータの現在のフォーマット(エンコード、サンプルレート、チャンネル数など)を取得します。</target>
        </trans-unit>
        <trans-unit id="4c6e4c31a583504dcdc8b85f32a68170f7962abc" translate="yes" xml:space="preserve">
          <source>Obtains the current instant from the specified clock.</source>
          <target state="translated">指定した時計から現在の時刻を取得します。</target>
        </trans-unit>
        <trans-unit id="43bdb1fc125d77c3c602f03e36bc3cf355432cc8" translate="yes" xml:space="preserve">
          <source>Obtains the current instant from the system clock.</source>
          <target state="translated">システムクロックから現在の時刻を取得します。</target>
        </trans-unit>
        <trans-unit id="171af30ff51fbb67648ed675790bdbf3eb809349" translate="yes" xml:space="preserve">
          <source>Obtains the current local date in this chronology from the specified clock.</source>
          <target state="translated">指定された時計から、この年表の現在のローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="da4af5ae568b7c680cc65692d4ae930822a19df1" translate="yes" xml:space="preserve">
          <source>Obtains the current local date in this chronology from the system clock in the default time-zone.</source>
          <target state="translated">デフォルトのタイムゾーンのシステムクロックから、このクロノロジーの現在のローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="45c47ffdab0486c1a4dcc82b36aaca3c0b88fec2" translate="yes" xml:space="preserve">
          <source>Obtains the current local date in this chronology from the system clock in the specified time-zone.</source>
          <target state="translated">指定されたタイムゾーンのシステムクロックから、この年表の現在のローカル日付を取得します。</target>
        </trans-unit>
        <trans-unit id="53e2be5af6ad2803caa6d3657fa6f0d7a31714f1" translate="yes" xml:space="preserve">
          <source>Obtains the current master synchronization mode for this sequencer.</source>
          <target state="translated">このシーケンサの現在のマスター同期モードを取得します。</target>
        </trans-unit>
        <trans-unit id="e27ad7138ef1955255134d437e705d73a374805a" translate="yes" xml:space="preserve">
          <source>Obtains the current mono/poly mode.</source>
          <target state="translated">現在のモノ/ポリモードを取得します。</target>
        </trans-unit>
        <trans-unit id="d7ad34c5c110c10c30852a786043281b9d6c24bd" translate="yes" xml:space="preserve">
          <source>Obtains the current mono/poly mode. Synthesizers that do not allow changing mono/poly mode will always return the same value, regardless of calls to &lt;code&gt;setMono&lt;/code&gt;.</source>
          <target state="translated">現在のモノ/ポリモードを取得します。モノ/ポリモードの変更を許可しないシンセサイザは、 &lt;code&gt;setMono&lt;/code&gt; の呼び出しに関係なく、常に同じ値を返します。</target>
        </trans-unit>
        <trans-unit id="486a6a82b4b83d60bdf798234ae14024c6fe7fa4" translate="yes" xml:space="preserve">
          <source>Obtains the current month-day from the specified clock.</source>
          <target state="translated">指定した時計から現在の月日を取得します。</target>
        </trans-unit>
        <trans-unit id="88b7aa16527b925eb4e8f711e0dad7b9dd49052d" translate="yes" xml:space="preserve">
          <source>Obtains the current month-day from the system clock in the default time-zone.</source>
          <target state="translated">デフォルトのタイムゾーンのシステム時計から現在の月日を取得します。</target>
        </trans-unit>
        <trans-unit id="135c2c167c074d43bcd296c0c58cfc2bf9c9db62" translate="yes" xml:space="preserve">
          <source>Obtains the current month-day from the system clock in the specified time-zone.</source>
          <target state="translated">指定したタイムゾーンのシステム時計から現在の月日を取得します。</target>
        </trans-unit>
        <trans-unit id="5bab2e20ec013d9ecf04a062d03a56ffd903f148" translate="yes" xml:space="preserve">
          <source>Obtains the current mute state for a track.</source>
          <target state="translated">トラックの現在のミュート状態を取得します。</target>
        </trans-unit>
        <trans-unit id="70d9b84bfdd8a4ac983dff67358e4f8cb3c239d8" translate="yes" xml:space="preserve">
          <source>Obtains the current mute state for a track. The default mute state for all tracks which have not been muted is false. In any case where the specified track has not been muted, this method should return false. This applies if the sequencer does not support muting of tracks, and if the specified track index is not valid.</source>
          <target state="translated">トラックの現在のミュート状態を取得します。ミュートされていないすべてのトラックのデフォルトのミュート状態は false です。指定したトラックがミュートされていない場合、このメソッドは false を返します。これは、シーケンサがトラックのミュートをサポートしていない場合や、指定されたトラックインデックスが有効でない場合に適用されます。</target>
        </trans-unit>
        <trans-unit id="e3ede6a3f3d871347ac32cdc95a84b8f8e7bf91a" translate="yes" xml:space="preserve">
          <source>Obtains the current mute state for this channel.</source>
          <target state="translated">このチャンネルの現在のミュート状態を取得します。</target>
        </trans-unit>
        <trans-unit id="be9d506f2cb66aeefb283672b755ae5ba2f26b3a" translate="yes" xml:space="preserve">
          <source>Obtains the current mute state for this channel. If the underlying synthesizer does not support muting this channel, this method always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">このチャネルの現在のミュート状態を取得します。基になるシンセサイザがこのチャネルのミュートをサポートしていない場合、このメソッドは常に &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="cd83c9c43a99802192e03fd77ca7adf8e37e3225" translate="yes" xml:space="preserve">
          <source>Obtains the current omni mode.</source>
          <target state="translated">現在のオムニモードを取得します。</target>
        </trans-unit>
        <trans-unit id="61375067e9c196158b7ff0c061c13fbc2550ca9c" translate="yes" xml:space="preserve">
          <source>Obtains the current omni mode. Synthesizers that do not allow changing the omni mode will always return the same value, regardless of calls to &lt;code&gt;setOmni&lt;/code&gt;.</source>
          <target state="translated">現在のオムニモードを取得します。オムニモードの変更を許可しないシンセサイザは、 &lt;code&gt;setOmni&lt;/code&gt; の呼び出しに関係なく、常に同じ値を返します。</target>
        </trans-unit>
        <trans-unit id="9a5c44a696fe4b10006c1a4ff3e18c82fe0ff5e0" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the audio data, in microseconds.</source>
          <target state="translated">音声データの現在位置をマイクロ秒単位で取得します。</target>
        </trans-unit>
        <trans-unit id="1098cfd90e4d082843fc5695f1c7f4f4f904bafe" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the audio data, in microseconds. The microsecond position measures the time corresponding to the number of sample frames captured by, or rendered from, the line since it was opened. The level of precision is not guaranteed. For example, an implementation might calculate the microsecond position from the current frame position and the audio sample frame rate. The precision in microseconds would then be limited to the number of microseconds per sample frame.</source>
          <target state="translated">オーディオデータの現在位置をマイクロ秒単位で取得します。マイクロ秒の位置は、ラインがオープンされてから、そのラインによってキャプチャされた、またはラインからレンダリングされたサンプルフレームの数に対応する時間を測定します。精度のレベルは保証されていません。例えば、ある実装では、現在のフレーム位置とオーディオサンプルフレームレートからマイクロ秒位置を計算するかもしれません。そうすると、マイクロ秒単位の精度は、サンプルフレームあたりのマイクロ秒数に制限されることになる。</target>
        </trans-unit>
        <trans-unit id="15adb48ca8aaa8a9f679bd0ae4bcf2d8581cb6f6" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the audio data, in sample frames.</source>
          <target state="translated">オーディオデータの現在位置をサンプルフレームで取得します。</target>
        </trans-unit>
        <trans-unit id="b0a989c6d32ed5567daa0b704b2b6568685b43a5" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the audio data, in sample frames. The frame position measures the number of sample frames captured by, or rendered from, the line since it was opened.</source>
          <target state="translated">オーディオデータの現在位置をサンプルフレーム単位で取得します。フレーム位置は、ラインがオープンされてから、ラインによってキャプチャされたサンプルフレームの数、またはラインからレンダリングされたサンプルフレームの数を測定します。</target>
        </trans-unit>
        <trans-unit id="b02f96a543727353fc4a91c5d8791ffa2eef4990" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the audio data, in sample frames. The frame position measures the number of sample frames captured by, or rendered from, the line since it was opened. This return value will wrap around after 2^31 frames. It is recommended to use &lt;code&gt;getLongFramePosition&lt;/code&gt; instead.</source>
          <target state="translated">オーディオデータの現在の位置をサンプルフレームで取得します。フレーム位置は、ラインが開かれてからラインによってキャプチャされた、またはラインからレンダリングされたサンプルフレームの数を測定します。この戻り値は、2 ^ 31フレーム後にラップアラウンドします。代わりに &lt;code&gt;getLongFramePosition&lt;/code&gt; を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c04dc5cbec1a1e426605939ea5969417bfb502d8" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the sequence, expressed in MIDI ticks.</source>
          <target state="translated">シーケンスの現在位置を取得します。</target>
        </trans-unit>
        <trans-unit id="cbf3d3297152ce2afbffe3086e1a562424d7bc5b" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the sequence, expressed in MIDI ticks. (The duration of a tick in seconds is determined both by the tempo and by the timing resolution stored in the &lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">MIDIティックで表される、シーケンス内の現在の位置を取得します。（秒単位のティックの持続時間は、テンポと&lt;a href=&quot;sequence&quot;&gt; &lt;code&gt;Sequence&lt;/code&gt; &lt;/a&gt;保存されているタイミング解像度の両方によって決まります。）</target>
        </trans-unit>
        <trans-unit id="a35a5b40efcc43bd1ee9af5052a060c69f48ba7f" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the sequence, expressed in MIDI ticks. (The duration of a tick in seconds is determined both by the tempo and by the timing resolution stored in the &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">MIDIティックで表された、シーケンスの現在の位置を取得します。（秒単位のティックの持続時間は、テンポと &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;Sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; に格納されているタイミング解像度の両方によって決定されます。）</target>
        </trans-unit>
        <trans-unit id="2d7cdb5b336b10edcb46166fc53ec180648dd25f" translate="yes" xml:space="preserve">
          <source>Obtains the current position in the sequence, expressed in microseconds.</source>
          <target state="translated">シーケンスの現在位置をマイクロ秒単位で取得します。</target>
        </trans-unit>
        <trans-unit id="d06e159f5bc977ff9aadbe4d8c251327a8a6457b" translate="yes" xml:space="preserve">
          <source>Obtains the current program number for this channel.</source>
          <target state="translated">このチャンネルの現在の番組番号を取得します。</target>
        </trans-unit>
        <trans-unit id="80cd9b712513dee66baa6c616fd194146c25fc42" translate="yes" xml:space="preserve">
          <source>Obtains the current receiver to which this transmitter will deliver MIDI messages.</source>
          <target state="translated">このトランスミッターがMIDIメッセージを配信する現在のレシーバーを取得します。</target>
        </trans-unit>
        <trans-unit id="14f1f2b12005c9da865ddfc19d1d6b61f892a183" translate="yes" xml:space="preserve">
          <source>Obtains the current slave synchronization mode for this sequencer.</source>
          <target state="translated">このシーケンサの現在のスレーブ同期モードを取得します。</target>
        </trans-unit>
        <trans-unit id="e68006092c5ad8e0fcf212c19ce0c7093ac03550" translate="yes" xml:space="preserve">
          <source>Obtains the current solo state for a track.</source>
          <target state="translated">トラックの現在のソロ状態を取得します。</target>
        </trans-unit>
        <trans-unit id="549ae106a575905027c46178ff70d89b74d4ca9a" translate="yes" xml:space="preserve">
          <source>Obtains the current solo state for a track. The default mute state for all tracks which have not been solo'd is false. In any case where the specified track has not been solo'd, this method should return false. This applies if the sequencer does not support soloing of tracks, and if the specified track index is not valid.</source>
          <target state="translated">トラックの現在のソロ状態を取得します。ソロになっていないすべてのトラックのデフォルトのミュート状態は false です。指定されたトラックがソロされていない場合、このメソッドは false を返します。これは、シーケンサがトラックのソロをサポートしていない場合や、指定されたトラックインデックスが有効でない場合に適用されます。</target>
        </trans-unit>
        <trans-unit id="e69b49c24e34939f360fcbc1f729bd71a3e404a7" translate="yes" xml:space="preserve">
          <source>Obtains the current solo state for this channel.</source>
          <target state="translated">このチャンネルの現在のソロ状態を取得します。</target>
        </trans-unit>
        <trans-unit id="48a175775a8c8becb6c72f9e5a6f5911cb112ff3" translate="yes" xml:space="preserve">
          <source>Obtains the current solo state for this channel. If the underlying synthesizer does not support solo on this channel, this method always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">このチャネルの現在のソロ状態を取得します。基になるシンセサイザがこのチャネルでのソロをサポートしていない場合、このメソッドは常に &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="500fdaefdb34a8a03abefe35543f8636bf78c5af" translate="yes" xml:space="preserve">
          <source>Obtains the current status of the voices produced by this synthesizer.</source>
          <target state="translated">このシンセサイザーで生成された音色の現在の状態を取得します。</target>
        </trans-unit>
        <trans-unit id="e73f5743a8a99ab4c563bba88cdcc111a3604932" translate="yes" xml:space="preserve">
          <source>Obtains the current status of the voices produced by this synthesizer. If this class of &lt;code&gt;Synthesizer&lt;/code&gt; does not provide voice information, the returned array will always be of length 0. Otherwise, its length is always equal to the total number of voices, as returned by &lt;code&gt;getMaxPolyphony()&lt;/code&gt;. (See the &lt;code&gt;VoiceStatus&lt;/code&gt; class description for an explanation of synthesizer voices.)</source>
          <target state="translated">このシンセサイザによって生成されたボイスの現在のステータスを取得します。このクラスの &lt;code&gt;Synthesizer&lt;/code&gt; が音声情報を提供しない場合、返される配列は常に長さが0になります。それ以外の場合、その長さは常に &lt;code&gt;getMaxPolyphony()&lt;/code&gt; によって返される音声の総数と等しくなります。（シンセサイザーボイスの説明については、 &lt;code&gt;VoiceStatus&lt;/code&gt; クラスの説明を参照してください。）</target>
        </trans-unit>
        <trans-unit id="1103bbddd6d851f670c9fbbb769d54bc4f34c3de" translate="yes" xml:space="preserve">
          <source>Obtains the current tempo, expressed in beats per minute.</source>
          <target state="translated">現在のテンポを取得します。</target>
        </trans-unit>
        <trans-unit id="8350c4369dd025fdbdbf84dff10bf5b091e16d91" translate="yes" xml:space="preserve">
          <source>Obtains the current tempo, expressed in beats per minute. The actual tempo of playback is the product of the returned value and the tempo factor.</source>
          <target state="translated">現在のテンポを取得します。実際の再生テンポは、返された値とテンポ係数の積になります。</target>
        </trans-unit>
        <trans-unit id="3b71ef082885a372ebcdcf54f92e189bb917f528" translate="yes" xml:space="preserve">
          <source>Obtains the current tempo, expressed in microseconds per quarter note.</source>
          <target state="translated">現在のテンポを取得します。</target>
        </trans-unit>
        <trans-unit id="df45ec9deeff29c356876cab2dad7476087b2ac9" translate="yes" xml:space="preserve">
          <source>Obtains the current tempo, expressed in microseconds per quarter note. The actual tempo of playback is the product of the returned value and the tempo factor.</source>
          <target state="translated">現在のテンポを取得します。実際の再生テンポは、返された値とテンポ係数の積になります。</target>
        </trans-unit>
        <trans-unit id="3846926824960ca49910cc2e541647c069378dd1" translate="yes" xml:space="preserve">
          <source>Obtains the current time from the specified clock.</source>
          <target state="translated">指定した時計から現在時刻を取得します。</target>
        </trans-unit>
        <trans-unit id="1b1a87c8528813b61ce5d892d209b12088ab0d84" translate="yes" xml:space="preserve">
          <source>Obtains the current time from the system clock in the default time-zone.</source>
          <target state="translated">デフォルトのタイムゾーンのシステムクロックから現在の時刻を取得します。</target>
        </trans-unit>
        <trans-unit id="cb14438c07ddc179c1ef8ddf98aa40859b74aa37" translate="yes" xml:space="preserve">
          <source>Obtains the current time from the system clock in the specified time-zone.</source>
          <target state="translated">指定したタイムゾーンのシステムクロックから現在時刻を取得します。</target>
        </trans-unit>
        <trans-unit id="999c28905250b0e6674fed21668a0d691a301c2b" translate="yes" xml:space="preserve">
          <source>Obtains the current time-stamp of the device, in microseconds.</source>
          <target state="translated">デバイスの現在のタイムスタンプをマイクロ秒単位で取得します。</target>
        </trans-unit>
        <trans-unit id="399c8bd958eef647e720ce5358e53777088ea088" translate="yes" xml:space="preserve">
          <source>Obtains the current time-stamp of the device, in microseconds. If a device supports time-stamps, it should start counting at 0 when the device is opened and continue incrementing its time-stamp in microseconds until the device is closed. If it does not support time-stamps, it should always return -1.</source>
          <target state="translated">デバイスの現在のタイムスタンプをマイクロ秒単位で取得します。デバイスがタイムスタンプをサポートしている場合、デバイスがオープンしたときに 0 からカウントを開始し、デバイスがクローズするまでマイクロ秒単位でタイムスタンプをインクリメントし続けなければならない。タイムスタンプをサポートしていない場合は、常に-1を返す。</target>
        </trans-unit>
        <trans-unit id="269acf3f489836bad1865ce6baea78b8ebd7155b" translate="yes" xml:space="preserve">
          <source>Obtains the current transaction timeout value set for this XAResource instance.</source>
          <target state="translated">このXAResourceインスタンスに設定されている現在のトランザクションのタイムアウト値を取得します。</target>
        </trans-unit>
        <trans-unit id="d78b2f00ef8a81097f483a44e42a3ecea93751e1" translate="yes" xml:space="preserve">
          <source>Obtains the current transaction timeout value set for this XAResource instance. If &lt;code&gt;XAResource.setTransactionTimeout&lt;/code&gt; was not used prior to invoking this method, the return value is the default timeout set for the resource manager; otherwise, the value used in the previous &lt;code&gt;setTransactionTimeout&lt;/code&gt; call is returned.</source>
          <target state="translated">このXAResourceインスタンスに設定されている現在のトランザクションタイムアウト値を取得します。このメソッドを呼び出す前に &lt;code&gt;XAResource.setTransactionTimeout&lt;/code&gt; が使用されなかった場合、戻り値はリソースマネージャーに設定されたデフォルトのタイムアウトです。それ以外の場合は、前の &lt;code&gt;setTransactionTimeout&lt;/code&gt; 呼び出しで使用された値が返されます。</target>
        </trans-unit>
        <trans-unit id="03b665ca77ffb7f5f7ccea977f9e4855a4aad24b" translate="yes" xml:space="preserve">
          <source>Obtains the current value of the specified controller.</source>
          <target state="translated">指定されたコントローラの現在値を取得します。</target>
        </trans-unit>
        <trans-unit id="9ca8e106a508a99b02615d22558aae17c600318b" translate="yes" xml:space="preserve">
          <source>Obtains the current value of the specified controller. The return value is represented with 7 bits. For 14-bit controllers, the MSB and LSB controller value needs to be obtained separately. For example, the 14-bit value of the volume controller can be calculated by multiplying the value of controller 7 (0x07, channel volume MSB) with 128 and adding the value of controller 39 (0x27, channel volume LSB).</source>
          <target state="translated">指定されたコントローラの現在値を取得します。戻り値は 7 ビットで表現されます。14 ビットのコントローラの場合は、MSB と LSB のコントローラ値を別々に取得する必要がある。例えば、ボリュームコントローラの14ビット値は、コントローラ7の値(0x07、チャンネルボリュームMSB)に128を掛けて、コントローラ39の値(0x27、チャンネルボリュームLSB)を加算することで算出することができます。</target>
        </trans-unit>
        <trans-unit id="0b5e170791c8a914160859ac21511c06d0deb434" translate="yes" xml:space="preserve">
          <source>Obtains the current value of the specified controller. The return value is represented with 7 bits. For 14-bit controllers, the MSB and LSB controller value needs to be obtained separately. For example, the 14-bit value of the volume controller can be calculated by multiplying the value of controller 7 (0x07, channel volume MSB) with 128 and adding the value of controller 39 (0x27, channel volume LSB). If the device does not support setting a specific controller, this method returns 0 for that controller. Calling &lt;code&gt;controlChange&lt;/code&gt; will have no effect then.</source>
          <target state="translated">指定されたコントローラーの現在の値を取得します。戻り値は7ビットで表されます。 14ビットコントローラの場合、MSBおよびLSBコントローラの値を個別に取得する必要があります。たとえば、ボリュームコントローラーの14ビット値は、コントローラー7の値（0x07、チャネルボリュームMSB）に128を掛け、コントローラー39の値（0x27、チャネルボリュームLSB）を加算することで計算できます。デバイスが特定のコントローラーの設定をサポートしていない場合、このメソッドはそのコントローラーに対して0を返します。その場合、 &lt;code&gt;controlChange&lt;/code&gt; を呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="1047269da4087ee1b98ff899ae5b1511e2237808" translate="yes" xml:space="preserve">
          <source>Obtains the current volume level for the line.</source>
          <target state="translated">現在のラインの音量レベルを取得します。</target>
        </trans-unit>
        <trans-unit id="8cebf78555fc0be8c145ae7fb9453cfc6e021940" translate="yes" xml:space="preserve">
          <source>Obtains the current volume level for the line. This level is a measure of the signal's current amplitude, and should not be confused with the current setting of a gain control. The range is from 0.0 (silence) to 1.0 (maximum possible amplitude for the sound waveform). The units measure linear amplitude, not decibels.</source>
          <target state="translated">ラインの現在のボリュームレベルを取得します。このレベルは信号の現在の振幅を示すものであり、ゲインコントロールの現在の設定と混同しないようにしてください。範囲は 0.0(無音)から 1.0(サウンド波形の最大可能な振幅)までです。単位はデシベルではなく、線形の振幅を測定します。</target>
        </trans-unit>
        <trans-unit id="e210e6166302000fbbf4bf949de3e5338fee302f" translate="yes" xml:space="preserve">
          <source>Obtains the current year from the specified clock.</source>
          <target state="translated">指定した時計から現在の年を取得します。</target>
        </trans-unit>
        <trans-unit id="eccbbb4ca6fc761f042804ff5dc68f9c9f7b8663" translate="yes" xml:space="preserve">
          <source>Obtains the current year from the system clock in the default time-zone.</source>
          <target state="translated">デフォルトのタイムゾーンのシステムクロックから現在の年を取得します。</target>
        </trans-unit>
        <trans-unit id="4abdc6b07fdad0d26b201bbcbb13c7b142b3010e" translate="yes" xml:space="preserve">
          <source>Obtains the current year from the system clock in the specified time-zone.</source>
          <target state="translated">指定したタイムゾーンのシステム時計から現在の年を取得します。</target>
        </trans-unit>
        <trans-unit id="dab7a35340a71d871b24257e4db2d61197dd0786" translate="yes" xml:space="preserve">
          <source>Obtains the current year-month from the specified clock.</source>
          <target state="translated">指定した時計から現在の年月を取得します。</target>
        </trans-unit>
        <trans-unit id="a5ee1d6ec52c1add5ecfc1e40c2f6421c5e12af0" translate="yes" xml:space="preserve">
          <source>Obtains the current year-month from the system clock in the default time-zone.</source>
          <target state="translated">デフォルトのタイムゾーンのシステムクロックから現在の年月を取得します。</target>
        </trans-unit>
        <trans-unit id="a8e5483df25cdf51ef80bb2257dfc900a470fcfa" translate="yes" xml:space="preserve">
          <source>Obtains the current year-month from the system clock in the specified time-zone.</source>
          <target state="translated">指定された時間帯のシステム時計から現在の年月を取得します。</target>
        </trans-unit>
        <trans-unit id="3cf5627fbd98db6d20bfcd69d116b9d0e996b44f" translate="yes" xml:space="preserve">
          <source>Obtains the decay time, which is the amount of time over which the late reflections attenuate to effective zero.</source>
          <target state="translated">遅延反射が減衰して有効なゼロになるまでの時間である減衰時間を取得します。</target>
        </trans-unit>
        <trans-unit id="01ca1e75f8a1b4f3e85a22969cfbcd8dc499801a" translate="yes" xml:space="preserve">
          <source>Obtains the decay time, which is the amount of time over which the late reflections attenuate to effective zero. The effective zero value is implementation-dependent.</source>
          <target state="translated">減衰時間を取得します。これは、遅延反射が減衰して実効ゼロになるまでの時間です。実効ゼロの値は実装に依存します。</target>
        </trans-unit>
        <trans-unit id="c8e58e567f2e364053c3802bbd9b5262f651057e" translate="yes" xml:space="preserve">
          <source>Obtains the default &lt;code&gt;Sequencer&lt;/code&gt;, connected to a default device.</source>
          <target state="translated">デフォルトのデバイスに接続されたデフォルトの &lt;code&gt;Sequencer&lt;/code&gt; 取得します。</target>
        </trans-unit>
        <trans-unit id="d174f8b675017f776e822c3d661ced9d1dd6f430" translate="yes" xml:space="preserve">
          <source>Obtains the default &lt;code&gt;Sequencer&lt;/code&gt;, connected to a default device. The returned &lt;code&gt;Sequencer&lt;/code&gt; instance is connected to the default &lt;code&gt;Synthesizer&lt;/code&gt;, as returned by &lt;a href=&quot;#getSynthesizer()&quot;&gt;&lt;code&gt;getSynthesizer()&lt;/code&gt;&lt;/a&gt;. If there is no &lt;code&gt;Synthesizer&lt;/code&gt; available, or the default &lt;code&gt;Synthesizer&lt;/code&gt; cannot be opened, the &lt;code&gt;sequencer&lt;/code&gt; is connected to the default &lt;code&gt;Receiver&lt;/code&gt;, as returned by &lt;a href=&quot;#getReceiver()&quot;&gt;&lt;code&gt;getReceiver()&lt;/code&gt;&lt;/a&gt;. The connection is made by retrieving a &lt;code&gt;Transmitter&lt;/code&gt; instance from the &lt;code&gt;Sequencer&lt;/code&gt; and setting its &lt;code&gt;Receiver&lt;/code&gt;. Closing and re-opening the sequencer will restore the connection to the default device.</source>
          <target state="translated">デフォルトのデバイスに接続されたデフォルトの &lt;code&gt;Sequencer&lt;/code&gt; 取得します。返される &lt;code&gt;Sequencer&lt;/code&gt; インスタンスは、&lt;a href=&quot;#getSynthesizer()&quot;&gt; &lt;code&gt;getSynthesizer()&lt;/code&gt; &lt;/a&gt;によって返されるように、デフォルトの &lt;code&gt;Synthesizer&lt;/code&gt; に接続されます。使用可能な &lt;code&gt;Synthesizer&lt;/code&gt; がない場合、またはデフォルトの &lt;code&gt;Synthesizer&lt;/code&gt; を開くことができない場合、&lt;a href=&quot;#getReceiver()&quot;&gt; &lt;code&gt;getReceiver()&lt;/code&gt; &lt;/a&gt;によって返されるように、 &lt;code&gt;sequencer&lt;/code&gt; はデフォルトの &lt;code&gt;Receiver&lt;/code&gt; 接続されます。接続は、 &lt;code&gt;Sequencer&lt;/code&gt; から &lt;code&gt;Transmitter&lt;/code&gt; インスタンスを取得し、その &lt;code&gt;Receiver&lt;/code&gt; を設定することによって行われます。シーケンサーを閉じて再度開くと、デフォルトのデバイスへの接続が復元されます。</target>
        </trans-unit>
        <trans-unit id="d2407b137a443cbe57bf1ec586e8cff94de27973" translate="yes" xml:space="preserve">
          <source>Obtains the default &lt;code&gt;Sequencer&lt;/code&gt;, connected to a default device. The returned &lt;code&gt;Sequencer&lt;/code&gt; instance is connected to the default &lt;code&gt;Synthesizer&lt;/code&gt;, as returned by &lt;a href=&quot;midisystem#getSynthesizer--&quot;&gt;&lt;code&gt;getSynthesizer()&lt;/code&gt;&lt;/a&gt;. If there is no &lt;code&gt;Synthesizer&lt;/code&gt; available, or the default &lt;code&gt;Synthesizer&lt;/code&gt; cannot be opened, the &lt;code&gt;sequencer&lt;/code&gt; is connected to the default &lt;code&gt;Receiver&lt;/code&gt;, as returned by &lt;a href=&quot;midisystem#getReceiver--&quot;&gt;&lt;code&gt;getReceiver()&lt;/code&gt;&lt;/a&gt;. The connection is made by retrieving a &lt;code&gt;Transmitter&lt;/code&gt; instance from the &lt;code&gt;Sequencer&lt;/code&gt; and setting its &lt;code&gt;Receiver&lt;/code&gt;. Closing and re-opening the sequencer will restore the connection to the default device.</source>
          <target state="translated">デフォルトのデバイスに接続されているデフォルトの &lt;code&gt;Sequencer&lt;/code&gt; を取得します。返される &lt;code&gt;Sequencer&lt;/code&gt; インスタンスは、&lt;a href=&quot;midisystem#getSynthesizer--&quot;&gt; &lt;code&gt;getSynthesizer()&lt;/code&gt; &lt;/a&gt;によって返されるように、デフォルトの &lt;code&gt;Synthesizer&lt;/code&gt; に接続されています。利用可能な &lt;code&gt;Synthesizer&lt;/code&gt; がない場合、またはデフォルトの &lt;code&gt;Synthesizer&lt;/code&gt; を開くことができない場合、 &lt;code&gt;sequencer&lt;/code&gt; は&lt;a href=&quot;midisystem#getReceiver--&quot;&gt; &lt;code&gt;getReceiver()&lt;/code&gt; &lt;/a&gt;によって返されるように、デフォルトの &lt;code&gt;Receiver&lt;/code&gt; に接続されます。接続は、 &lt;code&gt;Sequencer&lt;/code&gt; から &lt;code&gt;Transmitter&lt;/code&gt; インスタンスを取得し、その &lt;code&gt;Receiver&lt;/code&gt; を設定することによって行われます。シーケンサーを閉じて再度開くと、デフォルトのデバイスへの接続が復元されます。</target>
        </trans-unit>
        <trans-unit id="87e6bf759b7a21c9cc03d614e4a49dd0f19d1dad" translate="yes" xml:space="preserve">
          <source>Obtains the default &lt;code&gt;Sequencer&lt;/code&gt;, optionally connected to a default device.</source>
          <target state="translated">オプションでデフォルトのデバイスに接続されているデフォルトの &lt;code&gt;Sequencer&lt;/code&gt; を取得します。</target>
        </trans-unit>
        <trans-unit id="b3eb5ba1c2cf2f630c479baa784ef4d8927426ec" translate="yes" xml:space="preserve">
          <source>Obtains the default KeyManagerFactory algorithm name.</source>
          <target state="translated">KeyManagerFactory のデフォルトのアルゴリズム名を取得します。</target>
        </trans-unit>
        <trans-unit id="87bd032bf5bd7b04dc7b56393befae448a12e718" translate="yes" xml:space="preserve">
          <source>Obtains the default TrustManagerFactory algorithm name.</source>
          <target state="translated">デフォルトのTrustManagerFactoryアルゴリズム名を取得します。</target>
        </trans-unit>
        <trans-unit id="42ed01df4b1d3bb04c9b6e7bc200ac83162bdb79" translate="yes" xml:space="preserve">
          <source>Obtains the default soundbank for the synthesizer, if one exists.</source>
          <target state="translated">シンセサイザーのデフォルトのサウンドバンクが存在する場合、それを取得します。</target>
        </trans-unit>
        <trans-unit id="83329e21c8f5c4b6fa8e63753fcd01e91b12462e" translate="yes" xml:space="preserve">
          <source>Obtains the default soundbank for the synthesizer, if one exists. (Some synthesizers provide a default or built-in soundbank.) If a synthesizer doesn't have a default soundbank, instruments must be loaded explicitly from an external soundbank.</source>
          <target state="translated">シンセサイザーのデフォルトのサウンドバンクがあれば、それを取得します。シンセサイザーにデフォルトのサウンドバンクがない場合は、外部のサウンドバンクから明示的にインストゥルメントをロードする必要があります。</target>
        </trans-unit>
        <trans-unit id="50a0dc770fb0c5bc44a8d9f42ab0e241826ce7ef" translate="yes" xml:space="preserve">
          <source>Obtains the default synthesizer.</source>
          <target state="translated">デフォルトのシンセサイザーを取得します。</target>
        </trans-unit>
        <trans-unit id="ebf94b55c71efdc3b853599fd997e7a8609c206c" translate="yes" xml:space="preserve">
          <source>Obtains the description of the device.</source>
          <target state="translated">デバイスの説明を取得します。</target>
        </trans-unit>
        <trans-unit id="5f826cf61b9e60ff8f81d650cb10624d953dce60" translate="yes" xml:space="preserve">
          <source>Obtains the description of the mixer.</source>
          <target state="translated">ミキサーの説明を取得します。</target>
        </trans-unit>
        <trans-unit id="e424e2adfef4bd1cd8a228a69b871f0d2029bb47" translate="yes" xml:space="preserve">
          <source>Obtains the duration of this sequence, expressed in MIDI ticks.</source>
          <target state="translated">このシーケンスの持続時間を取得します。</target>
        </trans-unit>
        <trans-unit id="42ba22f4c149dd2d5797548ecf5da60515eeba00" translate="yes" xml:space="preserve">
          <source>Obtains the duration of this sequence, expressed in microseconds.</source>
          <target state="translated">このシーケンスの持続時間をマイクロ秒で取得します。</target>
        </trans-unit>
        <trans-unit id="f519e912b2553a16ba4b07f943532e9ced4a24ed" translate="yes" xml:space="preserve">
          <source>Obtains the encodings that the system can obtain from an audio input stream with the specified encoding using the set of installed format converters.</source>
          <target state="translated">インストールされているフォーマットコンバータのセットを使用して、指定されたエンコーディングを持つオーディオ入力ストリームからシステムが取得できるエンコーディングを取得します。</target>
        </trans-unit>
        <trans-unit id="2d426c9ec900d8175eded36e36d014478d27627f" translate="yes" xml:space="preserve">
          <source>Obtains the encodings that the system can obtain from an audio input stream with the specified format using the set of installed format converters.</source>
          <target state="translated">インストールされているフォーマットコンバータのセットを使用して、指定されたフォーマットの音声入力ストリームからシステムが取得できるエンコーディングを取得します。</target>
        </trans-unit>
        <trans-unit id="feabed2f93d9d650ad53cd6a68dad72c8d5e0e60" translate="yes" xml:space="preserve">
          <source>Obtains the end position of the loop, in MIDI ticks.</source>
          <target state="translated">ループの終了位置を MIDI ティックで取得します。</target>
        </trans-unit>
        <trans-unit id="7ebda0545c4ef87d53d6862245c8d0c4b742b40f" translate="yes" xml:space="preserve">
          <source>Obtains the event at the specified index.</source>
          <target state="translated">指定されたインデックスのイベントを取得します。</target>
        </trans-unit>
        <trans-unit id="26f37b99e7bea1218177e589221bf3eb19cce439" translate="yes" xml:space="preserve">
          <source>Obtains the event's type.</source>
          <target state="translated">イベントの種類を取得します。</target>
        </trans-unit>
        <trans-unit id="54a1bc8688bb3f55a9fa49b2dcaac72880750e33" translate="yes" xml:space="preserve">
          <source>Obtains the file types for which file writing support is provided by the system.</source>
          <target state="translated">システムが提供するファイル書き込み対応のファイルタイプを取得します。</target>
        </trans-unit>
        <trans-unit id="e8a039e5ebfe19f945f67cf357a03db1589b1b75" translate="yes" xml:space="preserve">
          <source>Obtains the file types for which file writing support is provided by this audio file writer.</source>
          <target state="translated">このオーディオファイルライターがファイル書き込みサポートを提供しているファイルの種類を取得します。</target>
        </trans-unit>
        <trans-unit id="3cd226d3bc3599eb7bab13e1191e9a8e973d8305" translate="yes" xml:space="preserve">
          <source>Obtains the file types that the system can write from the audio input stream specified.</source>
          <target state="translated">指定した音声入力ストリームからシステムが書き込み可能なファイルタイプを取得します。</target>
        </trans-unit>
        <trans-unit id="bc63762a1d26c2e63b8c0c8bb77b7e1df109cd78" translate="yes" xml:space="preserve">
          <source>Obtains the file types that this audio file writer can write from the audio input stream specified.</source>
          <target state="translated">指定した音声入力ストリームから、このオーディオファイルライタが書き込み可能なファイルタイプを取得します。</target>
        </trans-unit>
        <trans-unit id="01d6475cb4949a339cdfa7620ddfbfaf9b060b9a" translate="yes" xml:space="preserve">
          <source>Obtains the file types that this file writer can write from the sequence specified.</source>
          <target state="translated">指定したシーケンスから、このファイルライタが書き込み可能なファイルの種類を取得します。</target>
        </trans-unit>
        <trans-unit id="621434a674b58fdadd9d600ec74140101c46102b" translate="yes" xml:space="preserve">
          <source>Obtains the first data byte in the message.</source>
          <target state="translated">メッセージの最初のデータバイトを取得します。</target>
        </trans-unit>
        <trans-unit id="1b7bbd6154ce63d38df6e780b5085deb9b8c754c" translate="yes" xml:space="preserve">
          <source>Obtains the format of the audio data contained in the audio file.</source>
          <target state="translated">音声ファイルに含まれる音声データのフォーマットを取得します。</target>
        </trans-unit>
        <trans-unit id="62e21b8d8ab670e8f9d936d98c5cdbaf2d417246" translate="yes" xml:space="preserve">
          <source>Obtains the formats that have a particular encoding and that the system can obtain from a stream of the specified format using the set of installed format converters.</source>
          <target state="translated">特定のエンコーディングを持ち、インストールされているフォーマットコンバータのセットを使用して、指定されたフォーマットのストリームからシステムが取得できるフォーマットを取得します。</target>
        </trans-unit>
        <trans-unit id="6bb4e650a5e63f48afd41467fb4c6367d8fffa0c" translate="yes" xml:space="preserve">
          <source>Obtains the frame rate in frames per second.</source>
          <target state="translated">フレームレートを秒単位で取得します。</target>
        </trans-unit>
        <trans-unit id="6615f1b1b5bdd4b158feb7b03e464feab5a45ef5" translate="yes" xml:space="preserve">
          <source>Obtains the frame rate in frames per second. When this &lt;code&gt;AudioFormat&lt;/code&gt; is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats()&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a frame rate of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any frame rate is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the frame rate is not defined for this audio format.</source>
          <target state="translated">1秒あたりのフレーム数でフレームレートを取得します。この &lt;code&gt;AudioFormat&lt;/code&gt; がクエリ（例：&lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; &lt;/a&gt;）または機能（例：&lt;a href=&quot;dataline.info#getFormats()&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; &lt;/a&gt;）に使用される場合、 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; のフレームレートは、任意のフレームレートが許容可能であることを意味します。このオーディオ形式でフレームレートが定義されていない場合も、 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="1bc8561628ecdd664c6ccf019d4196a07747de22" translate="yes" xml:space="preserve">
          <source>Obtains the frame rate in frames per second. When this AudioFormat is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats--&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a frame rate of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any frame rate is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the frame rate is not defined for this audio format.</source>
          <target state="translated">1秒あたりのフレーム数でフレームレートを取得します。このAudioFormatがクエリ（&lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; など&lt;/a&gt;）または機能（&lt;a href=&quot;dataline.info#getFormats--&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; など&lt;/a&gt;）に使用される場合、 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; のフレームレートは、任意のフレームレートが許容されることを意味します。 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; は、このオーディオ形式にフレームレートが定義されていない場合にも返されます。</target>
        </trans-unit>
        <trans-unit id="df62a2cf5c6943f1f0ae13d54e2041d245c74c45" translate="yes" xml:space="preserve">
          <source>Obtains the frame size in bytes.</source>
          <target state="translated">フレームサイズをバイト単位で取得します。</target>
        </trans-unit>
        <trans-unit id="2e369a0f46de19963f12c9415048f93c5958b2ce" translate="yes" xml:space="preserve">
          <source>Obtains the frame size in bytes. When this &lt;code&gt;AudioFormat&lt;/code&gt; is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats()&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a frame size of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any frame size is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the frame size is not defined for this audio format.</source>
          <target state="translated">フレームサイズをバイト単位で取得します。この &lt;code&gt;AudioFormat&lt;/code&gt; がクエリ（例：&lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; &lt;/a&gt;）または機能（例：&lt;a href=&quot;dataline.info#getFormats()&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; &lt;/a&gt;）に使用される場合、 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; のフレームサイズは、任意のフレームサイズが許容可能であることを意味します。このオーディオ形式でフレームサイズが定義されていない場合も、 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="d39e05613a5bd2ab1877094767e00a947294da50" translate="yes" xml:space="preserve">
          <source>Obtains the frame size in bytes. When this AudioFormat is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats--&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a frame size of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any frame size is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the frame size is not defined for this audio format.</source>
          <target state="translated">フレームサイズをバイト単位で取得します。このAudioFormatがクエリ（&lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; など&lt;/a&gt;）または機能（&lt;a href=&quot;dataline.info#getFormats--&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; など&lt;/a&gt;）に使用される場合、フレームサイズ &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; は、任意のフレームサイズが許容されることを意味します。 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; は、フレームサイズがこのオーディオ形式に対して定義されていない場合にも返されます。</target>
        </trans-unit>
        <trans-unit id="4f09e6b503f7e80fb80ec64034e3fa656c9acf41" translate="yes" xml:space="preserve">
          <source>Obtains the key as a localized string.</source>
          <target state="translated">地域化された文字列としてキーを取得します。</target>
        </trans-unit>
        <trans-unit id="7bb8f6a066349b980b07cee211334062fdc99ee0" translate="yes" xml:space="preserve">
          <source>Obtains the key as a localized string. If a localized string cannot be found for the key, the locale independent key stored in the role will be returned.</source>
          <target state="translated">鍵をローカライズされた文字列として取得します。地域化された文字列が見つからない場合は、ロールに格納されているロケールに依存しないキーを返します。</target>
        </trans-unit>
        <trans-unit id="d9123fffc9e4955a79a467b9a9d0b79973b426f0" translate="yes" xml:space="preserve">
          <source>Obtains the key as a localized string. If a localized string cannot be found for the key, the locale independent key stored in the role will be returned. This method is intended to be used only by subclasses so that they can specify their own resource bundles which contain localized strings for their keys.</source>
          <target state="translated">鍵をローカライズされた文字列として取得します。鍵のローカライズ文字列が見つからない場合は、ロールに格納されているロケールに依存しない鍵が返されます。このメソッドは、サブクラスのみが使用することを想定しており、 鍵にローカライズされた文字列を含むリソースバンドルを自分で指定することができます。</target>
        </trans-unit>
        <trans-unit id="4b1f742565383fa614ce728a2b9c4af8f6e3382e" translate="yes" xml:space="preserve">
          <source>Obtains the label for the maximum value, such as &quot;Right&quot; or &quot;Full&quot;.</source>
          <target state="translated">右」や「フル」などの最大値のラベルを取得します。</target>
        </trans-unit>
        <trans-unit id="cd548c616eb0fa9761310bd58310662470928b1a" translate="yes" xml:space="preserve">
          <source>Obtains the label for the maximum value, such as &quot;Right&quot; or &quot;Full.&quot;</source>
          <target state="translated">最大値のラベルを取得します。</target>
        </trans-unit>
        <trans-unit id="524aa0c7743b912742cb671cbea6657572339737" translate="yes" xml:space="preserve">
          <source>Obtains the label for the mid-point value, such as &quot;Center&quot; or &quot;Default&quot;.</source>
          <target state="translated">中点値のラベルを取得します。</target>
        </trans-unit>
        <trans-unit id="7db52036a3d1f266da251670a08cf5f414a193aa" translate="yes" xml:space="preserve">
          <source>Obtains the label for the mid-point value, such as &quot;Center&quot; or &quot;Default.&quot;</source>
          <target state="translated">中点値のラベルを取得します。</target>
        </trans-unit>
        <trans-unit id="38803844b87d3afe261d0e80a73c77bbecb62c23" translate="yes" xml:space="preserve">
          <source>Obtains the label for the minimum value, such as &quot;Left&quot; or &quot;Off&quot;.</source>
          <target state="translated">左」や「オフ」などの最小値のラベルを取得します。</target>
        </trans-unit>
        <trans-unit id="2ed2dfb837394d5df09fc18880700fa5cf1eae1a" translate="yes" xml:space="preserve">
          <source>Obtains the label for the minimum value, such as &quot;Left&quot; or &quot;Off.&quot;</source>
          <target state="translated">最小値 &quot;Left &quot;や &quot;Off &quot;などのラベルを取得します。</target>
        </trans-unit>
        <trans-unit id="d897abe722b74afed1e60e8553674563980676e9" translate="yes" xml:space="preserve">
          <source>Obtains the label for the specified state.</source>
          <target state="translated">指定した状態のラベルを取得します。</target>
        </trans-unit>
        <trans-unit id="ba661a270c76dc50a1ca404b4c0c8ea4c0f35af0" translate="yes" xml:space="preserve">
          <source>Obtains the label for the units in which the control's values are expressed, such as &quot;dB&quot; or &quot;frames per second.&quot;</source>
          <target state="translated">コントロールの値を表す単位(&quot;dB &quot;や &quot;frames per second &quot;など)のラベルを取得します。</target>
        </trans-unit>
        <trans-unit id="10eb6c67cdbf7b45273e0ac45ad49b62c926eb05" translate="yes" xml:space="preserve">
          <source>Obtains the length of the MIDI file, expressed in 8-bit bytes.</source>
          <target state="translated">MIDI ファイルの長さを 8 ビットバイトで取得します。</target>
        </trans-unit>
        <trans-unit id="6a1e10540b747447164915e399fdb060d75a4be8" translate="yes" xml:space="preserve">
          <source>Obtains the length of the MIDI file, expressed in microseconds.</source>
          <target state="translated">MIDIファイルの長さをマイクロ秒単位で取得します。</target>
        </trans-unit>
        <trans-unit id="48bfb743d55e8902a858f6b2af89e3cb596f0a17" translate="yes" xml:space="preserve">
          <source>Obtains the length of the audio data contained in the file, expressed in sample frames.</source>
          <target state="translated">ファイルに含まれるオーディオデータの長さをサンプルフレーム単位で取得します。</target>
        </trans-unit>
        <trans-unit id="79ebbd3895a04ec7f1f36587e282d57b36080e60" translate="yes" xml:space="preserve">
          <source>Obtains the length of the current sequence, expressed in MIDI ticks, or 0 if no sequence is set.</source>
          <target state="translated">シーケンスが設定されていない場合は 0、現在のシーケンスの長さを取得します。</target>
        </trans-unit>
        <trans-unit id="6725290cf79cd3fc0b18a015aee62929126b12fd" translate="yes" xml:space="preserve">
          <source>Obtains the length of the current sequence, expressed in microseconds, or 0 if no sequence is set.</source>
          <target state="translated">現在のシーケンスの長さをマイクロ秒単位で取得します。</target>
        </trans-unit>
        <trans-unit id="e71e1fb5e0aed78981b72db121778a3d7b30532b" translate="yes" xml:space="preserve">
          <source>Obtains the length of the stream, expressed in sample frames rather than bytes.</source>
          <target state="translated">ストリームの長さを取得します。</target>
        </trans-unit>
        <trans-unit id="b4b4694d63ec361a56c4abd35937333d51d14325" translate="yes" xml:space="preserve">
          <source>Obtains the length of the track, expressed in MIDI ticks.</source>
          <target state="translated">トラックの長さを取得します。</target>
        </trans-unit>
        <trans-unit id="7ddc9be39ab4a1e3d8861861f9d8829d1b313086" translate="yes" xml:space="preserve">
          <source>Obtains the length of the track, expressed in MIDI ticks. (The duration of a tick in seconds is determined by the timing resolution of the &lt;code&gt;Sequence&lt;/code&gt; containing this track, and also by the tempo of the music as set by the sequencer.)</source>
          <target state="translated">MIDIティックで表されるトラックの長さを取得します。（秒単位のティックの持続時間は、このトラックを含む &lt;code&gt;Sequence&lt;/code&gt; タイミング解像度、およびシーケンサーによって設定された音楽のテンポによっても決まります。）</target>
        </trans-unit>
        <trans-unit id="8f2d99a712935bbc5d35140f12807d7b7579756d" translate="yes" xml:space="preserve">
          <source>Obtains the maximum buffer size supported by the data line.</source>
          <target state="translated">データ行がサポートする最大バッファサイズを取得します。</target>
        </trans-unit>
        <trans-unit id="2eabfbc6e5d7d9caa40832c9c02221580d6917fe" translate="yes" xml:space="preserve">
          <source>Obtains the maximum number of MIDI IN connections available on this MIDI device for receiving MIDI data.</source>
          <target state="translated">MIDIデータを受信するために、このMIDIデバイスで利用可能なMIDI INの最大数を取得します。</target>
        </trans-unit>
        <trans-unit id="2f481af359a630b0ed996b69cc9b32c894a67afa" translate="yes" xml:space="preserve">
          <source>Obtains the maximum number of MIDI OUT connections available on this MIDI device for transmitting MIDI data.</source>
          <target state="translated">このMIDI機器がMIDIデータを送信するために使用できるMIDI OUTの最大接続数を取得します。</target>
        </trans-unit>
        <trans-unit id="8946def4d489c376321b5bca5ab605a29ad9965b" translate="yes" xml:space="preserve">
          <source>Obtains the maximum number of bytes of data that will fit in the data line's internal buffer.</source>
          <target state="translated">データラインの内部バッファに収まるデータの最大バイト数を取得します。</target>
        </trans-unit>
        <trans-unit id="1ebdadee5ba0e331d4a7d8152a5eff7288a9b23f" translate="yes" xml:space="preserve">
          <source>Obtains the maximum number of bytes of data that will fit in the data line's internal buffer. For a source data line, this is the size of the buffer to which data can be written. For a target data line, it is the size of the buffer from which data can be read. Note that the units used are bytes, but will always correspond to an integral number of sample frames of audio data.</source>
          <target state="translated">データ行の内部バッファに収まるデータの最大バイト数を取得します。ソース・データ行の場合、データを書き込むことができるバッファのサイズです。ターゲットデータ行の場合は、データを読み込めるバッファのサイズです。使用される単位はバイトですが、常にオーディオデータのサンプルフレームの積分数に対応することに注意してください。</target>
        </trans-unit>
        <trans-unit id="28d1b2f9c7de45ac316f0f686ec52dcc5fc471f5" translate="yes" xml:space="preserve">
          <source>Obtains the maximum number of notes that this synthesizer can sound simultaneously.</source>
          <target state="translated">このシンセサイザーが同時に鳴らすことができる最大の音数を取得します。</target>
        </trans-unit>
        <trans-unit id="17bd9cdebd97a4d3d18963a29e7a77abf22e1c0f" translate="yes" xml:space="preserve">
          <source>Obtains the maximum value permitted.</source>
          <target state="translated">許可された最大値を取得します。</target>
        </trans-unit>
        <trans-unit id="0b7692c72c8291cb7a508d2c98803d9b6adc015b" translate="yes" xml:space="preserve">
          <source>Obtains the media duration in microseconds</source>
          <target state="translated">メディアの持続時間をマイクロ秒単位で取得します。</target>
        </trans-unit>
        <trans-unit id="526312c2a0e141e19c562b0f77145c6ff9a93556" translate="yes" xml:space="preserve">
          <source>Obtains the media duration in microseconds.</source>
          <target state="translated">メディアの持続時間をマイクロ秒単位で取得します。</target>
        </trans-unit>
        <trans-unit id="04ed822942b7b57f39d7e316437d5b8fe3eb5def" translate="yes" xml:space="preserve">
          <source>Obtains the media length in sample frames.</source>
          <target state="translated">サンプルフレーム単位でメディアの長さを取得します。</target>
        </trans-unit>
        <trans-unit id="f67cc8efb6d1a0d2e15bb6378549949b987a659f" translate="yes" xml:space="preserve">
          <source>Obtains the minimum buffer size supported by the data line.</source>
          <target state="translated">データ行がサポートする最小バッファサイズを取得します。</target>
        </trans-unit>
        <trans-unit id="35c18ae069b75a20beeb6c83ab780afff1907f5c" translate="yes" xml:space="preserve">
          <source>Obtains the minimum value permitted.</source>
          <target state="translated">許可された最小値を取得します。</target>
        </trans-unit>
        <trans-unit id="2fdaa5f23093025bb671e164fda43f9ae596eb1c" translate="yes" xml:space="preserve">
          <source>Obtains the name of the company who supplies the device.</source>
          <target state="translated">装置を提供する会社名を取得します。</target>
        </trans-unit>
        <trans-unit id="f36d305e4a469b23b1438c533e07d20df5f73959" translate="yes" xml:space="preserve">
          <source>Obtains the name of the device.</source>
          <target state="translated">デバイス名を取得します。</target>
        </trans-unit>
        <trans-unit id="dcb553ed2268e50922072c27a4dc1b0ca79445a5" translate="yes" xml:space="preserve">
          <source>Obtains the name of the mixer.</source>
          <target state="translated">ミキサー名を取得します。</target>
        </trans-unit>
        <trans-unit id="786f85babda405f57e1d66b149d21228a12e9027" translate="yes" xml:space="preserve">
          <source>Obtains the name of the port.</source>
          <target state="translated">港名を取得します。</target>
        </trans-unit>
        <trans-unit id="c776f9b744dbd36bb472be4d969dc74e8460384b" translate="yes" xml:space="preserve">
          <source>Obtains the name of the resource.</source>
          <target state="translated">リソースの名前を取得します。</target>
        </trans-unit>
        <trans-unit id="83277e4c772f8d39421085282d00c893b1162407" translate="yes" xml:space="preserve">
          <source>Obtains the name of the resource. This should generally be a string descriptive of the resource.</source>
          <target state="translated">リソースの名前を取得します。これは通常、リソースを記述する文字列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="d5eab0242ea57db1d4eb075427f1f690007188c2" translate="yes" xml:space="preserve">
          <source>Obtains the name of the sound bank.</source>
          <target state="translated">サウンドバンクの名前を取得します。</target>
        </trans-unit>
        <trans-unit id="7b347cc2bd83388b79731c97bfa4f3d3129b39c8" translate="yes" xml:space="preserve">
          <source>Obtains the name of this reverb type.</source>
          <target state="translated">このリバーブタイプの名前を取得します。</target>
        </trans-unit>
        <trans-unit id="4a4ffb19e916d54499093e41206363f8f96b8c49" translate="yes" xml:space="preserve">
          <source>Obtains the number of bytes of data currently available to the application for processing in the data line's internal buffer.</source>
          <target state="translated">データラインの内部バッファで処理するために、現在アプリケーションで利用可能なデータのバイト数を取得します。</target>
        </trans-unit>
        <trans-unit id="198ff54b0baa27227e11bb5cf97b5812b6fa7447" translate="yes" xml:space="preserve">
          <source>Obtains the number of bytes of data currently available to the application for processing in the data line's internal buffer. For a source data line, this is the amount of data that can be written to the buffer without blocking. For a target data line, this is the amount of data available to be read by the application. For a clip, this value is always 0 because the audio data is loaded into the buffer when the clip is opened, and persists without modification until the clip is closed.</source>
          <target state="translated">データラインの内部バッファで処理するために、現在アプリケーションで利用可能なデータのバイト数を取得します。ソース・データ・ラインの場合、これはブロックせずにバッファに書き込めるデータの量です。ターゲット・データ・ラインの場合、これはアプリケーションが読み取り可能なデータ量です。クリップの場合、オーディオデータはクリップが開かれた時にバッファにロードされ、クリップが閉じるまで変更されずに保持されるため、この値は常に 0 になります。</target>
        </trans-unit>
        <trans-unit id="a98469c3827eb85f3a420e9ddbf16333f40afec1" translate="yes" xml:space="preserve">
          <source>Obtains the number of channels.</source>
          <target state="translated">チャンネル数を取得します。</target>
        </trans-unit>
        <trans-unit id="e89d8b6553859d5657ceb2112a13eb7292e469d1" translate="yes" xml:space="preserve">
          <source>Obtains the number of channels. When this &lt;code&gt;AudioFormat&lt;/code&gt; is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats()&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a return value of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any (positive) number of channels is acceptable.</source>
          <target state="translated">チャネル数を取得します。この &lt;code&gt;AudioFormat&lt;/code&gt; がクエリ（例：&lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; &lt;/a&gt;）または機能（例：&lt;a href=&quot;dataline.info#getFormats()&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; &lt;/a&gt;）に使用される場合、 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; の戻り値は、任意の（正の）数のチャネルが受け入れ可能であることを意味します。</target>
        </trans-unit>
        <trans-unit id="ad2e2e9db5dc627bcfeb77f9e58c7091336b4d2c" translate="yes" xml:space="preserve">
          <source>Obtains the number of channels. When this AudioFormat is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats--&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a return value of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any (positive) number of channels is acceptable.</source>
          <target state="translated">チャネル数を取得します。このAudioFormatがクエリ（&lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; など&lt;/a&gt;）または機能（&lt;a href=&quot;dataline.info#getFormats--&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; など&lt;/a&gt;）に使用される場合、 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; の戻り値は、任意の（正の）数のチャネルが受け入れられることを意味します。</target>
        </trans-unit>
        <trans-unit id="84ae46779250d366809142e859e049a8a779600e" translate="yes" xml:space="preserve">
          <source>Obtains the number of events in this track.</source>
          <target state="translated">このトラックのイベント数を取得します。</target>
        </trans-unit>
        <trans-unit id="b03385cf7d59117d59cc31c2daff7b3a65dbbd59" translate="yes" xml:space="preserve">
          <source>Obtains the number of repetitions for playback.</source>
          <target state="translated">再生回数を取得します。</target>
        </trans-unit>
        <trans-unit id="224e2978b3cf6184e9ada15bae2155129664f6b1" translate="yes" xml:space="preserve">
          <source>Obtains the position in the line's audio data when the event occurred, expressed in sample frames.</source>
          <target state="translated">イベントが発生したラインのオーディオデータ内の位置をサンプルフレームで取得します。</target>
        </trans-unit>
        <trans-unit id="87ccf9927f2c9d6b0e36bdbe748b7cc89ad077c7" translate="yes" xml:space="preserve">
          <source>Obtains the position in the line's audio data when the event occurred, expressed in sample frames. For example, if a source line had already played back 14 sample frames at the time it was paused, the pause event would report the line's position as 14. The next frame to be processed would be frame number 14 using zero-based numbering, or 15 using one-based numbering.</source>
          <target state="translated">イベントが発生した時のラインのオーディオデータの位置をサンプルフレームで取得します。例えば、ソースラインが一時停止された時点で既に14サンプルフレームが再生されていた場合、一時停止イベントはラインの位置を14として報告します。次に処理されるフレームは、ゼロベースのナンバリングを使用してフレーム番号14、または1ベースのナンバリングを使用してフレーム番号15となります。</target>
        </trans-unit>
        <trans-unit id="a5235766874782ff4e00b425c21d038908d99993" translate="yes" xml:space="preserve">
          <source>Obtains the pressure with which the specified key is being depressed.</source>
          <target state="translated">指定されたキーが押されている圧力を取得します。</target>
        </trans-unit>
        <trans-unit id="12bde7485477bd4233d2ec0dd8cbe66902051ff0" translate="yes" xml:space="preserve">
          <source>Obtains the print data representation object that contains this doc object's piece of print data in the format corresponding to the supported doc flavor.</source>
          <target state="translated">サポートされているdocフレーバーに対応する形式で、このdocオブジェクトの印刷データの一部を含む印刷データ表現オブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="faa873771006d53f0de38e93af8aeb4c904712a2" translate="yes" xml:space="preserve">
          <source>Obtains the print data representation object that contains this doc object's piece of print data in the format corresponding to the supported doc flavor. The &lt;code&gt;getPrintData()&lt;/code&gt; method returns an instance of the representation class whose name is given by &lt;a href=&quot;#getDocFlavor()&quot;&gt;&lt;code&gt;getDocFlavor()&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;docflavor#getRepresentationClassName()&quot;&gt;&lt;code&gt;getRepresentationClassName()&lt;/code&gt;&lt;/a&gt;, and the return value can be cast from class &lt;code&gt;Object&lt;/code&gt; to that representation class.</source>
          <target state="translated">サポートされているドキュメントフレーバーに対応する形式で、このドキュメントオブジェクトの印刷データを含む印刷データ表現オブジェクトを取得します。 &lt;code&gt;getPrintData()&lt;/code&gt; メソッドが戻る名によって与えられる表現クラスのインスタンス&lt;a href=&quot;#getDocFlavor()&quot;&gt; &lt;code&gt;getDocFlavor()&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;docflavor#getRepresentationClassName()&quot;&gt; &lt;code&gt;getRepresentationClassName()&lt;/code&gt; &lt;/a&gt;であり、戻り値はクラス &lt;code&gt;Object&lt;/code&gt; からその表現クラスにキャストできます。</target>
        </trans-unit>
        <trans-unit id="55203e03cca206c5f5ede28cffd3eba99bcc8416" translate="yes" xml:space="preserve">
          <source>Obtains the print data representation object that contains this doc object's piece of print data in the format corresponding to the supported doc flavor. The &lt;code&gt;getPrintData()&lt;/code&gt; method returns an instance of the representation class whose name is given by &lt;code&gt;&lt;a href=&quot;doc#getDocFlavor--&quot;&gt;&lt;code&gt;getDocFlavor()&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;docflavor#getRepresentationClassName--&quot;&gt;&lt;code&gt;getRepresentationClassName()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;, and the return value can be cast from class Object to that representation class.</source>
          <target state="translated">このdocオブジェクトの印刷データを含む印刷データ表現オブジェクトを、サポートされるdocフレーバーに対応する形式で取得します。 &lt;code&gt;getPrintData()&lt;/code&gt; メソッドが戻る名によって与えられる表現クラスのインスタンス &lt;code&gt;&lt;a href=&quot;doc#getDocFlavor--&quot;&gt;&lt;code&gt;getDocFlavor()&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;docflavor#getRepresentationClassName--&quot;&gt;&lt;code&gt;getRepresentationClassName()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 、および戻り値はObjectクラスからその表現クラスにキャストできます。</target>
        </trans-unit>
        <trans-unit id="80617dc7d7f28cee040294e5bbf6387270d78aee" translate="yes" xml:space="preserve">
          <source>Obtains the print data representation object that contains this doc object's piece of print data in the format corresponding to the supported doc flavor. The &lt;code&gt;getPrintData()&lt;/code&gt; method returns an instance of the representation class whose name is given by&lt;a href=&quot;#getDocFlavor()&quot;&gt;&lt;code&gt;getDocFlavor()&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;docflavor#getRepresentationClassName()&quot;&gt;&lt;code&gt;getRepresentationClassName()&lt;/code&gt;&lt;/a&gt;, and the return value can be cast from class &lt;code&gt;Object&lt;/code&gt; to that representation class.</source>
          <target state="translated">サポートされているドキュメントフレーバーに対応する形式で、このドキュメントオブジェクトの印刷データを含む印刷データ表現オブジェクトを取得します。 &lt;code&gt;getPrintData()&lt;/code&gt; メソッドが戻る名によって与えられる表現クラスのインスタンス&lt;a href=&quot;#getDocFlavor()&quot;&gt; &lt;code&gt;getDocFlavor()&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;docflavor#getRepresentationClassName()&quot;&gt; &lt;code&gt;getRepresentationClassName()&lt;/code&gt; &lt;/a&gt;であり、戻り値はクラス &lt;code&gt;Object&lt;/code&gt; からその表現クラスにキャストできます。</target>
        </trans-unit>
        <trans-unit id="b8c30e48603e9a4985ba1cadd57a7a99b9b45def" translate="yes" xml:space="preserve">
          <source>Obtains the processing latency incurred by this synthesizer, expressed in microseconds.</source>
          <target state="translated">このシンセサイザで発生する処理レイテンシをマイクロ秒単位で取得します。</target>
        </trans-unit>
        <trans-unit id="4d9b684a8af4b5a7358dc37dcc6e7bfc825282f8" translate="yes" xml:space="preserve">
          <source>Obtains the processing latency incurred by this synthesizer, expressed in microseconds. This latency measures the worst-case delay between the time a MIDI message is delivered to the synthesizer and the time that the synthesizer actually produces the corresponding result.</source>
          <target state="translated">このシンセサイザーで発生する処理レイテンシーをマイクロ秒で取得します。このレイテンシは、MIDIメッセージがシンセサイザーに配信されてから、実際にシンセサイザーが対応する結果を生成するまでの最悪の遅延を測定します。</target>
        </trans-unit>
        <trans-unit id="e97d7bd4b5ce67b4ff7e05cb55c8afb361ea05b1" translate="yes" xml:space="preserve">
          <source>Obtains the requested MIDI device.</source>
          <target state="translated">要求された MIDI デバイスを取得します。</target>
        </trans-unit>
        <trans-unit id="f9003a43bb5045e14eed3d62553bba173b216fcb" translate="yes" xml:space="preserve">
          <source>Obtains the requested audio mixer.</source>
          <target state="translated">要求されたオーディオミキサーを取得します。</target>
        </trans-unit>
        <trans-unit id="bb6bb9dfe22fe2a5bd48415da68c47fb702fa3df" translate="yes" xml:space="preserve">
          <source>Obtains the resolution or granularity of the control, in the units that the control measures.</source>
          <target state="translated">コントロールの分解能または粒度を、コントロールが測定する単位で取得します。</target>
        </trans-unit>
        <trans-unit id="db0eb02c9d395ffe1ab02a103903d39180c3ae0f" translate="yes" xml:space="preserve">
          <source>Obtains the resolution or granularity of the control, in the units that the control measures. The precision is the size of the increment between discrete valid values for this control, over the set of supported floating-point values.</source>
          <target state="translated">コントロールの分解能または粒度を、コントロールが測定する単位で取得します。精度は、サポートされている浮動小数点値のセットに対する、この制御のための離散的な有効値間の増分の大きさです。</target>
        </trans-unit>
        <trans-unit id="3ef0f669572a153da982af6cf7912c93e2494b62" translate="yes" xml:space="preserve">
          <source>Obtains the sample rate.</source>
          <target state="translated">サンプルレートを取得します。</target>
        </trans-unit>
        <trans-unit id="84c89b673b3ea9167d339060f488194faf34f1bf" translate="yes" xml:space="preserve">
          <source>Obtains the sample rate. For compressed formats, the return value is the sample rate of the uncompressed audio data. When this &lt;code&gt;AudioFormat&lt;/code&gt; is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats()&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a sample rate of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any sample rate is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the sample rate is not defined for this audio format.</source>
          <target state="translated">サンプルレートを取得します。圧縮形式の場合、戻り値は非圧縮オーディオデータのサンプルレートです。この &lt;code&gt;AudioFormat&lt;/code&gt; がクエリ（例：&lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; &lt;/a&gt;）または機能（例：&lt;a href=&quot;dataline.info#getFormats()&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; &lt;/a&gt;）に使用される場合、 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; のサンプルレートは、任意のサンプルレートが許容可能であることを意味します。このオーディオ形式でサンプルレートが定義されていない場合も、 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="916af48da0c2e5e0b8bea1d26957aa6de8314e6d" translate="yes" xml:space="preserve">
          <source>Obtains the sample rate. For compressed formats, the return value is the sample rate of the uncompressed audio data. When this AudioFormat is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats--&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a sample rate of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any sample rate is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the sample rate is not defined for this audio format.</source>
          <target state="translated">サンプルレートを取得します。圧縮形式の場合、戻り値は非圧縮オーディオデータのサンプルレートです。このAudioFormatをクエリ（&lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; など&lt;/a&gt;）または機能（&lt;a href=&quot;dataline.info#getFormats--&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; など&lt;/a&gt;）に使用する場合、サンプルレート &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; は、どのサンプルレートでも許容できることを意味します。 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; は、このオーディオ形式に対してサンプルレートが定義されていない場合にも返されます。</target>
        </trans-unit>
        <trans-unit id="919819c59380eb017472b79d31bcec0cf2bd9c6a" translate="yes" xml:space="preserve">
          <source>Obtains the sampled audio that is stored in this &lt;code&gt;SoundbankResource&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;SoundbankResource&lt;/code&gt; に保存されているサンプルオーディオを取得します。</target>
        </trans-unit>
        <trans-unit id="0b44aaffea01cb4145a902804f8d89e46237d2c7" translate="yes" xml:space="preserve">
          <source>Obtains the sampled audio that is stored in this &lt;code&gt;SoundbankResource&lt;/code&gt;. The type of object returned depends on the implementation of the concrete class, and may be queried using &lt;code&gt;getDataClass&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;SoundbankResource&lt;/code&gt; に格納されているサンプリングされたオーディオを取得します。返されるオブジェクトのタイプは具象クラスの実装によって異なり、 &lt;code&gt;getDataClass&lt;/code&gt; を使用して照会できます。</target>
        </trans-unit>
        <trans-unit id="6d1ddc39d5f6863a0e018fe94387fb4f30a49b70" translate="yes" xml:space="preserve">
          <source>Obtains the second data byte in the message.</source>
          <target state="translated">メッセージの 2 番目のデータバイトを取得します。</target>
        </trans-unit>
        <trans-unit id="931803e17b44282ca95fd228ef8676ceab8e3621" translate="yes" xml:space="preserve">
          <source>Obtains the sequence on which the Sequencer is currently operating.</source>
          <target state="translated">シーケンサが現在動作中のシーケンスを取得します。</target>
        </trans-unit>
        <trans-unit id="91aef69c84facbcf5265ce514bdcb77dc3aab156" translate="yes" xml:space="preserve">
          <source>Obtains the set of MIDI channels controlled by this synthesizer.</source>
          <target state="translated">このシンセサイザーがコントロールする MIDI チャンネルのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="529ee7e045169b7502fcd358ef0dbb3a71889438" translate="yes" xml:space="preserve">
          <source>Obtains the set of MIDI channels controlled by this synthesizer. Each non-null element in the returned array is a &lt;code&gt;MidiChannel&lt;/code&gt; that receives the MIDI messages sent on that channel number.</source>
          <target state="translated">このシンセサイザによって制御されるMIDIチャネルのセットを取得します。返された配列のnull以外の各要素は、そのチャネル番号で送信されたMIDIメッセージを受信する &lt;code&gt;MidiChannel&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="212a20062982077d3265d50d5e1d6199d0a40ae9" translate="yes" xml:space="preserve">
          <source>Obtains the set of MIDI file types for which file writing support is provided by the system.</source>
          <target state="translated">システムがファイル書き込みをサポートしているMIDIファイルタイプのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="32cf11fe93684bb01971acdec345e02214b6c889" translate="yes" xml:space="preserve">
          <source>Obtains the set of MIDI file types for which file writing support is provided by this file writer.</source>
          <target state="translated">このファイルライターがファイル書き込みをサポートしているMIDIファイルタイプのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="7130d4b5f8044b29c144b6ee114569f1b6a42428" translate="yes" xml:space="preserve">
          <source>Obtains the set of MIDI file types that the system can write from the sequence specified.</source>
          <target state="translated">指定されたシーケンスからシステムが書き込み可能なMIDIファイルタイプのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="d6ac897cdaec55ba6f2c80a6439801976e790239" translate="yes" xml:space="preserve">
          <source>Obtains the set of all source lines currently open to this mixer.</source>
          <target state="translated">このミキサーで現在開かれているすべてのソースラインのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="6b5cbca478504b7100a6c3a914bddedc1c25a58f" translate="yes" xml:space="preserve">
          <source>Obtains the set of all target lines currently open from this mixer.</source>
          <target state="translated">このミキサーから現在開いているすべてのターゲットラインのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="1e1ef4eab169eb94de146ccee65196e55bc82afd" translate="yes" xml:space="preserve">
          <source>Obtains the set of controls associated with this line.</source>
          <target state="translated">この行に関連付けられたコントロールのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="4068b2dcffafee66fda40f87326d1b3c1557a641" translate="yes" xml:space="preserve">
          <source>Obtains the set of controls associated with this line. Some controls may only be available when the line is open. If there are no controls, this method returns an array of length 0.</source>
          <target state="translated">この行に関連付けられたコントロールのセットを取得します。コントロールの中には、行が開いているときにのみ利用可能なものもあります。コントロールがない場合、このメソッドは長さ 0 の配列を返します。</target>
        </trans-unit>
        <trans-unit id="2dc770ac5095026b42ed7ac0cc5bc8bc4ee2feec" translate="yes" xml:space="preserve">
          <source>Obtains the set of info objects representing the device or devices provided by this &lt;code&gt;MidiDeviceProvider&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;MidiDeviceProvider&lt;/code&gt; によって提供されるデバイスを表す情報オブジェクトのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="97dfd1bf3fc431639eca3672d4373c0f3cbf2f7c" translate="yes" xml:space="preserve">
          <source>Obtains the set of info objects representing the mixer or mixers provided by this MixerProvider.</source>
          <target state="translated">この MixerProvider が提供するミキサーを表す情報オブジェクトのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="8ef7c9fd306e190f7bb570126b9cb667765a3650" translate="yes" xml:space="preserve">
          <source>Obtains the set of master synchronization modes supported by this sequencer.</source>
          <target state="translated">このシーケンサがサポートするマスター同期モードのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="d54f70adeaaa2bf84bd53214b0c82da69d47b2f4" translate="yes" xml:space="preserve">
          <source>Obtains the set of printing attributes for this doc object.</source>
          <target state="translated">このdocオブジェクトの印刷属性のセットを取得します。</target>
        </trans-unit>
        <trans-unit id="0c9cac1cfa9fe94fd5a78d11511c6fab9e4de620" translate="yes" xml:space="preserve">
          <source>Obtains the set of printing attributes for this doc object. If the returned attribute set includes an instance of a particular attribute</source>
          <target state="translated">このdocオブジェクトの印刷属性のセットを取得します。返された属性セットに特定の属性のインスタンスが含まれている場合</target>
        </trans-unit>
        <trans-unit id="7812b9bd0b4bc272bb0139fa4b1f8bbff6377bf6" translate="yes" xml:space="preserve">
          <source>Obtains the set of slave synchronization modes supported by the sequencer.</source>
          <target state="translated">シーケンサがサポートするスレーブ同期モードのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="e264d04a8d3a81e92ca1bc198927173c722fd3ef" translate="yes" xml:space="preserve">
          <source>Obtains the set of source format encodings from which format conversion services are provided by this provider.</source>
          <target state="translated">このプロバイダが提供するフォーマット変換サービスのソースフォーマットエンコーディングのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="082f41ad3b119c4ce63b80e3aac1d0419695b794" translate="yes" xml:space="preserve">
          <source>Obtains the set of target format encodings supported by the format converter given a particular source format.</source>
          <target state="translated">特定のソースフォーマットが与えられたときに、フォーマットコンバータがサポートするターゲットフォーマットのエンコーディングのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="45fcc9f67944cbcbb519cc5f2208ed13260f6401" translate="yes" xml:space="preserve">
          <source>Obtains the set of target format encodings supported by the format converter given a particular source format. If no target format encodings are supported for this source format, an array of length 0 is returned.</source>
          <target state="translated">特定のソースフォーマットが与えられたときに、フォーマットコンバータがサポートするターゲットフォーマットエンコーディングのセットを取得します。このソースフォーマットに対してターゲットフォーマットエンコーディングがサポートされていない場合は、長さ 0 の配列が返されます。</target>
        </trans-unit>
        <trans-unit id="c4c9982a46e38c7650a0e4c86b409e7deba40b87" translate="yes" xml:space="preserve">
          <source>Obtains the set of target format encodings to which format conversion services are provided by this provider.</source>
          <target state="translated">このプロバイダが提供するフォーマット変換サービスの対象となるターゲットフォーマットエンコーディングのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="640a71cb3159ab2c8678069ae2e3abf7077dec23" translate="yes" xml:space="preserve">
          <source>Obtains the set of target formats with the encoding specified supported by the format converter If no target formats with the specified encoding are supported for this source format, an array of length 0 is returned.</source>
          <target state="translated">フォーマットコンバータがサポートしているエンコーディングを指定したターゲットフォーマットのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="3c28bcd540b6266d353fc5f88df35b3f37db4176" translate="yes" xml:space="preserve">
          <source>Obtains the set of target formats with the encoding specified supported by the format converter.</source>
          <target state="translated">フォーマットコンバータがサポートする指定されたエンコーディングを持つ対象フォーマットのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="e61226609d3b9ac454b1330661ee4bc2eec9fa78" translate="yes" xml:space="preserve">
          <source>Obtains the set of target formats with the encoding specified supported by the format converter. If no target formats with the specified encoding are supported for this source format, an array of length 0 is returned.</source>
          <target state="translated">フォーマットコンバータがサポートする指定されたエンコーディングを持つターゲットフォーマットのセットを取得します。このソースフォーマットで指定されたエンコーディングを持つターゲットフォーマットがサポートされていない場合は、長さ 0 の配列を返します。</target>
        </trans-unit>
        <trans-unit id="7623e9c8d286bdde8d7daf962e8524f2079413cb" translate="yes" xml:space="preserve">
          <source>Obtains the size in bytes of the entire audio file (not just its audio data).</source>
          <target state="translated">オーディオファイル全体のサイズをバイト単位で取得します(オーディオデータだけではありません)。</target>
        </trans-unit>
        <trans-unit id="29644b48f54ebe9df81d37c1f40475117f567872" translate="yes" xml:space="preserve">
          <source>Obtains the size of a sample.</source>
          <target state="translated">サンプルのサイズを取得します。</target>
        </trans-unit>
        <trans-unit id="baada877f6e14ebd54acd40e5142867155b0409e" translate="yes" xml:space="preserve">
          <source>Obtains the size of a sample. For compressed formats, the return value is the sample size of the uncompressed audio data. When this &lt;code&gt;AudioFormat&lt;/code&gt; is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats()&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a sample size of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any sample size is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the sample size is not defined for this audio format.</source>
          <target state="translated">サンプルのサイズを取得します。圧縮形式の場合、戻り値は非圧縮オーディオデータのサンプルサイズです。この &lt;code&gt;AudioFormat&lt;/code&gt; がクエリ（例：&lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat,javax.sound.sampled.AudioFormat)&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; &lt;/a&gt;）または機能（例：&lt;a href=&quot;dataline.info#getFormats()&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; &lt;/a&gt;）に使用される場合、 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; のサンプルサイズは、任意のサンプルサイズが許容可能であることを意味します。 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; は、このオーディオ形式のサンプルサイズが定義されていない場合にも返されます。</target>
        </trans-unit>
        <trans-unit id="b5c1ed610de2368e452723c0a72cd39ea3d08684" translate="yes" xml:space="preserve">
          <source>Obtains the size of a sample. For compressed formats, the return value is the sample size of the uncompressed audio data. When this AudioFormat is used for queries (e.g. &lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt;&lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt;&lt;/a&gt;) or capabilities (e.g. &lt;a href=&quot;dataline.info#getFormats--&quot;&gt;&lt;code&gt;DataLine.Info.getFormats&lt;/code&gt;&lt;/a&gt;), a sample size of &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; means that any sample size is acceptable. &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; is also returned when the sample size is not defined for this audio format.</source>
          <target state="translated">サンプルのサイズを取得します。圧縮形式の場合、戻り値は非圧縮オーディオデータのサンプルサイズです。このAudioFormatがクエリ（&lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat-javax.sound.sampled.AudioFormat-&quot;&gt; &lt;code&gt;AudioSystem.isConversionSupported&lt;/code&gt; など&lt;/a&gt;）または機能（&lt;a href=&quot;dataline.info#getFormats--&quot;&gt; &lt;code&gt;DataLine.Info.getFormats&lt;/code&gt; など&lt;/a&gt;）に使用される場合、サンプルサイズ &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; は、どのサンプルサイズでも許容できることを意味します。 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; は、サンプルサイズがこのオーディオ形式に対して定義されていない場合にも返されます。</target>
        </trans-unit>
        <trans-unit id="832e1ce998f09262bb3c9c5145d3e757353b4877" translate="yes" xml:space="preserve">
          <source>Obtains the smallest time interval, in microseconds, over which the control's value can change during a shift.</source>
          <target state="translated">シフト中にコントロールの値が変化する最小の時間間隔をマイクロ秒単位で取得します。</target>
        </trans-unit>
        <trans-unit id="f38011fd2ed3d025ba757f317c8773115494d885" translate="yes" xml:space="preserve">
          <source>Obtains the smallest time interval, in microseconds, over which the control's value can change during a shift. The update period is the inverse of the frequency with which the control updates its value during a shift. If the implementation does not support value shifting over time, it should set the control's value to the final value immediately and return -1 from this method.</source>
          <target state="translated">シフト中にコントロールの値が変化する最小の時間間隔をマイクロ秒単位で取得します。更新期間は、シフト中にコントロールがその値を更新する頻度の逆数である。実装が時間経過に伴う値のシフトをサポートしていない場合は、コントロールの値を直ちに最終値に設定し、このメソッドから -1 を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="aa8e370de68ef8858a7552476717ca6f8301580c" translate="yes" xml:space="preserve">
          <source>Obtains the sound bank that contains this &lt;code&gt;SoundbankResource&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;SoundbankResource&lt;/code&gt; を含むサウンドバンクを取得します。</target>
        </trans-unit>
        <trans-unit id="0d8a2ec959503c4d45db87e974aa2c797012d004" translate="yes" xml:space="preserve">
          <source>Obtains the start position of the loop, in MIDI ticks.</source>
          <target state="translated">ループの開始位置を MIDI ティックで取得します。</target>
        </trans-unit>
        <trans-unit id="146c51e9eed7990fba501c56d354941e0e43216f" translate="yes" xml:space="preserve">
          <source>Obtains the status byte for the MIDI message.</source>
          <target state="translated">MIDI メッセージのステータスバイトを取得します。</target>
        </trans-unit>
        <trans-unit id="34ff015bf92d9367dc68e18471a1eadec0557a15" translate="yes" xml:space="preserve">
          <source>Obtains the status byte for the MIDI message. The status &quot;byte&quot; is represented as an integer; see the &lt;a href=&quot;#integersVsBytes&quot;&gt;discussion&lt;/a&gt; in the &lt;code&gt;MidiMessage&lt;/code&gt; class description.</source>
          <target state="translated">MIDIメッセージのステータスバイトを取得します。ステータス「バイト」は整数として表されます。参照&lt;a href=&quot;#integersVsBytes&quot;&gt;議論&lt;/a&gt;で &lt;code&gt;MidiMessage&lt;/code&gt; のクラスの説明を。</target>
        </trans-unit>
        <trans-unit id="cfb2a82b7632fa0993ad670d7d1dbb9d7b38eb5a" translate="yes" xml:space="preserve">
          <source>Obtains the time-stamp for the event, in MIDI ticks</source>
          <target state="translated">イベントのタイムスタンプを取得します。</target>
        </trans-unit>
        <trans-unit id="13bd33d9b5731c6ea31e6fade4d1d81b11ac2536" translate="yes" xml:space="preserve">
          <source>Obtains the time-stamp for the event, in MIDI ticks.</source>
          <target state="translated">イベントのタイムスタンプを取得します。</target>
        </trans-unit>
        <trans-unit id="6345ccc570bcf9f415fbd397ea1d93711869534a" translate="yes" xml:space="preserve">
          <source>Obtains the timing division type for the MIDI file.</source>
          <target state="translated">MIDI ファイルのタイミング分割タイプを取得します。</target>
        </trans-unit>
        <trans-unit id="fb7c60c35136ad3a2382a0bc25fd1046fd482513" translate="yes" xml:space="preserve">
          <source>Obtains the timing division type for this sequence.</source>
          <target state="translated">このシーケンスのタイミング分割タイプを取得します。</target>
        </trans-unit>
        <trans-unit id="d4180acbed582f575fe10bf61043db97a4c4ea32" translate="yes" xml:space="preserve">
          <source>Obtains the timing resolution for the MIDI file.</source>
          <target state="translated">MIDI ファイルのタイミング分解能を取得します。</target>
        </trans-unit>
        <trans-unit id="8bc4e900aac7cdb5cbc146cf25a2a65c58bd2001" translate="yes" xml:space="preserve">
          <source>Obtains the timing resolution for the MIDI file. If the division type is PPQ, the resolution is specified in ticks per beat. For SMTPE timing, the resolution is specified in ticks per frame.</source>
          <target state="translated">MIDI ファイルのタイミング分解能を取得します。分割タイプが PPQ の場合は、1 拍目の刻みで指定します。SMTPE タイミングの場合は、1 フレームあたりのティック数で指定します。</target>
        </trans-unit>
        <trans-unit id="d4e9471f6879f682fef813a0b6f8cba4da740e03" translate="yes" xml:space="preserve">
          <source>Obtains the timing resolution for this sequence.</source>
          <target state="translated">このシーケンスのタイミング分解能を取得します。</target>
        </trans-unit>
        <trans-unit id="cb1d60b9bd10cb9e2648f13272062d391178cc39" translate="yes" xml:space="preserve">
          <source>Obtains the timing resolution for this sequence. If the sequence's division type is PPQ, the resolution is specified in ticks per beat. For SMTPE timing, the resolution is specified in ticks per frame.</source>
          <target state="translated">このシーケンスのタイミング分解能を取得します。シーケンスの分割タイプが PPQ の場合、分解能は 1 ビートあたりのティック数で指定される。SMTPE タイミングの場合は、1 フレームあたりのティック数で指定します。</target>
        </trans-unit>
        <trans-unit id="bf6f8af4e6ccf1ed0e7e26420d14e2326d44577e" translate="yes" xml:space="preserve">
          <source>Obtains the total length of the MIDI message in bytes.</source>
          <target state="translated">MIDI メッセージの長さの合計をバイト単位で取得します。</target>
        </trans-unit>
        <trans-unit id="3f34e716470b806c3f24fa4263ae05c9f4cca4da" translate="yes" xml:space="preserve">
          <source>Obtains the total length of the MIDI message in bytes. A MIDI message consists of one status byte and zero or more data bytes. The return value ranges from 1 for system real-time messages, to 2 or 3 for channel messages, to any value for meta and system exclusive messages.</source>
          <target state="translated">MIDI メッセージの総長をバイト単位で取得します。MIDI メッセージは 1 つのステータス・バイトとゼロ以上のデータ・バイトで構成されています。返り値の範囲は、システムリアルタイムメッセージの場合は1から、チャンネルメッセージの場合は2または3、メタおよびシステム排他的メッセージの場合は任意の値までです。</target>
        </trans-unit>
        <trans-unit id="010c77ace25d05f1972540e9312e234d84b7d7c9" translate="yes" xml:space="preserve">
          <source>Obtains the type of encoding for sounds in this format.</source>
          <target state="translated">このフォーマットのサウンドのエンコーディングの種類を取得します。</target>
        </trans-unit>
        <trans-unit id="7128a50ac49d3e8d3f237ffb78f06d9601027207" translate="yes" xml:space="preserve">
          <source>Obtains the type of the &lt;code&gt;MetaMessage&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MetaMessage&lt;/code&gt; のタイプを取得します。</target>
        </trans-unit>
        <trans-unit id="2dbff2f3d5f02673d810e4940b0e9a02b4b4c48e" translate="yes" xml:space="preserve">
          <source>Obtains the upward or downward pitch offset for this channel.</source>
          <target state="translated">このチャンネルの上向きまたは下向きのピッチオフセットを取得します。</target>
        </trans-unit>
        <trans-unit id="af95fda7ddbd85dada3b6e7d3e9795bea0c053ea" translate="yes" xml:space="preserve">
          <source>Obtains the upward or downward pitch offset for this channel. If the device does not support setting pitch bend, this method always returns 8192. Calling &lt;code&gt;setPitchBend&lt;/code&gt; will have no effect then.</source>
          <target state="translated">このチャネルの上方または下方ピッチオフセットを取得します。デバイスがピッチベンドの設定をサポートしていない場合、このメソッドは常に &lt;code&gt;setPitchBend&lt;/code&gt; を返します。その場合、setPitchBendを呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="bfca6b5d508e8cec708093a42994dfb27f232de3" translate="yes" xml:space="preserve">
          <source>Obtains the value associated with a key in a key property.</source>
          <target state="translated">キープロパティのキーに関連付けられた値を取得します。</target>
        </trans-unit>
        <trans-unit id="b8c22bb0bfa695769b04c4281d1ea5dc7eafbefa" translate="yes" xml:space="preserve">
          <source>Obtains the value of the DAYS field as an integer value, or 0 if not present.</source>
          <target state="translated">DAYS フィールドの値を整数値で取得します。</target>
        </trans-unit>
        <trans-unit id="c8c7a7c4b195aeef1c06cd77707fa39d1687b72a" translate="yes" xml:space="preserve">
          <source>Obtains the value of the DAYS field as an integer value, or 0 if not present. This method works just like &lt;a href=&quot;#getYears()&quot;&gt;&lt;code&gt;getYears()&lt;/code&gt;&lt;/a&gt; except that this method works on the DAYS field.</source>
          <target state="translated">DAYSフィールドの値を整数値として取得します。存在しない場合は0を取得します。このメソッドは、このメソッドがDAYSフィールドで機能することを除いて、&lt;a href=&quot;#getYears()&quot;&gt; &lt;code&gt;getYears()&lt;/code&gt; と&lt;/a&gt;同じように機能します。</target>
        </trans-unit>
        <trans-unit id="e98c4be2e236f65728e31a023523d930b0ff6a1e" translate="yes" xml:space="preserve">
          <source>Obtains the value of the HOURS field as an integer value, or 0 if not present.</source>
          <target state="translated">HOURSフィールドの値を整数値で取得します。</target>
        </trans-unit>
        <trans-unit id="67de30556c5b9da711745b6809fb56a76461fa78" translate="yes" xml:space="preserve">
          <source>Obtains the value of the HOURS field as an integer value, or 0 if not present. This method works just like &lt;a href=&quot;#getYears()&quot;&gt;&lt;code&gt;getYears()&lt;/code&gt;&lt;/a&gt; except that this method works on the HOURS field.</source>
          <target state="translated">HOURSフィールドの値を整数値として取得します。存在しない場合は0を取得します。このメソッドは、HOURSフィールドで機能することを除いて、&lt;a href=&quot;#getYears()&quot;&gt; &lt;code&gt;getYears()&lt;/code&gt; と&lt;/a&gt;同じように機能します。</target>
        </trans-unit>
        <trans-unit id="d8f3d470584b20282d1b3b6071e8c6c3108946bb" translate="yes" xml:space="preserve">
          <source>Obtains the value of the MINUTES field as an integer value, or 0 if not present.</source>
          <target state="translated">MINUTES フィールドの値を整数値で取得します。</target>
        </trans-unit>
        <trans-unit id="3efcd96f5ad9dc5327934405374402690fd7f8dd" translate="yes" xml:space="preserve">
          <source>Obtains the value of the MINUTES field as an integer value, or 0 if not present. This method works just like &lt;a href=&quot;#getYears()&quot;&gt;&lt;code&gt;getYears()&lt;/code&gt;&lt;/a&gt; except that this method works on the MINUTES field.</source>
          <target state="translated">MINUTESフィールドの値を整数値として取得します。存在しない場合は0を取得します。このメソッドは、このメソッドがMINUTESフィールドで機能することを除いて、&lt;a href=&quot;#getYears()&quot;&gt; &lt;code&gt;getYears()&lt;/code&gt; と&lt;/a&gt;同じように機能します。</target>
        </trans-unit>
        <trans-unit id="d63eeaf95bdba336d75733a575837c2c5640cf07" translate="yes" xml:space="preserve">
          <source>Obtains the value of the MONTHS field as an integer value, or 0 if not present.</source>
          <target state="translated">MONTHS フィールドの値を整数値で取得します。</target>
        </trans-unit>
        <trans-unit id="33828746c5c1caff09a72ba1680ca4a5a2f312b1" translate="yes" xml:space="preserve">
          <source>Obtains the value of the MONTHS field as an integer value, or 0 if not present. This method works just like &lt;a href=&quot;#getYears()&quot;&gt;&lt;code&gt;getYears()&lt;/code&gt;&lt;/a&gt; except that this method works on the MONTHS field.</source>
          <target state="translated">MONTHSフィールドの値を整数値として取得します。存在しない場合は0を取得します。このメソッドは、MONTHSフィールドで機能することを除いて、&lt;a href=&quot;#getYears()&quot;&gt; &lt;code&gt;getYears()&lt;/code&gt; と&lt;/a&gt;同じように機能します。</target>
        </trans-unit>
        <trans-unit id="e57bb1cb279a7acb1013dc7c7e38a1b3b7c4c80f" translate="yes" xml:space="preserve">
          <source>Obtains the value of the SECONDS field as an integer value, or 0 if not present.</source>
          <target state="translated">SECONDSフィールドの値を整数値で取得します。</target>
        </trans-unit>
        <trans-unit id="52fd2e913de93941e958949090eb166e93fdddf9" translate="yes" xml:space="preserve">
          <source>Obtains the value of the SECONDS field as an integer value, or 0 if not present. This method works just like &lt;a href=&quot;#getYears()&quot;&gt;&lt;code&gt;getYears()&lt;/code&gt;&lt;/a&gt; except that this method works on the SECONDS field.</source>
          <target state="translated">SECONDSフィールドの値を整数値として取得します。存在しない場合は0を取得します。このメソッドは、このメソッドがSECONDSフィールドで機能することを除いて、&lt;a href=&quot;#getYears()&quot;&gt; &lt;code&gt;getYears()&lt;/code&gt; と&lt;/a&gt;同じように機能します。</target>
        </trans-unit>
        <trans-unit id="15cdb87771ec76c43709351158a9ad7cb9bcf43a" translate="yes" xml:space="preserve">
          <source>Obtains the vendor of the mixer.</source>
          <target state="translated">ミキサーのベンダーを取得します。</target>
        </trans-unit>
        <trans-unit id="ef0fbc2eb74a02372e34da6b17c31a13514b526e" translate="yes" xml:space="preserve">
          <source>Obtains the version of the device.</source>
          <target state="translated">デバイスのバージョンを取得します。</target>
        </trans-unit>
        <trans-unit id="681806e15cf00f92aaabb9518658e387de962927" translate="yes" xml:space="preserve">
          <source>Obtains the version of the mixer.</source>
          <target state="translated">ミキサーのバージョンを取得します。</target>
        </trans-unit>
        <trans-unit id="b12262b8fbdc4bf6f355143093691bdbbf2d9f59" translate="yes" xml:space="preserve">
          <source>Obtains the version string for the sound bank.</source>
          <target state="translated">サウンドバンクのバージョン文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="be3d4bcd123ef2916a1118f6b8f513e25269106b" translate="yes" xml:space="preserve">
          <source>Obtains this Print Job's set of printing attributes.</source>
          <target state="translated">この印刷ジョブの印刷属性のセットを取得します。</target>
        </trans-unit>
        <trans-unit id="8adaf718f9fcbb8f526cea52b469726f36db1185" translate="yes" xml:space="preserve">
          <source>Obtains this Print Job's set of printing attributes. The returned attribute set object is unmodifiable. The returned attribute set object is a &quot;snapshot&quot; of this Print Job's attribute set at the time of the &lt;a href=&quot;docprintjob#getAttributes--&quot;&gt;&lt;code&gt;getAttributes()&lt;/code&gt;&lt;/a&gt; method call; that is, the returned attribute set's object's contents will not be updated if this Print Job's attribute set's contents change in the future. To detect changes in attribute values, call &lt;code&gt;getAttributes()&lt;/code&gt; again and compare the new attribute set to the previous attribute set; alternatively, register a listener for print job events. The returned value may be an empty set but should not be null.</source>
          <target state="translated">この印刷ジョブの印刷属性のセットを取得します。返された属性セットオブジェクトは変更できません。返される属性セットオブジェクトは、&lt;a href=&quot;docprintjob#getAttributes--&quot;&gt; &lt;code&gt;getAttributes()&lt;/code&gt; &lt;/a&gt;メソッドの呼び出し時にこの印刷ジョブの属性セットの「スナップショット」です。つまり、この印刷ジョブの属性セットの内容が将来変更されても、返された属性セットのオブジェクトの内容は更新されません。属性値の変更を検出するには、 &lt;code&gt;getAttributes()&lt;/code&gt; を再度呼び出し、新しい属性セットを以前の属性セットと比較します。または、印刷ジョブイベントのリスナーを登録します。戻り値は空の​​セットである場合がありますが、nullであってはなりません。</target>
        </trans-unit>
        <trans-unit id="2d56f159a50c98ee5531097c6ab8ce5ac336397d" translate="yes" xml:space="preserve">
          <source>Obtains this Print Job's set of printing attributes. The returned attribute set object is unmodifiable. The returned attribute set object is a &quot;snapshot&quot; of this Print Job's attribute set at the time of the &lt;code&gt;getAttributes()&lt;/code&gt; method call; that is, the returned attribute set's object's contents will not be updated if this Print Job's attribute set's contents change in the future. To detect changes in attribute values, call &lt;code&gt;getAttributes()&lt;/code&gt; again and compare the new attribute set to the previous attribute set; alternatively, register a listener for print job events. The returned value may be an empty set but should not be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">この印刷ジョブの印刷属性のセットを取得します。返された属性セットオブジェクトは変更できません。返される属性セットオブジェクトは、 &lt;code&gt;getAttributes()&lt;/code&gt; メソッド呼び出し時に設定されたこの印刷ジョブの属性の「スナップショット」です。つまり、この印刷ジョブの属性セットの内容が将来変更されても、返された属性セットのオブジェクトの内容は更新されません。属性値の変更を検出するには、 &lt;code&gt;getAttributes()&lt;/code&gt; を再度呼び出して、新しい属性セットを前の属性セットと比較します。または、印刷ジョブイベントのリスナーを登録します。戻り値は空の​​セットである可能性がありますが、 &lt;code&gt;null&lt;/code&gt; であってはなりません。</target>
        </trans-unit>
        <trans-unit id="b0d6c4152a9fee98e44407a06a19d94459648680" translate="yes" xml:space="preserve">
          <source>Obtains this control's current value.</source>
          <target state="translated">このコントロールの現在値を取得します。</target>
        </trans-unit>
        <trans-unit id="e773a7ded424aee9677a20f60e21f56631728d90" translate="yes" xml:space="preserve">
          <source>Obtains this print service's set of printer description attributes giving this Print Service's status.</source>
          <target state="translated">このプリントサービスの状態を示すプリンタ記述属性のセットを取得します。</target>
        </trans-unit>
        <trans-unit id="521d500c5600e67f6b3ba4db6efc6089e93e37ef" translate="yes" xml:space="preserve">
          <source>Obtains this print service's set of printer description attributes giving this Print Service's status. The returned attribute set object is unmodifiable. The returned attribute set object is a &quot;snapshot&quot; of this Print Service's attribute set at the time of the &lt;code&gt;getAttributes()&lt;/code&gt; method call: that is, the returned attribute set's contents will</source>
          <target state="translated">この印刷サービスのステータスを示す、この印刷サービスのプリンタ記述属性のセットを取得します。返された属性セットオブジェクトは変更できません。返された属性セットオブジェクトは、 &lt;code&gt;getAttributes()&lt;/code&gt; メソッド呼び出し時のこの印刷サービスの属性セットの「スナップショット」です。つまり、返された属性セットの内容は</target>
        </trans-unit>
        <trans-unit id="2d45a50d2cdef03d45eafbae2780b699bc617ec9" translate="yes" xml:space="preserve">
          <source>OceanTheme</source>
          <target state="translated">OceanTheme</target>
        </trans-unit>
        <trans-unit id="4ae976130c69a64ffea1f3542dd6f8504698df57" translate="yes" xml:space="preserve">
          <source>Octal escapes are not recognized.</source>
          <target state="translated">八進数エスケープは認識されません。</target>
        </trans-unit>
        <trans-unit id="f9ac86fef3f5dbbe1f7d1516906ede0f8592da1a" translate="yes" xml:space="preserve">
          <source>OctalDigits</source>
          <target state="translated">OctalDigits</target>
        </trans-unit>
        <trans-unit id="5fd7fac0f66d4b02450a79064f56d3806ab2f374" translate="yes" xml:space="preserve">
          <source>OctetStreamData</source>
          <target state="translated">OctetStreamData</target>
        </trans-unit>
        <trans-unit id="17c9dece3077b8ef1096620ec714dece45e6dd4a" translate="yes" xml:space="preserve">
          <source>Of course, for any general application of the API, the input would not be fixed strings, but would come from the user. Below is a very simplified example of how the API might be used to implement a REPL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3885cfc5d77d6aefd8d1d592d25aaabc9176ec" translate="yes" xml:space="preserve">
          <source>Of course, interface &lt;code&gt;MultiDoc&lt;/code&gt; can be implemented in any way that fulfills the contract; it doesn't have to use a linked list in the implementation.</source>
          <target state="translated">もちろん、インターフェース &lt;code&gt;MultiDoc&lt;/code&gt; は、契約を満たす任意の方法で実装できます。実装でリンクリストを使用する必要はありません。</target>
        </trans-unit>
        <trans-unit id="23eb6111dc85f6fc053466e31e7bd1e912a6ed8f" translate="yes" xml:space="preserve">
          <source>Of course, interface MultiDoc can be implemented in any way that fulfills the contract; it doesn't have to use a linked list in the implementation.</source>
          <target state="translated">もちろん、インターフェースMultiDocは契約を満たす方法であればどのように実装しても構いません。</target>
        </trans-unit>
        <trans-unit id="647543085659e19f7882eb64d2614e7283214f53" translate="yes" xml:space="preserve">
          <source>Of course, such operations can be readily implemented as simple sequential loops, as in:</source>
          <target state="translated">もちろん、このような操作は、以下のように単純なシーケンシャルループとして容易に実装することができます。</target>
        </trans-unit>
        <trans-unit id="74938e4f5f18c060fbc8ccc6312dde7c5a95278c" translate="yes" xml:space="preserve">
          <source>Of primary significance in this package is the &lt;a href=&quot;xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; class, which allows you to sign and validate an XML digital signature.</source>
          <target state="translated">このパッケージで最も重要なのは、XMLデジタル署名に署名して検証できる&lt;a href=&quot;xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt;クラスです。</target>
        </trans-unit>
        <trans-unit id="e8e6755ba1a75937de8b09f810ad12dd4d49977b" translate="yes" xml:space="preserve">
          <source>Of the form ::ffff:w.x.y.z, this IPv6 address is used to represent an IPv4 address. It allows the native program to use the same address data structure and also the same socket when communicating with both IPv4 and IPv6 nodes.</source>
          <target state="translated">このIPv6アドレスは、IPv4アドレスを表すために使用されます。これにより、ネイティブプログラムはIPv4とIPv6の両方のノードと通信する際に、同じアドレスデータ構造と同じソケットを使用することができます。</target>
        </trans-unit>
        <trans-unit id="ce3dc80c4db739a6317fb7d492c83ea6842a25d1" translate="yes" xml:space="preserve">
          <source>Of the form::ffff:w.x.y.z, this IPv6 address is used to represent an IPv4 address. It allows the native program to use the same address data structure and also the same socket when communicating with both IPv4 and IPv6 nodes.</source>
          <target state="translated">このIPv6アドレスは、::fffff:w.x.y.zという形式で、IPv4アドレスを表すために使用されます。これにより、IPv4とIPv6の両方のノードと通信する際に、ネイティブプログラムが同じアドレスデータ構造を使用し、同じソケットを使用することができます。</target>
        </trans-unit>
        <trans-unit id="c438e271746106ce89f5a0cb2e491899f27ea6e4" translate="yes" xml:space="preserve">
          <source>Of the subtypes of Number, only Double, Integer and Long are supported.</source>
          <target state="translated">Numberのサブタイプのうち、Double、Integer、Longだけがサポートされています。</target>
        </trans-unit>
        <trans-unit id="2346e8295f86abb7be98a167973378a54914ec45" translate="yes" xml:space="preserve">
          <source>Offset into default (first) bank from which to get the first element.</source>
          <target state="translated">最初の要素を取得するためのデフォルト(最初の)バンクへのオフセット。</target>
        </trans-unit>
        <trans-unit id="41dffc3193d881c3e2f19e7769922ed0473ddd6e" translate="yes" xml:space="preserve">
          <source>Offset of alignment character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceede1bc4e32e26bbcb0075a9540e9333ff6afe3" translate="yes" xml:space="preserve">
          <source>Offset of alignment character. See the charoff attribute definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d0e8dacf29036c87447053df41391cda04a4c7" translate="yes" xml:space="preserve">
          <source>Offset of field within instance data.</source>
          <target state="translated">インスタンスデータ内のフィールドのオフセット。</target>
        </trans-unit>
        <trans-unit id="14641d99380d595ab44ad4b4c4b5d8389f735373" translate="yes" xml:space="preserve">
          <source>Offset within instance data.</source>
          <target state="translated">インスタンスデータ内のオフセット。</target>
        </trans-unit>
        <trans-unit id="e80c498e4b8437e6cf72869d7bae745d591dd95e" translate="yes" xml:space="preserve">
          <source>Offset within the ending node of the Range.</source>
          <target state="translated">レンジの終端ノード内のオフセット。</target>
        </trans-unit>
        <trans-unit id="d12dbca1f22338a8f7e4ee6b7eb2a0f17fa7f5c8" translate="yes" xml:space="preserve">
          <source>Offset within the starting node of the Range.</source>
          <target state="translated">レンジの開始ノード内のオフセット。</target>
        </trans-unit>
        <trans-unit id="ac2b0b54660ddb4b995e020a9ebb1307a3076165" translate="yes" xml:space="preserve">
          <source>OffsetDateTime</source>
          <target state="translated">OffsetDateTime</target>
        </trans-unit>
        <trans-unit id="c41aec6c5f285744562cf406e0f45066662ab84b" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.adjustInto()</source>
          <target state="translated">OffsetDateTime.adjustInto()</target>
        </trans-unit>
        <trans-unit id="883406827d4ded7ce3851a69f8ef0efc4085c38a" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.atZoneSameInstant()</source>
          <target state="translated">OffsetDateTime.atZoneSameInstant()</target>
        </trans-unit>
        <trans-unit id="d45626cca634a1dc86b7e939b7784ab5c120e019" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.atZoneSimilarLocal()</source>
          <target state="translated">OffsetDateTime.atZoneSimilarLocal()</target>
        </trans-unit>
        <trans-unit id="3b39573cf3f06ad1f5deeab91d31f8375506a7aa" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.compareTo()</source>
          <target state="translated">OffsetDateTime.compareTo()</target>
        </trans-unit>
        <trans-unit id="7fbeb365e0778f202dbb1e179b44a614f16c9af7" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.equals()</source>
          <target state="translated">OffsetDateTime.equals()</target>
        </trans-unit>
        <trans-unit id="02974d87e1cd8eaa004ceb72fcb91682b33f7384" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.format()</source>
          <target state="translated">OffsetDateTime.format()</target>
        </trans-unit>
        <trans-unit id="68580f0c4113ee16f4444cd2610a1069d703afcc" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.from()</source>
          <target state="translated">OffsetDateTime.from()</target>
        </trans-unit>
        <trans-unit id="daf4d20f6a870fdd95b7b4f7fa9df9a0cb913aa9" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.get()</source>
          <target state="translated">OffsetDateTime.get()</target>
        </trans-unit>
        <trans-unit id="68e6ad9fde4d63d4493cb91c1d0db8206345cf61" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getDayOfMonth()</source>
          <target state="translated">OffsetDateTime.getDayOfMonth()</target>
        </trans-unit>
        <trans-unit id="3547e0c497db732528a8de9c5f9b749bd5f73ce1" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getDayOfWeek()</source>
          <target state="translated">OffsetDateTime.getDayOfWeek()</target>
        </trans-unit>
        <trans-unit id="99b1fc03d4a08c1b1b23eb12629d195f68e6f4e6" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getDayOfYear()</source>
          <target state="translated">OffsetDateTime.getDayOfYear()</target>
        </trans-unit>
        <trans-unit id="d5f6714040f964523f88a39d9e6e79e6e88c55bb" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getHour()</source>
          <target state="translated">OffsetDateTime.getHour()</target>
        </trans-unit>
        <trans-unit id="f6852ea8f63fdcd398c1781d8ca6aa75babeb2ef" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getLong()</source>
          <target state="translated">OffsetDateTime.getLong()</target>
        </trans-unit>
        <trans-unit id="d03ee6885edc4ce710d935d7608d05b0bf27be92" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getMinute()</source>
          <target state="translated">OffsetDateTime.getMinute()</target>
        </trans-unit>
        <trans-unit id="0e97766075a286ee99ba38c19865d49aabc4dad8" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getMonth()</source>
          <target state="translated">OffsetDateTime.getMonth()</target>
        </trans-unit>
        <trans-unit id="2bfd57c0fd564bece985a3c85b0a38d812ec7846" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getMonthValue()</source>
          <target state="translated">OffsetDateTime.getMonthValue()</target>
        </trans-unit>
        <trans-unit id="59e5be9d94b0142dde0441bfb4da1ff2feb32a00" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getNano()</source>
          <target state="translated">OffsetDateTime.getNano()</target>
        </trans-unit>
        <trans-unit id="d9f78b425218f81f1a97f44a02404a2c449bdcd8" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getOffset()</source>
          <target state="translated">OffsetDateTime.getOffset()</target>
        </trans-unit>
        <trans-unit id="b31a92f19bcbd29af1db98befa201114705588f3" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getSecond()</source>
          <target state="translated">OffsetDateTime.getSecond()</target>
        </trans-unit>
        <trans-unit id="623c529ae16c44c1c06f9e058d7c9472fc7f8d85" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.getYear()</source>
          <target state="translated">OffsetDateTime.getYear()</target>
        </trans-unit>
        <trans-unit id="7e3d6098ef50c8b31a1162beea94d9e3868655b4" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.hashCode()</source>
          <target state="translated">OffsetDateTime.hashCode()</target>
        </trans-unit>
        <trans-unit id="4a2b28074c0e0768e001de2d739102be451d80d0" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.isAfter()</source>
          <target state="translated">OffsetDateTime.isAfter()</target>
        </trans-unit>
        <trans-unit id="e69c068c394bc741089d43c5d40898e456f5e2f6" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.isBefore()</source>
          <target state="translated">OffsetDateTime.isBefore()</target>
        </trans-unit>
        <trans-unit id="ecc14cccfcc604695ad3f6e23bcafc553434c375" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.isEqual()</source>
          <target state="translated">OffsetDateTime.isEqual()</target>
        </trans-unit>
        <trans-unit id="ba7e08e3edf5cefbc4c18210f044c32f76a70bde" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.isSupported()</source>
          <target state="translated">OffsetDateTime.isSupported()</target>
        </trans-unit>
        <trans-unit id="690b761ed8bde4699e10dd8dc360d843b0423996" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minus()</source>
          <target state="translated">OffsetDateTime.minus()</target>
        </trans-unit>
        <trans-unit id="61b06a33117de29920567c6a0a042d08d63a6b70" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minusDays()</source>
          <target state="translated">OffsetDateTime.minusDays()</target>
        </trans-unit>
        <trans-unit id="b59e2b69d011eaa79572944d35c9728ff743c515" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minusHours()</source>
          <target state="translated">OffsetDateTime.minusHours()</target>
        </trans-unit>
        <trans-unit id="a0dd136fab7286dae499cf037e8b0d886e338489" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minusMinutes()</source>
          <target state="translated">OffsetDateTime.minusMinutes()</target>
        </trans-unit>
        <trans-unit id="989b7c4bd2c1cdeecf2c644ebfcfb635fdd3b0de" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minusMonths()</source>
          <target state="translated">OffsetDateTime.minusMonths()</target>
        </trans-unit>
        <trans-unit id="fabb642853f998ae5d66233c5d939e024fe260a0" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minusNanos()</source>
          <target state="translated">OffsetDateTime.minusNanos()</target>
        </trans-unit>
        <trans-unit id="a4cac91160bd1cc5567a14f11fe161206657123c" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minusSeconds()</source>
          <target state="translated">OffsetDateTime.minusSeconds()</target>
        </trans-unit>
        <trans-unit id="e2f6ce560dbdcbbdbddca8a9140e06a633b5ad31" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minusWeeks()</source>
          <target state="translated">OffsetDateTime.minusWeeks()</target>
        </trans-unit>
        <trans-unit id="4fe85485925da310e27fcf3189bc21af26fe6b45" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.minusYears()</source>
          <target state="translated">OffsetDateTime.minusYears()</target>
        </trans-unit>
        <trans-unit id="ac0eadfdea16bda5b2c53879ce13a709de5b1a0e" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.now()</source>
          <target state="translated">OffsetDateTime.now()</target>
        </trans-unit>
        <trans-unit id="bad15dbddb712ecc4cb28a1464171de9f4ea9ec2" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.of()</source>
          <target state="translated">OffsetDateTime.of()</target>
        </trans-unit>
        <trans-unit id="590d30e887e46ee2f27641b040fc019ed82efb35" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.ofInstant()</source>
          <target state="translated">OffsetDateTime.ofInstant()</target>
        </trans-unit>
        <trans-unit id="f07d65432fdb839810b8f27fe42b13facbd68984" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.parse()</source>
          <target state="translated">OffsetDateTime.parse()</target>
        </trans-unit>
        <trans-unit id="f3200eda7283e9616deb63071d80818ef3aa1c24" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plus()</source>
          <target state="translated">OffsetDateTime.plus()</target>
        </trans-unit>
        <trans-unit id="62b13d5bd9231a0cd0aa3a0375d6d9a9d1768af7" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plusDays()</source>
          <target state="translated">OffsetDateTime.plusDays()</target>
        </trans-unit>
        <trans-unit id="cde980cb43435426b0ac362e28f4710e1f281fed" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plusHours()</source>
          <target state="translated">OffsetDateTime.plusHours()</target>
        </trans-unit>
        <trans-unit id="697befe665e88c1752e23a7c7f58a770745043dd" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plusMinutes()</source>
          <target state="translated">OffsetDateTime.plusMinutes()</target>
        </trans-unit>
        <trans-unit id="0870b88697b274da5aa2d9724355e1eccb1ecccf" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plusMonths()</source>
          <target state="translated">OffsetDateTime.plusMonths()</target>
        </trans-unit>
        <trans-unit id="8f6e716f995d409f4f81b7259d435b628d1efceb" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plusNanos()</source>
          <target state="translated">OffsetDateTime.plusNanos()</target>
        </trans-unit>
        <trans-unit id="13d3ddd0ca19f82f65157f364cd1fa8c36bf2cb4" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plusSeconds()</source>
          <target state="translated">OffsetDateTime.plusSeconds()</target>
        </trans-unit>
        <trans-unit id="83d87d03b622bfacf770fed2a053167b07799fe4" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plusWeeks()</source>
          <target state="translated">OffsetDateTime.plusWeeks()</target>
        </trans-unit>
        <trans-unit id="804a14fb5e04d522a9438f49e1639febbc6f4aa3" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.plusYears()</source>
          <target state="translated">OffsetDateTime.plusYears()</target>
        </trans-unit>
        <trans-unit id="1fad5fe05bfd9eb3f39cce1bf6dba3cb31c96f56" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.query()</source>
          <target state="translated">OffsetDateTime.query()</target>
        </trans-unit>
        <trans-unit id="19ab04f24bffe7594b773489b3d7c0acf1ece74f" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.range()</source>
          <target state="translated">OffsetDateTime.range()</target>
        </trans-unit>
        <trans-unit id="7623a002c9cbf41797585ee87fed57f546542cd6" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.timeLineOrder()</source>
          <target state="translated">OffsetDateTime.timeLineOrder()</target>
        </trans-unit>
        <trans-unit id="ceba7f83728a309654f486e0d3d87bf48e8fc8ff" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.toEpochSecond()</source>
          <target state="translated">OffsetDateTime.toEpochSecond()</target>
        </trans-unit>
        <trans-unit id="6b293f64b359c6f87f28c0d9c87c261a96d6e4b1" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.toInstant()</source>
          <target state="translated">OffsetDateTime.toInstant()</target>
        </trans-unit>
        <trans-unit id="af93128edb4894c49f5090d1500c805656278352" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.toLocalDate()</source>
          <target state="translated">OffsetDateTime.toLocalDate()</target>
        </trans-unit>
        <trans-unit id="7b11e36edd1d19cceca45b4863afaba11895932f" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.toLocalDateTime()</source>
          <target state="translated">OffsetDateTime.toLocalDateTime()</target>
        </trans-unit>
        <trans-unit id="4f45465e0d94ec9acf8979dc552d6daba781d1b1" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.toLocalTime()</source>
          <target state="translated">OffsetDateTime.toLocalTime()</target>
        </trans-unit>
        <trans-unit id="e65b6fb9df2be2044a248b61cbd94ae87dea7ed1" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.toOffsetTime()</source>
          <target state="translated">OffsetDateTime.toOffsetTime()</target>
        </trans-unit>
        <trans-unit id="8dcc138e658a0e7ab202d5e64ed7b1c005af2e69" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.toString()</source>
          <target state="translated">OffsetDateTime.toString()</target>
        </trans-unit>
        <trans-unit id="963ce2ee7bb6338dc7a03ea793fe34882b18392b" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.toZonedDateTime()</source>
          <target state="translated">OffsetDateTime.toZonedDateTime()</target>
        </trans-unit>
        <trans-unit id="c8c9ec38788f57f7abfc9844ba8e706ce8f5a50d" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.truncatedTo()</source>
          <target state="translated">OffsetDateTime.truncatedTo()</target>
        </trans-unit>
        <trans-unit id="f9bf957bf4caa5220ffa6131f857810a6f5a91e1" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.until()</source>
          <target state="translated">OffsetDateTime.until()</target>
        </trans-unit>
        <trans-unit id="df546baf5f3920f08817dd910a1617d31746bfdf" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.with()</source>
          <target state="translated">OffsetDateTime.with()</target>
        </trans-unit>
        <trans-unit id="5d12f3248d3982d3a88e7657591c2e407baf4753" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withDayOfMonth()</source>
          <target state="translated">OffsetDateTime.withDayOfMonth()</target>
        </trans-unit>
        <trans-unit id="54e7ce58c2f5b5afd8466ea6773e16d12d2ca7e6" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withDayOfYear()</source>
          <target state="translated">OffsetDateTime.withDayOfYear()</target>
        </trans-unit>
        <trans-unit id="a7a675c1dc1a5865dcdb9db22e2bb46089942207" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withHour()</source>
          <target state="translated">OffsetDateTime.withHour()</target>
        </trans-unit>
        <trans-unit id="64d4178db459f089ffd4f8ac11ca2358d3384c5b" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withMinute()</source>
          <target state="translated">OffsetDateTime.withMinute()</target>
        </trans-unit>
        <trans-unit id="552cba6a94bb27b0911a11040681364f8e43c8f5" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withMonth()</source>
          <target state="translated">OffsetDateTime.withMonth()</target>
        </trans-unit>
        <trans-unit id="ca20e8b871e8ce95b7f8458be246e185fef4befd" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withNano()</source>
          <target state="translated">OffsetDateTime.withNano()</target>
        </trans-unit>
        <trans-unit id="699c3998459062d47a5ee8012877adca4672e4dc" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withOffsetSameInstant()</source>
          <target state="translated">OffsetDateTime.withOffsetSameInstant()</target>
        </trans-unit>
        <trans-unit id="073ee38b7c62362ee31235682afebef1927cc619" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withOffsetSameLocal()</source>
          <target state="translated">OffsetDateTime.withOffsetSameLocal()</target>
        </trans-unit>
        <trans-unit id="e81acbcdfc6ac0c263baf3933bbe2f73c55addd2" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withSecond()</source>
          <target state="translated">OffsetDateTime.withSecond()</target>
        </trans-unit>
        <trans-unit id="541eed0abf3b607f01ef89a1b35d0babf5032a3a" translate="yes" xml:space="preserve">
          <source>OffsetDateTime.withYear()</source>
          <target state="translated">OffsetDateTime.withYear()</target>
        </trans-unit>
        <trans-unit id="6268d9a6f2437afd70fc260560fadb4b144986c7" translate="yes" xml:space="preserve">
          <source>OffsetId/Offset - the &lt;a href=&quot;../zoneoffset&quot;&gt;zone offset&lt;/a&gt;</source>
          <target state="translated">OffsetId / Offset- &lt;a href=&quot;../zoneoffset&quot;&gt;ゾーンオフセット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f28365415fd289d5489db3a3d2dfb6e7e4298050" translate="yes" xml:space="preserve">
          <source>OffsetTime</source>
          <target state="translated">OffsetTime</target>
        </trans-unit>
        <trans-unit id="a13a2592cba0ebb271ae5ba013bc535a0d575c3a" translate="yes" xml:space="preserve">
          <source>OffsetTime.adjustInto()</source>
          <target state="translated">OffsetTime.adjustInto()</target>
        </trans-unit>
        <trans-unit id="0678fef803feb1af4f932a7a1c68f741d955d0cf" translate="yes" xml:space="preserve">
          <source>OffsetTime.atDate()</source>
          <target state="translated">OffsetTime.atDate()</target>
        </trans-unit>
        <trans-unit id="4c8d974e65c21b3dcf48d340f2730d1f881ff88c" translate="yes" xml:space="preserve">
          <source>OffsetTime.compareTo()</source>
          <target state="translated">OffsetTime.compareTo()</target>
        </trans-unit>
        <trans-unit id="03199b7ad7b8f9abc9ce24e52becd4613b8fa6a6" translate="yes" xml:space="preserve">
          <source>OffsetTime.equals()</source>
          <target state="translated">OffsetTime.equals()</target>
        </trans-unit>
        <trans-unit id="42921cb3a1bf6eb2bf1ede1d95d37057d633f225" translate="yes" xml:space="preserve">
          <source>OffsetTime.format()</source>
          <target state="translated">OffsetTime.format()</target>
        </trans-unit>
        <trans-unit id="2e2aecc8627d2b418b58c3e7fc5a60c97d3335f5" translate="yes" xml:space="preserve">
          <source>OffsetTime.from()</source>
          <target state="translated">OffsetTime.from()</target>
        </trans-unit>
        <trans-unit id="94a04bb07e3bdd7a60c754e4154ca7c632007a3d" translate="yes" xml:space="preserve">
          <source>OffsetTime.get()</source>
          <target state="translated">OffsetTime.get()</target>
        </trans-unit>
        <trans-unit id="a98ccada625bbc99491331060bdcd3da6d77a298" translate="yes" xml:space="preserve">
          <source>OffsetTime.getHour()</source>
          <target state="translated">OffsetTime.getHour()</target>
        </trans-unit>
        <trans-unit id="a3842312f2d07b8d529af4c12839c8f8cb166312" translate="yes" xml:space="preserve">
          <source>OffsetTime.getLong()</source>
          <target state="translated">OffsetTime.getLong()</target>
        </trans-unit>
        <trans-unit id="942c76847491de4fcf7a40430526654ee2a232dd" translate="yes" xml:space="preserve">
          <source>OffsetTime.getMinute()</source>
          <target state="translated">OffsetTime.getMinute()</target>
        </trans-unit>
        <trans-unit id="3a89044e99204979534ce8cd01d27059ebf6036e" translate="yes" xml:space="preserve">
          <source>OffsetTime.getNano()</source>
          <target state="translated">OffsetTime.getNano()</target>
        </trans-unit>
        <trans-unit id="44abe209c603f28f0d1f3a5abeef76d5ddb3fe94" translate="yes" xml:space="preserve">
          <source>OffsetTime.getOffset()</source>
          <target state="translated">OffsetTime.getOffset()</target>
        </trans-unit>
        <trans-unit id="6b9279dd9f42918422368a0c8c51a3ade74cf2df" translate="yes" xml:space="preserve">
          <source>OffsetTime.getSecond()</source>
          <target state="translated">OffsetTime.getSecond()</target>
        </trans-unit>
        <trans-unit id="2c865448a4ca4fea33f0da76ecbe673782053387" translate="yes" xml:space="preserve">
          <source>OffsetTime.hashCode()</source>
          <target state="translated">OffsetTime.hashCode()</target>
        </trans-unit>
        <trans-unit id="c4e7eeaca2b32e43f3beb4d902ad529870ddec01" translate="yes" xml:space="preserve">
          <source>OffsetTime.isAfter()</source>
          <target state="translated">OffsetTime.isAfter()</target>
        </trans-unit>
        <trans-unit id="96e3b83af4ebbf4dfb70a99bfd9223794a7d8a41" translate="yes" xml:space="preserve">
          <source>OffsetTime.isBefore()</source>
          <target state="translated">OffsetTime.isBefore()</target>
        </trans-unit>
        <trans-unit id="bd0f6c2c8bcef10666b9e435e329d0d511d8cdf6" translate="yes" xml:space="preserve">
          <source>OffsetTime.isEqual()</source>
          <target state="translated">OffsetTime.isEqual()</target>
        </trans-unit>
        <trans-unit id="2797e7eb99d115cee1ecc7685de3fe154124e353" translate="yes" xml:space="preserve">
          <source>OffsetTime.isSupported()</source>
          <target state="translated">OffsetTime.isSupported()</target>
        </trans-unit>
        <trans-unit id="cd7d73af67233d722882507d13242e38d059c140" translate="yes" xml:space="preserve">
          <source>OffsetTime.minus()</source>
          <target state="translated">OffsetTime.minus()</target>
        </trans-unit>
        <trans-unit id="79e64f90189f94cf9244718eba3ea84f1b9376a9" translate="yes" xml:space="preserve">
          <source>OffsetTime.minusHours()</source>
          <target state="translated">OffsetTime.minusHours()</target>
        </trans-unit>
        <trans-unit id="e0f9703bdd3786ed45ab2720017868a1f05de965" translate="yes" xml:space="preserve">
          <source>OffsetTime.minusMinutes()</source>
          <target state="translated">OffsetTime.minusMinutes()</target>
        </trans-unit>
        <trans-unit id="cf6dd6e18b921b3b68b65e9a1c9a9cadc2a49742" translate="yes" xml:space="preserve">
          <source>OffsetTime.minusNanos()</source>
          <target state="translated">OffsetTime.minusNanos()</target>
        </trans-unit>
        <trans-unit id="7e9df96581975c899599d8923c6d302214278aaf" translate="yes" xml:space="preserve">
          <source>OffsetTime.minusSeconds()</source>
          <target state="translated">OffsetTime.minusSeconds()</target>
        </trans-unit>
        <trans-unit id="4f0d692ad2bb64860314d5c4bda14a35b81fcc8e" translate="yes" xml:space="preserve">
          <source>OffsetTime.now()</source>
          <target state="translated">OffsetTime.now()</target>
        </trans-unit>
        <trans-unit id="22c87f74c85d68f18a74cb85d5a582ff3d2024a6" translate="yes" xml:space="preserve">
          <source>OffsetTime.of()</source>
          <target state="translated">OffsetTime.of()</target>
        </trans-unit>
        <trans-unit id="10edcabde1d15375d69a691f4b456037b3a682a3" translate="yes" xml:space="preserve">
          <source>OffsetTime.ofInstant()</source>
          <target state="translated">OffsetTime.ofInstant()</target>
        </trans-unit>
        <trans-unit id="ffe5cf6767c5efabcd313065583dd7f915b74b27" translate="yes" xml:space="preserve">
          <source>OffsetTime.parse()</source>
          <target state="translated">OffsetTime.parse()</target>
        </trans-unit>
        <trans-unit id="3705c2273ebeb8e26b877b2c0447013d5385a03a" translate="yes" xml:space="preserve">
          <source>OffsetTime.plus()</source>
          <target state="translated">OffsetTime.plus()</target>
        </trans-unit>
        <trans-unit id="6152019de4b90b9c0ee37bf444e481d083778c02" translate="yes" xml:space="preserve">
          <source>OffsetTime.plusHours()</source>
          <target state="translated">OffsetTime.plusHours()</target>
        </trans-unit>
        <trans-unit id="32e67193189b31e28c7282b5f87b8af61bf32936" translate="yes" xml:space="preserve">
          <source>OffsetTime.plusMinutes()</source>
          <target state="translated">OffsetTime.plusMinutes()</target>
        </trans-unit>
        <trans-unit id="e10d9152e738a449e54f5f1d6e33da5fed9b2adf" translate="yes" xml:space="preserve">
          <source>OffsetTime.plusNanos()</source>
          <target state="translated">OffsetTime.plusNanos()</target>
        </trans-unit>
        <trans-unit id="026eaab82b9ee6757faccfa25cfd6aabb396e2e3" translate="yes" xml:space="preserve">
          <source>OffsetTime.plusSeconds()</source>
          <target state="translated">OffsetTime.plusSeconds()</target>
        </trans-unit>
        <trans-unit id="2ea6b3297f5a80e4abd364be5c9592b348fba468" translate="yes" xml:space="preserve">
          <source>OffsetTime.query()</source>
          <target state="translated">OffsetTime.query()</target>
        </trans-unit>
        <trans-unit id="6826e78991f96d3e9136e4253dd4da6aadd821eb" translate="yes" xml:space="preserve">
          <source>OffsetTime.range()</source>
          <target state="translated">OffsetTime.range()</target>
        </trans-unit>
        <trans-unit id="22ea1005d8ae3ec5a982ef8628b6d1e5980d5e9c" translate="yes" xml:space="preserve">
          <source>OffsetTime.toLocalTime()</source>
          <target state="translated">OffsetTime.toLocalTime()</target>
        </trans-unit>
        <trans-unit id="02edb8261994af8580957550e0505065451f43ee" translate="yes" xml:space="preserve">
          <source>OffsetTime.toString()</source>
          <target state="translated">OffsetTime.toString()</target>
        </trans-unit>
        <trans-unit id="0534fa3f60bfb86f78fca7f0d3c04ef963ea700e" translate="yes" xml:space="preserve">
          <source>OffsetTime.truncatedTo()</source>
          <target state="translated">OffsetTime.truncatedTo()</target>
        </trans-unit>
        <trans-unit id="d7b9709c56ddf4b4ad82e280faf5973ddab97d92" translate="yes" xml:space="preserve">
          <source>OffsetTime.until()</source>
          <target state="translated">OffsetTime.until()</target>
        </trans-unit>
        <trans-unit id="e39a2e8bd3adb595e25291df904f9bc7f9ac9952" translate="yes" xml:space="preserve">
          <source>OffsetTime.with()</source>
          <target state="translated">OffsetTime.with()</target>
        </trans-unit>
        <trans-unit id="1152f4933bac7ed2259d179fc0591a5f84835ae6" translate="yes" xml:space="preserve">
          <source>OffsetTime.withHour()</source>
          <target state="translated">OffsetTime.withHour()</target>
        </trans-unit>
        <trans-unit id="d4ed4811fff3b6b90cace9b6348c19453796e45c" translate="yes" xml:space="preserve">
          <source>OffsetTime.withMinute()</source>
          <target state="translated">OffsetTime.withMinute()</target>
        </trans-unit>
        <trans-unit id="c5db9b88a02356cae1c59deb1796fc50261fbf0d" translate="yes" xml:space="preserve">
          <source>OffsetTime.withNano()</source>
          <target state="translated">OffsetTime.withNano()</target>
        </trans-unit>
        <trans-unit id="59ada4a315a5720c94c89a9f87cedc53db1fff27" translate="yes" xml:space="preserve">
          <source>OffsetTime.withOffsetSameInstant()</source>
          <target state="translated">OffsetTime.withOffsetSameInstant()</target>
        </trans-unit>
        <trans-unit id="a9109f4af1eb4cc40a29f132b4bfa9010789b10f" translate="yes" xml:space="preserve">
          <source>OffsetTime.withOffsetSameLocal()</source>
          <target state="translated">OffsetTime.withOffsetSameLocal()</target>
        </trans-unit>
        <trans-unit id="f2f1921de64083d780347c778ba880d6fede33fc" translate="yes" xml:space="preserve">
          <source>OffsetTime.withSecond()</source>
          <target state="translated">OffsetTime.withSecond()</target>
        </trans-unit>
        <trans-unit id="8733facc09513922bb7a0aee4a27eda6c933dbf6" translate="yes" xml:space="preserve">
          <source>Offsets for all bands in data array elements.</source>
          <target state="translated">データ配列要素のすべてのバンドのオフセット。</target>
        </trans-unit>
        <trans-unit id="811c6126ad46f9a37c140bbf155bdd6060b021a3" translate="yes" xml:space="preserve">
          <source>Offsets into all banks.</source>
          <target state="translated">すべての銀行にオフセットします。</target>
        </trans-unit>
        <trans-unit id="e885a56f59f01a52cd899ea78fc3e83e7f9e862f" translate="yes" xml:space="preserve">
          <source>Often, the</source>
          <target state="translated">多くの場合</target>
        </trans-unit>
        <trans-unit id="431423baf1c171fef1ed0c3e1e1f826f45e0e3e3" translate="yes" xml:space="preserve">
          <source>Oid</source>
          <target state="translated">Oid</target>
        </trans-unit>
        <trans-unit id="fe4e7464bbfbdce1ed03749d27baaedc5db47cbf" translate="yes" xml:space="preserve">
          <source>Oid indicating a host-based service name form.</source>
          <target state="translated">ホストベースのサービス名の形式を示す Oid。</target>
        </trans-unit>
        <trans-unit id="2328ec453a162e7ae2e0b9c2c444576e980dda5c" translate="yes" xml:space="preserve">
          <source>Oid indicating a host-based service name form. It is used to represent services associated with host computers. This name form is constructed using two elements, &quot;service&quot; and &quot;hostname&quot;, as follows: service@hostname.</source>
          <target state="translated">ホストベースのサービス名の形式を示すOid。ホストコンピュータに関連付けられたサービスを表現するために使用される。この名前形式は、&quot;service &quot;と &quot;hostname &quot;の2つの要素を用いて、以下のように構成されます:service@hostname.</target>
        </trans-unit>
        <trans-unit id="9922eac122a4869c5a89f3cb3d1716a812194ee8" translate="yes" xml:space="preserve">
          <source>Oids are hierarchically globally-interpretable identifiers used within the GSS-API framework to identify mechanisms and name formats.</source>
          <target state="translated">Oidsは階層的にグローバルに解釈可能な識別子で、GSS-APIフレームワーク内でメカニズムと名前のフォーマットを識別するために使用されます。</target>
        </trans-unit>
        <trans-unit id="54ee935ffe75e122cea766dad6c91a9e0296a19a" translate="yes" xml:space="preserve">
          <source>Old Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff672978ce9c46d0d6fcdf9be4c27ae67c2b40b" translate="yes" xml:space="preserve">
          <source>Old algorithm names used before JDK 9 are supported in the &lt;a href=&quot;#%3Cinit%3E(javax.security.auth.kerberos.KerberosPrincipal,char%5B%5D,java.lang.String)&quot;&gt;&lt;code&gt;KerberosKey(KerberosPrincipal, char[], String)&lt;/code&gt;&lt;/a&gt; constructor in this implementation for compatibility reasons, which are &quot;DES&quot; (and null) for &quot;des-cbc-md5&quot;, &quot;DESede&quot; for &quot;des3-cbc-sha1-kd&quot;, &quot;ArcFourHmac&quot; for &quot;rc4-hmac&quot;, &quot;AES128&quot; for &quot;aes128-cts-hmac-sha1-96&quot;, and &quot;AES256&quot; for &quot;aes256-cts-hmac-sha1-96&quot;.</source>
          <target state="translated">JDK 9より前に使用されていた古いアルゴリズム名は、互換性の理由から、この実装の&lt;a href=&quot;#%3Cinit%3E(javax.security.auth.kerberos.KerberosPrincipal,char%5B%5D,java.lang.String)&quot;&gt; &lt;code&gt;KerberosKey(KerberosPrincipal, char[], String)&lt;/code&gt; &lt;/a&gt;コンストラクターでサポートされています。これは、「des-cbc-md5」、「DESede」の「DES」（およびnull）です。 「des3-cbc-sha1-kd」の場合、「rc4-hmac」の場合は「ArcFourHmac」、「aes128-cts-hmac-sha1-96」の場合は「AES128」、「aes256-cts-hmac-sha1」の場合は「AES256」 -96 &quot;。</target>
        </trans-unit>
        <trans-unit id="bb96a9f2e5e667586ca5dc1f7a78fab8fb064b6e" translate="yes" xml:space="preserve">
          <source>Older option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d79ca9b1592790f41f9180ff660633b6f6c5c9" translate="yes" xml:space="preserve">
          <source>Omitted clause functions are ignored. (Equivalently, they are deemed to have empty parameter lists.)</source>
          <target state="translated">省略された節関数は無視されます。(同等に、それらは空のパラメータリストを持っているとみなされます)。</target>
        </trans-unit>
        <trans-unit id="98ccc29895f61559eba0ebd405fe8464bba9ceb4" translate="yes" xml:space="preserve">
          <source>Omitting nodes from the logical view of a subtree can result in a structure that is substantially different from the same subtree in the complete, unfiltered document. Nodes that are siblings in the &lt;code&gt;TreeWalker&lt;/code&gt; view may be children of different, widely separated nodes in the original view. For instance, consider a &lt;code&gt;NodeFilter&lt;/code&gt; that skips all nodes except for Text nodes and the root node of a document. In the logical view that results, all text nodes will be siblings and appear as direct children of the root node, no matter how deeply nested the structure of the original document.</source>
          <target state="translated">サブツリーの論理ビューからノードを省略すると、完全なフィルタリングされていないドキュメント内の同じサブツリーとは大幅に異なる構造になる可能性があります。 &lt;code&gt;TreeWalker&lt;/code&gt; ビューの兄弟であるノードは、元のビューでは大きく分離された異なるノードの子である可能性があります。たとえば、テキストノードとドキュメントのルートノードを除くすべてのノードをスキップする &lt;code&gt;NodeFilter&lt;/code&gt; について考えてみます。結果の論理ビューでは、元のドキュメントの構造がどれほど深くネストされていても、すべてのテキストノードが兄弟になり、ルートノードの直接の子として表示されます。</target>
        </trans-unit>
        <trans-unit id="122f7ac106d520560edb0975f069fc4455ffc583" translate="yes" xml:space="preserve">
          <source>On Linux, the &lt;code&gt;MAP_SYNC&lt;/code&gt; and &lt;code&gt;
 MAP_SHARED_VALIDATE&lt;/code&gt; flags are specified to &lt;code&gt;mmap&lt;/code&gt; when mapping the file into memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232c0c0993bc881715ba599b9b67f06ae810f7f5" translate="yes" xml:space="preserve">
          <source>On UNIX systems the alphabetic case of &lt;code&gt;name&lt;/code&gt; is typically significant, while on Microsoft Windows systems it is typically not. For example, the expression &lt;code&gt;System.getenv(&quot;FOO&quot;).equals(System.getenv(&quot;foo&quot;))&lt;/code&gt; is likely to be true on Microsoft Windows.</source>
          <target state="translated">UNIXシステムでのアルファベットの大文字小文字 &lt;code&gt;name&lt;/code&gt; 、Microsoft Windowsシステム上で、それは一般的ではないが、一般的に重要です。たとえば、式 &lt;code&gt;System.getenv(&quot;FOO&quot;).equals(System.getenv(&quot;foo&quot;))&lt;/code&gt; は、Microsoft Windowsではtrueである可能性があります。</target>
        </trans-unit>
        <trans-unit id="8540232f9031df68bbc8f1919d8354f9fb5d4eed" translate="yes" xml:space="preserve">
          <source>On UNIX systems, it returns &lt;code&gt;&quot;\n&quot;&lt;/code&gt;; on Microsoft Windows systems it returns &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt;.</source>
          <target state="translated">UNIXシステムでは、 &lt;code&gt;&quot;\n&quot;&lt;/code&gt; 返します。Microsoft Windowsシステムでは &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="45a33954141c933778570a855dfefcbf2ae6f1da" translate="yes" xml:space="preserve">
          <source>On VM termination, a single unsolicited VMDeathEvent will always be sent with a &lt;a href=&quot;../request/eventrequest#suspendPolicy()&quot;&gt;&lt;code&gt;suspend policy&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;../request/eventrequest#SUSPEND_NONE&quot;&gt;&lt;code&gt;SUSPEND_NONE&lt;/code&gt;&lt;/a&gt;. Additional VMDeathEvents will be sent in the same event set if they are requested with a &lt;a href=&quot;../request/vmdeathrequest&quot;&gt;&lt;code&gt;VMDeathRequest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac5e1c52c598a03cd27121ae9aeba5087192731" translate="yes" xml:space="preserve">
          <source>On Windows, a file can appear in multiple folders, other than its parent directory in the filesystem.</source>
          <target state="translated">Windowsでは、ファイルはファイルシステムの親ディレクトリ以外の複数のフォルダに表示されることがあります。</target>
        </trans-unit>
        <trans-unit id="fb9fac545ac5b0edf4cd40280dce95442db9108f" translate="yes" xml:space="preserve">
          <source>On Windows, a file can appear in multiple folders, other than its parent directory in the filesystem. Folder could for example be the &quot;Desktop&quot; folder which is not the same as file.getParentFile().</source>
          <target state="translated">Windows では、ファイルはファイルシステム内の親ディレクトリ以外の複数のフォルダに表示されることがあります。フォルダーは、例えば &quot;Desktop&quot; フォルダーなどが考えられますが、これは file.getParentFile()と同じではありません。</target>
        </trans-unit>
        <trans-unit id="e459a4f772d6cb69a86727e188e201fb7ebe0b87" translate="yes" xml:space="preserve">
          <source>On any attempt to resolve the entry in the run-time constant pool indicated by &lt;code&gt;this_class&lt;/code&gt;, the symbolic reference is considered to be resolved to &lt;code&gt;C&lt;/code&gt; and resolution always succeeds immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d5df6ca1426823dad626b7a0ad499acd678cdb" translate="yes" xml:space="preserve">
          <source>On each logging call the Logger initially performs a cheap check of the request level (e.g., SEVERE or FINE) against the effective log level of the logger. If the request level is lower than the log level, the logging call returns immediately.</source>
          <target state="translated">各ロギング コールで、ロガーは最初に、ロガーの有効なログ レベルに対するリクエスト レベル (例:SEVERE や FINE)のチープ チェックを実行します。リクエスト レベルがログ レベルよりも低い場合、ロギング コールは直ちに戻ります。</target>
        </trans-unit>
        <trans-unit id="1f64d724cf2877dba41d4ea6a74e08ac2e662a81" translate="yes" xml:space="preserve">
          <source>On every call to &lt;code&gt;canImport&lt;/code&gt;, the &lt;code&gt;TransferSupport&lt;/code&gt; contains fresh state. As such, any properties set on it must be set on every call. Upon a drop, &lt;code&gt;canImport&lt;/code&gt; is called one final time before calling into &lt;code&gt;importData&lt;/code&gt;. Any state set on the &lt;code&gt;TransferSupport&lt;/code&gt; during that last call will be available in &lt;code&gt;importData&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;canImport&lt;/code&gt; を呼び出すたびに、 &lt;code&gt;TransferSupport&lt;/code&gt; には新しい状態が含まれます。そのため、それに設定されているプロパティはすべての呼び出しで設定する必要があります。ドロップすると、 &lt;code&gt;canImport&lt;/code&gt; は &lt;code&gt;importData&lt;/code&gt; を呼び出す前に最後にもう一度呼び出されます。その最後の呼び出し中に &lt;code&gt;TransferSupport&lt;/code&gt; に設定された状態は、 &lt;code&gt;importData&lt;/code&gt; で使用できます。</target>
        </trans-unit>
        <trans-unit id="a03949c2d89c4489d446e1ff0c7f85905a4413ca" translate="yes" xml:space="preserve">
          <source>On getting, no serialization is performed, the returned string does not contain any markup. No whitespace normalization is performed and the returned string does not contain the white spaces in element content (see the attribute &lt;code&gt;Text.isElementContentWhitespace&lt;/code&gt;). Similarly, on setting, no parsing is performed either, the input string is taken as pure textual content.</source>
          <target state="translated">取得時に、シリアル化は実行されず、返される文字列にはマークアップが含まれません。空白の正規化は実行されず、返される文字列には要素コンテンツの空白が含まれません（属性 &lt;code&gt;Text.isElementContentWhitespace&lt;/code&gt; を参照）。同様に、設定時に、解析も実行されず、入力文字列は純粋なテキストコンテンツと見なされます。</target>
        </trans-unit>
        <trans-unit id="851bf7822d836ae8425a0447bc4f86d79d80cfc3" translate="yes" xml:space="preserve">
          <source>On key release?</source>
          <target state="translated">キーリリースは?</target>
        </trans-unit>
        <trans-unit id="edcace2263423791ccc7fce7918b938adabb4aa8" translate="yes" xml:space="preserve">
          <source>On many devices the supported number of collated copies will be limited by the number of physical output bins on the device, and may be different from the number of uncollated copies which can be supported.</source>
          <target state="translated">多くのデバイスでは、サポートされる照合コピーの数はデバイス上の物理出力ビンの数によって制限され、サポートされることができる照合されていないコピーの数とは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="4bd0234528f52a9915ff343c4780f0afdeb1aea5" translate="yes" xml:space="preserve">
          <source>On many operating systems a process, such as a Java virtual machine, can be started in a manner that allows the process to inherit a channel from the entity that created the process. The manner in which this is done is system dependent, as are the possible entities to which the channel may be connected. For example, on UNIX systems, the Internet services daemon (</source>
          <target state="translated">多くのオペレーティングシステムでは、Java 仮想マシンなどのプロセスは、プロセスを作成したエンティティからチャネルを継承する方法で起動することができます。この方法は、チャネルが接続される可能性のあるエンティティと同様に、システムに依存します。例えば、UNIX システムでは、インターネットサービスデーモン (</target>
        </trans-unit>
        <trans-unit id="72b5d80466d6edf2be0d318877cf3e7067e502a2" translate="yes" xml:space="preserve">
          <source>On many platforms and file systems an entity requires appropriate access rights or permissions in order to access objects in a file system. The access rights are generally performed by checking the identity of the entity. For example, on implementations that use Access Control Lists (ACLs) to enforce privilege separation then a file in the file system may have an associated ACL that determines the access rights of identities specified in the ACL.</source>
          <target state="translated">多くのプラットフォームやファイルシステムでは、エンティティがファイルシステム内のオブジェクトにアクセスするために、適切なアクセス権や権限を必要とします。アクセス権は一般的に、エンティティの身元を確認することによって実行されます。例えば、アクセス制御リスト(ACL)を使用して特権分離を強制する実装では、ファイルシステム内のファイルは、ACLで指定されたIDのアクセス権を決定する関連ACLを持っているかもしれません。</target>
        </trans-unit>
        <trans-unit id="024d92e0b33adea5f0e7977c1c99bbda64151812" translate="yes" xml:space="preserve">
          <source>On platforms where the stacking order does not typically affect the focused window, this method will &lt;b&gt;probably&lt;/b&gt; leave the focused and active Windows unchanged.</source>
          <target state="translated">スタッキング順序は、通常フォーカスされたウィンドウには影響しないプラットフォームでは、この方法は、でしょう&lt;b&gt;、おそらく&lt;/b&gt;焦点を当て、アクティブなWindows変わらないまま。</target>
        </trans-unit>
        <trans-unit id="e3a796c0f8e97c2237846a5b99d3e17896a8f7e9" translate="yes" xml:space="preserve">
          <source>On retrieval, the default value of this attribute is the implementation specific default end-of-line sequence. DOM implementations should choose the default to match the usual convention for text files in the environment being used. Implementations must choose a default sequence that matches one of those allowed by XML 1.0 or XML 1.1, depending on the serialized content. Setting this attribute to &lt;code&gt;null&lt;/code&gt; will reset its value to the default value.</source>
          <target state="translated">取得時、この属性のデフォルト値は、実装固有のデフォルトの行末シーケンスです。DOM実装は、使用されている環境のテキストファイルの通常の規則に一致するデフォルトを選択する必要があります。実装では、シリアル化されたコンテンツに応じて、XML1.0またはXML1.1で許可されているシーケンスのいずれかに一致するデフォルトのシーケンスを選択する必要があります。この属性を &lt;code&gt;null&lt;/code&gt; に設定すると、その値がデフォルト値にリセットされます。</target>
        </trans-unit>
        <trans-unit id="b34292a88a101f55a02d0744c3ca274828631fb8" translate="yes" xml:space="preserve">
          <source>On retrieval, the value of the attribute is returned as a string.</source>
          <target state="translated">検索時には、属性の値が文字列として返されます。</target>
        </trans-unit>
        <trans-unit id="fa0725825c25fcfec84557d57f63e3df01d91184" translate="yes" xml:space="preserve">
          <source>On retrieval, the value of the attribute is returned as a string. Character and general entity references are replaced with their values. See also the method &lt;code&gt;getAttribute&lt;/code&gt; on the &lt;code&gt;Element&lt;/code&gt; interface.</source>
          <target state="translated">取得時に、属性の値が文字列として返されます。文字および一般エンティティの参照は、それらの値に置き換えられます。また、メソッドの参照 &lt;code&gt;getAttribute&lt;/code&gt; 上の &lt;code&gt;Element&lt;/code&gt; のインターフェイスを。</target>
        </trans-unit>
        <trans-unit id="3177bf09a4050209ced0e2c771f73dc651d24d64" translate="yes" xml:space="preserve">
          <source>On setting, this creates a &lt;code&gt;Text&lt;/code&gt; node with the unparsed contents of the string, i.e. any characters that an XML processor would recognize as markup are instead treated as literal text. See also the method &lt;code&gt;Element.setAttribute()&lt;/code&gt;.</source>
          <target state="translated">設定すると、文字列の未解析の内容を含む &lt;code&gt;Text&lt;/code&gt; ノードが作成されます。つまり、XMLプロセッサがマークアップとして認識する文字は、代わりにリテラルテキストとして扱われます。 &lt;code&gt;Element.setAttribute()&lt;/code&gt; メソッドも参照してください。</target>
        </trans-unit>
        <trans-unit id="cc6eddfcd60298338272e6a8b03154a5f8213d8d" translate="yes" xml:space="preserve">
          <source>On some operating systems it may not be possible to remove a file when it is open and in use by this Java virtual machine or other programs.</source>
          <target state="translated">オペレーティング・システムによっては、このJava仮想マシンや他のプログラムでファイルを開いて使用している場合、ファイルを削除できない場合があります。</target>
        </trans-unit>
        <trans-unit id="e5881b1736c49efe5c7206c5cd94698903d56268" translate="yes" xml:space="preserve">
          <source>On some platforms the system tray may not be present or may not be supported, in this case &lt;a href=&quot;#getSystemTray()&quot;&gt;&lt;code&gt;getSystemTray()&lt;/code&gt;&lt;/a&gt; throws &lt;a href=&quot;../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;. To detect whether the system tray is supported, use &lt;a href=&quot;#isSupported()&quot;&gt;&lt;code&gt;isSupported()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一部のプラットフォームでは、システムトレイが存在しないか、サポートされていない可能性があります。この場合、&lt;a href=&quot;#getSystemTray()&quot;&gt; &lt;code&gt;getSystemTray()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; を&lt;/a&gt;スローします。システムトレイがサポートされているかどうかを検出するには、&lt;a href=&quot;#isSupported()&quot;&gt; &lt;code&gt;isSupported()&lt;/code&gt; を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="53d29355ffc203d01f71cd51fbdb8fc5ccc4d48d" translate="yes" xml:space="preserve">
          <source>On some platforms, native applications are free to change the arguments array after startup and this method may only show the changed values.</source>
          <target state="translated">いくつかのプラットフォームでは、ネイティブアプリケーションは起動後に引数配列を自由に変更することができ、このメソッドは変更された値のみを表示することができます。</target>
        </trans-unit>
        <trans-unit id="1707e8fc59e4af68b5318028fe70642c9ad64697" translate="yes" xml:space="preserve">
          <source>On some platforms, specifying a higher value for the &lt;code&gt;stackSize&lt;/code&gt; parameter may allow a thread to achieve greater recursion depth before throwing a &lt;a href=&quot;stackoverflowerror&quot;&gt;&lt;code&gt;StackOverflowError&lt;/code&gt;&lt;/a&gt;. Similarly, specifying a lower value may allow a greater number of threads to exist concurrently without throwing an &lt;a href=&quot;outofmemoryerror&quot;&gt;&lt;code&gt;OutOfMemoryError&lt;/code&gt;&lt;/a&gt; (or other internal error). The details of the relationship between the value of the &lt;code&gt;stackSize&lt;/code&gt; parameter and the maximum recursion depth and concurrency level are platform-dependent. &lt;b&gt;On some platforms, the value of the &lt;code&gt;stackSize&lt;/code&gt; parameter may have no effect whatsoever.&lt;/b&gt;</source>
          <target state="translated">一部のプラットフォームでは、 &lt;code&gt;stackSize&lt;/code&gt; パラメータに高い値を指定すると、スレッドが&lt;a href=&quot;stackoverflowerror&quot;&gt; &lt;code&gt;StackOverflowError&lt;/code&gt; を&lt;/a&gt;スローする前に再帰の深さを大きくできる場合があります。同様に、低い値を指定すると、&lt;a href=&quot;outofmemoryerror&quot;&gt; &lt;code&gt;OutOfMemoryError&lt;/code&gt; &lt;/a&gt;（またはその他の内部エラー）をスローすることなく、より多くのスレッドを同時に存在させることができます。 &lt;code&gt;stackSize&lt;/code&gt; パラメータの値と最大再帰の深さおよび同時実行レベルとの関係の詳細は、プラットフォームに依存します。&lt;b&gt;一部のプラットフォームでは、 &lt;code&gt;stackSize&lt;/code&gt; パラメータの値がまったく影響しない場合があります。&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="77e681894db6c889d58a3a2929aa79a177e765c6" translate="yes" xml:space="preserve">
          <source>On some systems, acquiring a mandatory lock on a region of a file prevents that region from being &lt;a href=&quot;filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt;&lt;code&gt;&lt;i&gt;mapped into memory&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, and vice versa. Programs that combine locking and mapping should be prepared for this combination to fail.</source>
          <target state="translated">一部のシステムでは、ファイルの領域で必須ロックを取得すると、その領域&lt;a href=&quot;filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt; &lt;code&gt;&lt;i&gt;mapped into memory&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;に&lt;i&gt;マップされ&lt;/i&gt;なくなり、その逆も同様です。ロックとマッピングを組み合わせたプログラムは、この組み合わせが失敗するように準備する必要があります。</target>
        </trans-unit>
        <trans-unit id="b6529ca18bc4f8890043fa10e940b4821d51cdca" translate="yes" xml:space="preserve">
          <source>On some systems, acquiring a mandatory lock on a region of a file prevents that region from being &lt;a href=&quot;filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt;&lt;code&gt;&lt;i&gt;mapped into memory&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, and vice versa. Programs that combine locking and mapping should be prepared for this combination to fail.</source>
          <target state="translated">一部のシステムでは、ファイルの領域に必須のロックを取得すると、その領域&lt;a href=&quot;filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt; &lt;code&gt;&lt;i&gt;mapped into memory&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;に&lt;i&gt;マッピングされなくなります&lt;/i&gt;（その逆も同様）。ロックとマッピングを組み合わせるプログラムは、この組み合わせが失敗するように準備する必要があります。</target>
        </trans-unit>
        <trans-unit id="0714d700f0fd7c6db4138a7f92cdf74c381bac3a" translate="yes" xml:space="preserve">
          <source>On some systems, closing a channel releases all locks held by the Java virtual machine on the underlying file regardless of whether the locks were acquired via that channel or via another channel open on the same file. It is strongly recommended that, within a program, a unique channel be used to acquire all locks on any given file.</source>
          <target state="translated">一部のシステムでは、チャネルを閉じると、そのチャネルを介して取得したか、同じファイル上で開いている別のチャネルを介して取得したかにかかわらず、その下のファイル上で Java 仮想マシンが保持しているすべてのロックが解放されます。プログラム内では、任意のファイルのすべてのロックを取得するために、一意のチャネルを使用することを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="9f13c2b03997e45bdee84ec9f6d0af9e1ffb5c00" translate="yes" xml:space="preserve">
          <source>On startup, the value is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">起動時に、値は &lt;code&gt;true&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="a638283a8477546e6d0afc175d9a48859c0f17af" translate="yes" xml:space="preserve">
          <source>On success, the position of the given &lt;code&gt;output&lt;/code&gt; byte buffer will be advanced by as many bytes as were produced by the operation, which is equal to the number returned by this method.</source>
          <target state="translated">成功すると、指定された &lt;code&gt;output&lt;/code&gt; バイトバッファの位置は、操作によって生成されたバイト数だけ進められます。これは、このメソッドによって返される数と同じです。</target>
        </trans-unit>
        <trans-unit id="67127d568e6b609d73fb12acc209c8cafd0dd8ef" translate="yes" xml:space="preserve">
          <source>On success, the position of the given &lt;code&gt;output&lt;/code&gt; byte buffer will be advanced by as many bytes as were produced by the operation, which is equal to the number returned by this method. Note that the position of the &lt;code&gt;output&lt;/code&gt; buffer will be advanced even in the event that a &lt;a href=&quot;dataformatexception&quot;&gt;&lt;code&gt;DataFormatException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">成功すると、指定された &lt;code&gt;output&lt;/code&gt; バイトバッファの位置は、操作によって生成されたバイト数だけ進められます。これは、このメソッドによって返される数と同じです。&lt;a href=&quot;dataformatexception&quot;&gt; &lt;code&gt;DataFormatException&lt;/code&gt; &lt;/a&gt;がスローされた場合でも、 &lt;code&gt;output&lt;/code&gt; バッファーの位置が進められることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9f2a06dd3e9907f63132e8432910199ee3677f5a" translate="yes" xml:space="preserve">
          <source>On the other hand, if a DRBG implementation does not contain a constructor that has an &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; argument (not recommended), it can only be chosen by a &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; without a &lt;code&gt;SecureRandomParameters&lt;/code&gt; parameter, but will not be chosen if a &lt;code&gt;getInstance&lt;/code&gt; method with a &lt;code&gt;SecureRandomParameters&lt;/code&gt; parameter is called. If implemented this way, its &lt;a href=&quot;securerandom#getParameters()&quot;&gt;&lt;code&gt;SecureRandom.getParameters()&lt;/code&gt;&lt;/a&gt; must return &lt;code&gt;null&lt;/code&gt;, and it does not need to implement either &lt;a href=&quot;securerandomspi#engineNextBytes(byte%5B%5D,java.security.SecureRandomParameters)&quot;&gt;&lt;code&gt;SecureRandomSpi.engineNextBytes(byte[], SecureRandomParameters)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;securerandomspi#engineReseed(java.security.SecureRandomParameters)&quot;&gt;&lt;code&gt;SecureRandomSpi.engineReseed(SecureRandomParameters)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一方、DRBG実装に &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; 引数を持つコンストラクターが含まれていない場合（非推奨）、 &lt;code&gt;SecureRandomParameters&lt;/code&gt; パラメーターのない &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; によってのみ選択できますが、次の場合は選択されません。 &lt;code&gt;SecureRandomParameters&lt;/code&gt; パラメーターを持つ &lt;code&gt;getInstance&lt;/code&gt; メソッドが呼び出されます。この方法で実装する場合、その&lt;a href=&quot;securerandom#getParameters()&quot;&gt; &lt;code&gt;SecureRandom.getParameters()&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;null&lt;/code&gt; を返す必要があり、&lt;a href=&quot;securerandomspi#engineNextBytes(byte%5B%5D,java.security.SecureRandomParameters)&quot;&gt; &lt;code&gt;SecureRandomSpi.engineNextBytes(byte[], SecureRandomParameters)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;securerandomspi#engineReseed(java.security.SecureRandomParameters)&quot;&gt; &lt;code&gt;SecureRandomSpi.engineReseed(SecureRandomParameters)&lt;/code&gt; &lt;/a&gt;を実装する必要はありません。</target>
        </trans-unit>
        <trans-unit id="de159c7cf958aa1a47054cd99e69c6cd42f170f0" translate="yes" xml:space="preserve">
          <source>On the other hand, the 800-90Ar1 specification does have some configurable options, such as:</source>
          <target state="translated">一方で、800-90Ar1仕様では、いくつかの設定可能なオプションが用意されています。</target>
        </trans-unit>
        <trans-unit id="854932a1809fd6314af1fac1dbf30521c427cc1c" translate="yes" xml:space="preserve">
          <source>On the other hand, the following do not affect equality: the &lt;code&gt;ownerDocument&lt;/code&gt;, &lt;code&gt;baseURI&lt;/code&gt;, and &lt;code&gt;parentNode&lt;/code&gt; attributes, the &lt;code&gt;specified&lt;/code&gt; attribute for &lt;code&gt;Attr&lt;/code&gt; nodes, the &lt;code&gt;schemaTypeInfo&lt;/code&gt; attribute for &lt;code&gt;Attr&lt;/code&gt; and &lt;code&gt;Element&lt;/code&gt; nodes, the &lt;code&gt;Text.isElementContentWhitespace&lt;/code&gt; attribute for &lt;code&gt;Text&lt;/code&gt; nodes, as well as any user data or event listeners registered on the nodes.</source>
          <target state="translated">一方、次のように平等に影響を与えません： &lt;code&gt;ownerDocument&lt;/code&gt; 、 &lt;code&gt;baseURI&lt;/code&gt; 、と &lt;code&gt;parentNode&lt;/code&gt; 、属性 &lt;code&gt;specified&lt;/code&gt; の属性 &lt;code&gt;Attr&lt;/code&gt; ノードを、 &lt;code&gt;schemaTypeInfo&lt;/code&gt; のための属性 &lt;code&gt;Attr&lt;/code&gt; と &lt;code&gt;Element&lt;/code&gt; ノード、 &lt;code&gt;Text.isElementContentWhitespace&lt;/code&gt; のための属性 &lt;code&gt;Text&lt;/code&gt; ノードだけでなくいずれかのようなノードに登録されているユーザーデータまたはイベントリスナー。</target>
        </trans-unit>
        <trans-unit id="283588660a3934587690d8e1b3b6529e92ee877f" translate="yes" xml:space="preserve">
          <source>On-demand construction</source>
          <target state="translated">オンデマンド工事</target>
        </trans-unit>
        <trans-unit id="d158b76cb30297096f97ea3185a146c19c0aa713" translate="yes" xml:space="preserve">
          <source>Once &amp;lt;/html&amp;gt; is encountered, the Actions are no longer notified.</source>
          <target state="translated">&amp;lt;/ html&amp;gt;が検出されると、アクションは通知されなくなります。</target>
        </trans-unit>
        <trans-unit id="88fb78745f80637dec92b6c9686ce7d188a45ac7" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;end&lt;/code&gt; has been invoked on an &lt;code&gt;UndoManager&lt;/code&gt; the superclass behavior is used for all &lt;code&gt;UndoableEdit&lt;/code&gt; methods. Refer to &lt;code&gt;CompoundEdit&lt;/code&gt; for more details on its behavior.</source>
          <target state="translated">いったん &lt;code&gt;end&lt;/code&gt; に呼び出された &lt;code&gt;UndoManager&lt;/code&gt; スーパークラスの振る舞いは、すべてのために使用されている &lt;code&gt;UndoableEdit&lt;/code&gt; 方法。その動作の詳細については、 &lt;code&gt;CompoundEdit&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="cd0ec02472f84a817ffbf2b5519b9e40e85d2d53" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;CertPathBuilder&lt;/code&gt; object has been created, certification paths can be constructed by calling the &lt;a href=&quot;#build(java.security.cert.CertPathParameters)&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; method and passing it an algorithm-specific set of parameters. If successful, the result (including the &lt;code&gt;CertPath&lt;/code&gt; that was built) is returned in an object that implements the &lt;code&gt;CertPathBuilderResult&lt;/code&gt; interface.</source>
          <target state="translated">一度 &lt;code&gt;CertPathBuilder&lt;/code&gt; オブジェクトが作成されている、証明書パスを呼び出すことによって構築することができる&lt;a href=&quot;#build(java.security.cert.CertPathParameters)&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt;方法をし、それをパラメータのアルゴリズム固有のセットを渡します。成功すると、結果（ビルドされた &lt;code&gt;CertPath&lt;/code&gt; を含む）が &lt;code&gt;CertPathBuilderResult&lt;/code&gt; インターフェイスを実装するオブジェクトに返されます。</target>
        </trans-unit>
        <trans-unit id="58378f9e086bd00657611f0ada9c83f32fb6eb1b" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;CertPathBuilder&lt;/code&gt; object has been created, certification paths can be constructed by calling the &lt;a href=&quot;certpathbuilder#build-java.security.cert.CertPathParameters-&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; method and passing it an algorithm-specific set of parameters. If successful, the result (including the &lt;code&gt;CertPath&lt;/code&gt; that was built) is returned in an object that implements the &lt;code&gt;CertPathBuilderResult&lt;/code&gt; interface.</source>
          <target state="translated">一度 &lt;code&gt;CertPathBuilder&lt;/code&gt; オブジェクトが作成されている、証明書パスを呼び出すことによって構築することができる&lt;a href=&quot;certpathbuilder#build-java.security.cert.CertPathParameters-&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt;方法をし、それをパラメータのアルゴリズム固有のセットを渡します。成功した場合、結果（構築された &lt;code&gt;CertPath&lt;/code&gt; を含む）は、 &lt;code&gt;CertPathBuilderResult&lt;/code&gt; インターフェースを実装するオブジェクトで返されます。</target>
        </trans-unit>
        <trans-unit id="e3d0636867cb3d10bf7678ca02bddb1ad386454e" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;CertPathValidator&lt;/code&gt; object has been created, it can be used to validate certification paths by calling the &lt;a href=&quot;#validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)&quot;&gt;&lt;code&gt;validate&lt;/code&gt;&lt;/a&gt; method and passing it the &lt;code&gt;CertPath&lt;/code&gt; to be validated and an algorithm-specific set of parameters. If successful, the result is returned in an object that implements the &lt;code&gt;CertPathValidatorResult&lt;/code&gt; interface.</source>
          <target state="translated">一旦 &lt;code&gt;CertPathValidator&lt;/code&gt; オブジェクトが作成されている、それが呼び出すことによって、検証証明書パスに使用することができる&lt;a href=&quot;#validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)&quot;&gt; &lt;code&gt;validate&lt;/code&gt; &lt;/a&gt;方法と、それを通過する &lt;code&gt;CertPath&lt;/code&gt; 検証し、パラメータのアルゴリズム固有設定します。成功すると、 &lt;code&gt;CertPathValidatorResult&lt;/code&gt; インターフェイスを実装するオブジェクトに結果が返されます。</target>
        </trans-unit>
        <trans-unit id="ce4e4b1fde9c697ca0523591f6b70feca268e589" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;CertPathValidator&lt;/code&gt; object has been created, it can be used to validate certification paths by calling the &lt;a href=&quot;certpathvalidator#validate-java.security.cert.CertPath-java.security.cert.CertPathParameters-&quot;&gt;&lt;code&gt;validate&lt;/code&gt;&lt;/a&gt; method and passing it the &lt;code&gt;CertPath&lt;/code&gt; to be validated and an algorithm-specific set of parameters. If successful, the result is returned in an object that implements the &lt;code&gt;CertPathValidatorResult&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;CertPathValidator&lt;/code&gt; オブジェクトを作成したら、&lt;a href=&quot;certpathvalidator#validate-java.security.cert.CertPath-java.security.cert.CertPathParameters-&quot;&gt; &lt;code&gt;validate&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、検証する &lt;code&gt;CertPath&lt;/code&gt; とアルゴリズム固有のパラメーターセットを渡すことで、証明書パスを検証できます。成功した場合、結果は &lt;code&gt;CertPathValidatorResult&lt;/code&gt; インターフェースを実装するオブジェクトで返されます。</target>
        </trans-unit>
        <trans-unit id="27e5a479774c39e31a32dc168ac987965aea2268" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;JFormattedTextField&lt;/code&gt; has been created, you can listen for editing changes by way of adding a &lt;code&gt;PropertyChangeListener&lt;/code&gt; and listening for &lt;code&gt;PropertyChangeEvent&lt;/code&gt;s with the property name &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">一度 &lt;code&gt;JFormattedTextField&lt;/code&gt; 作成されている、あなたは追加することによって変更を編集するための聞くことができる &lt;code&gt;PropertyChangeListener&lt;/code&gt; をしてのリスニング &lt;code&gt;PropertyChangeEvent&lt;/code&gt; のプロパティ名と &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9730cbdc7e23b0b18d0007553ab6f43731b75b33" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;PKIXParameters&lt;/code&gt; object has been created, other parameters can be specified (by calling &lt;a href=&quot;#setInitialPolicies(java.util.Set)&quot;&gt;&lt;code&gt;setInitialPolicies&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#setDate(java.util.Date)&quot;&gt;&lt;code&gt;setDate&lt;/code&gt;&lt;/a&gt;, for instance) and then the &lt;code&gt;PKIXParameters&lt;/code&gt; is passed along with the &lt;code&gt;CertPath&lt;/code&gt; to be validated to &lt;a href=&quot;certpathvalidator#validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)&quot;&gt;&lt;code&gt;CertPathValidator.validate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一旦 &lt;code&gt;PKIXParameters&lt;/code&gt; ののオブジェクトが作成され、他のパラメータは、（呼び出しで指定することができる&lt;a href=&quot;#setInitialPolicies(java.util.Set)&quot;&gt; &lt;code&gt;setInitialPolicies&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;#setDate(java.util.Date)&quot;&gt; &lt;code&gt;setDate&lt;/code&gt; &lt;/a&gt;、次いで、例えば、） &lt;code&gt;PKIXParameters&lt;/code&gt; のが一緒に渡される &lt;code&gt;CertPath&lt;/code&gt; を検証する&lt;a href=&quot;certpathvalidator#validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)&quot;&gt; &lt;code&gt;CertPathValidator.validate&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5a9bd12321ed38288ee0b829c8e6f5e6eb500fc" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;PKIXParameters&lt;/code&gt; object has been created, other parameters can be specified (by calling &lt;a href=&quot;pkixparameters#setInitialPolicies-java.util.Set-&quot;&gt;&lt;code&gt;setInitialPolicies&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pkixparameters#setDate-java.util.Date-&quot;&gt;&lt;code&gt;setDate&lt;/code&gt;&lt;/a&gt;, for instance) and then the &lt;code&gt;PKIXParameters&lt;/code&gt; is passed along with the &lt;code&gt;CertPath&lt;/code&gt; to be validated to &lt;a href=&quot;certpathvalidator#validate-java.security.cert.CertPath-java.security.cert.CertPathParameters-&quot;&gt;&lt;code&gt;CertPathValidator.validate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一旦 &lt;code&gt;PKIXParameters&lt;/code&gt; ののオブジェクトが作成され、他のパラメータは、（呼び出しで指定することができる&lt;a href=&quot;pkixparameters#setInitialPolicies-java.util.Set-&quot;&gt; &lt;code&gt;setInitialPolicies&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;pkixparameters#setDate-java.util.Date-&quot;&gt; &lt;code&gt;setDate&lt;/code&gt; &lt;/a&gt;、次いで、例えば、） &lt;code&gt;PKIXParameters&lt;/code&gt; のが一緒に渡される &lt;code&gt;CertPath&lt;/code&gt; を検証する&lt;a href=&quot;certpathvalidator#validate-java.security.cert.CertPath-java.security.cert.CertPathParameters-&quot;&gt; &lt;code&gt;CertPathValidator.validate&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ace4e6d79e240a49fce4be793366ad7ba7ddd85" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;TransformService&lt;/code&gt; has been created, it can be used to process &lt;code&gt;Transform&lt;/code&gt; or &lt;code&gt;CanonicalizationMethod&lt;/code&gt; objects. If the &lt;code&gt;Transform&lt;/code&gt; or &lt;code&gt;CanonicalizationMethod&lt;/code&gt; exists in XML form (for example, when validating an existing &lt;code&gt;XMLSignature&lt;/code&gt;), the &lt;a href=&quot;#init(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)&quot;&gt;&lt;code&gt;init(XMLStructure, XMLCryptoContext)&lt;/code&gt;&lt;/a&gt; method must be first called to initialize the transform and provide document context (even if there are no parameters). Alternatively, if the &lt;code&gt;Transform&lt;/code&gt; or &lt;code&gt;CanonicalizationMethod&lt;/code&gt; is being created from scratch, the &lt;a href=&quot;#init(javax.xml.crypto.dsig.spec.TransformParameterSpec)&quot;&gt;&lt;code&gt;init(TransformParameterSpec)&lt;/code&gt;&lt;/a&gt; method is called to initialize the transform with parameters and the &lt;a href=&quot;#marshalParams(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)&quot;&gt;&lt;code&gt;marshalParams&lt;/code&gt;&lt;/a&gt; method is called to marshal the parameters to XML and provide the transform with document context. Finally, the &lt;a href=&quot;transform#transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt; method is called to perform the transformation.</source>
          <target state="translated">一度 &lt;code&gt;TransformService&lt;/code&gt; 作成されている、処理するために使用することができる &lt;code&gt;Transform&lt;/code&gt; または &lt;code&gt;CanonicalizationMethod&lt;/code&gt; には、オブジェクト。 &lt;code&gt;Transform&lt;/code&gt; または &lt;code&gt;CanonicalizationMethod&lt;/code&gt; がXML形式で存在する場合（たとえば、既存の &lt;code&gt;XMLSignature&lt;/code&gt; を検証する場合）、最初に&lt;a href=&quot;#init(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)&quot;&gt; &lt;code&gt;init(XMLStructure, XMLCryptoContext)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、変換を初期化し、ドキュメントコンテキストを提供する必要があります（パラメーターがない場合でも）。または、 &lt;code&gt;Transform&lt;/code&gt; または &lt;code&gt;CanonicalizationMethod&lt;/code&gt; を最初から作成する場合は、&lt;a href=&quot;#init(javax.xml.crypto.dsig.spec.TransformParameterSpec)&quot;&gt; &lt;code&gt;init(TransformParameterSpec)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、パラメーターと&lt;a href=&quot;#marshalParams(javax.xml.crypto.XMLStructure,javax.xml.crypto.XMLCryptoContext)&quot;&gt; &lt;code&gt;marshalParams&lt;/code&gt; &lt;/a&gt;メソッドは、パラメーターをXMLにマーシャリングし、変換にドキュメントコンテキストを提供するために呼び出されます。最後に、&lt;a href=&quot;transform#transform(javax.xml.crypto.Data,javax.xml.crypto.XMLCryptoContext)&quot;&gt; &lt;code&gt;transform&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されて変換が実行されます。</target>
        </trans-unit>
        <trans-unit id="4f81df5332360604134c364e0e2f34fcee292e81" translate="yes" xml:space="preserve">
          <source>Once a Policy instance has been installed (either by default, or by calling &lt;code&gt;setPolicy&lt;/code&gt;), the Java runtime invokes its &lt;code&gt;implies&lt;/code&gt; method when it needs to determine whether executing code (encapsulated in a ProtectionDomain) can perform SecurityManager-protected operations. How a Policy object retrieves its policy data is up to the Policy implementation itself. The policy data may be stored, for example, in a flat ASCII file, in a serialized binary file of the Policy class, or in a database.</source>
          <target state="translated">ポリシーインスタンスは、（デフォルトで、または呼び出すことによってのいずれかでインストールされた後 &lt;code&gt;setPolicy&lt;/code&gt; を）、Javaランタイムは、が呼び出す &lt;code&gt;implies&lt;/code&gt; 、それは（のProtectionDomainにカプセル化）を実行するコードは、セキュリティマネージャ保護操作を実行できるかどうかを判断する必要がある場合の方法を。 Policyオブジェクトがポリシーデータを取得する方法は、Policyの実装自体に依存します。ポリシーデータは、たとえば、フラットASCIIファイル、Policyクラスのシリアル化されたバイナリファイル、またはデータベースに保存できます。</target>
        </trans-unit>
        <trans-unit id="abbbf86942235cdaf7801e4b9f5861be3f9b36de" translate="yes" xml:space="preserve">
          <source>Once a connector server has been stopped, it cannot be started again.</source>
          <target state="translated">一度停止したコネクタサーバは、再度起動することはできません。</target>
        </trans-unit>
        <trans-unit id="1d244dbc5534e867507523c9cfacd6b833921ea3" translate="yes" xml:space="preserve">
          <source>Once a directory stream is closed, then further access to the directory, using the &lt;code&gt;Iterator&lt;/code&gt;, behaves as if the end of stream has been reached. Due to read-ahead, the &lt;code&gt;Iterator&lt;/code&gt; may return one or more elements after the directory stream has been closed. Once these buffered elements have been read, then subsequent calls to the &lt;code&gt;hasNext&lt;/code&gt; method returns &lt;code&gt;false&lt;/code&gt;, and subsequent calls to the &lt;code&gt;next&lt;/code&gt; method will throw &lt;code&gt;NoSuchElementException&lt;/code&gt;.</source>
          <target state="translated">ディレクトリストリームが閉じられると、 &lt;code&gt;Iterator&lt;/code&gt; を使用してディレクトリにさらにアクセスすると、ストリームの終わりに到達したかのように動作します。先読みのため、ディレクトリストリームが閉じられた後、 &lt;code&gt;Iterator&lt;/code&gt; は1つ以上の要素を返す場合があります。これらのバッファリングされた要素が読み取られると、次に &lt;code&gt;hasNext&lt;/code&gt; メソッドを呼び出すと &lt;code&gt;false&lt;/code&gt; が返され、 &lt;code&gt;next&lt;/code&gt; メソッドを呼び出すと &lt;code&gt;NoSuchElementException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="f2a78494659603e5a806713bcb14546998fa5c8e" translate="yes" xml:space="preserve">
          <source>Once a file system created by this provider is &lt;a href=&quot;../filesystem#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt; it is provider-dependent if this method returns a reference to the closed file system or throws &lt;a href=&quot;../filesystemnotfoundexception&quot;&gt;&lt;code&gt;FileSystemNotFoundException&lt;/code&gt;&lt;/a&gt;. If the provider allows a new file system to be created with the same URI as a file system it previously created then this method throws the exception if invoked after the file system is closed (and before a new instance is created by the &lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="translated">このプロバイダーによって作成されたファイルシステムが&lt;a href=&quot;../filesystem#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;られると、このメソッドが閉じられたファイルシステムへの参照を返すか、&lt;a href=&quot;../filesystemnotfoundexception&quot;&gt; &lt;code&gt;FileSystemNotFoundException&lt;/code&gt; を&lt;/a&gt;スローするかは、プロバイダーに依存します。プロバイダーが、以前に作成したファイルシステムと同じURIで新しいファイルシステムを作成することを許可している場合、ファイルシステムが閉じられた後（および&lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt; &lt;code&gt;newFileSystem&lt;/code&gt; &lt;/a&gt;メソッドによって新しいインスタンスが作成される前）に呼び出されると、このメソッドは例外をスローします。</target>
        </trans-unit>
        <trans-unit id="becd48649f138f6042350a6a58a87ca7a4518570" translate="yes" xml:space="preserve">
          <source>Once a file system created by this provider is &lt;a href=&quot;../filesystem#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt; it is provider-dependent if this method returns a reference to the closed file system or throws &lt;a href=&quot;../filesystemnotfoundexception&quot;&gt;&lt;code&gt;FileSystemNotFoundException&lt;/code&gt;&lt;/a&gt;. If the provider allows a new file system to be created with the same URI as a file system it previously created then this method throws the exception if invoked after the file system is closed (and before a new instance is created by the &lt;a href=&quot;filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="translated">このプロバイダーによって作成されたファイルシステムが&lt;a href=&quot;../filesystem#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;られると、このメソッドが閉じたファイルシステムへの参照を返すか、&lt;a href=&quot;../filesystemnotfoundexception&quot;&gt; &lt;code&gt;FileSystemNotFoundException&lt;/code&gt; を&lt;/a&gt;スローするかは、プロバイダーに依存します。プロバイダーが、以前に作成したファイルシステムと同じURIで新しいファイルシステムを作成することを許可している場合、このメソッドは、ファイルシステムが閉じられた後で（&lt;a href=&quot;filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem&lt;/code&gt; &lt;/a&gt;メソッドによって新しいインスタンスが作成される前に）呼び出されると、例外をスローします。</target>
        </trans-unit>
        <trans-unit id="694ccc5a7502c8af87bc77476256cfc294f78ca1" translate="yes" xml:space="preserve">
          <source>Once a file system created by this provider is &lt;a href=&quot;filesystem#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt; it is provider-dependent if this method returns a reference to the closed file system or throws &lt;a href=&quot;filesystemnotfoundexception&quot;&gt;&lt;code&gt;FileSystemNotFoundException&lt;/code&gt;&lt;/a&gt;. If the provider allows a new file system to be created with the same URI as a file system it previously created then this method throws the exception if invoked after the file system is closed (and before a new instance is created by the &lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="translated">このプロバイダーによって作成されたファイルシステムが&lt;a href=&quot;filesystem#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;られると、このメソッドが閉じられたファイルシステムへの参照を返すか、&lt;a href=&quot;filesystemnotfoundexception&quot;&gt; &lt;code&gt;FileSystemNotFoundException&lt;/code&gt; を&lt;/a&gt;スローするかは、プロバイダーに依存します。プロバイダーが、以前に作成したファイルシステムと同じURIで新しいファイルシステムを作成することを許可している場合、ファイルシステムが閉じられた後（および&lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt; &lt;code&gt;newFileSystem&lt;/code&gt; &lt;/a&gt;メソッドによって新しいインスタンスが作成される前）に呼び出されると、このメソッドは例外をスローします。</target>
        </trans-unit>
        <trans-unit id="014e640768fe01678f1fc730c556144f2e6f1405" translate="yes" xml:space="preserve">
          <source>Once a file system created by this provider is &lt;a href=&quot;filesystem#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt; it is provider-dependent if this method returns a reference to the closed file system or throws &lt;a href=&quot;filesystemnotfoundexception&quot;&gt;&lt;code&gt;FileSystemNotFoundException&lt;/code&gt;&lt;/a&gt;. If the provider allows a new file system to be created with the same URI as a file system it previously created then this method throws the exception if invoked after the file system is closed (and before a new instance is created by the &lt;a href=&quot;filesystems#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="translated">このプロバイダーによって作成されたファイルシステムが&lt;a href=&quot;filesystem#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;られると、このメソッドが閉じたファイルシステムへの参照を返すか、&lt;a href=&quot;filesystemnotfoundexception&quot;&gt; &lt;code&gt;FileSystemNotFoundException&lt;/code&gt; を&lt;/a&gt;スローするかは、プロバイダーに依存します。プロバイダーが、以前に作成したファイルシステムと同じURIで新しいファイルシステムを作成することを許可している場合、このメソッドは、ファイルシステムが閉じられた後で（&lt;a href=&quot;filesystems#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem&lt;/code&gt; &lt;/a&gt;メソッドによって新しいインスタンスが作成される前に）呼び出されると、例外をスローします。</target>
        </trans-unit>
        <trans-unit id="b11506419310bee6e751875ef103be18ea7c6223" translate="yes" xml:space="preserve">
          <source>Once a file system is &lt;a href=&quot;filesystem#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt; it is provider-dependent if the provider allows a new file system to be created with the same URI as a file system it previously created.</source>
          <target state="translated">ファイルシステムが&lt;a href=&quot;filesystem#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;られると、プロバイダーが以前に作成したファイルシステムと同じURIで新しいファイルシステムを作成することを許可するかどうかはプロバイダーに依存します。</target>
        </trans-unit>
        <trans-unit id="b1943cfe0689d738122573d10502257bcc2ccff3" translate="yes" xml:space="preserve">
          <source>Once a file system is &lt;a href=&quot;filesystem#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt; it is provider-dependent if the provider allows a new file system to be created with the same URI as a file system it previously created.</source>
          <target state="translated">ファイルシステムを&lt;a href=&quot;filesystem#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;と、以前に作成したファイルシステムと同じURIを使用して新しいファイルシステムを作成できるかどうかがプロバイダーに依存します。</target>
        </trans-unit>
        <trans-unit id="14fa4d05a179f1cc2f0f08fa37ef860c1437702a" translate="yes" xml:space="preserve">
          <source>Once a group is created, subsequent calls to the &lt;code&gt;currentGroupID&lt;/code&gt; method will return the identifier for this group until the group becomes inactive.</source>
          <target state="translated">グループが作成されると、その後の &lt;code&gt;currentGroupID&lt;/code&gt; メソッドの呼び出しでは、グループが非アクティブになるまで、このグループの識別子が返されます。</target>
        </trans-unit>
        <trans-unit id="5fd6b880bff3b6b25a0a97c5d64f71cc215607dd" translate="yes" xml:space="preserve">
          <source>Once a prototype &lt;code&gt;EditorKit&lt;/code&gt; instance is successfully located, it is cloned and the clone is returned.</source>
          <target state="translated">プロトタイプの &lt;code&gt;EditorKit&lt;/code&gt; インスタンスが正常に見つかると、クローンが作成され、クローンが返されます。</target>
        </trans-unit>
        <trans-unit id="c744e6cb384e9dcedf836f1f81b20f3ce8dd21d4" translate="yes" xml:space="preserve">
          <source>Once a provider is found, the result of the &lt;code&gt;newJMXConnector&lt;/code&gt; method is the result of calling &lt;a href=&quot;jmxconnectorprovider#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt;&lt;code&gt;newJMXConnector&lt;/code&gt;&lt;/a&gt; on the provider.</source>
          <target state="translated">プロバイダーが見つかると、 &lt;code&gt;newJMXConnector&lt;/code&gt; メソッドの結果は、プロバイダーで&lt;a href=&quot;jmxconnectorprovider#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt; &lt;code&gt;newJMXConnector&lt;/code&gt; &lt;/a&gt;を呼び出した結果になります。</target>
        </trans-unit>
        <trans-unit id="d8aa88de54eea885381d82260da933836ff27e3d" translate="yes" xml:space="preserve">
          <source>Once a provider is found, the result of the &lt;code&gt;newJMXConnector&lt;/code&gt; method is the result of calling &lt;a href=&quot;jmxconnectorprovider#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt;&lt;code&gt;newJMXConnector&lt;/code&gt;&lt;/a&gt; on the provider.</source>
          <target state="translated">プロバイダーが見つかると、 &lt;code&gt;newJMXConnector&lt;/code&gt; メソッドの結果は、プロバイダーで&lt;a href=&quot;jmxconnectorprovider#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt; &lt;code&gt;newJMXConnector&lt;/code&gt; &lt;/a&gt;を呼び出した結果になります。</target>
        </trans-unit>
        <trans-unit id="cfa637bcb6b62d41604709ed483b229d0a580ee3" translate="yes" xml:space="preserve">
          <source>Once a provider is found, the result of the &lt;code&gt;newJMXConnectorServer&lt;/code&gt; method is the result of calling &lt;a href=&quot;jmxconnectorserverprovider#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt;&lt;code&gt;newJMXConnectorServer&lt;/code&gt;&lt;/a&gt; on the provider.</source>
          <target state="translated">プロバイダーが見つかると、 &lt;code&gt;newJMXConnectorServer&lt;/code&gt; メソッドの結果は、プロバイダーで&lt;a href=&quot;jmxconnectorserverprovider#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt; &lt;code&gt;newJMXConnectorServer&lt;/code&gt; &lt;/a&gt;を呼び出した結果になります。</target>
        </trans-unit>
        <trans-unit id="8c3656182695ec4f2d322db4f90634e76113bf56" translate="yes" xml:space="preserve">
          <source>Once a provider is found, the result of the &lt;code&gt;newJMXConnectorServer&lt;/code&gt; method is the result of calling &lt;a href=&quot;jmxconnectorserverprovider#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;newJMXConnectorServer&lt;/code&gt;&lt;/a&gt; on the provider.</source>
          <target state="translated">プロバイダーが見つかると、 &lt;code&gt;newJMXConnectorServer&lt;/code&gt; メソッドの結果は、プロバイダーで&lt;a href=&quot;jmxconnectorserverprovider#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;newJMXConnectorServer&lt;/code&gt; &lt;/a&gt;を呼び出した結果になります。</target>
        </trans-unit>
        <trans-unit id="b9b844ce22fefa03db1688b438ad18108c864fca" translate="yes" xml:space="preserve">
          <source>Once a reference to the &lt;code&gt;FileStore&lt;/code&gt; is obtained it is implementation specific if operations on the returned &lt;code&gt;FileStore&lt;/code&gt;, or &lt;a href=&quot;attribute/filestoreattributeview&quot;&gt;&lt;code&gt;FileStoreAttributeView&lt;/code&gt;&lt;/a&gt; objects obtained from it, continue to depend on the existence of the file. In particular the behavior is not defined for the case that the file is deleted or moved to a different file store.</source>
          <target state="translated">&lt;code&gt;FileStore&lt;/code&gt; への参照が取得されると、返された &lt;code&gt;FileStore&lt;/code&gt; またはそこから取得された&lt;a href=&quot;attribute/filestoreattributeview&quot;&gt; &lt;code&gt;FileStoreAttributeView&lt;/code&gt; &lt;/a&gt;オブジェクトに対する操作が引き続きファイルの存在に依存するかどうかは、実装固有です。特に、ファイルが削除されるか、別のファイルストアに移動された場合の動作は定義されていません。</target>
        </trans-unit>
        <trans-unit id="463356cdba46e29433cb59fc535236fd2db3e740" translate="yes" xml:space="preserve">
          <source>Once a remote object is registered (bound) with the RMI registry on the local host, callers on a remote (or local) host can lookup the remote object by name, obtain its reference, and then invoke remote methods on the object. A registry may be shared by all servers running on a host or an individual server process may create and use its own registry if desired (see &lt;code&gt;java.rmi.registry.LocateRegistry.createRegistry&lt;/code&gt; method for details).</source>
          <target state="translated">リモートオブジェクトがローカルホストのRMIレジストリに登録（バインド）されると、リモート（またはローカル）ホストの呼び出し元は、名前でリモートオブジェクトを検索し、その参照を取得して、オブジェクトのリモートメソッドを呼び出すことができます。レジストリは、ホスト上で実行されているすべてのサーバーで共有できます。または、必要に応じて、個々のサーバープロセスが独自のレジストリを作成して使用できます（詳細については、 &lt;code&gt;java.rmi.registry.LocateRegistry.createRegistry&lt;/code&gt; メソッドを参照してください）。</target>
        </trans-unit>
        <trans-unit id="8fa2765d3f56e66fcaf89b84f2f63fcd8b9ebb4c" translate="yes" xml:space="preserve">
          <source>Once a result is passed to the combiner or finisher function, it is never passed to the accumulator function again.</source>
          <target state="translated">一度結果がコンバイナ関数またはフィニッシャ関数に渡されると、それは二度とアキュムレータ関数に渡されません。</target>
        </trans-unit>
        <trans-unit id="3c0c01c1450012ea53703b43ba9476c9e4b4369d" translate="yes" xml:space="preserve">
          <source>Once a socket has been closed, it is not available for further networking use (i.e. can't be reconnected or rebound). A new socket needs to be created.</source>
          <target state="translated">一度閉じたソケットは、それ以降ネットワークを利用することができません(再接続やリバウンドができません)。新しいソケットを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="c18bbcc70f9e4e4a385b44280a15d0473cbdbce6" translate="yes" xml:space="preserve">
          <source>Once a thread has invoked &lt;code&gt;beginExclusive&lt;/code&gt;, only this thread is allowed to communicate with this card until it calls &lt;code&gt;endExclusive&lt;/code&gt;. Other threads attempting communication will receive a CardException.</source>
          <target state="translated">スレッドが呼び出された後 &lt;code&gt;beginExclusive&lt;/code&gt; 、唯一このスレッドは、それが呼び出すまで、このカードと通信することが許可されている &lt;code&gt;endExclusive&lt;/code&gt; を。通信を試みる他のスレッドはCardExceptionを受け取ります。</target>
        </trans-unit>
        <trans-unit id="5cbef9fedf294f675061927c2526075e0406fa3b" translate="yes" xml:space="preserve">
          <source>Once a transformer has been registered with &lt;a href=&quot;instrumentation#addTransformer(java.lang.instrument.ClassFileTransformer,boolean)&quot;&gt;&lt;code&gt;addTransformer&lt;/code&gt;&lt;/a&gt;, the transformer will be called for every new class definition and every class redefinition. Retransformation capable transformers will also be called on every class retransformation. The request for a new class definition is made with &lt;a href=&quot;../../../../java.base/java/lang/classloader#defineClass(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;ClassLoader.defineClass&lt;/code&gt;&lt;/a&gt; or its native equivalents. The request for a class redefinition is made with &lt;a href=&quot;instrumentation#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt;&lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt;&lt;/a&gt; or its native equivalents. The request for a class retransformation is made with &lt;a href=&quot;instrumentation#retransformClasses(java.lang.Class...)&quot;&gt;&lt;code&gt;Instrumentation.retransformClasses&lt;/code&gt;&lt;/a&gt; or its native equivalents. The transformer is called during the processing of the request, before the class file bytes have been verified or applied. When there are multiple transformers, transformations are composed by chaining the &lt;code&gt;transform&lt;/code&gt; calls. That is, the byte array returned by one call to &lt;code&gt;transform&lt;/code&gt; becomes the input (via the &lt;code&gt;classfileBuffer&lt;/code&gt; parameter) to the next call.</source>
          <target state="translated">トランスフォーマーが&lt;a href=&quot;instrumentation#addTransformer(java.lang.instrument.ClassFileTransformer,boolean)&quot;&gt; &lt;code&gt;addTransformer&lt;/code&gt; &lt;/a&gt;に登録されると、トランスフォーマーはすべての新しいクラス定義とすべてのクラス再定義に対して呼び出されます。再変換可能なトランスフォーマーは、すべてのクラスの再変換でも呼び出されます。新しいクラス定義の要求は、&lt;a href=&quot;../../../../java.base/java/lang/classloader#defineClass(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;ClassLoader.defineClass&lt;/code&gt; &lt;/a&gt;またはそれに相当するネイティブで行われます。クラスの再定義の要求は、&lt;a href=&quot;instrumentation#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt; &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; &lt;/a&gt;またはそのネイティブの同等物を使用して行われます。クラス再変換の要求は、&lt;a href=&quot;instrumentation#retransformClasses(java.lang.Class...)&quot;&gt; &lt;code&gt;Instrumentation.retransformClasses&lt;/code&gt; を使用して&lt;/a&gt;行われます。またはそのネイティブの同等物。トランスフォーマーは、要求の処理中に、クラスファイルのバイトが検証または適用される前に呼び出されます。複数のトランスフォーマーがある場合、トランスフォーマーは &lt;code&gt;transform&lt;/code&gt; 呼び出しをチェーンすることによって構成されます。つまり、1回の &lt;code&gt;transform&lt;/code&gt; 呼び出しで返されたバイト配列が（ &lt;code&gt;classfileBuffer&lt;/code&gt; パラメーターを介して）次の呼び出しへの入力になります。</target>
        </trans-unit>
        <trans-unit id="533808e9b960d018349b493998d8e4212932c0cf" translate="yes" xml:space="preserve">
          <source>Once a transformer has been registered with &lt;a href=&quot;instrumentation#addTransformer-java.lang.instrument.ClassFileTransformer-boolean-&quot;&gt;&lt;code&gt;addTransformer&lt;/code&gt;&lt;/a&gt;, the transformer will be called for every new class definition and every class redefinition. Retransformation capable transformers will also be called on every class retransformation. The request for a new class definition is made with &lt;a href=&quot;../classloader#defineClass-byte:A-int-int-&quot;&gt;&lt;code&gt;ClassLoader.defineClass&lt;/code&gt;&lt;/a&gt; or its native equivalents. The request for a class redefinition is made with &lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt;&lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt;&lt;/a&gt; or its native equivalents. The request for a class retransformation is made with &lt;a href=&quot;instrumentation#retransformClasses-java.lang.Class...-&quot;&gt;&lt;code&gt;Instrumentation.retransformClasses&lt;/code&gt;&lt;/a&gt; or its native equivalents. The transformer is called during the processing of the request, before the class file bytes have been verified or applied. When there are multiple transformers, transformations are composed by chaining the &lt;code&gt;transform&lt;/code&gt; calls. That is, the byte array returned by one call to &lt;code&gt;transform&lt;/code&gt; becomes the input (via the &lt;code&gt;classfileBuffer&lt;/code&gt; parameter) to the next call.</source>
          <target state="translated">トランスフォーマーが&lt;a href=&quot;instrumentation#addTransformer-java.lang.instrument.ClassFileTransformer-boolean-&quot;&gt; &lt;code&gt;addTransformer&lt;/code&gt; &lt;/a&gt;に登録されると、すべての新しいクラス定義およびすべてのクラス再定義に対してトランスフォーマーが呼び出されます。再変換可能なトランスフォーマーも、すべてのクラスの再変換で呼び出されます。新しいクラス定義の要求は、&lt;a href=&quot;../classloader#defineClass-byte:A-int-int-&quot;&gt; &lt;code&gt;ClassLoader.defineClass&lt;/code&gt; &lt;/a&gt;またはその同等のネイティブで行われます。クラスの再定義のリクエストは、&lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt; &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; &lt;/a&gt;またはその同等のネイティブで行われます。クラスの再変換のリクエストは&lt;a href=&quot;instrumentation#retransformClasses-java.lang.Class...-&quot;&gt; &lt;code&gt;Instrumentation.retransformClasses&lt;/code&gt; &lt;/a&gt;で行われますまたはそのネイティブ同等物。トランスフォーマーは、リクエストの処理中に、クラスファイルのバイトが検証または適用される前に呼び出されます。複数のトランスフォーマーがある場合、トランスフォーメーションは &lt;code&gt;transform&lt;/code&gt; 呼び出しをチェーンすることによって構成されます。つまり、 &lt;code&gt;transform&lt;/code&gt; への1回の呼び出しで返されたバイト配列は、次の呼び出しへの入力（ &lt;code&gt;classfileBuffer&lt;/code&gt; パラメーターを介して）になります。</target>
        </trans-unit>
        <trans-unit id="6285995b4edcbe4d142d4f23c1cde28c7bb503e4" translate="yes" xml:space="preserve">
          <source>Once an &lt;code&gt;AlgorithmParameters&lt;/code&gt; object is obtained, it must be initialized via a call to &lt;code&gt;init&lt;/code&gt;, using an appropriate parameter specification or parameter encoding.</source>
          <target state="translated">&lt;code&gt;AlgorithmParameters&lt;/code&gt; オブジェクトを取得したら、適切なパラメータ仕様またはパラメータエンコーディングを使用して、 &lt;code&gt;init&lt;/code&gt; の呼び出しを介して初期化する必要があります。</target>
        </trans-unit>
        <trans-unit id="8f3c38acbeb5c961f1cf10869b76bfa15075df0d" translate="yes" xml:space="preserve">
          <source>Once an agent acquires an &lt;code&gt;Instrumentation&lt;/code&gt; instance, the agent may call methods on the instance at any time.</source>
          <target state="translated">エージェントが &lt;code&gt;Instrumentation&lt;/code&gt; インスタンスを取得すると、エージェントはいつでもインスタンスのメソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="105e2fc8f8ac4787e74b250ad7c145ecf20bb7e2" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a &lt;code&gt;DatatypeFactory&lt;/code&gt; it can use the factory to configure and obtain datatype instances.</source>
          <target state="translated">アプリケーションが &lt;code&gt;DatatypeFactory&lt;/code&gt; への参照を取得すると、ファクトリを使用してデータ型インスタンスを構成および取得できます。</target>
        </trans-unit>
        <trans-unit id="7d0ecb2178939f77d737b47649d17e788052ae4c" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; it can use the factory to configure and obtain parser instances.</source>
          <target state="translated">アプリケーションが &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; への参照を取得すると、ファクトリを使用してパーサーインスタンスを構成および取得できます。</target>
        </trans-unit>
        <trans-unit id="46c1eb47e2a4c711c6d9fa14f6116a89a2081f54" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a &lt;code&gt;RowSetFactory&lt;/code&gt; it can use the factory to obtain RowSet instances.</source>
          <target state="translated">アプリケーションが &lt;code&gt;RowSetFactory&lt;/code&gt; への参照を取得すると、ファクトリを使用してRowSetインスタンスを取得できます。</target>
        </trans-unit>
        <trans-unit id="7216b985715c03a44ae0487dc3e4e7b975919d3a" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a &lt;code&gt;RowSetFactory&lt;/code&gt;, it can use the factory to obtain RowSet instances.</source>
          <target state="translated">アプリケーションが &lt;code&gt;RowSetFactory&lt;/code&gt; への参照を取得すると、ファクトリを使用してRowSetインスタンスを取得できます。</target>
        </trans-unit>
        <trans-unit id="fc0a2568645db3aae7b92a05e2afd99cc3258638" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a &lt;code&gt;SAXParserFactory&lt;/code&gt; it can use the factory to configure and obtain parser instances.</source>
          <target state="translated">アプリケーションが &lt;code&gt;SAXParserFactory&lt;/code&gt; への参照を取得すると、ファクトリを使用してパーサーインスタンスを構成および取得できます。</target>
        </trans-unit>
        <trans-unit id="d2270caebb759fd71826e889b9a9723ba71451ba" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a &lt;code&gt;TransformerFactory&lt;/code&gt; it can use the factory to configure and obtain transformer instances.</source>
          <target state="translated">アプリケーションが &lt;code&gt;TransformerFactory&lt;/code&gt; への参照を取得すると、ファクトリを使用してトランスフォーマーインスタンスを構成および取得できます。</target>
        </trans-unit>
        <trans-unit id="8f3383865168f8512ccd9c6761c49001c0541182" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a XMLEventFactory it can use the factory to configure and obtain stream instances.</source>
          <target state="translated">アプリケーションがXMLEventFactoryへの参照を取得すると、そのFactoryを使用してストリームインスタンスを構成し、取得することができます。</target>
        </trans-unit>
        <trans-unit id="e2d3c1dacaa7f6c57761da8ec7d67c9e116ea49e" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a XMLInputFactory it can use the factory to configure and obtain stream instances.</source>
          <target state="translated">XMLInputFactoryへの参照を取得したアプリケーションは、そのFactoryを使用してストリームインスタンスを設定したり取得したりすることができます。</target>
        </trans-unit>
        <trans-unit id="6e9f2175fa24aeaf4bd99edcffe1f1ccb12e0cb6" translate="yes" xml:space="preserve">
          <source>Once an application has obtained a reference to a XMLOutputFactory it can use the factory to configure and obtain stream instances.</source>
          <target state="translated">アプリケーションが XMLOutputFactory への参照を取得すると、そのファクトリを使用してストリームインスタンスを構成したり取得したりすることができます。</target>
        </trans-unit>
        <trans-unit id="7499396cfb53faab6699b6a955419afa19b5a03e" translate="yes" xml:space="preserve">
          <source>Once connected, a datagram channel remains connected until it is disconnected or closed. Whether or not a datagram channel is connected may be determined by invoking its &lt;a href=&quot;#isConnected()&quot;&gt;&lt;code&gt;isConnected&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">接続されると、データグラムチャネルは切断または閉じられるまで接続されたままになります。データグラムチャネルが接続されているかどうかは、&lt;a href=&quot;#isConnected()&quot;&gt; &lt;code&gt;isConnected&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで判断できます。</target>
        </trans-unit>
        <trans-unit id="6772a4e2e2e2c3c47599b1865b94970a1e3122de" translate="yes" xml:space="preserve">
          <source>Once connected, a datagram channel remains connected until it is disconnected or closed. Whether or not a datagram channel is connected may be determined by invoking its &lt;a href=&quot;datagramchannel#isConnected--&quot;&gt;&lt;code&gt;isConnected&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">接続されると、データグラムチャネルは、切断されるか閉じられるまで接続されたままになります。データグラムチャネルが接続されているかどうかは、その&lt;a href=&quot;datagramchannel#isConnected--&quot;&gt; &lt;code&gt;isConnected&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで判断できます。</target>
        </trans-unit>
        <trans-unit id="5c1fd5730a9d4a3652d31fa180ba578f51e2eb1c" translate="yes" xml:space="preserve">
          <source>Once constructed, a resolution attribute's value is immutable.</source>
          <target state="translated">一度構築された解像度属性の値は不変です。</target>
        </trans-unit>
        <trans-unit id="b2cb934649c0034b283a09e6bfbfcac15a1222a0" translate="yes" xml:space="preserve">
          <source>Once constructed, a two-dimensional size attribute's value is immutable.</source>
          <target state="translated">一度構築されると、二次元サイズ属性の値は不変です。</target>
        </trans-unit>
        <trans-unit id="916fbe7ac094d27e9157dcffe6516e62afef9c11" translate="yes" xml:space="preserve">
          <source>Once created, a Bidi object can be queried to see if the text it represents is all left-to-right or all right-to-left. Such objects are very lightweight and this text is relatively easy to process.</source>
          <target state="translated">一度作成されたBidiオブジェクトは、それが表すテキストがすべて左から右にあるのか、それともすべて右から左にあるのかを問い合わせることができます。このようなオブジェクトは非常に軽量で、このテキストの処理は比較的簡単です。</target>
        </trans-unit>
        <trans-unit id="bc960246521defc9017a8b6e6fe1833ef22c9b9a" translate="yes" xml:space="preserve">
          <source>Once deletion has been requested, it is not possible to cancel the request. This method should therefore be used with care.</source>
          <target state="translated">一度削除依頼をした後は、削除依頼を取り消すことはできません。そのため、この方法は注意して使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="cc8e1eb787e5502d5be3002cd00c128868cedc5b" translate="yes" xml:space="preserve">
          <source>Once registered with a selector, a channel remains registered until it is</source>
          <target state="translated">一度セレクタに登録されたチャンネルは、登録されるまで登録されたままになります。</target>
        </trans-unit>
        <trans-unit id="b55948551ac491f4b8790edceec36bc861539faf" translate="yes" xml:space="preserve">
          <source>Once shutdown for reading then further reads on the channel will return &lt;code&gt;-1&lt;/code&gt;, the end-of-stream indication. If the input side of the connection is already shutdown then invoking this method has no effect.</source>
          <target state="translated">読み取りのためにシャットダウンすると、チャネルでさらに読み取りを行うと、ストリームの終わりを示す &lt;code&gt;-1&lt;/code&gt; が返されます。接続の入力側がすでにシャットダウンされている場合、このメソッドを呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="7878ce15878fb5a9d0ff4cfc91f28b85a82ae013" translate="yes" xml:space="preserve">
          <source>Once shutdown for reading then further reads on the channel will return &lt;code&gt;-1&lt;/code&gt;, the end-of-stream indication. If the input side of the connection is already shutdown then invoking this method has no effect. The effect on an outstanding read operation is system dependent and therefore not specified. The effect, if any, when there is data in the socket receive buffer that has not been read, or data arrives subsequently, is also system dependent.</source>
          <target state="translated">読み取りのためにシャットダウンすると、チャネルでさらに読み取りを行うと、ストリームの終わりを示す &lt;code&gt;-1&lt;/code&gt; が返されます。接続の入力側がすでにシャットダウンされている場合、このメソッドを呼び出しても効果はありません。未解決の読み取り操作への影響はシステムに依存するため、指定されていません。ソケットの受信バッファーに読み取られていないデータがある場合、またはその後にデータが到着した場合の影響も、システムによって異なります。</target>
        </trans-unit>
        <trans-unit id="797f0609cda6a2a2c0156328e27050a84bd32447" translate="yes" xml:space="preserve">
          <source>Once shutdown for writing then further attempts to write to the channel will throw &lt;a href=&quot;closedchannelexception&quot;&gt;&lt;code&gt;ClosedChannelException&lt;/code&gt;&lt;/a&gt;. If the output side of the connection is already shutdown then invoking this method has no effect.</source>
          <target state="translated">書き込みのためにシャットダウンすると、チャネルへの書き込みをさらに試行すると、&lt;a href=&quot;closedchannelexception&quot;&gt; &lt;code&gt;ClosedChannelException&lt;/code&gt; &lt;/a&gt;がスローされます。接続の出力側がすでにシャットダウンされている場合、このメソッドを呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="a0b45c5832356af065c8f6bcaa3bd99d3d143e29" translate="yes" xml:space="preserve">
          <source>Once shutdown for writing then further attempts to write to the channel will throw &lt;a href=&quot;closedchannelexception&quot;&gt;&lt;code&gt;ClosedChannelException&lt;/code&gt;&lt;/a&gt;. If the output side of the connection is already shutdown then invoking this method has no effect. The effect on an outstanding write operation is system dependent and therefore not specified.</source>
          <target state="translated">書き込みのためにシャットダウンすると、チャネルへの書き込みをさらに試行すると、&lt;a href=&quot;closedchannelexception&quot;&gt; &lt;code&gt;ClosedChannelException&lt;/code&gt; &lt;/a&gt;がスローされます。接続の出力側がすでにシャットダウンされている場合、このメソッドを呼び出しても効果はありません。未処理の書き込み操作への影響はシステムに依存するため、指定されていません。</target>
        </trans-unit>
        <trans-unit id="9c75ba9809e3301868dc22c4282365bd23399080" translate="yes" xml:space="preserve">
          <source>Once some channels have been registered with a selector, a &lt;a href=&quot;selector#selop&quot;&gt;&lt;i&gt;selection operation&lt;/i&gt;&lt;/a&gt; can be performed in order to discover which channels, if any, have become ready to perform one or more of the operations in which interest was previously declared. If a channel is ready then the key returned when it was registered will be added to the selector's</source>
          <target state="translated">一部のチャネルがセレクターに登録されると、&lt;a href=&quot;selector#selop&quot;&gt;&lt;i&gt;選択操作&lt;/i&gt;&lt;/a&gt;を実行して、チャネルが存在する場合、以前にインタレストが宣言された操作の1つ以上を実行する準備ができているチャネルを発見できます。チャネルの準備ができている場合は、登録時に返されたキーがセレクターの</target>
        </trans-unit>
        <trans-unit id="3fc8522d50c299b14b7e1b3314145976cac8622b" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;CertStore&lt;/code&gt; has been created, it can be used to retrieve &lt;code&gt;Certificate&lt;/code&gt;s and &lt;code&gt;CRL&lt;/code&gt;s by calling its &lt;a href=&quot;#getCertificates(java.security.cert.CertSelector)&quot;&gt;&lt;code&gt;getCertificates&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getCRLs(java.security.cert.CRLSelector)&quot;&gt;&lt;code&gt;getCRLs&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">一度 &lt;code&gt;CertStore&lt;/code&gt; 作成されている、取得するために使用することができる &lt;code&gt;Certificate&lt;/code&gt; sおよび &lt;code&gt;CRL&lt;/code&gt; その呼び出すことによって複数可&lt;a href=&quot;#getCertificates(java.security.cert.CertSelector)&quot;&gt; &lt;code&gt;getCertificates&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#getCRLs(java.security.cert.CRLSelector)&quot;&gt; &lt;code&gt;getCRLs&lt;/code&gt; の&lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="06e2ff94f2a311ede3ef18e5d3cb0eef95b09ad6" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;CertStore&lt;/code&gt; has been created, it can be used to retrieve &lt;code&gt;Certificate&lt;/code&gt;s and &lt;code&gt;CRL&lt;/code&gt;s by calling its &lt;a href=&quot;certstore#getCertificates-java.security.cert.CertSelector-&quot;&gt;&lt;code&gt;getCertificates&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;certstore#getCRLs-java.security.cert.CRLSelector-&quot;&gt;&lt;code&gt;getCRLs&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">一度 &lt;code&gt;CertStore&lt;/code&gt; 作成されている、取得するために使用することができる &lt;code&gt;Certificate&lt;/code&gt; sおよび &lt;code&gt;CRL&lt;/code&gt; その呼び出すことによって複数可&lt;a href=&quot;certstore#getCertificates-java.security.cert.CertSelector-&quot;&gt; &lt;code&gt;getCertificates&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;certstore#getCRLs-java.security.cert.CRLSelector-&quot;&gt; &lt;code&gt;getCRLs&lt;/code&gt; の&lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="ea7bdb04a2d450593cad989d8f55ff73bc6270ac" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;DragGestureRecognizer&lt;/code&gt; identifies a sequence of events on the &lt;code&gt;Component&lt;/code&gt; as a drag initiating gesture, it will notify its unicast &lt;code&gt;DragGestureListener&lt;/code&gt; by invoking its &lt;a href=&quot;draggesturelistener#dragGestureRecognized(java.awt.dnd.DragGestureEvent)&quot;&gt;&lt;code&gt;gestureRecognized()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">一旦 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; オンイベントのシーケンス識別 &lt;code&gt;Component&lt;/code&gt; ドラッグ開始ジェスチャーとしては、そのユニキャスト通知されます &lt;code&gt;DragGestureListener&lt;/code&gt; その呼び出すことによって&lt;a href=&quot;draggesturelistener#dragGestureRecognized(java.awt.dnd.DragGestureEvent)&quot;&gt; &lt;code&gt;gestureRecognized()&lt;/code&gt; &lt;/a&gt;メソッドを。</target>
        </trans-unit>
        <trans-unit id="2c8a5f87ffaffd84fcb7d68a96369f0d37908893" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;DragGestureRecognizer&lt;/code&gt; is associated with a particular &lt;code&gt;Component&lt;/code&gt; it will register the appropriate listener interfaces on that &lt;code&gt;Component&lt;/code&gt; in order to track the input events delivered to the &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">一旦 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 特定の関連付けられている &lt;code&gt;Component&lt;/code&gt; は、その上に適切なリスナーインターフェース登録する &lt;code&gt;Component&lt;/code&gt; に配信入力イベントを追跡するために &lt;code&gt;Component&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b742f7769eb6466189c037ce72b3f408e5e85da" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;DragSource&lt;/code&gt; is obtained, a &lt;code&gt;DragGestureRecognizer&lt;/code&gt; should also be obtained to associate the &lt;code&gt;DragSource&lt;/code&gt; with a particular &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DragSource&lt;/code&gt; を取得したら、 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; も取得して、 &lt;code&gt;DragSource&lt;/code&gt; を特定の &lt;code&gt;Component&lt;/code&gt; に関連付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="56747c1fd145dcd111c610e13ca24792c4c586d3" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;XMLSignatureFactory&lt;/code&gt; has been created, objects can be instantiated by calling the appropriate method. For example, a &lt;a href=&quot;reference&quot;&gt;&lt;code&gt;Reference&lt;/code&gt;&lt;/a&gt; instance may be created by invoking one of the &lt;a href=&quot;#newReference(java.lang.String,javax.xml.crypto.dsig.DigestMethod)&quot;&gt;&lt;code&gt;newReference&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">一度 &lt;code&gt;XMLSignatureFactory&lt;/code&gt; 作成された、オブジェクトは適切なメソッドを呼び出してインスタンス化することができます。たとえば、&lt;a href=&quot;reference&quot;&gt; &lt;code&gt;Reference&lt;/code&gt; &lt;/a&gt;インスタンスは、&lt;a href=&quot;#newReference(java.lang.String,javax.xml.crypto.dsig.DigestMethod)&quot;&gt; &lt;code&gt;newReference&lt;/code&gt; &lt;/a&gt;メソッドの1つを呼び出すことによって作成できます。</target>
        </trans-unit>
        <trans-unit id="82a5584a782e5ebd42b31667bf0c0749ced5b696" translate="yes" xml:space="preserve">
          <source>Once the ModelMBean's ModelMBeanInfo (with Descriptors) are customized and set on the ModelMBean, the ModelMBean be registered with the MBeanServer.</source>
          <target state="translated">ModelMBeanのModelMBeanInfo(Descriptors付き)をカスタマイズし、ModelMBeanに設定すると、ModelMBeanはMBeanServerに登録されます。</target>
        </trans-unit>
        <trans-unit id="ce6fb02ec72cd552df4bb8f61dd8d7c9e294bddc" translate="yes" xml:space="preserve">
          <source>Once the ModelMBean's ModelMBeanInfo (with Descriptors) are customized and set on the ModelMBean, the ModelMBean can be registered with the MBeanServer.</source>
          <target state="translated">ModelMBeanのModelMBeanInfo(Descriptors付き)をカスタマイズしてModelMBeanに設定すると、MBeanServerにModelMBeanを登録することができます。</target>
        </trans-unit>
        <trans-unit id="121f42fde7403814ed31680c3122e82ad94e1946" translate="yes" xml:space="preserve">
          <source>Once the caller has instantiated a LoginContext, it invokes the &lt;code&gt;login&lt;/code&gt; method to authenticate a &lt;code&gt;Subject&lt;/code&gt;. The &lt;code&gt;login&lt;/code&gt; method invokes the configured modules to perform their respective types of authentication (username/password, smart card pin verification, etc.). Note that the LoginModules will not attempt authentication retries nor introduce delays if the authentication fails. Such tasks belong to the LoginContext caller.</source>
          <target state="translated">呼び出し元がLoginContextをインスタンス化すると、 &lt;code&gt;login&lt;/code&gt; メソッドを呼び出して &lt;code&gt;Subject&lt;/code&gt; を認証します。 &lt;code&gt;login&lt;/code&gt; 方法は、認証のそれぞれのタイプ（ユーザ名/パスワード、スマートカードのPIN認証など）を実行するように構成されたモジュールを呼び出します。LoginModuleは認証が再試行されず、認証が失敗した場合に遅延が発生しないことに注意してください。このようなタスクは、LoginContextの呼び出し元に属しています。</target>
        </trans-unit>
        <trans-unit id="dc821bfc61aa242154c2420c3cd1b56fc64e7a43" translate="yes" xml:space="preserve">
          <source>Once the channel's socket has been successfully bound to a specific address, that is not automatically assigned, more addresses may be bound to it using &lt;a href=&quot;#bindAddress(java.net.InetAddress)&quot;&gt;&lt;code&gt;bindAddress&lt;/code&gt;&lt;/a&gt;, or removed using &lt;a href=&quot;#unbindAddress(java.net.InetAddress)&quot;&gt;&lt;code&gt;unbindAddress&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edbaf0052f1d17926b44cbdbfe3378d3d82452f" translate="yes" xml:space="preserve">
          <source>Once the count reaches 0, any subsequent filters in this request are applied. If none of those filters cause the event to be suppressed, the event is reported. Otherwise, the event is not reported. In either case subsequent events are never reported for this request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059d9cd4915349bf49db8fe1a8d167d44a2ae816" translate="yes" xml:space="preserve">
          <source>Once the entire string s has been scanned, it is converted to a time result in one of two ways. If a time zone or time-zone offset has been recognized, then the year, month, day of month, hour, minute, and second are interpreted in UTC and then the time-zone offset is applied. Otherwise, the year, month, day of month, hour, minute, and second are interpreted in the local time zone.</source>
          <target state="translated">文字列 s 全体がスキャンされると、2 つの方法のいずれかで時刻結果に変換されます。タイムゾーンまたはタイムゾーンオフセットが認識されている場合、年、月、日、時、分、秒はUTCで解釈され、タイムゾーンオフセットが適用されます。そうでない場合は、年、月、月の日、時、分、秒はローカルタイムゾーンで解釈されます。</target>
        </trans-unit>
        <trans-unit id="ccec0bd228d1acda555ebe35c7f30eae53cb1b07" translate="yes" xml:space="preserve">
          <source>Once the keystore has been loaded, it is possible to read existing entries from the keystore, or to write new entries into the keystore:</source>
          <target state="translated">キーストアがロードされると、キーストアから既存のエントリを読み込んだり、新しいエントリをキーストアに書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="aca067ea29aae660f0b18eebc2d265c317c10789" translate="yes" xml:space="preserve">
          <source>Once the labels have been set, this method calls &lt;a href=&quot;#updateLabelUIs()&quot;&gt;&lt;code&gt;updateLabelUIs()&lt;/code&gt;&lt;/a&gt;. Note that the labels are only painted if the &lt;code&gt;paintLabels&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">ラベルが設定されると、このメソッドは&lt;a href=&quot;#updateLabelUIs()&quot;&gt; &lt;code&gt;updateLabelUIs()&lt;/code&gt; を&lt;/a&gt;呼び出します。ラベルは、 &lt;code&gt;paintLabels&lt;/code&gt; プロパティが &lt;code&gt;true&lt;/code&gt; の場合にのみペイントされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c486f9606f8e732e06c6d244bbc9d4c6b1f4327f" translate="yes" xml:space="preserve">
          <source>Once the look and feel has been changed it is imperative to invoke &lt;code&gt;updateUI&lt;/code&gt; on all &lt;code&gt;JComponents&lt;/code&gt;. The method &lt;a href=&quot;swingutilities#updateComponentTreeUI(java.awt.Component)&quot;&gt;&lt;code&gt;SwingUtilities.updateComponentTreeUI(java.awt.Component)&lt;/code&gt;&lt;/a&gt; makes it easy to apply &lt;code&gt;
 updateUI&lt;/code&gt; to a containment hierarchy. Refer to it for details. The exact behavior of not invoking &lt;code&gt;
 updateUI&lt;/code&gt; after changing the look and feel is unspecified. It is very possible to receive unexpected exceptions, painting problems, or worse.</source>
          <target state="translated">ルックアンドフィールが変更されたら、すべての &lt;code&gt;JComponents&lt;/code&gt; &lt;code&gt;updateUI&lt;/code&gt; を呼び出す必要があります。&lt;a href=&quot;swingutilities#updateComponentTreeUI(java.awt.Component)&quot;&gt; &lt;code&gt;SwingUtilities.updateComponentTreeUI(java.awt.Component)&lt;/code&gt; &lt;/a&gt;メソッドを使用すると、 &lt;code&gt; updateUI&lt;/code&gt; を包含階層に簡単に適用できます。詳しくは参考にしてください。ルックアンドフィールを変更した後に &lt;code&gt; updateUI&lt;/code&gt; を呼び出さない正確な動作は指定されていません。予期しない例外、塗装の問題、またはさらに悪い事態を受け取る可能性が非常に高くなります。</target>
        </trans-unit>
        <trans-unit id="01b2e071289d65f0c84dbafa94d91f100b47f7ea" translate="yes" xml:space="preserve">
          <source>Once the parent chain is complete, the bundle is returned.</source>
          <target state="translated">親チェーンが完了すると、バンドルが返されます。</target>
        </trans-unit>
        <trans-unit id="1f2acb3894e9f86e85942e0492bf9b250e96f440" translate="yes" xml:space="preserve">
          <source>Once the printer starts processing the print job, additional information about the job becomes available, which might include: the job state (such as</source>
          <target state="translated">プリンタが印刷ジョブの処理を開始すると、ジョブに関する追加情報が利用可能になります。</target>
        </trans-unit>
        <trans-unit id="845ab2b792c0ef8d1ae0bcd896f549a565da9818" translate="yes" xml:space="preserve">
          <source>Once the shutdown sequence has begun it can be stopped only by invoking the &lt;a href=&quot;#halt(int)&quot;&gt;&lt;code&gt;halt&lt;/code&gt;&lt;/a&gt; method, which forcibly terminates the virtual machine.</source>
          <target state="translated">シャットダウンシーケンスが開始されると、&lt;a href=&quot;#halt(int)&quot;&gt; &lt;code&gt;halt&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによってのみ停止できます。これにより、仮想マシンが強制的に終了されます。</target>
        </trans-unit>
        <trans-unit id="90579c9e627e7bde2f2e1f676098170028197986" translate="yes" xml:space="preserve">
          <source>Once the shutdown sequence has begun it can be stopped only by invoking the &lt;code&gt;&lt;a href=&quot;runtime#halt-int-&quot;&gt;&lt;code&gt;halt&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method, which forcibly terminates the virtual machine.</source>
          <target state="translated">シャットダウンシーケンスが開始されると、仮想マシンを強制的に終了さ &lt;code&gt;&lt;a href=&quot;runtime#halt-int-&quot;&gt;&lt;code&gt;halt&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドを呼び出すことによってのみ停止できます。</target>
        </trans-unit>
        <trans-unit id="4c34fda8e0539fa0df5e1db2a1d3a001ddc7144a" translate="yes" xml:space="preserve">
          <source>Once the shutdown sequence has begun it is impossible to register a new shutdown hook or de-register a previously-registered hook. Attempting either of these operations will cause an &lt;a href=&quot;illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">シャットダウンシーケンスが開始されると、新しいシャットダウンフックを登録したり、以前に登録したフックの登録を解除したりすることはできません。これらの操作のいずれかを&lt;a href=&quot;illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;すると、IllegalStateExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="a0c8bdafeda863a746cbb2b92727d31e67c0c1f1" translate="yes" xml:space="preserve">
          <source>Once the shutdown sequence has begun it is impossible to register a new shutdown hook or de-register a previously-registered hook. Attempting either of these operations will cause an &lt;code&gt;&lt;a href=&quot;illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; to be thrown.</source>
          <target state="translated">シャットダウンシーケンスが始まると、新しいシャットダウンフックを登録したり、以前に登録したフックを登録解除したりすることはできません。これらの操作のいずれかを試みると、 &lt;code&gt;&lt;a href=&quot;illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="c08bd8c63374d82da99c32b9b245ace78a574cbf" translate="yes" xml:space="preserve">
          <source>Once the stream has been parsed, the callback is notified of the most likely end of line string. The end of line string will be one of \n, \r or \r\n, which ever is encountered the most in parsing the stream.</source>
          <target state="translated">ストリームが解析されると、コールバックは、最も可能性の高い行末の文字列を通知します。行末文字列は、「\n」「\r」「\r」「\r」のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="b98a1ed32c18890aab3a523921faed457f9a4bab" translate="yes" xml:space="preserve">
          <source>Once you create a persistence delegate, you register it using the &lt;code&gt;setPersistenceDelegate&lt;/code&gt; method of &lt;code&gt;XMLEncoder&lt;/code&gt;.</source>
          <target state="translated">あなたは持続的な委譲を作成したら、使用して登録 &lt;code&gt;setPersistenceDelegate&lt;/code&gt; 方法 &lt;code&gt;XMLEncoder&lt;/code&gt; を。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
