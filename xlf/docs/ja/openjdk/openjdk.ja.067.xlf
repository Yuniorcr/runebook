<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="b148fb2a4231546109f0b653e76c4eeb809c429d" translate="yes" xml:space="preserve">
          <source>AsynchronousByteChannel.write()</source>
          <target state="translated">AsynchronousByteChannel.write()</target>
        </trans-unit>
        <trans-unit id="1bd5d4e7a7b5727a599dc116eaef1a6e3cf085b8" translate="yes" xml:space="preserve">
          <source>AsynchronousChannel</source>
          <target state="translated">AsynchronousChannel</target>
        </trans-unit>
        <trans-unit id="e6375b79b014e9e2bcc2fba4a81fc8429f4d2aad" translate="yes" xml:space="preserve">
          <source>AsynchronousChannel.close()</source>
          <target state="translated">AsynchronousChannel.close()</target>
        </trans-unit>
        <trans-unit id="084d7863268b49ee5d503756306daef2b2bb8d92" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup</source>
          <target state="translated">AsynchronousChannelGroup</target>
        </trans-unit>
        <trans-unit id="231457371c8ee568e4c4e461d506ae5ab111f8f0" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.awaitTermination()</source>
          <target state="translated">AsynchronousChannelGroup.awaitTermination()</target>
        </trans-unit>
        <trans-unit id="a77c1a9ec94c64cbd1f0942cd08b9ef2e90cc331" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.isShutdown()</source>
          <target state="translated">AsynchronousChannelGroup.isShutdown()</target>
        </trans-unit>
        <trans-unit id="05cddf221adabd93fd23ab51dcdafb5c40632f65" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.isTerminated()</source>
          <target state="translated">AsynchronousChannelGroup.isTerminated()</target>
        </trans-unit>
        <trans-unit id="365dd258e4339ad5b62ae65934f91d75a70b2530" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.provider()</source>
          <target state="translated">AsynchronousChannelGroup.provider()</target>
        </trans-unit>
        <trans-unit id="0d4cd7dcfebb616b24af5609c185d78b8cef5cca" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.shutdown()</source>
          <target state="translated">AsynchronousChannelGroup.shutdown()</target>
        </trans-unit>
        <trans-unit id="b9b902a93fc9e218993b0bd1abff5f1e60bd542f" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.shutdownNow()</source>
          <target state="translated">AsynchronousChannelGroup.shutdownNow()</target>
        </trans-unit>
        <trans-unit id="805a9f69a66b72c7f2d89bcfd6fed3d149c4eb92" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.withCachedThreadPool()</source>
          <target state="translated">AsynchronousChannelGroup.withCachedThreadPool()</target>
        </trans-unit>
        <trans-unit id="f0a8f823754034c375b249ef64e58c70a6eff6ab" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.withFixedThreadPool()</source>
          <target state="translated">AsynchronousChannelGroup.withFixedThreadPool()</target>
        </trans-unit>
        <trans-unit id="d4a60b6c164c7058c4effeebfdab80a84863dfa9" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelGroup.withThreadPool()</source>
          <target state="translated">AsynchronousChannelGroup.withThreadPool()</target>
        </trans-unit>
        <trans-unit id="e9306537f6a48ba0687fbac1e30e1b8afbf86a80" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelProvider</source>
          <target state="translated">AsynchronousChannelProvider</target>
        </trans-unit>
        <trans-unit id="dd41bacfc4bd784351a40b5fb3ec70794f07f505" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelProvider.openAsynchronousChannelGroup()</source>
          <target state="translated">AsynchronousChannelProvider.openAsynchronousChannelGroup()</target>
        </trans-unit>
        <trans-unit id="a3721826030acbac1d2b5ee44f47c017f8701c4d" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelProvider.openAsynchronousServerSocketChannel()</source>
          <target state="translated">AsynchronousChannelProvider.openAsynchronousServerSocketChannel()</target>
        </trans-unit>
        <trans-unit id="715363556807fd9142f1ffb683d6e4e6ca9a4a9d" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelProvider.openAsynchronousSocketChannel()</source>
          <target state="translated">AsynchronousChannelProvider.openAsynchronousSocketChannel()</target>
        </trans-unit>
        <trans-unit id="cb5ad6a32bf86cd395602adfe70345f6309e11e6" translate="yes" xml:space="preserve">
          <source>AsynchronousChannelProvider.provider()</source>
          <target state="translated">AsynchronousChannelProvider.provider()</target>
        </trans-unit>
        <trans-unit id="3f3c71d4577b9db0b73c9695596807edfccdf151" translate="yes" xml:space="preserve">
          <source>AsynchronousCloseException</source>
          <target state="translated">AsynchronousCloseException</target>
        </trans-unit>
        <trans-unit id="e6d7c57566eea09f975ec578b281effa9e828e0b" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel</source>
          <target state="translated">AsynchronousFileChannel</target>
        </trans-unit>
        <trans-unit id="b636326faba51f4d5aa1ff77b840a325b24577f7" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel.force()</source>
          <target state="translated">AsynchronousFileChannel.force()</target>
        </trans-unit>
        <trans-unit id="79d01c62175cf4d3400781f64a6280ad3320b764" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel.lock()</source>
          <target state="translated">AsynchronousFileChannel.lock()</target>
        </trans-unit>
        <trans-unit id="dc4185f231833e1f9286a64cd8bac776ab0bd0b2" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel.open()</source>
          <target state="translated">AsynchronousFileChannel.open()</target>
        </trans-unit>
        <trans-unit id="95f0a39c98fe341f738d5e97a2d24efde3c09a7f" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel.read()</source>
          <target state="translated">AsynchronousFileChannel.read()</target>
        </trans-unit>
        <trans-unit id="342cf21e6b57aba468c4406bdbc68d5ae84456a9" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel.size()</source>
          <target state="translated">AsynchronousFileChannel.size()</target>
        </trans-unit>
        <trans-unit id="f2a0e94a307aed84704ca7719e2217d35094b899" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel.truncate()</source>
          <target state="translated">AsynchronousFileChannel.truncate()</target>
        </trans-unit>
        <trans-unit id="0461b432fcad0bfcbfbede6659d4cac01aeff352" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel.tryLock()</source>
          <target state="translated">AsynchronousFileChannel.tryLock()</target>
        </trans-unit>
        <trans-unit id="0d9d3c124561902d2ed067194dcabc13bef9e32f" translate="yes" xml:space="preserve">
          <source>AsynchronousFileChannel.write()</source>
          <target state="translated">AsynchronousFileChannel.write()</target>
        </trans-unit>
        <trans-unit id="9820a668ac36c047c8fc3c88beddfe1c6e4de467" translate="yes" xml:space="preserve">
          <source>AsynchronousServerSocketChannel</source>
          <target state="translated">AsynchronousServerSocketChannel</target>
        </trans-unit>
        <trans-unit id="0ed948c40f5ab1a65902b9c351b7d64330a6d683" translate="yes" xml:space="preserve">
          <source>AsynchronousServerSocketChannel.accept()</source>
          <target state="translated">AsynchronousServerSocketChannel.accept()</target>
        </trans-unit>
        <trans-unit id="67dd37dc020e003689e2634e4b72160bbf95ced1" translate="yes" xml:space="preserve">
          <source>AsynchronousServerSocketChannel.bind()</source>
          <target state="translated">AsynchronousServerSocketChannel.bind()</target>
        </trans-unit>
        <trans-unit id="68004c87af8f2afaf52e389020a56f05a52ebf70" translate="yes" xml:space="preserve">
          <source>AsynchronousServerSocketChannel.getLocalAddress()</source>
          <target state="translated">AsynchronousServerSocketChannel.getLocalAddress()</target>
        </trans-unit>
        <trans-unit id="3b3385acd971fa6f7af8b73432f320981e5e284f" translate="yes" xml:space="preserve">
          <source>AsynchronousServerSocketChannel.open()</source>
          <target state="translated">AsynchronousServerSocketChannel.open()</target>
        </trans-unit>
        <trans-unit id="af0a97236c952e07d89e6b35f23772e47e78d3d1" translate="yes" xml:space="preserve">
          <source>AsynchronousServerSocketChannel.provider()</source>
          <target state="translated">AsynchronousServerSocketChannel.provider()</target>
        </trans-unit>
        <trans-unit id="dc5b9061787eed9e8b249943e56933361c70b652" translate="yes" xml:space="preserve">
          <source>AsynchronousServerSocketChannel.setOption()</source>
          <target state="translated">AsynchronousServerSocketChannel.setOption()</target>
        </trans-unit>
        <trans-unit id="19b0bc9ffd74de23112a7825d4a92c38f4496b27" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel</source>
          <target state="translated">AsynchronousSocketChannel</target>
        </trans-unit>
        <trans-unit id="3c556485faa9f0b602270568e0e88aca6b61adc9" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.bind()</source>
          <target state="translated">AsynchronousSocketChannel.bind()</target>
        </trans-unit>
        <trans-unit id="5f04352e3263607eddb106f05894f657afad77c0" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.connect()</source>
          <target state="translated">AsynchronousSocketChannel.connect()</target>
        </trans-unit>
        <trans-unit id="eb17533b1c6dd367f748fd2a1f7831055f30fe4a" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.getLocalAddress()</source>
          <target state="translated">AsynchronousSocketChannel.getLocalAddress()</target>
        </trans-unit>
        <trans-unit id="e8e962516d0a1cf476846ed81f049bb0c89c3b65" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.getRemoteAddress()</source>
          <target state="translated">AsynchronousSocketChannel.getRemoteAddress()</target>
        </trans-unit>
        <trans-unit id="97fc71267041d6d1805e0d4c5a6e7cf1ffec2be7" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.open()</source>
          <target state="translated">AsynchronousSocketChannel.open()</target>
        </trans-unit>
        <trans-unit id="61198a34e6791c0c83be05300c899f29bf7941d8" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.provider()</source>
          <target state="translated">AsynchronousSocketChannel.provider()</target>
        </trans-unit>
        <trans-unit id="91fbfaae6f623af2474b8fd90cdd598c1ec2b519" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.read()</source>
          <target state="translated">AsynchronousSocketChannel.read()</target>
        </trans-unit>
        <trans-unit id="77daa2795de913d31bfa2670f9bfbcffcdee30dd" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.setOption()</source>
          <target state="translated">AsynchronousSocketChannel.setOption()</target>
        </trans-unit>
        <trans-unit id="6b53b99270afbb64ff8312cbace8118ec6baf2e7" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.shutdownInput()</source>
          <target state="translated">AsynchronousSocketChannel.shutdownInput()</target>
        </trans-unit>
        <trans-unit id="f9f90e06b9d36df23262bd662f1af5fdcac6386c" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.shutdownOutput()</source>
          <target state="translated">AsynchronousSocketChannel.shutdownOutput()</target>
        </trans-unit>
        <trans-unit id="82429badd61ae52d398401a5ecf2597dfa6ab69b" translate="yes" xml:space="preserve">
          <source>AsynchronousSocketChannel.write()</source>
          <target state="translated">AsynchronousSocketChannel.write()</target>
        </trans-unit>
        <trans-unit id="465f4db403e45e6fb27fbb5afc0eff730f096b16" translate="yes" xml:space="preserve">
          <source>At a high level, the &lt;code&gt;SSLEngine&lt;/code&gt; appears thus:</source>
          <target state="translated">高レベルでは、 &lt;code&gt;SSLEngine&lt;/code&gt; は次のように表示されます。</target>
        </trans-unit>
        <trans-unit id="794013949b2e9be3a6704050c29247d164b4c468" translate="yes" xml:space="preserve">
          <source>At a minimum, a &lt;code&gt;CertPathBuilderResult&lt;/code&gt; contains the &lt;code&gt;CertPath&lt;/code&gt; built by the &lt;code&gt;CertPathBuilder&lt;/code&gt; instance. Implementations of this interface may add methods to return implementation or algorithm specific information, such as debugging information or certification path validation results.</source>
          <target state="translated">少なくとも、 &lt;code&gt;CertPathBuilderResult&lt;/code&gt; には、 &lt;code&gt;CertPathBuilder&lt;/code&gt; インスタンスによって構築されたCertPathが含まれてい &lt;code&gt;CertPath&lt;/code&gt; 。このインターフェイスの実装は、デバッグ情報や証明書パス検証結果などの実装またはアルゴリズム固有の情報を返すメソッドを追加する場合があります。</target>
        </trans-unit>
        <trans-unit id="c14d1fb0dfd837b3606459f2cdf9e075d76d515f" translate="yes" xml:space="preserve">
          <source>At a minimum, a &lt;code&gt;KeySelectorResult&lt;/code&gt; contains the &lt;code&gt;Key&lt;/code&gt; selected by the &lt;code&gt;KeySelector&lt;/code&gt;. Implementations of this interface may add methods to return implementation or algorithm specific information, such as a chain of certificates or debugging information.</source>
          <target state="translated">少なくとも、 &lt;code&gt;KeySelectorResult&lt;/code&gt; には、 &lt;code&gt;KeySelector&lt;/code&gt; によって選択された &lt;code&gt;Key&lt;/code&gt; が含まれます。このインターフェースの実装は、証明書のチェーンやデバッグ情報など、実装またはアルゴリズム固有の情報を返すメソッドを追加する場合があります。</target>
        </trans-unit>
        <trans-unit id="eba00f0f49e209660b101ab4a8b4cde9d34f2d5b" translate="yes" xml:space="preserve">
          <source>At a minimum, an implementation must support the conversions defined in Appendix B, Table B-3 and conversion of appropriate user defined SQL types to a Java type which implements &lt;code&gt;SQLData&lt;/code&gt;, or &lt;code&gt;Struct&lt;/code&gt;. Additional conversions may be supported and are vendor defined.</source>
          <target state="translated">少なくとも、実装は、付録B、表B-3で定義されている変換、および適切なユーザー定義のSQL型から &lt;code&gt;SQLData&lt;/code&gt; または &lt;code&gt;Struct&lt;/code&gt; を実装するJava型への変換をサポートする必要があります。追加の変換がサポートされる場合があり、ベンダーによって定義されます。</target>
        </trans-unit>
        <trans-unit id="4dfd6e82723313e84d6ed27df9dba368ec23871d" translate="yes" xml:space="preserve">
          <source>At a minimum, the packer must set progress to 0 at the beginning of a packing operation, and to 100 at the end.</source>
          <target state="translated">最低でも、パッカーはパッカー作業の開始時には進捗状況を0に、終了時には100に設定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="d2b58a91a0f68a04cd8a32264f3939092e0cae52" translate="yes" xml:space="preserve">
          <source>At a minimum, the reference synchronization provider allowing RowSet content data to be stored using a JDBC driver should be possible.</source>
          <target state="translated">最低限、JDBCドライバを使用してRowSetのコンテンツデータを保存することを可能にする参照同期プロバイダがあるはずです。</target>
        </trans-unit>
        <trans-unit id="6127688af7da3c07200f3074a005cb92ef0e32b7" translate="yes" xml:space="preserve">
          <source>At a minimum, the unpacker must set progress to 0 at the beginning of a packing operation, and to 100 at the end.</source>
          <target state="translated">最低でも,アンパッカーは,包装作業の開始時に進行状況を 0 に設定し,終了時には 100 に設定しなければならない。</target>
        </trans-unit>
        <trans-unit id="645108c71f0b81d71ecd1afb1f6097888864cddc" translate="yes" xml:space="preserve">
          <source>At a minimum, the unpacker must set progress to 0 at the beginning of an unpacking operation, and to 100 at the end.</source>
          <target state="translated">最低限,アンパッカーは,アンパッキング動作の開始時に進行状況を 0 に設定し,終了時には 100 に設定しなければならない。</target>
        </trans-unit>
        <trans-unit id="63be36e4ae951bd0802c80122e005323536e4bea" translate="yes" xml:space="preserve">
          <source>At compile time only, the compilation module path. This path contains module definitions in source form.</source>
          <target state="translated">コンパイル時のみ、コンパイルモジュールのパス。このパスには、ソース形式のモジュール定義が含まれています。</target>
        </trans-unit>
        <trans-unit id="a771eb4fbd3c832a048e2ed055cc05054c41cd58" translate="yes" xml:space="preserve">
          <source>At construction time, a component's orientation is set to &lt;code&gt;ComponentOrientation.UNKNOWN&lt;/code&gt;, indicating that it has not been specified explicitly. The UNKNOWN orientation behaves the same as &lt;code&gt;ComponentOrientation.LEFT_TO_RIGHT&lt;/code&gt;.</source>
          <target state="translated">構築時に、コンポーネントの方向は &lt;code&gt;ComponentOrientation.UNKNOWN&lt;/code&gt; に設定され、明示的に指定されていないことを示します。UNKNOWNオリエンテーションは、 &lt;code&gt;ComponentOrientation.LEFT_TO_RIGHT&lt;/code&gt; と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="a8868d00640e44771b73de4f7b3fb725ca8a0d5f" translate="yes" xml:space="preserve">
          <source>At end time, the stream is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed0e1e331e4292339cbcbf2794ef1833d84c286" translate="yes" xml:space="preserve">
          <source>At higher levels of synchronization, referred to as pessimistic concurrency, the writer take steps to avoid conflicts by setting locks. Setting locks can vary from setting a lock on a single row to setting a lock on a table or the entire data source. The level of synchronization is therefore a tradeoff between the ability of users to access the data source concurrently and the ability of the writer to keep the data in the &lt;code&gt;RowSet&lt;/code&gt; object and its data source synchronized.</source>
          <target state="translated">悲観的同時実行と呼ばれるより高いレベルの同期では、ライターはロックを設定することで競合を回避するための措置を講じます。ロックの設定は、単一の行にロックを設定することから、テーブルまたはデータソース全体にロックを設定することまでさまざまです。したがって、同期のレベルは、データソースに同時にアクセスするユーザーの機能と、 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトとそのデータソースのデータの同期を維持するライターの機能との間のトレードオフです。</target>
        </trans-unit>
        <trans-unit id="30ae6f8341e10c25d9dd4bff94d65f2135d69854" translate="yes" xml:space="preserve">
          <source>At least one input tray is empty.</source>
          <target state="translated">少なくとも1つの入力トレイが空になっています。</target>
        </trans-unit>
        <trans-unit id="9b9afe38b66a597bfb1e738aa766522915020ff5" translate="yes" xml:space="preserve">
          <source>At least one input tray is low on media.</source>
          <target state="translated">少なくとも1つの入力トレイのメディアの量が少ない。</target>
        </trans-unit>
        <trans-unit id="c8a8538b2910f365fc7f32a8dd7479b3e52a8386" translate="yes" xml:space="preserve">
          <source>At least one of publicId and systemId must be non-null. If a system identifier is present, and it is a URL, the SAX parser must resolve it fully before passing it to the application through this event.</source>
          <target state="translated">publicId と systemId のうち少なくとも 1 つは非 null である必要があります。システム識別子が存在し、それがURLである場合、SAXパーサは、このイベントを通してアプリケーションに渡す前に、それを完全に解決しなければなりません。</target>
        </trans-unit>
        <trans-unit id="b26835d9f8e8575c4f50c02cac9482274d53f272" translate="yes" xml:space="preserve">
          <source>At least one of the resources needed by the job, such as media, fonts, resource objects, etc., is not ready on any of the physical printers for which the job is a candidate.</source>
          <target state="translated">メディア、フォント、リソースオブジェクトなど、ジョブが必要とするリソースのうち少なくとも1つが、ジョブが候補としている物理プリンタ上に用意されていません。</target>
        </trans-unit>
        <trans-unit id="7cbc6cf1fc5c19a66339259df4a399d1bc7a2615" translate="yes" xml:space="preserve">
          <source>At least one of the resources needed by the job, such as media, fonts, resource objects, etc., is not ready on any of the physical printers for which the job is a candidate. This condition may be detected when the job is accepted, or subsequently while the job is pending or processing, depending on implementation. The job may remain in its current state or be moved to the &lt;code&gt;PENDING_HELD&lt;/code&gt; state, depending on implementation and/or job scheduling policy.</source>
          <target state="translated">メディア、フォント、リソースオブジェクトなど、ジョブに必要なリソースの少なくとも1つが、ジョブが候補となる物理プリンターのいずれにも準備ができていません。この状態は、実装に応じて、ジョブが受け入れられたとき、またはその後、ジョブが保留中または処理中に検出される場合があります。実装やジョブスケジューリングポリシーに応じて、ジョブは現在の状態のままになるか、 &lt;code&gt;PENDING_HELD&lt;/code&gt; 状態に移行する場合があります。</target>
        </trans-unit>
        <trans-unit id="9c72aae14b0592984195a6d333c85aec5e1dad21" translate="yes" xml:space="preserve">
          <source>At least one of the resources needed by the job, such as media, fonts, resource objects, etc., is not ready on any of the physical printers for which the job is a candidate. This condition may be detected when the job is accepted, or subsequently while the job is pending or processing, depending on implementation. The job may remain in its current state or be moved to the PENDING_HELD state, depending on implementation and/or job scheduling policy.</source>
          <target state="translated">メディア、フォント、リソースオブジェクトなど、ジョブが必要とするリソースのうち少なくとも1つが、ジョブが候補としている物理プリンタ上に用意されていません。この状態は、ジョブが受理されたときに検出されてもよいし、実装によっては、その後、ジョブが保留中または処理中の間に検出されてもよい。ジョブは、実装および/またはジョブスケジューリングポリシーに応じて、現在の状態のままであったり、PENDING_HELD状態に移動したりすることがあります。</target>
        </trans-unit>
        <trans-unit id="d8be2c174b716c3f30c1cf6769ccf4211404f05c" translate="yes" xml:space="preserve">
          <source>At most one element of a key property list may be an asterisk. If the key property list contains an asterisk element, the ObjectName is a property list pattern.</source>
          <target state="translated">キー・プロパティ・リストの最大1つの要素にアスタリスクを付けることができます。キー・プロパティ・リストにアスタリスク要素が含まれている場合、ObjectName はプロパティ・リスト・パターンです。</target>
        </trans-unit>
        <trans-unit id="5891510826b88073ff6a97e4db2401644ab195ac" translate="yes" xml:space="preserve">
          <source>At most one method in the list is a concrete method and a component of &lt;a href=&quot;classtype&quot;&gt;&lt;code&gt;ClassType&lt;/code&gt;&lt;/a&gt;; any other methods in the list are abstract. Use &lt;a href=&quot;classtype#concreteMethodByName(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;ClassType.concreteMethodByName(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt; to retrieve only the matching concrete method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423d1c1a2e18be9db61446923b1d66e7729bc946" translate="yes" xml:space="preserve">
          <source>At most, one &lt;code&gt;ChangeEvent&lt;/code&gt; is generated.</source>
          <target state="translated">最大で1つの &lt;code&gt;ChangeEvent&lt;/code&gt; が生成されます。</target>
        </trans-unit>
        <trans-unit id="1fa0958a89112583d2766f438b0a0b5d86c398e4" translate="yes" xml:space="preserve">
          <source>At run-time, resolution is an additive process. The recursive enumeration at step 1 may be relative to previous resolutions so that a root module, or a module named in a 'requires' directive, is not enumerated when it was enumerated by a previous (or parent) resolution. The readability graph that is the result of resolution may therefore have a vertex for a module enumerated in step 1 but with an edge to represent that the module reads a module that was enumerated by previous (or parent) resolution.</source>
          <target state="translated">ランタイムでは、解決は加法的なプロセスです。ステップ 1 での再帰的な列挙は、以前の解決策との相対的なものであるかもしれないので、ルートモジュールや 'requires' ディレクティブで名前が付けられたモジュールは、以前の (または親の)解決策によって列挙されたときには列挙されません。したがって、解決の結果である可読性グラフは、ステップ1で列挙されたモジュールの頂点を持っていてもよいが、そのモジュールが以前の(あるいは親の)解決によって列挙されたモジュールを読んでいることを表現するためのエッジを持っていてもよい。</target>
        </trans-unit>
        <trans-unit id="cd789fed137eead45a5ddb2c0e3ccd440ce67d7d" translate="yes" xml:space="preserve">
          <source>At runtime, the conversions applied to reference arguments or return values may require additional runtime checks which can fail. An unboxing operation may fail because the original reference is null, causing a &lt;a href=&quot;../nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt;. An unboxing operation or a reference cast may also fail on a reference to an object of the wrong type, causing a &lt;a href=&quot;../classcastexception&quot;&gt;&lt;code&gt;ClassCastException&lt;/code&gt;&lt;/a&gt;. Although an unboxing operation may accept several kinds of wrappers, if none are available, a &lt;code&gt;ClassCastException&lt;/code&gt; will be thrown.</source>
          <target state="translated">実行時に、参照引数または戻り値に適用される変換には、失敗する可能性のある追加の実行時チェックが必要になる場合があります。元の参照がnullであるため、ボックス化解除操作が失敗し、&lt;a href=&quot;../nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; が&lt;/a&gt;発生する場合があります。ボックス化解除操作または参照キャストも、間違った型のオブジェクトへの参照で失敗し、&lt;a href=&quot;../classcastexception&quot;&gt; &lt;code&gt;ClassCastException&lt;/code&gt; が&lt;/a&gt;発生する場合があります。ボックス化解除操作では、いくつかの種類のラッパーを受け入れることができますが、何も使用できない場合は、 &lt;code&gt;ClassCastException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="22b520aa37771814e084857f4b602027e1e099e4" translate="yes" xml:space="preserve">
          <source>At start-up time the VirtualMachineManager attempts to load and instantiate (using the no-arg constructor) each class listed in the provider configuration file. Exceptions thrown when loading or creating the Connector are caught and ignored. In other words, the start-up process continues despite of errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a449671467bacfacb5cfdc12566e9fd22b5292" translate="yes" xml:space="preserve">
          <source>At startup the LogManager class is located using the java.util.logging.manager system property.</source>
          <target state="translated">起動時には、java.util.logging.manager systemプロパティを使用してLogManagerクラスが配置されます。</target>
        </trans-unit>
        <trans-unit id="07110185b243f71bf4d0cb5b1b9c38694a7195e2" translate="yes" xml:space="preserve">
          <source>At startup, debugger selects one or more connectors from the list returned by &lt;a href=&quot;#listeningConnectors()&quot;&gt;&lt;code&gt;listeningConnectors()&lt;/code&gt;&lt;/a&gt; for one or more transports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa55d3ccaf0916f3d61d036166352b2dc4d894ce" translate="yes" xml:space="preserve">
          <source>At the appropriate time, the &lt;code&gt;ComponentUI&lt;/code&gt; is responsible for obtaining an &lt;code&gt;Action&lt;/code&gt; out of the &lt;code&gt;ActionMap&lt;/code&gt; and passing it to &lt;code&gt;playSound&lt;/code&gt;.</source>
          <target state="translated">適切なタイミングで、 &lt;code&gt;ComponentUI&lt;/code&gt; は、 &lt;code&gt;ActionMap&lt;/code&gt; から &lt;code&gt;Action&lt;/code&gt; を取得して &lt;code&gt;playSound&lt;/code&gt; に渡す責任があります。</target>
        </trans-unit>
        <trans-unit id="b16b3bfb5eec392e43915c41e26621e482cfcb55" translate="yes" xml:space="preserve">
          <source>At the completion of a drop, an implementation of this method is required to signal the success/failure of the drop by passing an appropriate &lt;code&gt;boolean&lt;/code&gt; to the &lt;code&gt;DropTargetDropEvent&lt;/code&gt;'s dropComplete(boolean success) method.</source>
          <target state="translated">ドロップの完了時に、適切な &lt;code&gt;boolean&lt;/code&gt; を &lt;code&gt;DropTargetDropEvent&lt;/code&gt; のdropComplete（boolean success）メソッドに渡すことにより、ドロップの成功/失敗を通知するために、このメソッドの実装が必要です。</target>
        </trans-unit>
        <trans-unit id="42a58db636916fb28b556e9abf682674c0617349" translate="yes" xml:space="preserve">
          <source>At the discretion of the host system, any module whose name is given by a 'requires' directive without the 'transitive' modifier is not observable.</source>
          <target state="translated">ホストシステムの裁量では、'transitive' 修飾子のない 'require' ディレクティブで名前が与えられたモジュールは観測できません。</target>
        </trans-unit>
        <trans-unit id="baddd2b1e84cbc7e6d86e3a6b6beaac2e18f08c9" translate="yes" xml:space="preserve">
          <source>At the end of a communication session, applications should properly close the SSL/TLS link. The SSL/TLS protocols have closure handshake messages, and these messages should be communicated to the peer before releasing the &lt;code&gt;SSLEngine&lt;/code&gt; and closing the underlying transport mechanism. A close can be initiated by one of: an SSLException, an inbound closure handshake message, or one of the close methods. In all cases, closure handshake messages are generated by the engine, and &lt;code&gt;wrap()&lt;/code&gt; should be repeatedly called until the resulting &lt;code&gt;SSLEngineResult&lt;/code&gt;'s status returns &quot;CLOSED&quot;, or &lt;a href=&quot;sslengine#isOutboundDone--&quot;&gt;&lt;code&gt;isOutboundDone()&lt;/code&gt;&lt;/a&gt; returns true. All data obtained from the &lt;code&gt;wrap()&lt;/code&gt; method should be sent to the peer.</source>
          <target state="translated">通信セッションの最後に、アプリケーションはSSL / TLSリンクを適切に閉じる必要があります。 SSL / TLSプロトコルには、クロージャハンドシェイクメッセージがあり、これらのメッセージは、 &lt;code&gt;SSLEngine&lt;/code&gt; を解放して基になるトランスポートメカニズムを閉じる前に、ピアに通知する必要があります。クローズは、SSLException、インバウンドクロージャハンドシェイクメッセージ、またはいずれかのcloseメソッドのいずれかによって開始できます。いずれの場合も、クロージャーハンドシェイクメッセージはエンジンによって生成され、結果の &lt;code&gt;SSLEngineResult&lt;/code&gt; のステータスが「CLOSED」を返すか、&lt;a href=&quot;sslengine#isOutboundDone--&quot;&gt; &lt;code&gt;isOutboundDone()&lt;/code&gt; &lt;/a&gt;がtrueを返すまで、 &lt;code&gt;wrap()&lt;/code&gt; を繰り返し呼び出す必要があります。 &lt;code&gt;wrap()&lt;/code&gt; メソッドから取得したすべてのデータをピアに送信する必要があります。</target>
        </trans-unit>
        <trans-unit id="c07378b79d0b225fa49e36f165164e1e059f1740" translate="yes" xml:space="preserve">
          <source>At the end of a communication session, applications should properly close the SSL/TLS/DTLS link. The SSL/TLS/DTLS protocols have closure handshake messages, and these messages should be communicated to the peer before releasing the &lt;code&gt;SSLEngine&lt;/code&gt; and closing the underlying transport mechanism. A close can be initiated by one of: an SSLException, an inbound closure handshake message, or one of the close methods. In all cases, closure handshake messages are generated by the engine, and &lt;code&gt;wrap()&lt;/code&gt; should be repeatedly called until the resulting &lt;code&gt;SSLEngineResult&lt;/code&gt;'s status returns &quot;CLOSED&quot;, or &lt;a href=&quot;#isOutboundDone()&quot;&gt;&lt;code&gt;isOutboundDone()&lt;/code&gt;&lt;/a&gt; returns true. All data obtained from the &lt;code&gt;wrap()&lt;/code&gt; method should be sent to the peer.</source>
          <target state="translated">通信セッションの終了時に、アプリケーションはSSL / TLS / DTLSリンクを適切に閉じる必要があります。 SSL / TLS / DTLSプロトコルにはクロージャハンドシェイクメッセージがあり、 &lt;code&gt;SSLEngine&lt;/code&gt; を解放して基盤となるトランスポートメカニズムを閉じる前に、これらのメッセージをピアに伝達する必要があります。クローズは、SSLException、インバウンドクロージャハンドシェイクメッセージ、またはクローズメソッドのいずれかによって開始できます。いずれの場合も、クロージャーハンドシェイクメッセージはエンジンによって生成され、結果の &lt;code&gt;SSLEngineResult&lt;/code&gt; のステータスが「CLOSED」を返すか、&lt;a href=&quot;#isOutboundDone()&quot;&gt; &lt;code&gt;isOutboundDone()&lt;/code&gt; &lt;/a&gt;がtrueを返すまで、 &lt;code&gt;wrap()&lt;/code&gt; を繰り返し呼び出す必要があります。 &lt;code&gt;wrap()&lt;/code&gt; メソッドから取得したすべてのデータをピアに送信する必要があります。</target>
        </trans-unit>
        <trans-unit id="3600dcf739c85535bbcb604c9f198e1e39fbed63" translate="yes" xml:space="preserve">
          <source>At the highest level a URI reference (hereinafter simply &quot;URI&quot;) in string form has the syntax</source>
          <target state="translated">最高レベルでは、文字列形式のURI参照(以下、単に「URI」)は構文を持つ。</target>
        </trans-unit>
        <trans-unit id="28570dcb242153dba2d2536d7970503bd9dd5d4d" translate="yes" xml:space="preserve">
          <source>At the simplest level, text can be modeled as a linear sequence of characters. To support internationalization, the Swing text model uses &lt;a href=&quot;http://www.unicode.org/&quot;&gt;unicode&lt;/a&gt; characters. The sequence of characters displayed in a text component is generally referred to as the component's &lt;em&gt;content&lt;/em&gt;.</source>
          <target state="translated">最も単純なレベルでは、テキストは文字の線形シーケンスとしてモデル化できます。国際化をサポートするために、Swingテキストモデルは&lt;a href=&quot;http://www.unicode.org/&quot;&gt;Unicode&lt;/a&gt;文字を使用します。テキストコンポーネントに表示される文字のシーケンスは、通常、コンポーネントの&lt;em&gt;コンテンツ&lt;/em&gt;と呼ばれ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="688fd72e5b45b2bae27ea6830ec1f3854b2dcdca" translate="yes" xml:space="preserve">
          <source>At the simplest level, text can be modeled as a linear sequence of characters. To support internationalization, the Swing text model uses &lt;a href=&quot;https://www.unicode.org/&quot;&gt;unicode&lt;/a&gt; characters. The sequence of characters displayed in a text component is generally referred to as the component's &lt;em&gt;content&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aaddf518075b4dc566a22cbda0dbf3d9cfd1c93" translate="yes" xml:space="preserve">
          <source>At the simplest, a builder is retrieved, and the builder is used to start the tool:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289f8b71d95a92b9ac8ae580447e077588d5231a" translate="yes" xml:space="preserve">
          <source>At the time any of the filter methods are called by the parser, the owner Document and DOMImplementation objects exist and are accessible. The document element is never passed to the &lt;code&gt;LSParserFilter&lt;/code&gt; methods, i.e. it is not possible to filter out the document element. &lt;code&gt;Document&lt;/code&gt;, &lt;code&gt;DocumentType&lt;/code&gt;, &lt;code&gt;Notation&lt;/code&gt;, &lt;code&gt;Entity&lt;/code&gt;, and &lt;code&gt;Attr&lt;/code&gt; nodes are never passed to the &lt;code&gt;acceptNode&lt;/code&gt; method on the filter. The child nodes of an &lt;code&gt;EntityReference&lt;/code&gt; node are passed to the filter if the parameter &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-entities&quot;&gt;entities&lt;/a&gt;&quot; is set to &lt;code&gt;false&lt;/code&gt;. Note that, as described by the parameter &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-entities&quot;&gt;entities&lt;/a&gt;&quot;, unexpanded entity reference nodes are never discarded and are always passed to the filter.</source>
          <target state="translated">いずれかのフィルターメソッドがパーサーによって呼び出されると、所有者のDocumentオブジェクトとDOMImplementationオブジェクトが存在し、アクセス可能になります。 document要素が &lt;code&gt;LSParserFilter&lt;/code&gt; メソッドに渡されることはありません。つまり、document要素をフィルターで除外することはできません。 &lt;code&gt;Document&lt;/code&gt; 、 &lt;code&gt;DocumentType&lt;/code&gt; 、 &lt;code&gt;Notation&lt;/code&gt; 、 &lt;code&gt;Entity&lt;/code&gt; 、および &lt;code&gt;Attr&lt;/code&gt; ノードは、フィルターの &lt;code&gt;acceptNode&lt;/code&gt; メソッドに渡されることはありません。パラメータ「&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-entities&quot;&gt;entities&lt;/a&gt;」が &lt;code&gt;false&lt;/code&gt; に設定されている場合、 &lt;code&gt;EntityReference&lt;/code&gt; ノードの子ノードがフィルタに渡されます。パラメータ「&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-entities&quot;&gt;エンティティ&lt;/a&gt;」で説明されているように、注意してください&quot;、展開されていないエンティティ参照ノードが破棄されることはなく、常にフィルターに渡されます。</target>
        </trans-unit>
        <trans-unit id="732f992a8ac91e6d3c80ad202f2b11658aec5c35" translate="yes" xml:space="preserve">
          <source>At the time of reading or writing, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown by the reader or writer if a value larger than the largest destination band index has been specified, or if the number of source bands and destination bands to be used differ. The &lt;code&gt;ImageReader.checkReadParamBandSettings&lt;/code&gt; method may be used to automate this test.</source>
          <target state="translated">読み取りまたは書き込み時に、最大宛先バンドインデックスより大きい値が指定されている場合、または使用されるソースバンドと宛先バンドの数が異なる場合、リーダーまたはライターによって &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。 &lt;code&gt;ImageReader.checkReadParamBandSettings&lt;/code&gt; の方法は、このテストを自動化するために使用されてもよいです。</target>
        </trans-unit>
        <trans-unit id="c41012a0616676f7d23f9fe0674fd8b3a31f06d5" translate="yes" xml:space="preserve">
          <source>At the time of reading, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown by the reader or writer if a value larger than the largest available source band index has been specified or if the number of source bands and destination bands to be used differ. The &lt;code&gt;ImageReader.checkReadParamBandSettings&lt;/code&gt; method may be used to automate this test.</source>
          <target state="translated">読み取り時に、使用可能な最大のソースバンドインデックスより大きい値が指定されている場合、または使用されるソースバンドと宛先バンドの数が異なる場合、リーダーまたはライターによって &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。 &lt;code&gt;ImageReader.checkReadParamBandSettings&lt;/code&gt; の方法は、このテストを自動化するために使用されてもよいです。</target>
        </trans-unit>
        <trans-unit id="aff746f577b2ef009b70a0d8c13d2aaff8eebfb5" translate="yes" xml:space="preserve">
          <source>At the time of reading, the image is checked to verify that its &lt;code&gt;ColorModel&lt;/code&gt; and &lt;code&gt;SampleModel&lt;/code&gt; correspond to one of the &lt;code&gt;ImageTypeSpecifier&lt;/code&gt;s returned from the &lt;code&gt;ImageReader&lt;/code&gt;'s &lt;code&gt;getImageTypes&lt;/code&gt; method. If it does not, the reader will throw an &lt;code&gt;IIOException&lt;/code&gt;.</source>
          <target state="translated">読み取り時に、イメージがチェックされ、その &lt;code&gt;ColorModel&lt;/code&gt; と &lt;code&gt;SampleModel&lt;/code&gt; が &lt;code&gt;ImageReader&lt;/code&gt; の &lt;code&gt;getImageTypes&lt;/code&gt; メソッドから返された &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; の1つに対応していることが確認されます。そうでない場合、リーダーは &lt;code&gt;IIOException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="521125ddadcb8ea8987ed2949417122d4a840175" translate="yes" xml:space="preserve">
          <source>At this point,</source>
          <target state="translated">この時点では</target>
        </trans-unit>
        <trans-unit id="a692e529909dbde465dc00470bd9639e9737c2a7" translate="yes" xml:space="preserve">
          <source>At this point, &lt;code&gt;getBundle&lt;/code&gt; finds &lt;code&gt;foo/bar/Messages.properties&lt;/code&gt;, which is put on hold because it's the base bundle. &lt;code&gt;getBundle&lt;/code&gt; calls &lt;a href=&quot;resourcebundle.control#getFallbackLocale(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;control.getFallbackLocale(&quot;foo.bar.Messages&quot;, Locale.ITALY)&lt;/code&gt;&lt;/a&gt; which returns &lt;code&gt;Locale.FRENCH&lt;/code&gt;. Next, &lt;code&gt;getBundle&lt;/code&gt; tries loading a bundle in the following sequence.</source>
          <target state="translated">この時点で、 &lt;code&gt;getBundle&lt;/code&gt; は &lt;code&gt;foo/bar/Messages.properties&lt;/code&gt; を検出します。これは、基本バンドルであるため保留になっています。 &lt;code&gt;getBundle&lt;/code&gt; のは、呼び出す&lt;a href=&quot;resourcebundle.control#getFallbackLocale(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;control.getFallbackLocale(&quot;foo.bar.Messages&quot;, Locale.ITALY)&lt;/code&gt; &lt;/a&gt;を返し &lt;code&gt;Locale.FRENCH&lt;/code&gt; を。次に、 &lt;code&gt;getBundle&lt;/code&gt; は次の順序でバンドルのロードを試みます。</target>
        </trans-unit>
        <trans-unit id="04572e2e3855dc7fbb76d1c15cf78b667eda066c" translate="yes" xml:space="preserve">
          <source>At this point, &lt;code&gt;getBundle&lt;/code&gt; finds &lt;code&gt;foo/bar/Messages.properties&lt;/code&gt;, which is put on hold because it's the base bundle. &lt;code&gt;getBundle&lt;/code&gt; calls &lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;control.getFallbackLocale(&quot;foo.bar.Messages&quot;, Locale.ITALY)&lt;/code&gt;&lt;/a&gt; which returns &lt;code&gt;Locale.FRENCH&lt;/code&gt;. Next, &lt;code&gt;getBundle&lt;/code&gt; tries loading a bundle in the following sequence.</source>
          <target state="translated">この時点で、 &lt;code&gt;getBundle&lt;/code&gt; は &lt;code&gt;foo/bar/Messages.properties&lt;/code&gt; を検出します。これは、基本バンドルであるため保留されます。 &lt;code&gt;getBundle&lt;/code&gt; は&lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;control.getFallbackLocale(&quot;foo.bar.Messages&quot;, Locale.ITALY)&lt;/code&gt; &lt;/a&gt;を返すcontrol.getFallbackLocale（ &quot;foo.bar.Messages&quot;、Locale.ITALY）を &lt;code&gt;Locale.FRENCH&lt;/code&gt; ます。次に、 &lt;code&gt;getBundle&lt;/code&gt; は次の順序でバンドルのロードを試みます。</target>
        </trans-unit>
        <trans-unit id="4d6de1188ad0f86a8046d61a60a1b9e1df0cbd8b" translate="yes" xml:space="preserve">
          <source>At this point, every init function parameter list is effectively identical to the external parameter list &lt;code&gt;(A...)&lt;/code&gt;, but some lists may be shorter. For every init function with a short parameter list, pad out the end of the list.</source>
          <target state="translated">この時点で、すべてのinit関数パラメーターリストは実質的に外部パラメーターリスト &lt;code&gt;(A...)&lt;/code&gt; と同じですが、一部のリストはより短い場合があります。短いパラメータリストを持つすべてのinit関数について、リストの最後を埋めます。</target>
        </trans-unit>
        <trans-unit id="bfa760755353e81deeab9e166eddec0fc4b880af" translate="yes" xml:space="preserve">
          <source>At this point, every non-init function parameter list is effectively identical to the internal parameter list &lt;code&gt;(V... A...)&lt;/code&gt;, but some lists may be shorter. For every non-init function with a short parameter list, pad out the end of the list.</source>
          <target state="translated">この時点で、すべての非init関数パラメーターリストは実質的に内部パラメーターリスト &lt;code&gt;(V... A...)&lt;/code&gt; と同一ですが、一部のリストはより短い場合があります。短いパラメータリストを持つすべての非init関数について、リストの最後を埋めます。</target>
        </trans-unit>
        <trans-unit id="c91c8ec3b3c881d1cf8653c91f7e50fa68768cbe" translate="yes" xml:space="preserve">
          <source>At this point, the command for &lt;code&gt;crs&lt;/code&gt; is the query &lt;code&gt;&quot;SELECT
 FIRST_NAME, LAST_NAME, ADDRESS FROM CUSTOMERS WHERE CREDIT_LIMIT &amp;gt; 5000
 AND REGION = &quot;West&quot;&lt;/code&gt;. After the &lt;code&gt;readData&lt;/code&gt; method executes this command with the following line of code, it will have the data from &lt;code&gt;rs&lt;/code&gt; with which to populate &lt;code&gt;crs&lt;/code&gt;.</source>
          <target state="translated">この時点で、 &lt;code&gt;crs&lt;/code&gt; のコマンドは、クエリ &lt;code&gt;&quot;SELECT FIRST_NAME, LAST_NAME, ADDRESS FROM CUSTOMERS WHERE CREDIT_LIMIT &amp;gt; 5000 AND REGION = &quot;West&quot;&lt;/code&gt; です &lt;code&gt;readData&lt;/code&gt; メソッドが次のコード行でこのコマンドを実行すると、データが取得されます。 &lt;code&gt;crs&lt;/code&gt; にデータを入力する &lt;code&gt;rs&lt;/code&gt; から。</target>
        </trans-unit>
        <trans-unit id="e410ecd471472d8a7aa5335a30bed37263709a93" translate="yes" xml:space="preserve">
          <source>At this point, we have found a resource bundle that's not the base bundle. If this bundle set its parent during its instantiation, it is returned to the caller. Otherwise, its &lt;a href=&quot;resourcebundle#parent_chain&quot;&gt;parent chain&lt;/a&gt; is instantiated based on the list of candidate locales from which it was found. Finally, the bundle is returned to the caller.</source>
          <target state="translated">この時点で、ベースバンドルではないリソースバンドルが見つかりました。このバンドルがインスタンス化中に親を設定すると、呼び出し元に返されます。それ以外の場合、その&lt;a href=&quot;resourcebundle#parent_chain&quot;&gt;親チェーン&lt;/a&gt;は、それが見つかった候補ロケールのリストに基づいてインスタンス化されます。最後に、バンドルは呼び出し元に返されます。</target>
        </trans-unit>
        <trans-unit id="a247514663abbd4eab3efc5a540d37f131b17503" translate="yes" xml:space="preserve">
          <source>At transaction commit time, the resource managers are informed by the transaction manager to prepare, commit, or rollback a transaction according to the two-phase commit protocol.</source>
          <target state="translated">トランザクションのコミット時に、リソースマネージャは、トランザクションマネージャから、二段階のコミットプロトコルに従って、トランザクションの準備、コミット、またはロールバックを行うように通知される。</target>
        </trans-unit>
        <trans-unit id="f3901a778297cd4e3095098dc0b02793244da9ca" translate="yes" xml:space="preserve">
          <source>At uninstallUI() time we reset the property to null if its value is an instance of UIResource:</source>
          <target state="translated">uninstallUI()では、そのプロパティの値がUIResourceのインスタンスであれば、そのプロパティをnullにリセットします。</target>
        </trans-unit>
        <trans-unit id="db46499b6071e169916a6d3ccbed296282f361c8" translate="yes" xml:space="preserve">
          <source>At various points this class specifies that an instance that is &quot;open for reading,&quot; &quot;open for writing,&quot; or &quot;open for reading and writing&quot; is required. A channel obtained via the &lt;a href=&quot;../../io/fileinputstream#getChannel()&quot;&gt;&lt;code&gt;getChannel&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;../../io/fileinputstream&quot;&gt;&lt;code&gt;FileInputStream&lt;/code&gt;&lt;/a&gt; instance will be open for reading. A channel obtained via the &lt;a href=&quot;../../io/fileoutputstream#getChannel()&quot;&gt;&lt;code&gt;getChannel&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;../../io/fileoutputstream&quot;&gt;&lt;code&gt;FileOutputStream&lt;/code&gt;&lt;/a&gt; instance will be open for writing. Finally, a channel obtained via the &lt;a href=&quot;../../io/randomaccessfile#getChannel()&quot;&gt;&lt;code&gt;getChannel&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;../../io/randomaccessfile&quot;&gt;&lt;code&gt;RandomAccessFile&lt;/code&gt;&lt;/a&gt; instance will be open for reading if the instance was created with mode &lt;code&gt;&quot;r&quot;&lt;/code&gt; and will be open for reading and writing if the instance was created with mode &lt;code&gt;&quot;rw&quot;&lt;/code&gt;.</source>
          <target state="translated">このクラスは、さまざまな時点で、「読み取り用に開く」、「書き込み用に開く」、または「読み取りと書き込み用に開く」インスタンスが必要であることを指定します。&lt;a href=&quot;../../io/fileinputstream&quot;&gt; &lt;code&gt;FileInputStream&lt;/code&gt; &lt;/a&gt;インスタンスの&lt;a href=&quot;../../io/fileinputstream#getChannel()&quot;&gt; &lt;code&gt;getChannel&lt;/code&gt; &lt;/a&gt;メソッドを介して取得されたチャネルは、読み取り用に開かれます。&lt;a href=&quot;../../io/fileoutputstream&quot;&gt; &lt;code&gt;FileOutputStream&lt;/code&gt; &lt;/a&gt;インスタンスの&lt;a href=&quot;../../io/fileoutputstream#getChannel()&quot;&gt; &lt;code&gt;getChannel&lt;/code&gt; &lt;/a&gt;メソッドを介して取得されたチャネルは、書き込み用に開かれます。最後に、&lt;a href=&quot;../../io/randomaccessfile&quot;&gt; &lt;code&gt;RandomAccessFile&lt;/code&gt; &lt;/a&gt;インスタンスの&lt;a href=&quot;../../io/randomaccessfile#getChannel()&quot;&gt; &lt;code&gt;getChannel&lt;/code&gt; &lt;/a&gt;メソッドを介して取得されたチャネルは、インスタンスがモード &lt;code&gt;&quot;r&quot;&lt;/code&gt; で作成された場合は読み取り用に開かれ、インスタンスがモード &lt;code&gt;&quot;rw&quot;&lt;/code&gt; で作成された場合は読み取りと書き込み用に開かれます。</target>
        </trans-unit>
        <trans-unit id="af9dcb2d2164b28c11a33a8399737216abc72537" translate="yes" xml:space="preserve">
          <source>At various points this class specifies that an instance that is &quot;open for reading,&quot; &quot;open for writing,&quot; or &quot;open for reading and writing&quot; is required. A channel obtained via the &lt;a href=&quot;../../io/fileinputstream#getChannel--&quot;&gt;&lt;code&gt;getChannel&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;../../io/fileinputstream&quot;&gt;&lt;code&gt;FileInputStream&lt;/code&gt;&lt;/a&gt; instance will be open for reading. A channel obtained via the &lt;a href=&quot;../../io/fileoutputstream#getChannel--&quot;&gt;&lt;code&gt;getChannel&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;../../io/fileoutputstream&quot;&gt;&lt;code&gt;FileOutputStream&lt;/code&gt;&lt;/a&gt; instance will be open for writing. Finally, a channel obtained via the &lt;a href=&quot;../../io/randomaccessfile#getChannel--&quot;&gt;&lt;code&gt;getChannel&lt;/code&gt;&lt;/a&gt; method of a &lt;a href=&quot;../../io/randomaccessfile&quot;&gt;&lt;code&gt;RandomAccessFile&lt;/code&gt;&lt;/a&gt; instance will be open for reading if the instance was created with mode &lt;code&gt;&quot;r&quot;&lt;/code&gt; and will be open for reading and writing if the instance was created with mode &lt;code&gt;&quot;rw&quot;&lt;/code&gt;.</source>
          <target state="translated">さまざまな時点で、このクラスは、「読み取り用にオープン」、「書き込み用にオープン」、または「読み取りおよび書き込み用にオープン」であるインスタンスが必要であることを指定します。&lt;a href=&quot;../../io/fileinputstream&quot;&gt; &lt;code&gt;FileInputStream&lt;/code&gt; &lt;/a&gt;インスタンスの&lt;a href=&quot;../../io/fileinputstream#getChannel--&quot;&gt; &lt;code&gt;getChannel&lt;/code&gt; &lt;/a&gt;メソッドを介して取得されたチャネルは、読み取り用に開かれます。&lt;a href=&quot;../../io/fileoutputstream&quot;&gt; &lt;code&gt;FileOutputStream&lt;/code&gt; &lt;/a&gt;インスタンスの&lt;a href=&quot;../../io/fileoutputstream#getChannel--&quot;&gt; &lt;code&gt;getChannel&lt;/code&gt; &lt;/a&gt;メソッドを介して取得されたチャネルは、書き込み用に開かれます。最後に、&lt;a href=&quot;../../io/randomaccessfile&quot;&gt; &lt;code&gt;RandomAccessFile&lt;/code&gt; &lt;/a&gt;インスタンスの&lt;a href=&quot;../../io/randomaccessfile#getChannel--&quot;&gt; &lt;code&gt;getChannel&lt;/code&gt; &lt;/a&gt;メソッドを介して取得されたチャネルは、インスタンスがモード &lt;code&gt;&quot;r&quot;&lt;/code&gt; で作成された場合は読み取り用に開かれ、インスタンスがモード &lt;code&gt;&quot;rw&quot;&lt;/code&gt; で作成された場合は読み取りおよび書き込み用に開かれます。</target>
        </trans-unit>
        <trans-unit id="c3ba21965adef48b4fad4b03fdd1aa1a192eda15" translate="yes" xml:space="preserve">
          <source>Atomic classes are designed primarily as building blocks for implementing non-blocking data structures and related infrastructure classes. The &lt;code&gt;compareAndSet&lt;/code&gt; method is not a general replacement for locking. It applies only when critical updates for an object are confined to a &lt;em&gt;single&lt;/em&gt; variable.</source>
          <target state="translated">アトミッククラスは、主に非ブロッキングデータ構造と関連するインフラストラクチャクラスを実装するためのビルディングブロックとして設計されています。 &lt;code&gt;compareAndSet&lt;/code&gt; の方法は、ロックのための一般的な置換ではありません。これは、オブジェクトの重要な更新が&lt;em&gt;単一の&lt;/em&gt;変数に限定されている場合にのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="b2a65302a48d01169c145c0498c4a74f4c4a556c" translate="yes" xml:space="preserve">
          <source>Atomic classes are not general purpose replacements for &lt;code&gt;java.lang.Integer&lt;/code&gt; and related classes. They do &lt;em&gt;not&lt;/em&gt; define methods such as &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;hashCode&lt;/code&gt; and &lt;code&gt;compareTo&lt;/code&gt;. (Because atomic variables are expected to be mutated, they are poor choices for hash table keys.) Additionally, classes are provided only for those types that are commonly useful in intended applications. For example, there is no atomic class for representing &lt;code&gt;byte&lt;/code&gt;. In those infrequent cases where you would like to do so, you can use an &lt;code&gt;AtomicInteger&lt;/code&gt; to hold &lt;code&gt;byte&lt;/code&gt; values, and cast appropriately. You can also hold floats using &lt;a href=&quot;../../../lang/float#floatToRawIntBits-float-&quot;&gt;&lt;code&gt;Float.floatToRawIntBits(float)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../lang/float#intBitsToFloat-int-&quot;&gt;&lt;code&gt;Float.intBitsToFloat(int)&lt;/code&gt;&lt;/a&gt; conversions, and doubles using &lt;a href=&quot;../../../lang/double#doubleToRawLongBits-double-&quot;&gt;&lt;code&gt;Double.doubleToRawLongBits(double)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../lang/double#longBitsToDouble-long-&quot;&gt;&lt;code&gt;Double.longBitsToDouble(long)&lt;/code&gt;&lt;/a&gt; conversions.</source>
          <target state="translated">アトミッククラスは、 &lt;code&gt;java.lang.Integer&lt;/code&gt; および関連クラスの汎用的な置き換えではありません。 &lt;code&gt;equals&lt;/code&gt; 、 &lt;code&gt;hashCode&lt;/code&gt; 、 &lt;code&gt;compareTo&lt;/code&gt; などのメソッド&lt;em&gt;は&lt;/em&gt;定義してい&lt;em&gt;ません&lt;/em&gt;。 （アトミック変数は変更されることが予想されるため、ハッシュテーブルキーの選択としては適していません。）さらに、クラスは、意図されたアプリケーションで一般的に役立つタイプに対してのみ提供されます。たとえば、 &lt;code&gt;byte&lt;/code&gt; を表すためのアトミッククラスはありません。あなたがそうしたいそれらのまれなケースでは、使用することができます &lt;code&gt;AtomicInteger&lt;/code&gt; ホールドに &lt;code&gt;byte&lt;/code&gt; 値、および適切にキャストします。&lt;a href=&quot;../../../lang/float#floatToRawIntBits-float-&quot;&gt; &lt;code&gt;Float.floatToRawIntBits(float)&lt;/code&gt; &lt;/a&gt;を使用してフロートを保持することもできますと&lt;a href=&quot;../../../lang/float#intBitsToFloat-int-&quot;&gt; &lt;code&gt;Float.intBitsToFloat(int)&lt;/code&gt; &lt;/a&gt;変換、およびDouble.doubleToRawLongBits（double）変換と&lt;a href=&quot;../../../lang/double#longBitsToDouble-long-&quot;&gt; &lt;code&gt;Double.longBitsToDouble(long)&lt;/code&gt; &lt;/a&gt;変換を使用した&lt;a href=&quot;../../../lang/double#doubleToRawLongBits-double-&quot;&gt; &lt;code&gt;Double.doubleToRawLongBits(double)&lt;/code&gt; &lt;/a&gt;化。</target>
        </trans-unit>
        <trans-unit id="8ed33adfdb95cc7fd0d5b3fe6ea9bbb8c6df7c8b" translate="yes" xml:space="preserve">
          <source>AtomicBoolean</source>
          <target state="translated">AtomicBoolean</target>
        </trans-unit>
        <trans-unit id="e1a0712ffb4a50bd7ef8cf48cc018df683180a49" translate="yes" xml:space="preserve">
          <source>AtomicBoolean.compareAndSet()</source>
          <target state="translated">AtomicBoolean.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="21054de6a44e6381682876a4063a9f8aca016d4b" translate="yes" xml:space="preserve">
          <source>AtomicBoolean.get()</source>
          <target state="translated">AtomicBoolean.get()</target>
        </trans-unit>
        <trans-unit id="232343d81c881d60cc5fa50b236596969d6732d3" translate="yes" xml:space="preserve">
          <source>AtomicBoolean.getAndSet()</source>
          <target state="translated">AtomicBoolean.getAndSet()</target>
        </trans-unit>
        <trans-unit id="c0fdd2ef1750c2490d128f44a0a50b3347a65f60" translate="yes" xml:space="preserve">
          <source>AtomicBoolean.lazySet()</source>
          <target state="translated">AtomicBoolean.lazySet()</target>
        </trans-unit>
        <trans-unit id="23dc3d9a1a1b2d49fef1a8182a62abce0bcdf52b" translate="yes" xml:space="preserve">
          <source>AtomicBoolean.set()</source>
          <target state="translated">AtomicBoolean.set()</target>
        </trans-unit>
        <trans-unit id="ac099f49dfe262eb4c378f3c7de061ead4f52869" translate="yes" xml:space="preserve">
          <source>AtomicBoolean.toString()</source>
          <target state="translated">AtomicBoolean.toString()</target>
        </trans-unit>
        <trans-unit id="c1a4be4d11a98201a57b910a8db823f16b43e18d" translate="yes" xml:space="preserve">
          <source>AtomicBoolean.weakCompareAndSet()</source>
          <target state="translated">AtomicBoolean.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="031c2d24a8a8b5aac829ffde38e403ce10db3dd2" translate="yes" xml:space="preserve">
          <source>AtomicInteger</source>
          <target state="translated">AtomicInteger</target>
        </trans-unit>
        <trans-unit id="33e44f3d88e36fc1bcab3da80f8c45ec89e4c338" translate="yes" xml:space="preserve">
          <source>AtomicInteger.accumulateAndGet()</source>
          <target state="translated">AtomicInteger.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="850969b16dc996b5bc4a3d42cfa46901c88a0701" translate="yes" xml:space="preserve">
          <source>AtomicInteger.addAndGet()</source>
          <target state="translated">AtomicInteger.addAndGet()</target>
        </trans-unit>
        <trans-unit id="c5662727b197824e8d6859634f44401f594f31d9" translate="yes" xml:space="preserve">
          <source>AtomicInteger.compareAndSet()</source>
          <target state="translated">AtomicInteger.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="ee0a3850d4e46b56ac9985e96683d74876d9fc4e" translate="yes" xml:space="preserve">
          <source>AtomicInteger.decrementAndGet()</source>
          <target state="translated">AtomicInteger.decrementAndGet()</target>
        </trans-unit>
        <trans-unit id="4f3cb05fce30ccee0967a8f5489eb8997821aa0a" translate="yes" xml:space="preserve">
          <source>AtomicInteger.doubleValue()</source>
          <target state="translated">AtomicInteger.doubleValue()</target>
        </trans-unit>
        <trans-unit id="fb31bfbcbeab4f91a91731ac9264587401bde17b" translate="yes" xml:space="preserve">
          <source>AtomicInteger.floatValue()</source>
          <target state="translated">AtomicInteger.floatValue()</target>
        </trans-unit>
        <trans-unit id="fabbe156dd02dd022d99dbbb4d4a7c691219ed57" translate="yes" xml:space="preserve">
          <source>AtomicInteger.get()</source>
          <target state="translated">AtomicInteger.get()</target>
        </trans-unit>
        <trans-unit id="5e3d573530ae582667f4fb6da85b0a8817d6d5a2" translate="yes" xml:space="preserve">
          <source>AtomicInteger.getAndAccumulate()</source>
          <target state="translated">AtomicInteger.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="0101e2bd3b30d5ddb2a6d947fb230353cf69af95" translate="yes" xml:space="preserve">
          <source>AtomicInteger.getAndAdd()</source>
          <target state="translated">AtomicInteger.getAndAdd()</target>
        </trans-unit>
        <trans-unit id="2bcaa86c024cac33e85e2370f0c8f443398dfe26" translate="yes" xml:space="preserve">
          <source>AtomicInteger.getAndDecrement()</source>
          <target state="translated">AtomicInteger.getAndDecrement()</target>
        </trans-unit>
        <trans-unit id="fbe349bf35ee01659e23d28bc6f233ef335d5f26" translate="yes" xml:space="preserve">
          <source>AtomicInteger.getAndIncrement()</source>
          <target state="translated">AtomicInteger.getAndIncrement()</target>
        </trans-unit>
        <trans-unit id="780f9ea63336977d97ffb4970334e8a17b708430" translate="yes" xml:space="preserve">
          <source>AtomicInteger.getAndSet()</source>
          <target state="translated">AtomicInteger.getAndSet()</target>
        </trans-unit>
        <trans-unit id="2041373f7c0f68cbcd8b7ca5bc07c587e0232d30" translate="yes" xml:space="preserve">
          <source>AtomicInteger.getAndUpdate()</source>
          <target state="translated">AtomicInteger.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="c78df742cea261db3e4ff471ea30fedfab4a6aed" translate="yes" xml:space="preserve">
          <source>AtomicInteger.incrementAndGet()</source>
          <target state="translated">AtomicInteger.incrementAndGet()</target>
        </trans-unit>
        <trans-unit id="a35e1a5a8c9d1a30abd84fb2e7e662e2f71c0989" translate="yes" xml:space="preserve">
          <source>AtomicInteger.intValue()</source>
          <target state="translated">AtomicInteger.intValue()</target>
        </trans-unit>
        <trans-unit id="159b939ea29321726f3bedc8883099ec1beab90f" translate="yes" xml:space="preserve">
          <source>AtomicInteger.lazySet()</source>
          <target state="translated">AtomicInteger.lazySet()</target>
        </trans-unit>
        <trans-unit id="c52d3998931b661db45b1b329fa6b8463d57f738" translate="yes" xml:space="preserve">
          <source>AtomicInteger.longValue()</source>
          <target state="translated">AtomicInteger.longValue()</target>
        </trans-unit>
        <trans-unit id="32422db05e4fa5d4ab45173bb721a60958d05dcd" translate="yes" xml:space="preserve">
          <source>AtomicInteger.set()</source>
          <target state="translated">AtomicInteger.set()</target>
        </trans-unit>
        <trans-unit id="dda537410032ad73b22156f22a95e22d7e7c3d0d" translate="yes" xml:space="preserve">
          <source>AtomicInteger.toString()</source>
          <target state="translated">AtomicInteger.toString()</target>
        </trans-unit>
        <trans-unit id="a29bc6dceff9c2083e0ee3b52073dafe204517d2" translate="yes" xml:space="preserve">
          <source>AtomicInteger.updateAndGet()</source>
          <target state="translated">AtomicInteger.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="88dfef7324c272c0bf93e5a9f6cead9afd0d9c9f" translate="yes" xml:space="preserve">
          <source>AtomicInteger.weakCompareAndSet()</source>
          <target state="translated">AtomicInteger.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="bfb54e429f35d898e4d023b0015555f1acd008fb" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray</source>
          <target state="translated">AtomicIntegerArray</target>
        </trans-unit>
        <trans-unit id="54afdb7f07145a2ef44f2a85b1e3d12388b6f14d" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.accumulateAndGet()</source>
          <target state="translated">AtomicIntegerArray.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="50f239109ed56572a062f156953619fae80133fb" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.addAndGet()</source>
          <target state="translated">AtomicIntegerArray.addAndGet()</target>
        </trans-unit>
        <trans-unit id="e44ba65d1670aa1b97efdc19e7129d8e3fcbbb92" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.compareAndSet()</source>
          <target state="translated">AtomicIntegerArray.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="a9cc3f20875d81123af7548e1852346eacac4f0e" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.decrementAndGet()</source>
          <target state="translated">AtomicIntegerArray.decrementAndGet()</target>
        </trans-unit>
        <trans-unit id="c93bb8d82dc097929cd60c3829e3ffa97da1b08f" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.get()</source>
          <target state="translated">AtomicIntegerArray.get()</target>
        </trans-unit>
        <trans-unit id="812f9f7e956f67b47b0dd71b82b4bf8d221cb3ff" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.getAndAccumulate()</source>
          <target state="translated">AtomicIntegerArray.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="84da9a0d1d65a6705bb2c54b75c85cc08c6ddf00" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.getAndAdd()</source>
          <target state="translated">AtomicIntegerArray.getAndAdd()</target>
        </trans-unit>
        <trans-unit id="b7deb760d8f84c84eb39e6016ae44087971f9e56" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.getAndDecrement()</source>
          <target state="translated">AtomicIntegerArray.getAndDecrement()</target>
        </trans-unit>
        <trans-unit id="81f4a3ea2c564dcc8651dc6aafecf826f494df94" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.getAndIncrement()</source>
          <target state="translated">AtomicIntegerArray.getAndIncrement()</target>
        </trans-unit>
        <trans-unit id="a20a2aba670e6946b7b788a7b7e2283311d6afaa" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.getAndSet()</source>
          <target state="translated">AtomicIntegerArray.getAndSet()</target>
        </trans-unit>
        <trans-unit id="0d405c96d4e1d10e048c183a286c6cb879232225" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.getAndUpdate()</source>
          <target state="translated">AtomicIntegerArray.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="0591252d970181bf597f7336d81cc876473ff2c1" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.incrementAndGet()</source>
          <target state="translated">AtomicIntegerArray.incrementAndGet()</target>
        </trans-unit>
        <trans-unit id="b5380b3c279f34ab800b19263be3da08caf14dbf" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.lazySet()</source>
          <target state="translated">AtomicIntegerArray.lazySet()</target>
        </trans-unit>
        <trans-unit id="892a7d4b518d9e41bb2e76b83946381c469beb0c" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.length()</source>
          <target state="translated">AtomicIntegerArray.length()</target>
        </trans-unit>
        <trans-unit id="4bdbe7687de6027e24b4c6aa92bdf49e1a2a01a5" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.set()</source>
          <target state="translated">AtomicIntegerArray.set()</target>
        </trans-unit>
        <trans-unit id="4edd5fc461c9d3820012ee66f828993ec0def7d0" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.toString()</source>
          <target state="translated">AtomicIntegerArray.toString()</target>
        </trans-unit>
        <trans-unit id="bb63b03f5da5e175c096622592ace5ecccdfe171" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.updateAndGet()</source>
          <target state="translated">AtomicIntegerArray.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="f9a7384ca188a7675f4dd0e6301eb9cc3a24f398" translate="yes" xml:space="preserve">
          <source>AtomicIntegerArray.weakCompareAndSet()</source>
          <target state="translated">AtomicIntegerArray.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="b222ae05afd2334353d2af9b9be0529b4a3e4493" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater</source>
          <target state="translated">AtomicIntegerFieldUpdater</target>
        </trans-unit>
        <trans-unit id="0a9d0b65621fccf1f1a59c175c9252c0fe29fab9" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.accumulateAndGet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="87d8fdf5f94c84f9a281309c153f3bca86e68688" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.addAndGet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.addAndGet()</target>
        </trans-unit>
        <trans-unit id="508ca4728a5961f11de1ba5b13504b219b1847d3" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.compareAndSet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="8d45162650558ae068fb750ebee8be371b3e4626" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.decrementAndGet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.decrementAndGet()</target>
        </trans-unit>
        <trans-unit id="6ab374843b32815b96b9609342d10b7de074c65d" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.get()</source>
          <target state="translated">AtomicIntegerFieldUpdater.get()</target>
        </trans-unit>
        <trans-unit id="291f0606bdbdfd52caab94d1069d3ee93d70731e" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.getAndAccumulate()</source>
          <target state="translated">AtomicIntegerFieldUpdater.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="b98e2106a93966a315a55cd605e665b36cf3e154" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.getAndAdd()</source>
          <target state="translated">AtomicIntegerFieldUpdater.getAndAdd()</target>
        </trans-unit>
        <trans-unit id="0ee51f8ce659712914148acb621dcd8ef1cde16f" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.getAndDecrement()</source>
          <target state="translated">AtomicIntegerFieldUpdater.getAndDecrement()</target>
        </trans-unit>
        <trans-unit id="0c121e86b4a8b73e62c88fb132dc87aa984f05f0" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.getAndIncrement()</source>
          <target state="translated">AtomicIntegerFieldUpdater.getAndIncrement()</target>
        </trans-unit>
        <trans-unit id="c50af348b107c5da3e3acefd9c8d25fdfb084a2d" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.getAndSet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.getAndSet()</target>
        </trans-unit>
        <trans-unit id="c91fb9af841f7e6e7280084c75d24e9d8f63c7c1" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.getAndUpdate()</source>
          <target state="translated">AtomicIntegerFieldUpdater.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="210b391457c91db7fa9e517c1a9b9bf1b9ddef43" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.incrementAndGet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.incrementAndGet()</target>
        </trans-unit>
        <trans-unit id="abd65fb123eb8a8195419474bfd166bdadaae82c" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.lazySet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.lazySet()</target>
        </trans-unit>
        <trans-unit id="b92fdb00306192470b7a129070dbb4923636d957" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.newUpdater()</source>
          <target state="translated">AtomicIntegerFieldUpdater.newUpdater()</target>
        </trans-unit>
        <trans-unit id="53d48a5b8eb288feeddf59865d2764759ca2afc8" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.set()</source>
          <target state="translated">AtomicIntegerFieldUpdater.set()</target>
        </trans-unit>
        <trans-unit id="7a6b5a7e1b13eac86ac4c200b4f78bbdc15ba25c" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.updateAndGet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="72d509680fbaf415e5d4cef7235ca0cafb5e6c14" translate="yes" xml:space="preserve">
          <source>AtomicIntegerFieldUpdater.weakCompareAndSet()</source>
          <target state="translated">AtomicIntegerFieldUpdater.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="c6711287dc9369302489e77fcf65d42a31c0643c" translate="yes" xml:space="preserve">
          <source>AtomicLong</source>
          <target state="translated">AtomicLong</target>
        </trans-unit>
        <trans-unit id="29bedc8d57cf6d18205d8992deb4b50175991ffa" translate="yes" xml:space="preserve">
          <source>AtomicLong.accumulateAndGet()</source>
          <target state="translated">AtomicLong.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="dcad15add528ee741ae935e323beaf3ce4d52f0e" translate="yes" xml:space="preserve">
          <source>AtomicLong.addAndGet()</source>
          <target state="translated">AtomicLong.addAndGet()</target>
        </trans-unit>
        <trans-unit id="048d5b527550179b90673ed784473727dd5a7a97" translate="yes" xml:space="preserve">
          <source>AtomicLong.compareAndSet()</source>
          <target state="translated">AtomicLong.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="10af50e8a1728dd89d88c9e8ce2707c750fcecc3" translate="yes" xml:space="preserve">
          <source>AtomicLong.decrementAndGet()</source>
          <target state="translated">AtomicLong.decrementAndGet()</target>
        </trans-unit>
        <trans-unit id="6856ecf94eed17b6f815f1798162779189225fc4" translate="yes" xml:space="preserve">
          <source>AtomicLong.doubleValue()</source>
          <target state="translated">AtomicLong.doubleValue()</target>
        </trans-unit>
        <trans-unit id="4290047db645475e908241ca58ca41e3edc86499" translate="yes" xml:space="preserve">
          <source>AtomicLong.floatValue()</source>
          <target state="translated">AtomicLong.floatValue()</target>
        </trans-unit>
        <trans-unit id="a07c6f678271343a028ce200359a771bcbcad0dc" translate="yes" xml:space="preserve">
          <source>AtomicLong.get()</source>
          <target state="translated">AtomicLong.get()</target>
        </trans-unit>
        <trans-unit id="d284959d19430e320b4cb3ae1e43614ba44ebb5a" translate="yes" xml:space="preserve">
          <source>AtomicLong.getAndAccumulate()</source>
          <target state="translated">AtomicLong.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="592f7de23c6fdcda131b12976434c2a895565848" translate="yes" xml:space="preserve">
          <source>AtomicLong.getAndAdd()</source>
          <target state="translated">AtomicLong.getAndAdd()</target>
        </trans-unit>
        <trans-unit id="a649cbb9676ca8f1905d114f36e25d0c963cd223" translate="yes" xml:space="preserve">
          <source>AtomicLong.getAndDecrement()</source>
          <target state="translated">AtomicLong.getAndDecrement()</target>
        </trans-unit>
        <trans-unit id="c3288f36f6aea0d15ec8b08fc5b5c590fc6abc4e" translate="yes" xml:space="preserve">
          <source>AtomicLong.getAndIncrement()</source>
          <target state="translated">AtomicLong.getAndIncrement()</target>
        </trans-unit>
        <trans-unit id="b51c865ea825f915fca794ee4c89379e24feb109" translate="yes" xml:space="preserve">
          <source>AtomicLong.getAndSet()</source>
          <target state="translated">AtomicLong.getAndSet()</target>
        </trans-unit>
        <trans-unit id="3e92d02ca289424a9984aac735d3c7e8dde1aa5a" translate="yes" xml:space="preserve">
          <source>AtomicLong.getAndUpdate()</source>
          <target state="translated">AtomicLong.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="277cbfa5794a36eab5a1afc10be3819a0e192763" translate="yes" xml:space="preserve">
          <source>AtomicLong.incrementAndGet()</source>
          <target state="translated">AtomicLong.incrementAndGet()</target>
        </trans-unit>
        <trans-unit id="c8577b4543d969b10ec418d36d0607927efe97da" translate="yes" xml:space="preserve">
          <source>AtomicLong.intValue()</source>
          <target state="translated">AtomicLong.intValue()</target>
        </trans-unit>
        <trans-unit id="5b7363d9887db279674ece596992d6e9feca4724" translate="yes" xml:space="preserve">
          <source>AtomicLong.lazySet()</source>
          <target state="translated">AtomicLong.lazySet()</target>
        </trans-unit>
        <trans-unit id="519638edb99a53e2bd6e240f216aa5b215557a3a" translate="yes" xml:space="preserve">
          <source>AtomicLong.longValue()</source>
          <target state="translated">AtomicLong.longValue()</target>
        </trans-unit>
        <trans-unit id="fed17a99a5c11ef8e62ce924123a43e9f6482787" translate="yes" xml:space="preserve">
          <source>AtomicLong.set()</source>
          <target state="translated">AtomicLong.set()</target>
        </trans-unit>
        <trans-unit id="7e375fc5c7b9078c4cc20b4989508a61987224db" translate="yes" xml:space="preserve">
          <source>AtomicLong.toString()</source>
          <target state="translated">AtomicLong.toString()</target>
        </trans-unit>
        <trans-unit id="1e2a73b77c10dcaafafe7d91c0b4ef14d5ea24e4" translate="yes" xml:space="preserve">
          <source>AtomicLong.updateAndGet()</source>
          <target state="translated">AtomicLong.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="de71eab95df47f91101b4135c28f5273b29ad6ff" translate="yes" xml:space="preserve">
          <source>AtomicLong.weakCompareAndSet()</source>
          <target state="translated">AtomicLong.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="f3abe0a33a5e8a7ef1199f8ccf72d15d16d75fae" translate="yes" xml:space="preserve">
          <source>AtomicLongArray</source>
          <target state="translated">AtomicLongArray</target>
        </trans-unit>
        <trans-unit id="ed5b1cbd39f316563b103c7f85373d93da185077" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.accumulateAndGet()</source>
          <target state="translated">AtomicLongArray.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="a9a67b07d80c930114a283db589cadc5dbaa7ce0" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.addAndGet()</source>
          <target state="translated">AtomicLongArray.addAndGet()</target>
        </trans-unit>
        <trans-unit id="0bc6a8d153be9990cfd46b4c1881e36d666f64f6" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.compareAndSet()</source>
          <target state="translated">AtomicLongArray.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="e501b91262e50987b9b0b9ffdf897dcf8d4aa16d" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.decrementAndGet()</source>
          <target state="translated">AtomicLongArray.decrementAndGet()</target>
        </trans-unit>
        <trans-unit id="9e1bd8f9c25a6542bc6e226c4aa124e44f06bc0e" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.get()</source>
          <target state="translated">AtomicLongArray.get()</target>
        </trans-unit>
        <trans-unit id="b4abc4755060d5e355cb1cebe2990c935c42c897" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.getAndAccumulate()</source>
          <target state="translated">AtomicLongArray.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="28a5bbf8a87b18e9de26ae6e58ae329b353ca17a" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.getAndAdd()</source>
          <target state="translated">AtomicLongArray.getAndAdd()</target>
        </trans-unit>
        <trans-unit id="8f31b483deea2f0b4d7b43db6d7afbe0140797bb" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.getAndDecrement()</source>
          <target state="translated">AtomicLongArray.getAndDecrement()</target>
        </trans-unit>
        <trans-unit id="3e833ec289b55d8872cb5959ffefb834e5672da7" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.getAndIncrement()</source>
          <target state="translated">AtomicLongArray.getAndIncrement()</target>
        </trans-unit>
        <trans-unit id="83ab4c56faf18213b9222361c2cd90b9d2e8a5a3" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.getAndSet()</source>
          <target state="translated">AtomicLongArray.getAndSet()</target>
        </trans-unit>
        <trans-unit id="177dcc18d24581a09ff8da6880b40ad32b849337" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.getAndUpdate()</source>
          <target state="translated">AtomicLongArray.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="a226eea3807552e9d2160731cdc3a9c01bcdac4d" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.incrementAndGet()</source>
          <target state="translated">AtomicLongArray.incrementAndGet()</target>
        </trans-unit>
        <trans-unit id="2ea63a474ca52950ca83026643a6b3f1828fa790" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.lazySet()</source>
          <target state="translated">AtomicLongArray.lazySet()</target>
        </trans-unit>
        <trans-unit id="e04b429b3c0e7d7c7480e3844517009da27f15aa" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.length()</source>
          <target state="translated">AtomicLongArray.length()</target>
        </trans-unit>
        <trans-unit id="a0b69644ca5b763199eaeb0af453927e43996f96" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.set()</source>
          <target state="translated">AtomicLongArray.set()</target>
        </trans-unit>
        <trans-unit id="43628b4dba6d01ff93d3554b3c88cf9fad4509c0" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.toString()</source>
          <target state="translated">AtomicLongArray.toString()</target>
        </trans-unit>
        <trans-unit id="ee73cbcaea55fc2ea8c8283b447761b819510a5d" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.updateAndGet()</source>
          <target state="translated">AtomicLongArray.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="7257b38520c5f469e61d59fda3b72fa80fc21c40" translate="yes" xml:space="preserve">
          <source>AtomicLongArray.weakCompareAndSet()</source>
          <target state="translated">AtomicLongArray.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="dff88c91e8d6ece833e75c1d98bbdaf0faf06e17" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater</source>
          <target state="translated">AtomicLongFieldUpdater</target>
        </trans-unit>
        <trans-unit id="459d9bf82358187794710d178e659333b886fa59" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.accumulateAndGet()</source>
          <target state="translated">AtomicLongFieldUpdater.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="f2e57b0bf9d275848f1af8c451f50e5860f841cf" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.addAndGet()</source>
          <target state="translated">AtomicLongFieldUpdater.addAndGet()</target>
        </trans-unit>
        <trans-unit id="ac996d10e3737a0d2e5adf6c6703e84305968a04" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.compareAndSet()</source>
          <target state="translated">AtomicLongFieldUpdater.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="dd9b2c6994fab44365c2f99d2322ec22713fb03d" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.decrementAndGet()</source>
          <target state="translated">AtomicLongFieldUpdater.decrementAndGet()</target>
        </trans-unit>
        <trans-unit id="e6376632acea0d1a64c49681cc66204f8edb476c" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.get()</source>
          <target state="translated">AtomicLongFieldUpdater.get()</target>
        </trans-unit>
        <trans-unit id="4575662c5d599883463d05ea12a81b9e5995563c" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.getAndAccumulate()</source>
          <target state="translated">AtomicLongFieldUpdater.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="d4c121bc0822171f68df5d5c7018bebd5972cd2e" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.getAndAdd()</source>
          <target state="translated">AtomicLongFieldUpdater.getAndAdd()</target>
        </trans-unit>
        <trans-unit id="d6533ba120d953b70ed112c1b00994d5a659df22" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.getAndDecrement()</source>
          <target state="translated">AtomicLongFieldUpdater.getAndDecrement()</target>
        </trans-unit>
        <trans-unit id="ffacc6d2fc29573bac44f47b68854ef05d85c3bc" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.getAndIncrement()</source>
          <target state="translated">AtomicLongFieldUpdater.getAndIncrement()</target>
        </trans-unit>
        <trans-unit id="f12cc0bea3fb12a3c3256ebfc935cf092fd967ee" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.getAndSet()</source>
          <target state="translated">AtomicLongFieldUpdater.getAndSet()</target>
        </trans-unit>
        <trans-unit id="fa19e730688511ee1a9c884a9a40e35120418db7" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.getAndUpdate()</source>
          <target state="translated">AtomicLongFieldUpdater.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="d8e24e93bc5baa57c1d461b16edd775e072b021f" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.incrementAndGet()</source>
          <target state="translated">AtomicLongFieldUpdater.incrementAndGet()</target>
        </trans-unit>
        <trans-unit id="d5860f97071d90ffef51a0a8cc483a7c17475e17" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.lazySet()</source>
          <target state="translated">AtomicLongFieldUpdater.lazySet()</target>
        </trans-unit>
        <trans-unit id="b9c761166bd318f47fd13edf17827f1d5bd0fabb" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.newUpdater()</source>
          <target state="translated">AtomicLongFieldUpdater.newUpdater()</target>
        </trans-unit>
        <trans-unit id="feb423fd494070b2436fa31ddd96a77abdd916ba" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.set()</source>
          <target state="translated">AtomicLongFieldUpdater.set()</target>
        </trans-unit>
        <trans-unit id="3b7cdaeae1ae3132375a41d5abbcf15cb6c87306" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.updateAndGet()</source>
          <target state="translated">AtomicLongFieldUpdater.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="f8e13a07b210ca29ff38dbe3b7ca3d2ae954c3d7" translate="yes" xml:space="preserve">
          <source>AtomicLongFieldUpdater.weakCompareAndSet()</source>
          <target state="translated">AtomicLongFieldUpdater.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="e5330c4d454ee99a40799036d3e85f3db9c670c6" translate="yes" xml:space="preserve">
          <source>AtomicMarkableReference</source>
          <target state="translated">AtomicMarkableReference</target>
        </trans-unit>
        <trans-unit id="6aa4cfba3bb29934e0d10f189a2b4896ed8e8df4" translate="yes" xml:space="preserve">
          <source>AtomicMarkableReference.attemptMark()</source>
          <target state="translated">AtomicMarkableReference.attemptMark()</target>
        </trans-unit>
        <trans-unit id="d22108d81d3712c04517b637fa468b83881915eb" translate="yes" xml:space="preserve">
          <source>AtomicMarkableReference.compareAndSet()</source>
          <target state="translated">AtomicMarkableReference.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="49adfad52450d9cb399e7f6d8dd15ae2f0de97dc" translate="yes" xml:space="preserve">
          <source>AtomicMarkableReference.get()</source>
          <target state="translated">AtomicMarkableReference.get()</target>
        </trans-unit>
        <trans-unit id="63bb8915704bc7acc92123809135e92b01343f18" translate="yes" xml:space="preserve">
          <source>AtomicMarkableReference.getReference()</source>
          <target state="translated">AtomicMarkableReference.getReference()</target>
        </trans-unit>
        <trans-unit id="8d5e11c405249306e01bb6dc31eba6afbc4bef1b" translate="yes" xml:space="preserve">
          <source>AtomicMarkableReference.isMarked()</source>
          <target state="translated">AtomicMarkableReference.isMarked()</target>
        </trans-unit>
        <trans-unit id="6f2fe0fd58ee0a6e48da6ffe4d59158be094683a" translate="yes" xml:space="preserve">
          <source>AtomicMarkableReference.set()</source>
          <target state="translated">AtomicMarkableReference.set()</target>
        </trans-unit>
        <trans-unit id="9202de494c8715e5fda3322e1e1dbe9c35b148ec" translate="yes" xml:space="preserve">
          <source>AtomicMarkableReference.weakCompareAndSet()</source>
          <target state="translated">AtomicMarkableReference.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="cfdca2dd88df2e7dca32315788ab7a13c5232511" translate="yes" xml:space="preserve">
          <source>AtomicMoveNotSupportedException</source>
          <target state="translated">AtomicMoveNotSupportedException</target>
        </trans-unit>
        <trans-unit id="cd0e6702ca5c371f1347949dd4a2eec403216573" translate="yes" xml:space="preserve">
          <source>AtomicReference</source>
          <target state="translated">AtomicReference</target>
        </trans-unit>
        <trans-unit id="152a6f3fa8d2678ea6c9bc56b87a229fb6899f21" translate="yes" xml:space="preserve">
          <source>AtomicReference.accumulateAndGet()</source>
          <target state="translated">AtomicReference.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="078d36a5603ef5ae156ab7a1540d6a504e188270" translate="yes" xml:space="preserve">
          <source>AtomicReference.compareAndSet()</source>
          <target state="translated">AtomicReference.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="9665f2d7ade4175f6eb773bab03fa11b9e7381e2" translate="yes" xml:space="preserve">
          <source>AtomicReference.get()</source>
          <target state="translated">AtomicReference.get()</target>
        </trans-unit>
        <trans-unit id="ec52595ab9c3e3af5df99a1ae7e7cc76adc9a476" translate="yes" xml:space="preserve">
          <source>AtomicReference.getAndAccumulate()</source>
          <target state="translated">AtomicReference.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="d1119fe14b8b0963e2045b08ae2ef93ea8801457" translate="yes" xml:space="preserve">
          <source>AtomicReference.getAndSet()</source>
          <target state="translated">AtomicReference.getAndSet()</target>
        </trans-unit>
        <trans-unit id="002389ccb7c0d9f12a790f273d849f8b7ca77177" translate="yes" xml:space="preserve">
          <source>AtomicReference.getAndUpdate()</source>
          <target state="translated">AtomicReference.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="593535c7d09249722925c8e4093f808c6f927efe" translate="yes" xml:space="preserve">
          <source>AtomicReference.lazySet()</source>
          <target state="translated">AtomicReference.lazySet()</target>
        </trans-unit>
        <trans-unit id="af116d40f0f59bb5e572578cce91a854a3f36c23" translate="yes" xml:space="preserve">
          <source>AtomicReference.set()</source>
          <target state="translated">AtomicReference.set()</target>
        </trans-unit>
        <trans-unit id="13515748041d9b0747c53d4e3d9e858cfb1ae4c3" translate="yes" xml:space="preserve">
          <source>AtomicReference.toString()</source>
          <target state="translated">AtomicReference.toString()</target>
        </trans-unit>
        <trans-unit id="f257d570b2781e05a73ac465a1755f3aea5e252f" translate="yes" xml:space="preserve">
          <source>AtomicReference.updateAndGet()</source>
          <target state="translated">AtomicReference.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="3840caed78716e41365deafcacacec1c99d4fbe8" translate="yes" xml:space="preserve">
          <source>AtomicReference.weakCompareAndSet()</source>
          <target state="translated">AtomicReference.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="ba88d49711ca7ee3db92b2a2278624c7c7d76cab" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray</source>
          <target state="translated">AtomicReferenceArray</target>
        </trans-unit>
        <trans-unit id="b22b90994094579158c1422c9ed5c3826f7e2c14" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.accumulateAndGet()</source>
          <target state="translated">AtomicReferenceArray.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="114867875e5737c22a3d5c1f00c08d33f34c6de3" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.compareAndSet()</source>
          <target state="translated">AtomicReferenceArray.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="53ba598bbf2e9779faf954d1499c670f48625747" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.get()</source>
          <target state="translated">AtomicReferenceArray.get()</target>
        </trans-unit>
        <trans-unit id="ad617040a73dd91bdbee266a3a8d37a133916dc7" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.getAndAccumulate()</source>
          <target state="translated">AtomicReferenceArray.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="6ceaa3a4717a4e89dcb62e54afb08ee28662ca7e" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.getAndSet()</source>
          <target state="translated">AtomicReferenceArray.getAndSet()</target>
        </trans-unit>
        <trans-unit id="b263c256a4f9f6d46ada3f4d84d48b2ec59d34fe" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.getAndUpdate()</source>
          <target state="translated">AtomicReferenceArray.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="3d0a01069725089eb3b15b435a7cb5cb2e957bee" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.lazySet()</source>
          <target state="translated">AtomicReferenceArray.lazySet()</target>
        </trans-unit>
        <trans-unit id="d76e089925b4130a583c40b218da4124556cf4dd" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.length()</source>
          <target state="translated">AtomicReferenceArray.length()</target>
        </trans-unit>
        <trans-unit id="01d5eb602cbca42c766f6fa88e9a4f70f948b14f" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.set()</source>
          <target state="translated">AtomicReferenceArray.set()</target>
        </trans-unit>
        <trans-unit id="c93412b7fa99bb08be0f91d4ed484107fd50dda6" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.toString()</source>
          <target state="translated">AtomicReferenceArray.toString()</target>
        </trans-unit>
        <trans-unit id="7506ff277766a130d8128d550a7641708fa0faba" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.updateAndGet()</source>
          <target state="translated">AtomicReferenceArray.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="414f9eac47c954782b01043168ca014c747d9048" translate="yes" xml:space="preserve">
          <source>AtomicReferenceArray.weakCompareAndSet()</source>
          <target state="translated">AtomicReferenceArray.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="b9304de17f7a00f437560b688eab6d0a12c725e1" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater</source>
          <target state="translated">AtomicReferenceFieldUpdater</target>
        </trans-unit>
        <trans-unit id="b45133189f9aed1931c50da7bf60471f49148343" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.accumulateAndGet()</source>
          <target state="translated">AtomicReferenceFieldUpdater.accumulateAndGet()</target>
        </trans-unit>
        <trans-unit id="c2c25b51784460e16403705c857a20b604877351" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.compareAndSet()</source>
          <target state="translated">AtomicReferenceFieldUpdater.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="1c1ec918f330abfb86694888a95f1ec9623547e7" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.get()</source>
          <target state="translated">AtomicReferenceFieldUpdater.get()</target>
        </trans-unit>
        <trans-unit id="8b08f2228d34cc130ca8754a77b4dae452a5e602" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.getAndAccumulate()</source>
          <target state="translated">AtomicReferenceFieldUpdater.getAndAccumulate()</target>
        </trans-unit>
        <trans-unit id="17af343f18171a9d3466921ad875de34199c3aa0" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.getAndSet()</source>
          <target state="translated">AtomicReferenceFieldUpdater.getAndSet()</target>
        </trans-unit>
        <trans-unit id="f83cecafa1faad93d4a5d7d66e99b32b7e0d9094" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.getAndUpdate()</source>
          <target state="translated">AtomicReferenceFieldUpdater.getAndUpdate()</target>
        </trans-unit>
        <trans-unit id="34c5584eb9c022196af3504d48e8454f50ad32dd" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.lazySet()</source>
          <target state="translated">AtomicReferenceFieldUpdater.lazySet()</target>
        </trans-unit>
        <trans-unit id="25444fd26537067dd0a497a2b89488f8fa77e987" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.newUpdater()</source>
          <target state="translated">AtomicReferenceFieldUpdater.newUpdater()</target>
        </trans-unit>
        <trans-unit id="8f71e63b75fce9603ed1f1a69130dafe217508f8" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.set()</source>
          <target state="translated">AtomicReferenceFieldUpdater.set()</target>
        </trans-unit>
        <trans-unit id="a2da32d51eb53604c7e1d5b17a4a9c19c744bd8c" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.updateAndGet()</source>
          <target state="translated">AtomicReferenceFieldUpdater.updateAndGet()</target>
        </trans-unit>
        <trans-unit id="d4cbf96123fd9ea541599fb18443ccda2dd1a4b9" translate="yes" xml:space="preserve">
          <source>AtomicReferenceFieldUpdater.weakCompareAndSet()</source>
          <target state="translated">AtomicReferenceFieldUpdater.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="c3e7f4e4ae42a4e0805952db6296615b8700b090" translate="yes" xml:space="preserve">
          <source>AtomicStampedReference</source>
          <target state="translated">AtomicStampedReference</target>
        </trans-unit>
        <trans-unit id="cc23325654de63824d4dc456726707dce07afa36" translate="yes" xml:space="preserve">
          <source>AtomicStampedReference.attemptStamp()</source>
          <target state="translated">AtomicStampedReference.attemptStamp()</target>
        </trans-unit>
        <trans-unit id="dcc1eaa38e7190c7f4756658fd3a485102d4efd5" translate="yes" xml:space="preserve">
          <source>AtomicStampedReference.compareAndSet()</source>
          <target state="translated">AtomicStampedReference.compareAndSet()</target>
        </trans-unit>
        <trans-unit id="d3851557183cb20fd5111c66c7d96543d560db27" translate="yes" xml:space="preserve">
          <source>AtomicStampedReference.get()</source>
          <target state="translated">AtomicStampedReference.get()</target>
        </trans-unit>
        <trans-unit id="97b9ca8012cbb1c608cd59c71b8f624d65087779" translate="yes" xml:space="preserve">
          <source>AtomicStampedReference.getReference()</source>
          <target state="translated">AtomicStampedReference.getReference()</target>
        </trans-unit>
        <trans-unit id="a2e2d7b2b68e14da7d071ab8f62039162018e437" translate="yes" xml:space="preserve">
          <source>AtomicStampedReference.getStamp()</source>
          <target state="translated">AtomicStampedReference.getStamp()</target>
        </trans-unit>
        <trans-unit id="0d7da6d9c35b6c22ab8bb92f084734d7bc103237" translate="yes" xml:space="preserve">
          <source>AtomicStampedReference.set()</source>
          <target state="translated">AtomicStampedReference.set()</target>
        </trans-unit>
        <trans-unit id="a23e690fe47761046c9775dff800b3207a42df64" translate="yes" xml:space="preserve">
          <source>AtomicStampedReference.weakCompareAndSet()</source>
          <target state="translated">AtomicStampedReference.weakCompareAndSet()</target>
        </trans-unit>
        <trans-unit id="2e670f26d0d03cec12b6d8d0bcb851fe9cf90058" translate="yes" xml:space="preserve">
          <source>Atomically adds the &lt;code&gt;value&lt;/code&gt; to the current value of a variable with the memory semantics of &lt;a href=&quot;#set(java.lang.Object...)&quot;&gt;&lt;code&gt;set(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;, and returns the variable's previous value, as accessed with the memory semantics of &lt;a href=&quot;#getAcquire(java.lang.Object...)&quot;&gt;&lt;code&gt;getAcquire(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アトミック加算 &lt;code&gt;value&lt;/code&gt; のメモリセマンティクスを持つ変数の現在の値に&lt;a href=&quot;#set(java.lang.Object...)&quot;&gt; &lt;code&gt;set(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;、およびメモリセマンティクスでアクセスされるように、変数の前の値を返し&lt;a href=&quot;#getAcquire(java.lang.Object...)&quot;&gt; &lt;code&gt;getAcquire(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="14789eddf50afba7ca6623754ae307fd7eb8c023" translate="yes" xml:space="preserve">
          <source>Atomically adds the &lt;code&gt;value&lt;/code&gt; to the current value of a variable with the memory semantics of &lt;a href=&quot;#setRelease(java.lang.Object...)&quot;&gt;&lt;code&gt;setRelease(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;, and returns the variable's previous value, as accessed with the memory semantics of &lt;a href=&quot;#get(java.lang.Object...)&quot;&gt;&lt;code&gt;get(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アトミック追加 &lt;code&gt;value&lt;/code&gt; のメモリセマンティクスを持つ変数の現在の値に&lt;a href=&quot;#setRelease(java.lang.Object...)&quot;&gt; &lt;code&gt;setRelease(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;、とのメモリセマンティクスにアクセスして、変数の前の値を返す&lt;a href=&quot;#get(java.lang.Object...)&quot;&gt; &lt;code&gt;get(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1aae3c7b19f2a1c409e276428635e5c704eaf51f" translate="yes" xml:space="preserve">
          <source>Atomically adds the &lt;code&gt;value&lt;/code&gt; to the current value of a variable with the memory semantics of &lt;a href=&quot;#setVolatile(java.lang.Object...)&quot;&gt;&lt;code&gt;setVolatile(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;, and returns the variable's previous value, as accessed with the memory semantics of &lt;a href=&quot;#getVolatile(java.lang.Object...)&quot;&gt;&lt;code&gt;getVolatile(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アトミック加算 &lt;code&gt;value&lt;/code&gt; のメモリセマンティクスを持つ変数の現在の値に&lt;a href=&quot;#setVolatile(java.lang.Object...)&quot;&gt; &lt;code&gt;setVolatile(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;、およびメモリセマンティクスでアクセスされるように、変数の前の値を返し&lt;a href=&quot;#getVolatile(java.lang.Object...)&quot;&gt; &lt;code&gt;getVolatile(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e321b6bd6d15ba09704fb4bba61bac042a132934" translate="yes" xml:space="preserve">
          <source>Atomically adds the given value to the current value of the field of the given object managed by this updater.</source>
          <target state="translated">指定された値を、このアップデータで管理されている指定されたオブジェクトのフィールドの現在の値にアトミックに追加します。</target>
        </trans-unit>
        <trans-unit id="ca3df35615f1d37082389e7758090eac604aa5bb" translate="yes" xml:space="preserve">
          <source>Atomically adds the given value to the current value, with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#getAndAdd(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.getAndAdd(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../lang/invoke/varhandle#getAndAdd(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.getAndAdd(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果を使用して、指定された値を現在の値にアトミックに追加します。</target>
        </trans-unit>
        <trans-unit id="2a99dbe324349f1f8ad0c7e994a141ef74df90a4" translate="yes" xml:space="preserve">
          <source>Atomically adds the given value to the current value.</source>
          <target state="translated">与えられた値を現在の値に原子的に追加します。</target>
        </trans-unit>
        <trans-unit id="3b247ceaa599f696578074a26528217f498a59fd" translate="yes" xml:space="preserve">
          <source>Atomically adds the given value to the element at index &lt;code&gt;i&lt;/code&gt;, with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#getAndAdd(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.getAndAdd(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../lang/invoke/varhandle#getAndAdd(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.getAndAdd(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果を使用して、指定された値をインデックス &lt;code&gt;i&lt;/code&gt; の要素にアトミックに追加します。</target>
        </trans-unit>
        <trans-unit id="1ecd271e5190b42969ee56c8a5833ab7bfcc099b" translate="yes" xml:space="preserve">
          <source>Atomically adds the given value to the element at index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">指定された値をインデックス &lt;code&gt;i&lt;/code&gt; の要素に原子的に追加します。</target>
        </trans-unit>
        <trans-unit id="5b12e0206a56ec060bfd8a399330b8aff002e2b8" translate="yes" xml:space="preserve">
          <source>Atomically conditionally sets the tag value for this task.</source>
          <target state="translated">このタスクのタグ値を条件付きで設定します。</target>
        </trans-unit>
        <trans-unit id="1afafc6c6561bf9c2e2e1996fc0e773558e70b26" translate="yes" xml:space="preserve">
          <source>Atomically conditionally sets the tag value for this task. Among other applications, tags can be used as visit markers in tasks operating on graphs, as in methods that check: &lt;code&gt;
 if (task.compareAndSetForkJoinTaskTag((short)0, (short)1))&lt;/code&gt; before processing, otherwise exiting because the node has already been visited.</source>
          <target state="translated">このタスクのタグ値を原子的に条件付きで設定します。他のアプリケーションの中でも、タグは、処理前に &lt;code&gt; if (task.compareAndSetForkJoinTaskTag((short)0, (short)1))&lt;/code&gt; をチェックするメソッドのように、グラフを操作するタスクの訪問マーカーとして使用できます。訪問されました。</target>
        </trans-unit>
        <trans-unit id="d5d0d3eda0b21632cc6f791945a4bbec54092358" translate="yes" xml:space="preserve">
          <source>Atomically conditionally sets the tag value for this task. Among other applications, tags can be used as visit markers in tasks operating on graphs, as in methods that check: &lt;code&gt;if (task.compareAndSetForkJoinTaskTag((short)0, (short)1))&lt;/code&gt; before processing, otherwise exiting because the node has already been visited.</source>
          <target state="translated">このタスクのタグ値を原子的に条件付きで設定します。他の用途の中で、タグは、メソッドのように、グラフ上で動作するタスクに訪問マーカーとして使用することができることを確認します。 &lt;code&gt;if (task.compareAndSetForkJoinTaskTag((short)0, (short)1))&lt;/code&gt; の処理の前に、ノードが既に持っているので、そうでなければ出訪問されました。</target>
        </trans-unit>
        <trans-unit id="fcb99837b00176c47c14b77d64c25ba800373ecc" translate="yes" xml:space="preserve">
          <source>Atomically creates a new, empty file named by this abstract pathname if and only if a file with this name does not yet exist.</source>
          <target state="translated">この抽象パス名を持つファイルがまだ存在しない場合に限り、この抽象パス名で命名された新しい空のファイルをアトミックに作成します。</target>
        </trans-unit>
        <trans-unit id="e136665690d436c90ac24597330e75aa71bf4153" translate="yes" xml:space="preserve">
          <source>Atomically creates a new, empty file named by this abstract pathname if and only if a file with this name does not yet exist. The check for the existence of the file and the creation of the file if it does not exist are a single operation that is atomic with respect to all other filesystem activities that might affect the file.</source>
          <target state="translated">この抽象パス名を持つファイルがまだ存在しない場合にのみ、この抽象パス名で命名された新しい空のファイルをアトミックに作成します。ファイルが存在するかどうかのチェックと、ファイルが存在しない場合のファイルの作成は、そのファイルに影響を与える可能性のある他のすべてのファイルシステムのアクティビティに関しては、アトミックな単一の操作です。</target>
        </trans-unit>
        <trans-unit id="3be92a897a5279695bbf54c0e7a2834c8e25918e" translate="yes" xml:space="preserve">
          <source>Atomically decrements by one the current value of the field of the given object managed by this updater.</source>
          <target state="translated">このアップデータで管理されている指定のオブジェクトのフィールドの現在の値を 1 つずつア トミックにデクリメントします。</target>
        </trans-unit>
        <trans-unit id="b3ed3d4b4ea275383e57f1acdbb323dcdc91cf19" translate="yes" xml:space="preserve">
          <source>Atomically decrements by one the current value.</source>
          <target state="translated">現在の値を1つずつ原子的にデクリメントします。</target>
        </trans-unit>
        <trans-unit id="f3c10b083f8e3b70d7a23642ad6451df97f5172e" translate="yes" xml:space="preserve">
          <source>Atomically decrements by one the element at index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">インデックス &lt;code&gt;i&lt;/code&gt; の要素を1だけ原子的に減分します。</target>
        </trans-unit>
        <trans-unit id="280803c7530603bf15aae5edefb0894bc83df016" translate="yes" xml:space="preserve">
          <source>Atomically decrements the current value, with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#getAndAdd(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.getAndAdd(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../lang/invoke/varhandle#getAndAdd(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.getAndAdd(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果を使用して、現在の値を原子的にデクリメントします。</target>
        </trans-unit>
        <trans-unit id="076ba14cbc92d6747d3618469bc551640f2beb10" translate="yes" xml:space="preserve">
          <source>Atomically decrements the value of the element at index &lt;code&gt;i&lt;/code&gt;, with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#getAndAdd(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.getAndAdd(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../lang/invoke/varhandle#getAndAdd(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.getAndAdd(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果を使用して、インデックス &lt;code&gt;i&lt;/code&gt; の要素の値を原子的にデクリメントします。</target>
        </trans-unit>
        <trans-unit id="c370b2617158f37c64c06f2430195f84d6987a57" translate="yes" xml:space="preserve">
          <source>Atomically increments by one the current value of the field of the given object managed by this updater.</source>
          <target state="translated">このアップデータで管理されている指定のオブジェクトのフィールドの現在の値を 1 つずつアトム単位でインクリメントします。</target>
        </trans-unit>
        <trans-unit id="9adfcf5044b2e8ced2c45c92756be5b12b2bf424" translate="yes" xml:space="preserve">
          <source>Atomically increments by one the current value.</source>
          <target state="translated">現在の値をアトム単位でインクリメントします。</target>
        </trans-unit>
        <trans-unit id="9c90d0214d231d89aec21066442688b0f34d2ff6" translate="yes" xml:space="preserve">
          <source>Atomically increments by one the element at index &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">インデックス &lt;code&gt;i&lt;/code&gt; の要素を1だけ原子的に増分します。</target>
        </trans-unit>
        <trans-unit id="c95be3a2db0704731f576ed0064c59933fc2c12e" translate="yes" xml:space="preserve">
          <source>Atomically increments the current value, with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#getAndAdd(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.getAndAdd(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../lang/invoke/varhandle#getAndAdd(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.getAndAdd(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果を使用して、現在の値をアトミックにインクリメントします。</target>
        </trans-unit>
        <trans-unit id="bf3ac6ae42561e2de19398b9dd0c43883a53e38f" translate="yes" xml:space="preserve">
          <source>Atomically increments the value of the element at index &lt;code&gt;i&lt;/code&gt;, with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#getAndAdd(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.getAndAdd(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../lang/invoke/varhandle#getAndAdd(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.getAndAdd(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果を使用して、インデックス &lt;code&gt;i&lt;/code&gt; の要素の値をアトミックにインクリメントします。</target>
        </trans-unit>
        <trans-unit id="1f7d08dd18fa6241aa04e50d6c756c4d2cc76b41" translate="yes" xml:space="preserve">
          <source>Atomically removes all of the elements from this delay queue.</source>
          <target state="translated">この遅延キューからすべての要素をアトミックに削除します。</target>
        </trans-unit>
        <trans-unit id="4975902423cbb31a1a3e496e3368620435e94494" translate="yes" xml:space="preserve">
          <source>Atomically removes all of the elements from this delay queue. The queue will be empty after this call returns. Elements with an unexpired delay are not waited for; they are simply discarded from the queue.</source>
          <target state="translated">この遅延キューからすべての要素をアトミックに削除します。このコールが戻ってきた後、キューは空になります。期限が切れていない遅延を持つ要素は待機されず、単にキューから破棄されます。</target>
        </trans-unit>
        <trans-unit id="8b2bdf4a3ffa5fef43beaf4b8f652c752365cfa6" translate="yes" xml:space="preserve">
          <source>Atomically removes all of the elements from this deque.</source>
          <target state="translated">このdequeからすべての要素をアトミックに削除します。</target>
        </trans-unit>
        <trans-unit id="d61b61439e9a655ec6a4ecf9cd3bbaff53f07a2c" translate="yes" xml:space="preserve">
          <source>Atomically removes all of the elements from this deque. The deque will be empty after this call returns.</source>
          <target state="translated">このdequeからすべての要素をアトミックに削除します。この呼び出しが戻った後、dequeは空になります。</target>
        </trans-unit>
        <trans-unit id="501cfc3bb02363c34a5113270cd1e4ce55a1a4dd" translate="yes" xml:space="preserve">
          <source>Atomically removes all of the elements from this queue.</source>
          <target state="translated">このキューからすべての要素を原子レベルで削除します。</target>
        </trans-unit>
        <trans-unit id="b86148fb0c74111febed1c4e4e06e1c0fc16f8e1" translate="yes" xml:space="preserve">
          <source>Atomically removes all of the elements from this queue. The queue will be empty after this call returns.</source>
          <target state="translated">このキューからすべての要素を原子レベルで削除します。この呼び出しが戻った後、キューは空になります。</target>
        </trans-unit>
        <trans-unit id="0cba70ebb986c2ad74790b80b050f7a850e9b8a1" translate="yes" xml:space="preserve">
          <source>Atomically sets synchronization state to the given updated value if the current state value equals the expected value.</source>
          <target state="translated">現在の状態値が期待値と等しい場合に、同期状態を与えられた更新値にアトミックに設定します。</target>
        </trans-unit>
        <trans-unit id="ba2c6f7639b51a6fd0d4cee557a725a15096a795" translate="yes" xml:space="preserve">
          <source>Atomically sets synchronization state to the given updated value if the current state value equals the expected value. This operation has memory semantics of a &lt;code&gt;volatile&lt;/code&gt; read and write.</source>
          <target state="translated">現在の状態値が期待値と等しい場合、同期状態を指定された更新値に原子的に設定します。この操作には、 &lt;code&gt;volatile&lt;/code&gt; 読み取りと書き込みのメモリセマンティクスがあります。</target>
        </trans-unit>
        <trans-unit id="8cf29cdc817ee944933779867833884d4b7eb80a" translate="yes" xml:space="preserve">
          <source>Atomically sets the element at index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;
 newValue&lt;/code&gt; and returns the old value, with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#getAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.getAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">インデックス &lt;code&gt;i&lt;/code&gt; の要素を&lt;a href=&quot;../../../lang/invoke/varhandle#getAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.getAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;に &lt;code&gt; newValue&lt;/code&gt; に設定し、VarHandle.getAndSet（java.lang.Object ...）で指定されたメモリ効果で古い値を返します。</target>
        </trans-unit>
        <trans-unit id="116960f07de28b273706bf5bb933759c227bf08d" translate="yes" xml:space="preserve">
          <source>Atomically sets the element at index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;
 newValue&lt;/code&gt; if the element's current value &lt;code&gt;== expectedValue&lt;/code&gt;, with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要素の現在の値 &lt;code&gt;== expectedValue&lt;/code&gt; の場合、&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果を使用して、インデックス &lt;code&gt;i&lt;/code&gt; の要素を原子的に &lt;code&gt; newValue&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="9cbe7594ae62d032dd1381df0e2281dbcf7dae17" translate="yes" xml:space="preserve">
          <source>Atomically sets the element at index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;newValue&lt;/code&gt; if the element's current value &lt;code&gt;== expectedValue&lt;/code&gt;, with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要素の現在の値 &lt;code&gt;== expectedValue&lt;/code&gt; の場合、&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果を使用して、インデックス &lt;code&gt;i&lt;/code&gt; の要素を原子的に &lt;code&gt;newValue&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="0713fab45be311fd5881274eebdb825154f80096" translate="yes" xml:space="preserve">
          <source>Atomically sets the element at index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;newValue&lt;/code&gt; if the element's current value, referred to as the &lt;em&gt;witness value&lt;/em&gt;, &lt;code&gt;== expectedValue&lt;/code&gt;, with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndExchange(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndExchange(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">原子的インデックスにある要素を設定し、 &lt;code&gt;i&lt;/code&gt; に &lt;code&gt;newValue&lt;/code&gt; にと呼ばれる、要素の現在の値ならば&lt;em&gt;証人値&lt;/em&gt;、 &lt;code&gt;== expectedValue&lt;/code&gt; で指定されたメモリ効果で、&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndExchange(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndExchange(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3d583a71bc5017aed2184f91192e06408744e8bd" translate="yes" xml:space="preserve">
          <source>Atomically sets the element at index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;newValue&lt;/code&gt; if the element's current value, referred to as the &lt;em&gt;witness value&lt;/em&gt;, &lt;code&gt;== expectedValue&lt;/code&gt;, with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndExchangeAcquire(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndExchangeAcquire(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">原子的インデックスにある要素を設定し、 &lt;code&gt;i&lt;/code&gt; に &lt;code&gt;newValue&lt;/code&gt; にと呼ばれる、要素の現在の値ならば&lt;em&gt;証人値&lt;/em&gt;、 &lt;code&gt;== expectedValue&lt;/code&gt; で指定されたメモリ効果で、&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndExchangeAcquire(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndExchangeAcquire(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2fe062fcbd4013f3b5df8ee01e03ccb73e252475" translate="yes" xml:space="preserve">
          <source>Atomically sets the element at index &lt;code&gt;i&lt;/code&gt; to &lt;code&gt;newValue&lt;/code&gt; if the element's current value, referred to as the &lt;em&gt;witness value&lt;/em&gt;, &lt;code&gt;== expectedValue&lt;/code&gt;, with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndExchangeRelease(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndExchangeRelease(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">原子的インデックスにある要素を設定し、 &lt;code&gt;i&lt;/code&gt; に &lt;code&gt;newValue&lt;/code&gt; にと呼ばれる、要素の現在の値ならば&lt;em&gt;証人値&lt;/em&gt;、 &lt;code&gt;== expectedValue&lt;/code&gt; で指定されたメモリ効果で、&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndExchangeRelease(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndExchangeRelease(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3cfc1f0b30a22e296a77a8873b7527c6ba170ca6" translate="yes" xml:space="preserve">
          <source>Atomically sets the element at position &lt;code&gt;i&lt;/code&gt; to the given updated value if the current value &lt;code&gt;==&lt;/code&gt; the expected value.</source>
          <target state="translated">現在の値 &lt;code&gt;==&lt;/code&gt; 期待値の場合、位置 &lt;code&gt;i&lt;/code&gt; の要素を指定された更新値に原子的に設定します。</target>
        </trans-unit>
        <trans-unit id="dd311dbbf55d45e10eb2707ae4c172708102cf71" translate="yes" xml:space="preserve">
          <source>Atomically sets the element at position &lt;code&gt;i&lt;/code&gt; to the given value and returns the old value.</source>
          <target state="translated">位置 &lt;code&gt;i&lt;/code&gt; の要素を指定された値に原子的に設定し、古い値を返します。</target>
        </trans-unit>
        <trans-unit id="abbc37c87bb3b78d86ac5867488136a8c81c1e88" translate="yes" xml:space="preserve">
          <source>Atomically sets the field of the given object managed by this updater to the given updated value if the current value &lt;code&gt;==&lt;/code&gt; the expected value.</source>
          <target state="translated">現在の値 &lt;code&gt;==&lt;/code&gt; 期待値の場合、このアップデーターによって管理される指定されたオブジェクトのフィールドを指定された更新された値にアトミックに設定します。</target>
        </trans-unit>
        <trans-unit id="9ad1656270a1fddfa375fc5eccf577df5a8174ac" translate="yes" xml:space="preserve">
          <source>Atomically sets the field of the given object managed by this updater to the given updated value if the current value &lt;code&gt;==&lt;/code&gt; the expected value. This method is guaranteed to be atomic with respect to other calls to &lt;code&gt;compareAndSet&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;, but not necessarily with respect to other changes in the field.</source>
          <target state="translated">現在の値 &lt;code&gt;==&lt;/code&gt; 期待される値である場合、このアップデーターによって管理される指定されたオブジェクトのフィールドを指定された更新された値に原子的に設定します。このメソッドは、 &lt;code&gt;compareAndSet&lt;/code&gt; および &lt;code&gt;set&lt;/code&gt; への他の呼び出しに関してアトミックであることが保証されていますが、必ずしもフィールドの他の変更に関してはそうではありません。</target>
        </trans-unit>
        <trans-unit id="d8de1dc7d2c76a71fe76270f11e983c5c3a919b0" translate="yes" xml:space="preserve">
          <source>Atomically sets the field of the given object managed by this updater to the given value and returns the old value.</source>
          <target state="translated">アトミックに、このアップデータが管理する指定されたオブジェクトのフィールドを指定された値に設定し、古い値を返します。</target>
        </trans-unit>
        <trans-unit id="60944f7304b5b9c449f732cbfbb60db9b4ebd1d6" translate="yes" xml:space="preserve">
          <source>Atomically sets the tag value for this task and returns the old value.</source>
          <target state="translated">このタスクのタグ値をアトミックに設定し、古い値を返します。</target>
        </trans-unit>
        <trans-unit id="c741fa337623774cc4c593424264b3a27b719c2c" translate="yes" xml:space="preserve">
          <source>Atomically sets the tag value for this task.</source>
          <target state="translated">このタスクのタグ値をアトミックに設定します。</target>
        </trans-unit>
        <trans-unit id="8ef6cd56f3cb8df2314ac76efdb60ea3a7a6cd82" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of a variable to the &lt;code&gt;newValue&lt;/code&gt; with the memory semantics of &lt;a href=&quot;#set(java.lang.Object...)&quot;&gt;&lt;code&gt;set(java.lang.Object...)&lt;/code&gt;&lt;/a&gt; and returns the variable's previous value, as accessed with the memory semantics of &lt;a href=&quot;#getAcquire(java.lang.Object...)&quot;&gt;&lt;code&gt;getAcquire(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アトミックに変数の値を設定し &lt;code&gt;newValue&lt;/code&gt; にメモリのセマンティクスを持つ&lt;a href=&quot;#set(java.lang.Object...)&quot;&gt; &lt;code&gt;set(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;のメモリセマンティクスでアクセスように、戻り変数の前の値を&lt;a href=&quot;#getAcquire(java.lang.Object...)&quot;&gt; &lt;code&gt;getAcquire(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c14d0178db969b79e815215063dba64145f74e1d" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of a variable to the &lt;code&gt;newValue&lt;/code&gt; with the memory semantics of &lt;a href=&quot;#set(java.lang.Object...)&quot;&gt;&lt;code&gt;set(java.lang.Object...)&lt;/code&gt;&lt;/a&gt; if the variable's current value, referred to as the &lt;em&gt;witness value&lt;/em&gt;, &lt;code&gt;==&lt;/code&gt; the &lt;code&gt;expectedValue&lt;/code&gt;, as accessed with the memory semantics of &lt;a href=&quot;#getAcquire(java.lang.Object...)&quot;&gt;&lt;code&gt;getAcquire(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アトミックに変数の値を設定し &lt;code&gt;newValue&lt;/code&gt; にのメモリセマンティクスを有する&lt;a href=&quot;#set(java.lang.Object...)&quot;&gt; &lt;code&gt;set(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;と呼ばれる、変数の現在の値場合&lt;em&gt;証人値&lt;/em&gt;、 &lt;code&gt;==&lt;/code&gt; &lt;code&gt;expectedValue&lt;/code&gt; メモリセマンティクスでアクセスされるように、&lt;a href=&quot;#getAcquire(java.lang.Object...)&quot;&gt; &lt;code&gt;getAcquire(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="15d84ee937f9da27ae8cad837bcc78f5a38b9473" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of a variable to the &lt;code&gt;newValue&lt;/code&gt; with the memory semantics of &lt;a href=&quot;#setRelease(java.lang.Object...)&quot;&gt;&lt;code&gt;setRelease(java.lang.Object...)&lt;/code&gt;&lt;/a&gt; and returns the variable's previous value, as accessed with the memory semantics of &lt;a href=&quot;#get(java.lang.Object...)&quot;&gt;&lt;code&gt;get(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#setRelease(java.lang.Object...)&quot;&gt; &lt;code&gt;setRelease(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;のメモリセマンティクスを使用して変数の値を &lt;code&gt;newValue&lt;/code&gt; にアトミックに設定し、get（java.lang.Object ...）のメモリセマンティクスでアクセスされた変数の以前の値を返し&lt;a href=&quot;#get(java.lang.Object...)&quot;&gt; &lt;code&gt;get(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="03021639bc3213da5f7252335a2d55823d8b1c0e" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of a variable to the &lt;code&gt;newValue&lt;/code&gt; with the memory semantics of &lt;a href=&quot;#setRelease(java.lang.Object...)&quot;&gt;&lt;code&gt;setRelease(java.lang.Object...)&lt;/code&gt;&lt;/a&gt; if the variable's current value, referred to as the &lt;em&gt;witness value&lt;/em&gt;, &lt;code&gt;==&lt;/code&gt; the &lt;code&gt;expectedValue&lt;/code&gt;, as accessed with the memory semantics of &lt;a href=&quot;#get(java.lang.Object...)&quot;&gt;&lt;code&gt;get(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アトミックに変数の値を設定し &lt;code&gt;newValue&lt;/code&gt; にのメモリセマンティクスと&lt;a href=&quot;#setRelease(java.lang.Object...)&quot;&gt; &lt;code&gt;setRelease(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;と呼ばれる、変数の現在の値場合&lt;em&gt;証人値&lt;/em&gt;、 &lt;code&gt;==&lt;/code&gt; &lt;code&gt;expectedValue&lt;/code&gt; メモリセマンティクスでアクセスされるように、&lt;a href=&quot;#get(java.lang.Object...)&quot;&gt; &lt;code&gt;get(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42582a8b1d8cc986eedb5c5227e0936139ed5178" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of a variable to the &lt;code&gt;newValue&lt;/code&gt; with the memory semantics of &lt;a href=&quot;#setVolatile(java.lang.Object...)&quot;&gt;&lt;code&gt;setVolatile(java.lang.Object...)&lt;/code&gt;&lt;/a&gt; and returns the variable's previous value, as accessed with the memory semantics of &lt;a href=&quot;#getVolatile(java.lang.Object...)&quot;&gt;&lt;code&gt;getVolatile(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#setVolatile(java.lang.Object...)&quot;&gt; &lt;code&gt;setVolatile(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;のメモリセマンティクスを使用して変数の値を &lt;code&gt;newValue&lt;/code&gt; にアトミックに設定し、getVolatile（java.lang.Object ...）のメモリセマンティクスでアクセスされた変数の以前の値を返し&lt;a href=&quot;#getVolatile(java.lang.Object...)&quot;&gt; &lt;code&gt;getVolatile(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88d50a9ffe0c03976c616ce7fc05f408c6108a2e" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of a variable to the &lt;code&gt;newValue&lt;/code&gt; with the memory semantics of &lt;a href=&quot;#setVolatile(java.lang.Object...)&quot;&gt;&lt;code&gt;setVolatile(java.lang.Object...)&lt;/code&gt;&lt;/a&gt; if the variable's current value, referred to as the &lt;em&gt;witness value&lt;/em&gt;, &lt;code&gt;==&lt;/code&gt; the &lt;code&gt;expectedValue&lt;/code&gt;, as accessed with the memory semantics of &lt;a href=&quot;#getVolatile(java.lang.Object...)&quot;&gt;&lt;code&gt;getVolatile(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アトミックに変数の値を設定し &lt;code&gt;newValue&lt;/code&gt; にのメモリセマンティクスと&lt;a href=&quot;#setVolatile(java.lang.Object...)&quot;&gt; &lt;code&gt;setVolatile(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;と呼ばれる、変数の現在の値場合&lt;em&gt;証人値&lt;/em&gt;、 &lt;code&gt;==&lt;/code&gt; &lt;code&gt;expectedValue&lt;/code&gt; メモリセマンティクスでアクセスされるように、&lt;a href=&quot;#getVolatile(java.lang.Object...)&quot;&gt; &lt;code&gt;getVolatile(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2bc314b7814d706f1420c635e8f16d1dd62da1cb" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of a variable to the result of bitwise AND between the variable's current value and the &lt;code&gt;mask&lt;/code&gt; with the memory semantics of &lt;a href=&quot;#set(java.lang.Object...)&quot;&gt;&lt;code&gt;set(java.lang.Object...)&lt;/code&gt;&lt;/a&gt; and returns the variable's previous value, as accessed with the memory semantics of &lt;a href=&quot;#getAcquire(java.lang.Object...)&quot;&gt;&lt;code&gt;getAcquire(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">変数の値を、変数の現在の値と&lt;a href=&quot;#set(java.lang.Object...)&quot;&gt; &lt;code&gt;set(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;のメモリセマンティクスを使用した &lt;code&gt;mask&lt;/code&gt; との間のビット単位のANDの結果にアトミックに設定し、メモリセマンティクスでアクセスされた変数の前の値を返します。&lt;a href=&quot;#getAcquire(java.lang.Object...)&quot;&gt; &lt;code&gt;getAcquire(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fee6a7e1b203f33d861f4dc4f8add39ac755231c" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of a variable to the result of bitwise AND between the variable's current value and the &lt;code&gt;mask&lt;/code&gt; with the memory semantics of &lt;a href=&quot;#setRelease(java.lang.Object...)&quot;&gt;&lt;code&gt;setRelease(java.lang.Object...)&lt;/code&gt;&lt;/a&gt; and returns the variable's previous value, as accessed with the memory semantics of &lt;a href=&quot;#get(java.lang.Object...)&quot;&gt;&lt;code&gt;get(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">変数の値を、変数の現在の値と&lt;a href=&quot;#setRelease(java.lang.Object...)&quot;&gt; &lt;code&gt;setRelease(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;のメモリセマンティクスを使用した &lt;code&gt;mask&lt;/code&gt; との間のビット単位のANDの結果にアトミックに設定し、メモリセマンティクスでアクセスされた変数の以前の値を返します。&lt;a href=&quot;#get(java.lang.Object...)&quot;&gt; &lt;code&gt;get(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc8b96d9a826198096acb2530e9695a9b3e240f7" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of a variable to the result of bitwise AND between the variable's current value and the &lt;code&gt;mask&lt;/code&gt; with the memory semantics of &lt;a href=&quot;#setVolatile(java.lang.Object...)&quot;&gt;&lt;code&gt;setVolatile(java.lang.Object...)&lt;/code&gt;&lt;/a&gt; and returns the variable's previous value, as accessed with the memory semantics of &lt;a href=&quot;#getVolatile(java.lang.Object...)&quot;&gt;&lt;code&gt;getVolatile(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">変数の値を、変数の現在の値と&lt;a href=&quot;#setVolatile(java.lang.Object...)&quot;&gt; &lt;code&gt;setVolatile(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;のメモリセマンティクスを使用した &lt;code&gt;mask&lt;/code&gt; との間のビット単位のANDの結果にアトミックに設定し、メモリセマンティクスでアクセスされた変数の以前の値を返します。&lt;a href=&quot;#getVolatile(java.lang.Object...)&quot;&gt; &lt;code&gt;getVolatile(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="764af1e38896403563a54bb3d6b286bfcab39c96" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of a variable to the result of bitwise OR between the variable's current value and the &lt;code&gt;mask&lt;/code&gt; with the memory semantics of &lt;a href=&quot;#set(java.lang.Object...)&quot;&gt;&lt;code&gt;set(java.lang.Object...)&lt;/code&gt;&lt;/a&gt; and returns the variable's previous value, as accessed with the memory semantics of &lt;a href=&quot;#getAcquire(java.lang.Object...)&quot;&gt;&lt;code&gt;getAcquire(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">変数の値を、変数の現在の値と&lt;a href=&quot;#set(java.lang.Object...)&quot;&gt; &lt;code&gt;set(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;のメモリセマンティクスを使用した &lt;code&gt;mask&lt;/code&gt; との間のビットごとのORの結果にアトミックに設定し、メモリセマンティクスでアクセスされた変数の以前の値を返します。&lt;a href=&quot;#getAcquire(java.lang.Object...)&quot;&gt; &lt;code&gt;getAcquire(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f92db359821f970fc8d3bdaa6b7a4ec2aa60ebb9" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of a variable to the result of bitwise OR between the variable's current value and the &lt;code&gt;mask&lt;/code&gt; with the memory semantics of &lt;a href=&quot;#setRelease(java.lang.Object...)&quot;&gt;&lt;code&gt;setRelease(java.lang.Object...)&lt;/code&gt;&lt;/a&gt; and returns the variable's previous value, as accessed with the memory semantics of &lt;a href=&quot;#get(java.lang.Object...)&quot;&gt;&lt;code&gt;get(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">変数の値を、変数の現在の値と&lt;a href=&quot;#setRelease(java.lang.Object...)&quot;&gt; &lt;code&gt;setRelease(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;のメモリセマンティクスを使用した &lt;code&gt;mask&lt;/code&gt; との間のビットごとのORの結果にアトミックに設定し、メモリセマンティクスでアクセスされた変数の以前の値を返します。&lt;a href=&quot;#get(java.lang.Object...)&quot;&gt; &lt;code&gt;get(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="68538c144c463130de924136a55357a9d96a4071" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of a variable to the result of bitwise OR between the variable's current value and the &lt;code&gt;mask&lt;/code&gt; with the memory semantics of &lt;a href=&quot;#setVolatile(java.lang.Object...)&quot;&gt;&lt;code&gt;setVolatile(java.lang.Object...)&lt;/code&gt;&lt;/a&gt; and returns the variable's previous value, as accessed with the memory semantics of &lt;a href=&quot;#getVolatile(java.lang.Object...)&quot;&gt;&lt;code&gt;getVolatile(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">変数の値を、変数の現在の値と&lt;a href=&quot;#setVolatile(java.lang.Object...)&quot;&gt; &lt;code&gt;setVolatile(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;のメモリセマンティクスを使用した &lt;code&gt;mask&lt;/code&gt; との間のビットごとのORの結果にアトミックに設定し、メモリセマンティクスでアクセスされた変数の以前の値を返します。&lt;a href=&quot;#getVolatile(java.lang.Object...)&quot;&gt; &lt;code&gt;getVolatile(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a3f39539ca9793122184b9ea613b83bf15ec1d45" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of a variable to the result of bitwise XOR between the variable's current value and the &lt;code&gt;mask&lt;/code&gt; with the memory semantics of &lt;a href=&quot;#set(java.lang.Object...)&quot;&gt;&lt;code&gt;set(java.lang.Object...)&lt;/code&gt;&lt;/a&gt; and returns the variable's previous value, as accessed with the memory semantics of &lt;a href=&quot;#getAcquire(java.lang.Object...)&quot;&gt;&lt;code&gt;getAcquire(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">変数の値を、変数の現在の値と&lt;a href=&quot;#set(java.lang.Object...)&quot;&gt; &lt;code&gt;set(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;のメモリセマンティクスを使用した &lt;code&gt;mask&lt;/code&gt; との間のビット単位のXORの結果にアトミックに設定し、メモリセマンティクスでアクセスされた変数の以前の値を返します。&lt;a href=&quot;#getAcquire(java.lang.Object...)&quot;&gt; &lt;code&gt;getAcquire(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b45bd3a86209703887e9b4938e841eb833cbde95" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of a variable to the result of bitwise XOR between the variable's current value and the &lt;code&gt;mask&lt;/code&gt; with the memory semantics of &lt;a href=&quot;#setRelease(java.lang.Object...)&quot;&gt;&lt;code&gt;setRelease(java.lang.Object...)&lt;/code&gt;&lt;/a&gt; and returns the variable's previous value, as accessed with the memory semantics of &lt;a href=&quot;#get(java.lang.Object...)&quot;&gt;&lt;code&gt;get(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#setRelease(java.lang.Object...)&quot;&gt; &lt;code&gt;setRelease(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;のメモリセマンティクスを使用して、変数の現在の値と &lt;code&gt;mask&lt;/code&gt; の間のビット単位のXORの結果に変数の値を原子的に設定し、メモリセマンティクスでアクセスされた変数の前の値を返します。&lt;a href=&quot;#get(java.lang.Object...)&quot;&gt; &lt;code&gt;get(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7733f3ba6eb60272705b61e02a861c08c02cd3ac" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of a variable to the result of bitwise XOR between the variable's current value and the &lt;code&gt;mask&lt;/code&gt; with the memory semantics of &lt;a href=&quot;#setVolatile(java.lang.Object...)&quot;&gt;&lt;code&gt;setVolatile(java.lang.Object...)&lt;/code&gt;&lt;/a&gt; and returns the variable's previous value, as accessed with the memory semantics of &lt;a href=&quot;#getVolatile(java.lang.Object...)&quot;&gt;&lt;code&gt;getVolatile(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#setVolatile(java.lang.Object...)&quot;&gt; &lt;code&gt;setVolatile(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;のメモリセマンティクスを使用して、変数の現在の値と &lt;code&gt;mask&lt;/code&gt; の間のビット単位のXORの結果に変数の値を原子的に設定し、メモリセマンティクスでアクセスされた変数の前の値を返します。&lt;a href=&quot;#getVolatile(java.lang.Object...)&quot;&gt; &lt;code&gt;getVolatile(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2cdd4050771e51fd121dddebcba128afe05e7243" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of both the reference and mark to the given update values if the current reference is &lt;code&gt;==&lt;/code&gt; to the expected reference and the current mark is equal to the expected mark.</source>
          <target state="translated">現在の参照が期待される参照に &lt;code&gt;==&lt;/code&gt; であり、現在のマークが期待されるマークに等しい場合、参照とマークの両方の値を特定の更新値に原子的に設定します。</target>
        </trans-unit>
        <trans-unit id="37ba5730fc49abceca89a3426b8f97f7f045eaf0" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of both the reference and mark to the given update values if the current reference is &lt;code&gt;==&lt;/code&gt; to the expected reference and the current mark is equal to the expected mark. This operation may fail spuriously and does not provide ordering guarantees, so is only rarely an appropriate alternative to &lt;code&gt;compareAndSet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404582ff13a2a20f0878671c23363fd87ab76295" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of both the reference and stamp to the given update values if the current reference is &lt;code&gt;==&lt;/code&gt; to the expected reference and the current stamp is equal to the expected stamp.</source>
          <target state="translated">現在の参照が期待される参照に &lt;code&gt;==&lt;/code&gt; であり、現在のスタンプが期待されるスタンプに等しい場合、参照とスタンプの両方の値を指定された更新値に原子的に設定します。</target>
        </trans-unit>
        <trans-unit id="8d825601f5c8ee57709737f676b5d6cc77755b2b" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of both the reference and stamp to the given update values if the current reference is &lt;code&gt;==&lt;/code&gt; to the expected reference and the current stamp is equal to the expected stamp. This operation may fail spuriously and does not provide ordering guarantees, so is only rarely an appropriate alternative to &lt;code&gt;compareAndSet&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56fcc9fe504d9edb75bab800331b912e0ad21268" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of the mark to the given update value if the current reference is &lt;code&gt;==&lt;/code&gt; to the expected reference.</source>
          <target state="translated">現在の参照が期待される参照に対して &lt;code&gt;==&lt;/code&gt; である場合、マークの値を指定された更新値に原子的に設定します。</target>
        </trans-unit>
        <trans-unit id="69038f060f753b8857af01a760c06feb96975cbe" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of the mark to the given update value if the current reference is &lt;code&gt;==&lt;/code&gt; to the expected reference. Any given invocation of this operation may fail (return &lt;code&gt;false&lt;/code&gt;) spuriously, but repeated invocation when the current value holds the expected value and no other thread is also attempting to set the value will eventually succeed.</source>
          <target state="translated">現在の参照が期待される参照への &lt;code&gt;==&lt;/code&gt; である場合、マークの値を指定された更新値に原子的に設定します。この操作の特定の呼び出しは、 &lt;code&gt;false&lt;/code&gt; 失敗（falseを返す）する可能性がありますが、現在の値が期待値を保持し、他のスレッドも値を設定しようとしていないときに繰り返し呼び出すと、最終的に成功します。</target>
        </trans-unit>
        <trans-unit id="906f15a31f65ae2556286e1a62890f4fcf37b9ca" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of the stamp to the given update value if the current reference is &lt;code&gt;==&lt;/code&gt; to the expected reference.</source>
          <target state="translated">現在の参照が期待される参照に対して &lt;code&gt;==&lt;/code&gt; である場合、スタンプの値を指定された更新値に原子的に設定します。</target>
        </trans-unit>
        <trans-unit id="9ec8c3b9d589156e03686a2ffe57e31cb91992b2" translate="yes" xml:space="preserve">
          <source>Atomically sets the value of the stamp to the given update value if the current reference is &lt;code&gt;==&lt;/code&gt; to the expected reference. Any given invocation of this operation may fail (return &lt;code&gt;false&lt;/code&gt;) spuriously, but repeated invocation when the current value holds the expected value and no other thread is also attempting to set the value will eventually succeed.</source>
          <target state="translated">現在の参照が期待される参照への &lt;code&gt;==&lt;/code&gt; である場合、スタンプの値を指定された更新値に原子的に設定します。この操作の特定の呼び出しは、 &lt;code&gt;false&lt;/code&gt; 失敗（falseを返す）する可能性がありますが、現在の値が期待値を保持していて、他のスレッドも値を設定しようとしていないときに繰り返し呼び出すと、最終的に成功します。</target>
        </trans-unit>
        <trans-unit id="404c1bc35d69ccedd55e7aed61f0411f92d94f3f" translate="yes" xml:space="preserve">
          <source>Atomically sets the value to &lt;code&gt;newValue&lt;/code&gt; and returns the old value, with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#getAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.getAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">原子的に値を &lt;code&gt;newValue&lt;/code&gt; に設定し、&lt;a href=&quot;../../../lang/invoke/varhandle#getAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.getAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果で古い値を返します。</target>
        </trans-unit>
        <trans-unit id="4130c18f11aa1d6779bbfac2a9d708d7d7a64397" translate="yes" xml:space="preserve">
          <source>Atomically sets the value to &lt;code&gt;newValue&lt;/code&gt; if the current value &lt;code&gt;== expectedValue&lt;/code&gt;, with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">現在の値 &lt;code&gt;== expectedValue&lt;/code&gt; 場合、&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果を使用して、値を原子的に &lt;code&gt;newValue&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="a633eb8e5cd4de2df748c80124e59aa8df07f7c9" translate="yes" xml:space="preserve">
          <source>Atomically sets the value to &lt;code&gt;newValue&lt;/code&gt; if the current value, referred to as the &lt;em&gt;witness value&lt;/em&gt;, &lt;code&gt;== expectedValue&lt;/code&gt;, with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndExchange(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndExchange(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;ウィットネス値&lt;/em&gt;と呼ばれる現在の値 &lt;code&gt;== expectedValue&lt;/code&gt; &lt;em&gt;場合&lt;/em&gt;、&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndExchange(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndExchange(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果を使用して、値を原子的に &lt;code&gt;newValue&lt;/code&gt; に設定します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b5cccb0eb8b847aae374282ed6f94a37bbf0790a" translate="yes" xml:space="preserve">
          <source>Atomically sets the value to &lt;code&gt;newValue&lt;/code&gt; if the current value, referred to as the &lt;em&gt;witness value&lt;/em&gt;, &lt;code&gt;== expectedValue&lt;/code&gt;, with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndExchangeAcquire(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndExchangeAcquire(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アトミックに値設定 &lt;code&gt;newValue&lt;/code&gt; に電流値は、と呼ばれる場合&lt;em&gt;証人値&lt;/em&gt;、 &lt;code&gt;== expectedValue&lt;/code&gt; によって指定されたメモリ効果と、&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndExchangeAcquire(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndExchangeAcquire(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02b6b03a1b95e584a04d1b700f8c8b3ce34cde88" translate="yes" xml:space="preserve">
          <source>Atomically sets the value to &lt;code&gt;newValue&lt;/code&gt; if the current value, referred to as the &lt;em&gt;witness value&lt;/em&gt;, &lt;code&gt;== expectedValue&lt;/code&gt;, with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndExchangeRelease(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndExchangeRelease(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;ウィットネス値&lt;/em&gt;と呼ばれる現在の値 &lt;code&gt;== expectedValue&lt;/code&gt; &lt;em&gt;場合&lt;/em&gt;、&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndExchangeRelease(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndExchangeRelease(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果を使用して、値を原子的に &lt;code&gt;newValue&lt;/code&gt; に設定します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fcae4a98786c2d113853e09169296ee04a555685" translate="yes" xml:space="preserve">
          <source>Atomically sets the value to the given updated value if the current value &lt;code&gt;==&lt;/code&gt; the expected value.</source>
          <target state="translated">現在の値 &lt;code&gt;==&lt;/code&gt; 期待される値である場合、値を指定された更新値に原子的に設定します。</target>
        </trans-unit>
        <trans-unit id="ab2bf55c0823de1aa88bb26758242f505c68ec50" translate="yes" xml:space="preserve">
          <source>Atomically sets this key's interest set to the bitwise intersection (&quot;and&quot;) of the existing interest set and the given value.</source>
          <target state="translated">このキーの関心セットを、既存の関心セットと指定された値のビット単位での交点 (&quot;and&quot;)にアトミックに設定します。</target>
        </trans-unit>
        <trans-unit id="b75f6c2643d2413b14a847bbd1f937af1d0e72e1" translate="yes" xml:space="preserve">
          <source>Atomically sets this key's interest set to the bitwise intersection (&quot;and&quot;) of the existing interest set and the given value. This method is guaranteed to be atomic with respect to other concurrent calls to this method or to &lt;a href=&quot;#interestOpsOr(int)&quot;&gt;&lt;code&gt;interestOpsOr(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このキーのインタレストセットを、既存のインタレストセットと指定された値のビット単位の共通部分（「および」）にアトミックに設定します。このメソッドは、このメソッドまたは&lt;a href=&quot;#interestOpsOr(int)&quot;&gt; &lt;code&gt;interestOpsOr(int)&lt;/code&gt; &lt;/a&gt;への他の同時呼び出しに関してアトミックであることが保証されています。</target>
        </trans-unit>
        <trans-unit id="ae6222a0e8c33c3fa796c6d0b8fdba52d585c12e" translate="yes" xml:space="preserve">
          <source>Atomically sets this key's interest set to the bitwise union (&quot;or&quot;) of the existing interest set and the given value.</source>
          <target state="translated">このキーの関心セットを、既存の関心セットと指定された値のビット単位の和(「または」)にアトミックに設定します。</target>
        </trans-unit>
        <trans-unit id="9a29f9a0e54098e40b27f0e068302d6453221c3c" translate="yes" xml:space="preserve">
          <source>Atomically sets this key's interest set to the bitwise union (&quot;or&quot;) of the existing interest set and the given value. This method is guaranteed to be atomic with respect to other concurrent calls to this method or to &lt;a href=&quot;#interestOpsAnd(int)&quot;&gt;&lt;code&gt;interestOpsAnd(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このキーのインタレストセットを、既存のインタレストセットと指定された値のビット単位の和集合（「または」）にアトミックに設定します。このメソッドは、このメソッドまたは&lt;a href=&quot;#interestOpsAnd(int)&quot;&gt; &lt;code&gt;interestOpsAnd(int)&lt;/code&gt; &lt;/a&gt;への他の同時呼び出しに関してアトミックであることが保証されています。</target>
        </trans-unit>
        <trans-unit id="e91f84eea49e7ebc047c4a80b7e3397bb27cb116" translate="yes" xml:space="preserve">
          <source>Atomically sets to the given value and returns the old value.</source>
          <target state="translated">アトミックに指定された値に設定し、古い値を返します。</target>
        </trans-unit>
        <trans-unit id="587c658d0d7c23472ad54a8dac8285e214a46c53" translate="yes" xml:space="preserve">
          <source>Atomically sets to the given value and returns the previous value.</source>
          <target state="translated">与えられた値をアトミックに設定し、前の値を返します。</target>
        </trans-unit>
        <trans-unit id="d265448c84da7694fc667f56738823b7f257caf4" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the current value with the results of applying the given function to the current and given values, returning the previous value.</source>
          <target state="translated">指定された&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;現在の値と指定された値に適用した結果で現在の値を（VarHandle.compareAndSet（java.lang.Object ...）で指定されたメモリ効果で）原子的に更新し、前の値を返します。</target>
        </trans-unit>
        <trans-unit id="442fbe03cbeefcb2ff10d32714a8575fcc0aa2d9" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the current value with the results of applying the given function to the current and given values, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value as its first argument, and the given update as the second argument.</source>
          <target state="translated">指定された&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;現在の値と指定された値に適用した結果で現在の値を（VarHandle.compareAndSet（java.lang.Object ...）で指定されたメモリ効果で）原子的に更新し、前の値を返します。この関数は、スレッド間の競合が原因で更新の試行が失敗したときに再適用される可能性があるため、副作用がない必要があります。関数は、現在の値を最初の引数として適用され、指定された更新を2番目の引数として適用されます。</target>
        </trans-unit>
        <trans-unit id="0e80cb3fe870d0a8373eec724ac37cfa1432932a" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the current value with the results of applying the given function to the current and given values, returning the updated value.</source>
          <target state="translated">指定された&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;現在の値と指定された値に適用した結果で現在の値を原子的に更新し（VarHandle.compareAndSet（java.lang.Object ...）で指定されたメモリ効果を使用）、更新された値を返します。</target>
        </trans-unit>
        <trans-unit id="8abc6592ffc87de0ae0d926e1ca6047f528dc943" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the current value with the results of applying the given function to the current and given values, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value as its first argument, and the given update as the second argument.</source>
          <target state="translated">指定された&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;現在の値と指定された値に適用した結果で現在の値を原子的に更新し（VarHandle.compareAndSet（java.lang.Object ...）で指定されたメモリ効果を使用）、更新された値を返します。この関数は、スレッド間の競合が原因で更新の試行が失敗したときに再適用される可能性があるため、副作用がない必要があります。関数は、現在の値を最初の引数として適用され、指定された更新を2番目の引数として適用されます。</target>
        </trans-unit>
        <trans-unit id="12d7530af9a9ecaf9df1268f8c9dde60c4585445" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the current value with the results of applying the given function, returning the previous value.</source>
          <target state="translated">指定された関数を適用した結果で現在の値を&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果で）原子的に更新し、前の値を返します。</target>
        </trans-unit>
        <trans-unit id="ba3e51dfc00fb3abeb12e7e784e53b5be2a808e3" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the current value with the results of applying the given function, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="translated">指定された関数を適用した結果で現在の値を&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果で）原子的に更新し、前の値を返します。この関数は、スレッド間の競合が原因で更新の試行が失敗したときに再適用される可能性があるため、副作用がない必要があります。</target>
        </trans-unit>
        <trans-unit id="e20c4ac01f776a8fe47fed22b504ef3e4ac7fc51" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the current value with the results of applying the given function, returning the updated value.</source>
          <target state="translated">指定された関数を適用した結果で現在の値を&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果で）原子的に更新し、更新された値を返します。</target>
        </trans-unit>
        <trans-unit id="859c28b56c5c33f71b808b4ab4d088fd8d43cb22" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the current value with the results of applying the given function, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="translated">指定された関数を適用した結果で現在の値を&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果で）原子的に更新し、更新された値を返します。この関数は、スレッド間の競合が原因で更新の試行が失敗したときに再適用される可能性があるため、副作用がない必要があります。</target>
        </trans-unit>
        <trans-unit id="289a99ff8f070e521eafa3778c4cc3d3507f834a" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the element at index &lt;code&gt;i&lt;/code&gt; with the results of applying the given function to the current and given values, returning the previous value.</source>
          <target state="translated">指定された関数を現在の値と指定された値に適用した結果で、インデックス &lt;code&gt;i&lt;/code&gt; の要素を&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果で）原子的に更新し、前の値を返します。</target>
        </trans-unit>
        <trans-unit id="59577f02da3847dcb5d1f984b88ea65a94f6af3e" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the element at index &lt;code&gt;i&lt;/code&gt; with the results of applying the given function to the current and given values, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value of the element at index &lt;code&gt;i&lt;/code&gt; as its first argument, and the given update as the second argument.</source>
          <target state="translated">指定された関数を現在の値と指定された値に適用した結果で、インデックス &lt;code&gt;i&lt;/code&gt; の要素を&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果で）原子的に更新し、前の値を返します。この関数は、スレッド間の競合が原因で更新の試行が失敗したときに再適用される可能性があるため、副作用がない必要があります。この関数は、インデックス &lt;code&gt;i&lt;/code&gt; の要素の現在の値を最初の引数として適用され、指定された更新を2番目の引数として適用されます。</target>
        </trans-unit>
        <trans-unit id="ad685415abd27c22f125582666915ca91d2d8826" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the element at index &lt;code&gt;i&lt;/code&gt; with the results of applying the given function to the current and given values, returning the updated value.</source>
          <target state="translated">指定された関数を現在の値と指定された値に適用した結果で、インデックス &lt;code&gt;i&lt;/code&gt; の要素を&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果で）原子的に更新し、更新された値を返します。</target>
        </trans-unit>
        <trans-unit id="253b5c62028d84ee82890a374eb221ac87a8d6c2" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the element at index &lt;code&gt;i&lt;/code&gt; with the results of applying the given function to the current and given values, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value of the element at index &lt;code&gt;i&lt;/code&gt; as its first argument, and the given update as the second argument.</source>
          <target state="translated">指定された関数を現在の値と指定された値に適用した結果で、インデックス &lt;code&gt;i&lt;/code&gt; の要素を&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果で）原子的に更新し、更新された値を返します。この関数は、スレッド間の競合が原因で更新の試行が失敗したときに再適用される可能性があるため、副作用がない必要があります。この関数は、インデックス &lt;code&gt;i&lt;/code&gt; の要素の現在の値を最初の引数として適用され、指定された更新を2番目の引数として適用されます。</target>
        </trans-unit>
        <trans-unit id="4532c1d759d32932ea5747d2f58a3174fe383536" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the element at index &lt;code&gt;i&lt;/code&gt; with the results of applying the given function, returning the previous value.</source>
          <target state="translated">インデックス &lt;code&gt;i&lt;/code&gt; の要素を&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果で）アトミックに更新し、指定された関数を適用した結果で前の値を返します。</target>
        </trans-unit>
        <trans-unit id="0b3b8192b51c002a2403b9a040036018937ab726" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the element at index &lt;code&gt;i&lt;/code&gt; with the results of applying the given function, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="translated">インデックス &lt;code&gt;i&lt;/code&gt; の要素を&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果で）アトミックに更新し、指定された関数を適用した結果で前の値を返します。この関数は、スレッド間の競合が原因で更新の試行が失敗したときに再適用される可能性があるため、副作用がない必要があります。</target>
        </trans-unit>
        <trans-unit id="e141bc7127b7c3d38ad8977a78a683c46dff12b8" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the element at index &lt;code&gt;i&lt;/code&gt; with the results of applying the given function, returning the updated value.</source>
          <target state="translated">指定された関数を適用した結果でインデックス &lt;code&gt;i&lt;/code&gt; の要素を原子的に更新し（&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果を使用）、更新された値を返します。</target>
        </trans-unit>
        <trans-unit id="e161f4d055083e649908b2e28dbffea872ea63b4" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the element at index &lt;code&gt;i&lt;/code&gt; with the results of applying the given function, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="translated">指定された関数を適用した結果でインデックス &lt;code&gt;i&lt;/code&gt; の要素を原子的に更新し（&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリ効果を使用）、更新された値を返します。この関数は、スレッド間の競合が原因で更新の試行が失敗したときに再適用される可能性があるため、副作用がない必要があります。</target>
        </trans-unit>
        <trans-unit id="b846a1b3b196d4f7f197194405e3694520da6c19" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the field of the given object managed by this updater with the results of applying the given function to the current and given values, returning the previous value.</source>
          <target state="translated">このアップデーターによって管理される指定されたオブジェクトのフィールドを&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリー効果で）原子的に更新し、指定された関数を現在の値と指定された値に適用した結果を返します。以前の値。</target>
        </trans-unit>
        <trans-unit id="871003896dd9767efb4270594b2d98e2b721a773" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the field of the given object managed by this updater with the results of applying the given function to the current and given values, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value as its first argument, and the given update as the second argument.</source>
          <target state="translated">このアップデーターによって管理される指定されたオブジェクトのフィールドを&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリー効果で）原子的に更新し、指定された関数を現在の値と指定された値に適用した結果を返します。以前の値。この関数は、スレッド間の競合が原因で更新の試行が失敗したときに再適用される可能性があるため、副作用がない必要があります。関数は、現在の値を最初の引数として適用され、指定された更新を2番目の引数として適用されます。</target>
        </trans-unit>
        <trans-unit id="c32629d48c0fb0f6c3f407b7b3455d482f8bc88e" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the field of the given object managed by this updater with the results of applying the given function to the current and given values, returning the updated value.</source>
          <target state="translated">このアップデーターによって管理される指定されたオブジェクトのフィールドを&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリー効果で）原子的に更新し、指定された関数を現在の値と指定された値に適用した結果を返します。更新された値。</target>
        </trans-unit>
        <trans-unit id="50c8bc55b15d5b244edd43f792f62832523093ea" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the field of the given object managed by this updater with the results of applying the given function to the current and given values, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value as its first argument, and the given update as the second argument.</source>
          <target state="translated">このアップデーターによって管理される指定されたオブジェクトのフィールドを&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;指定されたメモリー効果で）原子的に更新し、指定された関数を現在の値と指定された値に適用した結果を返します。更新された値。この関数は、スレッド間の競合が原因で更新の試行が失敗したときに再適用される可能性があるため、副作用がない必要があります。関数は、現在の値を最初の引数として適用され、指定された更新を2番目の引数として適用されます。</target>
        </trans-unit>
        <trans-unit id="d1cde27bba9ae697264b8d81146685c00c5bfcc9" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the field of the given object managed by this updater with the results of applying the given function, returning the previous value.</source>
          <target state="translated">このアップデーターによって管理される指定されたオブジェクトのフィールドを、指定された関数を適用した結果で&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;更新し（VarHandle.compareAndSet（java.lang.Object ...）で指定されたメモリー効果を使用）、前の値を返します。</target>
        </trans-unit>
        <trans-unit id="b7e84271c52b12cb81f741441733828e459f4909" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the field of the given object managed by this updater with the results of applying the given function, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="translated">このアップデーターによって管理される指定されたオブジェクトのフィールドを、指定された関数を適用した結果で&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;更新し（VarHandle.compareAndSet（java.lang.Object ...）で指定されたメモリー効果を使用）、前の値を返します。この関数は、スレッド間の競合が原因で更新の試行が失敗したときに再適用される可能性があるため、副作用がない必要があります。</target>
        </trans-unit>
        <trans-unit id="2846131bbda4d4076a4f3bad3b70bca9f35c8097" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the field of the given object managed by this updater with the results of applying the given function, returning the updated value.</source>
          <target state="translated">このアップデーターによって管理される指定されたオブジェクトのフィールドを、指定された関数を適用した結果で&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;更新し（VarHandle.compareAndSet（java.lang.Object ...）で指定されたメモリー効果を使用）、更新された値を返します。</target>
        </trans-unit>
        <trans-unit id="6eff855aa4d1a39f06729fc62f2c124d864ac536" translate="yes" xml:space="preserve">
          <source>Atomically updates (with memory effects as specified by &lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt;&lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt;&lt;/a&gt;) the field of the given object managed by this updater with the results of applying the given function, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="translated">このアップデーターによって管理される指定されたオブジェクトのフィールドを、指定された関数を適用した結果で&lt;a href=&quot;../../../lang/invoke/varhandle#compareAndSet(java.lang.Object...)&quot;&gt; &lt;code&gt;VarHandle.compareAndSet(java.lang.Object...)&lt;/code&gt; &lt;/a&gt;更新し（VarHandle.compareAndSet（java.lang.Object ...）で指定されたメモリー効果を使用）、更新された値を返します。この関数は、スレッド間の競合が原因で更新の試行が失敗したときに再適用される可能性があるため、副作用がない必要があります。</target>
        </trans-unit>
        <trans-unit id="cb7338990b09f91a6d13fa1a6280c5ec4392707e" translate="yes" xml:space="preserve">
          <source>Atomically updates the current value with the results of applying the given function to the current and given values, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value as its first argument, and the given update as the second argument.</source>
          <target state="translated">与えられた関数を現在の値と与えられた値に適用した結果を用いて現在の値をアトム単位で更新し、前の値を返します。この関数は、スレッド間の競合により更新の試みが失敗した場合に再適用される可能性があるため、副作用のないものでなければなりません。この関数は、現在の値を第一引数として、与えられた更新を第二引数として適用されます。</target>
        </trans-unit>
        <trans-unit id="c97cfecf129b8ec8b963449e8369e9124ca98510" translate="yes" xml:space="preserve">
          <source>Atomically updates the current value with the results of applying the given function to the current and given values, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value as its first argument, and the given update as the second argument.</source>
          <target state="translated">与えられた関数を現在の値と与えられた値に適用した結果を用いて現在の値をアトミックに更新し、更新された値を返します。この関数は、スレッド間の競合により更新の試みが失敗した場合に再適用される可能性があるため、副作用のないものでなければなりません。この関数は、現在の値を第一引数として、与えられた更新値を第二引数として適用されます。</target>
        </trans-unit>
        <trans-unit id="1b1d1f29a81982a3b76137e08310f4ce87b749c1" translate="yes" xml:space="preserve">
          <source>Atomically updates the current value with the results of applying the given function, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="translated">与えられた関数を適用した結果で現在の値をアトム単位で更新し、前の値を返します。この関数は、スレッド間の競合により更新の試みが失敗した場合に再適用される可能性があるため、副作用のないものでなければなりません。</target>
        </trans-unit>
        <trans-unit id="c6bb2f62c86efc4ccb390c26afce9c2fb105b16e" translate="yes" xml:space="preserve">
          <source>Atomically updates the current value with the results of applying the given function, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="translated">与えられた関数を適用した結果で現在の値をアトミックに更新し、更新された値を返します。この関数は、スレッド間の競合により更新の試みが失敗した場合に再適用される可能性があるため、副作用のないものでなければなりません。</target>
        </trans-unit>
        <trans-unit id="8621e36612593a2c90372132b916937787e2c96e" translate="yes" xml:space="preserve">
          <source>Atomically updates the element at index &lt;code&gt;i&lt;/code&gt; with the results of applying the given function to the current and given values, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value at index &lt;code&gt;i&lt;/code&gt; as its first argument, and the given update as the second argument.</source>
          <target state="translated">指定された関数を現在の値と指定された値に適用した結果でインデックス &lt;code&gt;i&lt;/code&gt; の要素を原子的に更新し、以前の値を返します。この関数は、スレッド間の競合が原因で更新の試行が失敗した場合に再適用される可能性があるため、副作用がないはずです。関数は、インデックス &lt;code&gt;i&lt;/code&gt; の現在の値を最初の引数として、指定された更新を2番目の引数として適用されます。</target>
        </trans-unit>
        <trans-unit id="aff5f799c3976b42cfe03fdaa26f53419c7ef729" translate="yes" xml:space="preserve">
          <source>Atomically updates the element at index &lt;code&gt;i&lt;/code&gt; with the results of applying the given function to the current and given values, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value at index &lt;code&gt;i&lt;/code&gt; as its first argument, and the given update as the second argument.</source>
          <target state="translated">指定された関数を現在の値と指定された値に適用した結果でインデックス &lt;code&gt;i&lt;/code&gt; の要素を原子的に更新し、更新された値を返します。この関数は、スレッド間の競合が原因で更新の試行が失敗した場合に再適用される可能性があるため、副作用がないはずです。関数は、インデックス &lt;code&gt;i&lt;/code&gt; の現在の値を最初の引数として、指定された更新を2番目の引数として適用されます。</target>
        </trans-unit>
        <trans-unit id="003d7e9d9a51da9fb37dd2e112a98305d46fc8a1" translate="yes" xml:space="preserve">
          <source>Atomically updates the element at index &lt;code&gt;i&lt;/code&gt; with the results of applying the given function, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="translated">指定された関数を適用した結果でインデックス &lt;code&gt;i&lt;/code&gt; の要素を原子的に更新し、以前の値を返します。この関数は、スレッド間の競合が原因で更新の試行が失敗した場合に再適用される可能性があるため、副作用がないはずです。</target>
        </trans-unit>
        <trans-unit id="57332221ee4264ab68c52a43c497fa2ffff5d1ec" translate="yes" xml:space="preserve">
          <source>Atomically updates the element at index &lt;code&gt;i&lt;/code&gt; with the results of applying the given function, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="translated">指定された関数を適用した結果でインデックス &lt;code&gt;i&lt;/code&gt; の要素を原子的に更新し、更新された値を返します。この関数は、スレッド間の競合が原因で更新の試行が失敗した場合に再適用される可能性があるため、副作用がないはずです。</target>
        </trans-unit>
        <trans-unit id="92bb27997e9844b71d881d3c625502ad6492d2ef" translate="yes" xml:space="preserve">
          <source>Atomically updates the field of the given object managed by this updater with the results of applying the given function to the current and given values, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value as its first argument, and the given update as the second argument.</source>
          <target state="translated">このアップデータによって管理されている指定されたオブジェクトのフィールドを、現在の値と指定された値に指定された関数を適用した結果を使用してアトミックに更新し、前の値を返します。この関数は、スレッド間の競合により更新の試みが失敗した場合に再適用される可能性があるため、副作用がないようにする必要があります。この関数は、現在の値を第一引数として、与えられた更新を第二引数として適用されます。</target>
        </trans-unit>
        <trans-unit id="ac7395352f3aac14cf69a302abb5064e1ea24002" translate="yes" xml:space="preserve">
          <source>Atomically updates the field of the given object managed by this updater with the results of applying the given function to the current and given values, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value as its first argument, and the given update as the second argument.</source>
          <target state="translated">このアップデータによって管理されている指定されたオブジェクトのフィールドを、現在の値と指定された値に指定された関数を適用した結果を使用してアトミックに更新し、更新された値を返します。この関数は、スレッド間の競合により更新の試みが失敗した場合に再適用される可能性があるため、副作用がないようにする必要があります。この関数は、現在の値を第一引数として、与えられた更新値を第二引数として適用されます。</target>
        </trans-unit>
        <trans-unit id="32546a59c4effee8cd8b850e4f32cc1b838aa127" translate="yes" xml:space="preserve">
          <source>Atomically updates the field of the given object managed by this updater with the results of applying the given function, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="translated">このアップデータによって管理されている指定されたオブジェクトのフィールドを、指定された関数を適用した結果でアトム単位で更新し、以前の値を返します。この関数は、スレッド間の競合により更新に失敗した場合に再適用される可能性があるため、副作用がないようにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="b676f77dda23fa485916946d4b418e90c90f288b" translate="yes" xml:space="preserve">
          <source>Atomically updates the field of the given object managed by this updater with the results of applying the given function, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.</source>
          <target state="translated">このアップデータによって管理されている指定されたオブジェクトのフィールドを、指定された関数を適用した結果でアトム単位で更新し、更新された値を返します。この関数は、スレッド間の競合により更新に失敗した場合に再適用される可能性があるため、副作用がないようにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="b3f2133cbe8392224ca09ce46b2837102d947432" translate="yes" xml:space="preserve">
          <source>Attach provider class for attaching to a Java virtual machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5798d18bd06d560a34b7e042feeadb9e83aaf7e3" translate="yes" xml:space="preserve">
          <source>AttachNotSupportedException</source>
          <target state="translated">AttachNotSupportedException</target>
        </trans-unit>
        <trans-unit id="2c8dcc51a674058748047d7d825dda46440292e5" translate="yes" xml:space="preserve">
          <source>AttachOperationFailedException</source>
          <target state="translated">AttachOperationFailedException</target>
        </trans-unit>
        <trans-unit id="daffa3266ba461adb0321a65e15e8468a33bb10b" translate="yes" xml:space="preserve">
          <source>AttachPermission</source>
          <target state="translated">AttachPermission</target>
        </trans-unit>
        <trans-unit id="5b77b73acb0cd4d1b11aea93fdc262a6150f1094" translate="yes" xml:space="preserve">
          <source>AttachProvider</source>
          <target state="translated">AttachProvider</target>
        </trans-unit>
        <trans-unit id="c951234cbb7bde63587f2057b06125f71246d811" translate="yes" xml:space="preserve">
          <source>AttachProvider implementations are loaded and instantiated (using the zero-arg constructor) at the first invocation of this method. The list returned by the first invocation of this method is the list of providers. Subsequent invocations of this method return a list of the same providers. The list is unmodifiable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e6dca0ecdd153ba512f47e31a682fb4a2f1082b" translate="yes" xml:space="preserve">
          <source>AttachProvider implementations are loaded and instantiated at the first invocation of the &lt;a href=&quot;#providers()&quot;&gt;&lt;code&gt;providers&lt;/code&gt;&lt;/a&gt; method. This method attempts to load all provider implementations that are installed on the platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724eed38821ce0d259c02240dd92bc745c1e09d0" translate="yes" xml:space="preserve">
          <source>Attaches listeners to the JTable.</source>
          <target state="translated">リスナーを JTable にアタッチします。</target>
        </trans-unit>
        <trans-unit id="3cd31fb9ce972b204c2ca7916b4098530bb5b5d2" translate="yes" xml:space="preserve">
          <source>Attaches listeners to the JTableHeader.</source>
          <target state="translated">JTableHeader にリスナーをアタッチします。</target>
        </trans-unit>
        <trans-unit id="bc9246b60f009dc2487034c9774252ad9895383e" translate="yes" xml:space="preserve">
          <source>Attaches the contents of the provided PopupMenu to the application icon in the task area.</source>
          <target state="translated">提供されているPopupMenuの内容をタスクエリアのアプリケーションアイコンに貼り付けます。</target>
        </trans-unit>
        <trans-unit id="9583fb4b4ca3f5163fc49011d32f3cccd8818f52" translate="yes" xml:space="preserve">
          <source>Attaches the given object to this key.</source>
          <target state="translated">与えられたオブジェクトをこのキーにアタッチします。</target>
        </trans-unit>
        <trans-unit id="d089061c3973682bcf4e6c8695e19e1adf9eb6f8" translate="yes" xml:space="preserve">
          <source>Attaches to a Java virtual machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c8e13d5d4354a7af35f03e5b9669300f3dd0c28" translate="yes" xml:space="preserve">
          <source>Attaches to a running application and returns a mirror of its VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aed3ebf64e03c276fae75966aaebd82addfeb38" translate="yes" xml:space="preserve">
          <source>Attaches to the editor and model. If there is no model, a default one is created.</source>
          <target state="translated">エディタとモデルにアタッチします。モデルがない場合、デフォルトのモデルが作成されます。</target>
        </trans-unit>
        <trans-unit id="5079af5f7d1f47514e23f46b45232323503e9b43" translate="yes" xml:space="preserve">
          <source>Attaches to the specified address and returns a connection representing the bi-directional communication channel to the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="badeb46b436cd25ffb6ba65ecf47af96fee9cd1e" translate="yes" xml:space="preserve">
          <source>Attaches to the specified address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51d2b0334b5b7e58f76d36c05c85f2f6139ca97" translate="yes" xml:space="preserve">
          <source>Attaching to the target VM involves two steps: First, a connection is established to specified address. This is followed by a handshake to ensure that the connection is to a target VM. The handshake involves the exchange of a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1227ee714fa2b8b96952acdf4ee1a5dfd6b7e9" translate="yes" xml:space="preserve">
          <source>AttachingConnector</source>
          <target state="translated">AttachingConnector</target>
        </trans-unit>
        <trans-unit id="4407282a65840b313dfd168eded7f85cd5c8aee3" translate="yes" xml:space="preserve">
          <source>Attempt to create an XML reader from a class name.</source>
          <target state="translated">クラス名からXMLリーダーを作成しようとします。</target>
        </trans-unit>
        <trans-unit id="a0c91c5f43f8c356905f473fc84d8be0219faf3e" translate="yes" xml:space="preserve">
          <source>Attempt to obtain a SAX InputSource object from a Source object.</source>
          <target state="translated">SourceオブジェクトからSAX InputSourceオブジェクトを取得しようとする。</target>
        </trans-unit>
        <trans-unit id="a749a02cb52be6e29c6db9e28977aa341e6e14d4" translate="yes" xml:space="preserve">
          <source>Attempt to stop currently running evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4c3fdccf0400aa9826ddb942ae04fc534f6369" translate="yes" xml:space="preserve">
          <source>Attempt to stop currently running evaluation. When called while the &lt;a href=&quot;#eval(java.lang.String)&quot;&gt;&lt;code&gt;eval(java.lang.String)&lt;/code&gt;&lt;/a&gt; method is running and the user's code being executed, an attempt will be made to stop user's code. Note that typically this method needs to be called from a different thread than the one running the &lt;code&gt;eval&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9454d836e7a581cb136146bbdd37af1d311369e2" translate="yes" xml:space="preserve">
          <source>Attempted updates to &quot;Constrained&quot; properties will cause a &quot;VetoableChange&quot; event to get fired when the property is changed.</source>
          <target state="translated">Constrained &quot;プロパティの更新を試みると、プロパティが変更されたときに &quot;VetoableChange &quot;イベントが発生します。</target>
        </trans-unit>
        <trans-unit id="0b503b5a6f87e0c2c14cb7df80870a26c05631c3" translate="yes" xml:space="preserve">
          <source>Attempting to create a layer with all modules defined to the same class loader can fail for the following reasons:</source>
          <target state="translated">すべてのモジュールを同じクラスローダに定義してレイヤを作成しようとすると、以下の理由で失敗することがあります。</target>
        </trans-unit>
        <trans-unit id="746c02f688b0fcae9c96a7c2185a99e4398bbc3d" translate="yes" xml:space="preserve">
          <source>Attempting to invoke any methods except &lt;a href=&quot;#ioException()&quot;&gt;&lt;code&gt;ioException()&lt;/code&gt;&lt;/a&gt; in this formatter after it has been closed will result in a &lt;a href=&quot;formatterclosedexception&quot;&gt;&lt;code&gt;FormatterClosedException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">閉じた後にこのフォーマッタで&lt;a href=&quot;#ioException()&quot;&gt; &lt;code&gt;ioException()&lt;/code&gt; &lt;/a&gt;以外のメソッドを呼び出そうとすると、&lt;a href=&quot;formatterclosedexception&quot;&gt; &lt;code&gt;FormatterClosedException&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="cc68c49ca21550562ae891f8f64d2de3cfe64c9f" translate="yes" xml:space="preserve">
          <source>Attempting to invoke any methods except &lt;a href=&quot;formatter#ioException--&quot;&gt;&lt;code&gt;ioException()&lt;/code&gt;&lt;/a&gt; in this formatter after it has been closed will result in a &lt;a href=&quot;formatterclosedexception&quot;&gt;&lt;code&gt;FormatterClosedException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このフォーマッタが閉じられた後で、&lt;a href=&quot;formatter#ioException--&quot;&gt; &lt;code&gt;ioException()&lt;/code&gt; &lt;/a&gt;以外のメソッドを呼び出そうとすると、&lt;a href=&quot;formatterclosedexception&quot;&gt; &lt;code&gt;FormatterClosedException&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="865ca0df2fcad55810c5e4f69e9fcf96951fae82" translate="yes" xml:space="preserve">
          <source>Attempting to perform search operations after a scanner has been closed will result in an &lt;a href=&quot;../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">スキャナーが閉じられた後に検索操作を実行しようとすると、&lt;a href=&quot;../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="20f26ee13d64a90cd27d362b6fec350ce5bb96eb" translate="yes" xml:space="preserve">
          <source>Attempts to acquire a lock on the given region of this channel's file.</source>
          <target state="translated">このチャンネルのファイルの指定された領域のロックを取得しようとします。</target>
        </trans-unit>
        <trans-unit id="4a4f500600dbc802ced889713dd4c6f66404f0d3" translate="yes" xml:space="preserve">
          <source>Attempts to acquire an exclusive lock on this channel's file.</source>
          <target state="translated">このチャンネルのファイルの排他的なロックを取得しようとします。</target>
        </trans-unit>
        <trans-unit id="443daba7becc2c0350b3bb68e7f3adc7fed11290" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in exclusive mode, aborting if interrupted, and failing if the given timeout elapses.</source>
          <target state="translated">排他的モードでの取得を試み、中断された場合は中止し、指定されたタイムアウトが経過した場合は失敗します。</target>
        </trans-unit>
        <trans-unit id="4868b5f3f650bfe8e6325121d69786c6dbe14c75" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in exclusive mode, aborting if interrupted, and failing if the given timeout elapses. Implemented by first checking interrupt status, then invoking at least once &lt;a href=&quot;#tryAcquire(int)&quot;&gt;&lt;code&gt;tryAcquire(int)&lt;/code&gt;&lt;/a&gt;, returning on success. Otherwise, the thread is queued, possibly repeatedly blocking and unblocking, invoking &lt;a href=&quot;#tryAcquire(int)&quot;&gt;&lt;code&gt;tryAcquire(int)&lt;/code&gt;&lt;/a&gt; until success or the thread is interrupted or the timeout elapses. This method can be used to implement method &lt;a href=&quot;lock#tryLock(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;Lock.tryLock(long, TimeUnit)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">排他モードでの取得を試み、中断された場合は中止し、指定されたタイムアウトが経過すると失敗します。最初に割り込みステータスをチェックし、次に少なくとも1回&lt;a href=&quot;#tryAcquire(int)&quot;&gt; &lt;code&gt;tryAcquire(int)&lt;/code&gt; &lt;/a&gt;を呼び出して、成功に戻ることによって実装されます。それ以外の場合、スレッドはキューに入れられ、ブロックとブロック解除が繰り返され、成功するか、スレッドが中断されるか、タイムアウトが経過するまで&lt;a href=&quot;#tryAcquire(int)&quot;&gt; &lt;code&gt;tryAcquire(int)&lt;/code&gt; が&lt;/a&gt;呼び出されます。このメソッドは&lt;a href=&quot;lock#tryLock(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;Lock.tryLock(long, TimeUnit)&lt;/code&gt; &lt;/a&gt;メソッドLock.tryLock（long、TimeUnit）を実装するために使用できます。</target>
        </trans-unit>
        <trans-unit id="6112697660a2f24fe67ea259ab67257e365d68d1" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in exclusive mode, aborting if interrupted, and failing if the given timeout elapses. Implemented by first checking interrupt status, then invoking at least once &lt;a href=&quot;#tryAcquire(long)&quot;&gt;&lt;code&gt;tryAcquire(long)&lt;/code&gt;&lt;/a&gt;, returning on success. Otherwise, the thread is queued, possibly repeatedly blocking and unblocking, invoking &lt;a href=&quot;#tryAcquire(long)&quot;&gt;&lt;code&gt;tryAcquire(long)&lt;/code&gt;&lt;/a&gt; until success or the thread is interrupted or the timeout elapses. This method can be used to implement method &lt;a href=&quot;lock#tryLock(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;Lock.tryLock(long, TimeUnit)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">排他モードでの取得を試み、中断された場合は中止し、指定されたタイムアウトが経過すると失敗します。最初に割り込みステータスをチェックし、次に少なくとも1回&lt;a href=&quot;#tryAcquire(long)&quot;&gt; &lt;code&gt;tryAcquire(long)&lt;/code&gt; &lt;/a&gt;を呼び出して、成功に戻ることによって実装されます。それ以外の場合、スレッドはキューに入れられ、ブロックとブロック解除が繰り返され、成功するか、スレッドが中断されるか、タイムアウトが経過するまで&lt;a href=&quot;#tryAcquire(long)&quot;&gt; &lt;code&gt;tryAcquire(long)&lt;/code&gt; が&lt;/a&gt;呼び出されます。このメソッドは&lt;a href=&quot;lock#tryLock(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;Lock.tryLock(long, TimeUnit)&lt;/code&gt; &lt;/a&gt;メソッドLock.tryLock（long、TimeUnit）を実装するために使用できます。</target>
        </trans-unit>
        <trans-unit id="845a596c5e3cd6896649c41030509cb6cc526976" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in exclusive mode, aborting if interrupted, and failing if the given timeout elapses. Implemented by first checking interrupt status, then invoking at least once &lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquire-long-&quot;&gt;&lt;code&gt;tryAcquire(long)&lt;/code&gt;&lt;/a&gt;, returning on success. Otherwise, the thread is queued, possibly repeatedly blocking and unblocking, invoking &lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquire-long-&quot;&gt;&lt;code&gt;tryAcquire(long)&lt;/code&gt;&lt;/a&gt; until success or the thread is interrupted or the timeout elapses. This method can be used to implement method &lt;a href=&quot;lock#tryLock-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;Lock.tryLock(long, TimeUnit)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">排他モードで取得を試み、中断された場合は中止し、指定されたタイムアウトが経過した場合は失敗します。最初に割り込みステータスをチェックしてから、少なくとも1回は&lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquire-long-&quot;&gt; &lt;code&gt;tryAcquire(long)&lt;/code&gt; &lt;/a&gt;を呼び出して実装し、成功すると戻ります。それ以外の場合、スレッドはキューに入れられ、ブロックまたはブロック解除が繰り返される可能性があります。成功するか、スレッドが中断されるか、タイムアウトになるまで、&lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquire-long-&quot;&gt; &lt;code&gt;tryAcquire(long)&lt;/code&gt; &lt;/a&gt;を呼び出します。このメソッドを使用して&lt;a href=&quot;lock#tryLock-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;Lock.tryLock(long, TimeUnit)&lt;/code&gt; &lt;/a&gt;メソッドを実装できます。</target>
        </trans-unit>
        <trans-unit id="1d059fa2c960cdca270005ce5010c7c3e9c69d1b" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in exclusive mode, aborting if interrupted, and failing if the given timeout elapses. Implemented by first checking interrupt status, then invoking at least once &lt;a href=&quot;abstractqueuedsynchronizer#tryAcquire-int-&quot;&gt;&lt;code&gt;tryAcquire(int)&lt;/code&gt;&lt;/a&gt;, returning on success. Otherwise, the thread is queued, possibly repeatedly blocking and unblocking, invoking &lt;a href=&quot;abstractqueuedsynchronizer#tryAcquire-int-&quot;&gt;&lt;code&gt;tryAcquire(int)&lt;/code&gt;&lt;/a&gt; until success or the thread is interrupted or the timeout elapses. This method can be used to implement method &lt;a href=&quot;lock#tryLock-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;Lock.tryLock(long, TimeUnit)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">排他モードで取得を試み、中断された場合は中止し、指定されたタイムアウトが経過した場合は失敗します。最初に割り込みステータスをチェックしてから、少なくとも1回は&lt;a href=&quot;abstractqueuedsynchronizer#tryAcquire-int-&quot;&gt; &lt;code&gt;tryAcquire(int)&lt;/code&gt; &lt;/a&gt;を呼び出して実装し、成功すると戻ります。それ以外の場合、スレッドはキューに入れられ、ブロックまたはブロック解除が繰り返される可能性があります。成功するか、スレッドが中断されるか、タイムアウトになるまで、&lt;a href=&quot;abstractqueuedsynchronizer#tryAcquire-int-&quot;&gt; &lt;code&gt;tryAcquire(int)&lt;/code&gt; &lt;/a&gt;を呼び出します。このメソッドを使用して&lt;a href=&quot;lock#tryLock-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;Lock.tryLock(long, TimeUnit)&lt;/code&gt; &lt;/a&gt;メソッドを実装できます。</target>
        </trans-unit>
        <trans-unit id="1a950cebe7e6b482497d40fe52bee4752b4e8d32" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in exclusive mode.</source>
          <target state="translated">専用モードで取得を試みる。</target>
        </trans-unit>
        <trans-unit id="a9642465c4559f4bd3b441fa1065b5584e9ec6c5" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in exclusive mode. This method should query if the state of the object permits it to be acquired in the exclusive mode, and if so to acquire it.</source>
          <target state="translated">排他的モードでの取得を試みます。このメソッドは、オブジェクトの状態が排他的モードでの取得を許可しているかどうかを問い合わせ、許可していれば取得します。</target>
        </trans-unit>
        <trans-unit id="6415c4d8f83065146a03d108cbdabb24021269b9" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in shared mode, aborting if interrupted, and failing if the given timeout elapses.</source>
          <target state="translated">共有モードでの取得を試み、中断された場合は中止し、指定されたタイムアウトが経過した場合は失敗します。</target>
        </trans-unit>
        <trans-unit id="025c5b598018fc6cb07f3ba667f8d6d4947f1851" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in shared mode, aborting if interrupted, and failing if the given timeout elapses. Implemented by first checking interrupt status, then invoking at least once &lt;a href=&quot;#tryAcquireShared(int)&quot;&gt;&lt;code&gt;tryAcquireShared(int)&lt;/code&gt;&lt;/a&gt;, returning on success. Otherwise, the thread is queued, possibly repeatedly blocking and unblocking, invoking &lt;a href=&quot;#tryAcquireShared(int)&quot;&gt;&lt;code&gt;tryAcquireShared(int)&lt;/code&gt;&lt;/a&gt; until success or the thread is interrupted or the timeout elapses.</source>
          <target state="translated">共有モードでの取得を試み、中断された場合は中止し、指定されたタイムアウトが経過すると失敗します。最初に割り込みステータスをチェックし、次に少なくとも1回&lt;a href=&quot;#tryAcquireShared(int)&quot;&gt; &lt;code&gt;tryAcquireShared(int)&lt;/code&gt; &lt;/a&gt;を呼び出して、成功に戻ることによって実装されます。それ以外の場合、スレッドはキューに入れられ、ブロックとブロック解除が繰り返され、成功するか、スレッドが中断されるか、タイムアウトが経過するまで&lt;a href=&quot;#tryAcquireShared(int)&quot;&gt; &lt;code&gt;tryAcquireShared(int)&lt;/code&gt; が&lt;/a&gt;呼び出されます。</target>
        </trans-unit>
        <trans-unit id="aa3a761c7c93540b9b4627b3543fee46949900c1" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in shared mode, aborting if interrupted, and failing if the given timeout elapses. Implemented by first checking interrupt status, then invoking at least once &lt;a href=&quot;#tryAcquireShared(long)&quot;&gt;&lt;code&gt;tryAcquireShared(long)&lt;/code&gt;&lt;/a&gt;, returning on success. Otherwise, the thread is queued, possibly repeatedly blocking and unblocking, invoking &lt;a href=&quot;#tryAcquireShared(long)&quot;&gt;&lt;code&gt;tryAcquireShared(long)&lt;/code&gt;&lt;/a&gt; until success or the thread is interrupted or the timeout elapses.</source>
          <target state="translated">共有モードでの取得を試み、中断された場合は中止し、指定されたタイムアウトが経過すると失敗します。最初に割り込みステータスをチェックし、次に少なくとも1回&lt;a href=&quot;#tryAcquireShared(long)&quot;&gt; &lt;code&gt;tryAcquireShared(long)&lt;/code&gt; &lt;/a&gt;を呼び出して、成功に戻ることによって実装されます。それ以外の場合、スレッドはキューに入れられ、ブロックとブロック解除が繰り返され、成功するか、スレッドが中断されるか、タイムアウトが経過するまで&lt;a href=&quot;#tryAcquireShared(long)&quot;&gt; &lt;code&gt;tryAcquireShared(long)&lt;/code&gt; が&lt;/a&gt;呼び出されます。</target>
        </trans-unit>
        <trans-unit id="67286ad727db07e417f9186dbd3dd5aa8446f07a" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in shared mode, aborting if interrupted, and failing if the given timeout elapses. Implemented by first checking interrupt status, then invoking at least once &lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquireShared-long-&quot;&gt;&lt;code&gt;tryAcquireShared(long)&lt;/code&gt;&lt;/a&gt;, returning on success. Otherwise, the thread is queued, possibly repeatedly blocking and unblocking, invoking &lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquireShared-long-&quot;&gt;&lt;code&gt;tryAcquireShared(long)&lt;/code&gt;&lt;/a&gt; until success or the thread is interrupted or the timeout elapses.</source>
          <target state="translated">共有モードで取得しようとし、中断された場合は中止し、指定されたタイムアウトが経過した場合は失敗します。最初に割り込みステータスをチェックしてから、少なくとも1回は&lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquireShared-long-&quot;&gt; &lt;code&gt;tryAcquireShared(long)&lt;/code&gt; &lt;/a&gt;を呼び出して実装し、成功すると戻ります。それ以外の場合、スレッドはキューに入れられ、ブロックまたはブロック解除が繰り返される可能性があります。成功するか、スレッドが中断されるか、タイムアウトになるまで、&lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquireShared-long-&quot;&gt; &lt;code&gt;tryAcquireShared(long)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="fd151416a26cf52c2cf84528a9250d2fc2433f9a" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in shared mode, aborting if interrupted, and failing if the given timeout elapses. Implemented by first checking interrupt status, then invoking at least once &lt;a href=&quot;abstractqueuedsynchronizer#tryAcquireShared-int-&quot;&gt;&lt;code&gt;tryAcquireShared(int)&lt;/code&gt;&lt;/a&gt;, returning on success. Otherwise, the thread is queued, possibly repeatedly blocking and unblocking, invoking &lt;a href=&quot;abstractqueuedsynchronizer#tryAcquireShared-int-&quot;&gt;&lt;code&gt;tryAcquireShared(int)&lt;/code&gt;&lt;/a&gt; until success or the thread is interrupted or the timeout elapses.</source>
          <target state="translated">共有モードで取得しようとし、中断された場合は中止し、指定されたタイムアウトが経過した場合は失敗します。最初に割り込みステータスをチェックしてから、少なくとも1回は&lt;a href=&quot;abstractqueuedsynchronizer#tryAcquireShared-int-&quot;&gt; &lt;code&gt;tryAcquireShared(int)&lt;/code&gt; &lt;/a&gt;を呼び出して実装し、成功すると戻ります。それ以外の場合、スレッドはキューに入れられ、ブロックまたはブロック解除が繰り返される可能性があります。成功するか、スレッドが中断されるか、タイムアウトになるまで、&lt;a href=&quot;abstractqueuedsynchronizer#tryAcquireShared-int-&quot;&gt; &lt;code&gt;tryAcquireShared(int)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="f6aa773397c0614aac317e39d64cd40ce46d009a" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in shared mode.</source>
          <target state="translated">共有モードでの取得を試みる。</target>
        </trans-unit>
        <trans-unit id="d84219cd339297ad2b7f16a47468dc8f1460a682" translate="yes" xml:space="preserve">
          <source>Attempts to acquire in shared mode. This method should query if the state of the object permits it to be acquired in the shared mode, and if so to acquire it.</source>
          <target state="translated">共有モードでの取得を試みます。このメソッドは、オブジェクトの状態が共有モードでの取得を許可しているかどうかを問い合わせ、許可していれば取得します。</target>
        </trans-unit>
        <trans-unit id="8756d440534ca5e1304694ec043e373fa3c03297" translate="yes" xml:space="preserve">
          <source>Attempts to adopt a node from another document to this document.</source>
          <target state="translated">他の文書のノードをこの文書に採用しようとします。</target>
        </trans-unit>
        <trans-unit id="18647e7492aa86bbcb2300ec9faa1e3c268f2ae9" translate="yes" xml:space="preserve">
          <source>Attempts to adopt a node from another document to this document. If supported, it changes the &lt;code&gt;ownerDocument&lt;/code&gt; of the source node, its children, as well as the attached attribute nodes if there are any. If the source node has a parent it is first removed from the child list of its parent. This effectively allows moving a subtree from one document to another (unlike &lt;code&gt;importNode()&lt;/code&gt; which create a copy of the source node instead of moving it). When it fails, applications should use &lt;code&gt;Document.importNode()&lt;/code&gt; instead. Note that if the adopted node is already part of this document (i.e. the source and target document are the same), this method still has the effect of removing the source node from the child list of its parent, if any. The following list describes the specifics for each type of node.</source>
          <target state="translated">別のドキュメントからこのドキュメントにノードを採用しようとします。サポートされている場合は、ソースノードの &lt;code&gt;ownerDocument&lt;/code&gt; 、その子、およびアタッチされている属性ノード（存在する場合）を変更します。ソースノードに親がある場合、最初にその親の子リストから削除されます。これにより、サブツリーをあるドキュメントから別のドキュメントに効果的に移動できます（ソースノードを移動する代わりにコピーを作成する &lt;code&gt;importNode()&lt;/code&gt; とは異なります）。失敗した場合、アプリケーションは &lt;code&gt;Document.importNode()&lt;/code&gt; を使用する必要があります代わりに。採用されたノードがすでにこのドキュメントの一部である場合（つまり、ソースドキュメントとターゲットドキュメントが同じである場合）、このメソッドには、親の子リストからソースノードがあれば削除する効果があることに注意してください。次のリストは、各タイプのノードの詳細を説明しています。</target>
        </trans-unit>
        <trans-unit id="b9aeceffd046652b694ee82bbcab5f64aed3d0d5" translate="yes" xml:space="preserve">
          <source>Attempts to build a certification path using the specified algorithm parameter set.</source>
          <target state="translated">指定されたアルゴリズム・パラメータ・セットを使用して、認証パスの構築を試みます。</target>
        </trans-unit>
        <trans-unit id="102d4f0ed50e54b84dcd4d0d92656acdcde68ae6" translate="yes" xml:space="preserve">
          <source>Attempts to cancel execution of this task.</source>
          <target state="translated">このタスクの実行をキャンセルしようとします。</target>
        </trans-unit>
        <trans-unit id="be69d632cf170c1ec52973f5bdb5b79901fba8bb" translate="yes" xml:space="preserve">
          <source>Attempts to cancel execution of this task. This attempt will fail if the task has already completed or could not be cancelled for some other reason. If successful, and this task has not started when &lt;code&gt;cancel&lt;/code&gt; is called, execution of this task is suppressed. After this method returns successfully, unless there is an intervening call to &lt;a href=&quot;#reinitialize()&quot;&gt;&lt;code&gt;reinitialize()&lt;/code&gt;&lt;/a&gt;, subsequent calls to &lt;a href=&quot;future#isCancelled()&quot;&gt;&lt;code&gt;Future.isCancelled()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;future#isDone()&quot;&gt;&lt;code&gt;Future.isDone()&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;cancel&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and calls to &lt;a href=&quot;#join()&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; and related methods will result in &lt;code&gt;CancellationException&lt;/code&gt;.</source>
          <target state="translated">このタスクの実行をキャンセルしようとします。タスクがすでに完了している場合、またはその他の理由でキャンセルできなかった場合、この試行は失敗します。成功し、 &lt;code&gt;cancel&lt;/code&gt; が呼び出されたときにこのタスクが開始されていない場合、このタスクの実行は抑制されます。正常にこのメソッドが復帰した後、する介在コールがない限り&lt;a href=&quot;#reinitialize()&quot;&gt; &lt;code&gt;reinitialize()&lt;/code&gt; &lt;/a&gt;に、後続の呼び出し&lt;a href=&quot;future#isCancelled()&quot;&gt; &lt;code&gt;Future.isCancelled()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;future#isDone()&quot;&gt; &lt;code&gt;Future.isDone()&lt;/code&gt; &lt;/a&gt;、および &lt;code&gt;cancel&lt;/code&gt; を返します &lt;code&gt;true&lt;/code&gt; と呼び出しがする&lt;a href=&quot;#join()&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;と関連した方法になります &lt;code&gt;CancellationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0dbef3794aa05ea06fb16ed81579e23110b04941" translate="yes" xml:space="preserve">
          <source>Attempts to cancel execution of this task. This attempt will fail if the task has already completed or could not be cancelled for some other reason. If successful, and this task has not started when &lt;code&gt;cancel&lt;/code&gt; is called, execution of this task is suppressed. After this method returns successfully, unless there is an intervening call to &lt;a href=&quot;forkjointask#reinitialize--&quot;&gt;&lt;code&gt;reinitialize()&lt;/code&gt;&lt;/a&gt;, subsequent calls to &lt;a href=&quot;forkjointask#isCancelled--&quot;&gt;&lt;code&gt;isCancelled()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;forkjointask#isDone--&quot;&gt;&lt;code&gt;isDone()&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;cancel&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and calls to &lt;a href=&quot;forkjointask#join--&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt; and related methods will result in &lt;code&gt;CancellationException&lt;/code&gt;.</source>
          <target state="translated">このタスクの実行をキャンセルしようとします。タスクがすでに完了している場合、またはその他の理由でキャンセルできなかった場合、この試行は失敗します。成功し、 &lt;code&gt;cancel&lt;/code&gt; が呼び出されたときにこのタスクが開始されていない場合、このタスクの実行は抑制されます。正常にこのメソッドが復帰した後、介入呼び出しがしない限り&lt;a href=&quot;forkjointask#reinitialize--&quot;&gt; &lt;code&gt;reinitialize()&lt;/code&gt; &lt;/a&gt;に、後続の呼び出し&lt;a href=&quot;forkjointask#isCancelled--&quot;&gt; &lt;code&gt;isCancelled()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;forkjointask#isDone--&quot;&gt; &lt;code&gt;isDone()&lt;/code&gt; &lt;/a&gt;、および &lt;code&gt;cancel&lt;/code&gt; 返され &lt;code&gt;true&lt;/code&gt; と呼び出しはする&lt;a href=&quot;forkjointask#join--&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;および関連する方法になります &lt;code&gt;CancellationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9f545bf8d096ea1b833b5eb0f7ce29c25e8dfe2" translate="yes" xml:space="preserve">
          <source>Attempts to cancel execution of this task. This attempt will fail if the task has already completed, has already been cancelled, or could not be cancelled for some other reason. If successful, and this task has not started when &lt;code&gt;cancel&lt;/code&gt; is called, this task should never run. If the task has already started, then the &lt;code&gt;mayInterruptIfRunning&lt;/code&gt; parameter determines whether the thread executing this task should be interrupted in an attempt to stop the task.</source>
          <target state="translated">このタスクの実行をキャンセルしようとします。タスクがすでに完了しているか、すでにキャンセルされているか、またはその他の理由でキャンセルできなかった場合、この試行は失敗します。成功し、 &lt;code&gt;cancel&lt;/code&gt; が呼び出されたときにこのタスクが開始されていない場合、このタスクは実行されません。タスクが既に開始されている場合、 &lt;code&gt;mayInterruptIfRunning&lt;/code&gt; パラメーターは、このタスクを実行しているスレッドを中断してタスクを停止するかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="08cb009b16b3d1dfcd1d61a16f44afb2a81f89a0" translate="yes" xml:space="preserve">
          <source>Attempts to change the transaction isolation level for this &lt;code&gt;Connection&lt;/code&gt; object to the one given.</source>
          <target state="translated">この &lt;code&gt;Connection&lt;/code&gt; オブジェクトのトランザクション分離レベルを指定されたレベルに変更しようとします。</target>
        </trans-unit>
        <trans-unit id="926bc868f1779c7db738cae4f0ed7d15b3b1cb1b" translate="yes" xml:space="preserve">
          <source>Attempts to change the transaction isolation level for this &lt;code&gt;Connection&lt;/code&gt; object to the one given. The constants defined in the interface &lt;code&gt;Connection&lt;/code&gt; are the possible transaction isolation levels.</source>
          <target state="translated">この &lt;code&gt;Connection&lt;/code&gt; オブジェクトのトランザクション分離レベルを指定されたレベルに変更しようとします。インターフェース &lt;code&gt;Connection&lt;/code&gt; 定義された定数は、可能なトランザクション分離レベルです。</target>
        </trans-unit>
        <trans-unit id="7ffd76704e71881008ba6ee96de86c766c61e175" translate="yes" xml:space="preserve">
          <source>Attempts to compute a mapping for the specified key and its current mapped value (or &lt;code&gt;null&lt;/code&gt; if there is no current mapping).</source>
          <target state="translated">指定されたキーとその現在のマッピングされた値のマッピングの計算を試みます（現在のマッピングがない場合は &lt;code&gt;null&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6995f73d660985e0068ac7840ce5b9d5105058c6" translate="yes" xml:space="preserve">
          <source>Attempts to compute a mapping for the specified key and its current mapped value (or &lt;code&gt;null&lt;/code&gt; if there is no current mapping). For example, to either create or append a &lt;code&gt;String&lt;/code&gt; msg to a value mapping:</source>
          <target state="translated">指定されたキーとその現在のマッピングされた値のマッピングの計算を試みます（現在のマッピングがない場合は &lt;code&gt;null&lt;/code&gt; ）。たとえば、 &lt;code&gt;String&lt;/code&gt; msgを作成するか、値マッピングに追加するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="ef4485fda1d0b5fc8e8c7719d09f4af2abd59f0d" translate="yes" xml:space="preserve">
          <source>Attempts to compute a mapping for the specified key and its current mapped value (or &lt;code&gt;null&lt;/code&gt; if there is no current mapping). The entire method invocation is performed atomically. Some attempted update operations on this map by other threads may be blocked while computation is in progress, so the computation should be short and simple, and must not attempt to update any other mappings of this Map.</source>
          <target state="translated">指定されたキーとその現在のマッピングされた値のマッピングの計算を試みます（現在のマッピングがない場合は &lt;code&gt;null&lt;/code&gt; ）。メソッド呼び出し全体がアトミックに実行されます。他のスレッドがこのマップに対して試みた更新操作の一部は、計算の進行中にブロックされる可能性があるため、計算は短く単純である必要があり、このマップの他のマッピングの更新を試みてはなりません。</target>
        </trans-unit>
        <trans-unit id="302bfb766c72f9c61fe6bbe40e814907fb2e7eec" translate="yes" xml:space="preserve">
          <source>Attempts to compute a mapping for the specified key and its current mapped value (or &lt;code&gt;null&lt;/code&gt; if there is no current mapping). The entire method invocation is performed atomically. The supplied function is invoked exactly once per invocation of this method. Some attempted update operations on this map by other threads may be blocked while computation is in progress, so the computation should be short and simple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddeddbb6a5b1402c75107991ad79ee1af098855d" translate="yes" xml:space="preserve">
          <source>Attempts to compute a mapping for the specified key and its current mapped value (or &lt;code&gt;null&lt;/code&gt; if there is no current mapping). The function is &lt;em&gt;NOT&lt;/em&gt; guaranteed to be applied once atomically.</source>
          <target state="translated">指定されたキーとその現在のマッピングされた値のマッピングの計算を試みます（現在のマッピングがない場合は &lt;code&gt;null&lt;/code&gt; ）。関数がアトミックに一度適用されることは保証されてい&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b21efc0070f60abc97e74c8b77eecacda2217fb8" translate="yes" xml:space="preserve">
          <source>Attempts to copy the file attributes associated with this file to the target file. The exact file attributes that are copied is platform and file system dependent and therefore unspecified. Minimally, the &lt;a href=&quot;attribute/basicfileattributes#lastModifiedTime()&quot;&gt;&lt;code&gt;last-modified-time&lt;/code&gt;&lt;/a&gt; is copied to the target file if supported by both the source and target file stores. Copying of file timestamps may result in precision loss.</source>
          <target state="translated">このファイルに関連付けられているファイル属性をターゲットファイルにコピーしようとします。コピーされる正確なファイル属性は、プラットフォームとファイルシステムに依存するため、指定されていません。最低限、ソースファイルストアとターゲットファイルストアの両方でサポートされている場合、&lt;a href=&quot;attribute/basicfileattributes#lastModifiedTime()&quot;&gt; &lt;code&gt;last-modified-time&lt;/code&gt; &lt;/a&gt;はターゲットファイルにコピーされます。ファイルのタイムスタンプをコピーすると、精度が低下する可能性があります。</target>
        </trans-unit>
        <trans-unit id="55b58e766c141ae3d28277152f3a39f8828973cd" translate="yes" xml:space="preserve">
          <source>Attempts to copy the file attributes associated with this file to the target file. The exact file attributes that are copied is platform and file system dependent and therefore unspecified. Minimally, the &lt;a href=&quot;attribute/basicfileattributes#lastModifiedTime--&quot;&gt;&lt;code&gt;last-modified-time&lt;/code&gt;&lt;/a&gt; is copied to the target file if supported by both the source and target file stores. Copying of file timestamps may result in precision loss.</source>
          <target state="translated">このファイルに関連付けられているファイル属性をターゲットファイルにコピーしようとします。コピーされる正確なファイル属性はプラットフォームとファイルシステムに依存するため、指定されていません。ソースとターゲットの両方のファイルストアでサポートされている場合、最低でも、&lt;a href=&quot;attribute/basicfileattributes#lastModifiedTime--&quot;&gt; &lt;code&gt;last-modified-time&lt;/code&gt; &lt;/a&gt;はターゲットファイルにコピーされます。ファイルのタイムスタンプをコピーすると、精度が失われる可能性があります。</target>
        </trans-unit>
        <trans-unit id="02a651e1dbacb8068014dd57b1daa55dc3774580" translate="yes" xml:space="preserve">
          <source>Attempts to decode SSL/TLS network data into a plaintext application data buffer.</source>
          <target state="translated">SSL/TLSネットワークデータを平文アプリケーションデータバッファにデコードしようとします。</target>
        </trans-unit>
        <trans-unit id="7a5268b10d6d3b64c3761f720d93f345168f7d14" translate="yes" xml:space="preserve">
          <source>Attempts to decode SSL/TLS network data into a sequence of plaintext application data buffers.</source>
          <target state="translated">SSL/TLSネットワークデータを平文のアプリケーションデータバッファの列にデコードしようとします。</target>
        </trans-unit>
        <trans-unit id="4977f4a60ff88c648f5bb7c4bd3faa08c210f2c7" translate="yes" xml:space="preserve">
          <source>Attempts to decode SSL/TLS network data into a subsequence of plaintext application data buffers. This</source>
          <target state="translated">SSL/TLSネットワークデータを平文アプリケーションデータバッファの一部にデコードしようとします。この</target>
        </trans-unit>
        <trans-unit id="5c481d8d45a780995f1539d3aa855d71e0a8e458" translate="yes" xml:space="preserve">
          <source>Attempts to decode SSL/TLS/DTLS network data into a plaintext application data buffer.</source>
          <target state="translated">SSL/TLS/DTLSネットワークデータを平文アプリケーションデータバッファにデコードしようとします。</target>
        </trans-unit>
        <trans-unit id="8fba193e8aad41d7ebb1012a8ac93609d00217fe" translate="yes" xml:space="preserve">
          <source>Attempts to decode SSL/TLS/DTLS network data into a sequence of plaintext application data buffers.</source>
          <target state="translated">SSL/TLS/DTLSネットワークデータを平文アプリケーションデータバッファのシーケンスにデコードしようとします。</target>
        </trans-unit>
        <trans-unit id="217e310501c2b5c9bb1f0e472685a6062b463449" translate="yes" xml:space="preserve">
          <source>Attempts to decode SSL/TLS/DTLS network data into a subsequence of plaintext application data buffers.</source>
          <target state="translated">SSL/TLS/DTLSネットワークデータを平文アプリケーションデータバッファの一部にデコードしようとします。</target>
        </trans-unit>
        <trans-unit id="77c1aaf05f7e041fb32cd69cf72088243447b042" translate="yes" xml:space="preserve">
          <source>Attempts to decode SSL/TLS/DTLS network data into a subsequence of plaintext application data buffers. This</source>
          <target state="translated">SSL/TLS/DTLSネットワークデータを平文アプリケーションデータバッファの一部にデコードしようとします。この</target>
        </trans-unit>
        <trans-unit id="f5ad1ba17c44917f59ef98d8863c0245c5daa894" translate="yes" xml:space="preserve">
          <source>Attempts to encode a buffer of plaintext application data into SSL/TLS network data.</source>
          <target state="translated">平文アプリケーションデータのバッファをSSL/TLSネットワークデータにエンコードしようとします。</target>
        </trans-unit>
        <trans-unit id="75a46ad26038bd228ef2d917525db204c12ce871" translate="yes" xml:space="preserve">
          <source>Attempts to encode a buffer of plaintext application data into SSL/TLS/DTLS network data.</source>
          <target state="translated">平文アプリケーションデータのバッファをSSL/TLS/DTLSネットワークデータにエンコードしようとします。</target>
        </trans-unit>
        <trans-unit id="7f05364da5001a5b265e18741c400010b08ed21f" translate="yes" xml:space="preserve">
          <source>Attempts to encode plaintext bytes from a sequence of data buffers into SSL/TLS network data.</source>
          <target state="translated">一連のデータバッファから平文バイトをSSL/TLSネットワークデータにエンコードしようとします。</target>
        </trans-unit>
        <trans-unit id="039d6159f75e396ce3bb7c01a00e560eef9143fc" translate="yes" xml:space="preserve">
          <source>Attempts to encode plaintext bytes from a sequence of data buffers into SSL/TLS/DTLS network data.</source>
          <target state="translated">一連のデータバッファから平文バイトをSSL/TLS/DTLSネットワークデータにエンコードしようとします。</target>
        </trans-unit>
        <trans-unit id="5251f982b6de6843fa0560083d5fdf6ed5f26d4b" translate="yes" xml:space="preserve">
          <source>Attempts to encode plaintext bytes from a subsequence of data buffers into SSL/TLS network data. This</source>
          <target state="translated">データバッファの一部から平文バイトをSSL/TLSネットワークデータにエンコードしようとします。この</target>
        </trans-unit>
        <trans-unit id="9fc5d8ae99d253c2444b0c85afe0edb94f402d01" translate="yes" xml:space="preserve">
          <source>Attempts to encode plaintext bytes from a subsequence of data buffers into SSL/TLS/DTLS network data.</source>
          <target state="translated">データバッファの一部から、平文バイトをSSL/TLS/DTLSネットワークデータにエンコードしようとします。</target>
        </trans-unit>
        <trans-unit id="87db3200fb1974991ea8de3a448a1f29a511f1a1" translate="yes" xml:space="preserve">
          <source>Attempts to encode plaintext bytes from a subsequence of data buffers into SSL/TLS/DTLS network data. This</source>
          <target state="translated">データバッファの一部から、平文バイトをSSL/TLS/DTLSネットワークデータにエンコードしようとします。この</target>
        </trans-unit>
        <trans-unit id="4055d18db14085e50969c7eefd7cb4fe4e8ca71b" translate="yes" xml:space="preserve">
          <source>Attempts to establish a connection to the given database URL.</source>
          <target state="translated">指定されたデータベースURLへの接続を試みます。</target>
        </trans-unit>
        <trans-unit id="c8d8ebe7ff942a868a65eb3ea636cf010f85fcf8" translate="yes" xml:space="preserve">
          <source>Attempts to establish a connection to the given database URL. The &lt;code&gt;DriverManager&lt;/code&gt; attempts to select an appropriate driver from the set of registered JDBC drivers.</source>
          <target state="translated">指定されたデータベースURLへの接続を確立しようとします。 &lt;code&gt;DriverManager&lt;/code&gt; 登録JDBCドライバの集合から適切なドライバを選択しよう。</target>
        </trans-unit>
        <trans-unit id="4577a99fee601b68777076069a2a1fa45a9e9901" translate="yes" xml:space="preserve">
          <source>Attempts to establish a connection with the data source that this &lt;code&gt;DataSource&lt;/code&gt; object represents.</source>
          <target state="translated">この &lt;code&gt;DataSource&lt;/code&gt; オブジェクトが表すデータソースとの接続を確立しようとします。</target>
        </trans-unit>
        <trans-unit id="fcd47d6d3a2ec04d5e4606f17af041026c167e95" translate="yes" xml:space="preserve">
          <source>Attempts to establish a physical database connection that can be used as a pooled connection.</source>
          <target state="translated">プール接続として使用できる物理データベース接続の確立を試みます。</target>
        </trans-unit>
        <trans-unit id="09216e364f27cf12b63599cdc8774deba3b8386e" translate="yes" xml:space="preserve">
          <source>Attempts to establish a physical database connection that can be used in a distributed transaction.</source>
          <target state="translated">分散トランザクションで使用できる物理的なデータベース接続の確立を試みます。</target>
        </trans-unit>
        <trans-unit id="b5559aec2b9680a16743fbfbc02b1e43573eeedb" translate="yes" xml:space="preserve">
          <source>Attempts to establish a physical database connection, using the given user name and password.</source>
          <target state="translated">指定されたユーザー名とパスワードを使用して、物理的なデータベース接続の確立を試みます。</target>
        </trans-unit>
        <trans-unit id="2baf161210f484fdafeffe7cad74d825ce7c0fcd" translate="yes" xml:space="preserve">
          <source>Attempts to establish a physical database connection, using the given user name and password. The connection that is returned is one that can be used in a distributed transaction.</source>
          <target state="translated">指定されたユーザー名とパスワードを使用して、物理的なデータベース接続の確立を試みます。返される接続は、分散トランザクションで使用できるものです。</target>
        </trans-unit>
        <trans-unit id="994af513e757c0bdbf1e4058d897e0342245c310" translate="yes" xml:space="preserve">
          <source>Attempts to find a key that satisfies the specified constraints.</source>
          <target state="translated">指定された制約を満たすキーの検索を試みます。</target>
        </trans-unit>
        <trans-unit id="0bbdd46d4a1c9c871b3145a6388c1eb15e9b1cc7" translate="yes" xml:space="preserve">
          <source>Attempts to find a matching entry in the catalog by publicId.</source>
          <target state="translated">publicIdでカタログ内の一致する項目を検索しようとします。</target>
        </trans-unit>
        <trans-unit id="1ac9f324ef11c8256b1adc97efec4641354423d2" translate="yes" xml:space="preserve">
          <source>Attempts to find a matching entry in the catalog by publicId. The method searches through the public-type entries, including &lt;code&gt;public,
 delegatePublic&lt;/code&gt;, and &lt;code&gt;group&lt;/code&gt; entries in the current catalog in order to find a match.</source>
          <target state="translated">publicIdによってカタログ内で一致するエントリを見つけようとします。このメソッドは、一致するものを見つけるために、現在のカタログ内の &lt;code&gt;public, delegatePublic&lt;/code&gt; 、および &lt;code&gt;group&lt;/code&gt; エントリを含むpublic-typeエントリを検索します。</target>
        </trans-unit>
        <trans-unit id="defd85c3874031c8a1dedfef60639653ffc1b51b" translate="yes" xml:space="preserve">
          <source>Attempts to find a matching entry in the catalog by systemId.</source>
          <target state="translated">systemId でカタログ内の一致するエントリを検索しようとします。</target>
        </trans-unit>
        <trans-unit id="638b065d82eabded5a41da0a9f66deeb399053a6" translate="yes" xml:space="preserve">
          <source>Attempts to find a matching entry in the catalog by the uri element.</source>
          <target state="translated">uri要素でカタログ内の一致する項目を検索します。</target>
        </trans-unit>
        <trans-unit id="ec39fd211545bf65f5b194937ecfa5bed7529dab" translate="yes" xml:space="preserve">
          <source>Attempts to find the next occurrence of a pattern constructed from the specified string, ignoring delimiters.</source>
          <target state="translated">指定された文字列から構築されたパターンの次の出現を、デリミタを無視して見つけようとします。</target>
        </trans-unit>
        <trans-unit id="38c96ebc8b9c9fe16914c63336ceacad71ddd2cb" translate="yes" xml:space="preserve">
          <source>Attempts to find the next occurrence of the specified pattern ignoring delimiters.</source>
          <target state="translated">区切り文字を無視して、指定されたパターンの次の出現を試みます。</target>
        </trans-unit>
        <trans-unit id="97d418aa08bdc4ffdd5816f14ae1b103c76220d8" translate="yes" xml:space="preserve">
          <source>Attempts to find the next occurrence of the specified pattern ignoring delimiters. If the pattern is found before the next line separator, the scanner advances past the input that matched and returns the string that matched the pattern. If no such pattern is detected in the input up to the next line separator, then &lt;code&gt;null&lt;/code&gt; is returned and the scanner's position is unchanged. This method may block waiting for input that matches the pattern.</source>
          <target state="translated">区切り文字を無視して、指定されたパターンの次の出現を見つけようとします。次の行セパレータの前にパターンが見つかった場合、スキャナは一致した入力を超えて進み、パターンに一致した文字列を返します。次の行セパレーターまでの入力でそのようなパターンが検出されない場合、 &lt;code&gt;null&lt;/code&gt; が返され、スキャナーの位置は変更されません。このメソッドは、パターンに一致する入力の待機をブロックする場合があります。</target>
        </trans-unit>
        <trans-unit id="3812d20478045d8485120b05100458d1c13e199a" translate="yes" xml:space="preserve">
          <source>Attempts to find the next occurrence of the specified pattern.</source>
          <target state="translated">指定されたパターンの次の出現を試みます。</target>
        </trans-unit>
        <trans-unit id="330398bd81e9cb8ab3301ade101b0a5bcc20666c" translate="yes" xml:space="preserve">
          <source>Attempts to find the next subsequence of the input sequence that matches the pattern.</source>
          <target state="translated">パターンに一致する入力シーケンスの次の部分シーケンスを見つけようとします.</target>
        </trans-unit>
        <trans-unit id="53961c46179a42096ee9a8812a60985eda896e2e" translate="yes" xml:space="preserve">
          <source>Attempts to interpret the string &lt;code&gt;s&lt;/code&gt; as a representation of a date and time. If the attempt is successful, the time indicated is returned represented as the distance, measured in milliseconds, of that time from the epoch (00:00:00 GMT on January 1, 1970). If the attempt fails, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">文字列 &lt;code&gt;s&lt;/code&gt; を日付と時刻の表現として解釈しようとします。試行が成功した場合、指定された時間は、エポック（1970年1月1日の00:00:00 GMT）からのその時間のミリ秒単位で測定された距離として表されて返されます。試行が失敗した場合、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="19ee5e3fa3f764f4a86a696f995a05fe800a9581" translate="yes" xml:space="preserve">
          <source>Attempts to load new classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3227bc0c0536114f117ae0873fc7f6c34ab9d04" translate="yes" xml:space="preserve">
          <source>Attempts to locate a driver that understands the given URL.</source>
          <target state="translated">指定された URL を理解できるドライバの検索を試みます。</target>
        </trans-unit>
        <trans-unit id="c4b3d653efce50344d5882b0918dfb8f8a60fa77" translate="yes" xml:space="preserve">
          <source>Attempts to locate a driver that understands the given URL. The &lt;code&gt;DriverManager&lt;/code&gt; attempts to select an appropriate driver from the set of registered JDBC drivers.</source>
          <target state="translated">指定されたURLを理解するドライバーを見つけようとします。 &lt;code&gt;DriverManager&lt;/code&gt; 登録JDBCドライバの集合から適切なドライバを選択しよう。</target>
        </trans-unit>
        <trans-unit id="16fc0ced6ba7574088940a7af10a8deb04cf1433" translate="yes" xml:space="preserve">
          <source>Attempts to make a database connection to the given URL.</source>
          <target state="translated">指定したURLへのデータベース接続を試みます。</target>
        </trans-unit>
        <trans-unit id="5a8fe93c029756fa7774e8ca574c2209045bedf1" translate="yes" xml:space="preserve">
          <source>Attempts to make a database connection to the given URL. The driver should return &quot;null&quot; if it realizes it is the wrong kind of driver to connect to the given URL. This will be common, as when the JDBC driver manager is asked to connect to a given URL it passes the URL to each loaded driver in turn.</source>
          <target state="translated">指定されたURLへのデータベース接続を試みます。指定されたURLに接続するドライバの種類が間違っていることに気付いた場合、ドライバは &quot;null &quot;を返すべきである。これは、JDBCドライバマネージャが指定されたURLへの接続を要求されたときに、ロードされた各ドライバに順番にURLを渡すため、一般的なことである。</target>
        </trans-unit>
        <trans-unit id="9ed02f4242df122d8a99d249969503460eed0b70" translate="yes" xml:space="preserve">
          <source>Attempts to match the entire region against the pattern.</source>
          <target state="translated">領域全体をパターンに一致させようとします。</target>
        </trans-unit>
        <trans-unit id="e21c0c5ca6d97f1389b8751366a51ff89cd3af76" translate="yes" xml:space="preserve">
          <source>Attempts to match the given &lt;a href=&quot;sniservername&quot;&gt;&lt;code&gt;SNIServerName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された&lt;a href=&quot;sniservername&quot;&gt; &lt;code&gt;SNIServerName&lt;/code&gt; &lt;/a&gt;との一致を試みます。</target>
        </trans-unit>
        <trans-unit id="7d1ffb18a77fce0ff1a7745c9f8f825c236feceb" translate="yes" xml:space="preserve">
          <source>Attempts to match the input sequence, starting at the beginning of the region, against the pattern.</source>
          <target state="translated">領域の先頭から始まる入力シーケンスとパターンとの一致を試みる.</target>
        </trans-unit>
        <trans-unit id="4e492c31685a512b783f2ecd36b9f4177cdc9a60" translate="yes" xml:space="preserve">
          <source>Attempts to modify the returned &lt;code&gt;Iterator&lt;/code&gt; via its &lt;code&gt;remove&lt;/code&gt; method result in an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;remove&lt;/code&gt; メソッドを介して返された &lt;code&gt;Iterator&lt;/code&gt; を変更しようとすると、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="dc99ece4be959bb2c767caf53927098dea9796e8" translate="yes" xml:space="preserve">
          <source>Attempts to parse this URI's authority component, if defined, into user-information, host, and port components.</source>
          <target state="translated">このURIの権限コンポーネント(定義されている場合)を、ユーザー情報、ホスト、ポートの各コンポーネン トに解析することを試みる。</target>
        </trans-unit>
        <trans-unit id="537326207e913f568dea4ee833dd4e8ad0beb4a8" translate="yes" xml:space="preserve">
          <source>Attempts to pass a &lt;code&gt;null&lt;/code&gt; model to this method result in undefined behavior, and, most likely, exceptions.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; モデルをこのメソッドに渡そうとすると、未定義の動作が発生し、ほとんどの場合、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="ee1680c070b7674e297995da16e519c4558016dc" translate="yes" xml:space="preserve">
          <source>Attempts to pass a &lt;code&gt;null&lt;/code&gt; value to this method results in undefined behavior and, most likely, exceptions. The created model references the given &lt;code&gt;Vector&lt;/code&gt; directly. Attempts to modify the &lt;code&gt;Vector&lt;/code&gt; after constructing the list results in undefined behavior.</source>
          <target state="translated">このメソッドに &lt;code&gt;null&lt;/code&gt; 値を渡そうとすると、未定義の動作が発生し、ほとんどの場合、例外が発生します。作成されたモデルは、指定された &lt;code&gt;Vector&lt;/code&gt; 直接参照します。リストを作成した後に &lt;code&gt;Vector&lt;/code&gt; を変更しようとすると、未定義の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="1c4757beba267ecafe468a9fbc5001d684bf1f8d" translate="yes" xml:space="preserve">
          <source>Attempts to pass a &lt;code&gt;null&lt;/code&gt; value to this method results in undefined behavior and, most likely, exceptions. The created model references the given &lt;code&gt;Vector&lt;/code&gt; directly. Attempts to modify the &lt;code&gt;Vector&lt;/code&gt; after invoking this method results in undefined behavior.</source>
          <target state="translated">このメソッドに &lt;code&gt;null&lt;/code&gt; 値を渡そうとすると、未定義の動作が発生し、ほとんどの場合、例外が発生します。作成されたモデルは、指定された &lt;code&gt;Vector&lt;/code&gt; 直接参照します。このメソッドを呼び出した後に &lt;code&gt;Vector&lt;/code&gt; を変更しようとすると、未定義の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="a6fb168593f49e4fb65664b0df38c052b1a73fdd" translate="yes" xml:space="preserve">
          <source>Attempts to pass a &lt;code&gt;null&lt;/code&gt; value to this method results in undefined behavior and, most likely, exceptions. The created model references the given array directly. Attempts to modify the array after constructing the list results in undefined behavior.</source>
          <target state="translated">このメソッドに &lt;code&gt;null&lt;/code&gt; 値を渡そうとすると、未定義の動作が発生し、ほとんどの場合、例外が発生します。作成されたモデルは、指定された配列を直接参照します。リストを作成した後に配列を変更しようとすると、未定義の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="49cdc4e719a0ae3ff2ead8d90b2e89e63a16c8e8" translate="yes" xml:space="preserve">
          <source>Attempts to pass a &lt;code&gt;null&lt;/code&gt; value to this method results in undefined behavior and, most likely, exceptions. The created model references the given array directly. Attempts to modify the array after invoking this method results in undefined behavior.</source>
          <target state="translated">このメソッドに &lt;code&gt;null&lt;/code&gt; 値を渡そうとすると、未定義の動作が発生し、ほとんどの場合、例外が発生します。作成されたモデルは、指定された配列を直接参照します。このメソッドを呼び出した後に配列を変更しようとすると、未定義の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="0d05c3a798e16b076970a7c4f630032c3ec8f289" translate="yes" xml:space="preserve">
          <source>Attempts to read a JDWP packet from the target VM. A read operation may block indefinitely and only returns when it reads all bytes of a packet, or in the case of a transport service that is based on a stream-oriented communication protocol, the end of stream is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57d24395444520cb378075b6c562c7596462395" translate="yes" xml:space="preserve">
          <source>Attempts to read characters into the specified character buffer.</source>
          <target state="translated">指定された文字バッファに文字を読み込もうとします。</target>
        </trans-unit>
        <trans-unit id="ee6bbece5380d32bb47a01ff7e0e9f342b10609f" translate="yes" xml:space="preserve">
          <source>Attempts to read characters into the specified character buffer. The buffer is used as a repository of characters as-is: the only changes made are the results of a put operation. No flipping or rewinding of the buffer is performed.</source>
          <target state="translated">指定された文字バッファに文字を読み込もうとします。バッファはそのまま文字の保存場所として使用され、変更されるのはput操作の結果のみです。バッファの反転や巻き戻しは行われません。</target>
        </trans-unit>
        <trans-unit id="9c172118a3d275c23fef0ce3e3e803a70c63d4e2" translate="yes" xml:space="preserve">
          <source>Attempts to redefine previously loaded classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debd865276193113e152f27857ff5a7bdb82ee76" translate="yes" xml:space="preserve">
          <source>Attempts to reduce storage used for the character sequence.</source>
          <target state="translated">文字列に使用されるストレージの削減を試みます。</target>
        </trans-unit>
        <trans-unit id="3d3112b0d19bc6243d3833bd7044df95cf65af6a" translate="yes" xml:space="preserve">
          <source>Attempts to reduce storage used for the character sequence. If the buffer is larger than necessary to hold its current sequence of characters, then it may be resized to become more space efficient. Calling this method may, but is not required to, affect the value returned by a subsequent call to the &lt;a href=&quot;#capacity()&quot;&gt;&lt;code&gt;capacity()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">文字シーケンスに使用されるストレージを削減しようとします。バッファが現在の文字シーケンスを保持するために必要な大きさよりも大きい場合は、スペース効率を高めるためにサイズを変更できます。このメソッドを呼び出すと、&lt;a href=&quot;#capacity()&quot;&gt; &lt;code&gt;capacity()&lt;/code&gt; &lt;/a&gt;メソッドへの後続の呼び出しによって返される値に影響を与える可能性がありますが、必須ではありません。</target>
        </trans-unit>
        <trans-unit id="0d8e5c1c4f4435c91f0e4b31eb3cdf12e1e03fd2" translate="yes" xml:space="preserve">
          <source>Attempts to reduce storage used for the character sequence. If the buffer is larger than necessary to hold its current sequence of characters, then it may be resized to become more space efficient. Calling this method may, but is not required to, affect the value returned by a subsequent call to the &lt;a href=&quot;stringbuffer#capacity--&quot;&gt;&lt;code&gt;capacity()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">文字シーケンスに使用されるストレージを削減しようとします。バッファが現在の文字シーケンスを保持するのに必要なサイズよりも大きい場合は、サイズを変更してスペース効率を高めることができます。このメソッドの呼び出しは、以降の&lt;a href=&quot;stringbuffer#capacity--&quot;&gt; &lt;code&gt;capacity()&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しで返される値に影響を与える可能性がありますが、必須ではありません。</target>
        </trans-unit>
        <trans-unit id="2adad58e2b3d067b178b23723d203533032801e3" translate="yes" xml:space="preserve">
          <source>Attempts to reduce storage used for the character sequence. If the buffer is larger than necessary to hold its current sequence of characters, then it may be resized to become more space efficient. Calling this method may, but is not required to, affect the value returned by a subsequent call to the &lt;a href=&quot;stringbuilder#capacity--&quot;&gt;&lt;code&gt;capacity()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">文字シーケンスに使用されるストレージを削減しようとします。バッファが現在の文字シーケンスを保持するのに必要なサイズよりも大きい場合は、サイズを変更してスペース効率を高めることができます。このメソッドの呼び出しは、以降の&lt;a href=&quot;stringbuilder#capacity--&quot;&gt; &lt;code&gt;capacity()&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しで返される値に影響を与える可能性がありますが、必須ではありません。</target>
        </trans-unit>
        <trans-unit id="8cbaab4122ca5ea943be8319d6c2ad91124d6bd6" translate="yes" xml:space="preserve">
          <source>Attempts to release this lock.</source>
          <target state="translated">このロックを解除しようとします。</target>
        </trans-unit>
        <trans-unit id="0d9a00d85c54c88dd48c8b613a9c765f5deede91" translate="yes" xml:space="preserve">
          <source>Attempts to restore the drawing surface of the image if the surface had been lost since the last &lt;code&gt;validate&lt;/code&gt; call.</source>
          <target state="translated">最後の &lt;code&gt;validate&lt;/code&gt; 呼び出し以降に表面が失われた場合、画像の描画表面の復元を試みます。</target>
        </trans-unit>
        <trans-unit id="818982031563431d72f45ab45e241e1bf77d76de" translate="yes" xml:space="preserve">
          <source>Attempts to restore the drawing surface of the image if the surface had been lost since the last &lt;code&gt;validate&lt;/code&gt; call. Also validates this image against the given GraphicsConfiguration parameter to see whether operations from this image to the GraphicsConfiguration are compatible. An example of an incompatible combination might be a situation where a VolatileImage object was created on one graphics device and then was used to render to a different graphics device. Since VolatileImage objects tend to be very device-specific, this operation might not work as intended, so the return code from this validate call would note that incompatibility. A null or incorrect value for gc may cause incorrect values to be returned from &lt;code&gt;validate&lt;/code&gt; and may cause later problems with rendering.</source>
          <target state="translated">最後の &lt;code&gt;validate&lt;/code&gt; 呼び出し以降に表面が失われた場合、画像の描画表面の復元を試みます。また、指定されたGraphicsConfigurationパラメーターに対してこのイメージを検証して、このイメージからGraphicsConfigurationへの操作に互換性があるかどうかを確認します。互換性のない組み合わせの例としては、VolatileImageオブジェクトが1つのグラフィックデバイスで作成され、別のグラフィックデバイスにレンダリングするために使用された場合があります。 VolatileImageオブジェクトはデバイス固有である傾向があるため、この操作は意図したとおりに機能しない可能性があります。そのため、この検証呼び出しからの戻りコードは、非互換性に注意します。 gcの値がnullまたは正しくない場合、 &lt;code&gt;validate&lt;/code&gt; から誤った値が返され、後でレンダリングで問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="2532974ac1ff72c9ac1924607645f63b5b9a3c85" translate="yes" xml:space="preserve">
          <source>Attempts to select an input method or keyboard layout that supports the given locale, and returns a value indicating whether such an input method or keyboard layout has been successfully selected.</source>
          <target state="translated">指定したロケールをサポートする入力メソッドやキーボードレイアウトの選択を試み、そのような入力メソッドやキーボードレイアウトが正常に選択されたかどうかを示す値を返します。</target>
        </trans-unit>
        <trans-unit id="141de93f2b196fd3f2a4e98229b118c091f1bc2c" translate="yes" xml:space="preserve">
          <source>Attempts to select an input method or keyboard layout that supports the given locale, and returns a value indicating whether such an input method or keyboard layout has been successfully selected. The following steps are taken until an input method has been selected:</source>
          <target state="translated">指定したロケールをサポートする入力メソッドまたはキーボードレイアウトの選択を試み、その入力メソッドまたはキーボードレイアウトが正常に選択されたかどうかを示す値を返します。入力方式が選択されるまで、以下の処理を行う。</target>
        </trans-unit>
        <trans-unit id="6c4357684ade77167a8613c36634af99f9ccef75" translate="yes" xml:space="preserve">
          <source>Attempts to set the input locale.</source>
          <target state="translated">入力ロケールの設定を試みます。</target>
        </trans-unit>
        <trans-unit id="8863cb25493b96c14f897951378b4fe7cb3ff83c" translate="yes" xml:space="preserve">
          <source>Attempts to set the input locale. If the input method supports the desired locale, it changes its behavior to support input for the locale and returns true. Otherwise, it returns false and does not change its behavior.</source>
          <target state="translated">入力ロケールの設定を試みます。入力メソッドが希望するロケールをサポートしている場合、そのロケールの入力をサポートするように動作を変更して真を返します。それ以外の場合は false を返し、動作を変更しません。</target>
        </trans-unit>
        <trans-unit id="2bdc53110a2ff68ef5c4ff07eb5c187b0fe84ec9" translate="yes" xml:space="preserve">
          <source>Attempts to set the state to reflect a release in exclusive mode.</source>
          <target state="translated">排他的モードでのリリースを反映した状態に設定しようとします。</target>
        </trans-unit>
        <trans-unit id="596f8b5c5090b0b227f87afd3fd05c1fbc29fca7" translate="yes" xml:space="preserve">
          <source>Attempts to set the state to reflect a release in shared mode.</source>
          <target state="translated">共有モードでのリリースを反映した状態を設定しようとします。</target>
        </trans-unit>
        <trans-unit id="86d56255251e8f7056da33178522865b774bf63b" translate="yes" xml:space="preserve">
          <source>Attempts to skip over &lt;code&gt;n&lt;/code&gt; bytes of input discarding the skipped bytes.</source>
          <target state="translated">入力の &lt;code&gt;n&lt;/code&gt; バイトをスキップして、スキップしたバイトを破棄しようとします。</target>
        </trans-unit>
        <trans-unit id="1745423da9b831e272687095443cbe5e175dcc3a" translate="yes" xml:space="preserve">
          <source>Attempts to stop all actively executing tasks, halts the processing of waiting tasks, and returns a list of the tasks that were awaiting execution.</source>
          <target state="translated">実行中のタスクをすべて停止し、待機中のタスクの処理を停止し、実行待ちのタスクのリストを返します。</target>
        </trans-unit>
        <trans-unit id="9e153214832a3d811e4f03d0faa5d224fba87fbd" translate="yes" xml:space="preserve">
          <source>Attempts to stop all actively executing tasks, halts the processing of waiting tasks, and returns a list of the tasks that were awaiting execution. These tasks are drained (removed) from the task queue upon return from this method.</source>
          <target state="translated">実行中のすべてのタスクの停止を試み、待機中のタスクの処理を停止し、実行待ちのタスクのリストを返します。これらのタスクは、このメソッドからの復帰時にタスクキューから排出(削除)されます。</target>
        </trans-unit>
        <trans-unit id="bc8455b212ca682a72b5a3b402b95993b73e1a20" translate="yes" xml:space="preserve">
          <source>Attempts to update a read-only rowset will result in an &lt;code&gt;SQLException&lt;/code&gt; being thrown.</source>
          <target state="translated">Attempts to update a read-only rowset will result in an &lt;code&gt;SQLException&lt;/code&gt; being thrown.</target>
        </trans-unit>
        <trans-unit id="7c8f29197f62e6e5e3747545cf69e332e3b8848b" translate="yes" xml:space="preserve">
          <source>Attempts to write, or send, a JDWP packet to the target VM. A write operation only returns after writing the entire packet to the target VM. Writing the entire packet does not mean the entire packet has been transmitted to the target VM but rather that all bytes have been written to the transport service. A transport service based on a TCP/IP connection may, for example, buffer some or all of the packet before transmission on the network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9a688c50df2134fab59236d1d7d6111fd51b6d" translate="yes" xml:space="preserve">
          <source>Attr</source>
          <target state="translated">Attr</target>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="74c7bf4f0351b7ac7e18270c1c4d0ed9f1c0844d" translate="yes" xml:space="preserve">
          <source>Attribute &quot;action&quot;</source>
          <target state="translated">属性 &quot;アクション&quot;</target>
        </trans-unit>
        <trans-unit id="48a538e07ab6bfe18e229338708b0d4bc95f0fea" translate="yes" xml:space="preserve">
          <source>Attribute &quot;align&quot;</source>
          <target state="translated">属性 &quot;align&quot;</target>
        </trans-unit>
        <trans-unit id="013cc60c5445289a029cb24474a7980f9354c3d7" translate="yes" xml:space="preserve">
          <source>Attribute &quot;alink&quot;</source>
          <target state="translated">属性 &quot;alink&quot;</target>
        </trans-unit>
        <trans-unit id="e9ea73f8d1dacc92b307df5b39bcc6f2eaebafae" translate="yes" xml:space="preserve">
          <source>Attribute &quot;alt&quot;</source>
          <target state="translated">属性 &quot;alt&quot;</target>
        </trans-unit>
        <trans-unit id="f29b4fffff1a2810e6ceab7e6d70a9f33bb88e1b" translate="yes" xml:space="preserve">
          <source>Attribute &quot;archive&quot;</source>
          <target state="translated">属性 &quot;アーカイブ&quot;</target>
        </trans-unit>
        <trans-unit id="fa62cb8e0010e718f4370fdf36bdf78fcc429380" translate="yes" xml:space="preserve">
          <source>Attribute &quot;background&quot;</source>
          <target state="translated">属性 &quot;background&quot;</target>
        </trans-unit>
        <trans-unit id="e264e2290b3434f5b2ee48226b5cc84302d18a20" translate="yes" xml:space="preserve">
          <source>Attribute &quot;bgcolor&quot;</source>
          <target state="translated">属性 &quot;bgcolor&quot;</target>
        </trans-unit>
        <trans-unit id="6bb267f8a7ceaff47a06ac36809739fa7b578ffe" translate="yes" xml:space="preserve">
          <source>Attribute &quot;border&quot;</source>
          <target state="translated">属性 &quot;border&quot;</target>
        </trans-unit>
        <trans-unit id="555686f5861171b2fbb419d911fc1e2f4e696bfb" translate="yes" xml:space="preserve">
          <source>Attribute &quot;cellpadding&quot;</source>
          <target state="translated">属性 &quot;セルパディング&quot;</target>
        </trans-unit>
        <trans-unit id="15ac4a93db14afc9b5c227c289a41cef06419715" translate="yes" xml:space="preserve">
          <source>Attribute &quot;cellspacing&quot;</source>
          <target state="translated">属性 &quot;セル間隔&quot;</target>
        </trans-unit>
        <trans-unit id="62018cac5fe93bae8e54de276363f9a53c2e295f" translate="yes" xml:space="preserve">
          <source>Attribute &quot;checked&quot;</source>
          <target state="translated">属性 &quot;checked&quot;</target>
        </trans-unit>
        <trans-unit id="f8fe8f82a87aab97b0a6f644cc6dbcd7db71e24c" translate="yes" xml:space="preserve">
          <source>Attribute &quot;class&quot;</source>
          <target state="translated">属性 &quot;クラス&quot;</target>
        </trans-unit>
        <trans-unit id="507936bb8090678e1cb22c37d1c86441eff6eb4a" translate="yes" xml:space="preserve">
          <source>Attribute &quot;classid&quot;</source>
          <target state="translated">属性 &quot;classid&quot;</target>
        </trans-unit>
        <trans-unit id="c97d1f3738bb1db35454f2aece2ad6329b56be87" translate="yes" xml:space="preserve">
          <source>Attribute &quot;clear&quot;</source>
          <target state="translated">属性 &quot;クリア&quot;</target>
        </trans-unit>
        <trans-unit id="17902c57131cbf6bc60b00b50f70763f35f254bd" translate="yes" xml:space="preserve">
          <source>Attribute &quot;code&quot;</source>
          <target state="translated">属性 &quot;コード&quot;</target>
        </trans-unit>
        <trans-unit id="896be0df00c581a3355e02bd72fce589eb9cf055" translate="yes" xml:space="preserve">
          <source>Attribute &quot;codebase&quot;</source>
          <target state="translated">属性 &quot;codebase&quot;</target>
        </trans-unit>
        <trans-unit id="4ec9f7943cad4772a26b668844d278b4b0208bd5" translate="yes" xml:space="preserve">
          <source>Attribute &quot;codetype&quot;</source>
          <target state="translated">属性 &quot;codetype&quot;</target>
        </trans-unit>
        <trans-unit id="4fa8bb46fc23715e5410df7a3f1582dc328c09a8" translate="yes" xml:space="preserve">
          <source>Attribute &quot;color&quot;</source>
          <target state="translated">属性 &quot;色&quot;</target>
        </trans-unit>
        <trans-unit id="1055417c81d310626a288f98cc376d2d44bb15de" translate="yes" xml:space="preserve">
          <source>Attribute &quot;cols&quot;</source>
          <target state="translated">属性 &quot;cols&quot;</target>
        </trans-unit>
        <trans-unit id="7e9accec082bd185c71028b5fc9ecbc4d9d0a205" translate="yes" xml:space="preserve">
          <source>Attribute &quot;colspan&quot;</source>
          <target state="translated">属性 &quot;colspan&quot;</target>
        </trans-unit>
        <trans-unit id="a071fd6f5a41095a69d59d42b156d7df42ac1363" translate="yes" xml:space="preserve">
          <source>Attribute &quot;comment&quot;</source>
          <target state="translated">属性 &quot;どのように&quot;</target>
        </trans-unit>
        <trans-unit id="9bbd2b4f2a7ea639b8df408cca5eb81df5cd6aeb" translate="yes" xml:space="preserve">
          <source>Attribute &quot;compact&quot;</source>
          <target state="translated">属性 &quot;コンパクト&quot;</target>
        </trans-unit>
        <trans-unit id="c76e6dcd91c0e3c85abfd765bc965e2dc8f90d4d" translate="yes" xml:space="preserve">
          <source>Attribute &quot;content&quot;</source>
          <target state="translated">属性 &quot;内容&quot;</target>
        </trans-unit>
        <trans-unit id="e914adaf63beed52619a1451067ed831069eca8b" translate="yes" xml:space="preserve">
          <source>Attribute &quot;coords&quot;</source>
          <target state="translated">属性 &quot;coords&quot;</target>
        </trans-unit>
        <trans-unit id="c59f83be6683f0211544b3e4ad3b495d1b0fd966" translate="yes" xml:space="preserve">
          <source>Attribute &quot;data&quot;</source>
          <target state="translated">属性 &quot;data&quot;</target>
        </trans-unit>
        <trans-unit id="2a10b4d6a73896873eecdcff2c6e62933ab6ef3b" translate="yes" xml:space="preserve">
          <source>Attribute &quot;declare&quot;</source>
          <target state="translated">属性 &quot;宣言&quot;</target>
        </trans-unit>
        <trans-unit id="f6586c2f6823d3d5aecba8f4a2b4030b8d78a220" translate="yes" xml:space="preserve">
          <source>Attribute &quot;dir&quot;</source>
          <target state="translated">属性 &quot;dir&quot;</target>
        </trans-unit>
        <trans-unit id="0b8e6a711663d9f780229ff780edcff0fc41c8bc" translate="yes" xml:space="preserve">
          <source>Attribute &quot;dummy&quot;</source>
          <target state="translated">属性 &quot;ダミー&quot;</target>
        </trans-unit>
        <trans-unit id="39e016dc2249e8184ee86fd0306e18aa4bfe2d2b" translate="yes" xml:space="preserve">
          <source>Attribute &quot;enctype&quot;</source>
          <target state="translated">属性 &quot;enctype&quot;</target>
        </trans-unit>
        <trans-unit id="e3ac25d26cedd74e74bd7305809298c908ba509a" translate="yes" xml:space="preserve">
          <source>Attribute &quot;endtag&quot;</source>
          <target state="translated">属性 &quot;endtag&quot;</target>
        </trans-unit>
        <trans-unit id="f437b6d8f966b1461a7fe89e9fbba03b8f09e343" translate="yes" xml:space="preserve">
          <source>Attribute &quot;face&quot;</source>
          <target state="translated">属性 &quot;顔&quot;</target>
        </trans-unit>
        <trans-unit id="6680d5f998fb222541639b6e207e13da9fbe0aad" translate="yes" xml:space="preserve">
          <source>Attribute &quot;frameborder&quot;</source>
          <target state="translated">属性 &quot;frameborder&quot;</target>
        </trans-unit>
        <trans-unit id="124ca34c7cd7ea9a0d4a2070d7ba030017e99b34" translate="yes" xml:space="preserve">
          <source>Attribute &quot;halign&quot;</source>
          <target state="translated">属性 &quot;ハリン&quot;</target>
        </trans-unit>
        <trans-unit id="2cec5e9d524ee503d0db65a73e5d1d4bf9d0a309" translate="yes" xml:space="preserve">
          <source>Attribute &quot;height&quot;</source>
          <target state="translated">属性 &quot;高さ&quot;</target>
        </trans-unit>
        <trans-unit id="e5d7228653834d586a0c0119bd73b47e18c0abaa" translate="yes" xml:space="preserve">
          <source>Attribute &quot;href&quot;</source>
          <target state="translated">属性 &quot;href&quot;</target>
        </trans-unit>
        <trans-unit id="279e87bbcc72d5e42d42322c90e84bede0230d74" translate="yes" xml:space="preserve">
          <source>Attribute &quot;hspace&quot;</source>
          <target state="translated">属性 &quot;hspace&quot;</target>
        </trans-unit>
        <trans-unit id="487dd75a0847962212bf777cc1e9c9ac33cbd0a8" translate="yes" xml:space="preserve">
          <source>Attribute &quot;http-equiv&quot;</source>
          <target state="translated">属性 &quot;http-equiv&quot;</target>
        </trans-unit>
        <trans-unit id="80234c1f126e67c2c7c30e415340e962b68815a4" translate="yes" xml:space="preserve">
          <source>Attribute &quot;id&quot;</source>
          <target state="translated">属性 &quot;id&quot;</target>
        </trans-unit>
        <trans-unit id="b3a3bbc2210b9130799fbc5f99ca900fb185e66e" translate="yes" xml:space="preserve">
          <source>Attribute &quot;ismap&quot;</source>
          <target state="translated">属性 &quot;ismap&quot;</target>
        </trans-unit>
        <trans-unit id="d4799df3f9b021b0c07d96f3437597cd79acbf8a" translate="yes" xml:space="preserve">
          <source>Attribute &quot;lang&quot;</source>
          <target state="translated">属性 &quot;lang&quot;</target>
        </trans-unit>
        <trans-unit id="0cdc5da0e965c514cb1fd221ed4ea6f71ff17b13" translate="yes" xml:space="preserve">
          <source>Attribute &quot;language&quot;</source>
          <target state="translated">属性 &quot;言語&quot;</target>
        </trans-unit>
        <trans-unit id="379ff5779ae80df34f4b17dc2295fb8a147c88ef" translate="yes" xml:space="preserve">
          <source>Attribute &quot;link&quot;</source>
          <target state="translated">属性 &quot;link&quot;</target>
        </trans-unit>
        <trans-unit id="1b0f407567599df2dc8609ab681e6171e9f594e4" translate="yes" xml:space="preserve">
          <source>Attribute &quot;lowsrc&quot;</source>
          <target state="translated">属性 &quot;lowsrc&quot;</target>
        </trans-unit>
        <trans-unit id="d4206280c486f63c6908220ee7f33733a525de8a" translate="yes" xml:space="preserve">
          <source>Attribute &quot;marginheight&quot;</source>
          <target state="translated">属性 &quot;marginheight&quot;</target>
        </trans-unit>
        <trans-unit id="3d27f0bdb91d08c90282b0b27916feb086f34fcd" translate="yes" xml:space="preserve">
          <source>Attribute &quot;marginwidth&quot;</source>
          <target state="translated">属性 &quot;marginwidth&quot;</target>
        </trans-unit>
        <trans-unit id="a51829a31292c5026e133fddd0455d03e71af89f" translate="yes" xml:space="preserve">
          <source>Attribute &quot;maxlength&quot;</source>
          <target state="translated">属性 &quot;maxlength&quot;</target>
        </trans-unit>
        <trans-unit id="45f465cb9c2c055357388dafd1f047241d8cf747" translate="yes" xml:space="preserve">
          <source>Attribute &quot;method&quot;</source>
          <target state="translated">属性 &quot;メソッド&quot;</target>
        </trans-unit>
        <trans-unit id="f83ce28c8b57f4cf3844bb5347bb4e343b9ef3c0" translate="yes" xml:space="preserve">
          <source>Attribute &quot;multiple&quot;</source>
          <target state="translated">属性 &quot;複数&quot;</target>
        </trans-unit>
        <trans-unit id="80814a550be2d7fd8093aeff77d30d01c22a9124" translate="yes" xml:space="preserve">
          <source>Attribute &quot;n&quot;</source>
          <target state="translated">属性 &quot;n&quot;</target>
        </trans-unit>
        <trans-unit id="6f9a08dc3bf37df0ae84b1cc414da73384a5b680" translate="yes" xml:space="preserve">
          <source>Attribute &quot;name&quot;</source>
          <target state="translated">属性 &quot;名前&quot;</target>
        </trans-unit>
        <trans-unit id="645f90a9ec5d4f49446d071b880fd638cb9da121" translate="yes" xml:space="preserve">
          <source>Attribute &quot;nohref&quot;</source>
          <target state="translated">属性 &quot;nohref&quot;</target>
        </trans-unit>
        <trans-unit id="e205ca008476cebf8e06286a18b3cf5bf79556c1" translate="yes" xml:space="preserve">
          <source>Attribute &quot;noresize&quot;</source>
          <target state="translated">属性 &quot;noresize&quot;</target>
        </trans-unit>
        <trans-unit id="b73468ae897e4cd21ca9be3c4185d4a92c6e22d8" translate="yes" xml:space="preserve">
          <source>Attribute &quot;noshade&quot;</source>
          <target state="translated">属性 &quot;ノシェード&quot;</target>
        </trans-unit>
        <trans-unit id="7dd89ee6a099ef8adc7fd673858a33917c633b90" translate="yes" xml:space="preserve">
          <source>Attribute &quot;nowrap&quot;</source>
          <target state="translated">属性 &quot;nowrap&quot;</target>
        </trans-unit>
        <trans-unit id="6c435c85bf1bda043aaedbcbc2f136b7ee9ab3f6" translate="yes" xml:space="preserve">
          <source>Attribute &quot;prompt&quot;</source>
          <target state="translated">属性 &quot;プロンプト&quot;</target>
        </trans-unit>
        <trans-unit id="bae65c0ff538c715abfa6bc1d19ca6a98555e354" translate="yes" xml:space="preserve">
          <source>Attribute &quot;rel&quot;</source>
          <target state="translated">属性 &quot;rel&quot;</target>
        </trans-unit>
        <trans-unit id="1c1542d5755ae2fc2b68a5effa41bdea4c9c6ba4" translate="yes" xml:space="preserve">
          <source>Attribute &quot;rev&quot;</source>
          <target state="translated">属性 &quot;rev&quot;</target>
        </trans-unit>
        <trans-unit id="eb010417cf2cb27e9393cf9ddf406780b744858a" translate="yes" xml:space="preserve">
          <source>Attribute &quot;rows&quot;</source>
          <target state="translated">属性 &quot;行&quot;</target>
        </trans-unit>
        <trans-unit id="98d6313da2fd522c2be8548f7712428f44dda998" translate="yes" xml:space="preserve">
          <source>Attribute &quot;rowspan&quot;</source>
          <target state="translated">属性 &quot;rowspan&quot;</target>
        </trans-unit>
        <trans-unit id="256479ad80a82612cebff2c4550e990848c36d53" translate="yes" xml:space="preserve">
          <source>Attribute &quot;scrolling&quot;</source>
          <target state="translated">属性 &quot;スクロール&quot;</target>
        </trans-unit>
        <trans-unit id="cf876a8edf7775b7ca32b65a73604b26c1d2c681" translate="yes" xml:space="preserve">
          <source>Attribute &quot;selected&quot;</source>
          <target state="translated">属性 &quot;selected&quot;</target>
        </trans-unit>
        <trans-unit id="bcc033cc1cb7a15c8c5f2254eb468684cbf890fa" translate="yes" xml:space="preserve">
          <source>Attribute &quot;shape&quot;</source>
          <target state="translated">属性 &quot;形&quot;</target>
        </trans-unit>
        <trans-unit id="2ca8ff59001568ace9399ef6c48420745ce12204" translate="yes" xml:space="preserve">
          <source>Attribute &quot;shapes&quot;</source>
          <target state="translated">属性 &quot;形&quot;</target>
        </trans-unit>
        <trans-unit id="c42d5e0ed8f0205ee4916a01bd743fad6228ce08" translate="yes" xml:space="preserve">
          <source>Attribute &quot;size&quot;</source>
          <target state="translated">属性 &quot;サイズ&quot;</target>
        </trans-unit>
        <trans-unit id="3ea1810bdf3ac614a03f8fea86f0376038bf59ac" translate="yes" xml:space="preserve">
          <source>Attribute &quot;src&quot;</source>
          <target state="translated">属性 &quot;src&quot;</target>
        </trans-unit>
        <trans-unit id="f78695fdebddccace4581f0acbc86e620a7fa3ac" translate="yes" xml:space="preserve">
          <source>Attribute &quot;standby&quot;</source>
          <target state="translated">属性 &quot;スタンバイ&quot;</target>
        </trans-unit>
        <trans-unit id="a0e58b24a3196fd243d9a7fa31a0ae84d37a2cb2" translate="yes" xml:space="preserve">
          <source>Attribute &quot;start&quot;</source>
          <target state="translated">属性 &quot;start&quot;</target>
        </trans-unit>
        <trans-unit id="905f8962499a8669279ede6172b74dc54cbe5962" translate="yes" xml:space="preserve">
          <source>Attribute &quot;style&quot;</source>
          <target state="translated">属性 &quot;スタイル&quot;</target>
        </trans-unit>
        <trans-unit id="96991357b3e0fa570b23d0b7807ef6fd20013d63" translate="yes" xml:space="preserve">
          <source>Attribute &quot;target&quot;</source>
          <target state="translated">属性 &quot;target&quot;</target>
        </trans-unit>
        <trans-unit id="118676d2bf6f462f05ba6f42c38fa56fb86fb834" translate="yes" xml:space="preserve">
          <source>Attribute &quot;text&quot;</source>
          <target state="translated">属性 &quot;text&quot;</target>
        </trans-unit>
        <trans-unit id="1801bf6123ce16564b036837fb7c4fc60aa137da" translate="yes" xml:space="preserve">
          <source>Attribute &quot;title&quot;</source>
          <target state="translated">属性 &quot;title&quot;</target>
        </trans-unit>
        <trans-unit id="0a773c948a514b190a0b93e6d52461ff1be84096" translate="yes" xml:space="preserve">
          <source>Attribute &quot;type&quot;</source>
          <target state="translated">属性 &quot;型&quot;</target>
        </trans-unit>
        <trans-unit id="c330c675cfead2aa89057ac38e8778f2c7c4ba30" translate="yes" xml:space="preserve">
          <source>Attribute &quot;usemap&quot;</source>
          <target state="translated">属性 &quot;usemap&quot;</target>
        </trans-unit>
        <trans-unit id="f3af8ce58dfa614239b9c15138b64eb207ac43aa" translate="yes" xml:space="preserve">
          <source>Attribute &quot;valign&quot;</source>
          <target state="translated">属性 &quot;valign&quot;</target>
        </trans-unit>
        <trans-unit id="e7fd79f9fca54f323b1585e12cab3f155efe3e47" translate="yes" xml:space="preserve">
          <source>Attribute &quot;value&quot;</source>
          <target state="translated">属性 &quot;値&quot;</target>
        </trans-unit>
        <trans-unit id="85cea173aefbc7416d84ec3b7102208b85a5281f" translate="yes" xml:space="preserve">
          <source>Attribute &quot;valuetype&quot;</source>
          <target state="translated">属性 &quot;valuetype&quot;</target>
        </trans-unit>
        <trans-unit id="0b5d8c549d5aa82a534a5f34468ff880d052e3c4" translate="yes" xml:space="preserve">
          <source>Attribute &quot;version&quot;</source>
          <target state="translated">属性 &quot;バージョン&quot;</target>
        </trans-unit>
        <trans-unit id="8b4cf85002f233874b0aa734deb7d7986874d2a7" translate="yes" xml:space="preserve">
          <source>Attribute &quot;vlink&quot;</source>
          <target state="translated">属性 &quot;vlink&quot;</target>
        </trans-unit>
        <trans-unit id="e376db3e62323def2c70aab0f1523d129ce56f77" translate="yes" xml:space="preserve">
          <source>Attribute &quot;vspace&quot;</source>
          <target state="translated">属性 &quot;対空間&quot;</target>
        </trans-unit>
        <trans-unit id="3c5753744849e563f00c6ccf6b67c6d80f27854a" translate="yes" xml:space="preserve">
          <source>Attribute &quot;width&quot;</source>
          <target state="translated">属性 &quot;width&quot;</target>
        </trans-unit>
        <trans-unit id="0fa78cf5f77109ee8d2345b1e78803eff12be467" translate="yes" xml:space="preserve">
          <source>Attribute Categories and Values</source>
          <target state="translated">属性カテゴリと値</target>
        </trans-unit>
        <trans-unit id="fe462099fbeb57d289ce57cd51b118b84d30152b" translate="yes" xml:space="preserve">
          <source>Attribute Class</source>
          <target state="translated">属性クラス</target>
        </trans-unit>
        <trans-unit id="a6a810f301b05f92afd25065b6c635a955c44733" translate="yes" xml:space="preserve">
          <source>Attribute Class Design</source>
          <target state="translated">属性クラスの設計</target>
        </trans-unit>
        <trans-unit id="97721ba9e20d1849ae5553431ccee726ba5ea302" translate="yes" xml:space="preserve">
          <source>Attribute Definitions</source>
          <target state="translated">属性の定義</target>
        </trans-unit>
        <trans-unit id="fba6dde6b753e94bee2517dee184260571238379" translate="yes" xml:space="preserve">
          <source>Attribute Models</source>
          <target state="translated">属性モデル</target>
        </trans-unit>
        <trans-unit id="d3eab3fab536d255dc6845c496d77591c6825885" translate="yes" xml:space="preserve">
          <source>Attribute Name</source>
          <target state="translated">属性名</target>
        </trans-unit>
        <trans-unit id="19a0e7f7702aa95455439b1ec47be40a9e348c82" translate="yes" xml:space="preserve">
          <source>Attribute Organization</source>
          <target state="translated">属性構成</target>
        </trans-unit>
        <trans-unit id="11bb9852caceea65a561c3b9c61b2071d465df85" translate="yes" xml:space="preserve">
          <source>Attribute Roles</source>
          <target state="translated">属性の役割</target>
        </trans-unit>
        <trans-unit id="8bb2a09d77d10c08a15d2433e8a79e376bfddd43" translate="yes" xml:space="preserve">
          <source>Attribute Sets</source>
          <target state="translated">属性セット</target>
        </trans-unit>
        <trans-unit id="3e605d901898148c780749bd66ccf500fe3ac283" translate="yes" xml:space="preserve">
          <source>Attribute Table</source>
          <target state="translated">属性表</target>
        </trans-unit>
        <trans-unit id="4b280e979e69b4599ffa47b810c1cf118f67fcd7" translate="yes" xml:space="preserve">
          <source>Attribute Type Names</source>
          <target state="translated">属性タイプ名</target>
        </trans-unit>
        <trans-unit id="ebb1576107ec9d1827a70fca006dbabf5765db6d" translate="yes" xml:space="preserve">
          <source>Attribute Vendors</source>
          <target state="translated">属性ベンダー</target>
        </trans-unit>
        <trans-unit id="7a6cd99c2368a4b510d0c7f702e52e143f2381b1" translate="yes" xml:space="preserve">
          <source>Attribute category name.</source>
          <target state="translated">属性カテゴリ名。</target>
        </trans-unit>
        <trans-unit id="ff3fedaac74206a10a92c83ec7f28cfb8bc0c8e8" translate="yes" xml:space="preserve">
          <source>Attribute comparision for removal is case-insensitive.</source>
          <target state="translated">除去のための属性比較は大文字小文字を区別しません。</target>
        </trans-unit>
        <trans-unit id="87ae92c3a48d07c798ec5ccc46f322a6a39f5104" translate="yes" xml:space="preserve">
          <source>Attribute comparison for removal is case-insensitive.</source>
          <target state="translated">除去のための属性比較は大文字小文字を区別しません。</target>
        </trans-unit>
        <trans-unit id="d4be85a5e0670f1b4d4462529b19f03481c41098" translate="yes" xml:space="preserve">
          <source>Attribute key for a user-defined glyph to display in lieu of the font's standard glyph for a character.</source>
          <target state="translated">キ ャ ラ ク タ に対する フ ォ ン ト の標準グ リ フ のかわ り に表示 さ せたいユーザー定義グ リ フ の属性キー。</target>
        </trans-unit>
        <trans-unit id="5c92e6966898341728468895b7f081c62a908a05" translate="yes" xml:space="preserve">
          <source>Attribute key for a user-defined glyph to display in lieu of the font's standard glyph for a character. Values are instances of GraphicAttribute. The default value is null, indicating that the standard glyphs provided by the font should be used.</source>
          <target state="translated">1 個のキ ャ ラ ク タ に対す る フ ォ ン ト の標準グ リ フ のかわ り に表示 さ せたいユーザー定義のグ リ フ のための属性キー。値は GraphicAttribute のインスタンスです。デフ ォル ト 値は null で、 フ ォ ン ト が与え る 標準グ リ フ を用い る べ き であ る こ と を示 し ます。</target>
        </trans-unit>
        <trans-unit id="1a3c409b053ed012557c34cd302067ff5e8a3984" translate="yes" xml:space="preserve">
          <source>Attribute key for converting ASCII decimal digits to other decimal ranges.</source>
          <target state="translated">ASCIIの10進数を他の10進数範囲に変換するための属性キーです。</target>
        </trans-unit>
        <trans-unit id="f1ba6d3b10bacf9e181b8585ba9bc46aaddfc3af" translate="yes" xml:space="preserve">
          <source>Attribute key for converting ASCII decimal digits to other decimal ranges. Values are instances of &lt;a href=&quot;numericshaper&quot;&gt;&lt;code&gt;NumericShaper&lt;/code&gt;&lt;/a&gt;. The default is &lt;code&gt;null&lt;/code&gt;, which means do not perform numeric shaping.</source>
          <target state="translated">Attribute key for converting ASCII decimal digits to other decimal ranges. Values are instances of &lt;a href=&quot;numericshaper&quot;&gt; &lt;code&gt;NumericShaper&lt;/code&gt; &lt;/a&gt;. The default is &lt;code&gt;null&lt;/code&gt; , which means do not perform numeric shaping.</target>
        </trans-unit>
        <trans-unit id="9b740e44927f39eaf8950fffcf0f9efcf1530538" translate="yes" xml:space="preserve">
          <source>Attribute key for enabling optional ligatures.</source>
          <target state="translated">オプションの合字を有効にするための属性キー。</target>
        </trans-unit>
        <trans-unit id="07bc11226c73ed40228012649ec520f6caf0b4a0" translate="yes" xml:space="preserve">
          <source>Attribute key for enabling optional ligatures. Values are instances of &lt;b&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/b&gt;. The default value is &lt;code&gt;0&lt;/code&gt;, which means do not use optional ligatures.</source>
          <target state="translated">Attribute key for enabling optional ligatures. Values are instances of &lt;b&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/b&gt;. The default value is &lt;code&gt;0&lt;/code&gt; , which means do not use optional ligatures.</target>
        </trans-unit>
        <trans-unit id="f046cd26540bd1f686ed4ca371b63dec56420bfd" translate="yes" xml:space="preserve">
          <source>Attribute key for input method highlight styles.</source>
          <target state="translated">入力メソッドのハイライトスタイルの属性キー。</target>
        </trans-unit>
        <trans-unit id="6598c5b52689907a6bc0f1df3758474bd82ba83f" translate="yes" xml:space="preserve">
          <source>Attribute key for input method segments.</source>
          <target state="translated">入力メソッドセグメントの属性キー。</target>
        </trans-unit>
        <trans-unit id="06bb63469b1981a729e25e73a00f91b77e2cda68" translate="yes" xml:space="preserve">
          <source>Attribute key for input method segments. Input methods often break up text into segments, which usually correspond to words.</source>
          <target state="translated">入力メソッドのセグメントの属性キー。入力メソッドは、テキストを通常単語に対応するセグメントに分割することが多いです。</target>
        </trans-unit>
        <trans-unit id="160b7092a99d9e1ff21ca61a346a953ce81d6ae4" translate="yes" xml:space="preserve">
          <source>Attribute key for input method underlines.</source>
          <target state="translated">入力方法の属性キーに下線を付けます。</target>
        </trans-unit>
        <trans-unit id="30b864c25cfac2eedc2561e430c74f8122a5c68b" translate="yes" xml:space="preserve">
          <source>Attribute key for input method underlines. Values are instances of &lt;b&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/b&gt;. The default value is &lt;code&gt;-1&lt;/code&gt;, which means no underline.</source>
          <target state="translated">Attribute key for input method underlines. Values are instances of &lt;b&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/b&gt;. The default value is &lt;code&gt;-1&lt;/code&gt; , which means no underline.</target>
        </trans-unit>
        <trans-unit id="ceb12c22a5a7dd8c32b262a85e7f6736d5f365b8" translate="yes" xml:space="preserve">
          <source>Attribute key for strikethrough.</source>
          <target state="translated">ストライクスルーの属性キー。</target>
        </trans-unit>
        <trans-unit id="4d0663d2245be5f6f7d86542f9a18c33b0ef8fad" translate="yes" xml:space="preserve">
          <source>Attribute key for strikethrough. Values are instances of &lt;b&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/b&gt;. The default value is &lt;code&gt;false&lt;/code&gt;, which means no strikethrough.</source>
          <target state="translated">Attribute key for strikethrough. Values are instances of &lt;b&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/b&gt;. The default value is &lt;code&gt;false&lt;/code&gt; , which means no strikethrough.</target>
        </trans-unit>
        <trans-unit id="195071fb34e193540787ad53a259f962b7599eec" translate="yes" xml:space="preserve">
          <source>Attribute key for superscripting and subscripting.</source>
          <target state="translated">上付きと下付きの属性キー。</target>
        </trans-unit>
        <trans-unit id="5781ddd6731708baad48965dd7531fb4b943ccdd" translate="yes" xml:space="preserve">
          <source>Attribute key for superscripting and subscripting. Values are instances of &lt;b&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/b&gt;. The default value is 0, which means that no superscript or subscript is used.</source>
          <target state="translated">Attribute key for superscripting and subscripting. Values are instances of &lt;b&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/b&gt;. The default value is 0, which means that no superscript or subscript is used.</target>
        </trans-unit>
        <trans-unit id="58bde5e0e379df4030663c2eda77a533fe437d8b" translate="yes" xml:space="preserve">
          <source>Attribute key for swapping foreground and background &lt;code&gt;Paints&lt;/code&gt;.</source>
          <target state="translated">Attribute key for swapping foreground and background &lt;code&gt;Paints&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ce406795e62fd07cf12baa893aeb60290a1eb35" translate="yes" xml:space="preserve">
          <source>Attribute key for swapping foreground and background &lt;code&gt;Paints&lt;/code&gt;. Values are instances of &lt;b&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/b&gt;. The default value is &lt;code&gt;false&lt;/code&gt;, which means do not swap colors.</source>
          <target state="translated">Attribute key for swapping foreground and background &lt;code&gt;Paints&lt;/code&gt; . Values are instances of &lt;b&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/b&gt;. The default value is &lt;code&gt;false&lt;/code&gt; , which means do not swap colors.</target>
        </trans-unit>
        <trans-unit id="c750683c022ab72fe6fb8a72c44294f03583a422" translate="yes" xml:space="preserve">
          <source>Attribute key for the embedding level of the text.</source>
          <target state="translated">テキストの埋め込みレベルの属性キー。</target>
        </trans-unit>
        <trans-unit id="e49f76677489eda4f6f191d65a12da601f0ad7b6" translate="yes" xml:space="preserve">
          <source>Attribute key for the embedding level of the text. Values are instances of &lt;b&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/b&gt;. The default value is &lt;code&gt;null&lt;/code&gt;, indicating that the Bidirectional algorithm should run without explicit embeddings.</source>
          <target state="translated">テキストの埋め込みレベルの属性キー。値は&lt;b&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/b&gt;インスタンスです。デフォルト値は &lt;code&gt;null&lt;/code&gt; であり、双方向アルゴリズムが明示的な埋め込みなしで実行される必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="7ac629421c07e0f6fec94cfbec468c74ebe2ed3b" translate="yes" xml:space="preserve">
          <source>Attribute key for the font name.</source>
          <target state="translated">フォント名の属性キー。</target>
        </trans-unit>
        <trans-unit id="acf773f531285938ec32ec52e021f947580d5f7b" translate="yes" xml:space="preserve">
          <source>Attribute key for the font name. Values are instances of &lt;b&gt;&lt;code&gt;String&lt;/code&gt;&lt;/b&gt;. The default value is &lt;code&gt;&quot;Default&quot;&lt;/code&gt;, which causes the platform default font family to be used.</source>
          <target state="translated">フォント名の属性キー。値は&lt;b&gt; &lt;code&gt;String&lt;/code&gt; の&lt;/b&gt;インスタンスです。デフォルト値は &lt;code&gt;&quot;Default&quot;&lt;/code&gt; 。これにより、プラットフォームのデフォルトのフォントファミリが使用されます。</target>
        </trans-unit>
        <trans-unit id="1f46655c382ba4d3c87d02556fb2e994724ef36e" translate="yes" xml:space="preserve">
          <source>Attribute key for the font size.</source>
          <target state="translated">フォントサイズの属性キー。</target>
        </trans-unit>
        <trans-unit id="5a8eeb3be0920f9002867b69f93092e97c9e98e0" translate="yes" xml:space="preserve">
          <source>Attribute key for the font size. Values are instances of &lt;b&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/b&gt;. The default value is 12pt.</source>
          <target state="translated">フォントサイズの属性キー。値は&lt;b&gt; &lt;code&gt;Number&lt;/code&gt; の&lt;/b&gt;インスタンスです。デフォルト値は12ptです。</target>
        </trans-unit>
        <trans-unit id="c1a9115f5047e83d30377b61bc23ba46a93886a5" translate="yes" xml:space="preserve">
          <source>Attribute key for the justification of a paragraph.</source>
          <target state="translated">段落の正当化のための属性キー。</target>
        </trans-unit>
        <trans-unit id="1c4e96ea38551948376847e6d224ad00ebb6074e" translate="yes" xml:space="preserve">
          <source>Attribute key for the justification of a paragraph. Values are instances of &lt;b&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/b&gt;. The default value is 1, indicating that justification should use the full width provided. Values are pinned to the range [0..1].</source>
          <target state="translated">段落を正当化するための属性キー。値は&lt;b&gt; &lt;code&gt;Number&lt;/code&gt; の&lt;/b&gt;インスタンスです。デフォルト値は1で、位置合わせでは指定された全幅を使用する必要があることを示します。値は[0..1]の範囲に固定されます。</target>
        </trans-unit>
        <trans-unit id="1763e88e09dc6d43cedd1f10ad9bcf0ec4a4f184" translate="yes" xml:space="preserve">
          <source>Attribute key for the language of some text.</source>
          <target state="translated">テキストの言語の属性キー。</target>
        </trans-unit>
        <trans-unit id="8c4e0354ceb5903db7a33d80d8ac117f7e2c534a" translate="yes" xml:space="preserve">
          <source>Attribute key for the paint used to render the background of the text.</source>
          <target state="translated">テキストの背景をレンダリングするために使用されるペイントの属性キー。</target>
        </trans-unit>
        <trans-unit id="1e3115a14c00d4c6751c7f451714f90198ac9eaf" translate="yes" xml:space="preserve">
          <source>Attribute key for the paint used to render the background of the text. Values are instances of &lt;b&gt;&lt;code&gt;Paint&lt;/code&gt;&lt;/b&gt;. The default value is null, indicating that the background should not be rendered.</source>
          <target state="translated">テキストの背景をレンダリングするために使用されるペイントの属性キー。値は&lt;b&gt; &lt;code&gt;Paint&lt;/code&gt; の&lt;/b&gt;インスタンスです。デフォルト値はnullで、背景をレンダリングしないことを示します。</target>
        </trans-unit>
        <trans-unit id="51ba3fd84e657cf68ac1a8f2b0d144e3f45b6663" translate="yes" xml:space="preserve">
          <source>Attribute key for the paint used to render the text.</source>
          <target state="translated">テキストのレンダリングに使用されるペイントの属性キー。</target>
        </trans-unit>
        <trans-unit id="ae87e5d71a2771d14758a8efdcbeb485d67c30d0" translate="yes" xml:space="preserve">
          <source>Attribute key for the paint used to render the text. Values are instances of &lt;b&gt;&lt;code&gt;Paint&lt;/code&gt;&lt;/b&gt;. The default value is null, indicating that the &lt;code&gt;Paint&lt;/code&gt; set on the &lt;code&gt;Graphics2D&lt;/code&gt; at the time of rendering is used.</source>
          <target state="translated">テキストのレンダリングに使用されるペイントの属性キー。値は&lt;b&gt; &lt;code&gt;Paint&lt;/code&gt; の&lt;/b&gt;インスタンスです。デフォルト値はnullで、レンダリング時に &lt;code&gt;Graphics2D&lt;/code&gt; に設定された &lt;code&gt;Paint&lt;/code&gt; が使用されることを示します。</target>
        </trans-unit>
        <trans-unit id="11b0b36dcaa08b0ed65d2036701a34707e129f4f" translate="yes" xml:space="preserve">
          <source>Attribute key for the posture of a font.</source>
          <target state="translated">フォントの姿勢を表す属性キー。</target>
        </trans-unit>
        <trans-unit id="3c83eb8ee020b68316449823cc9ca322089c49a6" translate="yes" xml:space="preserve">
          <source>Attribute key for the posture of a font. Values are instances of &lt;b&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/b&gt;. The default value is &lt;code&gt;POSTURE_REGULAR&lt;/code&gt;.</source>
          <target state="translated">フォントのポスチャの属性キー。値は&lt;b&gt; &lt;code&gt;Number&lt;/code&gt; の&lt;/b&gt;インスタンスです。デフォルト値は &lt;code&gt;POSTURE_REGULAR&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="97642bd11dc777f2aa0bbe08e7466d9352280693" translate="yes" xml:space="preserve">
          <source>Attribute key for the reading of some text.</source>
          <target state="translated">一部のテキストを読み取るための属性キー。</target>
        </trans-unit>
        <trans-unit id="72a0bdbf46107e1743137445e7c5aabb9b88bf5f" translate="yes" xml:space="preserve">
          <source>Attribute key for the reading of some text. In languages where the written form and the pronunciation of a word are only loosely related (such as Japanese), it is often necessary to store the reading (pronunciation) along with the written form.</source>
          <target state="translated">あるテキストの読みの属性キー。日本語のように、単語の書き方と発音がゆるやかに関係しているだけの言語では、読み方(発音)を書き方と一緒に保存しておく必要があることが多い。</target>
        </trans-unit>
        <trans-unit id="ceac611da52fa23ea3a3a0b7cd6e2959436735d1" translate="yes" xml:space="preserve">
          <source>Attribute key for the run direction of the line.</source>
          <target state="translated">ラインの走行方向の属性キーです。</target>
        </trans-unit>
        <trans-unit id="00aa745258da96c6b164241ab05f846bcdf05b6f" translate="yes" xml:space="preserve">
          <source>Attribute key for the run direction of the line. Values are instances of &lt;b&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/b&gt;. The default value is null, which indicates that the standard Bidi algorithm for determining run direction should be used with the value &lt;a href=&quot;../../../../java.base/java/text/bidi#DIRECTION_DEFAULT_LEFT_TO_RIGHT&quot;&gt;&lt;code&gt;Bidi.DIRECTION_DEFAULT_LEFT_TO_RIGHT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ラインの実行方向の属性キー。値は&lt;b&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/b&gt;値のインスタンスです。デフォルト値はnullです。これは、実行方向を決定するための標準のBidiアルゴリズムを値&lt;a href=&quot;../../../../java.base/java/text/bidi#DIRECTION_DEFAULT_LEFT_TO_RIGHT&quot;&gt; &lt;code&gt;Bidi.DIRECTION_DEFAULT_LEFT_TO_RIGHT&lt;/code&gt; &lt;/a&gt;とともに使用する必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="e5c77291ae5a2f86dc3a37e31f56d50f04ef71ba" translate="yes" xml:space="preserve">
          <source>Attribute key for the transform of a font.</source>
          <target state="translated">フォントの変換のための属性キー。</target>
        </trans-unit>
        <trans-unit id="37654a9a874c0099e79430bdec8710515840189e" translate="yes" xml:space="preserve">
          <source>Attribute key for the transform of a font. Values are instances of &lt;b&gt;&lt;code&gt;TransformAttribute&lt;/code&gt;&lt;/b&gt;. The default value is &lt;code&gt;TransformAttribute.IDENTITY&lt;/code&gt;.</source>
          <target state="translated">フォントの変換用の属性キー。値は&lt;b&gt; &lt;code&gt;TransformAttribute&lt;/code&gt; の&lt;/b&gt;インスタンスです。デフォルト値は &lt;code&gt;TransformAttribute.IDENTITY&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cfa4e80d5b93173dd2e5f32c15d055e902b9a71b" translate="yes" xml:space="preserve">
          <source>Attribute key for the weight of a font.</source>
          <target state="translated">フォントの重さを表す属性キー。</target>
        </trans-unit>
        <trans-unit id="553fab12547eb90660bd604f8dc53a721e11aae5" translate="yes" xml:space="preserve">
          <source>Attribute key for the weight of a font. Values are instances of &lt;b&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/b&gt;. The default value is &lt;code&gt;WEIGHT_REGULAR&lt;/code&gt;.</source>
          <target state="translated">フォントの太さの属性キー。値は&lt;b&gt; &lt;code&gt;Number&lt;/code&gt; の&lt;/b&gt;インスタンスです。デフォルト値は &lt;code&gt;WEIGHT_REGULAR&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8b777a619a7394f83abefb21c7318fcd618966e2" translate="yes" xml:space="preserve">
          <source>Attribute key for the width of a font.</source>
          <target state="translated">フォントの幅の属性キー。</target>
        </trans-unit>
        <trans-unit id="92d8a7dfaf1dbdee8648b9c83fac1af4cccecefc" translate="yes" xml:space="preserve">
          <source>Attribute key for the width of a font. Values are instances of &lt;b&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/b&gt;. The default value is &lt;code&gt;WIDTH_REGULAR&lt;/code&gt;.</source>
          <target state="translated">フォントの幅の属性キー。値は&lt;b&gt; &lt;code&gt;Number&lt;/code&gt; の&lt;/b&gt;インスタンスです。デフォルト値は &lt;code&gt;WIDTH_REGULAR&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c350aae1e84531daa8ecd068683287004b12deca" translate="yes" xml:space="preserve">
          <source>Attribute key for underline.</source>
          <target state="translated">下線の属性キー。</target>
        </trans-unit>
        <trans-unit id="4e474053f077adae092dcbb00e60f3881c78a405" translate="yes" xml:space="preserve">
          <source>Attribute key for underline. Values are instances of &lt;b&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/b&gt;. The default value is -1, which means no underline.</source>
          <target state="translated">下線の属性キー。値は&lt;b&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/b&gt;インスタンスです。デフォルト値は-1で、下線がないことを意味します。</target>
        </trans-unit>
        <trans-unit id="3ad597f2a05c4c669b6d334107a31224b5e2a218" translate="yes" xml:space="preserve">
          <source>Attribute key to control tracking.</source>
          <target state="translated">トラッキングを制御するための属性キー。</target>
        </trans-unit>
        <trans-unit id="2ee21730574cdb74859b5eec5d7a19f678e00969" translate="yes" xml:space="preserve">
          <source>Attribute key to control tracking. Values are instances of &lt;b&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/b&gt;. The default value is &lt;code&gt;0&lt;/code&gt;, which means no additional tracking.</source>
          <target state="translated">追跡を制御するための属性キー。値は&lt;b&gt; &lt;code&gt;Number&lt;/code&gt; の&lt;/b&gt;インスタンスです。デフォルト値は &lt;code&gt;0&lt;/code&gt; です。これは、追加の追跡がないことを意味します。</target>
        </trans-unit>
        <trans-unit id="bc487a3628d77b94a799aeb350fd09738050c34a" translate="yes" xml:space="preserve">
          <source>Attribute key to request kerning.</source>
          <target state="translated">カーニングを要求するための属性キー。</target>
        </trans-unit>
        <trans-unit id="1f68bb0e873d1b2a333771327484d639ff1f2cfb" translate="yes" xml:space="preserve">
          <source>Attribute key to request kerning. Values are instances of &lt;b&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/b&gt;. The default value is &lt;code&gt;0&lt;/code&gt;, which does not request kerning.</source>
          <target state="translated">カーニングを要求するための属性キー。値は&lt;b&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/b&gt;インスタンスです。デフォルト値は &lt;code&gt;0&lt;/code&gt; で、カーニングを要求しません。</target>
        </trans-unit>
        <trans-unit id="07e1c8dc5acd338cacb6fd294785ab60c26c674b" translate="yes" xml:space="preserve">
          <source>Attribute key used to provide the font to use to render text.</source>
          <target state="translated">テキストをレンダリングする際に使用するフォントを指定するために使用される属性キー。</target>
        </trans-unit>
        <trans-unit id="9f7e84b97fceb42a37988833e9e293b65b953253" translate="yes" xml:space="preserve">
          <source>Attribute key used to provide the font to use to render text. Values are instances of &lt;a href=&quot;../font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt;. The default value is null, indicating that normal resolution of a &lt;code&gt;Font&lt;/code&gt; from attributes should be performed.</source>
          <target state="translated">テキストのレンダリングに使用するフォントを提供するために使用される属性キー。値は&lt;a href=&quot;../font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; の&lt;/a&gt;インスタンスです。デフォルト値はnullであり、属性からの &lt;code&gt;Font&lt;/code&gt; 通常の解決を実行する必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="16caf8bd426a6fc6a48bd24f5de71ddd184e9556" translate="yes" xml:space="preserve">
          <source>Attribute keys are instances of &lt;a href=&quot;attributedcharacteriterator.attribute&quot;&gt;&lt;code&gt;AttributedCharacterIterator.Attribute&lt;/code&gt;&lt;/a&gt; and its subclasses, such as &lt;a href=&quot;../../../java.desktop/java/awt/font/textattribute&quot;&gt;&lt;code&gt;TextAttribute&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">属性キーは、&lt;a href=&quot;attributedcharacteriterator.attribute&quot;&gt; &lt;code&gt;AttributedCharacterIterator.Attribute&lt;/code&gt; &lt;/a&gt;とそのサブクラス（&lt;a href=&quot;../../../java.desktop/java/awt/font/textattribute&quot;&gt; &lt;code&gt;TextAttribute&lt;/code&gt; &lt;/a&gt;など）のインスタンスです。</target>
        </trans-unit>
        <trans-unit id="43adb91b31278aaa1bd3a8eb6504920c59755104" translate="yes" xml:space="preserve">
          <source>Attribute keys are instances of &lt;a href=&quot;attributedcharacteriterator.attribute&quot;&gt;&lt;code&gt;AttributedCharacterIterator.Attribute&lt;/code&gt;&lt;/a&gt; and its subclasses, such as &lt;a href=&quot;/openjdk~8_gui/java/awt/font/textattribute&quot;&gt;&lt;code&gt;TextAttribute&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">属性キーは、&lt;a href=&quot;attributedcharacteriterator.attribute&quot;&gt; &lt;code&gt;AttributedCharacterIterator.Attribute&lt;/code&gt; &lt;/a&gt;およびそのサブクラス（&lt;a href=&quot;/openjdk~8_gui/java/awt/font/textattribute&quot;&gt; &lt;code&gt;TextAttribute&lt;/code&gt; &lt;/a&gt;など）のインスタンスです。</target>
        </trans-unit>
        <trans-unit id="a6538a4afec19d693b1a69a58593dbf70c41327a" translate="yes" xml:space="preserve">
          <source>Attribute name used to identify the resolving parent set of attributes, if one is defined.</source>
          <target state="translated">属性の解決親セットを識別するために使用される属性名(定義されている場合)。</target>
        </trans-unit>
        <trans-unit id="f03924edff422f8acb32aa38f92e5b855b7d2394" translate="yes" xml:space="preserve">
          <source>Attribute name used to name the collection of attributes.</source>
          <target state="translated">属性のコレクションの名前に使用される属性名。</target>
        </trans-unit>
        <trans-unit id="83fec686ea42f9931222015f1a57494d93fe654e" translate="yes" xml:space="preserve">
          <source>Attribute name used to specify the &lt;em&gt;name&lt;/em&gt; property of a memory layout (see &lt;a href=&quot;#name()&quot;&gt;&lt;code&gt;name()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#withName(java.lang.String)&quot;&gt;&lt;code&gt;withName(String)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8db7e8cffe657361faaaf56deedf7fa4f39ce959" translate="yes" xml:space="preserve">
          <source>Attribute name.</source>
          <target state="translated">属性名。</target>
        </trans-unit>
        <trans-unit id="bb23c9feb8c8f9b9b58547cf1de84aa00b2ab7e7" translate="yes" xml:space="preserve">
          <source>Attribute nodes with &lt;code&gt;Attr.specified&lt;/code&gt; equals to &lt;code&gt;false&lt;/code&gt;, as specified in the description of the &lt;code&gt;Attr&lt;/code&gt; interface;</source>
          <target state="translated">属性ノード &lt;code&gt;Attr.specified&lt;/code&gt; はに等しい &lt;code&gt;false&lt;/code&gt; の説明で指定され &lt;code&gt;Attr&lt;/code&gt; インタフェース。</target>
        </trans-unit>
        <trans-unit id="67eb757752a348394b9daab37ecff5e31e31ce48" translate="yes" xml:space="preserve">
          <source>Attribute sets are used in several places in the Print Service API. In each context, only certain kinds of attributes are allowed to appear in the attribute set, as determined by the tagging interfaces which the attribute class implements -- &lt;a href=&quot;docattribute&quot;&gt;&lt;code&gt;DocAttribute&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;printrequestattribute&quot;&gt;&lt;code&gt;PrintRequestAttribute&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;printjobattribute&quot;&gt;&lt;code&gt;PrintJobAttribute&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;printserviceattribute&quot;&gt;&lt;code&gt;PrintServiceAttribute&lt;/code&gt;&lt;/a&gt;. There are four specializations of an attribute set that are restricted to contain just one of the four kinds of attribute -- &lt;a href=&quot;docattributeset&quot;&gt;&lt;code&gt;DocAttributeSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;printrequestattributeset&quot;&gt;&lt;code&gt;PrintRequestAttributeSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;printjobattributeset&quot;&gt;&lt;code&gt;PrintJobAttributeSet&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;printserviceattributeset&quot;&gt;&lt;code&gt;PrintServiceAttributeSet&lt;/code&gt;&lt;/a&gt;, respectively. Note that many attribute classes implement more than one tagging interface and so may appear in more than one context.</source>
          <target state="translated">属性セットは、Print Service APIのいくつかの場所で使用されます。各コンテキストでは、属性クラスが実装するタグ付けインターフェイス（&lt;a href=&quot;docattribute&quot;&gt; &lt;code&gt;DocAttribute&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;printrequestattribute&quot;&gt; &lt;code&gt;PrintRequestAttribute&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;printjobattribute&quot;&gt; &lt;code&gt;PrintJobAttribute&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;printserviceattribute&quot;&gt; &lt;code&gt;PrintServiceAttribute&lt;/code&gt; )&lt;/a&gt;によって決定されるように、特定の種類の属性のみが属性セットに表示されます。4種類の属性（&lt;a href=&quot;docattributeset&quot;&gt; &lt;code&gt;DocAttributeSet&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;printrequestattributeset&quot;&gt; &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;printjobattributeset&quot;&gt; &lt;code&gt;PrintJobAttributeSet&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;printserviceattributeset&quot;&gt; &lt;code&gt;PrintServiceAttributeSet&lt;/code&gt; )の&lt;/a&gt;うちの1つだけを含むように制限されている、属性セットの4つの特殊化があります。、それぞれ。多くの属性クラスは複数のタグ付けインターフェイスを実装しているため、複数のコンテキストに表示される場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="22ad8a9aa2efb2ad19070ee86e8125a8cdc9f032" translate="yes" xml:space="preserve">
          <source>Attribute type for retrieving the KRB_CRED message that an initiator is about to send to an acceptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e220edc938ee4853d2144c456f1232fe9c2478" translate="yes" xml:space="preserve">
          <source>Attribute type for retrieving the KRB_CRED message that an initiator is about to send to an acceptor. The return type is an instance of &lt;a href=&quot;../../../../../java.security.jgss/javax/security/auth/kerberos/kerberoscredmessage&quot;&gt;&lt;code&gt;KerberosCredMessage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4200ebf1b7f13ac0884a5db669e137267aca0c3b" translate="yes" xml:space="preserve">
          <source>Attribute type for retrieving the authorization data in the service ticket of an established Kerberos 5 security context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b64052ba5afef9b520ac83c02d9c17323a68db5" translate="yes" xml:space="preserve">
          <source>Attribute type for retrieving the authorization data in the service ticket of an established Kerberos 5 security context. Only supported on the acceptor side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deecd3ad132ef736155ff6471ca1b406563fa134" translate="yes" xml:space="preserve">
          <source>Attribute type for retrieving the authtime in the service ticket of an established Kerberos 5 security context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72816cba7bbd4efa7a002bfce16a36f1178f5731" translate="yes" xml:space="preserve">
          <source>Attribute type for retrieving the authtime in the service ticket of an established Kerberos 5 security context. The returned object is a String object in the standard KerberosTime format defined in RFC 4120 Section 5.2.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa642e75301ec8b735aa83e75c1f97ab693dc24f" translate="yes" xml:space="preserve">
          <source>Attribute type for retrieving the service ticket flags of an established Kerberos 5 security context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abef51ba04730a84c55cd3e400062c98f1f6d62" translate="yes" xml:space="preserve">
          <source>Attribute type for retrieving the service ticket flags of an established Kerberos 5 security context. The returned object is a boolean array for the service ticket flags, which is long enough to contain all true bits. This means if the user wants to get the &lt;em&gt;n&lt;/em&gt;'th bit but the length of the returned array is less than &lt;em&gt;n&lt;/em&gt;, it is regarded as false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ed01e31832b888c607d78e7ab714538399b9a2" translate="yes" xml:space="preserve">
          <source>Attribute type for retrieving the session key of an established Kerberos 5 security context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad571eacdfa4e0781b948e6af6ca13a803a6b091" translate="yes" xml:space="preserve">
          <source>Attribute type for retrieving the session key of an established Kerberos 5 security context. The return value is an instance of &lt;a href=&quot;../../../../../java.security.jgss/javax/security/auth/kerberos/encryptionkey&quot;&gt;&lt;code&gt;EncryptionKey&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194803d4c469a194a88d5204ff439d3d43005eed" translate="yes" xml:space="preserve">
          <source>Attribute type for retrieving the session key of an established Kerberos 5 security context. The returned object is an instance of &lt;a href=&quot;../../../../../java.base/java/security/key&quot;&gt;&lt;code&gt;Key&lt;/code&gt;&lt;/a&gt;, which has the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38181f2c2d39dc987e956695fc61eadab7dffd4" translate="yes" xml:space="preserve">
          <source>Attribute types that can be specified as an argument of &lt;a href=&quot;extendedgsscontext#inquireSecContext(com.sun.security.jgss.InquireType)&quot;&gt;&lt;code&gt;ExtendedGSSContext.inquireSecContext(com.sun.security.jgss.InquireType)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102ffa213c10dc498eb66333b5370d5a7f8d0d63" translate="yes" xml:space="preserve">
          <source>Attribute used to identify the model for embedded objects that have a model view separation.</source>
          <target state="translated">モデルビュー分離を持つ埋め込みオブジェクトのモデルを識別するために使用される属性。</target>
        </trans-unit>
        <trans-unit id="88f7cdbffc11174cb0f675c478fb518ee9b9634a" translate="yes" xml:space="preserve">
          <source>Attribute values of type &lt;code&gt;DATATYPE_BOOLEAN&lt;/code&gt; should be marked as enumerations.</source>
          <target state="translated">タイプ &lt;code&gt;DATATYPE_BOOLEAN&lt;/code&gt; の属性値は、列挙としてマークする必要があります。</target>
        </trans-unit>
        <trans-unit id="7abfffa4d6ad33feb4a3cc25a2b9c6ec5de53fa4" translate="yes" xml:space="preserve">
          <source>Attribute values of type &lt;code&gt;Number&lt;/code&gt; (used for &lt;code&gt;WEIGHT&lt;/code&gt;, &lt;code&gt;WIDTH&lt;/code&gt;, &lt;code&gt;POSTURE&lt;/code&gt;, &lt;code&gt;SIZE&lt;/code&gt;, &lt;code&gt;JUSTIFICATION&lt;/code&gt;, and &lt;code&gt;TRACKING&lt;/code&gt;) can vary along their natural range and are not restricted to the predefined constants. &lt;code&gt;Number.floatValue()&lt;/code&gt; is used to get the actual value from the &lt;code&gt;Number&lt;/code&gt;.</source>
          <target state="translated">タイプの属性値 &lt;code&gt;Number&lt;/code&gt; （に使用 &lt;code&gt;WEIGHT&lt;/code&gt; 、 &lt;code&gt;WIDTH&lt;/code&gt; 、 &lt;code&gt;POSTURE&lt;/code&gt; 、 &lt;code&gt;SIZE&lt;/code&gt; 、 &lt;code&gt;JUSTIFICATION&lt;/code&gt; 、及び &lt;code&gt;TRACKING&lt;/code&gt; ）は、それらの天然の範囲に沿って変化することができ、事前に定義された定数に限定されるものではありません。 &lt;code&gt;Number.floatValue()&lt;/code&gt; は、 &lt;code&gt;Number&lt;/code&gt; から実際の値を取得するために使用されます。</target>
        </trans-unit>
        <trans-unit id="a0e916688913665dea194b5f8c7b24e586dd743f" translate="yes" xml:space="preserve">
          <source>Attribute views</source>
          <target state="translated">属性ビュー</target>
        </trans-unit>
        <trans-unit id="dacec4ad2e2c73adbd895b3402471382e0b094ea" translate="yes" xml:space="preserve">
          <source>Attribute.add()</source>
          <target state="translated">Attribute.add()</target>
        </trans-unit>
        <trans-unit id="b03a94f2c9c8b0b4bd8e8ac0a763a9d3d850dbdd" translate="yes" xml:space="preserve">
          <source>Attribute.clear()</source>
          <target state="translated">Attribute.clear()</target>
        </trans-unit>
        <trans-unit id="47f55546a01f7f35ba430158e1fbe569823946e9" translate="yes" xml:space="preserve">
          <source>Attribute.clone()</source>
          <target state="translated">Attribute.clone()</target>
        </trans-unit>
        <trans-unit id="f1eaf55093454c1e6880e2e23e89d95f257e81c8" translate="yes" xml:space="preserve">
          <source>Attribute.contains()</source>
          <target state="translated">Attribute.contains()</target>
        </trans-unit>
        <trans-unit id="1b7f81a1fab3559199b9a12e82489f46074ccd26" translate="yes" xml:space="preserve">
          <source>Attribute.equals()</source>
          <target state="translated">Attribute.equals()</target>
        </trans-unit>
        <trans-unit id="765a3d929d2e3c3e57d7f85a625e45e1f4800b08" translate="yes" xml:space="preserve">
          <source>Attribute.get()</source>
          <target state="translated">Attribute.get()</target>
        </trans-unit>
        <trans-unit id="270bacec624d0bdc3c513b6d94d1754a8564fa48" translate="yes" xml:space="preserve">
          <source>Attribute.getAll()</source>
          <target state="translated">Attribute.getAll()</target>
        </trans-unit>
        <trans-unit id="6b25dc53db94749c23e6abd167912c8f1dada74f" translate="yes" xml:space="preserve">
          <source>Attribute.getAttributeDefinition()</source>
          <target state="translated">Attribute.getAttributeDefinition()</target>
        </trans-unit>
        <trans-unit id="f392e628cb5be965d7f3a505e53df570c640daac" translate="yes" xml:space="preserve">
          <source>Attribute.getAttributeSyntaxDefinition()</source>
          <target state="translated">Attribute.getAttributeSyntaxDefinition()</target>
        </trans-unit>
        <trans-unit id="35c6550104c8e5e21fd553288f0de2699afa65d2" translate="yes" xml:space="preserve">
          <source>Attribute.getCategory()</source>
          <target state="translated">Attribute.getCategory()</target>
        </trans-unit>
        <trans-unit id="199587bd3fec63ebf18c33d8d977ceb291e3b2d9" translate="yes" xml:space="preserve">
          <source>Attribute.getID()</source>
          <target state="translated">Attribute.getID()</target>
        </trans-unit>
        <trans-unit id="be5b4a884fccc07d5f8310e475676e250cacc0bc" translate="yes" xml:space="preserve">
          <source>Attribute.getName()</source>
          <target state="translated">Attribute.getName()</target>
        </trans-unit>
        <trans-unit id="fe25af2877add303ae07f7dfcc78ba14af441aae" translate="yes" xml:space="preserve">
          <source>Attribute.getValue()</source>
          <target state="translated">Attribute.getValue()</target>
        </trans-unit>
        <trans-unit id="a6da0c470e259ef09810c5a498cfa0b666bf73fc" translate="yes" xml:space="preserve">
          <source>Attribute.hashCode()</source>
          <target state="translated">Attribute.hashCode()</target>
        </trans-unit>
        <trans-unit id="9757227b6f86227dee54377689a699c6f682446c" translate="yes" xml:space="preserve">
          <source>Attribute.isOrdered()</source>
          <target state="translated">Attribute.isOrdered()</target>
        </trans-unit>
        <trans-unit id="b772342231ed1d00306c5af3f227de36243eb13f" translate="yes" xml:space="preserve">
          <source>Attribute.remove()</source>
          <target state="translated">Attribute.remove()</target>
        </trans-unit>
        <trans-unit id="49f9c71bcf26753fce77fa7afaecc30d1be0e17b" translate="yes" xml:space="preserve">
          <source>Attribute.set()</source>
          <target state="translated">Attribute.set()</target>
        </trans-unit>
        <trans-unit id="ced12f7b5458f1b8c3368f15114dad3cf10d34f6" translate="yes" xml:space="preserve">
          <source>Attribute.size()</source>
          <target state="translated">Attribute.size()</target>
        </trans-unit>
        <trans-unit id="20ed2cb2725c92939369e0da631bd17976b20117" translate="yes" xml:space="preserve">
          <source>Attribute.toString()</source>
          <target state="translated">Attribute.toString()</target>
        </trans-unit>
        <trans-unit id="452e0ffb24b1623ea5f849ca8ce40957b3ef0dcd" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotification</source>
          <target state="translated">AttributeChangeNotification</target>
        </trans-unit>
        <trans-unit id="3b1403d8f3b91e8cb2a9d2a7348e924072cc120c" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotification.getAttributeName()</source>
          <target state="translated">AttributeChangeNotification.getAttributeName()</target>
        </trans-unit>
        <trans-unit id="ebe6e0b93a9f91c79458bfb2d1897f3d859acf7b" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotification.getAttributeType()</source>
          <target state="translated">AttributeChangeNotification.getAttributeType()</target>
        </trans-unit>
        <trans-unit id="17648d4f85f5c5adf7fdfa62f43c908a0ce7f7d9" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotification.getNewValue()</source>
          <target state="translated">AttributeChangeNotification.getNewValue()</target>
        </trans-unit>
        <trans-unit id="6fe24c67880305581467b5bf972da1aa535f849c" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotification.getOldValue()</source>
          <target state="translated">AttributeChangeNotification.getOldValue()</target>
        </trans-unit>
        <trans-unit id="48b96949c7b3dff0092ebf31b0ed06a30ab51b84" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotificationFilter</source>
          <target state="translated">AttributeChangeNotificationFilter</target>
        </trans-unit>
        <trans-unit id="ee895eb22e53ccfababb447917024b03d9626059" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotificationFilter.disableAllAttributes()</source>
          <target state="translated">AttributeChangeNotificationFilter.disableAllAttributes()</target>
        </trans-unit>
        <trans-unit id="f3bb206079a06a67e675157176ff8209045dac2d" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotificationFilter.disableAttribute()</source>
          <target state="translated">AttributeChangeNotificationFilter.disableAttribute()</target>
        </trans-unit>
        <trans-unit id="fa5d5a56e0105212bc1a5faf4068b16e1dd31fc7" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotificationFilter.enableAttribute()</source>
          <target state="translated">AttributeChangeNotificationFilter.enableAttribute()</target>
        </trans-unit>
        <trans-unit id="47aa82a9b5aac088dbd832d31eae25f4088aa766" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotificationFilter.getEnabledAttributes()</source>
          <target state="translated">AttributeChangeNotificationFilter.getEnabledAttributes()</target>
        </trans-unit>
        <trans-unit id="02536efded736db7e53c559ea2599487f8a659a6" translate="yes" xml:space="preserve">
          <source>AttributeChangeNotificationFilter.isNotificationEnabled()</source>
          <target state="translated">AttributeChangeNotificationFilter.isNotificationEnabled()</target>
        </trans-unit>
        <trans-unit id="eea225671d08afc0c7988e76a3ba87304a8bd054" translate="yes" xml:space="preserve">
          <source>AttributeException</source>
          <target state="translated">AttributeException</target>
        </trans-unit>
        <trans-unit id="358970c93af45367a9a6109a0c01abea062fb6fd" translate="yes" xml:space="preserve">
          <source>AttributeException. If one or more of the attributes are not valid for this print job.</source>
          <target state="translated">AttributeException。1 つ以上の属性がこの印刷ジョブで有効でない場合。</target>
        </trans-unit>
        <trans-unit id="075b9c2cf488193cb76e4b0064644d6bd31e0b58" translate="yes" xml:space="preserve">
          <source>AttributeException.getUnsupportedAttributes()</source>
          <target state="translated">AttributeException.getUnsupportedAttributes()</target>
        </trans-unit>
        <trans-unit id="beef9c84e6888c07f76b9ccdf1288dc8637beb8a" translate="yes" xml:space="preserve">
          <source>AttributeException.getUnsupportedValues()</source>
          <target state="translated">AttributeException.getUnsupportedValues()</target>
        </trans-unit>
        <trans-unit id="6b2778b89170d14c4e1b843e7bb5a0cd809d563c" translate="yes" xml:space="preserve">
          <source>AttributeInUseException</source>
          <target state="translated">AttributeInUseException</target>
        </trans-unit>
        <trans-unit id="a2de454ef29dbce6d84b9699949979da71141ada" translate="yes" xml:space="preserve">
          <source>AttributeList</source>
          <target state="translated">AttributeList</target>
        </trans-unit>
        <trans-unit id="cf7fa847481b1c173446ec3b39c5a60a54b7b693" translate="yes" xml:space="preserve">
          <source>AttributeList implements the deprecated SAX1 &lt;a href=&quot;../attributelist&quot;&gt;&lt;code&gt;AttributeList&lt;/code&gt;&lt;/a&gt; interface, and has been replaced by the new SAX2 &lt;a href=&quot;attributesimpl&quot;&gt;&lt;code&gt;AttributesImpl&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">AttributeListの実装は、SAX1非推奨&lt;a href=&quot;../attributelist&quot;&gt; &lt;code&gt;AttributeList&lt;/code&gt; &lt;/a&gt;インタフェースを、そして新しいSAX2に置き換えられている&lt;a href=&quot;attributesimpl&quot;&gt; &lt;code&gt;AttributesImpl&lt;/code&gt; &lt;/a&gt;インタフェース。</target>
        </trans-unit>
        <trans-unit id="ed6b9d54d3b545bdabb58e1068da8f90354c0ce6" translate="yes" xml:space="preserve">
          <source>AttributeList.add()</source>
          <target state="translated">AttributeList.add()</target>
        </trans-unit>
        <trans-unit id="71a908fa0354fd9775c2e563146f5133ff046c30" translate="yes" xml:space="preserve">
          <source>AttributeList.addAll()</source>
          <target state="translated">AttributeList.addAll()</target>
        </trans-unit>
        <trans-unit id="4323b09b5ca031a75887e3257bb90b34d1446f2f" translate="yes" xml:space="preserve">
          <source>AttributeList.asList()</source>
          <target state="translated">AttributeList.asList()</target>
        </trans-unit>
        <trans-unit id="fa72175778387ca71e84c7f4c5f28dcbc3e739bc" translate="yes" xml:space="preserve">
          <source>AttributeList.set()</source>
          <target state="translated">AttributeList.set()</target>
        </trans-unit>
        <trans-unit id="70447a9b4c1c064517f65bd1e325566e04a10bd5" translate="yes" xml:space="preserve">
          <source>AttributeListImpl</source>
          <target state="translated">AttributeListImpl</target>
        </trans-unit>
        <trans-unit id="cafbaadc3b70b9a0b86951ba4f524dd1df2d0ca0" translate="yes" xml:space="preserve">
          <source>AttributeModificationException</source>
          <target state="translated">AttributeModificationException</target>
        </trans-unit>
        <trans-unit id="4a350d02bb29f6066ac0960d2b3c714b1dcf87e1" translate="yes" xml:space="preserve">
          <source>AttributeModificationException.getUnexecutedModifications()</source>
          <target state="translated">AttributeModificationException.getUnexecutedModifications()</target>
        </trans-unit>
        <trans-unit id="c85f0f676ac099c7e0b091e3b14d89f4c3c769fc" translate="yes" xml:space="preserve">
          <source>AttributeModificationException.setUnexecutedModifications()</source>
          <target state="translated">AttributeModificationException.setUnexecutedModifications()</target>
        </trans-unit>
        <trans-unit id="d53941cc31bff0fd1455300bcdfbc815ed09bec7" translate="yes" xml:space="preserve">
          <source>AttributeModificationException.toString()</source>
          <target state="translated">AttributeModificationException.toString()</target>
        </trans-unit>
        <trans-unit id="8fd3507ef760cb046ca020d1cda144fa5b7d9e36" translate="yes" xml:space="preserve">
          <source>AttributeNotFoundException</source>
          <target state="translated">AttributeNotFoundException</target>
        </trans-unit>
        <trans-unit id="f60edc85e786791af15b942e55aa411831d5868e" translate="yes" xml:space="preserve">
          <source>AttributeSet</source>
          <target state="translated">AttributeSet</target>
        </trans-unit>
        <trans-unit id="ff2090783e33d26950ae117fb1531bebb5b06ef7" translate="yes" xml:space="preserve">
          <source>AttributeSet containing additional entries, must be non-mutable!</source>
          <target state="translated">追加のエントリを含む属性セットは、非可換でなければなりません!</target>
        </trans-unit>
        <trans-unit id="f6209fc95d17e16c78d8160ff227ebc7e5837593" translate="yes" xml:space="preserve">
          <source>AttributeSet.CharacterAttribute</source>
          <target state="translated">AttributeSet.CharacterAttribute</target>
        </trans-unit>
        <trans-unit id="1f12fffa55589b16c07df86746f21724d6bbdf5e" translate="yes" xml:space="preserve">
          <source>AttributeSet.ColorAttribute</source>
          <target state="translated">AttributeSet.ColorAttribute</target>
        </trans-unit>
        <trans-unit id="88d6f122b2a9992bcf16d7b76f56bd5376238d76" translate="yes" xml:space="preserve">
          <source>AttributeSet.FontAttribute</source>
          <target state="translated">AttributeSet.FontAttribute</target>
        </trans-unit>
        <trans-unit id="36965480e7d91e0fb0b51dcc3bd0f90fb22bc0b0" translate="yes" xml:space="preserve">
          <source>AttributeSet.ParagraphAttribute</source>
          <target state="translated">AttributeSet.ParagraphAttribute</target>
        </trans-unit>
        <trans-unit id="66e498f78632adaf4fa358c4969e93a673a595c9" translate="yes" xml:space="preserve">
          <source>AttributeSet.add()</source>
          <target state="translated">AttributeSet.add()</target>
        </trans-unit>
        <trans-unit id="5da7005b672a6db3bc4b8292a9be9a7170187c73" translate="yes" xml:space="preserve">
          <source>AttributeSet.addAll()</source>
          <target state="translated">AttributeSet.addAll()</target>
        </trans-unit>
        <trans-unit id="ab9d4bef8f5192cf256a41add78704f9175a73e7" translate="yes" xml:space="preserve">
          <source>AttributeSet.clear()</source>
          <target state="translated">AttributeSet.clear()</target>
        </trans-unit>
        <trans-unit id="021e680089a148b823159c659add0974f70e1ef9" translate="yes" xml:space="preserve">
          <source>AttributeSet.containsKey()</source>
          <target state="translated">AttributeSet.containsKey()</target>
        </trans-unit>
        <trans-unit id="fc4c7a3d1842061368562cba138f288f3912dc64" translate="yes" xml:space="preserve">
          <source>AttributeSet.containsValue()</source>
          <target state="translated">AttributeSet.containsValue()</target>
        </trans-unit>
        <trans-unit id="2bbfe53d1ec4a3f23debce262dfffa928287f081" translate="yes" xml:space="preserve">
          <source>AttributeSet.equals()</source>
          <target state="translated">AttributeSet.equals()</target>
        </trans-unit>
        <trans-unit id="6c76b91b7b80a12f84b20b6944ee13a2d09ede8b" translate="yes" xml:space="preserve">
          <source>AttributeSet.get()</source>
          <target state="translated">AttributeSet.get()</target>
        </trans-unit>
        <trans-unit id="2342adf88abd5e038a49cfe34e609a66c4cf14a8" translate="yes" xml:space="preserve">
          <source>AttributeSet.hashCode()</source>
          <target state="translated">AttributeSet.hashCode()</target>
        </trans-unit>
        <trans-unit id="743f2456312a31182edf0d503ec0cac0436dfc49" translate="yes" xml:space="preserve">
          <source>AttributeSet.isEmpty()</source>
          <target state="translated">AttributeSet.isEmpty()</target>
        </trans-unit>
        <trans-unit id="c4d8e638a92be579fd009ad0652c8edeefbd8dad" translate="yes" xml:space="preserve">
          <source>AttributeSet.remove()</source>
          <target state="translated">AttributeSet.remove()</target>
        </trans-unit>
        <trans-unit id="a60991a2611d4bf5e2d9759e267a4957a57dd6c4" translate="yes" xml:space="preserve">
          <source>AttributeSet.size()</source>
          <target state="translated">AttributeSet.size()</target>
        </trans-unit>
        <trans-unit id="d0c1875b1442683e8964fc20749158cf99db7fb3" translate="yes" xml:space="preserve">
          <source>AttributeSet.toArray()</source>
          <target state="translated">AttributeSet.toArray()</target>
        </trans-unit>
        <trans-unit id="97874f6fbf2c9b16d3071e6f8b6b1933ea7d8b55" translate="yes" xml:space="preserve">
          <source>AttributeSetUtilities</source>
          <target state="translated">AttributeSetUtilities</target>
        </trans-unit>
        <trans-unit id="77ea8f400b85d4e47a1e8de2eeebae27ce9a8165" translate="yes" xml:space="preserve">
          <source>AttributeSetUtilities.synchronizedView()</source>
          <target state="translated">AttributeSetUtilities.synchronizedView()</target>
        </trans-unit>
        <trans-unit id="98437ad6f100a8cb9a4151c6f458a05db687d6b6" translate="yes" xml:space="preserve">
          <source>AttributeSetUtilities.unmodifiableView()</source>
          <target state="translated">AttributeSetUtilities.unmodifiableView()</target>
        </trans-unit>
        <trans-unit id="28adac6f572add266f96a63efd9f3f6d26a02d95" translate="yes" xml:space="preserve">
          <source>AttributeSetUtilities.verifyAttributeCategory()</source>
          <target state="translated">AttributeSetUtilities.verifyAttributeCategory()</target>
        </trans-unit>
        <trans-unit id="60b40decf62c263039b39862a20fb206d3d20349" translate="yes" xml:space="preserve">
          <source>AttributeSetUtilities.verifyAttributeValue()</source>
          <target state="translated">AttributeSetUtilities.verifyAttributeValue()</target>
        </trans-unit>
        <trans-unit id="81babb14e623059053a1d3abc505c7ec6796afb5" translate="yes" xml:space="preserve">
          <source>AttributeSetUtilities.verifyCategoryForValue()</source>
          <target state="translated">AttributeSetUtilities.verifyCategoryForValue()</target>
        </trans-unit>
        <trans-unit id="29db7b338e8007fcb46b45f827ad744db7ec1730" translate="yes" xml:space="preserve">
          <source>AttributeTree</source>
          <target state="translated">AttributeTree</target>
        </trans-unit>
        <trans-unit id="a4946fc164ea699d35a92b0862f3200675e07401" translate="yes" xml:space="preserve">
          <source>AttributeTree.ValueKind</source>
          <target state="translated">AttributeTree.ValueKind</target>
        </trans-unit>
        <trans-unit id="e7583c2decdbb49f97c1d5ae70368e6bafebe36c" translate="yes" xml:space="preserve">
          <source>AttributeUndoableEdit</source>
          <target state="translated">AttributeUndoableEdit</target>
        </trans-unit>
        <trans-unit id="2e64d9c17f3f9a141385db972ca65dd140c84352" translate="yes" xml:space="preserve">
          <source>AttributeValue strings containing '=' or non-leading '#' characters (unescaped) are accepted.</source>
          <target state="translated">属性値文字列は、'=' または先頭のない '#' キ ャ ラ ク タ (エスケープ さ れていない)を含んでいてもかまいません。</target>
        </trans-unit>
        <trans-unit id="301e77b0b44622584579fe1d92dba17b278488a3" translate="yes" xml:space="preserve">
          <source>AttributeValueExp</source>
          <target state="translated">AttributeValueExp</target>
        </trans-unit>
        <trans-unit id="8dda10943f59f7501e420b18ed15e758a5014b69" translate="yes" xml:space="preserve">
          <source>AttributeValueExp.apply()</source>
          <target state="translated">AttributeValueExp.apply()</target>
        </trans-unit>
        <trans-unit id="e036cab07e937b18274cf737de18292af8f18251" translate="yes" xml:space="preserve">
          <source>AttributeValueExp.getAttribute()</source>
          <target state="translated">AttributeValueExp.getAttribute()</target>
        </trans-unit>
        <trans-unit id="ad9771bd243336dc97240a7775adc9afec206f76" translate="yes" xml:space="preserve">
          <source>AttributeValueExp.getAttributeName()</source>
          <target state="translated">AttributeValueExp.getAttributeName()</target>
        </trans-unit>
        <trans-unit id="aa74cea928d8a07f34b185503d4378b93c2c30d8" translate="yes" xml:space="preserve">
          <source>AttributeValueExp.setMBeanServer()</source>
          <target state="translated">AttributeValueExp.setMBeanServer()</target>
        </trans-unit>
        <trans-unit id="41f8be95f544388d0bd2b0cd76232117fed685d2" translate="yes" xml:space="preserve">
          <source>AttributeValueExp.toString()</source>
          <target state="translated">AttributeValueExp.toString()</target>
        </trans-unit>
        <trans-unit id="41a55ae97c16eda5800bb589635944d32e8ceaf7" translate="yes" xml:space="preserve">
          <source>AttributeView</source>
          <target state="translated">AttributeView</target>
        </trans-unit>
        <trans-unit id="df7b1b3de257119dc7075a70794bd510710a29a6" translate="yes" xml:space="preserve">
          <source>AttributeView.name()</source>
          <target state="translated">AttributeView.name()</target>
        </trans-unit>
        <trans-unit id="6857cdd808a968f6ae32a39212ac1165b46cbf0e" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator</source>
          <target state="translated">AttributedCharacterIterator</target>
        </trans-unit>
        <trans-unit id="6e4bd52673405afe92692d22f408cf85b59a8a65" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator describing the formatted value.</source>
          <target state="translated">書式化された値を記述する AttributedCharacterIterator。</target>
        </trans-unit>
        <trans-unit id="cac8c13d5d1cb0b88f58134f0d9c8a31df0851e7" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.Attribute</source>
          <target state="translated">AttributedCharacterIterator.Attribute</target>
        </trans-unit>
        <trans-unit id="3daeb7de1cfbd011ac22249df438850e966d1e65" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.Attribute.equals()</source>
          <target state="translated">AttributedCharacterIterator.Attribute.equals()</target>
        </trans-unit>
        <trans-unit id="74484fc223f810f09accae6d87c795b47802ad02" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.Attribute.getName()</source>
          <target state="translated">AttributedCharacterIterator.Attribute.getName()</target>
        </trans-unit>
        <trans-unit id="75f073baa4788de7eb17aa1aa8f34d61b20fcd8e" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.Attribute.hashCode()</source>
          <target state="translated">AttributedCharacterIterator.Attribute.hashCode()</target>
        </trans-unit>
        <trans-unit id="1bdd6de4006e548ef8408a5a6cb0d1cb16ec4487" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.Attribute.readResolve()</source>
          <target state="translated">AttributedCharacterIterator.Attribute.readResolve()</target>
        </trans-unit>
        <trans-unit id="d228299bfc8867d70fe01ec53cba1b429634a654" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.Attribute.toString()</source>
          <target state="translated">AttributedCharacterIterator.Attribute.toString()</target>
        </trans-unit>
        <trans-unit id="bba7495f38c1df679bb4bbae5c12c0b1f41b50f0" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.getAllAttributeKeys()</source>
          <target state="translated">AttributedCharacterIterator.getAllAttributeKeys()</target>
        </trans-unit>
        <trans-unit id="e101bc5387f5f1034936385cb1e628827adef962" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.getAttribute()</source>
          <target state="translated">AttributedCharacterIterator.getAttribute()</target>
        </trans-unit>
        <trans-unit id="9ff353a36628ede86c0ccdc5826ea018a5b84722" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.getAttributes()</source>
          <target state="translated">AttributedCharacterIterator.getAttributes()</target>
        </trans-unit>
        <trans-unit id="cedeece13224e4162a903ae7e0ed062c5a01e0fa" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.getRunLimit()</source>
          <target state="translated">AttributedCharacterIterator.getRunLimit()</target>
        </trans-unit>
        <trans-unit id="30274a2cd180d81d199b4f3a2e8672becf5c94a9" translate="yes" xml:space="preserve">
          <source>AttributedCharacterIterator.getRunStart()</source>
          <target state="translated">AttributedCharacterIterator.getRunStart()</target>
        </trans-unit>
        <trans-unit id="58ef98be514355be82ed498c203d6c8f244da9ca" translate="yes" xml:space="preserve">
          <source>AttributedString</source>
          <target state="translated">AttributedString</target>
        </trans-unit>
        <trans-unit id="f1d52ad161cba6a7f9ddce9997a8f6b8ee5894ea" translate="yes" xml:space="preserve">
          <source>AttributedString.addAttribute()</source>
          <target state="translated">AttributedString.addAttribute()</target>
        </trans-unit>
        <trans-unit id="f58ff1f2372dbef6c55c80860a4f352737285497" translate="yes" xml:space="preserve">
          <source>AttributedString.addAttributes()</source>
          <target state="translated">AttributedString.addAttributes()</target>
        </trans-unit>
        <trans-unit id="5301783be512e0ab6c138ab857057f54d97a53be" translate="yes" xml:space="preserve">
          <source>AttributedString.getIterator()</source>
          <target state="translated">AttributedString.getIterator()</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="d698b33497be1f249118fe819fa609ec873cf4e3" translate="yes" xml:space="preserve">
          <source>Attributes can potentially resolve in a hierarchy. If a key doesn't resolve locally, and a resolving parent exists, the key will be resolved through the parent.</source>
          <target state="translated">属性は、潜在的に階層内で解決することができます。キーがローカルに解決されず、解決する親が存在する場合、キーはその親を介して解決されます。</target>
        </trans-unit>
        <trans-unit id="4c8de99e2b721e9b734f9136a2ba56fdb13a1b8a" translate="yes" xml:space="preserve">
          <source>Attributes containing the new values for the print job attributes that changed. The returned set may not be modifiable.</source>
          <target state="translated">変更された印刷ジョブ属性の新しい値を含む属性。返されたセットは変更できない場合があります。</target>
        </trans-unit>
        <trans-unit id="c90446799d581d66f35ba0e54ff1eded7dbf6b10" translate="yes" xml:space="preserve">
          <source>Attributes containing the new values for the service attributes that changed. The returned set may be unmodifiable.</source>
          <target state="translated">変更されたサービス属性の新しい値を含む属性。返されるセットは変更できない場合があります。</target>
        </trans-unit>
        <trans-unit id="84e6cbe6651e6571d560e929f794db0d0bbb060b" translate="yes" xml:space="preserve">
          <source>Attributes in an object that implements the Attributes interface are unordered. The object can have zero or more attributes. Attributes is either case-sensitive or case-insensitive (case-ignore). This property is determined at the time the Attributes object is created. (see BasicAttributes constructor for example). In a case-insensitive Attributes, the case of its attribute identifiers is ignored when searching for an attribute, or adding attributes. In a case-sensitive Attributes, the case is significant.</source>
          <target state="translated">Attributes インターフェースを実装したオブジェクトの属性は、順番がありません。オブジェクトはゼロ以上の属性を持つことができます。Attributesは、大文字小文字を区別するか、大文字小文字を区別しない(大文字小文字を区別しない)かのどちらかです。このプロパティは、Attributes オブジェクトの作成時に決定されます。(例として BasicAttributes のコンストラクタを参照)。大文字小文字を区別しない属性では、属性を検索したり属性を追加したりする際に、その属性識別子の大文字小文字は無視されます。大文字小文字を区別しないAttributesでは、大文字小文字の区別は重要です。</target>
        </trans-unit>
        <trans-unit id="d5eb597c873662e426f1b250108bcaa700cbbe82" translate="yes" xml:space="preserve">
          <source>Attributes of the &lt;code&gt;Attr&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;Attr&lt;/code&gt; オブジェクトの属性</target>
        </trans-unit>
        <trans-unit id="baa2d07617498852737aedae2573239a4027b2ca" translate="yes" xml:space="preserve">
          <source>Attributes of the &lt;code&gt;Element&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;Element&lt;/code&gt; オブジェクトの属性</target>
        </trans-unit>
        <trans-unit id="d69a7bde0be897c3f3768d41b6db23b69de71936" translate="yes" xml:space="preserve">
          <source>Attributes which are tagged with &lt;code&gt;PrintRequestAttribute&lt;/code&gt; and are also tagged as &lt;code&gt;PrintJobAttribute&lt;/code&gt;, represent the subset of job attributes which can be part of the specification of a job request.</source>
          <target state="translated">でタグ付けされた属性 &lt;code&gt;PrintRequestAttribute&lt;/code&gt; またとしてタグ付けされ &lt;code&gt;PrintJobAttribute&lt;/code&gt; は、ジョブ要求の明細書の一部とすることができるジョブの属性のサブセットを表します。</target>
        </trans-unit>
        <trans-unit id="43989d6cd679f7be31a00e123c08069b041239ef" translate="yes" xml:space="preserve">
          <source>Attributes which are tagged with PrintRequestAttribute and are also tagged as PrintJobAttribute, represent the subset of job attributes which can be part of the specification of a job request.</source>
          <target state="translated">PrintRequestAttributeとタグ付けされ、PrintJobAttributeとしてもタグ付けされる属性は、ジョブ要求の仕様の一部となり得るジョブ属性のサブセットを表す。</target>
        </trans-unit>
        <trans-unit id="ef72caac8857bb64c8d95ec34c38531ffe67566c" translate="yes" xml:space="preserve">
          <source>Attributes.Name</source>
          <target state="translated">Attributes.Name</target>
        </trans-unit>
        <trans-unit id="2ef176c7573cca5f1e528ac268699004714bc5de" translate="yes" xml:space="preserve">
          <source>Attributes.Name.equals()</source>
          <target state="translated">Attributes.Name.equals()</target>
        </trans-unit>
        <trans-unit id="737b2786c289d8ca16c6384acb4615df82fdf342" translate="yes" xml:space="preserve">
          <source>Attributes.Name.hashCode()</source>
          <target state="translated">Attributes.Name.hashCode()</target>
        </trans-unit>
        <trans-unit id="bfa433b811054da43148c9345bfa92376c2e86c9" translate="yes" xml:space="preserve">
          <source>Attributes.Name.toString()</source>
          <target state="translated">Attributes.Name.toString()</target>
        </trans-unit>
        <trans-unit id="59d90e9c462b6176e6673ea48ac2d2921c350612" translate="yes" xml:space="preserve">
          <source>Attributes.clear()</source>
          <target state="translated">Attributes.clear()</target>
        </trans-unit>
        <trans-unit id="cc101aa818fe7d145f5fc4ebaec31145ed70a96c" translate="yes" xml:space="preserve">
          <source>Attributes.clone()</source>
          <target state="translated">Attributes.clone()</target>
        </trans-unit>
        <trans-unit id="00267418855bc36467ec9e0607f9116958f45cbe" translate="yes" xml:space="preserve">
          <source>Attributes.containsKey()</source>
          <target state="translated">Attributes.containsKey()</target>
        </trans-unit>
        <trans-unit id="54b5daea78ebb959ab7c787e2117bcb56b292ff7" translate="yes" xml:space="preserve">
          <source>Attributes.containsValue()</source>
          <target state="translated">Attributes.containsValue()</target>
        </trans-unit>
        <trans-unit id="8a08b05ce7399bde7c8e9c0f89c00183ea087928" translate="yes" xml:space="preserve">
          <source>Attributes.entrySet()</source>
          <target state="translated">Attributes.entrySet()</target>
        </trans-unit>
        <trans-unit id="d48db896862e3ca7714fae5eb659da470f5c2c1f" translate="yes" xml:space="preserve">
          <source>Attributes.equals()</source>
          <target state="translated">Attributes.equals()</target>
        </trans-unit>
        <trans-unit id="6b3917c7b18c0133423524db34d4b691290d4fb7" translate="yes" xml:space="preserve">
          <source>Attributes.get()</source>
          <target state="translated">Attributes.get()</target>
        </trans-unit>
        <trans-unit id="fd4ffe6edf93a23b0e145c7bf038c569ca686c60" translate="yes" xml:space="preserve">
          <source>Attributes.getAll()</source>
          <target state="translated">Attributes.getAll()</target>
        </trans-unit>
        <trans-unit id="7ccc899bed0c4532ce0ff21510660a6e5a5bb7e7" translate="yes" xml:space="preserve">
          <source>Attributes.getIDs()</source>
          <target state="translated">Attributes.getIDs()</target>
        </trans-unit>
        <trans-unit id="de50dcb63dd116709b9088971e7145f71a0f58c6" translate="yes" xml:space="preserve">
          <source>Attributes.getValue()</source>
          <target state="translated">Attributes.getValue()</target>
        </trans-unit>
        <trans-unit id="3047c27501b38945a82c38fd0453d5e95324b14f" translate="yes" xml:space="preserve">
          <source>Attributes.hashCode()</source>
          <target state="translated">Attributes.hashCode()</target>
        </trans-unit>
        <trans-unit id="be0697c9d50ed385c9ff813a4626e5a6f336f723" translate="yes" xml:space="preserve">
          <source>Attributes.isCaseIgnored()</source>
          <target state="translated">Attributes.isCaseIgnored()</target>
        </trans-unit>
        <trans-unit id="4542b3a8f5ffb8f63860e0c8caf157296ed430e7" translate="yes" xml:space="preserve">
          <source>Attributes.isEmpty()</source>
          <target state="translated">Attributes.isEmpty()</target>
        </trans-unit>
        <trans-unit id="e4d97e6d95157cfdb26856ea2659738224e675c8" translate="yes" xml:space="preserve">
          <source>Attributes.keySet()</source>
          <target state="translated">Attributes.keySet()</target>
        </trans-unit>
        <trans-unit id="14e43a4ddf7d8bd18c3f8480e719574539c695d7" translate="yes" xml:space="preserve">
          <source>Attributes.put()</source>
          <target state="translated">Attributes.put()</target>
        </trans-unit>
        <trans-unit id="ce0ea71b6e582de22fd381ce6157f8da9dbfc754" translate="yes" xml:space="preserve">
          <source>Attributes.putAll()</source>
          <target state="translated">Attributes.putAll()</target>
        </trans-unit>
        <trans-unit id="2cf19ab59b20099a78ff0673718f30de6316de11" translate="yes" xml:space="preserve">
          <source>Attributes.putValue()</source>
          <target state="translated">Attributes.putValue()</target>
        </trans-unit>
        <trans-unit id="eea2ddcf77d1e5b0f250b4de905c8cf01ddf5454" translate="yes" xml:space="preserve">
          <source>Attributes.remove()</source>
          <target state="translated">Attributes.remove()</target>
        </trans-unit>
        <trans-unit id="cb182de8b30220d0f7cace60ed2ba148e60ce312" translate="yes" xml:space="preserve">
          <source>Attributes.size()</source>
          <target state="translated">Attributes.size()</target>
        </trans-unit>
        <trans-unit id="1fe4a1478cc3a139c60cb06fc8bbaaf573ea1183" translate="yes" xml:space="preserve">
          <source>Attributes.values()</source>
          <target state="translated">Attributes.values()</target>
        </trans-unit>
        <trans-unit id="7001c0705c849ff800e8648eac1dfcb69dc1db5f" translate="yes" xml:space="preserve">
          <source>Attributes2</source>
          <target state="translated">Attributes2</target>
        </trans-unit>
        <trans-unit id="cf650c88b2a2fc5d2a595aaab4f2e4d44175c3c5" translate="yes" xml:space="preserve">
          <source>Attributes2Impl</source>
          <target state="translated">Attributes2Impl</target>
        </trans-unit>
        <trans-unit id="ebc6482db48710a95d12da900342b62a03eaec61" translate="yes" xml:space="preserve">
          <source>AttributesImpl</source>
          <target state="translated">AttributesImpl</target>
        </trans-unit>
        <trans-unit id="86d94dace519a2ba2a6d2d15e32f722c955d9bfa" translate="yes" xml:space="preserve">
          <source>Audio File Format Properties</source>
          <target state="translated">オーディオファイル形式のプロパティ</target>
        </trans-unit>
        <trans-unit id="3c494ebfdbc0ae4d0a20ac5dd2e0a478110b4c91" translate="yes" xml:space="preserve">
          <source>Audio Format Properties</source>
          <target state="translated">オーディオフォーマットのプロパティ</target>
        </trans-unit>
        <trans-unit id="2e1e525fd39558e121261a0f3a080395c2f96364" translate="yes" xml:space="preserve">
          <source>Audio System Property Keys</source>
          <target state="translated">オーディオシステムのプロパティキー</target>
        </trans-unit>
        <trans-unit id="5a428542fd2eae95dfa2eb4da2201191833630e6" translate="yes" xml:space="preserve">
          <source>Audio playback through the audio device or devices on the system. Allows the application to obtain and manipulate lines and mixers for audio playback (rendering).</source>
          <target state="translated">システム上のオーディオデバイスまたはデバイスを介してオーディオを再生します。オーディオ再生(レンダリング)のためのラインやミキサーをアプリケーションが取得して操作できるようにします。</target>
        </trans-unit>
        <trans-unit id="01002a56546176e8269827ddc364e42f85085ad6" translate="yes" xml:space="preserve">
          <source>Audio recording through the audio device or devices on the system. Allows the application to obtain and manipulate lines and mixers for audio recording (capture).</source>
          <target state="translated">システム上のオーディオデバイスまたはデバイスを介したオーディオ録音。オーディオ録音(キャプチャー)のためのラインやミキサーの取得と操作をアプリケーションに許可します。</target>
        </trans-unit>
        <trans-unit id="0f27945c3a3fe1d8a1d40d84a94f04be8a8081f3" translate="yes" xml:space="preserve">
          <source>Audio samples. A sample typically is a sampled audio waveform which contains a short sound recording whose duration is a fraction of a second, or at most a few seconds. These audio samples may be used by a &lt;a href=&quot;synthesizer&quot;&gt;&lt;code&gt;Synthesizer&lt;/code&gt;&lt;/a&gt; to synthesize sound in response to MIDI commands, or extracted for use by an application. (The terminology reflects musicians' use of the word &quot;sample&quot; to refer collectively to a series of contiguous audio samples or frames, rather than to a single, instantaneous sample.) The data class for an audio sample will be an object that encapsulates the audio sample data itself and information about how to interpret it (the format of the audio data), such as an &lt;a href=&quot;../sampled/audioinputstream&quot;&gt;&lt;code&gt;AudioInputStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">オーディオサンプル。サンプルは通常、サンプリングされたオーディオ波形であり、その持続時間は数分の1秒、または最大で数秒です。これらのオーディオサンプルは、&lt;a href=&quot;synthesizer&quot;&gt; &lt;code&gt;Synthesizer&lt;/code&gt; &lt;/a&gt;がMIDIコマンドに応答してサウンドを合成するために使用したり、アプリケーションで使用するために抽出したりすることができます。 （この用語は、ミュージシャンが「サンプル」という単語を使用して、単一の瞬間的なサンプルではなく、一連の連続するオーディオサンプルまたはフレームをまとめて指すことを反映しています。）オーディオサンプルのデータクラスは、をカプセル化するオブジェクトになります。&lt;a href=&quot;../sampled/audioinputstream&quot;&gt; &lt;code&gt;AudioInputStream&lt;/code&gt; &lt;/a&gt;など、オーディオサンプルデータ自体とその解釈方法（オーディオデータの形式）に関する情報。</target>
        </trans-unit>
        <trans-unit id="0ddae990439ebc62a8153ae92cf60fd9a0aeb550" translate="yes" xml:space="preserve">
          <source>Audio samples. A sample typically is a sampled audio waveform which contains a short sound recording whose duration is a fraction of a second, or at most a few seconds. These audio samples may be used by a &lt;code&gt;&lt;a href=&quot;synthesizer&quot;&gt;&lt;code&gt;Synthesizer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; to synthesize sound in response to MIDI commands, or extracted for use by an application. (The terminology reflects musicians' use of the word &quot;sample&quot; to refer collectively to a series of contiguous audio samples or frames, rather than to a single, instantaneous sample.) The data class for an audio sample will be an object that encapsulates the audio sample data itself and information about how to interpret it (the format of the audio data), such as an &lt;code&gt;&lt;a href=&quot;../sampled/audioinputstream&quot;&gt;&lt;code&gt;AudioInputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">オーディオサンプル。サンプルは通常、サンプリングされたオーディオ波形であり、その継続時間は1秒の何分の1か、多くても数秒です。これらのオーディオサンプルは、 &lt;code&gt;&lt;a href=&quot;synthesizer&quot;&gt;&lt;code&gt;Synthesizer&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; がMIDIコマンドに応じてサウンドを合成するために使用したり、アプリケーションで使用するために抽出したりできます。 （この用語は、ミュージシャンによる「サンプル」という単語の使用を反映しており、単一の瞬間的なサンプルではなく、一連の連続したオーディオサンプルまたはフレームをまとめて指します。）オーディオサンプルのデータクラスは、 &lt;code&gt;&lt;a href=&quot;../sampled/audioinputstream&quot;&gt;&lt;code&gt;AudioInputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; など、オーディオサンプルデータ自体とその解釈方法（オーディオデータの形式）に関する情報。</target>
        </trans-unit>
        <trans-unit id="c2ded36aec556eb4cc28588e4feed64a37f58591" translate="yes" xml:space="preserve">
          <source>AudioClip</source>
          <target state="translated">AudioClip</target>
        </trans-unit>
        <trans-unit id="7d62a05a6ed7898dfad05b9d378c7e1cf726988a" translate="yes" xml:space="preserve">
          <source>AudioFileFormat</source>
          <target state="translated">AudioFileFormat</target>
        </trans-unit>
        <trans-unit id="b1789408d94ac82e96c59cef3b6ef9f572826115" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.Type</source>
          <target state="translated">AudioFileFormat.Type</target>
        </trans-unit>
        <trans-unit id="a994008b10cf189b55d4098c5367064fa7bd7857" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.Type.equals()</source>
          <target state="translated">AudioFileFormat.Type.equals()</target>
        </trans-unit>
        <trans-unit id="2462adb7cbb89117e9c7391497a040e5fa4ff5ec" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.Type.getExtension()</source>
          <target state="translated">AudioFileFormat.Type.getExtension()</target>
        </trans-unit>
        <trans-unit id="d4e9b9dc1cd356777a49145e09b328fa1d991543" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.Type.hashCode()</source>
          <target state="translated">AudioFileFormat.Type.hashCode()</target>
        </trans-unit>
        <trans-unit id="7d42bbc64a9cf05fbaf06a161d3a644f3c2b52ce" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.Type.toString()</source>
          <target state="translated">AudioFileFormat.Type.toString()</target>
        </trans-unit>
        <trans-unit id="0731a09901ed193d147189975500add6073a61f5" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.getByteLength()</source>
          <target state="translated">AudioFileFormat.getByteLength()</target>
        </trans-unit>
        <trans-unit id="072de7c35fb5e2fc360f57920cf2068d66aae910" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.getFormat()</source>
          <target state="translated">AudioFileFormat.getFormat()</target>
        </trans-unit>
        <trans-unit id="5480df6a3025ebc3816e03dd02bc46c6ef355eff" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.getFrameLength()</source>
          <target state="translated">AudioFileFormat.getFrameLength()</target>
        </trans-unit>
        <trans-unit id="dc428d2a57707bbde6d12fc77fdc39125a40ae88" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.getProperty()</source>
          <target state="translated">AudioFileFormat.getProperty()</target>
        </trans-unit>
        <trans-unit id="688ac125a2ae50d198e17a0141d52350ca2ba3cf" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.getType()</source>
          <target state="translated">AudioFileFormat.getType()</target>
        </trans-unit>
        <trans-unit id="19467b93d663072ccfff6f0d76f88f175a1bc8c3" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.properties()</source>
          <target state="translated">AudioFileFormat.properties()</target>
        </trans-unit>
        <trans-unit id="1085a31c812b0a71124340d39e80a78c0d5007eb" translate="yes" xml:space="preserve">
          <source>AudioFileFormat.toString()</source>
          <target state="translated">AudioFileFormat.toString()</target>
        </trans-unit>
        <trans-unit id="9fe0470e52aacc324c05fb515d338f0ddce63c52" translate="yes" xml:space="preserve">
          <source>AudioFileReader</source>
          <target state="translated">AudioFileReader</target>
        </trans-unit>
        <trans-unit id="3fa3b8915e33c066a6cc00238cd39d28a7eae396" translate="yes" xml:space="preserve">
          <source>AudioFileReader.getAudioFileFormat()</source>
          <target state="translated">AudioFileReader.getAudioFileFormat()</target>
        </trans-unit>
        <trans-unit id="b90861952de0f1d4355124e5885ac08be65b3135" translate="yes" xml:space="preserve">
          <source>AudioFileReader.getAudioInputStream()</source>
          <target state="translated">AudioFileReader.getAudioInputStream()</target>
        </trans-unit>
        <trans-unit id="be0883e2cd6603f358dc4cb09324f2eceb3e2351" translate="yes" xml:space="preserve">
          <source>AudioFileWriter</source>
          <target state="translated">AudioFileWriter</target>
        </trans-unit>
        <trans-unit id="a1c7c648723a3cf57fc5d7804b0a7d371b56fd85" translate="yes" xml:space="preserve">
          <source>AudioFileWriter.getAudioFileTypes()</source>
          <target state="translated">AudioFileWriter.getAudioFileTypes()</target>
        </trans-unit>
        <trans-unit id="cdc4a49a2458ef239d15a318d15efb4c6aa4144b" translate="yes" xml:space="preserve">
          <source>AudioFileWriter.isFileTypeSupported()</source>
          <target state="translated">AudioFileWriter.isFileTypeSupported()</target>
        </trans-unit>
        <trans-unit id="b869310ea526d3a87cb0e555708adcc5e5e87382" translate="yes" xml:space="preserve">
          <source>AudioFileWriter.write()</source>
          <target state="translated">AudioFileWriter.write()</target>
        </trans-unit>
        <trans-unit id="8dcf74fea157147f002226d87ff6a27f2fc66c8a" translate="yes" xml:space="preserve">
          <source>AudioFormat</source>
          <target state="translated">AudioFormat</target>
        </trans-unit>
        <trans-unit id="6097272a10d77373ddaca995a74711e775bc7397" translate="yes" xml:space="preserve">
          <source>AudioFormat.Encoding</source>
          <target state="translated">AudioFormat.Encoding</target>
        </trans-unit>
        <trans-unit id="6ef708b21407f40af6eccb19b98bd2a61b5a303e" translate="yes" xml:space="preserve">
          <source>AudioFormat.Encoding.equals()</source>
          <target state="translated">AudioFormat.Encoding.equals()</target>
        </trans-unit>
        <trans-unit id="6c370d5fece9b0850f624500e1dc42be389a536a" translate="yes" xml:space="preserve">
          <source>AudioFormat.Encoding.hashCode()</source>
          <target state="translated">AudioFormat.Encoding.hashCode()</target>
        </trans-unit>
        <trans-unit id="b51d5a4e97a4855213076c242e3a9443255aed8b" translate="yes" xml:space="preserve">
          <source>AudioFormat.Encoding.toString()</source>
          <target state="translated">AudioFormat.Encoding.toString()</target>
        </trans-unit>
        <trans-unit id="ac27de5eb1ead901faf9cfc4d830a655ec989db2" translate="yes" xml:space="preserve">
          <source>AudioFormat.getChannels()</source>
          <target state="translated">AudioFormat.getChannels()</target>
        </trans-unit>
        <trans-unit id="15aa87302533991bbc53a81462d6dc705c4e2844" translate="yes" xml:space="preserve">
          <source>AudioFormat.getEncoding()</source>
          <target state="translated">AudioFormat.getEncoding()</target>
        </trans-unit>
        <trans-unit id="7fbfa477a2b3c28263ce35bba16d5231b2258720" translate="yes" xml:space="preserve">
          <source>AudioFormat.getFrameRate()</source>
          <target state="translated">AudioFormat.getFrameRate()</target>
        </trans-unit>
        <trans-unit id="9aca5542cd316e89a862c9e9da4f26f9a5abcf86" translate="yes" xml:space="preserve">
          <source>AudioFormat.getFrameSize()</source>
          <target state="translated">AudioFormat.getFrameSize()</target>
        </trans-unit>
        <trans-unit id="c5b9124c56c52f48afd8c84132074ca6c237567c" translate="yes" xml:space="preserve">
          <source>AudioFormat.getProperty()</source>
          <target state="translated">AudioFormat.getProperty()</target>
        </trans-unit>
        <trans-unit id="f67e2d1b0aca4b89cee8c73265f638c90f8bb300" translate="yes" xml:space="preserve">
          <source>AudioFormat.getSampleRate()</source>
          <target state="translated">AudioFormat.getSampleRate()</target>
        </trans-unit>
        <trans-unit id="db2a713b3050993741831ee9ec5522916f1b7f7d" translate="yes" xml:space="preserve">
          <source>AudioFormat.getSampleSizeInBits()</source>
          <target state="translated">AudioFormat.getSampleSizeInBits()</target>
        </trans-unit>
        <trans-unit id="4d0cfd2146308b78e279d7ef5adb73815ad0a5f1" translate="yes" xml:space="preserve">
          <source>AudioFormat.isBigEndian()</source>
          <target state="translated">AudioFormat.isBigEndian()</target>
        </trans-unit>
        <trans-unit id="3ba4d0abfda8b5998ff241d49b9d0dd4ae298576" translate="yes" xml:space="preserve">
          <source>AudioFormat.matches()</source>
          <target state="translated">AudioFormat.matches()</target>
        </trans-unit>
        <trans-unit id="f41b87275155e00b15186ded87745cd4a44ce8c7" translate="yes" xml:space="preserve">
          <source>AudioFormat.properties()</source>
          <target state="translated">AudioFormat.properties()</target>
        </trans-unit>
        <trans-unit id="cb4d3f27ca8a0ea37a984de9c50a64ab17875f5e" translate="yes" xml:space="preserve">
          <source>AudioFormat.toString()</source>
          <target state="translated">AudioFormat.toString()</target>
        </trans-unit>
        <trans-unit id="69b8ab6239eee18d43af32ad99be9469ce246f00" translate="yes" xml:space="preserve">
          <source>AudioInputStream</source>
          <target state="translated">AudioInputStream</target>
        </trans-unit>
        <trans-unit id="d14dbba15357b3672895f3c573e5cc9f3a757d2e" translate="yes" xml:space="preserve">
          <source>AudioInputStream.available()</source>
          <target state="translated">AudioInputStream.available()</target>
        </trans-unit>
        <trans-unit id="3d624c2c24ae696289c103cdaa5ae983f5ce5bc8" translate="yes" xml:space="preserve">
          <source>AudioInputStream.close()</source>
          <target state="translated">AudioInputStream.close()</target>
        </trans-unit>
        <trans-unit id="8452e4155bf4b68c55f3e8dae220ba5f71e0bc89" translate="yes" xml:space="preserve">
          <source>AudioInputStream.getFormat()</source>
          <target state="translated">AudioInputStream.getFormat()</target>
        </trans-unit>
        <trans-unit id="7e984fab7faee7608df2b1015a25059feff72ed3" translate="yes" xml:space="preserve">
          <source>AudioInputStream.getFrameLength()</source>
          <target state="translated">AudioInputStream.getFrameLength()</target>
        </trans-unit>
        <trans-unit id="9a6d2fba5b0fe994c732cac28a358528a2540094" translate="yes" xml:space="preserve">
          <source>AudioInputStream.mark()</source>
          <target state="translated">AudioInputStream.mark()</target>
        </trans-unit>
        <trans-unit id="efef21349f5e604ea21dc7e1b3fd80c5a6e4bd6a" translate="yes" xml:space="preserve">
          <source>AudioInputStream.markSupported()</source>
          <target state="translated">AudioInputStream.markSupported()</target>
        </trans-unit>
        <trans-unit id="2403f3298e5bfd969e02f3ffccf2c8441f34f527" translate="yes" xml:space="preserve">
          <source>AudioInputStream.read()</source>
          <target state="translated">AudioInputStream.read()</target>
        </trans-unit>
        <trans-unit id="10f496df4d32ff5eeebaa17ee0484ac8942f86cd" translate="yes" xml:space="preserve">
          <source>AudioInputStream.reset()</source>
          <target state="translated">AudioInputStream.reset()</target>
        </trans-unit>
        <trans-unit id="4e2b567d980504ee2b4c9045339fff73160b2d16" translate="yes" xml:space="preserve">
          <source>AudioInputStream.skip()</source>
          <target state="translated">AudioInputStream.skip()</target>
        </trans-unit>
        <trans-unit id="a7647f46f5f41b28f3ea4a0b49f7aff9e9a9de2c" translate="yes" xml:space="preserve">
          <source>AudioPermission</source>
          <target state="translated">AudioPermission</target>
        </trans-unit>
        <trans-unit id="7b6ab8a7275e4006c05561127978f6d1d5c9131d" translate="yes" xml:space="preserve">
          <source>AudioSystem</source>
          <target state="translated">AudioSystem</target>
        </trans-unit>
        <trans-unit id="12a677ee861f9831315d213fa05a12e8a05b66fa" translate="yes" xml:space="preserve">
          <source>AudioSystem.getAudioFileFormat()</source>
          <target state="translated">AudioSystem.getAudioFileFormat()</target>
        </trans-unit>
        <trans-unit id="6a8fac74ca7a116b086aa9275a187b43d2e461d7" translate="yes" xml:space="preserve">
          <source>AudioSystem.getAudioFileTypes()</source>
          <target state="translated">AudioSystem.getAudioFileTypes()</target>
        </trans-unit>
        <trans-unit id="883ce331b04441c102f465ed0e479dd793190d48" translate="yes" xml:space="preserve">
          <source>AudioSystem.getAudioInputStream()</source>
          <target state="translated">AudioSystem.getAudioInputStream()</target>
        </trans-unit>
        <trans-unit id="27ebb6073423c88642bac0871423c9470115e022" translate="yes" xml:space="preserve">
          <source>AudioSystem.getClip()</source>
          <target state="translated">AudioSystem.getClip()</target>
        </trans-unit>
        <trans-unit id="2979bb2ddcebbaf35e1958362b6f9eaeb0e78c50" translate="yes" xml:space="preserve">
          <source>AudioSystem.getLine()</source>
          <target state="translated">AudioSystem.getLine()</target>
        </trans-unit>
        <trans-unit id="e3e76fbf1e1ba8197d109096bb544118e8e46995" translate="yes" xml:space="preserve">
          <source>AudioSystem.getMixer()</source>
          <target state="translated">AudioSystem.getMixer()</target>
        </trans-unit>
        <trans-unit id="0da0d279ee03aca3c809cabaab251e30568bcd49" translate="yes" xml:space="preserve">
          <source>AudioSystem.getMixerInfo()</source>
          <target state="translated">AudioSystem.getMixerInfo()</target>
        </trans-unit>
        <trans-unit id="82dafcbb18539369d98bea7fc9c0796d796cc144" translate="yes" xml:space="preserve">
          <source>AudioSystem.getSourceDataLine()</source>
          <target state="translated">AudioSystem.getSourceDataLine()</target>
        </trans-unit>
        <trans-unit id="26f2aec9a7e85fe5e165d5139769f8639cadaaed" translate="yes" xml:space="preserve">
          <source>AudioSystem.getSourceLineInfo()</source>
          <target state="translated">AudioSystem.getSourceLineInfo()</target>
        </trans-unit>
        <trans-unit id="3211dbd031fe5d6134ffdf6a771d7d987b68a7c6" translate="yes" xml:space="preserve">
          <source>AudioSystem.getTargetDataLine()</source>
          <target state="translated">AudioSystem.getTargetDataLine()</target>
        </trans-unit>
        <trans-unit id="d83f0fdbc1f532e3c2234a9869759ef3257ff55c" translate="yes" xml:space="preserve">
          <source>AudioSystem.getTargetEncodings()</source>
          <target state="translated">AudioSystem.getTargetEncodings()</target>
        </trans-unit>
        <trans-unit id="c3f163f534f8aa87d53140eec1d8bfffaf0dfe89" translate="yes" xml:space="preserve">
          <source>AudioSystem.getTargetFormats()</source>
          <target state="translated">AudioSystem.getTargetFormats()</target>
        </trans-unit>
        <trans-unit id="f5c79382e8a0ef3108e0abdabc9e3be52e82904f" translate="yes" xml:space="preserve">
          <source>AudioSystem.getTargetLineInfo()</source>
          <target state="translated">AudioSystem.getTargetLineInfo()</target>
        </trans-unit>
        <trans-unit id="45f21cb3a330b293024aadbfb4617b1f230154c1" translate="yes" xml:space="preserve">
          <source>AudioSystem.isConversionSupported()</source>
          <target state="translated">AudioSystem.isConversionSupported()</target>
        </trans-unit>
        <trans-unit id="b34e7251f47cef6d0d6bb395eef2edb2fde9b967" translate="yes" xml:space="preserve">
          <source>AudioSystem.isFileTypeSupported()</source>
          <target state="translated">AudioSystem.isFileTypeSupported()</target>
        </trans-unit>
        <trans-unit id="078aed7ce38a1e087383f3da6c2aaee4b2b05d4e" translate="yes" xml:space="preserve">
          <source>AudioSystem.isLineSupported()</source>
          <target state="translated">AudioSystem.isLineSupported()</target>
        </trans-unit>
        <trans-unit id="b45866d18c5b0df1c32de2695769038f81bea956" translate="yes" xml:space="preserve">
          <source>AudioSystem.write()</source>
          <target state="translated">AudioSystem.write()</target>
        </trans-unit>
        <trans-unit id="3b9d6feb9dfae82937f0c497fb3b26ffd1cfe5be" translate="yes" xml:space="preserve">
          <source>AuthPermission</source>
          <target state="translated">AuthPermission</target>
        </trans-unit>
        <trans-unit id="31dcbcc284e85669c0cbfd5e521e107f7512f300" translate="yes" xml:space="preserve">
          <source>AuthProvider</source>
          <target state="translated">AuthProvider</target>
        </trans-unit>
        <trans-unit id="73335e6d66ae490378f354cf410418b1641ed04e" translate="yes" xml:space="preserve">
          <source>AuthProvider.login()</source>
          <target state="translated">AuthProvider.login()</target>
        </trans-unit>
        <trans-unit id="653831f9667906b736b3ff6a2ec9711d97d76873" translate="yes" xml:space="preserve">
          <source>AuthProvider.logout()</source>
          <target state="translated">AuthProvider.logout()</target>
        </trans-unit>
        <trans-unit id="d000b082cf765a9cabe5f428657bc26d9237fb2f" translate="yes" xml:space="preserve">
          <source>AuthProvider.setCallbackHandler()</source>
          <target state="translated">AuthProvider.setCallbackHandler()</target>
        </trans-unit>
        <trans-unit id="4e722519bb2740f40b3ae7197b8257ff8435a1cd" translate="yes" xml:space="preserve">
          <source>Authenticate the user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f1396e57cda5fcd324e88bf86d3706451098d8" translate="yes" xml:space="preserve">
          <source>Authenticate the user (first phase).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7763c787e16f28655c4c188547fd013660eefc9d" translate="yes" xml:space="preserve">
          <source>Authenticate the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e428ae55ba51a28fe68ce56a32525ef4d9329064" translate="yes" xml:space="preserve">
          <source>Authenticates the &lt;code&gt;MBeanServerConnection&lt;/code&gt; client with the given client credentials.</source>
          <target state="translated">指定されたクライアント資格で &lt;code&gt;MBeanServerConnection&lt;/code&gt; クライアントを認証します。</target>
        </trans-unit>
        <trans-unit id="9d1cce4f75d26093c7cb32e71281a2a9f922488e" translate="yes" xml:space="preserve">
          <source>AuthenticationException</source>
          <target state="translated">AuthenticationException</target>
        </trans-unit>
        <trans-unit id="4d3d46950665249a78264334bcbf4120e40bcfd6" translate="yes" xml:space="preserve">
          <source>AuthenticationNotSupportedException</source>
          <target state="translated">AuthenticationNotSupportedException</target>
        </trans-unit>
        <trans-unit id="4853c808b11b9b67738f58bbcfad661b3344e999" translate="yes" xml:space="preserve">
          <source>Authenticator</source>
          <target state="translated">Authenticator</target>
        </trans-unit>
        <trans-unit id="168dbaa9e9f623aa1b921ac5277a294a8abedb75" translate="yes" xml:space="preserve">
          <source>Authenticator represents an implementation of an HTTP authentication mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8761a83effc609b12e3f9f9f699752e06467ad3" translate="yes" xml:space="preserve">
          <source>Authenticator represents an implementation of an HTTP authentication mechanism. Sub-classes provide implementations of specific mechanisms such as Digest or Basic auth. Instances are invoked to provide verification of the authentication information provided in all incoming requests. Note. This implies that any caching of credentials or other authentication information must be done outside of this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de35974d8b4165d8b6026f15d01cac242d663848" translate="yes" xml:space="preserve">
          <source>Authenticator.Failure</source>
          <target state="translated">Authenticator.Failure</target>
        </trans-unit>
        <trans-unit id="ce00c76e2c2e0db314fc84710385f08a74541e13" translate="yes" xml:space="preserve">
          <source>Authenticator.RequestorType</source>
          <target state="translated">Authenticator.RequestorType</target>
        </trans-unit>
        <trans-unit id="aafd210228565b37fa3f31c2c2d087a1e1bd2433" translate="yes" xml:space="preserve">
          <source>Authenticator.RequestorType.valueOf()</source>
          <target state="translated">Authenticator.RequestorType.valueOf()</target>
        </trans-unit>
        <trans-unit id="f7a5b9c4b60acea70e47d5bf2743a93deb8e8ec0" translate="yes" xml:space="preserve">
          <source>Authenticator.RequestorType.values()</source>
          <target state="translated">Authenticator.RequestorType.values()</target>
        </trans-unit>
        <trans-unit id="814724b11b3cb18be5f6476b5ec8152be114c997" translate="yes" xml:space="preserve">
          <source>Authenticator.Result</source>
          <target state="translated">Authenticator.Result</target>
        </trans-unit>
        <trans-unit id="03e1182eb8e3aef39cbdad75cbb7c798d4e730bc" translate="yes" xml:space="preserve">
          <source>Authenticator.Retry</source>
          <target state="translated">Authenticator.Retry</target>
        </trans-unit>
        <trans-unit id="7a0295df3ab06c198943a0c1d29b45261df2ca77" translate="yes" xml:space="preserve">
          <source>Authenticator.Success</source>
          <target state="translated">Authenticator.Success</target>
        </trans-unit>
        <trans-unit id="c006dae2d7fa632e43d70b45cfa97ea28fb9350b" translate="yes" xml:space="preserve">
          <source>Authenticator.getPasswordAuthentication()</source>
          <target state="translated">Authenticator.getPasswordAuthentication()</target>
        </trans-unit>
        <trans-unit id="270842216280866d72e01e4bdd945f588f132d2b" translate="yes" xml:space="preserve">
          <source>Authenticator.getRequestingHost()</source>
          <target state="translated">Authenticator.getRequestingHost()</target>
        </trans-unit>
        <trans-unit id="d710f51435e7aa8bef92242c4bdca288c2a629a8" translate="yes" xml:space="preserve">
          <source>Authenticator.getRequestingPort()</source>
          <target state="translated">Authenticator.getRequestingPort()</target>
        </trans-unit>
        <trans-unit id="7a7048c8b5c6db4c315dfd3878ac2a8f8be48e7a" translate="yes" xml:space="preserve">
          <source>Authenticator.getRequestingPrompt()</source>
          <target state="translated">Authenticator.getRequestingPrompt()</target>
        </trans-unit>
        <trans-unit id="17f4b68df0bf2ddad7ba58123d840a67211df358" translate="yes" xml:space="preserve">
          <source>Authenticator.getRequestingProtocol()</source>
          <target state="translated">Authenticator.getRequestingProtocol()</target>
        </trans-unit>
        <trans-unit id="5bec0ece8c518281f99d941b225914398dbc1784" translate="yes" xml:space="preserve">
          <source>Authenticator.getRequestingScheme()</source>
          <target state="translated">Authenticator.getRequestingScheme()</target>
        </trans-unit>
        <trans-unit id="6936e960e2568303453b355d1c10cbf0d3ac0f4f" translate="yes" xml:space="preserve">
          <source>Authenticator.getRequestingSite()</source>
          <target state="translated">Authenticator.getRequestingSite()</target>
        </trans-unit>
        <trans-unit id="dc751c6c822d2d69eca43765af31b863343ee110" translate="yes" xml:space="preserve">
          <source>Authenticator.getRequestingURL()</source>
          <target state="translated">Authenticator.getRequestingURL()</target>
        </trans-unit>
        <trans-unit id="a4186842434ad19f730821673d0c291325121523" translate="yes" xml:space="preserve">
          <source>Authenticator.getRequestorType()</source>
          <target state="translated">Authenticator.getRequestorType()</target>
        </trans-unit>
        <trans-unit id="c6134474400a73540a30c51d8370eec3386c6515" translate="yes" xml:space="preserve">
          <source>Authenticator.requestPasswordAuthentication()</source>
          <target state="translated">Authenticator.requestPasswordAuthentication()</target>
        </trans-unit>
        <trans-unit id="cce6e55b4704f063864f77a507a16b3758994764" translate="yes" xml:space="preserve">
          <source>Authenticator.setDefault()</source>
          <target state="translated">Authenticator.setDefault()</target>
        </trans-unit>
        <trans-unit id="1089489f78a6e7518de5cdf8a4abe3de32a50402" translate="yes" xml:space="preserve">
          <source>AuthorTree</source>
          <target state="translated">AuthorTree</target>
        </trans-unit>
        <trans-unit id="ab1244805710c8e7c03970d0bbc8c6216aa8f2d9" translate="yes" xml:space="preserve">
          <source>Authority key identifiers are not parsed by the &lt;code&gt;X509CertSelector&lt;/code&gt;. Instead, the values are compared using a byte-by-byte comparison.</source>
          <target state="translated">権限キー識別子は &lt;code&gt;X509CertSelector&lt;/code&gt; によって解析されません。代わりに、値はバイトごとの比較を使用して比較されます。</target>
        </trans-unit>
        <trans-unit id="013503a2aa0ce466450f0b8797ab4608d9afdd98" translate="yes" xml:space="preserve">
          <source>AuthorityKeyIdentifier</source>
          <target state="translated">AuthorityKeyIdentifier</target>
        </trans-unit>
        <trans-unit id="bfc0e4f82144be837282807f31fc6ee9fa81ecc3" translate="yes" xml:space="preserve">
          <source>AuthorizationDataEntry</source>
          <target state="translated">AuthorizationDataEntry</target>
        </trans-unit>
        <trans-unit id="f49d76999a2f373090058b3362254fd440f7cd2b" translate="yes" xml:space="preserve">
          <source>AuthorizeCallback</source>
          <target state="translated">AuthorizeCallback</target>
        </trans-unit>
        <trans-unit id="2ed7ef68c9e356e5fac7c4ff23e52abbd57cf7f5" translate="yes" xml:space="preserve">
          <source>AuthorizeCallback.getAuthenticationID()</source>
          <target state="translated">AuthorizeCallback.getAuthenticationID()</target>
        </trans-unit>
        <trans-unit id="8e59e9ef4c03d005d2cb00f266097a3712b0932b" translate="yes" xml:space="preserve">
          <source>AuthorizeCallback.getAuthorizationID()</source>
          <target state="translated">AuthorizeCallback.getAuthorizationID()</target>
        </trans-unit>
        <trans-unit id="68c55d36099094a9526998a6677168f67490639f" translate="yes" xml:space="preserve">
          <source>AuthorizeCallback.getAuthorizedID()</source>
          <target state="translated">AuthorizeCallback.getAuthorizedID()</target>
        </trans-unit>
        <trans-unit id="0f571aa086dbb89b41827a007756644d944eb42e" translate="yes" xml:space="preserve">
          <source>AuthorizeCallback.isAuthorized()</source>
          <target state="translated">AuthorizeCallback.isAuthorized()</target>
        </trans-unit>
        <trans-unit id="3ec3f37e5a36b832f7b957af714e30583271e8ee" translate="yes" xml:space="preserve">
          <source>AuthorizeCallback.setAuthorized()</source>
          <target state="translated">AuthorizeCallback.setAuthorized()</target>
        </trans-unit>
        <trans-unit id="d1a8f7b5424312ec74fad5ac7d50444f6930fb4e" translate="yes" xml:space="preserve">
          <source>AuthorizeCallback.setAuthorizedID()</source>
          <target state="translated">AuthorizeCallback.setAuthorizedID()</target>
        </trans-unit>
        <trans-unit id="671417172f076e5ba7613593c53d0a895dc87087" translate="yes" xml:space="preserve">
          <source>AutoCloseable</source>
          <target state="translated">AutoCloseable</target>
        </trans-unit>
        <trans-unit id="2830ba856ca3be7dd02d68fbe5bb30b706dbd5eb" translate="yes" xml:space="preserve">
          <source>AutoCloseable.close()</source>
          <target state="translated">AutoCloseable.close()</target>
        </trans-unit>
        <trans-unit id="abad1fc7db24f8a92c96f1d8d25ffa75f7a83427" translate="yes" xml:space="preserve">
          <source>Automatic discovery of the LDAP server via DNS (&lt;a href=&quot;https://www.ietf.org/rfc/rfc2782.txt&quot;&gt;RFC 2782&lt;/a&gt;) is supported (once DNS has been configured to support such a service). It is enabled by omitting the hostname and port number components from the LDAP URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba8b773a0baef436201ec7b15feca4018bb987e" translate="yes" xml:space="preserve">
          <source>Automatically dispose of the internal frame.</source>
          <target state="translated">内枠を自動的に処分します。</target>
        </trans-unit>
        <trans-unit id="78e74f010099b4d71566449ac818c4ee4256c8db" translate="yes" xml:space="preserve">
          <source>Automatically make the internal frame invisible.</source>
          <target state="translated">自動的に内枠を不可視にします。</target>
        </trans-unit>
        <trans-unit id="798fc0b60615eb3c2d8816d959e2043b726c328f" translate="yes" xml:space="preserve">
          <source>Autoscroll</source>
          <target state="translated">Autoscroll</target>
        </trans-unit>
        <trans-unit id="221660cc15b2ff7a5f1b6b4539a7a38f6c368678" translate="yes" xml:space="preserve">
          <source>Auxiliary event containing a list of files.</source>
          <target state="translated">ファイルのリストを含む補助イベント。</target>
        </trans-unit>
        <trans-unit id="21597014eef150c761dfa37e0bc397a056a8b5b6" translate="yes" xml:space="preserve">
          <source>Availability to be notified when a &lt;code&gt;PreparedStatement&lt;/code&gt; that is associated with a &lt;code&gt;PooledConnection&lt;/code&gt; has been closed or the driver determines is invalid</source>
          <target state="translated">&lt;code&gt;PooledConnection&lt;/code&gt; に関連付けられている &lt;code&gt;PreparedStatement&lt;/code&gt; が閉じられたとき、またはドライバーが無効であると判断したときに通知される可用性</target>
        </trans-unit>
        <trans-unit id="344b1fd605ebe7131fdc726b6c1caf452314f334" translate="yes" xml:space="preserve">
          <source>Available operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f736018fdbf7e09e214d29c2d088294ec14f5af" translate="yes" xml:space="preserve">
          <source>Available providers can be registered on a JNDI context, and the &lt;code&gt;SyncFactory&lt;/code&gt; will attempt to load &lt;code&gt;SyncProvider&lt;/code&gt; implementations from that JNDI context. For example, the following code fragment registers a provider implementation on a JNDI context. This is something a deployer would normally do. In this example, &lt;code&gt;MyProvider&lt;/code&gt; is being registered on a CosNaming namespace, which is the namespace used by J2EE resources.</source>
          <target state="translated">使用可能なプロバイダーはJNDIコンテキストに登録でき、 &lt;code&gt;SyncFactory&lt;/code&gt; はそのJNDIコンテキストから &lt;code&gt;SyncProvider&lt;/code&gt; 実装をロードしようとします。たとえば、次のコードフラグメントは、JNDIコンテキストでプロバイダー実装を登録します。これは、デプロイヤーが通常行うことです。この例では、 &lt;code&gt;MyProvider&lt;/code&gt; はCosNaming名前空間に登録されています。これは、J2EEリソースによって使用される名前空間です。</target>
        </trans-unit>
        <trans-unit id="dba5d9a5e3886a841cca600e9c59875e4dd23b21" translate="yes" xml:space="preserve">
          <source>Available resource bundles: &lt;code&gt;foo/bar/Messages_fr.properties&lt;/code&gt; and &lt;code&gt;foo/bar/Messages.properties&lt;/code&gt;</source>
          <target state="translated">利用可能なリソースバンドル： &lt;code&gt;foo/bar/Messages_fr.properties&lt;/code&gt; および &lt;code&gt;foo/bar/Messages.properties&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89c4345631c574161c5d0a4b702b8d7876854f8f" translate="yes" xml:space="preserve">
          <source>Await and obtain result</source>
          <target state="translated">結果を待って、結果を得る</target>
        </trans-unit>
        <trans-unit id="d296533c86c93a5a4883d9a37960c5ba8505fec9" translate="yes" xml:space="preserve">
          <source>Awaits termination of the group.</source>
          <target state="translated">グループの終了を待ちます。</target>
        </trans-unit>
        <trans-unit id="c5c6303dd4f2ce2cbe02ee9fa34ca88c4d17ced7" translate="yes" xml:space="preserve">
          <source>Awaits the phase of this phaser to advance from the given phase value or the given timeout to elapse, throwing &lt;code&gt;
 InterruptedException&lt;/code&gt; if interrupted while waiting, or returning immediately if the current phase is not equal to the given phase value or this phaser is terminated.</source>
          <target state="translated">このフェイザーのフェーズが指定されたフェーズ値または指定されたタイムアウトから経過するのを待機し、待機中に &lt;code&gt; InterruptedException&lt;/code&gt; 場合はInterruptedExceptionをスローし、現在のフェーズが指定されたフェーズ値と等しくないか、このフェイザーが終了した場合はすぐに戻ります。</target>
        </trans-unit>
        <trans-unit id="1e1af80c4563aed36671070cabec7e65d23da811" translate="yes" xml:space="preserve">
          <source>Awaits the phase of this phaser to advance from the given phase value or the given timeout to elapse, throwing &lt;code&gt;InterruptedException&lt;/code&gt; if interrupted while waiting, or returning immediately if the current phase is not equal to the given phase value or this phaser is terminated.</source>
          <target state="translated">このフェーザーのフェーズが指定されたフェーズ値またはタイムアウトから経過するまで待機し、待機中に &lt;code&gt;InterruptedException&lt;/code&gt; 場合はInterruptedExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="b5f3dd3721fa81a4c8cabb26cfa6ed7c929c494a" translate="yes" xml:space="preserve">
          <source>Awaits the phase of this phaser to advance from the given phase value, returning immediately if the current phase is not equal to the given phase value or this phaser is terminated.</source>
          <target state="translated">このフェイザーの位相が与えられた位相値から進むのを待ち、現在の位相が与えられた位相値と等しくない場合、またはこのフェイザーが終了した場合は直ちに戻ります。</target>
        </trans-unit>
        <trans-unit id="a22e6ae212ae3823d623ab667deded86473022db" translate="yes" xml:space="preserve">
          <source>Awaits the phase of this phaser to advance from the given phase value, throwing &lt;code&gt;InterruptedException&lt;/code&gt; if interrupted while waiting, or returning immediately if the current phase is not equal to the given phase value or this phaser is terminated.</source>
          <target state="translated">このフェーザーのフェーズが指定されたフェーズ値から進むのを待機します。待機中に &lt;code&gt;InterruptedException&lt;/code&gt; 場合は、InterruptedExceptionをスローします。現在のフェーズが指定されたフェーズ値と等しくない場合、またはこのフェーザーが終了した場合は、すぐに戻ります。</target>
        </trans-unit>
        <trans-unit id="d9a66225ad1de1069f6aadf29e09201a42986af0" translate="yes" xml:space="preserve">
          <source>Axis for format/break operations.</source>
          <target state="translated">フォーマット/ブレーク操作のための軸。</target>
        </trans-unit>
        <trans-unit id="45d42d47fd20e68ecac43fddc0e3752c24ee4676" translate="yes" xml:space="preserve">
          <source>Axis variation.</source>
          <target state="translated">軸のバリエーション。</target>
        </trans-unit>
        <trans-unit id="a89a8708353f287dfa03ee5e0b25e60aefbc785e" translate="yes" xml:space="preserve">
          <source>Axis variation. Table tag &quot;avar&quot; in the Open Type Specification.</source>
          <target state="translated">軸のバリエーション。オープンタイプ仕様のテーブルタグ「avar」。</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="17ce16dd55ecc4a625798ef48d952d2a253bbec1" translate="yes" xml:space="preserve">
          <source>B size .</source>
          <target state="translated">Bサイズ。</target>
        </trans-unit>
        <trans-unit id="965cf60c1cf8dd72e3c8493a1d4bab2ee34484b8" translate="yes" xml:space="preserve">
          <source>B size.</source>
          <target state="translated">Bサイズです。</target>
        </trans-unit>
        <trans-unit id="cd5bf362ddfe233106cabcd727d4106dce09b5e9" translate="yes" xml:space="preserve">
          <source>B.E. (Buddhist Era)</source>
          <target state="translated">維新</target>
        </trans-unit>
        <trans-unit id="ca874deaab16366191c7957785eea44d50d3a744" translate="yes" xml:space="preserve">
          <source>B0</source>
          <target state="translated">B0</target>
        </trans-unit>
        <trans-unit id="ef48c8d0df5118edd036315d2021412c3ca49d8a" translate="yes" xml:space="preserve">
          <source>B1</source>
          <target state="translated">B1</target>
        </trans-unit>
        <trans-unit id="add4127aa37a76bcbcd6e5edf9f2bdc0c99009a6" translate="yes" xml:space="preserve">
          <source>B10</source>
          <target state="translated">B10</target>
        </trans-unit>
        <trans-unit id="d7d321cd8f852dd84037aad117400f65d20cb2fe" translate="yes" xml:space="preserve">
          <source>B2</source>
          <target state="translated">B2</target>
        </trans-unit>
        <trans-unit id="2a728b64dd5e3817fb20441a73940eb7f662f0d7" translate="yes" xml:space="preserve">
          <source>B3</source>
          <target state="translated">B3</target>
        </trans-unit>
        <trans-unit id="c6400eaec160a4a41543edfea959e655d8e35d9f" translate="yes" xml:space="preserve">
          <source>B4</source>
          <target state="translated">B4</target>
        </trans-unit>
        <trans-unit id="6952d23be8231427a9994cf117ac904e19922eea" translate="yes" xml:space="preserve">
          <source>B5</source>
          <target state="translated">B5</target>
        </trans-unit>
        <trans-unit id="47c92ee1c48b3c7faaa260318ff0c51bf6eac420" translate="yes" xml:space="preserve">
          <source>B6</source>
          <target state="translated">B6</target>
        </trans-unit>
        <trans-unit id="20cf11aa74c2b447363ff2abd540bd2a270581cf" translate="yes" xml:space="preserve">
          <source>B7</source>
          <target state="translated">B7</target>
        </trans-unit>
        <trans-unit id="32526d1d6e8be7be93c88ba8c14ec09d51784d1a" translate="yes" xml:space="preserve">
          <source>B8</source>
          <target state="translated">B8</target>
        </trans-unit>
        <trans-unit id="74a7976468c3c0ea75025f15ae2b8f2207a4014d" translate="yes" xml:space="preserve">
          <source>B9</source>
          <target state="translated">B9</target>
        </trans-unit>
        <trans-unit id="0ea215ea0d9fd72e588e95dd28b0d5d1883ecede" translate="yes" xml:space="preserve">
          <source>BACKGROUND</source>
          <target state="translated">BACKGROUND</target>
        </trans-unit>
        <trans-unit id="883c0d3031b1f1d00981700e7d7a9ddef438b8d8" translate="yes" xml:space="preserve">
          <source>BACKGROUND_ATTACHMENT</source>
          <target state="translated">BACKGROUND_ATTACHMENT</target>
        </trans-unit>
        <trans-unit id="e96dafc74a01474a7744e0adff18da4248fc49e7" translate="yes" xml:space="preserve">
          <source>BACKGROUND_COLOR</source>
          <target state="translated">BACKGROUND_COLOR</target>
        </trans-unit>
        <trans-unit id="d6847ada965565f7aa2c105a200dc19ce9655659" translate="yes" xml:space="preserve">
          <source>BACKGROUND_IMAGE</source>
          <target state="translated">BACKGROUND_IMAGE</target>
        </trans-unit>
        <trans-unit id="311481dd0f3c8376d4e5f6acc43bc35b0c8dcfce" translate="yes" xml:space="preserve">
          <source>BACKGROUND_POSITION</source>
          <target state="translated">BACKGROUND_POSITION</target>
        </trans-unit>
        <trans-unit id="7f5e2b5341aceee8e726a48bce8a4c6adc9a0041" translate="yes" xml:space="preserve">
          <source>BACKGROUND_REPEAT</source>
          <target state="translated">BACKGROUND_REPEAT</target>
        </trans-unit>
        <trans-unit id="a13d8680a4ee10a3aa3341db4313bfed2d522911" translate="yes" xml:space="preserve">
          <source>BACKINGSTORE_SCROLL_MODE</source>
          <target state="translated">BACKINGSTORE_SCROLL_MODE</target>
        </trans-unit>
        <trans-unit id="2cfb2b7c1bc20a2ac25024b2f31293edd3cbcaa7" translate="yes" xml:space="preserve">
          <source>BACKWARD_TRAVERSAL_KEYS</source>
          <target state="translated">BACKWARD_TRAVERSAL_KEYS</target>
        </trans-unit>
        <trans-unit id="c44bf7f2c4a0710247c82420076a935f4facb9b7" translate="yes" xml:space="preserve">
          <source>BACK_SPACE</source>
          <target state="translated">BACK_SPACE</target>
        </trans-unit>
        <trans-unit id="5981ce01df67cf8b0f9cc997beb1d6a08627342e" translate="yes" xml:space="preserve">
          <source>BAD_BINDINGS</source>
          <target state="translated">BAD_BINDINGS</target>
        </trans-unit>
        <trans-unit id="8b93bc7dd0fd6138be207983ff1172d7dc531ad3" translate="yes" xml:space="preserve">
          <source>BAD_BOUNDARYPOINTS_ERR</source>
          <target state="translated">BAD_BOUNDARYPOINTS_ERR</target>
        </trans-unit>
        <trans-unit id="5dfac063a85220b6863f2f8946fed84c83f1d8bf" translate="yes" xml:space="preserve">
          <source>BAD_LOCATION</source>
          <target state="translated">BAD_LOCATION</target>
        </trans-unit>
        <trans-unit id="64c837ff8e44290f5ed0d841351676e3a474a64a" translate="yes" xml:space="preserve">
          <source>BAD_MECH</source>
          <target state="translated">BAD_MECH</target>
        </trans-unit>
        <trans-unit id="24725017ca08b18a6f727d29eea1d285c70b187f" translate="yes" xml:space="preserve">
          <source>BAD_MIC</source>
          <target state="translated">BAD_MIC</target>
        </trans-unit>
        <trans-unit id="92180042a5c3a07c48214c6099dd47b562e1c04a" translate="yes" xml:space="preserve">
          <source>BAD_NAME</source>
          <target state="translated">BAD_NAME</target>
        </trans-unit>
        <trans-unit id="6603b20bbe0fe9707a871761cc08ab73c55bf13f" translate="yes" xml:space="preserve">
          <source>BAD_NAMETYPE</source>
          <target state="translated">BAD_NAMETYPE</target>
        </trans-unit>
        <trans-unit id="4a93de8d6df836d533b779c0528f477672b1c58c" translate="yes" xml:space="preserve">
          <source>BAD_QOP</source>
          <target state="translated">BAD_QOP</target>
        </trans-unit>
        <trans-unit id="0dd4ee134d32217906993bf2a019dd5c6b8041f8" translate="yes" xml:space="preserve">
          <source>BAD_STATUS</source>
          <target state="translated">BAD_STATUS</target>
        </trans-unit>
        <trans-unit id="2b3ccf951751c5efb177f4b89ce8fae2304af5b5" translate="yes" xml:space="preserve">
          <source>BALANCE</source>
          <target state="translated">BALANCE</target>
        </trans-unit>
        <trans-unit id="3ad722fbb916cd87ec8e36f4cb2adc4fd315993e" translate="yes" xml:space="preserve">
          <source>BALINESE</source>
          <target state="translated">BALINESE</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
