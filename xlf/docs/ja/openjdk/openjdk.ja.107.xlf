<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="eae14c4bd72e87b625997f98fead6138eb146fd4" translate="yes" xml:space="preserve">
          <source>Initializes a new decoder.</source>
          <target state="translated">新しいデコーダを初期化します。</target>
        </trans-unit>
        <trans-unit id="c3ddc2a276ec0c8dabdd9e039fed96ad192d2717" translate="yes" xml:space="preserve">
          <source>Initializes a new decoder. The new decoder will have the given chars-per-byte values and its replacement will be the string &lt;code&gt;&quot;\uFFFD&quot;&lt;/code&gt;.</source>
          <target state="translated">新しいデコーダを初期化します。新しいデコーダーは指定されたバイトあたりの &lt;code&gt;&quot;\uFFFD&quot;&lt;/code&gt; 値を持ち、その置き換えは文字列&quot;\ uFFFD&quot;になります。</target>
        </trans-unit>
        <trans-unit id="9e97ee657aa997d41a0babf2d7f49eb91b0d725d" translate="yes" xml:space="preserve">
          <source>Initializes a new encoder.</source>
          <target state="translated">新しいエンコーダを初期化します。</target>
        </trans-unit>
        <trans-unit id="023a709b62ac98a24ab0bb77d33e4d352d90eea8" translate="yes" xml:space="preserve">
          <source>Initializes a new encoder. The new encoder will have the given bytes-per-char and replacement values.</source>
          <target state="translated">新しいエンコーダを初期化します。新しいエンコーダは、与えられた 1 文字あたりのバイト数と置換値を持ちます。</target>
        </trans-unit>
        <trans-unit id="dbececf0a9e2332482473e09ca117af8727c0d2c" translate="yes" xml:space="preserve">
          <source>Initializes a new encoder. The new encoder will have the given bytes-per-char values and its replacement will be the byte array &lt;code&gt;{&lt;/code&gt;&lt;code&gt;(byte)'?'&lt;/code&gt;&lt;code&gt;}&lt;/code&gt;.</source>
          <target state="translated">新しいエンコーダを初期化します。新しいエンコーダーは、指定されたchars-per-char値を持ち、その置換はバイト配列 &lt;code&gt;{&lt;/code&gt; &lt;code&gt;(byte)'?'&lt;/code&gt; になります。 &lt;code&gt;}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="efc0653fca87708ab954545c55f7674d2194732f" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of &lt;code&gt;EventQueue&lt;/code&gt;.</source>
          <target state="translated">Initializes a new instance of &lt;code&gt;EventQueue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c2c6c013915694c75eff4b616add2a629d3fc99" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of this class.</source>
          <target state="translated">このクラスの新しいインスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="4aa3d7f2a6ecbf808800470efc95c9449ee5c816" translate="yes" xml:space="preserve">
          <source>Initializes a new locale service provider.</source>
          <target state="translated">新しいロケールサービスプロバイダを初期化します。</target>
        </trans-unit>
        <trans-unit id="923392b72720ec2809da8879ad431864c1c5e2e3" translate="yes" xml:space="preserve">
          <source>Initializes a newly created &lt;code&gt;SequenceInputStream&lt;/code&gt; by remembering the argument, which must be an &lt;code&gt;Enumeration&lt;/code&gt; that produces objects whose run-time type is &lt;code&gt;InputStream&lt;/code&gt;.</source>
          <target state="translated">Initializes a newly created &lt;code&gt;SequenceInputStream&lt;/code&gt; by remembering the argument, which must be an &lt;code&gt;Enumeration&lt;/code&gt; that produces objects whose run-time type is &lt;code&gt;InputStream&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1a14b7ef6fc3a9ed2de365ed0375d1f9f005024" translate="yes" xml:space="preserve">
          <source>Initializes a newly created &lt;code&gt;SequenceInputStream&lt;/code&gt; by remembering the argument, which must be an &lt;code&gt;Enumeration&lt;/code&gt; that produces objects whose run-time type is &lt;code&gt;InputStream&lt;/code&gt;. The input streams that are produced by the enumeration will be read, in order, to provide the bytes to be read from this &lt;code&gt;SequenceInputStream&lt;/code&gt;. After each input stream from the enumeration is exhausted, it is closed by calling its &lt;code&gt;close&lt;/code&gt; method.</source>
          <target state="translated">引数を覚えて、新しく作成された &lt;code&gt;SequenceInputStream&lt;/code&gt; を初期化します。引数は、ランタイムタイプが &lt;code&gt;InputStream&lt;/code&gt; であるオブジェクトを生成する &lt;code&gt;Enumeration&lt;/code&gt; である必要があります。列挙によって生成された入力ストリームは、この &lt;code&gt;SequenceInputStream&lt;/code&gt; から読み取られるバイトを提供するために、順に読み取られます。列挙からの各入力ストリームが使い果たされた後、その &lt;code&gt;close&lt;/code&gt; メソッドを呼び出すことによって閉じられます。</target>
        </trans-unit>
        <trans-unit id="44030db17202c944200801ebabc72fcac8c15233" translate="yes" xml:space="preserve">
          <source>Initializes a newly created &lt;code&gt;SequenceInputStream&lt;/code&gt; by remembering the two arguments, which will be read in order, first &lt;code&gt;s1&lt;/code&gt; and then &lt;code&gt;s2&lt;/code&gt;, to provide the bytes to be read from this &lt;code&gt;SequenceInputStream&lt;/code&gt;.</source>
          <target state="translated">最初に &lt;code&gt;s1&lt;/code&gt; 、次に &lt;code&gt;s2&lt;/code&gt; の順に読み取られる2つの引数を記憶することにより、新しく作成された &lt;code&gt;SequenceInputStream&lt;/code&gt; を初期化して、この &lt;code&gt;SequenceInputStream&lt;/code&gt; から読み取られるバイトを提供します。</target>
        </trans-unit>
        <trans-unit id="535e84040aeb91112b494d5ecede47685e89ed3e" translate="yes" xml:space="preserve">
          <source>Initializes a newly created &lt;code&gt;String&lt;/code&gt; object so that it represents an empty character sequence.</source>
          <target state="translated">Initializes a newly created &lt;code&gt;String&lt;/code&gt; object so that it represents an empty character sequence.</target>
        </trans-unit>
        <trans-unit id="220d5ddf9123dde312c1714c126f01fa1fa80566" translate="yes" xml:space="preserve">
          <source>Initializes a newly created &lt;code&gt;String&lt;/code&gt; object so that it represents an empty character sequence. Note that use of this constructor is unnecessary since Strings are immutable.</source>
          <target state="translated">空の文字シーケンスを表すように、新しく作成された &lt;code&gt;String&lt;/code&gt; オブジェクトを初期化します。文字列は不変なので、このコンストラクタの使用は不要です。</target>
        </trans-unit>
        <trans-unit id="c7fb32726381117db8b35c5da56a4f1d1d08fd46" translate="yes" xml:space="preserve">
          <source>Initializes a newly created &lt;code&gt;String&lt;/code&gt; object so that it represents the same sequence of characters as the argument; in other words, the newly created string is a copy of the argument string.</source>
          <target state="translated">Initializes a newly created &lt;code&gt;String&lt;/code&gt; object so that it represents the same sequence of characters as the argument; in other words, the newly created string is a copy of the argument string.</target>
        </trans-unit>
        <trans-unit id="c57cfc3830f56b3bcce88e35eb379aaf1a525607" translate="yes" xml:space="preserve">
          <source>Initializes a newly created &lt;code&gt;String&lt;/code&gt; object so that it represents the same sequence of characters as the argument; in other words, the newly created string is a copy of the argument string. Unless an explicit copy of &lt;code&gt;original&lt;/code&gt; is needed, use of this constructor is unnecessary since Strings are immutable.</source>
          <target state="translated">新しく作成された &lt;code&gt;String&lt;/code&gt; オブジェクトを初期化して、引数と同じ文字シーケンスを表すようにします。つまり、新しく作成された文字列は引数文字列のコピーです。 &lt;code&gt;original&lt;/code&gt; 明示的なコピーが必要でない限り、文字列は不変であるため、このコンストラクタの使用は不要です。</target>
        </trans-unit>
        <trans-unit id="32dfbd607e8bb80d335ebeff95f95099e24acfe7" translate="yes" xml:space="preserve">
          <source>Initializes all of the properties with default values.</source>
          <target state="translated">すべてのプロパティをデフォルト値で初期化します。</target>
        </trans-unit>
        <trans-unit id="d00bc96ce2a62599e43c222dd60f97e30a18fb4f" translate="yes" xml:space="preserve">
          <source>Initializes all of the properties with default values. Those values are:</source>
          <target state="translated">すべてのプロパティをデフォルト値で初期化します。これらの値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="942aa368dea7adcf620059ee8e5f6419d297fc67" translate="yes" xml:space="preserve">
          <source>Initializes an instance of this class.</source>
          <target state="translated">このクラスのインスタンスを初期化します。</target>
        </trans-unit>
        <trans-unit id="a42b54e6048b7bb7fdc1f538f472e4a988e013b3" translate="yes" xml:space="preserve">
          <source>Initializes component properties, such as font, foreground, background, caret color, selection color, selected text color, disabled text color, and border color.</source>
          <target state="translated">フォント、前景、背景、キャレット色、選択色、選択されたテキストの色、無効化されたテキストの色、境界線の色などのコンポーネントのプロパティを初期化します。</target>
        </trans-unit>
        <trans-unit id="332b7b038caaf3aa314b25cb4ace52a3edcb7f6d" translate="yes" xml:space="preserve">
          <source>Initializes component properties, such as font, foreground, background, caret color, selection color, selected text color, disabled text color, and border color. The font, foreground, and background properties are only set if their current value is either null or a UIResource, other properties are set if the current value is null.</source>
          <target state="translated">フォント、前景、背景、キャレット色、選択色、選択されたテキストの色、無効化されたテキストの色、境界線の色などのコンポーネントのプロパティを初期化します。フォント、前景、背景のプロパティは、現在の値がNULLかUIResourceの場合にのみ設定され、その他のプロパティは現在の値がNULLの場合に設定されます。</target>
        </trans-unit>
        <trans-unit id="5540c5467a948c5df50ba658b26f027a9f3d3f65" translate="yes" xml:space="preserve">
          <source>Initializes from a stream.</source>
          <target state="translated">ストリームから初期化します。</target>
        </trans-unit>
        <trans-unit id="6ff03e6405e2849856080d730ac5a1c7ee8422f4" translate="yes" xml:space="preserve">
          <source>Initializes from a stream. This creates a model of the type appropriate for the component and initializes the model from the stream. By default this will load the model as plain text. Previous contents of the model are discarded.</source>
          <target state="translated">ストリームから初期化します。コンポーネントに適したタイプのモデルを作成し、ストリームからモデルを初期化します。デフォルトでは、モデルはプレーンテキストとして読み込まれます。モデルの以前の内容は破棄されます。</target>
        </trans-unit>
        <trans-unit id="e41b8da56734ba66e87edc855cacff8f0badde10" translate="yes" xml:space="preserve">
          <source>Initializes internal state after construction but before processing any tasks.</source>
          <target state="translated">構築後、タスクを処理する前に内部状態を初期化します。</target>
        </trans-unit>
        <trans-unit id="b32daa20373338f2bb3b01ff7242d28abd825e91" translate="yes" xml:space="preserve">
          <source>Initializes internal state after construction but before processing any tasks. If you override this method, you must invoke &lt;code&gt;super.onStart()&lt;/code&gt; at the beginning of the method. Initialization requires care: Most fields must have legal default values, to ensure that attempted accesses from other threads work correctly even before this thread starts processing tasks.</source>
          <target state="translated">構築後、タスクを処理する前に内部状態を初期化します。このメソッドをオーバーライドする場合は、メソッドの最初で &lt;code&gt;super.onStart()&lt;/code&gt; を呼び出す必要があります。初期化には注意が必要です。このスレッドがタスクの処理を開始する前でも、他のスレッドからのアクセス試行が正しく機能するように、ほとんどのフィールドには正当なデフォルト値が必要です。</target>
        </trans-unit>
        <trans-unit id="a6d6ed7f44d0c6123bb90eec8b30a021f021bbc9" translate="yes" xml:space="preserve">
          <source>Initializes list properties such as font, foreground, and background, and adds the CellRendererPane.</source>
          <target state="translated">フォント、前景、背景などのリストプロパティを初期化し、CellRendererPaneを追加します。</target>
        </trans-unit>
        <trans-unit id="50e5a2a6b5fb8f77d50425276dbec7683df7360b" translate="yes" xml:space="preserve">
          <source>Initializes list properties such as font, foreground, and background, and adds the CellRendererPane. The font, foreground, and background properties are only set if their current value is either null or a UIResource, other properties are set if the current value is null.</source>
          <target state="translated">フォント、前景、背景などのリストプロパティを初期化し、CellRendererPaneを追加します。フォント、前景、背景のプロパティは、現在の値がNULLかUIResourceの場合にのみ設定され、その他のプロパティは現在の値がNULLの場合に設定されます。</target>
        </trans-unit>
        <trans-unit id="1ca53db9d656e49ee3f6db506fe8fb34d31ad573" translate="yes" xml:space="preserve">
          <source>Initializes table properties to their default values.</source>
          <target state="translated">テーブルのプロパティをデフォルト値に初期化します。</target>
        </trans-unit>
        <trans-unit id="3ed19383d0a866bf81dc2a8bf40d1563412b85cf" translate="yes" xml:space="preserve">
          <source>Initializes the</source>
          <target state="translated">を初期化します。</target>
        </trans-unit>
        <trans-unit id="285e3004d6f9c9c1f2682442addb47a61ccc5012" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;code&gt;JSpinner&lt;/code&gt;&lt;code&gt;border&lt;/code&gt;, &lt;code&gt;foreground&lt;/code&gt;, and &lt;code&gt;background&lt;/code&gt;, properties based on the corresponding &quot;Spinner.*&quot; properties from defaults table.</source>
          <target state="translated">Initializes the &lt;code&gt;JSpinner&lt;/code&gt; &lt;code&gt;border&lt;/code&gt; , &lt;code&gt;foreground&lt;/code&gt; , and &lt;code&gt;background&lt;/code&gt; , properties based on the corresponding &quot;Spinner.*&quot; properties from defaults table.</target>
        </trans-unit>
        <trans-unit id="580894df037676305928b69a35322c3c67c56565" translate="yes" xml:space="preserve">
          <source>Initializes the &lt;code&gt;JSpinner&lt;/code&gt;&lt;code&gt;border&lt;/code&gt;, &lt;code&gt;foreground&lt;/code&gt;, and &lt;code&gt;background&lt;/code&gt;, properties based on the corresponding &quot;Spinner.*&quot; properties from defaults table. The &lt;code&gt;JSpinners&lt;/code&gt; layout is set to the value returned by &lt;code&gt;createLayout&lt;/code&gt;. This method is called by &lt;code&gt;installUI&lt;/code&gt;.</source>
          <target state="translated">Initializes the &lt;code&gt;JSpinner&lt;/code&gt; &lt;code&gt;border&lt;/code&gt; , &lt;code&gt;foreground&lt;/code&gt; , and &lt;code&gt;background&lt;/code&gt; , properties based on the corresponding &quot;Spinner.*&quot; properties from defaults table. The &lt;code&gt;JSpinners&lt;/code&gt; layout is set to the value returned by &lt;code&gt;createLayout&lt;/code&gt; . This method is called by &lt;code&gt;installUI&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7101cfc50758a101d987342b5e460bfcc786c8bd" translate="yes" xml:space="preserve">
          <source>Initializes the MAC with the given (secret) key and algorithm parameters.</source>
          <target state="translated">与えられた(秘密の)キーとアルゴリズム・パラメータでMACを初期化する。</target>
        </trans-unit>
        <trans-unit id="16245f19157c822a1f9c64d5472b199bc9c67688" translate="yes" xml:space="preserve">
          <source>Initializes the cause of this exception to the specified value.</source>
          <target state="translated">この例外の原因を指定した値に初期化します。</target>
        </trans-unit>
        <trans-unit id="dfeacd6b4b49eb8aaf2589e1846b0e448ccd3865" translate="yes" xml:space="preserve">
          <source>Initializes the cause of this exception to the specified value. The cause is the throwable that caused this naming exception to be thrown.</source>
          <target state="translated">この例外の原因を指定した値に初期化します。この原因は、この命名例外がスローされる原因となった throwable です。</target>
        </trans-unit>
        <trans-unit id="01b488dbd8e0db4b1f867ecac6518d127851069e" translate="yes" xml:space="preserve">
          <source>Initializes the editor with the specified item.</source>
          <target state="translated">指定した項目でエディタを初期化します。</target>
        </trans-unit>
        <trans-unit id="bd870e115e1011cc26842bb8c07daccb1ee36f65" translate="yes" xml:space="preserve">
          <source>Initializes the initial context using the supplied environment.</source>
          <target state="translated">与えられた環境を使用して初期コンテキストを初期化します。</target>
        </trans-unit>
        <trans-unit id="41561109df18ef33f010d3d94ef0a446f60b6e7d" translate="yes" xml:space="preserve">
          <source>Initializes the initial context using the supplied environment. Environment properties are discussed in the class description.</source>
          <target state="translated">与えられた環境を使用して初期コンテキストを初期化します。環境のプロパティについてはクラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="5e562232f746f072ab366d783820d9c05cffe9e7" translate="yes" xml:space="preserve">
          <source>Initializes the internal state of this &lt;code&gt;CertPathChecker&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;CertPathChecker&lt;/code&gt; の内部状態を初期化します。</target>
        </trans-unit>
        <trans-unit id="fa034bf27787f58e23acb0853600e276404d6783" translate="yes" xml:space="preserve">
          <source>Initializes the internal state of this &lt;code&gt;PKIXCertPathChecker&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; の内部状態を初期化します。</target>
        </trans-unit>
        <trans-unit id="5a200147bcb84e9da595588be4e6923bdd0e97fb" translate="yes" xml:space="preserve">
          <source>Initializes the key generator with the specified parameter set and a user-provided source of randomness.</source>
          <target state="translated">指定されたパラメータセットとユーザが提供するランダム性のソースでキー・ジェネレータを初期化します。</target>
        </trans-unit>
        <trans-unit id="128fefe8183d4f87085d3fbeac9c28f3366a7e95" translate="yes" xml:space="preserve">
          <source>Initializes the key generator.</source>
          <target state="translated">キージェネレータを初期化します。</target>
        </trans-unit>
        <trans-unit id="f374e3acdc5a27c6c13ccaa012a54eac879e6856" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator for a certain keysize using a default parameter set and the &lt;code&gt;SecureRandom&lt;/code&gt; implementation of the highest-priority installed provider as the source of randomness.</source>
          <target state="translated">Initializes the key pair generator for a certain keysize using a default parameter set and the &lt;code&gt;SecureRandom&lt;/code&gt; implementation of the highest-priority installed provider as the source of randomness.</target>
        </trans-unit>
        <trans-unit id="6e61f534e2796655e8a496e2077cf90f57118496" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator for a certain keysize using a default parameter set and the &lt;code&gt;SecureRandom&lt;/code&gt; implementation of the highest-priority installed provider as the source of randomness. (If none of the installed providers supply an implementation of &lt;code&gt;SecureRandom&lt;/code&gt;, a system-provided source of randomness is used.)</source>
          <target state="translated">デフォルトのパラメーターセットと、ランダム性のソースとして最も優先度の高いインストール済みプロバイダーの &lt;code&gt;SecureRandom&lt;/code&gt; 実装を使用して、特定のキーサイズのキーペアジェネレーターを初期化します。（インストールされているプロバイダーのいずれも &lt;code&gt;SecureRandom&lt;/code&gt; の実装を提供していない場合は、システムが提供するランダム性のソースが使用されます。）</target>
        </trans-unit>
        <trans-unit id="f74ebc75fa4bdabb92751bfa35969c96808a1d9a" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator for a certain keysize with the given source of randomness (and a default parameter set).</source>
          <target state="translated">特定の鍵サイズの鍵ペア生成器を、与えられたランダム性のソース(およびデフォルトのパラメータセット)で初期化します。</target>
        </trans-unit>
        <trans-unit id="0fe6ed05ee313726b9862a33ef21a9938da8600d" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator for a certain keysize, using the default parameter set.</source>
          <target state="translated">デフォルトのパラメータ設定を使用して、特定の鍵サイズの鍵ペア生成器を初期化する。</target>
        </trans-unit>
        <trans-unit id="88999da586ba1caa8ffa5dc002d3b56ac7720a7e" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator for a given modulus length (instead of parameters), and an optional SecureRandom bit source.</source>
          <target state="translated">(パラメータの代わりに)指定されたモジュラス長、およびオプションの SecureRandom ビットソースに対して、鍵ペア生成器を初期化します。</target>
        </trans-unit>
        <trans-unit id="2a75c13afd92cb77c637cf91b0e0938ac05e9b5a" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator for a given modulus length (instead of parameters), and an optional SecureRandom bit source. If a SecureRandom bit source is needed but not supplied, i.e. null, a default SecureRandom instance will be used.</source>
          <target state="translated">指定されたモジュラス長 (パラメータの代わりに)と、オプションの SecureRandom ビットソースについて、鍵ペア生成器を初期化します。SecureRandom ビットソースが必要だが供給されない場合 (つまり null)、デフォルトの SecureRandom インスタンスが使用されます。</target>
        </trans-unit>
        <trans-unit id="88b206f3ebcb816f2b810abc52507fa92fe6c5b4" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator using the DSA family parameters (p,q and g) and an optional SecureRandom bit source.</source>
          <target state="translated">DSA ファミリのパラメータ (p、q、g)とオプションの SecureRandom ビットソースを使用して、鍵ペア生成器を初期化します。</target>
        </trans-unit>
        <trans-unit id="3885a51fd48d40fd11bd4f75de7b90fecb70a2a9" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator using the DSA family parameters (p,q and g) and an optional SecureRandom bit source. If a SecureRandom bit source is needed but not supplied, i.e. null, a default SecureRandom instance will be used.</source>
          <target state="translated">DSA ファミリのパラメータ (p、q、g)とオプションの SecureRandom ビットソースを使用して、鍵ペア生成器を初期化します。SecureRandom ビットソースが必要だが供給されていない場合 (つまり null)、デフォルトの SecureRandom インスタンスが使用されます。</target>
        </trans-unit>
        <trans-unit id="9440917518df34f3196d54addf5102698ecfbf6c" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator using the specified parameter set and the &lt;code&gt;SecureRandom&lt;/code&gt; implementation of the highest-priority installed provider as the source of randomness.</source>
          <target state="translated">指定されたパラメーターセットと、最も優先度の高いインストール済みプロバイダーの &lt;code&gt;SecureRandom&lt;/code&gt; 実装をランダム性のソースとして使用して、キーペアジェネレーターを初期化します。</target>
        </trans-unit>
        <trans-unit id="be3588218408ad062fdadaa1a4e4591aa290f382" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator using the specified parameter set and the &lt;code&gt;SecureRandom&lt;/code&gt; implementation of the highest-priority installed provider as the source of randomness. (If none of the installed providers supply an implementation of &lt;code&gt;SecureRandom&lt;/code&gt;, a system-provided source of randomness is used.)</source>
          <target state="translated">指定されたパラメーターセットと、最も優先度の高いインストール済みプロバイダーの &lt;code&gt;SecureRandom&lt;/code&gt; 実装をランダム性のソースとして使用して、キーペアジェネレーターを初期化します。（インストールされているプロバイダーのいずれも &lt;code&gt;SecureRandom&lt;/code&gt; の実装を提供していない場合は、システムが提供するランダム性のソースが使用されます。）</target>
        </trans-unit>
        <trans-unit id="074ffc030e571b3342cbefc511914966618535b9" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator using the specified parameter set and the &lt;code&gt;SecureRandom&lt;/code&gt; implementation of the highest-priority installed provider as the source of randomness. (If none of the installed providers supply an implementation of &lt;code&gt;SecureRandom&lt;/code&gt;, a system-provided source of randomness is used.).</source>
          <target state="translated">指定されたパラメーターセットと、ランダム性のソースとして最も優先度の高いインストール済みプロバイダーの &lt;code&gt;SecureRandom&lt;/code&gt; 実装を使用して、キーペアジェネレーターを初期化します。（インストールされているプロバイダーのいずれも &lt;code&gt;SecureRandom&lt;/code&gt; の実装を提供していない場合は、システムが提供するランダム性のソースが使用されます。）</target>
        </trans-unit>
        <trans-unit id="0c74be0af9edccd027dd7945ff1bccd4266b5c35" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator using the specified parameter set and user-provided source of randomness.</source>
          <target state="translated">指定されたパラメータセットとユーザーが提供するランダム性のソースを使用して、キー・ペア・ジェネレータを初期化します。</target>
        </trans-unit>
        <trans-unit id="9d9a66d3f3a781759ea52824532d9a08714c86e2" translate="yes" xml:space="preserve">
          <source>Initializes the key pair generator with the given parameter set and source of randomness.</source>
          <target state="translated">与えられたパラメータセットとランダム性のソースでキーペア生成器を初期化します。</target>
        </trans-unit>
        <trans-unit id="3b91d9b15b6b1430676ad6cbc1d0ad1430e2780d" translate="yes" xml:space="preserve">
          <source>Initializes the local variables and properties with default values.</source>
          <target state="translated">ローカル変数とプロパティをデフォルト値で初期化します。</target>
        </trans-unit>
        <trans-unit id="b981473015f38a7d045e1792621aec49d53eab1b" translate="yes" xml:space="preserve">
          <source>Initializes the local variables and properties with default values. Used by the constructor methods.</source>
          <target state="translated">ローカル変数とプロパティをデフォルト値で初期化します。コンストラクタのメソッドで使用されます。</target>
        </trans-unit>
        <trans-unit id="b2dd048f6b2eb8f1b84f21f4b1083ea3a095c413" translate="yes" xml:space="preserve">
          <source>Initializes the look and feel.</source>
          <target state="translated">見た目を初期化します。</target>
        </trans-unit>
        <trans-unit id="859704d35cb1491dcb0e1353c43d404251e57f0b" translate="yes" xml:space="preserve">
          <source>Initializes the look and feel. While this method is public, it should only be invoked by the &lt;code&gt;UIManager&lt;/code&gt; when a look and feel is installed as the current look and feel. This method is invoked before the &lt;code&gt;UIManager&lt;/code&gt; invokes &lt;code&gt;getDefaults&lt;/code&gt;. This method is intended to perform any initialization for the look and feel. Subclasses should do any one-time setup they need here, rather than in a static initializer, because look and feel class objects may be loaded just to discover that &lt;code&gt;isSupportedLookAndFeel()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ルックアンドフィールを初期化します。このメソッドはパブリック &lt;code&gt;UIManager&lt;/code&gt; が、ルックアンドフィールが現在のルックアンドフィールとしてインストールされている場合にのみ、UIManagerによって呼び出される必要があります。このメソッドは、 &lt;code&gt;UIManager&lt;/code&gt; が &lt;code&gt;getDefaults&lt;/code&gt; を呼び出す前に呼び出されます。このメソッドは、ルックアンドフィールの初期化を実行することを目的としています。サブクラスは、静的初期化子ではなく、ここで必要な1回限りのセットアップを実行する必要があります。これは、 &lt;code&gt;isSupportedLookAndFeel()&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; を返すことを検出するためだけに、ルックアンドフィールクラスオブジェクトが読み込まれる可能性があるためです。</target>
        </trans-unit>
        <trans-unit id="6d272bc96d3a17e2526b89f18f138f8cb97ce348" translate="yes" xml:space="preserve">
          <source>Initializes the menu item with the specified text and icon.</source>
          <target state="translated">指定したテキストとアイコンでメニュー項目を初期化します。</target>
        </trans-unit>
        <trans-unit id="5016dfdc6b3c8900892b3141e933929754e856ea" translate="yes" xml:space="preserve">
          <source>Initializes the plug-in for a given compilation task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb0c65e6fad94a9424f33831862d4498261e283" translate="yes" xml:space="preserve">
          <source>Initializes the processor with the processing environment by setting the &lt;code&gt;processingEnv&lt;/code&gt; field to the value of the &lt;code&gt;processingEnv&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;processingEnv&lt;/code&gt; フィールドを &lt;code&gt;processingEnv&lt;/code&gt; 引数の値に設定することにより、プロセッサを処理環境で初期化します。</target>
        </trans-unit>
        <trans-unit id="c40a25c48d62fbb985e7750b86e415b0672906c5" translate="yes" xml:space="preserve">
          <source>Initializes the processor with the processing environment by setting the &lt;code&gt;processingEnv&lt;/code&gt; field to the value of the &lt;code&gt;processingEnv&lt;/code&gt; argument. An &lt;code&gt;
 IllegalStateException&lt;/code&gt; will be thrown if this method is called more than once on the same object.</source>
          <target state="translated">&lt;code&gt;processingEnv&lt;/code&gt; フィールドを &lt;code&gt;processingEnv&lt;/code&gt; 引数の値に設定することにより、プロセッサを処理環境で初期化します。アン &lt;code&gt; IllegalStateException&lt;/code&gt; がこのメソッドがより同じオブジェクト上で何度も呼び出された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="4715dc8fb40fcb882175f96e5919fd7a2dc030ca" translate="yes" xml:space="preserve">
          <source>Initializes the processor with the processing environment by setting the &lt;code&gt;processingEnv&lt;/code&gt; field to the value of the &lt;code&gt;processingEnv&lt;/code&gt; argument. An &lt;code&gt;IllegalStateException&lt;/code&gt; will be thrown if this method is called more than once on the same object.</source>
          <target state="translated">&lt;code&gt;processingEnv&lt;/code&gt; フィールドを &lt;code&gt;processingEnv&lt;/code&gt; 引数の値に設定することにより、処理環境でプロセッサーを初期化します。アン &lt;code&gt;IllegalStateException&lt;/code&gt; がこのメソッドがより同じオブジェクト上で何度も呼び出された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="fc81e3d28ad794ef19650bc823bf9073354b69f7" translate="yes" xml:space="preserve">
          <source>Initializes the processor with the processing environment.</source>
          <target state="translated">処理環境でプロセッサを初期化します。</target>
        </trans-unit>
        <trans-unit id="251f6ba99188ab07fc590aabecf16f20756bb1e6" translate="yes" xml:space="preserve">
          <source>Initializes the reference to the MBean server.</source>
          <target state="translated">MBean サーバへの参照を初期化します。</target>
        </trans-unit>
        <trans-unit id="86017086da180d7d8b5519a24aeb4afcfe0cf582" translate="yes" xml:space="preserve">
          <source>Initializes this &lt;code&gt;Mac&lt;/code&gt; object with the given key and algorithm parameters.</source>
          <target state="translated">指定されたキーとアルゴリズムパラメータでこの &lt;code&gt;Mac&lt;/code&gt; オブジェクトを初期化します。</target>
        </trans-unit>
        <trans-unit id="da9a94df08b63435dae6a0e5a290a5de8bcd51a3" translate="yes" xml:space="preserve">
          <source>Initializes this &lt;code&gt;Mac&lt;/code&gt; object with the given key.</source>
          <target state="translated">この &lt;code&gt;Mac&lt;/code&gt; オブジェクトを指定されたキーで初期化します。</target>
        </trans-unit>
        <trans-unit id="829234e4a29a840797f98f75a1a3df29f56cfdcf" translate="yes" xml:space="preserve">
          <source>Initializes this &lt;code&gt;TransformService&lt;/code&gt; with the specified parameters and document context.</source>
          <target state="translated">指定されたパラメーターとドキュメントコンテキストを使用して、この &lt;code&gt;TransformService&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="d5a9e4fe0095d39f6916d94125c4208182185a20" translate="yes" xml:space="preserve">
          <source>Initializes this &lt;code&gt;TransformService&lt;/code&gt; with the specified parameters.</source>
          <target state="translated">指定されたパラメーターを使用して、この &lt;code&gt;TransformService&lt;/code&gt; を初期化します。</target>
        </trans-unit>
        <trans-unit id="7079744b3e558702bda3bc77d0a93b9270749574" translate="yes" xml:space="preserve">
          <source>Initializes this cipher with a key and a set of algorithm parameters.</source>
          <target state="translated">鍵とアルゴリズムパラメータのセットでこの暗号を初期化します。</target>
        </trans-unit>
        <trans-unit id="76e1853a530d0d05f2e8dc2f9ccfdbd34b8f0f0b" translate="yes" xml:space="preserve">
          <source>Initializes this cipher with a key and a source of randomness.</source>
          <target state="translated">この暗号を鍵とランダム性のソースで初期化します。</target>
        </trans-unit>
        <trans-unit id="7c3cfb664c319979808c95df6387ee1cefbcf3a9" translate="yes" xml:space="preserve">
          <source>Initializes this cipher with a key, a set of algorithm parameters, and a source of randomness.</source>
          <target state="translated">鍵、アルゴリズムパラメータのセット、ランダム性のソースでこの暗号を初期化します。</target>
        </trans-unit>
        <trans-unit id="ebaea3d101ad3d548e9502e556b0291924ec5963" translate="yes" xml:space="preserve">
          <source>Initializes this cipher with a key.</source>
          <target state="translated">この暗号を鍵で初期化します。</target>
        </trans-unit>
        <trans-unit id="29defc486f75b65544936a6a5922c0e7b711bf2d" translate="yes" xml:space="preserve">
          <source>Initializes this cipher with the public key from the given certificate and a source of randomness.</source>
          <target state="translated">与えられた証明書からの公開鍵とランダム性のソースでこの暗号を初期化します。</target>
        </trans-unit>
        <trans-unit id="b34e5d2657962e455f94df7f6126b52a17af67f0" translate="yes" xml:space="preserve">
          <source>Initializes this cipher with the public key from the given certificate.</source>
          <target state="translated">与えられた証明書の公開鍵でこの暗号を初期化します。</target>
        </trans-unit>
        <trans-unit id="a80ad84d154a0b7904cac42f0975a5970ca8dbf2" translate="yes" xml:space="preserve">
          <source>Initializes this context.</source>
          <target state="translated">このコンテキストを初期化します。</target>
        </trans-unit>
        <trans-unit id="7a57c455e402cd8cbf65e54f28ebdbbdfea87fcf" translate="yes" xml:space="preserve">
          <source>Initializes this context. Either of the first two parameters may be null in which case the installed security providers will be searched for the highest priority implementation of the appropriate factory. Likewise, the secure random parameter may be null in which case the default implementation will be used.</source>
          <target state="translated">このコンテキストを初期化します。最初の 2 つのパラメータのいずれかが null の場合、インストールされているセキュリティプロバイダが適切なファクトリーの最優先実装を検索します。同様に、secure random パラメータが null の場合はデフォルトの実装が使用されます。</target>
        </trans-unit>
        <trans-unit id="3177a6de05e73e7c02edb77815b594fc34da01d5" translate="yes" xml:space="preserve">
          <source>Initializes this doclet with the given locale and error reporter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73606c8f3700f7bad00af4823d658e1ea2ec20bd" translate="yes" xml:space="preserve">
          <source>Initializes this doclet with the given locale and error reporter. This locale will be used by the reporter and the doclet components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd8849459a65d74992a90bb842675d49a578a08" translate="yes" xml:space="preserve">
          <source>Initializes this exemption mechanism with a key and a set of algorithm parameters.</source>
          <target state="translated">この免除メカニズムを、キーとアルゴリズムパラメータのセットで初期化します。</target>
        </trans-unit>
        <trans-unit id="d385a2adb9e1aa31c6b8207cf397aaa8dafbb420" translate="yes" xml:space="preserve">
          <source>Initializes this exemption mechanism with a key.</source>
          <target state="translated">この免除メカニズムをキーで初期化します。</target>
        </trans-unit>
        <trans-unit id="a0c3ef4f4cf173719ffff0bc52d11096c2e944bf" translate="yes" xml:space="preserve">
          <source>Initializes this factory with a source of certificate authorities and related trust material.</source>
          <target state="translated">認証局および関連する信頼材料のソースで、この工場を初期化する。</target>
        </trans-unit>
        <trans-unit id="a510ec1c9a98e34b9cacf3d76dfd55f389f89f00" translate="yes" xml:space="preserve">
          <source>Initializes this factory with a source of key material.</source>
          <target state="translated">この工場をキーマテリアルのソースで初期化します。</target>
        </trans-unit>
        <trans-unit id="b251664597cb56e03343ee141cc379a6706fb834" translate="yes" xml:space="preserve">
          <source>Initializes this factory with a source of provider-specific key material.</source>
          <target state="translated">プロバイダ固有のキーマテリアルのソースでこのファクトリーを初期化する。</target>
        </trans-unit>
        <trans-unit id="e71e5fe2339c1da6ae1e0c0451a946ca45b878b8" translate="yes" xml:space="preserve">
          <source>Initializes this factory with a source of provider-specific trust material.</source>
          <target state="translated">プロバイダ固有の信頼材料のソースでこの工場を初期化します。</target>
        </trans-unit>
        <trans-unit id="6942a3ed8c25f39cce260bd1c879d3599056ecc0" translate="yes" xml:space="preserve">
          <source>Initializes this key agreement with the given key and set of algorithm parameters.</source>
          <target state="translated">与えられたキーとアルゴリズムパラメータのセットで、このキーの一致を初期化します。</target>
        </trans-unit>
        <trans-unit id="19c93dec89045382e2f9266d15e048bf3399d803" translate="yes" xml:space="preserve">
          <source>Initializes this key agreement with the given key and source of randomness.</source>
          <target state="translated">与えられた鍵とランダム性のソースでこの鍵の一致を初期化します。</target>
        </trans-unit>
        <trans-unit id="c54f383f1927146f57870b970bc370b60112ab52" translate="yes" xml:space="preserve">
          <source>Initializes this key agreement with the given key and source of randomness. The given key is required to contain all the algorithm parameters required for this key agreement.</source>
          <target state="translated">与えられた鍵とランダム性のソースを用いて、この鍵の一致を初期化します。与えられた鍵には、この鍵の一致に必要なすべてのアルゴリズムパラメータが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="6a8a3c2a330aeee19912ae19e3a80123781fc074" translate="yes" xml:space="preserve">
          <source>Initializes this key agreement with the given key, set of algorithm parameters, and source of randomness.</source>
          <target state="translated">与えられた鍵、アルゴリズムパラメータのセット、およびランダム性のソースで、この鍵の一致を初期化します。</target>
        </trans-unit>
        <trans-unit id="c0b1de47bdbb8fca238bc9381c28ed7809db102e" translate="yes" xml:space="preserve">
          <source>Initializes this key agreement with the given key, which is required to contain all the algorithm parameters required for this key agreement.</source>
          <target state="translated">与えられた鍵でこの鍵合意を初期化します。この鍵合意に必要なすべてのアルゴリズムパラメータを含む必要があります。</target>
        </trans-unit>
        <trans-unit id="668e0a26489b2a9c3e3a252bfbdd5aa3979a9e7a" translate="yes" xml:space="preserve">
          <source>Initializes this key generator for a certain keysize, using a user-provided source of randomness.</source>
          <target state="translated">ユーザーが提供したランダム性のソースを使用して、特定の鍵サイズの鍵生成器を初期化する。</target>
        </trans-unit>
        <trans-unit id="6c4159b32e5a97447d8e06c41c82e30aeded00aa" translate="yes" xml:space="preserve">
          <source>Initializes this key generator for a certain keysize, using the given source of randomness.</source>
          <target state="translated">与えられたランダム性のソースを用いて、特定の鍵サイズの鍵生成器を初期化します。</target>
        </trans-unit>
        <trans-unit id="85441adb8426dc422c610d76abe9b38d4b63f960" translate="yes" xml:space="preserve">
          <source>Initializes this key generator for a certain keysize.</source>
          <target state="translated">特定の鍵サイズの鍵生成器を初期化する。</target>
        </trans-unit>
        <trans-unit id="711e871f3ae5fd33f12add8941fc53219ac4ecd1" translate="yes" xml:space="preserve">
          <source>Initializes this key generator with the specified parameter set and a user-provided source of randomness.</source>
          <target state="translated">指定されたパラメータセットとユーザが提供するランダム性のソースで、このキー・ジェネレータを初期化します。</target>
        </trans-unit>
        <trans-unit id="cbde385e1ecd25044d6b3e0c5ca8db45feb0a46e" translate="yes" xml:space="preserve">
          <source>Initializes this key generator with the specified parameter set.</source>
          <target state="translated">指定されたパラメータセットでこのキー・ジェネレータを初期化します。</target>
        </trans-unit>
        <trans-unit id="226e8392f7a356798f6b407dd16da240fffe3a95" translate="yes" xml:space="preserve">
          <source>Initializes this key generator.</source>
          <target state="translated">このキージェネレータを初期化します。</target>
        </trans-unit>
        <trans-unit id="10658fe5124e5e479ec3d94b0fa2f70147e5f168" translate="yes" xml:space="preserve">
          <source>Initializes this object for verification, using the public key from the given certificate.</source>
          <target state="translated">与えられた証明書の公開鍵を使用して、検証のためにこのオブジェクトを初期化します。</target>
        </trans-unit>
        <trans-unit id="ea17f2e77b4086a6a3b9af48d711508dba3a41b6" translate="yes" xml:space="preserve">
          <source>Initializes this object for verification.</source>
          <target state="translated">検証のためにこのオブジェクトを初期化します。</target>
        </trans-unit>
        <trans-unit id="d054f89ca19f803fcfa4d8e10109ac76f8d576b4" translate="yes" xml:space="preserve">
          <source>Initializes this object for verification. If this method is called again with a different argument, it negates the effect of this call.</source>
          <target state="translated">検証のためにこのオブジェクトを初期化します。このメソッドが別の引数で再度呼び出された場合、この呼び出しの効果は否定されます。</target>
        </trans-unit>
        <trans-unit id="4027f26a8d1d2edecbc43453f724a1f40cd65251" translate="yes" xml:space="preserve">
          <source>Initializes this parameter generator for a certain size and source of randomness.</source>
          <target state="translated">特定のサイズとランダム性のソースに対して、このパラメータジェネレータを初期化します。</target>
        </trans-unit>
        <trans-unit id="8bd77cb2c60568852f0aee954f6ea2791dd19f05" translate="yes" xml:space="preserve">
          <source>Initializes this parameter generator for a certain size.</source>
          <target state="translated">特定のサイズのパラメータジェネレータを初期化します。</target>
        </trans-unit>
        <trans-unit id="3cf727134da584c62c9ad2f77c5e7cb40d601cc2" translate="yes" xml:space="preserve">
          <source>Initializes this parameter generator for a certain size. To create the parameters, the &lt;code&gt;SecureRandom&lt;/code&gt; implementation of the highest-priority installed provider is used as the source of randomness. (If none of the installed providers supply an implementation of &lt;code&gt;SecureRandom&lt;/code&gt;, a system-provided source of randomness is used.)</source>
          <target state="translated">このパラメータジェネレータを特定のサイズに初期化します。パラメータを作成するために、最も優先度の高いインストール済みプロバイダーの &lt;code&gt;SecureRandom&lt;/code&gt; 実装がランダム性のソースとして使用されます。（インストールされているプロバイダーのいずれも &lt;code&gt;SecureRandom&lt;/code&gt; の実装を提供していない場合は、システムが提供するランダム性のソースが使用されます。）</target>
        </trans-unit>
        <trans-unit id="dea52d2710b3645ebe63b3b4899c33db0fa56e9a" translate="yes" xml:space="preserve">
          <source>Initializes this parameter generator with a set of algorithm-specific parameter generation values.</source>
          <target state="translated">アルゴリズム固有のパラメータ生成値のセットで、このパラメータ生成器を初期化します。</target>
        </trans-unit>
        <trans-unit id="23a5e3be619fa9c34834c4256f4f6525c56567ad" translate="yes" xml:space="preserve">
          <source>Initializes this parameter generator with a set of algorithm-specific parameter generation values. To generate the parameters, the &lt;code&gt;SecureRandom&lt;/code&gt; implementation of the highest-priority installed provider is used as the source of randomness. (If none of the installed providers supply an implementation of &lt;code&gt;SecureRandom&lt;/code&gt;, a system-provided source of randomness is used.)</source>
          <target state="translated">アルゴリズム固有のパラメーター生成値のセットを使用して、このパラメータージェネレーターを初期化します。パラメータを生成するために、最も優先度の高いインストール済みプロバイダーの &lt;code&gt;SecureRandom&lt;/code&gt; 実装がランダム性のソースとして使用されます。（インストールされているプロバイダーのいずれも &lt;code&gt;SecureRandom&lt;/code&gt; の実装を提供していない場合は、システムが提供するランダム性のソースが使用されます。）</target>
        </trans-unit>
        <trans-unit id="763bf001f06ed3950658c42cdeed89a64a88a9ba" translate="yes" xml:space="preserve">
          <source>Initializes this parameter object using the parameters specified in &lt;code&gt;paramSpec&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;paramSpec&lt;/code&gt; で指定されたパラメーターを使用して、このパラメーターオブジェクトを初期化します。</target>
        </trans-unit>
        <trans-unit id="42be038751ba41c53a632c7f10fd671ea897633d" translate="yes" xml:space="preserve">
          <source>Initializes this parameters object using the parameters specified in &lt;code&gt;paramSpec&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;paramSpec&lt;/code&gt; で指定されたパラメーターを使用して、このパラメーターオブジェクトを初期化します。</target>
        </trans-unit>
        <trans-unit id="f620e804f534fd8798d37a8cd5d0a9f9777abcc8" translate="yes" xml:space="preserve">
          <source>Initializes this signature engine with the specified parameter set.</source>
          <target state="translated">指定されたパラメータセットでこの署名エンジンを初期化します。</target>
        </trans-unit>
        <trans-unit id="dc0a13e3d904bdf9d8567fd2e7cda6a2d84f7f7c" translate="yes" xml:space="preserve">
          <source>Initializes this signature object with the specified private key and source of randomness for signing operations.</source>
          <target state="translated">この署名オブジェクトを、指定された秘密鍵と署名操作のためのランダム性のソースで初期化します。</target>
        </trans-unit>
        <trans-unit id="2ece1570cec0ef79ae22d61bbb035961f746fd5c" translate="yes" xml:space="preserve">
          <source>Initializes this signature object with the specified private key for signing operations.</source>
          <target state="translated">この署名オブジェクトを、署名操作のための指定された秘密鍵で初期化します。</target>
        </trans-unit>
        <trans-unit id="d12c1c1eeaab20a58b624e2dd12d9db8bb31f8d4" translate="yes" xml:space="preserve">
          <source>Initializes this signature object with the specified public key for verification operations.</source>
          <target state="translated">この署名オブジェクトを、検証操作のために指定された公開鍵で初期化します。</target>
        </trans-unit>
        <trans-unit id="244ce37d9359b1da8c5a4ecdb8d4884538d61934" translate="yes" xml:space="preserve">
          <source>Initializes this taglet with the given doclet environment and doclet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0921d4cdaae2a4873541525362d687e71c7dfd7f" translate="yes" xml:space="preserve">
          <source>Initializes value, extent, minimum and maximum.</source>
          <target state="translated">値、範囲、最小値、最大値を初期化します。</target>
        </trans-unit>
        <trans-unit id="f6dec50cb766c4cc8c5300e13e5df9cf7321e89a" translate="yes" xml:space="preserve">
          <source>Initializes value, extent, minimum and maximum. Adjusting is false. Throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if the following constraints aren't satisfied:</source>
          <target state="translated">値、範囲、最小値、最大値を初期化します。調整は誤りです。次の制約が満たされない場合、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="0801a59585ce6d38b3bd5a47954e2b9323d97879" translate="yes" xml:space="preserve">
          <source>Initially, &lt;code&gt;null&lt;/code&gt; is set as the &lt;a href=&quot;../validation/schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最初は、 &lt;code&gt;null&lt;/code&gt; が&lt;a href=&quot;../validation/schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;として設定されています。</target>
        </trans-unit>
        <trans-unit id="41434d645f7f8d5f395887fc05ea76413dc870ed" translate="yes" xml:space="preserve">
          <source>Initially, all buttons in the group are unselected.</source>
          <target state="translated">初期状態では、グループ内のすべてのボタンが非選択状態になっています。</target>
        </trans-unit>
        <trans-unit id="12c316b4aff9d01be12c5a2bf0f1c160da92a172" translate="yes" xml:space="preserve">
          <source>Initially, null is set as the &lt;a href=&quot;../validation/schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最初は、nullが&lt;a href=&quot;../validation/schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;として設定されています。</target>
        </trans-unit>
        <trans-unit id="e8d2bf13742db37b3e4c6d3acc99f359baf79986" translate="yes" xml:space="preserve">
          <source>Initially, the result string is empty.</source>
          <target state="translated">初期状態では、結果文字列は空です。</target>
        </trans-unit>
        <trans-unit id="b73b3409c11bc7791545979e0b7af7a859257f52" translate="yes" xml:space="preserve">
          <source>Initiates an orderly closure of this WebSocket's output by sending a Close message with the given status code and the reason.</source>
          <target state="translated">与えられたステータスコードと理由を含む Close メッセージを送信することで、この WebSocket の出力の整然としたクロージャを開始します。</target>
        </trans-unit>
        <trans-unit id="c2231bf5334cd68a33ac0fb29d54d6d5526c00c0" translate="yes" xml:space="preserve">
          <source>Initiates an orderly shutdown in which previously submitted tasks are executed, but no new tasks will be accepted.</source>
          <target state="translated">以前に提出されたタスクが実行されるように整然とシャットダウンを開始しますが、新しいタスクは受け付けられません。</target>
        </trans-unit>
        <trans-unit id="8ceca24c9f67daffeb5ec84a68d2580e6ae36ddd" translate="yes" xml:space="preserve">
          <source>Initiates an orderly shutdown in which previously submitted tasks are executed, but no new tasks will be accepted. Invocation has no additional effect if already shut down.</source>
          <target state="translated">秩序あるシャットダウンを開始し、以前に提出されたタスクは実行されますが、新しいタスクは受け付けられません。既にシャットダウンされている場合は、呼び出しても追加の効果はありません。</target>
        </trans-unit>
        <trans-unit id="8c201d8d15f12a43825f491d27e9cbaebf505186" translate="yes" xml:space="preserve">
          <source>Initiates an orderly shutdown of the group.</source>
          <target state="translated">グループの秩序あるシャットダウンを開始します。</target>
        </trans-unit>
        <trans-unit id="c996615522860d67313dcea53527ee7d4cc08daa" translate="yes" xml:space="preserve">
          <source>Initiates handshaking (initial or renegotiation) on this SSLEngine.</source>
          <target state="translated">このSSLEngineでハンドシェイク(初期または再交渉)を開始します。</target>
        </trans-unit>
        <trans-unit id="5c8f0d8f9f3c9efa9bc65af7f4f68366edf97172" translate="yes" xml:space="preserve">
          <source>Initiation of a print job request</source>
          <target state="translated">印刷ジョブ要求の開始</target>
        </trans-unit>
        <trans-unit id="12a47580607f7c1cb4828ca163359cb3b0e3e565" translate="yes" xml:space="preserve">
          <source>Inline Tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b07d551b9918fc5baf438d7e8200064c82b4c9" translate="yes" xml:space="preserve">
          <source>Inline style information attached to elements is exposed through the &lt;code&gt;style&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c084db32bf6cb85c051f676ba70104b947d91ea" translate="yes" xml:space="preserve">
          <source>Inline style information attached to elements is exposed through the &lt;code&gt;style&lt;/code&gt; attribute. This represents the contents of the STYLE attribute for HTML elements (or elements in other schemas or DTDs which use the STYLE attribute in the same way). The expectation is that an instance of the ElementCSSInlineStyle interface can be obtained by using binding-specific casting methods on an instance of the Element interface when the element supports inline CSS style informations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ba331b30eea26b610c59c79826f3d0b60651ae" translate="yes" xml:space="preserve">
          <source>Inline subwindows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f1349d3abe2e48ba6146a54f7c447d8b47aef7" translate="yes" xml:space="preserve">
          <source>Inline subwindows. See the IFRAME element definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78fc6e6e9fc3a850cfee6ecfa934fcbdf175dc7e" translate="yes" xml:space="preserve">
          <source>InlineTagTree</source>
          <target state="translated">InlineTagTree</target>
        </trans-unit>
        <trans-unit id="009276d75254f7a0b52c2683daa42997a48b4a09" translate="yes" xml:space="preserve">
          <source>InlineView</source>
          <target state="translated">InlineView</target>
        </trans-unit>
        <trans-unit id="3ce924852eb7117c028a9303f30fe41cfaf0be37" translate="yes" xml:space="preserve">
          <source>Inner class for blitting offscreen surfaces to a component.</source>
          <target state="translated">画面外のサーフェスをコンポーネントにブリッティングするための内部クラスです。</target>
        </trans-unit>
        <trans-unit id="a85d4881c6ccdcc5edbbb9ffc90a4b9fe0a1c0bb" translate="yes" xml:space="preserve">
          <source>Inner class for flipping buffers on a component.</source>
          <target state="translated">コンポーネント上のバッファを反転させるための内部クラス.</target>
        </trans-unit>
        <trans-unit id="d2efd0e973366329567b0598ed6c3ec43a225d44" translate="yes" xml:space="preserve">
          <source>Inner class for flipping buffers on a component. That component must be a &lt;code&gt;Canvas&lt;/code&gt; or &lt;code&gt;Window&lt;/code&gt; or &lt;code&gt;Applet&lt;/code&gt;.</source>
          <target state="translated">コンポーネントのバッファを反転するための内部クラス。そのコンポーネントは、 &lt;code&gt;Canvas&lt;/code&gt; 、 &lt;code&gt;Window&lt;/code&gt; 、または &lt;code&gt;Applet&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="114a1592e45627c998b424884c2b0aea7eede690" translate="yes" xml:space="preserve">
          <source>Inner class of &lt;code&gt;MenuComponent&lt;/code&gt; used to provide default support for accessibility.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために &lt;code&gt;MenuComponent&lt;/code&gt; されるMenuComponentの内部クラス。</target>
        </trans-unit>
        <trans-unit id="53d6159a9577f4f7f4ff526c4b65a60bfbacbbec" translate="yes" xml:space="preserve">
          <source>Inner class of &lt;code&gt;MenuComponent&lt;/code&gt; used to provide default support for accessibility. This class is not meant to be used directly by application developers, but is instead meant only to be subclassed by menu component developers.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために &lt;code&gt;MenuComponent&lt;/code&gt; されるMenuComponentの内部クラス。このクラスは、アプリケーション開発者が直接使用することを意図したものではなく、メニューコンポーネント開発者がサブクラス化することのみを目的としています。</target>
        </trans-unit>
        <trans-unit id="19d42587d9676e4eb9406307c3ba3c8d5f00f7f1" translate="yes" xml:space="preserve">
          <source>Inner class of CheckboxMenuItem used to provide default support for accessibility.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために使用されるCheckboxMenuItemの内部クラス。</target>
        </trans-unit>
        <trans-unit id="ab28c78d660062b28cbb7ee8852c77b6267737a0" translate="yes" xml:space="preserve">
          <source>Inner class of CheckboxMenuItem used to provide default support for accessibility. This class is not meant to be used directly by application developers, but is instead meant only to be subclassed by menu component developers.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために使用される CheckboxMenuItem の内部クラス。このクラスはアプリケーション開発者が直接使用することを意図したものではなく、メニューコンポーネント開発者がサブクラス化することを意図したものです。</target>
        </trans-unit>
        <trans-unit id="eddcc0a8b2f9521c56b7a3ac2d1976fbefd948e4" translate="yes" xml:space="preserve">
          <source>Inner class of Component used to provide default support for accessibility.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために使用されるComponentの内部クラス。</target>
        </trans-unit>
        <trans-unit id="3e4a577a460790cb940d18084822795af3d9750a" translate="yes" xml:space="preserve">
          <source>Inner class of Component used to provide default support for accessibility. This class is not meant to be used directly by application developers, but is instead meant only to be subclassed by component developers.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために使用される Component の内部クラス。このクラスはアプリケーション開発者が直接使用することを意図したものではなく、コンポーネント開発者がサブクラス化することを意図したものです。</target>
        </trans-unit>
        <trans-unit id="4d47302da2677a539df05456f90703f88ed9a366" translate="yes" xml:space="preserve">
          <source>Inner class of Container used to provide default support for accessibility.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために使用されるコンテナの内部クラス。</target>
        </trans-unit>
        <trans-unit id="06d20bf7addd121422645a4f9eed20cafb133b83" translate="yes" xml:space="preserve">
          <source>Inner class of Container used to provide default support for accessibility. This class is not meant to be used directly by application developers, but is instead meant only to be subclassed by container developers.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために使用されるコンテナの内部クラス。このクラスはアプリケーション開発者が直接使用することを意図したものではなく、コンテナ開発者がサブクラス化することを意図したものです。</target>
        </trans-unit>
        <trans-unit id="02bfbffdf4801ef5b0ab9ce5057be659cbc3431b" translate="yes" xml:space="preserve">
          <source>Inner class of JComponent used to provide default support for accessibility.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために使用される JComponent の内部クラス。</target>
        </trans-unit>
        <trans-unit id="cb2baea22c9183a77489efd5bf098e1f49ba94ed" translate="yes" xml:space="preserve">
          <source>Inner class of JComponent used to provide default support for accessibility. This class is not meant to be used directly by application developers, but is instead meant only to be subclassed by component developers.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために使用される JComponent の内部クラス。このクラスはアプリケーション開発者が直接使用することを意図したものではなく、 コンポーネント開発者がサブクラス化することを意図したものです。</target>
        </trans-unit>
        <trans-unit id="50db8d6098ddf7ae5a5b36c58c8339c78f823dc4" translate="yes" xml:space="preserve">
          <source>Inner class of Menu used to provide default support for accessibility.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために使用されるメニューの内部クラス。</target>
        </trans-unit>
        <trans-unit id="a8982e58603a67761f08058edd5969ffe7489ea3" translate="yes" xml:space="preserve">
          <source>Inner class of Menu used to provide default support for accessibility. This class is not meant to be used directly by application developers, but is instead meant only to be subclassed by menu component developers.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために使用されるメニューの内部クラス。このクラスはアプリケーション開発者が直接使用することを意図したものではなく、メニューコンポーネント開発者がサブクラス化することを意図したものです。</target>
        </trans-unit>
        <trans-unit id="da8a4d84e476682cbcec5e2c4a72dffadc0bcbde" translate="yes" xml:space="preserve">
          <source>Inner class of MenuBar used to provide default support for accessibility.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために使用される MenuBar の内部クラス。</target>
        </trans-unit>
        <trans-unit id="b93717bcf6f3239ea4df6bc14a43e8f3f2905783" translate="yes" xml:space="preserve">
          <source>Inner class of MenuBar used to provide default support for accessibility. This class is not meant to be used directly by application developers, but is instead meant only to be subclassed by menu component developers.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために使用される MenuBar の内部クラス。このクラスはアプリケーション開発者が直接使用することを意図したものではなく、メニューコンポーネント開発者がサブクラスとして使用することを意図したものです。</target>
        </trans-unit>
        <trans-unit id="1fc647b41ca66c3a7a7f26fb4108db1955d9e2be" translate="yes" xml:space="preserve">
          <source>Inner class of MenuItem used to provide default support for accessibility.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために使用される MenuItem の内部クラス。</target>
        </trans-unit>
        <trans-unit id="a5f652cfb42999a9605a850b2a2f395ae6ac4d56" translate="yes" xml:space="preserve">
          <source>Inner class of MenuItem used to provide default support for accessibility. This class is not meant to be used directly by application developers, but is instead meant only to be subclassed by menu component developers.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために使用される MenuItem の内部クラス。このクラスはアプリケーション開発者が直接使用することを意図したものではなく、代わりにメニューコンポーネント開発者がサブクラス化することを意図したものです。</target>
        </trans-unit>
        <trans-unit id="96613315958a2d6f082bf65f7211f6458bcdc3bc" translate="yes" xml:space="preserve">
          <source>Inner class of PopupMenu used to provide default support for accessibility.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために使用される PopupMenu の内部クラス。</target>
        </trans-unit>
        <trans-unit id="217377f70fb36af765ce48527e77d7f156abcaea" translate="yes" xml:space="preserve">
          <source>Inner class of PopupMenu used to provide default support for accessibility. This class is not meant to be used directly by application developers, but is instead meant only to be subclassed by menu component developers.</source>
          <target state="translated">アクセシビリティのデフォルトサポートを提供するために使用される PopupMenu の内部クラス。このクラスはアプリケーション開発者が直接使うものではなく、メニューコンポーネントの開発者がサブクラスとして使うものです。</target>
        </trans-unit>
        <trans-unit id="86544ddbbe948bf56f6c3e3782ad105513a5d8f0" translate="yes" xml:space="preserve">
          <source>Inner classes are another, more general way to handle events from user interfaces. The &lt;code&gt;EventHandler&lt;/code&gt; class handles only a subset of what is possible using inner classes. However, &lt;code&gt;EventHandler&lt;/code&gt; works better with the long-term persistence scheme than inner classes. Also, using &lt;code&gt;EventHandler&lt;/code&gt; in large applications in which the same interface is implemented many times can reduce the disk and memory footprint of the application.</source>
          <target state="translated">内部クラスは、ユーザーインターフェイスからのイベントを処理するもう1つのより一般的な方法です。 &lt;code&gt;EventHandler&lt;/code&gt; 内部クラスを使って何ができるかのサブセットのみクラスハンドル。ただし、 &lt;code&gt;EventHandler&lt;/code&gt; は、内部クラスよりも長期永続化スキームでより適切に機能します。また、同じインターフェースが何度も実装されている大規模なアプリケーションで &lt;code&gt;EventHandler&lt;/code&gt; を使用すると、アプリケーションのディスクおよびメモリーのフットプリントを削減できます。</target>
        </trans-unit>
        <trans-unit id="7b3a7a0fbe11d0a1951702b1751dc4eecf42dfeb" translate="yes" xml:space="preserve">
          <source>Input Method Framework Overview</source>
          <target state="translated">入力メソッドフレームワークの概要</target>
        </trans-unit>
        <trans-unit id="59989afb4ad985e288b9e6a8d3d9031960797371" translate="yes" xml:space="preserve">
          <source>Input Number</source>
          <target state="translated">入力番号</target>
        </trans-unit>
        <trans-unit id="7e7e9419ec25de493dd7d80f93c613cb13435b8b" translate="yes" xml:space="preserve">
          <source>Input buffer for decompression.</source>
          <target state="translated">解凍用の入力バッファ。</target>
        </trans-unit>
        <trans-unit id="c5d81c3e635227a4ef8757a0e0f0e62a04314741" translate="yes" xml:space="preserve">
          <source>Input buffer for reading compressed data.</source>
          <target state="translated">圧縮データを読み出すための入力バッファ。</target>
        </trans-unit>
        <trans-unit id="903cb78c6c40095fecc03aaecccfa43c82ce89d5" translate="yes" xml:space="preserve">
          <source>Input data that may have been buffered during a previous &lt;code&gt;update&lt;/code&gt; operation is processed, with padding (if requested) being applied. If an AEAD mode such as GCM/CCM is being used, the authentication tag is appended in the case of encryption, or verified in the case of decryption. The result is stored in a new buffer.</source>
          <target state="translated">前の &lt;code&gt;update&lt;/code&gt; 操作中にバッファーに入れられた可能性のある入力データが処理され、パディング（要求された場合）が適用されます。GCM / CCMなどのAEADモードが使用されている場合、暗号化の場合は認証タグが付加され、復号化の場合は認証タグが検証されます。結果は新しいバッファに保存されます。</target>
        </trans-unit>
        <trans-unit id="ce7f08d118e52c75a08e97fd2242da90ca26eb8b" translate="yes" xml:space="preserve">
          <source>Input data that may have been buffered during a previous &lt;code&gt;update&lt;/code&gt; operation is processed, with padding (if requested) being applied. If an AEAD mode such as GCM/CCM is being used, the authentication tag is appended in the case of encryption, or verified in the case of decryption. The result is stored in the &lt;code&gt;output&lt;/code&gt; buffer, starting at &lt;code&gt;outputOffset&lt;/code&gt; inclusive.</source>
          <target state="translated">前の &lt;code&gt;update&lt;/code&gt; 操作中にバッファーに入れられた可能性のある入力データが処理され、パディング（要求された場合）が適用されます。GCM / CCMなどのAEADモードが使用されている場合、暗号化の場合は認証タグが付加され、復号化の場合は認証タグが検証されます。結果は、 &lt;code&gt;outputOffset&lt;/code&gt; から始まる &lt;code&gt;output&lt;/code&gt; バッファーに格納されます。</target>
        </trans-unit>
        <trans-unit id="016c086c7818f0d19be0901cd7a495a4d7a69f77" translate="yes" xml:space="preserve">
          <source>Input method events are enabled via &lt;code&gt;enableEvents&lt;/code&gt;.</source>
          <target state="translated">入力メソッドイベントは、 &lt;code&gt;enableEvents&lt;/code&gt; を介して有効になります。</target>
        </trans-unit>
        <trans-unit id="6ec4b1951440f4da3454d53f1c661014c70b05eb" translate="yes" xml:space="preserve">
          <source>Input method events contain information about text that is being composed using an input method.</source>
          <target state="translated">入力メソッドイベントには、入力メソッドを使用して構成されているテキストに関する情報が含まれています。</target>
        </trans-unit>
        <trans-unit id="b95b32eb4c013d104da7c44c82664d2eb99fa5ec" translate="yes" xml:space="preserve">
          <source>Input method events contain information about text that is being composed using an input method. Whenever the text changes, the input method sends an event. If the text component that's currently using the input method is an active client, the event is dispatched to that component. Otherwise, it is dispatched to a separate composition window.</source>
          <target state="translated">入力メソッドのイベントには、入力メソッドを使用して構成されているテキストに関する情報が含まれています。テキストが変更されるたびに、入力メソッドはイベントを送信します。現在入力メソッドを使用しているテキストコンポーネントがアクティブなクライアントである場合、イベントはそのコンポーネントにディスパッチされます。そうでない場合は、別の構成ウィンドウにディスパッチされます。</target>
        </trans-unit>
        <trans-unit id="a744df86bdcc3732da1c4e85c124ff01f1bb2052" translate="yes" xml:space="preserve">
          <source>Input method highlights are used while text is being composed by an input method. Text editing components should retain them even if they generally only deal with unstyled text, and make them available to the drawing routines.</source>
          <target state="translated">入力メソッドのハイライトは、テキストが入力メソッドによって構成されている間に使用されます。テキスト編集コンポーネントは、一般的にスタイル化されていないテキストを扱うだけであっても、それらを保持し、描画ルーチンで利用できるようにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="ffbf0828adab7ba5ef9bbc23f02b88af1bdb7682" translate="yes" xml:space="preserve">
          <source>Input method windows are disabled. It is advisable to call &lt;code&gt;Component.enableInputMethods(false)&lt;/code&gt; to make a component a non-client of the input method framework.</source>
          <target state="translated">入力方式ウィンドウは無効になっています。 &lt;code&gt;Component.enableInputMethods(false)&lt;/code&gt; を呼び出して、コンポーネントをインプットメソッドフレームワークの非クライアントにすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d82f9b8094c667190827a03e013128f090077b91" translate="yes" xml:space="preserve">
          <source>Input methods are &lt;em&gt;unavailable&lt;/em&gt; if (a) no input method written in the Java programming language has been installed and (b) the Java Platform implementation or the underlying platform does not support native input methods. In this case, input contexts can still be created and used; their behavior is specified with the individual methods below.</source>
          <target state="translated">（a）Javaプログラミング言語で記述された入力メソッドがインストールされておらず、（b）Javaプラットフォームの実装または基盤となるプラットフォームがネイティブ入力メソッドをサポートしていない場合、入力メソッドは&lt;em&gt;使用でき&lt;/em&gt;ません。この場合でも、入力コンテキストを作成して使用できます。それらの動作は、以下の個々のメソッドで指定されます。</target>
        </trans-unit>
        <trans-unit id="f4482d7dc77ec6989df7b926ab67c9e53a34d485" translate="yes" xml:space="preserve">
          <source>Input methods can be made available by adding them to the application's class path. The main JAR file of an input method must contain the file:</source>
          <target state="translated">入力メソッドは、アプリケーションのクラスパスに追加することで利用可能にすることができます。入力メソッドのメインJARファイルには、ファイルが含まれていなければなりません。</target>
        </trans-unit>
        <trans-unit id="50eebd1c70cc813605aaacffe8ceca5546c7f2b8" translate="yes" xml:space="preserve">
          <source>Input methods must call &lt;a href=&quot;../../window#dispose()&quot;&gt;&lt;code&gt;Window.dispose&lt;/code&gt;&lt;/a&gt; on the returned input method window when it is no longer needed.</source>
          <target state="translated">入力メソッドは、必要がなくなったときに、返された入力メソッドウィンドウで&lt;a href=&quot;../../window#dispose()&quot;&gt; &lt;code&gt;Window.dispose&lt;/code&gt; &lt;/a&gt;を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="3391666924aaf27c24607fe771fa89c85e25b150" translate="yes" xml:space="preserve">
          <source>Input remaining after the complete part of the source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4bf337c80016800623d37492b7de2c946854176" translate="yes" xml:space="preserve">
          <source>Input rounded to one digit</source>
          <target state="translated">入力は丸めて一桁にします。</target>
        </trans-unit>
        <trans-unit id="edb61efe0e715d3b359d0bb3809f6e390c27cbe5" translate="yes" xml:space="preserve">
          <source>Input stream for reading the print data bytes from this doc. If an input stream cannot be provided because this doc does not meet the criteria stated above, null is returned.</source>
          <target state="translated">このdocから印刷データバイトを読み込むための入力ストリーム。このdocが上記の基準を満たしていないために入力ストリームを提供できない場合、nullが返されます。</target>
        </trans-unit>
        <trans-unit id="68ba2930e5df7d3ec65a9fe833276d8bb9ab6050" translate="yes" xml:space="preserve">
          <source>InputContext</source>
          <target state="translated">InputContext</target>
        </trans-unit>
        <trans-unit id="ec99bd83c71d3d8a08f77e563059a952e996dff6" translate="yes" xml:space="preserve">
          <source>InputEvent</source>
          <target state="translated">InputEvent</target>
        </trans-unit>
        <trans-unit id="5af5706a9ffa7542d1cc0b3c65b9fb5bed2be655" translate="yes" xml:space="preserve">
          <source>InputEvent that triggered the hyperlink event, or null</source>
          <target state="translated">ハイパーリンクイベントのトリガーとなったInputEvent、またはnull</target>
        </trans-unit>
        <trans-unit id="9f70e916723ed94a67dfd96a1d3c3084935c0cd5" translate="yes" xml:space="preserve">
          <source>InputMap</source>
          <target state="translated">InputMap</target>
        </trans-unit>
        <trans-unit id="32527c0dd8ca2c8fb53ac351e2369e7440c67b23" translate="yes" xml:space="preserve">
          <source>InputMapUIResource</source>
          <target state="translated">InputMapUIResource</target>
        </trans-unit>
        <trans-unit id="08673fe742408f681acea6110280d864dcdbde69" translate="yes" xml:space="preserve">
          <source>InputMethod</source>
          <target state="translated">InputMethod</target>
        </trans-unit>
        <trans-unit id="93eaf30c170378afd10e8e56f13d29ad39d37505" translate="yes" xml:space="preserve">
          <source>InputMethodContext</source>
          <target state="translated">InputMethodContext</target>
        </trans-unit>
        <trans-unit id="684486ad73f0af9f4f79f517b9ba98aabf7f99cb" translate="yes" xml:space="preserve">
          <source>InputMethodDescriptor</source>
          <target state="translated">InputMethodDescriptor</target>
        </trans-unit>
        <trans-unit id="dcbb5cf1f045fc6bd77b5803a5b22fd96762d315" translate="yes" xml:space="preserve">
          <source>InputMethodEvent</source>
          <target state="translated">InputMethodEvent</target>
        </trans-unit>
        <trans-unit id="575057261617e665e7a38205aff620f01a775cd3" translate="yes" xml:space="preserve">
          <source>InputMethodHighlight</source>
          <target state="translated">InputMethodHighlight</target>
        </trans-unit>
        <trans-unit id="a8da3910efb6ef86e2defa83b0733d3e09521dc3" translate="yes" xml:space="preserve">
          <source>InputMethodHighlight instances are typically used as attribute values returned from AttributedCharacterIterator for the INPUT_METHOD_HIGHLIGHT attribute. They may be wrapped into &lt;a href=&quot;../../../../java.base/java/text/annotation&quot;&gt;&lt;code&gt;Annotation&lt;/code&gt;&lt;/a&gt; instances to indicate separate text segments.</source>
          <target state="translated">InputMethodHighlightインスタンスは通常、INPUT_METHOD_HIGHLIGHT属性のAttributedCharacterIteratorから返される属性値として使用されます。それらは、個別のテキストセグメントを示すために、&lt;a href=&quot;../../../../java.base/java/text/annotation&quot;&gt; &lt;code&gt;Annotation&lt;/code&gt; &lt;/a&gt;インスタンスにラップされる場合があります。</target>
        </trans-unit>
        <trans-unit id="c49bff5a1abebebf6c62e799e4b645cbb0d82ea5" translate="yes" xml:space="preserve">
          <source>InputMethodListener</source>
          <target state="translated">InputMethodListener</target>
        </trans-unit>
        <trans-unit id="f0f552f58369c7c7c0d2b8d6dabd06a5b90946f4" translate="yes" xml:space="preserve">
          <source>InputMethodRequests</source>
          <target state="translated">InputMethodRequests</target>
        </trans-unit>
        <trans-unit id="0ec9a3516db0b53cf9816f30458698e189ec3544" translate="yes" xml:space="preserve">
          <source>InputMethodRequests defines the requests that a text editing component has to handle in order to work with input methods.</source>
          <target state="translated">InputMethodRequestsは、テキスト編集コンポーネントが入力メソッドを扱うために処理しなければならないリクエストを定義します。</target>
        </trans-unit>
        <trans-unit id="dd0978bb10be8a28e7c4183a9ca4bbc00d308bb1" translate="yes" xml:space="preserve">
          <source>InputMethodRequests defines the requests that a text editing component has to handle in order to work with input methods. The component can implement this interface itself or use a separate object that implements it. The object implementing this interface must be returned from the component's getInputMethodRequests method.</source>
          <target state="translated">InputMethodRequestsは、テキスト編集コンポーネントが入力メソッドを扱うために処理しなければならないリクエストを定義します。コンポーネントはこのインターフェイス自体を実装することも、それを実装する別のオブジェクトを使用することもできます。このインターフェイスを実装したオブジェクトは、コンポーネントのgetInputMethodRequestsメソッドから返されなければなりません。</target>
        </trans-unit>
        <trans-unit id="dabd89698a5cadd65c6b43d6f1181e92e7527360" translate="yes" xml:space="preserve">
          <source>InputMismatchException</source>
          <target state="translated">InputMismatchException</target>
        </trans-unit>
        <trans-unit id="d18c09b48011438bf3dcb1c387a31bc32b19c7ef" translate="yes" xml:space="preserve">
          <source>InputSource</source>
          <target state="translated">InputSource</target>
        </trans-unit>
        <trans-unit id="434b0f50e01b1e9b69ea2e02d51cd44a3d4a98bb" translate="yes" xml:space="preserve">
          <source>InputStream</source>
          <target state="translated">InputStream</target>
        </trans-unit>
        <trans-unit id="013beaf98731304bdb95b394e57c7cd5f8e38b0e" translate="yes" xml:space="preserve">
          <source>InputStream.available()</source>
          <target state="translated">InputStream.available()</target>
        </trans-unit>
        <trans-unit id="c4b8bbeef64f833da14d008f8658bb24d1833518" translate="yes" xml:space="preserve">
          <source>InputStream.close()</source>
          <target state="translated">InputStream.close()</target>
        </trans-unit>
        <trans-unit id="7c132358b13ab9b41fb8f76e3e4f85bcdad5312d" translate="yes" xml:space="preserve">
          <source>InputStream.mark()</source>
          <target state="translated">InputStream.mark()</target>
        </trans-unit>
        <trans-unit id="ca5d2acb4ba1d88facb9af1342d1fa9f756bd76e" translate="yes" xml:space="preserve">
          <source>InputStream.markSupported()</source>
          <target state="translated">InputStream.markSupported()</target>
        </trans-unit>
        <trans-unit id="40c71bd80c63608d3b30798ea9982eb2715ca599" translate="yes" xml:space="preserve">
          <source>InputStream.read()</source>
          <target state="translated">InputStream.read()</target>
        </trans-unit>
        <trans-unit id="6f98a961a4c06c644daebb812935c4965831dd1a" translate="yes" xml:space="preserve">
          <source>InputStream.reset()</source>
          <target state="translated">InputStream.reset()</target>
        </trans-unit>
        <trans-unit id="59df395c812e098a7398ff708b5a5dd7a6cf5e77" translate="yes" xml:space="preserve">
          <source>InputStream.skip()</source>
          <target state="translated">InputStream.skip()</target>
        </trans-unit>
        <trans-unit id="5ca42c5b7e7077d99eaf0259c9e2d36ecd218191" translate="yes" xml:space="preserve">
          <source>InputStreamReader</source>
          <target state="translated">InputStreamReader</target>
        </trans-unit>
        <trans-unit id="bfc7319e5fb69e29d0e51ffa1b12246cea198169" translate="yes" xml:space="preserve">
          <source>InputStreamReader.close()</source>
          <target state="translated">InputStreamReader.close()</target>
        </trans-unit>
        <trans-unit id="46268f18c22e8cfeab99f178089dccfce5e3add6" translate="yes" xml:space="preserve">
          <source>InputStreamReader.getEncoding()</source>
          <target state="translated">InputStreamReader.getEncoding()</target>
        </trans-unit>
        <trans-unit id="b04427fa8392c7ec6dfb6351beb9336f90cfcbaf" translate="yes" xml:space="preserve">
          <source>InputStreamReader.read()</source>
          <target state="translated">InputStreamReader.read()</target>
        </trans-unit>
        <trans-unit id="80dd6609ab9e09e818e35946704ccfd1d984cd1a" translate="yes" xml:space="preserve">
          <source>InputStreamReader.ready()</source>
          <target state="translated">InputStreamReader.ready()</target>
        </trans-unit>
        <trans-unit id="e5facfd3f27895263feb7f167cc5bb30c676d840" translate="yes" xml:space="preserve">
          <source>InputSubset</source>
          <target state="translated">InputSubset</target>
        </trans-unit>
        <trans-unit id="8f040f98ad556863b3fc142d970a478df0015c88" translate="yes" xml:space="preserve">
          <source>InputVerifier</source>
          <target state="translated">InputVerifier</target>
        </trans-unit>
        <trans-unit id="17a94561497821b79e994b422401b398ab54e722" translate="yes" xml:space="preserve">
          <source>InquireSecContextPermission</source>
          <target state="translated">InquireSecContextPermission</target>
        </trans-unit>
        <trans-unit id="d9a14e967d16b6a77110063d870e7f599435a69c" translate="yes" xml:space="preserve">
          <source>InquireType</source>
          <target state="translated">InquireType</target>
        </trans-unit>
        <trans-unit id="95802daab3a23990338179f72248350c1434cf39" translate="yes" xml:space="preserve">
          <source>Insert</source>
          <target state="translated">Insert</target>
        </trans-unit>
        <trans-unit id="d242e2188785c9916310b25d1705606d348a5283" translate="yes" xml:space="preserve">
          <source>Insert &lt;code&gt;length&lt;/code&gt; indices beginning before/after &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">インデックスの前後から &lt;code&gt;length&lt;/code&gt; インデックスを挿入し &lt;code&gt;index&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98edeea5b48e32b079f891a27e926cbb5edc3d24" translate="yes" xml:space="preserve">
          <source>Insert &lt;code&gt;length&lt;/code&gt; indices beginning before/after &lt;code&gt;index&lt;/code&gt;. This is typically called to sync the selection model with a corresponding change in the data model.</source>
          <target state="translated">インデックスの前後から &lt;code&gt;length&lt;/code&gt; インデックスを挿入し &lt;code&gt;index&lt;/code&gt; 。これは通常、選択モデルをデータモデルの対応する変更と同期するために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ad6a6e8b4bbdde6015746436390b9e2ded24c277" translate="yes" xml:space="preserve">
          <source>Insert a new empty row in the table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3e6a909cf67f9b43e016b26d4caf560aad10d2" translate="yes" xml:space="preserve">
          <source>Insert a new empty row in the table. The new row is inserted immediately before and in the same section as the current &lt;code&gt;index&lt;/code&gt; th row in the table. If &lt;code&gt;index&lt;/code&gt; is equal to the number of rows, the new row is appended. In addition, when the table is empty the row is inserted into a &lt;code&gt;TBODY&lt;/code&gt; which is created and inserted into the table. Note. A table row cannot be empty according to HTML 4.0 Recommendation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b4958285d218d0dd225d2c63cae79a8ab9a73a" translate="yes" xml:space="preserve">
          <source>Insert a row into this section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59bdf61665faea5885d6e1ff1083306445a93945" translate="yes" xml:space="preserve">
          <source>Insert a row into this section. The new row is inserted immediately before the current &lt;code&gt;index&lt;/code&gt; th row in this section. If &lt;code&gt;index&lt;/code&gt; is equal to the number of rows in this section, the new row is appended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8edb85f296e85d7b5ce06198a0062c0fcc9276" translate="yes" xml:space="preserve">
          <source>Insert a string at the specified 16-bit unit offset.</source>
          <target state="translated">指定された 16 ビットの単位オフセットに文字列を挿入します。</target>
        </trans-unit>
        <trans-unit id="9fa8a847be52120c1c66b84215274b967840e17b" translate="yes" xml:space="preserve">
          <source>Insert an empty &lt;code&gt;TD&lt;/code&gt; cell into this row.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1090c5e2dc447179c9484b43086d63af47766a35" translate="yes" xml:space="preserve">
          <source>Insert an empty &lt;code&gt;TD&lt;/code&gt; cell into this row. If &lt;code&gt;index&lt;/code&gt; is equal to the number of cells, the new cell is appended</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e2331e0ee47ea35e51fcc956cab4b60c66a5ca" translate="yes" xml:space="preserve">
          <source>Insert content from the given stream which is expected to be in a format appropriate for this kind of content handler.</source>
          <target state="translated">与えられたストリームから、この種のコンテンツハンドラに適した形式のコンテンツを挿入します。</target>
        </trans-unit>
        <trans-unit id="81a1dece677e10bf1cd489dde9c9c2e28dd40b25" translate="yes" xml:space="preserve">
          <source>Insert content from the given stream, which will be treated as plain text.</source>
          <target state="translated">与えられたストリームから内容を挿入します。</target>
        </trans-unit>
        <trans-unit id="f616c221bf526eab19cbb37e8d73cafab6418e46" translate="yes" xml:space="preserve">
          <source>Insert length indices beginning before/after index.</source>
          <target state="translated">インデックスの前後から始まる長さのインデックスを挿入します。</target>
        </trans-unit>
        <trans-unit id="038a2f2b946752312d48d1572bb577eedc9d4d61" translate="yes" xml:space="preserve">
          <source>Insert length indices beginning before/after index. If the value at index is itself selected and the selection mode is not SINGLE_SELECTION, set all of the newly inserted items as selected. Otherwise leave them unselected. This method is typically called to sync the selection model with a corresponding change in the data model.</source>
          <target state="translated">インデックスの前後から始まる長さのインデックスを挿入します。index の値自体が選択されており、選択モードが SINGLE_SELECTION でない場合は、新たに挿入されたすべての項目を選択されたものとして設定します。それ以外の場合は非選択のままにしておきます。このメソッドは通常、データモデルの対応する変更と選択モデルを同期させるために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1ef3dc0e589d68311da71a4a260ff00daae462bd" translate="yes" xml:space="preserve">
          <source>Insert the result of the parse operation as the immediately following sibling of the context node.</source>
          <target state="translated">パース操作の結果を、コンテキスト・ノードの直後の兄弟として挿入します。</target>
        </trans-unit>
        <trans-unit id="695e853a536db68d6679e693d8c88bc4ab959ab5" translate="yes" xml:space="preserve">
          <source>Insert the result of the parse operation as the immediately following sibling of the context node. For this action to work the context node's parent must be an &lt;code&gt;Element&lt;/code&gt; or a &lt;code&gt;DocumentFragment&lt;/code&gt;.</source>
          <target state="translated">解析操作の結果を、コンテキストノードの直後の兄弟として挿入します。このアクションが機能するには、コンテキストノードの親が &lt;code&gt;Element&lt;/code&gt; または &lt;code&gt;DocumentFragment&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="b00b5afd60b713c0058e13de842c7e46a3ecc637" translate="yes" xml:space="preserve">
          <source>Insert the result of the parse operation as the immediately preceding sibling of the context node.</source>
          <target state="translated">パース操作の結果を、コンテキスト・ノードの直前の兄弟として挿入します。</target>
        </trans-unit>
        <trans-unit id="32f6240e447b4c45dbff07b331c31e1906162fcd" translate="yes" xml:space="preserve">
          <source>Insert the result of the parse operation as the immediately preceding sibling of the context node. For this action to work the context node's parent must be an &lt;code&gt;Element&lt;/code&gt; or a &lt;code&gt;DocumentFragment&lt;/code&gt;.</source>
          <target state="translated">解析操作の結果を、コンテキストノードの直前の兄弟として挿入します。このアクションが機能するには、コンテキストノードの親が &lt;code&gt;Element&lt;/code&gt; または &lt;code&gt;DocumentFragment&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="be9b6cd8681a55e996d6dcc4c1c681ac07557d3c" translate="yes" xml:space="preserve">
          <source>Insert type.</source>
          <target state="translated">挿入タイプです。</target>
        </trans-unit>
        <trans-unit id="192bc6f3b93b547e8257e6769121e52951a2e507" translate="yes" xml:space="preserve">
          <source>InsertBreakAction</source>
          <target state="translated">InsertBreakAction</target>
        </trans-unit>
        <trans-unit id="36e48df18e01c7679896443e2c9693ccc6642f51" translate="yes" xml:space="preserve">
          <source>InsertContentAction</source>
          <target state="translated">InsertContentAction</target>
        </trans-unit>
        <trans-unit id="02aa0f2fa2a0f801b4360e79c409bd5a8c842db4" translate="yes" xml:space="preserve">
          <source>InsertHTMLTextAction</source>
          <target state="translated">InsertHTMLTextAction</target>
        </trans-unit>
        <trans-unit id="71cb341f392dc636e9f791fac56bdf02092f6ddc" translate="yes" xml:space="preserve">
          <source>InsertHTMLTextAction can be used to insert an arbitrary string of HTML into an existing HTML document.</source>
          <target state="translated">InsertHTMLTextAction は、既存の HTML ドキュメントに任意の HTML 文字列を挿入するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="5b59fe6ead00c604c5ed67518da19a49fbe61774" translate="yes" xml:space="preserve">
          <source>InsertHTMLTextAction can be used to insert an arbitrary string of HTML into an existing HTML document. At least two HTML.Tags need to be supplied. The first Tag, parentTag, identifies the parent in the document to add the elements to. The second tag, addTag, identifies the first tag that should be added to the document as seen in the HTML string. One important thing to remember, is that the parser is going to generate all the appropriate tags, even if they aren't in the HTML string passed in.</source>
          <target state="translated">InsertHTMLTextAction は、既存の HTML ドキュメントに任意の文字列の HTML を挿入するために使用することができます。少なくとも二つの HTML.Tag を提供する必要があります。最初のタグである parentTag は、要素を追加するドキュメントの親を識別します。2番目のタグ、addTagは、HTML文字列で見られるようにドキュメントに追加されるべき最初のタグを識別します。覚えておくべき重要なことは、たとえそれらが渡されたHTML文字列に含まれていなくても、パーサはすべての適切なタグを生成しようとしているということです。</target>
        </trans-unit>
        <trans-unit id="a4167fbafce4f6a402a69d076b6387214422db17" translate="yes" xml:space="preserve">
          <source>InsertTabAction</source>
          <target state="translated">InsertTabAction</target>
        </trans-unit>
        <trans-unit id="7fc028ebb707806d3a8e00e6608c8d064b55bae3" translate="yes" xml:space="preserve">
          <source>Inserting elements</source>
          <target state="translated">要素の挿入</target>
        </trans-unit>
        <trans-unit id="29feffcb7553f2ee5a48d2d0044d4babc763238a" translate="yes" xml:space="preserve">
          <source>Inserts HTML into an existing document.</source>
          <target state="translated">既存のドキュメントにHTMLを挿入します。</target>
        </trans-unit>
        <trans-unit id="8bbdf6d82742cd159789a78edf9ee4a296629308" translate="yes" xml:space="preserve">
          <source>Inserts a component into the document as a replacement for the currently selected content.</source>
          <target state="translated">現在選択されている内容の代わりにコンポーネントをドキュメントに挿入します。</target>
        </trans-unit>
        <trans-unit id="cc1afa7842cf84e0fdf59658fb6cbd504dc668d7" translate="yes" xml:space="preserve">
          <source>Inserts a component into the document as a replacement for the currently selected content. If there is no selection the component is effectively inserted at the current position of the caret. This is represented in the associated document as an attribute of one character of content.</source>
          <target state="translated">現在選択されている内容の代わりにコンポーネントを文書内に挿入します。選択がない と きは、 コ ン ポーネ ン ト は、 カ レ ン ト のカ レ ン ト 位置に効果的に挿入 さ れます。これは、関連付けられた文書の中で、内容の一文字の属性として表現されます。</target>
        </trans-unit>
        <trans-unit id="8105087fa534004ff8d19c84db0b6630811d9e8c" translate="yes" xml:space="preserve">
          <source>Inserts a menu item for the specified &lt;code&gt;Action&lt;/code&gt; object at a given position.</source>
          <target state="translated">指定された &lt;code&gt;Action&lt;/code&gt; オブジェクトのメニュー項目を指定された位置に挿入します。</target>
        </trans-unit>
        <trans-unit id="e638828ba12fd898c807c37a260510986d4523de" translate="yes" xml:space="preserve">
          <source>Inserts a menu item into this menu at the specified position.</source>
          <target state="translated">指定した位置にメニュー項目を挿入します。</target>
        </trans-unit>
        <trans-unit id="40ff0cc26e6cc60047a0b25748d2e5089edc61bb" translate="yes" xml:space="preserve">
          <source>Inserts a menu item with the specified label into this menu at the specified position.</source>
          <target state="translated">指定されたラベルのメニュー項目を、指定された位置に挿入します。</target>
        </trans-unit>
        <trans-unit id="1c904a07b61e4688fe0bfa1d0a47733ebddfe6c1" translate="yes" xml:space="preserve">
          <source>Inserts a menu item with the specified label into this menu at the specified position. This is a convenience method for &lt;code&gt;insert(menuItem, index)&lt;/code&gt;.</source>
          <target state="translated">指定されたラベルのメニュー項目をこのメニューの指定された位置に挿入します。これは、 &lt;code&gt;insert(menuItem, index)&lt;/code&gt; 便利なメソッドです。</target>
        </trans-unit>
        <trans-unit id="59653e1941375e1c84b4964102c30b7f621ed677" translate="yes" xml:space="preserve">
          <source>Inserts a new image into an existing image stream.</source>
          <target state="translated">既存の画像ストリームに新しい画像を挿入します。</target>
        </trans-unit>
        <trans-unit id="7c9815912caeb606d7b6d3901fa429ed6d5bb2df" translate="yes" xml:space="preserve">
          <source>Inserts a new image into an existing image stream. Existing images with an index greater than &lt;code&gt;imageIndex&lt;/code&gt; are preserved, and their indices are each increased by 1. A value for &lt;code&gt;imageIndex&lt;/code&gt; of -1 may be used to signify an index one larger than the previous largest index; that is, it will cause the image to be logically appended to the end of the sequence. If the output is an &lt;code&gt;ImageOutputStream&lt;/code&gt;, the entirety of the stream must be both readable and writeable.</source>
          <target state="translated">新しい画像を既存の画像ストリームに挿入します。 &lt;code&gt;imageIndex&lt;/code&gt; より大きいインデックスを持つ既存の画像は保持され、それらのインデックスはそれぞれ1ずつ増加します。-1の &lt;code&gt;imageIndex&lt;/code&gt; の値は、前の最大のインデックスより1つ大きいインデックスを示すために使用できます。つまり、画像がシーケンスの最後に論理的に追加されます。出力が &lt;code&gt;ImageOutputStream&lt;/code&gt; の場合、ストリーム全体が読み取りと書き込みの両方が可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="47eb3615748403e5615c5e29d81c1712e5311ab6" translate="yes" xml:space="preserve">
          <source>Inserts a new menu item attached to the specified &lt;code&gt;Action&lt;/code&gt; object at a given position.</source>
          <target state="translated">指定された &lt;code&gt;Action&lt;/code&gt; オブジェクトにアタッチされた新しいメニュー項目を指定された位置に挿入します。</target>
        </trans-unit>
        <trans-unit id="a259c44769e2412490eb7e00a0d346b8f7c96005" translate="yes" xml:space="preserve">
          <source>Inserts a new menu item with the specified text at a given position.</source>
          <target state="translated">指定された位置に、指定されたテキストを含む新規メニュー項目を挿入します。</target>
        </trans-unit>
        <trans-unit id="7ab9f0bcffea621c1ae65f32b5b95b57497bc38b" translate="yes" xml:space="preserve">
          <source>Inserts a new tab for the given component, at the given index, represented by the given title and/or icon, either of which may be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">指定されたコンポーネントの新しいタブを指定されたインデックスに挿入します。指定されたタイトルやアイコンで表され、どちらも &lt;code&gt;null&lt;/code&gt; の場合があります。</target>
        </trans-unit>
        <trans-unit id="f48f4ccd32361473077c846b18a21f004efd92f2" translate="yes" xml:space="preserve">
          <source>Inserts a node into the Document or DocumentFragment at the start of the Range.</source>
          <target state="translated">範囲の先頭にあるDocumentまたはDocumentFragmentにノードを挿入します。</target>
        </trans-unit>
        <trans-unit id="5417a2e9287324e6b2d0fbc1515181559612c1cc" translate="yes" xml:space="preserve">
          <source>Inserts a node into the Document or DocumentFragment at the start of the Range. If the container is a Text node, this will be split at the start of the Range (as if the Text node's splitText method was performed at the insertion point) and the insertion will occur between the two resulting Text nodes. Adjacent Text nodes will not be automatically merged. If the node to be inserted is a DocumentFragment node, the children will be inserted rather than the DocumentFragment node itself.</source>
          <target state="translated">ノードを,範囲の開始点で Document または DocumentFragment に挿入します。コンテナがテキストノードの場合、これは範囲の開始時に分割され(挿入ポイントでテキストノードのsplitTextメソッドが実行されたかのように)、挿入は結果として得られる2つのテキストノードの間で行われます。隣接するテキスト ノードは自動的にマージされません。挿入されるノードが DocumentFragment ノードの場合、子ノードは DocumentFragment ノード自体ではなく挿入されます。</target>
        </trans-unit>
        <trans-unit id="f1fdd9472eac49e9880a355d9dbb719b95b60b4e" translate="yes" xml:space="preserve">
          <source>Inserts a row at &lt;code&gt;row&lt;/code&gt; in the model.</source>
          <target state="translated">モデルの &lt;code&gt;row&lt;/code&gt; に行を挿入します。</target>
        </trans-unit>
        <trans-unit id="79e4d19a15ccbd5db3858964fda4d2c9c1ce2ef8" translate="yes" xml:space="preserve">
          <source>Inserts a row at &lt;code&gt;row&lt;/code&gt; in the model. The new row will contain &lt;code&gt;null&lt;/code&gt; values unless &lt;code&gt;rowData&lt;/code&gt; is specified. Notification of the row being added will be generated.</source>
          <target state="translated">モデルの &lt;code&gt;row&lt;/code&gt; に行を挿入します。 &lt;code&gt;rowData&lt;/code&gt; が指定されていない限り、新しい行には &lt;code&gt;null&lt;/code&gt; 値が含まれます。追加される行の通知が生成されます。</target>
        </trans-unit>
        <trans-unit id="7e3d12d92c905c7934ca0260f0506830f0b354e9" translate="yes" xml:space="preserve">
          <source>Inserts a separator at the specified position.</source>
          <target state="translated">指定した位置にセパレータを挿入します。</target>
        </trans-unit>
        <trans-unit id="cd7ee585d04700f73f6ff801e86e75d58445a965" translate="yes" xml:space="preserve">
          <source>Inserts a single child view.</source>
          <target state="translated">単一の子ビューを挿入します。</target>
        </trans-unit>
        <trans-unit id="4b40634962bb6aedf78192b0febd68d616c6c5b9" translate="yes" xml:space="preserve">
          <source>Inserts a single child view. This is a convenience call to &lt;code&gt;replace&lt;/code&gt;.</source>
          <target state="translated">単一の子ビューを挿入します。これは、を &lt;code&gt;replace&lt;/code&gt; 便利な呼び出しです。</target>
        </trans-unit>
        <trans-unit id="c1bd3c49ea57ed3a87e5b7eaea44b4eb4fde0143" translate="yes" xml:space="preserve">
          <source>Inserts a string into the content.</source>
          <target state="translated">コンテンツに文字列を挿入します。</target>
        </trans-unit>
        <trans-unit id="dfb82a88d9a372c8b045533f6eec9da02d1f9b00" translate="yes" xml:space="preserve">
          <source>Inserts a string of characters into the sequence.</source>
          <target state="translated">文字列をシーケンスに挿入します。</target>
        </trans-unit>
        <trans-unit id="b7f48f8dd43bc0bf26d198a216a0bdb42d80d165" translate="yes" xml:space="preserve">
          <source>Inserts a string of content.</source>
          <target state="translated">コンテンツの文字列を挿入します。</target>
        </trans-unit>
        <trans-unit id="0f10b8f1d66557077099491199efcc91fd0253f1" translate="yes" xml:space="preserve">
          <source>Inserts a string of content. This will cause a DocumentEvent of type DocumentEvent.EventType.INSERT to be sent to the registered DocumentListers, unless an exception is thrown. The DocumentEvent will be delivered by calling the insertUpdate method on the DocumentListener. The offset and length of the generated DocumentEvent will indicate what change was actually made to the Document.</source>
          <target state="translated">コンテンツの文字列を挿入します。これにより、例外がスローされない限り、DocumentEvent.EventType.INSERT型のDocumentEventが登録されたDocumentListersに送信されます。DocumentEventは、DocumentListener上でinsertUpdateメソッドを呼び出すことで配信されます。生成されたDocumentEventのオフセットと長さは、実際にどのような変更がDocumentに対して行われたかを示します。</target>
        </trans-unit>
        <trans-unit id="a4cc6039e3c3a7fe5d394682c1ca9c4230d25c5a" translate="yes" xml:space="preserve">
          <source>Inserts a subsequence of the specified &lt;code&gt;CharSequence&lt;/code&gt; into this sequence.</source>
          <target state="translated">指定された &lt;code&gt;CharSequence&lt;/code&gt; のサブシーケンスをこのシーケンスに挿入します。</target>
        </trans-unit>
        <trans-unit id="54637f8134e32279cb5439e24fa6d7fc52c91d1d" translate="yes" xml:space="preserve">
          <source>Inserts all of the elements in the &lt;code&gt;AttributeList&lt;/code&gt; specified into this list, starting at the specified position, in the order in which they are returned by the Iterator of the &lt;code&gt;AttributeList&lt;/code&gt; specified.</source>
          <target state="translated">全ての要素の挿入 &lt;code&gt;AttributeList&lt;/code&gt; 、それらがの反復子によって返される順序で、指定された位置から始まる、このリストに指定され &lt;code&gt;AttributeList&lt;/code&gt; 指定しました。</target>
        </trans-unit>
        <trans-unit id="c283e6b2d573b624be958bb274b7e181ee2fbd33" translate="yes" xml:space="preserve">
          <source>Inserts all of the elements in the &lt;code&gt;AttributeList&lt;/code&gt; specified into this list, starting at the specified position, in the order in which they are returned by the Iterator of the &lt;code&gt;AttributeList&lt;/code&gt; specified. If the index is out of range (index &amp;lt; 0 || index &amp;gt; size()) a RuntimeOperationsException should be raised, wrapping the java.lang.IndexOutOfBoundsException thrown.</source>
          <target state="translated">全ての要素の挿入 &lt;code&gt;AttributeList&lt;/code&gt; 、それらがの反復子によって返される順序で、指定された位置から始まる、このリストに指定され &lt;code&gt;AttributeList&lt;/code&gt; 指定しました。インデックスが範囲外の場合（index &amp;lt;0 || index&amp;gt; size（））、RuntimeOperationsExceptionが発生し、スローされたjava.lang.IndexOutOfBoundsExceptionがラップされます。</target>
        </trans-unit>
        <trans-unit id="ffa287ba85c86ad2f07fcee501505971209d8ac0" translate="yes" xml:space="preserve">
          <source>Inserts all of the elements in the RoleList specified into this list, starting at the specified position, in the order in which they are returned by the Iterator of the RoleList specified.</source>
          <target state="translated">指定された RoleList 内のすべての要素を、指定された RoleList の Iterator が返す順序で、指定された位置からこのリストに挿入します。</target>
        </trans-unit>
        <trans-unit id="69987599354a83693f390fe4d319fa859be0cb6b" translate="yes" xml:space="preserve">
          <source>Inserts all of the elements in the RoleUnresolvedList specified into this list, starting at the specified position, in the order in which they are returned by the Iterator of the RoleUnresolvedList specified.</source>
          <target state="translated">指定された RoleUnresolvedList 内のすべての要素を、指定された RoleUnresolvedList のイテレータが返す順序で、指定された位置からこのリストに挿入します。</target>
        </trans-unit>
        <trans-unit id="a78cc9933753bcf23d2a2da0201eeb9ddda7aa44" translate="yes" xml:space="preserve">
          <source>Inserts all of the elements in the specified Collection into this Vector at the specified position.</source>
          <target state="translated">指定されたコレクションのすべての要素を、指定された位置でこのベクターに挿入します。</target>
        </trans-unit>
        <trans-unit id="90681c956149b26dd6ac2ebb3af382d15362a50d" translate="yes" xml:space="preserve">
          <source>Inserts all of the elements in the specified Collection into this Vector at the specified position. Shifts the element currently at that position (if any) and any subsequent elements to the right (increases their indices). The new elements will appear in the Vector in the order that they are returned by the specified Collection's iterator.</source>
          <target state="translated">指定された位置で、指定されたコレクション内のすべての要素をこのベクターに挿入します。現在その位置にある要素(もしあれば)とそれ以降の要素を右に移動させます(インデックスを増加させます)。新しい要素は、指定されたコレクションのイテレータによって返された順にベクターに現れます。</target>
        </trans-unit>
        <trans-unit id="c0b2185091b02b7915d1e40b6d17478bfb3f427f" translate="yes" xml:space="preserve">
          <source>Inserts all of the elements in the specified collection into this list at the specified position (optional operation).</source>
          <target state="translated">指定されたコレクション内のすべての要素を、指定された位置でこのリストに挿入します(任意の操作)。</target>
        </trans-unit>
        <trans-unit id="6c06ed6293117584a94afff6d75d3c226f985637" translate="yes" xml:space="preserve">
          <source>Inserts all of the elements in the specified collection into this list at the specified position (optional operation). Shifts the element currently at that position (if any) and any subsequent elements to the right (increases their indices). The new elements will appear in this list in the order that they are returned by the specified collection's iterator. The behavior of this operation is undefined if the specified collection is modified while the operation is in progress. (Note that this will occur if the specified collection is this list, and it's nonempty.)</source>
          <target state="translated">指定されたコレクション内のすべての要素を、指定された位置でこのリストに挿入します(任意の操作)。現在その位置にある要素(あれば)とそれ以降の要素を右に移動します(インデックスを増やします)。新しい要素は、指定されたコレクションのイテレータによって返された順にこのリストに現れます。この操作が進行中に指定されたコレクションが変更された場合、この操作の動作は不定です。(指定されたコレクションがこのリストであり、それが空でない場合に発生することに注意してください)。</target>
        </trans-unit>
        <trans-unit id="f7431e59f75a35971ea56622680b2c23936c345a" translate="yes" xml:space="preserve">
          <source>Inserts all of the elements in the specified collection into this list, starting at the specified position.</source>
          <target state="translated">指定されたコレクション内のすべての要素を、指定された位置からこのリストに挿入します。</target>
        </trans-unit>
        <trans-unit id="9ac4c182f62b0830d403bba7ada79f7155dee5b0" translate="yes" xml:space="preserve">
          <source>Inserts all of the elements in the specified collection into this list, starting at the specified position. Shifts the element currently at that position (if any) and any subsequent elements to the right (increases their indices). The new elements will appear in the list in the order that they are returned by the specified collection's iterator.</source>
          <target state="translated">指定されたコレクション内のすべての要素を、指定された位置からこのリストに挿入します。現在その位置にある要素(あれば)と、それ以降の要素を右に移動させます(インデックスを増やします)。新しい要素は、指定されたコレクションのイテレータによって返された順にリストに現れます。</target>
        </trans-unit>
        <trans-unit id="155eb472406695516ddf137ac3a19f056419a202" translate="yes" xml:space="preserve">
          <source>Inserts all of the elements in the specified collection into this list, starting at the specified position. Shifts the element currently at that position (if any) and any subsequent elements to the right (increases their indices). The new elements will appear in this list in the order that they are returned by the specified collection's iterator.</source>
          <target state="translated">指定されたコレクション内のすべての要素を、指定された位置からこのリストに挿入します。現在その位置にある要素(あれば)と、それ以降の要素を右に移動させます(インデックスを増やします)。新しい要素は、指定されたコレクションのイテレータによって返された順にこのリストに現れます。</target>
        </trans-unit>
        <trans-unit id="a56a78d0884e84a9395f2bc249c3fe258f0b2426" translate="yes" xml:space="preserve">
          <source>Inserts an icon into the document as a replacement for the currently selected content.</source>
          <target state="translated">現在選択されている内容の代わりに、アイコンをドキュメントに挿入します。</target>
        </trans-unit>
        <trans-unit id="b8942484c5d2767d4688a5fc674e2baacfb27b46" translate="yes" xml:space="preserve">
          <source>Inserts an icon into the document as a replacement for the currently selected content. If there is no selection the icon is effectively inserted at the current position of the caret. This is represented in the associated document as an attribute of one character of content.</source>
          <target state="translated">現在選択されている内容の代わりにアイコンを文書内に挿入します。選択がない と きは、 アイコンは、 カ レ ッ ト の現在の位置に効果的に挿入 さ れます。これは、関連する文書内では、内容の 1 文字の属性として表現されます。</target>
        </trans-unit>
        <trans-unit id="19c02f1a9628b3025b7d541f7a4366bcb8976ae4" translate="yes" xml:space="preserve">
          <source>Inserts an item into the item list at a given index.</source>
          <target state="translated">指定されたインデックスの項目リストに項目を挿入します。</target>
        </trans-unit>
        <trans-unit id="86c1887c6938106bd177b69b2f8b19dd717b0997" translate="yes" xml:space="preserve">
          <source>Inserts an item into the item list at a given index. This method works only if the &lt;code&gt;JComboBox&lt;/code&gt; uses a mutable data model.</source>
          <target state="translated">指定されたインデックスのアイテムリストにアイテムを挿入します。このメソッドは、 &lt;code&gt;JComboBox&lt;/code&gt; が可変データモデルを使用する場合にのみ機能します。</target>
        </trans-unit>
        <trans-unit id="390a6fa46e06b8f1319e33943323afc91d3648e8" translate="yes" xml:space="preserve">
          <source>Inserts an object that intercepts requests for the MBean server that arrive through this connector server.</source>
          <target state="translated">このコネクタサーバを経由して到着した MBean サーバへのリクエストを遮断するオブジェクトを挿入します。</target>
        </trans-unit>
        <trans-unit id="2e9a5f31a710ebb23e02068e63ba6fbbe8bfab2b" translate="yes" xml:space="preserve">
          <source>Inserts an object that intercepts requests for the MBean server that arrive through this connector server. This object will be supplied as the &lt;code&gt;MBeanServer&lt;/code&gt; for any new connection created by this connector server. Existing connections are unaffected.</source>
          <target state="translated">このコネクタサーバーを介して到着するMBeanサーバーへのリクエストをインターセプトするオブジェクトを挿入します。このオブジェクトは、このコネクタサーバーによって作成された新しい接続の &lt;code&gt;MBeanServer&lt;/code&gt; として提供されます。既存の接続は影響を受けません。</target>
        </trans-unit>
        <trans-unit id="5fb4a923ae2fa62938d9f32b2e568e697e7e6004" translate="yes" xml:space="preserve">
          <source>Inserts an update into the document.</source>
          <target state="translated">ドキュメントに更新を挿入します。</target>
        </trans-unit>
        <trans-unit id="ffebc911c95f1fbc21f50a5329313bfaf5bb0bd4" translate="yes" xml:space="preserve">
          <source>Inserts content from the given stream which is expected to be in a format appropriate for this kind of content handler.</source>
          <target state="translated">与えられたストリームから、この種のコンテンツハンドラに適した形式でコンテンツを挿入します。</target>
        </trans-unit>
        <trans-unit id="dd3089ba1788abb2e54e5154fd258426feb5c595" translate="yes" xml:space="preserve">
          <source>Inserts content from the given stream, which will be treated as plain text.</source>
          <target state="translated">与えられたストリームからコンテンツを挿入します。</target>
        </trans-unit>
        <trans-unit id="e3022400dd0679a656b64414af40bb7c0c8fd426" translate="yes" xml:space="preserve">
          <source>Inserts content from the given stream.</source>
          <target state="translated">指定したストリームからコンテンツを挿入します。</target>
        </trans-unit>
        <trans-unit id="4077a0e7d9c6fd84864b9a4b56209622f216232e" translate="yes" xml:space="preserve">
          <source>Inserts content from the given stream. If &lt;code&gt;doc&lt;/code&gt; is an instance of HTMLDocument, this will read HTML 3.2 text. Inserting HTML into a non-empty document must be inside the body Element, if you do not insert into the body an exception will be thrown. When inserting into a non-empty document all tags outside of the body (head, title) will be dropped.</source>
          <target state="translated">指定されたストリームからコンテンツを挿入します。場合は &lt;code&gt;doc&lt;/code&gt; HTMLDocumentのインスタンスである、これはHTML 3.2テキストを読み込みます。空でないドキュメントへのHTMLの挿入は、body要素内にある必要があります。本文に挿入しない場合、例外がスローされます。空でないドキュメントに挿入すると、本文の外側にあるすべてのタグ（頭、タイトル）が削除されます。</target>
        </trans-unit>
        <trans-unit id="5f91a9981edc5d950d74b0710e782a893fca0654" translate="yes" xml:space="preserve">
          <source>Inserts new content.</source>
          <target state="translated">新しいコンテンツを挿入します。</target>
        </trans-unit>
        <trans-unit id="a88bf9390c814e990b8db903b8f3b79d18923e91" translate="yes" xml:space="preserve">
          <source>Inserts new elements in bulk.</source>
          <target state="translated">新しい要素を一括で挿入します。</target>
        </trans-unit>
        <trans-unit id="6524f81e8add8de9534ceb561ed4ceb5f1fb9817" translate="yes" xml:space="preserve">
          <source>Inserts new elements in bulk. This is how elements get created in the document. The parsing determines what structure is needed and creates the specification as a set of tokens that describe the edit while leaving the document free of a write-lock. This method can then be called in bursts by the reader to acquire a write-lock for a shorter duration (i.e. while the document is actually being altered).</source>
          <target state="translated">新しい要素を一括で挿入します。このようにしてドキュメント内に要素が作成されます。構文解析は、どのような構造が必要かを判断し、文書に書き込みロックがない状態で編集を記述するトークンのセットとして仕様を作成します。この方法は、より短い期間(つまり、文書が実際に変更されている間)の書き込みロックを取得するために、読者がバーストで呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="ec6b080c9658c66f32361b1f52585f953c3bd16d" translate="yes" xml:space="preserve">
          <source>Inserts new elements in bulk. This is useful to allow parsing with the document in an unlocked state and prepare an element structure modification. This method takes an array of tokens that describe how to update an element structure so the time within a write lock can be greatly reduced in an asynchronous update situation.</source>
          <target state="translated">新しい要素を一括で挿入します。これは、ロックされていない状態で文書を解析したり、要素構造の変更を準備したりするのに便利です。このメソッドは、要素構造を更新する方法を記述したトークンの配列を取り、非同期更新の状況で書き込みロック内の時間を大幅に短縮できるようにします。</target>
        </trans-unit>
        <trans-unit id="874ad02749deb4542d049a6cb1866555963b563e" translate="yes" xml:space="preserve">
          <source>Inserts some content into the document.</source>
          <target state="translated">ドキュメントに内容を挿入します。</target>
        </trans-unit>
        <trans-unit id="21375b218e79bcf11c16c5fd105fed479a20add5" translate="yes" xml:space="preserve">
          <source>Inserts some content into the document. Inserting content causes a write lock to be held while the actual changes are taking place, followed by notification to the observers on the thread that grabbed the write lock.</source>
          <target state="translated">ドキュメントにコンテンツを挿入します。コンテンツを挿入すると、実際の変更が行われている間は書き込みロックが保持され、その後、書き込みロックを取得したスレッドのオブザーバーに通知されます。</target>
        </trans-unit>
        <trans-unit id="d3c00716734c5d33772a48a8957ef2f6d2ed46bc" translate="yes" xml:space="preserve">
          <source>Inserts the HTML into the document.</source>
          <target state="translated">ドキュメントにHTMLを挿入します。</target>
        </trans-unit>
        <trans-unit id="f9cfa658ba17c6c8f9344ed3b739930ebe5fbd12" translate="yes" xml:space="preserve">
          <source>Inserts the HTML specified as a string after the end of the given element.</source>
          <target state="translated">文字列で指定したHTMLを、指定した要素の末尾に挿入します。</target>
        </trans-unit>
        <trans-unit id="f28c5a47570404dcf5bc5e452ff4045e029d95ba" translate="yes" xml:space="preserve">
          <source>Inserts the HTML specified as a string at the end of the element.</source>
          <target state="translated">要素の最後に文字列として指定されたHTMLを挿入します。</target>
        </trans-unit>
        <trans-unit id="a270eeb77c8f84678db0cd5ba566f93962aec92e" translate="yes" xml:space="preserve">
          <source>Inserts the HTML specified as a string at the start of the element.</source>
          <target state="translated">要素の先頭に文字列で指定したHTMLを挿入します。</target>
        </trans-unit>
        <trans-unit id="819510241ddc424cc30cdd2877c896f3c79608c3" translate="yes" xml:space="preserve">
          <source>Inserts the HTML specified as a string before the start of the given element.</source>
          <target state="translated">文字列として指定されたHTMLを、指定された要素の開始前に挿入します。</target>
        </trans-unit>
        <trans-unit id="1a6f58a6a9557e4764ea7b04a4ebbe121119f9e8" translate="yes" xml:space="preserve">
          <source>Inserts the attribute specified as an element at the position specified.</source>
          <target state="translated">要素として指定された属性を指定された位置に挿入します。</target>
        </trans-unit>
        <trans-unit id="ded5e9ffc1903923ce8bfc1640701d19c99b7dfa" translate="yes" xml:space="preserve">
          <source>Inserts the attribute specified as an element at the position specified. Elements with an index greater than or equal to the current position are shifted up. If the index is out of range (index &amp;lt; 0 || index &amp;gt; size()) a RuntimeOperationsException should be raised, wrapping the java.lang.IndexOutOfBoundsException thrown.</source>
          <target state="translated">要素として指定された属性を指定された位置に挿入します。現在の位置以上のインデックスを持つ要素は上に移動します。インデックスが範囲外の場合（index &amp;lt;0 || index&amp;gt; size（））、RuntimeOperationsExceptionが発生し、スローされたjava.lang.IndexOutOfBoundsExceptionがラップされます。</target>
        </trans-unit>
        <trans-unit id="908a5c3309befd5a27002975c4f54761454cf97d" translate="yes" xml:space="preserve">
          <source>Inserts the contents of the insert row into this &lt;code&gt;ResultSet&lt;/code&gt; object and into the database.</source>
          <target state="translated">挿入行の内容をこの &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトとデータベースに挿入します。</target>
        </trans-unit>
        <trans-unit id="428eb3db34200a9bde3e56f8e0b0f16bf8bea5bd" translate="yes" xml:space="preserve">
          <source>Inserts the contents of the insert row into this &lt;code&gt;ResultSet&lt;/code&gt; object and into the database. The cursor must be on the insert row when this method is called.</source>
          <target state="translated">挿入行の内容をこの &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトとデータベースに挿入します。このメソッドを呼び出すときは、カーソルが挿入行にある必要があります。</target>
        </trans-unit>
        <trans-unit id="33abdf7c18b7b21ee31de633764f4b6818ec9512" translate="yes" xml:space="preserve">
          <source>Inserts the item into this choice at the specified position.</source>
          <target state="translated">指定した位置に項目を挿入します。</target>
        </trans-unit>
        <trans-unit id="ce1e7da7259d5c288f52667774a5b89291a7c428" translate="yes" xml:space="preserve">
          <source>Inserts the item into this choice at the specified position. Existing items at an index greater than or equal to &lt;code&gt;index&lt;/code&gt; are shifted up by one to accommodate the new item. If &lt;code&gt;index&lt;/code&gt; is greater than or equal to the number of items in this choice, &lt;code&gt;item&lt;/code&gt; is added to the end of this choice.</source>
          <target state="translated">この選択肢の指定された位置にアイテムを挿入します。インデックスよりも大きいか等しい時、既存のアイテム &lt;code&gt;index&lt;/code&gt; 新しいアイテムを収容するために、1つによってシフトアップされます。 &lt;code&gt;index&lt;/code&gt; がこの選択肢のアイテム数以上の場合、 &lt;code&gt;item&lt;/code&gt; はこの選択肢の最後に追加されます。</target>
        </trans-unit>
        <trans-unit id="b61874449a00d9f0dbf20ea203820ea92e8cbb99" translate="yes" xml:space="preserve">
          <source>Inserts the node &lt;code&gt;newChild&lt;/code&gt; before the existing child node &lt;code&gt;refChild&lt;/code&gt;.</source>
          <target state="translated">既存の子ノード &lt;code&gt;refChild&lt;/code&gt; の前にノード &lt;code&gt;newChild&lt;/code&gt; を挿入します。</target>
        </trans-unit>
        <trans-unit id="09b06396c4fc43ce4b04b35072fb227d29cc1fff" translate="yes" xml:space="preserve">
          <source>Inserts the node &lt;code&gt;newChild&lt;/code&gt; before the existing child node &lt;code&gt;refChild&lt;/code&gt;. If &lt;code&gt;refChild&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, insert &lt;code&gt;newChild&lt;/code&gt; at the end of the list of children.</source>
          <target state="translated">ノード &lt;code&gt;newChild&lt;/code&gt; を既存の子ノード &lt;code&gt;refChild&lt;/code&gt; の前に挿入します。 &lt;code&gt;refChild&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、子のリストの最後に &lt;code&gt;newChild&lt;/code&gt; を挿入します。</target>
        </trans-unit>
        <trans-unit id="cbb5b98e748e43490285bc391c960896a80a5817" translate="yes" xml:space="preserve">
          <source>Inserts the role specified as an element at the position specified.</source>
          <target state="translated">要素として指定したロールを指定した位置に挿入します。</target>
        </trans-unit>
        <trans-unit id="a743f0b71b380f53a469030e9f4fcd552a80ac21" translate="yes" xml:space="preserve">
          <source>Inserts the role specified as an element at the position specified. Elements with an index greater than or equal to the current position are shifted up.</source>
          <target state="translated">要素として指定されたロールを指定された位置に挿入します。現在の位置以上のインデックスを持つ要素は、上にシフトされます。</target>
        </trans-unit>
        <trans-unit id="c9cf21699de4c9feda77212d53578d85e30caa46" translate="yes" xml:space="preserve">
          <source>Inserts the specified &lt;code&gt;CharSequence&lt;/code&gt; into this sequence.</source>
          <target state="translated">指定された &lt;code&gt;CharSequence&lt;/code&gt; をこのシーケンスに挿入します。</target>
        </trans-unit>
        <trans-unit id="7bb7fe85698c5649aa0773f54da7215c13a28168" translate="yes" xml:space="preserve">
          <source>Inserts the specified &lt;code&gt;JMenuitem&lt;/code&gt; at a given position.</source>
          <target state="translated">指定された &lt;code&gt;JMenuitem&lt;/code&gt; を指定された位置に挿入します。</target>
        </trans-unit>
        <trans-unit id="d0825a4f2fff2c35bbb1d7f2199e8be4e8a80b1e" translate="yes" xml:space="preserve">
          <source>Inserts the specified component into the menu at a given position.</source>
          <target state="translated">指定された位置に指定されたコンポーネントをメニューに挿入します。</target>
        </trans-unit>
        <trans-unit id="35dffd69fb9f16121f7aa6d761d692ffd0b601aa" translate="yes" xml:space="preserve">
          <source>Inserts the specified element as a component in this list at the specified &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">指定された要素を、このリストの指定された &lt;code&gt;index&lt;/code&gt; コンポーネントとして挿入します。</target>
        </trans-unit>
        <trans-unit id="1665573419edec7be8cf7ab4f574b3adccd3e542" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the beginning of this list.</source>
          <target state="translated">指定された要素をリストの先頭に挿入します。</target>
        </trans-unit>
        <trans-unit id="f010c4f2c01808e7e1f687315579970728f4b7e1" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if no space is currently available.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、この両端キューの最後に指定された要素を挿入します。成功すると &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c18e8792a0fa86c86075efbe5f928a80f26f3562" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, this method is generally preferable to the &lt;a href=&quot;#addLast(E)&quot;&gt;&lt;code&gt;addLast&lt;/code&gt;&lt;/a&gt; method, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、この両端キューの最後に指定された要素を挿入します。成功すると &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;false&lt;/code&gt; を返します。容量が制限された両端キューを使用する場合、このメソッドは、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;#addLast(E)&quot;&gt; &lt;code&gt;addLast&lt;/code&gt; &lt;/a&gt;メソッドよりも一般的に推奨されます。</target>
        </trans-unit>
        <trans-unit id="c28ace081056eabbc337dc441d51670051b81a5f" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, this method is generally preferable to the &lt;a href=&quot;blockingdeque#addLast(E)&quot;&gt;&lt;code&gt;addLast&lt;/code&gt;&lt;/a&gt; method, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、この両端キューの最後に指定された要素を挿入します。成功すると &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;false&lt;/code&gt; を返します。容量が制限された両端キューを使用する場合、このメソッドは、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;blockingdeque#addLast(E)&quot;&gt; &lt;code&gt;addLast&lt;/code&gt; &lt;/a&gt;メソッドよりも一般的に推奨されます。</target>
        </trans-unit>
        <trans-unit id="0fc3693dfaa9e11013a6dd188cce77c910c5ef27" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, this method is generally preferable to the &lt;a href=&quot;blockingdeque#addLast-E-&quot;&gt;&lt;code&gt;addLast&lt;/code&gt;&lt;/a&gt; method, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反することなくすぐに指定できる場合は、この両端キューの最後に指定された要素を挿入します。成功し &lt;code&gt;false&lt;/code&gt; 場合は &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合はfalseを返します。容量制限のある両端キューを使用する場合、例外をスローするだけで要素の挿入に失敗する可能性のある&lt;a href=&quot;blockingdeque#addLast-E-&quot;&gt; &lt;code&gt;addLast&lt;/code&gt; &lt;/a&gt;メソッドよりも、このメソッドの方が一般的に推奨されます。</target>
        </trans-unit>
        <trans-unit id="730d496d719fd21d5a75e3ccd551d084aa918e74" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、この両端キューの最後に指定された要素を挿入し、現在使用可能なスペースがない場合は &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="1718c23bc366e3aed52e445965097b32f80fbeb0" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use &lt;a href=&quot;#offerLast(E)&quot;&gt;&lt;code&gt;offerLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、この両端キューの最後に指定された要素を挿入し、現在使用可能なスペースがない場合は &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。容量が制限された両端キューを使用する場合は、通常、&lt;a href=&quot;#offerLast(E)&quot;&gt; &lt;code&gt;offerLast&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="3c0d079cffa6f6527f2cc4fa6555b4b40d0f346c" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use &lt;a href=&quot;blockingdeque#offerLast(E)&quot;&gt;&lt;code&gt;offerLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、この両端キューの最後に指定された要素を挿入し、現在使用可能なスペースがない場合は &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。容量が制限された両端キューを使用する場合は、通常、&lt;a href=&quot;blockingdeque#offerLast(E)&quot;&gt; &lt;code&gt;offerLast&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f44144ed615ee14c6c97a24475789c8b6a906d7e" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use &lt;a href=&quot;blockingdeque#offerLast-E-&quot;&gt;&lt;code&gt;offerLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">容量制限に違反せずにすぐに指定できる場合、指定された要素をこの両端キューの最後に挿入します。現在使用可能なスペースがない場合は、 &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。容量制限のある両端キューを使用する場合は、通常、&lt;a href=&quot;blockingdeque#offerLast-E-&quot;&gt; &lt;code&gt;offerLast&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="80dc11d79a3e8b4dd59f2e9d2b7a1162defc1003" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use method &lt;a href=&quot;#offerLast(E)&quot;&gt;&lt;code&gt;offerLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、この両端キューの最後に指定された要素を挿入し、現在使用可能なスペースがない場合は &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。容量制限のある両端キューを使用する場合は、通常、&lt;a href=&quot;#offerLast(E)&quot;&gt; &lt;code&gt;offerLast(E)&lt;/code&gt; &lt;/a&gt;メソッドを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ecc866e128caa0b09d352079e0d5e5bf982296de" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use method &lt;a href=&quot;deque#offerLast-E-&quot;&gt;&lt;code&gt;offerLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">容量制限に違反せずにすぐに指定できる場合、指定された要素をこの両端キューの最後に挿入します。現在使用可能なスペースがない場合は、 &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。容量制限のある両端キューを使用する場合、通常は&lt;a href=&quot;deque#offerLast-E-&quot;&gt; &lt;code&gt;offerLast(E)&lt;/code&gt; &lt;/a&gt;メソッドを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="1861a68db6dbea8411007910ba76e0877d1f2a17" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque unless it would violate capacity restrictions.</source>
          <target state="translated">容量制限に抵触しない限り、このデクの最後に指定された要素を挿入する。</target>
        </trans-unit>
        <trans-unit id="a7982f2b408a1783b10223fc8a7113d0223298c8" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque unless it would violate capacity restrictions. When using a capacity-restricted deque, it is generally preferable to use method &lt;a href=&quot;#offer(E)&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">容量制限に違反しない限り、指定された要素をこの両端キューの最後に挿入します。容量制限のある両端キューを使用する場合は、通常、メソッド&lt;a href=&quot;#offer(E)&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8cec66d7dcb0a42f8bdec7833083887e6869e14e" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque unless it would violate capacity restrictions. When using a capacity-restricted deque, it is generally preferable to use method &lt;a href=&quot;linkedblockingdeque#offer-E-&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">容量制限に違反しない限り、この両端キューの最後に指定された要素を挿入します。容量制限のある両端キューを使用する場合は、通常、メソッド&lt;a href=&quot;linkedblockingdeque#offer-E-&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8f67c9fe114cd847bf3427dac60eb547607bea8c" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque unless it would violate capacity restrictions. When using a capacity-restricted deque, this method is generally preferable to the &lt;a href=&quot;#addLast(E)&quot;&gt;&lt;code&gt;addLast(E)&lt;/code&gt;&lt;/a&gt; method, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反しない限り、指定された要素をこの両端キューの最後に挿入します。容量が制限された両端キューを使用する場合、このメソッドは、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;#addLast(E)&quot;&gt; &lt;code&gt;addLast(E)&lt;/code&gt; &lt;/a&gt;メソッドよりも一般的に推奨されます。</target>
        </trans-unit>
        <trans-unit id="8f29a499f739fa69dfe0a66cb3826eec7fb184b1" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque unless it would violate capacity restrictions. When using a capacity-restricted deque, this method is generally preferable to the &lt;a href=&quot;deque#addLast-E-&quot;&gt;&lt;code&gt;addLast(E)&lt;/code&gt;&lt;/a&gt; method, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反しない限り、この両端キューの最後に指定された要素を挿入します。容量制限のある両端キューを使用する場合、このメソッドは通常、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;deque#addLast-E-&quot;&gt; &lt;code&gt;addLast(E)&lt;/code&gt; &lt;/a&gt;メソッドよりも推奨されます。</target>
        </trans-unit>
        <trans-unit id="c6891aa5cdbca6e6532c9635408243815dcb1188" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque, waiting if necessary for space to become available.</source>
          <target state="translated">指定された要素を deque の最後に挿入し、必要に応じてスペースが空くのを待ちます。</target>
        </trans-unit>
        <trans-unit id="f8ae693b095e54357fe35633829c4e7bc89fcff1" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque, waiting up to the specified wait time if necessary for space to become available.</source>
          <target state="translated">指定された要素を deque の最後に挿入し、必要であれば指定された待ち時間まで待ちます。</target>
        </trans-unit>
        <trans-unit id="942046956c832edde74946773ddc12c0aec6aef9" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque.</source>
          <target state="translated">指定された要素をデクの最後に挿入します。</target>
        </trans-unit>
        <trans-unit id="454de3b643a6985cfe0a7a85a2b61d5b7c61d244" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque. As the deque is unbounded, this method will never return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">この両端キューの最後に指定された要素を挿入します。両端キューには制限がないため、このメソッドは &lt;code&gt;false&lt;/code&gt; を返しません。</target>
        </trans-unit>
        <trans-unit id="3fb5f879c9e5881d1b4130731ad64a72ed7aac92" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this deque. As the deque is unbounded, this method will never throw &lt;a href=&quot;../../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この両端キューの最後に指定された要素を挿入します。両端キューには制限がないため、このメソッドは&lt;a href=&quot;../../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; を&lt;/a&gt;スローしません。</target>
        </trans-unit>
        <trans-unit id="570b3ee1729c218d315e5564519b83472d2cf5ac" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the end of this list.</source>
          <target state="translated">指定された要素をリストの最後に挿入します。</target>
        </trans-unit>
        <trans-unit id="33593736b44968ad71a565a07232b9e7cf8fe6e5" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if no space is currently available.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、指定された要素をこの両端キューの前に挿入します。成功すると &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3817e2432a79798068603fe8658f1f9a260bec31" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, this method is generally preferable to the &lt;a href=&quot;#addFirst(E)&quot;&gt;&lt;code&gt;addFirst&lt;/code&gt;&lt;/a&gt; method, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、指定された要素をこの両端キューの前に挿入します。成功すると &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;false&lt;/code&gt; を返します。容量が制限された両端キューを使用する場合、このメソッドは、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;#addFirst(E)&quot;&gt; &lt;code&gt;addFirst&lt;/code&gt; &lt;/a&gt;メソッドよりも一般的に推奨されます。</target>
        </trans-unit>
        <trans-unit id="d4592fd8b855b2d2f4ac7e6a3299a5e5006651fb" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, this method is generally preferable to the &lt;a href=&quot;blockingdeque#addFirst(E)&quot;&gt;&lt;code&gt;addFirst&lt;/code&gt;&lt;/a&gt; method, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、指定された要素をこの両端キューの前に挿入します。成功すると &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;false&lt;/code&gt; を返します。容量が制限された両端キューを使用する場合、このメソッドは、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;blockingdeque#addFirst(E)&quot;&gt; &lt;code&gt;addFirst&lt;/code&gt; &lt;/a&gt;メソッドよりも一般的に推奨されます。</target>
        </trans-unit>
        <trans-unit id="03f1ca5b7602eb3b055d3a726edd2c615e8194c6" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, this method is generally preferable to the &lt;a href=&quot;blockingdeque#addFirst-E-&quot;&gt;&lt;code&gt;addFirst&lt;/code&gt;&lt;/a&gt; method, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反することなくすぐに指定できる場合は、指定された要素をこの両端キューの先頭に挿入します。成功し &lt;code&gt;false&lt;/code&gt; 場合は &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合はfalseを返します。容量制限のある両端キューを使用する場合、このメソッドは通常、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;blockingdeque#addFirst-E-&quot;&gt; &lt;code&gt;addFirst&lt;/code&gt; &lt;/a&gt;メソッドよりも推奨されます。</target>
        </trans-unit>
        <trans-unit id="b5ae90c00244cc69281a8beb28a244e63cfc7f4e" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、指定された要素をこの両端キューの前に挿入し、現在使用可能なスペースがない場合は &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="60a169c977d820032387ef327932614298bd60cc" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use &lt;a href=&quot;#offerFirst(E)&quot;&gt;&lt;code&gt;offerFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、指定された要素をこの両端キューの前に挿入し、現在使用可能なスペースがない場合は &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。容量制限のある両端キューを使用する場合は、通常、&lt;a href=&quot;#offerFirst(E)&quot;&gt; &lt;code&gt;offerFirst&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a5bf78c31f002e8b381a62edc0b9bd00ab4e3694" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use &lt;a href=&quot;blockingdeque#offerFirst(E)&quot;&gt;&lt;code&gt;offerFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、指定された要素をこの両端キューの前に挿入し、現在使用可能なスペースがない場合は &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。容量制限のある両端キューを使用する場合は、通常、&lt;a href=&quot;blockingdeque#offerFirst(E)&quot;&gt; &lt;code&gt;offerFirst&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7f978f84f6edc59480bd8f34d6a5a723a1625415" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use &lt;a href=&quot;blockingdeque#offerFirst-E-&quot;&gt;&lt;code&gt;offerFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">容量制限に違反せずにすぐに指定できる場合は、指定された要素をこの両端キューの前に挿入します。現在使用可能なスペースがない場合は、 &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。容量制限のある両端キューを使用する場合は、通常、&lt;a href=&quot;blockingdeque#offerFirst-E-&quot;&gt; &lt;code&gt;offerFirst&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="70eef6688499f543533f4cbcc71dbc01a2d7513c" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use method &lt;a href=&quot;#offerFirst(E)&quot;&gt;&lt;code&gt;offerFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、指定された要素をこの両端キューの前に挿入し、現在使用可能なスペースがない場合は &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。容量が制限された両端キューを使用する場合は、通常、&lt;a href=&quot;#offerFirst(E)&quot;&gt; &lt;code&gt;offerFirst(E)&lt;/code&gt; &lt;/a&gt;メソッドを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a7e887c2e819569c9a4f8d80e1a9da0ed731ee40" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque if it is possible to do so immediately without violating capacity restrictions, throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use method &lt;a href=&quot;deque#offerFirst-E-&quot;&gt;&lt;code&gt;offerFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">容量制限に違反せずにすぐに指定できる場合は、指定された要素をこの両端キューの前に挿入します。現在使用可能なスペースがない場合は、 &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。容量制限のある両端キューを使用する場合、通常は&lt;a href=&quot;deque#offerFirst-E-&quot;&gt; &lt;code&gt;offerFirst(E)&lt;/code&gt; &lt;/a&gt;メソッドを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c5323b8f43415e4c244a01d77ecc5fc7b7567b9d" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque unless it would violate capacity restrictions.</source>
          <target state="translated">容量制限に抵触しない限り、このデクの先頭に指定された要素を挿入する。</target>
        </trans-unit>
        <trans-unit id="7d1ad134882eb920d60051d073fa397b1a83346f" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque unless it would violate capacity restrictions. When using a capacity-restricted deque, this method is generally preferable to the &lt;a href=&quot;#addFirst(E)&quot;&gt;&lt;code&gt;addFirst(E)&lt;/code&gt;&lt;/a&gt; method, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反しない限り、指定された要素をこの両端キューの前に挿入します。容量が制限された両端キューを使用する場合、このメソッドは、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;#addFirst(E)&quot;&gt; &lt;code&gt;addFirst(E)&lt;/code&gt; &lt;/a&gt;メソッドよりも一般的に推奨されます。</target>
        </trans-unit>
        <trans-unit id="2d419fe60c2299360f459060310f4cf81c7c91bb" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque unless it would violate capacity restrictions. When using a capacity-restricted deque, this method is generally preferable to the &lt;a href=&quot;deque#addFirst-E-&quot;&gt;&lt;code&gt;addFirst(E)&lt;/code&gt;&lt;/a&gt; method, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反しない限り、指定された要素を両端キューの先頭に挿入します。容量制限のある両端キューを使用する場合、このメソッドは通常、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;deque#addFirst-E-&quot;&gt; &lt;code&gt;addFirst(E)&lt;/code&gt; &lt;/a&gt;メソッドよりも推奨されます。</target>
        </trans-unit>
        <trans-unit id="b89e95f6d29d280c0092b9d756f9ddf09c6643c0" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque, waiting if necessary for space to become available.</source>
          <target state="translated">指定された要素をこのデクの先頭に挿入し、必要に応じてスペースが空くのを待ちます。</target>
        </trans-unit>
        <trans-unit id="a4a641198d6514ab1114739defb60878ba0cbf5a" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque, waiting up to the specified wait time if necessary for space to become available.</source>
          <target state="translated">指定された要素をこのデクの先頭に挿入し、必要に応じて指定された待ち時間まで待ちます。</target>
        </trans-unit>
        <trans-unit id="652877f7ef32125e2eb3e2abb4d2e8da8fd070f3" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque.</source>
          <target state="translated">指定された要素をデクの先頭に挿入します。</target>
        </trans-unit>
        <trans-unit id="dcc6f4a2da821799a0b0103efdd4f25bfbc8e4a9" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque. As the deque is unbounded, this method will never return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された要素をこの両端キューの前に挿入します。両端キューには制限がないため、このメソッドは &lt;code&gt;false&lt;/code&gt; を返しません。</target>
        </trans-unit>
        <trans-unit id="7dd2e24fdce69da07fc5638ca8035e85cb402ade" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this deque. As the deque is unbounded, this method will never throw &lt;a href=&quot;../../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された要素をこの両端キューの前に挿入します。両端キューには制限がないため、このメソッドは&lt;a href=&quot;../../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; を&lt;/a&gt;スローしません。</target>
        </trans-unit>
        <trans-unit id="9369cb27b5d95bc991be76f3013c8c95718799dd" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the front of this list.</source>
          <target state="translated">指定された要素をリストの先頭に挿入します。</target>
        </trans-unit>
        <trans-unit id="47f3ffafd5f0c5f210a8860e386454e6bd8c141f" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the specified position in this Vector.</source>
          <target state="translated">このベクターの指定された位置に指定された要素を挿入します。</target>
        </trans-unit>
        <trans-unit id="1779527e2f2ff3c76db95de68b9fe09574221e9d" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the specified position in this Vector. Shifts the element currently at that position (if any) and any subsequent elements to the right (adds one to their indices).</source>
          <target state="translated">指定された要素をこのベクターの指定された位置に挿入します。現在その位置にある要素(ある場合)とそれ以降の要素を右に移動します(インデックスに1つ追加)。</target>
        </trans-unit>
        <trans-unit id="f40bf23453dd682df42f04c68e9414f0f4c343c7" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the specified position in this list (optional operation).</source>
          <target state="translated">指定された要素をリストの指定された位置に挿入します(任意の操作)。</target>
        </trans-unit>
        <trans-unit id="2c6ad4568b9d411ba3423ea790a245fc454b7e15" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the specified position in this list (optional operation). Shifts the element currently at that position (if any) and any subsequent elements to the right (adds one to their indices).</source>
          <target state="translated">このリストの指定された位置に指定された要素を挿入します(任意の操作)。現在その位置にある要素(もしあれば)とそれ以降の要素を右に移動します(それらのインデックスに1つ追加します)。</target>
        </trans-unit>
        <trans-unit id="53e0227d727eb686a5c81fdf18d28dc619a37287" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the specified position in this list.</source>
          <target state="translated">指定された要素をリストの指定された位置に挿入します。</target>
        </trans-unit>
        <trans-unit id="8fd7bd3e3e026a8ed2eef6638b8b839de6696e5c" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the specified position in this list. Shifts the element currently at that position (if any) and any subsequent elements to the right (adds one to their indices).</source>
          <target state="translated">このリストの指定された位置に指定された要素を挿入します。現在その位置にある要素(もしあれば)とそれ以降の要素を右に移動します(それらのインデックスに1つ追加します)。</target>
        </trans-unit>
        <trans-unit id="bbe0a7f18002476444b870c823fc7512856e31c2" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this deque.</source>
          <target state="translated">指定された要素を deque の末尾に挿入します。</target>
        </trans-unit>
        <trans-unit id="8100f45ba942c6967c7beca9f68d06f56a196bbd" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this deque. As the deque is unbounded, this method will never return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された要素をこの両端キューの末尾に挿入します。両端キューには制限がないため、このメソッドは &lt;code&gt;false&lt;/code&gt; を返しません。</target>
        </trans-unit>
        <trans-unit id="ac08477f5f3d314c159296516b1171077133e14d" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this deque. As the deque is unbounded, this method will never throw &lt;a href=&quot;../../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt; or return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された要素をこの両端キューの末尾に挿入します。両端キューが無制限であるため、このメソッドは&lt;a href=&quot;../../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; を&lt;/a&gt;スローしたり、 &lt;code&gt;false&lt;/code&gt; を返したりすることはありません。</target>
        </trans-unit>
        <trans-unit id="ded9aec47f6309badecf23bf9575765f53211ce3" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this queue if it is possible to do so immediately without exceeding the queue's capacity, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if this queue is full.</source>
          <target state="translated">キューの容量を超えずにすぐに実行できる場合は、指定された要素をこのキューの末尾に挿入します。成功すると &lt;code&gt;true&lt;/code&gt; を返し、このキューがいっぱいの場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8c3e3ac154c82ab88106efad214cd43384e68afd" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this queue if it is possible to do so immediately without exceeding the queue's capacity, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if this queue is full. This method is generally preferable to method &lt;a href=&quot;#add(E)&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">キューの容量を超えずにすぐに実行できる場合は、指定された要素をこのキューの末尾に挿入します。成功すると &lt;code&gt;true&lt;/code&gt; を返し、このキューがいっぱいの場合は &lt;code&gt;false&lt;/code&gt; を返します。このメソッドは、例外をスローするだけで要素の挿入に失敗する可能性があるメソッド&lt;a href=&quot;#add(E)&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;よりも一般的に適しています。</target>
        </trans-unit>
        <trans-unit id="2b744eb8fa25b7484d86014be32eaf79167f7ebe" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this queue if it is possible to do so immediately without exceeding the queue's capacity, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if this queue is full. This method is generally preferable to method &lt;a href=&quot;arrayblockingqueue#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">キューの容量を超えずにすぐに指定できる場合は、指定された要素をこのキューの末尾に挿入します。成功し &lt;code&gt;false&lt;/code&gt; 場合は &lt;code&gt;true&lt;/code&gt; を返し、このキューがいっぱいの場合はfalseを返します。このメソッドは通常、例外をスローすることによってのみ要素の挿入に失敗する可能性があるメソッド&lt;a href=&quot;arrayblockingqueue#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;よりも推奨されます。</target>
        </trans-unit>
        <trans-unit id="d85455f1f8630f62159c9d4a26d19508020688ab" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this queue if it is possible to do so immediately without exceeding the queue's capacity, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if this queue is full. When using a capacity-restricted queue, this method is generally preferable to method &lt;a href=&quot;blockingqueue#add(E)&quot;&gt;&lt;code&gt;add&lt;/code&gt;&lt;/a&gt;, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">キューの容量を超えずにすぐに実行できる場合は、指定された要素をこのキューの末尾に挿入します。成功すると &lt;code&gt;true&lt;/code&gt; を返し、このキューがいっぱいの場合は &lt;code&gt;false&lt;/code&gt; を返します。容量が制限されたキューを使用する場合、このメソッドは、例外をスローするだけで要素の挿入に失敗する可能性があるメソッド&lt;a href=&quot;blockingqueue#add(E)&quot;&gt; &lt;code&gt;add&lt;/code&gt; &lt;/a&gt;よりも一般的に推奨されます。</target>
        </trans-unit>
        <trans-unit id="c3db4e11bc4dbd1042a169699e9cc6e7fa5ca99d" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this queue if it is possible to do so immediately without exceeding the queue's capacity, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if this queue is full. When using a capacity-restricted queue, this method is generally preferable to method &lt;a href=&quot;blockingqueue#add-E-&quot;&gt;&lt;code&gt;add&lt;/code&gt;&lt;/a&gt;, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">キューの容量を超えずにすぐに指定できる場合は、指定された要素をこのキューの末尾に挿入します。成功し &lt;code&gt;false&lt;/code&gt; 場合は &lt;code&gt;true&lt;/code&gt; を返し、このキューがいっぱいの場合はfalseを返します。容量制限のあるキューを使用する場合、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;blockingqueue#add-E-&quot;&gt; &lt;code&gt;add&lt;/code&gt; &lt;/a&gt;メソッドよりも、このメソッドの方が一般的に推奨されます。</target>
        </trans-unit>
        <trans-unit id="89700c798f0bf2ecfff47c0773f0d3f7de72fe45" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this queue if it is possible to do so immediately without exceeding the queue's capacity, returning &lt;code&gt;true&lt;/code&gt; upon success and throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if this queue is full.</source>
          <target state="translated">キューの容量を超えずにすぐに指定可能な要素をこのキューの末尾に挿入します。成功すると &lt;code&gt;true&lt;/code&gt; を返し、このキューがいっぱいの場合は &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="853fd51105bd553039cea011b2df33d940b814d7" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this queue, waiting for space to become available if the queue is full.</source>
          <target state="translated">指定された要素をこのキューの最後尾に挿入し、キューが一杯になった場合に利用可能なスペースが得られるのを待ちます。</target>
        </trans-unit>
        <trans-unit id="92e6342618012916d1f0b445bb92f766979fee39" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this queue, waiting if necessary for space to become available.</source>
          <target state="translated">指定された要素をこのキューの最後尾に挿入し、必要に応じてスペースが利用可能になるのを待ちます。</target>
        </trans-unit>
        <trans-unit id="e04db1d97e29b2b49883724d853189b903943a0e" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this queue, waiting if necessary up to the specified wait time for space to become available.</source>
          <target state="translated">指定された要素をこのキューの最後尾に挿入し、必要に応じて指定された待ち時間まで待機します。</target>
        </trans-unit>
        <trans-unit id="620651633121ea176593cc232da1a0524d3db99e" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this queue, waiting up to the specified wait time for space to become available if the queue is full.</source>
          <target state="translated">このキューの最後尾に指定された要素を挿入し、キューが満杯の場合は指定された待ち時間まで待機します。</target>
        </trans-unit>
        <trans-unit id="4183b4ef5331c496cf8d19689d9aa4244ffc2ff0" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this queue.</source>
          <target state="translated">指定された要素をキューの末尾に挿入します。</target>
        </trans-unit>
        <trans-unit id="aba2a62bf33b24a4eb14902f4c579e522a698742" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this queue. As the queue is unbounded, this method will never block or return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された要素をこのキューの末尾に挿入します。キューには制限がないため、このメソッドがブロックしたり、 &lt;code&gt;false&lt;/code&gt; を返したりすることはありません。</target>
        </trans-unit>
        <trans-unit id="e84cfb6b105e2b1d6d5d01dcd8648cd08f53232b" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this queue. As the queue is unbounded, this method will never block.</source>
          <target state="translated">指定された要素をキューの末尾に挿入します。キューは束縛されていないので、このメソッドは決してブロックされません。</target>
        </trans-unit>
        <trans-unit id="8f466e3c5ed13004678eeefc33d88b763c0c3b67" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this queue. As the queue is unbounded, this method will never return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された要素をこのキューの末尾に挿入します。キューは無制限であるため、このメソッドは &lt;code&gt;false&lt;/code&gt; を返しません。</target>
        </trans-unit>
        <trans-unit id="1e8ee5a5c9465873811918654575d6f9602d2880" translate="yes" xml:space="preserve">
          <source>Inserts the specified element at the tail of this queue. As the queue is unbounded, this method will never throw &lt;a href=&quot;../../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt; or return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された要素をこのキューの末尾に挿入します。キューは無制限なので、このメソッドは&lt;a href=&quot;../../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; を&lt;/a&gt;スローしたり、 &lt;code&gt;false&lt;/code&gt; を返したりすることはありません。</target>
        </trans-unit>
        <trans-unit id="12d2343a5f434a7d868c2a42f93030fa9896bc01" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into the list (optional operation).</source>
          <target state="translated">指定した要素をリストに挿入します(任意の操作)。</target>
        </trans-unit>
        <trans-unit id="b19461667c2e1052534c3f135f9095636e9c2d87" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into the list (optional operation). The element is inserted immediately before the element that would be returned by &lt;a href=&quot;#next()&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt;, if any, and after the element that would be returned by &lt;a href=&quot;#previous()&quot;&gt;&lt;code&gt;previous()&lt;/code&gt;&lt;/a&gt;, if any. (If the list contains no elements, the new element becomes the sole element on the list.) The new element is inserted before the implicit cursor: a subsequent call to &lt;code&gt;next&lt;/code&gt; would be unaffected, and a subsequent call to &lt;code&gt;previous&lt;/code&gt; would return the new element. (This call increases by one the value that would be returned by a call to &lt;code&gt;nextIndex&lt;/code&gt; or &lt;code&gt;previousIndex&lt;/code&gt;.)</source>
          <target state="translated">指定した要素をリストに挿入します（オプションの操作）。要素は、&lt;a href=&quot;#next()&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt;によって返される要素がある場合はその直前、&lt;a href=&quot;#previous()&quot;&gt; &lt;code&gt;previous()&lt;/code&gt; &lt;/a&gt;によって返される要素がある場合はその後に挿入されます。後続の呼び出し：新しい要素は、暗黙のカーソルの前に挿入されている（。リストに要素がない場合は、新しい要素がリストの唯一の要素になります） &lt;code&gt;next&lt;/code&gt; 影響されない、との後続の呼び出し &lt;code&gt;previous&lt;/code&gt; 新しい要素を返します。 （この呼び出しは、 &lt;code&gt;nextIndex&lt;/code&gt; または &lt;code&gt;previousIndex&lt;/code&gt; の呼び出しによって返される値を1つ増やします。）</target>
        </trans-unit>
        <trans-unit id="224ee6483c7b251b46012b9628e4b4738e5456fe" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into the list (optional operation). The element is inserted immediately before the element that would be returned by &lt;a href=&quot;listiterator#next--&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt;, if any, and after the element that would be returned by &lt;a href=&quot;listiterator#previous--&quot;&gt;&lt;code&gt;previous()&lt;/code&gt;&lt;/a&gt;, if any. (If the list contains no elements, the new element becomes the sole element on the list.) The new element is inserted before the implicit cursor: a subsequent call to &lt;code&gt;next&lt;/code&gt; would be unaffected, and a subsequent call to &lt;code&gt;previous&lt;/code&gt; would return the new element. (This call increases by one the value that would be returned by a call to &lt;code&gt;nextIndex&lt;/code&gt; or &lt;code&gt;previousIndex&lt;/code&gt;.)</source>
          <target state="translated">指定された要素をリストに挿入します（オプションの操作）。要素は、&lt;a href=&quot;listiterator#next--&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt;によって返される要素がある場合はその直前、および&lt;a href=&quot;listiterator#previous--&quot;&gt; &lt;code&gt;previous()&lt;/code&gt; &lt;/a&gt;によって返される要素がある場合はその直後に挿入されます。 （リストに要素が含まれていない場合、新しい要素はリストの唯一の要素になります。）新しい要素は暗黙カーソルの前に挿入されます。 &lt;code&gt;next&lt;/code&gt; 呼び出しは影響を受けず、後続の &lt;code&gt;previous&lt;/code&gt; の呼び出しは新しい要素を返します。 （この呼び出しは、 &lt;code&gt;nextIndex&lt;/code&gt; または &lt;code&gt;previousIndex&lt;/code&gt; の呼び出しによって返される値を1つ増やします。）</target>
        </trans-unit>
        <trans-unit id="4b8517c70807511b83621981b6bc36cf1d45040c" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if no space is currently available.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、指定された要素をこの両端キューで表されるキューに挿入します（つまり、この両端キューの末尾に挿入します）。成功すると &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5f5f21749fa4fb330475016f6c917a0432858549" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, this method is generally preferable to the &lt;a href=&quot;#add(E)&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt; method, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、指定された要素をこの両端キューで表されるキューに挿入します（つまり、この両端キューの末尾に挿入します）。成功すると &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;false&lt;/code&gt; を返します。容量が制限された両端キューを使用する場合、このメソッドは、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;#add(E)&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;メソッドよりも一般的に推奨されます。</target>
        </trans-unit>
        <trans-unit id="76d10a1e1ad420a7356ce4134b3ab36157c3c4fb" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, this method is generally preferable to the &lt;a href=&quot;blockingdeque#add(E)&quot;&gt;&lt;code&gt;BlockingDeque.add(E)&lt;/code&gt;&lt;/a&gt; method, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、指定された要素をこの両端キューで表されるキューに挿入します（つまり、この両端キューの末尾に挿入します）。成功すると &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;false&lt;/code&gt; を返します。容量が制限された両端キューを使用する場合、このメソッドは、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;blockingdeque#add(E)&quot;&gt; &lt;code&gt;BlockingDeque.add(E)&lt;/code&gt; &lt;/a&gt;メソッドよりも一般的に推奨されます。</target>
        </trans-unit>
        <trans-unit id="52ad6760ead2a8cee1bb5b29867e79e026f2fecc" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, this method is generally preferable to the &lt;a href=&quot;blockingdeque#add-E-&quot;&gt;&lt;code&gt;BlockingDeque.add(E)&lt;/code&gt;&lt;/a&gt; method, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反することなくすぐに実行できる場合は、指定された要素をこの両端キューで表されるキューに（つまり、この両端キューの末尾に）挿入します。成功し &lt;code&gt;false&lt;/code&gt; 場合は &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合はfalseを返します。容量制限のある両端キューを使用する場合、このメソッドは通常、例外をスローするだけで要素の挿入に失敗する&lt;a href=&quot;blockingdeque#add-E-&quot;&gt; &lt;code&gt;BlockingDeque.add(E)&lt;/code&gt; &lt;/a&gt;メソッドよりも推奨されます。</target>
        </trans-unit>
        <trans-unit id="20313849d03023723bb6db136651f663ffb7e164" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, this method is generally preferable to the &lt;a href=&quot;blockingdeque#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt; method, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反することなくすぐに実行できる場合は、指定された要素をこの両端キューで表されるキューに（つまり、この両端キューの末尾に）挿入します。成功し &lt;code&gt;false&lt;/code&gt; 場合は &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合はfalseを返します。容量制限のある両端キューを使用する場合、このメソッドは通常、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;blockingdeque#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;メソッドよりも推奨されます。</target>
        </trans-unit>
        <trans-unit id="999f6dded093d2c86dc0dc12d01e46a6b346fe17" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, this method is generally preferable to the &lt;a href=&quot;deque#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt; method, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反することなくすぐに実行できる場合は、指定された要素をこの両端キューで表されるキューに（つまり、この両端キューの末尾に）挿入します。成功し &lt;code&gt;false&lt;/code&gt; 場合は &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合はfalseを返します。容量制限のある両端キューを使用する場合、このメソッドは通常、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;deque#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;メソッドよりも推奨されます。</target>
        </trans-unit>
        <trans-unit id="f7c58966f73ef5608bca9cc4454abf534c27e7e1" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、指定された要素をこの両端キューで表されるキューに挿入します（つまり、この両端キューの末尾に挿入します）。成功すると &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。 。</target>
        </trans-unit>
        <trans-unit id="b3ab72d6a7e2acc1f923839386ed5d02b2f294b1" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use &lt;a href=&quot;#offer(E)&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、指定された要素をこの両端キューで表されるキューに挿入します（つまり、この両端キューの末尾に挿入します）。成功すると &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。 。容量が制限された両端キューを使用&lt;a href=&quot;#offer(E)&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt;場合は、通常、offerを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="88e6e3388dcbebcc0a83ded2126307f380a366a7" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use &lt;a href=&quot;blockingdeque#offer-E-&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">容量制限に違反することなくすぐに実行できる場合は、指定された要素をこの両端キューによって表されるキューに（つまり、この両端キューの末尾に）挿入し、成功すると &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。 。容量制限のある両端キューを使用&lt;a href=&quot;blockingdeque#offer-E-&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt;場合は、通常、offerを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8df21cb3744984daa2a89e7bdad63ecc0616c764" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque) if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available. When using a capacity-restricted deque, it is generally preferable to use &lt;a href=&quot;deque#offer-E-&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">容量制限に違反することなくすぐに実行できる場合は、指定された要素をこの両端キューによって表されるキューに（つまり、この両端キューの末尾に）挿入し、成功すると &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。 。容量制限のある両端キューを使用&lt;a href=&quot;deque#offer-E-&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt;場合は、通常、offerを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="199e00b3054336b92d9e594b60e6c70b569c1bdd" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque), waiting if necessary for space to become available.</source>
          <target state="translated">指定された要素を、この deque で表されるキュー(言い換えれば、この deque の最後尾)に挿入し、必要に応じてスペースが空くのを待ちます。</target>
        </trans-unit>
        <trans-unit id="16675bfba7a73aa5f2e5d36200c4468ded4de0fa" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into the queue represented by this deque (in other words, at the tail of this deque), waiting up to the specified wait time if necessary for space to become available.</source>
          <target state="translated">指定された要素を、この deque で表現されたキュー(言い換えれば、この deque の末尾)に挿入し、必要であれば指定された待ち時間まで待ちます。</target>
        </trans-unit>
        <trans-unit id="060497ac12943a276893f62f3c4f471a97cee30d" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this delay queue.</source>
          <target state="translated">指定された要素をこの遅延キューに挿入します。</target>
        </trans-unit>
        <trans-unit id="acbc0676b60fd5e7bc3b9f1258f1ab5bd336405e" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this delay queue. As the queue is unbounded this method will never block.</source>
          <target state="translated">指定した要素をこの遅延キューに挿入します。キューには束縛がないので、このメソッドは決してブロックされません。</target>
        </trans-unit>
        <trans-unit id="b6f01faabf8b89c23a748b8acc1ff8c9ca807f03" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this priority queue.</source>
          <target state="translated">指定された要素を優先度キューに挿入します。</target>
        </trans-unit>
        <trans-unit id="51a1b86fc669ef3a96ce6f90d57c2132bcdd3ee7" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this priority queue. As the queue is unbounded, this method will never block or return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された要素をこの優先度キューに挿入します。キューには制限がないため、このメソッドがブロックしたり、 &lt;code&gt;false&lt;/code&gt; を返したりすることはありません。</target>
        </trans-unit>
        <trans-unit id="2f5b45d49bbd735ce0e95c0920b990c14dfa13da" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this priority queue. As the queue is unbounded, this method will never block.</source>
          <target state="translated">指定された要素をこの優先度キューに挿入します。キューには束縛がないため、このメソッドは決してブロックされません。</target>
        </trans-unit>
        <trans-unit id="e51cc35dd7f4b510e8690ba953fd5ffe53d7fe65" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this priority queue. As the queue is unbounded, this method will never return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された要素をこの優先度キューに挿入します。キューは無制限であるため、このメソッドは &lt;code&gt;false&lt;/code&gt; を返しません。</target>
        </trans-unit>
        <trans-unit id="bddff03735f041a9cbf1c62a3a8827c67f1095a2" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this queue if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if no space is currently available.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、指定された要素をこのキューに挿入します。成功すると &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1c994b927cfe697b1db47bbb4cf19c1b231a3185" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this queue if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if no space is currently available. When using a capacity-restricted queue, this method is generally preferable to &lt;a href=&quot;#add(E)&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、指定された要素をこのキューに挿入します。成功すると &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;false&lt;/code&gt; を返します。容量が制限されたキューを使用する場合、このメソッドは、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;#add(E)&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;よりも一般的に推奨されます。</target>
        </trans-unit>
        <trans-unit id="c187f73416add7adc010d7c86b8a9d6dbbf4dd03" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this queue if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and &lt;code&gt;false&lt;/code&gt; if no space is currently available. When using a capacity-restricted queue, this method is generally preferable to &lt;a href=&quot;blockingqueue#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反することなくすぐに指定可能な要素をこのキューに挿入します。成功し &lt;code&gt;false&lt;/code&gt; 場合は &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合はfalseを返します。容量制限のあるキューを使用する場合、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;blockingqueue#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;よりも、このメソッドの方が一般的に推奨されます。</target>
        </trans-unit>
        <trans-unit id="03a3e36fbd3f7d3e407c4ef84ed49565dc4d256a" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this queue if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available.</source>
          <target state="translated">容量制限に違反せずにすぐに指定可能な要素をこのキューに挿入します。成功した &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="250886dbb611913151c3011b3d128f5c61bcb271" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this queue if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available. When using a capacity-restricted queue, it is generally preferable to use &lt;a href=&quot;#offer(E)&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、指定された要素をこのキューに挿入し、成功すると &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。容量制限のあるキューを使用&lt;a href=&quot;#offer(E)&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt;場合は、通常、offerを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f534c86ce68834ae5b4b0cf2528486b421db81ed" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this queue if it is possible to do so immediately without violating capacity restrictions, returning &lt;code&gt;true&lt;/code&gt; upon success and throwing an &lt;code&gt;IllegalStateException&lt;/code&gt; if no space is currently available. When using a capacity-restricted queue, it is generally preferable to use &lt;a href=&quot;blockingqueue#offer-E-&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">容量制限に違反せずにすぐに指定可能な要素をこのキューに挿入します。成功した &lt;code&gt;true&lt;/code&gt; を返し、現在使用可能なスペースがない場合は &lt;code&gt;IllegalStateException&lt;/code&gt; をスローします。容量が制限されたキューを使用&lt;a href=&quot;blockingqueue#offer-E-&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt;場合は、通常、offerを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="b1e40d32e49a8bdda88e0c366c29a602d9c88a81" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this queue if it is possible to do so immediately without violating capacity restrictions.</source>
          <target state="translated">指定された要素を、容量制限に違反することなくすぐに挿入することが可能な場合に、このキューに挿入します。</target>
        </trans-unit>
        <trans-unit id="22d015cc8a5ac60ef6867ca3d74faf68eebd982a" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this queue if it is possible to do so immediately without violating capacity restrictions. When using a capacity-restricted queue, this method is generally preferable to &lt;a href=&quot;#add(E)&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反せずにすぐに実行できる場合は、指定された要素をこのキューに挿入します。容量が制限されたキューを使用する場合、このメソッドは、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;#add(E)&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;よりも一般的に推奨されます。</target>
        </trans-unit>
        <trans-unit id="ba7dd12488cc298e382e0fe4cc98ce5da315976f" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this queue if it is possible to do so immediately without violating capacity restrictions. When using a capacity-restricted queue, this method is generally preferable to &lt;a href=&quot;queue#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;, which can fail to insert an element only by throwing an exception.</source>
          <target state="translated">容量制限に違反せずにすぐに指定できる場合は、指定された要素をこのキューに挿入します。容量制限のあるキューを使用する場合、例外をスローするだけで要素の挿入に失敗する可能性がある&lt;a href=&quot;queue#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt;よりも、このメソッドの方が一般的に推奨されます。</target>
        </trans-unit>
        <trans-unit id="5d1aa2c22c818b7c2db492bae8e30091620a949c" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this queue, if another thread is waiting to receive it.</source>
          <target state="translated">指定された要素を、他のスレッドがそれを受け取るのを待っている場合に、このキューに挿入します。</target>
        </trans-unit>
        <trans-unit id="5e3b18bc2cc7480492281a91a26ffdf27c57a4fd" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this queue, waiting if necessary for space to become available.</source>
          <target state="translated">指定された要素をこのキューに挿入し、必要に応じてスペースが利用可能になるのを待ちます。</target>
        </trans-unit>
        <trans-unit id="d64b071e7f81377317a030a3b51f6a7e308cbc8a" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this queue, waiting if necessary up to the specified wait time for another thread to receive it.</source>
          <target state="translated">指定された要素をこのキューに挿入し、必要に応じて指定された待ち時間まで他のスレッドがそれを受け取るのを待ちます。</target>
        </trans-unit>
        <trans-unit id="8328efec5996dce9c5fd66f9e9e8f6ff62b2adfe" translate="yes" xml:space="preserve">
          <source>Inserts the specified element into this queue, waiting up to the specified wait time if necessary for space to become available.</source>
          <target state="translated">指定された要素をこのキューに挿入し、必要に応じて指定された待ち時間まで待ちます。</target>
        </trans-unit>
        <trans-unit id="d54b8c7c6a7df4d6f65920d5f428d84eb662c166" translate="yes" xml:space="preserve">
          <source>Inserts the specified object as a component in this vector at the specified &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">指定されたオブジェクトをコンポーネントとしてこのベクトルの指定された &lt;code&gt;index&lt;/code&gt; 挿入します。</target>
        </trans-unit>
        <trans-unit id="5a622c68bf5d245744e6a7b6da2d584be4f0a4bf" translate="yes" xml:space="preserve">
          <source>Inserts the specified object as a component in this vector at the specified &lt;code&gt;index&lt;/code&gt;. Each component in this vector with an index greater or equal to the specified &lt;code&gt;index&lt;/code&gt; is shifted upward to have an index one greater than the value it had previously.</source>
          <target state="translated">指定されたオブジェクトをコンポーネントとして、このベクターの指定された &lt;code&gt;index&lt;/code&gt; 挿入します。指定されたインデックス以上のインデックスを持つこのベクトルの各コンポーネントは、前に持っていた値よりも1大きいインデックスを持つように上方にシフトされ &lt;code&gt;index&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11dc26d2fca999c8ab7c3780894267af347a70aa" translate="yes" xml:space="preserve">
          <source>Inserts the specified string at the given index</source>
          <target state="translated">指定されたインデックスに指定された文字列を挿入します。</target>
        </trans-unit>
        <trans-unit id="3f6f99344c86f6814617442123ad54093aaedc69" translate="yes" xml:space="preserve">
          <source>Inserts the specified string at the given index.</source>
          <target state="translated">指定されたインデックスに指定された文字列を挿入します。</target>
        </trans-unit>
        <trans-unit id="24242acff5db65cd0b04b226ee132a4155facbc8" translate="yes" xml:space="preserve">
          <source>Inserts the specified string at the given index/</source>
          <target state="translated">指定された文字列を指定されたインデックスに挿入します。</target>
        </trans-unit>
        <trans-unit id="4d8e81b6ef3e48d72f45d2790ea2a4c6e5e70d27" translate="yes" xml:space="preserve">
          <source>Inserts the specified text at the specified position in this text area.</source>
          <target state="translated">このテキストエリアの指定した位置に、指定したテキストを挿入します。</target>
        </trans-unit>
        <trans-unit id="992adb113b41b5f0c70cd3c54595d5c4028eba94" translate="yes" xml:space="preserve">
          <source>Inserts the specified text at the specified position.</source>
          <target state="translated">指定した位置に指定したテキストを挿入します。</target>
        </trans-unit>
        <trans-unit id="ce5afac222250d1c76a35452f6ee592abf1b3788" translate="yes" xml:space="preserve">
          <source>Inserts the specified text at the specified position. Does nothing if the model is null or if the text is null or empty.</source>
          <target state="translated">指定した位置に指定したテキストを挿入します。モデルがNULLの場合、またはテキストがNULLまたは空の場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="b3b2834ee3393f3cb9a113ac6220e9bee2b18f02" translate="yes" xml:space="preserve">
          <source>Inserts the specified text, bypassing the DocumentFilter.</source>
          <target state="translated">指定したテキストを挿入し、DocumentFilterをバイパスします。</target>
        </trans-unit>
        <trans-unit id="c9d34b1c170147e417fead7cadd44f784d15b89c" translate="yes" xml:space="preserve">
          <source>Inserts the string into this character sequence.</source>
          <target state="translated">文字列をこの文字列に挿入します。</target>
        </trans-unit>
        <trans-unit id="dfe27dd3154fb2b7caaadbd90e90757922d90061" translate="yes" xml:space="preserve">
          <source>Inserts the string representation of a subarray of the &lt;code&gt;str&lt;/code&gt; array argument into this sequence.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; 配列引数のサブ配列の文字列表現をこのシーケンスに挿入します。</target>
        </trans-unit>
        <trans-unit id="86eb0828ec86918e745d17a63d2073304f50ecc1" translate="yes" xml:space="preserve">
          <source>Inserts the string representation of a subarray of the &lt;code&gt;str&lt;/code&gt; array argument into this sequence. The subarray begins at the specified &lt;code&gt;offset&lt;/code&gt; and extends &lt;code&gt;len&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;s. The characters of the subarray are inserted into this sequence at the position indicated by &lt;code&gt;index&lt;/code&gt;. The length of this sequence increases by &lt;code&gt;len&lt;/code&gt;&lt;code&gt;char&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; 配列引数のサブ配列の文字列表現をこのシーケンスに挿入します。サブ配列は、指定された &lt;code&gt;offset&lt;/code&gt; 始まり、 &lt;code&gt;len&lt;/code&gt; &lt;code&gt;char&lt;/code&gt; を拡張します。サブ配列の文字は、このシーケンスの &lt;code&gt;index&lt;/code&gt; で示される位置に挿入されます。このシーケンスの長さは &lt;code&gt;len&lt;/code&gt; &lt;code&gt;char&lt;/code&gt; だけ増加します。</target>
        </trans-unit>
        <trans-unit id="80559c535a654094c1a66b7acae7461096cce2fc" translate="yes" xml:space="preserve">
          <source>Inserts the string representation of the &lt;code&gt;Object&lt;/code&gt; argument into this character sequence.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 引数の文字列表現をこの文字シーケンスに挿入します。</target>
        </trans-unit>
        <trans-unit id="7672a13930d2b92f6f8bae26fd3f0848993fb388" translate="yes" xml:space="preserve">
          <source>Inserts the string representation of the &lt;code&gt;boolean&lt;/code&gt; argument into this sequence.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; 引数の文字列表現をこのシーケンスに挿入します。</target>
        </trans-unit>
        <trans-unit id="3bf2db9be125d466fc66d0acb12ae2b6615e3271" translate="yes" xml:space="preserve">
          <source>Inserts the string representation of the &lt;code&gt;char&lt;/code&gt; argument into this sequence.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 引数の文字列表現をこのシーケンスに挿入します。</target>
        </trans-unit>
        <trans-unit id="78bdf5a1ada38af740197c8b67325390c12788bc" translate="yes" xml:space="preserve">
          <source>Inserts the string representation of the &lt;code&gt;char&lt;/code&gt; array argument into this sequence.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; 配列引数の文字列表現をこのシーケンスに挿入します。</target>
        </trans-unit>
        <trans-unit id="d0982630125fbd97106c6b22654f6e72064d2f44" translate="yes" xml:space="preserve">
          <source>Inserts the string representation of the &lt;code&gt;double&lt;/code&gt; argument into this sequence.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 引数の文字列表現をこのシーケンスに挿入します。</target>
        </trans-unit>
        <trans-unit id="53be967d98e6aa78667d42a69c47145af59f7b09" translate="yes" xml:space="preserve">
          <source>Inserts the string representation of the &lt;code&gt;float&lt;/code&gt; argument into this sequence.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; 引数の文字列表現をこのシーケンスに挿入します。</target>
        </trans-unit>
        <trans-unit id="d5a3de46a37d1b421bc0863639a73f7ddb73ad20" translate="yes" xml:space="preserve">
          <source>Inserts the string representation of the &lt;code&gt;long&lt;/code&gt; argument into this sequence.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; 引数の文字列表現をこのシーケンスに挿入します。</target>
        </trans-unit>
        <trans-unit id="51d2f46ecbb540402946254d2a4c12085672cff3" translate="yes" xml:space="preserve">
          <source>Inserts the string representation of the second &lt;code&gt;int&lt;/code&gt; argument into this sequence.</source>
          <target state="translated">2番目の &lt;code&gt;int&lt;/code&gt; 引数の文字列表現をこのシーケンスに挿入します。</target>
        </trans-unit>
        <trans-unit id="74f0e6a5540fdce57d8486fad93e16515dbd41d4" translate="yes" xml:space="preserve">
          <source>Inserts the unresolved role specified as an element at the position specified.</source>
          <target state="translated">要素として指定した未解決のロールを指定した位置に挿入します。</target>
        </trans-unit>
        <trans-unit id="678b31f1fb6ab029f374f3d298e329fb300dd0cc" translate="yes" xml:space="preserve">
          <source>Inserts the unresolved role specified as an element at the position specified. Elements with an index greater than or equal to the current position are shifted up.</source>
          <target state="translated">要素として指定された未解決のロールを指定された位置に挿入します。現在の位置以上のインデックスを持つ要素は、上にシフトされます。</target>
        </trans-unit>
        <trans-unit id="985fe26e6cea7bc861063e59a7fe5b99cd901663" translate="yes" xml:space="preserve">
          <source>Inset cache</source>
          <target state="translated">インセットキャッシュ</target>
        </trans-unit>
        <trans-unit id="9db91e6d088574e48049614078d6bb76f7d40678" translate="yes" xml:space="preserve">
          <source>Insets</source>
          <target state="translated">Insets</target>
        </trans-unit>
        <trans-unit id="3de22c26b9bc92e9dc92d9cbb3cd01361cd9a2c2" translate="yes" xml:space="preserve">
          <source>Insets are used to define any space used by scrollbars and any borders created by the scroll pane. getInsets() can be used to get the current value for the insets. If the value of scrollbarsAlwaysVisible is false, then the value of the insets will change dynamically depending on whether the scrollbars are currently visible or not.</source>
          <target state="translated">インセットは、スクロールバーが使用するスペースやスクロール ペインによって作成される境界線を定義するために使用されます。scrollbarsAlwaysVisible の値が false の場合は、スクロールバーが現在表示されているかどうかによってインセットの値が動的に変化します。</target>
        </trans-unit>
        <trans-unit id="233b2b02d0158ab449c55a2f58059baade083892" translate="yes" xml:space="preserve">
          <source>InsetsUIResource</source>
          <target state="translated">InsetsUIResource</target>
        </trans-unit>
        <trans-unit id="6d5677b78b55946e29e1fd697be5386daa438e0a" translate="yes" xml:space="preserve">
          <source>Inside timer action.</source>
          <target state="translated">インサイドタイマーアクション。</target>
        </trans-unit>
        <trans-unit id="c5be7862c42147185e76e43b8862d57b231c9f00" translate="yes" xml:space="preserve">
          <source>Install a &lt;code&gt;LayoutManager&lt;/code&gt; on the component if necessary.</source>
          <target state="translated">必要に応じて、コンポーネントに &lt;code&gt;LayoutManager&lt;/code&gt; をインストールします。</target>
        </trans-unit>
        <trans-unit id="2ed8f251e4fb6a306587ffa5df7a6305aaa4705c" translate="yes" xml:space="preserve">
          <source>Install default property values for color, fonts, borders, icons, opacity, etc. on the component. Whenever possible, property values initialized by the client program should</source>
          <target state="translated">色、フォント、ボーダー、アイコン、不透明度などのデフォルトのプロパティ値をコンポーネントにインストールします。可能な限り、クライアントプログラムによって初期化されたプロパティ値は</target>
        </trans-unit>
        <trans-unit id="71085a06b2eea83038628b7ba67d66d63e8babb0" translate="yes" xml:space="preserve">
          <source>Install keyboard UI (mnemonics, traversal, etc.) on the component.</source>
          <target state="translated">コンポーネントにキーボードUI(ニーモニック、トラバーサルなど)をインストールします。</target>
        </trans-unit>
        <trans-unit id="0966d5850974b62dd5b8da6df37719654509a0c7" translate="yes" xml:space="preserve">
          <source>Install the defaults.</source>
          <target state="translated">デフォルトをインストールします。</target>
        </trans-unit>
        <trans-unit id="8e114685e3619457f1d32916808f1f46ad58164b" translate="yes" xml:space="preserve">
          <source>Install the listeners.</source>
          <target state="translated">リスナーをインストールします。</target>
        </trans-unit>
        <trans-unit id="e4dd347b6ccddf0ff862487c4a9044713128d73a" translate="yes" xml:space="preserve">
          <source>Installs a UI.</source>
          <target state="translated">UIをインストールします。</target>
        </trans-unit>
        <trans-unit id="1482ae15dd72a327bba1fa91362d92e19e2605c4" translate="yes" xml:space="preserve">
          <source>Installs a handler to show a custom About window for your application.</source>
          <target state="translated">アプリケーションのカスタムAboutウィンドウを表示するハンドラをインストールします。</target>
        </trans-unit>
        <trans-unit id="dd65377e7943072ba60effb7de083049b395103d" translate="yes" xml:space="preserve">
          <source>Installs a handler to show a custom Preferences window for your application.</source>
          <target state="translated">アプリケーションのカスタム環境設定ウィンドウを表示するハンドラをインストールします。</target>
        </trans-unit>
        <trans-unit id="dddd9997e88de32a20cca5d515cd4520d7da6f42" translate="yes" xml:space="preserve">
          <source>Installs components.</source>
          <target state="translated">コンポーネントをインストールします。</target>
        </trans-unit>
        <trans-unit id="bc37f9295635645a2adef466b0c8e5d504e3a874" translate="yes" xml:space="preserve">
          <source>Installs default properties.</source>
          <target state="translated">デフォルトのプロパティをインストールします。</target>
        </trans-unit>
        <trans-unit id="f435bdca1501956a4a7c81be92d3d8678f8931c5" translate="yes" xml:space="preserve">
          <source>Installs default setting.</source>
          <target state="translated">デフォルト設定をインストールします。</target>
        </trans-unit>
        <trans-unit id="7589c18de033b42abcda8e5cf630c49307cd6a2b" translate="yes" xml:space="preserve">
          <source>Installs default setting. This method is called when a &lt;code&gt;LookAndFeel&lt;/code&gt; is installed.</source>
          <target state="translated">デフォルト設定をインストールします。このメソッドは、 &lt;code&gt;LookAndFeel&lt;/code&gt; がインストールされたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4bc9e636267b802cdbc2492cb93a165cab224644" translate="yes" xml:space="preserve">
          <source>Installs defaults for a viewport.</source>
          <target state="translated">ビューポートのデフォルトをインストールします。</target>
        </trans-unit>
        <trans-unit id="8d5208190bae1680ae59fe2f8b6d4f1f152ec424" translate="yes" xml:space="preserve">
          <source>Installs desktop manager.</source>
          <target state="translated">デスクトップマネージャーをインストールします。</target>
        </trans-unit>
        <trans-unit id="2ef765fa3caff95f47eaa67efad5cb2a49002139" translate="yes" xml:space="preserve">
          <source>Installs keyboard actions.</source>
          <target state="translated">キーボードアクションをインストールします。</target>
        </trans-unit>
        <trans-unit id="506867f85b9ce8a7f7d35845cb07392ce56884b0" translate="yes" xml:space="preserve">
          <source>Installs listeners for the UI.</source>
          <target state="translated">UIのリスナーをインストールします。</target>
        </trans-unit>
        <trans-unit id="6582ba486e98d80d9bfa97dab8cfdf9b15eeb931" translate="yes" xml:space="preserve">
          <source>Installs listeners into the panel.</source>
          <target state="translated">パネルにリスナーをインストールします。</target>
        </trans-unit>
        <trans-unit id="710fd93164983402c3de9cc497b1d629c97da258" translate="yes" xml:space="preserve">
          <source>Installs listeners into the viewport.</source>
          <target state="translated">ビューポートにリスナーをインストールします。</target>
        </trans-unit>
        <trans-unit id="6fb72d1ef68c54d04448bf4c1acf51996a607482" translate="yes" xml:space="preserve">
          <source>Installs listeners.</source>
          <target state="translated">リスナーをインストールします。</target>
        </trans-unit>
        <trans-unit id="68a3ce50be02477749defaad4a02b71fbfd973d4" translate="yes" xml:space="preserve">
          <source>Installs listeners. This method is called when a &lt;code&gt;LookAndFeel&lt;/code&gt; is installed.</source>
          <target state="translated">リスナーをインストールします。このメソッドは、 &lt;code&gt;LookAndFeel&lt;/code&gt; がインストールされたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a7169bf744ba1bdd1dae6b11ae5e61a873a72e6c" translate="yes" xml:space="preserve">
          <source>Installs necessary mouse handlers on &lt;code&gt;newPane&lt;/code&gt; and adds it to the frame.</source>
          <target state="translated">&lt;code&gt;newPane&lt;/code&gt; に必要なマウスハンドラーをインストールし、フレームに追加します。</target>
        </trans-unit>
        <trans-unit id="5cf0a52b25974015fcae9cd7f8a1d7da88f44afc" translate="yes" xml:space="preserve">
          <source>Installs necessary mouse handlers on &lt;code&gt;newPane&lt;/code&gt; and adds it to the frame. Reverse process for the &lt;code&gt;currentPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;newPane&lt;/code&gt; に必要なマウスハンドラーをインストールし、フレームに追加します。 &lt;code&gt;currentPane&lt;/code&gt; の逆プロセス。</target>
        </trans-unit>
        <trans-unit id="ef665bca280e603c4543f86e3fb1d93791bc96b0" translate="yes" xml:space="preserve">
          <source>Installs non-rollover borders on all the child components of the JComponent.</source>
          <target state="translated">JComponentのすべての子コンポーネントに、ロールオーバーしないボーダーをインストールします。</target>
        </trans-unit>
        <trans-unit id="fc13ed5673b27599c42af08c6d01471a78af2287" translate="yes" xml:space="preserve">
          <source>Installs non-rollover borders on all the child components of the JComponent. A non-rollover border is the border that is installed on the child component while it is in the toolbar.</source>
          <target state="translated">JComponentのすべての子コンポーネントに非ロールオーバーボーダーをインストールします。ロールオーバーしないボーダーとは、ツールバーにある間に子コンポーネントにインストールされるボーダーのことです。</target>
        </trans-unit>
        <trans-unit id="290a800979951836fbe80656fde8138073714d52" translate="yes" xml:space="preserve">
          <source>Installs normal borders on all the child components of the JComponent.</source>
          <target state="translated">JComponentのすべての子コンポーネントに通常のボーダーをインストールします。</target>
        </trans-unit>
        <trans-unit id="518c2407c4e5594f841c1200a74b35528d5b5e3f" translate="yes" xml:space="preserve">
          <source>Installs normal borders on all the child components of the JComponent. A normal border is the original border that was installed on the child component before it was added to the toolbar.</source>
          <target state="translated">JComponentのすべての子コンポーネントに通常のボーダーをインストールします。通常のボーダーは、ツールバーに追加される前に子コンポーネントにインストールされていた元のボーダーです。</target>
        </trans-unit>
        <trans-unit id="9d6e2ca145753eb93adb13fe9b337f862afbcdf5" translate="yes" xml:space="preserve">
          <source>Installs preview panel.</source>
          <target state="translated">プレビューパネルをインストールします。</target>
        </trans-unit>
        <trans-unit id="b85872b645775ed6e3923afa3e324db8271cde91" translate="yes" xml:space="preserve">
          <source>Installs rollover borders on all the child components of the JComponent.</source>
          <target state="translated">JComponentのすべての子コンポーネントにロールオーバーボーダーをインストールします。</target>
        </trans-unit>
        <trans-unit id="2f526425eb5b45e3ed28f6cb9bc254415d9b78f5" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;AbstractFormatter&lt;/code&gt; onto a particular &lt;code&gt;JFormattedTextField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AbstractFormatter&lt;/code&gt; を特定の &lt;code&gt;JFormattedTextField&lt;/code&gt; にインストールします。</target>
        </trans-unit>
        <trans-unit id="8ee5dd5ff99631d021119afd599e564e4afac002" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;AbstractFormatter&lt;/code&gt; onto a particular &lt;code&gt;JFormattedTextField&lt;/code&gt;. This will invoke &lt;code&gt;valueToString&lt;/code&gt; to convert the current value from the &lt;code&gt;JFormattedTextField&lt;/code&gt; to a String. This will then install the &lt;code&gt;Action&lt;/code&gt;s from &lt;code&gt;getActions&lt;/code&gt;, the &lt;code&gt;DocumentFilter&lt;/code&gt; returned from &lt;code&gt;getDocumentFilter&lt;/code&gt; and the &lt;code&gt;NavigationFilter&lt;/code&gt; returned from &lt;code&gt;getNavigationFilter&lt;/code&gt; onto the &lt;code&gt;JFormattedTextField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AbstractFormatter&lt;/code&gt; を特定の &lt;code&gt;JFormattedTextField&lt;/code&gt; にインストールします。これは、起動します &lt;code&gt;valueToString&lt;/code&gt; から現在の値を変換するため &lt;code&gt;JFormattedTextField&lt;/code&gt; Stringに。これはその後、インストールします &lt;code&gt;Action&lt;/code&gt; からSを &lt;code&gt;getActions&lt;/code&gt; 、 &lt;code&gt;DocumentFilter&lt;/code&gt; はから返さ &lt;code&gt;getDocumentFilter&lt;/code&gt; と &lt;code&gt;NavigationFilter&lt;/code&gt; をはから返さ &lt;code&gt;getNavigationFilter&lt;/code&gt; へ &lt;code&gt;JFormattedTextField&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53dbbe6b4b729f7e52610d2e2fa11a3c3fa92f25" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;DefaultFormatter&lt;/code&gt; onto a particular &lt;code&gt;JFormattedTextField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DefaultFormatter&lt;/code&gt; を特定の &lt;code&gt;JFormattedTextField&lt;/code&gt; にインストールします。</target>
        </trans-unit>
        <trans-unit id="8674bd971246b2add2f724e8535b278857c947f2" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;DefaultFormatter&lt;/code&gt; onto a particular &lt;code&gt;JFormattedTextField&lt;/code&gt;. This will invoke &lt;code&gt;valueToString&lt;/code&gt; to convert the current value from the &lt;code&gt;JFormattedTextField&lt;/code&gt; to a String. This will then install the &lt;code&gt;Action&lt;/code&gt;s from &lt;code&gt;getActions&lt;/code&gt;, the &lt;code&gt;DocumentFilter&lt;/code&gt; returned from &lt;code&gt;getDocumentFilter&lt;/code&gt; and the &lt;code&gt;NavigationFilter&lt;/code&gt; returned from &lt;code&gt;getNavigationFilter&lt;/code&gt; onto the &lt;code&gt;JFormattedTextField&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DefaultFormatter&lt;/code&gt; を特定の &lt;code&gt;JFormattedTextField&lt;/code&gt; にインストールします。これは、起動します &lt;code&gt;valueToString&lt;/code&gt; から現在の値を変換するため &lt;code&gt;JFormattedTextField&lt;/code&gt; Stringに。これはその後、インストールします &lt;code&gt;Action&lt;/code&gt; からSを &lt;code&gt;getActions&lt;/code&gt; 、 &lt;code&gt;DocumentFilter&lt;/code&gt; はから返さ &lt;code&gt;getDocumentFilter&lt;/code&gt; と &lt;code&gt;NavigationFilter&lt;/code&gt; をはから返さ &lt;code&gt;getNavigationFilter&lt;/code&gt; へ &lt;code&gt;JFormattedTextField&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee152f379d44dc6178bbaef72d3812242d108a2e" translate="yes" xml:space="preserve">
          <source>Installs the &lt;code&gt;PropertyChangeListener&lt;/code&gt; returned from &lt;code&gt;createPropertyChangeListener&lt;/code&gt; on the &lt;code&gt;JDesktopPane&lt;/code&gt;.</source>
          <target state="translated">インストールし &lt;code&gt;PropertyChangeListener&lt;/code&gt; から返さ &lt;code&gt;createPropertyChangeListener&lt;/code&gt; に &lt;code&gt;JDesktopPane&lt;/code&gt; のを。</target>
        </trans-unit>
        <trans-unit id="cfec9bf72454c4a1a2e8095b844fe9d2462ed30f" translate="yes" xml:space="preserve">
          <source>Installs the UI defaults.</source>
          <target state="translated">UIのデフォルトをインストールします。</target>
        </trans-unit>
        <trans-unit id="ba77ced8d125e1c84b0d57c27829ecc8ef3f978c" translate="yes" xml:space="preserve">
          <source>Installs the UI for a component.</source>
          <target state="translated">コンポーネントのUIをインストールします。</target>
        </trans-unit>
        <trans-unit id="fac6561b988cf3c270145bdc661a94890b583eb3" translate="yes" xml:space="preserve">
          <source>Installs the UI for a component. This does the following things.</source>
          <target state="translated">コンポーネントのUIをインストールします。これは以下のことを行います。</target>
        </trans-unit>
        <trans-unit id="ebd114816269936f3e5a2df3dc417729939a48be" translate="yes" xml:space="preserve">
          <source>Installs the UI.</source>
          <target state="translated">UIをインストールします。</target>
        </trans-unit>
        <trans-unit id="a7c83e94211c65e7bd52acde48f20d9f2b0207ef" translate="yes" xml:space="preserve">
          <source>Installs the components.</source>
          <target state="translated">コンポーネントをインストールします。</target>
        </trans-unit>
        <trans-unit id="b27c54ea5ddf6949262526b701929a9b2bdfc620" translate="yes" xml:space="preserve">
          <source>Installs the default caret and highlighter into the associated component. These properties are only set if their current value is either &lt;code&gt;null&lt;/code&gt; or an instance of &lt;a href=&quot;../uiresource&quot;&gt;&lt;code&gt;UIResource&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトのキャレットとハイライターを関連するコンポーネントにインストールします。これらのプロパティは、現在の値が &lt;code&gt;null&lt;/code&gt; または&lt;a href=&quot;../uiresource&quot;&gt; &lt;code&gt;UIResource&lt;/code&gt; の&lt;/a&gt;インスタンスのいずれかである場合にのみ設定されます。</target>
        </trans-unit>
        <trans-unit id="e4942e024e925df83271736e2c5bc00051d1fb38" translate="yes" xml:space="preserve">
          <source>Installs the default colors, default font, default renderer, and default editor into the JComboBox.</source>
          <target state="translated">デフォルトの色、デフォルトのフォント、デフォルトのレンダラー、デフォルトのエディタを JComboBox にインストールします。</target>
        </trans-unit>
        <trans-unit id="f31b4a5231b9987850c2b7547e920bc60fba001d" translate="yes" xml:space="preserve">
          <source>Installs the defaults.</source>
          <target state="translated">デフォルトをインストールします。</target>
        </trans-unit>
        <trans-unit id="13b2092172b6a55bc5a9c7fb6463d10f2f959dbb" translate="yes" xml:space="preserve">
          <source>Installs the event listeners for the UI.</source>
          <target state="translated">UIのイベントリスナーをインストールします。</target>
        </trans-unit>
        <trans-unit id="508a2e094040daf799f233e4db337cb620833c18" translate="yes" xml:space="preserve">
          <source>Installs the given &lt;code&gt;TypeMap&lt;/code&gt; object as the type map for this &lt;code&gt;Connection&lt;/code&gt; object.</source>
          <target state="translated">指定された &lt;code&gt;TypeMap&lt;/code&gt; オブジェクトをこの &lt;code&gt;Connection&lt;/code&gt; オブジェクトのタイプマップとしてインストールします。</target>
        </trans-unit>
        <trans-unit id="be8132cc14af8c28ac7711084b357bd629a256f2" translate="yes" xml:space="preserve">
          <source>Installs the given &lt;code&gt;TypeMap&lt;/code&gt; object as the type map for this &lt;code&gt;Connection&lt;/code&gt; object. The type map will be used for the custom mapping of SQL structured types and distinct types.</source>
          <target state="translated">指定された &lt;code&gt;TypeMap&lt;/code&gt; オブジェクトをこの &lt;code&gt;Connection&lt;/code&gt; オブジェクトのタイプマップとしてインストールします。タイプマップは、SQL構造化タイプと個別タイプのカスタムマッピングに使用されます。</target>
        </trans-unit>
        <trans-unit id="aabd8272a03b2e07894f089737ebdc630e4aab86" translate="yes" xml:space="preserve">
          <source>Installs the given &lt;code&gt;java.util.Map&lt;/code&gt; object as the default type map for this &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">指定された &lt;code&gt;java.util.Map&lt;/code&gt; オブジェクトを、この &lt;code&gt;RowSet&lt;/code&gt; オブジェクトのデフォルトのタイプマップとしてインストールします。</target>
        </trans-unit>
        <trans-unit id="eff36dfbdd3dd7409004944df44ba3f1edeb1288" translate="yes" xml:space="preserve">
          <source>Installs the given &lt;code&gt;java.util.Map&lt;/code&gt; object as the default type map for this &lt;code&gt;RowSet&lt;/code&gt; object. This type map will be used unless another type map is supplied as a method parameter.</source>
          <target state="translated">指定された &lt;code&gt;java.util.Map&lt;/code&gt; オブジェクトを、この &lt;code&gt;RowSet&lt;/code&gt; オブジェクトのデフォルトのタイプマップとしてインストールします。このタイプマップは、別のタイプマップがメソッドパラメータとして指定されていない限り使用されます。</target>
        </trans-unit>
        <trans-unit id="c14e9a4e6cdd04eed347dc0d9786bc2d629b85c3" translate="yes" xml:space="preserve">
          <source>Installs the given &lt;code&gt;java.util.Map&lt;/code&gt; object as the type map associated with the &lt;code&gt;Connection&lt;/code&gt; object for this &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">指定された &lt;code&gt;java.util.Map&lt;/code&gt; オブジェクトを、この &lt;code&gt;RowSet&lt;/code&gt; オブジェクトの &lt;code&gt;Connection&lt;/code&gt; オブジェクトに関連付けられたタイプマップとしてインストールします。</target>
        </trans-unit>
        <trans-unit id="c5a3d58f117490756fecaacbc02c2de2c1ee8162" translate="yes" xml:space="preserve">
          <source>Installs the given &lt;code&gt;java.util.Map&lt;/code&gt; object as the type map associated with the &lt;code&gt;Connection&lt;/code&gt; object for this &lt;code&gt;RowSet&lt;/code&gt; object. The custom mapping indicated in this type map will be used unless a different type map is explicitly supplied to a method, in which case the type map supplied will be used.</source>
          <target state="translated">指定された &lt;code&gt;java.util.Map&lt;/code&gt; オブジェクトを、この &lt;code&gt;RowSet&lt;/code&gt; オブジェクトの &lt;code&gt;Connection&lt;/code&gt; オブジェクトに関連付けられたタイプマップとしてインストールします。このタイプマップに示されているカスタムマッピングは、別のタイプマップがメソッドに明示的に指定されていない限り使用されます。明示的に指定されている場合は、提供されているタイプマップが使用されます。</target>
        </trans-unit>
        <trans-unit id="b2b7eb3c30715e57f42e9d5a5f81383df363b206" translate="yes" xml:space="preserve">
          <source>Installs the handler which determines if the application should quit.</source>
          <target state="translated">アプリケーションが終了するかどうかを判断するハンドラをインストールします。</target>
        </trans-unit>
        <trans-unit id="628dc16246234240304604ba28aaa6e8712f40ae" translate="yes" xml:space="preserve">
          <source>Installs the handler which determines if the application should quit. The handler is passed a one-shot &lt;a href=&quot;desktop/quitresponse&quot;&gt;&lt;code&gt;QuitResponse&lt;/code&gt;&lt;/a&gt; which can cancel or proceed with the quit. Setting the handler to &lt;code&gt;null&lt;/code&gt; causes all quit requests to directly perform the default &lt;a href=&quot;desktop/quitstrategy&quot;&gt;&lt;code&gt;QuitStrategy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アプリケーションを終了するかどうかを決定するハンドラーをインストールします。ハンドラーには、終了をキャンセルまたは続行できるワンショットの&lt;a href=&quot;desktop/quitresponse&quot;&gt; &lt;code&gt;QuitResponse&lt;/code&gt; &lt;/a&gt;が渡されます。ハンドラーを &lt;code&gt;null&lt;/code&gt; に設定すると、すべての終了要求がデフォルトの&lt;a href=&quot;desktop/quitstrategy&quot;&gt; &lt;code&gt;QuitStrategy&lt;/code&gt; &lt;/a&gt;を直接実行します。</target>
        </trans-unit>
        <trans-unit id="1f56b3b999c57d457926b3720390e3dc7dff94e0" translate="yes" xml:space="preserve">
          <source>Installs the handler which is notified when the application is asked to open a URL.</source>
          <target state="translated">アプリケーションがURLを開くように要求されたときに通知されるハンドラをインストールします。</target>
        </trans-unit>
        <trans-unit id="9eb23f87378adf3d4e834bc255c5fa224fec483a" translate="yes" xml:space="preserve">
          <source>Installs the handler which is notified when the application is asked to open a URL. Setting the handler to &lt;code&gt;null&lt;/code&gt; causes all &lt;a href=&quot;desktop/openurihandler#openURI(java.awt.desktop.OpenURIEvent)&quot;&gt;&lt;code&gt;OpenURIHandler.openURI(OpenURIEvent)&lt;/code&gt;&lt;/a&gt; requests to be enqueued until another handler is set.</source>
          <target state="translated">アプリケーションがURLを開くように要求されたときに通知されるハンドラーをインストールします。ハンドラーを &lt;code&gt;null&lt;/code&gt; に設定すると、別のハンドラーが設定されるまで、すべての&lt;a href=&quot;desktop/openurihandler#openURI(java.awt.desktop.OpenURIEvent)&quot;&gt; &lt;code&gt;OpenURIHandler.openURI(OpenURIEvent)&lt;/code&gt; &lt;/a&gt;要求がキューに入れられます。</target>
        </trans-unit>
        <trans-unit id="ad3eed77fe65b61638cf580bcb7d0a822832a975" translate="yes" xml:space="preserve">
          <source>Installs the handler which is notified when the application is asked to open a list of files.</source>
          <target state="translated">アプリケーションがファイルの一覧を開くように要求されたときに通知されるハンドラをインストールします。</target>
        </trans-unit>
        <trans-unit id="70397af68b8aac12e56aeeff9ff45c31f9cb6acd" translate="yes" xml:space="preserve">
          <source>Installs the handler which is notified when the application is asked to print a list of files.</source>
          <target state="translated">アプリケーションがファイルの一覧を印刷するように要求されたときに通知されるハンドラをインストールします。</target>
        </trans-unit>
        <trans-unit id="2284628acde90b283a609c6c3512cb25daa000c2" translate="yes" xml:space="preserve">
          <source>Installs the icons.</source>
          <target state="translated">アイコンをインストールします。</target>
        </trans-unit>
        <trans-unit id="f50ad569c87da2e6335bb440089c2028f03703f9" translate="yes" xml:space="preserve">
          <source>Installs the keyboard Actions onto the JSpinner.</source>
          <target state="translated">キーボードアクションをJSpinnerにインストールします。</target>
        </trans-unit>
        <trans-unit id="977aef6c14c6f66179c20042332f9d91c5cbf791" translate="yes" xml:space="preserve">
          <source>Installs the keyboard actions for the UI.</source>
          <target state="translated">UIのキーボードアクションをインストールします。</target>
        </trans-unit>
        <trans-unit id="886a5a92fc50895d4c9fa95467e2c3d12bc33a4c" translate="yes" xml:space="preserve">
          <source>Installs the keyboard actions.</source>
          <target state="translated">キーボードアクションをインストールします。</target>
        </trans-unit>
        <trans-unit id="31c0a73134c6ebd5a75003a1468eececf1b81277" translate="yes" xml:space="preserve">
          <source>Installs the listeners on the combo box model.</source>
          <target state="translated">コンボボックスモデルにリスナーをインストールします。</target>
        </trans-unit>
        <trans-unit id="e614b9462d66e2e3ac6deced9d822cfa7b67ed1e" translate="yes" xml:space="preserve">
          <source>Installs the listeners on the combo box model. Any listeners installed on the combo box model should be removed in &lt;code&gt;uninstallComboBoxModelListeners&lt;/code&gt;.</source>
          <target state="translated">コンボボックスモデルにリスナーをインストールします。コンボボックスモデルにインストールされているリスナーは、 &lt;code&gt;uninstallComboBoxModelListeners&lt;/code&gt; で削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="1c6a03c39d93c9f7f8802455595e975e3d5ca7cd" translate="yes" xml:space="preserve">
          <source>Installs the listeners.</source>
          <target state="translated">リスナーをインストールします。</target>
        </trans-unit>
        <trans-unit id="fea9e86f8d68f958a0b70bbce4857962a6d37e61" translate="yes" xml:space="preserve">
          <source>Installs the mouse handlers.</source>
          <target state="translated">マウスハンドラをインストールします。</target>
        </trans-unit>
        <trans-unit id="96df48ad35331c7842bd4accc7a760c73c70bb00" translate="yes" xml:space="preserve">
          <source>Installs the necessary listeners on the next button, &lt;code&gt;c&lt;/code&gt;, to update the &lt;code&gt;JSpinner&lt;/code&gt; in response to a user gesture.</source>
          <target state="translated">次のボタン &lt;code&gt;c&lt;/code&gt; に必要なリスナーをインストールして、ユーザーのジェスチャーに応じて &lt;code&gt;JSpinner&lt;/code&gt; を更新します。</target>
        </trans-unit>
        <trans-unit id="a74480f56078685b43709196e747e255a69659ca" translate="yes" xml:space="preserve">
          <source>Installs the necessary listeners on the previous button, &lt;code&gt;c&lt;/code&gt;, to update the &lt;code&gt;JSpinner&lt;/code&gt; in response to a user gesture.</source>
          <target state="translated">前のボタン &lt;code&gt;c&lt;/code&gt; に必要なリスナーをインストールして、ユーザーのジェスチャーに応じて &lt;code&gt;JSpinner&lt;/code&gt; を更新します。</target>
        </trans-unit>
        <trans-unit id="73e38d249172448b516b51b9087426117c3c911f" translate="yes" xml:space="preserve">
          <source>Installs the necessary properties on the JPasswordField.</source>
          <target state="translated">JPasswordFieldに必要なプロパティをインストールします。</target>
        </trans-unit>
        <trans-unit id="b63c641677f09912c97e0581b8e1b173814e6503" translate="yes" xml:space="preserve">
          <source>Installs the necessary state from this Style on the &lt;code&gt;JComponent&lt;/code&gt; from &lt;code&gt;context&lt;/code&gt;.</source>
          <target state="translated">このスタイルから必要な状態を &lt;code&gt;context&lt;/code&gt; からの &lt;code&gt;JComponent&lt;/code&gt; にインストールします。</target>
        </trans-unit>
        <trans-unit id="cb8816e23bff2cf33965f5fd1f179b319e973a68" translate="yes" xml:space="preserve">
          <source>Installs the necessary state from this Style on the &lt;code&gt;JComponent&lt;/code&gt; from &lt;code&gt;context&lt;/code&gt;. Overridden to cause this style to populate itself with data from UIDefaults, if necessary.</source>
          <target state="translated">このスタイルから必要な状態を &lt;code&gt;context&lt;/code&gt; からの &lt;code&gt;JComponent&lt;/code&gt; にインストールします。必要に応じて、このスタイルにUIDefaultsからのデータを入力させるためにオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="6c2be05a0f942c322deb8f6e21543f647d678ee9" translate="yes" xml:space="preserve">
          <source>Installs the receiver as the L&amp;amp;F for the passed in &lt;code&gt;JOptionPane&lt;/code&gt;.</source>
          <target state="translated">渡された &lt;code&gt;JOptionPane&lt;/code&gt; のL＆Fとしてレシーバーをインストールします。</target>
        </trans-unit>
        <trans-unit id="e74265ebf93794c5e85c4313fdd9ae765c5fbd75" translate="yes" xml:space="preserve">
          <source>Installs the strings.</source>
          <target state="translated">文字列をインストールします。</target>
        </trans-unit>
        <trans-unit id="3af53ca1b83715fda3ebdc0c712e309cfd91faad" translate="yes" xml:space="preserve">
          <source>Installs the title pane.</source>
          <target state="translated">タイトルペインをインストールします。</target>
        </trans-unit>
        <trans-unit id="d58f52b36ffb3e545748cdb25d99aaabfcfe93dd" translate="yes" xml:space="preserve">
          <source>Installs view port properties.</source>
          <target state="translated">ビューポートのプロパティをインストールします。</target>
        </trans-unit>
        <trans-unit id="d6408d45b660e9f75cd439edbd42df5423cb6b27" translate="yes" xml:space="preserve">
          <source>Instance creation will occur in the specified thread. Instance creation can occur only if the specified thread has been suspended by an event which occurred in that thread. Instance creation is not supported when the target VM has been suspended through &lt;a href=&quot;virtualmachine#suspend()&quot;&gt;&lt;code&gt;VirtualMachine.suspend()&lt;/code&gt;&lt;/a&gt; or when the specified thread is suspended through &lt;a href=&quot;threadreference#suspend()&quot;&gt;&lt;code&gt;ThreadReference.suspend()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72b7cfe0ef3064bdadb7ec1a4b0932d8a7022304" translate="yes" xml:space="preserve">
          <source>Instance filters allow control over the instance in which the event occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a58891c4be812950e4b4f4f13b213d45f91924" translate="yes" xml:space="preserve">
          <source>Instance for the shadow of the divider when non continuous layout is being used.</source>
          <target state="translated">非連続レイアウトを使用している場合の仕切りの影のインスタンス。</target>
        </trans-unit>
        <trans-unit id="fd1c5294bffcf541d2bc4fbfc6e0159a4326659d" translate="yes" xml:space="preserve">
          <source>Instance of an &lt;code&gt;XPathFactory&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XPathFactory&lt;/code&gt; のインスタンス。</target>
        </trans-unit>
        <trans-unit id="50ff6fad985a07a70e6da2584bb81fab4c6d752a" translate="yes" xml:space="preserve">
          <source>Instance of the FocusListener for this JSplitPane.</source>
          <target state="translated">このJSplitPaneのFocusListenerのインスタンス。</target>
        </trans-unit>
        <trans-unit id="f4a2b86e31a286d1348bc4ad3fe02101656f9b4c" translate="yes" xml:space="preserve">
          <source>Instance of the PropertyChangeListener for this JSplitPane.</source>
          <target state="translated">このJSplitPaneのPropertyChangeListenerのインスタンス。</target>
        </trans-unit>
        <trans-unit id="cbf77b5a0a5c1154d14464546c549b0eecb4f33d" translate="yes" xml:space="preserve">
          <source>Instance of the divider for this JSplitPane.</source>
          <target state="translated">このJSplitPaneの仕切りのインスタンス。</target>
        </trans-unit>
        <trans-unit id="ac61124b89600e8b131d9bcc0ecf59edab18d305" translate="yes" xml:space="preserve">
          <source>Instance of this interface manage which X509 certificates may be used to authenticate the remote side of a secure socket.</source>
          <target state="translated">このインターフェイスのインスタンスは、セキュアソケットのリモート側の認証に使用する X509 証明書を管理します。</target>
        </trans-unit>
        <trans-unit id="29d0e7a69a337dcaf136fb9563ad4a45c4376b55" translate="yes" xml:space="preserve">
          <source>Instance of this interface manage which X509 certificates may be used to authenticate the remote side of a secure socket. Decisions may be based on trusted certificate authorities, certificate revocation lists, online status checking or other means.</source>
          <target state="translated">本インタフェースのインスタンスは、セキュアソケットのリモート側の認証に使用する X509 証明書を管理します。判断は、信頼できる証明書局、証明書失効リスト、オンラインステータスチェック、またはその他の手段に基づいて行うことができます。</target>
        </trans-unit>
        <trans-unit id="059f5af5d44da7e2d3be324404c7e6f0f7dc59f7" translate="yes" xml:space="preserve">
          <source>InstanceAlreadyExistsException</source>
          <target state="translated">InstanceAlreadyExistsException</target>
        </trans-unit>
        <trans-unit id="de7d78eab36631b35b26e6b5da5663cc87188a48" translate="yes" xml:space="preserve">
          <source>InstanceNotFoundException</source>
          <target state="translated">InstanceNotFoundException</target>
        </trans-unit>
        <trans-unit id="12fc7371885495a5982c8fdb4352833f665298f0" translate="yes" xml:space="preserve">
          <source>InstanceOfTree</source>
          <target state="translated">InstanceOfTree</target>
        </trans-unit>
        <trans-unit id="cfd0ec657fb7c7bf8479807a0246dd5c4da5de0d" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;base64.decoder&quot;&gt;&lt;code&gt;Base64.Decoder&lt;/code&gt;&lt;/a&gt; class are safe for use by multiple concurrent threads.</source>
          <target state="translated">&lt;a href=&quot;base64.decoder&quot;&gt; &lt;code&gt;Base64.Decoder&lt;/code&gt; &lt;/a&gt;クラスのインスタンスは、複数の同時スレッドで安全に使用できます。</target>
        </trans-unit>
        <trans-unit id="46c3833f9e3417d3c88de08e8a06977fa51f1c93" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;base64.encoder&quot;&gt;&lt;code&gt;Base64.Encoder&lt;/code&gt;&lt;/a&gt; class are safe for use by multiple concurrent threads.</source>
          <target state="translated">&lt;a href=&quot;base64.encoder&quot;&gt; &lt;code&gt;Base64.Encoder&lt;/code&gt; &lt;/a&gt;クラスのインスタンスは、複数の同時スレッドで安全に使用できます。</target>
        </trans-unit>
        <trans-unit id="4cb3877ce06c3a3155b0f7f6fe7667e6bba1657d" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;jobstatereason&quot;&gt;&lt;code&gt;JobStateReason&lt;/code&gt;&lt;/a&gt; do not appear in a Print Job's attribute set directly. Rather, a &lt;code&gt;JobStateReasons&lt;/code&gt; attribute appears in the Print Job's attribute set. The &lt;code&gt;JobStateReasons&lt;/code&gt; attribute contains zero, one, or more than one &lt;a href=&quot;jobstatereason&quot;&gt;&lt;code&gt;JobStateReason&lt;/code&gt;&lt;/a&gt; objects which pertain to the Print Job's status. The printer adds a &lt;a href=&quot;jobstatereason&quot;&gt;&lt;code&gt;JobStateReason&lt;/code&gt;&lt;/a&gt; object to the Print Job's JobStateReasons attribute when the corresponding condition becomes true of the Print Job, and the printer removes the &lt;a href=&quot;jobstatereason&quot;&gt;&lt;code&gt;JobStateReason&lt;/code&gt;&lt;/a&gt; object again when the corresponding condition becomes false, regardless of whether the Print Job's overall &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; also changed.</source>
          <target state="translated">&lt;a href=&quot;jobstatereason&quot;&gt; &lt;code&gt;JobStateReason&lt;/code&gt; の&lt;/a&gt;インスタンスは、印刷ジョブの属性セットに直接表示されません。むしろ、 &lt;code&gt;JobStateReasons&lt;/code&gt; 属性は印刷ジョブの属性セットに表示されます。 &lt;code&gt;JobStateReasons&lt;/code&gt; 属性の属性は、ゼロ、1、または複数含まれてい&lt;a href=&quot;jobstatereason&quot;&gt; &lt;code&gt;JobStateReason&lt;/code&gt; の&lt;/a&gt;印刷ジョブのステータスに関連するオブジェクトを。プリンタは、対応する条件が印刷ジョブでtrueになると、&lt;a href=&quot;jobstatereason&quot;&gt; &lt;code&gt;JobStateReason&lt;/code&gt; &lt;/a&gt;オブジェクトを印刷ジョブのJobStateReasons属性に追加し、対応する条件がfalseになると、印刷ジョブの全体的な&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;も変更されたかどうかに関係なく、&lt;a href=&quot;jobstatereason&quot;&gt; &lt;code&gt;JobStateReason&lt;/code&gt; &lt;/a&gt;オブジェクトを再度削除します。</target>
        </trans-unit>
        <trans-unit id="176b8015f630e947c537be57bc824543f750e81a" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;jobstatereason&quot;&gt;&lt;code&gt;JobStateReason&lt;/code&gt;&lt;/a&gt; do not appear in a Print Job's attribute set directly. Rather, a JobStateReasons attribute appears in the Print Job's attribute set. The JobStateReasons attribute contains zero, one, or more than one &lt;a href=&quot;jobstatereason&quot;&gt;&lt;code&gt;JobStateReason&lt;/code&gt;&lt;/a&gt; objects which pertain to the Print Job's status. The printer adds a &lt;a href=&quot;jobstatereason&quot;&gt;&lt;code&gt;JobStateReason&lt;/code&gt;&lt;/a&gt; object to the Print Job's JobStateReasons attribute when the corresponding condition becomes true of the Print Job, and the printer removes the &lt;a href=&quot;jobstatereason&quot;&gt;&lt;code&gt;JobStateReason&lt;/code&gt;&lt;/a&gt; object again when the corresponding condition becomes false, regardless of whether the Print Job's overall &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; also changed.</source>
          <target state="translated">&lt;a href=&quot;jobstatereason&quot;&gt; &lt;code&gt;JobStateReason&lt;/code&gt; の&lt;/a&gt;インスタンスは、印刷ジョブの属性セットに直接表示されません。代わりに、JobStateReasons属性が印刷ジョブの属性セットに表示されます。 JobStateReasons属性には、印刷ジョブのステータスに関連するゼロ、1つ、または複数の&lt;a href=&quot;jobstatereason&quot;&gt; &lt;code&gt;JobStateReason&lt;/code&gt; &lt;/a&gt;オブジェクトが含まれます。プリンターは、印刷ジョブの対応する条件がtrueになると&lt;a href=&quot;jobstatereason&quot;&gt; &lt;code&gt;JobStateReason&lt;/code&gt; &lt;/a&gt;オブジェクトを印刷ジョブのJobStateReasons属性に追加し、対応する条件がfalseになると、印刷ジョブの全体的な&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;も変更されたかどうかに関係なく、プリンターは&lt;a href=&quot;jobstatereason&quot;&gt; &lt;code&gt;JobStateReason&lt;/code&gt; &lt;/a&gt;オブジェクトを再び削除します。</target>
        </trans-unit>
        <trans-unit id="3ac1fa5db150259fe3e12ef5e01ee28b63881b20" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; do not appear in a Print Service's attribute set directly. Rather, a &lt;code&gt;PrinterStateReasons&lt;/code&gt; attribute appears in the Print Service's attribute set. The &lt;code&gt;PrinterStateReasons&lt;/code&gt; attribute contains zero, one, or more than one &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; objects which pertain to the Print Service's status, and each &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; object is associated with a &lt;a href=&quot;severity&quot;&gt;&lt;code&gt;Severity&lt;/code&gt;&lt;/a&gt; level of &lt;code&gt;REPORT&lt;/code&gt; (least severe), &lt;code&gt;WARNING&lt;/code&gt;, or &lt;code&gt;ERROR&lt;/code&gt; (most severe). The printer adds a &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; object to the Print Service's &lt;code&gt;PrinterStateReasons&lt;/code&gt; attribute when the corresponding condition becomes true of the printer, and the printer removes the &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; object again when the corresponding condition becomes false, regardless of whether the Print Service's overall &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; also changed.</source>
          <target state="translated">&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; の&lt;/a&gt;インスタンスは、PrintServiceの属性セットに直接表示されません。むしろ、 &lt;code&gt;PrinterStateReasons&lt;/code&gt; 属性がPrintServiceの属性セットに表示されます。 &lt;code&gt;PrinterStateReasons&lt;/code&gt; の属性は、ゼロ、1、または複数含まれてい&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;印刷サービスのステータスに関連するオブジェクトを、それぞれ&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;オブジェクトが関連付けられている&lt;a href=&quot;severity&quot;&gt; &lt;code&gt;Severity&lt;/code&gt; &lt;/a&gt;のレベル &lt;code&gt;REPORT&lt;/code&gt; （少なくとも重度）、 &lt;code&gt;WARNING&lt;/code&gt; 、または &lt;code&gt;ERROR&lt;/code&gt; （最も厳しいです）。プリンタが追加され&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;印刷サービスのにオブジェクトを &lt;code&gt;PrinterStateReasons&lt;/code&gt; 対応する条件がプリンターでtrueになると属性になり、対応する条件がfalseになると、Print Serviceの全体的な&lt;a href=&quot;printerstate&quot;&gt; &lt;code&gt;PrinterState&lt;/code&gt; &lt;/a&gt;も変更されたかどうかに関係なく、プリンターは&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;オブジェクトを再度削除します。</target>
        </trans-unit>
        <trans-unit id="1b0f0055f1b2ba9eaee7d35f59ede6a3f4abb42b" translate="yes" xml:space="preserve">
          <source>Instances of &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; do not appear in a Print Service's attribute set directly. Rather, a PrinterStateReasons attribute appears in the Print Service's attribute set. The PrinterStateReasons attribute contains zero, one, or more than one &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; objects which pertain to the Print Service's status, and each &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; object is associated with a &lt;a href=&quot;severity&quot;&gt;&lt;code&gt;Severity&lt;/code&gt;&lt;/a&gt; level of REPORT (least severe), WARNING, or ERROR (most severe). The printer adds a &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; object to the Print Service's PrinterStateReasons attribute when the corresponding condition becomes true of the printer, and the printer removes the &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; object again when the corresponding condition becomes false, regardless of whether the Print Service's overall &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; also changed.</source>
          <target state="translated">&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; の&lt;/a&gt;インスタンスは、印刷サービスの属性セットに直接表示されません。代わりに、PrinterStateReasons属性が印刷サービスの属性セットに表示されます。 PrinterStateReasons属性には、Print Serviceのステータスに関連する0個、1個、または複数の&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;オブジェクトが含まれ、各&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;オブジェクトは、&lt;a href=&quot;severity&quot;&gt; &lt;code&gt;Severity&lt;/code&gt; &lt;/a&gt;レベルがREPORT（最も重大度が低い）、WARNING、またはERROR（最も重大度が高い）に関連付けられています。プリンターは、プリンターの対応する条件がtrueになり、プリンターが&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; を&lt;/a&gt;削除すると、&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;オブジェクトを印刷サービスのPrinterStateReasons属性に追加します。プリントサービスの全体的な&lt;a href=&quot;printerstate&quot;&gt; &lt;code&gt;PrinterState&lt;/code&gt; &lt;/a&gt;も変更されたかどうかに関係なく、対応する条件がfalseになったときにオブジェクトを再び。</target>
        </trans-unit>
        <trans-unit id="ef29d1e13d1a0f070ba5cd915f64e1fedca034f6" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;AbstractFormatter&lt;/code&gt; are used by &lt;code&gt;JFormattedTextField&lt;/code&gt; to handle the conversion both from an Object to a String, and back from a String to an Object.</source>
          <target state="translated">&lt;code&gt;AbstractFormatter&lt;/code&gt; のインスタンスは、 &lt;code&gt;JFormattedTextField&lt;/code&gt; によって使用され、オブジェクトから文字列への変換と、文字列からオブジェクトへの変換の両方を処理します。</target>
        </trans-unit>
        <trans-unit id="9ca79602b9af9d8853a501556046d3818d8af77f" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;AbstractFormatter&lt;/code&gt; are used by &lt;code&gt;JFormattedTextField&lt;/code&gt; to handle the conversion both from an Object to a String, and back from a String to an Object. &lt;code&gt;AbstractFormatter&lt;/code&gt;s can also enforce editing policies, or navigation policies, or manipulate the &lt;code&gt;JFormattedTextField&lt;/code&gt; in any way it sees fit to enforce the desired policy.</source>
          <target state="translated">&lt;code&gt;AbstractFormatter&lt;/code&gt; のインスタンスは、 &lt;code&gt;JFormattedTextField&lt;/code&gt; によって使用され、オブジェクトから文字列への変換と、文字列からオブジェクトへの変換の両方を処理します。 &lt;code&gt;AbstractFormatter&lt;/code&gt; は、編集ポリシーまたはナビゲーションポリシーを適用したり、目的のポリシーを適用するのに適した方法で &lt;code&gt;JFormattedTextField&lt;/code&gt; を操作したりすることもできます。</target>
        </trans-unit>
        <trans-unit id="2115830f4c1c64c62e5b2c9a464eff7312cf437e" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; are used by &lt;code&gt;JFormattedTextField&lt;/code&gt; to obtain instances of &lt;code&gt;AbstractFormatter&lt;/code&gt; which in turn are used to format values.</source>
          <target state="translated">インスタンス &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; がで使用される &lt;code&gt;JFormattedTextField&lt;/code&gt; のインスタンスを取得するため &lt;code&gt;AbstractFormatter&lt;/code&gt; 順番にフォーマット値に使用されています。</target>
        </trans-unit>
        <trans-unit id="f5fb90793bad7c296bf33c46a2bd393d491fcb19" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; are used by &lt;code&gt;JFormattedTextField&lt;/code&gt; to obtain instances of &lt;code&gt;AbstractFormatter&lt;/code&gt; which in turn are used to format values. &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; can return different &lt;code&gt;AbstractFormatter&lt;/code&gt;s based on the state of the &lt;code&gt;JFormattedTextField&lt;/code&gt;, perhaps returning different &lt;code&gt;AbstractFormatter&lt;/code&gt;s when the &lt;code&gt;JFormattedTextField&lt;/code&gt; has focus vs when it doesn't have focus.</source>
          <target state="translated">インスタンス &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; がで使用される &lt;code&gt;JFormattedTextField&lt;/code&gt; のインスタンスを取得するため &lt;code&gt;AbstractFormatter&lt;/code&gt; 順番にフォーマット値に使用されています。 &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; は返すことができます異なる &lt;code&gt;AbstractFormatter&lt;/code&gt; Sの状態に基づいて &lt;code&gt;JFormattedTextField&lt;/code&gt; はおそらく異なる返す、 &lt;code&gt;AbstractFormatter&lt;/code&gt; ときSを &lt;code&gt;JFormattedTextField&lt;/code&gt; のは、それがフォーカスを持たないときの対フォーカスを持っています。</target>
        </trans-unit>
        <trans-unit id="efa72c01d3dba69262630819ef892bb9a4113a38" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;ComponentColorModel&lt;/code&gt; created with transfer types &lt;code&gt;DataBuffer.TYPE_BYTE&lt;/code&gt;, &lt;code&gt;DataBuffer.TYPE_USHORT&lt;/code&gt;, and &lt;code&gt;DataBuffer.TYPE_INT&lt;/code&gt; have pixel sample values which are treated as unsigned integral values. The number of bits in a color or alpha sample of a pixel value might not be the same as the number of bits for the corresponding color or alpha sample passed to the &lt;code&gt;ComponentColorModel(ColorSpace, int[], boolean, boolean, int, int)&lt;/code&gt; constructor. In that case, this class assumes that the least significant n bits of a sample value hold the component value, where n is the number of significant bits for the component passed to the constructor. It also assumes that any higher-order bits in a sample value are zero. Thus, sample values range from 0 to 2&lt;sup&gt;n&lt;/sup&gt; - 1. This class maps these sample values to normalized color component values such that 0 maps to the value obtained from the &lt;code&gt;ColorSpace's getMinValue&lt;/code&gt; method for each component and 2&lt;sup&gt;n&lt;/sup&gt; - 1 maps to the value obtained from &lt;code&gt;getMaxValue&lt;/code&gt;. To create a &lt;code&gt;ComponentColorModel&lt;/code&gt; with a different color sample mapping requires subclassing this class and overriding the &lt;code&gt;getNormalizedComponents(Object, float[], int)&lt;/code&gt; method. The mapping for an alpha sample always maps 0 to 0.0 and 2&lt;sup&gt;n&lt;/sup&gt; - 1 to 1.0.</source>
          <target state="translated">転送タイプ &lt;code&gt;DataBuffer.TYPE_BYTE&lt;/code&gt; 、 &lt;code&gt;DataBuffer.TYPE_USHORT&lt;/code&gt; 、および &lt;code&gt;DataBuffer.TYPE_INT&lt;/code&gt; で作成された &lt;code&gt;ComponentColorModel&lt;/code&gt; のインスタンスには、符号なし整数値として扱われるピクセルサンプル値があります。ピクセル値のカラーまたはアルファサンプルのビット数は、 &lt;code&gt;ComponentColorModel(ColorSpace, int[], boolean, boolean, int, int)&lt;/code&gt; 渡される対応するカラーまたはアルファサンプルのビット数と同じでない場合があります。コンストラクタ。その場合、このクラスは、サンプル値の最下位nビットがコンポーネント値を保持していると想定します。ここで、nは、コンストラクターに渡されるコンポーネントの有効ビット数です。また、サンプル値の上位ビットはすべてゼロであると想定しています。したがって、サンプル値の範囲は0〜2 &lt;sup&gt;n&lt;/sup&gt; -1です。このクラスは、これらのサンプル値を正規化されたカラーコンポーネント値にマップし、0は各コンポーネントの &lt;code&gt;ColorSpace's getMinValue&lt;/code&gt; メソッドから取得した値にマップし、2 &lt;sup&gt;n&lt;/sup&gt; -1は取得した値にマップします &lt;code&gt;getMaxValue&lt;/code&gt; から。異なる色のサンプルマッピングを使用して &lt;code&gt;ComponentColorModel&lt;/code&gt; を作成するには、このクラスをサブクラス化し、 &lt;code&gt;getNormalizedComponents(Object, float[], int)&lt;/code&gt; メソッド。アルファサンプルのマッピングは、常に0から0.0および&lt;sup&gt;2n&lt;/sup&gt; -1から1.0にマッピングされます。</target>
        </trans-unit>
        <trans-unit id="2cbad77c776496dda6d9edcbf97f40ff8117f9c6" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;ComponentColorModel&lt;/code&gt; created with transfer types &lt;code&gt;DataBuffer.TYPE_SHORT&lt;/code&gt;, &lt;code&gt;DataBuffer.TYPE_FLOAT&lt;/code&gt;, and &lt;code&gt;DataBuffer.TYPE_DOUBLE&lt;/code&gt; have pixel sample values which are treated as signed short, float, or double values. Such instances do not support the unnormalized color/alpha component representation, so any methods taking such a representation as an argument will throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; when called on one of these instances. The normalized component values of instances of this class have a range which depends on the transfer type as follows: for float samples, the full range of the float data type; for double samples, the full range of the float data type (resulting from casting double to float); for short samples, from approximately -maxVal to +maxVal, where maxVal is the per component maximum value for the &lt;code&gt;ColorSpace&lt;/code&gt; (-32767 maps to -maxVal, 0 maps to 0.0, and 32767 maps to +maxVal). A subclass may override the scaling for short sample values to normalized component values by overriding the &lt;code&gt;getNormalizedComponents(Object, float[], int)&lt;/code&gt; method. For float and double samples, the normalized component values are taken to be equal to the corresponding sample values, and subclasses should not attempt to add any non-identity scaling for these transfer types.</source>
          <target state="translated">転送タイプ &lt;code&gt;DataBuffer.TYPE_SHORT&lt;/code&gt; 、 &lt;code&gt;DataBuffer.TYPE_FLOAT&lt;/code&gt; 、および &lt;code&gt;DataBuffer.TYPE_DOUBLE&lt;/code&gt; で作成された &lt;code&gt;ComponentColorModel&lt;/code&gt; のインスタンスには、符号付きshort、float、またはdouble値として扱われるピクセルサンプル値があります。このようなインスタンスは、正規化されていないカラー/アルファコンポーネント表現をサポートしていないため、このような表現を引数として取るメソッドは、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローします。これらのインスタンスの1つで呼び出されたとき。このクラスのインスタンスの正規化されたコンポーネント値の範囲は、次のように転送タイプによって異なります。floatサンプルの場合、floatデータ型の全範囲。 doubleサンプルの場合、floatデータ型の全範囲（doubleをfloatにキャストした結果）。短いサンプルの場合、約-maxValから+ maxValまで。ここで、maxValは &lt;code&gt;ColorSpace&lt;/code&gt; のコンポーネントごとの最大値です（-32767は-maxValにマップされ、0は0.0にマップされ、32767は+ maxValにマップされます）。サブクラスは、 &lt;code&gt;getNormalizedComponents(Object, float[], int)&lt;/code&gt; オーバーライドすることにより、短いサンプル値の正規化されたコンポーネント値へのスケーリングをオーバーライドできます。方法。 floatサンプルとdoubleサンプルの場合、正規化されたコンポーネント値は対応するサンプル値と等しいと見なされ、サブクラスはこれらの転送タイプに非同一性スケーリングを追加しようとしないでください。</target>
        </trans-unit>
        <trans-unit id="ee5c7dfa1d61526b9a97c3b645a825ad30006f47" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;ComponentColorModel&lt;/code&gt; created with transfer types &lt;code&gt;DataBuffer.TYPE_SHORT&lt;/code&gt;, &lt;code&gt;DataBuffer.TYPE_FLOAT&lt;/code&gt;, and &lt;code&gt;DataBuffer.TYPE_DOUBLE&lt;/code&gt; use all the bits of all sample values. Thus all color/alpha components have 16 bits when using &lt;code&gt;DataBuffer.TYPE_SHORT&lt;/code&gt;, 32 bits when using &lt;code&gt;DataBuffer.TYPE_FLOAT&lt;/code&gt;, and 64 bits when using &lt;code&gt;DataBuffer.TYPE_DOUBLE&lt;/code&gt;. When the &lt;code&gt;ComponentColorModel(ColorSpace, int[], boolean, boolean, int, int)&lt;/code&gt; form of constructor is used with one of these transfer types, the bits array argument is ignored.</source>
          <target state="translated">転送タイプ &lt;code&gt;DataBuffer.TYPE_SHORT&lt;/code&gt; 、 &lt;code&gt;DataBuffer.TYPE_FLOAT&lt;/code&gt; 、および &lt;code&gt;DataBuffer.TYPE_DOUBLE&lt;/code&gt; で作成された &lt;code&gt;ComponentColorModel&lt;/code&gt; のインスタンスは、すべてのサンプル値のすべてのビットを使用します。したがって、すべてのカラー/アルファコンポーネントは、 &lt;code&gt;DataBuffer.TYPE_SHORT&lt;/code&gt; を使用する場合は16ビット、DataBuffer.TYPE_FLOATを使用する場合は32ビット、 &lt;code&gt;DataBuffer.TYPE_FLOAT&lt;/code&gt; を使用する場合は64ビットになり &lt;code&gt;DataBuffer.TYPE_DOUBLE&lt;/code&gt; 。場合 &lt;code&gt;ComponentColorModel(ColorSpace, int[], boolean, boolean, int, int)&lt;/code&gt; コンストラクタの形式は、これらの転送タイプのいずれかで使用され、ビット配列引数は無視されます。</target>
        </trans-unit>
        <trans-unit id="437d2f6ee10982e00c4257cf74ea0f7192cb74ad" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;DefaultFormatter&lt;/code&gt; can not be used in multiple instances of &lt;code&gt;JFormattedTextField&lt;/code&gt;. To obtain a copy of an already configured &lt;code&gt;DefaultFormatter&lt;/code&gt;, use the &lt;code&gt;clone&lt;/code&gt; method.</source>
          <target state="translated">インスタンス &lt;code&gt;DefaultFormatter&lt;/code&gt; は、複数のインスタンスで使用することはできない &lt;code&gt;JFormattedTextField&lt;/code&gt; 。構成済みの &lt;code&gt;DefaultFormatter&lt;/code&gt; のコピーを取得するには、 &lt;code&gt;clone&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="126d0331141ca84895a21c24f5302e0847cf0036" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;Era&lt;/code&gt; may be compared using the &lt;code&gt;==&lt;/code&gt; operator.</source>
          <target state="translated">&lt;code&gt;Era&lt;/code&gt; のインスタンスは、 &lt;code&gt;==&lt;/code&gt; 演算子を使用して比較できます。</target>
        </trans-unit>
        <trans-unit id="d61481fce927bbff256b097dda520b529abbfb4f" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;GlyphVector&lt;/code&gt; are created by a &lt;a href=&quot;../font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;GlyphVector&lt;/code&gt; のインスタンスは、&lt;a href=&quot;../font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; &lt;/a&gt;によって作成されます。</target>
        </trans-unit>
        <trans-unit id="8e2be5186c3a7c225a0112807eebeff3820313c0" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;HttpRequest.Builder&lt;/code&gt; are created by calling &lt;a href=&quot;httprequest#newBuilder(java.net.URI)&quot;&gt;&lt;code&gt;HttpRequest.newBuilder(URI)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;httprequest#newBuilder()&quot;&gt;&lt;code&gt;HttpRequest.newBuilder()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;HttpRequest.Builder&lt;/code&gt; のインスタンスは、HttpRequest.newBuilder &lt;a href=&quot;httprequest#newBuilder(java.net.URI)&quot;&gt; &lt;code&gt;HttpRequest.newBuilder(URI)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;httprequest#newBuilder()&quot;&gt; &lt;code&gt;HttpRequest.newBuilder()&lt;/code&gt; を&lt;/a&gt;呼び出すことによって作成されます。</target>
        </trans-unit>
        <trans-unit id="59020c0ac51a0c78760e2a36a671a7b252dbaaa2" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;JobStateReason&lt;/code&gt; do not appear in a Print Job's attribute set directly. Rather, a &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute appears in the Print Job's attribute set. The &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute contains zero, one, or more than one &lt;code&gt;JobStateReason&lt;/code&gt; objects which pertain to the Print Job's status. The printer adds a JobStateReason object to the Print Job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute when the corresponding condition becomes true of the Print Job, and the printer removes the &lt;code&gt;JobStateReason&lt;/code&gt; object again when the corresponding condition becomes false, regardless of whether the Print Job's overall &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; also changed.</source>
          <target state="translated">&lt;code&gt;JobStateReason&lt;/code&gt; のインスタンスは、印刷ジョブの属性セットに直接表示されません。むしろ、&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性は印刷ジョブの属性セットに表示されます。&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; 属性の&lt;/a&gt;属性は、ゼロ、1、または複数含まれてい &lt;code&gt;JobStateReason&lt;/code&gt; の印刷ジョブのステータスに関連するオブジェクトを。プリンタは、対応する条件が印刷ジョブでtrueになると、JobStateReasonオブジェクトを印刷ジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性に追加し、対応する条件がfalseになると、印刷ジョブの全体的な&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;も変更されたかどうかに関係なく、 &lt;code&gt;JobStateReason&lt;/code&gt; オブジェクトを再度削除します。</target>
        </trans-unit>
        <trans-unit id="4a4fb7128d99326f2325f51bfff349277d351c1f" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;NumericShaper&lt;/code&gt; are typically applied as attributes to text with the &lt;a href=&quot;textattribute#NUMERIC_SHAPING&quot;&gt;&lt;code&gt;NUMERIC_SHAPING&lt;/code&gt;&lt;/a&gt; attribute of the &lt;code&gt;TextAttribute&lt;/code&gt; class. For example, this code snippet causes a &lt;code&gt;TextLayout&lt;/code&gt; to shape European digits to Arabic in an Arabic context:</source>
          <target state="translated">&lt;code&gt;NumericShaper&lt;/code&gt; のインスタンスは通常、 &lt;code&gt;TextAttribute&lt;/code&gt; クラスの&lt;a href=&quot;textattribute#NUMERIC_SHAPING&quot;&gt; &lt;code&gt;NUMERIC_SHAPING&lt;/code&gt; &lt;/a&gt;属性を持つテキストへの属性として適用されます。たとえば、このコードスニペットにより、 &lt;code&gt;TextLayout&lt;/code&gt; は、アラビア語のコンテキストでヨーロッパの数字をアラビア語に整形します。</target>
        </trans-unit>
        <trans-unit id="14e88cddd7ac56cb42b0c2e44f34d71e3681bb9d" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;PKIXCertPathBuilderResult&lt;/code&gt; are returned by the &lt;code&gt;build&lt;/code&gt; method of &lt;code&gt;CertPathBuilder&lt;/code&gt; objects implementing the PKIX algorithm.</source>
          <target state="translated">&lt;code&gt;PKIXCertPathBuilderResult&lt;/code&gt; のインスタンスは、PKIXアルゴリズムを実装する &lt;code&gt;CertPathBuilder&lt;/code&gt; オブジェクトの &lt;code&gt;build&lt;/code&gt; メソッドによって返されます。</target>
        </trans-unit>
        <trans-unit id="785ff21f966904331298a4f2936dfa1ccab7d023" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; are passed as parameters using the &lt;a href=&quot;pkixparameters#setCertPathCheckers(java.util.List)&quot;&gt;&lt;code&gt;setCertPathCheckers&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pkixparameters#addCertPathChecker(java.security.cert.PKIXCertPathChecker)&quot;&gt;&lt;code&gt;addCertPathChecker&lt;/code&gt;&lt;/a&gt; methods of the &lt;code&gt;PKIXParameters&lt;/code&gt; and &lt;code&gt;PKIXBuilderParameters&lt;/code&gt; class. Each of the &lt;code&gt;PKIXCertPathChecker&lt;/code&gt;s &lt;a href=&quot;#check(java.security.cert.Certificate,java.util.Collection)&quot;&gt;&lt;code&gt;check&lt;/code&gt;&lt;/a&gt; methods will be called, in turn, for each certificate processed by a PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; or &lt;code&gt;CertPathBuilder&lt;/code&gt; implementation.</source>
          <target state="translated">&lt;code&gt;PKIXCertPathChecker&lt;/code&gt; のインスタンスは、 &lt;code&gt;PKIXParameters&lt;/code&gt; および &lt;code&gt;PKIXBuilderParameters&lt;/code&gt; クラスの&lt;a href=&quot;pkixparameters#setCertPathCheckers(java.util.List)&quot;&gt; &lt;code&gt;setCertPathCheckers&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;pkixparameters#addCertPathChecker(java.security.cert.PKIXCertPathChecker)&quot;&gt; &lt;code&gt;addCertPathChecker&lt;/code&gt; &lt;/a&gt;メソッドを使用してパラメーターとして渡されます。それぞれ &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; の&lt;a href=&quot;#check(java.security.cert.Certificate,java.util.Collection)&quot;&gt; &lt;code&gt;check&lt;/code&gt; &lt;/a&gt;方法は、PKIXによって処理された各証明書のために、順番に、呼び出される &lt;code&gt;CertPathValidator&lt;/code&gt; または &lt;code&gt;CertPathBuilder&lt;/code&gt; 実装。</target>
        </trans-unit>
        <trans-unit id="4d366cf9d13c559931a935b4b4d0d268d87fe42d" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; are passed as parameters using the &lt;a href=&quot;pkixparameters#setCertPathCheckers-java.util.List-&quot;&gt;&lt;code&gt;setCertPathCheckers&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pkixparameters#addCertPathChecker-java.security.cert.PKIXCertPathChecker-&quot;&gt;&lt;code&gt;addCertPathChecker&lt;/code&gt;&lt;/a&gt; methods of the &lt;code&gt;PKIXParameters&lt;/code&gt; and &lt;code&gt;PKIXBuilderParameters&lt;/code&gt; class. Each of the &lt;code&gt;PKIXCertPathChecker&lt;/code&gt;s &lt;a href=&quot;pkixcertpathchecker#check-java.security.cert.Certificate-java.util.Collection-&quot;&gt;&lt;code&gt;check&lt;/code&gt;&lt;/a&gt; methods will be called, in turn, for each certificate processed by a PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; or &lt;code&gt;CertPathBuilder&lt;/code&gt; implementation.</source>
          <target state="translated">&lt;code&gt;PKIXCertPathChecker&lt;/code&gt; のインスタンスは、 &lt;code&gt;PKIXParameters&lt;/code&gt; および &lt;code&gt;PKIXBuilderParameters&lt;/code&gt; クラスの&lt;a href=&quot;pkixparameters#setCertPathCheckers-java.util.List-&quot;&gt; &lt;code&gt;setCertPathCheckers&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;pkixparameters#addCertPathChecker-java.security.cert.PKIXCertPathChecker-&quot;&gt; &lt;code&gt;addCertPathChecker&lt;/code&gt; &lt;/a&gt;メソッドを使用してパラメーターとして渡されます。 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; の各&lt;a href=&quot;pkixcertpathchecker#check-java.security.cert.Certificate-java.util.Collection-&quot;&gt; &lt;code&gt;check&lt;/code&gt; &lt;/a&gt;メソッドは、PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; または &lt;code&gt;CertPathBuilder&lt;/code&gt; 実装によって処理される証明書ごとに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="b8a4c0a07568817764bb9623b6e8870f9ea1f09e" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;PKIXCertPathValidatorResult&lt;/code&gt; are returned by the &lt;a href=&quot;certpathvalidator#validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)&quot;&gt;&lt;code&gt;validate&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;CertPathValidator&lt;/code&gt; objects implementing the PKIX algorithm.</source>
          <target state="translated">&lt;code&gt;PKIXCertPathValidatorResult&lt;/code&gt; のインスタンスは、PKIXアルゴリズムを実装する &lt;code&gt;CertPathValidator&lt;/code&gt; オブジェクトの&lt;a href=&quot;certpathvalidator#validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)&quot;&gt; &lt;code&gt;validate&lt;/code&gt; &lt;/a&gt;メソッドによって返されます。</target>
        </trans-unit>
        <trans-unit id="3c36aa84f25fbcf87463e37d4c48cd1442d1e373" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;PKIXCertPathValidatorResult&lt;/code&gt; are returned by the &lt;a href=&quot;certpathvalidator#validate-java.security.cert.CertPath-java.security.cert.CertPathParameters-&quot;&gt;&lt;code&gt;validate&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;CertPathValidator&lt;/code&gt; objects implementing the PKIX algorithm.</source>
          <target state="translated">&lt;code&gt;PKIXCertPathValidatorResult&lt;/code&gt; のインスタンスは、PKIXアルゴリズムを実装する &lt;code&gt;CertPathValidator&lt;/code&gt; オブジェクトの&lt;a href=&quot;certpathvalidator#validate-java.security.cert.CertPath-java.security.cert.CertPathParameters-&quot;&gt; &lt;code&gt;validate&lt;/code&gt; &lt;/a&gt;メソッドによって返されます。</target>
        </trans-unit>
        <trans-unit id="0093c3b5eaeb2fde2e1ad84bf0db8bc16ce51340" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;PrinterStateReason&lt;/code&gt; do not appear in a Print Service's attribute set directly. Rather, a &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attribute appears in the Print Service's attribute set. The &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attribute contains zero, one, or more than one &lt;code&gt;PrinterStateReason&lt;/code&gt; objects which pertain to the Print Service's status, and each PrinterStateReason object is associated with a &lt;a href=&quot;severity&quot;&gt;&lt;code&gt;Severity&lt;/code&gt;&lt;/a&gt; level of &lt;code&gt;REPORT&lt;/code&gt; (least severe), &lt;code&gt;WARNING&lt;/code&gt;, or &lt;code&gt;ERROR&lt;/code&gt; (most severe). The printer adds a &lt;code&gt;PrinterStateReason&lt;/code&gt; object to the Print Service's &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attribute when the corresponding condition becomes true of the printer, and the printer removes the &lt;code&gt;PrinterStateReason&lt;/code&gt; object again when the corresponding condition becomes false, regardless of whether the Print Service's overall &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; also changed.</source>
          <target state="translated">&lt;code&gt;PrinterStateReason&lt;/code&gt; のインスタンスは、PrintServiceの属性セットに直接表示されません。むしろ、&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; &lt;/a&gt;属性がPrintServiceの属性セットに表示されます。&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; の&lt;/a&gt;属性は、ゼロ、1、または複数含まれてい &lt;code&gt;PrinterStateReason&lt;/code&gt; 印刷サービスのステータスに関連するオブジェクトを、それぞれたPrinterStateReasonオブジェクトが関連付けられている&lt;a href=&quot;severity&quot;&gt; &lt;code&gt;Severity&lt;/code&gt; &lt;/a&gt;のレベル &lt;code&gt;REPORT&lt;/code&gt; （少なくとも重度）、 &lt;code&gt;WARNING&lt;/code&gt; 、または &lt;code&gt;ERROR&lt;/code&gt; （最も厳しいです）。プリンタが追加され &lt;code&gt;PrinterStateReason&lt;/code&gt; 印刷サービスのにオブジェクトを&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; &lt;/a&gt;対応する条件がプリンターでtrueになると属性になり、対応する条件がfalseになると、Print Serviceの全体的な&lt;a href=&quot;printerstate&quot;&gt; &lt;code&gt;PrinterState&lt;/code&gt; &lt;/a&gt;も変更されたかどうかに関係なく、プリンターは &lt;code&gt;PrinterStateReason&lt;/code&gt; オブジェクトを再度削除します。</target>
        </trans-unit>
        <trans-unit id="89edd298c4e6006ce038124d631849a6d1516980" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;Severity&lt;/code&gt; do not appear in a Print Service's attribute set directly. Rather, a &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attribute appears in the Print Service's attribute set. The &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attribute contains zero, one, or more than one &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; objects which pertain to the Print Service's status, and each &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; object is associated with a Severity level of &lt;code&gt;REPORT&lt;/code&gt; (least severe), &lt;code&gt;WARNING&lt;/code&gt;, or &lt;code&gt;ERROR&lt;/code&gt; (most severe). The printer adds a &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; object to the Print Service's &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attribute when the corresponding condition becomes true of the printer, and the printer removes the &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; object again when the corresponding condition becomes false, regardless of whether the Print Service's overall &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; also changed.</source>
          <target state="translated">&lt;code&gt;Severity&lt;/code&gt; インスタンスは、印刷サービスの属性セットに直接表示されません。むしろ、&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; &lt;/a&gt;属性がPrintServiceの属性セットに表示されます。&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; の&lt;/a&gt;属性は、ゼロ、1、または複数含まれてい&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;印刷サービスのステータスに関連するオブジェクトを、それぞれ&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;オブジェクトはの重大度レベルに関連付けられている &lt;code&gt;REPORT&lt;/code&gt; （重要）、 &lt;code&gt;WARNING&lt;/code&gt; 、または &lt;code&gt;ERROR&lt;/code&gt; （最も厳しいです）。プリンタが追加され&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;印刷サービスのにオブジェクトを&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; &lt;/a&gt;対応する条件がプリンターでtrueになると属性になり、対応する条件がfalseになると、Print Serviceの全体的な&lt;a href=&quot;printerstate&quot;&gt; &lt;code&gt;PrinterState&lt;/code&gt; &lt;/a&gt;も変更されたかどうかに関係なく、プリンターは&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;オブジェクトを再度削除します。</target>
        </trans-unit>
        <trans-unit id="34f161cbd93d855e3620692f2a06a00dd72e6149" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;SplittableRandom&lt;/code&gt; are not cryptographically secure. Consider instead using &lt;a href=&quot;../security/securerandom&quot;&gt;&lt;code&gt;SecureRandom&lt;/code&gt;&lt;/a&gt; in security-sensitive applications. Additionally, default-constructed instances do not use a cryptographically random seed unless the &lt;a href=&quot;../lang/system#getProperty(java.lang.String)&quot;&gt;system property&lt;/a&gt;&lt;code&gt;&lt;span id=&quot;java.util.secureRandomSeed&quot;&gt;java.util.secureRandomSeed&lt;/span&gt;&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1756c58eb06724d4432678221890eafb534786" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;SplittableRandom&lt;/code&gt; are not cryptographically secure. Consider instead using &lt;a href=&quot;../security/securerandom&quot;&gt;&lt;code&gt;SecureRandom&lt;/code&gt;&lt;/a&gt; in security-sensitive applications. Additionally, default-constructed instances do not use a cryptographically random seed unless the &lt;a href=&quot;../lang/system#getProperty(java.lang.String)&quot;&gt;system property&lt;/a&gt;&lt;code&gt;java.util.secureRandomSeed&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SplittableRandom&lt;/code&gt; のインスタンスは、暗号的に安全ではありません。代わりに、セキュリティが重要なアプリケーションで&lt;a href=&quot;../security/securerandom&quot;&gt; &lt;code&gt;SecureRandom&lt;/code&gt; &lt;/a&gt;を使用することを検討してください。さらに、デフォルトで構築されたインスタンスは、&lt;a href=&quot;../lang/system#getProperty(java.lang.String)&quot;&gt;システムプロパティ&lt;/a&gt; &lt;code&gt;java.util.secureRandomSeed&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; に設定されていない限り、暗号的にランダムなシードを使用しません。</target>
        </trans-unit>
        <trans-unit id="7f29041b4ab306b56164893a87e40564823ca603" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;SplittableRandom&lt;/code&gt; are not cryptographically secure. Consider instead using &lt;a href=&quot;../security/securerandom&quot;&gt;&lt;code&gt;SecureRandom&lt;/code&gt;&lt;/a&gt; in security-sensitive applications. Additionally, default-constructed instances do not use a cryptographically random seed unless the &lt;a href=&quot;../lang/system#getProperty-java.lang.String-&quot;&gt;system property&lt;/a&gt;&lt;code&gt;java.util.secureRandomSeed&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SplittableRandom&lt;/code&gt; のインスタンスは暗号的に安全ではありません。代わりに、セキュリティが重要なアプリケーションで&lt;a href=&quot;../security/securerandom&quot;&gt; &lt;code&gt;SecureRandom&lt;/code&gt; &lt;/a&gt;を使用することを検討してください。さらに、&lt;a href=&quot;../lang/system#getProperty-java.lang.String-&quot;&gt;システムプロパティ&lt;/a&gt; &lt;code&gt;java.util.secureRandomSeed&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; に設定されていない限り、デフォルトで作成されたインスタンスは暗号的にランダムなシードを使用しません。</target>
        </trans-unit>
        <trans-unit id="4cdf6f48386e1885b2c94ad1ffdebe910ac0da44" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;StringBuilder&lt;/code&gt; are not safe for use by multiple threads. If such synchronization is required then it is recommended that &lt;a href=&quot;stringbuffer&quot;&gt;&lt;code&gt;StringBuffer&lt;/code&gt;&lt;/a&gt; be used.</source>
          <target state="translated">&lt;code&gt;StringBuilder&lt;/code&gt; のインスタンスは、複数のスレッドによる使用には安全ではありません。このような同期が必要な場合は、&lt;a href=&quot;stringbuffer&quot;&gt; &lt;code&gt;StringBuffer&lt;/code&gt; &lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="27b8886190a2f7865fb4af53792b206379baa8bd" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;SynthPainter&lt;/code&gt; are obtained from the &lt;a href=&quot;synthstyle#getPainter(javax.swing.plaf.synth.SynthContext)&quot;&gt;&lt;code&gt;SynthStyle.getPainter(javax.swing.plaf.synth.SynthContext)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;SynthPainter&lt;/code&gt; のインスタンスは、&lt;a href=&quot;synthstyle#getPainter(javax.swing.plaf.synth.SynthContext)&quot;&gt; &lt;code&gt;SynthStyle.getPainter(javax.swing.plaf.synth.SynthContext)&lt;/code&gt; &lt;/a&gt;メソッドから取得されます。</target>
        </trans-unit>
        <trans-unit id="2a1416a805d448219615e770f206ccb489d7720f" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;ThreadLocalRandom&lt;/code&gt; are not cryptographically secure. Consider instead using &lt;a href=&quot;../../security/securerandom&quot;&gt;&lt;code&gt;SecureRandom&lt;/code&gt;&lt;/a&gt; in security-sensitive applications. Additionally, default-constructed instances do not use a cryptographically random seed unless the &lt;a href=&quot;../../lang/system#getProperty(java.lang.String)&quot;&gt;system property&lt;/a&gt;&lt;code&gt;java.util.secureRandomSeed&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ThreadLocalRandom&lt;/code&gt; のインスタンスは、暗号的に安全ではありません。代わりに、セキュリティが重要なアプリケーションで&lt;a href=&quot;../../security/securerandom&quot;&gt; &lt;code&gt;SecureRandom&lt;/code&gt; &lt;/a&gt;を使用することを検討してください。さらに、デフォルトで構築されたインスタンスは、&lt;a href=&quot;../../lang/system#getProperty(java.lang.String)&quot;&gt;システムプロパティ&lt;/a&gt; &lt;code&gt;java.util.secureRandomSeed&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; に設定されていない限り、暗号的にランダムなシードを使用しません。</target>
        </trans-unit>
        <trans-unit id="ea05503a48bfa251404d2e9f3cb1fdac14644ff2" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;ThreadLocalRandom&lt;/code&gt; are not cryptographically secure. Consider instead using &lt;a href=&quot;../../security/securerandom&quot;&gt;&lt;code&gt;SecureRandom&lt;/code&gt;&lt;/a&gt; in security-sensitive applications. Additionally, default-constructed instances do not use a cryptographically random seed unless the &lt;a href=&quot;../../lang/system#getProperty-java.lang.String-&quot;&gt;system property&lt;/a&gt;&lt;code&gt;java.util.secureRandomSeed&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ThreadLocalRandom&lt;/code&gt; のインスタンスは暗号的に安全ではありません。代わりに、セキュリティが重要なアプリケーションで&lt;a href=&quot;../../security/securerandom&quot;&gt; &lt;code&gt;SecureRandom&lt;/code&gt; &lt;/a&gt;を使用することを検討してください。さらに、&lt;a href=&quot;../../lang/system#getProperty-java.lang.String-&quot;&gt;システムプロパティ&lt;/a&gt; &lt;code&gt;java.util.secureRandomSeed&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; に設定されていない限り、デフォルトで作成されたインスタンスは暗号的にランダムなシードを使用しません。</target>
        </trans-unit>
        <trans-unit id="c5e35a073a3122a9ebb2571b06c4ad671c38435e" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;ZoneOffset&lt;/code&gt; must be compared using &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt;. Implementations may choose to cache certain common offsets, however applications must not rely on such caching.</source>
          <target state="translated">&lt;code&gt;ZoneOffset&lt;/code&gt; のインスタンスは、&lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;を使用して比較する必要があります。実装は特定の一般的なオフセットをキャッシュすることを選択できますが、アプリケーションはそのようなキャッシュに依存してはなりません。</target>
        </trans-unit>
        <trans-unit id="451fb72fd0261346a7c2eccbf6fef609a8eed4a0" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;ZoneOffset&lt;/code&gt; must be compared using &lt;a href=&quot;zoneoffset#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt;. Implementations may choose to cache certain common offsets, however applications must not rely on such caching.</source>
          <target state="translated">&lt;code&gt;ZoneOffset&lt;/code&gt; のインスタンスは、&lt;a href=&quot;zoneoffset#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;を使用して比較する必要があります。実装では、特定の一般的なオフセットをキャッシュすることを選択できますが、アプリケーションはそのようなキャッシュに依存してはなりません。</target>
        </trans-unit>
        <trans-unit id="2abd5e83f7981ce90b52e6f1fd38af2e1df912d4" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;java.util.Random&lt;/code&gt; are not cryptographically secure. Consider instead using &lt;a href=&quot;../security/securerandom&quot;&gt;&lt;code&gt;SecureRandom&lt;/code&gt;&lt;/a&gt; to get a cryptographically secure pseudo-random number generator for use by security-sensitive applications.</source>
          <target state="translated">&lt;code&gt;java.util.Random&lt;/code&gt; のインスタンスは暗号的に安全ではありません。代わりに&lt;a href=&quot;../security/securerandom&quot;&gt; &lt;code&gt;SecureRandom&lt;/code&gt; &lt;/a&gt;を使用して、セキュリティ上重要なアプリケーションで使用するための暗号的に安全な疑似乱数ジェネレータを取得することを検討してください。</target>
        </trans-unit>
        <trans-unit id="a36c4741a9d049049a0699ce8d5e0abadac16362" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;java.util.Random&lt;/code&gt; are threadsafe. However, the concurrent use of the same &lt;code&gt;java.util.Random&lt;/code&gt; instance across threads may encounter contention and consequent poor performance. Consider instead using &lt;a href=&quot;concurrent/threadlocalrandom&quot;&gt;&lt;code&gt;ThreadLocalRandom&lt;/code&gt;&lt;/a&gt; in multithreaded designs.</source>
          <target state="translated">&lt;code&gt;java.util.Random&lt;/code&gt; のインスタンスはスレッドセーフです。ただし、スレッド間で同じ &lt;code&gt;java.util.Random&lt;/code&gt; インスタンスを同時に使用すると、競合が発生し、結果としてパフォーマンスが低下する可能性があります。代わりに、マルチスレッド設計で&lt;a href=&quot;concurrent/threadlocalrandom&quot;&gt; &lt;code&gt;ThreadLocalRandom&lt;/code&gt; &lt;/a&gt;を使用することを検討してください。</target>
        </trans-unit>
        <trans-unit id="4a39ac6c8574096a3e29988fda7641285c4490ba" translate="yes" xml:space="preserve">
          <source>Instances of JobStateReason do not appear in a Print Job's attribute set directly. Rather, a &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute appears in the Print Job's attribute set. The &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute contains zero, one, or more than one JobStateReason objects which pertain to the Print Job's status. The printer adds a JobStateReason object to the Print Job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute when the corresponding condition becomes true of the Print Job, and the printer removes the JobStateReason object again when the corresponding condition becomes false, regardless of whether the Print Job's overall &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; also changed.</source>
          <target state="translated">JobStateReasonのインスタンスは、印刷ジョブの属性セットに直接表示されません。むしろ、&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性は、印刷ジョブの属性セットに表示されます。&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; 属性の&lt;/a&gt;属性は、印刷ジョブのステータスに関連する、ゼロ、1、または複数のJobStateReasonオブジェクトが含まれています。プリンターは、印刷ジョブの対応する条件がtrueになるとJobStateReasonオブジェクトを印刷ジョブの&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性に追加し、対応する条件がfalseになると、印刷ジョブの全体的な&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;も変更されたかどうかに関係なく、プリンターはJobStateReasonオブジェクトを再び削除します。</target>
        </trans-unit>
        <trans-unit id="f5bf3cdbf5c8f5c74ee3428ad5d1628b4d96f1b8" translate="yes" xml:space="preserve">
          <source>Instances of PrinterStateReason do not appear in a Print Service's attribute set directly. Rather, a &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attribute appears in the Print Service's attribute set. The &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attribute contains zero, one, or more than one PrinterStateReason objects which pertain to the Print Service's status, and each PrinterStateReason object is associated with a &lt;a href=&quot;severity&quot;&gt;&lt;code&gt;Severity&lt;/code&gt;&lt;/a&gt; level of REPORT (least severe), WARNING, or ERROR (most severe). The printer adds a PrinterStateReason object to the Print Service's &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attribute when the corresponding condition becomes true of the printer, and the printer removes the PrinterStateReason object again when the corresponding condition becomes false, regardless of whether the Print Service's overall &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; also changed.</source>
          <target state="translated">PrinterStateReasonのインスタンスは、印刷サービスの属性セットに直接表示されません。代わりに、&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; &lt;/a&gt;属性が印刷サービスの属性セットに表示されます。&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; の&lt;/a&gt;属性は、印刷サービスのステータスに関連する、ゼロ、1、または複数のするPrinterStateReasonオブジェクトが含まれており、各たPrinterStateReasonオブジェクトが関連付けられている&lt;a href=&quot;severity&quot;&gt; &lt;code&gt;Severity&lt;/code&gt; &lt;/a&gt;（最低重度）REPORTのレベル、WARNING、またはERROR（最も厳しいです）。プリンターは、PrinterStateReasonオブジェクトを印刷サービスの&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; に&lt;/a&gt;追加します。プリンターの対応する条件がtrueになると属性が返され、対応する条件がfalseになると、Print Service全体の&lt;a href=&quot;printerstate&quot;&gt; &lt;code&gt;PrinterState&lt;/code&gt; &lt;/a&gt;も変更されたかどうかに関係なく、プリンターは再びPrinterStateReasonオブジェクトを削除します。</target>
        </trans-unit>
        <trans-unit id="7044d9488e4669a96b1fc43d64704198a8173c6f" translate="yes" xml:space="preserve">
          <source>Instances of Severity do not appear in a Print Service's attribute set directly. Rather, a &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attribute appears in the Print Service's attribute set. The &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attribute contains zero, one, or more than one &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; objects which pertain to the Print Service's status, and each &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; object is associated with a Severity level of REPORT (least severe), WARNING, or ERROR (most severe). The printer adds a &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; object to the Print Service's &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attribute when the corresponding condition becomes true of the printer, and the printer removes the &lt;a href=&quot;printerstatereason&quot;&gt;&lt;code&gt;PrinterStateReason&lt;/code&gt;&lt;/a&gt; object again when the corresponding condition becomes false, regardless of whether the Print Service's overall &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; also changed.</source>
          <target state="translated">重大度のインスタンスは、印刷サービスの属性セットに直接表示されません。代わりに、&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; &lt;/a&gt;属性が印刷サービスの属性セットに表示されます。&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; の&lt;/a&gt;属性は、ゼロ、1、または複数含まれてい&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;印刷サービスのステータスに関連するオブジェクトを、それぞれ&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;オブジェクトは（少なくとも重度）REPORTの重大度レベルに関連付けられている、WARNING、またはERROR（最も厳しいです）。プリンターは、プリンターの対応する条件がtrueになり、プリンターが&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; を&lt;/a&gt;削除すると、&lt;a href=&quot;printerstatereason&quot;&gt; &lt;code&gt;PrinterStateReason&lt;/code&gt; &lt;/a&gt;オブジェクトを印刷サービスの&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; &lt;/a&gt;属性に追加します。プリントサービスの全体的な&lt;a href=&quot;printerstate&quot;&gt; &lt;code&gt;PrinterState&lt;/code&gt; &lt;/a&gt;も変更されたかどうかに関係なく、対応する条件がfalseになったときにオブジェクトを再び。</target>
        </trans-unit>
        <trans-unit id="24dc19647563b6cde90ca09a1234dcf905a5b4b4" translate="yes" xml:space="preserve">
          <source>Instances of SplittableRandom are &lt;em&gt;not&lt;/em&gt; thread-safe. They are designed to be split, not shared, across threads. For example, a &lt;a href=&quot;concurrent/forkjointask&quot;&gt;&lt;code&gt;fork/join-style&lt;/code&gt;&lt;/a&gt; computation using random numbers might include a construction of the form &lt;code&gt;new
 Subtask(aSplittableRandom.split()).fork()&lt;/code&gt;.</source>
          <target state="translated">SplittableRandomのインスタンスはスレッドセーフではあり&lt;em&gt;ません&lt;/em&gt;。それらはスレッド間で共有されるのではなく分割されるように設計されています。たとえば、乱数を使用した&lt;a href=&quot;concurrent/forkjointask&quot;&gt; &lt;code&gt;fork/join-style&lt;/code&gt; &lt;/a&gt;計算には、 &lt;code&gt;new Subtask(aSplittableRandom.split()).fork()&lt;/code&gt; という形式の構成が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="c5ea98a10ae1f6449546ba74d67b14fb254a05de" translate="yes" xml:space="preserve">
          <source>Instances of classes &lt;a href=&quot;atomicboolean&quot;&gt;&lt;code&gt;AtomicBoolean&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;atomicinteger&quot;&gt;&lt;code&gt;AtomicInteger&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;atomiclong&quot;&gt;&lt;code&gt;AtomicLong&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;atomicreference&quot;&gt;&lt;code&gt;AtomicReference&lt;/code&gt;&lt;/a&gt; each provide access and updates to a single variable of the corresponding type. Each class also provides appropriate utility methods for that type. For example, classes &lt;code&gt;AtomicLong&lt;/code&gt; and &lt;code&gt;AtomicInteger&lt;/code&gt; provide atomic increment methods. One application is to generate sequence numbers, as in:</source>
          <target state="translated">クラス&lt;a href=&quot;atomicboolean&quot;&gt; &lt;code&gt;AtomicBoolean&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;atomicinteger&quot;&gt; &lt;code&gt;AtomicInteger&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;atomiclong&quot;&gt; &lt;code&gt;AtomicLong&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;atomicreference&quot;&gt; &lt;code&gt;AtomicReference&lt;/code&gt; の&lt;/a&gt;インスタンスはそれぞれ、対応する型の単一の変数へのアクセスと更新を提供します。各クラスは、そのタイプに適切なユーティリティメソッドも提供します。たとえば、 &lt;code&gt;AtomicLong&lt;/code&gt; クラスと &lt;code&gt;AtomicInteger&lt;/code&gt; クラスは、アトミック増分メソッドを提供します。1つのアプリケーションは、次のようにシーケンス番号を生成することです。</target>
        </trans-unit>
        <trans-unit id="4e507ccd4a802734dfece20003dd6326128d20ad" translate="yes" xml:space="preserve">
          <source>Instances of classes implementing &lt;code&gt;Composite&lt;/code&gt; must be immutable because the &lt;code&gt;Graphics2D&lt;/code&gt; does not clone these objects when they are set as an attribute with the &lt;code&gt;setComposite&lt;/code&gt; method or when the &lt;code&gt;Graphics2D&lt;/code&gt; object is cloned. This is to avoid undefined rendering behavior of &lt;code&gt;Graphics2D&lt;/code&gt;, resulting from the modification of the &lt;code&gt;Composite&lt;/code&gt; object after it has been set in the &lt;code&gt;Graphics2D&lt;/code&gt; context.</source>
          <target state="translated">実装するクラスのインスタンス &lt;code&gt;Composite&lt;/code&gt; ので、不変でなければならない &lt;code&gt;Graphics2D&lt;/code&gt; これらが持つ属性として設定されている場合、これらのオブジェクトのクローンを作成しません &lt;code&gt;setComposite&lt;/code&gt; メソッドメソッドまたはとき &lt;code&gt;Graphics2D&lt;/code&gt; オブジェクトが複製されます。これは、 &lt;code&gt;Graphics2D&lt;/code&gt; コンテキストで設定された後の &lt;code&gt;Composite&lt;/code&gt; オブジェクトの変更に起因する、 &lt;code&gt;Graphics2D&lt;/code&gt; の未定義のレンダリング動作を回避するためです。</target>
        </trans-unit>
        <trans-unit id="932a09ff94e49c6af1d69b9e0849fd08a167955b" translate="yes" xml:space="preserve">
          <source>Instances of classes implementing &lt;code&gt;Paint&lt;/code&gt; must be read-only because the &lt;code&gt;Graphics2D&lt;/code&gt; does not clone these objects when they are set as an attribute with the &lt;code&gt;setPaint&lt;/code&gt; method or when the &lt;code&gt;Graphics2D&lt;/code&gt; object is itself cloned.</source>
          <target state="translated">実装するクラスのインスタンス &lt;code&gt;Paint&lt;/code&gt; 読み取り専用にしなければならないため &lt;code&gt;Graphics2D&lt;/code&gt; それらが持つ属性として設定されている場合、これらのオブジェクトを複製していない &lt;code&gt;setPaint&lt;/code&gt; メソッドのメソッドまたはとき &lt;code&gt;Graphics2D&lt;/code&gt; オブジェクト自体がクローンです。</target>
        </trans-unit>
        <trans-unit id="1b6e1073811a5875c2a2b4e5fe7ba31c56e762cc" translate="yes" xml:space="preserve">
          <source>Instances of classes that implement the &lt;code&gt;LineListener&lt;/code&gt; interface can register to receive events when a line's status changes.</source>
          <target state="translated">&lt;code&gt;LineListener&lt;/code&gt; インターフェースを実装するクラスのインスタンスは、ラインのステータスが変化したときにイベントを受け取るように登録できます。</target>
        </trans-unit>
        <trans-unit id="a169de1ae252fb52203f5015cadfd1a06a7c6b8d" translate="yes" xml:space="preserve">
          <source>Instances of classes that implement this interface are used to filter filenames.</source>
          <target state="translated">このインターフェイスを実装したクラスのインスタンスは、ファイル名をフィルタリングするために使用されます。</target>
        </trans-unit>
        <trans-unit id="72c8d44ad47b0f65c0d66f1cb29601e9879beb2e" translate="yes" xml:space="preserve">
          <source>Instances of classes that implement this interface are used to filter filenames. These instances are used to filter directory listings in the &lt;code&gt;list&lt;/code&gt; method of class &lt;code&gt;File&lt;/code&gt;, and by the Abstract Window Toolkit's file dialog component.</source>
          <target state="translated">このインターフェースを実装するクラスのインスタンスは、ファイル名をフィルタリングするために使用されます。これらのインスタンスは、クラス &lt;code&gt;File&lt;/code&gt; の &lt;code&gt;list&lt;/code&gt; メソッドで、およびAbstract Window Toolkitのファイルダイアログコンポーネントによってディレクトリリストをフィルタリングするために使用されます。</target>
        </trans-unit>
        <trans-unit id="3e4d6e38599e336c0e777f951035f6793a7e15a9" translate="yes" xml:space="preserve">
          <source>Instances of classes that implement this interface must implement an equals() method that equates any two instances that share the same generic type declaration and have equal type parameters.</source>
          <target state="translated">このインターフェイスを実装するクラスのインスタンスは、同じ汎用型宣言を共有し、型パラメータが等しい 2 つのインスタンスを等しくする equals()メソッドを実装しなければなりません。</target>
        </trans-unit>
        <trans-unit id="dd69e91dc0cb4c978d7a6861a13b07a7801908c5" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;a href=&quot;matcher&quot;&gt;&lt;code&gt;Matcher&lt;/code&gt;&lt;/a&gt; class are used to match character sequences against a given pattern. Input is provided to matchers via the &lt;a href=&quot;../../lang/charsequence&quot;&gt;&lt;code&gt;CharSequence&lt;/code&gt;&lt;/a&gt; interface in order to support matching against characters from a wide variety of input sources.</source>
          <target state="translated">&lt;a href=&quot;matcher&quot;&gt; &lt;code&gt;Matcher&lt;/code&gt; &lt;/a&gt;クラスのインスタンスは、文字シーケンスを特定のパターンと照合するために使用されます。さまざまな入力ソースからの文字に対するマッチングをサポートするために、&lt;a href=&quot;../../lang/charsequence&quot;&gt; &lt;code&gt;CharSequence&lt;/code&gt; &lt;/a&gt;インターフェースを介してマッチャーに入力が提供されます。</target>
        </trans-unit>
        <trans-unit id="01cb0688f0e9cd871c93130fa7a8c0ab3f6718d3" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;code&gt;File&lt;/code&gt; class are immutable; that is, once created, the abstract pathname represented by a &lt;code&gt;File&lt;/code&gt; object will never change.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; クラスのインスタンスは不変です。つまり、いったん作成されると、 &lt;code&gt;File&lt;/code&gt; オブジェクトによって表される抽象的なパス名は決して変更されません。</target>
        </trans-unit>
        <trans-unit id="344b37b4f0ccc40b24cfd1a4c3cd0641f939151e" translate="yes" xml:space="preserve">
          <source>Instances of the class &lt;code&gt;Class&lt;/code&gt; represent classes and interfaces in a running Java application.</source>
          <target state="translated">クラス &lt;code&gt;Class&lt;/code&gt; のインスタンスは、実行中のJavaアプリケーションのクラスとインターフェースを表します。</target>
        </trans-unit>
        <trans-unit id="108b2c5109eac1450007b2f86ccd8bd0c0d35087" translate="yes" xml:space="preserve">
          <source>Instances of the class &lt;code&gt;Class&lt;/code&gt; represent classes and interfaces in a running Java application. An enum is a kind of class and an annotation is a kind of interface. Every array also belongs to a class that is reflected as a &lt;code&gt;Class&lt;/code&gt; object that is shared by all arrays with the same element type and number of dimensions. The primitive Java types (&lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, and &lt;code&gt;double&lt;/code&gt;), and the keyword &lt;code&gt;void&lt;/code&gt; are also represented as &lt;code&gt;Class&lt;/code&gt; objects.</source>
          <target state="translated">クラス &lt;code&gt;Class&lt;/code&gt; のインスタンスは、実行中のJavaアプリケーションのクラスとインターフェースを表します。列挙型はクラスの一種であり、注釈は一種のインターフェースです。すべての配列は、同じ要素タイプと次元数を持つすべての配列で共有される &lt;code&gt;Class&lt;/code&gt; オブジェクトとして反映されるクラスにも属します。プリミティブJava型（ &lt;code&gt;boolean&lt;/code&gt; 、 &lt;code&gt;byte&lt;/code&gt; 、 &lt;code&gt;char&lt;/code&gt; 、 &lt;code&gt;short&lt;/code&gt; 、 &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt;long&lt;/code&gt; 、 &lt;code&gt;float&lt;/code&gt; 、および &lt;code&gt;double&lt;/code&gt; ）、およびキーワード &lt;code&gt;void&lt;/code&gt; も &lt;code&gt;Class&lt;/code&gt; オブジェクトとして表されます。</target>
        </trans-unit>
        <trans-unit id="cb06bf48a550952cccf1ffec8bbc6885bc8d6232" translate="yes" xml:space="preserve">
          <source>Instances of the class &lt;code&gt;Class&lt;/code&gt; represent classes and interfaces in a running Java application. An enum type and a record type are kinds of class; an annotation type is a kind of interface. Every array also belongs to a class that is reflected as a &lt;code&gt;Class&lt;/code&gt; object that is shared by all arrays with the same element type and number of dimensions. The primitive Java types (&lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;
 int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, and &lt;code&gt;double&lt;/code&gt;), and the keyword &lt;code&gt;void&lt;/code&gt; are also represented as &lt;code&gt;Class&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f13ad75d18fbc39c6bd3dad35eaf089f01faeb03" translate="yes" xml:space="preserve">
          <source>Instances of the class &lt;code&gt;Class&lt;/code&gt; represent classes and interfaces in a running Java application. An enum type is a kind of class and an annotation type is a kind of interface. Every array also belongs to a class that is reflected as a &lt;code&gt;Class&lt;/code&gt; object that is shared by all arrays with the same element type and number of dimensions. The primitive Java types (&lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, and &lt;code&gt;double&lt;/code&gt;), and the keyword &lt;code&gt;void&lt;/code&gt; are also represented as &lt;code&gt;Class&lt;/code&gt; objects.</source>
          <target state="translated">クラス &lt;code&gt;Class&lt;/code&gt; のインスタンスは、実行中のJavaアプリケーションのクラスとインターフェースを表します。列挙型は一種のクラスであり、注釈型は一種のインターフェースです。すべての配列は、同じ要素タイプと次元数を持つすべての配列で共有される &lt;code&gt;Class&lt;/code&gt; オブジェクトとして反映されるクラスにも属します。プリミティブJavaタイプ（ &lt;code&gt;boolean&lt;/code&gt; 、 &lt;code&gt;byte&lt;/code&gt; 、 &lt;code&gt;char&lt;/code&gt; 、 &lt;code&gt;short&lt;/code&gt; 、 &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt;long&lt;/code&gt; 、 &lt;code&gt;float&lt;/code&gt; 、および &lt;code&gt;double&lt;/code&gt; ）、およびキーワード &lt;code&gt;void&lt;/code&gt; も &lt;code&gt;Class&lt;/code&gt; オブジェクトとして表されます。</target>
        </trans-unit>
        <trans-unit id="a980428a9aed13fbabfe44ec1a20e969bac81128" translate="yes" xml:space="preserve">
          <source>Instances of the file descriptor class serve as an opaque handle to the underlying machine-specific structure representing an open file, an open socket, or another source or sink of bytes.</source>
          <target state="translated">ファイルディスクリプタクラスのインスタンスは、オープンファイル、オープンソケット、その他のバイトソースやシンクを表すマシン固有の構造体への不透明なハンドルとして機能します。</target>
        </trans-unit>
        <trans-unit id="9fa491fd205344c02f481a6bcd36c6eb364b200b" translate="yes" xml:space="preserve">
          <source>Instances of the file descriptor class serve as an opaque handle to the underlying machine-specific structure representing an open file, an open socket, or another source or sink of bytes. The main practical use for a file descriptor is to create a &lt;a href=&quot;fileinputstream&quot;&gt;&lt;code&gt;FileInputStream&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileoutputstream&quot;&gt;&lt;code&gt;FileOutputStream&lt;/code&gt;&lt;/a&gt; to contain it.</source>
          <target state="translated">ファイル記述子クラスのインスタンスは、開いているファイル、開いているソケット、またはバイトの別のソースまたはシンクを表す、基になるマシン固有の構造への不透明なハンドルとして機能します。ファイル記述子の主な実用的な使用法は、それを含む&lt;a href=&quot;fileinputstream&quot;&gt; &lt;code&gt;FileInputStream&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;fileoutputstream&quot;&gt; &lt;code&gt;FileOutputStream&lt;/code&gt; &lt;/a&gt;を作成することです。</target>
        </trans-unit>
        <trans-unit id="79f63ad14b767d6d99f400c7946c4a4d1e89cd48" translate="yes" xml:space="preserve">
          <source>Instances of the file descriptor class serve as an opaque handle to the underlying machine-specific structure representing an open file, an open socket, or another source or sink of bytes. The main practical use for a file descriptor is to create a &lt;code&gt;FileInputStream&lt;/code&gt; or &lt;code&gt;FileOutputStream&lt;/code&gt; to contain it.</source>
          <target state="translated">ファイル記述子クラスのインスタンスは、開いているファイル、開いているソケット、またはバイトの別のソースまたはシンクを表す、基になるマシン固有の構造への不透明なハンドルとして機能します。ファイル記述子の主な実用的な用途は、それを含む &lt;code&gt;FileInputStream&lt;/code&gt; または &lt;code&gt;FileOutputStream&lt;/code&gt; を作成することです。</target>
        </trans-unit>
        <trans-unit id="bc09f90633bb6d4e324f46a01b2254f3a841fafa" translate="yes" xml:space="preserve">
          <source>Instances of the redefined class are not affected.</source>
          <target state="translated">再定義されたクラスのインスタンスは影響を受けません。</target>
        </trans-unit>
        <trans-unit id="3f3ef0acb1c91e60cbf41b4e29dfa9b0bc4fc46f" translate="yes" xml:space="preserve">
          <source>Instances of the retransformed class are not affected.</source>
          <target state="translated">再変換されたクラスのインスタンスは影響を受けません。</target>
        </trans-unit>
        <trans-unit id="3e9809aaa48664c70382694f55a852440a721b9a" translate="yes" xml:space="preserve">
          <source>Instances of the tools can be obtained by calling &lt;a href=&quot;../java.base/java/util/spi/toolprovider#findFirst(java.lang.String)&quot;&gt;&lt;code&gt;ToolProvider.findFirst&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;../java.base/java/util/serviceloader&quot;&gt;service loader&lt;/a&gt; with the name &lt;code&gt;&quot;javac&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd7324b886c7efcfeed2c398d31a65c9ed9f782" translate="yes" xml:space="preserve">
          <source>Instances of the tools can be obtained by calling &lt;a href=&quot;../java.base/java/util/spi/toolprovider#findFirst(java.lang.String)&quot;&gt;&lt;code&gt;ToolProvider.findFirst&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;../java.base/java/util/serviceloader&quot;&gt;service loader&lt;/a&gt; with the name &lt;code&gt;&quot;javadoc&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b767207589839c215e9f9217f595458041daf84d" translate="yes" xml:space="preserve">
          <source>Instances of the tools can be obtained by calling &lt;a href=&quot;../java.base/java/util/spi/toolprovider#findFirst(java.lang.String)&quot;&gt;&lt;code&gt;ToolProvider.findFirst&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;../java.base/java/util/serviceloader&quot;&gt;service loader&lt;/a&gt; with the name &lt;code&gt;&quot;javap&quot;&lt;/code&gt; or &lt;code&gt;&quot;jdeps&quot;&lt;/code&gt; as appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d9c5b1c6ed7ccdb756c12f38020d8315deef8d" translate="yes" xml:space="preserve">
          <source>Instances of the wrapper classes for Java's primitive types are written using the name of the primitive type as the tag. For example, an instance of the &lt;code&gt;Integer&lt;/code&gt; class could be written: &amp;lt;int&amp;gt;123&amp;lt;/int&amp;gt;. Note that the &lt;code&gt;XMLEncoder&lt;/code&gt; class uses Java's reflection package in which the conversion between Java's primitive types and their associated &quot;wrapper classes&quot; is handled internally. The API for the &lt;code&gt;XMLEncoder&lt;/code&gt; class itself deals only with &lt;code&gt;Object&lt;/code&gt;s.</source>
          <target state="translated">Javaのプリミティブ型のラッパークラスのインスタンスは、プリミティブ型の名前をタグとして使用して記述されます。たとえば、 &lt;code&gt;Integer&lt;/code&gt; クラスのインスタンスは&amp;lt;int&amp;gt; 123 &amp;lt;/ int&amp;gt;のように記述できます。 &lt;code&gt;XMLEncoder&lt;/code&gt; クラスはJavaのリフレクションパッケージを使用することに注意してください。このパッケージでは、Javaのプリミティブタイプとそれに関連する「ラッパークラス」間の変換が内部で処理されます。 &lt;code&gt;XMLEncoder&lt;/code&gt; クラス自体のAPIは、 &lt;code&gt;Object&lt;/code&gt; のみを扱います。</target>
        </trans-unit>
        <trans-unit id="9ff97496888f822ac1df6c2b4f936e44a799662f" translate="yes" xml:space="preserve">
          <source>Instances of this class are generally created using a &lt;code&gt;SSLServerSocketFactory&lt;/code&gt;. The primary function of &lt;code&gt;SSLServerSocket&lt;/code&gt;s is to create &lt;code&gt;SSLSocket&lt;/code&gt;s by &lt;code&gt;accept&lt;/code&gt;ing connections.</source>
          <target state="translated">このクラスのインスタンスは、通常、 &lt;code&gt;SSLServerSocketFactory&lt;/code&gt; を使用して作成されます。 &lt;code&gt;SSLServerSocket&lt;/code&gt; の主な機能は、接続を &lt;code&gt;accept&lt;/code&gt; ことによって &lt;code&gt;SSLSocket&lt;/code&gt; を作成することです。</target>
        </trans-unit>
        <trans-unit id="8acc106fbe1f0f166d856ec34b59db29401e6c5b" translate="yes" xml:space="preserve">
          <source>Instances of this class are generally created using an &lt;code&gt;SSLServerSocketFactory&lt;/code&gt;. The primary function of an &lt;code&gt;SSLServerSocket&lt;/code&gt; is to create &lt;code&gt;SSLSocket&lt;/code&gt;s by &lt;code&gt;accept&lt;/code&gt;ing connections.</source>
          <target state="translated">このクラスのインスタンスは通常、 &lt;code&gt;SSLServerSocketFactory&lt;/code&gt; を使用して作成されます。 &lt;code&gt;SSLServerSocket&lt;/code&gt; の主な機能は、接続を &lt;code&gt;accept&lt;/code&gt; ことによって &lt;code&gt;SSLSocket&lt;/code&gt; を作成することです。</target>
        </trans-unit>
        <trans-unit id="47cbd08e493d07b5b42edf9b2d8935e5314b4776" translate="yes" xml:space="preserve">
          <source>Instances of this class are immutable and are safe for use by multiple concurrent threads. Instances of the &lt;a href=&quot;matcher&quot;&gt;&lt;code&gt;Matcher&lt;/code&gt;&lt;/a&gt; class are not safe for such use.</source>
          <target state="translated">このクラスのインスタンスは不変であり、複数の同時スレッドで安全に使用できます。&lt;a href=&quot;matcher&quot;&gt; &lt;code&gt;Matcher&lt;/code&gt; &lt;/a&gt;クラスのインスタンスは、そのような使用に対して安全ではありません。</target>
        </trans-unit>
        <trans-unit id="c5a7ebb28cce79ee83b9b7ae5c38a6c22750b0cc" translate="yes" xml:space="preserve">
          <source>Instances of this class are immutable.</source>
          <target state="translated">このクラスのインスタンスは不変です。</target>
        </trans-unit>
        <trans-unit id="87dac24b2b556b721ac3d2b079693348aae9e538" translate="yes" xml:space="preserve">
          <source>Instances of this class are immutable. Subclasses may be mutable but this is not recommended.</source>
          <target state="translated">このクラスのインスタンスは不変です。サブクラスは突然変異可能ですが、これは推奨されません。</target>
        </trans-unit>
        <trans-unit id="9afe7178361d81c710b6c1298d6178d227847d4c" translate="yes" xml:space="preserve">
          <source>Instances of this class are immutable. Where data is passed in or out via byte arrays, defensive cloning is performed.</source>
          <target state="translated">このクラスのインスタンスは不変です。データがバイト配列を介して入出力される場合、防御的なクローニングが行われます。</target>
        </trans-unit>
        <trans-unit id="a21e9135ce07f4c67f50492b7804a8ecd0c2288d" translate="yes" xml:space="preserve">
          <source>Instances of this class are not safe for use by multiple concurrent threads.</source>
          <target state="translated">このクラスのインスタンスは、複数の並行スレッドで使用しても安全ではありません。</target>
        </trans-unit>
        <trans-unit id="2b88390a87d34b65f38866956425c91be17f8992" translate="yes" xml:space="preserve">
          <source>Instances of this class are not tied to a specific field.</source>
          <target state="translated">このクラスのインスタンスは、特定のフィールドに関連付けられていません。</target>
        </trans-unit>
        <trans-unit id="b430913b4b61ac02100ac0e77b54be711b253836" translate="yes" xml:space="preserve">
          <source>Instances of this class are placed on the &lt;code&gt;EventQueue&lt;/code&gt; by calls to &lt;code&gt;invokeLater&lt;/code&gt; and &lt;code&gt;invokeAndWait&lt;/code&gt;. Client code can use this fact to write replacement functions for &lt;code&gt;invokeLater
 &lt;/code&gt; and &lt;code&gt;invokeAndWait&lt;/code&gt; without writing special-case code in any &lt;code&gt;AWTEventListener&lt;/code&gt; objects.</source>
          <target state="translated">このクラスのインスタンスは、 &lt;code&gt;invokeLater&lt;/code&gt; および &lt;code&gt;invokeAndWait&lt;/code&gt; の呼び出しによって &lt;code&gt;EventQueue&lt;/code&gt; に配置されます。クライアントコードは、この事実を使用して、 &lt;code&gt;AWTEventListener&lt;/code&gt; オブジェクトに特殊なケースのコードを記述せずに、 &lt;code&gt;invokeLater &lt;/code&gt; および &lt;code&gt;invokeAndWait&lt;/code&gt; の置換関数を記述できます。</target>
        </trans-unit>
        <trans-unit id="09f463ed03cb622ffa3985c9ebe760f682b1c469" translate="yes" xml:space="preserve">
          <source>Instances of this class are used to find the current instant, which can be interpreted using the stored time-zone to find the current date and time. As such, a clock can be used instead of &lt;a href=&quot;../lang/system#currentTimeMillis()&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../util/timezone#getDefault()&quot;&gt;&lt;code&gt;TimeZone.getDefault()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このクラスのインスタンスは、現在の瞬間を見つけるために使用されます。これは、保存されているタイムゾーンを使用して解釈し、現在の日付と時刻を見つけることができます。そのため、&lt;a href=&quot;../lang/system#currentTimeMillis()&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../util/timezone#getDefault()&quot;&gt; &lt;code&gt;TimeZone.getDefault()&lt;/code&gt; の&lt;/a&gt;代わりに時計を使用できます。</target>
        </trans-unit>
        <trans-unit id="c6aea4dd10eeaa33441534a876fc684e5b08c117" translate="yes" xml:space="preserve">
          <source>Instances of this class are used to find the current instant, which can be interpreted using the stored time-zone to find the current date and time. As such, a clock can be used instead of &lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt;&lt;code&gt;System.currentTimeMillis()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../util/timezone#getDefault--&quot;&gt;&lt;code&gt;TimeZone.getDefault()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このクラスのインスタンスは、現在のインスタントを見つけるために使用されます。これは、格納されているタイムゾーンを使用して解釈され、現在の日付と時刻を見つけることができます。そのため、&lt;a href=&quot;../lang/system#currentTimeMillis--&quot;&gt; &lt;code&gt;System.currentTimeMillis()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../util/timezone#getDefault--&quot;&gt; &lt;code&gt;TimeZone.getDefault()&lt;/code&gt; の&lt;/a&gt;代わりにクロックを使用できます。</target>
        </trans-unit>
        <trans-unit id="44257e0d10ab5e8f2f8a32b9dde5dc994c8a6aaa" translate="yes" xml:space="preserve">
          <source>Instances of this class are used to form &lt;a href=&quot;memorylayout#layout-paths&quot;&gt;&lt;em&gt;layout paths&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a18f18ffdff9fd4bc1beaa3473bf864862310a3" translate="yes" xml:space="preserve">
          <source>Instances of this class are used to form &lt;a href=&quot;memorylayout#layout-paths&quot;&gt;&lt;em&gt;layout paths&lt;/em&gt;&lt;/a&gt;. There are two kinds of path elements: &lt;em&gt;group path elements&lt;/em&gt; and &lt;em&gt;sequence path elements&lt;/em&gt;. Group path elements are used to select a given named member layout within a &lt;a href=&quot;grouplayout&quot;&gt;&lt;code&gt;GroupLayout&lt;/code&gt;&lt;/a&gt;. Sequence path elements are used to select a sequence element layout within a &lt;a href=&quot;sequencelayout&quot;&gt;&lt;code&gt;SequenceLayout&lt;/code&gt;&lt;/a&gt;; selection of sequence element layout can be &lt;em&gt;explicit&lt;/em&gt; (see &lt;a href=&quot;#sequenceElement(long)&quot;&gt;&lt;code&gt;sequenceElement(long)&lt;/code&gt;&lt;/a&gt;) or &lt;em&gt;implicit&lt;/em&gt; (see &lt;a href=&quot;#sequenceElement()&quot;&gt;&lt;code&gt;sequenceElement()&lt;/code&gt;&lt;/a&gt;). When a path uses one or more implicit sequence path elements, it acquires additional &lt;em&gt;free dimensions&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25844129c84351091177aef3fdca42528afa16c2" translate="yes" xml:space="preserve">
          <source>Instances of this class are used to specify how malformed-input and unmappable-character errors are to be handled by charset &lt;a href=&quot;charsetdecoder#cae&quot;&gt;decoders&lt;/a&gt; and &lt;a href=&quot;charsetencoder#cae&quot;&gt;encoders&lt;/a&gt;.</source>
          <target state="translated">このクラスのインスタンスを使用して、不正な入力エラーとマッピングできない文字のエラーを、文字セット&lt;a href=&quot;charsetdecoder#cae&quot;&gt;デコーダー&lt;/a&gt;と&lt;a href=&quot;charsetencoder#cae&quot;&gt;エンコーダーで&lt;/a&gt;処理する方法を指定します。</target>
        </trans-unit>
        <trans-unit id="007163970fe7dfcb85ba24665a95159344a0003e" translate="yes" xml:space="preserve">
          <source>Instances of this class control the color state, paper size (media type), orientation, logical origin, print quality, and resolution of every page which uses the instance. Attribute names are compliant with the Internet Printing Protocol (IPP) 1.1 where possible. Attribute values are partially compliant where possible.</source>
          <target state="translated">このクラスのインスタンスは、そのインスタンスを使用するすべてのページの色状態、用紙サイズ(メディアタイプ)、向き、論理原点、印刷品質、解像度を制御します。属性名は、可能な限りインターネット印刷プロトコル(IPP)1.1に準拠しています。属性値は、可能な限り部分的に準拠しています。</target>
        </trans-unit>
        <trans-unit id="d1f1b3f68cf47300b43a1ed7a9f8b045d1216465" translate="yes" xml:space="preserve">
          <source>Instances of this class control the number of copies, default selection, destination, print dialog, file and printer names, page ranges, multiple document handling (including collation), and multi-page imposition (such as duplex) of every print job which uses the instance. Attribute names are compliant with the Internet Printing Protocol (IPP) 1.1 where possible. Attribute values are partially compliant where possible.</source>
          <target state="translated">このクラスのインスタンスは、そのインスタンスを使用するすべての印刷ジョブの部数、デフォルト選択、宛先、印刷ダイアログ、ファイル名とプリンタ名、ページ範囲、複数文書処理(照合を含む)、および複数ページの面付け(両面印刷など)を制御します。属性名は、可能な限りインターネット印刷プロトコル(IPP)1.1に準拠しています。属性値は、可能な限り部分的に準拠しています。</target>
        </trans-unit>
        <trans-unit id="2e84bfe7c017a97f7de5d25876f97bbfa1fc3cba" translate="yes" xml:space="preserve">
          <source>Instances of this class may or may not denote an actual file-system object such as a file or a directory. If it does denote such an object then that object resides in a</source>
          <target state="translated">このクラスのインスタンスは、ファイルやディレクトリなどの実際のファイルシステムオブジェクトを表すこともあれば、そうでないこともあります。そのようなオブジェクトを表す場合、そのオブジェクトは</target>
        </trans-unit>
        <trans-unit id="aee5c9f8b54d390c098083ee330f18ec2ce22030" translate="yes" xml:space="preserve">
          <source>Instances of this class need not be protected against concurrent access from multiple threads. Threads that need to access a single &lt;code&gt;CertPathBuilderSpi&lt;/code&gt; instance concurrently should synchronize amongst themselves and provide the necessary locking before calling the wrapping &lt;code&gt;CertPathBuilder&lt;/code&gt; object.</source>
          <target state="translated">このクラスのインスタンスは、複数のスレッドからの同時アクセスから保護する必要はありません。単一の &lt;code&gt;CertPathBuilderSpi&lt;/code&gt; インスタンスに同時にアクセスする必要があるスレッドは、スレッド間で同期し、ラップする &lt;code&gt;CertPathBuilder&lt;/code&gt; オブジェクトを呼び出す前に必要なロックを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="4f0dde8c93ef5ccd5cae288c8d9d422b6e2d8f5b" translate="yes" xml:space="preserve">
          <source>Instances of this class need not be protected against concurrent access from multiple threads. Threads that need to access a single &lt;code&gt;CertPathValidatorSpi&lt;/code&gt; instance concurrently should synchronize amongst themselves and provide the necessary locking before calling the wrapping &lt;code&gt;CertPathValidator&lt;/code&gt; object.</source>
          <target state="translated">このクラスのインスタンスは、複数のスレッドからの同時アクセスから保護する必要はありません。単一の &lt;code&gt;CertPathValidatorSpi&lt;/code&gt; インスタンスに同時にアクセスする必要があるスレッドは、スレッド間で同期し、ラップする &lt;code&gt;CertPathValidator&lt;/code&gt; オブジェクトを呼び出す前に必要なロックを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="177dec9f11cdbb538be0c67aae25484fbea81e2f" translate="yes" xml:space="preserve">
          <source>Instances of this class represent a matcher that performs match operations on an &lt;a href=&quot;sniservername&quot;&gt;&lt;code&gt;SNIServerName&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">このクラスのインスタンスは、&lt;a href=&quot;sniservername&quot;&gt; &lt;code&gt;SNIServerName&lt;/code&gt; &lt;/a&gt;インスタンスで一致操作を実行するマッチャーを表します。</target>
        </trans-unit>
        <trans-unit id="fd5f54db2f86a51641bb9bc862e3141ec7c6d046" translate="yes" xml:space="preserve">
          <source>Instances of this class represent a secure socket protocol implementation which acts as a factory for secure socket factories or &lt;code&gt;SSLEngine&lt;/code&gt;s.</source>
          <target state="translated">このクラスのインスタンスは、セキュアソケットファクトリまたは &lt;code&gt;SSLEngine&lt;/code&gt; のファクトリとして機能するセキュアソケットプロトコルの実装を表します。</target>
        </trans-unit>
        <trans-unit id="08cb35916b3324ebfc7e440ca56c0fb44b830ec7" translate="yes" xml:space="preserve">
          <source>Instances of this class represent a secure socket protocol implementation which acts as a factory for secure socket factories or &lt;code&gt;SSLEngine&lt;/code&gt;s. This class is initialized with an optional set of key and trust managers and source of secure random bytes.</source>
          <target state="translated">このクラスのインスタンスは、セキュアソケットファクトリまたは &lt;code&gt;SSLEngine&lt;/code&gt; のファクトリとして機能するセキュアソケットプロトコルの実装を表します。このクラスは、オプションのキーマネージャーと信頼マネージャー、および安全なランダムバイトのソースで初期化されます。</target>
        </trans-unit>
        <trans-unit id="4d90af6750411c4a675a48f7efa7b9e1e81a8135" translate="yes" xml:space="preserve">
          <source>Instances of this class represent a server name in a Server Name Indication (SNI) extension.</source>
          <target state="translated">このクラスのインスタンスは、Server Name Indication (SNI)拡張モジュール内のサーバー名を表します。</target>
        </trans-unit>
        <trans-unit id="aa16424bad911d258d4591a96d28b0e9f1451e6e" translate="yes" xml:space="preserve">
          <source>Instances of this class represent a server name of type &lt;a href=&quot;standardconstants#SNI_HOST_NAME&quot;&gt;&lt;code&gt;host_name&lt;/code&gt;&lt;/a&gt; in a Server Name Indication (SNI) extension.</source>
          <target state="translated">このクラスのインスタンスは、サーバー名表示（SNI）拡張のタイプ&lt;a href=&quot;standardconstants#SNI_HOST_NAME&quot;&gt; &lt;code&gt;host_name&lt;/code&gt; の&lt;/a&gt;サーバー名を表します。</target>
        </trans-unit>
        <trans-unit id="68634e63a4e34706b1249fcb54939968593342ab" translate="yes" xml:space="preserve">
          <source>Instances of this class represent particular subsets of the Unicode character set.</source>
          <target state="translated">このクラスのインスタンスは、Unicode 文字集合の特定のサブセットを表します。</target>
        </trans-unit>
        <trans-unit id="89a0f5c80f65dff11c932f09efdb19dc8a4ca7d8" translate="yes" xml:space="preserve">
          <source>Instances of this class represent particular subsets of the Unicode character set. The only family of subsets defined in the &lt;code&gt;Character&lt;/code&gt; class is &lt;a href=&quot;character.unicodeblock&quot;&gt;&lt;code&gt;Character.UnicodeBlock&lt;/code&gt;&lt;/a&gt;. Other portions of the Java API may define other subsets for their own purposes.</source>
          <target state="translated">このクラスのインスタンスは、Unicode文字セットの特定のサブセットを表します。 &lt;code&gt;Character&lt;/code&gt; クラスで定義されているサブセットの唯一のファミリーは&lt;a href=&quot;character.unicodeblock&quot;&gt; &lt;code&gt;Character.UnicodeBlock&lt;/code&gt; &lt;/a&gt;です。 Java APIの他の部分では、独自の目的で他のサブセットを定義できます。</target>
        </trans-unit>
        <trans-unit id="7a1b3ba789765e3cc93e6a4c30d4d6367f164c04" translate="yes" xml:space="preserve">
          <source>Instances of this class should be obtained via &lt;a href=&quot;mouseinfo#getPointerInfo()&quot;&gt;&lt;code&gt;MouseInfo.getPointerInfo()&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;PointerInfo&lt;/code&gt; instance is not updated dynamically as the mouse moves. To get the updated location, you must call &lt;a href=&quot;mouseinfo#getPointerInfo()&quot;&gt;&lt;code&gt;MouseInfo.getPointerInfo()&lt;/code&gt;&lt;/a&gt; again.</source>
          <target state="translated">このクラスのインスタンスは、&lt;a href=&quot;mouseinfo#getPointerInfo()&quot;&gt; &lt;code&gt;MouseInfo.getPointerInfo()&lt;/code&gt; を&lt;/a&gt;介して取得する必要があります。 &lt;code&gt;PointerInfo&lt;/code&gt; のインスタンスは、マウスを移動すると動的に更新されていません。更新された場所を取得するには、&lt;a href=&quot;mouseinfo#getPointerInfo()&quot;&gt; &lt;code&gt;MouseInfo.getPointerInfo()&lt;/code&gt; を&lt;/a&gt;再度呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="36038b44987f83cb3b3986a74cb019633be8bbba" translate="yes" xml:space="preserve">
          <source>Instances of this class support both reading and writing to a random access file.</source>
          <target state="translated">このクラスのインスタンスは、ランダムアクセスファイルへの読み書きの両方をサポートしています。</target>
        </trans-unit>
        <trans-unit id="908ca6057e7d094b0e6af910b39a816e1d63b0b3" translate="yes" xml:space="preserve">
          <source>Instances of this class support both reading and writing to a random access file. A random access file behaves like a large array of bytes stored in the file system. There is a kind of cursor, or index into the implied array, called the &lt;em&gt;file pointer&lt;/em&gt;; input operations read bytes starting at the file pointer and advance the file pointer past the bytes read. If the random access file is created in read/write mode, then output operations are also available; output operations write bytes starting at the file pointer and advance the file pointer past the bytes written. Output operations that write past the current end of the implied array cause the array to be extended. The file pointer can be read by the &lt;code&gt;getFilePointer&lt;/code&gt; method and set by the &lt;code&gt;seek&lt;/code&gt; method.</source>
          <target state="translated">このクラスのインスタンスは、ランダムアクセスファイルの読み取りと書き込みの両方をサポートします。ランダムアクセスファイルは、ファイルシステムに格納されているバイトの大きな配列のように動作します。&lt;em&gt;ファイルポインタ&lt;/em&gt;と呼ばれる一種のカーソル、つまり暗黙の配列へのインデックスがあり&lt;em&gt;ます&lt;/em&gt;。入力操作は、ファイルポインターで始まるバイトを読み取り、読み取ったバイトを超えてファイルポインターを進めます。ランダムアクセスファイルが読み取り/書き込みモードで作成されている場合、出力操作も使用できます。出力操作では、ファイルポインターからバイトを書き込み、書き込まれたバイトを超えてファイルポインターを進めます。暗黙の配列の現在の終わりを超えて書き込む出力操作により、配列が拡張されます。ファイルポインタを読み取ることができる &lt;code&gt;getFilePointer&lt;/code&gt; の方法とによって設定された &lt;code&gt;seek&lt;/code&gt; 方法を。</target>
        </trans-unit>
        <trans-unit id="3024f6ce1a60254dac291fda5aced6221b6bbc83" translate="yes" xml:space="preserve">
          <source>Instances of this interface are created by instances of &lt;a href=&quot;connect/connector&quot;&gt;&lt;code&gt;Connector&lt;/code&gt;&lt;/a&gt;. For example, an &lt;a href=&quot;connect/attachingconnector&quot;&gt;&lt;code&gt;AttachingConnector&lt;/code&gt;&lt;/a&gt; attaches to a target VM and returns its virtual machine mirror. A Connector will typically create a VirtualMachine by invoking the VirtualMachineManager's &lt;a href=&quot;virtualmachinemanager#createVirtualMachine(com.sun.jdi.connect.spi.Connection)&quot;&gt;&lt;code&gt;VirtualMachineManager.createVirtualMachine(Connection)&lt;/code&gt;&lt;/a&gt; createVirtualMachine(Connection) method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034e64cc762b01a5c97f43e404a5defe0fea1dc7" translate="yes" xml:space="preserve">
          <source>Instances of this interface are used to keep the list of ClassLoaders registered in an MBean Server.</source>
          <target state="translated">このインターフェイスのインスタンスは、MBean サーバに登録されている ClassLoaders のリストを保持するために使用されます。</target>
        </trans-unit>
        <trans-unit id="a1cf8cc1c7d7d2b3114b18cc1eabe8c0c711b39b" translate="yes" xml:space="preserve">
          <source>Instances of this interface are used to keep the list of ClassLoaders registered in an MBean Server. They provide the necessary methods to load classes using the registered ClassLoaders.</source>
          <target state="translated">このインタフェースのインスタンスは、MBean Server に登録された ClassLoaders のリストを保持するために使用されます。登録された ClassLoaders を使用してクラスをロードするために必要なメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="a2bed643eb329a4bb1a64ca24baf5d237d44c675" translate="yes" xml:space="preserve">
          <source>Instances of this interface manage which X509 certificate-based key pairs are used to authenticate the local side of a secure socket.</source>
          <target state="translated">このインターフェイスのインスタンスは、セキュアソケットのローカル側の認証に使用される X509 証明書ベースのキーペアを管理する。</target>
        </trans-unit>
        <trans-unit id="5a89bf8ddd6b8f1daad60cd1a7aaefdae853ed30" translate="yes" xml:space="preserve">
          <source>Instances of this interface may be passed to the &lt;code&gt;&lt;a href=&quot;file#listFiles(java.io.FileFilter)&quot;&gt;&lt;code&gt;listFiles(FileFilter)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">このインターフェイスのインスタンスは、 &lt;code&gt;&lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; クラスの &lt;code&gt;&lt;a href=&quot;file#listFiles(java.io.FileFilter)&quot;&gt;&lt;code&gt;listFiles(FileFilter)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="60162219b837ca25574787055c65befffca0c9b7" translate="yes" xml:space="preserve">
          <source>Instances of this interface may be passed to the &lt;code&gt;&lt;a href=&quot;file#listFiles-java.io.FileFilter-&quot;&gt;&lt;code&gt;listFiles(FileFilter)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">このインターフェイスのインスタンスは、 &lt;code&gt;&lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; クラスの &lt;code&gt;&lt;a href=&quot;file#listFiles-java.io.FileFilter-&quot;&gt;&lt;code&gt;listFiles(FileFilter)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="551ee0e6a03f6f7291814bcb3c0ff6b1ec6170b4" translate="yes" xml:space="preserve">
          <source>Instances of two subclasses, &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;exception&quot;&gt;&lt;code&gt;Exception&lt;/code&gt;&lt;/a&gt;, are conventionally used to indicate that exceptional situations have occurred. Typically, these instances are freshly created in the context of the exceptional situation so as to include relevant information (such as stack trace data).</source>
          <target state="translated">&lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;exception&quot;&gt; &lt;code&gt;Exception&lt;/code&gt; &lt;/a&gt;の2つのサブクラスのインスタンスは、通常、例外的な状況が発生したことを示すために使用されます。通常、これらのインスタンスは、例外的な状況のコンテキストで新しく作成され、関連情報（スタックトレースデータなど）を含めます。</target>
        </trans-unit>
        <trans-unit id="f85418fa747e89b8cd281d1b529a5331362ff726" translate="yes" xml:space="preserve">
          <source>Instances returned by this method route messages to loggers obtained by calling &lt;a href=&quot;system.loggerfinder#getLogger(java.lang.String,java.lang.Module)&quot;&gt;&lt;code&gt;LoggerFinder.getLogger(name, module)&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;module&lt;/code&gt; is the caller's module. In cases where &lt;code&gt;System.getLogger&lt;/code&gt; is called from a context where there is no caller frame on the stack (e.g when called directly from a JNI attached thread), &lt;code&gt;IllegalCallerException&lt;/code&gt; is thrown. To obtain a logger in such a context, use an auxiliary class that will implicitly be identified as the caller, or use the system &lt;a href=&quot;system.loggerfinder#getLoggerFinder()&quot;&gt;&lt;code&gt;LoggerFinder&lt;/code&gt;&lt;/a&gt; to obtain a logger instead. Note that doing the latter may eagerly initialize the underlying logging system.</source>
          <target state="translated">このメソッドによって返されるインスタンスは、&lt;a href=&quot;system.loggerfinder#getLogger(java.lang.String,java.lang.Module)&quot;&gt; &lt;code&gt;LoggerFinder.getLogger(name, module)&lt;/code&gt; &lt;/a&gt;呼び出すことによって取得されたロガーにメッセージをルーティングします。ここで、 &lt;code&gt;module&lt;/code&gt; は呼び出し元のモジュールです。ケースで &lt;code&gt;System.getLogger&lt;/code&gt; が（直接JNI添付のスレッドから呼び出された場合など）、スタックには、発信者のフレームが存在しないコンテキストから呼び出され、 &lt;code&gt;IllegalCallerException&lt;/code&gt; がスローされます。このようなコンテキストでロガーを取得するには、呼び出し元として暗黙的に識別される補助クラスを使用するか、代わりにシステム&lt;a href=&quot;system.loggerfinder#getLoggerFinder()&quot;&gt; &lt;code&gt;LoggerFinder&lt;/code&gt; &lt;/a&gt;を使用してロガーを取得します。後者を実行すると、基盤となるロギングシステムが熱心に初期化される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e5dd7083ff5f07cec7b9b34c02884013f777ac05" translate="yes" xml:space="preserve">
          <source>Instant</source>
          <target state="translated">Instant</target>
        </trans-unit>
        <trans-unit id="3eaefa0c13ff3f04e418422e55813eafdce16a55" translate="yes" xml:space="preserve">
          <source>Instant parsing handles the special &quot;leap second&quot; time of '23:59:60'. Leap seconds occur at '23:59:60' in the UTC time-zone, but at other local times in different time-zones. To avoid this potential ambiguity, the handling of leap-seconds is limited to &lt;a href=&quot;datetimeformatterbuilder#appendInstant()&quot;&gt;&lt;code&gt;DateTimeFormatterBuilder.appendInstant()&lt;/code&gt;&lt;/a&gt;, as that method always parses the instant with the UTC zone offset.</source>
          <target state="translated">インスタント解析は、「23:59:60」という特別な「うるう秒」時間を処理します。うるう秒は、UTCタイムゾーンの「23:59:60」に発生しますが、異なるタイムゾーンの他の現地時間に発生します。この潜在的なあいまいさを回避するために、うるう秒の処理は&lt;a href=&quot;datetimeformatterbuilder#appendInstant()&quot;&gt; &lt;code&gt;DateTimeFormatterBuilder.appendInstant()&lt;/code&gt; に&lt;/a&gt;制限されています。これは、そのメソッドが常にUTCゾーンオフセットを使用してインスタントを解析するためです。</target>
        </trans-unit>
        <trans-unit id="4b29aa8d5cca621e61c112dec0eb9ee528a2477c" translate="yes" xml:space="preserve">
          <source>Instant parsing handles the special &quot;leap second&quot; time of '23:59:60'. Leap seconds occur at '23:59:60' in the UTC time-zone, but at other local times in different time-zones. To avoid this potential ambiguity, the handling of leap-seconds is limited to &lt;a href=&quot;datetimeformatterbuilder#appendInstant--&quot;&gt;&lt;code&gt;DateTimeFormatterBuilder.appendInstant()&lt;/code&gt;&lt;/a&gt;, as that method always parses the instant with the UTC zone offset.</source>
          <target state="translated">インスタント解析は、特別な「うるう秒」時間「23:59:60」を処理します。うるう秒は、UTCタイムゾーンでは「23:59:60」に発生しますが、別のタイムゾーンの他の現地時間に発生します。この潜在的なあいまいさを回避するために、うるう秒の処理は常に&lt;a href=&quot;datetimeformatterbuilder#appendInstant--&quot;&gt; &lt;code&gt;DateTimeFormatterBuilder.appendInstant()&lt;/code&gt; に&lt;/a&gt;制限されています。これは、そのメソッドが常にインスタントをUTCゾーンオフセットで解析するためです。</target>
        </trans-unit>
        <trans-unit id="77dd327747d3295ff08a7f1da2c9841171552552" translate="yes" xml:space="preserve">
          <source>Instant.adjustInto()</source>
          <target state="translated">Instant.adjustInto()</target>
        </trans-unit>
        <trans-unit id="e2f275b1ee665f382dc34573882eefcbd040044e" translate="yes" xml:space="preserve">
          <source>Instant.atOffset()</source>
          <target state="translated">Instant.atOffset()</target>
        </trans-unit>
        <trans-unit id="17265e31f376ee0a7fac9320ca7d92cedbe1e155" translate="yes" xml:space="preserve">
          <source>Instant.atZone()</source>
          <target state="translated">Instant.atZone()</target>
        </trans-unit>
        <trans-unit id="50fb8c45667e708b212792e7ffd8dde301c5e7c5" translate="yes" xml:space="preserve">
          <source>Instant.compareTo()</source>
          <target state="translated">Instant.compareTo()</target>
        </trans-unit>
        <trans-unit id="fee6acda17ad7ce4c510c61f43d7fdab1a2902fd" translate="yes" xml:space="preserve">
          <source>Instant.equals()</source>
          <target state="translated">Instant.equals()</target>
        </trans-unit>
        <trans-unit id="469a043f4a62c6671fba2ebaa1558dc33f1b31eb" translate="yes" xml:space="preserve">
          <source>Instant.from()</source>
          <target state="translated">Instant.from()</target>
        </trans-unit>
        <trans-unit id="5f8a4280030df99197cc3e57c929a87cfc2ec383" translate="yes" xml:space="preserve">
          <source>Instant.get()</source>
          <target state="translated">Instant.get()</target>
        </trans-unit>
        <trans-unit id="a7a5b573639ef766cab3bed452288b5207c0fbb2" translate="yes" xml:space="preserve">
          <source>Instant.getEpochSecond()</source>
          <target state="translated">Instant.getEpochSecond()</target>
        </trans-unit>
        <trans-unit id="3fe624607d376e8c91c9bb83e368b80914d8e573" translate="yes" xml:space="preserve">
          <source>Instant.getLong()</source>
          <target state="translated">Instant.getLong()</target>
        </trans-unit>
        <trans-unit id="fe8af7760d5b02f6f62e1b155b3ab3ebebcce5d0" translate="yes" xml:space="preserve">
          <source>Instant.getNano()</source>
          <target state="translated">Instant.getNano()</target>
        </trans-unit>
        <trans-unit id="1479143a3b019f75a1b0ae8d609a68df525c99dc" translate="yes" xml:space="preserve">
          <source>Instant.hashCode()</source>
          <target state="translated">Instant.hashCode()</target>
        </trans-unit>
        <trans-unit id="02df617ba5f54b89ade28cad7bf94f501b6c0015" translate="yes" xml:space="preserve">
          <source>Instant.isAfter()</source>
          <target state="translated">Instant.isAfter()</target>
        </trans-unit>
        <trans-unit id="ef45a764c616d623a66aef5b893c2416e27ee45e" translate="yes" xml:space="preserve">
          <source>Instant.isBefore()</source>
          <target state="translated">Instant.isBefore()</target>
        </trans-unit>
        <trans-unit id="209f3e3fa1cd8320700d98fa3c3d06e0a3b121dd" translate="yes" xml:space="preserve">
          <source>Instant.isSupported()</source>
          <target state="translated">Instant.isSupported()</target>
        </trans-unit>
        <trans-unit id="0b6446988f39f65a444059305987d6242a56bb0b" translate="yes" xml:space="preserve">
          <source>Instant.minus()</source>
          <target state="translated">Instant.minus()</target>
        </trans-unit>
        <trans-unit id="e72617a66e3e687af18abbb391fdb2ede0448972" translate="yes" xml:space="preserve">
          <source>Instant.minusMillis()</source>
          <target state="translated">Instant.minusMillis()</target>
        </trans-unit>
        <trans-unit id="312bdcddfb21162993c2ccbe4b6d690bbf6b1792" translate="yes" xml:space="preserve">
          <source>Instant.minusNanos()</source>
          <target state="translated">Instant.minusNanos()</target>
        </trans-unit>
        <trans-unit id="022f584979aa3e2d1c69d504356e5adb8de81306" translate="yes" xml:space="preserve">
          <source>Instant.minusSeconds()</source>
          <target state="translated">Instant.minusSeconds()</target>
        </trans-unit>
        <trans-unit id="fa110171576f7f5362a28f985e34795e3bbc0bc8" translate="yes" xml:space="preserve">
          <source>Instant.now()</source>
          <target state="translated">Instant.now()</target>
        </trans-unit>
        <trans-unit id="7289fb9b1e5867d265e6d2ae2101a49e5b3cf35c" translate="yes" xml:space="preserve">
          <source>Instant.ofEpochMilli()</source>
          <target state="translated">Instant.ofEpochMilli()</target>
        </trans-unit>
        <trans-unit id="82567a62553b0981ba04121a8f0b7305d825ff81" translate="yes" xml:space="preserve">
          <source>Instant.ofEpochSecond()</source>
          <target state="translated">Instant.ofEpochSecond()</target>
        </trans-unit>
        <trans-unit id="ade947a9fa763f9bd93744fef9d7863cd98e3aac" translate="yes" xml:space="preserve">
          <source>Instant.parse()</source>
          <target state="translated">Instant.parse()</target>
        </trans-unit>
        <trans-unit id="a4b7ba5b81380a5aa42870eabb2ab261aca87262" translate="yes" xml:space="preserve">
          <source>Instant.plus()</source>
          <target state="translated">Instant.plus()</target>
        </trans-unit>
        <trans-unit id="bcb2db728ca42b36dded9d5d53694ac0d07f8248" translate="yes" xml:space="preserve">
          <source>Instant.plusMillis()</source>
          <target state="translated">Instant.plusMillis()</target>
        </trans-unit>
        <trans-unit id="d11e16a82e8b6a8451a6f07c407314b41465972e" translate="yes" xml:space="preserve">
          <source>Instant.plusNanos()</source>
          <target state="translated">Instant.plusNanos()</target>
        </trans-unit>
        <trans-unit id="fb719aa3242f139c14e40ddfd6e634494ab1d5af" translate="yes" xml:space="preserve">
          <source>Instant.plusSeconds()</source>
          <target state="translated">Instant.plusSeconds()</target>
        </trans-unit>
        <trans-unit id="bd0d0012c56799c5401acf53bfa594c9e0054332" translate="yes" xml:space="preserve">
          <source>Instant.query()</source>
          <target state="translated">Instant.query()</target>
        </trans-unit>
        <trans-unit id="283289b98c6a820045afbf6aab8f82276aa1004e" translate="yes" xml:space="preserve">
          <source>Instant.range()</source>
          <target state="translated">Instant.range()</target>
        </trans-unit>
        <trans-unit id="8d085ec2dd7097b2273900152c7e591dfc4f5bac" translate="yes" xml:space="preserve">
          <source>Instant.toEpochMilli()</source>
          <target state="translated">Instant.toEpochMilli()</target>
        </trans-unit>
        <trans-unit id="8294f2350ee5ca2f4e4e49a12da45c5408a5f42c" translate="yes" xml:space="preserve">
          <source>Instant.toString()</source>
          <target state="translated">Instant.toString()</target>
        </trans-unit>
        <trans-unit id="71904369aa5313f137f88d9a6c2d55e96a628fdc" translate="yes" xml:space="preserve">
          <source>Instant.truncatedTo()</source>
          <target state="translated">Instant.truncatedTo()</target>
        </trans-unit>
        <trans-unit id="6f29f609cd78e74b4c0a7b6c66cb9ff7c6204b6b" translate="yes" xml:space="preserve">
          <source>Instant.until()</source>
          <target state="translated">Instant.until()</target>
        </trans-unit>
        <trans-unit id="f71e5810141c721b16c84a4e972d910d85cdc74a" translate="yes" xml:space="preserve">
          <source>Instant.with()</source>
          <target state="translated">Instant.with()</target>
        </trans-unit>
        <trans-unit id="2d8f21158c62934489f476d1143c8e4926c2e05a" translate="yes" xml:space="preserve">
          <source>Instantiate a &lt;code&gt;UnixSystem&lt;/code&gt; and load the native library to access the underlying system information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa96d9ed163ce6bc1340bf6114fc1f1317cd15d0" translate="yes" xml:space="preserve">
          <source>Instantiate a JavaBean.</source>
          <target state="translated">JavaBeanのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="0383b8ee190b7e938d91698b2554fa8fe3711349" translate="yes" xml:space="preserve">
          <source>Instantiate a bean.</source>
          <target state="translated">ビーンをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="d9d2a2a13c567619cb8d440851b76f96883f921b" translate="yes" xml:space="preserve">
          <source>Instantiate a new &lt;code&gt;LoginContext&lt;/code&gt; object with a name and a &lt;code&gt;CallbackHandler&lt;/code&gt; object.</source>
          <target state="translated">名前と &lt;code&gt;CallbackHandler&lt;/code&gt; オブジェクトを使用して、新しい &lt;code&gt;LoginContext&lt;/code&gt; オブジェクトをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="92d7b6a548fc6f903479ff4ef713f834161ff042" translate="yes" xml:space="preserve">
          <source>Instantiate a new &lt;code&gt;LoginContext&lt;/code&gt; object with a name and a &lt;code&gt;Subject&lt;/code&gt; object.</source>
          <target state="translated">名前と &lt;code&gt;Subject&lt;/code&gt; オブジェクトを使用して、新しい &lt;code&gt;LoginContext&lt;/code&gt; オブジェクトをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="c5c4b2872db7d08172b7d664564582f68e692d39" translate="yes" xml:space="preserve">
          <source>Instantiate a new &lt;code&gt;LoginContext&lt;/code&gt; object with a name, a &lt;code&gt;Subject&lt;/code&gt; to be authenticated, a &lt;code&gt;CallbackHandler&lt;/code&gt; object, and a login &lt;code&gt;Configuration&lt;/code&gt;.</source>
          <target state="translated">名前、認証される &lt;code&gt;Subject&lt;/code&gt; 、 &lt;code&gt;CallbackHandler&lt;/code&gt; オブジェクト、およびログイン &lt;code&gt;Configuration&lt;/code&gt; 、新しい &lt;code&gt;LoginContext&lt;/code&gt; オブジェクトをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="0415b9d103f462e4660d950851db4e3eae5e9113" translate="yes" xml:space="preserve">
          <source>Instantiate a new &lt;code&gt;LoginContext&lt;/code&gt; object with a name, a &lt;code&gt;Subject&lt;/code&gt; to be authenticated, and a &lt;code&gt;CallbackHandler&lt;/code&gt; object.</source>
          <target state="translated">名前、認証される &lt;code&gt;Subject&lt;/code&gt; 、および &lt;code&gt;CallbackHandler&lt;/code&gt; オブジェクトを使用して、新しい &lt;code&gt;LoginContext&lt;/code&gt; オブジェクトをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="b1be129f00ff130c37084dec325fb3ddb42c7eb7" translate="yes" xml:space="preserve">
          <source>Instantiate a new &lt;code&gt;LoginContext&lt;/code&gt; object with a name.</source>
          <target state="translated">名前を指定して新しい &lt;code&gt;LoginContext&lt;/code&gt; オブジェクトをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="addce17c8faff58fb463fc8bfb96cef0202b9e0d" translate="yes" xml:space="preserve">
          <source>Instantiate an &lt;code&gt;NTSystem&lt;/code&gt; and load the native library to access the underlying system information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876cfc716d2c27bb45fe8a47d73dfe7f2b4f2726" translate="yes" xml:space="preserve">
          <source>Instantiate an AppletStub() and associate that AppletStub with the Applet via an invocation of setStub().</source>
          <target state="translated">AppletStub()のインスタンスを作成し、setStub()を呼び出すことでその AppletStub をアプレットに関連付けます。</target>
        </trans-unit>
        <trans-unit id="55b1e12ecb1409f98bc6f307c8aff6a448eb6340" translate="yes" xml:space="preserve">
          <source>Instantiate the javaBean named as a child of this &lt;code&gt;BeanContext&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;BeanContext&lt;/code&gt; の子として指定されたjavaBeanをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="f02a0fbac3524ec0d6e1c8f66ea593e7ac37f103" translate="yes" xml:space="preserve">
          <source>Instantiate the javaBean named as a child of this &lt;code&gt;BeanContext&lt;/code&gt;. The implementation of the JavaBean is derived from the value of the beanName parameter, and is defined by the &lt;code&gt;java.beans.Beans.instantiate()&lt;/code&gt; method.</source>
          <target state="translated">このの子として指定されたjavaBeanインスタンス &lt;code&gt;BeanContext&lt;/code&gt; 。JavaBeanの実装は、beanNameパラメーターの値から派生し、 &lt;code&gt;java.beans.Beans.instantiate()&lt;/code&gt; メソッドによって定義されます。</target>
        </trans-unit>
        <trans-unit id="73ace75deb96660198bced061c7218ac349011a7" translate="yes" xml:space="preserve">
          <source>Instantiated and used by a menu item to handle the current menu selection from mouse events.</source>
          <target state="translated">インスタンス化され、メニュー項目によって使用され、マウスイベントからの現在のメニュー選択を処理します。</target>
        </trans-unit>
        <trans-unit id="21a70ae00e0f878e23460009aa1f7c43cf9ab691" translate="yes" xml:space="preserve">
          <source>Instantiated and used by a menu item to handle the current menu selection from mouse events. A MouseInputHandler processes and forwards all mouse events to a shared instance of the MenuSelectionManager.</source>
          <target state="translated">インスタンス化され、メニュー項目によって使用され、マウスイベントから現在のメニュー選択を処理します。MouseInputHandler は、すべてのマウスイベントを処理し、MenuSelectionManager の共有インスタンスに転送します。</target>
        </trans-unit>
        <trans-unit id="8c31e59e8e5d70c7b48526403d2ae4b1651084d6" translate="yes" xml:space="preserve">
          <source>Instantiates a builder to build a module descriptor for a &lt;em&gt;normal&lt;/em&gt; module.</source>
          <target state="translated">ビルダーをインスタンス化して、&lt;em&gt;通常の&lt;/em&gt;モジュールのモジュール記述子を作成します。</target>
        </trans-unit>
        <trans-unit id="9b5aeb23cbb369b457ff95083ef7d0155ff8281d" translate="yes" xml:space="preserve">
          <source>Instantiates a builder to build a module descriptor for a &lt;em&gt;normal&lt;/em&gt; module. This method is equivalent to invoking &lt;a href=&quot;#newModule(java.lang.String,java.util.Set)&quot;&gt;&lt;code&gt;newModule&lt;/code&gt;&lt;/a&gt; with an empty set of &lt;a href=&quot;moduledescriptor.modifier&quot;&gt;&lt;code&gt;modifiers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ビルダーをインスタンス化して、&lt;em&gt;通常の&lt;/em&gt;モジュールのモジュール記述子を作成します。このメソッドは、空の&lt;a href=&quot;moduledescriptor.modifier&quot;&gt; &lt;code&gt;modifiers&lt;/code&gt; &lt;/a&gt;セットを&lt;a href=&quot;#newModule(java.lang.String,java.util.Set)&quot;&gt; &lt;code&gt;newModule&lt;/code&gt; &lt;/a&gt;してnewModuleを呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="9f4d1e7d264f13567951045e986ba429cd52d0ee" translate="yes" xml:space="preserve">
          <source>Instantiates a builder to build a module descriptor for an automatic module.</source>
          <target state="translated">自動モジュール用のモジュール記述子を構築するためのビルダーをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="a62ccb053bd1bdb9fb8538a216d897a6692a9fc6" translate="yes" xml:space="preserve">
          <source>Instantiates a builder to build a module descriptor for an automatic module. This method is equivalent to invoking &lt;a href=&quot;#newModule(java.lang.String,java.util.Set)&quot;&gt;&lt;code&gt;newModule&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&quot;moduledescriptor.modifier#AUTOMATIC&quot;&gt;&lt;code&gt;AUTOMATIC&lt;/code&gt;&lt;/a&gt; modifier.</source>
          <target state="translated">ビルダーをインスタンス化して、自動モジュールのモジュール記述子を作成します。このメソッドは、&lt;a href=&quot;moduledescriptor.modifier#AUTOMATIC&quot;&gt; &lt;code&gt;AUTOMATIC&lt;/code&gt; &lt;/a&gt;修飾子を&lt;a href=&quot;#newModule(java.lang.String,java.util.Set)&quot;&gt; &lt;code&gt;newModule&lt;/code&gt; &lt;/a&gt;してnewModuleを呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="9c17d307d052c968a99d9702d77042d5e1a56422" translate="yes" xml:space="preserve">
          <source>Instantiates a builder to build a module descriptor for an open module.</source>
          <target state="translated">オープンモジュール用のモジュール記述子を構築するためのビルダーをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="b450208f930310756168f29081f78a411d4a17d1" translate="yes" xml:space="preserve">
          <source>Instantiates a builder to build a module descriptor for an open module. This method is equivalent to invoking &lt;a href=&quot;#newModule(java.lang.String,java.util.Set)&quot;&gt;&lt;code&gt;newModule&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&quot;moduledescriptor.modifier#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt; modifier.</source>
          <target state="translated">ビルダーをインスタンス化して、開いているモジュールのモジュール記述子を作成します。このメソッドは、&lt;a href=&quot;moduledescriptor.modifier#OPEN&quot;&gt; &lt;code&gt;OPEN&lt;/code&gt; &lt;/a&gt;修飾子を&lt;a href=&quot;#newModule(java.lang.String,java.util.Set)&quot;&gt; &lt;code&gt;newModule&lt;/code&gt; &lt;/a&gt;してnewModuleを呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="a214a90e918adfbacb6a054f1103fa97a8ec95e5" translate="yes" xml:space="preserve">
          <source>Instantiates a builder to build a module descriptor.</source>
          <target state="translated">モジュール記述子を構築するためのビルダーをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="e36322fa60c5f5640922f7e2a26d4e36753a78c8" translate="yes" xml:space="preserve">
          <source>Instantiates a resource bundle for the given bundle name of the given format and locale, using the given class loader if necessary.</source>
          <target state="translated">指定したフォーマットとロケールのバンドル名に対応するリソースバンドルのインスタンスを作成し、 必要に応じて指定したクラスローダを使用します。</target>
        </trans-unit>
        <trans-unit id="33212540c83259a0b7c9e40a44e2e8a045411b70" translate="yes" xml:space="preserve">
          <source>Instantiates a resource bundle for the given bundle name of the given format and locale, using the given class loader if necessary. This method returns &lt;code&gt;null&lt;/code&gt; if there is no resource bundle available for the given parameters. If a resource bundle can't be instantiated due to an unexpected error, the error must be reported by throwing an &lt;code&gt;Error&lt;/code&gt; or &lt;code&gt;Exception&lt;/code&gt; rather than simply returning &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">必要に応じて、指定されたクラスローダーを使用して、指定された形式とロケールの指定されたバンドル名のリソースバンドルをインスタンス化します。指定されたパラメーターに使用可能なリソースバンドルがない場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。予期しないエラーのためにリソースバンドルをインスタンス化できない場合は、単に &lt;code&gt;null&lt;/code&gt; を返すのではなく、 &lt;code&gt;Error&lt;/code&gt; または &lt;code&gt;Exception&lt;/code&gt; スローしてエラーを報告する必要があります。</target>
        </trans-unit>
        <trans-unit id="f27de19f0033571d04714e2f37dcd24fb8fb48c6" translate="yes" xml:space="preserve">
          <source>Instantiates an X509Certificate object, and initializes it with the data read from the input stream &lt;code&gt;inStream&lt;/code&gt;.</source>
          <target state="translated">X509Certificateオブジェクトをインスタンス化し、入力ストリーム &lt;code&gt;inStream&lt;/code&gt; から読み取ったデータで初期化します。</target>
        </trans-unit>
        <trans-unit id="d10780b8657c5a6baf2ef84b2ec553a3f0fed77e" translate="yes" xml:space="preserve">
          <source>Instantiates an X509Certificate object, and initializes it with the data read from the input stream &lt;code&gt;inStream&lt;/code&gt;. The implementation (X509Certificate is an abstract class) is provided by the class specified as the value of the &lt;code&gt;cert.provider.x509v1&lt;/code&gt; security property.</source>
          <target state="translated">X509Certificateオブジェクトをインスタンス化し、入力ストリーム &lt;code&gt;inStream&lt;/code&gt; から読み取ったデータで初期化します。実装（X509Certificateは抽象クラスです）は、 &lt;code&gt;cert.provider.x509v1&lt;/code&gt; セキュリティプロパティの値として指定されたクラスによって提供されます。</target>
        </trans-unit>
        <trans-unit id="3d897854ef79a6168419ce621da81a83fe096343" translate="yes" xml:space="preserve">
          <source>Instantiates an X509Certificate object, and initializes it with the specified byte array.</source>
          <target state="translated">X509Certificateオブジェクトのインスタンスを作成し、指定されたバイト配列で初期化します。</target>
        </trans-unit>
        <trans-unit id="3bbb8f037146343942fe5611e54a4620c9c3926a" translate="yes" xml:space="preserve">
          <source>Instantiates an X509Certificate object, and initializes it with the specified byte array. The implementation (X509Certificate is an abstract class) is provided by the class specified as the value of the &lt;code&gt;cert.provider.x509v1&lt;/code&gt; security property.</source>
          <target state="translated">X509Certificateオブジェクトをインスタンス化し、指定されたバイト配列で初期化します。実装（X509Certificateは抽象クラスです）は、 &lt;code&gt;cert.provider.x509v1&lt;/code&gt; セキュリティプロパティの値として指定されたクラスによって提供されます。</target>
        </trans-unit>
        <trans-unit id="578750de9ffe0504b9800add6b4b1406f0c417ad" translate="yes" xml:space="preserve">
          <source>Instantiates an event, so it can be populated with data and written to the Flight Recorder system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d078b788468785bd9ca029a1d313bd8b064265f" translate="yes" xml:space="preserve">
          <source>Instantiates an object using the class Loader specified by its &lt;code&gt;ObjectName&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ObjectName&lt;/code&gt; で指定されたクラスLoaderを使用してオブジェクトをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="229e4fd8c318f2816b2da5cb2cc7f22f74d34b9d" translate="yes" xml:space="preserve">
          <source>Instantiates an object using the class Loader specified by its &lt;code&gt;ObjectName&lt;/code&gt;. If the loader name is null, the ClassLoader that loaded the MBean Server will be used. The object's class should have a public constructor. This method returns a reference to the newly created object. The newly created object is not registered in the MBean server.</source>
          <target state="translated">&lt;code&gt;ObjectName&lt;/code&gt; で指定されたクラスローダーを使用してオブジェクトをインスタンス化します。ローダー名がnullの場合、MBeanサーバーをロードしたClassLoaderが使用されます。オブジェクトのクラスにはパブリックコンストラクターが必要です。このメソッドは、新しく作成されたオブジェクトへの参照を返します。新しく作成されたオブジェクトはMBeanサーバーに登録されていません。</target>
        </trans-unit>
        <trans-unit id="77c2024675e8321f0c98c01d126d67bdc31b1f13" translate="yes" xml:space="preserve">
          <source>Instantiates an object using the list of all class loaders registered in the MBean server &lt;a href=&quot;loading/classloaderrepository&quot;&gt;&lt;code&gt;Class Loader
 Repository&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">MBeanサーバーの&lt;a href=&quot;loading/classloaderrepository&quot;&gt; &lt;code&gt;Class Loader Repository&lt;/code&gt; &lt;/a&gt;登録されているすべてのクラスローダーのリストを使用して、オブジェクトをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="f5c59060e0b844cc4226c8fefa4226a89af4a97e" translate="yes" xml:space="preserve">
          <source>Instantiates an object using the list of all class loaders registered in the MBean server &lt;a href=&quot;loading/classloaderrepository&quot;&gt;&lt;code&gt;Class Loader
 Repository&lt;/code&gt;&lt;/a&gt;. The object's class should have a public constructor. The call returns a reference to the newly created object. The newly created object is not registered in the MBean server.</source>
          <target state="translated">MBeanサーバーの&lt;a href=&quot;loading/classloaderrepository&quot;&gt; &lt;code&gt;Class Loader Repository&lt;/code&gt; &lt;/a&gt;登録されているすべてのクラスローダーのリストを使用して、オブジェクトをインスタンス化します。オブジェクトのクラスにはパブリックコンストラクターが必要です。呼び出しは、新しく作成されたオブジェクトへの参照を返します。新しく作成されたオブジェクトはMBeanサーバーに登録されていません。</target>
        </trans-unit>
        <trans-unit id="aab381f12f5643cc8bf1cf1b471a5e4d9931eb02" translate="yes" xml:space="preserve">
          <source>Instantiates an object using the list of all class loaders registered in the MBean server's &lt;a href=&quot;loading/classloaderrepository&quot;&gt;&lt;code&gt;Class Loader
 Repository&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">MBeanサーバーの&lt;a href=&quot;loading/classloaderrepository&quot;&gt; &lt;code&gt;Class Loader Repository&lt;/code&gt; &lt;/a&gt;登録されているすべてのクラスローダーのリストを使用して、オブジェクトをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="74c16ae253f9df6c68d0c73d01b41ab87e22b118" translate="yes" xml:space="preserve">
          <source>Instantiates an object using the list of all class loaders registered in the MBean server's &lt;a href=&quot;loading/classloaderrepository&quot;&gt;&lt;code&gt;Class Loader
 Repository&lt;/code&gt;&lt;/a&gt;. The object's class should have a public constructor. This method returns a reference to the newly created object. The newly created object is not registered in the MBean server.</source>
          <target state="translated">MBeanサーバーの&lt;a href=&quot;loading/classloaderrepository&quot;&gt; &lt;code&gt;Class Loader Repository&lt;/code&gt; &lt;/a&gt;登録されているすべてのクラスローダーのリストを使用して、オブジェクトをインスタンス化します。オブジェクトのクラスにはパブリックコンストラクターが必要です。このメソッドは、新しく作成されたオブジェクトへの参照を返します。新しく作成されたオブジェクトはMBeanサーバーに登録されていません。</target>
        </trans-unit>
        <trans-unit id="9b0d40014c464532f6cd51197ac653a276e2815f" translate="yes" xml:space="preserve">
          <source>Instantiates an object.</source>
          <target state="translated">オブジェクトのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="0e346f2efdd0717a049f1c254596eb011a633531" translate="yes" xml:space="preserve">
          <source>Instantiates an object. The class loader to be used is identified by its object name. If the object name of the loader is null, the ClassLoader that loaded the MBean server will be used. The object's class should have a public constructor. The call returns a reference to the newly created object. The newly created object is not registered in the MBean server.</source>
          <target state="translated">オブジェクトをインスタンス化します。使用するクラス・ローダは、そのオブジェクト名で識別されます。ローダのオブジェクト名が null の場合は、MBean サーバをロードした ClassLoader が使用されます。オブジェクトのクラスは、パブリック・コンストラクタを持っている必要があります。呼び出しは、新しく作成されたオブジェクトへの参照を返します。新しく作成されたオブジェクトは MBean サーバには登録されていません。</target>
        </trans-unit>
        <trans-unit id="b9ad072ae53c580f66712e4f3678fbfb14cb0970" translate="yes" xml:space="preserve">
          <source>Instantiates and registers an MBean in the MBean server.</source>
          <target state="translated">MBean サーバに MBean をインスタンス化して登録します。</target>
        </trans-unit>
        <trans-unit id="7c0841b4136816d9cef5f8d492471a0712897661" translate="yes" xml:space="preserve">
          <source>Instantiates and registers an MBean in the MBean server. The MBean server will use its &lt;a href=&quot;loading/classloaderrepository&quot;&gt;&lt;code&gt;Default Loader
 Repository&lt;/code&gt;&lt;/a&gt; to load the class of the MBean. An object name is associated with the MBean. If the object name given is null, the MBean must provide its own name by implementing the &lt;a href=&quot;mbeanregistration&quot;&gt;&lt;code&gt;MBeanRegistration&lt;/code&gt;&lt;/a&gt; interface and returning the name from the &lt;a href=&quot;mbeanregistration#preRegister(javax.management.MBeanServer,javax.management.ObjectName)&quot;&gt;&lt;code&gt;preRegister&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">MBeanをインスタンス化してMBeanサーバーに登録します。 MBeanサーバーは、&lt;a href=&quot;loading/classloaderrepository&quot;&gt; &lt;code&gt;Default Loader Repository&lt;/code&gt; &lt;/a&gt;を使用してMBeanのクラスをロードします。オブジェクト名はMBeanに関連付けられています。指定されたオブジェクト名がnullの場合、MBeanは、&lt;a href=&quot;mbeanregistration&quot;&gt; &lt;code&gt;MBeanRegistration&lt;/code&gt; &lt;/a&gt;インターフェースを実装し、&lt;a href=&quot;mbeanregistration#preRegister(javax.management.MBeanServer,javax.management.ObjectName)&quot;&gt; &lt;code&gt;preRegister&lt;/code&gt; &lt;/a&gt;メソッドから名前を返すことにより、独自の名前を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="f4a6582fa1de0ef7bcb6baa30d9a4c2800102f76" translate="yes" xml:space="preserve">
          <source>Instantiates and registers an MBean in the MBean server. The MBean server will use its &lt;a href=&quot;loading/classloaderrepository&quot;&gt;&lt;code&gt;Default Loader
 Repository&lt;/code&gt;&lt;/a&gt; to load the class of the MBean. An object name is associated with the MBean. If the object name given is null, the MBean must provide its own name by implementing the &lt;a href=&quot;mbeanregistration&quot;&gt;&lt;code&gt;MBeanRegistration&lt;/code&gt;&lt;/a&gt; interface and returning the name from the &lt;a href=&quot;mbeanregistration#preRegister-javax.management.MBeanServer-javax.management.ObjectName-&quot;&gt;&lt;code&gt;preRegister&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">MBeanサーバーでMBeanをインスタンス化して登録します。 MBeanサーバーは、&lt;a href=&quot;loading/classloaderrepository&quot;&gt; &lt;code&gt;Default Loader Repository&lt;/code&gt; &lt;/a&gt;を使用してMBeanのクラスをロードします。オブジェクト名はMBeanに関連付けられています。指定されたオブジェクト名がnullの場合、MBeanは、&lt;a href=&quot;mbeanregistration&quot;&gt; &lt;code&gt;MBeanRegistration&lt;/code&gt; &lt;/a&gt;インターフェースを実装し、&lt;a href=&quot;mbeanregistration#preRegister-javax.management.MBeanServer-javax.management.ObjectName-&quot;&gt; &lt;code&gt;preRegister&lt;/code&gt; &lt;/a&gt;メソッドから名前を返すことにより、独自の名前を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="c5f1d81dc39f22c130f0355f2c39558515e0a3fd" translate="yes" xml:space="preserve">
          <source>Instantiates and registers an MBean in the MBean server. The class loader to be used is identified by its object name. An object name is associated with the MBean. If the object name of the loader is not specified, the ClassLoader that loaded the MBean server will be used. If the MBean object name given is null, the MBean must provide its own name by implementing the &lt;a href=&quot;mbeanregistration&quot;&gt;&lt;code&gt;MBeanRegistration&lt;/code&gt;&lt;/a&gt; interface and returning the name from the &lt;a href=&quot;mbeanregistration#preRegister(javax.management.MBeanServer,javax.management.ObjectName)&quot;&gt;&lt;code&gt;preRegister&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">MBeanをインスタンス化してMBeanサーバーに登録します。使用するクラスローダーは、そのオブジェクト名で識別されます。オブジェクト名はMBeanに関連付けられています。ローダーのオブジェクト名が指定されていない場合、MBeanサーバーをロードしたClassLoaderが使用されます。指定されたMBeanオブジェクト名がnullの場合、MBeanは、&lt;a href=&quot;mbeanregistration&quot;&gt; &lt;code&gt;MBeanRegistration&lt;/code&gt; &lt;/a&gt;インターフェースを実装し、&lt;a href=&quot;mbeanregistration#preRegister(javax.management.MBeanServer,javax.management.ObjectName)&quot;&gt; &lt;code&gt;preRegister&lt;/code&gt; &lt;/a&gt;メソッドから名前を返すことにより、独自の名前を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="a1b318f4d05a200155a91b515ae40141a0c597f4" translate="yes" xml:space="preserve">
          <source>Instantiates and registers an MBean in the MBean server. The class loader to be used is identified by its object name. An object name is associated with the MBean. If the object name of the loader is not specified, the ClassLoader that loaded the MBean server will be used. If the MBean object name given is null, the MBean must provide its own name by implementing the &lt;a href=&quot;mbeanregistration&quot;&gt;&lt;code&gt;MBeanRegistration&lt;/code&gt;&lt;/a&gt; interface and returning the name from the &lt;a href=&quot;mbeanregistration#preRegister-javax.management.MBeanServer-javax.management.ObjectName-&quot;&gt;&lt;code&gt;preRegister&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">MBeanサーバーでMBeanをインスタンス化して登録します。使用されるクラスローダーは、そのオブジェクト名で識別されます。オブジェクト名はMBeanに関連付けられています。ローダーのオブジェクト名が指定されていない場合、MBeanサーバーをロードしたClassLoaderが使用されます。指定されたMBeanオブジェクト名がnullの場合、MBeanは、&lt;a href=&quot;mbeanregistration&quot;&gt; &lt;code&gt;MBeanRegistration&lt;/code&gt; &lt;/a&gt;インターフェースを実装し、&lt;a href=&quot;mbeanregistration#preRegister-javax.management.MBeanServer-javax.management.ObjectName-&quot;&gt; &lt;code&gt;preRegister&lt;/code&gt; &lt;/a&gt;メソッドから名前を返すことにより、独自の名前を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="3a34f5ecfa7dca7f054d9a843197d5f13f58ac2c" translate="yes" xml:space="preserve">
          <source>Instantiates and registers an MBean in the MBean server. The class loader to be used is identified by its object name. An object name is associated with the MBean. If the object name of the loader is null, the ClassLoader that loaded the MBean server will be used. If the MBean's object name given is null, the MBean must provide its own name by implementing the &lt;a href=&quot;mbeanregistration&quot;&gt;&lt;code&gt;MBeanRegistration&lt;/code&gt;&lt;/a&gt; interface and returning the name from the &lt;a href=&quot;mbeanregistration#preRegister(javax.management.MBeanServer,javax.management.ObjectName)&quot;&gt;&lt;code&gt;preRegister&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">MBeanをインスタンス化してMBeanサーバーに登録します。使用するクラスローダーは、そのオブジェクト名で識別されます。オブジェクト名はMBeanに関連付けられています。ローダーのオブジェクト名がnullの場合、MBeanサーバーをロードしたClassLoaderが使用されます。指定されたMBeanのオブジェクト名がnullの場合、MBeanは、&lt;a href=&quot;mbeanregistration&quot;&gt; &lt;code&gt;MBeanRegistration&lt;/code&gt; &lt;/a&gt;インターフェイスを実装し、&lt;a href=&quot;mbeanregistration#preRegister(javax.management.MBeanServer,javax.management.ObjectName)&quot;&gt; &lt;code&gt;preRegister&lt;/code&gt; &lt;/a&gt;メソッドから名前を返すことにより、独自の名前を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="2585589c28f2d573b01f0d75c23a8ddbbda86f6c" translate="yes" xml:space="preserve">
          <source>Instantiates and registers an MBean in the MBean server. The class loader to be used is identified by its object name. An object name is associated with the MBean. If the object name of the loader is null, the ClassLoader that loaded the MBean server will be used. If the MBean's object name given is null, the MBean must provide its own name by implementing the &lt;a href=&quot;mbeanregistration&quot;&gt;&lt;code&gt;MBeanRegistration&lt;/code&gt;&lt;/a&gt; interface and returning the name from the &lt;a href=&quot;mbeanregistration#preRegister-javax.management.MBeanServer-javax.management.ObjectName-&quot;&gt;&lt;code&gt;preRegister&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">MBeanサーバーでMBeanをインスタンス化して登録します。使用されるクラスローダーは、そのオブジェクト名で識別されます。オブジェクト名はMBeanに関連付けられています。ローダーのオブジェクト名がnullの場合、MBeanサーバーをロードしたClassLoaderが使用されます。指定されたMBeanのオブジェクト名がnullの場合、MBeanは、&lt;a href=&quot;mbeanregistration&quot;&gt; &lt;code&gt;MBeanRegistration&lt;/code&gt; &lt;/a&gt;インターフェースを実装し、&lt;a href=&quot;mbeanregistration#preRegister-javax.management.MBeanServer-javax.management.ObjectName-&quot;&gt; &lt;code&gt;preRegister&lt;/code&gt; &lt;/a&gt;メソッドから名前を返すことにより、独自の名前を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="179278f7aa5e242190e6efd0ca3d8b0d94351dc9" translate="yes" xml:space="preserve">
          <source>Instantiates this MBean instance with the data found for the MBean in the persistent store.</source>
          <target state="translated">この MBean インスタンスを、永続ストア内の MBean で検出されたデータでインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="d81beb0c012ff038aa8be13235c9becb70246617" translate="yes" xml:space="preserve">
          <source>Instantiates this MBean instance with the data found for the MBean in the persistent store. The data loaded could include attribute and operation values.</source>
          <target state="translated">永続ストアにある MBean のデータを使用して、この MBean インスタンスをインスタンス化します。読み込まれるデータには、属性値と操作値が含まれます。</target>
        </trans-unit>
        <trans-unit id="ddc0ddb606e09e25493c502e44f7129688b7a73d" translate="yes" xml:space="preserve">
          <source>Instantiates thisMBean instance with the data found for the MBean in the persistent store.</source>
          <target state="translated">永続ストア内の MBean で見つかったデータを使用して、この MBean インスタンスをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="8bd407a592252a829f4bb9930009d7a487f35816" translate="yes" xml:space="preserve">
          <source>Instantiates thisMBean instance with the data found for the MBean in the persistent store. The data loaded could include attribute and operation values. This method should be called during construction or initialization of this instance, and before the MBean is registered with the MBeanServer.</source>
          <target state="translated">永続ストア内の MBean で検出されたデータを使用して、このMBean インスタンスをインスタンス化します。ロードされるデータには、属性値や操作値が含まれます。このメソッドは、このインスタンスの構築中または初期化中に、MBean が MBeanServer に登録される前に呼ばれるべきです。</target>
        </trans-unit>
        <trans-unit id="140e282658b683eb5a616393169a285f178453dc" translate="yes" xml:space="preserve">
          <source>Instantiating the object, either by calling a public constructor or a public factory method.</source>
          <target state="translated">パブリック コンストラクタまたはパブリック ファクトリー メソッドを呼び出すことで、オブジェクトのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="94eee99d93b714cf31138f2ed2ee6f9e67f6e3f9" translate="yes" xml:space="preserve">
          <source>InstantiationError</source>
          <target state="translated">InstantiationError</target>
        </trans-unit>
        <trans-unit id="ef10dd1a9b12de51bbd9401d757f87db07d5d41d" translate="yes" xml:space="preserve">
          <source>InstantiationException</source>
          <target state="translated">InstantiationException</target>
        </trans-unit>
        <trans-unit id="f13e75a892a69b72361894f56994b717bbac0d3c" translate="yes" xml:space="preserve">
          <source>Instants have a fixed output format, although this method provides some control over the fractional digits. They are converted to a date-time with a zone-offset of UTC and printed using the standard ISO-8601 format. The localized decimal style is not used.</source>
          <target state="translated">インスタントの出力フォーマットは固定されていますが、この方法では小数点以下の桁数を制御することができます。インスタントは UTC のゾーンオフセットを持つ日付時刻に変換され、標準の ISO-8601 フォーマットを使用して印刷されます。ローカライズされた10進数スタイルは使用されません。</target>
        </trans-unit>
        <trans-unit id="7b19c7031238ab7d087c70b9e7a61125e5289e25" translate="yes" xml:space="preserve">
          <source>Instants have a fixed output format. They are converted to a date-time with a zone-offset of UTC and formatted using the standard ISO-8601 format. With this method, formatting nano-of-second outputs zero, three, six or nine digits as necessary. The localized decimal style is not used.</source>
          <target state="translated">インスタントの出力フォーマットは固定されています。これを UTC のゾーンオフセットを持つ日付時間に変換し、標準 ISO-8601 フォーマットを使用してフォーマットします。この方法では、nano-of-secondをフォーマットすると、必要に応じて0、3、6、または9桁の数字が出力されます。地域化された10進数スタイルは使用されません。</target>
        </trans-unit>
        <trans-unit id="7a5042cb0a07096834f0f6c2e64915d1580147fd" translate="yes" xml:space="preserve">
          <source>Instants have a fixed output format. They are converted to a date-time with a zone-offset of UTC and formatted using the standard ISO-8601 format. With this method, formatting nano-of-second outputs zero, three, six or nine digits digits as necessary. The localized decimal style is not used.</source>
          <target state="translated">インスタントの出力フォーマットは固定されています。ゾーンオフセットが UTC の日付時間に変換され、標準 ISO-8601 フォーマットを使用してフォーマットされます。この方法では、nano-of-secondをフォーマットすると、必要に応じてゼロ、3、6、または9桁の桁数が出力されます。地域化された10進数スタイルは使用されません。</target>
        </trans-unit>
        <trans-unit id="3f8c7816e12678ca6bb8614828bf3f8905862b12" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;SURROGATES_AREA&lt;/code&gt;, use &lt;a href=&quot;#HIGH_SURROGATES&quot;&gt;&lt;code&gt;HIGH_SURROGATES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#HIGH_PRIVATE_USE_SURROGATES&quot;&gt;&lt;code&gt;HIGH_PRIVATE_USE_SURROGATES&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#LOW_SURROGATES&quot;&gt;&lt;code&gt;LOW_SURROGATES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SURROGATES_AREA&lt;/code&gt; の代わりに、&lt;a href=&quot;#HIGH_SURROGATES&quot;&gt; &lt;code&gt;HIGH_SURROGATES&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#HIGH_PRIVATE_USE_SURROGATES&quot;&gt; &lt;code&gt;HIGH_PRIVATE_USE_SURROGATES&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#LOW_SURROGATES&quot;&gt; &lt;code&gt;LOW_SURROGATES&lt;/code&gt; を使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9af7a3ca143765466faf86eb30d2ee851f0d49e6" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;SURROGATES_AREA&lt;/code&gt;, use &lt;a href=&quot;#HIGH_SURROGATES&quot;&gt;&lt;code&gt;HIGH_SURROGATES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#HIGH_PRIVATE_USE_SURROGATES&quot;&gt;&lt;code&gt;HIGH_PRIVATE_USE_SURROGATES&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#LOW_SURROGATES&quot;&gt;&lt;code&gt;LOW_SURROGATES&lt;/code&gt;&lt;/a&gt;. These constants match the block definitions of the Unicode Standard. The &lt;a href=&quot;#of(char)&quot;&gt;&lt;code&gt;of(char)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#of(int)&quot;&gt;&lt;code&gt;of(int)&lt;/code&gt;&lt;/a&gt; methods return the standard constants.</source>
          <target state="translated">&lt;code&gt;SURROGATES_AREA&lt;/code&gt; の代わりに、&lt;a href=&quot;#HIGH_SURROGATES&quot;&gt; &lt;code&gt;HIGH_SURROGATES&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#HIGH_PRIVATE_USE_SURROGATES&quot;&gt; &lt;code&gt;HIGH_PRIVATE_USE_SURROGATES&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#LOW_SURROGATES&quot;&gt; &lt;code&gt;LOW_SURROGATES&lt;/code&gt; を使用し&lt;/a&gt;ます。これらの定数は、Unicode標準のブロック定義と一致します。&lt;a href=&quot;#of(char)&quot;&gt; &lt;code&gt;of(char)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#of(int)&quot;&gt; &lt;code&gt;of(int)&lt;/code&gt; &lt;/a&gt;方法は、標準的な定数を返します。</target>
        </trans-unit>
        <trans-unit id="867988a38d6251fdf70166a5ab1ed10ad00da4b4" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;SURROGATES_AREA&lt;/code&gt;, use &lt;a href=&quot;#HIGH_SURROGATES&quot;&gt;&lt;code&gt;HIGH_SURROGATES&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#HIGH_PRIVATE_USE_SURROGATES&quot;&gt;&lt;code&gt;HIGH_PRIVATE_USE_SURROGATES&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#LOW_SURROGATES&quot;&gt;&lt;code&gt;LOW_SURROGATES&lt;/code&gt;&lt;/a&gt;. These constants match the block definitions of the Unicode Standard. The &lt;a href=&quot;#of(int)&quot;&gt;&lt;code&gt;of(char)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#of(int)&quot;&gt;&lt;code&gt;of(int)&lt;/code&gt;&lt;/a&gt; methods return the standard constants.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d073503424befe7228527ef14daae2ba5a451ae" translate="yes" xml:space="preserve">
          <source>Instead of using BoxLayout directly, many programs use the Box class. The Box class is a lightweight container that uses a BoxLayout. It also provides handy methods to help you use BoxLayout well. Adding components to multiple nested boxes is a powerful way to get the arrangement you want.</source>
          <target state="translated">BoxLayoutを直接使う代わりに、多くのプログラムではBoxクラスを使います。BoxクラスはBoxLayoutを使用する軽量なコンテナです。また、BoxLayoutを上手に使うための便利なメソッドも用意されています。複数の入れ子になったボックスにコンポーネントを追加することは、思い通りの配置を得るための強力な方法です。</target>
        </trans-unit>
        <trans-unit id="4e5e10526737d447f5643a1e24b69493ce6e3b06" translate="yes" xml:space="preserve">
          <source>Instead of using this field, directly create the equivalent array &lt;code&gt;{ ImageInputStream.class }&lt;/code&gt;.</source>
          <target state="translated">このフィールドを使用する代わりに、同等の配列 &lt;code&gt;{ ImageInputStream.class }&lt;/code&gt; 直接作成します。</target>
        </trans-unit>
        <trans-unit id="780dadeb02ccfeb136efdd213ce65d2eb0e6fcf2" translate="yes" xml:space="preserve">
          <source>Instead of using this field, directly create the equivalent array &lt;code&gt;{ ImageOutputStream.class }&lt;/code&gt;.</source>
          <target state="translated">このフィールドを使用する代わりに、同等の配列 &lt;code&gt;{ ImageOutputStream.class }&lt;/code&gt; 直接作成します。</target>
        </trans-unit>
        <trans-unit id="a76ecb0f29bb0ed9ae844bddeec7699252e32e09" translate="yes" xml:space="preserve">
          <source>Instead, do</source>
          <target state="translated">代わりに</target>
        </trans-unit>
        <trans-unit id="c0779d186af9e39eb0e364e25cace0e2b0389c31" translate="yes" xml:space="preserve">
          <source>Instruction to approve the current selection (same as pressing yes or ok).</source>
          <target state="translated">現在の選択を承認するための指示 (yes または ok を押したのと同じ)。</target>
        </trans-unit>
        <trans-unit id="1e138764968627cc5cf440dab17e78a295601b2d" translate="yes" xml:space="preserve">
          <source>Instruction to cancel the current selection.</source>
          <target state="translated">現在の選択をキャンセルする命令。</target>
        </trans-unit>
        <trans-unit id="095fc7f52a999a93eab55ef668da534e65dcc66f" translate="yes" xml:space="preserve">
          <source>Instruction to display both files and directories.</source>
          <target state="translated">ファイルとディレクトリの両方を表示する命令</target>
        </trans-unit>
        <trans-unit id="84eaf7314b62edf0e1996f806421e952c8810933" translate="yes" xml:space="preserve">
          <source>Instruction to display only directories.</source>
          <target state="translated">ディレクトリのみを表示する命令</target>
        </trans-unit>
        <trans-unit id="50c58148946ae1fa651bbe05ed5453e90be359d5" translate="yes" xml:space="preserve">
          <source>Instruction to display only files.</source>
          <target state="translated">ファイルのみを表示する命令</target>
        </trans-unit>
        <trans-unit id="8913eb61a228ce586fe19a199cfad44aa2f2070d" translate="yes" xml:space="preserve">
          <source>Instruction to display the control buttons.</source>
          <target state="translated">コントロールボタンを表示させる指示。</target>
        </trans-unit>
        <trans-unit id="025a4b7ad1f43ebd40c44e63577913b0a04dd14d" translate="yes" xml:space="preserve">
          <source>Instructs XML processors to use XML Catalogs to resolve entity references. Catalogs may be set through JAXP factories, system properties, or jaxp.properties by using the &lt;code&gt;javax.xml.catalog.files&lt;/code&gt; property defined in &lt;a href=&quot;catalog/catalogfeatures&quot;&gt;&lt;code&gt;CatalogFeatures&lt;/code&gt;&lt;/a&gt;. The following code enables Catalog on SAX parser:</source>
          <target state="translated">XMLプロセッサにXMLカタログを使用してエンティティ参照を解決するように指示します。カタログは、&lt;a href=&quot;catalog/catalogfeatures&quot;&gt; &lt;code&gt;CatalogFeatures&lt;/code&gt; で&lt;/a&gt;定義されている &lt;code&gt;javax.xml.catalog.files&lt;/code&gt; プロパティを使用して、JAXPファクトリ、システムプロパティ、またはjaxp.propertiesを介して設定できます。次のコードは、SAXパーサーでカタログを有効にします。</target>
        </trans-unit>
        <trans-unit id="5ae96528f937bf1bcb529f8d1cea80a6ea01db15" translate="yes" xml:space="preserve">
          <source>Instructs the &lt;code&gt;LayoutCache&lt;/code&gt; that the bounds for &lt;code&gt;path&lt;/code&gt; are invalid, and need to be updated.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; の境界が無効であり、更新する必要があることを &lt;code&gt;LayoutCache&lt;/code&gt; に指示します。</target>
        </trans-unit>
        <trans-unit id="392797192f7eed71da4320c3de7564aca13ded71" translate="yes" xml:space="preserve">
          <source>Instructs the layout manager to perform the layout for the specified container.</source>
          <target state="translated">指定されたコンテナのレイアウトを実行するようにレイアウトマネージャに指示します。</target>
        </trans-unit>
        <trans-unit id="f05f363353e33158013fc10345da8b9e9beb7bad" translate="yes" xml:space="preserve">
          <source>Instrument</source>
          <target state="translated">Instrument</target>
        </trans-unit>
        <trans-unit id="4ad7ebf43d9013ca5b4a6def2527aaf9ba3b6537" translate="yes" xml:space="preserve">
          <source>Instrument.getPatch()</source>
          <target state="translated">Instrument.getPatch()</target>
        </trans-unit>
        <trans-unit id="cb49b30bf89c4f1a8a29b63caa0a66ed1c9abce4" translate="yes" xml:space="preserve">
          <source>Instrumentation</source>
          <target state="translated">Instrumentation</target>
        </trans-unit>
        <trans-unit id="8d8cce26d14e203e1dc392f0d72a2ed826fbe0b6" translate="yes" xml:space="preserve">
          <source>Instrumentation.addTransformer()</source>
          <target state="translated">Instrumentation.addTransformer()</target>
        </trans-unit>
        <trans-unit id="ff997dad27bbe4860a474bd717daf791e0cf3eae" translate="yes" xml:space="preserve">
          <source>Instrumentation.appendToBootstrapClassLoaderSearch()</source>
          <target state="translated">Instrumentation.appendToBootstrapClassLoaderSearch()</target>
        </trans-unit>
        <trans-unit id="c60f0e477330966b6acf6ca57e11c8d5df013477" translate="yes" xml:space="preserve">
          <source>Instrumentation.appendToSystemClassLoaderSearch()</source>
          <target state="translated">Instrumentation.appendToSystemClassLoaderSearch()</target>
        </trans-unit>
        <trans-unit id="bfc2a33eca38df8cb4cddf9ae2f6e3598a69a134" translate="yes" xml:space="preserve">
          <source>Instrumentation.getAllLoadedClasses()</source>
          <target state="translated">Instrumentation.getAllLoadedClasses()</target>
        </trans-unit>
        <trans-unit id="d05dffbd83711d32c026b681882b693a6049d57f" translate="yes" xml:space="preserve">
          <source>Instrumentation.getInitiatedClasses()</source>
          <target state="translated">Instrumentation.getInitiatedClasses()</target>
        </trans-unit>
        <trans-unit id="9cb8076a267026779590bbe1c5b0bfb6206f9b13" translate="yes" xml:space="preserve">
          <source>Instrumentation.getObjectSize()</source>
          <target state="translated">Instrumentation.getObjectSize()</target>
        </trans-unit>
        <trans-unit id="8b1d021b5e7bdd1140ded61eacb61a3bc0636e2d" translate="yes" xml:space="preserve">
          <source>Instrumentation.isModifiableClass()</source>
          <target state="translated">Instrumentation.isModifiableClass()</target>
        </trans-unit>
        <trans-unit id="4894a3e859df3dd084886dda1c28fb0ffd84868b" translate="yes" xml:space="preserve">
          <source>Instrumentation.isNativeMethodPrefixSupported()</source>
          <target state="translated">Instrumentation.isNativeMethodPrefixSupported()</target>
        </trans-unit>
        <trans-unit id="8662ca364fbf8cd5c687170e68e65873df420788" translate="yes" xml:space="preserve">
          <source>Instrumentation.isRedefineClassesSupported()</source>
          <target state="translated">Instrumentation.isRedefineClassesSupported()</target>
        </trans-unit>
        <trans-unit id="ec07546dd6bfbd8464679ae5691a62be387e06f4" translate="yes" xml:space="preserve">
          <source>Instrumentation.isRetransformClassesSupported()</source>
          <target state="translated">Instrumentation.isRetransformClassesSupported()</target>
        </trans-unit>
        <trans-unit id="1d813396a0b496e7e9fa0cd375228af1c08b977b" translate="yes" xml:space="preserve">
          <source>Instrumentation.redefineClasses()</source>
          <target state="translated">Instrumentation.redefineClasses()</target>
        </trans-unit>
        <trans-unit id="3605a5c0741ae4bbcf959b3a2a2663d125f2a931" translate="yes" xml:space="preserve">
          <source>Instrumentation.removeTransformer()</source>
          <target state="translated">Instrumentation.removeTransformer()</target>
        </trans-unit>
        <trans-unit id="92343968332ca521d720ef5dc7b7fe874399e0b7" translate="yes" xml:space="preserve">
          <source>Instrumentation.retransformClasses()</source>
          <target state="translated">Instrumentation.retransformClasses()</target>
        </trans-unit>
        <trans-unit id="bb94601ea241753cc6bce17ac896c5e7a250e2c6" translate="yes" xml:space="preserve">
          <source>Instrumentation.setNativeMethodPrefix()</source>
          <target state="translated">Instrumentation.setNativeMethodPrefix()</target>
        </trans-unit>
        <trans-unit id="6cd3f3777918361133b6cdfae636b269cf39360c" translate="yes" xml:space="preserve">
          <source>Instrumenting code in modules</source>
          <target state="translated">モジュールのインストルメンテーションコード</target>
        </trans-unit>
        <trans-unit id="3667d94cb55ba1755752a69c59bfea0844b653ed" translate="yes" xml:space="preserve">
          <source>Instruments. An instrument may be specified in a variety of ways. However, all soundbanks have some mechanism for defining instruments. In doing so, they may reference other resources stored in the soundbank. Each instrument has a &lt;code&gt;Patch&lt;/code&gt; which specifies the MIDI program and bank by which it may be referenced in MIDI messages. Instrument information may be stored in &lt;a href=&quot;instrument&quot;&gt;&lt;code&gt;Instrument&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">楽器。計測器はさまざまな方法で指定できます。ただし、すべてのサウンドバンクには、楽器を定義するための何らかのメカニズムがあります。そうすることで、サウンドバンクに保存されている他のリソースを参照する場合があります。各インストゥルメントには、MIDIメッセージで参照できるMIDIプログラムとバンクを指定する &lt;code&gt;Patch&lt;/code&gt; あります。計測器情報は&lt;a href=&quot;instrument&quot;&gt; &lt;code&gt;Instrument&lt;/code&gt; &lt;/a&gt;オブジェクトに保存できます。</target>
        </trans-unit>
        <trans-unit id="5042cb95aefbe683c11f75fa8e4d9a94931e8aeb" translate="yes" xml:space="preserve">
          <source>Instruments. An instrument may be specified in a variety of ways. However, all soundbanks have some mechanism for defining instruments. In doing so, they may reference other resources stored in the soundbank. Each instrument has a &lt;code&gt;Patch&lt;/code&gt; which specifies the MIDI program and bank by which it may be referenced in MIDI messages. Instrument information may be stored in &lt;code&gt;&lt;a href=&quot;instrument&quot;&gt;&lt;code&gt;Instrument&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; objects.</source>
          <target state="translated">楽器。機器はさまざまな方法で指定できます。ただし、すべてのサウンドバンクには、楽器を定義するためのメカニズムがいくつかあります。その際、サウンドバンクに保存されている他のリソースを参照する場合があります。各インストゥルメントには、MIDIメッセージで参照されるMIDIプログラムとバンクを指定する &lt;code&gt;Patch&lt;/code&gt; あります。計測器情報は、 &lt;code&gt;&lt;a href=&quot;instrument&quot;&gt;&lt;code&gt;Instrument&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; オブジェクトに格納できます。</target>
        </trans-unit>
        <trans-unit id="ad4b9ee4aa984b7121a70119ec1a59b596040fdf" translate="yes" xml:space="preserve">
          <source>InsufficientResourcesException</source>
          <target state="translated">InsufficientResourcesException</target>
        </trans-unit>
        <trans-unit id="251ff53a49af6d13f9990d66a7dbb2454738187e" translate="yes" xml:space="preserve">
          <source>InsufficientResourcesException is different from LimitExceededException in that the latter is due to user/system specified limits. See LimitExceededException for details.</source>
          <target state="translated">InsufficientResourcesException は LimitExceededException とは異なり、後者はユーザやシステムが指定した制限に起因するものです。詳細は LimitExceededException を参照してください。</target>
        </trans-unit>
        <trans-unit id="62864143299a22cf427788cb95569bafbdff2b8c" translate="yes" xml:space="preserve">
          <source>Insures that any thread that is currently accessing the connection will either progress to completion or throw an &lt;code&gt;SQLException&lt;/code&gt;.</source>
          <target state="translated">現在接続にアクセスしているスレッドが完了するか、 &lt;code&gt;SQLException&lt;/code&gt; をスローすることを保証します。</target>
        </trans-unit>
        <trans-unit id="baff3ab1d42ab2289cc05fafefdf414b35354460" translate="yes" xml:space="preserve">
          <source>Int buffers can be created either by &lt;a href=&quot;#allocate(int)&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, by &lt;a href=&quot;#wrap(int%5B%5D)&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing int array into a buffer, or by creating a &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;view&lt;/i&gt;&lt;/a&gt; of an existing byte buffer.</source>
          <target state="translated">intバッファーは、バッファーの内容にスペースを割り当てる&lt;a href=&quot;#allocate(int)&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;によって、既存のint配列をバッファーに&lt;a href=&quot;#wrap(int%5B%5D)&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;することによって、または既存のバイトバッファーの&lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;ビュー&lt;/i&gt;&lt;/a&gt;を作成する&lt;i&gt;こと&lt;/i&gt;によって作成できます。</target>
        </trans-unit>
        <trans-unit id="f0f03472b5f9d80fa60f99afe602e7056ea95df4" translate="yes" xml:space="preserve">
          <source>Int buffers can be created either by &lt;a href=&quot;intbuffer#allocate-int-&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, by &lt;a href=&quot;intbuffer#wrap-int:A-&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing int array into a buffer, or by creating a &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;view&lt;/i&gt;&lt;/a&gt; of an existing byte buffer.</source>
          <target state="translated">Intバッファーは、バッファーのコンテンツにスペースを割り当てる&lt;a href=&quot;intbuffer#allocate-int-&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;、既存のint配列をバッファーに&lt;a href=&quot;intbuffer#wrap-int:A-&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;する、または既存のbyteバッファーの&lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;ビュー&lt;/i&gt;&lt;/a&gt;を作成する&lt;i&gt;こと&lt;/i&gt;によって作成できます。</target>
        </trans-unit>
        <trans-unit id="5a1384d2a3280b4950394e5e4bf5826fdcc9adc7" translate="yes" xml:space="preserve">
          <source>IntBinaryOperator</source>
          <target state="translated">IntBinaryOperator</target>
        </trans-unit>
        <trans-unit id="fde22f222516b06bc50aeca92f15a43f75aeef14" translate="yes" xml:space="preserve">
          <source>IntBinaryOperator.applyAsInt()</source>
          <target state="translated">IntBinaryOperator.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="03ca269cd4e1a4ff2c2c2b978b935ce9f23e45ad" translate="yes" xml:space="preserve">
          <source>IntBuffer</source>
          <target state="translated">IntBuffer</target>
        </trans-unit>
        <trans-unit id="186d1e7d99c33fd9708f497ac333c716ca8cc35e" translate="yes" xml:space="preserve">
          <source>IntBuffer.allocate()</source>
          <target state="translated">IntBuffer.allocate()</target>
        </trans-unit>
        <trans-unit id="902fa62c9d317c0f6dc0e323dd0c4d72640b12f1" translate="yes" xml:space="preserve">
          <source>IntBuffer.array()</source>
          <target state="translated">IntBuffer.array()</target>
        </trans-unit>
        <trans-unit id="2986aaeb0cb804685bb71862941292af8236b703" translate="yes" xml:space="preserve">
          <source>IntBuffer.arrayOffset()</source>
          <target state="translated">IntBuffer.arrayOffset()</target>
        </trans-unit>
        <trans-unit id="6b55af11ce0fbea1a2b66b5235806b9628c7b717" translate="yes" xml:space="preserve">
          <source>IntBuffer.asReadOnlyBuffer()</source>
          <target state="translated">IntBuffer.asReadOnlyBuffer()</target>
        </trans-unit>
        <trans-unit id="bf2dc95f30bcfb810cfff151852596e121ea8ec1" translate="yes" xml:space="preserve">
          <source>IntBuffer.compact()</source>
          <target state="translated">IntBuffer.compact()</target>
        </trans-unit>
        <trans-unit id="b2a6d79bb07fc91aefcd10072695f37e12c2a1de" translate="yes" xml:space="preserve">
          <source>IntBuffer.compareTo()</source>
          <target state="translated">IntBuffer.compareTo()</target>
        </trans-unit>
        <trans-unit id="8bc83999ab96deab0d9ae295e8508dd576d14dc5" translate="yes" xml:space="preserve">
          <source>IntBuffer.duplicate()</source>
          <target state="translated">IntBuffer.duplicate()</target>
        </trans-unit>
        <trans-unit id="d1e57e1909fb79f5dc1672d029939c2d4b54cb58" translate="yes" xml:space="preserve">
          <source>IntBuffer.equals()</source>
          <target state="translated">IntBuffer.equals()</target>
        </trans-unit>
        <trans-unit id="6e56b41f1d2d96aad4eee56ff94cd756f09ec943" translate="yes" xml:space="preserve">
          <source>IntBuffer.get()</source>
          <target state="translated">IntBuffer.get()</target>
        </trans-unit>
        <trans-unit id="1ae23a69d4d115e6150c9c569e82b78f07a738b3" translate="yes" xml:space="preserve">
          <source>IntBuffer.hasArray()</source>
          <target state="translated">IntBuffer.hasArray()</target>
        </trans-unit>
        <trans-unit id="fb5f259380f4162d09460e935038094a0e4d5a18" translate="yes" xml:space="preserve">
          <source>IntBuffer.hashCode()</source>
          <target state="translated">IntBuffer.hashCode()</target>
        </trans-unit>
        <trans-unit id="62dedf646535c44854f146febdcfecb169ffc0ae" translate="yes" xml:space="preserve">
          <source>IntBuffer.isDirect()</source>
          <target state="translated">IntBuffer.isDirect()</target>
        </trans-unit>
        <trans-unit id="475efd5a5d6ba1332cdb8a71a535e012e5f200a1" translate="yes" xml:space="preserve">
          <source>IntBuffer.order()</source>
          <target state="translated">IntBuffer.order()</target>
        </trans-unit>
        <trans-unit id="6b900fee9891be0241293871658c86086cd9af5b" translate="yes" xml:space="preserve">
          <source>IntBuffer.put()</source>
          <target state="translated">IntBuffer.put()</target>
        </trans-unit>
        <trans-unit id="66e83d0cd7bc8af7e14c662b839929fff43c966d" translate="yes" xml:space="preserve">
          <source>IntBuffer.slice()</source>
          <target state="translated">IntBuffer.slice()</target>
        </trans-unit>
        <trans-unit id="72a8c3bb56c42b5ab2542c35e1003e60c48e48d0" translate="yes" xml:space="preserve">
          <source>IntBuffer.toString()</source>
          <target state="translated">IntBuffer.toString()</target>
        </trans-unit>
        <trans-unit id="db021710a80d73394cef99cbf4d397fc72dc0aee" translate="yes" xml:space="preserve">
          <source>IntBuffer.wrap()</source>
          <target state="translated">IntBuffer.wrap()</target>
        </trans-unit>
        <trans-unit id="410594d98e56cff900cdf88d54dcc20a6430975e" translate="yes" xml:space="preserve">
          <source>IntConsumer</source>
          <target state="translated">IntConsumer</target>
        </trans-unit>
        <trans-unit id="aed24c977a296122fa5332c026526a7381a2f166" translate="yes" xml:space="preserve">
          <source>IntConsumer.accept()</source>
          <target state="translated">IntConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="c97c1604f4d72791ceef4b836264f6b35d8bff12" translate="yes" xml:space="preserve">
          <source>IntConsumer.andThen()</source>
          <target state="translated">IntConsumer.andThen()</target>
        </trans-unit>
        <trans-unit id="95d2a6438ae3c3686f5534529f2a7f9de3206c38" translate="yes" xml:space="preserve">
          <source>IntConv</source>
          <target state="translated">IntConv</target>
        </trans-unit>
        <trans-unit id="4cca0a177ff29205b978cf9228e0d15d79026af7" translate="yes" xml:space="preserve">
          <source>IntFunction</source>
          <target state="translated">IntFunction</target>
        </trans-unit>
        <trans-unit id="a285500764aa20c46cec6905fe56b1c6431dbb54" translate="yes" xml:space="preserve">
          <source>IntFunction.apply()</source>
          <target state="translated">IntFunction.apply()</target>
        </trans-unit>
        <trans-unit id="309fee8187082f78425e5e7c6a0b5c8fec85b726" translate="yes" xml:space="preserve">
          <source>IntPredicate</source>
          <target state="translated">IntPredicate</target>
        </trans-unit>
        <trans-unit id="7a2105d4fdacbe4eb56dbe2fd3f1dbc172b84765" translate="yes" xml:space="preserve">
          <source>IntPredicate.and()</source>
          <target state="translated">IntPredicate.and()</target>
        </trans-unit>
        <trans-unit id="3292dc870c003297f2031483c10032225a043985" translate="yes" xml:space="preserve">
          <source>IntPredicate.negate()</source>
          <target state="translated">IntPredicate.negate()</target>
        </trans-unit>
        <trans-unit id="905c0a49fd6cd8fff7b8bbdda7ef633f4976f7ed" translate="yes" xml:space="preserve">
          <source>IntPredicate.or()</source>
          <target state="translated">IntPredicate.or()</target>
        </trans-unit>
        <trans-unit id="4ec8c449678c89edd3a949970a1f307ae583d020" translate="yes" xml:space="preserve">
          <source>IntPredicate.test()</source>
          <target state="translated">IntPredicate.test()</target>
        </trans-unit>
        <trans-unit id="24f4131c6aad146e35a0a3271d5bc65ca57d0f16" translate="yes" xml:space="preserve">
          <source>IntStream</source>
          <target state="translated">IntStream</target>
        </trans-unit>
        <trans-unit id="717a1fd527f23fd2dc1b58ac5b274264462f7260" translate="yes" xml:space="preserve">
          <source>IntStream.Builder</source>
          <target state="translated">IntStream.Builder</target>
        </trans-unit>
        <trans-unit id="bddb0727f2996d4f417317a146e9349c0d8e1e17" translate="yes" xml:space="preserve">
          <source>IntStream.Builder.accept()</source>
          <target state="translated">IntStream.Builder.accept()</target>
        </trans-unit>
        <trans-unit id="2c41df874ce734ec46fd671c1116397d65b82741" translate="yes" xml:space="preserve">
          <source>IntStream.Builder.add()</source>
          <target state="translated">IntStream.Builder.add()</target>
        </trans-unit>
        <trans-unit id="35676556e0a79c24873f54927a7c38a60747705f" translate="yes" xml:space="preserve">
          <source>IntStream.Builder.build()</source>
          <target state="translated">IntStream.Builder.build()</target>
        </trans-unit>
        <trans-unit id="254837fe9690c918bf6cb3bd45f4bcbe3069584a" translate="yes" xml:space="preserve">
          <source>IntStream.allMatch()</source>
          <target state="translated">IntStream.allMatch()</target>
        </trans-unit>
        <trans-unit id="5038c39e236450db1519cce89f6b2889bbe4cd90" translate="yes" xml:space="preserve">
          <source>IntStream.anyMatch()</source>
          <target state="translated">IntStream.anyMatch()</target>
        </trans-unit>
        <trans-unit id="5b83460e4a4913a27d940476d02bf7194763bfb0" translate="yes" xml:space="preserve">
          <source>IntStream.asDoubleStream()</source>
          <target state="translated">IntStream.asDoubleStream()</target>
        </trans-unit>
        <trans-unit id="a45f59bf1a4176368ddc556f36f710aafbd70f5e" translate="yes" xml:space="preserve">
          <source>IntStream.asLongStream()</source>
          <target state="translated">IntStream.asLongStream()</target>
        </trans-unit>
        <trans-unit id="10d8b97ddcb810794ae07a12f6f34033e3dcceb1" translate="yes" xml:space="preserve">
          <source>IntStream.average()</source>
          <target state="translated">IntStream.average()</target>
        </trans-unit>
        <trans-unit id="2ad8ea52e4f809057815ad72ac662737e6c5ad0d" translate="yes" xml:space="preserve">
          <source>IntStream.boxed()</source>
          <target state="translated">IntStream.boxed()</target>
        </trans-unit>
        <trans-unit id="d3f049190f1c9ed488ef278584376252dbf75533" translate="yes" xml:space="preserve">
          <source>IntStream.builder()</source>
          <target state="translated">IntStream.builder()</target>
        </trans-unit>
        <trans-unit id="93b2705f4f1d038b76b8f9cee4308646607a2aa0" translate="yes" xml:space="preserve">
          <source>IntStream.collect()</source>
          <target state="translated">IntStream.collect()</target>
        </trans-unit>
        <trans-unit id="d50bfe2853afcd9c179ef5a75f9bcf6969bf7b4d" translate="yes" xml:space="preserve">
          <source>IntStream.concat()</source>
          <target state="translated">IntStream.concat()</target>
        </trans-unit>
        <trans-unit id="c56da6a5fb14b6b1ac0339983efe157d5a96584d" translate="yes" xml:space="preserve">
          <source>IntStream.count()</source>
          <target state="translated">IntStream.count()</target>
        </trans-unit>
        <trans-unit id="16755675d0ae84c603befc07b825ea5bddbb180b" translate="yes" xml:space="preserve">
          <source>IntStream.distinct()</source>
          <target state="translated">IntStream.distinct()</target>
        </trans-unit>
        <trans-unit id="35e45edc32c041e75c0339690a3c721637473acf" translate="yes" xml:space="preserve">
          <source>IntStream.empty()</source>
          <target state="translated">IntStream.empty()</target>
        </trans-unit>
        <trans-unit id="a8b489725b4a30e312bec6e97aef4ac34212eaa2" translate="yes" xml:space="preserve">
          <source>IntStream.filter()</source>
          <target state="translated">IntStream.filter()</target>
        </trans-unit>
        <trans-unit id="73130a1791ca2d45372f487091e1ea25e2d1871f" translate="yes" xml:space="preserve">
          <source>IntStream.findAny()</source>
          <target state="translated">IntStream.findAny()</target>
        </trans-unit>
        <trans-unit id="b071cbb130a449e70598d33646cb9ec94c06c597" translate="yes" xml:space="preserve">
          <source>IntStream.findFirst()</source>
          <target state="translated">IntStream.findFirst()</target>
        </trans-unit>
        <trans-unit id="3ec26637f0ab25e573b02189d7999c0787b22093" translate="yes" xml:space="preserve">
          <source>IntStream.flatMap()</source>
          <target state="translated">IntStream.flatMap()</target>
        </trans-unit>
        <trans-unit id="aa443c2dff770fe1e9f51eeb03b131c1328c6e77" translate="yes" xml:space="preserve">
          <source>IntStream.forEach()</source>
          <target state="translated">IntStream.forEach()</target>
        </trans-unit>
        <trans-unit id="a38c9ea26b289d6c679dc0e2d22def0c4d26f94c" translate="yes" xml:space="preserve">
          <source>IntStream.forEachOrdered()</source>
          <target state="translated">IntStream.forEachOrdered()</target>
        </trans-unit>
        <trans-unit id="7fc5773a5b63983004622bb826b5fb54c7daa928" translate="yes" xml:space="preserve">
          <source>IntStream.generate()</source>
          <target state="translated">IntStream.generate()</target>
        </trans-unit>
        <trans-unit id="71d1542ba16ae1684e51fd8bbfb8ce1c8ce06d2b" translate="yes" xml:space="preserve">
          <source>IntStream.iterate()</source>
          <target state="translated">IntStream.iterate()</target>
        </trans-unit>
        <trans-unit id="798571bd9ea9017833e09feeca28af219d6a8af1" translate="yes" xml:space="preserve">
          <source>IntStream.iterator()</source>
          <target state="translated">IntStream.iterator()</target>
        </trans-unit>
        <trans-unit id="8acf94236ba55930d30313140b80d8ebfdf47a80" translate="yes" xml:space="preserve">
          <source>IntStream.limit()</source>
          <target state="translated">IntStream.limit()</target>
        </trans-unit>
        <trans-unit id="f65d7f5d0e804ab240b9f83f686238ef81623b41" translate="yes" xml:space="preserve">
          <source>IntStream.map()</source>
          <target state="translated">IntStream.map()</target>
        </trans-unit>
        <trans-unit id="d693dc63a63783af79c2baffe6ef4c9630980967" translate="yes" xml:space="preserve">
          <source>IntStream.mapToDouble()</source>
          <target state="translated">IntStream.mapToDouble()</target>
        </trans-unit>
        <trans-unit id="ed533b9e18d5c77230fc1df655eb53baaf4bab4f" translate="yes" xml:space="preserve">
          <source>IntStream.mapToLong()</source>
          <target state="translated">IntStream.mapToLong()</target>
        </trans-unit>
        <trans-unit id="4e06f116dfa00306f16ebb0635dae3411b6cd639" translate="yes" xml:space="preserve">
          <source>IntStream.mapToObj()</source>
          <target state="translated">IntStream.mapToObj()</target>
        </trans-unit>
        <trans-unit id="f931b53ba73f5beeb7d10f8746c3249882bf72ff" translate="yes" xml:space="preserve">
          <source>IntStream.max()</source>
          <target state="translated">IntStream.max()</target>
        </trans-unit>
        <trans-unit id="09199cf1b554a761834a965525371e2ef101e28e" translate="yes" xml:space="preserve">
          <source>IntStream.min()</source>
          <target state="translated">IntStream.min()</target>
        </trans-unit>
        <trans-unit id="4b4363d337fa377b6c85bcc69bb7a23bf60ae12a" translate="yes" xml:space="preserve">
          <source>IntStream.noneMatch()</source>
          <target state="translated">IntStream.noneMatch()</target>
        </trans-unit>
        <trans-unit id="a40b8b5e7434f7412eff97247a5cdd6e5a78c17e" translate="yes" xml:space="preserve">
          <source>IntStream.of()</source>
          <target state="translated">IntStream.of()</target>
        </trans-unit>
        <trans-unit id="3bec22857ef09851be0de60f97a841dddbe7b23c" translate="yes" xml:space="preserve">
          <source>IntStream.parallel()</source>
          <target state="translated">IntStream.parallel()</target>
        </trans-unit>
        <trans-unit id="8b93861d3a11965585b608e5ab242a06acf3cd7b" translate="yes" xml:space="preserve">
          <source>IntStream.peek()</source>
          <target state="translated">IntStream.peek()</target>
        </trans-unit>
        <trans-unit id="d305f951e9910b98cf83bfc3c001738925fc0a2a" translate="yes" xml:space="preserve">
          <source>IntStream.range()</source>
          <target state="translated">IntStream.range()</target>
        </trans-unit>
        <trans-unit id="f50290dccb5b0d9451495e9132e33dfa78792eb1" translate="yes" xml:space="preserve">
          <source>IntStream.rangeClosed()</source>
          <target state="translated">IntStream.rangeClosed()</target>
        </trans-unit>
        <trans-unit id="721308255b7d888cdd7c2d520aa0fd86a44f4998" translate="yes" xml:space="preserve">
          <source>IntStream.reduce()</source>
          <target state="translated">IntStream.reduce()</target>
        </trans-unit>
        <trans-unit id="5f50b33f03b6b5e25ef5e029ee9684dd860d82a2" translate="yes" xml:space="preserve">
          <source>IntStream.sequential()</source>
          <target state="translated">IntStream.sequential()</target>
        </trans-unit>
        <trans-unit id="53e374a54f576c7e4d74d45dd8e2e9f1253ef8ed" translate="yes" xml:space="preserve">
          <source>IntStream.skip()</source>
          <target state="translated">IntStream.skip()</target>
        </trans-unit>
        <trans-unit id="70f8d9692b8458ab92e3796c7d99b2045c7cd681" translate="yes" xml:space="preserve">
          <source>IntStream.sorted()</source>
          <target state="translated">IntStream.sorted()</target>
        </trans-unit>
        <trans-unit id="678ff3a0a00a48db8f60763d0bb1895e7b9303db" translate="yes" xml:space="preserve">
          <source>IntStream.spliterator()</source>
          <target state="translated">IntStream.spliterator()</target>
        </trans-unit>
        <trans-unit id="38ce1258d56c54b8baf7b8e9c54f16a1a9a1beee" translate="yes" xml:space="preserve">
          <source>IntStream.sum()</source>
          <target state="translated">IntStream.sum()</target>
        </trans-unit>
        <trans-unit id="a775e89ef290f0cf9408a3e39ccde94c62462770" translate="yes" xml:space="preserve">
          <source>IntStream.summaryStatistics()</source>
          <target state="translated">IntStream.summaryStatistics()</target>
        </trans-unit>
        <trans-unit id="b8e865fdfde35b50618154fcc0eb6f2f946bd1b8" translate="yes" xml:space="preserve">
          <source>IntStream.toArray()</source>
          <target state="translated">IntStream.toArray()</target>
        </trans-unit>
        <trans-unit id="74688424dc954dd8fecb62d517759d196f3a892c" translate="yes" xml:space="preserve">
          <source>IntSummaryStatistics</source>
          <target state="translated">IntSummaryStatistics</target>
        </trans-unit>
        <trans-unit id="c32f68cb778d62799e8fc8430f4a55c9cbf10af0" translate="yes" xml:space="preserve">
          <source>IntSummaryStatistics.accept()</source>
          <target state="translated">IntSummaryStatistics.accept()</target>
        </trans-unit>
        <trans-unit id="39f9f710ea971c258fad6d553ce49f27f7c022fa" translate="yes" xml:space="preserve">
          <source>IntSummaryStatistics.combine()</source>
          <target state="translated">IntSummaryStatistics.combine()</target>
        </trans-unit>
        <trans-unit id="2bfffb68e95ddf65364f7836d3e84712e317f244" translate="yes" xml:space="preserve">
          <source>IntSummaryStatistics.getAverage()</source>
          <target state="translated">IntSummaryStatistics.getAverage()</target>
        </trans-unit>
        <trans-unit id="3afca4adffe323b6fedd1282a7f354a952feffcd" translate="yes" xml:space="preserve">
          <source>IntSummaryStatistics.getCount()</source>
          <target state="translated">IntSummaryStatistics.getCount()</target>
        </trans-unit>
        <trans-unit id="51c3bed6a825d336cf6e02261a7a94dcedb829cc" translate="yes" xml:space="preserve">
          <source>IntSummaryStatistics.getMax()</source>
          <target state="translated">IntSummaryStatistics.getMax()</target>
        </trans-unit>
        <trans-unit id="f26c2835ba96f95fc461851f6cfb91a4c50080a1" translate="yes" xml:space="preserve">
          <source>IntSummaryStatistics.getMin()</source>
          <target state="translated">IntSummaryStatistics.getMin()</target>
        </trans-unit>
        <trans-unit id="f3e19c2f3dd62c8ae7754bdb5c8d3b815a3b7d46" translate="yes" xml:space="preserve">
          <source>IntSummaryStatistics.getSum()</source>
          <target state="translated">IntSummaryStatistics.getSum()</target>
        </trans-unit>
        <trans-unit id="0b71813cf75fdd1caf90fc4626e01c87cd2834ec" translate="yes" xml:space="preserve">
          <source>IntSummaryStatistics.toString()</source>
          <target state="translated">IntSummaryStatistics.toString()</target>
        </trans-unit>
        <trans-unit id="2e03560e20fb45d29dc64315eec699994f40a354" translate="yes" xml:space="preserve">
          <source>IntSupplier</source>
          <target state="translated">IntSupplier</target>
        </trans-unit>
        <trans-unit id="528ea0ff79240c0134696077f919aaa92538fbea" translate="yes" xml:space="preserve">
          <source>IntSupplier.getAsInt()</source>
          <target state="translated">IntSupplier.getAsInt()</target>
        </trans-unit>
        <trans-unit id="ae8390832e8463b803209333e1fd77bd09f60b71" translate="yes" xml:space="preserve">
          <source>IntToDoubleFunction</source>
          <target state="translated">IntToDoubleFunction</target>
        </trans-unit>
        <trans-unit id="0901a3fd52dbfb7e0f5beb756cdde51513251c31" translate="yes" xml:space="preserve">
          <source>IntToDoubleFunction.applyAsDouble()</source>
          <target state="translated">IntToDoubleFunction.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="feb7592bc3eebd7ea4df6ea86d36936314022041" translate="yes" xml:space="preserve">
          <source>IntToLongFunction</source>
          <target state="translated">IntToLongFunction</target>
        </trans-unit>
        <trans-unit id="325208243a7bd98c3e1207e089d5db5aac26a185" translate="yes" xml:space="preserve">
          <source>IntToLongFunction.applyAsLong()</source>
          <target state="translated">IntToLongFunction.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="990d3e33b1ecfefb7b2e3ff3581805bbe80cce25" translate="yes" xml:space="preserve">
          <source>IntUnaryOperator</source>
          <target state="translated">IntUnaryOperator</target>
        </trans-unit>
        <trans-unit id="f2fc91a70eb0d6168fcef3ec4cf364fdf3c920d0" translate="yes" xml:space="preserve">
          <source>IntUnaryOperator.andThen()</source>
          <target state="translated">IntUnaryOperator.andThen()</target>
        </trans-unit>
        <trans-unit id="23ac2102e09217af70edc109e60a0b67cb672d8d" translate="yes" xml:space="preserve">
          <source>IntUnaryOperator.applyAsInt()</source>
          <target state="translated">IntUnaryOperator.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="21139a5cb3464d4de88865086dd8f6989c4977ee" translate="yes" xml:space="preserve">
          <source>IntUnaryOperator.compose()</source>
          <target state="translated">IntUnaryOperator.compose()</target>
        </trans-unit>
        <trans-unit id="5895fb7d44ebb967d1d7423b762c19c233672f49" translate="yes" xml:space="preserve">
          <source>IntUnaryOperator.identity()</source>
          <target state="translated">IntUnaryOperator.identity()</target>
        </trans-unit>
        <trans-unit id="6a3436ac8dfee31e9bb6d98523daf8eb5718c1ab" translate="yes" xml:space="preserve">
          <source>Intalls the subcomponents of the tree, which is the renderer pane.</source>
          <target state="translated">ツリーのサブコンポーネント(レンダラー ペイン)をインストールします。</target>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="601e05ec0c54e5fc52f847b7bbc14e0ebf176b36" translate="yes" xml:space="preserve">
          <source>Integer.bitCount()</source>
          <target state="translated">Integer.bitCount()</target>
        </trans-unit>
        <trans-unit id="0eb8bf387f3db361353c4452637259a07d55bfc3" translate="yes" xml:space="preserve">
          <source>Integer.byteValue()</source>
          <target state="translated">Integer.byteValue()</target>
        </trans-unit>
        <trans-unit id="bf8e271b44517f80c82ec68b43e391cab40f2355" translate="yes" xml:space="preserve">
          <source>Integer.compare()</source>
          <target state="translated">Integer.compare()</target>
        </trans-unit>
        <trans-unit id="68e12022e6d91e9a21ba2000c72c8172f19130a9" translate="yes" xml:space="preserve">
          <source>Integer.compareTo()</source>
          <target state="translated">Integer.compareTo()</target>
        </trans-unit>
        <trans-unit id="65e6e8312c5084a7bca529754e16649167ad357c" translate="yes" xml:space="preserve">
          <source>Integer.compareUnsigned()</source>
          <target state="translated">Integer.compareUnsigned()</target>
        </trans-unit>
        <trans-unit id="394d1d53a6ecccd29e658c6e338289e7ab9f9c52" translate="yes" xml:space="preserve">
          <source>Integer.decode()</source>
          <target state="translated">Integer.decode()</target>
        </trans-unit>
        <trans-unit id="368615413e3f5c4bec77a3e5239de753b277a0af" translate="yes" xml:space="preserve">
          <source>Integer.divideUnsigned()</source>
          <target state="translated">Integer.divideUnsigned()</target>
        </trans-unit>
        <trans-unit id="9e18bedab27b8be044127298b76446c8b9b73f65" translate="yes" xml:space="preserve">
          <source>Integer.doubleValue()</source>
          <target state="translated">Integer.doubleValue()</target>
        </trans-unit>
        <trans-unit id="6e29813efa93f4d5eafe447fce4f9f4c765eb479" translate="yes" xml:space="preserve">
          <source>Integer.equals()</source>
          <target state="translated">Integer.equals()</target>
        </trans-unit>
        <trans-unit id="0cd39f287979efa6dd9ec5a63d3a6d4837aae6aa" translate="yes" xml:space="preserve">
          <source>Integer.floatValue()</source>
          <target state="translated">Integer.floatValue()</target>
        </trans-unit>
        <trans-unit id="37791ea9c7107902e3ee83aaf3ff47bcb98ccf44" translate="yes" xml:space="preserve">
          <source>Integer.getInteger()</source>
          <target state="translated">Integer.getInteger()</target>
        </trans-unit>
        <trans-unit id="3aae5845e6b6a8465c1380a9eafb0cf557be3bbc" translate="yes" xml:space="preserve">
          <source>Integer.hashCode()</source>
          <target state="translated">Integer.hashCode()</target>
        </trans-unit>
        <trans-unit id="b73f84cd1f55cef122740a706cb39c2158b98211" translate="yes" xml:space="preserve">
          <source>Integer.highestOneBit()</source>
          <target state="translated">Integer.highestOneBit()</target>
        </trans-unit>
        <trans-unit id="e48b1cb53b5c28b94487afc67ecddb6cc78a2c6e" translate="yes" xml:space="preserve">
          <source>Integer.intValue()</source>
          <target state="translated">Integer.intValue()</target>
        </trans-unit>
        <trans-unit id="af20f28ceec9c5f3a000c031f61b2ad63133d453" translate="yes" xml:space="preserve">
          <source>Integer.longValue()</source>
          <target state="translated">Integer.longValue()</target>
        </trans-unit>
        <trans-unit id="f508e2f60740a675fbdd6393ca41a251594c932e" translate="yes" xml:space="preserve">
          <source>Integer.lowestOneBit()</source>
          <target state="translated">Integer.lowestOneBit()</target>
        </trans-unit>
        <trans-unit id="6f12a706ad025aad347dd5f15d59a22d5513f6ab" translate="yes" xml:space="preserve">
          <source>Integer.max()</source>
          <target state="translated">Integer.max()</target>
        </trans-unit>
        <trans-unit id="20ccabafd43a47920ac0d6f8c9740aa9807e59b8" translate="yes" xml:space="preserve">
          <source>Integer.min()</source>
          <target state="translated">Integer.min()</target>
        </trans-unit>
        <trans-unit id="1ead4bddac561b7bfe56159257db9dedfea6ac69" translate="yes" xml:space="preserve">
          <source>Integer.numberOfLeadingZeros()</source>
          <target state="translated">Integer.numberOfLeadingZeros()</target>
        </trans-unit>
        <trans-unit id="c8fe2b7db840270eeb98c8014f22e93d0c3ce562" translate="yes" xml:space="preserve">
          <source>Integer.numberOfTrailingZeros()</source>
          <target state="translated">Integer.numberOfTrailingZeros()</target>
        </trans-unit>
        <trans-unit id="119ae7ed1605a78418b5274297e3fb1710c5d11e" translate="yes" xml:space="preserve">
          <source>Integer.parseInt()</source>
          <target state="translated">Integer.parseInt()</target>
        </trans-unit>
        <trans-unit id="f98c06a48e9be120d9d0e890e22b3f92d4cb759f" translate="yes" xml:space="preserve">
          <source>Integer.parseUnsignedInt()</source>
          <target state="translated">Integer.parseUnsignedInt()</target>
        </trans-unit>
        <trans-unit id="2757d68a16f69b9bdeb122ab599161f76ab2f00a" translate="yes" xml:space="preserve">
          <source>Integer.remainderUnsigned()</source>
          <target state="translated">Integer.remainderUnsigned()</target>
        </trans-unit>
        <trans-unit id="fb198a6f3f42c6c54b516bbf7dee2c6b7acf251f" translate="yes" xml:space="preserve">
          <source>Integer.reverse()</source>
          <target state="translated">Integer.reverse()</target>
        </trans-unit>
        <trans-unit id="dd0210acecff2f7cfaac6bd2ff345429a7214309" translate="yes" xml:space="preserve">
          <source>Integer.reverseBytes()</source>
          <target state="translated">Integer.reverseBytes()</target>
        </trans-unit>
        <trans-unit id="21db5867e4f653288538e458b5e5465df3fde364" translate="yes" xml:space="preserve">
          <source>Integer.rotateLeft()</source>
          <target state="translated">Integer.rotateLeft()</target>
        </trans-unit>
        <trans-unit id="69e2ba7483d68e86a237bc123782c6f04f72600b" translate="yes" xml:space="preserve">
          <source>Integer.rotateRight()</source>
          <target state="translated">Integer.rotateRight()</target>
        </trans-unit>
        <trans-unit id="5bc85dc11f8ced631e2cb9656c96a03073dbdb6c" translate="yes" xml:space="preserve">
          <source>Integer.shortValue()</source>
          <target state="translated">Integer.shortValue()</target>
        </trans-unit>
        <trans-unit id="fa645acf6b90b3458cd1a97ac5d5e03e87e94341" translate="yes" xml:space="preserve">
          <source>Integer.signum()</source>
          <target state="translated">Integer.signum()</target>
        </trans-unit>
        <trans-unit id="d42198af906fedbb81c9e843e204af72ed796e3e" translate="yes" xml:space="preserve">
          <source>Integer.sum()</source>
          <target state="translated">Integer.sum()</target>
        </trans-unit>
        <trans-unit id="48084f16e54bbbb148bffbad382b8c7a126bcd32" translate="yes" xml:space="preserve">
          <source>Integer.toBinaryString()</source>
          <target state="translated">Integer.toBinaryString()</target>
        </trans-unit>
        <trans-unit id="9ecc1f7f82859430ffc18a594dd581a5a7be5dfc" translate="yes" xml:space="preserve">
          <source>Integer.toHexString()</source>
          <target state="translated">Integer.toHexString()</target>
        </trans-unit>
        <trans-unit id="a53572960c3c1484a1874db9d0bc594803e0e1b0" translate="yes" xml:space="preserve">
          <source>Integer.toOctalString()</source>
          <target state="translated">Integer.toOctalString()</target>
        </trans-unit>
        <trans-unit id="3dd6ec7c5e4387958ca256477ae482195e66ca40" translate="yes" xml:space="preserve">
          <source>Integer.toString()</source>
          <target state="translated">Integer.toString()</target>
        </trans-unit>
        <trans-unit id="f2e74b20be2b8c7061896b6852d48d97092db3aa" translate="yes" xml:space="preserve">
          <source>Integer.toUnsignedLong()</source>
          <target state="translated">Integer.toUnsignedLong()</target>
        </trans-unit>
        <trans-unit id="b2452b5b42a2a88063e1fbb632542f2132845654" translate="yes" xml:space="preserve">
          <source>Integer.toUnsignedString()</source>
          <target state="translated">Integer.toUnsignedString()</target>
        </trans-unit>
        <trans-unit id="4610a3799be39d8f932b9aaed08bac39881e4921" translate="yes" xml:space="preserve">
          <source>Integer.valueOf()</source>
          <target state="translated">Integer.valueOf()</target>
        </trans-unit>
        <trans-unit id="3fe2274ded9d26a200d436b02f8543bbbbceb191" translate="yes" xml:space="preserve">
          <source>IntegerPart</source>
          <target state="translated">IntegerPart</target>
        </trans-unit>
        <trans-unit id="72a01dd038f5a5020b5c6349c456350591877d41" translate="yes" xml:space="preserve">
          <source>IntegerPart:</source>
          <target state="translated">IntegerPart:</target>
        </trans-unit>
        <trans-unit id="4fae6c57d19a11865ca3ed531459929ba8433bd4" translate="yes" xml:space="preserve">
          <source>IntegerSyntax</source>
          <target state="translated">IntegerSyntax</target>
        </trans-unit>
        <trans-unit id="1edaa3bdef5e30f65bfe58173c3db75d67c56308" translate="yes" xml:space="preserve">
          <source>IntegerSyntax.equals()</source>
          <target state="translated">IntegerSyntax.equals()</target>
        </trans-unit>
        <trans-unit id="90b4af7c4e6d3abb18ad38aebd3954ffd6ebf6e2" translate="yes" xml:space="preserve">
          <source>IntegerSyntax.getValue()</source>
          <target state="translated">IntegerSyntax.getValue()</target>
        </trans-unit>
        <trans-unit id="7fd302d8b76b8f8ac18aeee50421d7821ef4de38" translate="yes" xml:space="preserve">
          <source>IntegerSyntax.hashCode()</source>
          <target state="translated">IntegerSyntax.hashCode()</target>
        </trans-unit>
        <trans-unit id="88adf980c04c5226059020c1786af3bc9097b3fe" translate="yes" xml:space="preserve">
          <source>IntegerSyntax.toString()</source>
          <target state="translated">IntegerSyntax.toString()</target>
        </trans-unit>
        <trans-unit id="1c3e335bf751506bceedcb32c9cd8fe826512024" translate="yes" xml:space="preserve">
          <source>IntegerType</source>
          <target state="translated">IntegerType</target>
        </trans-unit>
        <trans-unit id="ef1b82e2cb454c110b3c226b47ca6928536effaa" translate="yes" xml:space="preserve">
          <source>IntegerValue</source>
          <target state="translated">IntegerValue</target>
        </trans-unit>
        <trans-unit id="e3b59c9f1c26e320e172cac39695e68589e740a0" translate="yes" xml:space="preserve">
          <source>Integral</source>
          <target state="translated">Integral</target>
        </trans-unit>
        <trans-unit id="d022c23692ffa8b98d04c6b30bdd9751ff07e848" translate="yes" xml:space="preserve">
          <source>Interact with the resource; query header fields and contents.</source>
          <target state="translated">リソースを操作して、ヘッダフィールドやコンテンツを照会します。</target>
        </trans-unit>
        <trans-unit id="86dac7c95de7da0f5a609368b582e91f930de30f" translate="yes" xml:space="preserve">
          <source>Interactions with older options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80a722f7162533938258bbf49c90d5507d343dc" translate="yes" xml:space="preserve">
          <source>Interesting issues which are not always obvious when using the &lt;code&gt;Area&lt;/code&gt; include:</source>
          <target state="translated">&lt;code&gt;Area&lt;/code&gt; を使用するときに必ずしも明白ではない興味深い問題は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7b4db7ef1fa23cfb5e115a2a2c89d46a6a2ebc4a" translate="yes" xml:space="preserve">
          <source>Interface</source>
          <target state="translated">Interface</target>
        </trans-unit>
        <trans-unit id="52977174c49443331bd65e009cd131cdf8eb5e0d" translate="yes" xml:space="preserve">
          <source>Interface &lt;a href=&quot;accessibletext&quot;&gt;AccessibleText&lt;/a&gt; is the contract for making rich, editable text Accessible. Not all text displayed on the screen is rich and editable (e.g. text contained in buttons, labels, menus, etc., which users aren't expected to manipulate). However, objects containing editable text must implement interface AccessibleText if they are to interoperate with assistive technologies.</source>
          <target state="translated">インターフェイス&lt;a href=&quot;accessibletext&quot;&gt;AccessibleText&lt;/a&gt;は、リッチで編集可能なテキストをアクセシブルにするためのコントラクトです。画面に表示されるすべてのテキストがリッチで編集可能であるとは限りません（たとえば、ボタン、ラベル、メニューなどに含まれるテキストで、ユーザーが操作することは想定されていません）。ただし、編集可能なテキストを含むオブジェクトは、支援技術と相互運用する場合、インターフェイスAccessibleTextを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="551819e25d4aa6ce09d16ef63abd83d72db0770a" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;Accessible&lt;/code&gt; is the main interface for the accessibility package.</source>
          <target state="translated">インタフェース &lt;code&gt;Accessible&lt;/code&gt; 、アクセシビリティ機能パッケージのメインインタフェースです。</target>
        </trans-unit>
        <trans-unit id="ae42fe989264025266b83641cc2886646419c064" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;Accessible&lt;/code&gt; is the main interface for the accessibility package. All components that support the accessibility package must implement this interface. It contains a single method, &lt;a href=&quot;#getAccessibleContext()&quot;&gt;&lt;code&gt;getAccessibleContext()&lt;/code&gt;&lt;/a&gt;, which returns an instance of the class &lt;a href=&quot;accessiblecontext&quot;&gt;&lt;code&gt;AccessibleContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">インタフェース &lt;code&gt;Accessible&lt;/code&gt; 、アクセシビリティ機能パッケージのメインインタフェースです。アクセシビリティパッケージをサポートするすべてのコンポーネントは、このインターフェイスを実装する必要があります。これは、単一の方法、含ま&lt;a href=&quot;#getAccessibleContext()&quot;&gt; &lt;code&gt;getAccessibleContext()&lt;/code&gt; &lt;/a&gt;クラスのインスタンスを返し、&lt;a href=&quot;accessiblecontext&quot;&gt; &lt;code&gt;AccessibleContext&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="783a63a13dab192f335e2020f2e1f7de30d36afd" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;Attribute&lt;/code&gt; is the base interface implemented by any and every printing attribute class to indicate that the class represents a printing attribute.</source>
          <target state="translated">インターフェイス &lt;code&gt;Attribute&lt;/code&gt; は、クラスが印刷属性を表すことを示すために、すべての印刷属性クラスによって実装される基本インターフェイスです。</target>
        </trans-unit>
        <trans-unit id="b370b353b57230b2f44593716bd031d023b2cdfc" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;Attribute&lt;/code&gt; is the base interface implemented by any and every printing attribute class to indicate that the class represents a printing attribute. All printing attributes are serializable.</source>
          <target state="translated">インターフェイス &lt;code&gt;Attribute&lt;/code&gt; は、クラスが印刷属性を表すことを示すために、すべての印刷属性クラスによって実装される基本インターフェイスです。すべての印刷属性はシリアル化可能です。</target>
        </trans-unit>
        <trans-unit id="d04ee8b444533e529a12234d64bad24848bce9d5" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;AttributeException&lt;/code&gt; is a mixin interface which a subclass of &lt;a href=&quot;printexception&quot;&gt;&lt;code&gt;PrintException&lt;/code&gt;&lt;/a&gt; can implement to report an error condition involving one or more printing attributes that a particular Print Service instance does not support.</source>
          <target state="translated">Interface &lt;code&gt;AttributeException&lt;/code&gt; は、&lt;a href=&quot;printexception&quot;&gt; &lt;code&gt;PrintException&lt;/code&gt; の&lt;/a&gt;サブクラスが実装できるミックスインインターフェイスであり、特定のPrintServiceインスタンスがサポートしていない1つ以上の印刷属性に関連するエラー状態を報告します。</target>
        </trans-unit>
        <trans-unit id="365a05a9305cb0c4460878de2b338dd83e889ee0" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;AttributeException&lt;/code&gt; is a mixin interface which a subclass of &lt;a href=&quot;printexception&quot;&gt;&lt;code&gt;PrintException&lt;/code&gt;&lt;/a&gt; can implement to report an error condition involving one or more printing attributes that a particular Print Service instance does not support. Either the attribute is not supported at all, or the attribute is supported but the particular specified value is not supported. The Print Service API does not define any print exception classes that implement interface &lt;code&gt;AttributeException&lt;/code&gt;, that being left to the Print Service implementor's discretion.</source>
          <target state="translated">Interface &lt;code&gt;AttributeException&lt;/code&gt; は、&lt;a href=&quot;printexception&quot;&gt; &lt;code&gt;PrintException&lt;/code&gt; の&lt;/a&gt;サブクラスが実装できるミックスインインターフェイスであり、特定のPrintServiceインスタンスがサポートしていない1つ以上の印刷属性に関連するエラー状態を報告します。属性がまったくサポートされていないか、属性はサポートされているが特定の指定された値がサポートされていないかのいずれかです。Print Service APIは、インターフェイス &lt;code&gt;AttributeException&lt;/code&gt; を実装する印刷例外クラスを定義しません。これは、PrintService実装者の裁量に任されています。</target>
        </trans-unit>
        <trans-unit id="900bdc1b963396b06b8c13d8b8e8e15220a46fc4" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;AttributeSet&lt;/code&gt; specifies the interface for a set of printing attributes.</source>
          <target state="translated">Interface &lt;code&gt;AttributeSet&lt;/code&gt; は、一連の印刷属性のインターフェイスを指定します。</target>
        </trans-unit>
        <trans-unit id="2d41c2cbb04b381ab18603cd7b83e48957fd76d6" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;AttributeSet&lt;/code&gt; specifies the interface for a set of printing attributes. A printing attribute is an object whose class implements interface &lt;a href=&quot;attribute&quot;&gt;&lt;code&gt;Attribute&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Interface &lt;code&gt;AttributeSet&lt;/code&gt; は、一連の印刷属性のインターフェイスを指定します。印刷属性は、クラスがインターフェイス&lt;a href=&quot;attribute&quot;&gt; &lt;code&gt;Attribute&lt;/code&gt; を&lt;/a&gt;実装するオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="a2391660840264a86550bf8763c56dd85f2194b0" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;Doc&lt;/code&gt; affords considerable implementation flexibility. The print data might already be in existence when the doc object is constructed. In this case the objects returned by the doc's methods can be supplied to the doc's constructor, be stored in the doc ahead of time, and simply be returned when called for. Alternatively, the print data might not exist yet when the doc object is constructed. In this case the doc object might provide a &quot;lazy&quot; implementation that generates the print data representation object (and/or the print data) only when the Print Job calls for it (when the Print Job calls the &lt;a href=&quot;#getPrintData()&quot;&gt;&lt;code&gt;getPrintData()&lt;/code&gt;&lt;/a&gt; method).</source>
          <target state="translated">Interface &lt;code&gt;Doc&lt;/code&gt; は、実装にかなりの柔軟性をもたらします。docオブジェクトが作成されるときに、印刷データがすでに存在している可能性があります。この場合、docのメソッドによって返されるオブジェクトは、docのコンストラクターに提供され、事前にdocに格納され、必要に応じて返されるだけです。または、docオブジェクトの作成時に、印刷データがまだ存在していない可能性があります。この場合、docオブジェクトは、印刷ジョブがそれを要求したとき（印刷ジョブが&lt;a href=&quot;#getPrintData()&quot;&gt; &lt;code&gt;getPrintData()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出したとき）にのみ、印刷データ表現オブジェクト（および/または印刷データ）を生成する「遅延」実装を提供する場合があります。</target>
        </trans-unit>
        <trans-unit id="8f8f0c2ae596d5d9b7343b47607e9df19b879d84" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;Doc&lt;/code&gt; specifies the interface for an object that supplies one piece of print data for a Print Job.</source>
          <target state="translated">Interface &lt;code&gt;Doc&lt;/code&gt; は、印刷ジョブに1つの印刷データを提供するオブジェクトのインターフェイスを指定します。</target>
        </trans-unit>
        <trans-unit id="59e7f7d6132e3bd620788196697ccfe42157288a" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;Doc&lt;/code&gt; specifies the interface for an object that supplies one piece of print data for a Print Job. &quot;Doc&quot; is a short, easy-to-pronounce term that means &quot;a piece of print data.&quot; The client passes to the Print Job an object that implements interface &lt;code&gt;Doc&lt;/code&gt;, and the Print Job calls methods on that object to obtain the print data. The &lt;code&gt;Doc&lt;/code&gt; interface lets a Print Job:</source>
          <target state="translated">Interface &lt;code&gt;Doc&lt;/code&gt; は、印刷ジョブに1つの印刷データを提供するオブジェクトのインターフェイスを指定します。「Doc」は、「印刷データの一部」を意味する、短くて発音しやすい用語です。クライアントは、インターフェイス &lt;code&gt;Doc&lt;/code&gt; を実装するオブジェクトを印刷ジョブに渡し、印刷ジョブはそのオブジェクトのメソッドを呼び出して印刷データを取得します。 &lt;code&gt;Doc&lt;/code&gt; インタフェースは、印刷ジョブをすることができます：</target>
        </trans-unit>
        <trans-unit id="6f5c24c1a74530600c80f075b1cf0abab9119b17" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;DocAttribute&lt;/code&gt; is a tagging interface which a printing attribute class implements to indicate the attribute denotes a setting for a doc.</source>
          <target state="translated">インターフェイス &lt;code&gt;DocAttribute&lt;/code&gt; は、属性がドキュメントの設定を示すことを示すために印刷属性クラスが実装するタグ付けインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="d339a7646cee72190e888444af539327c0887a62" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;DocAttribute&lt;/code&gt; is a tagging interface which a printing attribute class implements to indicate the attribute denotes a setting for a doc. (&quot;Doc&quot; is a short, easy-to-pronounce term that means &quot;a piece of print data.&quot;) The client may include a &lt;code&gt;DocAttribute&lt;/code&gt; in a &lt;code&gt;Doc&lt;/code&gt;'s attribute set to specify a characteristic of that doc. If an attribute implements &lt;a href=&quot;printrequestattribute&quot;&gt;&lt;code&gt;PrintRequestAttribute&lt;/code&gt;&lt;/a&gt; as well as &lt;code&gt;DocAttribute&lt;/code&gt;, the client may include the attribute in a attribute set which specifies a print job to specify a characteristic for all the docs in that job.</source>
          <target state="translated">インターフェイス &lt;code&gt;DocAttribute&lt;/code&gt; は、属性がドキュメントの設定を示すことを示すために印刷属性クラスが実装するタグ付けインターフェイスです。 （「Doc」は、「印刷データの一部」を意味する短くて発音しやすい用語です。）クライアントは、そのドキュメントの特性を指定するために、 &lt;code&gt;Doc&lt;/code&gt; の属性セットに &lt;code&gt;DocAttribute&lt;/code&gt; を含めることができます。属性が &lt;code&gt;DocAttribute&lt;/code&gt; だけでなく&lt;a href=&quot;printrequestattribute&quot;&gt; &lt;code&gt;PrintRequestAttribute&lt;/code&gt; &lt;/a&gt;も実装している場合、クライアントは、印刷ジョブを指定する属性セットに属性を含めて、そのジョブ内のすべてのドキュメントの特性を指定できます。</target>
        </trans-unit>
        <trans-unit id="104a4519fff11263de33c025f71a108f32efa28b" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;DocAttributeSet&lt;/code&gt; specifies the interface for a set of doc attributes, i.e. printing attributes that implement interface &lt;a href=&quot;docattribute&quot;&gt;&lt;code&gt;DocAttribute&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">インターフェイス &lt;code&gt;DocAttributeSet&lt;/code&gt; は、一連のドキュメント属性のインターフェイス、つまりインターフェイス&lt;a href=&quot;docattribute&quot;&gt; &lt;code&gt;DocAttribute&lt;/code&gt; &lt;/a&gt;を実装する印刷属性を指定します。</target>
        </trans-unit>
        <trans-unit id="2055d6217bd8628d3be82b6b7abd92d6e0d1ae79" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;DocAttributeSet&lt;/code&gt; specifies the interface for a set of doc attributes, i.e. printing attributes that implement interface &lt;a href=&quot;docattribute&quot;&gt;&lt;code&gt;DocAttribute&lt;/code&gt;&lt;/a&gt;. In the Print Service API, the client uses a &lt;code&gt;DocAttributeSet&lt;/code&gt; to specify the characteristics of an individual doc and the print job settings to be applied to an individual doc.</source>
          <target state="translated">インターフェイス &lt;code&gt;DocAttributeSet&lt;/code&gt; は、一連のドキュメント属性のインターフェイス、つまりインターフェイス&lt;a href=&quot;docattribute&quot;&gt; &lt;code&gt;DocAttribute&lt;/code&gt; &lt;/a&gt;を実装する印刷属性を指定します。Print Service APIでは、クライアントは &lt;code&gt;DocAttributeSet&lt;/code&gt; を使用して、個々のドキュメントの特性と、個々のドキュメントに適用される印刷ジョブ設定を指定します。</target>
        </trans-unit>
        <trans-unit id="d630a332e959d063630827cfcbdca09c1f854da4" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;FlavorException&lt;/code&gt; is a mixin interface which a subclass of &lt;a href=&quot;printexception&quot;&gt;&lt;code&gt;PrintException&lt;/code&gt;&lt;/a&gt; can implement to report an error condition involving a doc flavor or flavors (class &lt;a href=&quot;docflavor&quot;&gt;&lt;code&gt;DocFlavor&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">インターフェイス &lt;code&gt;FlavorException&lt;/code&gt; はのサブクラスミックスイン・インターフェースである&lt;a href=&quot;printexception&quot;&gt; &lt;code&gt;PrintException&lt;/code&gt; は、&lt;/a&gt; docフレーバや風味（クラス関与するエラー条件を報告するために実装することができ&lt;a href=&quot;docflavor&quot;&gt; &lt;code&gt;DocFlavor&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="38e8c80cadf73382ff4365e6792cb17ce912f6e5" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;FlavorException&lt;/code&gt; is a mixin interface which a subclass of &lt;a href=&quot;printexception&quot;&gt;&lt;code&gt;PrintException&lt;/code&gt;&lt;/a&gt; can implement to report an error condition involving a doc flavor or flavors (class &lt;a href=&quot;docflavor&quot;&gt;&lt;code&gt;DocFlavor&lt;/code&gt;&lt;/a&gt;). The Print Service API does not define any print exception classes that implement interface &lt;code&gt;FlavorException&lt;/code&gt;, that being left to the Print Service implementor's discretion.</source>
          <target state="translated">インターフェイス &lt;code&gt;FlavorException&lt;/code&gt; はのサブクラスミックスイン・インターフェースである&lt;a href=&quot;printexception&quot;&gt; &lt;code&gt;PrintException&lt;/code&gt; は、&lt;/a&gt; docフレーバや風味（クラス関与するエラー条件を報告するために実装することができ&lt;a href=&quot;docflavor&quot;&gt; &lt;code&gt;DocFlavor&lt;/code&gt; &lt;/a&gt;）。 Print Service APIは、インターフェイス &lt;code&gt;FlavorException&lt;/code&gt; を実装する印刷例外クラスを定義していません。これはPrintService実装者の裁量に委ねられています。</target>
        </trans-unit>
        <trans-unit id="5c9398f9a985ac04065445305aed230744a1c6a3" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;MultiDoc&lt;/code&gt; provides an abstraction similar to a &quot;linked list&quot; of docs. A multidoc object is like a node in the linked list, containing the current doc in the list and a pointer to the next node (multidoc) in the list. The Print Job can call the multidoc's &lt;a href=&quot;#getDoc()&quot;&gt;&lt;code&gt;getDoc()&lt;/code&gt;&lt;/a&gt; method to get the current doc. When it's ready to go on to the next doc, the Print Job can call the multidoc's &lt;a href=&quot;#next()&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; method to get the next multidoc, which contains the next doc. So Print Job code for accessing a multidoc might look like this:</source>
          <target state="translated">インターフェイス &lt;code&gt;MultiDoc&lt;/code&gt; は、ドキュメントの「リンクリスト」に似た抽象化を提供します。マルチドキュメントオブジェクトは、リンクリスト内のノードのようなもので、リスト内の現在のドキュメントと、リスト内の次のノード（multidoc）へのポインタが含まれています。印刷ジョブは、multidocの&lt;a href=&quot;#getDoc()&quot;&gt; &lt;code&gt;getDoc()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、現在のドキュメントを取得できます。次のドキュメントに進む準備ができたら、印刷ジョブはmultidocの&lt;a href=&quot;#next()&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、次のドキュメントを含む次のmultidocを取得できます。したがって、マルチドキュメントにアクセスするための印刷ジョブコードは次のようになります。</target>
        </trans-unit>
        <trans-unit id="93a858b8863ae967dabf2fba90171938ded46f80" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;MultiDoc&lt;/code&gt; specifies the interface for an object that supplies more than one piece of print data for a Print Job.</source>
          <target state="translated">インターフェイス &lt;code&gt;MultiDoc&lt;/code&gt; は、印刷ジョブに複数の印刷データを提供するオブジェクトのインターフェイスを指定します。</target>
        </trans-unit>
        <trans-unit id="d0b824e73b36c817c846663c8df827c39cb1a4e4" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;MultiDoc&lt;/code&gt; specifies the interface for an object that supplies more than one piece of print data for a Print Job. &quot;Doc&quot; is a short, easy-to-pronounce term that means &quot;a piece of print data,&quot; and a &quot;multidoc&quot; is a group of several docs. The client passes to the Print Job an object that implements interface &lt;code&gt;MultiDoc&lt;/code&gt;, and the Print Job calls methods on that object to obtain the print data.</source>
          <target state="translated">インターフェイス &lt;code&gt;MultiDoc&lt;/code&gt; は、印刷ジョブに複数の印刷データを提供するオブジェクトのインターフェイスを指定します。「ドキュメント」は短くて発音しやすい用語で、「印刷データの一部」を意味します。「マルチドキュメント」は複数のドキュメントのグループです。クライアントは、インターフェイス &lt;code&gt;MultiDoc&lt;/code&gt; を実装するオブジェクトを印刷ジョブに渡し、印刷ジョブはそのオブジェクトのメソッドを呼び出して印刷データを取得します。</target>
        </trans-unit>
        <trans-unit id="3b5af30590046af953366c34c61da277791be434" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;MultiPrintService&lt;/code&gt; is the factory for a &lt;code&gt;MultiDocPrintJob&lt;/code&gt;.</source>
          <target state="translated">インターフェイス &lt;code&gt;MultiPrintService&lt;/code&gt; は、 &lt;code&gt;MultiDocPrintJob&lt;/code&gt; のファクトリです。</target>
        </trans-unit>
        <trans-unit id="fef26251c298ac8634e5bea7a378c0dfd948cb9d" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;MultiPrintService&lt;/code&gt; is the factory for a &lt;code&gt;MultiDocPrintJob&lt;/code&gt;. A &lt;code&gt;MultiPrintService&lt;/code&gt; describes the capabilities of a printer and can be queried regarding a printer's supported attributes.</source>
          <target state="translated">インターフェイス &lt;code&gt;MultiPrintService&lt;/code&gt; は、 &lt;code&gt;MultiDocPrintJob&lt;/code&gt; のファクトリです。A &lt;code&gt;MultiPrintService&lt;/code&gt; は、プリンタの機能を説明し、プリンタのサポートする属性に関する照会することができます。</target>
        </trans-unit>
        <trans-unit id="805dad6a1037fc519507ca2333b532a54722d3ee" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;PrintJobAttributeSet&lt;/code&gt; specifies the interface for a set of print job attributes, i.e. printing attributes that implement interface &lt;a href=&quot;printjobattribute&quot;&gt;&lt;code&gt;PrintJobAttribute&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">インターフェイス &lt;code&gt;PrintJobAttributeSet&lt;/code&gt; は、一連の印刷ジョブ属性、つまりインターフェイス&lt;a href=&quot;printjobattribute&quot;&gt; &lt;code&gt;PrintJobAttribute&lt;/code&gt; &lt;/a&gt;を実装する印刷属性のインターフェイスを指定します。</target>
        </trans-unit>
        <trans-unit id="b6747a37a3973246c5c67166e85f8d2947babb05" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;PrintJobAttributeSet&lt;/code&gt; specifies the interface for a set of print job attributes, i.e. printing attributes that implement interface &lt;a href=&quot;printjobattribute&quot;&gt;&lt;code&gt;PrintJobAttribute&lt;/code&gt;&lt;/a&gt;. In the Print Service API, a service uses a &lt;code&gt;PrintJobAttributeSet&lt;/code&gt; to report the status of a print job.</source>
          <target state="translated">インターフェイス &lt;code&gt;PrintJobAttributeSet&lt;/code&gt; は、一連の印刷ジョブ属性、つまりインターフェイス&lt;a href=&quot;printjobattribute&quot;&gt; &lt;code&gt;PrintJobAttribute&lt;/code&gt; &lt;/a&gt;を実装する印刷属性のインターフェイスを指定します。印刷サービスAPIでは、サービスは &lt;code&gt;PrintJobAttributeSet&lt;/code&gt; を使用して印刷ジョブのステータスを報告します。</target>
        </trans-unit>
        <trans-unit id="56f4bc9b6c4411d9b6260b45cb56a83341fa54c8" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;PrintRequestAttribute&lt;/code&gt; is a tagging interface which a printing attribute class implements to indicate the attribute denotes a requested setting for a print job.</source>
          <target state="translated">インターフェイス &lt;code&gt;PrintRequestAttribute&lt;/code&gt; は、属性が印刷ジョブに対して要求された設定を示すことを示すために印刷属性クラスが実装するタグ付けインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="86923823c166f08ae5f2f79af43d25d22193aaf9" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; specifies the interface for a set of print request attributes, i.e. printing attributes that implement interface &lt;a href=&quot;printrequestattribute&quot;&gt;&lt;code&gt;PrintRequestAttribute&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">インターフェイス &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; は、一連の印刷要求属性、つまりインターフェイス&lt;a href=&quot;printrequestattribute&quot;&gt; &lt;code&gt;PrintRequestAttribute&lt;/code&gt; &lt;/a&gt;を実装する印刷属性のインターフェイスを指定します。</target>
        </trans-unit>
        <trans-unit id="a5b6b8ef2e7689205cf250d6e1146654565609bb" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; specifies the interface for a set of print request attributes, i.e. printing attributes that implement interface &lt;a href=&quot;printrequestattribute&quot;&gt;&lt;code&gt;PrintRequestAttribute&lt;/code&gt;&lt;/a&gt;. The client uses a &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; to specify the settings to be applied to a whole print job and to all the docs in the print job.</source>
          <target state="translated">インターフェイス &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; は、一連の印刷要求属性、つまりインターフェイス&lt;a href=&quot;printrequestattribute&quot;&gt; &lt;code&gt;PrintRequestAttribute&lt;/code&gt; &lt;/a&gt;を実装する印刷属性のインターフェイスを指定します。クライアントは、 &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; を使用して、印刷ジョブ全体および印刷ジョブ内のすべてのドキュメントに適用される設定を指定します。</target>
        </trans-unit>
        <trans-unit id="0b20b34239bea3f8653e6f4d69d1b9f0a8e6c0e3" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;PrintService&lt;/code&gt; is the factory for a &lt;code&gt;DocPrintJob&lt;/code&gt;.</source>
          <target state="translated">インターフェイス &lt;code&gt;PrintService&lt;/code&gt; は、 &lt;code&gt;DocPrintJob&lt;/code&gt; のファクトリです。</target>
        </trans-unit>
        <trans-unit id="7a6c74c19b01337d7d6fd9780d1687da3779d4a3" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;PrintService&lt;/code&gt; is the factory for a &lt;code&gt;DocPrintJob&lt;/code&gt;. A &lt;code&gt;PrintService&lt;/code&gt; describes the capabilities of a printer and can be queried regarding a printer's supported attributes.</source>
          <target state="translated">インターフェイス &lt;code&gt;PrintService&lt;/code&gt; は、 &lt;code&gt;DocPrintJob&lt;/code&gt; のファクトリです。A &lt;code&gt;PrintService&lt;/code&gt; プリンタの機能を説明し、プリンタのサポートする属性に関する照会することができます。</target>
        </trans-unit>
        <trans-unit id="754bf26c5083657daceb5a071342a0ed07cba5d1" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;PrintServiceAttribute&lt;/code&gt; is a tagging interface which a printing attribute class implements to indicate the attribute describes the status of a Print Service or some other characteristic of a Print Service.</source>
          <target state="translated">インターフェイス &lt;code&gt;PrintServiceAttribute&lt;/code&gt; は、印刷属性クラスが実装するタグ付けインターフェイスであり、属性が印刷サービスのステータスまたは印刷サービスの他の特性を説明することを示します。</target>
        </trans-unit>
        <trans-unit id="1d97eb09043966e118409a79669eed5fbba9aced" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;PrintServiceAttribute&lt;/code&gt; is a tagging interface which a printing attribute class implements to indicate the attribute describes the status of a Print Service or some other characteristic of a Print Service. A Print Service instance adds a number of &lt;code&gt;PrintServiceAttributes&lt;/code&gt; to a Print service's attribute set to report the Print Service's status.</source>
          <target state="translated">インターフェイス &lt;code&gt;PrintServiceAttribute&lt;/code&gt; は、印刷属性クラスが実装するタグ付けインターフェイスであり、属性が印刷サービスのステータスまたは印刷サービスの他の特性を説明することを示します。プリントサービスインスタンスは、プリントサービスのステータスを報告するために、プリントサービスの属性セットにいくつかの &lt;code&gt;PrintServiceAttributes&lt;/code&gt; を追加します。</target>
        </trans-unit>
        <trans-unit id="f610b199e66308f28f9036ce4ca49b1094d23798" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;PrintServiceAttributeSet&lt;/code&gt; specifies the interface for a set of print job attributes, i.e. printing attributes that implement interface &lt;a href=&quot;printserviceattribute&quot;&gt;&lt;code&gt;PrintServiceAttribute&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">インターフェイス &lt;code&gt;PrintServiceAttributeSet&lt;/code&gt; は、一連の印刷ジョブ属性、つまりインターフェイス&lt;a href=&quot;printserviceattribute&quot;&gt; &lt;code&gt;PrintServiceAttribute&lt;/code&gt; &lt;/a&gt;を実装する印刷属性のインターフェイスを指定します。</target>
        </trans-unit>
        <trans-unit id="466501fce40bea59acc6cfdbc18c7349e4bfaac0" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;PrintServiceAttributeSet&lt;/code&gt; specifies the interface for a set of print job attributes, i.e. printing attributes that implement interface &lt;a href=&quot;printserviceattribute&quot;&gt;&lt;code&gt;PrintServiceAttribute&lt;/code&gt;&lt;/a&gt;. In the Print Service API, the Print Service instance uses a &lt;code&gt;PrintServiceAttributeSet&lt;/code&gt; to report the status of the print service.</source>
          <target state="translated">インターフェイス &lt;code&gt;PrintServiceAttributeSet&lt;/code&gt; は、一連の印刷ジョブ属性、つまりインターフェイス&lt;a href=&quot;printserviceattribute&quot;&gt; &lt;code&gt;PrintServiceAttribute&lt;/code&gt; &lt;/a&gt;を実装する印刷属性のインターフェイスを指定します。Print Service APIでは、 &lt;code&gt;PrintServiceAttributeSet&lt;/code&gt; インスタンスはPrintServiceAttributeSetを使用して印刷サービスのステータスを報告します。</target>
        </trans-unit>
        <trans-unit id="70fb6d827a644849514164f04e699209d53dfea7" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;SupportedValuesAttribute&lt;/code&gt; is a tagging interface which a printing attribute class implements to indicate the attribute describes the supported values for another attribute.</source>
          <target state="translated">インターフェイス &lt;code&gt;SupportedValuesAttribute&lt;/code&gt; は、属性が別の属性でサポートされている値を記述することを示すために印刷属性クラスが実装するタグ付けインターフェイスです。</target>
        </trans-unit>
        <trans-unit id="46f28cb0213009f5447728ec07c9f127875373d9" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;SupportedValuesAttribute&lt;/code&gt; is a tagging interface which a printing attribute class implements to indicate the attribute describes the supported values for another attribute. For example, if a Print Service instance supports the &lt;a href=&quot;standard/copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute, the Print Service instance will have a &lt;a href=&quot;standard/copiessupported&quot;&gt;&lt;code&gt;CopiesSupported&lt;/code&gt;&lt;/a&gt; attribute, which is a &lt;code&gt;SupportedValuesAttribute&lt;/code&gt; giving the legal values a client may specify for the &lt;a href=&quot;standard/copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">インターフェイス &lt;code&gt;SupportedValuesAttribute&lt;/code&gt; は、属性が別の属性でサポートされている値を記述することを示すために印刷属性クラスが実装するタグ付けインターフェイスです。たとえば、Print Serviceインスタンスが&lt;a href=&quot;standard/copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt;属性をサポートしている場合、Print Serviceインスタンスには&lt;a href=&quot;standard/copiessupported&quot;&gt; &lt;code&gt;CopiesSupported&lt;/code&gt; &lt;/a&gt;属性があります。これは、クライアントが&lt;a href=&quot;standard/copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt;属性に指定できる有効な値を与える &lt;code&gt;SupportedValuesAttribute&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b59b04e126a229f111988880d5bb9dda556f9022" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;URIException&lt;/code&gt; is a mixin interface which a subclass of &lt;a href=&quot;printexception&quot;&gt;&lt;code&gt;PrintException&lt;/code&gt;&lt;/a&gt; can implement to report an error condition involving a &lt;code&gt;URI&lt;/code&gt; address.</source>
          <target state="translated">インタフェース &lt;code&gt;URIException&lt;/code&gt; はのサブクラスミックスイン・インターフェースである&lt;a href=&quot;printexception&quot;&gt; &lt;code&gt;PrintException&lt;/code&gt; が&lt;/a&gt;関与するエラー条件を報告するために実装できる &lt;code&gt;URI&lt;/code&gt; のアドレスを。</target>
        </trans-unit>
        <trans-unit id="fb0b076f578f02fd63806743eed587ba7a9919b9" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;URIException&lt;/code&gt; is a mixin interface which a subclass of &lt;a href=&quot;printexception&quot;&gt;&lt;code&gt;PrintException&lt;/code&gt;&lt;/a&gt; can implement to report an error condition involving a &lt;code&gt;URI&lt;/code&gt; address. The Print Service API does not define any print exception classes that implement interface &lt;code&gt;URIException&lt;/code&gt;, that being left to the Print Service implementor's discretion.</source>
          <target state="translated">インタフェース &lt;code&gt;URIException&lt;/code&gt; はのサブクラスミックスイン・インターフェースである&lt;a href=&quot;printexception&quot;&gt; &lt;code&gt;PrintException&lt;/code&gt; が&lt;/a&gt;関与するエラー条件を報告するために実装できる &lt;code&gt;URI&lt;/code&gt; のアドレスを。 Print Service APIは、インターフェイス &lt;code&gt;URIException&lt;/code&gt; を実装する印刷例外クラスを定義せず、PrintService実装者の裁量に任されています。</target>
        </trans-unit>
        <trans-unit id="80caf6313ff2fdbeb8989b171df2c77320268ade" translate="yes" xml:space="preserve">
          <source>Interface AWTEventListener</source>
          <target state="translated">インタフェース AWTEventListener</target>
        </trans-unit>
        <trans-unit id="7ae2012e3f15534a1617703f6075e92b6b04ee55" translate="yes" xml:space="preserve">
          <source>Interface AboutHandler</source>
          <target state="translated">インタフェース アバウトハンドラ</target>
        </trans-unit>
        <trans-unit id="9a41b0351ea09e0167e1e1bf6a8bd89713c75371" translate="yes" xml:space="preserve">
          <source>Interface AbstractDocument.AttributeContext</source>
          <target state="translated">インタフェース AbstractDocument.AttributeContext</target>
        </trans-unit>
        <trans-unit id="dc2f0a1f8917cc1c630b3ae6809688cf097dfde7" translate="yes" xml:space="preserve">
          <source>Interface AbstractDocument.Content</source>
          <target state="translated">インタフェース AbstractDocument.Content</target>
        </trans-unit>
        <trans-unit id="a96d20304fe83e7516343a5a05fb6ca4f8735f4f" translate="yes" xml:space="preserve">
          <source>Interface AbstractView</source>
          <target state="translated">インタフェースアブストラクトビュー</target>
        </trans-unit>
        <trans-unit id="edb7c9266b5c381df0f33ef73573fe8e95e4dac9" translate="yes" xml:space="preserve">
          <source>Interface AccessWatchpointEvent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e537a096087a670478a4ed6588d2c972f7a450b1" translate="yes" xml:space="preserve">
          <source>Interface AccessWatchpointRequest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4a7d953007b3d9cd7b04b934c498913d39c255" translate="yes" xml:space="preserve">
          <source>Interface Accessible</source>
          <target state="translated">アクセス可能なインターフェイス</target>
        </trans-unit>
        <trans-unit id="c609b43d8e185332b2d80ddffc0a36dfcc2da70c" translate="yes" xml:space="preserve">
          <source>Interface AccessibleAction</source>
          <target state="translated">インタフェースアクセシブルアクション</target>
        </trans-unit>
        <trans-unit id="31f548d266a0925ac3498c30c36706274fc18d52" translate="yes" xml:space="preserve">
          <source>Interface AccessibleComponent</source>
          <target state="translated">インターフェイスAccessibleComponent</target>
        </trans-unit>
        <trans-unit id="bb1a7727aa2b76289757f7d505a5192f803e8bb2" translate="yes" xml:space="preserve">
          <source>Interface AccessibleEditableText</source>
          <target state="translated">インターフェース AccessibleEditableText</target>
        </trans-unit>
        <trans-unit id="1f4639ea76278528cea63715a6a102fa97858212" translate="yes" xml:space="preserve">
          <source>Interface AccessibleExtendedComponent</source>
          <target state="translated">インターフェイスAccessibleExtendedComponent</target>
        </trans-unit>
        <trans-unit id="02e033cf01fb9b7ddc1f1f7999cd9c7df97b5fbd" translate="yes" xml:space="preserve">
          <source>Interface AccessibleExtendedTable</source>
          <target state="translated">インタフェースAccessibleExtendedTable</target>
        </trans-unit>
        <trans-unit id="14cba2463456c0dd6e7d49bb60c7461cce94b390" translate="yes" xml:space="preserve">
          <source>Interface AccessibleExtendedText</source>
          <target state="translated">インターフェイスAccessibleExtendedText</target>
        </trans-unit>
        <trans-unit id="18be8e8421bcc790bba27528f180906a10c7dab3" translate="yes" xml:space="preserve">
          <source>Interface AccessibleHyperlink</source>
          <target state="translated">インタフェースアクセス可能ハイパーリンク</target>
        </trans-unit>
        <trans-unit id="acb48edf7dc1585b5c24bd2f195ad2d6ab94d53b" translate="yes" xml:space="preserve">
          <source>Interface AccessibleHypertext</source>
          <target state="translated">インタフェースアクセス可能ハイパーテキスト</target>
        </trans-unit>
        <trans-unit id="82a671033b66339c1f3e5479cb352db04c18ded4" translate="yes" xml:space="preserve">
          <source>Interface AccessibleIcon</source>
          <target state="translated">インタフェースアクセシブルアイコン</target>
        </trans-unit>
        <trans-unit id="cd4969f15aaa3a35683d9c97f6cef7e41d2ee329" translate="yes" xml:space="preserve">
          <source>Interface AccessibleKeyBinding</source>
          <target state="translated">インターフェース AccessibleKeyBinding</target>
        </trans-unit>
        <trans-unit id="d50a93baf9d9b2f818d59e83bc2c1f04e82bf487" translate="yes" xml:space="preserve">
          <source>Interface AccessibleSelection</source>
          <target state="translated">インタフェースAccessibleSelection</target>
        </trans-unit>
        <trans-unit id="d3bfef1b14a370d8214c64e9ad65b3a385193d50" translate="yes" xml:space="preserve">
          <source>Interface AccessibleStreamable</source>
          <target state="translated">インターフェイスAccessibleStreamable</target>
        </trans-unit>
        <trans-unit id="199020a77dc97099cfde98837f20e0391839d13d" translate="yes" xml:space="preserve">
          <source>Interface AccessibleTable</source>
          <target state="translated">インタフェース AccessibleTable</target>
        </trans-unit>
        <trans-unit id="e2a428dfeb2fb85c592db1b6dc113097486595b9" translate="yes" xml:space="preserve">
          <source>Interface AccessibleTableModelChange</source>
          <target state="translated">インタフェース AccessibleTableModelChange</target>
        </trans-unit>
        <trans-unit id="fb590fe4f5c6845955b638ce61b74e0f87dacdd2" translate="yes" xml:space="preserve">
          <source>Interface AccessibleText</source>
          <target state="translated">インタフェースアクセシブルテキスト</target>
        </trans-unit>
        <trans-unit id="3a837c66717a4d17dce66d3d9e4fa46b6478b318" translate="yes" xml:space="preserve">
          <source>Interface AccessibleValue</source>
          <target state="translated">インタフェースアクセス可能値</target>
        </trans-unit>
        <trans-unit id="91be60c099e63961038e4c7af1f281fb65a03ca5" translate="yes" xml:space="preserve">
          <source>Interface Acl</source>
          <target state="translated">インターフェースAcl</target>
        </trans-unit>
        <trans-unit id="ebc01cbdd9d3fb9faeb667801b5719b3394527d9" translate="yes" xml:space="preserve">
          <source>Interface AclEntry</source>
          <target state="translated">インタフェース AclEntry</target>
        </trans-unit>
        <trans-unit id="6c35b0a918bd008e107267db4fa3c25e85ac2830" translate="yes" xml:space="preserve">
          <source>Interface AclFileAttributeView</source>
          <target state="translated">インタフェース AclFileAttributeView</target>
        </trans-unit>
        <trans-unit id="a33b87c5ff8051803ba65132d23687e81d15c213" translate="yes" xml:space="preserve">
          <source>Interface Action</source>
          <target state="translated">インタフェースアクション</target>
        </trans-unit>
        <trans-unit id="0643f2a60bd73ce7e774b0bd4b9d94e015c301aa" translate="yes" xml:space="preserve">
          <source>Interface ActionListener</source>
          <target state="translated">インターフェース ActionListener</target>
        </trans-unit>
        <trans-unit id="1ff6e3c7b7e59f9b9391ea72b628060e73bf2877" translate="yes" xml:space="preserve">
          <source>Interface ActivationInstantiator</source>
          <target state="translated">インターフェイスアクティベーションインスタンス</target>
        </trans-unit>
        <trans-unit id="660a4598f8fab734b87187c4de8037dc52ca0c08" translate="yes" xml:space="preserve">
          <source>Interface ActivationMonitor</source>
          <target state="translated">インタフェース起動モニタ</target>
        </trans-unit>
        <trans-unit id="b57edfdf6ab506d9bcbd9c5811cd63a7ecff71c9" translate="yes" xml:space="preserve">
          <source>Interface ActivationSystem</source>
          <target state="translated">インターフェイス活性化システム</target>
        </trans-unit>
        <trans-unit id="adbb92009e81bc151c4083ca7d81cbfe6e0fc168" translate="yes" xml:space="preserve">
          <source>Interface Activator</source>
          <target state="translated">インタフェースアクチベーター</target>
        </trans-unit>
        <trans-unit id="a1e65f72ab7e9f817a990f94988a56b6a7187cbf" translate="yes" xml:space="preserve">
          <source>Interface ActiveEvent</source>
          <target state="translated">インタフェースActiveEvent</target>
        </trans-unit>
        <trans-unit id="3264406335543647660004c98b5a279d21d0b6e6" translate="yes" xml:space="preserve">
          <source>Interface Adjustable</source>
          <target state="translated">インターフェイス調整可能</target>
        </trans-unit>
        <trans-unit id="ff5ce4a30d1905a3a53a59530297d2e40591997a" translate="yes" xml:space="preserve">
          <source>Interface AdjustmentListener</source>
          <target state="translated">インタフェース調整リスナー</target>
        </trans-unit>
        <trans-unit id="5a161f0f319683ce3f54efd32f248f85f199b52c" translate="yes" xml:space="preserve">
          <source>Interface AlgorithmConstraints</source>
          <target state="translated">インタフェース AlgorithmConstraints</target>
        </trans-unit>
        <trans-unit id="cd09990f0841c85ea6495553499e9c7204a5bcd6" translate="yes" xml:space="preserve">
          <source>Interface AlgorithmMethod</source>
          <target state="translated">インタフェースアルゴリズムメソッド</target>
        </trans-unit>
        <trans-unit id="1f49f8cdef7fc4a0781647f4ba1ee7e314b26595" translate="yes" xml:space="preserve">
          <source>Interface AlgorithmParameterSpec</source>
          <target state="translated">インタフェース AlgorithmParameterSpec</target>
        </trans-unit>
        <trans-unit id="a5531dfc56a07606b3370f56e496889c63b2e7c1" translate="yes" xml:space="preserve">
          <source>Interface AncestorListener</source>
          <target state="translated">インタフェース AncestorListener</target>
        </trans-unit>
        <trans-unit id="b84b41e5502f54c14473120d05ea41991b2f587b" translate="yes" xml:space="preserve">
          <source>Interface AnnotatedArrayType</source>
          <target state="translated">インターフェイス AnnotatedArrayType</target>
        </trans-unit>
        <trans-unit id="dcf986d54052c6a8b1bbe315319fb43e35ce2393" translate="yes" xml:space="preserve">
          <source>Interface AnnotatedConstruct</source>
          <target state="translated">インターフェイス AnnotatedConstruct</target>
        </trans-unit>
        <trans-unit id="4f4f5f266ec7a166dc3fc0f9af26b101ee487fe6" translate="yes" xml:space="preserve">
          <source>Interface AnnotatedElement</source>
          <target state="translated">インタフェース注釈付き要素</target>
        </trans-unit>
        <trans-unit id="35d4943295eb7f7197211f79b2434bf261dcad07" translate="yes" xml:space="preserve">
          <source>Interface AnnotatedParameterizedType</source>
          <target state="translated">Interface AnnotatedParameterizedType</target>
        </trans-unit>
        <trans-unit id="20bc55cfad04b62fbfec2c9dceccd3ec2b6fe2be" translate="yes" xml:space="preserve">
          <source>Interface AnnotatedType</source>
          <target state="translated">インタフェース注釈付きタイプ</target>
        </trans-unit>
        <trans-unit id="f306a6d00b77c1160e55f9d5eafdbc8452762069" translate="yes" xml:space="preserve">
          <source>Interface AnnotatedTypeTree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4c0c87995573881358420fd8ff933fcba4be76" translate="yes" xml:space="preserve">
          <source>Interface AnnotatedTypeVariable</source>
          <target state="translated">Interface AnnotatedTypeVariable</target>
        </trans-unit>
        <trans-unit id="db43f986e431e4203af63379d60f1d790f400b00" translate="yes" xml:space="preserve">
          <source>Interface AnnotatedWildcardType</source>
          <target state="translated">インタフェース注釈付きワイルドカードタイプ</target>
        </trans-unit>
        <trans-unit id="8af115606964138c46a51bb7e3b816bbdfe30ba7" translate="yes" xml:space="preserve">
          <source>Interface Annotation</source>
          <target state="translated">インタフェースアノテーション</target>
        </trans-unit>
        <trans-unit id="a7902c2e40fa038c300a2b6950acf4cd18da7e8d" translate="yes" xml:space="preserve">
          <source>Interface AnnotationMirror</source>
          <target state="translated">インタフェースアノテーションミラー</target>
        </trans-unit>
        <trans-unit id="c01a49ce615dad38170909e3ab1f06da05b645dc" translate="yes" xml:space="preserve">
          <source>Interface AnnotationTree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be938a72169a83a181f2a29b8aa1be03327eb7f8" translate="yes" xml:space="preserve">
          <source>Interface AnnotationValue</source>
          <target state="translated">インタフェースアノテーション値</target>
        </trans-unit>
        <trans-unit id="9ef304d174f0181ce95fd7143c538f922cf83eb8" translate="yes" xml:space="preserve">
          <source>Interface AnnotationValueVisitor&amp;lt;R,P&amp;gt;</source>
          <target state="translated">インターフェースAnnotationValueVisitor &amp;lt;R、P&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8112db87ac8f249d30b23c70890c892bc49398a3" translate="yes" xml:space="preserve">
          <source>Interface AnnotationValueVisitor&amp;lt;R,​P&amp;gt;</source>
          <target state="translated">インターフェイスAnnotationValueVisitor &amp;lt;R、P&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0e6cfca6182855764ed9a58a5a0828d36506324f" translate="yes" xml:space="preserve">
          <source>Interface AppForegroundListener</source>
          <target state="translated">インターフェースAppForegroundListener</target>
        </trans-unit>
        <trans-unit id="83f723df4e62d16afd86c00931c21830f6751e8c" translate="yes" xml:space="preserve">
          <source>Interface AppHiddenListener</source>
          <target state="translated">インタフェース AppHiddenListener</target>
        </trans-unit>
        <trans-unit id="b133e0235bb140f8c4c7e86d9fbe17a5e292aeb9" translate="yes" xml:space="preserve">
          <source>Interface AppReopenedListener</source>
          <target state="translated">インタフェース AppReopenedListener</target>
        </trans-unit>
        <trans-unit id="1e411f8b50c98e5ba4d736bedd2e0d5a72527551" translate="yes" xml:space="preserve">
          <source>Interface Appendable</source>
          <target state="translated">インタフェース・アペンドブル</target>
        </trans-unit>
        <trans-unit id="53ba52d19a06943a57a53876e135cc6f218fc179" translate="yes" xml:space="preserve">
          <source>Interface AppletContext</source>
          <target state="translated">インタフェース AppletContext</target>
        </trans-unit>
        <trans-unit id="6664221569a224da02eb9bb4c4534a66c0b57285" translate="yes" xml:space="preserve">
          <source>Interface AppletInitializer</source>
          <target state="translated">インタフェース AppletInitializer</target>
        </trans-unit>
        <trans-unit id="1dfaee2db044ab597fcd11843f7754139ff89774" translate="yes" xml:space="preserve">
          <source>Interface AppletStub</source>
          <target state="translated">インタフェース AppletStub</target>
        </trans-unit>
        <trans-unit id="f995c087fd16111941ba025df0feb72c3d904032" translate="yes" xml:space="preserve">
          <source>Interface Array</source>
          <target state="translated">インタフェース配列</target>
        </trans-unit>
        <trans-unit id="5da025de63cf6a94f2e64e4a8a7ba17774735927" translate="yes" xml:space="preserve">
          <source>Interface ArrayAccessTree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1925941eb888650dc54ca0931a5c08418c5123" translate="yes" xml:space="preserve">
          <source>Interface ArrayReference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d17c61df5aa081f7be946a53ba992aacb7011c9" translate="yes" xml:space="preserve">
          <source>Interface ArrayType</source>
          <target state="translated">インタフェース ArrayType</target>
        </trans-unit>
        <trans-unit id="510bd117a5959e804f89189c78494552d0c6bdbe" translate="yes" xml:space="preserve">
          <source>Interface ArrayTypeTree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6b44d2f0330031e54aa580669cf08c029a3faa" translate="yes" xml:space="preserve">
          <source>Interface AssertTree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc5d4a17c1db1fc75e3d35f411025243cad4c57" translate="yes" xml:space="preserve">
          <source>Interface AssignmentTree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4370e133a2de01c7a5a5d06b88facbf008907947" translate="yes" xml:space="preserve">
          <source>Interface AsynchronousByteChannel</source>
          <target state="translated">Interface AsynchronousByteChannel</target>
        </trans-unit>
        <trans-unit id="5834d4407313924d9d380adb1d2f333eadd6b625" translate="yes" xml:space="preserve">
          <source>Interface AsynchronousChannel</source>
          <target state="translated">インタフェース 非同期チャンネル</target>
        </trans-unit>
        <trans-unit id="038b7cf71dcde0637399c82726fb384463b47bce" translate="yes" xml:space="preserve">
          <source>Interface AttachingConnector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa6b410cf1e4cab43efa5c4133bf0a8bfbfa801" translate="yes" xml:space="preserve">
          <source>Interface Attr</source>
          <target state="translated">インタフェースアトライ</target>
        </trans-unit>
        <trans-unit id="790f7cf3ffd650645bb89d6cec2250e43d8b686e" translate="yes" xml:space="preserve">
          <source>Interface Attribute</source>
          <target state="translated">インタフェース属性</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
