<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="5951fdcb7eaad658dd8f305149f76d4e28ab97cc" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.getId()</source>
          <target state="translated">ThaiBuddhistChronology.getId()</target>
        </trans-unit>
        <trans-unit id="5dc3d69674033a15206befd7f6f1f0bd82e1f586" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.isLeapYear()</source>
          <target state="translated">ThaiBuddhistChronology.isLeapYear()</target>
        </trans-unit>
        <trans-unit id="0ca9e1ad57b9dc845e3c7a8290592d23191a4c7c" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.localDateTime()</source>
          <target state="translated">ThaiBuddhistChronology.localDateTime()</target>
        </trans-unit>
        <trans-unit id="62c58c7a6de0785fc1963f4cdc3f687a137b9c8a" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.prolepticYear()</source>
          <target state="translated">ThaiBuddhistChronology.prolepticYear()</target>
        </trans-unit>
        <trans-unit id="84dec28471d39425c7517074060ef484dc960f5b" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.range()</source>
          <target state="translated">ThaiBuddhistChronology.range()</target>
        </trans-unit>
        <trans-unit id="6f1b85d9c539b822fc2c329e721c9f10d3615fda" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.resolveDate()</source>
          <target state="translated">ThaiBuddhistChronology.resolveDate()</target>
        </trans-unit>
        <trans-unit id="ef04f245e01dd1ed7ca48833a62e0cf965f8b9c8" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.zonedDateTime()</source>
          <target state="translated">ThaiBuddhistChronology.zonedDateTime()</target>
        </trans-unit>
        <trans-unit id="56cacb065b48fc5b20d838fbbe8bde43dbb623ac" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate</source>
          <target state="translated">ThaiBuddhistDate</target>
        </trans-unit>
        <trans-unit id="db18fff8c5f1eba899d8e2fec3b841757b2c64a3" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.atTime()</source>
          <target state="translated">ThaiBuddhistDate.atTime()</target>
        </trans-unit>
        <trans-unit id="9d6dc83ae18f9c046ce1ca0c1c1858d808569894" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.equals()</source>
          <target state="translated">ThaiBuddhistDate.equals()</target>
        </trans-unit>
        <trans-unit id="a1d0a76834da9825dbe7a22b7df411265b938345" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.from()</source>
          <target state="translated">ThaiBuddhistDate.from()</target>
        </trans-unit>
        <trans-unit id="631ff9458cac35099e69a03f2c39b78d3177d43d" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.getChronology()</source>
          <target state="translated">ThaiBuddhistDate.getChronology()</target>
        </trans-unit>
        <trans-unit id="867efbd62bb34492da2f93784ae9940be543f6e8" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.getEra()</source>
          <target state="translated">ThaiBuddhistDate.getEra()</target>
        </trans-unit>
        <trans-unit id="b20965a16ab7d753daa15fdd1445726a4b4bc735" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.getLong()</source>
          <target state="translated">ThaiBuddhistDate.getLong()</target>
        </trans-unit>
        <trans-unit id="1d08e48b0f31e7d132dcf2513888d58482f93533" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.hashCode()</source>
          <target state="translated">ThaiBuddhistDate.hashCode()</target>
        </trans-unit>
        <trans-unit id="05c327da97b723029b77d71ab87e5769aa49376d" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.lengthOfMonth()</source>
          <target state="translated">ThaiBuddhistDate.lengthOfMonth()</target>
        </trans-unit>
        <trans-unit id="83339f429fc8d1032f157bfa1a6f48584818ee22" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.minus()</source>
          <target state="translated">ThaiBuddhistDate.minus()</target>
        </trans-unit>
        <trans-unit id="1772e94bfa441b9d316fb8029d2e0a2880c086e9" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.now()</source>
          <target state="translated">ThaiBuddhistDate.now()</target>
        </trans-unit>
        <trans-unit id="eee511f518f709d927b64f0cf053d2bc3abdf547" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.of()</source>
          <target state="translated">ThaiBuddhistDate.of()</target>
        </trans-unit>
        <trans-unit id="6e5182152bdca111eee82cfccedeccac50e6be2b" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.plus()</source>
          <target state="translated">ThaiBuddhistDate.plus()</target>
        </trans-unit>
        <trans-unit id="3caf1e8127398daabc0daecbc7a3899bc28bf097" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.range()</source>
          <target state="translated">ThaiBuddhistDate.range()</target>
        </trans-unit>
        <trans-unit id="c9251bd315b835c130709c2bd5ad364ffcd087a2" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.toEpochDay()</source>
          <target state="translated">ThaiBuddhistDate.toEpochDay()</target>
        </trans-unit>
        <trans-unit id="e14e21c8865db3adeb700749d14718da3c6d5c12" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.toString()</source>
          <target state="translated">ThaiBuddhistDate.toString()</target>
        </trans-unit>
        <trans-unit id="b5d685fb3d918cd886b757988fe0097b71da0c52" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.until()</source>
          <target state="translated">ThaiBuddhistDate.until()</target>
        </trans-unit>
        <trans-unit id="0891bb4c3ac498e3de588a3b988abfe28bd45b3a" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.with()</source>
          <target state="translated">ThaiBuddhistDate.with()</target>
        </trans-unit>
        <trans-unit id="0c6f18d03a0410128636e15c4276fb431889de55" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra</source>
          <target state="translated">ThaiBuddhistEra</target>
        </trans-unit>
        <trans-unit id="1e44ae46b9f83afcc5d0dd91bd2ba339e3ffe2e6" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.getValue()</source>
          <target state="translated">ThaiBuddhistEra.getValue()</target>
        </trans-unit>
        <trans-unit id="1f8b419c0c527a193ab6d599bd7ec00e696ce392" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.of()</source>
          <target state="translated">ThaiBuddhistEra.of()</target>
        </trans-unit>
        <trans-unit id="551e2de4fb34142d0eff47396c16cf09f916c035" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.valueOf()</source>
          <target state="translated">ThaiBuddhistEra.valueOf()</target>
        </trans-unit>
        <trans-unit id="5ec30eac149daa0ab70fa50291d1ae80950de39a" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.values()</source>
          <target state="translated">ThaiBuddhistEra.values()</target>
        </trans-unit>
        <trans-unit id="8a430b0436fbafd13ff3f8f793fd3a22f31a2926" translate="yes" xml:space="preserve">
          <source>That</source>
          <target state="translated">That</target>
        </trans-unit>
        <trans-unit id="383a080e9d69d6f722f57039b9091b9f29317036" translate="yes" xml:space="preserve">
          <source>That a selection key indicates that its channel is ready for some operation is a hint, but not a guarantee, that such an operation can be performed by a thread without causing the thread to block. It is imperative that code that performs multiplexed I/O be written so as to ignore these hints when they prove to be incorrect.</source>
          <target state="translated">選択キーがそのチャンネルが何らかの操作の準備ができていることを示すのはヒントであり、そのような操作をスレッドがブロックすることなく実行できることを保証するものではありません。多重化された I/O を実行するコードは、これらのヒントが正しくないことが判明した場合には無視するように記述することが必須です。</target>
        </trans-unit>
        <trans-unit id="2e116fde30bfce6bc219f98a723200588db818f4" translate="yes" xml:space="preserve">
          <source>That a selection key's ready set indicates that its channel is ready for some operation category is a hint, but not a guarantee, that an operation in such a category may be performed by a thread without causing the thread to block. A ready set is most likely to be accurate immediately after the completion of a selection operation. It is likely to be made inaccurate by external events and by I/O operations that are invoked upon the corresponding channel.</source>
          <target state="translated">選択キーのレディセットがそのチャンネルがある操作カテゴリの準備ができていることを示すのは、そのようなカテゴリの操作をスレッドがブロックすることなく実行できることを保証するものではありませんが、 ヒントにはなります。レディセットは、選択操作が完了した直後に正確になる可能性が高い。これは、外部イベントや、対応するチャネルに対して呼び出されるI/O操作によって不正確になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="7293d0c8de22c531a5129cfdad90649cce36d51f" translate="yes" xml:space="preserve">
          <source>That implementation makes the operation suitable for short traversals from a known position. But to traverse all of the leaves in the tree, you should use &lt;code&gt;depthFirstEnumeration&lt;/code&gt; to enumerate the nodes in the tree and use &lt;code&gt;isLeaf&lt;/code&gt; on each node to determine which are leaves.</source>
          <target state="translated">この実装により、操作は既知の位置からの短いトラバーサルに適したものになります。ただし、ツリー内のすべての葉をトラバースするには、 &lt;code&gt;depthFirstEnumeration&lt;/code&gt; を使用してツリー内のノードを列挙し、各ノードで &lt;code&gt;isLeaf&lt;/code&gt; を使用してどの葉であるかを判別する必要があります。</target>
        </trans-unit>
        <trans-unit id="afcead73a580f282a044b63d246784dd77d66756" translate="yes" xml:space="preserve">
          <source>That is, &lt;code&gt;cipher.getParameters().getEncoded()&lt;/code&gt;.</source>
          <target state="translated">つまり、 &lt;code&gt;cipher.getParameters().getEncoded()&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5ffbb9cc7363c310d2444b1a8fa556ad01792b87" translate="yes" xml:space="preserve">
          <source>That is, if &lt;code&gt;AWTEvent&lt;/code&gt; A is enqueued to the &lt;code&gt;EventQueue&lt;/code&gt; before &lt;code&gt;AWTEvent&lt;/code&gt; B then event B will not be dispatched before event A.</source>
          <target state="translated">場合は、あることを &lt;code&gt;AWTEvent&lt;/code&gt; Aがキューに入れられる &lt;code&gt;EventQueue&lt;/code&gt; の前に &lt;code&gt;AWTEvent&lt;/code&gt; B、イベントBがイベントAの前に送出されることはありません</target>
        </trans-unit>
        <trans-unit id="47b2766631eff8497375264c6fafdca64d098834" translate="yes" xml:space="preserve">
          <source>That is, it creates a virtual machine descriptor such that the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1838fbc3bd4ca130f9a4e006ec1c3120622cb2b7" translate="yes" xml:space="preserve">
          <source>That is, it is not permitted that several events from this queue are dispatched simultaneously.</source>
          <target state="translated">つまり、このキューから複数のイベントを同時にディスパッチすることは許されていません。</target>
        </trans-unit>
        <trans-unit id="556c041f00679345ada54c5a7f121b6e2342017b" translate="yes" xml:space="preserve">
          <source>That is, the above declaration is identical to the following, more verbose one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fbef03361aa2d11a29ea57ba9573d91992f1ee2" translate="yes" xml:space="preserve">
          <source>That supports three categories of application that modify entity resolution. &lt;em&gt;Old Style&lt;/em&gt; applications won't know about this interface; they will provide an EntityResolver. &lt;em&gt;Transitional Mode&lt;/em&gt; provide an EntityResolver2 and automatically get the benefit of its methods in any systems (parsers or other tools) supporting it, due to polymorphism. Both &lt;em&gt;Old Style&lt;/em&gt; and &lt;em&gt;Transitional Mode&lt;/em&gt; applications will work with any SAX2 parser. &lt;em&gt;New style&lt;/em&gt; applications will fail to run except on SAX2 parsers that support this particular feature. They will insist that feature flag have a value of &quot;true&quot;, and the EntityResolver2 implementation they provide might throw an exception if the original SAX 1.0 style entity resolution method is invoked.</source>
          <target state="translated">これは、エンティティの解決を変更する3つのカテゴリのアプリケーションをサポートします。&lt;em&gt;古いスタイルの&lt;/em&gt;アプリケーションはこのインターフェースについて知りません。それらはEntityResolverを提供します。トランジショナル&lt;em&gt;モード&lt;/em&gt;はEntityResolver2を提供し、ポリモーフィズムにより、それをサポートするすべてのシステム（パーサーまたはその他のツール）でそのメソッドの利点を自動的に取得します。どちらも&lt;em&gt;古いスタイル&lt;/em&gt;と&lt;em&gt;移行モードの&lt;/em&gt;アプリケーションでは、任意のSAX2パーサーで動作します。&lt;em&gt;新しいスタイル&lt;/em&gt;この特定の機能をサポートするSAX2パーサーを除いて、アプリケーションは実行に失敗します。彼らは、機能フラグの値が「true」であると主張し、元のSAX 1.0スタイルのエンティティ解決メソッドが呼び出された場合、提供するEntityResolver2実装が例外をスローする可能性があります。</target>
        </trans-unit>
        <trans-unit id="006efee9935d1d56869e21b1bac583a106240016" translate="yes" xml:space="preserve">
          <source>That this method returns &lt;code&gt;false&lt;/code&gt; does not imply that no bytes have yet been decoded. Some auto-detecting decoders are capable of decoding some, or even all, of an input byte sequence without fixing on a particular charset.</source>
          <target state="translated">このメソッドが &lt;code&gt;false&lt;/code&gt; を返すことは、バイトがまだデコードされていないことを意味しません。一部の自動検出デコーダーは、特定の文字セットを修正せずに、入力バイトシーケンスの一部またはすべてをデコードできます。</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="d28a162efe56d735c7f674ab51f90529f140fe99" translate="yes" xml:space="preserve">
          <source>The &quot;&amp;lt;hostname&amp;gt;&quot; is an ASCII representation of the hostname, which may contains A-labels. For example, a returned value of an pseudo hostname may look like:</source>
          <target state="translated">「&amp;lt;hostname&amp;gt;」はホスト名のASCII表現であり、Aラベルが含まれる場合があります。たとえば、疑似ホスト名の戻り値は次のようになります。</target>
        </trans-unit>
        <trans-unit id="fbe380e337c8737cb91d45f2fdda4edb182c7b59" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;code&gt;.jar&lt;/code&gt;&quot; suffix is removed.</source>
          <target state="translated">「 &lt;code&gt;.jar&lt;/code&gt; 」サフィックスが削除されます。</target>
        </trans-unit>
        <trans-unit id="5e0cd1ddc5f8cc6b8cae5364b989cfa39faab14b" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;code&gt;permissions&lt;/code&gt;&quot; attribute is not optional in the &quot;&lt;code&gt;posix&lt;/code&gt;&quot; view so a default set of permissions are used for entries that do not have access permissions stored in the Zip file. The default set of permissions are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb83e70711efc11b9d5c355db1e4fee21b3d4ec" translate="yes" xml:space="preserve">
          <source>The &quot;Concurrent&quot; prefix used with some classes in this package is a shorthand indicating several differences from similar &quot;synchronized&quot; classes. For example &lt;code&gt;java.util.Hashtable&lt;/code&gt; and &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; are synchronized. But &lt;a href=&quot;concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt; is &quot;concurrent&quot;. A concurrent collection is thread-safe, but not governed by a single exclusion lock. In the particular case of ConcurrentHashMap, it safely permits any number of concurrent reads as well as a large number of concurrent writes. &quot;Synchronized&quot; classes can be useful when you need to prevent all access to a collection via a single lock, at the expense of poorer scalability. In other cases in which multiple threads are expected to access a common collection, &quot;concurrent&quot; versions are normally preferable. And unsynchronized collections are preferable when either collections are unshared, or are accessible only when holding other locks.</source>
          <target state="translated">このパッケージの一部のクラスで使用される「並行」プレフィックスは、類似の「同期」クラスとのいくつかの違いを示す省略形です。たとえば、 &lt;code&gt;java.util.Hashtable&lt;/code&gt; と &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; は同期されます。しかし、&lt;a href=&quot;concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt;「並行」です。並行コレクションはスレッドセーフですが、単一の除外ロックによって管理されていません。 ConcurrentHashMapの特定のケースでは、任意の数の同時読み取りと多数の同時書き込みを安全に許可します。 「同期」クラスは、スケーラビリティが低下する代わりに、単一のロックを介したコレクションへのすべてのアクセスを防止する必要がある場合に役立ちます。複数のスレッドが共通のコレクションにアクセスすることが予想されるその他の場合、通常は「並行」バージョンが推奨されます。また、同期されていないコレクションは、コレクションが共有されていない場合、または他のロックを保持している場合にのみアクセスできる場合に適しています。</target>
        </trans-unit>
        <trans-unit id="761b12883375956b1fd5c3659aa381596b01fdaa" translate="yes" xml:space="preserve">
          <source>The &quot;Concurrent&quot; prefix used with some classes in this package is a shorthand indicating several differences from similar &quot;synchronized&quot; classes. For example &lt;code&gt;java.util.Hashtable&lt;/code&gt; and &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; are synchronized. But &lt;a href=&quot;concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt; is &quot;concurrent&quot;. A concurrent collection is thread-safe, but not governed by a single exclusion lock. In the particular case of ConcurrentHashMap, it safely permits any number of concurrent reads as well as a tunable number of concurrent writes. &quot;Synchronized&quot; classes can be useful when you need to prevent all access to a collection via a single lock, at the expense of poorer scalability. In other cases in which multiple threads are expected to access a common collection, &quot;concurrent&quot; versions are normally preferable. And unsynchronized collections are preferable when either collections are unshared, or are accessible only when holding other locks.</source>
          <target state="translated">このパッケージの一部のクラスで使用される「並行」接頭辞は、類似の「同期」クラスとのいくつかの違いを示す略記です。たとえば、 &lt;code&gt;java.util.Hashtable&lt;/code&gt; と &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; は同期されます。しかし、&lt;a href=&quot;concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt;「並行」です。並行コレクションはスレッドセーフですが、単一の排他ロックによって制御されません。 ConcurrentHashMapの特定のケースでは、調整可能な数の同時書き込みだけでなく、任意の数の同時読み取りを安全に許可します。 「同期」クラスは、スケーラビリティーが低下する代わりに、単一のロックを介してコレクションへのすべてのアクセスを防止する必要がある場合に役立ちます。複数のスレッドが共通のコレクションにアクセスすることが予想される他のケースでは、通常は「並行」バージョンが推奨されます。また、同期されていないコレクションは、コレクションが共有されていない場合、または他のロックを保持している場合にのみアクセスできる場合に適しています。</target>
        </trans-unit>
        <trans-unit id="2be3c7247d4c95e0eee9f8ccfea4760fa5e29c40" translate="yes" xml:space="preserve">
          <source>The &quot;TableExample&quot; directory in the demo area of the source distribution gives a number of complete examples of &lt;code&gt;JTable&lt;/code&gt; usage, covering how the &lt;code&gt;JTable&lt;/code&gt; can be used to provide an editable view of data taken from a database and how to modify the columns in the display to use specialized renderers and editors.</source>
          <target state="translated">ソース配布のデモ領域に「TableExample」ディレクトリは、完全な例の数与える &lt;code&gt;JTable&lt;/code&gt; の方法覆う、使用を &lt;code&gt;JTable&lt;/code&gt; は、データベースから取得されたデータの編集可能なビューを提供するために使用することができ、ディスプレイの列を変更する方法専用のレンダラーとエディターを使用します。</target>
        </trans-unit>
        <trans-unit id="f5d233d2c83083380d6b780fce20712170e44145" translate="yes" xml:space="preserve">
          <source>The &quot;block&quot; increment for scrolling in the specified direction. This value should always be positive.</source>
          <target state="translated">指定した方向にスクロールするための「ブロック」のインクリメント。この値は常に正の値でなければなりません。</target>
        </trans-unit>
        <trans-unit id="5c92ed0ed7f44357d29a0d93b7d5e34400a5966a" translate="yes" xml:space="preserve">
          <source>The &quot;class&quot; attribute is used to specify the target of a static method or constructor explicitly; its value being the fully qualified name of the class.</source>
          <target state="translated">class&quot; 属性は、静的メソッドやコンストラクタのターゲットを明示的に指定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="410744ec5d7aaa6733716ca632b49febdb1c1415" translate="yes" xml:space="preserve">
          <source>The &quot;contentPane&quot; is the primary container for application specific components.</source>
          <target state="translated">contentPane」は、アプリケーション固有のコンポーネントのための主要なコンテナです。</target>
        </trans-unit>
        <trans-unit id="b5f47fbc154769f72f7809d97f7c4fc03a4116e0" translate="yes" xml:space="preserve">
          <source>The &quot;contentPane&quot; is the primary container for application specific components. Applications should add children to the contentPane, set its layout manager, and so on.</source>
          <target state="translated">contentPane」は、アプリケーション固有のコンポーネントのための主要なコンテナです。アプリケーションはcontentPaneに子を追加したり、レイアウトマネージャを設定したりする必要があります。</target>
        </trans-unit>
        <trans-unit id="99b714dc607d2a32a9e5ae18a28845a9ad7f9870" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; algorithms contained in this class, that is, the algorithms that modify the collection on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the collection does not support the appropriate mutation primitive(s), such as the &lt;code&gt;set&lt;/code&gt; method. These algorithms may, but are not required to, throw this exception if an invocation would have no effect on the collection. For example, invoking the &lt;code&gt;sort&lt;/code&gt; method on an unmodifiable list that is already sorted may or may not throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">このクラスに含まれる「破壊的な」アルゴリズム、つまりそれらが動作するコレクションを変更するアルゴリズムは、コレクションが &lt;code&gt;set&lt;/code&gt; メソッドなどの適切なミューテーションプリミティブをサポートしていない場合に &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローするように指定されています。これらのアルゴリズムは、呼び出しがコレクションに影響を及ぼさない場合に、この例外をスローすることがありますが、必須ではありません。たとえば、すでにソートされている変更不可能なリストで &lt;code&gt;sort&lt;/code&gt; メソッドを呼び出すと、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされる場合とスローされない場合があります。</target>
        </trans-unit>
        <trans-unit id="d3799b0d99e9f9ae8ba59928fbe544b7e50ada4f" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; methods contained in this interface, that is, the methods that modify the collection on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this collection does not support the operation. If this is the case, these methods may, but are not required to, throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the invocation would have no effect on the collection. For example, invoking the &lt;a href=&quot;collection#addAll-java.util.Collection-&quot;&gt;&lt;code&gt;addAll(Collection)&lt;/code&gt;&lt;/a&gt; method on an unmodifiable collection may, but is not required to, throw the exception if the collection to be added is empty.</source>
          <target state="translated">このインターフェイスに含まれる「破壊的」なメソッド、つまり操作対象のコレクションを変更するメソッドは、このコレクションが操作をサポートしていない場合に &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローするように指定されています。この場合、呼び出しがコレクションに影響を及ぼさない場合、これらのメソッドは &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローすることがありますが、必須ではありません。たとえば、変更不可能なコレクションで&lt;a href=&quot;collection#addAll-java.util.Collection-&quot;&gt; &lt;code&gt;addAll(Collection)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、追加するコレクションが空の場合に例外がスローされることがありますが、必須ではありません。</target>
        </trans-unit>
        <trans-unit id="f888ae94165a497ee34db90a9611055f9403494e" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; methods contained in this interface, that is, the methods that modify the map on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this map does not support the operation. If this is the case, these methods may, but are not required to, throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the invocation would have no effect on the map. For example, invoking the &lt;a href=&quot;#putAll(java.util.Map)&quot;&gt;&lt;code&gt;putAll(Map)&lt;/code&gt;&lt;/a&gt; method on an unmodifiable map may, but is not required to, throw the exception if the map whose mappings are to be &quot;superimposed&quot; is empty.</source>
          <target state="translated">このインターフェイスに含まれる「破壊的な」メソッド、つまり、それらが動作するマップを変更するメソッドは、このマップが操作をサポートしていない場合に &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローするように指定されています。この場合、呼び出しがマップに影響を与えない場合、これらのメソッドは &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローする可能性がありますが、必須ではありません。たとえば、変更不可能なマップで&lt;a href=&quot;#putAll(java.util.Map)&quot;&gt; &lt;code&gt;putAll(Map)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、マッピングが「スーパーインポーズ」されるマップが空の場合に例外がスローされる可能性がありますが、必須ではありません。</target>
        </trans-unit>
        <trans-unit id="523d08144b8e0cc24e5d2b715228e9abf2df6508" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; methods contained in this interface, that is, the methods that modify the map on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this map does not support the operation. If this is the case, these methods may, but are not required to, throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the invocation would have no effect on the map. For example, invoking the &lt;a href=&quot;map#putAll-java.util.Map-&quot;&gt;&lt;code&gt;putAll(Map)&lt;/code&gt;&lt;/a&gt; method on an unmodifiable map may, but is not required to, throw the exception if the map whose mappings are to be &quot;superimposed&quot; is empty.</source>
          <target state="translated">このインターフェイスに含まれる「破壊的な」メソッド、つまり、操作対象のマップを変更するメソッドは、このマップが操作をサポートしていない場合に &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローするように指定されています。この場合、呼び出しがマップに影響を及ぼさない場合、これらのメソッドは &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローすることがありますが、必須ではありません。たとえば、変更不可能なマップで&lt;a href=&quot;map#putAll-java.util.Map-&quot;&gt; &lt;code&gt;putAll(Map)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、マッピングが「スーパーインポーズ」されるマップが空の場合に、例外がスローされる場合がありますが、これは必須ではありません。</target>
        </trans-unit>
        <trans-unit id="eae4891e98416f7d88cd670a3c2c7ffcf50a66c3" translate="yes" xml:space="preserve">
          <source>The &quot;expert&quot; flag is used to distinguish between features that are intended for expert users from those that are intended for normal users.</source>
          <target state="translated">エキスパート」フラグは、エキスパートユーザ向けの機能と、通常のユーザ向けの機能を区別するために使用されます。</target>
        </trans-unit>
        <trans-unit id="53de2781ee0e7ac40066ecc66400a0280e82b151" translate="yes" xml:space="preserve">
          <source>The &quot;expert&quot; flag is used to distinguish between those features that are intended for expert users from those that are intended for normal users.</source>
          <target state="translated">エキスパート」フラグは、エキスパートユーザ向けの機能と、通常のユーザ向けの機能を区別するために使用されます。</target>
        </trans-unit>
        <trans-unit id="96db2ea0542daeff5fb771b914acf904d52fda1e" translate="yes" xml:space="preserve">
          <source>The &quot;global&quot; Logger object is provided as a convenience to developers who are making casual use of the Logging package. Developers who are making serious use of the logging package (for example in products) should create and use their own Logger objects, with appropriate names, so that logging can be controlled on a suitable per-Logger granularity. Developers also need to keep a strong reference to their Logger objects to prevent them from being garbage collected.</source>
          <target state="translated">グローバル&quot; Logger オブジェクトは、Logging パッケージをカジュアルに利用している開発者の利便性として提供されています。ロギングパッケージ(製品など)を真剣に使用している開発者は、ロギングをロガーごとに適切な粒度で制御できるように、適切な名前で独自のロガーオブジェクトを作成して使用しなければなりません。また、開発者は、ロガーオブジェクトがゴミとして収集されるのを防ぐために、ロガーオブジェクトへの強力な参照を保持する必要があります。</target>
        </trans-unit>
        <trans-unit id="6d7cb2b2bdfe06e56767bcb0bc7bde1627ef37ec" translate="yes" xml:space="preserve">
          <source>The &quot;heavyweight&quot; components (those that delegate to a peer, or native component on the host system) are shown with a darker, heavier box. The four heavyweight JFC/Swing containers (&lt;code&gt;JFrame&lt;/code&gt;, &lt;code&gt;JDialog&lt;/code&gt;, &lt;code&gt;JWindow&lt;/code&gt;, and &lt;code&gt;JApplet&lt;/code&gt;) are shown in relation to the AWT classes they extend. These four components are the only heavyweight containers in the Swing library. The lightweight container &lt;code&gt;JInternalFrame&lt;/code&gt; is also shown. All five of these JFC/Swing containers implement the &lt;code&gt;RootPaneContainer&lt;/code&gt; interface, and they all delegate their operations to a &lt;code&gt;JRootPane&lt;/code&gt; (shown with a little &quot;handle&quot; on top).</source>
          <target state="translated">「ヘビーウェイト」コンポーネント（ピアに委任するコンポーネント、またはホストシステム上のネイティブコンポーネント）は、暗くて重いボックスで表示されます。 4つのヘビーウェイトJFC / Swingコンテナ（ &lt;code&gt;JFrame&lt;/code&gt; 、 &lt;code&gt;JDialog&lt;/code&gt; 、 &lt;code&gt;JWindow&lt;/code&gt; 、および &lt;code&gt;JApplet&lt;/code&gt; ）は、それらが拡張するAWTクラスに関連して示されています。これらの4つのコンポーネントは、Swingライブラリで唯一の重量のあるコンテナです。軽量コンテナ &lt;code&gt;JInternalFrame&lt;/code&gt; も示されています。これらの5つのJFC / Swingコンテナーはすべて &lt;code&gt;RootPaneContainer&lt;/code&gt; インターフェースを実装し、それらはすべて &lt;code&gt;JRootPane&lt;/code&gt; に操作を委任します（上部に小さな「ハンドル」が表示されています）。</target>
        </trans-unit>
        <trans-unit id="3c8addeccbf7f5e85580dfc2361b06f37794364c" translate="yes" xml:space="preserve">
          <source>The &quot;hidden&quot; flag is used to identify features that are intended only for tool use, and which should not be exposed to humans.</source>
          <target state="translated">隠された」フラグは、ツールの使用のみを目的としており、人間に露出してはならない機能を識別するために使用されます。</target>
        </trans-unit>
        <trans-unit id="a488d2b6590253541ee7f92e1ac3dd1986e06a1b" translate="yes" xml:space="preserve">
          <source>The &quot;host_name&quot; type representing of a DNS hostname (see &lt;a href=&quot;snihostname&quot;&gt;&lt;code&gt;SNIHostName&lt;/code&gt;&lt;/a&gt;) in a Server Name Indication (SNI) extension.</source>
          <target state="translated">サーバー名表示（SNI）拡張のDNSホスト名（&lt;a href=&quot;snihostname&quot;&gt; &lt;code&gt;SNIHostName&lt;/code&gt; を&lt;/a&gt;参照）を表す「host_name」タイプ。</target>
        </trans-unit>
        <trans-unit id="10a044e56e8d6b8a40829767ab33a3bc7ae091b1" translate="yes" xml:space="preserve">
          <source>The &quot;key pressed&quot; event.</source>
          <target state="translated">キーが押された」イベント。</target>
        </trans-unit>
        <trans-unit id="cb1a2a9817108a8f3fb0c74a1517f31d89883b1c" translate="yes" xml:space="preserve">
          <source>The &quot;key pressed&quot; event. This event is generated when a key is pushed down.</source>
          <target state="translated">キーが押された」イベントです。このイベントは、キーが押されたときに発生します。</target>
        </trans-unit>
        <trans-unit id="15a0b36368e7533da45b107a8fdb9d0dbb87991b" translate="yes" xml:space="preserve">
          <source>The &quot;key released&quot; event.</source>
          <target state="translated">&quot;鍵が解放された &quot;イベント。</target>
        </trans-unit>
        <trans-unit id="89065abb7212cafb2aa0e60705c8e8fb49031c07" translate="yes" xml:space="preserve">
          <source>The &quot;key released&quot; event. This event is generated when a key is let up.</source>
          <target state="translated">鍵が解放された」イベントです。このイベントは、鍵が解放されたときに発生します。</target>
        </trans-unit>
        <trans-unit id="c4db56f511a0b0caa531937b259ac838d670ef62" translate="yes" xml:space="preserve">
          <source>The &quot;key typed&quot; event.</source>
          <target state="translated">キーが打たれた」イベント。</target>
        </trans-unit>
        <trans-unit id="1731c860a12ee2be3d3d567b4975c99da1c6b048" translate="yes" xml:space="preserve">
          <source>The &quot;key typed&quot; event. This event is generated when a character is entered. In the simplest case, it is produced by a single key press. Often, however, characters are produced by series of key presses, and the mapping from key pressed events to key typed events may be many-to-one or many-to-many.</source>
          <target state="translated">キーが入力された」イベントです。このイベントは、文字が入力されたときに生成されます。最も単純なケースでは、1回のキー押下によって生成されます。しかし、多くの場合、文字は連続したキーの押下によって生成され、キーが押されたイベントからキータイプされたイベントへのマッピングは、多対多の場合もあります。</target>
        </trans-unit>
        <trans-unit id="d5ee252810cba0d533bf7f76c20a67b32a87cd3a" translate="yes" xml:space="preserve">
          <source>The &quot;listen&quot; action is only meaningful when used with &quot;localhost&quot; and means the ability to bind to a specified port. The &quot;resolve&quot; action is implied when any of the other actions are present. The action &quot;resolve&quot; refers to host/ip name service lookups.</source>
          <target state="translated">listen &quot;アクションは &quot;localhost &quot;と一緒に使用された場合にのみ意味を持ち、指定されたポートにバインドする能力を意味する。resolve」アクションは、他のアクションのいずれかが存在する場合に暗示される。resolve」アクションは、ホスト/IP名サービスのルックアップを参照する。</target>
        </trans-unit>
        <trans-unit id="d3c0ba0eee2ac7b66f3aef3fc73c2b223a4c0ec9" translate="yes" xml:space="preserve">
          <source>The &quot;mouse clicked&quot; event.</source>
          <target state="translated">マウスがクリックされた」イベント。</target>
        </trans-unit>
        <trans-unit id="fd95273f9e0f97ba6154493334dfbc88304d3745" translate="yes" xml:space="preserve">
          <source>The &quot;mouse clicked&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when a mouse button is pressed and released.</source>
          <target state="translated">「マウスクリック」イベント。この &lt;code&gt;MouseEvent&lt;/code&gt; は、マウスボタンを押して離したときに発生します。</target>
        </trans-unit>
        <trans-unit id="eb930dfd17a60925068d70705e9352f325ee57fe" translate="yes" xml:space="preserve">
          <source>The &quot;mouse dragged&quot; event.</source>
          <target state="translated">マウスをドラッグした」イベント。</target>
        </trans-unit>
        <trans-unit id="b075435502c8f7106ae0666596bf2e26f2c15d14" translate="yes" xml:space="preserve">
          <source>The &quot;mouse dragged&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when the mouse position changes while a mouse button is pressed.</source>
          <target state="translated">「マウスドラッグ」イベント。この &lt;code&gt;MouseEvent&lt;/code&gt; は、マウスボタンが押されているときにマウスの位置が変化したときに発生します。</target>
        </trans-unit>
        <trans-unit id="78c6cf4d6d751d3b148d29d91a9b44b79d81b329" translate="yes" xml:space="preserve">
          <source>The &quot;mouse entered&quot; event.</source>
          <target state="translated">マウスが入った」イベント。</target>
        </trans-unit>
        <trans-unit id="92484043e5f424f60214946af78c19a23cb0e672" translate="yes" xml:space="preserve">
          <source>The &quot;mouse entered&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when the mouse cursor enters the unobscured part of component's geometry.</source>
          <target state="translated">「マウスが入った」イベント。この &lt;code&gt;MouseEvent&lt;/code&gt; は、マウスカーソルがコンポーネントのジオメトリの隠されていない部分に入ると発生します。</target>
        </trans-unit>
        <trans-unit id="7cf7efa1787704ba9875d107afd4470014ed223c" translate="yes" xml:space="preserve">
          <source>The &quot;mouse exited&quot; event.</source>
          <target state="translated">マウスが出た」イベント。</target>
        </trans-unit>
        <trans-unit id="7633a989f55a9a134d2f8ff1b7940365bbd2c29a" translate="yes" xml:space="preserve">
          <source>The &quot;mouse exited&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when the mouse cursor exits the unobscured part of component's geometry.</source>
          <target state="translated">「マウスが終了しました」イベント。この &lt;code&gt;MouseEvent&lt;/code&gt; は、マウスカーソルがコンポーネントのジオメトリの隠されていない部分を出るときに発生します。</target>
        </trans-unit>
        <trans-unit id="19a32ec102054b05202c9958fa7c4841ba476534" translate="yes" xml:space="preserve">
          <source>The &quot;mouse moved&quot; event.</source>
          <target state="translated">マウスが動いた」イベント。</target>
        </trans-unit>
        <trans-unit id="7c7e14a335bae48f1e5f91e66b80f93c264e4e45" translate="yes" xml:space="preserve">
          <source>The &quot;mouse moved&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when the mouse position changes.</source>
          <target state="translated">「マウス移動」イベント。この &lt;code&gt;MouseEvent&lt;/code&gt; は、マウスの位置が変更されたときに発生します。</target>
        </trans-unit>
        <trans-unit id="b3bbcddb1dc3d6cbd24ab4a55e75d7a461d4f45a" translate="yes" xml:space="preserve">
          <source>The &quot;mouse pressed&quot; event.</source>
          <target state="translated">マウスが押された」イベント。</target>
        </trans-unit>
        <trans-unit id="ae781e8182fd3b20274560fd07afa5afdaa84dc5" translate="yes" xml:space="preserve">
          <source>The &quot;mouse pressed&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when a mouse button is pushed down.</source>
          <target state="translated">「マウスプレス」イベント。この &lt;code&gt;MouseEvent&lt;/code&gt; は、マウスボタンが押されたときに発生します。</target>
        </trans-unit>
        <trans-unit id="b0ffd7c3529bd8be1ff6ce38f355d520951884df" translate="yes" xml:space="preserve">
          <source>The &quot;mouse released&quot; event.</source>
          <target state="translated">マウスリリース」イベント。</target>
        </trans-unit>
        <trans-unit id="5339e6250ff74b2626aff20bcdc159359391a858" translate="yes" xml:space="preserve">
          <source>The &quot;mouse released&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when a mouse button is let up.</source>
          <target state="translated">「マウスリリース」イベント。この &lt;code&gt;MouseEvent&lt;/code&gt; は、マウスボタンを離したときに発生します。</target>
        </trans-unit>
        <trans-unit id="5f299653ce8809acb5d9b394aeb347b35b63a060" translate="yes" xml:space="preserve">
          <source>The &quot;mouse wheel&quot; event.</source>
          <target state="translated">マウスホイール」イベント。</target>
        </trans-unit>
        <trans-unit id="e2517857e2bd19f0daa1ea9a18fc38bf3b4b844e" translate="yes" xml:space="preserve">
          <source>The &quot;mouse wheel&quot; event. This is the only &lt;code&gt;MouseWheelEvent&lt;/code&gt;. It occurs when a mouse equipped with a wheel has its wheel rotated.</source>
          <target state="translated">「マウスホイール」イベント。これは唯一の &lt;code&gt;MouseWheelEvent&lt;/code&gt; です。これは、ホイールを備えたマウスのホイールが回転したときに発生します。</target>
        </trans-unit>
        <trans-unit id="34537c0a9b18a5b97ca9dba2fc6ccb6e06339c2a" translate="yes" xml:space="preserve">
          <source>The &quot;no offset&quot; text controls what text is printed when the total amount of the offset fields to be output is zero. Example values would be 'Z', '+00:00', 'UTC' or 'GMT'. Three formats are accepted for parsing UTC - the &quot;no offset&quot; text, and the plus and minus versions of zero defined by the pattern.</source>
          <target state="translated">オフセットなし」テキストは、出力されるオフセットフィールドの合計量がゼロの場合に、どのテキストを出力するかを制御します。値の例としては、'Z'、'+00:00'、'UTC' または 'GMT' が挙げられます。UTCの解析には3つのフォーマットが使用できます。&quot;no offset &quot;テキスト、パターンで定義されたゼロのプラスとマイナスのバージョンです。</target>
        </trans-unit>
        <trans-unit id="0039eb18c439a8fe0ded6f996e270014f44833ff" translate="yes" xml:space="preserve">
          <source>The &quot;object&quot; tag denotes an &lt;em&gt;expression&lt;/em&gt; whose value is to be used as the argument to the enclosing element.</source>
          <target state="translated">「object」タグは、その値が囲み要素の引数として使用される&lt;em&gt;式&lt;/em&gt;を示します。</target>
        </trans-unit>
        <trans-unit id="07afefc8066cbe0c177d01f4791e1bb9f5f5aedd" translate="yes" xml:space="preserve">
          <source>The &quot;permissions&quot; attribute is the set of access permissions that are optionally stored for entries in a Zip file. The value of the attribute is &lt;code&gt;null&lt;/code&gt; for entries that do not have access permissions. Zip file systems do not enforce access permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835d0c505cadb9b5c180adf1b65df786a3e7c0b6" translate="yes" xml:space="preserve">
          <source>The &quot;permissions&quot; attribute may be read and set using the &lt;a href=&quot;../java.base/java/nio/file/files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;Files.getAttribute&lt;/a&gt; and &lt;a href=&quot;../java.base/java/nio/file/files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;Files.setAttribute&lt;/a&gt; methods. The following example uses these methods to read and set the attribute:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7ed3f19fc82e3673167bf96934264dcec09b2d" translate="yes" xml:space="preserve">
          <source>The &quot;preferred&quot; flag is used to identify features that are particularly important for presenting to humans.</source>
          <target state="translated">好ましい」フラグは、人間に提示するために特に重要な特徴を識別するために使用されます。</target>
        </trans-unit>
        <trans-unit id="4b8e7b319e024eaf410d2b4884b5404343990997" translate="yes" xml:space="preserve">
          <source>The &quot;propagationId&quot; field is reserved for future use.</source>
          <target state="translated">propagationId &quot;フィールドは将来の使用のために予約されている。</target>
        </trans-unit>
        <trans-unit id="e52ae4af20949258e854e3591de7eb4159275419" translate="yes" xml:space="preserve">
          <source>The &quot;propagationId&quot; field is reserved for future use. In Beans 1.0 the sole requirement is that if a listener catches a PropertyChangeEvent and then fires a PropertyChangeEvent of its own, then it should make sure that it propagates the propagationId field from its incoming event to its outgoing event.</source>
          <target state="translated">propagationId」フィールドは将来の使用のために予約されています。Beans 1.0での唯一の要件は、リスナーがPropertyChangeEventをキャッチして、それ自身のPropertyChangeEventを発生させる場合、それがその着信イベントからその発信イベントにpropagationIdフィールドを伝播することを確認する必要があるということです。</target>
        </trans-unit>
        <trans-unit id="28e0bfde4b5880a6ead92dd03fce5b3e532829ac" translate="yes" xml:space="preserve">
          <source>The &quot;selectionBackground&quot; is the color of the text when it is painted over an unfilled area of the progress bar.</source>
          <target state="translated">選択背景」は、プログレスバーの塗りつぶされていない領域の上に塗りつぶされたときのテキストの色です。</target>
        </trans-unit>
        <trans-unit id="217311dded8133e98a9dbffc4c619b4a9be712b0" translate="yes" xml:space="preserve">
          <source>The &quot;selectionForeground&quot; is the color of the text when it is painted over a filled area of the progress bar.</source>
          <target state="translated">selectionForeground」は、プログレスバーの塗りつぶされた領域の上に塗りつぶされたときのテキストの色です。</target>
        </trans-unit>
        <trans-unit id="42bdeb61efcd06a145da747487352948dbf3d104" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; error output stream.</source>
          <target state="translated">標準」エラー出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="448f901e9880ca6676ec228309500276a588387c" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; error output stream. This stream is already open and ready to accept output data.</source>
          <target state="translated">標準」エラー出力ストリーム。このストリームは既にオープンされており、出力データを受け入れる準備ができています。</target>
        </trans-unit>
        <trans-unit id="c09e43335de1888d318df0870ac4ad9eac45e377" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; input stream.</source>
          <target state="translated">標準」の入力ストリーム。</target>
        </trans-unit>
        <trans-unit id="9b0fa7082ba453aa32dcb16ac03daf1ba9c65c4f" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; input stream. This stream is already open and ready to supply input data. Typically this stream corresponds to keyboard input or another input source specified by the host environment or user.</source>
          <target state="translated">標準」入力ストリーム。このストリームは既にオープンされており、入力データを供給する準備ができている。通常、このストリームはキーボード入力、またはホスト環境またはユーザによって指定された他の入力ソースに対応する。</target>
        </trans-unit>
        <trans-unit id="75482cec17e77687e4c5e4dd58db85c8319d6643" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; output stream.</source>
          <target state="translated">標準」出力ストリーム。</target>
        </trans-unit>
        <trans-unit id="8d594a48963bd0f322bbb684e19620412a6932c8" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; output stream. This stream is already open and ready to accept output data. Typically this stream corresponds to display output or another output destination specified by the host environment or user.</source>
          <target state="translated">標準」出力ストリーム。このストリームはすでにオープンされており、出力データを受け入れる準備ができています。通常、このストリームは、表示出力、またはホスト環境またはユーザによって指定された他の出力先に対応する。</target>
        </trans-unit>
        <trans-unit id="e49f1b992ecac3c4246b928abba36653e8cfabb0" translate="yes" xml:space="preserve">
          <source>The &quot;unit&quot; increment for scrolling in the specified direction</source>
          <target state="translated">指定した方向にスクロールするための「単位」のインクリメント</target>
        </trans-unit>
        <trans-unit id="c7b2a0b2a156cc227469775e832652ef0030c0b5" translate="yes" xml:space="preserve">
          <source>The &quot;unit&quot; increment for scrolling in the specified direction. This value should always be positive.</source>
          <target state="translated">指定された方向にスクロールするための「単位」のインクリメント。この値は常に正の値でなければなりません。</target>
        </trans-unit>
        <trans-unit id="2dd42dc8f0100ef88f1c09f4b716e6faae9b9104" translate="yes" xml:space="preserve">
          <source>The &quot;viewport&quot; or &quot;porthole&quot; through which you see the underlying information.</source>
          <target state="translated">その下にある情報を見るための「ビューポート」または「舷窓」。</target>
        </trans-unit>
        <trans-unit id="7abc451b2b8a02dae8147b6816d130c87349c8a6" translate="yes" xml:space="preserve">
          <source>The &quot;viewport&quot; or &quot;porthole&quot; through which you see the underlying information. When you scroll, what moves is the viewport. It is like peering through a camera's viewfinder. Moving the viewfinder upwards brings new things into view at the top of the picture and loses things that were at the bottom.</source>
          <target state="translated">基本的な情報を見るための「ビューポート」または「舷窓」。スクロールしたときに動くのがビューポートです。カメラのファインダーを覗くようなものです。ファインダーを上に移動させると、写真の上部に新しいものが現れ、下部にあったものが失われます。</target>
        </trans-unit>
        <trans-unit id="87b168e22e7b27d60154fb06e4407a5bdb2ba403" translate="yes" xml:space="preserve">
          <source>The &quot;virtual key&quot; constants defined in &lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt; can be used to specify the key code. For example:</source>
          <target state="translated">&lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt; で定義されている「仮想キー」定数を使用して、キーコードを指定できます。例えば：</target>
        </trans-unit>
        <trans-unit id="42fa43eba557cdf1cf26626adea323a5cf291383" translate="yes" xml:space="preserve">
          <source>The &quot;virtual key&quot; constants defined in java.awt.event.KeyEvent can be used to specify the key code. For example:</source>
          <target state="translated">java.awt.event.KeyEventで定義されている「仮想キー」定数を使用して、キーコードを指定することができます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="542ceac497d888731f108f54134d87b43e6e1e87" translate="yes" xml:space="preserve">
          <source>The &quot;void&quot; tag denotes a &lt;em&gt;statement&lt;/em&gt; which will be executed, but whose result will not be used as an argument to the enclosing method.</source>
          <target state="translated">「void」タグは実行される&lt;em&gt;ステートメント&lt;/em&gt;を示しますが、その結果は囲んでいるメソッドへの引数として使用されません。</target>
        </trans-unit>
        <trans-unit id="5413cb19ad08d0c83ec83a25d94198413a07db11" translate="yes" xml:space="preserve">
          <source>The &quot;widgets&quot; examples shown earlier shows how reduction combines with other operations to replace for loops with bulk operations. If &lt;code&gt;widgets&lt;/code&gt; is a collection of &lt;code&gt;Widget&lt;/code&gt; objects, which have a &lt;code&gt;getWeight&lt;/code&gt; method, we can find the heaviest widget with:</source>
          <target state="translated">前に示した「ウィジェット」の例は、リダクションを他の操作と組み合わせてforループを一括操作に置き換える方法を示しています。 &lt;code&gt;widgets&lt;/code&gt; が &lt;code&gt;getWeight&lt;/code&gt; メソッドを持つ &lt;code&gt;Widget&lt;/code&gt; オブジェクトのコレクションである場合、次のようにして最も重いウィジェットを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="486adbc041dbce3b82611e2ccb70488eb3e94270" translate="yes" xml:space="preserve">
          <source>The &quot;widgets&quot; examples shown earlier shows how reduction combines with other operations to replace for-loops with bulk operations. If &lt;code&gt;widgets&lt;/code&gt; is a collection of &lt;code&gt;Widget&lt;/code&gt; objects, which have a &lt;code&gt;getWeight&lt;/code&gt; method, we can find the heaviest widget with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef7ea7bc7a6cc52453a4c0762bb67aa32d26c11" translate="yes" xml:space="preserve">
          <source>The &quot;window activated&quot; event type.</source>
          <target state="translated">ウィンドウが起動した」イベントタイプ。</target>
        </trans-unit>
        <trans-unit id="226427283659032d179c570438fad9fad0c92457" translate="yes" xml:space="preserve">
          <source>The &quot;window activated&quot; event type. This event indicates that keystrokes and mouse clicks are directed towards this internal frame.</source>
          <target state="translated">イベントタイプは「ウィンドウがアクティブになった」です。このイベントは、キーストロークやマウスクリックがこの内部フレームに向けられていることを示します。</target>
        </trans-unit>
        <trans-unit id="cf5285f557eaed961f7b089388434d1897fd8d74" translate="yes" xml:space="preserve">
          <source>The &quot;window closed&quot; event.</source>
          <target state="translated">ウィンドウが閉じた」イベント。</target>
        </trans-unit>
        <trans-unit id="0bd85abd28b81dd4e92f480fe6c4ffc04de9ae6a" translate="yes" xml:space="preserve">
          <source>The &quot;window closed&quot; event. This event is delivered after the internal frame has been closed as the result of a call to the &lt;code&gt;setClosed&lt;/code&gt; or &lt;code&gt;dispose&lt;/code&gt; method.</source>
          <target state="translated">「ウィンドウが閉じました」イベント。このイベントは、 &lt;code&gt;setClosed&lt;/code&gt; または &lt;code&gt;dispose&lt;/code&gt; メソッドの呼び出しの結果として内部フレームが閉じられた後に配信されます。</target>
        </trans-unit>
        <trans-unit id="b02d8a38a7c497198054b98777fad1cda5bdb9c6" translate="yes" xml:space="preserve">
          <source>The &quot;window deactivated&quot; event type.</source>
          <target state="translated">イベントタイプは「ウィンドウが非アクティブになった」です。</target>
        </trans-unit>
        <trans-unit id="f2fafc768c0f5cb1c334413348114360e836dc93" translate="yes" xml:space="preserve">
          <source>The &quot;window deactivated&quot; event type. This event indicates that keystrokes and mouse clicks are no longer directed to the internal frame.</source>
          <target state="translated">イベントタイプの &quot;window deactivated &quot;です。このイベントは、キーストロークやマウスクリックが内部フレームに向けられなくなったことを示します。</target>
        </trans-unit>
        <trans-unit id="408bbda837c71da78c76f55730fb50a043774050" translate="yes" xml:space="preserve">
          <source>The &quot;window deiconified&quot; event type.</source>
          <target state="translated">イベントタイプ「ウィンドウデアイコン化」。</target>
        </trans-unit>
        <trans-unit id="52d2752f94b96c2494b60b46964d812e8cf6ba71" translate="yes" xml:space="preserve">
          <source>The &quot;window deiconified&quot; event type. This event indicates that the internal frame has been restored to its normal size.</source>
          <target state="translated">イベントタイプ「ウィンドウのデアイコン化」。このイベントは、内部フレームが通常のサイズに復元されたことを示します。</target>
        </trans-unit>
        <trans-unit id="fdc7911a6dbe466488c70a583cd5451f62271756" translate="yes" xml:space="preserve">
          <source>The &quot;window iconified&quot; event.</source>
          <target state="translated">窓をアイコン化した」イベント。</target>
        </trans-unit>
        <trans-unit id="cd6ed970523e6e0baed21a463189d7232d4321f4" translate="yes" xml:space="preserve">
          <source>The &quot;window iconified&quot; event. This event indicates that the internal frame was shrunk down to a small icon.</source>
          <target state="translated">&quot;ウィンドウがアイコン化された &quot;イベントです。このイベントは、内部フレームが縮小されて小さなアイコン化されたことを示します。</target>
        </trans-unit>
        <trans-unit id="ada4fcc113683f29a8a6153c0c2bf59ae79df5ab" translate="yes" xml:space="preserve">
          <source>The &quot;window is closing&quot; event.</source>
          <target state="translated">ウィンドウが閉じています」イベント。</target>
        </trans-unit>
        <trans-unit id="77cf40f7c82e26ae7cb58dc8fb5f7a97d962f1db" translate="yes" xml:space="preserve">
          <source>The &quot;window is closing&quot; event. This event is delivered when the user attempts to close the internal frame, such as by clicking the internal frame's close button, or when a program attempts to close the internal frame by invoking the &lt;code&gt;setClosed&lt;/code&gt; method.</source>
          <target state="translated">「ウィンドウが閉じています」イベント。このイベントは、ユーザーが内部フレームの閉じるボタンをクリックするなどして内部フレームを &lt;code&gt;setClosed&lt;/code&gt; うとしたとき、またはプログラムがsetClosedメソッドを呼び出して内部フレームを閉じようとしたときに配信されます。</target>
        </trans-unit>
        <trans-unit id="2f70a4fb74eeed3e23a4b7140075a7623a0646be" translate="yes" xml:space="preserve">
          <source>The &quot;window is closing&quot; event. This event is delivered when the user attempts to close the window from the window's system menu. If the program does not explicitly hide or dispose the window while processing this event, the window close operation will be cancelled.</source>
          <target state="translated">&quot;window is closing&quot; イベント。このイベントは、ユーザがウィンドウのシステムメニューからウィンドウを閉じようとしたときに配信されます。このイベントを処理している間に、プログラムが明示的にウィンドウを非表示にしたり廃棄したりしなければ、ウィンドウの閉じ操作はキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="35b9ff91928feda93eb2bbd321ab8c5974e6a7a3" translate="yes" xml:space="preserve">
          <source>The &quot;window opened&quot; event.</source>
          <target state="translated">ウィンドウが開いた」イベント。</target>
        </trans-unit>
        <trans-unit id="812e0c735e5c1dec67159170fe8e4124fe33b906" translate="yes" xml:space="preserve">
          <source>The &quot;window opened&quot; event. This event is delivered only the first time the internal frame is made visible.</source>
          <target state="translated">ウィンドウが開いた」イベントです。このイベントは、内部フレームが最初に可視化されたときにのみ配信されます。</target>
        </trans-unit>
        <trans-unit id="dd51a31f2fb3c35a53c40953e7b137610fa538ba" translate="yes" xml:space="preserve">
          <source>The '*' and '-' may only be specified in the final segment of a path and must be the only character in that segment. Any query or fragment components of the url are ignored when constructing URLPermissions.</source>
          <target state="translated">'*' と '-' はパスの最後のセグメントでのみ指定でき、そのセグメント内の唯一の文字でなければなりません。URLPermissions を作成する際には、URL のクエリーやフラグメントの構成要素は無視されます。</target>
        </trans-unit>
        <trans-unit id="c3dd2c4f47449a4544b3de80cb83d745f1361cb0" translate="yes" xml:space="preserve">
          <source>The '*' character refers to all resources in the same &quot;directory&quot; - in other words all resources with the same number of path components, and which only differ in the final path component, represented by the '*'.</source>
          <target state="translated">文字「*」は、同じ「ディレクトリ」内のすべてのリソースを指します。言い換えれば、パス構成要素の数が同じで、「*」で表される最終的なパス構成要素だけが異なるすべてのリソースを指します。</target>
        </trans-unit>
        <trans-unit id="ee55a8c7a709fc6f43cb4acb7ee8a297e4b37cda" translate="yes" xml:space="preserve">
          <source>The '-' character refers to all resources recursively below the preceding path (e.g. http://www.example.com/a/b/c/d/e.html matches this example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1a4b786fce275a14542316145f1ffc6265c6f2" translate="yes" xml:space="preserve">
          <source>The '-' character refers to all resources recursively below the preceding path (eg. http://www.oracle.com/a/b/c/d/e.html matches this example).</source>
          <target state="translated">文字「-」は、前のパスの下にあるすべてのリソースを再帰的に参照します (例:http://www.oracle.com/a/b/c/d/e.html はこの例にマッチします)。</target>
        </trans-unit>
        <trans-unit id="a61c324d5664eb3125e624c3e41910d6b8260976" translate="yes" xml:space="preserve">
          <source>The '-' is a literal (non-editable) character, and is skipped.</source>
          <target state="translated">はリテラル(編集不可能な)文字であり、スキップされます。</target>
        </trans-unit>
        <trans-unit id="b9075ee33f640272d08ecfd74afcc317aa1feeee" translate="yes" xml:space="preserve">
          <source>The '_' character represents any single character; the '%' character represents any sequence of zero or more characters.</source>
          <target state="translated">文字は任意の 1 文字を表し、「%」文字は 0 文字以上の連続した文字を表します。</target>
        </trans-unit>
        <trans-unit id="2d3d7549dcf0d83ed68ff060f89f99b12e4561e6" translate="yes" xml:space="preserve">
          <source>The (possibly empty) subsequence captured by the group during the previous match, or &lt;code&gt;null&lt;/code&gt; if the group failed to match part of the input</source>
          <target state="translated">前の一致時にグループによってキャプチャされた（場合によっては空の）サブシーケンス、またはグループが入力の一部と一致しなかった場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f610b577e0d0c1aa68c7de09df91b0c3b1792629" translate="yes" xml:space="preserve">
          <source>The (possibly empty) subsequence captured by the named group during the previous match, or &lt;code&gt;null&lt;/code&gt; if the group failed to match part of the input</source>
          <target state="translated">前の一致時に指定されたグループによってキャプチャされた（場合によっては空の）サブシーケンス、またはグループが入力の一部と一致しなかった場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b452ff3f7cd68722baf21b3005843847575b9ad" translate="yes" xml:space="preserve">
          <source>The (possibly empty) subsequence matched by the previous match, in string form</source>
          <target state="translated">前のマッチでマッチした(空の可能性のある)部分シーケンスを文字列形式で表します。</target>
        </trans-unit>
        <trans-unit id="8341c85cf0c06e0be2262709eb4535bb0c5658b6" translate="yes" xml:space="preserve">
          <source>The (potentially null) Object whose notifyAll() method will be called immediately after the Runnable.run() method has returned or thrown an exception or after the event was disposed.</source>
          <target state="translated">Runnable.run()メソッドが返された直後、または例外がスローされた直後、またはイベントが破棄された後に、notifyAll()メソッドが呼び出される(潜在的にnull)オブジェクト。</target>
        </trans-unit>
        <trans-unit id="03e6e28175ae241b91674d1ee7e9f6b8e22a39c6" translate="yes" xml:space="preserve">
          <source>The (user-accessible) request headers that this request was (or will be) sent with.</source>
          <target state="translated">このリクエストが送られた (または送られる予定の)(ユーザーがアクセス可能な)リクエストヘッダ。</target>
        </trans-unit>
        <trans-unit id="db8c98f744455c4ea33c3652417a8d4d6babb38a" translate="yes" xml:space="preserve">
          <source>The +90 direction was chosen because simple finishing on the long edge is the same edge whether portrait or landscape.</source>
          <target state="translated">長辺のシンプルな仕上げは、縦でも横でも同じ辺になるので、+90の方向にしました。</target>
        </trans-unit>
        <trans-unit id="dc75f82aa609831b4e45d1280715e643c1e08fde" translate="yes" xml:space="preserve">
          <source>The 14 bit clock sequence value is constructed from the clock sequence field of this UUID. The clock sequence field is used to guarantee temporal uniqueness in a time-based UUID.</source>
          <target state="translated">14ビットのクロックシーケンス値は、このUUIDのクロックシーケンスフィールドから構築される。クロックシーケンスフィールドは、時間ベースのUUIDにおける時間的一意性を保証するために使用される。</target>
        </trans-unit>
        <trans-unit id="9244f80a9a7b954470832171ad15b5298b7c6027" translate="yes" xml:space="preserve">
          <source>The 48 bit node value is constructed from the node field of this UUID. This field is intended to hold the IEEE 802 address of the machine that generated this UUID to guarantee spatial uniqueness.</source>
          <target state="translated">48 ビットのノード値は、この UUID のノードフィールドから構築される。このフィールドは、空間的一意性を保証するために、このUUIDを生成したマシンのIEEE 802アドレスを保持することを意図している。</target>
        </trans-unit>
        <trans-unit id="cf62656bdd2342ac213b17c11186efa9fdef0697" translate="yes" xml:space="preserve">
          <source>The 60 bit timestamp value is constructed from the time_low, time_mid, and time_hi fields of this &lt;code&gt;UUID&lt;/code&gt;. The resulting timestamp is measured in 100-nanosecond units since midnight, October 15, 1582 UTC.</source>
          <target state="translated">60ビットのタイムスタンプ値は、この &lt;code&gt;UUID&lt;/code&gt; のtime_low、time_mid、およびtime_hiフィールドから構成されます。結果のタイムスタンプは、UTC 1582年10月15日の午前0時から100ナノ秒単位で測定されます。</target>
        </trans-unit>
        <trans-unit id="dece32256f323cee7e134d3087e518f2b7ddcafa" translate="yes" xml:space="preserve">
          <source>The 8 primitive Java types (&lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;
      long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;) are mapped to the corresponding boxed types from &lt;code&gt;java.lang&lt;/code&gt;, namely &lt;code&gt;
      Boolean&lt;/code&gt;, &lt;code&gt;Byte&lt;/code&gt;, etc. The Open Type is the corresponding &lt;code&gt;SimpleType&lt;/code&gt;. Thus, &lt;em&gt;opentype(&lt;/em&gt;&lt;code&gt;
      long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;SimpleType.LONG&lt;/code&gt;, and &lt;em&gt;opendata(&lt;/em&gt;&lt;code&gt;long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;
      java.lang.Long&lt;/code&gt;.</source>
          <target state="translated">8つのプリミティブJavaタイプ（ &lt;code&gt;boolean&lt;/code&gt; 、 &lt;code&gt;byte&lt;/code&gt; 、 &lt;code&gt;short&lt;/code&gt; 、 &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt; long&lt;/code&gt; 、 &lt;code&gt;float&lt;/code&gt; 、 &lt;code&gt;double&lt;/code&gt; 、 &lt;code&gt;char&lt;/code&gt; ）は、 &lt;code&gt;java.lang&lt;/code&gt; からの対応するボックス化されたタイプ、つまり &lt;code&gt; Boolean&lt;/code&gt; 、 &lt;code&gt;Byte&lt;/code&gt; などにマップされます &lt;code&gt;SimpleType&lt;/code&gt; は対応するSimpleTypeです。したがって、&lt;em&gt;opentype（&lt;/em&gt; &lt;code&gt; long&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;は &lt;code&gt;SimpleType.LONG&lt;/code&gt; であり、&lt;em&gt;opendata（&lt;/em&gt; &lt;code&gt;long&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;は &lt;code&gt; java.lang.Long&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5148f442500cb2e7c77d69481afbed4f322b7043" translate="yes" xml:space="preserve">
          <source>The 8 primitive Java types (&lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;) are mapped to the corresponding boxed types from &lt;code&gt;java.lang&lt;/code&gt;, namely &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Byte&lt;/code&gt;, etc. The Open Type is the corresponding &lt;code&gt;SimpleType&lt;/code&gt;. Thus, &lt;em&gt;opentype(&lt;/em&gt;&lt;code&gt;long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;SimpleType.LONG&lt;/code&gt;, and &lt;em&gt;opendata(&lt;/em&gt;&lt;code&gt;long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;java.lang.Long&lt;/code&gt;.</source>
          <target state="translated">8つのプリミティブJavaタイプ（ &lt;code&gt;boolean&lt;/code&gt; 、 &lt;code&gt;byte&lt;/code&gt; 、 &lt;code&gt;short&lt;/code&gt; 、 &lt;code&gt;int&lt;/code&gt; 、 &lt;code&gt;long&lt;/code&gt; 、 &lt;code&gt;float&lt;/code&gt; 、 &lt;code&gt;double&lt;/code&gt; 、 &lt;code&gt;char&lt;/code&gt; ）は、 &lt;code&gt;java.lang&lt;/code&gt; から対応するボックス化されたタイプ、つまり &lt;code&gt;Boolean&lt;/code&gt; 、 &lt;code&gt;Byte&lt;/code&gt; などにマップされます &lt;code&gt;SimpleType&lt;/code&gt; は対応するSimpleTypeです。したがって、&lt;em&gt;opentype（&lt;/em&gt; &lt;code&gt;long&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;は &lt;code&gt;SimpleType.LONG&lt;/code&gt; であり、&lt;em&gt;opendata（&lt;/em&gt; &lt;code&gt;long&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;は &lt;code&gt;java.lang.Long&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a6b61faaf0fa15e874e7aa6036cb8bbc437bc046" translate="yes" xml:space="preserve">
          <source>The 800-90Ar1 specification allows for a variety of DRBG implementation choices, such as:</source>
          <target state="translated">800-90Ar1仕様では、以下のような様々なDRBG実装の選択が可能です。</target>
        </trans-unit>
        <trans-unit id="9e58fb199b65ff39292af5a70bd8d9990914fb0a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#%3Cinit%3E()&quot;&gt;&lt;code&gt;ObjID()&lt;/code&gt;&lt;/a&gt; constructor can be used to generate a unique object identifier. Such an &lt;code&gt;ObjID&lt;/code&gt; is unique over time with respect to the host it is generated on. The &lt;a href=&quot;#%3Cinit%3E(int)&quot;&gt;&lt;code&gt;ObjID(int)&lt;/code&gt;&lt;/a&gt; constructor can be used to create a &quot;well-known&quot; object identifier. The scope of a well-known &lt;code&gt;ObjID&lt;/code&gt; depends on the RMI runtime it is exported to.</source>
          <target state="translated">&lt;a href=&quot;#%3Cinit%3E()&quot;&gt; &lt;code&gt;ObjID()&lt;/code&gt; &lt;/a&gt;コンストラクタは、一意のオブジェクト識別子を生成するために使用することができます。このような &lt;code&gt;ObjID&lt;/code&gt; は、それが生成されるホストに関して、時間の経過とともに一意になります。&lt;a href=&quot;#%3Cinit%3E(int)&quot;&gt; &lt;code&gt;ObjID(int)&lt;/code&gt; &lt;/a&gt;コンストラクタは、「既知の」オブジェクト識別子を作成するために使用することができます。よく知られている &lt;code&gt;ObjID&lt;/code&gt; のスコープは、エクスポート先のRMIランタイムによって異なります。</target>
        </trans-unit>
        <trans-unit id="b4e3f86cc07101d3686dcbfa5a8ccabe930104d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#%3Cinit%3E()&quot;&gt;&lt;code&gt;UID()&lt;/code&gt;&lt;/a&gt; constructor can be used to generate an identifier that is unique over time with respect to the host it is generated on. The &lt;a href=&quot;#%3Cinit%3E(short)&quot;&gt;&lt;code&gt;UID(short)&lt;/code&gt;&lt;/a&gt; constructor can be used to create one of 2&lt;sup&gt;16&lt;/sup&gt; well-known identifiers.</source>
          <target state="translated">&lt;a href=&quot;#%3Cinit%3E()&quot;&gt; &lt;code&gt;UID()&lt;/code&gt; &lt;/a&gt;コンストラクタは、それが生成されるホストに対して時間にわたって一意である識別子を生成するために使用することができます。&lt;a href=&quot;#%3Cinit%3E(short)&quot;&gt; &lt;code&gt;UID(short)&lt;/code&gt; &lt;/a&gt;コンストラクタは、2のいずれかを作成するために使用することができる&lt;sup&gt;16&lt;/sup&gt;周知の識別子。</target>
        </trans-unit>
        <trans-unit id="682311c69459705b6611d2116dd3a23ba37087d4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;single-argument constructor&lt;/a&gt; requires any illegal characters in its argument to be quoted and preserves any escaped octets and</source>
          <target state="translated">&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;単一引数のコンストラクタは、&lt;/a&gt;任意のエスケープオクテットを引用しなければ、引数のいずれかの不正な文字を必要とし、保持し、</target>
        </trans-unit>
        <trans-unit id="0d511e9cdd40f514d5106cf2ef66216314a29c9d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)&quot;&gt;multi-argument constructors&lt;/a&gt; quote illegal characters as required by the components in which they appear. The percent character (&lt;code&gt;'%'&lt;/code&gt;) is always quoted by these constructors. Any</source>
          <target state="translated">&lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)&quot;&gt;多引数のコンストラクタは&lt;/a&gt;、彼らが表示されているコンポーネントで必要とされる不正な文字を引用します。パーセント文字（ &lt;code&gt;'%'&lt;/code&gt; ）は、これらのコンストラクターによって常に引用符で囲まれます。どれか</target>
        </trans-unit>
        <trans-unit id="12a6cdf59f396e7ede4167477fe96500e2984545" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#HOUR_OF_DAY&quot;&gt;&lt;code&gt;HOUR_OF_DAY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#HOUR&quot;&gt;&lt;code&gt;HOUR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#AM_PM&quot;&gt;&lt;code&gt;AM_PM&lt;/code&gt;&lt;/a&gt; fields are handled independently and the &lt;a href=&quot;#time_resolution&quot;&gt;the resolution rule for the time of day&lt;/a&gt; is applied. Clearing one of the fields doesn't reset the hour of day value of this &lt;code&gt;Calendar&lt;/code&gt;. Use &lt;a href=&quot;#set(int,int)&quot;&gt;&lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt;&lt;/a&gt; to reset the hour value.</source>
          <target state="translated">&lt;a href=&quot;#HOUR_OF_DAY&quot;&gt; &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#HOUR&quot;&gt; &lt;code&gt;HOUR&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#AM_PM&quot;&gt; &lt;code&gt;AM_PM&lt;/code&gt; &lt;/a&gt;フィールドは、独立して処理され、&lt;a href=&quot;#time_resolution&quot;&gt;その日の時間分解能のルールが&lt;/a&gt;適用されます。フィールドの1つをクリアしても、この &lt;code&gt;Calendar&lt;/code&gt; 時間帯の値はリセットされません。&lt;a href=&quot;#set(int,int)&quot;&gt; &lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt; &lt;/a&gt;を使用して、時間の値をリセットします。</target>
        </trans-unit>
        <trans-unit id="1d3797757117e40a3e66974929944ba9d9f97b3d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_LOCAL_DATE&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ISO_LOCAL_DATE&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f15ef683ec00288c71d3577bc42eb084e27f694" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_LOCAL_DATE_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ISO_LOCAL_DATE_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f808d49e1dbf56a3c4398227f6b1e2bf8250f43f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_LOCAL_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ISO_LOCAL_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0c109d69bd2a94cc8708a4b92a21150d220aabd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56ea47af67300951fe2f7673e1da328222067840" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt; where the instant is converted from &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;UTC&lt;/code&gt; offset. Parsing is case insensitive.</source>
          <target state="translated">&lt;a href=&quot;#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;瞬間をから変換され&lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt; &lt;/a&gt;使用して &lt;code&gt;UTC&lt;/code&gt; オフセットを。解析では大文字と小文字は区別されません。</target>
        </trans-unit>
        <trans-unit id="6462b3412eddb31db3350f0bec08a7567c11bfe2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#SHOWA&quot;&gt;&lt;code&gt;SHOWA&lt;/code&gt;&lt;/a&gt; era that contains 1970-01-01 (ISO calendar system) has the value 1. Later eras are numbered from 2 (&lt;a href=&quot;#HEISEI&quot;&gt;&lt;code&gt;HEISEI&lt;/code&gt;&lt;/a&gt;). Earlier eras are numbered 0 (&lt;a href=&quot;#TAISHO&quot;&gt;&lt;code&gt;TAISHO&lt;/code&gt;&lt;/a&gt;), -1 (&lt;a href=&quot;#MEIJI&quot;&gt;&lt;code&gt;MEIJI&lt;/code&gt;&lt;/a&gt;)).</source>
          <target state="translated">&lt;a href=&quot;#SHOWA&quot;&gt; &lt;code&gt;SHOWA&lt;/code&gt; &lt;/a&gt;1970-01-01（ISOカレンダーシステム）が含ま時代は1.後の時代には2（から番号付けされた値がある&lt;a href=&quot;#HEISEI&quot;&gt; &lt;code&gt;HEISEI&lt;/code&gt; &lt;/a&gt;）。初期の時代は0（&lt;a href=&quot;#TAISHO&quot;&gt; &lt;code&gt;TAISHO&lt;/code&gt; &lt;/a&gt;）、-1（&lt;a href=&quot;#MEIJI&quot;&gt; &lt;code&gt;MEIJI&lt;/code&gt; &lt;/a&gt;））と番号が付けられています。</target>
        </trans-unit>
        <trans-unit id="1218f5e11c1b0fbb96868c89e68629f6c6f31a8b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#SHOW_HIDDEN_FRAMES&quot;&gt;&lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt;&lt;/a&gt; option can also be used to show all reflection frames and it will also show other hidden frames that are implementation-specific.</source>
          <target state="translated">&lt;a href=&quot;#SHOW_HIDDEN_FRAMES&quot;&gt; &lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt; の&lt;/a&gt;オプションは、すべての反射フレームを表示するために使用することができ、それはまた、実装固有です他の隠されたフレームが表示されます。</target>
        </trans-unit>
        <trans-unit id="c3d51ccaaa6c7526c0b9fe4eaa230ff7631e6c8e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; methods that do not otherwise have a value to return are specified to return the network channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; を&lt;/a&gt;戻り値を返さないものな方法は、それらが呼び出される時にネットワークチャネルを返すように指定されています。これにより、メソッド呼び出しを連鎖させることができます。このインターフェイスの実装では、実装クラスでのメソッド呼び出しを連鎖できるように、戻り値の型を特殊化する必要があります。</target>
        </trans-unit>
        <trans-unit id="7b41cd732268ff9ba7ada77977453a57f1631483" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method determines whether the access request indicated by a specified permission should be granted or denied. A sample call appears below. In this example, &lt;code&gt;checkPermission&lt;/code&gt; will determine whether or not to grant &quot;read&quot; access to the file named &quot;testFile&quot; in the &quot;/temp&quot; directory.</source>
          <target state="translated">&lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;メソッドは、指定したアクセス権によって示されるアクセス要求が許可または拒否すべきかどうかを判断します。サンプル呼び出しを以下に示します。この例では、 &lt;code&gt;checkPermission&lt;/code&gt; は、「/ temp」ディレクトリにある「testFile」という名前のファイルへの「読み取り」アクセスを許可するかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="fc21b8772df57e16a19a32de1251db03dac1b038" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method synchronizes on the selector and its selected-key set in the same order as in a selection operation.</source>
          <target state="translated">&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法は、セレクタと選択動作と同じ順序で、その選択されたキーセットに同期させます。</target>
        </trans-unit>
        <trans-unit id="0c452ba0c8c3a01125dbd7aa512ab0bb6267b570" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#defineModulesWithOneLoader(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;defineModulesWithOneLoader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#defineModulesWithManyLoaders(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;defineModulesWithManyLoaders&lt;/code&gt;&lt;/a&gt; methods provide convenient ways to create a module layer where all modules are mapped to a single class loader or where each module is mapped to its own class loader. The &lt;a href=&quot;#defineModules(java.lang.module.Configuration,java.util.function.Function)&quot;&gt;&lt;code&gt;defineModules&lt;/code&gt;&lt;/a&gt; method is for more advanced cases where modules are mapped to custom class loaders by means of a function specified to the method. Each of these methods has an instance and static variant. The instance methods create a layer with the receiver as the parent layer. The static methods are for more advanced cases where there can be more than one parent layer or where a &lt;a href=&quot;modulelayer.controller&quot;&gt;&lt;code&gt;Controller&lt;/code&gt;&lt;/a&gt; is needed to control modules in the layer</source>
          <target state="translated">&lt;a href=&quot;#defineModulesWithOneLoader(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;defineModulesWithOneLoader&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#defineModulesWithManyLoaders(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;defineModulesWithManyLoaders&lt;/code&gt; &lt;/a&gt;方法は、すべてのモジュールは、単一のクラスローダにマッピングされるか、または各モジュールがそれ自身のクラスローダにマッピングされるモジュール層を作成するための便利な方法を提供します。&lt;a href=&quot;#defineModules(java.lang.module.Configuration,java.util.function.Function)&quot;&gt; &lt;code&gt;defineModules&lt;/code&gt; の&lt;/a&gt;方法は、モジュールがメソッドに指定された関数によってカスタムクラスローダーにマッピングされ、より高度なケースのためのものです。これらの各メソッドには、インスタンスと静的バリアントがあります。インスタンスメソッドは、レシーバーを親レイヤーとしてレイヤーを作成します。静的メソッドは、複数の親レイヤーが存在する可能性がある、またはレイヤー内のモジュールを制御するために&lt;a href=&quot;modulelayer.controller&quot;&gt; &lt;code&gt;Controller&lt;/code&gt; &lt;/a&gt;が必要な、より高度なケース向けです。</target>
        </trans-unit>
        <trans-unit id="8b028e1e9572581fd279877b772e9ad7c8a10ac0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#element()&quot;&gt;&lt;code&gt;element()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#peek()&quot;&gt;&lt;code&gt;peek()&lt;/code&gt;&lt;/a&gt; methods return, but do not remove, the head of the queue.</source>
          <target state="translated">&lt;a href=&quot;#element()&quot;&gt; &lt;code&gt;element()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#peek()&quot;&gt; &lt;code&gt;peek()&lt;/code&gt; &lt;/a&gt;メソッドは、キューの先頭を返しますが、削除しないでください。</target>
        </trans-unit>
        <trans-unit id="59fe8ba28696ef3fa84a45d40a68ce4ad796fed3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#fillInStackTrace()&quot;&gt;&lt;code&gt;fillInStackTrace()&lt;/code&gt;&lt;/a&gt; method is called to initialize the stack trace data in the newly created throwable.</source>
          <target state="translated">&lt;a href=&quot;#fillInStackTrace()&quot;&gt; &lt;code&gt;fillInStackTrace()&lt;/code&gt; &lt;/a&gt;メソッドは、新しく作成されたスロー可能オブジェクト内のスタックトレースデータを初期化するために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="65031d3365faff2695a182538e3b2421b65176cb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#find()&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; method scans the input sequence looking for the next subsequence that matches the pattern.</source>
          <target state="translated">&lt;a href=&quot;#find()&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;方法は、パターンに一致する次のサブシーケンスを探して入力シーケンスをスキャンします。</target>
        </trans-unit>
        <trans-unit id="485afabc350f71204e8f4d536d46cdaf239de32b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#find(java.lang.String)&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#findAll()&quot;&gt;&lt;code&gt;findAll&lt;/code&gt;&lt;/a&gt; methods defined here can fail for several reasons. These include I/O errors, errors detected parsing a module descriptor (&lt;code&gt;module-info.class&lt;/code&gt;), or in the case of &lt;code&gt;ModuleFinder&lt;/code&gt; returned by &lt;a href=&quot;#of(java.nio.file.Path...)&quot;&gt;&lt;code&gt;ModuleFinder.of&lt;/code&gt;&lt;/a&gt;, that two or more modules with the same name are found in a directory. When an error is detected then these methods throw &lt;a href=&quot;findexception&quot;&gt;&lt;code&gt;FindException&lt;/code&gt;&lt;/a&gt; with an appropriate &lt;a href=&quot;../throwable#getCause()&quot;&gt;&lt;code&gt;cause&lt;/code&gt;&lt;/a&gt;. The behavior of a &lt;code&gt;ModuleFinder&lt;/code&gt; after a &lt;code&gt;FindException&lt;/code&gt; is thrown is undefined. For example, invoking &lt;code&gt;find&lt;/code&gt; after an exception is thrown may or may not scan the same modules that lead to the exception. It is recommended that a module finder be discarded after an exception is thrown.</source>
          <target state="translated">&lt;a href=&quot;#find(java.lang.String)&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#findAll()&quot;&gt; &lt;code&gt;findAll&lt;/code&gt; の&lt;/a&gt;ここで定義された方法は、いくつかの理由で失敗することができます。これには、I / Oエラー、モジュール記述子（ &lt;code&gt;module-info.class&lt;/code&gt; ）の解析で検出されたエラー、または &lt;code&gt;ModuleFinder&lt;/code&gt; .ofによって返された&lt;a href=&quot;#of(java.nio.file.Path...)&quot;&gt; &lt;code&gt;ModuleFinder.of&lt;/code&gt; &lt;/a&gt;場合、同じ名前の2つ以上のモジュールがディレクトリにあることが含まれます。エラーが検出されると、これらのメソッドは適切な&lt;a href=&quot;../throwable#getCause()&quot;&gt; &lt;code&gt;cause&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;findexception&quot;&gt; &lt;code&gt;FindException&lt;/code&gt; &lt;/a&gt;をスローします。行動 &lt;code&gt;ModuleFinder&lt;/code&gt; 後 &lt;code&gt;FindException&lt;/code&gt; は未定義でスローされます。たとえば、 &lt;code&gt;find&lt;/code&gt; を呼び出す例外がスローされた後、例外につながる同じモジュールをスキャンする場合としない場合があります。例外がスローされた後は、モジュールファインダーを破棄することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a0be6cc5b803049be30b6393527056072d664d40" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#findInLine(java.lang.String)&quot;&gt;&lt;code&gt;findInLine()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#findWithinHorizon(java.lang.String,int)&quot;&gt;&lt;code&gt;findWithinHorizon()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#skip(java.util.regex.Pattern)&quot;&gt;&lt;code&gt;skip()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#findAll(java.util.regex.Pattern)&quot;&gt;&lt;code&gt;findAll()&lt;/code&gt;&lt;/a&gt; methods operate independently of the delimiter pattern. These methods will attempt to match the specified pattern with no regard to delimiters in the input and thus can be used in special circumstances where delimiters are not relevant. These methods may block waiting for more input.</source>
          <target state="translated">&lt;a href=&quot;#findInLine(java.lang.String)&quot;&gt; &lt;code&gt;findInLine()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#findWithinHorizon(java.lang.String,int)&quot;&gt; &lt;code&gt;findWithinHorizon()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#skip(java.util.regex.Pattern)&quot;&gt; &lt;code&gt;skip()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#findAll(java.util.regex.Pattern)&quot;&gt; &lt;code&gt;findAll()&lt;/code&gt; &lt;/a&gt;メソッドは、独立して、区切り文字パターンの動作。これらのメソッドは、入力の区切り文字に関係なく、指定されたパターンに一致しようとするため、区切り文字が関係しない特別な状況で使用できます。これらのメソッドは、追加の入力の待機をブロックする場合があります。</target>
        </trans-unit>
        <trans-unit id="76c75e1993d06be0c203f41c01f7c21dc08dea73" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#flags()&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentryflag&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; to indicate how entries are inherited and propagated</source>
          <target state="translated">&lt;a href=&quot;#flags()&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt;コンポーネントは、一連のある&lt;a href=&quot;aclentryflag&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt;エントリは継承され、伝播される方法を示すために、</target>
        </trans-unit>
        <trans-unit id="190f5e4e1c44c5bff240e5e10541bfc811769ca9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#floatdFlags&quot;&gt;default behavior&lt;/a&gt; when no flags are given is the same as for Float and Double.</source>
          <target state="translated">フラグが指定されていない場合の&lt;a href=&quot;#floatdFlags&quot;&gt;デフォルトの動作&lt;/a&gt;は、FloatおよびDoubleの場合と同じです。</target>
        </trans-unit>
        <trans-unit id="8440ae8a2e8c8cb5abe641e67dc8c2628fb82898" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#format(double,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt;&lt;code&gt;format(double, StringBuffer, FieldPosition)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#format(long,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt;&lt;code&gt;format(long, StringBuffer, FieldPosition)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#parse(java.lang.String,java.text.ParsePosition)&quot;&gt;&lt;code&gt;parse(String, ParsePosition)&lt;/code&gt;&lt;/a&gt; methods may throw &lt;code&gt;NullPointerException&lt;/code&gt;, if any of their parameter is &lt;code&gt;null&lt;/code&gt;. The subclass may provide its own implementation and specification about &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#format(double,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt; &lt;code&gt;format(double, StringBuffer, FieldPosition)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#format(long,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt; &lt;code&gt;format(long, StringBuffer, FieldPosition)&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;#parse(java.lang.String,java.text.ParsePosition)&quot;&gt; &lt;code&gt;parse(String, ParsePosition)&lt;/code&gt; &lt;/a&gt;メソッドがスローできる &lt;code&gt;NullPointerException&lt;/code&gt; がそれらのパラメータのいずれかがある場合、 &lt;code&gt;null&lt;/code&gt; 。サブクラスは、 &lt;code&gt;NullPointerException&lt;/code&gt; に関する独自の実装と仕様を提供する場合があります。</target>
        </trans-unit>
        <trans-unit id="6ddeb2913f2a55c19f8bf8bdbf4bdad02909664b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt;&lt;code&gt;format(Date, StringBuffer, FieldPosition)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#parse(java.lang.String,java.text.ParsePosition)&quot;&gt;&lt;code&gt;parse(String, ParsePosition)&lt;/code&gt;&lt;/a&gt; methods may throw &lt;code&gt;NullPointerException&lt;/code&gt;, if any of their parameter is &lt;code&gt;null&lt;/code&gt;. The subclass may provide its own implementation and specification about &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt; &lt;code&gt;format(Date, StringBuffer, FieldPosition)&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;#parse(java.lang.String,java.text.ParsePosition)&quot;&gt; &lt;code&gt;parse(String, ParsePosition)&lt;/code&gt; &lt;/a&gt;メソッドスローされることがあり &lt;code&gt;NullPointerException&lt;/code&gt; がそのパラメータのいずれかがある場合は、 &lt;code&gt;null&lt;/code&gt; を。サブクラスは、 &lt;code&gt;NullPointerException&lt;/code&gt; に関する独自の実装と仕様を提供する場合があります。</target>
        </trans-unit>
        <trans-unit id="c35eba97249f91e14a4aa2e210793e65c3843e54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#format(java.util.Locale,java.lang.String,java.lang.Object...)&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt; method for this object which has a locale argument does not change this value.</source>
          <target state="translated">ロケール引数を持つこのオブジェクトの&lt;a href=&quot;#format(java.util.Locale,java.lang.String,java.lang.Object...)&quot;&gt; &lt;code&gt;format&lt;/code&gt; &lt;/a&gt;メソッドは、この値を変更しません。</target>
        </trans-unit>
        <trans-unit id="2c86df6f2aba994c7c6bab473720f8bbcbca5a50" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getAnnotationsByType(java.lang.Class)&quot;&gt;&lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getDeclaredAnnotationsByType(java.lang.Class)&quot;&gt;&lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; methods support multiple annotations of the same type on an element. If the argument to either method is a repeatable annotation type (JLS 9.6), then the method will &quot;look through&quot; a container annotation (JLS 9.7), if present, and return any annotations inside the container. Container annotations may be generated at compile-time to wrap multiple annotations of the argument type.</source>
          <target state="translated">&lt;a href=&quot;#getAnnotationsByType(java.lang.Class)&quot;&gt; &lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#getDeclaredAnnotationsByType(java.lang.Class)&quot;&gt; &lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt;メソッドは、要素上で同じタイプの複数の注釈をサポートします。いずれかのメソッドの引数が繰り返し可能なアノテーションタイプ（JLS 9.6）の場合、メソッドはコンテナアノテーション（JLS 9.7）が存在する場合はそれを「調べ」、コンテナ内のアノテーションを返します。コンテナの注釈は、引数タイプの複数の注釈をラップするためにコンパイル時に生成される場合があります。</target>
        </trans-unit>
        <trans-unit id="26e3ecdc3c9cecc99f848c86e3623862cae408e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getAnnotationsByType(java.lang.Class)&quot;&gt;&lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getDeclaredAnnotationsByType(java.lang.Class)&quot;&gt;&lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; methods support multiple annotations of the same type on an element. If the argument to either method is a repeatable annotation type (JLS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se15/html/jls-9.html#jls-9.6&quot;&gt;9.6&lt;/a&gt;), then the method will &quot;look through&quot; a container annotation (JLS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se15/html/jls-9.html#jls-9.7&quot;&gt;9.7&lt;/a&gt;), if present, and return any annotations inside the container. Container annotations may be generated at compile-time to wrap multiple annotations of the argument type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdab4d7eeb982b1f24089281c7dfb71b45783340" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getAttributes()&quot;&gt;&lt;code&gt;getAttributes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getOperations()&quot;&gt;&lt;code&gt;getOperations()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getConstructors()&quot;&gt;&lt;code&gt;getConstructors()&lt;/code&gt;&lt;/a&gt; methods of the implementing class should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt;&lt;code&gt;MBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; respectively which implement the &lt;a href=&quot;openmbeanattributeinfo&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbeanoperationinfo&quot;&gt;&lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;openmbeanconstructorinfo&quot;&gt;&lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; interface respectively.</source>
          <target state="translated">実装クラスの&lt;a href=&quot;#getAttributes()&quot;&gt; &lt;code&gt;getAttributes()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getOperations()&quot;&gt; &lt;code&gt;getOperations()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#getConstructors()&quot;&gt; &lt;code&gt;getConstructors()&lt;/code&gt; &lt;/a&gt;メソッドは、実行時に、それぞれ&lt;a href=&quot;openmbeanattributeinfo&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;openmbeanoperationinfo&quot;&gt; &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; 、&lt;/a&gt;または&lt;a href=&quot;openmbeanconstructorinfo&quot;&gt; &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; &lt;/a&gt;インターフェイスを実装する&lt;a href=&quot;../mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; 、&lt;/a&gt;または&lt;a href=&quot;../mbeanconstructorinfo&quot;&gt; &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; の&lt;/a&gt;サブクラスのインスタンスの配列を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="72faf261c7a536f2c59a574937656ff7b51fe043" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getBody()&quot;&gt;&lt;code&gt;getBody()&lt;/code&gt;&lt;/a&gt; method returns a &lt;a href=&quot;../../../../java.base/java/util/concurrent/completionstage&quot;&gt;&lt;code&gt;CompletionStage&lt;/code&gt;&lt;/a&gt;&amp;lt;&lt;code&gt;T&lt;/code&gt;&amp;gt; that provides the response body object. The &lt;code&gt;CompletionStage&lt;/code&gt; must be obtainable at any time. When it completes depends on the nature of type &lt;code&gt;T&lt;/code&gt;. In many cases, when &lt;code&gt;T&lt;/code&gt; represents the entire body after being consumed then the &lt;code&gt;CompletionStage&lt;/code&gt; completes after the body has been consumed. If &lt;code&gt;T&lt;/code&gt; is a streaming type, such as &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;, then it completes before the body has been read, because the calling code uses the &lt;code&gt;InputStream&lt;/code&gt; to consume the data.</source>
          <target state="translated">&lt;a href=&quot;#getBody()&quot;&gt; &lt;code&gt;getBody()&lt;/code&gt; &lt;/a&gt;メソッドの戻り&lt;a href=&quot;../../../../java.base/java/util/concurrent/completionstage&quot;&gt; &lt;code&gt;CompletionStage&lt;/code&gt; &lt;/a&gt; &amp;lt; &lt;code&gt;T&lt;/code&gt; &amp;gt;レスポンスボディオブジェクトを提供します。 &lt;code&gt;CompletionStage&lt;/code&gt; はいつでも入手可能でなければなりません。いつ完了するかは、タイプ &lt;code&gt;T&lt;/code&gt; の性質によって異なります。多くの場合、 &lt;code&gt;T&lt;/code&gt; が消費された後の全身を表す場合、 &lt;code&gt;CompletionStage&lt;/code&gt; は体が消費された後に完了します。 &lt;code&gt;T&lt;/code&gt; が&lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;などのストリーミングタイプの場合、呼び出し元のコードは &lt;code&gt;InputStream&lt;/code&gt; を使用してデータを消費するため、本文が読み取られる前に完了します。</target>
        </trans-unit>
        <trans-unit id="2e1291a76ec559b2d29b8cd475884a4633cf2f6f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getBody()&quot;&gt;&lt;code&gt;getBody()&lt;/code&gt;&lt;/a&gt; method returns a &lt;a href=&quot;../../../../java.base/java/util/concurrent/completionstage&quot;&gt;&lt;code&gt;CompletionStage&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&lt;/code&gt; that provides the response body object. The &lt;code&gt;CompletionStage&lt;/code&gt; must be obtainable at any time. When it completes depends on the nature of type &lt;code&gt;T&lt;/code&gt;. In many cases, when &lt;code&gt;T&lt;/code&gt; represents the entire body after being consumed then the &lt;code&gt;CompletionStage&lt;/code&gt; completes after the body has been consumed. If &lt;code&gt;T&lt;/code&gt; is a streaming type, such as &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;, then it completes before the body has been read, because the calling code uses the &lt;code&gt;InputStream&lt;/code&gt; to consume the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32435269bba763b6eed91c0fa1607a52b35430fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getCalendar()&quot;&gt;&lt;code&gt;getCalendar()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getNumberFormat()&quot;&gt;&lt;code&gt;getNumberFormat()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getTimeZone()&quot;&gt;&lt;code&gt;getTimeZone()&lt;/code&gt;&lt;/a&gt; methods may return &lt;code&gt;null&lt;/code&gt;, if the respective values of this instance is set to &lt;code&gt;null&lt;/code&gt; through the corresponding setter methods. For Example: &lt;a href=&quot;#getTimeZone()&quot;&gt;&lt;code&gt;getTimeZone()&lt;/code&gt;&lt;/a&gt; may return &lt;code&gt;null&lt;/code&gt;, if the &lt;code&gt;TimeZone&lt;/code&gt; value of this instance is set as &lt;a href=&quot;#setTimeZone(java.util.TimeZone)&quot;&gt;&lt;code&gt;setTimeZone(null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#getCalendar()&quot;&gt; &lt;code&gt;getCalendar()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getNumberFormat()&quot;&gt; &lt;code&gt;getNumberFormat()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#getTimeZone()&quot;&gt; &lt;code&gt;getTimeZone()&lt;/code&gt; &lt;/a&gt;メソッドが戻ってもよい &lt;code&gt;null&lt;/code&gt; このインスタンスのそれぞれの値に設定されている場合、 &lt;code&gt;null&lt;/code&gt; 対応するセッターメソッドを介し。例：このインスタンスの &lt;code&gt;TimeZone&lt;/code&gt; 値が&lt;a href=&quot;#setTimeZone(java.util.TimeZone)&quot;&gt; &lt;code&gt;setTimeZone(null)&lt;/code&gt; &lt;/a&gt;として設定されている場合、&lt;a href=&quot;#getTimeZone()&quot;&gt; &lt;code&gt;getTimeZone()&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;null&lt;/code&gt; を返す場合があります。</target>
        </trans-unit>
        <trans-unit id="6d548ec1adba7df814c35c56a9d94e05c3e1227d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getDeclaringClass()&quot;&gt;&lt;code&gt;getDeclaringClass()&lt;/code&gt;&lt;/a&gt; method may be unsupported as determined by the &lt;a href=&quot;stackwalker.option&quot;&gt;stack walking options&lt;/a&gt; of a &lt;a href=&quot;stackwalker&quot;&gt;stack walker&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#getDeclaringClass()&quot;&gt; &lt;code&gt;getDeclaringClass()&lt;/code&gt; &lt;/a&gt;によって決定されるような方法は、サポートされていないかもしれ&lt;a href=&quot;stackwalker.option&quot;&gt;スタック歩行オプション&lt;/a&gt;の&lt;a href=&quot;stackwalker&quot;&gt;スタックウォーカー&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d4c01e514a6c723b1c356309d3d13365f6f6cf37" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getFileStores()&quot;&gt;&lt;code&gt;getFileStores&lt;/code&gt;&lt;/a&gt; method returns an iterator over the underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;file-stores&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#getFileStores()&quot;&gt; &lt;code&gt;getFileStores&lt;/code&gt; の&lt;/a&gt;方法は、基礎の反復子を返し&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;file-stores&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e2fd79ed77ea552ff89f8d8ead155a3581da1522" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getIterator(javax.swing.text.html.HTML.Tag)&quot;&gt;&lt;code&gt;getIterator(HTML.Tag t)&lt;/code&gt;&lt;/a&gt; method can also be used for finding all occurrences of the specified HTML tag in the document.</source>
          <target state="translated">&lt;a href=&quot;#getIterator(javax.swing.text.html.HTML.Tag)&quot;&gt; &lt;code&gt;getIterator(HTML.Tag t)&lt;/code&gt; は&lt;/a&gt;この方法はまた、文書で指定されたHTMLタグのすべての出現を見つけるために使用することができます。</target>
        </trans-unit>
        <trans-unit id="3300fd87f6f8a6538e519485e93d458bc5394918" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getOwner()&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods may be used to read or update the owner of the file.</source>
          <target state="translated">&lt;a href=&quot;#getOwner()&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; メソッド&lt;/a&gt;または&lt;a href=&quot;#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;方法は、読み取りまたはファイルの所有者を更新するために使用されてもよいです。</target>
        </trans-unit>
        <trans-unit id="64901b8451e1c8852e7089d807ed5f8258270d8e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPath(java.lang.String,java.lang.String...)&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method converts a system dependent &lt;em&gt;path string&lt;/em&gt;, returning a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; object that may be used to locate and access a file.</source>
          <target state="translated">&lt;a href=&quot;#getPath(java.lang.String,java.lang.String...)&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;方法は、システムに依存する変換&lt;em&gt;パス文字列を&lt;/em&gt;返す、&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;ファイルを見つけてアクセスするために使用することができるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="8fd2d9f74ec9cdead2e0184fbf49aa9ddf9115b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPathMatcher(java.lang.String)&quot;&gt;&lt;code&gt;getPathMatcher&lt;/code&gt;&lt;/a&gt; method is used to create a &lt;a href=&quot;pathmatcher&quot;&gt;&lt;code&gt;PathMatcher&lt;/code&gt;&lt;/a&gt; that performs match operations on paths.</source>
          <target state="translated">&lt;a href=&quot;#getPathMatcher(java.lang.String)&quot;&gt; &lt;code&gt;getPathMatcher&lt;/code&gt; &lt;/a&gt;方法を作成するために使用され&lt;a href=&quot;pathmatcher&quot;&gt; &lt;code&gt;PathMatcher&lt;/code&gt; &lt;/a&gt;実行がパス上の操作と一致していることを。</target>
        </trans-unit>
        <trans-unit id="a560f4cd636efba36278b039e9aa6637d4fa976d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPeerCertificates()&quot;&gt;&lt;code&gt;getPeerCertificates()&lt;/code&gt;&lt;/a&gt; method that returns an array of &lt;code&gt;java.security.cert.Certificate&lt;/code&gt; should be used instead.</source>
          <target state="translated">&lt;a href=&quot;#getPeerCertificates()&quot;&gt; &lt;code&gt;getPeerCertificates()&lt;/code&gt; &lt;/a&gt;の配列を返すメソッド &lt;code&gt;java.security.cert.Certificate&lt;/code&gt; 代わりに使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="313bda01207414193392bffc5273876e5116943a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPlatformClassLoader()&quot;&gt;&lt;code&gt;platform class loader&lt;/code&gt;&lt;/a&gt; may delegate to the application class loader but the application class loader is not its ancestor. When invoked on the platform class loader, this method will not find packages defined to the application class loader.</source>
          <target state="translated">&lt;a href=&quot;#getPlatformClassLoader()&quot;&gt; &lt;code&gt;platform class loader&lt;/code&gt; &lt;/a&gt;アプリケーションクラスローダに委任することができるが、アプリケーションのクラスローダは、その祖先ではありません。プラットフォームクラスローダーで呼び出された場合、このメソッドはアプリケーションクラスローダーに定義されたパッケージを検索しません。</target>
        </trans-unit>
        <trans-unit id="0c93939323354c73ed8f0956cf1175a9c81572a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPlatformClassLoader()&quot;&gt;&lt;code&gt;platform class loader&lt;/code&gt;&lt;/a&gt; may delegate to the application class loader. In other words, packages in modules defined to the application class loader may be visible to the platform class loader. On the other hand, the application class loader is not its ancestor and hence when invoked on the platform class loader, this method will not return any packages defined to the application class loader.</source>
          <target state="translated">&lt;a href=&quot;#getPlatformClassLoader()&quot;&gt; &lt;code&gt;platform class loader&lt;/code&gt; &lt;/a&gt;アプリケーションクラスローダに委任することができます。つまり、アプリケーションクラスローダーに定義されたモジュール内のパッケージは、プラットフォームクラスローダーに表示される場合があります。一方、アプリケーションクラスローダーはその祖先ではないため、プラットフォームクラスローダーで呼び出された場合、このメソッドはアプリケーションクラスローダーに定義されたパッケージを返しません。</target>
        </trans-unit>
        <trans-unit id="457ebe76737264b01c1e1c27299d64cf99dbc43d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPlatformManagementInterfaces()&quot;&gt;&lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt;&lt;/a&gt; method returns all management interfaces supported in the Java virtual machine including the standard management interfaces listed in the tables below as well as the management interfaces extended by the JDK implementation.</source>
          <target state="translated">&lt;a href=&quot;#getPlatformManagementInterfaces()&quot;&gt; &lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンでサポートされているすべての管理インターフェースを返します。これには、以下の表にリストされている標準の管理インターフェースと、JDK実装によって拡張された管理インターフェースが含まれます。</target>
        </trans-unit>
        <trans-unit id="84b83e16e7d300b2d7773bc228f8821d4fecf3d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getRawUserInfo()&quot;&gt;&lt;code&gt;getRawUserInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getRawPath()&quot;&gt;&lt;code&gt;getRawPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getRawQuery()&quot;&gt;&lt;code&gt;getRawQuery&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getRawFragment()&quot;&gt;&lt;code&gt;getRawFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getRawAuthority()&quot;&gt;&lt;code&gt;getRawAuthority&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#getRawSchemeSpecificPart()&quot;&gt;&lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; methods return the values of their corresponding components in raw form, without interpreting any escaped octets. The strings returned by these methods may contain both escaped octets and</source>
          <target state="translated">&lt;a href=&quot;#getRawUserInfo()&quot;&gt; &lt;code&gt;getRawUserInfo&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getRawPath()&quot;&gt; &lt;code&gt;getRawPath&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getRawQuery()&quot;&gt; &lt;code&gt;getRawQuery&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getRawFragment()&quot;&gt; &lt;code&gt;getRawFragment&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getRawAuthority()&quot;&gt; &lt;code&gt;getRawAuthority&lt;/code&gt; &lt;/a&gt;、及び&lt;a href=&quot;#getRawSchemeSpecificPart()&quot;&gt; &lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt; の&lt;/a&gt;方法は、任意のエスケープオクテットを解釈せずに、そのままの形式でそれらの対応する成分の値を返します。これらのメソッドによって返される文字列には、エスケープされたオクテットと</target>
        </trans-unit>
        <trans-unit id="891cbbb7b678ed269448de3333f3c927fe5fa40f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getRemaining()&quot;&gt;remaining byte count&lt;/a&gt; will be reduced by the number of consumed input bytes. If the &lt;a href=&quot;#setInput(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;setInput(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method was called to provide a buffer for input, the input buffer's position will be advanced the number of consumed bytes.</source>
          <target state="translated">&lt;a href=&quot;#getRemaining()&quot;&gt;残りのバイト数は&lt;/a&gt;、消費入力バイト数によって削減されます。場合&lt;a href=&quot;#setInput(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;setInput(ByteBuffer)&lt;/code&gt; &lt;/a&gt;メソッドは、入力のためのバッファを提供するために呼ばれた、入力バッファの位置は、消費されたバイト数を前進します。</target>
        </trans-unit>
        <trans-unit id="71a5ae33e22c851a1c1a637a5ed40b081c469403" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getRevocationChecker()&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathBuilder&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">&lt;a href=&quot;#getRevocationChecker()&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt;メソッドは、アプリケーションにより使用される追加のアルゴリズム固有のパラメータとオプションを指定することを可能に &lt;code&gt;CertPathBuilder&lt;/code&gt; 証明書の失効ステータスをチェックするときに。これは、PKIXアルゴリズムでどのように使用されるかを示す例です。</target>
        </trans-unit>
        <trans-unit id="6225f57b6a8a1feec5ebc1ed8607b650f0217212" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getRevocationChecker()&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathValidator&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">&lt;a href=&quot;#getRevocationChecker()&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt;メソッドは、アプリケーションにより使用される追加のアルゴリズム固有のパラメータとオプションを指定することを可能に &lt;code&gt;CertPathValidator&lt;/code&gt; 証明書の失効ステータスをチェックするときに。これは、PKIXアルゴリズムでどのように使用されるかを示す例です。</target>
        </trans-unit>
        <trans-unit id="8330d802646a04e518219a971d7d2f79724a3ffd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getSignature()&quot;&gt;&lt;code&gt;getSignature()&lt;/code&gt;&lt;/a&gt; method should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt; which implements the &lt;a href=&quot;openmbeanparameterinfo&quot;&gt;&lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt;&lt;/a&gt; interface (typically &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;#getSignature()&quot;&gt; &lt;code&gt;getSignature()&lt;/code&gt; &lt;/a&gt;メソッドは、実行時のサブクラスのインスタンスの配列を返す必要があり&lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt;実装&lt;a href=&quot;openmbeanparameterinfo&quot;&gt; &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; の&lt;/a&gt;インタフェース（通常&lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; を&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="31af394073090130fd1f8beb5c75278aebe2c90d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getSourceRegion(javax.imageio.ImageReadParam,int,int)&quot;&gt;&lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt;&lt;/a&gt; method may be used if only source clipping is desired.</source>
          <target state="translated">ソースクリッピングのみが必要な場合は、&lt;a href=&quot;#getSourceRegion(javax.imageio.ImageReadParam,int,int)&quot;&gt; &lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt; &lt;/a&gt;メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="6826382276a67d54297a06127ee3b75d9f038626" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getSuperclass()&quot;&gt;direct superclass&lt;/a&gt; of a record class is &lt;code&gt;java.lang.Record&lt;/code&gt;. A record class has (possibly zero) record components, that is, &lt;a href=&quot;#getRecordComponents()&quot;&gt;&lt;code&gt;getRecordComponents()&lt;/code&gt;&lt;/a&gt; returns a non-null value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d43fd9e2a48582721d6f9affffd5098ee4bec9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getUsage()&quot;&gt;&lt;code&gt;getUsage()&lt;/code&gt;&lt;/a&gt; method provides an estimate of the current usage of a memory pool. For a garbage-collected memory pool, the amount of used memory includes the memory occupied by all objects in the pool including both &lt;em&gt;reachable&lt;/em&gt; and &lt;em&gt;unreachable&lt;/em&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;#getUsage()&quot;&gt; &lt;code&gt;getUsage()&lt;/code&gt; &lt;/a&gt;メソッドは、メモリ・プールの現在の使用量の推定値を提供します。ガベージコレクションされたメモリプールの場合、使用されるメモリの量には、&lt;em&gt;到達可能な&lt;/em&gt;オブジェクトと&lt;em&gt;到達不可能な&lt;/em&gt;オブジェクトの両方を含む、プール内のすべてのオブジェクトが占有するメモリが含まれます。</target>
        </trans-unit>
        <trans-unit id="559aadec9e879fc10fa12147be2c7e895971e5af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getUserInfo()&quot;&gt;&lt;code&gt;getUserInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getPath()&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getQuery()&quot;&gt;&lt;code&gt;getQuery&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getFragment()&quot;&gt;&lt;code&gt;getFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getAuthority()&quot;&gt;&lt;code&gt;getAuthority&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#getSchemeSpecificPart()&quot;&gt;&lt;code&gt;getSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; methods decode any escaped octets in their corresponding components. The strings returned by these methods may contain both</source>
          <target state="translated">&lt;a href=&quot;#getUserInfo()&quot;&gt; &lt;code&gt;getUserInfo&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getPath()&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getQuery()&quot;&gt; &lt;code&gt;getQuery&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getFragment()&quot;&gt; &lt;code&gt;getFragment&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#getAuthority()&quot;&gt; &lt;code&gt;getAuthority&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#getSchemeSpecificPart()&quot;&gt; &lt;code&gt;getSchemeSpecificPart&lt;/code&gt; の&lt;/a&gt;方法は、それらの対応する構成要素の任意のエスケープオクテットを復号します。これらのメソッドによって返される文字列には、両方が含まれる場合があります</target>
        </trans-unit>
        <trans-unit id="c1ecc682c394d5429ead1bc5e6b032e53a1e3cfd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getUserPrincipalLookupService()&quot;&gt;&lt;code&gt;getUserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt;&lt;code&gt;UserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; to lookup users or groups by name.</source>
          <target state="translated">&lt;a href=&quot;#getUserPrincipalLookupService()&quot;&gt; &lt;code&gt;getUserPrincipalLookupService&lt;/code&gt; の&lt;/a&gt;方法は返し&lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt; &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; &lt;/a&gt;名前でユーザーまたはグループを検索するために。</target>
        </trans-unit>
        <trans-unit id="745b9cdeea817364e334364a39d0a45c736ab00e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isCollectionUsageThresholdSupported()&quot;&gt;&lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if this functionality is supported.</source>
          <target state="translated">&lt;a href=&quot;#isCollectionUsageThresholdSupported()&quot;&gt; &lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、この機能がサポートされているかどうかを決定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="90fec33b491d33702594f93509a72af9d3f5cb90" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isProxyClass(java.lang.Class)&quot;&gt;&lt;code&gt;Proxy.isProxyClass&lt;/code&gt;&lt;/a&gt; method can be used to determine if a given class is a proxy class.</source>
          <target state="translated">&lt;a href=&quot;#isProxyClass(java.lang.Class)&quot;&gt; &lt;code&gt;Proxy.isProxyClass&lt;/code&gt; の&lt;/a&gt;方法は、所与のクラスはプロキシクラスであるかどうかを決定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="2c598e99d45cbbe9a04f38fa8dc91096cbd3a7d8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isThreadContentionMonitoringSupported()&quot;&gt;&lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports thread contention monitoring. The thread contention monitoring is disabled by default. The &lt;a href=&quot;#setThreadContentionMonitoringEnabled(boolean)&quot;&gt;&lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt;&lt;/a&gt; method can be used to enable thread contention monitoring.</source>
          <target state="translated">&lt;a href=&quot;#isThreadContentionMonitoringSupported()&quot;&gt; &lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンがスレッドコンテンション監視をサポートしているかどうかを決定するために使用することができます。スレッド競合の監視はデフォルトで無効になっています。&lt;a href=&quot;#setThreadContentionMonitoringEnabled(boolean)&quot;&gt; &lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt; &lt;/a&gt;メソッドは、スレッドコンテンション監視を可能にするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="7b9631e9f6d40e6b620e784137534f813361a172" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isThreadCpuTimeSupported()&quot;&gt;&lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for any thread. The &lt;a href=&quot;#isCurrentThreadCpuTimeSupported()&quot;&gt;&lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for the current thread. A Java virtual machine implementation that supports CPU time measurement for any thread will also support that for the current thread.</source>
          <target state="translated">&lt;a href=&quot;#isThreadCpuTimeSupported()&quot;&gt; &lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンのサポートは、任意のスレッドのCPU時間を測定するかどうかを決定するために使用することができます。&lt;a href=&quot;#isCurrentThreadCpuTimeSupported()&quot;&gt; &lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンのサポートは、現在のスレッドのCPU時間を測定するかどうかを決定するために使用することができます。任意のスレッドのCPU時間測定をサポートするJava仮想マシンの実装は、現在のスレッドのCPU時間測定もサポートします。</target>
        </trans-unit>
        <trans-unit id="07a942a3ea7a2470fc40b97213df775f8393b88e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#join(java.net.InetAddress,java.net.NetworkInterface)&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt;&lt;/a&gt; method is used to join a group and receive all multicast datagrams sent to the group. A channel may join several multicast groups and may join the same group on several &lt;a href=&quot;../../net/networkinterface&quot;&gt;&lt;code&gt;interfaces&lt;/code&gt;&lt;/a&gt;. Membership is dropped by invoking the &lt;a href=&quot;membershipkey#drop()&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method on the returned &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt;. If the underlying platform supports source filtering then the &lt;a href=&quot;membershipkey#block(java.net.InetAddress)&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;membershipkey#unblock(java.net.InetAddress)&quot;&gt;&lt;code&gt;unblock&lt;/code&gt;&lt;/a&gt; methods can be used to block or unblock multicast datagrams from particular source addresses.</source>
          <target state="translated">&lt;a href=&quot;#join(java.net.InetAddress,java.net.NetworkInterface)&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt; &lt;/a&gt;メソッドは、グループに参加し、グループに送信されたすべてのマルチキャストデータグラムを受信するために使用されます。チャネルは、複数のマルチキャストグループに参加する場合があり、複数の&lt;a href=&quot;../../net/networkinterface&quot;&gt; &lt;code&gt;interfaces&lt;/code&gt; &lt;/a&gt;同じグループに参加する場合があります。返された&lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;membershipkey#drop()&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、メンバーシップが削除されます。下層のプラットフォームサポート源がフィルタリング場合、&lt;a href=&quot;membershipkey#block(java.net.InetAddress)&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;membershipkey#unblock(java.net.InetAddress)&quot;&gt; &lt;code&gt;unblock&lt;/code&gt; &lt;/a&gt;方法は、特定の送信元アドレスからのブロックまたはブロック解除マルチキャストデータグラムを使用することができます。</target>
        </trans-unit>
        <trans-unit id="9227e6048eb60c8fc84d7128ee8ee2b101cf46af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#join(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress)&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt;&lt;/a&gt; method is used to begin receiving datagrams sent to a group whose source address matches a given source address. This method throws &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; if the underlying platform does not support source filtering. Membership is &lt;em&gt;cumulative&lt;/em&gt; and this method may be invoked again with the same group and interface to allow receiving datagrams from other source addresses. The method returns a &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt; that represents membership to receive datagrams from the given source address. Invoking the key's &lt;a href=&quot;membershipkey#drop()&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method drops membership so that datagrams from the source address can no longer be received.</source>
          <target state="translated">&lt;a href=&quot;#join(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress)&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt; &lt;/a&gt;方法は、その元アドレス指定された送信元アドレスと一致するグループに送信されたデータグラムの受信を開始するために使用されます。基盤となるプラットフォームがソースフィルタリングをサポートしてい&lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;場合、このメソッドはUnsupportedOperationExceptionをスローします。メンバーシップは&lt;em&gt;累積的で&lt;/em&gt;あり、このメソッドを同じグループとインターフェイスで再度呼び出して、他の送信元アドレスからデータグラムを受信できるようにすることができます。このメソッドは、指定された送信元アドレスからデータグラムを受信するための&lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; &lt;/a&gt;を表すMembershipKeyを返します。キーの&lt;a href=&quot;membershipkey#drop()&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、メンバーシップが削除され、送信元アドレスからのデータグラムを受信できなくなります。</target>
        </trans-unit>
        <trans-unit id="283c2ba216ecb30af2542116821ebfc3dd6848c1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#load(java.io.Reader)&quot;&gt;&lt;code&gt;load(Reader)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;#store(java.io.Writer,java.lang.String)&quot;&gt;&lt;code&gt;store(Writer, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties from and to a character based stream in a simple line-oriented format specified below. The &lt;a href=&quot;#load(java.io.InputStream)&quot;&gt;&lt;code&gt;load(InputStream)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;#store(java.io.OutputStream,java.lang.String)&quot;&gt;&lt;code&gt;store(OutputStream, String)&lt;/code&gt;&lt;/a&gt; methods work the same way as the load(Reader)/store(Writer, String) pair, except the input/output stream is encoded in ISO 8859-1 character encoding. Characters that cannot be directly represented in this encoding can be written using Unicode escapes as defined in section 3.3 of</source>
          <target state="translated">&lt;a href=&quot;#load(java.io.Reader)&quot;&gt; &lt;code&gt;load(Reader)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;#store(java.io.Writer,java.lang.String)&quot;&gt; &lt;code&gt;store(Writer, String)&lt;/code&gt; &lt;/a&gt;単純な行指向形式の文字ベースのストリームからとする方法ロードおよびストアのプロパティは、以下に指定しました。&lt;a href=&quot;#load(java.io.InputStream)&quot;&gt; &lt;code&gt;load(InputStream)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;#store(java.io.OutputStream,java.lang.String)&quot;&gt; &lt;code&gt;store(OutputStream, String)&lt;/code&gt; &lt;/a&gt;の方法は、入力/出力ストリームがISO 8859-1文字エンコーディングでエンコードされている以外は、負荷（リーダ）/ストア（ライター、String）を対と同じように動作します。このエンコーディングで直接表現できない文字は、のセクション3.3で定義されているUnicodeエスケープを使用して記述できます。</target>
        </trans-unit>
        <trans-unit id="6c64782820ca91ace54f1f86ea9f86492a8d8863" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#loadFromXML(java.io.InputStream)&quot;&gt;&lt;code&gt;loadFromXML(InputStream)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#storeToXML(java.io.OutputStream,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties in a simple XML format. By default the UTF-8 character encoding is used, however a specific encoding may be specified if required. Implementations are required to support UTF-8 and UTF-16 and may support other encodings. An XML properties document has the following DOCTYPE declaration:</source>
          <target state="translated">&lt;a href=&quot;#loadFromXML(java.io.InputStream)&quot;&gt; &lt;code&gt;loadFromXML(InputStream)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#storeToXML(java.io.OutputStream,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt; &lt;/a&gt;の単純なXML形式のメソッドのロードおよびストアのプロパティ。デフォルトではUTF-8文字エンコードが使用されますが、必要に応じて特定のエンコードを指定できます。UTF-8およびUTF-16をサポートするには実装が必要であり、他のエンコーディングをサポートする場合があります。XMLプロパティドキュメントには、次のDOCTYPE宣言があります。</target>
        </trans-unit>
        <trans-unit id="ff9a153b92e71fa09c965e8f74027cdf39942b60" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lock&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; used to synchronize operations on the returned &lt;code&gt;Reader&lt;/code&gt; is not specified.</source>
          <target state="translated">&lt;a href=&quot;#lock&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;が返さ上の同期操作に使用 &lt;code&gt;Reader&lt;/code&gt; が指定されていません。</target>
        </trans-unit>
        <trans-unit id="6ea5963a2b34831a1c71c2fbc0dd2b148d5c67d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lock&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; used to synchronize operations on the returned &lt;code&gt;Writer&lt;/code&gt; is not specified.</source>
          <target state="translated">&lt;a href=&quot;#lock&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;が返さで操作を同期させるために使用される &lt;code&gt;Writer&lt;/code&gt; 指定されていません。</target>
        </trans-unit>
        <trans-unit id="84550bbdc380964aefe4e00daea2a1ea69eda243" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lookingAt()&quot;&gt;&lt;code&gt;lookingAt&lt;/code&gt;&lt;/a&gt; method attempts to match the input sequence, starting at the beginning, against the pattern.</source>
          <target state="translated">&lt;a href=&quot;#lookingAt()&quot;&gt; &lt;code&gt;lookingAt&lt;/code&gt; &lt;/a&gt;入力シーケンスにマッチする方法を試み、パターンに対して、先頭から始まります。</target>
        </trans-unit>
        <trans-unit id="e15947d08b1cf61f32694c5aa54059625b82e3ba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt; for this &lt;code&gt;Lookup&lt;/code&gt; must include &lt;a href=&quot;#hasFullPrivilegeAccess()&quot;&gt;full privilege&lt;/a&gt; access. This level of access is needed to create &lt;code&gt;C&lt;/code&gt; in the module of the lookup class of this &lt;code&gt;Lookup&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c866a477b89a46ec489346a183a845bc204d84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt; for this lookup must include &lt;a href=&quot;#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt; access as default (package) members will be accessible to the class. The &lt;code&gt;PACKAGE&lt;/code&gt; lookup mode serves to authenticate that the lookup object was created by a caller in the runtime package (or derived from a lookup originally created by suitably privileged code to a target class in the runtime package).</source>
          <target state="translated">この&lt;a href=&quot;#lookupModes()&quot;&gt;ルックアップのルックアップモードに&lt;/a&gt;は、デフォルト（パッケージ）メンバーがクラスにアクセスできるため、&lt;a href=&quot;#PACKAGE&quot;&gt; &lt;code&gt;PACKAGE&lt;/code&gt; &lt;/a&gt;アクセスが含まれている必要があります。 &lt;code&gt;PACKAGE&lt;/code&gt; ルックアップモードは、参照オブジェクトは、ランタイムパッケージ（または元々ランタイムパッケージのターゲットクラスに好適特権コードによって作成されたルックアップに由来する）で発呼者によって作成されたことを認証するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="af8af1d74c30b23540127f0b0b432dad9af185a7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#matches()&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method attempts to match the entire input sequence against the pattern.</source>
          <target state="translated">&lt;a href=&quot;#matches()&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt;パターンに対する全入力配列と一致するメソッドの試みを。</target>
        </trans-unit>
        <trans-unit id="9cf613d99e0fc77707140b31310fa50f3b661bdc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#newWatchService()&quot;&gt;&lt;code&gt;newWatchService&lt;/code&gt;&lt;/a&gt; method creates a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt; that may be used to watch objects for changes and events.</source>
          <target state="translated">&lt;a href=&quot;#newWatchService()&quot;&gt; &lt;code&gt;newWatchService&lt;/code&gt; の&lt;/a&gt;方法は、作成&lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; &lt;/a&gt;の変更やイベントのためのオブジェクトを監視するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="0f2779d651def565116a29cb04d620dbba2f2dd2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#next()&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#hasNext()&quot;&gt;&lt;code&gt;hasNext()&lt;/code&gt;&lt;/a&gt; methods and their companion methods (such as &lt;a href=&quot;#nextInt()&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#hasNextInt()&quot;&gt;&lt;code&gt;hasNextInt()&lt;/code&gt;&lt;/a&gt;) first skip any input that matches the delimiter pattern, and then attempt to return the next token. Both &lt;code&gt;hasNext()&lt;/code&gt; and &lt;code&gt;next()&lt;/code&gt; methods may block waiting for further input. Whether a &lt;code&gt;hasNext()&lt;/code&gt; method blocks has no connection to whether or not its associated &lt;code&gt;next()&lt;/code&gt; method will block. The &lt;a href=&quot;#tokens()&quot;&gt;&lt;code&gt;tokens()&lt;/code&gt;&lt;/a&gt; method may also block waiting for input.</source>
          <target state="translated">&lt;a href=&quot;#next()&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#hasNext()&quot;&gt; &lt;code&gt;hasNext()&lt;/code&gt; &lt;/a&gt;メソッド、および（例えば、彼らのコンパニオンメソッド&lt;a href=&quot;#nextInt()&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#hasNextInt()&quot;&gt; &lt;code&gt;hasNextInt()&lt;/code&gt; &lt;/a&gt;最初のデリミタパターンに一致する入力をスキップし、次のトークンを返すようにしよう）。 &lt;code&gt;hasNext()&lt;/code&gt; メソッドと &lt;code&gt;next()&lt;/code&gt; メソッドの両方が、さらなる入力の待機をブロックする場合があります。かどうか &lt;code&gt;hasNext()&lt;/code&gt; メソッドブロックその関連するかどうかへの接続がありません &lt;code&gt;next()&lt;/code&gt; メソッドがブロックされます。&lt;a href=&quot;#tokens()&quot;&gt; &lt;code&gt;tokens()&lt;/code&gt; &lt;/a&gt;メソッドは、入力を待ってブロックしてもよいです。</target>
        </trans-unit>
        <trans-unit id="a4eabcb070201104bd4072f1fbef69e32c7ed568" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#of()&quot;&gt;&lt;code&gt;Map.of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ofEntries(java.util.Map.Entry...)&quot;&gt;&lt;code&gt;Map.ofEntries&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#copyOf(java.util.Map)&quot;&gt;&lt;code&gt;Map.copyOf&lt;/code&gt;&lt;/a&gt; static factory methods provide a convenient way to create unmodifiable maps. The &lt;code&gt;Map&lt;/code&gt; instances created by these methods have the following characteristics:</source>
          <target state="translated">&lt;a href=&quot;#of()&quot;&gt; &lt;code&gt;Map.of&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#ofEntries(java.util.Map.Entry...)&quot;&gt; &lt;code&gt;Map.ofEntries&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#copyOf(java.util.Map)&quot;&gt; &lt;code&gt;Map.copyOf&lt;/code&gt; &lt;/a&gt; staticファクトリメソッドは、変更不可能なマップを作成するための便利な方法を提供します。 &lt;code&gt;Map&lt;/code&gt; これらの方法で作成されたインスタンスは、次の特性があります。</target>
        </trans-unit>
        <trans-unit id="5a3652c966b080da38bf2f411dad00b6802884ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#of(E...)&quot;&gt;&lt;code&gt;List.of&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#copyOf(java.util.Collection)&quot;&gt;&lt;code&gt;List.copyOf&lt;/code&gt;&lt;/a&gt; static factory methods provide a convenient way to create unmodifiable lists. The &lt;code&gt;List&lt;/code&gt; instances created by these methods have the following characteristics:</source>
          <target state="translated">&lt;a href=&quot;#of(E...)&quot;&gt; &lt;code&gt;List.of&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#copyOf(java.util.Collection)&quot;&gt; &lt;code&gt;List.copyOf&lt;/code&gt; &lt;/a&gt; staticファクトリメソッドは、変更不可能なリストを作成するための便利な方法を提供します。 &lt;code&gt;List&lt;/code&gt; これらの方法で作成されたインスタンスは、次の特性があります。</target>
        </trans-unit>
        <trans-unit id="b75ebf0e3eb357a1a5138bef731809fcdcfbdf5c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#of(E...)&quot;&gt;&lt;code&gt;Set.of&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#copyOf(java.util.Collection)&quot;&gt;&lt;code&gt;Set.copyOf&lt;/code&gt;&lt;/a&gt; static factory methods provide a convenient way to create unmodifiable sets. The &lt;code&gt;Set&lt;/code&gt; instances created by these methods have the following characteristics:</source>
          <target state="translated">&lt;a href=&quot;#of(E...)&quot;&gt; &lt;code&gt;Set.of&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#copyOf(java.util.Collection)&quot;&gt; &lt;code&gt;Set.copyOf&lt;/code&gt; &lt;/a&gt;静的ファクトリメソッドは、変更不可能なセットを作成するための便利な方法を提供します。 &lt;code&gt;Set&lt;/code&gt; 、これらの方法によって作成されたインスタンスは、次の特性があります。</target>
        </trans-unit>
        <trans-unit id="fc4145739906a5fafcf27e7b758feb7e10fa3e1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#offer(E)&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt; method inserts an element if possible, otherwise returning &lt;code&gt;false&lt;/code&gt;. This differs from the &lt;a href=&quot;collection#add(E)&quot;&gt;&lt;code&gt;Collection.add&lt;/code&gt;&lt;/a&gt; method, which can fail to add an element only by throwing an unchecked exception. The &lt;code&gt;offer&lt;/code&gt; method is designed for use when failure is a normal, rather than exceptional occurrence, for example, in fixed-capacity (or &quot;bounded&quot;) queues.</source>
          <target state="translated">&lt;a href=&quot;#offer(E)&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt;可能であれば、方法はそれ以外の場合は戻って、要素を挿入 &lt;code&gt;false&lt;/code&gt; 。これは、チェックされていない例外をスローするだけで要素の追加に失敗する可能性がある&lt;a href=&quot;collection#add(E)&quot;&gt; &lt;code&gt;Collection.add&lt;/code&gt; &lt;/a&gt;メソッドとは異なります。 &lt;code&gt;offer&lt;/code&gt; 障害はむしろ例外発生より、正常である場合の方法は、固定容量（または「有界」）キューに、例えば、使用のために設計されています。</target>
        </trans-unit>
        <trans-unit id="c9f6349a4ae2d3a238eb3271977a5ff56ad4db25" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#permissions()&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentrypermission&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#permissions()&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;コンポーネントは、一連のある&lt;a href=&quot;aclentrypermission&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="404a185f9841c99d54d179b827ceceb997785ba3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#position(long)&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#truncate(long)&quot;&gt;&lt;code&gt;truncate&lt;/code&gt;&lt;/a&gt; methods which do not otherwise have a value to return are specified to return the channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">&lt;a href=&quot;#position(long)&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#truncate(long)&quot;&gt; &lt;code&gt;truncate&lt;/code&gt; &lt;/a&gt;戻り値を返さないものな方法は、それらが呼び出される時にチャンネルを返すように指定されています。これにより、メソッド呼び出しを連鎖させることができます。このインターフェイスの実装では、実装クラスでのメソッド呼び出しを連鎖できるように、戻り値の型を特殊化する必要があります。</target>
        </trans-unit>
        <trans-unit id="7901edc883e754854d8ae590ec6d7d61281b0f1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#principal()&quot;&gt;&lt;code&gt;principal&lt;/code&gt;&lt;/a&gt; component, sometimes called the &quot;who&quot; component, is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; corresponding to the identity that the entry grants or denies access</source>
          <target state="translated">&lt;a href=&quot;#principal()&quot;&gt; &lt;code&gt;principal&lt;/code&gt; &lt;/a&gt;時々 「A」成分と呼ばれるコンポーネントは、ある&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;アクセスを拒否エントリー許可こと又はアイデンティティに対応します</target>
        </trans-unit>
        <trans-unit id="0252e2b5ac28e835bd24e1eb9ad03a80bbc13d38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#read(java.io.InputStream,java.lang.Object)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method can be used to initialize the component from a &lt;code&gt;Reader&lt;/code&gt;. Note that if the content type is HTML, relative references (e.g. for things like images) can't be resolved unless the &amp;lt;base&amp;gt; tag is used or the &lt;em&gt;Base&lt;/em&gt; property on &lt;code&gt;HTMLDocument&lt;/code&gt; is set. In this case the current &lt;code&gt;EditorKit&lt;/code&gt; will be used, and the content type will be expected to be of this type.</source>
          <target state="translated">&lt;a href=&quot;#read(java.io.InputStream,java.lang.Object)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;方法は、からコンポーネントを初期化するために使用することができる &lt;code&gt;Reader&lt;/code&gt; 。コンテンツタイプがHTMLの場合、&amp;lt;base&amp;gt;タグを使用するか、 &lt;code&gt;HTMLDocument&lt;/code&gt; の&lt;em&gt;Base&lt;/em&gt;プロパティを設定しない限り、相対参照（画像など）を解決できないことに注意してください。この場合、現在の &lt;code&gt;EditorKit&lt;/code&gt; が使用され、コンテンツタイプはこのタイプであることが期待されます。</target>
        </trans-unit>
        <trans-unit id="c3c9ff5626e9554f693ad6ddf85f19c656c52ccb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#write(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods defined by this class allow a timeout to be specified when initiating a read or write operation. If the timeout elapses before an operation completes then the operation completes with the exception &lt;a href=&quot;interruptedbytimeoutexception&quot;&gt;&lt;code&gt;InterruptedByTimeoutException&lt;/code&gt;&lt;/a&gt;. A timeout may leave the channel, or the underlying connection, in an inconsistent state. Where the implementation cannot guarantee that bytes have not been read from the channel then it puts the channel into an implementation specific &lt;em&gt;error state&lt;/em&gt;. A subsequent attempt to initiate a &lt;code&gt;read&lt;/code&gt; operation causes an unspecified runtime exception to be thrown. Similarly if a &lt;code&gt;write&lt;/code&gt; operation times out and the implementation cannot guarantee bytes have not been written to the channel then further attempts to &lt;code&gt;write&lt;/code&gt; to the channel cause an unspecified runtime exception to be thrown. When a timeout elapses then the state of the &lt;a href=&quot;../bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, or the sequence of buffers, for the I/O operation is not defined. Buffers should be discarded or at least care must be taken to ensure that the buffers are not accessed while the channel remains open. All methods that accept timeout parameters treat values less than or equal to zero to mean that the I/O operation does not timeout.</source>
          <target state="translated">&lt;a href=&quot;#read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#write(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;、このクラスで定義されたメソッドは、読み取りまたは書き込み操作を開始するときのタイムアウトを指定することができます。操作が完了する前にタイムアウトが経過すると、操作は例外&lt;a href=&quot;interruptedbytimeoutexception&quot;&gt; &lt;code&gt;InterruptedByTimeoutException&lt;/code&gt; で&lt;/a&gt;完了します。タイムアウトにより、チャネルまたは基になる接続が不整合な状態のままになる場合があります。実装がバイトがチャネルから読み取られていないことを保証できない場合、実装はチャネルを実装固有の&lt;em&gt;エラー状態にし&lt;/em&gt;ます。その後、 &lt;code&gt;read&lt;/code&gt; 操作を開始しようとすると、不特定のランタイム例外がスローされます。同様に &lt;code&gt;write&lt;/code&gt; 場合操作がタイムアウトし、実装はバイトがチャネルに書き込まれていないことを保証できません。さらにチャネルに &lt;code&gt;write&lt;/code&gt; うとすると、不特定のランタイム例外がスローされます。タイムアウトが経過すると、I / O操作の&lt;a href=&quot;../bytebuffer&quot;&gt; &lt;code&gt;ByteBuffer&lt;/code&gt; &lt;/a&gt;の状態またはバッファのシーケンスは定義されません。バッファを破棄するか、チャネルが開いたままのときにバッファにアクセスしないように少なくとも注意する必要があります。タイムアウトパラメータを受け入れるすべてのメソッドは、ゼロ以下の値を処理して、I / O操作がタイムアウトしないことを意味します。</target>
        </trans-unit>
        <trans-unit id="1d9fe06809d0a55ee94fa7c5575ab00fb2cbf4e3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#readAttributes()&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method is used to read the file's attributes. The file &lt;a href=&quot;posixfileattributes#owner()&quot;&gt;&lt;code&gt;owner&lt;/code&gt;&lt;/a&gt; is represented by a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; that is the identity of the file owner for the purposes of access control. The &lt;a href=&quot;posixfileattributes#group()&quot;&gt;&lt;code&gt;group-owner&lt;/code&gt;&lt;/a&gt;, represented by a &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt;, is the identity of the group owner, where a group is an identity created for administrative purposes so as to determine the access rights for the members of the group.</source>
          <target state="translated">&lt;a href=&quot;#readAttributes()&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; の&lt;/a&gt;方法は、ファイルの属性を読み取るために使用されます。ファイル&lt;a href=&quot;posixfileattributes#owner()&quot;&gt; &lt;code&gt;owner&lt;/code&gt; &lt;/a&gt;は、アクセス制御の目的でファイル所有者のIDである&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;によって表されます。&lt;a href=&quot;posixfileattributes#group()&quot;&gt; &lt;code&gt;group-owner&lt;/code&gt; &lt;/a&gt;で表される、&lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; は&lt;/a&gt;、グループは、グループのメンバーのアクセス権を決定するために、管理目的のために作成されたアイデンティティであるグループの所有者のアイデンティティです。</target>
        </trans-unit>
        <trans-unit id="ef05e8d8630d24a4539bbca297c4ec8e95476f17" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#redirectErrorStream()&quot;&gt;&lt;code&gt;redirectErrorStream()&lt;/code&gt;&lt;/a&gt; of each ProcessBuilder applies to the respective process. If set to &lt;code&gt;true&lt;/code&gt;, the error stream is written to the same stream as standard output.</source>
          <target state="translated">各ProcessBuilderの&lt;a href=&quot;#redirectErrorStream()&quot;&gt; &lt;code&gt;redirectErrorStream()&lt;/code&gt; &lt;/a&gt;は、それぞれのプロセスに適用されます。 &lt;code&gt;true&lt;/code&gt; に設定すると、エラーストリームは標準出力と同じストリームに書き込まれます。</target>
        </trans-unit>
        <trans-unit id="d60d96790fcf12bd52c7ceb255ee2290d4d63d7d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#remove()&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#poll()&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; methods remove and return the head of the queue. Exactly which element is removed from the queue is a function of the queue's ordering policy, which differs from implementation to implementation. The &lt;code&gt;remove()&lt;/code&gt; and &lt;code&gt;poll()&lt;/code&gt; methods differ only in their behavior when the queue is empty: the &lt;code&gt;remove()&lt;/code&gt; method throws an exception, while the &lt;code&gt;poll()&lt;/code&gt; method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#remove()&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#poll()&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt;メソッドは、キューの先頭を削除して返します。正確にどの要素がキューから削除されるかは、実装ごとに異なるキューの順序付けポリシーの機能です。 &lt;code&gt;remove()&lt;/code&gt; と &lt;code&gt;poll()&lt;/code&gt; キューが空である場合の方法は、それらの動作のみが異なる： &lt;code&gt;remove()&lt;/code&gt; メソッドはしばらくの間、例外をスロー &lt;code&gt;poll()&lt;/code&gt; メソッドの戻り値 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b71740ad55dd486243123249a69711ae3adb45e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#removeEldestEntry(java.util.Map.Entry)&quot;&gt;&lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt;&lt;/a&gt; method may be overridden to impose a policy for removing stale mappings automatically when new mappings are added to the map.</source>
          <target state="translated">&lt;a href=&quot;#removeEldestEntry(java.util.Map.Entry)&quot;&gt; &lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt; &lt;/a&gt;メソッドは、新しいマッピングがマップに追加されたときに自動的に失効マッピングを除去するためのポリシーを課すことをオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="f388f89464ce1efc48db1ad1eb74d58994279c54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#select()&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#select(long)&quot;&gt;&lt;code&gt;select(long)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#selectNow()&quot;&gt;&lt;code&gt;selectNow()&lt;/code&gt;&lt;/a&gt; methods add the keys of channels ready to perform an operation to the selected-key set, or update the ready-operation set of keys already in the selected-key set.</source>
          <target state="translated">&lt;a href=&quot;#select()&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#select(long)&quot;&gt; &lt;code&gt;select(long)&lt;/code&gt; &lt;/a&gt;、及び&lt;a href=&quot;#selectNow()&quot;&gt; &lt;code&gt;selectNow()&lt;/code&gt; &lt;/a&gt;メソッドは、選択されたキーセットに操作を実行する準備ができて、または既に選択されたキーセットのキーのすぐ動作セットを更新するチャンネルのキーを追加します。</target>
        </trans-unit>
        <trans-unit id="3d9fe37bdba1bdbf40ca515feaaf9c3f126885ae" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#select(java.util.function.Consumer)&quot;&gt;&lt;code&gt;select(Consumer)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#select(java.util.function.Consumer,long)&quot;&gt;&lt;code&gt;select(Consumer, long)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#selectNow(java.util.function.Consumer)&quot;&gt;&lt;code&gt;selectNow(Consumer)&lt;/code&gt;&lt;/a&gt; methods perform an</source>
          <target state="translated">&lt;a href=&quot;#select(java.util.function.Consumer)&quot;&gt; &lt;code&gt;select(Consumer)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#select(java.util.function.Consumer,long)&quot;&gt; &lt;code&gt;select(Consumer, long)&lt;/code&gt; &lt;/a&gt;し、&lt;a href=&quot;#selectNow(java.util.function.Consumer)&quot;&gt; &lt;code&gt;selectNow(Consumer)&lt;/code&gt; &lt;/a&gt;の方法が実行します</target>
        </trans-unit>
        <trans-unit id="fc7a14c324b4c491d6e144c3f63588c2f48f7a71" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#setCalendar(java.util.Calendar)&quot;&gt;&lt;code&gt;setCalendar(Calendar)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setNumberFormat(java.text.NumberFormat)&quot;&gt;&lt;code&gt;setNumberFormat(NumberFormat)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#setTimeZone(java.util.TimeZone)&quot;&gt;&lt;code&gt;setTimeZone(TimeZone)&lt;/code&gt;&lt;/a&gt; methods do not throw &lt;code&gt;NullPointerException&lt;/code&gt; when their parameter is &lt;code&gt;null&lt;/code&gt;, but any subsequent operations on the same instance may throw &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#setCalendar(java.util.Calendar)&quot;&gt; &lt;code&gt;setCalendar(Calendar)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#setNumberFormat(java.text.NumberFormat)&quot;&gt; &lt;code&gt;setNumberFormat(NumberFormat)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#setTimeZone(java.util.TimeZone)&quot;&gt; &lt;code&gt;setTimeZone(TimeZone)&lt;/code&gt; &lt;/a&gt;メソッドがスローされません &lt;code&gt;NullPointerException&lt;/code&gt; が彼らのパラメータがあるときに &lt;code&gt;null&lt;/code&gt; が、同じインスタンス上の任意の後続の操作がスローされることがあり &lt;code&gt;NullPointerException&lt;/code&gt; が。</target>
        </trans-unit>
        <trans-unit id="30fa18ad27f297296b044126d2041ea7ea479b67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#setPage(java.net.URL)&quot;&gt;&lt;code&gt;setPage&lt;/code&gt;&lt;/a&gt; method can be used to initialize the component from a URL. In this case, the content type will be determined from the URL, and the registered &lt;code&gt;EditorKit&lt;/code&gt; for that content type will be set.</source>
          <target state="translated">&lt;a href=&quot;#setPage(java.net.URL)&quot;&gt; &lt;code&gt;setPage&lt;/code&gt; での&lt;/a&gt;方法は、URLからコンポーネントを初期化するために使用することができます。この場合、コンテンツタイプはURLから決定され、そのコンテンツタイプに登録されている &lt;code&gt;EditorKit&lt;/code&gt; が設定されます。</target>
        </trans-unit>
        <trans-unit id="12baf4ccc1db7688f8d44afcde7b6744bb5c9dfe" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#setText(java.lang.String)&quot;&gt;&lt;code&gt;setText&lt;/code&gt;&lt;/a&gt; method can be used to initialize the component from a string. In this case the current &lt;code&gt;EditorKit&lt;/code&gt; will be used, and the content type will be expected to be of this type.</source>
          <target state="translated">&lt;a href=&quot;#setText(java.lang.String)&quot;&gt; &lt;code&gt;setText&lt;/code&gt; &lt;/a&gt;方法は、文字列からコンポーネントを初期化するために使用することができます。この場合、現在の &lt;code&gt;EditorKit&lt;/code&gt; が使用され、コンテンツタイプはこのタイプであることが期待されます。</target>
        </trans-unit>
        <trans-unit id="5ba01f383f346e26e2c6a5defafb5896d214129d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#shutdown()&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; method is used to initiate an &lt;em&gt;orderly shutdown&lt;/em&gt; of a group. An orderly shutdown marks the group as shutdown; further attempts to construct a channel that binds to the group will throw &lt;a href=&quot;shutdownchannelgroupexception&quot;&gt;&lt;code&gt;ShutdownChannelGroupException&lt;/code&gt;&lt;/a&gt;. Whether or not a group is shutdown can be tested using the &lt;a href=&quot;#isShutdown()&quot;&gt;&lt;code&gt;isShutdown&lt;/code&gt;&lt;/a&gt; method. Once shutdown, the group &lt;em&gt;terminates&lt;/em&gt; when all asynchronous channels that are bound to the group are closed, all actively executing completion handlers have run to completion, and resources used by the group are released. No attempt is made to stop or interrupt threads that are executing completion handlers. The &lt;a href=&quot;#isTerminated()&quot;&gt;&lt;code&gt;isTerminated&lt;/code&gt;&lt;/a&gt; method is used to test if the group has terminated, and the &lt;a href=&quot;#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; method can be used to block until the group has terminated.</source>
          <target state="translated">&lt;a href=&quot;#shutdown()&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt;方法を開始するために使用される&lt;em&gt;正常シャットダウン&lt;/em&gt;グループを。正常なシャットダウンは、グループをシャットダウンとしてマークします。グループにバインドするチャネルをさらに構築しようとすると、&lt;a href=&quot;shutdownchannelgroupexception&quot;&gt; &lt;code&gt;ShutdownChannelGroupException&lt;/code&gt; &lt;/a&gt;がスローされます。グループがシャットダウンされているかどうかは、&lt;a href=&quot;#isShutdown()&quot;&gt; &lt;code&gt;isShutdown&lt;/code&gt; &lt;/a&gt;メソッドを使用してテストできます。シャットダウンすると、グループの&lt;em&gt;終了は、&lt;/em&gt;グループにバインドされているすべての非同期チャネルが閉じられたときに、すべての実行中のアクティブな完了ハンドラが完了するまで実行しており、グループで使用されるリソースが解放されます。完了ハンドラーを実行しているスレッドを停止または中断する試みは行われません。&lt;a href=&quot;#isTerminated()&quot;&gt; &lt;code&gt;isTerminated&lt;/code&gt; の&lt;/a&gt;方法は、グループが終了した場合、テストに使用され、&lt;a href=&quot;#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;メソッドを使用して、グループが終了するまでブロックできます。</target>
        </trans-unit>
        <trans-unit id="fb8d7794284deaddd5c051be877e293a50aade4e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#shutdownNow()&quot;&gt;&lt;code&gt;shutdownNow&lt;/code&gt;&lt;/a&gt; method can be used to initiate a &lt;em&gt;forceful shutdown&lt;/em&gt; of the group. In addition to the actions performed by an orderly shutdown, the &lt;code&gt;shutdownNow&lt;/code&gt; method closes all open channels in the group as if by invoking the &lt;a href=&quot;asynchronouschannel#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;#shutdownNow()&quot;&gt; &lt;code&gt;shutdownNow&lt;/code&gt; のの&lt;/a&gt;方法は、開始するために使用することができる&lt;em&gt;強力なシャットダウン&lt;/em&gt;グループのを。整然としたシャットダウンによって実行されるアクションに加えて、 &lt;code&gt;shutdownNow&lt;/code&gt; メソッドは、&lt;a href=&quot;asynchronouschannel#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すかのように、グループ内の開いているすべてのチャネルを閉じます。</target>
        </trans-unit>
        <trans-unit id="c9af2c8f7cf388858a16a6750ade5734fe7b6ede" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#slice()&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#slice(int,int)&quot;&gt;&lt;code&gt;slice(index,length)&lt;/code&gt;&lt;/a&gt; methods create a subsequence of a buffer: They leave the limit and the position unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33fb27c2c564d3705cef054d1baae924b5d2bf54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#startPipeline(java.util.List)&quot;&gt;&lt;code&gt;startPipeline&lt;/code&gt;&lt;/a&gt; method can be invoked to create a pipeline of new processes that send the output of each process directly to the next process. Each process has the attributes of its respective ProcessBuilder.</source>
          <target state="translated">&lt;a href=&quot;#startPipeline(java.util.List)&quot;&gt; &lt;code&gt;startPipeline&lt;/code&gt; の&lt;/a&gt;方法は次の工程に直接プロセスの出力を送信する新しいプロセスのパイプラインを作成するために呼び出すことができます。各プロセスには、それぞれのProcessBuilderの属性があります。</target>
        </trans-unit>
        <trans-unit id="8eca9523e3548f92f482798189e91dff0e7836f2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#supportedOptions(java.lang.Class)&quot;&gt;&lt;code&gt;supportedOptions(Class)&lt;/code&gt;&lt;/a&gt; method can be called to determine the complete set of options available (per socket type) on the current system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e337b45e7f50fae2c01488f43bd843f36ebcb157" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#syncAll(java.lang.invoke.MutableCallSite%5B%5D)&quot;&gt;&lt;code&gt;syncAll&lt;/code&gt;&lt;/a&gt; operation provides a way to force threads to accept a new target value, even if there is no other synchronization.</source>
          <target state="translated">&lt;a href=&quot;#syncAll(java.lang.invoke.MutableCallSite%5B%5D)&quot;&gt; &lt;code&gt;syncAll&lt;/code&gt; の&lt;/a&gt;操作は、他の同期がない場合でも、新たな目標値を受け入れるようにスレッドを強制する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="992fc683c8b560dbb6114a38df797c785f0f9454" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#toASCIIString()&quot;&gt;&lt;code&gt;toASCIIString&lt;/code&gt;&lt;/a&gt; method returns a fully quoted and encoded URI string that does not contain any</source>
          <target state="translated">&lt;a href=&quot;#toASCIIString()&quot;&gt; &lt;code&gt;toASCIIString&lt;/code&gt; の&lt;/a&gt;方法はいずれも含まない、完全に引用された符号化されたURI文字列を返します。</target>
        </trans-unit>
        <trans-unit id="35726dda3d36345e921ec2f26c1649acac41b9a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#toDisplayString()&quot;&gt;&lt;code&gt;toDisplayString()&lt;/code&gt;&lt;/a&gt; method allows you to obtain the localized string for a locale independent key from a predefined &lt;code&gt;ResourceBundle&lt;/code&gt; for the keys defined in this class. This localized string is intended to be readable by humans.</source>
          <target state="translated">&lt;a href=&quot;#toDisplayString()&quot;&gt; &lt;code&gt;toDisplayString()&lt;/code&gt; &lt;/a&gt;メソッドを使用すると、あらかじめ定義されたから、ロケールに依存しないキーのためのローカライズされた文字列取得することができ &lt;code&gt;ResourceBundle&lt;/code&gt; このクラスで定義されたキーのために。このローカライズされた文字列は、人間が読めるようにすることを目的としています。</target>
        </trans-unit>
        <trans-unit id="65b4b7be65a52928b9c78e34dccbe47a502708e2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#toEngineeringString()&quot;&gt;&lt;code&gt;toEngineeringString()&lt;/code&gt;&lt;/a&gt; method may be used for presenting numbers with exponents in engineering notation, and the &lt;a href=&quot;#setScale(int,java.math.RoundingMode)&quot;&gt;&lt;code&gt;setScale&lt;/code&gt;&lt;/a&gt; method may be used for rounding a &lt;code&gt;BigDecimal&lt;/code&gt; so it has a known number of digits after the decimal point.</source>
          <target state="translated">&lt;a href=&quot;#toEngineeringString()&quot;&gt; &lt;code&gt;toEngineeringString()&lt;/code&gt; &lt;/a&gt;メソッドは、工学表記で指数と番号を提示するために使用することができる、および&lt;a href=&quot;#setScale(int,java.math.RoundingMode)&quot;&gt; &lt;code&gt;setScale&lt;/code&gt; の&lt;/a&gt;方法は、丸めのために使用することができる &lt;code&gt;BigDecimal&lt;/code&gt; 、それが小数点の後の桁の既知数を持つように。</target>
        </trans-unit>
        <trans-unit id="bc086637a391b1032b4d9a87f65f931f3ebfac84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#toString()&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method returns a URI string with all necessary quotation but which may contain</source>
          <target state="translated">&lt;a href=&quot;#toString()&quot;&gt; &lt;code&gt;toString&lt;/code&gt; &lt;/a&gt;メソッドは、すべての必要な引用でURI文字列を返しますが含まれている可能性があります</target>
        </trans-unit>
        <trans-unit id="478767a169faaeb53898bb2638beee30a4b18797" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#type()&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; component determines if the entry grants or denies access.</source>
          <target state="translated">&lt;a href=&quot;#type()&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;エントリが許可またはアクセスを拒否した場合にコンポーネントが判定する。</target>
        </trans-unit>
        <trans-unit id="22dd7f57ec39defcc50324c81f0f9c18cf2d4803" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#walk(java.util.function.Function)&quot;&gt;&lt;code&gt;walk&lt;/code&gt;&lt;/a&gt; method opens a sequential stream of &lt;a href=&quot;stackwalker.stackframe&quot;&gt;&lt;code&gt;StackFrame&lt;/code&gt;&lt;/a&gt;s for the current thread and then applies the given function to walk the &lt;code&gt;StackFrame&lt;/code&gt; stream. The stream reports stack frame elements in order, from the top most frame that represents the execution point at which the stack was generated to the bottom most frame. The &lt;code&gt;StackFrame&lt;/code&gt; stream is closed when the &lt;code&gt;walk&lt;/code&gt; method returns. If an attempt is made to reuse the closed stream, &lt;code&gt;IllegalStateException&lt;/code&gt; will be thrown.</source>
          <target state="translated">&lt;a href=&quot;#walk(java.util.function.Function)&quot;&gt; &lt;code&gt;walk&lt;/code&gt; &lt;/a&gt;方法は、順次ストリーム開く&lt;a href=&quot;stackwalker.stackframe&quot;&gt; &lt;code&gt;StackFrame&lt;/code&gt; &lt;/a&gt;現在のスレッドの秒してから歩いて与えられた関数を適用し &lt;code&gt;StackFrame&lt;/code&gt; 流れを。ストリームは、スタックが生成された実行ポイントを表す最上位のフレームから最下位のフレームまで、スタックフレーム要素を順番に報告します。 &lt;code&gt;StackFrame&lt;/code&gt; ストリームが閉じたときにされた &lt;code&gt;walk&lt;/code&gt; メソッドが返します。閉じたストリームを再利用しようとすると、 &lt;code&gt;IllegalStateException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="104e9821fb34ad83cbe06a664eb098239b1f2dbf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withChronology(java.time.chrono.Chronology)&quot;&gt;&lt;code&gt;withChronology&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the chronology. If overridden, the date-time value is converted to the chronology before formatting. During parsing the date-time value is converted to the chronology before it is returned.</source>
          <target state="translated">&lt;a href=&quot;#withChronology(java.time.chrono.Chronology)&quot;&gt; &lt;code&gt;withChronology&lt;/code&gt; の&lt;/a&gt;方法は、年表をオーバーライドする新しいフォーマッタを返します。オーバーライドされた場合、日時値はフォーマット前に年表に変換されます。解析中に、日時値は返される前に年表に変換されます。</target>
        </trans-unit>
        <trans-unit id="8e69011f7c1b9509096433b5315c14df4b0867c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withDecimalStyle(java.time.format.DecimalStyle)&quot;&gt;&lt;code&gt;withDecimalStyle&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the &lt;a href=&quot;decimalstyle&quot;&gt;&lt;code&gt;DecimalStyle&lt;/code&gt;&lt;/a&gt;. The DecimalStyle symbols are used for formatting and parsing.</source>
          <target state="translated">&lt;a href=&quot;#withDecimalStyle(java.time.format.DecimalStyle)&quot;&gt; &lt;code&gt;withDecimalStyle&lt;/code&gt; の&lt;/a&gt;方法が優先されます新しいフォーマッタを返し&lt;a href=&quot;decimalstyle&quot;&gt; &lt;code&gt;DecimalStyle&lt;/code&gt; を&lt;/a&gt;。DecimalStyleシンボルは、フォーマットと解析に使用されます。</target>
        </trans-unit>
        <trans-unit id="179737e50aab62d467c3cc1df8b25dae572a53e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt;&lt;code&gt;withLocale&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the locale. The locale affects some aspects of formatting and parsing. For example, the &lt;a href=&quot;#ofLocalizedDate(java.time.format.FormatStyle)&quot;&gt;&lt;code&gt;ofLocalizedDate&lt;/code&gt;&lt;/a&gt; provides a formatter that uses the locale specific date format.</source>
          <target state="translated">&lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt; &lt;code&gt;withLocale&lt;/code&gt; の&lt;/a&gt;方法は、ロケールをオーバーライドする新しいフォーマッタを返します。ロケールは、フォーマットと解析のいくつかの側面に影響を与えます。たとえば、&lt;a href=&quot;#ofLocalizedDate(java.time.format.FormatStyle)&quot;&gt; &lt;code&gt;ofLocalizedDate&lt;/code&gt; &lt;/a&gt;は、ロケール固有の日付形式を使用するフォーマッタを提供します。</target>
        </trans-unit>
        <trans-unit id="7b5f8f7f416846ce6c11368f1979062c39147ad9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withResolverFields(java.time.temporal.TemporalField...)&quot;&gt;&lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt;&lt;/a&gt; parameter allows the set of fields that will be resolved to be filtered before resolving starts. For example, if the formatter has parsed a year, month, day-of-month and day-of-year, then there are two approaches to resolve a date: (year + month + day-of-month) and (year + day-of-year). The resolver fields allows one of the two approaches to be selected. If no resolver fields are set then both approaches must result in the same date.</source>
          <target state="translated">&lt;a href=&quot;#withResolverFields(java.time.temporal.TemporalField...)&quot;&gt; &lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt; &lt;/a&gt;パラメータは、開始を解決する前に濾過されるように解決されるフィールドのセットすることができます。たとえば、フォーマッタが年、月、日、および年を解析した場合、日付を解決するには、（年+月+日）と（年+）の2つのアプローチがあります。曜日）。リゾルバフィールドを使用すると、2つのアプローチのいずれかを選択できます。リゾルバフィールドが設定されていない場合は、両方のアプローチで同じ日付になる必要があります。</target>
        </trans-unit>
        <trans-unit id="4eb3b989121f5815135159b785773c5f4b0e5bee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withZone(java.time.ZoneId)&quot;&gt;&lt;code&gt;withZone&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the zone. If overridden, the date-time value is converted to a ZonedDateTime with the requested ZoneId before formatting. During parsing the ZoneId is applied before the value is returned.</source>
          <target state="translated">&lt;a href=&quot;#withZone(java.time.ZoneId)&quot;&gt; &lt;code&gt;withZone&lt;/code&gt; の&lt;/a&gt;方法は、ゾーンをオーバーライドする新しいフォーマッタを返します。オーバーライドされた場合、日時値は、フォーマットする前に、要求されたZoneIdを使用してZonedDateTimeに変換されます。解析中、値が返される前にZoneIdが適用されます。</target>
        </trans-unit>
        <trans-unit id="10635f0ded9a4021fc6c0f3a93a616a278660b29" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../../../java.base/java/net/socketpermission&quot;&gt;&lt;code&gt;SocketPermission&lt;/code&gt;&lt;/a&gt; to connect to an LDAP server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41a249dc2c78c4dc627ba478f329176648d9f256" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../../../java.base/javax/security/auth/authpermission&quot;&gt;&lt;code&gt;AuthPermission&lt;/code&gt;&lt;/a&gt; to modify the set of &lt;a href=&quot;../../../../../../java.base/java/security/principal&quot;&gt;&lt;code&gt;Principal&lt;/code&gt;&lt;/a&gt;s associated with a &lt;a href=&quot;../../../../../../java.base/javax/security/auth/subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="150ae3baaf5338beede41ab2ee57ec98285d921d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../java.base/java/nio/channels/filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt;map&lt;/a&gt; method throws &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt; when this map mode is used on an implementation that does not support it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5767321150fbf304f9c853fe7423b79275141cc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;properties&lt;/a&gt; for loggers and Handlers will have names starting with the dot-separated name for the handler or logger.</source>
          <target state="translated">ロガーとハンドラーの&lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;プロパティ&lt;/a&gt;には、ハンドラーまたはロガーのドットで区切られた名前で始まる名前が付けられます。</target>
        </trans-unit>
        <trans-unit id="0069f70249676e93e664c0be115bc404720187e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; API. The &lt;code&gt;ServiceLoader&lt;/code&gt; API will look for a class name in the file &lt;code&gt;META-INF/services/javax.sql.rowset.RowSetFactory&lt;/code&gt; in jars available to the runtime. For example, to have the RowSetFactory implementation &lt;code&gt;com.sun.rowset.RowSetFactoryImpl &lt;/code&gt; loaded, the entry in &lt;code&gt;META-INF/services/javax.sql.rowset.RowSetFactory&lt;/code&gt; would be:</source>
          <target state="translated">&lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; の&lt;/a&gt;API。 &lt;code&gt;ServiceLoader&lt;/code&gt; のAPIは、ファイル内のクラス名を探します &lt;code&gt;META-INF/services/javax.sql.rowset.RowSetFactory&lt;/code&gt; ランタイムに使用できるjarインチ たとえば、RowSetFactory実装 &lt;code&gt;com.sun.rowset.RowSetFactoryImpl &lt;/code&gt; をロードするには、 &lt;code&gt;META-INF/services/javax.sql.rowset.RowSetFactory&lt;/code&gt; /javax.sql.rowset.RowSetFactoryのエントリは次のようになります。</target>
        </trans-unit>
        <trans-unit id="379a2f9a4e106290a5ae7cfc103ae424d738cbd5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../java.management/javax/management/descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt; is a collection of fields containing additional meta-data for a JMX element. A field is a name and an associated value. The additional meta-data provided for an operation associated with a diagnostic command are described in the table below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23b10f96e4ba74a54f5bc79e62ed11824566541" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../java.management/javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; for uniquely identifying the diagnostic MBean within an MBeanServer is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522c2e92bd2b278cbf22bf030310e50d7ce05ec7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../java.base/java/net/uri&quot;&gt;URI&lt;/a&gt; returned from &lt;code&gt;&lt;a href=&quot;fileobject#toUri()&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../../../java.base/java/net/uri&quot;&gt;URI&lt;/a&gt;から返さ &lt;code&gt;&lt;a href=&quot;fileobject#toUri()&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a81bf25ed46b7ed4b581a608b7780d76bdc79dd9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../java.base/java/util/locale&quot;&gt;locale&lt;/a&gt; of the description in this &lt;code&gt;MBeanInfo&lt;/code&gt;, &lt;code&gt;MBeanAttributeInfo&lt;/code&gt;, etc, as returned by &lt;a href=&quot;../../../java.base/java/util/locale#toString()&quot;&gt;&lt;code&gt;Locale.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../java.base/java/util/locale#toString()&quot;&gt; &lt;code&gt;Locale.toString()&lt;/code&gt; &lt;/a&gt;によって返される、この &lt;code&gt;MBeanInfo&lt;/code&gt; 、 &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; などの説明の&lt;a href=&quot;../../../java.base/java/util/locale&quot;&gt;ロケール&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc51dcb232ef7f25e91fae041a5e61191866e752" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; that uniquely identifies the management interface for logging within the &lt;code&gt;MBeanServer&lt;/code&gt; is:</source>
          <target state="translated">&lt;a href=&quot;../../../javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; の&lt;/a&gt;一意内のログの管理インタフェースを特定 &lt;code&gt;MBeanServer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c2067b4092577ae338b99899873d5c51ff4766a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../../io/file#toPath()&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method to construct a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; by converting the abstract path represented by the &lt;code&gt;java.io.File&lt;/code&gt; object. The resulting &lt;code&gt;Path&lt;/code&gt; can be used to operate on the same file as the &lt;code&gt;File&lt;/code&gt; object. The &lt;code&gt;Path&lt;/code&gt; specification provides further information on the &lt;a href=&quot;path#interop&quot;&gt;interoperability&lt;/a&gt; between &lt;code&gt;Path&lt;/code&gt; and &lt;code&gt;java.io.File&lt;/code&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;../../io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;クラスを定義&lt;a href=&quot;../../io/file#toPath()&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; を&lt;/a&gt;構築する方法&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;で表される抽象パス変換することによって、 &lt;code&gt;java.io.File&lt;/code&gt; ののオブジェクト。結果の &lt;code&gt;Path&lt;/code&gt; は、 &lt;code&gt;File&lt;/code&gt; オブジェクトと同じファイルを操作するために使用できます。 &lt;code&gt;Path&lt;/code&gt; 指定はに関する詳細な情報提供し&lt;a href=&quot;path#interop&quot;&gt;、相互運用性&lt;/a&gt;の間 &lt;code&gt;Path&lt;/code&gt; と &lt;code&gt;java.io.File&lt;/code&gt; オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="9a85bd907f559c9802535fa51f23ef29d3d95c9e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../../io/file#toPath--&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method to construct a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; by converting the abstract path represented by the &lt;code&gt;java.io.File&lt;/code&gt; object. The resulting &lt;code&gt;Path&lt;/code&gt; can be used to operate on the same file as the &lt;code&gt;File&lt;/code&gt; object. The &lt;code&gt;Path&lt;/code&gt; specification provides further information on the &lt;a href=&quot;path#interop&quot;&gt;interoperability&lt;/a&gt; between &lt;code&gt;Path&lt;/code&gt; and &lt;code&gt;java.io.File&lt;/code&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;../../io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;クラスを定義&lt;a href=&quot;../../io/file#toPath--&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; を&lt;/a&gt;構築する方法&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;で表される抽象パス変換することによって、 &lt;code&gt;java.io.File&lt;/code&gt; ののオブジェクト。結果の &lt;code&gt;Path&lt;/code&gt; を使用して、 &lt;code&gt;File&lt;/code&gt; オブジェクトと同じファイルを操作できます。 &lt;code&gt;Path&lt;/code&gt; 指定はに関する詳細な情報提供し&lt;a href=&quot;path#interop&quot;&gt;、相互運用性&lt;/a&gt;の間 &lt;code&gt;Path&lt;/code&gt; と &lt;code&gt;java.io.File&lt;/code&gt; オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="d5be3abde35d6105d79ad74bc634371ab99a05a5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../java/net/uri&quot;&gt;URI&lt;/a&gt; returned from &lt;code&gt;&lt;a href=&quot;fileobject#toUri--&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../../java/net/uri&quot;&gt;URI&lt;/a&gt;から返さ &lt;code&gt;&lt;a href=&quot;fileobject#toUri--&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="134ad8107ae31bdb06239d777265c61dbef39bc0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../java/util/locale&quot;&gt;locale&lt;/a&gt; of the description in this &lt;code&gt;MBeanInfo&lt;/code&gt;, &lt;code&gt;MBeanAttributeInfo&lt;/code&gt;, etc, as returned by &lt;a href=&quot;../../java/util/locale#toString--&quot;&gt;&lt;code&gt;Locale.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../java/util/locale#toString--&quot;&gt; &lt;code&gt;Locale.toString()&lt;/code&gt; &lt;/a&gt;によって返される、この &lt;code&gt;MBeanInfo&lt;/code&gt; 、 &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; などの説明の&lt;a href=&quot;../../java/util/locale&quot;&gt;ロケール&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c934c128f75a8a4fa5a31b7015ed85f88403315" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/protocolfamily&quot;&gt;&lt;code&gt;ProtocolFamily&lt;/code&gt;&lt;/a&gt; of the channel's socket is platform (and possibly configuration) dependent and therefore unspecified. The &lt;a href=&quot;#open(java.net.ProtocolFamily)&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; allows the protocol family to be selected when opening a datagram channel, and should be used to open datagram channels that are intended for Internet Protocol multicasting.</source>
          <target state="translated">チャネルのソケットの&lt;a href=&quot;../../net/protocolfamily&quot;&gt; &lt;code&gt;ProtocolFamily&lt;/code&gt; &lt;/a&gt;は、プラットフォーム（および場合によっては構成）に依存するため、指定されていません。&lt;a href=&quot;#open(java.net.ProtocolFamily)&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;データグラムチャネルを開くときプロトコルファミリが選択されることを可能にする、インターネットプロトコルマルチキャストのために意図されているオープンデータグラムチャネルに使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="f1ec0c7d3ac150a1e7303b1353c79b5a3e266162" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/protocolfamily&quot;&gt;&lt;code&gt;ProtocolFamily&lt;/code&gt;&lt;/a&gt; of the channel's socket is platform (and possibly configuration) dependent and therefore unspecified. The &lt;a href=&quot;datagramchannel#open-java.net.ProtocolFamily-&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; allows the protocol family to be selected when opening a datagram channel, and should be used to open datagram channels that are intended for Internet Protocol multicasting.</source>
          <target state="translated">チャネルのソケットの&lt;a href=&quot;../../net/protocolfamily&quot;&gt; &lt;code&gt;ProtocolFamily&lt;/code&gt; &lt;/a&gt;はプラットフォーム（および場合によっては構成）に依存するため、指定されていません。&lt;a href=&quot;datagramchannel#open-java.net.ProtocolFamily-&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;データグラムチャネルを開くときプロトコルファミリが選択されることを可能にする、インターネットプロトコルマルチキャストのために意図されているオープンデータグラムチャネルに使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="26ee394bd5a91389898fffb43587756f5372b01d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; option should be enabled prior to &lt;a href=&quot;networkchannel#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;binding&lt;/code&gt;&lt;/a&gt; the socket. This is required to allow multiple members of the group to bind to the same address.</source>
          <target state="translated">&lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; の&lt;/a&gt;オプションは、前に有効にする必要があります&lt;a href=&quot;networkchannel#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;binding&lt;/code&gt; &lt;/a&gt;ソケットを。これは、グループの複数のメンバーが同じアドレスにバインドできるようにするために必要です。</target>
        </trans-unit>
        <trans-unit id="17b844a7bf6569487aadb2b841362d26db2df769" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; option should be enabled prior to &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;binding&lt;/code&gt;&lt;/a&gt; the socket. This is required to allow multiple members of the group to bind to the same address.</source>
          <target state="translated">&lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; の&lt;/a&gt;オプションは、前に有効にする必要があります&lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;binding&lt;/code&gt; &lt;/a&gt;ソケットを。これは、グループの複数のメンバーが同じアドレスにバインドできるようにするために必要です。</target>
        </trans-unit>
        <trans-unit id="5e9eeca29aab2965612038f9a3795990d96a2122" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../security/protectiondomain&quot;&gt;&lt;code&gt;ProtectionDomain&lt;/code&gt;&lt;/a&gt; of a proxy class is the same as that of system classes loaded by the bootstrap class loader, such as &lt;code&gt;java.lang.Object&lt;/code&gt;, because the code for a proxy class is generated by trusted system code. This protection domain will typically be granted &lt;code&gt;java.security.AllPermission&lt;/code&gt;.</source>
          <target state="translated">プロキシクラスの&lt;a href=&quot;../../security/protectiondomain&quot;&gt; &lt;code&gt;ProtectionDomain&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;java.lang.Object&lt;/code&gt; などのブートストラップクラスローダーによってロードされるシステムクラスのProtectionDomainと同じです。これは、プロキシクラスのコードが信頼できるシステムコードによって生成されるためです。この保護ドメインには通常、 &lt;code&gt;java.security.AllPermission&lt;/code&gt; が付与されます。</target>
        </trans-unit>
        <trans-unit id="5ecb831d25072794a8321beb08d3f2989b4eb525" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../time/zoneid#systemDefault()&quot;&gt;&lt;code&gt;system default TimeZone&lt;/code&gt;&lt;/a&gt; is used to convert the UTC time to local date-time.</source>
          <target state="translated">&lt;a href=&quot;../../time/zoneid#systemDefault()&quot;&gt; &lt;code&gt;system default TimeZone&lt;/code&gt; &lt;/a&gt;ローカルの日時にUTC時刻に変換するために使用されます。</target>
        </trans-unit>
        <trans-unit id="8cce448bf1e954b21943bc931e3a7ed24ae93fed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../util/locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; class provide access to a range of information useful for localizing an application. This includes the language and region, such as &quot;en-GB&quot; for English as used in Great Britain.</source>
          <target state="translated">&lt;a href=&quot;../../util/locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt;クラスは、アプリケーションをローカライズするための有用な情報の範囲へのアクセスを提供します。これには、英国で使用されている英語の「en-GB」などの言語と地域が含まれます。</target>
        </trans-unit>
        <trans-unit id="7786edad52abe214490e50f86c58831524452f9b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; methods may also be used to read or update the owner. In that case, the owner attribute is identified by the name &lt;code&gt;&quot;owner&quot;&lt;/code&gt;, and the value of the attribute is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッド&lt;/a&gt;方法は、所有者の読み取りまたは更新するために使用することができます。その場合、所有者属性は &lt;code&gt;&quot;owner&quot;&lt;/code&gt; という名前で識別され、属性の値は&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="f8a11726aa14cd73ca2137ecb864daef15163536" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes as if by invoking the &lt;a href=&quot;#readAttributes()&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; の&lt;/a&gt;方法は、IFとして呼び出すことによって、これらの属性のいずれかを読み取るために使用することができる&lt;a href=&quot;#readAttributes()&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="85684b2fc47146275fdab7d2c9f839a7fdc85f8f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes, or any of the attributes defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; as if by invoking the &lt;a href=&quot;#readAttributes()&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; の&lt;/a&gt;方法は、これらの属性のいずれかを読み取るために使用され得る、または属性のいずれかによって定義さ&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;呼び出すことであるかのように&lt;a href=&quot;#readAttributes()&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="01813ca8a2f4cee820ce424da9550d8a914a2790" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read the ACL or owner attributes as if by invoking the &lt;a href=&quot;#getAcl()&quot;&gt;&lt;code&gt;getAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#getOwner()&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; の&lt;/a&gt;方法を呼び出すことによってかのようにACLまたは所有者属性を読み取るために使用されてもよい&lt;a href=&quot;#getAcl()&quot;&gt; &lt;code&gt;getAcl&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;fileownerattributeview#getOwner()&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; メソッド&lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="f7bcc13ad5cb486576996f847be7d97aa0930b3d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; methods may also be used to read or update the owner. In that case, the owner attribute is identified by the name &lt;code&gt;&quot;owner&quot;&lt;/code&gt;, and the value of the attribute is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッド&lt;/a&gt;方法は、所有者の読み取りまたは更新するために使用することができます。その場合、所有者属性は &lt;code&gt;&quot;owner&quot;&lt;/code&gt; という名前で識別され、属性の値は&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="6c2baff7408e5ad54d49ec829c03c8add1ffdf24" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes as if by invoking the &lt;a href=&quot;basicfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; の&lt;/a&gt;方法は、IFとして呼び出すことによって、これらの属性のいずれかを読み取るために使用することができる&lt;a href=&quot;basicfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="e42fb0b1ed94cf5c272dbff37a665442f101c72a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes, or any of the attributes defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; as if by invoking the &lt;a href=&quot;dosfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; の&lt;/a&gt;方法は、これらの属性のいずれかを読み取るために使用され得る、または属性のいずれかによって定義さ&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;呼び出すことであるかのように&lt;a href=&quot;dosfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="cc5e5360eedff08a35975f0e9a9480502f02b841" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes, or any of the attributes defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; as if by invoking the &lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; の&lt;/a&gt;方法は、これらの属性のいずれかを読み取るために使用され得る、または属性のいずれかによって定義さ&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;呼び出すことであるかのように&lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;メソッド。</target>
        </trans-unit>
        <trans-unit id="52e7fac281b42fd7fe7452e241108ef2d5dcf7d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read the ACL or owner attributes as if by invoking the &lt;a href=&quot;aclfileattributeview#getAcl--&quot;&gt;&lt;code&gt;getAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; の&lt;/a&gt;方法を呼び出すことによってかのようにACLまたは所有者属性を読み取るために使用されてもよい&lt;a href=&quot;aclfileattributeview#getAcl--&quot;&gt; &lt;code&gt;getAcl&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; メソッド&lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="a66d1389e68f17cf760e4ead06c81319bc1c611a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the ACL or owner attributes as if by invoking the &lt;a href=&quot;#setAcl(java.util.List)&quot;&gt;&lt;code&gt;setAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッドの&lt;/a&gt;方法は、IFとして呼び出すことによって、ACLまたは所有者属性を更新するために使用されてもよい&lt;a href=&quot;#setAcl(java.util.List)&quot;&gt; &lt;code&gt;setAcl&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;fileownerattributeview#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="a1ab88808fcc3905febfce9137a0e1f9a46f0aa3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the DOS attributes as if by invoking the &lt;a href=&quot;#setReadOnly(boolean)&quot;&gt;&lt;code&gt;setReadOnly&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setHidden(boolean)&quot;&gt;&lt;code&gt;setHidden&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setSystem(boolean)&quot;&gt;&lt;code&gt;setSystem&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#setArchive(boolean)&quot;&gt;&lt;code&gt;setArchive&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッドの&lt;/a&gt;方法は、最終アクセス時刻をファイルの最終更新時刻を更新したりすることによって定義されるように、時間属性を作成するために使用することができる&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;。また、&lt;a href=&quot;#setReadOnly(boolean)&quot;&gt; &lt;code&gt;setReadOnly&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#setHidden(boolean)&quot;&gt; &lt;code&gt;setHidden&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#setSystem(boolean)&quot;&gt; &lt;code&gt;setSystem&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#setArchive(boolean)&quot;&gt; &lt;code&gt;setArchive&lt;/code&gt; &lt;/a&gt;メソッドをそれぞれ呼び出すかのようにDOS属性を更新するために使用することもできます。</target>
        </trans-unit>
        <trans-unit id="324d0485d9b5471da8935266a3e2c4f243862906" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the permissions, owner, or group-owner as if by invoking the &lt;a href=&quot;#setPermissions(java.util.Set)&quot;&gt;&lt;code&gt;setPermissions&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;fileownerattributeview#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#setGroup(java.nio.file.attribute.GroupPrincipal)&quot;&gt;&lt;code&gt;setGroup&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッドの&lt;/a&gt;方法は、最終アクセス時刻をファイルの最終更新時刻を更新したりすることによって定義されるように、時間属性を作成するために使用することができる&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;。また、&lt;a href=&quot;#setPermissions(java.util.Set)&quot;&gt; &lt;code&gt;setPermissions&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;fileownerattributeview#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#setGroup(java.nio.file.attribute.GroupPrincipal)&quot;&gt; &lt;code&gt;setGroup&lt;/code&gt; &lt;/a&gt;メソッドをそれぞれ呼び出すかのように、アクセス許可、所有者、またはグループ所有者を更新するために使用することもできます。</target>
        </trans-unit>
        <trans-unit id="32d653cec997683485730f2c2e168b1cada5ca30" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as if by invoking the &lt;a href=&quot;#setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)&quot;&gt;&lt;code&gt;setTimes&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッドの&lt;/a&gt;方法は、最終アクセス時刻をファイルの最終更新時刻を更新したり呼び出すことによってかのように、時間属性を作成するために使用することができる&lt;a href=&quot;#setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)&quot;&gt; &lt;code&gt;setTimes&lt;/code&gt; の&lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="1bfa9ca3b01e08a940097655d13c2a85724d95de" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the ACL or owner attributes as if by invoking the &lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt;&lt;code&gt;setAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッドの&lt;/a&gt;方法は、IFとして呼び出すことによって、ACLまたは所有者属性を更新するために使用されてもよい&lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt; &lt;code&gt;setAcl&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="c435d3e3c46a4b9a0beff2ad2d5cec4c6ab7aa83" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the DOS attributes as if by invoking the &lt;a href=&quot;dosfileattributeview#setReadOnly-boolean-&quot;&gt;&lt;code&gt;setReadOnly&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dosfileattributeview#setHidden-boolean-&quot;&gt;&lt;code&gt;setHidden&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dosfileattributeview#setSystem-boolean-&quot;&gt;&lt;code&gt;setSystem&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;dosfileattributeview#setArchive-boolean-&quot;&gt;&lt;code&gt;setArchive&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッドの&lt;/a&gt;方法は、最終アクセス時刻をファイルの最終更新時刻を更新したりすることによって定義されるように、時間属性を作成するために使用することができる&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;。また、&lt;a href=&quot;dosfileattributeview#setReadOnly-boolean-&quot;&gt; &lt;code&gt;setReadOnly&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;dosfileattributeview#setHidden-boolean-&quot;&gt; &lt;code&gt;setHidden&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;dosfileattributeview#setSystem-boolean-&quot;&gt; &lt;code&gt;setSystem&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;dosfileattributeview#setArchive-boolean-&quot;&gt; &lt;code&gt;setArchive&lt;/code&gt; &lt;/a&gt;メソッドをそれぞれ呼び出すかのように、DOS属性を更新するために使用することもできます。</target>
        </trans-unit>
        <trans-unit id="eda9c31c1c567716843eb27dfd24c5d17ae4a65a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the permissions, owner, or group-owner as if by invoking the &lt;a href=&quot;posixfileattributeview#setPermissions-java.util.Set-&quot;&gt;&lt;code&gt;setPermissions&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;posixfileattributeview#setGroup-java.nio.file.attribute.GroupPrincipal-&quot;&gt;&lt;code&gt;setGroup&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッドの&lt;/a&gt;方法は、最終アクセス時刻をファイルの最終更新時刻を更新したりすることによって定義されるように、時間属性を作成するために使用することができる&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;。また、&lt;a href=&quot;posixfileattributeview#setPermissions-java.util.Set-&quot;&gt; &lt;code&gt;setPermissions&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;posixfileattributeview#setGroup-java.nio.file.attribute.GroupPrincipal-&quot;&gt; &lt;code&gt;setGroup&lt;/code&gt; &lt;/a&gt;メソッドをそれぞれ呼び出すことによって、アクセス権、所有者、またはグループ所有者を更新する場合にも使用できます。</target>
        </trans-unit>
        <trans-unit id="a691ef8b98d41f4420b4aefb065db958be6429d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as if by invoking the &lt;a href=&quot;basicfileattributeview#setTimes-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-&quot;&gt;&lt;code&gt;setTimes&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; メソッドの&lt;/a&gt;方法は、最終アクセス時刻をファイルの最終更新時刻を更新したり呼び出すことによってかのように、時間属性を作成するために使用することができる&lt;a href=&quot;basicfileattributeview#setTimes-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-&quot;&gt; &lt;code&gt;setTimes&lt;/code&gt; の&lt;/a&gt;方法を。</target>
        </trans-unit>
        <trans-unit id="d6234f4c2f9f186f3857bbbd3b1aad9de4850aec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../filestore#supportsFileAttributeView(java.lang.Class)&quot;&gt;&lt;code&gt;supportsFileAttributeView&lt;/code&gt;&lt;/a&gt; method may be used to test if a specific &lt;a href=&quot;../filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the storage of user-defined attributes.</source>
          <target state="translated">&lt;a href=&quot;../filestore#supportsFileAttributeView(java.lang.Class)&quot;&gt; &lt;code&gt;supportsFileAttributeView&lt;/code&gt; の&lt;/a&gt;特定の場合方法は、試験に使用することができる&lt;a href=&quot;../filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt;ユーザ定義属性のストレージをサポートします。</target>
        </trans-unit>
        <trans-unit id="580a6d6beeb8ffe4eb2d62290bc22802acbffaee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../filestore#supportsFileAttributeView-java.lang.Class-&quot;&gt;&lt;code&gt;supportsFileAttributeView&lt;/code&gt;&lt;/a&gt; method may be used to test if a specific &lt;a href=&quot;../filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the storage of user-defined attributes.</source>
          <target state="translated">&lt;a href=&quot;../filestore#supportsFileAttributeView-java.lang.Class-&quot;&gt; &lt;code&gt;supportsFileAttributeView&lt;/code&gt; の&lt;/a&gt;特定の場合方法は、試験に使用することができる&lt;a href=&quot;../filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt;ユーザ定義属性のストレージをサポートします。</target>
        </trans-unit>
        <trans-unit id="c29872ec7ff5ff95dc63bc474c776a8113805f34" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../function/supplier#get()&quot;&gt;&lt;code&gt;Supplier.get()&lt;/code&gt;&lt;/a&gt; method will be invoked on the supplier no more than once, and only after the terminal operation of the stream pipeline commences.</source>
          <target state="translated">&lt;a href=&quot;../function/supplier#get()&quot;&gt; &lt;code&gt;Supplier.get()&lt;/code&gt; &lt;/a&gt;メソッドは複数回業者に呼び出されていない、とだけストリームパイプラインの開始についての端末操作後に説明します。</target>
        </trans-unit>
        <trans-unit id="0ee89249aaebf2f1fc5eeda71bacdd03058fa195" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../function/supplier#get--&quot;&gt;&lt;code&gt;Supplier.get()&lt;/code&gt;&lt;/a&gt; method will be invoked on the supplier no more than once, and only after the terminal operation of the stream pipeline commences.</source>
          <target state="translated">&lt;a href=&quot;../function/supplier#get--&quot;&gt; &lt;code&gt;Supplier.get()&lt;/code&gt; &lt;/a&gt;メソッドは複数回業者に呼び出されていない、とだけストリームパイプラインの開始についての端末操作後に説明します。</target>
        </trans-unit>
        <trans-unit id="4c7b35a01ac35182741faccc4532841ae06b6e90" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../java.base/java/nio/file/filesystems&quot;&gt;FileSystems&lt;/a&gt;&lt;code&gt;newFileSystem&lt;/code&gt; static factory methods can be used to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142dbbdea20e0ff6bd9b8a5f8d0a573aae47a0f4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mappedbytebuffer&quot;&gt;&lt;code&gt;&lt;i&gt;mapped byte buffer&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; returned by this method will have a position of zero and a limit and capacity of &lt;code&gt;size&lt;/code&gt;; its mark will be undefined. The buffer and the mapping that it represents will remain valid until the buffer itself is garbage-collected.</source>
          <target state="translated">&lt;a href=&quot;../mappedbytebuffer&quot;&gt; &lt;code&gt;&lt;i&gt;mapped byte buffer&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;このメソッドによって返されたゼロの位置との限界と能力があります &lt;code&gt;size&lt;/code&gt; 、そのマークは未定義になります。バッファとそれが表すマッピングは、バッファ自体がガベージコレクションされるまで有効です。</target>
        </trans-unit>
        <trans-unit id="1eef88d322f3e09ae53bc681f6806fe486829507" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will always be equal to this object's file-pointer offset as returned by the &lt;a href=&quot;#getFilePointer()&quot;&gt;&lt;code&gt;getFilePointer&lt;/code&gt;&lt;/a&gt; method. Changing this object's file-pointer offset, whether explicitly or by reading or writing bytes, will change the position of the channel, and vice versa. Changing the file's length via this object will change the length seen via the file channel, and vice versa.</source>
          <target state="translated">返されるチャネルの&lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;#getFilePointer()&quot;&gt; &lt;code&gt;getFilePointer&lt;/code&gt; &lt;/a&gt;メソッドによって返されるこのオブジェクトのファイルポインタオフセットと常に等しくなります。このオブジェクトのファイルポインタオフセットを変更すると、明示的に、またはバイトの読み取りまたは書き込みによって、チャネルの位置が変更されます。その逆も同様です。このオブジェクトを介してファイルの長さを変更すると、ファイルチャネルを介して表示される長さが変更され、その逆も同様です。</target>
        </trans-unit>
        <trans-unit id="48db05c222075f07f78662388844eeb5f6f1bc01" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will always be equal to this object's file-pointer offset as returned by the &lt;a href=&quot;randomaccessfile#getFilePointer--&quot;&gt;&lt;code&gt;getFilePointer&lt;/code&gt;&lt;/a&gt; method. Changing this object's file-pointer offset, whether explicitly or by reading or writing bytes, will change the position of the channel, and vice versa. Changing the file's length via this object will change the length seen via the file channel, and vice versa.</source>
          <target state="translated">返されるチャネルの&lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;は、&lt;a href=&quot;randomaccessfile#getFilePointer--&quot;&gt; &lt;code&gt;getFilePointer&lt;/code&gt; &lt;/a&gt;メソッドによって返されるこのオブジェクトのファイルポインターオフセットと常に等しくなります。このオブジェクトのファイルポインターオフセットを変更すると、明示的に、またはバイトの読み取りまたは書き込みによって、チャネルの位置が変更されます。逆の場合も同様です。このオブジェクトを介してファイルの長さを変更すると、ファイルチャネルを介して表示される長さが変更され、逆も同様です。</target>
        </trans-unit>
        <trans-unit id="1b7577f54ca9ebadbf67e174ed9fc74807c65a0b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class defines methods that operate on file attributes including file permissions. This may be used when finer manipulation of file permissions is required.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;クラスは、ファイルのアクセス権などのファイル属性を操作するメソッドを定義します。これは、ファイルのアクセス許可をより細かく操作する必要がある場合に使用できます。</target>
        </trans-unit>
        <trans-unit id="b28607d7b75904cc426fcfb6ec4e099b107fd4d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/files#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;Files.createTempFile&lt;/code&gt;&lt;/a&gt; method provides an alternative method to create an empty file in the temporary-file directory. Files created by that method may have more restrictive access permissions to files created by this method and so may be more suited to security-sensitive applications.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/files#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;Files.createTempFile&lt;/code&gt; の&lt;/a&gt;方法は、一時ファイルディレクトリに空のファイルを作成するための別の方法を提供します。この方法で作成されたファイルは、この方法で作成されたファイルへのアクセス許可がより制限されている可能性があるため、セキュリティが重要なアプリケーションに適している可能性があります。</target>
        </trans-unit>
        <trans-unit id="3185bf54751cfa5bf1ebba53d67faccb98bf6516" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/files#createTempFile-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;Files.createTempFile&lt;/code&gt;&lt;/a&gt; method provides an alternative method to create an empty file in the temporary-file directory. Files created by that method may have more restrictive access permissions to files created by this method and so may be more suited to security-sensitive applications.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/files#createTempFile-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;Files.createTempFile&lt;/code&gt; の&lt;/a&gt;方法は、一時ファイルディレクトリに空のファイルを作成するための別の方法を提供します。その方法で作成されたファイルは、この方法で作成されたファイルへのアクセス制限がより厳しくなり、セキュリティが重要なアプリケーションに適している場合があります。</target>
        </trans-unit>
        <trans-unit id="9b177003ee97e039cabe9da4299828ca0c286e4b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/package-summary&quot;&gt;&lt;code&gt;java.nio.file&lt;/code&gt;&lt;/a&gt; package defines interfaces and classes for the Java virtual machine to access files, file attributes, and file systems. This API may be used to overcome many of the limitations of the &lt;code&gt;java.io.File&lt;/code&gt; class. The &lt;a href=&quot;#toPath()&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method may be used to obtain a &lt;a href=&quot;../nio/file/path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; that uses the abstract path represented by a &lt;code&gt;File&lt;/code&gt; object to locate a file. The resulting &lt;code&gt;Path&lt;/code&gt; may be used with the &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class to provide more efficient and extensive access to additional file operations, file attributes, and I/O exceptions to help diagnose errors when an operation on a file fails.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/package-summary&quot;&gt; &lt;code&gt;java.nio.file&lt;/code&gt; の&lt;/a&gt;パッケージには、アクセスファイル、ファイル属性、およびファイルシステムにJava仮想マシン用のインタフェースとクラスを定義します。このAPIは、 &lt;code&gt;java.io.File&lt;/code&gt; クラスの制限の多くを克服するために使用できます。&lt;a href=&quot;#toPath()&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; の&lt;/a&gt;方法を得るために使用することができる&lt;a href=&quot;../nio/file/path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;で表される抽象パス使用して &lt;code&gt;File&lt;/code&gt; ファイルを検索するオブジェクト。結果の &lt;code&gt;Path&lt;/code&gt; &lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;クラスで使用すると、追加のファイル操作、ファイル属性、およびI / O例外へのより効率的で広範なアクセスが提供され、ファイルの操作が失敗した場合のエラーの診断に役立ちます。</target>
        </trans-unit>
        <trans-unit id="d1cd2dbce708c6940c8cf8ba35f1bba1e58ac0ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/package-summary&quot;&gt;&lt;code&gt;java.nio.file&lt;/code&gt;&lt;/a&gt; package defines interfaces and classes for the Java virtual machine to access files, file attributes, and file systems. This API may be used to overcome many of the limitations of the &lt;code&gt;java.io.File&lt;/code&gt; class. The &lt;a href=&quot;file#toPath--&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method may be used to obtain a &lt;a href=&quot;../nio/file/path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; that uses the abstract path represented by a &lt;code&gt;File&lt;/code&gt; object to locate a file. The resulting &lt;code&gt;Path&lt;/code&gt; may be used with the &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class to provide more efficient and extensive access to additional file operations, file attributes, and I/O exceptions to help diagnose errors when an operation on a file fails.</source>
          <target state="translated">&lt;a href=&quot;../nio/file/package-summary&quot;&gt; &lt;code&gt;java.nio.file&lt;/code&gt; の&lt;/a&gt;パッケージには、アクセスファイル、ファイル属性、およびファイルシステムにJava仮想マシン用のインタフェースとクラスを定義します。このAPIは、 &lt;code&gt;java.io.File&lt;/code&gt; クラスの制限の多くを克服するために使用できます。&lt;a href=&quot;file#toPath--&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; の&lt;/a&gt;方法を得るために使用することができる&lt;a href=&quot;../nio/file/path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;で表される抽象パス使用して &lt;code&gt;File&lt;/code&gt; ファイルを検索するオブジェクト。結果の &lt;code&gt;Path&lt;/code&gt; を&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;クラスで使用して、追加のファイル操作、ファイル属性、およびI / O例外へのより効率的で広範なアクセスを提供し、ファイルの操作が失敗したときのエラーの診断に役立てることができます。</target>
        </trans-unit>
        <trans-unit id="fb088de36c03c2900d71d296fa6c9d6780b57b3b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../request/eventrequest&quot;&gt;&lt;code&gt;EventRequest&lt;/code&gt;&lt;/a&gt; that requested this event. Some events (eg. &lt;a href=&quot;vmdeathevent&quot;&gt;&lt;code&gt;VMDeathEvent&lt;/code&gt;&lt;/a&gt;) may not have a cooresponding request and thus will return null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82b2361fe117f27f253cb0e774de64061c22b2d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../spliterator#getComparator()&quot;&gt;spliterator's comparator&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt; if the &lt;a href=&quot;../sortedmap#comparator()&quot;&gt;map's comparator&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the map's comparator.</source>
          <target state="translated">&lt;a href=&quot;../spliterator#getComparator()&quot;&gt;spliteratorのコンパレータが&lt;/a&gt;ある &lt;code&gt;null&lt;/code&gt; の場合は&lt;a href=&quot;../sortedmap#comparator()&quot;&gt;マップのコンパレータで&lt;/a&gt;ある &lt;code&gt;null&lt;/code&gt; 。それ以外の場合、スプリッターのコンパレーターは、マップのコンパレーターと同じであるか、同じ全順序を課します。</target>
        </trans-unit>
        <trans-unit id="98176dc88f06469dcca48fb3788ff30dc992f8b1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../spliterator#getComparator()&quot;&gt;spliterator's comparator&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt; if the &lt;a href=&quot;../sortedset#comparator()&quot;&gt;set's comparator&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the set's comparator.</source>
          <target state="translated">&lt;a href=&quot;../spliterator#getComparator()&quot;&gt;spliteratorのコンパレータが&lt;/a&gt;ある &lt;code&gt;null&lt;/code&gt; の場合は&lt;a href=&quot;../sortedset#comparator()&quot;&gt;セットのコンパレータで&lt;/a&gt;ある &lt;code&gt;null&lt;/code&gt; 。それ以外の場合、スプリッターのコンパレーターは、セットのコンパレーターと同じであるか、同じ全順序を課します。</target>
        </trans-unit>
        <trans-unit id="6e1a4cbb02bf6c03d5a44b8766a6b75e3bd7ef2d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;Epoch Day count&lt;/code&gt;&lt;/a&gt; is a simple incrementing count of days where day 0 is 1970-01-01 (ISO). This definition is the same for all chronologies, enabling conversion.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;Epoch Day count&lt;/code&gt; &lt;/a&gt; 0日が1970年1月1日である日の簡単なインクリメント数（ISO）です。この定義はすべての年代で同じであり、変換を可能にします。</target>
        </trans-unit>
        <trans-unit id="d90b2002fdcbda3f48a04b1c28d8f93afe9fd378" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; instance used for calculating the date-time fields and the instant of time.</source>
          <target state="translated">&lt;a href=&quot;../util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;の日付・時刻フィールドと時間の瞬間を計算するために使用されるインスタンス。</target>
        </trans-unit>
        <trans-unit id="5e38b37aeff6c0bffbe4d4c7f1f5d153a7812a9f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; instance used for calculating the date-time fields and the instant of time. This field is used for both formatting and parsing.</source>
          <target state="translated">&lt;a href=&quot;../util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;の日付・時刻フィールドと時間の瞬間を計算するために使用されるインスタンス。このフィールドは、フォーマットと解析の両方に使用されます。</target>
        </trans-unit>
        <trans-unit id="d349e9ab300acec984275666f0f2f7898835dbbc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt;&lt;code&gt;CompletableFuture&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;#onExit()&quot;&gt;&lt;code&gt;onExit()&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;../util/concurrent/completablefuture#complete(T)&quot;&gt;&lt;code&gt;completed&lt;/code&gt;&lt;/a&gt; when the process has terminated.</source>
          <target state="translated">&lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt; &lt;code&gt;CompletableFuture&lt;/code&gt; &lt;/a&gt;からの&lt;a href=&quot;#onExit()&quot;&gt; &lt;code&gt;onExit()&lt;/code&gt; &lt;/a&gt;されて&lt;a href=&quot;../util/concurrent/completablefuture#complete(T)&quot;&gt; &lt;code&gt;completed&lt;/code&gt; &lt;/a&gt;、プロセスが終了したとき。</target>
        </trans-unit>
        <trans-unit id="19b1c9756a7bb0fa30123a5de981aa066dd9f14b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt;&lt;code&gt;CompletableFuture&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;#onExit()&quot;&gt;&lt;code&gt;onExit()&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;../util/concurrent/completablefuture#complete(T)&quot;&gt;completed&lt;/a&gt; when the process has terminated.</source>
          <target state="translated">&lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt; &lt;code&gt;CompletableFuture&lt;/code&gt; &lt;/a&gt;からの&lt;a href=&quot;#onExit()&quot;&gt; &lt;code&gt;onExit()&lt;/code&gt; &lt;/a&gt;されて&lt;a href=&quot;../util/concurrent/completablefuture#complete(T)&quot;&gt;完了し&lt;/a&gt;、プロセスが終了したとき。</target>
        </trans-unit>
        <trans-unit id="8df3e7a33aa49e28a1192bcf36d057cf0293415b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneid#getId()&quot;&gt;&lt;code&gt;zone ID&lt;/code&gt;&lt;/a&gt;. This is not part of the ISO-8601 standard. Parsing is case sensitive.</source>
          <target state="translated">&lt;a href=&quot;../zoneid#getId()&quot;&gt; &lt;code&gt;zone ID&lt;/code&gt; &lt;/a&gt;。これはISO-8601標準の一部ではありません。解析では大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="bde57531a30d3dd5f7c37db7a69c3a1d61935c91" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;zone ID&lt;/code&gt;&lt;/a&gt;. This is not part of the ISO-8601 standard. Parsing is case sensitive.</source>
          <target state="translated">&lt;a href=&quot;../zoneid#getId--&quot;&gt; &lt;code&gt;zone ID&lt;/code&gt; &lt;/a&gt;。これはISO-8601規格の一部ではありません。解析では大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="526e36bd9e115421a045dc56e1f87a5c3579d0c0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons or seconds. An offset of zero uses &quot;GMT&quot;. North American zone names and military zone names are not handled.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;コロンまたは秒なし。ゼロのオフセットは「GMT」を使用します。北米のゾーン名と軍事ゾーンの名前は処理されません。</target>
        </trans-unit>
        <trans-unit id="e56b90af9202ee373bfa47364f3304adf4ca57ec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. The offset parsing is lenient, which allows the minutes and seconds to be optional. Parsing is case insensitive.</source>
          <target state="translated">コロンなしの&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。オフセットに秒がある場合、これはISO-8601標準の一部ではありませんが、それらは処理されます。オフセット解析は寛大であり、分と秒をオプションにすることができます。解析では大文字と小文字は区別されません。</target>
        </trans-unit>
        <trans-unit id="5535a010f39cfbe7cdfaf718c4a1e14b41ecdf58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。オフセットに秒がある場合、これはISO-8601標準の一部ではありませんが、それらは処理されます。</target>
        </trans-unit>
        <trans-unit id="144173739cb700aa98d81173233fe566b6071553" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. Parsing is case insensitive.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。オフセットに秒がある場合、これはISO-8601標準の一部ではありませんが、それらは処理されます。解析では大文字と小文字は区別されません。</target>
        </trans-unit>
        <trans-unit id="50f628752614c2df8ca094659bb098d1157b0637" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. The offset parsing is lenient, which allows the minutes and seconds to be optional. Parsing is case insensitive.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。オフセットに秒がある場合、これはISO-8601標準の一部ではありませんが、それらは処理されます。オフセット解析は寛大であり、分と秒をオプションにすることができます。解析では大文字と小文字は区別されません。</target>
        </trans-unit>
        <trans-unit id="d3169944a88bbb1bad97a1a30cd73363ef99816c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons or seconds. An offset of zero uses &quot;GMT&quot;. North American zone names and military zone names are not handled.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;コロンまたは秒なし。ゼロのオフセットは「GMT」を使用します。北米のゾーン名と軍事ゾーン名は処理されません。</target>
        </trans-unit>
        <trans-unit id="ccd8df3518a4d9b943302ee23512831c55573aa6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. Parsing is case insensitive.</source>
          <target state="translated">コロンなしの&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。オフセットに秒がある場合、これはISO-8601標準の一部ではありませんが、それらは処理されます。解析では大文字と小文字が区別されません。</target>
        </trans-unit>
        <trans-unit id="ef469acd11a9914f386735c8a07ac2ef3e1fdbdb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。オフセットに秒がある場合、これはISO-8601標準の一部ではありませんが、それらは処理されます。</target>
        </trans-unit>
        <trans-unit id="7eb4562aec376d8a60cf8842edb8d8443f0a1248" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. Parsing is case insensitive.</source>
          <target state="translated">&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。オフセットに秒がある場合、これはISO-8601標準の一部ではありませんが、それらは処理されます。解析では大文字と小文字が区別されません。</target>
        </trans-unit>
        <trans-unit id="fbbeb22d9b7e39547534480fe8598ea8d98e6e22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt;&lt;/a&gt; class serves as a useful superclass for defining locks and other synchronizers that rely on queuing blocked threads. The &lt;a href=&quot;abstractqueuedlongsynchronizer&quot;&gt;&lt;code&gt;AbstractQueuedLongSynchronizer&lt;/code&gt;&lt;/a&gt; class provides the same functionality but extends support to 64 bits of synchronization state. Both extend class &lt;a href=&quot;abstractownablesynchronizer&quot;&gt;&lt;code&gt;AbstractOwnableSynchronizer&lt;/code&gt;&lt;/a&gt;, a simple class that helps record the thread currently holding exclusive synchronization. The &lt;a href=&quot;locksupport&quot;&gt;&lt;code&gt;LockSupport&lt;/code&gt;&lt;/a&gt; class provides lower-level blocking and unblocking support that is useful for those developers implementing their own customized lock classes.</source>
          <target state="translated">&lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; の&lt;/a&gt;クラスは、ロックとブロックされたスレッドのキューイングに依存する他のシンクロナイザを定義するのに有用なスーパークラスとして機能します。&lt;a href=&quot;abstractqueuedlongsynchronizer&quot;&gt; &lt;code&gt;AbstractQueuedLongSynchronizer&lt;/code&gt; の&lt;/a&gt;クラスは、同じ機能を提供するが、同期状態の64ビットのサポートを拡張します。どちらも、クラス&lt;a href=&quot;abstractownablesynchronizer&quot;&gt; &lt;code&gt;AbstractOwnableSynchronizer&lt;/code&gt; を&lt;/a&gt;拡張します。これは、現在排他的同期を保持しているスレッドの記録に役立つ単純なクラスです。&lt;a href=&quot;locksupport&quot;&gt; &lt;code&gt;LockSupport&lt;/code&gt; の&lt;/a&gt;クラスは、独自のカスタマイズされたロッククラスを実装するこれらの開発者にとって便利である低レベルのブロックと解除のサポートを提供します。</target>
        </trans-unit>
        <trans-unit id="cfef7de48d524821a8ec7c9579af151f13cdc049" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accesscontroller#checkPermission-java.security.Permission-&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method determines whether the access request indicated by a specified permission should be granted or denied. A sample call appears below. In this example, &lt;code&gt;checkPermission&lt;/code&gt; will determine whether or not to grant &quot;read&quot; access to the file named &quot;testFile&quot; in the &quot;/temp&quot; directory.</source>
          <target state="translated">&lt;a href=&quot;accesscontroller#checkPermission-java.security.Permission-&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;メソッドは、指定したアクセス権によって示されるアクセス要求が許可または拒否すべきかどうかを判断します。呼び出しの例を以下に示します。この例では、 &lt;code&gt;checkPermission&lt;/code&gt; は、「/ temp」ディレクトリ内の「testFile」という名前のファイルへの「読み取り」アクセスを許可するかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="8838fb229596af6a0b8d0c55ad981647e1961bd8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessibleaction&quot;&gt;AccessibleAction&lt;/a&gt; interface should be supported by any object that can perform one or more actions. This interface provides the standard mechanism for an assistive technology to determine what those actions are as well as tell the object to perform those actions. Any object that can be manipulated should support this interface.</source>
          <target state="translated">&lt;a href=&quot;accessibleaction&quot;&gt;たAccessibleActionの&lt;/a&gt;インタフェースは、1つ以上のアクションを実行できるすべてのオブジェクトによってサポートされなければなりません。このインターフェースは、これらのアクションが何であるかを判別し、それらのアクションを実行するようにオブジェクトに指示するための支援技術の標準メカニズムを提供します。操作可能なオブジェクトはすべて、このインターフェイスをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="8ae7ddd5290d55c841db71019a71a67d5d9c493e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt;&lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt;&lt;/a&gt; method allows you to obtain the localized string for a locale independent key from a predefined &lt;code&gt;ResourceBundle&lt;/code&gt; for the keys defined in this class.</source>
          <target state="translated">&lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt; &lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt; &lt;/a&gt;メソッドを使用すると、あらかじめ定義されたから、ロケールに依存しないキーのためのローカライズされた文字列取得することができ &lt;code&gt;ResourceBundle&lt;/code&gt; このクラスで定義されたキーのために。</target>
        </trans-unit>
        <trans-unit id="9b77e4ce5068ed5e85d6cc9ed7b115da4ecc9dd1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessiblecomponent&quot;&gt;AccessibleComponent&lt;/a&gt; interface should be supported by any object that is rendered on the screen. This interface provides the standard mechanism for an assistive technology to determine and set the graphical representation of an object.</source>
          <target state="translated">&lt;a href=&quot;accessiblecomponent&quot;&gt;AccessibleComponent内&lt;/a&gt;インターフェイスは、画面に描画されるすべてのオブジェクトによってサポートされなければなりません。このインターフェイスは、オブジェクトのグラフィック表現を決定および設定するための支援技術の標準メカニズムを提供します。</target>
        </trans-unit>
        <trans-unit id="b94cfd97d9dd9fae4586187050765fb100010225" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessiblehypertext&quot;&gt;AccessibleHypertext&lt;/a&gt; interface should be supported by any object that presents hypertext information on the display. This interface provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. It also provides standard mechanisms for manipulating &lt;a href=&quot;#AccessibleHyperlink&quot;&gt;hyperlinks&lt;/a&gt;. Applications can determine if an object supports the AccessibleHypertext interface by first obtaining its &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt; (see &lt;a href=&quot;#Accessible&quot;&gt;Accessible&lt;/a&gt;) and then calling the AccessibleContext.getAccessibleText() method of &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt;. If the return value is a class which extends AccessibleHypertext, then that object supports AccessibleHypertext.</source>
          <target state="translated">&lt;a href=&quot;accessiblehypertext&quot;&gt;AccessibleHypertextの&lt;/a&gt;インターフェースは、ディスプレイ上の任意のオブジェクトそのプレゼントのハイパーテキスト情報によってサポートされる必要があります。このインターフェースは、コンテンツ、属性、および空間的位置を介してそのテキストにアクセスするための支援技術の標準メカニズムを提供します。また、&lt;a href=&quot;#AccessibleHyperlink&quot;&gt;ハイパーリンク&lt;/a&gt;を操作するための標準的なメカニズムも提供します。オブジェクトが最初に取得することによってAccessibleHypertextインタフェースをサポートするかどうかを判定することができる&lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContextを&lt;/a&gt;（参照&lt;a href=&quot;#Accessible&quot;&gt;アクセ&lt;/a&gt;）、その後のAccessibleContext.getAccessibleText（）メソッドを呼び出す&lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContextを&lt;/a&gt;。戻り値がAccessibleHypertextを拡張するクラスである場合、そのオブジェクトはAccessibleHypertextをサポートします。</target>
        </trans-unit>
        <trans-unit id="c497281662eb34297821a824dd4c89d1971de1a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessibleselection&quot;&gt;AccessibleSelection&lt;/a&gt; interface provides the standard mechanism for an assistive technology to determine what the current selected children are, as well as modify the selection set. Any object that has children that can be selected should support this the AccessibleSelection interface.</source>
          <target state="translated">&lt;a href=&quot;accessibleselection&quot;&gt;たAccessibleSelectionの&lt;/a&gt;インタフェースは、選択されているセットを変更すると、現在選択されている子どもたちが何であるかを決定するために支援技術のための標準的なメカニズムを提供します。選択可能な子を持つオブジェクトはすべて、このAccessibleSelectionインターフェイスをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="fd58f92dbbbde65bfcc823d640b8c8cf6f567063" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessiblevalue&quot;&gt;AccessibleValue&lt;/a&gt; interface should be supported by any object that supports a numerical value (e.g., a scroll bar). This interface provides the standard mechanism for an assistive technology to determine and set the numerical value as well as get the minimum and maximum values.</source>
          <target state="translated">&lt;a href=&quot;accessiblevalue&quot;&gt;たAccessibleValueの&lt;/a&gt;インタフェースは、数値をサポートするすべてのオブジェクト（スクロールバーなど）によってサポートされる必要があります。このインターフェースは、数値を決定および設定し、最小値と最大値を取得するための支援技術の標準メカニズムを提供します。</target>
        </trans-unit>
        <trans-unit id="7af739ac4d097cac2c6f5ee5bae27b0834134652" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#flags&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentryflag&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; to indicate how entries are inherited and propagated</source>
          <target state="translated">&lt;a href=&quot;aclentry#flags&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt;コンポーネントは、一連のある&lt;a href=&quot;aclentryflag&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt;エントリは継承され、伝播される方法を示すために、</target>
        </trans-unit>
        <trans-unit id="69c9b8c45ab29ebc4b01d4e76c2c7f6f5bb01e81" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#permissions--&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentrypermission&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;aclentry#permissions--&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;コンポーネントは、一連のある&lt;a href=&quot;aclentrypermission&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4243500d113a1e8dca92fc8e0626cf084b1c7810" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#principal--&quot;&gt;&lt;code&gt;principal&lt;/code&gt;&lt;/a&gt; component, sometimes called the &quot;who&quot; component, is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; corresponding to the identity that the entry grants or denies access</source>
          <target state="translated">&lt;a href=&quot;aclentry#principal--&quot;&gt; &lt;code&gt;principal&lt;/code&gt; &lt;/a&gt;時々 「A」成分と呼ばれるコンポーネントは、ある&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;アクセスを拒否エントリー許可こと又はアイデンティティに対応します</target>
        </trans-unit>
        <trans-unit id="f2f5e00fa6ae64b393f6e7d80594412fecc00383" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#type--&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; component determines if the entry grants or denies access.</source>
          <target state="translated">&lt;a href=&quot;aclentry#type--&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;エントリが許可またはアクセスを拒否した場合にコンポーネントが判定する。</target>
        </trans-unit>
        <trans-unit id="f7f010146e9231a02191ac41817da03a8fd8aa8b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclfileattributeview&quot;&gt;&lt;code&gt;AclFileAttributeView&lt;/code&gt;&lt;/a&gt; class defines methods to read and write the Access Control List (ACL) file attribute. The ACL model used by this file attribute view is based on the model defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt; &lt;i&gt;RFC 3530: Network File System (NFS) version 4 Protocol&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;aclfileattributeview&quot;&gt; &lt;code&gt;AclFileAttributeView&lt;/code&gt; の&lt;/a&gt;クラスは、アクセス制御リスト（ACL）のファイル属性を読み書きするメソッドを定義します。このファイル属性ビューで使用されるACLモデルは以下のように定義モデルに基づいて&lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;ネットワークファイルシステム（NFS）バージョン4プロトコル：RFC 3530&lt;/i&gt;&lt;/a&gt;。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="6e848514b94f774e446819119d8e71216465a42c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclfileattributeview&quot;&gt;&lt;code&gt;AclFileAttributeView&lt;/code&gt;&lt;/a&gt; class defines methods to read and write the Access Control List (ACL) file attribute. The ACL model used by this file attribute view is based on the model defined by &lt;a href=&quot;https://www.ietf.org/rfc/rfc3530.txt&quot;&gt; &lt;i&gt;RFC 3530: Network File System (NFS) version 4 Protocol&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf038cbd7c0a12c38ae8e3f28f385b0f66f7649" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;alphacomposite#SRC_OVER&quot;&gt;&lt;code&gt;AlphaComposite.SRC_OVER&lt;/code&gt;&lt;/a&gt; rule.</source>
          <target state="translated">&lt;a href=&quot;alphacomposite#SRC_OVER&quot;&gt; &lt;code&gt;AlphaComposite.SRC_OVER&lt;/code&gt; の&lt;/a&gt;ルール。</target>
        </trans-unit>
        <trans-unit id="d757646f4f57b621bdd66e46c7cc777a0dd7b6f0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;annotatedelement#getAnnotationsByType-java.lang.Class-&quot;&gt;&lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;annotatedelement#getDeclaredAnnotationsByType-java.lang.Class-&quot;&gt;&lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; methods support multiple annotations of the same type on an element. If the argument to either method is a repeatable annotation type (JLS 9.6), then the method will &quot;look through&quot; a container annotation (JLS 9.7), if present, and return any annotations inside the container. Container annotations may be generated at compile-time to wrap multiple annotations of the argument type.</source>
          <target state="translated">&lt;a href=&quot;annotatedelement#getAnnotationsByType-java.lang.Class-&quot;&gt; &lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;annotatedelement#getDeclaredAnnotationsByType-java.lang.Class-&quot;&gt; &lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt;メソッドは、要素上で同じタイプの複数の注釈をサポートします。いずれかのメソッドへの引数が繰り返し可能なアノテーションタイプ（JLS 9.6）である場合、メソッドはコンテナアノテーション（JLS 9.7）を「調べ」、存在する場合はコンテナアノテーションを返します。コンテナアノテーションは、コンパイル時に引数型の複数のアノテーションをラップするために生成される場合があります。</target>
        </trans-unit>
        <trans-unit id="5538279924c592259bec4c32883911ad4ee9986c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asynchronouschannelgroup#shutdown--&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; method is used to initiate an &lt;em&gt;orderly shutdown&lt;/em&gt; of a group. An orderly shutdown marks the group as shutdown; further attempts to construct a channel that binds to the group will throw &lt;a href=&quot;shutdownchannelgroupexception&quot;&gt;&lt;code&gt;ShutdownChannelGroupException&lt;/code&gt;&lt;/a&gt;. Whether or not a group is shutdown can be tested using the &lt;a href=&quot;asynchronouschannelgroup#isShutdown--&quot;&gt;&lt;code&gt;isShutdown&lt;/code&gt;&lt;/a&gt; method. Once shutdown, the group &lt;em&gt;terminates&lt;/em&gt; when all asynchronous channels that are bound to the group are closed, all actively executing completion handlers have run to completion, and resources used by the group are released. No attempt is made to stop or interrupt threads that are executing completion handlers. The &lt;a href=&quot;asynchronouschannelgroup#isTerminated--&quot;&gt;&lt;code&gt;isTerminated&lt;/code&gt;&lt;/a&gt; method is used to test if the group has terminated, and the &lt;a href=&quot;asynchronouschannelgroup#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; method can be used to block until the group has terminated.</source>
          <target state="translated">&lt;a href=&quot;asynchronouschannelgroup#shutdown--&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt;方法を開始するために使用される&lt;em&gt;正常シャットダウン&lt;/em&gt;グループを。通常のシャットダウンは、グループをシャットダウンとしてマークします。グループにバインドするチャネルをさらに構築しようとすると、&lt;a href=&quot;shutdownchannelgroupexception&quot;&gt; &lt;code&gt;ShutdownChannelGroupException&lt;/code&gt; &lt;/a&gt;がスローされます。グループがシャットダウンされているかどうかは、&lt;a href=&quot;asynchronouschannelgroup#isShutdown--&quot;&gt; &lt;code&gt;isShutdown&lt;/code&gt; &lt;/a&gt;メソッドを使用してテストできます。シャットダウンすると、グループの&lt;em&gt;終了は、&lt;/em&gt;グループにバインドされているすべての非同期チャネルが閉じられたときに、すべての実行中のアクティブな完了ハンドラが完了するまで実行しており、グループで使用されるリソースが解放されます。完了ハンドラを実行しているスレッドを停止または中断する試みは行われません。&lt;a href=&quot;asynchronouschannelgroup#isTerminated--&quot;&gt; &lt;code&gt;isTerminated&lt;/code&gt; の&lt;/a&gt;方法は、グループが終了した場合、テストに使用され、&lt;a href=&quot;asynchronouschannelgroup#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;メソッドを使用すると、グループが終了するまでブロックできます。</target>
        </trans-unit>
        <trans-unit id="b514369062ab3b9e80aad31b822e6bf912e55f38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asynchronouschannelgroup#shutdownNow--&quot;&gt;&lt;code&gt;shutdownNow&lt;/code&gt;&lt;/a&gt; method can be used to initiate a &lt;em&gt;forceful shutdown&lt;/em&gt; of the group. In addition to the actions performed by an orderly shutdown, the &lt;code&gt;shutdownNow&lt;/code&gt; method closes all open channels in the group as if by invoking the &lt;a href=&quot;asynchronouschannel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;asynchronouschannelgroup#shutdownNow--&quot;&gt; &lt;code&gt;shutdownNow&lt;/code&gt; のの&lt;/a&gt;方法は、開始するために使用することができる&lt;em&gt;強力なシャットダウン&lt;/em&gt;グループのを。通常のシャットダウンによって実行されるアクションに加えて、 &lt;code&gt;shutdownNow&lt;/code&gt; メソッドは、&lt;a href=&quot;asynchronouschannel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドを呼び出したかのように、グループ内のすべての開いているチャネルを閉じます。</target>
        </trans-unit>
        <trans-unit id="b0ba63e1a3f588adc27a9ff386437373fd12a3c2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asynchronoussocketchannel#read-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asynchronoussocketchannel#write-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods defined by this class allow a timeout to be specified when initiating a read or write operation. If the timeout elapses before an operation completes then the operation completes with the exception &lt;a href=&quot;interruptedbytimeoutexception&quot;&gt;&lt;code&gt;InterruptedByTimeoutException&lt;/code&gt;&lt;/a&gt;. A timeout may leave the channel, or the underlying connection, in an inconsistent state. Where the implementation cannot guarantee that bytes have not been read from the channel then it puts the channel into an implementation specific &lt;em&gt;error state&lt;/em&gt;. A subsequent attempt to initiate a &lt;code&gt;read&lt;/code&gt; operation causes an unspecified runtime exception to be thrown. Similarly if a &lt;code&gt;write&lt;/code&gt; operation times out and the implementation cannot guarantee bytes have not been written to the channel then further attempts to &lt;code&gt;write&lt;/code&gt; to the channel cause an unspecified runtime exception to be thrown. When a timeout elapses then the state of the &lt;a href=&quot;../bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, or the sequence of buffers, for the I/O operation is not defined. Buffers should be discarded or at least care must be taken to ensure that the buffers are not accessed while the channel remains open. All methods that accept timeout parameters treat values less than or equal to zero to mean that the I/O operation does not timeout.</source>
          <target state="translated">&lt;a href=&quot;asynchronoussocketchannel#read-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;asynchronoussocketchannel#write-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;、このクラスで定義されたメソッドは、読み取りまたは書き込み操作を開始するときのタイムアウトを指定することができます。操作が完了する前にタイムアウトが経過すると、操作は例外&lt;a href=&quot;interruptedbytimeoutexception&quot;&gt; &lt;code&gt;InterruptedByTimeoutException&lt;/code&gt; で&lt;/a&gt;完了します。タイムアウトにより、チャネルまたは基礎となる接続が不整合な状態になる場合があります。実装がチャネルからバイトが読み取られていないことを保証できない場合、チャネルは実装固有の&lt;em&gt;エラー状態になり&lt;/em&gt;ます。その後、 &lt;code&gt;read&lt;/code&gt; 操作を開始しようとすると、不特定の実行時例外がスローされます。同様に、 &lt;code&gt;write&lt;/code&gt; 操作がタイムアウトし、実装がバイトがチャネルに書き込まれていないことを保証できない場合、チャネルへの &lt;code&gt;write&lt;/code&gt; をさらに試行すると、不特定のランタイム例外がスローされます。タイムアウトが経過すると、入出力操作の&lt;a href=&quot;../bytebuffer&quot;&gt; &lt;code&gt;ByteBuffer&lt;/code&gt; &lt;/a&gt;の状態または一連のバッファーは定義されません。バッファを破棄するか、少なくともチャネルが開いている間はバッファにアクセスしないように注意する必要があります。タイムアウトパラメータを受け入れるすべてのメソッドは、ゼロ以下の値を処理して、I / O操作がタイムアウトしないことを意味します。</target>
        </trans-unit>
        <trans-unit id="ff23faa6b9710e7149b05774884ffc2d0c84dc55" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;atomicintegerarray&quot;&gt;&lt;code&gt;AtomicIntegerArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;atomiclongarray&quot;&gt;&lt;code&gt;AtomicLongArray&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;atomicreferencearray&quot;&gt;&lt;code&gt;AtomicReferenceArray&lt;/code&gt;&lt;/a&gt; classes further extend atomic operation support to arrays of these types. These classes are also notable in providing &lt;code&gt;volatile&lt;/code&gt; access semantics for their array elements, which is not supported for ordinary arrays.</source>
          <target state="translated">&lt;a href=&quot;atomicintegerarray&quot;&gt; &lt;code&gt;AtomicIntegerArray&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;atomiclongarray&quot;&gt; &lt;code&gt;AtomicLongArray&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;atomicreferencearray&quot;&gt; &lt;code&gt;AtomicReferenceArray&lt;/code&gt; の&lt;/a&gt;クラスはさらに、これらのタイプのアレイにアトミック操作をサポートして延びています。これらのクラスは、それらの配列要素に &lt;code&gt;volatile&lt;/code&gt; アクセスセマンティクスを提供する点でも注目に値しますが、これは通常の配列ではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="7021ba930ee249423077383cf0109781f9028e26" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;atomicintegerarray&quot;&gt;&lt;code&gt;AtomicIntegerArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;atomiclongarray&quot;&gt;&lt;code&gt;AtomicLongArray&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;atomicreferencearray&quot;&gt;&lt;code&gt;AtomicReferenceArray&lt;/code&gt;&lt;/a&gt; classes further extend atomic operation support to arrays of these types. These classes are also notable in providing &lt;code&gt;volatile&lt;/code&gt; access semantics for their array elements.</source>
          <target state="translated">&lt;a href=&quot;atomicintegerarray&quot;&gt; &lt;code&gt;AtomicIntegerArray&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;atomiclongarray&quot;&gt; &lt;code&gt;AtomicLongArray&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;atomicreferencearray&quot;&gt; &lt;code&gt;AtomicReferenceArray&lt;/code&gt; の&lt;/a&gt;クラスはさらに、これらのタイプのアレイにアトミック操作をサポートして延びています。これらのクラスは、配列要素に &lt;code&gt;volatile&lt;/code&gt; アクセスセマンティクスを提供する点でも注目に値します。</target>
        </trans-unit>
        <trans-unit id="154013ac578d40011c0e881853d2d1cf4c7084e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;atomicmarkablereference&quot;&gt;&lt;code&gt;AtomicMarkableReference&lt;/code&gt;&lt;/a&gt; class associates a single boolean with a reference. For example, this bit might be used inside a data structure to mean that the object being referenced has logically been deleted. The &lt;a href=&quot;atomicstampedreference&quot;&gt;&lt;code&gt;AtomicStampedReference&lt;/code&gt;&lt;/a&gt; class associates an integer value with a reference. This may be used for example, to represent version numbers corresponding to series of updates.</source>
          <target state="translated">&lt;a href=&quot;atomicmarkablereference&quot;&gt; &lt;code&gt;AtomicMarkableReference&lt;/code&gt; の&lt;/a&gt;クラスは参照して、単一のブール値を関連付けます。たとえば、このビットはデータ構造内で使用され、参照されているオブジェクトが論理的に削除されたことを意味します。&lt;a href=&quot;atomicstampedreference&quot;&gt; &lt;code&gt;AtomicStampedReference&lt;/code&gt; の&lt;/a&gt;クラスは、参照して整数値を関連付けます。これは、たとえば、一連の更新に対応するバージョン番号を表すために使用できます。</target>
        </trans-unit>
        <trans-unit id="4e0bb33867e93c786974aecb9c28853d1fb48aa1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; is required to be supported and therefore the set contains at least one element, &quot;basic&quot;.</source>
          <target state="translated">&lt;a href=&quot;attribute/basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; を&lt;/a&gt;サポートするために必要なので、セットには、「基本」、少なくとも1つの元素を含んでいます。</target>
        </trans-unit>
        <trans-unit id="42fec1b7f85b596fee4ca045a99c27b6e05ae27f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;attribute/package-summary&quot;&gt;&lt;code&gt;javax.print.attribute&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;attribute/standard/package-summary&quot;&gt;&lt;code&gt;javax.print.attribute.standard&lt;/code&gt;&lt;/a&gt; packages define print attributes, which describe the capabilities of a print service, specify the requirements of a print job, and track the progress of a print job.</source>
          <target state="translated">&lt;a href=&quot;attribute/package-summary&quot;&gt; &lt;code&gt;javax.print.attribute&lt;/code&gt; の&lt;/a&gt;と&lt;a href=&quot;attribute/standard/package-summary&quot;&gt; &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; の&lt;/a&gt;パッケージは、印刷ジョブの要件を指定して、プリントサービスの機能について説明した印刷属性を、定義、および印刷ジョブの進捗状況を追跡します。</target>
        </trans-unit>
        <trans-unit id="1bec0e906f3a1df2a6a9ba13ac4e098e5f62af15" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;AudioSystem&lt;/code&gt;&lt;/a&gt; class includes methods for determining the format of an audio file, obtaining an audio input stream from an audio file, and writing an audio file from an audio input stream.</source>
          <target state="translated">&lt;a href=&quot;audiosystem&quot;&gt; &lt;code&gt;AudioSystem&lt;/code&gt; &lt;/a&gt;クラスは、オーディオファイルからのオーディオ入力ストリームを取得し、オーディオファイルのフォーマットを決定するための方法を含み、オーディオ入力ストリームからオーディオファイルを書き込みます。</target>
        </trans-unit>
        <trans-unit id="5ac6194267d0e25c2097930b8f5fbaf32e490bf5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; class defines methods to read and update a &lt;em&gt;basic&lt;/em&gt; set of file attributes that are common to many file systems.</source>
          <target state="translated">&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;読んで、更新するクラスを定義する方法&lt;em&gt;の基本的な&lt;/em&gt;多くのファイルシステムに共通しているファイル属性のセットを。</target>
        </trans-unit>
        <trans-unit id="9008207e38a099728a1e599c9fd10ddfa22dae76" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;bigdecimal#toEngineeringString--&quot;&gt;&lt;code&gt;toEngineeringString()&lt;/code&gt;&lt;/a&gt; method may be used for presenting numbers with exponents in engineering notation, and the &lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt;&lt;code&gt;setScale&lt;/code&gt;&lt;/a&gt; method may be used for rounding a &lt;code&gt;BigDecimal&lt;/code&gt; so it has a known number of digits after the decimal point.</source>
          <target state="translated">&lt;a href=&quot;bigdecimal#toEngineeringString--&quot;&gt; &lt;code&gt;toEngineeringString()&lt;/code&gt; &lt;/a&gt;メソッドは、工学表記で指数と番号を提示するために使用することができる、および&lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt; &lt;code&gt;setScale&lt;/code&gt; の&lt;/a&gt;方法は、丸めのために使用することができる &lt;code&gt;BigDecimal&lt;/code&gt; 、それが小数点の後の桁の既知数を持つように。</target>
        </trans-unit>
        <trans-unit id="e2929b7aad495e34766a177c1e114f9cc3750748" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;blockingdeque&quot;&gt;&lt;code&gt;BlockingDeque&lt;/code&gt;&lt;/a&gt; interface extends &lt;code&gt;BlockingQueue&lt;/code&gt; to support both FIFO and LIFO (stack-based) operations. Class &lt;a href=&quot;linkedblockingdeque&quot;&gt;&lt;code&gt;LinkedBlockingDeque&lt;/code&gt;&lt;/a&gt; provides an implementation.</source>
          <target state="translated">&lt;a href=&quot;blockingdeque&quot;&gt; &lt;code&gt;BlockingDeque&lt;/code&gt; &lt;/a&gt;インタフェースは延び &lt;code&gt;BlockingQueue&lt;/code&gt; のが両方FIFOとLIFO（スタックベース）操作をサポートします。クラス&lt;a href=&quot;linkedblockingdeque&quot;&gt; &lt;code&gt;LinkedBlockingDeque&lt;/code&gt; &lt;/a&gt;は実装を提供します。</target>
        </trans-unit>
        <trans-unit id="b2fd22bc1464c414a0571863354563eb9bb6d8fd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;calendar#HOUR_OF_DAY&quot;&gt;&lt;code&gt;HOUR_OF_DAY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;calendar#HOUR&quot;&gt;&lt;code&gt;HOUR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#AM_PM&quot;&gt;&lt;code&gt;AM_PM&lt;/code&gt;&lt;/a&gt; fields are handled independently and the &lt;a href=&quot;#time_resolution&quot;&gt;the resolution rule for the time of day&lt;/a&gt; is applied. Clearing one of the fields doesn't reset the hour of day value of this &lt;code&gt;Calendar&lt;/code&gt;. Use &lt;a href=&quot;calendar#set-int-int-&quot;&gt;&lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt;&lt;/a&gt; to reset the hour value.</source>
          <target state="translated">&lt;a href=&quot;calendar#HOUR_OF_DAY&quot;&gt; &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;calendar#HOUR&quot;&gt; &lt;code&gt;HOUR&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;calendar#AM_PM&quot;&gt; &lt;code&gt;AM_PM&lt;/code&gt; &lt;/a&gt;フィールドは、独立して処理され、&lt;a href=&quot;#time_resolution&quot;&gt;その日の時間分解能のルールが&lt;/a&gt;適用されます。いずれかのフィールドをクリアしても、この &lt;code&gt;Calendar&lt;/code&gt; 時間の値はリセットされません。時間の値をリセットするには&lt;a href=&quot;calendar#set-int-int-&quot;&gt; &lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="f04591de46efc6d10158813651253c9ef9e12e5d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;certpathbuilder#getRevocationChecker--&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathBuilder&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">&lt;a href=&quot;certpathbuilder#getRevocationChecker--&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt;メソッドは、アプリケーションにより使用される追加のアルゴリズム固有のパラメータとオプションを指定することを可能に &lt;code&gt;CertPathBuilder&lt;/code&gt; 証明書の失効ステータスをチェックするときに。これは、PKIXアルゴリズムでどのように使用されるかを示す例です。</target>
        </trans-unit>
        <trans-unit id="c2fe006c42d37a0e6b495c7077cf3ce1bbd6e97e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;certpathvalidator#getRevocationChecker--&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathValidator&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">&lt;a href=&quot;certpathvalidator#getRevocationChecker--&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt;メソッドは、アプリケーションにより使用される追加のアルゴリズム固有のパラメータとオプションを指定することを可能に &lt;code&gt;CertPathValidator&lt;/code&gt; 証明書の失効ステータスをチェックするときに。これは、PKIXアルゴリズムでどのように使用されるかを示す例です。</target>
        </trans-unit>
        <trans-unit id="353391e89ff7caccf4fa0ecf1b6ada580292d90f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; interface is extended by several other interfaces.</source>
          <target state="translated">&lt;a href=&quot;channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt;インターフェースは、いくつかの他のインタフェースによって拡張されます。</target>
        </trans-unit>
        <trans-unit id="12b29184356586926a8d665851524b8f725c12e2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;channels&quot;&gt;&lt;code&gt;Channels&lt;/code&gt;&lt;/a&gt; utility class defines static methods that support the interoperation of the stream classes of the &lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt; package with the channel classes of this package. An appropriate channel can be constructed from an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt;, and conversely an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt; can be constructed from a channel. A &lt;a href=&quot;../../io/reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to decode bytes from a given readable byte channel, and conversely a &lt;a href=&quot;../../io/writer&quot;&gt;&lt;code&gt;Writer&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to encode characters into bytes and write them to a given writable byte channel.</source>
          <target state="translated">&lt;a href=&quot;channels&quot;&gt; &lt;code&gt;Channels&lt;/code&gt; &lt;/a&gt;ユーティリティクラスは、ストリームクラスの相互運用サポートする静的メソッド定義&lt;a href=&quot;../../io/package-summary&quot;&gt; &lt;code&gt;java.io&lt;/code&gt; &lt;/a&gt;このパッケージのチャネルクラスとパッケージを。適切なチャネルは、&lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;から構築でき、逆に、&lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;はチャネルから構築できます。特定の文字セットを使用して特定の読み取り可能なバイトチャネルからバイトをデコードする&lt;a href=&quot;../../io/reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt;を構築でき、逆に、特定の文字セットを使用して文字をバイトにエンコードし、特定の書き込み可能なバイトチャネルに書き込む&lt;a href=&quot;../../io/writer&quot;&gt; &lt;code&gt;Writer&lt;/code&gt; &lt;/a&gt;を構築できます。</target>
        </trans-unit>
        <trans-unit id="13bd1e29b4330451ff38da9cb77e5dbd6672f0ec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;channels&quot;&gt;&lt;code&gt;Channels&lt;/code&gt;&lt;/a&gt; utility class defines static methods that support the interoperation of the stream classes of the &lt;code&gt;&lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; package with the channel classes of this package. An appropriate channel can be constructed from an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt;, and conversely an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt; can be constructed from a channel. A &lt;a href=&quot;../../io/reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to decode bytes from a given readable byte channel, and conversely a &lt;a href=&quot;../../io/writer&quot;&gt;&lt;code&gt;Writer&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to encode characters into bytes and write them to a given writable byte channel.</source>
          <target state="translated">&lt;a href=&quot;channels&quot;&gt; &lt;code&gt;Channels&lt;/code&gt; &lt;/a&gt;ユーティリティクラスは、ストリームクラスの相互運用サポートする静的メソッド定義 &lt;code&gt;&lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; このパッケージのチャネルクラスとパッケージを。&lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;から適切なチャネルを構築でき、逆に、チャネルから&lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;を構築できます。特定の文字セットを使用して特定の読み取り可能なバイトチャネルからバイトをデコードする&lt;a href=&quot;../../io/reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt;を構築できます。逆に、特定の文字セットを使用して文字をバイトにエンコードし、特定の書き込み可能なバイトチャネルに書き込む&lt;a href=&quot;../../io/writer&quot;&gt; &lt;code&gt;Writer&lt;/code&gt; &lt;/a&gt;を構築できます。</target>
        </trans-unit>
        <trans-unit id="0f057642b4bb486cc33d79cbc367d51cb24e2bda" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; class defines methods for creating coders for a given charset and for retrieving the various names associated with a charset. It also defines static methods for testing whether a particular charset is supported, for locating charset instances by name, and for constructing a map that contains every charset for which support is available in the current Java virtual machine.</source>
          <target state="translated">&lt;a href=&quot;charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;クラスは、指定された文字セットおよび文字セットに関連付けられたさまざまな名前を取得するためのコーダを作成するための方法を定義します。また、特定の文字セットがサポートされているかどうかをテストしたり、文字セットインスタンスを名前で検索したり、現在のJava仮想マシンでサポートされているすべての文字セットを含むマップを作成したりするための静的メソッドも定義します。</target>
        </trans-unit>
        <trans-unit id="26b62da2bb56725ff2decf8f098a1aafbd9d9b2c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;classloader#builtinLoaders&quot;&gt;builtin class loaders&lt;/a&gt; do not explicitly define &lt;code&gt;Package&lt;/code&gt; objects for packages in &lt;em&gt;named modules&lt;/em&gt;. Instead those packages are automatically defined and have no specification and implementation versioning information.</source>
          <target state="translated">&lt;a href=&quot;classloader#builtinLoaders&quot;&gt;組み込みクラスローダーは&lt;/a&gt;、明示的に定義しない &lt;code&gt;Package&lt;/code&gt; 内のパッケージのためのオブジェクトを&lt;em&gt;命名モジュール&lt;/em&gt;。代わりに、これらのパッケージは自動的に定義され、仕様および実装のバージョン情報はありません。</target>
        </trans-unit>
        <trans-unit id="a67cff32a8cc7c58f69e3c11acfe781fdb3c37d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;concurrentlinkedqueue&quot;&gt;&lt;code&gt;ConcurrentLinkedQueue&lt;/code&gt;&lt;/a&gt; class supplies an efficient scalable thread-safe non-blocking FIFO queue. The &lt;a href=&quot;concurrentlinkeddeque&quot;&gt;&lt;code&gt;ConcurrentLinkedDeque&lt;/code&gt;&lt;/a&gt; class is similar, but additionally supports the &lt;a href=&quot;../deque&quot;&gt;&lt;code&gt;Deque&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;concurrentlinkedqueue&quot;&gt; &lt;code&gt;ConcurrentLinkedQueue&lt;/code&gt; &lt;/a&gt;クラスの供給効率的なスケーラブルなスレッドセーフの非ブロッキングFIFOキュー。&lt;a href=&quot;concurrentlinkeddeque&quot;&gt; &lt;code&gt;ConcurrentLinkedDeque&lt;/code&gt; &lt;/a&gt;クラスは似ていますが、さらにサポートされてい&lt;a href=&quot;../deque&quot;&gt; &lt;code&gt;Deque&lt;/code&gt; &lt;/a&gt;インタフェースを。</target>
        </trans-unit>
        <trans-unit id="8f05e709096b93b1da433f74acd77bc05bb25621" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; interface describes condition variables that may be associated with Locks. These are similar in usage to the implicit monitors accessed using &lt;code&gt;Object.wait&lt;/code&gt;, but offer extended capabilities. In particular, multiple &lt;code&gt;Condition&lt;/code&gt; objects may be associated with a single &lt;code&gt;Lock&lt;/code&gt;. To avoid compatibility issues, the names of &lt;code&gt;Condition&lt;/code&gt; methods are different from the corresponding &lt;code&gt;Object&lt;/code&gt; versions.</source>
          <target state="translated">&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;インターフェースは、ロックに関連してもよい状態変数について説明します。これらは、 &lt;code&gt;Object.wait&lt;/code&gt; を使用してアクセスされる暗黙のモニターと使い方が似ていますが、拡張機能を提供します。特に、複数の &lt;code&gt;Condition&lt;/code&gt; オブジェクトを1つの &lt;code&gt;Lock&lt;/code&gt; に関連付けることができます。互換性の問題を回避するために、 &lt;code&gt;Condition&lt;/code&gt; メソッドの名前は、対応する &lt;code&gt;Object&lt;/code&gt; のバージョンとは異なります。</target>
        </trans-unit>
        <trans-unit id="9e8041c88b3dcafc9b4f4c5eb63f4ac4c547288c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e9dd68445d5385bb05545d5acae99f43bf46af4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd9235cbf846fb05154c7fff0a0c527bea890016" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_LOCAL_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#ISO_LOCAL_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6aeff022cca7462b1d24d181862f8642f26d64d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75e1a69d924196bb7f31b2df6ac058a6b61c95bc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt; where the instant is converted from &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;UTC&lt;/code&gt; offset. Parsing is case insensitive.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;瞬間をから変換され&lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt; &lt;/a&gt;使用して &lt;code&gt;UTC&lt;/code&gt; オフセットを。解析では大文字と小文字が区別されません。</target>
        </trans-unit>
        <trans-unit id="7bbd020b4b15b4b357c33b60139663bc5ab3a2b4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt;&lt;code&gt;withChronology&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the chronology. If overridden, the date-time value is converted to the chronology before formatting. During parsing the date-time value is converted to the chronology before it is returned.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt; &lt;code&gt;withChronology&lt;/code&gt; の&lt;/a&gt;方法は、年表をオーバーライドする新しいフォーマッタを返します。オーバーライドされた場合、日時の値はフォーマットの前に年代順に変換されます。解析中に、日付時刻値は日付に変換されてから返されます。</target>
        </trans-unit>
        <trans-unit id="c2be0f0e5c7bfb256821fc337fa24120b0dbdc22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withDecimalStyle-java.time.format.DecimalStyle-&quot;&gt;&lt;code&gt;withDecimalStyle&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the &lt;a href=&quot;decimalstyle&quot;&gt;&lt;code&gt;DecimalStyle&lt;/code&gt;&lt;/a&gt;. The DecimalStyle symbols are used for formatting and parsing.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#withDecimalStyle-java.time.format.DecimalStyle-&quot;&gt; &lt;code&gt;withDecimalStyle&lt;/code&gt; の&lt;/a&gt;方法が優先されます新しいフォーマッタを返し&lt;a href=&quot;decimalstyle&quot;&gt; &lt;code&gt;DecimalStyle&lt;/code&gt; を&lt;/a&gt;。DecimalStyleシンボルは、フォーマットと解析に使用されます。</target>
        </trans-unit>
        <trans-unit id="65e1e451917eff1d1ca40b8cd181f08037d85fa5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt;&lt;code&gt;withLocale&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the locale. The locale affects some aspects of formatting and parsing. For example, the &lt;a href=&quot;datetimeformatter#ofLocalizedDate-java.time.format.FormatStyle-&quot;&gt;&lt;code&gt;ofLocalizedDate&lt;/code&gt;&lt;/a&gt; provides a formatter that uses the locale specific date format.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt; &lt;code&gt;withLocale&lt;/code&gt; の&lt;/a&gt;方法は、ロケールをオーバーライドする新しいフォーマッタを返します。ロケールは、フォーマットと解析のいくつかの側面に影響します。たとえば、&lt;a href=&quot;datetimeformatter#ofLocalizedDate-java.time.format.FormatStyle-&quot;&gt; &lt;code&gt;ofLocalizedDate&lt;/code&gt; &lt;/a&gt;は、ロケール固有の日付形式を使用するフォーマッターを提供します。</target>
        </trans-unit>
        <trans-unit id="ac11e4705d1cea60755dd413e0d7e05004a9574f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withResolverFields-java.time.temporal.TemporalField...-&quot;&gt;&lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt;&lt;/a&gt; parameter allows the set of fields that will be resolved to be filtered before resolving starts. For example, if the formatter has parsed a year, month, day-of-month and day-of-year, then there are two approaches to resolve a date: (year + month + day-of-month) and (year + day-of-year). The resolver fields allows one of the two approaches to be selected. If no resolver fields are set then both approaches must result in the same date.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#withResolverFields-java.time.temporal.TemporalField...-&quot;&gt; &lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt; &lt;/a&gt;パラメータは、開始を解決する前に濾過されるように解決されるフィールドのセットすることができます。たとえば、フォーマッタが年、月、日、年の日付を解析した場合、日付を解決するには、（年+月+日）と（年+年の日）。リゾルバーフィールドでは、2つのアプローチのいずれかを選択できます。リゾルバーフィールドが設定されていない場合は、両方のアプローチで同じ日付にする必要があります。</target>
        </trans-unit>
        <trans-unit id="c56041ee24c2e62e6514b35eb7cc04f16f5b0ac1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withZone-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZone&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the zone. If overridden, the date-time value is converted to a ZonedDateTime with the requested ZoneId before formatting. During parsing the ZoneId is applied before the value is returned.</source>
          <target state="translated">&lt;a href=&quot;datetimeformatter#withZone-java.time.ZoneId-&quot;&gt; &lt;code&gt;withZone&lt;/code&gt; の&lt;/a&gt;方法は、ゾーンをオーバーライドする新しいフォーマッタを返します。オーバーライドされた場合、日時の値は、フォーマットする前に、要求されたZoneIdを使用してZonedDateTimeに変換されます。解析中、ZoneIdは値が返される前に適用されます。</target>
        </trans-unit>
        <trans-unit id="cd859580f99613136d80c7938719b23f4da700bc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt; for all of the &lt;code&gt;MBeanAttributeInfo&lt;/code&gt;, &lt;code&gt;MBeanParameterInfo&lt;/code&gt;, and &lt;code&gt;MBeanOperationInfo&lt;/code&gt; objects contained in the &lt;code&gt;MBeanInfo&lt;/code&gt; will have a field &lt;code&gt;openType&lt;/code&gt; whose value is the &lt;a href=&quot;openmbean/opentype&quot;&gt;&lt;code&gt;OpenType&lt;/code&gt;&lt;/a&gt; specified by the mapping rules above. So even when &lt;code&gt;getType()&lt;/code&gt; is &quot;&lt;code&gt;int&lt;/code&gt;&quot;, &lt;code&gt;getDescriptor().getField(&quot;openType&quot;)&lt;/code&gt; will be &lt;a href=&quot;openmbean/simpletype#INTEGER&quot;&gt;&lt;code&gt;SimpleType.INTEGER&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt;の全てのため &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; 、 &lt;code&gt;MBeanParameterInfo&lt;/code&gt; と &lt;code&gt;MBeanOperationInfo&lt;/code&gt; に含まれるオブジェクト &lt;code&gt;MBeanInfo&lt;/code&gt; フィールドがあります &lt;code&gt;openType&lt;/code&gt; その値で&lt;a href=&quot;openmbean/opentype&quot;&gt; &lt;code&gt;OpenType&lt;/code&gt; &lt;/a&gt;上記マッピング規則で指定します。したがって、 &lt;code&gt;getType()&lt;/code&gt; が「 &lt;code&gt;int&lt;/code&gt; 」の場合でも、 &lt;code&gt;getDescriptor().getField(&quot;openType&quot;)&lt;/code&gt; は&lt;a href=&quot;openmbean/simpletype#INTEGER&quot;&gt; &lt;code&gt;SimpleType.INTEGER&lt;/code&gt; になり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="83d652f00d8a04827d939d634a6f87310e7e3196" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;docflavor&quot;&gt;&lt;code&gt;DocFlavor&lt;/code&gt;&lt;/a&gt; class represents the print data format, such as JPEG or PostScript. A &lt;code&gt;DocFlavor&lt;/code&gt; object consists of a MIME type, which describes the format, and a document representation class name that indicates how the document is delivered to the printer or output stream. An application uses the &lt;code&gt;DocFlavor&lt;/code&gt; and an attribute set to find printers that can print the document type specified by the &lt;code&gt;DocFlavor&lt;/code&gt; and have the capabilities specified by the attribute set.</source>
          <target state="translated">&lt;a href=&quot;docflavor&quot;&gt; &lt;code&gt;DocFlavor&lt;/code&gt; の&lt;/a&gt;クラスは、JPEGやPostScriptのように、印刷データ形式を表します。 &lt;code&gt;DocFlavor&lt;/code&gt; のオブジェクトの形式を記述するMIMEタイプ、及びドキュメントをプリンタまたは出力ストリームに配信されるかを示すドキュメント表現クラス名で構成されています。アプリケーションが使用し &lt;code&gt;DocFlavor&lt;/code&gt; によって指定されたドキュメントタイプ印刷できるプリンタを見つけるために、属性セットを &lt;code&gt;DocFlavor&lt;/code&gt; のを、属性セットに指定された機能を持っています。</target>
        </trans-unit>
        <trans-unit id="1faa05e6c9acbf2ceb5477d8b1f4a53cfe44d7be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;docletenvironment&quot;&gt;&lt;code&gt;DocletEnvironment&lt;/code&gt;&lt;/a&gt; instance holds the environment that the doclet will be initialized with. From this environment all other information can be extracted, in the form of &lt;a href=&quot;../../../../java.compiler/javax/lang/model/element/element&quot;&gt;&lt;code&gt;elements&lt;/code&gt;&lt;/a&gt;. One can further use the APIs and utilities described by &lt;a href=&quot;../../../../java.compiler/javax/lang/model/package-summary&quot;&gt;&lt;code&gt;Language Model API&lt;/code&gt;&lt;/a&gt; to query Elements and Types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0513df95d4bb865252722a8d8255694866eed6fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;domlocator&quot;&gt;&lt;code&gt;DOMLocator&lt;/code&gt;&lt;/a&gt; node may be passed to &lt;a href=&quot;../transformerexception&quot;&gt;&lt;code&gt;TransformerException&lt;/code&gt;&lt;/a&gt; objects, and retrieved by trying to cast the result of the &lt;a href=&quot;../transformerexception#getLocator()&quot;&gt;&lt;code&gt;TransformerException.getLocator()&lt;/code&gt;&lt;/a&gt; method. The implementation has no responsibility to use a DOMLocator instead of a &lt;a href=&quot;../sourcelocator&quot;&gt;&lt;code&gt;SourceLocator&lt;/code&gt;&lt;/a&gt; (though line numbers and the like do not make much sense for a DOM), so the result of getLocator must always be tested with an instanceof.</source>
          <target state="translated">&lt;a href=&quot;domlocator&quot;&gt; &lt;code&gt;DOMLocator&lt;/code&gt; の&lt;/a&gt;ノードが渡されてもよい&lt;a href=&quot;../transformerexception&quot;&gt; &lt;code&gt;TransformerException&lt;/code&gt; の&lt;/a&gt;オブジェクト、および結果キャストしようとすることによって取得&lt;a href=&quot;../transformerexception#getLocator()&quot;&gt; &lt;code&gt;TransformerException.getLocator()&lt;/code&gt; &lt;/a&gt;メソッドを。実装は、&lt;a href=&quot;../sourcelocator&quot;&gt; &lt;code&gt;SourceLocator&lt;/code&gt; の&lt;/a&gt;代わりにDOMLocatorを使用する責任を負いません（ただし、行番号などはDOMにはあまり意味がありません）。したがって、getLocatorの結果は常にinstanceofでテストする必要があります。</target>
        </trans-unit>
        <trans-unit id="1b6ef39fe04c1b93a69d3237b32d9c958a683847" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;domresult&quot;&gt;&lt;code&gt;DOMResult&lt;/code&gt;&lt;/a&gt; class allows a &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; to be specified to which result DOM nodes will be appended. If an output node is not specified, the transformer will use &lt;a href=&quot;../../parsers/documentbuilder#newDocument()&quot;&gt;&lt;code&gt;DocumentBuilder.newDocument()&lt;/code&gt;&lt;/a&gt; to create an output &lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; node. If a node is specified, it should be one of the following: &lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../../org/w3c/dom/element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../../../org/w3c/dom/documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt;. Specification of any other node type is implementation dependent and undefined by this API. If the result is a &lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, the output of the transformation must have a single element root to set as the document element.</source>
          <target state="translated">&lt;a href=&quot;domresult&quot;&gt; &lt;code&gt;DOMResult&lt;/code&gt; の&lt;/a&gt;クラスができ&lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;結果のDOMノードが追加されると指定します。出力ノードが指定されていない場合、トランスフォーマーは&lt;a href=&quot;../../parsers/documentbuilder#newDocument()&quot;&gt; &lt;code&gt;DocumentBuilder.newDocument()&lt;/code&gt; &lt;/a&gt;を使用して出力&lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;ノードを作成します。ノードを指定する場合は、&lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../../org/w3c/dom/element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;../../../../org/w3c/dom/documentfragment&quot;&gt; &lt;code&gt;DocumentFragment&lt;/code&gt; の&lt;/a&gt;いずれかである必要があります。他のノードタイプの仕様は実装に依存し、このAPIでは定義されていません。結果が&lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;場合、トランスフォーメーションの出力には、ドキュメント要素として設定する単一の要素ルートが必要です。</target>
        </trans-unit>
        <trans-unit id="59b5c96271b6b21c6c835702a2a5b8f3209ac347" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;domsource&quot;&gt;&lt;code&gt;DOMSource&lt;/code&gt;&lt;/a&gt; class allows the client of the implementation of this API to specify a DOM &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; as the source of the input tree. The model of how the Transformer deals with the DOM tree in terms of mismatches with the &lt;a href=&quot;http://www.w3.org/TR/xslt#data-model&quot;&gt;XSLT data model&lt;/a&gt; or other data models is beyond the scope of this document. Any of the nodes derived from &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; are legal input.</source>
          <target state="translated">&lt;a href=&quot;domsource&quot;&gt; &lt;code&gt;DOMSource&lt;/code&gt; の&lt;/a&gt;クラスは、このAPIの実装のクライアントは、DOMを指定することを可能にする&lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;入力ツリーのソースとして。&lt;a href=&quot;http://www.w3.org/TR/xslt#data-model&quot;&gt;XSLTデータモデル&lt;/a&gt;または他のデータモデルとの不一致に関して、TransformerがDOMツリーを処理する方法のモデルは、このドキュメントの範囲を超えています。&lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;から派生したノードはすべて正当な入力です。</target>
        </trans-unit>
        <trans-unit id="388496abb4bece2dabb72e87e3942bbdffee854f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;domsource&quot;&gt;&lt;code&gt;DOMSource&lt;/code&gt;&lt;/a&gt; class allows the client of the implementation of this API to specify a DOM &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; as the source of the input tree. The model of how the Transformer deals with the DOM tree in terms of mismatches with the &lt;a href=&quot;https://www.w3.org/TR/xslt#data-model&quot;&gt;XSLT data model&lt;/a&gt; or other data models is beyond the scope of this document. Any of the nodes derived from &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; are legal input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2a33b021a508069e12369db4ed8235c23dd820" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;dosfileattributeview&quot;&gt;&lt;code&gt;DosFileAttributeView&lt;/code&gt;&lt;/a&gt; class extends &lt;code&gt;BasicFileAttributeView&lt;/code&gt; by defining methods to access the legacy &quot;DOS&quot; file attributes supported on file systems such as File Allocation Tabl (FAT), commonly used in consumer devices.</source>
          <target state="translated">&lt;a href=&quot;dosfileattributeview&quot;&gt; &lt;code&gt;DosFileAttributeView&lt;/code&gt; の&lt;/a&gt;クラスを拡張し &lt;code&gt;BasicFileAttributeView&lt;/code&gt; を「DOS」ファイルは、一般的に民生機器に使用されるそのようなファイルアロケーションTABL（FAT）などのファイル・システム上でサポートされる属性レガシーにアクセスするためのメソッドを定義することによって。</target>
        </trans-unit>
        <trans-unit id="627ee7a2230c7cabacb52f3a642c2e369dfee998" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;dosfileattributeview&quot;&gt;&lt;code&gt;DosFileAttributeView&lt;/code&gt;&lt;/a&gt; class extends &lt;code&gt;BasicFileAttributeView&lt;/code&gt; by defining methods to access the legacy &quot;DOS&quot; file attributes supported on file systems such as File Allocation Table (FAT), commonly used in consumer devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab5e9ce6e03076464956d6cf8e9e21635c83e58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class contains utility methods to convert from other common forms to &lt;code&gt;Callable&lt;/code&gt; classes.</source>
          <target state="translated">&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;クラスはに他の一般的な形式へ変換するユーティリティメソッドが含まれている &lt;code&gt;Callable&lt;/code&gt; なクラス。</target>
        </trans-unit>
        <trans-unit id="8883df3bd964eac1086fd88dfe3a79b6d06f9e71" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class provides convenient factory methods for the ScheduledExecutorService implementations provided in this package.</source>
          <target state="translated">&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;クラスは、このパッケージで提供されるScheduledExecutorService実装するための便利なファクトリメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="e042e1e41822ebb3dc29ae27670b8475a6541a52" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class provides factory methods for the executor services provided in this package.</source>
          <target state="translated">&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;クラスは、このパッケージで提供さキュータのサービスのためのファクトリメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="2310b091914d7e1f782b2d472dcaf0ac025a8afd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors#defaultThreadFactory()&quot;&gt;&lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt;&lt;/a&gt; method provides a more useful simple implementation, that sets the created thread context to known values before returning it.</source>
          <target state="translated">&lt;a href=&quot;executors#defaultThreadFactory()&quot;&gt; &lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt; &lt;/a&gt;メソッドは、それを返す前に既知の値に作成されたスレッドのコンテキストを設定し、より有用な簡単な実装を提供します。</target>
        </trans-unit>
        <trans-unit id="89123dab0161f270435efa4f546d779073bf8797" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors#defaultThreadFactory--&quot;&gt;&lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt;&lt;/a&gt; method provides a more useful simple implementation, that sets the created thread context to known values before returning it.</source>
          <target state="translated">&lt;a href=&quot;executors#defaultThreadFactory--&quot;&gt; &lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt; &lt;/a&gt;メソッドは、それを返す前に既知の値に作成されたスレッドのコンテキストを設定し、より有用な簡単な実装を提供します。</target>
        </trans-unit>
        <trans-unit id="5340eb811bb6c4f04eac908f1a47f6cb848e143e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;featuredescriptor#getShortDescription()&quot;&gt;&lt;code&gt;short description&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;beaninfo#getBeanDescriptor()&quot;&gt;&lt;code&gt;bean descriptor&lt;/code&gt;&lt;/a&gt; of the annotated class.</source>
          <target state="translated">&lt;a href=&quot;featuredescriptor#getShortDescription()&quot;&gt; &lt;code&gt;short description&lt;/code&gt; &lt;/a&gt;のための&lt;a href=&quot;beaninfo#getBeanDescriptor()&quot;&gt; &lt;code&gt;bean descriptor&lt;/code&gt; &lt;/a&gt;注釈付きクラスの。</target>
        </trans-unit>
        <trans-unit id="465886a723384dd38a46e42193428a7e1aeabfc9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;featuredescriptor#getShortDescription()&quot;&gt;&lt;code&gt;short description&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;beaninfo#getPropertyDescriptors()&quot;&gt;&lt;code&gt;descriptor&lt;/code&gt;&lt;/a&gt; of the annotated property.</source>
          <target state="translated">&lt;a href=&quot;featuredescriptor#getShortDescription()&quot;&gt; &lt;code&gt;short description&lt;/code&gt; &lt;/a&gt;のための&lt;a href=&quot;beaninfo#getPropertyDescriptors()&quot;&gt; &lt;code&gt;descriptor&lt;/code&gt; &lt;/a&gt;注釈付きプロパティの。</target>
        </trans-unit>
        <trans-unit id="452f568b1f5309f7b11b0f0b96affb2b04cc97db" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;fileattribute&quot;&gt;&lt;code&gt;FileAttribute&lt;/code&gt;&lt;/a&gt; interface represents the value of an attribute for cases where the attribute value is required to be set atomically when creating an object in the file system.</source>
          <target state="translated">&lt;a href=&quot;fileattribute&quot;&gt; &lt;code&gt;FileAttribute&lt;/code&gt; の&lt;/a&gt;インターフェースは、ファイルシステム内のオブジェクトを作成するときに、属性値をアトミックに設定する必要がある場合の属性の値を表します。</target>
        </trans-unit>
        <trans-unit id="44a89ca3f8f23eed63e4ec0b6a8bbaea5d50e095" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class supports the usual operations of reading bytes from, and writing bytes to, a channel connected to a file, as well as those of querying and modifying the current file position and truncating the file to a specific size. It defines methods for acquiring locks on the whole file or on a specific region of a file; these methods return instances of the &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;FileLock&lt;/code&gt;&lt;/a&gt; class. Finally, it defines methods for forcing updates to the file to be written to the storage device that contains it, for efficiently transferring bytes between the file and other channels, and for mapping a region of the file directly into memory.</source>
          <target state="translated">&lt;a href=&quot;filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt;、ファイルに接続されたチャネル、並びに照会及び現在のファイル位置を変更し、特定のサイズのファイルを切り捨てるのものなどをクラスからバイトを読み出す通常の動作をサポートし、書き込みがバイト。ファイル全体またはファイルの特定の領域のロックを取得するためのメソッドを定義します。これらのメソッドは、&lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;FileLock&lt;/code&gt; &lt;/a&gt;クラスのインスタンスを返します。最後に、ファイルの更新を、それを含むストレージデバイスに強制的に書き込む方法、ファイルと他のチャネル間でバイトを効率的に転送する方法、およびファイルの領域を直接メモリにマッピングする方法を定義します。</target>
        </trans-unit>
        <trans-unit id="7eca07bd746a1861a27802a596cf1b4a71de4344" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods may be used to read or update the owner of the file.</source>
          <target state="translated">&lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; メソッド&lt;/a&gt;または&lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;方法は、読み取りまたはファイルの所有者を更新するために使用されてもよいです。</target>
        </trans-unit>
        <trans-unit id="73d3f705da9ee89357307dce73865b84f0d0035f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filer&quot;&gt;&lt;code&gt;Filer&lt;/code&gt;&lt;/a&gt; interface discusses restrictions on how processors can operate on files.</source>
          <target state="translated">&lt;a href=&quot;filer&quot;&gt; &lt;code&gt;Filer&lt;/code&gt; &lt;/a&gt;インタフェースは、プロセッサがファイルを操作する方法の制限について説明します。</target>
        </trans-unit>
        <trans-unit id="ec58fefa4089af5e49bf486507980bb4e39cbe29" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filestore#supportsFileAttributeView(java.lang.String)&quot;&gt;&lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt;&lt;/a&gt; method may be used to test if an underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the file attributes identified by a file attribute view.</source>
          <target state="translated">&lt;a href=&quot;filestore#supportsFileAttributeView(java.lang.String)&quot;&gt; &lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt; を&lt;/a&gt;基本となる場合の方法は、テストに使用できる&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt;、ファイル属性ビューで識別されるファイル属性をサポートしています。</target>
        </trans-unit>
        <trans-unit id="b4b3f7c632fcbbe9935cc6379723468392ffc252" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filestore#supportsFileAttributeView-java.lang.String-&quot;&gt;&lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt;&lt;/a&gt; method may be used to test if an underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the file attributes identified by a file attribute view.</source>
          <target state="translated">&lt;a href=&quot;filestore#supportsFileAttributeView-java.lang.String-&quot;&gt; &lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt; を&lt;/a&gt;基本となる場合の方法は、テストに使用できる&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt;、ファイル属性ビューで識別されるファイル属性をサポートしています。</target>
        </trans-unit>
        <trans-unit id="f8cb4d9733bf198a655b4589202cc06dace82870" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getFileStores--&quot;&gt;&lt;code&gt;getFileStores&lt;/code&gt;&lt;/a&gt; method returns an iterator over the underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;file-stores&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;filesystem#getFileStores--&quot;&gt; &lt;code&gt;getFileStores&lt;/code&gt; の&lt;/a&gt;方法は、基礎の反復子を返し&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;file-stores&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cfd644bf38b0bb664dee5219ee6298f48860e300" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method converts a system dependent &lt;em&gt;path string&lt;/em&gt;, returning a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; object that may be used to locate and access a file.</source>
          <target state="translated">&lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;方法は、システムに依存する変換&lt;em&gt;パス文字列を&lt;/em&gt;返す、&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;ファイルを見つけてアクセスするために使用することができるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="85bb054fbeaeb496dcbb5f7913fdc2da38a5d8df" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getPathMatcher-java.lang.String-&quot;&gt;&lt;code&gt;getPathMatcher&lt;/code&gt;&lt;/a&gt; method is used to create a &lt;a href=&quot;pathmatcher&quot;&gt;&lt;code&gt;PathMatcher&lt;/code&gt;&lt;/a&gt; that performs match operations on paths.</source>
          <target state="translated">&lt;a href=&quot;filesystem#getPathMatcher-java.lang.String-&quot;&gt; &lt;code&gt;getPathMatcher&lt;/code&gt; &lt;/a&gt;方法を作成するために使用され&lt;a href=&quot;pathmatcher&quot;&gt; &lt;code&gt;PathMatcher&lt;/code&gt; &lt;/a&gt;実行がパス上の操作と一致していることを。</target>
        </trans-unit>
        <trans-unit id="5a69e75d4d560b20f800838bf2f2879aa7b27302" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getUserPrincipalLookupService--&quot;&gt;&lt;code&gt;getUserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt;&lt;code&gt;UserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; to lookup users or groups by name.</source>
          <target state="translated">&lt;a href=&quot;filesystem#getUserPrincipalLookupService--&quot;&gt; &lt;code&gt;getUserPrincipalLookupService&lt;/code&gt; の&lt;/a&gt;方法は返し&lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt; &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; &lt;/a&gt;名前でユーザーまたはグループを検索するために。</target>
        </trans-unit>
        <trans-unit id="6f447288e7932d315836b220e40a38ac2e592a02" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#newWatchService--&quot;&gt;&lt;code&gt;newWatchService&lt;/code&gt;&lt;/a&gt; method creates a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt; that may be used to watch objects for changes and events.</source>
          <target state="translated">&lt;a href=&quot;filesystem#newWatchService--&quot;&gt; &lt;code&gt;newWatchService&lt;/code&gt; の&lt;/a&gt;方法は、作成&lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; &lt;/a&gt;の変更やイベントのためのオブジェクトを監視するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="0df1d883900393179ef6a938286fb977dcd966a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;formatter#format-java.util.Locale-java.lang.String-java.lang.Object...-&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt; method for this object which has a locale argument does not change this value.</source>
          <target state="translated">ロケール引数を持つこのオブジェクトの&lt;a href=&quot;formatter#format-java.util.Locale-java.lang.String-java.lang.Object...-&quot;&gt; &lt;code&gt;format&lt;/code&gt; &lt;/a&gt;メソッドは、この値を変更しません。</target>
        </trans-unit>
        <trans-unit id="e68fc7c4ce0ce129079a142bdf3e6ba5e50c5128" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;futuretask&quot;&gt;&lt;code&gt;FutureTask&lt;/code&gt;&lt;/a&gt; class is an implementation of &lt;code&gt;Future&lt;/code&gt; that implements &lt;code&gt;Runnable&lt;/code&gt;, and so may be executed by an &lt;code&gt;Executor&lt;/code&gt;. For example, the above construction with &lt;code&gt;submit&lt;/code&gt; could be replaced by:</source>
          <target state="translated">&lt;a href=&quot;futuretask&quot;&gt; &lt;code&gt;FutureTask&lt;/code&gt; の&lt;/a&gt;クラスが実装され &lt;code&gt;Future&lt;/code&gt; 実装する &lt;code&gt;Runnable&lt;/code&gt; などにより実行されてもよい &lt;code&gt;Executor&lt;/code&gt; 。たとえば、上記の &lt;code&gt;submit&lt;/code&gt; を使用した構成は、次のように置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="5ba414d1962554d1f8e4567bcf5d7da85351a76c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsconfiguration#getDefaultTransform()&quot;&gt;&lt;code&gt;getDefaultTransform&lt;/code&gt;&lt;/a&gt; for the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; of the &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;graphicsconfiguration#getDefaultTransform()&quot;&gt; &lt;code&gt;getDefaultTransform&lt;/code&gt; &lt;/a&gt;のため &lt;code&gt;GraphicsConfiguration&lt;/code&gt; の &lt;code&gt;Component&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39a8d2a83535770d869eebc4c30cb9198770d41d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSLUCENT&quot;&gt;&lt;code&gt;PERPIXEL_TRANSLUCENT&lt;/code&gt;&lt;/a&gt; translucency must be supported by the graphics device where this window is located</source>
          <target state="translated">&lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSLUCENT&quot;&gt; &lt;code&gt;PERPIXEL_TRANSLUCENT&lt;/code&gt; の&lt;/a&gt;半透明性は、このウィンドウが配置されているグラフィックスデバイスによってサポートされなければなりません</target>
        </trans-unit>
        <trans-unit id="8a9920b2b3bdc4d70beb4a231bc49073bc86e240" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSPARENT&quot;&gt;&lt;code&gt;PERPIXEL_TRANSPARENT&lt;/code&gt;&lt;/a&gt; translucency must be supported by the underlying system</source>
          <target state="translated">&lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSPARENT&quot;&gt; &lt;code&gt;PERPIXEL_TRANSPARENT&lt;/code&gt; の&lt;/a&gt;半透明性は、基盤となるシステムによってサポートされている必要があり</target>
        </trans-unit>
        <trans-unit id="c5d339fa5b74059e5d1ae5610caf66ae89534242" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsdevice.windowtranslucency#TRANSLUCENT&quot;&gt;&lt;code&gt;TRANSLUCENT&lt;/code&gt;&lt;/a&gt; translucency must be supported by the underlying system</source>
          <target state="translated">&lt;a href=&quot;graphicsdevice.windowtranslucency#TRANSLUCENT&quot;&gt; &lt;code&gt;TRANSLUCENT&lt;/code&gt; の&lt;/a&gt;半透明性は、基盤となるシステムによってサポートされている必要があり</target>
        </trans-unit>
        <trans-unit id="ec992ef8c01d8a91b29b9663489a827132e70061" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsenvironment#getAllFonts()&quot;&gt;&lt;code&gt;getAllFonts&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;GraphicsEnvironment&lt;/code&gt; class returns an array of all font faces available in the system. These font faces are returned as &lt;code&gt;Font&lt;/code&gt; objects with a size of 1, identity transform and default font features. These base fonts can then be used to derive new &lt;code&gt;Font&lt;/code&gt; objects with varying sizes, styles, transforms and font features via the &lt;code&gt;deriveFont&lt;/code&gt; methods in this class.</source>
          <target state="translated">&lt;code&gt;GraphicsEnvironment&lt;/code&gt; クラスの&lt;a href=&quot;graphicsenvironment#getAllFonts()&quot;&gt; &lt;code&gt;getAllFonts&lt;/code&gt; &lt;/a&gt;メソッドは、システムで使用可能なすべてのフォントフェースの配列を返します。これらのフォントフェースは、サイズが1、ID変換、およびデフォルトのフォント機能を持つ &lt;code&gt;Font&lt;/code&gt; オブジェクトとして返されます。これらのベースフォントは、このクラスの &lt;code&gt;deriveFont&lt;/code&gt; メソッドを介して、さまざまなサイズ、スタイル、変換、およびフォント機能を備えた新しい &lt;code&gt;Font&lt;/code&gt; オブジェクトを派生させるために使用できます。</target>
        </trans-unit>
        <trans-unit id="ac6fd445a8abbfdf6b8f85b02ec9c54bc64434b0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#base64&quot;&gt;Base64&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#base64&quot;&gt;Base64では、&lt;/a&gt;変換アルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="becff7faf751f42ccbca78d1ff611ab0fb00ba48" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#dsa-sha1&quot;&gt;DSA-SHA1&lt;/a&gt; (DSS) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#dsa-sha1&quot;&gt;DSA-SHA1&lt;/a&gt;（DSS）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="ee3f60b00b3529817693288491df29a6712e3331" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;&gt; Enveloped Signature&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;&gt;エンベロープ署名は&lt;/a&gt;変換アルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="0b88790d458afe33d2216d161472445474fc51cb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#hmac-sha1&quot;&gt;HMAC-SHA1&lt;/a&gt; MAC signature method algorithm URI</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#hmac-sha1&quot;&gt;HMAC-SHA1&lt;/a&gt; MAC署名メソッドアルゴリズムURI</target>
        </trans-unit>
        <trans-unit id="c19c2c2b7a22f554c7ae96b18019113331154992" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;&gt;RSA-SHA1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;&gt;RSA-SHA1&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="01bf5b4fc24fe23d8966259b4091df56900af996" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;&gt; SHA1&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;&gt;SHA1は、&lt;/a&gt;メソッドアルゴリズムURIをダイジェスト。</target>
        </trans-unit>
        <trans-unit id="af7ee9cfcd3d6107b3c1dd50b03852f916c260e1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1&quot;&gt; ECDSA-SHA1&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1&quot;&gt;ECDSA-SHA1&lt;/a&gt;（FIPS 180-4）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="e4dedda2e7f7aea4568aa2c2eb187e63638d19af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha224&quot;&gt; ECDSA-SHA224&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha224&quot;&gt;ECDSA-SHA224&lt;/a&gt;（FIPS 180-4）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="a53376ec8ca69ca3d54a2262f28511aa42273529" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256&quot;&gt; ECDSA-SHA256&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256&quot;&gt;ECDSA-SHA256&lt;/a&gt;（FIPS 180-4）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="d85df8f41b660375d4442a1e15fa274557a89535" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384&quot;&gt; ECDSA-SHA384&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384&quot;&gt;ECDSA-SHA384&lt;/a&gt;（FIPS 180-4）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="ad5bd96b17eae327314c8f39dfe7802a29acf09a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512&quot;&gt; ECDSA-SHA512&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512&quot;&gt;ECDSA-SHA512&lt;/a&gt;（FIPS 180-4）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="8ae5b3c777b1e2d5a2186ca8a378affe9c7ade16" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha224&quot;&gt; HMAC-SHA224&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha224&quot;&gt;HMAC-SHA224&lt;/a&gt; MAC署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="53de04ca23665c1a16a28adfdf8c893f824822a4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha256&quot;&gt; HMAC-SHA256&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha256&quot;&gt;HMAC-SHA256&lt;/a&gt; MAC署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="861114a3ecd86c3cab9aa4a66112c1e2ee43c6eb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha384&quot;&gt; HMAC-SHA384&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha384&quot;&gt;HMAC-SHA384&lt;/a&gt; MAC署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="af1359431a4b4abc420088f3eaf4951469a38069" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha512&quot;&gt; HMAC-SHA512&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha512&quot;&gt;HMAC-SHA512&lt;/a&gt; MAC署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="4fa675d632de88ac6516637e0feaed2abaaa090d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha224&quot;&gt; RSA-SHA224&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha224&quot;&gt;RSA-SHA224&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="eaddb66e627fa00f9ce8834f0acbf436a0c9d55a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;&gt; RSA-SHA256&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;&gt;RSA-SHA256&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="7fdeb91c4bb77cbff71ec5b53a24f31a2cfc8fb0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha384&quot;&gt; RSA-SHA384&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha384&quot;&gt;RSA-SHA384&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="36fa84d4352533e019faa9c861c57be646aeeb1f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha512&quot;&gt; RSA-SHA512&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha512&quot;&gt;RSA-SHA512&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="bc01f1e49eb4cbe40436d470538878c09a541e97" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#sha224&quot;&gt; SHA224&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#sha224&quot;&gt;SHA224&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="8c5c807f091255a14ff7a3da29c8287a037f9165" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#sha384&quot;&gt; SHA384&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#sha384&quot;&gt;SHA3​​84&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="d84f835080934ddeca944780a8bafd9805086678" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#ripemd160&quot;&gt; RIPEMD-160&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#ripemd160&quot;&gt;RIPEMD-160&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="492ea7b910db2fa76b178f6f56dad826131e494e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;&gt; SHA256&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;&gt;SHA256&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="59642427325669eecdce19219f8c8dfb434e8443" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#sha512&quot;&gt; SHA512&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#sha512&quot;&gt;SHA512&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="6c7c6f971c0678438ecae16f111eb39141e3b969" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;&gt;Exclusive Canonical XML (without comments)&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;&gt;独占正規XML（コメントなし）&lt;/a&gt;標準化メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="9bba8474b6924be852a4fb82e20bd985dfbd627d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;&gt; Exclusive Canonical XML with comments&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;&gt;コメント付き&lt;/a&gt;の排他的CanonicalXML正規化メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="9bc8e8bdb11de9b4d0c46e91f131a698d3a4fcc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2002/06/xmldsig-filter2&quot;&gt; XPath Filter 2&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2002/06/xmldsig-filter2&quot;&gt;XPathのフィルタ2は、&lt;/a&gt;変換アルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="31f1151a5b47c7982e4acc0910f8a4b52ca5d55f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha1-rsa-MGF1&quot;&gt; SHA1-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha1-rsa-MGF1&quot;&gt;SHA1-RSA-MGF1&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="c9aa58b291f03f83bf122fa950bfe3fcb22188d3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha224-rsa-MGF1&quot;&gt; SHA224-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha224-rsa-MGF1&quot;&gt;SHA224-RSA-MGF1&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="3175530d8fe15bfed754288d8676d3bf07d8afe0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha256-rsa-MGF1&quot;&gt; SHA256-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha256-rsa-MGF1&quot;&gt;SHA256-RSA-MGF1&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="3144f4088250ae9caf73443a7b313dce2cff775c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-224&quot;&gt; SHA3-224&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-224&quot;&gt;SHA3​​-224&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="5e6ba38dec8a0df92c6bd5c27c41609fff68bd20" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-256&quot;&gt; SHA3-256&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-256&quot;&gt;SHA3​​-256&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="d7d8efc48e2075aca981620055a7e3c7b772d12c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-384&quot;&gt; SHA3-384&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-384&quot;&gt;SHA3​​-384&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="3fe8e6908bf5d6d9385ca4cfbc6956d3e11b3192" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-512&quot;&gt; SHA3-512&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-512&quot;&gt;SHA3​​-512&lt;/a&gt;ダイジェストメソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="3e0da8972968f17f0432d7daf91118841009c746" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha384-rsa-MGF1&quot;&gt; SHA384-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha384-rsa-MGF1&quot;&gt;SHA3​​84-RSA-MGF1&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="951b7da31a6ca5e6cfdec902f4b7f1ddcdba5734" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha512-rsa-MGF1&quot;&gt; SHA512-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha512-rsa-MGF1&quot;&gt;SHA512-RSA-MGF1&lt;/a&gt;（PKCS＃1）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="15e53346f59cf546f87a890d95118ee937cd487b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2009/xmldsig11#dsa-sha256&quot;&gt;DSA-SHA256&lt;/a&gt; (DSS) signature method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2009/xmldsig11#dsa-sha256&quot;&gt;DSA-SHA256&lt;/a&gt;（DSS）署名メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="f0a1935cb2f87664fbd1025122a44d8673e21bab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/TR/1999/REC-xpath-19991116&quot;&gt;XPath&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/1999/REC-xpath-19991116&quot;&gt;XPathは&lt;/a&gt;変換アルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="90ca213841333d5dc68670f40a116f7342d94bf5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/TR/1999/REC-xslt-19991116&quot;&gt;XSLT&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/1999/REC-xslt-19991116&quot;&gt;XSLTは、&lt;/a&gt;変換アルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="fd24bfe3b04d3f02022c8e627280dee1e6b0b526" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;&gt;Canonical XML (without comments)&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;&gt;正規XML（コメントなし）&lt;/a&gt;標準化メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="8d03ca9ec12e255299bb77708dc8410b70e2f6e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;&gt; Canonical XML with comments&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;&gt;コメント付き&lt;/a&gt;のCanonicalXML正規化メソッドアルゴリズムURI。</target>
        </trans-unit>
        <trans-unit id="2b55c67a0d3b64eea8534ec8e0bbb7a17ff9f718" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpexchange&quot;&gt;&lt;code&gt;HttpExchange&lt;/code&gt;&lt;/a&gt; class encapsulates everything an application needs to process incoming requests and to generate appropriate responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98781d4e7260d7cef0e2c5a0ed41bd67c0822aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httprequest.bodypublishers#noBody()&quot;&gt;&lt;code&gt;noBody&lt;/code&gt;&lt;/a&gt; request body publisher can be used where no request body is required or appropriate. Whether a method is restricted, or not, is implementation specific. For example, some implementations may choose to restrict the &lt;code&gt;CONNECT&lt;/code&gt; method.</source>
          <target state="translated">&lt;a href=&quot;httprequest.bodypublishers#noBody()&quot;&gt; &lt;code&gt;noBody&lt;/code&gt; &lt;/a&gt;要求ボディ発行元には、要求本体が必要とされない場合に使用されるか、または適切であり得ます。メソッドが制限されているかどうかは、実装によって異なります。たとえば、一部の実装では、 &lt;code&gt;CONNECT&lt;/code&gt; メソッドを制限することを選択する場合があります。</target>
        </trans-unit>
        <trans-unit id="6b121b64ccce6e083946b53f51efe1baa69ca2c2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; using this subscriber is available after the entire response has been read.</source>
          <target state="translated">&lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;全体の応答が読み込まれた後に、この加入者を使用することが可能です。</target>
        </trans-unit>
        <trans-unit id="270c350cfd8851cc33080ad9adabc067ee58e5f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; using this subscriber is available immediately after the response headers have been read, without requiring to wait for the entire body to be processed. The response body bytes can then be obtained by subscribing to the publisher returned by the &lt;code&gt;HttpResponse&lt;/code&gt;&lt;a href=&quot;httpresponse#body()&quot;&gt;&lt;code&gt;body&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;応答ヘッダーが身体全体が処理されるのを待つ必要なく、読み込まれた直後に、この加入者を使用することは可能です。応答本文のバイトは、 &lt;code&gt;HttpResponse&lt;/code&gt; &lt;a href=&quot;httpresponse#body()&quot;&gt; &lt;code&gt;body&lt;/code&gt; &lt;/a&gt;メソッドによって返される発行元にサブスクライブすることで取得できます。</target>
        </trans-unit>
        <trans-unit id="cc75a5baa31a01f6a547ced8e614c9253df03795" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; using this subscriber is available immediately after the response headers have been read, without requiring to wait for the entire body to be processed. The response body can then be read directly from the &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;応答ヘッダーが身体全体が処理されるのを待つ必要なく、読み込まれた直後に、この加入者を使用することは可能です。応答本文は、&lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;から直接読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="c4a301962377dbb6dfc7d3d088a9924195ee0fe6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; using this subscriber is available immediately after the response headers have been read, without requiring to wait for the entire body to be processed. The response body can then be read directly from the &lt;a href=&quot;../../../../java.base/java/util/stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;応答ヘッダーが身体全体が処理されるのを待つ必要なく、読み込まれた直後に、この加入者を使用することは可能です。応答本文は、&lt;a href=&quot;../../../../java.base/java/util/stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt;から直接読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="0a88e3e4e9db9f8a64057b9d11d9dd15660e4815" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=imf_overview&quot;&gt;Input Method Framework&lt;/a&gt; lets text components interact with input methods, separate software components that preprocess events to let users enter thousands of different characters using keyboards with far fewer keys. &lt;code&gt;JTextComponent&lt;/code&gt; is an &lt;em&gt;active client&lt;/em&gt; of the framework, so it implements the preferred user interface for interacting with input methods. As a consequence, some key events do not reach the text component because they are handled by an input method, and some text input reaches the text component as committed text within an &lt;a href=&quot;../../../java/awt/event/inputmethodevent&quot;&gt;&lt;code&gt;InputMethodEvent&lt;/code&gt;&lt;/a&gt; instead of as a key event. The complete text input is the combination of the characters in &lt;code&gt;keyTyped&lt;/code&gt; key events and committed text in input method events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee6ebd1c78062b9217ddd4f1433c90767823779" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html&quot;&gt; Catalog Standard&lt;/a&gt; distinguished &lt;code&gt;external identifiers&lt;/code&gt; from &lt;code&gt;uri entries&lt;/code&gt; as being used to solely identify DTDs, while &lt;code&gt;uri entries&lt;/code&gt; for other resources such as stylesheets and schema. The Java APIs, such as &lt;a href=&quot;../stream/xmlresolver&quot;&gt;&lt;code&gt;XMLResolver&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt;&lt;code&gt;LSResourceResolver&lt;/code&gt;&lt;/a&gt; however, make no such distinction. In consistent with the existing Java API, this CatalogResolver recognizes a system identifier as a URI and will search both &lt;code&gt;system&lt;/code&gt; and &lt;code&gt;uri&lt;/code&gt; entries in a catalog in order to find a matching entry.</source>
          <target state="translated">&lt;a href=&quot;https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html&quot;&gt;カタログ標準&lt;/a&gt;区別 &lt;code&gt;external identifiers&lt;/code&gt; から &lt;code&gt;uri entries&lt;/code&gt; 、単にDTDを特定するために使用されるように、一方 &lt;code&gt;uri entries&lt;/code&gt; ようなスタイルシートやスキーマなどの他のリソースのため。ただし、&lt;a href=&quot;../stream/xmlresolver&quot;&gt; &lt;code&gt;XMLResolver&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt; &lt;code&gt;LSResourceResolver&lt;/code&gt; &lt;/a&gt;などのJava APIは、そのような区別をしません。既存のJavaAPIと一貫して、このCatalogResolverはシステム識別子をURIとして認識し、一致するエントリを見つけるためにカタログ内の &lt;code&gt;system&lt;/code&gt; エントリと &lt;code&gt;uri&lt;/code&gt; エントリの両方を検索します。</target>
        </trans-unit>
        <trans-unit id="6a01a0650bec2f8bee323fb677c1487d4fef943f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=imf_overview&quot;&gt;Input Method Framework&lt;/a&gt; lets text components interact with input methods, separate software components that preprocess events to let users enter thousands of different characters using keyboards with far fewer keys. &lt;code&gt;JTextComponent&lt;/code&gt; is an &lt;em&gt;active client&lt;/em&gt; of the framework, so it implements the preferred user interface for interacting with input methods. As a consequence, some key events do not reach the text component because they are handled by an input method, and some text input reaches the text component as committed text within an &lt;a href=&quot;../../../java/awt/event/inputmethodevent&quot;&gt;&lt;code&gt;InputMethodEvent&lt;/code&gt;&lt;/a&gt; instead of as a key event. The complete text input is the combination of the characters in &lt;code&gt;keyTyped&lt;/code&gt; key events and committed text in input method events.</source>
          <target state="translated">&lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=imf_overview&quot;&gt;インプットメソッドフレームワークは、&lt;/a&gt;前処理イベントは、ユーザーがはるかに少ないキーでキーボードを使用して、異なる数千文字を入力できるようにするという入力方法、個別のソフトウェアコンポーネントと対話するテキストコンポーネントをすることができます。 &lt;code&gt;JTextComponent&lt;/code&gt; はフレームワークの&lt;em&gt;アクティブなクライアント&lt;/em&gt;であるため、入力メソッドと対話するための優先ユーザーインターフェイスを実装します。結果として、一部のキーイベントは入力メソッドによって処理されるためテキストコンポーネントに到達せず、一部のテキスト入力はキーイベントとしてではなく&lt;a href=&quot;../../../java/awt/event/inputmethodevent&quot;&gt; &lt;code&gt;InputMethodEvent&lt;/code&gt; &lt;/a&gt;内のコミットされたテキストとしてテキストコンポーネントに到達します。完全なテキスト入力は、 &lt;code&gt;keyTyped&lt;/code&gt; キーイベントの文字と入力メソッドイベントのコミットされたテキストの組み合わせです。</target>
        </trans-unit>
        <trans-unit id="821b1efd5e9331beb5a98d63afd9c30f171a3b67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#base64&quot;&gt;Base64&lt;/a&gt; transform algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbcb5a791ba2d2d5d17fa2aa076aa492c569a339" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#dsa-sha1&quot;&gt;DSA-SHA1&lt;/a&gt; (DSS) signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0c9ccc9ebdeb88ffd13a27052f177a67a008cd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;&gt; Enveloped Signature&lt;/a&gt; transform algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc877ea8c2badd57fe1a133fd8758f1776289aad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#hmac-sha1&quot;&gt;HMAC-SHA1&lt;/a&gt; MAC signature method algorithm URI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42d987f35931c999bf4150f958eed2c2629e9b3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;&gt;RSA-SHA1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d88ad7d6a30e087fd7278525804a75354219bd5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#sha1&quot;&gt; SHA1&lt;/a&gt; digest method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ff66f8edb94f4216f72801dd5ee130936b04aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1&quot;&gt; ECDSA-SHA1&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f9097a36f1aa7e536ffc76ffc1c6e8ef68411f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#ecdsa-sha224&quot;&gt; ECDSA-SHA224&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4f6f23c763a0a67916cab42801cd508d1f5bc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256&quot;&gt; ECDSA-SHA256&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="613f0a60fd3f5a7df648cd7846c4298ed057b006" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384&quot;&gt; ECDSA-SHA384&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed62de47358453a54c1615c2147ec1ca5ca6af52" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512&quot;&gt; ECDSA-SHA512&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77f8be921a585668de558d13f27baecbd7b44c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#hmac-sha224&quot;&gt; HMAC-SHA224&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c532b3cd7eb8180d388d7b3ac818313ab174d1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#hmac-sha256&quot;&gt; HMAC-SHA256&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d005c2dcea2aee8b106bbbb9b3740c4f5b2eb1be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#hmac-sha384&quot;&gt; HMAC-SHA384&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be02027dc20907c66b6bb34583ca0a64daa956fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#hmac-sha512&quot;&gt; HMAC-SHA512&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0103be2fb2f2263b60339a68ddbf6162d5752a7f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#rsa-sha224&quot;&gt; RSA-SHA224&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb119b8eebb73767953d04ec8af55943794a5f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;&gt; RSA-SHA256&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b35230ea4d531e62c1437fd7151d9bc3a9dc1d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#rsa-sha384&quot;&gt; RSA-SHA384&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133423919d530f521d7bbef40991e96668d93a2f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#rsa-sha512&quot;&gt; RSA-SHA512&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1ddb86815200a5c901bda798ad17545c36e421" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#sha224&quot;&gt; SHA224&lt;/a&gt; digest method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b362dc22298f8a244a50a6a4ac1429b0345c834f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#sha384&quot;&gt; SHA384&lt;/a&gt; digest method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce6676398831619b682e5056cc9f9d2a94ef627" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmlenc#ripemd160&quot;&gt; RIPEMD-160&lt;/a&gt; digest method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb2222fe585be4a6afdd5a4b21810abe40e7d5a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmlenc#sha256&quot;&gt; SHA256&lt;/a&gt; digest method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc48a22714193f4548fd9bac83e6f60f23b3fa01" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmlenc#sha512&quot;&gt; SHA512&lt;/a&gt; digest method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146fca0e01d97b8c408766247ce764c5afd4918a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/10/xml-exc-c14n#&quot;&gt;Exclusive Canonical XML (without comments)&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0913030298c97979e0efc00deefbc82e51558910" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;&gt; Exclusive Canonical XML with comments&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a108490547def739590e4c659f602b968e58287b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2002/06/xmldsig-filter2&quot;&gt; XPath Filter 2&lt;/a&gt; transform algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d174ea4b71bc23dc838b776a448406da9f293f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha1-rsa-MGF1&quot;&gt; SHA1-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1159e7cd319426806f6649e8ffbf438e039cf0e4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha224-rsa-MGF1&quot;&gt; SHA224-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7423318ce629c8c8a80f1338ce12d2fead9c21" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha256-rsa-MGF1&quot;&gt; SHA256-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1face567fc1c904102d366aeeba871dad42b1c79" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha3-224&quot;&gt; SHA3-224&lt;/a&gt; digest method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0ee28fafe12e07cf0ab7fdb8a43d22cc0f439d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha3-256&quot;&gt; SHA3-256&lt;/a&gt; digest method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36381cc434d23fa1be8484dea84c149223242939" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha3-384&quot;&gt; SHA3-384&lt;/a&gt; digest method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a69038d7aec6034b49d8a99838500529ff8794" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha3-512&quot;&gt; SHA3-512&lt;/a&gt; digest method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e322e964cb0ec4150f27cbc822f3b807fd4cd420" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha384-rsa-MGF1&quot;&gt; SHA384-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e762ca5061fe20a005b8c1b707048bf6ad05fd00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha512-rsa-MGF1&quot;&gt; SHA512-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb8959109476ca23d1fa13867eee9859ee54cef" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2009/xmldsig11#dsa-sha256&quot;&gt;DSA-SHA256&lt;/a&gt; (DSS) signature method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b4035aad4a447135ddab9fcb900bfb0e73224a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/TR/1999/REC-xpath-19991116&quot;&gt;XPath&lt;/a&gt; transform algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffabd99230abc1bb80bb5d2dfa6619a4defbec8a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/TR/1999/REC-xslt-19991116&quot;&gt;XSLT&lt;/a&gt; transform algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfcd6626faee300c768a10ca4c44c665fd437ab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;&gt;Canonical XML (without comments)&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b611aa168a0209c6c1a2490aba55ec2807260376" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;&gt; Canonical XML with comments&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642fb64bde169657a9566fb21ac41012e5eba024" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/TR/xml-c14n11/&quot;&gt;Canonical XML 1.1 (without comments)&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5accf9d05e8b1abfa3efcbe99e2b027cb06d2dc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/TR/xml-c14n11/#WithComments&quot;&gt; Canonical XML 1.1 with comments&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761513f2b0bbba586605e4294850b23aff51188d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;imagereader#getSourceRegion-javax.imageio.ImageReadParam-int-int-&quot;&gt;&lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt;&lt;/a&gt; method may be used if only source clipping is desired.</source>
          <target state="translated">ソースのクリッピングのみが必要な場合は、&lt;a href=&quot;imagereader#getSourceRegion-javax.imageio.ImageReadParam-int-int-&quot;&gt; &lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt; &lt;/a&gt;メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="1eedddde68bb46978d525f7790711dd02e0ebfc9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;inet6address#lform&quot;&gt;full uncompressed form&lt;/a&gt; of an IPv6 literal address is also valid.</source>
          <target state="translated">&lt;a href=&quot;inet6address#lform&quot;&gt;完全な非圧縮形式&lt;/a&gt;のIPv6リテラルアドレスのも有効です。</target>
        </trans-unit>
        <trans-unit id="89aa71069d9b64ba38bde1b7ed22da8a98a99b64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;inetaddress&quot;&gt;&lt;code&gt;InetAddress&lt;/code&gt;&lt;/a&gt; class is the abstraction representing an IP (Internet Protocol) address. It has two subclasses:</source>
          <target state="translated">&lt;a href=&quot;inetaddress&quot;&gt; &lt;code&gt;InetAddress&lt;/code&gt; のの&lt;/a&gt;クラスは、IP（Internet Protocol）アドレスを表す抽象概念です。これには2つのサブクラスがあります。</target>
        </trans-unit>
        <trans-unit id="63af60ec9959bd5779b0337a24c9f2bd2daa5ff3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;japaneseera#SHOWA&quot;&gt;&lt;code&gt;SHOWA&lt;/code&gt;&lt;/a&gt; era that contains 1970-01-01 (ISO calendar system) has the value 1 Later era is numbered 2 (&lt;a href=&quot;japaneseera#HEISEI&quot;&gt;&lt;code&gt;HEISEI&lt;/code&gt;&lt;/a&gt;). Earlier eras are numbered 0 (&lt;a href=&quot;japaneseera#TAISHO&quot;&gt;&lt;code&gt;TAISHO&lt;/code&gt;&lt;/a&gt;), -1 (&lt;a href=&quot;japaneseera#MEIJI&quot;&gt;&lt;code&gt;MEIJI&lt;/code&gt;&lt;/a&gt;), only Meiji and later eras are supported.</source>
          <target state="translated">&lt;a href=&quot;japaneseera#SHOWA&quot;&gt; &lt;code&gt;SHOWA&lt;/code&gt; &lt;/a&gt; 1970-01-01（ISOカレンダシステム）が含ま時代2（番号付けされている値1後で時代有する&lt;a href=&quot;japaneseera#HEISEI&quot;&gt; &lt;code&gt;HEISEI&lt;/code&gt; &lt;/a&gt;）。初期の年号には0（&lt;a href=&quot;japaneseera#TAISHO&quot;&gt; &lt;code&gt;TAISHO&lt;/code&gt; &lt;/a&gt;）、-1（&lt;a href=&quot;japaneseera#MEIJI&quot;&gt; &lt;code&gt;MEIJI&lt;/code&gt; &lt;/a&gt;）の番号が付けられ、明治以降の年号のみがサポートされます。</target>
        </trans-unit>
        <trans-unit id="5ad4c9f7c1d38ff17eed005c539f21753e0ecc72" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;japaneseera#SHOWA&quot;&gt;&lt;code&gt;SHOWA&lt;/code&gt;&lt;/a&gt; era that contains 1970-01-01 (ISO calendar system) has the value 1. Later eras are numbered from 2 (&lt;a href=&quot;japaneseera#HEISEI&quot;&gt;&lt;code&gt;HEISEI&lt;/code&gt;&lt;/a&gt;). Earlier eras are numbered 0 (&lt;a href=&quot;japaneseera#TAISHO&quot;&gt;&lt;code&gt;TAISHO&lt;/code&gt;&lt;/a&gt;), -1 (&lt;a href=&quot;japaneseera#MEIJI&quot;&gt;&lt;code&gt;MEIJI&lt;/code&gt;&lt;/a&gt;)).</source>
          <target state="translated">&lt;a href=&quot;japaneseera#SHOWA&quot;&gt; &lt;code&gt;SHOWA&lt;/code&gt; &lt;/a&gt; 1970-01-01（ISOカレンダーシステム）が含ま時代は1.後の時代には2（から番号付けされた値がある&lt;a href=&quot;japaneseera#HEISEI&quot;&gt; &lt;code&gt;HEISEI&lt;/code&gt; &lt;/a&gt;）。初期の時代には0（&lt;a href=&quot;japaneseera#TAISHO&quot;&gt; &lt;code&gt;TAISHO&lt;/code&gt; &lt;/a&gt;）、-1（&lt;a href=&quot;japaneseera#MEIJI&quot;&gt; &lt;code&gt;MEIJI&lt;/code&gt; &lt;/a&gt;）と番号が付けられます。</target>
        </trans-unit>
        <trans-unit id="cb417ca2de11481b91b5b2da7940f6f41e300934" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;jconsolecontext.connectionstate&quot;&gt;&lt;code&gt;ConnectionState&lt;/code&gt;&lt;/a&gt; bound property name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7b841f1566d0e6d591c7e7f4344dce13c360cd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;jdk/jshell/execution/package-summary&quot;&gt;&lt;code&gt;jdk.jshell.execution&lt;/code&gt;&lt;/a&gt; package contains implementations of the interfaces in &lt;a href=&quot;jdk/jshell/spi/package-summary&quot;&gt;&lt;code&gt;jdk.jshell.spi&lt;/code&gt;&lt;/a&gt;. Otherwise, the four packages are independent, operate at different levels, and do not share functionality or definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b62db497a47756f4923f4b3bee10df00a18df85" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;jdk/jshell/package-summary&quot;&gt;&lt;code&gt;jdk.jshell&lt;/code&gt;&lt;/a&gt; is the package for creating 'snippet' evaluating tools. Generally, this is only package that would be needed for creating tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e8be2575269483bff39e4d55f47fdb289c2059" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;jdk/jshell/spi/package-summary&quot;&gt;&lt;code&gt;jdk.jshell.spi&lt;/code&gt;&lt;/a&gt; package specifies a Service Provider Interface (SPI) for defining execution engine implementations for tools based on the &lt;a href=&quot;jdk/jshell/package-summary&quot;&gt;&lt;code&gt;jdk.jshell&lt;/code&gt;&lt;/a&gt; API. The &lt;a href=&quot;jdk/jshell/execution/package-summary&quot;&gt;&lt;code&gt;jdk.jshell.execution&lt;/code&gt;&lt;/a&gt; package provides standard implementations of &lt;a href=&quot;jdk/jshell/spi/package-summary&quot;&gt;&lt;code&gt;jdk.jshell.spi&lt;/code&gt;&lt;/a&gt; interfaces and supporting code. It also serves as a library of functionality for defining new execution engine implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8960b2d928e6284d2003ad45423ccd0a3f8a73" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;jdk/jshell/tool/package-summary&quot;&gt;&lt;code&gt;jdk.jshell.tool&lt;/code&gt;&lt;/a&gt; package supports programmatically launching the &lt;em&gt;jshell&lt;/em&gt; tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53e05d8dddbec45eaf69a1abeb3e0b1d8a3d4dde" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;linkedhashmap#removeEldestEntry-java.util.Map.Entry-&quot;&gt;&lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt;&lt;/a&gt; method may be overridden to impose a policy for removing stale mappings automatically when new mappings are added to the map.</source>
          <target state="translated">&lt;a href=&quot;linkedhashmap#removeEldestEntry-java.util.Map.Entry-&quot;&gt; &lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt; &lt;/a&gt;メソッドは、新しいマッピングがマップに追加されたときに自動的に失効マッピングを除去するためのポリシーを課すことをオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="e4349deb740443b661611a6b6b7d62724a4a215b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;locateregistry&quot;&gt;&lt;code&gt;LocateRegistry&lt;/code&gt;&lt;/a&gt; class provides a programmatic API for constructing a bootstrap reference to a &lt;code&gt;Registry&lt;/code&gt; at a remote address (see the static &lt;code&gt;getRegistry&lt;/code&gt; methods) and for creating and exporting a &lt;code&gt;Registry&lt;/code&gt; in the current VM on a particular local address (see the static &lt;code&gt;createRegistry&lt;/code&gt; methods).</source>
          <target state="translated">&lt;a href=&quot;locateregistry&quot;&gt; &lt;code&gt;LocateRegistry&lt;/code&gt; の&lt;/a&gt;クラスは、プログラムへのブートストラップ参照構築するためのAPIを提供 &lt;code&gt;Registry&lt;/code&gt; リモートアドレスに（静的参照 &lt;code&gt;getRegistry&lt;/code&gt; 方法）を作成およびエクスポートするために &lt;code&gt;Registry&lt;/code&gt; （静的参照特定のローカルアドレスに現在のVMでの &lt;code&gt;createRegistry&lt;/code&gt; の方法を）。</target>
        </trans-unit>
        <trans-unit id="685e9f05827cafac5b9700afb54eb83f6c776e78" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; interface supports locking disciplines that differ in semantics (reentrant, fair, etc), and that can be used in non-block-structured contexts including hand-over-hand and lock reordering algorithms. The main implementation is &lt;a href=&quot;reentrantlock&quot;&gt;&lt;code&gt;ReentrantLock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;インターフェースセマンティクス（リエントラント、フェアなど）が異なる分野を固定支持し、それがハンドオーバーハンドロック並べ替えアルゴリズムを含む非ブロック構造のコンテキストで使用することができます。主な実装は&lt;a href=&quot;reentrantlock&quot;&gt; &lt;code&gt;ReentrantLock&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="3180b0ec0d45d09638da4a7e022ef32c09072ff6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;managementfactory&quot;&gt;&lt;code&gt;ManagementFactory&lt;/code&gt;&lt;/a&gt; class is the management factory class for the Java platform. This class provides a set of static factory methods to obtain the MXBeans for the Java platform to allow an application to access the MXBeans directly.</source>
          <target state="translated">&lt;a href=&quot;managementfactory&quot;&gt; &lt;code&gt;ManagementFactory&lt;/code&gt; に&lt;/a&gt;クラスは、Javaプラットフォームの管理ファクトリクラスです。このクラスは、JavaプラットフォームのMXBeanを取得して、アプリケーションがMXBeanに直接アクセスできるようにする一連の静的ファクトリメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="6aee927bc4b4fd7e8464ec83c8eda0aa86fccfbd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;managementfactory#getPlatformManagementInterfaces--&quot;&gt;&lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt;&lt;/a&gt; method returns all management interfaces supported in the Java virtual machine including the standard management interfaces listed in the tables below as well as the management interfaces extended by the JDK implementation.</source>
          <target state="translated">&lt;a href=&quot;managementfactory#getPlatformManagementInterfaces--&quot;&gt; &lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンでサポートされるすべての管理インターフェースを返します。これには、以下の表にリストされている標準管理インターフェースや、JDK実装によって拡張された管理インターフェースが含まれます。</target>
        </trans-unit>
        <trans-unit id="c882421782dfc7080f4d7ba69c0672ccbaee2976" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matcher#find--&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; method scans the input sequence looking for the next subsequence that matches the pattern.</source>
          <target state="translated">&lt;a href=&quot;matcher#find--&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;方法は、パターンに一致する次のサブシーケンスを探して入力シーケンスをスキャンします。</target>
        </trans-unit>
        <trans-unit id="f8f9d8ffa3354e5ea114ec9c9eecd670dfa20d2a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matcher#lookingAt--&quot;&gt;&lt;code&gt;lookingAt&lt;/code&gt;&lt;/a&gt; method attempts to match the input sequence, starting at the beginning, against the pattern.</source>
          <target state="translated">&lt;a href=&quot;matcher#lookingAt--&quot;&gt; &lt;code&gt;lookingAt&lt;/code&gt; &lt;/a&gt;入力シーケンスにマッチする方法を試み、パターンに対して、先頭から始まります。</target>
        </trans-unit>
        <trans-unit id="81a4840468c5585768ffd0339442ff61c0e3f495" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matcher#matches--&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method attempts to match the entire input sequence against the pattern.</source>
          <target state="translated">&lt;a href=&quot;matcher#matches--&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt;パターンに対する全入力配列と一致するメソッドの試みを。</target>
        </trans-unit>
        <trans-unit id="3b536101e87b34402f5a75ef5e45b85b8065447c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;memorypoolmxbean#getUsage--&quot;&gt;&lt;code&gt;getUsage()&lt;/code&gt;&lt;/a&gt; method provides an estimate of the current usage of a memory pool. For a garbage-collected memory pool, the amount of used memory includes the memory occupied by all objects in the pool including both &lt;em&gt;reachable&lt;/em&gt; and &lt;em&gt;unreachable&lt;/em&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;memorypoolmxbean#getUsage--&quot;&gt; &lt;code&gt;getUsage()&lt;/code&gt; &lt;/a&gt;メソッドは、メモリ・プールの現在の使用量の推定値を提供します。ガベージコレクションされたメモリプールの場合、使用されるメモリの量には、&lt;em&gt;到達可能&lt;/em&gt;オブジェクトと&lt;em&gt;到達不能&lt;/em&gt;オブジェクトの両方を含む、プール内のすべてのオブジェクトが占めるメモリが含まれます。</target>
        </trans-unit>
        <trans-unit id="2917cba2196f42068511cb8866976f8cefd8ba43" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;memorypoolmxbean#isCollectionUsageThresholdSupported--&quot;&gt;&lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if this functionality is supported.</source>
          <target state="translated">&lt;a href=&quot;memorypoolmxbean#isCollectionUsageThresholdSupported--&quot;&gt; &lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、この機能がサポートされているかどうかを決定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="00b1d50b89741dae5005d34d49e3e5f4412e5439" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;methodhandles#lookup()&quot;&gt;&lt;code&gt;MethodHandles.lookup()&lt;/code&gt;&lt;/a&gt; factory method produces a &lt;code&gt;Lookup&lt;/code&gt; object with &lt;code&gt;null&lt;/code&gt; previous lookup class. &lt;a href=&quot;#in(java.lang.Class)&quot;&gt;&lt;code&gt;lookup.in(D.class)&lt;/code&gt;&lt;/a&gt; transforms the &lt;code&gt;lookup&lt;/code&gt; on class &lt;code&gt;C&lt;/code&gt; to class &lt;code&gt;D&lt;/code&gt; without elevation of privileges. If &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;D&lt;/code&gt; are in the same module, &lt;code&gt;lookup2&lt;/code&gt; records &lt;code&gt;D&lt;/code&gt; as the new lookup class and keeps the same previous lookup class as the original &lt;code&gt;lookup&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if not present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00777c593762897a62ff30f882e9e994e0fd4435" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;Lookup Factory Methods&lt;/a&gt; correspond to all major use cases for methods, constructors, and fields. These use cases may be distinguished using small integers as follows:</source>
          <target state="translated">&lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;検索ファクトリーメソッドは、&lt;/a&gt;メソッド、コンストラクタ、およびフィールドのすべての主要なユースケースに対応しています。これらの使用例は、次のように小さな整数を使用して区別できます。</target>
        </trans-unit>
        <trans-unit id="2c3b7cfe91905e95935f97b235b0958422f4db84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;moduledescriptor#version()&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt;, and the module name when the attribute &quot;&lt;code&gt;Automatic-Module-Name&lt;/code&gt;&quot; is not present, are derived from the file name of the JAR file as follows:</source>
          <target state="translated">&lt;a href=&quot;moduledescriptor#version()&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt;属性「およびモジュール名 &lt;code&gt;Automatic-Module-Name&lt;/code&gt; 、次のように」存在ではありませんが、JARファイルのファイル名に由来しています。</target>
        </trans-unit>
        <trans-unit id="803a5dc5363ca39a6c192f06387b9fe75f794ba3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt;&lt;/a&gt; method is used to join a group and receive all multicast datagrams sent to the group. A channel may join several multicast groups and may join the same group on several &lt;a href=&quot;../../net/networkinterface&quot;&gt;&lt;code&gt;interfaces&lt;/code&gt;&lt;/a&gt;. Membership is dropped by invoking the &lt;a href=&quot;membershipkey#drop--&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method on the returned &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt;. If the underlying platform supports source filtering then the &lt;a href=&quot;membershipkey#block-java.net.InetAddress-&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;membershipkey#unblock-java.net.InetAddress-&quot;&gt;&lt;code&gt;unblock&lt;/code&gt;&lt;/a&gt; methods can be used to block or unblock multicast datagrams from particular source addresses.</source>
          <target state="translated">&lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt; &lt;/a&gt;メソッドは、グループに参加し、グループに送信されたすべてのマルチキャストデータグラムを受信するために使用されます。チャネルは複数のマルチキャストグループに参加したり、複数の&lt;a href=&quot;../../net/networkinterface&quot;&gt; &lt;code&gt;interfaces&lt;/code&gt; &lt;/a&gt;上の同じグループに参加したりできます。メンバーシップは、返された&lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; で&lt;/a&gt;&lt;a href=&quot;membershipkey#drop--&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって削除されます。基盤となるプラットフォームがソースフィルタリングをサポートしている場合、&lt;a href=&quot;membershipkey#block-java.net.InetAddress-&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;membershipkey#unblock-java.net.InetAddress-&quot;&gt; &lt;code&gt;unblock&lt;/code&gt; &lt;/a&gt;メソッドを使用して、特定のソースアドレスからのマルチキャストデータグラムをブロックまたはブロック解除できます。</target>
        </trans-unit>
        <trans-unit id="586959a334aab9367192bda3b22ae8905ccfbfb5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-java.net.InetAddress-&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt;&lt;/a&gt; method is used to begin receiving datagrams sent to a group whose source address matches a given source address. This method throws &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; if the underlying platform does not support source filtering. Membership is &lt;em&gt;cumulative&lt;/em&gt; and this method may be invoked again with the same group and interface to allow receiving datagrams from other source addresses. The method returns a &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt; that represents membership to receive datagrams from the given source address. Invoking the key's &lt;a href=&quot;membershipkey#drop--&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method drops membership so that datagrams from the source address can no longer be received.</source>
          <target state="translated">&lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-java.net.InetAddress-&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt; &lt;/a&gt;方法は、その元アドレス指定された送信元アドレスと一致するグループに送信されたデータグラムの受信を開始するために使用されます。基盤となるプラットフォームがソースフィルタリングをサポートしてい&lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;場合、このメソッドはUnsupportedOperationExceptionをスローします。メンバーシップは&lt;em&gt;累積的で&lt;/em&gt;あり、このメソッドを同じグループとインターフェイスで再度呼び出して、他の送信元アドレスからデータグラムを受信できるようにすることができます。このメソッドは、指定された送信元アドレスからデータグラムを受信するための&lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; &lt;/a&gt;を表すMembershipKeyを返します。キーの&lt;a href=&quot;membershipkey#drop--&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、メンバーシップが削除され、送信元アドレスからのデータグラムを受信できなくなります。</target>
        </trans-unit>
        <trans-unit id="ea1666c946dbc92e3963a08d51b7fe1ff2e05b97" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;mutablecallsite#syncAll-java.lang.invoke.MutableCallSite:A-&quot;&gt;&lt;code&gt;syncAll&lt;/code&gt;&lt;/a&gt; operation provides a way to force threads to accept a new target value, even if there is no other synchronization.</source>
          <target state="translated">&lt;a href=&quot;mutablecallsite#syncAll-java.lang.invoke.MutableCallSite:A-&quot;&gt; &lt;code&gt;syncAll&lt;/code&gt; の&lt;/a&gt;操作は、他の同期がない場合でも、新たな目標値を受け入れるようにスレッドを強制する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="4a33de6ddb9b787f9d72d46f03220512c25c8dcf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkchannel&quot;&gt;&lt;code&gt;NetworkChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to &lt;a href=&quot;networkchannel#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; the channel's socket, obtain the address to which the socket is bound, and methods to &lt;a href=&quot;networkchannel#getOption(java.net.SocketOption)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;networkchannel#setOption(java.net.SocketOption,T)&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; socket options. The &lt;a href=&quot;multicastchannel&quot;&gt;&lt;code&gt;MulticastChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to join Internet Protocol (IP) multicast groups.</source>
          <target state="translated">&lt;a href=&quot;networkchannel&quot;&gt; &lt;code&gt;NetworkChannel&lt;/code&gt; &lt;/a&gt;インタフェースの指定方法がする&lt;a href=&quot;networkchannel#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;、チャネルのソケットをソケットがバインドされているアドレスを取得し、方法はする&lt;a href=&quot;networkchannel#getOption(java.net.SocketOption)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;networkchannel#setOption(java.net.SocketOption,T)&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;ソケットオプション。&lt;a href=&quot;multicastchannel&quot;&gt; &lt;code&gt;MulticastChannel&lt;/code&gt; の&lt;/a&gt;インタフェースの指定方法は、インターネットプロトコル（IP）マルチキャストグループに参加します。</target>
        </trans-unit>
        <trans-unit id="86bc696e481ab25ea679a816f2b2344f73e99298" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkchannel&quot;&gt;&lt;code&gt;NetworkChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; the channel's socket, obtain the address to which the socket is bound, and methods to &lt;a href=&quot;networkchannel#getOption-java.net.SocketOption-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; socket options. The &lt;a href=&quot;multicastchannel&quot;&gt;&lt;code&gt;MulticastChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to join Internet Protocol (IP) multicast groups.</source>
          <target state="translated">&lt;a href=&quot;networkchannel&quot;&gt; &lt;code&gt;NetworkChannel&lt;/code&gt; &lt;/a&gt;インタフェースの指定方法がする&lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;、チャネルのソケットをソケットがバインドされているアドレスを取得し、方法はする&lt;a href=&quot;networkchannel#getOption-java.net.SocketOption-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;ソケットオプション。&lt;a href=&quot;multicastchannel&quot;&gt; &lt;code&gt;MulticastChannel&lt;/code&gt; の&lt;/a&gt;インタフェースの指定方法は、インターネットプロトコル（IP）マルチキャストグループに参加します。</target>
        </trans-unit>
        <trans-unit id="97e5a8c6cebdfee9806373945502b19fe12625e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; methods that do not otherwise have a value to return are specified to return the network channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">&lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; を&lt;/a&gt;戻り値を返さないものな方法は、それらが呼び出される時にネットワークチャネルを返すように指定されています。これにより、メソッド呼び出しを連鎖させることができます。このインターフェースの実装は、戻り値の型を特殊化して、実装クラスでのメソッド呼び出しをチェーンできるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="2aae4de2a8761dadc1703ebe8bd9d27e209c3303" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkinterface&quot;&gt;&lt;code&gt;NetworkInterface&lt;/code&gt;&lt;/a&gt; class provides APIs to browse and query all the networking interfaces (e.g. ethernet connection or PPP endpoint) of the local machine. It is through that class that you can check if any of the local interfaces is configured to support IPv6.</source>
          <target state="translated">&lt;a href=&quot;networkinterface&quot;&gt; &lt;code&gt;NetworkInterface&lt;/code&gt; &lt;/a&gt;クラスは、ローカルマシンのすべてのネットワークインタフェース（例えば、イーサネット接続またはPPP端点）をブラウズし、クエリするためのAPIを提供します。そのクラスを通じて、ローカルインターフェースのいずれかがIPv6をサポートするように構成されているかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="1d4398a2182ad9d3d156c72bc1e1b46b563498d0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;openmbeanconstructorinfo#getSignature--&quot;&gt;&lt;code&gt;getSignature()&lt;/code&gt;&lt;/a&gt; method should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt; which implements the &lt;a href=&quot;openmbeanparameterinfo&quot;&gt;&lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt;&lt;/a&gt; interface (typically &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;openmbeanconstructorinfo#getSignature--&quot;&gt; &lt;code&gt;getSignature()&lt;/code&gt; &lt;/a&gt;メソッドは、実行時のサブクラスのインスタンスの配列を返す必要があり&lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt;実装&lt;a href=&quot;openmbeanparameterinfo&quot;&gt; &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; の&lt;/a&gt;インタフェース（通常&lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; を&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ce3b1f0ce29ed84d089633cd109fcedd10fa19a0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;openmbeaninfo#getAttributes--&quot;&gt;&lt;code&gt;getAttributes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbeaninfo#getOperations--&quot;&gt;&lt;code&gt;getOperations()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;openmbeaninfo#getConstructors--&quot;&gt;&lt;code&gt;getConstructors()&lt;/code&gt;&lt;/a&gt; methods of the implementing class should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt;&lt;code&gt;MBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; respectively which implement the &lt;a href=&quot;openmbeanattributeinfo&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbeanoperationinfo&quot;&gt;&lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;openmbeanconstructorinfo&quot;&gt;&lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; interface respectively.</source>
          <target state="translated">実装クラスの&lt;a href=&quot;openmbeaninfo#getAttributes--&quot;&gt; &lt;code&gt;getAttributes()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;openmbeaninfo#getOperations--&quot;&gt; &lt;code&gt;getOperations()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;openmbeaninfo#getConstructors--&quot;&gt; &lt;code&gt;getConstructors()&lt;/code&gt; &lt;/a&gt;メソッドは、実行時に、それぞれ&lt;a href=&quot;openmbeanattributeinfo&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;openmbeanoperationinfo&quot;&gt; &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; 、&lt;/a&gt;または&lt;a href=&quot;openmbeanconstructorinfo&quot;&gt; &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; &lt;/a&gt;インターフェースを実装する&lt;a href=&quot;../mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; 、&lt;/a&gt;または&lt;a href=&quot;../mbeanconstructorinfo&quot;&gt; &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; の&lt;/a&gt;サブクラスのインスタンスの配列を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="fc59af9de6b925c7a001de9e0cda1335db8b9216" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;openmbeanoperationinfo#getSignature--&quot;&gt;&lt;code&gt;getSignature()&lt;/code&gt;&lt;/a&gt; method should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt; which implements the &lt;a href=&quot;openmbeanparameterinfo&quot;&gt;&lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt;&lt;/a&gt; interface (typically &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;openmbeanoperationinfo#getSignature--&quot;&gt; &lt;code&gt;getSignature()&lt;/code&gt; &lt;/a&gt;メソッドは、実行時のサブクラスのインスタンスの配列を返す必要があり&lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt;実装&lt;a href=&quot;openmbeanparameterinfo&quot;&gt; &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; の&lt;/a&gt;インタフェース（通常&lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; を&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="264dc2096f52224fc7a2ff5e5ccbe792a29983b3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; interface has more detailed descriptions of the types of segments that make up a path and the winding rules that control how to determine which regions are inside or outside the path.</source>
          <target state="translated">&lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;インタフェースは、内部又は経路の外側である領域を決定する方法を制御することをパスと巻ルールを構成するセグメントの種類の詳細な説明を持っています。</target>
        </trans-unit>
        <trans-unit id="008d56029870b1f79472efe94879633297a8063c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributes#permissions()&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; attribute is a set of access permissions. This file attribute view provides access to the nine permission bits defined by the &lt;a href=&quot;posixfilepermission&quot;&gt;&lt;code&gt;PosixFilePermission&lt;/code&gt;&lt;/a&gt; class. These nine permission bits determine the &lt;em&gt;read&lt;/em&gt;, &lt;em&gt;write&lt;/em&gt;, and &lt;em&gt;execute&lt;/em&gt; access for the file owner, group, and others (others meaning identities other than the owner and members of the group). Some operating systems and file systems may provide additional permission bits but access to these other bits is not defined by this class in this release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857b7af384088ef828c48d616bc078e73774a9aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributes#permissions()&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; attribute is a set of access permissions. This file attribute view provides access to the nine permission defined by the &lt;a href=&quot;posixfilepermission&quot;&gt;&lt;code&gt;PosixFilePermission&lt;/code&gt;&lt;/a&gt; class. These nine permission bits determine the &lt;em&gt;read&lt;/em&gt;, &lt;em&gt;write&lt;/em&gt;, and &lt;em&gt;execute&lt;/em&gt; access for the file owner, group, and others (others meaning identities other than the owner and members of the group). Some operating systems and file systems may provide additional permission bits but access to these other bits is not defined by this class in this release.</source>
          <target state="translated">&lt;a href=&quot;posixfileattributes#permissions()&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;属性は、アクセス許可のセットです。このファイル属性ビューは、&lt;a href=&quot;posixfilepermission&quot;&gt; &lt;code&gt;PosixFilePermission&lt;/code&gt; &lt;/a&gt;クラスによって定義された9つのパーミッションへのアクセスを提供します。これらの9つの許可ビットは、ファイルの所有者、グループ、およびその他（所有者とグループのメンバー以外のIDを意味するその他）の&lt;em&gt;読み取り&lt;/em&gt;、&lt;em&gt;書き込み&lt;/em&gt;、および&lt;em&gt;実行&lt;/em&gt;アクセスを決定します。一部のオペレーティングシステムおよびファイルシステムは、追加の許可ビットを提供する場合がありますが、これらの他のビットへのアクセスは、このリリースではこのクラスによって定義されていません。</target>
        </trans-unit>
        <trans-unit id="4744c29d66c9935d41a7b7e162f4709ec4bf036a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributes#permissions--&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; attribute is a set of access permissions. This file attribute view provides access to the nine permission defined by the &lt;a href=&quot;posixfilepermission&quot;&gt;&lt;code&gt;PosixFilePermission&lt;/code&gt;&lt;/a&gt; class. These nine permission bits determine the &lt;em&gt;read&lt;/em&gt;, &lt;em&gt;write&lt;/em&gt;, and &lt;em&gt;execute&lt;/em&gt; access for the file owner, group, and others (others meaning identities other than the owner and members of the group). Some operating systems and file systems may provide additional permission bits but access to these other bits is not defined by this class in this release.</source>
          <target state="translated">&lt;a href=&quot;posixfileattributes#permissions--&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;属性は、アクセス許可のセットです。このファイル属性ビューは、&lt;a href=&quot;posixfilepermission&quot;&gt; &lt;code&gt;PosixFilePermission&lt;/code&gt; &lt;/a&gt;クラスで定義された9つの権限へのアクセスを提供します。これらの9つの許可ビットは、ファイルの所有者、グループ、およびその他（その他の所有者およびグループのメンバー以外のIDを意味する）の&lt;em&gt;読み取り&lt;/em&gt;、&lt;em&gt;書き込み&lt;/em&gt;、および&lt;em&gt;実行&lt;/em&gt;アクセスを決定します。一部のオペレーティングシステムとファイルシステムは追加の許可ビットを提供する場合がありますが、これらの他のビットへのアクセスは、このリリースではこのクラスによって定義されていません。</target>
        </trans-unit>
        <trans-unit id="9d75e18b4bb9f537656575df11977b7323415855" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributeview&quot;&gt;&lt;code&gt;PosixFileAttributeView&lt;/code&gt;&lt;/a&gt; interface extends &lt;code&gt;BasicFileAttributeView&lt;/code&gt; by defining methods to access the file attributes commonly used by file systems and operating systems that implement the Portable Operating System Interface (POSIX) family of standards.</source>
          <target state="translated">&lt;a href=&quot;posixfileattributeview&quot;&gt; &lt;code&gt;PosixFileAttributeView&lt;/code&gt; の&lt;/a&gt;インタフェースは、拡張 &lt;code&gt;BasicFileAttributeView&lt;/code&gt; を一般の規格のポータブルオペレーティングシステムインタフェース（POSIX）ファミリを実装するファイルシステムおよびオペレーティングシステムで使用されるファイル属性にアクセスするためのメソッドを定義することによって。</target>
        </trans-unit>
        <trans-unit id="6738d407658008666bc1a5053dfbc19962272b6f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method is used to read the file's attributes. The file &lt;a href=&quot;posixfileattributes#owner--&quot;&gt;&lt;code&gt;owner&lt;/code&gt;&lt;/a&gt; is represented by a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; that is the identity of the file owner for the purposes of access control. The &lt;a href=&quot;posixfileattributes#group--&quot;&gt;&lt;code&gt;group-owner&lt;/code&gt;&lt;/a&gt;, represented by a &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt;, is the identity of the group owner, where a group is an identity created for administrative purposes so as to determine the access rights for the members of the group.</source>
          <target state="translated">&lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; の&lt;/a&gt;方法は、ファイルの属性を読み取るために使用されます。ファイル&lt;a href=&quot;posixfileattributes#owner--&quot;&gt; &lt;code&gt;owner&lt;/code&gt; &lt;/a&gt;は、アクセス制御の目的でファイル所有者のIDである&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;によって表されます。&lt;a href=&quot;posixfileattributes#group--&quot;&gt; &lt;code&gt;group-owner&lt;/code&gt; &lt;/a&gt;で表される、&lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; は&lt;/a&gt;、グループは、グループのメンバーのアクセス権を決定するために、管理目的のために作成されたアイデンティティであるグループの所有者のアイデンティティです。</target>
        </trans-unit>
        <trans-unit id="f5cae7f82ee146d950bad36b2028281d1616c695" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfilepermissions&quot;&gt;&lt;code&gt;PosixFilePermissions&lt;/code&gt;&lt;/a&gt; class defines methods for manipulating set of permissions.</source>
          <target state="translated">&lt;a href=&quot;posixfilepermissions&quot;&gt; &lt;code&gt;PosixFilePermissions&lt;/code&gt; の&lt;/a&gt;クラスには、アクセス権のセットを操作するための方法を定義します。</target>
        </trans-unit>
        <trans-unit id="2102dd9dc30eda3c84421793f04949c973076a9e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; instances created by &lt;a href=&quot;processbuilder&quot;&gt;&lt;code&gt;ProcessBuilder&lt;/code&gt;&lt;/a&gt; can be queried for a ProcessHandle that provides information about the Process. ProcessHandle references should not be freely distributed.</source>
          <target state="translated">&lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;によって作成されたインスタンス&lt;a href=&quot;processbuilder&quot;&gt; &lt;code&gt;ProcessBuilder&lt;/code&gt; &lt;/a&gt;プロセスに関する情報を提供ProcessHandleを照会することができます。ProcessHandle参照は自由に配布しないでください。</target>
        </trans-unit>
        <trans-unit id="b47226c20611a769390944113a9bbd420bdbfa52" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;process#getInputStream()&quot;&gt;&lt;code&gt;standard output&lt;/code&gt;&lt;/a&gt; of all processes except the last process are</source>
          <target state="translated">最後のプロセスを除くすべてのプロセスの&lt;a href=&quot;process#getInputStream()&quot;&gt; &lt;code&gt;standard output&lt;/code&gt; &lt;/a&gt;は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1c860f3bbab8e3f481494dd988c7bd96d51b73be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;Runtime.exec&lt;/code&gt;&lt;/a&gt; methods create a native process and return an instance of a subclass of &lt;code&gt;Process&lt;/code&gt; that can be used to control the process and obtain information about it.</source>
          <target state="translated">&lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt; &lt;code&gt;Runtime.exec&lt;/code&gt; &lt;/a&gt;メソッドは、ネイティブなプロセスを作成してのサブクラスのインスタンスを返す &lt;code&gt;Process&lt;/code&gt; 工程を制御し、それについての情報を得るために使用することができます。</target>
        </trans-unit>
        <trans-unit id="b1cb6821609bfac1723d508b0bb91d2d757fd59e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;Runtime.exec&lt;/code&gt;&lt;/a&gt; methods create a native process and return an instance of a subclass of &lt;code&gt;Process&lt;/code&gt; that can be used to control the process and obtain information about it. The class &lt;code&gt;Process&lt;/code&gt; provides methods for performing input from the process, performing output to the process, waiting for the process to complete, checking the exit status of the process, and destroying (killing) the process.</source>
          <target state="translated">&lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt; &lt;code&gt;Runtime.exec&lt;/code&gt; &lt;/a&gt;メソッドは、ネイティブなプロセスを作成してのサブクラスのインスタンスを返す &lt;code&gt;Process&lt;/code&gt; 工程を制御し、それについての情報を得るために使用することができます。クラス &lt;code&gt;Process&lt;/code&gt; は、プロセスからの入力の実行、プロセスへの出力の実行、プロセスの完了の待機、プロセスの終了ステータスのチェック、およびプロセスの破棄（強制終了）のためのメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="ea844c85f1e3f45d0fbdf528232a86e15887b986" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;properties#load-java.io.Reader-&quot;&gt;&lt;code&gt;load(Reader)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;properties#store-java.io.Writer-java.lang.String-&quot;&gt;&lt;code&gt;store(Writer, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties from and to a character based stream in a simple line-oriented format specified below. The &lt;a href=&quot;properties#load-java.io.InputStream-&quot;&gt;&lt;code&gt;load(InputStream)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;properties#store-java.io.OutputStream-java.lang.String-&quot;&gt;&lt;code&gt;store(OutputStream, String)&lt;/code&gt;&lt;/a&gt; methods work the same way as the load(Reader)/store(Writer, String) pair, except the input/output stream is encoded in ISO 8859-1 character encoding. Characters that cannot be directly represented in this encoding can be written using Unicode escapes as defined in section 3.3 of</source>
          <target state="translated">&lt;a href=&quot;properties#load-java.io.Reader-&quot;&gt; &lt;code&gt;load(Reader)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;properties#store-java.io.Writer-java.lang.String-&quot;&gt; &lt;code&gt;store(Writer, String)&lt;/code&gt; &lt;/a&gt;単純な行指向形式の文字ベースのストリームからとする方法ロードおよびストアのプロパティは、以下に指定しました。&lt;a href=&quot;properties#load-java.io.InputStream-&quot;&gt; &lt;code&gt;load(InputStream)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;properties#store-java.io.OutputStream-java.lang.String-&quot;&gt; &lt;code&gt;store(OutputStream, String)&lt;/code&gt; &lt;/a&gt;の方法は、入力/出力ストリームがISO 8859-1文字エンコーディングでエンコードされている以外は、負荷（リーダ）/ストア（ライター、String）を対と同じように動作します。このエンコーディングで直接表現できない文字は、セクション3.3で定義されているUnicodeエスケープを使用して記述できます。</target>
        </trans-unit>
        <trans-unit id="43359c708823c69498cdd32a1f027924e4c33c67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;properties#loadFromXML-java.io.InputStream-&quot;&gt;&lt;code&gt;loadFromXML(InputStream)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;properties#storeToXML-java.io.OutputStream-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties in a simple XML format. By default the UTF-8 character encoding is used, however a specific encoding may be specified if required. Implementations are required to support UTF-8 and UTF-16 and may support other encodings. An XML properties document has the following DOCTYPE declaration:</source>
          <target state="translated">&lt;a href=&quot;properties#loadFromXML-java.io.InputStream-&quot;&gt; &lt;code&gt;loadFromXML(InputStream)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;properties#storeToXML-java.io.OutputStream-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt; &lt;/a&gt;の単純なXML形式のメソッドのロードおよびストアのプロパティ。デフォルトではUTF-8文字エンコーディングが使用されますが、必要に応じて特定のエンコーディングを指定できます。実装はUTF-8およびUTF-16をサポートする必要があり、他のエンコーディングをサポートする場合があります。XMLプロパティドキュメントには、次のDOCTYPE宣言があります。</target>
        </trans-unit>
        <trans-unit id="f8f6297aee07864a86e2bb6a0ea3ccd94df49256" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;proxy#isProxyClass-java.lang.Class-&quot;&gt;&lt;code&gt;Proxy.isProxyClass&lt;/code&gt;&lt;/a&gt; method will return true if it is passed a proxy class-- a class returned by &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; or the class of an object returned by &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;-- and false otherwise.</source>
          <target state="translated">&lt;a href=&quot;proxy#isProxyClass-java.lang.Class-&quot;&gt; &lt;code&gt;Proxy.isProxyClass&lt;/code&gt; の&lt;/a&gt;それはクラスclass--プロキシを渡された場合、メソッドはtrueを返しますによって返さ &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; かによって返されたオブジェクトのクラス &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; -それ以外の場合はfalse。</target>
        </trans-unit>
        <trans-unit id="82b9b6df8d0389635e3baf324194adaf4d0a9535" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queue#element--&quot;&gt;&lt;code&gt;element()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;queue#peek--&quot;&gt;&lt;code&gt;peek()&lt;/code&gt;&lt;/a&gt; methods return, but do not remove, the head of the queue.</source>
          <target state="translated">&lt;a href=&quot;queue#element--&quot;&gt; &lt;code&gt;element()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;queue#peek--&quot;&gt; &lt;code&gt;peek()&lt;/code&gt; &lt;/a&gt;メソッドは、キューの先頭を返しますが、削除しないでください。</target>
        </trans-unit>
        <trans-unit id="b3de824965777891d01ab953cb9a6bb37bc267d2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queue#offer-E-&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt; method inserts an element if possible, otherwise returning &lt;code&gt;false&lt;/code&gt;. This differs from the &lt;a href=&quot;collection#add-E-&quot;&gt;&lt;code&gt;Collection.add&lt;/code&gt;&lt;/a&gt; method, which can fail to add an element only by throwing an unchecked exception. The &lt;code&gt;offer&lt;/code&gt; method is designed for use when failure is a normal, rather than exceptional occurrence, for example, in fixed-capacity (or &quot;bounded&quot;) queues.</source>
          <target state="translated">&lt;a href=&quot;queue#offer-E-&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt;可能であれば、方法はそれ以外の場合は戻って、要素を挿入 &lt;code&gt;false&lt;/code&gt; 。これは、チェックされていない例外をスローすることによってのみ要素の追加に失敗する可能性がある&lt;a href=&quot;collection#add-E-&quot;&gt; &lt;code&gt;Collection.add&lt;/code&gt; &lt;/a&gt;メソッドとは異なります。 &lt;code&gt;offer&lt;/code&gt; 障害はむしろ例外発生より、正常である場合の方法は、固定容量（または「有界」）キューに、例えば、使用のために設計されています。</target>
        </trans-unit>
        <trans-unit id="e8d4e252e82e3c4010bc6f24536b3c8e384a7a00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queue#remove--&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;queue#poll--&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; methods remove and return the head of the queue. Exactly which element is removed from the queue is a function of the queue's ordering policy, which differs from implementation to implementation. The &lt;code&gt;remove()&lt;/code&gt; and &lt;code&gt;poll()&lt;/code&gt; methods differ only in their behavior when the queue is empty: the &lt;code&gt;remove()&lt;/code&gt; method throws an exception, while the &lt;code&gt;poll()&lt;/code&gt; method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;queue#remove--&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;queue#poll--&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt;メソッドは、キューの先頭を削除して返します。キューから削除される要素は、キューの順序付けポリシーの関数であり、実装ごとに異なります。 &lt;code&gt;remove()&lt;/code&gt; と &lt;code&gt;poll()&lt;/code&gt; キューが空である場合の方法は、それらの動作のみが異なる： &lt;code&gt;remove()&lt;/code&gt; メソッドはしばらくの間、例外をスロー &lt;code&gt;poll()&lt;/code&gt; メソッドの戻り値 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16aaa4fa2dee4f0e0c1d205d7849d692a73afd79" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;readablebytechannel#read(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method that reads bytes from the channel into a buffer; similarly, the &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method that writes bytes from a buffer to the channel. The &lt;a href=&quot;bytechannel&quot;&gt;&lt;code&gt;ByteChannel&lt;/code&gt;&lt;/a&gt; interface unifies these two interfaces for the common case of channels that can both read and write bytes. The &lt;a href=&quot;seekablebytechannel&quot;&gt;&lt;code&gt;SeekableByteChannel&lt;/code&gt;&lt;/a&gt; interface extends the &lt;code&gt;ByteChannel&lt;/code&gt; interface with methods to &lt;a href=&quot;seekablebytechannel#position()&quot;&gt;&lt;code&gt;query&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#position(long)&quot;&gt;&lt;code&gt;modify&lt;/code&gt;&lt;/a&gt; the channel's current position, and its &lt;a href=&quot;seekablebytechannel#size()&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; の&lt;/a&gt;インタフェースを指定し&lt;a href=&quot;readablebytechannel#read(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;バッファへのチャネルからバイトを読み取る方法。同様に、&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;インターフェイスは、バッファからチャネルにバイトを書き込む&lt;a href=&quot;writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;メソッドを指定します。&lt;a href=&quot;bytechannel&quot;&gt; &lt;code&gt;ByteChannel&lt;/code&gt; の&lt;/a&gt;インターフェースは、読み出しと書き込みの両方がバイトができるチャネルの一般的なケースのためにこれら二つのインタフェースを統一します。&lt;a href=&quot;seekablebytechannel&quot;&gt; &lt;code&gt;SeekableByteChannel&lt;/code&gt; の&lt;/a&gt;インターフェースは延び &lt;code&gt;ByteChannel&lt;/code&gt; のにメソッドとのインターフェースを&lt;a href=&quot;seekablebytechannel#position()&quot;&gt; &lt;code&gt;query&lt;/code&gt; &lt;/a&gt;し、&lt;a href=&quot;seekablebytechannel#position(long)&quot;&gt; &lt;code&gt;modify&lt;/code&gt; &lt;/a&gt;チャネルの現在位置、およびその&lt;a href=&quot;seekablebytechannel#size()&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78e6516c0dec9e8c202d246bc450ed434c84f25b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;readablebytechannel#read-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method that reads bytes from the channel into a buffer; similarly, the &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method that writes bytes from a buffer to the channel. The &lt;a href=&quot;bytechannel&quot;&gt;&lt;code&gt;ByteChannel&lt;/code&gt;&lt;/a&gt; interface unifies these two interfaces for the common case of channels that can both read and write bytes. The &lt;a href=&quot;seekablebytechannel&quot;&gt;&lt;code&gt;SeekableByteChannel&lt;/code&gt;&lt;/a&gt; interface extends the &lt;code&gt;ByteChannel&lt;/code&gt; interface with methods to &lt;a href=&quot;seekablebytechannel#position--&quot;&gt;&lt;code&gt;query&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt;&lt;code&gt;modify&lt;/code&gt;&lt;/a&gt; the channel's current position, and its &lt;a href=&quot;seekablebytechannel#size--&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; の&lt;/a&gt;インタフェースを指定し&lt;a href=&quot;readablebytechannel#read-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;バッファへのチャネルからバイトを読み取る方法。同様に、&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;インターフェースは、バッファーからチャネルにバイトを書き込む&lt;a href=&quot;writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;メソッドを指定します。&lt;a href=&quot;bytechannel&quot;&gt; &lt;code&gt;ByteChannel&lt;/code&gt; の&lt;/a&gt;インターフェースは、読み出しと書き込みの両方がバイトができるチャネルの一般的なケースのためにこれら二つのインタフェースを統一します。&lt;a href=&quot;seekablebytechannel&quot;&gt; &lt;code&gt;SeekableByteChannel&lt;/code&gt; の&lt;/a&gt;インターフェースは延び &lt;code&gt;ByteChannel&lt;/code&gt; のにメソッドとのインターフェースを&lt;a href=&quot;seekablebytechannel#position--&quot;&gt; &lt;code&gt;query&lt;/code&gt; &lt;/a&gt;し、&lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt; &lt;code&gt;modify&lt;/code&gt; &lt;/a&gt;チャネルの現在位置、およびその&lt;a href=&quot;seekablebytechannel#size--&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c2ccfc4344d98344bac10a3d0beeebc75678f34" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;readwritelock&quot;&gt;&lt;code&gt;ReadWriteLock&lt;/code&gt;&lt;/a&gt; interface similarly defines locks that may be shared among readers but are exclusive to writers. Only a single implementation, &lt;a href=&quot;reentrantreadwritelock&quot;&gt;&lt;code&gt;ReentrantReadWriteLock&lt;/code&gt;&lt;/a&gt;, is provided, since it covers most standard usage contexts. But programmers may create their own implementations to cover nonstandard requirements.</source>
          <target state="translated">&lt;a href=&quot;readwritelock&quot;&gt; &lt;code&gt;ReadWriteLock&lt;/code&gt; の&lt;/a&gt;インターフェースは、同様に、読者の間で共有が、作家に排他的であることができるロックを定義します。ほとんどの標準的な使用コンテキストをカバーするため、単一の実装である&lt;a href=&quot;reentrantreadwritelock&quot;&gt; &lt;code&gt;ReentrantReadWriteLock&lt;/code&gt; &lt;/a&gt;のみが提供されます。ただし、プログラマーは非標準の要件をカバーするために独自の実装を作成する場合があります。</target>
        </trans-unit>
        <trans-unit id="fdf44d4882f2dcfdfc588519320608f9984766c1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;&lt;code&gt;ResolverStyle&lt;/code&gt;&lt;/a&gt; is an enum that offers three different approaches, strict, smart and lenient. The smart option is the default. It can be set using &lt;a href=&quot;#withResolverStyle(java.time.format.ResolverStyle)&quot;&gt;&lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt; &lt;code&gt;ResolverStyle&lt;/code&gt; は&lt;/a&gt;申し出3つの異なるアプローチ、厳格な、スマートかつ寛大その列挙型です。スマートオプションがデフォルトです。&lt;a href=&quot;#withResolverStyle(java.time.format.ResolverStyle)&quot;&gt; &lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt; &lt;/a&gt;を使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="ccb2a8fa5c45fda8065dbaad7a3c71bba458a361" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;&lt;code&gt;ResolverStyle&lt;/code&gt;&lt;/a&gt; is an enum that offers three different approaches, strict, smart and lenient. The smart option is the default. It can be set using &lt;a href=&quot;datetimeformatter#withResolverStyle-java.time.format.ResolverStyle-&quot;&gt;&lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt; &lt;code&gt;ResolverStyle&lt;/code&gt; は&lt;/a&gt;申し出3つの異なるアプローチ、厳格な、スマートかつ寛大その列挙型です。スマートオプションがデフォルトです。これは&lt;a href=&quot;datetimeformatter#withResolverStyle-java.time.format.ResolverStyle-&quot;&gt; &lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt; &lt;/a&gt;を使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="230eb0b70762cd391eb1aba658c2338c39426288" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:59' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond()&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt;リゾルバのスタイルは、&lt;/a&gt;インスタントの解析には影響を与えません。「24:00」の1日の終わりの時間は、翌日の開始時に深夜として処理されます。「23:59:59」のうるう秒時間はある程度処理されます。詳細については、&lt;a href=&quot;datetimeformatter#parsedLeapSecond()&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a61c3fe4bcefb9096a8ca84cf773684b1d6df713" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:59' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt;リゾルバのスタイルは、&lt;/a&gt;インスタントの解析には影響を与えません。終業時刻「24:00」は翌日の午前零時として扱います。うるう秒の「23:59:59」はある程度処理されます。詳細については、&lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5158dacdde311d782c14bbee2d65ed5bcc2d0e9a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:60' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond()&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt;リゾルバのスタイルは、&lt;/a&gt;インスタントの解析には影響を与えません。「24:00」の1日の終わりの時間は、翌日の開始時に深夜として処理されます。「23:59:60」のうるう秒時間はある程度処理されます。詳細については、&lt;a href=&quot;datetimeformatter#parsedLeapSecond()&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ffbf4748dbac126c5220a08777eb15c9fdb0572e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:60' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">&lt;a href=&quot;resolverstyle&quot;&gt;リゾルバのスタイルは、&lt;/a&gt;インスタントの解析には影響を与えません。終業時刻「24:00」は翌日の午前零時として扱います。「23:59:60」のうるう秒時間はある程度処理されます。詳細については、&lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c81588aa28a1eb4f1a2581775076c1ff69d4b5a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; class provides information necessary to perform the bundle loading process by the &lt;code&gt;getBundle&lt;/code&gt; factory methods that take a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instance. You can implement your own subclass in order to enable non-standard resource bundle formats, change the search strategy, or define caching parameters. Refer to the descriptions of the class and the &lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt;&lt;code&gt;getBundle&lt;/code&gt;&lt;/a&gt; factory method for details.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; の&lt;/a&gt;クラスは、バンドルによってロード処理を実行するために必要な情報提供 &lt;code&gt;getBundle&lt;/code&gt; の取るファクトリメソッド &lt;code&gt;ResourceBundle.Control&lt;/code&gt; インスタンス。非標準のリソースバンドル形式を有効にしたり、検索戦略を変更したり、キャッシュパラメータを定義したりするために、独自のサブクラスを実装できます。詳細については、クラスの説明と&lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt; &lt;code&gt;getBundle&lt;/code&gt; &lt;/a&gt;ファクトリメソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="844b2132f1798e9d55cc9c339a4149469ad05e5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; class provides information necessary to perform the bundle loading process by the &lt;code&gt;getBundle&lt;/code&gt; factory methods that take a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instance. You can implement your own subclass in order to enable non-standard resource bundle formats, change the search strategy, or define caching parameters. Refer to the descriptions of the class and the &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt;&lt;code&gt;getBundle&lt;/code&gt;&lt;/a&gt; factory method for details.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; の&lt;/a&gt;クラスは、バンドルによってロード処理を実行するために必要な情報提供 &lt;code&gt;getBundle&lt;/code&gt; の取るファクトリメソッド &lt;code&gt;ResourceBundle.Control&lt;/code&gt; インスタンス。独自のサブクラスを実装して、非標準のリソースバンドル形式を有効にしたり、検索戦略を変更したり、キャッシュパラメーターを定義したりできます。詳細については、クラスの説明と&lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt; &lt;code&gt;getBundle&lt;/code&gt; &lt;/a&gt;ファクトリメソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="e57c3b809c8cee0138874cbd67eaba73e85e11c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getCandidateLocales(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;control.getCandidateLocales&lt;/code&gt;&lt;/a&gt; method is called with the target locale to get a list of &lt;em&gt;candidate &lt;code&gt;Locale&lt;/code&gt;s&lt;/em&gt; for which resource bundles are searched.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getCandidateLocales(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;control.getCandidateLocales&lt;/code&gt; の&lt;/a&gt;方法は、のリストを取得するために、ターゲットロケールと呼ばれる&lt;em&gt;候補 &lt;code&gt;Locale&lt;/code&gt; の&lt;/em&gt;リソースバンドルが検索されるために。</target>
        </trans-unit>
        <trans-unit id="5b1b140c56a442f57e62e38c4c78a04d61105b58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;control.getCandidateLocales&lt;/code&gt;&lt;/a&gt; method is called with the target locale to get a list of &lt;em&gt;candidate &lt;code&gt;Locale&lt;/code&gt;s&lt;/em&gt; for which resource bundles are searched.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;control.getCandidateLocales&lt;/code&gt; の&lt;/a&gt;方法は、のリストを取得するために、ターゲットロケールと呼ばれる&lt;em&gt;候補 &lt;code&gt;Locale&lt;/code&gt; の&lt;/em&gt;リソースバンドルが検索されるために。</target>
        </trans-unit>
        <trans-unit id="9db79ac6c90a6417df850016832ced248481b912" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFallbackLocale(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;control.getFallbackLocale&lt;/code&gt;&lt;/a&gt; method is called to get a fallback locale (alternative to the current target locale) to try further finding a resource bundle. If the method returns a non-null locale, it becomes the next target locale and the loading process starts over from Step 3. Otherwise, if a base bundle was found and put on hold in a previous Step 5, it is returned to the caller now. Otherwise, a MissingResourceException is thrown.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getFallbackLocale(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;control.getFallbackLocale&lt;/code&gt; の&lt;/a&gt;方法は、リソースバンドルを見つけ、さらにしようとする（現在のターゲットロケールの代替）フォールバックロケールを取得するために呼び出されます。メソッドがnull以外のロケールを返す場合、それは次のターゲットロケールになり、ロードプロセスはステップ3からやり直します。それ以外の場合、ベースバンドルが見つかり、前のステップ5で保留にされた場合、呼び出し元に返されます。今。それ以外の場合は、MissingResourceExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="772adc8499f04f3dfcd1f7ee081e85fbe1b93725" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;control.getFallbackLocale&lt;/code&gt;&lt;/a&gt; method is called to get a fallback locale (alternative to the current target locale) to try further finding a resource bundle. If the method returns a non-null locale, it becomes the next target locale and the loading process starts over from Step 3. Otherwise, if a base bundle was found and put on hold in a previous Step 5, it is returned to the caller now. Otherwise, a MissingResourceException is thrown.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;control.getFallbackLocale&lt;/code&gt; の&lt;/a&gt;方法は、リソースバンドルを見つけ、さらにしようとする（現在のターゲットロケールの代替）フォールバックロケールを取得するために呼び出されます。メソッドがnull以外のロケールを返す場合、それは次のターゲットロケールになり、ロードプロセスはステップ3からやり直します。それ以外の場合、ベースバンドルが見つかり、前のステップ5で保留にされた場合は、呼び出し元に返されます。今。それ以外の場合は、MissingResourceExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="c5fbacfc9b01c70d6e8b2d6dde797d3664eec031" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFormats(java.lang.String)&quot;&gt;&lt;code&gt;control.getFormats&lt;/code&gt;&lt;/a&gt; method is called to get resource bundle formats to produce bundle or resource names. The strings &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; designate class-based and &lt;a href=&quot;propertyresourcebundle&quot;&gt;property&lt;/a&gt;-based resource bundles, respectively. Other strings starting with &lt;code&gt;&quot;java.&quot;&lt;/code&gt; are reserved for future extensions and must not be used for application-defined formats. Other strings designate application-defined formats.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getFormats(java.lang.String)&quot;&gt; &lt;code&gt;control.getFormats&lt;/code&gt; の&lt;/a&gt;方法は、農産物のバンドルまたはリソース名にリソースバンドル形式を取得するために呼び出されます。文字列 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; および &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 、それぞれクラスベースおよび&lt;a href=&quot;propertyresourcebundle&quot;&gt;プロパティ&lt;/a&gt;ベースのリソースバンドルを示します。 &lt;code&gt;&quot;java.&quot;&lt;/code&gt; 始まるその他の文字列。将来の拡張用に予約されており、アプリケーション定義の形式には使用しないでください。他の文字列は、アプリケーション定義の形式を示します。</target>
        </trans-unit>
        <trans-unit id="635f440f4fb0dc3df8028007964f525ee541d99c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFormats-java.lang.String-&quot;&gt;&lt;code&gt;control.getFormats&lt;/code&gt;&lt;/a&gt; method is called to get resource bundle formats to produce bundle or resource names. The strings &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; designate class-based and &lt;a href=&quot;propertyresourcebundle&quot;&gt;property&lt;/a&gt;-based resource bundles, respectively. Other strings starting with &lt;code&gt;&quot;java.&quot;&lt;/code&gt; are reserved for future extensions and must not be used for application-defined formats. Other strings designate application-defined formats.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#getFormats-java.lang.String-&quot;&gt; &lt;code&gt;control.getFormats&lt;/code&gt; の&lt;/a&gt;方法は、農産物のバンドルまたはリソース名にリソースバンドル形式を取得するために呼び出されます。文字列 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; および &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 、それぞれクラスベースおよび&lt;a href=&quot;propertyresourcebundle&quot;&gt;プロパティ&lt;/a&gt;ベースのリソースバンドルを指定します。 &lt;code&gt;&quot;java.&quot;&lt;/code&gt; 始まるその他の文字列。将来の拡張用に予約されており、アプリケーション定義の形式には使用しないでください。その他の文字列は、アプリケーション定義の形式を指定します。</target>
        </trans-unit>
        <trans-unit id="098517283c774eeba3b3b15f041e0be79bde4704" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)&quot;&gt;&lt;code&gt;control.newBundle&lt;/code&gt;&lt;/a&gt; method is called to instantiate a &lt;code&gt;ResourceBundle&lt;/code&gt; for the base bundle name, a candidate locale, and a format. (Refer to the note on the cache lookup below.) This step is iterated over all combinations of the candidate locales and formats until the &lt;code&gt;newBundle&lt;/code&gt; method returns a &lt;code&gt;ResourceBundle&lt;/code&gt; instance or the iteration has used up all the combinations. For example, if the candidate locales are &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt;, &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; and &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; and the formats are &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;, then the following is the sequence of locale-format combinations to be used to call &lt;code&gt;control.newBundle&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)&quot;&gt; &lt;code&gt;control.newBundle&lt;/code&gt; &lt;/a&gt;方法をインスタンス化するために呼び出され &lt;code&gt;ResourceBundle&lt;/code&gt; ベースバンドル名、候補ロケール、およびフォーマットのために。 （以下のキャッシュルックアップに関する注記を参照してください。）このステップは、 &lt;code&gt;newBundle&lt;/code&gt; メソッドが &lt;code&gt;ResourceBundle&lt;/code&gt; インスタンスを返すか、反復によってすべての組み合わせが使い果たされるまで、候補ロケールとフォーマットのすべての組み合わせに対して繰り返されます。たとえば、候補ロケールが &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt; 、 &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; 、 &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; で、形式が &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; の場合、次に、呼び出しに使用されるロケール形式の組み合わせのシーケンスを示します。 &lt;code&gt;control.newBundle&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="143061f5a7fc551c0ad375aa5616ef6082a571b7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt;&lt;code&gt;control.newBundle&lt;/code&gt;&lt;/a&gt; method is called to instantiate a &lt;code&gt;ResourceBundle&lt;/code&gt; for the base bundle name, a candidate locale, and a format. (Refer to the note on the cache lookup below.) This step is iterated over all combinations of the candidate locales and formats until the &lt;code&gt;newBundle&lt;/code&gt; method returns a &lt;code&gt;ResourceBundle&lt;/code&gt; instance or the iteration has used up all the combinations. For example, if the candidate locales are &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt;, &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; and &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; and the formats are &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;, then the following is the sequence of locale-format combinations to be used to call &lt;code&gt;control.newBundle&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt; &lt;code&gt;control.newBundle&lt;/code&gt; &lt;/a&gt;方法をインスタンス化するために呼び出され &lt;code&gt;ResourceBundle&lt;/code&gt; ベースバンドル名、候補ロケール、およびフォーマットのために。 （以下のキャッシュルックアップに関する注記を参照してください。）この手順は、 &lt;code&gt;newBundle&lt;/code&gt; メソッドが &lt;code&gt;ResourceBundle&lt;/code&gt; インスタンスを返すか、反復がすべての組み合わせを使い果たすまで、候補ロケールとフォーマットのすべての組み合わせに対して繰り返されます。たとえば、候補ロケールが &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt; 、 &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; および &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; であり、フォーマットが &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; および &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; の場合、次に、呼び出しに使用されるロケール形式の組み合わせのシーケンスは次のとおりです &lt;code&gt;control.newBundle&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a415f074984a8725314b75563b370d9ae6b46c38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sasl&quot;&gt;&lt;code&gt;Sasl&lt;/code&gt;&lt;/a&gt; class includes several well-known property names (For example, &lt;a href=&quot;sasl#QOP&quot;&gt;&lt;code&gt;Sasl.QOP&lt;/code&gt;&lt;/a&gt;). A SASL provider can support other properties which are specific to the vendor and/or a mechanism.</source>
          <target state="translated">&lt;a href=&quot;sasl&quot;&gt; &lt;code&gt;Sasl&lt;/code&gt; の&lt;/a&gt;クラス（例えば、いくつかのよく知られたプロパティ名含む&lt;a href=&quot;sasl#QOP&quot;&gt; &lt;code&gt;Sasl.QOP&lt;/code&gt; を&lt;/a&gt;）。SASLプロバイダーは、ベンダーやメカニズムに固有の他のプロパティをサポートできます。</target>
        </trans-unit>
        <trans-unit id="257e05e9fa65e14e315705646288980e33146c06" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;saxresult&quot;&gt;&lt;code&gt;SAXResult&lt;/code&gt;&lt;/a&gt; class allows the setting of a &lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; to be the receiver of SAX2 events from the transformation.</source>
          <target state="translated">&lt;a href=&quot;saxresult&quot;&gt; &lt;code&gt;SAXResult&lt;/code&gt; の&lt;/a&gt;クラスは、設定可能&lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt;変換からSAX2イベントの受信機であること。</target>
        </trans-unit>
        <trans-unit id="a6dfb34cc4dd4b24effdf12adfef647af75d6cc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;saxsource&quot;&gt;&lt;code&gt;SAXSource&lt;/code&gt;&lt;/a&gt; class allows the setting of an &lt;a href=&quot;../../../../org/xml/sax/xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; to be used for pulling parse events, and an &lt;a href=&quot;../../../../org/xml/sax/inputsource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; that may be used to specify the SAX source.</source>
          <target state="translated">&lt;a href=&quot;saxsource&quot;&gt; &lt;code&gt;SAXSource&lt;/code&gt; の&lt;/a&gt;クラスは、設定可能&lt;a href=&quot;../../../../org/xml/sax/xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; が&lt;/a&gt;解析イベントを引っ張るために使用される、そして&lt;a href=&quot;../../../../org/xml/sax/inputsource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt; SAXソースを指定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="6686fec400ee70f3fbed9514abdaf5cffbf56153" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;saxtransformerfactory&quot;&gt;&lt;code&gt;SAXTransformerFactory&lt;/code&gt;&lt;/a&gt; extends &lt;a href=&quot;../transformerfactory&quot;&gt;&lt;code&gt;TransformerFactory&lt;/code&gt;&lt;/a&gt; to provide factory methods for creating &lt;a href=&quot;templateshandler&quot;&gt;&lt;code&gt;TemplatesHandler&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;transformerhandler&quot;&gt;&lt;code&gt;TransformerHandler&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../../../org/xml/sax/xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;saxtransformerfactory&quot;&gt; &lt;code&gt;SAXTransformerFactory&lt;/code&gt; は&lt;/a&gt;延び&lt;a href=&quot;../transformerfactory&quot;&gt; &lt;code&gt;TransformerFactory&lt;/code&gt; のを&lt;/a&gt;作成するためのファクトリメソッドを提供する&lt;a href=&quot;templateshandler&quot;&gt; &lt;code&gt;TemplatesHandler&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;transformerhandler&quot;&gt; &lt;code&gt;TransformerHandler&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../../../../org/xml/sax/xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; のの&lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="c2c462293ffae4c2b2f44a5989d27d11ce31aec4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;saxtransformerfactory#newXMLFilter(javax.xml.transform.Source)&quot;&gt;&lt;code&gt;SAXTransformerFactory.newXMLFilter(javax.xml.transform.Source)&lt;/code&gt;&lt;/a&gt; method allows the creation of a &lt;a href=&quot;../../../../org/xml/sax/xmlfilter&quot;&gt;&lt;code&gt;XMLFilter&lt;/code&gt;&lt;/a&gt;, which encapsulates the SAX2 notion of a &quot;pull&quot; transformation. The resulting &lt;code&gt;XMLFilters&lt;/code&gt; can be chained together so that a series of transformations can happen with one's output becoming another's input.</source>
          <target state="translated">&lt;a href=&quot;saxtransformerfactory#newXMLFilter(javax.xml.transform.Source)&quot;&gt; &lt;code&gt;SAXTransformerFactory.newXMLFilter(javax.xml.transform.Source)&lt;/code&gt; &lt;/a&gt;方法は、作成可能&lt;a href=&quot;../../../../org/xml/sax/xmlfilter&quot;&gt; &lt;code&gt;XMLFilter&lt;/code&gt; &lt;/a&gt;「プル」変換のSAX2の概念をカプセル化し、。結果の &lt;code&gt;XMLFilters&lt;/code&gt; をチェーン化して、ある出力が別の入力になる一連の変換を実行できます。</target>
        </trans-unit>
        <trans-unit id="10eb909f57a9444304efbbfb4230e34732f3b9b9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scanner#findInLine-java.lang.String-&quot;&gt;&lt;code&gt;findInLine(java.lang.String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;scanner#findWithinHorizon-java.lang.String-int-&quot;&gt;&lt;code&gt;findWithinHorizon(java.lang.String, int)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;scanner#skip-java.util.regex.Pattern-&quot;&gt;&lt;code&gt;skip(java.util.regex.Pattern)&lt;/code&gt;&lt;/a&gt; methods operate independently of the delimiter pattern. These methods will attempt to match the specified pattern with no regard to delimiters in the input and thus can be used in special circumstances where delimiters are not relevant. These methods may block waiting for more input.</source>
          <target state="translated">&lt;a href=&quot;scanner#findInLine-java.lang.String-&quot;&gt; &lt;code&gt;findInLine(java.lang.String)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;scanner#findWithinHorizon-java.lang.String-int-&quot;&gt; &lt;code&gt;findWithinHorizon(java.lang.String, int)&lt;/code&gt; &lt;/a&gt;、及び&lt;a href=&quot;scanner#skip-java.util.regex.Pattern-&quot;&gt; &lt;code&gt;skip(java.util.regex.Pattern)&lt;/code&gt; &lt;/a&gt;メソッドは、独立して、区切り文字パターンの動作。これらのメソッドは、入力内の区切り文字に関係なく、指定されたパターンに一致しようとするため、区切り文字が関係しない特別な状況で使用できます。これらのメソッドは、追加の入力の待機をブロックする場合があります。</target>
        </trans-unit>
        <trans-unit id="348c28db8b27cc9f18897b329f01ff9a7695b683" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scanner#next--&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;scanner#hasNext--&quot;&gt;&lt;code&gt;hasNext()&lt;/code&gt;&lt;/a&gt; methods and their primitive-type companion methods (such as &lt;a href=&quot;scanner#nextInt--&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;scanner#hasNextInt--&quot;&gt;&lt;code&gt;hasNextInt()&lt;/code&gt;&lt;/a&gt;) first skip any input that matches the delimiter pattern, and then attempt to return the next token. Both &lt;code&gt;hasNext&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt; methods may block waiting for further input. Whether a &lt;code&gt;hasNext&lt;/code&gt; method blocks has no connection to whether or not its associated &lt;code&gt;next&lt;/code&gt; method will block.</source>
          <target state="translated">&lt;a href=&quot;scanner#next--&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;scanner#hasNext--&quot;&gt; &lt;code&gt;hasNext()&lt;/code&gt; &lt;/a&gt;メソッドおよびそのプリミティブ型のコンパニオンメソッド（例えば、&lt;a href=&quot;scanner#nextInt--&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;scanner#hasNextInt--&quot;&gt; &lt;code&gt;hasNextInt()&lt;/code&gt; &lt;/a&gt;）最初の区切り文字パターンに一致する入力をスキップし、次のトークンを返すことを試みます。 &lt;code&gt;hasNext&lt;/code&gt; メソッドと &lt;code&gt;next&lt;/code&gt; メソッドの両方が、それ以上の入力を待つのをブロックする場合があります。かどうか &lt;code&gt;hasNext&lt;/code&gt; メソッドブロックその関連するかどうかへの接続がありません &lt;code&gt;next&lt;/code&gt; メソッドがブロックされています。</target>
        </trans-unit>
        <trans-unit id="6036eaba06f3b7844114d0429c543f3e66646467" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scatteringbytechannel&quot;&gt;&lt;code&gt;ScatteringByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel&quot;&gt;&lt;code&gt;GatheringByteChannel&lt;/code&gt;&lt;/a&gt; interfaces extend the &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interfaces, respectively, adding &lt;a href=&quot;scatteringbytechannel#read(java.nio.ByteBuffer%5B%5D,int,int)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel#write(java.nio.ByteBuffer%5B%5D,int,int)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods that take a sequence of buffers rather than a single buffer.</source>
          <target state="translated">&lt;a href=&quot;scatteringbytechannel&quot;&gt; &lt;code&gt;ScatteringByteChannel&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;gatheringbytechannel&quot;&gt; &lt;code&gt;GatheringByteChannel&lt;/code&gt; &lt;/a&gt;インタフェースは延び&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;追加、それぞれ、インターフェイスを&lt;a href=&quot;scatteringbytechannel#read(java.nio.ByteBuffer%5B%5D,int,int)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;gatheringbytechannel#write(java.nio.ByteBuffer%5B%5D,int,int)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;バッファの配列ではなく、単一のバッファを取る方法を。</target>
        </trans-unit>
        <trans-unit id="21137fd05c9ebb8f424df8db033cf26db6b1b34b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scatteringbytechannel&quot;&gt;&lt;code&gt;ScatteringByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel&quot;&gt;&lt;code&gt;GatheringByteChannel&lt;/code&gt;&lt;/a&gt; interfaces extend the &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interfaces, respectively, adding &lt;a href=&quot;scatteringbytechannel#read-java.nio.ByteBuffer:A-int-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel#write-java.nio.ByteBuffer:A-int-int-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods that take a sequence of buffers rather than a single buffer.</source>
          <target state="translated">&lt;a href=&quot;scatteringbytechannel&quot;&gt; &lt;code&gt;ScatteringByteChannel&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;gatheringbytechannel&quot;&gt; &lt;code&gt;GatheringByteChannel&lt;/code&gt; &lt;/a&gt;インタフェースは延び&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;追加、それぞれ、インターフェイスを&lt;a href=&quot;scatteringbytechannel#read-java.nio.ByteBuffer:A-int-int-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;及び&lt;a href=&quot;gatheringbytechannel#write-java.nio.ByteBuffer:A-int-int-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;バッファの配列ではなく、単一のバッファを取る方法を。</target>
        </trans-unit>
        <trans-unit id="494bd3af96f36fb31c00ac9c7e7c9c2375b3ac83" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; class is not thread-safe. In other words, it is the application's responsibility to ensure that at most one thread is using a &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; object at any given moment. Implementations are encouraged to mark methods as &lt;code&gt;synchronized&lt;/code&gt; to protect themselves from broken clients.</source>
          <target state="translated">&lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt;クラスはスレッドセーフではありません。つまり、任意の時点で最大1つのスレッドが&lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt;オブジェクトを使用していることを確認するのはアプリケーションの責任です。実装は、壊れたクライアントから自身を保護するために、メソッドを &lt;code&gt;synchronized&lt;/code&gt; としてマークすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="07cb8eb23ad928e28854d19141c00b90056152a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#truncate-long-&quot;&gt;&lt;code&gt;truncate&lt;/code&gt;&lt;/a&gt; methods which do not otherwise have a value to return are specified to return the channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">&lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;seekablebytechannel#truncate-long-&quot;&gt; &lt;code&gt;truncate&lt;/code&gt; &lt;/a&gt;戻り値を返さないものな方法は、それらが呼び出される時にチャンネルを返すように指定されています。これにより、メソッド呼び出しを連鎖させることができます。このインターフェースの実装は、戻り値の型を特殊化して、実装クラスでのメソッド呼び出しをチェーンできるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="90a51280115503dcf1e905f60856aff6ffe205d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;selector#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method synchronizes on the selector and all three key sets in the same order as in a selection operation.</source>
          <target state="translated">&lt;a href=&quot;selector#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法は、セレクタと選択動作と同じ順序ですべての3つのキーセットに同期させます。</target>
        </trans-unit>
        <trans-unit id="a294a9cf0964911d73784704bd2dbd26750a9604" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;snippet.kind&quot;&gt;&lt;code&gt;Snippet.Kind&lt;/code&gt;&lt;/a&gt; for the snippet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290a5a520b15c3e7482f3f8402505a902d82b462" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;snippet.kind&quot;&gt;&lt;code&gt;Snippet.Kind&lt;/code&gt;&lt;/a&gt; for the snippet. Indicates the subclass of Snippet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14453820ed2da2c46a66a47dae076df0a86ec22b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;snippet.kind&quot;&gt;&lt;code&gt;Snippet.Kind&lt;/code&gt;&lt;/a&gt; that corresponds to this &lt;code&gt;SubKind&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990f0f43a18226a7e173ee1e81b5cdf77566b089" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;socketoption#name()&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; of each socket option defined by this class is its field name.</source>
          <target state="translated">&lt;a href=&quot;socketoption#name()&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;このクラスで定義された各ソケットオプションのは、そのフィールド名です。</target>
        </trans-unit>
        <trans-unit id="d451b4a4efe00d347a54add6cb0af761ff11af1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;socketoption#name--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; of each socket option defined by this class is its field name.</source>
          <target state="translated">&lt;a href=&quot;socketoption#name--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;このクラスで定義された各ソケットオプションのは、そのフィールド名です。</target>
        </trans-unit>
        <trans-unit id="2dce7e060eed43bca6d4e88ec9e2f86ac29def42" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stackwalker.option&quot;&gt;&lt;em&gt;stack walking options&lt;/em&gt;&lt;/a&gt; of a &lt;code&gt;StackWalker&lt;/code&gt; determines the information of &lt;a href=&quot;stackwalker.stackframe&quot;&gt;&lt;code&gt;StackFrame&lt;/code&gt;&lt;/a&gt; objects to be returned. By default, stack frames of the reflection API and implementation classes are &lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt;hidden&lt;/a&gt; and &lt;code&gt;StackFrame&lt;/code&gt;s have the class name and method name available but not the &lt;a href=&quot;stackwalker.stackframe#getDeclaringClass()&quot;&gt;&lt;code&gt;Class reference&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;StackWalker&lt;/code&gt; の&lt;a href=&quot;stackwalker.option&quot;&gt;&lt;em&gt;スタックウォーキングオプション&lt;/em&gt;&lt;/a&gt;は、返される&lt;a href=&quot;stackwalker.stackframe&quot;&gt; &lt;code&gt;StackFrame&lt;/code&gt; &lt;/a&gt;オブジェクトの情報を決定します。デフォルトでは、リフレクションAPIと実装クラスのスタックフレームは&lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt;非表示になって&lt;/a&gt;おり、 &lt;code&gt;StackFrame&lt;/code&gt; にはクラス名とメソッド名がありますが、&lt;a href=&quot;stackwalker.stackframe#getDeclaringClass()&quot;&gt; &lt;code&gt;Class reference&lt;/code&gt; &lt;/a&gt;はありません。</target>
        </trans-unit>
        <trans-unit id="277deff41b631710526c3be6a8bce3fa73e5a350" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardcharsets&quot;&gt;&lt;code&gt;StandardCharsets&lt;/code&gt;&lt;/a&gt; class defines constants for each of the standard charsets.</source>
          <target state="translated">&lt;a href=&quot;standardcharsets&quot;&gt; &lt;code&gt;StandardCharsets&lt;/code&gt; の&lt;/a&gt;クラスは、標準文字セットのそれぞれの定数を定義します。</target>
        </trans-unit>
        <trans-unit id="a8dd9a9fec27603d78ed08617b0bdfc6d7c235da" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardcopyoption&quot;&gt;&lt;code&gt;StandardCopyOption&lt;/code&gt;&lt;/a&gt; enumeration type defines the</source>
          <target state="translated">&lt;a href=&quot;standardcopyoption&quot;&gt; &lt;code&gt;StandardCopyOption&lt;/code&gt; の&lt;/a&gt;列挙型定義</target>
        </trans-unit>
        <trans-unit id="21b04d2e3e195c7b488a274007819f9a94245cdc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standarddoclet&quot;&gt;&lt;code&gt;standard doclet&lt;/code&gt;&lt;/a&gt; can be used to generate HTML-formatted documentation. It supports user-defined &lt;a href=&quot;taglet&quot;&gt;&lt;code&gt;taglets&lt;/code&gt;&lt;/a&gt;, which can be used to generate customized output for user-defined tags in documentation comments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c99f93b54d2734b5913704c3b7bc58ac7bd819" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardopenoption&quot;&gt;&lt;code&gt;StandardOpenOption&lt;/code&gt;&lt;/a&gt; enumeration type defines the</source>
          <target state="translated">&lt;a href=&quot;standardopenoption&quot;&gt; &lt;code&gt;StandardOpenOption&lt;/code&gt; の&lt;/a&gt;列挙型定義</target>
        </trans-unit>
        <trans-unit id="72295d2f416f8a8448218b4363525cc646e9da94" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardopenoption#SYNC&quot;&gt;&lt;code&gt;SYNC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;standardopenoption#DSYNC&quot;&gt;&lt;code&gt;DSYNC&lt;/code&gt;&lt;/a&gt; options are used when opening a file to require that updates to the file are written synchronously to the underlying storage device. In the case of the default provider, and the file resides on a local storage device, and the &lt;a href=&quot;../channels/seekablebytechannel&quot;&gt;&lt;code&gt;seekable&lt;/code&gt;&lt;/a&gt; channel is connected to a file that was opened with one of these options, then an invocation of the &lt;a href=&quot;../channels/writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method is only guaranteed to return when all changes made to the file by that invocation have been written to the device. These options are useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made. Whether this guarantee is possible with other &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; implementations is provider specific.</source>
          <target state="translated">&lt;a href=&quot;standardopenoption#SYNC&quot;&gt; &lt;code&gt;SYNC&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;standardopenoption#DSYNC&quot;&gt; &lt;code&gt;DSYNC&lt;/code&gt; &lt;/a&gt;ファイルへの更新を元になるストレージデバイスと同時に書き込まれていることを必要とするファイルを開くときのオプションが使用されています。デフォルトのプロバイダーの場合、ファイルがローカルストレージデバイスにあり、&lt;a href=&quot;../channels/seekablebytechannel&quot;&gt; &lt;code&gt;seekable&lt;/code&gt; &lt;/a&gt;チャネルがこれらのオプションのいずれかで開かれたファイルに接続されている場合、&lt;a href=&quot;../channels/writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しはすべての場合にのみ返されることが保証されますその呼び出しによってファイルに加えられた変更は、デバイスに書き込まれています。これらのオプションは、システムがクラッシュした場合に重要な情報が失われないようにするために役立ちます。ファイルがローカルデバイスに存在しない場合、そのような保証は行われません。この保証が他の&lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;可能かどうか 実装はプロバイダー固有です。</target>
        </trans-unit>
        <trans-unit id="3d74cb4498be8f94cc5abccf92b10b83b8240700" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardopenoption#SYNC&quot;&gt;&lt;code&gt;SYNC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;standardopenoption#DSYNC&quot;&gt;&lt;code&gt;DSYNC&lt;/code&gt;&lt;/a&gt; options are used when opening a file to require that updates to the file are written synchronously to the underlying storage device. In the case of the default provider, and the file resides on a local storage device, and the &lt;a href=&quot;../channels/seekablebytechannel&quot;&gt;&lt;code&gt;seekable&lt;/code&gt;&lt;/a&gt; channel is connected to a file that was opened with one of these options, then an invocation of the &lt;a href=&quot;../channels/writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method is only guaranteed to return when all changes made to the file by that invocation have been written to the device. These options are useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made. Whether this guarantee is possible with other &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; implementations is provider specific.</source>
          <target state="translated">&lt;a href=&quot;standardopenoption#SYNC&quot;&gt; &lt;code&gt;SYNC&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;standardopenoption#DSYNC&quot;&gt; &lt;code&gt;DSYNC&lt;/code&gt; &lt;/a&gt;ファイルへの更新を元になるストレージデバイスと同時に書き込まれていることを必要とするファイルを開くときのオプションが使用されています。デフォルトプロバイダーの場合、ファイルがローカルストレージデバイスにあり、&lt;a href=&quot;../channels/seekablebytechannel&quot;&gt; &lt;code&gt;seekable&lt;/code&gt; &lt;/a&gt;チャネルがこれらのオプションのいずれかで開かれたファイルに接続されている場合、&lt;a href=&quot;../channels/writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しは、すべての場合にのみ戻ることが保証されますその呼び出しによってファイルに加えられた変更は、デバイスに書き込まれました。これらのオプションは、システムがクラッシュした場合に重要な情報が失われないようにするのに役立ちます。ファイルがローカルデバイスにない場合、そのような保証はありません。この保証が他の&lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;可能かどうか 実装はプロバイダー固有です。</target>
        </trans-unit>
        <trans-unit id="666585fcad66c94e607b17b82eebdf605f5fff6b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;staxresult&quot;&gt;&lt;code&gt;StAXResult&lt;/code&gt;&lt;/a&gt; class encapsulates a &lt;a href=&quot;../../stream/xmlstreamwriter&quot;&gt;&lt;code&gt;XMLStreamWriter&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../stream/xmleventwriter&quot;&gt;&lt;code&gt;XMLEventWriter&lt;/code&gt;&lt;/a&gt; and can be used as an output where a &lt;a href=&quot;../result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; object is accepted.</source>
          <target state="translated">&lt;a href=&quot;staxresult&quot;&gt; &lt;code&gt;StAXResult&lt;/code&gt; の&lt;/a&gt;クラスは、カプセル化し&lt;a href=&quot;../../stream/xmlstreamwriter&quot;&gt; &lt;code&gt;XMLStreamWriter&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../stream/xmleventwriter&quot;&gt; &lt;code&gt;XMLEventWriter&lt;/code&gt; を&lt;/a&gt;出力として使用することができる&lt;a href=&quot;../result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt;オブジェクトが受け入れられます。</target>
        </trans-unit>
        <trans-unit id="9128fc3bc1eb1ff4d95279e4cf6f6224d3cc8961" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;staxsource&quot;&gt;&lt;code&gt;StAXSource&lt;/code&gt;&lt;/a&gt; class encapsulates a &lt;a href=&quot;../../stream/xmlstreamreader&quot;&gt;&lt;code&gt;XMLStreamReader&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../stream/xmleventreader&quot;&gt;&lt;code&gt;XMLEventReader&lt;/code&gt;&lt;/a&gt; and can be used as an input where a &lt;a href=&quot;../source&quot;&gt;&lt;code&gt;Source&lt;/code&gt;&lt;/a&gt; object is accepted.</source>
          <target state="translated">&lt;a href=&quot;staxsource&quot;&gt; &lt;code&gt;StAXSource&lt;/code&gt; がの&lt;/a&gt;クラスは、カプセル化&lt;a href=&quot;../../stream/xmlstreamreader&quot;&gt; &lt;code&gt;XMLStreamReader&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../stream/xmleventreader&quot;&gt; &lt;code&gt;XMLEventReader&lt;/code&gt; のを&lt;/a&gt;入力として使用することができる&lt;a href=&quot;../source&quot;&gt; &lt;code&gt;Source&lt;/code&gt; &lt;/a&gt;オブジェクトが受け入れられます。</target>
        </trans-unit>
        <trans-unit id="15e9da6bf2a3f858875a9def12dcdd45826455c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;streamresult&quot;&gt;&lt;code&gt;StreamResult&lt;/code&gt;&lt;/a&gt; class provides methods for specifying &lt;a href=&quot;../../../../../java.base/java/io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../../../java.base/java/io/writer&quot;&gt;&lt;code&gt;Writer&lt;/code&gt;&lt;/a&gt;, or an output system ID, as the output of the transformation result.</source>
          <target state="translated">&lt;a href=&quot;streamresult&quot;&gt; &lt;code&gt;StreamResult&lt;/code&gt; &lt;/a&gt;クラスが指定するための方法を提供&lt;a href=&quot;../../../../../java.base/java/io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../../../../../java.base/java/io/writer&quot;&gt; &lt;code&gt;Writer&lt;/code&gt; &lt;/a&gt;変換結果の出力として、または出力システムID。</target>
        </trans-unit>
        <trans-unit id="b73a57897e92c91dc3e9229806ea2a5d957e1fcf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;streamsource&quot;&gt;&lt;code&gt;StreamSource&lt;/code&gt;&lt;/a&gt; class provides methods for specifying &lt;a href=&quot;../../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; input, &lt;a href=&quot;../../../../../java.base/java/io/reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; input, and URL input in the form of strings. Even if an input stream or reader is specified as the source, &lt;a href=&quot;streamsource#setSystemId(java.lang.String)&quot;&gt;&lt;code&gt;StreamSource.setSystemId(java.lang.String)&lt;/code&gt;&lt;/a&gt; should still be called, so that the transformer can know from where it should resolve relative URIs. The public identifier is always optional: if the application writer includes one, it will be provided as part of the &lt;a href=&quot;../sourcelocator&quot;&gt;&lt;code&gt;SourceLocator&lt;/code&gt;&lt;/a&gt; information.</source>
          <target state="translated">&lt;a href=&quot;streamsource&quot;&gt; &lt;code&gt;StreamSource&lt;/code&gt; &lt;/a&gt;クラスは、指定するための方法を提供&lt;a href=&quot;../../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;入力、&lt;a href=&quot;../../../../../java.base/java/io/reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt;文字列の形式で入力し、URLを入力します。入力ストリームまたはリーダーがソースとして指定されている場合&lt;a href=&quot;streamsource#setSystemId(java.lang.String)&quot;&gt; &lt;code&gt;StreamSource.setSystemId(java.lang.String)&lt;/code&gt; &lt;/a&gt;、StreamSource.setSystemId（java.lang.String）を呼び出す必要があります。これにより、トランスフォーマーは相対URIをどこから解決するかを知ることができます。公開識別子は常にオプションです。アプリケーション作成者に公開識別子が含まれている場合は、&lt;a href=&quot;../sourcelocator&quot;&gt; &lt;code&gt;SourceLocator&lt;/code&gt; &lt;/a&gt;情報の一部として提供されます。</target>
        </trans-unit>
        <trans-unit id="e9d9db88422c56d37b5213b36ef7275470166809" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;system#exit(int)&quot;&gt;&lt;code&gt;System.exit&lt;/code&gt;&lt;/a&gt; method is the conventional and convenient means of invoking this method.</source>
          <target state="translated">&lt;a href=&quot;system#exit(int)&quot;&gt; &lt;code&gt;System.exit&lt;/code&gt; の&lt;/a&gt;メソッドは、このメソッドを呼び出すのが一般的で便利です。</target>
        </trans-unit>
        <trans-unit id="3dbae129ef5d648f47d6fba81499acd845594518" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;templateshandler&quot;&gt;&lt;code&gt;TemplatesHandler&lt;/code&gt;&lt;/a&gt; interface allows the creation of &lt;a href=&quot;../templates&quot;&gt;&lt;code&gt;Templates&lt;/code&gt;&lt;/a&gt; objects from SAX2 parse events. Once the &lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; events are complete, the Templates object may be obtained from &lt;a href=&quot;templateshandler#getTemplates()&quot;&gt;&lt;code&gt;TemplatesHandler.getTemplates()&lt;/code&gt;&lt;/a&gt;. Note that &lt;a href=&quot;templateshandler#setSystemId(java.lang.String)&quot;&gt;&lt;code&gt;TemplatesHandler.setSystemId(java.lang.String)&lt;/code&gt;&lt;/a&gt; should normally be called in order to establish a base system ID from which relative URLs may be resolved.</source>
          <target state="translated">&lt;a href=&quot;templateshandler&quot;&gt; &lt;code&gt;TemplatesHandler&lt;/code&gt; の&lt;/a&gt;インタフェースは、の作成ができます&lt;a href=&quot;../templates&quot;&gt; &lt;code&gt;Templates&lt;/code&gt; &lt;/a&gt; SAX2構文解析イベントからオブジェクト。一旦&lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt;イベントが完了し、テンプレートオブジェクトから得ることができる&lt;a href=&quot;templateshandler#getTemplates()&quot;&gt; &lt;code&gt;TemplatesHandler.getTemplates()&lt;/code&gt; &lt;/a&gt;。相対URLを解決できる基本システムIDを確立するには、通常、&lt;a href=&quot;templateshandler#setSystemId(java.lang.String)&quot;&gt; &lt;code&gt;TemplatesHandler.setSystemId(java.lang.String)&lt;/code&gt; &lt;/a&gt;を呼び出す必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="65632e3304ce8a7430971d425d4ea6f5d7041352" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;Epoch Day count&lt;/code&gt;&lt;/a&gt; is a simple incrementing count of days where day 0 is 1970-01-01 (ISO). This definition is the same for all chronologies, enabling conversion.</source>
          <target state="translated">&lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;Epoch Day count&lt;/code&gt; &lt;/a&gt; 0日が1970年1月1日である日の簡単なインクリメント数（ISO）です。この定義はすべての年代順に同じであり、変換を可能にします。</target>
        </trans-unit>
        <trans-unit id="5fe0b0a62926df5a411799abadea12e26424d776" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt; class contains a standard set of adjusters, available as static methods. These include:</source>
          <target state="translated">&lt;a href=&quot;temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; の&lt;/a&gt;クラスには、静的メソッドとして利用できる調整の標準セットが含まれています。これらには以下が含まれます：</target>
        </trans-unit>
        <trans-unit id="8ee0d1305c6ed8ac73c630b5768c7fd55bebbf44" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface models amounts of relative time.</source>
          <target state="translated">&lt;a href=&quot;temporalamount&quot;&gt; &lt;code&gt;TemporalAmount&lt;/code&gt; の&lt;/a&gt;インターフェースモデルは相対的な時間の量。</target>
        </trans-unit>
        <trans-unit id="d603049ad9b812aec8a4461ab35e3fdfaf4b0a9c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt; interface provides another mechanism for querying temporal objects. That interface is limited to returning a &lt;code&gt;long&lt;/code&gt;. By contrast, queries can return any type.</source>
          <target state="translated">&lt;a href=&quot;temporalfield&quot;&gt; &lt;code&gt;TemporalField&lt;/code&gt; の&lt;/a&gt;インタフェースは、時間オブジェクトを照会するための別の機構を提供します。そのインターフェースは &lt;code&gt;long&lt;/code&gt; を返すことに限定されています。対照的に、クエリは任意のタイプを返すことができます。</target>
        </trans-unit>
        <trans-unit id="49d039ee836590f5a2bcdafdec86bf461e5a5432" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadgroup#uncaughtException(java.lang.Thread,java.lang.Throwable)&quot;&gt;top-level error handler&lt;/a&gt; does not print out a message if &lt;code&gt;ThreadDeath&lt;/code&gt; is never caught.</source>
          <target state="translated">&lt;a href=&quot;threadgroup#uncaughtException(java.lang.Thread,java.lang.Throwable)&quot;&gt;トップレベルのエラーハンドラは、&lt;/a&gt;場合にメッセージをプリントアウトしていない &lt;code&gt;ThreadDeath&lt;/code&gt; キャッチされることはありません。</target>
        </trans-unit>
        <trans-unit id="da0f2490753f88004eeaececd77ced0e3d26d3b9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadgroup#uncaughtException-java.lang.Thread-java.lang.Throwable-&quot;&gt;top-level error handler&lt;/a&gt; does not print out a message if &lt;code&gt;ThreadDeath&lt;/code&gt; is never caught.</source>
          <target state="translated">&lt;a href=&quot;threadgroup#uncaughtException-java.lang.Thread-java.lang.Throwable-&quot;&gt;トップレベルのエラーハンドラは、&lt;/a&gt;場合にメッセージをプリントアウトしていない &lt;code&gt;ThreadDeath&lt;/code&gt; キャッチされることはありません。</target>
        </trans-unit>
        <trans-unit id="90e1d925999c201c8dd68d8ed236e67286b0b5ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadmxbean#isThreadContentionMonitoringSupported--&quot;&gt;&lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports thread contention monitoring. The thread contention monitoring is disabled by default. The &lt;a href=&quot;threadmxbean#setThreadContentionMonitoringEnabled-boolean-&quot;&gt;&lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt;&lt;/a&gt; method can be used to enable thread contention monitoring.</source>
          <target state="translated">&lt;a href=&quot;threadmxbean#isThreadContentionMonitoringSupported--&quot;&gt; &lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンがスレッドコンテンション監視をサポートしているかどうかを決定するために使用することができます。スレッド競合監視はデフォルトで無効になっています。&lt;a href=&quot;threadmxbean#setThreadContentionMonitoringEnabled-boolean-&quot;&gt; &lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt; &lt;/a&gt;メソッドは、スレッドコンテンション監視を可能にするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="ed0642ec4c21f239693011a0d808e0a9a5551dee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadmxbean#isThreadCpuTimeSupported--&quot;&gt;&lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for any thread. The &lt;a href=&quot;threadmxbean#isCurrentThreadCpuTimeSupported--&quot;&gt;&lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for the current thread. A Java virtual machine implementation that supports CPU time measurement for any thread will also support that for the current thread.</source>
          <target state="translated">&lt;a href=&quot;threadmxbean#isThreadCpuTimeSupported--&quot;&gt; &lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンのサポートは、任意のスレッドのCPU時間を測定するかどうかを決定するために使用することができます。&lt;a href=&quot;threadmxbean#isCurrentThreadCpuTimeSupported--&quot;&gt; &lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt;メソッドは、Java仮想マシンのサポートは、現在のスレッドのCPU時間を測定するかどうかを決定するために使用することができます。任意のスレッドのCPU時間測定をサポートするJava仮想マシン実装は、現在のスレッドのCPU時間測定もサポートします。</target>
        </trans-unit>
        <trans-unit id="126515b65a295f042897ee7ca24299c10de24ac2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;throwable#fillInStackTrace--&quot;&gt;&lt;code&gt;fillInStackTrace()&lt;/code&gt;&lt;/a&gt; method is called to initialize the stack trace data in the newly created throwable.</source>
          <target state="translated">&lt;a href=&quot;throwable#fillInStackTrace--&quot;&gt; &lt;code&gt;fillInStackTrace()&lt;/code&gt; &lt;/a&gt;メソッドは、新しく作成されたスロー可能オブジェクト内のスタックトレースデータを初期化するために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f545a31d332fd214f9259a9d88e64957c2997f77" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;timeunit&quot;&gt;&lt;code&gt;TimeUnit&lt;/code&gt;&lt;/a&gt; class provides multiple granularities (including nanoseconds) for specifying and controlling time-out based operations. Most classes in the package contain operations based on time-outs in addition to indefinite waits. In all cases that time-outs are used, the time-out specifies the minimum time that the method should wait before indicating that it timed-out. Implementations make a &quot;best effort&quot; to detect time-outs as soon as possible after they occur. However, an indefinite amount of time may elapse between a time-out being detected and a thread actually executing again after that time-out. All methods that accept timeout parameters treat values less than or equal to zero to mean not to wait at all. To wait &quot;forever&quot;, you can use a value of &lt;code&gt;Long.MAX_VALUE&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;timeunit&quot;&gt; &lt;code&gt;TimeUnit&lt;/code&gt; での&lt;/a&gt;クラスが指定し、タイムアウトベースの動作を制御するための（ナノ秒を含む）は、複数の粒度を提供します。パッケージ内のほとんどのクラスには、無期限の待機に加えて、タイムアウトに基づく操作が含まれています。タイムアウトが使用されるすべての場合において、タイムアウトは、メソッドがタイムアウトしたことを示す前にメソッドが待機する最小時間を指定します。実装は、タイムアウトが発生した後できるだけ早くタイムアウトを検出するために「最善の努力」をします。ただし、タイムアウトが検出されてから、そのタイムアウト後に実際にスレッドが再び実行されるまでに、不明確な時間が経過することがあります。タイムアウトパラメータを受け入れるすべてのメソッドは、ゼロ以下の値を処理して、まったく待機しないことを意味します。 「永久に」待機するには、 &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の値を使用できます。</target>
        </trans-unit>
        <trans-unit id="6bc011c045314ae785385e0758aa43561f462e02" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;transformerhandler&quot;&gt;&lt;code&gt;TransformerHandler&lt;/code&gt;&lt;/a&gt; interface allows a transformation to be created from SAX2 parse events, which is a &quot;push&quot; model rather than the &quot;pull&quot; model that normally occurs for a transformation. Normal parse events are received through the &lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; interface, lexical events such as startCDATA and endCDATA are received through the &lt;a href=&quot;../../../../org/xml/sax/ext/lexicalhandler&quot;&gt;&lt;code&gt;LexicalHandler&lt;/code&gt;&lt;/a&gt; interface, and events that signal the start or end of disabling output escaping are received via &lt;a href=&quot;../../../../org/xml/sax/contenthandler#processingInstruction(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;ContentHandler.processingInstruction(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt;, with the target parameter being &lt;a href=&quot;../result#PI_DISABLE_OUTPUT_ESCAPING&quot;&gt;&lt;code&gt;Result.PI_DISABLE_OUTPUT_ESCAPING&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../result#PI_ENABLE_OUTPUT_ESCAPING&quot;&gt;&lt;code&gt;Result.PI_ENABLE_OUTPUT_ESCAPING&lt;/code&gt;&lt;/a&gt;. If parameters, output properties, or other features need to be set on the Transformer handler, a &lt;a href=&quot;../transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt; reference will need to be obtained from &lt;a href=&quot;transformerhandler#getTransformer()&quot;&gt;&lt;code&gt;TransformerHandler.getTransformer()&lt;/code&gt;&lt;/a&gt;, and the methods invoked from that reference.</source>
          <target state="translated">&lt;a href=&quot;transformerhandler&quot;&gt; &lt;code&gt;TransformerHandler&lt;/code&gt; &lt;/a&gt;インタフェースは、変換が正常に変換するために発生する「プッシュ」モデルではなく、「プル」モデルであるSAX2構文解析イベントから作成されることを可能にします。通常の解析イベントを介して受信された&lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt;インターフェース、例えばstartCDATAとendCDATAなどの字句イベントを介して受信される&lt;a href=&quot;../../../../org/xml/sax/ext/lexicalhandler&quot;&gt; &lt;code&gt;LexicalHandler&lt;/code&gt; &lt;/a&gt;インターフェイス、及び出力エスケープを無効にするの開始または終了を知らせるイベントを介して受信される&lt;a href=&quot;../../../../org/xml/sax/contenthandler#processingInstruction(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;ContentHandler.processingInstruction(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt;、ターゲットパラメータは&lt;a href=&quot;../result#PI_DISABLE_OUTPUT_ESCAPING&quot;&gt; &lt;code&gt;Result.PI_DISABLE_OUTPUT_ESCAPING&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../result#PI_ENABLE_OUTPUT_ESCAPING&quot;&gt; &lt;code&gt;Result.PI_ENABLE_OUTPUT_ESCAPING&lt;/code&gt; です。&lt;/a&gt;。パラメータ、出力特性、または他の特徴は、Transformerハンドラに設定する必要がある場合、&lt;a href=&quot;../transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; &lt;/a&gt;参照から得ることが必要であろう&lt;a href=&quot;transformerhandler#getTransformer()&quot;&gt; &lt;code&gt;TransformerHandler.getTransformer()&lt;/code&gt; &lt;/a&gt;、および方法は、その参照から呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8b0e3a5fd66bb193d4396df91f7f330610d51100" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt;single-argument constructor&lt;/a&gt; requires any illegal characters in its argument to be quoted and preserves any escaped octets and</source>
          <target state="translated">&lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt;単一引数のコンストラクタは、&lt;/a&gt;任意のエスケープオクテットを引用しなければ、引数のいずれかの不正な文字を必要とし、保持し、</target>
        </trans-unit>
        <trans-unit id="96d3a6675116e768726d899ee3f398538f8d3f5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#URI-java.lang.String-java.lang.String-java.lang.String-int-java.lang.String-java.lang.String-java.lang.String-&quot;&gt;multi-argument constructors&lt;/a&gt; quote illegal characters as required by the components in which they appear. The percent character (&lt;code&gt;'%'&lt;/code&gt;) is always quoted by these constructors. Any</source>
          <target state="translated">&lt;a href=&quot;uri#URI-java.lang.String-java.lang.String-java.lang.String-int-java.lang.String-java.lang.String-java.lang.String-&quot;&gt;多引数のコンストラクタは&lt;/a&gt;、彼らが表示されているコンポーネントで必要とされる不正な文字を引用します。パーセント文字（ &lt;code&gt;'%'&lt;/code&gt; ）は、これらのコンストラクターによって常に引用されます。どれか</target>
        </trans-unit>
        <trans-unit id="a5b18837b67d6da8cf5f631b9ddf3619afc39652" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#getRawUserInfo--&quot;&gt;&lt;code&gt;getRawUserInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getRawPath--&quot;&gt;&lt;code&gt;getRawPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getRawQuery--&quot;&gt;&lt;code&gt;getRawQuery&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getRawFragment--&quot;&gt;&lt;code&gt;getRawFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getRawAuthority--&quot;&gt;&lt;code&gt;getRawAuthority&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;uri#getRawSchemeSpecificPart--&quot;&gt;&lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; methods return the values of their corresponding components in raw form, without interpreting any escaped octets. The strings returned by these methods may contain both escaped octets and</source>
          <target state="translated">&lt;a href=&quot;uri#getRawUserInfo--&quot;&gt; &lt;code&gt;getRawUserInfo&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;uri#getRawPath--&quot;&gt; &lt;code&gt;getRawPath&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;uri#getRawQuery--&quot;&gt; &lt;code&gt;getRawQuery&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;uri#getRawFragment--&quot;&gt; &lt;code&gt;getRawFragment&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;uri#getRawAuthority--&quot;&gt; &lt;code&gt;getRawAuthority&lt;/code&gt; &lt;/a&gt;、及び&lt;a href=&quot;uri#getRawSchemeSpecificPart--&quot;&gt; &lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt; の&lt;/a&gt;方法は、任意のエスケープオクテットを解釈せずに、そのままの形式でそれらの対応する成分の値を返します。これらのメソッドによって返される文字列には、エスケープされたオクテットと</target>
        </trans-unit>
        <trans-unit id="c86bed47bbda7f711ebae1c96c0ca26487893480" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#getUserInfo--&quot;&gt;&lt;code&gt;getUserInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getPath--&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getQuery--&quot;&gt;&lt;code&gt;getQuery&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getFragment--&quot;&gt;&lt;code&gt;getFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getAuthority--&quot;&gt;&lt;code&gt;getAuthority&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;uri#getSchemeSpecificPart--&quot;&gt;&lt;code&gt;getSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; methods decode any escaped octets in their corresponding components. The strings returned by these methods may contain both</source>
          <target state="translated">&lt;a href=&quot;uri#getUserInfo--&quot;&gt; &lt;code&gt;getUserInfo&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;uri#getPath--&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;uri#getQuery--&quot;&gt; &lt;code&gt;getQuery&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;uri#getFragment--&quot;&gt; &lt;code&gt;getFragment&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;uri#getAuthority--&quot;&gt; &lt;code&gt;getAuthority&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;uri#getSchemeSpecificPart--&quot;&gt; &lt;code&gt;getSchemeSpecificPart&lt;/code&gt; の&lt;/a&gt;方法は、それらの対応する構成要素の任意のエスケープオクテットを復号します。これらのメソッドによって返される文字列には、両方が含まれる場合があります</target>
        </trans-unit>
        <trans-unit id="05633b3838426efa3462c8db4d61636d5eac4d0e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#toASCIIString--&quot;&gt;&lt;code&gt;toASCIIString&lt;/code&gt;&lt;/a&gt; method returns a fully quoted and encoded URI string that does not contain any</source>
          <target state="translated">&lt;a href=&quot;uri#toASCIIString--&quot;&gt; &lt;code&gt;toASCIIString&lt;/code&gt; の&lt;/a&gt;方法はいずれも含まない、完全に引用された符号化されたURI文字列を返します。</target>
        </trans-unit>
        <trans-unit id="f7da3d6193bb224a3c925ce28355ba647aa44c83" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#toString--&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method returns a URI string with all necessary quotation but which may contain</source>
          <target state="translated">&lt;a href=&quot;uri#toString--&quot;&gt; &lt;code&gt;toString&lt;/code&gt; &lt;/a&gt;メソッドは、すべての必要な引用でURI文字列を返しますが含まれている可能性があります</target>
        </trans-unit>
        <trans-unit id="483ec9540b5f90a13d5603b20efcda8d93a44c03" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;urlencoder&quot;&gt;&lt;code&gt;URLEncoder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;urldecoder&quot;&gt;&lt;code&gt;URLDecoder&lt;/code&gt;&lt;/a&gt; classes can also be used, but only for HTML form encoding, which is not the same as the encoding scheme defined in RFC2396.</source>
          <target state="translated">&lt;a href=&quot;urlencoder&quot;&gt; &lt;code&gt;URLEncoder&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;urldecoder&quot;&gt; &lt;code&gt;URLDecoder&lt;/code&gt; の&lt;/a&gt;クラスものみRFC2396で定義された符号化方式と同じではないHTMLフォーム符号化のため、使用することができます。</target>
        </trans-unit>
        <trans-unit id="71f571d649e61ad2b45c6192eeeb015dbbe1495a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt; interfaces represent an identity or group identity.</source>
          <target state="translated">&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; &lt;/a&gt;インターフェイスは、同一又はグループIDを表します。</target>
        </trans-unit>
        <trans-unit id="86bc860478e690457692e5c83357667c82fd5795" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;userprincipallookupservice&quot;&gt;&lt;code&gt;UserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; interface defines methods to lookup user or group principals.</source>
          <target state="translated">&lt;a href=&quot;userprincipallookupservice&quot;&gt; &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; &lt;/a&gt;定義メソッドインタフェースは、ユーザまたはグループプリンシパルを検索します。</target>
        </trans-unit>
        <trans-unit id="e5ba21d66b0d3b93ec18ad331012b9b1ca1946a0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;watchevent#context()&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; for these events is the relative path between the directory located by this path, and the path that locates the directory entry that is created, deleted, or modified.</source>
          <target state="translated">これらのイベントの&lt;a href=&quot;watchevent#context()&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;は、このパスによって配置されたディレクトリと、作成、削除、または変更されたディレクトリエントリを配置するパスとの間の相対パスです。</target>
        </trans-unit>
        <trans-unit id="fde2227b0f31d201618a978dee14ccd29e9a589b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;watchevent#context()&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; for this event is implementation specific and may be &lt;code&gt;null&lt;/code&gt;. The event &lt;a href=&quot;watchevent#count()&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; may be greater than &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">このイベントの&lt;a href=&quot;watchevent#context()&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;は実装固有であり、 &lt;code&gt;null&lt;/code&gt; の場合があります。イベント&lt;a href=&quot;watchevent#count()&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;1&lt;/code&gt; より大きい場合があります。</target>
        </trans-unit>
        <trans-unit id="ef147a7a54d7b0102550cbd209ac533ffc64556d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;watchevent#context--&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; for these events is the relative path between the directory located by this path, and the path that locates the directory entry that is created, deleted, or modified.</source>
          <target state="translated">これらのイベントの&lt;a href=&quot;watchevent#context--&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;は、このパスによって配置されたディレクトリと、作成、削除、または変更されたディレクトリエントリを配置するパスとの間の相対パスです。</target>
        </trans-unit>
        <trans-unit id="bee2859efc1d0c9a918dc390dc05a7a666d1a2e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;watchevent#context--&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; for this event is implementation specific and may be &lt;code&gt;null&lt;/code&gt;. The event &lt;a href=&quot;watchevent#count--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; may be greater than &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">このイベントの&lt;a href=&quot;watchevent#context--&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;は実装固有であり、 &lt;code&gt;null&lt;/code&gt; の場合があります。イベント&lt;a href=&quot;watchevent#count--&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;1&lt;/code&gt; より大きい場合があります。</target>
        </trans-unit>
        <trans-unit id="e191eba2c61488a28e1a8036123cb6a2b3ef3c96" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;xpathfactory&quot;&gt;&lt;code&gt;XPathFactory&lt;/code&gt;&lt;/a&gt; class is not thread-safe. In other words, it is the application's responsibility to ensure that at most one thread is using a &lt;a href=&quot;xpathfactory&quot;&gt;&lt;code&gt;XPathFactory&lt;/code&gt;&lt;/a&gt; object at any given moment. Implementations are encouraged to mark methods as &lt;code&gt;synchronized&lt;/code&gt; to protect themselves from broken clients.</source>
          <target state="translated">&lt;a href=&quot;xpathfactory&quot;&gt; &lt;code&gt;XPathFactory&lt;/code&gt; &lt;/a&gt;クラスはスレッドセーフではありません。つまり、任意の時点で最大で1つのスレッドが&lt;a href=&quot;xpathfactory&quot;&gt; &lt;code&gt;XPathFactory&lt;/code&gt; &lt;/a&gt;オブジェクトを使用していることを確認するのはアプリケーションの責任です。実装は、壊れたクライアントから自身を保護するために、メソッドを &lt;code&gt;synchronized&lt;/code&gt; としてマークすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f03cb15a099a4644b24a61fcdbb5109f7974d51b" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;default-delimiter&quot;&gt;default whitespace delimiter&lt;/a&gt; used by a scanner is as recognized by &lt;a href=&quot;../lang/character#isWhitespace(char)&quot;&gt;&lt;code&gt;Character.isWhitespace()&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's delimiter to the default whitespace delimiter regardless of whether it was previously changed.</source>
          <target state="translated">&lt;a id=&quot;default-delimiter&quot;&gt;デフォルトの空白区切り文字&lt;/a&gt;によって認識されるように、スキャナで使用される&lt;a href=&quot;../lang/character#isWhitespace(char)&quot;&gt; &lt;code&gt;Character.isWhitespace()&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;メソッドにかかわらず、それが以前に変更されたかどうかのデフォルトの空白区切り文字にスキャナの区切り文字の値をリセットします。</target>
        </trans-unit>
        <trans-unit id="b5a1d07db2d39c9bf73ea9ba9ceee30337d99ed8" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;default-delimiter&quot;&gt;default whitespace delimiter&lt;/a&gt; used by a scanner is as recognized by &lt;a href=&quot;../lang/character#isWhitespace(int)&quot;&gt;&lt;code&gt;Character.isWhitespace()&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's delimiter to the default whitespace delimiter regardless of whether it was previously changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83bba2b9bc41df62c4b5e232914061bbf686124f" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;floatDWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. This includes any signs, digits, grouping separators, decimal separators, exponential symbol, radix indicator, parentheses, and strings representing infinity and NaN as applicable. If the length of the converted value is less than the width then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</source>
          <target state="translated">&lt;a id=&quot;floatDWidth&quot;&gt;幅は&lt;/a&gt;文字の最小数は、出力に書き込まれます。これには、記号、数字、グループ化区切り文字、小数点区切り記号、指数記号、基数インジケーター、括弧、および必要に応じて無限大とNaNを表す文字列が含まれます。変換された値の長さが幅よりも短い場合、文字の総数が幅と等しくなるまで、出力にはスペース（ &lt;code&gt;'\u0020'&lt;/code&gt; ）が埋め込まれます。デフォルトでは、パディングは左側にあります。場合は &lt;code&gt;'-'&lt;/code&gt; フラグが指定され、右側にパディングされます。幅が指定されていない場合、最小値はありません。</target>
        </trans-unit>
        <trans-unit id="ca1313ee0567ae6a3325e55423e970cd63c79430" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;genWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. If the length of the converted value is less than the width then the output will be padded by &lt;code&gt;'&amp;nbsp;&amp;nbsp;'&lt;/code&gt; (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals the width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given, then the padding will be on the right. If the width is not specified then there is no minimum.</source>
          <target state="translated">&lt;a id=&quot;genWidth&quot;&gt;幅は&lt;/a&gt;文字の最小数は、出力に書き込まれます。変換された値の長さが幅よりも短い場合、文字の総数が幅と等しくなるまで、出力は &lt;code&gt;'&amp;nbsp;&amp;nbsp;'&lt;/code&gt; （ &lt;code&gt;'\u0020'&lt;/code&gt; ）で埋められます。デフォルトでは、パディングは左側にあります。場合は &lt;code&gt;'-'&lt;/code&gt; フラグが指定され、その後、パディングが右側にあります。幅が指定されていない場合、最小値はありません。</target>
        </trans-unit>
        <trans-unit id="17eab65f50d2d6e5be7b33da78f51370b8e43a39" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;intWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. This includes any signs, digits, grouping separators, radix indicator, and parentheses. If the length of the converted value is less than the width then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left by default. If &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</source>
          <target state="translated">&lt;a id=&quot;intWidth&quot;&gt;幅は&lt;/a&gt;文字の最小数は、出力に書き込まれます。これには、記号、数字、グループ化区切り文字、基数インジケーター、および括弧が含まれます。変換された値の長さが幅よりも短い場合、文字の総数が幅と等しくなるまで、出力にはスペース（ &lt;code&gt;'\u0020'&lt;/code&gt; ）が埋め込まれます。デフォルトでは、パディングは左側にあります。場合は &lt;code&gt;'-'&lt;/code&gt; フラグが指定され、右側にパディングされます。幅が指定されていない場合、最小値はありません。</target>
        </trans-unit>
        <trans-unit id="1b446ca4792047e9257ecea805dc721be67ff3ab" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; argument specifies the access mode in which the file is to be opened. The permitted values and their meanings are:</source>
          <target state="translated">&lt;a id=&quot;mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt;引数は、ファイルが開かれるアクセスモードを指定します。許可される値とその意味は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="d7c6261bea4e77bf60d69292cc3f4a55c729b9b2" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;default-delimiter&quot;&gt;default whitespace delimiter&lt;/a&gt; used by a scanner is as recognized by &lt;a href=&quot;../lang/character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;../lang/character#isWhitespace-char-&quot;&gt;&lt;code&gt;isWhitespace&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;scanner#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's delimiter to the default whitespace delimiter regardless of whether it was previously changed.</source>
          <target state="translated">&lt;a name=&quot;default-delimiter&quot;&gt;デフォルトの空白区切り文字&lt;/a&gt;スキャナが使用するには、として認識される&lt;a href=&quot;../lang/character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;../lang/character#isWhitespace-char-&quot;&gt; &lt;code&gt;isWhitespace&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;scanner#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;メソッドにかかわらず、それが以前に変更されたかどうかのデフォルトの空白区切り文字にスキャナの区切り文字の値をリセットします。</target>
        </trans-unit>
        <trans-unit id="cdf992b6452b5c0645142b8150d07e858f599985" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;floatDWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. This includes any signs, digits, grouping separators, decimal separators, exponential symbol, radix indicator, parentheses, and strings representing infinity and NaN as applicable. If the length of the converted value is less than the width then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</source>
          <target state="translated">&lt;a name=&quot;floatDWidth&quot;&gt;幅は&lt;/a&gt;文字の最小数は、出力に書き込まれます。これには、符号、数字、グループ化区切り文字、小数点区切り文字、指数記号、基数インジケータ、括弧、無限大およびNaNを表す文字列が含まれます。変換された値の長さが幅より短い場合、文字の総数が幅と等しくなるまで、出力にスペース（ &lt;code&gt;'\u0020'&lt;/code&gt; ）が埋め込まれます。デフォルトでは、パディングは左側にあります。場合は &lt;code&gt;'-'&lt;/code&gt; フラグが指定され、右側にパディングされます。幅が指定されていない場合、最小値はありません。</target>
        </trans-unit>
        <trans-unit id="8a0cfd7eb208b940d0fafb3de1697cf536161c15" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;genWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. If the length of the converted value is less than the width then the output will be padded by &lt;code&gt;' '&lt;/code&gt; (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals the width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given, then the padding will be on the right. If the width is not specified then there is no minimum.</source>
          <target state="translated">&lt;a name=&quot;genWidth&quot;&gt;幅は&lt;/a&gt;文字の最小数は、出力に書き込まれます。変換された値の長さが幅より短い場合、文字の合計数が幅と等しくなるまで、出力に &lt;code&gt;' '&lt;/code&gt; （ &lt;code&gt;'\u0020'&lt;/code&gt; ）が埋め込まれます。デフォルトでは、パディングは左側にあります。場合は &lt;code&gt;'-'&lt;/code&gt; フラグが指定され、その後、パディングが右側にあります。幅が指定されていない場合、最小値はありません。</target>
        </trans-unit>
        <trans-unit id="8fa9d205d462a4bfb3a26d4bc78316084693aa53" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;intWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. This includes any signs, digits, grouping separators, radix indicator, and parentheses. If the length of the converted value is less than the width then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left by default. If &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</source>
          <target state="translated">&lt;a name=&quot;intWidth&quot;&gt;幅は&lt;/a&gt;文字の最小数は、出力に書き込まれます。これには、符号、数字、グループ化区切り、基数インジケータ、および括弧が含まれます。変換された値の長さが幅より短い場合、合計文字数が幅と等しくなるまで、出力はスペース（ &lt;code&gt;'\u0020'&lt;/code&gt; ）で埋められます。デフォルトでは、パディングは左側にあります。場合は &lt;code&gt;'-'&lt;/code&gt; フラグが指定され、右側にパディングされます。幅が指定されていない場合、最小値はありません。</target>
        </trans-unit>
        <trans-unit id="3e560a63da168303203b2b0de0e18b952b740b0d" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; argument specifies the access mode in which the file is to be opened. The permitted values and their meanings are:</source>
          <target state="translated">&lt;a name=&quot;mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt;引数は、ファイルが開かれるアクセスモードを指定します。許可される値とその意味は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="145215dc44f9def357de3dab23a1f66f054c4d00" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#getClassAnnotation(java.lang.Class)&quot;&gt;&lt;code&gt;getClassAnnotation&lt;/code&gt;&lt;/a&gt;&lt;/b&gt; method returns a &lt;code&gt;String&lt;/code&gt; representing the codebase URL path that a remote party should use to download the definition for the specified class. The format of the returned string is a path of URLs separated by spaces. The codebase string returned depends on the defining class loader of the specified class:</source>
          <target state="translated">&lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#getClassAnnotation(java.lang.Class)&quot;&gt; &lt;code&gt;getClassAnnotation&lt;/code&gt; の&lt;/a&gt;&lt;/b&gt;メソッドが返す &lt;code&gt;String&lt;/code&gt; リモートパーティが指定されたクラスの定義をダウンロードするために使用するコードベースURLパスを表します。返される文字列の形式は、スペースで区切られたURLのパスです。返されるコードベース文字列は、指定されたクラスの定義クラスローダーによって異なります。</target>
        </trans-unit>
        <trans-unit id="66186e196d8e5241a2fcb4f702c74b0fc47b8afc" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#getClassLoader(java.lang.String)&quot;&gt;&lt;code&gt;getClassLoader&lt;/code&gt;&lt;/a&gt;&lt;/b&gt; method returns the codebase loader for the specified codebase URL path. If there is a security manager, then if the calling context does not have permission to connect to all of the URLs in the codebase URL path, a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown.</source>
          <target state="translated">&lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#getClassLoader(java.lang.String)&quot;&gt; &lt;code&gt;getClassLoader&lt;/code&gt; の&lt;/a&gt;&lt;/b&gt;メソッドは、指定されたコードベースURLパスのコードベースローダを返します。セキュリティマネージャが存在する場合、呼び出し元のコンテキストにコードベースURLパス内のすべてのURLに接続する権限がない場合、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="30c066047ac9f5fbc1551a26a952f9784869ea3b" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt;&lt;/b&gt; method attempts to load the class with the specified name as follows:</source>
          <target state="translated">&lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt;&lt;/b&gt;次のように指定された名前を持つクラスをロードするための方法を試み：</target>
        </trans-unit>
        <trans-unit id="8eea9c24656b997f30d79cc056342173a1531262" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#loadProxyClass(java.lang.String,java.lang.String%5B%5D,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;loadProxyClass&lt;/code&gt;&lt;/a&gt;&lt;/b&gt; method attempts to return a dynamic proxy class with the named interface as follows:</source>
          <target state="translated">&lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#loadProxyClass(java.lang.String,java.lang.String%5B%5D,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;loadProxyClass&lt;/code&gt; を&lt;/a&gt;&lt;/b&gt;次のように命名インタフェースと動的プロキシクラスを返す方法の試み：</target>
        </trans-unit>
        <trans-unit id="d70755c800c2b720f9b2a4d9f93470f170f35163" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;all-at-once&lt;/b&gt; pattern: Get the doc from the current multidoc, and save the doc in a list. Get the next multidoc from the current multidoc, and repeat until there are no more. Then iterate over the list of saved docs. Get the print data representation object from the current doc. Get all the print data from the print data representation object. Go to the next doc in the list, and repeat until there are no more.</source>
          <target state="translated">&lt;b&gt;すべてのアットワンス&lt;/b&gt;パターン：現行のmultidocからドキュメントを取得し、リスト内のドキュメントを保存します。現在のマルチドキュメントから次のマルチドキュメントを取得し、それがなくなるまで繰り返します。次に、保存されたドキュメントのリストを反復処理します。現在のドキュメントから印刷データ表現オブジェクトを取得します。印刷データ表現オブジェクトからすべての印刷データを取得します。リストの次のドキュメントに移動し、ドキュメントがなくなるまで繰り返します。</target>
        </trans-unit>
        <trans-unit id="14f6267fa804e0d76a0763676c42485e1a9ce366" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;interleaved&lt;/b&gt; pattern: Get the doc from the current multidoc. Get the print data representation object from the current doc. Get all the print data from the print data representation object. Get the next multidoc from the current multidoc, and repeat until there are no more. (The code example above uses the interleaved pattern.)</source>
          <target state="translated">&lt;b&gt;インターリーブされた&lt;/b&gt;パターン：現行のmultidocからドキュメントを取得します。現在のドキュメントから印刷データ表現オブジェクトを取得します。印刷データ表現オブジェクトからすべての印刷データを取得します。現在のマルチドキュメントから次のマルチドキュメントを取得し、それがなくなるまで繰り返します。（上記のコード例では、インターリーブパターンを使用しています。）</target>
        </trans-unit>
        <trans-unit id="80231fb01cbd9eea6cac573462b78797a00356f7" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;javax.management.builder.initial&lt;/b&gt; system property is consulted every time a new MBeanServer needs to be created, and the class pointed to by that property is loaded. If that class is different from that of the current MBeanServerBuilder, then a new MBeanServerBuilder is created. Otherwise, the MBeanServerFactory may create a new MBeanServerBuilder or reuse the current one.</source>
          <target state="translated">&lt;b&gt;javax.management.builder.initial&lt;/b&gt;システムプロパティは新しいのMBeanServerを作成する必要があるたびに相談して、そのプロパティによって指さクラスがロードされます。そのクラスが現在のMBeanServerBuilderのクラスと異なる場合は、新しいMBeanServerBuilderが作成されます。それ以外の場合、MBeanServerFactoryは新しいMBeanServerBuilderを作成するか、現在のMBeanServerBuilderを再利用します。</target>
        </trans-unit>
        <trans-unit id="133b14a15ab9a0721c864334bb5dcba8749ddb42" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-1935722590756516193L&lt;/code&gt;.</source>
          <target state="translated">このクラスの&lt;b&gt;serialVersionUID&lt;/b&gt;は &lt;code&gt;-1935722590756516193L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="622f4eec33d97ed2e8edad4e862e2ca5e8fc31cb" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-279985518429862552L&lt;/code&gt;.</source>
          <target state="translated">このクラスの&lt;b&gt;serialVersionUID&lt;/b&gt;は &lt;code&gt;-279985518429862552L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="59d67311624b4fef95e26ff51e0a9c6b2312c3c6" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-48350262537070138L&lt;/code&gt;.</source>
          <target state="translated">このクラスの&lt;b&gt;serialVersionUID&lt;/b&gt;は &lt;code&gt;-48350262537070138L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ab26041362e68fa2964d28d4745de355c08d29de" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-6292969195866300415L&lt;/code&gt;.</source>
          <target state="translated">このクラスの&lt;b&gt;serialVersionUID&lt;/b&gt;は &lt;code&gt;-6292969195866300415L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8f922ee070b5cc5ace54d4a0b9d3f07682e92469" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-6304063118040985512L&lt;/code&gt;.</source>
          <target state="translated">このクラスの&lt;b&gt;serialVersionUID&lt;/b&gt;は &lt;code&gt;-6304063118040985512L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="93f104d7169f5ba748ac71dc420f8f2b3490fac9" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-6871117877523310399L&lt;/code&gt;.</source>
          <target state="translated">このクラスの&lt;b&gt;serialVersionUID&lt;/b&gt;は &lt;code&gt;-6871117877523310399L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5c85e9f3228eea1cfaf1477d918140c111a3aa28" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-7445681389570207141L&lt;/code&gt;.</source>
          <target state="translated">このクラスの&lt;b&gt;serialVersionUID&lt;/b&gt;は &lt;code&gt;-7445681389570207141L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ffe47f8e6b033a46b369815e41c457527afba987" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-7516092053498031989L&lt;/code&gt;.</source>
          <target state="translated">このクラスの&lt;b&gt;serialVersionUID&lt;/b&gt;は &lt;code&gt;-7516092053498031989L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6e41f3c2dd2562ef1b180a361f4b55bf634bff02" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;1081892073854801359L&lt;/code&gt;.</source>
          <target state="translated">このクラスの&lt;b&gt;serialVersionUID&lt;/b&gt;は &lt;code&gt;1081892073854801359L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1ca4312b85a226720a17b2d5c731f010931d260d" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;1190536278266811217L&lt;/code&gt;.</source>
          <target state="translated">このクラスの&lt;b&gt;serialVersionUID&lt;/b&gt;は &lt;code&gt;1190536278266811217L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="072aec20483bdd007929c428e915e721c5ac25ae" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;2504952983494636987L&lt;/code&gt;.</source>
          <target state="translated">このクラスの&lt;b&gt;serialVersionUID&lt;/b&gt;は &lt;code&gt;2504952983494636987L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="836dfd3926b378790fd6604b2d4b322a25a61a21" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;2605900539589789736L&lt;/code&gt;.</source>
          <target state="translated">このクラスの&lt;b&gt;serialVersionUID&lt;/b&gt;は &lt;code&gt;2605900539589789736L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5105ab01988b46bcdb2ad68ccb972b352bbbf14f" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;3176664577895105181L&lt;/code&gt;.</source>
          <target state="translated">このクラスの&lt;b&gt;serialVersionUID&lt;/b&gt;は &lt;code&gt;3176664577895105181L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="63b961dbc4cf57cb42fe0df92a55437c8ee74ba1" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;3862947819818064362L&lt;/code&gt;.</source>
          <target state="translated">このクラスの&lt;b&gt;serialVersionUID&lt;/b&gt;は &lt;code&gt;3862947819818064362L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="194f95466a78a370966f9e904fcacd1a20dcddc8" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;4611072955724144607L&lt;/code&gt;.</source>
          <target state="translated">このクラスの&lt;b&gt;serialVersionUID&lt;/b&gt;は &lt;code&gt;4611072955724144607L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5f6ceca5a91a116ea11f104aaac88adefc6f654d" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;6181543027787327345L&lt;/code&gt;.</source>
          <target state="translated">このクラスの&lt;b&gt;serialVersionUID&lt;/b&gt;は &lt;code&gt;6181543027787327345L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5ab50df0639c6c2a445f4eb42deaf59f57cd4cea" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;6532732096650090465L&lt;/code&gt;.</source>
          <target state="translated">このクラスの&lt;b&gt;serialVersionUID&lt;/b&gt;は &lt;code&gt;6532732096650090465L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cf7d7ffcce3e481d53bebd9cf2aa7b4afe92bff9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt; TooManyListenersException &lt;/code&gt; Exception is used as part of the Java Event model to annotate and implement a unicast special case of a multicast Event Source.</source>
          <target state="translated">&lt;code&gt; TooManyListenersException &lt;/code&gt; の例外は、注釈を付けるために、Javaイベントモデルの一部として使用し、マルチキャストのイベントソースをユニキャストの特殊なケースを実装しています。</target>
        </trans-unit>
        <trans-unit id="bb787bcc5a2d9591ebf6b45c48058c0e3ea10e61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt; java.security.acl &lt;/code&gt; package provides the interfaces to the ACL and related data structures (ACL entries, groups, permissions, etc.).</source>
          <target state="translated">&lt;code&gt; java.security.acl &lt;/code&gt; パッケージは、ACLと関連するデータ構造体（ACLエントリ、グループ、アクセス許可、等）へのインタフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="f745d9767dfe7275935bfbda4ff48625b21cbb74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt; java.security.acl.Acl &lt;/code&gt; interface extends the &lt;code&gt; java.security.acl.Owner &lt;/code&gt; interface. The Owner interface is used to maintain a list of owners for each ACL. Only owners are allowed to modify an ACL. For example, only an owner can call the ACL's &lt;code&gt;addEntry&lt;/code&gt; method to add a new ACL entry to the ACL.</source>
          <target state="translated">&lt;code&gt; java.security.acl.Acl &lt;/code&gt; のインターフェイスを拡張し &lt;code&gt; java.security.acl.Owner &lt;/code&gt; のインターフェイスを。所有者インターフェイスは、各ACLの所有者のリストを維持するために使用されます。ACLを変更できるのは所有者だけです。たとえば、所有者のみがACLの &lt;code&gt;addEntry&lt;/code&gt; メソッドを呼び出して、ACLに新しいACLエントリを追加できます。</target>
        </trans-unit>
        <trans-unit id="140c233f5b711ea49784f7bc7d8f708ede025961" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; mode can be used to reduce the number of I/O operations performed. Using &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; only requires updates to the file's content to be written to storage; using &lt;code&gt;&quot;rws&quot;&lt;/code&gt; requires updates to both the file's content and its metadata to be written, which generally requires at least one more low-level I/O operation.</source>
          <target state="translated">&lt;code&gt;&quot;rwd&quot;&lt;/code&gt; モードが実行されるI / O操作の数を減らすために使用することができます。 &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; を使用する場合は、ファイルのコンテンツを更新してストレージに書き込むだけです。 &lt;code&gt;&quot;rws&quot;&lt;/code&gt; を使用するには、ファイルのコンテンツとそのメタデータの両方を更新して書き込む必要があります。これには、通常、少なくとももう1つの低レベルI / O操作が必要です。</target>
        </trans-unit>
        <trans-unit id="5b1f93f3fa32832e03089b3885817033d0127da5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;rws&quot;&lt;/code&gt; and &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; modes work much like the &lt;a href=&quot;../nio/channels/filechannel#force(boolean)&quot;&gt;&lt;code&gt;force(boolean)&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../nio/channels/filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class, passing arguments of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;, respectively, except that they always apply to every I/O operation and are therefore often more efficient. If the file resides on a local storage device then when an invocation of a method of this class returns it is guaranteed that all changes made to the file by that invocation will have been written to that device. This is useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made.</source>
          <target state="translated">&lt;code&gt;&quot;rws&quot;&lt;/code&gt; と &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; モードは次のように多くの仕事&lt;a href=&quot;../nio/channels/filechannel#force(boolean)&quot;&gt; &lt;code&gt;force(boolean)&lt;/code&gt; &lt;/a&gt;の方法&lt;a href=&quot;../nio/channels/filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt;の引数を渡して、クラス &lt;code&gt;true&lt;/code&gt; と &lt;code&gt;false&lt;/code&gt; 、彼らは常にすべてのI / O操作に適用されますので、多くの場合、より効率的であることを除いて、それぞれ。ファイルがローカルストレージデバイス上にある場合、このクラスのメソッドの呼び出しが返されると、その呼び出しによってファイルに加えられたすべての変更がそのデバイスに書き込まれることが保証されます。これは、システムがクラッシュした場合に重要な情報が失われないようにするために役立ちます。ファイルがローカルデバイスに存在しない場合、そのような保証は行われません。</target>
        </trans-unit>
        <trans-unit id="0cfa334fcd18f47df7a744728a735885661d2393" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;rws&quot;&lt;/code&gt; and &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; modes work much like the &lt;a href=&quot;../nio/channels/filechannel#force-boolean-&quot;&gt;&lt;code&gt;force(boolean)&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../nio/channels/filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class, passing arguments of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;, respectively, except that they always apply to every I/O operation and are therefore often more efficient. If the file resides on a local storage device then when an invocation of a method of this class returns it is guaranteed that all changes made to the file by that invocation will have been written to that device. This is useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made.</source>
          <target state="translated">&lt;code&gt;&quot;rws&quot;&lt;/code&gt; と &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; モードは次のように多くの仕事&lt;a href=&quot;../nio/channels/filechannel#force-boolean-&quot;&gt; &lt;code&gt;force(boolean)&lt;/code&gt; &lt;/a&gt;の方法&lt;a href=&quot;../nio/channels/filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt;の引数を渡して、クラス &lt;code&gt;true&lt;/code&gt; と &lt;code&gt;false&lt;/code&gt; 、彼らは常にすべてのI / O操作に適用されますので、多くの場合、より効率的であることを除いて、それぞれ。ファイルがローカルストレージデバイスに存在する場合、このクラスのメソッドの呼び出しが戻ると、その呼び出しによってファイルに加えられたすべての変更がそのデバイスに書き込まれることが保証されます。これは、システムがクラッシュした場合に重要な情報が失われないようにするのに役立ちます。ファイルがローカルデバイスにない場合、そのような保証はありません。</target>
        </trans-unit>
        <trans-unit id="672103200add16df31276ac023df355f5dfbdb29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;/code&gt; relation does not provide a total order on all double values: &lt;code&gt;-0.0d == 0.0d&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and a &lt;code&gt;Double.NaN&lt;/code&gt; value compares neither less than, greater than, nor equal to any value, even itself. This method uses the total order imposed by the method &lt;a href=&quot;../lang/double#compareTo(java.lang.Double)&quot;&gt;&lt;code&gt;Double.compareTo(java.lang.Double)&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;-0.0d&lt;/code&gt; is treated as less than value &lt;code&gt;0.0d&lt;/code&gt; and &lt;code&gt;Double.NaN&lt;/code&gt; is considered greater than any other value and all &lt;code&gt;Double.NaN&lt;/code&gt; values are considered equal.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; 関係は、すべての二重値にトータル順序を提供しない。 &lt;code&gt;-0.0d == 0.0d&lt;/code&gt; で &lt;code&gt;true&lt;/code&gt; と &lt;code&gt;Double.NaN&lt;/code&gt; の偶数自体、値がより大きい、よりどちらも少ない比較なく、また任意の値に等しいです。このメソッドは、メソッド&lt;a href=&quot;../lang/double#compareTo(java.lang.Double)&quot;&gt; &lt;code&gt;Double.compareTo(java.lang.Double)&lt;/code&gt; &lt;/a&gt;によって課される全順序を使用します。 &lt;code&gt;-0.0d&lt;/code&gt; は値 &lt;code&gt;0.0d&lt;/code&gt; 未満として扱われ、 &lt;code&gt;Double.NaN&lt;/code&gt; は他のどの値よりも大きいと見なされ、すべての &lt;code&gt;Double.NaN&lt;/code&gt; 値は等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="5aac2f6058d827131417bfcfef8dc2eb4bdbda46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;/code&gt; relation does not provide a total order on all double values: &lt;code&gt;-0.0d == 0.0d&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and a &lt;code&gt;Double.NaN&lt;/code&gt; value compares neither less than, greater than, nor equal to any value, even itself. This method uses the total order imposed by the method &lt;a href=&quot;../lang/double#compareTo-java.lang.Double-&quot;&gt;&lt;code&gt;Double.compareTo(java.lang.Double)&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;-0.0d&lt;/code&gt; is treated as less than value &lt;code&gt;0.0d&lt;/code&gt; and &lt;code&gt;Double.NaN&lt;/code&gt; is considered greater than any other value and all &lt;code&gt;Double.NaN&lt;/code&gt; values are considered equal.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; 関係は、すべての二重値にトータル順序を提供しない。 &lt;code&gt;-0.0d == 0.0d&lt;/code&gt; で &lt;code&gt;true&lt;/code&gt; と &lt;code&gt;Double.NaN&lt;/code&gt; の偶数自体、値がより大きい、よりどちらも少ない比較なく、また任意の値に等しいです。このメソッドは、メソッド&lt;a href=&quot;../lang/double#compareTo-java.lang.Double-&quot;&gt; &lt;code&gt;Double.compareTo(java.lang.Double)&lt;/code&gt; &lt;/a&gt;によって課された合計順序を使用します。 &lt;code&gt;-0.0d&lt;/code&gt; は値 &lt;code&gt;0.0d&lt;/code&gt; 未満として扱われ、 &lt;code&gt;Double.NaN&lt;/code&gt; は他のどの値よりも大きいと見なされ、すべての &lt;code&gt;Double.NaN&lt;/code&gt; 値は等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="9d5f206cf064cd395031f64090f39b8054760d79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;/code&gt; relation does not provide a total order on all float values: &lt;code&gt;-0.0f == 0.0f&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and a &lt;code&gt;Float.NaN&lt;/code&gt; value compares neither less than, greater than, nor equal to any value, even itself. This method uses the total order imposed by the method &lt;a href=&quot;../lang/float#compareTo(java.lang.Float)&quot;&gt;&lt;code&gt;Float.compareTo(java.lang.Float)&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;-0.0f&lt;/code&gt; is treated as less than value &lt;code&gt;0.0f&lt;/code&gt; and &lt;code&gt;Float.NaN&lt;/code&gt; is considered greater than any other value and all &lt;code&gt;Float.NaN&lt;/code&gt; values are considered equal.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; 関係は、すべての浮動小数点値にトータル順序を提供しない。 &lt;code&gt;-0.0f == 0.0f&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; と &lt;code&gt;Float.NaN&lt;/code&gt; の値はどちらも以下より大きく、より比較しない、またさえ自体の任意の値、に等しいです。このメソッドは、メソッド&lt;a href=&quot;../lang/float#compareTo(java.lang.Float)&quot;&gt; &lt;code&gt;Float.compareTo(java.lang.Float)&lt;/code&gt; &lt;/a&gt;によって課される全順序を使用します。 &lt;code&gt;-0.0f&lt;/code&gt; は値 &lt;code&gt;0.0f&lt;/code&gt; 未満として扱われ、 &lt;code&gt;Float.NaN&lt;/code&gt; は他のどの値よりも大きいと見なされ、すべての &lt;code&gt;Float.NaN&lt;/code&gt; 値は等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="6758eacaf6eafc7546dec5d6a98b3ed7630fdb8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;/code&gt; relation does not provide a total order on all float values: &lt;code&gt;-0.0f == 0.0f&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and a &lt;code&gt;Float.NaN&lt;/code&gt; value compares neither less than, greater than, nor equal to any value, even itself. This method uses the total order imposed by the method &lt;a href=&quot;../lang/float#compareTo-java.lang.Float-&quot;&gt;&lt;code&gt;Float.compareTo(java.lang.Float)&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;-0.0f&lt;/code&gt; is treated as less than value &lt;code&gt;0.0f&lt;/code&gt; and &lt;code&gt;Float.NaN&lt;/code&gt; is considered greater than any other value and all &lt;code&gt;Float.NaN&lt;/code&gt; values are considered equal.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;/code&gt; 関係は、すべての浮動小数点値にトータル順序を提供しない。 &lt;code&gt;-0.0f == 0.0f&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; と &lt;code&gt;Float.NaN&lt;/code&gt; の値はどちらも以下より大きく、より比較しない、またさえ自体の任意の値、に等しいです。このメソッドは、メソッド&lt;a href=&quot;../lang/float#compareTo-java.lang.Float-&quot;&gt; &lt;code&gt;Float.compareTo(java.lang.Float)&lt;/code&gt; &lt;/a&gt;によって課された合計順序を使用します。 &lt;code&gt;-0.0f&lt;/code&gt; は値 &lt;code&gt;0.0f&lt;/code&gt; 未満として処理され、 &lt;code&gt;Float.NaN&lt;/code&gt; は他のどの値よりも大きいと見なされ、すべての &lt;code&gt;Float.NaN&lt;/code&gt; 値は等しいと見なされます。</target>
        </trans-unit>
        <trans-unit id="90432c8dfcfbf409f5a74fbfef303f20d153821a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;date&amp;gt;&lt;/code&gt; element will now contain the whole instant as formatted by the &lt;a href=&quot;../../../../java.base/java/time/format/datetimeformatter#ISO_INSTANT&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_INSTANT&lt;/code&gt;&lt;/a&gt; formatter.</source>
          <target state="translated">&lt;code&gt;&amp;lt;date&amp;gt;&lt;/code&gt; によってフォーマットとしての要素は今、全体の瞬間が含まれています&lt;a href=&quot;../../../../java.base/java/time/format/datetimeformatter#ISO_INSTANT&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_INSTANT&lt;/code&gt; &lt;/a&gt;フォーマッタ。</target>
        </trans-unit>
        <trans-unit id="19c7fcf4b0bd09ca778aaec398fff3533b85a624" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;widget&amp;gt;&lt;/code&gt; element can be selected with the following process:</source>
          <target state="translated">&lt;code&gt;&amp;lt;widget&amp;gt;&lt;/code&gt; 要素は、以下の方法で選択することができます。</target>
        </trans-unit>
        <trans-unit id="566defc53a29dd2c6f74968329502b0e504d1e15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'-'&lt;/code&gt; flag defined for &lt;a href=&quot;#dFlags&quot;&gt;General conversions&lt;/a&gt; applies. If any other flags are provided, then a &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">&lt;code&gt;'-'&lt;/code&gt; に対して定義されたフラグ&lt;a href=&quot;#dFlags&quot;&gt;一般的な変換が&lt;/a&gt;適用されます。他のフラグが指定されている場合、&lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="ea48ab5aaeaf4194edab0eb91c4845bbde6ed392" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'-'&lt;/code&gt; flag defined for &lt;a href=&quot;#dFlags&quot;&gt;General conversions&lt;/a&gt; applies. If the &lt;code&gt;'#'&lt;/code&gt; flag is given, then a &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">&lt;code&gt;'-'&lt;/code&gt; に対して定義されたフラグ&lt;a href=&quot;#dFlags&quot;&gt;一般的な変換が&lt;/a&gt;適用されます。場合は &lt;code&gt;'#'&lt;/code&gt; フラグが指定され、その後、&lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; が&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="803c87810da3137c31c3b9569aa0cdd88a5236f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;**&lt;/code&gt; characters matches zero or more &lt;a href=&quot;../../lang/character&quot;&gt;&lt;code&gt;characters&lt;/code&gt;&lt;/a&gt; crossing directory boundaries.</source>
          <target state="translated">&lt;code&gt;**&lt;/code&gt; 文字は、ゼロ個以上一致する&lt;a href=&quot;../../lang/character&quot;&gt; &lt;code&gt;characters&lt;/code&gt; &lt;/a&gt;のディレクトリの境界を横断します。</target>
        </trans-unit>
        <trans-unit id="43dd9a922339149a13fa5f34e0acbba85a8ef4ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;/code&gt; character matches zero or more &lt;a href=&quot;../../lang/character&quot;&gt;&lt;code&gt;characters&lt;/code&gt;&lt;/a&gt; of a &lt;a href=&quot;path#getName(int)&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; component without crossing directory boundaries.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; 文字は、ゼロ個以上の一致する&lt;a href=&quot;../../lang/character&quot;&gt; &lt;code&gt;characters&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;path#getName(int)&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;ディレクトリの境界を横断せずにコンポーネントを。</target>
        </trans-unit>
        <trans-unit id="bdc9ec98d6c3e53fb7a51d01e995f914de002527" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;/code&gt; character matches zero or more &lt;a href=&quot;../../lang/character&quot;&gt;&lt;code&gt;characters&lt;/code&gt;&lt;/a&gt; of a &lt;a href=&quot;path#getName-int-&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; component without crossing directory boundaries.</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; 文字は、ゼロ個以上の一致する&lt;a href=&quot;../../lang/character&quot;&gt; &lt;code&gt;characters&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;path#getName-int-&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;ディレクトリの境界を横断せずにコンポーネントを。</target>
        </trans-unit>
        <trans-unit id="56b1e692364ff3d0377ffb97e33a6452576a382f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;AudioSystem&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class includes methods for determining the format of an audio file, obtaining an audio input stream from an audio file, and writing an audio file from an audio input stream.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;AudioSystem&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; クラスは、オーディオファイルからのオーディオ入力ストリームを取得し、オーディオファイルのフォーマットを決定するための方法を含み、オーディオ入力ストリームからオーディオファイルを書き込みます。</target>
        </trans-unit>
        <trans-unit id="bb56cab0d387af77b98e49727a7446f08b61aa9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;system#exit-int-&quot;&gt;&lt;code&gt;System.exit&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method is the conventional and convenient means of invoking this method.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system#exit-int-&quot;&gt;&lt;code&gt;System.exit&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; のメソッドは、このメソッドを呼び出すのが一般的で便利です。</target>
        </trans-unit>
        <trans-unit id="b7e40741bd63e3e4d4e34f6ccfaaa185c2f108df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;ArbitraryText&lt;/em&gt;&lt;/code&gt; is any additional text that the connector server adds when creating the client id. At a minimum, it must be enough to distinguish this connection ID from the ID of any other connection currently opened by this connector server.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;ArbitraryText&lt;/em&gt;&lt;/code&gt; は、クライアントIDを作成する際にコネクタサーバーが追加されます任意の追加テキストです。少なくとも、この接続IDを、このコネクタサーバーによって現在開かれている他の接続のIDと区別するのに十分でなければなりません。</target>
        </trans-unit>
        <trans-unit id="57252451ad18df2276d94648faafb4c4918a4f22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;ClientAddress&lt;/em&gt;&lt;/code&gt; is the address and port of the connecting client, if these can be determined, otherwise nothing. The &lt;code&gt;&lt;em&gt;HostAddress&lt;/em&gt;&lt;/code&gt; is the Internet address of the host that the client is connecting from, in numeric or DNS form. Numeric IPv6 addresses are enclosed in square brackets &lt;code&gt;[]&lt;/code&gt;. The &lt;code&gt;&lt;em&gt;HostPort&lt;/em&gt;&lt;/code&gt; is the decimal port number that the client is connecting from.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;ClientAddress&lt;/em&gt;&lt;/code&gt; には、これらが、そうでない場合は何も決定できない場合は、接続しているクライアントのアドレスとポートです。 &lt;code&gt;&lt;em&gt;HostAddress&lt;/em&gt;&lt;/code&gt; はは、クライアントが数値またはDNS形式で、から接続しているホストのインターネットアドレスです。数値のIPv6アドレスは角括弧 &lt;code&gt;[]&lt;/code&gt; で囲まれています。 &lt;code&gt;&lt;em&gt;HostPort&lt;/em&gt;&lt;/code&gt; は、クライアントから接続していることを10進数のポート番号です。</target>
        </trans-unit>
        <trans-unit id="82e61d9cf4e7e9707c96a7b88021832560e67b3d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;ClientId&lt;/em&gt;&lt;/code&gt; is the identity of the client entity, typically a string returned by &lt;a href=&quot;jmxprincipal#getName()&quot;&gt;&lt;code&gt;JMXPrincipal.getName()&lt;/code&gt;&lt;/a&gt;. This string must not contain spaces.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;ClientId&lt;/em&gt;&lt;/code&gt; をは通常、クライアントエンティティのアイデンティティ、によって返される文字列である&lt;a href=&quot;jmxprincipal#getName()&quot;&gt; &lt;code&gt;JMXPrincipal.getName()&lt;/code&gt; &lt;/a&gt;。この文字列にはスペースを含めることはできません。</target>
        </trans-unit>
        <trans-unit id="531c08ac15a131c27029679adeb81cf5ad5bec7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;ClientId&lt;/em&gt;&lt;/code&gt; is the identity of the client entity, typically a string returned by &lt;a href=&quot;jmxprincipal#getName--&quot;&gt;&lt;code&gt;JMXPrincipal.getName()&lt;/code&gt;&lt;/a&gt;. This string must not contain spaces.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;ClientId&lt;/em&gt;&lt;/code&gt; をは通常、クライアントエンティティのアイデンティティ、によって返される文字列である&lt;a href=&quot;jmxprincipal#getName--&quot;&gt; &lt;code&gt;JMXPrincipal.getName()&lt;/code&gt; &lt;/a&gt;。この文字列にはスペースを含めないでください。</target>
        </trans-unit>
        <trans-unit id="e5ea1882020edd1476b0a71f1c9d73fd0f805d1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;Protocol&lt;/em&gt;&lt;/code&gt; is a protocol that would be recognized by &lt;a href=&quot;jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;Protocol&lt;/em&gt;&lt;/code&gt; によって認識されるプロトコルである&lt;a href=&quot;jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b824fdb77864355409db5ed994fa82e5b5e6ca93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; and &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; can be omitted. The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; cannot be supplied without a &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; と &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 省略することができます。 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; なしで供給することができない &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a12722721e439b6dff600477a13341187efa0475" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; in a user-provided &lt;code&gt;serviceURL&lt;/code&gt; is optional. If present, it is copied into the generated &lt;code&gt;JMXServiceURL&lt;/code&gt; but otherwise ignored. If absent, the generated &lt;code&gt;JXMServiceURL&lt;/code&gt; will have the local host name.</source>
          <target state="translated">ユーザー提供の &lt;code&gt;serviceURL&lt;/code&gt; の &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; はオプションです。存在する場合は、生成された &lt;code&gt;JMXServiceURL&lt;/code&gt; にコピーされますが、それ以外の場合は無視されます。存在しない場合、生成された &lt;code&gt;JXMServiceURL&lt;/code&gt; にはローカルホスト名が含まれます。</target>
        </trans-unit>
        <trans-unit id="bfa23af48503c6623afb1ad1711fefdb1632d2c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; is a host name, an IPv4 numeric host address, or an IPv6 numeric address enclosed in square brackets.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; ホスト名、IPv4の数値ホストアドレス、または角括弧で囲まれたIPv6数値アドレスです。</target>
        </trans-unit>
        <trans-unit id="8460511f507f18975285f87a75a8e4aef97a17f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; part of the returned string is the value returned by &lt;a href=&quot;#getHost()&quot;&gt;&lt;code&gt;getHost()&lt;/code&gt;&lt;/a&gt;. If that value specifies a numeric IPv6 address, it is surrounded by square brackets &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">返される文字列の &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 部分は、&lt;a href=&quot;#getHost()&quot;&gt; &lt;code&gt;getHost()&lt;/code&gt; &lt;/a&gt;によって返される値です。その値が数値のIPv6アドレスを指定している場合は、角括弧 &lt;code&gt;[]&lt;/code&gt; で囲まれています。</target>
        </trans-unit>
        <trans-unit id="2b0d7cc7b25ad83d3037b4dc212df848a1f89cd0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; part of the returned string is the value returned by &lt;a href=&quot;jmxserviceurl#getHost--&quot;&gt;&lt;code&gt;getHost()&lt;/code&gt;&lt;/a&gt;. If that value specifies a numeric IPv6 address, it is surrounded by square brackets &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">返される文字列の &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 部分は、&lt;a href=&quot;jmxserviceurl#getHost--&quot;&gt; &lt;code&gt;getHost()&lt;/code&gt; &lt;/a&gt;によって返される値です。その値が数値のIPv6アドレスを指定する場合、角括弧 &lt;code&gt;[]&lt;/code&gt; で囲まれます。</target>
        </trans-unit>
        <trans-unit id="55c0575a0a5f3a8a03451fbe7153260d3ab2702e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; in a user-provided &lt;code&gt;serviceURL&lt;/code&gt; is also optional. If present, it is also copied into the generated &lt;code&gt;JMXServiceURL&lt;/code&gt;; otherwise, the generated &lt;code&gt;JMXServiceURL&lt;/code&gt; has no port. For an &lt;code&gt;serviceURL&lt;/code&gt; using the &lt;code&gt;rmi&lt;/code&gt; protocol, the &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt;, if present, indicates what port the generated remote object should be exported on. It has no other effect.</source>
          <target state="translated">ユーザー提供の &lt;code&gt;serviceURL&lt;/code&gt; の &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; もオプションです。存在する場合は、生成された &lt;code&gt;JMXServiceURL&lt;/code&gt; にもコピーされます。それ以外の場合、生成された &lt;code&gt;JMXServiceURL&lt;/code&gt; にはポートがありません。 &lt;code&gt;rmi&lt;/code&gt; プロトコルを使用する &lt;code&gt;serviceURL&lt;/code&gt; の場合、 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; （存在する場合）は、生成されたリモートオブジェクトをエクスポートするポートを示します。他の効果はありません。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f0c8f3bfcebe38f9f7e404fcfe049e036b34bcb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; is a decimal port number. 0 means a default or anonymous port, depending on the protocol.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 10進数のポート番号です。0は、プロトコルに応じて、デフォルトまたは匿名のポートを意味します。</target>
        </trans-unit>
        <trans-unit id="e64b24c6106b58d8f17aec775ecdc7be255a7b9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; part of the returned string is the value returned by &lt;a href=&quot;#getPort()&quot;&gt;&lt;code&gt;getPort()&lt;/code&gt;&lt;/a&gt; in its shortest decimal form. If the value is zero, it is omitted.</source>
          <target state="translated">返される文字列の &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 部分は、&lt;a href=&quot;#getPort()&quot;&gt; &lt;code&gt;getPort()&lt;/code&gt; &lt;/a&gt;によって最短の10進形式で返される値です。値がゼロの場合は省略されます。</target>
        </trans-unit>
        <trans-unit id="aed5089fcc06d0b24df1a0c3d314b9e78f48e5cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; part of the returned string is the value returned by &lt;a href=&quot;jmxserviceurl#getPort--&quot;&gt;&lt;code&gt;getPort()&lt;/code&gt;&lt;/a&gt; in its shortest decimal form. If the value is zero, it is omitted.</source>
          <target state="translated">返される文字列の &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 部分は、最短の10進形式で&lt;a href=&quot;jmxserviceurl#getPort--&quot;&gt; &lt;code&gt;getPort()&lt;/code&gt; &lt;/a&gt;によって返される値です。値がゼロの場合は省略されます。</target>
        </trans-unit>
        <trans-unit id="44dcc40e6319d73e55e0506b2a02c88d015d6e90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;protocol-version&lt;/em&gt;&lt;/code&gt; is a series of two or more non-negative integers separated by periods (&lt;code&gt;.&lt;/code&gt;). An implementation of the version described by this documentation must use the string &lt;code&gt;1.0&lt;/code&gt; here.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;protocol-version&lt;/em&gt;&lt;/code&gt; ピリオドで区切られた2つ以上の非負整数の系列です（ &lt;code&gt;.&lt;/code&gt; ）。このドキュメントで説明されているバージョンの実装では、ここでは文字列 &lt;code&gt;1.0&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="51e5d21d788500cd8258dd52116920bb8d78aa5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;url-path&lt;/em&gt;&lt;/code&gt;, if any, begins with a slash (&lt;code&gt;/&lt;/code&gt;) or a semicolon (&lt;code&gt;;&lt;/code&gt;) and continues to the end of the address. It can contain attributes using the semicolon syntax specified in RFC 2609. Those attributes are not parsed by this class and incorrect attribute syntax is not detected.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;url-path&lt;/em&gt;&lt;/code&gt; 、もしあれば、スラッシュ（始まる &lt;code&gt;/&lt;/code&gt; （）またはセミコロン &lt;code&gt;;&lt;/code&gt; ）とアドレスの終わりまで続きます。RFC 2609で指定されているセミコロン構文を使用して属性を含めることができます。これらの属性はこのクラスによって解析されず、不正な属性構文は検出されません。</target>
        </trans-unit>
        <trans-unit id="0cfefc52ce748f9328afa9b5dc72829a45465fa5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;?&lt;/code&gt; character matches exactly one character of a name component.</source>
          <target state="translated">&lt;code&gt;?&lt;/code&gt; 文字は、名前コンポーネントの1文字と完全に一致します。</target>
        </trans-unit>
        <trans-unit id="0efee80247743a6ac1ac9ba48df946cfc93c6410" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@Deprecated&lt;/code&gt; annotation should always be present if the &lt;code&gt;@deprecated&lt;/code&gt; javadoc tag is present, and vice-versa.</source>
          <target state="translated">&lt;code&gt;@Deprecated&lt;/code&gt; 場合注釈は常に存在しなければならない &lt;code&gt;@deprecated&lt;/code&gt; Javadocのタグが存在し、その逆。</target>
        </trans-unit>
        <trans-unit id="3916be731536563c076672f2f55b3e1476410ef0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AWTEventMonitor&lt;/code&gt; implements a suite of listeners that are conditionally installed on every AWT component instance in the Java Virtual Machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1933cb82d881655231913702fb32fbabb38d00ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AWTEventMonitor&lt;/code&gt; implements a suite of listeners that are conditionally installed on every AWT component instance in the Java Virtual Machine. The events captured by these listeners are made available through a unified set of listeners supported by &lt;code&gt;AWTEventMonitor&lt;/code&gt;. With this, all the individual events on each of the AWT component instances are funneled into one set of listeners broken down by category (see &lt;a href=&quot;eventid&quot;&gt;&lt;code&gt;EventID&lt;/code&gt;&lt;/a&gt; for the categories).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86179c7113b7ca3e72607b93d89e62c19020820b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessControlContext&lt;/code&gt; may contain many Subjects (from nested &lt;code&gt;doAs&lt;/code&gt; calls). In this situation, the most recent &lt;code&gt;Subject&lt;/code&gt; associated with the &lt;code&gt;AccessControlContext&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;AccessControlContext&lt;/code&gt; には、（入れ子になったから、多くの被験者が含まれていてもよい &lt;code&gt;doAs&lt;/code&gt; 呼び出し）。この状況では、 &lt;code&gt;AccessControlContext&lt;/code&gt; に関連付けられた最新の &lt;code&gt;Subject&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="1c2585eb08ce918b90bcbc551e2304a101e6d9fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibilityListenerList&lt;/code&gt; is a copy of the Swing &lt;a href=&quot;../../../../../../java.desktop/javax/swing/event/eventlistenerlist&quot;&gt;&lt;code&gt;EventListerList&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3908e3e09d64afbffab80b454ad2cbe628a9babd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleAction&lt;/code&gt; interface should be supported by any object that can perform one or more actions.</source>
          <target state="translated">&lt;code&gt;AccessibleAction&lt;/code&gt; インタフェースは、1つ以上のアクションを実行できるすべてのオブジェクトによってサポートされなければなりません。</target>
        </trans-unit>
        <trans-unit id="c473a7714248ebd12a4093fbc003adaa42921796" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleAction&lt;/code&gt; interface should be supported by any object that can perform one or more actions. This interface provides the standard mechanism for an assistive technology to determine what those actions are as well as tell the object to perform them. Any object that can be manipulated should support this interface. Applications can determine if an object supports the &lt;code&gt;AccessibleAction&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleAction()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleAction()&lt;/code&gt;&lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">&lt;code&gt;AccessibleAction&lt;/code&gt; インタフェースは、1つ以上のアクションを実行できるすべてのオブジェクトによってサポートされなければなりません。このインターフェイスは、これらのアクションが何であるかを判断し、オブジェクトにそれらを実行するように指示する支援技術の標準メカニズムを提供します。操作可能なオブジェクトはすべて、このインターフェイスをサポートする必要があります。アプリケーションは、最初に &lt;code&gt;AccessibleContext&lt;/code&gt; を取得し（&lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; を&lt;/a&gt;参照）、次に&lt;a href=&quot;accessiblecontext#getAccessibleAction()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleAction()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、オブジェクトが &lt;code&gt;AccessibleAction&lt;/code&gt; インターフェイスをサポートしているかどうかを判断できます。戻り値が &lt;code&gt;null&lt;/code&gt; でない場合、オブジェクトはこのインターフェースをサポートします。</target>
        </trans-unit>
        <trans-unit id="f3d39ae4fbd7cfa1adcd02d16d8f7fb028c832c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleComponent&lt;/code&gt; interface should be supported by any object that is rendered on the screen.</source>
          <target state="translated">&lt;code&gt;AccessibleComponent&lt;/code&gt; 内インターフェイスは、画面に描画されるすべてのオブジェクトによってサポートされなければなりません。</target>
        </trans-unit>
        <trans-unit id="aa3a9d732e80037f70ac2cb1c8411f49537df6c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleComponent&lt;/code&gt; interface should be supported by any object that is rendered on the screen. This interface provides the standard mechanism for an assistive technology to determine and set the graphical representation of an object. Applications can determine if an object supports the &lt;code&gt;AccessibleComponent&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleComponent()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleComponent()&lt;/code&gt;&lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">&lt;code&gt;AccessibleComponent&lt;/code&gt; 内インターフェイスは、画面に描画されるすべてのオブジェクトによってサポートされなければなりません。このインターフェイスは、オブジェクトのグラフィック表現を決定および設定するための支援技術の標準メカニズムを提供します。アプリケーションは、最初に &lt;code&gt;AccessibleContext&lt;/code&gt; を取得してから、&lt;a href=&quot;accessiblecontext#getAccessibleComponent()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleComponent()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、オブジェクトが &lt;code&gt;AccessibleComponent&lt;/code&gt; インターフェイスをサポートしているかどうかを判断できます。戻り値が &lt;code&gt;null&lt;/code&gt; でない場合、オブジェクトはこのインターフェースをサポートします。</target>
        </trans-unit>
        <trans-unit id="f43849f68f67a0ecc780e13f5479f663a6daecd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleContext&lt;/code&gt; associated with this &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AccessibleContext&lt;/code&gt; をこれに関連する &lt;code&gt;Component&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbf47d5695815d5e8118b745ccce459eece15483" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleContext&lt;/code&gt; for the &lt;code&gt;ProgressMonitor&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;AccessibleContext&lt;/code&gt; を用 &lt;code&gt;ProgressMonitor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2191b09f1d269f0606ec7d698a355f8c1f8b44f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleEditableText&lt;/code&gt; interface should be implemented by all classes that present editable textual information on the display.</source>
          <target state="translated">&lt;code&gt;AccessibleEditableText&lt;/code&gt; のインターフェースは、ディスプレイ上に存在し、編集可能なテキスト情報ことをすべてのクラスによって実装されなければなりません。</target>
        </trans-unit>
        <trans-unit id="1873fadd8e5a958c96e6454d288335bff6968316" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleEditableText&lt;/code&gt; interface should be implemented by all classes that present editable textual information on the display. Along with the &lt;code&gt;AccessibleText&lt;/code&gt; interface, this interface provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. Applications can determine if an object supports the &lt;code&gt;AccessibleEditableText&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleEditableText()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleEditableText()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;AccessibleContext&lt;/code&gt;. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">&lt;code&gt;AccessibleEditableText&lt;/code&gt; のインターフェースは、ディスプレイ上に存在し、編集可能なテキスト情報ことをすべてのクラスによって実装されなければなりません。このインターフェイスは、 &lt;code&gt;AccessibleText&lt;/code&gt; インターフェイスに加えて、コンテンツ、属性、および空間的な場所を介してそのテキストにアクセスするための支援技術の標準メカニズムを提供します。オブジェクトがサポートするかどうかを判定することができる &lt;code&gt;AccessibleEditableText&lt;/code&gt; を最初に取得することによってインターフェースを &lt;code&gt;AccessibleContext&lt;/code&gt; を（参照&lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;）、次に呼び出す&lt;a href=&quot;accessiblecontext#getAccessibleEditableText()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleEditableText()&lt;/code&gt; &lt;/a&gt;のメソッド &lt;code&gt;AccessibleContext&lt;/code&gt; を。戻り値が &lt;code&gt;null&lt;/code&gt; でない場合、オブジェクトはこのインターフェースをサポートします。</target>
        </trans-unit>
        <trans-unit id="a8576c5c876c10480e7110724150efa8be9bdb83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; interface should be supported by any object that is rendered on the screen.</source>
          <target state="translated">&lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; のインタフェースは、画面に描画されるすべてのオブジェクトによってサポートされなければなりません。</target>
        </trans-unit>
        <trans-unit id="3247400137ced701b45d95c578a02703afb594a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; interface should be supported by any object that is rendered on the screen. This interface provides the standard mechanism for an assistive technology to determine the extended graphical representation of an object. Applications can determine if an object supports the &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleComponent()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleComponent()&lt;/code&gt;&lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt; and the type of the return value is &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">&lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; のインタフェースは、画面に描画されるすべてのオブジェクトによってサポートされなければなりません。このインターフェイスは、オブジェクトの拡張グラフィック表現を決定するための支援技術の標準メカニズムを提供します。アプリケーションは、最初に &lt;code&gt;AccessibleContext&lt;/code&gt; を取得してから、&lt;a href=&quot;accessiblecontext#getAccessibleComponent()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleComponent()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、オブジェクトが &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; インターフェイスをサポートしているかどうかを判断できます。戻り値が &lt;code&gt;null&lt;/code&gt; でなく、戻り値のタイプが &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; である場合、オブジェクトはこのインターフェイスをサポートします。</target>
        </trans-unit>
        <trans-unit id="35a7324acfe2b7d3d5addac091a782cc34ba08f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleExtendedText&lt;/code&gt; interface contains additional methods not provided by the &lt;code&gt;AccessibleText&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;AccessibleExtendedText&lt;/code&gt; のインターフェイスはによって提供されていない追加のメソッドが含まれ &lt;code&gt;AccessibleText&lt;/code&gt; インターフェイスを。</target>
        </trans-unit>
        <trans-unit id="8e588342be007ce914be3da0e97873d18b180331" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleHypertext&lt;/code&gt; class is the base class for all classes that present hypertext information on the display.</source>
          <target state="translated">&lt;code&gt;AccessibleHypertext&lt;/code&gt; のクラスは、ディスプレイ上に存在するハイパーテキスト情報のことを、すべてのクラスの基本クラスです。</target>
        </trans-unit>
        <trans-unit id="7db43bacb2b362886b107ffd5c3074aee0f970bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleHypertext&lt;/code&gt; class is the base class for all classes that present hypertext information on the display. This class provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. It also provides standard mechanisms for manipulating hyperlinks. Applications can determine if an object supports the &lt;code&gt;AccessibleHypertext&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleText()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleText()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;AccessibleContext&lt;/code&gt;. If the return value is a class which extends &lt;code&gt;AccessibleHypertext&lt;/code&gt;, then that object supports &lt;code&gt;AccessibleHypertext&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AccessibleHypertext&lt;/code&gt; のクラスは、ディスプレイ上に存在するハイパーテキスト情報のことを、すべてのクラスの基本クラスです。このクラスは、コンテンツ、属性、および空間的な場所を介してそのテキストにアクセスするための支援技術の標準メカニズムを提供します。また、ハイパーリンクを操作するための標準的なメカニズムも提供します。オブジェクトがサポートするかどうかを判定することができる &lt;code&gt;AccessibleHypertext&lt;/code&gt; の最初に取得することによってインターフェースを &lt;code&gt;AccessibleContext&lt;/code&gt; を（参照&lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;）、次に呼び出す&lt;a href=&quot;accessiblecontext#getAccessibleText()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleText()&lt;/code&gt; &lt;/a&gt;のメソッド &lt;code&gt;AccessibleContext&lt;/code&gt; を。戻り値が &lt;code&gt;AccessibleHypertext&lt;/code&gt; を拡張するクラスである場合、そのオブジェクトはサポートします &lt;code&gt;AccessibleHypertext&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="faf8435ce3a9fcd516db942cb8a2d354e93f118a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleIcon&lt;/code&gt; interface should be supported by any object that has an associated icon (e.g., buttons).</source>
          <target state="translated">&lt;code&gt;AccessibleIcon&lt;/code&gt; のインターフェースは、関連したアイコン（例えば、ボタン）を持つすべてのオブジェクトによってサポートされなければなりません。</target>
        </trans-unit>
        <trans-unit id="d3ba10fe38f58c559b6ec91711ac3b7362b581fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleIcon&lt;/code&gt; interface should be supported by any object that has an associated icon (e.g., buttons). This interface provides the standard mechanism for an assistive technology to get descriptive information about icons. Applications can determine if an object supports the &lt;code&gt;AccessibleIcon&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleIcon()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleIcon()&lt;/code&gt;&lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">&lt;code&gt;AccessibleIcon&lt;/code&gt; のインターフェースは、関連したアイコン（例えば、ボタン）を持つすべてのオブジェクトによってサポートされなければなりません。このインターフェースは、アイコンに関する記述情報を取得するための支援技術の標準メカニズムを提供します。アプリケーションは、最初に &lt;code&gt;AccessibleContext&lt;/code&gt; （&lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; を&lt;/a&gt;参照）を取得してから、&lt;a href=&quot;accessiblecontext#getAccessibleIcon()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleIcon()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、オブジェクトが &lt;code&gt;AccessibleIcon&lt;/code&gt; インターフェイスをサポートしているかどうかを判断できます。戻り値が &lt;code&gt;null&lt;/code&gt; でない場合、オブジェクトはこのインターフェースをサポートします。</target>
        </trans-unit>
        <trans-unit id="73130429098fda9c943a97d824e4e0d826f98015" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleKeyBinding&lt;/code&gt; interface should be supported by any object that has a keyboard bindings such as a keyboard mnemonic and/or keyboard shortcut which can be used to select the object.</source>
          <target state="translated">&lt;code&gt;AccessibleKeyBinding&lt;/code&gt; インターフェースは、キーボードニーモニックとしてキーボードバインディングおよび/またはオブジェクトを選択するために使用できるキーボードショートカットを持つすべてのオブジェクトによってサポートされなければなりません。</target>
        </trans-unit>
        <trans-unit id="1e6d6cb06b5b9c263d4d45c3948efc266f8cb213" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleKeyBinding&lt;/code&gt; interface should be supported by any object that has a keyboard bindings such as a keyboard mnemonic and/or keyboard shortcut which can be used to select the object. This interface provides the standard mechanism for an assistive technology to determine the key bindings which exist for this object. Any object that has such key bindings should support this interface.</source>
          <target state="translated">&lt;code&gt;AccessibleKeyBinding&lt;/code&gt; インターフェースは、キーボードニーモニックとしてキーボードバインディングおよび/またはオブジェクトを選択するために使用できるキーボードショートカットを持つすべてのオブジェクトによってサポートされなければなりません。このインターフェースは、このオブジェクトに存在するキーバインディングを決定するための支援技術の標準メカニズムを提供します。このようなキーバインディングを持つオブジェクトは、このインターフェイスをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="b327de9d3fb9e0bf710b7abf2a2d35bcc20dd438" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleObject&lt;/code&gt; class is the base class for &lt;code&gt;Field&lt;/code&gt;, &lt;code&gt;Method&lt;/code&gt;, and &lt;code&gt;Constructor&lt;/code&gt; objects (known as &lt;em&gt;reflected objects&lt;/em&gt;).</source>
          <target state="translated">&lt;code&gt;AccessibleObject&lt;/code&gt; クラスは、基本クラスである &lt;code&gt;Field&lt;/code&gt; 、 &lt;code&gt;Method&lt;/code&gt; 、および &lt;code&gt;Constructor&lt;/code&gt; オブジェクト（として知られている&lt;em&gt;反射物体&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="504d93f898c7589525ac3642c5d6ef807175bb59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleObject&lt;/code&gt; class is the base class for &lt;code&gt;Field&lt;/code&gt;, &lt;code&gt;Method&lt;/code&gt;, and &lt;code&gt;Constructor&lt;/code&gt; objects (known as &lt;em&gt;reflected objects&lt;/em&gt;). It provides the ability to flag a reflected object as suppressing checks for Java language access control when it is used. This permits sophisticated applications with sufficient privilege, such as Java Object Serialization or other persistence mechanisms, to manipulate objects in a manner that would normally be prohibited.</source>
          <target state="translated">&lt;code&gt;AccessibleObject&lt;/code&gt; クラスは、基本クラスである &lt;code&gt;Field&lt;/code&gt; 、 &lt;code&gt;Method&lt;/code&gt; 、および &lt;code&gt;Constructor&lt;/code&gt; オブジェクト（として知られている&lt;em&gt;反射物体&lt;/em&gt;）。使用時にJava言語アクセス制御のチェックを抑制するものとして反映されたオブジェクトにフラグを立てる機能を提供します。これにより、Java Object Serializationやその他の永続化メカニズムなど、十分な特権を持つ高度なアプリケーションが、通常は禁止されている方法でオブジェクトを操作できるようになります。</target>
        </trans-unit>
        <trans-unit id="bebd10b8cada2d236bcee7f52d58570942a03df2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleStreamable&lt;/code&gt; interface should be implemented by the &lt;code&gt;AccessibleContext&lt;/code&gt; of any component that presents the raw stream behind a component on the display screen.</source>
          <target state="translated">&lt;code&gt;AccessibleStreamable&lt;/code&gt; インターフェイスはによって実装されるべき &lt;code&gt;AccessibleContext&lt;/code&gt; 任意成分の提示する表示画面上のコンポーネントの背後にある生のストリーム。</target>
        </trans-unit>
        <trans-unit id="166dee8c08c12ffb7eee6d8d4a6709455e6484ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleStreamable&lt;/code&gt; interface should be implemented by the &lt;code&gt;AccessibleContext&lt;/code&gt; of any component that presents the raw stream behind a component on the display screen. Examples of such components are HTML, bitmap images and MathML. An object that implements &lt;code&gt;AccessibleStreamable&lt;/code&gt; provides two things: a list of MIME types supported by the object and a streaming interface for each MIME type to get the data.</source>
          <target state="translated">&lt;code&gt;AccessibleStreamable&lt;/code&gt; インターフェイスはによって実装されるべき &lt;code&gt;AccessibleContext&lt;/code&gt; 任意成分の提示する表示画面上のコンポーネントの背後にある生のストリーム。このようなコンポーネントの例としては、HTML、ビットマップイメージ、MathMLがあります。 &lt;code&gt;AccessibleStreamable&lt;/code&gt; を実装するオブジェクトは、オブジェクトでサポートされているMIMEタイプのリストと、データを取得するための各MIMEタイプのストリーミングインターフェイスの2つを提供します。</target>
        </trans-unit>
        <trans-unit id="3c3cb31a1c741ff7a9b4761f3d8c38ef5c44d952" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleTableModelChange&lt;/code&gt; interface describes a change to the table model.</source>
          <target state="translated">&lt;code&gt;AccessibleTableModelChange&lt;/code&gt; インタフェースはテーブルモデルへの変更について説明します。</target>
        </trans-unit>
        <trans-unit id="4585d50b1f9770d23e6e5f1ce54330b4090f0b78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleTableModelChange&lt;/code&gt; interface describes a change to the table model. The attributes of the model change can be obtained by the following methods:</source>
          <target state="translated">&lt;code&gt;AccessibleTableModelChange&lt;/code&gt; インタフェースはテーブルモデルへの変更について説明します。モデル変更の属性は、次の方法で取得できます。</target>
        </trans-unit>
        <trans-unit id="d1e504bfff18e5d05a112b9b15cb1a5fcbd06f58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleText&lt;/code&gt; interface should be implemented by all classes that present textual information on the display.</source>
          <target state="translated">&lt;code&gt;AccessibleText&lt;/code&gt; インターフェースは、ディスプレイ上に存在するテキスト情報ことをすべてのクラスによって実装されなければなりません。</target>
        </trans-unit>
        <trans-unit id="bb6a238837c9f7f9a564586ec69e06cb5d566679" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleText&lt;/code&gt; interface should be implemented by all classes that present textual information on the display. This interface provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. Applications can determine if an object supports the &lt;code&gt;AccessibleText&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleText()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleText()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;AccessibleContext&lt;/code&gt;. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">&lt;code&gt;AccessibleText&lt;/code&gt; インターフェースは、ディスプレイ上に存在するテキスト情報ことをすべてのクラスによって実装されなければなりません。このインターフェースは、コンテンツ、属性、および空間的位置を介してそのテキストにアクセスするための支援技術の標準メカニズムを提供します。オブジェクトがサポートするかどうかを判定することができ &lt;code&gt;AccessibleText&lt;/code&gt; 最初に取得することによってインターフェースを &lt;code&gt;AccessibleContext&lt;/code&gt; を（参照&lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;）、次に呼び出す&lt;a href=&quot;accessiblecontext#getAccessibleText()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleText()&lt;/code&gt; &lt;/a&gt;のメソッド &lt;code&gt;AccessibleContext&lt;/code&gt; を。戻り値が &lt;code&gt;null&lt;/code&gt; でない場合、オブジェクトはこのインターフェースをサポートします。</target>
        </trans-unit>
        <trans-unit id="056efc481e10c239791f1854c67f61a2f4664863" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleValue&lt;/code&gt; interface should be supported by any object that supports a numerical value (e.g., a scroll bar).</source>
          <target state="translated">&lt;code&gt;AccessibleValue&lt;/code&gt; インタフェースは、数値をサポートするすべてのオブジェクト（スクロールバーなど）によってサポートされる必要があります。</target>
        </trans-unit>
        <trans-unit id="c8b086610a18ed0e538e46c7f2a7634e69c1682c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleValue&lt;/code&gt; interface should be supported by any object that supports a numerical value (e.g., a scroll bar). This interface provides the standard mechanism for an assistive technology to determine and set the numerical value as well as get the minimum and maximum values. Applications can determine if an object supports the &lt;code&gt;AccessibleValue&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleValue()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleValue()&lt;/code&gt;&lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">&lt;code&gt;AccessibleValue&lt;/code&gt; インタフェースは、数値をサポートするすべてのオブジェクト（スクロールバーなど）によってサポートされる必要があります。このインターフェースは、数値を決定および設定し、最小値と最大値を取得するための支援技術の標準メカニズムを提供します。アプリケーションは、最初に &lt;code&gt;AccessibleContext&lt;/code&gt; を取得し（&lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; を&lt;/a&gt;参照）、次に&lt;a href=&quot;accessiblecontext#getAccessibleValue()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleValue()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、オブジェクトが &lt;code&gt;AccessibleValue&lt;/code&gt; インターフェイスをサポートしているかどうかを判断できます。戻り値が &lt;code&gt;null&lt;/code&gt; でない場合、オブジェクトはこのインターフェースをサポートします。</target>
        </trans-unit>
        <trans-unit id="44791f8e57ff8bfd891a67fc88014f58af70954a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Action&lt;/code&gt; interface provides a useful extension to the &lt;code&gt;ActionListener&lt;/code&gt; interface in cases where the same functionality may be accessed by several controls.</source>
          <target state="translated">&lt;code&gt;Action&lt;/code&gt; インターフェースは、に有用な拡張機能を提供する &lt;code&gt;ActionListener&lt;/code&gt; 、同じ機能が複数のコントロールによってアクセスされる場合に、インターフェース。</target>
        </trans-unit>
        <trans-unit id="34edfc98f1eaec6790f4628038524e8aca37a7f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Action&lt;/code&gt; is added as an &lt;code&gt;ActionListener&lt;/code&gt; to the component.</source>
          <target state="translated">&lt;code&gt;Action&lt;/code&gt; として追加され &lt;code&gt;ActionListener&lt;/code&gt; 成分。</target>
        </trans-unit>
        <trans-unit id="30201ddb916bcc958215e7053ec1089b39082cd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActionListener&lt;/code&gt; will receive an &lt;code&gt;ActionEvent&lt;/code&gt; when a selection has been made. If the combo box is editable, then an &lt;code&gt;ActionEvent&lt;/code&gt; will be fired when editing has stopped.</source>
          <target state="translated">&lt;code&gt;ActionListener&lt;/code&gt; が届きます &lt;code&gt;ActionEvent&lt;/code&gt; 選択が行われたとき。コンボボックスが編集可能である場合、編集が停止したときに &lt;code&gt;ActionEvent&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="ef1938064c7852b953eb1b5cbb0d73a9e2febdc0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Activatable&lt;/code&gt; class provides support for remote objects that require persistent access over time and that can be activated by the system.</source>
          <target state="translated">&lt;code&gt;Activatable&lt;/code&gt; クラスには、永続的なアクセスを必要とし、システムから起動できるリモートオブジェクトをサポートしています。</target>
        </trans-unit>
        <trans-unit id="9911c89b0b276dc0f0fa74a32a5ec5f1ac847b7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActivationGroupID&lt;/code&gt; is returned from the call to &lt;code&gt;ActivationSystem.registerGroup&lt;/code&gt; and is used to identify the group within the activation system. This group id is passed as one of the arguments to the activation group's special constructor when an activation group is created/recreated.</source>
          <target state="translated">&lt;code&gt;ActivationGroupID&lt;/code&gt; がが呼び出しから返され &lt;code&gt;ActivationSystem.registerGroup&lt;/code&gt; と活性化システム内のグループを識別するために使用されます。このグループIDは、アクティベーショングループが作成/再作成されるときに、引数の1つとしてアクティベーショングループの特別なコンストラクターに渡されます。</target>
        </trans-unit>
        <trans-unit id="af4be72177e080360c18c9e2ed801cc0e3bbac04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActivationSystem&lt;/code&gt; provides a means for registering groups and &quot;activatable&quot; objects to be activated within those groups.</source>
          <target state="translated">&lt;code&gt;ActivationSystem&lt;/code&gt; は、グループおよびそれらのグループ内で活性化される「起動可能」オブジェクトを登録するための手段を提供します。</target>
        </trans-unit>
        <trans-unit id="4987e1b2fb6cd9753ec845534af1b665b5ec3274" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActivationSystem&lt;/code&gt; provides a means for registering groups and &quot;activatable&quot; objects to be activated within those groups. The &lt;code&gt;ActivationSystem&lt;/code&gt; works closely with the &lt;code&gt;Activator&lt;/code&gt;, which activates objects registered via the &lt;code&gt;ActivationSystem&lt;/code&gt;, and the &lt;code&gt;ActivationMonitor&lt;/code&gt;, which obtains information about active and inactive objects, and inactive groups.</source>
          <target state="translated">&lt;code&gt;ActivationSystem&lt;/code&gt; は、グループおよびそれらのグループ内で活性化される「起動可能」オブジェクトを登録するための手段を提供します。 &lt;code&gt;ActivationSystem&lt;/code&gt; はと密接に連携して &lt;code&gt;Activator&lt;/code&gt; を経て登録されたオブジェクトを活性化、 &lt;code&gt;ActivationSystem&lt;/code&gt; 、そして &lt;code&gt;ActivationMonitor&lt;/code&gt; にアクティブおよび非アクティブのオブジェクト、および非アクティブグループに関する情報を取得し、。</target>
        </trans-unit>
        <trans-unit id="a2842a28fc68889440f54df9e9e48b8b8bfc10a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Activator&lt;/code&gt; facilitates remote object activation.</source>
          <target state="translated">&lt;code&gt;Activator&lt;/code&gt; 、リモートオブジェクトの起動を容易にします。</target>
        </trans-unit>
        <trans-unit id="bac18c05f9f0c7333ef5e5514fde39347f479fbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Activator&lt;/code&gt; facilitates remote object activation. A &quot;faulting&quot; remote reference calls the activator's &lt;code&gt;activate&lt;/code&gt; method to obtain a &quot;live&quot; reference to a &quot;activatable&quot; remote object. Upon receiving a request for activation, the activator looks up the activation descriptor for the activation identifier, &lt;code&gt;id&lt;/code&gt;, determines the group in which the object should be activated initiates object re-creation via the group's &lt;code&gt;ActivationInstantiator&lt;/code&gt; (via a call to the &lt;code&gt;newInstance&lt;/code&gt; method). The activator initiates the execution of activation groups as necessary. For example, if an activation group for a specific group identifier is not already executing, the activator initiates the execution of a VM for the group.</source>
          <target state="translated">&lt;code&gt;Activator&lt;/code&gt; 、リモートオブジェクトの起動を容易にします。 「障害のある」リモート参照は、アクティベーターの &lt;code&gt;activate&lt;/code&gt; メソッドを呼び出して、「アクティブ化可能な」リモートオブジェクトへの「ライブ」参照を取得します。アクティベーションの要求を受信すると、アクティベーターはアクティベーション識別子 &lt;code&gt;id&lt;/code&gt; のアクティベーション記述子を検索し、オブジェクトをアクティベートするグループを決定し、グループの &lt;code&gt;ActivationInstantiator&lt;/code&gt; を介して（ &lt;code&gt;newInstance&lt;/code&gt; メソッドの呼び出しを介して）オブジェクトの再作成を開始します。アクティベーターは、必要に応じてアクティベーショングループの実行を開始します。たとえば、特定のグループIDのアクティベーショングループがまだ実行されていない場合、アクティベーターはグループのVMの実行を開始します。</target>
        </trans-unit>
        <trans-unit id="d12dfcf933ffbb5c2ce81bf2caa66f1ab228fa02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Activator&lt;/code&gt; works closely with &lt;code&gt;ActivationSystem&lt;/code&gt;, which provides a means for registering groups and objects within those groups, and &lt;code&gt;ActivationMonitor&lt;/code&gt;, which receives information about active and inactive objects and inactive groups.</source>
          <target state="translated">&lt;code&gt;Activator&lt;/code&gt; と密接に連携して &lt;code&gt;ActivationSystem&lt;/code&gt; それらのグループ内のグループとオブジェクトを登録するための手段を提供し、そして &lt;code&gt;ActivationMonitor&lt;/code&gt; にアクティブおよび非アクティブのオブジェクトおよび非アクティブグループに関する情報を受け取り、。</target>
        </trans-unit>
        <trans-unit id="11b89453476163752f40fae582d7c0e317141129" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AdjustmentEvent&lt;/code&gt; class defines five types of adjustment event, listed here:</source>
          <target state="translated">&lt;code&gt;AdjustmentEvent&lt;/code&gt; のクラスは、ここに記載されている調整イベント、5つのタイプを定義します。</target>
        </trans-unit>
        <trans-unit id="77c9ef0e627c294d9d0956e59ce6bbbb1c929c91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AffineTransform&lt;/code&gt; associated with this op.</source>
          <target state="translated">この操作に関連付けられている &lt;code&gt;AffineTransform&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae7b7484bb6b8e85b994eb53c01929817f08df61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AffineTransform&lt;/code&gt; class represents a 2D affine transform that performs a linear mapping from 2D coordinates to other 2D coordinates that preserves the &quot;straightness&quot; and &quot;parallelness&quot; of lines.</source>
          <target state="translated">&lt;code&gt;AffineTransform&lt;/code&gt; クラスは、2Dアフィン「直進」とライン「平行性」を保持し、他の2次元座標に2次元座標から、その実行に線形マッピングする変換を表します。</target>
        </trans-unit>
        <trans-unit id="af074043aa33a9cdd8a8065a2a60108d9f48b311" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AffineTransform&lt;/code&gt; class represents a 2D affine transform that performs a linear mapping from 2D coordinates to other 2D coordinates that preserves the &quot;straightness&quot; and &quot;parallelness&quot; of lines. Affine transformations can be constructed using sequences of translations, scales, flips, rotations, and shears.</source>
          <target state="translated">&lt;code&gt;AffineTransform&lt;/code&gt; クラスは、2Dアフィン「直進」とライン「平行性」を保持し、他の2次元座標に2次元座標から、その実行に線形マッピングする変換を表します。アフィン変換は、平行移動、スケール、フリップ、回転、およびせん断のシーケンスを使用して構築できます。</target>
        </trans-unit>
        <trans-unit id="b449118f305afa855458cabeb18c4cb51488d864" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; class is used to generate a set of parameters to be used with a certain algorithm.</source>
          <target state="translated">&lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; クラスは、特定のアルゴリズムで使用するパラメータのセットを生成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="21b1b496ebb21c6a19e568343413c663744b5d29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; class is used to generate a set of parameters to be used with a certain algorithm. Parameter generators are constructed using the &lt;code&gt;getInstance&lt;/code&gt; factory methods (static methods that return instances of a given class).</source>
          <target state="translated">&lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; クラスは、特定のアルゴリズムで使用するパラメータのセットを生成するために使用されます。パラメータジェネレータは、 &lt;code&gt;getInstance&lt;/code&gt; ファクトリメソッド（特定のクラスのインスタンスを返す静的メソッド）を使用して構築されます。</target>
        </trans-unit>
        <trans-unit id="c42bd8033c27af08a1c588db4f0dd64cf3f36f51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AlphaComposite&lt;/code&gt; class defines an additional alpha value that is applied to the source alpha. This value is applied as if an implicit SRC_IN rule were first applied to the source pixel against a pixel with the indicated alpha by multiplying both the raw source alpha and the raw source colors by the alpha in the &lt;code&gt;AlphaComposite&lt;/code&gt;. This leads to the following equation for producing the alpha used in the Porter and Duff blending equation:</source>
          <target state="translated">&lt;code&gt;AlphaComposite&lt;/code&gt; クラスは、ソースアルファに適用される追加のアルファ値を定義します。この値は、 &lt;code&gt;AlphaComposite&lt;/code&gt; の生のソースアルファと生のソースカラーの両方にアルファを乗算することにより、指定されたアルファを持つピクセルに対して暗黙のSRC_INルールが最初にソースピクセルに適用されたかのように適用されます。これにより、ポーターとダフの混合方程式で使用されるアルファを生成するための次の方程式が導き出されます。</target>
        </trans-unit>
        <trans-unit id="8e918d46c98df1a3d9e3b746487ab38f146ace52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AlphaComposite&lt;/code&gt; class implements basic alpha compositing rules for combining source and destination colors to achieve blending and transparency effects with graphics and images.</source>
          <target state="translated">&lt;code&gt;AlphaComposite&lt;/code&gt; グラフィックスとイメージとのブレンドと透明効果を達成するために、ソースとデスティネーション色を組み合わせるためのルールを合成クラスが実装する基本的なアルファ。</target>
        </trans-unit>
        <trans-unit id="de67ef924fdd6b848417ed0d9ded1b91dd826f21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AlphaComposite&lt;/code&gt; class implements basic alpha compositing rules for combining source and destination colors to achieve blending and transparency effects with graphics and images. The specific rules implemented by this class are the basic set of 12 rules described in T. Porter and T. Duff, &quot;Compositing Digital Images&quot;, SIGGRAPH 84, 253-259. The rest of this documentation assumes some familiarity with the definitions and concepts outlined in that paper.</source>
          <target state="translated">&lt;code&gt;AlphaComposite&lt;/code&gt; グラフィックスとイメージとのブレンドと透明効果を達成するために、ソースとデスティネーション色を組み合わせるためのルールを合成クラスが実装する基本的なアルファ。このクラスによって実装される特定のルールは、T。PorterおよびT. Duff、「Compositing Digital Images」、SIGGRAPH 84、253-259で説明されている12のルールの基本セットです。このドキュメントの残りの部分は、そのペーパーで概説されている定義と概念にある程度精通していることを前提としています。</target>
        </trans-unit>
        <trans-unit id="7cc50dfb7754628bc00422be42d67644a04299c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Applet&lt;/code&gt; class must be the superclass of any applet that is to be embedded in a Web page or viewed by the Java Applet Viewer. The &lt;code&gt;Applet&lt;/code&gt; class provides a standard interface between applets and their environment.</source>
          <target state="translated">&lt;code&gt;Applet&lt;/code&gt; クラスは、Webページに埋め込まれているかJavaアプレットビューアで表示されるアプレットのスーパークラスでなければなりません。 &lt;code&gt;Applet&lt;/code&gt; クラスは、アプレットとその環境との間の標準インタフェースを提供します。</target>
        </trans-unit>
        <trans-unit id="3a902edebc7b4f38563beb1afba8ecdce5cc6b48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Area&lt;/code&gt; class creates an area geometry from the specified &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;Area&lt;/code&gt; クラスは、指定から領域ジオメトリを作成&lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="23b21875f411072bf5404801e4f8a1d9a057d41b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Area&lt;/code&gt; class creates an area geometry from the specified &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; object. The geometry is explicitly closed, if the &lt;code&gt;Shape&lt;/code&gt; is not already closed. The fill rule (even-odd or winding) specified by the geometry of the &lt;code&gt;Shape&lt;/code&gt; is used to determine the resulting enclosed area.</source>
          <target state="translated">&lt;code&gt;Area&lt;/code&gt; クラスは、指定から領域ジオメトリを作成&lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;オブジェクトを。 &lt;code&gt;Shape&lt;/code&gt; がまだ閉じられていない場合、ジオメトリは明示的に閉じられます。 &lt;code&gt;Shape&lt;/code&gt; のジオメトリで指定された塗りつぶしルール（偶数奇数または巻線）を使用して、結果の囲まれた領域が決定されます。</target>
        </trans-unit>
        <trans-unit id="15cfc4f1dafa8c04a1323b78e0b2f5670bfae50e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Area&lt;/code&gt; class implements the &lt;code&gt;Shape&lt;/code&gt; interface and provides full support for all of its hit-testing and path iteration facilities, but an &lt;code&gt;Area&lt;/code&gt; is more specific than a generalized path in a number of ways:</source>
          <target state="translated">&lt;code&gt;Area&lt;/code&gt; クラスが実装 &lt;code&gt;Shape&lt;/code&gt; インタフェースとそのヒットテストやパス反復施設のすべてを完全にサポートしていますが、 &lt;code&gt;Area&lt;/code&gt; いくつかの方法で一般道よりも具体的です：</target>
        </trans-unit>
        <trans-unit id="60cf335e88d209716971b2d6c6b97342cea6ef52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Array&lt;/code&gt; class provides static methods to dynamically create and access Java arrays.</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; クラスは、動的にJava配列を作成し、アクセスするためのstaticメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="6e200f02f8fff206f18ffef2f87fc1beac985865" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Array&lt;/code&gt; interface provides methods for bringing an SQL &lt;code&gt;ARRAY&lt;/code&gt; value's data to the client as either an array or a &lt;code&gt;ResultSet&lt;/code&gt; object. If the elements of the SQL &lt;code&gt;ARRAY&lt;/code&gt; are a UDT, they may be custom mapped. To create a custom mapping, a programmer must do two things:</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; インタフェースは、SQLせるための方法を提供 &lt;code&gt;ARRAY&lt;/code&gt; の配列またはいずれかとしてクライアントに値のデータ &lt;code&gt;ResultSet&lt;/code&gt; オブジェクト。SQL &lt;code&gt;ARRAY&lt;/code&gt; の要素がUDTの場合、それらはカスタムマップされる場合があります。カスタムマッピングを作成するには、プログラマーは2つのことを行う必要があります。</target>
        </trans-unit>
        <trans-unit id="e11780a48e0c2628760a60beb9af58fed7a0350b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ArrayType&lt;/code&gt; class is the</source>
          <target state="translated">&lt;code&gt;ArrayType&lt;/code&gt; クラスです</target>
        </trans-unit>
        <trans-unit id="7709bfafe1c6ecafe478bccef66bf54934827f38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AttachProvider&lt;/code&gt; that this descriptor references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc4395b5136dbdc8af1042a1b98b4cb4581b8c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; interface represents an attribute in an &lt;code&gt;Element&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Attr&lt;/code&gt; インタフェースは、内の属性を表す &lt;code&gt;Element&lt;/code&gt; オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="275c8f395f1beaba2f6f1d83bc7c14898a2596bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; interface represents an attribute in an &lt;code&gt;Element&lt;/code&gt; object. Typically the allowable values for the attribute are defined in a schema associated with the document.</source>
          <target state="translated">&lt;code&gt;Attr&lt;/code&gt; インタフェースは、内の属性を表す &lt;code&gt;Element&lt;/code&gt; オブジェクトを。通常、属性の許容値は、ドキュメントに関連付けられたスキーマで定義されます。</target>
        </trans-unit>
        <trans-unit id="abaabe6886264c20f473fa5053a5d55bc337750d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; node that was removed.</source>
          <target state="translated">&lt;code&gt;Attr&lt;/code&gt; 削除されたノード。</target>
        </trans-unit>
        <trans-unit id="5ef50051305c491e51d826eece91f5a67a7debbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; node with the specified attribute local name and namespace URI or &lt;code&gt;null&lt;/code&gt; if there is no such attribute.</source>
          <target state="translated">&lt;code&gt;Attr&lt;/code&gt; 指定された属性ローカル名と名前空間URIまたはを持つノード &lt;code&gt;null&lt;/code&gt; 該当する属性が存在しない場合。</target>
        </trans-unit>
        <trans-unit id="7652a895a29f2647e0b2dd18893f6b4dc0e428cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; node with the specified name ( &lt;code&gt;nodeName&lt;/code&gt;) or &lt;code&gt;null&lt;/code&gt; if there is no such attribute.</source>
          <target state="translated">指定された名前（ &lt;code&gt;nodeName&lt;/code&gt; ）の &lt;code&gt;Attr&lt;/code&gt; ノード。そのような属性がない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a69dfdb305ce85fbed13fda0e8e19810074205f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; value as a string, or the empty string if that attribute does not have a specified or default value.</source>
          <target state="translated">文字列としての &lt;code&gt;Attr&lt;/code&gt; 値、またはその属性に指定された値またはデフォルト値がない場合は空の文字列。</target>
        </trans-unit>
        <trans-unit id="1d3bb6cf7d846d46a56db0af192df954b4ace57d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; was just added.</source>
          <target state="translated">&lt;code&gt;Attr&lt;/code&gt; が追加されたばかりです。</target>
        </trans-unit>
        <trans-unit id="3980e98c449fdb090ee7e888258a1778ab128b82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; was just removed.</source>
          <target state="translated">&lt;code&gt;Attr&lt;/code&gt; が削除されたばかりです。</target>
        </trans-unit>
        <trans-unit id="2cc83d98a99f11a6638a57cb16b71fe7f4407a2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; was modified in place.</source>
          <target state="translated">&lt;code&gt;Attr&lt;/code&gt; はその場で変更されました。</target>
        </trans-unit>
        <trans-unit id="3b5a21b8af434583bd3c4faf9b46db3d3520fac2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AttributeSet&lt;/code&gt; interface is similar to the &lt;a href=&quot;../../../../java.base/java/util/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; interface: it provides a map of key to values, in which each key is unique and can contain no more than one value. However, the &lt;code&gt;AttributeSet&lt;/code&gt; interface is designed to specifically support the needs of the Java Print Service API. An &lt;code&gt;AttributeSet&lt;/code&gt; requires that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3aadc19c893a1efadaa932321d03e00dc3fdf32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AttributeSet&lt;/code&gt; interface is similar to the &lt;a href=&quot;../../../java/util/map&quot;&gt;Map&lt;/a&gt; interface: it provides a map of key to values, in which each key is unique and can contain no more than one value. However, the &lt;code&gt;AttributeSet&lt;/code&gt; interface is designed to specifically support the needs of the Java Print Service API. An &lt;code&gt;AttributeSet&lt;/code&gt; requires that:</source>
          <target state="translated">&lt;code&gt;AttributeSet&lt;/code&gt; インタフェースが同様である&lt;a href=&quot;../../../java/util/map&quot;&gt;マップ&lt;/a&gt;インタフェース：それは各キーは一意であり、1個以下の値を含むことが可能な、値にキーのマップを提供します。ただし、 &lt;code&gt;AttributeSet&lt;/code&gt; インターフェースは、Java Print Service APIのニーズを特にサポートするように設計されています。アン &lt;code&gt;AttributeSet&lt;/code&gt; あることが必要です。</target>
        </trans-unit>
        <trans-unit id="ec3ca9a461283de7a024fe4370f4c8ea8d93045c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioClip&lt;/code&gt; interface is a simple abstraction for playing a sound clip. Multiple &lt;code&gt;AudioClip&lt;/code&gt; items can be playing at the same time, and the resulting sound is mixed together to produce a composite.</source>
          <target state="translated">&lt;code&gt;AudioClip&lt;/code&gt; インタフェースは、サウンドクリップを再生するためのシンプルな抽象化です。複数の &lt;code&gt;AudioClip&lt;/code&gt; アイテムを同時に再生し、結果のサウンドをミックスしてコンポジットを作成できます。</target>
        </trans-unit>
        <trans-unit id="8af784200eedb9bf3ff696e5dfcb898cc72bbe54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioFormat&lt;/code&gt; class accommodates a number of common sound-file encoding techniques, including pulse-code modulation (PCM), mu-law encoding, and a-law encoding. These encoding techniques are predefined, but service providers can create new encoding types. The encoding that a specific format uses is named by its &lt;code&gt;encoding&lt;/code&gt; field.</source>
          <target state="translated">&lt;code&gt;AudioFormat&lt;/code&gt; クラスは、パルス符号変調（PCM）、&amp;mu;-lawエンコーディング、および法則符号化を含む一般的な音声ファイルの符号化技術の数を収容します。これらのエンコーディング手法は事前定義されていますが、サービスプロバイダーは新しいエンコーディングタイプを作成できます。特定の形式が使用 &lt;code&gt;encoding&lt;/code&gt; は、そのエンコーディングフィールドによって名前が付けられます。</target>
        </trans-unit>
        <trans-unit id="d7fd077369e0845cac37ae324fe142bf62bb88be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioPermission&lt;/code&gt; class represents access rights to the audio system resources.</source>
          <target state="translated">&lt;code&gt;AudioPermission&lt;/code&gt; クラスは、オーディオシステムリソースへのアクセス権を表します。</target>
        </trans-unit>
        <trans-unit id="663f73601babca7fe9a3f57db471ad6b7380920c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioPermission&lt;/code&gt; class represents access rights to the audio system resources. An &lt;code&gt;AudioPermission&lt;/code&gt; contains a target name but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">&lt;code&gt;AudioPermission&lt;/code&gt; クラスは、オーディオシステムリソースへのアクセス権を表します。アン &lt;code&gt;AudioPermission&lt;/code&gt; にはターゲット名が、アクションリストは持ちません。名前付きの権限があるか、ないかのどちらかです。</target>
        </trans-unit>
        <trans-unit id="64530a02f14561a54d873e43c58fb4f8735319fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioSystem&lt;/code&gt; class acts as the entry point to the sampled-audio system resources.</source>
          <target state="translated">&lt;code&gt;AudioSystem&lt;/code&gt; クラスは、サンプリングされたオーディオシステムリソースへのエントリポイントとして機能します。</target>
        </trans-unit>
        <trans-unit id="8d0aeed0a30ef032e71643f03ade7a22188d197b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioSystem&lt;/code&gt; class acts as the entry point to the sampled-audio system resources. This class lets you query and access the mixers that are installed on the system. &lt;code&gt;AudioSystem&lt;/code&gt; includes a number of methods for converting audio data between different formats, and for translating between audio files and streams. It also provides a method for obtaining a &lt;a href=&quot;line&quot;&gt;&lt;code&gt;Line&lt;/code&gt;&lt;/a&gt; directly from the &lt;code&gt;AudioSystem&lt;/code&gt; without dealing explicitly with mixers.</source>
          <target state="translated">The &lt;code&gt;AudioSystem&lt;/code&gt; class acts as the entry point to the sampled-audio system resources. This class lets you query and access the mixers that are installed on the system. &lt;code&gt;AudioSystem&lt;/code&gt; includes a number of methods for converting audio data between different formats, and for translating between audio files and streams. It also provides a method for obtaining a &lt;a href=&quot;line&quot;&gt; &lt;code&gt;Line&lt;/code&gt; &lt;/a&gt; directly from the &lt;code&gt;AudioSystem&lt;/code&gt; without dealing explicitly with mixers.</target>
        </trans-unit>
        <trans-unit id="a212ac4197ad27334cc250327922918495c0a587" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioSystem&lt;/code&gt; class acts as the entry point to the sampled-audio system resources. This class lets you query and access the mixers that are installed on the system. &lt;code&gt;AudioSystem&lt;/code&gt; includes a number of methods for converting audio data between different formats, and for translating between audio files and streams. It also provides a method for obtaining a &lt;code&gt;&lt;a href=&quot;line&quot;&gt;&lt;code&gt;Line&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; directly from the &lt;code&gt;AudioSystem&lt;/code&gt; without dealing explicitly with mixers.</source>
          <target state="translated">&lt;code&gt;AudioSystem&lt;/code&gt; クラスは、サンプリングされたオーディオシステムリソースへのエントリポイントとして機能します。このクラスを使用すると、システムにインストールされているミキサーを照会してアクセスできます。 &lt;code&gt;AudioSystem&lt;/code&gt; には、オーディオデータを異なるフォーマット間で変換したり、オーディオファイルとストリーム間で変換したりするための多くのメソッドが含まれています。また、ミキサーを明示的に &lt;code&gt;AudioSystem&lt;/code&gt; せずにAudioSystemから直接 &lt;code&gt;&lt;a href=&quot;line&quot;&gt;&lt;code&gt;Line&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; を取得する方法も提供します。</target>
        </trans-unit>
        <trans-unit id="7af5ce7a31e2d4a27612651aee35e3f53a096d39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioSystem&lt;/code&gt; class includes many methods that manipulate &lt;code&gt;AudioInputStream&lt;/code&gt; objects. For example, the methods let you:</source>
          <target state="translated">&lt;code&gt;AudioSystem&lt;/code&gt; クラスには、操作する多くの方法が含ま &lt;code&gt;AudioInputStream&lt;/code&gt; オブジェクトを。たとえば、メソッドでは次のことができます。</target>
        </trans-unit>
        <trans-unit id="33fe5e270dcc0cd446b3dbafe785b92d757d02dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Base&lt;/code&gt; property determines the URL against which relative URLs are resolved. By default, this will be the &lt;code&gt;Document.StreamDescriptionProperty&lt;/code&gt; if the value of the property is a URL. If a &amp;lt;BASE&amp;gt; tag is encountered, the base will become the URL specified by that tag. Because the base URL is a property, it can of course be set directly.</source>
          <target state="translated">The &lt;code&gt;Base&lt;/code&gt; property determines the URL against which relative URLs are resolved. By default, this will be the &lt;code&gt;Document.StreamDescriptionProperty&lt;/code&gt; if the value of the property is a URL. If a &amp;lt;BASE&amp;gt; tag is encountered, the base will become the URL specified by that tag. Because the base URL is a property, it can of course be set directly.</target>
        </trans-unit>
        <trans-unit id="f13fbb136b39778f02f7b89def3adfb0d84135ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the core functionality for all &lt;code&gt;RowSet&lt;/code&gt; implementations, and all standard implementations &lt;b&gt;may&lt;/b&gt; use this class in combination with one or more &lt;code&gt;RowSet&lt;/code&gt; interfaces in order to provide a standard vendor-specific implementation. To clarify, all implementations must implement at least one of the &lt;code&gt;RowSet&lt;/code&gt; interfaces (&lt;code&gt;JdbcRowSet&lt;/code&gt;, &lt;code&gt;CachedRowSet&lt;/code&gt;, &lt;code&gt;JoinRowSet&lt;/code&gt;, &lt;code&gt;FilteredRowSet&lt;/code&gt;, or &lt;code&gt;WebRowSet&lt;/code&gt;). This means that any implementation that extends the &lt;code&gt;BaseRowSet&lt;/code&gt; class must also implement one of the &lt;code&gt;RowSet&lt;/code&gt; interfaces.</source>
          <target state="translated">The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the core functionality for all &lt;code&gt;RowSet&lt;/code&gt; implementations, and all standard implementations &lt;b&gt;may&lt;/b&gt; use this class in combination with one or more &lt;code&gt;RowSet&lt;/code&gt; interfaces in order to provide a standard vendor-specific implementation. To clarify, all implementations must implement at least one of the &lt;code&gt;RowSet&lt;/code&gt; interfaces ( &lt;code&gt;JdbcRowSet&lt;/code&gt; , &lt;code&gt;CachedRowSet&lt;/code&gt; , &lt;code&gt;JoinRowSet&lt;/code&gt; , &lt;code&gt;FilteredRowSet&lt;/code&gt; , or &lt;code&gt;WebRowSet&lt;/code&gt; ). This means that any implementation that extends the &lt;code&gt;BaseRowSet&lt;/code&gt; class must also implement one of the &lt;code&gt;RowSet&lt;/code&gt; interfaces.</target>
        </trans-unit>
        <trans-unit id="08cddb31c69a10389f6bfead1831d310fe8b6e1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the event notification mechanism for rowsets. It contains the field &lt;code&gt;listeners&lt;/code&gt;, methods for adding and removing listeners, and methods for notifying listeners of changes.</source>
          <target state="translated">The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the event notification mechanism for rowsets. It contains the field &lt;code&gt;listeners&lt;/code&gt; , methods for adding and removing listeners, and methods for notifying listeners of changes.</target>
        </trans-unit>
        <trans-unit id="0f7e37f97a3b4be59f83e1bdba10267695408eda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the following:</source>
          <target state="translated">The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the following:</target>
        </trans-unit>
        <trans-unit id="a506dbdb25a76d2e4fd35080181c055d1c435da5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BaseRowSet&lt;/code&gt; method used for the notification indicates the type of event that has occurred. For example, the method &lt;code&gt;notifyRowChanged&lt;/code&gt; indicates that a row has been updated, deleted, or inserted. Each of the notification methods creates a &lt;code&gt;RowSetEvent&lt;/code&gt; object, which is supplied to the listener in order to identify the &lt;code&gt;RowSet&lt;/code&gt; object on which the event occurred. What the listener does with this information, which may be nothing, depends on how it was implemented.</source>
          <target state="translated">The &lt;code&gt;BaseRowSet&lt;/code&gt; method used for the notification indicates the type of event that has occurred. For example, the method &lt;code&gt;notifyRowChanged&lt;/code&gt; indicates that a row has been updated, deleted, or inserted. Each of the notification methods creates a &lt;code&gt;RowSetEvent&lt;/code&gt; object, which is supplied to the listener in order to identify the &lt;code&gt;RowSet&lt;/code&gt; object on which the event occurred. What the listener does with this information, which may be nothing, depends on how it was implemented.</target>
        </trans-unit>
        <trans-unit id="79cdc8d9c9f62ce1ec249481a0aed83f0d424285" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BasicAttribute&lt;/code&gt; class by default uses &lt;code&gt;Object.equals()&lt;/code&gt; to determine equality of attribute values when testing for equality or when searching for values, &lt;em&gt;except&lt;/em&gt; when the value is an array. For an array, each element of the array is checked using &lt;code&gt;Object.equals()&lt;/code&gt;. Subclasses of &lt;code&gt;BasicAttribute&lt;/code&gt; can make use of schema information when doing similar equality checks by overriding methods in which such use of schema is meaningful. Similarly, the &lt;code&gt;BasicAttribute&lt;/code&gt; class by default returns the values passed to its constructor and/or manipulated using the add/remove methods. Subclasses of &lt;code&gt;BasicAttribute&lt;/code&gt; can override &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;getAll()&lt;/code&gt; to get the values dynamically from the directory (or implement the &lt;code&gt;Attribute&lt;/code&gt; interface directly instead of subclassing &lt;code&gt;BasicAttribute&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;BasicAttribute&lt;/code&gt; には、デフォルトでクラスが使用 &lt;code&gt;Object.equals()&lt;/code&gt; 、値を検索するときに等しいかどうかをテストする場合、または属性値の等価性を決定する&lt;em&gt;以外&lt;/em&gt;の値が配列である場合。配列の場合、配列の各要素は &lt;code&gt;Object.equals()&lt;/code&gt; を使用してチェックされます。 &lt;code&gt;BasicAttribute&lt;/code&gt; のサブクラスは、スキーマの使用が意味を持つメソッドをオーバーライドすることにより、同様の等価性チェックを行うときにスキーマ情報を利用できます。同様に、 &lt;code&gt;BasicAttribute&lt;/code&gt; クラスはデフォルトで、コンストラクターに渡された値、またはadd / removeメソッドを使用して操作された値を返します。サブクラス &lt;code&gt;BasicAttribute&lt;/code&gt; には、上書きすることができます &lt;code&gt;get()&lt;/code&gt; し、 &lt;code&gt;getAll()&lt;/code&gt; を使用して、ディレクトリから動的に値を取得します（または &lt;code&gt;BasicAttribute&lt;/code&gt; をサブクラス化する代わりに、直接 &lt;code&gt;Attribute&lt;/code&gt; インターフェースを実装します）。</target>
        </trans-unit>
        <trans-unit id="ccfded134fb937873b65607b04903f6ace745c35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BasicStroke&lt;/code&gt; class defines a basic set of rendering attributes for the outlines of graphics primitives, which are rendered with a &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; object that has its Stroke attribute set to this &lt;code&gt;BasicStroke&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;BasicStroke&lt;/code&gt; class defines a basic set of rendering attributes for the outlines of graphics primitives, which are rendered with a &lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt; object that has its Stroke attribute set to this &lt;code&gt;BasicStroke&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa712ae35d56ccbbc492dc39a322352076b8983d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BasicStroke&lt;/code&gt; class defines a basic set of rendering attributes for the outlines of graphics primitives, which are rendered with a &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; object that has its Stroke attribute set to this &lt;code&gt;BasicStroke&lt;/code&gt;. The rendering attributes defined by &lt;code&gt;BasicStroke&lt;/code&gt; describe the shape of the mark made by a pen drawn along the outline of a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; and the decorations applied at the ends and joins of path segments of the &lt;code&gt;Shape&lt;/code&gt;. These rendering attributes include:</source>
          <target state="translated">The &lt;code&gt;BasicStroke&lt;/code&gt; class defines a basic set of rendering attributes for the outlines of graphics primitives, which are rendered with a &lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt; object that has its Stroke attribute set to this &lt;code&gt;BasicStroke&lt;/code&gt; . The rendering attributes defined by &lt;code&gt;BasicStroke&lt;/code&gt; describe the shape of the mark made by a pen drawn along the outline of a &lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; and the decorations applied at the ends and joins of path segments of the &lt;code&gt;Shape&lt;/code&gt; . These rendering attributes include:</target>
        </trans-unit>
        <trans-unit id="1e0315176a90eb1a609d30f4d425382cc748e5d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BeanContext&lt;/code&gt; from which this event was propagated</source>
          <target state="translated">&lt;code&gt;BeanContext&lt;/code&gt; このイベントが伝播されました</target>
        </trans-unit>
        <trans-unit id="fe4221cd8e13142dfdb7397e431e92d56077adb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BeanContext&lt;/code&gt; in which this &lt;code&gt;BeanContextChild&lt;/code&gt; is nested.</source>
          <target state="translated">&lt;code&gt;BeanContext&lt;/code&gt; このここで &lt;code&gt;BeanContextChild&lt;/code&gt; 入れ子になっています。</target>
        </trans-unit>
        <trans-unit id="00c979e876274b193545569222391a96daaa9dd0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigDecimal&lt;/code&gt; class gives its user complete control over rounding behavior. If no rounding mode is specified and the exact result cannot be represented, an exception is thrown; otherwise, calculations can be carried out to a chosen precision and rounding mode by supplying an appropriate &lt;a href=&quot;mathcontext&quot;&gt;&lt;code&gt;MathContext&lt;/code&gt;&lt;/a&gt; object to the operation. In either case, eight &lt;em&gt;rounding modes&lt;/em&gt; are provided for the control of rounding. Using the integer fields in this class (such as &lt;a href=&quot;#ROUND_HALF_UP&quot;&gt;&lt;code&gt;ROUND_HALF_UP&lt;/code&gt;&lt;/a&gt;) to represent rounding mode is deprecated; the enumeration values of the &lt;code&gt;RoundingMode&lt;/code&gt;&lt;code&gt;enum&lt;/code&gt;, (such as &lt;a href=&quot;roundingmode#HALF_UP&quot;&gt;&lt;code&gt;RoundingMode.HALF_UP&lt;/code&gt;&lt;/a&gt;) should be used instead.</source>
          <target state="translated">The &lt;code&gt;BigDecimal&lt;/code&gt; class gives its user complete control over rounding behavior. If no rounding mode is specified and the exact result cannot be represented, an exception is thrown; otherwise, calculations can be carried out to a chosen precision and rounding mode by supplying an appropriate &lt;a href=&quot;mathcontext&quot;&gt; &lt;code&gt;MathContext&lt;/code&gt; &lt;/a&gt; object to the operation. In either case, eight &lt;em&gt;rounding modes&lt;/em&gt; are provided for the control of rounding. Using the integer fields in this class (such as &lt;a href=&quot;#ROUND_HALF_UP&quot;&gt; &lt;code&gt;ROUND_HALF_UP&lt;/code&gt; &lt;/a&gt;) to represent rounding mode is deprecated; the enumeration values of the &lt;code&gt;RoundingMode&lt;/code&gt; &lt;code&gt;enum&lt;/code&gt; , (such as &lt;a href=&quot;roundingmode#HALF_UP&quot;&gt; &lt;code&gt;RoundingMode.HALF_UP&lt;/code&gt; &lt;/a&gt;) should be used instead.</target>
        </trans-unit>
        <trans-unit id="7971f5d644f18176b75055fa2a5ace4dd309fa2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigDecimal&lt;/code&gt; class gives its user complete control over rounding behavior. If no rounding mode is specified and the exact result cannot be represented, an exception is thrown; otherwise, calculations can be carried out to a chosen precision and rounding mode by supplying an appropriate &lt;a href=&quot;mathcontext&quot;&gt;&lt;code&gt;MathContext&lt;/code&gt;&lt;/a&gt; object to the operation. In either case, eight &lt;em&gt;rounding modes&lt;/em&gt; are provided for the control of rounding. Using the integer fields in this class (such as &lt;a href=&quot;bigdecimal#ROUND_HALF_UP&quot;&gt;&lt;code&gt;ROUND_HALF_UP&lt;/code&gt;&lt;/a&gt;) to represent rounding mode is largely obsolete; the enumeration values of the &lt;code&gt;RoundingMode&lt;/code&gt;&lt;code&gt;enum&lt;/code&gt;, (such as &lt;a href=&quot;roundingmode#HALF_UP&quot;&gt;&lt;code&gt;RoundingMode.HALF_UP&lt;/code&gt;&lt;/a&gt;) should be used instead.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; クラスは、行動を丸め以上のユーザーを完全に制御することができます。丸めモードが指定されておらず、正確な結果を表現できない場合は、例外がスローされます。それ以外の場合は、適切な&lt;a href=&quot;mathcontext&quot;&gt; &lt;code&gt;MathContext&lt;/code&gt; &lt;/a&gt;オブジェクトを操作に提供することにより、選択した精度と丸めモードで計算を実行できます。どちらの場合も、&lt;em&gt;丸めを&lt;/em&gt;制御するために8つの&lt;em&gt;丸めモード&lt;/em&gt;が用意されています。このクラスの整数フィールド（&lt;a href=&quot;bigdecimal#ROUND_HALF_UP&quot;&gt; &lt;code&gt;ROUND_HALF_UP&lt;/code&gt; &lt;/a&gt;など）を使用して丸めモードを表すことは、ほとんど使用されていません。代わりに、 &lt;code&gt;RoundingMode&lt;/code&gt; &lt;code&gt;enum&lt;/code&gt; の列挙値（&lt;a href=&quot;roundingmode#HALF_UP&quot;&gt; &lt;code&gt;RoundingMode.HALF_UP&lt;/code&gt; &lt;/a&gt;など）を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="0f7131e752130ba71f1457ea575b0a9007dd1071" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigDecimal&lt;/code&gt; class provides operations for arithmetic, scale manipulation, rounding, comparison, hashing, and format conversion. The &lt;a href=&quot;#toString()&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method provides a canonical representation of a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;BigDecimal&lt;/code&gt; class provides operations for arithmetic, scale manipulation, rounding, comparison, hashing, and format conversion. The &lt;a href=&quot;#toString()&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; method provides a canonical representation of a &lt;code&gt;BigDecimal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fc7942056b3dd79609c5265cf98ecc9a0e3f371" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigDecimal&lt;/code&gt; class provides operations for arithmetic, scale manipulation, rounding, comparison, hashing, and format conversion. The &lt;a href=&quot;bigdecimal#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method provides a canonical representation of a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; クラスは、算術、スケール操作、丸め、比較、ハッシング、およびフォーマット変換のための操作を提供します。&lt;a href=&quot;bigdecimal#toString--&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt;メソッドは、正規表現の提供 &lt;code&gt;BigDecimal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df5a7760f638121c128fa1a36ad30ea0b851b272" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Binding&lt;/code&gt; class is actually a subclass of &lt;code&gt;NameClassPair&lt;/code&gt;, which consists simply of the object's name and the object's class name. The &lt;code&gt;NameClassPair&lt;/code&gt; is useful when you only want information about the object's class and do not want to pay the extra cost of getting the object.</source>
          <target state="translated">&lt;code&gt;Binding&lt;/code&gt; クラスは、実際のサブクラスである &lt;code&gt;NameClassPair&lt;/code&gt; に単にオブジェクトの名前とオブジェクトのクラス名で構成され、。 &lt;code&gt;NameClassPair&lt;/code&gt; には、あなただけのオブジェクトのクラスについての情報を必要とオブジェクトを得るための余分なコストを支払うことをしたくない場合に便利です。</target>
        </trans-unit>
        <trans-unit id="0103dabbd8fe15655d49de0baddfafb3b9137bae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Binding&lt;/code&gt; class represents a name-to-object binding. It is a tuple containing the name of the bound object, the name of the object's class, and the object itself.</source>
          <target state="translated">&lt;code&gt;Binding&lt;/code&gt; クラスは、名前からオブジェクトへのバインディングを表します。これは、バインドされたオブジェクトの名前、オブジェクトのクラスの名前、およびオブジェクト自体を含むタプルです。</target>
        </trans-unit>
        <trans-unit id="b8bb72f6e0722cb808bbfd786520a48b7182c75e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Bindings&lt;/code&gt; instances that are returned must be identical to those returned by the &lt;code&gt;getBindings&lt;/code&gt; method of &lt;code&gt;ScriptContext&lt;/code&gt; called with corresponding arguments on the default &lt;code&gt;ScriptContext&lt;/code&gt; of the &lt;code&gt;ScriptEngine&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Bindings&lt;/code&gt; 返されるインスタンスは、によって返されたものと同一である必要があり &lt;code&gt;getBindings&lt;/code&gt; の方法 &lt;code&gt;ScriptContext&lt;/code&gt; デフォルトに対応する引数で呼び出さ &lt;code&gt;ScriptContext&lt;/code&gt; の &lt;code&gt;ScriptEngine&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05940c6482bc9cee8cceaf4e697300ed0675d5d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Bindings&lt;/code&gt; of key/value pairs, referred to as the &quot;Global Scope&quot; maintained by the manager is available to all instances of &lt;code&gt;ScriptEngine&lt;/code&gt; created by the &lt;code&gt;ScriptEngineManager&lt;/code&gt;. The values in the &lt;code&gt;Bindings&lt;/code&gt; are generally exposed in all scripts.</source>
          <target state="translated">マネージャーによって維持される「グローバルスコープ」と呼ばれるキーと値のペアの &lt;code&gt;Bindings&lt;/code&gt; は、 &lt;code&gt;ScriptEngine&lt;/code&gt; Managerによって作成された &lt;code&gt;ScriptEngineManager&lt;/code&gt; すべてのインスタンスで使用できます。 &lt;code&gt;Bindings&lt;/code&gt; の値は通常、すべてのスクリプトで公開されます。</target>
        </trans-unit>
        <trans-unit id="c8872d0f95cad30df2b43f31fb08168cf4e82b4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Bindings&lt;/code&gt; with the specified scope.</source>
          <target state="translated">&lt;code&gt;Bindings&lt;/code&gt; 指定されたスコープを持ちます。</target>
        </trans-unit>
        <trans-unit id="8a769e9c66ca1b7bd668f50b4ffd3a1fb7830318" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BodyHandler&lt;/code&gt; interface allows inspection of the response code and headers, before the actual response body is received, and is responsible for creating the response &lt;a href=&quot;httpresponse.bodysubscriber&quot;&gt;&lt;code&gt;BodySubscriber&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;BodySubscriber&lt;/code&gt; consumes the actual response body bytes and, typically, converts them into a higher-level Java type.</source>
          <target state="translated">The &lt;code&gt;BodyHandler&lt;/code&gt; interface allows inspection of the response code and headers, before the actual response body is received, and is responsible for creating the response &lt;a href=&quot;httpresponse.bodysubscriber&quot;&gt; &lt;code&gt;BodySubscriber&lt;/code&gt; &lt;/a&gt;. The &lt;code&gt;BodySubscriber&lt;/code&gt; consumes the actual response body bytes and, typically, converts them into a higher-level Java type.</target>
        </trans-unit>
        <trans-unit id="742f182e597aa7b5d077c9f7e1aa5aaa704913b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BodyPublisher&lt;/code&gt; interface extends &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.publisher&quot;&gt;&lt;code&gt;Flow.Publisher&amp;lt;ByteBuffer&amp;gt;&lt;/code&gt;&lt;/a&gt;, which means that a &lt;code&gt;BodyPublisher&lt;/code&gt; acts as a publisher of &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer&quot;&gt;byte buffers&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;BodyPublisher&lt;/code&gt; interface extends &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.publisher&quot;&gt; &lt;code&gt;Flow.Publisher&amp;lt;ByteBuffer&amp;gt;&lt;/code&gt; &lt;/a&gt;, which means that a &lt;code&gt;BodyPublisher&lt;/code&gt; acts as a publisher of &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer&quot;&gt;byte buffers&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="aaef0cfb8ca49e559fec4e3d4a0b53c759d2a804" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Book&lt;/code&gt; class provides a representation of a document in which pages may have different page formats and page painters.</source>
          <target state="translated">The &lt;code&gt;Book&lt;/code&gt; class provides a representation of a document in which pages may have different page formats and page painters.</target>
        </trans-unit>
        <trans-unit id="50a07040901ceb1a146df0db4c1a1a7103eb3760" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Book&lt;/code&gt; class provides a representation of a document in which pages may have different page formats and page painters. This class uses the &lt;a href=&quot;pageable&quot;&gt;&lt;code&gt;Pageable&lt;/code&gt;&lt;/a&gt; interface to interact with a &lt;a href=&quot;printerjob&quot;&gt;&lt;code&gt;PrinterJob&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;Book&lt;/code&gt; class provides a representation of a document in which pages may have different page formats and page painters. This class uses the &lt;a href=&quot;pageable&quot;&gt; &lt;code&gt;Pageable&lt;/code&gt; &lt;/a&gt; interface to interact with a &lt;a href=&quot;printerjob&quot;&gt; &lt;code&gt;PrinterJob&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2d60a6b49fd7f6573e55ea030a9ceb3013e12f74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Boolean&lt;/code&gt; object corresponding to the primitive value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; プリミティブ値に対応するオブジェクト &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa5f6e88af022d56af88b562fb37e5a9055bbd43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Boolean&lt;/code&gt; object corresponding to the primitive value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; プリミティブな値に対応するオブジェクト &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea791e8f10fa9a037a59caa97302b3cd888b807e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BoundedRangeModel&lt;/code&gt; that holds the progress bar's data handles any issues that may arise from improperly setting the minimum, initial, and maximum values on the progress bar. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</source>
          <target state="translated">The &lt;code&gt;BoundedRangeModel&lt;/code&gt; that holds the progress bar's data handles any issues that may arise from improperly setting the minimum, initial, and maximum values on the progress bar. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</target>
        </trans-unit>
        <trans-unit id="2d7d426311b532ee1c5da031500efbfbb7191a7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BoundedRangeModel&lt;/code&gt; that holds the slider's data handles any issues that may arise from improperly setting the minimum and maximum values on the slider. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</source>
          <target state="translated">The &lt;code&gt;BoundedRangeModel&lt;/code&gt; that holds the slider's data handles any issues that may arise from improperly setting the minimum and maximum values on the slider. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</target>
        </trans-unit>
        <trans-unit id="1aafd4fda765db5560306e64069683846134ea1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BoundedRangeModel&lt;/code&gt; that holds the slider's data handles any issues that may arise from improperly setting the minimum, initial, and maximum values on the slider. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</source>
          <target state="translated">The &lt;code&gt;BoundedRangeModel&lt;/code&gt; that holds the slider's data handles any issues that may arise from improperly setting the minimum, initial, and maximum values on the slider. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</target>
        </trans-unit>
        <trans-unit id="3fa35874db63a06b37997dac65b42981a90d37a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Box&lt;/code&gt; class can create several kinds of invisible components that affect layout: glue, struts, and rigid areas. If all the components your &lt;code&gt;Box&lt;/code&gt; contains have a fixed size, you might want to use a glue component (returned by &lt;code&gt;createGlue&lt;/code&gt;) to control the components' positions. If you need a fixed amount of space between two components, try using a strut (&lt;code&gt;createHorizontalStrut&lt;/code&gt; or &lt;code&gt;createVerticalStrut&lt;/code&gt;). If you need an invisible component that always takes up the same amount of space, get it by invoking &lt;code&gt;createRigidArea&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;Box&lt;/code&gt; class can create several kinds of invisible components that affect layout: glue, struts, and rigid areas. If all the components your &lt;code&gt;Box&lt;/code&gt; contains have a fixed size, you might want to use a glue component (returned by &lt;code&gt;createGlue&lt;/code&gt; ) to control the components' positions. If you need a fixed amount of space between two components, try using a strut ( &lt;code&gt;createHorizontalStrut&lt;/code&gt; or &lt;code&gt;createVerticalStrut&lt;/code&gt; ). If you need an invisible component that always takes up the same amount of space, get it by invoking &lt;code&gt;createRigidArea&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e5bd3e90c98cafc96c3bffb7cdb5902ec05efc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BreakIterator&lt;/code&gt; class implements methods for finding the location of boundaries in text.</source>
          <target state="translated">&lt;code&gt;BreakIterator&lt;/code&gt; テキストにおける境界の位置を見つけるためのクラスが実装する方法。</target>
        </trans-unit>
        <trans-unit id="da13029d818efd6f3b22a9f5835a453fd292a681" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BreakIterator&lt;/code&gt; class implements methods for finding the location of boundaries in text. Instances of &lt;code&gt;BreakIterator&lt;/code&gt; maintain a current position and scan over text returning the index of characters where boundaries occur. Internally, &lt;code&gt;BreakIterator&lt;/code&gt; scans text using a &lt;code&gt;CharacterIterator&lt;/code&gt;, and is thus able to scan text held by any object implementing that protocol. A &lt;code&gt;StringCharacterIterator&lt;/code&gt; is used to scan &lt;code&gt;String&lt;/code&gt; objects passed to &lt;code&gt;setText&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BreakIterator&lt;/code&gt; テキストにおける境界の位置を見つけるためのクラスが実装する方法。 &lt;code&gt;BreakIterator&lt;/code&gt; のインスタンスは現在の位置を維持し、境界が発生する文字のインデックスを返すテキストをスキャンします。内部的には、 &lt;code&gt;BreakIterator&lt;/code&gt; は &lt;code&gt;CharacterIterator&lt;/code&gt; を使用してテキストをスキャンするため、そのプロトコルを実装するオブジェクトが保持するテキストをスキャンできます。 A &lt;code&gt;StringCharacterIterator&lt;/code&gt; スキャンするために使用される &lt;code&gt;String&lt;/code&gt; に渡されたオブジェクト &lt;code&gt;setText&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8175672c5ab8c55357d73bfb557350df91b702a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BreakIterator&lt;/code&gt; instances returned by the factory methods of this class are intended for use with natural languages only, not for programming language text. It is however possible to define subclasses that tokenize a programming language.</source>
          <target state="translated">&lt;code&gt;BreakIterator&lt;/code&gt; のこのクラスのファクトリメソッドによって返されるインスタンスだけではなく、言語テキストをプログラムするための自然言語での使用を目的としています。ただし、プログラミング言語をトークン化するサブクラスを定義することは可能です。</target>
        </trans-unit>
        <trans-unit id="d9270e411d3022285e3f9a3af383e96f373b9f9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferStrategy&lt;/code&gt; class represents the mechanism with which to organize complex memory on a particular &lt;code&gt;Canvas&lt;/code&gt; or &lt;code&gt;Window&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;BufferStrategy&lt;/code&gt; class represents the mechanism with which to organize complex memory on a particular &lt;code&gt;Canvas&lt;/code&gt; or &lt;code&gt;Window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51500b7c5def900ce9b750cca1c161e61c7a050b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferStrategy&lt;/code&gt; class represents the mechanism with which to organize complex memory on a particular &lt;code&gt;Canvas&lt;/code&gt; or &lt;code&gt;Window&lt;/code&gt;. Hardware and software limitations determine whether and how a particular buffer strategy can be implemented. These limitations are detectable through the capabilities of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; used when creating the &lt;code&gt;Canvas&lt;/code&gt; or &lt;code&gt;Window&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;BufferStrategy&lt;/code&gt; class represents the mechanism with which to organize complex memory on a particular &lt;code&gt;Canvas&lt;/code&gt; or &lt;code&gt;Window&lt;/code&gt; . Hardware and software limitations determine whether and how a particular buffer strategy can be implemented. These limitations are detectable through the capabilities of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; used when creating the &lt;code&gt;Canvas&lt;/code&gt; or &lt;code&gt;Window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1171918f57a224f2f1397f10d042cd09f26bc469" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferedImage&lt;/code&gt; subclass describes an &lt;a href=&quot;../image&quot;&gt;&lt;code&gt;Image&lt;/code&gt;&lt;/a&gt; with an accessible buffer of image data.</source>
          <target state="translated">The &lt;code&gt;BufferedImage&lt;/code&gt; subclass describes an &lt;a href=&quot;../image&quot;&gt; &lt;code&gt;Image&lt;/code&gt; &lt;/a&gt; with an accessible buffer of image data.</target>
        </trans-unit>
        <trans-unit id="78ca11756050cfcc5470b4ddce6549ee1d9d015f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferedImage&lt;/code&gt; subclass describes an &lt;a href=&quot;../image&quot;&gt;&lt;code&gt;Image&lt;/code&gt;&lt;/a&gt; with an accessible buffer of image data. A &lt;code&gt;BufferedImage&lt;/code&gt; is comprised of a &lt;a href=&quot;colormodel&quot;&gt;&lt;code&gt;ColorModel&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;raster&quot;&gt;&lt;code&gt;Raster&lt;/code&gt;&lt;/a&gt; of image data. The number and types of bands in the &lt;a href=&quot;samplemodel&quot;&gt;&lt;code&gt;SampleModel&lt;/code&gt;&lt;/a&gt; of the &lt;code&gt;Raster&lt;/code&gt; must match the number and types required by the &lt;code&gt;ColorModel&lt;/code&gt; to represent its color and alpha components. All &lt;code&gt;BufferedImage&lt;/code&gt; objects have an upper left corner coordinate of (0, 0). Any &lt;code&gt;Raster&lt;/code&gt; used to construct a &lt;code&gt;BufferedImage&lt;/code&gt; must therefore have minX=0 and minY=0.</source>
          <target state="translated">The &lt;code&gt;BufferedImage&lt;/code&gt; subclass describes an &lt;a href=&quot;../image&quot;&gt; &lt;code&gt;Image&lt;/code&gt; &lt;/a&gt; with an accessible buffer of image data. A &lt;code&gt;BufferedImage&lt;/code&gt; is comprised of a &lt;a href=&quot;colormodel&quot;&gt; &lt;code&gt;ColorModel&lt;/code&gt; &lt;/a&gt; and a &lt;a href=&quot;raster&quot;&gt; &lt;code&gt;Raster&lt;/code&gt; &lt;/a&gt; of image data. The number and types of bands in the &lt;a href=&quot;samplemodel&quot;&gt; &lt;code&gt;SampleModel&lt;/code&gt; &lt;/a&gt; of the &lt;code&gt;Raster&lt;/code&gt; must match the number and types required by the &lt;code&gt;ColorModel&lt;/code&gt; to represent its color and alpha components. All &lt;code&gt;BufferedImage&lt;/code&gt; objects have an upper left corner coordinate of (0, 0). Any &lt;code&gt;Raster&lt;/code&gt; used to construct a &lt;code&gt;BufferedImage&lt;/code&gt; must therefore have minX=0 and minY=0.</target>
        </trans-unit>
        <trans-unit id="57042ad4cff84a1b91359ce1289c5881d0a64bca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferedImageFilter&lt;/code&gt; class subclasses an &lt;code&gt;ImageFilter&lt;/code&gt; to provide a simple means of using a single-source/single-destination image operator (&lt;a href=&quot;bufferedimageop&quot;&gt;&lt;code&gt;BufferedImageOp&lt;/code&gt;&lt;/a&gt;) to filter a &lt;code&gt;BufferedImage&lt;/code&gt; in the Image Producer/Consumer/Observer paradigm.</source>
          <target state="translated">The &lt;code&gt;BufferedImageFilter&lt;/code&gt; class subclasses an &lt;code&gt;ImageFilter&lt;/code&gt; to provide a simple means of using a single-source/single-destination image operator (&lt;a href=&quot;bufferedimageop&quot;&gt; &lt;code&gt;BufferedImageOp&lt;/code&gt; &lt;/a&gt;) to filter a &lt;code&gt;BufferedImage&lt;/code&gt; in the Image Producer/Consumer/Observer paradigm.</target>
        </trans-unit>
        <trans-unit id="b893ee2e0f33714ff252b8fd0fab7bade1b1a7c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferedImageFilter&lt;/code&gt; class subclasses an &lt;code&gt;ImageFilter&lt;/code&gt; to provide a simple means of using a single-source/single-destination image operator (&lt;a href=&quot;bufferedimageop&quot;&gt;&lt;code&gt;BufferedImageOp&lt;/code&gt;&lt;/a&gt;) to filter a &lt;code&gt;BufferedImage&lt;/code&gt; in the Image Producer/Consumer/Observer paradigm. Examples of these image operators are: &lt;a href=&quot;convolveop&quot;&gt;&lt;code&gt;ConvolveOp&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;affinetransformop&quot;&gt;&lt;code&gt;AffineTransformOp&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;lookupop&quot;&gt;&lt;code&gt;LookupOp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;BufferedImageFilter&lt;/code&gt; class subclasses an &lt;code&gt;ImageFilter&lt;/code&gt; to provide a simple means of using a single-source/single-destination image operator (&lt;a href=&quot;bufferedimageop&quot;&gt; &lt;code&gt;BufferedImageOp&lt;/code&gt; &lt;/a&gt;) to filter a &lt;code&gt;BufferedImage&lt;/code&gt; in the Image Producer/Consumer/Observer paradigm. Examples of these image operators are: &lt;a href=&quot;convolveop&quot;&gt; &lt;code&gt;ConvolveOp&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;affinetransformop&quot;&gt; &lt;code&gt;AffineTransformOp&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;lookupop&quot;&gt; &lt;code&gt;LookupOp&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="26575ce7aa6f5dba044d1067a9237fc3d869b533" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Byte&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;byte&lt;/code&gt; in an object.</source>
          <target state="translated">&lt;code&gt;Byte&lt;/code&gt; クラスは、プリミティブ型の値をラップ &lt;code&gt;byte&lt;/code&gt; のオブジェクトでは。</target>
        </trans-unit>
        <trans-unit id="daee07dd88e16b4a70774f8e2ee84b6a66a8d825" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Byte&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;byte&lt;/code&gt; in an object. An object of type &lt;code&gt;Byte&lt;/code&gt; contains a single field whose type is &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Byte&lt;/code&gt; クラスは、プリミティブ型の値をラップ &lt;code&gt;byte&lt;/code&gt; のオブジェクトでは。 &lt;code&gt;Byte&lt;/code&gt; 型のオブジェクトには、型が &lt;code&gt;byte&lt;/code&gt; の単一フィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="246a27bb52c9d19aae02b846fc0dc428cf5b127e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CDATASection&lt;/code&gt; interface inherits from the &lt;code&gt;CharacterData&lt;/code&gt; interface through the &lt;code&gt;Text&lt;/code&gt; interface. Adjacent &lt;code&gt;CDATASection&lt;/code&gt; nodes are not merged by use of the &lt;code&gt;normalize&lt;/code&gt; method of the &lt;code&gt;Node&lt;/code&gt; interface.</source>
          <target state="translated">The &lt;code&gt;CDATASection&lt;/code&gt; interface inherits from the &lt;code&gt;CharacterData&lt;/code&gt; interface through the &lt;code&gt;Text&lt;/code&gt; interface. Adjacent &lt;code&gt;CDATASection&lt;/code&gt; nodes are not merged by use of the &lt;code&gt;normalize&lt;/code&gt; method of the &lt;code&gt;Node&lt;/code&gt; interface.</target>
        </trans-unit>
        <trans-unit id="62b2e493e07c691d6b8e1c124e2e8e2686f4dad0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSS2Properties&lt;/code&gt; interface represents a convenience mechanism for retrieving and setting properties within a &lt;code&gt;CSSStyleDeclaration&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df7f583a2f3fd85b89b055899e6cefd343a8f90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSS2Properties&lt;/code&gt; interface represents a convenience mechanism for retrieving and setting properties within a &lt;code&gt;CSSStyleDeclaration&lt;/code&gt;. The attributes of this interface correspond to all the properties specified in CSS2. Getting an attribute of this interface is equivalent to calling the &lt;code&gt;getPropertyValue&lt;/code&gt; method of the &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; interface. Setting an attribute of this interface is equivalent to calling the &lt;code&gt;setProperty&lt;/code&gt; method of the &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ed175ac700b48b9b0ba46416474dd057ba2653" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSCharsetRule&lt;/code&gt; interface represents a @charset rule in a CSS style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389dd1b7fefe36e404bede9941945d2c386bf759" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSCharsetRule&lt;/code&gt; interface represents a @charset rule in a CSS style sheet. The value of the &lt;code&gt;encoding&lt;/code&gt; attribute does not affect the encoding of text data in the DOM objects; this encoding is always UTF-16. After a stylesheet is loaded, the value of the &lt;code&gt;encoding&lt;/code&gt; attribute is the value found in the &lt;code&gt;@charset&lt;/code&gt; rule. If there was no &lt;code&gt;@charset&lt;/code&gt; in the original document, then no &lt;code&gt;CSSCharsetRule&lt;/code&gt; is created. The value of the &lt;code&gt;encoding&lt;/code&gt; attribute may also be used as a hint for the encoding used on serialization of the style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6e7449ded2251a2a7ab1e565428f000be3d8f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSFontFaceRule&lt;/code&gt; interface represents a @font-face rule in a CSS style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47aac1b8c9bb6f933115f4efcc9138a0c662e97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSFontFaceRule&lt;/code&gt; interface represents a @font-face rule in a CSS style sheet. The &lt;code&gt;@font-face&lt;/code&gt; rule is used to hold a set of font descriptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e7de5d262f6e4d891bffc8e8fdeb721ec858fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSImportRule&lt;/code&gt; interface represents a @import rule within a CSS style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43498b5585166019b1a9ea81da807a6c7cba7b9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSImportRule&lt;/code&gt; interface represents a @import rule within a CSS style sheet. The &lt;code&gt;@import&lt;/code&gt; rule is used to import style rules from other style sheets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7a3208df061a03e4397993f84b96e719101fa7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSMediaRule&lt;/code&gt; interface represents a @media rule in a CSS style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66566a412b7cd1eaf6027d520d601bfa5d5db018" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSMediaRule&lt;/code&gt; interface represents a @media rule in a CSS style sheet. A &lt;code&gt;@media&lt;/code&gt; rule can be used to delimit style rules for specific media types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0bb6772f97de95b1933932842b3ce33c8623751" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSPageRule&lt;/code&gt; interface represents a @page rule within a CSS style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67de4a8cc6504ac8ae62c547f7ec4b2d648b2c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSPageRule&lt;/code&gt; interface represents a @page rule within a CSS style sheet. The &lt;code&gt;@page&lt;/code&gt; rule is used to specify the dimensions, orientation, margins, etc. of a page box for paged media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60af27d4a695f73d631d184d45e8330b1b7c139" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSPrimitiveValue&lt;/code&gt; interface represents a single CSS value .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a703bf7a2089dd6d9a80a37eb27212ad1f508b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSPrimitiveValue&lt;/code&gt; interface represents a single CSS value . This interface may be used to determine the value of a specific style property currently set in a block or to set a specific style property explicitly within the block. An instance of this interface might be obtained from the &lt;code&gt;getPropertyCSSValue&lt;/code&gt; method of the &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; interface. A &lt;code&gt;CSSPrimitiveValue&lt;/code&gt; object only occurs in a context of a CSS property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a29672616bc6f8e9c62069fc7a80e3fc9c2a69c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSRule&lt;/code&gt; interface is the abstract base interface for any type of CSS statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b838e3d89e0a650ed269f5dc8197fc4efb4b6639" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSRule&lt;/code&gt; interface is the abstract base interface for any type of CSS statement. This includes both rule sets and at-rules. An implementation is expected to preserve all rules specified in a CSS style sheet, even if the rule is not recognized by the parser. Unrecognized rules are represented using the &lt;code&gt;CSSUnknownRule&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e7c465b8aae9db5516ed2f7ee2c0d7a7ed7fe9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSRuleList&lt;/code&gt; interface provides the abstraction of an ordered collection of CSS rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d35b3aed2e24c085b1e6df3578e6c8a431c2ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; interface represents a single CSS declaration block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d167a87a53c347e85173c24d3e46649cb4882e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; interface represents a single CSS declaration block. This interface may be used to determine the style properties currently set in a block or to set style properties explicitly within the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d697895e6a8dbee6aa984e843544344649351921" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSStyleRule&lt;/code&gt; interface represents a single rule set in a CSS style sheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f2d6fe4d72cee5b3be8035ead0cf9b791faa56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSStyleSheet&lt;/code&gt; interface is a concrete interface used to represent a CSS style sheet i.e., a style sheet whose content type is &quot;text/css&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a1790e7f818b21c2815de170c7fa8bf24f2402" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSUnknownRule&lt;/code&gt; interface represents an at-rule not supported by this user agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437b74cbd6f6a88ac98eaa1391020081a5c5c5b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSValue&lt;/code&gt; at the &lt;code&gt;index&lt;/code&gt; position in the &lt;code&gt;CSSValueList&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if that is not a valid index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70df366709fb9dc1497427216d897a0a1643cb7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSValue&lt;/code&gt; interface represents a simple or a complex value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f688efbd943fee713ad7d2cf412fe78577458278" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSValue&lt;/code&gt; interface represents a simple or a complex value. A &lt;code&gt;CSSValue&lt;/code&gt; object only occurs in a context of a CSS property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f19b06a5175245ad5cff448ea9bd6ca501e7a89" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSValueList&lt;/code&gt; interface provides the abstraction of an ordered collection of CSS values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a932ff02fbef157dfbce82880e1ec92d239cbdb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CS_CIEXYZ&lt;/code&gt; space used by the &lt;code&gt;toCIEXYZ/fromCIEXYZ&lt;/code&gt; methods can be described as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45403e90906b6fa81b2360420a874f817c98e7b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CachedRowSet&lt;/code&gt; interface also defines the method &lt;code&gt;previousPage&lt;/code&gt;. Just as the method &lt;code&gt;nextPage&lt;/code&gt; is analogous to the &lt;code&gt;ResultSet&lt;/code&gt; method &lt;code&gt;next&lt;/code&gt;, the method &lt;code&gt;previousPage&lt;/code&gt; is analogous to the &lt;code&gt;ResultSet&lt;/code&gt; method &lt;code&gt;previous&lt;/code&gt;. Similar to the method &lt;code&gt;nextPage&lt;/code&gt;, &lt;code&gt;previousPage&lt;/code&gt; creates a &lt;code&gt;CachedRowSet&lt;/code&gt; object containing the number of rows set as the page size. So, for instance, the method &lt;code&gt;previousPage&lt;/code&gt; could be used in a &lt;code&gt;while&lt;/code&gt; loop at the end of the preceding code fragment to navigate back through the pages from the last page to the first page. The method &lt;code&gt;previousPage&lt;/code&gt; is also similar to &lt;code&gt;nextPage&lt;/code&gt; in that it can be used in a &lt;code&gt;while&lt;/code&gt; loop, except that it returns &lt;code&gt;true&lt;/code&gt; as long as there is another page preceding it and &lt;code&gt;false&lt;/code&gt; when there are no more pages ahead of it.</source>
          <target state="translated">The &lt;code&gt;CachedRowSet&lt;/code&gt; interface also defines the method &lt;code&gt;previousPage&lt;/code&gt; . Just as the method &lt;code&gt;nextPage&lt;/code&gt; is analogous to the &lt;code&gt;ResultSet&lt;/code&gt; method &lt;code&gt;next&lt;/code&gt; , the method &lt;code&gt;previousPage&lt;/code&gt; is analogous to the &lt;code&gt;ResultSet&lt;/code&gt; method &lt;code&gt;previous&lt;/code&gt; . Similar to the method &lt;code&gt;nextPage&lt;/code&gt; , &lt;code&gt;previousPage&lt;/code&gt; creates a &lt;code&gt;CachedRowSet&lt;/code&gt; object containing the number of rows set as the page size. So, for instance, the method &lt;code&gt;previousPage&lt;/code&gt; could be used in a &lt;code&gt;while&lt;/code&gt; loop at the end of the preceding code fragment to navigate back through the pages from the last page to the first page. The method &lt;code&gt;previousPage&lt;/code&gt; is also similar to &lt;code&gt;nextPage&lt;/code&gt; in that it can be used in a &lt;code&gt;while&lt;/code&gt; loop, except that it returns &lt;code&gt;true&lt;/code&gt; as long as there is another page preceding it and &lt;code&gt;false&lt;/code&gt; when there are no more pages ahead of it.</target>
        </trans-unit>
        <trans-unit id="086daf6283fb4f73e97652af102c13277eb9b3cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Calendar&lt;/code&gt; class is an abstract class that provides methods for converting between a specific instant in time and a set of &lt;a href=&quot;#fields&quot;&gt;&lt;code&gt;calendar fields&lt;/code&gt;&lt;/a&gt; such as &lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH&lt;/code&gt;, &lt;code&gt;DAY_OF_MONTH&lt;/code&gt;, &lt;code&gt;HOUR&lt;/code&gt;, and so on, and for manipulating the calendar fields, such as getting the date of the next week. An instant in time can be represented by a millisecond value that is an offset from the &lt;a id=&quot;Epoch&quot;&gt;&lt;em&gt;Epoch&lt;/em&gt;&lt;/a&gt;, January 1, 1970 00:00:00.000 GMT (Gregorian).</source>
          <target state="translated">The &lt;code&gt;Calendar&lt;/code&gt; class is an abstract class that provides methods for converting between a specific instant in time and a set of &lt;a href=&quot;#fields&quot;&gt; &lt;code&gt;calendar fields&lt;/code&gt; &lt;/a&gt; such as &lt;code&gt;YEAR&lt;/code&gt; , &lt;code&gt;MONTH&lt;/code&gt; , &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; , &lt;code&gt;HOUR&lt;/code&gt; , and so on, and for manipulating the calendar fields, such as getting the date of the next week. An instant in time can be represented by a millisecond value that is an offset from the &lt;a id=&quot;Epoch&quot;&gt;&lt;em&gt;Epoch&lt;/em&gt;&lt;/a&gt;, January 1, 1970 00:00:00.000 GMT (Gregorian).</target>
        </trans-unit>
        <trans-unit id="c827bcb764af6d14358870b4c02cf9f314c2a1cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Calendar&lt;/code&gt; class is an abstract class that provides methods for converting between a specific instant in time and a set of &lt;a href=&quot;calendar#fields&quot;&gt;&lt;code&gt;calendar fields&lt;/code&gt;&lt;/a&gt; such as &lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH&lt;/code&gt;, &lt;code&gt;DAY_OF_MONTH&lt;/code&gt;, &lt;code&gt;HOUR&lt;/code&gt;, and so on, and for manipulating the calendar fields, such as getting the date of the next week.</source>
          <target state="translated">&lt;code&gt;Calendar&lt;/code&gt; クラスは、時間における特定の瞬間とのセットの間の変換のための方法を提供する抽象クラスである&lt;a href=&quot;calendar#fields&quot;&gt; &lt;code&gt;calendar fields&lt;/code&gt; &lt;/a&gt;など &lt;code&gt;YEAR&lt;/code&gt; 、 &lt;code&gt;MONTH&lt;/code&gt; 、 &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; 、 &lt;code&gt;HOUR&lt;/code&gt; など、そしてそのような日付を取得するようカレンダフィールドを操作します来週の。</target>
        </trans-unit>
        <trans-unit id="e16a5c9a51c0c49e784ca00cfe336ed3439953f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Calendar&lt;/code&gt; class is an abstract class that provides methods for converting between a specific instant in time and a set of &lt;a href=&quot;calendar#fields&quot;&gt;&lt;code&gt;calendar fields&lt;/code&gt;&lt;/a&gt; such as &lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH&lt;/code&gt;, &lt;code&gt;DAY_OF_MONTH&lt;/code&gt;, &lt;code&gt;HOUR&lt;/code&gt;, and so on, and for manipulating the calendar fields, such as getting the date of the next week. An instant in time can be represented by a millisecond value that is an offset from the &lt;a name=&quot;Epoch&quot;&gt;&lt;em&gt;Epoch&lt;/em&gt;&lt;/a&gt;, January 1, 1970 00:00:00.000 GMT (Gregorian).</source>
          <target state="translated">&lt;code&gt;Calendar&lt;/code&gt; クラスは、時間における特定の瞬間とのセットの間の変換のための方法を提供する抽象クラスである&lt;a href=&quot;calendar#fields&quot;&gt; &lt;code&gt;calendar fields&lt;/code&gt; &lt;/a&gt;など &lt;code&gt;YEAR&lt;/code&gt; 、 &lt;code&gt;MONTH&lt;/code&gt; 、 &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; 、 &lt;code&gt;HOUR&lt;/code&gt; など、そしてそのような日付を取得するようカレンダフィールドを操作します来週の。時間における瞬間からオフセットされたミリ秒の値で表すことができる&lt;a name=&quot;Epoch&quot;&gt;&lt;em&gt;エポック&lt;/em&gt;&lt;/a&gt;：00：00.000 GMT（グレゴリオ）、1970年1月1日00。</target>
        </trans-unit>
        <trans-unit id="46f676ce0c4f91d6ea5cdaa0c0eeb686651fe70a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Calendar&lt;/code&gt; parameters are the values represented by the &lt;code&gt;isLenient&lt;/code&gt;, &lt;code&gt;getFirstDayOfWeek&lt;/code&gt;, &lt;code&gt;getMinimalDaysInFirstWeek&lt;/code&gt; and &lt;code&gt;getTimeZone&lt;/code&gt; methods. If there is any difference in those parameters between the two &lt;code&gt;Calendar&lt;/code&gt;s, this method returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Calendar&lt;/code&gt; パラメータは、で表される値である &lt;code&gt;isLenient&lt;/code&gt; 、 &lt;code&gt;getFirstDayOfWeek&lt;/code&gt; 、 &lt;code&gt;getMinimalDaysInFirstWeek&lt;/code&gt; 、および &lt;code&gt;getTimeZone&lt;/code&gt; の方法。2つの &lt;code&gt;Calendar&lt;/code&gt; の間でこれらのパラメーターに違いがある場合、このメソッドは &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="03f65fae6f6d35c57712e1b5d06c5ce4521fef51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Callable&lt;/code&gt; interface is similar to &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt;, in that both are designed for classes whose instances are potentially executed by another thread. A &lt;code&gt;Runnable&lt;/code&gt;, however, does not return a result and cannot throw a checked exception.</source>
          <target state="translated">&lt;code&gt;Callable&lt;/code&gt; インタフェースは同様である&lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt;の両方がそのインスタンス潜在的に別のスレッドによって実行されるクラスのために設計されているという点で、。A &lt;code&gt;Runnable&lt;/code&gt; 、しかし、結果を返さないとチェック例外をスローすることはできません。</target>
        </trans-unit>
        <trans-unit id="2fd30e66fda8ef1c3878a705a006694493584387" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CertPath&lt;/code&gt; specified must be of a type that is supported by the validation algorithm, otherwise an &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; will be thrown. For example, a &lt;code&gt;CertPathValidator&lt;/code&gt; that implements the PKIX algorithm validates &lt;code&gt;CertPath&lt;/code&gt; objects of type X.509.</source>
          <target state="translated">&lt;code&gt;CertPath&lt;/code&gt; 検証アルゴリズムによってサポートされているタイプである必要があり、指定は、そうでない場合 &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; ががスローされます。例えば、 &lt;code&gt;CertPathValidator&lt;/code&gt; PKIXアルゴリズムが検証実装する &lt;code&gt;CertPath&lt;/code&gt; タイプX.509のオブジェクト。</target>
        </trans-unit>
        <trans-unit id="36926f67fdea989d87063408fa653e4dfdb427d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CertStore&lt;/code&gt; that is returned is initialized with the specified &lt;code&gt;CertStoreParameters&lt;/code&gt;. The type of parameters needed may vary between different types of &lt;code&gt;CertStore&lt;/code&gt;s. Note that the specified &lt;code&gt;CertStoreParameters&lt;/code&gt; object is cloned.</source>
          <target state="translated">&lt;code&gt;CertStore&lt;/code&gt; 返された指定で初期化され &lt;code&gt;CertStoreParameters&lt;/code&gt; 。必要なパラメータのタイプは、 &lt;code&gt;CertStore&lt;/code&gt; のタイプによって異なる場合があります。指定された &lt;code&gt;CertStoreParameters&lt;/code&gt; オブジェクトが複製されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="101822df3975adbcac61dad375ef170c3dd3f9ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Character&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;char&lt;/code&gt; in an object.</source>
          <target state="translated">&lt;code&gt;Character&lt;/code&gt; クラスは、プリミティブ型の値ラップ &lt;code&gt;char&lt;/code&gt; オブジェクトです。</target>
        </trans-unit>
        <trans-unit id="59ef79f44cd9b5450b6ba9539fe681757de0acb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Character&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;char&lt;/code&gt; in an object. An object of class &lt;code&gt;Character&lt;/code&gt; contains a single field whose type is &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;Character&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;char&lt;/code&gt; in an object. An object of class &lt;code&gt;Character&lt;/code&gt; contains a single field whose type is &lt;code&gt;char&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="806bb96887766953bebd866e27ce9d8da08b4334" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Character&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;char&lt;/code&gt; in an object. An object of type &lt;code&gt;Character&lt;/code&gt; contains a single field whose type is &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Character&lt;/code&gt; クラスは、プリミティブ型の値ラップ &lt;code&gt;char&lt;/code&gt; オブジェクトです。タイプ &lt;code&gt;Character&lt;/code&gt; のオブジェクトには、タイプが &lt;code&gt;char&lt;/code&gt; である単一フィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="068ebf45f3b262fc7cfb61d8411795e62f12fe53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CharacterData.data&lt;/code&gt; attribute holds the text that is contained by the CDATA section. Note that this &lt;em&gt;may&lt;/em&gt; contain characters that need to be escaped outside of CDATA sections and that, depending on the character encoding (&quot;charset&quot;) chosen for serialization, it may be impossible to write out some characters as part of a CDATA section.</source>
          <target state="translated">The &lt;code&gt;CharacterData.data&lt;/code&gt; attribute holds the text that is contained by the CDATA section. Note that this &lt;em&gt;may&lt;/em&gt; contain characters that need to be escaped outside of CDATA sections and that, depending on the character encoding (&quot;charset&quot;) chosen for serialization, it may be impossible to write out some characters as part of a CDATA section.</target>
        </trans-unit>
        <trans-unit id="d7639ef9026d824ebeafafaa00bc06da11cf51ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CharacterData&lt;/code&gt; interface extends Node with a set of attributes and methods for accessing character data in the DOM.</source>
          <target state="translated">The &lt;code&gt;CharacterData&lt;/code&gt; interface extends Node with a set of attributes and methods for accessing character data in the DOM.</target>
        </trans-unit>
        <trans-unit id="40ffb9de6c7b636f3605b56c1a0d9b79d969550c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CharacterData&lt;/code&gt; interface extends Node with a set of attributes and methods for accessing character data in the DOM. For clarity this set is defined here rather than on each object that uses these attributes and methods. No DOM objects correspond directly to &lt;code&gt;CharacterData&lt;/code&gt;, though &lt;code&gt;Text&lt;/code&gt; and others do inherit the interface from it. All &lt;code&gt;offsets&lt;/code&gt; in this interface start from &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;CharacterData&lt;/code&gt; interface extends Node with a set of attributes and methods for accessing character data in the DOM. For clarity this set is defined here rather than on each object that uses these attributes and methods. No DOM objects correspond directly to &lt;code&gt;CharacterData&lt;/code&gt; , though &lt;code&gt;Text&lt;/code&gt; and others do inherit the interface from it. All &lt;code&gt;offsets&lt;/code&gt; in this interface start from &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22f50e4a07350a988c3b8d5223aec95aff93c7ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CheckboxGroup&lt;/code&gt; class is used to group together a set of &lt;code&gt;Checkbox&lt;/code&gt; buttons.</source>
          <target state="translated">The &lt;code&gt;CheckboxGroup&lt;/code&gt; class is used to group together a set of &lt;code&gt;Checkbox&lt;/code&gt; buttons.</target>
        </trans-unit>
        <trans-unit id="4c6b961850ab9fa432a7eefe889be3fe47bd988d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Choice&lt;/code&gt; class presents a pop-up menu of choices.</source>
          <target state="translated">The &lt;code&gt;Choice&lt;/code&gt; class presents a pop-up menu of choices.</target>
        </trans-unit>
        <trans-unit id="b19af052bb34ceaf06a5ee3ac49af9e25d0f093a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Choice&lt;/code&gt; class presents a pop-up menu of choices. The current choice is displayed as the title of the menu.</source>
          <target state="translated">The &lt;code&gt;Choice&lt;/code&gt; class presents a pop-up menu of choices. The current choice is displayed as the title of the menu.</target>
        </trans-unit>
        <trans-unit id="ba3268238d079e4b2a6a12991e41beae19670cb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ChronoField&lt;/code&gt; date and time fields are re-resolved. This allows fields in step four to produce &lt;code&gt;ChronoField&lt;/code&gt; values and have them be processed into dates and times.</source>
          <target state="translated">&lt;code&gt;ChronoField&lt;/code&gt; の日付と時刻のフィールドは再解決されます。これにより、ステップ4のフィールドで &lt;code&gt;ChronoField&lt;/code&gt; 値を生成し、それらを日付と時刻に処理することができます。</target>
        </trans-unit>
        <trans-unit id="b0898653f339c4545cc086be6fd8ad09ad6ee506" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ChronoField&lt;/code&gt; date fields are resolved. This is achieved using &lt;a href=&quot;../chrono/chronology#resolveDate(java.util.Map,java.time.format.ResolverStyle)&quot;&gt;&lt;code&gt;Chronology.resolveDate(Map, ResolverStyle)&lt;/code&gt;&lt;/a&gt;. Documentation about field resolution is located in the implementation of &lt;code&gt;Chronology&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;ChronoField&lt;/code&gt; date fields are resolved. This is achieved using &lt;a href=&quot;../chrono/chronology#resolveDate(java.util.Map,java.time.format.ResolverStyle)&quot;&gt; &lt;code&gt;Chronology.resolveDate(Map, ResolverStyle)&lt;/code&gt; &lt;/a&gt;. Documentation about field resolution is located in the implementation of &lt;code&gt;Chronology&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96e6680c1b998ca327d4d17aedbccdccc167dbcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ChronoField&lt;/code&gt; date fields are resolved. This is achieved using &lt;a href=&quot;../chrono/chronology#resolveDate-java.util.Map-java.time.format.ResolverStyle-&quot;&gt;&lt;code&gt;Chronology.resolveDate(Map, ResolverStyle)&lt;/code&gt;&lt;/a&gt;. Documentation about field resolution is located in the implementation of &lt;code&gt;Chronology&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ChronoField&lt;/code&gt; の日付フィールドが解決されます。これは&lt;a href=&quot;../chrono/chronology#resolveDate-java.util.Map-java.time.format.ResolverStyle-&quot;&gt; &lt;code&gt;Chronology.resolveDate(Map, ResolverStyle)&lt;/code&gt; &lt;/a&gt;を使用して実現されます。フィールド解決に関するドキュメントは、 &lt;code&gt;Chronology&lt;/code&gt; の実装にあります。</target>
        </trans-unit>
        <trans-unit id="89d1beeae57332f5351b6ab29fde209df635e987" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ChronoField&lt;/code&gt; time fields are resolved. This is documented on &lt;a href=&quot;../temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; and is the same for all chronologies.</source>
          <target state="translated">&lt;code&gt;ChronoField&lt;/code&gt; の時間フィールドが解決されます。これは&lt;a href=&quot;../temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; に&lt;/a&gt;記載されており、すべての年表で同じです。</target>
        </trans-unit>
        <trans-unit id="82381a07b897d845e38a8fb6d968a572a981dcd1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Chronology&lt;/code&gt; instance provides a set of methods to create &lt;code&gt;ChronoLocalDate&lt;/code&gt; instances. The date classes are used to manipulate specific dates.</source>
          <target state="translated">&lt;code&gt;Chronology&lt;/code&gt; インスタンスを作成するメソッドのセットを提供 &lt;code&gt;ChronoLocalDate&lt;/code&gt; のインスタンス。日付クラスは、特定の日付を操作するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b67dfb19ed132a488f7220fb4dc014c909b089ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Chronology&lt;/code&gt; represents the calendar system in use. The ISO-8601 calendar system is the modern civil calendar system used today in most of the world. It is equivalent to the proleptic Gregorian calendar system, in which today's rules for leap years are applied for all time.</source>
          <target state="translated">&lt;code&gt;Chronology&lt;/code&gt; 使用中のカレンダーシステムを表します。ISO-8601カレンダーシステムは、今日世界のほとんどで使用されている現代の市民カレンダーシステムです。これは、うるう年の今日の規則がすべての時間に適用される、前向きなグレゴリオ暦システムに相当します。</target>
        </trans-unit>
        <trans-unit id="4197e57743f21fd2a15f8483e9ed9b922aac9ed3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Chronology&lt;/code&gt; represents the calendar system in use. The era and other fields in &lt;a href=&quot;../temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; are defined by the chronology.</source>
          <target state="translated">&lt;code&gt;Chronology&lt;/code&gt; 使用中のカレンダーシステムを表します。&lt;a href=&quot;../temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; &lt;/a&gt;の時代とその他のフィールドは、年代学によって定義されます。</target>
        </trans-unit>
        <trans-unit id="9ec2677d771f2243453abd3744eafeaaa8cc23f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; プリミティブ型を表すインスタンス &lt;code&gt;byte&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5d8434bc0489103ac32d773f7b0d5d3c71265f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; プリミティブ型を表すインスタンス &lt;code&gt;char&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0b196d2877a10ae544eb517c91cdc98d354fe55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; プリミティブ型を表すインスタンス &lt;code&gt;double&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3fc9063456a087c6ae2a09f36b8c79ce72af8fe4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; プリミティブ型を表すインスタンス &lt;code&gt;float&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="843262d0d1248a1926078c82957df1906c06c701" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; プリミティブ型を表すインスタンス &lt;code&gt;int&lt;/code&gt; 型。</target>
        </trans-unit>
        <trans-unit id="f85e50e9d096ed50998edbe6558f68b79f3e5d09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; プリミティブ型を表すインスタンス &lt;code&gt;long&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06ed2f03cfacda7175bed94156559a38e6923b0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; プリミティブ型を表すインスタンス &lt;code&gt;short&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e8ca9880dd30af6f9980e4a0d93f1ee703afc95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object created from the data, and &lt;code&gt;ProtectionDomain&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;Class&lt;/code&gt; object created from the data, and &lt;code&gt;ProtectionDomain&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0bddc54347ed58d9c0c85b45c41a02b37fd779ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object created from the data, and optional &lt;code&gt;ProtectionDomain&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; データから作成されたオブジェクト、およびオプション &lt;code&gt;ProtectionDomain&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e690995fffbb2c3b6c4761982fccbec41cd68fda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object for the specified &lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">指定された &lt;code&gt;name&lt;/code&gt; の &lt;code&gt;Class&lt;/code&gt; オブジェクト</target>
        </trans-unit>
        <trans-unit id="23dcb43f82d588ed515276419645673633932ecc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object representing the pseudo-type corresponding to the keyword &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; キーワードに対応する擬似型を表すオブジェクト &lt;code&gt;void&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d08a4d00bff7d8642e575b877c58fa1bcc6f66c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object that represents the runtime class of this object.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; このオブジェクトの実行時のクラスを表すオブジェクト。</target>
        </trans-unit>
        <trans-unit id="1a36611cde5a9560399b57b3e163d1767e367923" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object that was created from the specified class data</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 指定されたクラスデータから作成されたオブジェクト</target>
        </trans-unit>
        <trans-unit id="f80f806d21a19e64a5fdd872d0ac53f89e33de6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object that was created from the specified class data.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 指定されたクラスデータから作成されたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="4584f55b815597f64d3b967ed1a51e3f17ff42f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object, or &lt;code&gt;null&lt;/code&gt; if the class has not been loaded</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; オブジェクト。クラスがロードされていない場合は &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53769dc20c24f269ab332a337f22729fbb2a017c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ClassLoader&lt;/code&gt; class uses a delegation model to search for classes and resources. Each instance of &lt;code&gt;ClassLoader&lt;/code&gt; has an associated parent class loader. When requested to find a class or resource, a &lt;code&gt;ClassLoader&lt;/code&gt; instance will delegate the search for the class or resource to its parent class loader before attempting to find the class or resource itself. The virtual machine's built-in class loader, called the &quot;bootstrap class loader&quot;, does not itself have a parent but may serve as the parent of a &lt;code&gt;ClassLoader&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;ClassLoader&lt;/code&gt; クラスは、クラスおよびリソースを検索するための委譲モデルを使用しています。 &lt;code&gt;ClassLoader&lt;/code&gt; の各インスタンスには、関連付けられた親クラスローダーがあります。クラスまたはリソースの検索を要求されると、 &lt;code&gt;ClassLoader&lt;/code&gt; インスタンスは、クラスまたはリソース自体を検索する前に、クラスまたはリソースの検索を親クラスローダーに委任します。「ブートストラップクラスローダー」と呼ばれる仮想マシンの組み込みクラスローダー自体には親はありませんが、 &lt;code&gt;ClassLoader&lt;/code&gt; インスタンスの親として機能する場合があります。</target>
        </trans-unit>
        <trans-unit id="7675cfccc95d9f3e4a5e2b0b965767e502acc618" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ClassLoader&lt;/code&gt; class uses a delegation model to search for classes and resources. Each instance of &lt;code&gt;ClassLoader&lt;/code&gt; has an associated parent class loader. When requested to find a class or resource, a &lt;code&gt;ClassLoader&lt;/code&gt; instance will usually delegate the search for the class or resource to its parent class loader before attempting to find the class or resource itself.</source>
          <target state="translated">The &lt;code&gt;ClassLoader&lt;/code&gt; class uses a delegation model to search for classes and resources. Each instance of &lt;code&gt;ClassLoader&lt;/code&gt; has an associated parent class loader. When requested to find a class or resource, a &lt;code&gt;ClassLoader&lt;/code&gt; instance will usually delegate the search for the class or resource to its parent class loader before attempting to find the class or resource itself.</target>
        </trans-unit>
        <trans-unit id="7baf7494690c1ab3f8e2f12b250cac6e80e44abb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Clip&lt;/code&gt; interface represents a special kind of data line whose audio data can be loaded prior to playback, instead of being streamed in real time.</source>
          <target state="translated">&lt;code&gt;Clip&lt;/code&gt; インターフェースは、そのオーディオデータを再生する前にロードすることができ、代わりのものでリアルタイムでストリーミングデータ線の特別な種類を表します。</target>
        </trans-unit>
        <trans-unit id="6af58165956634b3a8bd98f0b10e843e579a86b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Clob&lt;/code&gt; interface provides methods for getting the length of an SQL &lt;code&gt;CLOB&lt;/code&gt; (Character Large Object) value, for materializing a &lt;code&gt;CLOB&lt;/code&gt; value on the client, and for searching for a substring or &lt;code&gt;CLOB&lt;/code&gt; object within a &lt;code&gt;CLOB&lt;/code&gt; value. Methods in the interfaces &lt;a href=&quot;resultset&quot;&gt;&lt;code&gt;ResultSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;callablestatement&quot;&gt;&lt;code&gt;CallableStatement&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;preparedstatement&quot;&gt;&lt;code&gt;PreparedStatement&lt;/code&gt;&lt;/a&gt;, such as &lt;code&gt;getClob&lt;/code&gt; and &lt;code&gt;setClob&lt;/code&gt; allow a programmer to access an SQL &lt;code&gt;CLOB&lt;/code&gt; value. In addition, this interface has methods for updating a &lt;code&gt;CLOB&lt;/code&gt; value.</source>
          <target state="translated">The &lt;code&gt;Clob&lt;/code&gt; interface provides methods for getting the length of an SQL &lt;code&gt;CLOB&lt;/code&gt; (Character Large Object) value, for materializing a &lt;code&gt;CLOB&lt;/code&gt; value on the client, and for searching for a substring or &lt;code&gt;CLOB&lt;/code&gt; object within a &lt;code&gt;CLOB&lt;/code&gt; value. Methods in the interfaces &lt;a href=&quot;resultset&quot;&gt; &lt;code&gt;ResultSet&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;callablestatement&quot;&gt; &lt;code&gt;CallableStatement&lt;/code&gt; &lt;/a&gt;, and &lt;a href=&quot;preparedstatement&quot;&gt; &lt;code&gt;PreparedStatement&lt;/code&gt; &lt;/a&gt;, such as &lt;code&gt;getClob&lt;/code&gt; and &lt;code&gt;setClob&lt;/code&gt; allow a programmer to access an SQL &lt;code&gt;CLOB&lt;/code&gt; value. In addition, this interface has methods for updating a &lt;code&gt;CLOB&lt;/code&gt; value.</target>
        </trans-unit>
        <trans-unit id="07dd3f9173350c44103b58ad3909560986b18dcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CodecSet&lt;/code&gt; class creates and saves a single service instance at initialization:</source>
          <target state="translated">&lt;code&gt;CodecSet&lt;/code&gt; のクラスは、初期化時に、単一のサービスインスタンスを作成し、保存します。</target>
        </trans-unit>
        <trans-unit id="cf493d6742a6c242a0b1d360dfba83fb4b87d243" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CollationElementIterator&lt;/code&gt; class is used as an iterator to walk through each character of an international string.</source>
          <target state="translated">&lt;code&gt;CollationElementIterator&lt;/code&gt; クラスは、各国語文字列の各文字を処理するときの反復子として使用されています。</target>
        </trans-unit>
        <trans-unit id="46ce50a913e7c2a368bfe8ae348e20f4b0760cdc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CollationElementIterator&lt;/code&gt; class is used as an iterator to walk through each character of an international string. Use the iterator to return the ordering priority of the positioned character. The ordering priority of a character, which we refer to as a key, defines how a character is collated in the given collation object.</source>
          <target state="translated">&lt;code&gt;CollationElementIterator&lt;/code&gt; クラスは、各国語文字列の各文字を処理するときの反復子として使用されています。反復子を使用して、配置された文字の優先順位を返します。キーと呼ばれる文字の優先順位は、特定の照合オブジェクトで文字を照合する方法を定義します。</target>
        </trans-unit>
        <trans-unit id="7933f59bdf875c37eb441af7f9a60a666a8d3fcd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Collator&lt;/code&gt; class performs locale-sensitive &lt;code&gt;String&lt;/code&gt; comparison.</source>
          <target state="translated">&lt;code&gt;Collator&lt;/code&gt; クラスを行うには、ロケールに依存する &lt;code&gt;String&lt;/code&gt; を比較します。</target>
        </trans-unit>
        <trans-unit id="bb398f128eef70308b7f92e45e6eb18ce6533c73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Collator&lt;/code&gt; class performs locale-sensitive &lt;code&gt;String&lt;/code&gt; comparison. You use this class to build searching and sorting routines for natural language text.</source>
          <target state="translated">&lt;code&gt;Collator&lt;/code&gt; クラスを行うには、ロケールに依存する &lt;code&gt;String&lt;/code&gt; を比較します。このクラスを使用して、自然言語テキストの検索とソートのルーチンを作成します。</target>
        </trans-unit>
        <trans-unit id="ff9824bbcacb67b79596d130b57096444e5903bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Collection&lt;/code&gt; is &lt;b&gt;not&lt;/b&gt; copied. Instead, a reference is used. This allows the caller to subsequently add or remove &lt;code&gt;Certificates&lt;/code&gt; or &lt;code&gt;CRL&lt;/code&gt;s from the &lt;code&gt;Collection&lt;/code&gt;, thus changing the set of &lt;code&gt;Certificates&lt;/code&gt; or &lt;code&gt;CRL&lt;/code&gt;s available to the Collection &lt;code&gt;CertStore&lt;/code&gt;. The Collection &lt;code&gt;CertStore&lt;/code&gt; will not modify the contents of the &lt;code&gt;Collection&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Collection&lt;/code&gt; されて&lt;b&gt;いない&lt;/b&gt;コピー。代わりに、参照が使用されます。これは、呼び出し側が、その後追加または削除することができます &lt;code&gt;Certificates&lt;/code&gt; や &lt;code&gt;CRL&lt;/code&gt; からSの &lt;code&gt;Collection&lt;/code&gt; ので、一連の変更、 &lt;code&gt;Certificates&lt;/code&gt; や &lt;code&gt;CRL&lt;/code&gt; のコレクションに利用できる &lt;code&gt;CertStore&lt;/code&gt; 。コレクション &lt;code&gt;CertStore&lt;/code&gt; の内容は変更されません &lt;code&gt;Collection&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c69073fb9b03a0f7c9780da4af3a0f3feb090b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Color&lt;/code&gt; class is used to encapsulate colors in the default sRGB color space or colors in arbitrary color spaces identified by a &lt;a href=&quot;color/colorspace&quot;&gt;&lt;code&gt;ColorSpace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;Color&lt;/code&gt; class is used to encapsulate colors in the default sRGB color space or colors in arbitrary color spaces identified by a &lt;a href=&quot;color/colorspace&quot;&gt; &lt;code&gt;ColorSpace&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="21ae54b2b1e89c6da1ec6fc0b6d472592bb788c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Color&lt;/code&gt; class is used to encapsulate colors in the default sRGB color space or colors in arbitrary color spaces identified by a &lt;a href=&quot;color/colorspace&quot;&gt;&lt;code&gt;ColorSpace&lt;/code&gt;&lt;/a&gt;. Every color has an implicit alpha value of 1.0 or an explicit one provided in the constructor. The alpha value defines the transparency of a color and can be represented by a float value in the range 0.0 - 1.0 or 0 - 255. An alpha value of 1.0 or 255 means that the color is completely opaque and an alpha value of 0 or 0.0 means that the color is completely transparent. When constructing a &lt;code&gt;Color&lt;/code&gt; with an explicit alpha or getting the color/alpha components of a &lt;code&gt;Color&lt;/code&gt;, the color components are never premultiplied by the alpha component.</source>
          <target state="translated">The &lt;code&gt;Color&lt;/code&gt; class is used to encapsulate colors in the default sRGB color space or colors in arbitrary color spaces identified by a &lt;a href=&quot;color/colorspace&quot;&gt; &lt;code&gt;ColorSpace&lt;/code&gt; &lt;/a&gt;. Every color has an implicit alpha value of 1.0 or an explicit one provided in the constructor. The alpha value defines the transparency of a color and can be represented by a float value in the range 0.0 - 1.0 or 0 - 255. An alpha value of 1.0 or 255 means that the color is completely opaque and an alpha value of 0 or 0.0 means that the color is completely transparent. When constructing a &lt;code&gt;Color&lt;/code&gt; with an explicit alpha or getting the color/alpha components of a &lt;code&gt;Color&lt;/code&gt; , the color components are never premultiplied by the alpha component.</target>
        </trans-unit>
        <trans-unit id="d8df4ba8ae0dc0f5f0355942a0c009a9a2b405bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ColorModel&lt;/code&gt; abstract class encapsulates the methods for translating a pixel value to color components (for example, red, green, and blue) and an alpha component.</source>
          <target state="translated">The &lt;code&gt;ColorModel&lt;/code&gt; abstract class encapsulates the methods for translating a pixel value to color components (for example, red, green, and blue) and an alpha component.</target>
        </trans-unit>
        <trans-unit id="10d079471072cbc9898dcdd013b52a5be906fd2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ColorModel&lt;/code&gt; abstract class encapsulates the methods for translating a pixel value to color components (for example, red, green, and blue) and an alpha component. In order to render an image to the screen, a printer, or another image, pixel values must be converted to color and alpha components. As arguments to or return values from methods of this class, pixels are represented as 32-bit ints or as arrays of primitive types. The number, order, and interpretation of color components for a &lt;code&gt;ColorModel&lt;/code&gt; is specified by its &lt;code&gt;ColorSpace&lt;/code&gt;. A &lt;code&gt;ColorModel&lt;/code&gt; used with pixel data that does not include alpha information treats all pixels as opaque, which is an alpha value of 1.0.</source>
          <target state="translated">The &lt;code&gt;ColorModel&lt;/code&gt; abstract class encapsulates the methods for translating a pixel value to color components (for example, red, green, and blue) and an alpha component. In order to render an image to the screen, a printer, or another image, pixel values must be converted to color and alpha components. As arguments to or return values from methods of this class, pixels are represented as 32-bit ints or as arrays of primitive types. The number, order, and interpretation of color components for a &lt;code&gt;ColorModel&lt;/code&gt; is specified by its &lt;code&gt;ColorSpace&lt;/code&gt; . A &lt;code&gt;ColorModel&lt;/code&gt; used with pixel data that does not include alpha information treats all pixels as opaque, which is an alpha value of 1.0.</target>
        </trans-unit>
        <trans-unit id="d35f3c2bfd2b65a30b65d760bed1b5a6fe2c1a67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ColorModel&lt;/code&gt; to be replaced by &lt;code&gt;newmodel&lt;/code&gt; when the user calls &lt;a href=&quot;#substituteColorModel(java.awt.image.ColorModel,java.awt.image.ColorModel)&quot;&gt;&lt;code&gt;substituteColorModel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The &lt;code&gt;ColorModel&lt;/code&gt; to be replaced by &lt;code&gt;newmodel&lt;/code&gt; when the user calls &lt;a href=&quot;#substituteColorModel(java.awt.image.ColorModel,java.awt.image.ColorModel)&quot;&gt; &lt;code&gt;substituteColorModel&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7e13ccfa1d055a7b6b34e9e36830f7d323272c74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ColorModel&lt;/code&gt; to be used as a prototype.</source>
          <target state="translated">&lt;code&gt;ColorModel&lt;/code&gt; のプロトタイプとして使用します。</target>
        </trans-unit>
        <trans-unit id="07d67a2555eefc3e26bbb2290d72ad886426f461" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ColorModel&lt;/code&gt; with which to replace &lt;code&gt;origmodel&lt;/code&gt; when the user calls &lt;code&gt;substituteColorModel&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;ColorModel&lt;/code&gt; with which to replace &lt;code&gt;origmodel&lt;/code&gt; when the user calls &lt;code&gt;substituteColorModel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c82336186c250b7812d70c226ebe5d94f5b9c56d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Compiler&lt;/code&gt; class is provided to support Java-to-native-code compilers and related services.</source>
          <target state="translated">&lt;code&gt;Compiler&lt;/code&gt; クラスは、Javaからネイティブコードコンパイラおよび関連サービスをサポートするために提供されます。</target>
        </trans-unit>
        <trans-unit id="5baf789bd5f3f16f61d707fd5b133cbba7948544" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Compiler&lt;/code&gt; class is provided to support Java-to-native-code compilers and related services. By design, the &lt;code&gt;Compiler&lt;/code&gt; class does nothing; it serves as a placeholder for a JIT compiler implementation.</source>
          <target state="translated">&lt;code&gt;Compiler&lt;/code&gt; クラスは、Javaからネイティブコードコンパイラおよび関連サービスをサポートするために提供されます。仕様上、 &lt;code&gt;Compiler&lt;/code&gt; クラスは何もしません。これは、JITコンパイラー実装のプレースホルダーとして機能します。</target>
        </trans-unit>
        <trans-unit id="95f3169e558b0c372a14747fccf5f156a6f82f30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Compiler&lt;/code&gt; class is provided to support Java-to-native-code compilers and related services. By design, the &lt;code&gt;Compiler&lt;/code&gt; class does nothing; it serves as a placeholder for a JIT compiler implementation. If no compiler is available, these methods do nothing.</source>
          <target state="translated">The &lt;code&gt;Compiler&lt;/code&gt; class is provided to support Java-to-native-code compilers and related services. By design, the &lt;code&gt;Compiler&lt;/code&gt; class does nothing; it serves as a placeholder for a JIT compiler implementation. If no compiler is available, these methods do nothing.</target>
        </trans-unit>
        <trans-unit id="1a6f291fb969665f5e6eb462efced79ed592de7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompletableFuture&lt;/code&gt; returned from this method can complete exceptionally with:</source>
          <target state="translated">The &lt;code&gt;CompletableFuture&lt;/code&gt; returned from this method can complete exceptionally with:</target>
        </trans-unit>
        <trans-unit id="f3febd1deaade91a8663540a2372771cb667def8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Component&lt;/code&gt; associated with this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;Component&lt;/code&gt; associated with this &lt;code&gt;DragGestureRecognizer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2be0c7bbb7ec8789f37ff67646bc9f80f4ad1077" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Component&lt;/code&gt; class is the abstract superclass of the nonmenu-related Abstract Window Toolkit components. Class &lt;code&gt;Component&lt;/code&gt; can also be extended directly to create a lightweight component. A lightweight component is a component that is not associated with a native window. On the contrary, a heavyweight component is associated with a native window. The &lt;a href=&quot;#isLightweight()&quot;&gt;&lt;code&gt;isLightweight()&lt;/code&gt;&lt;/a&gt; method may be used to distinguish between the two kinds of the components.</source>
          <target state="translated">The &lt;code&gt;Component&lt;/code&gt; class is the abstract superclass of the nonmenu-related Abstract Window Toolkit components. Class &lt;code&gt;Component&lt;/code&gt; can also be extended directly to create a lightweight component. A lightweight component is a component that is not associated with a native window. On the contrary, a heavyweight component is associated with a native window. The &lt;a href=&quot;#isLightweight()&quot;&gt; &lt;code&gt;isLightweight()&lt;/code&gt; &lt;/a&gt; method may be used to distinguish between the two kinds of the components.</target>
        </trans-unit>
        <trans-unit id="c1f89d364395518e9ac2aed1058cf59d2cb77a09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Component&lt;/code&gt; is displayed in the dialog.</source>
          <target state="translated">The &lt;code&gt;Component&lt;/code&gt; is displayed in the dialog.</target>
        </trans-unit>
        <trans-unit id="6b7b87975f3751926d2934ab14ea9733cdca5f0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Component&lt;/code&gt; object on which to draw.</source>
          <target state="translated">The &lt;code&gt;Component&lt;/code&gt; object on which to draw.</target>
        </trans-unit>
        <trans-unit id="acac5829c15b68b96fc4d36bd7f296d3d684ea47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Composite&lt;/code&gt; interface, along with &lt;a href=&quot;compositecontext&quot;&gt;&lt;code&gt;CompositeContext&lt;/code&gt;&lt;/a&gt;, defines the methods to compose a draw primitive with the underlying graphics area.</source>
          <target state="translated">The &lt;code&gt;Composite&lt;/code&gt; interface, along with &lt;a href=&quot;compositecontext&quot;&gt; &lt;code&gt;CompositeContext&lt;/code&gt; &lt;/a&gt;, defines the methods to compose a draw primitive with the underlying graphics area.</target>
        </trans-unit>
        <trans-unit id="cf0d38b51f631ead3f513f247eb036d26256b308" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Composite&lt;/code&gt; interface, along with &lt;a href=&quot;compositecontext&quot;&gt;&lt;code&gt;CompositeContext&lt;/code&gt;&lt;/a&gt;, defines the methods to compose a draw primitive with the underlying graphics area. After the &lt;code&gt;Composite&lt;/code&gt; is set in the &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; context, it combines a shape, text, or an image being rendered with the colors that have already been rendered according to pre-defined rules. The classes implementing this interface provide the rules and a method to create the context for a particular operation. &lt;code&gt;CompositeContext&lt;/code&gt; is an environment used by the compositing operation, which is created by the &lt;code&gt;Graphics2D&lt;/code&gt; prior to the start of the operation. &lt;code&gt;CompositeContext&lt;/code&gt; contains private information and resources needed for a compositing operation. When the &lt;code&gt;CompositeContext&lt;/code&gt; is no longer needed, the &lt;code&gt;Graphics2D&lt;/code&gt; object disposes of it in order to reclaim resources allocated for the operation.</source>
          <target state="translated">The &lt;code&gt;Composite&lt;/code&gt; interface, along with &lt;a href=&quot;compositecontext&quot;&gt; &lt;code&gt;CompositeContext&lt;/code&gt; &lt;/a&gt;, defines the methods to compose a draw primitive with the underlying graphics area. After the &lt;code&gt;Composite&lt;/code&gt; is set in the &lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt; context, it combines a shape, text, or an image being rendered with the colors that have already been rendered according to pre-defined rules. The classes implementing this interface provide the rules and a method to create the context for a particular operation. &lt;code&gt;CompositeContext&lt;/code&gt; is an environment used by the compositing operation, which is created by the &lt;code&gt;Graphics2D&lt;/code&gt; prior to the start of the operation. &lt;code&gt;CompositeContext&lt;/code&gt; contains private information and resources needed for a compositing operation. When the &lt;code&gt;CompositeContext&lt;/code&gt; is no longer needed, the &lt;code&gt;Graphics2D&lt;/code&gt; object disposes of it in order to reclaim resources allocated for the operation.</target>
        </trans-unit>
        <trans-unit id="137379a42e103c94a23d7eb739b5b792b28cf148" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeContext&lt;/code&gt; interface defines the encapsulated and optimized environment for a compositing operation.</source>
          <target state="translated">The &lt;code&gt;CompositeContext&lt;/code&gt; interface defines the encapsulated and optimized environment for a compositing operation.</target>
        </trans-unit>
        <trans-unit id="990a0bd1e3d1934bd209638240fed6e170187493" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeContext&lt;/code&gt; interface defines the encapsulated and optimized environment for a compositing operation. &lt;code&gt;CompositeContext&lt;/code&gt; objects maintain state for compositing operations. In a multi-threaded environment, several contexts can exist simultaneously for a single &lt;a href=&quot;composite&quot;&gt;&lt;code&gt;Composite&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">The &lt;code&gt;CompositeContext&lt;/code&gt; interface defines the encapsulated and optimized environment for a compositing operation. &lt;code&gt;CompositeContext&lt;/code&gt; objects maintain state for compositing operations. In a multi-threaded environment, several contexts can exist simultaneously for a single &lt;a href=&quot;composite&quot;&gt; &lt;code&gt;Composite&lt;/code&gt; &lt;/a&gt; object.</target>
        </trans-unit>
        <trans-unit id="7a10136967e2d7cca0ff7de90479711b3afa89dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeData&lt;/code&gt; interface specifies the behavior of a specific type of complex</source>
          <target state="translated">&lt;code&gt;CompositeData&lt;/code&gt; インタフェースは、複雑な特定のタイプの動作を指定します</target>
        </trans-unit>
        <trans-unit id="430611e20757b0f69b3d3c4ac8a5e89a65ae2e00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeDataSupport&lt;/code&gt; class is the</source>
          <target state="translated">&lt;code&gt;CompositeDataSupport&lt;/code&gt; クラスです</target>
        </trans-unit>
        <trans-unit id="b09b9ac999e11e7f7254865f0fdfb600871077d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeType&lt;/code&gt; class is the</source>
          <target state="translated">&lt;code&gt;CompositeType&lt;/code&gt; クラスです</target>
        </trans-unit>
        <trans-unit id="c17feb321bde2a79f87864039c7202bea866d7a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeType&lt;/code&gt; that will appear in the &lt;code&gt;openType&lt;/code&gt; field of the &lt;a href=&quot;../descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt; for an attribute or operation of this type will show only the &lt;code&gt;units&lt;/code&gt; item, but the actual &lt;code&gt;CompositeData&lt;/code&gt; that is generated will have both &lt;code&gt;units&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CompositeType&lt;/code&gt; に表示される &lt;code&gt;openType&lt;/code&gt; のフィールド&lt;a href=&quot;../descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt;のみが表示され、このタイプの属性または操作のための &lt;code&gt;units&lt;/code&gt; アイテムを、実際 &lt;code&gt;CompositeData&lt;/code&gt; の両方があります生成される &lt;code&gt;units&lt;/code&gt; と &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c202cf4fd37a3437bcc0030cec4facf3571e0c50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Connection&lt;/code&gt; and &lt;code&gt;DataSource&lt;/code&gt; property &lt;code&gt;escapeProcessing&lt;/code&gt; may be used to change the default escape processing behavior. A value of true (the default) enables escape Processing for all &lt;code&gt;Statement&lt;/code&gt; objects. A value of false disables escape processing for all &lt;code&gt;Statement&lt;/code&gt; objects. The &lt;code&gt;setEscapeProcessing&lt;/code&gt; method may be used to specify the escape processing behavior for an individual &lt;code&gt;Statement&lt;/code&gt; object.</source>
          <target state="translated">The &lt;code&gt;Connection&lt;/code&gt; and &lt;code&gt;DataSource&lt;/code&gt; property &lt;code&gt;escapeProcessing&lt;/code&gt; may be used to change the default escape processing behavior. A value of true (the default) enables escape Processing for all &lt;code&gt;Statement&lt;/code&gt; objects. A value of false disables escape processing for all &lt;code&gt;Statement&lt;/code&gt; objects. The &lt;code&gt;setEscapeProcessing&lt;/code&gt; method may be used to specify the escape processing behavior for an individual &lt;code&gt;Statement&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="3a9eb916ae0e4a95b868817dcad27e5892ea6182" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ConnectionEventListener&lt;/code&gt; interface is implemented by a connection pooling component. A connection pooling component will usually be provided by a JDBC driver vendor or another system software vendor. A JDBC driver notifies a &lt;code&gt;ConnectionEventListener&lt;/code&gt; object when an application is finished using a pooled connection with which the listener has registered. The notification occurs after the application calls the method &lt;code&gt;close&lt;/code&gt; on its representation of a &lt;code&gt;PooledConnection&lt;/code&gt; object. A &lt;code&gt;ConnectionEventListener&lt;/code&gt; is also notified when a connection error occurs due to the fact that the &lt;code&gt;PooledConnection&lt;/code&gt; is unfit for future use---the server has crashed, for example. The listener is notified by the JDBC driver just before the driver throws an &lt;code&gt;SQLException&lt;/code&gt; to the application using the &lt;code&gt;PooledConnection&lt;/code&gt; object.</source>
          <target state="translated">The &lt;code&gt;ConnectionEventListener&lt;/code&gt; interface is implemented by a connection pooling component. A connection pooling component will usually be provided by a JDBC driver vendor or another system software vendor. A JDBC driver notifies a &lt;code&gt;ConnectionEventListener&lt;/code&gt; object when an application is finished using a pooled connection with which the listener has registered. The notification occurs after the application calls the method &lt;code&gt;close&lt;/code&gt; on its representation of a &lt;code&gt;PooledConnection&lt;/code&gt; object. A &lt;code&gt;ConnectionEventListener&lt;/code&gt; is also notified when a connection error occurs due to the fact that the &lt;code&gt;PooledConnection&lt;/code&gt; is unfit for future use---the server has crashed, for example. The listener is notified by the JDBC driver just before the driver throws an &lt;code&gt;SQLException&lt;/code&gt; to the application using the &lt;code&gt;PooledConnection&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="c4f8fc7d40062e4c808ea460664fdc3d048a2824" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ConsoleHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values).</source>
          <target state="translated">&lt;code&gt;ConsoleHandler&lt;/code&gt; は、に基づいて構成されている &lt;code&gt;LogManager&lt;/code&gt; プロパティ（またはそのデフォルト値）。</target>
        </trans-unit>
        <trans-unit id="468370b0a51ca057342fdb1fe58204389f4fdab1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Constructor&lt;/code&gt; object for the constructor with the specified parameter list</source>
          <target state="translated">&lt;code&gt;Constructor&lt;/code&gt; 指定されたパラメータリストを持つコンストラクタのオブジェクト</target>
        </trans-unit>
        <trans-unit id="051ebba82902b4ec2086b2f151c93e0f826e2664" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Container&lt;/code&gt;, message, icon, and buttons are all determined from abstract methods.</source>
          <target state="translated">The &lt;code&gt;Container&lt;/code&gt; , message, icon, and buttons are all determined from abstract methods.</target>
        </trans-unit>
        <trans-unit id="bfe2741b9b06f16764928ba36a45cb667f568913" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ContentHandlerFactory&lt;/code&gt; instance is used to construct a content handler from a content type</source>
          <target state="translated">&lt;code&gt;ContentHandlerFactory&lt;/code&gt; をインスタンスは、コンテンツタイプからコンテンツ・ハンドラを構築するために使用されます</target>
        </trans-unit>
        <trans-unit id="0bf6f4750ebb0cf949297967135c0fd9fe3656d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ContentHandlerFactory&lt;/code&gt; instance is used to construct a content handler from a content type.</source>
          <target state="translated">The &lt;code&gt;ContentHandlerFactory&lt;/code&gt; instance is used to construct a content handler from a content type.</target>
        </trans-unit>
        <trans-unit id="424256ecdb394f5cdc64e1890526b21ddcaf507b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ControllerEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; has processed a requested type of MIDI control-change event.</source>
          <target state="translated">The &lt;code&gt;ControllerEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt; has processed a requested type of MIDI control-change event.</target>
        </trans-unit>
        <trans-unit id="35ef92f3ccc2d6c39a994a573270b73354f21f4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ControllerEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; has processed a requested type of MIDI control-change event. To register a &lt;code&gt;ControllerEventListener&lt;/code&gt; object to receive such notifications, invoke the &lt;a href=&quot;sequencer#addControllerEventListener(javax.sound.midi.ControllerEventListener,int%5B%5D)&quot;&gt;&lt;code&gt;addControllerEventListener&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Sequencer&lt;/code&gt;, specifying the types of MIDI controllers about which you are interested in getting control-change notifications.</source>
          <target state="translated">The &lt;code&gt;ControllerEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt; has processed a requested type of MIDI control-change event. To register a &lt;code&gt;ControllerEventListener&lt;/code&gt; object to receive such notifications, invoke the &lt;a href=&quot;sequencer#addControllerEventListener(javax.sound.midi.ControllerEventListener,int%5B%5D)&quot;&gt; &lt;code&gt;addControllerEventListener&lt;/code&gt; &lt;/a&gt; method of &lt;code&gt;Sequencer&lt;/code&gt; , specifying the types of MIDI controllers about which you are interested in getting control-change notifications.</target>
        </trans-unit>
        <trans-unit id="6e23ef999b2d94dd091ae6002a808cf050bfabb1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ControllerEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;code&gt;Sequencer&lt;/code&gt; has processed a requested type of MIDI control-change event.</source>
          <target state="translated">&lt;code&gt;ControllerEventListener&lt;/code&gt; のインタフェースは、そのインスタンスの場合に通知する必要があるクラスによって実装される必要があり &lt;code&gt;Sequencer&lt;/code&gt; MIDIコントロール・チェンジ・イベントの要求タイプを処理しました。</target>
        </trans-unit>
        <trans-unit id="f48b495c5fff66a44f844b4e81d54ec584a1e19d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ControllerEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;code&gt;Sequencer&lt;/code&gt; has processed a requested type of MIDI control-change event. To register a &lt;code&gt;ControllerEventListener&lt;/code&gt; object to receive such notifications, invoke the &lt;a href=&quot;sequencer#addControllerEventListener-javax.sound.midi.ControllerEventListener-int:A-&quot;&gt;&lt;code&gt;addControllerEventListener&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Sequencer&lt;/code&gt;, specifying the types of MIDI controllers about which you are interested in getting control-change notifications.</source>
          <target state="translated">&lt;code&gt;ControllerEventListener&lt;/code&gt; のインタフェースは、そのインスタンスの場合に通知する必要があるクラスによって実装される必要があり &lt;code&gt;Sequencer&lt;/code&gt; MIDIコントロール・チェンジ・イベントの要求タイプを処理しました。このような通知を受け取るように &lt;code&gt;ControllerEventListener&lt;/code&gt; オブジェクトを登録するには、 &lt;code&gt;Sequencer&lt;/code&gt; の&lt;a href=&quot;sequencer#addControllerEventListener-javax.sound.midi.ControllerEventListener-int:A-&quot;&gt; &lt;code&gt;addControllerEventListener&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、コントロール変更通知を取得する対象のMIDIコントローラーのタイプを指定します。</target>
        </trans-unit>
        <trans-unit id="b2fce0c6c12d1a0ee0036474b6866c982194e1e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Counter&lt;/code&gt; interface is used to represent any counter or counters function value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140fb843e88aaf0f5963f000d698910d05115402" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Counter&lt;/code&gt; interface is used to represent any counter or counters function value. This interface reflects the values in the underlying style property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4fb62b40f1aa556d6f9a218a85349560049c32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CubicCurve2D&lt;/code&gt; class defines a cubic parametric curve segment in &lt;code&gt;(x,y)&lt;/code&gt; coordinate space.</source>
          <target state="translated">The &lt;code&gt;CubicCurve2D&lt;/code&gt; class defines a cubic parametric curve segment in &lt;code&gt;(x,y)&lt;/code&gt; coordinate space.</target>
        </trans-unit>
        <trans-unit id="8c1e7fd606cd7d58420cac08a722d5a8762857c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CyclicBarrier&lt;/code&gt; uses an all-or-none breakage model for failed synchronization attempts: If a thread leaves a barrier point prematurely because of interruption, failure, or timeout, all other threads waiting at that barrier point will also leave abnormally via &lt;a href=&quot;brokenbarrierexception&quot;&gt;&lt;code&gt;BrokenBarrierException&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;../../lang/interruptedexception&quot;&gt;&lt;code&gt;InterruptedException&lt;/code&gt;&lt;/a&gt; if they too were interrupted at about the same time).</source>
          <target state="translated">&lt;code&gt;CyclicBarrier&lt;/code&gt; をは失敗した同期の試行のために全か無かの破損モデルを使用しています。途中であるため中断、失敗、またはタイムアウトのスレッド葉バリアポイント場合は、そのバリアポイントで待機している他のすべてのスレッドも経由して異常に残します&lt;a href=&quot;brokenbarrierexception&quot;&gt; &lt;code&gt;BrokenBarrierException&lt;/code&gt; &lt;/a&gt;（または&lt;a href=&quot;../../lang/interruptedexception&quot;&gt; &lt;code&gt;InterruptedException&lt;/code&gt; あります&lt;/a&gt;それらもほぼ同時に中断された場合）。</target>
        </trans-unit>
        <trans-unit id="0c783e00b0bafedd1ae14f2bb7e2874a439670e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMConfiguration&lt;/code&gt; interface represents the configuration of a document and maintains a table of recognized parameters.</source>
          <target state="translated">The &lt;code&gt;DOMConfiguration&lt;/code&gt; interface represents the configuration of a document and maintains a table of recognized parameters.</target>
        </trans-unit>
        <trans-unit id="82b11a01b54776ee5001861460779f6d398ad23d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMConfiguration&lt;/code&gt; interface represents the configuration of a document and maintains a table of recognized parameters. Using the configuration, it is possible to change &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; behavior, such as replacing the &lt;code&gt;CDATASection&lt;/code&gt; nodes with &lt;code&gt;Text&lt;/code&gt; nodes or specifying the type of the schema that must be used when the validation of the &lt;code&gt;Document&lt;/code&gt; is requested. &lt;code&gt;DOMConfiguration&lt;/code&gt; objects are also used in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407&quot;&gt;DOM Level 3 Load and Save&lt;/a&gt;] in the &lt;code&gt;DOMParser&lt;/code&gt; and &lt;code&gt;DOMSerializer&lt;/code&gt; interfaces.</source>
          <target state="translated">The &lt;code&gt;DOMConfiguration&lt;/code&gt; interface represents the configuration of a document and maintains a table of recognized parameters. Using the configuration, it is possible to change &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; behavior, such as replacing the &lt;code&gt;CDATASection&lt;/code&gt; nodes with &lt;code&gt;Text&lt;/code&gt; nodes or specifying the type of the schema that must be used when the validation of the &lt;code&gt;Document&lt;/code&gt; is requested. &lt;code&gt;DOMConfiguration&lt;/code&gt; objects are also used in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407&quot;&gt;DOM Level 3 Load and Save&lt;/a&gt;] in the &lt;code&gt;DOMParser&lt;/code&gt; and &lt;code&gt;DOMSerializer&lt;/code&gt; interfaces.</target>
        </trans-unit>
        <trans-unit id="d7afc7ff46a33fe4f21b25b7a573a81b30327775" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMConfiguration&lt;/code&gt; interface represents the configuration of a document and maintains a table of recognized parameters. Using the configuration, it is possible to change &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; behavior, such as replacing the &lt;code&gt;CDATASection&lt;/code&gt; nodes with &lt;code&gt;Text&lt;/code&gt; nodes or specifying the type of the schema that must be used when the validation of the &lt;code&gt;Document&lt;/code&gt; is requested. &lt;code&gt;DOMConfiguration&lt;/code&gt; objects are also used in [&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407&quot;&gt;DOM Level 3 Load and Save&lt;/a&gt;] in the &lt;code&gt;DOMParser&lt;/code&gt; and &lt;code&gt;DOMSerializer&lt;/code&gt; interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="434d1eb0d1e34777b50a09a3a9b1f4c4f63d9498" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMConfiguration&lt;/code&gt; object used by the &lt;code&gt;LSSerializer&lt;/code&gt; when serializing a DOM node.</source>
          <target state="translated">The &lt;code&gt;DOMConfiguration&lt;/code&gt; object used by the &lt;code&gt;LSSerializer&lt;/code&gt; when serializing a DOM node.</target>
        </trans-unit>
        <trans-unit id="fb3314e745fe451cf0f5a36a430396ef9aeed08d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMConfiguration&lt;/code&gt; object used when parsing an input source.</source>
          <target state="translated">The &lt;code&gt;DOMConfiguration&lt;/code&gt; object used when parsing an input source.</target>
        </trans-unit>
        <trans-unit id="71c48b09bc18768991965014c902a16366937d28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMConfiguration&lt;/code&gt; object used when parsing an input source. This &lt;code&gt;DOMConfiguration&lt;/code&gt; is specific to the parse operation. No parameter values from this &lt;code&gt;DOMConfiguration&lt;/code&gt; object are passed automatically to the &lt;code&gt;DOMConfiguration&lt;/code&gt; object on the &lt;code&gt;Document&lt;/code&gt; that is created, or used, by the parse operation. The DOM application is responsible for passing any needed parameter values from this &lt;code&gt;DOMConfiguration&lt;/code&gt; object to the &lt;code&gt;DOMConfiguration&lt;/code&gt; object referenced by the &lt;code&gt;Document&lt;/code&gt; object.</source>
          <target state="translated">The &lt;code&gt;DOMConfiguration&lt;/code&gt; object used when parsing an input source. This &lt;code&gt;DOMConfiguration&lt;/code&gt; is specific to the parse operation. No parameter values from this &lt;code&gt;DOMConfiguration&lt;/code&gt; object are passed automatically to the &lt;code&gt;DOMConfiguration&lt;/code&gt; object on the &lt;code&gt;Document&lt;/code&gt; that is created, or used, by the parse operation. The DOM application is responsible for passing any needed parameter values from this &lt;code&gt;DOMConfiguration&lt;/code&gt; object to the &lt;code&gt;DOMConfiguration&lt;/code&gt; object referenced by the &lt;code&gt;Document&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="5f940640249c3fa8bbdd06a679530451034e0110" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementation&lt;/code&gt; at the &lt;code&gt;index&lt;/code&gt; th position in the &lt;code&gt;DOMImplementationList&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if that is not a valid index.</source>
          <target state="translated">The &lt;code&gt;DOMImplementation&lt;/code&gt; at the &lt;code&gt;index&lt;/code&gt; th position in the &lt;code&gt;DOMImplementationList&lt;/code&gt; , or &lt;code&gt;null&lt;/code&gt; if that is not a valid index.</target>
        </trans-unit>
        <trans-unit id="cb86f01320ceee768f292b60f82902619aeadbc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementation&lt;/code&gt; interface provides a number of methods for performing operations that are independent of any particular instance of the document object model.</source>
          <target state="translated">The &lt;code&gt;DOMImplementation&lt;/code&gt; interface provides a number of methods for performing operations that are independent of any particular instance of the document object model.</target>
        </trans-unit>
        <trans-unit id="fa07a91096b79e4d54b620411a8b91c1db742167" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementation&lt;/code&gt; object that handles this document.</source>
          <target state="translated">The &lt;code&gt;DOMImplementation&lt;/code&gt; object that handles this document.</target>
        </trans-unit>
        <trans-unit id="84eb8320fa82f23c232c3ec79be4e98b618b9c3e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementation&lt;/code&gt; object that handles this document. A DOM application may use objects from multiple implementations.</source>
          <target state="translated">The &lt;code&gt;DOMImplementation&lt;/code&gt; object that handles this document. A DOM application may use objects from multiple implementations.</target>
        </trans-unit>
        <trans-unit id="32d6f56247f926d99c1101675af47d5e1ee36e65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementationList&lt;/code&gt; interface provides the abstraction of an ordered collection of DOM implementations, without defining or constraining how this collection is implemented.</source>
          <target state="translated">The &lt;code&gt;DOMImplementationList&lt;/code&gt; interface provides the abstraction of an ordered collection of DOM implementations, without defining or constraining how this collection is implemented.</target>
        </trans-unit>
        <trans-unit id="27185a00a607aada8160bc7bfee348df09ab860e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementationList&lt;/code&gt; interface provides the abstraction of an ordered collection of DOM implementations, without defining or constraining how this collection is implemented. The items in the &lt;code&gt;DOMImplementationList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">The &lt;code&gt;DOMImplementationList&lt;/code&gt; interface provides the abstraction of an ordered collection of DOM implementations, without defining or constraining how this collection is implemented. The items in the &lt;code&gt;DOMImplementationList&lt;/code&gt; are accessible via an integral index, starting from 0.</target>
        </trans-unit>
        <trans-unit id="d13d556105ead36068d76418e8945d9d1dfc01f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMString&lt;/code&gt; at the &lt;code&gt;index&lt;/code&gt;th position in the &lt;code&gt;DOMStringList&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if that is not a valid index.</source>
          <target state="translated">The &lt;code&gt;DOMString&lt;/code&gt; at the &lt;code&gt;index&lt;/code&gt; th position in the &lt;code&gt;DOMStringList&lt;/code&gt; , or &lt;code&gt;null&lt;/code&gt; if that is not a valid index.</target>
        </trans-unit>
        <trans-unit id="9da335a9af07ced964482feeab665d0da687a500" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMStringList&lt;/code&gt; interface provides the abstraction of an ordered collection of &lt;code&gt;DOMString&lt;/code&gt; values, without defining or constraining how this collection is implemented.</source>
          <target state="translated">The &lt;code&gt;DOMStringList&lt;/code&gt; interface provides the abstraction of an ordered collection of &lt;code&gt;DOMString&lt;/code&gt; values, without defining or constraining how this collection is implemented.</target>
        </trans-unit>
        <trans-unit id="3b5b4bd5bf71b89bdf22ce123898d7c89219fb1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMStringList&lt;/code&gt; interface provides the abstraction of an ordered collection of &lt;code&gt;DOMString&lt;/code&gt; values, without defining or constraining how this collection is implemented. The items in the &lt;code&gt;DOMStringList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">The &lt;code&gt;DOMStringList&lt;/code&gt; interface provides the abstraction of an ordered collection of &lt;code&gt;DOMString&lt;/code&gt; values, without defining or constraining how this collection is implemented. The items in the &lt;code&gt;DOMStringList&lt;/code&gt; are accessible via an integral index, starting from 0.</target>
        </trans-unit>
        <trans-unit id="26015e6375086abc108a98ed1191285ea4660c3a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataFlavor&lt;/code&gt; representing a Java Image class, where:</source>
          <target state="translated">The &lt;code&gt;DataFlavor&lt;/code&gt; representing a Java Image class, where:</target>
        </trans-unit>
        <trans-unit id="b33800b148f0b6f48b10a4b3a89f3169859a84bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataFlavor&lt;/code&gt; representing a Java Unicode String class, where:</source>
          <target state="translated">The &lt;code&gt;DataFlavor&lt;/code&gt; representing a Java Unicode String class, where:</target>
        </trans-unit>
        <trans-unit id="c6f306f1c242fb26d9a4ec3d96f2396980617873" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataFlavor&lt;/code&gt; representing plain text with Unicode encoding, where:</source>
          <target state="translated">The &lt;code&gt;DataFlavor&lt;/code&gt; representing plain text with Unicode encoding, where:</target>
        </trans-unit>
        <trans-unit id="f41cc015a47378ec64cceb98239ef99d458497d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataInput&lt;/code&gt; interface provides for reading bytes from a binary stream and reconstructing from them data in any of the Java primitive types.</source>
          <target state="translated">&lt;code&gt;DataInput&lt;/code&gt; 内のインタフェースは、バイナリストリームからバイトを読み取り、Javaプリミティブ型のいずれかでそれらのデータから再構成を提供します。</target>
        </trans-unit>
        <trans-unit id="713665bba38945d968dff6d6d30215a3f4b01909" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataInput&lt;/code&gt; interface provides for reading bytes from a binary stream and reconstructing from them data in any of the Java primitive types. There is also a facility for reconstructing a &lt;code&gt;String&lt;/code&gt; from data in &lt;a href=&quot;#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; format.</source>
          <target state="translated">&lt;code&gt;DataInput&lt;/code&gt; 内のインタフェースは、バイナリストリームからバイトを読み取り、Javaプリミティブ型のいずれかでそれらのデータから再構成を提供します。&lt;a href=&quot;#modified-utf-8&quot;&gt;変更されたUTF-8&lt;/a&gt;形式のデータから &lt;code&gt;String&lt;/code&gt; を再構築する機能もあります。</target>
        </trans-unit>
        <trans-unit id="55a2923cd40c06c6ccaeab383d62605e85c6dfc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataOutput&lt;/code&gt; interface provides for converting data from any of the Java primitive types to a series of bytes and writing these bytes to a binary stream.</source>
          <target state="translated">&lt;code&gt;DataOutput&lt;/code&gt; 内のインタフェースは、バイナリストリームにこれらのバイトをバイト一連のJavaプリミティブ型のいずれかからのデータを変換して書き込むために提供します。</target>
        </trans-unit>
        <trans-unit id="b1c1a548a4fef08005d8b50ede7de089c4162ad9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataOutput&lt;/code&gt; interface provides for converting data from any of the Java primitive types to a series of bytes and writing these bytes to a binary stream. There is also a facility for converting a &lt;code&gt;String&lt;/code&gt; into &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; format and writing the resulting series of bytes.</source>
          <target state="translated">&lt;code&gt;DataOutput&lt;/code&gt; 内のインタフェースは、バイナリストリームにこれらのバイトをバイト一連のJavaプリミティブ型のいずれかからのデータを変換して書き込むために提供します。変換するための設備もある &lt;code&gt;String&lt;/code&gt; に&lt;a href=&quot;datainput#modified-utf-8&quot;&gt;修飾されたUTF-8&lt;/a&gt;フォーマットとバイトの結果として生じる一連の書き込みが。</target>
        </trans-unit>
        <trans-unit id="f2b993a3883288d1e85e22ce467f77774bd2afb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataSource&lt;/code&gt; interface as a means of making a connection. The Java Naming and Directory Interface (JNDI) is used for registering a &lt;code&gt;DataSource&lt;/code&gt; object with a naming service and also for retrieving it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aace83782c4b7339832e081f06308b4b2c74e8e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataSource&lt;/code&gt; interface as a means of making a connection. The Java Naming and Directory Interface&amp;trade; (JNDI) is used for registering a &lt;code&gt;DataSource&lt;/code&gt; object with a naming service and also for retrieving it.</source>
          <target state="translated">The &lt;code&gt;DataSource&lt;/code&gt; interface as a means of making a connection. The Java Naming and Directory Interface&amp;trade; (JNDI) is used for registering a &lt;code&gt;DataSource&lt;/code&gt; object with a naming service and also for retrieving it.</target>
        </trans-unit>
        <trans-unit id="9a0d3b357b082ea9e3cef0a9c703c9ff4ba87e0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataSource&lt;/code&gt; interface as an alternative to the &lt;code&gt;DriverManager&lt;/code&gt; for establishing a connection with a data source</source>
          <target state="translated">The &lt;code&gt;DataSource&lt;/code&gt; interface as an alternative to the &lt;code&gt;DriverManager&lt;/code&gt; for establishing a connection with a data source</target>
        </trans-unit>
        <trans-unit id="7e888f0e387d5da74bbbdd521d7936f20c26d0bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataSource&lt;/code&gt; interface is implemented by a driver vendor. There are three types of implementations:</source>
          <target state="translated">The &lt;code&gt;DataSource&lt;/code&gt; interface is implemented by a driver vendor. There are three types of implementations:</target>
        </trans-unit>
        <trans-unit id="e66cf8de64fde88f1edf5f9938f96e91d086c9b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DatagramSocket&lt;/code&gt; and &lt;code&gt;MulticastSocket&lt;/code&gt; classes define convenience methods to set and get several socket options. Like &lt;code&gt;DatagramSocket&lt;/code&gt; this class also supports the &lt;a href=&quot;datagramsocket#setOption(java.net.SocketOption,T)&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datagramsocket#getOption(java.net.SocketOption)&quot;&gt;&lt;code&gt;getOption&lt;/code&gt;&lt;/a&gt; methods to set and query socket options. In addition to the socket options supported by &lt;a href=&quot;datagramsocket#SocketOptions&quot;&gt;&lt;code&gt;DatagramSocket&lt;/code&gt;&lt;/a&gt;, a &lt;code&gt;MulticastSocket&lt;/code&gt; supports the following socket options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7dd72f6410597688660cd677dec017364f6fa75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DatagramSocket&lt;/code&gt; class defines convenience methods to set and get several socket options. This class also defines the &lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getOption(java.net.SocketOption)&quot;&gt;&lt;code&gt;getOption&lt;/code&gt;&lt;/a&gt; methods to set and query socket options. A &lt;code&gt;DatagramSocket&lt;/code&gt; supports the following socket options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae5d85b0a42eaf39decbc0f3619a5ca6e1c5bca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; is a concrete implementation of the abstract &lt;code&gt;PersistenceDelegate&lt;/code&gt; class and is the delegate used by default for classes about which no information is available.</source>
          <target state="translated">&lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; は、抽象の具体的な実装である &lt;code&gt;PersistenceDelegate&lt;/code&gt; の固定のクラスあり、情報の得られないクラスがデフォルトで使用する委譲です。</target>
        </trans-unit>
        <trans-unit id="bd7b11133d7ce2a7408b56cd1889d08b8d8614ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; is a concrete implementation of the abstract &lt;code&gt;PersistenceDelegate&lt;/code&gt; class and is the delegate used by default for classes about which no information is available. The &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; provides, version resilient, public API-based persistence for classes that follow the JavaBeans conventions without any class specific configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75831a1da7576e44d5307c7a6c20301c7e176c73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; is a concrete implementation of the abstract &lt;code&gt;PersistenceDelegate&lt;/code&gt; class and is the delegate used by default for classes about which no information is available. The &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; provides, version resilient, public API-based persistence for classes that follow the JavaBeans&amp;trade; conventions without any class specific configuration.</source>
          <target state="translated">&lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; は、抽象の具体的な実装である &lt;code&gt;PersistenceDelegate&lt;/code&gt; の固定のクラスあり、情報の得られないクラスがデフォルトで使用する委譲です。 &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; は、任意のクラスの具体的な構成なしのJavaBeans&amp;trade;の規則に従ったクラスのバージョン弾力性、公開APIベースの永続性を提供します。</target>
        </trans-unit>
        <trans-unit id="215a5bccdc3c3338493160d70673629e874e958f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultSelectionType&lt;/code&gt; instance to use for specifying that a range of pages of the job should be printed.</source>
          <target state="translated">The &lt;code&gt;DefaultSelectionType&lt;/code&gt; instance to use for specifying that a range of pages of the job should be printed.</target>
        </trans-unit>
        <trans-unit id="87cb02d0585879539baa3952cfdd192574ff5ce1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultSelectionType&lt;/code&gt; instance to use for specifying that all pages of the job should be printed.</source>
          <target state="translated">The &lt;code&gt;DefaultSelectionType&lt;/code&gt; instance to use for specifying that all pages of the job should be printed.</target>
        </trans-unit>
        <trans-unit id="7467f10a2bae08e57981d42475216700740fb33f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultSelectionType&lt;/code&gt; instance to use for specifying that the current selection should be printed.</source>
          <target state="translated">The &lt;code&gt;DefaultSelectionType&lt;/code&gt; instance to use for specifying that the current selection should be printed.</target>
        </trans-unit>
        <trans-unit id="19c0a619c4b42fee2219550878c9a024c390cb05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DependsOn&lt;/code&gt; example might be coded as follows.</source>
          <target state="translated">&lt;code&gt;DependsOn&lt;/code&gt; 以下のように例では、符号化されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="65ab9904319fac8d824298c966242d71776b1070" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Descriptor&lt;/code&gt; for each of these objects will also have a field &lt;code&gt;originalType&lt;/code&gt; that is a string representing the Java type that appeared in the MXBean interface. The format of this string is described in the section &lt;a href=&quot;#type-names&quot;&gt;Type Names&lt;/a&gt; below.</source>
          <target state="translated">これらの各オブジェクトの &lt;code&gt;Descriptor&lt;/code&gt; には、MXBeanインターフェースに表示されたJavaタイプを表す文字列である &lt;code&gt;originalType&lt;/code&gt; フィールドもあります。この文字列の形式については、以下のセクション「&lt;a href=&quot;#type-names&quot;&gt;タイプ名」で&lt;/a&gt;説明しています。</target>
        </trans-unit>
        <trans-unit id="6f443be3508a6b4f42f8d8c9fdea432ec155aa3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Descriptor&lt;/code&gt; for the &lt;code&gt;MBeanInfo&lt;/code&gt; will have a field &lt;code&gt;mxbean&lt;/code&gt; whose value is the string &quot;&lt;code&gt;true&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;code&gt;Descriptor&lt;/code&gt; のため &lt;code&gt;MBeanInfo&lt;/code&gt; 、フィールドがあります &lt;code&gt;mxbean&lt;/code&gt; 値が「文字列である &lt;code&gt;true&lt;/code&gt; 」。</target>
        </trans-unit>
        <trans-unit id="1b680b80be304cce95a372170cb78cb2d5372791" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Desktop&lt;/code&gt; class allows interact with various desktop capabilities.</source>
          <target state="translated">The &lt;code&gt;Desktop&lt;/code&gt; class allows interact with various desktop capabilities.</target>
        </trans-unit>
        <trans-unit id="1f1f0413a258864da533d8fd6089fe10d4346b6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DestinationType&lt;/code&gt; instance to use for specifying print to file.</source>
          <target state="translated">The &lt;code&gt;DestinationType&lt;/code&gt; instance to use for specifying print to file.</target>
        </trans-unit>
        <trans-unit id="b5ede1c0ce13d3f1b86dab91c946e088de1e4810" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DestinationType&lt;/code&gt; instance to use for specifying print to printer.</source>
          <target state="translated">The &lt;code&gt;DestinationType&lt;/code&gt; instance to use for specifying print to printer.</target>
        </trans-unit>
        <trans-unit id="49617ba029f41bdc9141ce13707ee568f3cd073a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DiagnosticCommandMBean&lt;/code&gt; is registered to the &lt;a href=&quot;../../../../java.management/java/lang/management/managementfactory#getPlatformMBeanServer()&quot;&gt;platform MBeanServer&lt;/a&gt; as are other platform MBeans.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7866d7c1ad84ddbb686932e9c444832168e015e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DialogType&lt;/code&gt; instance to use for specifying no print dialog.</source>
          <target state="translated">The &lt;code&gt;DialogType&lt;/code&gt; instance to use for specifying no print dialog.</target>
        </trans-unit>
        <trans-unit id="48abce3f6c4158dea1664103a6b3d70f387042a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DialogType&lt;/code&gt; instance to use for specifying the cross-platform, pure Java print dialog.</source>
          <target state="translated">The &lt;code&gt;DialogType&lt;/code&gt; instance to use for specifying the cross-platform, pure Java print dialog.</target>
        </trans-unit>
        <trans-unit id="3a6c6f8055f6a41037fe263aa6e4d4b8b6491751" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DialogType&lt;/code&gt; instance to use for specifying the platform's native print dialog.</source>
          <target state="translated">The &lt;code&gt;DialogType&lt;/code&gt; instance to use for specifying the platform's native print dialog.</target>
        </trans-unit>
        <trans-unit id="4f7dec71d977b06ccc515422e0d73eebb02b25d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dictionary&lt;/code&gt; class is the abstract parent of any class, such as &lt;code&gt;Hashtable&lt;/code&gt;, which maps keys to values.</source>
          <target state="translated">&lt;code&gt;Dictionary&lt;/code&gt; クラスには、次のような、任意のクラスの抽象親である &lt;code&gt;Hashtable&lt;/code&gt; のキーを値にマップ、。</target>
        </trans-unit>
        <trans-unit id="699c289ae38cf13e2c3626e341eabeb096b9a84c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dictionary&lt;/code&gt; class is the abstract parent of any class, such as &lt;code&gt;Hashtable&lt;/code&gt;, which maps keys to values. Every key and every value is an object. In any one &lt;code&gt;Dictionary&lt;/code&gt; object, every key is associated with at most one value. Given a &lt;code&gt;Dictionary&lt;/code&gt; and a key, the associated element can be looked up. Any non-&lt;code&gt;null&lt;/code&gt; object can be used as a key and as a value.</source>
          <target state="translated">&lt;code&gt;Dictionary&lt;/code&gt; クラスには、次のような、任意のクラスの抽象親である &lt;code&gt;Hashtable&lt;/code&gt; のキーを値にマップ、。すべてのキーとすべての値はオブジェクトです。1つの &lt;code&gt;Dictionary&lt;/code&gt; オブジェクトでは、すべてのキーが最大1つの値に関連付けられています。与えられた &lt;code&gt;Dictionary&lt;/code&gt; とキーを、関連する要素が見上げることができます。 &lt;code&gt;null&lt;/code&gt; 以外のオブジェクトはすべて、キーおよび値として使用できます。</target>
        </trans-unit>
        <trans-unit id="a3ad2e80a7a32b62b60c202e22fbc509ccceb0d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dimension2D&lt;/code&gt; class is to encapsulate a width and a height dimension.</source>
          <target state="translated">The &lt;code&gt;Dimension2D&lt;/code&gt; class is to encapsulate a width and a height dimension.</target>
        </trans-unit>
        <trans-unit id="0d0310edb8899af0030fb1287455e59dc2d5cfc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dimension&lt;/code&gt; class encapsulates the width and height of a component (in integer precision) in a single object.</source>
          <target state="translated">The &lt;code&gt;Dimension&lt;/code&gt; class encapsulates the width and height of a component (in integer precision) in a single object.</target>
        </trans-unit>
        <trans-unit id="8fb5cd2dfe1f794fc509febd00afad290f14d0f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dimension&lt;/code&gt; class encapsulates the width and height of a component (in integer precision) in a single object. The class is associated with certain properties of components. Several methods defined by the &lt;code&gt;Component&lt;/code&gt; class and the &lt;code&gt;LayoutManager&lt;/code&gt; interface return a &lt;code&gt;Dimension&lt;/code&gt; object.</source>
          <target state="translated">The &lt;code&gt;Dimension&lt;/code&gt; class encapsulates the width and height of a component (in integer precision) in a single object. The class is associated with certain properties of components. Several methods defined by the &lt;code&gt;Component&lt;/code&gt; class and the &lt;code&gt;LayoutManager&lt;/code&gt; interface return a &lt;code&gt;Dimension&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="ac8ca23a09be9f2d05c779e843421c46aa3ea44e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DirContext&lt;/code&gt; interface represents a &lt;em&gt;directory context&lt;/em&gt;. It defines methods for examining and updating attributes associated with a &lt;em&gt;directory object&lt;/em&gt;, or &lt;em&gt;directory entry&lt;/em&gt; as it is sometimes called.</source>
          <target state="translated">&lt;code&gt;DirContext&lt;/code&gt; インタフェースは表し&lt;em&gt;ディレクトリコンテキストを&lt;/em&gt;。&lt;em&gt;ディレクトリオブジェクト&lt;/em&gt;、または&lt;em&gt;ディレクトリエントリに&lt;/em&gt;関連付けられている属性を検査および更新するためのメソッドが定義されています。</target>
        </trans-unit>
        <trans-unit id="4f5f26151bcc82651095413443582e43d30057ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DirectColorModel&lt;/code&gt; class is a &lt;code&gt;ColorModel&lt;/code&gt; class that works with pixel values that represent RGB color and alpha information as separate samples and that pack all samples for a single pixel into a single int, short, or byte quantity.</source>
          <target state="translated">The &lt;code&gt;DirectColorModel&lt;/code&gt; class is a &lt;code&gt;ColorModel&lt;/code&gt; class that works with pixel values that represent RGB color and alpha information as separate samples and that pack all samples for a single pixel into a single int, short, or byte quantity.</target>
        </trans-unit>
        <trans-unit id="867620aab0b989d77251241f205787cce5693818" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DirectColorModel&lt;/code&gt; class is a &lt;code&gt;ColorModel&lt;/code&gt; class that works with pixel values that represent RGB color and alpha information as separate samples and that pack all samples for a single pixel into a single int, short, or byte quantity. This class can be used only with ColorSpaces of type ColorSpace.TYPE_RGB. In addition, for each component of the ColorSpace, the minimum normalized component value obtained via the &lt;code&gt;getMinValue()&lt;/code&gt; method of ColorSpace must be 0.0, and the maximum value obtained via the &lt;code&gt;getMaxValue()&lt;/code&gt; method must be 1.0 (these min/max values are typical for RGB spaces). There must be three color samples in the pixel values and there can be a single alpha sample. For those methods that use a primitive array pixel representation of type &lt;code&gt;transferType&lt;/code&gt;, the array length is always one. The transfer types supported are DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, and DataBuffer.TYPE_INT. Color and alpha samples are stored in the single element of the array in bits indicated by bit masks. Each bit mask must be contiguous and masks must not overlap. The same masks apply to the single int pixel representation used by other methods. The correspondence of masks and color/alpha samples is as follows:</source>
          <target state="translated">The &lt;code&gt;DirectColorModel&lt;/code&gt; class is a &lt;code&gt;ColorModel&lt;/code&gt; class that works with pixel values that represent RGB color and alpha information as separate samples and that pack all samples for a single pixel into a single int, short, or byte quantity. This class can be used only with ColorSpaces of type ColorSpace.TYPE_RGB. In addition, for each component of the ColorSpace, the minimum normalized component value obtained via the &lt;code&gt;getMinValue()&lt;/code&gt; method of ColorSpace must be 0.0, and the maximum value obtained via the &lt;code&gt;getMaxValue()&lt;/code&gt; method must be 1.0 (these min/max values are typical for RGB spaces). There must be three color samples in the pixel values and there can be a single alpha sample. For those methods that use a primitive array pixel representation of type &lt;code&gt;transferType&lt;/code&gt; , the array length is always one. The transfer types supported are DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, and DataBuffer.TYPE_INT. Color and alpha samples are stored in the single element of the array in bits indicated by bit masks. Each bit mask must be contiguous and masks must not overlap. The same masks apply to the single int pixel representation used by other methods. The correspondence of masks and color/alpha samples is as follows:</target>
        </trans-unit>
        <trans-unit id="116fdd7be681df744083396585fbcc59f22bf9ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DisplayMode&lt;/code&gt; class encapsulates the bit depth, height, width, and refresh rate of a &lt;code&gt;GraphicsDevice&lt;/code&gt;.</source>
          <target state="translated">The &lt;code&gt;DisplayMode&lt;/code&gt; class encapsulates the bit depth, height, width, and refresh rate of a &lt;code&gt;GraphicsDevice&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19d8de06d0560ad2d757b5196f0ee295518354f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DisplayMode&lt;/code&gt; class encapsulates the bit depth, height, width, and refresh rate of a &lt;code&gt;GraphicsDevice&lt;/code&gt;. The ability to change graphics device's display mode is platform- and configuration-dependent and may not always be available (see &lt;a href=&quot;graphicsdevice#isDisplayChangeSupported()&quot;&gt;&lt;code&gt;GraphicsDevice.isDisplayChangeSupported()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">The &lt;code&gt;DisplayMode&lt;/code&gt; class encapsulates the bit depth, height, width, and refresh rate of a &lt;code&gt;GraphicsDevice&lt;/code&gt; . The ability to change graphics device's display mode is platform- and configuration-dependent and may not always be available (see &lt;a href=&quot;graphicsdevice#isDisplayChangeSupported()&quot;&gt; &lt;code&gt;GraphicsDevice.isDisplayChangeSupported()&lt;/code&gt; &lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="4fb3b5b3b8f09e2d62efe297d30103c7df42ac62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; interface represents the entire HTML or XML document.</source>
          <target state="translated">The &lt;code&gt;Document&lt;/code&gt; interface represents the entire HTML or XML document.</target>
        </trans-unit>
        <trans-unit id="529187b6ef833899d4c3fe664e30fd697bfbf6e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; interface represents the entire HTML or XML document. Conceptually, it is the root of the document tree, and provides the primary access to the document's data.</source>
          <target state="translated">The &lt;code&gt;Document&lt;/code&gt; interface represents the entire HTML or XML document. Conceptually, it is the root of the document tree, and provides the primary access to the document's data.</target>
        </trans-unit>
        <trans-unit id="77b826e655118178902fe5ff860eeed0127a2cf4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; is a container for text that serves as the model for swing text components.</source>
          <target state="translated">The &lt;code&gt;Document&lt;/code&gt; is a container for text that serves as the model for swing text components.</target>
        </trans-unit>
        <trans-unit id="b030057a42290c1393ddd1e1a7f09690aa85b082" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; is a container for text that serves as the model for swing text components. The goal for this interface is to scale from very simple needs (a plain text textfield) to complex needs (an HTML or XML document, for example).</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; swingテキストコンポーネントのモデルとなるテキストのコンテナです。このインターフェイスの目標は、非常に単純なニーズ（プレーンテキストのテキストフィールド）から複雑なニーズ（HTMLまたはXMLドキュメントなど）に拡張することです。</target>
        </trans-unit>
        <trans-unit id="fb8a86827947eed5054d0b92cc87db4d596781ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; object associated with this node.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; このノードに関連付けられたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="3fb4c76953555bf6e63541fe62da2f11a2880575" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; object associated with this node. This is also the &lt;code&gt;Document&lt;/code&gt; object used to create new nodes. When this node is a &lt;code&gt;Document&lt;/code&gt; or a &lt;code&gt;DocumentType&lt;/code&gt; which is not used with any &lt;code&gt;Document&lt;/code&gt; yet, this is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; このノードに関連付けられたオブジェクト。これは、新しいノードの作成に使用される &lt;code&gt;Document&lt;/code&gt; オブジェクトでもあります。このノードがある場合に &lt;code&gt;Document&lt;/code&gt; または &lt;code&gt;DocumentType&lt;/code&gt; のいずれかと共に使用されていない &lt;code&gt;Document&lt;/code&gt; はまだ、これは &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26a004a227df19ba0b28f836a76c1bed44daf5c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DocumentEvent&lt;/code&gt; interface provides a mechanism by which the user can create an Event of a type supported by the implementation.</source>
          <target state="translated">&lt;code&gt;DocumentEvent&lt;/code&gt; インターフェースは、ユーザが実装によってサポートされているタイプのイベントを作成することができるメカニズムを提供します。</target>
        </trans-unit>
        <trans-unit id="199332283596de73d645a3765aa17baba682d9ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DocumentEvent&lt;/code&gt; interface provides a mechanism by which the user can create an Event of a type supported by the implementation. It is expected that the &lt;code&gt;DocumentEvent&lt;/code&gt; interface will be implemented on the same object which implements the &lt;code&gt;Document&lt;/code&gt; interface in an implementation which supports the Event model.</source>
          <target state="translated">&lt;code&gt;DocumentEvent&lt;/code&gt; インタフェースは、ユーザが実装によってサポートされているタイプのイベントを作成することができるメカニズムを提供します。 &lt;code&gt;DocumentEvent&lt;/code&gt; インターフェイスは、Eventモデルをサポートする実装で &lt;code&gt;Document&lt;/code&gt; インターフェイスを実装するのと同じオブジェクトに実装されることが期待されます。</target>
        </trans-unit>
        <trans-unit id="7101cf8f8255ce6bc7b029096bf0d5bb178800ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DocumentStyle&lt;/code&gt; interface provides a mechanism by which the style sheets embedded in a document can be retrieved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379936dd9c5d0d4d3e2cfd1b388bc802604c10f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DocumentStyle&lt;/code&gt; interface provides a mechanism by which the style sheets embedded in a document can be retrieved. The expectation is that an instance of the &lt;code&gt;DocumentStyle&lt;/code&gt; interface can be obtained by using binding-specific casting methods on an instance of the &lt;code&gt;Document&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384468ad54c38d729b48375adee37805e7c7400d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DocumentView&lt;/code&gt; interface is implemented by &lt;code&gt;Document&lt;/code&gt; objects in DOM implementations supporting DOM Views.</source>
          <target state="translated">&lt;code&gt;DocumentView&lt;/code&gt; のインターフェースがで実装されている &lt;code&gt;Document&lt;/code&gt; DOMビューをサポートするDOM実装でオブジェクト。</target>
        </trans-unit>
        <trans-unit id="74e363801907d5d58d5de67ff49207cebfba94a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DocumentView&lt;/code&gt; interface is implemented by &lt;code&gt;Document&lt;/code&gt; objects in DOM implementations supporting DOM Views. It provides an attribute to retrieve the default view of a document.</source>
          <target state="translated">&lt;code&gt;DocumentView&lt;/code&gt; のインターフェースがで実装されている &lt;code&gt;Document&lt;/code&gt; DOMビューをサポートするDOM実装でオブジェクト。ドキュメントのデフォルトビューを取得するための属性を提供します。</target>
        </trans-unit>
        <trans-unit id="47632e0ee471d6ff392a53397568f93dda81d8af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class defines a geometric path with coordinates stored in double precision floating point.</source>
          <target state="translated">&lt;code&gt;Double&lt;/code&gt; クラスは、倍精度浮動小数点に格納された座標の幾何学的経路を画定します。</target>
        </trans-unit>
        <trans-unit id="017ba6ccfd5ef0c2e6010f2245960c644585fe90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class defines a point specified in &lt;code&gt;double&lt;/code&gt; precision.</source>
          <target state="translated">&lt;code&gt;Double&lt;/code&gt; クラスが指定された点で定義されて &lt;code&gt;double&lt;/code&gt; 精度を。</target>
        </trans-unit>
        <trans-unit id="d053ec0f24041ad204da5a3f15acb9d3c4182514" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class defines a rectangle specified in double coordinates.</source>
          <target state="translated">&lt;code&gt;Double&lt;/code&gt; クラスは、double座標で指定された矩形を定義します。</target>
        </trans-unit>
        <trans-unit id="822e19dd4d622e1e3f2e386d97d2b753bdbef4ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class defines a rectangle with rounded corners all specified in &lt;code&gt;double&lt;/code&gt; coordinates.</source>
          <target state="translated">&lt;code&gt;Double&lt;/code&gt; クラスは、すべてで指定された丸みを付けた角を持つ矩形を定義 &lt;code&gt;double&lt;/code&gt; 座標。</target>
        </trans-unit>
        <trans-unit id="81bdf6fd0c82e69be8a8a2d7b63a21805bc32c88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class defines an ellipse specified in &lt;code&gt;double&lt;/code&gt; precision.</source>
          <target state="translated">&lt;code&gt;Double&lt;/code&gt; クラスがで指定された楕円を定義し &lt;code&gt;double&lt;/code&gt; の精度を。</target>
        </trans-unit>
        <trans-unit id="f0d66cda55834a4404c6ebd9f0fc24fcb8fcd600" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;double&lt;/code&gt; in an object.</source>
          <target state="translated">&lt;code&gt;Double&lt;/code&gt; クラスは、プリミティブ型の値ラップ &lt;code&gt;double&lt;/code&gt; オブジェクトでを。</target>
        </trans-unit>
        <trans-unit id="d119dbf666fc6ea150e2c28f463b377c7a4b4f23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;double&lt;/code&gt; in an object. An object of type &lt;code&gt;Double&lt;/code&gt; contains a single field whose type is &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Double&lt;/code&gt; クラスは、プリミティブ型の値ラップ &lt;code&gt;double&lt;/code&gt; オブジェクトでを。タイプ &lt;code&gt;Double&lt;/code&gt; のオブジェクトには、タイプが &lt;code&gt;double&lt;/code&gt; の単一フィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="fc7999e5f93a2ae9606da301019747ddf0ddb202" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragGestureListener&lt;/code&gt; associated with this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;DragGestureListener&lt;/code&gt; 関連付けられている &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6fe201fb5b21786fce11d2dea41a8f6a73200d29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragGestureListener&lt;/code&gt; causes the &lt;code&gt;DragSource&lt;/code&gt; to initiate the Drag and Drop operation on behalf of the user, perhaps animating the GUI Cursor and/or rendering an &lt;code&gt;Image&lt;/code&gt; of the item(s) that are the subject of the operation.</source>
          <target state="translated">&lt;code&gt;DragGestureListener&lt;/code&gt; は生じ &lt;code&gt;DragSource&lt;/code&gt; おそらくGUIカーソルをアニメーション及び/又はレンダリング、ユーザの代わりにドラッグ＆ドロップ操作を開始するために、 &lt;code&gt;Image&lt;/code&gt; 操作の対象となる項目（複数可）のを。</target>
        </trans-unit>
        <trans-unit id="c172123b5043f06b40fb19a64e6a11d4e9d26d67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragGestureRecognizer&lt;/code&gt; is an abstract base class for the specification of a platform-dependent listener that can be associated with a particular &lt;code&gt;Component&lt;/code&gt; in order to identify platform-dependent drag initiating gestures.</source>
          <target state="translated">&lt;code&gt;DragGestureRecognizer&lt;/code&gt; 特定に関連付けることができるプラットフォーム依存のリスナーを指定するための抽象基底クラスである &lt;code&gt;Component&lt;/code&gt; 、プラットフォーム依存のドラッグ開始ジェスチャーを識別するために。</target>
        </trans-unit>
        <trans-unit id="743c929869d3da1e85b173832df8a167d0eee307" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSource&lt;/code&gt; associated with this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DragSource&lt;/code&gt; をこれに関連し &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0746520642e02ffbdf36d292090f49a2c350d172" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSource&lt;/code&gt; is the entity responsible for the initiation of the Drag and Drop operation, and may be used in a number of scenarios:</source>
          <target state="translated">&lt;code&gt;DragSource&lt;/code&gt; ドラッグ＆ドロップ操作の開始を担当するエンティティであり、多くのシナリオで使用することができます。</target>
        </trans-unit>
        <trans-unit id="792edd86c73a1bd56e5f3162af8a109f1c8f4ef4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSource&lt;/code&gt; is the entity responsible for the initiation of the Drag and Drop operation, and may be used in a number of scenarios: 1 default instance per JVM for the lifetime of that JVM.</source>
          <target state="translated">&lt;code&gt;DragSource&lt;/code&gt; ドラッグ＆ドロップ操作の開始を担当するエンティティであり、多くのシナリオで使用することができる。そのJVMの寿命のためのJVMごとに1つのデフォルトインスタンス。</target>
        </trans-unit>
        <trans-unit id="2f65ca8e9c306293912bec7fb7b044e7fe1b5243" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSource&lt;/code&gt; object manifests &quot;Drag Over&quot; feedback to the user, in the typical case by animating the GUI &lt;code&gt;Cursor&lt;/code&gt; associated with the logical cursor.</source>
          <target state="translated">&lt;code&gt;DragSource&lt;/code&gt; オブジェクトマニフェストGUIアニメーションによる典型的な場合に、ユーザへのフィードバックの「上にドラッグ」、 &lt;code&gt;Cursor&lt;/code&gt; 論理カーソルに関連付けられています。</target>
        </trans-unit>
        <trans-unit id="325a91f8655dca08a413883aa100c1009cbe6c94" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSourceContext&lt;/code&gt; class is responsible for managing the initiator side of the Drag and Drop protocol.</source>
          <target state="translated">&lt;code&gt;DragSourceContext&lt;/code&gt; のクラスは、ドラッグ＆ドロッププロトコルのイニシエータ側を管理する責任があります。</target>
        </trans-unit>
        <trans-unit id="ca76b9e0dd22f7be4d0016ce00a53938007ea043" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSourceContext&lt;/code&gt; class is responsible for managing the initiator side of the Drag and Drop protocol. In particular, it is responsible for managing drag event notifications to the &lt;a href=&quot;dragsourcelistener&quot;&gt;DragSourceListeners&lt;/a&gt; and &lt;a href=&quot;dragsourcemotionlistener&quot;&gt;DragSourceMotionListeners&lt;/a&gt;, and providing the &lt;a href=&quot;../../../../java.datatransfer/java/awt/datatransfer/transferable&quot;&gt;&lt;code&gt;Transferable&lt;/code&gt;&lt;/a&gt; representing the source data for the drag operation.</source>
          <target state="translated">&lt;code&gt;DragSourceContext&lt;/code&gt; のクラスは、ドラッグ＆ドロッププロトコルのイニシエータ側を管理する責任があります。特に、&lt;a href=&quot;dragsourcelistener&quot;&gt;DragSourceListeners&lt;/a&gt;および&lt;a href=&quot;dragsourcemotionlistener&quot;&gt;DragSourceMotionListeners&lt;/a&gt;へのドラッグイベント通知を管理し、ドラッグ操作のソースデータを表す&lt;a href=&quot;../../../../java.datatransfer/java/awt/datatransfer/transferable&quot;&gt; &lt;code&gt;Transferable&lt;/code&gt; &lt;/a&gt;を提供します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
