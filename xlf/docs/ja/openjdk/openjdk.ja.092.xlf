<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="6bc9f7376f9d46b9c3676b5f263505b90a9525f6" translate="yes" xml:space="preserve">
          <source>Every data line has an audio format associated with its data stream. The audio format of a source (playback) data line indicates what kind of data the data line expects to receive for output. For a target (capture) data line, the audio format specifies the kind of the data that can be read from the line. Sound files also have audio formats, of course. The &lt;code&gt;&lt;a href=&quot;audiofileformat&quot;&gt;&lt;code&gt;AudioFileFormat&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class encapsulates an &lt;code&gt;AudioFormat&lt;/code&gt; in addition to other, file-specific information. Similarly, an &lt;code&gt;&lt;a href=&quot;audioinputstream&quot;&gt;&lt;code&gt;AudioInputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; has an &lt;code&gt;AudioFormat&lt;/code&gt;.</source>
          <target state="translated">すべてのデータラインには、そのデータストリームに関連付けられたオーディオ形式があります。ソース（再生）データラインのオーディオ形式は、データラインが出力用に受け取ることを予期しているデータの種類を示します。ターゲット（キャプチャー）データ行の場合、オーディオ形式は、その行から読み取ることができるデータの種類を指定します。もちろん、サウンドファイルにもオーディオ形式があります。 &lt;code&gt;&lt;a href=&quot;audiofileformat&quot;&gt;&lt;code&gt;AudioFileFormat&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; のクラスは、カプセル化 &lt;code&gt;AudioFormat&lt;/code&gt; 他の、ファイル固有の情報に加えて。同様に、 &lt;code&gt;&lt;a href=&quot;audioinputstream&quot;&gt;&lt;code&gt;AudioInputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; には &lt;code&gt;AudioFormat&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="400eb17d34895f31a50d49eb527e23742e1ce0fd" translate="yes" xml:space="preserve">
          <source>Every dot or underline character is removed and the following character is set to be an upper-case character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366c8a74ce0bfae1443528e3eba33644b699b273" translate="yes" xml:space="preserve">
          <source>Every effort will be made to avoid introducing additional backwards incompatibilities; however, sometimes there is no other alternative.</source>
          <target state="translated">後方互換性の追加を避けるためにあらゆる努力をしていますが、他の選択肢がない場合もあります。</target>
        </trans-unit>
        <trans-unit id="211363e25e541ac2508a2b6cbbe3e187ee462555" translate="yes" xml:space="preserve">
          <source>Every effort will be made to ensure that &lt;code&gt;FocusEvent&lt;/code&gt;s generated as a result of this request will have the specified temporary value. However, because specifying an arbitrary temporary state may not be implementable on all native windowing systems, correct behavior for this method can be guaranteed only for lightweight &lt;code&gt;Component&lt;/code&gt;s. This method is not intended for general use, but exists instead as a hook for lightweight component libraries, such as Swing.</source>
          <target state="translated">このリクエストの結果として生成された &lt;code&gt;FocusEvent&lt;/code&gt; が指定された一時的な値を持つように、あらゆる努力が払われます。ただし、任意の一時状態を指定することは、すべてのネイティブウィンドウシステムで実装できるとは限らないため、このメソッドの正しい動作は、軽量 &lt;code&gt;Component&lt;/code&gt; に対してのみ保証されます。このメソッドは一般的な使用を目的としていませんが、代わりにSwingなどの軽量コンポーネントライブラリのフックとして存在します。</target>
        </trans-unit>
        <trans-unit id="d29fad02412774cea3b6cda4e795f66b27608427" translate="yes" xml:space="preserve">
          <source>Every effort will be made to ensure that &lt;code&gt;FocusEvent&lt;/code&gt;s generated as a result of this request will have the specified temporary value. However, because specifying an arbitrary temporary state may not be implementable on all native windowing systems, correct behavior for this method can be guaranteed only for lightweight components. This method is not intended for general use, but exists instead as a hook for lightweight component libraries, such as Swing.</source>
          <target state="translated">このリクエストの結果として生成された &lt;code&gt;FocusEvent&lt;/code&gt; が指定された一時的な値を持つように、あらゆる努力が払われます。ただし、任意の一時状態を指定することは、すべてのネイティブウィンドウシステムで実装できるとは限らないため、このメソッドの正しい動作は、軽量コンポーネントに対してのみ保証されます。このメソッドは一般的な使用を目的としていませんが、代わりにSwingなどの軽量コンポーネントライブラリのフックとして存在します。</target>
        </trans-unit>
        <trans-unit id="fbc67dc4e772fa63fed216a6413652fc1248eb38" translate="yes" xml:space="preserve">
          <source>Every function will be able to observe the incoming values &lt;code&gt;(a...)&lt;/code&gt; of all loop parameters.</source>
          <target state="translated">すべての関数は、すべてのループパラメーターの入力値 &lt;code&gt;(a...)&lt;/code&gt; を監視できます。</target>
        </trans-unit>
        <trans-unit id="4e05f0dbed47a3a7729de12a05dff044fd623214" translate="yes" xml:space="preserve">
          <source>Every implementation must support the RMI connector protocol with the default RMI transport, specified with string &lt;code&gt;rmi&lt;/code&gt;.</source>
          <target state="translated">すべての実装は、文字列 &lt;code&gt;rmi&lt;/code&gt; で指定されたデフォルトのRMIトランスポートでRMIコネクタプロトコルをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="df31a1eb1dbb104db07ad3b697f21ceb935e7500" translate="yes" xml:space="preserve">
          <source>Every implementation must support the RMI connector protocol with the default RMI transport, specified with string &lt;code&gt;rmi&lt;/code&gt;. An implementation may optionally support the RMI connector protocol with the RMI/IIOP transport, specified with the string &lt;code&gt;iiop&lt;/code&gt;.</source>
          <target state="translated">すべての実装は、文字列 &lt;code&gt;rmi&lt;/code&gt; で指定されたデフォルトのRMIトランスポートでRMIコネクタプロトコルをサポートする必要があります。実装では、オプションで、文字列 &lt;code&gt;iiop&lt;/code&gt; で指定されたRMI / IIOPトランスポートでRMIコネクタプロトコルをサポートできます。</target>
        </trans-unit>
        <trans-unit id="2c3c76cda0eb5819043de68e450051b3f76ba87e" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support at least one strong &lt;code&gt;SecureRandom&lt;/code&gt; implementation.</source>
          <target state="translated">Javaプラットフォームのすべての実装は、少なくとも1つの強力な &lt;code&gt;SecureRandom&lt;/code&gt; 実装をサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="e768526fe3ad1864af2d7e6f23a3c5656b4bcdec" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; algorithms and keysizes in parentheses:</source>
          <target state="translated">Javaプラットフォームのすべての実装は、次の標準 &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; アルゴリズムをサポートし、括弧内にキーサイズを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="a1b227c428a22ceb829f4ee39216b99de8e4dacd" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;AlgorithmParameters&lt;/code&gt; algorithms:</source>
          <target state="translated">Javaプラットフォームのすべての実装では、次の標準 &lt;code&gt;AlgorithmParameters&lt;/code&gt; アルゴリズムをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="36183fd5a13f488280d4fb3c8e6af2f565438a24" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;CertPath&lt;/code&gt; encodings:</source>
          <target state="translated">Javaプラットフォームのすべての実装は、次の標準 &lt;code&gt;CertPath&lt;/code&gt; エンコーディングをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="8fbbfbcc6c3282ae40b7b52726bc73b110a7e518" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;CertPathBuilder&lt;/code&gt; algorithm:</source>
          <target state="translated">Javaプラットフォームのすべての実装は、次の標準 &lt;code&gt;CertPathBuilder&lt;/code&gt; アルゴリズムをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="8c854fc4b2a13f95ccfcbf19c6bf89cad9cb19d3" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;CertPathValidator&lt;/code&gt; algorithm:</source>
          <target state="translated">Javaプラットフォームのすべての実装は、次の標準 &lt;code&gt;CertPathValidator&lt;/code&gt; アルゴリズムをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="f404f8a40c78497bbc8bd841e4d1ef18b671a124" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;CertStore&lt;/code&gt; type:</source>
          <target state="translated">Javaプラットフォームのすべての実装は、次の標準 &lt;code&gt;CertStore&lt;/code&gt; タイプをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="124008f7aafcdf6cb7b340de89da089f74397daa" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;CertificateFactory&lt;/code&gt; type:</source>
          <target state="translated">Javaプラットフォームのすべての実装は、次の標準の &lt;code&gt;CertificateFactory&lt;/code&gt; タイプをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="b6ce802bc3f8ee802ff739c73f266086881b5312" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;Cipher&lt;/code&gt; transformations with the keysizes in parentheses:</source>
          <target state="translated">Javaプラットフォームのすべての実装は、括弧内のキーサイズを使用して、次の標準の &lt;code&gt;Cipher&lt;/code&gt; 変換をサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="1cd37f2f3f66f6d9c590cd0092b1ff35c6033b9c" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;KeyAgreement&lt;/code&gt; algorithm:</source>
          <target state="translated">Javaプラットフォームのすべての実装は、次の標準 &lt;code&gt;KeyAgreement&lt;/code&gt; アルゴリズムをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="781bf16ce14e1c4c0e979592a2bfeeeec3292242" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;KeyFactory&lt;/code&gt; algorithms:</source>
          <target state="translated">Javaプラットフォームのすべての実装は、次の標準 &lt;code&gt;KeyFactory&lt;/code&gt; アルゴリズムをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="5c82792156a06e15c51a159e6f95ffc1f02c653e" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;KeyGenerator&lt;/code&gt; algorithms with the keysizes in parentheses:</source>
          <target state="translated">Javaプラットフォームのすべての実装では、括弧内のキー &lt;code&gt;KeyGenerator&lt;/code&gt; 使用して、次の標準のKeyGeneratorアルゴリズムをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="565ef7a135094ae7c9497370306a550225463556" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;KeyPairGenerator&lt;/code&gt; algorithms and keysizes in parentheses:</source>
          <target state="translated">Javaプラットフォームのすべての実装は、次の標準の &lt;code&gt;KeyPairGenerator&lt;/code&gt; アルゴリズムと括弧内のキーサイズをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="810bc6584402251bb16e4436643c78db51223d64" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;KeyStore&lt;/code&gt; type:</source>
          <target state="translated">Javaプラットフォームのすべての実装は、次の標準の &lt;code&gt;KeyStore&lt;/code&gt; タイプをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="3fde90e244ed04783a64d7c3f79b1f1be14ebf90" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;Mac&lt;/code&gt; algorithms:</source>
          <target state="translated">Javaプラットフォームのすべての実装は、次の標準 &lt;code&gt;Mac&lt;/code&gt; アルゴリズムをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="deaf00b5bac5cac5cc9a6e066811de33d0e15a66" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;MessageDigest&lt;/code&gt; algorithms:</source>
          <target state="translated">Javaプラットフォームのすべての実装は、次の標準 &lt;code&gt;MessageDigest&lt;/code&gt; アルゴリズムをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="1d018400a5f877e1c83e6ec3d87f0e0de56b8ca1" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;SSLContext&lt;/code&gt; protocol:</source>
          <target state="translated">Javaプラットフォームのすべての実装は、次の標準 &lt;code&gt;SSLContext&lt;/code&gt; プロトコルをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="b065b96ea7c67ea8584f060705c3218c877ca3dd" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;SSLContext&lt;/code&gt; protocols:</source>
          <target state="translated">次の標準 &lt;code&gt;SSLContext&lt;/code&gt; プロトコルをサポートするには、Javaプラットフォームのすべての実装が必要です。</target>
        </trans-unit>
        <trans-unit id="6ede6336e7945995dd841a37d9835cfe081a53f7" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;SecretKeyFactory&lt;/code&gt; algorithms:</source>
          <target state="translated">Javaプラットフォームのすべての実装は、次の標準の &lt;code&gt;SecretKeyFactory&lt;/code&gt; アルゴリズムをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="e8238579adfd0d436e396d91ba6fb668e167862d" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;Signature&lt;/code&gt; algorithms:</source>
          <target state="translated">Javaプラットフォームのすべての実装は、次の標準的な &lt;code&gt;Signature&lt;/code&gt; アルゴリズムをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="f1531808651804b236de9dcbccdd1e882c7ff9b5" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard &lt;code&gt;TrustManagerFactory&lt;/code&gt; algorithm:</source>
          <target state="translated">次の標準 &lt;code&gt;TrustManagerFactory&lt;/code&gt; アルゴリズムをサポートするには、Javaプラットフォームのすべての実装が必要です。</target>
        </trans-unit>
        <trans-unit id="ae01fa47d60eca808e6b8651827b4bc16c9a7506" translate="yes" xml:space="preserve">
          <source>Every implementation of the Java platform is required to support the following standard charsets. Consult the release documentation for your implementation to see if any other charsets are supported. The behavior of such optional charsets may differ between implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13d2c3e3ba71642dc554aced507db49f5898d9c" translate="yes" xml:space="preserve">
          <source>Every instance of &lt;code&gt;JapaneseEra&lt;/code&gt; that is returned from the &lt;a href=&quot;#values()&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; method has an int value (available via &lt;a href=&quot;era#getValue()&quot;&gt;&lt;code&gt;Era.getValue()&lt;/code&gt;&lt;/a&gt; which is accepted by this method.</source>
          <target state="translated">&lt;a href=&quot;#values()&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt;メソッドから返される &lt;code&gt;JapaneseEra&lt;/code&gt; のすべてのインスタンスには、このメソッドで受け入れられるint値（&lt;a href=&quot;era#getValue()&quot;&gt; &lt;code&gt;Era.getValue()&lt;/code&gt; &lt;/a&gt;を介して利用可能）があります。</target>
        </trans-unit>
        <trans-unit id="b2ddbdbb62f077146c9ec51639a6d40e3a66685c" translate="yes" xml:space="preserve">
          <source>Every instance of the Java virtual machine has a default character encoding determined during virtual-machine startup and typically depends upon the locale and charset being used by the underlying operating system. In a distributed environment there is no guarantee that two VM share the same default encoding. Thus clients which want to stream platform encoded text data from the host platform to a Java Print Service instance must explicitly declare the charset and not rely on defaults.</source>
          <target state="translated">Java 仮想マシンのすべてのインスタンスは、仮想マシンの起動時に決定されるデフォルトの文字エンコーディングを持っており、通常、基礎となるオペレーティングシステムで使用されているロケールと文字セットに依存します。分散環境では、2つの仮想マシンが同じデフォルトエンコーディングを共有する保証はありません。そのため、プラットフォームでエンコードされたテキストデータをホストプラットフォームからJava Print Serviceインスタンスにストリーミングしたいクライアントは、デフォルトの文字コードに頼らず、明示的に文字コードを宣言する必要があります。</target>
        </trans-unit>
        <trans-unit id="dbd422b750b5e2c8ade090a693d83359f35fc22d" translate="yes" xml:space="preserve">
          <source>Every instance of the Java virtual machine has a default charset, which may or may not be one of the standard charsets. The default charset is determined during virtual-machine startup and typically depends upon the locale and charset being used by the underlying operating system.</source>
          <target state="translated">Java 仮想マシンのすべてのインスタンスはデフォルトの文字セットを持っていますが、これは標準の文字セットの一つであるかもしれませんし、そうでないかもしれません。デフォルトの文字セットは仮想マシンの起動時に決定され、通常は基礎となるオペレーティングシステムで使用されているロケールと文字セットに依存します。</target>
        </trans-unit>
        <trans-unit id="f3ddb8dee6fa9409f30b46d9ce2d1053a2bbb8d1" translate="yes" xml:space="preserve">
          <source>Every method handle reports its type descriptor via the &lt;a href=&quot;#type()&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; accessor. This type descriptor is a &lt;a href=&quot;methodtype&quot;&gt;&lt;code&gt;MethodType&lt;/code&gt;&lt;/a&gt; object, whose structure is a series of classes, one of which is the return type of the method (or &lt;code&gt;void.class&lt;/code&gt; if none).</source>
          <target state="translated">すべてのメソッドハンドルは、&lt;a href=&quot;#type()&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;アクセサーを介してそのタイプ記述子を報告します。この型記述子は&lt;a href=&quot;methodtype&quot;&gt; &lt;code&gt;MethodType&lt;/code&gt; &lt;/a&gt;オブジェクトであり、その構造は一連のクラスであり、そのうちの1つはメソッドの戻り値の型（または &lt;code&gt;void.class&lt;/code&gt; ない場合はvoid.class）です。</target>
        </trans-unit>
        <trans-unit id="6e8832439bbb3d5ffbaf359959cba944c7e15f8c" translate="yes" xml:space="preserve">
          <source>Every method handle reports its type descriptor via the &lt;a href=&quot;methodhandle#type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; accessor. This type descriptor is a &lt;a href=&quot;methodtype&quot;&gt;&lt;code&gt;MethodType&lt;/code&gt;&lt;/a&gt; object, whose structure is a series of classes, one of which is the return type of the method (or &lt;code&gt;void.class&lt;/code&gt; if none).</source>
          <target state="translated">すべてのメソッドハンドルは、&lt;a href=&quot;methodhandle#type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;アクセサーを介して型記述子を報告します。この型記述子は&lt;a href=&quot;methodtype&quot;&gt; &lt;code&gt;MethodType&lt;/code&gt; &lt;/a&gt;オブジェクトであり、その構造は一連のクラスであり、そのうちの1つはメソッドの戻り値の型です（ない場合は &lt;code&gt;void.class&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="204eed6769e6b6286bdf99f519a02d70fc5b8626" translate="yes" xml:space="preserve">
          <source>Every method which produces formatted output requires a</source>
          <target state="translated">フォーマットされた出力を生成するすべてのメソッドは</target>
        </trans-unit>
        <trans-unit id="c40476ff26c7c71e385ad1c1ccd116b319483565" translate="yes" xml:space="preserve">
          <source>Every naming method in the &lt;code&gt;Context&lt;/code&gt; interface has two overloads: one that accepts a &lt;code&gt;Name&lt;/code&gt; argument and one that accepts a string name. &lt;code&gt;Name&lt;/code&gt; is an interface that represents a generic name--an ordered sequence of zero of more components. For these methods, &lt;code&gt;Name&lt;/code&gt; can be used to represent a &lt;em&gt;composite name&lt;/em&gt; (&lt;code&gt;CompositeName&lt;/code&gt;) so that you can name an object using a name which spans multiple namespaces.</source>
          <target state="translated">&lt;code&gt;Context&lt;/code&gt; インターフェースのすべてのネーミングメソッドには2つのオーバーロードがあります。1つは &lt;code&gt;Name&lt;/code&gt; 引数を受け入れるもので、もう1つは文字列名を受け入れるものです。 &lt;code&gt;Name&lt;/code&gt; は、一般的な名前、つまり0個以上のコンポーネントの順序付けられたシーケンスを表すインターフェースです。これらのメソッドでは、 &lt;code&gt;Name&lt;/code&gt; を使用して&lt;em&gt;合成名&lt;/em&gt;（ &lt;code&gt;CompositeName&lt;/code&gt; ）を表すことができるため、複数の名前空間にまたがる名前を使用してオブジェクトに名前を付けることができます。</target>
        </trans-unit>
        <trans-unit id="10e8cc10b5240e5593d87feab50e7173166eb9fa" translate="yes" xml:space="preserve">
          <source>Every node's path name relative to its parent is its node name (except for the root node, which does not have a parent).</source>
          <target state="translated">すべてのノードの親からの相対パス名は、そのノード名になります(親を持たないルートノードを除く)。</target>
        </trans-unit>
        <trans-unit id="2e7724eecbb51838e4a538729cfe1179c7bf709a" translate="yes" xml:space="preserve">
          <source>Every node's path name relative to itself is the empty string.</source>
          <target state="translated">すべてのノードの相対パス名は空文字列です。</target>
        </trans-unit>
        <trans-unit id="87a8583605dbf5de314547d642597590b3020da9" translate="yes" xml:space="preserve">
          <source>Every node's path name relative to the root is its absolute path name with the initial slash character removed.</source>
          <target state="translated">ルートからの相対的な各ノードのパス名は、最初のスラッシュ文字を削除した絶対パス名になります。</target>
        </trans-unit>
        <trans-unit id="83c2e96558c10c793f3a2038a24cfafac28ec8ec" translate="yes" xml:space="preserve">
          <source>Every non-omitted pred function must have a &lt;code&gt;boolean&lt;/code&gt; return type.</source>
          <target state="translated">省略されていないすべてのpred関数は、 &lt;code&gt;boolean&lt;/code&gt; 戻り値の型を持っている必要があります。</target>
        </trans-unit>
        <trans-unit id="c489b63daa2b9a9b6180d50ffd3730d692613aef" translate="yes" xml:space="preserve">
          <source>Every other method specifies that there is an operation with the same name as the method. The Java type and Open type of the return value and of each parameter are determined by the mapping rules below.</source>
          <target state="translated">それ以外のメソッドは、そのメソッドと同じ名前の操作があることを指定します。戻り値と各パラメータのJava型とOpen型は以下のマッピングルールで決定されます。</target>
        </trans-unit>
        <trans-unit id="0a72151bc8443dd4828381f577ac74378fb9ef8f" translate="yes" xml:space="preserve">
          <source>Every pathname that denotes an existing file or directory has a unique canonical form. Every pathname that denotes a nonexistent file or directory also has a unique canonical form. The canonical form of the pathname of a nonexistent file or directory may be different from the canonical form of the same pathname after the file or directory is created. Similarly, the canonical form of the pathname of an existing file or directory may be different from the canonical form of the same pathname after the file or directory is deleted.</source>
          <target state="translated">既存のファイルやディレクトリを示すパス名はすべて一意の正規形を持っています。存在しないファイルやディレクトリを示すすべてのパス名もまた、一意の正準形式を持っています。存在しないファイルやディレクトリのパス名の正準形式は、ファイルやディレクトリが作成された後の同じパス名の正準形式とは異なる場合があります。同様に、既存のファイルやディレクトリのパス名の正準形式は、そのファイルやディレクトリが削除された後の同じパス名の正準形式とは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="9330bf4a03b53aa1292a10e98fcb64768d7b058a" translate="yes" xml:space="preserve">
          <source>Every property editor must support a call on setValue when the argument object is of the type for which this is the corresponding propertyEditor. In addition, each property editor must either support a custom editor, or support setAsText.</source>
          <target state="translated">すべてのプロパティ・エディタは、引数オブジェクトが対応するプロパティ・エディタの型である場合、setValueの呼び出しをサポートしなければなりません。さらに、各プロパティ・エディタは、カスタム・エディタをサポートするか、setAsTextをサポートしなければなりません。</target>
        </trans-unit>
        <trans-unit id="3717941423626ac9cf7230e3ac3f96bc1f032e5e" translate="yes" xml:space="preserve">
          <source>Every propertyEditor must support one or more of the three simple display styles. Thus it can either (1) support isPaintable or (2) both return a non-null String[] from getTags() and return a non-null value from getAsText or (3) simply return a non-null String from getAsText().</source>
          <target state="translated">すべてのpropertyEditorは、3つの単純な表示スタイルのうち1つ以上をサポートしなければなりません。したがって、(1)isPaintable をサポートするか、(2)getTags()から非 null の String[]を返し、getAsText から非 null の値を返すか、(3)getAsText()から単に非 null の String を返すかのいずれかになります。</target>
        </trans-unit>
        <trans-unit id="fab7c38b5135856053cbcf27fb14833cdf915d60" translate="yes" xml:space="preserve">
          <source>Every role has a &lt;em&gt;cardinality&lt;/em&gt;, which provides lower and upper bounds on the number of MBeans that can appear in that role in a given relation instance. Usually, the lower and upper bounds are both 1, with exactly one MBean appearing in the role. The cardinality only limits the number of MBeans in the role per relation instance. The same MBean can appear in the same role in any number of instances of a relation type. In the &lt;code&gt;DependsOn&lt;/code&gt; example, a given module can depend on many other modules, and be depended on by many others, but any given relation instance links exactly one &lt;code&gt;dependent&lt;/code&gt; module with exactly one &lt;code&gt;dependedOn&lt;/code&gt; module.</source>
          <target state="translated">すべてのロールには&lt;em&gt;カーディナリティ&lt;/em&gt;があります。これは、特定の関係インスタンスでそのロールに出現できるMBeanの数の下限と上限を提供します。通常、下限と上限はどちらも1であり、ロールに表示されるMBeanは1つだけです。カーディナリティーは、関係インスタンスごとのロール内のMBeanの数のみを制限します。同じMBeanは、関係タイプの任意の数のインスタンスで同じロールに現れることができます。で &lt;code&gt;DependsOn&lt;/code&gt; 例として、特定のモジュールは、多くの他のモジュールに依存すること、および他の多くによって依存するが、任意の所与の関係インスタンスは、1つのリンク &lt;code&gt;dependent&lt;/code&gt; 正確に一つでモジュールを &lt;code&gt;dependedOn&lt;/code&gt; のモジュール。</target>
        </trans-unit>
        <trans-unit id="cfd9a2f55ca7e9b594032692867dbd0ad48457e1" translate="yes" xml:space="preserve">
          <source>Every role is &lt;em&gt;typed&lt;/em&gt;, meaning that an MBean that appears in that role must be an instance of the role's type. In the &lt;code&gt;DependsOn&lt;/code&gt; example, both roles would be of type &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">すべてのロールは&lt;em&gt;typedです&lt;/em&gt;。つまり、そのロールに表示されるMBeanは、ロールのタイプのインスタンスでなければなりません。で &lt;code&gt;DependsOn&lt;/code&gt; 例では、両方の役割はタイプであろう &lt;code&gt;Module&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bf840d425922327b94cbaf298de5ab16e9a7b79" translate="yes" xml:space="preserve">
          <source>Every string buffer has a capacity. As long as the length of the character sequence contained in the string buffer does not exceed the capacity, it is not necessary to allocate a new internal buffer array. If the internal buffer overflows, it is automatically made larger.</source>
          <target state="translated">すべての文字列バッファには容量があります。文字列バッファに含まれる文字列の長さが容量を超えない限り、新しい内部バッファ配列を割り当てる必要はありません。内部バッファがオーバーフローした場合は、自動的に容量が大きくなります。</target>
        </trans-unit>
        <trans-unit id="ee8e6c8ff8ba3d89ff2a6e4f484260e6b6c085f5" translate="yes" xml:space="preserve">
          <source>Every string builder has a capacity. As long as the length of the character sequence contained in the string builder does not exceed the capacity, it is not necessary to allocate a new internal buffer. If the internal buffer overflows, it is automatically made larger.</source>
          <target state="translated">すべての文字列ビルダには容量があります。文字列ビルダに含まれる文字列の長さが容量を超えない限り、新たに内部バッファを確保する必要はありません。内部バッファがオーバーフローした場合は、自動的に容量が大きくなります。</target>
        </trans-unit>
        <trans-unit id="d106019115f10fb280daa50a39bcc5b44ed48439" translate="yes" xml:space="preserve">
          <source>Every thread has a name for identification purposes. More than one thread may have the same name. If a name is not specified when a thread is created, a new name is generated for it.</source>
          <target state="translated">各スレッドには識別のために名前が付けられています。複数のスレッドが同じ名前を持つことができます。スレッドの作成時に名前が指定されていない場合は、新しい名前が生成されます。</target>
        </trans-unit>
        <trans-unit id="27c3e40ec218fe95cc1b76dd41fe909e8962366d" translate="yes" xml:space="preserve">
          <source>Every thread has a priority. Threads with higher priority are executed in preference to threads with lower priority. Each thread may or may not also be marked as a daemon. When code running in some thread creates a new &lt;code&gt;Thread&lt;/code&gt; object, the new thread has its priority initially set equal to the priority of the creating thread, and is a daemon thread if and only if the creating thread is a daemon.</source>
          <target state="translated">すべてのスレッドに優先順位があります。優先度の高いスレッドは、優先度の低いスレッドよりも優先して実行されます。各スレッドは、デーモンとしてマークされる場合とマークされない場合があります。いくつかのスレッドで実行されているコードが新しい &lt;code&gt;Thread&lt;/code&gt; オブジェクトを作成すると、新しいスレッドの優先度は最初は作成スレッドの優先度と同じに設定され、作成スレッドがデーモンである場合に限りデーモンスレッドになります。</target>
        </trans-unit>
        <trans-unit id="ba50213f544667dc62048c2dd4abd6b39c01cd70" translate="yes" xml:space="preserve">
          <source>Every time the user types a key in the text field, one or more key events are sent to the text field. A &lt;code&gt;KeyEvent&lt;/code&gt; may be one of three types: keyPressed, keyReleased, or keyTyped. The properties of a key event indicate which of these types it is, as well as additional information about the event, such as what modifiers are applied to the key event and the time at which the event occurred.</source>
          <target state="translated">ユーザーがテキストフィールドにキーを入力するたびに、1つ以上のキーイベントがテキストフィールドに送信されます。A &lt;code&gt;KeyEvent&lt;/code&gt; 、keyPressed、keyReleased、keyTypedという3種類のものであってもよいです。キーイベントのプロパティは、これらのタイプのどれであるか、およびキーイベントに適用される修飾子やイベントが発生した時刻など、イベントに関する追加情報を示します。</target>
        </trans-unit>
        <trans-unit id="45415333a540ec07c78d6c2b719517c170f658f8" translate="yes" xml:space="preserve">
          <source>Every version 1.1 (and version 1.1 compatible skeletons generated in 1.2 using &lt;code&gt;rmic -vcompat&lt;/code&gt;) skeleton class generated by the rmic stub compiler implements this interface. A skeleton for a remote object is a server-side entity that dispatches calls to the actual remote object implementation.</source>
          <target state="translated">rmicスタブコンパイラによって生成されたすべてのバージョン1.1（および1.2で &lt;code&gt;rmic -vcompat&lt;/code&gt; を使用して生成されたバージョン1.1互換のスケルトン）スケルトンクラスは、このインターフェイスを実装します。リモートオブジェクトのスケルトンは、実際のリモートオブジェクト実装に呼び出しをディスパッチするサーバー側エンティティです。</target>
        </trans-unit>
        <trans-unit id="0dfb4b5eca0debe0deae6c2325d031f32d3c8aaa" translate="yes" xml:space="preserve">
          <source>Every version 1.1 compatible skeleton implements this interface. A skeleton for a remote object is a server-side entity that dispatches calls to the actual remote object implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c638aa616ce65d802b4ba335aafbf46193f8b8f" translate="yes" xml:space="preserve">
          <source>Every version of the JMX specification continues to implement the features of previous versions. So when the client is running an earlier version than the server, there should not be any interoperability concerns.</source>
          <target state="translated">JMX仕様の各バージョンは、以前のバージョンの機能を引き続き実装しています。そのため、クライアントがサーバよりも前のバージョンを実行していても、相互運用性の問題はないはずです。</target>
        </trans-unit>
        <trans-unit id="55ea26d3e1c112d1c881b6c95765d25751e5f2ab" translate="yes" xml:space="preserve">
          <source>Exacly how an attribute is &quot;determined to be ID&quot; is up to the schema language. In case of W3C XML Schema, this means that the actual type of the attribute is the built-in ID type or its derived type.</source>
          <target state="translated">具体的にどのように属性が「IDであると判断されるか」は、スキーマ言語に依存します。W3C XML Schemaの場合、これは属性の実際の型が組み込みのID型かその派生型であることを意味します。</target>
        </trans-unit>
        <trans-unit id="c8c5c94aa624b9de2431a8bf964a7efe535ea8b9" translate="yes" xml:space="preserve">
          <source>Exactly one check box button in a &lt;code&gt;CheckboxGroup&lt;/code&gt; can be in the &quot;on&quot; state at any given time. Pushing any button sets its state to &quot;on&quot; and forces any other button that is in the &quot;on&quot; state into the &quot;off&quot; state.</source>
          <target state="translated">&lt;code&gt;CheckboxGroup&lt;/code&gt; 内の正確に1つのチェックボックスボタンは、いつでも「オン」状態にすることができます。ボタンを押すと、その状態が「オン」に設定され、「オン」状態にある他のボタンはすべて「オフ」状態になります。</target>
        </trans-unit>
        <trans-unit id="a034e7079a04438693cb2ba5970a49792b682984" translate="yes" xml:space="preserve">
          <source>Exactly one of &lt;code&gt;getRenderedImage&lt;/code&gt; and &lt;code&gt;getRaster&lt;/code&gt; will return a non-&lt;code&gt;null&lt;/code&gt; value. Subclasses are responsible for ensuring this behavior.</source>
          <target state="translated">&lt;code&gt;getRenderedImage&lt;/code&gt; と &lt;code&gt;getRaster&lt;/code&gt; のどちらか一方が &lt;code&gt;null&lt;/code&gt; 以外の値を返します。サブクラスは、この動作を確実にする責任があります。</target>
        </trans-unit>
        <trans-unit id="e25105ba7fcfe26328e00192806699ed99f47bb0" translate="yes" xml:space="preserve">
          <source>Examine</source>
          <target state="translated">Examine</target>
        </trans-unit>
        <trans-unit id="e796184c9be91427ae78ab149091c6c334739d18" translate="yes" xml:space="preserve">
          <source>Examine and collect init function parameter lists (which are of the form &lt;code&gt;(A*)&lt;/code&gt;).</source>
          <target state="translated">init関数のパラメーターリスト（ &lt;code&gt;(A*)&lt;/code&gt; 形式）を調べて収集します。</target>
        </trans-unit>
        <trans-unit id="1b0dbb0a452b84a7487a241f47fa6d084530c8fc" translate="yes" xml:space="preserve">
          <source>Examine and collect the suffixes of the step, pred, and fini parameter lists, after removing the iteration variable types. (They must have the form &lt;code&gt;(V... A*)&lt;/code&gt;; collect the &lt;code&gt;(A*)&lt;/code&gt; parts only.)</source>
          <target state="translated">反復変数タイプを削除した後、step、pred、およびfiniパラメーターリストのサフィックスを調べて収集します。（形式は &lt;code&gt;(V... A*)&lt;/code&gt; 必要があります。 &lt;code&gt;(A*)&lt;/code&gt; パーツのみを収集してください。）</target>
        </trans-unit>
        <trans-unit id="4e75594ea49f5b2d46611fb4a11666af56d7d84a" translate="yes" xml:space="preserve">
          <source>Examine fini function return types, disregarding omitted fini functions.</source>
          <target state="translated">省略されたfini関数を無視して、fini関数の戻り値の型を調べます。</target>
        </trans-unit>
        <trans-unit id="12b4e488ca9b809d9e559acdf9226f12ed8aabed" translate="yes" xml:space="preserve">
          <source>Examines the argument type and its fields and perform some documented operation.</source>
          <target state="translated">引数の型とそのフィールドを調べ、文書化された操作を行います。</target>
        </trans-unit>
        <trans-unit id="4d8a61432efad1cceb70d0a7168ea486712c4953" translate="yes" xml:space="preserve">
          <source>Examines the argument type and its fields and perform some documented operation. No specific operations are required.</source>
          <target state="translated">引数の型とそのフィールドを調べ、文書化された操作を行います。特定の操作は必要ありません。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="22d244fd76e1ca249ad40be45bec3a1933e4fe88" translate="yes" xml:space="preserve">
          <source>Example &lt;code&gt;&quot;#,#00.0#&quot;&lt;/code&gt; &amp;rarr; 1,234.56</source>
          <target state="translated">例 &lt;code&gt;&quot;#,#00.0#&quot;&lt;/code&gt; &amp;rarr;1,234.56</target>
        </trans-unit>
        <trans-unit id="f57d5366eca3783726f3d7caa68b6d9a1d639709" translate="yes" xml:space="preserve">
          <source>Example Suppose we have a service type &lt;code&gt;com.example.CodecSet&lt;/code&gt; which is intended to represent sets of encoder/decoder pairs for some protocol. In this case it is an abstract class with two abstract methods:</source>
          <target state="translated">例あるプロトコルのエンコーダー/デコーダーのペアのセットを表すためのサービスタイプ &lt;code&gt;com.example.CodecSet&lt;/code&gt; があるとします。この場合は、2つの抽象メソッドを持つ抽象クラスです。</target>
        </trans-unit>
        <trans-unit id="1fabb1683d22d0469c9e9cac437dfd3fa193ab75" translate="yes" xml:space="preserve">
          <source>Example code:</source>
          <target state="translated">コード例。</target>
        </trans-unit>
        <trans-unit id="7a06132f384ea01bafc4c48f22905ce128d2dade" translate="yes" xml:space="preserve">
          <source>Example of the iterator usage,</source>
          <target state="translated">イテレータの使用例。</target>
        </trans-unit>
        <trans-unit id="dbad3ff9680448a97e3e93c8ac90fef412296573" translate="yes" xml:space="preserve">
          <source>Example results are &quot;2&quot;, &quot;new Color(127,127,34)&quot;, &quot;Color.orange&quot;, etc.</source>
          <target state="translated">結果の例は、「2」、「new Color(127,127,34)」、「Color.orange」などです。</target>
        </trans-unit>
        <trans-unit id="429046e64d4cd3436e1c37eb60d59f887f5f1478" translate="yes" xml:space="preserve">
          <source>Example results are:</source>
          <target state="translated">結果の例です。</target>
        </trans-unit>
        <trans-unit id="c7fb1ec4be4eb18e26211d0b08ebbd8374840ecb" translate="yes" xml:space="preserve">
          <source>Example url</source>
          <target state="translated">urlの例</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">使用例。</target>
        </trans-unit>
        <trans-unit id="d740ba0d36c863c8e42f21816dc821bb56b4473f" translate="yes" xml:space="preserve">
          <source>Example values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9112f46ae9e02fd5d6dcbf7e20ca1cdf4c97a0e6" translate="yes" xml:space="preserve">
          <source>Example values are &lt;code&gt;&quot;0 ns&quot;&lt;/code&gt;, &lt;code&gt;&quot;10 ms&quot;&lt;/code&gt;, and &lt;code&gt;&quot;1 s&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83a1dec9f10920d49609e551a6fb244aa329933" translate="yes" xml:space="preserve">
          <source>Example values: &lt;code&gt;&quot;0 ns&quot;&lt;/code&gt;, &lt;code&gt;&quot;10 ms&quot;&lt;/code&gt;, and &lt;code&gt;&quot;1 s&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd4705a1be3c9f091bfb3845f25f465b86b31a2" translate="yes" xml:space="preserve">
          <source>Example with a fully conformant body method:</source>
          <target state="translated">完全適合体法を用いた例</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="79b9c1390563c3cf0a4c4d8fff2384faa32cf303" translate="yes" xml:space="preserve">
          <source>Example: &quot;Latn&quot; (Latin), &quot;Cyrl&quot; (Cyrillic)</source>
          <target state="translated">例としては、「Latn」(ラテン語)&quot;Latn&quot;(ラテン語)、&quot;Cyrl&quot;(キリル語</target>
        </trans-unit>
        <trans-unit id="d19474c339bbc86eee07b1c2108f0cdc28535b63" translate="yes" xml:space="preserve">
          <source>Example: &quot;US&quot; (United States), &quot;FR&quot; (France), &quot;029&quot; (Caribbean)</source>
          <target state="translated">例)&quot;US&quot;(アメリカ合衆国)、&quot;FR&quot;(フランス)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ)、&quot;029&quot;(カリブ &quot;US&quot;(米国)、&quot;FR&quot;(フランス)、&quot;029&quot;(カリブ</target>
        </trans-unit>
        <trans-unit id="4cd43cd1409efd2f924b88cecdc4ee2b5bbf52d2" translate="yes" xml:space="preserve">
          <source>Example: &quot;en&quot; (English), &quot;ja&quot; (Japanese), &quot;kok&quot; (Konkani)</source>
          <target state="translated">例)&quot;en&quot;(英語)、&quot;ja&quot;(日本語)、&quot;kok&quot;(コンカニ語)、&quot;kok&quot;(コンカニ語)、&quot;en&quot;(英語)、&quot;ja&quot;(日本語)、&quot;kok&quot;(コンカニ語)、&quot;kok&quot;(コンカニ語)など。&quot;en」(英語)、「ja」(日本語)、「kok」(コンカニ語</target>
        </trans-unit>
        <trans-unit id="484478e712cae8003c2c03c06e78a3428e7ab4b6" translate="yes" xml:space="preserve">
          <source>Example: &quot;polyton&quot; (Polytonic Greek), &quot;POSIX&quot;</source>
          <target state="translated">例文です。&quot;polyton&quot;(ポリトン・ギリシャ語)、&quot;POSIX&quot;</target>
        </trans-unit>
        <trans-unit id="17f667cc777b1242d98364f0ac1fa02d3f96a167" translate="yes" xml:space="preserve">
          <source>Example: 123%</source>
          <target state="translated">例:123</target>
        </trans-unit>
        <trans-unit id="60e1b621b94e02c967c8159f2b56630f0c4dcc9b" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;
              DatagramSocket s = new DatagramSocket(null);
              s.bind(new InetSocketAddress(8888));
 &lt;/code&gt; Which is equivalent to: &lt;code&gt;
              DatagramSocket s = new DatagramSocket(8888);
 &lt;/code&gt; Both cases will create a DatagramSocket able to receive broadcasts on UDP port 8888.</source>
          <target state="translated">例： &lt;code&gt; DatagramSocket s = new DatagramSocket(null); s.bind(new InetSocketAddress(8888)); &lt;/code&gt; これは次と同等です &lt;code&gt; DatagramSocket s = new DatagramSocket(8888); &lt;/code&gt; どちらの場合も、UDPポート8888でブロードキャストを受信できるDatagramSocketが作成されます。</target>
        </trans-unit>
        <trans-unit id="5807ee3a782f2372237d70c10b7a8c266239ac2d" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;&quot;#,#00.0#;(#,#00.0#)&quot;&lt;/code&gt; for negatives in parentheses.</source>
          <target state="translated">例： &lt;code&gt;&quot;#,#00.0#;(#,#00.0#)&quot;&lt;/code&gt; （括弧内の負の場合）。</target>
        </trans-unit>
        <trans-unit id="f0d8120bba52d6db8f1d43bf8dd5ff3373afede1" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;Boolean.parseBoolean(&quot;True&quot;)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">例： &lt;code&gt;Boolean.parseBoolean(&quot;True&quot;)&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="22168d0e3ee025a80c6b128455f9476fa0a30661" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;Boolean.parseBoolean(&quot;yes&quot;)&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">例： &lt;code&gt;Boolean.parseBoolean(&quot;yes&quot;)&lt;/code&gt; は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="84f9bf532b9e9f966608cd71532921b0ef23e919" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;DatagramSocket s = new DatagramSocket(null);
              s.bind(new InetSocketAddress(8888));
 &lt;/code&gt; Which is equivalent to: &lt;code&gt;DatagramSocket s = new DatagramSocket(8888);
 &lt;/code&gt; Both cases will create a DatagramSocket able to receive broadcasts on UDP port 8888.</source>
          <target state="translated">例： &lt;code&gt;DatagramSocket s = new DatagramSocket(null); s.bind(new InetSocketAddress(8888)); &lt;/code&gt; これは次と同等です： &lt;code&gt;DatagramSocket s = new DatagramSocket(8888); &lt;/code&gt; どちらの場合も、UDPポート8888でブロードキャストを受信できるDatagramSocketを作成します。</target>
        </trans-unit>
        <trans-unit id="80108241de7b75c463b05fecf7f66580a18848b6" translate="yes" xml:space="preserve">
          <source>Example: Decimal ON: 12345 &amp;rarr; 12345.; OFF: 12345 &amp;rarr; 12345</source>
          <target state="translated">例：10進ON：12345&amp;rarr;12345。; オフ：12345&amp;rarr;12345</target>
        </trans-unit>
        <trans-unit id="2b039444d73de8e77e0dd0c362a46e7c4eed321f" translate="yes" xml:space="preserve">
          <source>Example: If an MBean called &lt;code&gt;myMbean&lt;/code&gt; needs to notify registered listeners when its attribute:</source>
          <target state="translated">例： &lt;code&gt;myMbean&lt;/code&gt; と呼ばれるMBeanが登録されているリスナーにその属性を通知する必要がある場合：</target>
        </trans-unit>
        <trans-unit id="70cdbd7512e7e01d0a1cd1b3beb5913cfa8e8e13" translate="yes" xml:space="preserve">
          <source>Example: If descriptor &lt;code&gt;d&lt;/code&gt; describes the class &lt;code&gt;java.util.Map&lt;/code&gt;, a descriptor for the class &lt;code&gt;java.util.Map.Entry&lt;/code&gt; could be obtained by &lt;code&gt;d.nested(&quot;Entry&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029b09a24b366ab20789a1a528d783da16fc2286" translate="yes" xml:space="preserve">
          <source>Example: key=&quot;u&quot;/value=&quot;ca-japanese&quot; (Japanese Calendar), key=&quot;x&quot;/value=&quot;java-1-7&quot;</source>
          <target state="translated">例:key=&quot;u&quot;/value=&quot;ca-japanese&quot; (和暦)、key=&quot;x&quot;/value=&quot;java-1-7&quot;</target>
        </trans-unit>
        <trans-unit id="f5b9a73d3e31207e33b7a76f83cfcdce9d1f8914" translate="yes" xml:space="preserve">
          <source>Example: to find MBeans that are instances of &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt;, use &lt;code&gt;Query.isInstanceOf(Query.value(NotificationBroadcaster.class.getName()))&lt;/code&gt;.</source>
          <target state="translated">例：&lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; の&lt;/a&gt;インスタンスであるMBeanを見つけるには、 &lt;code&gt;Query.isInstanceOf(Query.value(NotificationBroadcaster.class.getName()))&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="8d0c707eab09225bf4add3011db005ce009555fe" translate="yes" xml:space="preserve">
          <source>Example: with multiplier 100, 1.23 is formatted as &quot;123&quot;, and &quot;123&quot; is parsed into 1.23.</source>
          <target state="translated">例:乗数100では、1.23は &quot;123 &quot;としてフォーマットされ、&quot;123 &quot;は1.23にパースされます。</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="7aae298d1053b7f23a4c35102a6ce73fb14d03d5" translate="yes" xml:space="preserve">
          <source>Examples of Location Path</source>
          <target state="translated">ロケーションパスの例</target>
        </trans-unit>
        <trans-unit id="4c3c425eb22febf9063d1489508085367c0236f8" translate="yes" xml:space="preserve">
          <source>Examples of OIDs and extension names</source>
          <target state="translated">OIDと拡張子名の例</target>
        </trans-unit>
        <trans-unit id="fa252b8bd1695476ec86ad9cf3a76343fada4222" translate="yes" xml:space="preserve">
          <source>Examples of ObjectName patterns are:</source>
          <target state="translated">ObjectNameパターンの例は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="1747eac3ea05fd342073c2c6214c4820994c9914" translate="yes" xml:space="preserve">
          <source>Examples of Path Matching</source>
          <target state="translated">パスマッチングの例</target>
        </trans-unit>
        <trans-unit id="a62ff8e48633f977f3c04fe6c872d4fcc3a83935" translate="yes" xml:space="preserve">
          <source>Examples of SocketPermission instantiation are the following:</source>
          <target state="translated">SocketPermissionのインスタンス化の例としては、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="36c098cf6aca5d8c3fbc6cb98ed6837a000d6be3" translate="yes" xml:space="preserve">
          <source>Examples of Using EventHandler</source>
          <target state="translated">EventHandlerの使用例</target>
        </trans-unit>
        <trans-unit id="1e065094a7693ce5a3fbf784e28f012e86464afe" translate="yes" xml:space="preserve">
          <source>Examples of Week based Years</source>
          <target state="translated">週ベースの年の例</target>
        </trans-unit>
        <trans-unit id="a20588487b5b9b143549e52fe5959b985b88733c" translate="yes" xml:space="preserve">
          <source>Examples of WeekFields</source>
          <target state="translated">WeekFieldsの例</target>
        </trans-unit>
        <trans-unit id="18dc9b7ce12c48b3086f36028e31cfaf99b24c75" translate="yes" xml:space="preserve">
          <source>Examples of WeekFields for week-based-year</source>
          <target state="translated">週ベースの年のWeekFieldsの例</target>
        </trans-unit>
        <trans-unit id="400581f06c1f2d2343395f06fb71bea7e101cd8e" translate="yes" xml:space="preserve">
          <source>Examples of associative operations include numeric addition, min, and max, and string concatenation.</source>
          <target state="translated">連想演算の例としては、数値の加算、最小値、最大値、文字列の連結などがあります。</target>
        </trans-unit>
        <trans-unit id="b5fa80ec9a36fdb07ba3362c88b481a1e6700f28" translate="yes" xml:space="preserve">
          <source>Examples of date and time patterns interpreted in the U.S. locale</source>
          <target state="translated">米国ロケールで解釈される日時パターンの例</target>
        </trans-unit>
        <trans-unit id="465c7b61dabbb3ecff3844e189702388fe041a85" translate="yes" xml:space="preserve">
          <source>Examples of expected usage:</source>
          <target state="translated">予想される使用例。</target>
        </trans-unit>
        <trans-unit id="e971a57721d56f4689140c8fcd3f2b8b89dc8c31" translate="yes" xml:space="preserve">
          <source>Examples of how this method affects specific types of Image object:</source>
          <target state="translated">このメソッドが画像オブジェクトの特定のタイプにどのように影響するかの例。</target>
        </trans-unit>
        <trans-unit id="3c4686353f35d2c81851e074f558263240dbec12" translate="yes" xml:space="preserve">
          <source>Examples of locale-sensitive and 1:M case mappings are in the following table.</source>
          <target state="translated">ロケールセンシティブと1:Mの大文字小文字の対応付けの例を以下の表に示します。</target>
        </trans-unit>
        <trans-unit id="708763afe93becfda627847afcd1911b81f25cb8" translate="yes" xml:space="preserve">
          <source>Examples of locale-sensitive and 1:M case mappings. Shows Language code of locale, lower case, upper case, and description.</source>
          <target state="translated">ロケールと 1:M 大文字小文字の対応付けの例。ロケール、小文字、大文字、説明文の言語コードを表示します。</target>
        </trans-unit>
        <trans-unit id="6150a8c3a39b6d5ae535fe8a98df167d5b3716d4" translate="yes" xml:space="preserve">
          <source>Examples of lowercase mappings are in the following table:</source>
          <target state="translated">小文字のマッピングの例を以下の表に示します。</target>
        </trans-unit>
        <trans-unit id="1cfd6dbcb110950faae5500b60c21afa1b81cb21" translate="yes" xml:space="preserve">
          <source>Examples of mutable reduction operations include: accumulating elements into a &lt;code&gt;Collection&lt;/code&gt;; concatenating strings using a &lt;code&gt;StringBuilder&lt;/code&gt;; computing summary information about elements such as sum, min, max, or average; computing &quot;pivot table&quot; summaries such as &quot;maximum valued transaction by seller&quot;, etc. The class &lt;a href=&quot;collectors&quot;&gt;&lt;code&gt;Collectors&lt;/code&gt;&lt;/a&gt; provides implementations of many common mutable reductions.</source>
          <target state="translated">可変縮約操作の例には次のものがあり &lt;code&gt;Collection&lt;/code&gt; 。 &lt;code&gt;StringBuilder&lt;/code&gt; を使用して文字列を連結します。合計、最小、最大、平均などの要素に関する要約情報の計算。「売り手ごとの最大値トランザクション」などの「ピボットテーブル」の要約の計算。クラス&lt;a href=&quot;collectors&quot;&gt; &lt;code&gt;Collectors&lt;/code&gt; &lt;/a&gt;は、多くの一般的な変更可能な削減の実装を提供します。</target>
        </trans-unit>
        <trans-unit id="01d156f194052cfe4bca172a6c043378e112b9cc" translate="yes" xml:space="preserve">
          <source>Examples of some configuration values for Krb5LoginModule in JAAS config file and the results are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb168a4635a38fbb73265d6d17212809762496c" translate="yes" xml:space="preserve">
          <source>Examples of subformat,argument,and formatted text</source>
          <target state="translated">サブフォーマット、引数、フォーマットされたテキストの例</target>
        </trans-unit>
        <trans-unit id="188bdf8addc83fc44785b153beed9fd28782b768" translate="yes" xml:space="preserve">
          <source>Examples of the Original, Normalized and Serialized Values</source>
          <target state="translated">元の値、正規化された値、シリアライズされた値の例</target>
        </trans-unit>
        <trans-unit id="349de792ac0285090171feb1fd178f54718433e0" translate="yes" xml:space="preserve">
          <source>Examples of the conversion:</source>
          <target state="translated">変換の例。</target>
        </trans-unit>
        <trans-unit id="d70c68c69e68a5d7a2c11993896332854469c9c6" translate="yes" xml:space="preserve">
          <source>Examples of these limits include client and server configuration limits such as size, time, number of hops, etc.</source>
          <target state="translated">これらの制限の例としては、サイズ、時間、ホップ数などのクライアントとサーバーの設定制限があります。</target>
        </trans-unit>
        <trans-unit id="04b2fc5439739b4681c7145cc489b083c87217f1" translate="yes" xml:space="preserve">
          <source>Examples of valid &lt;code&gt;ArrayType&lt;/code&gt; instances are:</source>
          <target state="translated">有効な &lt;code&gt;ArrayType&lt;/code&gt; インスタンスの例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="568e72343dc863edb73f08c3d3a66c8a18dc9934" translate="yes" xml:space="preserve">
          <source>Examples of valid class names include:</source>
          <target state="translated">有効なクラス名の例としては、次のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="55df76e325fec828bcd691d45f75e68e896a0e1e" translate="yes" xml:space="preserve">
          <source>Examples: +123, $123, sFr123</source>
          <target state="translated">例。+123,$123,sFr123</target>
        </trans-unit>
        <trans-unit id="0d100c383c7a4da2ff9d55ed810389788e80d1b2" translate="yes" xml:space="preserve">
          <source>Examples: -123%, ($123) (with positive suffixes)</source>
          <target state="translated">例。-123%,($123)(正の接尾辞を含む)</target>
        </trans-unit>
        <trans-unit id="e00f6bf1e6883030676a48cfbd060d55e1eb7774" translate="yes" xml:space="preserve">
          <source>Examples: -123, ($123) (with negative suffix), sFr-123</source>
          <target state="translated">例:-123 ($123)(負の接尾辞付き)、sFr-123 (負の接尾辞付き)-123,($123)(負の接尾辞付き)、sFr-123</target>
        </trans-unit>
        <trans-unit id="afcd07fb518fc99d26cb747cda5bc7177455e27b" translate="yes" xml:space="preserve">
          <source>Examples: 123%</source>
          <target state="translated">例を挙げます。123%</target>
        </trans-unit>
        <trans-unit id="8080d349227adcbacbb1aa3b2b5229228ea5d293" translate="yes" xml:space="preserve">
          <source>ExcC14NParameterSpec</source>
          <target state="translated">ExcC14NParameterSpec</target>
        </trans-unit>
        <trans-unit id="acc89c76a96fa545e8742128f310017eb629c1ce" translate="yes" xml:space="preserve">
          <source>ExcellentBreakWeight</source>
          <target state="translated">ExcellentBreakWeight</target>
        </trans-unit>
        <trans-unit id="6a80a9698622e52d7ec71a793ef9e5d6c3d2ccdb" translate="yes" xml:space="preserve">
          <source>Except as otherwise noted, a &lt;code&gt;Name&lt;/code&gt; or environment parameter passed to any method is owned by the caller. The implementation will not modify the object or keep a reference to it, although it may keep a reference to a clone or copy.</source>
          <target state="translated">特に明記されていない限り、メソッドに渡される &lt;code&gt;Name&lt;/code&gt; または環境パラメーターは、呼び出し元が所有します。実装はオブジェクトを変更したり、オブジェクトへの参照を保持したりしませんが、クローンまたはコピーへの参照を保持する場合があります。</target>
        </trans-unit>
        <trans-unit id="7edc08542f7bd4519a86df6e4e2bce465c97d10e" translate="yes" xml:space="preserve">
          <source>Except as otherwise noted, a &lt;code&gt;Name&lt;/code&gt;, &lt;code&gt;Attributes&lt;/code&gt;, or environment parameter passed to any method is owned by the caller. The implementation will not modify the object or keep a reference to it, although it may keep a reference to a clone or copy.</source>
          <target state="translated">特に明記しない限り、メソッドに渡される &lt;code&gt;Name&lt;/code&gt; 、 &lt;code&gt;Attributes&lt;/code&gt; 、または環境パラメーターは、呼び出し元が所有します。実装はオブジェクトを変更したり、オブジェクトへの参照を保持したりしませんが、クローンまたはコピーへの参照を保持する場合があります。</target>
        </trans-unit>
        <trans-unit id="fd8eb2dc96634d30c071e860338f513fc5f43020" translate="yes" xml:space="preserve">
          <source>Except for operations identified as explicitly nondeterministic, such as &lt;code&gt;findAny()&lt;/code&gt;, whether a stream executes sequentially or in parallel should not change the result of the computation.</source>
          <target state="translated">&lt;code&gt;findAny()&lt;/code&gt; など、明示的に非決定的であると識別された操作を除き、ストリームが順次実行されるか並列実行されるかによって、計算結果が変わることはありません。</target>
        </trans-unit>
        <trans-unit id="15ef0e358e8be0d697eb93b54035e554531d7a11" translate="yes" xml:space="preserve">
          <source>Except for the noted lexical/canonical representation mismatches listed in &lt;a href=&quot;http://www.w3.org/2001/05/xmlschema-errata#e2-45&quot;&gt; XML Schema 1.0 errata, Section 3.2.7.2&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/05/xmlschema-errata#e2-45&quot;&gt;XML Schema 1.0の正誤表、セクション3.2.7.2に&lt;/a&gt;リストされている、注記された字句/正規表現の不一致を除きます。</target>
        </trans-unit>
        <trans-unit id="4d518d3afc9c99ae74896adaac5cdeaab7fd1643" translate="yes" xml:space="preserve">
          <source>Except for the noted lexical/canonical representation mismatches listed in &lt;a href=&quot;https://www.w3.org/2001/05/xmlschema-errata#e2-45&quot;&gt; XML Schema 1.0 errata, Section 3.2.7.2&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7355880e89773d2a7c4db7635fdece39d739a4" translate="yes" xml:space="preserve">
          <source>Except where noted, passing a &lt;code&gt;null&lt;/code&gt; value for any parameter will result in a &lt;a href=&quot;../../../lang/nullpointerexception&quot;&gt;&lt;code&gt;NullPointerException&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">特に明記されていない限り、パラメーターに &lt;code&gt;null&lt;/code&gt; 値を渡すと、&lt;a href=&quot;../../../lang/nullpointerexception&quot;&gt; &lt;code&gt;NullPointerException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="20049bc069b0a04404c23d571b5e0b56f0660c02" translate="yes" xml:space="preserve">
          <source>Exception</source>
          <target state="translated">Exception</target>
        </trans-unit>
        <trans-unit id="20788aa11834509830be30396b88f6404f087e8c" translate="yes" xml:space="preserve">
          <source>Exception Handling</source>
          <target state="translated">例外処理</target>
        </trans-unit>
        <trans-unit id="be8538fb4f34966d112c48b77541f5dc9f44615b" translate="yes" xml:space="preserve">
          <source>Exception Summary</source>
          <target state="translated">例外の概要</target>
        </trans-unit>
        <trans-unit id="6ac9895b9d377c54b14e6f169baa77b46a7888d5" translate="yes" xml:space="preserve">
          <source>Exception class for an unrecognized identifier.</source>
          <target state="translated">認識できない識別子の例外クラス。</target>
        </trans-unit>
        <trans-unit id="e420d7b2646e1f7ccfad55b899bc943a045f3b9c" translate="yes" xml:space="preserve">
          <source>Exception class for an unsupported operation.</source>
          <target state="translated">サポートされていない操作のための例外クラス。</target>
        </trans-unit>
        <trans-unit id="a61a84578ad96976952dfce7bbabaae4b6e778f4" translate="yes" xml:space="preserve">
          <source>Exception during write.</source>
          <target state="translated">書き込み中に例外が発生しました。</target>
        </trans-unit>
        <trans-unit id="4ab2f0ac5290f6ea7147b347b586974c35c25680" translate="yes" xml:space="preserve">
          <source>Exception for errors that occur during communication with the Smart Card stack or the card itself.</source>
          <target state="translated">スマートカードスタックやカード本体との通信中に発生するエラーの例外。</target>
        </trans-unit>
        <trans-unit id="b3ab7236aeab03bd1f2788df7c5789bb1df91873" translate="yes" xml:space="preserve">
          <source>Exception indicating that the result of a value-producing task, such as a &lt;a href=&quot;futuretask&quot;&gt;&lt;code&gt;FutureTask&lt;/code&gt;&lt;/a&gt;, cannot be retrieved because the task was cancelled.</source>
          <target state="translated">タスクがキャンセルされたため、&lt;a href=&quot;futuretask&quot;&gt; &lt;code&gt;FutureTask&lt;/code&gt; &lt;/a&gt;などの価値のあるタスクの結果を取得できないことを示す例外。</target>
        </trans-unit>
        <trans-unit id="6cbc7c5ca0f49802514c43678cb05dc5a6e1b0b3" translate="yes" xml:space="preserve">
          <source>Exception indicating the failure of an object read operation due to unread primitive data, or the end of data belonging to a serialized object in the stream.</source>
          <target state="translated">未読プリミティブデータのためにオブジェクトの読み取り操作に失敗したことを示す例外、またはストリーム内のシリアル化されたオブジェクトに属するデータの終了を示す例外。</target>
        </trans-unit>
        <trans-unit id="b70ce1ef5e0fb7da8466cd4017b22cba83f165e5" translate="yes" xml:space="preserve">
          <source>Exception indicating the failure of an object read operation due to unread primitive data, or the end of data belonging to a serialized object in the stream. This exception may be thrown in two cases:</source>
          <target state="translated">未読のプリミティブデータが原因でオブジェクトの読み取り操作に失敗したことを示す例外、またはストリーム内のシリアル化されたオブジェクトに属するデータの終了を示す例外。この例外は、以下の2つの場合に発生する。</target>
        </trans-unit>
        <trans-unit id="a8d47a8fdbee94feced2fd64ac0b8ad94bc7002b" translate="yes" xml:space="preserve">
          <source>Exception reported on attempting to execute a &lt;a href=&quot;snippet.status#RECOVERABLE_DEFINED&quot;&gt;&lt;code&gt;RECOVERABLE_DEFINED&lt;/code&gt;&lt;/a&gt; snippet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b2cee96398cf59b562cd38771a6914873995b9" translate="yes" xml:space="preserve">
          <source>Exception that was caught while writing the ObjectStream.</source>
          <target state="translated">ObjectStreamの書き込み中に例外が発生しました。</target>
        </trans-unit>
        <trans-unit id="05fe33bedb217ba452708a2e5b853a3275c0ff02" translate="yes" xml:space="preserve">
          <source>Exception thrown as the result of a remote &lt;a href=&quot;../mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt; method invocation when an &lt;code&gt;Error&lt;/code&gt; is thrown while processing the invocation in the remote MBean server.</source>
          <target state="translated">リモートMBeanサーバーでの呼び出しの処理中に &lt;code&gt;Error&lt;/code&gt; がスローされたときに、リモート&lt;a href=&quot;../mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しの結果としてスローされる例外。</target>
        </trans-unit>
        <trans-unit id="d3f7a495dfdef6a360b7b77dd98f184e225be53a" translate="yes" xml:space="preserve">
          <source>Exception thrown as the result of a remote &lt;a href=&quot;../mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt; method invocation when an &lt;code&gt;Error&lt;/code&gt; is thrown while processing the invocation in the remote MBean server. A &lt;code&gt;JMXServerErrorException&lt;/code&gt; instance contains the original &lt;code&gt;Error&lt;/code&gt; that occurred as its cause.</source>
          <target state="translated">リモートMBeanサーバーでの呼び出しの処理中に &lt;code&gt;Error&lt;/code&gt; がスローされたときに、リモート&lt;a href=&quot;../mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しの結果としてスローされる例外。 &lt;code&gt;JMXServerErrorException&lt;/code&gt; のインスタンスは、元含ま &lt;code&gt;Error&lt;/code&gt; の原因として発生しました。</target>
        </trans-unit>
        <trans-unit id="b8c64d2a426187cbcbb839c1a5841b121e41122d" translate="yes" xml:space="preserve">
          <source>Exception thrown by &lt;a href=&quot;jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jmxconnectorserverfactory&quot;&gt;&lt;code&gt;JMXConnectorServerFactory&lt;/code&gt;&lt;/a&gt; when a provider exists for the required protocol but cannot be used for some reason.</source>
          <target state="translated">必要なプロトコルのプロバイダーが存在するが、何らかの理由で使用できない場合に、&lt;a href=&quot;jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;jmxconnectorserverfactory&quot;&gt; &lt;code&gt;JMXConnectorServerFactory&lt;/code&gt; &lt;/a&gt;によってスローされる例外。</target>
        </trans-unit>
        <trans-unit id="2a8a67d00e534aa186f74cb54ba5c922cdac280e" translate="yes" xml:space="preserve">
          <source>Exception thrown by an &lt;a href=&quot;executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; when a task cannot be accepted for execution.</source>
          <target state="translated">タスクの実行を受け入れることができない場合に&lt;a href=&quot;executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;によってスローされる例外。</target>
        </trans-unit>
        <trans-unit id="4a6f7a1eda36aee4bdccef35f866dbcdb6eef56e" translate="yes" xml:space="preserve">
          <source>Exception thrown by the monitor when a monitor setting becomes invalid while the monitor is running.</source>
          <target state="translated">モニター実行中にモニターの設定が無効になった場合、モニターから例外が発生します。</target>
        </trans-unit>
        <trans-unit id="392644717b7260a0e50e411f64af5e76690c6aaa" translate="yes" xml:space="preserve">
          <source>Exception thrown when a blocking operation times out.</source>
          <target state="translated">ブロッキング操作がタイムアウトすると例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="867ba1cd695c1e421f5b70add9b0980935e73269" translate="yes" xml:space="preserve">
          <source>Exception thrown when a blocking operation times out. Blocking operations for which a timeout is specified need a means to indicate that the timeout has occurred. For many such operations it is possible to return a value that indicates timeout; when that is not possible or desirable then &lt;code&gt;TimeoutException&lt;/code&gt; should be declared and thrown.</source>
          <target state="translated">ブロッキング操作がタイムアウトしたときにスローされる例外。タイムアウトが指定されているブロック操作には、タイムアウトが発生したことを示す手段が必要です。このような操作の多くでは、タイムアウトを示す値を返すことができます。それが不可能または望ましくない場合は、 &lt;code&gt;TimeoutException&lt;/code&gt; を宣言してスローする必要があります。</target>
        </trans-unit>
        <trans-unit id="1aee8e46431eba8beac6f5aeda1f80317d857838" translate="yes" xml:space="preserve">
          <source>Exception thrown when a thread tries to wait upon a barrier that is in a broken state, or which enters the broken state while the thread is waiting.</source>
          <target state="translated">スレッドが壊れた状態にあるバリアの上で待機しようとした場合や、 スレッドが待機している間に壊れた状態になってしまった場合に、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="93c3304a860fb93837dd686503f26d595d794edc" translate="yes" xml:space="preserve">
          <source>Exception thrown when an application tries to establish a connection with a terminal that has no card present.</source>
          <target state="translated">アプリケーションがカードを持っていない端末との接続を確立しようとすると、例外としてスローされます。</target>
        </trans-unit>
        <trans-unit id="4f0820c25c1fe592e44377acd4b6bcc9c7dfcbd8" translate="yes" xml:space="preserve">
          <source>Exception thrown when an error or other exception is encountered in the course of completing a result or task.</source>
          <target state="translated">結果やタスクを完了する過程でエラーやその他の例外が発生した場合にスローされる例外。</target>
        </trans-unit>
        <trans-unit id="4cfcb0980d155ad447a44c9ff4f34b26047175e9" translate="yes" xml:space="preserve">
          <source>Exception thrown when an invalid target object type is specified.</source>
          <target state="translated">無効なターゲット・オブジェクト・タイプが指定された場合にスローされる例外。</target>
        </trans-unit>
        <trans-unit id="e72a3f52398fc9f5bad3bb67ef47b65275947c78" translate="yes" xml:space="preserve">
          <source>Exception thrown when attempting to retrieve the result of a task that aborted by throwing an exception.</source>
          <target state="translated">例外をスローして中断したタスクの結果を取得しようとしたときにスローされる例外。</target>
        </trans-unit>
        <trans-unit id="26b9188e03304918cda6608437b107e3deffc260" translate="yes" xml:space="preserve">
          <source>Exception thrown when attempting to retrieve the result of a task that aborted by throwing an exception. This exception can be inspected using the &lt;a href=&quot;../../lang/throwable#getCause()&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">例外をスローすることによって中止されたタスクの結果を取得しようとしたときにスローされる例外。この例外は、&lt;a href=&quot;../../lang/throwable#getCause()&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt;メソッドを使用して検査できます。</target>
        </trans-unit>
        <trans-unit id="36c48e0a847f865b65bf933048b2eeef60ec1b28" translate="yes" xml:space="preserve">
          <source>Exception thrown when attempting to retrieve the result of a task that aborted by throwing an exception. This exception can be inspected using the &lt;a href=&quot;../../lang/throwable#getCause--&quot;&gt;&lt;code&gt;Throwable.getCause()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">例外をスローすることによって中止されたタスクの結果を取得しようとしたときにスローされる例外。この例外は、&lt;a href=&quot;../../lang/throwable#getCause--&quot;&gt; &lt;code&gt;Throwable.getCause()&lt;/code&gt; &lt;/a&gt;メソッドを使用して検査できます。</target>
        </trans-unit>
        <trans-unit id="99c1667070f68e28922993b4fba0a8f7ed7bad00" translate="yes" xml:space="preserve">
          <source>Exception type to signal that an attach operation failed in the target VM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0c459030a40aafd2c20bebdbbb0e33295ce125" translate="yes" xml:space="preserve">
          <source>Exception used to indicate a problem while calculating a date-time.</source>
          <target state="translated">日付時刻の計算中に問題が発生したことを示すために使用される例外。</target>
        </trans-unit>
        <trans-unit id="94407539050ef7e84b8f9c061efbad4b3e52a49d" translate="yes" xml:space="preserve">
          <source>Exception used to stop an expand/collapse from happening.</source>
          <target state="translated">展開/崩壊を停止するために使用される例外。</target>
        </trans-unit>
        <trans-unit id="5d7bfaa31ee95a4636a3f8366667814fff5d3354" translate="yes" xml:space="preserve">
          <source>Exception used to stop an expand/collapse from happening. See &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;How to Write a Tree-Will-Expand Listener&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt; for further information and examples.</source>
          <target state="translated">展開/折りたたみの発生を停止するために使用される例外。参照&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;ツリー・ウィル・展開してリスナーを書くためにどのよう&lt;/a&gt;に&lt;em&gt;Javaチュートリアル&lt;/em&gt;さらなる情報や例について。</target>
        </trans-unit>
        <trans-unit id="8e6156c6108b82622bdd68524696da443dbb66f5" translate="yes" xml:space="preserve">
          <source>Exception used to stop an expand/collapse from happening. See &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;How to Write a Tree-Will-Expand Listener&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt; for further information and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5644ebf2260ce2fb2b412f2c1a5a30324b0ef540" translate="yes" xml:space="preserve">
          <source>Exception which occurs when trying to register an object in the MBean server that is not a JMX compliant MBean.</source>
          <target state="translated">JMX に準拠していない MBean サーバにオブジェクトを登録しようとすると発生する例外。</target>
        </trans-unit>
        <trans-unit id="0c1787995d9b17f449c1f09a5cc1a5d347a1d8d7" translate="yes" xml:space="preserve">
          <source>ExceptionEvent</source>
          <target state="translated">ExceptionEvent</target>
        </trans-unit>
        <trans-unit id="390122bff361c76ee19bdacb6de52706e3e421fc" translate="yes" xml:space="preserve">
          <source>ExceptionInInitializerError</source>
          <target state="translated">ExceptionInInitializerError</target>
        </trans-unit>
        <trans-unit id="df447dd4145aef94640d1c389e6872cbd36558e2" translate="yes" xml:space="preserve">
          <source>ExceptionInInitializerError.getCause()</source>
          <target state="translated">ExceptionInInitializerError.getCause()</target>
        </trans-unit>
        <trans-unit id="2f84fe5aae048599a6d7cd593bf285af5776d983" translate="yes" xml:space="preserve">
          <source>ExceptionInInitializerError.getException()</source>
          <target state="translated">ExceptionInInitializerError.getException()</target>
        </trans-unit>
        <trans-unit id="d912f19cd99670536c497e68799193fcc6531087" translate="yes" xml:space="preserve">
          <source>ExceptionListener</source>
          <target state="translated">ExceptionListener</target>
        </trans-unit>
        <trans-unit id="bcbe2a77b1ed9ad0c7b08489147f97b2892c0d56" translate="yes" xml:space="preserve">
          <source>ExceptionListener.exceptionThrown()</source>
          <target state="translated">ExceptionListener.exceptionThrown()</target>
        </trans-unit>
        <trans-unit id="6abb471e6738f119e58c7d198eeab70b1de0dc62" translate="yes" xml:space="preserve">
          <source>ExceptionRequest</source>
          <target state="translated">ExceptionRequest</target>
        </trans-unit>
        <trans-unit id="09aebab0ca1d1093bec3ada4a3639b240d406380" translate="yes" xml:space="preserve">
          <source>Exceptionally completes this CompletableFuture with a &lt;a href=&quot;timeoutexception&quot;&gt;&lt;code&gt;TimeoutException&lt;/code&gt;&lt;/a&gt; if not otherwise completed before the given timeout.</source>
          <target state="translated">例外で、このCompletableFuture完了&lt;a href=&quot;timeoutexception&quot;&gt; &lt;code&gt;TimeoutException&lt;/code&gt; を&lt;/a&gt;そうでない場合は与えられたタイムアウトの前に完了しない場合。</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="ea9f95427fb055b7b73eb4808b8b284a6a632393" translate="yes" xml:space="preserve">
          <source>Exceptions and Error Reporting</source>
          <target state="translated">例外とエラー報告</target>
        </trans-unit>
        <trans-unit id="5408577edaf71bbfe153a3a0bca54d0ebd35b86c" translate="yes" xml:space="preserve">
          <source>Exceptions are thrown for problems with the InputStream and for classes that should not be deserialized. All exceptions are fatal to the InputStream and leave it in an indeterminate state; it is up to the caller to ignore or recover the stream state.</source>
          <target state="translated">例外はInputStreamの問題やデシリアライズされてはいけないクラスに対してスローされます。すべての例外はInputStreamにとって致命的なものであり、不確定な状態になります。</target>
        </trans-unit>
        <trans-unit id="cf1c2ee6799a4bf8beec94001207ffeac6565e0f" translate="yes" xml:space="preserve">
          <source>Exceptions are thrown for problems with the OutputStream and for classes that should not be serialized. All exceptions are fatal to the OutputStream, which is left in an indeterminate state, and it is up to the caller to ignore or recover the stream state.</source>
          <target state="translated">例外は、OutputStream の問題やシリアライズすべきでないクラスに対してスローされます。すべての例外は、不確定な状態で放置されたOutputStreamにとって致命的なものであり、ストリームの状態を無視するか回復するかは呼び出し元に委ねられています。</target>
        </trans-unit>
        <trans-unit id="281537c96c0d4627715f4af1bdb06049dd029515" translate="yes" xml:space="preserve">
          <source>Exceptions thrown by JMX implementations.</source>
          <target state="translated">JMX の実装によってスローされる例外。</target>
        </trans-unit>
        <trans-unit id="2e772a58f3f0e8968962d0c583717b61e03cf72c" translate="yes" xml:space="preserve">
          <source>Exceptions thrown by JMX implementations. It does not include the runtime exceptions.</source>
          <target state="translated">JMX の実装によってスローされる例外。実行時の例外は含まれません。</target>
        </trans-unit>
        <trans-unit id="bff5ffb7c68e80559a1439a5b8d8f3a160f80593" translate="yes" xml:space="preserve">
          <source>Exceptions will follow the definitions of &lt;code&gt;Format&lt;/code&gt;, see those methods for details about &lt;code&gt;IllegalArgumentException&lt;/code&gt; during formatting and &lt;code&gt;ParseException&lt;/code&gt; or null during parsing. The format does not support attributing of the returned format string.</source>
          <target state="translated">例外は &lt;code&gt;Format&lt;/code&gt; の定義に従います。フォーマット中の &lt;code&gt;IllegalArgumentException&lt;/code&gt; および解析中の &lt;code&gt;ParseException&lt;/code&gt; またはnullの詳細については、これらのメソッドを参照してください。この形式は、返された形式文字列の属性をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="82873a5b1d720e56ee4fc28ebee8b8e747ff0aab" translate="yes" xml:space="preserve">
          <source>Exchanger</source>
          <target state="translated">Exchanger</target>
        </trans-unit>
        <trans-unit id="95e5f2d1f30dd69912f505be7340de5eaeafcd85" translate="yes" xml:space="preserve">
          <source>Exchanger.exchange()</source>
          <target state="translated">Exchanger.exchange()</target>
        </trans-unit>
        <trans-unit id="7545ed495bb52356390aa01d9e75bd69128be5d3" translate="yes" xml:space="preserve">
          <source>Exchanges are terminated when both the request InputStream and response OutputStream are closed. Closing the OutputStream, implicitly closes the InputStream (if it is not already closed). However, it is recommended to consume all the data from the InputStream before closing it. The convenience method &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; does all of these tasks. Closing an exchange without consuming all of the request body is not an error but may make the underlying TCP connection unusable for following exchanges. The effect of failing to terminate an exchange is undefined, but will typically result in resources failing to be freed/reused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba50cff8997d1233978efa5312942beb1cf9006e" translate="yes" xml:space="preserve">
          <source>Exclusive XML Canonicalization algorithm: W3C Recommendation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1e218d258e95e1106eb72e024bc5f907a7ee24" translate="yes" xml:space="preserve">
          <source>Exclusive mode implies:</source>
          <target state="translated">排他的なモードを暗示している。</target>
        </trans-unit>
        <trans-unit id="3e79b054dd87235008fd8aa5dfa58edf51546ea4" translate="yes" xml:space="preserve">
          <source>Exclusively acquires the lock if it is available within the given time and the current thread has not been interrupted.</source>
          <target state="translated">与えられた時間内に利用可能で、現在のスレッドが中断されていない場合、排他的にロックを取得します。</target>
        </trans-unit>
        <trans-unit id="ebf5e7aca337773666999966ebe9fe5ef9272a9d" translate="yes" xml:space="preserve">
          <source>Exclusively acquires the lock if it is available within the given time and the current thread has not been interrupted. Behavior under timeout and interruption matches that specified for method &lt;a href=&quot;lock#tryLock(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;Lock.tryLock(long,TimeUnit)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された時間内にロックが使用可能であり、現在のスレッドが中断されていない場合、ロックを排他的に取得します。タイムアウトおよび中断時の動作は、メソッド&lt;a href=&quot;lock#tryLock(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;Lock.tryLock(long,TimeUnit)&lt;/code&gt; &lt;/a&gt;指定されたものと一致します。</target>
        </trans-unit>
        <trans-unit id="ef36d425472383be4317ab051a1e070cf062328c" translate="yes" xml:space="preserve">
          <source>Exclusively acquires the lock if it is available within the given time and the current thread has not been interrupted. Behavior under timeout and interruption matches that specified for method &lt;a href=&quot;lock#tryLock-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;Lock.tryLock(long,TimeUnit)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定された時間内にロックが使用可能で、現在のスレッドが中断されていない場合は、排他的にロックを取得します。タイムアウトと中断の動作は&lt;a href=&quot;lock#tryLock-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;Lock.tryLock(long,TimeUnit)&lt;/code&gt; &lt;/a&gt;メソッドに指定された動作と一致します。</target>
        </trans-unit>
        <trans-unit id="dbad2b9f391b51e57ebe906b3b29680517bd9687" translate="yes" xml:space="preserve">
          <source>Exclusively acquires the lock if it is immediately available.</source>
          <target state="translated">すぐに使用可能な場合は排他的にロックを取得します。</target>
        </trans-unit>
        <trans-unit id="0415cdaa2b0d9b79117a6ce0d91b0a7baafce17d" translate="yes" xml:space="preserve">
          <source>Exclusively acquires the lock, blocking if necessary until available or the current thread is interrupted.</source>
          <target state="translated">ロックを排他的に取得し、利用可能になるまで、または現在のスレッドが中断されるまで、必要に応じてブロックします。</target>
        </trans-unit>
        <trans-unit id="429921914fa15adc85f55a44093c62d6792ed92a" translate="yes" xml:space="preserve">
          <source>Exclusively acquires the lock, blocking if necessary until available or the current thread is interrupted. Behavior under interruption matches that specified for method &lt;a href=&quot;lock#lockInterruptibly()&quot;&gt;&lt;code&gt;Lock.lockInterruptibly()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ロックを排他的に取得し、必要に応じて使用可能になるか、現在のスレッドが中断されるまでブロックします。中断時の動作は、メソッド&lt;a href=&quot;lock#lockInterruptibly()&quot;&gt; &lt;code&gt;Lock.lockInterruptibly()&lt;/code&gt; に&lt;/a&gt;指定された動作と一致します。</target>
        </trans-unit>
        <trans-unit id="ac1454a19933c89587d154d0855728d804230c16" translate="yes" xml:space="preserve">
          <source>Exclusively acquires the lock, blocking if necessary until available or the current thread is interrupted. Behavior under interruption matches that specified for method &lt;a href=&quot;lock#lockInterruptibly--&quot;&gt;&lt;code&gt;Lock.lockInterruptibly()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">排他的にロックを取得し、必要に応じて使用可能になるか、現在のスレッドが中断されるまでブロックします。割り込み時の動作は、&lt;a href=&quot;lock#lockInterruptibly--&quot;&gt; &lt;code&gt;Lock.lockInterruptibly()&lt;/code&gt; &lt;/a&gt;メソッドに指定された動作と一致します。</target>
        </trans-unit>
        <trans-unit id="0b6e818e8f232c7d35324d865011d205ef193b32" translate="yes" xml:space="preserve">
          <source>Exclusively acquires the lock, blocking if necessary until available.</source>
          <target state="translated">ロックを排他的に取得し、必要に応じて利用可能になるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="6f703edabecadca858d4f72f50010adbab5f0d55" translate="yes" xml:space="preserve">
          <source>Executable</source>
          <target state="translated">Executable</target>
        </trans-unit>
        <trans-unit id="e654b790f58bb6587f4a1cb99ebf6c46d88c0641" translate="yes" xml:space="preserve">
          <source>Executable.getAnnotatedExceptionTypes()</source>
          <target state="translated">Executable.getAnnotatedExceptionTypes()</target>
        </trans-unit>
        <trans-unit id="95f1302a792d31827747931b520f45d7937a10dd" translate="yes" xml:space="preserve">
          <source>Executable.getAnnotatedParameterTypes()</source>
          <target state="translated">Executable.getAnnotatedParameterTypes()</target>
        </trans-unit>
        <trans-unit id="e205d19bdc867653301b601211a300f7774d7d12" translate="yes" xml:space="preserve">
          <source>Executable.getAnnotatedReceiverType()</source>
          <target state="translated">Executable.getAnnotatedReceiverType()</target>
        </trans-unit>
        <trans-unit id="a2f81b1227602f3cbc0d6f0c1ba7bb7d73036fc4" translate="yes" xml:space="preserve">
          <source>Executable.getAnnotatedReturnType()</source>
          <target state="translated">Executable.getAnnotatedReturnType()</target>
        </trans-unit>
        <trans-unit id="c6604887ec6ced32434660d7f6e34648b19430ae" translate="yes" xml:space="preserve">
          <source>Executable.getAnnotation()</source>
          <target state="translated">Executable.getAnnotation()</target>
        </trans-unit>
        <trans-unit id="2c5c6385c69451a83f8894957180b6352b612d6f" translate="yes" xml:space="preserve">
          <source>Executable.getAnnotationsByType()</source>
          <target state="translated">Executable.getAnnotationsByType()</target>
        </trans-unit>
        <trans-unit id="08b3812a93299fadf646fab352d802480547df63" translate="yes" xml:space="preserve">
          <source>Executable.getDeclaredAnnotations()</source>
          <target state="translated">Executable.getDeclaredAnnotations()</target>
        </trans-unit>
        <trans-unit id="65432b4ff017f9bb356f563631cfab97a8720405" translate="yes" xml:space="preserve">
          <source>Executable.getDeclaringClass()</source>
          <target state="translated">Executable.getDeclaringClass()</target>
        </trans-unit>
        <trans-unit id="1bab26e799971c17702fdce09fd9a47a1ee51b25" translate="yes" xml:space="preserve">
          <source>Executable.getExceptionTypes()</source>
          <target state="translated">Executable.getExceptionTypes()</target>
        </trans-unit>
        <trans-unit id="8f2f56eb641bc885842d66c9dc49626ed4423c2f" translate="yes" xml:space="preserve">
          <source>Executable.getGenericExceptionTypes()</source>
          <target state="translated">Executable.getGenericExceptionTypes()</target>
        </trans-unit>
        <trans-unit id="e59b10f66d016b3995e24c91eee1dbcbae7b8519" translate="yes" xml:space="preserve">
          <source>Executable.getGenericParameterTypes()</source>
          <target state="translated">Executable.getGenericParameterTypes()</target>
        </trans-unit>
        <trans-unit id="362b827de767b20fa26c98fd895bfdc95f8a281b" translate="yes" xml:space="preserve">
          <source>Executable.getModifiers()</source>
          <target state="translated">Executable.getModifiers()</target>
        </trans-unit>
        <trans-unit id="3f69019894ecc2131c5604bd263a6f47f12abf84" translate="yes" xml:space="preserve">
          <source>Executable.getName()</source>
          <target state="translated">Executable.getName()</target>
        </trans-unit>
        <trans-unit id="557e08fd19728631dac2c3addbd30fc19417ea74" translate="yes" xml:space="preserve">
          <source>Executable.getParameterAnnotations()</source>
          <target state="translated">Executable.getParameterAnnotations()</target>
        </trans-unit>
        <trans-unit id="e13e4d7ef478f6d7d17372b998ab87b697c2a93c" translate="yes" xml:space="preserve">
          <source>Executable.getParameterCount()</source>
          <target state="translated">Executable.getParameterCount()</target>
        </trans-unit>
        <trans-unit id="071cf7f9acc780af30a6820f0a45bb69bd0a5e5c" translate="yes" xml:space="preserve">
          <source>Executable.getParameterTypes()</source>
          <target state="translated">Executable.getParameterTypes()</target>
        </trans-unit>
        <trans-unit id="3a6f1f9b7c123fe42a4ebf1936745fa616a7e1d7" translate="yes" xml:space="preserve">
          <source>Executable.getParameters()</source>
          <target state="translated">Executable.getParameters()</target>
        </trans-unit>
        <trans-unit id="53fa5813eb9d413f713dbc18f19b933d04cd22f2" translate="yes" xml:space="preserve">
          <source>Executable.getTypeParameters()</source>
          <target state="translated">Executable.getTypeParameters()</target>
        </trans-unit>
        <trans-unit id="708dafe97ec91b21b6d3d204d6ec9b8d00e232cb" translate="yes" xml:space="preserve">
          <source>Executable.isSynthetic()</source>
          <target state="translated">Executable.isSynthetic()</target>
        </trans-unit>
        <trans-unit id="6d25660cc43fd9fd2e0269d436ce2a328ad4ac7e" translate="yes" xml:space="preserve">
          <source>Executable.isVarArgs()</source>
          <target state="translated">Executable.isVarArgs()</target>
        </trans-unit>
        <trans-unit id="e80d140b2814a9bd58616a7341627a52ce2ef190" translate="yes" xml:space="preserve">
          <source>Executable.toGenericString()</source>
          <target state="translated">Executable.toGenericString()</target>
        </trans-unit>
        <trans-unit id="ccb559b84209bfe2cf82016458cfa552352da557" translate="yes" xml:space="preserve">
          <source>ExecutableElement</source>
          <target state="translated">ExecutableElement</target>
        </trans-unit>
        <trans-unit id="19122b8ac74bfed7e6f388b4cd91b20d6a031883" translate="yes" xml:space="preserve">
          <source>ExecutableElement.getDefaultValue()</source>
          <target state="translated">ExecutableElement.getDefaultValue()</target>
        </trans-unit>
        <trans-unit id="3fc3d7d65f6d12e835891ff8246e5862af5022a6" translate="yes" xml:space="preserve">
          <source>ExecutableElement.getParameters()</source>
          <target state="translated">ExecutableElement.getParameters()</target>
        </trans-unit>
        <trans-unit id="8b6ab64ea4fa9b7fb6d732492f0763986674f63e" translate="yes" xml:space="preserve">
          <source>ExecutableElement.getReceiverType()</source>
          <target state="translated">ExecutableElement.getReceiverType()</target>
        </trans-unit>
        <trans-unit id="cdd41fc9de13f0264ff5dae5ccbcd4095e9fad30" translate="yes" xml:space="preserve">
          <source>ExecutableElement.getReturnType()</source>
          <target state="translated">ExecutableElement.getReturnType()</target>
        </trans-unit>
        <trans-unit id="16d93a3a0b777c139f371d2e35c12db3e09b5d79" translate="yes" xml:space="preserve">
          <source>ExecutableElement.getSimpleName()</source>
          <target state="translated">ExecutableElement.getSimpleName()</target>
        </trans-unit>
        <trans-unit id="38cd624d4bc17c304e37f771c6f99b6af066cc98" translate="yes" xml:space="preserve">
          <source>ExecutableElement.getThrownTypes()</source>
          <target state="translated">ExecutableElement.getThrownTypes()</target>
        </trans-unit>
        <trans-unit id="abf22c7ca0270cc6bc0175731b671b9e758818b8" translate="yes" xml:space="preserve">
          <source>ExecutableElement.getTypeParameters()</source>
          <target state="translated">ExecutableElement.getTypeParameters()</target>
        </trans-unit>
        <trans-unit id="3bb559c298e9dedc4335da99ae68bf9e18ac08a3" translate="yes" xml:space="preserve">
          <source>ExecutableElement.isDefault()</source>
          <target state="translated">ExecutableElement.isDefault()</target>
        </trans-unit>
        <trans-unit id="049d29a9c17c37b858cf1ebbf3a71599b11d7cc7" translate="yes" xml:space="preserve">
          <source>ExecutableElement.isVarArgs()</source>
          <target state="translated">ExecutableElement.isVarArgs()</target>
        </trans-unit>
        <trans-unit id="6881a905e6841630620f5f423feb0eb937092b6f" translate="yes" xml:space="preserve">
          <source>ExecutableType</source>
          <target state="translated">ExecutableType</target>
        </trans-unit>
        <trans-unit id="b23b6c2c271e7c23f5f251c3d7b00f58e6b45b56" translate="yes" xml:space="preserve">
          <source>ExecutableType.getParameterTypes()</source>
          <target state="translated">ExecutableType.getParameterTypes()</target>
        </trans-unit>
        <trans-unit id="24ba8363bc1c8e736c51e28fbf6179fd5eebfe9d" translate="yes" xml:space="preserve">
          <source>ExecutableType.getReceiverType()</source>
          <target state="translated">ExecutableType.getReceiverType()</target>
        </trans-unit>
        <trans-unit id="70e9da2aadda086344897429c466c8420a396d5e" translate="yes" xml:space="preserve">
          <source>ExecutableType.getReturnType()</source>
          <target state="translated">ExecutableType.getReturnType()</target>
        </trans-unit>
        <trans-unit id="a51191c0d552b636fcf930917cffa1853c2f7d0f" translate="yes" xml:space="preserve">
          <source>ExecutableType.getThrownTypes()</source>
          <target state="translated">ExecutableType.getThrownTypes()</target>
        </trans-unit>
        <trans-unit id="831ca48ebd1084f0cb2d7b16a0c9714c7db7f004" translate="yes" xml:space="preserve">
          <source>ExecutableType.getTypeVariables()</source>
          <target state="translated">ExecutableType.getTypeVariables()</target>
        </trans-unit>
        <trans-unit id="ab3360885859f2573825ee86c70d907de08a1d63" translate="yes" xml:space="preserve">
          <source>Execute/search permission, group.</source>
          <target state="translated">実行/検索許可、グループ。</target>
        </trans-unit>
        <trans-unit id="42b500c4c22592887276bf388bb3921a67afea81" translate="yes" xml:space="preserve">
          <source>Execute/search permission, others.</source>
          <target state="translated">実行/検索許可、他</target>
        </trans-unit>
        <trans-unit id="3623adc634bb1860fe8641767715b766241b0775" translate="yes" xml:space="preserve">
          <source>Execute/search permission, owner.</source>
          <target state="translated">実行/検索許可、所有者。</target>
        </trans-unit>
        <trans-unit id="9faa286496cdf585b37441bacddc997e6a44aa14" translate="yes" xml:space="preserve">
          <source>Executed on the</source>
          <target state="translated">で実行されています。</target>
        </trans-unit>
        <trans-unit id="b1b1d3126f6371acb5c706b191d4f570b18539b1" translate="yes" xml:space="preserve">
          <source>Executes &lt;code&gt;command&lt;/code&gt; with zero required delay.</source>
          <target state="translated">必要な遅延なしで &lt;code&gt;command&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="2f08b09bd22618e79c3112c0c4c565af19d86bd3" translate="yes" xml:space="preserve">
          <source>Executes &lt;code&gt;command&lt;/code&gt; with zero required delay. This has effect equivalent to &lt;a href=&quot;#schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;schedule(command, 0, anyUnit)&lt;/code&gt;&lt;/a&gt;. Note that inspections of the queue and of the list returned by &lt;code&gt;shutdownNow&lt;/code&gt; will access the zero-delayed &lt;a href=&quot;scheduledfuture&quot;&gt;&lt;code&gt;ScheduledFuture&lt;/code&gt;&lt;/a&gt;, not the &lt;code&gt;command&lt;/code&gt; itself.</source>
          <target state="translated">必要な遅延なしで &lt;code&gt;command&lt;/code&gt; を実行します。これは、&lt;a href=&quot;#schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;schedule(command, 0, anyUnit)&lt;/code&gt; &lt;/a&gt;と同等の効果があります。 &lt;code&gt;shutdownNow&lt;/code&gt; によって返されるキューとリストの検査は、 &lt;code&gt;command&lt;/code&gt; 自体ではなく、遅延ゼロの&lt;a href=&quot;scheduledfuture&quot;&gt; &lt;code&gt;ScheduledFuture&lt;/code&gt; に&lt;/a&gt;アクセスすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="63d08f8d18dcc09deb8ecc0dbfa8d6e8800f8311" translate="yes" xml:space="preserve">
          <source>Executes &lt;code&gt;command&lt;/code&gt; with zero required delay. This has effect equivalent to &lt;a href=&quot;scheduledthreadpoolexecutor#schedule-java.lang.Runnable-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;schedule(command, 0, anyUnit)&lt;/code&gt;&lt;/a&gt;. Note that inspections of the queue and of the list returned by &lt;code&gt;shutdownNow&lt;/code&gt; will access the zero-delayed &lt;a href=&quot;scheduledfuture&quot;&gt;&lt;code&gt;ScheduledFuture&lt;/code&gt;&lt;/a&gt;, not the &lt;code&gt;command&lt;/code&gt; itself.</source>
          <target state="translated">必要な遅延なしで &lt;code&gt;command&lt;/code&gt; を実行します。これは、&lt;a href=&quot;scheduledthreadpoolexecutor#schedule-java.lang.Runnable-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;schedule(command, 0, anyUnit)&lt;/code&gt; &lt;/a&gt;と同等の効果があります。キューおよび &lt;code&gt;shutdownNow&lt;/code&gt; によって返されるリストの検査は、 &lt;code&gt;command&lt;/code&gt; 自体ではなく、ゼロ遅延の&lt;a href=&quot;scheduledfuture&quot;&gt; &lt;code&gt;ScheduledFuture&lt;/code&gt; に&lt;/a&gt;アクセスすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4ed8440cdf8944e02a3f06d50c82de959cc27a53" translate="yes" xml:space="preserve">
          <source>Executes an operation within the context of a particular &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; lookup object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1609a9eb8dbe91d0e47e4b157e8961b7c08b637" translate="yes" xml:space="preserve">
          <source>Executes an operation within the context of a particular &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; lookup object. Normally, methods on &lt;code&gt;LinkerServices&lt;/code&gt; are invoked as part of the linking mechanism in which case Dynalink internally maintains a per-thread current lookup (the one belonging to the descriptor of the call site being linked). This lookup can be retrieved by any &lt;a href=&quot;guardingtypeconverterfactory&quot;&gt;&lt;code&gt;GuardingTypeConverterFactory&lt;/code&gt;&lt;/a&gt; involved in linking if it needs to generate lookup-sensitive converters. However, linker services' methods can be invoked outside the linking process too when implementing invocation-time dispatch schemes, invoking conversions at runtime, etc. If it becomes necessary to use any type converter in this situation, and it needs a lookup, it will normally only get &lt;a href=&quot;../../../../java.base/java/lang/invoke/methodhandles#publicLookup()&quot;&gt;&lt;code&gt;MethodHandles.publicLookup()&lt;/code&gt;&lt;/a&gt; as the thread is not engaged in a linking operation. If there is a way to meaningfully associate the operation to the context of some caller class, consider performing it within an invocation of this method and passing a full-strength lookup for that class, as it will associate that lookup with the current thread for the duration of the operation. Note that since you are passing a &lt;a href=&quot;../securelookupsupplier&quot;&gt;&lt;code&gt;SecureLookupSupplier&lt;/code&gt;&lt;/a&gt;, any invoked type converter factories will still need to hold the necessary runtime permission to be able to get the lookup should they need it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d69f39839d816e5ad9c0523800ab24a553c57558" translate="yes" xml:space="preserve">
          <source>Executes task r in the caller's thread, unless the executor has been shut down, in which case the task is discarded.</source>
          <target state="translated">実行者がシャットダウンされていない限り、呼び出し元のスレッドでタスク r を実行します。</target>
        </trans-unit>
        <trans-unit id="d70503011aa958aa8cefcd63837dcdbf91545da1" translate="yes" xml:space="preserve">
          <source>Executes the Runnable's &lt;code&gt;run()&lt;/code&gt; method and notifies the notifier (if any) when &lt;code&gt;run()&lt;/code&gt; has returned or thrown an exception.</source>
          <target state="translated">Runnableの &lt;code&gt;run()&lt;/code&gt; メソッドを実行し、 &lt;code&gt;run()&lt;/code&gt; が例外を返すかスローしたときに、通知機能（存在する場合）に通知します。</target>
        </trans-unit>
        <trans-unit id="c05233a3efd06d8cdb4ba9d53a6e925525efba07" translate="yes" xml:space="preserve">
          <source>Executes the SQL query in this &lt;code&gt;PreparedStatement&lt;/code&gt; object and returns the &lt;code&gt;ResultSet&lt;/code&gt; object generated by the query.</source>
          <target state="translated">この &lt;code&gt;PreparedStatement&lt;/code&gt; オブジェクトでSQLクエリを実行し、クエリによって生成された &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="8dadd1690aa0eebc60b6bf4c41785ba4ba2d5c98" translate="yes" xml:space="preserve">
          <source>Executes the SQL statement in this &lt;code&gt;PreparedStatement&lt;/code&gt; object, which may be any kind of SQL statement.</source>
          <target state="translated">この &lt;code&gt;PreparedStatement&lt;/code&gt; オブジェクトでSQLステートメントを実行します。これは任意の種類のSQLステートメントです。</target>
        </trans-unit>
        <trans-unit id="bf91384b8d0b2c43fb16cb9d034bcc72beb380a9" translate="yes" xml:space="preserve">
          <source>Executes the SQL statement in this &lt;code&gt;PreparedStatement&lt;/code&gt; object, which may be any kind of SQL statement. Some prepared statements return multiple results; the &lt;code&gt;execute&lt;/code&gt; method handles these complex statements as well as the simpler form of statements handled by the methods &lt;code&gt;executeQuery&lt;/code&gt; and &lt;code&gt;executeUpdate&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;PreparedStatement&lt;/code&gt; オブジェクトでSQLステートメントを実行します。これは任意の種類のSQLステートメントです。一部のプリペアドステートメントは複数の結果を返します。 &lt;code&gt;execute&lt;/code&gt; メソッドハンドルこれらの複合ステートメントと同様の方法により処理ステートメントの単純な形態 &lt;code&gt;executeQuery&lt;/code&gt; と &lt;code&gt;executeUpdate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ebb80253c0a56a60cb114a54ea3e064259a8aa40" translate="yes" xml:space="preserve">
          <source>Executes the SQL statement in this &lt;code&gt;PreparedStatement&lt;/code&gt; object, which must be an SQL Data Manipulation Language (DML) statement, such as &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt; or &lt;code&gt;DELETE&lt;/code&gt;; or an SQL statement that returns nothing, such as a DDL statement.</source>
          <target state="translated">この &lt;code&gt;PreparedStatement&lt;/code&gt; オブジェクトでSQLステートメントを実行します。これは、 &lt;code&gt;INSERT&lt;/code&gt; 、 &lt;code&gt;UPDATE&lt;/code&gt; 、 &lt;code&gt;DELETE&lt;/code&gt; などのSQLデータ操作言語（DML）ステートメントである必要があります。または、DDLステートメントなどの何も返さないSQLステートメント。</target>
        </trans-unit>
        <trans-unit id="a10e64423df918e7dadbab16002322f1f63baf50" translate="yes" xml:space="preserve">
          <source>Executes the computation without setting its result, and then resets this future to initial state, failing to do so if the computation encounters an exception or is cancelled.</source>
          <target state="translated">結果を設定せずに計算を実行し、この未来を初期状態にリセットします。</target>
        </trans-unit>
        <trans-unit id="72abec0f41b22d30f1c291ab3adac6f350865a8c" translate="yes" xml:space="preserve">
          <source>Executes the computation without setting its result, and then resets this future to initial state, failing to do so if the computation encounters an exception or is cancelled. This is designed for use with tasks that intrinsically execute more than once.</source>
          <target state="translated">結果を設定せずに計算を実行し、この未来を初期状態にリセットします。これは、本質的に複数回実行するタスク用に設計されています。</target>
        </trans-unit>
        <trans-unit id="e166adca3c0dccc02ae1be978f76fa0a1ce20b8b" translate="yes" xml:space="preserve">
          <source>Executes the given SQL statement and signals the driver that the auto-generated keys indicated in the given array should be made available for retrieval.</source>
          <target state="translated">指定された SQL 文を実行し、指定された配列で示された自動生成された鍵を検索できるようにすることをドライバに通知する。</target>
        </trans-unit>
        <trans-unit id="6c7ed5360ee09d3f3e594243a95f6279850e520b" translate="yes" xml:space="preserve">
          <source>Executes the given SQL statement and signals the driver that the auto-generated keys indicated in the given array should be made available for retrieval. This array contains the indexes of the columns in the target table that contain the auto-generated keys that should be made available. The driver will ignore the array if the SQL statement is not an &lt;code&gt;INSERT&lt;/code&gt; statement, or an SQL statement able to return auto-generated keys (the list of such statements is vendor-specific).</source>
          <target state="translated">指定されたSQLステートメントを実行し、指定された配列に示されている自動生成されたキーを取得できるようにする必要があることをドライバーに通知します。この配列には、使用可能にする必要がある自動生成されたキーを含むターゲットテーブルの列のインデックスが含まれています。SQLステートメントが &lt;code&gt;INSERT&lt;/code&gt; ステートメントでない場合、または自動生成されたキーを返すことができるSQLステートメントでない場合（このようなステートメントのリストはベンダー固有です）、ドライバーは配列を無視します。</target>
        </trans-unit>
        <trans-unit id="8425ccd159f37b3200652194360ab8d0e26d2ee5" translate="yes" xml:space="preserve">
          <source>Executes the given SQL statement and signals the driver that the auto-generated keys indicated in the given array should be made available for retrieval. This array contains the names of the columns in the target table that contain the auto-generated keys that should be made available. The driver will ignore the array if the SQL statement is not an &lt;code&gt;INSERT&lt;/code&gt; statement, or an SQL statement able to return auto-generated keys (the list of such statements is vendor-specific).</source>
          <target state="translated">指定されたSQLステートメントを実行し、指定された配列に示されている自動生成されたキーを取得できるようにする必要があることをドライバーに通知します。この配列には、使用可能にする必要がある自動生成されたキーを含むターゲットテーブルの列の名前が含まれています。SQLステートメントが &lt;code&gt;INSERT&lt;/code&gt; ステートメントでない場合、または自動生成されたキーを返すことができるSQLステートメントでない場合（このようなステートメントのリストはベンダー固有です）、ドライバーは配列を無視します。</target>
        </trans-unit>
        <trans-unit id="f98f81afcf74eb7d3a6b009e8870fc61d40f6997" translate="yes" xml:space="preserve">
          <source>Executes the given SQL statement and signals the driver with the given flag about whether the auto-generated keys produced by this &lt;code&gt;Statement&lt;/code&gt; object should be made available for retrieval.</source>
          <target state="translated">指定されたSQLステートメントを実行し、この &lt;code&gt;Statement&lt;/code&gt; オブジェクトによって生成された自動生成されたキーを取得できるようにするかどうかについて、指定されたフラグを使用してドライバーに通知します。</target>
        </trans-unit>
        <trans-unit id="8fdb0492a32defaf376046871be34621215abff5" translate="yes" xml:space="preserve">
          <source>Executes the given SQL statement and signals the driver with the given flag about whether the auto-generated keys produced by this &lt;code&gt;Statement&lt;/code&gt; object should be made available for retrieval. The driver will ignore the flag if the SQL statement is not an &lt;code&gt;INSERT&lt;/code&gt; statement, or an SQL statement able to return auto-generated keys (the list of such statements is vendor-specific).</source>
          <target state="translated">指定されたSQLステートメントを実行し、この &lt;code&gt;Statement&lt;/code&gt; オブジェクトによって生成された自動生成されたキーを取得できるようにするかどうかについて、指定されたフラグを使用してドライバーに通知します。SQLステートメントが &lt;code&gt;INSERT&lt;/code&gt; ステートメントでない場合、または自動生成されたキーを返すことができるSQLステートメントでない場合（このようなステートメントのリストはベンダー固有です）、ドライバーはフラグを無視します。</target>
        </trans-unit>
        <trans-unit id="0de84e6ebd948df4803eb77bf807237af31cc1e7" translate="yes" xml:space="preserve">
          <source>Executes the given SQL statement, which may be an &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, or &lt;code&gt;DELETE&lt;/code&gt; statement or an SQL statement that returns nothing, such as an SQL DDL statement.</source>
          <target state="translated">指定されたSQLステートメントを実行します。これは、 &lt;code&gt;INSERT&lt;/code&gt; 、 &lt;code&gt;UPDATE&lt;/code&gt; 、または &lt;code&gt;DELETE&lt;/code&gt; ステートメント、またはSQLDDLステートメントなどの何も返さないSQLステートメントの場合があります。</target>
        </trans-unit>
        <trans-unit id="4c7d3e5dde2bea1b080a4049bfac89b155441fb0" translate="yes" xml:space="preserve">
          <source>Executes the given SQL statement, which may return multiple results, and signals the driver that any auto-generated keys should be made available for retrieval.</source>
          <target state="translated">複数の結果を返す可能性のあるSQL文を実行し、自動生成されたキーを検索可能な状態にすることをドライバに通知する。</target>
        </trans-unit>
        <trans-unit id="e6745d1df3176d9f4013dfd781ec0c21266a9929" translate="yes" xml:space="preserve">
          <source>Executes the given SQL statement, which may return multiple results, and signals the driver that any auto-generated keys should be made available for retrieval. The driver will ignore this signal if the SQL statement is not an &lt;code&gt;INSERT&lt;/code&gt; statement, or an SQL statement able to return auto-generated keys (the list of such statements is vendor-specific).</source>
          <target state="translated">指定されたSQLステートメントを実行します。これにより、複数の結果が返される場合があり、自動生成されたキーを取得できるようにする必要があることをドライバーに通知します。 SQLステートメントが &lt;code&gt;INSERT&lt;/code&gt; ステートメントでない場合、または自動生成されたキーを返すことができるSQLステートメントでない場合（このようなステートメントのリストはベンダー固有です）、ドライバーはこのシグナルを無視します。</target>
        </trans-unit>
        <trans-unit id="df333fe0494a49f92a04e3f4d53e6aa0261b5384" translate="yes" xml:space="preserve">
          <source>Executes the given SQL statement, which may return multiple results, and signals the driver that the auto-generated keys indicated in the given array should be made available for retrieval.</source>
          <target state="translated">複数の結果を返す可能性のある SQL 文を実行し、指定された配列で示された自動生成された鍵を検索可能な状態にすることをドライバに通知する。</target>
        </trans-unit>
        <trans-unit id="01c51ad9beeaccbcb69fad67fa0b9d0d99ff296e" translate="yes" xml:space="preserve">
          <source>Executes the given SQL statement, which may return multiple results, and signals the driver that the auto-generated keys indicated in the given array should be made available for retrieval. This array contains the indexes of the columns in the target table that contain the auto-generated keys that should be made available. The driver will ignore the array if the SQL statement is not an &lt;code&gt;INSERT&lt;/code&gt; statement, or an SQL statement able to return auto-generated keys (the list of such statements is vendor-specific).</source>
          <target state="translated">指定されたSQLステートメントを実行します。これにより、複数の結果が返される場合があり、指定された配列に示されている自動生成されたキーを取得できるようにする必要があることをドライバーに通知します。この配列には、使用可能にする必要がある自動生成されたキーを含むターゲットテーブルの列のインデックスが含まれています。 SQLステートメントが &lt;code&gt;INSERT&lt;/code&gt; ステートメントでない場合、または自動生成されたキーを返すことができるSQLステートメントでない場合（このようなステートメントのリストはベンダー固有です）、ドライバーは配列を無視します。</target>
        </trans-unit>
        <trans-unit id="be9be42ff71457c39eb1000b7f05a3b53ee6d6cd" translate="yes" xml:space="preserve">
          <source>Executes the given SQL statement, which may return multiple results, and signals the driver that the auto-generated keys indicated in the given array should be made available for retrieval. This array contains the names of the columns in the target table that contain the auto-generated keys that should be made available. The driver will ignore the array if the SQL statement is not an &lt;code&gt;INSERT&lt;/code&gt; statement, or an SQL statement able to return auto-generated keys (the list of such statements is vendor-specific).</source>
          <target state="translated">指定されたSQLステートメントを実行します。これにより、複数の結果が返される場合があり、指定された配列に示されている自動生成されたキーを取得できるようにする必要があることをドライバーに通知します。この配列には、使用可能にする必要がある自動生成されたキーを含むターゲットテーブルの列の名前が含まれています。SQLステートメントが &lt;code&gt;INSERT&lt;/code&gt; ステートメントでない場合、または自動生成されたキーを返すことができるSQLステートメントでない場合（このようなステートメントのリストはベンダー固有です）、ドライバーは配列を無視します。</target>
        </trans-unit>
        <trans-unit id="57bd3be73282e78b6a1a6fc23263fefdf2eac5cf" translate="yes" xml:space="preserve">
          <source>Executes the given SQL statement, which may return multiple results.</source>
          <target state="translated">与えられたSQL文を実行し、複数の結果を返すことがあります。</target>
        </trans-unit>
        <trans-unit id="7281f75021874e390382fdaf73adb3674ac3e796" translate="yes" xml:space="preserve">
          <source>Executes the given SQL statement, which may return multiple results. In some (uncommon) situations, a single SQL statement may return multiple result sets and/or update counts. Normally you can ignore this unless you are (1) executing a stored procedure that you know may return multiple results or (2) you are dynamically executing an unknown SQL string.</source>
          <target state="translated">複数の結果を返す可能性のあるSQL文を実行します。いくつかの(まれな)状況では、単一のSQL文が複数の結果セットや更新回数を返すことがあります。通常は、(1)複数の結果を返す可能性があることがわかっているストアドプロシージャを実行している場合や、(2)未知のSQL文字列を動的に実行している場合を除いて、これを無視することができます。</target>
        </trans-unit>
        <trans-unit id="0d2ee5d156981d5878faa577d2dab0c99477309c" translate="yes" xml:space="preserve">
          <source>Executes the given SQL statement, which returns a single &lt;code&gt;ResultSet&lt;/code&gt; object.</source>
          <target state="translated">指定されたSQLステートメントを実行し、単一の &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="5cb24b147f3ca978cde1ed4f1854a9227a8bb5bf" translate="yes" xml:space="preserve">
          <source>Executes the given command at some time in the future.</source>
          <target state="translated">将来のある時点で指定されたコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="3fb3c1e6b2c302263b77dc237b5193571786c7b8" translate="yes" xml:space="preserve">
          <source>Executes the given command at some time in the future. The command may execute in a new thread, in a pooled thread, or in the calling thread, at the discretion of the &lt;code&gt;Executor&lt;/code&gt; implementation.</source>
          <target state="translated">指定されたコマンドを将来のある時点で実行します。コマンドは、 &lt;code&gt;Executor&lt;/code&gt; 実装の裁量で、新しいスレッド、プールされたスレッド、または呼び出しスレッドで実行できます。</target>
        </trans-unit>
        <trans-unit id="339b7ee0b1aad45dfc6ec82c69b1ede5126ab24a" translate="yes" xml:space="preserve">
          <source>Executes the given task sometime in the future.</source>
          <target state="translated">与えられたタスクを未来のある日に実行します。</target>
        </trans-unit>
        <trans-unit id="47299960c11e48169fc032c0e98498621dde9d7b" translate="yes" xml:space="preserve">
          <source>Executes the given task sometime in the future. The task may execute in a new thread or in an existing pooled thread. If the task cannot be submitted for execution, either because this executor has been shutdown or because its capacity has been reached, the task is handled by the current &lt;a href=&quot;rejectedexecutionhandler&quot;&gt;&lt;code&gt;RejectedExecutionHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将来、指定されたタスクを実行します。タスクは、新しいスレッドまたは既存のプールされたスレッドで実行できます。このエグゼキュータがシャットダウンされたか、その容量に達したためにタスクを実行に移すことができない場合、タスクは現在の&lt;a href=&quot;rejectedexecutionhandler&quot;&gt; &lt;code&gt;RejectedExecutionHandler&lt;/code&gt; &lt;/a&gt;によって処理されます。</target>
        </trans-unit>
        <trans-unit id="c13e4c8e492a5e35e95ad7d167e82298a86ceb3c" translate="yes" xml:space="preserve">
          <source>Executes the given task sometime in the future. The task may execute in a new thread or in an existing pooled thread. If the task cannot be submitted for execution, either because this executor has been shutdown or because its capacity has been reached, the task is handled by the current &lt;code&gt;RejectedExecutionHandler&lt;/code&gt;.</source>
          <target state="translated">指定されたタスクを将来実行します。タスクは、新しいスレッドまたは既存のプールされたスレッドで実行できます。このエグゼキューターがシャットダウンされたか、その容量に達したために、タスクを実行のために送信できない場合、タスクは現在の &lt;code&gt;RejectedExecutionHandler&lt;/code&gt; によって処理されます。</target>
        </trans-unit>
        <trans-unit id="aaa8f610620219777ed926cb67eeac737788f24a" translate="yes" xml:space="preserve">
          <source>Executes the given tasks, returning a list of Futures holding their status and results when all complete or the timeout expires, whichever happens first.</source>
          <target state="translated">与えられたタスクを実行し、ステータスと結果を保持する先物のリストを返します。</target>
        </trans-unit>
        <trans-unit id="81b91396a4467d4f3f9ca0875344b55cfc69ce33" translate="yes" xml:space="preserve">
          <source>Executes the given tasks, returning a list of Futures holding their status and results when all complete or the timeout expires, whichever happens first. &lt;a href=&quot;future#isDone()&quot;&gt;&lt;code&gt;Future.isDone()&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; for each element of the returned list. Upon return, tasks that have not completed are cancelled. Note that a &lt;em&gt;completed&lt;/em&gt; task could have terminated either normally or by throwing an exception. The results of this method are undefined if the given collection is modified while this operation is in progress.</source>
          <target state="translated">指定されたタスクを実行し、すべてが完了したとき、またはタイムアウトが期限切れになったときのいずれか早い方で、ステータスと結果を保持する先物のリストを返します。&lt;a href=&quot;future#isDone()&quot;&gt; &lt;code&gt;Future.isDone()&lt;/code&gt; &lt;/a&gt;は、返されたリストの各要素に対して &lt;code&gt;true&lt;/code&gt; です。戻ると、完了していないタスクはキャンセルされます。&lt;em&gt;完了した&lt;/em&gt;タスクは、正常に終了するか、例外をスローすることによって終了する可能性があることに注意してください。この操作の進行中に特定のコレクションが変更された場合、このメソッドの結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="114a77fec7629739db29515e629eb317af73792f" translate="yes" xml:space="preserve">
          <source>Executes the given tasks, returning a list of Futures holding their status and results when all complete or the timeout expires, whichever happens first. &lt;a href=&quot;future#isDone--&quot;&gt;&lt;code&gt;Future.isDone()&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; for each element of the returned list. Upon return, tasks that have not completed are cancelled. Note that a &lt;em&gt;completed&lt;/em&gt; task could have terminated either normally or by throwing an exception. The results of this method are undefined if the given collection is modified while this operation is in progress.</source>
          <target state="translated">指定されたタスクを実行し、すべての完了またはタイムアウトのいずれかが先に発生したときに、ステータスと結果を保持するFutureのリストを返します。&lt;a href=&quot;future#isDone--&quot;&gt; &lt;code&gt;Future.isDone()&lt;/code&gt; &lt;/a&gt;は、返されたリストの各要素に対して &lt;code&gt;true&lt;/code&gt; です。戻ると、完了していないタスクはキャンセルされます。&lt;em&gt;完了した&lt;/em&gt;タスクは、正常に終了したか、例外をスローして終了した可能性があることに注意してください。この操作の進行中に特定のコレクションが変更された場合、このメソッドの結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="9c8911ed6c42e99d24c5bc63ef2835a063c26ed1" translate="yes" xml:space="preserve">
          <source>Executes the given tasks, returning a list of Futures holding their status and results when all complete.</source>
          <target state="translated">与えられたタスクを実行し、ステータスと結果を保持する先物のリストを返します。</target>
        </trans-unit>
        <trans-unit id="9b8a6181920f5d3635e8730c00967e840e24b1f5" translate="yes" xml:space="preserve">
          <source>Executes the given tasks, returning a list of Futures holding their status and results when all complete. &lt;a href=&quot;future#isDone()&quot;&gt;&lt;code&gt;Future.isDone()&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; for each element of the returned list. Note that a &lt;em&gt;completed&lt;/em&gt; task could have terminated either normally or by throwing an exception. The results of this method are undefined if the given collection is modified while this operation is in progress.</source>
          <target state="translated">指定されたタスクを実行し、すべてが完了すると、ステータスと結果を保持する先物のリストを返します。&lt;a href=&quot;future#isDone()&quot;&gt; &lt;code&gt;Future.isDone()&lt;/code&gt; &lt;/a&gt;は、返されたリストの各要素に対して &lt;code&gt;true&lt;/code&gt; です。&lt;em&gt;完了した&lt;/em&gt;タスクは、正常に終了するか、例外をスローすることによって終了する可能性があることに注意してください。この操作の進行中に特定のコレクションが変更された場合、このメソッドの結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="a0ef0deb16ab122ca90e6bfe3ad54ab996f03158" translate="yes" xml:space="preserve">
          <source>Executes the given tasks, returning a list of Futures holding their status and results when all complete. &lt;a href=&quot;future#isDone--&quot;&gt;&lt;code&gt;Future.isDone()&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; for each element of the returned list. Note that a &lt;em&gt;completed&lt;/em&gt; task could have terminated either normally or by throwing an exception. The results of this method are undefined if the given collection is modified while this operation is in progress.</source>
          <target state="translated">指定されたタスクを実行し、すべてが完了すると、ステータスと結果を保持するFutureのリストを返します。&lt;a href=&quot;future#isDone--&quot;&gt; &lt;code&gt;Future.isDone()&lt;/code&gt; &lt;/a&gt;は、返されたリストの各要素に対して &lt;code&gt;true&lt;/code&gt; です。&lt;em&gt;完了した&lt;/em&gt;タスクは、正常に終了したか、例外をスローして終了した可能性があることに注意してください。この操作の進行中に特定のコレクションが変更された場合、このメソッドの結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="cde45277a27a3a0c95622a82a534515addd1fba5" translate="yes" xml:space="preserve">
          <source>Executes the given tasks, returning the result of one that has completed successfully (i.e., without throwing an exception), if any do before the given timeout elapses.</source>
          <target state="translated">与えられたタスクを実行し、指定されたタイムアウトが経過する前に do があれば、正常に完了したもの(例外をスローせずに)の結果を返します。</target>
        </trans-unit>
        <trans-unit id="6691644becafc4cb786e0feda47d61afd05914c6" translate="yes" xml:space="preserve">
          <source>Executes the given tasks, returning the result of one that has completed successfully (i.e., without throwing an exception), if any do before the given timeout elapses. Upon normal or exceptional return, tasks that have not completed are cancelled. The results of this method are undefined if the given collection is modified while this operation is in progress.</source>
          <target state="translated">与えられたタスクを実行し、与えられたタイムアウトが経過する前に完了したタスクがあった場合には、正常に完了した(つまり例外を発生させずに完了した)結果を返します。正常または例外が返された場合、完了していないタスクはキャンセルされます。この操作の進行中に与えられたコレクションが変更された場合、このメソッドの結果は定義されません。</target>
        </trans-unit>
        <trans-unit id="ad94156ce64549d5f044e02e09093984313ad0ee" translate="yes" xml:space="preserve">
          <source>Executes the given tasks, returning the result of one that has completed successfully (i.e., without throwing an exception), if any do.</source>
          <target state="translated">与えられたタスクを実行し、正常に完了したタスクの結果を返します(つまり、例外を投げずに)。</target>
        </trans-unit>
        <trans-unit id="e3a3694059d2081656f6d85b9594de87a5ca5475" translate="yes" xml:space="preserve">
          <source>Executes the given tasks, returning the result of one that has completed successfully (i.e., without throwing an exception), if any do. Upon normal or exceptional return, tasks that have not completed are cancelled. The results of this method are undefined if the given collection is modified while this operation is in progress.</source>
          <target state="translated">与えられたタスクを実行し、正常に完了した(つまり例外を投げずに)タスクの結果を返します。正常または例外が返された場合、完了していないタスクはキャンセルされます。このメソッドの実行中に与えられたコレクションが変更された場合、このメソッドの結果は不定です。</target>
        </trans-unit>
        <trans-unit id="562983ef2444674cb835b1badf5931f14219a006" translate="yes" xml:space="preserve">
          <source>Executes the next phase of this key agreement with the given key that was received from one of the other parties involved in this key agreement.</source>
          <target state="translated">この鍵契約に関与する他の当事者から受け取った鍵を用いて、この鍵契約の次のフェイズを実行する。</target>
        </trans-unit>
        <trans-unit id="6190d2b688b4f5b6df1cba448e0feff2741646f4" translate="yes" xml:space="preserve">
          <source>Executes the program stored in the &lt;code&gt;CompiledScript&lt;/code&gt; object using the supplied &lt;code&gt;Bindings&lt;/code&gt; of attributes as the &lt;code&gt;ENGINE_SCOPE&lt;/code&gt; of the associated &lt;code&gt;ScriptEngine&lt;/code&gt; during script execution.</source>
          <target state="translated">スクリプトの実行中に、関連付けられた &lt;code&gt;ScriptEngine&lt;/code&gt; の &lt;code&gt;ENGINE_SCOPE&lt;/code&gt; として提供された属性の &lt;code&gt;Bindings&lt;/code&gt; を使用して、 &lt;code&gt;CompiledScript&lt;/code&gt; オブジェクトに格納されているプログラムを実行します。</target>
        </trans-unit>
        <trans-unit id="5ac51dd92ba85bb69879fdeeeaf4d1de151a4e08" translate="yes" xml:space="preserve">
          <source>Executes the program stored in the &lt;code&gt;CompiledScript&lt;/code&gt; object using the supplied &lt;code&gt;Bindings&lt;/code&gt; of attributes as the &lt;code&gt;ENGINE_SCOPE&lt;/code&gt; of the associated &lt;code&gt;ScriptEngine&lt;/code&gt; during script execution. If bindings is null, then the effect of calling this method is same as that of eval(getEngine().getContext()).</source>
          <target state="translated">スクリプトの実行中に、指定された属性の &lt;code&gt;Bindings&lt;/code&gt; を関連する &lt;code&gt;ScriptEngine&lt;/code&gt; の &lt;code&gt;ENGINE_SCOPE&lt;/code&gt; として使用して、 &lt;code&gt;CompiledScript&lt;/code&gt; オブジェクトに格納されているプログラムを実行します。bindingsがnullの場合、このメソッドを呼び出すことの効果はeval（getEngine（）。getContext（））の場合と同じです。</target>
        </trans-unit>
        <trans-unit id="a96315909b007577b153746db4aaaa5774b07e8b" translate="yes" xml:space="preserve">
          <source>Executes the program stored in the &lt;code&gt;CompiledScript&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;CompiledScript&lt;/code&gt; オブジェクトに格納されているプログラムを実行します。</target>
        </trans-unit>
        <trans-unit id="eede3a0eff1cce8548c90cc499e26d65e4484d25" translate="yes" xml:space="preserve">
          <source>Executes the program stored in the &lt;code&gt;CompiledScript&lt;/code&gt; object. The default &lt;code&gt;ScriptContext&lt;/code&gt; of the associated &lt;code&gt;ScriptEngine&lt;/code&gt; is used. The effect of calling this method is same as that of eval(getEngine().getContext()).</source>
          <target state="translated">&lt;code&gt;CompiledScript&lt;/code&gt; オブジェクトに格納されているプログラムを実行します。関連する &lt;code&gt;ScriptEngine&lt;/code&gt; のデフォルトの &lt;code&gt;ScriptContext&lt;/code&gt; が使用されます。このメソッドを呼び出す効果は、eval（getEngine（）。getContext（））と同じです。</target>
        </trans-unit>
        <trans-unit id="4337741344fd58b96b23dda0f87fec1b3f73a832" translate="yes" xml:space="preserve">
          <source>Executes the program stored in this &lt;code&gt;CompiledScript&lt;/code&gt; object.</source>
          <target state="translated">この &lt;code&gt;CompiledScript&lt;/code&gt; オブジェクトに格納されているプログラムを実行します。</target>
        </trans-unit>
        <trans-unit id="da8a50cbfe19b2c934113dd5d7071522dbce355e" translate="yes" xml:space="preserve">
          <source>Executes the remote call. Invoke will raise any &quot;user&quot; exceptions which should pass through and not be caught by the stub. If any exception is raised during the remote invocation, invoke should take care of cleaning up the connection before raising the &quot;user&quot; or remote exception.</source>
          <target state="translated">リモートコールを実行します。invoke は、通過すべき &quot;user &quot;例外を発生させ、スタブに捕捉されないようにします。リモート呼び出し中に例外が発生した場合、&quot;user&quot; やリモート例外を発生させる前に、Invoke は接続のクリーンアップを行う必要があります。</target>
        </trans-unit>
        <trans-unit id="ce82e383174010ed826b73ac3a92851b27e361ef" translate="yes" xml:space="preserve">
          <source>Executes the script using the &lt;code&gt;Bindings&lt;/code&gt; argument as the &lt;code&gt;ENGINE_SCOPE&lt;/code&gt;&lt;code&gt;Bindings&lt;/code&gt; of the &lt;code&gt;ScriptEngine&lt;/code&gt; during the script execution.</source>
          <target state="translated">使用してスクリプトを実行し &lt;code&gt;Bindings&lt;/code&gt; として引数を &lt;code&gt;ENGINE_SCOPE&lt;/code&gt; &lt;code&gt;Bindings&lt;/code&gt; の &lt;code&gt;ScriptEngine&lt;/code&gt; のスクリプトの実行中に。</target>
        </trans-unit>
        <trans-unit id="81a7433676d5fa135a5fbe2e9ac3bcbe0c18e197" translate="yes" xml:space="preserve">
          <source>Executes the script using the &lt;code&gt;Bindings&lt;/code&gt; argument as the &lt;code&gt;ENGINE_SCOPE&lt;/code&gt;&lt;code&gt;Bindings&lt;/code&gt; of the &lt;code&gt;ScriptEngine&lt;/code&gt; during the script execution. The &lt;code&gt;Reader&lt;/code&gt;, &lt;code&gt;Writer&lt;/code&gt; and non-&lt;code&gt;ENGINE_SCOPE&lt;/code&gt;&lt;code&gt;Bindings&lt;/code&gt; of the default &lt;code&gt;ScriptContext&lt;/code&gt; are used. The &lt;code&gt;ENGINE_SCOPE&lt;/code&gt;&lt;code&gt;Bindings&lt;/code&gt; of the &lt;code&gt;ScriptEngine&lt;/code&gt; is not changed, and its mappings are unaltered by the script execution.</source>
          <target state="translated">使用してスクリプトを実行し &lt;code&gt;Bindings&lt;/code&gt; として引数を &lt;code&gt;ENGINE_SCOPE&lt;/code&gt; &lt;code&gt;Bindings&lt;/code&gt; の &lt;code&gt;ScriptEngine&lt;/code&gt; のスクリプトの実行中に。デフォルトの &lt;code&gt;ScriptContext&lt;/code&gt; の &lt;code&gt;Reader&lt;/code&gt; 、 &lt;code&gt;Writer&lt;/code&gt; 、および非 &lt;code&gt;ENGINE_SCOPE&lt;/code&gt; &lt;code&gt;Bindings&lt;/code&gt; が使用されます。 &lt;code&gt;ENGINE_SCOPE&lt;/code&gt; &lt;code&gt;Bindings&lt;/code&gt; の &lt;code&gt;ScriptEngine&lt;/code&gt; のは変更されず、そのマッピングは、スクリプトの実行によって変更されていないです。</target>
        </trans-unit>
        <trans-unit id="001b88d6d96f24e8c15494f31ddc8907eab7826a" translate="yes" xml:space="preserve">
          <source>Executes the specified command and arguments in a separate process with the specified environment and working directory.</source>
          <target state="translated">指定された環境と作業ディレクトリで、指定されたコマンドと引数を別プロセスで実行します。</target>
        </trans-unit>
        <trans-unit id="bb670acc574b1adea518fd2cd7caa150de6ed2e9" translate="yes" xml:space="preserve">
          <source>Executes the specified command and arguments in a separate process with the specified environment.</source>
          <target state="translated">指定された環境で、指定されたコマンドと引数を別プロセスで実行します。</target>
        </trans-unit>
        <trans-unit id="51b78847b54abea8865817d1ea39785c317d7cd9" translate="yes" xml:space="preserve">
          <source>Executes the specified command and arguments in a separate process.</source>
          <target state="translated">指定したコマンドと引数を別プロセスで実行します。</target>
        </trans-unit>
        <trans-unit id="ca2b205367d860e908fccf832cd4327487740ce7" translate="yes" xml:space="preserve">
          <source>Executes the specified script.</source>
          <target state="translated">指定されたスクリプトを実行します。</target>
        </trans-unit>
        <trans-unit id="0cefa37703ad76ecb1557a97dce778a7ff5588f6" translate="yes" xml:space="preserve">
          <source>Executes the specified script. The default &lt;code&gt;ScriptContext&lt;/code&gt; for the &lt;code&gt;ScriptEngine&lt;/code&gt; is used.</source>
          <target state="translated">指定されたスクリプトを実行します。デフォルト &lt;code&gt;ScriptContext&lt;/code&gt; ため &lt;code&gt;ScriptEngine&lt;/code&gt; 使用されています。</target>
        </trans-unit>
        <trans-unit id="8b3fe40dc5f7aacaccfd31ad41053a577c20df38" translate="yes" xml:space="preserve">
          <source>Executes the specified string command in a separate process with the specified environment and working directory.</source>
          <target state="translated">指定された環境と作業ディレクトリで、指定された文字列コマンドを別プロセスで実行します。</target>
        </trans-unit>
        <trans-unit id="3ab53c49081a67b0fbb3f81ed8aee40ff5497e82" translate="yes" xml:space="preserve">
          <source>Executes the specified string command in a separate process with the specified environment.</source>
          <target state="translated">指定された環境で、指定された文字列コマンドを別プロセスで実行します。</target>
        </trans-unit>
        <trans-unit id="af255b2b444823e6be64b091a582a04f3d5afdda" translate="yes" xml:space="preserve">
          <source>Executes the specified string command in a separate process.</source>
          <target state="translated">指定した文字列コマンドを別プロセスで実行します。</target>
        </trans-unit>
        <trans-unit id="58ea82f1835bd28b0d3c34f3afdb4dc768149885" translate="yes" xml:space="preserve">
          <source>Executing this code off the</source>
          <target state="translated">このコードをオフに実行する</target>
        </trans-unit>
        <trans-unit id="7016b805a1c8ad6b74bb5e11a63c29d82ba31601" translate="yes" xml:space="preserve">
          <source>Execution information</source>
          <target state="translated">実行情報</target>
        </trans-unit>
        <trans-unit id="64cdfd1ae679f474f88fea8a50e8562f87dc1b8b" translate="yes" xml:space="preserve">
          <source>Execution of bootstrap methods</source>
          <target state="translated">ブートストラップメソッドの実行</target>
        </trans-unit>
        <trans-unit id="3607f6db0e71963dbf52fb28ce9491a4875a7444" translate="yes" xml:space="preserve">
          <source>ExecutionControl</source>
          <target state="translated">ExecutionControl</target>
        </trans-unit>
        <trans-unit id="add5808433c5d494726d17efdbde68a069862405" translate="yes" xml:space="preserve">
          <source>ExecutionControl.ClassBytecodes</source>
          <target state="translated">ExecutionControl.ClassBytecodes</target>
        </trans-unit>
        <trans-unit id="515dc142b1a4071e147912b74a820b340d82d888" translate="yes" xml:space="preserve">
          <source>ExecutionControl.ClassInstallException</source>
          <target state="translated">ExecutionControl.ClassInstallException</target>
        </trans-unit>
        <trans-unit id="08bf6e02975de6bf0a5a760e4e8c9e70f77dd22d" translate="yes" xml:space="preserve">
          <source>ExecutionControl.EngineTerminationException</source>
          <target state="translated">ExecutionControl.EngineTerminationException</target>
        </trans-unit>
        <trans-unit id="6f70d84c02944caec882728640e7ee4e39f2859e" translate="yes" xml:space="preserve">
          <source>ExecutionControl.ExecutionControlException</source>
          <target state="translated">ExecutionControl.ExecutionControlException</target>
        </trans-unit>
        <trans-unit id="45aa55a920504f19864a9e0ea3fa1f3261d35806" translate="yes" xml:space="preserve">
          <source>ExecutionControl.InternalException</source>
          <target state="translated">ExecutionControl.InternalException</target>
        </trans-unit>
        <trans-unit id="089360a285bdb995168ba9956743aaa9d3934aeb" translate="yes" xml:space="preserve">
          <source>ExecutionControl.NotImplementedException</source>
          <target state="translated">ExecutionControl.NotImplementedException</target>
        </trans-unit>
        <trans-unit id="f3508c6df39fdeff44edd6f5e8b5cdcdb2cd483f" translate="yes" xml:space="preserve">
          <source>ExecutionControl.ResolutionException</source>
          <target state="translated">ExecutionControl.ResolutionException</target>
        </trans-unit>
        <trans-unit id="4742c4a3cfc204bfd0c6f95456d0fd468a012e41" translate="yes" xml:space="preserve">
          <source>ExecutionControl.RunException</source>
          <target state="translated">ExecutionControl.RunException</target>
        </trans-unit>
        <trans-unit id="3dacd7e72cfbb6dd8680d13abbb8078e67d827b3" translate="yes" xml:space="preserve">
          <source>ExecutionControl.StoppedException</source>
          <target state="translated">ExecutionControl.StoppedException</target>
        </trans-unit>
        <trans-unit id="dc1d332e0ca14a34c3edb9a67585578a5456186f" translate="yes" xml:space="preserve">
          <source>ExecutionControl.UserException</source>
          <target state="translated">ExecutionControl.UserException</target>
        </trans-unit>
        <trans-unit id="36fc7d126c6ae26b6d43686db6f3551b4740464b" translate="yes" xml:space="preserve">
          <source>ExecutionControlException</source>
          <target state="translated">ExecutionControlException</target>
        </trans-unit>
        <trans-unit id="6e7fe02248099ba383baa2c9920a1032d6df7b33" translate="yes" xml:space="preserve">
          <source>ExecutionControlProvider</source>
          <target state="translated">ExecutionControlProvider</target>
        </trans-unit>
        <trans-unit id="2b7aaf0e6c9b5c7354af438bf4ec9787011029b2" translate="yes" xml:space="preserve">
          <source>ExecutionEnv</source>
          <target state="translated">ExecutionEnv</target>
        </trans-unit>
        <trans-unit id="ca04ca161d9f717511e1dcbca880f0f22ef480e4" translate="yes" xml:space="preserve">
          <source>ExecutionException</source>
          <target state="translated">ExecutionException</target>
        </trans-unit>
        <trans-unit id="c1f6604b7486fef57febf39070b6b5f55ece6c6b" translate="yes" xml:space="preserve">
          <source>Executor</source>
          <target state="translated">Executor</target>
        </trans-unit>
        <trans-unit id="c6558f3cc1f3b687086a9e6b134c6ce487ded4fc" translate="yes" xml:space="preserve">
          <source>Executor.execute()</source>
          <target state="translated">Executor.execute()</target>
        </trans-unit>
        <trans-unit id="b97aa97e52ba1752fe3997bce2370896ed76fdc8" translate="yes" xml:space="preserve">
          <source>ExecutorCompletionService</source>
          <target state="translated">ExecutorCompletionService</target>
        </trans-unit>
        <trans-unit id="81fdddead57e549403d58133896eed8bd270ae45" translate="yes" xml:space="preserve">
          <source>ExecutorCompletionService.poll()</source>
          <target state="translated">ExecutorCompletionService.poll()</target>
        </trans-unit>
        <trans-unit id="6e8785886813ed8baea4ce86383c9ade0b7b3ee8" translate="yes" xml:space="preserve">
          <source>ExecutorCompletionService.submit()</source>
          <target state="translated">ExecutorCompletionService.submit()</target>
        </trans-unit>
        <trans-unit id="9348cf597a605b06c6ad07005ac7d84897050ef8" translate="yes" xml:space="preserve">
          <source>ExecutorCompletionService.take()</source>
          <target state="translated">ExecutorCompletionService.take()</target>
        </trans-unit>
        <trans-unit id="8ddb26c1040b9d3ff00e9f9853423f6dc9ab1e23" translate="yes" xml:space="preserve">
          <source>ExecutorService</source>
          <target state="translated">ExecutorService</target>
        </trans-unit>
        <trans-unit id="5953d7c78f7a56f7170e5ab02800dd3b7738ed06" translate="yes" xml:space="preserve">
          <source>ExecutorService.awaitTermination()</source>
          <target state="translated">ExecutorService.awaitTermination()</target>
        </trans-unit>
        <trans-unit id="fc37399c56f30c0c46614cc0555786dd92d06d6f" translate="yes" xml:space="preserve">
          <source>ExecutorService.invokeAll()</source>
          <target state="translated">ExecutorService.invokeAll()</target>
        </trans-unit>
        <trans-unit id="2d7854536d3189889fe394322835762392ec6cdd" translate="yes" xml:space="preserve">
          <source>ExecutorService.invokeAny()</source>
          <target state="translated">ExecutorService.invokeAny()</target>
        </trans-unit>
        <trans-unit id="d2eaad12ea3cd36c58c364b2beafc9ae9eb91f90" translate="yes" xml:space="preserve">
          <source>ExecutorService.isShutdown()</source>
          <target state="translated">ExecutorService.isShutdown()</target>
        </trans-unit>
        <trans-unit id="b9f5328cbc8ee2a39a991526b1f19f6e7656158f" translate="yes" xml:space="preserve">
          <source>ExecutorService.isTerminated()</source>
          <target state="translated">ExecutorService.isTerminated()</target>
        </trans-unit>
        <trans-unit id="068f54f5fe3b30831695af6713cba220c85b7d6e" translate="yes" xml:space="preserve">
          <source>ExecutorService.shutdown()</source>
          <target state="translated">ExecutorService.shutdown()</target>
        </trans-unit>
        <trans-unit id="366d1192cff33c446c51e25ebd0416807948aefc" translate="yes" xml:space="preserve">
          <source>ExecutorService.shutdownNow()</source>
          <target state="translated">ExecutorService.shutdownNow()</target>
        </trans-unit>
        <trans-unit id="ed620c6365e1472231db32cac147b5f95deaba5e" translate="yes" xml:space="preserve">
          <source>ExecutorService.submit()</source>
          <target state="translated">ExecutorService.submit()</target>
        </trans-unit>
        <trans-unit id="7926d430400beca1ab231e9b1440979c5249daca" translate="yes" xml:space="preserve">
          <source>Executors</source>
          <target state="translated">Executors</target>
        </trans-unit>
        <trans-unit id="796f52cd59329f7222ccffa0e9fd0145debb67df" translate="yes" xml:space="preserve">
          <source>Executors.callable()</source>
          <target state="translated">Executors.callable()</target>
        </trans-unit>
        <trans-unit id="0bdb0f44ea932f869472278f4a0ddc6251d18ff5" translate="yes" xml:space="preserve">
          <source>Executors.defaultThreadFactory()</source>
          <target state="translated">Executors.defaultThreadFactory()</target>
        </trans-unit>
        <trans-unit id="4be586c5bac4575813c6ec2aae8d470d261f8869" translate="yes" xml:space="preserve">
          <source>Executors.newCachedThreadPool()</source>
          <target state="translated">Executors.newCachedThreadPool()</target>
        </trans-unit>
        <trans-unit id="9d0785a18ec7308bbfcc4d5a2ccaac6e0cfd611b" translate="yes" xml:space="preserve">
          <source>Executors.newFixedThreadPool()</source>
          <target state="translated">Executors.newFixedThreadPool()</target>
        </trans-unit>
        <trans-unit id="02f16eb1052fdbbb89cb6b2ff019e780393602d4" translate="yes" xml:space="preserve">
          <source>Executors.newScheduledThreadPool()</source>
          <target state="translated">Executors.newScheduledThreadPool()</target>
        </trans-unit>
        <trans-unit id="d2f6ed00391da02d61d256016aa0fd4db85a365f" translate="yes" xml:space="preserve">
          <source>Executors.newSingleThreadExecutor()</source>
          <target state="translated">Executors.newSingleThreadExecutor()</target>
        </trans-unit>
        <trans-unit id="8f7c8f83dd6babd363ed585ea9f27c8ae50c5132" translate="yes" xml:space="preserve">
          <source>Executors.newSingleThreadScheduledExecutor()</source>
          <target state="translated">Executors.newSingleThreadScheduledExecutor()</target>
        </trans-unit>
        <trans-unit id="cf3e8b069396d4db56c846325b10eefce0b9df73" translate="yes" xml:space="preserve">
          <source>Executors.newWorkStealingPool()</source>
          <target state="translated">Executors.newWorkStealingPool()</target>
        </trans-unit>
        <trans-unit id="b5f15ac4271685e47cccf22d613dbbd72bcc7948" translate="yes" xml:space="preserve">
          <source>Executors.privilegedCallable()</source>
          <target state="translated">Executors.privilegedCallable()</target>
        </trans-unit>
        <trans-unit id="3d499286a785dea523c857cb9fcc6c62b309a6c8" translate="yes" xml:space="preserve">
          <source>Executors.privilegedCallableUsingCurrentClassLoader()</source>
          <target state="translated">Executors.privilegedCallableUsingCurrentClassLoader()</target>
        </trans-unit>
        <trans-unit id="8751987f4cb12796d0a2211aa35174f4ce449f89" translate="yes" xml:space="preserve">
          <source>Executors.privilegedThreadFactory()</source>
          <target state="translated">Executors.privilegedThreadFactory()</target>
        </trans-unit>
        <trans-unit id="7eb15c89e19c8cd8216b46d40dc5c292cf893b69" translate="yes" xml:space="preserve">
          <source>Executors.unconfigurableExecutorService()</source>
          <target state="translated">Executors.unconfigurableExecutorService()</target>
        </trans-unit>
        <trans-unit id="fbc7cb0cdcfecf09209e9028b89d5a14b46cc67e" translate="yes" xml:space="preserve">
          <source>Executors.unconfigurableScheduledExecutorService()</source>
          <target state="translated">Executors.unconfigurableScheduledExecutorService()</target>
        </trans-unit>
        <trans-unit id="fb605dff38bcf79c9e16539719e7b1fdc93ef392" translate="yes" xml:space="preserve">
          <source>ExemptionMechanism</source>
          <target state="translated">ExemptionMechanism</target>
        </trans-unit>
        <trans-unit id="d6cdfda29fb26feda8bcfdab5390e5a3dd184994" translate="yes" xml:space="preserve">
          <source>ExemptionMechanism.finalize()</source>
          <target state="translated">ExemptionMechanism.finalize()</target>
        </trans-unit>
        <trans-unit id="31490f7e0bcddabc24a905c286e6e752812ab68f" translate="yes" xml:space="preserve">
          <source>ExemptionMechanism.genExemptionBlob()</source>
          <target state="translated">ExemptionMechanism.genExemptionBlob()</target>
        </trans-unit>
        <trans-unit id="34d5c0eb225323ffce99de0d4d1ef11eebba3f39" translate="yes" xml:space="preserve">
          <source>ExemptionMechanism.getInstance()</source>
          <target state="translated">ExemptionMechanism.getInstance()</target>
        </trans-unit>
        <trans-unit id="b682aa597ec364ecbf3d05aee574a326f8563b92" translate="yes" xml:space="preserve">
          <source>ExemptionMechanism.getName()</source>
          <target state="translated">ExemptionMechanism.getName()</target>
        </trans-unit>
        <trans-unit id="a4b9414d39ed0c1d64b21a19bd7c18a052d37372" translate="yes" xml:space="preserve">
          <source>ExemptionMechanism.getOutputSize()</source>
          <target state="translated">ExemptionMechanism.getOutputSize()</target>
        </trans-unit>
        <trans-unit id="8e73696a166de9253cc6bc5812e0f2b00027ab0e" translate="yes" xml:space="preserve">
          <source>ExemptionMechanism.getProvider()</source>
          <target state="translated">ExemptionMechanism.getProvider()</target>
        </trans-unit>
        <trans-unit id="0463bddd60c79cc2a276948aea15fcf9e0d2a3a9" translate="yes" xml:space="preserve">
          <source>ExemptionMechanism.init()</source>
          <target state="translated">ExemptionMechanism.init()</target>
        </trans-unit>
        <trans-unit id="ae9adf4be1dc90a171912fbc29d70c0570e8b2d9" translate="yes" xml:space="preserve">
          <source>ExemptionMechanism.isCryptoAllowed()</source>
          <target state="translated">ExemptionMechanism.isCryptoAllowed()</target>
        </trans-unit>
        <trans-unit id="870b3ae071d05812fa1b55457a94b4abcaa58775" translate="yes" xml:space="preserve">
          <source>ExemptionMechanismException</source>
          <target state="translated">ExemptionMechanismException</target>
        </trans-unit>
        <trans-unit id="b8ced0e6ab4b01d8dfd29748a3f69510e96e7c48" translate="yes" xml:space="preserve">
          <source>ExemptionMechanismSpi</source>
          <target state="translated">ExemptionMechanismSpi</target>
        </trans-unit>
        <trans-unit id="61eb7ee1a64a6a4f190337692162cedc95bda943" translate="yes" xml:space="preserve">
          <source>ExemptionMechanismSpi.engineGenExemptionBlob()</source>
          <target state="translated">ExemptionMechanismSpi.engineGenExemptionBlob()</target>
        </trans-unit>
        <trans-unit id="bc15ed902095bcf209fed106130e322992dd4941" translate="yes" xml:space="preserve">
          <source>ExemptionMechanismSpi.engineGetOutputSize()</source>
          <target state="translated">ExemptionMechanismSpi.engineGetOutputSize()</target>
        </trans-unit>
        <trans-unit id="bc1fee32062408091f36badd4a3ec13130ff1807" translate="yes" xml:space="preserve">
          <source>ExemptionMechanismSpi.engineInit()</source>
          <target state="translated">ExemptionMechanismSpi.engineInit()</target>
        </trans-unit>
        <trans-unit id="ae8cbcf91b4dfa41d5e51c9ce7bded6eb4b28757" translate="yes" xml:space="preserve">
          <source>ExifGPSTagSet</source>
          <target state="translated">ExifGPSTagSet</target>
        </trans-unit>
        <trans-unit id="bbfb8448d1ce5fb765201d2489e73151b6df465e" translate="yes" xml:space="preserve">
          <source>ExifInteroperabilityTagSet</source>
          <target state="translated">ExifInteroperabilityTagSet</target>
        </trans-unit>
        <trans-unit id="1dc2b298dbba7b22f77eff3a044bd8eb4d862e48" translate="yes" xml:space="preserve">
          <source>ExifParentTIFFTagSet</source>
          <target state="translated">ExifParentTIFFTagSet</target>
        </trans-unit>
        <trans-unit id="9f17d1de19116c12f017376dba290559549afe5f" translate="yes" xml:space="preserve">
          <source>ExifTIFFTagSet</source>
          <target state="translated">ExifTIFFTagSet</target>
        </trans-unit>
        <trans-unit id="1609b80a9b95935af84008aab9af0aa213f29055" translate="yes" xml:space="preserve">
          <source>Exited type.</source>
          <target state="translated">終了したタイプです。</target>
        </trans-unit>
        <trans-unit id="16fcf2e6afeb4b9bbcd2437f55dc065cc7ac0cfc" translate="yes" xml:space="preserve">
          <source>ExpandVetoException</source>
          <target state="translated">ExpandVetoException</target>
        </trans-unit>
        <trans-unit id="a1f58af7540803b178e324e6ce6b911334da62a8" translate="yes" xml:space="preserve">
          <source>Expands path if it is not expanded, or collapses row if it is expanded.</source>
          <target state="translated">パスが展開されていない場合はパスを展開し、展開されている場合は行を折りたたむ。</target>
        </trans-unit>
        <trans-unit id="52fdc73f2cb093cfe67e830d5f0c7369127eeb20" translate="yes" xml:space="preserve">
          <source>Expands path if it is not expanded, or collapses row if it is expanded. If expanding a path and &lt;code&gt;JTree&lt;/code&gt; scrolls on expand, &lt;code&gt;ensureRowsAreVisible&lt;/code&gt; is invoked to scroll as many of the children to visible as possible (tries to scroll to last visible descendant of path).</source>
          <target state="translated">展開されていない場合はパスを展開し、展開されている場合は行を折りたたみます。パスを展開し、 &lt;code&gt;JTree&lt;/code&gt; が展開時にスクロールする場合、 &lt;code&gt;ensureRowsAreVisible&lt;/code&gt; が呼び出されて、できるだけ多くの子が表示されるようにスクロールします（パスの最後に表示される子孫までスクロールしようとします）。</target>
        </trans-unit>
        <trans-unit id="23bf632c195276d1dfe7523aaf451959eca0c07e" translate="yes" xml:space="preserve">
          <source>Expands the tab runs array.</source>
          <target state="translated">タブランの配列を展開します。</target>
        </trans-unit>
        <trans-unit id="03e98b0f37dff20459caa37f3832b07b8f920f9f" translate="yes" xml:space="preserve">
          <source>Expected to be the MBean Server where the Relation Service is or will be registered.</source>
          <target state="translated">リレーションサービスが登録されている、または登録される予定の MBean サーバと予想されます。</target>
        </trans-unit>
        <trans-unit id="12b0c6d50be48a68f83ea6e55cd5b24ddbd0002e" translate="yes" xml:space="preserve">
          <source>Expected to be unique in the given Relation Service.</source>
          <target state="translated">指定されたリレーションサービスで一意であることが期待されます。</target>
        </trans-unit>
        <trans-unit id="2e58d82dc9d2dfc9c95abc5f06e74519f1c2f2df" translate="yes" xml:space="preserve">
          <source>Expected to conform to relation info in associated relation type.</source>
          <target state="translated">関連する関係型の関係情報に適合することが期待されます。</target>
        </trans-unit>
        <trans-unit id="8e8289a34546df29aa64b36a6f400bdae18eed97" translate="yes" xml:space="preserve">
          <source>Expected to have been created in the given Relation Service.</source>
          <target state="translated">指定されたリレーションサービスで作成されていることが期待されます。</target>
        </trans-unit>
        <trans-unit id="b718f8c3a83788b1b360cc38380401a994fb4892" translate="yes" xml:space="preserve">
          <source>Experimental</source>
          <target state="translated">Experimental</target>
        </trans-unit>
        <trans-unit id="acf440c086943f2577c25ee2021952e12db0a1a1" translate="yes" xml:space="preserve">
          <source>Expired credentials.</source>
          <target state="translated">期限切れの資格情報。</target>
        </trans-unit>
        <trans-unit id="84eb53b9c80fba8acc862fdc5b2ee880e8b9ab57" translate="yes" xml:space="preserve">
          <source>ExpiredKeyException</source>
          <target state="translated">ExpiredKeyException</target>
        </trans-unit>
        <trans-unit id="f1fed926e88578b52cf6734236db033f7a846f70" translate="yes" xml:space="preserve">
          <source>Explanation. Detail explaining why name resolution failed.</source>
          <target state="translated">説明しています。名前解決に失敗した理由を詳細に説明します。</target>
        </trans-unit>
        <trans-unit id="c41cba2feac7aa16eb877cf174db43cad6be8473" translate="yes" xml:space="preserve">
          <source>Explicit indexing</source>
          <target state="translated">明示的なインデックス</target>
        </trans-unit>
        <trans-unit id="9f36ab227aec463c9c035d2c5f364cb5331b31d6" translate="yes" xml:space="preserve">
          <source>Explicitly denies access to a file or directory.</source>
          <target state="translated">ファイルやディレクトリへのアクセスを明示的に拒否します。</target>
        </trans-unit>
        <trans-unit id="e33cb7e2fe62991ce4ed0df5c500842040dcb905" translate="yes" xml:space="preserve">
          <source>Explicitly grants access to a file or directory.</source>
          <target state="translated">ファイルやディレクトリへのアクセスを明示的に許可します。</target>
        </trans-unit>
        <trans-unit id="e9b873f46071db66ba372c05baac4fdf01be75c1" translate="yes" xml:space="preserve">
          <source>Exponent</source>
          <target state="translated">Exponent</target>
        </trans-unit>
        <trans-unit id="8af32302e9cb457411608d062ba53be873457be5" translate="yes" xml:space="preserve">
          <source>Exponent:</source>
          <target state="translated">Exponent:</target>
        </trans-unit>
        <trans-unit id="7f837518cefa1169c550d7302d9cffc58969e246" translate="yes" xml:space="preserve">
          <source>ExponentIndicator SignedInteger</source>
          <target state="translated">ExponentIndicator SignedInteger</target>
        </trans-unit>
        <trans-unit id="d29e3c73138486b6503ed64043ba3a47fa471506" translate="yes" xml:space="preserve">
          <source>ExponentIndicator:</source>
          <target state="translated">ExponentIndicator:</target>
        </trans-unit>
        <trans-unit id="31e5a37fca22b2ff2328d504cad3628626e56de3" translate="yes" xml:space="preserve">
          <source>Exponential patterns may not contain grouping separators.</source>
          <target state="translated">指数パターンは、グループ化された区切り文字を含んでいない場合があります。</target>
        </trans-unit>
        <trans-unit id="c069088b25b08845e928ca14de510572548ef254" translate="yes" xml:space="preserve">
          <source>Export the activatable remote object to the RMI runtime to make the object available to receive incoming calls.</source>
          <target state="translated">アクティブ化可能なリモート オブジェクトを RMI ランタイムにエクスポートして、オブジェクトが着信コールを受信できるようにします。</target>
        </trans-unit>
        <trans-unit id="dac96f1b69036b0d78f67b1aba2da365db05ba7d" translate="yes" xml:space="preserve">
          <source>Export the activatable remote object to the RMI runtime to make the object available to receive incoming calls. The object is exported on an anonymous port, if &lt;code&gt;port&lt;/code&gt; is zero.</source>
          <target state="translated">アクティブ化可能なリモートオブジェクトをRMIランタイムにエクスポートして、オブジェクトが着信コールを受信できるようにします。 &lt;code&gt;port&lt;/code&gt; がゼロの場合、オブジェクトは匿名ポートにエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="77759e590de40012d750cdf890076842a0793f6f" translate="yes" xml:space="preserve">
          <source>ExportException</source>
          <target state="translated">ExportException</target>
        </trans-unit>
        <trans-unit id="d7630a1b61780df21d14cc1626d6b03905fe5ca8" translate="yes" xml:space="preserve">
          <source>Exported names may be re-imported by using the byte array factory method &lt;a href=&quot;gssmanager#createName(byte%5B%5D,org.ietf.jgss.Oid)&quot;&gt;&lt;code&gt;GSSManager.createName&lt;/code&gt;&lt;/a&gt; and specifying the NT_EXPORT_NAME as the name type object identifier. The resulting &lt;code&gt;GSSName&lt;/code&gt; name will also be a MN.</source>
          <target state="translated">エクスポートされた名前は、バイト配列フ​​ァクトリメソッド&lt;a href=&quot;gssmanager#createName(byte%5B%5D,org.ietf.jgss.Oid)&quot;&gt; &lt;code&gt;GSSManager.createName&lt;/code&gt; &lt;/a&gt;を使用し、名前タイプオブジェクト識別子としてNT_EXPORT_NAMEを指定することで再インポートできます。結果の &lt;code&gt;GSSName&lt;/code&gt; 名もMNになります。</target>
        </trans-unit>
        <trans-unit id="084dd79deff9e1f183374d1e68a632d97c22cb8f" translate="yes" xml:space="preserve">
          <source>Exported remote objects receive method invocations from the stubs as described in the RMI specification. Each invocation's operation and parameters are unmarshaled using a custom &lt;a href=&quot;../../../../java.base/java/io/objectinputstream&quot;&gt;&lt;code&gt;ObjectInputStream&lt;/code&gt;&lt;/a&gt;. If an &lt;a href=&quot;../../../../java.base/java/io/objectinputfilter&quot;&gt;&lt;code&gt;ObjectInputFilter&lt;/code&gt;&lt;/a&gt; is provided and is not &lt;code&gt;null&lt;/code&gt; when the object is exported, it is used to filter the parameters as they are unmarshaled from the stream. The filter is used for all invocations and all parameters regardless of the method being invoked or the parameter values. If no filter is provided or is &lt;code&gt;null&lt;/code&gt; for the exported object then the &lt;code&gt;ObjectInputStream&lt;/code&gt; default filter, if any, is used. The default filter is configured with &lt;a href=&quot;../../../../java.base/java/io/objectinputfilter.config#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt;&lt;code&gt;ObjectInputFilter.Config.setSerialFilter&lt;/code&gt;&lt;/a&gt;. If the filter rejects any of the parameters, the &lt;code&gt;InvalidClassException&lt;/code&gt; thrown by &lt;code&gt;ObjectInputStream&lt;/code&gt; is reported as the cause of an &lt;a href=&quot;../unmarshalexception&quot;&gt;&lt;code&gt;UnmarshalException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">エクスポートされたリモートオブジェクトは、RMI仕様で説明されているように、スタブからメソッド呼び出しを受け取ります。各呼び出しの操作とパラメーターは、カスタム&lt;a href=&quot;../../../../java.base/java/io/objectinputstream&quot;&gt; &lt;code&gt;ObjectInputStream&lt;/code&gt; &lt;/a&gt;を使用してマーシャリングされません。場合&lt;a href=&quot;../../../../java.base/java/io/objectinputfilter&quot;&gt; &lt;code&gt;ObjectInputFilter&lt;/code&gt; が&lt;/a&gt;提供されないが &lt;code&gt;null&lt;/code&gt; オブジェクトをエクスポートする場合、それらは、ストリームからアンマーシャルされているようなパラメータをフィルタリングするために使用されます。フィルタは、呼び出されるメソッドやパラメータ値に関係なく、すべての呼び出しとすべてのパラメータに使用されます。フィルタが提供されていないか、エクスポートされたオブジェクトが &lt;code&gt;null&lt;/code&gt; の場合、 &lt;code&gt;ObjectInputStream&lt;/code&gt; のデフォルトフィルタが使用されます（存在する場合）。デフォルトのフィルターは&lt;a href=&quot;../../../../java.base/java/io/objectinputfilter.config#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt; &lt;code&gt;ObjectInputFilter.Config.setSerialFilter&lt;/code&gt; &lt;/a&gt;で構成されます。フィルタがいずれかのパラメータを拒否した場合、 &lt;code&gt;ObjectInputStream&lt;/code&gt; によってスローされた &lt;code&gt;InvalidClassException&lt;/code&gt; が&lt;a href=&quot;../unmarshalexception&quot;&gt; &lt;code&gt;UnmarshalException&lt;/code&gt; の&lt;/a&gt;原因として報告されます。</target>
        </trans-unit>
        <trans-unit id="0e16537914a0163e01ecd7e0945bc56c50eb3849" translate="yes" xml:space="preserve">
          <source>Exports</source>
          <target state="translated">Exports</target>
        </trans-unit>
        <trans-unit id="22e87abb45422867065e34ab93e73b0ce773807d" translate="yes" xml:space="preserve">
          <source>Exports the remote object to make it available to receive incoming calls using an anonymous port. This method will always return a statically generated stub.</source>
          <target state="translated">リモートオブジェクトをエクスポートして、匿名ポートを使用して着信を受信できるようにします。このメソッドは常に静的に生成されたスタブを返します。</target>
        </trans-unit>
        <trans-unit id="9c222604196e7653246090c544f4eaacae282507" translate="yes" xml:space="preserve">
          <source>Exports the remote object to make it available to receive incoming calls, using a transport specified by the given socket factory and &lt;a href=&quot;../../../../java.base/java/io/objectinputfilter&quot;&gt;filter&lt;/a&gt;.</source>
          <target state="translated">指定されたソケットファクトリと&lt;a href=&quot;../../../../java.base/java/io/objectinputfilter&quot;&gt;フィルタ&lt;/a&gt;によって指定されたトランスポートを使用して、リモートオブジェクトをエクスポートし、着信コールを受信できるようにします。</target>
        </trans-unit>
        <trans-unit id="f624f071ede0cc90aff7969d470be20b9b832b0b" translate="yes" xml:space="preserve">
          <source>Exports the remote object to make it available to receive incoming calls, using a transport specified by the given socket factory.</source>
          <target state="translated">リモートオブジェクトをエクスポートして、指定されたソケットファクトリーで指定されたトランスポートを使って着信を受けられるようにします。</target>
        </trans-unit>
        <trans-unit id="03d8568eef3ca48a7e942de36405e909b1ad4e83" translate="yes" xml:space="preserve">
          <source>Exports the remote object to make it available to receive incoming calls, using the particular supplied port and &lt;a href=&quot;../../../../java.base/java/io/objectinputfilter&quot;&gt;filter&lt;/a&gt;.</source>
          <target state="translated">特定の指定されたポートと&lt;a href=&quot;../../../../java.base/java/io/objectinputfilter&quot;&gt;フィルター&lt;/a&gt;を使用して、リモートオブジェクトをエクスポートし、着信コールを受信できるようにします。</target>
        </trans-unit>
        <trans-unit id="37d05178e081e207c5b78b9f8c4c707e5d7f533c" translate="yes" xml:space="preserve">
          <source>Exports the remote object to make it available to receive incoming calls, using the particular supplied port.</source>
          <target state="translated">リモートオブジェクトをエクスポートして、指定された特定のポートを使用して着信を受信できるようにします。</target>
        </trans-unit>
        <trans-unit id="1cc1b1463ff1f574f770505c59a8176eb89dee7a" translate="yes" xml:space="preserve">
          <source>Exports this RMI object.</source>
          <target state="translated">この RMI オブジェクトをエクスポートします。</target>
        </trans-unit>
        <trans-unit id="b79e2a13bfcfc4884a90b32ba20809f240445354" translate="yes" xml:space="preserve">
          <source>Exports this context so that another process may import it..</source>
          <target state="translated">このコンテキストをエクスポートして、別のプロセスがそれをインポートできるようにします。</target>
        </trans-unit>
        <trans-unit id="56c286ea570164e9bfbbdae95ba265ce18ab111c" translate="yes" xml:space="preserve">
          <source>Exports this context so that another process may import it.. Provided to support the sharing of work between multiple processes. This routine will typically be used by the context-acceptor, in an application where a single process receives incoming connection requests and accepts security contexts over them, then passes the established context to one or more other processes for message exchange.</source>
          <target state="translated">このコンテキストをエクスポートして、別のプロセスがインポートできるようにします。複数のプロセス間での作業の共有をサポートするために提供されます。このルーチンは、通常、単一のプロセスが着信する接続要求を受け取り、それらの上のセキュリティコンテキストを受け入れ、確立されたコンテキストをメッセージ交換のために1つ以上の他のプロセスに渡すアプリケーションにおいて、コンテキストアクセプターによって使用されます。</target>
        </trans-unit>
        <trans-unit id="2b6be5b1311eed6c12e24455edec98cf86a980b0" translate="yes" xml:space="preserve">
          <source>ExportsTree</source>
          <target state="translated">ExportsTree</target>
        </trans-unit>
        <trans-unit id="f4170f7d529eb2dfc579ce5524ae7c9ed332d26a" translate="yes" xml:space="preserve">
          <source>Exposes the management interface of the timer MBean.</source>
          <target state="translated">タイマー MBean の管理インタフェースを公開します。</target>
        </trans-unit>
        <trans-unit id="4865f4ebc4d7b269f48a864cf04f51d63899aae2" translate="yes" xml:space="preserve">
          <source>Exposes the remote management interface of monitor MBeans.</source>
          <target state="translated">モニタ MBeans のリモート管理インタフェースを公開します。</target>
        </trans-unit>
        <trans-unit id="2a87c9aab86c64d7d9fb7812f08583461461ce1d" translate="yes" xml:space="preserve">
          <source>Exposes the remote management interface of the MLet MBean.</source>
          <target state="translated">MLet MBean のリモート管理インタフェースを公開します。</target>
        </trans-unit>
        <trans-unit id="3441daca08ce105a59ecdf07a957896222e94977" translate="yes" xml:space="preserve">
          <source>Exposes the remote management interface of the counter monitor MBean.</source>
          <target state="translated">カウンタモニタ MBean のリモート管理インタフェースを公開します。</target>
        </trans-unit>
        <trans-unit id="0d915052cc6ff7231df2ebaebc8cd12cc02ccf77" translate="yes" xml:space="preserve">
          <source>Exposes the remote management interface of the gauge monitor MBean.</source>
          <target state="translated">ゲージモニタ MBean のリモート管理インターフェースを公開します。</target>
        </trans-unit>
        <trans-unit id="24c760d85ac9a656e1b3c2d7a13d1fe5ceab35f8" translate="yes" xml:space="preserve">
          <source>Exposes the remote management interface of the string monitor MBean.</source>
          <target state="translated">文字列モニタMBeanのリモート管理インタフェースを公開します。</target>
        </trans-unit>
        <trans-unit id="97b695b9b9cfde3612c21b3add972cc0f21f4e26" translate="yes" xml:space="preserve">
          <source>Expression</source>
          <target state="translated">Expression</target>
        </trans-unit>
        <trans-unit id="2ffe6733d9b6851c30894bd8c35b60f4813e77e3" translate="yes" xml:space="preserve">
          <source>Expression.execute()</source>
          <target state="translated">Expression.execute()</target>
        </trans-unit>
        <trans-unit id="b4ca33acf62c6c79df3690a576557034f7aa2c90" translate="yes" xml:space="preserve">
          <source>Expression.getValue()</source>
          <target state="translated">Expression.getValue()</target>
        </trans-unit>
        <trans-unit id="f1ebb812c154cf95f4e252565de0eec11e4ba3c5" translate="yes" xml:space="preserve">
          <source>Expression.setValue()</source>
          <target state="translated">Expression.setValue()</target>
        </trans-unit>
        <trans-unit id="96209ffab873fc4fff549615f20fb6c62fe0dfe7" translate="yes" xml:space="preserve">
          <source>Expression.toString()</source>
          <target state="translated">Expression.toString()</target>
        </trans-unit>
        <trans-unit id="f32a520686724a9092fd8549ffd29645da42045b" translate="yes" xml:space="preserve">
          <source>ExpressionSnippet</source>
          <target state="translated">ExpressionSnippet</target>
        </trans-unit>
        <trans-unit id="f120c48ae0c8be4cdacfa2a89822cd1c9d59e313" translate="yes" xml:space="preserve">
          <source>ExpressionStatementTree</source>
          <target state="translated">ExpressionStatementTree</target>
        </trans-unit>
        <trans-unit id="26861128f40ebb618ffeb03575a09f678f8f8118" translate="yes" xml:space="preserve">
          <source>ExpressionTree</source>
          <target state="translated">ExpressionTree</target>
        </trans-unit>
        <trans-unit id="97814a23c8a451c40cfb8296ba957890a4ca8708" translate="yes" xml:space="preserve">
          <source>Extend this class and override the method for the event of interest. (If you implement the &lt;code&gt;HierarchyBoundsListener&lt;/code&gt; interface, you have to define both methods in it. This abstract class defines null methods for them both, so you only have to define the method for the event you care about.)</source>
          <target state="translated">このクラスを拡張し、対象のイベントのメソッドをオーバーライドします。（ &lt;code&gt;HierarchyBoundsListener&lt;/code&gt; インターフェースを実装する場合は、両方のメソッドを定義する必要があります。この抽象クラスは、両方のnullメソッドを定義するため、関心のあるイベントのメソッドを定義するだけで済みます。）</target>
        </trans-unit>
        <trans-unit id="65a7aa6e627457cb8b06b3f623f8520e7cdb112a" translate="yes" xml:space="preserve">
          <source>Extend this class to create a &lt;code&gt;ComponentEvent&lt;/code&gt; listener and override the methods for the events of interest. (If you implement the &lt;code&gt;ComponentListener&lt;/code&gt; interface, you have to define all of the methods in it. This abstract class defines null methods for them all, so you can only have to define methods for events you care about.)</source>
          <target state="translated">このクラスを拡張して &lt;code&gt;ComponentEvent&lt;/code&gt; リスナーを作成し、対象のイベントのメソッドをオーバーライドします。（ &lt;code&gt;ComponentListener&lt;/code&gt; インターフェースを実装する場合は、その中のすべてのメソッドを定義する必要があります。この抽象クラスは、それらすべてに対してnullメソッドを定義するため、関心のあるイベントのメソッドのみを定義する必要があります。）</target>
        </trans-unit>
        <trans-unit id="e880183c97a0f2c41d10cd294aa1a56356f2d9f1" translate="yes" xml:space="preserve">
          <source>Extend this class to create a &lt;code&gt;ContainerEvent&lt;/code&gt; listener and override the methods for the events of interest. (If you implement the &lt;code&gt;ContainerListener&lt;/code&gt; interface, you have to define all of the methods in it. This abstract class defines null methods for them all, so you can only have to define methods for events you care about.)</source>
          <target state="translated">このクラスを拡張して &lt;code&gt;ContainerEvent&lt;/code&gt; リスナーを作成し、対象のイベントのメソッドをオーバーライドします。（ &lt;code&gt;ContainerListener&lt;/code&gt; インターフェースを実装する場合は、その中のすべてのメソッドを定義する必要があります。この抽象クラスは、それらすべてに対してnullメソッドを定義するため、関心のあるイベントのメソッドのみを定義する必要があります。）</target>
        </trans-unit>
        <trans-unit id="8dd185396a408c7b21b17d2bb7b96f51001c7cbc" translate="yes" xml:space="preserve">
          <source>Extend this class to create a &lt;code&gt;DragSourceEvent&lt;/code&gt; listener and override the methods for the events of interest. (If you implement the &lt;code&gt;DragSourceListener&lt;/code&gt; interface, you have to define all of the methods in it. This abstract class defines null methods for them all, so you only have to define methods for events you care about.)</source>
          <target state="translated">このクラスを拡張して &lt;code&gt;DragSourceEvent&lt;/code&gt; リスナーを作成し、対象のイベントのメソッドをオーバーライドします。 （ &lt;code&gt;DragSourceListener&lt;/code&gt; インターフェースを実装する場合は、その中のすべてのメソッドを定義する必要があります。この抽象クラスは、それらすべてに対してnullメソッドを定義するため、関心のあるイベントのメソッドを定義するだけで済みます。）</target>
        </trans-unit>
        <trans-unit id="923c88e15210c30e24e74f63f47df4085e9e0b60" translate="yes" xml:space="preserve">
          <source>Extend this class to create a &lt;code&gt;DropTargetEvent&lt;/code&gt; listener and override the methods for the events of interest. (If you implement the &lt;code&gt;DropTargetListener&lt;/code&gt; interface, you have to define all of the methods in it. This abstract class defines a null implementation for every method except &lt;code&gt;drop(DropTargetDropEvent)&lt;/code&gt;, so you only have to define methods for events you care about.) You must provide an implementation for at least &lt;code&gt;drop(DropTargetDropEvent)&lt;/code&gt;. This method cannot have a null implementation because its specification requires that you either accept or reject the drop, and, if accepted, indicate whether the drop was successful.</source>
          <target state="translated">このクラスを拡張して &lt;code&gt;DropTargetEvent&lt;/code&gt; リスナーを作成し、対象のイベントのメソッドをオーバーライドします。 （ &lt;code&gt;DropTargetListener&lt;/code&gt; インターフェースを実装する場合は、その中のすべてのメソッドを定義する必要があります。この抽象クラスは、 &lt;code&gt;drop(DropTargetDropEvent)&lt;/code&gt; を除くすべてのメソッドに対してnull実装を定義するため、関心のあるイベントのメソッドのみを定義する必要があります。）少なくとも &lt;code&gt;drop(DropTargetDropEvent)&lt;/code&gt; の実装を提供する必要があります。このメソッドの仕様では、ドロップを受け入れるか拒否するか、受け入れられた場合はドロップが成功したかどうかを示す必要があるため、このメソッドにnullを実装することはできません。</target>
        </trans-unit>
        <trans-unit id="37fe760d7f7771b4f2f390c5c02e826d38a134c6" translate="yes" xml:space="preserve">
          <source>Extend this class to create a &lt;code&gt;FocusEvent&lt;/code&gt; listener and override the methods for the events of interest. (If you implement the &lt;code&gt;FocusListener&lt;/code&gt; interface, you have to define all of the methods in it. This abstract class defines null methods for them all, so you can only have to define methods for events you care about.)</source>
          <target state="translated">このクラスを拡張して &lt;code&gt;FocusEvent&lt;/code&gt; リスナーを作成し、対象のイベントのメソッドをオーバーライドします。（ &lt;code&gt;FocusListener&lt;/code&gt; インターフェースを実装する場合は、その中のすべてのメソッドを定義する必要があります。この抽象クラスは、それらすべてに対してnullメソッドを定義するため、関心のあるイベントのメソッドのみを定義する必要があります。）</target>
        </trans-unit>
        <trans-unit id="367ba549f4e644948e143a24e90e40d11ae3dd47" translate="yes" xml:space="preserve">
          <source>Extend this class to create a &lt;code&gt;KeyEvent&lt;/code&gt; listener and override the methods for the events of interest. (If you implement the &lt;code&gt;KeyListener&lt;/code&gt; interface, you have to define all of the methods in it. This abstract class defines null methods for them all, so you can only have to define methods for events you care about.)</source>
          <target state="translated">このクラスを拡張して &lt;code&gt;KeyEvent&lt;/code&gt; リスナーを作成し、対象のイベントのメソッドをオーバーライドします。（ &lt;code&gt;KeyListener&lt;/code&gt; インターフェースを実装する場合は、その中のすべてのメソッドを定義する必要があります。この抽象クラスは、それらすべてに対してnullメソッドを定義するため、関心のあるイベントのメソッドのみを定義する必要があります。）</target>
        </trans-unit>
        <trans-unit id="6ac9b5f66dc994a018a5343a26255817af125013" translate="yes" xml:space="preserve">
          <source>Extend this class to create a &lt;code&gt;MouseEvent&lt;/code&gt; (including drag and motion events) or/and &lt;code&gt;MouseWheelEvent&lt;/code&gt; listener and override the methods for the events of interest. (If you implement the &lt;code&gt;MouseListener&lt;/code&gt;, &lt;code&gt;MouseMotionListener&lt;/code&gt; interface, you have to define all of the methods in it. This abstract class defines null methods for them all, so you can only have to define methods for events you care about.)</source>
          <target state="translated">このクラスを拡張して、 &lt;code&gt;MouseEvent&lt;/code&gt; （ドラッグイベントとモーションイベントを含む）または &lt;code&gt;MouseWheelEvent&lt;/code&gt; リスナーを作成し、対象のイベントのメソッドをオーバーライドします。 （ &lt;code&gt;MouseListener&lt;/code&gt; 、 &lt;code&gt;MouseMotionListener&lt;/code&gt; インターフェースを実装する場合は、その中のすべてのメソッドを定義する必要があります。この抽象クラスは、それらすべてに対してnullメソッドを定義するため、関心のあるイベントのメソッドのみを定義する必要があります。）</target>
        </trans-unit>
        <trans-unit id="15aed55878622a3e992eba6b1c4c10f9958b33bc" translate="yes" xml:space="preserve">
          <source>Extend this class to create a &lt;code&gt;MouseEvent&lt;/code&gt; listener and override the methods for the events of interest. (If you implement the &lt;code&gt;MouseMotionListener&lt;/code&gt; interface, you have to define all of the methods in it. This abstract class defines null methods for them all, so you can only have to define methods for events you care about.)</source>
          <target state="translated">このクラスを拡張して &lt;code&gt;MouseEvent&lt;/code&gt; リスナーを作成し、対象のイベントのメソッドをオーバーライドします。（ &lt;code&gt;MouseMotionListener&lt;/code&gt; インターフェースを実装する場合は、その中のすべてのメソッドを定義する必要があります。この抽象クラスは、それらすべてに対してnullメソッドを定義するため、関心のあるイベントのメソッドのみを定義する必要があります。）</target>
        </trans-unit>
        <trans-unit id="b63c8840643bb7a0c3dbb69da888da6e3e099a74" translate="yes" xml:space="preserve">
          <source>Extend this class to create a &lt;code&gt;WindowEvent&lt;/code&gt; listener and override the methods for the events of interest. (If you implement the &lt;code&gt;WindowListener&lt;/code&gt; interface, you have to define all of the methods in it. This abstract class defines null methods for them all, so you can only have to define methods for events you care about.)</source>
          <target state="translated">このクラスを拡張して &lt;code&gt;WindowEvent&lt;/code&gt; リスナーを作成し、対象のイベントのメソッドをオーバーライドします。（ &lt;code&gt;WindowListener&lt;/code&gt; インターフェースを実装する場合は、その中のすべてのメソッドを定義する必要があります。この抽象クラスは、それらすべてに対してnullメソッドを定義するため、関心のあるイベントのメソッドのみを定義する必要があります。）</target>
        </trans-unit>
        <trans-unit id="c6a014b2401a9afa00045ef2f33b0f209a16346a" translate="yes" xml:space="preserve">
          <source>Extendable/Scalable</source>
          <target state="translated">Extendable/Scalable</target>
        </trans-unit>
        <trans-unit id="056c6227da5e3cf7243c5d207f965a218992878b" translate="yes" xml:space="preserve">
          <source>Extended Operations</source>
          <target state="translated">拡張操作</target>
        </trans-unit>
        <trans-unit id="a08e03b2ad94f90ba89bdb5b44bf6df2220c93d4" translate="yes" xml:space="preserve">
          <source>Extended by classes that store results of compilations.</source>
          <target state="translated">コンパイルの結果を保存するクラスによって拡張されています。</target>
        </trans-unit>
        <trans-unit id="f7c13708e6e32c98f87d6e2270a577795500bdd2" translate="yes" xml:space="preserve">
          <source>Extended by classes that store results of compilations. State might be stored in the form of Java classes, Java class files or scripting language opcodes. The script may be executed repeatedly without reparsing.</source>
          <target state="translated">コンパイルの結果を格納するクラスによって拡張されます。状態は、Javaクラス、Javaクラスファイル、スクリプト言語のオペコードの形で保存されることがあります。スクリプトは、リパーシングを行わずに繰り返し実行されることがあります。</target>
        </trans-unit>
        <trans-unit id="d67ec01a2f572288ddf96ac611834635d1a94c7e" translate="yes" xml:space="preserve">
          <source>Extended interface &lt;a href=&quot;transferqueue&quot;&gt;&lt;code&gt;TransferQueue&lt;/code&gt;&lt;/a&gt;, and implementation &lt;a href=&quot;linkedtransferqueue&quot;&gt;&lt;code&gt;LinkedTransferQueue&lt;/code&gt;&lt;/a&gt; introduce a synchronous &lt;code&gt;transfer&lt;/code&gt; method (along with related features) in which a producer may optionally block awaiting its consumer.</source>
          <target state="translated">拡張インターフェース&lt;a href=&quot;transferqueue&quot;&gt; &lt;code&gt;TransferQueue&lt;/code&gt; &lt;/a&gt;と実装&lt;a href=&quot;linkedtransferqueue&quot;&gt; &lt;code&gt;LinkedTransferQueue&lt;/code&gt; &lt;/a&gt;は、プロデューサーがオプションでコンシューマーの待機をブロックできる同期 &lt;code&gt;transfer&lt;/code&gt; メソッド（および関連機能）を導入します。</target>
        </trans-unit>
        <trans-unit id="8fe44cd0b7c4b821a3697b98156772c4f1610b2e" translate="yes" xml:space="preserve">
          <source>Extended interface for mapping external entity references to input sources, or providing a missing external subset.</source>
          <target state="translated">外部エンティティ参照を入力ソースにマッピングしたり、欠落している外部サブセットを提供したりするための拡張インターフェイス。</target>
        </trans-unit>
        <trans-unit id="cddd25dfe98bf8b82d6f146a1521b5a93ebe0240" translate="yes" xml:space="preserve">
          <source>Extended interface for mapping external entity references to input sources, or providing a missing external subset. The &lt;a href=&quot;../xmlreader#setEntityResolver(org.xml.sax.EntityResolver)&quot;&gt;&lt;code&gt;XMLReader.setEntityResolver()&lt;/code&gt;&lt;/a&gt; method is used to provide implementations of this interface to parsers. When a parser uses the methods in this interface, the &lt;a href=&quot;#resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;EntityResolver2.resolveEntity()&lt;/code&gt;&lt;/a&gt; method (in this interface) is used &lt;em&gt;instead of&lt;/em&gt; the older (SAX 1.0) &lt;a href=&quot;../entityresolver#resolveEntity(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;EntityResolver.resolveEntity()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">外部エンティティ参照を入力ソースにマッピングするため、または欠落している外部サブセットを提供するための拡張インターフェイス。&lt;a href=&quot;../xmlreader#setEntityResolver(org.xml.sax.EntityResolver)&quot;&gt; &lt;code&gt;XMLReader.setEntityResolver()&lt;/code&gt; &lt;/a&gt;メソッドは、パーサにこのインタフェースの実装を提供するために使用されます。パーサーがこのインターフェースのメソッドを使用する場合、古い（SAX 1.0）&lt;a href=&quot;../entityresolver#resolveEntity(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;EntityResolver.resolveEntity()&lt;/code&gt; &lt;/a&gt;メソッドの&lt;em&gt;代わりに&lt;/em&gt;（このインターフェースの）&lt;a href=&quot;#resolveEntity(java.lang.String,java.lang.String,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;EntityResolver2.resolveEntity()&lt;/code&gt; &lt;/a&gt;メソッドが使用されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9d188a5cc3754855f442ed54e927615983b878f1" translate="yes" xml:space="preserve">
          <source>Extended modifiers are the modifiers that ends with the _DOWN_MASK suffix, such as ALT_DOWN_MASK, BUTTON1_DOWN_MASK, and others.</source>
          <target state="translated">拡張修飾子とは、ALT_DOWN_MASK、BUTTON1_DOWN_MASKなど、_DOWN_MASKで終わる修飾子のことです。</target>
        </trans-unit>
        <trans-unit id="2dacfc4679d3abf68f950562a17dffcc5502edb2" translate="yes" xml:space="preserve">
          <source>Extended modifiers represent the state of all modal keys, such as ALT, CTRL, META, and the mouse buttons just after the event occurred.</source>
          <target state="translated">拡張修飾子は、イベントが発生した直後のALT、CTRL、META、マウスボタンなどのすべてのモーダルキーの状態を表します。</target>
        </trans-unit>
        <trans-unit id="a18b32df82e8836413844d415105f10454ef3a19" translate="yes" xml:space="preserve">
          <source>ExtendedGSSContext</source>
          <target state="translated">ExtendedGSSContext</target>
        </trans-unit>
        <trans-unit id="1d9a8e6031fe92483bb280ba91341fec17327230" translate="yes" xml:space="preserve">
          <source>ExtendedGSSCredential</source>
          <target state="translated">ExtendedGSSCredential</target>
        </trans-unit>
        <trans-unit id="724c340acc2042b84ffc9ac69a2ab5cd705c8c7d" translate="yes" xml:space="preserve">
          <source>ExtendedMapMode</source>
          <target state="translated">ExtendedMapMode</target>
        </trans-unit>
        <trans-unit id="e8101ecfe4ac5a4af683dbda69f210171666549a" translate="yes" xml:space="preserve">
          <source>ExtendedRequest</source>
          <target state="translated">ExtendedRequest</target>
        </trans-unit>
        <trans-unit id="afd9de86caf01233147b0dd144c0ec0283e1b4c9" translate="yes" xml:space="preserve">
          <source>ExtendedRequest.createExtendedResponse()</source>
          <target state="translated">ExtendedRequest.createExtendedResponse()</target>
        </trans-unit>
        <trans-unit id="1f60378ec3dfee8f5ebff84e5654978f7aecfbed" translate="yes" xml:space="preserve">
          <source>ExtendedRequest.getEncodedValue()</source>
          <target state="translated">ExtendedRequest.getEncodedValue()</target>
        </trans-unit>
        <trans-unit id="cec5c1bf0dd46ae67a5b0d9524130f808a5c473f" translate="yes" xml:space="preserve">
          <source>ExtendedRequest.getID()</source>
          <target state="translated">ExtendedRequest.getID()</target>
        </trans-unit>
        <trans-unit id="ac7187d9e68c88e4f2b219529d70ff87a4b0a5d6" translate="yes" xml:space="preserve">
          <source>ExtendedResponse</source>
          <target state="translated">ExtendedResponse</target>
        </trans-unit>
        <trans-unit id="b5e6d46d65c4f84d124cf7c0c0adc241cf559749" translate="yes" xml:space="preserve">
          <source>ExtendedResponse.getEncodedValue()</source>
          <target state="translated">ExtendedResponse.getEncodedValue()</target>
        </trans-unit>
        <trans-unit id="3165a4be05d6aa70dd82e3545f4173e3660f7d2e" translate="yes" xml:space="preserve">
          <source>ExtendedResponse.getID()</source>
          <target state="translated">ExtendedResponse.getID()</target>
        </trans-unit>
        <trans-unit id="a14162cec9a909735d99e15aab9157f76292648f" translate="yes" xml:space="preserve">
          <source>ExtendedSSLSession</source>
          <target state="translated">ExtendedSSLSession</target>
        </trans-unit>
        <trans-unit id="88d45380e1bd9111f2565dfd840935c52001678a" translate="yes" xml:space="preserve">
          <source>ExtendedSSLSession.getLocalSupportedSignatureAlgorithms()</source>
          <target state="translated">ExtendedSSLSession.getLocalSupportedSignatureAlgorithms()</target>
        </trans-unit>
        <trans-unit id="af635083e8004466e0b10b2f0a05432c31c8bf4d" translate="yes" xml:space="preserve">
          <source>ExtendedSSLSession.getPeerSupportedSignatureAlgorithms()</source>
          <target state="translated">ExtendedSSLSession.getPeerSupportedSignatureAlgorithms()</target>
        </trans-unit>
        <trans-unit id="9ed742cdd08c6a7f2220b62f0614aaeea0c158d4" translate="yes" xml:space="preserve">
          <source>ExtendedSSLSession.getRequestedServerNames()</source>
          <target state="translated">ExtendedSSLSession.getRequestedServerNames()</target>
        </trans-unit>
        <trans-unit id="ca815adabd6c2cf881e9f605936ed719edcf3ff6" translate="yes" xml:space="preserve">
          <source>ExtendedSocketOptions</source>
          <target state="translated">ExtendedSocketOptions</target>
        </trans-unit>
        <trans-unit id="909d61eda2dc81e4b3a8012ef64ab5fb73d3ac5d" translate="yes" xml:space="preserve">
          <source>Extends &lt;code&gt;ChangeListener&lt;/code&gt; to be serializable.</source>
          <target state="translated">&lt;code&gt;ChangeListener&lt;/code&gt; を拡張してシリアライズ可能にします。</target>
        </trans-unit>
        <trans-unit id="7ecad92e8010187e74578c104409e9cdae43b7e2" translate="yes" xml:space="preserve">
          <source>Extends the &lt;code&gt;SSLSession&lt;/code&gt; interface to support additional session attributes.</source>
          <target state="translated">&lt;code&gt;SSLSession&lt;/code&gt; インターフェースを拡張して、追加のセッション属性をサポートします。</target>
        </trans-unit>
        <trans-unit id="7947d510c3fd5bf3469f9948134c6000a9e364bf" translate="yes" xml:space="preserve">
          <source>Extends the &lt;code&gt;javax.naming&lt;/code&gt; package to provide functionality for accessing directory services.</source>
          <target state="translated">&lt;code&gt;javax.naming&lt;/code&gt; パッケージを拡張して、ディレクトリサービスにアクセスするための機能を提供します。</target>
        </trans-unit>
        <trans-unit id="73cdd83ebc7420b276561bae07726450ec8f2c0a" translate="yes" xml:space="preserve">
          <source>Extends the multi-line plain text view to be suitable for a single-line editor view.</source>
          <target state="translated">複数行のプレーンテキストビューを拡張して、1行エディタビューに適したものにします。</target>
        </trans-unit>
        <trans-unit id="f35307123ea0f55599843b1d16ee542477d4f115" translate="yes" xml:space="preserve">
          <source>Extends the multi-line plain text view to be suitable for a single-line editor view. If the view is allocated extra space, the field must adjust for it. If the hosting component is a JTextField, this view will manage the ranges of the associated BoundedRangeModel and will adjust the horizontal allocation to match the current visibility settings of the JTextField.</source>
          <target state="translated">複数行のプレーンテキストビューを拡張して、1行エディタビューに適したものにします。ビューに余分なスペースが割り当てられている場合、フィールドはそれに合わせて調整しなければなりません。ホスティング コンポーネントが JTextField の場合、このビューは関連する BoundedRangeModel の範囲を管理し、JTextField の現在の可視性設定に合わせて水平方向の割り当てを調整します。</target>
        </trans-unit>
        <trans-unit id="3127e1eef2b1fc6c421b6389a0c264d26f7b3f17" translate="yes" xml:space="preserve">
          <source>Extends the validity period of this ticket.</source>
          <target state="translated">このチケットの有効期間を延長します。</target>
        </trans-unit>
        <trans-unit id="6920d3b36f83f634396ff91ff465dca03d6cac5a" translate="yes" xml:space="preserve">
          <source>Extends the validity period of this ticket. The ticket will contain a new session key if the refresh operation succeeds. The refresh operation will fail if the ticket is not renewable or the latest allowable renew time has passed. Any other error returned by the KDC will also cause this method to fail. Note: This method is not synchronized with the accessor methods of this object. Hence callers need to be aware of multiple threads that might access this and try to renew it at the same time.</source>
          <target state="translated">このチケットの有効期間を延長します。更新操作が成功した場合、チケットには新しいセッションキーが含まれます。チケットが更新されていない場合や、最新の更新可能時間を過ぎてしまった場合は、更新操作は失敗します。KDC が返すその他のエラーもこのメソッドの失敗の原因となります。注意:このメソッドはこのオブジェクトのアクセサメソッドとは同期していません。したがって、呼び出し元は、これにアクセスして同時に更新を試みる可能性のある複数のスレッドに注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="a401006764e8e64bebd2cd84b007dcfc8e4618d5" translate="yes" xml:space="preserve">
          <source>Extends the validity period of this ticket. The ticket will contain a new session key if the refresh operation succeeds. The refresh operation will fail if the ticket is not renewable or the latest allowable renew time has passed. Any other error returned by the KDC will also cause this method to fail. Note: This method is not synchronized with the the accessor methods of this object. Hence callers need to be aware of multiple threads that might access this and try to renew it at the same time.</source>
          <target state="translated">このチケットの有効期間を延長します。更新操作が成功した場合、チケットには新しいセッションキーが含まれます。チケットが更新されていない場合や、最新の更新可能時間を過ぎてしまった場合は、更新操作は失敗します。KDC が返すその他のエラーもこのメソッドの失敗の原因となります。注意:このメソッドはこのオブジェクトのアクセサメソッドとは同期していません。したがって、呼び出し元は、これにアクセスして同時に更新しようとする可能性のある複数のスレッドに注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="659087d3ca23db6ae11e0a43579b5f4a260dda11" translate="yes" xml:space="preserve">
          <source>Extension</source>
          <target state="translated">Extension</target>
        </trans-unit>
        <trans-unit id="d2627a483f74ed4770ee8673652fb732849ba65f" translate="yes" xml:space="preserve">
          <source>Extension Name</source>
          <target state="translated">拡張子名</target>
        </trans-unit>
        <trans-unit id="ddaa5ed2f051cae9a8ad7329681ae8ef9b74be6c" translate="yes" xml:space="preserve">
          <source>Extension mechanism is no longer supported.</source>
          <target state="translated">拡張機構はサポートされなくなりました。</target>
        </trans-unit>
        <trans-unit id="5453cc48f01e2a82ce16be576577b2591dd89ffe" translate="yes" xml:space="preserve">
          <source>Extension.encode()</source>
          <target state="translated">Extension.encode()</target>
        </trans-unit>
        <trans-unit id="dd32f62eb0e2372dae1499699cd116f0a5eca6f2" translate="yes" xml:space="preserve">
          <source>Extension.getId()</source>
          <target state="translated">Extension.getId()</target>
        </trans-unit>
        <trans-unit id="9fbb0f43c563ad2b4c3bc75cf1d27db72a755175" translate="yes" xml:space="preserve">
          <source>Extension.getValue()</source>
          <target state="translated">Extension.getValue()</target>
        </trans-unit>
        <trans-unit id="a50c0a4e589e726f8fa8b1f7ed1fce057cac770f" translate="yes" xml:space="preserve">
          <source>Extension.isCritical()</source>
          <target state="translated">Extension.isCritical()</target>
        </trans-unit>
        <trans-unit id="61ca48cb7e7ba8c0dd540826d6e49a901fefa2bd" translate="yes" xml:space="preserve">
          <source>Extensions provide a means of associating additional attributes with users or public keys and for managing a certification hierarchy. The extension format also allows communities to define private extensions to carry information unique to those communities.</source>
          <target state="translated">拡張機能は、追加の属性をユーザや公開鍵に関連付けたり、認証階層を管理したりするための手段を提供します。この拡張フォーマットでは、コミュニティがプライベートな拡張を定義して、そのコミュニティに固有の情報を保持することもできます。</target>
        </trans-unit>
        <trans-unit id="c7b34a44971b8850d7125395bd9fc7ceaff91930" translate="yes" xml:space="preserve">
          <source>Extensions to the &lt;code&gt;X509TrustManager&lt;/code&gt; interface to support SSL/TLS connection sensitive trust management.</source>
          <target state="translated">SSL / TLS接続に依存する信頼管理をサポートするための &lt;code&gt;X509TrustManager&lt;/code&gt; インターフェースの拡張。</target>
        </trans-unit>
        <trans-unit id="ae9b8b357204ba52db5d37b4ebc975684a1dda08" translate="yes" xml:space="preserve">
          <source>Extensions to the &lt;code&gt;X509TrustManager&lt;/code&gt; interface to support SSL/TLS/DTLS connection sensitive trust management.</source>
          <target state="translated">SSL / TLS / DTLS接続に依存する信頼管理をサポートするための &lt;code&gt;X509TrustManager&lt;/code&gt; インターフェースの拡張。</target>
        </trans-unit>
        <trans-unit id="2a18f34d037aa61d5efabd0ae0ece3b90a3626ff" translate="yes" xml:space="preserve">
          <source>External (&lt;a href=&quot;http://www.ietf.org/rfc/rfc2222.txt&quot;&gt;RFC 2222&lt;/a&gt;). This mechanism obtains authentication information from an external source (such as TLS or IPsec).</source>
          <target state="translated">外部（&lt;a href=&quot;http://www.ietf.org/rfc/rfc2222.txt&quot;&gt;RFC 2222&lt;/a&gt;）。このメカニズムは、外部情報源（TLSやIPsecなど）から認証情報を取得します。</target>
        </trans-unit>
        <trans-unit id="0a899b8894864e90dc30f2f9f8d9b62b3b459d5a" translate="yes" xml:space="preserve">
          <source>External (&lt;a href=&quot;https://www.ietf.org/rfc/rfc2222.txt&quot;&gt;RFC 2222&lt;/a&gt;). This mechanism obtains authentication information from an external source (such as TLS or IPsec).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed363c88abd0c45ad127fcc9cd3981af318d50b" translate="yes" xml:space="preserve">
          <source>External implementations should override this method and provide a more efficient implementation. For example, to delegate to the underlying process, it can do the following:</source>
          <target state="translated">外部実装は、このメソッドをオーバーライドして、より効率的な実装を提供する必要があります。例えば、基礎となるプロセスに委任するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="7c0480bbec7773f0eecd466b97e45818fc96703f" translate="yes" xml:space="preserve">
          <source>Externalizable</source>
          <target state="translated">Externalizable</target>
        </trans-unit>
        <trans-unit id="22ecb77c6dbe6c17c400eaf54b9e84fd72b55325" translate="yes" xml:space="preserve">
          <source>Externalizable.readExternal()</source>
          <target state="translated">Externalizable.readExternal()</target>
        </trans-unit>
        <trans-unit id="9458e1da939ef1ac6442d222130b62acfa467fff" translate="yes" xml:space="preserve">
          <source>Externalizable.writeExternal()</source>
          <target state="translated">Externalizable.writeExternal()</target>
        </trans-unit>
        <trans-unit id="9ca3ba7b3e3cc5b5173cac6b4583b12d85f77b89" translate="yes" xml:space="preserve">
          <source>Extra bootstrap method arguments are intended to allow language implementors to safely and compactly encode metadata. In principle, the name and extra arguments are redundant, since each call site could be given its own unique bootstrap method. Such a practice is likely to produce large class files and constant pools.</source>
          <target state="translated">追加のブートストラップメソッド引数は、言語実装者が安全かつコンパクトにメタデータをエンコードできるようにすることを意図しています。原則として、名前と余分な引数は冗長です。このような行為は、大きなクラスファイルや定数プールを生成する可能性があります。</target>
        </trans-unit>
        <trans-unit id="bd9d4994ac529c3f6d94a0559813ce9c5b850908" translate="yes" xml:space="preserve">
          <source>Extract the appropriate property value from the event and pass it to the action associated with this &lt;code&gt;EventHandler&lt;/code&gt;.</source>
          <target state="translated">イベントから適切なプロパティ値を抽出して、この &lt;code&gt;EventHandler&lt;/code&gt; に関連付けられているアクションに渡します。</target>
        </trans-unit>
        <trans-unit id="25e1d92c137d40d64b1b5b199abb7d1ea96f0608" translate="yes" xml:space="preserve">
          <source>Extract the enclosed PKCS8EncodedKeySpec object from the encrypted data and return it.</source>
          <target state="translated">暗号化されたデータから同封のPKCS8EncodedKeySpecオブジェクトを抽出して返します。</target>
        </trans-unit>
        <trans-unit id="df3c4aa26c9496513e1130a9cd3a1717402a2f32" translate="yes" xml:space="preserve">
          <source>Extracts a list of non-Instrument resources contained in the sound bank.</source>
          <target state="translated">サウンドバンクに含まれる楽器以外のリソースのリストを抽出します。</target>
        </trans-unit>
        <trans-unit id="b969b3b70bbdbd4121b2ca50500a6a2f89f84219" translate="yes" xml:space="preserve">
          <source>Extracts a range of data from the node.</source>
          <target state="translated">ノードからデータの範囲を抽出します。</target>
        </trans-unit>
        <trans-unit id="0e912a12ddb1a2a3453a65ac2e3657f50ab1313b" translate="yes" xml:space="preserve">
          <source>Extracts the Strings &quot;OK&quot; and &quot;Not Found&quot; respectively. Returns null if none could be discerned from the responses (the result was not valid HTTP).</source>
          <target state="translated">OK&quot; と &quot;Not Found&quot; の文字列をそれぞれ抽出します。レスポンスから何も判別できなかった場合(結果が有効なHTTPではなかった場合)には、nullを返します。</target>
        </trans-unit>
        <trans-unit id="a72bc52402e8163bf7e4571c191684b4d9f91d71" translate="yes" xml:space="preserve">
          <source>Extracts the number of days in the duration.</source>
          <target state="translated">期間中の日数を抽出します。</target>
        </trans-unit>
        <trans-unit id="d012d742ae9e9bf1c90eadbcfea69ec57e29ef27" translate="yes" xml:space="preserve">
          <source>Extracts the number of hours part in the duration.</source>
          <target state="translated">持続時間の部分の時間数を抽出します。</target>
        </trans-unit>
        <trans-unit id="b21aa498610bc9f9128593901b8b37f208a5c4d9" translate="yes" xml:space="preserve">
          <source>Extracts the number of milliseconds part of the duration.</source>
          <target state="translated">持続時間のミリ秒数の一部を抽出します。</target>
        </trans-unit>
        <trans-unit id="e4eddf1e90082eaa9663a64435dbf4e3c819bf46" translate="yes" xml:space="preserve">
          <source>Extracts the number of minutes part in the duration.</source>
          <target state="translated">持続時間内の分数部分を抽出します。</target>
        </trans-unit>
        <trans-unit id="549c3798f928a08c79a8f09fbc175badcb4eb46c" translate="yes" xml:space="preserve">
          <source>Extracts the number of seconds part in the duration.</source>
          <target state="translated">持続時間の秒数部分を抽出します。</target>
        </trans-unit>
        <trans-unit id="92da8bd9defde3954e17ad95beb1a80f92c06d20" translate="yes" xml:space="preserve">
          <source>Extracts the time as nanos of day, from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;24 * 60 * 60 * 1,000,000,000 - 1&lt;/code&gt;.</source>
          <target state="translated">時間を1日のナノとして、 &lt;code&gt;0&lt;/code&gt; から &lt;code&gt;24 * 60 * 60 * 1,000,000,000 - 1&lt;/code&gt; として抽出します。</target>
        </trans-unit>
        <trans-unit id="db49ba2331c97212c8f6a4e13f2c01f70c23010e" translate="yes" xml:space="preserve">
          <source>Extracts the time as seconds of day, from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;24 * 60 * 60 - 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; から &lt;code&gt;24 * 60 * 60 - 1&lt;/code&gt; 60-1までの時間を秒単位で抽出します。</target>
        </trans-unit>
        <trans-unit id="5c47a215e97e89901281cf5b0637e71cf5842c55" translate="yes" xml:space="preserve">
          <source>Extreme care should be taken when granting this permission. It allows linking to any file or directory in the file system thus allowing the attacker access to all files.</source>
          <target state="translated">この許可を与える際には細心の注意を払う必要があります。これにより、ファイルシステム内の任意のファイルやディレクトリへのリンクが可能となり、攻撃者はすべてのファイルにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="a0a3435b90487c077351926d51983313e2b328d3" translate="yes" xml:space="preserve">
          <source>Extreme care should be taken when granting this permission. It allows linking to any file or directory in the file system thus allowing the attacker to access to all files.</source>
          <target state="translated">この許可を与える際には細心の注意を払う必要があります。これにより、ファイルシステム内の任意のファイルやディレクトリへのリンクが可能となり、攻撃者はすべてのファイルにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="e69f20e9f683920d3fb4329abd951e878b1f9372" translate="yes" xml:space="preserve">
          <source>F</source>
          <target state="translated">F</target>
        </trans-unit>
        <trans-unit id="2a7bc94a06f3221293677515044b0a9dd3960f4e" translate="yes" xml:space="preserve">
          <source>F0</source>
          <target state="translated">F0</target>
        </trans-unit>
        <trans-unit id="88bfad9cfffeafd299a44d4daf979d57419a2621" translate="yes" xml:space="preserve">
          <source>F1</source>
          <target state="translated">F1</target>
        </trans-unit>
        <trans-unit id="86094de3d42fed072f47e81132f6ee6ce35b062d" translate="yes" xml:space="preserve">
          <source>F10</source>
          <target state="translated">F10</target>
        </trans-unit>
        <trans-unit id="b9c7614215c5bf3f22e0dd38d8c9a197b4432459" translate="yes" xml:space="preserve">
          <source>F11</source>
          <target state="translated">F11</target>
        </trans-unit>
        <trans-unit id="e262aa4c560f1ae35fd6e5cf5ac45462ea46ecc8" translate="yes" xml:space="preserve">
          <source>F12</source>
          <target state="translated">F12</target>
        </trans-unit>
        <trans-unit id="999d0cd62b8ea4c8cc007fa60dd7f242818b5349" translate="yes" xml:space="preserve">
          <source>F2</source>
          <target state="translated">F2</target>
        </trans-unit>
        <trans-unit id="be3d820f356c0030f50fa290b419eb634ad7d08d" translate="yes" xml:space="preserve">
          <source>F3</source>
          <target state="translated">F3</target>
        </trans-unit>
        <trans-unit id="d0d65e61c45effc7f25ca22d1d8fe818e2710c83" translate="yes" xml:space="preserve">
          <source>F4</source>
          <target state="translated">F4</target>
        </trans-unit>
        <trans-unit id="b5cbd3434bd596109a8781b509798ab1da4452a6" translate="yes" xml:space="preserve">
          <source>F5</source>
          <target state="translated">F5</target>
        </trans-unit>
        <trans-unit id="d2b73763a81514eaeb7022189a64bce725872b3e" translate="yes" xml:space="preserve">
          <source>F6</source>
          <target state="translated">F6</target>
        </trans-unit>
        <trans-unit id="d7b4d9b4412bb9ed347dbdc20fb00d440fd9ad87" translate="yes" xml:space="preserve">
          <source>F7</source>
          <target state="translated">F7</target>
        </trans-unit>
        <trans-unit id="4e981f3924819b5b19e253a6781c40d257ce5706" translate="yes" xml:space="preserve">
          <source>F8</source>
          <target state="translated">F8</target>
        </trans-unit>
        <trans-unit id="cfd1e0d844693082323c5b6208a1b47e7a0b150a" translate="yes" xml:space="preserve">
          <source>F9</source>
          <target state="translated">F9</target>
        </trans-unit>
        <trans-unit id="696af235f299ec59563507c2845dcf360d61615b" translate="yes" xml:space="preserve">
          <source>FACE</source>
          <target state="translated">FACE</target>
        </trans-unit>
        <trans-unit id="8c5d782ce87db9c287f419dea41ff3d699ce5130" translate="yes" xml:space="preserve">
          <source>FAHRVERGN&amp;Uuml;GEN</source>
          <target state="translated">FAHRVERGN&amp;Uuml;GEN</target>
        </trans-unit>
        <trans-unit id="8d33f3064fd0cf2aaa41f82a9b338d50cbbafde5" translate="yes" xml:space="preserve">
          <source>FAILED</source>
          <target state="translated">FAILED</target>
        </trans-unit>
        <trans-unit id="f9c22e097eeb42cb0f7b0067cf30053e4ead89e6" translate="yes" xml:space="preserve">
          <source>FAILURE</source>
          <target state="translated">FAILURE</target>
        </trans-unit>
        <trans-unit id="0ed2d7b5cdb77627bc46c6fac5026ec27b694d42" translate="yes" xml:space="preserve">
          <source>FALSE</source>
          <target state="translated">FALSE</target>
        </trans-unit>
        <trans-unit id="d77ba39cee073972bc000f3eb60f7cf221c2412f" translate="yes" xml:space="preserve">
          <source>FAMILY</source>
          <target state="translated">FAMILY</target>
        </trans-unit>
        <trans-unit id="dcb15895c6e0f69240c1fa4a65961c07ba1a3f7a" translate="yes" xml:space="preserve">
          <source>FEATURE</source>
          <target state="translated">FEATURE</target>
        </trans-unit>
        <trans-unit id="9ebaa0a3112cbb050c853e0af44d529275861662" translate="yes" xml:space="preserve">
          <source>FEATURE_SECURE_PROCESSING</source>
          <target state="translated">FEATURE_SECURE_PROCESSING</target>
        </trans-unit>
        <trans-unit id="28fa931ef949453395bfd8a7b8e291f6d3f9c980" translate="yes" xml:space="preserve">
          <source>FEATURE_XMLFILTER</source>
          <target state="translated">FEATURE_XMLFILTER</target>
        </trans-unit>
        <trans-unit id="849de4e09c0a5e0b6e0f77bc33d51648b8728839" translate="yes" xml:space="preserve">
          <source>FEBRUARY</source>
          <target state="translated">FEBRUARY</target>
        </trans-unit>
        <trans-unit id="89029fc6f37409b6f42943f8a6ba1b008ecf05c0" translate="yes" xml:space="preserve">
          <source>FETCH_FORWARD</source>
          <target state="translated">FETCH_FORWARD</target>
        </trans-unit>
        <trans-unit id="6a51ebf6dec5dd5fb644783361fe24cae1d2a56a" translate="yes" xml:space="preserve">
          <source>FETCH_REVERSE</source>
          <target state="translated">FETCH_REVERSE</target>
        </trans-unit>
        <trans-unit id="d8d380d8da7c00481efce0ab6ab800cf2a2e0263" translate="yes" xml:space="preserve">
          <source>FETCH_UNKNOWN</source>
          <target state="translated">FETCH_UNKNOWN</target>
        </trans-unit>
        <trans-unit id="fc233728a179b6a420c3d91af5db2eeacf1f4dc5" translate="yes" xml:space="preserve">
          <source>FIDELITY_FALSE</source>
          <target state="translated">FIDELITY_FALSE</target>
        </trans-unit>
        <trans-unit id="0b6be76311463d0b2701f4cc654e8938ee4a0978" translate="yes" xml:space="preserve">
          <source>FIDELITY_TRUE</source>
          <target state="translated">FIDELITY_TRUE</target>
        </trans-unit>
        <trans-unit id="987f4e96caf5df1037efbd4ee25756938e9da844" translate="yes" xml:space="preserve">
          <source>FIELD</source>
          <target state="translated">FIELD</target>
        </trans-unit>
        <trans-unit id="64e1bab918bd948e4b78086172f8596084803d0b" translate="yes" xml:space="preserve">
          <source>FIELD_ATTRIBUTE_PFX</source>
          <target state="translated">FIELD_ATTRIBUTE_PFX</target>
        </trans-unit>
        <trans-unit id="2b64611fe2c6aac5f03dacc2952d4176da9c6953" translate="yes" xml:space="preserve">
          <source>FIELD_COUNT</source>
          <target state="translated">FIELD_COUNT</target>
        </trans-unit>
        <trans-unit id="e7374f261eba97ef11ce9734ad26a3f5cdcc0b10" translate="yes" xml:space="preserve">
          <source>FIELD_UNDEFINED</source>
          <target state="translated">FIELD_UNDEFINED</target>
        </trans-unit>
        <trans-unit id="b4915d3a7ef82abdf96f2b5042452a69b2ea344c" translate="yes" xml:space="preserve">
          <source>FILE</source>
          <target state="translated">FILE</target>
        </trans-unit>
        <trans-unit id="c4aa9e5944607518b7369e543fb9270849797108" translate="yes" xml:space="preserve">
          <source>FILENAME</source>
          <target state="translated">FILENAME</target>
        </trans-unit>
        <trans-unit id="9fb4f1d17ef878fbfbe96076658397ad86bd5264" translate="yes" xml:space="preserve">
          <source>FILES</source>
          <target state="translated">FILES</target>
        </trans-unit>
        <trans-unit id="f91c358f3a45e202a28606fbe633fae93bf5c91e" translate="yes" xml:space="preserve">
          <source>FILES_AND_DIRECTORIES</source>
          <target state="translated">FILES_AND_DIRECTORIES</target>
        </trans-unit>
        <trans-unit id="1c24f6912bae4313b1c995c96cb3707d0aa38112" translate="yes" xml:space="preserve">
          <source>FILES_ONLY</source>
          <target state="translated">FILES_ONLY</target>
        </trans-unit>
        <trans-unit id="94637e693ea5576e889f185aa121b8396b3fd0d0" translate="yes" xml:space="preserve">
          <source>FILE_CHOOSER</source>
          <target state="translated">FILE_CHOOSER</target>
        </trans-unit>
        <trans-unit id="15a18ccff480009a09fd493cd6b499531ec16bf5" translate="yes" xml:space="preserve">
          <source>FILE_CHOOSER_DIALOG</source>
          <target state="translated">FILE_CHOOSER_DIALOG</target>
        </trans-unit>
        <trans-unit id="4976d7bdfbce9718c992522baad48bab3c20927b" translate="yes" xml:space="preserve">
          <source>FILE_FILTER_CHANGED_PROPERTY</source>
          <target state="translated">FILE_FILTER_CHANGED_PROPERTY</target>
        </trans-unit>
        <trans-unit id="62f226adb1ac41c76df2e63d9d2f34d31acaf6bd" translate="yes" xml:space="preserve">
          <source>FILE_HIDING_CHANGED_PROPERTY</source>
          <target state="translated">FILE_HIDING_CHANGED_PROPERTY</target>
        </trans-unit>
        <trans-unit id="5ee374f3bffc62705cd38057badbd45e9f3d0b60" translate="yes" xml:space="preserve">
          <source>FILE_INHERIT</source>
          <target state="translated">FILE_INHERIT</target>
        </trans-unit>
        <trans-unit id="b07a7d9eeba42a93449004f28ecbc775373d4cfd" translate="yes" xml:space="preserve">
          <source>FILE_SELECTION_MODE_CHANGED_PROPERTY</source>
          <target state="translated">FILE_SELECTION_MODE_CHANGED_PROPERTY</target>
        </trans-unit>
        <trans-unit id="328908f9e46ae0ca107eaa5df1fadf5b9041c02d" translate="yes" xml:space="preserve">
          <source>FILE_SOURCE_DSC</source>
          <target state="translated">FILE_SOURCE_DSC</target>
        </trans-unit>
        <trans-unit id="98eec014be962d0b5eaa5c97142b38f531cf53ee" translate="yes" xml:space="preserve">
          <source>FILE_SYSTEM_VIEW_CHANGED_PROPERTY</source>
          <target state="translated">FILE_SYSTEM_VIEW_CHANGED_PROPERTY</target>
        </trans-unit>
        <trans-unit id="0eb65991d73a2c79e09dafc39f8ffc9443081dee" translate="yes" xml:space="preserve">
          <source>FILE_VERSION</source>
          <target state="translated">FILE_VERSION</target>
        </trans-unit>
        <trans-unit id="42a9393a293e6b779d68d7378557e09f33243fa5" translate="yes" xml:space="preserve">
          <source>FILE_VIEW_CHANGED_PROPERTY</source>
          <target state="translated">FILE_VIEW_CHANGED_PROPERTY</target>
        </trans-unit>
        <trans-unit id="57b2849536a1efa1f62fdf190cadb1a10c11e6b6" translate="yes" xml:space="preserve">
          <source>FILL</source>
          <target state="translated">FILL</target>
        </trans-unit>
        <trans-unit id="99f29103c94a2d2c7cf93eab4d23f026231aad4a" translate="yes" xml:space="preserve">
          <source>FILLER</source>
          <target state="translated">FILLER</target>
        </trans-unit>
        <trans-unit id="1bcebf686b297bf4f4e9b4832367cc115957246b" translate="yes" xml:space="preserve">
          <source>FILL_ORDER_LEFT_TO_RIGHT</source>
          <target state="translated">FILL_ORDER_LEFT_TO_RIGHT</target>
        </trans-unit>
        <trans-unit id="1320840c9b718f61cffdc02824e25e4e9c5a6056" translate="yes" xml:space="preserve">
          <source>FILL_ORDER_RIGHT_TO_LEFT</source>
          <target state="translated">FILL_ORDER_RIGHT_TO_LEFT</target>
        </trans-unit>
        <trans-unit id="f5589e7b47d89d401f36865bc61467a5b3e4b359" translate="yes" xml:space="preserve">
          <source>FILTERED</source>
          <target state="translated">FILTERED</target>
        </trans-unit>
        <trans-unit id="f2483c79d3ec41172cceecb7cc7dfad461f0c9ca" translate="yes" xml:space="preserve">
          <source>FILTER_ACCEPT</source>
          <target state="translated">FILTER_ACCEPT</target>
        </trans-unit>
        <trans-unit id="7bb43bdc2f7e5e38030b396a9b0e3697d710e3a2" translate="yes" xml:space="preserve">
          <source>FILTER_INTERRUPT</source>
          <target state="translated">FILTER_INTERRUPT</target>
        </trans-unit>
        <trans-unit id="d3bc4ccfe382be9195bae2ed2161c0e0410a81a3" translate="yes" xml:space="preserve">
          <source>FILTER_REJECT</source>
          <target state="translated">FILTER_REJECT</target>
        </trans-unit>
        <trans-unit id="a231fee1f84e220da6b3c00e96f63425a03ed92d" translate="yes" xml:space="preserve">
          <source>FILTER_SKIP</source>
          <target state="translated">FILTER_SKIP</target>
        </trans-unit>
        <trans-unit id="3acd080cfa2d20e6e03968c691809a218ae21fbd" translate="yes" xml:space="preserve">
          <source>FINAL</source>
          <target state="translated">FINAL</target>
        </trans-unit>
        <trans-unit id="58f8d703301dc080dbc5ad227fc9eb9a6907792a" translate="yes" xml:space="preserve">
          <source>FINAL_QUOTE_PUNCTUATION</source>
          <target state="translated">FINAL_QUOTE_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="2ff50c4f0fadebb633a94fdfd832731668ff4588" translate="yes" xml:space="preserve">
          <source>FINE</source>
          <target state="translated">FINE</target>
        </trans-unit>
        <trans-unit id="7d9c28040f5d141cde7236695bac3a2e6a8f4475" translate="yes" xml:space="preserve">
          <source>FINE is a message level providing tracing information.</source>
          <target state="translated">FINEは、トレース情報を提供するメッセージレベルです。</target>
        </trans-unit>
        <trans-unit id="042756f62447cf570f33f32299ab55e9d3475b90" translate="yes" xml:space="preserve">
          <source>FINE messages might include things like minor (recoverable) failures. Issues indicating potential performance problems are also worth logging as FINE. This level is initialized to &lt;code&gt;500&lt;/code&gt;.</source>
          <target state="translated">FINEメッセージには、マイナーな（回復可能な）障害などが含まれる場合があります。潜在的なパフォーマンスの問題を示す問題も、FINEとして記録する価値があります。このレベルは &lt;code&gt;500&lt;/code&gt; に初期化されます。</target>
        </trans-unit>
        <trans-unit id="04d9addd8ffee56c2d122a4d375b10c9b7d5677b" translate="yes" xml:space="preserve">
          <source>FINER</source>
          <target state="translated">FINER</target>
        </trans-unit>
        <trans-unit id="37eaa94906cb797a7ddd314ab008a41211f87a01" translate="yes" xml:space="preserve">
          <source>FINER indicates a fairly detailed tracing message.</source>
          <target state="translated">FINERは、かなり詳細なトレースメッセージを表示しています。</target>
        </trans-unit>
        <trans-unit id="12b7197ee69b11b7a7c13786b608e0a9fb205983" translate="yes" xml:space="preserve">
          <source>FINER indicates a fairly detailed tracing message. By default logging calls for entering, returning, or throwing an exception are traced at this level. This level is initialized to &lt;code&gt;400&lt;/code&gt;.</source>
          <target state="translated">FINERはかなり詳細なトレースメッセージを示します。デフォルトでは、例外の入力、戻り、またはスローのためのロギング呼び出しは、このレベルでトレースされます。このレベルは &lt;code&gt;400&lt;/code&gt; に初期化されます。</target>
        </trans-unit>
        <trans-unit id="6881e6de2eb19971210b2adba7ecb0a5cad5744c" translate="yes" xml:space="preserve">
          <source>FINEST</source>
          <target state="translated">FINEST</target>
        </trans-unit>
        <trans-unit id="e1b51ffa3474da819a615a61c1734afb077ebac1" translate="yes" xml:space="preserve">
          <source>FINEST (lowest value)</source>
          <target state="translated">ファイナスト(最低値)</target>
        </trans-unit>
        <trans-unit id="c11d9ae8766434afc8d10de366b32528cac85a1d" translate="yes" xml:space="preserve">
          <source>FINEST indicates a highly detailed tracing message.</source>
          <target state="translated">FINESTは、非常に詳細なトレースメッセージを示しています。</target>
        </trans-unit>
        <trans-unit id="e63c97f724cc2195ba2f91a5e8c442e26905fda8" translate="yes" xml:space="preserve">
          <source>FINEST indicates a highly detailed tracing message. This level is initialized to &lt;code&gt;300&lt;/code&gt;.</source>
          <target state="translated">FINESTは、非常に詳細なトレースメッセージを示します。このレベルは &lt;code&gt;300&lt;/code&gt; に初期化されます。</target>
        </trans-unit>
        <trans-unit id="d03d12c4eb40bfa7a42b09ae9a3a8508b3f49b3f" translate="yes" xml:space="preserve">
          <source>FINISHED</source>
          <target state="translated">FINISHED</target>
        </trans-unit>
        <trans-unit id="b01d0a373eb994ea711699372baff13949a80354" translate="yes" xml:space="preserve">
          <source>FIRST_LINE_END</source>
          <target state="translated">FIRST_LINE_END</target>
        </trans-unit>
        <trans-unit id="ab78e5e942ec84626ea4d5ab484a4f0d7349c1c7" translate="yes" xml:space="preserve">
          <source>FIRST_LINE_START</source>
          <target state="translated">FIRST_LINE_START</target>
        </trans-unit>
        <trans-unit id="db488ccceefcae668405ee0b5b015135a7e12eb2" translate="yes" xml:space="preserve">
          <source>FIRST_ORDERED_NODE_TYPE</source>
          <target state="translated">FIRST_ORDERED_NODE_TYPE</target>
        </trans-unit>
        <trans-unit id="36052ae4b6d98b6bfa6b96f699cad51073da2c7d" translate="yes" xml:space="preserve">
          <source>FIT_WIDTH</source>
          <target state="translated">FIT_WIDTH</target>
        </trans-unit>
        <trans-unit id="bca8e641804ae2f327a30d7b596cda09697ffdb2" translate="yes" xml:space="preserve">
          <source>FIXED</source>
          <target state="translated">FIXED</target>
        </trans-unit>
        <trans-unit id="735c1121b3054a23c194c530dcf40b8b6ff12296" translate="yes" xml:space="preserve">
          <source>FIXED_SIZES</source>
          <target state="translated">FIXED_SIZES</target>
        </trans-unit>
        <trans-unit id="015f15f6ca35edfa57ca1cf82c4f18b9b235ff4c" translate="yes" xml:space="preserve">
          <source>FLAG_BRIDGES</source>
          <target state="translated">FLAG_BRIDGES</target>
        </trans-unit>
        <trans-unit id="08fb22730a5d4f89a3c81ee49db622cdd2fb0e87" translate="yes" xml:space="preserve">
          <source>FLAG_COMPLEX_GLYPHS</source>
          <target state="translated">FLAG_COMPLEX_GLYPHS</target>
        </trans-unit>
        <trans-unit id="7387a28ebd7cb571826ea9bdb3a8b9b945f68793" translate="yes" xml:space="preserve">
          <source>FLAG_HAS_POSITION_ADJUSTMENTS</source>
          <target state="translated">FLAG_HAS_POSITION_ADJUSTMENTS</target>
        </trans-unit>
        <trans-unit id="1def8bd5505a7ca8291eea6e1e6d36f6b0d4bb6a" translate="yes" xml:space="preserve">
          <source>FLAG_HAS_TRANSFORMS</source>
          <target state="translated">FLAG_HAS_TRANSFORMS</target>
        </trans-unit>
        <trans-unit id="c3520ae4fad4175066849fe4f041ff8dd3316022" translate="yes" xml:space="preserve">
          <source>FLAG_MARKERS</source>
          <target state="translated">FLAG_MARKERS</target>
        </trans-unit>
        <trans-unit id="bb42ea6574d3398d4d5b833fb789bb53a036a199" translate="yes" xml:space="preserve">
          <source>FLAG_MASK</source>
          <target state="translated">FLAG_MASK</target>
        </trans-unit>
        <trans-unit id="448e2eca8f03b0eecda8c3ae6aaf87cb14ca3f86" translate="yes" xml:space="preserve">
          <source>FLAG_RUN_RTL</source>
          <target state="translated">FLAG_RUN_RTL</target>
        </trans-unit>
        <trans-unit id="f71e73c28bcea506d0f02c35ff00ce096d1deeae" translate="yes" xml:space="preserve">
          <source>FLAG_SERIALIZABLE</source>
          <target state="translated">FLAG_SERIALIZABLE</target>
        </trans-unit>
        <trans-unit id="2df2d257cef1a291ec63064fae792764d4ae7b4f" translate="yes" xml:space="preserve">
          <source>FLASH_DID_NOT_FIRE</source>
          <target state="translated">FLASH_DID_NOT_FIRE</target>
        </trans-unit>
        <trans-unit id="f7359e6bd512791a26734a90cd6b0c3e1d5be635" translate="yes" xml:space="preserve">
          <source>FLASH_FIRED</source>
          <target state="translated">FLASH_FIRED</target>
        </trans-unit>
        <trans-unit id="3635e5c921db0d6c5043708034ed2fa9d4112468" translate="yes" xml:space="preserve">
          <source>FLASH_MASK_FIRED</source>
          <target state="translated">FLASH_MASK_FIRED</target>
        </trans-unit>
        <trans-unit id="71efa0eac039c2875e1af2d043cd2199f60a713f" translate="yes" xml:space="preserve">
          <source>FLASH_MASK_FUNCTION_NOT_PRESENT</source>
          <target state="translated">FLASH_MASK_FUNCTION_NOT_PRESENT</target>
        </trans-unit>
        <trans-unit id="e2f3214a4f90c908d2471bcd90cf73539b382b70" translate="yes" xml:space="preserve">
          <source>FLASH_MASK_MODE_AUTO</source>
          <target state="translated">FLASH_MASK_MODE_AUTO</target>
        </trans-unit>
        <trans-unit id="4fc0d66b0bed0dea1a5a7bf7d8762a8d4e36822d" translate="yes" xml:space="preserve">
          <source>FLASH_MASK_MODE_FLASH_FIRING</source>
          <target state="translated">FLASH_MASK_MODE_FLASH_FIRING</target>
        </trans-unit>
        <trans-unit id="a8e9a7f2f4457e91d32c7676b4ae8896335d75e9" translate="yes" xml:space="preserve">
          <source>FLASH_MASK_MODE_FLASH_SUPPRESSION</source>
          <target state="translated">FLASH_MASK_MODE_FLASH_SUPPRESSION</target>
        </trans-unit>
        <trans-unit id="b1ade8d51c7483992869aa8143b642e92bb1b64b" translate="yes" xml:space="preserve">
          <source>FLASH_MASK_RED_EYE_REDUCTION</source>
          <target state="translated">FLASH_MASK_RED_EYE_REDUCTION</target>
        </trans-unit>
        <trans-unit id="6948f2da907c48f4374665347ce512c4b4a09137" translate="yes" xml:space="preserve">
          <source>FLASH_MASK_RETURN_DETECTED</source>
          <target state="translated">FLASH_MASK_RETURN_DETECTED</target>
        </trans-unit>
        <trans-unit id="5cbf77419b71ef67eaa9b29681a59dcec93d0b08" translate="yes" xml:space="preserve">
          <source>FLASH_MASK_RETURN_NOT_DETECTED</source>
          <target state="translated">FLASH_MASK_RETURN_NOT_DETECTED</target>
        </trans-unit>
        <trans-unit id="422cca8f089c582409188c56e860f4ee39a8304f" translate="yes" xml:space="preserve">
          <source>FLASH_OPTION</source>
          <target state="translated">FLASH_OPTION</target>
        </trans-unit>
        <trans-unit id="4294335003a782c1cffbc8688bb6fddc8431d3ab" translate="yes" xml:space="preserve">
          <source>FLASH_STROBE_RETURN_LIGHT_DETECTED</source>
          <target state="translated">FLASH_STROBE_RETURN_LIGHT_DETECTED</target>
        </trans-unit>
        <trans-unit id="3b6e6f3c253555b90033a6fce671fff753ebc6a5" translate="yes" xml:space="preserve">
          <source>FLASH_STROBE_RETURN_LIGHT_NOT_DETECTED</source>
          <target state="translated">FLASH_STROBE_RETURN_LIGHT_NOT_DETECTED</target>
        </trans-unit>
        <trans-unit id="cd98ae36981ee80a267c314ec60000c7f9d30870" translate="yes" xml:space="preserve">
          <source>FLOAT</source>
          <target state="translated">FLOAT</target>
        </trans-unit>
        <trans-unit id="0ec725b5b3d115a431d5e3df32a60a874772e97c" translate="yes" xml:space="preserve">
          <source>FLOAT_LITERAL</source>
          <target state="translated">FLOAT_LITERAL</target>
        </trans-unit>
        <trans-unit id="e4a528cf2255ca946eb38878b29504cf8ac21255" translate="yes" xml:space="preserve">
          <source>FLOOR</source>
          <target state="translated">FLOOR</target>
        </trans-unit>
        <trans-unit id="83f963f13bb95d94d2bffc00c745e8ce70000b14" translate="yes" xml:space="preserve">
          <source>FLOWS_FROM</source>
          <target state="translated">FLOWS_FROM</target>
        </trans-unit>
        <trans-unit id="9cc79551cd3762c6cd7e9eb7974c1d7775b91d82" translate="yes" xml:space="preserve">
          <source>FLOWS_FROM_PROPERTY</source>
          <target state="translated">FLOWS_FROM_PROPERTY</target>
        </trans-unit>
        <trans-unit id="362fa744c6946526aca890a76ab7b1df61940ecb" translate="yes" xml:space="preserve">
          <source>FLOWS_TO</source>
          <target state="translated">FLOWS_TO</target>
        </trans-unit>
        <trans-unit id="c433dab4630e27eaf550093dd4f352ad2af8eff4" translate="yes" xml:space="preserve">
          <source>FLOWS_TO_PROPERTY</source>
          <target state="translated">FLOWS_TO_PROPERTY</target>
        </trans-unit>
        <trans-unit id="607a856b8389b0319bcef193ce8bf246b49dd884" translate="yes" xml:space="preserve">
          <source>FLUSH_FAILURE</source>
          <target state="translated">FLUSH_FAILURE</target>
        </trans-unit>
        <trans-unit id="c3325c88e31a851386dbcd9bc5e79539ecdd363a" translate="yes" xml:space="preserve">
          <source>FLUSH_FAILURE is used when a flush to an output stream fails.</source>
          <target state="translated">FLUSH_FAILURE は、出力ストリームへのフラッシュに失敗した場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="fb0130f1510823daae6a81836cebe03ea17b0ad1" translate="yes" xml:space="preserve">
          <source>FOCAL_PLANE_RESOLUTION_UNIT_CENTIMETER</source>
          <target state="translated">FOCAL_PLANE_RESOLUTION_UNIT_CENTIMETER</target>
        </trans-unit>
        <trans-unit id="6e8ca8546090d817573efa663b8ab9c8c9ca0261" translate="yes" xml:space="preserve">
          <source>FOCAL_PLANE_RESOLUTION_UNIT_INCH</source>
          <target state="translated">FOCAL_PLANE_RESOLUTION_UNIT_INCH</target>
        </trans-unit>
        <trans-unit id="c7448937cdece22e864eb427e62cbd2a4d7b7ef6" translate="yes" xml:space="preserve">
          <source>FOCAL_PLANE_RESOLUTION_UNIT_NONE</source>
          <target state="translated">FOCAL_PLANE_RESOLUTION_UNIT_NONE</target>
        </trans-unit>
        <trans-unit id="de5b5c35c0436f3848172b12bea56b41b789d9b8" translate="yes" xml:space="preserve">
          <source>FOCUS</source>
          <target state="translated">FOCUS</target>
        </trans-unit>
        <trans-unit id="4a4b8f290a64d1088820ecd83bfed1bbbd8811b1" translate="yes" xml:space="preserve">
          <source>FOCUSABLE</source>
          <target state="translated">FOCUSABLE</target>
        </trans-unit>
        <trans-unit id="6fa188417ae85c09d8e0940c069484f18f6e13b4" translate="yes" xml:space="preserve">
          <source>FOCUSED</source>
          <target state="translated">FOCUSED</target>
        </trans-unit>
        <trans-unit id="56bcf05754d39c4d05f91ba625117fdab5fb3e44" translate="yes" xml:space="preserve">
          <source>FOCUS_ACCELERATOR_KEY</source>
          <target state="translated">FOCUS_ACCELERATOR_KEY</target>
        </trans-unit>
        <trans-unit id="e80aebcb7f3316a48ef6994c0e63d3c3dae37ee4" translate="yes" xml:space="preserve">
          <source>FOCUS_EVENT_MASK</source>
          <target state="translated">FOCUS_EVENT_MASK</target>
        </trans-unit>
        <trans-unit id="ba4bb3732da1e37c2443b1a20bf2e5ae51743c7d" translate="yes" xml:space="preserve">
          <source>FOCUS_FIRST</source>
          <target state="translated">FOCUS_FIRST</target>
        </trans-unit>
        <trans-unit id="5e9da5a5e18356c4b15e10bd5173b5f70f174036" translate="yes" xml:space="preserve">
          <source>FOCUS_GAINED</source>
          <target state="translated">FOCUS_GAINED</target>
        </trans-unit>
        <trans-unit id="4f3de54ceb80530e6062f9f1cc1f1f00f018ebcb" translate="yes" xml:space="preserve">
          <source>FOCUS_LAST</source>
          <target state="translated">FOCUS_LAST</target>
        </trans-unit>
        <trans-unit id="49f0a6f00b62e3a73034e25d935efbdfbb336e39" translate="yes" xml:space="preserve">
          <source>FOCUS_LOST</source>
          <target state="translated">FOCUS_LOST</target>
        </trans-unit>
        <trans-unit id="7fa7f3bbd8c38082dab9965268c794eda8529937" translate="yes" xml:space="preserve">
          <source>FOCUS_MANAGER_CLASS_PROPERTY</source>
          <target state="translated">FOCUS_MANAGER_CLASS_PROPERTY</target>
        </trans-unit>
        <trans-unit id="ecf350225fa0729b0abfccf5ac2bdcf1d5cda94d" translate="yes" xml:space="preserve">
          <source>FOCUS_PAINTED_CHANGED_PROPERTY</source>
          <target state="translated">FOCUS_PAINTED_CHANGED_PROPERTY</target>
        </trans-unit>
        <trans-unit id="b1ae7ee1f1de06d989580554f37f1999c28dca73" translate="yes" xml:space="preserve">
          <source>FOLIO</source>
          <target state="translated">FOLIO</target>
        </trans-unit>
        <trans-unit id="c0bbae0728667a751b0ae64c17b5f5832f186524" translate="yes" xml:space="preserve">
          <source>FOLLOW_LINKS</source>
          <target state="translated">FOLLOW_LINKS</target>
        </trans-unit>
        <trans-unit id="d42e48e87a1dfe2de1cb65edb62e0547caace385" translate="yes" xml:space="preserve">
          <source>FONT</source>
          <target state="translated">FONT</target>
        </trans-unit>
        <trans-unit id="f7a6dbd0545ba9ae09f8ad94030f9817821bff02" translate="yes" xml:space="preserve">
          <source>FONT_CHANGE_BIGGER</source>
          <target state="translated">FONT_CHANGE_BIGGER</target>
        </trans-unit>
        <trans-unit id="2aec5daf2bcfbecf41e61ba5c3b5ee22e7e48ab1" translate="yes" xml:space="preserve">
          <source>FONT_CHANGE_SMALLER</source>
          <target state="translated">FONT_CHANGE_SMALLER</target>
        </trans-unit>
        <trans-unit id="28f4a7584d77268aa687adf34e735d6edb850316" translate="yes" xml:space="preserve">
          <source>FONT_CHOOSER</source>
          <target state="translated">FONT_CHOOSER</target>
        </trans-unit>
        <trans-unit id="8d46b3ca236fd406f44a6a445836a88e13ba4fce" translate="yes" xml:space="preserve">
          <source>FONT_FACE_RULE</source>
          <target state="translated">FONT_FACE_RULE</target>
        </trans-unit>
        <trans-unit id="385149229ac474ea83ce81859ab86cee568f9cee" translate="yes" xml:space="preserve">
          <source>FONT_FAMILY</source>
          <target state="translated">FONT_FAMILY</target>
        </trans-unit>
        <trans-unit id="e778501115d25d603ebdf533ba741a68480088ce" translate="yes" xml:space="preserve">
          <source>FONT_SIZE</source>
          <target state="translated">FONT_SIZE</target>
        </trans-unit>
        <trans-unit id="037c6ed11a05370d2f980591dcd8b54bd0792ee1" translate="yes" xml:space="preserve">
          <source>FONT_STYLE</source>
          <target state="translated">FONT_STYLE</target>
        </trans-unit>
        <trans-unit id="3089631603f4a101f8c16116c57befdfb2271ea9" translate="yes" xml:space="preserve">
          <source>FONT_VARIANT</source>
          <target state="translated">FONT_VARIANT</target>
        </trans-unit>
        <trans-unit id="64f5b134604212a6db358f10f76059c248de8a9a" translate="yes" xml:space="preserve">
          <source>FONT_WEIGHT</source>
          <target state="translated">FONT_WEIGHT</target>
        </trans-unit>
        <trans-unit id="168f8affd71a259e30a40f72266c844c206b6517" translate="yes" xml:space="preserve">
          <source>FOO.COM</source>
          <target state="translated">FOO.COM</target>
        </trans-unit>
        <trans-unit id="5c4f4b982d25785317760c8ae580a7be695e27d3" translate="yes" xml:space="preserve">
          <source>FOOTER</source>
          <target state="translated">FOOTER</target>
        </trans-unit>
        <trans-unit id="a527cca2ccf58bf8ff1d23828bdbc7b9079c85fa" translate="yes" xml:space="preserve">
          <source>FOREGROUND</source>
          <target state="translated">FOREGROUND</target>
        </trans-unit>
        <trans-unit id="e4633e6488550fd1314f21c5fdede6149aa98fb7" translate="yes" xml:space="preserve">
          <source>FOREVER</source>
          <target state="translated">FOREVER</target>
        </trans-unit>
        <trans-unit id="49b71cfc6dbaeaf2d7271b35e698bcb55b689647" translate="yes" xml:space="preserve">
          <source>FORM</source>
          <target state="translated">FORM</target>
        </trans-unit>
        <trans-unit id="3f6103eba0b588dc2c4ca41ac7c6811788d10af9" translate="yes" xml:space="preserve">
          <source>FORMAT</source>
          <target state="translated">FORMAT</target>
        </trans-unit>
        <trans-unit id="d9e176dfe8147fb83fcb20c53d78e2b2c941e991" translate="yes" xml:space="preserve">
          <source>FORMATTED_TEXT_FIELD</source>
          <target state="translated">FORMATTED_TEXT_FIELD</target>
        </trans-unit>
        <trans-unit id="72a4418743a5067bc09ef021274ad6dc66bbfff3" translate="yes" xml:space="preserve">
          <source>FORMAT_CLASS</source>
          <target state="translated">FORMAT_CLASS</target>
        </trans-unit>
        <trans-unit id="03a4a7bbcfc00d8c7458ad97595fa46d5df8216d" translate="yes" xml:space="preserve">
          <source>FORMAT_DEFAULT</source>
          <target state="translated">FORMAT_DEFAULT</target>
        </trans-unit>
        <trans-unit id="2acd06eefc1d7f82dc65bc1fd5f2b00a25b58bda" translate="yes" xml:space="preserve">
          <source>FORMAT_FAILURE</source>
          <target state="translated">FORMAT_FAILURE</target>
        </trans-unit>
        <trans-unit id="d5b329431a0ac954d3faf7ba43e0302c7147bcb5" translate="yes" xml:space="preserve">
          <source>FORMAT_FAILURE is used when formatting fails for any reason.</source>
          <target state="translated">FORMAT_FAILUREは、何らかの理由でフォーマットに失敗した場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="7799337c59a5a3090175c4a8abb3ed31eab78332" translate="yes" xml:space="preserve">
          <source>FORMAT_PROPERTIES</source>
          <target state="translated">FORMAT_PROPERTIES</target>
        </trans-unit>
        <trans-unit id="e48b9da48940f235bd379b012b086c0d457456bd" translate="yes" xml:space="preserve">
          <source>FORWARD_TRAVERSAL_KEYS</source>
          <target state="translated">FORWARD_TRAVERSAL_KEYS</target>
        </trans-unit>
        <trans-unit id="cd2d03d253d027d96e3790ccc4435e065543abca" translate="yes" xml:space="preserve">
          <source>FOR_LOOP</source>
          <target state="translated">FOR_LOOP</target>
        </trans-unit>
        <trans-unit id="f85fb71f7d9cd01ac88364f157d001a516dac9eb" translate="yes" xml:space="preserve">
          <source>FRACTION</source>
          <target state="translated">FRACTION</target>
        </trans-unit>
        <trans-unit id="1941dd30515830388258f52e7d8bf9ac13408da1" translate="yes" xml:space="preserve">
          <source>FRACTION_FIELD</source>
          <target state="translated">FRACTION_FIELD</target>
        </trans-unit>
        <trans-unit id="6d649eb34ab561580aac978f2616d1af80b9431a" translate="yes" xml:space="preserve">
          <source>FRAME</source>
          <target state="translated">FRAME</target>
        </trans-unit>
        <trans-unit id="99d256e56c5f2a4815e01eccdfb07f0d2b0758a6" translate="yes" xml:space="preserve">
          <source>FRAMEBITS</source>
          <target state="translated">FRAMEBITS</target>
        </trans-unit>
        <trans-unit id="b98c44f392e8c6fdde873dee905712e13ff80baa" translate="yes" xml:space="preserve">
          <source>FRAMEBORDER</source>
          <target state="translated">FRAMEBORDER</target>
        </trans-unit>
        <trans-unit id="9476db8085abab43bcee92b721ce1dc248fca9a6" translate="yes" xml:space="preserve">
          <source>FRAMESET</source>
          <target state="translated">FRAMESET</target>
        </trans-unit>
        <trans-unit id="d6cfe24738a49f424e1ff576512af1c1ff8afff5" translate="yes" xml:space="preserve">
          <source>FRAME_CONTENT_LAYER</source>
          <target state="translated">FRAME_CONTENT_LAYER</target>
        </trans-unit>
        <trans-unit id="be927234c0f8f91c8c59a23f2f379e3c135f44d9" translate="yes" xml:space="preserve">
          <source>FRAME_ICON_PROPERTY</source>
          <target state="translated">FRAME_ICON_PROPERTY</target>
        </trans-unit>
        <trans-unit id="85366acfb2d528adaac46564ceb84f59e801344d" translate="yes" xml:space="preserve">
          <source>FRANCE</source>
          <target state="translated">FRANCE</target>
        </trans-unit>
        <trans-unit id="554716d980deda41492a3d0a3c0149a014be6397" translate="yes" xml:space="preserve">
          <source>FREE_STANDING_PROP</source>
          <target state="translated">FREE_STANDING_PROP</target>
        </trans-unit>
        <trans-unit id="b7cb3639132052239afc6e0d1647415e1819331f" translate="yes" xml:space="preserve">
          <source>FRENCH</source>
          <target state="translated">FRENCH</target>
        </trans-unit>
        <trans-unit id="c1d6fd2d1d5b54b3aeea5004af20a0ef199e34fe" translate="yes" xml:space="preserve">
          <source>FRIDAY</source>
          <target state="translated">FRIDAY</target>
        </trans-unit>
        <trans-unit id="acb28212fba0272ee990cebd571ebe09b463312e" translate="yes" xml:space="preserve">
          <source>FTP</source>
          <target state="translated">FTP</target>
        </trans-unit>
        <trans-unit id="cc0a745dcfb4d3d66417f75affb8f4b428e7e18f" translate="yes" xml:space="preserve">
          <source>FULL</source>
          <target state="translated">FULL</target>
        </trans-unit>
        <trans-unit id="7d778bc3c4a2cdd72e1bb1c625fa4de1a277dda5" translate="yes" xml:space="preserve">
          <source>FULLWIDTH_DIGITS</source>
          <target state="translated">FULLWIDTH_DIGITS</target>
        </trans-unit>
        <trans-unit id="70d101ba0edbae330e46135e7fe91c06895bbeb7" translate="yes" xml:space="preserve">
          <source>FULLWIDTH_LATIN</source>
          <target state="translated">FULLWIDTH_LATIN</target>
        </trans-unit>
        <trans-unit id="37940cb6385f0db201639428369c9193143b998f" translate="yes" xml:space="preserve">
          <source>FULL_DECOMPOSITION</source>
          <target state="translated">FULL_DECOMPOSITION</target>
        </trans-unit>
        <trans-unit id="6db8548742223c0a31e66ad85e86f12adaec3c0f" translate="yes" xml:space="preserve">
          <source>FULL_DECOMPOSITION corresponds to Normalization Form KD as described in &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt;Unicode Technical Report #15&lt;/a&gt;.</source>
          <target state="translated">FULL_DECOMPOSITIONは、&lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt;Unicode Technical Report＃15で&lt;/a&gt;説明されている正規化形式KDに対応しています。</target>
        </trans-unit>
        <trans-unit id="db033ef1fd91966c8833fe4952a6b81ca8b3b5dc" translate="yes" xml:space="preserve">
          <source>FULL_DECOMPOSITION corresponds to Normalization Form KD as described in &lt;a href=&quot;https://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt;Unicode Technical Report #15&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a06cc5adc07587d678c73162dd21fb34758765" translate="yes" xml:space="preserve">
          <source>FULL_DECOMPOSITION.</source>
          <target state="translated">FULL_DECOMPOSITION.</target>
        </trans-unit>
        <trans-unit id="9d7ca5f7e3c3929331ba830e97d223ee8b9c4cca" translate="yes" xml:space="preserve">
          <source>FULL_FLUSH</source>
          <target state="translated">FULL_FLUSH</target>
        </trans-unit>
        <trans-unit id="e1dacb3b4c250003bc196b9c52a8ab26c1c295e2" translate="yes" xml:space="preserve">
          <source>FULL_JOIN</source>
          <target state="translated">FULL_JOIN</target>
        </trans-unit>
        <trans-unit id="c4d49d8f799c33bee8da7150a57439ac2ff09049" translate="yes" xml:space="preserve">
          <source>FULL_STANDALONE</source>
          <target state="translated">FULL_STANDALONE</target>
        </trans-unit>
        <trans-unit id="5444d52306e3e498fdd1513822bba84f5ee8b5cb" translate="yes" xml:space="preserve">
          <source>FUSER_OVER_TEMP</source>
          <target state="translated">FUSER_OVER_TEMP</target>
        </trans-unit>
        <trans-unit id="4525442e4998990d219eaf3907e54d48a12d9fab" translate="yes" xml:space="preserve">
          <source>FUSER_UNDER_TEMP</source>
          <target state="translated">FUSER_UNDER_TEMP</target>
        </trans-unit>
        <trans-unit id="7134ec77576934938836fcfd6e1de48c1071dc89" translate="yes" xml:space="preserve">
          <source>Facilitates the creation of optimized String concatenation methods, that can be used to efficiently concatenate a known number of arguments of known types, possibly after type adaptation and partial evaluation of arguments.</source>
          <target state="translated">最適化された文字列連結メソッドの作成を容易にし,既知の型の既知の数の引数を効率的に連結するために使用することができます.</target>
        </trans-unit>
        <trans-unit id="313cded737cf038d09b8ccd217cb32062efb412a" translate="yes" xml:space="preserve">
          <source>Facilitates the creation of optimized String concatenation methods, that can be used to efficiently concatenate a known number of arguments of known types, possibly after type adaptation and partial evaluation of arguments. Typically used as a &lt;em&gt;bootstrap method&lt;/em&gt; for &lt;code&gt;
 invokedynamic&lt;/code&gt; call sites, to support the &lt;em&gt;string concatenation&lt;/em&gt; feature of the Java Programming Language.</source>
          <target state="translated">最適化された文字列連結メソッドの作成を容易にします。これは、おそらく型の適応と引数の部分評価の後で、既知の型の既知の数の引数を効率的に連結するために使用できます。通常、Javaプログラミング言語の&lt;em&gt;文字列連結&lt;/em&gt;機能をサポートするために &lt;code&gt; invokedynamic&lt;/code&gt; 呼び出しサイトの&lt;em&gt;ブートストラップメソッド&lt;/em&gt;として使用されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="acb58746eddc03348516ee0cbbff3a9a3a545f3e" translate="yes" xml:space="preserve">
          <source>Facilitates the creation of simple &quot;function objects&quot; that implement one or more interfaces by delegation to a provided &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt;, after appropriate type adaptation and partial evaluation of arguments.</source>
          <target state="translated">適切な型の適応と引数の部分評価の後、提供された&lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; に&lt;/a&gt;委任することにより、1つ以上のインターフェースを実装する単純な「関数オブジェクト」の作成を容易にします。</target>
        </trans-unit>
        <trans-unit id="0ef7633d7f2e44adf651345c4104ded113ae8381" translate="yes" xml:space="preserve">
          <source>Facilitates the creation of simple &quot;function objects&quot; that implement one or more interfaces by delegation to a provided &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt;, after appropriate type adaptation and partial evaluation of arguments. Typically used as a &lt;em&gt;bootstrap method&lt;/em&gt; for &lt;code&gt;invokedynamic&lt;/code&gt; call sites, to support the &lt;em&gt;lambda expression&lt;/em&gt; and &lt;em&gt;method reference expression&lt;/em&gt; features of the Java Programming Language.</source>
          <target state="translated">適切な型の適応と引数の部分的な評価の後、提供された&lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;への委譲によって1つ以上のインターフェースを実装する単純な「関数オブジェクト」の作成を容易にします。通常、Javaプログラミング言語の&lt;em&gt;ラムダ式&lt;/em&gt;および&lt;em&gt;メソッド参照式&lt;/em&gt;機能をサポートするために、 &lt;code&gt;invokedynamic&lt;/code&gt; 呼び出しサイトの&lt;em&gt;ブートストラップメソッド&lt;/em&gt;として使用されます。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5d8686ed5edcabb3d277081d15b188264ba1a332" translate="yes" xml:space="preserve">
          <source>Facilities for declaring annotation processors and for allowing annotation processors to communicate with an annotation processing tool environment.</source>
          <target state="translated">アノテーション処理者を宣言し、アノテーション処理者がアノテーション処理ツール環境と通信できるようにするための設備。</target>
        </trans-unit>
        <trans-unit id="451edd79bd51bd9caa84037d85e3732934ffbf1a" translate="yes" xml:space="preserve">
          <source>Factor</source>
          <target state="translated">Factor</target>
        </trans-unit>
        <trans-unit id="dcd5818940a0a1171777585456fcdfaed4a159f5" translate="yes" xml:space="preserve">
          <source>Factories can themselves be customized with parameters used in socket construction. So for example, factories could be customized to return sockets with different networking timeouts or security parameters already configured.</source>
          <target state="translated">ファクトリーは、ソケットの構築に使用されるパラメータでカスタマイズすることができます。例えば、異なるネットワーキングタイムアウトやセキュリティパラメータを設定したソケットを返すようにファクトリーをカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="39d55e31f4151f2662a633de9a9d58d9edc64f8e" translate="yes" xml:space="preserve">
          <source>Factors</source>
          <target state="translated">Factors</target>
        </trans-unit>
        <trans-unit id="3156b346a064c1db3b4dfdc8e539af534a00f477" translate="yes" xml:space="preserve">
          <source>Factory Methods</source>
          <target state="translated">ファクトリーメソッド</target>
        </trans-unit>
        <trans-unit id="1cde87a862ffa11cf6f67d7f61b69104338b1c7c" translate="yes" xml:space="preserve">
          <source>Factory and utility methods for &lt;a href=&quot;executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;executorservice&quot;&gt;&lt;code&gt;ExecutorService&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;scheduledexecutorservice&quot;&gt;&lt;code&gt;ScheduledExecutorService&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;threadfactory&quot;&gt;&lt;code&gt;ThreadFactory&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;callable&quot;&gt;&lt;code&gt;Callable&lt;/code&gt;&lt;/a&gt; classes defined in this package.</source>
          <target state="translated">このパッケージで定義されている&lt;a href=&quot;executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;executorservice&quot;&gt; &lt;code&gt;ExecutorService&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;scheduledexecutorservice&quot;&gt; &lt;code&gt;ScheduledExecutorService&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;threadfactory&quot;&gt; &lt;code&gt;ThreadFactory&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;callable&quot;&gt; &lt;code&gt;Callable&lt;/code&gt; &lt;/a&gt;クラスのファクトリメソッドとユーティリティメソッド。</target>
        </trans-unit>
        <trans-unit id="56aa684d465cfb8a1db4cf83efee150c65f4cd6d" translate="yes" xml:space="preserve">
          <source>Factory and utility methods for &lt;a href=&quot;executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;executorservice&quot;&gt;&lt;code&gt;ExecutorService&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;scheduledexecutorservice&quot;&gt;&lt;code&gt;ScheduledExecutorService&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;threadfactory&quot;&gt;&lt;code&gt;ThreadFactory&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;callable&quot;&gt;&lt;code&gt;Callable&lt;/code&gt;&lt;/a&gt; classes defined in this package. This class supports the following kinds of methods:</source>
          <target state="translated">このパッケージで定義されている&lt;a href=&quot;executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;executorservice&quot;&gt; &lt;code&gt;ExecutorService&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;scheduledexecutorservice&quot;&gt; &lt;code&gt;ScheduledExecutorService&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;threadfactory&quot;&gt; &lt;code&gt;ThreadFactory&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;callable&quot;&gt; &lt;code&gt;Callable&lt;/code&gt; &lt;/a&gt;クラスのファクトリメソッドとユーティリティメソッド。このクラスは、次の種類のメソッドをサポートします。</target>
        </trans-unit>
        <trans-unit id="0b89dc1527922cea07bc68ee6651375de323e712" translate="yes" xml:space="preserve">
          <source>Factory class for vending standard &lt;code&gt;Border&lt;/code&gt; objects.</source>
          <target state="translated">標準の &lt;code&gt;Border&lt;/code&gt; オブジェクトを販売するためのファクトリクラス。</target>
        </trans-unit>
        <trans-unit id="fb0eb5853ee0a15dfc2a89059826eb21729549b9" translate="yes" xml:space="preserve">
          <source>Factory class for vending standard &lt;code&gt;Border&lt;/code&gt; objects. Wherever possible, this factory will hand out references to shared &lt;code&gt;Border&lt;/code&gt; instances. For further information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/border.html&quot;&gt;How to Use Borders&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">標準の &lt;code&gt;Border&lt;/code&gt; オブジェクトを販売するためのファクトリクラス。可能な限り、このファクトリは共有 &lt;code&gt;Border&lt;/code&gt; インスタンスへの参照を配布します。詳細と例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションである&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/border.html&quot;&gt;境界線の使用方法」を&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="60c507a517cbb86876f6693aa9adb186ef445bd5" translate="yes" xml:space="preserve">
          <source>Factory class for vending standard &lt;code&gt;Border&lt;/code&gt; objects. Wherever possible, this factory will hand out references to shared &lt;code&gt;Border&lt;/code&gt; instances. For further information and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/border.html&quot;&gt;How to Use Borders&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d17e14fd92b04b715ad08968d656a47b884430d" translate="yes" xml:space="preserve">
          <source>Factory classes are specified by environment-specific configuration mechanisms. For example, the &lt;em&gt;getDefault&lt;/em&gt; method could return a factory that was appropriate for a particular user or applet, and a framework could use a factory customized to its own purposes.</source>
          <target state="translated">ファクトリクラスは、環境固有の構成メカニズムによって指定されます。たとえば、&lt;em&gt;getDefault&lt;/em&gt;メソッドは特定のユーザーまたはアプレットに適したファクトリを返し、フレームワークは独自の目的に合わせてカスタマイズされたファクトリを使用できます。</target>
        </trans-unit>
        <trans-unit id="a75bdad5f37bbeae4f6382593fb675153bcef0e0" translate="yes" xml:space="preserve">
          <source>Factory for creating &lt;code&gt;DocTree&lt;/code&gt; nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2824c3b1ed75e90d9221d88c6de03fb139fa593" translate="yes" xml:space="preserve">
          <source>Factory for creating an XML reader.</source>
          <target state="translated">XMLリーダーを作成するためのファクトリー。</target>
        </trans-unit>
        <trans-unit id="8ed4cc91d96078a2d9335cf7e7bd4b633062a0c0" translate="yes" xml:space="preserve">
          <source>Factory for creating new &lt;a href=&quot;forkjoinworkerthread&quot;&gt;&lt;code&gt;ForkJoinWorkerThread&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">新しい&lt;a href=&quot;forkjoinworkerthread&quot;&gt; &lt;code&gt;ForkJoinWorkerThread&lt;/code&gt; &lt;/a&gt;を作成するためのファクトリ。</target>
        </trans-unit>
        <trans-unit id="cca30743fcf5b95f2b37768511b30b16d36cb260" translate="yes" xml:space="preserve">
          <source>Factory for creating new &lt;a href=&quot;forkjoinworkerthread&quot;&gt;&lt;code&gt;ForkJoinWorkerThread&lt;/code&gt;&lt;/a&gt;s. A &lt;code&gt;ForkJoinWorkerThreadFactory&lt;/code&gt; must be defined and used for &lt;code&gt;ForkJoinWorkerThread&lt;/code&gt; subclasses that extend base functionality or initialize threads with different contexts.</source>
          <target state="translated">新しい&lt;a href=&quot;forkjoinworkerthread&quot;&gt; &lt;code&gt;ForkJoinWorkerThread&lt;/code&gt; &lt;/a&gt;を作成するためのファクトリ。A &lt;code&gt;ForkJoinWorkerThreadFactory&lt;/code&gt; を定義し使用する必要があり &lt;code&gt;ForkJoinWorkerThread&lt;/code&gt; のベース機能を拡張するか、異なるコンテキストを持つスレッドを初期化サブクラス。</target>
        </trans-unit>
        <trans-unit id="b2790412b2d34124de7193ae286c4b7143ea268b" translate="yes" xml:space="preserve">
          <source>Factory method for &lt;code&gt;JShell.Builder&lt;/code&gt; which, in-turn, is used for creating instances of &lt;code&gt;JShell&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a934a4c071e2efb0dc8be386ec508b64b98eaf63" translate="yes" xml:space="preserve">
          <source>Factory method for &lt;code&gt;JShell.Builder&lt;/code&gt; which, in-turn, is used for creating instances of &lt;code&gt;JShell&lt;/code&gt;. Create a default instance of &lt;code&gt;JShell&lt;/code&gt; with &lt;code&gt;JShell.builder().build()&lt;/code&gt;. For more construction options see &lt;a href=&quot;jshell.builder&quot;&gt;&lt;code&gt;JShell.Builder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e3790d892cd5bad9229d468b0e43cbb9dc2ac49" translate="yes" xml:space="preserve">
          <source>Factory method for acquiring a single mechanism credential.</source>
          <target state="translated">単一機構のクレデンシャルを取得するためのファクトリーメソッド。</target>
        </trans-unit>
        <trans-unit id="cea5d98c37a3e724b1683395e8443ccf7a96591e" translate="yes" xml:space="preserve">
          <source>Factory method for acquiring credentials over a set of mechanisms.</source>
          <target state="translated">一連のメカニズムを介して資格情報を取得するためのファクトリーメソッド。</target>
        </trans-unit>
        <trans-unit id="89bdc4d6d11c73fc0f6255a4e0e616165c638e35" translate="yes" xml:space="preserve">
          <source>Factory method for acquiring credentials over a set of mechanisms. This method attempts to acquire credentials for each of the mechanisms specified in the array called mechs. To determine the list of mechanisms for which the acquisition of credentials succeeded, the caller should use the &lt;a href=&quot;gsscredential#getMechs()&quot;&gt;&lt;code&gt;GSSCredential.getMechs&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">一連のメカニズムを介して資格情報を取得するためのファクトリメソッド。このメソッドは、mechsと呼ばれる配列で指定された各メカニズムの資格情報を取得しようとします。資格情報の取得が成功したメカニズムのリストを判別するには、呼び出し元は&lt;a href=&quot;gsscredential#getMechs()&quot;&gt; &lt;code&gt;GSSCredential.getMechs&lt;/code&gt; &lt;/a&gt;メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="66e8a306620e1505f789e8b9391f712d6b2b51b0" translate="yes" xml:space="preserve">
          <source>Factory method for acquiring default credentials.</source>
          <target state="translated">デフォルトの資格情報を取得するためのファクトリーメソッド。</target>
        </trans-unit>
        <trans-unit id="a2aab7302bdfe94477b5b84ebfc717b3a042f713" translate="yes" xml:space="preserve">
          <source>Factory method for acquiring default credentials. This will cause the GSS-API to use system specific defaults for the set of mechanisms, name, and lifetime.</source>
          <target state="translated">デフォルトの資格情報を取得するためのファクトリーメソッド。これにより、GSS-API は、メカニズム、名前、およびライフタイムのセットにシステム固有のデフォルトを使用するようになります。</target>
        </trans-unit>
        <trans-unit id="a4feeebd9f7b165afe2ef5304510f6a1ffc2c472" translate="yes" xml:space="preserve">
          <source>Factory method for creating Array objects.</source>
          <target state="translated">配列オブジェクトを作成するためのファクトリーメソッドです。</target>
        </trans-unit>
        <trans-unit id="a960229296578f12fd82c4e1be214f6f5a5b8f89" translate="yes" xml:space="preserve">
          <source>Factory method for creating Struct objects.</source>
          <target state="translated">Structオブジェクトを作成するためのファクトリーメソッド。</target>
        </trans-unit>
        <trans-unit id="f5ba530736ba14720dc91620e4afd71dafb80a4c" translate="yes" xml:space="preserve">
          <source>Factory method for creating a context on the acceptor' side.</source>
          <target state="translated">アクセプタ側のコンテキストを作成するためのファクトリメソッドです。</target>
        </trans-unit>
        <trans-unit id="0cb1119af167ad2154f43d9aa35535510de5ecb7" translate="yes" xml:space="preserve">
          <source>Factory method for creating a context on the acceptor' side. The context's properties will be determined from the input token supplied to the accept method. Some mechanism providers might require that the caller be granted permission to accept a security context. A failed permission check might cause a &lt;a href=&quot;../../../../java.base/java/lang/securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; to be thrown from this method.</source>
          <target state="translated">アクセプター側でコンテキストを作成するためのファクトリメソッド。コンテキストのプロパティは、acceptメソッドに提供された入力トークンから決定されます。一部のメカニズムプロバイダーは、セキュリティコンテキストを受け入れるためのアクセス許可を呼び出し元に付与することを要求する場合があります。権限チェックに失敗すると、このメソッドから&lt;a href=&quot;../../../../java.base/java/lang/securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt;がスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="72f99ac7035734dac63640d5bb7934906b55f726" translate="yes" xml:space="preserve">
          <source>Factory method for creating a context on the initiator's side.</source>
          <target state="translated">イニシエータ側のコンテキストを作成するためのファクトリメソッド。</target>
        </trans-unit>
        <trans-unit id="40fd8a95d9545871ec0e0c7cb9ce1a3501df863f" translate="yes" xml:space="preserve">
          <source>Factory method for creating a context on the initiator's side. Some mechanism providers might require that the caller be granted permission to initiate a security context. A failed permission check might cause a &lt;a href=&quot;../../../../java.base/java/lang/securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; to be thrown from this method.</source>
          <target state="translated">イニシエーター側でコンテキストを作成するためのファクトリメソッド。一部のメカニズムプロバイダーでは、セキュリティコンテキストを開始するためのアクセス許可を呼び出し元に付与する必要がある場合があります。権限チェックに失敗すると、このメソッドから&lt;a href=&quot;../../../../java.base/java/lang/securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt;がスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="5672bc0f7a86807410cc01f4d384565b0b76fd58" translate="yes" xml:space="preserve">
          <source>Factory method for creating a previously exported context.</source>
          <target state="translated">以前にエクスポートされたコンテキストを作成するためのファクトリメソッド。</target>
        </trans-unit>
        <trans-unit id="088276851adb386f7ca1e85b75445f9a56edc900" translate="yes" xml:space="preserve">
          <source>Factory method for creating a previously exported context. The context properties will be determined from the input token and cannot be modified through the set methods.</source>
          <target state="translated">以前にエクスポートされたコンテキストを作成するためのファクトリーメソッド。コンテキストのプロパティは入力トークンから決定され、 set メソッドで変更することはできません。</target>
        </trans-unit>
        <trans-unit id="34a4daa46555468a55ee658adb59befff315365c" translate="yes" xml:space="preserve">
          <source>Factory method to convert a byte array containing a name from the specified namespace to a GSSName object and canonicalize it at the same time for a mechanism.</source>
          <target state="translated">指定された名前空間からの名前を含むバイト配列をGSSNameオブジェクトに変換し、機構のために同時に正規化するファクトリーメソッド。</target>
        </trans-unit>
        <trans-unit id="455f150ffe7026bdd624f54e66762e50e77a2cb9" translate="yes" xml:space="preserve">
          <source>Factory method to convert a byte array containing a name from the specified namespace to a GSSName object and canonicalize it at the same time for a mechanism. In other words, this method is a utility that does the equivalent of two steps: the &lt;a href=&quot;#createName(byte%5B%5D,org.ietf.jgss.Oid)&quot;&gt;&lt;code&gt;createName&lt;/code&gt;&lt;/a&gt; and then also &lt;a href=&quot;gssname#canonicalize(org.ietf.jgss.Oid)&quot;&gt;&lt;code&gt;GSSName.canonicalize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">名前を含むバイト配列を指定された名前空間からGSSNameオブジェクトに変換し、同時にメカニズムに対して正規化するファクトリメソッド。 ：他の言葉では、この方法は、2つのステップに相当しユーティリティで&lt;a href=&quot;#createName(byte%5B%5D,org.ietf.jgss.Oid)&quot;&gt; &lt;code&gt;createName&lt;/code&gt; &lt;/a&gt;次に、また&lt;a href=&quot;gssname#canonicalize(org.ietf.jgss.Oid)&quot;&gt; &lt;code&gt;GSSName.canonicalize&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="85de486d17845ad538bb2589cf77ae18afe290cc" translate="yes" xml:space="preserve">
          <source>Factory method to convert a byte array containing a name from the specified namespace to a GSSName object.</source>
          <target state="translated">指定された名前空間の名前を含むバイト配列をGSSNameオブジェクトに変換するファクトリーメソッド。</target>
        </trans-unit>
        <trans-unit id="e8db4bfdd025dda9a2a0afe788ef17d065301a82" translate="yes" xml:space="preserve">
          <source>Factory method to convert a byte array containing a name from the specified namespace to a GSSName object. In general, the &lt;code&gt;GSSName&lt;/code&gt; object created will contain multiple representations of the name, one for each mechanism that is supported; two examples that are exceptions to this are when the namespace type parameter indicates NT_EXPORT_NAME or when the GSS-API implementation is not multi-mechanism. The bytes that are passed in are interpreted by each underlying mechanism according to some encoding scheme of its choice for the given nametype.</source>
          <target state="translated">名前を含むバイト配列を指定された名前空間からGSSNameオブジェクトに変換するファクトリメソッド。一般に、作成される &lt;code&gt;GSSName&lt;/code&gt; オブジェクトには、サポートされているメカニズムごとに1つずつ、名前の複数の表現が含まれます。これの例外である2つの例は、名前空間タイプパラメータがNT_EXPORT_NAMEを示している場合、またはGSS-API実装がマルチメカニズムではない場合です。渡されるバイトは、指定された名前タイプに対して選択されたエンコードスキームに従って、基礎となる各メカニズムによって解釈されます。</target>
        </trans-unit>
        <trans-unit id="e97169ce5427a1a846906e8a7d9cd59919194e69" translate="yes" xml:space="preserve">
          <source>Factory method to convert a string name from the specified namespace to a GSSName object and canonicalize it at the same time for a mechanism.</source>
          <target state="translated">指定された名前空間の文字列名をGSSNameオブジェクトに変換し、同時に機構の正規化を行うファクトリーメソッドです。</target>
        </trans-unit>
        <trans-unit id="c50640e43294805df0ff51d5eb80fa3e5caa23ee" translate="yes" xml:space="preserve">
          <source>Factory method to convert a string name from the specified namespace to a GSSName object and canonicalize it at the same time for a mechanism. In other words, this method is a utility that does the equivalent of two steps: the &lt;a href=&quot;#createName(java.lang.String,org.ietf.jgss.Oid)&quot;&gt;&lt;code&gt;createName&lt;/code&gt;&lt;/a&gt; and then also the &lt;a href=&quot;gssname#canonicalize(org.ietf.jgss.Oid)&quot;&gt;&lt;code&gt;GSSName.canonicalize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列名を指定された名前空間からGSSNameオブジェクトに変換し、同時にメカニズムに対して正規化するファクトリメソッド。 ：他の言葉では、この方法は、2つのステップの等価を行うユーティリティで&lt;a href=&quot;#createName(java.lang.String,org.ietf.jgss.Oid)&quot;&gt; &lt;code&gt;createName&lt;/code&gt; &lt;/a&gt;、その後も&lt;a href=&quot;gssname#canonicalize(org.ietf.jgss.Oid)&quot;&gt; &lt;code&gt;GSSName.canonicalize&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e7ab30d09a883b60b571bf7df18cbe0e988e87e" translate="yes" xml:space="preserve">
          <source>Factory method to convert a string name from the specified namespace to a GSSName object.</source>
          <target state="translated">指定された名前空間の文字列名をGSSNameオブジェクトに変換するファクトリーメソッド。</target>
        </trans-unit>
        <trans-unit id="a345e5b0ed0690a35cd9a46a0161f5207270aadb" translate="yes" xml:space="preserve">
          <source>Factory method to convert a string name from the specified namespace to a GSSName object. In general, the &lt;code&gt;GSSName&lt;/code&gt; object created will contain multiple representations of the name, one for each mechanism that is supported; two examples that are exceptions to this are when the namespace type parameter indicates NT_EXPORT_NAME or when the GSS-API implementation is not multi-mechanism. It is not recommended to use this method with a NT_EXPORT_NAME type because representing a previously exported name consisting of arbitrary bytes as a String might cause problems with character encoding schemes. In such cases it is recommended that the bytes be passed in directly to the overloaded form of this method &lt;a href=&quot;#createName(byte%5B%5D,org.ietf.jgss.Oid)&quot;&gt;&lt;code&gt;createName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">文字列名を指定された名前空間からGSSNameオブジェクトに変換するファクトリメソッド。一般に、作成される &lt;code&gt;GSSName&lt;/code&gt; オブジェクトには、サポートされているメカニズムごとに1つずつ、名前の複数の表現が含まれます。これの例外である2つの例は、名前空間タイプパラメータがNT_EXPORT_NAMEを示している場合、またはGSS-API実装がマルチメカニズムではない場合です。 NT_EXPORT_NAMEタイプでこのメソッドを使用することはお勧めしません。これは、任意のバイトで構成される以前にエクスポートされた名前を文字列として表すと、文字エンコードスキームで問題が発生する可能性があるためです。このような場合、バイトをこのメソッド&lt;a href=&quot;#createName(byte%5B%5D,org.ietf.jgss.Oid)&quot;&gt; &lt;code&gt;createName&lt;/code&gt; の&lt;/a&gt;オーバーロードされた形式に直接渡すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c39f8972255524c6553280400693ac204b62da10" translate="yes" xml:space="preserve">
          <source>Factory method which creates the &lt;code&gt;JButton&lt;/code&gt; for &lt;code&gt;Action&lt;/code&gt;s added to the &lt;code&gt;JToolBar&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JToolBar&lt;/code&gt; に追加された &lt;code&gt;Action&lt;/code&gt; 用の &lt;code&gt;JButton&lt;/code&gt; を作成するファクトリメソッド。</target>
        </trans-unit>
        <trans-unit id="09440726a0bc16ae500cebb0f10b13585b9dd675" translate="yes" xml:space="preserve">
          <source>Factory method which creates the &lt;code&gt;JButton&lt;/code&gt; for &lt;code&gt;Action&lt;/code&gt;s added to the &lt;code&gt;JToolBar&lt;/code&gt;. The default name is empty if a &lt;code&gt;null&lt;/code&gt; action is passed.</source>
          <target state="translated">&lt;code&gt;JToolBar&lt;/code&gt; に追加された &lt;code&gt;Action&lt;/code&gt; 用の &lt;code&gt;JButton&lt;/code&gt; を作成するファクトリメソッド。 &lt;code&gt;null&lt;/code&gt; アクションが渡された場合、デフォルト名は空です。</target>
        </trans-unit>
        <trans-unit id="ea86adc372443a31c823bbddecf2454ef171578a" translate="yes" xml:space="preserve">
          <source>Factory method which creates the &lt;code&gt;JMenuItem&lt;/code&gt; for &lt;code&gt;Action&lt;/code&gt;s added to the &lt;code&gt;JMenu&lt;/code&gt;.</source>
          <target state="translated">生成するファクトリメソッド &lt;code&gt;JMenuItem&lt;/code&gt; するために &lt;code&gt;Action&lt;/code&gt; 秒に追加 &lt;code&gt;JMenu&lt;/code&gt; に。</target>
        </trans-unit>
        <trans-unit id="80f3c8417bc1234d7665a34e835e2401fdd0993d" translate="yes" xml:space="preserve">
          <source>Factory method which creates the &lt;code&gt;JMenuItem&lt;/code&gt; for &lt;code&gt;Actions&lt;/code&gt; added to the &lt;code&gt;JPopupMenu&lt;/code&gt;.</source>
          <target state="translated">生成するファクトリメソッド &lt;code&gt;JMenuItem&lt;/code&gt; のための &lt;code&gt;Actions&lt;/code&gt; に追加 &lt;code&gt;JPopupMenu&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c96c23938f0f83069de60ba60714be84e8ecea6" translate="yes" xml:space="preserve">
          <source>Factory methods for file systems.</source>
          <target state="translated">ファイルシステムのファクトリーメソッド</target>
        </trans-unit>
        <trans-unit id="bd5598721c62dba25f1fa025e19346b411718c2e" translate="yes" xml:space="preserve">
          <source>Factory methods for file systems. This class defines the &lt;a href=&quot;#getDefault()&quot;&gt;&lt;code&gt;getDefault&lt;/code&gt;&lt;/a&gt; method to get the default file system and factory methods to construct other types of file systems.</source>
          <target state="translated">ファイルシステムのファクトリメソッド。このクラスは、デフォルトのファイルシステムを取得するための&lt;a href=&quot;#getDefault()&quot;&gt; &lt;code&gt;getDefault&lt;/code&gt; &lt;/a&gt;メソッドと、他のタイプのファイルシステムを構築するためのファクトリメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="abd1303e6e95fe0db84cf20877f392889209bd93" translate="yes" xml:space="preserve">
          <source>Factory methods for file systems. This class defines the &lt;a href=&quot;filesystems#getDefault--&quot;&gt;&lt;code&gt;getDefault&lt;/code&gt;&lt;/a&gt; method to get the default file system and factory methods to construct other types of file systems.</source>
          <target state="translated">ファイルシステムのファクトリメソッド。このクラスは、デフォルトのファイルシステムを取得する&lt;a href=&quot;filesystems#getDefault--&quot;&gt; &lt;code&gt;getDefault&lt;/code&gt; &lt;/a&gt;メソッドと、他のタイプのファイルシステムを構築するファクトリメソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="1327289b9f99c2c883aac1bd81e54bdcc0e25a3c" translate="yes" xml:space="preserve">
          <source>Factory methods that produce or &lt;a href=&quot;methodhandles.lookup&quot;&gt;&lt;code&gt;lookup&lt;/code&gt;&lt;/a&gt; VarHandle instances document the set of access modes that are supported, which may also include documenting restrictions based on the variable type and whether a variable is read-only. If an access mode is not supported then the corresponding access mode method will on invocation throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. Factory methods should document any additional undeclared exceptions that may be thrown by access mode methods. The &lt;a href=&quot;#get(java.lang.Object...)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; access mode is supported for all VarHandle instances and the corresponding method never throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. If a VarHandle references a read-only variable (for example a &lt;code&gt;final&lt;/code&gt; field) then write, atomic update, numeric atomic update, and bitwise atomic update access modes are not supported and corresponding methods throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. Read/write access modes (if supported), with the exception of &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt;, provide atomic access for reference types and all primitive types. Unless stated otherwise in the documentation of a factory method, the access modes &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; (if supported) provide atomic access for reference types and all primitives types, with the exception of &lt;code&gt;long&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt; on 32-bit platforms.</source>
          <target state="translated">VarHandleインスタンスを生成または&lt;a href=&quot;methodhandles.lookup&quot;&gt; &lt;code&gt;lookup&lt;/code&gt; &lt;/a&gt;するファクトリメソッドは、サポートされているアクセスモードのセットを文書化します。これには、変数タイプおよび変数が読み取り専用かどうかに基づく制限の文書化も含まれる場合があります。アクセスモードがサポートされていない場合、対応するアクセスモードメソッドは呼び出し時に &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローします。ファクトリメソッドは、アクセスモードメソッドによってスローされる可能性のある、宣言されていない追加の例外を文書化する必要があります。&lt;a href=&quot;#get(java.lang.Object...)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;アクセス・モードは、すべてのVarHandleインスタンスのためにサポートされ、対応する方法が投げたことがない &lt;code&gt;UnsupportedOperationException&lt;/code&gt; が。 VarHandleが読み取り専用変数（たとえば、 &lt;code&gt;final&lt;/code&gt; )を参照する場合フィールド）次に、書き込み、アトミック更新、数値アトミック更新、およびビット単位のアトミック更新アクセスモードはサポートされておらず、対応するメソッドは &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローします。読み取り/書き込みアクセスモード（サポートされている場合）は、 &lt;code&gt;get&lt;/code&gt; と &lt;code&gt;set&lt;/code&gt; を除いて、参照型とすべてのプリミティブ型にアトミックアクセスを提供します。ファクトリメソッドのドキュメントで特に明記されていない限り、アクセスモード &lt;code&gt;get&lt;/code&gt; および &lt;code&gt;set&lt;/code&gt; （サポートされている場合）は、32ビットプラットフォームの &lt;code&gt;long&lt;/code&gt; および &lt;code&gt;double&lt;/code&gt; を除いて、参照型およびすべてのプリミティブ型にアトミックアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="e439c10bae753dabb4cbe9f327b99e55f5865b60" translate="yes" xml:space="preserve">
          <source>Factory methods that produce or &lt;a href=&quot;methodhandles.lookup&quot;&gt;&lt;code&gt;lookup&lt;/code&gt;&lt;/a&gt; VarHandle instances document the supported variable type and the list of coordinate types.</source>
          <target state="translated">VarHandleインスタンスを生成または&lt;a href=&quot;methodhandles.lookup&quot;&gt; &lt;code&gt;lookup&lt;/code&gt; &lt;/a&gt;するファクトリメソッドは、サポートされている変数タイプと座標タイプのリストを文書化します。</target>
        </trans-unit>
        <trans-unit id="1e4f1ec13cd0b93d00d18fdf65527469d054cacb" translate="yes" xml:space="preserve">
          <source>Factory methods which operate on groups of parameter types are systematically presented in two versions, so that both Java arrays and Java lists can be used to work with groups of parameter types. The query methods &lt;code&gt;parameterArray&lt;/code&gt; and &lt;code&gt;parameterList&lt;/code&gt; also provide a choice between arrays and lists.</source>
          <target state="translated">パラメータタイプのグループを操作するファクトリメソッドは2つのバージョンで体系的に示されているため、Java配列とJavaリストの両方を使用してパラメータタイプのグループを操作できます。クエリメソッド &lt;code&gt;parameterArray&lt;/code&gt; と &lt;code&gt;parameterList&lt;/code&gt; も、配列とリストのどちらかを選択できます。</target>
        </trans-unit>
        <trans-unit id="99ba248969f2cd4860530c7869531e5de9975881" translate="yes" xml:space="preserve">
          <source>Factory object that can vend Borders appropriate for the basic L &amp;amp; F.</source>
          <target state="translated">基本的なL＆Fに適したボーダーを販売できるファクトリオブジェクト。</target>
        </trans-unit>
        <trans-unit id="b19884d86abed79e9460a98f81a59734d23d59c9" translate="yes" xml:space="preserve">
          <source>Factory object that can vend Borders appropriate for the metal L &amp;amp; F.</source>
          <target state="translated">金属のL＆Fに適したボーダーを販売できるファクトリオブジェクト。</target>
        </trans-unit>
        <trans-unit id="c892ac32ed78cbae969ebaabfbc68894f107fe99" translate="yes" xml:space="preserve">
          <source>Factory object that can vend Icons appropriate for the basic L &amp;amp; F.</source>
          <target state="translated">基本的なL＆Fに適したアイコンを販売できるファクトリオブジェクト。</target>
        </trans-unit>
        <trans-unit id="3ab81a89cf046f6778c8b3282bed5b947ce29638" translate="yes" xml:space="preserve">
          <source>Factory object that vends &lt;code&gt;Icon&lt;/code&gt;s for the Java look and feel (Metal).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00503fdac1572d0180ed40819f1b667e5adac017" translate="yes" xml:space="preserve">
          <source>Factory object that vends &lt;code&gt;Icon&lt;/code&gt;s for the Java look and feel (Metal). These icons are used extensively in Metal via the defaults mechanism. While other look and feels often use GIFs for icons, creating icons in code facilitates switching to other themes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc98c708a0ca2eafbf4c66ad9152bb9a852e422" translate="yes" xml:space="preserve">
          <source>Factory object that vends &lt;code&gt;Icon&lt;/code&gt;s for the Java&amp;trade; look and feel (Metal).</source>
          <target state="translated">Java&amp;trade;ルックアンドフィール（メタル）の &lt;code&gt;Icon&lt;/code&gt; を販売するファクトリオブジェクト。</target>
        </trans-unit>
        <trans-unit id="7cefd6cb0d230817140d4d3aadfce004d0cc0a10" translate="yes" xml:space="preserve">
          <source>Factory object that vends &lt;code&gt;Icon&lt;/code&gt;s for the Java&amp;trade; look and feel (Metal). These icons are used extensively in Metal via the defaults mechanism. While other look and feels often use GIFs for icons, creating icons in code facilitates switching to other themes.</source>
          <target state="translated">Java&amp;trade;ルックアンドフィール（メタル）の &lt;code&gt;Icon&lt;/code&gt; を販売するファクトリオブジェクト。これらのアイコンは、デフォルトのメカニズムを介してMetalで広く使用されています。他のルックアンドフィールではアイコンにGIFが使用されることがよくありますが、コードでアイコンを作成すると、他のテーマへの切り替えが容易になります。</target>
        </trans-unit>
        <trans-unit id="ed7bf136cbccef67fc2b149074fc09e463022739" translate="yes" xml:space="preserve">
          <source>Factory that creates &lt;a href=&quot;javax/xml/validation/schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;javax/xml/validation/schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;オブジェクトを作成するファクトリ。</target>
        </trans-unit>
        <trans-unit id="eb911f1784d8b2ffb093f4c736e2c8c612d8f634" translate="yes" xml:space="preserve">
          <source>Factory that creates &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;オブジェクトを作成するファクトリ。</target>
        </trans-unit>
        <trans-unit id="cd1b6d951a17b453d0e05f935e0a6ced3ff2b587" translate="yes" xml:space="preserve">
          <source>Factory that creates &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; objects. Entry-point to the validation API.</source>
          <target state="translated">&lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;オブジェクトを作成するファクトリ。検証APIへのエントリポイント。</target>
        </trans-unit>
        <trans-unit id="33cf0859b4c663441a76e18c493d14bcec5592f9" translate="yes" xml:space="preserve">
          <source>Factory that creates &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt;を作成するファクトリ。</target>
        </trans-unit>
        <trans-unit id="97051fccd2fbe536dc2f1728b5ecf1fac3a81fd6" translate="yes" xml:space="preserve">
          <source>Factory that creates new &lt;code&gt;javax.xml.datatype&lt;/code&gt;&lt;code&gt;Object&lt;/code&gt;s that map XML to/from Java &lt;code&gt;Object&lt;/code&gt;s.</source>
          <target state="translated">XMLをJava &lt;code&gt;Object&lt;/code&gt; との間でマップする新しい &lt;code&gt;javax.xml.datatype&lt;/code&gt; &lt;code&gt;Object&lt;/code&gt; を作成するファクトリ。</target>
        </trans-unit>
        <trans-unit id="459479f88a8396470fbd1bc6140ee09fc1957d7f" translate="yes" xml:space="preserve">
          <source>Factory to create &lt;code&gt;Path&lt;/code&gt; objects from strings.</source>
          <target state="translated">文字列から &lt;code&gt;Path&lt;/code&gt; オブジェクトを作成するファクトリ。</target>
        </trans-unit>
        <trans-unit id="85435aa32eaf27575b6e1536f21033ac19f7c099" translate="yes" xml:space="preserve">
          <source>Factory to create JMX API connector clients.</source>
          <target state="translated">JMX APIのコネクタクライアントを作成するための工場です。</target>
        </trans-unit>
        <trans-unit id="3c92bec3496d24ffe4e2787fce03596458f68f4f" translate="yes" xml:space="preserve">
          <source>Factory to create JMX API connector clients. There are no instances of this class.</source>
          <target state="translated">JMX APIコネクタクライアントを作成するためのファクトリーです。このクラスのインスタンスはありません。</target>
        </trans-unit>
        <trans-unit id="97685ffe76d3d368ca5300130813f2a0aa3f00d9" translate="yes" xml:space="preserve">
          <source>Factory to create JMX API connector servers.</source>
          <target state="translated">JMX APIのコネクタサーバを作成するための工場です。</target>
        </trans-unit>
        <trans-unit id="26350ba73d3ff654c969b238d9fcfd9ded08680d" translate="yes" xml:space="preserve">
          <source>Factory to create JMX API connector servers. There are no instances of this class.</source>
          <target state="translated">JMX APIコネクタサーバを作成するためのファクトリーです。このクラスのインスタンスはありません。</target>
        </trans-unit>
        <trans-unit id="7c46b25015eb17c684edcdd89514bae54bc30df1" translate="yes" xml:space="preserve">
          <source>Factory to obtain implementations</source>
          <target state="translated">実装を取得するための工場</target>
        </trans-unit>
        <trans-unit id="fe2dc26c7101763131bf8667bc6550c1f8a54e43" translate="yes" xml:space="preserve">
          <source>Factory used for obtaining &lt;code&gt;SynthStyle&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SynthStyle&lt;/code&gt; の取得に使用されるファクトリ。</target>
        </trans-unit>
        <trans-unit id="98e24f9dd356399f59bbab6c0e307535faac0f0e" translate="yes" xml:space="preserve">
          <source>Factory used for obtaining &lt;code&gt;SynthStyle&lt;/code&gt;s. Each of the Synth &lt;code&gt;ComponentUI&lt;/code&gt;s will call into the current &lt;code&gt;SynthStyleFactory&lt;/code&gt; to obtain a &lt;code&gt;SynthStyle&lt;/code&gt; for each of the distinct regions they have.</source>
          <target state="translated">&lt;code&gt;SynthStyle&lt;/code&gt; の取得に使用されるファクトリ。シンセの各 &lt;code&gt;ComponentUI&lt;/code&gt; Sは電流にコールする &lt;code&gt;SynthStyleFactory&lt;/code&gt; 得ることが &lt;code&gt;SynthStyle&lt;/code&gt; の彼らが持っている別個の領域のそれぞれについての。</target>
        </trans-unit>
        <trans-unit id="6cc16c4a6d4314b770be0a23be92eed9ff4e7e4d" translate="yes" xml:space="preserve">
          <source>FactoryConfigurationError</source>
          <target state="translated">FactoryConfigurationError</target>
        </trans-unit>
        <trans-unit id="a93896b2c55526a400224ee9136fedbd7af6b127" translate="yes" xml:space="preserve">
          <source>Fahrvergn&amp;uuml;gen</source>
          <target state="translated">Fahrvergn&amp;uuml;gen</target>
        </trans-unit>
        <trans-unit id="931d30fa7d3b5c9c3acefed1b93ce8d985c6ebd8" translate="yes" xml:space="preserve">
          <source>FailOverExecutionControlProvider</source>
          <target state="translated">FailOverExecutionControlProvider</target>
        </trans-unit>
        <trans-unit id="f8ea87b3955d21b2d1d24a329289fef48c8afdf6" translate="yes" xml:space="preserve">
          <source>FailedLoginException</source>
          <target state="translated">FailedLoginException</target>
        </trans-unit>
        <trans-unit id="ed4f77d664695b035666c01b4bcbf2970afbf213" translate="yes" xml:space="preserve">
          <source>Failing that, this implementation tries to locate a suitable &lt;code&gt;InitialContextFactory&lt;/code&gt; using a built-in mechanism</source>
          <target state="translated">これに失敗すると、この実装は組み込みのメカニズムを使用して適切な &lt;code&gt;InitialContextFactory&lt;/code&gt; を見つけようとします</target>
        </trans-unit>
        <trans-unit id="e18a893d67e7b2718f02e924e9293028b031ba27" translate="yes" xml:space="preserve">
          <source>Failing that, this method tries to load a content handler class as defined by &lt;a href=&quot;contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt;. If the class does not exist, or is not a subclass of &lt;code&gt;
     ContentHandler&lt;/code&gt;, then an &lt;code&gt;UnknownServiceException&lt;/code&gt; is thrown.</source>
          <target state="translated">これに失敗すると、このメソッドは&lt;a href=&quot;contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; で&lt;/a&gt;定義されているコンテンツハンドラークラスを読み込もうとします。クラスが存在しない、またはのサブクラスではないない場合 &lt;code&gt; ContentHandler&lt;/code&gt; 、その後 &lt;code&gt;UnknownServiceException&lt;/code&gt; スローされます。</target>
        </trans-unit>
        <trans-unit id="1656649117e437fcfba93420c2b3f76dd76878b7" translate="yes" xml:space="preserve">
          <source>Failure</source>
          <target state="translated">Failure</target>
        </trans-unit>
        <trans-unit id="010cf2690a42c4202fc45629d30f3afe1fbdb069" translate="yes" xml:space="preserve">
          <source>Failure means the authentication has completed, but has failed due to invalid credentials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae214ce87b6e3a85c74fbf5d46f30413ae40b2c" translate="yes" xml:space="preserve">
          <source>Failure to do this will not cause an error, and the buffer size may be set to the requested value but the TCP receive window in sockets accepted from this ServerSocket will be no larger than 64K bytes.</source>
          <target state="translated">これに失敗してもエラーは発生せず、バッファサイズは要求された値に設定されますが、このServerSocketから受け入れられたソケットのTCP受信ウィンドウは64Kバイト以下になります。</target>
        </trans-unit>
        <trans-unit id="af739e7394faf57b49ca8ef9228f8a7da24e9bf3" translate="yes" xml:space="preserve">
          <source>Failure to follow this advice may result in non-deterministic behavior.</source>
          <target state="translated">このアドバイスに従わないと、非決定論的な行動になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="97cdbdc7feff827efb082a6b6dd2727237cd49fd" translate="yes" xml:space="preserve">
          <source>False</source>
          <target state="translated">False</target>
        </trans-unit>
        <trans-unit id="58a0234c91616a2d9e15f54ac04eb0b032c3f0a1" translate="yes" xml:space="preserve">
          <source>False assumptions causing bugs in multi-calendar system code</source>
          <target state="translated">マルチカレンダーシステムのコードでバグを引き起こす誤った仮定</target>
        </trans-unit>
        <trans-unit id="4efb6cb7c018f0c686d4e9d68b615950223b4dd1" translate="yes" xml:space="preserve">
          <source>Family</source>
          <target state="translated">Family</target>
        </trans-unit>
        <trans-unit id="97123d91d425e49ae64853f34a2e8da0dbdc57f5" translate="yes" xml:space="preserve">
          <source>FaxTIFFTagSet</source>
          <target state="translated">FaxTIFFTagSet</target>
        </trans-unit>
        <trans-unit id="ad565d9d01d0e0bf91fd6a8532f6d81613338901" translate="yes" xml:space="preserve">
          <source>Feature</source>
          <target state="translated">Feature</target>
        </trans-unit>
        <trans-unit id="ff81c8e9218bbb75ed19ee88cd86efb437e4ac2a" translate="yes" xml:space="preserve">
          <source>Feature ID</source>
          <target state="translated">機能ID</target>
        </trans-unit>
        <trans-unit id="b8a3b3ef9e439fbf7ffa816079405005478fb68e" translate="yes" xml:space="preserve">
          <source>Feature can be used to control the way a &lt;a href=&quot;validator&quot;&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;/a&gt; parses schemas, although &lt;a href=&quot;validator&quot;&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;/a&gt;s are not required to recognize any specific feature names.</source>
          <target state="translated">機能は、道を制御するために使用することができ&lt;a href=&quot;validator&quot;&gt; &lt;code&gt;Validator&lt;/code&gt; が&lt;/a&gt;あるが、スキーマを解析する&lt;a href=&quot;validator&quot;&gt; &lt;code&gt;Validator&lt;/code&gt; &lt;/a&gt;sは任意の特定の機能名を認識する必要はありません。</target>
        </trans-unit>
        <trans-unit id="1db47ff5dab935266c5269b6b10ecc69ed7404ce" translate="yes" xml:space="preserve">
          <source>Feature can be used to control the way a &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; parses schemas. The feature name is any fully-qualified URI. It is possible for a &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; to expose a feature value but to be unable to change the current value. Some feature values may be immutable or mutable only in specific contexts, such as before, during, or after a validation.</source>
          <target state="translated">機能を使用して、&lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; が&lt;/a&gt;スキーマを解析する方法を制御できます。機能名は完全修飾URIです。&lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt;が機能値を公開することは可能ですが、現在の値を変更することはできません。一部の特徴値は、検証前、検証中、検証後など、特定のコンテキストでのみ不変または可変である場合があります。</target>
        </trans-unit>
        <trans-unit id="ceebcc6cfc2ac60e65e42f9d5d97f3f77da6f8ab" translate="yes" xml:space="preserve">
          <source>Feature for secure processing.</source>
          <target state="translated">安心して処理できる機能。</target>
        </trans-unit>
        <trans-unit id="aa8c3c22ec74c61b4ecc5b591875a9968a6d0fff" translate="yes" xml:space="preserve">
          <source>Feature name.</source>
          <target state="translated">機能名。</target>
        </trans-unit>
        <trans-unit id="8e74b0bce4e88188ba68b67c5e037d1658ad580c" translate="yes" xml:space="preserve">
          <source>Feature name. Table tag &quot;feat&quot; in the Open Type Specification.</source>
          <target state="translated">フィーチャー名。オープン型仕様のテーブルタグ &quot;feat&quot;。</target>
        </trans-unit>
        <trans-unit id="db3e695982b21bc27245da75b08c7640c54de02e" translate="yes" xml:space="preserve">
          <source>Feature names are fully qualified &lt;a href=&quot;../../../../java.base/java/net/uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;s. Implementations may define their own features. &lt;code&gt;false&lt;/code&gt; is returned if this &lt;code&gt;TransformerFactory&lt;/code&gt; or the &lt;code&gt;Transformer&lt;/code&gt;s or &lt;code&gt;Template&lt;/code&gt;s it creates cannot support the feature. It is possible for an &lt;code&gt;TransformerFactory&lt;/code&gt; to expose a feature value but be unable to change its state.</source>
          <target state="translated">機能名は完全修飾&lt;a href=&quot;../../../../java.base/java/net/uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;です。実装は独自の機能を定義する場合があります。この &lt;code&gt;TransformerFactory&lt;/code&gt; またはそれが作成する &lt;code&gt;Transformer&lt;/code&gt; または &lt;code&gt;Template&lt;/code&gt; が機能をサポートできない場合、 &lt;code&gt;false&lt;/code&gt; が返されます。 &lt;code&gt;TransformerFactory&lt;/code&gt; が機能値を公開しても、その状態を変更できない可能性があります。</target>
        </trans-unit>
        <trans-unit id="ffe2cfff124e44d13508d0b8c118510e3bc19607" translate="yes" xml:space="preserve">
          <source>Feature names are fully qualified &lt;a href=&quot;../../../../java.base/java/net/uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;s. Implementations may define their own features. A &lt;a href=&quot;parserconfigurationexception&quot;&gt;&lt;code&gt;ParserConfigurationException&lt;/code&gt;&lt;/a&gt; is thrown if this &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; or the &lt;code&gt;DocumentBuilder&lt;/code&gt;s it creates cannot support the feature. It is possible for a &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; to expose a feature value but be unable to change its state.</source>
          <target state="translated">機能名は完全修飾&lt;a href=&quot;../../../../java.base/java/net/uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;です。実装は独自の機能を定義する場合があります。 A &lt;a href=&quot;parserconfigurationexception&quot;&gt; &lt;code&gt;ParserConfigurationException&lt;/code&gt; が&lt;/a&gt;、この場合にスローされ &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; または &lt;code&gt;DocumentBuilder&lt;/code&gt; のは、それが機能をサポートすることはできません作成されますよ。 &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; が機能値を公開しても、その状態を変更できない可能性があります。</target>
        </trans-unit>
        <trans-unit id="c1334c042d3fc0ab4560eb022918ed964bce262a" translate="yes" xml:space="preserve">
          <source>Feature names are fully qualified &lt;a href=&quot;../../../../java.base/java/net/uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;s. Implementations may define their own features. An &lt;a href=&quot;parserconfigurationexception&quot;&gt;&lt;code&gt;ParserConfigurationException&lt;/code&gt;&lt;/a&gt; is thrown if this &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; or the &lt;code&gt;DocumentBuilder&lt;/code&gt;s it creates cannot support the feature. It is possible for an &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; to expose a feature value but be unable to change its state.</source>
          <target state="translated">機能名は完全修飾&lt;a href=&quot;../../../../java.base/java/net/uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;です。実装は独自の機能を定義する場合があります。アン&lt;a href=&quot;parserconfigurationexception&quot;&gt; &lt;code&gt;ParserConfigurationException&lt;/code&gt; が&lt;/a&gt;、この場合にスローされ &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; または &lt;code&gt;DocumentBuilder&lt;/code&gt; のは、それが機能をサポートすることはできません作成されますよ。 &lt;code&gt;DocumentBuilderFactory&lt;/code&gt; が機能値を公開しても、その状態を変更できない可能性があります。</target>
        </trans-unit>
        <trans-unit id="5f0d5edf28ff5907a3290ee8732cebd9c73f8615" translate="yes" xml:space="preserve">
          <source>Feature names are fully qualified &lt;a href=&quot;../../../../java.base/java/net/uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;s. Implementations may define their own features. An &lt;a href=&quot;transformerconfigurationexception&quot;&gt;&lt;code&gt;TransformerConfigurationException&lt;/code&gt;&lt;/a&gt; is thrown if this &lt;code&gt;TransformerFactory&lt;/code&gt; or the &lt;code&gt;Transformer&lt;/code&gt;s or &lt;code&gt;Template&lt;/code&gt;s it creates cannot support the feature. It is possible for an &lt;code&gt;TransformerFactory&lt;/code&gt; to expose a feature value but be unable to change its state.</source>
          <target state="translated">機能名は完全修飾&lt;a href=&quot;../../../../java.base/java/net/uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;です。実装は独自の機能を定義する場合があります。&lt;a href=&quot;transformerconfigurationexception&quot;&gt; &lt;code&gt;TransformerConfigurationException&lt;/code&gt; がが&lt;/a&gt;、この場合にスローされる &lt;code&gt;TransformerFactory&lt;/code&gt; または &lt;code&gt;Transformer&lt;/code&gt; 秒または &lt;code&gt;Template&lt;/code&gt; 、それが機能をサポートすることはできません作成されますよ。 &lt;code&gt;TransformerFactory&lt;/code&gt; が機能値を公開しても、その状態を変更できない可能性があります。</target>
        </trans-unit>
        <trans-unit id="eb8d111db4743a0c16bff55baa6edf7622bad26b" translate="yes" xml:space="preserve">
          <source>Feature names are fully qualified &lt;a href=&quot;../../../../java.base/java/net/uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;s. Implementations may define their own features. An &lt;a href=&quot;xpathfactoryconfigurationexception&quot;&gt;&lt;code&gt;XPathFactoryConfigurationException&lt;/code&gt;&lt;/a&gt; is thrown if this &lt;code&gt;XPathFactory&lt;/code&gt; or the &lt;code&gt;XPath&lt;/code&gt;s it creates cannot support the feature. It is possible for an &lt;code&gt;XPathFactory&lt;/code&gt; to expose a feature value but be unable to change its state.</source>
          <target state="translated">機能名は完全修飾&lt;a href=&quot;../../../../java.base/java/net/uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;です。実装は独自の機能を定義する場合があります。アン&lt;a href=&quot;xpathfactoryconfigurationexception&quot;&gt; &lt;code&gt;XPathFactoryConfigurationException&lt;/code&gt; が&lt;/a&gt;、この場合にスローされ &lt;code&gt;XPathFactory&lt;/code&gt; または &lt;code&gt;XPath&lt;/code&gt; はそれが機能をサポートすることはできません作成されますよ。 &lt;code&gt;XPathFactory&lt;/code&gt; が機能値を公開しても、その状態を変更できない可能性があります。</target>
        </trans-unit>
        <trans-unit id="0f0734d52884dd3e30cc1f93c0fcd728b9d2fa3b" translate="yes" xml:space="preserve">
          <source>Feature: useCatalog</source>
          <target state="translated">機能:useCatalog</target>
        </trans-unit>
        <trans-unit id="a89680b108559a41fa9772cb39f5a47431bbd931" translate="yes" xml:space="preserve">
          <source>FeatureDescriptor</source>
          <target state="translated">FeatureDescriptor</target>
        </trans-unit>
        <trans-unit id="ea440a6db84441cbffd406acdf221f816eb39814" translate="yes" xml:space="preserve">
          <source>FeatureDescriptor.attributeNames()</source>
          <target state="translated">FeatureDescriptor.attributeNames()</target>
        </trans-unit>
        <trans-unit id="ee956f63a7262ab0c5ce1b69d4edd02732940a84" translate="yes" xml:space="preserve">
          <source>FeatureDescriptor.getDisplayName()</source>
          <target state="translated">FeatureDescriptor.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="37689ed03969e60862a62bac9e4010d22e31844f" translate="yes" xml:space="preserve">
          <source>FeatureDescriptor.getName()</source>
          <target state="translated">FeatureDescriptor.getName()</target>
        </trans-unit>
        <trans-unit id="fbf5a46bc580cdc65051df28d4997017fe4980f6" translate="yes" xml:space="preserve">
          <source>FeatureDescriptor.getShortDescription()</source>
          <target state="translated">FeatureDescriptor.getShortDescription()</target>
        </trans-unit>
        <trans-unit id="44b4b5331eaf9683af05ebce1a47dc1775772058" translate="yes" xml:space="preserve">
          <source>FeatureDescriptor.getValue()</source>
          <target state="translated">FeatureDescriptor.getValue()</target>
        </trans-unit>
        <trans-unit id="125f0b8174e43cd0819c118b816135d9bf094e04" translate="yes" xml:space="preserve">
          <source>FeatureDescriptor.isExpert()</source>
          <target state="translated">FeatureDescriptor.isExpert()</target>
        </trans-unit>
        <trans-unit id="1db7cbba110761e6ec76250a11f0a193051c10fb" translate="yes" xml:space="preserve">
          <source>FeatureDescriptor.isHidden()</source>
          <target state="translated">FeatureDescriptor.isHidden()</target>
        </trans-unit>
        <trans-unit id="1d501b571ed90baa8525a75cb7948d42c600401a" translate="yes" xml:space="preserve">
          <source>FeatureDescriptor.isPreferred()</source>
          <target state="translated">FeatureDescriptor.isPreferred()</target>
        </trans-unit>
        <trans-unit id="5902d3ece7d6cf741e4b9112edfbec4ce729e01b" translate="yes" xml:space="preserve">
          <source>FeatureDescriptor.setDisplayName()</source>
          <target state="translated">FeatureDescriptor.setDisplayName()</target>
        </trans-unit>
        <trans-unit id="fa1d2b09177003927864e2f394357c54fe319f37" translate="yes" xml:space="preserve">
          <source>FeatureDescriptor.setExpert()</source>
          <target state="translated">FeatureDescriptor.setExpert()</target>
        </trans-unit>
        <trans-unit id="0cd8fde238ead7edb70d6fcf2a5e315611058940" translate="yes" xml:space="preserve">
          <source>FeatureDescriptor.setHidden()</source>
          <target state="translated">FeatureDescriptor.setHidden()</target>
        </trans-unit>
        <trans-unit id="d03c27bc23394d41cac6570f876e4ab2fc5a4841" translate="yes" xml:space="preserve">
          <source>FeatureDescriptor.setName()</source>
          <target state="translated">FeatureDescriptor.setName()</target>
        </trans-unit>
        <trans-unit id="8c041557caea5e3505ccab62c7a3a06f6c0cdd8d" translate="yes" xml:space="preserve">
          <source>FeatureDescriptor.setPreferred()</source>
          <target state="translated">FeatureDescriptor.setPreferred()</target>
        </trans-unit>
        <trans-unit id="a785bbba752b86108232f9013b90708c411256b8" translate="yes" xml:space="preserve">
          <source>FeatureDescriptor.setShortDescription()</source>
          <target state="translated">FeatureDescriptor.setShortDescription()</target>
        </trans-unit>
        <trans-unit id="3ad621267ec980273608af20836df8cf9e1941bd" translate="yes" xml:space="preserve">
          <source>FeatureDescriptor.setValue()</source>
          <target state="translated">FeatureDescriptor.setValue()</target>
        </trans-unit>
        <trans-unit id="664b4657610704d6da4cbe28e6853a3430556a38" translate="yes" xml:space="preserve">
          <source>FeatureDescriptor.toString()</source>
          <target state="translated">FeatureDescriptor.toString()</target>
        </trans-unit>
        <trans-unit id="364b2404d7a2f5ce9237228e89d4f495c4d51bb2" translate="yes" xml:space="preserve">
          <source>Features and properties can be set through the catalog file, the Catalog API, system properties, and &lt;code&gt;jaxp.properties&lt;/code&gt;, with a preference in the same order.</source>
          <target state="translated">機能とプロパティは、カタログファイル、カタログAPI、システムプロパティ、および &lt;code&gt;jaxp.properties&lt;/code&gt; を介して、同じ順序で設定できます。</target>
        </trans-unit>
        <trans-unit id="e4cad2557aaa66d3cee76ec7bb8c51b94fa1f251" translate="yes" xml:space="preserve">
          <source>Features in &lt;code&gt;BaseRowSet&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;BaseRowSet&lt;/code&gt; の機能</target>
        </trans-unit>
        <trans-unit id="e22cf1c7bfec7b3baab57ac3c03ef16acccd3194" translate="yes" xml:space="preserve">
          <source>February has 28 days in a standard year and 29 days in a leap year. April, June, September and November have 30 days. All other months have 31 days.</source>
          <target state="translated">2月は標準年で28日、うるう年で29日。4月、6月、9月、11月は30日。それ以外の月はすべて31日です。</target>
        </trans-unit>
        <trans-unit id="4a95929711ca10b18bfe3f5f1df12c9236d0750a" translate="yes" xml:space="preserve">
          <source>February has a maximum length of 29 days. April, June, September and November have 30 days. All other months have 31 days.</source>
          <target state="translated">2月は最長で29日。4月、6月、9月、11月は30日。それ以外の月は31日です。</target>
        </trans-unit>
        <trans-unit id="9e6d6914b59702b93632883531863e2b2b54c171" translate="yes" xml:space="preserve">
          <source>February has a minimum length of 28 days. April, June, September and November have 30 days. All other months have 31 days.</source>
          <target state="translated">2月は最短で28日。4月、6月、9月、11月は30日。他のすべての月は31日です。</target>
        </trans-unit>
        <trans-unit id="2d69a52f3a93cab335392867cb1b4c5a42c1bf13" translate="yes" xml:space="preserve">
          <source>Federal Information Processing Standards Publication (FIPS PUB) 186: Digital Signature Standard (DSS)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493331a5fb5b7c6d821b9a85d6832bac3a8f7a91" translate="yes" xml:space="preserve">
          <source>Federal Information Processing Standards Publication (FIPS PUB) 46-2: Data Encryption Standard (DES)</source>
          <target state="translated">連邦情報処理標準公開(FIPS PUB)46-2:データ暗号化標準(DES)</target>
        </trans-unit>
        <trans-unit id="71c957f2538013269ee73e6ac099a0d5630db044" translate="yes" xml:space="preserve">
          <source>Feed direction resolution.</source>
          <target state="translated">送り方向の分解能。</target>
        </trans-unit>
        <trans-unit id="1c9bb110aeb9cb6d6403da495cbf55b1a1a273e6" translate="yes" xml:space="preserve">
          <source>Fetch a &lt;code&gt;Graphics&lt;/code&gt; for rendering.</source>
          <target state="translated">レンダリング用の &lt;code&gt;Graphics&lt;/code&gt; をフェッチします。</target>
        </trans-unit>
        <trans-unit id="ad55819bd5d9bf681d999961f35428fb50cc1699" translate="yes" xml:space="preserve">
          <source>Fetch a &lt;code&gt;Graphics&lt;/code&gt; for rendering. This can be used to determine font characteristics, and will be different for a print view than a component view.</source>
          <target state="translated">レンダリング用の &lt;code&gt;Graphics&lt;/code&gt; をフェッチします。これはフォントの特性を決定するために使用でき、印刷ビューとコンポーネントビューでは異なります。</target>
        </trans-unit>
        <trans-unit id="9d3ac660cc1193ffd3d3d706cc67e6835054f5de" translate="yes" xml:space="preserve">
          <source>Fetch a factory that is suitable for producing views of any models that are produced by this kit.</source>
          <target state="translated">このキットで生産されるあらゆるモデルのビューを生産するのに適した工場を取得します。</target>
        </trans-unit>
        <trans-unit id="a9ebd67946c7a9d76fc4621483dc5e0714a806bd" translate="yes" xml:space="preserve">
          <source>Fetch a reference to the text that occupies the given range.</source>
          <target state="translated">与えられた範囲を占めるテキストへの参照を取得します。</target>
        </trans-unit>
        <trans-unit id="f2d7f1b6d78bc1e15002739bc2d04530234d8207" translate="yes" xml:space="preserve">
          <source>Fetch a reference to the text that occupies the given range. This is normally used by the GlyphPainter to determine what characters it should render glyphs for.</source>
          <target state="translated">与えられた範囲を占めるテキストへの参照を取得します。これは通常、GlyphPainterがどのような文字に対してグリフをレンダリングすべきかを決定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="8f091684346f570e5abb95957c6c851a571a2467" translate="yes" xml:space="preserve">
          <source>Fetch the TabExpander to use if tabs are present in this view.</source>
          <target state="translated">このビューにタブがある場合に使用する TabExpander を取得します。</target>
        </trans-unit>
        <trans-unit id="5002f6efdcf97a7eb5a8684621226749dc651f9a" translate="yes" xml:space="preserve">
          <source>Fetch the allocation to use for a child view.</source>
          <target state="translated">子ビューに使用するアロケーションを取得します。</target>
        </trans-unit>
        <trans-unit id="0f5da8e78a4ee1b77ba7bc90a801492e5078e78b" translate="yes" xml:space="preserve">
          <source>Fetch the allocation to use for a child view. &lt;em&gt;This does not update the offsets in the ChildState records.&lt;/em&gt;</source>
          <target state="translated">Fetch the allocation to use for a child view. &lt;em&gt;This does not update the offsets in the ChildState records.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c7b483ae1d3789fc09465394de82b05eb4272ebb" translate="yes" xml:space="preserve">
          <source>Fetch the allocation to use for a child view. This will update the offsets for all children not yet updated before the given index.</source>
          <target state="translated">子ビューに使用するアロケーションを取得します。これは、指定されたインデックスの前にまだ更新されていないすべての子のオフセットを更新します。</target>
        </trans-unit>
        <trans-unit id="a667d4028f60bb2150cede2c55bd0974787983a9" translate="yes" xml:space="preserve">
          <source>Fetch the attributes associated with this option.</source>
          <target state="translated">このオプションに関連付けられた属性を取得します。</target>
        </trans-unit>
        <trans-unit id="c581af1cbe5fc321bef5cceed25a9870e63903b0" translate="yes" xml:space="preserve">
          <source>Fetch the background color to use to render the glyphs.</source>
          <target state="translated">グリフのレンダリングに使用する背景色を取得します。</target>
        </trans-unit>
        <trans-unit id="6585bc1a65c19c089a724a5216d04505ecf40a22" translate="yes" xml:space="preserve">
          <source>Fetch the background color to use to render the glyphs. If there is no background color, null should be returned. This is implemented to call &lt;code&gt;StyledDocument.getBackground&lt;/code&gt; if the associated document is a styled document, otherwise it returns null.</source>
          <target state="translated">Fetch the background color to use to render the glyphs. If there is no background color, null should be returned. This is implemented to call &lt;code&gt;StyledDocument.getBackground&lt;/code&gt; if the associated document is a styled document, otherwise it returns null.</target>
        </trans-unit>
        <trans-unit id="fde71672c44b6a524f804709aac7904c0095348b" translate="yes" xml:space="preserve">
          <source>Fetch the child view this record represents.</source>
          <target state="translated">このレコードが表す子ビューを取得します。</target>
        </trans-unit>
        <trans-unit id="7e11209c0bc6b12d4cee08e8f313602a076ae3e1" translate="yes" xml:space="preserve">
          <source>Fetch the component associated with the view.</source>
          <target state="translated">ビューに関連付けられたコンポーネントを取得します。</target>
        </trans-unit>
        <trans-unit id="77f458e98294bf37bfc5bc2bd6d8984aaddd124e" translate="yes" xml:space="preserve">
          <source>Fetch the configured java command options.</source>
          <target state="translated">構成されたjavaコマンドオプションを取得します。</target>
        </trans-unit>
        <trans-unit id="8c889a4b2adcc93d8d310fd7ac08eac2c663997f" translate="yes" xml:space="preserve">
          <source>Fetch the configured path-qualified java command name.</source>
          <target state="translated">構成されたパス修飾された java コマンド名を取得します。</target>
        </trans-unit>
        <trans-unit id="0454fa8e049827e4d970b034aeaf6345612c17cc" translate="yes" xml:space="preserve">
          <source>Fetch the constraining span to flow against for the given child index.</source>
          <target state="translated">指定された子インデックスに対してフローする制約スパンを取得します。</target>
        </trans-unit>
        <trans-unit id="c09f2269f705156ba3bb600a40097d6c85b797e0" translate="yes" xml:space="preserve">
          <source>Fetch the constraining span to flow against for the given child index. This is called by the FlowStrategy while it is updating the flow. A flow can be shaped by providing different values for the row constraints. By default, the entire span inside of the insets along the flow axis is returned.</source>
          <target state="translated">指定された子インデックスに対してフローする制約スパンを取得します。これは FlowStrategy がフローを更新している間に呼び出されます。行制約に異なる値を指定することで、フローを整形することができます。既定では、フロー軸に沿ったインセットの内側のスパン全体が返されます。</target>
        </trans-unit>
        <trans-unit id="f10be7705b3ac6fe920dfb76745c3cab4aba4058" translate="yes" xml:space="preserve">
          <source>Fetch the currently installed glyph painter.</source>
          <target state="translated">現在インストールされているグリフペインターを取得します。</target>
        </trans-unit>
        <trans-unit id="ffdaedeec9e274f6db2fc465fc7e079f72918baf" translate="yes" xml:space="preserve">
          <source>Fetch the currently installed glyph painter. If a painter has not yet been installed, and a default was not yet needed, null is returned.</source>
          <target state="translated">現在インストールされているグリフペインターを取得します。ペインタがまだインストールされておらず、デフォルトがまだ必要とされていない場合は、null が返されます。</target>
        </trans-unit>
        <trans-unit id="0dd01dc51b74b266287a80b7983978e4f790c62b" translate="yes" xml:space="preserve">
          <source>Fetch the default layout queue.</source>
          <target state="translated">デフォルトのレイアウトキューを取得します。</target>
        </trans-unit>
        <trans-unit id="f3442f20739fac38c439f7dbada102c15f900923" translate="yes" xml:space="preserve">
          <source>Fetch the default value for the attribute.</source>
          <target state="translated">属性のデフォルト値を取得します。</target>
        </trans-unit>
        <trans-unit id="d2eb2572bacf2631f3d54cb1e0bcb36d6ca80389" translate="yes" xml:space="preserve">
          <source>Fetch the default value for the attribute. If there is no default value (such as for composite attributes), null will be returned.</source>
          <target state="translated">属性のデフォルト値を取得します。デフォルト値がない場合(複合属性の場合など)は、nullが返されます。</target>
        </trans-unit>
        <trans-unit id="51f177729ab4ce706f124cd85184df6da322259c" translate="yes" xml:space="preserve">
          <source>Fetch the font that the glyphs should be based upon.</source>
          <target state="translated">グリフの基になるべきフォントを取得します。</target>
        </trans-unit>
        <trans-unit id="2f99c8cb759b5fdc6685c88209590721b50211d1" translate="yes" xml:space="preserve">
          <source>Fetch the font that the glyphs should be based upon. This is implemented to call &lt;code&gt;StyledDocument.getFont&lt;/code&gt; if the associated document is a StyledDocument. If the associated document is not a StyledDocument, the associated components font is used. If there is no associated component, null is returned.</source>
          <target state="translated">Fetch the font that the glyphs should be based upon. This is implemented to call &lt;code&gt;StyledDocument.getFont&lt;/code&gt; if the associated document is a StyledDocument. If the associated document is not a StyledDocument, the associated components font is used. If there is no associated component, null is returned.</target>
        </trans-unit>
        <trans-unit id="d53bc74ab170cd9c8f02eb5dca956ce7aad7da6f" translate="yes" xml:space="preserve">
          <source>Fetch the foreground color to use to render the glyphs.</source>
          <target state="translated">グリフのレンダリングに使用する前景色を取得します。</target>
        </trans-unit>
        <trans-unit id="9e74f60f65374053bab64e0787f528c80b4680fd" translate="yes" xml:space="preserve">
          <source>Fetch the foreground color to use to render the glyphs. If there is no foreground color, null should be returned. This is implemented to call &lt;code&gt;StyledDocument.getBackground&lt;/code&gt; if the associated document is a StyledDocument. If the associated document is not a StyledDocument, the associated components foreground color is used. If there is no associated component, null is returned.</source>
          <target state="translated">Fetch the foreground color to use to render the glyphs. If there is no foreground color, null should be returned. This is implemented to call &lt;code&gt;StyledDocument.getBackground&lt;/code&gt; if the associated document is a StyledDocument. If the associated document is not a StyledDocument, the associated components foreground color is used. If there is no associated component, null is returned.</target>
        </trans-unit>
        <trans-unit id="6ccc2ca7a868cd74eb2e380642053a43ece6a186" translate="yes" xml:space="preserve">
          <source>Fetch the label associated with the option.</source>
          <target state="translated">オプションに関連付けられたラベルを取得します。</target>
        </trans-unit>
        <trans-unit id="b31f8c8da47cfbed9cdbd438b52b3ce141e40434" translate="yes" xml:space="preserve">
          <source>Fetch the local address binding of a socket (this option cannot be &quot;set&quot; only &quot;gotten&quot;, since sockets are bound at creation time, and so the locally bound address cannot be changed).</source>
          <target state="translated">ソケットのローカルアドレスバインディングを取得する(ソケットは作成時にバインドされているため、ローカルにバインドされているアドレスを変更することはできないため、このオプションを設定することはできません)。</target>
        </trans-unit>
        <trans-unit id="85c3e77c9d8b210421b46a6ec404db4a2eddfef7" translate="yes" xml:space="preserve">
          <source>Fetch the local address binding of a socket (this option cannot be &quot;set&quot; only &quot;gotten&quot;, since sockets are bound at creation time, and so the locally bound address cannot be changed). The default local address of a socket is INADDR_ANY, meaning any local address on a multi-homed host. A multi-homed host can use this option to accept connections to only one of its addresses (in the case of a ServerSocket or DatagramSocket), or to specify its return address to the peer (for a Socket or DatagramSocket). The parameter of this option is an InetAddress.</source>
          <target state="translated">ソケットのローカルアドレスバインディングを取得します(ソケットは作成時にバインドされているため、ローカルアドレスを変更することはできません)。ソケットのデフォルトのローカルアドレスは INADDR_ANY で、マルチホームホスト上の任意のローカルアドレスを意味します。マルチホームホストは、このオプションを使用して、1つのアドレスのみに接続を受け付けるか(ServerSocketやDatagramSocketの場合)、または相手に返すアドレスを指定することができます(SocketやDatagramSocketの場合)。このオプションのパラメータは InetAddress です。</target>
        </trans-unit>
        <trans-unit id="05afcfa4eee357581c3460c9ae6cbeafe617e818" translate="yes" xml:space="preserve">
          <source>Fetch the location along the flow axis that the flow span will start at.</source>
          <target state="translated">フロー・スパンが開始するフロー軸に沿った位置を取得します。</target>
        </trans-unit>
        <trans-unit id="413892de05cbda8d6172486b04b1d780d054ffce" translate="yes" xml:space="preserve">
          <source>Fetch the location along the flow axis that the flow span will start at. This is called by the FlowStrategy while it is updating the flow. A flow can be shaped by providing different values for the row constraints.</source>
          <target state="translated">フロースパンが開始するフロー軸に沿った位置を取得します。これは FlowStrategy がフローを更新している間に呼び出されます。行制約に異なる値を指定することで、フローを整形することができます。</target>
        </trans-unit>
        <trans-unit id="83f576191a8ca128ca565530b447475d4e45bba6" translate="yes" xml:space="preserve">
          <source>Fetch the major axis (the axis the children are tiled along).</source>
          <target state="translated">主軸(子がタイル化されている軸)を取得します。</target>
        </trans-unit>
        <trans-unit id="3d62e5e2b388607195080b9932e2f1ef7942f726" translate="yes" xml:space="preserve">
          <source>Fetch the major axis (the axis the children are tiled along). This will have a value of either X_AXIS or Y_AXIS.</source>
          <target state="translated">主軸(子がタイル化される軸)を取得します。これは、X_AXISまたはY_AXISのいずれかの値を持ちます。</target>
        </trans-unit>
        <trans-unit id="a1575f2f361abb25e8e246cf2349f800b3945cc1" translate="yes" xml:space="preserve">
          <source>Fetch the minor axis (the axis orthogonal to the tiled axis).</source>
          <target state="translated">小軸(タイル状の軸に直交する軸)を取得します。</target>
        </trans-unit>
        <trans-unit id="89d256aac68e59bb5293056be92245f58004da16" translate="yes" xml:space="preserve">
          <source>Fetch the minor axis (the axis orthogonal to the tiled axis). This will have a value of either X_AXIS or Y_AXIS.</source>
          <target state="translated">小軸(タイル状の軸に直交する軸)を取得します。これは、X_AXISまたはY_AXISのいずれかの値を持ちます。</target>
        </trans-unit>
        <trans-unit id="97d2db140a5e8559071bd98a2a3bafde3ac19432" translate="yes" xml:space="preserve">
          <source>Fetch the object representing the layout state of of the child at the given index.</source>
          <target state="translated">指定されたインデックスの子のレイアウト状態を表すオブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="e2d4eb8d56c0f410b5f26bc694181034b854a6ef" translate="yes" xml:space="preserve">
          <source>Fetch the parser to use for reading HTML streams.</source>
          <target state="translated">HTML ストリームの読み込みに使用するパーサを取得します。</target>
        </trans-unit>
        <trans-unit id="24a7b8d1826bfd582f0613541800bcb2747afdfb" translate="yes" xml:space="preserve">
          <source>Fetch the parser to use for reading HTML streams. This can be reimplemented to provide a different parser. The default implementation is loaded dynamically to avoid the overhead of loading the default parser if it's not used. The default parser is the HotJava parser using an HTML 3.2 DTD.</source>
          <target state="translated">HTMLストリームの読み込みに使用するパーサを取得します。これは、別のパーサを提供するために再実装することができます。デフォルトの実装は、使用されない場合にデフォルトのパーサをロードするオーバーヘッドを避けるために動的にロードされます。デフォルトのパーサは、HTML 3.2 DTDを使用するHotJavaパーサです。</target>
        </trans-unit>
        <trans-unit id="4d4defed7228e45f497dfb564fa8843a42fca2d4" translate="yes" xml:space="preserve">
          <source>Fetch the queue to use for layout.</source>
          <target state="translated">レイアウトに使用するキューを取得します。</target>
        </trans-unit>
        <trans-unit id="32875f38fe75cf7cb5674e7ddd0d0e42696369fb" translate="yes" xml:space="preserve">
          <source>Fetch the span along an axis that is taken up by the insets.</source>
          <target state="translated">インセットによって取り込まれる軸に沿ったスパンを取得します。</target>
        </trans-unit>
        <trans-unit id="abd9dc6a2debe5ed0da483d7a92bdcac02024aab" translate="yes" xml:space="preserve">
          <source>Fetch the value of an option.</source>
          <target state="translated">オプションの値を取得します。</target>
        </trans-unit>
        <trans-unit id="0a6cbb4805109f6a707c31302c9a3db2cc9a3411" translate="yes" xml:space="preserve">
          <source>Fetch the value of an option. Binary options will return java.lang.Boolean(true) if enabled, java.lang.Boolean(false) if disabled, e.g.:</source>
          <target state="translated">オプションの値を取得します。バイナリオプションは、有効な場合はjava.lang.Boolean(true)、無効な場合はjava.lang.Boolean(false)を返します。</target>
        </trans-unit>
        <trans-unit id="5d4878ad9bec277122b2625fe589018eddab1548" translate="yes" xml:space="preserve">
          <source>Fetch the value of an option. Binary options will return java.lang.Boolean.TRUE if enabled, java.lang.Boolean.FALSE if disabled, e.g.:</source>
          <target state="translated">オプションの値を取得します。バイナリオプションは、有効な場合はjava.lang.Boolean.TRUE、無効な場合はjava.lang.Boolean.FALSEを返します。</target>
        </trans-unit>
        <trans-unit id="c33f027575260c797af354c7dc24bacf3cb3c797" translate="yes" xml:space="preserve">
          <source>Fetches a View with the allocation of the associated text component (i.e. the root of the hierarchy) that can be traversed to determine how the model is being represented spatially.</source>
          <target state="translated">モデルがどのように空間的に表現されているかを決定するために、それをトラバースすることができる、関連するテキストコンポーネント(すなわち、階層のルート)の割り当てを持つビューをフェッチします。</target>
        </trans-unit>
        <trans-unit id="b46d685877b0b52318114f7abca44d78f1d71ab0" translate="yes" xml:space="preserve">
          <source>Fetches a caret that can navigate through views produced by the associated ViewFactory.</source>
          <target state="translated">関連するViewFactoryで生成されたビューをナビゲートできるキャレットを取得します。</target>
        </trans-unit>
        <trans-unit id="f51a7cbbd05bf28478e54c18fa6e4dbfda22b2f7" translate="yes" xml:space="preserve">
          <source>Fetches a factory that is suitable for producing views of any models that are produced by this kit.</source>
          <target state="translated">このキットで生産されたモデルのビューを生産するのに適した工場を取得します。</target>
        </trans-unit>
        <trans-unit id="7cb6b8142483cae260e2e0af0d8daf9299c83a2c" translate="yes" xml:space="preserve">
          <source>Fetches a factory that is suitable for producing views of any models that are produced by this kit. The default is to have the UI produce the factory, so this method has no implementation.</source>
          <target state="translated">このキットによって生成される任意のモデルのビューを生成するのに適したファクトリーを取得します。デフォルトでは UI にファクトリーを生成させるようになっているので、このメソッドは実装されていません。</target>
        </trans-unit>
        <trans-unit id="5071bc6b9e5fc2417efd1d18de5610d0519745b7" translate="yes" xml:space="preserve">
          <source>Fetches a factory that is suitable for producing views of any models that are produced by this kit. This is implemented to return View implementations for the following kinds of elements:</source>
          <target state="translated">このキットで生産される任意のモデルのビューを生産するのに適したファクトリーをフェッチします。これは、以下の種類の要素のビュー実装を返すために実装されています。</target>
        </trans-unit>
        <trans-unit id="244729f147311a394ca36f97632873d9252791d1" translate="yes" xml:space="preserve">
          <source>Fetches a named keymap previously added to the document.</source>
          <target state="translated">以前にドキュメントに追加された名前付きキーマップを取得します。</target>
        </trans-unit>
        <trans-unit id="eaf9521166896e3238e0aa0d25a64030b6a5ffba" translate="yes" xml:space="preserve">
          <source>Fetches a named keymap previously added to the document. This does not work with &lt;code&gt;null&lt;/code&gt;-named keymaps.</source>
          <target state="translated">Fetches a named keymap previously added to the document. This does not work with &lt;code&gt;null&lt;/code&gt; -named keymaps.</target>
        </trans-unit>
        <trans-unit id="4afaabe05be026b502d142e818dee3d3db36a008" translate="yes" xml:space="preserve">
          <source>Fetches a named non-&lt;code&gt;null&lt;/code&gt; style previously added.</source>
          <target state="translated">Fetches a named non- &lt;code&gt;null&lt;/code&gt; style previously added.</target>
        </trans-unit>
        <trans-unit id="1a4b13839d42f3706fd342833d6e5a94c3cbe14a" translate="yes" xml:space="preserve">
          <source>Fetches a named style previously added to the document</source>
          <target state="translated">以前にドキュメントに追加された名前付きスタイルを取得します。</target>
        </trans-unit>
        <trans-unit id="934325f7cf34d00a01e3b920a80fab5243f649c3" translate="yes" xml:space="preserve">
          <source>Fetches a named style previously added.</source>
          <target state="translated">以前に追加された名前付きスタイルを取得します。</target>
        </trans-unit>
        <trans-unit id="c0cbff8b6de6afbaee393ca5fc4a7803de6889c4" translate="yes" xml:space="preserve">
          <source>Fetches a portion of the text represented by the component.</source>
          <target state="translated">コンポーネントで表現されたテキストの一部を取得します。</target>
        </trans-unit>
        <trans-unit id="fae9feba505d37d62e3bc7ff6ff2dd6ecc0128e7" translate="yes" xml:space="preserve">
          <source>Fetches a portion of the text represented by the component. Returns an empty string if length is 0.</source>
          <target state="translated">コンポーネントが表すテキストの一部を取得します。長さが0の場合は空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="e39383d6cdba5489ea04b102429926facbf25d92" translate="yes" xml:space="preserve">
          <source>Fetches a set of attributes to use in the view for displaying.</source>
          <target state="translated">ビューで表示に使用する属性のセットを取得します。</target>
        </trans-unit>
        <trans-unit id="500fd2ebd810e88badc5ff709840566724fc13e0" translate="yes" xml:space="preserve">
          <source>Fetches a set of attributes to use in the view for displaying. This is basically a set of attributes that can be used for View.getAttributes.</source>
          <target state="translated">ビューで表示に使用する属性のセットを取得します。基本的にはView.getAttributesで使用できる属性のセットです。</target>
        </trans-unit>
        <trans-unit id="314d98640f17082eea240360b99a8f2800dcf00e" translate="yes" xml:space="preserve">
          <source>Fetches a stream for the given URL, which is about to be loaded by the &lt;code&gt;setPage&lt;/code&gt; method.</source>
          <target state="translated">Fetches a stream for the given URL, which is about to be loaded by the &lt;code&gt;setPage&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="cadc61d80d110b301a535beccbe490a806bcf198" translate="yes" xml:space="preserve">
          <source>Fetches a stream for the given URL, which is about to be loaded by the &lt;code&gt;setPage&lt;/code&gt; method. By default, this simply opens the URL and returns the stream. This can be reimplemented to do useful things like fetch the stream from a cache, monitor the progress of the stream, etc.</source>
          <target state="translated">Fetches a stream for the given URL, which is about to be loaded by the &lt;code&gt;setPage&lt;/code&gt; method. By default, this simply opens the URL and returns the stream. This can be reimplemented to do useful things like fetch the stream from a cache, monitor the progress of the stream, etc.</target>
        </trans-unit>
        <trans-unit id="8cb89fb12d87691073556247744a07bba1156f53" translate="yes" xml:space="preserve">
          <source>Fetches a string of characters contained in the sequence.</source>
          <target state="translated">シーケンスに含まれる文字列を取得します。</target>
        </trans-unit>
        <trans-unit id="576f9fbe9017ab7a5ddcc6cf9f641e55441866ca" translate="yes" xml:space="preserve">
          <source>Fetches a tag constant for a well-known tag name (i.e. one of the tags in the set {A, ADDRESS, APPLET, AREA, B, BASE, BASEFONT, BIG, BLOCKQUOTE, BODY, BR, CAPTION, CENTER, CITE, CODE, DD, DFN, DIR, DIV, DL, DT, EM, FONT, FORM, FRAME, FRAMESET, H1, H2, H3, H4, H5, H6, HEAD, HR, HTML, I, IMG, INPUT, ISINDEX, KBD, LI, LINK, MAP, MENU, META, NOBR, NOFRAMES, OBJECT, OL, OPTION, P, PARAM, PRE, SAMP, SCRIPT, SELECT, SMALL, SPAN, STRIKE, S, STRONG, STYLE, SUB, SUP, TABLE, TD, TEXTAREA, TH, TITLE, TR, TT, U, UL, VAR}.</source>
          <target state="translated">よく知られたタグ名のタグ定数を取得します。A,ADDRESS,APPLET,AREA,B,BASE,BASEFONT,BIG,BLOCKQUOTE,BODY,BR,CAPTION,CENTER,CITE,CODE,DD,DFN,DIR,DIV,DL,DT,EM,FONT,FORM,FRAME,FRAMESET,H1,H2,H3,H4,H5,H6,HEAD,HR,HTMLのセットに含まれるタグのうちの1つです。I,IMG,INPUT,ISINDEX,KBD,LI,LINK,MAP,MENU,META,NOBRAS,NOFRAMES,OBJECT,OL,OPTION,P,PARAM,PRE,SAMP,SCRIPT,SELECT,SMALL,SPAN,STRIKE,S,STRONG,STYLE,SUB,SUP,TABLE,TD,TEXTAREA,TH,TITLE,TR,TT,U,UL,VAR}。</target>
        </trans-unit>
        <trans-unit id="557d8faeb55d0628c23a08d4d1d334493aac3b3c" translate="yes" xml:space="preserve">
          <source>Fetches a tag constant for a well-known tag name (i.e. one of the tags in the set {A, ADDRESS, APPLET, AREA, B, BASE, BASEFONT, BIG, BLOCKQUOTE, BODY, BR, CAPTION, CENTER, CITE, CODE, DD, DFN, DIR, DIV, DL, DT, EM, FONT, FORM, FRAME, FRAMESET, H1, H2, H3, H4, H5, H6, HEAD, HR, HTML, I, IMG, INPUT, ISINDEX, KBD, LI, LINK, MAP, MENU, META, NOBR, NOFRAMES, OBJECT, OL, OPTION, P, PARAM, PRE, SAMP, SCRIPT, SELECT, SMALL, SPAN, STRIKE, S, STRONG, STYLE, SUB, SUP, TABLE, TD, TEXTAREA, TH, TITLE, TR, TT, U, UL, VAR}. If the given name does not represent one of the well-known tags, then &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="translated">Fetches a tag constant for a well-known tag name (i.e. one of the tags in the set {A, ADDRESS, APPLET, AREA, B, BASE, BASEFONT, BIG, BLOCKQUOTE, BODY, BR, CAPTION, CENTER, CITE, CODE, DD, DFN, DIR, DIV, DL, DT, EM, FONT, FORM, FRAME, FRAMESET, H1, H2, H3, H4, H5, H6, HEAD, HR, HTML, I, IMG, INPUT, ISINDEX, KBD, LI, LINK, MAP, MENU, META, NOBR, NOFRAMES, OBJECT, OL, OPTION, P, PARAM, PRE, SAMP, SCRIPT, SELECT, SMALL, SPAN, STRIKE, S, STRONG, STYLE, SUB, SUP, TABLE, TD, TEXTAREA, TH, TITLE, TR, TT, U, UL, VAR}. If the given name does not represent one of the well-known tags, then &lt;code&gt;null&lt;/code&gt; will be returned.</target>
        </trans-unit>
        <trans-unit id="8b247ade7cfc3365b1a627b35a5363d4c67ad3af" translate="yes" xml:space="preserve">
          <source>Fetches all of the actions defined in this keymap.</source>
          <target state="translated">このキーマップで定義されているすべてのアクションを取得します。</target>
        </trans-unit>
        <trans-unit id="04d6b468779959cc4578f018001cb4bd02bb645f" translate="yes" xml:space="preserve">
          <source>Fetches all of the keystrokes in this map that are bound to some action.</source>
          <target state="translated">このマップ内で、何らかのアクションにバインドされているすべてのキーストロークを取得します。</target>
        </trans-unit>
        <trans-unit id="ad715d3e73c2c65564d7b900ebc174f2e9c36e30" translate="yes" xml:space="preserve">
          <source>Fetches an attribute constant for a well-known attribute name (i.e. one of the attributes in the set {FACE, COMMENT, SIZE, COLOR, CLEAR, BACKGROUND, BGCOLOR, TEXT, LINK, VLINK, ALINK, WIDTH, HEIGHT, ALIGN, NAME, HREF, REL, REV, TITLE, TARGET, SHAPE, COORDS, ISMAP, NOHREF, ALT, ID, SRC, HSPACE, VSPACE, USEMAP, LOWSRC, CODEBASE, CODE, ARCHIVE, VALUE, VALUETYPE, TYPE, CLASS, STYLE, LANG, DIR, DECLARE, CLASSID, DATA, CODETYPE, STANDBY, BORDER, SHAPES, NOSHADE, COMPACT, START, ACTION, METHOD, ENCTYPE, CHECKED, MAXLENGTH, MULTIPLE, SELECTED, ROWS, COLS, DUMMY, CELLSPACING, CELLPADDING, VALIGN, HALIGN, NOWRAP, ROWSPAN, COLSPAN, PROMPT, HTTPEQUIV, CONTENT, LANGUAGE, VERSION, N, FRAMEBORDER, MARGINWIDTH, MARGINHEIGHT, SCROLLING, NORESIZE, MEDIA, ENDTAG}).</source>
          <target state="translated">よく知られた属性名の属性定数を取得します。セット{FACE,COMMENT,SIZE,COLOR,CLEAR,BACKGROUND,BGCOLOR,TEXT,LINK,VLINK,ALINK,WIDTH,HEIGHT,ALIGN,NAME,HREF,REL,REV,TITLE,TARGET}の中の属性の一つ。SHAPE、COORDS、ISMAP、NOHREF、ALT、ID、SRC、HSPACE、VSPACE、USEMAP、LOWSRC、CODEBASE、CODE、ARCHIVE、VALUE、VALUETYPE、TYPE、CLASS、STYLE、LANG、DIR、DECLARE、CLASSID。DATA、CODETYPE、STANDBY、BORDER、SHAPES、NOSHADE、COMPACT、START、ACTION、METHOD、ENCYPE、CHECKED、MAXLENGTH、MULTIPLE、SELECTED、ROWS、COLS、DUMMY、CELLSPACING、CELLPADDING、VALIGN、HALIGN、NOWRAP、ROWSPAN、COLSPAN、PROMPT、HTTPEQUIV、CONTENT、LANGUAGE、VERSION、N、FRAMEBORDER、MARGINWIDTH、MARGINHEIGHT、SCROLLING、NORESIZE、MEDIA、ENDTAG})を使用しています。</target>
        </trans-unit>
        <trans-unit id="13ae5b636b5f7ba842b3e27cbf9dea468213ae4e" translate="yes" xml:space="preserve">
          <source>Fetches an attribute constant for a well-known attribute name (i.e. one of the attributes in the set {FACE, COMMENT, SIZE, COLOR, CLEAR, BACKGROUND, BGCOLOR, TEXT, LINK, VLINK, ALINK, WIDTH, HEIGHT, ALIGN, NAME, HREF, REL, REV, TITLE, TARGET, SHAPE, COORDS, ISMAP, NOHREF, ALT, ID, SRC, HSPACE, VSPACE, USEMAP, LOWSRC, CODEBASE, CODE, ARCHIVE, VALUE, VALUETYPE, TYPE, CLASS, STYLE, LANG, DIR, DECLARE, CLASSID, DATA, CODETYPE, STANDBY, BORDER, SHAPES, NOSHADE, COMPACT, START, ACTION, METHOD, ENCTYPE, CHECKED, MAXLENGTH, MULTIPLE, SELECTED, ROWS, COLS, DUMMY, CELLSPACING, CELLPADDING, VALIGN, HALIGN, NOWRAP, ROWSPAN, COLSPAN, PROMPT, HTTPEQUIV, CONTENT, LANGUAGE, VERSION, N, FRAMEBORDER, MARGINWIDTH, MARGINHEIGHT, SCROLLING, NORESIZE, MEDIA, ENDTAG}). If the given name does not represent one of the well-known attributes, then &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="translated">Fetches an attribute constant for a well-known attribute name (i.e. one of the attributes in the set {FACE, COMMENT, SIZE, COLOR, CLEAR, BACKGROUND, BGCOLOR, TEXT, LINK, VLINK, ALINK, WIDTH, HEIGHT, ALIGN, NAME, HREF, REL, REV, TITLE, TARGET, SHAPE, COORDS, ISMAP, NOHREF, ALT, ID, SRC, HSPACE, VSPACE, USEMAP, LOWSRC, CODEBASE, CODE, ARCHIVE, VALUE, VALUETYPE, TYPE, CLASS, STYLE, LANG, DIR, DECLARE, CLASSID, DATA, CODETYPE, STANDBY, BORDER, SHAPES, NOSHADE, COMPACT, START, ACTION, METHOD, ENCTYPE, CHECKED, MAXLENGTH, MULTIPLE, SELECTED, ROWS, COLS, DUMMY, CELLSPACING, CELLPADDING, VALIGN, HALIGN, NOWRAP, ROWSPAN, COLSPAN, PROMPT, HTTPEQUIV, CONTENT, LANGUAGE, VERSION, N, FRAMEBORDER, MARGINWIDTH, MARGINHEIGHT, SCROLLING, NORESIZE, MEDIA, ENDTAG}). If the given name does not represent one of the well-known attributes, then &lt;code&gt;null&lt;/code&gt; will be returned.</target>
        </trans-unit>
        <trans-unit id="8bea5e1d4837e5d527ed423e104f09f5e731a227" translate="yes" xml:space="preserve">
          <source>Fetches an empty AttributeSet.</source>
          <target state="translated">空の属性セットを取得します。</target>
        </trans-unit>
        <trans-unit id="a08713e0c0245159ad3587ead98e9bd55eaa6efc" translate="yes" xml:space="preserve">
          <source>Fetches an integer attribute value.</source>
          <target state="translated">整数属性値を取得します。</target>
        </trans-unit>
        <trans-unit id="2c1387d0e2508ff8397fee7f235d3a3b13e309d0" translate="yes" xml:space="preserve">
          <source>Fetches an integer attribute value. Attribute values are stored as a string, and this is a convenience method to convert to an actual integer.</source>
          <target state="translated">整数の属性値を取得します。属性値は文字列として格納されており、これは実際の整数に変換するための便利な方法です。</target>
        </trans-unit>
        <trans-unit id="df010845c86217a2a317c411a42cb5418934ca4c" translate="yes" xml:space="preserve">
          <source>Fetches an iterator for the specified HTML tag.</source>
          <target state="translated">指定したHTMLタグのイテレータを取得します。</target>
        </trans-unit>
        <trans-unit id="9650c38e5cef410c03046e31665892decfcda072" translate="yes" xml:space="preserve">
          <source>Fetches an iterator for the specified HTML tag. This can be used for things like iterating over the set of anchors contained, or iterating over the input elements.</source>
          <target state="translated">指定した HTML タグのイテレータを取得します。これは、含まれているアンカーのセットを反復処理したり、入力要素を反復処理したりするために使用できます。</target>
        </trans-unit>
        <trans-unit id="8a72602b5c55545a63306ce7ac693747bf80cd79" translate="yes" xml:space="preserve">
          <source>Fetches the &lt;code&gt;FontMetrics&lt;/code&gt; used for this view.</source>
          <target state="translated">Fetches the &lt;code&gt;FontMetrics&lt;/code&gt; used for this view.</target>
        </trans-unit>
        <trans-unit id="c97361f6e6d3a70d7e0de19f95066b62b05cf180" translate="yes" xml:space="preserve">
          <source>Fetches the &lt;code&gt;StyleSheet&lt;/code&gt; with the document-specific display rules (CSS) that were specified in the HTML document itself.</source>
          <target state="translated">Fetches the &lt;code&gt;StyleSheet&lt;/code&gt; with the document-specific display rules (CSS) that were specified in the HTML document itself.</target>
        </trans-unit>
        <trans-unit id="330502a46a300b5986a78f170f52484f34baa0fb" translate="yes" xml:space="preserve">
          <source>Fetches the &lt;code&gt;ViewFactory&lt;/code&gt; implementation that is feeding the view hierarchy.</source>
          <target state="translated">Fetches the &lt;code&gt;ViewFactory&lt;/code&gt; implementation that is feeding the view hierarchy.</target>
        </trans-unit>
        <trans-unit id="8f8db12ef7782867c290644198710e07da83986b" translate="yes" xml:space="preserve">
          <source>Fetches the &lt;code&gt;ViewFactory&lt;/code&gt; implementation that is feeding the view hierarchy. Normally the views are given this as an argument to updates from the model when they are most likely to need the factory, but this method serves to provide it at other times.</source>
          <target state="translated">Fetches the &lt;code&gt;ViewFactory&lt;/code&gt; implementation that is feeding the view hierarchy. Normally the views are given this as an argument to updates from the model when they are most likely to need the factory, but this method serves to provide it at other times.</target>
        </trans-unit>
        <trans-unit id="26bed3a55faa42c3e990e1d9500e8e92454c6589" translate="yes" xml:space="preserve">
          <source>Fetches the EditorKit for the UI.</source>
          <target state="translated">UIのEditorKitを取得します。</target>
        </trans-unit>
        <trans-unit id="d579afc683cc05a22e8d7cc31ad552ed69038518" translate="yes" xml:space="preserve">
          <source>Fetches the EditorKit for the UI. This is whatever is currently set in the associated JEditorPane.</source>
          <target state="translated">UIのEditorKitを取得します。これは、現在関連付けられた JEditorPane で設定されているものです。</target>
        </trans-unit>
        <trans-unit id="4fab19352a053f0ca3f519fdcb132f374bde2cf7" translate="yes" xml:space="preserve">
          <source>Fetches the ElementIterator.</source>
          <target state="translated">ElementIterator を取得します。</target>
        </trans-unit>
        <trans-unit id="ca7011310481f9943e119adee88391baa560ce4d" translate="yes" xml:space="preserve">
          <source>Fetches the action appropriate for the given symbolic event sequence.</source>
          <target state="translated">指定されたシンボリックイベントシーケンスに適したアクションを取得します。</target>
        </trans-unit>
        <trans-unit id="392449c508f4c23fa9641f23a45872bc0ecf36ad" translate="yes" xml:space="preserve">
          <source>Fetches the action appropriate for the given symbolic event sequence. This is used by JTextController to determine how to interpret key sequences. If the binding is not resolved locally, an attempt is made to resolve through the parent keymap, if one is set.</source>
          <target state="translated">指定されたシンボリックイベントシーケンスに適したアクションを取得します。これは、JTextController がキーシーケンスをどのように解釈するかを決定するために使用します。バインディングがローカルで解決されていない場合は、親キーマップが設定されている場合はそれを用いて解決を試みます。</target>
        </trans-unit>
        <trans-unit id="0e0a3dfc84e83562333f4813f28ed7caa2e239c9" translate="yes" xml:space="preserve">
          <source>Fetches the allocation for the given child view to render into.</source>
          <target state="translated">指定した子ビューのレンダリング先の割り当てを取得します。</target>
        </trans-unit>
        <trans-unit id="5b9dd8404048697052330a7e49d225448baa1413" translate="yes" xml:space="preserve">
          <source>Fetches the allocation for the given child view to render into. This enables finding out where various views are located.</source>
          <target state="translated">指定した子ビューのレンダリング先の割り当てを取得します。これにより、さまざまなビューがどこにあるかを知ることができます。</target>
        </trans-unit>
        <trans-unit id="6d42efd9f1801bfcab044567ef94c7f82c93f87a" translate="yes" xml:space="preserve">
          <source>Fetches the allocation for the given child view.</source>
          <target state="translated">指定された子ビューの割り当てを取得します。</target>
        </trans-unit>
        <trans-unit id="74141f9bab4498377b76cb321160f9a0cbd785fa" translate="yes" xml:space="preserve">
          <source>Fetches the allocation for the given child view. This enables finding out where various views are located, without assuming how the views store their location. This returns &lt;code&gt;null&lt;/code&gt; since the default is to not have any child views.</source>
          <target state="translated">Fetches the allocation for the given child view. This enables finding out where various views are located, without assuming how the views store their location. This returns &lt;code&gt;null&lt;/code&gt; since the default is to not have any child views.</target>
        </trans-unit>
        <trans-unit id="5d01a2a51afb1f351238f6d14c5b93a20a5a67a5" translate="yes" xml:space="preserve">
          <source>Fetches the allocation for the given child view. This enables finding out where various views are located, without assuming the views store their location. This returns null since the default is to not have any child views.</source>
          <target state="translated">指定された子ビューの割り当てを取得します。これにより、ビューが位置を保存していると仮定しなくても、さまざまなビューがどこにあるかを知ることができます。デフォルトでは子ビューは存在しないので、これはnullを返します。</target>
        </trans-unit>
        <trans-unit id="b0641803fb8e396aa4fa21ffde1d2b3c82ca49d7" translate="yes" xml:space="preserve">
          <source>Fetches the allocation for the given child view. This enables finding out where various views are located. This is implemented to return &lt;code&gt;null&lt;/code&gt; if the layout is invalid, otherwise the superclass behavior is executed.</source>
          <target state="translated">Fetches the allocation for the given child view. This enables finding out where various views are located. This is implemented to return &lt;code&gt;null&lt;/code&gt; if the layout is invalid, otherwise the superclass behavior is executed.</target>
        </trans-unit>
        <trans-unit id="4e69ac59585892fd8d99c54c6e987138753deb03" translate="yes" xml:space="preserve">
          <source>Fetches the attributes to use when rendering.</source>
          <target state="translated">レンダリング時に使用する属性を取得します。</target>
        </trans-unit>
        <trans-unit id="de4289772c3ab79c4da508d325b90262b21f88bc" translate="yes" xml:space="preserve">
          <source>Fetches the attributes to use when rendering. By default this simply returns the attributes of the associated element. This method should be used rather than using the element directly to obtain access to the attributes to allow view-specific attributes to be mixed in or to allow the view to have view-specific conversion of attributes by subclasses. Each view should document what attributes it recognizes for the purpose of rendering or layout, and should always access them through the &lt;code&gt;AttributeSet&lt;/code&gt; returned by this method.</source>
          <target state="translated">Fetches the attributes to use when rendering. By default this simply returns the attributes of the associated element. This method should be used rather than using the element directly to obtain access to the attributes to allow view-specific attributes to be mixed in or to allow the view to have view-specific conversion of attributes by subclasses. Each view should document what attributes it recognizes for the purpose of rendering or layout, and should always access them through the &lt;code&gt;AttributeSet&lt;/code&gt; returned by this method.</target>
        </trans-unit>
        <trans-unit id="ff0660e7abe8b693ed850422cab99a5ceb5149f3" translate="yes" xml:space="preserve">
          <source>Fetches the attributes to use when rendering. This is implemented to multiplex the attributes specified in the model with a StyleSheet.</source>
          <target state="translated">レンダリング時に使用する属性を取得します。これは、モデルで指定したアトリビュートをスタイルシートと多重化するために実装されています。</target>
        </trans-unit>
        <trans-unit id="eb46f0f320587d5b75bbf20b1a04eaff054c9c7b" translate="yes" xml:space="preserve">
          <source>Fetches the axis along which views should be flowed.</source>
          <target state="translated">ビューをフローさせる軸を取得します。</target>
        </trans-unit>
        <trans-unit id="91e282830d492a61e554389126fd0c6fe6a1885f" translate="yes" xml:space="preserve">
          <source>Fetches the axis along which views should be flowed. By default, this will be the axis orthogonal to the axis along which the flow rows are tiled (the axis of the default flow rows themselves). This is typically used by the &lt;code&gt;FlowStrategy&lt;/code&gt;.</source>
          <target state="translated">Fetches the axis along which views should be flowed. By default, this will be the axis orthogonal to the axis along which the flow rows are tiled (the axis of the default flow rows themselves). This is typically used by the &lt;code&gt;FlowStrategy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="771b1d07fa35ec74d22aac7fec839473d66d6dca" translate="yes" xml:space="preserve">
          <source>Fetches the background color to use to render the glyphs.</source>
          <target state="translated">グリフのレンダリングに使用する背景色を取得します。</target>
        </trans-unit>
        <trans-unit id="f0eb8356e152db556657bc43a08dcad2c5cbcb3b" translate="yes" xml:space="preserve">
          <source>Fetches the background color to use to render the glyphs. This is implemented to return a cached background color, which defaults to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Fetches the background color to use to render the glyphs. This is implemented to return a cached background color, which defaults to &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09fa53c825ea6534987aaca3d0b86e97ae6a5887" translate="yes" xml:space="preserve">
          <source>Fetches the binding of services that set a policy for the type of document being edited.</source>
          <target state="translated">編集対象のドキュメントの種類にポリシーを設定するサービスのバインディングを取得します。</target>
        </trans-unit>
        <trans-unit id="c75440880142de919bef8f25e13581d5a7e715ee" translate="yes" xml:space="preserve">
          <source>Fetches the binding of services that set a policy for the type of document being edited. This contains things like the commands available, stream readers and writers, etc.</source>
          <target state="translated">編集中のドキュメントのタイプにポリシーを設定するサービスのバインディングを取得します。これには、利用可能なコマンド、ストリームリーダやライタなどが含まれています。</target>
        </trans-unit>
        <trans-unit id="ea29ef55333c482d7b109eea37ad0287f79137d2" translate="yes" xml:space="preserve">
          <source>Fetches the box formatter to use for the given set of CSS attributes.</source>
          <target state="translated">指定された CSS 属性のセットに使用するボックスフォーマッタを取得します。</target>
        </trans-unit>
        <trans-unit id="943f07db41aaacad9a67b1a2ad1f7d8da2d14c92" translate="yes" xml:space="preserve">
          <source>Fetches the caret that allows text-oriented navigation over the view.</source>
          <target state="translated">ビュー上でテキスト指向のナビゲーションを可能にするキャレットを取得します。</target>
        </trans-unit>
        <trans-unit id="d9009bf2d7b962bad44d61ffe0db8115af740f51" translate="yes" xml:space="preserve">
          <source>Fetches the character attributes in effect at the current location of the caret, or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Fetches the character attributes in effect at the current location of the caret, or &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0585edca3f6c028163103a7da27dd5b081919ee3" translate="yes" xml:space="preserve">
          <source>Fetches the child element at the given index.</source>
          <target state="translated">指定されたインデックスの子要素を取得します。</target>
        </trans-unit>
        <trans-unit id="b0b39480eef585d148028a31fa8648ea39aef6dc" translate="yes" xml:space="preserve">
          <source>Fetches the child view at the given coordinates.</source>
          <target state="translated">指定した座標の子ビューを取得します。</target>
        </trans-unit>
        <trans-unit id="dd2e4c40a5b6ad75876b83fc3cff76926f14dc32" translate="yes" xml:space="preserve">
          <source>Fetches the child view index at the given point.</source>
          <target state="translated">指定されたポイントの子ビューインデックスを取得します。</target>
        </trans-unit>
        <trans-unit id="44015dde2ed8dd7086483ef4a493ac1107a5bf6c" translate="yes" xml:space="preserve">
          <source>Fetches the child view index at the given point. This is called by the various View methods that need to calculate which child to forward a message to. This should be called by a block synchronized on this object, and would typically be followed with one or more calls to getChildAllocation that should also be in the synchronized block.</source>
          <target state="translated">指定したポイントの子ビューインデックスを取得します。これは、メッセージをどの子に転送するかを計算する必要があるさまざまなビューメソッドによって呼び出されます。これは、このオブジェクト上で同期化されたブロックから呼び出されるべきであり、通常は、同期化されたブロック内にあるはずの getChildAllocation への 1 回以上の呼び出しが続くことになります。</target>
        </trans-unit>
        <trans-unit id="73682a86c523c8b5a8653dd30ed864135c50083f" translate="yes" xml:space="preserve">
          <source>Fetches the child view index representing the given position in the model.</source>
          <target state="translated">モデル内の指定された位置を表す子ビューインデックスを取得します。</target>
        </trans-unit>
        <trans-unit id="627b40e1a72aae0b313c5cf4bad9a8068ac8fa88" translate="yes" xml:space="preserve">
          <source>Fetches the child view index representing the given position in the model. This is implemented to fetch the view in the case where there is a child view for each child element.</source>
          <target state="translated">モデル内の指定された位置を表す子ビューインデックスを取得します。これは、子要素ごとに子ビューが存在する場合にビューを取得するために実装されています。</target>
        </trans-unit>
        <trans-unit id="6bca14ce649ffe3dc2adc79f2570b6e14072b510" translate="yes" xml:space="preserve">
          <source>Fetches the child view that represents the given position in the model.</source>
          <target state="translated">モデル内の指定された位置を表す子ビューを取得します。</target>
        </trans-unit>
        <trans-unit id="c605c62a919f90aa995b1a0ca2971e848cc7fab3" translate="yes" xml:space="preserve">
          <source>Fetches the child view that represents the given position in the model. This is implemented to fetch the view in the case where there is a child view for each child element.</source>
          <target state="translated">モデル内の指定された位置を表す子ビューを取得します。子要素ごとに子ビューが存在する場合に、ビューを取得するために実装されています。</target>
        </trans-unit>
        <trans-unit id="6b0c32de7eb593fe9480395ee74968bfa74a788f" translate="yes" xml:space="preserve">
          <source>Fetches the child view that represents the given position in the model. This is implemented to walk through the children looking for a range that contains the given position. In this view the children do not necessarily have a one to one mapping with the child elements.</source>
          <target state="translated">モデル内の指定された位置を表す子ビューを取得します。これは、指定された位置を含む範囲を探すために子ビューをウォークスルーするために実装されています。このビューでは、子は必ずしも子要素と1対1のマッピングを持っているわけではありません。</target>
        </trans-unit>
        <trans-unit id="63aa7a4102c2e8ff8bc36dc4f4c642f30402c49a" translate="yes" xml:space="preserve">
          <source>Fetches the collection of attributes this element contains.</source>
          <target state="translated">この要素が含む属性のコレクションを取得します。</target>
        </trans-unit>
        <trans-unit id="ca9ed3d009a2243a191dd3ba95cf72c6c9f0c190" translate="yes" xml:space="preserve">
          <source>Fetches the command list for the editor.</source>
          <target state="translated">エディタのコマンドリストを取得します。</target>
        </trans-unit>
        <trans-unit id="3ce83c47365c11f2f2b248db9a3d87acf3bbf8e6" translate="yes" xml:space="preserve">
          <source>Fetches the command list for the editor. This is the list of commands supported by the plugged-in UI augmented by the collection of commands that the editor itself supports. These are useful for binding to events, such as in a keymap.</source>
          <target state="translated">エディタのコマンドリストを取得します。これは、プラグイン UI でサポートされているコマンドのリストで、エディタ自身がサポートしているコマンドのコレクションによって拡張されています。これらは、キーマップなどのイベントにバインドするのに便利です。</target>
        </trans-unit>
        <trans-unit id="9a1936fd1cb5d452dc606c2883ad72a2821f20da" translate="yes" xml:space="preserve">
          <source>Fetches the command list for the editor. This is the list of commands supported by the superclass augmented by the collection of commands defined locally for style operations.</source>
          <target state="translated">エディタのコマンドリストを取得します。これは、スタイル操作のためにローカルに定義されたコマンドのコレクションによって拡張されたスーパークラスがサポートするコマンドのリストです。</target>
        </trans-unit>
        <trans-unit id="256de40d591f29177090ffb25037047209afc04a" translate="yes" xml:space="preserve">
          <source>Fetches the constraining span to flow against for the given child index.</source>
          <target state="translated">指定された子インデックスに対してフローする制約スパンを取得します。</target>
        </trans-unit>
        <trans-unit id="719c1e7d6a1cda0a5516e6e6c102765990b6aead" translate="yes" xml:space="preserve">
          <source>Fetches the container hosting the view.</source>
          <target state="translated">ビューをホストするコンテナを取得します。</target>
        </trans-unit>
        <trans-unit id="d051edce9e4b05a5d75be789b213aefe7d2bed14" translate="yes" xml:space="preserve">
          <source>Fetches the container hosting the view. This is useful for things like scheduling a repaint, finding out the host components font, etc. The default implementation of this is to forward the query to the parent view.</source>
          <target state="translated">ビューをホストしているコンテナを取得します。これは、再描画をスケジューリングしたり、ホストコンポーネントのフォントを見つけたりするのに便利です。デフォルトの実装では、クエリを親ビューに転送します。</target>
        </trans-unit>
        <trans-unit id="b9e40a263ad1e501b9a419f5f3701b563b8cc64a" translate="yes" xml:space="preserve">
          <source>Fetches the context for managing attributes.</source>
          <target state="translated">属性を管理するためのコンテキストを取得します。</target>
        </trans-unit>
        <trans-unit id="5c6249356ca431cd248f138f5b5bba493bc63506" translate="yes" xml:space="preserve">
          <source>Fetches the context for managing attributes. This method effectively establishes the strategy used for compressing AttributeSet information.</source>
          <target state="translated">属性を管理するためのコンテキストを取得します。このメソッドは、属性セット情報を圧縮するために使用される戦略を効果的に確立します。</target>
        </trans-unit>
        <trans-unit id="b22a9096249d618c44c0476920560597169c6165" translate="yes" xml:space="preserve">
          <source>Fetches the current &lt;code&gt;Element&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="658eaf5a2510f3f4e3d88bbd35ffa82f584ff738" translate="yes" xml:space="preserve">
          <source>Fetches the current Element.</source>
          <target state="translated">現在の要素を取得します。</target>
        </trans-unit>
        <trans-unit id="17d45e662048a7a00ca4116f7b513a1536405010" translate="yes" xml:space="preserve">
          <source>Fetches the current color used to render the caret.</source>
          <target state="translated">カレットのレンダリングに使用した現在の色を取得します。</target>
        </trans-unit>
        <trans-unit id="21270d318a30de6cc7917f6f79b7613008da3b8b" translate="yes" xml:space="preserve">
          <source>Fetches the current color used to render the disabled text.</source>
          <target state="translated">無効化されたテキストのレンダリングに使用されている現在の色を取得します。</target>
        </trans-unit>
        <trans-unit id="67ece355bd5c3a7f2c1e094ac5b3b598304b2060" translate="yes" xml:space="preserve">
          <source>Fetches the current color used to render the selected text.</source>
          <target state="translated">選択されたテキストのレンダリングに使用される現在の色を取得します。</target>
        </trans-unit>
        <trans-unit id="b2b9510bfb3e1f6e418d68f6d290784dc72a7c21" translate="yes" xml:space="preserve">
          <source>Fetches the current color used to render the selection.</source>
          <target state="translated">選択範囲のレンダリングに使われた現在の色を取得します。</target>
        </trans-unit>
        <trans-unit id="7fcd7d6b5c50037374ab3c7c615b68046119fd6a" translate="yes" xml:space="preserve">
          <source>Fetches the current depth of element tree.</source>
          <target state="translated">要素ツリーの現在の深さを取得します。</target>
        </trans-unit>
        <trans-unit id="ff1b2bd062ee7efb45313c889795d302bfaf24b0" translate="yes" xml:space="preserve">
          <source>Fetches the current list of highlights.</source>
          <target state="translated">現在のハイライトのリストを取得します。</target>
        </trans-unit>
        <trans-unit id="f36e3672d38c6cf63a4f5c748cb82f8cd876cb2f" translate="yes" xml:space="preserve">
          <source>Fetches the current offset within the document.</source>
          <target state="translated">文書内の現在のオフセットを取得します。</target>
        </trans-unit>
        <trans-unit id="73fbe56a3dc823b4fcfc32422ea14f4212a170c8" translate="yes" xml:space="preserve">
          <source>Fetches the current paragraph attributes in effect at the location of the caret, or &lt;code&gt;null&lt;/code&gt; if none.</source>
          <target state="translated">キャレットの場所で有効な現在の段落属性をフェッチします。ない場合は &lt;code&gt;null&lt;/code&gt; をフェッチします。</target>
        </trans-unit>
        <trans-unit id="44b2b149c6dff281d60c2fce10bc76829a845403" translate="yes" xml:space="preserve">
          <source>Fetches the current position of the caret.</source>
          <target state="translated">キャレットの現在位置を取得します。</target>
        </trans-unit>
        <trans-unit id="3d9bb10afda3b17f80ac654cfbe8d22173637ad7" translate="yes" xml:space="preserve">
          <source>Fetches the current position of the mark.</source>
          <target state="translated">マークの現在位置を取得します。</target>
        </trans-unit>
        <trans-unit id="8f3161b8907cbee76795c8657f561ae54c37ca34" translate="yes" xml:space="preserve">
          <source>Fetches the current position of the mark. If there is a selection, the dot and mark will not be the same.</source>
          <target state="translated">マークの現在位置を取得します。選択範囲がある場合、ドットとマークの位置は同じではありません。</target>
        </trans-unit>
        <trans-unit id="80e2faf98850aa2132d8d8022f2378dc7984d32a" translate="yes" xml:space="preserve">
          <source>Fetches the current position of the mark. If there is a selection, the mark will not be the same as the dot.</source>
          <target state="translated">マークの現在位置を取得します。選択範囲がある場合、マークはドットと同じではありません。</target>
        </trans-unit>
        <trans-unit id="d0f9937901a6de08824922dbd31fa2fe328c778e" translate="yes" xml:space="preserve">
          <source>Fetches the current writing thread if there is one.</source>
          <target state="translated">現在の書き込みスレッドがある場合は、それを取得します。</target>
        </trans-unit>
        <trans-unit id="e593e03e533550f4bad94e6bc688fbca2c34350d" translate="yes" xml:space="preserve">
          <source>Fetches the current writing thread if there is one. This can be used to distinguish whether a method is being called as part of an existing modification or if a lock needs to be acquired and a new transaction started.</source>
          <target state="translated">現在の書き込みスレッドがあればそれを取得します。これは、メソッドが既存の変更の一部として呼び出されているのか、ロックを取得して新しいトランザクションを開始する必要があるのかを区別するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="36cb0710c16f31422a3b1d5892d4e1f4c4b7bd5e" translate="yes" xml:space="preserve">
          <source>Fetches the currently installed kit for handling content.</source>
          <target state="translated">コンテンツを扱うために現在インストールされているキットを取得します。</target>
        </trans-unit>
        <trans-unit id="78a815e01b77f9452cd505dc98ba8d09bb293db1" translate="yes" xml:space="preserve">
          <source>Fetches the currently installed kit for handling content. &lt;code&gt;createDefaultEditorKit&lt;/code&gt; is called to set up a default if necessary.</source>
          <target state="translated">コンテンツを処理するために現在インストールされているキットを取得します。 &lt;code&gt;createDefaultEditorKit&lt;/code&gt; は、必要に応じてデフォルトを設定するために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="bde4ecc04b248942f3b581ff8d20580068f4f9bb" translate="yes" xml:space="preserve">
          <source>Fetches the default action to fire if a key is typed (i.e. a KEY_TYPED KeyEvent is received) and there is no binding for it.</source>
          <target state="translated">キーが入力された場合(すなわち、KEY_TYPED KeyEvent を受信した場合)に起動する既定のアクションをフェッチします。</target>
        </trans-unit>
        <trans-unit id="eaa50ab03912077d97655ad4a5911063ea91fad5" translate="yes" xml:space="preserve">
          <source>Fetches the default action to fire if a key is typed (i.e. a KEY_TYPED KeyEvent is received) and there is no binding for it. Typically this would be some action that inserts text so that the keymap doesn't require an action for each possible key.</source>
          <target state="translated">キーが入力された場合(すなわち、KEY_TYPED KeyEventを受信した場合)、それに対するバインディングがない場合に起動するデフォルトのアクションをフェッチします。通常、これはテキストを挿入するアクションで、キーマップが可能なキーごとにアクションを必要としないようにします。</target>
        </trans-unit>
        <trans-unit id="b016868b30f2a7a3964747d98cebe40bb65367ed" translate="yes" xml:space="preserve">
          <source>Fetches the document associated with this element.</source>
          <target state="translated">この要素に関連付けられたドキュメントを取得します。</target>
        </trans-unit>
        <trans-unit id="d7e2b50dd0ea156702dc6ab73e42be17c379d9f2" translate="yes" xml:space="preserve">
          <source>Fetches the document.</source>
          <target state="translated">ドキュメントを取得します。</target>
        </trans-unit>
        <trans-unit id="205c394d32173e2c537e8906393befecdb9ad312" translate="yes" xml:space="preserve">
          <source>Fetches the editor kit to use for the given type of content.</source>
          <target state="translated">指定したタイプのコンテンツで使用するエディタキットを取得します。</target>
        </trans-unit>
        <trans-unit id="fcaf1dacc1e49453f06163aa32476f4010ba2413" translate="yes" xml:space="preserve">
          <source>Fetches the editor kit to use for the given type of content. This is called when a type is requested that doesn't match the currently installed type. If the component doesn't have an &lt;code&gt;EditorKit&lt;/code&gt; registered for the given type, it will try to create an &lt;code&gt;EditorKit&lt;/code&gt; from the default &lt;code&gt;EditorKit&lt;/code&gt; registry. If that fails, a &lt;code&gt;PlainEditorKit&lt;/code&gt; is used on the assumption that all text documents can be represented as plain text.</source>
          <target state="translated">指定されたタイプのコンテンツに使用するエディターキットを取得します。これは、現在インストールされているタイプと一致しないタイプが要求されたときに呼び出されます。コンポーネントに &lt;code&gt;EditorKit&lt;/code&gt; されたタイプのEditorKitが登録されていない場合、デフォルトの &lt;code&gt;EditorKit&lt;/code&gt; レジストリから &lt;code&gt;EditorKit&lt;/code&gt; を作成しようとします。それが失敗した場合、すべてのテキストドキュメントをプレーンテキストとして表すことができるという前提で、 &lt;code&gt;PlainEditorKit&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="ecff64776e97898d45864953a76f00a00a241ce4" translate="yes" xml:space="preserve">
          <source>Fetches the element representing the current run of character attributes for the caret.</source>
          <target state="translated">カレットの文字属性の現在の実行を表す要素を取得します。</target>
        </trans-unit>
        <trans-unit id="d9fd681640a944390995a647673b6ce67f4eb693" translate="yes" xml:space="preserve">
          <source>Fetches the first element.</source>
          <target state="translated">最初の要素を取得します。</target>
        </trans-unit>
        <trans-unit id="b0a74161fd125a652b0014e97874e96bffb0cce2" translate="yes" xml:space="preserve">
          <source>Fetches the font metrics associated with the component hosting this view.</source>
          <target state="translated">このビューをホストしているコンポーネントに関連付けられたフォントメトリクスを取得します。</target>
        </trans-unit>
        <trans-unit id="2d56f2da633fc8f8a8924560c235583b4baa93ab" translate="yes" xml:space="preserve">
          <source>Fetches the font that the glyphs should be based upon.</source>
          <target state="translated">グリフの基になるべきフォントを取得します。</target>
        </trans-unit>
        <trans-unit id="234860583f15f6a2f70895bcf8e1b930344e32ca" translate="yes" xml:space="preserve">
          <source>Fetches the font that the glyphs should be based upon. This is implemented to return a cached font.</source>
          <target state="translated">グリフの基になるべきフォントを取得します。これは、キャッシュされたフォントを返すために実装されています。</target>
        </trans-unit>
        <trans-unit id="6e6ff9772e140f598d59c757c10da3c28c11f94b" translate="yes" xml:space="preserve">
          <source>Fetches the font to use for the given set of attributes.</source>
          <target state="translated">指定した属性のセットに使用するフォントを取得します。</target>
        </trans-unit>
        <trans-unit id="31d699e0fe7ea359ba2dd2a010df560cd1f65bf1" translate="yes" xml:space="preserve">
          <source>Fetches the foreground color to use to render the glyphs.</source>
          <target state="translated">グリフのレンダリングに使用する前景色を取得します。</target>
        </trans-unit>
        <trans-unit id="52ca97a5d85eaa3a52c2f799b3a78aee242ea46e" translate="yes" xml:space="preserve">
          <source>Fetches the foreground color to use to render the glyphs. This is implemented to return a cached foreground color, which defaults to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">グリフのレンダリングに使用する前景色を取得します。これは、キャッシュされた前景色を返すために実装されてい &lt;code&gt;null&lt;/code&gt; 。デフォルトはnullです。</target>
        </trans-unit>
        <trans-unit id="52d305e05f8241969c25e9f8062cdb9819c72387" translate="yes" xml:space="preserve">
          <source>Fetches the index within the element represented.</source>
          <target state="translated">表現された要素内のインデックスを取得します。</target>
        </trans-unit>
        <trans-unit id="5e531966095c22c7d01d98929df315300b59c0a3" translate="yes" xml:space="preserve">
          <source>Fetches the index within the element represented. This is the location that children were added and/or removed.</source>
          <target state="translated">表現された要素内のインデックスを取得します。これは、子が追加されたり削除されたりした場所です。</target>
        </trans-unit>
        <trans-unit id="003d56e06eaf9c34bd83dab82b267ebf679fd2fd" translate="yes" xml:space="preserve">
          <source>Fetches the inset needed on a given side to account for the margin, border, and padding.</source>
          <target state="translated">指定された辺に必要なはめ込みを取得して、 余白、 枠、 パ ッ ド を考慮に入れます。</target>
        </trans-unit>
        <trans-unit id="1d2aa07e772d9dfa77a43262119f437e80e1f089" translate="yes" xml:space="preserve">
          <source>Fetches the keymap currently active in this text component.</source>
          <target state="translated">このテキストコンポーネントで現在アクティブなキーマップを取得します。</target>
        </trans-unit>
        <trans-unit id="18fde7920ee1acbe972b956430e9a471b84529d5" translate="yes" xml:space="preserve">
          <source>Fetches the keystrokes that will result in the given action.</source>
          <target state="translated">指定したアクションの結果となるキーストロークを取得します。</target>
        </trans-unit>
        <trans-unit id="d54045776876a2ec14c22b419489009bd249f12c" translate="yes" xml:space="preserve">
          <source>Fetches the list formatter to use for the given set of CSS attributes.</source>
          <target state="translated">指定された CSS 属性のセットに使用するリストフォーマッタを取得します。</target>
        </trans-unit>
        <trans-unit id="18f237908c32ad6e2a5e6104d1a469ab46df51fa" translate="yes" xml:space="preserve">
          <source>Fetches the list of style names.</source>
          <target state="translated">スタイル名のリストを取得します。</target>
        </trans-unit>
        <trans-unit id="825f77ccd334e3d351cb1b1220ec6565b084f1ad" translate="yes" xml:space="preserve">
          <source>Fetches the location along the flow axis that the flow span will start at.</source>
          <target state="translated">フロースパンが開始するフロー軸に沿った位置を取得します。</target>
        </trans-unit>
        <trans-unit id="6644e7b24a44daffb8fd3c36b1acd4bcabd8ecf1" translate="yes" xml:space="preserve">
          <source>Fetches the location of other end of a logical selection.</source>
          <target state="translated">論理選択範囲のもう一方の端の位置を取得します。</target>
        </trans-unit>
        <trans-unit id="cac0920da290356cb1c333a29fe711cbe1ba1704" translate="yes" xml:space="preserve">
          <source>Fetches the location of other end of a logical selection. If there is no selection, this will be the same as dot.</source>
          <target state="translated">論理的選択範囲のもう一方の端の位置を取得します。選択範囲がない場合は dot と同じになります。</target>
        </trans-unit>
        <trans-unit id="bd7c539d554acf063e282544558d9c96c82695b0" translate="yes" xml:space="preserve">
          <source>Fetches the location of the caret.</source>
          <target state="translated">キャレットの位置を取得します。</target>
        </trans-unit>
        <trans-unit id="e68908fdee1c98fa82d00e70b45fff2b2a9b1a8f" translate="yes" xml:space="preserve">
          <source>Fetches the logical style assigned to the paragraph represented by the current position of the caret, or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">キャレットの現在の位置、または &lt;code&gt;null&lt;/code&gt; で表される段落に割り当てられた論理スタイルをフェッチします。</target>
        </trans-unit>
        <trans-unit id="cad67db5644a2e552638666f12ee4ba7f3eb3273" translate="yes" xml:space="preserve">
          <source>Fetches the logical style assigned to the paragraph represented by the given position.</source>
          <target state="translated">指定した位置で表される段落に割り当てられた論理スタイルを取得します。</target>
        </trans-unit>
        <trans-unit id="a0b167980c65c9ed0917b96382634fb820c8bc6c" translate="yes" xml:space="preserve">
          <source>Fetches the model associated with the editor.</source>
          <target state="translated">エディタに関連付けられたモデルを取得します。</target>
        </trans-unit>
        <trans-unit id="2009c4b261a8f34c0d8401bdfa2e0f3783a3e49e" translate="yes" xml:space="preserve">
          <source>Fetches the model associated with the editor. This is primarily for the UI to get at the minimal amount of state required to be a text editor. Subclasses will return the actual type of the model which will typically be something that extends Document.</source>
          <target state="translated">エディタに関連付けられたモデルを取得します。これは主にUIがテキストエディタとして必要な最小限の状態を得るためのものです。サブクラスはモデルの実際の型を返します。</target>
        </trans-unit>
        <trans-unit id="6b33c95dc75a4aa7b627a1509274b60ca1f7c925" translate="yes" xml:space="preserve">
          <source>Fetches the model associated with the view.</source>
          <target state="translated">ビューに関連付けられたモデルを取得します。</target>
        </trans-unit>
        <trans-unit id="d66f111a84f478c716cc086f53f6be88462f864d" translate="yes" xml:space="preserve">
          <source>Fetches the name of the element.</source>
          <target state="translated">要素の名前を取得します。</target>
        </trans-unit>
        <trans-unit id="1b324889e72eff5389fbff7b219110cab2c8fb46" translate="yes" xml:space="preserve">
          <source>Fetches the name of the element. If the element is used to represent some type of structure, this would be the type name.</source>
          <target state="translated">要素の名前を取得します。要素が何らかのタイプの構造体を表すために使用されている場合は、これがタイプ名となります。</target>
        </trans-unit>
        <trans-unit id="115ecd3611041b851314f8ce70daedb59febe120" translate="yes" xml:space="preserve">
          <source>Fetches the name of the keymap that will be installed/used by default for this UI.</source>
          <target state="translated">このUIのデフォルトでインストール/使用されるキーマップの名前を取得します。</target>
        </trans-unit>
        <trans-unit id="ed681c6b05979b6d9baf5151f1ae8c9a1d4e9910" translate="yes" xml:space="preserve">
          <source>Fetches the name of the keymap that will be installed/used by default for this UI. This is implemented to create a name based upon the classname. The name is the name of the class with the package prefix removed.</source>
          <target state="translated">このUIにデフォルトでインストール/使用されるキーマップの名前を取得します。これは、クラス名に基づいて名前を作成するために実装されています。名前は、パッケージの接頭辞を取り除いたクラス名です。</target>
        </trans-unit>
        <trans-unit id="5d3fb437ce19775c3fdbd1dcc2f63f0937438554" translate="yes" xml:space="preserve">
          <source>Fetches the name of the set of key-bindings.</source>
          <target state="translated">キーバインドのセットの名前を取得します。</target>
        </trans-unit>
        <trans-unit id="4723aa87c7be160b377652c2cc71bcc251014e7a" translate="yes" xml:space="preserve">
          <source>Fetches the name of the style.</source>
          <target state="translated">スタイルの名前を取得します。</target>
        </trans-unit>
        <trans-unit id="236463c39324cc4b83e5c20bcc74cb31d2cde624" translate="yes" xml:space="preserve">
          <source>Fetches the name of the style. A style is not required to be named, so &lt;code&gt;null&lt;/code&gt; is returned if there is no name associated with the style.</source>
          <target state="translated">スタイルの名前を取得します。スタイルに名前を付ける必要はないため、スタイルに関連付けられた名前がない場合は &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="8afa28712853519157f1c982d58d265de6854e88" translate="yes" xml:space="preserve">
          <source>Fetches the name of the style. A style is not required to be named, so null is returned if there is no name associated with the style.</source>
          <target state="translated">スタイルの名前を取得します。スタイルに名前を付ける必要はないので、スタイルに関連付けられた名前がない場合は null が返されます。</target>
        </trans-unit>
        <trans-unit id="84e9b02a2d5e7cf28c60525882911f154883f0dc" translate="yes" xml:space="preserve">
          <source>Fetches the name used as a key to look up properties through the UIManager.</source>
          <target state="translated">UIManager を通じてプロパティを検索するためのキーとして使用される名前を取得します。</target>
        </trans-unit>
        <trans-unit id="f9781375dda7793376266d0ac2751107a0e66945" translate="yes" xml:space="preserve">
          <source>Fetches the name used as a key to look up properties through the UIManager. This is used as a prefix to all the standard text properties.</source>
          <target state="translated">UIManager を通じてプロパティを調べるためのキーとして使われる名前をフェッチします。これは、すべての標準テキストプロパティのプレフィックスとして使用されます。</target>
        </trans-unit>
        <trans-unit id="52c044b5a272e68c293de30d11d8504023e14066" translate="yes" xml:space="preserve">
          <source>Fetches the name used as a key to lookup properties through the UIManager.</source>
          <target state="translated">UIManager を通じてプロパティを検索するためのキーとして使用される名前を取得します。</target>
        </trans-unit>
        <trans-unit id="a3ad70a89053346f93f11a3562cd1aed55550e3b" translate="yes" xml:space="preserve">
          <source>Fetches the name used as a key to lookup properties through the UIManager. This is used as a prefix to all the standard text properties.</source>
          <target state="translated">UIManager を通じてプロパティを検索するためのキーとして使われる名前をフェッチします。これは、すべての標準テキストプロパティのプレフィックスとして使用されます。</target>
        </trans-unit>
        <trans-unit id="0a01bf5f6060a4969809ecc3e9f85f602b9a47c8" translate="yes" xml:space="preserve">
          <source>Fetches the names of the styles defined.</source>
          <target state="translated">定義されたスタイルの名前を取得します。</target>
        </trans-unit>
        <trans-unit id="4759c08e32fef100dd660be2aa33b318e346ba67" translate="yes" xml:space="preserve">
          <source>Fetches the next &lt;code&gt;Element&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4615fe80ebc2dc1fd111fa8859bb0c61a0847c27" translate="yes" xml:space="preserve">
          <source>Fetches the next &lt;code&gt;Element&lt;/code&gt;. The strategy used to locate the next element is a depth-first search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a539817cedd2245e225449f1550b59068bcaf46" translate="yes" xml:space="preserve">
          <source>Fetches the next Element.</source>
          <target state="translated">次の要素を取得します。</target>
        </trans-unit>
        <trans-unit id="9c856f323b2652333deeeec2ba571b10f35be95e" translate="yes" xml:space="preserve">
          <source>Fetches the next Element. The strategy used to locate the next element is a depth-first search.</source>
          <target state="translated">次の要素を取得します。次の要素を見つけるために使用される戦略は、深さ優先検索です。</target>
        </trans-unit>
        <trans-unit id="0b92f6af9972a52295bd5fa905ebebaeb9bd0ba9" translate="yes" xml:space="preserve">
          <source>Fetches the object responsible for making highlights.</source>
          <target state="translated">ハイライトを作成するオブジェクトを取得します。</target>
        </trans-unit>
        <trans-unit id="996d7886dd2ecc3398c638ac8fa1dcfac81e2c4b" translate="yes" xml:space="preserve">
          <source>Fetches the offset from the beginning of the document that this element begins at.</source>
          <target state="translated">この要素が始まる文書の先頭からのオフセットを取得します。</target>
        </trans-unit>
        <trans-unit id="b4ddb9f3add2237ab0c3b7b491bf02ca046c0a52" translate="yes" xml:space="preserve">
          <source>Fetches the offset from the beginning of the document that this element begins at. If this element has children, this will be the offset of the first child. As a document position, there is an implied forward bias.</source>
          <target state="translated">この要素が始まる文書の先頭からのオフセットを取得します。こ の要素に子がある と き は、 こ れは最初の子のオ フ セ ッ ト にな り ます。文書の位置として、前方にバイアスがかかっています。</target>
        </trans-unit>
        <trans-unit id="9234f917eaa5e68721f046355c42137bf0735d5a" translate="yes" xml:space="preserve">
          <source>Fetches the offset from the beginning of the document that this element ends at.</source>
          <target state="translated">この要素が終了する文書の先頭からのオフセットを取得します。</target>
        </trans-unit>
        <trans-unit id="01660cc4c01d698a3cff7fa8e30ad4f627d1660c" translate="yes" xml:space="preserve">
          <source>Fetches the offset from the beginning of the document that this element ends at. If this element has children, this will be the end offset of the last child. As a document position, there is an implied backward bias.</source>
          <target state="translated">この要素が終了する文書の先頭からのオフセットを取得します。この要素に子がある場合は、最後の子の終わりのオフセットとなります。文書の位置としては、後方に偏りがあることが暗示されています。</target>
        </trans-unit>
        <trans-unit id="d31b6d4b0254f8f47f9abd1db7db6b7044e8f148" translate="yes" xml:space="preserve">
          <source>Fetches the offset of a particular child's current layout.</source>
          <target state="translated">特定の子の現在のレイアウトのオフセットを取得します。</target>
        </trans-unit>
        <trans-unit id="b0d83eacfc06b72b10f901884329a63072b28110" translate="yes" xml:space="preserve">
          <source>Fetches the parent element.</source>
          <target state="translated">親要素を取得します。</target>
        </trans-unit>
        <trans-unit id="2734e57135e9d3dd9f23250595dccb32ea217ec0" translate="yes" xml:space="preserve">
          <source>Fetches the parent element. If the element is a root level element returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">親要素をフェッチします。要素がルートレベルの場合、要素は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9c305f335d0d2c1a66e98e7d49d31c8445c2c06a" translate="yes" xml:space="preserve">
          <source>Fetches the parent keymap used to resolve key-bindings.</source>
          <target state="translated">キーバインドの解決に使用される親キーマップを取得します。</target>
        </trans-unit>
        <trans-unit id="7c00134092e9131d693d0b7a1218b806776b8973" translate="yes" xml:space="preserve">
          <source>Fetches the portion of the model for which this view is responsible.</source>
          <target state="translated">このビューが担当するモデルの部分を取得します。</target>
        </trans-unit>
        <trans-unit id="01e85046d0eabe79b652ecb6f21cb6de6d40856f" translate="yes" xml:space="preserve">
          <source>Fetches the portion of the model that this view is responsible for.</source>
          <target state="translated">このビューが担当するモデルの部分を取得します。</target>
        </trans-unit>
        <trans-unit id="49aa725d58de5f11b3de8c09046c8cf40a446b84" translate="yes" xml:space="preserve">
          <source>Fetches the previous &lt;code&gt;Element&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99c3ecab24ca2cf6c4ecc35df1be5cd5c3f8f46" translate="yes" xml:space="preserve">
          <source>Fetches the previous &lt;code&gt;Element&lt;/code&gt;. If however the current element is the last element, or the current element is &lt;code&gt;null&lt;/code&gt;, then &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ddee7282f597e16ffc4229909b4bcaea1791b01" translate="yes" xml:space="preserve">
          <source>Fetches the previous Element.</source>
          <target state="translated">前の要素を取得します。</target>
        </trans-unit>
        <trans-unit id="00c16b8574effe252449530172a0bb2f61ddb013" translate="yes" xml:space="preserve">
          <source>Fetches the previous Element. If however the current element is the last element, or the current element is null, then null is returned.</source>
          <target state="translated">前の要素を取得します。ただし、現在の要素が最後の要素である場合や、現在の要素がNULLの場合はNULLを返します。</target>
        </trans-unit>
        <trans-unit id="5ca26bb5ee81abddc4a66320c32148b63018a325" translate="yes" xml:space="preserve">
          <source>Fetches the reader for the parser to use when loading the document with HTML.</source>
          <target state="translated">HTML でドキュメントを読み込む際に使用するパーサーのリーダーを取得します。</target>
        </trans-unit>
        <trans-unit id="d9e5e515eac3c685ea23ca967c40e41113be365a" translate="yes" xml:space="preserve">
          <source>Fetches the reader for the parser to use when loading the document with HTML. This is implemented to return an instance of &lt;code&gt;HTMLDocument.HTMLReader&lt;/code&gt;. Subclasses can reimplement this method to change how the document gets structured if desired. (For example, to handle custom tags, or structurally represent character style elements.)</source>
          <target state="translated">HTMLを使用してドキュメントをロードするときに使用するパーサーのリーダーを取得します。これは、 &lt;code&gt;HTMLDocument.HTMLReader&lt;/code&gt; のインスタンスを返すために実装されています。サブクラスは、必要に応じてこのメソッドを再実装して、ドキュメントの構造を変更できます。（たとえば、カスタムタグを処理したり、文字スタイル要素を構造的に表現したりします。）</target>
        </trans-unit>
        <trans-unit id="3bd28a21e385d4189f86d1b088bc034272988500" translate="yes" xml:space="preserve">
          <source>Fetches the rule that best matches the selector given in string form.</source>
          <target state="translated">文字列形式で与えられたセレクタに最もよくマッチするルールを取得します。</target>
        </trans-unit>
        <trans-unit id="0c2151dff1d9eb481d596efca33864320a9564f3" translate="yes" xml:space="preserve">
          <source>Fetches the rule that best matches the selector given in string form. Where &lt;code&gt;selector&lt;/code&gt; is a space separated String of the element names. For example, &lt;code&gt;selector&lt;/code&gt; might be 'html body tr td''</source>
          <target state="translated">文字列形式で指定されたセレクターに最適なルールをフェッチします。ここで、 &lt;code&gt;selector&lt;/code&gt; は、スペースで区切られた要素名の文字列です。たとえば、 &lt;code&gt;selector&lt;/code&gt; は 'html body tr td' 'のようになります。</target>
        </trans-unit>
        <trans-unit id="eb869f9d90661fef2abdf8cfd38cc77661e66483" translate="yes" xml:space="preserve">
          <source>Fetches the selection state associated with this option.</source>
          <target state="translated">このオプションに関連付けられた選択状態を取得します。</target>
        </trans-unit>
        <trans-unit id="0242cd8344f602f182f1086869de6f0f16456fef" translate="yes" xml:space="preserve">
          <source>Fetches the set of commands that can be used on a text component that is using a model and view produced by this kit.</source>
          <target state="translated">このキットで作成されたモデルとビューを使用しているテキストコンポーネントで使用できるコマンドのセットを取得します。</target>
        </trans-unit>
        <trans-unit id="360bc345d5862582da173a528f372ade12a99d7d" translate="yes" xml:space="preserve">
          <source>Fetches the span of a particular child's current layout.</source>
          <target state="translated">特定の子の現在のレイアウトのスパンを取得します。</target>
        </trans-unit>
        <trans-unit id="24f6c1e7ca307db9dad4c2016a74b1901fb15b35" translate="yes" xml:space="preserve">
          <source>Fetches the structural portion of the subject that this view is mapped to.</source>
          <target state="translated">このビューがマップされているサブジェクトの構造部分を取得します。</target>
        </trans-unit>
        <trans-unit id="a4c836dab96052cb7222fd04f2a8a65770f58ae3" translate="yes" xml:space="preserve">
          <source>Fetches the structural portion of the subject that this view is mapped to. The view may not be responsible for the entire portion of the element.</source>
          <target state="translated">このビューがマップされているサブジェクトの構造部分を取得します。ビューは、要素の全部分を対象としていない場合があります。</target>
        </trans-unit>
        <trans-unit id="af886faa58d97ffe6c2ad20764e6355554fe450b" translate="yes" xml:space="preserve">
          <source>Fetches the style to use to render the given type of HTML tag.</source>
          <target state="translated">指定されたタイプのHTMLタグをレンダリングするために使用するスタイルを取得します。</target>
        </trans-unit>
        <trans-unit id="16cc03d49002c7abdc181a746969c5fc3a5670c0" translate="yes" xml:space="preserve">
          <source>Fetches the style to use to render the given type of HTML tag. The element given is representing the tag and can be used to determine the nesting for situations where the attributes will differ if nesting inside of elements.</source>
          <target state="translated">指定されたタイプのHTMLタグをレンダリングするために使用するスタイルを取得します。与えられた要素はタグを表しており、要素の中に入れ子にした場合に属性が異なる場合の入れ子を決定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="6ac515ebb3fe9b1b748e3441d1077b1078d9064d" translate="yes" xml:space="preserve">
          <source>Fetches the text component associated with this UI implementation.</source>
          <target state="translated">この UI 実装に関連付けられたテキスト コンポーネントを取得します。</target>
        </trans-unit>
        <trans-unit id="2af873b9c43c1124a60c58c144d8c04f5cf5d7ae" translate="yes" xml:space="preserve">
          <source>Fetches the text component associated with this UI implementation. This will be null until the ui has been installed.</source>
          <target state="translated">このUI実装に関連付けられたテキストコンポーネントを取得します。uiがインストールされるまでは、これはnullになります。</target>
        </trans-unit>
        <trans-unit id="1558f277cfc3e425a910d5c85d39745ea85b4054" translate="yes" xml:space="preserve">
          <source>Fetches the text component that currently has focus.</source>
          <target state="translated">現在フォーカスを持っているテキストコンポーネントを取得します。</target>
        </trans-unit>
        <trans-unit id="52d703696b3a7ce0276befb5c432da26dd651504" translate="yes" xml:space="preserve">
          <source>Fetches the text component that currently has focus. This allows actions to be shared across text components which is useful for key-bindings where a large set of actions are defined, but generally used the same way across many different components.</source>
          <target state="translated">現在フォーカスを持っているテキストコンポーネントを取得します。これにより、テキストコンポーネント間でアクションを共有することができます。これは、多くのアクションのセットが定義されているが、一般的には多くの異なるコンポーネント間で同じ方法で使用されるキーバインドの場合に便利です。</target>
        </trans-unit>
        <trans-unit id="b37e82b449d01dd9ff905006f17843e27a061ec1" translate="yes" xml:space="preserve">
          <source>Fetches the text contained within the given portion of the document.</source>
          <target state="translated">ドキュメントの指定された部分に含まれるテキストを取得します。</target>
        </trans-unit>
        <trans-unit id="845fe15de7470a9559ed680b481da55f8c7e45bc" translate="yes" xml:space="preserve">
          <source>Fetches the tile axis property.</source>
          <target state="translated">タイル軸プロパティを取得します。</target>
        </trans-unit>
        <trans-unit id="4e2ced93ccf05852cbf7a8b31361c400c6bde845" translate="yes" xml:space="preserve">
          <source>Fetches the tile axis property. This is the axis along which the child views are tiled.</source>
          <target state="translated">tile axis プロパティを取得します。これは、子ビューがタイル化される軸です。</target>
        </trans-unit>
        <trans-unit id="a4f005f129f4ae22cfdbe54c95b265abf45b2787" translate="yes" xml:space="preserve">
          <source>Fetches the user-interface factory for this text-oriented editor.</source>
          <target state="translated">このテキスト指向エディタのユーザーインターフェイスファクトリーを取得します。</target>
        </trans-unit>
        <trans-unit id="cec5f2b03d4393c52d70bdb3eb40c1bf03ea464b" translate="yes" xml:space="preserve">
          <source>Fetches the value of the given attribute.</source>
          <target state="translated">与えられた属性の値を取得します。</target>
        </trans-unit>
        <trans-unit id="9d1a4f6970f499f4aa10838d64547284f2c2c7cb" translate="yes" xml:space="preserve">
          <source>Fetches the value of the given attribute. If the value is not found locally, the search is continued upward through the resolving parent (if one exists) until the value is either found or there are no more parents. If the value is not found, null is returned.</source>
          <target state="translated">指定された属性の値を取得します。値がローカルで見つからなかった場合は、値が見つかるか、それ以上の親が存在しないかのいずれかになるまで、検索は解決する親 (存在する場合)を経由して上向きに続けられます。値が見つからない場合は、null を返します。</target>
        </trans-unit>
        <trans-unit id="9d9b986e43e8fefb6ef485fa23f85de3e0356455" translate="yes" xml:space="preserve">
          <source>Few guarantees can be made regarding node creation. Because nodes are created implicitly upon access, it may not be feasible for an implementation to determine whether a child node existed in the backing store prior to access (for example, because the backing store is unreachable or cached information is out of date). Under these circumstances, implementations are neither required to generate node change events nor prohibited from doing so.</source>
          <target state="translated">ノードの作成に関しては、ほとんど保証できません。ノードはアクセス時に暗黙のうちに生成されるため、アクセス前に子ノードがバッキングストアに存在していたかどうかを実装側で判断できない場合があります(例えば、バッキングストアにアクセスできなかったり、キャッシュされた情報が古くなっていたりするなど)。このような状況下では、実装はノード変更イベントを生成する必要はありませんし、生成することが禁止されているわけでもありません。</target>
        </trans-unit>
        <trans-unit id="405f3035bd01d0f8f864e60a2f2715d26ad1cdbe" translate="yes" xml:space="preserve">
          <source>Few programmers will have any need for this method; it is provided for the benefit of the JDK itself. (It allows a class to determine at the time that it is initialized whether assertions should be enabled.) Note that this method is not guaranteed to return the actual assertion status that was (or will be) associated with the specified class when it was (or will be) initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d69e9ce6dbaf39415a7a448ecf8ece8495d5d3" translate="yes" xml:space="preserve">
          <source>Few programmers will have any need for this method; it is provided for the benefit of the JRE itself. (It allows a class to determine at the time that it is initialized whether assertions should be enabled.) Note that this method is not guaranteed to return the actual assertion status that was (or will be) associated with the specified class when it was (or will be) initialized.</source>
          <target state="translated">このメソッドを必要とするプログラマはほとんどいないでしょう。(これにより、クラスの初期化時にアサーションを有効にすべきかどうかを判断することができます)。このメソッドは、指定したクラスが初期化された (またはされる予定の)際に関連付けられていた (またはされる予定の)実際のアサーション・ステータスを返すことを保証するものではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="22e293d2bcaf6c9b7bd775d9a0b5d601f431bd24" translate="yes" xml:space="preserve">
          <source>Fewer bytes than requested might be skipped. The actual number of bytes skipped is equal to &lt;code&gt;n&lt;/code&gt; or the result of a call to &lt;a href=&quot;#available()&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;, whichever is smaller. If &lt;code&gt;n&lt;/code&gt; is less than zero, no bytes are skipped.</source>
          <target state="translated">要求されたバイトより少ないバイトがスキップされる可能性があります。スキップされる実際のバイト数は、 &lt;code&gt;n&lt;/code&gt; または&lt;a href=&quot;#available()&quot;&gt; &lt;code&gt;available&lt;/code&gt; &lt;/a&gt;への呼び出しの結果のいずれか小さい方に等しくなります。場合 &lt;code&gt;n&lt;/code&gt; ゼロ以上であり、何バイトがスキップされません。</target>
        </trans-unit>
        <trans-unit id="7ea28b213dd21bc7955ceb52a1714af4910e605f" translate="yes" xml:space="preserve">
          <source>Fewer bytes than requested might be skipped. The actual number of bytes skipped is equal to &lt;code&gt;n&lt;/code&gt; or the result of a call to &lt;a href=&quot;cipherinputstream#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;, whichever is smaller. If &lt;code&gt;n&lt;/code&gt; is less than zero, no bytes are skipped.</source>
          <target state="translated">要求されたよりも少ないバイトがスキップされる場合があります。スキップされた実際のバイト数は、 &lt;code&gt;n&lt;/code&gt; または&lt;a href=&quot;cipherinputstream#available--&quot;&gt; &lt;code&gt;available&lt;/code&gt; &lt;/a&gt;への呼び出しの結果のいずれか小さい方に等しくなります。場合 &lt;code&gt;n&lt;/code&gt; ゼロ以上であり、何バイトがスキップされません。</target>
        </trans-unit>
        <trans-unit id="410d7d0a923ff700ee51cf42785c192a32289c63" translate="yes" xml:space="preserve">
          <source>Fidelity</source>
          <target state="translated">Fidelity</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
