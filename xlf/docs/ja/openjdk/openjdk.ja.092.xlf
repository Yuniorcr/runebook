<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="4763a9ecd486025e4d2f3721af996066ac33a40e" translate="yes" xml:space="preserve">
          <source>Identifies the attributes that are unsupported for a print request in the context of a particular DocFlavor. This method is useful for validating a potential print job and identifying the specific attributes which cannot be supported. It is important to supply only a supported DocFlavor or an IllegalArgumentException will be thrown. If the return value from this method is null, all attributes are supported.</source>
          <target state="translated">特定のDocFlavorのコンテキストで、印刷要求に対してサポートされていない属性を識別します。このメソッドは、潜在的な印刷ジョブを検証したり、サポートされていない特定の属性を特定したりするのに便利です。サポートされているDocFlavorのみを指定しないと、IllegalArgumentExceptionがスローされます。このメソッドの戻り値がnullの場合、すべての属性がサポートされています。</target>
        </trans-unit>
        <trans-unit id="e29f496c3f456820ee10c81956796ec487e44240" translate="yes" xml:space="preserve">
          <source>Identifies the column of the cell being edited.</source>
          <target state="translated">編集中のセルの列を識別します。</target>
        </trans-unit>
        <trans-unit id="703c3afbde758e774437bc323b1693360cdd4baa" translate="yes" xml:space="preserve">
          <source>Identifies the deletion of rows and/or columns.</source>
          <target state="translated">行および/または列の削除を識別します。</target>
        </trans-unit>
        <trans-unit id="60c1e07980f5b52bc5c14a70128194ef7e7dfe73" translate="yes" xml:space="preserve">
          <source>Identifies the focus change event as temporary or permanent.</source>
          <target state="translated">フォーカス変更イベントを一時的なものか永続的なものかを識別します。</target>
        </trans-unit>
        <trans-unit id="2135de32921487f93b0f024f77cef6796558ef06" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;ARRAY&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;ARRAY&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="b8cc5f6a758c760582e2fdedfc5273ae9a232b3f" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;BIGINT&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;BIGINT&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="614c7b06b077206da60786b2df54b5feaadfbc10" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;BINARY&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;BINARY&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="6a42917ae9e487899b4ce01dc77bc6d81d4f40cf" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;BIT&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;BIT&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="aa503f381bf148559d93656d7c20bf2086c66326" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;BLOB&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;BLOB&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="7c3844d028f3c49b58e76352bd44ce17851c42bf" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;BOOLEAN&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;BOOLEAN&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="909d4f82a0aa011074d75f3d5920742c8948332a" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;CHAR&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;CHAR&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="79f94f2d3db1e10a5d0da3f2bd144e22c66125c3" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;CLOB&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;CLOB&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="1c15b77bde6f51aa541790a5c4130207d0fb11b3" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;DATALINK&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;DATALINK&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="eceba3d91171b8a1eca59d4d33a9b2f7b0ce24f5" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;DATE&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;DATE&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="74fb7b20ddcaf5e9685fcf86b140f3190f51e345" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;DECIMAL&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;DECIMAL&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="688c544b63e8873879dd2a2ef366f61c0e7546aa" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;DISTINCT&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;DISTINCT&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="ccea0d6e0f9e2d1798f3a419588c6dbecc4cc031" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;DOUBLE&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;DOUBLE&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="ebb54ca4d563f04c7ee7070e4b3395006e3e4084" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;FLOAT&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;FLOAT&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="112d7d8b208a46016abcd4cf9a05a0e0c449a3cc" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;INTEGER&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;INTEGER&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="72b2c7c1d580a52ef8b189e7f6e5878d294baae4" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;LONGNVARCHAR&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;LONGNVARCHAR&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="27fef305fe3e21a19856194cc365168bc4be4443" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;LONGVARBINARY&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;LONGVARBINARY&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="0b8d6474e6986e84ec72f03d25cbbc2ae7ea156d" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;LONGVARCHAR&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;LONGVARCHAR&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="09e14cc09b2b8c819de78e99f2d1a9aecdf78fe9" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;NCHAR&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;NCHAR&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="1740cd8b83b39847276c4e3c69bd4cf9532bd47a" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;NCLOB&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;NCLOB&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="caf59a1e3d20876f7f01079945e21163f41c17d4" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;NUMERIC&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;NUMERIC&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="8156948aa7428d60e81aa317561caeed6e0a2fe5" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;NVARCHAR&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;NVARCHAR&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="644c208d0f728cefb9962647b49440a9c797b09a" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;REAL&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;REAL&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="82536ef282ecd1282580fe12142330f04432e04c" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;REF&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;REF&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="72a5e67d539cadc8d1c93fe3f769a6e8a6509689" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;REF_CURSOR&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;REF_CURSOR&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="6fb53f3fa45032b92d2b78916761486e60886165" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;SMALLINT&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;SMALLINT&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="dc8aca5ea937fcc007281e4fd111a5f93667ceea" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;SQLXML&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;SQLXML&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="f62701dd7d4c5d444777c4419d6dcb9a129553ef" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;STRUCT&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;STRUCT&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="c782b926a2a3e80b6574788fc3946edb70e49997" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;TIME&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;TIME&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="a22f0c9396551e5cfc27a65e5ecb0149e108e2a8" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;TIMESTAMP&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;TIMESTAMP&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="b54a9a09860af92b250373d4616d2daa293edc00" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;TIMESTAMP_WITH_TIMEZONE&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;TIMESTAMP_WITH_TIMEZONE&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="d1b919932729232f0663eb4272e21d52a8008234" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;TIME_WITH_TIMEZONE&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;TIME_WITH_TIMEZONE&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="3beb0c5c7419e8ebb83fe992ff37747a6e3a1e2c" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;TINYINT&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;TINYINT&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="effa86850e3c4d5a634962a15ab894536b0b8692" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;VARBINARY&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;VARBINARY&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="d260147031f016ef0678c4ff5972d537e30c4c97" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL type &lt;code&gt;VARCHAR&lt;/code&gt;.</source>
          <target state="translated">汎用SQLタイプ &lt;code&gt;VARCHAR&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="f581f7153d160e3dd6da2963700f65ccbd982afa" translate="yes" xml:space="preserve">
          <source>Identifies the generic SQL value &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">汎用SQL値 &lt;code&gt;NULL&lt;/code&gt; を識別します。</target>
        </trans-unit>
        <trans-unit id="7e05f5026bfc91b63859bb6497f2a24278a06724" translate="yes" xml:space="preserve">
          <source>Identifies the group the button belongs to -- needed for radio buttons, which are mutually exclusive within their group.</source>
          <target state="translated">ボタンが所属するグループを識別します。</target>
        </trans-unit>
        <trans-unit id="a1242edea0194d8e8f5f67b017524279f59655a9" translate="yes" xml:space="preserve">
          <source>Identifies the header row.</source>
          <target state="translated">ヘッダー行を識別します。</target>
        </trans-unit>
        <trans-unit id="186a84b67d52316836f8eddb5e60f642b669307c" translate="yes" xml:space="preserve">
          <source>Identifies the horizontal scroll bar policy property.</source>
          <target state="translated">水平スクロールバーポリシープロパティを識別します。</target>
        </trans-unit>
        <trans-unit id="eedb4d879e4c72f2d8457d04bd9bc34ed419d1a4" translate="yes" xml:space="preserve">
          <source>Identifies the insertion of new rows and/or columns.</source>
          <target state="translated">新しい行や列の挿入を識別します。</target>
        </trans-unit>
        <trans-unit id="f708858734adaf51cedcf1e16105cfc107683560" translate="yes" xml:space="preserve">
          <source>Identifies the leading edge of text for use with left-to-right and right-to-left languages.</source>
          <target state="translated">左から右、右から左の言語で使用するために、テキストの先端を識別します。</target>
        </trans-unit>
        <trans-unit id="2b0aef1d3dfa0827241b03a41f99044cb99a3077" translate="yes" xml:space="preserve">
          <source>Identifies the leading edge of text for use with left-to-right and right-to-left languages. Used by buttons and labels.</source>
          <target state="translated">左から右へ、右から左への言語で使用するために、テキストの先頭端を識別します。ボタンやラベルで使用されます。</target>
        </trans-unit>
        <trans-unit id="bc4b2f6f17ab1fdb531640104ff880af9601d688" translate="yes" xml:space="preserve">
          <source>Identifies the lower leading edge corner of the viewport.</source>
          <target state="translated">ビューポートの下端の角を識別します。</target>
        </trans-unit>
        <trans-unit id="06825cdfea7f5d81247a155442185743278b6713" translate="yes" xml:space="preserve">
          <source>Identifies the lower leading edge corner of the viewport. The leading edge is determined relative to the Scroll Pane's ComponentOrientation property.</source>
          <target state="translated">ビューポートの下端のコーナーを識別します。リーディング エッジは、スクロール ペインの ComponentOrientation プロパティを基準にして決定されます。</target>
        </trans-unit>
        <trans-unit id="c29b75411447e432ab405c31450e665b10d10799" translate="yes" xml:space="preserve">
          <source>Identifies the lower left corner of the viewport.</source>
          <target state="translated">ビューポートの左下隅を識別します。</target>
        </trans-unit>
        <trans-unit id="1617f8235eb03ce14dd8e145a9d0409bb6e1914d" translate="yes" xml:space="preserve">
          <source>Identifies the lower right corner of the viewport.</source>
          <target state="translated">ビューポートの右下隅を識別します。</target>
        </trans-unit>
        <trans-unit id="528576255bd5f81db22e8bb75c000110aef63cd8" translate="yes" xml:space="preserve">
          <source>Identifies the lower trailing edge corner of the viewport.</source>
          <target state="translated">ビューポートの下端のコーナーを識別します。</target>
        </trans-unit>
        <trans-unit id="6592332ea48942987ad6bf34ba275450d4fd167a" translate="yes" xml:space="preserve">
          <source>Identifies the lower trailing edge corner of the viewport. The trailing edge is determined relative to the Scroll Pane's ComponentOrientation property.</source>
          <target state="translated">ビューポートの下端のコーナーを識別します。後縁は、スクロール ペインの ComponentOrientation プロパティを基準にして決定されます。</target>
        </trans-unit>
        <trans-unit id="08db4777ff8b849d78b546a081b9ae45cccedf2a" translate="yes" xml:space="preserve">
          <source>Identifies the menu item as &quot;armed&quot;.</source>
          <target state="translated">メニュー項目を「武装している」と識別します。</target>
        </trans-unit>
        <trans-unit id="7f4b1c10c90ab16860e12d755929969a4f86d552" translate="yes" xml:space="preserve">
          <source>Identifies the menu item as &quot;armed&quot;. If the mouse button is released while it is over this item, the menu's action event will fire. If the mouse button is released elsewhere, the event will not fire and the menu item will be disarmed.</source>
          <target state="translated">メニュー項目を &quot;armed&quot; として識別します。この項目の上でマウスボタンを離すと、メニューのアクションイベントが発生します。マウスボタンが他の場所で離された場合、イベントは発生せず、メニュー項目は武装解除されます。</target>
        </trans-unit>
        <trans-unit id="2f6a082ce45475078db682c126ddf051485f0cdd" translate="yes" xml:space="preserve">
          <source>Identifies the next direction in a sequence.</source>
          <target state="translated">シーケンスの次の方向を識別します。</target>
        </trans-unit>
        <trans-unit id="3213345d95a22bb64185a62fa1ca36fc5e73505d" translate="yes" xml:space="preserve">
          <source>Identifies the previous direction in a sequence.</source>
          <target state="translated">シーケンスの前の方向を識別します。</target>
        </trans-unit>
        <trans-unit id="6e925a017ab7df03e05e4c08209846a13bf25256" translate="yes" xml:space="preserve">
          <source>Identifies the removal of one or more contiguous items from the list</source>
          <target state="translated">リストから1つ以上の連続した項目の削除を識別します。</target>
        </trans-unit>
        <trans-unit id="04dd86e28a61d27421ccc3bb4e6dfecac6133340" translate="yes" xml:space="preserve">
          <source>Identifies the removal of rows or columns.</source>
          <target state="translated">行または列の削除を識別します。</target>
        </trans-unit>
        <trans-unit id="0aebcc8eabde7a219eceaced07db5eeaa6625314" translate="yes" xml:space="preserve">
          <source>Identifies the row of the cell being edited.</source>
          <target state="translated">編集中のセルの行を識別します。</target>
        </trans-unit>
        <trans-unit id="279969b040e0c1c9de8cd0eeddd40bfcccacd407" translate="yes" xml:space="preserve">
          <source>Identifies the set of all public members of a class or interface, including inherited members.</source>
          <target state="translated">継承されたメンバを含む、クラスまたはインターフェイスのすべてのパブリック・メンバのセットを識別します。</target>
        </trans-unit>
        <trans-unit id="760869607fcf6b2f8f6104babf8f7e5d60ecfcbb" translate="yes" xml:space="preserve">
          <source>Identifies the set of declared members of a class or interface.</source>
          <target state="translated">クラスまたはインタフェースの宣言されたメンバのセットを識別します。</target>
        </trans-unit>
        <trans-unit id="eb1a3984b1e7f278088af0cc739d40b0ccf92587" translate="yes" xml:space="preserve">
          <source>Identifies the set of declared members of a class or interface. Inherited members are not included.</source>
          <target state="translated">クラスまたはインターフェイスの宣言されたメンバーのセットを識別します。継承されたメンバは含まれません。</target>
        </trans-unit>
        <trans-unit id="a6b7392b078e780645e3998074814d989ba71cc6" translate="yes" xml:space="preserve">
          <source>Identifies the trailing edge of text for use with left-to-right and right-to-left languages.</source>
          <target state="translated">左から右、右から左の言語で使用するためのテキストの後縁を識別します。</target>
        </trans-unit>
        <trans-unit id="a43f8ee08fb02ad60ae0fcf89a95877b09e585eb" translate="yes" xml:space="preserve">
          <source>Identifies the trailing edge of text for use with left-to-right and right-to-left languages. Used by buttons and labels.</source>
          <target state="translated">左から右へ、右から左への言語で使用するために、テキストの後縁を識別します。ボタンやラベルで使用されます。</target>
        </trans-unit>
        <trans-unit id="99f5db1162e314406e4e5dfa507d7827eab15b60" translate="yes" xml:space="preserve">
          <source>Identifies the upper leading edge corner of the viewport.</source>
          <target state="translated">ビューポートの上端の角を識別します。</target>
        </trans-unit>
        <trans-unit id="1e4875e073b3cfa210e69893ca375f6684af6b57" translate="yes" xml:space="preserve">
          <source>Identifies the upper leading edge corner of the viewport. The leading edge is determined relative to the Scroll Pane's ComponentOrientation property.</source>
          <target state="translated">ビューポートの上端の角を識別します。リーディング エッジは、スクロール ペインの ComponentOrientation プロパティを基準にして決定されます。</target>
        </trans-unit>
        <trans-unit id="20331849bc92a3e903286540eb493261e7c238a9" translate="yes" xml:space="preserve">
          <source>Identifies the upper left corner of the viewport.</source>
          <target state="translated">ビューポートの左上隅を識別します。</target>
        </trans-unit>
        <trans-unit id="3dd5baaf77bf4f7f82382c1e1051c0e6d1d80908" translate="yes" xml:space="preserve">
          <source>Identifies the upper right corner of the viewport.</source>
          <target state="translated">ビューポートの右上隅を識別します。</target>
        </trans-unit>
        <trans-unit id="d9eb36eeb5f69c2faa753bd9d38c0c80e1786d96" translate="yes" xml:space="preserve">
          <source>Identifies the upper trailing edge corner of the viewport.</source>
          <target state="translated">ビューポートの上端の後縁の角を識別します。</target>
        </trans-unit>
        <trans-unit id="9423e84cedf47a58cb807d571058f645143870f3" translate="yes" xml:space="preserve">
          <source>Identifies the upper trailing edge corner of the viewport. The trailing edge is determined relative to the Scroll Pane's ComponentOrientation property.</source>
          <target state="translated">ビューポートのトレーリング エッジの上端の角を識別します。後縁は、スクロール ペインの ComponentOrientation プロパティを基準にして決定されます。</target>
        </trans-unit>
        <trans-unit id="f87a5ec7091c6befaf9698907e1ad1f8aa533772" translate="yes" xml:space="preserve">
          <source>Identifies the vertical scroll bar policy property.</source>
          <target state="translated">垂直スクロールバーポリシープロパティを識別します。</target>
        </trans-unit>
        <trans-unit id="87e72ffc3c95b082611843e363f6ac1d46e5c975" translate="yes" xml:space="preserve">
          <source>Identifies user's directory change.</source>
          <target state="translated">ユーザのディレクトリ変更を識別します。</target>
        </trans-unit>
        <trans-unit id="9d6c252095e6713c748c32f9a51e124772a6a357" translate="yes" xml:space="preserve">
          <source>Identifies whether a the AcceptAllFileFilter is used or not.</source>
          <target state="translated">AcceptAllFileFilterを使用しているかどうかを識別します。</target>
        </trans-unit>
        <trans-unit id="c13130ff97a80aba150517b02c5248084a11ac61" translate="yes" xml:space="preserve">
          <source>Identify a font resource of type TRUETYPE.</source>
          <target state="translated">TRUETYPE 型のフォントリソースを識別します。</target>
        </trans-unit>
        <trans-unit id="47760858b09034612c5a65d1b2c3d77bb11e13c5" translate="yes" xml:space="preserve">
          <source>Identify a font resource of type TRUETYPE. Used to specify a TrueType font resource to the &lt;a href=&quot;#createFont(int,java.io.InputStream)&quot;&gt;&lt;code&gt;createFont(int, java.io.InputStream)&lt;/code&gt;&lt;/a&gt; method. The TrueType format was extended to become the OpenType format, which adds support for fonts with Postscript outlines, this tag therefore references these fonts, as well as those with TrueType outlines.</source>
          <target state="translated">タイプTRUETYPEのフォントリソースを識別します。TrueTypeフォントリソースを&lt;a href=&quot;#createFont(int,java.io.InputStream)&quot;&gt; &lt;code&gt;createFont(int, java.io.InputStream)&lt;/code&gt; &lt;/a&gt;メソッドに指定するために使用されます。TrueType形式が拡張されてOpenType形式になり、Postscriptアウトラインを持つフォントのサポートが追加されました。したがって、このタグは、TrueTypeアウトラインを持つフォントだけでなく、これらのフォントも参照します。</target>
        </trans-unit>
        <trans-unit id="30dc4b68edd86300505c95516c62c6e55b0ac0bb" translate="yes" xml:space="preserve">
          <source>Identify a font resource of type TYPE1.</source>
          <target state="translated">TYPE1タイプのフォントリソースを識別します。</target>
        </trans-unit>
        <trans-unit id="359d0209cd6f71dfe19c6cb928b19ede972b383b" translate="yes" xml:space="preserve">
          <source>Identify a font resource of type TYPE1. Used to specify a Type1 font resource to the &lt;a href=&quot;#createFont(int,java.io.InputStream)&quot;&gt;&lt;code&gt;createFont(int, java.io.InputStream)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">タイプTYPE1のフォントリソースを識別します。Type1フォントリソースを&lt;a href=&quot;#createFont(int,java.io.InputStream)&quot;&gt; &lt;code&gt;createFont(int, java.io.InputStream)&lt;/code&gt; &lt;/a&gt;メソッドに指定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="42c248d3ebfc85ce8bc00d5f353dcd70d64d391c" translate="yes" xml:space="preserve">
          <source>Identities</source>
          <target state="translated">Identities</target>
        </trans-unit>
        <trans-unit id="7e5a975b6add84fd53e3710a9ceac15eb06663b7" translate="yes" xml:space="preserve">
          <source>Identity</source>
          <target state="translated">Identity</target>
        </trans-unit>
        <trans-unit id="0b0f6a0f64fcafde121508c78eb880d25fff6b54" translate="yes" xml:space="preserve">
          <source>Identity.addCertificate()</source>
          <target state="translated">Identity.addCertificate()</target>
        </trans-unit>
        <trans-unit id="6ea74d1f4045f821b7d0a6d3696620b259fe3497" translate="yes" xml:space="preserve">
          <source>Identity.certificates()</source>
          <target state="translated">Identity.certificates()</target>
        </trans-unit>
        <trans-unit id="c1c3655062b87f1051e4fd09134b18e000061de8" translate="yes" xml:space="preserve">
          <source>Identity.equals()</source>
          <target state="translated">Identity.equals()</target>
        </trans-unit>
        <trans-unit id="faaa351d28829d41d6d30ee90b779a82067052df" translate="yes" xml:space="preserve">
          <source>Identity.getInfo()</source>
          <target state="translated">Identity.getInfo()</target>
        </trans-unit>
        <trans-unit id="a1ba07b3e796d24cb197db9683a305403dca8b24" translate="yes" xml:space="preserve">
          <source>Identity.getName()</source>
          <target state="translated">Identity.getName()</target>
        </trans-unit>
        <trans-unit id="7e06df9d60785c32f9fa9cc12af8f3ce5a0bd36b" translate="yes" xml:space="preserve">
          <source>Identity.getPublicKey()</source>
          <target state="translated">Identity.getPublicKey()</target>
        </trans-unit>
        <trans-unit id="4e3247620e189bd06c4d7d85b8b7a7b3b65edb55" translate="yes" xml:space="preserve">
          <source>Identity.getScope()</source>
          <target state="translated">Identity.getScope()</target>
        </trans-unit>
        <trans-unit id="f6a65fdfc6cfd35d24ccf4396b97e6a57a8b4fe3" translate="yes" xml:space="preserve">
          <source>Identity.hashCode()</source>
          <target state="translated">Identity.hashCode()</target>
        </trans-unit>
        <trans-unit id="31e52c542b2d1364e6c70c9ea2c14d7637efaf28" translate="yes" xml:space="preserve">
          <source>Identity.identityEquals()</source>
          <target state="translated">Identity.identityEquals()</target>
        </trans-unit>
        <trans-unit id="478e7e6a28e330c5310ec2387e8dc67901a7a20c" translate="yes" xml:space="preserve">
          <source>Identity.removeCertificate()</source>
          <target state="translated">Identity.removeCertificate()</target>
        </trans-unit>
        <trans-unit id="4dbdb0d9b5aa198b95bae16d550e5f55b741e668" translate="yes" xml:space="preserve">
          <source>Identity.setInfo()</source>
          <target state="translated">Identity.setInfo()</target>
        </trans-unit>
        <trans-unit id="a16316fad14e99082cd014e6bc3e0ce96639b6bb" translate="yes" xml:space="preserve">
          <source>Identity.setPublicKey()</source>
          <target state="translated">Identity.setPublicKey()</target>
        </trans-unit>
        <trans-unit id="4adaf7d86aa6deaf8025145032c0eba7214267fb" translate="yes" xml:space="preserve">
          <source>Identity.toString()</source>
          <target state="translated">Identity.toString()</target>
        </trans-unit>
        <trans-unit id="055806d9b9778fca80748c4d613ac38948290c00" translate="yes" xml:space="preserve">
          <source>IdentityHashMap</source>
          <target state="translated">IdentityHashMap</target>
        </trans-unit>
        <trans-unit id="713f8c19951c04a5daa1152aa553d7ed32d77d3e" translate="yes" xml:space="preserve">
          <source>IdentityHashMap.clear()</source>
          <target state="translated">IdentityHashMap.clear()</target>
        </trans-unit>
        <trans-unit id="8c070c7c5f42951c49a393954f80385512f9b1e0" translate="yes" xml:space="preserve">
          <source>IdentityHashMap.clone()</source>
          <target state="translated">IdentityHashMap.clone()</target>
        </trans-unit>
        <trans-unit id="96a90590285faa127d72287a45aa55c1e0bc46b3" translate="yes" xml:space="preserve">
          <source>IdentityHashMap.containsKey()</source>
          <target state="translated">IdentityHashMap.containsKey()</target>
        </trans-unit>
        <trans-unit id="733f4ef120f1306bd77fdde589a5d752a4836e00" translate="yes" xml:space="preserve">
          <source>IdentityHashMap.containsValue()</source>
          <target state="translated">IdentityHashMap.containsValue()</target>
        </trans-unit>
        <trans-unit id="c0f330d6932dfba39e84e1584955a4db00ede64c" translate="yes" xml:space="preserve">
          <source>IdentityHashMap.entrySet()</source>
          <target state="translated">IdentityHashMap.entrySet()</target>
        </trans-unit>
        <trans-unit id="6be07b11d503f4af9b5d58ca5b4253be49c7f84e" translate="yes" xml:space="preserve">
          <source>IdentityHashMap.equals()</source>
          <target state="translated">IdentityHashMap.equals()</target>
        </trans-unit>
        <trans-unit id="dae3e2eb70e68c919c0c287c3311e7ccf4c80fed" translate="yes" xml:space="preserve">
          <source>IdentityHashMap.forEach()</source>
          <target state="translated">IdentityHashMap.forEach()</target>
        </trans-unit>
        <trans-unit id="79afac5401c0b0f66bd83b885c5d59e9a3e50a66" translate="yes" xml:space="preserve">
          <source>IdentityHashMap.get()</source>
          <target state="translated">IdentityHashMap.get()</target>
        </trans-unit>
        <trans-unit id="87765b1fdf557f96a1a85007be7576a9f8d4bfa5" translate="yes" xml:space="preserve">
          <source>IdentityHashMap.hashCode()</source>
          <target state="translated">IdentityHashMap.hashCode()</target>
        </trans-unit>
        <trans-unit id="1544072f40ea89d35e6d678e43d3ad3ba40011d3" translate="yes" xml:space="preserve">
          <source>IdentityHashMap.isEmpty()</source>
          <target state="translated">IdentityHashMap.isEmpty()</target>
        </trans-unit>
        <trans-unit id="225b132ff9e5dbc36da9d9d1926cf0048a66b0cd" translate="yes" xml:space="preserve">
          <source>IdentityHashMap.keySet()</source>
          <target state="translated">IdentityHashMap.keySet()</target>
        </trans-unit>
        <trans-unit id="8882eaedfea32a0e13d39c1cc7901474888b9db5" translate="yes" xml:space="preserve">
          <source>IdentityHashMap.put()</source>
          <target state="translated">IdentityHashMap.put()</target>
        </trans-unit>
        <trans-unit id="2e9ed9e2deb69dbb764267b673db74f0077c0c38" translate="yes" xml:space="preserve">
          <source>IdentityHashMap.putAll()</source>
          <target state="translated">IdentityHashMap.putAll()</target>
        </trans-unit>
        <trans-unit id="1ca65aebcd62c9e93f3f356bd43885b60b4b67b3" translate="yes" xml:space="preserve">
          <source>IdentityHashMap.remove()</source>
          <target state="translated">IdentityHashMap.remove()</target>
        </trans-unit>
        <trans-unit id="c3ff19bc854690a18b003e767eba4733c132c871" translate="yes" xml:space="preserve">
          <source>IdentityHashMap.replaceAll()</source>
          <target state="translated">IdentityHashMap.replaceAll()</target>
        </trans-unit>
        <trans-unit id="67441c4570c0198d17c64036002c48723ff1db9a" translate="yes" xml:space="preserve">
          <source>IdentityHashMap.size()</source>
          <target state="translated">IdentityHashMap.size()</target>
        </trans-unit>
        <trans-unit id="f4161f937b9486a8f03e53d96ccbb8e942d78a08" translate="yes" xml:space="preserve">
          <source>IdentityHashMap.values()</source>
          <target state="translated">IdentityHashMap.values()</target>
        </trans-unit>
        <trans-unit id="1e7d4329d8f3f5782817488e54fad55d6ce49ca5" translate="yes" xml:space="preserve">
          <source>IdentityScope</source>
          <target state="translated">IdentityScope</target>
        </trans-unit>
        <trans-unit id="363c8b6dfb6af4e6c2ee54050ae0902a9324c54a" translate="yes" xml:space="preserve">
          <source>IdentityScope.addIdentity()</source>
          <target state="translated">IdentityScope.addIdentity()</target>
        </trans-unit>
        <trans-unit id="33bf28e5acb84614d4449a14c1834ce39a2e8a93" translate="yes" xml:space="preserve">
          <source>IdentityScope.getIdentity()</source>
          <target state="translated">IdentityScope.getIdentity()</target>
        </trans-unit>
        <trans-unit id="eecb98656d916b14d38fe225678b23e99a605a00" translate="yes" xml:space="preserve">
          <source>IdentityScope.getSystemScope()</source>
          <target state="translated">IdentityScope.getSystemScope()</target>
        </trans-unit>
        <trans-unit id="baa5e518befa18000269294ed54f7568738f8112" translate="yes" xml:space="preserve">
          <source>IdentityScope.identities()</source>
          <target state="translated">IdentityScope.identities()</target>
        </trans-unit>
        <trans-unit id="95712e173fbfc4f03c5431e974418ea774b27bdc" translate="yes" xml:space="preserve">
          <source>IdentityScope.removeIdentity()</source>
          <target state="translated">IdentityScope.removeIdentity()</target>
        </trans-unit>
        <trans-unit id="c40ec0d7574e40d356fa3dea6401d406743778ba" translate="yes" xml:space="preserve">
          <source>IdentityScope.setSystemScope()</source>
          <target state="translated">IdentityScope.setSystemScope()</target>
        </trans-unit>
        <trans-unit id="ab6e25a8a5e10b3f2f0298156519cb83b53c7374" translate="yes" xml:space="preserve">
          <source>IdentityScope.size()</source>
          <target state="translated">IdentityScope.size()</target>
        </trans-unit>
        <trans-unit id="9df777ebf16a06cabf53313d962e4eedb98ce4f0" translate="yes" xml:space="preserve">
          <source>IdentityScope.toString()</source>
          <target state="translated">IdentityScope.toString()</target>
        </trans-unit>
        <trans-unit id="3541f48427fcdd81e30c7c16278c379163644459" translate="yes" xml:space="preserve">
          <source>Ideographic</source>
          <target state="translated">Ideographic</target>
        </trans-unit>
        <trans-unit id="751c68a3471b1c791efaee0a8e7c24ea0c266efd" translate="yes" xml:space="preserve">
          <source>If</source>
          <target state="translated">If</target>
        </trans-unit>
        <trans-unit id="4dae338ae2b9fef6bd50143f5aeea08c3a588a3e" translate="yes" xml:space="preserve">
          <source>If &quot;CANONICAL&quot; is specified as the format, this method returns an RFC 2253 conformant string representation with the following additional canonicalizations:</source>
          <target state="translated">フォーマットとして &quot;CANONICAL &quot;が指定された場合、このメソッドは、以下の追加のcanonicalizationを持つRFC 2253準拠の文字列表現を返します。</target>
        </trans-unit>
        <trans-unit id="633424989c4e096f35ed3b0fc7d931c788bac3f8" translate="yes" xml:space="preserve">
          <source>If &quot;RFC1779&quot; is specified as the format, this method emits the attribute type keywords defined in RFC 1779 (CN, L, ST, O, OU, C, STREET). Any other attribute type is emitted as an OID.</source>
          <target state="translated">フォーマットとして &quot;RFC1779 &quot;が指定された場合、このメソッドはRFC1779で定義されている属性型キーワード(CN,L,ST,O,OU,C,STREET)を出力する。その他の属性型はすべてOIDとして出力されます。</target>
        </trans-unit>
        <trans-unit id="3ca45018ebba62fdeb3e3b4a1c50c1cc9ffa64a6" translate="yes" xml:space="preserve">
          <source>If &quot;RFC2253&quot; is specified as the format, this method emits the attribute type keywords defined in RFC 2253 (CN, L, ST, O, OU, C, STREET, DC, UID). Any other attribute type is emitted as an OID. Under a strict reading, RFC 2253 only specifies a UTF-8 string representation. The String returned by this method is the Unicode string achieved by decoding this UTF-8 representation.</source>
          <target state="translated">フォーマットとして &quot;RFC2253 &quot;が指定された場合、このメソッドはRFC2253で定義された属性型キーワード(CN,L,ST,O,OU,C,STREET,DC,UID)を出力する。その他の属性型はすべてOIDとして出力されます。厳密な読み方をすると、RFC 2253ではUTF-8の文字列表現のみが指定されています。このメソッドが返す String は、この UTF-8 表現をデコードして得られる Unicode 文字列です。</target>
        </trans-unit>
        <trans-unit id="abd2df33fc4ef6bb998cd541a6fa509101894ef5" translate="yes" xml:space="preserve">
          <source>If &quot;java.util.logging.config.class&quot; property is &lt;b&gt;not&lt;/b&gt; set, then the &quot;java.util.logging.config.file&quot; system property can be used to specify a properties file (in java.util.Properties format). The initial logging configuration will be read from this file.</source>
          <target state="translated">「java.util.logging.config.class」プロパティが設定されて&lt;b&gt;いない&lt;/b&gt;場合、「java.util.logging.config.file」システムプロパティを使用して、プロパティファイル（java.util.Properties形式）を指定できます。初期ログ設定はこのファイルから読み込まれます。</target>
        </trans-unit>
        <trans-unit id="c4b5bd56bcf23a13a227d6c6904fe4ae0ffaac5f" translate="yes" xml:space="preserve">
          <source>If &quot;java.util.logging.config.class&quot; system property is &lt;b&gt;not&lt;/b&gt; set, then this method will read the initial configuration from a properties file and calls the &lt;a href=&quot;#readConfiguration(java.io.InputStream)&quot;&gt;&lt;code&gt;readConfiguration(InputStream)&lt;/code&gt;&lt;/a&gt; method to initialize the configuration. The &quot;java.util.logging.config.file&quot; system property can be used to specify the properties file that will be read as the initial configuration; if not set, then the LogManager default configuration is used. The default configuration is typically loaded from the properties file &quot;&lt;code&gt;conf/logging.properties&lt;/code&gt;&quot; in the Java installation directory.</source>
          <target state="translated">「java.util.logging.config.class」システムプロパティが設定されて&lt;b&gt;いない&lt;/b&gt;場合、このメソッドはプロパティファイルから初期構成を読み取り、&lt;a href=&quot;#readConfiguration(java.io.InputStream)&quot;&gt; &lt;code&gt;readConfiguration(InputStream)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して構成を初期化します。「java.util.logging.config.file」システムプロパティを使用して、初期構成として読み取られるプロパティファイルを指定できます。設定されていない場合は、LogManagerのデフォルト構成が使用されます。デフォルト設定は通常、Javaインストールディレクトリのプロパティファイル「 &lt;code&gt;conf/logging.properties&lt;/code&gt; 」からロードされます。</target>
        </trans-unit>
        <trans-unit id="be290b8703d48cd7f67a8837cbf1bc5b0b1384ae" translate="yes" xml:space="preserve">
          <source>If (DELTA &amp;gt; 0) we are in expand mode where:</source>
          <target state="translated">（DELTA&amp;gt; 0）の場合、展開モードになります。ここで、</target>
        </trans-unit>
        <trans-unit id="f1170a9c44bbd28d95723bc52e3c9c0a7d15ba5f" translate="yes" xml:space="preserve">
          <source>If (DELTA &amp;lt; 0) we are in shrink mode where:</source>
          <target state="translated">（DELTA &amp;lt;0）の場合、シュリンクモードになります。</target>
        </trans-unit>
        <trans-unit id="a83d0c326b1b263ede1d6ce2acf5f57596274848" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#UNIX_LINES&quot;&gt;&lt;code&gt;UNIX_LINES&lt;/code&gt;&lt;/a&gt; mode is activated, then the only line terminators recognized are newline characters.</source>
          <target state="translated">場合&lt;a href=&quot;#UNIX_LINES&quot;&gt; &lt;code&gt;UNIX_LINES&lt;/code&gt; の&lt;/a&gt;モードが活性化され、その後、認識のみ行末は改行文字です。</target>
        </trans-unit>
        <trans-unit id="e78f618fb982895e323f2a8270ab887366b80a4a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#canReadRaster()&quot;&gt;&lt;code&gt;canReadRaster()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;, this method throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#canReadRaster()&quot;&gt; &lt;code&gt;canReadRaster()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;false&lt;/code&gt; を返す場合、このメソッドは &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="71efcc82ef190899651d4c3646efb25fa325c808" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#closeServer()&quot;&gt;&lt;code&gt;closeServer()&lt;/code&gt;&lt;/a&gt; returns normally but one or more of the individual connections throws an &lt;code&gt;IOException&lt;/code&gt;, then, after closing all the connections, one of those &lt;code&gt;IOException&lt;/code&gt;s is thrown from this method. If more than one connection throws an &lt;code&gt;IOException&lt;/code&gt;, it is unspecified which one is thrown from this method.</source>
          <target state="translated">場合&lt;a href=&quot;#closeServer()&quot;&gt; &lt;code&gt;closeServer()&lt;/code&gt; が&lt;/a&gt;正常に返しますが、個々の接続の1つ以上がスロー &lt;code&gt;IOException&lt;/code&gt; が、その後、すべての接続を閉じた後、それらのいずれか &lt;code&gt;IOException&lt;/code&gt; Sは、このメソッドからスローされます。複数の接続が &lt;code&gt;IOException&lt;/code&gt; をスローする場合、このメソッドからどの接続がスローされるかは指定されていません。</target>
        </trans-unit>
        <trans-unit id="772326f336356f582b8722bde9c43c8722381694" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#closeServer()&quot;&gt;&lt;code&gt;closeServer()&lt;/code&gt;&lt;/a&gt; throws an &lt;code&gt;IOException&lt;/code&gt;, the individual connections are nevertheless closed, and then the &lt;code&gt;IOException&lt;/code&gt; is thrown from this method.</source>
          <target state="translated">場合&lt;a href=&quot;#closeServer()&quot;&gt; &lt;code&gt;closeServer()&lt;/code&gt; が&lt;/a&gt;スロー &lt;code&gt;IOException&lt;/code&gt; が、個々の接続にもかかわらず、閉じられ、そしてその後 &lt;code&gt;IOException&lt;/code&gt; がこのメソッドからスローされます。</target>
        </trans-unit>
        <trans-unit id="65e7781f5b0657fa71179d9775bc9b7c45120cf9" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#command()&quot;&gt;&lt;code&gt;command()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#arguments()&quot;&gt;&lt;code&gt;arguments()&lt;/code&gt;&lt;/a&gt; return non-empty optionals, this is simply a convenience method which concatenates the values of the two functions separated by spaces. Otherwise it will return a best-effort, platform dependent representation of the command line.</source>
          <target state="translated">場合&lt;a href=&quot;#command()&quot;&gt; &lt;code&gt;command()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#arguments()&quot;&gt; &lt;code&gt;arguments()&lt;/code&gt; &lt;/a&gt;戻り非空optionals、これは単に2つの関数の値がスペースで区切られた連結便利な方法です。それ以外の場合は、コマンドラインのプラットフォームに依存するベストエフォートの表現が返されます。</target>
        </trans-unit>
        <trans-unit id="ece37854884a00d52ed756d15b60bb9c060c3350" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#hasDynamicLocaleList()&quot;&gt;&lt;code&gt;hasDynamicLocaleList()&lt;/code&gt;&lt;/a&gt; returns true, this method is called each time the information is needed. This gives input methods that depend on network resources the chance to add or remove locales as resources become available or unavailable.</source>
          <target state="translated">場合&lt;a href=&quot;#hasDynamicLocaleList()&quot;&gt; &lt;code&gt;hasDynamicLocaleList()&lt;/code&gt; が&lt;/a&gt;trueを返す、この方法は、情報が必要とされるたびに呼ばれています。これにより、ネットワークリソースに依存する入力メソッドは、リソースが使用可能または使用不可になったときにロケールを追加または削除する機会が与えられます。</target>
        </trans-unit>
        <trans-unit id="9290b661461033ed1bc13cb69107504da4f2c89b" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#isNotifyOnEDT()&quot;&gt;&lt;code&gt;isNotifyOnEDT()&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; and called off the</source>
          <target state="translated">場合&lt;a href=&quot;#isNotifyOnEDT()&quot;&gt; &lt;code&gt;isNotifyOnEDT()&lt;/code&gt; &lt;/a&gt;で &lt;code&gt;true&lt;/code&gt; とオフと呼ばれます</target>
        </trans-unit>
        <trans-unit id="bb7e3afa0c9cff769e2ef4fba8fcdd5c43648f7d" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#isSupplementaryCodePoint(int)&quot;&gt;&lt;code&gt;isSupplementaryCodePoint(x)&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;, then &lt;a href=&quot;#isHighSurrogate(char)&quot;&gt;&lt;code&gt;isHighSurrogate&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(highSurrogate(x))&lt;/code&gt; and &lt;a href=&quot;#toCodePoint(char,char)&quot;&gt;&lt;code&gt;toCodePoint&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(highSurrogate(x), &lt;/code&gt;&lt;a href=&quot;#lowSurrogate(int)&quot;&gt;&lt;code&gt;lowSurrogate&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(x)) == x&lt;/code&gt; are also always &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">場合&lt;a href=&quot;#isSupplementaryCodePoint(int)&quot;&gt; &lt;code&gt;isSupplementaryCodePoint(x)&lt;/code&gt; が&lt;/a&gt;ある &lt;code&gt;true&lt;/code&gt; 、そして&lt;a href=&quot;#isHighSurrogate(char)&quot;&gt; &lt;code&gt;isHighSurrogate&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(highSurrogate(x))&lt;/code&gt; と&lt;a href=&quot;#toCodePoint(char,char)&quot;&gt; &lt;code&gt;toCodePoint&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(highSurrogate(x), &lt;/code&gt; &lt;a href=&quot;#lowSurrogate(int)&quot;&gt; &lt;code&gt;lowSurrogate&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(x)) == x&lt;/code&gt; 常にもある &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53364ddeaf870e898228ca4dece118f3648e3c77" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#isSupplementaryCodePoint(int)&quot;&gt;&lt;code&gt;isSupplementaryCodePoint(x)&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;, then &lt;a href=&quot;#isLowSurrogate(char)&quot;&gt;&lt;code&gt;isLowSurrogate&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(lowSurrogate(x))&lt;/code&gt; and &lt;a href=&quot;#toCodePoint(char,char)&quot;&gt;&lt;code&gt;toCodePoint&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;#highSurrogate(int)&quot;&gt;&lt;code&gt;highSurrogate&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(x), lowSurrogate(x)) == x&lt;/code&gt; are also always &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">場合&lt;a href=&quot;#isSupplementaryCodePoint(int)&quot;&gt; &lt;code&gt;isSupplementaryCodePoint(x)&lt;/code&gt; が&lt;/a&gt;ある &lt;code&gt;true&lt;/code&gt; 、そして&lt;a href=&quot;#isLowSurrogate(char)&quot;&gt; &lt;code&gt;isLowSurrogate&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(lowSurrogate(x))&lt;/code&gt; と&lt;a href=&quot;#toCodePoint(char,char)&quot;&gt; &lt;code&gt;toCodePoint&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(&lt;/code&gt; &lt;a href=&quot;#highSurrogate(int)&quot;&gt; &lt;code&gt;highSurrogate&lt;/code&gt; を&lt;/a&gt; &lt;code&gt;(x), lowSurrogate(x)) == x&lt;/code&gt; 常にもある &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb928076f9e85da10265f97d47af6c1f858474ba" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#setZoneStrings(java.lang.String%5B%5D%5B%5D)&quot;&gt;&lt;code&gt;setZoneStrings&lt;/code&gt;&lt;/a&gt; has been called on this &lt;code&gt;DateFormatSymbols&lt;/code&gt; instance, then the strings provided by that call are returned. Otherwise, the returned array contains names provided by the Java runtime and by installed &lt;a href=&quot;../util/spi/timezonenameprovider&quot;&gt;&lt;code&gt;TimeZoneNameProvider&lt;/code&gt;&lt;/a&gt; implementations.</source>
          <target state="translated">場合&lt;a href=&quot;#setZoneStrings(java.lang.String%5B%5D%5B%5D)&quot;&gt; &lt;code&gt;setZoneStrings&lt;/code&gt; は&lt;/a&gt;これに呼び出されてい &lt;code&gt;DateFormatSymbols&lt;/code&gt; クラスのインスタンスは、そのコールが提供する文字列が返されます。それ以外の場合、返される配列には、Javaランタイムおよびインストールされた&lt;a href=&quot;../util/spi/timezonenameprovider&quot;&gt; &lt;code&gt;TimeZoneNameProvider&lt;/code&gt; &lt;/a&gt;実装によって提供される名前が含まれます。</target>
        </trans-unit>
        <trans-unit id="2fb0326651e821be2f35a54b23e7fb99de23aa49" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../transformerfactory#getFeature(java.lang.String)&quot;&gt;&lt;code&gt;TransformerFactory.getFeature(String name)&lt;/code&gt;&lt;/a&gt; returns true when passed this value as an argument, the Transformer supports Result output of this type.</source>
          <target state="translated">場合&lt;a href=&quot;../transformerfactory#getFeature(java.lang.String)&quot;&gt; &lt;code&gt;TransformerFactory.getFeature(String name)&lt;/code&gt; &lt;/a&gt;この値を引数として渡したときtrueを返す、Transformerはこの型のResult出力をサポートしています。</target>
        </trans-unit>
        <trans-unit id="c7454b6fcdeaecd8bf32f437095fa39a351ab8b2" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../transformerfactory#getFeature(java.lang.String)&quot;&gt;&lt;code&gt;TransformerFactory.getFeature(String name)&lt;/code&gt;&lt;/a&gt; returns true when passed this value as an argument, the Transformer supports Source input of this type.</source>
          <target state="translated">場合&lt;a href=&quot;../transformerfactory#getFeature(java.lang.String)&quot;&gt; &lt;code&gt;TransformerFactory.getFeature(String name)&lt;/code&gt; &lt;/a&gt;trueを返すこの値を引数として渡したとき、Transformerはこの型のSource入力をサポートしています。</target>
        </trans-unit>
        <trans-unit id="45a303d890c16446e3f417305a332de9cb02377a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../transformerfactory#getFeature(java.lang.String)&quot;&gt;&lt;code&gt;TransformerFactory.getFeature(java.lang.String)&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt; when passed this value as an argument, the &lt;code&gt;Transformer&lt;/code&gt; supports &lt;code&gt;Result&lt;/code&gt; output of this type.</source>
          <target state="translated">場合&lt;a href=&quot;../transformerfactory#getFeature(java.lang.String)&quot;&gt; &lt;code&gt;TransformerFactory.getFeature(java.lang.String)&lt;/code&gt; &lt;/a&gt;を返し &lt;code&gt;true&lt;/code&gt; この値を引数として渡したときに、 &lt;code&gt;Transformer&lt;/code&gt; 支持体は、 &lt;code&gt;Result&lt;/code&gt; 、このタイプの出力を。</target>
        </trans-unit>
        <trans-unit id="8d46649a9c61c5839460d234d1d6732c409a2d26" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../transformerfactory#getFeature(java.lang.String)&quot;&gt;&lt;code&gt;TransformerFactory.getFeature(java.lang.String)&lt;/code&gt;&lt;/a&gt; returns true when passed this value as an argument, the &lt;a href=&quot;#newXMLFilter(javax.xml.transform.Source)&quot;&gt;&lt;code&gt;newXMLFilter(Source src)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#newXMLFilter(javax.xml.transform.Templates)&quot;&gt;&lt;code&gt;newXMLFilter(Templates templates)&lt;/code&gt;&lt;/a&gt; methods are supported.</source>
          <target state="translated">場合&lt;a href=&quot;../transformerfactory#getFeature(java.lang.String)&quot;&gt; &lt;code&gt;TransformerFactory.getFeature(java.lang.String)&lt;/code&gt; &lt;/a&gt;この値を引数として渡したときtrueを返す、&lt;a href=&quot;#newXMLFilter(javax.xml.transform.Source)&quot;&gt; &lt;code&gt;newXMLFilter(Source src)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#newXMLFilter(javax.xml.transform.Templates)&quot;&gt; &lt;code&gt;newXMLFilter(Templates templates)&lt;/code&gt; &lt;/a&gt;メソッドがサポートされています。</target>
        </trans-unit>
        <trans-unit id="6eed928fc11fb8cba11ac356c2dcff1804896bc5" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../transformerfactory#getFeature(java.lang.String)&quot;&gt;&lt;code&gt;TransformerFactory.getFeature(java.lang.String)&lt;/code&gt;&lt;/a&gt; returns true when passed this value as an argument, the Transformer supports Result output of this type.</source>
          <target state="translated">場合&lt;a href=&quot;../transformerfactory#getFeature(java.lang.String)&quot;&gt; &lt;code&gt;TransformerFactory.getFeature(java.lang.String)&lt;/code&gt; &lt;/a&gt;この値を引数として渡したときにtrueを返す、変圧器の支持体は、このタイプの出力を結果。</target>
        </trans-unit>
        <trans-unit id="31e60d4a882306cd78ca4a7492ef33ba5f716cf7" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../transformerfactory#getFeature(java.lang.String)&quot;&gt;&lt;code&gt;TransformerFactory.getFeature(java.lang.String)&lt;/code&gt;&lt;/a&gt; returns true when passed this value as an argument, the Transformer supports Source input of this type.</source>
          <target state="translated">場合&lt;a href=&quot;../transformerfactory#getFeature(java.lang.String)&quot;&gt; &lt;code&gt;TransformerFactory.getFeature(java.lang.String)&lt;/code&gt; &lt;/a&gt;この値を引数として渡したときtrueを返す、Transformerはこの型のSource入力をサポートしています。</target>
        </trans-unit>
        <trans-unit id="00f3c1a33a8d63656bc37124d61e96005150561a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../transformerfactory#getFeature(java.lang.String)&quot;&gt;&lt;code&gt;TransformerFactory.getFeature(java.lang.String)&lt;/code&gt;&lt;/a&gt; returns true when passed this value as an argument, the TransformerFactory returned from &lt;a href=&quot;../transformerfactory#newInstance()&quot;&gt;&lt;code&gt;TransformerFactory.newInstance()&lt;/code&gt;&lt;/a&gt; may be safely cast to a SAXTransformerFactory.</source>
          <target state="translated">場合&lt;a href=&quot;../transformerfactory#getFeature(java.lang.String)&quot;&gt; &lt;code&gt;TransformerFactory.getFeature(java.lang.String)&lt;/code&gt; &lt;/a&gt;この値を引数として渡したとき、TransformerFactoryのから返さtrueを返す&lt;a href=&quot;../transformerfactory#newInstance()&quot;&gt; &lt;code&gt;TransformerFactory.newInstance()&lt;/code&gt; &lt;/a&gt;安全SAXTransformerFactoryにキャストすることができます。</target>
        </trans-unit>
        <trans-unit id="65270733fdd62aa43250eea89ef5a685be9b5185" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;character#isSupplementaryCodePoint-int-&quot;&gt;&lt;code&gt;isSupplementaryCodePoint(x)&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;, then &lt;a href=&quot;character#isHighSurrogate-char-&quot;&gt;&lt;code&gt;isHighSurrogate&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(highSurrogate(x))&lt;/code&gt; and &lt;a href=&quot;character#toCodePoint-char-char-&quot;&gt;&lt;code&gt;toCodePoint&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(highSurrogate(x), &lt;/code&gt;&lt;a href=&quot;character#lowSurrogate-int-&quot;&gt;&lt;code&gt;lowSurrogate&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(x)) == x&lt;/code&gt; are also always &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">場合&lt;a href=&quot;character#isSupplementaryCodePoint-int-&quot;&gt; &lt;code&gt;isSupplementaryCodePoint(x)&lt;/code&gt; が&lt;/a&gt;ある &lt;code&gt;true&lt;/code&gt; 、そして&lt;a href=&quot;character#isHighSurrogate-char-&quot;&gt; &lt;code&gt;isHighSurrogate&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(highSurrogate(x))&lt;/code&gt; と&lt;a href=&quot;character#toCodePoint-char-char-&quot;&gt; &lt;code&gt;toCodePoint&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(highSurrogate(x), &lt;/code&gt; &lt;a href=&quot;character#lowSurrogate-int-&quot;&gt; &lt;code&gt;lowSurrogate&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(x)) == x&lt;/code&gt; 常にもある &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8545235843cd5b34079506fb27dd2164c836bfd" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;character#isSupplementaryCodePoint-int-&quot;&gt;&lt;code&gt;isSupplementaryCodePoint(x)&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;, then &lt;a href=&quot;character#isLowSurrogate-char-&quot;&gt;&lt;code&gt;isLowSurrogate&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(lowSurrogate(x))&lt;/code&gt; and &lt;a href=&quot;character#toCodePoint-char-char-&quot;&gt;&lt;code&gt;toCodePoint&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;character#highSurrogate-int-&quot;&gt;&lt;code&gt;highSurrogate&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(x), lowSurrogate(x)) == x&lt;/code&gt; are also always &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">場合&lt;a href=&quot;character#isSupplementaryCodePoint-int-&quot;&gt; &lt;code&gt;isSupplementaryCodePoint(x)&lt;/code&gt; が&lt;/a&gt;ある &lt;code&gt;true&lt;/code&gt; 、そして&lt;a href=&quot;character#isLowSurrogate-char-&quot;&gt; &lt;code&gt;isLowSurrogate&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(lowSurrogate(x))&lt;/code&gt; と&lt;a href=&quot;character#toCodePoint-char-char-&quot;&gt; &lt;code&gt;toCodePoint&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(&lt;/code&gt; &lt;a href=&quot;character#highSurrogate-int-&quot;&gt; &lt;code&gt;highSurrogate&lt;/code&gt; を&lt;/a&gt; &lt;code&gt;(x), lowSurrogate(x)) == x&lt;/code&gt; 常にもある &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3620e251aca3edeca3496fe35264c59f5537d6f9" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;dateformatsymbols#setZoneStrings-java.lang.String:A:A-&quot;&gt;&lt;code&gt;setZoneStrings&lt;/code&gt;&lt;/a&gt; has been called on this &lt;code&gt;DateFormatSymbols&lt;/code&gt; instance, then the strings provided by that call are returned. Otherwise, the returned array contains names provided by the Java runtime and by installed &lt;a href=&quot;../util/spi/timezonenameprovider&quot;&gt;&lt;code&gt;TimeZoneNameProvider&lt;/code&gt;&lt;/a&gt; implementations.</source>
          <target state="translated">場合&lt;a href=&quot;dateformatsymbols#setZoneStrings-java.lang.String:A:A-&quot;&gt; &lt;code&gt;setZoneStrings&lt;/code&gt; は&lt;/a&gt;これに呼び出されてい &lt;code&gt;DateFormatSymbols&lt;/code&gt; クラスのインスタンスは、そのコールが提供する文字列が返されます。それ以外の場合、返される配列には、Javaランタイムおよびインストールされている&lt;a href=&quot;../util/spi/timezonenameprovider&quot;&gt; &lt;code&gt;TimeZoneNameProvider&lt;/code&gt; &lt;/a&gt;実装によって提供される名前が含まれます。</target>
        </trans-unit>
        <trans-unit id="012a4a34353b239237400f96d0b85f099eb12eb9" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;imagereader#canReadRaster--&quot;&gt;&lt;code&gt;canReadRaster()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;, this method throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;imagereader#canReadRaster--&quot;&gt; &lt;code&gt;canReadRaster()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;false&lt;/code&gt; を返す場合、このメソッドは &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="8720024e850dd5509a41495f4288ed56ad7b9bf5" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;pattern#UNIX_LINES&quot;&gt;&lt;code&gt;UNIX_LINES&lt;/code&gt;&lt;/a&gt; mode is activated, then the only line terminators recognized are newline characters.</source>
          <target state="translated">場合&lt;a href=&quot;pattern#UNIX_LINES&quot;&gt; &lt;code&gt;UNIX_LINES&lt;/code&gt; の&lt;/a&gt;モードが活性化され、その後、認識のみ行末は改行文字です。</target>
        </trans-unit>
        <trans-unit id="6ce13f116c496bcb9e3ba0e3dfe9d128f47cc99f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;rmiserverimpl#closeServer--&quot;&gt;&lt;code&gt;closeServer()&lt;/code&gt;&lt;/a&gt; returns normally but one or more of the individual connections throws an &lt;code&gt;IOException&lt;/code&gt;, then, after closing all the connections, one of those &lt;code&gt;IOException&lt;/code&gt;s is thrown from this method. If more than one connection throws an &lt;code&gt;IOException&lt;/code&gt;, it is unspecified which one is thrown from this method.</source>
          <target state="translated">場合&lt;a href=&quot;rmiserverimpl#closeServer--&quot;&gt; &lt;code&gt;closeServer()&lt;/code&gt; が&lt;/a&gt;正常に返しますが、個々の接続の1つ以上がスロー &lt;code&gt;IOException&lt;/code&gt; が、その後、すべての接続を閉じた後、それらのいずれか &lt;code&gt;IOException&lt;/code&gt; Sは、このメソッドからスローされます。複数の接続が &lt;code&gt;IOException&lt;/code&gt; をスローする場合、このメソッドからどの接続がスローされるかは不定です。</target>
        </trans-unit>
        <trans-unit id="4b978ee312f37db78ada9f7138437d69f3b7381a" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;rmiserverimpl#closeServer--&quot;&gt;&lt;code&gt;closeServer()&lt;/code&gt;&lt;/a&gt; throws an &lt;code&gt;IOException&lt;/code&gt;, the individual connections are nevertheless closed, and then the &lt;code&gt;IOException&lt;/code&gt; is thrown from this method.</source>
          <target state="translated">場合&lt;a href=&quot;rmiserverimpl#closeServer--&quot;&gt; &lt;code&gt;closeServer()&lt;/code&gt; が&lt;/a&gt;スロー &lt;code&gt;IOException&lt;/code&gt; が、個々の接続にもかかわらず、閉じられ、そしてその後 &lt;code&gt;IOException&lt;/code&gt; がこのメソッドからスローされます。</target>
        </trans-unit>
        <trans-unit id="3abf10012265dcdcfca3e662bc4a4be5033c55ff" translate="yes" xml:space="preserve">
          <source>If &lt;b&gt;[member type definition]&lt;/b&gt; exists:</source>
          <target state="translated">もし&lt;b&gt;[メンバー型定義]&lt;/b&gt;が存在します：</target>
        </trans-unit>
        <trans-unit id="a8d4cdfe7c119d32b6dcb6d3394722e8eb16ea7e" translate="yes" xml:space="preserve">
          <source>If &lt;b&gt;button 2&lt;/b&gt; is released first, the &lt;code&gt;MOUSE_RELEASED&lt;/code&gt;/&lt;code&gt;MOUSE_CLICKED&lt;/code&gt; pair for &lt;code&gt;BUTTON2_MASK&lt;/code&gt; arrives first, followed by the pair for &lt;code&gt;BUTTON1_MASK&lt;/code&gt;.</source>
          <target state="translated">場合は&lt;b&gt;、ボタン2が&lt;/b&gt;最初にリリースされ、 &lt;code&gt;MOUSE_RELEASED&lt;/code&gt; / &lt;code&gt;MOUSE_CLICKED&lt;/code&gt; のためのペア &lt;code&gt;BUTTON2_MASK&lt;/code&gt; はのためのペアが続き、最初に到着 &lt;code&gt;BUTTON1_MASK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea42aa471fba70c8c5b879eed0b11a81d33d9730" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;'('&lt;/code&gt;, &lt;code&gt;' '&lt;/code&gt;, &lt;code&gt;'+'&lt;/code&gt;, or &lt;code&gt;','&lt;/code&gt; flags are given then a &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">場合は &lt;code&gt;'('&lt;/code&gt; 、 &lt;code&gt;' '&lt;/code&gt; 、 &lt;code&gt;'+'&lt;/code&gt; 、または &lt;code&gt;','&lt;/code&gt; フラグは、与えられている&lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; が&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="72cf99edd0149e99bab38b3d6d6fbd948dc81740" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;'('&lt;/code&gt;, &lt;code&gt;'&amp;nbsp;&amp;nbsp;'&lt;/code&gt;, &lt;code&gt;'+'&lt;/code&gt;, or &lt;code&gt;','&lt;/code&gt; flags are given then a &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">場合は &lt;code&gt;'('&lt;/code&gt; 、 &lt;code&gt;'&amp;nbsp;&amp;nbsp;'&lt;/code&gt; 、 &lt;code&gt;'+'&lt;/code&gt; 、または &lt;code&gt;','&lt;/code&gt; フラグは、与えられている&lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; が&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="7eeb89ae73822389cade1b0807bea11839e3a1ce" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;'('&lt;/code&gt;, &lt;code&gt;'+'&lt;/code&gt;, ' ', or &lt;code&gt;','&lt;/code&gt; flags are given then a &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">場合は &lt;code&gt;'('&lt;/code&gt; 、 &lt;code&gt;'+'&lt;/code&gt; 、「」、または &lt;code&gt;','&lt;/code&gt; フラグがその後、与えられている&lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; が&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="9a750ec5d14dc374b103aa1249376aa5622bf85d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;C&lt;/code&gt; is not symbolically accessible from the lookup class's loader, the lookup can still succeed, even when there is no equivalent Java expression or bytecoded constant.</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; がルックアップクラスのローダーからシンボリックにアクセスできない場合でも、同等のJava式またはバイトコード定数がない場合でも、ルックアップは成功します。</target>
        </trans-unit>
        <trans-unit id="c22cabf75bf63e32ee6f7bf21ab4e81e3f070b6c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Connection.getTypeMap&lt;/code&gt; does not throw a &lt;code&gt;SQLFeatureNotSupportedException&lt;/code&gt;, then when a column contains a structured or distinct value, the behavior of this method is as if it were a call to: &lt;code&gt;getObject(columnIndex,
 this.getStatement().getConnection().getTypeMap())&lt;/code&gt;. If &lt;code&gt;Connection.getTypeMap&lt;/code&gt; does throw a &lt;code&gt;SQLFeatureNotSupportedException&lt;/code&gt;, then structured values are not supported, and distinct values are mapped to the default Java class as determined by the underlying SQL type of the DISTINCT type.</source>
          <target state="translated">場合 &lt;code&gt;Connection.getTypeMap&lt;/code&gt; がスローされません &lt;code&gt;SQLFeatureNotSupportedException&lt;/code&gt; 列が構造化型または個別の値が含まれている場合、それはへの呼び出しであるかのように、その後、このメソッドの動作は以下のとおりです &lt;code&gt;getObject(columnIndex, this.getStatement().getConnection().getTypeMap())&lt;/code&gt; 。場合 &lt;code&gt;Connection.getTypeMap&lt;/code&gt; が投げるない &lt;code&gt;SQLFeatureNotSupportedException&lt;/code&gt; 、そして構造化値がサポートされていない、とDISTINCTタイプの基本となるSQL型によって決定される個別の値は、デフォルトのJavaクラスにマッピングされます。</target>
        </trans-unit>
        <trans-unit id="3c21bf137499e0118aff96e76a6afb91441eb454" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Cursor&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; no exception is thrown and the default drag cursor behavior is activated for this drag operation.</source>
          <target state="translated">&lt;code&gt;Cursor&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、例外はスローされず、このドラッグ操作に対してデフォルトのドラッグカーソル動作がアクティブになります。</target>
        </trans-unit>
        <trans-unit id="e669d963990128b93e38d67205209583419f0b76" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;DragGestureEvent&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;&lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">場合 &lt;code&gt;DragGestureEvent&lt;/code&gt; ある &lt;code&gt;null&lt;/code&gt; &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="2cc16da218aeec80b9faf3af3f5a2ccbfcd47a24" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;DragSourceContextPeer&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;&lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">場合 &lt;code&gt;DragSourceContextPeer&lt;/code&gt; ある &lt;code&gt;null&lt;/code&gt; &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="342d9167035ad1f34d894ef2cf294f94594d6f3c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;DragSourceListener&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; no exception is thrown.</source>
          <target state="translated">&lt;code&gt;DragSourceListener&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、例外はスローされません。</target>
        </trans-unit>
        <trans-unit id="ad564b0bb08d01c04970b6289af857200ce5d3cb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Image&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; no exception is thrown.</source>
          <target state="translated">&lt;code&gt;Image&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、例外はスローされません。</target>
        </trans-unit>
        <trans-unit id="07b1dec93404026e340cb746fe1d54f79e42ea62" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Image&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt; and the offset is &lt;code&gt;null NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">場合は &lt;code&gt;Image&lt;/code&gt; ない &lt;code&gt;null&lt;/code&gt; と相殺される &lt;code&gt;null NullPointerException&lt;/code&gt; スローされます。</target>
        </trans-unit>
        <trans-unit id="404a461e2c575d8e7a6469633b8caf8b2dcca973" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;InternationalFormatter&lt;/code&gt; is configured to only allow valid values (&lt;code&gt;setAllowsInvalid(false)&lt;/code&gt;), every valid edit will result in the text of the &lt;code&gt;JFormattedTextField&lt;/code&gt; being completely reset from the &lt;code&gt;Format&lt;/code&gt;. The cursor position will also be adjusted as literal characters are added/removed from the resulting String.</source>
          <target state="translated">場合 &lt;code&gt;InternationalFormatter&lt;/code&gt; をが唯一の有効な値（許可するように設定されて &lt;code&gt;setAllowsInvalid(false)&lt;/code&gt; を）、すべての有効な編集のテキストになります &lt;code&gt;JFormattedTextField&lt;/code&gt; のは完全にリセットされている &lt;code&gt;Format&lt;/code&gt; 。結果の文字列にリテラル文字が追加/削除されると、カーソル位置も調整されます。</target>
        </trans-unit>
        <trans-unit id="98dd4adde63200410c7fe1c5e173af2007b8e15c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;KeyStore.LoadStoreParameter&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; then the password parameter will also be &lt;code&gt;null&lt;/code&gt;. Otherwise the &lt;code&gt;KeyStore.ProtectionParameter&lt;/code&gt; of &lt;code&gt;KeyStore.LoadStoreParameter&lt;/code&gt; must be either a &lt;code&gt;KeyStore.PasswordProtection&lt;/code&gt; or a &lt;code&gt;KeyStore.CallbackHandlerProtection&lt;/code&gt; that supports &lt;code&gt;PasswordCallback&lt;/code&gt; so that the password parameter can be extracted. If the &lt;code&gt;KeyStore.ProtectionParameter&lt;/code&gt; is neither of those classes then a &lt;code&gt;NoSuchAlgorithmException&lt;/code&gt; is thrown.</source>
          <target state="translated">場合 &lt;code&gt;KeyStore.LoadStoreParameter&lt;/code&gt; がある &lt;code&gt;null&lt;/code&gt; 、パスワードパラメータもなり &lt;code&gt;null&lt;/code&gt; 。それ以外の場合、 &lt;code&gt;KeyStore.ProtectionParameter&lt;/code&gt; の &lt;code&gt;KeyStore.LoadStoreParameter&lt;/code&gt; は、 &lt;code&gt;KeyStore.PasswordProtection&lt;/code&gt; または &lt;code&gt;PasswordCallback&lt;/code&gt; をサポートする &lt;code&gt;KeyStore.CallbackHandlerProtection&lt;/code&gt; のいずれかである必要があります。これにより、パスワードパラメーターを抽出できます。 &lt;code&gt;KeyStore.ProtectionParameter&lt;/code&gt; がこれらのクラスのいずれでもない場合、 &lt;code&gt;NoSuchAlgorithmException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="d2cc398b4306bef500f8237a19b749b6bcbc8d23" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ListResourceBundle&lt;/code&gt; or &lt;code&gt;PropertyResourceBundle&lt;/code&gt; do not suit your needs, you can write your own &lt;code&gt;ResourceBundle&lt;/code&gt; subclass. Your subclasses must override two methods: &lt;code&gt;handleGetObject&lt;/code&gt; and &lt;code&gt;getKeys()&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;ListResourceBundle&lt;/code&gt; または &lt;code&gt;PropertyResourceBundle&lt;/code&gt; のがニーズに合わない、あなた自身の書くことができます &lt;code&gt;ResourceBundle&lt;/code&gt; サブクラスを。サブクラスは、 &lt;code&gt;handleGetObject&lt;/code&gt; および &lt;code&gt;getKeys()&lt;/code&gt; という 2つのメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="19986d39095a906f212f7d5b0880993833e0d2d1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;N&lt;/code&gt; is greater than &lt;code&gt;M&lt;/code&gt;, perform the following checks and actions to shorten the logical argument list:</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; が &lt;code&gt;M&lt;/code&gt; より大きい場合は、次のチェックとアクションを実行して、論理引数リストを短くします。</target>
        </trans-unit>
        <trans-unit id="935835d2737aeb04ed15a1c0f755b84619f5b469" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Statement.executeLargeBatch&lt;/code&gt; method is invoked it is recommended that &lt;code&gt;getLargeUpdateCounts&lt;/code&gt; be called instead of &lt;code&gt;getUpdateCounts&lt;/code&gt; in order to avoid a possible overflow of the integer update count.</source>
          <target state="translated">場合 &lt;code&gt;Statement.executeLargeBatch&lt;/code&gt; のメソッドが呼び出され、することが推奨され &lt;code&gt;getLargeUpdateCounts&lt;/code&gt; が代わりに呼び出され &lt;code&gt;getUpdateCounts&lt;/code&gt; 整数更新回数の可能なオーバーフローを避けるために。</target>
        </trans-unit>
        <trans-unit id="ae944b060ac36332df795905a98cd54ca172deed" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Transferable&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;&lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">場合 &lt;code&gt;Transferable&lt;/code&gt; ある &lt;code&gt;null&lt;/code&gt; &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="b0e9c0a6d7916cd7df894cc4e4ebfb70e6dafa12" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;aComponent&lt;/code&gt; is a &lt;code&gt;JComponent&lt;/code&gt; with a &lt;code&gt;JComponent.WHEN_FOCUSED&lt;/code&gt;&lt;code&gt;InputMap&lt;/code&gt; that is neither &lt;code&gt;null&lt;/code&gt; nor empty, returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;aComponent&lt;/code&gt; のはある &lt;code&gt;JComponent&lt;/code&gt; と &lt;code&gt;JComponent.WHEN_FOCUSED&lt;/code&gt; &lt;code&gt;InputMap&lt;/code&gt; でもない &lt;code&gt;null&lt;/code&gt; でも空、返品 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a4dbd2384da6b5613acd40d7abd9de5eb93c363" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;aComponent&lt;/code&gt; is an instance of &lt;code&gt;JComboBox&lt;/code&gt;, then returns the value of &lt;code&gt;aComponent.getUI().isFocusTraversable(aComponent)&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;aComponent&lt;/code&gt; のがのインスタンスである &lt;code&gt;JComboBox&lt;/code&gt; の、その後の値を返し &lt;code&gt;aComponent.getUI().isFocusTraversable(aComponent)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae4cc07da39e229fe02aafbd9bcda878e1f082aa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;aComponent&lt;/code&gt; is an instance of &lt;code&gt;JTable&lt;/code&gt;, returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;aComponent&lt;/code&gt; のはのインスタンスである &lt;code&gt;JTable&lt;/code&gt; は、返す &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f39db4019e1b54a9fab13c1a8a821a89eba4afd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;addEdit&lt;/code&gt; returns false &lt;code&gt;replaceEdit&lt;/code&gt; is called on the new edit with the current edit passed in as the argument. This is the inverse of &lt;code&gt;addEdit&lt;/code&gt; &amp;mdash; if the new edit returns true from &lt;code&gt;replaceEdit&lt;/code&gt;, the new edit replaces the current edit.</source>
          <target state="translated">&lt;code&gt;addEdit&lt;/code&gt; がfalseを返す場合、引数として渡された現在の編集を使用して、新しい編集で &lt;code&gt;replaceEdit&lt;/code&gt; が呼び出されます。これは &lt;code&gt;addEdit&lt;/code&gt; の逆です&amp;mdash;新しい編集が &lt;code&gt;replaceEdit&lt;/code&gt; からtrueを返す場合、新しい編集が現在の編集を置き換えます。</target>
        </trans-unit>
        <trans-unit id="0c0884131e4907911693caac0e27601b51588c81" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;anObject&lt;/code&gt; is</source>
          <target state="translated">場合 &lt;code&gt;anObject&lt;/code&gt; があります</target>
        </trans-unit>
        <trans-unit id="5ffca39545d24e1d7920cc8116cb0da5e9c4e9ef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;attributes&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a new &lt;code&gt;Font&lt;/code&gt; is initialized with default values.</source>
          <target state="translated">場合は &lt;code&gt;attributes&lt;/code&gt; あり &lt;code&gt;null&lt;/code&gt; 、新しい &lt;code&gt;Font&lt;/code&gt; デフォルト値で初期化されます。</target>
        </trans-unit>
        <trans-unit id="a0434246c444d50c0f52a07a8946c3257869e693" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;authorityKeyID&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, it should contain a single DER encoded value corresponding to the contents of the extension value (not including the object identifier, criticality setting, and encapsulating OCTET STRING) for an AuthorityKeyIdentifier extension. The ASN.1 notation for this structure follows.</source>
          <target state="translated">&lt;code&gt;authorityKeyID&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合、AuthorityKeyIdentifier拡張機能の拡張値（オブジェクト識別子、重要度設定、カプセル化OCTET STRINGは含まない）の内容に対応する単一のDERエンコードされた値を含める必要があります。この構造のASN.1表記は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="5ae4986c4460a5ebb1bbee1c90a680c389e1bb9d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">場合 &lt;code&gt;b&lt;/code&gt; がある &lt;code&gt;null&lt;/code&gt; 、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="21e86457236cd9a3d8817e8cd34e957152d8c15b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. If &lt;code&gt;b.length&lt;/code&gt; is zero, then no bytes are read. Otherwise, the first byte read is stored into element &lt;code&gt;b[0]&lt;/code&gt;, the next one into &lt;code&gt;b[1]&lt;/code&gt;, and so on. If an exception is thrown from this method, then it may be that some but not all bytes of &lt;code&gt;b&lt;/code&gt; have been updated with data from the input stream.</source>
          <target state="translated">場合 &lt;code&gt;b&lt;/code&gt; がある &lt;code&gt;null&lt;/code&gt; 、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。場合 &lt;code&gt;b.length&lt;/code&gt; ゼロで、その後何のバイトが読み込まれません。それ以外の場合、最初に読み取られたバイトは要素 &lt;code&gt;b[0]&lt;/code&gt; に格納され、次のバイトは &lt;code&gt;b[1]&lt;/code&gt; に格納されます。このメソッドから例外がスローされた場合、 &lt;code&gt;b&lt;/code&gt; のすべてのバイトではなく一部のバイトが入力ストリームからのデータで更新されている可能性があります。</target>
        </trans-unit>
        <trans-unit id="82242ce2dcd2406c65038894f40a74a74e10c4fa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. If &lt;code&gt;off&lt;/code&gt; is negative, or &lt;code&gt;len&lt;/code&gt; is negative, or &lt;code&gt;off+len&lt;/code&gt; is greater than the length of the array &lt;code&gt;b&lt;/code&gt;, then an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; is thrown. If &lt;code&gt;len&lt;/code&gt; is zero, then no bytes are read. Otherwise, the first byte read is stored into element &lt;code&gt;b[off]&lt;/code&gt;, the next one into &lt;code&gt;b[off+1]&lt;/code&gt;, and so on. The number of bytes read is, at most, equal to &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;b&lt;/code&gt; がある &lt;code&gt;null&lt;/code&gt; 、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。 &lt;code&gt;off&lt;/code&gt; が負の場合、 &lt;code&gt;len&lt;/code&gt; が負の場合、または &lt;code&gt;off+len&lt;/code&gt; が配列 &lt;code&gt;b&lt;/code&gt; の長さより大きい場合は、 &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; がスローされます。場合 &lt;code&gt;len&lt;/code&gt; がゼロで、その後何のバイトが読み込まれません。それ以外の場合、最初のバイトは要素 &lt;code&gt;b[off]&lt;/code&gt; に格納され、次のバイトは &lt;code&gt;b[off+1]&lt;/code&gt; に格納されます。読み込まれるバイト数は、多くても &lt;code&gt;len&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="ab0ddd3d3685dccd379b30ef43efacf18a61b24e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, sets palette icons.</source>
          <target state="translated">場合 &lt;code&gt;b&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; 、セットは、アイコンをパレット。</target>
        </trans-unit>
        <trans-unit id="b074080c1d245e1b6646c58148e3f07e7034e1a3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;b&lt;/code&gt; is null, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. If the length of &lt;code&gt;b&lt;/code&gt; is zero, then no bytes are read and &lt;code&gt;0&lt;/code&gt; is returned; otherwise, there is an attempt to read at least one byte. If no byte is available because the stream is at end of file, the value &lt;code&gt;-1&lt;/code&gt; is returned; otherwise, at least one byte is read and stored into &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;b&lt;/code&gt; が nullの場合、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。 &lt;code&gt;b&lt;/code&gt; の長さがゼロの場合、バイトは読み込まれず、 &lt;code&gt;0&lt;/code&gt; が返されます。そうでない場合は、少なくとも1バイトを読み取ろうとします。ストリームがファイルの終わりにあるために使用可能なバイトがない場合、値 &lt;code&gt;-1&lt;/code&gt; が返されます。それ以外の場合は、少なくとも1バイトが読み取られ、 &lt;code&gt;b&lt;/code&gt; に格納されます。</target>
        </trans-unit>
        <trans-unit id="aa3df66e6030f152b16b8b265b1c6de9bd0b49be" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;bounds&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, accept bounds supplied by the system. If non-&lt;code&gt;null&lt;/code&gt; you can override some of the system supplied values while accepting others by setting those fields you want to accept from system to &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bounds&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、システムによって提供される境界を受け入れます。非場合は &lt;code&gt;null&lt;/code&gt; を使用すると、システムからに受け入れるようにしたいそれらのフィールド設定することで、他の人を受け入れながら、あなたは、システム指定された値の一部をオーバーライドすることができ &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; のを。</target>
        </trans-unit>
        <trans-unit id="6c263dd49a555ae8cc4e42c809ded8d859be194a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt; is the &lt;code&gt;JOptionPane&lt;/code&gt; the receiver is contained in, the preferred size that is returned is the maximum of the preferred size of the &lt;code&gt;LayoutManager&lt;/code&gt; for the &lt;code&gt;JOptionPane&lt;/code&gt;, and &lt;code&gt;getMinimumOptionPaneSize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; がレシーバーが含まれる &lt;code&gt;JOptionPane&lt;/code&gt; である場合、返される優先サイズは、 &lt;code&gt;JOptionPane&lt;/code&gt; の &lt;code&gt;LayoutManager&lt;/code&gt; の優先サイズの最大値と &lt;code&gt;getMinimumOptionPaneSize&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6238ba66fb71e08c402b5cfcf99a20d3798ba64b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;c&lt;/code&gt;'s parent is not a &lt;code&gt;CellRendererPane&lt;/code&gt;, a new &lt;code&gt;CellRendererPane&lt;/code&gt; is created, &lt;code&gt;c&lt;/code&gt; is added to it, and the &lt;code&gt;CellRendererPane&lt;/code&gt; is added to &lt;code&gt;p&lt;/code&gt;. If &lt;code&gt;c&lt;/code&gt;'s parent is a &lt;code&gt;CellRendererPane&lt;/code&gt; and the &lt;code&gt;CellRendererPane&lt;/code&gt;s parent is not &lt;code&gt;p&lt;/code&gt;, it is added to &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; の親が &lt;code&gt;CellRendererPane&lt;/code&gt; でない場合、新しい &lt;code&gt;CellRendererPane&lt;/code&gt; が作成され、 &lt;code&gt;c&lt;/code&gt; がそれに追加され、 &lt;code&gt;CellRendererPane&lt;/code&gt; が &lt;code&gt;p&lt;/code&gt; に追加されます。場合は &lt;code&gt;c&lt;/code&gt; の親が &lt;code&gt;CellRendererPane&lt;/code&gt; にして &lt;code&gt;CellRendererPane&lt;/code&gt; にの親ではない &lt;code&gt;p&lt;/code&gt; 、それがに追加され &lt;code&gt;p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2675390c8288f1c4183082124ca397aad9ad3c27" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;canInsertEmpty(imageIndex)&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; will be thrown.</source>
          <target state="translated">場合 &lt;code&gt;canInsertEmpty(imageIndex)&lt;/code&gt; 返し &lt;code&gt;false&lt;/code&gt; 、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="7151989edd5727743e92fe06833dc2c71dbf1c43" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;canInsertImage(imageIndex)&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; will be thrown.</source>
          <target state="translated">場合 &lt;code&gt;canInsertImage(imageIndex)&lt;/code&gt; 返し &lt;code&gt;false&lt;/code&gt; 、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="8cf48012372f187bb754c28dc9c707889224506b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;canOffsetTiles&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, then the &lt;code&gt;tileGridXOffset&lt;/code&gt; and &lt;code&gt;tileGridYOffset&lt;/code&gt; parameters must be zero.</source>
          <target state="translated">&lt;code&gt;canOffsetTiles&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; を返す場合、 &lt;code&gt;tileGridXOffset&lt;/code&gt; および &lt;code&gt;tileGridYOffset&lt;/code&gt; パラメータはゼロでなければなりません。</target>
        </trans-unit>
        <trans-unit id="6ef90a3f0620689c0190d90d57383f7c72fa3f81" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;canRemoveImage(imageIndex)&lt;/code&gt; returns false, an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; will be thrown.</source>
          <target state="translated">&lt;code&gt;canRemoveImage(imageIndex)&lt;/code&gt; がfalseを返す場合、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="131c53ffd8cea0e4696d724ad0d0b0d332584bf3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;canRemoveImage(imageIndex)&lt;/code&gt; returns false, an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;will be thrown.</source>
          <target state="translated">場合 &lt;code&gt;canRemoveImage(imageIndex)&lt;/code&gt; falseを返し、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="02a850ece86159de397bc5c898179b444eb7af75" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;canReplaceImageMetadata(imageIndex)&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; will be thrown.</source>
          <target state="translated">場合 &lt;code&gt;canReplaceImageMetadata(imageIndex)&lt;/code&gt; 返し &lt;code&gt;false&lt;/code&gt; 、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="d25817283a6baae65b3ec58084670fa5869de866" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;canReplacePixels&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, and &lt;code&gt;UnsupportedOperationException&lt;/code&gt; will be thrown.</source>
          <target state="translated">場合 &lt;code&gt;canReplacePixels&lt;/code&gt; を返し &lt;code&gt;false&lt;/code&gt; 、と &lt;code&gt;UnsupportedOperationException&lt;/code&gt; スローされます。</target>
        </trans-unit>
        <trans-unit id="a3238e19962e0a1997d962077704181eb94f1170" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;canReplaceStreamMetadata&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; will be thrown.</source>
          <target state="translated">場合 &lt;code&gt;canReplaceStreamMetadata&lt;/code&gt; を返し &lt;code&gt;false&lt;/code&gt; 、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="dc5e822bd2cf172adb0973609c29e090ffc04190" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;canWriteEmpty()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; will be thrown.</source>
          <target state="translated">場合 &lt;code&gt;canWriteEmpty()&lt;/code&gt; を返す &lt;code&gt;false&lt;/code&gt; 、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="6521717d79941f992534e2eb4c5b1a5d830f9bf2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;canWriteEmpty&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; will be thrown.</source>
          <target state="translated">&lt;code&gt;canWriteEmpty&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; を返す場合、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="3d959168f33e335af899036fd5788e3aa5701067" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;canWriteRasters&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;IIOImage&lt;/code&gt; may contain a &lt;code&gt;Raster&lt;/code&gt; source. Otherwise, it must contain a &lt;code&gt;RenderedImage&lt;/code&gt; source.</source>
          <target state="translated">場合 &lt;code&gt;canWriteRasters&lt;/code&gt; が返す &lt;code&gt;true&lt;/code&gt; 、 &lt;code&gt;IIOImage&lt;/code&gt; がが含まれていてもよい &lt;code&gt;Raster&lt;/code&gt; ソースを。それ以外の場合は、 &lt;code&gt;RenderedImage&lt;/code&gt; ソースが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="2289fa9b502b199c4fcc80b75fb2215fa5267c24" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;canWriteSequence&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;writeToSequence&lt;/code&gt; and &lt;code&gt;endWriteSequence&lt;/code&gt; will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;canWriteSequence&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; を返す場合、 &lt;code&gt;writeToSequence&lt;/code&gt; および &lt;code&gt;endWriteSequence&lt;/code&gt; は &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="b447acaf9f7c8dcdc76e9db3f30272946e988621" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;canWriteSequence&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, this method will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;canWriteSequence&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; を返す場合、このメソッドは &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="2a9184b5c2aa2da13bb7f1d1ed8e7e6060888116" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cause&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;cause&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="8ada8ee35a7cd5bc5cd75a312b4c8e9972dc43c3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cd&lt;/code&gt; does not contain this attribute, the &lt;code&gt;LockInfo&lt;/code&gt; object will be constructed from the value of the &lt;code&gt;lockName&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;cd&lt;/code&gt; にこの属性が含まれていない場合、 &lt;code&gt;LockInfo&lt;/code&gt; オブジェクトは、 &lt;code&gt;lockName&lt;/code&gt; 属性の値から構築されます。</target>
        </trans-unit>
        <trans-unit id="bf887bb96afb0aa59ad2aae60bab1721c5d207f9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cd&lt;/code&gt; does not contain this attribute, this attribute will be set to an empty array.</source>
          <target state="translated">&lt;code&gt;cd&lt;/code&gt; にこの属性が含まれていない場合、この属性は空の配列に設定されます。</target>
        </trans-unit>
        <trans-unit id="812ad9de22a73d6ca9f245c43ac636f16a671009" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;close&lt;/code&gt; has already been called successfully on this object, calling it again has no effect. If &lt;code&gt;close&lt;/code&gt; has never been called, or if it was called but produced an exception, an attempt will be made to close the connection. This attempt can succeed, in which case &lt;code&gt;close&lt;/code&gt; will return normally, or it can generate an exception.</source>
          <target state="translated">場合は &lt;code&gt;close&lt;/code&gt; すでにこのオブジェクトで正常に呼び出されている、それを再度呼び出しても効果はありません。場合は &lt;code&gt;close&lt;/code&gt; 呼ばれていない、またはそれが呼び出された場合は、例外を生成し、試みは、接続を閉じるように行われます。この試みは成功する可能性があります。その場合、 &lt;code&gt;close&lt;/code&gt; は正常に戻るか、例外が生成される可能性があります。</target>
        </trans-unit>
        <trans-unit id="33a1147b5d21ae2e7ca580654a0c59d07ed3bbd8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;com.example.impl.StandardCodecs&lt;/code&gt; is an implementation of the &lt;code&gt;CodecSet&lt;/code&gt; service then its jar file also contains a file named</source>
          <target state="translated">&lt;code&gt;com.example.impl.StandardCodecs&lt;/code&gt; が &lt;code&gt;CodecSet&lt;/code&gt; サービスの実装である場合、そのjarファイルには、</target>
        </trans-unit>
        <trans-unit id="8b84890e8f8a46b3708d293c656fc550b2c37ad1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;comp&lt;/code&gt; is not in the &lt;code&gt;GridBagLayout&lt;/code&gt;, a set of default &lt;code&gt;GridBagConstraints&lt;/code&gt; are returned. A &lt;code&gt;comp&lt;/code&gt; value of &lt;code&gt;null&lt;/code&gt; is invalid and returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;comp&lt;/code&gt; が &lt;code&gt;GridBagLayout&lt;/code&gt; にない場合、デフォルトの &lt;code&gt;GridBagConstraints&lt;/code&gt; のセットが返されます。 &lt;code&gt;comp&lt;/code&gt; の値は &lt;code&gt;null&lt;/code&gt; では無効であると返し &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd7ff993d2281047c4a2ada3938e892ca27ff483" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;component&lt;/code&gt; is not a child of the &lt;code&gt;Container&lt;/code&gt; this &lt;code&gt;GroupLayout&lt;/code&gt; is managing, it will be added to the &lt;code&gt;Container&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;component&lt;/code&gt; の子でない &lt;code&gt;Container&lt;/code&gt; 、この &lt;code&gt;GroupLayout&lt;/code&gt; が管理している、それがに追加されます &lt;code&gt;Container&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64ca2ca06cfca94fd9c82cd4417d0dcb8fcf16c7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;condition&lt;/code&gt; is &lt;code&gt;WHEN_IN_FOCUSED_WINDOW&lt;/code&gt; and &lt;code&gt;map&lt;/code&gt; is not a &lt;code&gt;ComponentInputMap&lt;/code&gt;, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown. Similarly, if &lt;code&gt;condition&lt;/code&gt; is not one of the values listed, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown.</source>
          <target state="translated">場合は &lt;code&gt;condition&lt;/code&gt; あり &lt;code&gt;WHEN_IN_FOCUSED_WINDOW&lt;/code&gt; と &lt;code&gt;map&lt;/code&gt; ない &lt;code&gt;ComponentInputMap&lt;/code&gt; は、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。同様に、 &lt;code&gt;condition&lt;/code&gt; がリストされている値の1つでない場合、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="92a777126fff87fc6575840ceb6f43f1af8bf701" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;connect&lt;/code&gt; has already been called successfully on this object, calling it again has no effect. If, however, &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; was called after &lt;code&gt;connect&lt;/code&gt;, the new &lt;code&gt;connect&lt;/code&gt; will throw an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">このオブジェクトで &lt;code&gt;connect&lt;/code&gt; がすでに正常に呼び出されている場合は、再度呼び出しても効果はありません。ただし、 &lt;code&gt;connect&lt;/code&gt; 後に&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;が呼び出された &lt;code&gt;IOException&lt;/code&gt; 、新しい &lt;code&gt;connect&lt;/code&gt; はIOExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="ee84e6720c3161c6d7cb8dc3ad7c925084b52e84" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;connect&lt;/code&gt; has already been called successfully on this object, calling it again has no effect. If, however, &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnector#close()&quot;&gt;&lt;code&gt;JMXConnector.close()&lt;/code&gt;&lt;/a&gt; was called after &lt;code&gt;connect&lt;/code&gt;, the new &lt;code&gt;connect&lt;/code&gt; will throw an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">このオブジェクトで &lt;code&gt;connect&lt;/code&gt; がすでに正常に呼び出されている場合は、再度呼び出しても効果はありません。ただし、 &lt;code&gt;connect&lt;/code&gt; 後に&lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnector#close()&quot;&gt; &lt;code&gt;JMXConnector.close()&lt;/code&gt; &lt;/a&gt;が呼び出された &lt;code&gt;IOException&lt;/code&gt; 、新しい &lt;code&gt;connect&lt;/code&gt; はIOExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="f4f3e05fefcfe0a00e4807cbf6116adda73d0128" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;connect&lt;/code&gt; has already been called successfully on this object, calling it again has no effect. If, however, &lt;a href=&quot;../jmxconnector#close--&quot;&gt;&lt;code&gt;JMXConnector.close()&lt;/code&gt;&lt;/a&gt; was called after &lt;code&gt;connect&lt;/code&gt;, the new &lt;code&gt;connect&lt;/code&gt; will throw an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;connect&lt;/code&gt; すでにそれを再度呼び出しても何の効果もありません、このオブジェクト上で正常に呼び出されました。ただし、&lt;a href=&quot;../jmxconnector#close--&quot;&gt; &lt;code&gt;JMXConnector.close()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;connect&lt;/code&gt; の後に呼び出された &lt;code&gt;IOException&lt;/code&gt; 、新しい &lt;code&gt;connect&lt;/code&gt; はIOExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="224e6e3c9c9ab5ea85db23541af55fdf9a95fbf4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;connect&lt;/code&gt; has already been called successfully on this object, calling it again has no effect. If, however, &lt;a href=&quot;jmxconnector#close--&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; was called after &lt;code&gt;connect&lt;/code&gt;, the new &lt;code&gt;connect&lt;/code&gt; will throw an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;connect&lt;/code&gt; すでにそれを再度呼び出しても何の効果もありません、このオブジェクト上で正常に呼び出されました。ただし、&lt;a href=&quot;jmxconnector#close--&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;connect&lt;/code&gt; の後に呼び出された &lt;code&gt;IOException&lt;/code&gt; 、新しい &lt;code&gt;connect&lt;/code&gt; はIOExceptionをスローします。</target>
        </trans-unit>
        <trans-unit id="bf6be8a4a637ba85e059625467587617880d83be" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;connected&lt;/code&gt; is false, the returned &lt;code&gt;Sequencer&lt;/code&gt; instance is not connected, it has no open &lt;code&gt;Transmitters&lt;/code&gt;. In order to play the sequencer on a MIDI device, or a &lt;code&gt;Synthesizer&lt;/code&gt;, it is necessary to get a &lt;code&gt;Transmitter&lt;/code&gt; and set its &lt;code&gt;Receiver&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;connected&lt;/code&gt; falseで、返された &lt;code&gt;Sequencer&lt;/code&gt; インスタンスが接続されていない、それは開いていない &lt;code&gt;Transmitters&lt;/code&gt; 。 MIDIデバイスまたは &lt;code&gt;Synthesizer&lt;/code&gt; でシーケンサーを再生するには、 &lt;code&gt;Transmitter&lt;/code&gt; を取得し、その &lt;code&gt;Receiver&lt;/code&gt; を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="6124e6c6d2d58106429f5f0d3d792a46b8aa09f8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;connected&lt;/code&gt; is true, the returned &lt;code&gt;Sequencer&lt;/code&gt; instance is connected to the default &lt;code&gt;Synthesizer&lt;/code&gt;, as returned by &lt;a href=&quot;#getSynthesizer()&quot;&gt;&lt;code&gt;getSynthesizer()&lt;/code&gt;&lt;/a&gt;. If there is no &lt;code&gt;Synthesizer&lt;/code&gt; available, or the default &lt;code&gt;Synthesizer&lt;/code&gt; cannot be opened, the &lt;code&gt;sequencer&lt;/code&gt; is connected to the default &lt;code&gt;Receiver&lt;/code&gt;, as returned by &lt;a href=&quot;#getReceiver()&quot;&gt;&lt;code&gt;getReceiver()&lt;/code&gt;&lt;/a&gt;. The connection is made by retrieving a &lt;code&gt;Transmitter&lt;/code&gt; instance from the &lt;code&gt;Sequencer&lt;/code&gt; and setting its &lt;code&gt;Receiver&lt;/code&gt;. Closing and re-opening the sequencer will restore the connection to the default device.</source>
          <target state="translated">場合は &lt;code&gt;connected&lt;/code&gt; 真で、返された &lt;code&gt;Sequencer&lt;/code&gt; インスタンスがデフォルトに接続されている &lt;code&gt;Synthesizer&lt;/code&gt; によって返される、&lt;a href=&quot;#getSynthesizer()&quot;&gt; &lt;code&gt;getSynthesizer()&lt;/code&gt; &lt;/a&gt;。使用可能な &lt;code&gt;Synthesizer&lt;/code&gt; がない場合、またはデフォルトの &lt;code&gt;Synthesizer&lt;/code&gt; を開くことができない場合、&lt;a href=&quot;#getReceiver()&quot;&gt; &lt;code&gt;getReceiver()&lt;/code&gt; &lt;/a&gt;によって返されるように、 &lt;code&gt;sequencer&lt;/code&gt; はデフォルトの &lt;code&gt;Receiver&lt;/code&gt; 接続されます。接続は、 &lt;code&gt;Sequencer&lt;/code&gt; から &lt;code&gt;Transmitter&lt;/code&gt; インスタンスを取得し、その &lt;code&gt;Receiver&lt;/code&gt; を設定することによって行われます。シーケンサーを閉じて再度開くと、デフォルトのデバイスへの接続が復元されます。</target>
        </trans-unit>
        <trans-unit id="6a400989fbeb9d471598798fd6fec1b4c9e019b8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;connected&lt;/code&gt; is true, the returned &lt;code&gt;Sequencer&lt;/code&gt; instance is connected to the default &lt;code&gt;Synthesizer&lt;/code&gt;, as returned by &lt;a href=&quot;midisystem#getSynthesizer--&quot;&gt;&lt;code&gt;getSynthesizer()&lt;/code&gt;&lt;/a&gt;. If there is no &lt;code&gt;Synthesizer&lt;/code&gt; available, or the default &lt;code&gt;Synthesizer&lt;/code&gt; cannot be opened, the &lt;code&gt;sequencer&lt;/code&gt; is connected to the default &lt;code&gt;Receiver&lt;/code&gt;, as returned by &lt;a href=&quot;midisystem#getReceiver--&quot;&gt;&lt;code&gt;getReceiver()&lt;/code&gt;&lt;/a&gt;. The connection is made by retrieving a &lt;code&gt;Transmitter&lt;/code&gt; instance from the &lt;code&gt;Sequencer&lt;/code&gt; and setting its &lt;code&gt;Receiver&lt;/code&gt;. Closing and re-opening the sequencer will restore the connection to the default device.</source>
          <target state="translated">場合は &lt;code&gt;connected&lt;/code&gt; 真で、返された &lt;code&gt;Sequencer&lt;/code&gt; インスタンスがデフォルトに接続されている &lt;code&gt;Synthesizer&lt;/code&gt; によって返される、&lt;a href=&quot;midisystem#getSynthesizer--&quot;&gt; &lt;code&gt;getSynthesizer()&lt;/code&gt; &lt;/a&gt;。利用可能な &lt;code&gt;Synthesizer&lt;/code&gt; がない場合、またはデフォルトの &lt;code&gt;Synthesizer&lt;/code&gt; を開くことができない場合、 &lt;code&gt;sequencer&lt;/code&gt; は&lt;a href=&quot;midisystem#getReceiver--&quot;&gt; &lt;code&gt;getReceiver()&lt;/code&gt; &lt;/a&gt;によって返されるように、デフォルトの &lt;code&gt;Receiver&lt;/code&gt; に接続されます。接続は、 &lt;code&gt;Sequencer&lt;/code&gt; から &lt;code&gt;Transmitter&lt;/code&gt; インスタンスを取得し、その &lt;code&gt;Receiver&lt;/code&gt; を設定することによって行われます。シーケンサーを閉じて再度開くと、デフォルトのデバイスへの接続が復元されます。</target>
        </trans-unit>
        <trans-unit id="71d325005d1bc9bba30654c9f87b669bc09dd8f7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;constraints&lt;/code&gt; is an instance of &lt;code&gt;SpringLayout.Constraints&lt;/code&gt;, associates the constraints with the specified component.</source>
          <target state="translated">場合 &lt;code&gt;constraints&lt;/code&gt; のインスタンスである &lt;code&gt;SpringLayout.Constraints&lt;/code&gt; 、指定されたコンポーネントとの制約を関連付けます。</target>
        </trans-unit>
        <trans-unit id="97f5e07abbf189549bdbc5ad08d04eb152337829" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;context&lt;/code&gt; is an instance of &lt;code&gt;AccessControlContext&lt;/code&gt; then the &lt;code&gt;AccessControlContext.checkPermission&lt;/code&gt; method is invoked with the specified permission.</source>
          <target state="translated">場合は &lt;code&gt;context&lt;/code&gt; のインスタンスである &lt;code&gt;AccessControlContext&lt;/code&gt; に、その後 &lt;code&gt;AccessControlContext.checkPermission&lt;/code&gt; メソッドは、指定された権限で起動されます。</target>
        </trans-unit>
        <trans-unit id="b20325f6c4303d0c066b9de050d67cec56121bd6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;context&lt;/code&gt; is an instance of &lt;code&gt;AccessControlContext&lt;/code&gt; then the &lt;code&gt;AccessControlContext.checkPermission&lt;/code&gt; method will be invoked with the &lt;code&gt;FilePermission(file,&quot;read&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">場合は &lt;code&gt;context&lt;/code&gt; のインスタンスである &lt;code&gt;AccessControlContext&lt;/code&gt; に、その後 &lt;code&gt;AccessControlContext.checkPermission&lt;/code&gt; 方法がで呼び出される &lt;code&gt;FilePermission(file,&quot;read&quot;)&lt;/code&gt; 許可。</target>
        </trans-unit>
        <trans-unit id="31ddafe0a0829efbbb709dbf3255ad93832991d8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;context&lt;/code&gt; is not an instance of &lt;code&gt;AccessControlContext&lt;/code&gt; then a &lt;code&gt;SecurityException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; が &lt;code&gt;AccessControlContext&lt;/code&gt; のインスタンスでない場合、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="fcc38633af183f173deffa3cab8c939a608e1eb3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;count&lt;/code&gt; is zero then the remaining arguments are ignored and an empty instance is constructed.</source>
          <target state="translated">場合は &lt;code&gt;count&lt;/code&gt; ゼロで、残りの引数は無視され、空のインスタンスが構築されます。</target>
        </trans-unit>
        <trans-unit id="6852ce4878997a6df2ef650e9b72a8f4bdbefa27" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;d1&lt;/code&gt; and &lt;code&gt;d2&lt;/code&gt; both represent &lt;code&gt;Double.NaN&lt;/code&gt;, then the &lt;code&gt;equals&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;, even though &lt;code&gt;Double.NaN==Double.NaN&lt;/code&gt; has the value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;d1&lt;/code&gt; と &lt;code&gt;d2&lt;/code&gt; の両方が &lt;code&gt;Double.NaN&lt;/code&gt; を表す場合、 &lt;code&gt;Double.NaN==Double.NaN&lt;/code&gt; の値が &lt;code&gt;false&lt;/code&gt; であっても、 &lt;code&gt;equals&lt;/code&gt; メソッドは &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="44bc5bc3fcb0b8a2244ead4272ba0f93aea4bb22" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;d1&lt;/code&gt; represents &lt;code&gt;+0.0&lt;/code&gt; while &lt;code&gt;d2&lt;/code&gt; represents &lt;code&gt;-0.0&lt;/code&gt;, or vice versa, the &lt;code&gt;equal&lt;/code&gt; test has the value &lt;code&gt;false&lt;/code&gt;, even though &lt;code&gt;+0.0==-0.0&lt;/code&gt; has the value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;d1&lt;/code&gt; が &lt;code&gt;+0.0&lt;/code&gt; を表し、 &lt;code&gt;d2&lt;/code&gt; が &lt;code&gt;-0.0&lt;/code&gt; を表す場合、またはその逆の場合、 &lt;code&gt;+0.0==-0.0&lt;/code&gt; の値が &lt;code&gt;true&lt;/code&gt; であっても、 &lt;code&gt;equal&lt;/code&gt; テストの値は &lt;code&gt;false&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="14ba4e970f24dc7ce81bab831a86712d0ca61a84" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;data&lt;/code&gt; is a malformed UTF-16 sequence, the operation will fail with &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;data&lt;/code&gt; 不正なUTF-16シーケンスであり、操作がで失敗します &lt;code&gt;IOException&lt;/code&gt; が。</target>
        </trans-unit>
        <trans-unit id="0bd004ac511dc7f0af51bcd3f300b32e91cfba19" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;daylight&lt;/code&gt; is true, the method should return a name appropriate for daylight saving time even if the specified time zone has not observed daylight saving time in the past.</source>
          <target state="translated">場合は &lt;code&gt;daylight&lt;/code&gt; trueの場合、この方法は、指定された時間帯が過去に夏時間を観察していない場合でも、夏時間の名前の適切なを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="19ba50e0e0c3a073c02888c3b83f64e9b0e40d9f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;dest&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;dest&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="4270f1f433b498dcded315305fe45a8471416ec6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;destCM&lt;/code&gt; is null, an appropriate &lt;code&gt;ColorModel&lt;/code&gt; is used; this &lt;code&gt;ColorModel&lt;/code&gt; may have an alpha channel even if the source &lt;code&gt;ColorModel&lt;/code&gt; is opaque.</source>
          <target state="translated">場合 &lt;code&gt;destCM&lt;/code&gt; がnullの場合、適切な &lt;code&gt;ColorModel&lt;/code&gt; 使用されます。この &lt;code&gt;ColorModel&lt;/code&gt; は、ソース &lt;code&gt;ColorModel&lt;/code&gt; が不透明な場合でも、アルファチャネルを持っている可能性があります。</target>
        </trans-unit>
        <trans-unit id="1a42022849e46c90a898cbd2c51734fedee5cea9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;destination&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a newly-created &lt;code&gt;BufferedImage&lt;/code&gt; will be returned by those methods.</source>
          <target state="translated">場合は &lt;code&gt;destination&lt;/code&gt; ある &lt;code&gt;null&lt;/code&gt; 、新しく作成され &lt;code&gt;BufferedImage&lt;/code&gt; これらのメソッドによって返されます。</target>
        </trans-unit>
        <trans-unit id="86c59a9151e7d15445b65e3a9dd4496ec4d2015f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;dragImage&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no image is used to represent the drag over feedback for this drag operation, but &lt;code&gt;NullPointerException&lt;/code&gt; is not thrown.</source>
          <target state="translated">&lt;code&gt;dragImage&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このドラッグ操作のドラッグオーバーフィードバックを表す画像は使用されませんが、 &lt;code&gt;NullPointerException&lt;/code&gt; はスローされません。</target>
        </trans-unit>
        <trans-unit id="07a758ae6b20af2b136010d8da073e17d7100045" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;dsl&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no drag source listener is registered with the created &lt;code&gt;DragSourceContext&lt;/code&gt;, but &lt;code&gt;NullPointerException&lt;/code&gt; is not thrown.</source>
          <target state="translated">&lt;code&gt;dsl&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、作成された &lt;code&gt;DragSourceContext&lt;/code&gt; にドラッグソースリスナーは登録されませんが、 &lt;code&gt;NullPointerException&lt;/code&gt; はスローされません。</target>
        </trans-unit>
        <trans-unit id="671e32152696994997f192189c484af652fa86e0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;elem&lt;/code&gt;'s children are leaves, and the character at a &lt;code&gt;elem.getEndOffset() - 1&lt;/code&gt; is a newline, this will insert before the newline so that there isn't text after the newline.</source>
          <target state="translated">場合 &lt;code&gt;elem&lt;/code&gt; の子が葉であり、ある文字 &lt;code&gt;elem.getEndOffset() - 1&lt;/code&gt; 改行で改行の後のテキストがないように、これは改行の前に挿入します。</target>
        </trans-unit>
        <trans-unit id="0e833bca2753aebf4a94a4ac1b2271036c873d56" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;emitter&lt;/code&gt; is an instance of &lt;code&gt;
 NotificationBroadcasterSupport&lt;/code&gt; then the MBean's &lt;a href=&quot;#sendNotification(javax.management.Notification)&quot;&gt;&lt;code&gt;sendNotification&lt;/code&gt;&lt;/a&gt; method will call &lt;code&gt;emitter.&lt;/code&gt;&lt;a href=&quot;notificationbroadcastersupport#sendNotification(javax.management.Notification)&quot;&gt;&lt;code&gt;sendNotification&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;code&gt;emitter&lt;/code&gt; のインスタンスである &lt;code&gt; NotificationBroadcasterSupport&lt;/code&gt; その後、MBeanの&lt;a href=&quot;#sendNotification(javax.management.Notification)&quot;&gt; &lt;code&gt;sendNotification&lt;/code&gt; をする&lt;/a&gt;方法を呼び出します &lt;code&gt;emitter.&lt;/code&gt; &lt;a href=&quot;notificationbroadcastersupport#sendNotification(javax.management.Notification)&quot;&gt; &lt;code&gt;sendNotification&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="acf80930c16745703588fc8e28d2d3df55d01d47" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;emitter&lt;/code&gt; is an instance of &lt;code&gt;NotificationBroadcasterSupport&lt;/code&gt; then the MBean's &lt;a href=&quot;standardemittermbean#sendNotification-javax.management.Notification-&quot;&gt;&lt;code&gt;sendNotification&lt;/code&gt;&lt;/a&gt; method will call &lt;code&gt;emitter.&lt;/code&gt;&lt;a href=&quot;notificationbroadcastersupport#sendNotification-javax.management.Notification-&quot;&gt;&lt;code&gt;sendNotification&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;code&gt;emitter&lt;/code&gt; のインスタンスである &lt;code&gt;NotificationBroadcasterSupport&lt;/code&gt; その後、MBeanの&lt;a href=&quot;standardemittermbean#sendNotification-javax.management.Notification-&quot;&gt; &lt;code&gt;sendNotification&lt;/code&gt; をする&lt;/a&gt;方法を呼び出します &lt;code&gt;emitter.&lt;/code&gt; &lt;a href=&quot;notificationbroadcastersupport#sendNotification-javax.management.Notification-&quot;&gt; &lt;code&gt;sendNotification&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8324b3ddb33d3e4e604a3283dc65c4b7e2c1714" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;enable&lt;/code&gt; is true, and there is a security manager installed, this method first calls the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with a &lt;code&gt;SerializablePermission(&quot;enableSubstitution&quot;)&lt;/code&gt; permission to ensure it's ok to enable the stream to do replacement of objects in the stream.</source>
          <target state="translated">場合は &lt;code&gt;enable&lt;/code&gt; trueで、セキュリティマネージャがインストールされている、この方法は、まずセキュリティマネージャの呼び出す &lt;code&gt;checkPermission&lt;/code&gt; と方法を &lt;code&gt;SerializablePermission(&quot;enableSubstitution&quot;)&lt;/code&gt; 、それは、ストリーム内のオブジェクトの交換を行うために、ストリームを有効にするためによいかどうかを確認するための許可。</target>
        </trans-unit>
        <trans-unit id="e97c9dab350a635e1bd626e9e0c916b1c358faad" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;envp&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the subprocess inherits the environment settings of the current process.</source>
          <target state="translated">場合 &lt;code&gt;envp&lt;/code&gt; をがある &lt;code&gt;null&lt;/code&gt; 、サブプロセスは現在のプロセスの環境設定を継承します。</target>
        </trans-unit>
        <trans-unit id="8c047902addb64f0147944efb0c8e559fa07ca7d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;expression&lt;/code&gt; contains any &lt;a href=&quot;xpathfunction&quot;&gt;&lt;code&gt;XPathFunction&lt;/code&gt;&lt;/a&gt;s, they must be available via the &lt;a href=&quot;xpathfunctionresolver&quot;&gt;&lt;code&gt;XPathFunctionResolver&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;xpathexpressionexception&quot;&gt;&lt;code&gt;XPathExpressionException&lt;/code&gt;&lt;/a&gt; will be thrown if the &lt;code&gt;XPathFunction&lt;/code&gt; cannot be resovled with the &lt;code&gt;XPathFunctionResolver&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;expression&lt;/code&gt; どんな含ま&lt;a href=&quot;xpathfunction&quot;&gt; &lt;code&gt;XPathFunction&lt;/code&gt; &lt;/a&gt; Sを、彼らは介して利用可能でなければなりません&lt;a href=&quot;xpathfunctionresolver&quot;&gt; &lt;code&gt;XPathFunctionResolver&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;xpathexpressionexception&quot;&gt; &lt;code&gt;XPathExpressionException&lt;/code&gt; &lt;/a&gt;場合にスローされます &lt;code&gt;XPathFunction&lt;/code&gt; がでresovledすることはできません &lt;code&gt;XPathFunctionResolver&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9da61e21551ded09c572b8458799b783326a7876" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;expression&lt;/code&gt; contains any variables, the &lt;a href=&quot;xpathvariableresolver&quot;&gt;&lt;code&gt;XPathVariableResolver&lt;/code&gt;&lt;/a&gt; in effect &lt;strong&gt;at compile time&lt;/strong&gt; will be used to resolve them.</source>
          <target state="translated">場合 &lt;code&gt;expression&lt;/code&gt; 任意の変数を含む、&lt;a href=&quot;xpathvariableresolver&quot;&gt; &lt;code&gt;XPathVariableResolver&lt;/code&gt; &lt;/a&gt;効果で&lt;strong&gt;、コンパイル時には、&lt;/strong&gt;それらを解決するために使用されます。</target>
        </trans-unit>
        <trans-unit id="d365ce5462b9cce5c4cc76e80ec9bcaf6dc2827e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;f1&lt;/code&gt; and &lt;code&gt;f2&lt;/code&gt; both represent &lt;code&gt;Float.NaN&lt;/code&gt;, then the &lt;code&gt;equals&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;, even though &lt;code&gt;Float.NaN==Float.NaN&lt;/code&gt; has the value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f1&lt;/code&gt; と &lt;code&gt;f2&lt;/code&gt; の両方が &lt;code&gt;Float.NaN&lt;/code&gt; を表す場合、 &lt;code&gt;Float.NaN==Float.NaN&lt;/code&gt; の値が &lt;code&gt;false&lt;/code&gt; であっても、 &lt;code&gt;equals&lt;/code&gt; メソッドは &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="02f2e27c390e74634fe1d9d347fb6aedb7e004fa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;f1&lt;/code&gt; represents &lt;code&gt;+0.0f&lt;/code&gt; while &lt;code&gt;f2&lt;/code&gt; represents &lt;code&gt;-0.0f&lt;/code&gt;, or vice versa, the &lt;code&gt;equal&lt;/code&gt; test has the value &lt;code&gt;false&lt;/code&gt;, even though &lt;code&gt;0.0f==-0.0f&lt;/code&gt; has the value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;f1&lt;/code&gt; が表し &lt;code&gt;+0.0f&lt;/code&gt; ながら &lt;code&gt;f2&lt;/code&gt; 表す &lt;code&gt;-0.0f&lt;/code&gt; 、または逆もまた同様、 &lt;code&gt;equal&lt;/code&gt; テストは、値有する &lt;code&gt;false&lt;/code&gt; もかかわらず、 &lt;code&gt;0.0f==-0.0f&lt;/code&gt; 値を有する &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09a4e8f71e325659bc4df66fba601fd08fe6cbbf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;factoryId&lt;/code&gt; is &quot;javax.xml.stream.XMLEventFactory&quot;, use the service-provider loading facility, defined by the &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class, to attempt to &lt;a href=&quot;../../../../java.base/java/util/serviceloader#load(java.lang.Class,java.lang.ClassLoader)&quot;&gt;locate and load&lt;/a&gt; an implementation of the service using the specified &lt;code&gt;ClassLoader&lt;/code&gt;. If &lt;code&gt;classLoader&lt;/code&gt; is null, the &lt;a href=&quot;../../../../java.base/java/util/serviceloader#load(java.lang.Class)&quot;&gt;default loading mechanism&lt;/a&gt; will apply: That is, the service-provider loading facility will use the &lt;a href=&quot;../../../../java.base/java/lang/thread#getContextClassLoader()&quot;&gt;current thread's context class loader&lt;/a&gt; to attempt to load the service. If the context class loader is null, the &lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;system class loader&lt;/a&gt; will be used.</source>
          <target state="translated">&lt;code&gt;factoryId&lt;/code&gt; が &quot;javax.xml.stream.XMLEventFactory&quot;の場合、&lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;クラスによって定義されたサービスプロバイダーのロード機能を使用して、指定された &lt;code&gt;ClassLoader&lt;/code&gt; を使用してサービスの実装を&lt;a href=&quot;../../../../java.base/java/util/serviceloader#load(java.lang.Class,java.lang.ClassLoader)&quot;&gt;見つけてロード&lt;/a&gt;しようとします。場合は &lt;code&gt;classLoader&lt;/code&gt; nullの場合、&lt;a href=&quot;../../../../java.base/java/util/serviceloader#load(java.lang.Class)&quot;&gt;デフォルトのローディング機構が&lt;/a&gt;適用されます。つまり、サービスプロバイダーの読み込み機能が使用する&lt;a href=&quot;../../../../java.base/java/lang/thread#getContextClassLoader()&quot;&gt;現在のスレッドのコンテキストクラスローダを&lt;/a&gt;サービスをロードしようとします。コンテキストクラスローダーがnullの場合、&lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;システムクラスローダー&lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="d4b52f1fd05c564079d1ef7372e4d9641e12a536" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;factoryId&lt;/code&gt; is &quot;javax.xml.stream.XMLInputFactory&quot;, use the service-provider loading facility, defined by the &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class, to attempt to &lt;a href=&quot;../../../../java.base/java/util/serviceloader#load(java.lang.Class,java.lang.ClassLoader)&quot;&gt;locate and load&lt;/a&gt; an implementation of the service using the specified &lt;code&gt;ClassLoader&lt;/code&gt;. If &lt;code&gt;classLoader&lt;/code&gt; is null, the &lt;a href=&quot;../../../../java.base/java/util/serviceloader#load(java.lang.Class)&quot;&gt;default loading mechanism&lt;/a&gt; will apply: That is, the service-provider loading facility will use the &lt;a href=&quot;../../../../java.base/java/lang/thread#getContextClassLoader()&quot;&gt;current thread's context class loader&lt;/a&gt; to attempt to load the service. If the context class loader is null, the &lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;system class loader&lt;/a&gt; will be used.</source>
          <target state="translated">&lt;code&gt;factoryId&lt;/code&gt; が &quot;javax.xml.stream.XMLInputFactory&quot;の場合、&lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;クラスによって定義されたサービスプロバイダーのロード機能を使用して、指定された &lt;code&gt;ClassLoader&lt;/code&gt; を使用してサービスの実装を&lt;a href=&quot;../../../../java.base/java/util/serviceloader#load(java.lang.Class,java.lang.ClassLoader)&quot;&gt;見つけてロード&lt;/a&gt;しようとします。場合は &lt;code&gt;classLoader&lt;/code&gt; nullの場合、&lt;a href=&quot;../../../../java.base/java/util/serviceloader#load(java.lang.Class)&quot;&gt;デフォルトのローディング機構が&lt;/a&gt;適用されます。つまり、サービスプロバイダーの読み込み機能が使用する&lt;a href=&quot;../../../../java.base/java/lang/thread#getContextClassLoader()&quot;&gt;現在のスレッドのコンテキストクラスローダを&lt;/a&gt;サービスをロードしようとします。コンテキストクラスローダーがnullの場合、&lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;システムクラスローダー&lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="5f7e5734521ac85dd8febe80b1d9322d97653dec" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;factoryId&lt;/code&gt; is &quot;javax.xml.stream.XMLOutputFactory&quot;, use the service-provider loading facility, defined by the &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class, to attempt to &lt;a href=&quot;../../../../java.base/java/util/serviceloader#load(java.lang.Class,java.lang.ClassLoader)&quot;&gt;locate and load&lt;/a&gt; an implementation of the service using the specified &lt;code&gt;ClassLoader&lt;/code&gt;. If &lt;code&gt;classLoader&lt;/code&gt; is null, the &lt;a href=&quot;../../../../java.base/java/util/serviceloader#load(java.lang.Class)&quot;&gt;default loading mechanism&lt;/a&gt; will apply: That is, the service-provider loading facility will use the &lt;a href=&quot;../../../../java.base/java/lang/thread#getContextClassLoader()&quot;&gt;current thread's context class loader&lt;/a&gt; to attempt to load the service. If the context class loader is null, the &lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;system class loader&lt;/a&gt; will be used.</source>
          <target state="translated">&lt;code&gt;factoryId&lt;/code&gt; が &quot;javax.xml.stream.XMLOutputFactory&quot;の場合、&lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;クラスによって定義されたサービスプロバイダーのロード機能を使用して、指定された &lt;code&gt;ClassLoader&lt;/code&gt; を使用してサービスの実装を&lt;a href=&quot;../../../../java.base/java/util/serviceloader#load(java.lang.Class,java.lang.ClassLoader)&quot;&gt;見つけてロード&lt;/a&gt;しようとします。場合は &lt;code&gt;classLoader&lt;/code&gt; nullの場合、&lt;a href=&quot;../../../../java.base/java/util/serviceloader#load(java.lang.Class)&quot;&gt;デフォルトのローディング機構が&lt;/a&gt;適用されます。つまり、サービスプロバイダーの読み込み機能が使用する&lt;a href=&quot;../../../../java.base/java/lang/thread#getContextClassLoader()&quot;&gt;現在のスレッドのコンテキストクラスローダを&lt;/a&gt;サービスをロードしようとします。コンテキストクラスローダーがnullの場合、&lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;システムクラスローダー&lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="a17fe183773e714b799598ab729f9897cba3dda0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;false&lt;/code&gt; is specified for this parameter, no dialog will be displayed and printing will begin immediately on the event-dispatch thread. This blocks any other events, including repaints, from being processed until printing is complete. Although this effectively prevents the table from being changed, it doesn't provide a good user experience. For this reason, specifying &lt;code&gt;false&lt;/code&gt; is only recommended when printing from an application with no visible GUI.</source>
          <target state="translated">このパラメーターに &lt;code&gt;false&lt;/code&gt; が指定されている場合、ダイアログは表示されず、イベントディスパッチスレッドですぐに印刷が開始されます。これにより、再描画を含む他のイベントが、印刷が完了するまで処理されないようにブロックされます。これにより、テーブルが変更されるのを効果的に防ぐことができますが、優れたユーザーエクスペリエンスは提供されません。このため、 &lt;code&gt;false&lt;/code&gt; を指定することは、GUIが表示されていないアプリケーションから印刷する場合にのみ推奨されます。</target>
        </trans-unit>
        <trans-unit id="1eb496259f00592aff5b9be8d63e8acf543432df" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;false&lt;/code&gt;, hides this &lt;code&gt;Window&lt;/code&gt;, its subcomponents, and all of its owned children. The &lt;code&gt;Window&lt;/code&gt; and its subcomponents can be made visible again with a call to &lt;code&gt;#setVisible(true)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; の場合、この &lt;code&gt;Window&lt;/code&gt; 、そのサブコンポーネント、および所有されているすべての子を非表示にします。 &lt;code&gt;Window&lt;/code&gt; およびそのサブコンポーネントを呼び出して再度表示することができる &lt;code&gt;#setVisible(true)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf347bae0413ed579fe931fe93b7cc8014deb8b2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;false&lt;/code&gt;, then don't track the viewport's height. This allows vertical scrolling if the &lt;code&gt;JViewport&lt;/code&gt; is itself embedded in a &lt;code&gt;JScrollPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; の場合、ビューポートの高さを追跡しないでください。これにより、 &lt;code&gt;JViewport&lt;/code&gt; 自体が &lt;code&gt;JScrollPane&lt;/code&gt; に埋め込まれている場合、垂直スクロールが可能になります。</target>
        </trans-unit>
        <trans-unit id="30afcaa6953a6452eb8a238dc84f098a4f12526a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;false&lt;/code&gt;, then don't track the viewport's width. This allows horizontal scrolling if the &lt;code&gt;JViewport&lt;/code&gt; is itself embedded in a &lt;code&gt;JScrollPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; の場合、ビューポートの幅を追跡しないでください。これにより、 &lt;code&gt;JViewport&lt;/code&gt; 自体が &lt;code&gt;JScrollPane&lt;/code&gt; に埋め込まれている場合、水平スクロールが可能になります。</target>
        </trans-unit>
        <trans-unit id="66a8be1fdc88dd83d0d09b1f4ba920fc5ee7189f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;false&lt;/code&gt;, this connection object has not created a communications link to the specified URL.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; の場合、この接続オブジェクトは指定されたURLへの通信リンクを作成していません。</target>
        </trans-unit>
        <trans-unit id="630fae85e6e75f8a21f5f5d31a0400d282d6a9db" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;false&lt;/code&gt;, this connection object has not created a communications link to the specified URL. If &lt;code&gt;true&lt;/code&gt;, the communications link has been established.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; の場合、この接続オブジェクトは指定されたURLへの通信リンクを作成していません。場合は &lt;code&gt;true&lt;/code&gt; 、通信リンクが確立されています。</target>
        </trans-unit>
        <trans-unit id="c9702dde3d9a0118b7dd2912b75454177c523a37" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fdObj&lt;/code&gt; is null then a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">場合 &lt;code&gt;fdObj&lt;/code&gt; が nullであるその後、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="4a8fe7727e267fc41983357258d9e1b31e029f61" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;flag&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, instructs the &lt;code&gt;Timer&lt;/code&gt; to send only one action event to its listeners.</source>
          <target state="translated">&lt;code&gt;flag&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合、1つのアクションイベントのみをリスナーに送信するように &lt;code&gt;Timer&lt;/code&gt; に指示します。</target>
        </trans-unit>
        <trans-unit id="3395a8472778d028cdc391d0c4cd441420219c03" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;flavor&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;attributes&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or is an empty set, this method returns all the printing attribute values this Print Service supports for any possible job. If &lt;code&gt;flavor&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;attributes&lt;/code&gt; is not an empty set, this method returns just the printing attribute values that are compatible with the given doc flavor and/or set of attributes. That is, a &lt;code&gt;null&lt;/code&gt; return value may indicate that specifying this attribute is incompatible with the specified DocFlavor. Also if &lt;code&gt;DocFlavor&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt; it must be a flavor supported by this &lt;code&gt;PrintService&lt;/code&gt;, else &lt;code&gt;IllegalArgumentException&lt;/code&gt; will be thrown.</source>
          <target state="translated">場合 &lt;code&gt;flavor&lt;/code&gt; あり &lt;code&gt;null&lt;/code&gt; と &lt;code&gt;attributes&lt;/code&gt; で &lt;code&gt;null&lt;/code&gt; または空のセットで、このメソッドが返すすべての印刷属性は、すべての可能な仕事のために、この印刷サービスがサポートする値。 &lt;code&gt;flavor&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合、または &lt;code&gt;attributes&lt;/code&gt; が空のセットでない場合、このメソッドは、指定されたドキュメントフレーバーおよび/または属性のセットと互換性のある印刷属性値のみを返します。つまり、 &lt;code&gt;null&lt;/code&gt; の戻り値は、この属性の指定が指定されたDocFlavorと互換性がないことを示している可能性があります。また、 &lt;code&gt;DocFlavor&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合は、この &lt;code&gt;PrintService&lt;/code&gt; でサポートされているフレーバーである必要があります。 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="fc4a3d8e19e95f7c5560897f5b0527a32150fd2c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;flavor&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;attributes&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or is an empty set, this method tells whether this Print Service supports the given printing attribute value for some possible combination of doc flavor and set of attributes. If &lt;code&gt;flavor&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;attributes&lt;/code&gt; is not an empty set, this method tells whether this Print Service supports the given printing attribute value in combination with the given doc flavor and/or set of attributes.</source>
          <target state="translated">た場合 &lt;code&gt;flavor&lt;/code&gt; あり &lt;code&gt;null&lt;/code&gt; と &lt;code&gt;attributes&lt;/code&gt; で &lt;code&gt;null&lt;/code&gt; または空のセットで、このメソッドは、この印刷サービスは、docフレーバや属性のセットのいくつかの可能な組み合わせのために与えられた印刷属性値をサポートしているかどうかを伝えます。 &lt;code&gt;flavor&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合、または &lt;code&gt;attributes&lt;/code&gt; が空のセットでない場合、このメソッドは、この印刷サービスが、指定されたドキュメントフレーバーおよび/または属性のセットと組み合わせて指定された印刷属性値をサポートするかどうかを通知します。</target>
        </trans-unit>
        <trans-unit id="be23bf2f29c50a82b21120383b7ebe578f180829" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;flavor&lt;/code&gt; is null and &lt;code&gt;attributes&lt;/code&gt; is null or is an empty set, this method returns all the printing attribute values this Print Service supports for any possible job. If &lt;code&gt;flavor&lt;/code&gt; is not null or &lt;code&gt;attributes&lt;/code&gt; is not an empty set, this method returns just the printing attribute values that are compatible with the given doc flavor and/or set of attributes. That is, a null return value may indicate that specifying this attribute is incompatible with the specified DocFlavor. Also if DocFlavor is not null it must be a flavor supported by this PrintService, else IllegalArgumentException will be thrown.</source>
          <target state="translated">場合は &lt;code&gt;flavor&lt;/code&gt; ヌルとされ &lt;code&gt;attributes&lt;/code&gt; nullまたは空のセットで、このメソッドが返すすべての印刷属性は、すべての可能な仕事のために、この印刷サービスがサポートする値。 &lt;code&gt;flavor&lt;/code&gt; がnullでない場合、または &lt;code&gt;attributes&lt;/code&gt; が空のセットでない場合、このメソッドは、指定されたドキュメントフレーバーや属性のセットと互換性のある印刷属性値のみを返します。つまり、nullの戻り値は、この属性の指定が指定されたDocFlavorと互換性がないことを示している可能性があります。また、DocFlavorがnullでない場合は、このPrintServiceがサポートするフレーバーである必要があります。そうでない場合は、IllegalArgumentExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="6d49f1a825da9124482947de19b8854b16f9cfcd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;flavor&lt;/code&gt; is null and &lt;code&gt;attributes&lt;/code&gt; is null or is an empty set, this method tells whether this Print Service supports the given printing attribute value for some possible combination of doc flavor and set of attributes. If &lt;code&gt;flavor&lt;/code&gt; is not null or &lt;code&gt;attributes&lt;/code&gt; is not an empty set, this method tells whether this Print Service supports the given printing attribute value in combination with the given doc flavor and/or set of attributes.</source>
          <target state="translated">場合 &lt;code&gt;flavor&lt;/code&gt; nullで、 &lt;code&gt;attributes&lt;/code&gt; nullまたは空のセットで、このメソッドは、この印刷サービスは、docフレーバや属性のセットのいくつかの可能な組み合わせのために与えられた印刷属性値をサポートしているかどうかを伝えます。 &lt;code&gt;flavor&lt;/code&gt; がnullでないか、 &lt;code&gt;attributes&lt;/code&gt; が空のセットでない場合、このメソッドは、この印刷サービスが、指定されたdocフレーバーや属性セットと組み合わせて、指定された印刷属性値をサポートするかどうかを通知します。</target>
        </trans-unit>
        <trans-unit id="728f88aebecd0c6c9117a6392cef0bb533b3cbde" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;format&lt;/code&gt; is &lt;code&gt;&quot;java.class&quot;&lt;/code&gt;, the &lt;a href=&quot;../lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; specified by the bundle name is loaded by calling &lt;a href=&quot;../lang/classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt;&lt;/a&gt;. Then, a &lt;code&gt;ResourceBundle&lt;/code&gt; is instantiated by calling &lt;a href=&quot;../lang/class#newInstance--&quot;&gt;&lt;code&gt;Class.newInstance()&lt;/code&gt;&lt;/a&gt;. Note that the &lt;code&gt;reload&lt;/code&gt; flag is ignored for loading class-based resource bundles in this default implementation.</source>
          <target state="translated">場合は &lt;code&gt;format&lt;/code&gt; ある &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 、&lt;a href=&quot;../lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;を呼び出すことによってロードされ、バンドル名によって指定された&lt;a href=&quot;../lang/classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt; を&lt;/a&gt;。次に、 &lt;code&gt;ResourceBundle&lt;/code&gt; が&lt;a href=&quot;../lang/class#newInstance--&quot;&gt; &lt;code&gt;Class.newInstance()&lt;/code&gt; を&lt;/a&gt;呼び出してインスタンス化されます。このデフォルトの実装では、クラスベースのリソースバンドルをロードする場合、 &lt;code&gt;reload&lt;/code&gt; フラグは無視されます。</target>
        </trans-unit>
        <trans-unit id="e6039368456cf5fbee27aa04ee3108fdc83e13de" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;format&lt;/code&gt; is &lt;code&gt;&quot;java.class&quot;&lt;/code&gt;, the &lt;a href=&quot;../lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; specified by the bundle name is loaded with the given class loader. If the &lt;code&gt;Class&lt;/code&gt; is found and accessible then the &lt;code&gt;ResourceBundle&lt;/code&gt; is instantiated. The resource bundle is accessible if the package of the bundle class file is open unconditionally; otherwise, &lt;code&gt;IllegalAccessException&lt;/code&gt; will be thrown. Note that the &lt;code&gt;reload&lt;/code&gt; flag is ignored for loading class-based resource bundles in this default implementation.</source>
          <target state="translated">場合は &lt;code&gt;format&lt;/code&gt; ある &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 、&lt;a href=&quot;../lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;バンドル名によって指定は、与えられたクラスローダでロードされます。場合は &lt;code&gt;Class&lt;/code&gt; 見つから、アクセスされ &lt;code&gt;ResourceBundle&lt;/code&gt; インスタンス化されます。バンドルクラスファイルのパッケージが無条件に開かれている場合、リソースバンドルにアクセスできます。そうしないと、 &lt;code&gt;IllegalAccessException&lt;/code&gt; がスローされます。このデフォルトの実装では、クラスベースのリソースバンドルをロードするために &lt;code&gt;reload&lt;/code&gt; フラグが無視されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a2ee8c7630c25cce52a31a7ddf6438af84a04bab" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;format&lt;/code&gt; is &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;, &lt;a href=&quot;#toResourceName(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;toResourceName(bundlename,
 &quot;properties&quot;)&lt;/code&gt;&lt;/a&gt; is called to get the resource name. If &lt;code&gt;reload&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, &lt;a href=&quot;../lang/classloader#getResource(java.lang.String)&quot;&gt;&lt;code&gt;load.getResource&lt;/code&gt;&lt;/a&gt; is called to get a &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; for creating a &lt;a href=&quot;../net/urlconnection&quot;&gt;&lt;code&gt;URLConnection&lt;/code&gt;&lt;/a&gt;. This &lt;code&gt;URLConnection&lt;/code&gt; is used to &lt;a href=&quot;../net/urlconnection#setUseCaches(boolean)&quot;&gt;disable the caches&lt;/a&gt; of the underlying resource loading layers, and to &lt;a href=&quot;../net/urlconnection#getInputStream()&quot;&gt;get an &lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;. Otherwise, &lt;a href=&quot;../lang/classloader#getResourceAsStream(java.lang.String)&quot;&gt;&lt;code&gt;loader.getResourceAsStream&lt;/code&gt;&lt;/a&gt; is called to get an &lt;a href=&quot;../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;. Then, a &lt;a href=&quot;propertyresourcebundle&quot;&gt;&lt;code&gt;PropertyResourceBundle&lt;/code&gt;&lt;/a&gt; is constructed with the &lt;code&gt;InputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; が &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 場合、&lt;a href=&quot;#toResourceName(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;toResourceName(bundlename, &quot;properties&quot;)&lt;/code&gt; &lt;/a&gt;が呼び出されてリソース名が取得されます。場合は &lt;code&gt;reload&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; 、&lt;a href=&quot;../lang/classloader#getResource(java.lang.String)&quot;&gt; &lt;code&gt;load.getResource&lt;/code&gt; は、&lt;/a&gt;取得するために呼び出される&lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; を&lt;/a&gt;作成するため&lt;a href=&quot;../net/urlconnection&quot;&gt; &lt;code&gt;URLConnection&lt;/code&gt; &lt;/a&gt;。この &lt;code&gt;URLConnection&lt;/code&gt; は、基になるリソース読み込みレイヤーの&lt;a href=&quot;../net/urlconnection#setUseCaches(boolean)&quot;&gt;キャッシュ&lt;/a&gt;を無効にし&lt;a href=&quot;../net/urlconnection#getInputStream()&quot;&gt;、 &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;を取得するために使用されます。それ以外の場合は、&lt;a href=&quot;../lang/classloader#getResourceAsStream(java.lang.String)&quot;&gt; &lt;code&gt;loader.getResourceAsStream&lt;/code&gt; &lt;/a&gt;が呼び出されて&lt;a href=&quot;../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;を取得します。次に、&lt;a href=&quot;propertyresourcebundle&quot;&gt; &lt;code&gt;PropertyResourceBundle&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;InputStream&lt;/code&gt; で構築されます。</target>
        </trans-unit>
        <trans-unit id="4b8ff2ae3c3edfe6e55d36fcd777f2a4b551bda0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;format&lt;/code&gt; is &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;, &lt;a href=&quot;resourcebundle.control#toResourceName-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;toResourceName(bundlename,
 &quot;properties&quot;)&lt;/code&gt;&lt;/a&gt; is called to get the resource name. If &lt;code&gt;reload&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, &lt;a href=&quot;../lang/classloader#getResource-java.lang.String-&quot;&gt;&lt;code&gt;load.getResource&lt;/code&gt;&lt;/a&gt; is called to get a &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; for creating a &lt;a href=&quot;../net/urlconnection&quot;&gt;&lt;code&gt;URLConnection&lt;/code&gt;&lt;/a&gt;. This &lt;code&gt;URLConnection&lt;/code&gt; is used to &lt;a href=&quot;../net/urlconnection#setUseCaches-boolean-&quot;&gt;disable the caches&lt;/a&gt; of the underlying resource loading layers, and to &lt;a href=&quot;../net/urlconnection#getInputStream--&quot;&gt;get an &lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;. Otherwise, &lt;a href=&quot;../lang/classloader#getResourceAsStream-java.lang.String-&quot;&gt;&lt;code&gt;loader.getResourceAsStream&lt;/code&gt;&lt;/a&gt; is called to get an &lt;a href=&quot;../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;. Then, a &lt;a href=&quot;propertyresourcebundle&quot;&gt;&lt;code&gt;PropertyResourceBundle&lt;/code&gt;&lt;/a&gt; is constructed with the &lt;code&gt;InputStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; が &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; の場合、リソース名を取得するために&lt;a href=&quot;resourcebundle.control#toResourceName-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;toResourceName(bundlename, &quot;properties&quot;)&lt;/code&gt; &lt;/a&gt;が呼び出されます。場合は &lt;code&gt;reload&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; 、&lt;a href=&quot;../lang/classloader#getResource-java.lang.String-&quot;&gt; &lt;code&gt;load.getResource&lt;/code&gt; は、&lt;/a&gt;取得するために呼び出される&lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; を&lt;/a&gt;作成するため&lt;a href=&quot;../net/urlconnection&quot;&gt; &lt;code&gt;URLConnection&lt;/code&gt; &lt;/a&gt;。この &lt;code&gt;URLConnection&lt;/code&gt; は、基になるリソース読み込みレイヤーの&lt;a href=&quot;../net/urlconnection#setUseCaches-boolean-&quot;&gt;キャッシュ&lt;/a&gt;を無効にし&lt;a href=&quot;../net/urlconnection#getInputStream--&quot;&gt;、 &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;を取得するために使用されます。それ以外の場合は、&lt;a href=&quot;../lang/classloader#getResourceAsStream-java.lang.String-&quot;&gt; &lt;code&gt;loader.getResourceAsStream&lt;/code&gt; &lt;/a&gt;が呼び出されて、&lt;a href=&quot;../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;が取得されます。次に、&lt;a href=&quot;propertyresourcebundle&quot;&gt; &lt;code&gt;PropertyResourceBundle&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;InputStream&lt;/code&gt; で構築されます。。</target>
        </trans-unit>
        <trans-unit id="f42cfefdfecf42455430978075c24a908e609d41" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;format&lt;/code&gt; is neither &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; nor &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; が &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; でも &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; でもない場合、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="1fc7cb12e560b7ce1ea4006578a8c4be2c3028af" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;formatName&lt;/code&gt; is not the name of a supported metadata format, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;formatName&lt;/code&gt; がサポートされているメタデータ形式の名前でない場合、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="c2beafb307d147c084fdb79b125de967839d099f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;formatName&lt;/code&gt; is not the name of a supported metadata format, &lt;code&gt;null&lt;/code&gt; may be returned.</source>
          <target state="translated">&lt;code&gt;formatName&lt;/code&gt; がサポートされているメタデータ形式の名前でない場合、 &lt;code&gt;null&lt;/code&gt; が返されることがあります。</target>
        </trans-unit>
        <trans-unit id="f4999a54931bc187d155c5a8b3698a6b48785bb4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;free&lt;/code&gt; is called multiple times, the subsequent calls to &lt;code&gt;free&lt;/code&gt; are treated as a no-op.</source>
          <target state="translated">&lt;code&gt;free&lt;/code&gt; が複数回呼び出された場合、その後の &lt;code&gt;free&lt;/code&gt; の呼び出しはno-opとして扱われます。</target>
        </trans-unit>
        <trans-unit id="4f5c627c071a3f95cd6975b3038e253343f70ee2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;functionName&lt;/code&gt; or &lt;code&gt;arity&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">場合 &lt;code&gt;functionName&lt;/code&gt; をか &lt;code&gt;arity&lt;/code&gt; ある &lt;code&gt;null&lt;/code&gt; の場合、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="b2bca824599e9b044b10a21f505308df9e325ad3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;genParams&lt;/code&gt; is true, this method generates new p, q and g parameters. If it is false, the method uses precomputed parameters for the modulus length requested. If there are no precomputed parameters for that modulus length, an exception will be thrown.</source>
          <target state="translated">場合 &lt;code&gt;genParams&lt;/code&gt; trueの場合、このメソッドは新しいP、Qおよびgのパラメータを生成します。falseの場合、メソッドは要求されたモジュラス長に対して事前に計算されたパラメーターを使用します。そのモジュラス長に対して事前に計算されたパラメータがない場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="3d738c59b5a30411d7967aa3404684da21b829b4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;genParams&lt;/code&gt; is true, this method generates new p, q and g parameters. If it is false, the method uses precomputed parameters for the modulus length requested. If there are no precomputed parameters for that modulus length, an exception will be thrown. It is guaranteed that there will always be default parameters for modulus lengths of 512 and 1024 bits.</source>
          <target state="translated">場合 &lt;code&gt;genParams&lt;/code&gt; trueの場合、このメソッドは新しいP、Qおよびgのパラメータを生成します。falseの場合、メソッドは、要求された係数の長さに対して事前計算されたパラメーターを使用します。その係数の長さに対して事前計算されたパラメーターがない場合、例外がスローされます。512および1024ビットのモジュラス長のデフォルトパラメータが常に存在することが保証されています。</target>
        </trans-unit>
        <trans-unit id="b63b16077e4b88eda3ca54b2339f4fa714c5920f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;getAllowsInvalid()&lt;/code&gt; is false, this will ask the &lt;code&gt;Format&lt;/code&gt; to format the current text on every edit.</source>
          <target state="translated">&lt;code&gt;getAllowsInvalid()&lt;/code&gt; がfalseの場合、編集のたびに現在のテキストをフォーマットするように &lt;code&gt;Format&lt;/code&gt; に要求します。</target>
        </trans-unit>
        <trans-unit id="974da0d9b27cacc783e6a3eeaa75fb9cb956c4a5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;getLocalizedMessage&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;, then just the class name is returned.</source>
          <target state="translated">&lt;code&gt;getLocalizedMessage&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; を返す場合、クラス名のみが返されます。</target>
        </trans-unit>
        <trans-unit id="907b2824eea31c80cbd26162e8a3337f722ad7b0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;getSourceNumProgressivePasses&lt;/code&gt; is equal to &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;, returns &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;getSourceNumProgressivePasses&lt;/code&gt; がに等しい &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; で、返し &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; では。</target>
        </trans-unit>
        <trans-unit id="24e1894481f6c66504adea99b2ac962cbd98ec2e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;getSourceNumProgressivePasses&lt;/code&gt; is equal to &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;, returns &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;. Otherwise, returns &lt;code&gt;getSourceMinProgressivePass() +
 getSourceNumProgressivePasses() - 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getSourceNumProgressivePasses&lt;/code&gt; が &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; と等しい場合は、Integer.MAX_VALUEを返し &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 。それ以外の場合は、 &lt;code&gt;getSourceMinProgressivePass() + getSourceNumProgressivePasses() - 1&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="d26c245764deb5e5a49c02d6fb3e134690c580e0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;getSupportsIncrement&lt;/code&gt; returns true, this returns two Actions suitable for incrementing/decrementing the value.</source>
          <target state="translated">場合 &lt;code&gt;getSupportsIncrement&lt;/code&gt; が値をデクリメント/インクリメント適しtrueを返す、このリターン2つのアクション。</target>
        </trans-unit>
        <trans-unit id="0b83bf6cf2191fd0ca1ce76107162612831c8212" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;getUI()&lt;/code&gt; fails for any reason, it calls this method before returning &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;getUI()&lt;/code&gt; はなんらかの理由で失敗し、それが返す前にこのメソッドを呼び出し &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb8d881a6862460eb3f3e1ff18bdc2cc39110927" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;getUI()&lt;/code&gt; fails for any reason, it calls this method before returning &lt;code&gt;null&lt;/code&gt;. Subclasses may choose to do more or less here.</source>
          <target state="translated">場合 &lt;code&gt;getUI()&lt;/code&gt; はなんらかの理由で失敗し、それが返す前にこのメソッドを呼び出し &lt;code&gt;null&lt;/code&gt; 。サブクラスは、ここで多かれ少なかれ行うことを選択できます。</target>
        </trans-unit>
        <trans-unit id="8b1a74b2ecbae4b36efdb3fffb81c50933310a1f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;identifier&lt;/code&gt; is not a simple SQL identifier, &lt;code&gt;identifier&lt;/code&gt; will be enclosed in double quotes if not already present. If the datasource does not support double quotes for delimited identifiers, the identifier should be enclosed by the string returned from &lt;a href=&quot;databasemetadata#getIdentifierQuoteString()&quot;&gt;&lt;code&gt;DatabaseMetaData.getIdentifierQuoteString()&lt;/code&gt;&lt;/a&gt;. If the datasource does not support delimited identifiers, a &lt;code&gt;SQLFeatureNotSupportedException&lt;/code&gt; should be thrown.</source>
          <target state="translated">&lt;code&gt;identifier&lt;/code&gt; が単純なSQL識別子でない場合、 &lt;code&gt;identifier&lt;/code&gt; がまだ存在しない場合は二重引用符で囲みます。データソースが区切り識別子の二重引用符をサポートしていない場合、識別子は&lt;a href=&quot;databasemetadata#getIdentifierQuoteString()&quot;&gt; &lt;code&gt;DatabaseMetaData.getIdentifierQuoteString()&lt;/code&gt; &lt;/a&gt;から返される文字列で囲む必要があります。データソースが区切り識別子をサポートしていない場合は、 &lt;code&gt;SQLFeatureNotSupportedException&lt;/code&gt; をスローする必要があります。</target>
        </trans-unit>
        <trans-unit id="aa36ccf5c744f0752d847fd1a68c0f81f1adea54" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;init&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the loop variable will be initialized to its &lt;a href=&quot;#empty(java.lang.invoke.MethodType)&quot;&gt;default value&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;code&gt;init&lt;/code&gt; がある &lt;code&gt;null&lt;/code&gt; 、ループ変数は、そのに初期化される&lt;a href=&quot;#empty(java.lang.invoke.MethodType)&quot;&gt;デフォルト値&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="66c8f48850938200dd0dd54407e6a4723e8d13f8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;init&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt;, it must have return type &lt;code&gt;V&lt;/code&gt;. Its parameter list (of some &lt;a href=&quot;methodhandles#astar&quot;&gt;form &lt;code&gt;(A*)&lt;/code&gt;&lt;/a&gt;) must be &lt;a href=&quot;methodhandles#effid&quot;&gt;effectively identical&lt;/a&gt; to the external parameter list &lt;code&gt;(A...)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; 以外の場合、戻り値の型 &lt;code&gt;V&lt;/code&gt; である必要があります。そのパラメータリスト（何らかの&lt;a href=&quot;methodhandles#astar&quot;&gt;形式 &lt;code&gt;(A*)&lt;/code&gt; &lt;/a&gt;）は、外部パラメータリスト &lt;code&gt;(A...)&lt;/code&gt; と&lt;a href=&quot;methodhandles#effid&quot;&gt;実質的に同一である&lt;/a&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="9263d80c7e6d313c1f67a86574a2a10853f3cd4f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;input&lt;/code&gt; has a length of zero, this method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;input&lt;/code&gt; ゼロの長さを有し、この方法は、返し &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8350717158b00042f3abe9d471b9cbca7a0340d6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;inputLen&lt;/code&gt; is zero, this method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;inputLen&lt;/code&gt; がゼロであり、このメソッドは返し &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b9261b779ae1d6f321ad2f0afc91c251c41e791" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;inputLen&lt;/code&gt; is zero, this method returns a length of zero.</source>
          <target state="translated">場合 &lt;code&gt;inputLen&lt;/code&gt; がゼロであり、この方法は、ゼロの長さを返します。</target>
        </trans-unit>
        <trans-unit id="7b360875f169639471eb29957edb6d34c0bd1677" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isIconOnly&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; then only icon is painted.</source>
          <target state="translated">場合 &lt;code&gt;isIconOnly&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; のみアイコンが描かれています。</target>
        </trans-unit>
        <trans-unit id="6205d082ac75d25ba929a2bf10aabc50076ee5cf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isPalette&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, sets palette border and title</source>
          <target state="translated">場合 &lt;code&gt;isPalette&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; 、パレットの境界線とタイトルを設定します</target>
        </trans-unit>
        <trans-unit id="1bd0823852f4205f4524ddce229347454ba40a49" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isParseBigDecimal()&lt;/code&gt; is false (the default), most integer values are returned as &lt;code&gt;Long&lt;/code&gt; objects, no matter how they are written: &lt;code&gt;&quot;17&quot;&lt;/code&gt; and &lt;code&gt;&quot;17.000&quot;&lt;/code&gt; both parse to &lt;code&gt;Long(17)&lt;/code&gt;. Values that cannot fit into a &lt;code&gt;Long&lt;/code&gt; are returned as &lt;code&gt;Double&lt;/code&gt;s. This includes values with a fractional part, infinite values, &lt;code&gt;NaN&lt;/code&gt;, and the value -0.0. &lt;code&gt;DecimalFormat&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; decide whether to return a &lt;code&gt;Double&lt;/code&gt; or a &lt;code&gt;Long&lt;/code&gt; based on the presence of a decimal separator in the source string. Doing so would prevent integers that overflow the mantissa of a double, such as &lt;code&gt;&quot;-9,223,372,036,854,775,808.00&quot;&lt;/code&gt;, from being parsed accurately.</source>
          <target state="translated">場合 &lt;code&gt;isParseBigDecimal()&lt;/code&gt; は false（デフォルト）であるとして、ほとんどの整数値が返されます &lt;code&gt;Long&lt;/code&gt; ：オブジェクト、それらが書かれているかに関係なく &lt;code&gt;&quot;17&quot;&lt;/code&gt; と &lt;code&gt;&quot;17.000&quot;&lt;/code&gt; の両方の解析 &lt;code&gt;Long(17)&lt;/code&gt; 。 &lt;code&gt;Long&lt;/code&gt; に収まらない値は &lt;code&gt;Double&lt;/code&gt; として返されます。これには、小数部分のある値、無限値、 &lt;code&gt;NaN&lt;/code&gt; 、および値-0.0が含まれます。 &lt;code&gt;DecimalFormat&lt;/code&gt; は、ソース文字列内の小数点の有無に基づいて、 &lt;code&gt;Double&lt;/code&gt; または &lt;code&gt;Long&lt;/code&gt; を返すかどうかを決定しませ&lt;em&gt;ん&lt;/em&gt;。そうすることで、doubleの仮数からオーバーフローする整数を防ぐことができます。 &lt;code&gt;&quot;-9,223,372,036,854,775,808.00&quot;&lt;/code&gt; 、正確に解析されません。</target>
        </trans-unit>
        <trans-unit id="900faee5ccc6c44b5dd8cbc004ad0b37fa6413ed" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isParseBigDecimal()&lt;/code&gt; is true, values are returned as &lt;code&gt;BigDecimal&lt;/code&gt; objects. The values are the ones constructed by &lt;a href=&quot;../math/bigdecimal#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;BigDecimal(String)&lt;/code&gt;&lt;/a&gt; for corresponding strings in locale-independent format. The special cases negative and positive infinity and NaN are returned as &lt;code&gt;Double&lt;/code&gt; instances holding the values of the corresponding &lt;code&gt;Double&lt;/code&gt; constants.</source>
          <target state="translated">場合 &lt;code&gt;isParseBigDecimal()&lt;/code&gt; がtrueの場合、値は次のように返される &lt;code&gt;BigDecimal&lt;/code&gt; オブジェクト。値は、ロケールに依存しない形式の対応する文字列に対して&lt;a href=&quot;../math/bigdecimal#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;BigDecimal(String)&lt;/code&gt; &lt;/a&gt;によって作成された値です。特殊なケースの負および正の無限大とNaNは、対応する &lt;code&gt;Double&lt;/code&gt; 定数の値を保持する &lt;code&gt;Double&lt;/code&gt; インスタンスとして返されます。</target>
        </trans-unit>
        <trans-unit id="3991537febb7c383b2b1e9676a6139c310d5f3bc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;isParseBigDecimal()&lt;/code&gt; is true, values are returned as &lt;code&gt;BigDecimal&lt;/code&gt; objects. The values are the ones constructed by &lt;a href=&quot;../math/bigdecimal#BigDecimal-java.lang.String-&quot;&gt;&lt;code&gt;BigDecimal.BigDecimal(String)&lt;/code&gt;&lt;/a&gt; for corresponding strings in locale-independent format. The special cases negative and positive infinity and NaN are returned as &lt;code&gt;Double&lt;/code&gt; instances holding the values of the corresponding &lt;code&gt;Double&lt;/code&gt; constants.</source>
          <target state="translated">場合 &lt;code&gt;isParseBigDecimal()&lt;/code&gt; が trueの場合、値は次のように返される &lt;code&gt;BigDecimal&lt;/code&gt; オブジェクト。値は、ロケールに依存しない形式の対応する文字列に対して&lt;a href=&quot;../math/bigdecimal#BigDecimal-java.lang.String-&quot;&gt; &lt;code&gt;BigDecimal.BigDecimal(String)&lt;/code&gt; &lt;/a&gt;によって構築された値です。特殊なケースの負および正の無限大とNaNは、対応する &lt;code&gt;Double&lt;/code&gt; 定数の値を保持する &lt;code&gt;Double&lt;/code&gt; インスタンスとして返されます。</target>
        </trans-unit>
        <trans-unit id="ad7955d8b155abbd159e8530f81bd04621448d7f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;issuerDN&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, it should contain a distinguished name, in RFC 2253 format.</source>
          <target state="translated">&lt;code&gt;issuerDN&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合は、RFC 2253形式の識別名が含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="fade5d7398b0a36fb97c29bda07ffec0ca96c5ef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;issuerDN&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, it should contain a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure is as follows.</source>
          <target state="translated">&lt;code&gt;issuerDN&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; ではない場合、X.501で定義されているように、DERエンコードされた単一の識別名が含まれている必要があります。この構造のASN.1表記は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="bf8daeb7b51eb9c17c6b351281641b26236105bd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;iterator&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; it defaults to a method handle which behaves like &lt;a href=&quot;../iterable#iterator()&quot;&gt;&lt;code&gt;Iterable.iterator()&lt;/code&gt;&lt;/a&gt;. In that case, the internal parameter list &lt;code&gt;(V T A...)&lt;/code&gt; must have at least one &lt;code&gt;A&lt;/code&gt; type, and the default iterator handle parameter is adjusted to accept the leading &lt;code&gt;A&lt;/code&gt; type, as if by the &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt; conversion method. The leading &lt;code&gt;A&lt;/code&gt; type must be &lt;code&gt;Iterable&lt;/code&gt; or a subtype thereof. This conversion step, done at loop construction time, must not throw a &lt;code&gt;WrongMethodTypeException&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;iterator&lt;/code&gt; ある &lt;code&gt;null&lt;/code&gt; のように振る舞うメソッドハンドルにそれがデフォルト&lt;a href=&quot;../iterable#iterator()&quot;&gt; &lt;code&gt;Iterable.iterator()&lt;/code&gt; &lt;/a&gt;。その場合、内部パラメーターリスト &lt;code&gt;(V T A...)&lt;/code&gt; は少なくとも1つの &lt;code&gt;A&lt;/code&gt; タイプが必要であり、デフォルトのイテレーターハンドルパラメーターは、&lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt;変換メソッドの場合と同様に、先頭の &lt;code&gt;A&lt;/code&gt; タイプを受け入れるように調整されます。先頭の &lt;code&gt;A&lt;/code&gt; タイプは、 &lt;code&gt;Iterable&lt;/code&gt; またはそのサブタイプである必要があります。ループ構築時に実行されるこの変換ステップでは、 &lt;code&gt;WrongMethodTypeException&lt;/code&gt; をスローしてはなりません。</target>
        </trans-unit>
        <trans-unit id="bef1d3d13a9d6651764b8de67667b94279a7b1f7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;jdk.io.permissionsUseCanonicalPath&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, a simple &lt;code&gt;npath&lt;/code&gt; is inside a wildcard &lt;code&gt;npath&lt;/code&gt; if and only if &lt;code&gt; simple_npath.relativize(wildcard_npath)&lt;/code&gt; is exactly &quot;..&quot;, a simple &lt;code&gt;npath&lt;/code&gt; is recursively inside a wildcard &lt;code&gt;npath&lt;/code&gt; if and only if &lt;code&gt;simple_npath.relativize(wildcard_npath)&lt;/code&gt; is a series of one or more &quot;..&quot;. This means &quot;/-&quot; implies &quot;/foo&quot; but not &quot;foo&quot;.</source>
          <target state="translated">場合 &lt;code&gt;jdk.io.permissionsUseCanonicalPath&lt;/code&gt; がある &lt;code&gt;false&lt;/code&gt; 、シンプルな &lt;code&gt;npath&lt;/code&gt; 、ワイルドカードの内側にある &lt;code&gt;npath&lt;/code&gt; 場合にのみ &lt;code&gt; simple_npath.relativize(wildcard_npath)&lt;/code&gt; 正確である「..」、簡単な &lt;code&gt;npath&lt;/code&gt; ワイルドカードの内側に再帰的である &lt;code&gt;npath&lt;/code&gt; 場合にのみ &lt;code&gt;simple_npath.relativize(wildcard_npath)&lt;/code&gt; は、1つ以上の「..」のシリーズです。これは、「/-」が「/ foo」を意味し、「foo」を意味しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="aa0b8f2907bf5b6de34e006f7a244b928659a30f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;jdk.io.permissionsUseCanonicalPath&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, a simple &lt;code&gt;cpath&lt;/code&gt; is inside a wildcard &lt;code&gt;cpath&lt;/code&gt; if and only if after removing the base name (the last name in the pathname's name sequence) from the former the remaining part equals to the latter, a simple &lt;code&gt;cpath&lt;/code&gt; is recursively inside a wildcard &lt;code&gt;cpath&lt;/code&gt; if and only if the former starts with the latter.</source>
          <target state="translated">&lt;code&gt;jdk.io.permissionsUseCanonicalPath&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、前者からベース名（パス名の名前シーケンスの姓）を削除した後、残りの部分が後者と等しい場合にのみ、単純な &lt;code&gt;cpath&lt;/code&gt; がワイルドカード &lt;code&gt;cpath&lt;/code&gt; 内にあります。単純な &lt;code&gt;cpath&lt;/code&gt; 前者が後者で始まる場合に限り、ワイルドカード &lt;code&gt;cpath&lt;/code&gt; 内で再帰的になります。</target>
        </trans-unit>
        <trans-unit id="b3806db4319c80c008ed8ec50076576313291db5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is &lt;code&gt;non-null&lt;/code&gt;, an &lt;code&gt;Action&lt;/code&gt; is created using the value from the defaults with key &lt;code&gt;key&lt;/code&gt;. The value identifies the sound resource to load when &lt;code&gt;actionPerformed&lt;/code&gt; is invoked on the &lt;code&gt;Action&lt;/code&gt;. The sound resource is loaded into a &lt;code&gt;byte[]&lt;/code&gt; by way of &lt;code&gt;getClass().getResourceAsStream()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; が &lt;code&gt;non-null&lt;/code&gt; 場合、 &lt;code&gt;Action&lt;/code&gt; はデフォルトの値とキーキーを使用して作成され &lt;code&gt;key&lt;/code&gt; 。この値は、 &lt;code&gt;actionPerformed&lt;/code&gt; が &lt;code&gt;Action&lt;/code&gt; で呼び出されたときにロードするサウンドリソースを識別します。サウンドリソースは、 &lt;code&gt;getClass().getResourceAsStream()&lt;/code&gt; を介して &lt;code&gt;byte[]&lt;/code&gt; ロードされます。</target>
        </trans-unit>
        <trans-unit id="e51ae0dac7e8d263aae86348d05a6f149420f00b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, it should contain a single DER encoded SubjectPublicKeyInfo structure, as defined in X.509. The ASN.1 notation for this structure is as follows.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合、X.509で定義されているように、DERエンコードされた単一のSubjectPublicKeyInfo構造が含まれている必要があります。この構造のASN.1表記は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="712b765888f31bac4d2a38f3d4f75895e152c895" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;keyBindingList's&lt;/code&gt; length is odd, the last element is ignored.</source>
          <target state="translated">場合 &lt;code&gt;keyBindingList's&lt;/code&gt; 長さが奇数で、最後の要素は無視されます。</target>
        </trans-unit>
        <trans-unit id="32625fd006abff028ed31d4e842cc2324285bb3a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;len&lt;/code&gt; is zero, then no bytes are read and &lt;code&gt;0&lt;/code&gt; is returned; otherwise, there is an attempt to read at least one byte. If no byte is available because the stream is at end of file, the value &lt;code&gt;-1&lt;/code&gt; is returned; otherwise, at least one byte is read and stored into &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;len&lt;/code&gt; がゼロであり、その後、何バイトが読み取られず、 &lt;code&gt;0&lt;/code&gt; が返されます。そうでない場合は、少なくとも1バイトを読み取ろうとします。ストリームがファイルの終わりにあるために使用可能なバイトがない場合、値 &lt;code&gt;-1&lt;/code&gt; が返されます。それ以外の場合は、少なくとも1バイトが読み取られ、 &lt;code&gt;b&lt;/code&gt; に格納されます。</target>
        </trans-unit>
        <trans-unit id="8e5aa1bc7a742384a935498942c42e5e07740bdd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;len&lt;/code&gt; is zero, then no bytes are read and &lt;code&gt;0&lt;/code&gt; is returned; otherwise, there is an attempt to read up to &lt;code&gt;len&lt;/code&gt; bytes.</source>
          <target state="translated">場合 &lt;code&gt;len&lt;/code&gt; がゼロであり、その後、何バイトが読み取られず、 &lt;code&gt;0&lt;/code&gt; が返されます。それ以外の場合は、最大 &lt;code&gt;len&lt;/code&gt; バイトを読み取ろうとします。</target>
        </trans-unit>
        <trans-unit id="5438d4f7b68e1d94da5051ffd2373361f8220bec" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;listener&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is performed.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、例外はスローされず、アクションは実行されません。</target>
        </trans-unit>
        <trans-unit id="14cef07d064064c29c7a5fe965b5831e7bd96e0b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;locale&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, the current default &lt;code&gt;Locale&lt;/code&gt; returned by &lt;code&gt;Locale.getLocale&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;code&gt;locale&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、 &lt;code&gt;Locale.getLocale&lt;/code&gt; によって返された現在のデフォルトの &lt;code&gt;Locale&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="7d066008eefc78e3a51bd16c0caf8b74c778d465" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mapper&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; then &lt;code&gt;(k) -&amp;gt; ((o, n) -&amp;gt; n)&lt;/code&gt; is assumed.</source>
          <target state="translated">&lt;code&gt;mapper&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、 &lt;code&gt;(k) -&amp;gt; ((o, n) -&amp;gt; n)&lt;/code&gt; が想定されます。</target>
        </trans-unit>
        <trans-unit id="237bb0004c48dd310c68797e03807fbf69feb843" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mapper&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then</source>
          <target state="translated">場合 &lt;code&gt;mapper&lt;/code&gt; ある &lt;code&gt;null&lt;/code&gt; の場合、</target>
        </trans-unit>
        <trans-unit id="407e3ad33f33ee6203d55e51347b6733cfed4536" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;markpos&lt;/code&gt; is &lt;code&gt;-1&lt;/code&gt; (no mark has been set or the mark has been invalidated), an &lt;code&gt;IOException&lt;/code&gt; is thrown. Otherwise, &lt;code&gt;pos&lt;/code&gt; is set equal to &lt;code&gt;markpos&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;markpos&lt;/code&gt; のがある &lt;code&gt;-1&lt;/code&gt; （何のマークが設定されていないか、マークが無効になっていた）、 &lt;code&gt;IOException&lt;/code&gt; がスローされます。それ以外の場合、 &lt;code&gt;pos&lt;/code&gt; は &lt;code&gt;markpos&lt;/code&gt; と等しく設定されます。</target>
        </trans-unit>
        <trans-unit id="ad329c08ba7e98db38c9c94383d0c1a4b4e1d823" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mechanism&lt;/code&gt; is listed in the &lt;code&gt;jdk.sasl.disabledMechanisms&lt;/code&gt; security property, it will be ignored and this method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mechanism&lt;/code&gt; が &lt;code&gt;jdk.sasl.disabledMechanisms&lt;/code&gt; セキュリティプロパティにリストされている場合、それは無視され、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0bb5428935fd216a01577def3121a1bf636692f3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;message&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="a9f2493ae9d005a4929a69f19605e63b6eba077d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;method&lt;/code&gt; is one of the following methods, it is processed as described below:</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; が次のいずれかのメソッドである場合、以下のように処理されます。</target>
        </trans-unit>
        <trans-unit id="80272f80ea0d9272e8e3872b8249981af2f99944" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;method&lt;/code&gt; overrides &lt;a href=&quot;../../../../java.base/java/lang/object#finalize()&quot;&gt;&lt;code&gt;Object.finalize&lt;/code&gt;&lt;/a&gt;, it is ignored.</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; が&lt;a href=&quot;../../../../java.base/java/lang/object#finalize()&quot;&gt; &lt;code&gt;Object.finalize&lt;/code&gt; を&lt;/a&gt;オーバーライドする場合、それは無視されます。</target>
        </trans-unit>
        <trans-unit id="e54e6c513d26ba9e689c9210d9c6fc20b9490552" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;model&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method clears the current &lt;code&gt;ColorModel&lt;/code&gt; of this &lt;code&gt;BufferedImageFilter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;model&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドはこの &lt;code&gt;BufferedImageFilter&lt;/code&gt; の現在の &lt;code&gt;ColorModel&lt;/code&gt; をクリアします。</target>
        </trans-unit>
        <trans-unit id="0c2e23895c3bfb12eba7ee751967501b320f0652" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;moduleAndPkg&lt;/code&gt; contains a &quot;&lt;code&gt;/&lt;/code&gt;&quot; character, the prefix before the &quot;&lt;code&gt;/&lt;/code&gt;&quot; character is the module name and the suffix after the &quot;&lt;code&gt;/&lt;/code&gt;&quot; character is the package name. The package suffix may be empty; however, if a module name is present, it must be nonempty. If &lt;code&gt;moduleAndPkg&lt;/code&gt; does not contain a &quot;&lt;code&gt;/&lt;/code&gt;&quot; character, the entire argument is interpreted as a package name.</source>
          <target state="translated">場合 &lt;code&gt;moduleAndPkg&lt;/code&gt; が「含まれている &lt;code&gt;/&lt;/code&gt; 」文字を、「前の接頭語 &lt;code&gt;/&lt;/code&gt; 」後「の文字は、モジュール名と接尾辞である &lt;code&gt;/&lt;/code&gt; 」の文字がパッケージ名です。パッケージのサフィックスは空の場合があります。ただし、モジュール名が存在する場合は、空でない必要があります。 &lt;code&gt;moduleAndPkg&lt;/code&gt; に「 &lt;code&gt;/&lt;/code&gt; 」文字が含まれていない場合、引数全体がパッケージ名として解釈されます。</target>
        </trans-unit>
        <trans-unit id="264bd5ff686dc149927060f95422b38db18ee5ed" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ms &amp;gt; 0&lt;/code&gt;, waits until all pixels are delivered as timeout expires.</source>
          <target state="translated">&lt;code&gt;ms &amp;gt; 0&lt;/code&gt; 場合、タイムアウトが経過すると、すべてのピクセルが配信されるまで待機します。</target>
        </trans-unit>
        <trans-unit id="b27bb44e815edaa410b82b8a519582447426eeeb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ms &amp;lt; 0&lt;/code&gt;, returns &lt;code&gt;true&lt;/code&gt; if all pixels are grabbed, &lt;code&gt;false&lt;/code&gt; otherwise and does not wait.</source>
          <target state="translated">場合 &lt;code&gt;ms &amp;lt; 0&lt;/code&gt; 、戻り &lt;code&gt;true&lt;/code&gt; 全ての画素がつかんでいる場合は、 &lt;code&gt;false&lt;/code&gt; をそうでないと、待機していません。</target>
        </trans-unit>
        <trans-unit id="037e3456b138d91962ada484f36e147f33a6541b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ms == 0&lt;/code&gt;, waits until all pixels are delivered</source>
          <target state="translated">&lt;code&gt;ms == 0&lt;/code&gt; 場合、すべてのピクセルが配信されるまで待機します</target>
        </trans-unit>
        <trans-unit id="14625748855476ca64ac0e0ad4823a75fd7ff91e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; denotes a primitive type or void, an attempt will be made to locate a user-defined class in the unnamed package whose name is &lt;code&gt;name&lt;/code&gt;. Therefore, this method cannot be used to obtain any of the &lt;code&gt;Class&lt;/code&gt; objects representing primitive types or void.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; がプリミティブ型またはvoidを示す場合、名前が &lt;code&gt;name&lt;/code&gt; である名前のないパッケージでユーザー定義クラスを検索しようとします。したがって、このメソッドを使用して、プリミティブ型またはvoidを表す &lt;code&gt;Class&lt;/code&gt; オブジェクトを取得することはできません。</target>
        </trans-unit>
        <trans-unit id="426264473ef88575d36cf8a0d5508390a0fa058c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; denotes an array class, the component type of the array class is loaded but not initialized.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; が配列クラスを表す場合、配列クラスのコンポーネントタイプはロードされますが、初期化されません。</target>
        </trans-unit>
        <trans-unit id="33ac51e088b5d11aa55931b104e2ffe194b82871" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; does not name an MBean, this method throws &lt;a href=&quot;instancenotfoundexception&quot;&gt;&lt;code&gt;InstanceNotFoundException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; がMBeanを指定していない場合、このメソッドは&lt;a href=&quot;instancenotfoundexception&quot;&gt; &lt;code&gt;InstanceNotFoundException&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="31a1346ae62f4c960e5aaf99e30947fb827be94b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is empty, returns a new instance of this context (which represents the same naming context as this context, but its environment may be modified independently and it may be accessed concurrently).</source>
          <target state="translated">場合 &lt;code&gt;name&lt;/code&gt; 空の場合、このコンテキストの新しいインスタンスを返す（このコンテキストと同じネーミング・コンテキストを表し、その環境は、独立して修飾されてもよく、それは同時にアクセスすることができます）。</target>
        </trans-unit>
        <trans-unit id="a4300c4d88a600996e56c3b7c63fa1bc6c68c8b8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newChild&lt;/code&gt; is a &lt;code&gt;DocumentFragment&lt;/code&gt; object, &lt;code&gt;oldChild&lt;/code&gt; is replaced by all of the &lt;code&gt;DocumentFragment&lt;/code&gt; children, which are inserted in the same order. If the &lt;code&gt;newChild&lt;/code&gt; is already in the tree, it is first removed.</source>
          <target state="translated">場合 &lt;code&gt;newChild&lt;/code&gt; がある &lt;code&gt;DocumentFragment&lt;/code&gt; オブジェクト、 &lt;code&gt;oldChild&lt;/code&gt; は全てで置き換えられる &lt;code&gt;DocumentFragment&lt;/code&gt; 同じ順序で挿入されている子どもたち、。場合 &lt;code&gt;newChild&lt;/code&gt; がすでにツリー内に存在する、それが最初に削除されます。</target>
        </trans-unit>
        <trans-unit id="8fda31fb895f12fd65525af110d36c4f0062c17e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;newChild&lt;/code&gt; is a &lt;code&gt;DocumentFragment&lt;/code&gt; object, all of its children are inserted, in the same order, before &lt;code&gt;refChild&lt;/code&gt;. If the &lt;code&gt;newChild&lt;/code&gt; is already in the tree, it is first removed.</source>
          <target state="translated">場合 &lt;code&gt;newChild&lt;/code&gt; がある &lt;code&gt;DocumentFragment&lt;/code&gt; オブジェクトは、そのすべての子が前に、同じ順序で、挿入されている &lt;code&gt;refChild&lt;/code&gt; の。場合 &lt;code&gt;newChild&lt;/code&gt; がすでにツリー内に存在する、それが最初に削除されます。</target>
        </trans-unit>
        <trans-unit id="b9a6fbecabc4d75c8cb3a22604105c27e3ceaf7f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;obj&lt;/code&gt; also implements &lt;a href=&quot;../descriptorread&quot;&gt;&lt;code&gt;DescriptorRead&lt;/code&gt;&lt;/a&gt;, then its &lt;a href=&quot;../descriptorread#getDescriptor()&quot;&gt;&lt;code&gt;getDescriptor()&lt;/code&gt;&lt;/a&gt; method must also return the same value as for this object.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; が&lt;a href=&quot;../descriptorread&quot;&gt; &lt;code&gt;DescriptorRead&lt;/code&gt; &lt;/a&gt;も実装している場合、その&lt;a href=&quot;../descriptorread#getDescriptor()&quot;&gt; &lt;code&gt;getDescriptor()&lt;/code&gt; &lt;/a&gt;メソッドもこのオブジェクトと同じ値を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="9da71f6612d3d5ce3b22299926128ecddac8e404" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;obj&lt;/code&gt; also implements &lt;a href=&quot;../descriptorread&quot;&gt;&lt;code&gt;DescriptorRead&lt;/code&gt;&lt;/a&gt;, then its &lt;a href=&quot;../descriptorread#getDescriptor--&quot;&gt;&lt;code&gt;getDescriptor()&lt;/code&gt;&lt;/a&gt; method must also return the same value as for this object.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; が&lt;a href=&quot;../descriptorread&quot;&gt; &lt;code&gt;DescriptorRead&lt;/code&gt; &lt;/a&gt;も実装している場合、その&lt;a href=&quot;../descriptorread#getDescriptor--&quot;&gt; &lt;code&gt;getDescriptor()&lt;/code&gt; &lt;/a&gt;メソッドもこのオブジェクトと同じ値を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="e91688719b84d5b134a62a7edfd802aae113078d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;obj&lt;/code&gt; is a URL string, create an object (typically a context) identified by the URL. For example, suppose this is an LDAP URL context factory. If &lt;code&gt;obj&lt;/code&gt; is &quot;ldap://ldap.wiz.com/o=wiz,c=us&quot;, getObjectInstance() would return the context named by the distinguished name &quot;o=wiz, c=us&quot; at the LDAP server ldap.wiz.com. This context can then be used to resolve LDAP names (such as &quot;cn=George&quot;) relative to that context.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; がURL文字列の場合、URLで識別されるオブジェクト（通常はコンテキスト）を作成します。たとえば、これがLDAP URLコンテキストファクトリであるとします。場合 &lt;code&gt;obj&lt;/code&gt; がある「LDAP：//ldap.wiz.com/o=wiz,c=us」、getObjectInstance（）「たち=ウィズ、C = O」LDAPサーバのLDAPで識別名によって指定されたコンテキストを返します。 wiz.com。このコンテキストを使用して、そのコンテキストに関連するLDAP名（「cn = George」など）を解決できます。</target>
        </trans-unit>
        <trans-unit id="32945fa108fdfdcbdbc1bca10a08bd1d1b6d1907" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;obj&lt;/code&gt; is an array of URL strings, the assumption is that the URLs are equivalent in terms of the context to which they refer. Verification of whether the URLs are, or need to be, equivalent is up to the context factory. The order of the URLs in the array is not significant. The object returned by getObjectInstance() is like that of the single URL case. It is the object named by the URLs.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; がURL文字列の配列である場合、URLはそれらが参照するコンテキストに関して同等であると想定されます。 URLが同等であるか、同等である必要があるかどうかの検証は、コンテキストファクトリに依存します。配列内のURLの順序は重要ではありません。 getObjectInstance（）によって返されるオブジェクトは、単一のURLの場合と似ています。これは、URLによって名前が付けられたオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="a6602e383de5967e74ad68c0b9673a5a019fb76c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;obj&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, it should be a primitive array of type &lt;code&gt;TransferType&lt;/code&gt;. Otherwise, a &lt;code&gt;ClassCastException&lt;/code&gt; is thrown. An &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; might be thrown if the coordinates are not in bounds, or if &lt;code&gt;obj&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt; and is not large enough to hold the pixel data.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合は、 &lt;code&gt;TransferType&lt;/code&gt; 型のプリミティブ配列である必要があります。それ以外の場合は、 &lt;code&gt;ClassCastException&lt;/code&gt; がスローされます。AN &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; が座標が境界内にない場合にスローされるかもしれない場合、または &lt;code&gt;obj&lt;/code&gt; がない &lt;code&gt;null&lt;/code&gt; 画素データを保持するのに十分な大きさではありません。</target>
        </trans-unit>
        <trans-unit id="b15b227abfe354ba6f8da5faaa4e98ce43464a60" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;obj&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, it should be a primitive array of type TransferType. Otherwise, a &lt;code&gt;ClassCastException&lt;/code&gt; is thrown. An &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; is thrown if the coordinates are not in bounds, or if &lt;code&gt;obj&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt; and is not large enough to hold the pixel data.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合は、TransferType型のプリミティブ配列である必要があります。それ以外の場合は、 &lt;code&gt;ClassCastException&lt;/code&gt; がスローされます。AN &lt;code&gt;ArrayIndexOutOfBoundsException&lt;/code&gt; が座標が境界内にない場合にスローされるか、または場合 &lt;code&gt;obj&lt;/code&gt; がない &lt;code&gt;null&lt;/code&gt; 画素データを保持するのに十分な大きさではありません。</target>
        </trans-unit>
        <trans-unit id="1aa9408c35607b4446b25efa8c3b62e3cb06a3e5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;obj&lt;/code&gt; is null, create a context for resolving URLs of the scheme associated with this factory. The resulting context is not tied to a specific URL: it is able to handle arbitrary URLs with this factory's scheme id. For example, invoking &lt;code&gt;getObjectInstance()&lt;/code&gt; with &lt;code&gt;obj&lt;/code&gt; set to null on an LDAP URL context factory would return a context that can resolve LDAP URLs such as &quot;ldap://ldap.wiz.com/o=wiz,c=us&quot; and &quot;ldap://ldap.umich.edu/o=umich,c=us&quot;.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; がnullの場合、このファクトリに関連付けられたスキームのURLを解決するためのコンテキストを作成します。結果のコンテキストは特定のURLに関連付けられていません。このファクトリのスキーマIDで任意のURLを処理できます。たとえば、LDAP URLコンテキストファクトリで &lt;code&gt;obj&lt;/code&gt; をnullに設定して &lt;code&gt;getObjectInstance()&lt;/code&gt; を呼び出すと、「ldap：//ldap.wiz.com/o=wiz,c=us」や「」などのLDAP URLを解決できるコンテキストが返されます。 ldap：//ldap.umich.edu/o=umich,c=us &quot;。</target>
        </trans-unit>
        <trans-unit id="ec1a4fe48f2a096cb276495abb05e869b10eb3e0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;obj&lt;/code&gt; is of any other type, the behavior of &lt;code&gt;getObjectInstance()&lt;/code&gt; is determined by the context factory implementation.</source>
          <target state="translated">場合 &lt;code&gt;obj&lt;/code&gt; が任意の他のタイプの挙動である &lt;code&gt;getObjectInstance()&lt;/code&gt; コンテキストファクトリ実装によって決定されます。</target>
        </trans-unit>
        <trans-unit id="e3f8bc9645ac7697c4ff55e25f0175b71947d108" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;object&lt;/code&gt; is a &lt;a href=&quot;../../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; that implements &lt;code&gt;interfaceName&lt;/code&gt;, &lt;code&gt;object&lt;/code&gt; is returned downcast to type &lt;a href=&quot;../../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt;; otherwise an exception is thrown.</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; が &lt;code&gt;interfaceName&lt;/code&gt; を実装する&lt;a href=&quot;../../../java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;場合、 &lt;code&gt;object&lt;/code&gt; は&lt;a href=&quot;../../../java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;型にダウンキャストされて返されます。それ以外の場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="d9eb2deae4cbfdfe775a6fd21ec7ae0a0f4b83da" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;object&lt;/code&gt; is an instance of &lt;code&gt;interfaceName&lt;/code&gt;, &lt;code&gt;object&lt;/code&gt; is returned downcast to type &lt;a href=&quot;attribute&quot;&gt;&lt;code&gt;Attribute&lt;/code&gt;&lt;/a&gt;; otherwise an exception is thrown.</source>
          <target state="translated">場合は &lt;code&gt;object&lt;/code&gt; のインスタンスである &lt;code&gt;interfaceName&lt;/code&gt; 、 &lt;code&gt;object&lt;/code&gt; 型にダウンキャスト返される&lt;a href=&quot;attribute&quot;&gt; &lt;code&gt;Attribute&lt;/code&gt; &lt;/a&gt;。それ以外の場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="d1c8f73d41108e88b12d37509a1209cf7ee237a6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;off&lt;/code&gt; is negative, or &lt;code&gt;len&lt;/code&gt; is negative, or &lt;code&gt;off+len&lt;/code&gt; is greater than the length of the array &lt;code&gt;b&lt;/code&gt;, then an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;off&lt;/code&gt; が負の場合、 &lt;code&gt;len&lt;/code&gt; が負の場合、または &lt;code&gt;off+len&lt;/code&gt; が配列 &lt;code&gt;b&lt;/code&gt; の長さより大きい場合は、 &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="6f916136c09ba20fe608884bc6b34b5a0a8ea28c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;optionType&lt;/code&gt; is &lt;code&gt;YES_NO_OPTION&lt;/code&gt;, or &lt;code&gt;YES_NO_CANCEL_OPTION&lt;/code&gt; and the &lt;code&gt;options&lt;/code&gt; parameter is &lt;code&gt;null&lt;/code&gt;, then the options are supplied by the Look and Feel.</source>
          <target state="translated">場合 &lt;code&gt;optionType&lt;/code&gt; ある &lt;code&gt;YES_NO_OPTION&lt;/code&gt; 、または &lt;code&gt;YES_NO_CANCEL_OPTION&lt;/code&gt; および &lt;code&gt;options&lt;/code&gt; パラメータが &lt;code&gt;null&lt;/code&gt; の場合、オプションは、ルック・アンド・フィールによって供給されています。</target>
        </trans-unit>
        <trans-unit id="700e8398ef8d2ca991374c2cd5c61cb5ec47b634" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;optionType&lt;/code&gt; is &lt;code&gt;YES_NO_OPTION&lt;/code&gt;, or &lt;code&gt;YES_NO_CANCEL_OPTION&lt;/code&gt; and the &lt;code&gt;options&lt;/code&gt; parameter is &lt;code&gt;null&lt;/code&gt;, then the options are supplied by the look and feel.</source>
          <target state="translated">場合 &lt;code&gt;optionType&lt;/code&gt; ある &lt;code&gt;YES_NO_OPTION&lt;/code&gt; 、または &lt;code&gt;YES_NO_CANCEL_OPTION&lt;/code&gt; および &lt;code&gt;options&lt;/code&gt; パラメータが &lt;code&gt;null&lt;/code&gt; の場合、オプションは、ルックアンドフィールによって供給されています。</target>
        </trans-unit>
        <trans-unit id="8e4fdd88cb8f430b71b6c946c7cb4a475103672c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;orders&lt;/code&gt; is a stream of purchase orders, and each purchase order contains a collection of line items, then the following produces a stream containing all the line items in all the orders:</source>
          <target state="translated">場合は &lt;code&gt;orders&lt;/code&gt; 購入注文の流れであり、各発注書がラインアイテムのコレクションが含まれ、そして以下は、すべての注文内のすべてのラインアイテムを含むストリームを生成します。</target>
        </trans-unit>
        <trans-unit id="dc1e542a49fcca8372c3f1e72acb2239503c5a25" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;output.remaining()&lt;/code&gt; bytes are insufficient to hold the result, a &lt;code&gt;ShortBufferException&lt;/code&gt; is thrown.</source>
          <target state="translated">場合 &lt;code&gt;output.remaining()&lt;/code&gt; バイトが結果を保持するのに不十分である、 &lt;code&gt;ShortBufferException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="6b021403fe5efad5b861bd19c30c59be586bb654" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;output.remaining()&lt;/code&gt; bytes are insufficient to hold the result, a &lt;code&gt;ShortBufferException&lt;/code&gt; is thrown. In this case, repeat this call with a larger output buffer. Use &lt;a href=&quot;#getOutputSize(int)&quot;&gt;&lt;code&gt;getOutputSize&lt;/code&gt;&lt;/a&gt; to determine how big the output buffer should be.</source>
          <target state="translated">場合 &lt;code&gt;output.remaining()&lt;/code&gt; バイトが結果を保持するのに不十分である、 &lt;code&gt;ShortBufferException&lt;/code&gt; がスローされます。この場合、より大きな出力バッファでこの呼び出しを繰り返します。&lt;a href=&quot;#getOutputSize(int)&quot;&gt; &lt;code&gt;getOutputSize&lt;/code&gt; &lt;/a&gt;を使用して、出力バッファーの大きさを決定します。</target>
        </trans-unit>
        <trans-unit id="84d8cee5c4a220d78576a202ebce821b35cedb55" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;output.remaining()&lt;/code&gt; bytes are insufficient to hold the result, a &lt;code&gt;ShortBufferException&lt;/code&gt; is thrown. In this case, repeat this call with a larger output buffer. Use &lt;a href=&quot;cipher#getOutputSize-int-&quot;&gt;&lt;code&gt;getOutputSize&lt;/code&gt;&lt;/a&gt; to determine how big the output buffer should be.</source>
          <target state="translated">場合 &lt;code&gt;output.remaining()&lt;/code&gt; バイトが結果を保持するのに不十分である、 &lt;code&gt;ShortBufferException&lt;/code&gt; がスローされます。この場合、より大きな出力バッファーでこの呼び出しを繰り返します。&lt;a href=&quot;cipher#getOutputSize-int-&quot;&gt; &lt;code&gt;getOutputSize&lt;/code&gt; &lt;/a&gt;を使用して、出力バッファーの大きさを決定します。</target>
        </trans-unit>
        <trans-unit id="f043acbc87ab351734e5aed1db463393096cbfa9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;output&lt;/code&gt; is an &lt;code&gt;ImageOutputStream&lt;/code&gt;, calls to the &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;writeToSequence&lt;/code&gt;, and &lt;code&gt;prepareWriteEmpty&lt;/code&gt;/&lt;code&gt;endWriteEmpty&lt;/code&gt; methods will preserve the existing contents of the stream. Other write methods, such as &lt;code&gt;writeInsert&lt;/code&gt;, &lt;code&gt;replaceStreamMetadata&lt;/code&gt;, &lt;code&gt;replaceImageMetadata&lt;/code&gt;, &lt;code&gt;replacePixels&lt;/code&gt;, &lt;code&gt;prepareInsertEmpty&lt;/code&gt;/&lt;code&gt;endInsertEmpty&lt;/code&gt;, and &lt;code&gt;endWriteSequence&lt;/code&gt;, require the full contents of the stream to be readable and writable, and may alter any portion of the stream.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; が &lt;code&gt;ImageOutputStream&lt;/code&gt; の場合、 &lt;code&gt;write&lt;/code&gt; 、 &lt;code&gt;writeToSequence&lt;/code&gt; 、および &lt;code&gt;prepareWriteEmpty&lt;/code&gt; / &lt;code&gt;endWriteEmpty&lt;/code&gt; メソッドの呼び出しは、ストリームの既存のコンテンツを保持します。 &lt;code&gt;writeInsert&lt;/code&gt; 、 &lt;code&gt;replaceStreamMetadata&lt;/code&gt; 、 &lt;code&gt;replaceImageMetadata&lt;/code&gt; 、 &lt;code&gt;replacePixels&lt;/code&gt; 、 &lt;code&gt;prepareInsertEmpty&lt;/code&gt; / &lt;code&gt;endInsertEmpty&lt;/code&gt; 、および &lt;code&gt;endWriteSequence&lt;/code&gt; などの他の書き込みメソッドは、ストリームの完全なコンテンツが読み取りおよび書き込み可能である必要があり、ストリームの任意の部分を変更する可能性があります。</target>
        </trans-unit>
        <trans-unit id="e8efb2d341a19b3a0630891bb7481cba8f49a495" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;param&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or the above steps have not yielded an image or an &lt;code&gt;ImageTypeSpecifier&lt;/code&gt;, the first value obtained from the &lt;code&gt;imageTypes&lt;/code&gt; parameter is used. Typically, the caller will set &lt;code&gt;imageTypes&lt;/code&gt; to the value of &lt;code&gt;getImageTypes(imageIndex)&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;param&lt;/code&gt; がある &lt;code&gt;null&lt;/code&gt; または上記のステップは、画像又は得られていない &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; 、から得られる第一の値 &lt;code&gt;imageTypes&lt;/code&gt; 使用されるパラメータ。通常、呼び出し元は &lt;code&gt;imageTypes&lt;/code&gt; を &lt;code&gt;getImageTypes(imageIndex)&lt;/code&gt; の値に設定します。</target>
        </trans-unit>
        <trans-unit id="12c0e44f695a02a0e0c1cf51002f7968c10d35bc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;params.getCipherSuites()&lt;/code&gt; is non-null, &lt;code&gt;setEnabledCipherSuites()&lt;/code&gt; is called with that value.</source>
          <target state="translated">&lt;code&gt;params.getCipherSuites()&lt;/code&gt; がnullでない場合、その値で &lt;code&gt;setEnabledCipherSuites()&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4301233809b8c6e0214fe220a512fcb9eb677755" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;params.getNeedClientAuth()&lt;/code&gt; or &lt;code&gt;params.getWantClientAuth()&lt;/code&gt; return &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;setNeedClientAuth(true)&lt;/code&gt; and &lt;code&gt;setWantClientAuth(true)&lt;/code&gt; are called, respectively; otherwise &lt;code&gt;setWantClientAuth(false)&lt;/code&gt; is called.</source>
          <target state="translated">もし &lt;code&gt;params.getNeedClientAuth()&lt;/code&gt; または &lt;code&gt;params.getWantClientAuth()&lt;/code&gt; を返す &lt;code&gt;true&lt;/code&gt; 、 &lt;code&gt;setNeedClientAuth(true)&lt;/code&gt; と &lt;code&gt;setWantClientAuth(true)&lt;/code&gt; をそれぞれ、と呼ばれています。それ以外の場合は、 &lt;code&gt;setWantClientAuth(false)&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="5dc9bed100bed19e8adfc8e9302ad1262864c82f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;params.getProtocols()&lt;/code&gt; is non-null, &lt;code&gt;setEnabledProtocols()&lt;/code&gt; is called with that value.</source>
          <target state="translated">&lt;code&gt;params.getProtocols()&lt;/code&gt; がnull以外の場合、その値を使用して &lt;code&gt;setEnabledProtocols()&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="477f25588563362cacb627b17133335ce391a72c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;params.getSNIMatchers()&lt;/code&gt; is non-null, the engine will configure its SNI matchers with that value.</source>
          <target state="translated">&lt;code&gt;params.getSNIMatchers()&lt;/code&gt; がnullでない場合、エンジンはその値でSNIマッチャーを構成します。</target>
        </trans-unit>
        <trans-unit id="799d996f3532ac2b9dac7ce11be2fa83700e6665" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;params.getSNIMatchers()&lt;/code&gt; is non-null, the socket will configure its SNI matchers with that value.</source>
          <target state="translated">&lt;code&gt;params.getSNIMatchers()&lt;/code&gt; がnull以外の場合、ソケットはSNIマッチャーをその値で構成します。</target>
        </trans-unit>
        <trans-unit id="d68acdf564188e7ceaa402d78c141e40ba803119" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;params.getServerNames()&lt;/code&gt; is non-null, the engine will configure its server names with that value.</source>
          <target state="translated">&lt;code&gt;params.getServerNames()&lt;/code&gt; がnullでない場合、エンジンはサーバー名をその値で構成します。</target>
        </trans-unit>
        <trans-unit id="f3b5eca36dcc4e54ec46277b9ac0712351942ce0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;params.getServerNames()&lt;/code&gt; is non-null, the socket will configure its server names with that value.</source>
          <target state="translated">&lt;code&gt;params.getServerNames()&lt;/code&gt; がnullでない場合、ソケットはその値でサーバー名を構成します。</target>
        </trans-unit>
        <trans-unit id="5d3cebc72399735c7028c3947622a912c96f3867" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;params&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a default read param will be used for all images.</source>
          <target state="translated">場合 &lt;code&gt;params&lt;/code&gt; ある &lt;code&gt;null&lt;/code&gt; 、デフォルトの読み込みパラメータは、すべての画像のために使用されます。</target>
        </trans-unit>
        <trans-unit id="164da61ede6423d7452b5925f00510b40a4ff9a3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;parent&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; then the new &lt;code&gt;File&lt;/code&gt; instance is created as if by invoking the single-argument &lt;code&gt;File&lt;/code&gt; constructor on the given &lt;code&gt;child&lt;/code&gt; pathname string.</source>
          <target state="translated">場合は &lt;code&gt;parent&lt;/code&gt; あり &lt;code&gt;null&lt;/code&gt; 、新しい &lt;code&gt;File&lt;/code&gt; インスタンス単一引数の呼び出しであるかのように作成された &lt;code&gt;File&lt;/code&gt; 指定した上で、コンストラクタを &lt;code&gt;child&lt;/code&gt; パス名文字列。</target>
        </trans-unit>
        <trans-unit id="dc8d5e6586d766794fde25c90e2efcfa3efd1a6d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; is the path to a file, then the following produces a stream of the &lt;code&gt;words&lt;/code&gt; contained in that file:</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; がファイルへのパスである場合、以下はそのファイルに含まれる &lt;code&gt;words&lt;/code&gt; ストリームを生成します。</target>
        </trans-unit>
        <trans-unit id="a03ee7e8529525f1d22d51655d541d0ee465a7a0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;popup&lt;/code&gt; is null, and &lt;code&gt;getInheritsPopupMenu&lt;/code&gt; returns true, then &lt;code&gt;getComponentPopupMenu&lt;/code&gt; will be delegated to the parent. This provides for a way to make all child components inherit the popupmenu of the parent.</source>
          <target state="translated">場合は &lt;code&gt;popup&lt;/code&gt; nullで、かつ &lt;code&gt;getInheritsPopupMenu&lt;/code&gt; がtrueを返した場合、 &lt;code&gt;getComponentPopupMenu&lt;/code&gt; は親に委譲されます。これにより、すべての子コンポーネントが親のポップアップメニューを継承するようになります。</target>
        </trans-unit>
        <trans-unit id="bc7971a45b4c8a0415fc982c79c19ec96e7fd238" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pos&lt;/code&gt; is non-null, and refers to &lt;code&gt;Field.ARGUMENT&lt;/code&gt;, the location of the first formatted string will be returned.</source>
          <target state="translated">場合 &lt;code&gt;pos&lt;/code&gt; が非ヌルであり、そして指す &lt;code&gt;Field.ARGUMENT&lt;/code&gt; 、最初のフォーマットされた文字列の位置が返されます。</target>
        </trans-unit>
        <trans-unit id="a60a9d806b7d757c47a033e228e73c85243699ca" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;propertyName&lt;/code&gt; or &lt;code&gt;listener&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or invalid, no exception is thrown and no action is taken.</source>
          <target state="translated">場合 &lt;code&gt;propertyName&lt;/code&gt; のか、 &lt;code&gt;listener&lt;/code&gt; ある &lt;code&gt;null&lt;/code&gt; または無効、例外がスローされていないとも処理は行われません。</target>
        </trans-unit>
        <trans-unit id="da632f0b344946ea9b5f1aa47e37fb7b4a7642b3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;propertyName&lt;/code&gt; or &lt;code&gt;listener&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no exception is thrown and no action is taken.</source>
          <target state="translated">場合 &lt;code&gt;propertyName&lt;/code&gt; のか &lt;code&gt;listener&lt;/code&gt; ある &lt;code&gt;null&lt;/code&gt; 、例外がスローされていないとも処理は行われません。</target>
        </trans-unit>
        <trans-unit id="99c505c662d5ba404c469fac648652d0acd78c4b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;provider&lt;/code&gt; implements the &lt;code&gt;RegisterableService&lt;/code&gt; interface, its &lt;code&gt;onDeregistration&lt;/code&gt; method will be called.</source>
          <target state="translated">&lt;code&gt;provider&lt;/code&gt; が &lt;code&gt;RegisterableService&lt;/code&gt; インターフェースを実装する場合、その &lt;code&gt;onDeregistration&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="cdaa1756b63c97e31b5453fc52eecff803807ee3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;provider&lt;/code&gt; implements the &lt;code&gt;RegisterableService&lt;/code&gt; interface, its &lt;code&gt;onRegistration&lt;/code&gt; method will be called once for each category it is registered under. Its &lt;code&gt;onDeregistration&lt;/code&gt; method will be called each time it is deregistered from a category or when the registry is finalized.</source>
          <target state="translated">&lt;code&gt;provider&lt;/code&gt; が &lt;code&gt;RegisterableService&lt;/code&gt; インターフェースを実装している場合、その &lt;code&gt;onRegistration&lt;/code&gt; メソッドは、登録されているカテゴリーごとに1回呼び出されます。その &lt;code&gt;onDeregistration&lt;/code&gt; メソッドは、カテゴリから登録解除されるたび、またはレジストリが確定するときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0784a0a7bf824430bc838bc404fb08f17c2bb553" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;provider&lt;/code&gt; implements the &lt;code&gt;RegisterableService&lt;/code&gt; interface, its &lt;code&gt;onRegistration&lt;/code&gt; method will be called. Its &lt;code&gt;onDeregistration&lt;/code&gt; method will be called each time it is deregistered from a category, for example if a category is removed or the registry is garbage collected.</source>
          <target state="translated">&lt;code&gt;provider&lt;/code&gt; が &lt;code&gt;RegisterableService&lt;/code&gt; インターフェースを実装する場合、その &lt;code&gt;onRegistration&lt;/code&gt; メソッドが呼び出されます。その &lt;code&gt;onDeregistration&lt;/code&gt; メソッドは、たとえば、カテゴリが削除された場合やレジストリがガベージコレクションされた場合など、カテゴリから登録解除されるたびに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f06c2b9a81bf2e8537aa79d7c76106a244c8674c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;proxy&lt;/code&gt; is not an instance of the interface &lt;a href=&quot;../remote&quot;&gt;&lt;code&gt;Remote&lt;/code&gt;&lt;/a&gt;, then an &lt;a href=&quot;../../../../java.base/java/lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;proxy&lt;/code&gt; がインターフェイス&lt;a href=&quot;../remote&quot;&gt; &lt;code&gt;Remote&lt;/code&gt; の&lt;/a&gt;インスタンスでない場合、&lt;a href=&quot;../../../../java.base/java/lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="30a704bc2a41ccd6a295a4a304ab52480277f796" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ptDst&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a new &lt;code&gt;Point2D&lt;/code&gt; object is allocated and then the result of the transform is stored in this object. In either case, &lt;code&gt;ptDst&lt;/code&gt;, which contains the transformed point, is returned for convenience. If &lt;code&gt;ptSrc&lt;/code&gt; and &lt;code&gt;ptDst&lt;/code&gt; are the same object, the input point is correctly overwritten with the transformed point.</source>
          <target state="translated">場合 &lt;code&gt;ptDst&lt;/code&gt; がある &lt;code&gt;null&lt;/code&gt; 、新しい &lt;code&gt;Point2D&lt;/code&gt; オブジェクトが割り当てられ、その後、変換の結果がこのオブジェクトに格納されています。いずれの場合も、 &lt;code&gt;ptDst&lt;/code&gt; 、変換されたポイントを含むptDstが返されます。場合 &lt;code&gt;ptSrc&lt;/code&gt; と &lt;code&gt;ptDst&lt;/code&gt; が同じオブジェクトであり、入力点が正しく変換された点で上書きされます。</target>
        </trans-unit>
        <trans-unit id="6b70be6c1d4b8c38fadd2d92229b8b5af1f296d7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;refInfo&lt;/code&gt; is a &lt;code&gt;Reference&lt;/code&gt; or &lt;code&gt;Referenceable&lt;/code&gt; containing a factory class name, use the named factory to create the object. Return &lt;code&gt;refInfo&lt;/code&gt; if the factory cannot be created. Under JDK 1.1, if the factory class must be loaded from a location specified in the reference, a &lt;code&gt;SecurityManager&lt;/code&gt; must have been installed or the factory creation will fail. If an exception is encountered while creating the factory, it is passed up to the caller.</source>
          <target state="translated">場合 &lt;code&gt;refInfo&lt;/code&gt; ある &lt;code&gt;Reference&lt;/code&gt; または &lt;code&gt;Referenceable&lt;/code&gt; ファクトリクラス名を含む、オブジェクトを作成するという名前の工場を使用しています。ファクトリを作成できない場合は、 &lt;code&gt;refInfo&lt;/code&gt; を返します。 JDK 1.1では、リファレンスで指定された場所からファクトリクラスをロードする必要がある場合、 &lt;code&gt;SecurityManager&lt;/code&gt; がインストールされている必要があります。そうでない場合、ファクトリの作成は失敗します。ファクトリの作成中に例外が発生した場合、それは呼び出し元に渡されます。</target>
        </trans-unit>
        <trans-unit id="46e2f36cf5a69a7659eccf53bd7e3c068ad15127" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;refInfo&lt;/code&gt; is a &lt;code&gt;Reference&lt;/code&gt; or &lt;code&gt;Referenceable&lt;/code&gt; with no factory class name, and the address or addresses are &lt;code&gt;StringRefAddr&lt;/code&gt;s with address type &quot;URL&quot;, try the URL context factory corresponding to each URL's scheme id to create the object (see &lt;code&gt;getURLContext()&lt;/code&gt;). If that fails, continue to the next step.</source>
          <target state="translated">場合 &lt;code&gt;refInfo&lt;/code&gt; ある &lt;code&gt;Reference&lt;/code&gt; または &lt;code&gt;Referenceable&lt;/code&gt; なしファクトリクラス名を持つ、アドレスまたはアドレスがある &lt;code&gt;StringRefAddr&lt;/code&gt; のアドレス型「URL」と、（参照オブジェクトを作成するために、各URLのスキーマIDに対応するURLコンテキストファクトリを試し &lt;code&gt;getURLContext()&lt;/code&gt; ）。それが失敗した場合は、次の手順に進みます。</target>
        </trans-unit>
        <trans-unit id="1c155ad46a4245a542e0a856a2e04822b42fb9f6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;returnType&lt;/code&gt; is not one of the types defined in &lt;a href=&quot;xpathconstants&quot;&gt;&lt;code&gt;XPathConstants&lt;/code&gt;&lt;/a&gt;, then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;returnType&lt;/code&gt; が&lt;a href=&quot;xpathconstants&quot;&gt; &lt;code&gt;XPathConstants&lt;/code&gt; &lt;/a&gt;で定義されている型のいずれでもない場合、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="d860614074042f19bdf291701426974c3c57e4a3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;row&lt;/code&gt; is &amp;lt; 0 or &amp;gt;= &lt;code&gt;getRowCount&lt;/code&gt; this will have no effect.</source>
          <target state="translated">場合 &lt;code&gt;row&lt;/code&gt; ある&amp;lt;0または&amp;gt; = &lt;code&gt;getRowCount&lt;/code&gt; この効果はありません。</target>
        </trans-unit>
        <trans-unit id="876d8a672b3c54e715d8e73f684241ce161aa28e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s.length&lt;/code&gt; is zero, then no bytes are written. Otherwise, the character &lt;code&gt;s[0]&lt;/code&gt; is written first, then &lt;code&gt;s[1]&lt;/code&gt;, and so on; the last character written is &lt;code&gt;s[s.length-1]&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;s.length&lt;/code&gt; がゼロで、その後何のバイトは書き込まれません。それ以外の場合、文字 &lt;code&gt;s[0]&lt;/code&gt; が最初に書き込まれ、次に &lt;code&gt;s[1]&lt;/code&gt; 、というように続きます。書き込まれる最後の文字は &lt;code&gt;s[s.length-1]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9e4b1baa5111d66d53cd12fc271e18655498ac09" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s.length&lt;/code&gt; is zero, then no bytes are written. Otherwise, the character &lt;code&gt;s[0]&lt;/code&gt; is written first, then &lt;code&gt;s[1]&lt;/code&gt;, and so on; the last character written is &lt;code&gt;s[s.length-1]&lt;/code&gt;. For each character, one byte is written, the low-order byte, in exactly the manner of the &lt;code&gt;writeByte&lt;/code&gt; method . The high-order eight bits of each character in the string are ignored.</source>
          <target state="translated">場合 &lt;code&gt;s.length&lt;/code&gt; がゼロで、その後何のバイトは書き込まれません。それ以外の場合、文字 &lt;code&gt;s[0]&lt;/code&gt; が最初に書き込まれ、次に &lt;code&gt;s[1]&lt;/code&gt; 、というように続きます。書き込まれる最後の文字は &lt;code&gt;s[s.length-1]&lt;/code&gt; です。文字ごとに、1バイト（下位バイト）が &lt;code&gt;writeByte&lt;/code&gt; メソッドとまったく同じ方法で書き込まれます。文字列の各文字の上位8ビットは無視されます。</target>
        </trans-unit>
        <trans-unit id="edcdda7ec2d8edbea83d4e8f71c2458f937626bd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s.length&lt;/code&gt; is zero, then no bytes are written. Otherwise, the character &lt;code&gt;s[0]&lt;/code&gt; is written first, then &lt;code&gt;s[1]&lt;/code&gt;, and so on; the last character written is &lt;code&gt;s[s.length-1]&lt;/code&gt;. For each character, one byte is written, the low-order byte, in exactly the manner of the &lt;code&gt;writeByte&lt;/code&gt; method. The high-order eight bits of each character in the string are ignored.</source>
          <target state="translated">場合 &lt;code&gt;s.length&lt;/code&gt; がゼロで、その後何のバイトは書き込まれません。それ以外の場合、文字 &lt;code&gt;s[0]&lt;/code&gt; が最初に書き込まれ、次に &lt;code&gt;s[1]&lt;/code&gt; 、というように続きます。書き込まれる最後の文字は &lt;code&gt;s[s.length-1]&lt;/code&gt; です。文字ごとに、1バイト（下位バイト）が &lt;code&gt;writeByte&lt;/code&gt; メソッドとまったく同じ方法で書き込まれます。文字列の各文字の上位8ビットは無視されます。</target>
        </trans-unit>
        <trans-unit id="e875e2a67d01ff828275b31d43c1fbd127c980d6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="44817af6998c4077db388be5b4a7890f5a06339e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are appended.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、4つの文字 &lt;code&gt;&quot;null&quot;&lt;/code&gt; が追加されます。</target>
        </trans-unit>
        <trans-unit id="990d1368ff7f5774e8459cd4e9be500eb83cc4a9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt; are inserted into this sequence.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、4つの文字 &lt;code&gt;&quot;null&quot;&lt;/code&gt; がこのシーケンスに挿入されます。</target>
        </trans-unit>
        <trans-unit id="b05ca4901f2ddfb6f0df8f458f94e1208be8876d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then this method appends characters as if the s parameter was a sequence containing the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;s&lt;/code&gt; がある &lt;code&gt;null&lt;/code&gt; の Sパラメータは4文字含む配列であるかのように、このメソッドは、文字を追加し &lt;code&gt;&quot;null&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f17a7925b555b07f1177d7e0b04970042d705c0a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then this method inserts characters as if the s parameter was a sequence containing the four characters &lt;code&gt;&quot;null&quot;&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;s&lt;/code&gt; がある &lt;code&gt;null&lt;/code&gt; の場合、Sパラメータは4文字含むシーケンスこのメソッドを挿入文字であるかのように &lt;code&gt;&quot;null&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9aac27d78dce887df2392eaea3ecd3f3fa4c1f8c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;setDestinationOffsets&lt;/code&gt; has not been called, a &lt;code&gt;Point&lt;/code&gt; with zero X and Y values is returned (which is the correct value).</source>
          <target state="translated">&lt;code&gt;setDestinationOffsets&lt;/code&gt; が呼び出されていない場合は、XとYの値がゼロの &lt;code&gt;Point&lt;/code&gt; （正しい値）が返されます。</target>
        </trans-unit>
        <trans-unit id="f3a9e603b0a4b8521e4750e1c066ac967b23512c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;setSourceSubsampling&lt;/code&gt; has not been called, 0 is returned (which is the correct value).</source>
          <target state="translated">&lt;code&gt;setSourceSubsampling&lt;/code&gt; が呼び出されていない場合、0が返されます（これは正しい値です）。</target>
        </trans-unit>
        <trans-unit id="79ac09906fe716bce01c69681d75a4bf9a9cb03d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;setSourceSubsampling&lt;/code&gt; has not been called, 1 is returned (which is the correct value).</source>
          <target state="translated">&lt;code&gt;setSourceSubsampling&lt;/code&gt; が呼び出されていない場合は、1が返されます（これは正しい値です）。</target>
        </trans-unit>
        <trans-unit id="aa1ac4e940630f846fd22734fc11fce22cf0121f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;setToolTipText&lt;/code&gt; has been invoked with a non-&lt;code&gt;null&lt;/code&gt; value, it will be returned, otherwise</source>
          <target state="translated">場合 &lt;code&gt;setToolTipText&lt;/code&gt; が非で呼び出された &lt;code&gt;null&lt;/code&gt; 値、それはそうでない場合は、返されます</target>
        </trans-unit>
        <trans-unit id="61566ceca2a0f3c6f13616e2fc6f7a73b100c4e7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sites&lt;/code&gt; contains a null element, a &lt;code&gt;NullPointerException&lt;/code&gt; will be raised. In this case, some non-null elements in the array may be processed before the method returns abnormally. Which elements these are (if any) is implementation-dependent.</source>
          <target state="translated">&lt;code&gt;sites&lt;/code&gt; にnull要素が含まれている場合、 &lt;code&gt;NullPointerException&lt;/code&gt; が発生します。この場合、メソッドが異常終了する前に、配列内の一部のnull以外の要素が処理される可能性があります。これらの要素（ある場合）は実装に依存します。</target>
        </trans-unit>
        <trans-unit id="cee89be3aeb95368cd40a9cab8c4abdc56959164" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;snk&lt;/code&gt; is an unconnected piped input stream and &lt;code&gt;src&lt;/code&gt; is an unconnected piped output stream, they may be connected by either the call:</source>
          <target state="translated">場合 &lt;code&gt;snk&lt;/code&gt; 未接続のパイプによる入力ストリームである &lt;code&gt;src&lt;/code&gt; 未接続のパイプによる出力ストリームである、彼らはどちらかの呼び出しによって接続することができます。</target>
        </trans-unit>
        <trans-unit id="690341647fe6d76e88ef315850f5a25397916209" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;snk&lt;/code&gt; is an unconnected piped reader and &lt;code&gt;src&lt;/code&gt; is an unconnected piped writer, they may be connected by either the call:</source>
          <target state="translated">場合 &lt;code&gt;snk&lt;/code&gt; 未接続のパイプによるリーダーとされ &lt;code&gt;src&lt;/code&gt; が未接続のパイプによるライターである、彼らはどちらかの呼び出しによって接続することができます。</target>
        </trans-unit>
        <trans-unit id="f9c5366be534f93ab5f5deefe308b27ed6664cd9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;source&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="3f3a2230d84b641f83bf303d40e79f1f03207242" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;source&lt;/code&gt; is not an instance of one of the classes returned by &lt;code&gt;getInputTypes&lt;/code&gt;, the method should simply return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; が &lt;code&gt;getInputTypes&lt;/code&gt; によって返されるクラスのいずれかのインスタンスでない場合、メソッドは単に &lt;code&gt;false&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="637f0a7792b7cb0bc9a73c24b4e0f9994163e5c7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;source&lt;/code&gt; or &lt;code&gt;returnType&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">場合は &lt;code&gt;source&lt;/code&gt; または &lt;code&gt;returnType&lt;/code&gt; ある &lt;code&gt;null&lt;/code&gt; の場合、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="219f0aba2e1ad229cd0601cb06d21c32b8f7d289" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;src&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown and the destination array is not modified.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされ、宛先配列は変更されません。</target>
        </trans-unit>
        <trans-unit id="5d71167d52ef22cb2f16571454a6827b101e0c9b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;src&lt;/code&gt; is an unconnected piped output stream and &lt;code&gt;snk&lt;/code&gt; is an unconnected piped input stream, they may be connected by either the call:</source>
          <target state="translated">場合 &lt;code&gt;src&lt;/code&gt; が未接続のパイプで連結された出力ストリームとある &lt;code&gt;snk&lt;/code&gt; 未接続のパイプによる入力ストリームである、彼らはどちらかの呼び出しによって接続することができます。</target>
        </trans-unit>
        <trans-unit id="760f4c540dae14e4e4ea567bb935f8fcce39cb15" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;src&lt;/code&gt; is an unconnected piped writer and &lt;code&gt;snk&lt;/code&gt; is an unconnected piped reader, they may be connected by either the call:</source>
          <target state="translated">場合 &lt;code&gt;src&lt;/code&gt; が未接続のパイプによるライターとある &lt;code&gt;snk&lt;/code&gt; 未接続のパイプで連結されたリーダーである、彼らはどちらかの呼び出しによって接続することができます。</target>
        </trans-unit>
        <trans-unit id="c619334825864b10343e14e3a5fa2edbf88f1438" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is &amp;plusmn;&lt;a href=&quot;double#MIN_VALUE&quot;&gt;&lt;code&gt;Double.MIN_VALUE&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;direction&lt;/code&gt; has a value such that the result should have a smaller magnitude, then a zero with the same sign as &lt;code&gt;start&lt;/code&gt; is returned.</source>
          <target state="translated">場合 &lt;code&gt;start&lt;/code&gt; が &amp;plusmn;さ&lt;a href=&quot;double#MIN_VALUE&quot;&gt; &lt;code&gt;Double.MIN_VALUE&lt;/code&gt; に&lt;/a&gt;及び &lt;code&gt;direction&lt;/code&gt; 結果がより小さな大きさを有していなければならないような値を有し、その後、同じ符号を持つゼロ &lt;code&gt;start&lt;/code&gt; 返されます。</target>
        </trans-unit>
        <trans-unit id="fae5b0093d13f14219d9322f18e9441f961ca477" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is &amp;plusmn;&lt;a href=&quot;float#MIN_VALUE&quot;&gt;&lt;code&gt;Float.MIN_VALUE&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;direction&lt;/code&gt; has a value such that the result should have a smaller magnitude, then a zero with the same sign as &lt;code&gt;start&lt;/code&gt; is returned.</source>
          <target state="translated">場合 &lt;code&gt;start&lt;/code&gt; が &amp;plusmn;さ&lt;a href=&quot;float#MIN_VALUE&quot;&gt; &lt;code&gt;Float.MIN_VALUE&lt;/code&gt; に&lt;/a&gt;及び &lt;code&gt;direction&lt;/code&gt; 結果がより小さな大きさを有していなければならないような値を有し、その後、同じ符号を持つゼロ &lt;code&gt;start&lt;/code&gt; 返されます。</target>
        </trans-unit>
        <trans-unit id="f66998e543c1a12b2ca918a211e06eae5f94b1c3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is equal to &amp;plusmn; &lt;a href=&quot;double#MAX_VALUE&quot;&gt;&lt;code&gt;Double.MAX_VALUE&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;direction&lt;/code&gt; has a value such that the result should have a larger magnitude, an infinity with same sign as &lt;code&gt;start&lt;/code&gt; is returned.</source>
          <target state="translated">場合 &lt;code&gt;start&lt;/code&gt; は &amp;plusmn;に等しく&lt;a href=&quot;double#MAX_VALUE&quot;&gt; &lt;code&gt;Double.MAX_VALUE&lt;/code&gt; &lt;/a&gt;及び &lt;code&gt;direction&lt;/code&gt; 、結果は、より大きな大きさ、同じ符号付き無限大有するべきであるような値を有する &lt;code&gt;start&lt;/code&gt; 返されています。</target>
        </trans-unit>
        <trans-unit id="a161a170f19a8906de8c9a6cfd3d5e37f8f5ff13" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is equal to &amp;plusmn; &lt;a href=&quot;float#MAX_VALUE&quot;&gt;&lt;code&gt;Float.MAX_VALUE&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;direction&lt;/code&gt; has a value such that the result should have a larger magnitude, an infinity with same sign as &lt;code&gt;start&lt;/code&gt; is returned.</source>
          <target state="translated">場合 &lt;code&gt;start&lt;/code&gt; は &amp;plusmn;に等しく&lt;a href=&quot;float#MAX_VALUE&quot;&gt; &lt;code&gt;Float.MAX_VALUE&lt;/code&gt; &lt;/a&gt;及び &lt;code&gt;direction&lt;/code&gt; 、結果は、より大きな大きさ、同じ符号付き無限大有するべきであるような値を有する &lt;code&gt;start&lt;/code&gt; 返されています。</target>
        </trans-unit>
        <trans-unit id="a58cc90d3a573be11a8ea4b0883f3c2086b63b6b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is infinite and &lt;code&gt;direction&lt;/code&gt; has a value such that the result should have a smaller magnitude, &lt;a href=&quot;double#MAX_VALUE&quot;&gt;&lt;code&gt;Double.MAX_VALUE&lt;/code&gt;&lt;/a&gt; with the same sign as &lt;code&gt;start&lt;/code&gt; is returned.</source>
          <target state="translated">場合 &lt;code&gt;start&lt;/code&gt; が無限大となる &lt;code&gt;direction&lt;/code&gt; 結果は小さい大きさ、有していなければならないような値を有する&lt;a href=&quot;double#MAX_VALUE&quot;&gt; &lt;code&gt;Double.MAX_VALUE&lt;/code&gt; を&lt;/a&gt;同じ符号を用いて &lt;code&gt;start&lt;/code&gt; 返されています。</target>
        </trans-unit>
        <trans-unit id="2ae7182c34098ff9d6f56022f88e1e7fdd3a318a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start&lt;/code&gt; is infinite and &lt;code&gt;direction&lt;/code&gt; has a value such that the result should have a smaller magnitude, &lt;a href=&quot;float#MAX_VALUE&quot;&gt;&lt;code&gt;Float.MAX_VALUE&lt;/code&gt;&lt;/a&gt; with the same sign as &lt;code&gt;start&lt;/code&gt; is returned.</source>
          <target state="translated">場合 &lt;code&gt;start&lt;/code&gt; が無限大となる &lt;code&gt;direction&lt;/code&gt; 結果は小さい大きさ、有していなければならないような値を有する&lt;a href=&quot;float#MAX_VALUE&quot;&gt; &lt;code&gt;Float.MAX_VALUE&lt;/code&gt; を&lt;/a&gt;同じ符号を用いて &lt;code&gt;start&lt;/code&gt; 返されています。</target>
        </trans-unit>
        <trans-unit id="6cd80221ac94b2f2e71b197d42d75c47e15af2c0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;strict&lt;/code&gt; is false, when a tag that breaks flow, (&lt;code&gt;TagElement.breaksFlows&lt;/code&gt;) or trailing whitespace is encountered, all whitespace will be ignored until a non whitespace character is encountered. This appears to give behavior closer to the popular browsers.</source>
          <target state="translated">場合は &lt;code&gt;strict&lt;/code&gt; falseで休憩が流れていることを、タグ、（とき、 &lt;code&gt;TagElement.breaksFlows&lt;/code&gt; ）または末尾の空白が検出された空白以外の文字が検出されるまで、すべての空白は無視されます。これにより、一般的なブラウザに近い動作が得られるようです。</target>
        </trans-unit>
        <trans-unit id="dd9e9926b4084569dcc965ce6b61db0e47d85ad0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;subjectDN&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, it should contain a distinguished name, in RFC 2253 format.</source>
          <target state="translated">&lt;code&gt;subjectDN&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合は、RFC 2253形式の識別名が含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="a8333161ec6b6561928b6f53c8cfefeeee4ccdf5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;subjectDN&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, it should contain a single DER encoded distinguished name, as defined in X.501. For the ASN.1 notation for this structure, see &lt;a href=&quot;#setIssuer(byte%5B%5D)&quot;&gt;&lt;code&gt;setIssuer(byte [] issuerDN)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;subjectDN&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合は、X.501で定義されているように、DERでエンコードされた単一の識別名が含まれている必要があります。この構造体のASN.1表記については、&lt;a href=&quot;#setIssuer(byte%5B%5D)&quot;&gt; &lt;code&gt;setIssuer(byte [] issuerDN)&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8ea050f10d06248bcf9421ca5fbce2a0e9eb8454" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;subjectDN&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, it should contain a single DER encoded distinguished name, as defined in X.501. For the ASN.1 notation for this structure, see &lt;a href=&quot;x509certselector#setIssuer-byte:A-&quot;&gt;&lt;code&gt;setIssuer(byte [] issuerDN)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;subjectDN&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合、X.501で定義されているように、DERエンコードされた1つの識別名が含まれている必要があります。この構造のASN.1表記については、&lt;a href=&quot;x509certselector#setIssuer-byte:A-&quot;&gt; &lt;code&gt;setIssuer(byte [] issuerDN)&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2013740722fd95a1604400c614bd63582e466a8f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;subjectKeyID&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, it should contain a single DER encoded value corresponding to the contents of the extension value (not including the object identifier, criticality setting, and encapsulating OCTET STRING) for a SubjectKeyIdentifier extension. The ASN.1 notation for this structure follows.</source>
          <target state="translated">&lt;code&gt;subjectKeyID&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合、SubjectKeyIdentifier拡張機能の拡張値（オブジェクト識別子、重要度設定、カプセル化OCTET STRINGは含まない）の内容に対応する単一のDERエンコード値を含める必要があります。この構造のASN.1表記は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a8a2d56ad412e7e8bed4d2deae78a648b54d9910" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;switchPoints&lt;/code&gt; contains a null element, a &lt;code&gt;NullPointerException&lt;/code&gt; will be raised. In this case, some non-null elements in the array may be processed before the method returns abnormally. Which elements these are (if any) is implementation-dependent.</source>
          <target state="translated">&lt;code&gt;switchPoints&lt;/code&gt; にnull要素が含まれている場合、 &lt;code&gt;NullPointerException&lt;/code&gt; が発生します。この場合、メソッドが異常終了する前に、配列内の一部のnull以外の要素が処理される可能性があります。これらの要素（ある場合）は実装に依存します。</target>
        </trans-unit>
        <trans-unit id="73066e095387b022012986549b34f1448bd7aa6b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeout&lt;/code&gt; is greater than 0, the method returns after &lt;code&gt;timeout&lt;/code&gt; milliseconds even if there is no change in state. In that case, this method returns &lt;code&gt;false&lt;/code&gt;; otherwise it returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; が0より大きい場合、状態に変化がなくても、メソッドは &lt;code&gt;timeout&lt;/code&gt; ミリ秒後に戻ります。その場合、このメソッドは &lt;code&gt;false&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9110736d0ba8beddd891578c4cd267d3ed2df9b7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;trayIcon&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or was not added to the system tray, no exception is thrown and no action is performed.</source>
          <target state="translated">&lt;code&gt;trayIcon&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; であるか、システムトレイに追加されていない場合、例外はスローされず、アクションは実行されません。</target>
        </trans-unit>
        <trans-unit id="1dc73700c68c63f248dae219cde824ef4b8f9196" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt; is returned, the JDBC driver must support the returning of auto-generated keys for at least SQL INSERT statements</source>
          <target state="translated">場合は &lt;code&gt;true&lt;/code&gt; 返され、JDBCドライバは、少なくともSQL INSERT文に対して自動生成キーの返却をサポートしている必要があります</target>
        </trans-unit>
        <trans-unit id="06115dacf5b34fb8d3c0d2c47a4c8739954912e5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt; the auto-scrolling is enabled.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; の場合、自動スクロールが有効になります。</target>
        </trans-unit>
        <trans-unit id="f5a6d295804593883ad2ce93da589746015b3c79" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the protocol is allowed to use caching whenever it can.</source>
          <target state="translated">場合は &lt;code&gt;true&lt;/code&gt; 、プロトコルはいつでも、それはキャッシュを使用できます。</target>
        </trans-unit>
        <trans-unit id="9165b89186b82d1302645d783c2a0c1050d0333c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the protocol is allowed to use caching whenever it can. If &lt;code&gt;false&lt;/code&gt;, the protocol must always try to get a fresh copy of the object.</source>
          <target state="translated">場合は &lt;code&gt;true&lt;/code&gt; 、プロトコルはいつでも、それはキャッシュを使用できます。場合は &lt;code&gt;false&lt;/code&gt; を、プロトコルは常にオブジェクトの新しいコピーを取得しようとしなければなりません。</target>
        </trans-unit>
        <trans-unit id="28bab1545813399b6959c7a48698b477c2089f22" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the protocol will automatically follow redirects.</source>
          <target state="translated">場合は &lt;code&gt;true&lt;/code&gt; 、プロトコルが自動的にリダイレクトに従います。</target>
        </trans-unit>
        <trans-unit id="e68e3758b38fae66da1ed8095766c26a46ef65a7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, the protocol will automatically follow redirects. If &lt;code&gt;false&lt;/code&gt;, the protocol will not automatically follow redirects.</source>
          <target state="translated">場合は &lt;code&gt;true&lt;/code&gt; 、プロトコルが自動的にリダイレクトに従います。場合は &lt;code&gt;false&lt;/code&gt; を、プロトコルが自動的にリダイレクトに従いません。</target>
        </trans-unit>
        <trans-unit id="5c2bff42d38b3e74f0a77d30306aa66a141445c5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, this &lt;code&gt;URL&lt;/code&gt; is being examined in a context in which it makes sense to allow user interactions such as popping up an authentication dialog.</source>
          <target state="translated">場合は &lt;code&gt;true&lt;/code&gt; 、この &lt;code&gt;URL&lt;/code&gt; は、それは、このような認証ダイアログをポップアップとしてユーザーとの対話を許可することは理にかなっている文脈で検討されています。</target>
        </trans-unit>
        <trans-unit id="1347facf72554ede8e0ebdf4e21d8496b6b672a1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, this &lt;code&gt;URL&lt;/code&gt; is being examined in a context in which it makes sense to allow user interactions such as popping up an authentication dialog. If &lt;code&gt;false&lt;/code&gt;, then no user interaction is allowed.</source>
          <target state="translated">場合は &lt;code&gt;true&lt;/code&gt; 、この &lt;code&gt;URL&lt;/code&gt; は、それは、このような認証ダイアログをポップアップとしてユーザーとの対話を許可することは理にかなっている文脈で検討されています。 &lt;code&gt;false&lt;/code&gt; の場合、ユーザーの操作は許可されません。</target>
        </trans-unit>
        <trans-unit id="5c993a9c8cd84f954007dac990e0fc740f486086" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, this glyph absorbs all extra space at this and lower priority levels when it grows.</source>
          <target state="translated">If &lt;code&gt;true&lt;/code&gt; , this glyph absorbs all extra space at this and lower priority levels when it grows.</target>
        </trans-unit>
        <trans-unit id="976048025c34666d0a2f1d2690ac8cc5cc20d7e1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;,this glyph absorbs all remaining shrinkage at this and lower priority levels as it shrinks.</source>
          <target state="translated">If &lt;code&gt;true&lt;/code&gt; ,this glyph absorbs all remaining shrinkage at this and lower priority levels as it shrinks.</target>
        </trans-unit>
        <trans-unit id="d0224176165c2117154a3a0f83358aa57f06cb34" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;uris&lt;/code&gt; is empty, system property &lt;code&gt;javax.xml.catalog.files&lt;/code&gt;, as defined in &lt;a href=&quot;catalogfeatures&quot;&gt;&lt;code&gt;CatalogFeatures&lt;/code&gt;&lt;/a&gt;, will be read to locate the initial list of catalog files.</source>
          <target state="translated">If &lt;code&gt;uris&lt;/code&gt; is empty, system property &lt;code&gt;javax.xml.catalog.files&lt;/code&gt; , as defined in &lt;a href=&quot;catalogfeatures&quot;&gt; &lt;code&gt;CatalogFeatures&lt;/code&gt; &lt;/a&gt;, will be read to locate the initial list of catalog files.</target>
        </trans-unit>
        <trans-unit id="adee4dfa9a0b08ac726e589fa9dfc1c09a04aa62" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;useNative&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;color&lt;/code&gt; is created by using &lt;code&gt;Color.decode&lt;/code&gt; to convert the &lt;code&gt;
 String&lt;/code&gt; into a &lt;code&gt;Color&lt;/code&gt;. If &lt;code&gt;decode&lt;/code&gt; can not convert the &lt;code&gt;String&lt;/code&gt; into a &lt;code&gt;Color&lt;/code&gt; (&lt;code&gt;
 NumberFormatException&lt;/code&gt; is thrown) then a &lt;code&gt;
 ColorUIResource&lt;/code&gt; of black is used.</source>
          <target state="translated">If &lt;code&gt;useNative&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; , the &lt;code&gt;color&lt;/code&gt; is created by using &lt;code&gt;Color.decode&lt;/code&gt; to convert the &lt;code&gt; String&lt;/code&gt; into a &lt;code&gt;Color&lt;/code&gt; . If &lt;code&gt;decode&lt;/code&gt; can not convert the &lt;code&gt;String&lt;/code&gt; into a &lt;code&gt;Color&lt;/code&gt; ( &lt;code&gt; NumberFormatException&lt;/code&gt; is thrown) then a &lt;code&gt; ColorUIResource&lt;/code&gt; of black is used.</target>
        </trans-unit>
        <trans-unit id="e12a5a71cacdb7a4b0cc546bbaf64c5c1947c59f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;useNative&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;color&lt;/code&gt; is the value of the field in &lt;code&gt;SystemColor&lt;/code&gt; with the same name as the &lt;code&gt;name&lt;/code&gt; of the &lt;code&gt;name-color&lt;/code&gt; pair. If the field is not valid, a &lt;code&gt;ColorUIResource&lt;/code&gt; of black is used.</source>
          <target state="translated">If &lt;code&gt;useNative&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; , the &lt;code&gt;color&lt;/code&gt; is the value of the field in &lt;code&gt;SystemColor&lt;/code&gt; with the same name as the &lt;code&gt;name&lt;/code&gt; of the &lt;code&gt;name-color&lt;/code&gt; pair. If the field is not valid, a &lt;code&gt;ColorUIResource&lt;/code&gt; of black is used.</target>
        </trans-unit>
        <trans-unit id="42c68be27b55a7fc86e8255ec96cc9fc619eff9e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is a primitive array then &lt;code&gt;h&lt;/code&gt; is computed using the appropriate overloading of &lt;code&gt;java.util.Arrays.hashCode&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;v&lt;/code&gt; がプリミティブ配列で、次いで &lt;code&gt;h&lt;/code&gt; 適切なオーバーロード使用して計算される &lt;code&gt;java.util.Arrays.hashCode&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="8d6ba7534f9cf9c2b36675a6962310dd6297fdb3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is an object array then &lt;code&gt;h&lt;/code&gt; is computed using &lt;a href=&quot;../../../../java.base/java/util/arrays#deepHashCode(java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;Arrays.deepHashCode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If &lt;code&gt;v&lt;/code&gt; is an object array then &lt;code&gt;h&lt;/code&gt; is computed using &lt;a href=&quot;../../../../java.base/java/util/arrays#deepHashCode(java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;Arrays.deepHashCode&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="697fc3a2ae17f1968e68001fdcb19fb233006602" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is an object array then &lt;code&gt;h&lt;/code&gt; is computed using &lt;a href=&quot;../../../java.base/java/util/arrays#deepHashCode(java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;Arrays.deepHashCode(Object[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If &lt;code&gt;v&lt;/code&gt; is an object array then &lt;code&gt;h&lt;/code&gt; is computed using &lt;a href=&quot;../../../java.base/java/util/arrays#deepHashCode(java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;Arrays.deepHashCode(Object[])&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="b7c2ed9b1d962075a2a4a29e826a8f5a3166754e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is an object array then &lt;code&gt;h&lt;/code&gt; is computed using &lt;a href=&quot;../../../java/util/arrays#deepHashCode-java.lang.Object:A-&quot;&gt;&lt;code&gt;Arrays.deepHashCode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;v&lt;/code&gt; がオブジェクト配列であり、次いで &lt;code&gt;h&lt;/code&gt; 使用して計算される&lt;a href=&quot;../../../java/util/arrays#deepHashCode-java.lang.Object:A-&quot;&gt; &lt;code&gt;Arrays.deepHashCode&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b9f393b2dc17964bf329368f78f1fec6ffbcc1d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is an object array then &lt;code&gt;h&lt;/code&gt; is computed using &lt;a href=&quot;../../java/util/arrays#deepHashCode-java.lang.Object:A-&quot;&gt;&lt;code&gt;Arrays.deepHashCode(Object[])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;v&lt;/code&gt; がオブジェクト配列であり、次いで &lt;code&gt;h&lt;/code&gt; 使用して計算される&lt;a href=&quot;../../java/util/arrays#deepHashCode-java.lang.Object:A-&quot;&gt; &lt;code&gt;Arrays.deepHashCode(Object[])&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f9ca186e13d8a0b2f51cb3a886210bea7f10ac5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is null then &lt;code&gt;h&lt;/code&gt; is 0.</source>
          <target state="translated">&lt;code&gt;v&lt;/code&gt; がnullの場合、 &lt;code&gt;h&lt;/code&gt; は0です。</target>
        </trans-unit>
        <trans-unit id="6af7ae4e213065c80428b397aa23f3ea124048d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; this method will remove the property.</source>
          <target state="translated">If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; this method will remove the property.</target>
        </trans-unit>
        <trans-unit id="cdf69f59b52da316eefe1f6713b87184e68ea952" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;variableName&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">If &lt;code&gt;variableName&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; , then a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="de58d32d92fa75ad61a38656206078ffc1357769" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;weekOfYear&lt;/code&gt; is out of the valid week-of-year range in &lt;code&gt;weekYear&lt;/code&gt;, the &lt;code&gt;weekYear&lt;/code&gt; and &lt;code&gt;
 weekOfYear&lt;/code&gt; values are adjusted in lenient mode, or an &lt;code&gt;
 IllegalArgumentException&lt;/code&gt; is thrown in non-lenient mode.</source>
          <target state="translated">If &lt;code&gt;weekOfYear&lt;/code&gt; is out of the valid week-of-year range in &lt;code&gt;weekYear&lt;/code&gt; , the &lt;code&gt;weekYear&lt;/code&gt; and &lt;code&gt; weekOfYear&lt;/code&gt; values are adjusted in lenient mode, or an &lt;code&gt; IllegalArgumentException&lt;/code&gt; is thrown in non-lenient mode.</target>
        </trans-unit>
        <trans-unit id="cf22cf86c23376b8eca15d02a9bb39702899c3a6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;weekOfYear&lt;/code&gt; is out of the valid week-of-year range in &lt;code&gt;weekYear&lt;/code&gt;, the &lt;code&gt;weekYear&lt;/code&gt; and &lt;code&gt;weekOfYear&lt;/code&gt; values are adjusted in lenient mode, or an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown in non-lenient mode.</source>
          <target state="translated">場合 &lt;code&gt;weekOfYear&lt;/code&gt; がで有効な週の年の範囲外である &lt;code&gt;weekYear&lt;/code&gt; 、 &lt;code&gt;weekYear&lt;/code&gt; と &lt;code&gt;weekOfYear&lt;/code&gt; 値は寛大なモードに調整されている、または &lt;code&gt;IllegalArgumentException&lt;/code&gt; が非厳密モードでスローされます。</target>
        </trans-unit>
        <trans-unit id="2e04829a460140c9fa38864c5d9d7777958bc689" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;J&lt;/em&gt; has a method</source>
          <target state="translated">場合&lt;em&gt;Jは&lt;/em&gt;メソッドを持っています</target>
        </trans-unit>
        <trans-unit id="780f93481eae7dbaf2119163257a12d0c3bdf665" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;T0&lt;/em&gt; and &lt;em&gt;T1&lt;/em&gt; are primitives other than boolean, then a Java casting conversion (JLS 5.5) is applied. (Specifically, &lt;em&gt;T0&lt;/em&gt; will convert to &lt;em&gt;T1&lt;/em&gt; by widening and/or narrowing.)</source>
          <target state="translated">場合&lt;em&gt;T0&lt;/em&gt;と&lt;em&gt;T1は&lt;/em&gt;ブール以外のプリミティブであり、その後のJavaキャスト変換（JLS 5.5）が適用されます。（具体的には、&lt;em&gt;T0&lt;/em&gt;は拡大や縮小によって&lt;em&gt;T1に&lt;/em&gt;変換されます。）</target>
        </trans-unit>
        <trans-unit id="8dac40b6866039e1587ae30b3906847041aa9167" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;T0&lt;/em&gt; and &lt;em&gt;T1&lt;/em&gt; are primitives, then a Java method invocation conversion (JLS 5.3) is applied, if one exists. (Specifically, &lt;em&gt;T0&lt;/em&gt; must convert to &lt;em&gt;T1&lt;/em&gt; by a widening primitive conversion.)</source>
          <target state="translated">場合&lt;em&gt;T0&lt;/em&gt;と&lt;em&gt;T1は&lt;/em&gt;プリミティブであり、その後のJavaメソッド呼出し変換（JLS 5.3）が存在する場合、適用されます。（具体的には、&lt;em&gt;T0&lt;/em&gt;は拡大プリミティブ変換によって&lt;em&gt;T1に&lt;/em&gt;変換する必要があります。）</target>
        </trans-unit>
        <trans-unit id="9ab9ec122966f4e63c48e8d018d94714edba20c1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;T0&lt;/em&gt; and &lt;em&gt;T1&lt;/em&gt; are references, and &lt;em&gt;T1&lt;/em&gt; is an interface type, then the value of type &lt;em&gt;T0&lt;/em&gt; is passed as a &lt;em&gt;T1&lt;/em&gt; without a cast. (This treatment of interfaces follows the usage of the bytecode verifier.)</source>
          <target state="translated">場合&lt;em&gt;T0&lt;/em&gt;と&lt;em&gt;T1が&lt;/em&gt;参照され、そして&lt;em&gt;T1が&lt;/em&gt;インターフェイスタイプで、次いでタイプの値&lt;em&gt;T0を&lt;/em&gt;として渡され&lt;em&gt;T1&lt;/em&gt;キャストせず。（このインターフェイスの扱いは、バイトコードベリファイアの使用法に従います。）</target>
        </trans-unit>
        <trans-unit id="79aeb4d5dd8cb350db9c0c092dba6e42f02a5549" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;T0&lt;/em&gt; and &lt;em&gt;T1&lt;/em&gt; are references, then a cast to &lt;em&gt;T1&lt;/em&gt; is applied. (The types do not need to be related in any particular way. This is because a dynamic value of null can convert to any reference type.)</source>
          <target state="translated">場合は&lt;em&gt;T0&lt;/em&gt;と&lt;em&gt;T1が&lt;/em&gt;参照され、その後にキャスト&lt;em&gt;T1が&lt;/em&gt;適用されます。（型は特定の方法で関連付ける必要はありません。これは、nullの動的な値が任意の参照型に変換できるためです。）</target>
        </trans-unit>
        <trans-unit id="4afc8d053d3eb053b07d58aea74885c54772acb0" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;T0&lt;/em&gt; is a primitive and &lt;em&gt;T1&lt;/em&gt; a reference, a Java casting conversion (JLS 5.5) is applied if one exists. (Specifically, the value is boxed from &lt;em&gt;T0&lt;/em&gt; to its wrapper class, which is then widened as needed to &lt;em&gt;T1&lt;/em&gt;.)</source>
          <target state="translated">場合&lt;em&gt;T0が&lt;/em&gt;プリミティブであり&lt;em&gt;T1&lt;/em&gt;参照、Javaのキャスト変換（JLS 5.5）が存在する場合に適用されます。（具体的には、値は&lt;em&gt;T0&lt;/em&gt;からそのラッパークラスにボックス化され、必要に応じて&lt;em&gt;T1に&lt;/em&gt;広げられます。）</target>
        </trans-unit>
        <trans-unit id="f9f655a906d4defe08e1ec4ccc11021ab6bc8df7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;T0&lt;/em&gt; is a reference and &lt;em&gt;T1&lt;/em&gt; a primitive, an unboxing conversion will be applied at runtime, possibly followed by a Java casting conversion (JLS 5.5) on the primitive value, possibly followed by a conversion from byte to boolean by testing the low-order bit.</source>
          <target state="translated">場合&lt;em&gt;T0は&lt;/em&gt;基準となる&lt;em&gt;T1&lt;/em&gt;プリミティブ、アンボクシング変換は、おそらく、おそらく低次を試験することにより、バイトからブール値への変換に続くプリミティブ値のJavaキャスト変換（JLS 5.5）、続いて、実行時に適用されますビット。</target>
        </trans-unit>
        <trans-unit id="db644feaac62822a15a472df6abb94d10f3b2937" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;T0&lt;/em&gt; is a reference and &lt;em&gt;T1&lt;/em&gt; a primitive, an unboxing conversion will be applied at runtime, possibly followed by a Java method invocation conversion (JLS 5.3) on the primitive value. (These are the primitive widening conversions.) &lt;em&gt;T0&lt;/em&gt; must be a wrapper class or a supertype of one. (In the case where &lt;em&gt;T0&lt;/em&gt; is Object, these are the conversions allowed by &lt;a href=&quot;../reflect/method#invoke(java.lang.Object,java.lang.Object...)&quot;&gt;&lt;code&gt;java.lang.reflect.Method.invoke&lt;/code&gt;&lt;/a&gt;.) The unboxing conversion must have a possibility of success, which means that if &lt;em&gt;T0&lt;/em&gt; is not itself a wrapper class, there must exist at least one wrapper class &lt;em&gt;TW&lt;/em&gt; which is a subtype of &lt;em&gt;T0&lt;/em&gt; and whose unboxed primitive value can be widened to &lt;em&gt;T1&lt;/em&gt;.</source>
          <target state="translated">If &lt;em&gt;T0&lt;/em&gt; is a reference and &lt;em&gt;T1&lt;/em&gt; a primitive, an unboxing conversion will be applied at runtime, possibly followed by a Java method invocation conversion (JLS 5.3) on the primitive value. (These are the primitive widening conversions.) &lt;em&gt;T0&lt;/em&gt; must be a wrapper class or a supertype of one. (In the case where &lt;em&gt;T0&lt;/em&gt; is Object, these are the conversions allowed by &lt;a href=&quot;../reflect/method#invoke(java.lang.Object,java.lang.Object...)&quot;&gt; &lt;code&gt;java.lang.reflect.Method.invoke&lt;/code&gt; &lt;/a&gt;.) The unboxing conversion must have a possibility of success, which means that if &lt;em&gt;T0&lt;/em&gt; is not itself a wrapper class, there must exist at least one wrapper class &lt;em&gt;TW&lt;/em&gt; which is a subtype of &lt;em&gt;T0&lt;/em&gt; and whose unboxed primitive value can be widened to &lt;em&gt;T1&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="5e7880911e2e6fcd9ad74806ba0070443b27d0e7" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;T0&lt;/em&gt; is a reference and &lt;em&gt;T1&lt;/em&gt; a primitive, an unboxing conversion will be applied at runtime, possibly followed by a Java method invocation conversion (JLS 5.3) on the primitive value. (These are the primitive widening conversions.) &lt;em&gt;T0&lt;/em&gt; must be a wrapper class or a supertype of one. (In the case where &lt;em&gt;T0&lt;/em&gt; is Object, these are the conversions allowed by &lt;a href=&quot;../reflect/method#invoke-java.lang.Object-java.lang.Object...-&quot;&gt;&lt;code&gt;java.lang.reflect.Method.invoke&lt;/code&gt;&lt;/a&gt;.) The unboxing conversion must have a possibility of success, which means that if &lt;em&gt;T0&lt;/em&gt; is not itself a wrapper class, there must exist at least one wrapper class &lt;em&gt;TW&lt;/em&gt; which is a subtype of &lt;em&gt;T0&lt;/em&gt; and whose unboxed primitive value can be widened to &lt;em&gt;T1&lt;/em&gt;.</source>
          <target state="translated">場合&lt;em&gt;T0は&lt;/em&gt;基準となる&lt;em&gt;T1&lt;/em&gt;プリミティブ、アンボクシング変換は、おそらくプリミティブな値上のJavaメソッド呼出し変換（JLS 5.3）、続いて、実行時に適用されます。（これらはプリミティブな拡大変換です。）&lt;em&gt;T0&lt;/em&gt;はラッパークラスまたはそのスーパータイプでなければなりません。（&lt;em&gt;T0&lt;/em&gt;がObjectの場合、これらは&lt;a href=&quot;../reflect/method#invoke-java.lang.Object-java.lang.Object...-&quot;&gt; &lt;code&gt;java.lang.reflect.Method.invoke&lt;/code&gt; &lt;/a&gt;によって許可される変換です。）開梱変換は成功する可能性がある必要があります。つまり、&lt;em&gt;T0&lt;/em&gt;自体がラッパークラスでない場合、&lt;em&gt;T0の&lt;/em&gt;サブタイプであり、ボックス化されていないプリミティブ値を&lt;em&gt;T1&lt;/em&gt;に拡張できるラッパークラス&lt;em&gt;TW&lt;/em&gt;が少なくとも1つ存在する&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8960999c2c149641fb63da1b8b2e73d16c83837a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;T0&lt;/em&gt; is a reference and &lt;em&gt;T1&lt;/em&gt; a primitive, and if the reference is null at runtime, a zero value is introduced.</source>
          <target state="translated">もし&lt;em&gt;T0は&lt;/em&gt;基準となる&lt;em&gt;T1&lt;/em&gt;プリミティブ、および参照は、実行時にnullである場合、ゼロ値が導入されます。</target>
        </trans-unit>
        <trans-unit id="c411b97d9273d8806592b1669554d07cf4ebec56" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;T0&lt;/em&gt; is boolean and &lt;em&gt;T1&lt;/em&gt; is another primitive, the boolean is converted to a byte value, 1 for true, 0 for false. (This treatment follows the usage of the bytecode verifier.)</source>
          <target state="translated">場合&lt;em&gt;T0は&lt;/em&gt;ブール値で、&lt;em&gt;T1は、&lt;/em&gt;別のプリミティブで、ブール値は、偽の場合は0、真のバイト値、1に変換されます。（この処理は、バイトコードベリファイアの使用法に従います。）</target>
        </trans-unit>
        <trans-unit id="11dcb0b6d39107c41f9d02034203e755a22bc31f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;T1&lt;/em&gt; is boolean and &lt;em&gt;T0&lt;/em&gt; is another primitive, &lt;em&gt;T0&lt;/em&gt; is converted to byte via Java casting conversion (JLS 5.5), and the low order bit of the result is tested, as if by &lt;code&gt;(x &amp;amp; 1) != 0&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt;T1は&lt;/em&gt;ブールであり、&lt;em&gt;T0は、&lt;/em&gt;別のプリミティブであり、&lt;em&gt;T0は、&lt;/em&gt;変換（JLS 5.5）を鋳造するJavaを介してバイトに変換され、その結果の下位ビットを、あたかもによって、試験される &lt;code&gt;(x &amp;amp; 1) != 0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e03b8b722d047ebd8ff3f27197eddd18529d96a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;T&lt;/em&gt; is a non-generic non-array type, &lt;em&gt;genericstring(T)&lt;/em&gt; is the value returned by &lt;a href=&quot;../../../java.base/java/lang/class#getName()&quot;&gt;&lt;code&gt;Class.getName()&lt;/code&gt;&lt;/a&gt;, for example &lt;code&gt;&quot;int&quot;&lt;/code&gt; or &lt;code&gt;
      &quot;java.lang.String&quot;&lt;/code&gt;.</source>
          <target state="translated">If &lt;em&gt;T&lt;/em&gt; is a non-generic non-array type, &lt;em&gt;genericstring(T)&lt;/em&gt; is the value returned by &lt;a href=&quot;../../../java.base/java/lang/class#getName()&quot;&gt; &lt;code&gt;Class.getName()&lt;/code&gt; &lt;/a&gt;, for example &lt;code&gt;&quot;int&quot;&lt;/code&gt; or &lt;code&gt; &quot;java.lang.String&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fd2145f2a73182fb43d09ea345dee1a6c4c8988" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;T&lt;/em&gt; is a non-generic non-array type, &lt;em&gt;genericstring(T)&lt;/em&gt; is the value returned by &lt;a href=&quot;../../java/lang/class#getName--&quot;&gt;&lt;code&gt;Class.getName()&lt;/code&gt;&lt;/a&gt;, for example &lt;code&gt;&quot;int&quot;&lt;/code&gt; or &lt;code&gt;&quot;java.lang.String&quot;&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt;Tは&lt;/em&gt;非ジェネリック非アレイタイプである、&lt;em&gt;（T）にはgenericstringすること&lt;/em&gt;によって返される値である&lt;a href=&quot;../../java/lang/class#getName--&quot;&gt; &lt;code&gt;Class.getName()&lt;/code&gt; &lt;/a&gt;例えば、 &lt;code&gt;&quot;int&quot;&lt;/code&gt; または &lt;code&gt;&quot;java.lang.String&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="860ba81ee558617e504db9f36e3c29f31a880b19" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;T&lt;/em&gt; is an array &lt;em&gt;E[]&lt;/em&gt;, &lt;em&gt;genericstring(T)&lt;/em&gt; is &lt;em&gt;genericstring(E)&lt;/em&gt; followed by &lt;code&gt;&quot;[]&quot;&lt;/code&gt;. For example, &lt;em&gt;genericstring(&lt;code&gt;int[]&lt;/code&gt;)&lt;/em&gt; is &lt;code&gt;&quot;int[]&quot;&lt;/code&gt;, and &lt;em&gt;genericstring(&lt;code&gt;
      List&amp;lt;String&amp;gt;[][]&lt;/code&gt;)&lt;/em&gt; is &lt;code&gt;
      &quot;java.util.List&amp;lt;java.lang.String&amp;gt;[][]&quot;&lt;/code&gt;.</source>
          <target state="translated">If &lt;em&gt;T&lt;/em&gt; is an array &lt;em&gt;E[]&lt;/em&gt;, &lt;em&gt;genericstring(T)&lt;/em&gt; is &lt;em&gt;genericstring(E)&lt;/em&gt; followed by &lt;code&gt;&quot;[]&quot;&lt;/code&gt; . For example, &lt;em&gt;genericstring( &lt;code&gt;int[]&lt;/code&gt; )&lt;/em&gt; is &lt;code&gt;&quot;int[]&quot;&lt;/code&gt; , and &lt;em&gt;genericstring( &lt;code&gt; List&amp;lt;String&amp;gt;[][]&lt;/code&gt; )&lt;/em&gt; is &lt;code&gt; &quot;java.util.List&amp;lt;java.lang.String&amp;gt;[][]&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8fc604f0af1a190516ca2a3a164921e85df65901" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;T&lt;/em&gt; is an array &lt;em&gt;E[]&lt;/em&gt;, &lt;em&gt;genericstring(T)&lt;/em&gt; is &lt;em&gt;genericstring(E)&lt;/em&gt; followed by &lt;code&gt;&quot;[]&quot;&lt;/code&gt;. For example, &lt;em&gt;genericstring(&lt;code&gt;int[]&lt;/code&gt;)&lt;/em&gt; is &lt;code&gt;&quot;int[]&quot;&lt;/code&gt;, and &lt;em&gt;genericstring(&lt;code&gt;List&amp;lt;String&amp;gt;[][]&lt;/code&gt;)&lt;/em&gt; is &lt;code&gt;&quot;java.util.List&amp;lt;java.lang.String&amp;gt;[][]&quot;&lt;/code&gt;.</source>
          <target state="translated">場合&lt;em&gt;Tは&lt;/em&gt;配列である&lt;em&gt;E []は&lt;/em&gt;、&lt;em&gt;はgenericstring（T）が&lt;/em&gt;される&lt;em&gt;（E）はgenericstring&lt;/em&gt;続きます &lt;code&gt;&quot;[]&quot;&lt;/code&gt; 。たとえば、&lt;em&gt;genericstring（ &lt;code&gt;int[]&lt;/code&gt; ）&lt;/em&gt;は &lt;code&gt;&quot;int[]&quot;&lt;/code&gt; であり、&lt;em&gt;genericstring（ &lt;code&gt;List&amp;lt;String&amp;gt;[][]&lt;/code&gt; ）&lt;/em&gt;は &lt;code&gt;&quot;java.util.List&amp;lt;java.lang.String&amp;gt;[][]&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a5ada396ebd42f6281b2f214e6a5eb260e1d65b4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;opendata(J)&lt;/em&gt; is &lt;code&gt;CompositeData&lt;/code&gt; for a Java type &lt;em&gt;J&lt;/em&gt;, then either an instance of &lt;em&gt;J&lt;/em&gt; can be reconstructed from a &lt;code&gt;CompositeData&lt;/code&gt;, or &lt;em&gt;J&lt;/em&gt; is not reconstructible. If any item in the &lt;code&gt;CompositeData&lt;/code&gt; is not reconstructible, then &lt;em&gt;J&lt;/em&gt; is not reconstructible either.</source>
          <target state="translated">場合&lt;em&gt;をopendata（J）が&lt;/em&gt;ある &lt;code&gt;CompositeData&lt;/code&gt; Java型用&lt;em&gt;J&lt;/em&gt;、その後のインスタンスのいずれか&lt;em&gt;Jは&lt;/em&gt;から再構築することができ &lt;code&gt;CompositeData&lt;/code&gt; 、または&lt;em&gt;Jは&lt;/em&gt;再構成可能ではありません。 &lt;code&gt;CompositeData&lt;/code&gt; のいずれかのアイテムが再構築可能でない場合、&lt;em&gt;J&lt;/em&gt;も再構築できません。</target>
        </trans-unit>
        <trans-unit id="8262855ebc180b3d6778bf226e7f53f50f72af47" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;obj&lt;/var&gt; is an instance of &lt;code&gt;javax.management.openmbean.CompositeData&lt;/code&gt;, then let &lt;code&gt;ct&lt;/code&gt; be its &lt;code&gt;CompositeType&lt;/code&gt; as returned by &lt;a href=&quot;compositedata#getCompositeType()&quot;&gt;&lt;code&gt;CompositeData.getCompositeType()&lt;/code&gt;&lt;/a&gt;. The result is true if &lt;code&gt;this&lt;/code&gt; is &lt;em&gt;assignable from&lt;/em&gt;&lt;code&gt;ct&lt;/code&gt;. This means that:</source>
          <target state="translated">If &lt;var&gt;obj&lt;/var&gt; is an instance of &lt;code&gt;javax.management.openmbean.CompositeData&lt;/code&gt; , then let &lt;code&gt;ct&lt;/code&gt; be its &lt;code&gt;CompositeType&lt;/code&gt; as returned by &lt;a href=&quot;compositedata#getCompositeType()&quot;&gt; &lt;code&gt;CompositeData.getCompositeType()&lt;/code&gt; &lt;/a&gt;. The result is true if &lt;code&gt;this&lt;/code&gt; is &lt;em&gt;assignable from&lt;/em&gt; &lt;code&gt;ct&lt;/code&gt; . This means that:</target>
        </trans-unit>
        <trans-unit id="55e80b82ba0e613e2bb9e96436b7f7884b762e6f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;obj&lt;/var&gt; is an instance of &lt;code&gt;javax.management.openmbean.CompositeData&lt;/code&gt;, then let &lt;code&gt;ct&lt;/code&gt; be its &lt;code&gt;CompositeType&lt;/code&gt; as returned by &lt;a href=&quot;compositedata#getCompositeType--&quot;&gt;&lt;code&gt;CompositeData.getCompositeType()&lt;/code&gt;&lt;/a&gt;. The result is true if &lt;code&gt;this&lt;/code&gt; is &lt;em&gt;assignable from&lt;/em&gt;&lt;code&gt;ct&lt;/code&gt;. This means that:</source>
          <target state="translated">場合 &lt;var&gt;obj&lt;/var&gt; がインスタンスである &lt;code&gt;javax.management.openmbean.CompositeData&lt;/code&gt; 、次いでせ &lt;code&gt;ct&lt;/code&gt; 、そのこと &lt;code&gt;CompositeType&lt;/code&gt; によって返される&lt;a href=&quot;compositedata#getCompositeType--&quot;&gt; &lt;code&gt;CompositeData.getCompositeType()&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;this&lt;/code&gt; が &lt;code&gt;ct&lt;/code&gt; &lt;em&gt;から割り当て可能な&lt;/em&gt;場合、結果はtrueです。この意味は：</target>
        </trans-unit>
        <trans-unit id="e4299f574b0825744c73fc58489cb793e0aeb31f" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;obj&lt;/var&gt; is an instance of &lt;code&gt;javax.management.openmbean.TabularData&lt;/code&gt;, say &lt;code&gt;
 td&lt;/code&gt;, the result is true if this &lt;code&gt;TabularType&lt;/code&gt; is &lt;em&gt;assignable from&lt;/em&gt;&lt;a href=&quot;tabulardata#getTabularType()&quot;&gt;&lt;code&gt;td.getTabularType()&lt;/code&gt;&lt;/a&gt;, as defined in &lt;a href=&quot;compositetype#isValue(java.lang.Object)&quot;&gt;&lt;code&gt;CompositeType.isValue&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If &lt;var&gt;obj&lt;/var&gt; is an instance of &lt;code&gt;javax.management.openmbean.TabularData&lt;/code&gt; , say &lt;code&gt; td&lt;/code&gt; , the result is true if this &lt;code&gt;TabularType&lt;/code&gt; is &lt;em&gt;assignable from&lt;/em&gt;&lt;a href=&quot;tabulardata#getTabularType()&quot;&gt; &lt;code&gt;td.getTabularType()&lt;/code&gt; &lt;/a&gt;, as defined in &lt;a href=&quot;compositetype#isValue(java.lang.Object)&quot;&gt; &lt;code&gt;CompositeType.isValue&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c5b21be35113bc2c3c5695016e41e7a8961aa607" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;obj&lt;/var&gt; is an instance of &lt;code&gt;javax.management.openmbean.TabularData&lt;/code&gt;, say &lt;code&gt;td&lt;/code&gt;, the result is true if this &lt;code&gt;TabularType&lt;/code&gt; is &lt;em&gt;assignable from&lt;/em&gt;&lt;a href=&quot;tabulardata#getTabularType--&quot;&gt;&lt;code&gt;td.getTabularType()&lt;/code&gt;&lt;/a&gt;, as defined in &lt;a href=&quot;compositetype#isValue-java.lang.Object-&quot;&gt;&lt;code&gt;CompositeType.isValue&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;var&gt;obj&lt;/var&gt; がインスタンスである &lt;code&gt;javax.management.openmbean.TabularData&lt;/code&gt; 、と言うの &lt;code&gt;td&lt;/code&gt; この場合、結果は真である &lt;code&gt;TabularType&lt;/code&gt; ではある&lt;em&gt;から割り当て可能&lt;/em&gt;&lt;a href=&quot;tabulardata#getTabularType--&quot;&gt; &lt;code&gt;td.getTabularType()&lt;/code&gt; &lt;/a&gt;で定義されるように、&lt;a href=&quot;compositetype#isValue-java.lang.Object-&quot;&gt; &lt;code&gt;CompositeType.isValue&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f2bc555f2367ab62f427bf89fb970ff34e2a7eac" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;obj&lt;/var&gt; is null or is not an instance of &lt;code&gt;javax.management.openmbean.CompositeData&lt;/code&gt;, &lt;code&gt;isValue&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt; がnullの場合、または &lt;code&gt;javax.management.openmbean.CompositeData&lt;/code&gt; のインスタンスでない場合、 &lt;code&gt;isValue&lt;/code&gt; は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f7fca7400d753ab2ac94fb4572ae69584ddad617" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;obj&lt;/var&gt; is null or is not an instance of &lt;code&gt;javax.management.openmbean.TabularData&lt;/code&gt;, &lt;code&gt;isValue&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;var&gt;obj&lt;/var&gt; が nullであるかのインスタンスではありません &lt;code&gt;javax.management.openmbean.TabularData&lt;/code&gt; 、 &lt;code&gt;isValue&lt;/code&gt; 返し &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ee964581c68796c9de47e0f9fcc18bb6c0cdfe3" translate="yes" xml:space="preserve">
          <source>If B 'requires transitive' C, then A &quot;reads&quot; C as well as B. This augmentation is recursive: since A &quot;reads&quot; C, if C 'requires transitive' D, then A &quot;reads&quot; D as well as C and B.</source>
          <target state="translated">この拡張は再帰的である:AがCを「読む」ので、CがDを「通過詞を必要とする」ならば、AはCとBと同様にDを「読む」。</target>
        </trans-unit>
        <trans-unit id="217ddf9447b9b7371675e7e32d2dda97e83ca937" translate="yes" xml:space="preserve">
          <source>If B is an automatic module, then A &quot;reads&quot; every other enumerated automatic module. (It is &quot;as if&quot; an automatic module has 'requires transitive' directives for every other enumerated automatic module).</source>
          <target state="translated">Bが自動モジュールならば、Aは他の列挙されたすべての自動モジュールを「読む」ことになります。(自動モジュールが他の列挙されたすべての自動モジュールに対して 'requires transitive' ディレクティブを持っているのは「あたかも」です)。</target>
        </trans-unit>
        <trans-unit id="f6eb29fd93b0c765afc3bd3b512f90a195dcbb2f" translate="yes" xml:space="preserve">
          <source>If BeanContext parameter is null, then it shall associate the Applet with its appropriate Container by adding that Applet to its Container via an invocation of add(). If the BeanContext parameter is non-null, then it is the responsibility of the BeanContext to associate the Applet with its Container during the subsequent invocation of its addChildren() method.</source>
          <target state="translated">BeanContextパラメータがnullであれば,add()を呼び出してそのアプレットをそのコンテナに追加することにより,アプレットをその適切なコンテナに関連付ける。BeanContextパラメータがnullでない場合,その後のaddChildren()メソッドの呼び出し中にアプレットをそのコンテナに関連付けることは,BeanContextの責任である。</target>
        </trans-unit>
        <trans-unit id="b3801f11fd37bcce7f8fba639fe8d4ee887aad7e" translate="yes" xml:space="preserve">
          <source>If C declares a public field with the name specified, that is the field to be reflected.</source>
          <target state="translated">Cが指定した名前のパブリックフィールドを宣言した場合、それが反映されるフィールドとなります。</target>
        </trans-unit>
        <trans-unit id="e74b12226ef970b004e90369d97d9ef001f09d83" translate="yes" xml:space="preserve">
          <source>If C is a class other than &lt;code&gt;Object&lt;/code&gt;, then include the result of invoking this algorithm recursively on the superclass of C.</source>
          <target state="translated">If C is a class other than &lt;code&gt;Object&lt;/code&gt; , then include the result of invoking this algorithm recursively on the superclass of C.</target>
        </trans-unit>
        <trans-unit id="ca26ee5702ced758c636159001396b48df22d8a6" translate="yes" xml:space="preserve">
          <source>If C is a class other than &lt;code&gt;Object&lt;/code&gt;, then this algorithm is invoked recursively on the superclass of C.</source>
          <target state="translated">Cが &lt;code&gt;Object&lt;/code&gt; 以外のクラスの場合、このアルゴリズムはCのスーパークラスで再帰的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="5e9b9649ab976d62198d1ec3dfed66527d11d467" translate="yes" xml:space="preserve">
          <source>If C is the class &lt;code&gt;Object&lt;/code&gt;, or if C is an interface, then the superinterfaces of C (if any) are searched for a matching method. If any such method is found, it is reflected.</source>
          <target state="translated">Cがクラス &lt;code&gt;Object&lt;/code&gt; の場合、またはCがインターフェースの場合、Cのスーパーインターフェース（存在する場合）で一致するメソッドが検索されます。そのようなメソッドが見つかると、それが反映されます。</target>
        </trans-unit>
        <trans-unit id="2d85abeeeb1aa21f2267ac0f2f921e008ecb6b5d" translate="yes" xml:space="preserve">
          <source>If CPU time measurement is enabled after the thread has started, the Java virtual machine implementation may choose any time up to and including the time that the capability is enabled as the point where CPU time measurement starts.</source>
          <target state="translated">スレッドが開始された後にCPU時間計測が有効になっている場合、Java仮想マシンの実装では、CPU時間計測を開始する時点として、ケイパビリティが有効になっている時間までの任意の時間を選択することができます。</target>
        </trans-unit>
        <trans-unit id="96b2e184e73a9f507b63cab71f6b6a0fc51255aa" translate="yes" xml:space="preserve">
          <source>If CredentialClass is &quot;*&quot;, then access is granted to all private Credentials belonging to the specified &lt;code&gt;Subject&lt;/code&gt;. If &quot;PrincipalName&quot; is &quot;*&quot;, then access is granted to the specified Credential owned by any &lt;code&gt;Subject&lt;/code&gt; that has the specified &lt;code&gt;Principal&lt;/code&gt; (the actual PrincipalName doesn't matter). For example, the following grants access to the a.b.Credential owned by any &lt;code&gt;Subject&lt;/code&gt; that has an a.b.Principal.</source>
          <target state="translated">CredentialClassが &quot;*&quot;の場合、指定された &lt;code&gt;Subject&lt;/code&gt; に属するすべてのプライベートCredentialsへのアクセスが許可されます。「PrincipalName」が「*」の場合、指定された &lt;code&gt;Principal&lt;/code&gt; を持つ &lt;code&gt;Subject&lt;/code&gt; が所有する指定されたクレデンシャルへのアクセスが許可されます（実際のプリンシパル名は関係ありません）。たとえば、次の例では、abPrincipalを持つ &lt;code&gt;Subject&lt;/code&gt; が所有するabCredentialへのアクセスを許可しています。</target>
        </trans-unit>
        <trans-unit id="6a39eb1a01812d32c33a1ca34fe7c0a3f9fe824c" translate="yes" xml:space="preserve">
          <source>If January 1st is Friday then week 1 starts on January 4th</source>
          <target state="translated">1月1日が金曜日の場合、第1週は1月4日から始まります。</target>
        </trans-unit>
        <trans-unit id="8212bef3cde7fd918667a428a4beb2926b2aaf30" translate="yes" xml:space="preserve">
          <source>If January 1st is Monday then week 1 starts on January 1st</source>
          <target state="translated">1月1日が月曜日の場合、1月1日から第1週が始まります。</target>
        </trans-unit>
        <trans-unit id="4e1d8c7e06d2ed477961cc6b9bf02767f72d2e8e" translate="yes" xml:space="preserve">
          <source>If January 1st is Saturday then week 1 starts on January 3rd</source>
          <target state="translated">1月1日が土曜日の場合、1月3日から第1週が始まります。</target>
        </trans-unit>
        <trans-unit id="93384845075a732cc09f28c1fdb3a1493434370f" translate="yes" xml:space="preserve">
          <source>If January 1st is Sunday then week 1 starts on January 2nd</source>
          <target state="translated">1月1日が日曜日の場合、1月2日に第1週が始まります。</target>
        </trans-unit>
        <trans-unit id="d773a45b8b76332ac1c9cf30d6d26cbed25b1ef6" translate="yes" xml:space="preserve">
          <source>If January 1st is Thursday then week 1 starts on December 29th of the previous standard year</source>
          <target state="translated">1月1日が木曜日の場合、第1週は前年の12月29日から始まります。</target>
        </trans-unit>
        <trans-unit id="dff679f893694acfcb5844ad440b7fd91f379885" translate="yes" xml:space="preserve">
          <source>If January 1st is Tuesday then week 1 starts on December 31st of the previous standard year</source>
          <target state="translated">1月1日が火曜日の場合、第1週は前年の12月31日から始まります。</target>
        </trans-unit>
        <trans-unit id="3b4487b7e39c0d7129e69d67e0df2749862989ef" translate="yes" xml:space="preserve">
          <source>If January 1st is Wednesday then week 1 starts on December 30th of the previous standard year</source>
          <target state="translated">1月1日が水曜日の場合、第1週は前年の12月30日から始まります。</target>
        </trans-unit>
        <trans-unit id="f38e0c7c32dd408bc04c87c04c2100fa3feb4c90" translate="yes" xml:space="preserve">
          <source>If N equals &lt;code&gt;className&lt;/code&gt;, the result is true.</source>
          <target state="translated">Nが &lt;code&gt;className&lt;/code&gt; と等しい場合、結果はtrueです。</target>
        </trans-unit>
        <trans-unit id="0ba990b0a52d90609129011e460cfce22958559a" translate="yes" xml:space="preserve">
          <source>If Q is not a primitive wrapper, cast Q to the base Wrapper(S); for example Number for numeric types</source>
          <target state="translated">Qがプリミティブ・ラッパーでない場合は、QをベースのWrapper(S)にキャストします。</target>
        </trans-unit>
        <trans-unit id="703cac5535402dfbacd6e10480e5c86732963b2a" translate="yes" xml:space="preserve">
          <source>If SQL distinct or structured types are supported, then information on the individual types may be obtained from the getUDTs() method.</source>
          <target state="translated">SQL の別個の型や構造化された型がサポートされている場合は、個々の型に関する情報を getUDTs()メソッドで取得することができます。</target>
        </trans-unit>
        <trans-unit id="b161924f4e548ad87c34d6fc35e9d529b38669ec" translate="yes" xml:space="preserve">
          <source>If TMFAIL is specified, the portion of work has failed. The resource manager may mark the transaction as rollback-only</source>
          <target state="translated">TMFAILが指定された場合、作業の一部が失敗したことになります。リソースマネージャは、トランザクションをロールバック専用としてマークすることができます。</target>
        </trans-unit>
        <trans-unit id="34e620dd9f663543c0cd6de489c85fce57f1d753" translate="yes" xml:space="preserve">
          <source>If TMSUCCESS is specified, the portion of work has completed successfully.</source>
          <target state="translated">TMSUCCESSを指定した場合は、作業の一部が正常に終了したことになります。</target>
        </trans-unit>
        <trans-unit id="666f46da82bcae259e1d59dba9446d046eb56729" translate="yes" xml:space="preserve">
          <source>If TMSUSPEND is specified in the flags, the transaction branch is temporarily suspended in an incomplete state. The transaction context is in a suspended state and must be resumed via the &lt;code&gt;start&lt;/code&gt; method with TMRESUME specified.</source>
          <target state="translated">If TMSUSPEND is specified in the flags, the transaction branch is temporarily suspended in an incomplete state. The transaction context is in a suspended state and must be resumed via the &lt;code&gt;start&lt;/code&gt; method with TMRESUME specified.</target>
        </trans-unit>
        <trans-unit id="d4e43d0787d6a1f0ea103acb6274a424055f2393" translate="yes" xml:space="preserve">
          <source>If UDP socket is used, TCP/IP related socket options will not apply.</source>
          <target state="translated">UDP ソケットを使用している場合、TCP/IP 関連のソケットオプションは適用されません。</target>
        </trans-unit>
        <trans-unit id="d35b5e2d84fd7cadfe9d220ae2dd518e06e9f2d7" translate="yes" xml:space="preserve">
          <source>If XInclude markup is found in the document instance, should it be processed as specified in &lt;a href=&quot;http://www.w3.org/TR/xinclude/&quot;&gt; XML Inclusions (XInclude) Version 1.0&lt;/a&gt;.</source>
          <target state="translated">If XInclude markup is found in the document instance, should it be processed as specified in &lt;a href=&quot;http://www.w3.org/TR/xinclude/&quot;&gt; XML Inclusions (XInclude) Version 1.0&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cf93dc358d8e904b576e25277f8f25bb773404f0" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt;&lt;code&gt;LSResourceResolver&lt;/code&gt;&lt;/a&gt; throws a &lt;a href=&quot;../../../../java.base/java/lang/runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt; (or instances of its derived classes), then the &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; will abort the parsing and the caller of the &lt;code&gt;newSchema&lt;/code&gt; method will receive the same &lt;a href=&quot;../../../../java.base/java/lang/runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If a &lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt; &lt;code&gt;LSResourceResolver&lt;/code&gt; &lt;/a&gt; throws a &lt;a href=&quot;../../../../java.base/java/lang/runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt; (or instances of its derived classes), then the &lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt; will abort the parsing and the caller of the &lt;code&gt;newSchema&lt;/code&gt; method will receive the same &lt;a href=&quot;../../../../java.base/java/lang/runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d758c373d5c33100c18bb64f511e7cfa9ca774b0" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt;&lt;code&gt;LSResourceResolver&lt;/code&gt;&lt;/a&gt; throws a &lt;a href=&quot;../../../../java.base/java/lang/runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt; (or instances of its derived classes), then the &lt;a href=&quot;validator&quot;&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;/a&gt; will abort the parsing and the caller of the &lt;code&gt;validate&lt;/code&gt; method will receive the same &lt;a href=&quot;../../../../java.base/java/lang/runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If a &lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt; &lt;code&gt;LSResourceResolver&lt;/code&gt; &lt;/a&gt; throws a &lt;a href=&quot;../../../../java.base/java/lang/runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt; (or instances of its derived classes), then the &lt;a href=&quot;validator&quot;&gt; &lt;code&gt;Validator&lt;/code&gt; &lt;/a&gt; will abort the parsing and the caller of the &lt;code&gt;validate&lt;/code&gt; method will receive the same &lt;a href=&quot;../../../../java.base/java/lang/runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7ff99926f4a6706109dc64ddd976098f7dbb7eca" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt;&lt;code&gt;LSResourceResolver&lt;/code&gt;&lt;/a&gt; throws a &lt;a href=&quot;../../../../java.base/java/lang/runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt; (or instances of its derived classes), then the &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; will abort the parsing and the caller of the &lt;code&gt;validate&lt;/code&gt; method will receive the same &lt;a href=&quot;../../../../java.base/java/lang/runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If a &lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt; &lt;code&gt;LSResourceResolver&lt;/code&gt; &lt;/a&gt; throws a &lt;a href=&quot;../../../../java.base/java/lang/runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt; (or instances of its derived classes), then the &lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt; will abort the parsing and the caller of the &lt;code&gt;validate&lt;/code&gt; method will receive the same &lt;a href=&quot;../../../../java.base/java/lang/runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0e9892804baed9af42e82a13b8ef76149b94c399" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;../../lang/securitymanager&quot;&gt;&lt;code&gt;SecurityManager&lt;/code&gt;&lt;/a&gt; is present and no factory is specified, then the default pool uses a factory supplying threads that have no &lt;a href=&quot;../../security/permissions&quot;&gt;&lt;code&gt;Permissions&lt;/code&gt;&lt;/a&gt; enabled. The system class loader is used to load these classes. Upon any error in establishing these settings, default parameters are used. It is possible to disable or limit the use of threads in the common pool by setting the parallelism property to zero, and/or using a factory that may return &lt;code&gt;null&lt;/code&gt;. However doing so may cause unjoined tasks to never be executed.</source>
          <target state="translated">場合&lt;a href=&quot;../../lang/securitymanager&quot;&gt; &lt;code&gt;SecurityManager&lt;/code&gt; が&lt;/a&gt;存在し、何の工場が指定されていない場合、デフォルト・プールには持っているスレッド供給工場使用&lt;a href=&quot;../../security/permissions&quot;&gt; &lt;code&gt;Permissions&lt;/code&gt; &lt;/a&gt;有効になっていませんが。システムクラスローダーは、これらのクラスをロードするために使用されます。これらの設定を確立する際にエラーが発生すると、デフォルトのパラメータが使用されます。並列処理プロパティをゼロに設定するか、 &lt;code&gt;null&lt;/code&gt; を返す可能性のあるファクトリを使用することにより、共通プール内のスレッドの使用を無効化または制限することが可能です。ただし、そうすると、結合されていないタスクが実行されない場合があります。</target>
        </trans-unit>
        <trans-unit id="f56cfbf9c11a3bf93497432039e845c2caa01626" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&quot;..&quot;&lt;/code&gt; segment is preceded by a non-&lt;code&gt;&quot;..&quot;&lt;/code&gt; segment then both of these segments are removed. This step is repeated until it is no longer applicable.</source>
          <target state="translated">場合 &lt;code&gt;&quot;..&quot;&lt;/code&gt; セグメントは、非先行する &lt;code&gt;&quot;..&quot;&lt;/code&gt; セグメントこれらのセグメントの両方が除去されます。この手順は、適用できなくなるまで繰り返されます。</target>
        </trans-unit>
        <trans-unit id="f4a595fa88f9f83de3f8fcc49ca39b0b97a48f5f" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;CONCURRENT&lt;/code&gt; collector is not also &lt;code&gt;UNORDERED&lt;/code&gt;, then it should only be evaluated concurrently if applied to an unordered data source.</source>
          <target state="translated">&lt;code&gt;CONCURRENT&lt;/code&gt; コレクターが &lt;code&gt;UNORDERED&lt;/code&gt; でもない場合は、順序付けされていないデータソースに適用される場合にのみ、同時に評価する必要があります。</target>
        </trans-unit>
        <trans-unit id="889b6a11619fbd0768ef25d463af6d6d1eb26b68" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;CachedRowSet&lt;/code&gt; object becomes part of a &lt;code&gt;JoinRowSet&lt;/code&gt; object, the keys defined by this method and the resulting constraints are maintained if the columns designated as key columns also become match columns.</source>
          <target state="translated">If a &lt;code&gt;CachedRowSet&lt;/code&gt; object becomes part of a &lt;code&gt;JoinRowSet&lt;/code&gt; object, the keys defined by this method and the resulting constraints are maintained if the columns designated as key columns also become match columns.</target>
        </trans-unit>
        <trans-unit id="023e1ebdfb712240675bc329abb0aeba8c03fd80" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;Comparator&lt;/code&gt; has been specified for the column by the &lt;code&gt;setComparator&lt;/code&gt; method, use it.</source>
          <target state="translated">If a &lt;code&gt;Comparator&lt;/code&gt; has been specified for the column by the &lt;code&gt;setComparator&lt;/code&gt; method, use it.</target>
        </trans-unit>
        <trans-unit id="87a0262c290ea66e1e4a3ee02285d9a618034184" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;DataLine&lt;/code&gt; is requested, and &lt;code&gt;info&lt;/code&gt; is an instance of &lt;code&gt;DataLine.Info&lt;/code&gt; specifying at least one fully qualified audio format, the last one will be used as the default format of the returned &lt;code&gt;DataLine&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;DataLine&lt;/code&gt; 要求され、 &lt;code&gt;info&lt;/code&gt; のインスタンスである &lt;code&gt;DataLine.Info&lt;/code&gt; 少なくとも一つの完全修飾オーディオ形式を指定して、最後のものが返されたのデフォルトフォーマットとして使用されます &lt;code&gt;DataLine&lt;/code&gt; の。</target>
        </trans-unit>
        <trans-unit id="822fd67bb76ff6305db4ff466cd709d70f4144a8" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;DriverAction&lt;/code&gt; instance was specified when the JDBC driver was registered, its deregister method will be called prior to the driver being removed from the list of registered drivers.</source>
          <target state="translated">If a &lt;code&gt;DriverAction&lt;/code&gt; instance was specified when the JDBC driver was registered, its deregister method will be called prior to the driver being removed from the list of registered drivers.</target>
        </trans-unit>
        <trans-unit id="0307105d00c9e2e53f227a7583fda0f66d0bdfee" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;FilteredRowSet&lt;/code&gt; implementation is shared using the inherited &lt;code&gt;createShared&lt;/code&gt; method in parent interfaces, the &lt;code&gt;Predicate&lt;/code&gt; should be shared without modification by all &lt;code&gt;FilteredRowSet&lt;/code&gt; instance clones.</source>
          <target state="translated">If a &lt;code&gt;FilteredRowSet&lt;/code&gt; implementation is shared using the inherited &lt;code&gt;createShared&lt;/code&gt; method in parent interfaces, the &lt;code&gt;Predicate&lt;/code&gt; should be shared without modification by all &lt;code&gt;FilteredRowSet&lt;/code&gt; instance clones.</target>
        </trans-unit>
        <trans-unit id="738e1b86e8d51219176a3aef7355506e4b762fc6" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;JButton&lt;/code&gt; is being added, it is initially set to be disabled.</source>
          <target state="translated">If a &lt;code&gt;JButton&lt;/code&gt; is being added, it is initially set to be disabled.</target>
        </trans-unit>
        <trans-unit id="baa9e0dcc52392fc3cfab576edd859e0065fab5d" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;JMenuBar&lt;/code&gt; component is set on the &lt;code&gt;JRootPane&lt;/code&gt;, it is positioned along the upper edge of the frame. The &lt;code&gt;contentPane&lt;/code&gt; is adjusted in location and size to fill the remaining area. (The &lt;code&gt;JMenuBar&lt;/code&gt; and the &lt;code&gt;contentPane&lt;/code&gt; are added to the &lt;code&gt;layeredPane&lt;/code&gt; component at the &lt;code&gt;JLayeredPane.FRAME_CONTENT_LAYER&lt;/code&gt; layer.)</source>
          <target state="translated">If a &lt;code&gt;JMenuBar&lt;/code&gt; component is set on the &lt;code&gt;JRootPane&lt;/code&gt; , it is positioned along the upper edge of the frame. The &lt;code&gt;contentPane&lt;/code&gt; is adjusted in location and size to fill the remaining area. (The &lt;code&gt;JMenuBar&lt;/code&gt; and the &lt;code&gt;contentPane&lt;/code&gt; are added to the &lt;code&gt;layeredPane&lt;/code&gt; component at the &lt;code&gt;JLayeredPane.FRAME_CONTENT_LAYER&lt;/code&gt; layer.)</target>
        </trans-unit>
        <trans-unit id="1d76683d65c14154863276b53c328991a5b273fb" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;JOptionPane&lt;/code&gt; has configured to all input &lt;code&gt;setWantsInput&lt;/code&gt; the bound property &lt;code&gt;JOptionPane.INPUT_VALUE_PROPERTY&lt;/code&gt; can also be listened to, to determine when the user has input or selected a value.</source>
          <target state="translated">If a &lt;code&gt;JOptionPane&lt;/code&gt; has configured to all input &lt;code&gt;setWantsInput&lt;/code&gt; the bound property &lt;code&gt;JOptionPane.INPUT_VALUE_PROPERTY&lt;/code&gt; can also be listened to, to determine when the user has input or selected a value.</target>
        </trans-unit>
        <trans-unit id="88dd2d3eceec11295d7042c434141f4e15854a11" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;JobPriority&lt;/code&gt; attribute is specified for a Print Job, it specifies a priority for scheduling the job. A higher value specifies a higher priority. The value 1 indicates the lowest possible priority. The value 100 indicates the highest possible priority. Among those jobs that are ready to print, a printer must print all jobs with a priority value of</source>
          <target state="translated">If a &lt;code&gt;JobPriority&lt;/code&gt; attribute is specified for a Print Job, it specifies a priority for scheduling the job. A higher value specifies a higher priority. The value 1 indicates the lowest possible priority. The value 100 indicates the highest possible priority. Among those jobs that are ready to print, a printer must print all jobs with a priority value of</target>
        </trans-unit>
        <trans-unit id="789dd14e5349e6a03d7591e97c806c5a4a9cec5f" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;KeyTab&lt;/code&gt; object is obtained from &lt;a href=&quot;#getUnboundInstance()&quot;&gt;&lt;code&gt;getUnboundInstance()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#getUnboundInstance(java.io.File)&quot;&gt;&lt;code&gt;getUnboundInstance(java.io.File)&lt;/code&gt;&lt;/a&gt;, it is unbound and thus can be used by any service principal. Otherwise, if it's obtained from &lt;a href=&quot;#getInstance(javax.security.auth.kerberos.KerberosPrincipal)&quot;&gt;&lt;code&gt;getInstance(KerberosPrincipal)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#getInstance(javax.security.auth.kerberos.KerberosPrincipal,java.io.File)&quot;&gt;&lt;code&gt;getInstance(KerberosPrincipal, java.io.File)&lt;/code&gt;&lt;/a&gt;, it is bound to the specific service principal and can only be used by it.</source>
          <target state="translated">If a &lt;code&gt;KeyTab&lt;/code&gt; object is obtained from &lt;a href=&quot;#getUnboundInstance()&quot;&gt; &lt;code&gt;getUnboundInstance()&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#getUnboundInstance(java.io.File)&quot;&gt; &lt;code&gt;getUnboundInstance(java.io.File)&lt;/code&gt; &lt;/a&gt;, it is unbound and thus can be used by any service principal. Otherwise, if it's obtained from &lt;a href=&quot;#getInstance(javax.security.auth.kerberos.KerberosPrincipal)&quot;&gt; &lt;code&gt;getInstance(KerberosPrincipal)&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#getInstance(javax.security.auth.kerberos.KerberosPrincipal,java.io.File)&quot;&gt; &lt;code&gt;getInstance(KerberosPrincipal, java.io.File)&lt;/code&gt; &lt;/a&gt;, it is bound to the specific service principal and can only be used by it.</target>
        </trans-unit>
        <trans-unit id="96e5812f9668e1871b3f46e04c3c43773aa3cf41" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;KeyTab&lt;/code&gt; object is obtained from &lt;a href=&quot;keytab#getUnboundInstance--&quot;&gt;&lt;code&gt;getUnboundInstance()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;keytab#getUnboundInstance-java.io.File-&quot;&gt;&lt;code&gt;getUnboundInstance(java.io.File)&lt;/code&gt;&lt;/a&gt;, it is unbound and thus can be used by any service principal. Otherwise, if it's obtained from &lt;a href=&quot;keytab#getInstance-javax.security.auth.kerberos.KerberosPrincipal-&quot;&gt;&lt;code&gt;getInstance(KerberosPrincipal)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;keytab#getInstance-javax.security.auth.kerberos.KerberosPrincipal-java.io.File-&quot;&gt;&lt;code&gt;getInstance(KerberosPrincipal, java.io.File)&lt;/code&gt;&lt;/a&gt;, it is bound to the specific service principal and can only be used by it.</source>
          <target state="translated">&lt;code&gt;KeyTab&lt;/code&gt; オブジェクトが&lt;a href=&quot;keytab#getUnboundInstance--&quot;&gt; &lt;code&gt;getUnboundInstance()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;keytab#getUnboundInstance-java.io.File-&quot;&gt; &lt;code&gt;getUnboundInstance(java.io.File)&lt;/code&gt; &lt;/a&gt;から取得された場合、それはバインドされていないため、任意のサービスプリンシパルで使用できます。それ以外の場合、それが&lt;a href=&quot;keytab#getInstance-javax.security.auth.kerberos.KerberosPrincipal-&quot;&gt; &lt;code&gt;getInstance(KerberosPrincipal)&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;keytab#getInstance-javax.security.auth.kerberos.KerberosPrincipal-java.io.File-&quot;&gt; &lt;code&gt;getInstance(KerberosPrincipal, java.io.File)&lt;/code&gt; &lt;/a&gt;から取得された場合、特定のサービスプリンシパルにバインドされ、それによってのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="169583703e821554fd005ef25ad00c1501c82436" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;MarshalException&lt;/code&gt; occurs during a remote method call, the call may or may not have reached the server. If the call did reach the server, parameters may have been deserialized. A call may not be retransmitted after a &lt;code&gt;MarshalException&lt;/code&gt; and reliably preserve &quot;at most once&quot; call semantics.</source>
          <target state="translated">If a &lt;code&gt;MarshalException&lt;/code&gt; occurs during a remote method call, the call may or may not have reached the server. If the call did reach the server, parameters may have been deserialized. A call may not be retransmitted after a &lt;code&gt;MarshalException&lt;/code&gt; and reliably preserve &quot;at most once&quot; call semantics.</target>
        </trans-unit>
        <trans-unit id="7341cf2f876d3c7a46c61b0becb56d0668f2a5a7" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;MaskFormatter&lt;/code&gt; is configured to only allow valid characters (&lt;code&gt;setAllowsInvalid(false)&lt;/code&gt;) literal characters will be skipped as necessary when editing. Consider a &lt;code&gt;MaskFormatter&lt;/code&gt; with the mask &quot;###-####&quot; and current value &quot;555-1212&quot;. Using the right arrow key to navigate through the field will result in (| indicates the position of the caret):</source>
          <target state="translated">If a &lt;code&gt;MaskFormatter&lt;/code&gt; is configured to only allow valid characters ( &lt;code&gt;setAllowsInvalid(false)&lt;/code&gt; ) literal characters will be skipped as necessary when editing. Consider a &lt;code&gt;MaskFormatter&lt;/code&gt; with the mask &quot;###-####&quot; and current value &quot;555-1212&quot;. Using the right arrow key to navigate through the field will result in (| indicates the position of the caret):</target>
        </trans-unit>
        <trans-unit id="ead077860ccdc5ff506c0098c7c9fa85462cc96f" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;ModuleDescriptor&lt;/code&gt; cannot be created (by means of the &lt;a href=&quot;moduledescriptor.builder&quot;&gt;&lt;code&gt;ModuleDescriptor.Builder&lt;/code&gt;&lt;/a&gt; API) for an automatic module then &lt;code&gt;FindException&lt;/code&gt; is thrown. This can arise when the value of the &quot;&lt;code&gt;Automatic-Module-Name&lt;/code&gt;&quot; attribute is not a legal module name, a legal module name cannot be derived from the file name of the JAR file, where the JAR file contains a &lt;code&gt;.class&lt;/code&gt; in the top-level directory of the JAR file, where an entry in a service configuration file is not a legal class name or its package name is not in the set of packages derived for the module.</source>
          <target state="translated">If a &lt;code&gt;ModuleDescriptor&lt;/code&gt; cannot be created (by means of the &lt;a href=&quot;moduledescriptor.builder&quot;&gt; &lt;code&gt;ModuleDescriptor.Builder&lt;/code&gt; &lt;/a&gt; API) for an automatic module then &lt;code&gt;FindException&lt;/code&gt; is thrown. This can arise when the value of the &quot; &lt;code&gt;Automatic-Module-Name&lt;/code&gt; &quot; attribute is not a legal module name, a legal module name cannot be derived from the file name of the JAR file, where the JAR file contains a &lt;code&gt;.class&lt;/code&gt; in the top-level directory of the JAR file, where an entry in a service configuration file is not a legal class name or its package name is not in the set of packages derived for the module.</target>
        </trans-unit>
        <trans-unit id="441cc4fd494fbe5b1ad39c7fa559b1582982d101" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;Node&lt;/code&gt; is used in a different document than the one that created it (that doesn't support it).</source>
          <target state="translated">If a &lt;code&gt;Node&lt;/code&gt; is used in a different document than the one that created it (that doesn't support it).</target>
        </trans-unit>
        <trans-unit id="4644effb4a6d5ba07fcf8513d9d0cd6f314112a7" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;PageRanges&lt;/code&gt; attribute is not specified for a print job, all pages of the document will be printed. In other words, the default value for the &lt;code&gt;PageRanges&lt;/code&gt; attribute is always &lt;code&gt;{{1, Integer.MAX_VALUE}}&lt;/code&gt;.</source>
          <target state="translated">If a &lt;code&gt;PageRanges&lt;/code&gt; attribute is not specified for a print job, all pages of the document will be printed. In other words, the default value for the &lt;code&gt;PageRanges&lt;/code&gt; attribute is always &lt;code&gt;{{1, Integer.MAX_VALUE}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3283302ea3f0883d87077d68bd9cbb226e3ffd4" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;ParseException&lt;/code&gt; has not been thrown, and the value is outside the min/max a &lt;code&gt;ParseException&lt;/code&gt; is thrown.</source>
          <target state="translated">If a &lt;code&gt;ParseException&lt;/code&gt; has not been thrown, and the value is outside the min/max a &lt;code&gt;ParseException&lt;/code&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="6ea4836a2a47cbda56eec3b84a8b5aa80316b7db" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;PreferencesFactory&lt;/code&gt; implementation class file has been installed in a jar file that is visible to the &lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;&lt;code&gt;system class loader&lt;/code&gt;&lt;/a&gt;, and that jar file contains a provider-configuration file named &lt;code&gt;java.util.prefs.PreferencesFactory&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;, then the first class name specified in that file is taken. If more than one such jar file is provided, the first one found will be used. The class is loaded and instantiated; if this process fails then an unspecified error is thrown.</source>
          <target state="translated">If a &lt;code&gt;PreferencesFactory&lt;/code&gt; implementation class file has been installed in a jar file that is visible to the &lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt; &lt;code&gt;system class loader&lt;/code&gt; &lt;/a&gt;, and that jar file contains a provider-configuration file named &lt;code&gt;java.util.prefs.PreferencesFactory&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt; , then the first class name specified in that file is taken. If more than one such jar file is provided, the first one found will be used. The class is loaded and instantiated; if this process fails then an unspecified error is thrown.</target>
        </trans-unit>
        <trans-unit id="d851531cc7c0ba18b4dbffa855d090b319da4df2" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;PreferencesFactory&lt;/code&gt; implementation class file has been installed in a jar file that is visible to the &lt;a href=&quot;../../lang/classloader#getSystemClassLoader--&quot;&gt;&lt;code&gt;system class loader&lt;/code&gt;&lt;/a&gt;, and that jar file contains a provider-configuration file named &lt;code&gt;java.util.prefs.PreferencesFactory&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;, then the first class name specified in that file is taken. If more than one such jar file is provided, the first one found will be used. The class is loaded and instantiated; if this process fails then an unspecified error is thrown.</source>
          <target state="translated">場合 &lt;code&gt;PreferencesFactory&lt;/code&gt; 実装クラスファイルがに表示されているjarファイルにインストールされた&lt;a href=&quot;../../lang/classloader#getSystemClassLoader--&quot;&gt; &lt;code&gt;system class loader&lt;/code&gt; &lt;/a&gt;、およびそのjarファイルは、名前のプロバイダ構成ファイルが含まれ &lt;code&gt;java.util.prefs.PreferencesFactory&lt;/code&gt; リソースディレクトリ内の &lt;code&gt;META-INF/services&lt;/code&gt; 、次に、そのファイルで指定されている最初のクラス名が使用されます。そのようなjarファイルが複数指定されている場合は、最初に見つかったものが使用されます。クラスがロードされてインスタンス化されます。このプロセスが失敗すると、不特定のエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="622c2551e9494318dc465bf15dd37446b19792a2" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;RenderingHints&lt;/code&gt; object is specified in the constructor, the interpolation hint and the rendering quality hint are used to set the interpolation type for this operation. The color rendering hint and the dithering hint can be used when color conversion is required.</source>
          <target state="translated">If a &lt;code&gt;RenderingHints&lt;/code&gt; object is specified in the constructor, the interpolation hint and the rendering quality hint are used to set the interpolation type for this operation. The color rendering hint and the dithering hint can be used when color conversion is required.</target>
        </trans-unit>
        <trans-unit id="ef39b802886ff9b6ff97af1ea901d5330b3307e6" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;RowSet&lt;/code&gt; implementation is instantiated with a specified provider and the specified provider has been properly registered, the requested provider is supplied. Otherwise a &lt;code&gt;SyncFactoryException&lt;/code&gt; is thrown.</source>
          <target state="translated">If a &lt;code&gt;RowSet&lt;/code&gt; implementation is instantiated with a specified provider and the specified provider has been properly registered, the requested provider is supplied. Otherwise a &lt;code&gt;SyncFactoryException&lt;/code&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="da1a08658f1dbe589bccb3ea8d557b60263f9878" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;RowSet&lt;/code&gt; object attempts to obtain a &lt;code&gt;MyProvider&lt;/code&gt; object, the &lt;code&gt;SyncFactory&lt;/code&gt; will try to locate it. First it searches for it in the system properties, then it looks in the resource files, and finally it checks the JNDI context that has been set. The &lt;code&gt;SyncFactory&lt;/code&gt; instance verifies that the requested provider is a valid extension of the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class and then gives it to the &lt;code&gt;RowSet&lt;/code&gt; object. In the following code fragment, a new &lt;code&gt;CachedRowSet&lt;/code&gt; object is created and initialized with</source>
          <target state="translated">If a &lt;code&gt;RowSet&lt;/code&gt; object attempts to obtain a &lt;code&gt;MyProvider&lt;/code&gt; object, the &lt;code&gt;SyncFactory&lt;/code&gt; will try to locate it. First it searches for it in the system properties, then it looks in the resource files, and finally it checks the JNDI context that has been set. The &lt;code&gt;SyncFactory&lt;/code&gt; instance verifies that the requested provider is a valid extension of the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class and then gives it to the &lt;code&gt;RowSet&lt;/code&gt; object. In the following code fragment, a new &lt;code&gt;CachedRowSet&lt;/code&gt; object is created and initialized with</target>
        </trans-unit>
        <trans-unit id="85924d6f4f84b3110f734f518f0de7bf01d0e847" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;RowSet&lt;/code&gt; object does not specify a &lt;code&gt;SyncProvider&lt;/code&gt; implementation and no additional &lt;code&gt;SyncProvider&lt;/code&gt; implementations are available, the reference implementation providers are supplied.</source>
          <target state="translated">If a &lt;code&gt;RowSet&lt;/code&gt; object does not specify a &lt;code&gt;SyncProvider&lt;/code&gt; implementation and no additional &lt;code&gt;SyncProvider&lt;/code&gt; implementations are available, the reference implementation providers are supplied.</target>
        </trans-unit>
        <trans-unit id="005a68567a9c263db1c792152177b5d5b3c37e24" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;SecurityManager&lt;/code&gt; is installed, the calling thread must be granted the &lt;code&gt;AWTPermission&lt;/code&gt; &quot;replaceKeyboardFocusManager&quot; in order to replace the the current &lt;code&gt;KeyboardFocusManager&lt;/code&gt;. If this permission is not granted, this method will throw a &lt;code&gt;SecurityException&lt;/code&gt;, and the current &lt;code&gt;KeyboardFocusManager&lt;/code&gt; will be unchanged.</source>
          <target state="translated">If a &lt;code&gt;SecurityManager&lt;/code&gt; is installed, the calling thread must be granted the &lt;code&gt;AWTPermission&lt;/code&gt; &quot;replaceKeyboardFocusManager&quot; in order to replace the the current &lt;code&gt;KeyboardFocusManager&lt;/code&gt; . If this permission is not granted, this method will throw a &lt;code&gt;SecurityException&lt;/code&gt; , and the current &lt;code&gt;KeyboardFocusManager&lt;/code&gt; will be unchanged.</target>
        </trans-unit>
        <trans-unit id="bf0127e04708633ff438380e9063019f694d008f" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;SyncProvider&lt;/code&gt; object is specified and the &lt;code&gt;SyncFactory&lt;/code&gt; contains</source>
          <target state="translated">If a &lt;code&gt;SyncProvider&lt;/code&gt; object is specified and the &lt;code&gt;SyncFactory&lt;/code&gt; contains</target>
        </trans-unit>
        <trans-unit id="4f2c61caf99510b2cab1bf9c38fbc6348259df28" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;SyncProvider&lt;/code&gt; object is specified and the &lt;code&gt;SyncFactory&lt;/code&gt; contains a reference to the provider, the requested provider is supplied.</source>
          <target state="translated">If a &lt;code&gt;SyncProvider&lt;/code&gt; object is specified and the &lt;code&gt;SyncFactory&lt;/code&gt; contains a reference to the provider, the requested provider is supplied.</target>
        </trans-unit>
        <trans-unit id="6536cee7d50ac1adadff34bddda00e1d72420e1a" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;SyncProviderException&lt;/code&gt; object is thrown, an application may use this method to generate a &lt;code&gt;SyncResolver&lt;/code&gt; object with which to resolve the conflict or conflicts that caused the exception to be thrown.</source>
          <target state="translated">If a &lt;code&gt;SyncProviderException&lt;/code&gt; object is thrown, an application may use this method to generate a &lt;code&gt;SyncResolver&lt;/code&gt; object with which to resolve the conflict or conflicts that caused the exception to be thrown.</target>
        </trans-unit>
        <trans-unit id="a2c0481cf37e4b6df1c957fb1176bf4576ce6d06" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;TableStringConverter&lt;/code&gt; has been specified, use it to convert the values to &lt;code&gt;String&lt;/code&gt;s and then use the &lt;code&gt;Comparator&lt;/code&gt; returned by &lt;code&gt;Collator.getInstance()&lt;/code&gt;.</source>
          <target state="translated">If a &lt;code&gt;TableStringConverter&lt;/code&gt; has been specified, use it to convert the values to &lt;code&gt;String&lt;/code&gt; s and then use the &lt;code&gt;Comparator&lt;/code&gt; returned by &lt;code&gt;Collator.getInstance()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="88f021219bb5adbaaf305230bab58b361bbbf62e" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;WebRowSet&lt;/code&gt; object does not specify a provider in its constructor, the &lt;code&gt;SyncFactory&lt;/code&gt; will give it an instance of &lt;code&gt;RIOptimisticProvider&lt;/code&gt;. However, the constructor for &lt;code&gt;WebRowSet&lt;/code&gt; is implemented to set the provider to the &lt;code&gt;RIXMLProvider&lt;/code&gt;, which reads and writes a &lt;code&gt;RowSet&lt;/code&gt; object in XML format.</source>
          <target state="translated">If a &lt;code&gt;WebRowSet&lt;/code&gt; object does not specify a provider in its constructor, the &lt;code&gt;SyncFactory&lt;/code&gt; will give it an instance of &lt;code&gt;RIOptimisticProvider&lt;/code&gt; . However, the constructor for &lt;code&gt;WebRowSet&lt;/code&gt; is implemented to set the provider to the &lt;code&gt;RIXMLProvider&lt;/code&gt; , which reads and writes a &lt;code&gt;RowSet&lt;/code&gt; object in XML format.</target>
        </trans-unit>
        <trans-unit id="c6d143f1c9666cc7913e46a053fe559e1a96fe26" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;null Cursor&lt;/code&gt; is specified no exception will be thrown and default drag cursors will be used instead.</source>
          <target state="translated">If a &lt;code&gt;null Cursor&lt;/code&gt; is specified no exception will be thrown and default drag cursors will be used instead.</target>
        </trans-unit>
        <trans-unit id="8f4b45cbcd2002bbfaa5e00b1ed409af80135472" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;null Transferable&lt;/code&gt; is specified &lt;code&gt;NullPointerException&lt;/code&gt; will be thrown.</source>
          <target state="translated">If a &lt;code&gt;null Transferable&lt;/code&gt; is specified &lt;code&gt;NullPointerException&lt;/code&gt; will be thrown.</target>
        </trans-unit>
        <trans-unit id="4e14b0a6b6bb76cc2c0b6e35711b0ecf985814b3" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;null&lt;/code&gt; value is specified for the driver to be removed, then no action is taken.</source>
          <target state="translated">If a &lt;code&gt;null&lt;/code&gt; value is specified for the driver to be removed, then no action is taken.</target>
        </trans-unit>
        <trans-unit id="e52e706791f96fcec7c06d42e023ea2edd9c9435" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;point&lt;/code&gt; is inside the &lt;code&gt;shape&lt;/code&gt; according to the &lt;a href=&quot;#contains(double,double)&quot;&gt;&lt;code&gt;contains(point)&lt;/code&gt;&lt;/a&gt; method, then it must be inside the returned &lt;code&gt;Rectangle&lt;/code&gt; bounds object according to the &lt;a href=&quot;#contains(double,double)&quot;&gt;&lt;code&gt;contains(point)&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;bounds&lt;/code&gt;. Specifically:</source>
          <target state="translated">If a &lt;code&gt;point&lt;/code&gt; is inside the &lt;code&gt;shape&lt;/code&gt; according to the &lt;a href=&quot;#contains(double,double)&quot;&gt; &lt;code&gt;contains(point)&lt;/code&gt; &lt;/a&gt; method, then it must be inside the returned &lt;code&gt;Rectangle&lt;/code&gt; bounds object according to the &lt;a href=&quot;#contains(double,double)&quot;&gt; &lt;code&gt;contains(point)&lt;/code&gt; &lt;/a&gt; method of the &lt;code&gt;bounds&lt;/code&gt; . Specifically:</target>
        </trans-unit>
        <trans-unit id="fee0a461ccedb0cec1c346f64b81ad734d6b4474" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;point&lt;/code&gt; is inside the &lt;code&gt;shape&lt;/code&gt; according to the &lt;a href=&quot;#contains(java.awt.geom.Point2D)&quot;&gt;&lt;code&gt;contains(point)&lt;/code&gt;&lt;/a&gt; method, then it must be inside the returned &lt;code&gt;Rectangle2D&lt;/code&gt; bounds object according to the &lt;a href=&quot;#contains(java.awt.geom.Point2D)&quot;&gt;&lt;code&gt;contains(point)&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;bounds&lt;/code&gt;. Specifically:</source>
          <target state="translated">If a &lt;code&gt;point&lt;/code&gt; is inside the &lt;code&gt;shape&lt;/code&gt; according to the &lt;a href=&quot;#contains(java.awt.geom.Point2D)&quot;&gt; &lt;code&gt;contains(point)&lt;/code&gt; &lt;/a&gt; method, then it must be inside the returned &lt;code&gt;Rectangle2D&lt;/code&gt; bounds object according to the &lt;a href=&quot;#contains(java.awt.geom.Point2D)&quot;&gt; &lt;code&gt;contains(point)&lt;/code&gt; &lt;/a&gt; method of the &lt;code&gt;bounds&lt;/code&gt; . Specifically:</target>
        </trans-unit>
        <trans-unit id="1ca6fa88cbddfe8774a575dd729aff8c4c1ff45e" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;point&lt;/code&gt; is inside the &lt;code&gt;shape&lt;/code&gt; according to the &lt;a href=&quot;../shape#contains(double,double)&quot;&gt;&lt;code&gt;contains(point)&lt;/code&gt;&lt;/a&gt; method, then it must be inside the returned &lt;code&gt;Rectangle&lt;/code&gt; bounds object according to the &lt;a href=&quot;../shape#contains(double,double)&quot;&gt;&lt;code&gt;contains(point)&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;bounds&lt;/code&gt;. Specifically:</source>
          <target state="translated">If a &lt;code&gt;point&lt;/code&gt; is inside the &lt;code&gt;shape&lt;/code&gt; according to the &lt;a href=&quot;../shape#contains(double,double)&quot;&gt; &lt;code&gt;contains(point)&lt;/code&gt; &lt;/a&gt; method, then it must be inside the returned &lt;code&gt;Rectangle&lt;/code&gt; bounds object according to the &lt;a href=&quot;../shape#contains(double,double)&quot;&gt; &lt;code&gt;contains(point)&lt;/code&gt; &lt;/a&gt; method of the &lt;code&gt;bounds&lt;/code&gt; . Specifically:</target>
        </trans-unit>
        <trans-unit id="439453cd55d4370948e1a390997169512de7d762" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;point&lt;/code&gt; is inside the &lt;code&gt;shape&lt;/code&gt; according to the &lt;a href=&quot;../shape#contains(java.awt.geom.Point2D)&quot;&gt;&lt;code&gt;contains(point)&lt;/code&gt;&lt;/a&gt; method, then it must be inside the returned &lt;code&gt;Rectangle2D&lt;/code&gt; bounds object according to the &lt;a href=&quot;../shape#contains(java.awt.geom.Point2D)&quot;&gt;&lt;code&gt;contains(point)&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;bounds&lt;/code&gt;. Specifically:</source>
          <target state="translated">If a &lt;code&gt;point&lt;/code&gt; is inside the &lt;code&gt;shape&lt;/code&gt; according to the &lt;a href=&quot;../shape#contains(java.awt.geom.Point2D)&quot;&gt; &lt;code&gt;contains(point)&lt;/code&gt; &lt;/a&gt; method, then it must be inside the returned &lt;code&gt;Rectangle2D&lt;/code&gt; bounds object according to the &lt;a href=&quot;../shape#contains(java.awt.geom.Point2D)&quot;&gt; &lt;code&gt;contains(point)&lt;/code&gt; &lt;/a&gt; method of the &lt;code&gt;bounds&lt;/code&gt; . Specifically:</target>
        </trans-unit>
        <trans-unit id="c287b4bb12cc003fe3dff0af6571caedd594b2e6" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;point&lt;/code&gt; is inside the &lt;code&gt;shape&lt;/code&gt; according to the &lt;a href=&quot;shape#contains(java.awt.geom.Point2D)&quot;&gt;&lt;code&gt;contains(point)&lt;/code&gt;&lt;/a&gt; method, then it must be inside the returned &lt;code&gt;Rectangle2D&lt;/code&gt; bounds object according to the &lt;a href=&quot;shape#contains(java.awt.geom.Point2D)&quot;&gt;&lt;code&gt;contains(point)&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;bounds&lt;/code&gt;. Specifically:</source>
          <target state="translated">If a &lt;code&gt;point&lt;/code&gt; is inside the &lt;code&gt;shape&lt;/code&gt; according to the &lt;a href=&quot;shape#contains(java.awt.geom.Point2D)&quot;&gt; &lt;code&gt;contains(point)&lt;/code&gt; &lt;/a&gt; method, then it must be inside the returned &lt;code&gt;Rectangle2D&lt;/code&gt; bounds object according to the &lt;a href=&quot;shape#contains(java.awt.geom.Point2D)&quot;&gt; &lt;code&gt;contains(point)&lt;/code&gt; &lt;/a&gt; method of the &lt;code&gt;bounds&lt;/code&gt; . Specifically:</target>
        </trans-unit>
        <trans-unit id="23ec38983597030f5c01de386bdcfad6f3c016aa" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;point&lt;/code&gt; is not inside the &lt;code&gt;shape&lt;/code&gt;, then it might still be contained in the &lt;code&gt;bounds&lt;/code&gt; object:</source>
          <target state="translated">If a &lt;code&gt;point&lt;/code&gt; is not inside the &lt;code&gt;shape&lt;/code&gt; , then it might still be contained in the &lt;code&gt;bounds&lt;/code&gt; object:</target>
        </trans-unit>
        <trans-unit id="cb3f45e83272884b8fce5d6e7cf093613a1f0235" translate="yes" xml:space="preserve">
          <source>If a Class has been set for the values (&lt;code&gt;setValueClass&lt;/code&gt;), supers implementation is invoked to convert the value returned from &lt;code&gt;parseObject&lt;/code&gt; to the appropriate class.</source>
          <target state="translated">If a Class has been set for the values ( &lt;code&gt;setValueClass&lt;/code&gt; ), supers implementation is invoked to convert the value returned from &lt;code&gt;parseObject&lt;/code&gt; to the appropriate class.</target>
        </trans-unit>
        <trans-unit id="c22024a55d98f2d5bfb4a62cbb3885fd92657704" translate="yes" xml:space="preserve">
          <source>If a DRBG is not instantiated with a &lt;a href=&quot;drbgparameters.instantiation&quot;&gt;&lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt;&lt;/a&gt; object explicitly, this implementation instantiates it with a default requested strength of 128 bits, no prediction resistance request, and no personalization string. These default instantiation parameters can also be customized with the &lt;code&gt;securerandom.drbg.config&lt;/code&gt; security property.</source>
          <target state="translated">If a DRBG is not instantiated with a &lt;a href=&quot;drbgparameters.instantiation&quot;&gt; &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; &lt;/a&gt; object explicitly, this implementation instantiates it with a default requested strength of 128 bits, no prediction resistance request, and no personalization string. These default instantiation parameters can also be customized with the &lt;code&gt;securerandom.drbg.config&lt;/code&gt; security property.</target>
        </trans-unit>
        <trans-unit id="95e527be19ab2827e077013513499ad6b9cbcff0" translate="yes" xml:space="preserve">
          <source>If a GUI control is both an active &lt;code&gt;DropTarget&lt;/code&gt; and is also scrollable, it can receive notifications of autoscrolling gestures by the user from the DnD system by implementing this interface.</source>
          <target state="translated">If a GUI control is both an active &lt;code&gt;DropTarget&lt;/code&gt; and is also scrollable, it can receive notifications of autoscrolling gestures by the user from the DnD system by implementing this interface.</target>
        </trans-unit>
        <trans-unit id="99e2b5ed00fcac649fe3f3623264074d666a2942" translate="yes" xml:space="preserve">
          <source>If a JobPriority attribute is specified for a Print Job, it specifies a priority for scheduling the job. A higher value specifies a higher priority. The value 1 indicates the lowest possible priority. The value 100 indicates the highest possible priority. Among those jobs that are ready to print, a printer must print all jobs with a priority value of</source>
          <target state="translated">印刷ジョブにJobPriority属性が指定されている場合、ジョブをスケジューリングするための優先度を指定します。値が大きいほど優先度が高くなります。値1は可能な限り低い優先度を示します。値100は、可能な限り最高の優先度を示します。印刷可能なジョブのうち、プリンタは、優先度の値が</target>
        </trans-unit>
        <trans-unit id="efa62e398135fa151e6296eb9565e2ee0a846e6d" translate="yes" xml:space="preserve">
          <source>If a PageRanges attribute is not specified for a print job, all pages of the document will be printed. In other words, the default value for the PageRanges attribute is always &lt;code&gt;{{1, Integer.MAX_VALUE}}&lt;/code&gt;.</source>
          <target state="translated">印刷ジョブにPageRanges属性が指定されていない場合、ドキュメントのすべてのページが印刷されます。つまり、PageRanges属性のデフォルト値は常に &lt;code&gt;{{1, Integer.MAX_VALUE}}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="56fcf828deb12fa7c8d023153792b45f6be1b50b" translate="yes" xml:space="preserve">
          <source>If a RenderingHints object is specified in the constructor, the color rendering hint and the dithering hint may be used to control color conversion.</source>
          <target state="translated">コンストラクタで RenderingHints オブジェクトを指定すると、カラーレンダリングヒントとディザリングヒントを使用して色変換を制御することができます。</target>
        </trans-unit>
        <trans-unit id="4df78250cfd2d96c297fc417911e5b1721cfe666" translate="yes" xml:space="preserve">
          <source>If a RenderingHints object is specified in the constructor, the color rendering hint and the dithering hint may be used when color conversion is required.</source>
          <target state="translated">コンストラクタで RenderingHints オブジェクトを指定すると、色変換が必要な場合は、カラーレンダリングヒントとディザリングヒントを使用することができます。</target>
        </trans-unit>
        <trans-unit id="68b1d4751c3a4fe9ee24ce1abe018576aed949a4" translate="yes" xml:space="preserve">
          <source>If a SAX application needs information about notations and unparsed entities, then the application implements this interface and registers an instance with the SAX parser using the parser's setDTDHandler method. The parser uses the instance to report notation and unparsed entity declarations to the application.</source>
          <target state="translated">SAX アプリケーションが記法とアンパースされたエンティティに関する情報を必要とする場合、アプリケーションはこのインターフェイスを実装し、パーサーの setDTDHandler メソッドを使用して SAX パーサーにインスタンスを登録します。パーサは、このインスタンスを使用して、記法と非解析エンティティの宣言をアプリケーションに報告します。</target>
        </trans-unit>
        <trans-unit id="3ba5b890d7e1cdc89fd5a6bca00ab40e11acebb0" translate="yes" xml:space="preserve">
          <source>If a SAX application needs to implement customized error handling, it must implement this interface and then register an instance with the XML reader using the &lt;a href=&quot;xmlreader#setErrorHandler(org.xml.sax.ErrorHandler)&quot;&gt;&lt;code&gt;setErrorHandler&lt;/code&gt;&lt;/a&gt; method. The parser will then report all errors and warnings through this interface.</source>
          <target state="translated">If a SAX application needs to implement customized error handling, it must implement this interface and then register an instance with the XML reader using the &lt;a href=&quot;xmlreader#setErrorHandler(org.xml.sax.ErrorHandler)&quot;&gt; &lt;code&gt;setErrorHandler&lt;/code&gt; &lt;/a&gt; method. The parser will then report all errors and warnings through this interface.</target>
        </trans-unit>
        <trans-unit id="699d691146da85f7d6329e02b5ea8958eea65fcb" translate="yes" xml:space="preserve">
          <source>If a SAX application needs to implement customized handling for external entities, it must implement this interface and register an instance with the SAX driver using the &lt;a href=&quot;xmlreader#setEntityResolver(org.xml.sax.EntityResolver)&quot;&gt;&lt;code&gt;setEntityResolver&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">If a SAX application needs to implement customized handling for external entities, it must implement this interface and register an instance with the SAX driver using the &lt;a href=&quot;xmlreader#setEntityResolver(org.xml.sax.EntityResolver)&quot;&gt; &lt;code&gt;setEntityResolver&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="0cc9dd15259390fb3e7ac0a12e455bdc750c4cf5" translate="yes" xml:space="preserve">
          <source>If a SAX application requires the customized handling which this interface defines for external entities, it must ensure that it uses an XMLReader with the &lt;em&gt;http://xml.org/sax/features/use-entity-resolver2&lt;/em&gt; feature flag set to &lt;em&gt;true&lt;/em&gt; (which is its default value when the feature is recognized). If that flag is unrecognized, or its value is false, or the resolver does not implement this interface, then only the &lt;a href=&quot;../entityresolver&quot;&gt;&lt;code&gt;EntityResolver&lt;/code&gt;&lt;/a&gt; method will be used.</source>
          <target state="translated">If a SAX application requires the customized handling which this interface defines for external entities, it must ensure that it uses an XMLReader with the &lt;em&gt;http://xml.org/sax/features/use-entity-resolver2&lt;/em&gt; feature flag set to &lt;em&gt;true&lt;/em&gt; (which is its default value when the feature is recognized). If that flag is unrecognized, or its value is false, or the resolver does not implement this interface, then only the &lt;a href=&quot;../entityresolver&quot;&gt; &lt;code&gt;EntityResolver&lt;/code&gt; &lt;/a&gt; method will be used.</target>
        </trans-unit>
        <trans-unit id="36e370cda70c2e439141820154cd61632fd96375" translate="yes" xml:space="preserve">
          <source>If a SAX parser provides location information to the SAX application, it does so by implementing this interface and then passing an instance to the application using the content handler's &lt;a href=&quot;contenthandler#setDocumentLocator(org.xml.sax.Locator)&quot;&gt;&lt;code&gt;setDocumentLocator&lt;/code&gt;&lt;/a&gt; method. The application can use the object to obtain the location of any other SAX event in the XML source document.</source>
          <target state="translated">If a SAX parser provides location information to the SAX application, it does so by implementing this interface and then passing an instance to the application using the content handler's &lt;a href=&quot;contenthandler#setDocumentLocator(org.xml.sax.Locator)&quot;&gt; &lt;code&gt;setDocumentLocator&lt;/code&gt; &lt;/a&gt; method. The application can use the object to obtain the location of any other SAX event in the XML source document.</target>
        </trans-unit>
        <trans-unit id="33790afd26c1ed1a1a9f56f095ee280b02987ed3" translate="yes" xml:space="preserve">
          <source>If a SecurityManager is installed, the AWTPermission &lt;code&gt;accessSystemTray&lt;/code&gt; must be granted in order to create a &lt;code&gt;TrayIcon&lt;/code&gt;. Otherwise the constructor will throw a SecurityException.</source>
          <target state="translated">If a SecurityManager is installed, the AWTPermission &lt;code&gt;accessSystemTray&lt;/code&gt; must be granted in order to create a &lt;code&gt;TrayIcon&lt;/code&gt; . Otherwise the constructor will throw a SecurityException.</target>
        </trans-unit>
        <trans-unit id="23738716044ec44efb04a5c326db73bc15c62530" translate="yes" xml:space="preserve">
          <source>If a SecurityManager is installed, the AWTPermission &lt;code&gt;accessSystemTray&lt;/code&gt; must be granted in order to get the &lt;code&gt;SystemTray&lt;/code&gt; instance. Otherwise this method will throw a SecurityException.</source>
          <target state="translated">If a SecurityManager is installed, the AWTPermission &lt;code&gt;accessSystemTray&lt;/code&gt; must be granted in order to get the &lt;code&gt;SystemTray&lt;/code&gt; instance. Otherwise this method will throw a SecurityException.</target>
        </trans-unit>
        <trans-unit id="d6dfd5ce3a3f3a54e3b033911ffb2f2c1d054b1a" translate="yes" xml:space="preserve">
          <source>If a SecurityManager is installed, the calling thread must be granted the &quot;replaceKeyboardFocusManager&quot; AWTPermission. If this permission is not granted, this method will throw a SecurityException, and the current focus cycle root will not be changed.</source>
          <target state="translated">SecurityManagerがインストールされている場合、呼び出したスレッドに &quot;replaceKeyboardFocusManager &quot;AWTPermissionが付与されている必要があります。この権限が付与されていない場合、このメソッドはSecurityExceptionをスローし、現在のフォーカスサイクルのルートは変更されません。</target>
        </trans-unit>
        <trans-unit id="12612b7cb4320c32adc61321ec0710dfbe600dab" translate="yes" xml:space="preserve">
          <source>If a SecurityManager is installed, the calling thread must be granted the &quot;replaceKeyboardFocusManager&quot; AWTPermission. If this permission is not granted, this method will throw a SecurityException, and the current focus owner will not be cleared.</source>
          <target state="translated">SecurityManagerがインストールされている場合、呼び出したスレッドに &quot;replaceKeyboardFocusManager &quot;AWTPermissionを付与する必要があります。この権限が付与されていない場合、このメソッドは SecurityException をスローし、現在のフォーカスの所有者はクリアされません。</target>
        </trans-unit>
        <trans-unit id="1b4ef801a419d4c91c8ce0f0fe4a7ae44b83b337" translate="yes" xml:space="preserve">
          <source>If a SecurityManager is installed, the calling thread must be granted the AWTPermission &quot;replaceKeyboardFocusManager&quot; in order to replace the the current KeyboardFocusManager. If this permission is not granted, this method will throw a SecurityException, and the current KeyboardFocusManager will be unchanged.</source>
          <target state="translated">SecurityManagerがインストールされている場合、現在のKeyboardFocusManagerを置き換えるためには、呼び出したスレッドにAWTPermission &quot;replaceKeyboardFocusManager &quot;を付与する必要があります。この権限が付与されていない場合、このメソッドは SecurityException をスローし、現在の KeyboardFocusManager は変更されません。</target>
        </trans-unit>
        <trans-unit id="3c085f80770d9292364ba49610a3d688b254c596" translate="yes" xml:space="preserve">
          <source>If a SecurityManager is installed, the calling thread must be granted the AWTPermission &quot;setWindowAlwaysOnTop&quot; in order to set the value of this property. If this permission is not granted, this method will throw a SecurityException, and the current value of the property will be left unchanged.</source>
          <target state="translated">SecurityManagerがインストールされている場合、このプロパティの値を設定するためには、呼び出したスレッドにAWTPermission &quot;setWindowAlwaysOnTop &quot;を付与する必要があります。この権限が付与されていない場合、このメソッドはSecurityExceptionをスローし、プロパティの現在の値は変更されません。</target>
        </trans-unit>
        <trans-unit id="419f51299062e187ed812366bb64fa93ee056e2e" translate="yes" xml:space="preserve">
          <source>If a Set of traversal keys has not been explicitly defined for this Component, then this Component's parent's Set is returned. If no Set has been explicitly defined for any of this Component's ancestors, then the current KeyboardFocusManager's default Set is returned.</source>
          <target state="translated">このコンポーネントにトラバーサル キーのセットが明示的に定義されていない場合は、このコンポーネントの親のセットが返されます。このコンポーネントの祖先のセットが明示的に定義されていない場合は、現在の KeyboardFocusManager の既定のセットが返されます。</target>
        </trans-unit>
        <trans-unit id="877904e5a9d9ff637ebc73df19af808b92b14754" translate="yes" xml:space="preserve">
          <source>If a Set of traversal keys has not been explicitly defined for this Container, then this Container's parent's Set is returned. If no Set has been explicitly defined for any of this Container's ancestors, then the current KeyboardFocusManager's default Set is returned.</source>
          <target state="translated">このコンテナにトラバーサルキーのセットが明示的に定義されていない場合は、このコンテナの親のセットが返されます。このコンテナの祖先のセットが明示的に定義されていない場合は、現在の KeyboardFocusManager のデフォルトのセットが返されます。</target>
        </trans-unit>
        <trans-unit id="54875f0ae002ae009f6261e6ee89713bac0fc513" translate="yes" xml:space="preserve">
          <source>If a Spliterator reports an inconsistent set of characteristics (either those returned from a single invocation or across multiple invocations), no guarantees can be made about any computation using this Spliterator.</source>
          <target state="translated">Spliterator が不整合な特性 (単一の呼び出しから返された特性、または複数の呼び出しから返された特性のいずれか)を報告した場合、この Spliterator を使った計算については何の保証もできません。</target>
        </trans-unit>
        <trans-unit id="a91c9f9234bda5620ef4d3e6ac923de910e62499" translate="yes" xml:space="preserve">
          <source>If a UDP socket is used, TCP/IP related socket options will not apply.</source>
          <target state="translated">UDP ソケットを使用している場合、TCP/IP 関連のソケットオプションは適用されません。</target>
        </trans-unit>
        <trans-unit id="22b4fec2b9413e137341f86ae67c8350043b7d53" translate="yes" xml:space="preserve">
          <source>If a UDT does not have a direct super type, it is not listed here. A row of the &lt;code&gt;ResultSet&lt;/code&gt; object returned by this method describes the designated UDT and a direct supertype. A row has the following columns:</source>
          <target state="translated">If a UDT does not have a direct super type, it is not listed here. A row of the &lt;code&gt;ResultSet&lt;/code&gt; object returned by this method describes the designated UDT and a direct supertype. A row has the following columns:</target>
        </trans-unit>
        <trans-unit id="27875d35d17c64c41e9933d166925700a1b171f4" translate="yes" xml:space="preserve">
          <source>If a binding is added to or removed from this context, its effect on an enumeration previously returned is undefined.</source>
          <target state="translated">バインディングがこのコンテキストに追加または削除された場合、以前に返された列挙への影響は未定義です。</target>
        </trans-unit>
        <trans-unit id="5d7601c05999ae661b9aa6d9768d23b6fac1b78b" translate="yes" xml:space="preserve">
          <source>If a border has been set on this component, returns the border's insets, else calls super.getInsets.</source>
          <target state="translated">このコンポーネントにボーダーが設定されている場合はボーダーのインセットを返し、そうでない場合は super.getInsets を呼び出します。</target>
        </trans-unit>
        <trans-unit id="60267cd6f737fd6024fc6b14a87a199eac11a918" translate="yes" xml:space="preserve">
          <source>If a border has been set on this component, returns the border's insets; otherwise calls &lt;code&gt;super.getInsets&lt;/code&gt;.</source>
          <target state="translated">If a border has been set on this component, returns the border's insets; otherwise calls &lt;code&gt;super.getInsets&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c4d13fb061d48c8e4e28fb887ecf8598eb732db" translate="yes" xml:space="preserve">
          <source>If a borrow occurs in the days field (in other words, if the computation needs to borrow 1 or -1 month to compensate days), then the computation fails by throwing an &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If a borrow occurs in the days field (in other words, if the computation needs to borrow 1 or -1 month to compensate days), then the computation fails by throwing an &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2b8644225e60775049f73144977a4d20b30637be" translate="yes" xml:space="preserve">
          <source>If a call to &lt;code&gt;engineSetSeed&lt;/code&gt; had not occurred previously, the first call to this method forces this SecureRandom implementation to seed itself. This self-seeding will not occur if &lt;code&gt;engineSetSeed&lt;/code&gt; was previously called.</source>
          <target state="translated">&lt;code&gt;engineSetSeed&lt;/code&gt; への呼び出しが以前に行われていなかった場合、このメソッドへの最初の呼び出しにより、このSecureRandom実装はそれ自体をシードします。 &lt;code&gt;engineSetSeed&lt;/code&gt; が以前に呼び出された場合、この自己シードは発生しません。</target>
        </trans-unit>
        <trans-unit id="911ec002bf686d39657f3069553cf1c3b5b5def4" translate="yes" xml:space="preserve">
          <source>If a call to &lt;code&gt;setSeed&lt;/code&gt; had not occurred previously, the first call to this method forces this SecureRandom object to seed itself. This self-seeding will not occur if &lt;code&gt;setSeed&lt;/code&gt; was previously called.</source>
          <target state="translated">以前に &lt;code&gt;setSeed&lt;/code&gt; への呼び出しが発生していなかった場合、このメソッドへの最初の呼び出しにより、このSecureRandomオブジェクトはそれ自体をシードします。 &lt;code&gt;setSeed&lt;/code&gt; が以前に呼び出された場合、この自己シードは発生しません。</target>
        </trans-unit>
        <trans-unit id="17ddc7ad6d330841c65c3723b7bd2743059a6602" translate="yes" xml:space="preserve">
          <source>If a call to a method such as &lt;code&gt;insertBefore&lt;/code&gt; or &lt;code&gt;removeChild&lt;/code&gt; would make the &lt;code&gt;Node&lt;/code&gt; invalid with respect to &quot;partial validity&quot;, this exception would be raised and the operation would not be done.</source>
          <target state="translated">If a call to a method such as &lt;code&gt;insertBefore&lt;/code&gt; or &lt;code&gt;removeChild&lt;/code&gt; would make the &lt;code&gt;Node&lt;/code&gt; invalid with respect to &quot;partial validity&quot;, this exception would be raised and the operation would not be done.</target>
        </trans-unit>
        <trans-unit id="334736f49b8d7e0587d8194db7199baa9d06b47d" translate="yes" xml:space="preserve">
          <source>If a call to a method such as &lt;code&gt;insertBefore&lt;/code&gt; or &lt;code&gt;removeChild&lt;/code&gt; would make the &lt;code&gt;Node&lt;/code&gt; invalid with respect to &quot;partial validity&quot;, this exception would be raised and the operation would not be done. This code is used in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Val-20040127/&quot;&gt;DOM Level 3 Validation&lt;/a&gt;] . Refer to this specification for further information.</source>
          <target state="translated">If a call to a method such as &lt;code&gt;insertBefore&lt;/code&gt; or &lt;code&gt;removeChild&lt;/code&gt; would make the &lt;code&gt;Node&lt;/code&gt; invalid with respect to &quot;partial validity&quot;, this exception would be raised and the operation would not be done. This code is used in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Val-20040127/&quot;&gt;DOM Level 3 Validation&lt;/a&gt;] . Refer to this specification for further information.</target>
        </trans-unit>
        <trans-unit id="12d3ca455a566616659c43d38fa4c19d72a68ea1" translate="yes" xml:space="preserve">
          <source>If a card is present in this terminal when this method is called, it returns immediately.</source>
          <target state="translated">このメソッドが呼び出されたときに、この端末にカードが存在する場合、それはすぐに返されます。</target>
        </trans-unit>
        <trans-unit id="05d89b94bbc85cf7d77886e27828d6c62151d272" translate="yes" xml:space="preserve">
          <source>If a character &lt;code&gt;c&lt;/code&gt; is &lt;code&gt;\u0000&lt;/code&gt; or is in the range &lt;code&gt;\u0080&lt;/code&gt; through &lt;code&gt;\u07ff&lt;/code&gt;, then it is represented by two bytes, to be written in the order shown:</source>
          <target state="translated">文字 &lt;code&gt;c&lt;/code&gt; が &lt;code&gt;\u0000&lt;/code&gt; か、 &lt;code&gt;\u0080&lt;/code&gt; から &lt;code&gt;\u07ff&lt;/code&gt; 範囲内にある場合、次の順序で書き込まれる2バイトで表されます。</target>
        </trans-unit>
        <trans-unit id="cced7ce9329a5beb13d9d0de6d94d760dcc0c4e8" translate="yes" xml:space="preserve">
          <source>If a character &lt;code&gt;c&lt;/code&gt; is in the range &lt;code&gt;\u0001&lt;/code&gt; through &lt;code&gt;\u007f&lt;/code&gt;, it is represented by one byte:</source>
          <target state="translated">文字 &lt;code&gt;c&lt;/code&gt; が &lt;code&gt;\u0001&lt;/code&gt; から &lt;code&gt;\u007f&lt;/code&gt; 範囲にある場合、1バイトで表されます。</target>
        </trans-unit>
        <trans-unit id="07952f6eaca135b300da4ff28ea9b192ef542fea" translate="yes" xml:space="preserve">
          <source>If a character &lt;code&gt;c&lt;/code&gt; is in the range &lt;code&gt;\u0800&lt;/code&gt; through &lt;code&gt;uffff&lt;/code&gt;, then it is represented by three bytes, to be written in the order shown:</source>
          <target state="translated">文字 &lt;code&gt;c&lt;/code&gt; が &lt;code&gt;\u0800&lt;/code&gt; から &lt;code&gt;uffff&lt;/code&gt; の範囲内にある場合、文字cは3バイトで表され、次の順序で書き込まれます。</target>
        </trans-unit>
        <trans-unit id="0d5494a676f207ae321fc2c494aa6a96120e143c" translate="yes" xml:space="preserve">
          <source>If a character with value &lt;code&gt;ch&lt;/code&gt; occurs in the character sequence represented by this &lt;code&gt;String&lt;/code&gt; object at an index no smaller than &lt;code&gt;fromIndex&lt;/code&gt;, then the index of the first such occurrence is returned. For values of &lt;code&gt;ch&lt;/code&gt; in the range from 0 to 0xFFFF (inclusive), this is the smallest value</source>
          <target state="translated">値が &lt;code&gt;ch&lt;/code&gt; の文字が、この &lt;code&gt;String&lt;/code&gt; オブジェクトによって表される文字シーケンスの &lt;code&gt;fromIndex&lt;/code&gt; 以上のインデックスに出現する場合、最初に出現したインデックスが返されます。0から0xFFFF（両端を含む）の範囲の &lt;code&gt;ch&lt;/code&gt; の値の場合、これは最小値です</target>
        </trans-unit>
        <trans-unit id="88d64da6fa30bc481b1c1898ad57b4a92324448a" translate="yes" xml:space="preserve">
          <source>If a charset listed in the &lt;a href=&quot;http://www.iana.org/assignments/character-sets&quot; id=&quot;iana&quot;&gt;&lt;i&gt;IANA Charset Registry&lt;/i&gt;&lt;/a&gt; is supported by an implementation of the Java platform then its canonical name must be the name listed in the registry. Many charsets are given more than one name in the registry, in which case the registry identifies one of the names as</source>
          <target state="translated">&lt;a href=&quot;http://www.iana.org/assignments/character-sets&quot; id=&quot;iana&quot;&gt;&lt;i&gt;IANA Charset Registryに&lt;/i&gt;&lt;/a&gt;リストされている文字セットがJavaプラットフォームの実装でサポートされている場合、その正規名はレジストリにリストされている名前でなければなりません。多くの文字セットには、レジストリで複数の名前が付けられています。その場合、レジストリは名前の1つを次のように識別します。</target>
        </trans-unit>
        <trans-unit id="835ccd3a2f50b48c8dbdc664f50805c5e332968a" translate="yes" xml:space="preserve">
          <source>If a charset listed in the &lt;a href=&quot;http://www.iana.org/assignments/character-sets&quot;&gt;&lt;i&gt;IANA Charset Registry&lt;/i&gt;&lt;/a&gt; is supported by an implementation of the Java platform then its canonical name must be the name listed in the registry. Many charsets are given more than one name in the registry, in which case the registry identifies one of the names as</source>
          <target state="translated">If a charset listed in the &lt;a href=&quot;http://www.iana.org/assignments/character-sets&quot;&gt;&lt;i&gt;IANA Charset Registry&lt;/i&gt;&lt;/a&gt; is supported by an implementation of the Java platform then its canonical name must be the name listed in the registry. Many charsets are given more than one name in the registry, in which case the registry identifies one of the names as</target>
        </trans-unit>
        <trans-unit id="7a4670c109b4e15f0dcd8e95409c55e92f7d1ad1" translate="yes" xml:space="preserve">
          <source>If a class is defined in an &lt;em&gt;unnamed module&lt;/em&gt; then the second element is omitted as shown in &quot;&lt;code&gt;com.foo.loader//com.foo.bar.App.run(App.java:12)&lt;/code&gt;&quot;.</source>
          <target state="translated">If a class is defined in an &lt;em&gt;unnamed module&lt;/em&gt; then the second element is omitted as shown in &quot; &lt;code&gt;com.foo.loader//com.foo.bar.App.run(App.java:12)&lt;/code&gt; &quot;.</target>
        </trans-unit>
        <trans-unit id="6fc4948186617f7bd346a9a17fd3789662107304" translate="yes" xml:space="preserve">
          <source>If a class loader wishes to define a package with specific properties, such as version information, then the class loader should call this &lt;code&gt;definePackage&lt;/code&gt; method before calling &lt;code&gt;defineClass&lt;/code&gt;. Otherwise, the &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/a&gt; method will define a package in this class loader corresponding to the package of the newly defined class; the properties of this defined package are specified by &lt;a href=&quot;package&quot;&gt;&lt;code&gt;Package&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If a class loader wishes to define a package with specific properties, such as version information, then the class loader should call this &lt;code&gt;definePackage&lt;/code&gt; method before calling &lt;code&gt;defineClass&lt;/code&gt; . Otherwise, the &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt; &lt;code&gt;defineClass&lt;/code&gt; &lt;/a&gt; method will define a package in this class loader corresponding to the package of the newly defined class; the properties of this defined package are specified by &lt;a href=&quot;package&quot;&gt; &lt;code&gt;Package&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="2e1f6c2a012c9ee1480d2aea7e18a07e1c842c87" translate="yes" xml:space="preserve">
          <source>If a class provides explicit BeanInfo about itself then we add that to the BeanInfo information we obtained from analyzing any derived classes, but we regard the explicit information as being definitive for the current class and its base classes, and do not proceed any further up the superclass chain.</source>
          <target state="translated">クラスがそれ自身に関する明示的なBean情報を提供する場合,派生クラスの解析から得たBean情報にそれを追加しますが,明示的な情報は現在のクラスとその基底クラスに対する決定的な情報であるとみなし,スーパークラスチェーンをそれ以上進めません.</target>
        </trans-unit>
        <trans-unit id="2cd6058bf392d70f519fdd4e9472bf934b1511bc" translate="yes" xml:space="preserve">
          <source>If a client wants to locate a printer supporting a resolution greater than some required minimum, then it may be necessary to exclude this attribute from a lookup request and to directly query the set of supported resolutions, and specify the one that most closely meets the client's requirements. In some cases this may be more simply achieved by specifying a &lt;code&gt;PrintQuality&lt;/code&gt; attribute which often controls resolution.</source>
          <target state="translated">If a client wants to locate a printer supporting a resolution greater than some required minimum, then it may be necessary to exclude this attribute from a lookup request and to directly query the set of supported resolutions, and specify the one that most closely meets the client's requirements. In some cases this may be more simply achieved by specifying a &lt;code&gt;PrintQuality&lt;/code&gt; attribute which often controls resolution.</target>
        </trans-unit>
        <trans-unit id="acece6c1313b9c506151182d4c10bc5adcf63087" translate="yes" xml:space="preserve">
          <source>If a client wants to locate a printer supporting a resolution greater than some required minimum, then it may be necessary to exclude this attribute from a lookup request and to directly query the set of supported resolutions, and specify the one that most closely meets the client's requirements. In some cases this may be more simply achieved by specifying a PrintQuality attribute which often controls resolution.</source>
          <target state="translated">クライアントが要求された最小解像度以上の解像度をサポートするプリンタを見つけたい場合、この属性をルックアップ要求から除外し、サポートされている解像度のセットを直接問い合わせ、クライアントの要求に最も近いものを指定することが必要になるかもしれません。いくつかのケースでは、これは、しばしば解像度を制御するPrintQuality属性を指定することによって、より簡単に達成されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="94ce72ead2f2b5aae2c69c76ea112e52bebf52e8" translate="yes" xml:space="preserve">
          <source>If a collection refuses to add a particular element for any reason other than that it already contains the element, it</source>
          <target state="translated">コレクションが、その要素がすでに含まれているという理由以外の理由で特定の要素の追加を拒否した場合、それは</target>
        </trans-unit>
        <trans-unit id="41ab0ee2bc38c356fcd8956baea5b131f76b3cf6" translate="yes" xml:space="preserve">
          <source>If a component hierarchy contains validate roots and the new optimized &lt;code&gt;invalidate()&lt;/code&gt; behavior is enabled, the &lt;code&gt;validate()&lt;/code&gt; method must be invoked on the validate root of a previously invalidated component to restore the validity of the hierarchy later. Otherwise, calling the &lt;code&gt;validate()&lt;/code&gt; method on the top-level container (such as a &lt;code&gt;Frame&lt;/code&gt; object) should be used to restore the validity of the component hierarchy.</source>
          <target state="translated">If a component hierarchy contains validate roots and the new optimized &lt;code&gt;invalidate()&lt;/code&gt; behavior is enabled, the &lt;code&gt;validate()&lt;/code&gt; method must be invoked on the validate root of a previously invalidated component to restore the validity of the hierarchy later. Otherwise, calling the &lt;code&gt;validate()&lt;/code&gt; method on the top-level container (such as a &lt;code&gt;Frame&lt;/code&gt; object) should be used to restore the validity of the component hierarchy.</target>
        </trans-unit>
        <trans-unit id="0d2698c7a918c9b4b3b198d13142ac40d60315ae" translate="yes" xml:space="preserve">
          <source>If a component spans rows it is aligned either to the baseline of the start row (if the baseline-resize behavior is &lt;code&gt;
 CONSTANT_ASCENT&lt;/code&gt;) or the end row (if the baseline-resize behavior is &lt;code&gt;CONSTANT_DESCENT&lt;/code&gt;). The row that the component is aligned to is called the &lt;em&gt;prevailing row&lt;/em&gt;.</source>
          <target state="translated">If a component spans rows it is aligned either to the baseline of the start row (if the baseline-resize behavior is &lt;code&gt; CONSTANT_ASCENT&lt;/code&gt; ) or the end row (if the baseline-resize behavior is &lt;code&gt;CONSTANT_DESCENT&lt;/code&gt; ). The row that the component is aligned to is called the &lt;em&gt;prevailing row&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="6d2eb7a73c51f56dc6865791e43b959fff2b8eaf" translate="yes" xml:space="preserve">
          <source>If a connection cannot be established to a proxy (PROXY or SOCKS) servers then the caller should call the proxy selector's &lt;a href=&quot;#connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)&quot;&gt;&lt;code&gt;connectFailed&lt;/code&gt;&lt;/a&gt; method to notify the proxy selector that the proxy server is unavailable.</source>
          <target state="translated">If a connection cannot be established to a proxy (PROXY or SOCKS) servers then the caller should call the proxy selector's &lt;a href=&quot;#connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)&quot;&gt; &lt;code&gt;connectFailed&lt;/code&gt; &lt;/a&gt; method to notify the proxy selector that the proxy server is unavailable.</target>
        </trans-unit>
        <trans-unit id="c4776000b1707ea1d8288ccc9e65458bb1c58a2d" translate="yes" xml:space="preserve">
          <source>If a connection cannot be established to a proxy (PROXY or SOCKS) servers then the caller should call the proxy selector's &lt;a href=&quot;proxyselector#connectFailed-java.net.URI-java.net.SocketAddress-java.io.IOException-&quot;&gt;&lt;code&gt;connectFailed&lt;/code&gt;&lt;/a&gt; method to notify the proxy selector that the proxy server is unavailable.</source>
          <target state="translated">プロキシ（PROXYまたはSOCKS）サーバーへの接続を確立できない場合、呼び出し元はプロキシセレクタの&lt;a href=&quot;proxyselector#connectFailed-java.net.URI-java.net.SocketAddress-java.io.IOException-&quot;&gt; &lt;code&gt;connectFailed&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、プロキシサーバーが使用できないことをプロキシセレクタに通知する必要があります。</target>
        </trans-unit>
        <trans-unit id="a4eae2f1f9567895366b2134e4a320c3d0b03090" translate="yes" xml:space="preserve">
          <source>If a constructor is annotated by the both &lt;code&gt;@java.beans.ConstructorProperties&lt;/code&gt; and &lt;code&gt;@javax.management.ConstructorParameters&lt;/code&gt; annotations the JMX introspection will give an absolute precedence to the latter one.</source>
          <target state="translated">If a constructor is annotated by the both &lt;code&gt;@java.beans.ConstructorProperties&lt;/code&gt; and &lt;code&gt;@javax.management.ConstructorParameters&lt;/code&gt; annotations the JMX introspection will give an absolute precedence to the latter one.</target>
        </trans-unit>
        <trans-unit id="66d389f1702f33b50016c87da612c3454fb27ac7" translate="yes" xml:space="preserve">
          <source>If a cookie corresponding to the given URI already exists, then it is replaced with the new one.</source>
          <target state="translated">与えられたURIに対応するクッキーがすでに存在する場合、それは新しいものに置き換えられます。</target>
        </trans-unit>
        <trans-unit id="a0e617630717a0b35f702c38de0ff62f4e555322" translate="yes" xml:space="preserve">
          <source>If a custom system class loader is configured (by means of the system property &lt;code&gt;java.system.class.loader&lt;/code&gt; as specified in the &lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;&lt;code&gt;getSystemClassLoader&lt;/code&gt;&lt;/a&gt; method) then it must define the &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; method as specified in &lt;a href=&quot;instrumentation#appendToSystemClassLoaderSearch(java.util.jar.JarFile)&quot;&gt;&lt;code&gt;appendToSystemClassLoaderSearch&lt;/code&gt;&lt;/a&gt;. In other words, a custom system class loader must support the mechanism to add an agent JAR file to the system class loader search.</source>
          <target state="translated">If a custom system class loader is configured (by means of the system property &lt;code&gt;java.system.class.loader&lt;/code&gt; as specified in the &lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt; &lt;code&gt;getSystemClassLoader&lt;/code&gt; &lt;/a&gt; method) then it must define the &lt;code&gt;appendToClassPathForInstrumentation&lt;/code&gt; method as specified in &lt;a href=&quot;instrumentation#appendToSystemClassLoaderSearch(java.util.jar.JarFile)&quot;&gt; &lt;code&gt;appendToSystemClassLoaderSearch&lt;/code&gt; &lt;/a&gt;. In other words, a custom system class loader must support the mechanism to add an agent JAR file to the system class loader search.</target>
        </trans-unit>
        <trans-unit id="df8f1040f8046d584674ec649bf9175bb489aff9" translate="yes" xml:space="preserve">
          <source>If a datagram is immediately available, or if this channel is in blocking mode and one eventually becomes available, then the datagram is copied into the given byte buffer and its source address is returned. If this channel is in non-blocking mode and a datagram is not immediately available then this method immediately returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">データグラムがすぐに利用できる場合、またはこのチャネルがブロッキングモードであり、いずれかが最終的に利用可能になる場合、データグラムは指定されたバイトバッファーにコピーされ、そのソースアドレスが返されます。このチャネルが非ブロッキングモードであり、データグラムがすぐに利用できない場合、このメソッドはすぐに &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0818faad6aab3d19f4e535d7f7f60ce1951d12ec" translate="yes" xml:space="preserve">
          <source>If a decimal separator is present, a locale-specific &lt;a href=&quot;../text/decimalformatsymbols#getDecimalSeparator()&quot;&gt;decimal separator&lt;/a&gt; is substituted.</source>
          <target state="translated">If a decimal separator is present, a locale-specific &lt;a href=&quot;../text/decimalformatsymbols#getDecimalSeparator()&quot;&gt;decimal separator&lt;/a&gt; is substituted.</target>
        </trans-unit>
        <trans-unit id="1a7a080897c03d2a2dec7ade95e887516b9ac13d" translate="yes" xml:space="preserve">
          <source>If a decimal separator is present, a locale-specific &lt;a href=&quot;../text/decimalformatsymbols#getDecimalSeparator--&quot;&gt;decimal separator&lt;/a&gt; is substituted.</source>
          <target state="translated">小数点記号が存在する場合は、ロケール固有の&lt;a href=&quot;../text/decimalformatsymbols#getDecimalSeparator--&quot;&gt;小数点記号&lt;/a&gt;に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="1c1f9b7f79d8ec91fb01ae3268899c778ab68a65" translate="yes" xml:space="preserve">
          <source>If a default context was set using the &lt;a href=&quot;#setDefault(javax.net.ssl.SSLContext)&quot;&gt;&lt;code&gt;SSLContext.setDefault()&lt;/code&gt;&lt;/a&gt; method, it is returned. Otherwise, the first call of this method triggers the call &lt;code&gt;SSLContext.getInstance(&quot;Default&quot;)&lt;/code&gt;. If successful, that object is made the default SSL context and returned.</source>
          <target state="translated">If a default context was set using the &lt;a href=&quot;#setDefault(javax.net.ssl.SSLContext)&quot;&gt; &lt;code&gt;SSLContext.setDefault()&lt;/code&gt; &lt;/a&gt; method, it is returned. Otherwise, the first call of this method triggers the call &lt;code&gt;SSLContext.getInstance(&quot;Default&quot;)&lt;/code&gt; . If successful, that object is made the default SSL context and returned.</target>
        </trans-unit>
        <trans-unit id="ef151b03b8bdfd0c5b1285060dc05b180bd41b5a" translate="yes" xml:space="preserve">
          <source>If a default context was set using the &lt;a href=&quot;sslcontext#setDefault-javax.net.ssl.SSLContext-&quot;&gt;&lt;code&gt;SSLContext.setDefault()&lt;/code&gt;&lt;/a&gt; method, it is returned. Otherwise, the first call of this method triggers the call &lt;code&gt;SSLContext.getInstance(&quot;Default&quot;)&lt;/code&gt;. If successful, that object is made the default SSL context and returned.</source>
          <target state="translated">&lt;a href=&quot;sslcontext#setDefault-javax.net.ssl.SSLContext-&quot;&gt; &lt;code&gt;SSLContext.setDefault()&lt;/code&gt; &lt;/a&gt;メソッドを使用してデフォルトのコンテキストが設定されている場合は、それが返されます。それ以外の場合、このメソッドの最初の呼び出しは &lt;code&gt;SSLContext.getInstance(&quot;Default&quot;)&lt;/code&gt; の呼び出しをトリガーします。成功した場合、そのオブジェクトはデフォルトのSSLコンテキストになり、返されます。</target>
        </trans-unit>
        <trans-unit id="51c46ada07dadd84ce5e7fda86de6679eac1d1c4" translate="yes" xml:space="preserve">
          <source>If a descendant of this &lt;code&gt;JRootPane&lt;/code&gt; calls &lt;code&gt;revalidate&lt;/code&gt;, validate from here on down.</source>
          <target state="translated">If a descendant of this &lt;code&gt;JRootPane&lt;/code&gt; calls &lt;code&gt;revalidate&lt;/code&gt; , validate from here on down.</target>
        </trans-unit>
        <trans-unit id="6749109880140700857e250f0be8ceceea7ff072" translate="yes" xml:space="preserve">
          <source>If a destination &lt;code&gt;URI&lt;/code&gt; is specified in a PrintRequest and it is not accessible for output by the &lt;code&gt;PrintService&lt;/code&gt;, a &lt;code&gt;PrintException&lt;/code&gt; will be thrown. The &lt;code&gt;PrintException&lt;/code&gt; may implement &lt;code&gt;URIException&lt;/code&gt; to provide a more specific cause.</source>
          <target state="translated">If a destination &lt;code&gt;URI&lt;/code&gt; is specified in a PrintRequest and it is not accessible for output by the &lt;code&gt;PrintService&lt;/code&gt; , a &lt;code&gt;PrintException&lt;/code&gt; will be thrown. The &lt;code&gt;PrintException&lt;/code&gt; may implement &lt;code&gt;URIException&lt;/code&gt; to provide a more specific cause.</target>
        </trans-unit>
        <trans-unit id="14abd8b4a751858e76b43b1c734186c7f7ef97b3" translate="yes" xml:space="preserve">
          <source>If a destination URI is specified in a PrintRequest and it is not accessible for output by the PrintService, a PrintException will be thrown. The PrintException may implement URIException to provide a more specific cause.</source>
          <target state="translated">PrintRequest で宛先 URI が指定されていて、それが PrintService の出力にアクセスできない場合、PrintException がスローされる。PrintExceptionは、より具体的な原因を提供するためにURIExceptionを実装してもよい。</target>
        </trans-unit>
        <trans-unit id="ce1a2c4f98ff2d6af0860f8597c46c4d0b903836" translate="yes" xml:space="preserve">
          <source>If a device name is specified, the resulting list of &lt;code&gt;MidiDevice.Info&lt;/code&gt; objects is searched: the first one with a matching name, and whose &lt;code&gt;MidiDevice&lt;/code&gt; implements the respective interface, will be returned. If no matching &lt;code&gt;MidiDevice.Info&lt;/code&gt; object is found, or the device name is not specified, the first suitable device from the resulting list will be returned. For Sequencer and Synthesizer, a device is suitable if it implements the respective interface; whereas for Receiver and Transmitter, a device is suitable if it implements neither Sequencer nor Synthesizer and provides at least one Receiver or Transmitter, respectively.</source>
          <target state="translated">If a device name is specified, the resulting list of &lt;code&gt;MidiDevice.Info&lt;/code&gt; objects is searched: the first one with a matching name, and whose &lt;code&gt;MidiDevice&lt;/code&gt; implements the respective interface, will be returned. If no matching &lt;code&gt;MidiDevice.Info&lt;/code&gt; object is found, or the device name is not specified, the first suitable device from the resulting list will be returned. For Sequencer and Synthesizer, a device is suitable if it implements the respective interface; whereas for Receiver and Transmitter, a device is suitable if it implements neither Sequencer nor Synthesizer and provides at least one Receiver or Transmitter, respectively.</target>
        </trans-unit>
        <trans-unit id="8bacc9e3344a41d79a4651f2c7e9da527b4943d5" translate="yes" xml:space="preserve">
          <source>If a device name is specified, the resulting list of &lt;code&gt;MidiDevice.Info&lt;/code&gt; objects is searched: the first one with a matching name, and whose &lt;code&gt;MidiDevice&lt;/code&gt; implements the respective interface, will be returned. If no matching &lt;code&gt;MidiDevice.Info&lt;/code&gt; object is found, or the device name is not specified, the first suitable device from the resulting list will be returned. For Sequencer and Synthesizer, a device is suitable if it implements the respective interface; whereas for Receiver and Transmitter, a device is suitable if it implements neither Sequencer nor Synthesizer and provides at least one Receiver or Transmitter, respectively. For example, the property &lt;code&gt;javax.sound.midi.Receiver&lt;/code&gt; with a value &lt;code&gt;&quot;com.sun.media.sound.MidiProvider#SunMIDI1&quot;&lt;/code&gt; will have the following consequences when &lt;code&gt;getReceiver&lt;/code&gt; is called: if the class &lt;code&gt;com.sun.media.sound.MidiProvider&lt;/code&gt; exists in the list of installed MIDI device providers, the first &lt;code&gt;Receiver&lt;/code&gt; device with name &lt;code&gt;&quot;SunMIDI1&quot;&lt;/code&gt; will be returned. If it cannot be found, the first &lt;code&gt;Receiver&lt;/code&gt; from that provider will be returned, regardless of name. If there is none, the first &lt;code&gt;Receiver&lt;/code&gt; with name &lt;code&gt;&quot;SunMIDI1&quot;&lt;/code&gt; in the list of all devices (as returned by &lt;code&gt;getMidiDeviceInfo&lt;/code&gt;) will be returned, or, if not found, the first &lt;code&gt;Receiver&lt;/code&gt; that can be found in the list of all devices is returned. If that fails, too, a &lt;code&gt;MidiUnavailableException&lt;/code&gt; is thrown.</source>
          <target state="translated">デバイス名を指定した場合の結果リスト &lt;code&gt;MidiDevice.Info&lt;/code&gt; に一致する名前を持つ最初のものを、その：検索されるオブジェクト &lt;code&gt;MidiDevice&lt;/code&gt; 実装各インタフェースを、返されます。一致する &lt;code&gt;MidiDevice.Info&lt;/code&gt; オブジェクトが見つからない場合、またはデバイス名が指定されていない場合、結果のリストから最初の適切なデバイスが返されます。シーケンサとシンセサイザの場合、それぞれのインターフェイスを実装しているデバイスが適しています。一方、レシーバーとトランスミッターでは、シーケンサーもシンセサイザーも実装せず、それぞれ少なくとも1つのレシーバーまたはトランスミッターを提供するデバイスが適しています。たとえば、値を持つプロパティ &lt;code&gt;javax.sound.midi.Receiver&lt;/code&gt; &lt;code&gt;&quot;com.sun.media.sound.MidiProvider#SunMIDI1&quot;&lt;/code&gt; は、 &lt;code&gt;getReceiver&lt;/code&gt; が呼び出されたときに次の結果をもたらし &lt;code&gt;com.sun.media.sound.MidiProvider&lt;/code&gt; インストールされているMIDIデバイスプロバイダーのリストにクラスcom.sun.media.sound.MidiProviderが存在する場合、最初の &lt;code&gt;Receiver&lt;/code&gt; デバイスは名前 &lt;code&gt;&quot;SunMIDI1&quot;&lt;/code&gt; が返されます。見つからない場合は、名前に関係なく、そのプロバイダーの最初の &lt;code&gt;Receiver&lt;/code&gt; が返されます。何もない場合は、すべてのデバイスのリストにある &lt;code&gt;&quot;SunMIDI1&quot;&lt;/code&gt; という名前の最初の &lt;code&gt;Receiver&lt;/code&gt; （ &lt;code&gt;getMidiDeviceInfo&lt;/code&gt; によって返される）が返されます。見つからない場合は、最初の &lt;code&gt;Receiver&lt;/code&gt; が返されます。すべてのデバイスのリストにあるものが返されます。それも失敗した場合は、 &lt;code&gt;MidiUnavailableException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="c348cf79394a1b079ec5b17aaca7e9df6caf0f51" translate="yes" xml:space="preserve">
          <source>If a disconnected &lt;code&gt;RowSet&lt;/code&gt; object modifies some of its data, and it has a writer associated with it, it may be implemented so that it calls on the writer's &lt;code&gt;writeData&lt;/code&gt; method internally to write the updates back to the data source. In order to do this, the writer must first establish a connection with the rowset's data source.</source>
          <target state="translated">切断された &lt;code&gt;RowSet&lt;/code&gt; オブジェクトがデータの一部を変更し、それにライターが関連付けられている場合は、ライターの &lt;code&gt;writeData&lt;/code&gt; メソッドを内部的に呼び出して、更新をデータソースに書き戻すように実装できます。これを行うには、ライターは最初に行セットのデータソースとの接続を確立する必要があります。</target>
        </trans-unit>
        <trans-unit id="96852e06c1dca016e17f4895cd5c8ddd5ec791ac" translate="yes" xml:space="preserve">
          <source>If a document is valid, or if a document contains some errors but none of them were fatal and the &lt;code&gt;ErrorHandler&lt;/code&gt; didn't throw any exception, then the method returns normally.</source>
          <target state="translated">ドキュメントが有効な場合、またはドキュメントにエラーが含まれているが致命的なエラーがなく、 &lt;code&gt;ErrorHandler&lt;/code&gt; が例外をスローしなかった場合、メソッドは正常に戻ります。</target>
        </trans-unit>
        <trans-unit id="1dc1d0d7d632f8adb52a90a5d33de0f5ebfd86ab" translate="yes" xml:space="preserve">
          <source>If a factory is instantiated, it is invoked with the following parameters to produce the resulting context.</source>
          <target state="translated">ファクトリーがインスタンス化されている場合は、以下のパラメータで呼び出され、結果のコンテキストを生成します。</target>
        </trans-unit>
        <trans-unit id="61b02e48c383e6261e3240e4271679924e0689b0" translate="yes" xml:space="preserve">
          <source>If a fieldValue is an object then the toString() method is called on it and its returned value is used as the value for the field enclosed in parenthesis.</source>
          <target state="translated">fieldValueがオブジェクトの場合は、そのオブジェクトに対してtoString()メソッドが呼び出され、その戻り値が括弧で囲まれたフィールドの値として使用されます。</target>
        </trans-unit>
        <trans-unit id="7fbb5e24d20d361c0ea0a62c5f3f2f90aea684d9" translate="yes" xml:space="preserve">
          <source>If a file manager is provided, it must be able to handle all locations defined in &lt;a href=&quot;documentationtool.location&quot;&gt;&lt;code&gt;DocumentationTool.Location&lt;/code&gt;&lt;/a&gt;, as well as &lt;a href=&quot;standardlocation#SOURCE_PATH&quot;&gt;&lt;code&gt;StandardLocation.SOURCE_PATH&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardlocation#CLASS_PATH&quot;&gt;&lt;code&gt;StandardLocation.CLASS_PATH&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardlocation#PLATFORM_CLASS_PATH&quot;&gt;&lt;code&gt;StandardLocation.PLATFORM_CLASS_PATH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ファイルマネージャが提供されている場合、で定義されているすべての場所に対応できなければなりません&lt;a href=&quot;documentationtool.location&quot;&gt; &lt;code&gt;DocumentationTool.Location&lt;/code&gt; を&lt;/a&gt;、だけでなく、&lt;a href=&quot;standardlocation#SOURCE_PATH&quot;&gt; &lt;code&gt;StandardLocation.SOURCE_PATH&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;standardlocation#CLASS_PATH&quot;&gt; &lt;code&gt;StandardLocation.CLASS_PATH&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;standardlocation#PLATFORM_CLASS_PATH&quot;&gt; &lt;code&gt;StandardLocation.PLATFORM_CLASS_PATH&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cdbf6cb18404a64f45d2b8abf710d01eb9d7f2cb" translate="yes" xml:space="preserve">
          <source>If a file manager is provided, it must be able to handle all locations defined in &lt;a href=&quot;standardlocation&quot;&gt;&lt;code&gt;StandardLocation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ファイルマネージャが提供されている場合は、&lt;a href=&quot;standardlocation&quot;&gt; &lt;code&gt;StandardLocation&lt;/code&gt; で&lt;/a&gt;定義されているすべての場所を処理できる必要があります。</target>
        </trans-unit>
        <trans-unit id="6e77610d088ca1d95b7392fcd2274aef9c2f8d21" translate="yes" xml:space="preserve">
          <source>If a filter &lt;code&gt;F&lt;/code&gt; applies to the &lt;code&gt;N&lt;/code&gt;th argument of the target, then &lt;code&gt;F&lt;/code&gt; must be a method handle which takes exactly one argument. The type of &lt;code&gt;F&lt;/code&gt;'s sole argument replaces the corresponding argument type of the target in the resulting adapted method handle. The return type of &lt;code&gt;F&lt;/code&gt; must be identical to the corresponding parameter type of the target.</source>
          <target state="translated">フィルタならば &lt;code&gt;F&lt;/code&gt; はに適用される &lt;code&gt;N&lt;/code&gt; ターゲットの番目の引数、そして &lt;code&gt;F&lt;/code&gt; は正確に一つの引数を取るメソッドハンドルでなければなりません。タイプ &lt;code&gt;F&lt;/code&gt; の唯一の引数は、結果として生じる適応方式ハンドルにおける標的の対応する引数の型を置き換えます。 &lt;code&gt;F&lt;/code&gt; の戻り値の型は、ターゲットの対応するパラメーター型と同じでなければなりません。</target>
        </trans-unit>
        <trans-unit id="8312dbe0498425dc3e432f47a6cc52909ff0f4aa" translate="yes" xml:space="preserve">
          <source>If a fini function is omitted, use a &lt;a href=&quot;#empty(java.lang.invoke.MethodType)&quot;&gt;default value&lt;/a&gt; for the loop return type.</source>
          <target state="translated">fini関数を省略した&lt;a href=&quot;#empty(java.lang.invoke.MethodType)&quot;&gt;場合&lt;/a&gt;は、ループの戻り値の型にデフォルト値を使用してください。</target>
        </trans-unit>
        <trans-unit id="0f0b37f0970ece4cf3ea7a2708e4bc36a7d62db5" translate="yes" xml:space="preserve">
          <source>If a font in this environment has multiple programmable variations, such as Multiple-Master fonts, only one instance of that font is returned in the &lt;code&gt;Font&lt;/code&gt; array. The other variations must be derived by the application.</source>
          <target state="translated">この環境のフォントに、Multiple-Masterフォントなど、複数のプログラム可能なバリエーションがある場合、そのフォントの1つのインスタンスのみが &lt;code&gt;Font&lt;/code&gt; 配列に返されます。その他のバリエーションは、アプリケーションによって導出する必要があります。</target>
        </trans-unit>
        <trans-unit id="77fff40663a1f21028623e35281e042a8419f5f8" translate="yes" xml:space="preserve">
          <source>If a formal parameter type is a parameterized type, the &lt;code&gt;Type&lt;/code&gt; object returned for it must accurately reflect the actual type parameters used in the source code.</source>
          <target state="translated">仮パラメーターの型がパラメーター化された型の場合、返される &lt;code&gt;Type&lt;/code&gt; オブジェクトは、ソースコードで使用される実際の型パラメーターを正確に反映する必要があります。</target>
        </trans-unit>
        <trans-unit id="48218943f2a8994e2b422a9456a012477f87f4f0" translate="yes" xml:space="preserve">
          <source>If a formal parameter type is a type variable or a parameterized type, it is created. Otherwise, it is resolved.</source>
          <target state="translated">形式的なパラメータ型が型変数またはパラメータ化された型である場合は、それが作成されます。それ以外の場合は解決されます。</target>
        </trans-unit>
        <trans-unit id="8aa45ce5030fe67e696cd9c90f1c3d32a9e26312" translate="yes" xml:space="preserve">
          <source>If a format specifier contains a conversion character that is not applicable to the corresponding argument, then an &lt;a href=&quot;illegalformatconversionexception&quot;&gt;&lt;code&gt;IllegalFormatConversionException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">形式指定子に、対応する引数に適用できない変換文字が含まれている場合、&lt;a href=&quot;illegalformatconversionexception&quot;&gt; &lt;code&gt;IllegalFormatConversionException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="47e2137fd18da09bdd7e054d7015bc33023b31e0" translate="yes" xml:space="preserve">
          <source>If a given &lt;code&gt;invokedynamic&lt;/code&gt; instruction specifies no static arguments, the instruction's bootstrap method will be invoked on three arguments, conveying the instruction's caller class, name, and method type. If the &lt;code&gt;invokedynamic&lt;/code&gt; instruction specifies one or more static arguments, those values will be passed as additional arguments to the method handle. (Note that because there is a limit of 255 arguments to any method, at most 251 extra arguments can be supplied, since the bootstrap method handle itself and its first three arguments must also be stacked.) The bootstrap method will be invoked as if by either &lt;code&gt;MethodHandle.invoke&lt;/code&gt; or &lt;code&gt;invokeWithArguments&lt;/code&gt;. (There is no way to tell the difference.)</source>
          <target state="translated">特定の &lt;code&gt;invokedynamic&lt;/code&gt; 命令で静的引数が指定されていない場合、命令のブートストラップメソッドは3つの引数で呼び出され、命令の呼び出し元クラス、名前、およびメソッドタイプを伝達します。 &lt;code&gt;invokedynamic&lt;/code&gt; 命令が1つ以上の静的引数を指定する場合、それらの値は追加の引数としてメソッドハンドルに渡されます。 （メソッドには255の引数の制限があるため、ブートストラップメソッドはそれ自体を処理し、最初の3つの引数もスタックする必要があるため、最大251の追加の引数を指定できます。）ブートストラップメソッドは、次のように呼び出されます。 &lt;code&gt;MethodHandle.invoke&lt;/code&gt; または &lt;code&gt;invokeWithArguments&lt;/code&gt; のいずれか。 （違いを見分ける方法はありません。）</target>
        </trans-unit>
        <trans-unit id="a80d4c3ad4e53040c1a39d7a7bdca9679c68c78f" translate="yes" xml:space="preserve">
          <source>If a horizontal scrollbar is needed, it is treated like the column header (see the paragraph above regarding the vertical scrollbar).</source>
          <target state="translated">水平スクロールバーが必要な場合は、カラムヘッダと同じように扱われます(垂直スクロールバーについては上の段落を参照してください)。</target>
        </trans-unit>
        <trans-unit id="1b302c4fa309e55608aa77d71aa898540e38e284" translate="yes" xml:space="preserve">
          <source>If a host is given then it is appended. If the host is a literal IPv6 address but is not enclosed in square brackets (&lt;code&gt;'['&lt;/code&gt; and &lt;code&gt;']'&lt;/code&gt;) then the square brackets are added.</source>
          <target state="translated">ホストが指定されている場合は追加されます。ホストがリテラルIPv6アドレスであるが、角括弧（ &lt;code&gt;'['&lt;/code&gt; および &lt;code&gt;']'&lt;/code&gt; ）で囲まれていない場合は、角括弧が追加されます。</target>
        </trans-unit>
        <trans-unit id="3c059615b57ed62378344964e37548f3b0e6335b" translate="yes" xml:space="preserve">
          <source>If a list of several images was specified as a Window's icon, this method will return the first item of the list.</source>
          <target state="translated">ウィンドウのアイコンとして複数の画像のリストが指定されていた場合、このメソッドはリストの最初の項目を返します。</target>
        </trans-unit>
        <trans-unit id="7a15cd0977f55c58d7c0850d3c01c8a63da1d40d" translate="yes" xml:space="preserve">
          <source>If a logical line is spread across several natural lines, the backslash escaping the line terminator sequence, the line terminator sequence, and any white space at the start of the following line have no affect on the key or element values. The remainder of the discussion of key and element parsing (when loading) will assume all the characters constituting the key and element appear on a single natural line after line continuation characters have been removed. Note that it is</source>
          <target state="translated">論理行が複数の自然行にまたがって広がっている場合、行終端文字列をエスケープするバックスラッシュ、行終端文字列、次の行の先頭の空白は、キーや要素の値には何の影響も与えません。キーと要素の解析(読み込み時)についての残りの説明では、キーと要素を構成するすべての文字が、行の続きの文字が取り除かれた後の1本の自然行に現れると仮定しています。以下のことに注意してください。</target>
        </trans-unit>
        <trans-unit id="cd8e0bbcc783eadd4865fc925b200f06558d3ae6" translate="yes" xml:space="preserve">
          <source>If a look and feel is used that ignores this property, you can still begin a drag and drop operation by calling &lt;code&gt;exportAsDrag&lt;/code&gt; on the component's &lt;code&gt;TransferHandler&lt;/code&gt;.</source>
          <target state="translated">このプロパティを無視するルックアンドフィールが使用されている場合でも、コンポーネントの &lt;code&gt;TransferHandler&lt;/code&gt; で &lt;code&gt;exportAsDrag&lt;/code&gt; を呼び出すことにより、ドラッグアンドドロップ操作を開始できます。</target>
        </trans-unit>
        <trans-unit id="a6cc836fe190aff287b75e0daabe7ceb48e9d86e" translate="yes" xml:space="preserve">
          <source>If a look and feel is used that ignores this property, you can still begin a drag and drop operation by calling &lt;code&gt;exportAsDrag&lt;/code&gt; on the list's &lt;code&gt;TransferHandler&lt;/code&gt;.</source>
          <target state="translated">このプロパティを無視するルックアンドフィールが使用されている場合でも、リストの &lt;code&gt;TransferHandler&lt;/code&gt; で &lt;code&gt;exportAsDrag&lt;/code&gt; を呼び出すことにより、ドラッグアンドドロップ操作を開始できます。</target>
        </trans-unit>
        <trans-unit id="bfc09a82d3ef30f5685534ffe059fc2caa38aa88" translate="yes" xml:space="preserve">
          <source>If a look and feel is used that ignores this property, you can still begin a drag and drop operation by calling &lt;code&gt;exportAsDrag&lt;/code&gt; on the table's &lt;code&gt;TransferHandler&lt;/code&gt;.</source>
          <target state="translated">このプロパティを無視するルックアンドフィールが使用されている場合でも、テーブルの &lt;code&gt;TransferHandler&lt;/code&gt; で &lt;code&gt;exportAsDrag&lt;/code&gt; を呼び出すことにより、ドラッグアンドドロップ操作を開始できます。</target>
        </trans-unit>
        <trans-unit id="ccd26ad32dd26739826327f4b3d5f7134a7882ee" translate="yes" xml:space="preserve">
          <source>If a look and feel is used that ignores this property, you can still begin a drag and drop operation by calling &lt;code&gt;exportAsDrag&lt;/code&gt; on the tree's &lt;code&gt;TransferHandler&lt;/code&gt;.</source>
          <target state="translated">このプロパティを無視するルックアンドフィールが使用されている場合でも、ツリーの &lt;code&gt;TransferHandler&lt;/code&gt; で &lt;code&gt;exportAsDrag&lt;/code&gt; を呼び出すことにより、ドラッグアンドドロップ操作を開始できます。</target>
        </trans-unit>
        <trans-unit id="2255669d20b77ac21c330711ce13f6ea363e0b8f" translate="yes" xml:space="preserve">
          <source>If a mapping for &lt;code&gt;uiClassID&lt;/code&gt; exists or if the specified class can't be found, return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;uiClassID&lt;/code&gt; のマッピングが存在する場合、または指定されたクラスが見つからない場合は、 &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3a82003bc08000c8f46219ed82ab846fd6727cbe" translate="yes" xml:space="preserve">
          <source>If a match to the specified pattern is not found at the current position, then no input is skipped and a &lt;code&gt;NoSuchElementException&lt;/code&gt; is thrown.</source>
          <target state="translated">指定されたパターンとの一致が現在の位置で見つからない場合、入力はスキップされず、 &lt;code&gt;NoSuchElementException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="e40a20d79d378f273949a8affbffa48e1bdad009" translate="yes" xml:space="preserve">
          <source>If a matching &lt;code&gt;public&lt;/code&gt; entry is found, it is returned immediately.</source>
          <target state="translated">一致する &lt;code&gt;public&lt;/code&gt; エントリが見つかった場合は、すぐに返されます。</target>
        </trans-unit>
        <trans-unit id="f69b5cff049ebc9630323ba63bb4d652364d38f2" translate="yes" xml:space="preserve">
          <source>If a matching &lt;code&gt;system&lt;/code&gt; entry exists, it is returned immediately.</source>
          <target state="translated">一致する &lt;code&gt;system&lt;/code&gt; エントリが存在する場合は、すぐに返されます。</target>
        </trans-unit>
        <trans-unit id="42a4c103812a63e5b048b88e9e4af583a5c904c6" translate="yes" xml:space="preserve">
          <source>If a matching &lt;code&gt;uri&lt;/code&gt; entry is found, it is returned immediately.</source>
          <target state="translated">一致する &lt;code&gt;uri&lt;/code&gt; エントリが見つかった場合は、すぐに返されます。</target>
        </trans-unit>
        <trans-unit id="041906718779e0735497b8d8a4420c278fc6dbb9" translate="yes" xml:space="preserve">
          <source>If a mechanism is listed in the &lt;code&gt;jdk.sasl.disabledMechanisms&lt;/code&gt; security property, it will be ignored and won't be negotiated.</source>
          <target state="translated">メカニズムが &lt;code&gt;jdk.sasl.disabledMechanisms&lt;/code&gt; セキュリティプロパティにリストされている場合、そのメカニズムは無視され、ネゴシエートされません。</target>
        </trans-unit>
        <trans-unit id="03f7ab2c34aa311345e83cbc387505226e713e48" translate="yes" xml:space="preserve">
          <source>If a method handle for a caller-sensitive method is requested, the general rules for &lt;a href=&quot;methodhandles.lookup#equiv&quot;&gt;bytecode behaviors&lt;/a&gt; apply, but they take account of the lookup class in a special way. The resulting method handle behaves as if it were called from an instruction contained in the lookup class, so that the caller-sensitive method detects the lookup class. (By contrast, the invoker of the method handle is disregarded.) Thus, in the case of caller-sensitive methods, different lookup classes may give rise to differently behaving method handles.</source>
          <target state="translated">呼び出し元に依存するメソッドのメソッドハンドルが要求された場合、&lt;a href=&quot;methodhandles.lookup#equiv&quot;&gt;バイトコードの動作&lt;/a&gt;に関する一般的なルールが適用されますが、ルックアップクラスは特別な方法で考慮されます。結果のメソッドハンドルは、ルックアップクラスに含まれる命令から呼び出されたかのように動作するため、呼び出し元に依存するメソッドがルックアップクラスを検出します。 （対照的に、メソッドハンドルの呼び出し元は無視されます。）したがって、呼び出し元に依存するメソッドの場合、ルックアップクラスが異なると、動作が異なるメソッドハンドルが生じる可能性があります。</target>
        </trans-unit>
        <trans-unit id="de9caf9128a5abc525b8ff949c024d6c3b7462b7" translate="yes" xml:space="preserve">
          <source>If a mixer name is specified, the resulting list of &lt;code&gt;Mixer.Info&lt;/code&gt; objects is searched: the first one with a matching name, and whose &lt;code&gt;Mixer&lt;/code&gt; provides the respective line interface, will be returned. If no matching &lt;code&gt;Mixer.Info&lt;/code&gt; object is found, or the mixer name is not specified, the first mixer from the resulting list, which provides the respective line interface, will be returned.</source>
          <target state="translated">ミキサー名が指定されている場合、結果として得られる &lt;code&gt;Mixer.Info&lt;/code&gt; オブジェクトのリストが検索されます。名前が一致し、 &lt;code&gt;Mixer&lt;/code&gt; がそれぞれのラインインターフェイスを提供する最初のリストが返されます。一致する &lt;code&gt;Mixer.Info&lt;/code&gt; オブジェクトが見つからない場合、またはミキサー名が指定されていない場合、それぞれのラインインターフェイスを提供する結果リストの最初のミキサーが返されます。</target>
        </trans-unit>
        <trans-unit id="7f4e595c2df825132a51481c97b50495434dfe5e" translate="yes" xml:space="preserve">
          <source>If a mixer name is specified, the resulting list of &lt;code&gt;Mixer.Info&lt;/code&gt; objects is searched: the first one with a matching name, and whose &lt;code&gt;Mixer&lt;/code&gt; provides the respective line interface, will be returned. If no matching &lt;code&gt;Mixer.Info&lt;/code&gt; object is found, or the mixer name is not specified, the first mixer from the resulting list, which provides the respective line interface, will be returned. For example, the property &lt;code&gt;javax.sound.sampled.Clip&lt;/code&gt; with a value &lt;code&gt;&quot;com.sun.media.sound.MixerProvider#SunClip&quot;&lt;/code&gt; will have the following consequences when &lt;code&gt;getLine&lt;/code&gt; is called requesting a &lt;code&gt;Clip&lt;/code&gt; instance: if the class &lt;code&gt;com.sun.media.sound.MixerProvider&lt;/code&gt; exists in the list of installed mixer providers, the first &lt;code&gt;Clip&lt;/code&gt; from the first mixer with name &lt;code&gt;&quot;SunClip&quot;&lt;/code&gt; will be returned. If it cannot be found, the first &lt;code&gt;Clip&lt;/code&gt; from the first mixer of the specified provider will be returned, regardless of name. If there is none, the first &lt;code&gt;Clip&lt;/code&gt; from the first &lt;code&gt;Mixer&lt;/code&gt; with name &lt;code&gt;&quot;SunClip&quot;&lt;/code&gt; in the list of all mixers (as returned by &lt;code&gt;getMixerInfo&lt;/code&gt;) will be returned, or, if not found, the first &lt;code&gt;Clip&lt;/code&gt; of the first &lt;code&gt;Mixer&lt;/code&gt;that can be found in the list of all mixers is returned. If that fails, too, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">ミキサー名が指定されている場合、 &lt;code&gt;Mixer.Info&lt;/code&gt; オブジェクトの結果リストが検索されます。一致する名前を持つ最初のリストであり、その &lt;code&gt;Mixer&lt;/code&gt; がそれぞれのラインインターフェースを提供しているものが返されます。一致する &lt;code&gt;Mixer.Info&lt;/code&gt; オブジェクトが見つからない場合、またはミキサー名が指定されていない場合、結果のリストの最初のミキサー（それぞれのラインインターフェイスを提供）が返されます。たとえば、値が &lt;code&gt;&quot;com.sun.media.sound.MixerProvider#SunClip&quot;&lt;/code&gt; のプロパティ &lt;code&gt;javax.sound.sampled.Clip&lt;/code&gt; は、 &lt;code&gt;Clip&lt;/code&gt; インスタンスをリクエストする &lt;code&gt;getLine&lt;/code&gt; が呼び出されたときに次の結果をもたらします。クラス &lt;code&gt;com.sun.media.sound.MixerProvider&lt;/code&gt; インストールされているミキサープロバイダーのリストに存在する場合、 &lt;code&gt;&quot;SunClip&quot;&lt;/code&gt; という名前の最初のミキサーからの最初の &lt;code&gt;Clip&lt;/code&gt; が返されます。見つからない場合は、名前に関係なく、指定されたプロバイダーの最初のミキサーの最初の &lt;code&gt;Clip&lt;/code&gt; が返されます。何もない場合は、すべてのミキサーのリストにある &lt;code&gt;&quot;SunClip&quot;&lt;/code&gt; という名前の最初の &lt;code&gt;Mixer&lt;/code&gt; からの最初の &lt;code&gt;Clip&lt;/code&gt; （ &lt;code&gt;getMixerInfo&lt;/code&gt; によって返される）が返されます。見つからない場合は、最初に見つかった &lt;code&gt;Mixer&lt;/code&gt; 最初の &lt;code&gt;Clip&lt;/code&gt; が返されます。すべてのミキサーのリストで返されます。それも失敗した場合は、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="57d4cb4422179df06d85df6edeaf036f2c77e296" translate="yes" xml:space="preserve">
          <source>If a module declares more than one provider then the providers are located in the order that its module descriptor &lt;a href=&quot;../lang/module/moduledescriptor.provides#providers()&quot;&gt;lists the providers&lt;/a&gt;. Providers added dynamically by instrumentation agents (see &lt;a href=&quot;../../../java.instrument/java/lang/instrument/instrumentation#redefineModule(java.lang.Module,java.util.Set,java.util.Map,java.util.Map,java.util.Set,java.util.Map)&quot;&gt;&lt;code&gt;redefineModule&lt;/code&gt;&lt;/a&gt;) are always located after providers declared by the module.</source>
          <target state="translated">モジュールが複数のプロバイダーを宣言している場合、プロバイダーは、そのモジュール記述子&lt;a href=&quot;../lang/module/moduledescriptor.provides#providers()&quot;&gt;がプロバイダーをリスト&lt;/a&gt;している順序で配置されます。インストルメンテーションエージェントによって動的に追加されたプロバイダー（&lt;a href=&quot;../../../java.instrument/java/lang/instrument/instrumentation#redefineModule(java.lang.Module,java.util.Set,java.util.Map,java.util.Map,java.util.Set,java.util.Map)&quot;&gt; &lt;code&gt;redefineModule&lt;/code&gt; を&lt;/a&gt;参照）は、常にモジュールによって宣言されたプロバイダーの後に配置されます。</target>
        </trans-unit>
        <trans-unit id="efaf60a7b1c87aa4ff2f97aa446a4442865cc86e" translate="yes" xml:space="preserve">
          <source>If a module declares more than one provider then the providers are located in the order that its module descriptor &lt;a href=&quot;../lang/module/moduledescriptor.provides#providers()&quot;&gt;lists the providers&lt;/a&gt;. Providers added dynamically by instrumentation agents are always located after providers declared by the module.</source>
          <target state="translated">モジュールが複数のプロバイダーを宣言している場合、プロバイダーは、そのモジュール記述子&lt;a href=&quot;../lang/module/moduledescriptor.provides#providers()&quot;&gt;がプロバイダーをリスト&lt;/a&gt;している順序で配置されます。インストルメンテーションエージェントによって動的に追加されたプロバイダーは、常にモジュールによって宣言されたプロバイダーの後に配置されます。</target>
        </trans-unit>
        <trans-unit id="2898de51e2cf727ad3969c2fe5a2e8ee04593e2d" translate="yes" xml:space="preserve">
          <source>If a mouse has more than three enabled buttons then more values are admissible (4, 5, etc.). There is no assigned constants for these extended buttons. The button masks for the extra buttons returned by this method have no assigned names like the first three button masks.</source>
          <target state="translated">マウスに3つ以上の有効なボタンがある場合は、より多くの値が許容されます(4、5など)。これらの拡張ボタンには定数は割り当てられていません。このメソッドで返される追加ボタンのボタンマスクには、最初の3つのボタンマスクのような名前は割り当てられていません。</target>
        </trans-unit>
        <trans-unit id="f8a0c1b372f5ed387a77d0a8139d565c090fb292" translate="yes" xml:space="preserve">
          <source>If a mutable target is not required, an &lt;code&gt;invokedynamic&lt;/code&gt; instruction may be permanently bound by means of a &lt;a href=&quot;constantcallsite&quot;&gt;constant call site&lt;/a&gt;.</source>
          <target state="translated">変更可能なターゲットが必要ない場合、 &lt;code&gt;invokedynamic&lt;/code&gt; 命令は、&lt;a href=&quot;constantcallsite&quot;&gt;定数呼び出しサイト&lt;/a&gt;によって永続的にバインドされます。</target>
        </trans-unit>
        <trans-unit id="d153e3199dbf3a239e1e74edc668dcfac7b620a7" translate="yes" xml:space="preserve">
          <source>If a mutable target is required which has volatile variable semantics, because updates to the target must be immediately and reliably witnessed by other threads, a &lt;a href=&quot;volatilecallsite&quot;&gt;volatile call site&lt;/a&gt; may be used.</source>
          <target state="translated">揮発性変数のセマンティクスを持つ可変ターゲットが必要な場合、ターゲットへの更新は他のスレッドによって即座に確実に監視される必要があるため、&lt;a href=&quot;volatilecallsite&quot;&gt;揮発性呼び出しサイト&lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="aeca574c1ffd9cbc5b38291c6b65f0adb833dc01" translate="yes" xml:space="preserve">
          <source>If a name for the desired display language is not available, the method may fall back to some other language.</source>
          <target state="translated">希望する表示言語の名前が利用できない場合、メソッドは他の言語にフォールバックすることがあります。</target>
        </trans-unit>
        <trans-unit id="657a9f6756d750ee4adc0e4bbc100a654dce7128" translate="yes" xml:space="preserve">
          <source>If a name is specified as a byte array, it should contain a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure is as follows.</source>
          <target state="translated">名前がバイト配列として指定された場合、それはX.501で定義されているように、単一のDER符号化された識別名を含むべきである。この構造体のASN.1表記法は以下の通りである。</target>
        </trans-unit>
        <trans-unit id="7be17e75afa7fb0ce61b9792a5c8387c175a86f7" translate="yes" xml:space="preserve">
          <source>If a name is specified as a byte array, it should contain a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure is given in the documentation for &lt;a href=&quot;#setIssuerNames(java.util.Collection)&quot;&gt;&lt;code&gt;setIssuerNames(Collection names)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">名前をバイト配列として指定する場合は、X.501で定義されているように、DERでエンコードされた単一の識別名を含める必要があります。この構造のASN.1表記は、&lt;a href=&quot;#setIssuerNames(java.util.Collection)&quot;&gt; &lt;code&gt;setIssuerNames(Collection names)&lt;/code&gt; &lt;/a&gt;ドキュメントに記載されています。</target>
        </trans-unit>
        <trans-unit id="82b7eb3aeab5135e75a853270d3a38d65b14ccb2" translate="yes" xml:space="preserve">
          <source>If a name is specified as a byte array, it should contain a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure is given in the documentation for &lt;a href=&quot;x509crlselector#setIssuerNames-java.util.Collection-&quot;&gt;&lt;code&gt;setIssuerNames(Collection names)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">名前がバイト配列として指定されている場合、X.501で定義されているように、単一のDERエンコードされた識別名が含まれている必要があります。この構造のASN.1表記は、&lt;a href=&quot;x509crlselector#setIssuerNames-java.util.Collection-&quot;&gt; &lt;code&gt;setIssuerNames(Collection names)&lt;/code&gt; の&lt;/a&gt;ドキュメントに記載されています。</target>
        </trans-unit>
        <trans-unit id="96afaaa19f7e5c5798f8d8403e551ecc219a3743" translate="yes" xml:space="preserve">
          <source>If a native receiver provided by the default device does not implement the &lt;code&gt;MidiDeviceReceiver&lt;/code&gt; interface, it will be wrapped in a wrapper class that implements the &lt;code&gt;MidiDeviceReceiver&lt;/code&gt; interface. The corresponding &lt;code&gt;Receiver&lt;/code&gt; method calls will be forwarded to the native receiver.</source>
          <target state="translated">デフォルトデバイスによって提供されるネイティブレシーバーが &lt;code&gt;MidiDeviceReceiver&lt;/code&gt; インターフェイスを実装していない場合、それは &lt;code&gt;MidiDeviceReceiver&lt;/code&gt; インターフェイスを実装するラッパークラスにラップされます。対応する &lt;code&gt;Receiver&lt;/code&gt; メソッドの呼び出しは、ネイティブレシーバーに転送されます。</target>
        </trans-unit>
        <trans-unit id="f15617aacf84e28d7719762bc77a6e2a240fb2d8" translate="yes" xml:space="preserve">
          <source>If a native transmitter provided by the default device does not implement the &lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; interface, it will be wrapped in a wrapper class that implements the &lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; interface. The corresponding &lt;code&gt;Transmitter&lt;/code&gt; method calls will be forwarded to the native transmitter.</source>
          <target state="translated">デフォルトのデバイスが提供するネイティブのトランスミッタが実装されていない場合 &lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; のインタフェースを実装していること、それはラッパークラスにラップされる &lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; のインターフェース。対応する &lt;code&gt;Transmitter&lt;/code&gt; メソッド呼び出しは、ネイティブトランスミッターに転送されます。</target>
        </trans-unit>
        <trans-unit id="5e81249a7f19b34aae5c963bc81798bff7133902" translate="yes" xml:space="preserve">
          <source>If a new logger is created its log level will be configured based on the LogManager and it will be configured to also send logging output to its parent's Handlers. It will be registered in the LogManager global namespace.</source>
          <target state="translated">新しいロガーが作成された場合、そのログ レベルは LogManager に基づいて設定され、親のハンドラーにロギング出力を送信するように設定されます。LogManager グローバル ネームスペースに登録されます。</target>
        </trans-unit>
        <trans-unit id="e885f68e1bc095b374d6b1ebbe1a47153753c95e" translate="yes" xml:space="preserve">
          <source>If a new logger is created its log level will be configured based on the LogManager and it will configured to also send logging output to its parent's Handlers. It will be registered in the LogManager global namespace.</source>
          <target state="translated">新しいロガーが作成された場合、そのログ レベルは LogManager に基づいて設定され、親のハンドラーにロギング出力を送信するように設定されます。これは LogManager グローバル ネームスペースに登録されます。</target>
        </trans-unit>
        <trans-unit id="88b90c99db81cefd92b6c450a7c98a50da340a3f" translate="yes" xml:space="preserve">
          <source>If a new logger is created its log level will be configured based on the LogManager configuration and it will be configured to also send logging output to its parent's Handlers. It will be registered in the LogManager global namespace.</source>
          <target state="translated">新しいロガーが作成された場合、そのログ レベルは LogManager 設定に基づいて設定され、親のハンドラーにロギング出力を送信するように設定されます。これは LogManager グローバル ネームスペースに登録されます。</target>
        </trans-unit>
        <trans-unit id="5e945b5d1146ab0148461e7bb66b4cc1b6317073" translate="yes" xml:space="preserve">
          <source>If a new logger is created its log level will be configured based on the LogManager configuration and it will configured to also send logging output to its parent's Handlers. It will be registered in the LogManager global namespace.</source>
          <target state="translated">新しいロガーが作成された場合、そのログ レベルは LogManager 設定に基づいて設定され、親のハンドラーにロギング出力を送信するように設定されます。これは LogManager グローバル ネームスペースに登録されます。</target>
        </trans-unit>
        <trans-unit id="e3a4f0b05b5c2d22a20b05a71a5d7c135620cfeb" translate="yes" xml:space="preserve">
          <source>If a non-null &lt;code&gt;AbstractFormatter&lt;/code&gt; has not been found, use the default formatter.</source>
          <target state="translated">null以外の &lt;code&gt;AbstractFormatter&lt;/code&gt; が見つからない場合は、デフォルトのフォーマッターを使用してください。</target>
        </trans-unit>
        <trans-unit id="e4374be394b79479c7e1fa5bcc1e8102ae6664e5" translate="yes" xml:space="preserve">
          <source>If a non-null CodeSource is supplied a ProtectionDomain is constructed and associated with the class being defined.</source>
          <target state="translated">NULL でない CodeSource を指定すると、ProtectionDomain が構築され、定義されているクラスに関連付けられます。</target>
        </trans-unit>
        <trans-unit id="ed948d67e59d3b1ab1a6ab69b72cf90841f818b2" translate="yes" xml:space="preserve">
          <source>If a non-null value is returned, then the PropertyEditor should be prepared to parse that string back in setAsText().</source>
          <target state="translated">NULL でない値が返された場合は、その文字列を setAsText()で解析して返す準備をしておかなければなりません。</target>
        </trans-unit>
        <trans-unit id="f75d62399906604e72f84182bca91703960c54bf" translate="yes" xml:space="preserve">
          <source>If a null dispatcher is specified, if the specified dispatcher is not in the dispatcher chain, or if this KeyboardFocusManager is specified without having been explicitly re-registered, no action is taken and no exception is thrown.</source>
          <target state="translated">NULL ディスパッチャが指定された場合、指定されたディスパッチャがディスパッチャチェインにない場合、またはこの KeyboardFocusManager が明示的に再登録されていない状態で指定された場合、何のアクションも実行されず、例外もスローされません。</target>
        </trans-unit>
        <trans-unit id="5f7c58a9060f8818a2c1c94eb51743d12a9a275a" translate="yes" xml:space="preserve">
          <source>If a null dispatcher is specified, no action is taken and no exception is thrown.</source>
          <target state="translated">null ディスパッチャが指定された場合は、何もアクションが実行されず、例外は発生しません。</target>
        </trans-unit>
        <trans-unit id="9858a7d611d85aa9445822454181b23692a649db" translate="yes" xml:space="preserve">
          <source>If a null post-processor is specified, if the specified post-processor is not in the post-processor chain, or if this KeyboardFocusManager is specified without having been explicitly added, no action is taken and no exception is thrown.</source>
          <target state="translated">null のポストプロセッサが指定された場合、指定されたポストプロセッサがポストプロセッサチェインにない場合、またはこの KeyboardFocusManager が明示的に追加されていない状態で指定された場合、アクションは実行されず、例外はスローされません。</target>
        </trans-unit>
        <trans-unit id="80e5e24189da6aec4a702f1b11675b7d716e2c68" translate="yes" xml:space="preserve">
          <source>If a null post-processor is specified, no action is taken and no exception is thrown.</source>
          <target state="translated">null のポストプロセッサが指定された場合、アクションは実行されず、例外はスローされません。</target>
        </trans-unit>
        <trans-unit id="c9d7fb43a6f9ab347881ca798d47872764ac074f" translate="yes" xml:space="preserve">
          <source>If a number is preceded by &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; and a year has already been recognized, then the number is a time-zone offset. If the number is less than 24, it is an offset measured in hours. Otherwise, it is regarded as an offset in minutes, expressed in 24-hour time format without punctuation. A preceding &lt;code&gt;-&lt;/code&gt; means a westward offset. Time zone offsets are always relative to UTC (Greenwich). Thus, for example, &lt;code&gt;-5&lt;/code&gt; occurring in the string would mean &quot;five hours west of Greenwich&quot; and &lt;code&gt;+0430&lt;/code&gt; would mean &quot;four hours and thirty minutes east of Greenwich.&quot; It is permitted for the string to specify &lt;code&gt;GMT&lt;/code&gt;, &lt;code&gt;UT&lt;/code&gt;, or &lt;code&gt;UTC&lt;/code&gt; redundantly-for example, &lt;code&gt;GMT-5&lt;/code&gt; or &lt;code&gt;utc+0430&lt;/code&gt;.</source>
          <target state="translated">数値の前に &lt;code&gt;+&lt;/code&gt; または &lt;code&gt;-&lt;/code&gt; があり、年がすでに認識されている場合、その数値はタイムゾーンオフセットです。数値が24未満の場合は、時間単位で測定されるオフセットです。それ以外の場合は、句読点のない24時間形式で表された分単位のオフセットと見なされます。先行 &lt;code&gt;-&lt;/code&gt; は西向きのオフセットを意味します。タイムゾーンオフセットは常にUTC（グリニッジ）を基準にしています。したがって、たとえば、文字列で &lt;code&gt;-5&lt;/code&gt; が発生すると「グリニッジの西5時間」を意味し、 &lt;code&gt;+0430&lt;/code&gt; は「グリニッジの東4時間30分」を意味します。文字列で &lt;code&gt;GMT&lt;/code&gt; 、 &lt;code&gt;UT&lt;/code&gt; 、または &lt;code&gt;UTC&lt;/code&gt; を重複して指定することが許可されています。たとえば、 &lt;code&gt;GMT-5&lt;/code&gt; または &lt;code&gt;utc+0430&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="871e2115f882350e714e39955d71707aaebf9ba5" translate="yes" xml:space="preserve">
          <source>If a parameter or an operation is not supported by the underlying object.</source>
          <target state="translated">パラメータまたは操作が、基礎となるオブジェクトによってサポートされていない場合。</target>
        </trans-unit>
        <trans-unit id="81c0651f2b5e452650a2ea674b863476cc997e33" translate="yes" xml:space="preserve">
          <source>If a parameterized type is being returned, its type element must not be contained within a generic outer class. The parameterized type &lt;code&gt;Outer&amp;lt;String&amp;gt;.Inner&amp;lt;Number&amp;gt;&lt;/code&gt;, for example, may be constructed by first using this method to get the type &lt;code&gt;Outer&amp;lt;String&amp;gt;&lt;/code&gt;, and then invoking &lt;a href=&quot;#getDeclaredType(javax.lang.model.type.DeclaredType,javax.lang.model.element.TypeElement,javax.lang.model.type.TypeMirror...)&quot;&gt;&lt;code&gt;getDeclaredType(DeclaredType, TypeElement, TypeMirror...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パラメータ化された型が返される場合、その型要素は汎用外部クラス内に含まれていてはなりません。たとえば、パラメータ化された型 &lt;code&gt;Outer&amp;lt;String&amp;gt;.Inner&amp;lt;Number&amp;gt;&lt;/code&gt; 、最初にこのメソッドを使用して型 &lt;code&gt;Outer&amp;lt;String&amp;gt;&lt;/code&gt; を取得し、次に&lt;a href=&quot;#getDeclaredType(javax.lang.model.type.DeclaredType,javax.lang.model.element.TypeElement,javax.lang.model.type.TypeMirror...)&quot;&gt; &lt;code&gt;getDeclaredType(DeclaredType, TypeElement, TypeMirror...)&lt;/code&gt; &lt;/a&gt;を呼び出すことによって構築できます。</target>
        </trans-unit>
        <trans-unit id="a7e7b1f4d4e8c47890d4e04c211a6340b6dc972a" translate="yes" xml:space="preserve">
          <source>If a parameterized type is being returned, its type element must not be contained within a generic outer class. The parameterized type &lt;code&gt;Outer&amp;lt;String&amp;gt;.Inner&amp;lt;Number&amp;gt;&lt;/code&gt;, for example, may be constructed by first using this method to get the type &lt;code&gt;Outer&amp;lt;String&amp;gt;&lt;/code&gt;, and then invoking &lt;a href=&quot;types#getDeclaredType-javax.lang.model.type.DeclaredType-javax.lang.model.element.TypeElement-javax.lang.model.type.TypeMirror...-&quot;&gt;&lt;code&gt;getDeclaredType(DeclaredType, TypeElement, TypeMirror...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">パラメータ化された型が返される場合、その型要素はジェネリック外部クラス内に含まれていてはなりません。たとえば、パラメーター化された型 &lt;code&gt;Outer&amp;lt;String&amp;gt;.Inner&amp;lt;Number&amp;gt;&lt;/code&gt; 、最初にこのメソッドを使用して型 &lt;code&gt;Outer&amp;lt;String&amp;gt;&lt;/code&gt; を取得し、次に&lt;a href=&quot;types#getDeclaredType-javax.lang.model.type.DeclaredType-javax.lang.model.element.TypeElement-javax.lang.model.type.TypeMirror...-&quot;&gt; &lt;code&gt;getDeclaredType(DeclaredType, TypeElement, TypeMirror...)&lt;/code&gt; &lt;/a&gt;を呼び出すことによって構築できます。</target>
        </trans-unit>
        <trans-unit id="43ccbd75a69c5df862ae14549f2be12f58f6705e" translate="yes" xml:space="preserve">
          <source>If a parsing error occurs, the exception that is thrown will include information about the location of the error in the original XML document.</source>
          <target state="translated">解析エラーが発生した場合、スローされる例外には、元の XML ドキュメント内のエラーの位置に関する情報が含まれます。</target>
        </trans-unit>
        <trans-unit id="b860cee6c1daa1284a85c7a9b7c1c7d6c9380907" translate="yes" xml:space="preserve">
          <source>If a particular concrete charset provider class is named in more than one configuration file, or is named in the same configuration file more than once, then the duplicates will be ignored. The configuration file naming a particular provider need not be in the same jar file or other distribution unit as the provider itself. The provider must be accessible from the same class loader that was initially queried to locate the configuration file; this is not necessarily the class loader that loaded the file.</source>
          <target state="translated">特定の具象文字セット・プロバイダ・クラスが複数の設定ファイルで命名されていたり、同じ設定ファイルで複数回命名されていたりすると、重複は無視されます。特定のプロバイダを指定する設定ファイルは、プロバイダ自身と同じ jar ファイルや他の配布単位にある必要はありません。プロバイダは、設定ファイルを見つけるために最初に照会されたのと同じクラス・ローダからアクセス可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="fbd441057e8700833c9533c87ba431e637f763c4" translate="yes" xml:space="preserve">
          <source>If a particular concrete provider class is named in more than one configuration file, or is named in the same configuration file more than once, then the duplicates are ignored. The configuration file naming a particular provider need not be in the same jar file or other distribution unit as the provider itself. The provider must be accessible from the same class loader that was initially queried to locate the configuration file; note that this is not necessarily the class loader from which the file was actually loaded.</source>
          <target state="translated">特定の具体的なプロバイダ・クラスの名前が複数の設定ファイルで指定されていたり、同じ設定ファイルで複数回指定されていたりすると、重複は無視されます。特定のプロバイダを指定する設定ファイルは、プロバイダ自体と同じ jar ファイルやその他の配布単位にある必要はありません。プロバイダは、設定ファイルを見つけるために最初に照会されたのと同じクラス・ローダからアクセス可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="5da4bf007198af6025012fc0fecd914082583539" translate="yes" xml:space="preserve">
          <source>If a particular concrete provider class is named in more than one configuration file, or is named in the same configuration file more than once, then the duplicates will be ignored. The configuration file naming a particular provider need not be in the same jar file or other distribution unit as the provider itself. The provider must be accessible from the same class loader that was initially queried to locate the configuration file; this is not necessarily the class loader that loaded the file.</source>
          <target state="translated">特定の具体的なプロバイダ・クラスの名前が複数の設定ファイルで指定されていたり、同じ設定ファイルで複数回指定されていたりすると、重複は無視されます。特定のプロバイダを指定する設定ファイルは、プロバイダ自体と同じ jar ファイルやその他の配布単位にある必要はありません。プロバイダは、設定ファイルを見つけるために最初に照会されたのと同じクラス・ローダからアクセス可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="11cee8d3b1bf0c5f932f0904e55f7a8ab8555e41" translate="yes" xml:space="preserve">
          <source>If a particular provider is specified by a &lt;code&gt;RowSet&lt;/code&gt; object, and the &lt;code&gt;SyncFactory&lt;/code&gt; does not contain a reference to this provider, a &lt;code&gt;SyncFactoryException&lt;/code&gt; is thrown stating that the synchronization provider could not be found.</source>
          <target state="translated">特定のプロバイダーが &lt;code&gt;RowSet&lt;/code&gt; オブジェクトによって指定されていて、 &lt;code&gt;SyncFactory&lt;/code&gt; にこのプロバイダーへの参照が含まれていない場合、同期プロバイダーが見つからなかったことを示す &lt;code&gt;SyncFactoryException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="29590084579273dadce0a572331ee22aa9d1bda8" translate="yes" xml:space="preserve">
          <source>If a partition has no elements, its value in the result Map will be an empty List.</source>
          <target state="translated">パーティションに要素がない場合、結果Mapの値は空のリストになります。</target>
        </trans-unit>
        <trans-unit id="42129ba221a5197a6e8db6241f12cd2c90200f85" translate="yes" xml:space="preserve">
          <source>If a partition has no elements, its value in the result Map will be obtained by calling the downstream collector's supplier function and then applying the finisher function.</source>
          <target state="translated">パーティションに要素がない場合、結果 Map の値は、ダウンストリームコレクタのサプライヤ関数を呼び出してからフィニッシャ関数を適用することで得られます。</target>
        </trans-unit>
        <trans-unit id="d5668fe10c0723c5fca50dcc78c1b35e4b358bc9" translate="yes" xml:space="preserve">
          <source>If a path is given then it is appended. Any character not in the</source>
          <target state="translated">パスが与えられた場合は、それが追加されます。パスに含まれていない文字は</target>
        </trans-unit>
        <trans-unit id="0e5a965d6474edf02c5830767daff8c0d82cf26d" translate="yes" xml:space="preserve">
          <source>If a pattern is to be used multiple times, compiling it once and reusing it will be more efficient than invoking this method each time.</source>
          <target state="translated">パターンを複数回使用する場合は、その都度このメソッドを呼び出すよりも、一度コンパイルして再利用した方が効率的です。</target>
        </trans-unit>
        <trans-unit id="89b4c008a45797eef3268e7fe508720bf307f893" translate="yes" xml:space="preserve">
          <source>If a permit is acquired then the value &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">許可が取得されると、値 &lt;code&gt;true&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="42b24fec51a71ad010963ae360a48a8c5d862862" translate="yes" xml:space="preserve">
          <source>If a persistence delegate is associated with the given type by using the &lt;a href=&quot;#setPersistenceDelegate(java.lang.Class,java.beans.PersistenceDelegate)&quot;&gt;&lt;code&gt;setPersistenceDelegate(java.lang.Class&amp;lt;?&amp;gt;, java.beans.PersistenceDelegate)&lt;/code&gt;&lt;/a&gt; method it is returned.</source>
          <target state="translated">&lt;a href=&quot;#setPersistenceDelegate(java.lang.Class,java.beans.PersistenceDelegate)&quot;&gt; &lt;code&gt;setPersistenceDelegate(java.lang.Class&amp;lt;?&amp;gt;, java.beans.PersistenceDelegate)&lt;/code&gt; &lt;/a&gt;メソッドを使用して永続性デリゲートが指定されたタイプに関連付けられている場合は、それが返されます。</target>
        </trans-unit>
        <trans-unit id="619e1dee8db482adbcc19510b522caad9b3dd86b" translate="yes" xml:space="preserve">
          <source>If a persistence delegate is associated with the given type by using the &lt;a href=&quot;encoder#setPersistenceDelegate-java.lang.Class-java.beans.PersistenceDelegate-&quot;&gt;&lt;code&gt;setPersistenceDelegate(java.lang.Class&amp;lt;?&amp;gt;, java.beans.PersistenceDelegate)&lt;/code&gt;&lt;/a&gt; method it is returned.</source>
          <target state="translated">持続デリゲートが&lt;a href=&quot;encoder#setPersistenceDelegate-java.lang.Class-java.beans.PersistenceDelegate-&quot;&gt; &lt;code&gt;setPersistenceDelegate(java.lang.Class&amp;lt;?&amp;gt;, java.beans.PersistenceDelegate)&lt;/code&gt; &lt;/a&gt;メソッドを使用して特定のタイプに関連付けられている場合は、それが返されます。</target>
        </trans-unit>
        <trans-unit id="11d9ed1e56dc29ed992752f78c70910959ce2ab4" translate="yes" xml:space="preserve">
          <source>If a port number is given then a colon character (&lt;code&gt;':'&lt;/code&gt;) is appended, followed by the port number in decimal.</source>
          <target state="translated">ポート番号を指定すると、コロン文字（ &lt;code&gt;':'&lt;/code&gt; ）が追加され、その後に10進数のポート番号が続きます。</target>
        </trans-unit>
        <trans-unit id="d701428b48ae7874b54baebebd1df48be574b193" translate="yes" xml:space="preserve">
          <source>If a pred function is omitted, use a constant &lt;code&gt;true&lt;/code&gt; function. (This will keep the loop going, as far as this clause is concerned. Note that in such cases the corresponding fini function is unreachable.)</source>
          <target state="translated">pred関数を省略する場合は、定数 &lt;code&gt;true&lt;/code&gt; 関数を使用してください。（これにより、この句に関する限り、ループが続行されます。このような場合、対応するfini関数に到達できないことに注意してください。）</target>
        </trans-unit>
        <trans-unit id="1e2d6f69246267134b84e23e4dd1a1f828cae635" translate="yes" xml:space="preserve">
          <source>If a pred function returns &lt;code&gt;false&lt;/code&gt;, the corresponding fini function is called, and the resulting value (of type &lt;code&gt;R&lt;/code&gt;) is returned from the loop as a whole.</source>
          <target state="translated">pred関数が &lt;code&gt;false&lt;/code&gt; を返す場合、対応するfini関数が呼び出され、結果の値（タイプ &lt;code&gt;R&lt;/code&gt; ）がループ全体から返されます。</target>
        </trans-unit>
        <trans-unit id="caf5336d5c7e67a44f03340f4fbe7da00052aa6b" translate="yes" xml:space="preserve">
          <source>If a print service provides any vendor extensions these may be made accessible to the user through a vendor supplied tab panel &lt;code&gt;Component&lt;/code&gt;. Such a vendor extension is encouraged to use Swing! and to support its accessibility APIs. The vendor extensions should return the settings as part of the &lt;code&gt;AttributeSet&lt;/code&gt;. Applications which want to preserve the user settings should use those settings to specify the print job. Note that this class is not referenced by any other part of the Java Print Service and may not be included in profiles which cannot depend on the presence of the AWT packages.</source>
          <target state="translated">印刷サービスがベンダー拡張機能を提供する場合、ベンダー提供のタブパネル &lt;code&gt;Component&lt;/code&gt; 介してユーザーがこれらにアクセスできるようにすることができます。このようなベンダー拡張機能は、Swingを使用することをお勧めします。アクセシビリティAPIをサポートします。ベンダー拡張機能は、 &lt;code&gt;AttributeSet&lt;/code&gt; の一部として設定を返す必要があります。ユーザー設定を保持したいアプリケーションは、それらの設定を使用して印刷ジョブを指定する必要があります。このクラスは、Java Print Serviceの他の部分によって参照されておらず、AWTパッケージの存在に依存できないプロファイルに含まれていない可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="38d056108653d02210141b2a751f0e69e31fb1fd" translate="yes" xml:space="preserve">
          <source>If a print service provides any vendor extensions these may be made accessible to the user through a vendor supplied tab panel Component. Such a vendor extension is encouraged to use Swing! and to support its accessibility APIs. The vendor extensions should return the settings as part of the AttributeSet. Applications which want to preserve the user settings should use those settings to specify the print job. Note that this class is not referenced by any other part of the Java Print Service and may not be included in profiles which cannot depend on the presence of the AWT packages.</source>
          <target state="translated">印刷サービスがベンダの拡張機能を提供している場合、ベンダが提供するタブパネルコンポーネントを使ってユーザがアクセスできるようにすることができます。このようなベンダの拡張機能は、Swing! を使用し、そのアクセシビリティ API をサポートすることが推奨されます。ベンダの拡張機能は、設定をAttributeSetの一部として返す必要があります。ユーザ設定を保持したいアプリケーションは、印刷ジョブを指定するためにそれらの設定を使用しなければなりません。このクラスはJava Print Serviceの他のどの部分からも参照されず、AWTパッケージの存在に依存できないプロファイルには含まれないかもしれないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="59af891bcb7ad7848a092781a278ba855f208533" translate="yes" xml:space="preserve">
          <source>If a printer does not support the &lt;code&gt;SheetCollate&lt;/code&gt; attribute (meaning the client cannot specify any particular sheet collation), the printer must behave as though &lt;code&gt;SheetCollate&lt;/code&gt; were always set to &lt;code&gt;COLLATED&lt;/code&gt;.</source>
          <target state="translated">プリンタがサポートしていない場合 &lt;code&gt;SheetCollate&lt;/code&gt; （任意の特定のシートの照合順序を指定することはできませんクライアントを意味する）の属性をかのように、プリンタが動作する必要があり &lt;code&gt;SheetCollate&lt;/code&gt; 常にに設定された &lt;code&gt;COLLATED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f29ea7b220242b9cb8462cb83e9acfd3082297b2" translate="yes" xml:space="preserve">
          <source>If a printer does not support the SheetCollate attribute (meaning the client cannot specify any particular sheet collation), the printer must behave as though SheetCollate were always set to COLLATED.</source>
          <target state="translated">プリンタがSheetCollate属性をサポートしていない場合(クライアントが特定のシート照合を指定できないことを意味します)、プリンタはSheetCollateが常にCOLLATEDに設定されているかのように動作しなければなりません。</target>
        </trans-unit>
        <trans-unit id="49665e43d0c605dc9888cfc626aa1ab47db7f814" translate="yes" xml:space="preserve">
          <source>If a processor object is created and used without the above protocol being followed, then the processor's behavior is not defined by this interface specification.</source>
          <target state="translated">上記のプロトコルに従わずにプロセッサオブジェクトが作成されて使用された場合、プロセッサの動作はこのインタフェース仕様では定義されていません。</target>
        </trans-unit>
        <trans-unit id="81af254ec927065b733bde24b627fbd0490e34d9" translate="yes" xml:space="preserve">
          <source>If a processor throws an uncaught exception, the tool may cease other active annotation processors. If a processor raises an error, the current round will run to completion and the subsequent round will indicate an &lt;a href=&quot;roundenvironment#errorRaised()&quot;&gt;error was raised&lt;/a&gt;. Since annotation processors are run in a cooperative environment, a processor should throw an uncaught exception only in situations where no error recovery or reporting is feasible.</source>
          <target state="translated">プロセッサがキャッチされない例外をスローした場合、ツールは他のアクティブな注釈プロセッサを停止する可能性があります。プロセッサがエラーを発生させた場合、現在のラウンドは完了するまで実行され、次のラウンドは&lt;a href=&quot;roundenvironment#errorRaised()&quot;&gt;エラーが発生した&lt;/a&gt;ことを示します。注釈プロセッサは協調環境で実行されるため、プロセッサは、エラーの回復やレポートが実行できない状況でのみ、キャッチされない例外をスローする必要があります。</target>
        </trans-unit>
        <trans-unit id="ca6e8c92cea494ed3f4a024c3b0fdf6756539fd3" translate="yes" xml:space="preserve">
          <source>If a processor throws an uncaught exception, the tool may cease other active annotation processors. If a processor raises an error, the current round will run to completion and the subsequent round will indicate an &lt;a href=&quot;roundenvironment#errorRaised--&quot;&gt;error was raised&lt;/a&gt;. Since annotation processors are run in a cooperative environment, a processor should throw an uncaught exception only in situations where no error recovery or reporting is feasible.</source>
          <target state="translated">プロセッサがキャッチされない例外をスローすると、ツールは他のアクティブな注釈プロセッサを停止する場合があります。プロセッサでエラーが発生した場合、現在のラウンドは最後まで実行され、次のラウンドでは&lt;a href=&quot;roundenvironment#errorRaised--&quot;&gt;エラーが発生した&lt;/a&gt;ことが示されます。アノテーションプロセッサは協調的な環境で実行されるため、エラーの回復やレポートが実行できない状況でのみ、キャッチされない例外をスローする必要があります。</target>
        </trans-unit>
        <trans-unit id="cb6c65b34b95b44418e49ca6b3559cef82f09432" translate="yes" xml:space="preserve">
          <source>If a property has been set using &lt;a href=&quot;#setOutputProperty(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;setOutputProperty(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt;, that value will be returned. Otherwise, if a property is explicitly specified in the stylesheet, that value will be returned. If the value of the property has been defaulted, that is, if no value has been set explicitly either with &lt;a href=&quot;#setOutputProperty(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;setOutputProperty(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt; or in the stylesheet, the result may vary depending on implementation and input stylesheet.</source>
          <target state="translated">&lt;a href=&quot;#setOutputProperty(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;setOutputProperty(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt;を使用してプロパティが設定されている場合、その値が返されます。それ以外の場合、プロパティがスタイルシートで明示的に指定されていると、その値が返されます。プロパティの値がデフォルト設定されている場合、つまり、&lt;a href=&quot;#setOutputProperty(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;setOutputProperty(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt;またはスタイルシートのいずれかで値が明示的に設定されていない場合、結果は実装と入力によって異なる場合があります。スタイルシート。</target>
        </trans-unit>
        <trans-unit id="fe881171d1c239ccd44b6c4f0b3100103c51b330" translate="yes" xml:space="preserve">
          <source>If a property is indexed, then its entry in the result array belongs to the &lt;a href=&quot;indexedpropertydescriptor&quot;&gt;&lt;code&gt;IndexedPropertyDescriptor&lt;/code&gt;&lt;/a&gt; subclass of the &lt;a href=&quot;propertydescriptor&quot;&gt;&lt;code&gt;PropertyDescriptor&lt;/code&gt;&lt;/a&gt; class. A client of the &lt;code&gt;getPropertyDescriptors&lt;/code&gt; method can use the &lt;code&gt;instanceof&lt;/code&gt; operator to check whether a given &lt;code&gt;PropertyDescriptor&lt;/code&gt; is an &lt;code&gt;IndexedPropertyDescriptor&lt;/code&gt;.</source>
          <target state="translated">プロパティにインデックスが付けられている場合、結果配列のそのエントリは、&lt;a href=&quot;propertydescriptor&quot;&gt; &lt;code&gt;PropertyDescriptor&lt;/code&gt; &lt;/a&gt;クラスの&lt;a href=&quot;indexedpropertydescriptor&quot;&gt; &lt;code&gt;IndexedPropertyDescriptor&lt;/code&gt; &lt;/a&gt;サブクラスに属します。 &lt;code&gt;getPropertyDescriptors&lt;/code&gt; メソッドのクライアントは、 &lt;code&gt;instanceof&lt;/code&gt; 演算子を使用して、指定された &lt;code&gt;PropertyDescriptor&lt;/code&gt; が &lt;code&gt;IndexedPropertyDescriptor&lt;/code&gt; であるかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="73b5d72f7f083f370b03d87e8286e01120577634" translate="yes" xml:space="preserve">
          <source>If a property value is a directory name, all files under that directory will be passed also.</source>
          <target state="translated">プロパティの値がディレクトリ名の場合は、そのディレクトリ以下のすべてのファイルも渡されます。</target>
        </trans-unit>
        <trans-unit id="b052521b488218cd7b9b35156c5fdb24478e5826" translate="yes" xml:space="preserve">
          <source>If a prototype display value is specified, the preferred size of the combo box is calculated by configuring the renderer with the prototype display value and obtaining its preferred size. Specifying the preferred display value is often useful when the combo box will be displaying large amounts of data. If no prototype display value has been specified, the renderer must be configured for each value from the model and its preferred size obtained, which can be relatively expensive.</source>
          <target state="translated">プロトタイプの表示値が指定されている場合は、そのプロトタイプの表示値でレンダラーを設定し、その優先サイズを取得することでコンボボックスの優先サイズが計算されます。優先表示値を指定すると、コンボボックスに大量のデータが表示される場合に便利です。プロトタイプの表示値が指定されていない場合は、モデルから値ごとにレンダラーを構成し、その優先サイズを取得する必要があり、これには比較的費用がかかります。</target>
        </trans-unit>
        <trans-unit id="9c4d961909cb1d8509dc7e80ad518ce9be7c9742" translate="yes" xml:space="preserve">
          <source>If a provider class has been installed in a jar file that is visible to the system class loader, and that jar file contains a provider-configuration file named &lt;code&gt;java.nio.channels.spi.AsynchronousChannelProvider&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;, then the first class name specified in that file is taken. The class is loaded and instantiated; if this process fails then an unspecified error is thrown.</source>
          <target state="translated">プロバイダークラスがシステムクラスローダーに表示されるjarファイルにインストールされており、そのjarファイルに、リソースディレクトリ &lt;code&gt;META-INF/services&lt;/code&gt; に &lt;code&gt;java.nio.channels.spi.AsynchronousChannelProvider&lt;/code&gt; という名前のプロバイダー設定ファイルが含まれている場合、次に、そのファイルで指定されている最初のクラス名が使用されます。クラスがロードされてインスタンス化されます。このプロセスが失敗すると、不特定のエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="fdfa29d9e3e5dd048f606f387c561e986beb3b1f" translate="yes" xml:space="preserve">
          <source>If a provider class has been installed in a jar file that is visible to the system class loader, and that jar file contains a provider-configuration file named &lt;code&gt;java.nio.channels.spi.SelectorProvider&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;, then the first class name specified in that file is taken. The class is loaded and instantiated; if this process fails then an unspecified error is thrown.</source>
          <target state="translated">プロバイダークラスがシステムクラスローダーに表示されるjarファイルにインストールされており、そのjarファイルに、リソースディレクトリ &lt;code&gt;META-INF/services&lt;/code&gt; に &lt;code&gt;java.nio.channels.spi.SelectorProvider&lt;/code&gt; という名前のプロバイダー設定ファイルが含まれている場合、次に、そのファイルで指定されている最初のクラス名が使用されます。クラスがロードされてインスタンス化されます。このプロセスが失敗すると、不特定のエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="40aff6af09d58df40b7fd9256b872b6c75872438" translate="yes" xml:space="preserve">
          <source>If a proxy class implements a non-public interface, then it will be defined in the same package as that interface. Otherwise, the package of a proxy class is also unspecified. Note that package sealing will not prevent a proxy class from being successfully defined in a particular package at runtime, and neither will classes already defined by the same class loader and the same package with particular signers.</source>
          <target state="translated">プロキシクラスが非公開のインタフェースを実装している場合、 そのインタフェースと同じパッケージで定義されます。そうでなければ、プロキシクラスのパッケージも不特定です。パッケージ封印は、実行時に特定のパッケージでプロキシクラスが正常に定義されることを 妨げることはないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="796aaf5cfdf7fbf122008c7936a12a38e2eb7d28" translate="yes" xml:space="preserve">
          <source>If a proxy interface contains a method with the same name and parameter signature as the &lt;code&gt;hashCode&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, or &lt;code&gt;toString&lt;/code&gt; methods of &lt;code&gt;java.lang.Object&lt;/code&gt;, when such a method is invoked on a proxy instance, the &lt;code&gt;Method&lt;/code&gt; object passed to the invocation handler will have &lt;code&gt;java.lang.Object&lt;/code&gt; as its declaring class. In other words, the public, non-final methods of &lt;code&gt;java.lang.Object&lt;/code&gt; logically precede all of the proxy interfaces for the determination of which &lt;code&gt;Method&lt;/code&gt; object to pass to the invocation handler.</source>
          <target state="translated">プロキシインターフェースに &lt;code&gt;java.lang.Object&lt;/code&gt; の &lt;code&gt;hashCode&lt;/code&gt; 、 &lt;code&gt;equals&lt;/code&gt; 、または &lt;code&gt;toString&lt;/code&gt; メソッドと同じ名前とパラメータシグネチャを持つメソッドが含まれている場合、そのようなメソッドがプロキシインスタンスで呼び出されると、呼び出しハンドラに渡される &lt;code&gt;Method&lt;/code&gt; オブジェクトは宣言クラスとして &lt;code&gt;java.lang.Object&lt;/code&gt; があります。つまり、 &lt;code&gt;java.lang.Object&lt;/code&gt; の finalではないpublicメソッドは、どの &lt;code&gt;Method&lt;/code&gt; オブジェクトを呼び出しハンドラーに渡すかを決定するために、論理的にすべてのプロキシー・インターフェースに先行します。</target>
        </trans-unit>
        <trans-unit id="1d6e567397cafeb01c674366adf43d058fe31b2c" translate="yes" xml:space="preserve">
          <source>If a pushed value is a primitive type, it may be converted to a reference by boxing conversion. If the bootstrap method is a variable arity method (its modifier bit &lt;code&gt;0x0080&lt;/code&gt; is set), then some or all of the arguments specified here may be collected into a trailing array parameter. (This is not a special rule, but rather a useful consequence of the interaction between &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; constants, the modifier bit for variable arity methods, and the &lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt;&lt;code&gt;asVarargsCollector&lt;/code&gt;&lt;/a&gt; transformation.)</source>
          <target state="translated">プッシュされた値がプリミティブ型の場合、ボックス変換によって参照に変換される場合があります。ブートストラップ法が可変アリティ法である場合（その修飾子ビット &lt;code&gt;0x0080&lt;/code&gt; が設定されている場合）、ここで指定された引数の一部またはすべてが末尾の配列パラメーターに収集される場合があります。（これは特別なルールではありませんが、 &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; 定数、可変アリティメソッドの修飾子ビット、および&lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt; &lt;code&gt;asVarargsCollector&lt;/code&gt; &lt;/a&gt;変換の間の相互作用の有用な結果です。）</target>
        </trans-unit>
        <trans-unit id="da20e235784a287eb944654e195ab8c9e647b20d" translate="yes" xml:space="preserve">
          <source>If a query is given then a question-mark character (&lt;code&gt;'?'&lt;/code&gt;) is appended, followed by the query. Any character that is not a &lt;a href=&quot;#legal-chars&quot;&gt;legal URI character&lt;/a&gt; is quoted.</source>
          <target state="translated">クエリを指定すると、疑問符（ &lt;code&gt;'?'&lt;/code&gt; ）が追加され、その後にクエリが続きます。&lt;a href=&quot;#legal-chars&quot;&gt;有効なURI&lt;/a&gt;文字ではない文字は引用符で囲まれます。</target>
        </trans-unit>
        <trans-unit id="fd66988b876e62bc3940fc9fa272fb4aa056a6e8" translate="yes" xml:space="preserve">
          <source>If a redefined method has active stack frames, those active frames continue to run the bytecodes of the original method. The redefined method will be used on new invokes.</source>
          <target state="translated">再定義されたメソッドにアクティブなスタック・フレームがある場合、そのアクティブなフレームは元のメソッドのバイトコードを実行し続けます。再定義されたメソッドは、新しい呼び出しで使用されます。</target>
        </trans-unit>
        <trans-unit id="a353f255cddb3e5f45349ee73fbfca26933c3382" translate="yes" xml:space="preserve">
          <source>If a remaining element exists, performs the given action on it, returning &lt;code&gt;true&lt;/code&gt;; else returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">残りの要素が存在する場合は、その要素に対して指定されたアクションを実行し、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c3cb610dc9a4ccd073a7cbb93e3b0cbe1831a23f" translate="yes" xml:space="preserve">
          <source>If a remaining element exists, performs the given action on it, returning &lt;code&gt;true&lt;/code&gt;; else returns &lt;code&gt;false&lt;/code&gt;. If this Spliterator is &lt;a href=&quot;#ORDERED&quot;&gt;&lt;code&gt;ORDERED&lt;/code&gt;&lt;/a&gt; the action is performed on the next element in encounter order. Exceptions thrown by the action are relayed to the caller.</source>
          <target state="translated">残りの要素が存在する場合は、その要素に対して指定されたアクションを実行し、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。このSpliteratorがされている場合は&lt;a href=&quot;#ORDERED&quot;&gt; &lt;code&gt;ORDERED&lt;/code&gt; &lt;/a&gt;アクションは出会いのための次の要素で実行されます。アクションによってスローされた例外は、呼び出し元に中継されます。</target>
        </trans-unit>
        <trans-unit id="24ef3bceba0cb2aab5212a59ddb1c10b5a5728ca" translate="yes" xml:space="preserve">
          <source>If a remaining element exists, performs the given action on it, returning &lt;code&gt;true&lt;/code&gt;; else returns &lt;code&gt;false&lt;/code&gt;. If this Spliterator is &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;ORDERED&lt;/code&gt;&lt;/a&gt; the action is performed on the next element in encounter order. Exceptions thrown by the action are relayed to the caller.</source>
          <target state="translated">残りの要素が存在する場合は、指定されたアクションを実行して &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。このSpliteratorが&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;ORDERED&lt;/code&gt; の&lt;/a&gt;場合、アクションは遭遇順に次の要素で実行されます。アクションによってスローされた例外は、呼び出し元に中継されます。</target>
        </trans-unit>
        <trans-unit id="e159606ce958fbbed771df76f4f0eabd266798cd" translate="yes" xml:space="preserve">
          <source>If a remaining element exists, performs the given action on it, returning &lt;code&gt;true&lt;/code&gt;; else returns &lt;code&gt;false&lt;/code&gt;. If this Spliterator is &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt; the action is performed on the next element in encounter order. Exceptions thrown by the action are relayed to the caller.</source>
          <target state="translated">残りの要素が存在する場合は、指定されたアクションを実行して &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。このSpliteratorが&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; の&lt;/a&gt;場合、アクションは遭遇順に次の要素で実行されます。アクションによってスローされた例外は、呼び出し元に中継されます。</target>
        </trans-unit>
        <trans-unit id="1839ce02fdf0a084101d2dedb7a7ec30b1eddf93" translate="yes" xml:space="preserve">
          <source>If a request cannot be queued, a new thread is created unless this would exceed maximumPoolSize, in which case, the task will be rejected.</source>
          <target state="translated">リクエストがキューに入れられない場合、maximumPoolSizeを超えない限り、新しいスレッドが作成されます。</target>
        </trans-unit>
        <trans-unit id="8dcd6f2eb2f000d41479fe75ebb34b375f18a3c4" translate="yes" xml:space="preserve">
          <source>If a requested access is allowed, &lt;code&gt;checkPermission&lt;/code&gt; returns quietly. If denied, a &lt;code&gt;SecurityException&lt;/code&gt; is thrown.</source>
          <target state="translated">要求されたアクセスが許可されている場合、 &lt;code&gt;checkPermission&lt;/code&gt; は静かに戻ります。拒否された場合、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="887186d0f2e36f1ee7e723c9cc603e07ae277a39" translate="yes" xml:space="preserve">
          <source>If a requested access is allowed, &lt;code&gt;checkPermission&lt;/code&gt; returns quietly. If denied, an AccessControlException is thrown. AccessControlException can also be thrown if the requested permission is of an incorrect type or contains an invalid value. Such information is given whenever possible. Suppose the current thread traversed m callers, in the order of caller 1 to caller 2 to caller m. Then caller m invoked the &lt;code&gt;checkPermission&lt;/code&gt; method. The &lt;code&gt;checkPermission&lt;/code&gt; method determines whether access is granted or denied based on the following algorithm:</source>
          <target state="translated">要求されたアクセスが許可されている場合、 &lt;code&gt;checkPermission&lt;/code&gt; は静かに戻ります。拒否された場合、AccessControlExceptionがスローされます。AccessControlExceptionは、要求されたアクセス許可のタイプが正しくないか、無効な値が含まれている場合にもスローされます。そのような情報は可能な限り提供されます。現在のスレッドが、呼び出し元1から呼び出し元2、呼び出し元mの順に、mの呼び出し元を通過したとします。次に、呼び出し元mが &lt;code&gt;checkPermission&lt;/code&gt; メソッドを呼び出しました。 &lt;code&gt;checkPermission&lt;/code&gt; メソッドは、アクセスが許可または次のアルゴリズムに基づいて拒否されているかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="d5d7514de1aef2342f9130eb5c0a7ab75fbed7e9" translate="yes" xml:space="preserve">
          <source>If a resource named &lt;code&gt;META-INF/services/java.rmi.server.RMIClassLoaderSpi&lt;/code&gt; is visible to the system class loader, then the contents of that resource are interpreted as a provider-configuration file, and the first class name specified in that file is used as the provider class name. If a class with that name can be loaded by the system class loader and that class is assignable to &lt;a href=&quot;rmiclassloaderspi&quot;&gt;&lt;code&gt;RMIClassLoaderSpi&lt;/code&gt;&lt;/a&gt; and has a public no-argument constructor, then that constructor will be invoked to create the provider instance. If the resource is found but a provider cannot be instantiated as described, then an unspecified &lt;code&gt;Error&lt;/code&gt; will be thrown to code that attempts to use &lt;code&gt;RMIClassLoader&lt;/code&gt;, indicating the failure to obtain a provider instance.</source>
          <target state="translated">&lt;code&gt;META-INF/services/java.rmi.server.RMIClassLoaderSpi&lt;/code&gt; という名前のリソースがシステムクラスローダーに表示される場合、そのリソースの内容はプロバイダー構成ファイルとして解釈され、そのファイルで指定されている最初のクラス名はプロバイダークラス名として使用されます。その名前のクラスをシステムクラスローダーでロードでき、そのクラスが&lt;a href=&quot;rmiclassloaderspi&quot;&gt; &lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; に&lt;/a&gt;割り当て可能であり、パブリックの引数なしコンストラクターがある場合、そのコンストラクターが呼び出されてプロバイダーインスタンスが作成されます。リソースが見つかったが、説明されているようにプロバイダーをインスタンス化できない場合、 &lt;code&gt;RMIClassLoader&lt;/code&gt; を使用しようとするコードに不特定の &lt;code&gt;Error&lt;/code&gt; がスローされ、プロバイダーインスタンスの取得に失敗したことを示します。</target>
        </trans-unit>
        <trans-unit id="ef31bdb236c1be020d8ae03fbd2d0a2a44475408" translate="yes" xml:space="preserve">
          <source>If a result is passed to the combiner or finisher function, and the same object is not returned from that function, it is never used again.</source>
          <target state="translated">結果がコンバイナやフィニッシャー関数に渡され、その関数から同じオブジェクトが返されなかった場合、それは二度と使用されません。</target>
        </trans-unit>
        <trans-unit id="4f6485f2810241e1f59964a0306f13fb66de588c" translate="yes" xml:space="preserve">
          <source>If a retransformed method has active stack frames, those active frames continue to run the bytecodes of the original method. The retransformed method will be used on new invokes.</source>
          <target state="translated">再変換されたメソッドにアクティブなスタック・フレームがある場合、それらのアクティブなフレームは元のメソッドのバイトコードを実行し続けます。再変換されたメソッドは新しい呼び出しで使用されます。</target>
        </trans-unit>
        <trans-unit id="14bfd111544b6485485ff232a946c27189f15782" translate="yes" xml:space="preserve">
          <source>If a scheme is given then it is appended to the result, followed by a colon character (&lt;code&gt;':'&lt;/code&gt;).</source>
          <target state="translated">スキームが指定されている場合は、結果に追加され、その後にコロン文字（ &lt;code&gt;':'&lt;/code&gt; ）が続きます。</target>
        </trans-unit>
        <trans-unit id="e5292412b3ee897a572e5c7195ad6e65ff3c8f5e" translate="yes" xml:space="preserve">
          <source>If a scheme is given then the path, if also given, must either be empty or begin with a slash character (&lt;code&gt;'/'&lt;/code&gt;). Otherwise a component of the new URI may be left undefined by passing &lt;code&gt;null&lt;/code&gt; for the corresponding parameter or, in the case of the &lt;code&gt;port&lt;/code&gt; parameter, by passing &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">スキームを指定する場合、パスも指定する場合は、空にするか、スラッシュ文字（ &lt;code&gt;'/'&lt;/code&gt; ）で始める必要があります。それ以外の場合は、対応するパラメーターに &lt;code&gt;null&lt;/code&gt; を渡すか、 &lt;code&gt;port&lt;/code&gt; パラメーターの場合は &lt;code&gt;-1&lt;/code&gt; を渡すことにより、新しいURIのコンポーネントを未定義のままにすることができます。</target>
        </trans-unit>
        <trans-unit id="7eb7b84865919239961f0fcc50c50d09850970cc" translate="yes" xml:space="preserve">
          <source>If a scheme is given then the path, if also given, must either be empty or begin with a slash character (&lt;code&gt;'/'&lt;/code&gt;). Otherwise a component of the new URI may be left undefined by passing &lt;code&gt;null&lt;/code&gt; for the corresponding parameter.</source>
          <target state="translated">スキームを指定する場合、パスも指定する場合は、空にするか、スラッシュ文字（ &lt;code&gt;'/'&lt;/code&gt; ）で始める必要があります。そうでない場合、対応するパラメーターに &lt;code&gt;null&lt;/code&gt; を渡すことにより、新しいURIのコンポーネントが未定義のままになることがあります。</target>
        </trans-unit>
        <trans-unit id="952cc358b56318941d6e6ab799e6dc4bef4fa5ce" translate="yes" xml:space="preserve">
          <source>If a scheme-specific part is given then it is appended. Any character that is not a &lt;a href=&quot;#legal-chars&quot;&gt;legal URI character&lt;/a&gt; is &lt;a href=&quot;#quote&quot;&gt;quoted&lt;/a&gt;.</source>
          <target state="translated">スキーム固有の部分が指定されている場合は、追加されます。&lt;a href=&quot;#legal-chars&quot;&gt;正当なURI&lt;/a&gt;文字ではない文字は&lt;a href=&quot;#quote&quot;&gt;引用符で囲まれ&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="13bf2d89737ab4f9e4f3365daa8c4a8a75373b41" translate="yes" xml:space="preserve">
          <source>If a search filter with invalid variable substitutions is provided to this method, the result is undefined. When changes are made to this DirContext, the effect on enumerations returned by prior calls to this method is undefined.</source>
          <target state="translated">無効な変数置換を含む検索フィルタがこのメソッドに提供された場合、結果は未定義です。この DirContext に変更が加えられた場合、以前にこのメソッドを呼び出したときに返された列挙への影響は未定義です。</target>
        </trans-unit>
        <trans-unit id="21aa33f224ffda676da8658661118410003b3a1d" translate="yes" xml:space="preserve">
          <source>If a second-based field is present, but &lt;code&gt;LocalTime&lt;/code&gt; was not parsed, then the resolver ensures that milli, micro and nano second values are available to meet the contract of &lt;a href=&quot;../temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt;. These will be set to zero if missing.</source>
          <target state="translated">秒ベースのフィールドが存在するが、 &lt;code&gt;LocalTime&lt;/code&gt; が解析されなかった場合、リゾルバーは、ミリ、マイクロ、およびナノ秒の値が&lt;a href=&quot;../temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; &lt;/a&gt;の契約を満たすために使用可能であることを確認します。欠落している場合、これらはゼロに設定されます。</target>
        </trans-unit>
        <trans-unit id="e18b76d1fe5541051eb8484610c674d8c7326195" translate="yes" xml:space="preserve">
          <source>If a security check fails, the method throws &lt;a href=&quot;../../../java.base/java/lang/securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">セキュリティチェックが失敗した場合、メソッドは&lt;a href=&quot;../../../java.base/java/lang/securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="e97fd2ab90897223be3d44a61e5dac3ab116baef" translate="yes" xml:space="preserve">
          <source>If a security check fails, the method throws &lt;a href=&quot;../../java/lang/securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">セキュリティチェックが失敗した場合、メソッドは&lt;a href=&quot;../../java/lang/securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="221b98a86674d566a65e15145ec84aa3ec7800d3" translate="yes" xml:space="preserve">
          <source>If a security manager exists, its &lt;a href=&quot;securitymanager#checkExec(java.lang.String)&quot;&gt;&lt;code&gt;checkExec&lt;/code&gt;&lt;/a&gt; method is invoked with the first component of the array &lt;code&gt;cmdarray&lt;/code&gt; as its argument. This may result in a &lt;a href=&quot;securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">セキュリティマネージャが存在する場合、その&lt;a href=&quot;securitymanager#checkExec(java.lang.String)&quot;&gt; &lt;code&gt;checkExec&lt;/code&gt; &lt;/a&gt;メソッドは、配列 &lt;code&gt;cmdarray&lt;/code&gt; の最初のコンポーネントを引数として呼び出されます。これにより、&lt;a href=&quot;securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt;がスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="9dea5876966fa5396ec8f16c92b8e2f701b1ace9" translate="yes" xml:space="preserve">
          <source>If a security manager exists, its &lt;a href=&quot;securitymanager#checkExec-java.lang.String-&quot;&gt;&lt;code&gt;checkExec&lt;/code&gt;&lt;/a&gt; method is invoked with the first component of the array &lt;code&gt;cmdarray&lt;/code&gt; as its argument. This may result in a &lt;a href=&quot;securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">セキュリティーマネージャーが存在する場合、その&lt;a href=&quot;securitymanager#checkExec-java.lang.String-&quot;&gt; &lt;code&gt;checkExec&lt;/code&gt; &lt;/a&gt;メソッドは、配列 &lt;code&gt;cmdarray&lt;/code&gt; の最初のコンポーネントを引数として呼び出されます。これにより、&lt;a href=&quot;securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt;がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="f62df6f0d1a2b5825cab2050a4ec3aeebeb23980" translate="yes" xml:space="preserve">
          <source>If a security manager exists, its &lt;a href=&quot;securitymanager#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method is called with a &lt;a href=&quot;runtimepermission&quot;&gt;&lt;code&gt;RuntimePermission(&quot;getenv.&quot;+name)&lt;/code&gt;&lt;/a&gt; permission. This may result in a &lt;a href=&quot;securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; being thrown. If no exception is thrown the value of the variable &lt;code&gt;name&lt;/code&gt; is returned.</source>
          <target state="translated">セキュリティマネージャが存在する場合、その&lt;a href=&quot;securitymanager#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;メソッドは&lt;a href=&quot;runtimepermission&quot;&gt; &lt;code&gt;RuntimePermission(&quot;getenv.&quot;+name)&lt;/code&gt; &lt;/a&gt;権限で呼び出されます。これにより、&lt;a href=&quot;securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt;がスローされる可能性があります。例外がスローされない場合、変数 &lt;code&gt;name&lt;/code&gt; 値が返されます。</target>
        </trans-unit>
        <trans-unit id="f1619a19a25be011be70c741cc0c43a2226d965a" translate="yes" xml:space="preserve">
          <source>If a security manager exists, its &lt;a href=&quot;securitymanager#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method is called with a &lt;a href=&quot;runtimepermission&quot;&gt;&lt;code&gt;RuntimePermission(&quot;getenv.*&quot;)&lt;/code&gt;&lt;/a&gt; permission. This may result in a &lt;a href=&quot;securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">セキュリティマネージャが存在する場合、その&lt;a href=&quot;securitymanager#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;メソッドは&lt;a href=&quot;runtimepermission&quot;&gt; &lt;code&gt;RuntimePermission(&quot;getenv.*&quot;)&lt;/code&gt; &lt;/a&gt;権限で呼び出されます。これにより、&lt;a href=&quot;securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt;がスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="9e6026eb4f64490fabd44f7ccd2cafba99ebb3a0" translate="yes" xml:space="preserve">
          <source>If a security manager exists, its &lt;a href=&quot;securitymanager#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method is called with a &lt;a href=&quot;runtimepermission&quot;&gt;&lt;code&gt;RuntimePermission&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&quot;getenv.*&quot;)&lt;/code&gt; permission. This may result in a &lt;a href=&quot;securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">セキュリティマネージャが存在する場合、その&lt;a href=&quot;securitymanager#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;メソッドは&lt;a href=&quot;runtimepermission&quot;&gt; &lt;code&gt;RuntimePermission&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(&quot;getenv.*&quot;)&lt;/code&gt; 権限で呼び出されます。これにより、&lt;a href=&quot;securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt;がスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="53168f421aa4d312fe84c343c76a94712c016bae" translate="yes" xml:space="preserve">
          <source>If a security manager exists, its &lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method is called with a &lt;a href=&quot;runtimepermission&quot;&gt;&lt;code&gt;RuntimePermission&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&quot;getenv.*&quot;)&lt;/code&gt; permission. This may result in a &lt;a href=&quot;securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">セキュリティーマネージャーが存在する場合、その&lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;メソッドは、&lt;a href=&quot;runtimepermission&quot;&gt; &lt;code&gt;RuntimePermission&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(&quot;getenv.*&quot;)&lt;/code&gt; 権限で呼び出されます。これにより、&lt;a href=&quot;securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt;がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="2be9fb106610b30c8cb7f763862c74ced2b9d9be" translate="yes" xml:space="preserve">
          <source>If a security manager exists, its &lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method is called with a &lt;code&gt;&lt;a href=&quot;runtimepermission&quot;&gt;&lt;code&gt;RuntimePermission&lt;/code&gt;&lt;/a&gt;(&quot;getenv.&quot;+name)&lt;/code&gt; permission. This may result in a &lt;a href=&quot;securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; being thrown. If no exception is thrown the value of the variable &lt;code&gt;name&lt;/code&gt; is returned.</source>
          <target state="translated">セキュリティーマネージャーが存在する場合、その&lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;メソッドは、 &lt;code&gt;&lt;a href=&quot;runtimepermission&quot;&gt;&lt;code&gt;RuntimePermission&lt;/code&gt;&lt;/a&gt;(&quot;getenv.&quot;+name)&lt;/code&gt; 権限で呼び出されます。これにより、&lt;a href=&quot;securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt;がスローされる場合があります。例外がスローされない場合、変数 &lt;code&gt;name&lt;/code&gt; 値が返されます。</target>
        </trans-unit>
        <trans-unit id="799c889390e9c989ec60d735a9738bf280d5b1a4" translate="yes" xml:space="preserve">
          <source>If a security manager exists, its &lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method is called with a &lt;code&gt;&lt;a href=&quot;runtimepermission&quot;&gt;&lt;code&gt;RuntimePermission&lt;/code&gt;&lt;/a&gt;(&quot;getenv.*&quot;)&lt;/code&gt; permission. This may result in a &lt;a href=&quot;securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">セキュリティーマネージャーが存在する場合、その&lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;メソッドは、 &lt;code&gt;&lt;a href=&quot;runtimepermission&quot;&gt;&lt;code&gt;RuntimePermission&lt;/code&gt;&lt;/a&gt;(&quot;getenv.*&quot;)&lt;/code&gt; 権限で呼び出されます。これにより、&lt;a href=&quot;securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; &lt;/a&gt;がスローされる場合があります。</target>
        </trans-unit>
        <trans-unit id="2278e2e0ebd6f6139022aa0c469fba80c78c2df6" translate="yes" xml:space="preserve">
          <source>If a security manager exists, its &lt;code&gt;checkPermission&lt;/code&gt; method is first called with a &lt;code&gt;SQLPermission(&quot;deregisterDriver&quot;)&lt;/code&gt; permission to check that the caller is allowed to deregister a JDBC Driver.</source>
          <target state="translated">セキュリティマネージャが存在する場合、その &lt;code&gt;checkPermission&lt;/code&gt; メソッドは最初に &lt;code&gt;SQLPermission(&quot;deregisterDriver&quot;)&lt;/code&gt; 権限で呼び出され、呼び出し元がJDBCドライバの登録解除を許可されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="44b4a416183d3454eaa000dc618d86aeea1d6cfb" translate="yes" xml:space="preserve">
          <source>If a security manager exists, its &lt;code&gt;checkPermission&lt;/code&gt; method is first called with a &lt;code&gt;SQLPermission(&quot;setLog&quot;)&lt;/code&gt; permission to check that the caller is allowed to call &lt;code&gt;setLogStream&lt;/code&gt;.</source>
          <target state="translated">セキュリティマネージャが存在する場合、その &lt;code&gt;checkPermission&lt;/code&gt; メソッドは最初に &lt;code&gt;SQLPermission(&quot;setLog&quot;)&lt;/code&gt; 権限で呼び出され、呼び出し元が &lt;code&gt;setLogStream&lt;/code&gt; の呼び出しを許可されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="e94ff9d44d0443fcf36a01243a61054d009a97a3" translate="yes" xml:space="preserve">
          <source>If a security manager exists, its &lt;code&gt;checkPermission&lt;/code&gt; method is first called with a &lt;code&gt;SQLPermission(&quot;setLog&quot;)&lt;/code&gt; permission to check that the caller is allowed to call &lt;code&gt;setLogWriter&lt;/code&gt;.</source>
          <target state="translated">セキュリティマネージャが存在する場合、その &lt;code&gt;checkPermission&lt;/code&gt; メソッドは最初に &lt;code&gt;SQLPermission(&quot;setLog&quot;)&lt;/code&gt; 権限で呼び出され、呼び出し元が &lt;code&gt;setLogWriter&lt;/code&gt; の呼び出しを許可されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="2028007eeb90e55bc59c501b744cac8fe55582db" translate="yes" xml:space="preserve">
          <source>If a security manager has been installed then it is invoked to check access to the remote address. Specifically, if the given &lt;code&gt;address&lt;/code&gt; is a &lt;a href=&quot;inetaddress#isMulticastAddress()&quot;&gt;&lt;code&gt;multicast address&lt;/code&gt;&lt;/a&gt;, the security manager's &lt;a href=&quot;../lang/securitymanager#checkMulticast(java.net.InetAddress)&quot;&gt;&lt;code&gt;checkMulticast&lt;/code&gt;&lt;/a&gt; method is invoked with the given &lt;code&gt;address&lt;/code&gt;. Otherwise, the security manager's &lt;a href=&quot;../lang/securitymanager#checkConnect(java.lang.String,int)&quot;&gt;&lt;code&gt;checkConnect&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../lang/securitymanager#checkAccept(java.lang.String,int)&quot;&gt;&lt;code&gt;checkAccept&lt;/code&gt;&lt;/a&gt; methods are invoked, with the given &lt;code&gt;address&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt;, to verify that datagrams are permitted to be sent and received respectively.</source>
          <target state="translated">セキュリティマネージャがインストールされている場合は、リモートアドレスへのアクセスを確認するために呼び出されます。具体的には、指定された &lt;code&gt;address&lt;/code&gt; が&lt;a href=&quot;inetaddress#isMulticastAddress()&quot;&gt; &lt;code&gt;multicast address&lt;/code&gt; &lt;/a&gt;場合、セキュリティマネージャの&lt;a href=&quot;../lang/securitymanager#checkMulticast(java.net.InetAddress)&quot;&gt; &lt;code&gt;checkMulticast&lt;/code&gt; &lt;/a&gt;メソッドが指定された &lt;code&gt;address&lt;/code&gt; 呼び出されます。それ以外の場合は、セキュリティマネージャの&lt;a href=&quot;../lang/securitymanager#checkConnect(java.lang.String,int)&quot;&gt; &lt;code&gt;checkConnect&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;../lang/securitymanager#checkAccept(java.lang.String,int)&quot;&gt; &lt;code&gt;checkAccept&lt;/code&gt; &lt;/a&gt;メソッドが、指定された &lt;code&gt;address&lt;/code&gt; と &lt;code&gt;port&lt;/code&gt; を使用して呼び出され、データグラムの送受信がそれぞれ許可されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="a1659595caad59762dfff687e8404d52f631d93f" translate="yes" xml:space="preserve">
          <source>If a security manager has been installed then it is invoked to check access to the remote address. Specifically, if the given &lt;code&gt;address&lt;/code&gt; is a &lt;a href=&quot;inetaddress#isMulticastAddress--&quot;&gt;&lt;code&gt;multicast address&lt;/code&gt;&lt;/a&gt;, the security manager's &lt;a href=&quot;../lang/securitymanager#checkMulticast-java.net.InetAddress-&quot;&gt;&lt;code&gt;checkMulticast&lt;/code&gt;&lt;/a&gt; method is invoked with the given &lt;code&gt;address&lt;/code&gt;. Otherwise, the security manager's &lt;a href=&quot;../lang/securitymanager#checkConnect-java.lang.String-int-&quot;&gt;&lt;code&gt;checkConnect&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../lang/securitymanager#checkAccept-java.lang.String-int-&quot;&gt;&lt;code&gt;checkAccept&lt;/code&gt;&lt;/a&gt; methods are invoked, with the given &lt;code&gt;address&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt;, to verify that datagrams are permitted to be sent and received respectively.</source>
          <target state="translated">セキュリティマネージャがインストールされている場合は、リモートアドレスへのアクセスをチェックするために呼び出されます。具体的には、指定された &lt;code&gt;address&lt;/code&gt; が&lt;a href=&quot;inetaddress#isMulticastAddress--&quot;&gt; &lt;code&gt;multicast address&lt;/code&gt; &lt;/a&gt;場合、セキュリティマネージャの&lt;a href=&quot;../lang/securitymanager#checkMulticast-java.net.InetAddress-&quot;&gt; &lt;code&gt;checkMulticast&lt;/code&gt; &lt;/a&gt;メソッドが指定された &lt;code&gt;address&lt;/code&gt; 呼び出されます。それ以外の場合は、セキュリティマネージャーの&lt;a href=&quot;../lang/securitymanager#checkConnect-java.lang.String-int-&quot;&gt; &lt;code&gt;checkConnect&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;../lang/securitymanager#checkAccept-java.lang.String-int-&quot;&gt; &lt;code&gt;checkAccept&lt;/code&gt; &lt;/a&gt;メソッドが、指定された &lt;code&gt;address&lt;/code&gt; と &lt;code&gt;port&lt;/code&gt; を使用して呼び出され、データグラムの送信と受信がそれぞれ許可されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="5ec3f03393550037c5eee923c4fe6688b7340633" translate="yes" xml:space="preserve">
          <source>If a security manager has been installed then it verifies that the address and port number of the connection's remote endpoint are permitted by the security manager's &lt;a href=&quot;../../lang/securitymanager#checkAccept(java.lang.String,int)&quot;&gt;&lt;code&gt;checkAccept&lt;/code&gt;&lt;/a&gt; method. The permission check is performed with privileges that are restricted by the calling context of this method. If the permission check fails then the connection is closed and the operation completes with a &lt;a href=&quot;../../lang/securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">セキュリティマネージャがインストールされている場合は、接続のリモートエンドポイントのアドレスとポート番号がセキュリティマネージャの&lt;a href=&quot;../../lang/securitymanager#checkAccept(java.lang.String,int)&quot;&gt; &lt;code&gt;checkAccept&lt;/code&gt; &lt;/a&gt;メソッドによって許可されていることを確認します。権限チェックは、このメソッドの呼び出しコンテキストによって制限されている権限で実行されます。権限チェックが失敗した場合、接続は閉じられ、操作は&lt;a href=&quot;../../lang/securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; で&lt;/a&gt;完了します。</target>
        </trans-unit>
        <trans-unit id="e62ef67bcdaa9aa21e31d7d487c07bd914492ed8" translate="yes" xml:space="preserve">
          <source>If a security manager has been installed then it verifies that the address and port number of the connection's remote endpoint are permitted by the security manager's &lt;a href=&quot;../../lang/securitymanager#checkAccept-java.lang.String-int-&quot;&gt;&lt;code&gt;checkAccept&lt;/code&gt;&lt;/a&gt; method. The permission check is performed with privileges that are restricted by the calling context of this method. If the permission check fails then the connection is closed and the operation completes with a &lt;a href=&quot;../../lang/securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">セキュリティマネージャがインストールされている場合は、接続のリモートエンドポイントのアドレスとポート番号がセキュリティマネージャの&lt;a href=&quot;../../lang/securitymanager#checkAccept-java.lang.String-int-&quot;&gt; &lt;code&gt;checkAccept&lt;/code&gt; &lt;/a&gt;メソッドによって許可されていることを確認します。権限チェックは、このメソッドの呼び出しコンテキストによって制限されている特権で実行されます。権限チェックが失敗した場合、接続は閉じられ、操作は&lt;a href=&quot;../../lang/securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; で&lt;/a&gt;完了します。</target>
        </trans-unit>
        <trans-unit id="3f4c4a17220ef5e90aea04a442f8bc074ebea3c6" translate="yes" xml:space="preserve">
          <source>If a security manager is already set in the group VM, this method first calls the security manager's &lt;code&gt;checkSetFactory&lt;/code&gt; method. This could result in a &lt;code&gt;SecurityException&lt;/code&gt;. If your application needs to set a different security manager, you must ensure that the policy file specified by the group's &lt;code&gt;ActivationGroupDesc&lt;/code&gt; grants the group the necessary permissions to set a new security manager. (Note: This will be necessary if your group downloads and sets a security manager).</source>
          <target state="translated">セキュリティマネージャがグループVMにすでに設定されている場合、このメソッドは最初にセキュリティマネージャの &lt;code&gt;checkSetFactory&lt;/code&gt; メソッドを呼び出します。これにより、 &lt;code&gt;SecurityException&lt;/code&gt; が発生する可能性があります。アプリケーションで別のセキュリティマネージャーを設定する必要がある場合は、グループの &lt;code&gt;ActivationGroupDesc&lt;/code&gt; で指定されたポリシーファイルが、新しいセキュリティマネージャーを設定するために必要なアクセス許可をグループに付与していることを確認する必要があります。（注：これは、グループがセキュリティマネージャーをダウンロードして設定する場合に必要になります）。</target>
        </trans-unit>
        <trans-unit id="774bb30d85acccb9e7832ec0c0d531eef6b9e9b6" translate="yes" xml:space="preserve">
          <source>If a security manager is enabled, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with the string &lt;code&gt;&quot;clearProviderProperties.&quot;+name&lt;/code&gt; (where &lt;code&gt;name&lt;/code&gt; is the provider name) to see if it's ok to clear this provider.</source>
          <target state="translated">セキュリティマネージャーが有効になっている &lt;code&gt;checkSecurityAccess&lt;/code&gt; 、そのcheckSecurityAccessメソッドが文字列 &lt;code&gt;&quot;clearProviderProperties.&quot;+name&lt;/code&gt; （ &lt;code&gt;name&lt;/code&gt; はプロバイダー名）で呼び出され、このプロバイダーをクリアしてもよいかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="f35e03213aea8a9f7162a4e6061b476c733a84f5" translate="yes" xml:space="preserve">
          <source>If a security manager is enabled, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with the string &lt;code&gt;&quot;putProviderProperty.&quot;+name&lt;/code&gt;, where &lt;code&gt;name&lt;/code&gt; is the provider name, to see if it's ok to set this provider's property values.</source>
          <target state="translated">セキュリティーマネージャーが有効になっている &lt;code&gt;checkSecurityAccess&lt;/code&gt; 、そのcheckSecurityAccessメソッドが文字列 &lt;code&gt;&quot;putProviderProperty.&quot;+name&lt;/code&gt; で呼び出されます。ここで、 &lt;code&gt;name&lt;/code&gt; はプロバイダー名であり、このプロバイダーのプロパティ値を設定してもよいかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="97b050d112e298b259d22c6b122aa0f103951b1a" translate="yes" xml:space="preserve">
          <source>If a security manager is enabled, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with the string &lt;code&gt;&quot;removeProviderProperty.&quot;+name&lt;/code&gt;, where &lt;code&gt;name&lt;/code&gt; is the provider name, to see if it's ok to remove this provider's properties.</source>
          <target state="translated">セキュリティーマネージャーが有効になっている &lt;code&gt;checkSecurityAccess&lt;/code&gt; 、そのcheckSecurityAccessメソッドが文字列 &lt;code&gt;&quot;removeProviderProperty.&quot;+name&lt;/code&gt; で呼び出されます。ここで、 &lt;code&gt;name&lt;/code&gt; はプロバイダー名であり、このプロバイダーのプロパティを削除してもよいかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="ece65adbb64e89095abfe9c2349b473bbf31084f" translate="yes" xml:space="preserve">
          <source>If a security manager is enabled, its &lt;code&gt;checkSecurityAccess&lt;/code&gt; method is called with the strings &lt;code&gt;&quot;putProviderProperty.&quot;+name&lt;/code&gt; and &lt;code&gt;&quot;removeProviderProperty.&quot;+name&lt;/code&gt;, where &lt;code&gt;name&lt;/code&gt; is the provider name, to see if it's ok to set this provider's property values and remove this provider's properties.</source>
          <target state="translated">セキュリティマネージャーが有効になっている &lt;code&gt;checkSecurityAccess&lt;/code&gt; 、そのcheckSecurityAccessメソッドが文字列 &lt;code&gt;&quot;putProviderProperty.&quot;+name&lt;/code&gt; および &lt;code&gt;&quot;removeProviderProperty.&quot;+name&lt;/code&gt; で呼び出されます。ここで、 &lt;code&gt;name&lt;/code&gt; はプロバイダー名です。このプロバイダーのプロパティ値を設定してこれを削除してもよいかどうかを確認しますプロバイダーのプロパティ。</target>
        </trans-unit>
        <trans-unit id="cf20f936473755f39be868cd9845f771cb103a28" translate="yes" xml:space="preserve">
          <source>If a security manager is installed and the specified &lt;code&gt;AccessControlContext&lt;/code&gt; was not created by system code and the caller's &lt;code&gt;ProtectionDomain&lt;/code&gt; has not been granted the &quot;createAccessControlContext&quot; &lt;a href=&quot;securitypermission&quot;&gt;&lt;code&gt;SecurityPermission&lt;/code&gt;&lt;/a&gt;, then the action is performed with no permissions.</source>
          <target state="translated">セキュリティマネージャーがインストールされていて、指定された &lt;code&gt;AccessControlContext&lt;/code&gt; がシステムコードによって作成されておらず、呼び出し元の &lt;code&gt;ProtectionDomain&lt;/code&gt; に &quot;createAccessControlContext&quot; &lt;a href=&quot;securitypermission&quot;&gt; &lt;code&gt;SecurityPermission&lt;/code&gt; &lt;/a&gt;が付与されていない場合、アクションは権限なしで実行されます。</target>
        </trans-unit>
        <trans-unit id="dd8d2c5d44a3aa942e5df643c8cc56f8591079d9" translate="yes" xml:space="preserve">
          <source>If a security manager is installed then a provider implementation may require to check a permission before returning a reference to an existing file system. In the case of the &lt;a href=&quot;#getDefault()&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt; file system, no permission check is required.</source>
          <target state="translated">セキュリティマネージャがインストールされている場合、プロバイダーの実装では、既存のファイルシステムへの参照を返す前にアクセス許可を確認する必要がある場合があります。以下の場合、&lt;a href=&quot;#getDefault()&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;ファイルシステム、無許可の確認は必要ありません。</target>
        </trans-unit>
        <trans-unit id="e3b5b0dd2a87988fc996fb7a1ac5c2588c90d706" translate="yes" xml:space="preserve">
          <source>If a security manager is installed then a provider implementation may require to check a permission before returning a reference to an existing file system. In the case of the &lt;a href=&quot;../filesystems#getDefault()&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt; file system, no permission check is required.</source>
          <target state="translated">セキュリティマネージャがインストールされている場合、プロバイダーの実装では、既存のファイルシステムへの参照を返す前にアクセス許可を確認する必要がある場合があります。以下の場合、&lt;a href=&quot;../filesystems#getDefault()&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;ファイルシステム、無許可の確認は必要ありません。</target>
        </trans-unit>
        <trans-unit id="71505a5d56a109fcf20595110953779d866b2e80" translate="yes" xml:space="preserve">
          <source>If a security manager is installed then a provider implementation may require to check a permission before returning a reference to an existing file system. In the case of the &lt;a href=&quot;../filesystems#getDefault--&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt; file system, no permission check is required.</source>
          <target state="translated">セキュリティマネージャーがインストールされている場合、プロバイダーの実装では、既存のファイルシステムへの参照を返す前に権限を確認する必要があります。以下の場合、&lt;a href=&quot;../filesystems#getDefault--&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;ファイルシステム、無許可の確認は必要ありません。</target>
        </trans-unit>
        <trans-unit id="94817a0d003779bd7b3676c9e779ce36983364b9" translate="yes" xml:space="preserve">
          <source>If a security manager is installed then a provider implementation may require to check a permission before returning a reference to an existing file system. In the case of the &lt;a href=&quot;filesystems#getDefault--&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt; file system, no permission check is required.</source>
          <target state="translated">セキュリティマネージャーがインストールされている場合、プロバイダーの実装では、既存のファイルシステムへの参照を返す前に権限を確認する必要があります。以下の場合、&lt;a href=&quot;filesystems#getDefault--&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;ファイルシステム、無許可の確認は必要ありません。</target>
        </trans-unit>
        <trans-unit id="01e04465cdbf974bbd5f8ba0a91561e8dc8debf9" translate="yes" xml:space="preserve">
          <source>If a security manager is installed then a provider implementation may require to check a permission. In the case of the &lt;a href=&quot;../filesystems#getDefault()&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt; file system, no permission check is required.</source>
          <target state="translated">セキュリティマネージャがインストールされている場合、プロバイダーの実装では権限の確認が必要になる場合があります。以下の場合、&lt;a href=&quot;../filesystems#getDefault()&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;ファイルシステム、無許可の確認は必要ありません。</target>
        </trans-unit>
        <trans-unit id="8d8b4d6a644688d37bf4f42e678ef49d5a579de5" translate="yes" xml:space="preserve">
          <source>If a security manager is installed then a provider implementation may require to check a permission. In the case of the &lt;a href=&quot;../filesystems#getDefault--&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt; file system, no permission check is required.</source>
          <target state="translated">セキュリティーマネージャーがインストールされている場合は、プロバイダーの実装で権限の確認が必要になる場合があります。以下の場合、&lt;a href=&quot;../filesystems#getDefault--&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt;ファイルシステム、無許可の確認は必要ありません。</target>
        </trans-unit>
        <trans-unit id="143f1755f82fd54bafd1bbd2d643a9b8c831879a" translate="yes" xml:space="preserve">
          <source>If a security manager is installed, and if a method is called which results in an attempt to open a connection, the caller must possess either:</source>
          <target state="translated">セキュリティマネージャがインストールされていて、接続を開こうとする結果となるメソッドが呼び出された場合、呼び出し元はどちらかを持っていなければなりません。</target>
        </trans-unit>
        <trans-unit id="b0d87efa51aa6969d6f0da372f01e957e877983c" translate="yes" xml:space="preserve">
          <source>If a security manager is installed, and if a method is called which results in an attempt to open a connection, the caller must possess either:-</source>
          <target state="translated">セキュリティマネージャがインストールされていて、接続を開こうとする結果となるメソッドが呼び出された場合、 呼び出し元は以下のいずれかを持っていなければなりません。</target>
        </trans-unit>
        <trans-unit id="1d45c9e8f126e9404c3d2b7c327aa338dc699327" translate="yes" xml:space="preserve">
          <source>If a security manager is installed, in order to create a &lt;code&gt;GSSName&lt;/code&gt; that contains a Kerberos name element without providing its realm, a &lt;a href=&quot;../../../javax/security/auth/kerberos/servicepermission&quot;&gt;&lt;code&gt;ServicePermission&lt;/code&gt;&lt;/a&gt; must be granted and the service principal of the permission must minimally be inside the Kerberos name element's realm. For example, if the result of &lt;a href=&quot;gssmanager#createName(java.lang.String,org.ietf.jgss.Oid)&quot;&gt;&lt;code&gt;createName(&quot;user&quot;, NT_USER_NAME)&lt;/code&gt;&lt;/a&gt; contains a Kerberos name element &lt;code&gt;user@EXAMPLE.COM&lt;/code&gt;, then a &lt;code&gt;ServicePermission&lt;/code&gt; with service principal &lt;code&gt;host/www.example.com@EXAMPLE.COM&lt;/code&gt; (and any action) must be granted. Otherwise, the creation will throw a &lt;a href=&quot;gssexception&quot;&gt;&lt;code&gt;GSSException&lt;/code&gt;&lt;/a&gt; containing the &lt;code&gt;GSSException.FAILURE&lt;/code&gt; error code.</source>
          <target state="translated">セキュリティマネージャがインストールされている場合、レルムを提供せずにKerberos name要素を含む &lt;code&gt;GSSName&lt;/code&gt; を作成するには、&lt;a href=&quot;../../../javax/security/auth/kerberos/servicepermission&quot;&gt; &lt;code&gt;ServicePermission&lt;/code&gt; を&lt;/a&gt;付与する必要があり、アクセス許可のサービスプリンシパルは最低限Kerberosname要素のレルム内にある必要があります。たとえば、&lt;a href=&quot;gssmanager#createName(java.lang.String,org.ietf.jgss.Oid)&quot;&gt; &lt;code&gt;createName(&quot;user&quot;, NT_USER_NAME)&lt;/code&gt; &lt;/a&gt;の結果にKerberos名要素 &lt;code&gt;user@EXAMPLE.COM&lt;/code&gt; が含まれている場合、サービスプリンシパル &lt;code&gt;host/www.example.com@EXAMPLE.COM&lt;/code&gt; （および任意のアクション）を持つ &lt;code&gt;ServicePermission&lt;/code&gt; は次のようになります。付与されます。それ以外の場合、作成は &lt;code&gt;GSSException.FAILURE&lt;/code&gt; エラーコードを含む&lt;a href=&quot;gssexception&quot;&gt; &lt;code&gt;GSSException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="2cf065c4d0904a0cb44740e8e70a65fae00e790f" translate="yes" xml:space="preserve">
          <source>If a security manager is installed, the caller must have a &lt;a href=&quot;authpermission#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;AuthPermission(&quot;modifyPrincipals&quot;)&lt;/code&gt;&lt;/a&gt; permission to modify the returned set, or a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown.</source>
          <target state="translated">セキュリティマネージャがインストールされている場合、返されたセットを変更するには、呼び出し元に&lt;a href=&quot;authpermission#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;AuthPermission(&quot;modifyPrincipals&quot;)&lt;/code&gt; &lt;/a&gt;権限が必要です。そうでない場合、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="2d705115f8db059c39a12d168cf6ae0c2ae12a28" translate="yes" xml:space="preserve">
          <source>If a security manager is installed, the caller must have a &lt;a href=&quot;authpermission#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;AuthPermission(&quot;modifyPrivateCredentials&quot;)&lt;/code&gt;&lt;/a&gt; permission to modify the returned set, or a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown.</source>
          <target state="translated">セキュリティマネージャがインストールされている場合、返されたセットを変更するには、呼び出し元に&lt;a href=&quot;authpermission#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;AuthPermission(&quot;modifyPrivateCredentials&quot;)&lt;/code&gt; &lt;/a&gt;権限が必要です。そうでない場合、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="277c3aef4348bc841723740d60214a68d5615799" translate="yes" xml:space="preserve">
          <source>If a security manager is installed, the caller must have a &lt;a href=&quot;authpermission#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;AuthPermission(&quot;modifyPublicCredentials&quot;)&lt;/code&gt;&lt;/a&gt; permission to modify the returned set, or a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown.</source>
          <target state="translated">セキュリティマネージャがインストールされている場合、返されたセットを変更するには、呼び出し元に&lt;a href=&quot;authpermission#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;AuthPermission(&quot;modifyPublicCredentials&quot;)&lt;/code&gt; &lt;/a&gt;権限が必要です。そうでない場合、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="cf6549af10b8e67c5c26a129534c96167f417bb6" translate="yes" xml:space="preserve">
          <source>If a security manager is installed, the caller must have a &lt;a href=&quot;privatecredentialpermission&quot;&gt;&lt;code&gt;PrivateCredentialPermission&lt;/code&gt;&lt;/a&gt; to access all of the requested Credentials, or a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown.</source>
          <target state="translated">セキュリティマネージャがインストールされている場合、要求されたすべての資格情報にアクセスするには、呼び出し元に&lt;a href=&quot;privatecredentialpermission&quot;&gt; &lt;code&gt;PrivateCredentialPermission&lt;/code&gt; &lt;/a&gt;が必要です。そうでない場合、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="e951d48b2804e2b72e838d29cf84001eb9605eaa" translate="yes" xml:space="preserve">
          <source>If a security manager is installed, this constructor will check for the &quot;enableSubclassImplementation&quot; SerializablePermission when invoked directly or indirectly by the constructor of a subclass which overrides the ObjectInputStream.readFields or ObjectInputStream.readUnshared methods.</source>
          <target state="translated">セキュリティ マネージャがインストールされている場合、このコンストラクタは、ObjectInputStream.readFields または ObjectInputStream.readUnshared メソッドをオーバーライドするサブクラスのコンストラクタによって直接または間接的に呼び出されたときに、&quot;enableSubclassImplementation&quot; SerializablePermission をチェックします。</target>
        </trans-unit>
        <trans-unit id="97bae6ffb96e1d4b174839ef22d4e1aad74be094" translate="yes" xml:space="preserve">
          <source>If a security manager is installed, this constructor will check for the &quot;enableSubclassImplementation&quot; SerializablePermission when invoked directly or indirectly by the constructor of a subclass which overrides the ObjectOutputStream.putFields or ObjectOutputStream.writeUnshared methods.</source>
          <target state="translated">セキュリティ マネージャがインストールされている場合、このコンストラクタは、ObjectOutputStream.putFields または ObjectOutputStream.writeUnshared メソッドをオーバーライドするサブクラスのコンストラクタによって直接または間接的に呼び出されたときに、&quot;enableSubclassImplementation&quot; SerializablePermission をチェックします。</target>
        </trans-unit>
        <trans-unit id="d92bb3509ac791abbf0139a9c7f57cc935e83b78" translate="yes" xml:space="preserve">
          <source>If a security manager is installed, this method is caller sensitive. During any invocation of the target method handle via the returned wrapper, the original creator of the wrapper (the caller) will be visible to context checks requested by the security manager.</source>
          <target state="translated">セキュリティ・マネージャーがインストールされている場合、このメソッドは呼び出し元に依存します。返されたラッパーを経由してターゲット・メソッド・ハンドルを呼び出している間は、 セキュリティ・マネージャーが要求するコンテキスト・チェックで、ラッパーの元の作成者 (呼び出し元)が見えます。</target>
        </trans-unit>
        <trans-unit id="65b3db194eedd1b31a2888097e8d1e43da0bb0ea" translate="yes" xml:space="preserve">
          <source>If a security manager is present and the given &lt;code&gt;option&lt;/code&gt; is &lt;a href=&quot;stackwalker.option#RETAIN_CLASS_REFERENCE&quot;&gt;&lt;code&gt;Option.RETAIN_CLASS_REFERENCE&lt;/code&gt;&lt;/a&gt;, it calls its &lt;a href=&quot;securitymanager#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method for &lt;code&gt;RuntimePermission(&quot;getStackWalkerWithClassReference&quot;)&lt;/code&gt;.</source>
          <target state="translated">セキュリティマネージャが存在し、与えられた場合には &lt;code&gt;option&lt;/code&gt; ある&lt;a href=&quot;stackwalker.option#RETAIN_CLASS_REFERENCE&quot;&gt; &lt;code&gt;Option.RETAIN_CLASS_REFERENCE&lt;/code&gt; &lt;/a&gt;、それはその呼び出す&lt;a href=&quot;securitymanager#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;ための方法 &lt;code&gt;RuntimePermission(&quot;getStackWalkerWithClassReference&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1670cbe57d528fea2424601e7c9d68d106c819ac" translate="yes" xml:space="preserve">
          <source>If a security manager is present and the given &lt;code&gt;options&lt;/code&gt; contains &lt;a href=&quot;stackwalker.option#RETAIN_CLASS_REFERENCE&quot;&gt;&lt;code&gt;Option.RETAIN_CLASS_REFERENCE&lt;/code&gt;&lt;/a&gt;, it calls its &lt;a href=&quot;securitymanager#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method for &lt;code&gt;RuntimePermission(&quot;getStackWalkerWithClassReference&quot;)&lt;/code&gt;.</source>
          <target state="translated">セキュリティマネージャが存在し、与えられた場合 &lt;code&gt;options&lt;/code&gt; 含まれている&lt;a href=&quot;stackwalker.option#RETAIN_CLASS_REFERENCE&quot;&gt; &lt;code&gt;Option.RETAIN_CLASS_REFERENCE&lt;/code&gt; を&lt;/a&gt;、それがその呼び出した&lt;a href=&quot;securitymanager#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;ための方法 &lt;code&gt;RuntimePermission(&quot;getStackWalkerWithClassReference&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f235ec91b53b01416e59e95836269f2b24928eee" translate="yes" xml:space="preserve">
          <source>If a security manager is present then security checks are performed by the HTTP Client's sending methods. An appropriate &lt;a href=&quot;../../../../java.base/java/net/urlpermission&quot;&gt;&lt;code&gt;URLPermission&lt;/code&gt;&lt;/a&gt; is required to access the destination server, and proxy server if one has been configured. The form of the &lt;code&gt;URLPermission&lt;/code&gt; required to access a proxy has a &lt;code&gt;method&lt;/code&gt; parameter of &lt;code&gt;&quot;CONNECT&quot;&lt;/code&gt; (for all kinds of proxying) and a &lt;code&gt;URL&lt;/code&gt; string of the form &lt;code&gt;&quot;socket://host:port&quot;&lt;/code&gt; where host and port specify the proxy's address.</source>
          <target state="translated">セキュリティマネージャが存在する場合、セキュリティチェックはHTTPクライアントの送信方法によって実行されます。宛先サーバー、およびプロキシサーバー（構成されている場合）にアクセスするには、適切な&lt;a href=&quot;../../../../java.base/java/net/urlpermission&quot;&gt; &lt;code&gt;URLPermission&lt;/code&gt; &lt;/a&gt;が必要です。プロキシにアクセスするために必要な &lt;code&gt;URLPermission&lt;/code&gt; の形式には、 &lt;code&gt;&quot;CONNECT&quot;&lt;/code&gt; （すべての種類のプロキシ用）の &lt;code&gt;method&lt;/code&gt; パラメータと &lt;code&gt;&quot;socket://host:port&quot;&lt;/code&gt; 形式の &lt;code&gt;URL&lt;/code&gt; 文字列があります。ここで、hostとportはプロキシのアドレスを指定します。</target>
        </trans-unit>
        <trans-unit id="d8a665c3d954d0fc47740977c830812c0a85b298" translate="yes" xml:space="preserve">
          <source>If a security manager is present, and the caller's class loader is not null and the caller's class loader is not the same as or an ancestor of the class loader for the class whose class loader is requested, then this method calls the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with a &lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt; permission to ensure it's ok to access the class loader for the class.</source>
          <target state="translated">セキュリティマネージャーが存在し、呼び出し元のクラスローダーがnullでなく、呼び出し元のクラスローダーが、クラスローダーが要求されているクラスのクラスローダーと同じまたはその祖先でない場合、このメソッドはセキュリティマネージャーの &lt;code&gt;checkPermission&lt;/code&gt; メソッドを呼び出します。 &lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt; 、それはクラスのクラスローダにアクセスできることを保証します。</target>
        </trans-unit>
        <trans-unit id="fae23e2153f023848b4e6ff03b38daa20b992dd7" translate="yes" xml:space="preserve">
          <source>If a security manager is present, and the invoker's class loader is not &lt;code&gt;null&lt;/code&gt; and is not an ancestor of this class loader, then this method invokes the security manager's &lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt;&lt;code&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method with a &lt;a href=&quot;runtimepermission#RuntimePermission-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; permission to verify access to the parent class loader is permitted. If not, a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown.</source>
          <target state="translated">セキュリティーマネージャーが存在し、呼び出し元のクラスローダーが &lt;code&gt;null&lt;/code&gt; でなく、このクラスローダーの祖先でない場合、このメソッドは、&lt;a href=&quot;runtimepermission#RuntimePermission-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;権限でセキュリティーマネージャーの&lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt; &lt;code&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、親クラスへのアクセスを確認しますローダーは許可されています。そうでない場合は、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="d340f476b6c3ae11657fddd0392b049fcfa29b4e" translate="yes" xml:space="preserve">
          <source>If a security manager is present, and the invoker's class loader is not &lt;code&gt;null&lt;/code&gt; and is not the same as or an ancestor of the context class loader, then this method invokes the security manager's &lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method with a &lt;a href=&quot;runtimepermission&quot;&gt;&lt;code&gt;RuntimePermission&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&quot;getClassLoader&quot;)&lt;/code&gt; permission to verify that retrieval of the context class loader is permitted.</source>
          <target state="translated">セキュリティマネージャーが存在し、呼び出し元のクラスローダーが &lt;code&gt;null&lt;/code&gt; でなく、コンテキストクラスローダーの祖先とも同じでない場合、このメソッドは、&lt;a href=&quot;runtimepermission&quot;&gt; &lt;code&gt;RuntimePermission&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(&quot;getClassLoader&quot;)&lt;/code&gt; 権限でセキュリティマネージャーの&lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して確認します。コンテキストクラスローダーの取得が許可されます。</target>
        </trans-unit>
        <trans-unit id="9a7bab9ae3bc48ceb4d26ca9f16abf87e363a12c" translate="yes" xml:space="preserve">
          <source>If a security manager is present, and the invoker's class loader is not &lt;code&gt;null&lt;/code&gt; and the invoker's class loader is not the same as or an ancestor of the system class loader, then this method invokes the security manager's &lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt;&lt;code&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method with a &lt;a href=&quot;runtimepermission#RuntimePermission-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; permission to verify access to the system class loader. If not, a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown.</source>
          <target state="translated">セキュリティマネージャーが存在し、呼び出し元のクラスローダーが &lt;code&gt;null&lt;/code&gt; でなく、呼び出し元のクラスローダーがシステムクラスローダーの祖先と同じではない場合、このメソッドは、&lt;a href=&quot;runtimepermission#RuntimePermission-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt; &lt;code&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;てセキュリティマネージャーのcheckPermissionメソッドを呼び出します。 ）システムクラスローダーへのアクセスを確認する権限。そうでない場合は、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="c67e806fb2de6670301476b333eef74af4db7033" translate="yes" xml:space="preserve">
          <source>If a security manager is present, its &lt;a href=&quot;securitymanager#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method is invoked with a &lt;a href=&quot;runtimepermission&quot;&gt;&lt;code&gt;RuntimePermission&lt;/code&gt;&lt;/a&gt;&lt;code&gt;
 (&quot;setContextClassLoader&quot;)&lt;/code&gt; permission to see if setting the context ClassLoader is permitted.</source>
          <target state="translated">セキュリティマネージャが存在する場合、その&lt;a href=&quot;securitymanager#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;メソッドは&lt;a href=&quot;runtimepermission&quot;&gt; &lt;code&gt;RuntimePermission&lt;/code&gt; &lt;/a&gt; &lt;code&gt; (&quot;setContextClassLoader&quot;)&lt;/code&gt; 権限で呼び出され、コンテキストClassLoaderの設定が許可されているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="459bc04b32cd4cdbb41e230932994ba0a7971ad8" translate="yes" xml:space="preserve">
          <source>If a security manager is present, its &lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method is invoked with a &lt;a href=&quot;runtimepermission&quot;&gt;&lt;code&gt;RuntimePermission&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&quot;setContextClassLoader&quot;)&lt;/code&gt; permission to see if setting the context ClassLoader is permitted.</source>
          <target state="translated">セキュリティーマネージャーが存在する場合、その&lt;a href=&quot;securitymanager#checkPermission-java.security.Permission-&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;メソッドが&lt;a href=&quot;runtimepermission&quot;&gt; &lt;code&gt;RuntimePermission&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(&quot;setContextClassLoader&quot;)&lt;/code&gt; 権限で呼び出され、コンテキストClassLoaderの設定が許可されているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="e624bb62f16bc940f5cf53be80f8d86fd6570fa0" translate="yes" xml:space="preserve">
          <source>If a security manager is present, member and class lookups are subject to additional checks. From one to three calls are made to the security manager. Any of these calls can refuse access by throwing a &lt;a href=&quot;../securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt;. Define &lt;code&gt;smgr&lt;/code&gt; as the security manager, &lt;code&gt;lookc&lt;/code&gt; as the lookup class of the current lookup object, &lt;code&gt;refc&lt;/code&gt; as the containing class in which the member is being sought, and &lt;code&gt;defc&lt;/code&gt; as the class in which the member is actually defined. (If a class or other type is being accessed, the &lt;code&gt;refc&lt;/code&gt; and &lt;code&gt;defc&lt;/code&gt; values are the class itself.) The value &lt;code&gt;lookc&lt;/code&gt; is defined as &lt;em&gt;not present&lt;/em&gt; if the current lookup object does not have &lt;a href=&quot;methodhandles.lookup#privacc&quot;&gt;private access&lt;/a&gt;. The calls are made according to the following rules:</source>
          <target state="translated">セキュリティマネージャが存在する場合、メンバーとクラスのルックアップは追加のチェックの対象になります。セキュリティマネージャに対して1〜3回の呼び出しが行われます。これらの呼び出しはいずれも、&lt;a href=&quot;../securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; を&lt;/a&gt;スローすることでアクセスを拒否できます。定義 &lt;code&gt;smgr&lt;/code&gt; をセキュリティマネージャとして &lt;code&gt;lookc&lt;/code&gt; 現在のルックアップ・オブジェクトのルックアップクラスとして、 &lt;code&gt;refc&lt;/code&gt; 部材が求められている含まれているクラスとして、及び &lt;code&gt;defc&lt;/code&gt; 部材が実際に定義されているクラスとして。 （クラスまたは他のタイプがアクセスされている場合、 &lt;code&gt;refc&lt;/code&gt; および &lt;code&gt;defc&lt;/code&gt; 値はクラス自体です。）値 &lt;code&gt;lookc&lt;/code&gt; は&lt;em&gt;存在&lt;/em&gt;し&lt;em&gt;ないもの&lt;/em&gt;として定義されて&lt;em&gt;い&lt;/em&gt;ます。&lt;em&gt;&lt;/em&gt;現在のルックアップオブジェクトに&lt;a href=&quot;methodhandles.lookup#privacc&quot;&gt;プライベートアクセス&lt;/a&gt;がない場合。呼び出しは、次のルールに従って行われます。</target>
        </trans-unit>
        <trans-unit id="944477a6804441726a3b8f252f78eae83726e3a4" translate="yes" xml:space="preserve">
          <source>If a security manager is present, member lookups are subject to additional checks. From one to three calls are made to the security manager. Any of these calls can refuse access by throwing a &lt;a href=&quot;../securityexception&quot;&gt;&lt;code&gt;SecurityException&lt;/code&gt;&lt;/a&gt;. Define &lt;code&gt;smgr&lt;/code&gt; as the security manager, &lt;code&gt;lookc&lt;/code&gt; as the lookup class of the current lookup object, &lt;code&gt;refc&lt;/code&gt; as the containing class in which the member is being sought, and &lt;code&gt;defc&lt;/code&gt; as the class in which the member is actually defined. The value &lt;code&gt;lookc&lt;/code&gt; is defined as &lt;em&gt;not present&lt;/em&gt; if the current lookup object does not have &lt;a href=&quot;methodhandles.lookup#privacc&quot;&gt;private access&lt;/a&gt;. The calls are made according to the following rules:</source>
          <target state="translated">セキュリティーマネージャーが存在する場合、メンバーの検索は追加のチェックの対象になります。セキュリティマネージャに対して、1〜3回の呼び出しが行われます。これらの呼び出しはすべて、&lt;a href=&quot;../securityexception&quot;&gt; &lt;code&gt;SecurityException&lt;/code&gt; を&lt;/a&gt;スローすることでアクセスを拒否できます。定義 &lt;code&gt;smgr&lt;/code&gt; をセキュリティマネージャとして &lt;code&gt;lookc&lt;/code&gt; 現在のルックアップ・オブジェクトのルックアップクラスとして、 &lt;code&gt;refc&lt;/code&gt; 部材が求められている含まれているクラスとして、及び &lt;code&gt;defc&lt;/code&gt; 部材が実際に定義されているクラスとして。現在のルックアップオブジェクトに&lt;a href=&quot;methodhandles.lookup#privacc&quot;&gt;プライベートアクセス権&lt;/a&gt;がない場合、値 &lt;code&gt;lookc&lt;/code&gt; は&lt;em&gt;存在&lt;/em&gt;し&lt;em&gt;ないもの&lt;/em&gt;として定義されます。呼び出しは、次の規則に従って行われます。</target>
        </trans-unit>
        <trans-unit id="d370048efbe2c926a15f430ef8f627c5e5941de0" translate="yes" xml:space="preserve">
          <source>If a sequence of nodes is needed, the node contained in the &lt;code&gt;DOMStructure&lt;/code&gt; is the first node of the sequence and successive nodes can be accessed by invoking &lt;a href=&quot;../../../../../java.xml/org/w3c/dom/node#getNextSibling()&quot;&gt;&lt;code&gt;Node.getNextSibling()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ノードのシーケンスが必要な場合、 &lt;code&gt;DOMStructure&lt;/code&gt; に含まれるノードがシーケンスの最初のノードであり、&lt;a href=&quot;../../../../../java.xml/org/w3c/dom/node#getNextSibling()&quot;&gt; &lt;code&gt;Node.getNextSibling()&lt;/code&gt; &lt;/a&gt;を呼び出すことで後続のノードにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="401c7fd6161f35837fa11c7a250b7f821910874a" translate="yes" xml:space="preserve">
          <source>If a serializable class does not explicitly declare a serialVersionUID, then the serialization runtime will calculate a default serialVersionUID value for that class based on various aspects of the class, as described in the Java(TM) Object Serialization Specification. However, it is &lt;em&gt;strongly recommended&lt;/em&gt; that all serializable classes explicitly declare serialVersionUID values, since the default serialVersionUID computation is highly sensitive to class details that may vary depending on compiler implementations, and can thus result in unexpected &lt;code&gt;InvalidClassException&lt;/code&gt;s during deserialization. Therefore, to guarantee a consistent serialVersionUID value across different java compiler implementations, a serializable class must declare an explicit serialVersionUID value. It is also strongly advised that explicit serialVersionUID declarations use the &lt;code&gt;private&lt;/code&gt; modifier where possible, since such declarations apply only to the immediately declaring class--serialVersionUID fields are not useful as inherited members. Array classes cannot declare an explicit serialVersionUID, so they always have the default computed value, but the requirement for matching serialVersionUID values is waived for array classes.</source>
          <target state="translated">シリアライズ可能なクラスがserialVersionUIDを明示的に宣言していない場合、シリアライゼーションランタイムは、Java（TM）Object Serialization Specificationで説明されているように、クラスのさまざまな側面に基づいてそのクラスのデフォルトのserialVersionUID値を計算します。ただし、デフォルトのserialVersionUIDの計算は、コンパイラの実装によって異なる可能性があるクラスの詳細に非常に敏感であり、予期しない &lt;code&gt;InvalidClassException&lt;/code&gt; が発生する可能性があるため、すべてのシリアル化可能なクラスで明示的にserialVersionUID値を宣言することを&lt;em&gt;強くお勧め&lt;/em&gt;します。s逆シリアル化中。したがって、さまざまなJavaコンパイラーの実装間で一貫したserialVersionUID値を保証するには、直列化可能クラスが明示的なserialVersionUID値を宣言する必要があります。明示的なserialVersionUID宣言は可能な限り &lt;code&gt;private&lt;/code&gt; 修飾子を使用することも強くお勧めします。そのような宣言はすぐに宣言するクラスにのみ適用されるためです。serialVersionUIDフィールドは継承されたメンバーとしては役に立ちません。配列クラスは明示的なserialVersionUIDを宣言できないため、常にデフォルトの計算値が使用されますが、配列クラスの場合、serialVersionUID値を一致させる必要はありません。</target>
        </trans-unit>
        <trans-unit id="b8a284373bcb59e24e39e3dac459820aaa1124e2" translate="yes" xml:space="preserve">
          <source>If a service only supports registration for existing targets, an attempt to register for a nonexistent target results in a &lt;code&gt;NameNotFoundException&lt;/code&gt; being thrown as early as possible, preferably at the time &lt;code&gt;addNamingListener()&lt;/code&gt; is called, or if that is not possible, the listener will receive the exception through the &lt;code&gt;NamingExceptionEvent&lt;/code&gt;.</source>
          <target state="translated">サービスが既存のターゲットの登録のみをサポートしている場合、存在しないターゲットに登録しようとすると、できるだけ早く、できれば &lt;code&gt;addNamingListener()&lt;/code&gt; が呼び出されたときに &lt;code&gt;NameNotFoundException&lt;/code&gt; がスローされます。それが不可能な場合は、リスナーは &lt;code&gt;NamingExceptionEvent&lt;/code&gt; による例外。</target>
        </trans-unit>
        <trans-unit id="f0a93070904cd7e6062d269f73ed4cf640917a73" translate="yes" xml:space="preserve">
          <source>If a service supports this method it cannot be concluded that job cancellation will always succeed. A job may not be able to be cancelled once it has reached and passed some point in its processing. A successful cancellation means only that the entire job was not printed, some portion may already have printed when cancel returns.</source>
          <target state="translated">サービスがこの方法をサポートしている場合、ジョブのキャンセルが必ず成功するとは限らない。ジョブが処理のある時点を過ぎてしまうと、キャンセルできない場合があります。キャンセルが成功したということは、ジョブ全体が印刷されなかったということだけを意味し、キャンセルが戻ってきたときにはすでに一部が印刷されている可能性があります。</target>
        </trans-unit>
        <trans-unit id="be2255c8ae3c0e253b4d1c3edfe6c7951b6b7652" translate="yes" xml:space="preserve">
          <source>If a signer, or codesource is granted this permission, then it is considered a trusted source for MBeans. Only MBeans from trusted sources may be registered in the MBeanServer.</source>
          <target state="translated">署名者やコードソースにこの許可が与えられている場合、そのソースは MBeans の信頼されたソースとみなされます。信頼されたソースからの MBeans のみが MBeanServer に登録されます。</target>
        </trans-unit>
        <trans-unit id="03ecf67fc16b1bbea18316b3fee73e9a01230e4e" translate="yes" xml:space="preserve">
          <source>If a single argument is parsed more than once in the string, then the later parse wins.</source>
          <target state="translated">単一の引数が文字列の中で複数回解析された場合は、後から解析した方が勝ちです。</target>
        </trans-unit>
        <trans-unit id="f7c81fc364f1f00a7430bc8ff3d40572c48b36c2" translate="yes" xml:space="preserve">
          <source>If a socket bound to an endpoint represented by an &lt;code&gt;InetSocketAddress &lt;/code&gt; is &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return an &lt;code&gt;InetSocketAddress&lt;/code&gt; after the socket is closed. In that case the returned &lt;code&gt;InetSocketAddress&lt;/code&gt;'s address is the &lt;a href=&quot;inetaddress#isAnyLocalAddress()&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address and its port is the local port that it was bound to.</source>
          <target state="translated">&lt;code&gt;InetSocketAddress &lt;/code&gt; で表されるエンドポイントにバインドされたソケットが&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;場合、このメソッドは、ソケットが閉じられた後も &lt;code&gt;InetSocketAddress&lt;/code&gt; を返し続けます。その場合、返される &lt;code&gt;InetSocketAddress&lt;/code&gt; のアドレスは&lt;a href=&quot;inetaddress#isAnyLocalAddress()&quot;&gt; &lt;code&gt;wildcard&lt;/code&gt; &lt;/a&gt;アドレスであり、そのポートはバインドされたローカルポートです。</target>
        </trans-unit>
        <trans-unit id="31689da1ab6eb24083df20cceed8f165c2b092ae" translate="yes" xml:space="preserve">
          <source>If a socket bound to an endpoint represented by an &lt;code&gt;InetSocketAddress &lt;/code&gt; is &lt;a href=&quot;socket#close--&quot;&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/a&gt;, then this method will continue to return an &lt;code&gt;InetSocketAddress&lt;/code&gt; after the socket is closed. In that case the returned &lt;code&gt;InetSocketAddress&lt;/code&gt;'s address is the &lt;a href=&quot;inetaddress#isAnyLocalAddress--&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address and its port is the local port that it was bound to.</source>
          <target state="translated">&lt;code&gt;InetSocketAddress &lt;/code&gt; で表されるエンドポイントにバインドされたソケットが&lt;a href=&quot;socket#close--&quot;&gt; &lt;code&gt;closed&lt;/code&gt; &lt;/a&gt;場合、このメソッドは、ソケットが閉じられた後も引き続き &lt;code&gt;InetSocketAddress&lt;/code&gt; を返します。その場合、返される &lt;code&gt;InetSocketAddress&lt;/code&gt; のアドレスは&lt;a href=&quot;inetaddress#isAnyLocalAddress--&quot;&gt; &lt;code&gt;wildcard&lt;/code&gt; &lt;/a&gt;アドレスであり、そのポートはバインドされたローカルポートです。</target>
        </trans-unit>
        <trans-unit id="bb0809c0cf763cd6b646a20d3b4af68f3b750ce9" translate="yes" xml:space="preserve">
          <source>If a special collation rule controlled by a &amp;lt;modifier&amp;gt; is specified it applies to the whole collator object.</source>
          <target state="translated">&amp;lt;modifier&amp;gt;によって制御される特別な照合規則が指定されている場合、それは照合オブジェクト全体に適用されます。</target>
        </trans-unit>
        <trans-unit id="427f94ff7874e329986bda9d7fe7b3d120876900" translate="yes" xml:space="preserve">
          <source>If a specified &lt;code&gt;DataFlavor&lt;/code&gt; is previously unknown to the data transfer subsystem, then invoking this method will establish a mapping in both directions between the specified &lt;code&gt;DataFlavor&lt;/code&gt; and an encoded version of its MIME type as its native.</source>
          <target state="translated">指定された &lt;code&gt;DataFlavor&lt;/code&gt; が以前にデータ転送サブシステムに認識されていなかった場合、このメソッドを呼び出すと、指定された &lt;code&gt;DataFlavor&lt;/code&gt; とそのネイティブとしてのMIMEタイプのエンコードされたバージョンとの間の双方向のマッピングが確立されます。</target>
        </trans-unit>
        <trans-unit id="cdffd367cf1c3286a3204c998849759d715a852b" translate="yes" xml:space="preserve">
          <source>If a specified native is previously unknown to the data transfer subsystem, and that native has been properly encoded, then invoking this method will establish a mapping in both directions between the specified native and a &lt;code&gt;DataFlavor&lt;/code&gt; whose MIME type is a decoded version of the native.</source>
          <target state="translated">指定されたネイティブが以前にデータ転送サブシステムに認識されておらず、そのネイティブが適切にエンコードされている場合、このメソッドを呼び出すと、指定されたネイティブと、MIMEタイプがネイティブのデコードされたバージョンである &lt;code&gt;DataFlavor&lt;/code&gt; との間で双方向のマッピングが確立されます。</target>
        </trans-unit>
        <trans-unit id="5dcefe732742542e44af9fa0d4a6e91c269fcc8e" translate="yes" xml:space="preserve">
          <source>If a spliterator covers no elements then the reporting of additional characteristic values, beyond that of &lt;code&gt;SIZED&lt;/code&gt; and &lt;code&gt;SUBSIZED&lt;/code&gt;, does not aid clients to control, specialize or simplify computation. However, this does enable shared use of an immutable and empty spliterator instance (see &lt;a href=&quot;spliterators#emptySpliterator()&quot;&gt;&lt;code&gt;Spliterators.emptySpliterator()&lt;/code&gt;&lt;/a&gt;) for empty collections, and enables clients to determine if such a spliterator covers no elements.</source>
          <target state="translated">spliteratorが要素をカバーしていない場合、追加の特性値の報告は、それを超えての &lt;code&gt;SIZED&lt;/code&gt; と &lt;code&gt;SUBSIZED&lt;/code&gt; 、コントロールにクライアントを支援する専門かの簡素化、計算されません。ただし、これにより、空のコレクションに対して不変で空のスプリッターインスタンス（&lt;a href=&quot;spliterators#emptySpliterator()&quot;&gt; &lt;code&gt;Spliterators.emptySpliterator()&lt;/code&gt; &lt;/a&gt;参照）を共有して使用できるようになり、クライアントはそのようなスプリッターが要素をカバーしていないかどうかを判断できます。</target>
        </trans-unit>
        <trans-unit id="dde854bb0f9389f51a8a547bcdbab6e693c555ad" translate="yes" xml:space="preserve">
          <source>If a spliterator covers no elements then the reporting of additional characteristic values, beyond that of &lt;code&gt;SIZED&lt;/code&gt; and &lt;code&gt;SUBSIZED&lt;/code&gt;, does not aid clients to control, specialize or simplify computation. However, this does enable shared use of an immutable and empty spliterator instance (see &lt;a href=&quot;spliterators#emptySpliterator--&quot;&gt;&lt;code&gt;Spliterators.emptySpliterator()&lt;/code&gt;&lt;/a&gt;) for empty collections, and enables clients to determine if such a spliterator covers no elements.</source>
          <target state="translated">spliteratorが要素をカバーしていない場合、追加の特性値の報告は、それを超えての &lt;code&gt;SIZED&lt;/code&gt; と &lt;code&gt;SUBSIZED&lt;/code&gt; 、コントロールにクライアントを支援する専門かの簡素化、計算されません。ただし、これにより、空のコレクションに対して不変で空のスプリッターインスタンス（&lt;a href=&quot;spliterators#emptySpliterator--&quot;&gt; &lt;code&gt;Spliterators.emptySpliterator()&lt;/code&gt; &lt;/a&gt;参照）の共有使用が可能になり、クライアントがそのようなスプリッターが要素をカバーしていないかどうかを判断できるようになります。</target>
        </trans-unit>
        <trans-unit id="5b9f294ae09940094318e9c13a1774353137fae2" translate="yes" xml:space="preserve">
          <source>If a step function is omitted, use an &lt;a href=&quot;#identity(java.lang.Class)&quot;&gt;identity function&lt;/a&gt; of the clause's iteration variable type; insert dropped argument parameters before the identity function parameter for the non-&lt;code&gt;void&lt;/code&gt; iteration variables of preceding clauses. (This will turn the loop variable into a local loop invariant.)</source>
          <target state="translated">ステップ関数を省略する&lt;a href=&quot;#identity(java.lang.Class)&quot;&gt;場合&lt;/a&gt;は、句の反復変数タイプの恒等関数を使用してください。前の節の非 &lt;code&gt;void&lt;/code&gt; 反復変数の恒等関数パラメーターの前にドロップされた引数パラメーターを挿入します。（これにより、ループ変数がローカルループ不変条件に変わります。）</target>
        </trans-unit>
        <trans-unit id="377c4e71a3077730a1c7765115b7830cff588ee5" translate="yes" xml:space="preserve">
          <source>If a stream does contain tables, the tables given in a &lt;code&gt;JPEGImageReadParam&lt;/code&gt; are ignored. Furthermore, if the first image in a stream does contain tables and subsequent ones do not, then the tables given in the first image are used for all the abbreviated images. Once tables have been read from a stream, they can be overridden only by tables subsequently read from the same stream. In order to specify new tables, the &lt;a href=&quot;../../imagereader#setInput(java.lang.Object,boolean,boolean)&quot;&gt;&lt;code&gt;setInput&lt;/code&gt;&lt;/a&gt; method of the reader must be called to change the stream.</source>
          <target state="translated">ストリームにテーブルが含まれている場合、 &lt;code&gt;JPEGImageReadParam&lt;/code&gt; で指定されたテーブルは無視されます。さらに、ストリームの最初の画像にテーブルが含まれ、後続の画像にテーブルが含まれていない場合、最初の画像で指定されたテーブルがすべての省略された画像に使用されます。テーブルがストリームから読み取られると、それらは、同じストリームから後で読み取られるテーブルによってのみオーバーライドできます。新しいテーブルを指定するには、リーダーの&lt;a href=&quot;../../imagereader#setInput(java.lang.Object,boolean,boolean)&quot;&gt; &lt;code&gt;setInput&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してストリームを変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="eceb3e8bdd7aa7928b72e084cf57d623f635838d" translate="yes" xml:space="preserve">
          <source>If a stream does contain tables, the tables given in a &lt;code&gt;JPEGImageReadParam&lt;/code&gt; are ignored. Furthermore, if the first image in a stream does contain tables and subsequent ones do not, then the tables given in the first image are used for all the abbreviated images. Once tables have been read from a stream, they can be overridden only by tables subsequently read from the same stream. In order to specify new tables, the &lt;a href=&quot;../../imagereader#setInput-java.lang.Object-boolean-boolean-&quot;&gt;&lt;code&gt;setInput&lt;/code&gt;&lt;/a&gt; method of the reader must be called to change the stream.</source>
          <target state="translated">ストリームにテーブルが含まれている場合、 &lt;code&gt;JPEGImageReadParam&lt;/code&gt; で指定されたテーブルは無視されます。さらに、ストリーム内の最初の画像にテーブルが含まれ、後続のテーブルに含まれない場合、最初の画像で指定されたテーブルがすべての省略された画像に使用されます。テーブルがストリームから読み取られると、それらは後で同じストリームから読み取られたテーブルによってのみオーバーライドできます。新しいテーブルを指定するには、リーダーの&lt;a href=&quot;../../imagereader#setInput-java.lang.Object-boolean-boolean-&quot;&gt; &lt;code&gt;setInput&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してストリームを変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="a2750feeb92c351bda0cd825237cf381d71b3604" translate="yes" xml:space="preserve">
          <source>If a stream is ordered, most operations are constrained to operate on the elements in their encounter order; if the source of a stream is a &lt;code&gt;List&lt;/code&gt; containing &lt;code&gt;[1, 2, 3]&lt;/code&gt;, then the result of executing &lt;code&gt;map(x -&amp;gt; x*2)&lt;/code&gt; must be &lt;code&gt;[2, 4, 6]&lt;/code&gt;. However, if the source has no defined encounter order, then any permutation of the values &lt;code&gt;[2, 4, 6]&lt;/code&gt; would be a valid result.</source>
          <target state="translated">ストリームが順序付けられている場合、ほとんどの操作はエンカウンター順序で要素を操作するように制限されています。ストリームのソースである場合は &lt;code&gt;List&lt;/code&gt; を含む &lt;code&gt;[1, 2, 3]&lt;/code&gt; 、実行、結果 &lt;code&gt;map(x -&amp;gt; x*2)&lt;/code&gt; でなければならない &lt;code&gt;[2, 4, 6]&lt;/code&gt; 。ただし、ソースに定義されたエンカウンター順序がない場合、値 &lt;code&gt;[2, 4, 6]&lt;/code&gt; 2、4、6]の順列は有効な結果になります。</target>
        </trans-unit>
        <trans-unit id="ec3da9f5ed3a50caf2ebc15ff55bbd7387d78001" translate="yes" xml:space="preserve">
          <source>If a string quote character is encountered, then a string is recognized, consisting of all characters after (but not including) the string quote character, up to (but not including) the next occurrence of that same string quote character, or a line terminator, or end of file. The usual escape sequences such as &lt;code&gt;&quot;\n&quot;&lt;/code&gt; and &lt;code&gt;&quot;\t&quot;&lt;/code&gt; are recognized and converted to single characters as the string is parsed.</source>
          <target state="translated">文字列引用文字が検出されると、文字列が認識され、文字列引用文字の後（含まない）、同じ文字列引用文字が次に出現する（含まない）、または行終了文字までのすべての文字で構成されます。 、またはファイルの終わり。 &lt;code&gt;&quot;\n&quot;&lt;/code&gt; や &lt;code&gt;&quot;\t&quot;&lt;/code&gt; などの通常のエスケープシーケンスは、文字列が解析されるときに認識され、単一の文字に変換されます。</target>
        </trans-unit>
        <trans-unit id="9282cd8e98665287e6b1f89eff4485a0a4410646" translate="yes" xml:space="preserve">
          <source>If a style name field is not one of the valid style strings, it is interpreted as part of the font name, and the default style is used.</source>
          <target state="translated">スタイル名フィールドが有効なスタイル文字列のいずれかでない場合は、それがフォント名の一部として解釈され、デフォルトのスタイルが用いられます。</target>
        </trans-unit>
        <trans-unit id="b339629857a7b6f3977e054ffb46a3342349d262" translate="yes" xml:space="preserve">
          <source>If a suitable MIDI port is not available, the Receiver is retrieved from an installed synthesizer.</source>
          <target state="translated">適切な MIDI ポートが利用できない場合、レシーバはインストールされているシンセサイザーから取得します。</target>
        </trans-unit>
        <trans-unit id="cee086fbf4e72f394e2cd369d7a1a31214c885ef" translate="yes" xml:space="preserve">
          <source>If a superinterface is a parameterized type, the &lt;code&gt;Type&lt;/code&gt; object returned for it must accurately reflect the actual type parameters used in the source code. The parameterized type representing each superinterface is created if it had not been created before. See the declaration of &lt;a href=&quot;reflect/parameterizedtype&quot;&gt;&lt;code&gt;ParameterizedType&lt;/code&gt;&lt;/a&gt; for the semantics of the creation process for parameterized types.</source>
          <target state="translated">スーパーインターフェイスがパラメータ化された型である場合、返される &lt;code&gt;Type&lt;/code&gt; オブジェクトは、ソースコードで使用される実際の型パラメータを正確に反映する必要があります。各スーパーインターフェースを表すパラメーター化されたタイプは、それが以前に作成されていなかった場合に作成されます。&lt;a href=&quot;reflect/parameterizedtype&quot;&gt; &lt;code&gt;ParameterizedType&lt;/code&gt; &lt;/a&gt;れた型の作成プロセスのセマンティクスについては、ParameterizedTypeの宣言を参照してください。</target>
        </trans-unit>
        <trans-unit id="1534d214fc89bef5391048993cff1403fb779faa" translate="yes" xml:space="preserve">
          <source>If a supported attribute-value is specified in this attribute set, it will take precedence over the API settings for this print() operation only. The following behaviour is specified for PageFormat: If a client uses the Printable interface, then the &lt;code&gt;attributes&lt;/code&gt; parameter to this method is examined for attributes which specify media (by size), orientation, and imageable area, and those are used to construct a new PageFormat which is passed to the Printable object's print() method. See &lt;a href=&quot;printable&quot;&gt;&lt;code&gt;Printable&lt;/code&gt;&lt;/a&gt; for an explanation of the required behaviour of a Printable to ensure optimal printing via PrinterJob. For clients of the Pageable interface, the PageFormat will always be as supplied by that interface, on a per page basis.</source>
          <target state="translated">サポートされている属性値がこの属性セットで指定されている場合、このprint（）操作のAPI設定よりも優先されます。 PageFormatには、次の動作が指定されています。クライアントがPrintableインターフェイスを使用する場合、このメソッドの &lt;code&gt;attributes&lt;/code&gt; パラメーターは、メディア（サイズ）、方向、およびイメージ可能領域を指定する属性について調べられ、それらは新しいPageFormatを構築するために使用されます。これは、Printableオブジェクトのprint（）メソッドに渡されます。PrinterJobを介して最適な印刷を保証するために必要なPrintableの動作の説明については、&lt;a href=&quot;printable&quot;&gt; &lt;code&gt;Printable&lt;/code&gt; &lt;/a&gt;を参照してください。 Pageableインターフェイスのクライアントの場合、PageFormatは常に、ページごとに、そのインターフェイスによって提供されるとおりになります。</target>
        </trans-unit>
        <trans-unit id="155d85c2f3acb3ff96d47d191351e45387cd2b50" translate="yes" xml:space="preserve">
          <source>If a system property named &lt;code&gt;&quot;java.awt.headless&quot;&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; then the headless implementation of &lt;code&gt;Toolkit&lt;/code&gt; is used, otherwise the default platform-specific implementation of &lt;code&gt;Toolkit&lt;/code&gt; is used.</source>
          <target state="translated">名前のシステムプロパティ場合は &lt;code&gt;&quot;java.awt.headless&quot;&lt;/code&gt; に設定されている &lt;code&gt;true&lt;/code&gt; その後のヘッドレス実装 &lt;code&gt;Toolkit&lt;/code&gt; 使用され、それ以外のデフォルトのプラットフォーム固有の実装 &lt;code&gt;Toolkit&lt;/code&gt; 使用されています。</target>
        </trans-unit>
        <trans-unit id="1a6f96de5e57069f6d14d17aca38943e0fdc8ff7" translate="yes" xml:space="preserve">
          <source>If a thread does not lock any object monitor or &lt;code&gt;lockedMonitors&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the returned &lt;code&gt;ThreadInfo&lt;/code&gt; object will have an empty &lt;code&gt;MonitorInfo&lt;/code&gt; array. Similarly, if a thread does not lock any synchronizer or &lt;code&gt;lockedSynchronizers&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the returned &lt;code&gt;ThreadInfo&lt;/code&gt; object will have an empty &lt;code&gt;LockInfo&lt;/code&gt; array.</source>
          <target state="translated">スレッドがオブジェクトモニターをロックしないか、 &lt;code&gt;lockedMonitors&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合、返される &lt;code&gt;ThreadInfo&lt;/code&gt; オブジェクトには空の &lt;code&gt;MonitorInfo&lt;/code&gt; 配列が含まれます。同様に、スレッドがシンクロナイザーをロックしないか、 &lt;code&gt;lockedSynchronizers&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合、返される &lt;code&gt;ThreadInfo&lt;/code&gt; オブジェクトには空の &lt;code&gt;LockInfo&lt;/code&gt; 配列が含まれます。</target>
        </trans-unit>
        <trans-unit id="423d67d62c33ea4b987acaba9861af6927d6c017" translate="yes" xml:space="preserve">
          <source>If a thread initiates the loading of the installed file system providers and another thread invokes a method that also attempts to load the providers then the method will block until the loading completes.</source>
          <target state="translated">スレッドがインストールされたファイルシステムプロバイダのロードを開始し、別のスレッドがプロバイダのロードを試みるメソッドを呼び出した場合、そのメソッドはロードが完了するまでブロックされます。</target>
        </trans-unit>
        <trans-unit id="c16eea84f6a093216a1f6035633219e642c6696f" translate="yes" xml:space="preserve">
          <source>If a thread is &lt;a href=&quot;../../../lang/thread#interrupt()&quot;&gt;interrupted&lt;/a&gt; while waiting then the wait will terminate, an &lt;a href=&quot;../../../lang/interruptedexception&quot;&gt;&lt;code&gt;InterruptedException&lt;/code&gt;&lt;/a&gt; will be thrown, and the thread's interrupted status will be cleared.</source>
          <target state="translated">待機中にスレッドが&lt;a href=&quot;../../../lang/thread#interrupt()&quot;&gt;中断さ&lt;/a&gt;れると、待機は終了し、&lt;a href=&quot;../../../lang/interruptedexception&quot;&gt; &lt;code&gt;InterruptedException&lt;/code&gt; &lt;/a&gt;がスローされ、スレッドの中断ステータスがクリアされます。</target>
        </trans-unit>
        <trans-unit id="c7ba95dc1b6c41c9659ab72fa979fc5c3b29d122" translate="yes" xml:space="preserve">
          <source>If a thread is &lt;a href=&quot;../../../lang/thread#interrupt--&quot;&gt;interrupted&lt;/a&gt; while waiting then the wait will terminate, an &lt;a href=&quot;../../../lang/interruptedexception&quot;&gt;&lt;code&gt;InterruptedException&lt;/code&gt;&lt;/a&gt; will be thrown, and the thread's interrupted status will be cleared.</source>
          <target state="translated">待機中にスレッドが&lt;a href=&quot;../../../lang/thread#interrupt--&quot;&gt;中断さ&lt;/a&gt;れると、待機が終了し、&lt;a href=&quot;../../../lang/interruptedexception&quot;&gt; &lt;code&gt;InterruptedException&lt;/code&gt; &lt;/a&gt;がスローされ、スレッドの中断ステータスがクリアされます。</target>
        </trans-unit>
        <trans-unit id="26eeddc8ed4e366f2633c02e1ace6b55601c08d7" translate="yes" xml:space="preserve">
          <source>If a thread is blocked in an I/O operation on an interruptible channel then another thread may invoke the blocked thread's &lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt;&lt;code&gt;interrupt&lt;/code&gt;&lt;/a&gt; method. This will cause the channel to be closed, the blocked thread to receive a &lt;a href=&quot;closedbyinterruptexception&quot;&gt;&lt;code&gt;ClosedByInterruptException&lt;/code&gt;&lt;/a&gt;, and the blocked thread's interrupt status to be set.</source>
          <target state="translated">割り込み可能なチャネルでのI / O操作でスレッドがブロックされた場合、別のスレッドがブロックされたスレッドの&lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt; &lt;code&gt;interrupt&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことがあります。これにより、チャネルが閉じられ、ブロックされたスレッドが&lt;a href=&quot;closedbyinterruptexception&quot;&gt; &lt;code&gt;ClosedByInterruptException&lt;/code&gt; &lt;/a&gt;を受け取り、ブロックされたスレッドの割り込みステータスが設定されます。</target>
        </trans-unit>
        <trans-unit id="9af6babb2d89b7b1bcb5f61c939d4682bb0b8bf3" translate="yes" xml:space="preserve">
          <source>If a thread is blocked in an I/O operation on an interruptible channel then another thread may invoke the blocked thread's &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;&lt;code&gt;interrupt&lt;/code&gt;&lt;/a&gt; method. This will cause the channel to be closed, the blocked thread to receive a &lt;a href=&quot;closedbyinterruptexception&quot;&gt;&lt;code&gt;ClosedByInterruptException&lt;/code&gt;&lt;/a&gt;, and the blocked thread's interrupt status to be set.</source>
          <target state="translated">割り込み可能なチャネルのI / O操作でスレッドがブロックされている場合、別のスレッドがブロックされているスレッドの&lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt; &lt;code&gt;interrupt&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことがあります。これにより、チャネルが閉じられ、ブロックされたスレッドが&lt;a href=&quot;closedbyinterruptexception&quot;&gt; &lt;code&gt;ClosedByInterruptException&lt;/code&gt; &lt;/a&gt;を受け取り、ブロックされたスレッドの割り込みステータスが設定されます。</target>
        </trans-unit>
        <trans-unit id="b319d96f8fb779e6cf6dbc96644a4c37d14e3fed" translate="yes" xml:space="preserve">
          <source>If a thread is blocked in an I/O operation on an interruptible channel then another thread may invoke the channel's &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method. This will cause the blocked thread to receive an &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">割り込み可能なチャネルでのI / O操作でスレッドがブロックされた場合、別のスレッドがチャネルの&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドを呼び出す可能性があります。これにより、ブロックされたスレッドは&lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; &lt;/a&gt;を受け取ります。</target>
        </trans-unit>
        <trans-unit id="fd99bc1eee5eed72f1e348ec811d11b7678f072e" translate="yes" xml:space="preserve">
          <source>If a thread is blocked in an I/O operation on an interruptible channel then another thread may invoke the channel's &lt;a href=&quot;interruptiblechannel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method. This will cause the blocked thread to receive an &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">割り込み可能なチャネルのI / O操作でスレッドがブロックされている場合、別のスレッドがチャネルの&lt;a href=&quot;interruptiblechannel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことがあります。これにより、ブロックされたスレッドは&lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; &lt;/a&gt;を受け取ります。</target>
        </trans-unit>
        <trans-unit id="741c512b0e9856c5e2dfc36c34abb9cce44c9e8d" translate="yes" xml:space="preserve">
          <source>If a thread is currently blocked in one of this selector's selection methods then it is interrupted as if by invoking the selector's &lt;a href=&quot;#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このセレクターの選択メソッドの1つでスレッドが現在ブロックされている場合、セレクターの&lt;a href=&quot;#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すかのようにスレッドが中断されます。</target>
        </trans-unit>
        <trans-unit id="da330aea3c98594d1083e77da98a318f71baeb0d" translate="yes" xml:space="preserve">
          <source>If a thread is currently blocked in one of this selector's selection methods then it is interrupted as if by invoking the selector's &lt;a href=&quot;selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このセレクターの選択メソッドの1つでスレッドが現在ブロックされている場合、セレクターの&lt;a href=&quot;selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによってスレッドが中断されます。</target>
        </trans-unit>
        <trans-unit id="dd825fe40f49db3b150afa3490d105cbd6aabd48" translate="yes" xml:space="preserve">
          <source>If a thread is currently blocked in the &lt;a href=&quot;#take()&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#poll(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/a&gt; methods waiting for a key to be queued then it immediately receives a &lt;a href=&quot;closedwatchserviceexception&quot;&gt;&lt;code&gt;ClosedWatchServiceException&lt;/code&gt;&lt;/a&gt;. Any valid keys associated with this watch service are &lt;a href=&quot;watchkey#isValid()&quot;&gt;&lt;code&gt;invalidated&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">キーがキューに入れられるのを待っているスレッドが&lt;a href=&quot;#take()&quot;&gt; &lt;code&gt;take&lt;/code&gt; &lt;/a&gt;メソッドまたは&lt;a href=&quot;#poll(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;poll&lt;/code&gt; &lt;/a&gt;メソッドで現在ブロックされている場合、スレッドはすぐに&lt;a href=&quot;closedwatchserviceexception&quot;&gt; &lt;code&gt;ClosedWatchServiceException&lt;/code&gt; を受け取り&lt;/a&gt;ます。この時計のサービスに関連付けられている任意の有効なキーは&lt;a href=&quot;watchkey#isValid()&quot;&gt; &lt;code&gt;invalidated&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5afbadf14eba91b88bef9af2e17ba1b04cf7b04" translate="yes" xml:space="preserve">
          <source>If a thread is currently blocked in the &lt;a href=&quot;watchservice#take--&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;watchservice#poll-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;poll&lt;/code&gt;&lt;/a&gt; methods waiting for a key to be queued then it immediately receives a &lt;a href=&quot;closedwatchserviceexception&quot;&gt;&lt;code&gt;ClosedWatchServiceException&lt;/code&gt;&lt;/a&gt;. Any valid keys associated with this watch service are &lt;a href=&quot;watchkey#isValid--&quot;&gt;&lt;code&gt;invalidated&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">キーがキューに入れられるのを待機している&lt;a href=&quot;watchservice#take--&quot;&gt; &lt;code&gt;take&lt;/code&gt; &lt;/a&gt;メソッドまたは&lt;a href=&quot;watchservice#poll-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;poll&lt;/code&gt; &lt;/a&gt;メソッドでスレッドが現在ブロックされている場合、スレッドはすぐに&lt;a href=&quot;closedwatchserviceexception&quot;&gt; &lt;code&gt;ClosedWatchServiceException&lt;/code&gt; を受け取り&lt;/a&gt;ます。この監視サービスに関連付けられている有効なキーは&lt;a href=&quot;watchkey#isValid--&quot;&gt; &lt;code&gt;invalidated&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="79a80fec9ac0e51a906db8a969589f57b8d53771" translate="yes" xml:space="preserve">
          <source>If a thread of the given ID is not alive or does not exist, this method will return &lt;code&gt;null&lt;/code&gt;. A thread is alive if it has been started and has not yet died.</source>
          <target state="translated">指定されたIDのスレッドが存在しないか存在しない場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。スレッドが開始されていて、まだ死んでいない場合、そのスレッドは生きています。</target>
        </trans-unit>
        <trans-unit id="c7367fdf45de9116c0531a4eb673c46e4df10f0d" translate="yes" xml:space="preserve">
          <source>If a thread's interrupt status is already set and it invokes a blocking I/O operation upon a channel then the channel will be closed and the thread will immediately receive a &lt;a href=&quot;closedbyinterruptexception&quot;&gt;&lt;code&gt;ClosedByInterruptException&lt;/code&gt;&lt;/a&gt;; its interrupt status will remain set.</source>
          <target state="translated">スレッドの割り込みステータスがすでに設定されていて、チャネルでブロッキングI / O操作を呼び出す場合、チャネルは閉じられ、スレッドはすぐに&lt;a href=&quot;closedbyinterruptexception&quot;&gt; &lt;code&gt;ClosedByInterruptException&lt;/code&gt; を受け取り&lt;/a&gt;ます。その割り込みステータスは設定されたままになります。</target>
        </trans-unit>
        <trans-unit id="f20c8ec4cbcd889326c0ec36148d75b1de4b78c0" translate="yes" xml:space="preserve">
          <source>If a timeout is specified and the timeout elapses before the operation completes then it completes with the exception &lt;a href=&quot;interruptedbytimeoutexception&quot;&gt;&lt;code&gt;InterruptedByTimeoutException&lt;/code&gt;&lt;/a&gt;. Where a timeout occurs, and the implementation cannot guarantee that bytes have not been read, or will not be read from the channel into the given buffers, then further attempts to read from the channel will cause an unspecific runtime exception to be thrown.</source>
          <target state="translated">タイムアウトが指定されていて、操作が完了する前にタイムアウトが経過すると、&lt;a href=&quot;interruptedbytimeoutexception&quot;&gt; &lt;code&gt;InterruptedByTimeoutException&lt;/code&gt; &lt;/a&gt;例外が発生して完了します。タイムアウトが発生し、実装がバイトが読み取られなかったこと、またはチャネルから特定のバッファに読み取られないことを保証できない場合、チャネルからさらに読み取ろうとすると、不特定の実行時例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="085511ee4e6f8838601b8420555dabe5caf417db" translate="yes" xml:space="preserve">
          <source>If a timeout is specified and the timeout elapses before the operation completes then it completes with the exception &lt;a href=&quot;interruptedbytimeoutexception&quot;&gt;&lt;code&gt;InterruptedByTimeoutException&lt;/code&gt;&lt;/a&gt;. Where a timeout occurs, and the implementation cannot guarantee that bytes have not been written, or will not be written to the channel from the given buffer, then further attempts to write to the channel will cause an unspecific runtime exception to be thrown.</source>
          <target state="translated">タイムアウトが指定されていて、操作が完了する前にタイムアウトが経過すると、&lt;a href=&quot;interruptedbytimeoutexception&quot;&gt; &lt;code&gt;InterruptedByTimeoutException&lt;/code&gt; &lt;/a&gt;例外が発生して完了します。タイムアウトが発生し、実装がバイトが書き込まれていない、または指定されたバッファーからチャネルに書き込まれないことを保証できない場合、チャネルへの書き込みをさらに試行すると、不特定のランタイム例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="d1e6a9ea34cc15cb7dc234bc610d3da7fd2fd1d7" translate="yes" xml:space="preserve">
          <source>If a timeout is specified and the timeout elapses before the operation completes then it completes with the exception &lt;a href=&quot;interruptedbytimeoutexception&quot;&gt;&lt;code&gt;InterruptedByTimeoutException&lt;/code&gt;&lt;/a&gt;. Where a timeout occurs, and the implementation cannot guarantee that bytes have not been written, or will not be written to the channel from the given buffers, then further attempts to write to the channel will cause an unspecific runtime exception to be thrown.</source>
          <target state="translated">タイムアウトが指定されていて、操作が完了する前にタイムアウトが経過すると、&lt;a href=&quot;interruptedbytimeoutexception&quot;&gt; &lt;code&gt;InterruptedByTimeoutException&lt;/code&gt; &lt;/a&gt;例外が発生して完了します。タイムアウトが発生し、実装がバイトが書き込まれていない、または特定のバッファーからチャネルに書き込まれないことを保証できない場合、チャネルへの書き込みをさらに試行すると、不特定のランタイム例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="7aeea9b2c990269d554f71236286a06879279f31" translate="yes" xml:space="preserve">
          <source>If a timeout is specified and the timeout elapses before the operation completes then the operation completes with the exception &lt;a href=&quot;interruptedbytimeoutexception&quot;&gt;&lt;code&gt;InterruptedByTimeoutException&lt;/code&gt;&lt;/a&gt;. Where a timeout occurs, and the implementation cannot guarantee that bytes have not been read, or will not be read from the channel into the given buffer, then further attempts to read from the channel will cause an unspecific runtime exception to be thrown.</source>
          <target state="translated">タイムアウトが指定され、操作が完了する前にタイムアウトが経過すると、操作は例外&lt;a href=&quot;interruptedbytimeoutexception&quot;&gt; &lt;code&gt;InterruptedByTimeoutException&lt;/code&gt; で&lt;/a&gt;完了します。タイムアウトが発生し、実装がバイトが読み取られなかったこと、またはチャネルから指定されたバッファーに読み取られないことを保証できない場合、チャネルからさらに読み取ろうとすると、不特定のランタイム例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="b059429e7b4fbc4030cc099662067f32b6c7ab30" translate="yes" xml:space="preserve">
          <source>If a type is annotated with this annotation type, compilers are required to generate an error message unless:</source>
          <target state="translated">型がこのアノテーション型でアノテーションされている場合、コンパイラは、このアノテーション型でアノテーションされていない限り、エラーメッセージを生成する必要があります。</target>
        </trans-unit>
        <trans-unit id="30a46db240d4202d821461d90b26ad19eebaf078" translate="yes" xml:space="preserve">
          <source>If a type map is explicitly supplied to a method that can perform custom mapping, that type map supersedes the connection's type map.</source>
          <target state="translated">カスタムマッピングを実行できるメソッドにタイプマップが明示的に指定されている場合、そのタイプマップは接続のタイプマップよりも優先されます。</target>
        </trans-unit>
        <trans-unit id="cec90847ba71497dbb8ac58a8a03e00d0d13737f" translate="yes" xml:space="preserve">
          <source>If a value attribute is not specified for a FORM input element of type &quot;reset&quot;, then this default string is used.</source>
          <target state="translated">タイプ &quot;reset &quot;のFORM入力要素にvalue属性が指定されていない場合は、このデフォルトの文字列が使用されます。</target>
        </trans-unit>
        <trans-unit id="2b0d011a6bf2d15325c296c503e117073be6dd16" translate="yes" xml:space="preserve">
          <source>If a value attribute is not specified for a FORM input element of type &quot;submit&quot;, then this default string is used.</source>
          <target state="translated">タイプ &quot;submit &quot;のFORM入力要素にvalue属性が指定されていない場合は、このデフォルトの文字列が使用されます。</target>
        </trans-unit>
        <trans-unit id="f9870e38cea09b6406ac14017d5c924cd67267c1" translate="yes" xml:space="preserve">
          <source>If a value is not present, returns &lt;code&gt;true&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">値が存在しない場合は &lt;code&gt;true&lt;/code&gt; を返し、存在しない場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="860fe4e2923a6695add73192da6784b1d700c654" translate="yes" xml:space="preserve">
          <source>If a value is present in this &lt;code&gt;Optional&lt;/code&gt;, returns the value, otherwise throws &lt;code&gt;NoSuchElementException&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Optional&lt;/code&gt; に値が存在する場合は値を返し、それ以外の場合は &lt;code&gt;NoSuchElementException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="ac19fb5ed0433a6a84bbf9870c3d0508394c1ec9" translate="yes" xml:space="preserve">
          <source>If a value is present in this &lt;code&gt;OptionalDouble&lt;/code&gt;, returns the value, otherwise throws &lt;code&gt;NoSuchElementException&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;OptionalDouble&lt;/code&gt; に値が存在する場合は値を返し、それ以外の場合は &lt;code&gt;NoSuchElementException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="77f8284a88fc486cd8c49e73e5157ec4382cced0" translate="yes" xml:space="preserve">
          <source>If a value is present in this &lt;code&gt;OptionalInt&lt;/code&gt;, returns the value, otherwise throws &lt;code&gt;NoSuchElementException&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;OptionalInt&lt;/code&gt; に値が存在する場合は値を返し、そうでない場合は &lt;code&gt;NoSuchElementException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="b442beaf0679fd03d92130f9d3a16dff8abc1a47" translate="yes" xml:space="preserve">
          <source>If a value is present in this &lt;code&gt;OptionalLong&lt;/code&gt;, returns the value, otherwise throws &lt;code&gt;NoSuchElementException&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;OptionalLong&lt;/code&gt; に値が存在する場合は値を返し、そうでない場合は &lt;code&gt;NoSuchElementException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="b332c643a29d3b80d91478304a9a05ebfa61d296" translate="yes" xml:space="preserve">
          <source>If a value is present the result must include its string representation in the result. Empty and present &lt;code&gt;Optional&lt;/code&gt;s must be unambiguously differentiable.</source>
          <target state="translated">値が存在する場合、結果にはその文字列表現を結果に含める必要があります。空と現在の &lt;code&gt;Optional&lt;/code&gt; は、明確に区別できる必要があります。</target>
        </trans-unit>
        <trans-unit id="bc6398511731b6bf47b59801abf764ae618774f0" translate="yes" xml:space="preserve">
          <source>If a value is present the result must include its string representation in the result. Empty and present &lt;code&gt;OptionalDouble&lt;/code&gt;s must be unambiguously differentiable.</source>
          <target state="translated">値が存在する場合、結果にはその文字列表現を結果に含める必要があります。空と現在の &lt;code&gt;OptionalDouble&lt;/code&gt; は、明確に区別できる必要があります。</target>
        </trans-unit>
        <trans-unit id="d13847496ad6374cf53cad3b090b540d8f97008c" translate="yes" xml:space="preserve">
          <source>If a value is present the result must include its string representation in the result. Empty and present &lt;code&gt;OptionalInt&lt;/code&gt;s must be unambiguously differentiable.</source>
          <target state="translated">値が存在する場合、結果にはその文字列表現を結果に含める必要があります。空と現在の &lt;code&gt;OptionalInt&lt;/code&gt; は、明確に区別できる必要があります。</target>
        </trans-unit>
        <trans-unit id="32534cbdba6aa1b3be53d4a1e4bd73d3c27b87e1" translate="yes" xml:space="preserve">
          <source>If a value is present the result must include its string representation in the result. Empty and present &lt;code&gt;OptionalLong&lt;/code&gt;s must be unambiguously differentiable.</source>
          <target state="translated">値が存在する場合、結果にはその文字列表現を結果に含める必要があります。空と現在の &lt;code&gt;OptionalLong&lt;/code&gt; は、明確に区別できる必要があります。</target>
        </trans-unit>
        <trans-unit id="d4e270a2bbe380815af7730e0b32eed7b9b310b0" translate="yes" xml:space="preserve">
          <source>If a value is present the result must include its string representation in the result. Empty and present Optionals must be unambiguously differentiable.</source>
          <target state="translated">値が存在する場合は、結果にその文字列表現を含める必要があります。空の値と現在の値がある場合は、明確に微分可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="53843db157010fe9437f6ec6848ceaa2431d68a8" translate="yes" xml:space="preserve">
          <source>If a value is present the result must include its string representation in the result. Empty and present instances must be unambiguously differentiable.</source>
          <target state="translated">値が存在する場合は、結果にその文字列表現を含めなければなりません。空のインスタンスと存在するインスタンスは、明確に区別できなければなりません。</target>
        </trans-unit>
        <trans-unit id="0706b2c7911a55318a829716b41ba2d3be31b10d" translate="yes" xml:space="preserve">
          <source>If a value is present, and the value matches the given predicate, return an &lt;code&gt;Optional&lt;/code&gt; describing the value, otherwise return an empty &lt;code&gt;Optional&lt;/code&gt;.</source>
          <target state="translated">値が存在し、その値が指定された述語と一致する場合、値を説明する &lt;code&gt;Optional&lt;/code&gt; を返します。それ以外の場合は、空の &lt;code&gt;Optional&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f1f67ed14ddaf89a0a9fae6c94b2add61c02da04" translate="yes" xml:space="preserve">
          <source>If a value is present, and the value matches the given predicate, returns an &lt;code&gt;Optional&lt;/code&gt; describing the value, otherwise returns an empty &lt;code&gt;Optional&lt;/code&gt;.</source>
          <target state="translated">値が存在し、その値が指定された述語と一致する場合は、値を説明する &lt;code&gt;Optional&lt;/code&gt; を返します。それ以外の場合は、空の &lt;code&gt;Optional&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="891603f3a0de1e1f312f4666b625f9fb23d2e9c9" translate="yes" xml:space="preserve">
          <source>If a value is present, apply the provided &lt;code&gt;Optional&lt;/code&gt;-bearing mapping function to it, return that result, otherwise return an empty &lt;code&gt;Optional&lt;/code&gt;. This method is similar to &lt;a href=&quot;optional#map-java.util.function.Function-&quot;&gt;&lt;code&gt;map(Function)&lt;/code&gt;&lt;/a&gt;, but the provided mapper is one whose result is already an &lt;code&gt;Optional&lt;/code&gt;, and if invoked, &lt;code&gt;flatMap&lt;/code&gt; does not wrap it with an additional &lt;code&gt;Optional&lt;/code&gt;.</source>
          <target state="translated">値が存在する場合は、提供された &lt;code&gt;Optional&lt;/code&gt; ベアリングマッピング関数をその値に適用し、その結果を返します。それ以外の場合は、空の &lt;code&gt;Optional&lt;/code&gt; を返します。このメソッドは&lt;a href=&quot;optional#map-java.util.function.Function-&quot;&gt; &lt;code&gt;map(Function)&lt;/code&gt; に&lt;/a&gt;似ていますが、提供されるマッパーは結果がすでに &lt;code&gt;Optional&lt;/code&gt; であるマッパーであり、呼び出された場合、 &lt;code&gt;flatMap&lt;/code&gt; は追加の &lt;code&gt;Optional&lt;/code&gt; でラップしません。</target>
        </trans-unit>
        <trans-unit id="a8b5560d2bb98c2edc06f003311054df22294d95" translate="yes" xml:space="preserve">
          <source>If a value is present, apply the provided mapping function to it, and if the result is non-null, return an &lt;code&gt;Optional&lt;/code&gt; describing the result. Otherwise return an empty &lt;code&gt;Optional&lt;/code&gt;.</source>
          <target state="translated">値が存在する場合は、提供されたマッピング関数をその値に適用し、結果がnull以外の場合は、結果を説明する &lt;code&gt;Optional&lt;/code&gt; を返します。それ以外の場合は、空の &lt;code&gt;Optional&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="fad40f63b1a2a9bdb013e89c0f84f329771e8703" translate="yes" xml:space="preserve">
          <source>If a value is present, invoke the specified consumer with the value, otherwise do nothing.</source>
          <target state="translated">値が存在する場合は、その値で指定されたコンシューマを呼び出し、そうでない場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="5d567ac49757fc0782070c29f442b2ed3c10a3dd" translate="yes" xml:space="preserve">
          <source>If a value is present, performs the given action with the value, otherwise does nothing.</source>
          <target state="translated">値が存在する場合、その値で指定されたアクションを実行し、そうでない場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="80f1d15f081a557c0c89dfe542e08e6466937a4a" translate="yes" xml:space="preserve">
          <source>If a value is present, performs the given action with the value, otherwise performs the given empty-based action.</source>
          <target state="translated">値が存在する場合、その値を使用して指定されたアクションを実行し、そうでない場合は空ベースのアクションを実行します。</target>
        </trans-unit>
        <trans-unit id="7c76eb4f4aed61ec0dcaef4e6193ded7df1448b7" translate="yes" xml:space="preserve">
          <source>If a value is present, returns &lt;code&gt;true&lt;/code&gt;, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">値が存在する場合は &lt;code&gt;true&lt;/code&gt; を返し、存在しない場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="990df4fbcc05f42f66d4bdbbd223d271fecafc58" translate="yes" xml:space="preserve">
          <source>If a value is present, returns a sequential &lt;a href=&quot;stream/doublestream&quot;&gt;&lt;code&gt;DoubleStream&lt;/code&gt;&lt;/a&gt; containing only that value, otherwise returns an empty &lt;code&gt;DoubleStream&lt;/code&gt;.</source>
          <target state="translated">値が存在する場合は、その値のみを含むシーケンシャル&lt;a href=&quot;stream/doublestream&quot;&gt; &lt;code&gt;DoubleStream&lt;/code&gt; &lt;/a&gt;を返します。それ以外の場合は、空の &lt;code&gt;DoubleStream&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="385631a2bb5e8e2699a3121cde109d9d5c428c7c" translate="yes" xml:space="preserve">
          <source>If a value is present, returns a sequential &lt;a href=&quot;stream/intstream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/a&gt; containing only that value, otherwise returns an empty &lt;code&gt;IntStream&lt;/code&gt;.</source>
          <target state="translated">値が存在する場合は、その値のみを含むシーケンシャル&lt;a href=&quot;stream/intstream&quot;&gt; &lt;code&gt;IntStream&lt;/code&gt; &lt;/a&gt;を返します。それ以外の場合は、空の &lt;code&gt;IntStream&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="866cb2164afa2f09d3d5f20e37c35481f6eb4412" translate="yes" xml:space="preserve">
          <source>If a value is present, returns a sequential &lt;a href=&quot;stream/longstream&quot;&gt;&lt;code&gt;LongStream&lt;/code&gt;&lt;/a&gt; containing only that value, otherwise returns an empty &lt;code&gt;LongStream&lt;/code&gt;.</source>
          <target state="translated">値が存在する場合は、その値のみを含むシーケンシャル&lt;a href=&quot;stream/longstream&quot;&gt; &lt;code&gt;LongStream&lt;/code&gt; &lt;/a&gt;を返します。それ以外の場合は、空の &lt;code&gt;LongStream&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5d3bb8d4c843a69020ffe62321e3f9054e0b137e" translate="yes" xml:space="preserve">
          <source>If a value is present, returns a sequential &lt;a href=&quot;stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; containing only that value, otherwise returns an empty &lt;code&gt;Stream&lt;/code&gt;.</source>
          <target state="translated">値が存在する場合は、その値のみを含むシーケンシャル&lt;a href=&quot;stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt;を返します。それ以外の場合は、空の &lt;code&gt;Stream&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="80b22e4088b80520ac0af98bec76415b35276b8f" translate="yes" xml:space="preserve">
          <source>If a value is present, returns an &lt;code&gt;Optional&lt;/code&gt; describing (as if by &lt;a href=&quot;#ofNullable(T)&quot;&gt;&lt;code&gt;ofNullable(T)&lt;/code&gt;&lt;/a&gt;) the result of applying the given mapping function to the value, otherwise returns an empty &lt;code&gt;Optional&lt;/code&gt;.</source>
          <target state="translated">値が存在する場合は、指定されたマッピング関数を値に適用した結果を&lt;a href=&quot;#ofNullable(T)&quot;&gt; &lt;code&gt;ofNullable(T)&lt;/code&gt; &lt;/a&gt;）説明する &lt;code&gt;Optional&lt;/code&gt; を返します。それ以外の場合は、空の &lt;code&gt;Optional&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="abd4d4cf8da044effb78b2adaaded70498203413" translate="yes" xml:space="preserve">
          <source>If a value is present, returns an &lt;code&gt;Optional&lt;/code&gt; describing the value, otherwise returns an &lt;code&gt;Optional&lt;/code&gt; produced by the supplying function.</source>
          <target state="translated">値が存在する場合は、値を説明する &lt;code&gt;Optional&lt;/code&gt; を返します。それ以外の場合は、指定する関数によって生成された &lt;code&gt;Optional&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="d4b5e82c51b8cf385fd5db9aef6045fbce1f3044" translate="yes" xml:space="preserve">
          <source>If a value is present, returns the result of applying the given &lt;code&gt;Optional&lt;/code&gt;-bearing mapping function to the value, otherwise returns an empty &lt;code&gt;Optional&lt;/code&gt;.</source>
          <target state="translated">値が存在する場合は、指定された &lt;code&gt;Optional&lt;/code&gt; ベアリングマッピング関数を値に適用した結果を返します。それ以外の場合は、空の &lt;code&gt;Optional&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="f14d878112134ffc9ff4d14f0e3174e5576c31bb" translate="yes" xml:space="preserve">
          <source>If a value is present, returns the value, otherwise returns &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">値が存在する場合は値を返し、存在しない場合は &lt;code&gt;other&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="8c50641617ef0d200da8db393fec3586af58ae1c" translate="yes" xml:space="preserve">
          <source>If a value is present, returns the value, otherwise returns the result produced by the supplying function.</source>
          <target state="translated">値が存在する場合はその値を返し、そうでない場合は供給関数によって生成された結果を返します。</target>
        </trans-unit>
        <trans-unit id="56c949f365a2890532569468d612418290144d9c" translate="yes" xml:space="preserve">
          <source>If a value is present, returns the value, otherwise throws &lt;code&gt;NoSuchElementException&lt;/code&gt;.</source>
          <target state="translated">値が存在する場合は値を返し、存在しない場合は &lt;code&gt;NoSuchElementException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="ae9bed738425dfb5a5a5674c68f5303dddc05d71" translate="yes" xml:space="preserve">
          <source>If a value is present, returns the value, otherwise throws an exception produced by the exception supplying function.</source>
          <target state="translated">値が存在する場合はその値を返し、そうでない場合は例外供給関数によって生成された例外をスローします。</target>
        </trans-unit>
        <trans-unit id="8eddee0588c954a17deb099f9dd61de2515231b4" translate="yes" xml:space="preserve">
          <source>If a value of null is specified for the Set, this Component inherits the Set from its parent. If all ancestors of this Component have null specified for the Set, then the current KeyboardFocusManager's default Set is used.</source>
          <target state="translated">Setにnullを指定すると、このコンポーネントは親からSetを継承します。このコンポーネントのすべての祖先が Set に null を指定している場合は、現在の KeyboardFocusManager の既定の Set が使用されます。</target>
        </trans-unit>
        <trans-unit id="0f16c24760d5749166bc98a390f507c2d3216615" translate="yes" xml:space="preserve">
          <source>If a value of null is specified for the Set, this Container inherits the Set from its parent. If all ancestors of this Container have null specified for the Set, then the current KeyboardFocusManager's default Set is used.</source>
          <target state="translated">Set に null が指定されている場合、このコンテナはその親から Set を継承します。このコンテナのすべての祖先が Set に null を指定している場合は、現在の KeyboardFocusManager のデフォルト Set が使用されます。</target>
        </trans-unit>
        <trans-unit id="387ee9cb7e9e0be3dd6915fcd912184178dc89a4" translate="yes" xml:space="preserve">
          <source>If a vertical scrollbar is needed, i.e. if the viewport's extent height is smaller than its view height or if the &lt;code&gt;displayPolicy&lt;/code&gt; is ALWAYS, it's treated like the row header with respect to its dimensions and is made visible.</source>
          <target state="translated">垂直スクロールバーが必要な場合、つまりビューポートの範囲の高さがビューの高さよりも小さい場合、または &lt;code&gt;displayPolicy&lt;/code&gt; がALWAYSの場合、サイズに関しては行ヘッダーのように扱われ、表示されます。</target>
        </trans-unit>
        <trans-unit id="8fc4cf82efa4121c970d3bd205365e50de294c4b" translate="yes" xml:space="preserve">
          <source>If a visitor returns a result of &lt;code&gt;null&lt;/code&gt; then &lt;code&gt;
 NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">訪問者が結果を返す場合 &lt;code&gt;null&lt;/code&gt; その後、 &lt;code&gt; NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="92cb4d374f2fe9448ca335ac55aeaabe71a1f569" translate="yes" xml:space="preserve">
          <source>If a visitor returns a result of &lt;code&gt;null&lt;/code&gt; then &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">訪問者が結果を返す場合 &lt;code&gt;null&lt;/code&gt; その後、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="5e01b98873a0cadbbe64c47b2b726716a54e9964" translate="yes" xml:space="preserve">
          <source>If a watched file is not located on a local storage device then it is implementation specific if changes to the file can be detected. In particular, it is not required that changes to files carried out on remote systems be detected.</source>
          <target state="translated">ウォッチされたファイルがローカルストレージデバイス上にない場合、ファイルへの変更が検出できるかどうかは実装に依存します。特に、リモートシステム上で実行されるファイルへの変更が検出されることは必須ではありません。</target>
        </trans-unit>
        <trans-unit id="5650a3db9a7e2000acade2b25c2be5c4db496f6e" translate="yes" xml:space="preserve">
          <source>If a writer isRepairingNamespaces it will create a namespace declaration on the current StartElement for any attribute that does not currently have a namespace declaration in scope. If the StartElement has a uri but no prefix specified a prefix will be assigned, if the prefix has not been declared in a parent of the current StartElement it will be declared on the current StartElement. If the defaultNamespace is bound and in scope and the default namespace matches the URI of the attribute or StartElement QName no prefix will be assigned.</source>
          <target state="translated">ライターがRepairingNamespacesである場合には、現在スコープ内に名前空間宣言を持っていない属性に対して、現在のStartElement上に名前空間宣言を作成します。StartElement が uri を持っているが接頭辞が指定されていない場合には接頭辞が代入され、接頭辞が現在の StartElement の親で宣言されていない場合には、現在の StartElement 上で宣言されます。defaultNamespace がスコープ内でバインドされていて、デフォルトの名前空間が attribute または StartElement QName の URI と一致している場合は、接頭辞は代入されません。</target>
        </trans-unit>
        <trans-unit id="73a81112b02af25fafd5aeb53509af8b9467d422" translate="yes" xml:space="preserve">
          <source>If aContainer is &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html#FocusTraversalPolicyProviders&quot;&gt;focus traversal policy provider&lt;/a&gt;, the focus is always transferred down-cycle.</source>
          <target state="translated">aContainerが&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html#FocusTraversalPolicyProviders&quot;&gt;フォーカストラバーサルポリシープロバイダーである&lt;/a&gt;場合、フォーカスは常にダウンサイクルで転送されます。</target>
        </trans-unit>
        <trans-unit id="bee200d444da7e51810a8f81ba5dffe16cc316fc" translate="yes" xml:space="preserve">
          <source>If addr specifies an IPv4 address an instance of Inet4Address will be returned; otherwise, an instance of Inet6Address will be returned.</source>
          <target state="translated">addr が IPv4 アドレスを指定した場合は、Inet4Address のインスタンスが返され、そうでない場合は Inet6Address のインスタンスが返されます。</target>
        </trans-unit>
        <trans-unit id="923186511eab92209b32f15d3fb01aaacb2e442c" translate="yes" xml:space="preserve">
          <source>If adjacent parsing is active, then parsing must match exactly the specified number of digits in both strict and lenient modes. In addition, no positive or negative sign is permitted.</source>
          <target state="translated">隣接解析が有効な場合、解析は厳密なモードと寛容なモードの両方で指定された桁数に正確に一致しなければなりません。さらに、正負の符号は許されません。</target>
        </trans-unit>
        <trans-unit id="200dbc311565e1132ebe3228cefc3d9aab1c06b2" translate="yes" xml:space="preserve">
          <source>If adjacent runs of text with the same &lt;code&gt;InputMethodHighlight&lt;/code&gt; need to be rendered separately, the &lt;code&gt;InputMethodHighlights&lt;/code&gt; should be wrapped in &lt;code&gt;Annotation&lt;/code&gt; instances.</source>
          <target state="translated">同じ &lt;code&gt;InputMethodHighlight&lt;/code&gt; を持つ隣接するテキストの実行を個別にレンダリングする必要がある場合は、 &lt;code&gt;InputMethodHighlights&lt;/code&gt; を &lt;code&gt;Annotation&lt;/code&gt; インスタンスでラップする必要があります。</target>
        </trans-unit>
        <trans-unit id="716099ad8a55cb2a7c2b3773b52c94f64ee203cb" translate="yes" xml:space="preserve">
          <source>If after the window location has been calculated, the upper, left, or right edge of the window is out of the screen, then the window is located in such a way that the upper, left, or right edge of the window coincides with the corresponding edge of the screen. If both left and right edges of the window are out of the screen, the window is placed at the left side of the screen. The similar placement will occur if both top and bottom edges are out of the screen. In that case, the window is placed at the top side of the screen.</source>
          <target state="translated">ウィンドウの位置が計算された後、ウィンドウの上端、左端、または右端が画面から外れている場合、ウィンドウの上端、左端、または右端が対応する画面の端と一致するようにウィンドウが配置される。ウィンドウの左端と右端の両方が画面からはみ出している場合、ウィンドウは画面の左側に配置される。同様の配置は、上端と下端の両方が画面からはみ出している場合に発生します。その場合、ウィンドウは画面の上側に配置されます。</target>
        </trans-unit>
        <trans-unit id="44d02905089e1694a5a3552ec8bae0d4cda874a1" translate="yes" xml:space="preserve">
          <source>If agent classes need to link to classes in platform (or other) modules that are not in the boot layer then the application may need to be started in a way that ensures that these modules are in the boot layer. In the JDK implementation for example, the &lt;code&gt;--add-modules&lt;/code&gt; command line option can be used to add modules to the set of root modules to resolve at startup.</source>
          <target state="translated">エージェントクラスがブートレイヤーにないプラットフォーム（または他の）モジュールのクラスにリンクする必要がある場合、これらのモジュールがブートレイヤーにあることを保証する方法でアプリケーションを起動する必要がある場合があります。たとえば、JDK実装では、 &lt;code&gt;--add-modules&lt;/code&gt; コマンドラインオプションを使用して、起動時に解決するルートモジュールのセットにモジュールを追加できます。</target>
        </trans-unit>
        <trans-unit id="bfa34a3f881c3ffb5525522b340dad76550fa33e" translate="yes" xml:space="preserve">
          <source>If all inputs are null, the &lt;code&gt;LSParser&lt;/code&gt; will report a &lt;code&gt;DOMError&lt;/code&gt; with its &lt;code&gt;DOMError.type&lt;/code&gt; set to &lt;code&gt;&quot;no-input-specified&quot;&lt;/code&gt; and its &lt;code&gt;DOMError.severity&lt;/code&gt; set to &lt;code&gt;DOMError.SEVERITY_FATAL_ERROR&lt;/code&gt;.</source>
          <target state="translated">すべての入力がnullの場合、 &lt;code&gt;LSParser&lt;/code&gt; が報告されます &lt;code&gt;DOMError&lt;/code&gt; がしてて &lt;code&gt;DOMError.type&lt;/code&gt; のにセット &lt;code&gt;&quot;no-input-specified&quot;&lt;/code&gt; とその &lt;code&gt;DOMError.severity&lt;/code&gt; のにセット &lt;code&gt;DOMError.SEVERITY_FATAL_ERROR&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8c6c1fd23bed92157c4876b59e8a94de5ba0fe9" translate="yes" xml:space="preserve">
          <source>If all of the keys in the key set at the start of this step have empty interest sets then neither the selected-key set nor any of the keys' ready-operation sets will be updated.</source>
          <target state="translated">このステップの開始時に鍵セットに含まれるすべての鍵が空のインタレストセットを持っていた場合、選択された鍵セットとその鍵の操作可能セットのいずれも更新されない。</target>
        </trans-unit>
        <trans-unit id="785bd1a03946e5c11649c06831e14c3b158e51f0" translate="yes" xml:space="preserve">
          <source>If all samples of both source and destination Rasters are of integral type and less than or equal to 32 bits in size, then calling this method is equivalent to executing the following code for all &lt;code&gt;x,y&lt;/code&gt; addresses valid in both Rasters.</source>
          <target state="translated">ソースラスターと宛先ラスターの両方のすべてのサンプルが整数型で、サイズが32ビット以下の場合、このメソッドを呼び出すことは、両方のラスターで有効なすべての &lt;code&gt;x,y&lt;/code&gt; アドレスに対して次のコードを実行することと同じです。</target>
        </trans-unit>
        <trans-unit id="f4ad16a03d874b1099d86cc284527a5d0fd4f2c9" translate="yes" xml:space="preserve">
          <source>If all that is desired is the simple identity transformation of a source to a result, then &lt;a href=&quot;transformerfactory&quot;&gt;&lt;code&gt;TransformerFactory&lt;/code&gt;&lt;/a&gt; provides a &lt;a href=&quot;transformerfactory#newTransformer()&quot;&gt;&lt;code&gt;TransformerFactory.newTransformer()&lt;/code&gt;&lt;/a&gt; method with no arguments. This method creates a Transformer that effectively copies the source to the result. This method may be used to create a DOM from SAX events or to create an XML or HTML stream from a DOM or SAX events.</source>
          <target state="translated">ソースから結果への単純なID変換だけが必要な場合、&lt;a href=&quot;transformerfactory&quot;&gt; &lt;code&gt;TransformerFactory&lt;/code&gt; &lt;/a&gt;は引数なしで&lt;a href=&quot;transformerfactory#newTransformer()&quot;&gt; &lt;code&gt;TransformerFactory.newTransformer()&lt;/code&gt; &lt;/a&gt;メソッドを提供します。このメソッドは、ソースを結果に効果的にコピーするTransformerを作成します。このメソッドは、SAXイベントからDOMを作成するため、またはDOMまたはSAXイベントからXMLまたはHTMLストリームを作成するために使用できます。</target>
        </trans-unit>
        <trans-unit id="478f44b721763a191efa4a005ca8cf8c23dac1b2" translate="yes" xml:space="preserve">
          <source>If all the date objects being compared are in the same chronology, then the additional chronology stage is not required and only the local date is used. To compare the dates of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, including dates in two different chronologies, use &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">比較されるすべての日付オブジェクトが同じ年代順である場合、追加の年代順ステージは不要であり、ローカル日付のみが使用されます。2つの異なる年代の日付を含む2つの &lt;code&gt;TemporalAccessor&lt;/code&gt; インスタンスの日付を比較するには、コンパ&lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt;としてChronoField.EPOCH_DAYを使用します。</target>
        </trans-unit>
        <trans-unit id="920032b96bedf78cb11745b4b01ea2b9da62f86c" translate="yes" xml:space="preserve">
          <source>If all the date-time objects being compared are in the same chronology, then the additional chronology stage is not required and only the local date-time is used.</source>
          <target state="translated">比較されるすべてのデータタイム・オブジェクトが同じクロノロジーにある場合、追加のクロノロジー・ステージは必要なく、ローカル・データタイムのみが使用されます。</target>
        </trans-unit>
        <trans-unit id="91e24b45b1050248e3d9b0f32a1bfe41649a4f37" translate="yes" xml:space="preserve">
          <source>If all the date-time objects being compared are in the same chronology, then the additional chronology stage is not required.</source>
          <target state="translated">比較対象となるすべてのデータタイム・オブジェクトが同じクロノロジーにある場合、追加のクロノロジー・ステージは必要ありません。</target>
        </trans-unit>
        <trans-unit id="eed6c18a7529e057741cc5ea4bc802b1033492a2" translate="yes" xml:space="preserve">
          <source>If all the date-times being compared are instances of &lt;code&gt;LocalDateTime&lt;/code&gt;, then the comparison will be entirely based on the date-time. If some dates being compared are in different chronologies, then the chronology is also considered, see &lt;a href=&quot;chrono/chronolocaldatetime#compareTo(java.time.chrono.ChronoLocalDateTime)&quot;&gt;&lt;code&gt;ChronoLocalDateTime.compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較されるすべての日時が &lt;code&gt;LocalDateTime&lt;/code&gt; のインスタンスである場合、比較は完全に日時に基づいて行われます。比較されているいくつかの日付が異なる年表である場合、年表も考慮されます&lt;a href=&quot;chrono/chronolocaldatetime#compareTo(java.time.chrono.ChronoLocalDateTime)&quot;&gt; &lt;code&gt;ChronoLocalDateTime.compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7af80a78ccebdf694054065e68649e1c92533dff" translate="yes" xml:space="preserve">
          <source>If all the date-times being compared are instances of &lt;code&gt;LocalDateTime&lt;/code&gt;, then the comparison will be entirely based on the date-time. If some dates being compared are in different chronologies, then the chronology is also considered, see &lt;a href=&quot;chrono/chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt;&lt;code&gt;ChronoLocalDateTime.compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較されるすべての日時が &lt;code&gt;LocalDateTime&lt;/code&gt; のインスタンスである場合、比較は完全に日時に基づいて行われます。比較されるいくつかの日付が異なる年代順である場合、年代順も考慮されます&lt;a href=&quot;chrono/chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt; &lt;code&gt;ChronoLocalDateTime.compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c8b68f4d96414def1c9a247a1feae8028274ccf8" translate="yes" xml:space="preserve">
          <source>If all the dates being compared are instances of &lt;code&gt;LocalDate&lt;/code&gt;, then the comparison will be entirely based on the date. If some dates being compared are in different chronologies, then the chronology is also considered, see &lt;a href=&quot;chrono/chronolocaldate#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt;&lt;code&gt;ChronoLocalDate.compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較されるすべての日付が &lt;code&gt;LocalDate&lt;/code&gt; のインスタンスである場合、比較は完全に日付に基づいて行われます。比較されているいくつかの日付が異なる年代順である場合、年代順も考慮されます&lt;a href=&quot;chrono/chronolocaldate#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt; &lt;code&gt;ChronoLocalDate.compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c70daeec02ec422b3471ddc6193b4b37b8cb8342" translate="yes" xml:space="preserve">
          <source>If all the dates being compared are instances of &lt;code&gt;LocalDate&lt;/code&gt;, then the comparison will be entirely based on the date. If some dates being compared are in different chronologies, then the chronology is also considered, see &lt;a href=&quot;chrono/chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;ChronoLocalDate.compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">比較されるすべての日付が &lt;code&gt;LocalDate&lt;/code&gt; のインスタンスである場合、比較は完全に日付に基づいて行われます。比較されるいくつかの日付が異なる年代順である場合、年代順も考慮されます&lt;a href=&quot;chrono/chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;ChronoLocalDate.compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="95938a0cd815321f6453791f7f4283d94220e212" translate="yes" xml:space="preserve">
          <source>If all the docs have the same binding specified, then any value of &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; makes sense, and the printer's processing depends on the &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; value:</source>
          <target state="translated">すべてのドキュメントに同じバインディングが指定されている場合、&lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; の&lt;/a&gt;値はすべて意味があり、プリンターの処理は&lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; の&lt;/a&gt;値に依存します。</target>
        </trans-unit>
        <trans-unit id="7869c5e4ed330a875f3cd70b80530f1cdf968256" translate="yes" xml:space="preserve">
          <source>If all the docs have the same number up value</source>
          <target state="translated">すべてのドキュメントが同じ数字のアップ値を持つ場合</target>
        </trans-unit>
        <trans-unit id="323feabb33d09245620f68d33109a728cd260051" translate="yes" xml:space="preserve">
          <source>If all the docs have the same page ranges specified, then any value of &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; makes sense, and the printer's processing depends on the &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; value:</source>
          <target state="translated">すべてのドキュメントに同じページ範囲が指定されている場合、&lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; の&lt;/a&gt;値はすべて意味があり、プリンターの処理は&lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; の&lt;/a&gt;値に依存します。</target>
        </trans-unit>
        <trans-unit id="7632f9c77b81ad5d1b5d6f09a7736f43de381a75" translate="yes" xml:space="preserve">
          <source>If all the docs have the same sheet collation specified, then the following combinations of &lt;code&gt;SheetCollate&lt;/code&gt; and &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; are permitted, and the printer reports an error when the job is submitted if any other combination is specified:</source>
          <target state="translated">すべてのドキュメントに同じシート照合順序が指定されている場合、 &lt;code&gt;SheetCollate&lt;/code&gt; と&lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; の&lt;/a&gt;次の組み合わせが許可され、他の組み合わせが指定されている場合、ジョブが送信されるとプリンターはエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="43de23ce23841ef0c6a6fa16c30e0adac32dff5f" translate="yes" xml:space="preserve">
          <source>If all the docs have the same sheet collation specified, then the following combinations of SheetCollate and &lt;a href=&quot;multipledocumenthandling&quot;&gt;&lt;code&gt;MultipleDocumentHandling&lt;/code&gt;&lt;/a&gt; are permitted, and the printer reports an error when the job is submitted if any other combination is specified:</source>
          <target state="translated">すべてのドキュメントに同じシート照合が指定されている場合、SheetCollat​​eと&lt;a href=&quot;multipledocumenthandling&quot;&gt; &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; の&lt;/a&gt;次の組み合わせが許可され、他の組み合わせが指定されている場合、ジョブが送信されるとプリンターはエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="53f4aefa8b3b18b801db7105e517f135c3160808" translate="yes" xml:space="preserve">
          <source>If all the docs have the same sides value</source>
          <target state="translated">すべてのドキュメントが同じ辺の値を持つ場合</target>
        </trans-unit>
        <trans-unit id="3b7bb19ce2d8fc8ee789c0716e2955f9d1adbc31" translate="yes" xml:space="preserve">
          <source>If all the pred functions always return true, no fini function is ever invoked, and the loop cannot exit except by throwing an exception.</source>
          <target state="translated">すべての pred 関数が常に真を返す場合、fini 関数は呼び出されず、例外を投げる以外はループを終了することはできません。</target>
        </trans-unit>
        <trans-unit id="e5b294fc85ac6bc7caf05040784ae5fbc6fd93b1" translate="yes" xml:space="preserve">
          <source>If all the proxy interfaces are in &lt;em&gt;exported&lt;/em&gt; or &lt;em&gt;open&lt;/em&gt; packages:</source>
          <target state="translated">すべてのプロキシインターフェイスが&lt;em&gt;エクスポートさ&lt;/em&gt;&lt;em&gt;れた&lt;/em&gt;パッケージまたは&lt;em&gt;開いている&lt;/em&gt;パッケージに含まれている場合：</target>
        </trans-unit>
        <trans-unit id="13b164fb9c908e01dba066b8fc6c58bae1a8266f" translate="yes" xml:space="preserve">
          <source>If all the weights are zero, all the extra space appears between the grids of the cell and the left and right edges.</source>
          <target state="translated">すべての重みがゼロの場合、セルのグリッドと左右のエッジの間に余分なスペースが表示されます。</target>
        </trans-unit>
        <trans-unit id="75e3f80e58848d10fc7b05443ed5b045728e7ed1" translate="yes" xml:space="preserve">
          <source>If all the weights are zero, all the extra space appears between the grids of the cell and the top and bottom edges.</source>
          <target state="translated">すべての重みがゼロの場合、セルのグリッドと上下のエッジの間に余分なスペースが表示されます。</target>
        </trans-unit>
        <trans-unit id="eb8a32bf1903f2512087dd34b708c9f237e4fae2" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;#parsedExcessDays()&quot;&gt;excess number of days&lt;/a&gt; was parsed then it is added to the date if a date is available.</source>
          <target state="translated">場合&lt;a href=&quot;#parsedExcessDays()&quot;&gt;日の超過数が&lt;/a&gt;解析された日付が利用可能な場合、日付に追加されます。</target>
        </trans-unit>
        <trans-unit id="4098503fbcb241fe10627044b2064dc72f141550" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; is thrown when accessing the directory after returned from this method, it is wrapped in an &lt;a href=&quot;../../io/uncheckedioexception&quot;&gt;&lt;code&gt;UncheckedIOException&lt;/code&gt;&lt;/a&gt; which will be thrown from the method that caused the access to take place.</source>
          <target state="translated">場合&lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;スローされたディレクトリにアクセスするとき、このメソッドから返された後、それがに包まれ&lt;a href=&quot;../../io/uncheckedioexception&quot;&gt; &lt;code&gt;UncheckedIOException&lt;/code&gt; &lt;/a&gt;アクセスは場所を取るために引き起こしたメソッドからスローされます。</target>
        </trans-unit>
        <trans-unit id="088dd2d19f784625275b483d3f0f4f2ddbb175e3" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; is thrown when accessing the directory after this method has returned, it is wrapped in an &lt;a href=&quot;../../io/uncheckedioexception&quot;&gt;&lt;code&gt;UncheckedIOException&lt;/code&gt;&lt;/a&gt; which will be thrown from the method that caused the access to take place.</source>
          <target state="translated">場合&lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;スローされたディレクトリにアクセスするとき、このメソッドが返された後、それがに包まれ&lt;a href=&quot;../../io/uncheckedioexception&quot;&gt; &lt;code&gt;UncheckedIOException&lt;/code&gt; &lt;/a&gt;アクセスは場所を取るために引き起こしたメソッドからスローされます。</target>
        </trans-unit>
        <trans-unit id="448273579cd0c1573f50adb27cc551f6240ac792" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;datetimeformatter#parsedExcessDays--&quot;&gt;excess number of days&lt;/a&gt; was parsed then it is added to the date if a date is available.</source>
          <target state="translated">場合&lt;a href=&quot;datetimeformatter#parsedExcessDays--&quot;&gt;日の超過数が&lt;/a&gt;解析された日付が利用可能な場合、日付に追加されます。</target>
        </trans-unit>
        <trans-unit id="f440d6e16437287ae444b44920a0eee99c549130" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; is thrown when accessing the underlying &lt;code&gt;BufferedReader&lt;/code&gt;, it is wrapped in an &lt;a href=&quot;uncheckedioexception&quot;&gt;&lt;code&gt;UncheckedIOException&lt;/code&gt;&lt;/a&gt; which will be thrown from the &lt;code&gt;Stream&lt;/code&gt; method that caused the read to take place. This method will return a Stream if invoked on a BufferedReader that is closed. Any operation on that stream that requires reading from the BufferedReader after it is closed, will cause an UncheckedIOException to be thrown.</source>
          <target state="translated">場合&lt;a href=&quot;ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;スローされる基本的なアクセスしたときに &lt;code&gt;BufferedReader&lt;/code&gt; のを、それがに包まれ&lt;a href=&quot;uncheckedioexception&quot;&gt; &lt;code&gt;UncheckedIOException&lt;/code&gt; &lt;/a&gt;からスローされます &lt;code&gt;Stream&lt;/code&gt; の読み取りが行わせ方法。このメソッドは、閉じられたBufferedReaderで呼び出されるとStreamを返します。ストリームが閉じられた後にBufferedReaderからの読み取りを必要とするそのストリームでの操作により、UncheckedIOExceptionがスローされます。</target>
        </trans-unit>
        <trans-unit id="959df27348a054da287e538a4f7d1a74313d32f5" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;@Target&lt;/code&gt; meta-annotation is not present on an annotation type &lt;code&gt;T&lt;/code&gt; , then an annotation of type &lt;code&gt;T&lt;/code&gt; may be written as a modifier for any declaration except a type parameter declaration.</source>
          <target state="translated">場合 &lt;code&gt;@Target&lt;/code&gt; のメタ注釈が注釈型で存在していない &lt;code&gt;T&lt;/code&gt; 、次いでタイプの注釈 &lt;code&gt;T&lt;/code&gt; は、型パラメータの宣言を除く任意の宣言のための改質剤として書かれてもよいです。</target>
        </trans-unit>
        <trans-unit id="8371b963c2b6f04360837c6404d40bc176c92b9b" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;@Target&lt;/code&gt; meta-annotation is present, the compiler will enforce the usage restrictions indicated by &lt;code&gt;ElementType&lt;/code&gt; enum constants, in line with JLS 9.7.4.</source>
          <target state="translated">場合 &lt;code&gt;@Target&lt;/code&gt; のメタ注釈が存在する場合、コンパイラは使用制限がで示さ施行されます &lt;code&gt;ElementType&lt;/code&gt; JLS 9.7.4に沿ったもので、列挙型の定数。</target>
        </trans-unit>
        <trans-unit id="0c49dc23b8bd2062de89ca86518931b5b9024793" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; has not been explicitly set, one will be set based on the &lt;code&gt;Class&lt;/code&gt; of the value type after &lt;code&gt;setValue&lt;/code&gt; has been invoked (assuming value is non-null). For example, in the following code an appropriate &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; and &lt;code&gt;AbstractFormatter&lt;/code&gt; will be created to handle formatting of numbers:</source>
          <target state="translated">&lt;code&gt;AbstractFormatterFactory&lt;/code&gt; が明示的に設定されていない場合、 &lt;code&gt;setValue&lt;/code&gt; が呼び出された後、値タイプの &lt;code&gt;Class&lt;/code&gt; に基づいて設定されます（値がnull以外であると想定）。たとえば、次のコードでは、数値のフォーマットを処理するために適切な &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; と &lt;code&gt;AbstractFormatter&lt;/code&gt; が作成されます。</target>
        </trans-unit>
        <trans-unit id="2413517d9fd5745a82ae6ddf00cd7489151ba27f" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;AffineTransform&lt;/code&gt; is passed to &lt;a href=&quot;#drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)&quot;&gt;&lt;code&gt;drawImage(Image, AffineTransform, ImageObserver)&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;AffineTransform&lt;/code&gt; is used to transform the bounding box from image space to user space. If no &lt;code&gt;AffineTransform&lt;/code&gt; is supplied, the bounding box is treated as if it is already in user space.</source>
          <target state="translated">場合 &lt;code&gt;AffineTransform&lt;/code&gt; 渡される&lt;a href=&quot;#drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)&quot;&gt; &lt;code&gt;drawImage(Image, AffineTransform, ImageObserver)&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;AffineTransform&lt;/code&gt; ユーザ空間に画像空間からバウンディングボックスを変換するために使用されます。 &lt;code&gt;AffineTransform&lt;/code&gt; が指定されていない場合、バウンディングボックスはすでにユーザースペースにあるかのように扱われます。</target>
        </trans-unit>
        <trans-unit id="9496a4d3cf27eda519ac141e2a00e405156b6ffb" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;IOException&lt;/code&gt; is not thrown, then the stream is reset to a fixed state that depends on the particular type of the input stream and how it was created. The bytes that will be supplied to subsequent callers of the &lt;code&gt;read&lt;/code&gt; method depend on the particular type of the input stream.</source>
          <target state="translated">&lt;code&gt;IOException&lt;/code&gt; がスローされない場合、ストリームは、入力ストリームの特定のタイプとその作成方法に依存する固定状態にリセットされます。 &lt;code&gt;read&lt;/code&gt; メソッドの後続の呼び出し元に提供されるバイトは、入力ストリームの特定のタイプによって異なります。</target>
        </trans-unit>
        <trans-unit id="8be497ebd5fad36819e8bdb92f6d004796dc73ce" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;IndexColorModel&lt;/code&gt; object has a transparency value of &lt;code&gt;Transparency.OPAQUE&lt;/code&gt;, then the &lt;code&gt;hasAlpha&lt;/code&gt; and &lt;code&gt;getNumComponents&lt;/code&gt; methods (both inherited from &lt;code&gt;ColorModel&lt;/code&gt;) return false and 3, respectively. For any other transparency value, &lt;code&gt;hasAlpha&lt;/code&gt; returns true and &lt;code&gt;getNumComponents&lt;/code&gt; returns 4.</source>
          <target state="translated">場合 &lt;code&gt;IndexColorModel&lt;/code&gt; ののオブジェクトが透明度の値を有する &lt;code&gt;Transparency.OPAQUE&lt;/code&gt; にし、次いで &lt;code&gt;hasAlpha&lt;/code&gt; は及び &lt;code&gt;getNumComponents&lt;/code&gt; 方法は、（両方ともから継承 &lt;code&gt;ColorModel&lt;/code&gt; それぞれリターン偽及び3）。その他の透明度の値の場合、 &lt;code&gt;hasAlpha&lt;/code&gt; はtrueを返し、 &lt;code&gt;getNumComponents&lt;/code&gt; は4を返します。</target>
        </trans-unit>
        <trans-unit id="6de50cf0b5b005c73f2b22f23092356cfbc265a6" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;Object&lt;/code&gt; reference was previously allowed, the previous settings are overwritten.</source>
          <target state="translated">場合は &lt;code&gt;Object&lt;/code&gt; 参照が以前に許可された、以前の設定は上書きされます。</target>
        </trans-unit>
        <trans-unit id="ce889769df21717dff5602aeddeab9f3a68fa96a" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;RMIServerImpl&lt;/code&gt; was supplied to the constructor, it is used.</source>
          <target state="translated">場合 &lt;code&gt;RMIServerImpl&lt;/code&gt; コンストラクタに供給し、それが使用されています。</target>
        </trans-unit>
        <trans-unit id="c147456e60cfbfb343d2b171d44a03397a71498d" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;optionType&lt;/code&gt; was specified to this &lt;code&gt;ConfirmationCallback&lt;/code&gt;, this option may be specified as a &lt;code&gt;defaultOption&lt;/code&gt; or returned as the selected index.</source>
          <target state="translated">この &lt;code&gt;ConfirmationCallback&lt;/code&gt; に &lt;code&gt;optionType&lt;/code&gt; が指定されている場合、このオプションは &lt;code&gt;defaultOption&lt;/code&gt; として指定されるか、選択されたインデックスとして返されます。</target>
        </trans-unit>
        <trans-unit id="8447b90738960e5c08b7001e6598b18a44c5ae38" translate="yes" xml:space="preserve">
          <source>If an ACL entry contains a &lt;a href=&quot;aclentry#principal()&quot;&gt;&lt;code&gt;user-principal&lt;/code&gt;&lt;/a&gt; that is not associated with the same provider as this attribute view then &lt;a href=&quot;../providermismatchexception&quot;&gt;&lt;code&gt;ProviderMismatchException&lt;/code&gt;&lt;/a&gt; is thrown. Additional validation, if any, is implementation dependent.</source>
          <target state="translated">ACLエントリに、この属性ビューと同じプロバイダーに関連付けられていない&lt;a href=&quot;aclentry#principal()&quot;&gt; &lt;code&gt;user-principal&lt;/code&gt; &lt;/a&gt;が含まれている場合、&lt;a href=&quot;../providermismatchexception&quot;&gt; &lt;code&gt;ProviderMismatchException&lt;/code&gt; &lt;/a&gt;がスローされます。追加の検証がある場合は、実装に依存します。</target>
        </trans-unit>
        <trans-unit id="bddc19f4e2a7499584504adbd2e120339e8a9d2c" translate="yes" xml:space="preserve">
          <source>If an ACL entry contains a &lt;a href=&quot;aclentry#principal--&quot;&gt;&lt;code&gt;user-principal&lt;/code&gt;&lt;/a&gt; that is not associated with the same provider as this attribute view then &lt;a href=&quot;../providermismatchexception&quot;&gt;&lt;code&gt;ProviderMismatchException&lt;/code&gt;&lt;/a&gt; is thrown. Additional validation, if any, is implementation dependent.</source>
          <target state="translated">ACLエントリに、この属性ビューと同じプロバイダーに関連付けられていない&lt;a href=&quot;aclentry#principal--&quot;&gt; &lt;code&gt;user-principal&lt;/code&gt; &lt;/a&gt;が含まれている場合、&lt;a href=&quot;../providermismatchexception&quot;&gt; &lt;code&gt;ProviderMismatchException&lt;/code&gt; &lt;/a&gt;がスローされます。追加の検証がある場合は、実装に依存します。</target>
        </trans-unit>
        <trans-unit id="6e691cd0ee7a41eeed3186a97648a8370581048b" translate="yes" xml:space="preserve">
          <source>If an I/O error is encountered when accessing the directory then it causes the &lt;code&gt;Iterator&lt;/code&gt;'s &lt;code&gt;hasNext&lt;/code&gt; or &lt;code&gt;next&lt;/code&gt; methods to throw &lt;a href=&quot;directoryiteratorexception&quot;&gt;&lt;code&gt;DirectoryIteratorException&lt;/code&gt;&lt;/a&gt; with the &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; as the cause. As stated above, the &lt;code&gt;hasNext&lt;/code&gt; method is guaranteed to read-ahead by at least one element. This means that if &lt;code&gt;hasNext&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;, and is followed by a call to the &lt;code&gt;next&lt;/code&gt; method, then it is guaranteed that the &lt;code&gt;next&lt;/code&gt; method will not fail with a &lt;code&gt;DirectoryIteratorException&lt;/code&gt;.</source>
          <target state="translated">ディレクトリにアクセスする際にI / Oエラーが発生した場合、それは原因 &lt;code&gt;Iterator&lt;/code&gt; さん &lt;code&gt;hasNext&lt;/code&gt; または &lt;code&gt;next&lt;/code&gt; スローするメソッドを&lt;a href=&quot;directoryiteratorexception&quot;&gt; &lt;code&gt;DirectoryIteratorException&lt;/code&gt; を&lt;/a&gt;して&lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; を&lt;/a&gt;原因として。上記のように、 &lt;code&gt;hasNext&lt;/code&gt; メソッドは少なくとも1つの要素によって先読みされることが保証されています。つまり、 &lt;code&gt;hasNext&lt;/code&gt; メソッドが &lt;code&gt;true&lt;/code&gt; を返し、その後に &lt;code&gt;next&lt;/code&gt; メソッドの呼び出しが続く場合、 &lt;code&gt;next&lt;/code&gt; メソッドが &lt;code&gt;DirectoryIteratorException&lt;/code&gt; で失敗しないことが保証されます。</target>
        </trans-unit>
        <trans-unit id="feeedb640cf4499009e04bb26412c9322b88b5ad" translate="yes" xml:space="preserve">
          <source>If an I/O error occurs reading from the file or writing to the output stream, then it may do so after some bytes have been read or written. Consequently the output stream may be in an inconsistent state. It is strongly recommended that the output stream be promptly closed if an I/O error occurs.</source>
          <target state="translated">ファイルからの読み込みや出力ストリームへの書き込みでI/Oエラーが発生した場合、いくつかのバイトが読み書きされた後に発生することがあります。その結果、出力ストリームが不整合な状態になることがあります。I/Oエラーが発生した場合は、速やかに出力ストリームを閉じることを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="9c872125a1307797d25e4f9f64998713cf5ca5f3" translate="yes" xml:space="preserve">
          <source>If an I/O error occurs reading from the input stream or writing to the file, then it may do so after the target file has been created and after some bytes have been read or written. Consequently the input stream may not be at end of stream and may be in an inconsistent state. It is strongly recommended that the input stream be promptly closed if an I/O error occurs.</source>
          <target state="translated">入力ストリームからの読み込みやファイルへの書き込みでI/Oエラーが発生した場合、対象のファイルが作成された後や、いくつかのバイトが読み書きされた後に発生する可能性があります。その結果、入力ストリームがストリームの終端に達しておらず、不整合な状態になっている可能性があります。I/Oエラーが発生した場合は、速やかに入力ストリームを閉じることを強く推奨します。</target>
        </trans-unit>
        <trans-unit id="e4515b55c84516838e1780f2824973489fcfac02" translate="yes" xml:space="preserve">
          <source>If an I/O error occurs reading from the input stream or writing to the output stream, then it may do so after some bytes have been read or written. Consequently the input stream may not be at end of stream and one, or both, streams may be in an inconsistent state. It is strongly recommended that both streams be promptly closed if an I/O error occurs.</source>
          <target state="translated">入力ストリームからの読み込みや出力ストリームへの書き込みで I/O エラーが発生した場合、一部のバイトが読み書きされた後に発生することがあります。その結果、入力ストリームがストリームの終端にない場合があり、一方または両方のストリームが矛盾した状態になる場合があります。I/Oエラーが発生した場合は、両方のストリームを速やかに閉じることを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="c6575b29bb7b7702708e4556bb126e11740cace5" translate="yes" xml:space="preserve">
          <source>If an I/O error occurs reading from the input stream, then it may do so after some, but not all, bytes have been read. Consequently the input stream may not be at end of stream and may be in an inconsistent state. It is strongly recommended that the stream be promptly closed if an I/O error occurs.</source>
          <target state="translated">入力ストリームからの読み取りで I/O エラーが発生した場合、一部のバイトではなく、すべてのバイトが読み込まれた後にエラーが発生することがあります。その結果、入力ストリームはストリームの終端にない可能性があり、不整合な状態になっている可能性があります。I/Oエラーが発生した場合は、速やかにストリームを閉じることを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="8650ce7705399aaaa8cc71478fcf996136dfacc1" translate="yes" xml:space="preserve">
          <source>If an I/O error occurs reading from the input stream, then it may do so after some, but not all, bytes of &lt;code&gt;b&lt;/code&gt; have been updated with data from the input stream. Consequently the input stream and &lt;code&gt;b&lt;/code&gt; may be in an inconsistent state. It is strongly recommended that the stream be promptly closed if an I/O error occurs.</source>
          <target state="translated">入力ストリームからの読み取りでI / Oエラーが発生した場合、 &lt;code&gt;b&lt;/code&gt; のすべてではないが一部のバイトが入力ストリームからのデータで更新された後に発生する可能性があります。その結果、入力ストリームと &lt;code&gt;b&lt;/code&gt; が不整合な状態になる可能性があります。I / Oエラーが発生した場合は、ストリームをすぐに閉じることを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="b10fec173abaf89ed742106df0192bdc5dd2cd41" translate="yes" xml:space="preserve">
          <source>If an I/O error occurs reading from the reader or writing to the writer, then it may do so after some characters have been read or written. Consequently the reader may not be at end of the stream and one, or both, streams may be in an inconsistent state. It is strongly recommended that both streams be promptly closed if an I/O error occurs.</source>
          <target state="translated">リーダからの読み取りまたはライタへの書き込みで I/O エラーが発生した場合、一部の文字が読み書きされた後に発生する可能性があります。その結果、リーダはストリームの最後にいない可能性があり、一方または両方のストリームが矛盾した状態になる可能性があります。I/Oエラーが発生した場合は、両方のストリームを速やかに閉じることを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="3e0e0bbd8cf71d8f39745254a8443c1668c16acb" translate="yes" xml:space="preserve">
          <source>If an InitialContextFactoryBuilder has been installed, it is used to create the factory for creating the initial context</source>
          <target state="translated">InitialContextFactoryBuilderがインストールされている場合は、それを使用して初期コンテキスト</target>
        </trans-unit>
        <trans-unit id="190c966c8992a3839001e7e1af1d2b89e9457c04" translate="yes" xml:space="preserve">
          <source>If an InitialContextFactoryBuilder has been installed, it is used to create the factory for creating the initial context. Otherwise, the class specified in the &lt;code&gt;Context.INITIAL_CONTEXT_FACTORY&lt;/code&gt; environment property is used. Note that an initial context factory (an object that implements the InitialContextFactory interface) must be public and must have a public constructor that accepts no arguments.</source>
          <target state="translated">InitialContextFactoryBuilderがインストールされている場合は、それを使用して、初期コンテキストを作成するためのファクトリを作成します。それ以外の場合は、 &lt;code&gt;Context.INITIAL_CONTEXT_FACTORY&lt;/code&gt; 環境プロパティで指定されたクラスが使用されます。初期コンテキストファクトリ（InitialContextFactoryインターフェースを実装するオブジェクト）はパブリックである必要があり、引数を受け入れないパブリックコンストラクターが必要であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="98657208ee304eaeabe25e126ff14f176c167883" translate="yes" xml:space="preserve">
          <source>If an MBean implements the interface &lt;a href=&quot;privateclassloader&quot;&gt;&lt;code&gt;PrivateClassLoader&lt;/code&gt;&lt;/a&gt;, then it is not added to the class loader repository. The class &lt;a href=&quot;privatemlet&quot;&gt;&lt;code&gt;PrivateMLet&lt;/code&gt;&lt;/a&gt; is a subclass of &lt;code&gt;MLet&lt;/code&gt; that implements &lt;code&gt;PrivateClassLoader&lt;/code&gt;.</source>
          <target state="translated">MBeanが&lt;a href=&quot;privateclassloader&quot;&gt; &lt;code&gt;PrivateClassLoader&lt;/code&gt; &lt;/a&gt;インターフェースを実装する場合、それはクラスローダーリポジトリに追加されません。クラス&lt;a href=&quot;privatemlet&quot;&gt; &lt;code&gt;PrivateMLet&lt;/code&gt; は&lt;/a&gt;のサブクラスである &lt;code&gt;MLet&lt;/code&gt; を実装し &lt;code&gt;PrivateClassLoader&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="f7dbdf0d0215e39ffb9e056dc435071a7e3d1afd" translate="yes" xml:space="preserve">
          <source>If an ObjectName is not a pattern, it must contain at least one key with its associated value.</source>
          <target state="translated">ObjectName がパターンでない場合は、関連する値を持つ少なくとも 1 つのキーを含む必要があります。</target>
        </trans-unit>
        <trans-unit id="58773dafdf455bae89181c8eface9c51e941a81b" translate="yes" xml:space="preserve">
          <source>If an RMI connector client or server receives from its peer an instance of a class that it does not know, and if dynamic code downloading is active for the RMI connection, then the class can be downloaded from a codebase specified by the peer. &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=rmi_guide&quot;&gt;Java RMI Guide&lt;/a&gt; explains this in more detail.</source>
          <target state="translated">RMIコネクタクライアントまたはサーバーがピアから不明なクラスのインスタンスを受信し、動的コードダウンロードがRMI接続に対してアクティブである場合、クラスはピアによって指定されたコードベースからダウンロードできます。&lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=rmi_guide&quot;&gt;Java RMIガイドで&lt;/a&gt;は、これについて詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="e0bc3775989ff9a0fa2129381bf0e75ba0c93374" translate="yes" xml:space="preserve">
          <source>If an RMI connector client or server receives from its peer an instance of a class that it does not know, and if dynamic code downloading is active for the RMI connection, then the class can be downloaded from a codebase specified by the peer. The article &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/rmi/codebase.html&quot;&gt;&lt;em&gt;Dynamic code downloading using Java RMI&lt;/em&gt;&lt;/a&gt; explains this in more detail.</source>
          <target state="translated">RMIコネクタのクライアントまたはサーバーが、ピアから知らないクラスのインスタンスを受信し、RMI接続で動的コードダウンロードがアクティブな場合、クラスはピアによって指定されたコードベースからダウンロードできます。これについては、&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/rmi/codebase.html&quot;&gt;&lt;em&gt;Java RMIを使用した動的コードのダウンロード&lt;/em&gt;&lt;/a&gt;の記事で詳しく説明されています。</target>
        </trans-unit>
        <trans-unit id="08988225aef79e54029028850710dc91fcab9d17" translate="yes" xml:space="preserve">
          <source>If an action has already been registered for the receiving container, with the same charCode and the same modifiers, &lt;code&gt;anAction&lt;/code&gt; will replace the action.</source>
          <target state="translated">同じcharCodeと同じ修飾子を使用してアクションが受信コンテナーに既に登録されている場合、 &lt;code&gt;anAction&lt;/code&gt; がアクションを置き換えます。</target>
        </trans-unit>
        <trans-unit id="ac4ee4e3be7f792562359278f4f57ab7faea7f57" translate="yes" xml:space="preserve">
          <source>If an alpha sample is present, it corresponds the last index.</source>
          <target state="translated">アルファサンプルが存在する場合は、最後のインデックスに対応します。</target>
        </trans-unit>
        <trans-unit id="9c4c5268bcffbf9c0c5b98ecb4ed28911043818e" translate="yes" xml:space="preserve">
          <source>If an annotation of type</source>
          <target state="translated">タイプのアノテーションが</target>
        </trans-unit>
        <trans-unit id="9df83510632408ed0d5232c4209c863ed75fc2b2" translate="yes" xml:space="preserve">
          <source>If an annotation returned by a method in this interface contains (directly or indirectly) a &lt;a href=&quot;../class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt;-valued member referring to a class that is not accessible in this VM, attempting to read the class by calling the relevant Class-returning method on the returned annotation will result in a &lt;a href=&quot;../typenotpresentexception&quot;&gt;&lt;code&gt;TypeNotPresentException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェースのメソッドによって返された注釈に、このVMでアクセスできないクラスを参照する&lt;a href=&quot;../class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;値のメンバーが（直接的または間接的に）含まれている場合、返された注釈で関連するクラスを返すメソッドを呼び出してクラスを読み取ろうとしますなります&lt;a href=&quot;../typenotpresentexception&quot;&gt; &lt;code&gt;TypeNotPresentException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0227ca62999d931b56d6f6658a6e345f41f26f21" translate="yes" xml:space="preserve">
          <source>If an annotation type</source>
          <target state="translated">アノテーションタイプが</target>
        </trans-unit>
        <trans-unit id="ed99bca3e6f592b88e87557055d253e0c0b22f1a" translate="yes" xml:space="preserve">
          <source>If an application caches method handles for broad sharing, it should use &lt;code&gt;publicLookup()&lt;/code&gt; to create them. If there is a lookup of &lt;code&gt;Class.forName&lt;/code&gt;, it will fail, and the application must take appropriate action in that case. It may be that a later lookup, perhaps during the invocation of a bootstrap method, can incorporate the specific identity of the caller, making the method accessible.</source>
          <target state="translated">アプリケーションが広い共有のためにメソッドハンドルをキャッシュする場合は、 &lt;code&gt;publicLookup()&lt;/code&gt; を使用してそれらを作成する必要があります。 &lt;code&gt;Class.forName&lt;/code&gt; のルックアップがあると失敗し、アプリケーションはその場合に適切なアクションを実行する必要があります。ブートストラップメソッドの呼び出し中など、後のルックアップで呼び出し元の特定のIDを組み込んで、メソッドにアクセスできるようにすることが考えられます。</target>
        </trans-unit>
        <trans-unit id="517b0d95c98c17f7230f34f43d8c177b399282df" translate="yes" xml:space="preserve">
          <source>If an application does &lt;em&gt;not&lt;/em&gt; register its own custom &lt;code&gt;ErrorListener&lt;/code&gt;, the default &lt;code&gt;ErrorListener&lt;/code&gt; is used which reports all warnings and errors to &lt;code&gt;System.err&lt;/code&gt; and does not throw any &lt;code&gt;Exception&lt;/code&gt;s. Applications are &lt;em&gt;strongly&lt;/em&gt; encouraged to register and use &lt;code&gt;ErrorListener&lt;/code&gt;s that insure proper behavior for warnings and errors.</source>
          <target state="translated">アプリケーションが独自のカスタム &lt;code&gt;ErrorListener&lt;/code&gt; を登録し&lt;em&gt;ない&lt;/em&gt;場合は、デフォルトの &lt;code&gt;ErrorListener&lt;/code&gt; が使用され、すべての警告とエラーが &lt;code&gt;System.err&lt;/code&gt; に報告され、 &lt;code&gt;Exception&lt;/code&gt; はスローされません。アプリケーションは、警告とエラーの適切な動作を保証する &lt;code&gt;ErrorListener&lt;/code&gt; を登録して使用することを&lt;em&gt;強くお&lt;/em&gt;勧めします。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0dbacd8fdd96aa697bee57950998d0a96108abc1" translate="yes" xml:space="preserve">
          <source>If an application or a system is internationalized and provides localized resources for multiple locales, it sometimes needs to find one or more locales (or language tags) which meet each user's specific preferences. Note that a term &quot;language tag&quot; is used interchangeably with &quot;locale&quot; in this locale matching documentation.</source>
          <target state="translated">アプリケーションやシステムが国際化されていて、複数のロケールに対応したリソースを提供している場合、 それぞれのユーザの好みに合ったロケール (または言語タグ)を見つけなければならないことがあります。このロケールマッチングの文書では、&quot;言語タグ &quot;という用語は &quot;ロケール &quot;と同じ意味で使われていることに注意しましょう。</target>
        </trans-unit>
        <trans-unit id="95627f13c311b8727d628cb2f5a559e1e571b551" translate="yes" xml:space="preserve">
          <source>If an application wants to perform some action based on a button being pressed and released, it should implement &lt;code&gt;ActionListener&lt;/code&gt; and register the new listener to receive events from this button, by calling the button's &lt;code&gt;addActionListener&lt;/code&gt; method. The application can make use of the button's action command as a messaging protocol.</source>
          <target state="translated">アプリケーションがボタンの押下と解放に基づいて何らかのアクションを実行する場合は、ボタンの &lt;code&gt;addActionListener&lt;/code&gt; メソッドを呼び出して、 &lt;code&gt;ActionListener&lt;/code&gt; を実装し、このボタンからイベントを受信するように新しいリスナーを登録する必要があります。アプリケーションは、ボタンのアクションコマンドをメッセージングプロトコルとして利用できます。</target>
        </trans-unit>
        <trans-unit id="b2dd9b01f32a7dbe5dfc9a2ba9f8a990861694b9" translate="yes" xml:space="preserve">
          <source>If an application wants to perform some action based on an item in this list being selected or activated by the user, it should implement &lt;code&gt;ItemListener&lt;/code&gt; or &lt;code&gt;ActionListener&lt;/code&gt; as appropriate and register the new listener to receive events from this list.</source>
          <target state="translated">アプリケーションが、ユーザーが選択またはアクティブ化したこのリスト内のアイテムに基づいて何らかのアクションを実行する場合は、 &lt;code&gt;ActionListener&lt;/code&gt; に応じて &lt;code&gt;ItemListener&lt;/code&gt; またはActionListenerを実装し、このリストからイベントを受信するように新しいリスナーを登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="2c765f1f20083db8a0a74030169afc641514a1ce" translate="yes" xml:space="preserve">
          <source>If an application wants to set the ErrorHandler or EntityResolver for an XMLReader used during a transformation, it should use a URIResolver to return the SAXSource which provides (with getXMLReader) a reference to the XMLReader.</source>
          <target state="translated">アプリケーションが変換中に使用される XMLReader の ErrorHandler または EntityResolver を設定したい場合は、URIResolver を使用して XMLReader への参照を提供する SAXSource を返す必要があります (getXMLReader を使用して)。</target>
        </trans-unit>
        <trans-unit id="f6d7860179acd56276c79c3590549cb4c6e64204" translate="yes" xml:space="preserve">
          <source>If an argument index is used for more than one format element in the pattern string, then the corresponding new format is used for all such format elements. If an argument index is not used for any format element in the pattern string, then the corresponding new format is ignored. If fewer formats are provided than needed, then only the formats for argument indices less than &lt;code&gt;newFormats.length&lt;/code&gt; are replaced.</source>
          <target state="translated">引数インデックスがパターン文字列の複数のフォーマット要素に使用されている場合、対応する新しいフォーマットがそのようなすべてのフォーマット要素に使用されます。引数インデックスがパターン文字列のどのフォーマット要素にも使用されていない場合、対応する新しいフォーマットは無視されます。必要な数よりも少ない形式が提供される場合、 &lt;code&gt;newFormats.length&lt;/code&gt; より小さい引数インデックスの形式のみが置き換えられます。</target>
        </trans-unit>
        <trans-unit id="1f72387046823cf7698e1a0b6d176b89054ec4a7" translate="yes" xml:space="preserve">
          <source>If an argument index is used for more than one format element in the pattern string, then the format used for the last such format element is returned in the array. If an argument index is not used for any format element in the pattern string, then null is returned in the array.</source>
          <target state="translated">引数インデックスがパターン文字列内の複数のフォーマット要素に使用されている場合、そのような最後のフォーマット要素に使用されたフォーマットが配列内に返されます。引数インデックスがパターン文字列内のフォーマット要素に使用されていない場合は、配列内にnullが返されます。</target>
        </trans-unit>
        <trans-unit id="60e1dcd8583415c6d79ee79aff279d16dea818d7" translate="yes" xml:space="preserve">
          <source>If an attempt is made to add an attribute that is already in use elsewhere.</source>
          <target state="translated">すでに他の場所で使用されている属性を追加しようとした場合。</target>
        </trans-unit>
        <trans-unit id="a1629656009e8137e699c56c52cd43983c5570b7" translate="yes" xml:space="preserve">
          <source>If an attempt is made to create or change an object in a way which is incorrect with regard to namespaces.</source>
          <target state="translated">名前空間に関して正しくない方法でオブジェクトを作成または変更しようとした場合。</target>
        </trans-unit>
        <trans-unit id="24724cffc57a37c811ffa42d73d239354e6db8a1" translate="yes" xml:space="preserve">
          <source>If an attempt is made to modify an object where modifications are not allowed.</source>
          <target state="translated">変更が許可されていないオブジェクトを変更しようとした場合。</target>
        </trans-unit>
        <trans-unit id="19d41b1964221f77e17c0e94a5badbf64e32ab22" translate="yes" xml:space="preserve">
          <source>If an attempt is made to modify the type of the underlying object.</source>
          <target state="translated">基礎となるオブジェクトの型を変更しようとした場合。</target>
        </trans-unit>
        <trans-unit id="2a0bd5db21e0237af0e5f242375953f6a02b04f7" translate="yes" xml:space="preserve">
          <source>If an attempt is made to reference a &lt;code&gt;Node&lt;/code&gt; in a context where it does not exist.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; が存在しないコンテキストでノードを参照しようとした場合。</target>
        </trans-unit>
        <trans-unit id="95f550c8bb30a788e989fe605398e29ff476452c" translate="yes" xml:space="preserve">
          <source>If an attempt is made to use an object that is not, or is no longer, usable.</source>
          <target state="translated">使用できない、または使用できなくなったオブジェクトを使用しようとした場合。</target>
        </trans-unit>
        <trans-unit id="a897beabf4b5ef8fb695d39602ed612135397241" translate="yes" xml:space="preserve">
          <source>If an attempt was made to load a document, or an XML Fragment, using &lt;code&gt;LSParser&lt;/code&gt; and the processing has been stopped.</source>
          <target state="translated">&lt;code&gt;LSParser&lt;/code&gt; を使用してドキュメントまたはXMLフラグメントを読み込もうとしたが、処理が停止した場合。</target>
        </trans-unit>
        <trans-unit id="e5cccc7a6e78ca84d0519ccae83f8865c3f31cba" translate="yes" xml:space="preserve">
          <source>If an attempt was made to serialize a &lt;code&gt;Node&lt;/code&gt; using &lt;code&gt;LSSerializer&lt;/code&gt; and the processing has been stopped.</source>
          <target state="translated">&lt;code&gt;LSSerializer&lt;/code&gt; を使用して &lt;code&gt;Node&lt;/code&gt; をシリアル化しようとし、処理が停止した場合。</target>
        </trans-unit>
        <trans-unit id="bd454c7aa8c21821eb903a4d4d4438d54e9d0c75" translate="yes" xml:space="preserve">
          <source>If an attribute class extends &lt;code&gt;EnumSyntax&lt;/code&gt;, and the value of the attribute is an IPP-compatible value, the attribute's &lt;code&gt;toString&lt;/code&gt; method returns the IPP string representation of the attribute value, such as &quot;processing-stopped&quot; for the &lt;a href=&quot;jobstate&quot;&gt;JobState&lt;/a&gt; attribute. However, because the &lt;code&gt;EnumSyntax&lt;/code&gt; class is extensible, vendors can define their own attribute values. If an attribute uses the &lt;code&gt;EnumSyntax&lt;/code&gt; class and is set to one of these vendor-defined values then the &lt;code&gt;toString&lt;/code&gt; method will not return the IPP string representation of the value.</source>
          <target state="translated">属性クラスが &lt;code&gt;EnumSyntax&lt;/code&gt; を拡張し、属性の値がIPP互換の値である場合、属性の &lt;code&gt;toString&lt;/code&gt; メソッドは、&lt;a href=&quot;jobstate&quot;&gt;JobState&lt;/a&gt;属性の「処理停止」など、属性値のIPP文字列表現を返します。ただし、 &lt;code&gt;EnumSyntax&lt;/code&gt; クラスは拡張可能であるため、ベンダーは独自の属性値を定義できます。属性が &lt;code&gt;EnumSyntax&lt;/code&gt; クラスを使用し、これらのベンダー定義の値のいずれかに設定されている場合、 &lt;code&gt;toString&lt;/code&gt; メソッドは値のIPP文字列表現を返しません。</target>
        </trans-unit>
        <trans-unit id="4623c2eee5d41a35f73f5f405c0c8600ff819521" translate="yes" xml:space="preserve">
          <source>If an attribute implements &lt;a href=&quot;docattribute&quot;&gt;&lt;code&gt;DocAttribute&lt;/code&gt;&lt;/a&gt; as well as &lt;code&gt;PrintRequestAttribute&lt;/code&gt;, the client may include the attribute in a &lt;code&gt;Doc&lt;/code&gt;'s attribute set to specify a job setting which pertains just to that doc.</source>
          <target state="translated">属性が&lt;a href=&quot;docattribute&quot;&gt; &lt;code&gt;DocAttribute&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;PrintRequestAttribute&lt;/code&gt; を実装している場合、クライアントはその属性を &lt;code&gt;Doc&lt;/code&gt; の属性セットに含めて、そのドキュメントにのみ関係するジョブ設定を指定できます。</target>
        </trans-unit>
        <trans-unit id="a2271d961817d69ed166f3999b4fca55a2a3bfd1" translate="yes" xml:space="preserve">
          <source>If an attribute implements &lt;a href=&quot;docattribute&quot;&gt;&lt;code&gt;DocAttribute&lt;/code&gt;&lt;/a&gt; as well as PrintRequestAttribute, the client may include the attribute in a &lt;code&gt;Doc&lt;/code&gt;}'s attribute set to specify a job setting which pertains just to that doc.</source>
          <target state="translated">属性が&lt;a href=&quot;docattribute&quot;&gt; &lt;code&gt;DocAttribute&lt;/code&gt; &lt;/a&gt;とPrintRequestAttributeを実装する場合、クライアントは &lt;code&gt;Doc&lt;/code&gt; }の属性セットに属性を含めて、そのdocだけに関係するジョブ設定を指定できます。</target>
        </trans-unit>
        <trans-unit id="8553a6030a41f0e392620a86588d848a2d5646af" translate="yes" xml:space="preserve">
          <source>If an attribute of the given name already exists then its value is replaced. If the attribute does not exist then it is created. If it implementation specific if a test to check for the existence of the attribute and the creation of attribute are atomic with respect to other file system activities.</source>
          <target state="translated">与えられた名前の属性が既に存在する場合は、その値が置き換えられます。属性が存在しない場合は、その属性が作成されます。属性の存在をチェックするテストと属性の作成が他のファイルシステムのアクティビティに関してアトミックである場合、それが実装固有のものであれば。</target>
        </trans-unit>
        <trans-unit id="27440a763ede5ab8ba752691c8d7cfa12b2cc574" translate="yes" xml:space="preserve">
          <source>If an authority is given then the string &lt;code&gt;&quot;//&quot;&lt;/code&gt; is appended, followed by the authority. If the authority contains a literal IPv6 address then the address must be enclosed in square brackets (&lt;code&gt;'['&lt;/code&gt; and &lt;code&gt;']'&lt;/code&gt;). Any character not in the</source>
          <target state="translated">権限が指定されている場合、文字列 &lt;code&gt;&quot;//&quot;&lt;/code&gt; が追加され、その後に権限が続きます。機関にリテラルIPv6アドレスが含まれている場合、アドレスは大括弧（ &lt;code&gt;'['&lt;/code&gt; および &lt;code&gt;']'&lt;/code&gt; ）で囲む必要があります。にない任意の文字</target>
        </trans-unit>
        <trans-unit id="6b54c42030a2b2622209db57c79949e15fb60f06" translate="yes" xml:space="preserve">
          <source>If an child element is insert into a parent element, the parent element should report a change. If the child element also had elements inserted into it (grandchildren to the parent) these elements need not report change.</source>
          <target state="translated">子要素が親要素に挿入された場合、親要素は変更を報告しなければなりません。子要素にも要素が挿入されている場合(親への孫)、これらの要素は変更を報告する必要はありません。</target>
        </trans-unit>
        <trans-unit id="30c03b38fd51437f34d169d8c1845e0f976cba81" translate="yes" xml:space="preserve">
          <source>If an element &lt;code&gt;e&lt;/code&gt; is an array of a primitive type, it is converted to a string as by invoking the appropriate overloading of &lt;code&gt;Arrays.toString(e)&lt;/code&gt;. If an element &lt;code&gt;e&lt;/code&gt; is an array of a reference type, it is converted to a string as by invoking this method recursively.</source>
          <target state="translated">要素 &lt;code&gt;e&lt;/code&gt; がプリミティブ型の配列である場合、 &lt;code&gt;Arrays.toString(e)&lt;/code&gt; の適切なオーバーロードを呼び出すなどして、文字列に変換されます。要素 &lt;code&gt;e&lt;/code&gt; が参照型の配列の場合、このメソッドを再帰的に呼び出すなどして文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="7fadd0956f2848503358e60b1e94c3a6c5020fa1" translate="yes" xml:space="preserve">
          <source>If an element is a path to a directory of modules then each entry in the directory is a packaged module or the top-level directory of an exploded module. It is an error if a directory contains more than one module with the same name. If an element is a path to a directory, and that directory contains a file named &lt;code&gt;module-info.class&lt;/code&gt;, then the directory is treated as an exploded module rather than a directory of modules.</source>
          <target state="translated">要素がモジュールのディレクトリへのパスである場合、ディレクトリ内の各エントリは、パッケージ化されたモジュールまたは展開されたモジュールの最上位ディレクトリです。ディレクトリに同じ名前のモジュールが複数含まれている場合はエラーになります。要素がディレクトリへのパスであり、そのディレクトリに &lt;code&gt;module-info.class&lt;/code&gt; という名前のファイルが含まれている場合、そのディレクトリはモジュールのディレクトリではなく、展開されたモジュールとして扱われます。</target>
        </trans-unit>
        <trans-unit id="4c8b1aa9c76b0a6c06cd6d1249058d6819f7727d" translate="yes" xml:space="preserve">
          <source>If an element or attribute name has a prefix, but is not bound to any namespace URI, then the prefix will be removed during serialization.</source>
          <target state="translated">要素や属性名に接頭辞があるが、どの名前空間URIにも縛られていない場合は、シリアライズ中に接頭辞が削除されます。</target>
        </trans-unit>
        <trans-unit id="9604ec88c64afb1d9f67cf4516415fedcdca634f" translate="yes" xml:space="preserve">
          <source>If an element or attribute name is bound to a prefix and there is a namespace declaration that binds that prefix to a different URI then that namespace declaration is either removed if the correct mapping is inherited from the parent context of that element, or changed to the namespace URI of the element or attribute using that prefix.</source>
          <target state="translated">要素や属性名が接頭辞にバインドされていて、その接頭辞を別のURIにバインドする名前空間宣言がある場合、その名前空間宣言は、その要素の親コンテキストから正しいマッピングが継承されている場合は削除されるか、その接頭辞を使用している要素や属性の名前空間URIに変更されます。</target>
        </trans-unit>
        <trans-unit id="c29918c5773fbdbf37d6f7f698f089f0789ff358" translate="yes" xml:space="preserve">
          <source>If an element or attribute name uses a prefix that is bound to a different URI than that inherited from the namespace context of the parent of that element and there is no namespace declaration in the context of the current element then such a namespace declaration is added.</source>
          <target state="translated">要素や属性名が、その要素の親の名前空間コンテキストから継承されたものとは異なるURIにバインドされた接頭辞を使用しており、現在の要素のコンテキストに名前空間宣言が存在しない場合、そのような名前空間宣言が追加されます。</target>
        </trans-unit>
        <trans-unit id="261e54ff065700a24467a3b37a05bc35f1bc1e0e" translate="yes" xml:space="preserve">
          <source>If an entry already exists for the specified alias, it is overridden.</source>
          <target state="translated">指定されたエイリアスのエントリが既に存在する場合、それはオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="fd9f14cb55aec7f7c0b7e951ed92525cdc983689" translate="yes" xml:space="preserve">
          <source>If an error occurs during the initial handshake, this method returns an invalid session object which reports an invalid cipher suite of &quot;SSL_NULL_WITH_NULL_NULL&quot;.</source>
          <target state="translated">最初のハンドシェイク中にエラーが発生した場合、このメソッドは無効なセッションオブジェクトを返し、無効な暗号スイートである &quot;SSL_NULL_WITH_NULL_NULL &quot;を報告します。</target>
        </trans-unit>
        <trans-unit id="ff4bf02a9e9b23d87b04df576e60bab4d6f37a68" translate="yes" xml:space="preserve">
          <source>If an error occurs in setting any of the client info properties, a &lt;code&gt;SQLClientInfoException&lt;/code&gt; is thrown. The &lt;code&gt;SQLClientInfoException&lt;/code&gt; contains information indicating which client info properties were not set. The state of the client information is unknown because some databases do not allow multiple client info properties to be set atomically. For those databases, one or more properties may have been set before the error occurred.</source>
          <target state="translated">クライアント情報プロパティの設定でエラーが発生した場合、 &lt;code&gt;SQLClientInfoException&lt;/code&gt; がスローされます。 &lt;code&gt;SQLClientInfoException&lt;/code&gt; クライアント情報プロパティーが設定されていなかったかを示す情報が含まれています。一部のデータベースでは複数のクライアント情報プロパティをアトミックに設定できないため、クライアント情報の状態は不明です。これらのデータベースでは、エラーが発生する前に1つ以上のプロパティが設定されている可能性があります。</target>
        </trans-unit>
        <trans-unit id="1773b2b10f572a15df1a83f51dfc4260cdf90a56" translate="yes" xml:space="preserve">
          <source>If an error occurs then the SSL socket is closed and an IOException is thrown. The underlying connection remains intact.</source>
          <target state="translated">エラーが発生した場合、SSLソケットは閉じられ、IOExceptionがスローされます。基本的な接続はそのまま残ります。</target>
        </trans-unit>
        <trans-unit id="0571b6ce6440517f906763cbff3a06c35743d89b" translate="yes" xml:space="preserve">
          <source>If an error occurs while parsing, the caller is notified through the &lt;code&gt;ErrorHandler&lt;/code&gt; instance associated with the &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-error-handler&quot;&gt;error-handler&lt;/a&gt;&quot; parameter of the &lt;code&gt;DOMConfiguration&lt;/code&gt;.</source>
          <target state="translated">解析中にエラーが発生した場合、呼び出し元は、 &lt;code&gt;DOMConfiguration&lt;/code&gt; の「&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-error-handler&quot;&gt;error-handler&lt;/a&gt;」パラメーターに関連付けられた &lt;code&gt;ErrorHandler&lt;/code&gt; インスタンスを介して通知されます。</target>
        </trans-unit>
        <trans-unit id="6560375df8c26d01983629f3966222dadc471a6f" translate="yes" xml:space="preserve">
          <source>If an event is cancelable, the &lt;code&gt;preventDefault&lt;/code&gt; method is used to signify that the event is to be canceled, meaning any default action normally taken by the implementation as a result of the event will not occur.</source>
          <target state="translated">イベントがキャンセル可能な場合、 &lt;code&gt;preventDefault&lt;/code&gt; メソッドは、イベントがキャンセルされることを示すために使用されます。つまり、イベントの結果として実装によって通常実行されるデフォルトのアクションは発生しません。</target>
        </trans-unit>
        <trans-unit id="61a7893cf4ef57d2ac863b712446f1ad303120a8" translate="yes" xml:space="preserve">
          <source>If an event is cancelable, the &lt;code&gt;preventDefault&lt;/code&gt; method is used to signify that the event is to be canceled, meaning any default action normally taken by the implementation as a result of the event will not occur. If, during any stage of event flow, the &lt;code&gt;preventDefault&lt;/code&gt; method is called the event is canceled. Any default action associated with the event will not occur. Calling this method for a non-cancelable event has no effect. Once &lt;code&gt;preventDefault&lt;/code&gt; has been called it will remain in effect throughout the remainder of the event's propagation. This method may be used during any stage of event flow.</source>
          <target state="translated">イベントがキャンセル可能な場合、 &lt;code&gt;preventDefault&lt;/code&gt; メソッドは、イベントがキャンセルされることを示すために使用されます。つまり、イベントの結果として実装によって通常実行されるデフォルトのアクションは発生しません。イベントフローのいずれかの段階で、 &lt;code&gt;preventDefault&lt;/code&gt; メソッドが呼び出されると、イベントはキャンセルされます。イベントに関連付けられているデフォルトのアクションは発生しません。キャンセルできないイベントに対してこのメ​​ソッドを呼び出しても効果はありません。一度 &lt;code&gt;preventDefault&lt;/code&gt; 呼び出されていることは、イベントの伝播の残りの部分で有効に存続します。この方法は、イベントフローのどの段階でも使用できます。</target>
        </trans-unit>
        <trans-unit id="b50c4239d3f5ba08fc26d40f5cf9ea945de22195" translate="yes" xml:space="preserve">
          <source>If an exception is thrown by &lt;code&gt;RemoteRef.invoke&lt;/code&gt; and that exception is a checked exception that is not assignable to any exception in the &lt;code&gt;throws&lt;/code&gt; clause of the method implemented by the &lt;code&gt;proxy&lt;/code&gt;'s class, then that exception is wrapped in an &lt;a href=&quot;../unexpectedexception&quot;&gt;&lt;code&gt;UnexpectedException&lt;/code&gt;&lt;/a&gt; and the wrapped exception is thrown. Otherwise, the exception thrown by &lt;code&gt;invoke&lt;/code&gt; is thrown by this method.</source>
          <target state="translated">&lt;code&gt;RemoteRef.invoke&lt;/code&gt; によって例外がスローされ、その例外が、 &lt;code&gt;proxy&lt;/code&gt; のクラスによって実装されたメソッドの &lt;code&gt;throws&lt;/code&gt; 句のどの例外にも割り当てられないチェック済みの例外である場合、その例外は&lt;a href=&quot;../unexpectedexception&quot;&gt; &lt;code&gt;UnexpectedException&lt;/code&gt; &lt;/a&gt;とラップされた例外にラップされます。スローされます。それ以外の場合、 &lt;code&gt;invoke&lt;/code&gt; によってスローされる例外は、このメソッドによってスローされます。</target>
        </trans-unit>
        <trans-unit id="0469e2eb38e10c985523abc8d2b5541786c72d7d" translate="yes" xml:space="preserve">
          <source>If an exception is thrown during an enumeration, the enumeration becomes invalid. Subsequent invocation of any method on that enumeration will yield undefined results.</source>
          <target state="translated">列挙中に例外がスローされると、その列挙は無効になります。その後、その列挙のメソッドを呼び出すと、未定義の結果が得られます。</target>
        </trans-unit>
        <trans-unit id="a2b9719db0ece122f09c48cc72299d47645e3e63" translate="yes" xml:space="preserve">
          <source>If an exception is thrown from this method, it is considered to be equivalent of returning &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このメソッドから例外がスローされた場合、 &lt;code&gt;true&lt;/code&gt; を返すことと同等であると見なされます。</target>
        </trans-unit>
        <trans-unit id="baf28062714220f5e512946ca5d9f8fcc778ea9f" translate="yes" xml:space="preserve">
          <source>If an exception is thrown from this method, resulting behavior is undefined.</source>
          <target state="translated">このメソッドから例外がスローされた場合の動作は未定義です。</target>
        </trans-unit>
        <trans-unit id="4edf72f63744ff4e52753a8efa7493d7a0576ed0" translate="yes" xml:space="preserve">
          <source>If an exception type is a type variable or a parameterized type, it is created. Otherwise, it is resolved.</source>
          <target state="translated">例外の型が型変数またはパラメータ化された型である場合は、その型が作成されます。それ以外の場合は解決されます。</target>
        </trans-unit>
        <trans-unit id="383733cb23b40d1a57028c685e2f09b242e4957b" translate="yes" xml:space="preserve">
          <source>If an exception, &lt;code&gt;E&lt;/code&gt; say, occurs during execution of the bootstrap method, then resolution fails and terminates abnormally. &lt;code&gt;E&lt;/code&gt; is rethrown if the type of &lt;code&gt;E&lt;/code&gt; is &lt;code&gt;Error&lt;/code&gt; or a subclass, otherwise a &lt;code&gt;BootstrapMethodError&lt;/code&gt; that wraps &lt;code&gt;E&lt;/code&gt; is thrown. If this happens, the same error will be thrown for all subsequent attempts to execute the &lt;code&gt;invokedynamic&lt;/code&gt; instruction or load the dynamically-computed constant.</source>
          <target state="translated">ブートストラップメソッドの実行中に例外 &lt;code&gt;E&lt;/code&gt; などが発生した場合、解決は失敗し、異常終了します。 &lt;code&gt;E&lt;/code&gt; は、のタイプならば再スローされる &lt;code&gt;E&lt;/code&gt; がある &lt;code&gt;Error&lt;/code&gt; またはサブクラスがそうでなければ、 &lt;code&gt;BootstrapMethodError&lt;/code&gt; ラップ &lt;code&gt;E&lt;/code&gt; がスローされます。これが発生した場合、 &lt;code&gt;invokedynamic&lt;/code&gt; 命令を実行するか、動的に計算された定数をロードしようとする後続のすべての試行に対して、同じエラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="daaa77166dccaba4fc56b68f0c67338ce9025815" translate="yes" xml:space="preserve">
          <source>If an existing &lt;code&gt;Processor&lt;/code&gt; object is not being used, to create an instance of a processor the tool calls the no-arg constructor of the processor class.</source>
          <target state="translated">既存の &lt;code&gt;Processor&lt;/code&gt; オブジェクトが使用されていない場合、プロセッサのインスタンスを作成するために、ツールはプロセッサクラスの引数なしのコンストラクタを呼び出します。</target>
        </trans-unit>
        <trans-unit id="e6c975a8f1f73672a8298c66b4c9a0fbbf3cedc1" translate="yes" xml:space="preserve">
          <source>If an explicit &lt;a href=&quot;httpclient.builder#executor(java.util.concurrent.Executor)&quot;&gt;executor&lt;/a&gt; has not been set for an &lt;code&gt;HttpClient&lt;/code&gt;, and a security manager has been installed, then the default executor will execute asynchronous and dependent tasks in a context that is granted no permissions. Custom &lt;a href=&quot;httprequest.bodypublisher&quot;&gt;request body publishers&lt;/a&gt;, &lt;a href=&quot;httpresponse.bodyhandler&quot;&gt;response body handlers&lt;/a&gt;, &lt;a href=&quot;httpresponse.bodysubscriber&quot;&gt;response body subscribers&lt;/a&gt;, and &lt;a href=&quot;websocket.listener&quot;&gt;WebSocket Listeners&lt;/a&gt;, if executing operations that require privileges, should do so within an appropriate &lt;a href=&quot;../../../../java.base/java/security/accesscontroller#doPrivileged(java.security.PrivilegedAction)&quot;&gt;privileged context&lt;/a&gt;.</source>
          <target state="translated">明示的な&lt;a href=&quot;httpclient.builder#executor(java.util.concurrent.Executor)&quot;&gt;エグゼキュータ&lt;/a&gt;が &lt;code&gt;HttpClient&lt;/code&gt; に設定されておらず、セキュリティマネージャがインストールされている場合、デフォルトのエグゼキュータは、権限が付与されていないコンテキストで非同期の依存タスクを実行します。カスタム&lt;a href=&quot;httprequest.bodypublisher&quot;&gt;リクエストボディパブリッシャー&lt;/a&gt;、&lt;a href=&quot;httpresponse.bodyhandler&quot;&gt;レスポンスボディハンドラー&lt;/a&gt;、&lt;a href=&quot;httpresponse.bodysubscriber&quot;&gt;レスポンスボディサブスクライバー&lt;/a&gt;、および&lt;a href=&quot;websocket.listener&quot;&gt;WebSocketリスナーは&lt;/a&gt;、特権を必要とする操作を実行する場合、適切な&lt;a href=&quot;../../../../java.base/java/security/accesscontroller#doPrivileged(java.security.PrivilegedAction)&quot;&gt;特権コンテキスト&lt;/a&gt;内で実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="7d315c92816e5851e4dc9c39278030e06b4e20d6" translate="yes" xml:space="preserve">
          <source>If an implementation does not support schemas, it should throw OperationNotSupportedException. If an implementation does support schemas, it should define this method to return the appropriate information.</source>
          <target state="translated">実装がスキーマをサポートしていない場合は、OperationNotSupportedExceptionをスローする必要があります。実装がスキーマをサポートしている場合は、このメソッドを定義して適切な情報を返すようにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="c4c73fde229aaf78d628130cf2dc942c93b26494" translate="yes" xml:space="preserve">
          <source>If an implementation has not been specified with the system property, then the system-default implementation class is instantiated, and the result is returned.</source>
          <target state="translated">systemプロパティで実装が指定されていない場合は、システムデフォルト実装クラスがインスタンス化され、その結果が返されます。</target>
        </trans-unit>
        <trans-unit id="0790bd1055cd2781acb9f390ec8d77d9efcbd487" translate="yes" xml:space="preserve">
          <source>If an implementation of this method returns &lt;code&gt;false&lt;/code&gt;, then the KeyEvent is passed to the next KeyEventDispatcher in the chain, ending with the current KeyboardFocusManager. If an implementation returns &lt;code&gt;true&lt;/code&gt;, the KeyEvent is assumed to have been dispatched (although this need not be the case), and the current KeyboardFocusManager will take no further action with regard to the KeyEvent. In such a case, &lt;code&gt;KeyboardFocusManager.dispatchEvent&lt;/code&gt; should return &lt;code&gt;true&lt;/code&gt; as well. If an implementation consumes the KeyEvent, but returns &lt;code&gt;false&lt;/code&gt;, the consumed event will still be passed to the next KeyEventDispatcher in the chain. It is important for developers to check whether the KeyEvent has been consumed before dispatching it to a target. By default, the current KeyboardFocusManager will not dispatch a consumed KeyEvent.</source>
          <target state="translated">このメソッドの実装が &lt;code&gt;false&lt;/code&gt; を返す場合、KeyEventはチェーン内の次のKeyEventDispatcherに渡され、現在のKeyboardFocusManagerで終わります。実装が &lt;code&gt;true&lt;/code&gt; を返す場合、KeyEventはディスパッチされたと見なされ（これが当てはまる必要はありません）、現在のKeyboardFocusManagerはKeyEventに関してそれ以上のアクションを実行しません。このような場合、 &lt;code&gt;KeyboardFocusManager.dispatchEvent&lt;/code&gt; も &lt;code&gt;true&lt;/code&gt; を返す必要があります。実装がKeyEventを消費するが、 &lt;code&gt;false&lt;/code&gt; を返す場合、消費されたイベントは引き続きチェーン内の次のKeyEventDispatcherに渡されます。開発者は、KeyEventをターゲットにディスパッチする前に、KeyEventが消費されているかどうかを確認することが重要です。デフォルトでは、現在のKeyboardFocusManagerは消費されたKeyEventをディスパッチしません。</target>
        </trans-unit>
        <trans-unit id="e13652b1c7db8e5309427a9d44bc7e8f9963245a" translate="yes" xml:space="preserve">
          <source>If an implementation of this method returns &lt;code&gt;false&lt;/code&gt;, then the KeyEvent is passed to the next KeyEventPostProcessor in the chain, ending with the current KeyboardFocusManager. If an implementation returns &lt;code&gt;true&lt;/code&gt;, the KeyEvent is assumed to have been fully handled (although this need not be the case), and the AWT will take no further action with regard to the KeyEvent. If an implementation consumes the KeyEvent but returns &lt;code&gt;false&lt;/code&gt;, the consumed event will still be passed to the next KeyEventPostProcessor in the chain. It is important for developers to check whether the KeyEvent has been consumed before performing any post-processing of the KeyEvent. By default, the current KeyboardFocusManager will perform no post- processing in response to a consumed KeyEvent.</source>
          <target state="translated">このメソッドの実装が &lt;code&gt;false&lt;/code&gt; を返す場合、KeyEventはチェーン内の次のKeyEventPostProcessorに渡され、現在のKeyboardFocusManagerで終わります。実装が &lt;code&gt;true&lt;/code&gt; を返す場合、KeyEventは完全に処理されたと見なされ（これが当てはまる必要はありませんが）、AWTはKeyEventに関してそれ以上のアクションを実行しません。実装がKeyEventを消費するが、 &lt;code&gt;false&lt;/code&gt; を返す場合、消費されたイベントは引き続きチェーン内の次のKeyEventPostProcessorに渡されます。開発者は、KeyEventの後処理を実行する前に、KeyEventが消費されているかどうかを確認することが重要です。デフォルトでは、現在のKeyboardFocusManagerは、消費されたKeyEventに応答して後処理を実行しません。</target>
        </trans-unit>
        <trans-unit id="f55248539ebf4b603fcbf731a4a482fec2765dd7" translate="yes" xml:space="preserve">
          <source>If an implementation performs any type of modification or &quot;normalization&quot; of a path, it should never move the coordinates by more than half a pixel in any direction.</source>
          <target state="translated">実装がパスの修正や「正規化」を行う場合、どの方向にも座標を半分以上ピクセル移動させてはいけません。</target>
        </trans-unit>
        <trans-unit id="043b26dca2264b1abb0bfae84593fcda3d702603" translate="yes" xml:space="preserve">
          <source>If an implementation represents a field that can be simplified, or combined with others, then this method must be implemented.</source>
          <target state="translated">実装が簡略化できる、または他のものと組み合わせることができるフィールドを表す場合、このメソッドは実装されなければなりません。</target>
        </trans-unit>
        <trans-unit id="e1d164fb2f90283981eb219956ff98c6a957bd3f" translate="yes" xml:space="preserve">
          <source>If an implementation supports a mechanism to start agents sometime after the VM has started then this attribute specifies the agent class. That is, the class containing the &lt;code&gt;agentmain&lt;/code&gt; method. This attribute is required if it is not present the agent will not be started. Note: this is a class name, not a file name or path.</source>
          <target state="translated">実装がVMの起動後にエージェントを起動するメカニズムをサポートしている場合、この属性はエージェントクラスを指定します。つまり、 &lt;code&gt;agentmain&lt;/code&gt; メソッドを含むクラスです。この属性が存在しない場合、エージェントは開始されません。注：これはクラス名であり、ファイル名やパスではありません。</target>
        </trans-unit>
        <trans-unit id="c11093045a54063bd397d3d34918f97a76bef04b" translate="yes" xml:space="preserve">
          <source>If an implementation supports a mechanism to start an application as an executable JAR then the main manifest may include this attribute to specify the class name of an agent to start before the application &lt;code&gt;main&lt;/code&gt; method is invoked.</source>
          <target state="translated">実装が実行可能JARとしてアプリケーションを開始するメカニズムをサポートしている場合、メインマニフェストにこの属性を含めて、アプリケーションの &lt;code&gt;main&lt;/code&gt; メソッドが呼び出される前に開始するエージェントのクラス名を指定できます。</target>
        </trans-unit>
        <trans-unit id="c89b3cdaab7f58f456c7aa47faa134eee7f364ef" translate="yes" xml:space="preserve">
          <source>If an init function is omitted, use a &lt;a href=&quot;#empty(java.lang.invoke.MethodType)&quot;&gt;default value&lt;/a&gt; for the clause's iteration variable type.</source>
          <target state="translated">init関数を省略した&lt;a href=&quot;#empty(java.lang.invoke.MethodType)&quot;&gt;場合&lt;/a&gt;は、句の反復変数タイプにデフォルト値を使用してください。</target>
        </trans-unit>
        <trans-unit id="3462188196e65e0014ae45d5a7fe6a01be0280ee" translate="yes" xml:space="preserve">
          <source>If an input method provides its own windows, it should make sure at this point that all necessary windows are open and visible.</source>
          <target state="translated">入力メソッドが独自のウィンドウを提供する場合、この時点で必要なウィンドウがすべて開いていて見えるようにしなければなりません。</target>
        </trans-unit>
        <trans-unit id="cf5c43ab6dc0cdfce9e73d966f2af0a3e27508c4" translate="yes" xml:space="preserve">
          <source>If an input method provides its own windows, only windows that relate to the current composition (such as a lookup choice window) should be closed at this point. It is possible that the input method will be immediately activated again for a different client component, and closing and reopening more persistent windows (such as a control panel) would create unnecessary screen flicker. Before an instance of a different input method class is activated, &lt;a href=&quot;#hideWindows()&quot;&gt;&lt;code&gt;hideWindows()&lt;/code&gt;&lt;/a&gt; is called on the current input method.</source>
          <target state="translated">入力メソッドが独自のウィンドウを提供する場合は、現在の構成に関連するウィンドウ（ルックアップ選択ウィンドウなど）のみをこの時点で閉じる必要があります。別のクライアントコンポーネントに対して入力メソッドがすぐに再度アクティブ化される可能性があり、より永続的なウィンドウ（コントロールパネルなど）を閉じて再度開くと、不要な画面のちらつきが発生します。別のインプットメソッドクラスのインスタンスがアクティブ化される前に、現在のインプットメソッドで&lt;a href=&quot;#hideWindows()&quot;&gt; &lt;code&gt;hideWindows()&lt;/code&gt; &lt;/a&gt;が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0a0b10ca0277b7493d6ebe1c11b70f79c82379ba" translate="yes" xml:space="preserve">
          <source>If an input stream is open for the current row, a call to the method &lt;code&gt;next&lt;/code&gt; will implicitly close it. A &lt;code&gt;ResultSet&lt;/code&gt; object's warning chain is cleared when a new row is read.</source>
          <target state="translated">現在の行に対して入力ストリームが開いている場合、 &lt;code&gt;next&lt;/code&gt; メソッドを呼び出すと、暗黙的にその行が閉じられます。 &lt;code&gt;ResultSet&lt;/code&gt; 新しい行が読み込まれるときに、オブジェクトの警告チェーンはクリアされます。</target>
        </trans-unit>
        <trans-unit id="582a161abac221d4fa47ae48f7051334a4e87df5" translate="yes" xml:space="preserve">
          <source>If an input stream is open for the current row, a call to the method &lt;code&gt;previous&lt;/code&gt; will implicitly close it. A &lt;code&gt;ResultSet&lt;/code&gt; object's warning change is cleared when a new row is read.</source>
          <target state="translated">現在の行に対して入力ストリームが開いている場合、 &lt;code&gt;previous&lt;/code&gt; のメソッドを呼び出すと暗黙的に閉じられます。 &lt;code&gt;ResultSet&lt;/code&gt; 新しい行が読み込まれるときに、オブジェクトの警告の変更がクリアされます。</target>
        </trans-unit>
        <trans-unit id="f303c1f0d6c8117bfe8230a427e47b48a68363b7" translate="yes" xml:space="preserve">
          <source>If an invalid or illegal character is specified, such as in an XML name.</source>
          <target state="translated">XML名など、無効な文字や不正な文字が指定された場合。</target>
        </trans-unit>
        <trans-unit id="523ee71c788d6ee708d4f30befc0a7f2aeb4aadc" translate="yes" xml:space="preserve">
          <source>If an invalid or illegal string is specified.</source>
          <target state="translated">無効な文字列または不正な文字列が指定された場合。</target>
        </trans-unit>
        <trans-unit id="3b30c559fc9c71304701a7f40146dfcf10b6d44b" translate="yes" xml:space="preserve">
          <source>If an object factory builder has been installed, it is used to create a factory for creating the object. Otherwise, the following rules are used to create the object:</source>
          <target state="translated">オブジェクト・ファクトリー・ビルダーがインストールされている場合は、オブジェクトを作成するためのファクトリーを作成するために使用されます。それ以外の場合は、以下のルールでオブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="4831201808691533c49676c4c6acf9ec77b746a0" translate="yes" xml:space="preserve">
          <source>If an operation that calculates the bounding box of this &lt;code&gt;Polygon&lt;/code&gt; has already been performed, such as &lt;code&gt;getBounds&lt;/code&gt; or &lt;code&gt;contains&lt;/code&gt;, then this method updates the bounding box.</source>
          <target state="translated">この &lt;code&gt;Polygon&lt;/code&gt; バウンディングボックスを計算する操作（ &lt;code&gt;getBounds&lt;/code&gt; や &lt;code&gt;contains&lt;/code&gt; など）がすでに実行されている場合、このメソッドはバウンディングボックスを更新します。</target>
        </trans-unit>
        <trans-unit id="8baf09fa7c9f197ad74c665fba2d5cc5c6506ab1" translate="yes" xml:space="preserve">
          <source>If an optional &lt;code&gt;AffineTransform&lt;/code&gt; is specified, the coordinates returned in the iteration are transformed accordingly.</source>
          <target state="translated">オプションの &lt;code&gt;AffineTransform&lt;/code&gt; が指定されている場合、反復で返される座標はそれに応じて変換されます。</target>
        </trans-unit>
        <trans-unit id="2b3be881430739dc065ccc4b9432e347d8bc309f" translate="yes" xml:space="preserve">
          <source>If an override is added, then any date that is formatted or parsed will be affected.</source>
          <target state="translated">オーバーライドが追加された場合、フォーマットされた日付やパースされた日付が影響を受けます。</target>
        </trans-unit>
        <trans-unit id="255c469340eb5e4421672d0f2a54c086d1b3a334" translate="yes" xml:space="preserve">
          <source>If an override is added, then any instant that is formatted or parsed will be affected.</source>
          <target state="translated">オーバーライドが追加された場合、フォーマットまたはパースされたすべての瞬間が影響を受けます。</target>
        </trans-unit>
        <trans-unit id="0fbebb5dc8d306792468bfb85d5fadc68fc9bcac" translate="yes" xml:space="preserve">
          <source>If an underlying &lt;code&gt;TimeZone&lt;/code&gt; implementation subclass supports historical GMT offset changes, the method returns the raw offset value of the current date. In Honolulu, for example, its raw offset changed from GMT-10:30 to GMT-10:00 in 1947, and this method always returns -36000000 milliseconds (i.e., -10 hours).</source>
          <target state="translated">基本となる &lt;code&gt;TimeZone&lt;/code&gt; 実装サブクラスがGMTオフセットの履歴変更をサポートしている場合、メソッドは現在の日付の未加工のオフセット値を返します。たとえばホノルルでは、1947年に生のオフセットがGMT-10：30からGMT-10：00に変更され、このメソッドは常に-36000000ミリ秒（つまり-10時間）を返します。</target>
        </trans-unit>
        <trans-unit id="3a926ad586a71b3f84679e24d71e358a0ff83b65" translate="yes" xml:space="preserve">
          <source>If an underlying &lt;code&gt;TimeZone&lt;/code&gt; implementation subclass supports historical GMT offset changes, the specified GMT offset is set as the latest GMT offset and the difference from the known latest GMT offset value is used to adjust all historical GMT offset values.</source>
          <target state="translated">基になる &lt;code&gt;TimeZone&lt;/code&gt; 実装サブクラスが履歴GMTオフセットの変更をサポートしている場合、指定されたGMTオフセットは最新のGMTオフセットとして設定され、既知の最新のGMTオフセット値との差を使用してすべての履歴GMTオフセット値が調整されます。</target>
        </trans-unit>
        <trans-unit id="6ceaf11fd23c3b657da62f21ad506f54d009695c" translate="yes" xml:space="preserve">
          <source>If an underlying &lt;code&gt;TimeZone&lt;/code&gt; implementation subclass supports historical and future Daylight Saving Time schedule changes, this method refers to the last known Daylight Saving Time rule that can be a future prediction and may not be the same as the current rule. Consider calling &lt;a href=&quot;#observesDaylightTime()&quot;&gt;&lt;code&gt;observesDaylightTime()&lt;/code&gt;&lt;/a&gt; if the current rule should also be taken into account.</source>
          <target state="translated">基になる &lt;code&gt;TimeZone&lt;/code&gt; 実装サブクラスが過去および将来の夏時間スケジュールの変更をサポートする場合、このメソッドは、将来の予測であり、現在のルールと同じではない可能性がある最後の既知の夏時間ルールを参照します。現在のルールも考慮する必要がある場合は、&lt;a href=&quot;#observesDaylightTime()&quot;&gt; &lt;code&gt;observesDaylightTime()&lt;/code&gt; の&lt;/a&gt;呼び出しを検討してください。</target>
        </trans-unit>
        <trans-unit id="e0ae28c236839ff6f2827de1f4455a2f8e23e12d" translate="yes" xml:space="preserve">
          <source>If an underlying &lt;code&gt;TimeZone&lt;/code&gt; implementation subclass supports historical and future Daylight Saving Time schedule changes, this method refers to the last known Daylight Saving Time rule that can be a future prediction and may not be the same as the current rule. Consider calling &lt;a href=&quot;timezone#observesDaylightTime--&quot;&gt;&lt;code&gt;observesDaylightTime()&lt;/code&gt;&lt;/a&gt; if the current rule should also be taken into account.</source>
          <target state="translated">基になる &lt;code&gt;TimeZone&lt;/code&gt; 実装サブクラスが履歴および将来の夏時間スケジュールの変更をサポートする場合、このメソッドは、将来の予測であり、現在のルールとは異なる可能性がある最後の既知の夏時間ルールを参照します。現在のルールも考慮する必要がある場合は、&lt;a href=&quot;timezone#observesDaylightTime--&quot;&gt; &lt;code&gt;observesDaylightTime()&lt;/code&gt; の&lt;/a&gt;呼び出しを検討してください。</target>
        </trans-unit>
        <trans-unit id="ceae883a33c038a59aa9297cd34719c700a68dfa" translate="yes" xml:space="preserve">
          <source>If an underlying &lt;code&gt;TimeZone&lt;/code&gt; implementation subclass supports historical and future Daylight Saving Time schedule changes, this method returns the amount of saving time of the last known Daylight Saving Time rule that can be a future prediction.</source>
          <target state="translated">基本となる &lt;code&gt;TimeZone&lt;/code&gt; 実装サブクラスが過去および将来の夏時間スケジュールの変更をサポートする場合、このメソッドは、将来の予測である可能性がある最後の既知の夏時間ルールの節約時間の量を返します。</target>
        </trans-unit>
        <trans-unit id="cdd60a91ecf0c51d8f3876be3d469659d44d29f5" translate="yes" xml:space="preserve">
          <source>If an update between a disconnected &lt;code&gt;RowSet&lt;/code&gt; object and a data source violates the original query or the underlying data source constraints, this will result in undefined behavior for all disconnected &lt;code&gt;RowSet&lt;/code&gt; implementations and their designated &lt;code&gt;SyncProvider&lt;/code&gt; implementations. Not defining the behavior when such violations occur offers greater flexibility for a &lt;code&gt;SyncProvider&lt;/code&gt; implementation to determine its own best course of action.</source>
          <target state="translated">切断された &lt;code&gt;RowSet&lt;/code&gt; オブジェクトとデータソース間の更新が元のクエリまたは基になるデータソースの制約に違反する場合、切断されたすべての &lt;code&gt;RowSet&lt;/code&gt; 実装とそれらの指定された &lt;code&gt;SyncProvider&lt;/code&gt; 実装の動作が未定義になります。このような違反が発生したときの動作を定義しないと、 &lt;code&gt;SyncProvider&lt;/code&gt; 実装が独自の最善の行動方針を決定するための柔軟性が高まります。</target>
        </trans-unit>
        <trans-unit id="e6cdcb6abb3fe6a57aabba3c4945a777923f2bd3" translate="yes" xml:space="preserve">
          <source>If another thread is already waiting at the exchange point then it is resumed for thread scheduling purposes and receives the object passed in by the current thread. The current thread returns immediately, receiving the object passed to the exchange by that other thread.</source>
          <target state="translated">他のスレッドがすでに交換ポイントで待機している場合は、 スレッドスケジューリングのために再開され、現在のスレッドが渡したオブジェクトを受け取ります。現在のスレッドはすぐに戻り、他のスレッドから交換所に渡されたオブジェクトを受け取ります。</target>
        </trans-unit>
        <trans-unit id="864c1c31a0758e674e7daf1e62b8414fbaaecf21" translate="yes" xml:space="preserve">
          <source>If another thread is currently blocked in a selection operation then that invocation will return immediately. If no selection operation is currently in progress then the next invocation of a selection operation will return immediately unless &lt;a href=&quot;#selectNow()&quot;&gt;&lt;code&gt;selectNow()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#selectNow(java.util.function.Consumer)&quot;&gt;&lt;code&gt;selectNow(Consumer)&lt;/code&gt;&lt;/a&gt; is invoked in the meantime. In any case the value returned by that invocation may be non-zero. Subsequent selection operations will block as usual unless this method is invoked again in the meantime.</source>
          <target state="translated">選択操作で別のスレッドが現在ブロックされている場合、その呼び出しはすぐに返されます。現在進行中の選択操作がない場合、&lt;a href=&quot;#selectNow()&quot;&gt; &lt;code&gt;selectNow()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#selectNow(java.util.function.Consumer)&quot;&gt; &lt;code&gt;selectNow(Consumer)&lt;/code&gt; &lt;/a&gt;がその間に呼び出されない限り、選択操作の次の呼び出しはすぐに戻ります。いずれの場合も、その呼び出しによって返される値はゼロ以外である可能性があります。その間にこのメソッドが再度呼び出されない限り、後続の選択操作は通常どおりブロックされます。</target>
        </trans-unit>
        <trans-unit id="55a602e52f31c6fce149aff8e6c8a2bb72960c45" translate="yes" xml:space="preserve">
          <source>If another thread is currently blocked in an invocation of the &lt;a href=&quot;selector#select--&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;selector#select-long-&quot;&gt;&lt;code&gt;select(long)&lt;/code&gt;&lt;/a&gt; methods then that invocation will return immediately. If no selection operation is currently in progress then the next invocation of one of these methods will return immediately unless the &lt;a href=&quot;selector#selectNow--&quot;&gt;&lt;code&gt;selectNow()&lt;/code&gt;&lt;/a&gt; method is invoked in the meantime. In any case the value returned by that invocation may be non-zero. Subsequent invocations of the &lt;a href=&quot;selector#select--&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;selector#select-long-&quot;&gt;&lt;code&gt;select(long)&lt;/code&gt;&lt;/a&gt; methods will block as usual unless this method is invoked again in the meantime.</source>
          <target state="translated">&lt;a href=&quot;selector#select--&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;selector#select-long-&quot;&gt; &lt;code&gt;select(long)&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しで別のスレッドが現在ブロックされている場合、その呼び出しはすぐに返されます。現在選択操作が進行中でない場合、&lt;a href=&quot;selector#selectNow--&quot;&gt; &lt;code&gt;selectNow()&lt;/code&gt; &lt;/a&gt;メソッドがその間に呼び出されない限り、これらのメソッドの次の呼び出しはすぐに戻ります。いずれの場合も、その呼び出しによって返される値はゼロ以外の場合があります。その後、&lt;a href=&quot;selector#select--&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;selector#select-long-&quot;&gt; &lt;code&gt;select(long)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すと、その間にこのメソッドが再度呼び出されない限り、通常どおりブロックされます。</target>
        </trans-unit>
        <trans-unit id="24dce4584d013d177ede8c23a6bf0925338f6147" translate="yes" xml:space="preserve">
          <source>If any &lt;a href=&quot;../../../../java.base/java/lang/throwable&quot;&gt;&lt;code&gt;Throwable&lt;/code&gt;&lt;/a&gt; (or instances of its derived classes) is thrown from an &lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt;, the caller of the &lt;code&gt;newSchema&lt;/code&gt; method will be thrown the same &lt;a href=&quot;../../../../java.base/java/lang/throwable&quot;&gt;&lt;code&gt;Throwable&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">任意の場合&lt;a href=&quot;../../../../java.base/java/lang/throwable&quot;&gt; &lt;code&gt;Throwable&lt;/code&gt; &lt;/a&gt;（またはその派生クラスのインスタンスが）からスローされる&lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; &lt;/a&gt;の発信者 &lt;code&gt;newSchema&lt;/code&gt; の方法は、同一のスローされ&lt;a href=&quot;../../../../java.base/java/lang/throwable&quot;&gt; &lt;code&gt;Throwable&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="91666a635abb2638c7825fa9ea881422a3247df9" translate="yes" xml:space="preserve">
          <source>If any &lt;a href=&quot;../../../../java.base/java/lang/throwable&quot;&gt;&lt;code&gt;Throwable&lt;/code&gt;&lt;/a&gt; is thrown from an &lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt;, the caller of the &lt;code&gt;validate&lt;/code&gt; method will be thrown the same &lt;a href=&quot;../../../../java.base/java/lang/throwable&quot;&gt;&lt;code&gt;Throwable&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; &lt;/a&gt;から&lt;a href=&quot;../../../../java.base/java/lang/throwable&quot;&gt; &lt;code&gt;Throwable&lt;/code&gt; &lt;/a&gt;がスローされた場合、 &lt;code&gt;validate&lt;/code&gt; メソッドの呼び出し元には同じ&lt;a href=&quot;../../../../java.base/java/lang/throwable&quot;&gt; &lt;code&gt;Throwable&lt;/code&gt; &lt;/a&gt;オブジェクトがスローされます。</target>
        </trans-unit>
        <trans-unit id="e6031198ebfde35221603864bd5de80044d9f210" translate="yes" xml:space="preserve">
          <source>If any &lt;a href=&quot;../../../../java.base/java/lang/throwable&quot;&gt;&lt;code&gt;Throwable&lt;/code&gt;&lt;/a&gt; is thrown from an &lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt;, the same &lt;a href=&quot;../../../../java.base/java/lang/throwable&quot;&gt;&lt;code&gt;Throwable&lt;/code&gt;&lt;/a&gt; object will be thrown toward the root of the call stack.</source>
          <target state="translated">いずれかの場合&lt;a href=&quot;../../../../java.base/java/lang/throwable&quot;&gt; &lt;code&gt;Throwable&lt;/code&gt; &lt;/a&gt;からスローされる&lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; &lt;/a&gt;、同じ&lt;a href=&quot;../../../../java.base/java/lang/throwable&quot;&gt; &lt;code&gt;Throwable&lt;/code&gt; &lt;/a&gt;オブジェクトがコールスタックのルートに向かってスローされます。</target>
        </trans-unit>
        <trans-unit id="ce3583ad9e889a8cf74d60ff219db12bf7e3d646" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;Node&lt;/code&gt; is inserted somewhere it doesn't belong.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; が属していない場所に挿入された場合。</target>
        </trans-unit>
        <trans-unit id="9cec544a5e88401b63adc132ef371ce82ab888d7" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;PropertyChangeListeners&lt;/code&gt; have been registered, the &lt;code&gt;changeSupport&lt;/code&gt; field describes them.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListeners&lt;/code&gt; が登録されている場合、 &lt;code&gt;changeSupport&lt;/code&gt; フィールドにそれらが記述されます。</target>
        </trans-unit>
        <trans-unit id="6d4dcb2cdde65186e714c3856839d4722a4381c8" translate="yes" xml:space="preserve">
          <source>If any Subscriber method throws an exception, its subscription is cancelled. If a handler is supplied as a constructor argument, it is invoked before cancellation upon an exception in method &lt;a href=&quot;flow.subscriber#onNext(T)&quot;&gt;&lt;code&gt;onNext&lt;/code&gt;&lt;/a&gt;, but exceptions in methods &lt;a href=&quot;flow.subscriber#onSubscribe(java.util.concurrent.Flow.Subscription)&quot;&gt;&lt;code&gt;onSubscribe&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;flow.subscriber#onError(java.lang.Throwable)&quot;&gt;&lt;code&gt;onError&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;flow.subscriber#onComplete()&quot;&gt;&lt;code&gt;onComplete&lt;/code&gt;&lt;/a&gt; are not recorded or handled before cancellation. If the supplied Executor throws &lt;a href=&quot;rejectedexecutionexception&quot;&gt;&lt;code&gt;RejectedExecutionException&lt;/code&gt;&lt;/a&gt; (or any other RuntimeException or Error) when attempting to execute a task, or a drop handler throws an exception when processing a dropped item, then the exception is rethrown. In these cases, not all subscribers will have been issued the published item. It is usually good practice to &lt;a href=&quot;#closeExceptionally(java.lang.Throwable)&quot;&gt;&lt;code&gt;closeExceptionally&lt;/code&gt;&lt;/a&gt; in these cases.</source>
          <target state="translated">サブスクライバーメソッドが例外をスローした場合、そのサブスクリプションはキャンセルされます。ハンドラーがコンストラクター引数として指定されている場合、メソッド&lt;a href=&quot;flow.subscriber#onNext(T)&quot;&gt; &lt;code&gt;onNext&lt;/code&gt; の&lt;/a&gt;例外によりキャンセル前に呼び出されますが、メソッド&lt;a href=&quot;flow.subscriber#onSubscribe(java.util.concurrent.Flow.Subscription)&quot;&gt; &lt;code&gt;onSubscribe&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;flow.subscriber#onError(java.lang.Throwable)&quot;&gt; &lt;code&gt;onError&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;flow.subscriber#onComplete()&quot;&gt; &lt;code&gt;onComplete&lt;/code&gt; の&lt;/a&gt;例外は、キャンセル前に記録または処理されません。提供されたエグゼキュータがタスクの実行を試みたときに&lt;a href=&quot;rejectedexecutionexception&quot;&gt; &lt;code&gt;RejectedExecutionException&lt;/code&gt; &lt;/a&gt;（またはその他のRuntimeExceptionまたはError）をスローした場合、またはドロップハンドラがドロップされたアイテムの処理中に例外をスローした場合、例外は再スローされます。このような場合、すべてのサブスクライバーに公開済みアイテムが発行されるわけではありません。これらの場合、&lt;a href=&quot;#closeExceptionally(java.lang.Throwable)&quot;&gt; &lt;code&gt;closeExceptionally&lt;/code&gt; &lt;/a&gt;的に閉じることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="21b5ebd6273984daf6721915e81fb9ec02d87b85" translate="yes" xml:space="preserve">
          <source>If any argument is NaN, the result is NaN.</source>
          <target state="translated">いずれかの引数がNaNであれば、結果はNaNとなります。</target>
        </trans-unit>
        <trans-unit id="8b8c2ef8a9bb952f18badf3b5ecafae0a465fefa" translate="yes" xml:space="preserve">
          <source>If any attributes are unsupported only because they are in conflict with other attributes then it is at the discretion of the service to select the attribute(s) to be identified as the cause of the conflict.</source>
          <target state="translated">他の属性と競合しているという理由だけでサポートされていない属性がある場合は、競合の原因として特定される属性を選択するかどうかはサービスの裁量に委ねられます。</target>
        </trans-unit>
        <trans-unit id="4ebc8985caafe276614f95fc78ffd3e5249f1603" translate="yes" xml:space="preserve">
          <source>If any bits of a particular byte have never been set at the time the byte is flushed to the destination, those bits will be set to 0 automatically.</source>
          <target state="translated">バイトがデスティネーションにフラッシュされた時に一度も設定されていないビットがある場合、そのビットは自動的に 0 に設定されます。</target>
        </trans-unit>
        <trans-unit id="000b0cb48e2461281a9efe32d05592010817bcfd" translate="yes" xml:space="preserve">
          <source>If any element is a NaN, then the final sum will be NaN.</source>
          <target state="translated">いずれかの要素がNaNであれば、最終的な和はNaNになります。</target>
        </trans-unit>
        <trans-unit id="7043446a887039defab2fc7d623983a8ed813ef6" translate="yes" xml:space="preserve">
          <source>If any execution of this task takes longer than its period, then subsequent executions may start late, but will not concurrently execute.</source>
          <target state="translated">このタスクのいずれかの実行がその期間よりも長くかかる場合、後続の実行は遅く開始される可能性がありますが、同時に実行されることはありません。</target>
        </trans-unit>
        <trans-unit id="702be5b9ebfbe3a5f1d1aa77356733e4327d5c79" translate="yes" xml:space="preserve">
          <source>If any keys were added to the cancelled-key set while step (2) was in progress then they are processed as in step (1).</source>
          <target state="translated">ステップ(2)の実行中にキャンセルされたキーが追加された場合は、ステップ(1)と同様に処理される。</target>
        </trans-unit>
        <trans-unit id="39449a473dc6d7f957e4a256a3a7386489d76cfc" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;lastModifiedTime&lt;/code&gt;, &lt;code&gt;lastAccessTime&lt;/code&gt;, or &lt;code&gt;createTime&lt;/code&gt; parameters has the value &lt;code&gt;null&lt;/code&gt; then the corresponding timestamp is not changed. An implementation may require to read the existing values of the file attributes when only some, but not all, of the timestamp attributes are updated. Consequently, this method may not be an atomic operation with respect to other file system operations. Reading and re-writing existing values may also result in precision loss. If all of the &lt;code&gt;lastModifiedTime&lt;/code&gt;, &lt;code&gt;
 lastAccessTime&lt;/code&gt; and &lt;code&gt;createTime&lt;/code&gt; parameters are &lt;code&gt;null&lt;/code&gt; then this method has no effect.</source>
          <target state="translated">任意の場合 &lt;code&gt;lastModifiedTime&lt;/code&gt; 、 &lt;code&gt;lastAccessTime&lt;/code&gt; 、又は &lt;code&gt;createTime&lt;/code&gt; パラメータが値有する &lt;code&gt;null&lt;/code&gt; 、対応するタイムスタンプが変更されません。実装では、タイムスタンプ属性のすべてではなく一部のみが更新されるときに、ファイル属性の既存の値を読み取る必要がある場合があります。したがって、この方法は、他のファイルシステム操作に関してアトミック操作ではない可能性があります。既存の値の読み取りと再書き込みも、精度の低下につながる可能性があります。すべての場合 &lt;code&gt;lastModifiedTime&lt;/code&gt; 、 &lt;code&gt; lastAccessTime&lt;/code&gt; と &lt;code&gt;createTime&lt;/code&gt; パラメータが &lt;code&gt;null&lt;/code&gt; で、このメソッドは効果がありません。</target>
        </trans-unit>
        <trans-unit id="51f61f6cbbe9d425e171c7d86f0b2ee40a25ba9f" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;lastModifiedTime&lt;/code&gt;, &lt;code&gt;lastAccessTime&lt;/code&gt;, or &lt;code&gt;createTime&lt;/code&gt; parameters has the value &lt;code&gt;null&lt;/code&gt; then the corresponding timestamp is not changed. An implementation may require to read the existing values of the file attributes when only some, but not all, of the timestamp attributes are updated. Consequently, this method may not be an atomic operation with respect to other file system operations. Reading and re-writing existing values may also result in precision loss. If all of the &lt;code&gt;lastModifiedTime&lt;/code&gt;, &lt;code&gt;lastAccessTime&lt;/code&gt; and &lt;code&gt;createTime&lt;/code&gt; parameters are &lt;code&gt;null&lt;/code&gt; then this method has no effect.</source>
          <target state="translated">任意の場合 &lt;code&gt;lastModifiedTime&lt;/code&gt; 、 &lt;code&gt;lastAccessTime&lt;/code&gt; 、又は &lt;code&gt;createTime&lt;/code&gt; パラメータが値有する &lt;code&gt;null&lt;/code&gt; 、対応するタイムスタンプが変更されません。実装では、タイムスタンプ属性のすべてではなく一部のみが更新されるときに、ファイル属性の既存の値を読み取る必要がある場合があります。したがって、このメソッドは、他のファイルシステム操作に関してアトミック操作ではない場合があります。既存の値の読み取りと再書き込みによっても、精度が失われる可能性があります。すべての場合 &lt;code&gt;lastModifiedTime&lt;/code&gt; 、 &lt;code&gt;lastAccessTime&lt;/code&gt; と &lt;code&gt;createTime&lt;/code&gt; パラメータが &lt;code&gt;null&lt;/code&gt; で、このメソッドは効果がありません。</target>
        </trans-unit>
        <trans-unit id="e8c0135add7c8b60bb88502e1753b104e3e7777d" translate="yes" xml:space="preserve">
          <source>If any of the CA certificates contain the &lt;code&gt;BasicConstraintsExtension&lt;/code&gt;, the value of the &lt;code&gt;pathLenConstraint&lt;/code&gt; field of the extension overrides the maximum path length parameter whenever the result is a certification path of smaller length.</source>
          <target state="translated">CA証明書のいずれかに &lt;code&gt;BasicConstraintsExtension&lt;/code&gt; が含まれている場合、拡張の &lt;code&gt;pathLenConstraint&lt;/code&gt; フィールドの値は、結果の長さがより短い証明書パスである場合は常に、最大パス長パラメーターをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="2322580274e59c704b7ceb052b845f94fd2c310a" translate="yes" xml:space="preserve">
          <source>If any of the argument keys are not recognized and are not namespace qualified, the property will be ignored and not returned. In other words the behaviour is not orthogonal with &lt;a href=&quot;#setOutputProperties(java.util.Properties)&quot;&gt;&lt;code&gt;setOutputProperties&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">引数キーのいずれかが認識されず、名前空間で修飾されていない場合、プロパティは無視され、返されません。言い換えると、動作は&lt;a href=&quot;#setOutputProperties(java.util.Properties)&quot;&gt; &lt;code&gt;setOutputProperties&lt;/code&gt; と&lt;/a&gt;直交していません。</target>
        </trans-unit>
        <trans-unit id="782a50f5eb20d11713521429c1b0847fdaaf876b" translate="yes" xml:space="preserve">
          <source>If any of the following conditions occur in the readability graph, then resolution fails:</source>
          <target state="translated">可読性グラフに以下の条件のいずれかが発生した場合、解決に失敗します。</target>
        </trans-unit>
        <trans-unit id="8a96b6f648f1a586b2a9b7cb064808b149ba531a" translate="yes" xml:space="preserve">
          <source>If any of the following conditions occur, then resolution fails:</source>
          <target state="translated">以下の条件のいずれかに該当する場合は、解決に失敗します。</target>
        </trans-unit>
        <trans-unit id="3ec333633e17c9be083cec2c06b962a41326b457" translate="yes" xml:space="preserve">
          <source>If any of the supplied &lt;code&gt;ImageReadParam&lt;/code&gt;s contain optional setting values not supported by this reader (</source>
          <target state="translated">指定された &lt;code&gt;ImageReadParam&lt;/code&gt; のいずれかに、このリーダーでサポートされていないオプションの設定値が含まれている場合（</target>
        </trans-unit>
        <trans-unit id="76839c59491d34773c4207ef0c1d778a11ef3546" translate="yes" xml:space="preserve">
          <source>If any of these conversions proves impossible, fail with either a &lt;code&gt;ClassCastException&lt;/code&gt; if any trailing element cannot be cast to &lt;code&gt;A&lt;/code&gt; or a &lt;code&gt;NullPointerException&lt;/code&gt; if any trailing element is &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;A&lt;/code&gt; is not a reference type.</source>
          <target state="translated">これらの変換のいずれかが不可能であることが判明した場合、末尾の要素を &lt;code&gt;A&lt;/code&gt; にキャストできない場合は &lt;code&gt;ClassCastException&lt;/code&gt; で失敗し、末尾の要素が &lt;code&gt;null&lt;/code&gt; で &lt;code&gt;A&lt;/code&gt; が参照型でない場合は &lt;code&gt;NullPointerException&lt;/code&gt; で失敗します。</target>
        </trans-unit>
        <trans-unit id="21a8f6cbf8da0180ca327e40df0d37c1951e9068" translate="yes" xml:space="preserve">
          <source>If any of these restrictions are violated, &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; will throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt;. If the &lt;code&gt;interfaces&lt;/code&gt; array argument or any of its elements are &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; will be thrown.</source>
          <target state="translated">これらの制限のいずれかに違反すると、 &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; は &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローします。場合 &lt;code&gt;interfaces&lt;/code&gt; 配列引数またはその要素のいずれかである &lt;code&gt;null&lt;/code&gt; 、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="ff3b12e4e909401d37518b8a3b2f0f268050f07d" translate="yes" xml:space="preserve">
          <source>If any one of the given (name, filter) pairs cannot be registered, then the operation fails with an exception, and no names or filters are registered.</source>
          <target state="translated">与えられた(名前、フィルタ)ペアのいずれかが登録できない場合、操作は例外で失敗し、名前もフィルタも登録されません。</target>
        </trans-unit>
        <trans-unit id="aeed51a14c6f63342415cdd77d994dcbb7bd2135" translate="yes" xml:space="preserve">
          <source>If any recorded value is a NaN, then the final sum will be NaN.</source>
          <target state="translated">記録された値のいずれかがNaNであれば、最終的な合計はNaNとなります。</target>
        </trans-unit>
        <trans-unit id="c41f89efd65d6831c5b78321674605fbf8e57d9a" translate="yes" xml:space="preserve">
          <source>If any stream element is a NaN or the sum is at any point a NaN then the sum will be NaN. The value of a floating-point sum is a function both of the input values as well as the order of addition operations. The order of addition operations of this method is intentionally not defined to allow for implementation flexibility to improve the speed and accuracy of the computed result. In particular, this method may be implemented using compensated summation or other technique to reduce the error bound in the numerical sum compared to a simple summation of &lt;code&gt;double&lt;/code&gt; values.</source>
          <target state="translated">ストリーム要素がNaNであるか、合計が任意の時点でNaNである場合、合計はNaNになります。浮動小数点合計の値は、入力値と加算演算の順序の両方の関数です。このメソッドの加算演算の順序は、計算結果の速度と精度を向上させる実装の柔軟性を考慮して、意図的に定義されていません。特に、この方法は、補償された合計または他の技術を使用して実装され、 &lt;code&gt;double&lt;/code&gt; 値の単純な合計と比較して、数値合計のエラー限界を減らすことができます。</target>
        </trans-unit>
        <trans-unit id="d6e5c13d5caa4d3b73ae2556eecfd7419724c86e" translate="yes" xml:space="preserve">
          <source>If any thread is &lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt;interrupted&lt;/a&gt; while waiting, then all other waiting threads will throw &lt;a href=&quot;brokenbarrierexception&quot;&gt;&lt;code&gt;BrokenBarrierException&lt;/code&gt;&lt;/a&gt; and the barrier is placed in the broken state.</source>
          <target state="translated">待機中にいずれかのスレッドが&lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt;中断された&lt;/a&gt;場合、他のすべての待機中のスレッドは&lt;a href=&quot;brokenbarrierexception&quot;&gt; &lt;code&gt;BrokenBarrierException&lt;/code&gt; &lt;/a&gt;をスローし、バリアは壊れた状態になります。</target>
        </trans-unit>
        <trans-unit id="0366cecb1a7ed3c3842ffb9c2ca86a1363dd9a67" translate="yes" xml:space="preserve">
          <source>If any thread is &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;interrupted&lt;/a&gt; while waiting, then all other waiting threads will throw &lt;a href=&quot;brokenbarrierexception&quot;&gt;&lt;code&gt;BrokenBarrierException&lt;/code&gt;&lt;/a&gt; and the barrier is placed in the broken state.</source>
          <target state="translated">待機中にスレッドが&lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;中断されると&lt;/a&gt;、待機中の他のすべてのスレッドが&lt;a href=&quot;brokenbarrierexception&quot;&gt; &lt;code&gt;BrokenBarrierException&lt;/code&gt; &lt;/a&gt;をスローし、バリアーが壊れた状態になります。</target>
        </trans-unit>
        <trans-unit id="4afdb9645427c72b2b449dab0d6dc64d70f5f7ed" translate="yes" xml:space="preserve">
          <source>If any threads are waiting on this condition then one is selected for waking up. That thread must then re-acquire the lock before returning from &lt;code&gt;await&lt;/code&gt;.</source>
          <target state="translated">この状態で待機しているスレッドがある場合は、起動するスレッドが選択されます。そのスレッドは、 &lt;code&gt;await&lt;/code&gt; から戻る前に、ロックを再取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="9c78a7fa649adbc90dbb23129fc74d5e1c06006a" translate="yes" xml:space="preserve">
          <source>If any threads are waiting on this condition then they are all woken up. Each thread must re-acquire the lock before it can return from &lt;code&gt;await&lt;/code&gt;.</source>
          <target state="translated">この条件で待機しているスレッドがある場合、それらはすべて起こされます。各スレッドは、 &lt;code&gt;await&lt;/code&gt; から戻る前に、ロックを再取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="6def6409810618378abfde7ccc3db7a4a9969cbb" translate="yes" xml:space="preserve">
          <source>If any updates or modifications have been applied to the JoinRowSet the CachedRowSet returned by the method will not be able to persist it's changes back to the originating rows and tables in the in the datasource. The CachedRowSet instance returned should not contain modification data and it should clear all properties of it's originating SQL statement. An application should reset the SQL statement using the &lt;code&gt;RowSet.setCommand&lt;/code&gt; method.</source>
          <target state="translated">更新または変更がJoinRowSetに適用されている場合、メソッドによって返されるCachedRowSetは永続化できず、データソース内の元の行とテーブルに変更が戻されます。返されるCachedRowSetインスタンスには変更データが含まれていてはならず、元のSQLステートメントのすべてのプロパティがクリアされている必要があります。アプリケーションは、 &lt;code&gt;RowSet.setCommand&lt;/code&gt; メソッドを使用してSQLステートメントをリセットする必要があります。</target>
        </trans-unit>
        <trans-unit id="3ad420704ce0b8b6310a781cf438247c5b08c1d6" translate="yes" xml:space="preserve">
          <source>If application-layer protocols are supported by the underlying SSL/TLS implementation, this method configures which values can be negotiated by protocols such as &lt;a href=&quot;http://www.ietf.org/rfc/rfc7301.txt&quot;&gt; RFC 7301 &lt;/a&gt;, the Application Layer Protocol Negotiation (ALPN).</source>
          <target state="translated">アプリケーション層プロトコルが基盤となるSSL / TLS実装でサポートされている場合、このメソッドは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc7301.txt&quot;&gt;RFC 7301&lt;/a&gt;、アプリケーション層プロトコルネゴシエーション（ALPN）などのプロトコルでネゴシエートできる値を構成します。</target>
        </trans-unit>
        <trans-unit id="f0d6dca8e18fd60ae506385307a9dc90b88e0396" translate="yes" xml:space="preserve">
          <source>If arbitrary parameter type conversions are required, the method &lt;code&gt;setObject&lt;/code&gt; should be used with a target SQL type.</source>
          <target state="translated">任意のパラメーター型の変換が必要な場合は、メソッド &lt;code&gt;setObject&lt;/code&gt; をターゲットSQL型で使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="cc5b8f67def8251eae02d8e53ae706abfba5145a" translate="yes" xml:space="preserve">
          <source>If argument to this function is null, any properties previously set are removed, and the value will revert to the value defined in the templates object.</source>
          <target state="translated">この関数の引数が NULL の場合、以前に設定されたプロパティはすべて削除され、値は templates オブジェクトで定義された値に戻ります。</target>
        </trans-unit>
        <trans-unit id="b5244f53177f68a2b3ed5e4985bb324825bd1a66" translate="yes" xml:space="preserve">
          <source>If assistive technology service providers are not specified with a system property this implementation will look in a properties file located as follows:</source>
          <target state="translated">支援技術サービスプロバイダがシステムプロパティで指定されていない場合、この実装は以下のように配置されたプロパティファイルを探します。</target>
        </trans-unit>
        <trans-unit id="18a3bd0c38bccf34c6827e5596cec04cb57b5219" translate="yes" xml:space="preserve">
          <source>If at least one automatic module is enumerated by this algorithm, then every observable automatic module must be enumerated, regardless of whether any of their names are given by 'requires' directives of explicit module declarations.</source>
          <target state="translated">少なくとも1つの自動モジュールがこのアルゴリズムによって列挙される場合、観測可能なすべての自動モジュールは、明示的なモジュール宣言の'require'ディレクティブによってその名前が与えられているかどうかにかかわらず、列挙されなければなりません。</target>
        </trans-unit>
        <trans-unit id="39bc70b09921ff4ffa0b8bd08071b807a4a817ff" translate="yes" xml:space="preserve">
          <source>If at least one proxy interface is in a package that is &lt;em&gt;non-exported&lt;/em&gt; and &lt;em&gt;non-open&lt;/em&gt;:</source>
          <target state="translated">少なくとも1つのプロキシインターフェイスが、&lt;em&gt;エクスポート&lt;/em&gt;および&lt;em&gt;オープン&lt;/em&gt;&lt;em&gt;され&lt;/em&gt;てい&lt;em&gt;ない&lt;/em&gt;パッケージに含まれて&lt;em&gt;いる場合&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="2b0406f18bc56c48dc76b9e9165ced413b0430b2" translate="yes" xml:space="preserve">
          <source>If attachToInputContext is true, the new window will share the input context that corresponds to this input method context, so that events for components in the window are automatically dispatched to the input method. Also, when the window is opened using setVisible(true), the input context will prevent deactivate and activate calls to the input method that might otherwise be caused.</source>
          <target state="translated">attachToInputContextがtrueの場合、新しいウィンドウはこの入力メソッドのコンテキストに対応する入力コンテキストを共有し、ウィンドウ内のコンポーネントのイベントが自動的に入力メソッドにディスパッチされるようにします。また、setVisible(true)を使用してウィンドウを開いたときに、入力コンテキストは、そうでなければ発生する可能性のある入力メソッドへの呼び出しを無効化したり、有効化したりすることを防ぎます。</target>
        </trans-unit>
        <trans-unit id="47fbfc22f0224fd32a90e5910c55321028c1907f" translate="yes" xml:space="preserve">
          <source>If attribute already exists, replaces all existing values with new specified values. If the attribute does not exist, creates it. If no value is specified, deletes all the values of the attribute. Removal of the last value will remove the attribute if the attribute is required to have at least one value. If attempting to add more than one value to a single-valued attribute, throws &lt;code&gt;InvalidAttributeValueException&lt;/code&gt;.</source>
          <target state="translated">属性がすでに存在する場合、既存のすべての値を新しい指定値で置き換えます。属性が存在しない場合は作成します。値が指定されていない場合、属性のすべての値を削除します。属性に少なくとも1つの値が必要な場合、最後の値を削除すると属性が削除されます。単一値の属性に複数の値を追加しようとすると、 &lt;code&gt;InvalidAttributeValueException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="a71ec53a572d41f56b8978727aaa4319a3583553" translate="yes" xml:space="preserve">
          <source>If attribute does not exist, create the attribute. The resulting attribute has a union of the specified value set and the prior value set. Adding an attribute with no value will throw &lt;code&gt;InvalidAttributeValueException&lt;/code&gt; if the attribute must have at least one value. For a single-valued attribute where that attribute already exists, throws &lt;code&gt;AttributeInUseException&lt;/code&gt;. If attempting to add more than one value to a single-valued attribute, throws &lt;code&gt;InvalidAttributeValueException&lt;/code&gt;.</source>
          <target state="translated">属性が存在しない場合は、属性を作成します。結果の属性には、指定された値セットと前の値セットの和集合があります。値のない属性を追加すると、属性に少なくとも1つの値が必要な場合に &lt;code&gt;InvalidAttributeValueException&lt;/code&gt; がスローされます。その属性がすでに存在する単一値属性の場合、 &lt;code&gt;AttributeInUseException&lt;/code&gt; をスローします。単一値の属性に複数の値を追加しようとすると、 &lt;code&gt;InvalidAttributeValueException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="f3d3f8aee9c476b735dd96255aa064b6dd2f681b" translate="yes" xml:space="preserve">
          <source>If authentication is successful then an authenticated &lt;a href=&quot;../../../../java.base/javax/security/auth/subject&quot;&gt;&lt;code&gt;subject&lt;/code&gt;&lt;/a&gt; filled in with its associated &lt;a href=&quot;../../../../java.base/java/security/principal&quot;&gt;&lt;code&gt;principals&lt;/code&gt;&lt;/a&gt; is returned. Authorization checks will be then performed based on the given set of principals.</source>
          <target state="translated">認証が成功すると、関連する&lt;a href=&quot;../../../../java.base/java/security/principal&quot;&gt; &lt;code&gt;principals&lt;/code&gt; &lt;/a&gt;が入力された認証済み&lt;a href=&quot;../../../../java.base/javax/security/auth/subject&quot;&gt; &lt;code&gt;subject&lt;/code&gt; &lt;/a&gt;が返されます。次に、指定されたプリンシパルのセットに基づいて承認チェックが実行されます。</target>
        </trans-unit>
        <trans-unit id="3989b3dfcf79c0772b368fc99263d6921c534321" translate="yes" xml:space="preserve">
          <source>If authentication is successful then an authenticated &lt;a href=&quot;../../security/auth/subject&quot;&gt;&lt;code&gt;subject&lt;/code&gt;&lt;/a&gt; filled in with its associated &lt;a href=&quot;../../../java/security/principal&quot;&gt;&lt;code&gt;principals&lt;/code&gt;&lt;/a&gt; is returned. Authorization checks will be then performed based on the given set of principals.</source>
          <target state="translated">認証が成功すると、関連する&lt;a href=&quot;../../../java/security/principal&quot;&gt; &lt;code&gt;principals&lt;/code&gt; &lt;/a&gt;が入力された認証済み&lt;a href=&quot;../../security/auth/subject&quot;&gt; &lt;code&gt;subject&lt;/code&gt; &lt;/a&gt;が返されます。次に、与えられたプリンシパルのセットに基づいて承認チェックが実行されます。</target>
        </trans-unit>
        <trans-unit id="656e2a66175d25267b8bfdd6e344b28552a242bb" translate="yes" xml:space="preserve">
          <source>If auto-size is &lt;code&gt;false&lt;/code&gt;, and the image size doesn't match the tray icon space, the image is painted as-is inside that space &amp;mdash; if larger than the allocated space, it will be cropped.</source>
          <target state="translated">自動サイズが &lt;code&gt;false&lt;/code&gt; で、画像サイズがトレイアイコンのスペースと一致しない場合、画像はそのスペース内にそのまま描画されます。割り当てられたスペースよりも大きい場合は、トリミングされます。</target>
        </trans-unit>
        <trans-unit id="291b41936e512575859370f076451751c340db33" translate="yes" xml:space="preserve">
          <source>If auto-size is &lt;code&gt;true&lt;/code&gt;, the image is stretched or shrunk to fit the tray icon space.</source>
          <target state="translated">自動サイズ設定が &lt;code&gt;true&lt;/code&gt; の場合、画像はトレイアイコンのスペースに合わせて拡大または縮小されます。</target>
        </trans-unit>
        <trans-unit id="384a750120cc655c818a55ff4a92437e6d8b5336" translate="yes" xml:space="preserve">
          <source>If automatic redirection is enabled, and this request is redirected to another destination, then the caller must also have permission to connect to the redirected host/URL.</source>
          <target state="translated">自動リダイレクトが有効になっていて、このリクエストが別のデスティネーションにリダイレクトされている場合、 発信者はリダイレクトされたホスト/URLに接続する許可も持っていなければなりません。</target>
        </trans-unit>
        <trans-unit id="e1a72e75cda6642170c4e7a072c7c777581c7f64" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;Path&lt;/code&gt; objects are &lt;a href=&quot;path#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equal&lt;/code&gt;&lt;/a&gt; then this method returns &lt;code&gt;true&lt;/code&gt; without checking if the file exists. If the two &lt;code&gt;Path&lt;/code&gt; objects are associated with different providers then this method returns &lt;code&gt;false&lt;/code&gt;. Otherwise, this method checks if both &lt;code&gt;Path&lt;/code&gt; objects locate the same file, and depending on the implementation, may require to open or access both files.</source>
          <target state="translated">両方の &lt;code&gt;Path&lt;/code&gt; オブジェクトが&lt;a href=&quot;path#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equal&lt;/code&gt; &lt;/a&gt;、このメソッドはファイルが存在するかどうかを確認せずに &lt;code&gt;true&lt;/code&gt; を返します。2つの &lt;code&gt;Path&lt;/code&gt; オブジェクトが異なるプロバイダーに関連付けられている場合、このメソッドは &lt;code&gt;false&lt;/code&gt; を返します。それ以外の場合、このメソッドは両方の &lt;code&gt;Path&lt;/code&gt; オブジェクトが同じファイルを見つけるかどうかをチェックし、実装によっては、両方のファイルを開くかアクセスする必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="214c67c3b5c1b48a5612e6002691988064bf0ec4" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;Path&lt;/code&gt; objects are &lt;a href=&quot;path#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equal&lt;/code&gt;&lt;/a&gt; then this method returns &lt;code&gt;true&lt;/code&gt; without checking if the file exists. If the two &lt;code&gt;Path&lt;/code&gt; objects are associated with different providers then this method returns &lt;code&gt;false&lt;/code&gt;. Otherwise, this method checks if both &lt;code&gt;Path&lt;/code&gt; objects locate the same file, and depending on the implementation, may require to open or access both files.</source>
          <target state="translated">両方の &lt;code&gt;Path&lt;/code&gt; オブジェクトが&lt;a href=&quot;path#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equal&lt;/code&gt; &lt;/a&gt;、このメソッドはファイルが存在するかどうかを確認せずに &lt;code&gt;true&lt;/code&gt; を返します。2つの &lt;code&gt;Path&lt;/code&gt; オブジェクトが異なるプロバイダーに関連付けられている場合、このメソッドは &lt;code&gt;false&lt;/code&gt; を返します。それ以外の場合、このメソッドは、両方の &lt;code&gt;Path&lt;/code&gt; オブジェクトが同じファイルを見つけるかどうかをチェックし、実装によっては、両方のファイルを開いたりアクセスしたりする必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="df4547af366065ff735c348a2ae9741324e8b7ac" translate="yes" xml:space="preserve">
          <source>If both arguments are integers, then the result is exactly equal to the mathematical result of raising the first argument to the power of the second argument if that result can in fact be represented exactly as a &lt;code&gt;double&lt;/code&gt; value.</source>
          <target state="translated">両方の引数が整数の場合、結果が実際に &lt;code&gt;double&lt;/code&gt; 値として正確に表現できる場合、結果は最初の引数を2番目の引数で累乗した数学的結果とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="9e16fe4a0bb9164db40801221f5bd4724181b86e" translate="yes" xml:space="preserve">
          <source>If both arguments are negative infinity, then the result is the &lt;code&gt;double&lt;/code&gt; value closest to -3*</source>
          <target state="translated">両方の引数が負の無限大の場合、結果は-3 *に最も近い &lt;code&gt;double&lt;/code&gt; 値です</target>
        </trans-unit>
        <trans-unit id="bfd7882093d9bf21c1a62a7634c6a186d1b60176" translate="yes" xml:space="preserve">
          <source>If both arguments are positive infinity, then the result is the &lt;code&gt;double&lt;/code&gt; value closest to</source>
          <target state="translated">両方の引数が正の無限大の場合、結果は最も近い &lt;code&gt;double&lt;/code&gt; 値になります</target>
        </trans-unit>
        <trans-unit id="fc50ec0abca10e371c02173b94982f3dab4ec295" translate="yes" xml:space="preserve">
          <source>If both arguments are signed zeros, &lt;code&gt;direction&lt;/code&gt; is returned unchanged (as implied by the requirement of returning the second argument if the arguments compare as equal).</source>
          <target state="translated">両方の引数が符号付きゼロの場合、 &lt;code&gt;direction&lt;/code&gt; は変更されずに返されます（引数が等しい場合に2番目の引数を返す必要があることからわかるように）。</target>
        </trans-unit>
        <trans-unit id="1ae942765abc7210f5202cbe952dc04cbb521ee9" translate="yes" xml:space="preserve">
          <source>If both arguments are signed zeros, a value equivalent to &lt;code&gt;direction&lt;/code&gt; is returned.</source>
          <target state="translated">両方の引数が符号付きゼロの場合、 &lt;code&gt;direction&lt;/code&gt; と同等の値が返されます。</target>
        </trans-unit>
        <trans-unit id="70f5cab03df99b6ce504b587920dfb5e98d8aa1e" translate="yes" xml:space="preserve">
          <source>If both authority components are server-based then the URIs are ordered according to their user-information components; if these components are identical then the URIs are ordered according to the ordering of their hosts, without regard to case; if the hosts are identical then the URIs are ordered according to the ordering of their ports.</source>
          <target state="translated">両方の権限コンポーネントがサーバーベースの場合、URIはそのユーザー情報コンポーネントに従って 順番に並べられる。これらのコンポーネントが同一の場合、URIは大文字小文字に関係なく、 ホストの順番に従って順番に並べられる。</target>
        </trans-unit>
        <trans-unit id="6f5d44c367ff5b5081fe504e77935fe0c93a1c15" translate="yes" xml:space="preserve">
          <source>If both date and time were parsed and either an offset or zone is present, the field &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; is created. If an offset was parsed then the offset will be combined with the &lt;code&gt;LocalDateTime&lt;/code&gt; to form the instant, with any zone ignored. If a &lt;code&gt;ZoneId&lt;/code&gt; was parsed without an offset then the zone will be combined with the &lt;code&gt;LocalDateTime&lt;/code&gt; to form the instant using the rules of &lt;a href=&quot;../chrono/chronolocaldatetime#atZone(java.time.ZoneId)&quot;&gt;&lt;code&gt;ChronoLocalDateTime.atZone(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">日付と時刻の両方が解析され、オフセットまたはゾーンのいずれかが存在する場合、フィールド&lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt;が作成されます。オフセットが解析された場合、オフセットは &lt;code&gt;LocalDateTime&lt;/code&gt; と組み合わされてインスタントを形成し、ゾーンは無視されます。 &lt;code&gt;ZoneId&lt;/code&gt; がオフセットなしで解析された場合、ゾーンは &lt;code&gt;LocalDateTime&lt;/code&gt; と結合され、&lt;a href=&quot;../chrono/chronolocaldatetime#atZone(java.time.ZoneId)&quot;&gt; &lt;code&gt;ChronoLocalDateTime.atZone(ZoneId)&lt;/code&gt; の&lt;/a&gt;ルールを使用してインスタントを形成します。</target>
        </trans-unit>
        <trans-unit id="5a0b7a5fda83b5b4e68fb0e1c58f9d3e3a0f17bf" translate="yes" xml:space="preserve">
          <source>If both functions are omitted, there is no iteration variable for the corresponding clause (&lt;code&gt;void&lt;/code&gt; is used as the type to indicate that). If one of them is omitted, the other's return type defines the clause's iteration variable type. If both are given, the common return type (they must be identical) defines the clause's iteration variable type.</source>
          <target state="translated">両方の関数を省略した場合、対応する句の反復変数はありません（それを示すタイプとして &lt;code&gt;void&lt;/code&gt; が使用されます）。それらの1つが省略されている場合、もう1つの戻り値の型は、句の反復変数型を定義します。両方が指定されている場合、共通の戻り値の型（同一である必要があります）は、句の反復変数の型を定義します。</target>
        </trans-unit>
        <trans-unit id="35daff90f12a3fdfb2ee7aaec5156a628122493a" translate="yes" xml:space="preserve">
          <source>If both the &lt;code&gt;'+'&lt;/code&gt; and &lt;code&gt;' '&lt;/code&gt; flags are given then an &lt;a href=&quot;illegalformatflagsexception&quot;&gt;&lt;code&gt;IllegalFormatFlagsException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">両方の場合は &lt;code&gt;'+'&lt;/code&gt; と &lt;code&gt;' '&lt;/code&gt; フラグが与えられている&lt;a href=&quot;illegalformatflagsexception&quot;&gt; &lt;code&gt;IllegalFormatFlagsException&lt;/code&gt; が&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="77fe9618329cbe1c02136a891b425c89e9010bfc" translate="yes" xml:space="preserve">
          <source>If both the &lt;code&gt;'+'&lt;/code&gt; and &lt;code&gt;'&amp;nbsp;&amp;nbsp;'&lt;/code&gt; flags are given then an &lt;a href=&quot;illegalformatflagsexception&quot;&gt;&lt;code&gt;IllegalFormatFlagsException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">両方の場合は &lt;code&gt;'+'&lt;/code&gt; と &lt;code&gt;'&amp;nbsp;&amp;nbsp;'&lt;/code&gt; フラグが与えられている&lt;a href=&quot;illegalformatflagsexception&quot;&gt; &lt;code&gt;IllegalFormatFlagsException&lt;/code&gt; が&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="86fead13194ade589a2825bc28cba12789046f04" translate="yes" xml:space="preserve">
          <source>If both the &lt;code&gt;'-'&lt;/code&gt; and &lt;code&gt;'0'&lt;/code&gt; flags are given then an &lt;a href=&quot;illegalformatflagsexception&quot;&gt;&lt;code&gt;IllegalFormatFlagsException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">両方の場合は &lt;code&gt;'-'&lt;/code&gt; と &lt;code&gt;'0'&lt;/code&gt; フラグが指定され、その後&lt;a href=&quot;illegalformatflagsexception&quot;&gt; &lt;code&gt;IllegalFormatFlagsException&lt;/code&gt; が&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="37322522f6007d5f007c17ebbe89695f06d7d158" translate="yes" xml:space="preserve">
          <source>If both the PrincipalClass and &quot;PrincipalName&quot; are &quot;*&quot;, then access is granted to the specified Credential owned by any &lt;code&gt;Subject&lt;/code&gt;.</source>
          <target state="translated">PrincipalClassと &quot;PrincipalName&quot;の両方が &quot;*&quot;の場合、任意の &lt;code&gt;Subject&lt;/code&gt; が所有する指定されたCredentialへのアクセスが許可されます。</target>
        </trans-unit>
        <trans-unit id="905c92d5f8cc252cd790d5c0e9c59aa390231cea" translate="yes" xml:space="preserve">
          <source>If both the icon and text properties are set, this property defines the space between them.</source>
          <target state="translated">iconプロパティとtextプロパティの両方が設定されている場合、このプロパティはそれらの間のスペースを定義します。</target>
        </trans-unit>
        <trans-unit id="7f1f59b1990a9778560b4bab37a8896d7e2ca6a4" translate="yes" xml:space="preserve">
          <source>If both the language and country fields are missing, this function will return the empty string, even if the variant, script, or extensions field is present (you can't have a locale with just a variant, the variant must accompany a well-formed language or country code).</source>
          <target state="translated">言語フィールドと国フィールドの両方が欠けている場合、この関数は variant,script,extensions フィールドがあっても空の文字列を返します (ロケールに variant だけを指定することはできません。 variant にはきちんとした形の言語コードや国コードが必要です)。</target>
        </trans-unit>
        <trans-unit id="198c8792365f76a0effc383dff9d0f2e3f4c671c" translate="yes" xml:space="preserve">
          <source>If button 1 is pressed, this is implemented to request focus on the associated text component, and to set the caret position.</source>
          <target state="translated">ボタン1が押された場合、関連するテキストコンポーネントへのフォーカスを要求し、キャレット位置を設定するために実装されます。</target>
        </trans-unit>
        <trans-unit id="7f1c5cd838d41d438b8c0b687719a88a74c90d50" translate="yes" xml:space="preserve">
          <source>If button 1 is pressed, this is implemented to request focus on the associated text component, and to set the caret position. If the shift key is held down, the caret will be moved, potentially resulting in a selection, otherwise the caret position will be set to the new location. If the component is not enabled, there will be no request for focus.</source>
          <target state="translated">ボタン 1 が押された場合には、 これは関連するテキストコンポーネントへのフォーカスを要求し、 キャレットの位置を設定するために実装されています。シフトキーを押し続けると、キャレットが移動して選択が行われる可能性がありますが、そうでなければキャレットの位置は新しい位置に設定されます。そのコンポーネントが有効になっていない場合は、フォーカスの要求はありません。</target>
        </trans-unit>
        <trans-unit id="f923d1532c20f84a25813e955834f5127ccc56bb" translate="yes" xml:space="preserve">
          <source>If c is a JRootPane descendant return its JRootPane ancestor.</source>
          <target state="translated">cがJRootPaneの子孫である場合は、そのJRootPaneの祖先を返します。</target>
        </trans-unit>
        <trans-unit id="d4941c81aaff08fa305d979d6a292103fdf2015a" translate="yes" xml:space="preserve">
          <source>If c is a JRootPane descendant return its JRootPane ancestor. If c is a RootPaneContainer then return its JRootPane.</source>
          <target state="translated">cがJRootPaneの子孫ならば、そのJRootPaneの祖先を返します。cがRootPaneContainerであれば、そのJRootPaneを返します。</target>
        </trans-unit>
        <trans-unit id="297ea4154bf357de478f2a9da3045f4e48159d4d" translate="yes" xml:space="preserve">
          <source>If called by a ForkJoinTask operating in this pool, equivalent in effect to &lt;a href=&quot;forkjointask#helpQuiesce()&quot;&gt;&lt;code&gt;ForkJoinTask.helpQuiesce()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプールで動作するForkJoinTaskによって呼び出された場合、実質的に&lt;a href=&quot;forkjointask#helpQuiesce()&quot;&gt; &lt;code&gt;ForkJoinTask.helpQuiesce()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="3383616e30ed133f8b457a9e998c8762f65d5b51" translate="yes" xml:space="preserve">
          <source>If called by a ForkJoinTask operating in this pool, equivalent in effect to &lt;a href=&quot;forkjointask#helpQuiesce()&quot;&gt;&lt;code&gt;ForkJoinTask.helpQuiesce()&lt;/code&gt;&lt;/a&gt;. Otherwise, waits and/or attempts to assist performing tasks until this pool &lt;a href=&quot;#isQuiescent()&quot;&gt;&lt;code&gt;isQuiescent()&lt;/code&gt;&lt;/a&gt; or the indicated timeout elapses.</source>
          <target state="translated">このプールで動作するForkJoinTaskによって呼び出された場合、実質的に&lt;a href=&quot;forkjointask#helpQuiesce()&quot;&gt; &lt;code&gt;ForkJoinTask.helpQuiesce()&lt;/code&gt; &lt;/a&gt;と同等です。それ以外の場合は、このプールが&lt;a href=&quot;#isQuiescent()&quot;&gt; &lt;code&gt;isQuiescent()&lt;/code&gt; &lt;/a&gt;か、指定されたタイムアウトが経過するまで待機するか、タスクの実行を支援しようとします。</target>
        </trans-unit>
        <trans-unit id="f17a471a0efa20dccdfd9df73789528ef03ee4cd" translate="yes" xml:space="preserve">
          <source>If called by a ForkJoinTask operating in this pool, equivalent in effect to &lt;a href=&quot;forkjointask#helpQuiesce--&quot;&gt;&lt;code&gt;ForkJoinTask.helpQuiesce()&lt;/code&gt;&lt;/a&gt;. Otherwise, waits and/or attempts to assist performing tasks until this pool &lt;a href=&quot;forkjoinpool#isQuiescent--&quot;&gt;&lt;code&gt;isQuiescent()&lt;/code&gt;&lt;/a&gt; or the indicated timeout elapses.</source>
          <target state="translated">このプールで動作するForkJoinTaskによって呼び出された場合、実質的に&lt;a href=&quot;forkjointask#helpQuiesce--&quot;&gt; &lt;code&gt;ForkJoinTask.helpQuiesce()&lt;/code&gt; &lt;/a&gt;と同等です。それ以外の場合は、このプールが&lt;a href=&quot;forkjoinpool#isQuiescent--&quot;&gt; &lt;code&gt;isQuiescent()&lt;/code&gt; &lt;/a&gt;または指定されたタイムアウトが経過するまで、タスクの実行を支援または待機します。</target>
        </trans-unit>
        <trans-unit id="5c8be13a39c3ce6b65d510654f24b14ebdee6bb3" translate="yes" xml:space="preserve">
          <source>If called on a connection that sets the same header multiple times with possibly different values, only the last value is returned.</source>
          <target state="translated">同じヘッダを異なる値で複数回設定している接続に対して呼び出された場合、最後の値だけが返されます。</target>
        </trans-unit>
        <trans-unit id="c482125ee1539de1724656d21516fd3060b7e464" translate="yes" xml:space="preserve">
          <source>If cipher suites have been set via &lt;code&gt;setEnabledCipherSuites&lt;/code&gt; then they are enabled before the TLS handshake begins.</source>
          <target state="translated">暗号スイートが &lt;code&gt;setEnabledCipherSuites&lt;/code&gt; を介して設定されている場合、TLSハンドシェイクが始まる前に暗号スイートが有効になります。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
