<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="d3fe3fca46a00d556efb3e52ff334ccc25f6d2f2" translate="yes" xml:space="preserve">
          <source>If set, the last access time will be stored into the extended timestamp fields of entry's &lt;code&gt;optional extra data&lt;/code&gt;, when output to a ZIP file or ZIP file formatted stream.</source>
          <target state="translated">設定すると、ZIPファイルまたはZIPファイル形式のストリームに出力するときに、最終アクセス時刻がエントリの &lt;code&gt;optional extra data&lt;/code&gt; の拡張タイムスタンプフィールドに保存されます。</target>
        </trans-unit>
        <trans-unit id="8f308d30cc56ad52b3bab469509470a688175d5d" translate="yes" xml:space="preserve">
          <source>If several threads simultaneously execute a bootstrap method for a single dynamic call site, the JVM must choose one &lt;code&gt;CallSite&lt;/code&gt; object and install it visibly to all threads. Any other bootstrap method calls are allowed to complete, but their results are ignored, and their dynamic call site invocations proceed with the originally chosen target object.</source>
          <target state="translated">複数のスレッドが単一の動的呼び出しサイトのブートストラップメソッドを同時に実行する場合、JVMは1つの &lt;code&gt;CallSite&lt;/code&gt; オブジェクトを選択し、すべてのスレッドに目に見える形でインストールする必要があります。他のブートストラップメソッドの呼び出しは完了できますが、その結果は無視され、動的な呼び出しサイトの呼び出しは、最初に選択されたターゲットオブジェクトで続行されます。</target>
        </trans-unit>
        <trans-unit id="18b1b4b5ea1cd9ac6c8f6934c943af5a9030e95e" translate="yes" xml:space="preserve">
          <source>If several threads simultaneously execute a bootstrap method for a single dynamically-computed call site or constant, the JVM must choose one bootstrap method result and install it visibly to all threads. Any other bootstrap method calls are allowed to complete, but their results are ignored.</source>
          <target state="translated">複数のスレッドが単一の動的に計算された呼び出しサイトまたは定数に対するブートストラップメソッドを同時に実行する場合、JVMは1つのブートストラップメソッドの結果を選択し、すべてのスレッドに目に見える形でインストールしなければなりません。他のブートストラップメソッドの呼び出しは完了することが許可されますが、その結果は無視されます。</target>
        </trans-unit>
        <trans-unit id="653e73bbef0b2a0664fc9c6111cdb7e33befdd39" translate="yes" xml:space="preserve">
          <source>If simply changing the name of the given node is not possible, the following operations are performed: a new node is created, any registered event listener is registered on the new node, any user data attached to the old node is removed from that node, the old node is removed from its parent if it has one, the children are moved to the new node, if the renamed node is an &lt;code&gt;Element&lt;/code&gt; its attributes are moved to the new node, the new node is inserted at the position the old node used to have in its parent's child nodes list if it has one, the user data that was attached to the old node is attached to the new node.</source>
          <target state="translated">指定されたノードの名前を単純に変更できない場合は、次の操作が実行されます。新しいノードが作成され、登録されたイベントリスナーが新しいノードに登録され、古いノードに接続されているユーザーデータがそのノードから削除されます。古いノードがある場合はその親から削除され、子は新しいノードに移動されます。名前が変更されたノードが &lt;code&gt;Element&lt;/code&gt; 場合、その属性は新しいノードに移動され、新しいノードは古いノードが使用した位置に挿入されます。親の子ノードリストにある場合は、古いノードにアタッチされていたユーザーデータが新しいノードにアタッチされます。</target>
        </trans-unit>
        <trans-unit id="d7c65182d3cadba09ddb23fbbd8a75757afd7c8e" translate="yes" xml:space="preserve">
          <source>If size requirements are explicitly specified for the paragraph, use that requirements. Otherwise, use the requirements of the superclass &lt;a href=&quot;../paragraphview&quot;&gt;&lt;code&gt;ParagraphView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">段落にサイズ要件が明示的に指定されている場合は、その要件を使用します。それ以外の場合は、スーパークラス&lt;a href=&quot;../paragraphview&quot;&gt; &lt;code&gt;ParagraphView&lt;/code&gt; の&lt;/a&gt;要件を使用してください。</target>
        </trans-unit>
        <trans-unit id="a30312a3ee2ee2f769f60fddc7aed8e6e676a91e" translate="yes" xml:space="preserve">
          <source>If so, the SQL AS clause can be used to provide names for computed columns or to provide alias names for columns as required.</source>
          <target state="translated">その場合、SQL AS 句を使用して、計算されたカラムの名前を指定したり、必要に応じてカラムのエイリアス名を指定したりすることができます。</target>
        </trans-unit>
        <trans-unit id="3080743f4d15c8fc1f75465fc6801e428e44fe7c" translate="yes" xml:space="preserve">
          <source>If some listeners have been added with a named property, then the returned array will be a mixture of PropertyChangeListeners and &lt;code&gt;PropertyChangeListenerProxy&lt;/code&gt;s. If the calling method is interested in distinguishing the listeners then it must test each element to see if it's a &lt;code&gt;PropertyChangeListenerProxy&lt;/code&gt;, perform the cast, and examine the parameter.</source>
          <target state="translated">名前付きプロパティでいくつかのリスナーが追加されている場合、返される配列はPropertyChangeListenersと &lt;code&gt;PropertyChangeListenerProxy&lt;/code&gt; の混合になります。呼び出しメソッドがリスナーの識別に関心がある場合は、各要素をテストして、それが &lt;code&gt;PropertyChangeListenerProxy&lt;/code&gt; であるかどうかを確認し、キャストを実行して、パラメーターを調べる必要があります。</target>
        </trans-unit>
        <trans-unit id="6cf497c1785865189fe796ed0e1d220915d011be" translate="yes" xml:space="preserve">
          <source>If some listeners have been added with a named property, then the returned array will be a mixture of VetoableChangeListeners and &lt;code&gt;VetoableChangeListenerProxy&lt;/code&gt;s. If the calling method is interested in distinguishing the listeners then it must test each element to see if it's a &lt;code&gt;VetoableChangeListenerProxy&lt;/code&gt;, perform the cast, and examine the parameter.</source>
          <target state="translated">名前付きプロパティでいくつかのリスナーが追加されている場合、返される配列はVetoableChangeListenersと &lt;code&gt;VetoableChangeListenerProxy&lt;/code&gt; の混合になります。呼び出しメソッドがリスナーの区別に関心がある場合は、各要素をテストして、それが &lt;code&gt;VetoableChangeListenerProxy&lt;/code&gt; であるかどうかを確認し、キャストを実行して、パラメーターを調べる必要があります。</target>
        </trans-unit>
        <trans-unit id="0cc3c7dd73763675362089e6dbd76aa79687340e" translate="yes" xml:space="preserve">
          <source>If some of the clause functions are virtual methods on an instance, the instance itself can be conveniently placed in an initial invariant loop &quot;variable&quot;, using an initial clause like &lt;code&gt;new MethodHandle[]{identity(ObjType.class)}&lt;/code&gt;. In that case, the instance reference will be the first iteration variable value, and it will be easy to use virtual methods as clause parts, since all of them will take a leading instance reference matching that value.</source>
          <target state="translated">一部の句関数がインスタンスの仮想メソッドである場合、 &lt;code&gt;new MethodHandle[]{identity(ObjType.class)}&lt;/code&gt; ような初期句を使用して、インスタンス自体を初期不変ループ「変数」に簡単に配置できます。その場合、インスタンス参照は最初の反復変数値になり、仮想メソッドはすべてその値に一致する先頭のインスタンス参照を取得するため、句の一部として簡単に使用できます。</target>
        </trans-unit>
        <trans-unit id="4809b1b1dafea4dfced97329f0d27180c7e418e7" translate="yes" xml:space="preserve">
          <source>If some other window is already always-on-top then the relative order between these windows is unspecified (depends on platform). No window can be brought to be over the always-on-top window except maybe another always-on-top window.</source>
          <target state="translated">もし他のウィンドウが既に常時トップにある場合、これらのウィンドウ間の相対的な順序は不特定です (プラットフォームに依存します)。他のウィンドウが常に上にある場合を除いて、どのウィンドウも常に上にあるウィンドウの上に来ることはできません。</target>
        </trans-unit>
        <trans-unit id="9c852ab67f6ae0af547293dc6511f0705244b787" translate="yes" xml:space="preserve">
          <source>If specified, these insets act as padding around the cell renderer when laying out and painting the &quot;selected&quot; item in the combo box.</source>
          <target state="translated">指定された場合、これらのインセットは、コンボボックスで「選択された」項目をレイアウトしてペイントする際に、セル レンダラーの周りのパディングとして機能します。</target>
        </trans-unit>
        <trans-unit id="5a8e20a8b6edf9f99ddfa05066dd30cd8c55b9b1" translate="yes" xml:space="preserve">
          <source>If specified, these insets act as padding around the cell renderer when laying out and painting the &quot;selected&quot; item in the combo box. These insets add to those specified by the cell renderer.</source>
          <target state="translated">指定された場合、これらのインセットは、コンボボックスで「選択された」項目をレイアウトしてペイントする際に、セル レンダラーの周りのパディングとして機能します。これらのインセットは、セル レンダラーで指定されたものに追加されます。</target>
        </trans-unit>
        <trans-unit id="a5c010eef59c15644a375468c16c24a59e5c43de" translate="yes" xml:space="preserve">
          <source>If starting any of the processes throws an Exception, all processes are forcibly destroyed.</source>
          <target state="translated">いずれかのプロセスを起動して例外が発生した場合、すべてのプロセスが強制的に破棄されます。</target>
        </trans-unit>
        <trans-unit id="ee377394ee6fe11a94b05880ae8a4e56e23eb11b" translate="yes" xml:space="preserve">
          <source>If state is &lt;a href=&quot;cardterminals.state#ALL&quot;&gt;&lt;code&gt;State.ALL&lt;/code&gt;&lt;/a&gt;, this method returns all CardTerminals encapsulated by this object. If state is &lt;a href=&quot;cardterminals.state#CARD_PRESENT&quot;&gt;&lt;code&gt;State.CARD_PRESENT&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cardterminals.state#CARD_ABSENT&quot;&gt;&lt;code&gt;State.CARD_ABSENT&lt;/code&gt;&lt;/a&gt;, it returns all CardTerminals where a card is currently present or absent, respectively.</source>
          <target state="translated">stateが&lt;a href=&quot;cardterminals.state#ALL&quot;&gt; &lt;code&gt;State.ALL&lt;/code&gt; の&lt;/a&gt;場合、このメソッドは、このオブジェクトによってカプセル化されたすべてのCardTerminalを返します。 stateが&lt;a href=&quot;cardterminals.state#CARD_PRESENT&quot;&gt; &lt;code&gt;State.CARD_PRESENT&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;cardterminals.state#CARD_ABSENT&quot;&gt; &lt;code&gt;State.CARD_ABSENT&lt;/code&gt; の&lt;/a&gt;場合、カードが現在存在するか存在しないかをそれぞれ示すすべてのCardTerminalsを返します。</target>
        </trans-unit>
        <trans-unit id="97e2c677edafae44cb499869bec55d8b0b28cb2c" translate="yes" xml:space="preserve">
          <source>If state is &lt;a href=&quot;cardterminals.state#CARD_INSERTION&quot;&gt;&lt;code&gt;State.CARD_INSERTION&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cardterminals.state#CARD_REMOVAL&quot;&gt;&lt;code&gt;State.CARD_REMOVAL&lt;/code&gt;&lt;/a&gt;, it returns all CardTerminals for which an insertion (or removal, respectively) was detected during the last call to &lt;a href=&quot;#waitForChange()&quot;&gt;waitForChange()&lt;/a&gt;. If &lt;code&gt;waitForChange()&lt;/code&gt; has not been called on this object, &lt;code&gt;CARD_INSERTION&lt;/code&gt; is equivalent to &lt;code&gt;CARD_PRESENT&lt;/code&gt; and &lt;code&gt;CARD_REMOVAL&lt;/code&gt; is equivalent to &lt;code&gt;CARD_ABSENT&lt;/code&gt;. For an example of the use of &lt;code&gt;CARD_INSERTION&lt;/code&gt;, see &lt;a href=&quot;#waitForChange()&quot;&gt;&lt;code&gt;waitForChange()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">stateが&lt;a href=&quot;cardterminals.state#CARD_INSERTION&quot;&gt; &lt;code&gt;State.CARD_INSERTION&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;cardterminals.state#CARD_REMOVAL&quot;&gt; &lt;code&gt;State.CARD_REMOVAL&lt;/code&gt; の&lt;/a&gt;場合、&lt;a href=&quot;#waitForChange()&quot;&gt;waitForChange（）の&lt;/a&gt;最後の呼び出し中に挿入（または削除）が検出されたすべてのCardTerminalを返します。場合 &lt;code&gt;waitForChange()&lt;/code&gt; このオブジェクトで呼び出されていない、 &lt;code&gt;CARD_INSERTION&lt;/code&gt; は同等です &lt;code&gt;CARD_PRESENT&lt;/code&gt; と &lt;code&gt;CARD_REMOVAL&lt;/code&gt; は同等です &lt;code&gt;CARD_ABSENT&lt;/code&gt; 。 &lt;code&gt;CARD_INSERTION&lt;/code&gt; の使用例については、&lt;a href=&quot;#waitForChange()&quot;&gt; &lt;code&gt;waitForChange()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="36119d6ef751d0ba1a40bc06d8c08c0232acb626" translate="yes" xml:space="preserve">
          <source>If still no result bundle is found, the base name alone is looked up. If this still fails, a &lt;code&gt;MissingResourceException&lt;/code&gt; is thrown.</source>
          <target state="translated">それでも結果バンドルが見つからない場合は、ベース名だけが検索されます。それでも失敗する場合は、 &lt;code&gt;MissingResourceException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="49c2d956b15c160db2755278d76b95411d1638e9" translate="yes" xml:space="preserve">
          <source>If such a service has been registered with the context, or one of its nesting context's, in the case where a context delegate to its context to satisfy a service request, then the BeanContextServiceProvider associated with the service is asked to provide an instance of that service.</source>
          <target state="translated">コンテキストがサービス要求を満たすためにそのコンテキストに委任する場合に,そのようなサービスがコンテキストまたはそのネスティングコンテキストの1つに登録されている場合,そのサービスに関連付けられたBeanContextServiceProviderは,そのサービスのインスタンスを提供するように要求される。</target>
        </trans-unit>
        <trans-unit id="94b0570a3ef5bacc1df2844b6f6f55155f5164cd" translate="yes" xml:space="preserve">
          <source>If such an &lt;code&gt;IOException&lt;/code&gt; is not thrown, then the stream is reset to a state such that all the bytes read since the most recent call to &lt;code&gt;mark&lt;/code&gt; (or since the start of the file, if &lt;code&gt;mark&lt;/code&gt; has not been called) will be resupplied to subsequent callers of the &lt;code&gt;read&lt;/code&gt; method, followed by any bytes that otherwise would have been the next input data as of the time of the call to &lt;code&gt;reset&lt;/code&gt;.</source>
          <target state="translated">そのような &lt;code&gt;IOException&lt;/code&gt; がスローされない場合、ストリームは状態にリセットされ、最新の &lt;code&gt;mark&lt;/code&gt; 呼び出し以降（または、 &lt;code&gt;mark&lt;/code&gt; が呼び出されていない場合はファイルの開始以降）に読み取られたすべてのバイトが後続のバイトに再供給されます。 &lt;code&gt;read&lt;/code&gt; メソッドの呼び出し元。その後に、 &lt;code&gt;reset&lt;/code&gt; の呼び出し時点で次の入力データであるバイトが続きます。</target>
        </trans-unit>
        <trans-unit id="ba67a915702ddd93a2439399e9e5620bf22a0c62" translate="yes" xml:space="preserve">
          <source>If such an error is thrown then subsequent invocations of the iterator will make a best effort to locate and instantiate the next available provider, but in general such recovery cannot be guaranteed.</source>
          <target state="translated">このようなエラーがスローされた場合、後続のイテレータの呼び出しは、次の利用可能なプロバイダを見つけてインスタンス化するために最善の努力をしますが、一般的に、このような回復は保証されません。</target>
        </trans-unit>
        <trans-unit id="0ca56d49fb83daa43c8cab6e57a0bc195c1fa094" translate="yes" xml:space="preserve">
          <source>If support for extended mouse buttons is &lt;a href=&quot;toolkit#areExtraMouseButtonsEnabled()&quot;&gt;&lt;code&gt;disabled&lt;/code&gt;&lt;/a&gt; by Java then it is allowed to use only the following standard button masks: &lt;code&gt;InputEvent.BUTTON1_DOWN_MASK&lt;/code&gt;, &lt;code&gt;InputEvent.BUTTON2_DOWN_MASK&lt;/code&gt;, &lt;code&gt;InputEvent.BUTTON3_DOWN_MASK&lt;/code&gt;.</source>
          <target state="translated">拡張マウスボタンのサポートがJavaによって&lt;a href=&quot;toolkit#areExtraMouseButtonsEnabled()&quot;&gt; &lt;code&gt;disabled&lt;/code&gt; &lt;/a&gt;されている場合、次の標準ボタンマスクのみを使用できます： &lt;code&gt;InputEvent.BUTTON1_DOWN_MASK&lt;/code&gt; 、 &lt;code&gt;InputEvent.BUTTON2_DOWN_MASK&lt;/code&gt; 、 &lt;code&gt;InputEvent.BUTTON3_DOWN_MASK&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d39904b337a524b3be8e74dcbdcdc3b283655905" translate="yes" xml:space="preserve">
          <source>If support for extended mouse buttons is &lt;a href=&quot;toolkit#areExtraMouseButtonsEnabled()&quot;&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/a&gt; by Java then it is allowed to use the standard button masks and masks for existing extended mouse buttons, if the mouse has more then three buttons. In that way, it is allowed to use the button masks corresponding to the buttons in the range from 1 to &lt;a href=&quot;mouseinfo#getNumberOfButtons()&quot;&gt;&lt;code&gt;MouseInfo.getNumberOfButtons()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">拡張マウスボタンのサポートがJavaによって&lt;a href=&quot;toolkit#areExtraMouseButtonsEnabled()&quot;&gt; &lt;code&gt;enabled&lt;/code&gt; &lt;/a&gt;ている場合、マウスに3つ以上のボタンがある場合は、標準のボタンマスクと既存の拡張マウスボタンのマスクを使用できます。このようにして、1から&lt;a href=&quot;mouseinfo#getNumberOfButtons()&quot;&gt; &lt;code&gt;MouseInfo.getNumberOfButtons()&lt;/code&gt; の&lt;/a&gt;範囲のボタンに対応するボタンマスクを使用できます。</target>
        </trans-unit>
        <trans-unit id="486f3c00239a42cba8b1916fb667e0081bff0684" translate="yes" xml:space="preserve">
          <source>If support for the extended mouse buttons is &lt;a href=&quot;../toolkit#areExtraMouseButtonsEnabled()&quot;&gt;&lt;code&gt;disabled&lt;/code&gt;&lt;/a&gt; by Java then it is allowed to create &lt;code&gt;MouseEvent&lt;/code&gt; objects only with the standard buttons: &lt;code&gt;NOBUTTON&lt;/code&gt;, &lt;code&gt;BUTTON1&lt;/code&gt;, &lt;code&gt;BUTTON2&lt;/code&gt;, and &lt;code&gt;BUTTON3&lt;/code&gt;.</source>
          <target state="translated">拡張マウスボタンのサポートがJavaによって&lt;a href=&quot;../toolkit#areExtraMouseButtonsEnabled()&quot;&gt; &lt;code&gt;disabled&lt;/code&gt; &lt;/a&gt;されている場合、標準ボタン（ &lt;code&gt;NOBUTTON&lt;/code&gt; 、 &lt;code&gt;BUTTON1&lt;/code&gt; 、 &lt;code&gt;BUTTON2&lt;/code&gt; 、および &lt;code&gt;BUTTON3&lt;/code&gt; )でのみ &lt;code&gt;MouseEvent&lt;/code&gt; オブジェクトを作成できます。</target>
        </trans-unit>
        <trans-unit id="65884caffeef70616af6ac015fb22950976842d5" translate="yes" xml:space="preserve">
          <source>If support for the extended mouse buttons is &lt;a href=&quot;../toolkit#areExtraMouseButtonsEnabled()&quot;&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/a&gt; by Java then it is allowed to create &lt;code&gt;MouseEvent&lt;/code&gt; objects with the standard buttons. In case the support for extended mouse buttons is &lt;a href=&quot;../toolkit#areExtraMouseButtonsEnabled()&quot;&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/a&gt; by Java, then in addition to the standard buttons, &lt;code&gt;MouseEvent&lt;/code&gt; objects can be created using buttons from the range starting from 4 to &lt;a href=&quot;../mouseinfo#getNumberOfButtons()&quot;&gt;&lt;code&gt;MouseInfo.getNumberOfButtons()&lt;/code&gt;&lt;/a&gt; if the mouse has more than three buttons.</source>
          <target state="translated">拡張マウスボタンのサポートがJavaによって&lt;a href=&quot;../toolkit#areExtraMouseButtonsEnabled()&quot;&gt; &lt;code&gt;enabled&lt;/code&gt; &lt;/a&gt;ている場合、標準ボタンを使用して &lt;code&gt;MouseEvent&lt;/code&gt; オブジェクトを作成できます。拡張マウスボタンのサポートがJavaによって&lt;a href=&quot;../toolkit#areExtraMouseButtonsEnabled()&quot;&gt; &lt;code&gt;enabled&lt;/code&gt; &lt;/a&gt;ている場合、マウスに3つ以上のボタンがある場合は、標準ボタンに加えて、4から&lt;a href=&quot;../mouseinfo#getNumberOfButtons()&quot;&gt; &lt;code&gt;MouseInfo.getNumberOfButtons()&lt;/code&gt; &lt;/a&gt;までの範囲のボタンを使用して &lt;code&gt;MouseEvent&lt;/code&gt; オブジェクトを作成できます。</target>
        </trans-unit>
        <trans-unit id="5d3c9f547885ed5dc664bee523aaf2e97a59a19a" translate="yes" xml:space="preserve">
          <source>If supported by the underlying SSL/TLS/DTLS implementation, application name negotiation mechanisms such as &lt;a href=&quot;http://www.ietf.org/rfc/rfc7301.txt&quot;&gt; RFC 7301 &lt;/a&gt;, the Application-Layer Protocol Negotiation (ALPN), can negotiate application-level values between peers.</source>
          <target state="translated">基盤となるSSL / TLS / DTLS実装でサポートされている場合、&lt;a href=&quot;http://www.ietf.org/rfc/rfc7301.txt&quot;&gt;RFC 7301&lt;/a&gt;、Application-Layer Protocol Negotiation（ALPN）などのアプリケーション名ネゴシエーションメカニズムは、ピア間でアプリケーションレベルの値をネゴシエートできます。</target>
        </trans-unit>
        <trans-unit id="b56b6a2c479a52bb0285125852b4bd46d6cc96d3" translate="yes" xml:space="preserve">
          <source>If supported by the underlying SSL/TLS/DTLS implementation, application name negotiation mechanisms such as &lt;a href=&quot;https://www.ietf.org/rfc/rfc7301.txt&quot;&gt; RFC 7301 &lt;/a&gt;, the Application-Layer Protocol Negotiation (ALPN), can negotiate application-level values between peers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483297556e0d86a729fc879bc3d6a3a654a16eca" translate="yes" xml:space="preserve">
          <source>If system exclusive data from &lt;code&gt;SysexMessages&lt;/code&gt; objects is being transmitted using MIDI wire protocol, only the initial 0xF0 status byte, the system exclusive data itself, and the final 0xF7 (EOX) byte should be propagated; any 0xF7 status bytes used to indicate that a &lt;code&gt;SysexMessage&lt;/code&gt; contains continuing system exclusive data should not be propagated via MIDI wire protocol.</source>
          <target state="translated">&lt;code&gt;SysexMessages&lt;/code&gt; オブジェクトからのシステムエクスクルーシブデータがMIDIワイヤプロトコルを使用して送信されている場合、最初の0xF0ステータスバイト、システムエクスクルーシブデータ自体、および最後の0xF7（EOX）バイトのみが伝達されます。 &lt;code&gt;SysexMessage&lt;/code&gt; に継続的なシステム専用データが含まれていることを示すために使用される0xF7ステータスバイトは、MIDIワイヤプロトコルを介して伝播されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="8a60148766d9542dcdda7613f880094d44b2ef2c" translate="yes" xml:space="preserve">
          <source>If system properties &lt;code&gt;javax.sound.sampled.Clip&lt;/code&gt;, &lt;code&gt;javax.sound.sampled.Port&lt;/code&gt;, &lt;code&gt;javax.sound.sampled.SourceDataLine&lt;/code&gt; and &lt;code&gt;javax.sound.sampled.TargetDataLine&lt;/code&gt; are defined or they are defined in the file &quot;sound.properties&quot;, they are used to retrieve default lines. For details, refer to the &lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;class description&lt;/code&gt;&lt;/a&gt;. If the respective property is not set, or the mixer requested in the property is not installed or does not provide the requested line, all installed mixers are queried for the requested line type. A Line will be returned from the first mixer providing the requested line type.</source>
          <target state="translated">システムプロパティ &lt;code&gt;javax.sound.sampled.Clip&lt;/code&gt; 、 &lt;code&gt;javax.sound.sampled.Port&lt;/code&gt; 、 &lt;code&gt;javax.sound.sampled.SourceDataLine&lt;/code&gt; 、および &lt;code&gt;javax.sound.sampled.TargetDataLine&lt;/code&gt; が定義されているか、それらが「sound.properties」ファイルで定義されている場合、デフォルトの行を取得するために使用されます。詳細については、&lt;a href=&quot;audiosystem&quot;&gt; &lt;code&gt;class description&lt;/code&gt; &lt;/a&gt;参照してください。それぞれのプロパティが設定されていない場合、またはプロパティで要求されたミキサーがインストールされていない場合、または要求されたラインを提供しない場合、インストールされているすべてのミキサーに、要求されたラインタイプが照会されます。リクエストされたラインタイプを提供する最初のミキサーからラインが返されます。</target>
        </trans-unit>
        <trans-unit id="a8e3d47700ce7e07788d64cbfa2cd41b86d9c136" translate="yes" xml:space="preserve">
          <source>If target is _self, the action is to change the value of the &lt;code&gt;HTML.Attribute.SRC&lt;/code&gt; attribute and fires a &lt;code&gt;ChangedUpdate&lt;/code&gt; event.</source>
          <target state="translated">ターゲットが_selfの場合、アクションは &lt;code&gt;HTML.Attribute.SRC&lt;/code&gt; 属性の値を変更し、 &lt;code&gt;ChangedUpdate&lt;/code&gt; イベントを発生させることです。</target>
        </trans-unit>
        <trans-unit id="3d9b7696c9777c3fdef5f5f1690ef14ee23382d9" translate="yes" xml:space="preserve">
          <source>If the</source>
          <target state="translated">の場合は</target>
        </trans-unit>
        <trans-unit id="1f583398dc1f86dc2870e17e17525bfe7bcb7fe2" translate="yes" xml:space="preserve">
          <source>If the &quot;java.util.logging.config.class&quot; property is set, then the property value is treated as a class name. The given class will be loaded, an object will be instantiated, and that object's constructor is responsible for reading in the initial configuration. (That object may use other system properties to control its configuration.) The alternate configuration class can use &lt;code&gt;readConfiguration(InputStream)&lt;/code&gt; to define properties in the LogManager.</source>
          <target state="translated">「java.util.logging.config.class」プロパティが設定されている場合、プロパティ値はクラス名として扱われます。指定されたクラスがロードされ、オブジェクトがインスタンス化され、そのオブジェクトのコンストラクターが初期構成の読み取りを担当します。（そのオブジェクトは、他のシステムプロパティを使用してその構成を制御する場合があります。）代替構成クラスは、 &lt;code&gt;readConfiguration(InputStream)&lt;/code&gt; を使用してLogManagerでプロパティを定義できます。</target>
        </trans-unit>
        <trans-unit id="7c21737341f78d589edcf2b473c1e9d4710529e7" translate="yes" xml:space="preserve">
          <source>If the &quot;java.util.logging.config.class&quot; system property is set, then the property value is treated as a class name. The given class will be loaded, an object will be instantiated, and that object's constructor is responsible for reading in the initial configuration. (That object may use other system properties to control its configuration.) The alternate configuration class can use &lt;code&gt;readConfiguration(InputStream)&lt;/code&gt; to define properties in the LogManager.</source>
          <target state="translated">「java.util.logging.config.class」システムプロパティが設定されている場合、プロパティ値はクラス名として扱われます。指定されたクラスがロードされ、オブジェクトがインスタンス化され、そのオブジェクトのコンストラクターが初期構成の読み取りを担当します。 （そのオブジェクトは、他のシステムプロパティを使用して構成を制御できます。）代替構成クラスは、 &lt;code&gt;readConfiguration(InputStream)&lt;/code&gt; を使用してLogManagerでプロパティを定義できます。</target>
        </trans-unit>
        <trans-unit id="ee9a28b9f37694fc322c18e7908dd9236e4f1f5e" translate="yes" xml:space="preserve">
          <source>If the &quot;java.util.logging.config.file&quot; system property is set, then the property value specifies the properties file to be read as the new configuration. Otherwise, the LogManager default configuration is used.</source>
          <target state="translated">java.util.logging.config.file」システム・プロパティが設定されている場合、プロパティ値は、新しい構成として読み込まれるプロパティ・ファイルを指定します。それ以外の場合は、LogManagerのデフォルト構成が使用されます。</target>
        </trans-unit>
        <trans-unit id="2d3e35bcf72871950c117a29249ba322eaf7916a" translate="yes" xml:space="preserve">
          <source>If the 'getMethod' field contains the name of a valid operation descriptor, then the method described by the operation descriptor is executed. The response from the method is returned as the value of the attribute. If the operation fails or the returned value is not compatible with the declared type of the attribute, an exception will be thrown.</source>
          <target state="translated">getMethod' フィールドに有効な操作記述子の名前が含まれている場合、操作記述子によって記述されたメソッドが実行されます。メソッドからのレスポンスが属性の値として返されます。操作が失敗した場合、または返された値が属性の宣言された型と互換性がない場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="e0d548ba22d2542cb9fd6382914ac5396917edaa" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#%3Cinit%3E(java.security.SecureRandomParameters)&quot;&gt;&lt;code&gt;SecureRandomSpi(SecureRandomParameters)&lt;/code&gt;&lt;/a&gt; constructor is overridden in an implementation, it will always be called whenever a &lt;code&gt;SecureRandom&lt;/code&gt; is instantiated. Precisely, if an object is instantiated with one of &lt;code&gt;SecureRandom&lt;/code&gt;'s &lt;code&gt;getInstance&lt;/code&gt; methods &lt;em&gt;without&lt;/em&gt; a &lt;a href=&quot;securerandomparameters&quot;&gt;&lt;code&gt;SecureRandomParameters&lt;/code&gt;&lt;/a&gt; parameter, the constructor will be called with a &lt;code&gt;null&lt;/code&gt; argument and the implementation is responsible for creating its own &lt;code&gt;SecureRandomParameters&lt;/code&gt; parameter for use when &lt;a href=&quot;#engineGetParameters()&quot;&gt;&lt;code&gt;engineGetParameters()&lt;/code&gt;&lt;/a&gt; is called. If an object is instantiated with one of &lt;code&gt;SecureRandom&lt;/code&gt;'s &lt;code&gt;getInstance&lt;/code&gt; methods &lt;em&gt;with&lt;/em&gt; a &lt;code&gt;SecureRandomParameters&lt;/code&gt; argument, the constructor will be called with that argument. The &lt;a href=&quot;#engineGetParameters()&quot;&gt;&lt;code&gt;engineGetParameters()&lt;/code&gt;&lt;/a&gt; method must not return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">場合&lt;a href=&quot;#%3Cinit%3E(java.security.SecureRandomParameters)&quot;&gt; &lt;code&gt;SecureRandomSpi(SecureRandomParameters)&lt;/code&gt; &lt;/a&gt;コンストラクタを実装でオーバーライドされるたびに、それは常に呼び出されます &lt;code&gt;SecureRandom&lt;/code&gt; インスタンス化されます。オブジェクトはの一つでインスタンス化されている場合、正確に、 &lt;code&gt;SecureRandom&lt;/code&gt; さん &lt;code&gt;getInstance&lt;/code&gt; メソッド&lt;em&gt;なし&lt;/em&gt;&lt;a href=&quot;securerandomparameters&quot;&gt; &lt;code&gt;SecureRandomParameters&lt;/code&gt; の&lt;/a&gt;パラメータ、コンストラクタはと呼ばれる &lt;code&gt;null&lt;/code&gt; 引数と実装には、独自の作成に責任がある &lt;code&gt;SecureRandomParameters&lt;/code&gt; の際に使用するパラメータを&lt;a href=&quot;#engineGetParameters()&quot;&gt; &lt;code&gt;engineGetParameters()&lt;/code&gt; &lt;/a&gt;と呼ばれています。 &lt;code&gt;SecureRandom&lt;/code&gt; の &lt;code&gt;getInstance&lt;/code&gt; メソッドの1つを使用してオブジェクトがインスタンス化されている場合&lt;em&gt;&lt;/em&gt; &lt;code&gt;SecureRandomParameters&lt;/code&gt; の引数、コンストラクタは、その引数で呼び出されます。&lt;a href=&quot;#engineGetParameters()&quot;&gt; &lt;code&gt;engineGetParameters()&lt;/code&gt; &lt;/a&gt;メソッドが返すはならない &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3fd0e8651509209ab66f4363379a0875ab48d6ad" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#FOREGROUND&quot;&gt;&lt;code&gt;FOREGROUND&lt;/code&gt;&lt;/a&gt; attribute is set, its &lt;code&gt;Paint&lt;/code&gt; will be used as the background, otherwise the &lt;code&gt;Paint&lt;/code&gt; currently on the &lt;code&gt;Graphics&lt;/code&gt; will be used. If the &lt;a href=&quot;#BACKGROUND&quot;&gt;&lt;code&gt;BACKGROUND&lt;/code&gt;&lt;/a&gt; attribute is set, its &lt;code&gt;Paint&lt;/code&gt; will be used as the foreground, otherwise the system will find a contrasting color to the (resolved) background so that the text will be visible.</source>
          <target state="translated">場合&lt;a href=&quot;#FOREGROUND&quot;&gt; &lt;code&gt;FOREGROUND&lt;/code&gt; の&lt;/a&gt;属性が設定され、その &lt;code&gt;Paint&lt;/code&gt; そうでない場合は、背景として使用される &lt;code&gt;Paint&lt;/code&gt; で現在 &lt;code&gt;Graphics&lt;/code&gt; 使用されます。場合&lt;a href=&quot;#BACKGROUND&quot;&gt; &lt;code&gt;BACKGROUND&lt;/code&gt; &lt;/a&gt;属性が設定され、その &lt;code&gt;Paint&lt;/code&gt; 前景として使用されるテキストが表示されるように、そうでなければ、システムは、（解決）背景に対照的な色を見つけます。</target>
        </trans-unit>
        <trans-unit id="266d9b29b8861792af1fe586314983e8903d9fa3" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#eval(java.lang.String)&quot;&gt;&lt;code&gt;eval(java.lang.String)&lt;/code&gt;&lt;/a&gt; method is not running, does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86337241a9668cc6a25c97b5de65d911d14a1894" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#redirectErrorStream()&quot;&gt;&lt;code&gt;redirectErrorStream&lt;/code&gt;&lt;/a&gt; attribute has been set &lt;code&gt;true&lt;/code&gt;, then the redirection set by this method has no effect.</source>
          <target state="translated">&lt;a href=&quot;#redirectErrorStream()&quot;&gt; &lt;code&gt;redirectErrorStream&lt;/code&gt; &lt;/a&gt;属性が &lt;code&gt;true&lt;/code&gt; に設定されている場合、このメソッドによって設定されたリダイレクトは効果がありません。</target>
        </trans-unit>
        <trans-unit id="b85fc122285cb0d2f89cc05f312ee0e46a0a070d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#setInput(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;setInput(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method was called to provide a buffer for input, the input buffer's position will be advanced by the number of bytes consumed by this operation, even in the event that a &lt;a href=&quot;dataformatexception&quot;&gt;&lt;code&gt;DataFormatException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">場合&lt;a href=&quot;#setInput(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;setInput(ByteBuffer)&lt;/code&gt; &lt;/a&gt;メソッドは、入力のためのバッファを提供するために呼ばれた、入力バッファの位置でもある場合には、この操作によって消費されるバイト数によって高度になり&lt;a href=&quot;dataformatexception&quot;&gt; &lt;code&gt;DataFormatException&lt;/code&gt; が&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="beaa63bfc2c275017816960a621f79d777650f26" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#setInput(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;setInput(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method was called to provide a buffer for input, the input buffer's position will be advanced by the number of bytes consumed by this operation.</source>
          <target state="translated">場合&lt;a href=&quot;#setInput(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;setInput(ByteBuffer)&lt;/code&gt; &lt;/a&gt;メソッドは、入力のためのバッファを提供するために呼ばれた、入力バッファの位置は、この操作によって消費されるバイト数によって高度であろう。</target>
        </trans-unit>
        <trans-unit id="89d95c390fbfbed6f9512b14bde317e19394155e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#staticPermissionsOnly()&quot;&gt;&lt;code&gt;staticPermissionsOnly()&lt;/code&gt;&lt;/a&gt; method returns true, then the permission will only be checked against the PermissionCollection supplied at construction.</source>
          <target state="translated">場合&lt;a href=&quot;#staticPermissionsOnly()&quot;&gt; &lt;code&gt;staticPermissionsOnly()&lt;/code&gt; &lt;/a&gt;メソッドがtrueを返し、その後、許可が唯一の構築時に提供されたPermissionCollectionに対してチェックされます。</target>
        </trans-unit>
        <trans-unit id="8f3202df3f64a60f68be2f6e8445b0bee61ca858" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;../../../java.base/java/util/properties&quot;&gt;&lt;code&gt;Properties&lt;/code&gt;&lt;/a&gt; file &lt;code&gt;swing.properties&lt;/code&gt; exists and contains the key &lt;code&gt;swing.defaultlaf&lt;/code&gt;, use its value as the default look and feel class name. The location that is checked for &lt;code&gt;swing.properties&lt;/code&gt; may vary depending upon the implementation of the Java platform. Typically the &lt;code&gt;swing.properties&lt;/code&gt; file is located in the &lt;code&gt;conf&lt;/code&gt; subdirectory of the Java installation directory. Refer to the release notes of the implementation being used for further details.</source>
          <target state="translated">&lt;a href=&quot;../../../java.base/java/util/properties&quot;&gt; &lt;code&gt;Properties&lt;/code&gt; &lt;/a&gt;ファイル &lt;code&gt;swing.properties&lt;/code&gt; が存在し、キー &lt;code&gt;swing.defaultlaf&lt;/code&gt; が含まれている場合は、その値をデフォルトのルックアンドフィールクラス名として使用します。 &lt;code&gt;swing.properties&lt;/code&gt; がチェックされる場所は、Javaプラットフォームの実装によって異なる場合があります。通常、 &lt;code&gt;swing.properties&lt;/code&gt; ファイルはJavaインストールディレクトリの &lt;code&gt;conf&lt;/code&gt; サブディレクトリにあります。詳細については、使用されている実装のリリースノートを参照してください。</target>
        </trans-unit>
        <trans-unit id="0cf976d251facbb1b28639a31b11358b94746e84" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;beaninfo&quot;&gt;&lt;code&gt;BeanInfo&lt;/code&gt;&lt;/a&gt; for this type has a &lt;a href=&quot;beandescriptor&quot;&gt;&lt;code&gt;BeanDescriptor&lt;/code&gt;&lt;/a&gt; which defined a &quot;persistenceDelegate&quot; attribute, the value of this named attribute is returned.</source>
          <target state="translated">このタイプの&lt;a href=&quot;beaninfo&quot;&gt; &lt;code&gt;BeanInfo&lt;/code&gt; &lt;/a&gt;に「persistenceDelegate」属性を定義した&lt;a href=&quot;beandescriptor&quot;&gt; &lt;code&gt;BeanDescriptor&lt;/code&gt; が&lt;/a&gt;ある場合、この名前付き属性の値が返されます。</target>
        </trans-unit>
        <trans-unit id="f7796e655e99564bb42833b6c22ae781567c8b7e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;processbuilder#redirectErrorStream&quot;&gt;&lt;code&gt;redirectErrorStream&lt;/code&gt;&lt;/a&gt; attribute has been set &lt;code&gt;true&lt;/code&gt;, then the redirection set by this method has no effect.</source>
          <target state="translated">&lt;a href=&quot;processbuilder#redirectErrorStream&quot;&gt; &lt;code&gt;redirectErrorStream&lt;/code&gt; &lt;/a&gt;属性が &lt;code&gt;true&lt;/code&gt; に設定されている場合、このメソッドによって設定されたリダイレクトは無効です。</target>
        </trans-unit>
        <trans-unit id="6369ec721b8ca4ab5fda1157ad5cc4775754c615" translate="yes" xml:space="preserve">
          <source>If the &lt;a id=&quot;floatDPrec&quot;&gt;conversion&lt;/a&gt; is &lt;code&gt;'e'&lt;/code&gt;, &lt;code&gt;'E'&lt;/code&gt; or &lt;code&gt;'f'&lt;/code&gt;, then the precision is the number of digits after the decimal separator. If the precision is not specified, then it is assumed to be &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">場合&lt;a id=&quot;floatDPrec&quot;&gt;、変換が&lt;/a&gt;ある &lt;code&gt;'e'&lt;/code&gt; 、 &lt;code&gt;'E'&lt;/code&gt; または &lt;code&gt;'f'&lt;/code&gt; は、精度は、小数点区切りの桁数です。精度が指定されていない場合は、 &lt;code&gt;6&lt;/code&gt; と見なされます。</target>
        </trans-unit>
        <trans-unit id="69cea4d19b20fb91d97db82c5ca57aaf842e28d6" translate="yes" xml:space="preserve">
          <source>If the &lt;a name=&quot;floatDPrec&quot;&gt;conversion&lt;/a&gt; is &lt;code&gt;'e'&lt;/code&gt;, &lt;code&gt;'E'&lt;/code&gt; or &lt;code&gt;'f'&lt;/code&gt;, then the precision is the number of digits after the decimal separator. If the precision is not specified, then it is assumed to be &lt;code&gt;6&lt;/code&gt;.</source>
          <target state="translated">場合&lt;a name=&quot;floatDPrec&quot;&gt;、変換が&lt;/a&gt;ある &lt;code&gt;'e'&lt;/code&gt; 、 &lt;code&gt;'E'&lt;/code&gt; または &lt;code&gt;'f'&lt;/code&gt; は、精度は、小数点区切りの桁数です。精度が指定されていない場合は、 &lt;code&gt;6&lt;/code&gt; と見なされます。</target>
        </trans-unit>
        <trans-unit id="5059e8ee90e4d07843498ec51dc8abef786de5aa" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;[member type definition anonymous]&lt;/b&gt; exists:</source>
          <target state="translated">もし&lt;b&gt;[メンバー型定義匿名]が&lt;/b&gt;存在します。</target>
        </trans-unit>
        <trans-unit id="b3bdad546a4d7a971b883151ac70a2ccbe1f0095" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;[type definition anonymous]&lt;/b&gt; exists:</source>
          <target state="translated">場合は&lt;b&gt;、[型定義匿名]は&lt;/b&gt;存在します：</target>
        </trans-unit>
        <trans-unit id="224235c33cd803b74bad7dc5b6641bf25c3410c2" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;[type definition]&lt;/b&gt; property exists:</source>
          <target state="translated">もし&lt;b&gt;[型定義]&lt;/b&gt;プロパティが存在します。</target>
        </trans-unit>
        <trans-unit id="ea735b3ad144dc0d3c88616e2055c7a3baba85a5" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;[validity]&lt;/b&gt; property exists AND is &lt;em&gt;&quot;invalid&quot;&lt;/em&gt; or &lt;em&gt;&quot;notKnown&quot;&lt;/em&gt;: the {target namespace} and {name} properties of the declared type if available, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">場合&lt;b&gt;[有効]&lt;/b&gt;プロパティが存在している&lt;em&gt;「無効」&lt;/em&gt;または&lt;em&gt;「notKnown」&lt;/em&gt;利用可能な場合そうでない場合、{ターゲット名前空間}と宣言された型の{名前}プロパティ： &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5654c5178b9647add1bfe15b4562bdf804149ac" translate="yes" xml:space="preserve">
          <source>If the &lt;b&gt;[validity]&lt;/b&gt; property exists and is &lt;em&gt;&quot;valid&quot;&lt;/em&gt;:</source>
          <target state="translated">場合は&lt;b&gt;、[有効期限]&lt;/b&gt;プロパティが存在している&lt;em&gt;「有効」&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="244d88b2fe1f7cc3d006bcc6bed47c61fe2ec794" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&quot;zh&quot;&lt;/code&gt;-to-&lt;code&gt;&quot;zh&quot;&lt;/code&gt; mapping isn't included in the map, a simple replacement will be performed and the customized list won't include &lt;code&gt;&quot;zh&quot;&lt;/code&gt; and &lt;code&gt;&quot;zh-CN&quot;&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;&quot;zh&quot;&lt;/code&gt; -to- &lt;code&gt;&quot;zh&quot;&lt;/code&gt; マッピングがマップに含まれていない、単純な置換が実行され、カスタマイズされたリストが含まれません &lt;code&gt;&quot;zh&quot;&lt;/code&gt; 及び &lt;code&gt;&quot;zh-CN&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23f4d1d76d4c61640485815093054acc02ce819f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'#'&lt;/code&gt; flag is given &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">&lt;code&gt;'#'&lt;/code&gt; フラグが指定されている場合、&lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="1c680cd1a5cd595f752bed838baa38292f42bbcd" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'#'&lt;/code&gt; flag is given and the argument is not a &lt;a href=&quot;formattable&quot;&gt;&lt;code&gt;Formattable&lt;/code&gt;&lt;/a&gt; , then a &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">場合は &lt;code&gt;'#'&lt;/code&gt; フラグが指定され、引数がないです&lt;a href=&quot;formattable&quot;&gt; &lt;code&gt;Formattable&lt;/code&gt; &lt;/a&gt;、その後、&lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; が&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="6a276179b3d9aede60085715e083872d2bc9bb28" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'#'&lt;/code&gt; flag is given and the argument is not a &lt;a href=&quot;formattable&quot;&gt;&lt;code&gt;Formattable&lt;/code&gt;&lt;/a&gt;, then a &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3ca6b4a24528a74561304ff78b46e45f7ce091" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'#'&lt;/code&gt; flag is given then a &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">場合は &lt;code&gt;'#'&lt;/code&gt; フラグが指定された&lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; が&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="95f5e2ee606537dc80cd0c08600e71779319b292" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'#'&lt;/code&gt; flag is given then an &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">場合は &lt;code&gt;'#'&lt;/code&gt; フラグが指定された&lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; が&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="705393d5e4190c15bb4ded3f92e669b7967af3af" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'#'&lt;/code&gt; flag is given then the output will always begin with &lt;code&gt;'0'&lt;/code&gt; prefix.</source>
          <target state="translated">場合は &lt;code&gt;'#'&lt;/code&gt; フラグが指定され、出力は常に始まります &lt;code&gt;'0'&lt;/code&gt; 接頭辞。</target>
        </trans-unit>
        <trans-unit id="d94fd5d1c396bfff4fed3e4917313944fa0d8ce4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'#'&lt;/code&gt; flag is given then the output will always begin with the radix indicator &lt;code&gt;&quot;0x&quot;&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;'#'&lt;/code&gt; フラグが指定され、出力は常に基数指示子で始まります &lt;code&gt;&quot;0x&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af351499ffe1eb584449ad1db1312af2f6169806" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'#'&lt;/code&gt; flag is given then the output will always begin with the radix indicator &lt;code&gt;'0'&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;'#'&lt;/code&gt; フラグが指定され、出力は常に基数指示子を開始します &lt;code&gt;'0'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e2b33eac4b29de7dc276798ef6bb121e0f191c3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'#'&lt;/code&gt; flag is given, then a &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">場合は &lt;code&gt;'#'&lt;/code&gt; フラグが指定され、その後、&lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; が&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="193a49527f28f69b767038d67c1984e036b12529" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'#'&lt;/code&gt; flag is given, then the decimal separator will always be present.</source>
          <target state="translated">場合 &lt;code&gt;'#'&lt;/code&gt; フラグが指定され、その後、小数点セパレータは常に存在するであろう。</target>
        </trans-unit>
        <trans-unit id="170d2f39d6b7a451069152ef956aa45571ac5f4f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'('&lt;/code&gt; or &lt;code&gt;','&lt;/code&gt; flags are given, then a &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">場合は &lt;code&gt;'('&lt;/code&gt; または &lt;code&gt;','&lt;/code&gt; フラグが指定され、その後、&lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; が&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="25f8f50b77134591d75e17a674bec028e9c6e997" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'+'&lt;/code&gt; flag is given and the value is positive or zero (or floating-point positive zero), then a &lt;code&gt;'+'&lt;/code&gt; (&lt;code&gt;'\u002b'&lt;/code&gt;) will be prepended.</source>
          <target state="translated">場合 &lt;code&gt;'+'&lt;/code&gt; フラグが与えられ、値が正またはゼロ（または浮動小数点の正のゼロ）であり、その後、 &lt;code&gt;'+'&lt;/code&gt; （ &lt;code&gt;'\u002b'&lt;/code&gt; ）先頭に追加されるであろう。</target>
        </trans-unit>
        <trans-unit id="dd8701b10b903c76286404a520374517bcb6cb05" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;','&lt;/code&gt; (&lt;code&gt;'\u002c'&lt;/code&gt;) &lt;a id=&quot;L10nGroup&quot;&gt;flag&lt;/a&gt; is given, then the locale-specific &lt;a href=&quot;../text/decimalformatsymbols#getGroupingSeparator()&quot;&gt;grouping separator&lt;/a&gt; is inserted by scanning the integer part of the string from least significant to most significant digits and inserting a separator at intervals defined by the locale's &lt;a href=&quot;../text/decimalformat#getGroupingSize()&quot;&gt;grouping size&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;code&gt;','&lt;/code&gt; （ &lt;code&gt;'\u002c'&lt;/code&gt; ）&lt;a id=&quot;L10nGroup&quot;&gt;フラグが&lt;/a&gt;付与され、その後、ロケール固有の&lt;a href=&quot;../text/decimalformatsymbols#getGroupingSeparator()&quot;&gt;グループ化セパレータは&lt;/a&gt;、最上位桁最下位からの文字列の整数部分をスキャンし、ロケールのによって定義された間隔で区切り文字を挿入することによって挿入される&lt;a href=&quot;../text/decimalformat#getGroupingSize()&quot;&gt;グループサイズ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="910241aebecc3c9182f2e0462c8f58f123333d6e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;','&lt;/code&gt; (&lt;code&gt;'\u002c'&lt;/code&gt;) &lt;a name=&quot;L10nGroup&quot;&gt;flag&lt;/a&gt; is given, then the locale-specific &lt;a href=&quot;../text/decimalformatsymbols#getGroupingSeparator--&quot;&gt;grouping separator&lt;/a&gt; is inserted by scanning the integer part of the string from least significant to most significant digits and inserting a separator at intervals defined by the locale's &lt;a href=&quot;../text/decimalformat#getGroupingSize--&quot;&gt;grouping size&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;code&gt;','&lt;/code&gt; （ &lt;code&gt;'\u002c'&lt;/code&gt; ）&lt;a name=&quot;L10nGroup&quot;&gt;フラグが&lt;/a&gt;付与され、その後、ロケール固有の&lt;a href=&quot;../text/decimalformatsymbols#getGroupingSeparator--&quot;&gt;グループ化セパレータは&lt;/a&gt;、最上位桁最下位からの文字列の整数部分をスキャンし、ロケールのによって定義された間隔で区切り文字を挿入することによって挿入される&lt;a href=&quot;../text/decimalformat#getGroupingSize--&quot;&gt;グループサイズ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="44a9f549cf29b75acc2fdec3fc183e7f16568846" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;','&lt;/code&gt; flag is given then a &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">場合は &lt;code&gt;','&lt;/code&gt; フラグが指定され、その後&lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; が&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="45726f7fab2e09c7f3869df2e50226749801e01e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;','&lt;/code&gt; flag is given, then an &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">場合は &lt;code&gt;','&lt;/code&gt; フラグが指定され、その後、&lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; が&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="970c69f921423c9cb9e926402bc01ce17c9690e0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'-'&lt;/code&gt; flag is not given, then the space padding will occur before the sign.</source>
          <target state="translated">&lt;code&gt;'-'&lt;/code&gt; フラグが指定されていない場合は、記号の前にスペースの埋め込みが行われます。</target>
        </trans-unit>
        <trans-unit id="4999add0ec4ab7e8f065de52e1702ab41f20c0ce" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'0'&lt;/code&gt; flag is given and the value is negative, then the zero padding will occur after the sign.</source>
          <target state="translated">場合は &lt;code&gt;'0'&lt;/code&gt; フラグが与えられ、値が負である場合、ゼロパディングは、符号の後に発生します。</target>
        </trans-unit>
        <trans-unit id="5c36904575776fe73769eda50759d8e13da3acc3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'0'&lt;/code&gt; flag is given then the output will be padded to the field width with leading zeros after the radix indicator or sign (if present).</source>
          <target state="translated">場合は &lt;code&gt;'0'&lt;/code&gt; フラグが指定されている（存在する場合）、出力は、基数インジケータまたは記号の後に先行ゼロのフィールド幅にパディングされます。</target>
        </trans-unit>
        <trans-unit id="b5e7f4a54ddb769b1293d2814dfdf865f8198b97" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'0'&lt;/code&gt; flag is given then the output will be padded with leading zeros to the field width following any indication of sign.</source>
          <target state="translated">場合は &lt;code&gt;'0'&lt;/code&gt; フラグが指定され、出力は、符号の兆候を以下の幅フィールドに先行ゼロでパディングされます。</target>
        </trans-unit>
        <trans-unit id="e0f0743f520ad52ab8654c0fd8007d4814742634" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'0'&lt;/code&gt; flag is given, then the locale-specific &lt;a href=&quot;../text/decimalformatsymbols#getZeroDigit()&quot;&gt;zero digits&lt;/a&gt; are inserted after the sign character, if any, and before the first non-zero digit, until the length of the string is equal to the requested field width.</source>
          <target state="translated">場合は &lt;code&gt;'0'&lt;/code&gt; フラグが指定され、その後、ロケール固有の&lt;a href=&quot;../text/decimalformatsymbols#getZeroDigit()&quot;&gt;ゼロ桁&lt;/a&gt;の文字列の長さが要求されたフィールド幅に等しくなるまで、もしあれば、符号文字の後に挿入され、最初の非ゼロ桁前れます。</target>
        </trans-unit>
        <trans-unit id="ba1bcf00b5c45bf451134d21adaed5e63f1fcd56" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'0'&lt;/code&gt; flag is given, then the locale-specific &lt;a href=&quot;../text/decimalformatsymbols#getZeroDigit--&quot;&gt;zero digits&lt;/a&gt; are inserted after the sign character, if any, and before the first non-zero digit, until the length of the string is equal to the requested field width.</source>
          <target state="translated">場合は &lt;code&gt;'0'&lt;/code&gt; フラグが指定され、その後、ロケール固有の&lt;a href=&quot;../text/decimalformatsymbols#getZeroDigit--&quot;&gt;ゼロ桁&lt;/a&gt;の文字列の長さが要求されたフィールド幅に等しくなるまで、もしあれば、符号文字の後に挿入され、最初の非ゼロ桁前れます。</target>
        </trans-unit>
        <trans-unit id="e6f16828d0308872e7e04a7c1ddeb45e9f4f1750" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;(x,&amp;nbsp;y)&lt;/code&gt; point lies outside the grid, the following rules are used. The column index is returned as zero if &lt;code&gt;x&lt;/code&gt; lies to the left of the layout for a left-to-right container or to the right of the layout for a right-to-left container. The column index is returned as the number of columns if &lt;code&gt;x&lt;/code&gt; lies to the right of the layout in a left-to-right container or to the left in a right-to-left container. The row index is returned as zero if &lt;code&gt;y&lt;/code&gt; lies above the layout, and as the number of rows if &lt;code&gt;y&lt;/code&gt; lies below the layout. The orientation of a container is determined by its &lt;code&gt;ComponentOrientation&lt;/code&gt; property.</source>
          <target state="translated">場合は &lt;code&gt;(x,&amp;nbsp;y)&lt;/code&gt; グリッド外点嘘、以下の規則が使用されます。 &lt;code&gt;x&lt;/code&gt; が左から右のコンテナの場合はレイアウトの左側にある場合、または右から左のコンテナの場合はレイアウトの右側にある場合、列インデックスはゼロとして返されます。 &lt;code&gt;x&lt;/code&gt; が左から右のコンテナではレイアウトの右側にある場合、または右から左のコンテナでは左側にある場合、列インデックスは列数として返されます。行インデックスは、IFゼロとして返され &lt;code&gt;y&lt;/code&gt; レイアウト上にある場合、および行数として &lt;code&gt;y&lt;/code&gt; 嘘レイアウト以下。コンテナの方向は、その &lt;code&gt;ComponentOrientation&lt;/code&gt; プロパティによって決定されます。</target>
        </trans-unit>
        <trans-unit id="63ecf98d0ab81bb97ce68818ba3aa39c86211b49" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Agent_OnAttach[_L]&lt;/code&gt; function in the agent library returns an error then an &lt;a href=&quot;agentinitializationexception&quot;&gt;&lt;code&gt;AgentInitializationException&lt;/code&gt;&lt;/a&gt; is thrown. The return value from the &lt;code&gt;Agent_OnAttach[_L]&lt;/code&gt; can then be obtained by invoking the &lt;a href=&quot;agentinitializationexception#returnValue()&quot;&gt;&lt;code&gt;returnValue&lt;/code&gt;&lt;/a&gt; method on the exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ecc4eb34ec8dfb382771373ad86df4d2c178e13" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Collection&lt;/code&gt; will be modified by one thread while another thread is calling a method of a Collection &lt;code&gt;CertStore&lt;/code&gt; that has been initialized with this &lt;code&gt;Collection&lt;/code&gt;, the &lt;code&gt;Collection&lt;/code&gt; must have fail-fast iterators.</source>
          <target state="translated">場合 &lt;code&gt;Collection&lt;/code&gt; 、別のスレッドがコレクションのメソッド呼び出している間に一つのスレッドによって変更され &lt;code&gt;CertStore&lt;/code&gt; これで初期化されている &lt;code&gt;Collection&lt;/code&gt; 、 &lt;code&gt;Collection&lt;/code&gt; フェイルファスト反復子を持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="810e8374c563e183f8b4590c3bc968fbd81b2167" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;CompositeData&lt;/code&gt; came from an earlier version of &lt;em&gt;J&lt;/em&gt;, some items might not be present. In this case, the corresponding setters will not be called.</source>
          <target state="translated">&lt;code&gt;CompositeData&lt;/code&gt; が以前のバージョンの&lt;em&gt;J&lt;/em&gt;からのものである場合、一部のアイテムが存在しない可能性があります。この場合、対応するセッターは呼び出されません。</target>
        </trans-unit>
        <trans-unit id="71b4bf78e68bc6776b7a8f7a0eb4ed1d04a8d512" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Event&lt;/code&gt;'s type was not specified by initializing the event before the method was called.</source>
          <target state="translated">場合は &lt;code&gt;Event&lt;/code&gt; メソッドが呼び出される前の型は、イベントを初期化することによって指定されていませんでした。</target>
        </trans-unit>
        <trans-unit id="203c00aa85f63e7b6b9375fddd15c02205fb7dda" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Event&lt;/code&gt;'s type was not specified by initializing the event before the method was called. Specification of the Event's type as &lt;code&gt;null&lt;/code&gt; or an empty string will also trigger this exception.</source>
          <target state="translated">場合は &lt;code&gt;Event&lt;/code&gt; メソッドが呼び出される前の型は、イベントを初期化することによって指定されていませんでした。イベントのタイプを &lt;code&gt;null&lt;/code&gt; または空の文字列として指定すると、この例外もトリガーされます。</target>
        </trans-unit>
        <trans-unit id="02b4cc8da4d2810c0fbe1d7c64fd610170148d2b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ExecuteExistingDelayedTasksAfterShutdownPolicy&lt;/code&gt; has been set &lt;code&gt;false&lt;/code&gt;, existing delayed tasks whose delays have not yet elapsed are cancelled. And unless the &lt;code&gt;
 ContinueExistingPeriodicTasksAfterShutdownPolicy&lt;/code&gt; has been set &lt;code&gt;true&lt;/code&gt;, future executions of existing periodic tasks will be cancelled.</source>
          <target state="translated">&lt;code&gt;ExecuteExistingDelayedTasksAfterShutdownPolicy&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; に設定されている場合、遅延がまだ経過していない既存の遅延タスクはキャンセルされます。また、 &lt;code&gt; ContinueExistingPeriodicTasksAfterShutdownPolicy&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; に設定されていない限り、既存の定期的なタスクの今後の実行はキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="179c5197a088bdfb3577b89615e0f80069ec54a3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ExecuteExistingDelayedTasksAfterShutdownPolicy&lt;/code&gt; has been set &lt;code&gt;false&lt;/code&gt;, existing delayed tasks whose delays have not yet elapsed are cancelled. And unless the &lt;code&gt;ContinueExistingPeriodicTasksAfterShutdownPolicy&lt;/code&gt; has been set &lt;code&gt;true&lt;/code&gt;, future executions of existing periodic tasks will be cancelled.</source>
          <target state="translated">&lt;code&gt;ExecuteExistingDelayedTasksAfterShutdownPolicy&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; に設定されている場合、遅延がまだ経過していない既存の遅延タスクはキャンセルされます。また、 &lt;code&gt;ContinueExistingPeriodicTasksAfterShutdownPolicy&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; に設定されていない限り、既存の定期的なタスクの今後の実行はキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="924b95b5bc360f5419eb164ad25c4917e3384c4f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Graphics2D&lt;/code&gt; object cannot handle the curved segments that the &lt;code&gt;PathIterator&lt;/code&gt; object returns then it can call the alternate &lt;a href=&quot;shape#getPathIterator(java.awt.geom.AffineTransform,double)&quot;&gt;&lt;code&gt;getPathIterator&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Shape&lt;/code&gt;, which flattens the &lt;code&gt;Shape&lt;/code&gt;.</source>
          <target state="translated">If the &lt;code&gt;Graphics2D&lt;/code&gt; object cannot handle the curved segments that the &lt;code&gt;PathIterator&lt;/code&gt; object returns then it can call the alternate &lt;a href=&quot;shape#getPathIterator(java.awt.geom.AffineTransform,double)&quot;&gt; &lt;code&gt;getPathIterator&lt;/code&gt; &lt;/a&gt; method of &lt;code&gt;Shape&lt;/code&gt; , which flattens the &lt;code&gt;Shape&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d9438386cfe32fda0c1181ccd31aab76978f092" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;InvocationHandler&lt;/code&gt; is for an MXBean, then the parameters of a method are converted from the type declared in the MXBean interface into the corresponding mapped type, and the return value is converted from the mapped type into the declared type. For example, with the method</source>
          <target state="translated">&lt;code&gt;InvocationHandler&lt;/code&gt; がMXBean用である場合、メソッドのパラメーターはMXBeanインターフェースで宣言された型から対応するマップされた型に変換され、戻り値はマップされた型から宣言された型に変換されます。たとえば、メソッド</target>
        </trans-unit>
        <trans-unit id="db17038cfaa4ef45c73437ed292d512029f6bfe8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;JInternalFrame&lt;/code&gt; is not in maximized state, returns &lt;code&gt;getBounds()&lt;/code&gt;; otherwise, returns the bounds that the &lt;code&gt;JInternalFrame&lt;/code&gt; would be restored to.</source>
          <target state="translated">If the &lt;code&gt;JInternalFrame&lt;/code&gt; is not in maximized state, returns &lt;code&gt;getBounds()&lt;/code&gt; ; otherwise, returns the bounds that the &lt;code&gt;JInternalFrame&lt;/code&gt; would be restored to.</target>
        </trans-unit>
        <trans-unit id="f060428dfdce4f587aa2a33814a603772ec95345" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;JLayer&lt;/code&gt;'s view component is not &lt;code&gt;null&lt;/code&gt;, this calls the view's &lt;code&gt;getBaseline()&lt;/code&gt; method.</source>
          <target state="translated">If the &lt;code&gt;JLayer&lt;/code&gt; 's view component is not &lt;code&gt;null&lt;/code&gt; , this calls the view's &lt;code&gt;getBaseline()&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="2d2acc95bb253287fb1fd9ad280f5e3c68a344b4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;JLayer&lt;/code&gt;'s view component is not &lt;code&gt;null&lt;/code&gt;, this calls the view's &lt;code&gt;getBaseline()&lt;/code&gt; method. Otherwise, the default implementation is called.</source>
          <target state="translated">If the &lt;code&gt;JLayer&lt;/code&gt; 's view component is not &lt;code&gt;null&lt;/code&gt; , this calls the view's &lt;code&gt;getBaseline()&lt;/code&gt; method. Otherwise, the default implementation is called.</target>
        </trans-unit>
        <trans-unit id="3f2bc6a4dfcf47dbe29117aa68de225f1c61e8cb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;JLayer&lt;/code&gt;'s view component is not &lt;code&gt;null&lt;/code&gt;, this returns the result of the view's &lt;code&gt;getBaselineResizeBehavior()&lt;/code&gt; method.</source>
          <target state="translated">If the &lt;code&gt;JLayer&lt;/code&gt; 's view component is not &lt;code&gt;null&lt;/code&gt; , this returns the result of the view's &lt;code&gt;getBaselineResizeBehavior()&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="1bd4ebb8a1743bab39929e4ec06130e5519f66ca" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;JLayer&lt;/code&gt;'s view component is not &lt;code&gt;null&lt;/code&gt;, this returns the result of the view's &lt;code&gt;getBaselineResizeBehavior()&lt;/code&gt; method. Otherwise, the default implementation is called.</source>
          <target state="translated">If the &lt;code&gt;JLayer&lt;/code&gt; 's view component is not &lt;code&gt;null&lt;/code&gt; , this returns the result of the view's &lt;code&gt;getBaselineResizeBehavior()&lt;/code&gt; method. Otherwise, the default implementation is called.</target>
        </trans-unit>
        <trans-unit id="b88a2323263a45207c7b90c89107a58d6356d56a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;JLayer&lt;/code&gt;'s view component is not &lt;code&gt;null&lt;/code&gt;, this returns the result of the view's &lt;code&gt;getMaximumSize()&lt;/code&gt; method.</source>
          <target state="translated">If the &lt;code&gt;JLayer&lt;/code&gt; 's view component is not &lt;code&gt;null&lt;/code&gt; , this returns the result of the view's &lt;code&gt;getMaximumSize()&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="78f3308c92a131ac53ba0a2b91ae5625bc8378a8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;JLayer&lt;/code&gt;'s view component is not &lt;code&gt;null&lt;/code&gt;, this returns the result of the view's &lt;code&gt;getMaximumSize()&lt;/code&gt; method. Otherwise, the default implementation is used.</source>
          <target state="translated">If the &lt;code&gt;JLayer&lt;/code&gt; 's view component is not &lt;code&gt;null&lt;/code&gt; , this returns the result of the view's &lt;code&gt;getMaximumSize()&lt;/code&gt; method. Otherwise, the default implementation is used.</target>
        </trans-unit>
        <trans-unit id="30e2482d382c7844747a1e9c47c53ce8993e3afa" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;JLayer&lt;/code&gt;'s view component is not &lt;code&gt;null&lt;/code&gt;, this returns the result of the view's &lt;code&gt;getMinimalSize()&lt;/code&gt; method.</source>
          <target state="translated">If the &lt;code&gt;JLayer&lt;/code&gt; 's view component is not &lt;code&gt;null&lt;/code&gt; , this returns the result of the view's &lt;code&gt;getMinimalSize()&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="cd6e2b2d459272e76855c9dfdd3c3d186a8512b9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;JLayer&lt;/code&gt;'s view component is not &lt;code&gt;null&lt;/code&gt;, this returns the result of the view's &lt;code&gt;getMinimalSize()&lt;/code&gt; method. Otherwise, the default implementation is used.</source>
          <target state="translated">If the &lt;code&gt;JLayer&lt;/code&gt; 's view component is not &lt;code&gt;null&lt;/code&gt; , this returns the result of the view's &lt;code&gt;getMinimalSize()&lt;/code&gt; method. Otherwise, the default implementation is used.</target>
        </trans-unit>
        <trans-unit id="3e114e0c18eb9a3a04e50b88c65e47b3d1177a2d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;JLayer&lt;/code&gt;'s view component is not &lt;code&gt;null&lt;/code&gt;, this returns the result of the view's &lt;code&gt;getPreferredSize()&lt;/code&gt; method.</source>
          <target state="translated">If the &lt;code&gt;JLayer&lt;/code&gt; 's view component is not &lt;code&gt;null&lt;/code&gt; , this returns the result of the view's &lt;code&gt;getPreferredSize()&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="1909e9311585c50274c3f90139597ea7f32cfbeb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;JLayer&lt;/code&gt;'s view component is not &lt;code&gt;null&lt;/code&gt;, this returns the result of the view's &lt;code&gt;getPreferredSize()&lt;/code&gt; method. Otherwise, the default implementation is used.</source>
          <target state="translated">If the &lt;code&gt;JLayer&lt;/code&gt; 's view component is not &lt;code&gt;null&lt;/code&gt; , this returns the result of the view's &lt;code&gt;getPreferredSize()&lt;/code&gt; method. Otherwise, the default implementation is used.</target>
        </trans-unit>
        <trans-unit id="b773147646e5d6ae4684d585a997f76f520542ef" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;JMXServiceURL&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;JMXServiceURL&lt;/code&gt; が次の場合：</target>
        </trans-unit>
        <trans-unit id="3f268e97c59dcc626388a2e991c9c9562516a82d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;JMXServiceURL&lt;/code&gt; uses the directory syntax, as described above under &lt;a href=&quot;#directory&quot;&gt;&quot;connector addresses based on directory entries&quot;&lt;/a&gt;, then the client may obtain it as just explained, or client and server may both know the appropriate directory entry to use. For example, if the connector server for the Whatsit agent uses the entry &lt;code&gt;whatsit-agent-connector&lt;/code&gt; in the RMI registry on host &lt;code&gt;myhost&lt;/code&gt;, then client and server can both know that the appropriate &lt;code&gt;JMXServiceURL&lt;/code&gt; is:</source>
          <target state="translated">上記の&lt;a href=&quot;#directory&quot;&gt;「ディレクトリエントリに基づくコネクタアドレス」で&lt;/a&gt;説明したように、 &lt;code&gt;JMXServiceURL&lt;/code&gt; がディレクトリ構文を使用する場合、クライアントは説明どおりにそれを取得するか、クライアントとサーバーの両方が使用する適切なディレクトリエントリを知っています。たとえば、Whatsitエージェントのコネクタサーバーがホスト &lt;code&gt;myhost&lt;/code&gt; の RMIレジストリのエントリ &lt;code&gt;whatsit-agent-connector&lt;/code&gt; を使用する場合、クライアントとサーバーの両方が適切な &lt;code&gt;JMXServiceURL&lt;/code&gt; であることを認識できます。</target>
        </trans-unit>
        <trans-unit id="3f826af6b5dd95bfc92e77f04fdf460591da5f81" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;JMXServiceURL&lt;/code&gt; was generated by the server, as described above under &lt;a href=&quot;#servergen&quot;&gt;&quot;connector addresses generated by the server&quot;&lt;/a&gt;, then the client will need to obtain it directly or indirectly from the server. Typically, the server makes the &lt;code&gt;JMXServiceURL&lt;/code&gt; available by storing it in a file or a lookup service.</source>
          <target state="translated">&lt;code&gt;JMXServiceURL&lt;/code&gt; がサーバーによって生成された場合、上記の&lt;a href=&quot;#servergen&quot;&gt;「サーバーによって生成されたコネクタアドレス」で&lt;/a&gt;説明したように、クライアントはサーバーから直接または間接的にそれを取得する必要があります。通常、サーバーは、 &lt;code&gt;JMXServiceURL&lt;/code&gt; をファイルまたはルックアップサービスに格納することにより、JMXServiceURLを使用可能にします。</target>
        </trans-unit>
        <trans-unit id="19e53ac3ee0ca858d684bd217c73cfeb534f1225" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;LSParser&lt;/code&gt; is a synchronous &lt;code&gt;LSParser&lt;/code&gt;, the newly created and populated &lt;code&gt;Document&lt;/code&gt; is returned, or &lt;code&gt;null&lt;/code&gt; if an error occured. If the &lt;code&gt;LSParser&lt;/code&gt; is asynchronous, &lt;code&gt;null&lt;/code&gt; is returned since the document object may not yet be constructed when this method returns.</source>
          <target state="translated">If the &lt;code&gt;LSParser&lt;/code&gt; is a synchronous &lt;code&gt;LSParser&lt;/code&gt; , the newly created and populated &lt;code&gt;Document&lt;/code&gt; is returned, or &lt;code&gt;null&lt;/code&gt; if an error occured. If the &lt;code&gt;LSParser&lt;/code&gt; is asynchronous, &lt;code&gt;null&lt;/code&gt; is returned since the document object may not yet be constructed when this method returns.</target>
        </trans-unit>
        <trans-unit id="7fc52b341e17306f0b31074b4f7a8dcfcbafb512" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;LSParser&lt;/code&gt; is a synchronous &lt;code&gt;LSParser&lt;/code&gt;, the newly created and populated &lt;code&gt;Document&lt;/code&gt; is returned. If the &lt;code&gt;LSParser&lt;/code&gt; is asynchronous, &lt;code&gt;null&lt;/code&gt; is returned since the document object may not yet be constructed when this method returns.</source>
          <target state="translated">If the &lt;code&gt;LSParser&lt;/code&gt; is a synchronous &lt;code&gt;LSParser&lt;/code&gt; , the newly created and populated &lt;code&gt;Document&lt;/code&gt; is returned. If the &lt;code&gt;LSParser&lt;/code&gt; is asynchronous, &lt;code&gt;null&lt;/code&gt; is returned since the document object may not yet be constructed when this method returns.</target>
        </trans-unit>
        <trans-unit id="b5e161a884b01a34270547339690293148ba8fa6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;LayoutManager&lt;/code&gt; installed on this container is an instance of the &lt;code&gt;LayoutManager2&lt;/code&gt; interface, then the &lt;a href=&quot;layoutmanager2#invalidateLayout(java.awt.Container)&quot;&gt;&lt;code&gt;LayoutManager2.invalidateLayout(Container)&lt;/code&gt;&lt;/a&gt; method is invoked on it supplying this &lt;code&gt;Container&lt;/code&gt; as the argument.</source>
          <target state="translated">If the &lt;code&gt;LayoutManager&lt;/code&gt; installed on this container is an instance of the &lt;code&gt;LayoutManager2&lt;/code&gt; interface, then the &lt;a href=&quot;layoutmanager2#invalidateLayout(java.awt.Container)&quot;&gt; &lt;code&gt;LayoutManager2.invalidateLayout(Container)&lt;/code&gt; &lt;/a&gt; method is invoked on it supplying this &lt;code&gt;Container&lt;/code&gt; as the argument.</target>
        </trans-unit>
        <trans-unit id="e3f171d07666393092d63f7170ed5ec052f7118d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Level&lt;/code&gt; of the specified logger is &lt;code&gt;null&lt;/code&gt;, which means that this logger's effective level is inherited from its parent, an empty string will be returned.</source>
          <target state="translated">指定されたロガーの &lt;code&gt;Level&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、つまりこのロガーの有効レベルが親から継承されている場合、空の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="6ebbc0e52293490f8f9b76660317e3c20fc9979e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;MBeanPermission&lt;/code&gt; check succeeds, the MBean's class is validated by checking that its &lt;a href=&quot;../../../java.base/java/security/protectiondomain&quot;&gt;&lt;code&gt;ProtectionDomain&lt;/code&gt;&lt;/a&gt; implies &lt;a href=&quot;mbeantrustpermission#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;MBeanTrustPermission(&quot;register&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If the &lt;code&gt;MBeanPermission&lt;/code&gt; check succeeds, the MBean's class is validated by checking that its &lt;a href=&quot;../../../java.base/java/security/protectiondomain&quot;&gt; &lt;code&gt;ProtectionDomain&lt;/code&gt; &lt;/a&gt; implies &lt;a href=&quot;mbeantrustpermission#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;MBeanTrustPermission(&quot;register&quot;)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="458d82c56d9fb33c66e562fe6ab97aea8cc80904" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;MBeanPermission&lt;/code&gt; check succeeds, the MBean's class is validated by checking that its &lt;a href=&quot;../../java/security/protectiondomain&quot;&gt;&lt;code&gt;ProtectionDomain&lt;/code&gt;&lt;/a&gt; implies &lt;a href=&quot;mbeantrustpermission#MBeanTrustPermission-java.lang.String-&quot;&gt;&lt;code&gt;MBeanTrustPermission(&quot;register&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;MBeanPermission&lt;/code&gt; でのチェックが成功し、MBeanのクラスは、そのことを確認することで検証された&lt;a href=&quot;../../java/security/protectiondomain&quot;&gt; &lt;code&gt;ProtectionDomain&lt;/code&gt; が&lt;/a&gt;暗示&lt;a href=&quot;mbeantrustpermission#MBeanTrustPermission-java.lang.String-&quot;&gt; &lt;code&gt;MBeanTrustPermission(&quot;register&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f890b35cefa98c94269d1a9a764077652d426848" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Object&lt;/code&gt; to be tested is not a &lt;code&gt;QName&lt;/code&gt; or is &lt;code&gt;null&lt;/code&gt;, then this method returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">If the &lt;code&gt;Object&lt;/code&gt; to be tested is not a &lt;code&gt;QName&lt;/code&gt; or is &lt;code&gt;null&lt;/code&gt; , then this method returns &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="021af7bb755cf93cf54c9f5f352c98d0f4ca4622" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ObservedAttribute&lt;/code&gt; contains more than one period, for example &lt;code&gt;&quot;ConnectionPool.connectionStats.length&quot;&lt;/code&gt;, then the above rules are applied iteratively. Here,</source>
          <target state="translated">&lt;code&gt;ObservedAttribute&lt;/code&gt; に複数のピリオドが含まれている場合（例： &lt;code&gt;&quot;ConnectionPool.connectionStats.length&quot;&lt;/code&gt; ）、上記のルールが繰り返し適用されます。ここに、</target>
        </trans-unit>
        <trans-unit id="ea89dee9c534a6485cf68abb91d3ac324905d7e6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;RMIServerImpl&lt;/code&gt; was bound to a JNDI directory by the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method, it is unbound from the directory by this method.</source>
          <target state="translated">If the &lt;code&gt;RMIServerImpl&lt;/code&gt; was bound to a JNDI directory by the &lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; method, it is unbound from the directory by this method.</target>
        </trans-unit>
        <trans-unit id="7cb7f5f842a73d2190c2e8a4561e728aa057bb8f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;RMIServerImpl&lt;/code&gt; was bound to a JNDI directory by the &lt;a href=&quot;rmiconnectorserver#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method, it is unbound from the directory by this method.</source>
          <target state="translated">&lt;code&gt;RMIServerImpl&lt;/code&gt; が&lt;a href=&quot;rmiconnectorserver#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;メソッドによってJNDIディレクトリにバインドされていた場合、このメソッドによってディレクトリからバインド解除されます。</target>
        </trans-unit>
        <trans-unit id="5e181fd53600dcd77e327b5091e7925935330a6f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ResolverStyle&lt;/code&gt; is &lt;code&gt;LENIENT&lt;/code&gt; and a time is parsed without a date, then the complete result of the parse consists of a &lt;code&gt;LocalTime&lt;/code&gt; and an excess &lt;code&gt;Period&lt;/code&gt; in days.</source>
          <target state="translated">&lt;code&gt;ResolverStyle&lt;/code&gt; が &lt;code&gt;LENIENT&lt;/code&gt; であり、日付なしで時刻が解析される場合、解析の完全な結果は &lt;code&gt;LocalTime&lt;/code&gt; と余分な &lt;code&gt;Period&lt;/code&gt; （日数）で構成されます。</target>
        </trans-unit>
        <trans-unit id="801480d1156ab6ed42af2047f9f67f81a9ed2968" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ResolverStyle&lt;/code&gt; is &lt;code&gt;SMART&lt;/code&gt; and a time is parsed without a date where the time is 24:00:00, then the complete result of the parse consists of a &lt;code&gt;LocalTime&lt;/code&gt; of 00:00:00 and an excess &lt;code&gt;Period&lt;/code&gt; of one day.</source>
          <target state="translated">&lt;code&gt;ResolverStyle&lt;/code&gt; が &lt;code&gt;SMART&lt;/code&gt; であり、時刻が &lt;code&gt;LocalTime&lt;/code&gt; である日付なしで解析される場合、解析の完全な結果は00:00:00のLocalTimeと1日の超過 &lt;code&gt;Period&lt;/code&gt; で構成されます。</target>
        </trans-unit>
        <trans-unit id="ea383b2cd69ecf52b9ec7ee59229284018a85985" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;String&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or does not conform to &lt;a href=&quot;#toString()&quot;&gt;&lt;code&gt;QName.toString()&lt;/code&gt;&lt;/a&gt; formatting, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">If the &lt;code&gt;String&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or does not conform to &lt;a href=&quot;#toString()&quot;&gt; &lt;code&gt;QName.toString()&lt;/code&gt; &lt;/a&gt; formatting, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="679d594737099d64f4c8a7bd67a360d72bcf8bdd" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Type&lt;/code&gt; is a parameterized type, the &lt;code&gt;Type&lt;/code&gt; object returned must accurately reflect the actual type parameters used in the source code.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; がパラメーター化された型の場合、返される &lt;code&gt;Type&lt;/code&gt; オブジェクトは、ソースコードで使用される実際の型パラメーターを正確に反映する必要があります。</target>
        </trans-unit>
        <trans-unit id="9c0eea94ebf724c08a182505b07f4b40fc26c467" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;UndoManager&lt;/code&gt; contains edits it will call &lt;code&gt;addEdit&lt;/code&gt; on the current edit passing in the new edit as the argument. If &lt;code&gt;addEdit&lt;/code&gt; returns true the new edit is assumed to have been incorporated into the current edit and the new edit will not be added to the list of current edits. Edits can use &lt;code&gt;addEdit&lt;/code&gt; as a way for smaller edits to be incorporated into a larger edit and treated as a single edit.</source>
          <target state="translated">If the &lt;code&gt;UndoManager&lt;/code&gt; contains edits it will call &lt;code&gt;addEdit&lt;/code&gt; on the current edit passing in the new edit as the argument. If &lt;code&gt;addEdit&lt;/code&gt; returns true the new edit is assumed to have been incorporated into the current edit and the new edit will not be added to the list of current edits. Edits can use &lt;code&gt;addEdit&lt;/code&gt; as a way for smaller edits to be incorporated into a larger edit and treated as a single edit.</target>
        </trans-unit>
        <trans-unit id="35ff53d86b4bc68486f63c50ba3db4d56f3b6812" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ZoneId&lt;/code&gt; to be used is a &lt;code&gt;ZoneOffset&lt;/code&gt;, this method is equivalent to &lt;a href=&quot;#of(java.time.LocalDateTime,java.time.ZoneId)&quot;&gt;&lt;code&gt;of(LocalDateTime, ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If the &lt;code&gt;ZoneId&lt;/code&gt; to be used is a &lt;code&gt;ZoneOffset&lt;/code&gt; , this method is equivalent to &lt;a href=&quot;#of(java.time.LocalDateTime,java.time.ZoneId)&quot;&gt; &lt;code&gt;of(LocalDateTime, ZoneId)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="be1a0f77a615842bdf82ef7b9ebede6a9bce0b3f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ZoneId&lt;/code&gt; to be used is a &lt;code&gt;ZoneOffset&lt;/code&gt;, this method is equivalent to &lt;a href=&quot;zoneddatetime#of-java.time.LocalDateTime-java.time.ZoneId-&quot;&gt;&lt;code&gt;of(LocalDateTime, ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;ZoneId&lt;/code&gt; 使用すべきである &lt;code&gt;ZoneOffset&lt;/code&gt; 、この方法は、と等価である&lt;a href=&quot;zoneddatetime#of-java.time.LocalDateTime-java.time.ZoneId-&quot;&gt; &lt;code&gt;of(LocalDateTime, ZoneId)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d86f839b1695227093964559a355f46055cbd60" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;abort&lt;/code&gt; phase fails for any reason, then this method propagates the original exception thrown either during the &lt;code&gt;login&lt;/code&gt; phase or the &lt;code&gt;commit&lt;/code&gt; phase. In either case, the overall authentication fails.</source>
          <target state="translated">何らかの理由で &lt;code&gt;abort&lt;/code&gt; フェーズが失敗した場合、このメソッドは、 &lt;code&gt;login&lt;/code&gt; フェーズまたは &lt;code&gt;commit&lt;/code&gt; フェーズのいずれかでスローされた元の例外を伝達します。どちらの場合も、全体的な認証は失敗します。</target>
        </trans-unit>
        <trans-unit id="a7b16f00ee4043e4aeba76ef6283f2971eb30418" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;acceptor&lt;/code&gt; function is not successfully invoked, then the push promise is rejected. The &lt;code&gt;acceptor&lt;/code&gt; function will throw an &lt;code&gt;IllegalStateException&lt;/code&gt; if invoked more than once.</source>
          <target state="translated">If the &lt;code&gt;acceptor&lt;/code&gt; function is not successfully invoked, then the push promise is rejected. The &lt;code&gt;acceptor&lt;/code&gt; function will throw an &lt;code&gt;IllegalStateException&lt;/code&gt; if invoked more than once.</target>
        </trans-unit>
        <trans-unit id="446c80fa5bc5f4e37afc5fc9e155b09818c5562f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;addAll()&lt;/code&gt; operation throws an exception, the effect on this attribute set's state is implementation dependent; elements from the specified set before the point of the exception may or may not have been added to this attribute set.</source>
          <target state="translated">&lt;code&gt;addAll()&lt;/code&gt; 操作が例外をスローする場合、この属性セットの状態への影響は実装に依存します。例外が発生する前の指定されたセットの要素は、この属性セットに追加されている場合とされていない場合があります。</target>
        </trans-unit>
        <trans-unit id="04ef5598f3ce002caa707d0e8dab5fc3e129e43c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;addAll(AttributeSet)&lt;/code&gt; operation throws an exception, the effect on this attribute set's state is implementation dependent; elements from the specified set before the point of the exception may or may not have been added to this attribute set.</source>
          <target state="translated">&lt;code&gt;addAll(AttributeSet)&lt;/code&gt; 操作が例外をスローする場合、この属性セットの状態への影響は実装に依存します。例外が発生する前の指定されたセットの要素は、この属性セットに追加されている場合とされていない場合があります。</target>
        </trans-unit>
        <trans-unit id="9c0511263cbc485e9efb3be19eb199baa7484f96" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;algorithm&lt;/code&gt; parameter is non-null or non-empty, the endpoint identification/verification procedures must be handled during SSL/TLS handshaking. This is to prevent man-in-the-middle attacks.</source>
          <target state="translated">&lt;code&gt;algorithm&lt;/code&gt; パラメータがnullまたは空ではない場合、SSL / TLSハンドシェイク中にエンドポイントの識別/検証手順を処理する必要があります。これは、中間者攻撃を防ぐためです。</target>
        </trans-unit>
        <trans-unit id="6834dc9ff0b8ff599b86ecc51718d6f5b5574c58" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;algorithm&lt;/code&gt; parameter is non-null or non-empty, the endpoint identification/verification procedures must be handled during SSL/TLS/DTLS handshaking. This is to prevent man-in-the-middle attacks.</source>
          <target state="translated">If the &lt;code&gt;algorithm&lt;/code&gt; parameter is non-null or non-empty, the endpoint identification/verification procedures must be handled during SSL/TLS/DTLS handshaking. This is to prevent man-in-the-middle attacks.</target>
        </trans-unit>
        <trans-unit id="ce642f2bb7f80adee08e960922be3c55ad9db8fc" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;attributes&lt;/code&gt; parameter contains an &lt;code&gt;Attribute&lt;/code&gt; whose category is the same as the &lt;code&gt;category&lt;/code&gt; parameter, the service must ignore this attribute in the &lt;code&gt;AttributeSet&lt;/code&gt;.</source>
          <target state="translated">If the &lt;code&gt;attributes&lt;/code&gt; parameter contains an &lt;code&gt;Attribute&lt;/code&gt; whose category is the same as the &lt;code&gt;category&lt;/code&gt; parameter, the service must ignore this attribute in the &lt;code&gt;AttributeSet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="df2ce529fb9d0af1fa8bdee431df9ad0c85e4344" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;attributes&lt;/code&gt; parameter contains an Attribute whose category is the same as the &lt;code&gt;category&lt;/code&gt; parameter, the service must ignore this attribute in the AttributeSet.</source>
          <target state="translated">&lt;code&gt;attributes&lt;/code&gt; パラメータに、 &lt;code&gt;category&lt;/code&gt; パラメータと同じカテゴリの属性が含まれている場合、サービスはAttributeSetのこの属性を無視する必要があります。</target>
        </trans-unit>
        <trans-unit id="98b6741e1086600d52bcba89af328ea50edfba2c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;axis&lt;/code&gt; parameter is neither &lt;code&gt;View.X_AXIS&lt;/code&gt; nor &lt;code&gt;View.Y_AXIS&lt;/code&gt;, &lt;a href=&quot;../../../../../java.base/java/lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; is thrown. If the &lt;code&gt;r&lt;/code&gt; parameter is &lt;code&gt;null,&lt;/code&gt; a new &lt;code&gt;SizeRequirements&lt;/code&gt; object is created, otherwise the supplied &lt;code&gt;SizeRequirements&lt;/code&gt; object is returned.</source>
          <target state="translated">If the &lt;code&gt;axis&lt;/code&gt; parameter is neither &lt;code&gt;View.X_AXIS&lt;/code&gt; nor &lt;code&gt;View.Y_AXIS&lt;/code&gt; , &lt;a href=&quot;../../../../../java.base/java/lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt; is thrown. If the &lt;code&gt;r&lt;/code&gt; parameter is &lt;code&gt;null,&lt;/code&gt; a new &lt;code&gt;SizeRequirements&lt;/code&gt; object is created, otherwise the supplied &lt;code&gt;SizeRequirements&lt;/code&gt; object is returned.</target>
        </trans-unit>
        <trans-unit id="560ee03306807fcb6258a99873dd7c023d6a7244" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;axis&lt;/code&gt; parameter is neither &lt;code&gt;View.X_AXIS&lt;/code&gt; nor &lt;code&gt;View.Y_AXIS&lt;/code&gt;, &lt;a href=&quot;../../../../java.base/java/lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; is thrown. If the &lt;code&gt;r&lt;/code&gt; parameter is &lt;code&gt;null,&lt;/code&gt; a new &lt;code&gt;SizeRequirements&lt;/code&gt; object is created, otherwise the supplied &lt;code&gt;SizeRequirements&lt;/code&gt; object is returned.</source>
          <target state="translated">If the &lt;code&gt;axis&lt;/code&gt; parameter is neither &lt;code&gt;View.X_AXIS&lt;/code&gt; nor &lt;code&gt;View.Y_AXIS&lt;/code&gt; , &lt;a href=&quot;../../../../java.base/java/lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt; is thrown. If the &lt;code&gt;r&lt;/code&gt; parameter is &lt;code&gt;null,&lt;/code&gt; a new &lt;code&gt;SizeRequirements&lt;/code&gt; object is created, otherwise the supplied &lt;code&gt;SizeRequirements&lt;/code&gt; object is returned.</target>
        </trans-unit>
        <trans-unit id="717cef07fc5b446c1f7069da0b2b9e9376ef7862" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;body&lt;/code&gt; handle returns a non-&lt;code&gt;void&lt;/code&gt; type &lt;code&gt;V&lt;/code&gt;, a leading loop iteration variable of that type is also present. This variable is initialized using the optional &lt;code&gt;init&lt;/code&gt; handle, or to the &lt;a href=&quot;#empty(java.lang.invoke.MethodType)&quot;&gt;default value&lt;/a&gt; of type &lt;code&gt;V&lt;/code&gt; if that handle is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">If the &lt;code&gt;body&lt;/code&gt; handle returns a non- &lt;code&gt;void&lt;/code&gt; type &lt;code&gt;V&lt;/code&gt; , a leading loop iteration variable of that type is also present. This variable is initialized using the optional &lt;code&gt;init&lt;/code&gt; handle, or to the &lt;a href=&quot;#empty(java.lang.invoke.MethodType)&quot;&gt;default value&lt;/a&gt; of type &lt;code&gt;V&lt;/code&gt; if that handle is &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66b2ac942fdab810011fedc70461bf42a1dedd98" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;boolean&lt;/code&gt; argument is &lt;code&gt;false&lt;/code&gt;, this method causes the virtual machine to stop performing the detailed instruction trace it is performing.</source>
          <target state="translated">&lt;code&gt;boolean&lt;/code&gt; 引数が &lt;code&gt;false&lt;/code&gt; の場合、このメソッドにより、仮想マシンは実行中の詳細な命令トレースの実行を停止します。</target>
        </trans-unit>
        <trans-unit id="88001e51dd6c79b8369de89a8cbe2fdfe3865e70" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;char&lt;/code&gt; value at &lt;code&gt;(index - 1)&lt;/code&gt; is in the low-surrogate range, &lt;code&gt;(index - 2)&lt;/code&gt; is not negative, and the &lt;code&gt;char&lt;/code&gt; value at &lt;code&gt;(index -
 2)&lt;/code&gt; is in the high-surrogate range, then the supplementary code point value of the surrogate pair is returned. If the &lt;code&gt;char&lt;/code&gt; value at &lt;code&gt;index -
 1&lt;/code&gt; is an unpaired low-surrogate or a high-surrogate, the surrogate value is returned.</source>
          <target state="translated">場合 &lt;code&gt;char&lt;/code&gt; の値 &lt;code&gt;(index - 1)&lt;/code&gt; 低サロゲート範囲にある、 &lt;code&gt;(index - 2)&lt;/code&gt; 負ではない、及び &lt;code&gt;char&lt;/code&gt; の値 &lt;code&gt;(index - 2)&lt;/code&gt; 上位サロゲート範囲にある場合、補助コードポイントサロゲートペアの値が返されます。 &lt;code&gt;index - 1&lt;/code&gt; の &lt;code&gt;char&lt;/code&gt; 値が対になっていない下位サロゲートまたは上位サロゲートである場合、サロゲート値が返されます。</target>
        </trans-unit>
        <trans-unit id="4dc1506abc2a5f78b19fe3dd96f18038b15e4e22" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;char&lt;/code&gt; value specified at the given index is in the high-surrogate range, the following index is less than the length of this &lt;code&gt;String&lt;/code&gt;, and the &lt;code&gt;char&lt;/code&gt; value at the following index is in the low-surrogate range, then the supplementary code point corresponding to this surrogate pair is returned. Otherwise, the &lt;code&gt;char&lt;/code&gt; value at the given index is returned.</source>
          <target state="translated">場合 &lt;code&gt;char&lt;/code&gt; 指定されたインデックスで指定された値が上位サロゲート範囲にある、次のインデックスは、この長さよりも小さい &lt;code&gt;String&lt;/code&gt; 、及び &lt;code&gt;char&lt;/code&gt; 以下のインデックスの値は、その後、低サロゲート範囲で補助コードポイントでありますこのサロゲートペアに対応するものが返されます。それ以外の場合は、指定されたインデックスの &lt;code&gt;char&lt;/code&gt; 値が返されます。</target>
        </trans-unit>
        <trans-unit id="e0c3a606e3f3d827b22e0257098f87d4bbd176eb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;char&lt;/code&gt; value specified at the given index is in the high-surrogate range, the following index is less than the length of this sequence, and the &lt;code&gt;char&lt;/code&gt; value at the following index is in the low-surrogate range, then the supplementary code point corresponding to this surrogate pair is returned. Otherwise, the &lt;code&gt;char&lt;/code&gt; value at the given index is returned.</source>
          <target state="translated">指定されたインデックスで指定された &lt;code&gt;char&lt;/code&gt; 値が高サロゲート範囲にある場合、次のインデックスはこのシーケンスの長さより短く、次のインデックスの &lt;code&gt;char&lt;/code&gt; 値は低サロゲート範囲にあるため、補足コードポイントこのサロゲートペアに対応するものが返されます。それ以外の場合は、指定されたインデックスの &lt;code&gt;char&lt;/code&gt; 値が返されます。</target>
        </trans-unit>
        <trans-unit id="adfa6cd0e81b003e1bb2d5b808729dc1489e6300" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;char&lt;/code&gt; value specified by the index is a &lt;a href=&quot;../../../../java.base/java/lang/character#unicode&quot;&gt;surrogate&lt;/a&gt;, the surrogate value is returned.</source>
          <target state="translated">If the &lt;code&gt;char&lt;/code&gt; value specified by the index is a &lt;a href=&quot;../../../../java.base/java/lang/character#unicode&quot;&gt;surrogate&lt;/a&gt;, the surrogate value is returned.</target>
        </trans-unit>
        <trans-unit id="7059bfb26c628d831ae809e02477cb1879e60f94" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;char&lt;/code&gt; value specified by the index is a &lt;a href=&quot;character#unicode&quot;&gt;surrogate&lt;/a&gt;, the surrogate value is returned.</source>
          <target state="translated">インデックスで指定された &lt;code&gt;char&lt;/code&gt; 値が&lt;a href=&quot;character#unicode&quot;&gt;surrogateである&lt;/a&gt;場合、surrogate値が返されます。</target>
        </trans-unit>
        <trans-unit id="8250d512b905f35c6a410fcb5609b7900e346a5b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;commit&lt;/code&gt; phase of the authentication process fails, then the overall authentication fails and this method invokes the &lt;code&gt;abort&lt;/code&gt; method for each configured &lt;code&gt;LoginModule&lt;/code&gt;.</source>
          <target state="translated">認証プロセスの &lt;code&gt;commit&lt;/code&gt; フェーズが失敗すると、認証全体が失敗し、このメソッドは、構成されている各 &lt;code&gt;LoginModule&lt;/code&gt; の &lt;code&gt;abort&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="84555e61977552659f8d8d7542bd52057f6a2286" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;connect&lt;/code&gt; method is called when the connection has already been opened (indicated by the &lt;code&gt;connected&lt;/code&gt; field having the value &lt;code&gt;true&lt;/code&gt;), the call is ignored.</source>
          <target state="translated">場合は &lt;code&gt;connect&lt;/code&gt; の接続がすでに開かれているときにメソッドが呼び出された（で示された &lt;code&gt;connected&lt;/code&gt; 値を持つフィールド &lt;code&gt;true&lt;/code&gt; ）、呼び出しは無視されます。</target>
        </trans-unit>
        <trans-unit id="342ba2fb4627294d3b781daa9697b718b5c068d6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;constraints&lt;/code&gt; object is &lt;code&gt;null&lt;/code&gt;, the component is added in the first available position (left/top if open, else right/bottom).</source>
          <target state="translated">If the &lt;code&gt;constraints&lt;/code&gt; object is &lt;code&gt;null&lt;/code&gt; , the component is added in the first available position (left/top if open, else right/bottom).</target>
        </trans-unit>
        <trans-unit id="671e297a3a1ea6f0c42770e029c80abaa60e1bfb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;constraints&lt;/code&gt; parameter is non-null, every cryptographic algorithm, key and algorithm parameters used in the SSL/TLS handshake must be permitted by the constraints.</source>
          <target state="translated">&lt;code&gt;constraints&lt;/code&gt; パラメーターが非ヌルの場合、SSL / TLSハンドシェークで使用されるすべての暗号化アルゴリズム、鍵、およびアルゴリズムパラメーターは、制約によって許可される必要があります。</target>
        </trans-unit>
        <trans-unit id="b40b2d9ff34a0913ffad16fe301b6eeb61865ff0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;constraints&lt;/code&gt; parameter is non-null, every cryptographic algorithm, key and algorithm parameters used in the SSL/TLS/DTLS handshake must be permitted by the constraints.</source>
          <target state="translated">If the &lt;code&gt;constraints&lt;/code&gt; parameter is non-null, every cryptographic algorithm, key and algorithm parameters used in the SSL/TLS/DTLS handshake must be permitted by the constraints.</target>
        </trans-unit>
        <trans-unit id="6a5dce44bc4531313d43efc02c3d4e5307173391" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;deep&lt;/code&gt; option was set to &lt;code&gt;true&lt;/code&gt;, the descendants of the source &lt;code&gt;DocumentFragment&lt;/code&gt; are recursively imported and the resulting nodes reassembled under the imported &lt;code&gt;DocumentFragment&lt;/code&gt; to form the corresponding subtree. Otherwise, this simply generates an empty &lt;code&gt;DocumentFragment&lt;/code&gt;.</source>
          <target state="translated">If the &lt;code&gt;deep&lt;/code&gt; option was set to &lt;code&gt;true&lt;/code&gt; , the descendants of the source &lt;code&gt;DocumentFragment&lt;/code&gt; are recursively imported and the resulting nodes reassembled under the imported &lt;code&gt;DocumentFragment&lt;/code&gt; to form the corresponding subtree. Otherwise, this simply generates an empty &lt;code&gt;DocumentFragment&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16c20fefbf5f84e3a9d83640712edb423384c25b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;defaultLoader&lt;/code&gt; argument is non-&lt;code&gt;null&lt;/code&gt; and all of the named interfaces can be resolved through that loader, then,</source>
          <target state="translated">If the &lt;code&gt;defaultLoader&lt;/code&gt; argument is non- &lt;code&gt;null&lt;/code&gt; and all of the named interfaces can be resolved through that loader, then,</target>
        </trans-unit>
        <trans-unit id="b0dd399ffadc3a633c7172c0f219386bda780906" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;defaultLoader&lt;/code&gt; argument is non-&lt;code&gt;null&lt;/code&gt;, it first attempts to load the class with the specified &lt;code&gt;name&lt;/code&gt; using the &lt;code&gt;defaultLoader&lt;/code&gt;, such as by evaluating</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e999b0a3f9b176b6320891b00b86e62b47b692fe" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;dereference&lt;/code&gt; method of user-specified &lt;code&gt;
 URIDereferencer&lt;/code&gt;s returns &lt;code&gt;NodeSetData&lt;/code&gt; objects, the &lt;code&gt;iterator&lt;/code&gt; method MUST return an iteration over objects of type &lt;code&gt;
 org.w3c.dom.Node&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44563c51972a22c15c4aac96132c92755f5fb940" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;directory&lt;/code&gt; argument is &lt;code&gt;null&lt;/code&gt; then the system-dependent default temporary-file directory will be used. The default temporary-file directory is specified by the system property &lt;code&gt;java.io.tmpdir&lt;/code&gt;. On UNIX systems the default value of this property is typically &lt;code&gt;&quot;/tmp&quot;&lt;/code&gt; or &lt;code&gt;&quot;/var/tmp&quot;&lt;/code&gt;; on Microsoft Windows systems it is typically &lt;code&gt;&quot;C:\\WINNT\\TEMP&quot;&lt;/code&gt;. A different value may be given to this system property when the Java virtual machine is invoked, but programmatic changes to this property are not guaranteed to have any effect upon the temporary directory used by this method.</source>
          <target state="translated">場合は &lt;code&gt;directory&lt;/code&gt; 引数が &lt;code&gt;null&lt;/code&gt; では、システムに依存するデフォルトの一時ファイルディレクトリが使用されます。デフォルトの一時ファイルディレクトリは、システムプロパティ &lt;code&gt;java.io.tmpdir&lt;/code&gt; によって指定されます。 UNIXシステムでは、このプロパティのデフォルト値は通常 &lt;code&gt;&quot;/tmp&quot;&lt;/code&gt; または &lt;code&gt;&quot;/var/tmp&quot;&lt;/code&gt; です。 Microsoft Windowsシステムでは、通常 &lt;code&gt;&quot;C:\\WINNT\\TEMP&quot;&lt;/code&gt; です。 Java仮想マシンが呼び出されたときに、このシステムプロパティに別の値が指定される場合がありますが、このプロパティへのプログラムによる変更が、このメソッドで使用される一時ディレクトリに影響を与えるとは限りません。</target>
        </trans-unit>
        <trans-unit id="e2c4e3bcad43dd7e533a7fbe7a4541570c19bd7c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;emitter&lt;/code&gt; parameter to the constructor was an instance of &lt;code&gt;NotificationBroadcasterSupport&lt;/code&gt; then this method will call &lt;code&gt;emitter.&lt;/code&gt;&lt;a href=&quot;notificationbroadcastersupport#sendNotification(javax.management.Notification)&quot;&gt;&lt;code&gt;sendNotification&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If the &lt;code&gt;emitter&lt;/code&gt; parameter to the constructor was an instance of &lt;code&gt;NotificationBroadcasterSupport&lt;/code&gt; then this method will call &lt;code&gt;emitter.&lt;/code&gt; &lt;a href=&quot;notificationbroadcastersupport#sendNotification(javax.management.Notification)&quot;&gt; &lt;code&gt;sendNotification&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="61b3f5e27ccdfa6299b991fa9397c7fbc31d2c50" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;emitter&lt;/code&gt; parameter to the constructor was an instance of &lt;code&gt;NotificationBroadcasterSupport&lt;/code&gt; then this method will call &lt;code&gt;emitter.&lt;/code&gt;&lt;a href=&quot;notificationbroadcastersupport#sendNotification-javax.management.Notification-&quot;&gt;&lt;code&gt;sendNotification&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;emitter&lt;/code&gt; コンストラクタにパラメータがのインスタンスだった &lt;code&gt;NotificationBroadcasterSupport&lt;/code&gt; 、このメソッドは呼び出します &lt;code&gt;emitter.&lt;/code&gt; &lt;a href=&quot;notificationbroadcastersupport#sendNotification-javax.management.Notification-&quot;&gt; &lt;code&gt;sendNotification&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9ab969fd58c84fba8fefef4d68297aff8fba763d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;engine&lt;/code&gt; parameter is available, and the algorithm constraints of the &lt;code&gt;SSLParameters&lt;/code&gt; is non-null, for every certificate in the certification path, fields such as subject public key, the signature algorithm, key usage, extended key usage, etc. need to conform to the algorithm constraints in place on this engine.</source>
          <target state="translated">場合 &lt;code&gt;engine&lt;/code&gt; パラメータが使用可能であり、アルゴリズムの制約 &lt;code&gt;SSLParameters&lt;/code&gt; は、認証パス内のすべての証明書を、非ヌルである、そのような対象の公開鍵、署名アルゴリズム、キーの使用、拡張鍵使用法、等準拠する必要性などの分野このエンジンに配置されているアルゴリズムの制約に。</target>
        </trans-unit>
        <trans-unit id="4eab346c804a32d54771d78aef5cb1081f3a8a5a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;engine&lt;/code&gt; parameter is available, and the endpoint identification algorithm of the &lt;code&gt;SSLParameters&lt;/code&gt; is non-empty, to prevent man-in-the-middle attacks, the address that the &lt;code&gt;engine&lt;/code&gt; connected to should be checked against the peer's identity presented in the end-entity X509 certificate, as specified in the endpoint identification algorithm.</source>
          <target state="translated">場合は &lt;code&gt;engine&lt;/code&gt; パラメータが利用可能である、とのエンドポイント識別アルゴリズム &lt;code&gt;SSLParameters&lt;/code&gt; は、 man-in-the-middle攻撃を防ぐために、非空で、そのアドレス &lt;code&gt;engine&lt;/code&gt; に接続されているが、エンドで提示ピアの識別情報と照合する必要がありますエンドポイント識別アルゴリズムで指定されているエンティティX509証明書。</target>
        </trans-unit>
        <trans-unit id="c489bda8ac51d0adb2cd2ea9ed206915eaf00580" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt;&lt;code&gt;newJMXConnector&lt;/code&gt;&lt;/a&gt; contains the key &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; then the associated value is the class loader to use to load the provider. If the associated value is not an instance of &lt;a href=&quot;../../../../java.base/java/lang/classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;../../../../java.base/java/lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">If the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt; &lt;code&gt;newJMXConnector&lt;/code&gt; &lt;/a&gt; contains the key &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; then the associated value is the class loader to use to load the provider. If the associated value is not an instance of &lt;a href=&quot;../../../../java.base/java/lang/classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; &lt;/a&gt;, an &lt;a href=&quot;../../../../java.base/java/lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="def3bb99565bff52201998cb9934892d1dd9c8bd" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt;&lt;code&gt;newJMXConnector&lt;/code&gt;&lt;/a&gt; contains the key &lt;code&gt;jmx.remote.protocol.provider.pkgs&lt;/code&gt; then the associated value is the provider package list.</source>
          <target state="translated">If the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;#newJMXConnector(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt; &lt;code&gt;newJMXConnector&lt;/code&gt; &lt;/a&gt; contains the key &lt;code&gt;jmx.remote.protocol.provider.pkgs&lt;/code&gt; then the associated value is the provider package list.</target>
        </trans-unit>
        <trans-unit id="6b551db3025e219ae99ad787aed372f0514c1f97" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt;&lt;code&gt;newJMXConnectorServer&lt;/code&gt;&lt;/a&gt; contains the key &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; then the associated value is the class loader to use to load the provider. If the associated value is not an instance of &lt;a href=&quot;../../../../java.base/java/lang/classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;../../../../java.base/java/lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">If the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt; &lt;code&gt;newJMXConnectorServer&lt;/code&gt; &lt;/a&gt; contains the key &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; then the associated value is the class loader to use to load the provider. If the associated value is not an instance of &lt;a href=&quot;../../../../java.base/java/lang/classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; &lt;/a&gt;, an &lt;a href=&quot;../../../../java.base/java/lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="c01021b847664573167d59264418973e495b23f1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt;&lt;code&gt;newJMXConnectorServer&lt;/code&gt;&lt;/a&gt; contains the key &lt;code&gt;jmx.remote.protocol.provider.pkgs&lt;/code&gt; then the associated value is the provider package list.</source>
          <target state="translated">If the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt; &lt;code&gt;newJMXConnectorServer&lt;/code&gt; &lt;/a&gt; contains the key &lt;code&gt;jmx.remote.protocol.provider.pkgs&lt;/code&gt; then the associated value is the provider package list.</target>
        </trans-unit>
        <trans-unit id="56c06cc3e424dcdff076cdd1bf18f2a3b0d87e7a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt;&lt;code&gt;newJMXConnector&lt;/code&gt;&lt;/a&gt; contains the key &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; then the associated value is the class loader to use to load the provider. If the associated value is not an instance of &lt;a href=&quot;../../../java/lang/classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;../../../java/lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">場合は &lt;code&gt;environment&lt;/code&gt; へのパラメータ&lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt; &lt;code&gt;newJMXConnector&lt;/code&gt; は&lt;/a&gt;キーが含ま &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; を、関連付けられた値がプロバイダをロードするためのクラスローダです。関連する値が&lt;a href=&quot;../../../java/lang/classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; の&lt;/a&gt;インスタンスでない場合、&lt;a href=&quot;../../../java/lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="d005cee8b528479b05c0be85b9c4205d983a4967" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt;&lt;code&gt;newJMXConnector&lt;/code&gt;&lt;/a&gt; contains the key &lt;code&gt;jmx.remote.protocol.provider.pkgs&lt;/code&gt; then the associated value is the provider package list.</source>
          <target state="translated">場合は &lt;code&gt;environment&lt;/code&gt; へのパラメータ&lt;a href=&quot;jmxconnectorfactory#newJMXConnector-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt; &lt;code&gt;newJMXConnector&lt;/code&gt; は&lt;/a&gt;キーが含ま &lt;code&gt;jmx.remote.protocol.provider.pkgs&lt;/code&gt; を、関連付けられた値がプロバイダパッケージリストです。</target>
        </trans-unit>
        <trans-unit id="826709e7b964ff5f55e8bba64d589128adee0453" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;newJMXConnectorServer&lt;/code&gt;&lt;/a&gt; contains the key &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; then the associated value is the class loader to use to load the provider. If the associated value is not an instance of &lt;a href=&quot;../../../java/lang/classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;../../../java/lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">場合は &lt;code&gt;environment&lt;/code&gt; へのパラメータ&lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;newJMXConnectorServer&lt;/code&gt; は&lt;/a&gt;キーが含ま &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; を、関連付けられた値がプロバイダをロードするためのクラスローダです。関連する値が&lt;a href=&quot;../../../java/lang/classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; の&lt;/a&gt;インスタンスでない場合、&lt;a href=&quot;../../../java/lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="57ace146c6c02d090ae1128a0850bf8c4adb9e91" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;environment&lt;/code&gt; parameter to &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;newJMXConnectorServer&lt;/code&gt;&lt;/a&gt; contains the key &lt;code&gt;jmx.remote.protocol.provider.pkgs&lt;/code&gt; then the associated value is the provider package list.</source>
          <target state="translated">場合は &lt;code&gt;environment&lt;/code&gt; へのパラメータ&lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;newJMXConnectorServer&lt;/code&gt; は&lt;/a&gt;キーが含ま &lt;code&gt;jmx.remote.protocol.provider.pkgs&lt;/code&gt; を、関連付けられた値がプロバイダパッケージリストです。</target>
        </trans-unit>
        <trans-unit id="6ad40577697d2d3214b29500713b40249dcf0017" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;execute&lt;/code&gt; method is called at this point, the query sent to the DBMS will be:</source>
          <target state="translated">If the &lt;code&gt;execute&lt;/code&gt; method is called at this point, the query sent to the DBMS will be:</target>
        </trans-unit>
        <trans-unit id="d7e356babec0dbd66ed893c5d593e3b80f2c4c69" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;execute&lt;/code&gt; method is successful, it will set the appropriate private &lt;code&gt;JdbcRowSet&lt;/code&gt; fields with the following:</source>
          <target state="translated">If the &lt;code&gt;execute&lt;/code&gt; method is successful, it will set the appropriate private &lt;code&gt;JdbcRowSet&lt;/code&gt; fields with the following:</target>
        </trans-unit>
        <trans-unit id="f6b8bda61da14baa6de0517de831488bd2ee3ae0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;flag&lt;/code&gt; is false, end-of-line characters are treated as white space and serve only to separate tokens.</source>
          <target state="translated">&lt;code&gt;flag&lt;/code&gt; がfalseの場合、行末文字は空白として扱われ、トークンを区切るためだけに機能します。</target>
        </trans-unit>
        <trans-unit id="7c1442b96066ac814d95028e3d47c625abac13dd" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;handleError&lt;/code&gt; method returns &lt;code&gt;false&lt;/code&gt;, the DOM implementation should stop the current processing when possible. If the method returns &lt;code&gt;true&lt;/code&gt;, the processing may continue depending on &lt;code&gt;DOMError.severity&lt;/code&gt;.</source>
          <target state="translated">If the &lt;code&gt;handleError&lt;/code&gt; method returns &lt;code&gt;false&lt;/code&gt; , the DOM implementation should stop the current processing when possible. If the method returns &lt;code&gt;true&lt;/code&gt; , the processing may continue depending on &lt;code&gt;DOMError.severity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e167f1b0b7b6f2ec44852a0a73f6c3eeb0559e5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;hsbvals&lt;/code&gt; argument is &lt;code&gt;null&lt;/code&gt;, then a new array is allocated to return the result. Otherwise, the method returns the array &lt;code&gt;hsbvals&lt;/code&gt;, with the values put into that array.</source>
          <target state="translated">If the &lt;code&gt;hsbvals&lt;/code&gt; argument is &lt;code&gt;null&lt;/code&gt; , then a new array is allocated to return the result. Otherwise, the method returns the array &lt;code&gt;hsbvals&lt;/code&gt; , with the values put into that array.</target>
        </trans-unit>
        <trans-unit id="57070b75c38e47f9bec4e11be8d75f04d3e68264" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;info&lt;/code&gt; array is not empty, then it is cloned by the constructor as if by &lt;code&gt;info.clone()&lt;/code&gt;, and each call to &lt;a href=&quot;notificationbroadcaster#getNotificationInfo()&quot;&gt;&lt;code&gt;NotificationBroadcaster.getNotificationInfo()&lt;/code&gt;&lt;/a&gt; returns a new clone.</source>
          <target state="translated">If the &lt;code&gt;info&lt;/code&gt; array is not empty, then it is cloned by the constructor as if by &lt;code&gt;info.clone()&lt;/code&gt; , and each call to &lt;a href=&quot;notificationbroadcaster#getNotificationInfo()&quot;&gt; &lt;code&gt;NotificationBroadcaster.getNotificationInfo()&lt;/code&gt; &lt;/a&gt; returns a new clone.</target>
        </trans-unit>
        <trans-unit id="f96a39d4789943d7d6902746fb2340490af74ceb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;info&lt;/code&gt; array is not empty, then it is cloned by the constructor as if by &lt;code&gt;info.clone()&lt;/code&gt;, and each call to &lt;a href=&quot;notificationbroadcastersupport#getNotificationInfo--&quot;&gt;&lt;code&gt;getNotificationInfo()&lt;/code&gt;&lt;/a&gt; returns a new clone.</source>
          <target state="translated">場合 &lt;code&gt;info&lt;/code&gt; 配列が空でないかのように、それは、コンストラクタによりクローニングされた &lt;code&gt;info.clone()&lt;/code&gt; 、およびへの各呼び出し&lt;a href=&quot;notificationbroadcastersupport#getNotificationInfo--&quot;&gt; &lt;code&gt;getNotificationInfo()&lt;/code&gt; &lt;/a&gt;新しいクローンを返します。</target>
        </trans-unit>
        <trans-unit id="fc7fb96d1c52310781ca0701cabfa84235cc6cad" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;initialize&lt;/code&gt; parameter is &lt;code&gt;true&lt;/code&gt;, then &lt;code&gt;C&lt;/code&gt; is initialized by the Java Virtual Machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb68d70f873d065dccf85e83072633accafa5b8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;iterator&lt;/code&gt; handle is non-&lt;code&gt;null&lt;/code&gt;, it must have the return type &lt;code&gt;java.util.Iterator&lt;/code&gt; or a subtype thereof. The iterator it produces when the loop is executed will be assumed to yield values which can be converted to type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">If the &lt;code&gt;iterator&lt;/code&gt; handle is non- &lt;code&gt;null&lt;/code&gt; , it must have the return type &lt;code&gt;java.util.Iterator&lt;/code&gt; or a subtype thereof. The iterator it produces when the loop is executed will be assumed to yield values which can be converted to type &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b2eafd26f57a8ac8bfe07dee9777924ccc1ddeef" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;java.naming.corba.orb&lt;/code&gt; attribute is specified and does not point to an &lt;a href=&quot;/openjdk~8_web/org/omg/corba/orb&quot;&gt;&lt;code&gt;ORB&lt;/code&gt;&lt;/a&gt;, then an &lt;code&gt;&lt;a href=&quot;../../../../java/lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; will be thrown.</source>
          <target state="translated">場合 &lt;code&gt;java.naming.corba.orb&lt;/code&gt; の属性が指定されているとを指していない&lt;a href=&quot;/openjdk~8_web/org/omg/corba/orb&quot;&gt; &lt;code&gt;ORB&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;&lt;a href=&quot;../../../../java/lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="f447975377ba6d22540be764d0328fb281a024f7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;java.naming.provider.url&lt;/code&gt; property of the supplied environment consists of a URL (or a list of URLs) using the ldap protocol the resulting &lt;a href=&quot;../ldap/ldapcontext&quot;&gt;&lt;code&gt;LdapContext&lt;/code&gt;&lt;/a&gt; will use an LDAP server resolved by the configured &lt;a href=&quot;../ldap/spi/ldapdnsprovider&quot;&gt;&lt;code&gt;LdapDnsProviders&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4278296c23500bf6c0cea864ef00fd56ed5236d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; key is not present in the &lt;code&gt;environment&lt;/code&gt; parameter, the calling thread's context class loader is used.</source>
          <target state="translated">&lt;code&gt;jmx.remote.protocol.provider.class.loader&lt;/code&gt; キーが &lt;code&gt;environment&lt;/code&gt; パラメーターに存在しない場合、呼び出しスレッドのコンテキストクラスローダーが使用されます。</target>
        </trans-unit>
        <trans-unit id="3056297b7728c6033d8b58edc893075abdeaf0f3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;listenerMethodName&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;&lt;em&gt;all&lt;/em&gt; methods in the interface trigger the &lt;code&gt;action&lt;/code&gt; to be executed on the &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;listenerMethodName&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、インタフェースの&lt;em&gt;すべての&lt;/em&gt;メソッドが &lt;code&gt;target&lt;/code&gt; で実行される &lt;code&gt;action&lt;/code&gt; をトリガーします。</target>
        </trans-unit>
        <trans-unit id="c26cc70217e4df47d29c0c2d3d16af4b3ed49f81" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;loader&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, and a security manager is present, and the caller's class loader is not null, then this method calls the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with a &lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt; permission to ensure it's ok to access the bootstrap class loader.</source>
          <target state="translated">場合 &lt;code&gt;loader&lt;/code&gt; あり &lt;code&gt;null&lt;/code&gt; 、及びセキュリティマネージャが存在し、呼び出し側のクラスローダがnullでない場合、このメソッドはセキュリティマネージャの呼び出す &lt;code&gt;checkPermission&lt;/code&gt; とメソッドを &lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt; 、それはブートストラップクラスローダにアクセスするためによいかどうかを確認するための許可。</target>
        </trans-unit>
        <trans-unit id="883de64909ad64380525bc73b0b1943d2957d4ad" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;login&lt;/code&gt; method returns without throwing an exception, then the overall authentication succeeded. The caller can then retrieve the newly authenticated Subject by invoking the &lt;code&gt;getSubject&lt;/code&gt; method. Principals and Credentials associated with the Subject may be retrieved by invoking the Subject's respective &lt;code&gt;getPrincipals&lt;/code&gt;, &lt;code&gt;getPublicCredentials&lt;/code&gt;, and &lt;code&gt;getPrivateCredentials&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;login&lt;/code&gt; メソッドが例外をスローせずに戻る場合、認証全体が成功しています。呼び出し元は、 &lt;code&gt;getSubject&lt;/code&gt; メソッドを呼び出すことにより、新しく認証されたサブジェクトを取得できます。サブジェクトに関連付けられたプリンシパルとクレデンシャルは、サブジェクトのそれぞれの &lt;code&gt;getPrincipals&lt;/code&gt; 、 &lt;code&gt;getPublicCredentials&lt;/code&gt; 、および &lt;code&gt;getPrivateCredentials&lt;/code&gt; メソッドを呼び出すことによって取得できます。</target>
        </trans-unit>
        <trans-unit id="60cd069f53c1777bbf4cf31f1344fe37a4dd9ac1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;mimeType&lt;/code&gt; is &quot;application/x-java-serialized-object; class=&amp;lt;representation class&amp;gt;&quot;, the result is the same as calling &lt;code&gt;new DataFlavor(Class.forName(&amp;lt;representation class&amp;gt;)&lt;/code&gt;.</source>
          <target state="translated">If the &lt;code&gt;mimeType&lt;/code&gt; is &quot;application/x-java-serialized-object; class=&amp;lt;representation class&amp;gt;&quot;, the result is the same as calling &lt;code&gt;new DataFlavor(Class.forName(&amp;lt;representation class&amp;gt;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b49049ac47e926595641db8085788c19725bedae" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;minimumCapacity&lt;/code&gt; argument is nonpositive, this method takes no action and simply returns. Note that subsequent operations on this object can reduce the actual capacity below that requested here.</source>
          <target state="translated">&lt;code&gt;minimumCapacity&lt;/code&gt; 引数が正でない場合、このメソッドはアクションを実行せずに単に戻ります。このオブジェクトに対する後続の操作により、実際の容量がここで要求された容量を下回ることがあることに注意してください。</target>
        </trans-unit>
        <trans-unit id="848f1dae842a9e3e26ccb5fe35a5a76ed09b5792" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;modes&lt;/code&gt; parameter is of length zero, then the existence of the file is checked.</source>
          <target state="translated">場合 &lt;code&gt;modes&lt;/code&gt; パラメータは、長さがゼロである、そのファイルの存在が確認されています。</target>
        </trans-unit>
        <trans-unit id="26efd0bf17769d06237d7690d4aec1e552ef72d2" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;modifiers&lt;/code&gt; passed to the constructor are invalid, this method returns them unchanged.</source>
          <target state="translated">If the &lt;code&gt;modifiers&lt;/code&gt; passed to the constructor are invalid, this method returns them unchanged.</target>
        </trans-unit>
        <trans-unit id="68e361de8335b69d5e82c2e65544790404d5fa01" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;mouseX&lt;/code&gt; and &lt;code&gt;mouseY&lt;/code&gt; are in the expand/collapse region of the &lt;code&gt;row&lt;/code&gt;, this will toggle the row.</source>
          <target state="translated">If the &lt;code&gt;mouseX&lt;/code&gt; and &lt;code&gt;mouseY&lt;/code&gt; are in the expand/collapse region of the &lt;code&gt;row&lt;/code&gt; , this will toggle the row.</target>
        </trans-unit>
        <trans-unit id="d2a314f2aa28a80e456c2b1019bb7151fb7190ec" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;name&lt;/code&gt; begins with a &lt;code&gt;'/'&lt;/code&gt; (&lt;code&gt;'\u002f'&lt;/code&gt;), then the absolute name of the resource is the portion of the &lt;code&gt;name&lt;/code&gt; following the &lt;code&gt;'/'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; が &lt;code&gt;'/'&lt;/code&gt; 始まる場合（ &lt;code&gt;'\u002f'&lt;/code&gt; ）、リソースの絶対名は、 &lt;code&gt;'/'&lt;/code&gt; 続く &lt;code&gt;name&lt;/code&gt; の部分です。</target>
        </trans-unit>
        <trans-unit id="64bdc0e92c398401f342c415851da39654a29de8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;name&lt;/code&gt; is &quot;&lt;code&gt;&amp;lt;init&amp;gt;&lt;/code&gt;&quot; or &quot;&lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt;&quot; a &lt;code&gt;NoSuchMethodException&lt;/code&gt; is raised. Otherwise, the method to be reflected is determined by the algorithm that follows. Let C be the class or interface represented by this object:</source>
          <target state="translated">場合は &lt;code&gt;name&lt;/code&gt; ある「 &lt;code&gt;&amp;lt;init&amp;gt;&lt;/code&gt; 」または「 &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt; 」 &lt;code&gt;NoSuchMethodException&lt;/code&gt; 発生します。それ以外の場合、反映されるメソッドは次のアルゴリズムによって決定されます。Cを、このオブジェクトが表すクラスまたはインターフェースとします。</target>
        </trans-unit>
        <trans-unit id="cf8f40175e230701ae0b215435cd687b9dbe0a2f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;name&lt;/code&gt; parameter represents something other than a logical font, i.e. is interpreted as a physical font face or family, and this cannot be mapped by the implementation to a physical font or a compatible alternative, then the font system will map the Font instance to &quot;Dialog&quot;, such that for example, the family as reported by &lt;a href=&quot;#getFamily()&quot;&gt;&lt;code&gt;getFamily&lt;/code&gt;&lt;/a&gt; will be &quot;Dialog&quot;.</source>
          <target state="translated">If the &lt;code&gt;name&lt;/code&gt; parameter represents something other than a logical font, i.e. is interpreted as a physical font face or family, and this cannot be mapped by the implementation to a physical font or a compatible alternative, then the font system will map the Font instance to &quot;Dialog&quot;, such that for example, the family as reported by &lt;a href=&quot;#getFamily()&quot;&gt; &lt;code&gt;getFamily&lt;/code&gt; &lt;/a&gt; will be &quot;Dialog&quot;.</target>
        </trans-unit>
        <trans-unit id="83d37bcba2e6c3af77d7d4ae04d7689d9a46d013" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;newAttr&lt;/code&gt; attribute replaces an existing attribute with the same local name and namespace URI, the replaced &lt;code&gt;Attr&lt;/code&gt; node is returned, otherwise &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;newAttr&lt;/code&gt; 属性が同じローカル名と名前空間URIを持つ既存の属性を置き換える場合、置き換えられた &lt;code&gt;Attr&lt;/code&gt; ノードが返され &lt;code&gt;null&lt;/code&gt; 。それ以外の場合はnullが返されます。</target>
        </trans-unit>
        <trans-unit id="5c99c4ecff1480f789773edec7e413ca2eabcdc6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;newAttr&lt;/code&gt; attribute replaces an existing attribute, the replaced &lt;code&gt;Attr&lt;/code&gt; node is returned, otherwise &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;newAttr&lt;/code&gt; 属性が既存の属性を置き換える場合、置き換えられた &lt;code&gt;Attr&lt;/code&gt; ノードが返され &lt;code&gt;null&lt;/code&gt; 。それ以外の場合はnullが返されます。</target>
        </trans-unit>
        <trans-unit id="e562c3377bc531b17a3856d97697e38d3cf5595e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;newLength&lt;/code&gt; argument is greater than or equal to the current length, sufficient null characters (&lt;code&gt;'\u0000'&lt;/code&gt;) are appended so that length becomes the &lt;code&gt;newLength&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;newLength&lt;/code&gt; 引数が現在の長さ以上の場合、長さが &lt;code&gt;newLength&lt;/code&gt; 引数になるように、十分なnull文字（ &lt;code&gt;'\u0000'&lt;/code&gt; ）が追加されます。</target>
        </trans-unit>
        <trans-unit id="31c964b999377de0a92c3ddd622adf97746585c7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;notifier.notifyAll()&lt;/code&gt; happens before the waiting thread enters the &lt;code&gt;notifier.wait()&lt;/code&gt; method, the &lt;code&gt;while&lt;/code&gt; loop ensures that the waiting thread will not enter the &lt;code&gt;notifier.wait()&lt;/code&gt; method. Otherwise, there is no guarantee that the waiting thread will ever be woken from the wait.</source>
          <target state="translated">If the &lt;code&gt;notifier.notifyAll()&lt;/code&gt; happens before the waiting thread enters the &lt;code&gt;notifier.wait()&lt;/code&gt; method, the &lt;code&gt;while&lt;/code&gt; loop ensures that the waiting thread will not enter the &lt;code&gt;notifier.wait()&lt;/code&gt; method. Otherwise, there is no guarantee that the waiting thread will ever be woken from the wait.</target>
        </trans-unit>
        <trans-unit id="cd7d35bb1b07a6fa45d7d92b3c84889d6cce40ac" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;options&lt;/code&gt; parameter contains the &lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt;&lt;code&gt;FOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option then the stream keeps track of directories visited so that cycles can be detected. A cycle arises when there is an entry in a directory that is an ancestor of the directory. Cycle detection is done by recording the &lt;a href=&quot;attribute/basicfileattributes#fileKey()&quot;&gt;&lt;code&gt;file-key&lt;/code&gt;&lt;/a&gt; of directories, or if file keys are not available, by invoking the &lt;a href=&quot;#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt;&lt;code&gt;isSameFile&lt;/code&gt;&lt;/a&gt; method to test if a directory is the same file as an ancestor. When a cycle is detected it is treated as an I/O error with an instance of &lt;a href=&quot;filesystemloopexception&quot;&gt;&lt;code&gt;FileSystemLoopException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If the &lt;code&gt;options&lt;/code&gt; parameter contains the &lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt; &lt;code&gt;FOLLOW_LINKS&lt;/code&gt; &lt;/a&gt; option then the stream keeps track of directories visited so that cycles can be detected. A cycle arises when there is an entry in a directory that is an ancestor of the directory. Cycle detection is done by recording the &lt;a href=&quot;attribute/basicfileattributes#fileKey()&quot;&gt; &lt;code&gt;file-key&lt;/code&gt; &lt;/a&gt; of directories, or if file keys are not available, by invoking the &lt;a href=&quot;#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt; &lt;code&gt;isSameFile&lt;/code&gt; &lt;/a&gt; method to test if a directory is the same file as an ancestor. When a cycle is detected it is treated as an I/O error with an instance of &lt;a href=&quot;filesystemloopexception&quot;&gt; &lt;code&gt;FileSystemLoopException&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="301c55c1d2d5648b427ee3a645ab8146cd1a941a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;options&lt;/code&gt; parameter contains the &lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt;&lt;code&gt;FOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option then the stream keeps track of directories visited so that cycles can be detected. A cycle arises when there is an entry in a directory that is an ancestor of the directory. Cycle detection is done by recording the &lt;a href=&quot;attribute/basicfileattributes#fileKey--&quot;&gt;&lt;code&gt;file-key&lt;/code&gt;&lt;/a&gt; of directories, or if file keys are not available, by invoking the &lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt;&lt;code&gt;isSameFile&lt;/code&gt;&lt;/a&gt; method to test if a directory is the same file as an ancestor. When a cycle is detected it is treated as an I/O error with an instance of &lt;a href=&quot;filesystemloopexception&quot;&gt;&lt;code&gt;FileSystemLoopException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;code&gt;options&lt;/code&gt; パラメータが含まれている&lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt; &lt;code&gt;FOLLOW_LINKS&lt;/code&gt; の&lt;/a&gt;オプションを、ストリームは、ディレクトリを追跡サイクルを検出できるようにすることを訪問しました。ディレクトリの先祖であるディレクトリにエントリがある場合、サイクルが発生します。サイクルの検出は、ディレクトリの&lt;a href=&quot;attribute/basicfileattributes#fileKey--&quot;&gt; &lt;code&gt;file-key&lt;/code&gt; &lt;/a&gt;を記録するか、ファイルキーが使用できない場合は&lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt; &lt;code&gt;isSameFile&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、ディレクトリが祖先と同じファイルかどうかをテストすることによって行われます。サイクルが検出されると、&lt;a href=&quot;filesystemloopexception&quot;&gt; &lt;code&gt;FileSystemLoopException&lt;/code&gt; の&lt;/a&gt;インスタンスでI / Oエラーとして扱われます。</target>
        </trans-unit>
        <trans-unit id="c55674bb2b5b73e671fc2ec40dcb555e23d9e8d4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;options&lt;/code&gt; parameter contains the &lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt;&lt;code&gt;FOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option then this method keeps track of directories visited so that cycles can be detected. A cycle arises when there is an entry in a directory that is an ancestor of the directory. Cycle detection is done by recording the &lt;a href=&quot;attribute/basicfileattributes#fileKey()&quot;&gt;&lt;code&gt;file-key&lt;/code&gt;&lt;/a&gt; of directories, or if file keys are not available, by invoking the &lt;a href=&quot;#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt;&lt;code&gt;isSameFile&lt;/code&gt;&lt;/a&gt; method to test if a directory is the same file as an ancestor. When a cycle is detected it is treated as an I/O error, and the &lt;a href=&quot;filevisitor#visitFileFailed(T,java.io.IOException)&quot;&gt;&lt;code&gt;visitFileFailed&lt;/code&gt;&lt;/a&gt; method is invoked with an instance of &lt;a href=&quot;filesystemloopexception&quot;&gt;&lt;code&gt;FileSystemLoopException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If the &lt;code&gt;options&lt;/code&gt; parameter contains the &lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt; &lt;code&gt;FOLLOW_LINKS&lt;/code&gt; &lt;/a&gt; option then this method keeps track of directories visited so that cycles can be detected. A cycle arises when there is an entry in a directory that is an ancestor of the directory. Cycle detection is done by recording the &lt;a href=&quot;attribute/basicfileattributes#fileKey()&quot;&gt; &lt;code&gt;file-key&lt;/code&gt; &lt;/a&gt; of directories, or if file keys are not available, by invoking the &lt;a href=&quot;#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt; &lt;code&gt;isSameFile&lt;/code&gt; &lt;/a&gt; method to test if a directory is the same file as an ancestor. When a cycle is detected it is treated as an I/O error, and the &lt;a href=&quot;filevisitor#visitFileFailed(T,java.io.IOException)&quot;&gt; &lt;code&gt;visitFileFailed&lt;/code&gt; &lt;/a&gt; method is invoked with an instance of &lt;a href=&quot;filesystemloopexception&quot;&gt; &lt;code&gt;FileSystemLoopException&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="ecea4dec8dcb1fadb716a28cf7ec70ca81e1d565" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;options&lt;/code&gt; parameter contains the &lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt;&lt;code&gt;FOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option then this method keeps track of directories visited so that cycles can be detected. A cycle arises when there is an entry in a directory that is an ancestor of the directory. Cycle detection is done by recording the &lt;a href=&quot;attribute/basicfileattributes#fileKey--&quot;&gt;&lt;code&gt;file-key&lt;/code&gt;&lt;/a&gt; of directories, or if file keys are not available, by invoking the &lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt;&lt;code&gt;isSameFile&lt;/code&gt;&lt;/a&gt; method to test if a directory is the same file as an ancestor. When a cycle is detected it is treated as an I/O error, and the &lt;a href=&quot;filevisitor#visitFileFailed-T-java.io.IOException-&quot;&gt;&lt;code&gt;visitFileFailed&lt;/code&gt;&lt;/a&gt; method is invoked with an instance of &lt;a href=&quot;filesystemloopexception&quot;&gt;&lt;code&gt;FileSystemLoopException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は &lt;code&gt;options&lt;/code&gt; パラメータが含まれている&lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt; &lt;code&gt;FOLLOW_LINKS&lt;/code&gt; の&lt;/a&gt;オプションを、この方法は、サイクルを検出することができるので、訪れたディレクトリを追跡します。ディレクトリの先祖であるディレクトリにエントリがある場合、サイクルが発生します。サイクルの検出は、ディレクトリの&lt;a href=&quot;attribute/basicfileattributes#fileKey--&quot;&gt; &lt;code&gt;file-key&lt;/code&gt; &lt;/a&gt;を記録するか、ファイルキーが使用できない場合は&lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt; &lt;code&gt;isSameFile&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、ディレクトリが祖先と同じファイルかどうかをテストすることによって行われます。サイクルが検出されると、I / Oエラーとして扱われ、&lt;a href=&quot;filevisitor#visitFileFailed-T-java.io.IOException-&quot;&gt; &lt;code&gt;visitFileFailed&lt;/code&gt; &lt;/a&gt;メソッドが&lt;a href=&quot;filesystemloopexception&quot;&gt; &lt;code&gt;FileSystemLoopException&lt;/code&gt; の&lt;/a&gt;インスタンスで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="31072125bfcecae8a94f901f25b6fafec9dc2ff7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;other&lt;/code&gt; parameter is an &lt;a href=&quot;#isAbsolute()&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; path then this method trivially returns &lt;code&gt;other&lt;/code&gt;. If &lt;code&gt;other&lt;/code&gt; is an</source>
          <target state="translated">If the &lt;code&gt;other&lt;/code&gt; parameter is an &lt;a href=&quot;#isAbsolute()&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt; path then this method trivially returns &lt;code&gt;other&lt;/code&gt; . If &lt;code&gt;other&lt;/code&gt; is an</target>
        </trans-unit>
        <trans-unit id="88ff2d156a33a9f0f1f1ee553f98ff8909648b12" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;other&lt;/code&gt; parameter is an &lt;a href=&quot;path#isAbsolute--&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; path then this method trivially returns &lt;code&gt;other&lt;/code&gt;. If &lt;code&gt;other&lt;/code&gt; is an</source>
          <target state="translated">場合 &lt;code&gt;other&lt;/code&gt; パラメータは&lt;a href=&quot;path#isAbsolute--&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt;パスが、この方法は、自明に戻り &lt;code&gt;other&lt;/code&gt; 。場合は &lt;code&gt;other&lt;/code&gt; あります</target>
        </trans-unit>
        <trans-unit id="9865b3d772f73983f404112e79623aa8e389cc36" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;output&lt;/code&gt; buffer is too small to hold the result, a &lt;code&gt;ShortBufferException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; バッファーが小さすぎて結果を保持できない場合、 &lt;code&gt;ShortBufferException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="4c153c7b1ed1d9892cc1783d56a0214ceb0e6260" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;output&lt;/code&gt; buffer is too small to hold the result, a &lt;code&gt;ShortBufferException&lt;/code&gt; is thrown. In this case, repeat this call with a larger output buffer. Use &lt;a href=&quot;#engineGetOutputSize(int)&quot;&gt;&lt;code&gt;engineGetOutputSize&lt;/code&gt;&lt;/a&gt; to determine how big the output buffer should be.</source>
          <target state="translated">If the &lt;code&gt;output&lt;/code&gt; buffer is too small to hold the result, a &lt;code&gt;ShortBufferException&lt;/code&gt; is thrown. In this case, repeat this call with a larger output buffer. Use &lt;a href=&quot;#engineGetOutputSize(int)&quot;&gt; &lt;code&gt;engineGetOutputSize&lt;/code&gt; &lt;/a&gt; to determine how big the output buffer should be.</target>
        </trans-unit>
        <trans-unit id="e5001b62a3fa0f461f2cf7ef6760eeea626b5baf" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;output&lt;/code&gt; buffer is too small to hold the result, a &lt;code&gt;ShortBufferException&lt;/code&gt; is thrown. In this case, repeat this call with a larger output buffer. Use &lt;a href=&quot;#getOutputSize(int)&quot;&gt;&lt;code&gt;getOutputSize&lt;/code&gt;&lt;/a&gt; to determine how big the output buffer should be.</source>
          <target state="translated">If the &lt;code&gt;output&lt;/code&gt; buffer is too small to hold the result, a &lt;code&gt;ShortBufferException&lt;/code&gt; is thrown. In this case, repeat this call with a larger output buffer. Use &lt;a href=&quot;#getOutputSize(int)&quot;&gt; &lt;code&gt;getOutputSize&lt;/code&gt; &lt;/a&gt; to determine how big the output buffer should be.</target>
        </trans-unit>
        <trans-unit id="3573d5215011c7d840ccb006ba46e8ea91465ab0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;output&lt;/code&gt; buffer is too small to hold the result, a &lt;code&gt;ShortBufferException&lt;/code&gt; is thrown. In this case, repeat this call with a larger output buffer. Use &lt;a href=&quot;cipher#getOutputSize-int-&quot;&gt;&lt;code&gt;getOutputSize&lt;/code&gt;&lt;/a&gt; to determine how big the output buffer should be.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; バッファーが小さすぎて結果を保持できない場合、 &lt;code&gt;ShortBufferException&lt;/code&gt; がスローされます。この場合、より大きな出力バッファーでこの呼び出しを繰り返します。&lt;a href=&quot;cipher#getOutputSize-int-&quot;&gt; &lt;code&gt;getOutputSize&lt;/code&gt; &lt;/a&gt;を使用して、出力バッファーの大きさを決定します。</target>
        </trans-unit>
        <trans-unit id="d4e86a833a3d986a22969c431219896e2f0d39b7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;output&lt;/code&gt; buffer is too small to hold the result, a &lt;code&gt;ShortBufferException&lt;/code&gt; is thrown. In this case, repeat this call with a larger output buffer. Use &lt;a href=&quot;exemptionmechanism#getOutputSize-int-&quot;&gt;&lt;code&gt;getOutputSize&lt;/code&gt;&lt;/a&gt; to determine how big the output buffer should be.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; バッファーが小さすぎて結果を保持できない場合、 &lt;code&gt;ShortBufferException&lt;/code&gt; がスローされます。この場合、より大きな出力バッファーでこの呼び出しを繰り返します。&lt;a href=&quot;exemptionmechanism#getOutputSize-int-&quot;&gt; &lt;code&gt;getOutputSize&lt;/code&gt; &lt;/a&gt;を使用して、出力バッファーの大きさを決定します。</target>
        </trans-unit>
        <trans-unit id="04b14a126287c47f1542560e798db984f2eaa1bd" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;output&lt;/code&gt; buffer is too small to hold the result, a &lt;code&gt;ShortBufferException&lt;/code&gt; is thrown. In this case, repeat this call with a larger output buffer. Use &lt;a href=&quot;exemptionmechanismspi#engineGetOutputSize-int-&quot;&gt;&lt;code&gt;engineGetOutputSize&lt;/code&gt;&lt;/a&gt; to determine how big the output buffer should be.</source>
          <target state="translated">&lt;code&gt;output&lt;/code&gt; バッファーが小さすぎて結果を保持できない場合、 &lt;code&gt;ShortBufferException&lt;/code&gt; がスローされます。この場合、より大きな出力バッファーでこの呼び出しを繰り返します。&lt;a href=&quot;exemptionmechanismspi#engineGetOutputSize-int-&quot;&gt; &lt;code&gt;engineGetOutputSize&lt;/code&gt; &lt;/a&gt;を使用して、出力バッファーの大きさを決定します。</target>
        </trans-unit>
        <trans-unit id="89fab518710d4b47a17308246643c8e2a1ae9311" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;preferredSize&lt;/code&gt; has been set to a non-&lt;code&gt;null&lt;/code&gt; value just returns it.</source>
          <target state="translated">If the &lt;code&gt;preferredSize&lt;/code&gt; has been set to a non- &lt;code&gt;null&lt;/code&gt; value just returns it.</target>
        </trans-unit>
        <trans-unit id="e3f72f3125072f59960bf1220d641055ff086775" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;preferredSize&lt;/code&gt; has been set to a non-&lt;code&gt;null&lt;/code&gt; value just returns it. If the UI delegate's &lt;code&gt;getPreferredSize&lt;/code&gt; method returns a non &lt;code&gt;null&lt;/code&gt; value then return that; otherwise defer to the component's layout manager.</source>
          <target state="translated">If the &lt;code&gt;preferredSize&lt;/code&gt; has been set to a non- &lt;code&gt;null&lt;/code&gt; value just returns it. If the UI delegate's &lt;code&gt;getPreferredSize&lt;/code&gt; method returns a non &lt;code&gt;null&lt;/code&gt; value then return that; otherwise defer to the component's layout manager.</target>
        </trans-unit>
        <trans-unit id="e09b11d717ca9d2b9db6e423c314021366d5f96d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;pri&lt;/code&gt; argument is less than &lt;a href=&quot;thread#MIN_PRIORITY&quot;&gt;&lt;code&gt;Thread.MIN_PRIORITY&lt;/code&gt;&lt;/a&gt; or greater than &lt;a href=&quot;thread#MAX_PRIORITY&quot;&gt;&lt;code&gt;Thread.MAX_PRIORITY&lt;/code&gt;&lt;/a&gt;, the maximum priority of the group remains unchanged.</source>
          <target state="translated">場合 &lt;code&gt;pri&lt;/code&gt; 引数が未満である&lt;a href=&quot;thread#MIN_PRIORITY&quot;&gt; &lt;code&gt;Thread.MIN_PRIORITY&lt;/code&gt; &lt;/a&gt;以上より&lt;a href=&quot;thread#MAX_PRIORITY&quot;&gt; &lt;code&gt;Thread.MAX_PRIORITY&lt;/code&gt; &lt;/a&gt;、グループの最高優先順位は変わりません。</target>
        </trans-unit>
        <trans-unit id="c2d320fca5e0359eb42dfb70629d91de0ba8bdc2" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;prototypeCellValue&lt;/code&gt; property is &lt;code&gt;non-null&lt;/code&gt;, setting the cell renderer also causes the &lt;code&gt;fixedCellWidth&lt;/code&gt; and &lt;code&gt;fixedCellHeight&lt;/code&gt; properties to be re-calculated. Only one &lt;code&gt;PropertyChangeEvent&lt;/code&gt; is generated however - for the &lt;code&gt;cellRenderer&lt;/code&gt; property.</source>
          <target state="translated">If the &lt;code&gt;prototypeCellValue&lt;/code&gt; property is &lt;code&gt;non-null&lt;/code&gt; , setting the cell renderer also causes the &lt;code&gt;fixedCellWidth&lt;/code&gt; and &lt;code&gt;fixedCellHeight&lt;/code&gt; properties to be re-calculated. Only one &lt;code&gt;PropertyChangeEvent&lt;/code&gt; is generated however - for the &lt;code&gt;cellRenderer&lt;/code&gt; property.</target>
        </trans-unit>
        <trans-unit id="7ab6fa23ab907d0e5b9b458534eaceb7cc5333a4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;realEditor&lt;/code&gt; returns true to this message, &lt;code&gt;prepareForEditing&lt;/code&gt; is messaged and true is returned.</source>
          <target state="translated">If the &lt;code&gt;realEditor&lt;/code&gt; returns true to this message, &lt;code&gt;prepareForEditing&lt;/code&gt; is messaged and true is returned.</target>
        </trans-unit>
        <trans-unit id="7083b5d57e80daca82c9ea7e4f69ee995d29855a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;realEditor&lt;/code&gt; will allow editing to stop, the &lt;code&gt;realEditor&lt;/code&gt; is removed and true is returned, otherwise false is returned.</source>
          <target state="translated">If the &lt;code&gt;realEditor&lt;/code&gt; will allow editing to stop, the &lt;code&gt;realEditor&lt;/code&gt; is removed and true is returned, otherwise false is returned.</target>
        </trans-unit>
        <trans-unit id="72da6eb0f51543265c08bfdc0d2bc08c5c28b9d9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;reload&lt;/code&gt; flag is &lt;code&gt;true&lt;/code&gt;, it indicates that this method is being called because the previously loaded resource bundle has expired.</source>
          <target state="translated">&lt;code&gt;reload&lt;/code&gt; フラグが &lt;code&gt;true&lt;/code&gt; の場合、以前にロードされたリソースバンドルの有効期限が切れているため、このメソッドが呼び出されていることを示しています。</target>
        </trans-unit>
        <trans-unit id="f1c25c2d5a4c3be0ad0ceae100cbbd46dd49166c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;resizingColumn&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;, it is one of the columns in the table that has changed size rather than the table itself. In this case the auto-resize modes govern the way the extra (or deficit) space is distributed amongst the available columns.</source>
          <target state="translated">If the &lt;code&gt;resizingColumn&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt; , it is one of the columns in the table that has changed size rather than the table itself. In this case the auto-resize modes govern the way the extra (or deficit) space is distributed amongst the available columns.</target>
        </trans-unit>
        <trans-unit id="9cf1a2b060b2436670293c7813d34eef4b639e76" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;returnDelims&lt;/code&gt; flag is &lt;code&gt;true&lt;/code&gt;, then the delimiter characters are also returned as tokens. Each delimiter is returned as a string of length one. If the flag is &lt;code&gt;false&lt;/code&gt;, the delimiter characters are skipped and only serve as separators between tokens.</source>
          <target state="translated">場合 &lt;code&gt;returnDelims&lt;/code&gt; のフラグが &lt;code&gt;true&lt;/code&gt; は、区切り文字もトークンとして返されます。各区切り文字は、長さが1の文字列として返されます。フラグが &lt;code&gt;false&lt;/code&gt; の場合、区切り文字はスキップされ、トークン間の区切り文字としてのみ機能します。</target>
        </trans-unit>
        <trans-unit id="13d413d3ee252e112f59337a3ad9bdce1bc727e1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;rootVisible&lt;/code&gt; setting specifies that the root node is to be displayed, then that is the only node at the topmost level. If the root node is not displayed, then all of its children are at the topmost level of the tree. Handles are always displayed for nodes other than the topmost.</source>
          <target state="translated">If the &lt;code&gt;rootVisible&lt;/code&gt; setting specifies that the root node is to be displayed, then that is the only node at the topmost level. If the root node is not displayed, then all of its children are at the topmost level of the tree. Handles are always displayed for nodes other than the topmost.</target>
        </trans-unit>
        <trans-unit id="814c644fd80ff6c6cfb5225d71687f0ea854f3a6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;serviceURL&lt;/code&gt; looks like:</source>
          <target state="translated">&lt;code&gt;serviceURL&lt;/code&gt; が次のようになっている場合：</target>
        </trans-unit>
        <trans-unit id="135f589d26f864ce90f30a25047418b479d5f710" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;serviceURL&lt;/code&gt; you specify has an empty URL path (after the optional host and port), or if you do not specify a &lt;code&gt;serviceURL&lt;/code&gt;, then the connector server will fabricate a new &lt;code&gt;JMXServiceURL&lt;/code&gt; that clients can use to connect:</source>
          <target state="translated">もし &lt;code&gt;serviceURL&lt;/code&gt; の指定した（オプションのホストとポートの後に）空のURLパスを持っている、または指定しない場合 &lt;code&gt;serviceURL&lt;/code&gt; 、その後、コネクタサーバーは新しい製作します &lt;code&gt;JMXServiceURL&lt;/code&gt; クライアントが接続するために使用することができます：</target>
        </trans-unit>
        <trans-unit id="7de93d07441877a38ae86e0b1d48750f6d309642" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;setSize&lt;/code&gt; or &lt;code&gt;setBounds&lt;/code&gt; methods are called afterwards with a width or height less than that was specified by the &lt;code&gt;setMinimumSize&lt;/code&gt; method the window is automatically enlarged to meet the &lt;code&gt;minimumSize&lt;/code&gt; value. The &lt;code&gt;minimumSize&lt;/code&gt; value also affects the behaviour of the &lt;code&gt;pack&lt;/code&gt; method.</source>
          <target state="translated">If the &lt;code&gt;setSize&lt;/code&gt; or &lt;code&gt;setBounds&lt;/code&gt; methods are called afterwards with a width or height less than that was specified by the &lt;code&gt;setMinimumSize&lt;/code&gt; method the window is automatically enlarged to meet the &lt;code&gt;minimumSize&lt;/code&gt; value. The &lt;code&gt;minimumSize&lt;/code&gt; value also affects the behaviour of the &lt;code&gt;pack&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="a4c7fe60b96360a2fce6906e7dfb1015497d385d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;sharedSecret&lt;/code&gt; buffer is too small to hold the result, a &lt;code&gt;ShortBufferException&lt;/code&gt; is thrown. In this case, this call should be repeated with a larger output buffer.</source>
          <target state="translated">&lt;code&gt;sharedSecret&lt;/code&gt; バッファーが小さすぎて結果を保持できない場合、 &lt;code&gt;ShortBufferException&lt;/code&gt; がスローされます。この場合、より大きな出力バッファーを使用してこの呼び出しを繰り返す必要があります。</target>
        </trans-unit>
        <trans-unit id="a59bde6bd9cfdf4f9c0e2000a8690929361fab50" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;socket&lt;/code&gt; parameter is an instance of &lt;a href=&quot;sslsocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt;, and the algorithm constraints of the &lt;code&gt;SSLParameters&lt;/code&gt; is non-null, for every certificate in the certification path, fields such as subject public key, the signature algorithm, key usage, extended key usage, etc. need to conform to the algorithm constraints in place on this socket.</source>
          <target state="translated">場合 &lt;code&gt;socket&lt;/code&gt; パラメータは、インスタンスで&lt;a href=&quot;sslsocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt;、及びアルゴリズム上の制約 &lt;code&gt;SSLParameters&lt;/code&gt; は、認証パス内のすべての証明書を、非ヌルである、等サブジェクト公開鍵、署名アルゴリズム、キーの使用、拡張鍵使用、などの分野このソケットに配置されているアルゴリズム制約に準拠する必要があります。</target>
        </trans-unit>
        <trans-unit id="e9eeaa551ce6db761bfe71fcd9d95ed24d11d58e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;socket&lt;/code&gt; parameter is an instance of &lt;a href=&quot;sslsocket&quot;&gt;&lt;code&gt;SSLSocket&lt;/code&gt;&lt;/a&gt;, and the endpoint identification algorithm of the &lt;code&gt;SSLParameters&lt;/code&gt; is non-empty, to prevent man-in-the-middle attacks, the address that the &lt;code&gt;socket&lt;/code&gt; connected to should be checked against the peer's identity presented in the end-entity X509 certificate, as specified in the endpoint identification algorithm.</source>
          <target state="translated">場合 &lt;code&gt;socket&lt;/code&gt; パラメータがのインスタンスで&lt;a href=&quot;sslsocket&quot;&gt; &lt;code&gt;SSLSocket&lt;/code&gt; &lt;/a&gt;、とのエンドポイント識別アルゴリズム &lt;code&gt;SSLParameters&lt;/code&gt; は、 man-in-the-middle攻撃を防ぐために、非空で、そのアドレス &lt;code&gt;socket&lt;/code&gt; に接続された中で提示ピアの識別情報と照合する必要がありますエンドポイント識別アルゴリズムで指定されているエンドエンティティX509証明書。</target>
        </trans-unit>
        <trans-unit id="a8ad5fb90dd67b864239c52c78d91a33b02bcd3e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;src&lt;/code&gt; and &lt;code&gt;dest&lt;/code&gt; arguments refer to the same array object, then the copying is performed as if the components at positions &lt;code&gt;srcPos&lt;/code&gt; through &lt;code&gt;srcPos+length-1&lt;/code&gt; were first copied to a temporary array with &lt;code&gt;length&lt;/code&gt; components and then the contents of the temporary array were copied into positions &lt;code&gt;destPos&lt;/code&gt; through &lt;code&gt;destPos+length-1&lt;/code&gt; of the destination array.</source>
          <target state="translated">場合 &lt;code&gt;src&lt;/code&gt; および &lt;code&gt;dest&lt;/code&gt; 引数が同じ配列オブジェクトを参照し、次にコピーが位置にコンポーネントかのように実行される &lt;code&gt;srcPos&lt;/code&gt; 貫通 &lt;code&gt;srcPos+length-1&lt;/code&gt; 最初と一時配列にコピーされた &lt;code&gt;length&lt;/code&gt; 成分と、一時配列の内容でした宛先配列の位置 &lt;code&gt;destPos&lt;/code&gt; から &lt;code&gt;destPos+length-1&lt;/code&gt; にコピーされます。</target>
        </trans-unit>
        <trans-unit id="1326d1ae8f7029fe206d3181337e183fd5b2f733" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;targetClass&lt;/code&gt; is in the same module as the lookup class, the lookup class is &lt;code&gt;LC&lt;/code&gt; in module &lt;code&gt;M1&lt;/code&gt; and the previous lookup class is in module &lt;code&gt;M0&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; if not present, &lt;code&gt;targetClass&lt;/code&gt; is accessible if and only if one of the following is true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50552460698026ff8f20b17c1d4139edc635e7a4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;verify&lt;/code&gt; flag is on when opening a signed jar file, the content of the jar entry is verified against the signature embedded inside the manifest that is associated with its &lt;a href=&quot;jarentry#getRealName()&quot;&gt;&lt;code&gt;path name&lt;/code&gt;&lt;/a&gt;. For a multi-release jar file, the content of a versioned entry is verfieid against its own signature and &lt;a href=&quot;jarentry#getCodeSigners()&quot;&gt;&lt;code&gt;JarEntry.getCodeSigners()&lt;/code&gt;&lt;/a&gt; returns its own signers. Please note that the verification process does not include validating the signer's certificate. A caller should inspect the return value of &lt;a href=&quot;jarentry#getCodeSigners()&quot;&gt;&lt;code&gt;JarEntry.getCodeSigners()&lt;/code&gt;&lt;/a&gt; to further determine if the signature can be trusted.</source>
          <target state="translated">If the &lt;code&gt;verify&lt;/code&gt; flag is on when opening a signed jar file, the content of the jar entry is verified against the signature embedded inside the manifest that is associated with its &lt;a href=&quot;jarentry#getRealName()&quot;&gt; &lt;code&gt;path name&lt;/code&gt; &lt;/a&gt;. For a multi-release jar file, the content of a versioned entry is verfieid against its own signature and &lt;a href=&quot;jarentry#getCodeSigners()&quot;&gt; &lt;code&gt;JarEntry.getCodeSigners()&lt;/code&gt; &lt;/a&gt; returns its own signers. Please note that the verification process does not include validating the signer's certificate. A caller should inspect the return value of &lt;a href=&quot;jarentry#getCodeSigners()&quot;&gt; &lt;code&gt;JarEntry.getCodeSigners()&lt;/code&gt; &lt;/a&gt; to further determine if the signature can be trusted.</target>
        </trans-unit>
        <trans-unit id="384a467e1b3d5e62425baa603c92bb9909dbf0dc" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;quoted value&lt;/em&gt; contains at least one occurrence of the characters asterisk or question mark and they are not preceded by a backslash, then they are considered as wildcard characters and the object name is a &lt;em&gt;property value pattern&lt;/em&gt;. The asterisk matches any sequence of zero or more characters, while the question mark matches any single character.</source>
          <target state="translated">場合は&lt;em&gt;引用された値が&lt;/em&gt;文字のアスタリスクまたは疑問符の少なくとも一つの発生を含んでおり、それらはバックスラッシュが先行されていない、それらは、ワイルドカード文字とみなされ、オブジェクト名が&lt;em&gt;プロパティ値のパターン&lt;/em&gt;。アスタリスクは0個以上の文字のシーケンスに一致し、疑問符は任意の1文字に一致します。</target>
        </trans-unit>
        <trans-unit id="383d196bbc70848d6d2a83c15bee341a49633abd" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;unquoted value&lt;/em&gt; contains at least one occurrence of the wildcard characters asterisk or question mark, then the object name is a &lt;em&gt;property value pattern&lt;/em&gt;. The asterisk matches any sequence of zero or more characters, while the question mark matches any single character.</source>
          <target state="translated">&lt;em&gt;引用符で囲ま&lt;/em&gt;れていない&lt;em&gt;値&lt;/em&gt;にワイルドカード文字のアスタリスクまたは疑問符が少なくとも1つ含まれている場合、オブジェクト名は&lt;em&gt;プロパティ値のパターン&lt;/em&gt;です。アスタリスクは0個以上の文字のシーケンスに一致し、疑問符は任意の1文字に一致します。</target>
        </trans-unit>
        <trans-unit id="8fc60c08a8c50456909645784a1769d622137e78" translate="yes" xml:space="preserve">
          <source>If the ALLOW_UNASSIGNED flag is used, the domain name string to be converted can contain code points that are unassigned in Unicode 3.2, which is the Unicode version on which IDN conversion is based. If the flag is not used, the presence of such unassigned code points is treated as an error.</source>
          <target state="translated">ALLOW_UNASSIGNEDフラグが使用されている場合、変換されるドメイン名文字列は、IDN変換のベースとなるUnicodeバージョンであるUnicode 3.2で未割り当てのコードポイントを含むことができます。このフラグが使用されていない場合、そのような未割り当てのコードポイントの存在はエラーとして扱われます。</target>
        </trans-unit>
        <trans-unit id="700fc7ae106ff84c28cd4140489739bfdaaa88d6" translate="yes" xml:space="preserve">
          <source>If the API can not be used to configure a &lt;code&gt;JarFile&lt;/code&gt; (e.g. to override the configuration of a compiled application or library), two &lt;code&gt;System&lt;/code&gt; properties are available.</source>
          <target state="translated">If the API can not be used to configure a &lt;code&gt;JarFile&lt;/code&gt; (e.g. to override the configuration of a compiled application or library), two &lt;code&gt;System&lt;/code&gt; properties are available.</target>
        </trans-unit>
        <trans-unit id="2a7c711b7120183f899af59849df74982f595de0" translate="yes" xml:space="preserve">
          <source>If the BeanInfo class for a Java Bean has been previously Introspected based on the same arguments then the BeanInfo class is retrieved from the BeanInfo cache.</source>
          <target state="translated">Java BeanのBeanInfoクラスが同じ引数に基づいて以前にIntrospectedされている場合,BeanInfoクラスはBeanInfoキャッシュから取得されます。</target>
        </trans-unit>
        <trans-unit id="27052094f3a72a9f04c55988b8fcc4b55c99cb46" translate="yes" xml:space="preserve">
          <source>If the BeanInfo class for a Java Bean has been previously Introspected based on the same arguments, then the BeanInfo class is retrieved from the BeanInfo cache.</source>
          <target state="translated">Java BeanのBeanInfoクラスが同じ引数に基づいて以前にIntrospectedされている場合,BeanInfoクラスはBeanInfoキャッシュから取得されます。</target>
        </trans-unit>
        <trans-unit id="bf6802705f363000e83d105cf3b075ebc1fbcacb" translate="yes" xml:space="preserve">
          <source>If the BeanInfo class for a Java Bean has been previously Introspected then the BeanInfo class is retrieved from the BeanInfo cache.</source>
          <target state="translated">Java BeanのBeanInfoクラスが以前にIntrospectedされている場合、BeanInfoクラスはBeanInfoキャッシュから取得されます。</target>
        </trans-unit>
        <trans-unit id="74b13711d7aed1bc07acd1271fe358967b6f6726" translate="yes" xml:space="preserve">
          <source>If the BeanInfo class for a Java Bean has been previously introspected based on the same arguments then the BeanInfo class is retrieved from the BeanInfo cache.</source>
          <target state="translated">Java BeanのBeanInfoクラスが同じ引数に基づいて以前にイントロスペクトされている場合,BeanInfoクラスはBeanInfoキャッシュから取得されます。</target>
        </trans-unit>
        <trans-unit id="2d00c2a268a3801edc2c4c099c48a140b0fd8461" translate="yes" xml:space="preserve">
          <source>If the CleaningExample is used in a try-finally block then the &lt;code&gt;close&lt;/code&gt; method calls the cleaning action. If the &lt;code&gt;close&lt;/code&gt; method is not called, the cleaning action is called by the Cleaner when the CleaningExample instance has become phantom reachable.</source>
          <target state="translated">If the CleaningExample is used in a try-finally block then the &lt;code&gt;close&lt;/code&gt; method calls the cleaning action. If the &lt;code&gt;close&lt;/code&gt; method is not called, the cleaning action is called by the Cleaner when the CleaningExample instance has become phantom reachable.</target>
        </trans-unit>
        <trans-unit id="454995cc2e260c1d06757623f1b5ad1b2feb2e38" translate="yes" xml:space="preserve">
          <source>If the ColorModel is an IndexColorModel and the subclass has set the canFilterIndexColorModel flag to true, we substitute a filtered version of the color model here and wherever that original ColorModel object appears in the setPixels methods.</source>
          <target state="translated">ColorModelがIndexColorModelであり、サブクラスがcanFilterIndexColorModelフラグをtrueに設定している場合には、フィルタリングされたバージョンのカラーモデルをここで代用し、そのオリジナルのColorModelオブジェクトがsetPixelsメソッドで表示されている場所で代用します。</target>
        </trans-unit>
        <trans-unit id="a17b4fd0fc3c2da711064a3199127d020c189ac1" translate="yes" xml:space="preserve">
          <source>If the ColorModel is an IndexColorModel and the subclass has set the canFilterIndexColorModel flag to true, we substitute a filtered version of the color model here and wherever that original ColorModel object appears in the setPixels methods. If the ColorModel is not an IndexColorModel or is null, this method overrides the default ColorModel used by the ImageProducer and specifies the default RGB ColorModel instead.</source>
          <target state="translated">ColorModelがIndexColorModelであり、サブクラスがcanFilterIndexColorModelフラグをtrueに設定している場合、フィルタリングされたバージョンのカラーモデルをここで代用し、そのオリジナルのColorModelオブジェクトがsetPixelsメソッドで表示される場所ではどこでも代用します。ColorModelがIndexColorModelでないかnullである場合、このメソッドはImageProducerによって使用されるデフォルトのColorModelを上書きし、代わりにデフォルトのRGB ColorModelを指定します。</target>
        </trans-unit>
        <trans-unit id="ebb62725402f17c9f293bd13a4222501b92b1afb" translate="yes" xml:space="preserve">
          <source>If the ColorModel object is the same one that has already been converted, then simply passes the pixels through with the converted ColorModel, otherwise converts the buffer of integer pixels to the default RGB ColorModel and passes the converted buffer to the filterRGBPixels method to be converted one by one.</source>
          <target state="translated">ColorModelオブジェクトが既に変換されているものと同じものであれば、単純に変換されたColorModelでピクセルを通し、そうでなければ整数ピクセルのバッファをデフォルトのRGB ColorModelに変換し、変換されたバッファをfilterRGBPixelsメソッドに渡して一つずつ変換します。</target>
        </trans-unit>
        <trans-unit id="b15f89fd97901ee1fb24930f37e7ae4ef300f4ae" translate="yes" xml:space="preserve">
          <source>If the ColorModel object is the same one that has already been converted, then simply passes the pixels through with the converted ColorModel, otherwise converts the buffer of integer pixels to the default RGB ColorModel and passes the converted buffer to the filterRGBPixels method to be converted one by one. Converts a buffer of integer pixels to the default RGB ColorModel and passes the converted buffer to the filterRGBPixels method.</source>
          <target state="translated">ColorModelオブジェクトが既に変換されているものと同じものであれば、単純に変換されたColorModelと一緒にピクセルを通し、そうでなければ整数ピクセルのバッファをデフォルトのRGB ColorModelに変換し、変換されたバッファをfilterRGBPixelsメソッドに渡して一つずつ変換していきます。整数画素のバッファをデフォルトのRGB ColorModelに変換し、変換したバッファをfilterRGBPixelsメソッドに渡して一つずつ変換していきます。</target>
        </trans-unit>
        <trans-unit id="a2d4a4e4912ac5e9ff71960aac1cb3d98b8ae728" translate="yes" xml:space="preserve">
          <source>If the ColorModel object is the same one that has already been converted, then simply passes the pixels through with the converted ColorModel.</source>
          <target state="translated">ColorModel オブジェクトが既に変換されているものと同じものであれば、単純に変換された ColorModel でピクセルを通過させます。</target>
        </trans-unit>
        <trans-unit id="f5b2b08b4860ee3f58dfbccb3e9b728f83daa433" translate="yes" xml:space="preserve">
          <source>If the ColorModel object is the same one that has already been converted, then simply passes the pixels through with the converted ColorModel. Otherwise converts the buffer of byte pixels to the default RGB ColorModel and passes the converted buffer to the filterRGBPixels method to be converted one by one.</source>
          <target state="translated">ColorModel オブジェクトが既に変換されたものと同じものであれば、単純に変換された ColorModel と一緒にピクセルを通過させます。そうでなければ、バイトピクセルのバッファをデフォルトのRGB ColorModelに変換し、変換されたバッファをfilterRGBPixelsメソッドに渡して一つずつ変換します。</target>
        </trans-unit>
        <trans-unit id="2fc0046f2b504de87c74868c9d33ea3f35f1d246" translate="yes" xml:space="preserve">
          <source>If the DTD contains an explicit value, as in: &lt;code&gt;&amp;lt;!ATTLIST OPTION selected (selected) #IMPLIED&amp;gt;&lt;/code&gt; this value from the dtd (in this case selected) will be used.</source>
          <target state="translated">If the DTD contains an explicit value, as in: &lt;code&gt;&amp;lt;!ATTLIST OPTION selected (selected) #IMPLIED&amp;gt;&lt;/code&gt; this value from the dtd (in this case selected) will be used.</target>
        </trans-unit>
        <trans-unit id="2cb72115f8155cafe91c7be2e683edb1180ccb8f" translate="yes" xml:space="preserve">
          <source>If the DTD does not contain an definition for the element, or the definition does not have an explicit value then the value in the AttributeSet will be &lt;code&gt;HTML.NULL_ATTRIBUTE_VALUE&lt;/code&gt;.</source>
          <target state="translated">If the DTD does not contain an definition for the element, or the definition does not have an explicit value then the value in the AttributeSet will be &lt;code&gt;HTML.NULL_ATTRIBUTE_VALUE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8f28761ed1b352634ef38205fef3a87519af308" translate="yes" xml:space="preserve">
          <source>If the Document structure changed as result of the insertion, the details of what Elements were inserted and removed in response to the change will also be contained in the generated DocumentEvent. It is up to the implementation of a Document to decide how the structure should change in response to an insertion.</source>
          <target state="translated">挿入の結果としてドキュメント構造が変更された場合、変更に応じてどの要素が挿入され、削除されたかの詳細は、生成された DocumentEvent にも含まれます。挿入に応じて構造をどのように変更するかは、ドキュメントの実装に委ねられています。</target>
        </trans-unit>
        <trans-unit id="030cb95378711b1636920c7d0827ed5b14eb88fe" translate="yes" xml:space="preserve">
          <source>If the Document structure changed as result of the removal, the details of what Elements were inserted and removed in response to the change will also be contained in the generated DocumentEvent. It is up to the implementation of a Document to decide how the structure should change in response to a remove.</source>
          <target state="translated">削除の結果としてドキュメント構造が変更された場合、変更に応じてどの要素が挿入され、削除されたかの詳細は、生成された DocumentEvent にも含まれます。削除に応じて構造をどのように変更するかは、ドキュメントの実装に委ねられています。</target>
        </trans-unit>
        <trans-unit id="80ce8c0f1c1c211a90c8b7e66061c58778167da6" translate="yes" xml:space="preserve">
          <source>If the Document supports undo/redo, an UndoableEditEvent will also be generated.</source>
          <target state="translated">ドキュメントが undo/redo をサポートしている場合、UndoableEditEvent も生成されます。</target>
        </trans-unit>
        <trans-unit id="b0a6b6c38e66debb2926492a33b326ecee7be585" translate="yes" xml:space="preserve">
          <source>If the Drag and Drop System is unable to initiate a drag operation for some reason, the startDrag() method throws a &lt;code&gt;java.awt.dnd.InvalidDnDOperationException&lt;/code&gt; to signal such a condition. Typically this exception is thrown when the underlying platform system is either not in a state to initiate a drag, or the parameters specified are invalid.</source>
          <target state="translated">If the Drag and Drop System is unable to initiate a drag operation for some reason, the startDrag() method throws a &lt;code&gt;java.awt.dnd.InvalidDnDOperationException&lt;/code&gt; to signal such a condition. Typically this exception is thrown when the underlying platform system is either not in a state to initiate a drag, or the parameters specified are invalid.</target>
        </trans-unit>
        <trans-unit id="b36a3a37ab405a50245f8ca60d31eb1f24fccf64" translate="yes" xml:space="preserve">
          <source>If the Executor for this publisher throws a RejectedExecutionException (or any other RuntimeException or Error) when attempting to asynchronously notify subscribers, or the drop handler throws an exception when processing a dropped item, then this exception is rethrown.</source>
          <target state="translated">このパブリッシャーの実行者が、購読者に非同期に通知しようとしたときに RejectedExecutionException (またはその他の RuntimeException または Error)をスローした場合、またはドロップハンドラがドロップアイテムを処理するときに例外をスローした場合、この例外は再スローされます。</target>
        </trans-unit>
        <trans-unit id="b41cd91e530f36a9b0da3d978e7ece27002c8489" translate="yes" xml:space="preserve">
          <source>If the Executor for this publisher throws a RejectedExecutionException (or any other RuntimeException or Error) when attempting to asynchronously notify subscribers, then this exception is rethrown, in which case not all subscribers will have been issued this item.</source>
          <target state="translated">このパブリッシャーの実行者が、購読者に非同期に通知しようとしたときに RejectedExecutionException (またはその他の RuntimeException または Error)をスローした場合、この例外は再スローされます。</target>
        </trans-unit>
        <trans-unit id="0a887cc255dc4733cf1b5653b5998661c76f2b20" translate="yes" xml:space="preserve">
          <source>If the GSSManager implementation does not support an SPI with a pluggable provider architecture it should throw a GSSException with the status code GSSException.UNAVAILABLE to indicate that the operation is unavailable.</source>
          <target state="translated">GSSManager の実装がプラガブルプロバイダアーキテクチャを持つ SPI をサポートしていない場合は、操作ができないことを示すためにステータスコード GSSException.UNAVAILABLE を持つ GSSException をスローする必要があります。</target>
        </trans-unit>
        <trans-unit id="da20e7ea76a9a643faf6481a32f3400ecce492d3" translate="yes" xml:space="preserve">
          <source>If the IP address is a &lt;a href=&quot;inetaddress#isAnyLocalAddress()&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address, or is &lt;code&gt;null&lt;/code&gt;, the socket will be bound to the wildcard address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4939c5094269e4f9d10a41688acc1a518009fa" translate="yes" xml:space="preserve">
          <source>If the JAR file has a &lt;code&gt;Main-Class&lt;/code&gt; attribute in its main manifest, its value is a legal class name, and its package is in the set of packages derived for the module, then the value is the module &lt;a href=&quot;moduledescriptor#mainClass()&quot;&gt;main class&lt;/a&gt;.</source>
          <target state="translated">If the JAR file has a &lt;code&gt;Main-Class&lt;/code&gt; attribute in its main manifest, its value is a legal class name, and its package is in the set of packages derived for the module, then the value is the module &lt;a href=&quot;moduledescriptor#mainClass()&quot;&gt;main class&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c9ace20d58b64f9f5ea681de79599cbf699eebec" translate="yes" xml:space="preserve">
          <source>If the JAR file has the attribute &quot;&lt;code&gt;Automatic-Module-Name&lt;/code&gt;&quot; in its main manifest then its value is the &lt;a href=&quot;moduledescriptor#name()&quot;&gt;module name&lt;/a&gt;. The module name is otherwise derived from the name of the JAR file.</source>
          <target state="translated">If the JAR file has the attribute &quot; &lt;code&gt;Automatic-Module-Name&lt;/code&gt; &quot; in its main manifest then its value is the &lt;a href=&quot;moduledescriptor#name()&quot;&gt;module name&lt;/a&gt;. The module name is otherwise derived from the name of the JAR file.</target>
        </trans-unit>
        <trans-unit id="bce7057e5b6fdd5c5ebdea045f965918043cd418" translate="yes" xml:space="preserve">
          <source>If the JDBC type expected to be returned to this output parameter is specific to this particular database, &lt;code&gt;sqlType&lt;/code&gt; may be &lt;code&gt;JDBCType.OTHER&lt;/code&gt; or a &lt;code&gt;SQLType&lt;/code&gt; that is supported by the JDBC driver. The method &lt;a href=&quot;#getObject(int)&quot;&gt;&lt;code&gt;getObject(int)&lt;/code&gt;&lt;/a&gt; retrieves the value.</source>
          <target state="translated">If the JDBC type expected to be returned to this output parameter is specific to this particular database, &lt;code&gt;sqlType&lt;/code&gt; may be &lt;code&gt;JDBCType.OTHER&lt;/code&gt; or a &lt;code&gt;SQLType&lt;/code&gt; that is supported by the JDBC driver. The method &lt;a href=&quot;#getObject(int)&quot;&gt; &lt;code&gt;getObject(int)&lt;/code&gt; &lt;/a&gt; retrieves the value.</target>
        </trans-unit>
        <trans-unit id="eaed8c58c642d50f6930fd66554c7e5248239528" translate="yes" xml:space="preserve">
          <source>If the JDBC type expected to be returned to this output parameter is specific to this particular database, &lt;code&gt;sqlType&lt;/code&gt; should be &lt;code&gt;JDBCType.OTHER&lt;/code&gt; or a &lt;code&gt;SQLType&lt;/code&gt; that is supported by the JDBC driver.. The method &lt;a href=&quot;#getObject(int)&quot;&gt;&lt;code&gt;getObject(int)&lt;/code&gt;&lt;/a&gt; retrieves the value.</source>
          <target state="translated">If the JDBC type expected to be returned to this output parameter is specific to this particular database, &lt;code&gt;sqlType&lt;/code&gt; should be &lt;code&gt;JDBCType.OTHER&lt;/code&gt; or a &lt;code&gt;SQLType&lt;/code&gt; that is supported by the JDBC driver.. The method &lt;a href=&quot;#getObject(int)&quot;&gt; &lt;code&gt;getObject(int)&lt;/code&gt; &lt;/a&gt; retrieves the value.</target>
        </trans-unit>
        <trans-unit id="b6b43fc4ae5c3356c9a39c1f15c9fcd8a5ed346a" translate="yes" xml:space="preserve">
          <source>If the JDBC type expected to be returned to this output parameter is specific to this particular database, &lt;code&gt;sqlType&lt;/code&gt; should be &lt;code&gt;java.sql.Types.OTHER&lt;/code&gt;. The method &lt;a href=&quot;#getObject(int)&quot;&gt;&lt;code&gt;getObject(int)&lt;/code&gt;&lt;/a&gt; retrieves the value.</source>
          <target state="translated">If the JDBC type expected to be returned to this output parameter is specific to this particular database, &lt;code&gt;sqlType&lt;/code&gt; should be &lt;code&gt;java.sql.Types.OTHER&lt;/code&gt; . The method &lt;a href=&quot;#getObject(int)&quot;&gt; &lt;code&gt;getObject(int)&lt;/code&gt; &lt;/a&gt; retrieves the value.</target>
        </trans-unit>
        <trans-unit id="d8e121332002fc8657fe1d312a926bed5da0268b" translate="yes" xml:space="preserve">
          <source>If the Java implementation provides the command-line interface and you run your application by using the command line or a shortcut, use the Java application launcher option to show a splash screen. The Oracle reference implementation allows you to specify the splash screen image location with the &lt;code&gt;-splash:&lt;/code&gt; option.</source>
          <target state="translated">If the Java implementation provides the command-line interface and you run your application by using the command line or a shortcut, use the Java application launcher option to show a splash screen. The Oracle reference implementation allows you to specify the splash screen image location with the &lt;code&gt;-splash:&lt;/code&gt; option.</target>
        </trans-unit>
        <trans-unit id="540e105812b408574fe65500e02fda28804c6512" translate="yes" xml:space="preserve">
          <source>If the List allows multiple selections, then clicking on an item that is already selected deselects it. In the preceding example, only one item from the scrolling list can be selected at a time, since the second argument when creating the new scrolling list is &lt;code&gt;false&lt;/code&gt;. If the List does not allow multiple selections, selecting an item causes any other selected item to be deselected.</source>
          <target state="translated">If the List allows multiple selections, then clicking on an item that is already selected deselects it. In the preceding example, only one item from the scrolling list can be selected at a time, since the second argument when creating the new scrolling list is &lt;code&gt;false&lt;/code&gt; . If the List does not allow multiple selections, selecting an item causes any other selected item to be deselected.</target>
        </trans-unit>
        <trans-unit id="b9320150224d23795105d0b84d8ba0219f014f46" translate="yes" xml:space="preserve">
          <source>If the LoginContext's overall authentication failed (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules did not succeed), then the &lt;code&gt;abort&lt;/code&gt; method for each &lt;code&gt;LoginModule&lt;/code&gt; gets invoked. In this case, the &lt;code&gt;LoginModule&lt;/code&gt; removes/destroys any authentication state originally saved.</source>
          <target state="translated">LoginContextの全体的な認証が失敗した場合（関連するREQUIRED、REQUISITE、SUFFICIENT、およびOPTIONALのLoginModuleが成功しなかった場合）、各 &lt;code&gt;LoginModule&lt;/code&gt; の &lt;code&gt;abort&lt;/code&gt; メソッドが呼び出されます。この場合、 &lt;code&gt;LoginModule&lt;/code&gt; は最初に保存された認証状態を削除または破棄します。</target>
        </trans-unit>
        <trans-unit id="8b1ca264c954dc0a754372106598096735c9ddf1" translate="yes" xml:space="preserve">
          <source>If the MXBean is a notification emitter (i.e., it implements &lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt;), both the &lt;code&gt;mxbeanInterface&lt;/code&gt; and &lt;code&gt;NotificationEmitter&lt;/code&gt; will be implemented by this proxy.</source>
          <target state="translated">MXBeanの通知エミッタである場合（すなわち、それは実装&lt;a href=&quot;../../../javax/management/notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;）、両方 &lt;code&gt;mxbeanInterface&lt;/code&gt; と &lt;code&gt;NotificationEmitter&lt;/code&gt; 、このプロキシによって実施されます。</target>
        </trans-unit>
        <trans-unit id="474328420a397c96b5f80aa5f7aa2f2d53878174" translate="yes" xml:space="preserve">
          <source>If the ModelMBean is currently registered, this method throws a &lt;a href=&quot;../runtimeoperationsexception&quot;&gt;&lt;code&gt;RuntimeOperationsException&lt;/code&gt;&lt;/a&gt; wrapping an &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">If the ModelMBean is currently registered, this method throws a &lt;a href=&quot;../runtimeoperationsexception&quot;&gt; &lt;code&gt;RuntimeOperationsException&lt;/code&gt; &lt;/a&gt; wrapping an &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b43d6c84cc6fb1e54fa1b85884c057f4a6774967" translate="yes" xml:space="preserve">
          <source>If the ModelMBean is currently registered, this method throws a &lt;a href=&quot;../runtimeoperationsexception&quot;&gt;&lt;code&gt;RuntimeOperationsException&lt;/code&gt;&lt;/a&gt; wrapping an &lt;a href=&quot;../../../java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">ModelMBeanが現在登録されている場合、このメソッドは&lt;a href=&quot;../../../java/lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; を&lt;/a&gt;ラップする&lt;a href=&quot;../runtimeoperationsexception&quot;&gt; &lt;code&gt;RuntimeOperationsException&lt;/code&gt; &lt;/a&gt;をスローします</target>
        </trans-unit>
        <trans-unit id="0961519d04df02ef89d0ae88943ca50d0c3606b3" translate="yes" xml:space="preserve">
          <source>If the Namespace URI is &lt;code&gt;null&lt;/code&gt;, it is set to &lt;a href=&quot;../xmlconstants#NULL_NS_URI&quot;&gt;&lt;code&gt;XMLConstants.NULL_NS_URI&lt;/code&gt;&lt;/a&gt;. This value represents no explicitly defined Namespace as defined by the &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#ns-qualnames&quot;&gt;Namespaces in XML&lt;/a&gt; specification. This action preserves compatible behavior with QName 1.0. Explicitly providing the &lt;a href=&quot;../xmlconstants#NULL_NS_URI&quot;&gt;&lt;code&gt;XMLConstants.NULL_NS_URI&lt;/code&gt;&lt;/a&gt; value is the preferred coding style.</source>
          <target state="translated">If the Namespace URI is &lt;code&gt;null&lt;/code&gt; , it is set to &lt;a href=&quot;../xmlconstants#NULL_NS_URI&quot;&gt; &lt;code&gt;XMLConstants.NULL_NS_URI&lt;/code&gt; &lt;/a&gt;. This value represents no explicitly defined Namespace as defined by the &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#ns-qualnames&quot;&gt;Namespaces in XML&lt;/a&gt; specification. This action preserves compatible behavior with QName 1.0. Explicitly providing the &lt;a href=&quot;../xmlconstants#NULL_NS_URI&quot;&gt; &lt;code&gt;XMLConstants.NULL_NS_URI&lt;/code&gt; &lt;/a&gt; value is the preferred coding style.</target>
        </trans-unit>
        <trans-unit id="dabcc8898ed3cdd7dba813817a17b3c719cbc02b" translate="yes" xml:space="preserve">
          <source>If the Namespace URI is &lt;code&gt;null&lt;/code&gt;, it is set to &lt;a href=&quot;../xmlconstants#NULL_NS_URI&quot;&gt;&lt;code&gt;XMLConstants.NULL_NS_URI&lt;/code&gt;&lt;/a&gt;. This value represents no explicitly defined Namespace as defined by the &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/#ns-qualnames&quot;&gt;Namespaces in XML&lt;/a&gt; specification. This action preserves compatible behavior with QName 1.0. Explicitly providing the &lt;a href=&quot;../xmlconstants#NULL_NS_URI&quot;&gt;&lt;code&gt;XMLConstants.NULL_NS_URI&lt;/code&gt;&lt;/a&gt; value is the preferred coding style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5cc0b4b6523113fb60bbdd890e2ed587190e3eb" translate="yes" xml:space="preserve">
          <source>If the PropertyEditor doesn't honor paint requests (see isPaintable) this method should be a silent noop.</source>
          <target state="translated">PropertyEditor がペイント要求を受け付けない場合 (isPaintable を参照)、このメソッドはサイレント noop でなければなりません。</target>
        </trans-unit>
        <trans-unit id="edc7ecb68896dc99cf3bfe6d1c68065fc233cc04" translate="yes" xml:space="preserve">
          <source>If the ProtectionDomain was constructed to a &lt;a href=&quot;protectiondomain#ProtectionDomain-java.security.CodeSource-java.security.PermissionCollection-&quot;&gt;&lt;code&gt;statically bound&lt;/code&gt;&lt;/a&gt; PermissionCollection then the permission will only be checked against the PermissionCollection supplied at construction.</source>
          <target state="translated">ProtectionDomainが&lt;a href=&quot;protectiondomain#ProtectionDomain-java.security.CodeSource-java.security.PermissionCollection-&quot;&gt; &lt;code&gt;statically bound&lt;/code&gt; &lt;/a&gt;されたPermissionCollectionに対して構築された場合、権限は構築時に提供されたPermissionCollectionに対してのみチェックされます。</target>
        </trans-unit>
        <trans-unit id="a847aec68a3d5a379f34ca3fc370c158f7a9888a" translate="yes" xml:space="preserve">
          <source>If the Result is not to be written to a file, the system identifier is optional. The application may still want to provide one, however, for use in error messages and warnings, or to resolve relative output identifiers.</source>
          <target state="translated">結果がファイルに書き込まれない場合、システム識別子はオプションです。しかし、アプリケーションはエラーメッセージや警告で使用したり、相対出力識別子を解決したりするために、システム識別子を提供したいと思うかもしれません。</target>
        </trans-unit>
        <trans-unit id="d85ecd870d90f0c4db4acd7de59edc66dc5f937f" translate="yes" xml:space="preserve">
          <source>If the URL path part of the &lt;code&gt;JMXServiceURL&lt;/code&gt; was empty or a single slash (&lt;code&gt;/&lt;/code&gt;), then the RMI object will not be bound to a directory. Instead, a reference to it will be encoded in the URL path of the RMIConnectorServer address (returned by &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorservermbean#getAddress()&quot;&gt;&lt;code&gt;JMXConnectorServerMBean.getAddress()&lt;/code&gt;&lt;/a&gt;). The encodings for &lt;code&gt;rmi&lt;/code&gt; are described in the package documentation for &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;javax.management.remote.rmi&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If the URL path part of the &lt;code&gt;JMXServiceURL&lt;/code&gt; was empty or a single slash ( &lt;code&gt;/&lt;/code&gt; ), then the RMI object will not be bound to a directory. Instead, a reference to it will be encoded in the URL path of the RMIConnectorServer address (returned by &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorservermbean#getAddress()&quot;&gt; &lt;code&gt;JMXConnectorServerMBean.getAddress()&lt;/code&gt; &lt;/a&gt;). The encodings for &lt;code&gt;rmi&lt;/code&gt; are described in the package documentation for &lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;javax.management.remote.rmi&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1eb3e9bfa37e0fb36cbe25f740fc69395067b33e" translate="yes" xml:space="preserve">
          <source>If the URL path part of the &lt;code&gt;JMXServiceURL&lt;/code&gt; was empty or a single slash (&lt;code&gt;/&lt;/code&gt;), then the RMI object will not be bound to a directory. Instead, a reference to it will be encoded in the URL path of the RMIConnectorServer address (returned by &lt;a href=&quot;rmiconnectorserver#getAddress--&quot;&gt;&lt;code&gt;getAddress()&lt;/code&gt;&lt;/a&gt;). The encodings for &lt;code&gt;rmi&lt;/code&gt; and &lt;code&gt;iiop&lt;/code&gt; are described in the package documentation for &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;javax.management.remote.rmi&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;JMXServiceURL&lt;/code&gt; のURLパスの部分が空か単一のスラッシュ（ &lt;code&gt;/&lt;/code&gt; ）の場合、RMIオブジェクトはディレクトリにバインドされません。代わりに、それへの参照はRMIConnectorServerアドレスのURLパスにエンコードされます（getAddress &lt;a href=&quot;rmiconnectorserver#getAddress--&quot;&gt; &lt;code&gt;getAddress()&lt;/code&gt; &lt;/a&gt;によって返されます）。 &lt;code&gt;rmi&lt;/code&gt; および &lt;code&gt;iiop&lt;/code&gt; のエンコーディングは、&lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;javax.management.remote.rmi&lt;/code&gt; の&lt;/a&gt;パッケージドキュメントで説明されています。</target>
        </trans-unit>
        <trans-unit id="7c88147c00b169cc4a7d700bc22d47ae19dc49b7" translate="yes" xml:space="preserve">
          <source>If the URL specified is &lt;code&gt;null&lt;/code&gt; or is already in the list of URLs, or if this loader is closed, then invoking this method has no effect.</source>
          <target state="translated">指定されたURLが &lt;code&gt;null&lt;/code&gt; であるか、すでにURLのリストにある場合、またはこのローダーが閉じている場合、このメソッドを呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="2c0237f144da2fa8c67cb271e88ffe70a6e43f35" translate="yes" xml:space="preserve">
          <source>If the USE_STD3_ASCII_RULES flag is used, ASCII strings are checked against &lt;a href=&quot;http://www.ietf.org/rfc/rfc1122.txt&quot;&gt;RFC 1122&lt;/a&gt; and &lt;a href=&quot;http://www.ietf.org/rfc/rfc1123.txt&quot;&gt;RFC 1123&lt;/a&gt;. It is an error if they don't meet the requirements.</source>
          <target state="translated">USE_STD3_ASCII_RULESフラグが使用されている場合、ASCII文字列は&lt;a href=&quot;http://www.ietf.org/rfc/rfc1122.txt&quot;&gt;RFC 1122&lt;/a&gt;および&lt;a href=&quot;http://www.ietf.org/rfc/rfc1123.txt&quot;&gt;RFC 1123&lt;/a&gt;に対してチェックされます。要件を満たしていない場合はエラーになります。</target>
        </trans-unit>
        <trans-unit id="b6f15acd38bd7687f1a77e9bf3871ba04075f07a" translate="yes" xml:space="preserve">
          <source>If the USE_STD3_ASCII_RULES flag is used, ASCII strings are checked against &lt;a href=&quot;https://www.ietf.org/rfc/rfc1122.txt&quot;&gt;RFC 1122&lt;/a&gt; and &lt;a href=&quot;https://www.ietf.org/rfc/rfc1123.txt&quot;&gt;RFC 1123&lt;/a&gt;. It is an error if they don't meet the requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b1988df75b26444a795d6673a2d8719150a662" translate="yes" xml:space="preserve">
          <source>If the Unicode Standard changes block names, both the previous and current names will be accepted.</source>
          <target state="translated">Unicode 規格がブロック名を変更した場合は、前の名前と現在の名前の両方が受け入れられます。</target>
        </trans-unit>
        <trans-unit id="4474e2c1fcf43dbf037954df628912501189beb2" translate="yes" xml:space="preserve">
          <source>If the Vector fits in the specified array with room to spare (i.e., the array has more elements than the Vector), the element in the array immediately following the end of the Vector is set to null. (This is useful in determining the length of the Vector &lt;em&gt;only&lt;/em&gt; if the caller knows that the Vector does not contain any null elements.)</source>
          <target state="translated">指定された配列にベクターが収まる余裕がある場合（つまり、配列にベクターよりも多くの要素がある場合）、ベクターの末尾の直後の配列の要素はnullに設定されます。（これは、Vectorにnull要素が含まれていないことを呼び出し元が知っている場合に&lt;em&gt;のみ&lt;/em&gt;、Vectorの長さを決定するのに役立ちます。）</target>
        </trans-unit>
        <trans-unit id="ce465ff8cda6a5a08541bee73f2366bdc5b6d6b4" translate="yes" xml:space="preserve">
          <source>If the WebSocket's output is not already closed, the &lt;code&gt;CompletionStage&lt;/code&gt; returned by this method will be used as an indication that the WebSocket's output may be closed. The WebSocket will close its output at the earliest of completion of the returned &lt;code&gt;CompletionStage&lt;/code&gt; or invoking either of the &lt;code&gt;sendClose&lt;/code&gt; or &lt;code&gt;abort&lt;/code&gt; methods.</source>
          <target state="translated">If the WebSocket's output is not already closed, the &lt;code&gt;CompletionStage&lt;/code&gt; returned by this method will be used as an indication that the WebSocket's output may be closed. The WebSocket will close its output at the earliest of completion of the returned &lt;code&gt;CompletionStage&lt;/code&gt; or invoking either of the &lt;code&gt;sendClose&lt;/code&gt; or &lt;code&gt;abort&lt;/code&gt; methods.</target>
        </trans-unit>
        <trans-unit id="fa08a72545add7979284f586fe9352374af63dad" translate="yes" xml:space="preserve">
          <source>If the above rules do not produce a value, and if introspection, as if by calling &lt;a href=&quot;../../../../java.desktop/java/beans/introspector#getBeanInfo(java.lang.Class)&quot;&gt;&lt;code&gt;Introspector.getBeanInfo&lt;/code&gt;&lt;/a&gt;, for the class of</source>
          <target state="translated">If the above rules do not produce a value, and if introspection, as if by calling &lt;a href=&quot;../../../../java.desktop/java/beans/introspector#getBeanInfo(java.lang.Class)&quot;&gt; &lt;code&gt;Introspector.getBeanInfo&lt;/code&gt; &lt;/a&gt;, for the class of</target>
        </trans-unit>
        <trans-unit id="9f95877bd50006d6d00056ef2a51aa22bd21083c" translate="yes" xml:space="preserve">
          <source>If the above rules do not produce a value, and if introspection, as if by calling &lt;a href=&quot;../../../java/beans/introspector#getBeanInfo-java.lang.Class-&quot;&gt;&lt;code&gt;Introspector.getBeanInfo&lt;/code&gt;&lt;/a&gt;, for the class of</source>
          <target state="translated">上記のルールで値が生成されない場合、および&lt;a href=&quot;../../../java/beans/introspector#getBeanInfo-java.lang.Class-&quot;&gt; &lt;code&gt;Introspector.getBeanInfo&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じように、</target>
        </trans-unit>
        <trans-unit id="9b05835af2c154a7c76f77377aa6c52d404cdcb8" translate="yes" xml:space="preserve">
          <source>If the absolute value of the first argument equals 1 and the second argument is infinite, then the result is NaN.</source>
          <target state="translated">第1引数の絶対値が1に等しく、第2引数の絶対値が無限大であれば、結果はNaNとなる。</target>
        </trans-unit>
        <trans-unit id="fe0dcdb806d329477c57d32f9509598b1acef0b9" translate="yes" xml:space="preserve">
          <source>If the accelerator is hidden, the method returns &lt;code&gt;true&lt;/code&gt;, otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">If the accelerator is hidden, the method returns &lt;code&gt;true&lt;/code&gt; , otherwise, returns &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6775ecd73f74676bf13df91da30c3cc2254a84a5" translate="yes" xml:space="preserve">
          <source>If the action has been registered multiple times, all instances are unregistered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03f3411418a033b6bfa2f883c240355cb3f69a7" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt; then it is cast to &lt;code&gt;DoubleConsumer&lt;/code&gt; and passed to &lt;a href=&quot;#forEachRemaining(java.util.function.DoubleConsumer)&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;DoubleConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;#forEachRemaining(java.util.function.DoubleConsumer)&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If the action is an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt; then it is cast to &lt;code&gt;DoubleConsumer&lt;/code&gt; and passed to &lt;a href=&quot;#forEachRemaining(java.util.function.DoubleConsumer)&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt; , by boxing the argument of &lt;code&gt;DoubleConsumer&lt;/code&gt; , and then passed to &lt;a href=&quot;#forEachRemaining(java.util.function.DoubleConsumer)&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d6afccfd8739251584afc0914039b51c90ada53f" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt; then it is cast to &lt;code&gt;DoubleConsumer&lt;/code&gt; and passed to &lt;a href=&quot;primitiveiterator.ofdouble#forEachRemaining-java.util.function.DoubleConsumer-&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;DoubleConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;primitiveiterator.ofdouble#forEachRemaining-java.util.function.DoubleConsumer-&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アクションはのインスタンスである場合 &lt;code&gt;DoubleConsumer&lt;/code&gt; それはにキャストされ &lt;code&gt;DoubleConsumer&lt;/code&gt; とに渡された&lt;a href=&quot;primitiveiterator.ofdouble#forEachRemaining-java.util.function.DoubleConsumer-&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt;。そうでなければアクションはのインスタンスに適合さ &lt;code&gt;DoubleConsumer&lt;/code&gt; の引数ボクシングによって、 &lt;code&gt;DoubleConsumer&lt;/code&gt; を、その後に渡さ&lt;a href=&quot;primitiveiterator.ofdouble#forEachRemaining-java.util.function.DoubleConsumer-&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="66516904fde9701dc7f61bc426819fb4f146f708" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt; then it is cast to &lt;code&gt;DoubleConsumer&lt;/code&gt; and passed to &lt;a href=&quot;spliterator.ofdouble#forEachRemaining-java.util.function.DoubleConsumer-&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;DoubleConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;spliterator.ofdouble#forEachRemaining-java.util.function.DoubleConsumer-&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アクションはのインスタンスである場合 &lt;code&gt;DoubleConsumer&lt;/code&gt; それはにキャストされ &lt;code&gt;DoubleConsumer&lt;/code&gt; とに渡された&lt;a href=&quot;spliterator.ofdouble#forEachRemaining-java.util.function.DoubleConsumer-&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt;。そうでなければアクションはのインスタンスに適合さ &lt;code&gt;DoubleConsumer&lt;/code&gt; の引数ボクシングによって、 &lt;code&gt;DoubleConsumer&lt;/code&gt; を、その後に渡さ&lt;a href=&quot;spliterator.ofdouble#forEachRemaining-java.util.function.DoubleConsumer-&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6e52e55025286a627afde1b1d2b384ea2bee735b" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt; then it is cast to &lt;code&gt;DoubleConsumer&lt;/code&gt; and passed to &lt;a href=&quot;spliterator.ofdouble#tryAdvance-java.util.function.DoubleConsumer-&quot;&gt;&lt;code&gt;tryAdvance(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;DoubleConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;spliterator.ofdouble#tryAdvance-java.util.function.DoubleConsumer-&quot;&gt;&lt;code&gt;tryAdvance(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アクションはのインスタンスである場合 &lt;code&gt;DoubleConsumer&lt;/code&gt; それはにキャストされ &lt;code&gt;DoubleConsumer&lt;/code&gt; とに渡された&lt;a href=&quot;spliterator.ofdouble#tryAdvance-java.util.function.DoubleConsumer-&quot;&gt; &lt;code&gt;tryAdvance(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt;。それ以外の場合、アクションは &lt;code&gt;DoubleConsumer&lt;/code&gt; の引数をボックス化することで &lt;code&gt;DoubleConsumer&lt;/code&gt; のインスタンスに適合され、&lt;a href=&quot;spliterator.ofdouble#tryAdvance-java.util.function.DoubleConsumer-&quot;&gt; &lt;code&gt;tryAdvance(java.util.function.DoubleConsumer)&lt;/code&gt; に&lt;/a&gt;渡されます。</target>
        </trans-unit>
        <trans-unit id="f5601c43da232fcabd407827972e1da20bb1375e" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt; then it is cast to &lt;code&gt;DoubleConsumer&lt;/code&gt; and passed to &lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt;&lt;code&gt;Spliterator.OfPrimitive.forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;DoubleConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt;&lt;code&gt;Spliterator.OfPrimitive.forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If the action is an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt; then it is cast to &lt;code&gt;DoubleConsumer&lt;/code&gt; and passed to &lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt; &lt;code&gt;Spliterator.OfPrimitive.forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt; , by boxing the argument of &lt;code&gt;DoubleConsumer&lt;/code&gt; , and then passed to &lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt; &lt;code&gt;Spliterator.OfPrimitive.forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="69341c18d84e15fb20d184c341ea1d0d7b8cbcda" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt; then it is cast to &lt;code&gt;DoubleConsumer&lt;/code&gt; and passed to &lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt;&lt;code&gt;Spliterator.OfPrimitive.tryAdvance(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;DoubleConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt;&lt;code&gt;Spliterator.OfPrimitive.tryAdvance(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If the action is an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt; then it is cast to &lt;code&gt;DoubleConsumer&lt;/code&gt; and passed to &lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt; &lt;code&gt;Spliterator.OfPrimitive.tryAdvance(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;DoubleConsumer&lt;/code&gt; , by boxing the argument of &lt;code&gt;DoubleConsumer&lt;/code&gt; , and then passed to &lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt; &lt;code&gt;Spliterator.OfPrimitive.tryAdvance(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0773f07cee5964ddff6a0726a10424e6fde400aa" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;IntConsumer&lt;/code&gt; then it is cast to &lt;code&gt;IntConsumer&lt;/code&gt; and passed to &lt;a href=&quot;#forEachRemaining(java.util.function.IntConsumer)&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;IntConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;IntConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;#forEachRemaining(java.util.function.IntConsumer)&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If the action is an instance of &lt;code&gt;IntConsumer&lt;/code&gt; then it is cast to &lt;code&gt;IntConsumer&lt;/code&gt; and passed to &lt;a href=&quot;#forEachRemaining(java.util.function.IntConsumer)&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;IntConsumer&lt;/code&gt; , by boxing the argument of &lt;code&gt;IntConsumer&lt;/code&gt; , and then passed to &lt;a href=&quot;#forEachRemaining(java.util.function.IntConsumer)&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6eb467bff49959d09e05c7bab75146704c0dc28d" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;IntConsumer&lt;/code&gt; then it is cast to &lt;code&gt;IntConsumer&lt;/code&gt; and passed to &lt;a href=&quot;primitiveiterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;IntConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;IntConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;primitiveiterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アクションはのインスタンスである場合 &lt;code&gt;IntConsumer&lt;/code&gt; それはにキャストされ &lt;code&gt;IntConsumer&lt;/code&gt; とに渡された&lt;a href=&quot;primitiveiterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt;。そうでなければアクションはのインスタンスに適合さ &lt;code&gt;IntConsumer&lt;/code&gt; の引数ボクシングによって、 &lt;code&gt;IntConsumer&lt;/code&gt; を、その後に渡さ&lt;a href=&quot;primitiveiterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2cc7b37b752547334d50d87c5179ebe5f7826e35" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;IntConsumer&lt;/code&gt; then it is cast to &lt;code&gt;IntConsumer&lt;/code&gt; and passed to &lt;a href=&quot;spliterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;IntConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;IntConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;spliterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アクションはのインスタンスである場合 &lt;code&gt;IntConsumer&lt;/code&gt; それはにキャストされ &lt;code&gt;IntConsumer&lt;/code&gt; とに渡された&lt;a href=&quot;spliterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt;。そうでなければアクションはのインスタンスに適合さ &lt;code&gt;IntConsumer&lt;/code&gt; の引数ボクシングによって、 &lt;code&gt;IntConsumer&lt;/code&gt; を、その後に渡さ&lt;a href=&quot;spliterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4a7f713f21116ad3b228e0623aa03e2b62a6679" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;IntConsumer&lt;/code&gt; then it is cast to &lt;code&gt;IntConsumer&lt;/code&gt; and passed to &lt;a href=&quot;spliterator.ofint#tryAdvance-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;tryAdvance(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;IntConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;IntConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;spliterator.ofint#tryAdvance-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;tryAdvance(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アクションはのインスタンスである場合 &lt;code&gt;IntConsumer&lt;/code&gt; それはにキャストされ &lt;code&gt;IntConsumer&lt;/code&gt; とに渡された&lt;a href=&quot;spliterator.ofint#tryAdvance-java.util.function.IntConsumer-&quot;&gt; &lt;code&gt;tryAdvance(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt;。そうでなければアクションはのインスタンスに適合さ &lt;code&gt;IntConsumer&lt;/code&gt; の引数ボクシングによって、 &lt;code&gt;IntConsumer&lt;/code&gt; を、その後に渡さ&lt;a href=&quot;spliterator.ofint#tryAdvance-java.util.function.IntConsumer-&quot;&gt; &lt;code&gt;tryAdvance(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="91611fb9a517d38eefd5a99f44bd0d85a21d0920" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;IntConsumer&lt;/code&gt; then it is cast to &lt;code&gt;IntConsumer&lt;/code&gt; and passed to &lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt;&lt;code&gt;Spliterator.OfPrimitive.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;IntConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;IntConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt;&lt;code&gt;Spliterator.OfPrimitive.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If the action is an instance of &lt;code&gt;IntConsumer&lt;/code&gt; then it is cast to &lt;code&gt;IntConsumer&lt;/code&gt; and passed to &lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt; &lt;code&gt;Spliterator.OfPrimitive.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;IntConsumer&lt;/code&gt; , by boxing the argument of &lt;code&gt;IntConsumer&lt;/code&gt; , and then passed to &lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt; &lt;code&gt;Spliterator.OfPrimitive.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5728c1fd6c7474b8e5ee24332d657e8c59b795d7" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;IntConsumer&lt;/code&gt; then it is cast to &lt;code&gt;IntConsumer&lt;/code&gt; and passed to &lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt;&lt;code&gt;Spliterator.OfPrimitive.tryAdvance(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;IntConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;IntConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt;&lt;code&gt;Spliterator.OfPrimitive.tryAdvance(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If the action is an instance of &lt;code&gt;IntConsumer&lt;/code&gt; then it is cast to &lt;code&gt;IntConsumer&lt;/code&gt; and passed to &lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt; &lt;code&gt;Spliterator.OfPrimitive.tryAdvance(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;IntConsumer&lt;/code&gt; , by boxing the argument of &lt;code&gt;IntConsumer&lt;/code&gt; , and then passed to &lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt; &lt;code&gt;Spliterator.OfPrimitive.tryAdvance(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="06d370e1cbaab2bb12cd8d0300073053596d5bf6" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;LongConsumer&lt;/code&gt; then it is cast to &lt;code&gt;LongConsumer&lt;/code&gt; and passed to &lt;a href=&quot;#forEachRemaining(java.util.function.LongConsumer)&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;LongConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;LongConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;#forEachRemaining(java.util.function.LongConsumer)&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If the action is an instance of &lt;code&gt;LongConsumer&lt;/code&gt; then it is cast to &lt;code&gt;LongConsumer&lt;/code&gt; and passed to &lt;a href=&quot;#forEachRemaining(java.util.function.LongConsumer)&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt; &lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;LongConsumer&lt;/code&gt; , by boxing the argument of &lt;code&gt;LongConsumer&lt;/code&gt; , and then passed to &lt;a href=&quot;#forEachRemaining(java.util.function.LongConsumer)&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="290eeb3f1f54f16b09955c88d8cfd90d14b9557d" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;LongConsumer&lt;/code&gt; then it is cast to &lt;code&gt;LongConsumer&lt;/code&gt; and passed to &lt;a href=&quot;primitiveiterator.oflong#forEachRemaining-java.util.function.LongConsumer-&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;LongConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;LongConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;primitiveiterator.oflong#forEachRemaining-java.util.function.LongConsumer-&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アクションが &lt;code&gt;LongConsumer&lt;/code&gt; のインスタンスの場合、それは &lt;code&gt;LongConsumer&lt;/code&gt; にキャストされ、&lt;a href=&quot;primitiveiterator.oflong#forEachRemaining-java.util.function.LongConsumer-&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt; に&lt;/a&gt;渡されます。それ以外の場合、アクションは &lt;code&gt;LongConsumer&lt;/code&gt; の引数をボックス化することにより &lt;code&gt;LongConsumer&lt;/code&gt; のインスタンスに適合され、次に&lt;a href=&quot;primitiveiterator.oflong#forEachRemaining-java.util.function.LongConsumer-&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt; に&lt;/a&gt;渡されます。</target>
        </trans-unit>
        <trans-unit id="f0dcd5ef32e41f4bca014a916ec5e3e0e6b1fab7" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;LongConsumer&lt;/code&gt; then it is cast to &lt;code&gt;LongConsumer&lt;/code&gt; and passed to &lt;a href=&quot;spliterator.oflong#forEachRemaining-java.util.function.LongConsumer-&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;LongConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;LongConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;spliterator.oflong#forEachRemaining-java.util.function.LongConsumer-&quot;&gt;&lt;code&gt;forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アクションが &lt;code&gt;LongConsumer&lt;/code&gt; のインスタンスの場合、それは &lt;code&gt;LongConsumer&lt;/code&gt; にキャストされ、&lt;a href=&quot;spliterator.oflong#forEachRemaining-java.util.function.LongConsumer-&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt; に&lt;/a&gt;渡されます。それ以外の場合、アクションは &lt;code&gt;LongConsumer&lt;/code&gt; の引数をボックス化することにより &lt;code&gt;LongConsumer&lt;/code&gt; のインスタンスに適合され、次に&lt;a href=&quot;spliterator.oflong#forEachRemaining-java.util.function.LongConsumer-&quot;&gt; &lt;code&gt;forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt; に&lt;/a&gt;渡されます。</target>
        </trans-unit>
        <trans-unit id="00bbc10814534bf0219172f193911a9aeadd7e16" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;LongConsumer&lt;/code&gt; then it is cast to &lt;code&gt;LongConsumer&lt;/code&gt; and passed to &lt;a href=&quot;spliterator.oflong#tryAdvance-java.util.function.LongConsumer-&quot;&gt;&lt;code&gt;tryAdvance(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;LongConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;LongConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;spliterator.oflong#tryAdvance-java.util.function.LongConsumer-&quot;&gt;&lt;code&gt;tryAdvance(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アクションが &lt;code&gt;LongConsumer&lt;/code&gt; のインスタンスである場合、それは &lt;code&gt;LongConsumer&lt;/code&gt; にキャストされ、&lt;a href=&quot;spliterator.oflong#tryAdvance-java.util.function.LongConsumer-&quot;&gt; &lt;code&gt;tryAdvance(java.util.function.LongConsumer)&lt;/code&gt; に&lt;/a&gt;渡されます。そうでなければアクションはのインスタンスに適合さ &lt;code&gt;LongConsumer&lt;/code&gt; の引数ボクシングによって、 &lt;code&gt;LongConsumer&lt;/code&gt; を、その後に渡さ&lt;a href=&quot;spliterator.oflong#tryAdvance-java.util.function.LongConsumer-&quot;&gt; &lt;code&gt;tryAdvance(java.util.function.LongConsumer)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8e64dea02dd187ab7473bf716270a883a77afdc" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;LongConsumer&lt;/code&gt; then it is cast to &lt;code&gt;LongConsumer&lt;/code&gt; and passed to &lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt;&lt;code&gt;Spliterator.OfPrimitive.forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;LongConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;LongConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt;&lt;code&gt;Spliterator.OfPrimitive.forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アクションが &lt;code&gt;LongConsumer&lt;/code&gt; のインスタンスである場合、それは &lt;code&gt;LongConsumer&lt;/code&gt; にキャストされ、&lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt; &lt;code&gt;Spliterator.OfPrimitive.forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt; &lt;/a&gt;渡されます。そうでなければアクションはのインスタンスに適合さ &lt;code&gt;LongConsumer&lt;/code&gt; の引数ボクシングによって、 &lt;code&gt;LongConsumer&lt;/code&gt; を、その後に渡さ&lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt; &lt;code&gt;Spliterator.OfPrimitive.forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2cd031f75c6a92efb253dc0527bb3d0bd986894f" translate="yes" xml:space="preserve">
          <source>If the action is an instance of &lt;code&gt;LongConsumer&lt;/code&gt; then it is cast to &lt;code&gt;LongConsumer&lt;/code&gt; and passed to &lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt;&lt;code&gt;Spliterator.OfPrimitive.tryAdvance(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt;; otherwise the action is adapted to an instance of &lt;code&gt;LongConsumer&lt;/code&gt;, by boxing the argument of &lt;code&gt;LongConsumer&lt;/code&gt;, and then passed to &lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt;&lt;code&gt;Spliterator.OfPrimitive.tryAdvance(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">アクションが &lt;code&gt;LongConsumer&lt;/code&gt; のインスタンスである場合、それは &lt;code&gt;LongConsumer&lt;/code&gt; にキャストされ、&lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt; &lt;code&gt;Spliterator.OfPrimitive.tryAdvance(java.util.function.LongConsumer)&lt;/code&gt; &lt;/a&gt;渡されます。そうでなければアクションはのインスタンスに適合さ &lt;code&gt;LongConsumer&lt;/code&gt; の引数ボクシングによって、 &lt;code&gt;LongConsumer&lt;/code&gt; を、その後に渡さ&lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt; &lt;code&gt;Spliterator.OfPrimitive.tryAdvance(java.util.function.LongConsumer)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b5ff8c69ea26957c669b0830c3787c984d9d074" translate="yes" xml:space="preserve">
          <source>If the action performed in your &lt;code&gt;run&lt;/code&gt; method could throw a &quot;checked&quot; exception (those listed in the &lt;code&gt;throws&lt;/code&gt; clause of a method), then you need to use the &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; interface instead of the &lt;code&gt;PrivilegedAction&lt;/code&gt; interface:</source>
          <target state="translated">アクションがあなたの中で実行した場合 &lt;code&gt;run&lt;/code&gt; メソッドの例外を「確認」を投げることができ（に記載されているものを &lt;code&gt;throws&lt;/code&gt; 方法の句が）、あなたは使用する必要がある &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; 代わりのインタフェース &lt;code&gt;PrivilegedAction&lt;/code&gt; インターフェイスを：</target>
        </trans-unit>
        <trans-unit id="1c19e93235c53e902185c8c29dee0714c658ee6f" translate="yes" xml:space="preserve">
          <source>If the action was registered via &lt;code&gt;registerKeyboardAction&lt;/code&gt;, then the command string passed in (&lt;code&gt;null&lt;/code&gt; will be used if &lt;code&gt;null&lt;/code&gt; was passed in).</source>
          <target state="translated">アクションが経由で登録された場合は &lt;code&gt;registerKeyboardAction&lt;/code&gt; 、その後、コマンド文字列は、（渡された &lt;code&gt;null&lt;/code&gt; があれば使用されます &lt;code&gt;null&lt;/code&gt; が渡されました）。</target>
        </trans-unit>
        <trans-unit id="f8b6f3a11b20582c114df00bdb40a1e0e0cbd27f" translate="yes" xml:space="preserve">
          <source>If the action's &lt;code&gt;run&lt;/code&gt; method throws an</source>
          <target state="translated">アクションの &lt;code&gt;run&lt;/code&gt; メソッドが</target>
        </trans-unit>
        <trans-unit id="6baa6ffe1bf64066619e4375881dfdc0f383d936" translate="yes" xml:space="preserve">
          <source>If the action's &lt;code&gt;run&lt;/code&gt; method throws an (unchecked) exception, it will propagate through this method.</source>
          <target state="translated">アクションの &lt;code&gt;run&lt;/code&gt; メソッドが（チェックされていない）例外をスローした場合、このメソッドを介して伝播されます。</target>
        </trans-unit>
        <trans-unit id="81ae8e4005f2526ae09ac862718dd7fa76cfe92e" translate="yes" xml:space="preserve">
          <source>If the activation group for the object's group descriptor does not yet exist, the activator starts an &lt;code&gt;ActivationInstantiator&lt;/code&gt; executing (by spawning a child process, for example). When the activator receives the activation group's call back (via the &lt;code&gt;ActivationSystem&lt;/code&gt;'s &lt;code&gt;activeGroup&lt;/code&gt; method) specifying the activation group's reference, the activator can then invoke that activation instantiator's &lt;code&gt;newInstance&lt;/code&gt; method to forward each pending activation request to the activation group and return the result (a marshalled remote object reference, a stub) to the caller.</source>
          <target state="translated">オブジェクトのグループ記述子のアクティベーショングループがまだ存在しない場合、アクティベーターは &lt;code&gt;ActivationInstantiator&lt;/code&gt; の実行を開始します（たとえば、子プロセスを生成することによって）。アクティベーターが &lt;code&gt;ActivationSystem&lt;/code&gt; ティベーショングループの参照を指定するアクティベーショングループのコールバックを（ActivationSystemの &lt;code&gt;activeGroup&lt;/code&gt; メソッドを介して）受信すると、アクティベーターはそのアクティベーションインスタン &lt;code&gt;newInstance&lt;/code&gt; のnewInstanceメソッドを呼び出して、保留中の各アクティベーション要求をアクティベーショングループに転送し、結果を返すことができます（呼び出し元へのマーシャリングされたリモートオブジェクト参照、スタブ）。</target>
        </trans-unit>
        <trans-unit id="6c727c33b10329c8a55fc35a2c969597ddaf2670" translate="yes" xml:space="preserve">
          <source>If the address is &lt;code&gt;null&lt;/code&gt; an unbound socket will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102269f064fade95ae910ba7bdf983251013c399" translate="yes" xml:space="preserve">
          <source>If the address is &lt;code&gt;null&lt;/code&gt;, then the system will pick up an ephemeral port and a valid local address to bind the socket.</source>
          <target state="translated">アドレスが &lt;code&gt;null&lt;/code&gt; の場合、システムは一時ポートと有効なローカルアドレスを取得してソケットをバインドします。</target>
        </trans-unit>
        <trans-unit id="deed334073f68c6d00e85a8098ad4ebaa1319066" translate="yes" xml:space="preserve">
          <source>If the agent cannot be started (for example, because the agent class cannot be loaded, or because the agent class does not have an appropriate &lt;code&gt;premain&lt;/code&gt; method), the JVM will abort. If a &lt;code&gt;premain&lt;/code&gt; method throws an uncaught exception, the JVM will abort.</source>
          <target state="translated">エージェントを開始できない場合（たとえば、エージェントクラスをロードできない場合、またはエージェントクラスに適切な &lt;code&gt;premain&lt;/code&gt; メソッドがない場合）、JVMは異常終了します。場合 &lt;code&gt;premain&lt;/code&gt; メソッドがキャッチされない例外をスローし、JVMが中止されます。</target>
        </trans-unit>
        <trans-unit id="3bdc279bcf6c5ee605cac5004f25fb4a4dd94ae8" translate="yes" xml:space="preserve">
          <source>If the agent class does not implement this method then the JVM will attempt to invoke:</source>
          <target state="translated">エージェントクラスがこのメソッドを実装していない場合、JVMは呼び出しを試みます。</target>
        </trans-unit>
        <trans-unit id="e4c80757c9e2ecb6b75dc0a37636c30cb9490032" translate="yes" xml:space="preserve">
          <source>If the algorithm is the</source>
          <target state="translated">アルゴリズムが</target>
        </trans-unit>
        <trans-unit id="80ea754a698145f128fdf52efea523a98452381c" translate="yes" xml:space="preserve">
          <source>If the alpha component of the requested background color is less than &lt;code&gt;1.0f&lt;/code&gt;, and any of the above conditions are not met, the background color of this window will not change, the alpha component of the given background color will not affect the mode of operation for this window, and either the &lt;code&gt;UnsupportedOperationException&lt;/code&gt; or &lt;code&gt;
 IllegalComponentStateException&lt;/code&gt; will be thrown.</source>
          <target state="translated">要求された背景色のアルファ成分が &lt;code&gt;1.0f&lt;/code&gt; 未満であり、上記の条件のいずれかが満たされない場合、このウィンドウの背景色は変更されず、指定された背景色のアルファ成分は操作モードに影響しません。このウィンドウでは、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; または &lt;code&gt; IllegalComponentStateException&lt;/code&gt; のいずれかがスローされます。</target>
        </trans-unit>
        <trans-unit id="0e8d5a3e745f1450eac261edbc32910b4882938f" translate="yes" xml:space="preserve">
          <source>If the amount is a &lt;code&gt;ChronoPeriod&lt;/code&gt; then it must use the ISO chronology.</source>
          <target state="translated">金額が &lt;code&gt;ChronoPeriod&lt;/code&gt; の場合、ISO年代順を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="88b1d50bbaec9f5487c27e8e4cb2386eb42847f9" translate="yes" xml:space="preserve">
          <source>If the amount of saving time at any given time stamp is required, construct a &lt;a href=&quot;calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; with this &lt;code&gt;
 TimeZone&lt;/code&gt; and the time stamp, and call &lt;a href=&quot;calendar#get(int)&quot;&gt;&lt;code&gt;Calendar.get&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;calendar#DST_OFFSET&quot;&gt;&lt;code&gt;Calendar.DST_OFFSET&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;.</source>
          <target state="translated">任意のタイムスタンプでの節約時間が必要な場合は、この &lt;code&gt; TimeZone&lt;/code&gt; とタイムスタンプを使用して&lt;a href=&quot;calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;を作成し、&lt;a href=&quot;calendar#get(int)&quot;&gt; &lt;code&gt;Calendar.get&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(&lt;/code&gt; &lt;a href=&quot;calendar#DST_OFFSET&quot;&gt; &lt;code&gt;Calendar.DST_OFFSET&lt;/code&gt; &lt;/a&gt; &lt;code&gt;)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="4d740232e114f21d31c73ca4687c4057fb29ccd4" translate="yes" xml:space="preserve">
          <source>If the amount of saving time at any given time stamp is required, construct a &lt;a href=&quot;calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; with this &lt;code&gt;TimeZone&lt;/code&gt; and the time stamp, and call &lt;a href=&quot;calendar#get-int-&quot;&gt;&lt;code&gt;Calendar.get&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(&lt;/code&gt;&lt;a href=&quot;calendar#DST_OFFSET&quot;&gt;&lt;code&gt;Calendar.DST_OFFSET&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&lt;/code&gt;.</source>
          <target state="translated">特定のタイムスタンプでの保存時間量が必要な場合は、この &lt;code&gt;TimeZone&lt;/code&gt; とタイムスタンプを使用して&lt;a href=&quot;calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;を作成し、&lt;a href=&quot;calendar#get-int-&quot;&gt; &lt;code&gt;Calendar.get&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(&lt;/code&gt; &lt;a href=&quot;calendar#DST_OFFSET&quot;&gt; &lt;code&gt;Calendar.DST_OFFSET&lt;/code&gt; &lt;/a&gt; &lt;code&gt;)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="08afeee4bde07dab89f440c39fce86a0eb463b56" translate="yes" xml:space="preserve">
          <source>If the annotation &lt;code&gt;@Documented&lt;/code&gt; is present on the declaration of an annotation type</source>
          <target state="translated">アノテーションタイプの宣言にアノテーション &lt;code&gt;@Documented&lt;/code&gt; が存在する場合</target>
        </trans-unit>
        <trans-unit id="272549f61fd737d1e73b2c36c4aa004c00079132" translate="yes" xml:space="preserve">
          <source>If the answer is NO, go to the next step.</source>
          <target state="translated">答えがNOの場合は、次のステップに進みます。</target>
        </trans-unit>
        <trans-unit id="f57b79608f2a3ff0ec11e483aaaa3a019d8c2b5b" translate="yes" xml:space="preserve">
          <source>If the answer is NO, throw a &lt;code&gt;NoSuchAlgorithmException&lt;/code&gt; exception.</source>
          <target state="translated">答えがNOの場合、 &lt;code&gt;NoSuchAlgorithmException&lt;/code&gt; 例外をスローします。</target>
        </trans-unit>
        <trans-unit id="434e3dee0acd3560230fa30595feca5a213bbce4" translate="yes" xml:space="preserve">
          <source>If the answer is YES, instantiate it, and call &lt;code&gt;engineSetMode(&lt;i&gt;mode&lt;/i&gt;)&lt;/code&gt; and &lt;code&gt;engineSetPadding(&lt;i&gt;padding&lt;/i&gt;)&lt;/code&gt; on the new instance.</source>
          <target state="translated">答えがYESの場合は、インスタンス化して、新しいインスタンスで &lt;code&gt;engineSetMode(&lt;i&gt;mode&lt;/i&gt;)&lt;/code&gt; および &lt;code&gt;engineSetPadding(&lt;i&gt;padding&lt;/i&gt;)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="a1eb85cb2614bd41f0d6af38673aa7528bca07f4" translate="yes" xml:space="preserve">
          <source>If the answer is YES, instantiate it, and call &lt;code&gt;engineSetMode(&lt;i&gt;mode&lt;/i&gt;)&lt;/code&gt; on the new instance.</source>
          <target state="translated">答えがYESの場合は、インスタンス化して、新しいインスタンスで &lt;code&gt;engineSetMode(&lt;i&gt;mode&lt;/i&gt;)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="de83ee4eae564494ffc414cfaf8cc18d47b2bed1" translate="yes" xml:space="preserve">
          <source>If the answer is YES, instantiate it, and call &lt;code&gt;engineSetPadding(&lt;i&gt;padding&lt;/i&gt;)&lt;/code&gt; on the new instance.</source>
          <target state="translated">答えがYESの場合は、インスタンス化して、新しいインスタンスで &lt;code&gt;engineSetPadding(&lt;i&gt;padding&lt;/i&gt;)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="56a7594c327855897bea9f06e5423ff72ccb1d7b" translate="yes" xml:space="preserve">
          <source>If the answer is YES, instantiate it.</source>
          <target state="translated">答えがYESの場合は、インスタンス化します。</target>
        </trans-unit>
        <trans-unit id="160782cdb54c84087be65e0efddfac392e283c77" translate="yes" xml:space="preserve">
          <source>If the answer is YES, instantiate this class, for whose mode and padding scheme default values (as supplied by the provider) are used.</source>
          <target state="translated">答えがYESの場合、このクラスのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="e4bd31b53dccf5705cdd32f1466082805129fc6c" translate="yes" xml:space="preserve">
          <source>If the application creates a login context using an &lt;em&gt;installed&lt;/em&gt;&lt;a href=&quot;../../../../../../java.base/javax/security/auth/login/configuration&quot;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt; then the application must be granted the &lt;a href=&quot;../../../../../../java.base/javax/security/auth/authpermission&quot;&gt;&lt;code&gt;AuthPermission&lt;/code&gt;&lt;/a&gt; to create login contexts. For example, the following security policy allows an application in the user's current directory to instantiate &lt;em&gt;any&lt;/em&gt; login context:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe99f49bc1a1090e02dd6efd4b8d8fd6a67f30a" translate="yes" xml:space="preserve">
          <source>If the application does not register a DTD handler, all DTD events reported by the SAX parser will be silently ignored (this is the default behaviour implemented by HandlerBase).</source>
          <target state="translated">アプリケーションがDTDハンドラを登録していない場合、SAXパーサによって報告されたすべてのDTDイベントは静かに無視されます(これはHandlerBaseによって実装されたデフォルトの動作です)。</target>
        </trans-unit>
        <trans-unit id="1c521b3dbb8b44d5fe2bd6f0ccfd70ada67afc00" translate="yes" xml:space="preserve">
          <source>If the application does not register a DTD handler, all DTD events reported by the SAX parser will be silently ignored.</source>
          <target state="translated">アプリケーションがDTDハンドラを登録していない場合、SAXパーサによって報告されたすべてのDTDイベントは静かに無視されます。</target>
        </trans-unit>
        <trans-unit id="1995f916cc7b7a0f6ced6ac9ec5d117bf0b42738" translate="yes" xml:space="preserve">
          <source>If the application does not register a content handler, all content events reported by the SAX parser will be silently ignored.</source>
          <target state="translated">アプリケーションがコンテンツハンドラを登録していない場合、SAX パーサによって報告されたすべてのコンテンツイベントは静かに無視されます。</target>
        </trans-unit>
        <trans-unit id="a62c70d6bc1bda91dda6bd20cde5a3d284087c97" translate="yes" xml:space="preserve">
          <source>If the application does not register a document handler, all document events reported by the SAX parser will be silently ignored (this is the default behaviour implemented by HandlerBase).</source>
          <target state="translated">アプリケーションがドキュメントハンドラを登録していない場合、SAXパーサによって報告されたすべてのドキュメントイベントは静かに無視されます(これはHandlerBaseによって実装されたデフォルトの動作です)。</target>
        </trans-unit>
        <trans-unit id="5cbd83d12c880c04a3ca2b1f0acd010cea0950ae" translate="yes" xml:space="preserve">
          <source>If the application does not register an entity resolver, the SAX parser will resolve system identifiers and open connections to entities itself (this is the default behaviour implemented in HandlerBase).</source>
          <target state="translated">アプリケーションがエンティティリゾルバを登録していない場合、SAXパーサはシステム識別子を解決し、エンティティへの接続を開きます(これはHandlerBaseで実装されているデフォルトの動作です)。</target>
        </trans-unit>
        <trans-unit id="a8af630e8d72ae977eff66966545a162b07a84de" translate="yes" xml:space="preserve">
          <source>If the application does not register an entity resolver, the XMLReader will perform its own default resolution.</source>
          <target state="translated">アプリケーションがエンティティ リゾルバを登録していない場合、XMLReader はそれ自身の既定の解決を実行します。</target>
        </trans-unit>
        <trans-unit id="0b84de5172675bfd46a10466b2f6619156504747" translate="yes" xml:space="preserve">
          <source>If the application does not register an error event handler, all error events reported by the SAX parser will be silently ignored, except for fatalError, which will throw a SAXException (this is the default behaviour implemented by HandlerBase).</source>
          <target state="translated">アプリケーションがエラーイベントハンドラを登録していない場合、SAXパーサによって報告されたすべてのエラーイベントは、SAXExceptionをスローするfatalErrorを除いて、静かに無視されます(これはHandlerBaseによって実装されたデフォルトの動作です)。</target>
        </trans-unit>
        <trans-unit id="cc77f1bc697f56ce88184dfc957115a66d88b958" translate="yes" xml:space="preserve">
          <source>If the application does not register an error handler, all error events reported by the SAX parser will be silently ignored; however, normal processing may not continue. It is highly recommended that all SAX applications implement an error handler to avoid unexpected bugs.</source>
          <target state="translated">アプリケーションがエラーハンドラを登録していない場合、SAXパーサによって報告されたすべてのエラーイベントは静かに無視されますが、通常の処理は継続されない可能性があります。予期せぬバグを避けるために、すべてのSAXアプリケーションはエラーハンドラを実装することを強く推奨します。</target>
        </trans-unit>
        <trans-unit id="968a78947275cffe7a67b6a953d091962ffdb8ec" translate="yes" xml:space="preserve">
          <source>If the application has previously set up an instance of &lt;code&gt;URLStreamHandlerFactory&lt;/code&gt; as the stream handler factory, then the &lt;code&gt;createURLStreamHandler&lt;/code&gt; method of that instance is called with the protocol string as an argument to create the stream protocol handler.</source>
          <target state="translated">アプリケーションが以前に &lt;code&gt;URLStreamHandlerFactory&lt;/code&gt; のインスタンスをストリームハンドラファクトリとして設定している場合、そのインスタンスの &lt;code&gt;createURLStreamHandler&lt;/code&gt; メソッドがプロトコル文字列を引数として呼び出され、ストリームプロトコルハンドラを作成します。</target>
        </trans-unit>
        <trans-unit id="2070d70078ec2db5e6d48447de6438828f0279ed" translate="yes" xml:space="preserve">
          <source>If the application has set up a content handler factory instance using the &lt;code&gt;setContentHandlerFactory&lt;/code&gt; method, the &lt;code&gt;createContentHandler&lt;/code&gt; method of that instance is called with the content type as an argument; the result is a content handler for that content type.</source>
          <target state="translated">アプリケーションが &lt;code&gt;setContentHandlerFactory&lt;/code&gt; メソッドを使用してコンテンツハンドラファクトリインスタンスを設定した場合、そのインスタンスの &lt;code&gt;createContentHandler&lt;/code&gt; メソッドが、コンテンツタイプを引数として呼び出されます。結果は、そのコンテンツタイプのコンテンツハンドラです。</target>
        </trans-unit>
        <trans-unit id="070f984b52d47c94ac613db630c4269a97e28431" translate="yes" xml:space="preserve">
          <source>If the application has specified a client socket implementation factory, that factory's &lt;code&gt;createSocketImpl&lt;/code&gt; method is called to create the actual socket implementation. Otherwise a system-default socket implementation is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91fdcd973932e65f09e9bdaebd48fb198c503271" translate="yes" xml:space="preserve">
          <source>If the application has specified a server socket factory, that factory's &lt;code&gt;createSocketImpl&lt;/code&gt; method is called to create the actual socket implementation. Otherwise a &quot;plain&quot; socket is created.</source>
          <target state="translated">アプリケーションがサーバーソケットファクトリを指定している場合、そのファクトリの &lt;code&gt;createSocketImpl&lt;/code&gt; メソッドが呼び出され、実際のソケット実装が作成されます。それ以外の場合は、「プレーン」ソケットが作成されます。</target>
        </trans-unit>
        <trans-unit id="465cff58e0c3971e42da1cffbcef9b2b3ac06798" translate="yes" xml:space="preserve">
          <source>If the application has specified a server socket implementation factory, that factory's &lt;code&gt;createSocketImpl&lt;/code&gt; method is called to create the actual socket implementation. Otherwise a system-default socket implementation is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221a9611027772cf1f0b3bdc427ffc5e66a9af4e" translate="yes" xml:space="preserve">
          <source>If the application has specified a socket factory, that factory's &lt;code&gt;createSocketImpl&lt;/code&gt; method is called to create the actual socket implementation. Otherwise a &quot;plain&quot; socket is created.</source>
          <target state="translated">アプリケーションがソケットファクトリを指定している場合、そのファクトリの &lt;code&gt;createSocketImpl&lt;/code&gt; メソッドが呼び出され、実際のソケット実装が作成されます。それ以外の場合は、「プレーン」ソケットが作成されます。</target>
        </trans-unit>
        <trans-unit id="242a93fe7324bd12593bab009aad2ea56baf1bef" translate="yes" xml:space="preserve">
          <source>If the application initiated the closing process by calling &lt;a href=&quot;#closeOutbound()&quot;&gt;&lt;code&gt;closeOutbound()&lt;/code&gt;&lt;/a&gt;, under some circumstances it is not required that the initiator wait for the peer's corresponding close message. (See section 7.2.1 of the TLS specification (&lt;a href=&quot;http://www.ietf.org/rfc/rfc2246.txt&quot;&gt;RFC 2246&lt;/a&gt;) for more information on waiting for closure alerts.) In such cases, this method need not be called.</source>
          <target state="translated">アプリケーションが&lt;a href=&quot;#closeOutbound()&quot;&gt; &lt;code&gt;closeOutbound()&lt;/code&gt; を&lt;/a&gt;呼び出して終了プロセスを開始した場合、状況によっては、イニシエーターがピアの対応する終了メッセージを待つ必要はありません。（クロージャアラートの待機の詳細については、TLS仕様（&lt;a href=&quot;http://www.ietf.org/rfc/rfc2246.txt&quot;&gt;RFC 2246&lt;/a&gt;）のセクション7.2.1を参照してください。）このような場合、このメソッドを呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="eda2dea38deaa01112fb283b1676ae6c672f0afa" translate="yes" xml:space="preserve">
          <source>If the application initiated the closing process by calling &lt;a href=&quot;#closeOutbound()&quot;&gt;&lt;code&gt;closeOutbound()&lt;/code&gt;&lt;/a&gt;, under some circumstances it is not required that the initiator wait for the peer's corresponding close message. (See section 7.2.1 of the TLS specification (&lt;a href=&quot;https://www.ietf.org/rfc/rfc2246.txt&quot;&gt;RFC 2246&lt;/a&gt;) for more information on waiting for closure alerts.) In such cases, this method need not be called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8dff9cb695d7cf445c13c7a8630fbe3ce30315" translate="yes" xml:space="preserve">
          <source>If the application initiated the closing process by calling &lt;a href=&quot;sslengine#closeOutbound--&quot;&gt;&lt;code&gt;closeOutbound()&lt;/code&gt;&lt;/a&gt;, under some circumstances it is not required that the initiator wait for the peer's corresponding close message. (See section 7.2.1 of the TLS specification (&lt;a href=&quot;http://www.ietf.org/rfc/rfc2246.txt&quot;&gt;RFC 2246&lt;/a&gt;) for more information on waiting for closure alerts.) In such cases, this method need not be called.</source>
          <target state="translated">アプリケーションが&lt;a href=&quot;sslengine#closeOutbound--&quot;&gt; &lt;code&gt;closeOutbound()&lt;/code&gt; を&lt;/a&gt;呼び出して終了プロセスを開始した場合、状況によっては、イニシエーターがピアの対応する終了メッセージを待つ必要はありません。（閉鎖アラートの待機の詳細については、TLS仕様（&lt;a href=&quot;http://www.ietf.org/rfc/rfc2246.txt&quot;&gt;RFC 2246&lt;/a&gt;）のセクション7.2.1を参照してください。）このような場合、このメソッドを呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="9b49e74988c341dbee66d98c70300f05b412e8ad" translate="yes" xml:space="preserve">
          <source>If the application knows the character encoding of the byte stream, it should set it with the setEncoding method.</source>
          <target state="translated">アプリケーションがバイトストリームの文字エンコーディングを知っている場合は、setEncodingメソッドで設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="85ff560af776424016a6f3b941fc1f9585879f10" translate="yes" xml:space="preserve">
          <source>If the application knows the character encoding of the byte stream, it should set the encoding attribute. Setting the encoding in this way will override any encoding specified in an XML declaration in the data.</source>
          <target state="translated">アプリケーションがバイトストリームの文字エンコーディングを知っている場合、アプリケーションはencoding属性を設定しなければなりません。このようにエンコーディングを設定すると、データ内のXML宣言で指定されたエンコーディングが上書きされます。</target>
        </trans-unit>
        <trans-unit id="7cfd6e9f0bb81bae2991028adadfb572b93731b0" translate="yes" xml:space="preserve">
          <source>If the application knows the character encoding of the object pointed to by the system identifier, it can register the encoding using the setEncoding method.</source>
          <target state="translated">アプリケーションは、システム識別子が指すオブジェクトの文字コードを知っていれば、setEncodingメソッドを使ってエンコードを登録することができます。</target>
        </trans-unit>
        <trans-unit id="059304a89c9e8193f2d1a44c913f61a85c77d63d" translate="yes" xml:space="preserve">
          <source>If the application knows the character encoding of the object pointed to by the system identifier, it can set the encoding using the &lt;code&gt;encoding&lt;/code&gt; attribute.</source>
          <target state="translated">アプリケーションは、システムIDが指すオブジェクトの文字エンコードを知っている場合、 &lt;code&gt;encoding&lt;/code&gt; 属性を使用してエンコードを設定できます。</target>
        </trans-unit>
        <trans-unit id="a649bc726d746209da5a8d07601c510d8a5af68b" translate="yes" xml:space="preserve">
          <source>If the application needs to pass through other types of exceptions, it must wrap those exceptions in a SAXException or an exception derived from a SAXException.</source>
          <target state="translated">アプリケーションが他のタイプの例外を通過させる必要がある場合は、それらの例外を SAXException または SAXException から派生した例外でラップする必要があります。</target>
        </trans-unit>
        <trans-unit id="ff002a2eb7163e0d2f905c4e93d3942c2cb282be" translate="yes" xml:space="preserve">
          <source>If the appropriate stub class could not be found, or if the stub class could not be loaded, or if a problem occurs creating the stub instance, a &lt;a href=&quot;../stubnotfoundexception&quot;&gt;&lt;code&gt;StubNotFoundException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">適切なスタブクラスが見つからなかった場合、スタブクラスをロードできなかった場合、またはスタブインスタンスの作成で問題が発生した場合は、&lt;a href=&quot;../stubnotfoundexception&quot;&gt; &lt;code&gt;StubNotFoundException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="9908f3b7f0fcd38e518a64cda27a8bcf7af02eae" translate="yes" xml:space="preserve">
          <source>If the argument</source>
          <target state="translated">引数が</target>
        </trans-unit>
        <trans-unit id="a274d22f689f758fbbc17c1c36e25f56726e9e93" translate="yes" xml:space="preserve">
          <source>If the argument implements &lt;a href=&quot;formattable&quot;&gt;&lt;code&gt;Formattable&lt;/code&gt;&lt;/a&gt;, then its &lt;a href=&quot;formattable#formatTo(java.util.Formatter,int,int,int)&quot;&gt;&lt;code&gt;formatTo&lt;/code&gt;&lt;/a&gt; method is invoked. Otherwise, the result is obtained by invoking the argument's &lt;code&gt;toString()&lt;/code&gt; method.</source>
          <target state="translated">引数が&lt;a href=&quot;formattable&quot;&gt; &lt;code&gt;Formattable&lt;/code&gt; を&lt;/a&gt;実装している場合、その&lt;a href=&quot;formattable#formatTo(java.util.Formatter,int,int,int)&quot;&gt; &lt;code&gt;formatTo&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されます。それ以外の場合、結果は引数の &lt;code&gt;toString()&lt;/code&gt; メソッドを呼び出すことによって取得されます。</target>
        </trans-unit>
        <trans-unit id="18ba07a0dacca161f919bf38b3942c5cbf0de7b4" translate="yes" xml:space="preserve">
          <source>If the argument index is used for more than one format element in the pattern string, then the new format is used for all such format elements. If the argument index is not used for any format element in the pattern string, then the new format is ignored.</source>
          <target state="translated">引数インデックスがパターン文字列内の複数のフォーマット要素に使用されている場合、新しいフォーマットはそのようなすべてのフォーマット要素に使用されます。引数インデックスがパターン文字列内のフォーマット要素に使用されていない場合、新しいフォーマットは無視されます。</target>
        </trans-unit>
        <trans-unit id="201ffc4148225e00891b41aafa471a7bc0ae4e31" translate="yes" xml:space="preserve">
          <source>If the argument is &amp;plusmn;&lt;code&gt;Double.MAX_VALUE&lt;/code&gt;, then the result is equal to 2&lt;sup&gt;971&lt;/sup&gt;.</source>
          <target state="translated">引数が&amp;plusmn; &lt;code&gt;Double.MAX_VALUE&lt;/code&gt; の場合、結果は2 &lt;sup&gt;971になり&lt;/sup&gt;ます。</target>
        </trans-unit>
        <trans-unit id="0500f3687980d0c066085bfc637859d5a0f94f45" translate="yes" xml:space="preserve">
          <source>If the argument is &amp;plusmn;&lt;code&gt;Float.MAX_VALUE&lt;/code&gt;, then the result is equal to 2&lt;sup&gt;104&lt;/sup&gt;.</source>
          <target state="translated">引数が&amp;plusmn; &lt;code&gt;Float.MAX_VALUE&lt;/code&gt; の場合、結果は2 &lt;sup&gt;104になり&lt;/sup&gt;ます。</target>
        </trans-unit>
        <trans-unit id="e418b56eeca30ec55767a713e51154185f73b688" translate="yes" xml:space="preserve">
          <source>If the argument is &lt;code&gt;0x7f800000&lt;/code&gt;, the result is positive infinity.</source>
          <target state="translated">引数が &lt;code&gt;0x7f800000&lt;/code&gt; の場合、結果は正の無限大です。</target>
        </trans-unit>
        <trans-unit id="cc33fb1734d8e8472093718dadfa691efa944850" translate="yes" xml:space="preserve">
          <source>If the argument is &lt;code&gt;0x7ff0000000000000L&lt;/code&gt;, the result is positive infinity.</source>
          <target state="translated">引数が &lt;code&gt;0x7ff0000000000000L&lt;/code&gt; の場合、結果は正の無限大です。</target>
        </trans-unit>
        <trans-unit id="67ad4ce5c4db05b329a5cf076b7ace8df7e07d24" translate="yes" xml:space="preserve">
          <source>If the argument is &lt;code&gt;0xff800000&lt;/code&gt;, the result is negative infinity.</source>
          <target state="translated">引数が &lt;code&gt;0xff800000&lt;/code&gt; の場合、結果は負の無限大になります。</target>
        </trans-unit>
        <trans-unit id="44b83a1db6251fafa0226412a16d0a5aa743a573" translate="yes" xml:space="preserve">
          <source>If the argument is &lt;code&gt;0xfff0000000000000L&lt;/code&gt;, the result is negative infinity.</source>
          <target state="translated">引数が &lt;code&gt;0xfff0000000000000L&lt;/code&gt; の場合、結果は負の無限大になります。</target>
        </trans-unit>
        <trans-unit id="d97807e539c09446e4934a8ca25166f2ed929f7e" translate="yes" xml:space="preserve">
          <source>If the argument is &lt;code&gt;null&lt;/code&gt;, then the result is &quot;&lt;code&gt;false&lt;/code&gt;&quot;. If the argument is a &lt;code&gt;boolean&lt;/code&gt; or &lt;a href=&quot;../lang/boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;, then the result is the string returned by &lt;a href=&quot;../lang/string#valueOf(boolean)&quot;&gt;&lt;code&gt;String.valueOf()&lt;/code&gt;&lt;/a&gt;. Otherwise, the result is &quot;&lt;code&gt;true&lt;/code&gt;&quot;.</source>
          <target state="translated">引数が &lt;code&gt;null&lt;/code&gt; の場合、結果は「 &lt;code&gt;false&lt;/code&gt; 」になります。引数が &lt;code&gt;boolean&lt;/code&gt; または&lt;a href=&quot;../lang/boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;場合、結果は&lt;a href=&quot;../lang/string#valueOf(boolean)&quot;&gt; &lt;code&gt;String.valueOf()&lt;/code&gt; &lt;/a&gt;によって返される文字列になります。それ以外の場合、結果は「 &lt;code&gt;true&lt;/code&gt; 」になります。</target>
        </trans-unit>
        <trans-unit id="970f258bf10d8b6db35da86a6962bea7e6f056c5" translate="yes" xml:space="preserve">
          <source>If the argument is &lt;code&gt;null&lt;/code&gt;, then the result is &quot;&lt;code&gt;false&lt;/code&gt;&quot;. If the argument is a &lt;code&gt;boolean&lt;/code&gt; or &lt;a href=&quot;../lang/boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;, then the result is the string returned by &lt;a href=&quot;../lang/string#valueOf-boolean-&quot;&gt;&lt;code&gt;String.valueOf()&lt;/code&gt;&lt;/a&gt;. Otherwise, the result is &quot;&lt;code&gt;true&lt;/code&gt;&quot;.</source>
          <target state="translated">引数が &lt;code&gt;null&lt;/code&gt; の場合、結果は「 &lt;code&gt;false&lt;/code&gt; 」になります。引数が &lt;code&gt;boolean&lt;/code&gt; または&lt;a href=&quot;../lang/boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; の&lt;/a&gt;場合、結果は&lt;a href=&quot;../lang/string#valueOf-boolean-&quot;&gt; &lt;code&gt;String.valueOf()&lt;/code&gt; &lt;/a&gt;によって返される文字列です。それ以外の場合、結果は &quot; &lt;code&gt;true&lt;/code&gt; &quot;です。</target>
        </trans-unit>
        <trans-unit id="4acdffc199e6f4f9b1d96e0f15f8a4c625bb7edd" translate="yes" xml:space="preserve">
          <source>If the argument is &lt;code&gt;null&lt;/code&gt;, then the result is &quot;&lt;code&gt;null&lt;/code&gt;&quot;. If the argument implements &lt;a href=&quot;formattable&quot;&gt;&lt;code&gt;Formattable&lt;/code&gt;&lt;/a&gt;, then its &lt;a href=&quot;formattable#formatTo-java.util.Formatter-int-int-int-&quot;&gt;&lt;code&gt;formatTo&lt;/code&gt;&lt;/a&gt; method is invoked. Otherwise, the result is obtained by invoking the argument's &lt;code&gt;toString()&lt;/code&gt; method.</source>
          <target state="translated">引数が &lt;code&gt;null&lt;/code&gt; の場合、結果は「 &lt;code&gt;null&lt;/code&gt; 」になります。引数が&lt;a href=&quot;formattable&quot;&gt; &lt;code&gt;Formattable&lt;/code&gt; を&lt;/a&gt;実装している場合、その&lt;a href=&quot;formattable#formatTo-java.util.Formatter-int-int-int-&quot;&gt; &lt;code&gt;formatTo&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されます。それ以外の場合、結果は引数の &lt;code&gt;toString()&lt;/code&gt; メソッドを呼び出すことによって取得されます。</target>
        </trans-unit>
        <trans-unit id="fe94a89675405323875ef4ec6ff361112380225e" translate="yes" xml:space="preserve">
          <source>If the argument is NaN or an infinity or positive zero or negative zero, then the result is the same as the argument.</source>
          <target state="translated">引数がNaNか無限大か正のゼロか負のゼロであれば、結果は引数と同じになります。</target>
        </trans-unit>
        <trans-unit id="0f1490c0a73a4bdc7beee59aa0b2e8886fa1ac76" translate="yes" xml:space="preserve">
          <source>If the argument is NaN or an infinity, then the result is NaN.</source>
          <target state="translated">引数がNaNか無限大であれば、結果はNaNになります。</target>
        </trans-unit>
        <trans-unit id="e8d658cc42466718800cf906b23004b8262a330a" translate="yes" xml:space="preserve">
          <source>If the argument is NaN or infinite, then the result is &lt;a href=&quot;double#MAX_EXPONENT&quot;&gt;&lt;code&gt;Double.MAX_EXPONENT&lt;/code&gt;&lt;/a&gt; + 1.</source>
          <target state="translated">引数がNaNまたは無限の場合、結果は&lt;a href=&quot;double#MAX_EXPONENT&quot;&gt; &lt;code&gt;Double.MAX_EXPONENT&lt;/code&gt; &lt;/a&gt; + 1になります。</target>
        </trans-unit>
        <trans-unit id="cc7b80c9b72e91dff938c54c51871d14f95c81ca" translate="yes" xml:space="preserve">
          <source>If the argument is NaN or infinite, then the result is &lt;a href=&quot;float#MAX_EXPONENT&quot;&gt;&lt;code&gt;Float.MAX_EXPONENT&lt;/code&gt;&lt;/a&gt; + 1.</source>
          <target state="translated">引数がNaNまたは無限の場合、結果は&lt;a href=&quot;float#MAX_EXPONENT&quot;&gt; &lt;code&gt;Float.MAX_EXPONENT&lt;/code&gt; &lt;/a&gt; + 1になります。</target>
        </trans-unit>
        <trans-unit id="745e5106ba9365f2bce0539ab810d8720f71215b" translate="yes" xml:space="preserve">
          <source>If the argument is NaN or its absolute value is greater than 1, then the result is NaN.</source>
          <target state="translated">引数がNaNであるか、その絶対値が1より大きい場合、結果はNaNとなります。</target>
        </trans-unit>
        <trans-unit id="07291af92544374b52ef8f433433f39f1dbb80d9" translate="yes" xml:space="preserve">
          <source>If the argument is NaN or less than -1, then the result is NaN.</source>
          <target state="translated">引数がNaNか-1以下であれば、結果はNaNとなります。</target>
        </trans-unit>
        <trans-unit id="13a256cb6eee91493a6f005cfe5cd4ae37f9697f" translate="yes" xml:space="preserve">
          <source>If the argument is NaN or less than zero, then the result is NaN.</source>
          <target state="translated">引数がNaNか0以下の場合、結果はNaNとなります。</target>
        </trans-unit>
        <trans-unit id="31b76fec8c3bc86ab1662b04d7bb45867ec9f9d7" translate="yes" xml:space="preserve">
          <source>If the argument is NaN, the result is 0.</source>
          <target state="translated">引数がNaNの場合、結果は0になります。</target>
        </trans-unit>
        <trans-unit id="3aa89491f3556c271cee0931546f3e5660ec7ac7" translate="yes" xml:space="preserve">
          <source>If the argument is NaN, the result is &lt;code&gt;0x7fc00000&lt;/code&gt;.</source>
          <target state="translated">引数がNaNの場合、結果は &lt;code&gt;0x7fc00000&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a83c5a6baaa1bd2366e8865b925beaeea4e26b42" translate="yes" xml:space="preserve">
          <source>If the argument is NaN, the result is &lt;code&gt;0x7ff8000000000000L&lt;/code&gt;.</source>
          <target state="translated">引数がNaNの場合、結果は &lt;code&gt;0x7ff8000000000000L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="118d734407198a907583b63ea2fc64d7c89b2c28" translate="yes" xml:space="preserve">
          <source>If the argument is NaN, the result is NaN.</source>
          <target state="translated">引数がNaNの場合、結果はNaNとなります。</target>
        </trans-unit>
        <trans-unit id="e064879a9427f94b4430bb8b2822c39d482f8755" translate="yes" xml:space="preserve">
          <source>If the argument is NaN, the result is the &lt;code&gt;long&lt;/code&gt; integer representing the actual NaN value. Unlike the &lt;code&gt;doubleToLongBits&lt;/code&gt; method, &lt;code&gt;doubleToRawLongBits&lt;/code&gt; does not collapse all the bit patterns encoding a NaN to a single &quot;canonical&quot; NaN value.</source>
          <target state="translated">引数がNaNの場合、結果は実際のNaN値を表す &lt;code&gt;long&lt;/code&gt; 整数です。 &lt;code&gt;doubleToLongBits&lt;/code&gt; メソッドとは異なり、 &lt;code&gt;doubleToRawLongBits&lt;/code&gt; は、NaNをエンコードするすべてのビットパターンを単一の「正規の」NaN値に縮小しません。</target>
        </trans-unit>
        <trans-unit id="bca2d981cbc0638a09fdc8f8c3691bf1f893da00" translate="yes" xml:space="preserve">
          <source>If the argument is NaN, the result is the integer representing the actual NaN value. Unlike the &lt;code&gt;floatToIntBits&lt;/code&gt; method, &lt;code&gt;floatToRawIntBits&lt;/code&gt; does not collapse all the bit patterns encoding a NaN to a single &quot;canonical&quot; NaN value.</source>
          <target state="translated">引数がNaNの場合、結果は実際のNaN値を表す整数です。 &lt;code&gt;floatToIntBits&lt;/code&gt; メソッドとは異なり、 &lt;code&gt;floatToRawIntBits&lt;/code&gt; は、NaNをエンコードするすべてのビットパターンを単一の「正規の」NaN値に縮小しません。</target>
        </trans-unit>
        <trans-unit id="db8eab43bb6026b1e9b4780ecae1f1526f2beff3" translate="yes" xml:space="preserve">
          <source>If the argument is NaN, the result is the string &quot;&lt;code&gt;NaN&lt;/code&gt;&quot;.</source>
          <target state="translated">引数がNaNの場合、結果は文字列「 &lt;code&gt;NaN&lt;/code&gt; 」になります。</target>
        </trans-unit>
        <trans-unit id="c12f1031f1e9c83194d8ac6506dee76af527571a" translate="yes" xml:space="preserve">
          <source>If the argument is NaN, then the result is NaN.</source>
          <target state="translated">引数がNaNであれば、結果はNaNとなります。</target>
        </trans-unit>
        <trans-unit id="d554a647f92a4934769f60285a8988bfd2109472" translate="yes" xml:space="preserve">
          <source>If the argument is a &lt;a href=&quot;font/glyphvector&quot;&gt;&lt;code&gt;GlyphVector&lt;/code&gt;&lt;/a&gt;, then the &lt;code&gt;GlyphVector&lt;/code&gt; object already contains the appropriate font-specific glyph codes with explicit coordinates for the position of each glyph.</source>
          <target state="translated">引数が&lt;a href=&quot;font/glyphvector&quot;&gt; &lt;code&gt;GlyphVector&lt;/code&gt; の&lt;/a&gt;場合、 &lt;code&gt;GlyphVector&lt;/code&gt; オブジェクトには、各グリフの位置の明示的な座標を持つ適切なフォント固有のグリフコードがすでに含まれています。</target>
        </trans-unit>
        <trans-unit id="33084cbb24930f6a9f5be37e387df07eb5022040" translate="yes" xml:space="preserve">
          <source>If the argument is a &lt;code&gt;String&lt;/code&gt;, then the current &lt;code&gt;Font&lt;/code&gt; in the &lt;code&gt;Graphics2D&lt;/code&gt; context is asked to convert the Unicode characters in the &lt;code&gt;String&lt;/code&gt; into a set of glyphs for presentation with whatever basic layout and shaping algorithms the font implements.</source>
          <target state="translated">引数が &lt;code&gt;String&lt;/code&gt; 場合、 &lt;code&gt;Graphics2D&lt;/code&gt; コンテキストの現在の &lt;code&gt;Font&lt;/code&gt; は、 &lt;code&gt;String&lt;/code&gt; 内のUnicode文字を、フォントが実装する基本的なレイアウトおよび整形アルゴリズムで表示するためのグリフのセットに変換するように求められます。</target>
        </trans-unit>
        <trans-unit id="5a923aa0ff948589bbbea2c5c98edba0c8041581" translate="yes" xml:space="preserve">
          <source>If the argument is already a localized stream, it may be returned as the result.</source>
          <target state="translated">引数が既にローカライズされたストリームである場合は、結果として返されることがあります。</target>
        </trans-unit>
        <trans-unit id="e184dfc2be8d0cd0cc281824d50fb9ce2efa94b1" translate="yes" xml:space="preserve">
          <source>If the argument is an &lt;a href=&quot;../../../java.base/java/text/attributedcharacteriterator&quot;&gt;&lt;code&gt;AttributedCharacterIterator&lt;/code&gt;&lt;/a&gt;, the iterator is asked to convert itself to a &lt;a href=&quot;font/textlayout&quot;&gt;&lt;code&gt;TextLayout&lt;/code&gt;&lt;/a&gt; using its embedded font attributes. The &lt;code&gt;TextLayout&lt;/code&gt; implements more sophisticated glyph layout algorithms that perform Unicode bi-directional layout adjustments automatically for multiple fonts of differing writing directions.</source>
          <target state="translated">引数が&lt;a href=&quot;../../../java.base/java/text/attributedcharacteriterator&quot;&gt; &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; の&lt;/a&gt;場合、イテレータは、埋め込まれたフォント属性を使用して、自身を&lt;a href=&quot;font/textlayout&quot;&gt; &lt;code&gt;TextLayout&lt;/code&gt; &lt;/a&gt;に変換するように求められます。 &lt;code&gt;TextLayout&lt;/code&gt; の実装書き込み方向の異なる複数のフォントのために自動的にUnicodeの双方向レイアウト調整を行い、より洗練されたグリフレイアウトアルゴリズム。</target>
        </trans-unit>
        <trans-unit id="e9264d5fd055500aa5c8726a54e413523844cbaf" translate="yes" xml:space="preserve">
          <source>If the argument is any value in the range &lt;code&gt;0x7f800001&lt;/code&gt; through &lt;code&gt;0x7fffffff&lt;/code&gt; or in the range &lt;code&gt;0xff800001&lt;/code&gt; through &lt;code&gt;0xffffffff&lt;/code&gt;, the result is a NaN. No IEEE 754 floating-point operation provided by Java can distinguish between two NaN values of the same type with different bit patterns. Distinct values of NaN are only distinguishable by use of the &lt;code&gt;Float.floatToRawIntBits&lt;/code&gt; method.</source>
          <target state="translated">引数が &lt;code&gt;0x7f800001&lt;/code&gt; から &lt;code&gt;0x7fffffff&lt;/code&gt; の範囲または &lt;code&gt;0xff800001&lt;/code&gt; から &lt;code&gt;0xffffffff&lt;/code&gt; の範囲のいずれかの値である場合、結果はNaNになります。 Javaが提供するIEEE 754浮動小数点演算では、ビットパターンが異なる同じ型の2つのNaN値を区別できません。 NaNの個別の値は、 &lt;code&gt;Float.floatToRawIntBits&lt;/code&gt; メソッドを使用することによってのみ区別できます。</target>
        </trans-unit>
        <trans-unit id="e09c36577e890868103778c6cad080360d9fef25" translate="yes" xml:space="preserve">
          <source>If the argument is any value in the range &lt;code&gt;0x7ff0000000000001L&lt;/code&gt; through &lt;code&gt;0x7fffffffffffffffL&lt;/code&gt; or in the range &lt;code&gt;0xfff0000000000001L&lt;/code&gt; through &lt;code&gt;0xffffffffffffffffL&lt;/code&gt;, the result is a NaN. No IEEE 754 floating-point operation provided by Java can distinguish between two NaN values of the same type with different bit patterns. Distinct values of NaN are only distinguishable by use of the &lt;code&gt;Double.doubleToRawLongBits&lt;/code&gt; method.</source>
          <target state="translated">引数が &lt;code&gt;0x7ff0000000000001L&lt;/code&gt; から &lt;code&gt;0x7fffffffffffffffL&lt;/code&gt; の範囲または &lt;code&gt;0xfff0000000000001L&lt;/code&gt; から &lt;code&gt;0xffffffffffffffffL&lt;/code&gt; の範囲のいずれかの値である場合、結果はNaNになります。Javaが提供するIEEE 754浮動小数点演算では、ビットパターンが異なる同じ型の2つのNaN値を区別できません。NaNの個別の値は、 &lt;code&gt;Double.doubleToRawLongBits&lt;/code&gt; メソッドを使用することによってのみ区別できます。</target>
        </trans-unit>
        <trans-unit id="108d000cc41c657851b0d27f0a1ac78cf5e4ee70" translate="yes" xml:space="preserve">
          <source>If the argument is equal to 10&lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt; for integer</source>
          <target state="translated">引数が整数の10 &lt;sup&gt;&lt;i&gt;n&lt;/i&gt;&lt;/sup&gt;に等しい場合</target>
        </trans-unit>
        <trans-unit id="65efe2e81fa8d1ba670e4b1992ae1775f4b62a76" translate="yes" xml:space="preserve">
          <source>If the argument is infinite, the result is positive infinity.</source>
          <target state="translated">引数が無限大の場合、結果は正の無限大となります。</target>
        </trans-unit>
        <trans-unit id="336889ed81a3144be451220af338acfcbb6c9ba3" translate="yes" xml:space="preserve">
          <source>If the argument is infinite, then the result is an infinity with the same sign as the argument.</source>
          <target state="translated">引数が無限大であれば、結果は引数と同じ符号を持つ無限大になります。</target>
        </trans-unit>
        <trans-unit id="4691c35189f88af211fb42ae9607c8ae123c02d6" translate="yes" xml:space="preserve">
          <source>If the argument is infinite, then the result is positive infinity.</source>
          <target state="translated">引数が無限大であれば、結果は正の無限大となります。</target>
        </trans-unit>
        <trans-unit id="ec376818cb2e255655d1881f54f64a5f81a51e7b" translate="yes" xml:space="preserve">
          <source>If the argument is negative infinity or any value less than or equal to the value of &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt;, the result is equal to the value of &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt;.</source>
          <target state="translated">引数が負の無限大、または &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt; の値以下の値である場合、結果は &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt; の値と等しくなります。</target>
        </trans-unit>
        <trans-unit id="5a08fe9d371940e4f9d92ad57a75f846bb063ec2" translate="yes" xml:space="preserve">
          <source>If the argument is negative infinity or any value less than or equal to the value of &lt;code&gt;Long.MIN_VALUE&lt;/code&gt;, the result is equal to the value of &lt;code&gt;Long.MIN_VALUE&lt;/code&gt;.</source>
          <target state="translated">引数が負の無限大または &lt;code&gt;Long.MIN_VALUE&lt;/code&gt; の値以下の値である場合、結果は &lt;code&gt;Long.MIN_VALUE&lt;/code&gt; の値と等しくなります。</target>
        </trans-unit>
        <trans-unit id="f1c38692773d898bd9643813b94e0ae1993eb556" translate="yes" xml:space="preserve">
          <source>If the argument is negative infinity, the result is &lt;code&gt;0xff800000&lt;/code&gt;.</source>
          <target state="translated">引数が負の無限大の場合、結果は &lt;code&gt;0xff800000&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="3bb987ea3c954538087573e2f402d9fdf305369d" translate="yes" xml:space="preserve">
          <source>If the argument is negative infinity, the result is &lt;code&gt;0xfff0000000000000L&lt;/code&gt;.</source>
          <target state="translated">引数が負の無限大の場合、結果は &lt;code&gt;0xfff0000000000000L&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a6a939ea1df7c37cb72e17d44d1754a7325b1cce" translate="yes" xml:space="preserve">
          <source>If the argument is negative infinity, the result is negative infinity.</source>
          <target state="translated">引数が負の無限大であれば、結果は負の無限大になります。</target>
        </trans-unit>
        <trans-unit id="ba927f3f79a46354d9209dcd811d86b8a661221b" translate="yes" xml:space="preserve">
          <source>If the argument is negative infinity, then the result is -1.0.</source>
          <target state="translated">引数が負の無限大であれば、結果は-1.0となります。</target>
        </trans-unit>
        <trans-unit id="20f8e0486c54aeb853e7804b4611ce1c56a73d1b" translate="yes" xml:space="preserve">
          <source>If the argument is negative infinity, then the result is &lt;code&gt;-1.0&lt;/code&gt;.</source>
          <target state="translated">引数が負の無限大の場合、結果は &lt;code&gt;-1.0&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="d9e3b1cc495f1cc8092755d393fd54a8be9e0bff" translate="yes" xml:space="preserve">
          <source>If the argument is negative infinity, then the result is positive zero.</source>
          <target state="translated">引数が負の無限大であれば、結果は正のゼロになります。</target>
        </trans-unit>
        <trans-unit id="d08b29e2ea8c8a74d04b752def011f9cda30c497" translate="yes" xml:space="preserve">
          <source>If the argument is negative one, then the result is negative infinity.</source>
          <target state="translated">引数が負の1であれば、結果は負の無限大になります。</target>
        </trans-unit>
        <trans-unit id="ad3d4a3e9566e2c0df155d95c37161c79599330f" translate="yes" xml:space="preserve">
          <source>If the argument is positive infinity or any value greater than or equal to the value of &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;, the result is equal to the value of &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;.</source>
          <target state="translated">引数が正の無限大、または &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; の値以上の値である場合、結果は &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; の値と等しくなります。</target>
        </trans-unit>
        <trans-unit id="eff50c12018038db62b68855eb707df57d7cd5ae" translate="yes" xml:space="preserve">
          <source>If the argument is positive infinity or any value greater than or equal to the value of &lt;code&gt;Long.MAX_VALUE&lt;/code&gt;, the result is equal to the value of &lt;code&gt;Long.MAX_VALUE&lt;/code&gt;.</source>
          <target state="translated">引数が正の無限大または &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の値以上の値である場合、結果は &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; の値と等しくなります。</target>
        </trans-unit>
        <trans-unit id="6a13758d0f976c89623e38e841da2cbc62912670" translate="yes" xml:space="preserve">
          <source>If the argument is positive infinity, the result is &lt;code&gt;0x7f800000&lt;/code&gt;.</source>
          <target state="translated">引数が正の無限大の場合、結果は &lt;code&gt;0x7f800000&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="8c05eefbf6b8959edbbea1c8b9a02322d8935ca7" translate="yes" xml:space="preserve">
          <source>If the argument is positive infinity, the result is &lt;code&gt;0x7ff0000000000000L&lt;/code&gt;.</source>
          <target state="translated">引数が正の無限大の場合、結果は &lt;code&gt;0x7ff0000000000000L&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="cf429a21c2dc34b66e4269078332483b3641ead6" translate="yes" xml:space="preserve">
          <source>If the argument is positive infinity, the result is positive infinity.</source>
          <target state="translated">引数が正の無限大であれば、結果は正の無限大になります。</target>
        </trans-unit>
        <trans-unit id="31b9de6b24ff8d5ffbebf56f3f1cecc792456081" translate="yes" xml:space="preserve">
          <source>If the argument is positive infinity, then the result is &lt;code&gt;+1.0&lt;/code&gt;.</source>
          <target state="translated">引数が正の無限大の場合、結果は &lt;code&gt;+1.0&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="f87ee2c0e3d173098373d3990b3903acb3bfadf9" translate="yes" xml:space="preserve">
          <source>If the argument is positive infinity, then the result is positive infinity.</source>
          <target state="translated">引数が正の無限大であれば、結果は正の無限大になります。</target>
        </trans-unit>
        <trans-unit id="96dab47247ae7e1056e56799ef0665e4ab651c26" translate="yes" xml:space="preserve">
          <source>If the argument is positive or negative infinity, then the result is positive infinity.</source>
          <target state="translated">引数が正または負の無限大であれば、結果は正の無限大となります。</target>
        </trans-unit>
        <trans-unit id="78148cd34a5b7680af0ed6412b4903e44701b46c" translate="yes" xml:space="preserve">
          <source>If the argument is positive or negative zero, then the result is &lt;code&gt;Double.MIN_VALUE&lt;/code&gt;.</source>
          <target state="translated">引数が正または負のゼロの場合、結果は &lt;code&gt;Double.MIN_VALUE&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="0c4032eb755d363cebfbea8af5b3c0b4a94596cf" translate="yes" xml:space="preserve">
          <source>If the argument is positive or negative zero, then the result is &lt;code&gt;Float.MIN_VALUE&lt;/code&gt;.</source>
          <target state="translated">引数が正または負のゼロの場合、結果は &lt;code&gt;Float.MIN_VALUE&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="f15f3f96dc5106b38775f4ba76d739b00aa110dd" translate="yes" xml:space="preserve">
          <source>If the argument is positive zero or negative zero, the result is positive zero.</source>
          <target state="translated">引数が正のゼロか負のゼロであれば、結果は正のゼロになります。</target>
        </trans-unit>
        <trans-unit id="0553928b250b89074ae0163da0309f356dd0aea5" translate="yes" xml:space="preserve">
          <source>If the argument is positive zero or negative zero, then the result is negative infinity.</source>
          <target state="translated">引数が正のゼロか負のゼロであれば、結果は負の無限大になります。</target>
        </trans-unit>
        <trans-unit id="f8ad8830694a6f7c940aad7bd91216f8c775287b" translate="yes" xml:space="preserve">
          <source>If the argument is positive zero or negative zero, then the result is the same as the argument.</source>
          <target state="translated">引数が正のゼロか負のゼロであれば、結果は引数と同じになります。</target>
        </trans-unit>
        <trans-unit id="11b6940276c4e767ac8a361ca5f19636e270c2d9" translate="yes" xml:space="preserve">
          <source>If the argument is zero or subnormal, then the result is &lt;a href=&quot;double#MIN_EXPONENT&quot;&gt;&lt;code&gt;Double.MIN_EXPONENT&lt;/code&gt;&lt;/a&gt; -1.</source>
          <target state="translated">引数がゼロまたは非正規の場合、結果は&lt;a href=&quot;double#MIN_EXPONENT&quot;&gt; &lt;code&gt;Double.MIN_EXPONENT&lt;/code&gt; &lt;/a&gt; -1になります。</target>
        </trans-unit>
        <trans-unit id="3905704a484368c3992190c17ec803f5c9734872" translate="yes" xml:space="preserve">
          <source>If the argument is zero or subnormal, then the result is &lt;a href=&quot;float#MIN_EXPONENT&quot;&gt;&lt;code&gt;Float.MIN_EXPONENT&lt;/code&gt;&lt;/a&gt; -1.</source>
          <target state="translated">引数がゼロまたは非正規の場合、結果は&lt;a href=&quot;float#MIN_EXPONENT&quot;&gt; &lt;code&gt;Float.MIN_EXPONENT&lt;/code&gt; &lt;/a&gt; -1になります。</target>
        </trans-unit>
        <trans-unit id="65b605eea787dfcd26a427a347ea4ad7abd516d5" translate="yes" xml:space="preserve">
          <source>If the argument is zero, the result is &lt;a href=&quot;double#MIN_VALUE&quot;&gt;&lt;code&gt;Double.MIN_VALUE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">引数がゼロの場合、結果は&lt;a href=&quot;double#MIN_VALUE&quot;&gt; &lt;code&gt;Double.MIN_VALUE&lt;/code&gt; です。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82de080d3a1d56fdbaf695d271e223d79695fa9d" translate="yes" xml:space="preserve">
          <source>If the argument is zero, the result is &lt;a href=&quot;float#MIN_VALUE&quot;&gt;&lt;code&gt;Float.MIN_VALUE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">引数がゼロの場合、結果は&lt;a href=&quot;float#MIN_VALUE&quot;&gt; &lt;code&gt;Float.MIN_VALUE&lt;/code&gt; です。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="368d7952fccceed4084cffb62407a857e1140ff5" translate="yes" xml:space="preserve">
          <source>If the argument is zero, the result is &lt;code&gt;-Double.MIN_VALUE&lt;/code&gt;</source>
          <target state="translated">引数がゼロの場合、結果は &lt;code&gt;-Double.MIN_VALUE&lt;/code&gt; です</target>
        </trans-unit>
        <trans-unit id="e43dae92e6e1f445b98367ed57735c6219a0d0f9" translate="yes" xml:space="preserve">
          <source>If the argument is zero, the result is &lt;code&gt;-Float.MIN_VALUE&lt;/code&gt;</source>
          <target state="translated">引数がゼロの場合、結果は &lt;code&gt;-Float.MIN_VALUE&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5db3ba052bf056b3adf9c2be7e6188d33a4e952e" translate="yes" xml:space="preserve">
          <source>If the argument is zero, then the result is &lt;code&gt;1.0&lt;/code&gt;.</source>
          <target state="translated">引数がゼロの場合、結果は &lt;code&gt;1.0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b8d665f9570f8b5f180ad4bdb572f1e1aab98bad" translate="yes" xml:space="preserve">
          <source>If the argument is zero, then the result is a zero with the same sign as the argument.</source>
          <target state="translated">引数がゼロであれば、結果は引数と同じ符号のゼロになります。</target>
        </trans-unit>
        <trans-unit id="d1f82cc652138d856ee89a85be827d630ca9f31c" translate="yes" xml:space="preserve">
          <source>If the argument value is already equal to a mathematical integer, then the result is the same as the argument.</source>
          <target state="translated">引数の値が既に数学的整数に等しい場合は、結果は引数と同じになります。</target>
        </trans-unit>
        <trans-unit id="38b3adaab247759b54b2aa2e88f5b5ce2609340f" translate="yes" xml:space="preserve">
          <source>If the argument value is less than zero but greater than -1.0, then the result is negative zero.</source>
          <target state="translated">引数の値がゼロより小さいが-1.0より大きい場合、結果は負のゼロになります。</target>
        </trans-unit>
        <trans-unit id="acfd94f24240c24943c8ec432b5700b6212aa09a" translate="yes" xml:space="preserve">
          <source>If the argument,</source>
          <target state="translated">もし引数が</target>
        </trans-unit>
        <trans-unit id="d16beeb819e4ac6862b921fde8350a257a9f5ad7" translate="yes" xml:space="preserve">
          <source>If the arguments are inconsistent then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. The necessary consistent argument conditions are:</source>
          <target state="translated">引数に一貫性がない場合、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。必要な一貫した引数条件は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9c14cc5c25518873c4d133fdea60caf8bcd4ae3d" translate="yes" xml:space="preserve">
          <source>If the array contains several elements that reference equal &lt;code&gt;DataFlavor&lt;/code&gt;s, this method will establish new mappings for the first of those elements and ignore the rest of them.</source>
          <target state="translated">配列に等しい &lt;code&gt;DataFlavor&lt;/code&gt; を参照する複数の要素が含まれている場合、このメソッドはそれらの要素の最初の要素に対して新しいマッピングを確立し、残りの要素を無視します。</target>
        </trans-unit>
        <trans-unit id="cfbcde248a8dade1dd31dd66e1705de02944b301" translate="yes" xml:space="preserve">
          <source>If the array contains several elements that reference equal &lt;code&gt;String&lt;/code&gt; natives, this method will establish new mappings for the first of those elements and ignore the rest of them.</source>
          <target state="translated">配列に等しい &lt;code&gt;String&lt;/code&gt; ネイティブを参照する複数の要素が含まれている場合、このメソッドはそれらの要素の最初の要素に対して新しいマッピングを確立し、残りの要素を無視します。</target>
        </trans-unit>
        <trans-unit id="9501d16613e807e8eab597eb061cf001422db435" translate="yes" xml:space="preserve">
          <source>If the array element type differs from any of the corresponding argument types on the original target, the original target is adapted to take the array elements directly, as if by a call to &lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">配列要素タイプが元のターゲットの対応する引数タイプのいずれとも異なる場合、元のターゲットは、&lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;asType&lt;/code&gt; の&lt;/a&gt;呼び出しのように、配列要素を直接取得するように適合されます。</target>
        </trans-unit>
        <trans-unit id="7b613ad1d7b1ad953ca4724e10cf0c2ca14a21e9" translate="yes" xml:space="preserve">
          <source>If the array element type differs from any of the corresponding argument types on the original target, the original target is adapted to take the array elements directly, as if by a call to &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">配列要素の型が元のターゲットの対応する引数の型と異なる場合、元のターゲットは、&lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;asType&lt;/code&gt; の&lt;/a&gt;呼び出しのように、配列要素を直接取得するように適合されます。</target>
        </trans-unit>
        <trans-unit id="50771cd3c005f627dc72ab8c8e5ba994b9a7354f" translate="yes" xml:space="preserve">
          <source>If the array type differs from the final argument type on the original target, the original target is adapted to take the array type directly, as if by a call to &lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">配列型が元のターゲットの最後の引数型と異なる場合、元のターゲットは、&lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;asType&lt;/code&gt; の&lt;/a&gt;呼び出しのように、配列型を直接取得するように適合されます。</target>
        </trans-unit>
        <trans-unit id="8c623454e44ca641a6c552859181a701097e3dda" translate="yes" xml:space="preserve">
          <source>If the array type differs from the final argument type on the original target, the original target is adapted to take the array type directly, as if by a call to &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">配列の型が元のターゲットの最後の引数の型と異なる場合、&lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;asType&lt;/code&gt; の&lt;/a&gt;呼び出しのように、元のターゲットは配列の型を直接取得するように適合されます。</target>
        </trans-unit>
        <trans-unit id="4602014772a49fdb1a8fa2feb07dd113fad7727a" translate="yes" xml:space="preserve">
          <source>If the attempt to load this class produces a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, the search for a handler continues with the next element of the list.</source>
          <target state="translated">このクラスを読み込もうとすると&lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; が&lt;/a&gt;発生した場合、ハンドラーの検索はリストの次の要素から続行されます。</target>
        </trans-unit>
        <trans-unit id="4389eb5f009bdfaeb30b67c701fdcfe35730fb30" translate="yes" xml:space="preserve">
          <source>If the attempt to load this class produces a &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, the search for a handler continues with the next element of the list.</source>
          <target state="translated">このクラスをロードしようとして&lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; が&lt;/a&gt;生成された場合、ハンドラーの検索はリストの次の要素から続行されます。</target>
        </trans-unit>
        <trans-unit id="27bcadd9ba9512f4ef4c571a9d187c3039f12ed0" translate="yes" xml:space="preserve">
          <source>If the attribute is not set, or is null, then any class is deemed acceptable.</source>
          <target state="translated">属性が設定されていない場合、またはnullの場合は、どのクラスも受け入れ可能とみなされます。</target>
        </trans-unit>
        <trans-unit id="21f75ebcde7181c9e3879b54dc6999c343b75757" translate="yes" xml:space="preserve">
          <source>If the attribute name has a namespace prefix in the document, the application must include the prefix here.</source>
          <target state="translated">属性名が文書内で名前空間の接頭辞を持つ場合、アプリケーションはここに接頭辞を含める必要があります。</target>
        </trans-unit>
        <trans-unit id="318b1b00162c20584c04e29ce092027abd6ca2c6" translate="yes" xml:space="preserve">
          <source>If the attribute name has a namespace prefix, the prefix will still be attached.</source>
          <target state="translated">属性名に名前空間接頭辞がある場合でも、接頭辞が付けられます。</target>
        </trans-unit>
        <trans-unit id="43f1e5d2810e31afb29d4cbb5b203ff69de05156" translate="yes" xml:space="preserve">
          <source>If the attribute value is a list of tokens (IDREFS, ENTITIES, or NMTOKENS), the tokens will be concatenated into a single string separated by whitespace.</source>
          <target state="translated">属性値がトークンのリスト(IDREFS、ENTITIES、またはNMTOKENS)の場合、トークンは空白で区切られた単一の文字列に連結されます。</target>
        </trans-unit>
        <trans-unit id="604294b7c0dd6e4d28df89e25837ca4a62600385" translate="yes" xml:space="preserve">
          <source>If the attribute value is a list of tokens (IDREFS, ENTITIES, or NMTOKENS), the tokens will be concatenated into a single string with each token separated by a single space.</source>
          <target state="translated">属性値がトークンのリスト(IDREFS、ENTITIES、またはNMTOKENS)の場合、トークンは連結されて1つの文字列になり、各トークンは1つのスペースで区切られます。</target>
        </trans-unit>
        <trans-unit id="62a3db83b82f314fea33a46956ad055372005abd" translate="yes" xml:space="preserve">
          <source>If the attribute was not explicitly given a value in the instance document but has a default value provided by the schema associated with the document, an attribute node will be created with &lt;code&gt;specified&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;. Removing attribute nodes for which a default value is defined in the schema generates a new attribute node with the default value and &lt;code&gt;specified&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;. If validation occurred while invoking &lt;code&gt;Document.normalizeDocument()&lt;/code&gt;, attribute nodes with &lt;code&gt;specified&lt;/code&gt; equals to &lt;code&gt;false&lt;/code&gt; are recomputed according to the default attribute values provided by the schema. If no default value is associate with this attribute in the schema, the attribute node is discarded.</source>
          <target state="translated">属性がインスタンスドキュメントで明示的に値を与えられていないが、ドキュメントに関連付けられたスキーマによって提供されるデフォルト値を持っている場合、属性ノードは &lt;code&gt;specified&lt;/code&gt; 値を &lt;code&gt;false&lt;/code&gt; に設定して作成されます。スキーマでデフォルト値が定義されている属性ノードを削除すると、デフォルト値で &lt;code&gt;specified&lt;/code&gt; された新しい属性ノードが &lt;code&gt;false&lt;/code&gt; に設定されて生成されます。 &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; の呼び出し中に検証が発生した場合、 &lt;code&gt;specified&lt;/code&gt; 属性ノードは &lt;code&gt;false&lt;/code&gt; に等しいスキーマによって提供されるデフォルトの属性値に従って再計算されます。スキーマ内のこの属性にデフォルト値が関連付けられていない場合、属性ノードは破棄されます。</target>
        </trans-unit>
        <trans-unit id="b24e421bf1afcae52b5b217643f689a5e02c7896" translate="yes" xml:space="preserve">
          <source>If the attributes did not match, we would get the results shown in &lt;u&gt;Figure 12&lt;/u&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de2839318027a87b01d1160931d4ec1a7e54992" translate="yes" xml:space="preserve">
          <source>If the authority component is present in the spec then the spec is treated as absolute and the spec authority and path will replace the context authority and path. If the authority component is absent in the spec then the authority of the new URL will be inherited from the context.</source>
          <target state="translated">仕様に権限コンポーネントが存在する場合、仕様は絶対的なものとして扱われ、仕様の権限とパスがコンテキストの権限とパスに置き換わります。仕様に authority コンポーネントが存在しない場合は、新しい URL の authority がコンテキストから継承されます。</target>
        </trans-unit>
        <trans-unit id="a027f872693de9d0e476629ed221d81049ef3c8e" translate="yes" xml:space="preserve">
          <source>If the barrier action does not rely on the parties being suspended when it is executed, then any of the threads in the party could execute that action when it is released. To facilitate this, each invocation of &lt;a href=&quot;#await()&quot;&gt;&lt;code&gt;await()&lt;/code&gt;&lt;/a&gt; returns the arrival index of that thread at the barrier. You can then choose which thread should execute the barrier action, for example:</source>
          <target state="translated">バリアアクションが実行時に一時停止されているパーティに依存しない場合、パーティ内のスレッドはいずれも、解放されたときにそのアクションを実行できます。これを容易にするために、&lt;a href=&quot;#await()&quot;&gt; &lt;code&gt;await()&lt;/code&gt; を&lt;/a&gt;呼び出すたびに、バリアでのそのスレッドの到着インデックスが返されます。次に、バリアアクションを実行するスレッドを選択できます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="bf5687cbde3be28238012b6e16935454ba496a38" translate="yes" xml:space="preserve">
          <source>If the barrier action does not rely on the parties being suspended when it is executed, then any of the threads in the party could execute that action when it is released. To facilitate this, each invocation of &lt;a href=&quot;cyclicbarrier#await--&quot;&gt;&lt;code&gt;await()&lt;/code&gt;&lt;/a&gt; returns the arrival index of that thread at the barrier. You can then choose which thread should execute the barrier action, for example:</source>
          <target state="translated">バリアアクションが実行されたときにパーティが中断されていることに依存しない場合、パーティのスレッドは、解放されたときにそのアクションを実行できます。これを容易にするために、&lt;a href=&quot;cyclicbarrier#await--&quot;&gt; &lt;code&gt;await()&lt;/code&gt; を&lt;/a&gt;呼び出すたびに、バリアでのそのスレッドの到着インデックスが返されます。次に、バリアアクションを実行するスレッドを選択できます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="1553601469def15f7ee0f8465070fbc819973117" translate="yes" xml:space="preserve">
          <source>If the barrier is &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; while any thread is waiting, or if the barrier &lt;a href=&quot;#isBroken()&quot;&gt;is broken&lt;/a&gt; when &lt;code&gt;await&lt;/code&gt; is invoked, or while any thread is waiting, then &lt;a href=&quot;brokenbarrierexception&quot;&gt;&lt;code&gt;BrokenBarrierException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">スレッドが待機し &lt;code&gt;await&lt;/code&gt; いるときにバリアが&lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; され&lt;/a&gt;&lt;a href=&quot;#isBroken()&quot;&gt;た&lt;/a&gt;場合、awaitが呼び出されたときにバリアが壊れた場合、またはスレッドが待機しているときに、&lt;a href=&quot;brokenbarrierexception&quot;&gt; &lt;code&gt;BrokenBarrierException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="dac9df73081697b7b7531c1d6a0b9c3e69c870d7" translate="yes" xml:space="preserve">
          <source>If the barrier is &lt;a href=&quot;cyclicbarrier#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; while any thread is waiting, or if the barrier &lt;a href=&quot;cyclicbarrier#isBroken--&quot;&gt;is broken&lt;/a&gt; when &lt;code&gt;await&lt;/code&gt; is invoked, or while any thread is waiting, then &lt;a href=&quot;brokenbarrierexception&quot;&gt;&lt;code&gt;BrokenBarrierException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">スレッドが待機している間にバリアが&lt;a href=&quot;cyclicbarrier#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; された&lt;/a&gt;場合、または &lt;code&gt;await&lt;/code&gt; が呼び出され&lt;a href=&quot;cyclicbarrier#isBroken--&quot;&gt;た&lt;/a&gt;ときにバリアが壊れた場合、またはスレッドが待機している間に、&lt;a href=&quot;brokenbarrierexception&quot;&gt; &lt;code&gt;BrokenBarrierException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="575a83a87991707c167ff499c572b2c82c888c2d" translate="yes" xml:space="preserve">
          <source>If the bean also implemented the zero argument get listener method:</source>
          <target state="translated">ビーンがゼロ引数のgetリスナーメソッドも実装されている場合。</target>
        </trans-unit>
        <trans-unit id="2c223aaa7bd3533fb82949d6d90648ac9350bba7" translate="yes" xml:space="preserve">
          <source>If the bean is a subtype of java.applet.Applet, then it is given some special initialization. First, it is supplied with a default AppletStub and AppletContext. Second, if it was instantiated from a classname the applet's &quot;init&quot; method is called. (If the bean was deserialized this step is skipped.)</source>
          <target state="translated">Beanがjava.applet.Appletのサブタイプである場合、いくつかの特別な初期化が与えられます。まず、デフォルトのAppletStubとAppletContextが提供されます。第二に、クラス名からインスタンス化された場合、アプレットの &quot;init &quot;メソッドが呼び出されます。(ビーンがデシリアライズされた場合、このステップはスキップされます)</target>
        </trans-unit>
        <trans-unit id="80874718dd7a5a6c0f974bdb517de9b9cdeaa788" translate="yes" xml:space="preserve">
          <source>If the behavioral parameters do have side-effects, unless explicitly stated, there are no guarantees as to the &lt;a href=&quot;../concurrent/package-summary#MemoryVisibility&quot;&gt;&lt;i&gt;visibility&lt;/i&gt;&lt;/a&gt; of those side-effects to other threads, nor are there any guarantees that different operations on the &quot;same&quot; element within the same stream pipeline are executed in the same thread. Further, the ordering of those effects may be surprising. Even when a pipeline is constrained to produce a &lt;em&gt;result&lt;/em&gt; that is consistent with the encounter order of the stream source (for example, &lt;code&gt;IntStream.range(0,5).parallel().map(x -&amp;gt; x*2).toArray()&lt;/code&gt; must produce &lt;code&gt;[0, 2, 4, 6, 8]&lt;/code&gt;), no guarantees are made as to the order in which the mapper function is applied to individual elements, or in what thread any behavioral parameter is executed for a given element.</source>
          <target state="translated">動作パラメーターに副作用がある場合、明示的に述べられていない限り、他のスレッドへのそれらの副作用の&lt;a href=&quot;../concurrent/package-summary#MemoryVisibility&quot;&gt;&lt;i&gt;可視性&lt;/i&gt;&lt;/a&gt;に関する保証はなく、同じストリームパイプライン内の「同じ」要素に対する異なる操作の保証もありません。同じスレッドで実行されます。さらに、これらの効果の順序は驚くべきものになる可能性があります。パイプラインがストリームソースの遭遇順序と一致する&lt;em&gt;結果&lt;/em&gt;を生成するように制約されている場合でも（たとえば、 &lt;code&gt;IntStream.range(0,5).parallel().map(x -&amp;gt; x*2).toArray()&lt;/code&gt; &lt;code&gt;[0, 2, 4, 6, 8]&lt;/code&gt; 0、2、4、6、8 ]を生成する必要があります）、マッパー関数が個々の要素に適用される順序、または特定の要素に対してどのスレッドで動作パラメーターが実行されるかは保証されません。</target>
        </trans-unit>
        <trans-unit id="f3cae85a2bc3049c2747d3d97aa3594bc11da611" translate="yes" xml:space="preserve">
          <source>If the behavioral parameters do have side-effects, unless explicitly stated, there are no guarantees as to:</source>
          <target state="translated">挙動パラメータに副作用がある場合、明示的に記載されていない限り、副作用についての保証はありません。</target>
        </trans-unit>
        <trans-unit id="ccf27e1407104ddd4079359fbf08f2ee48d40b5e" translate="yes" xml:space="preserve">
          <source>If the best MIME type in the array does not support the charset parameter, the flavors which share that MIME type will then be sorted by their representation classes in the following order: &lt;code&gt;java.io.InputStream&lt;/code&gt;, &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt;, &lt;code&gt;[B&lt;/code&gt;, &amp;lt;all others&amp;gt;.</source>
          <target state="translated">配列内の最適なMIMEタイプがcharsetパラメーターをサポートしていない場合、そのMIMEタイプを共有するフレーバーは、表現クラスによって次の順序で並べ替えられます： &lt;code&gt;java.io.InputStream&lt;/code&gt; 、 &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt; 、 &lt;code&gt;[B&lt;/code&gt; 、 &amp;lt;その他すべて&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="ca5ea6c87eee103edbf011257ea8f6318b689500" translate="yes" xml:space="preserve">
          <source>If the best MIME type in the array does support the charset parameter, the flavors which share that MIME type will then be sorted by their representation classes in the following order: &lt;code&gt;java.io.Reader&lt;/code&gt;, &lt;code&gt;java.lang.String&lt;/code&gt;, &lt;code&gt;java.nio.CharBuffer&lt;/code&gt;, &lt;code&gt;[C&lt;/code&gt;, &amp;lt;all others&amp;gt;.</source>
          <target state="translated">配列内の最適なMIMEタイプがcharsetパラメーターをサポートしている場合、そのMIMEタイプを共有するフレーバーは、 &lt;code&gt;java.io.Reader&lt;/code&gt; 、 &lt;code&gt;java.lang.String&lt;/code&gt; 、 &lt;code&gt;java.nio.CharBuffer&lt;/code&gt; 順序で表現クラスによってソートされます。 CharBuffer、 &lt;code&gt;[C&lt;/code&gt; 、&amp;lt;その他すべて&amp;gt;。</target>
        </trans-unit>
        <trans-unit id="e64f9482d0004a103071d818b6eabe3a9e8fa8ce" translate="yes" xml:space="preserve">
          <source>If the bit offset is non-zero, forces the remaining bits in the current byte to 0 and advances the stream position by one.</source>
          <target state="translated">ビ ッ ト オ フ セ ッ ト が 0 以外の場合、 カ レ ン ト バ イ ト 内の残りのビ ッ ト を 0 に強制的に変更 し 、 ス ト リ ーム位置を 1 進ませます。</target>
        </trans-unit>
        <trans-unit id="f00562687194200d7d3d4e8dbcd71f247eefddae" translate="yes" xml:space="preserve">
          <source>If the bit offset is non-zero, forces the remaining bits in the current byte to 0 and advances the stream position by one. This method should be called by subclasses at the beginning of the &lt;code&gt;write(int)&lt;/code&gt; and &lt;code&gt;write(byte[], int, int)&lt;/code&gt; methods.</source>
          <target state="translated">ビットオフセットがゼロ以外の場合、現在のバイトの残りのビットを強制的に0にして、ストリーム位置を1つ進めます。このメソッドは、 &lt;code&gt;write(int)&lt;/code&gt; &lt;code&gt;write(byte[], int, int)&lt;/code&gt; メソッドとwrite（byte []、int、int）メソッドの先頭でサブクラスによって呼び出される必要があります。</target>
        </trans-unit>
        <trans-unit id="92b946e43c30c152e86047538b9789992732b7fc" translate="yes" xml:space="preserve">
          <source>If the bit offset within the stream is non-zero, the remainder of the current byte is padded with 0s and written out first. The bit offset will be 0 after the write.</source>
          <target state="translated">ストリーム内のビットオフセットが0以外の場合、現在のバイトの残りが0でパディングされ、最初に書き出されます。書き込み後のビットオフセットは0になります。</target>
        </trans-unit>
        <trans-unit id="618cf6b5a31a53e5fb031a41327ab959ec20a724" translate="yes" xml:space="preserve">
          <source>If the bit offset within the stream is non-zero, the remainder of the current byte is padded with 0s and written out first. The bit offset will be 0 after the write. Implementers can use the &lt;a href=&quot;imageoutputstreamimpl#flushBits()&quot;&gt;&lt;code&gt;flushBits&lt;/code&gt;&lt;/a&gt; method of &lt;a href=&quot;imageoutputstreamimpl&quot;&gt;&lt;code&gt;ImageOutputStreamImpl&lt;/code&gt;&lt;/a&gt; to guarantee this.</source>
          <target state="translated">ストリーム内のビットオフセットがゼロ以外の場合、現在のバイトの残りの部分は0で埋められ、最初に書き出されます。書き込み後のビットオフセットは0になります。実装者は使用することができます&lt;a href=&quot;imageoutputstreamimpl#flushBits()&quot;&gt; &lt;code&gt;flushBits&lt;/code&gt; &lt;/a&gt;の方法&lt;a href=&quot;imageoutputstreamimpl&quot;&gt; &lt;code&gt;ImageOutputStreamImpl&lt;/code&gt; を&lt;/a&gt;これを保証します。</target>
        </trans-unit>
        <trans-unit id="a17bf4b09c9d50c7630d0558298715e241010710" translate="yes" xml:space="preserve">
          <source>If the bit offset within the stream is non-zero, the remainder of the current byte is padded with 0s and written out first. The bit offset will be 0 after the write. Implementers can use the &lt;a href=&quot;imageoutputstreamimpl#flushBits--&quot;&gt;&lt;code&gt;flushBits&lt;/code&gt;&lt;/a&gt; method of &lt;a href=&quot;imageoutputstreamimpl&quot;&gt;&lt;code&gt;ImageOutputStreamImpl&lt;/code&gt;&lt;/a&gt; to guarantee this.</source>
          <target state="translated">ストリーム内のビットオフセットがゼロ以外の場合、現在のバイトの残りの部分に0が埋め込まれ、最初に書き込まれます。書き込み後、ビットオフセットは0になります。実装者は使用することができます&lt;a href=&quot;imageoutputstreamimpl#flushBits--&quot;&gt; &lt;code&gt;flushBits&lt;/code&gt; &lt;/a&gt;の方法&lt;a href=&quot;imageoutputstreamimpl&quot;&gt; &lt;code&gt;ImageOutputStreamImpl&lt;/code&gt; を&lt;/a&gt;これを保証します。</target>
        </trans-unit>
        <trans-unit id="5508ed99f9c67a4ebbd4b73e88b50a057b0cdcc0" translate="yes" xml:space="preserve">
          <source>If the boolean system property &lt;code&gt;&lt;span id=&quot;org.openjdk.java.util.stream.tripwire&quot;&gt;org.openjdk.java.util.stream.tripwire&lt;/span&gt;&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; then diagnostic warnings are reported if boxing of primitive values occur when operating on primitive subtype specializations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c99084a7828ec1a975c99c15549a5685147fb7b" translate="yes" xml:space="preserve">
          <source>If the boolean system property &lt;code&gt;org.openjdk.java.util.stream.tripwire&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; then diagnostic warnings are reported if boxing of primitive values occur when operating on primitive subtype specializations.</source>
          <target state="translated">ブールシステムプロパティ &lt;code&gt;org.openjdk.java.util.stream.tripwire&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; に設定されている場合、プリミティブサブタイプの特殊化を操作しているときにプリミティブ値のボックス化が発生すると、診断警告が報告されます。</target>
        </trans-unit>
        <trans-unit id="5a92adab1b458e89d84f2de880f27113ac825c1c" translate="yes" xml:space="preserve">
          <source>If the bootstrap class loader is represented as &lt;code&gt;null&lt;/code&gt; in the Java Virtual Machine (JVM), then &lt;code&gt;null&lt;/code&gt; is also the return value of this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7842845f7cac936a098919d982da718dd2d664" translate="yes" xml:space="preserve">
          <source>If the border, font, or color property values are not specified in the constructor or by invoking the appropriate set methods, the property values will be defined by the current look and feel, using the following property names in the Defaults Table:</source>
          <target state="translated">ボーダー、フォント、またはカラーのプロパティ値がコンストラクタで指定されていない場合、または適切なセットメソッドを呼び出すことで指定されている場合、プロパティ値は、デフォルトテーブルの以下のプロパティ名を使用して、現在のルックアンドフィールによって定義されます。</target>
        </trans-unit>
        <trans-unit id="99c31ef671411db209dfcab81af4e78e3e5b165e" translate="yes" xml:space="preserve">
          <source>If the boundary-points of a Range do not meet specific requirements.</source>
          <target state="translated">レンジの境界点が特定の要件を満たしていない場合。</target>
        </trans-unit>
        <trans-unit id="87e5deffba95ab1ac7918aac0643a0fb2206533c" translate="yes" xml:space="preserve">
          <source>If the calendar type is &lt;code&gt;&quot;iso8601&quot;&lt;/code&gt;, the &lt;a href=&quot;gregoriancalendar#setGregorianChange(java.util.Date)&quot;&gt;Gregorian change date&lt;/a&gt; of a &lt;a href=&quot;gregoriancalendar&quot;&gt;&lt;code&gt;GregorianCalendar&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;Date(Long.MIN_VALUE)&lt;/code&gt; to be the &lt;em&gt;proleptic&lt;/em&gt; Gregorian calendar. Its week definition parameters are also set to be &lt;a href=&quot;gregoriancalendar#iso8601_compatible_setting&quot;&gt;compatible with the ISO 8601 standard&lt;/a&gt;. Note that the &lt;a href=&quot;gregoriancalendar#getCalendarType()&quot;&gt;&lt;code&gt;getCalendarType&lt;/code&gt;&lt;/a&gt; method of a &lt;code&gt;GregorianCalendar&lt;/code&gt; created with &lt;code&gt;&quot;iso8601&quot;&lt;/code&gt; returns &lt;code&gt;&quot;gregory&quot;&lt;/code&gt;.</source>
          <target state="translated">カレンダーの種類がある場合は &lt;code&gt;&quot;iso8601&quot;&lt;/code&gt; 、&lt;a href=&quot;gregoriancalendar#setGregorianChange(java.util.Date)&quot;&gt;グレゴリオ変更日&lt;/a&gt;の&lt;a href=&quot;gregoriancalendar&quot;&gt; &lt;code&gt;GregorianCalendar&lt;/code&gt; のが&lt;/a&gt;に設定されている &lt;code&gt;Date(Long.MIN_VALUE)&lt;/code&gt; であることを&lt;em&gt;proleptic&lt;/em&gt;グレゴリオ暦。その週定義パラメーターも&lt;a href=&quot;gregoriancalendar#iso8601_compatible_setting&quot;&gt;、ISO8601標準&lt;/a&gt;と互換性があるように設定されています。 &lt;code&gt;&quot;iso8601&quot;&lt;/code&gt; 作成された &lt;code&gt;GregorianCalendar&lt;/code&gt; の&lt;a href=&quot;gregoriancalendar#getCalendarType()&quot;&gt; &lt;code&gt;getCalendarType&lt;/code&gt; &lt;/a&gt;メソッドは、 &lt;code&gt;&quot;gregory&quot;&lt;/code&gt; 返すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="486a42feea23b408f730eefa4db49a5a9bbd4a21" translate="yes" xml:space="preserve">
          <source>If the calendar type is &lt;code&gt;&quot;iso8601&quot;&lt;/code&gt;, the &lt;a href=&quot;gregoriancalendar#setGregorianChange-java.util.Date-&quot;&gt;Gregorian change date&lt;/a&gt; of a &lt;a href=&quot;gregoriancalendar&quot;&gt;&lt;code&gt;GregorianCalendar&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;Date(Long.MIN_VALUE)&lt;/code&gt; to be the &lt;em&gt;proleptic&lt;/em&gt; Gregorian calendar. Its week definition parameters are also set to be &lt;a href=&quot;gregoriancalendar#iso8601_compatible_setting&quot;&gt;compatible with the ISO 8601 standard&lt;/a&gt;. Note that the &lt;a href=&quot;gregoriancalendar#getCalendarType--&quot;&gt;&lt;code&gt;getCalendarType&lt;/code&gt;&lt;/a&gt; method of a &lt;code&gt;GregorianCalendar&lt;/code&gt; created with &lt;code&gt;&quot;iso8601&quot;&lt;/code&gt; returns &lt;code&gt;&quot;gregory&quot;&lt;/code&gt;.</source>
          <target state="translated">カレンダーの種類がある場合は &lt;code&gt;&quot;iso8601&quot;&lt;/code&gt; 、&lt;a href=&quot;gregoriancalendar#setGregorianChange-java.util.Date-&quot;&gt;グレゴリオ変更日&lt;/a&gt;の&lt;a href=&quot;gregoriancalendar&quot;&gt; &lt;code&gt;GregorianCalendar&lt;/code&gt; のが&lt;/a&gt;に設定されている &lt;code&gt;Date(Long.MIN_VALUE)&lt;/code&gt; であることを&lt;em&gt;proleptic&lt;/em&gt;グレゴリオ暦。その週定義パラメータも&lt;a href=&quot;gregoriancalendar#iso8601_compatible_setting&quot;&gt;ISO 8601規格&lt;/a&gt;と互換性があるように設定されています。 &lt;code&gt;&quot;iso8601&quot;&lt;/code&gt; で作成された &lt;code&gt;GregorianCalendar&lt;/code&gt; の&lt;a href=&quot;gregoriancalendar#getCalendarType--&quot;&gt; &lt;code&gt;getCalendarType&lt;/code&gt; &lt;/a&gt;メソッドは &lt;code&gt;&quot;gregory&quot;&lt;/code&gt; を返すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="533aa6e407d4df4fa84a0752b83c5cc2a43222eb" translate="yes" xml:space="preserve">
          <source>If the call site's symbolic type descriptor exactly matches this method handle's &lt;a href=&quot;#type()&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;, the call proceeds as if by &lt;a href=&quot;#invokeExact(java.lang.Object...)&quot;&gt;&lt;code&gt;invokeExact&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">呼び出しサイトのシンボリック型記述子がこのメソッドハンドルの&lt;a href=&quot;#type()&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#invokeExact(java.lang.Object...)&quot;&gt; &lt;code&gt;invokeExact&lt;/code&gt; &lt;/a&gt;場合、呼び出しは、invokeExactのように進行します。</target>
        </trans-unit>
        <trans-unit id="aa913ecbed54558eb291f0922076e469c78e1e5a" translate="yes" xml:space="preserve">
          <source>If the call site's symbolic type descriptor exactly matches this method handle's &lt;a href=&quot;methodhandle#type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;, the call proceeds as if by &lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt;&lt;code&gt;invokeExact&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">呼び出しサイトのシンボリック型記述子がこのメソッドハンドルの&lt;a href=&quot;methodhandle#type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt; &lt;code&gt;invokeExact&lt;/code&gt; &lt;/a&gt;場合、呼び出しはinvokeExactによる場合と同じように進行します。</target>
        </trans-unit>
        <trans-unit id="598d1ca28e965a4e453fe096de8cef9a2d34ea67" translate="yes" xml:space="preserve">
          <source>If the call to sendResponseHeaders() specified a fixed response body length, then the exact number of bytes specified in that call must be written to this stream. If too many bytes are written, then write() will throw an IOException. If too few bytes are written then the stream close() will throw an IOException. In both cases, the exchange is aborted and the underlying TCP connection closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da6d1bbefc65f4e59f9e3250b8dcf1e6a450b67" translate="yes" xml:space="preserve">
          <source>If the call was executed on Windows, with SOURCE_PATH set to &lt;code&gt;&quot;C:\Documents&amp;nbsp;and&amp;nbsp;Settings\UncleBob\src\share\classes&quot;&lt;/code&gt;, a valid result would be a file object representing the file &lt;code&gt;&quot;C:\Documents&amp;nbsp;and&amp;nbsp;Settings\UncleBob\src\share\classes\com\sun\tools\javac\resources\compiler.properties&quot;&lt;/code&gt;.</source>
          <target state="translated">呼び出しがWindowsで実行され、SOURCE_PATHが &lt;code&gt;&quot;C:\Documents&amp;nbsp;and&amp;nbsp;Settings\UncleBob\src\share\classes&quot;&lt;/code&gt; に設定されている場合、有効な結果は、ファイル &lt;code&gt;&quot;C:\Documents&amp;nbsp;and&amp;nbsp;Settings\UncleBob\src\share\classes\com\sun\tools\javac\resources\compiler.properties&quot;&lt;/code&gt; 表すファイルオブジェクトになります。 src \ share \ classes \ com \ sun \ tools \ javac \ resources \ compiler.properties &quot;。</target>
        </trans-unit>
        <trans-unit id="82c1f7dd616c9fa0f0453a51b6c0d76cd6731897" translate="yes" xml:space="preserve">
          <source>If the caller instantiates the context using the default &lt;code&gt;GSSManager&lt;/code&gt; instance, then the Kerberos v5 GSS-API mechanism is guaranteed to be available for context establishment. This mechanism is identified by the Oid &quot;1.2.840.113554.1.2.2&quot; and is defined in RFC 1964.</source>
          <target state="translated">呼び出し元がデフォルトの &lt;code&gt;GSSManager&lt;/code&gt; インスタンスを使用してコンテキストをインスタンス化する場合、Kerberos v5GSS-APIメカニズムがコンテキストの確立に使用できることが保証されます。このメカニズムは、Oid「1.2.840.113554.1.2.2」によって識別され、RFC1964で定義されています。</target>
        </trans-unit>
        <trans-unit id="6ff260529ceaf173f6b333228a7d30097feb002e" translate="yes" xml:space="preserve">
          <source>If the caller module &lt;code&gt;M1&lt;/code&gt; differs from the target module &lt;code&gt;M2&lt;/code&gt; then both of the following must be true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76dba0e51a985d3607bdbbe713e1aa4f8e5d2e2f" translate="yes" xml:space="preserve">
          <source>If the caller module is a &lt;a href=&quot;spi/resourcebundleprovider#obtain-resource-bundle&quot;&gt; resource bundle provider&lt;/a&gt;, it does not fall back to the class loader search.</source>
          <target state="translated">呼び出し元モジュールが&lt;a href=&quot;spi/resourcebundleprovider#obtain-resource-bundle&quot;&gt;リソースバンドルプロバイダー&lt;/a&gt;である場合、クラスローダー検索にフォールバックしません。</target>
        </trans-unit>
        <trans-unit id="127ed743b798d2c554cd5dbd0da31702ddd38bcb" translate="yes" xml:space="preserve">
          <source>If the caller module is a named module and the given &lt;code&gt;loader&lt;/code&gt; is the caller module's class loader, this method is equivalent to &lt;code&gt;getBundle(baseName, locale)&lt;/code&gt;; otherwise, it may not find resource bundles from named modules. Use &lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.Module)&quot;&gt;&lt;code&gt;getBundle(String, Locale, Module)&lt;/code&gt;&lt;/a&gt; to load resource bundles on behalf on a specific module instead.</source>
          <target state="translated">呼び出し元モジュールが名前付きモジュールであり、指定された &lt;code&gt;loader&lt;/code&gt; が呼び出し元モジュールのクラスローダーである場合、このメソッドは &lt;code&gt;getBundle(baseName, locale)&lt;/code&gt; と同等です。そうしないと、名前付きモジュールからリソースバンドルが見つからない場合があります。代わりに、&lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.Module)&quot;&gt; &lt;code&gt;getBundle(String, Locale, Module)&lt;/code&gt; &lt;/a&gt;を使用して、特定のモジュールに代わってリソースバンドルをロードします。</target>
        </trans-unit>
        <trans-unit id="9bab532ba6bbba009ffbae752606d6da2e48286a" translate="yes" xml:space="preserve">
          <source>If the caller specifies a &lt;code&gt;null&lt;/code&gt; Subject and a &lt;code&gt;null&lt;/code&gt; value is permitted, the LoginContext instantiates a new Subject.</source>
          <target state="translated">呼び出し元が &lt;code&gt;null&lt;/code&gt; サブジェクトを指定し、 &lt;code&gt;null&lt;/code&gt; 値が許可されている場合、LoginContextは新しいサブジェクトをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="cddd5c45ec5323f48597c6883597894f02cc5d57" translate="yes" xml:space="preserve">
          <source>If the caller supplies values that are inconsistent or out of bounds, the method enforces these constraints silently, and without failure. Specifically, if the start position or end position is greater than the length of the text, it is reset to equal the text length. If the start position is less than zero, it is reset to zero, and if the end position is less than the start position, it is reset to the start position.</source>
          <target state="translated">呼び出し元が矛盾した値や範囲外の値を提供した場合、このメソッドはこれらの制約を無言で、失敗することなく強制します。具体的には、開始位置または終了位置がテキストの長さよりも大きい場合、テキストの長さと同じにリセットされます。開始位置がゼロよりも小さい場合はゼロにリセットされ、終了位置が開始位置よりも小さい場合は開始位置にリセットされます。</target>
        </trans-unit>
        <trans-unit id="8d99d89b43899a3641eb5674cead1a33a1d5f371" translate="yes" xml:space="preserve">
          <source>If the caller's class loader defines a &lt;code&gt;Package&lt;/code&gt; of the given name, the &lt;code&gt;Package&lt;/code&gt; is returned. Otherwise, the ancestors of the caller's class loader are searched recursively (parent by parent) for a &lt;code&gt;Package&lt;/code&gt; of the given name.</source>
          <target state="translated">呼び出し元のクラスローダーが指定された名前の &lt;code&gt;Package&lt;/code&gt; を定義している場合、 &lt;code&gt;Package&lt;/code&gt; が返されます。それ以外の場合、呼び出し元のクラスローダーの祖先は、指定された名前の &lt;code&gt;Package&lt;/code&gt; を再帰的に（親ごとに）検索されます。</target>
        </trans-unit>
        <trans-unit id="326d2f1653f789cda443686d18377e6514d2a778" translate="yes" xml:space="preserve">
          <source>If the caller's module is this module then update this module to add a service dependence on the given service type.</source>
          <target state="translated">呼び出し元のモジュールがこのモジュールであれば、このモジュールを更新して、指定されたサービスタイプにサービス依存を追加します。</target>
        </trans-unit>
        <trans-unit id="0de0313a99182f5f835a0cf120f13fa81db11645" translate="yes" xml:space="preserve">
          <source>If the caller's module is this module then update this module to add a service dependence on the given service type. This method is intended for use by frameworks that invoke &lt;a href=&quot;../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; on behalf of other modules or where the framework is passed a reference to the service type by other code. This method is a no-op when invoked on an unnamed module or an automatic module.</source>
          <target state="translated">呼び出し元のモジュールがこのモジュールである場合は、このモジュールを更新して、指定されたサービスタイプへのサービス依存関係を追加します。このメソッドは、他のモジュールに代わって&lt;a href=&quot;../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;を呼び出すフレームワーク、またはフレームワークに他のコードによってサービスタイプへの参照が渡される場合に使用することを目的としています。このメソッドは、名前のないモジュールまたは自動モジュールで呼び出された場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="2df2be70297edd88e8c12a7c5f300e9bb81d2b5b" translate="yes" xml:space="preserve">
          <source>If the caller's module is this module then update this module to export the given package to the given module.</source>
          <target state="translated">呼び出し元のモジュールがこのモジュールであれば、このモジュールを更新して、与えられたパッケージを与えられたモジュールにエクスポートします。</target>
        </trans-unit>
        <trans-unit id="6758eb950c4ad23ad7160ebf4f955a5a3f8c692e" translate="yes" xml:space="preserve">
          <source>If the caller's module is this module then update this module to read the given module.</source>
          <target state="translated">呼び出し元のモジュールがこのモジュールであれば、与えられたモジュールを読むためにこのモジュールを更新します。</target>
        </trans-unit>
        <trans-unit id="360e9083fc3848da89a866e2997b26119a42eb1d" translate="yes" xml:space="preserve">
          <source>If the caller's module is this module then update this module to read the given module. This method is a no-op if &lt;code&gt;other&lt;/code&gt; is this module (all modules read themselves), this module is an unnamed module (as unnamed modules read all modules), or this module already reads &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">呼び出し元のモジュールがこのモジュールである場合は、このモジュールを更新して、指定されたモジュールを読み取ります。 &lt;code&gt;other&lt;/code&gt; がこのモジュールである場合（すべてのモジュールがそれ自体を読み取る）、このモジュールが名前のないモジュールである場合（名前のないモジュールがすべてのモジュールを読み取るため）、またはこのモジュールがすでに &lt;code&gt;other&lt;/code&gt; モジュールを読み取る場合、このメソッドは何もしません。</target>
        </trans-unit>
        <trans-unit id="269b3f0fe8fb44df4ce0a6fe047dfebd11282f41" translate="yes" xml:space="preserve">
          <source>If the calling method is interested in retrieving the named property then it would have to test the element to see if it is a proxy class.</source>
          <target state="translated">呼び出し側のメソッドが名前付きプロパティの取得に興味がある場合、それがプロキシクラスであるかどうかを確認するために要素をテストしなければなりません。</target>
        </trans-unit>
        <trans-unit id="9253130a27a78e3a08350cf89cd42b9d30c402d8" translate="yes" xml:space="preserve">
          <source>If the certificate is of type X.509 and has a</source>
          <target state="translated">証明書のタイプがX.509で、かつ</target>
        </trans-unit>
        <trans-unit id="aaacbc8edbe2f8c424f5386b7ac1e0da44e25e33" translate="yes" xml:space="preserve">
          <source>If the channel has already been closed then this method returns immediately. Otherwise it marks the channel as closed and then invokes the &lt;a href=&quot;#implCloseChannel()&quot;&gt;&lt;code&gt;implCloseChannel&lt;/code&gt;&lt;/a&gt; method in order to complete the close operation.</source>
          <target state="translated">チャネルがすでに閉じられている場合、このメソッドはすぐに戻ります。それ以外の場合は、チャネルを閉じたものとしてマークしてから、閉じる操作を完了するために&lt;a href=&quot;#implCloseChannel()&quot;&gt; &lt;code&gt;implCloseChannel&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="b697d0518cb0986befd095c4c07f371b7bc19eb6" translate="yes" xml:space="preserve">
          <source>If the channel has already been closed then this method returns immediately. Otherwise it marks the channel as closed and then invokes the &lt;a href=&quot;abstractinterruptiblechannel#implCloseChannel--&quot;&gt;&lt;code&gt;implCloseChannel&lt;/code&gt;&lt;/a&gt; method in order to complete the close operation.</source>
          <target state="translated">チャネルがすでに閉じている場合、このメソッドはすぐに戻ります。それ以外の場合は、チャネルにクローズ済みのマークを付け、クローズ操作を完了するために&lt;a href=&quot;abstractinterruptiblechannel#implCloseChannel--&quot;&gt; &lt;code&gt;implCloseChannel&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="d252f820f6c574294d1558501615ce3622e72864" translate="yes" xml:space="preserve">
          <source>If the channel is a member of a multicast group then the membership is &lt;a href=&quot;membershipkey#drop()&quot;&gt;&lt;code&gt;dropped&lt;/code&gt;&lt;/a&gt;. Upon return, the &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;membership-key&lt;/code&gt;&lt;/a&gt; will be &lt;a href=&quot;membershipkey#isValid()&quot;&gt;&lt;code&gt;invalid&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">チャネルがマルチキャストグループのメンバーである場合、メンバーシップは&lt;a href=&quot;membershipkey#drop()&quot;&gt; &lt;code&gt;dropped&lt;/code&gt; &lt;/a&gt;ます。戻ると、&lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;membership-key&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;membershipkey#isValid()&quot;&gt; &lt;code&gt;invalid&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="258471a2858a2bd50b28d36eb9c0232d73db11d8" translate="yes" xml:space="preserve">
          <source>If the channel is a member of a multicast group then the membership is &lt;a href=&quot;membershipkey#drop--&quot;&gt;&lt;code&gt;dropped&lt;/code&gt;&lt;/a&gt;. Upon return, the &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;membership-key&lt;/code&gt;&lt;/a&gt; will be &lt;a href=&quot;membershipkey#isValid--&quot;&gt;&lt;code&gt;invalid&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">チャネルがマルチキャストグループのメンバーである場合、メンバーシップは&lt;a href=&quot;membershipkey#drop--&quot;&gt; &lt;code&gt;dropped&lt;/code&gt; &lt;/a&gt;ます。戻ったとき、&lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;membership-key&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;membershipkey#isValid--&quot;&gt; &lt;code&gt;invalid&lt;/code&gt; &lt;/a&gt;になります。</target>
        </trans-unit>
        <trans-unit id="a6196d1052cc76b7a767033a57f3c2ef48c6f463" translate="yes" xml:space="preserve">
          <source>If the channel is connected to a remote peer that is bound to multiple addresses then it is these addresses that the channel's socket is connected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca12487d5034313786755dfdbb1487ee9174606" translate="yes" xml:space="preserve">
          <source>If the channel's key is not already in the selected-key set then it is added to that set and its ready-operation set is modified to identify exactly those operations for which the channel is now reported to be ready. Any readiness information previously recorded in the ready set is discarded.</source>
          <target state="translated">チャンネルのキーが selected-key セットにない場合は、そのキーが selected-key セットに追加され、そのready-operation セットが修正されて、そのチャンネルの準備ができたと報告された操作を正確に識別することができるようになります。以前に準備完了セットに記録されていた準備完了情報は破棄されます。</target>
        </trans-unit>
        <trans-unit id="a74fcb99fe153ea5c299a617e13d7e98b79feb03" translate="yes" xml:space="preserve">
          <source>If the character &lt;code&gt;oldChar&lt;/code&gt; does not occur in the character sequence represented by this &lt;code&gt;String&lt;/code&gt; object, then a reference to this &lt;code&gt;String&lt;/code&gt; object is returned. Otherwise, a &lt;code&gt;String&lt;/code&gt; object is returned that represents a character sequence identical to the character sequence represented by this &lt;code&gt;String&lt;/code&gt; object, except that every occurrence of &lt;code&gt;oldChar&lt;/code&gt; is replaced by an occurrence of &lt;code&gt;newChar&lt;/code&gt;.</source>
          <target state="translated">文字場合 &lt;code&gt;oldChar&lt;/code&gt; は、文字列では発生しませんが、このによって表される &lt;code&gt;String&lt;/code&gt; オブジェクトは、この参照 &lt;code&gt;String&lt;/code&gt; オブジェクトが返されます。そうでなければ、 &lt;code&gt;String&lt;/code&gt; オブジェクトは、文字列と同一の文字列が、この表される表す返される &lt;code&gt;String&lt;/code&gt; のすべての出現することを除いて、オブジェクト &lt;code&gt;oldChar&lt;/code&gt; が発生によって置き換えられる &lt;code&gt;newChar&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2356291f03c93e71b96f7a671fd497dc56ec73d3" translate="yes" xml:space="preserve">
          <source>If the character defined by the mnemonic is found within the button's label string, the first occurrence of it will be underlined to indicate the mnemonic to the user.</source>
          <target state="translated">ニーモニックによって定義された文字がボタンのラベル文字列の中にある場合、最初に出現した文字には下線が引かれ、ユーザにニーモニックを示します。</target>
        </trans-unit>
        <trans-unit id="7e2733b75e92ebe16a2ce70438529de312b56641" translate="yes" xml:space="preserve">
          <source>If the character does not have a numeric value, then -1 is returned. If the character has a numeric value that cannot be represented as a nonnegative integer (for example, a fractional value), then -2 is returned.</source>
          <target state="translated">文字が数値を持たない場合は -1 が返されます。キ ャ ラ ク タ が非負の整数 (分数値など)で表せない数値を持つ場合は、-2 が返されます。</target>
        </trans-unit>
        <trans-unit id="a94e7ca6896af3627bbb39f5e579611a67b2ce91" translate="yes" xml:space="preserve">
          <source>If the characteristic &lt;code&gt;IDENTITY_FINISH&lt;/code&gt; is set, this function may be presumed to be an identity transform with an unchecked cast from &lt;code&gt;A&lt;/code&gt; to &lt;code&gt;R&lt;/code&gt;.</source>
          <target state="translated">標数 &lt;code&gt;IDENTITY_FINISH&lt;/code&gt; が設定されている場合、この関数は、 &lt;code&gt;A&lt;/code&gt; から &lt;code&gt;R&lt;/code&gt; へのチェックされていないキャストを使用したID変換であると見なされる場合があります。</target>
        </trans-unit>
        <trans-unit id="1ef817a66adab96584398608e88fbe1d608af344" translate="yes" xml:space="preserve">
          <source>If the characteristic &lt;code&gt;IDENTITY_TRANSFORM&lt;/code&gt; is set, this function may be presumed to be an identity transform with an unchecked cast from &lt;code&gt;A&lt;/code&gt; to &lt;code&gt;R&lt;/code&gt;.</source>
          <target state="translated">特性 &lt;code&gt;IDENTITY_TRANSFORM&lt;/code&gt; が設定されている場合、この関数は &lt;code&gt;A&lt;/code&gt; から &lt;code&gt;R&lt;/code&gt; へのチェックされていないキャストを持つ恒等変換であると推定されます。</target>
        </trans-unit>
        <trans-unit id="8a0ae11bb0853d1ee68bf0914e7935640792833e" translate="yes" xml:space="preserve">
          <source>If the check box argument is &lt;code&gt;null&lt;/code&gt;, all check boxes in this check box group are deselected. If the check box argument belongs to a different check box group, this method does nothing.</source>
          <target state="translated">チェックボックス引数が &lt;code&gt;null&lt;/code&gt; の場合、このチェックボックスグループ内のすべてのチェックボックスが選択解除されます。チェックボックス引数が別のチェックボックスグループに属している場合、このメソッドは何もしません。</target>
        </trans-unit>
        <trans-unit id="497068c1a55f2d965c9c1d485ba0e4ac4c0bfb03" translate="yes" xml:space="preserve">
          <source>If the check fails we throw a SecurityException, otherwise we return normally.</source>
          <target state="translated">チェックに失敗した場合は SecurityException をスローします。</target>
        </trans-unit>
        <trans-unit id="f0f200f54b8913d720a0fc8f80cb58e7fb832b09" translate="yes" xml:space="preserve">
          <source>If the chronology makes active use of eras, such as &lt;code&gt;JapaneseChronology&lt;/code&gt; then the year-of-era will be validated against the era. For other chronologies, validation is optional.</source>
          <target state="translated">年表が &lt;code&gt;JapaneseChronology&lt;/code&gt; などの時代を積極的に使用している場合、年はその年に対して検証されます。他の年表では、検証はオプションです。</target>
        </trans-unit>
        <trans-unit id="907a36ef0b6c060f7a9d6a76251b166f6ce74a74" translate="yes" xml:space="preserve">
          <source>If the class can successfully be loaded, an attempt will be made to create an instance of it by calling &lt;code&gt;Class.newInstance&lt;/code&gt;. An attempt will be made to narrow the instance to type &lt;code&gt;java.awt.Component&lt;/code&gt; to display the object.</source>
          <target state="translated">クラスを正常にロードできる場合は、 &lt;code&gt;Class.newInstance&lt;/code&gt; を呼び出してクラスのインスタンスを作成しようとします。インスタンスを絞り込んで &lt;code&gt;java.awt.Component&lt;/code&gt; と入力し、オブジェクトを表示しようとします。</target>
        </trans-unit>
        <trans-unit id="993043b6674c4a35b36d9c742df1bbfe992c7c06" translate="yes" xml:space="preserve">
          <source>If the class has several constructors, &lt;a href=&quot;../standardoperation#NEW&quot;&gt;&lt;code&gt;StandardOperation.NEW&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;StaticClass&lt;/code&gt; will try to select the most specific applicable constructor. You might want to expose a mechanism in your language for selecting a constructor with an explicit signature through &lt;a href=&quot;beanslinker#getConstructorMethod(java.lang.Class,java.lang.String)&quot;&gt;&lt;code&gt;BeansLinker.getConstructorMethod(Class, String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7a6047da53758486c24b6ceb6b4575875d974a" translate="yes" xml:space="preserve">
          <source>If the class implements the interface &lt;a href=&quot;dynamicmbean&quot;&gt;&lt;code&gt;DynamicMBean&lt;/code&gt;&lt;/a&gt; then the MBean is a Dynamic MBean. Note that the class &lt;code&gt;StandardMBean&lt;/code&gt; implements this interface, so this case applies to a Standard MBean or MXBean created using the class &lt;code&gt;StandardMBean&lt;/code&gt;.</source>
          <target state="translated">クラスがインターフェース&lt;a href=&quot;dynamicmbean&quot;&gt; &lt;code&gt;DynamicMBean&lt;/code&gt; を&lt;/a&gt;実装する場合、MBeanは動的MB​​eanです。クラス &lt;code&gt;StandardMBean&lt;/code&gt; がこのインターフェースを実装することに注意してください。したがって、このケースは、クラス &lt;code&gt;StandardMBean&lt;/code&gt; を使用して作成された標準MBeanまたはMXBeanに適用されます。</target>
        </trans-unit>
        <trans-unit id="d9ebf03c3837794b9118548515dce9c5eeac747f" translate="yes" xml:space="preserve">
          <source>If the class is &lt;code&gt;VarHandle&lt;/code&gt; and the name string corresponds to the name of a signature-polymorphic access mode method, the resulting method handle is equivalent to one produced by &lt;a href=&quot;methodhandles#varHandleInvoker(java.lang.invoke.VarHandle.AccessMode,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;MethodHandles.varHandleInvoker(java.lang.invoke.VarHandle.AccessMode, java.lang.invoke.MethodType)&lt;/code&gt;&lt;/a&gt; with the access mode corresponding to the name string and with the same &lt;code&gt;type&lt;/code&gt; arguments.</source>
          <target state="translated">クラスが &lt;code&gt;VarHandle&lt;/code&gt; であり、名前文字列が署名多態性アクセスモードメソッドの名前に対応する場合、結果のメソッドハンドルは、&lt;a href=&quot;methodhandles#varHandleInvoker(java.lang.invoke.VarHandle.AccessMode,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;MethodHandles.varHandleInvoker(java.lang.invoke.VarHandle.AccessMode, java.lang.invoke.MethodType)&lt;/code&gt; &lt;/a&gt;によって生成されたものと同等です。 invoke.MethodType）は、名前文字列に対応するアクセスモードで、同じ &lt;code&gt;type&lt;/code&gt; 引数を使用します。</target>
        </trans-unit>
        <trans-unit id="3b8178b28745cbf9a8c356b7ccd5c7490b446121" translate="yes" xml:space="preserve">
          <source>If the class is successfully loaded from the &lt;code&gt;defaultLoader&lt;/code&gt;, that class is returned. If an exception other than &lt;code&gt;ClassNotFoundException&lt;/code&gt; is thrown, that exception is thrown to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4839c4011be06ed972a50b4707c4c87c520b22" translate="yes" xml:space="preserve">
          <source>If the class loader is a &lt;a href=&quot;classloader#builtinLoaders&quot;&gt; built-in class loader&lt;/a&gt; or is not named then the first element and its following &lt;code&gt;&quot;/&quot;&lt;/code&gt; are omitted as shown in &quot;&lt;code&gt;acme@2.1/org.acme.Lib.test(Lib.java:80)&lt;/code&gt;&quot;. If the first element is omitted and the module is an unnamed module, the second element and its following &lt;code&gt;&quot;/&quot;&lt;/code&gt; are also omitted as shown in &quot;&lt;code&gt;MyClass.mash(MyClass.java:9)&lt;/code&gt;&quot;.</source>
          <target state="translated">クラスローダーが&lt;a href=&quot;classloader#builtinLoaders&quot;&gt;組み込みのクラスローダーである&lt;/a&gt;か、名前が付けられていない場合、「 &lt;code&gt;acme@2.1/org.acme.Lib.test(Lib.java:80)&lt;/code&gt; 」に示すように、最初の要素とそれに続く &lt;code&gt;&quot;/&quot;&lt;/code&gt; は省略されます。 。最初の要素が省略され、モジュールが名前のないモジュールである場合、「 &lt;code&gt;MyClass.mash(MyClass.java:9)&lt;/code&gt; 」に示すように、2番目の要素とそれに続く &lt;code&gt;&quot;/&quot;&lt;/code&gt; も省略されます。</target>
        </trans-unit>
        <trans-unit id="4a4555f48b556983b593c81b2e7a7b846ff92e83" translate="yes" xml:space="preserve">
          <source>If the class loader is the system class loader (see &lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;&lt;code&gt;ClassLoader.getSystemClassLoader()&lt;/code&gt;&lt;/a&gt;), a parent of the system class loader such as the loader used for installed extensions, or the bootstrap class loader (which may be represented by &lt;code&gt;null&lt;/code&gt;), then the value of the &lt;code&gt;&lt;span id=&quot;java.rmi.server.codebase&quot;&gt;java.rmi.server.codebase&lt;/span&gt;&lt;/code&gt; property (or possibly an earlier cached value) is returned, or &lt;code&gt;null&lt;/code&gt; is returned if that property is not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572e2e8607da1aaa832eee294d600cd0b74c2f51" translate="yes" xml:space="preserve">
          <source>If the class loader is the system class loader (see &lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt;&lt;code&gt;ClassLoader.getSystemClassLoader()&lt;/code&gt;&lt;/a&gt;), a parent of the system class loader such as the loader used for installed extensions, or the bootstrap class loader (which may be represented by &lt;code&gt;null&lt;/code&gt;), then the value of the &lt;code&gt;java.rmi.server.codebase&lt;/code&gt; property (or possibly an earlier cached value) is returned, or &lt;code&gt;null&lt;/code&gt; is returned if that property is not set.</source>
          <target state="translated">クラスローダーがシステムクラスローダー（&lt;a href=&quot;../../../../java.base/java/lang/classloader#getSystemClassLoader()&quot;&gt; &lt;code&gt;ClassLoader.getSystemClassLoader()&lt;/code&gt; を&lt;/a&gt;参照）、インストールされた拡張機能に使用されるローダーなどのシステムクラスローダーの親、またはブートストラップクラスローダー（ &lt;code&gt;null&lt;/code&gt; で表される場合があります）の場合、 &lt;code&gt;java.rmi.server.codebase&lt;/code&gt; プロパティの値（または以前にキャッシュされた値）が返されるか、そのプロパティが設定されていない場合は &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="18dfc6c9d8012fcb4afd5d4cd53b47b6e173ddd4" translate="yes" xml:space="preserve">
          <source>If the class loader of the given module defines other modules and the given name is a class defined in a different module, this method returns &lt;code&gt;null&lt;/code&gt; after the class is loaded.</source>
          <target state="translated">指定されたモジュールのクラスローダーが他のモジュールを定義し、指定された名前が別のモジュールで定義されたクラスである場合、このメソッドはクラスがロードされた後に &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e1700f5a5e32f3348ed050e68e0d59e005f7128b" translate="yes" xml:space="preserve">
          <source>If the class or interface is &lt;a href=&quot;#isHidden()&quot;&gt;hidden&lt;/a&gt;, then the result is a string of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7320eb1655071247a7cb27de5cad18feb2e575d5" translate="yes" xml:space="preserve">
          <source>If the class or interface is hidden, then the result is a string of the form: &lt;code&gt;N + '/' + &amp;lt;suffix&amp;gt;&lt;/code&gt; where &lt;code&gt;N&lt;/code&gt; is the &lt;a href=&quot;classloader#binary-name&quot;&gt;binary name&lt;/a&gt; indicated by the &lt;code&gt;class&lt;/code&gt; file passed to &lt;a href=&quot;invoke/methodhandles.lookup#defineHiddenClass(byte%5B%5D,boolean,java.lang.invoke.MethodHandles.Lookup.ClassOption...)&quot;&gt;&lt;code&gt;Lookup::defineHiddenClass&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;&amp;lt;suffix&amp;gt;&lt;/code&gt; is an unqualified name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="647c68d85ca3579e0c43d0d82206a9ec49464973" translate="yes" xml:space="preserve">
          <source>If the class or interface is not &lt;a href=&quot;#isHidden()&quot;&gt;hidden&lt;/a&gt;, then the &lt;a href=&quot;classloader#binary-name&quot;&gt;binary name&lt;/a&gt; of the class or interface is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad83fe743eecc6f15470c8181d8587012fcdace" translate="yes" xml:space="preserve">
          <source>If the class or interface is not &lt;a href=&quot;#isHidden()&quot;&gt;hidden&lt;/a&gt;, then the result is a field descriptor (JVMS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.3.2&quot;&gt;4.3.2&lt;/a&gt;) for the class or interface. Calling &lt;a href=&quot;constant/classdesc#ofDescriptor(java.lang.String)&quot;&gt;&lt;code&gt;ClassDesc::ofDescriptor&lt;/code&gt;&lt;/a&gt; with the result descriptor string produces a &lt;a href=&quot;constant/classdesc&quot;&gt;&lt;code&gt;ClassDesc&lt;/code&gt;&lt;/a&gt; describing this class or interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6cbdce4f03e8864e2078a8ebda20df5d53693b1" translate="yes" xml:space="preserve">
          <source>If the class or interface represented by this &lt;code&gt;Class&lt;/code&gt; object is a member of another class, returns the &lt;code&gt;Class&lt;/code&gt; object representing the class in which it was declared.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトによって表されるクラスまたはインターフェイスが別のクラスのメンバーである場合、それが宣言されたクラスを表す &lt;code&gt;Class&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="952c977645377144d1e9387499dba9c6a0e6f790" translate="yes" xml:space="preserve">
          <source>If the class or interface represented by this &lt;code&gt;Class&lt;/code&gt; object is a member of another class, returns the &lt;code&gt;Class&lt;/code&gt; object representing the class in which it was declared. This method returns null if this class or interface is not a member of any other class. If this &lt;code&gt;Class&lt;/code&gt; object represents an array class, a primitive type, or void,then this method returns null.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトによって表されるクラスまたはインターフェースが別のクラスのメンバーである場合、それが宣言されたクラスを表す &lt;code&gt;Class&lt;/code&gt; オブジェクトを返します。このクラスまたはインターフェイスが他のクラスのメンバーでない場合、このメソッドはnullを返します。この &lt;code&gt;Class&lt;/code&gt; オブジェクトが配列クラス、プリミティブ型、またはvoidを表す場合、このメソッドはnullを返します。</target>
        </trans-unit>
        <trans-unit id="c4b1d6d0e3e6bf78e4579733a8155fce8794f591" translate="yes" xml:space="preserve">
          <source>If the class path of the class loader includes remote network URLs then those URLs may be dereferenced in the process of searching for provider-configuration files.</source>
          <target state="translated">クラス・ローダのクラス・パスにリモート・ネットワークの URL が含まれている場合、プロバイダ設定ファイルを検索する際に、それらの URL が参照される可能性があります。</target>
        </trans-unit>
        <trans-unit id="5149c7a2ea949082634b5eade9a189fb43ba3574" translate="yes" xml:space="preserve">
          <source>If the class pointed to by the property cannot be loaded, or does not correspond to a valid subclass of MBeanServerBuilder then an exception is propagated, and no MBeanServer can be created until the &lt;b&gt;javax.management.builder.initial&lt;/b&gt; system property is reset to valid value.</source>
          <target state="translated">プロパティが指すクラスをロードできないか、MBeanServerBuilderの有効なサブクラスに対応していない場合、例外が伝播され、&lt;b&gt;javax.management.builder.initial&lt;/b&gt;システムプロパティが有効な値にリセットされるまでMBeanServerを作成できません。</target>
        </trans-unit>
        <trans-unit id="255675b731bcc7202d59daefb4cbc3dbea4fde7b" translate="yes" xml:space="preserve">
          <source>If the class was found using the above steps, and the &lt;code&gt;resolve&lt;/code&gt; flag is true, this method will then invoke the &lt;a href=&quot;#resolveClass(java.lang.Class)&quot;&gt;&lt;code&gt;resolveClass(Class)&lt;/code&gt;&lt;/a&gt; method on the resulting &lt;code&gt;Class&lt;/code&gt; object.</source>
          <target state="translated">上記の手順を使用してクラスが見つかり、 &lt;code&gt;resolve&lt;/code&gt; フラグがtrueの場合、このメソッドは、結果の &lt;code&gt;Class&lt;/code&gt; オブジェクトに対して&lt;a href=&quot;#resolveClass(java.lang.Class)&quot;&gt; &lt;code&gt;resolveClass(Class)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="a48f463646ddc67b0927be2d8f5a0d7e6779ec57" translate="yes" xml:space="preserve">
          <source>If the class was found using the above steps, and the &lt;code&gt;resolve&lt;/code&gt; flag is true, this method will then invoke the &lt;a href=&quot;classloader#resolveClass-java.lang.Class-&quot;&gt;&lt;code&gt;resolveClass(Class)&lt;/code&gt;&lt;/a&gt; method on the resulting &lt;code&gt;Class&lt;/code&gt; object.</source>
          <target state="translated">上記の手順を使用してクラスが見つかり、 &lt;code&gt;resolve&lt;/code&gt; フラグがtrueの場合、このメソッドは結果の &lt;code&gt;Class&lt;/code&gt; オブジェクトで&lt;a href=&quot;classloader#resolveClass-java.lang.Class-&quot;&gt; &lt;code&gt;resolveClass(Class)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="003444596c67295858def4a629af62005e80f04a" translate="yes" xml:space="preserve">
          <source>If the client does not specify a &lt;code&gt;JobPriority&lt;/code&gt; attribute for a Print Job and the printer does support the JobPriority attribute, the printer must use an implementation-defined default JobPriority value.</source>
          <target state="translated">クライアントが印刷ジョブの &lt;code&gt;JobPriority&lt;/code&gt; 属性を指定せず、プリンターがJobPriority属性をサポートしている場合、プリンターは実装定義のデフォルトのJobPriority値を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="0cb1171375f133959d5fe66bf3b2a054030b8896" translate="yes" xml:space="preserve">
          <source>If the client does not specify a JobPriority attribute for a Print Job and the printer does support the JobPriority attribute, the printer must use an implementation-defined default JobPriority value.</source>
          <target state="translated">クライアントが印刷ジョブのJobPriority属性を指定せず、プリンタがJobPriority属性をサポートしている場合、プリンタは実装で定義されたデフォルトのJobPriority値を使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="3d048044cc6cddb0cf0dbc1da3f8b399bcca1c52" translate="yes" xml:space="preserve">
          <source>If the client does not supply this attribute in a Print Request and the printer supports this attribute, the printer must use its (implementation-dependent) default &lt;code&gt;JobHoldUntil&lt;/code&gt; value at job submission time (unlike most job template attributes that are used if necessary at job processing time).</source>
          <target state="translated">クライアントが印刷要求でこの属性を提供せず、プリンターがこの属性をサポートしている場合、プリンターはジョブ &lt;code&gt;JobHoldUntil&lt;/code&gt; 時にその（実装に依存する）デフォルトのJobHoldUntil値を使用する必要があります（ジョブ処理で必要に応じて使用されるほとんどのジョブテンプレート属性とは異なります）時間）。</target>
        </trans-unit>
        <trans-unit id="8819695d5b9293144506d78213d046dbf29c7943" translate="yes" xml:space="preserve">
          <source>If the client does not supply this attribute in a Print Request and the printer supports this attribute, the printer must use its (implementation-dependent) default JobHoldUntil value at job submission time (unlike most job template attributes that are used if necessary at job processing time).</source>
          <target state="translated">クライアントが印刷要求でこの属性を提供せず,プリンタがこの属性をサポートしている場合,プリンタはジョブ投入時にその(実装に依存した)デフォルトのJobHoldUntil値を使用しなければならない(ジョブ処理時に必要に応じて使用されるほとんどのジョブテンプレート属性とは異なり)。</target>
        </trans-unit>
        <trans-unit id="b95b0051a1d9e6aeda4cecd24f2f226586dceb7a" translate="yes" xml:space="preserve">
          <source>If the column class as returned by &lt;code&gt;getColumnClass&lt;/code&gt; is &lt;code&gt;String&lt;/code&gt;, use the &lt;code&gt;Comparator&lt;/code&gt; returned by &lt;code&gt;Collator.getInstance()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getColumnClass&lt;/code&gt; によって返される列クラスが &lt;code&gt;String&lt;/code&gt; の場合、 &lt;code&gt;Collator.getInstance()&lt;/code&gt; によって返される &lt;code&gt;Comparator&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="1d2bea1ba481bf3017c0de86b5926674c8b57a55" translate="yes" xml:space="preserve">
          <source>If the column class implements &lt;code&gt;Comparable&lt;/code&gt;, use a &lt;code&gt;Comparator&lt;/code&gt; that invokes the &lt;code&gt;compareTo&lt;/code&gt; method.</source>
          <target state="translated">列クラスが &lt;code&gt;Comparable&lt;/code&gt; を実装している場合は、 &lt;code&gt;compareTo&lt;/code&gt; メソッドを呼び出す &lt;code&gt;Comparator&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="425608db615fcee29a758153b3f2f63df2fa7cde" translate="yes" xml:space="preserve">
          <source>If the column index is valid but the row index is less than zero the method returns a rectangle with the &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; values set appropriately and the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; values both set to zero. In general, when either the row or column indices indicate a cell outside the appropriate range, the method returns a rectangle depicting the closest edge of the closest cell that is within the table's range. When both row and column indices are out of range the returned rectangle covers the closest point of the closest cell.</source>
          <target state="translated">列インデックスが有効であるが行インデックスがゼロ未満の場合、メソッドは、 &lt;code&gt;y&lt;/code&gt; と &lt;code&gt;height&lt;/code&gt; の値が適切に設定され、 &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;width&lt;/code&gt; の値が両方ともゼロに設定された長方形を返します。一般に、行または列のインデックスが適切な範囲外のセルを示している場合、メソッドは、テーブルの範囲内にある最も近いセルの最も近いエッジを表す長方形を返します。行と列の両方のインデックスが範囲外の場合、返される長方形は最も近いセルの最も近いポイントをカバーします。</target>
        </trans-unit>
        <trans-unit id="6f068094c0b9101658e1bd4638d11b46b0682d00" translate="yes" xml:space="preserve">
          <source>If the combiner has a void return, no result will be inserted, and the first &lt;code&gt;N&lt;/code&gt; parameter types of the target must exactly match the parameters of the combiner.</source>
          <target state="translated">コンバイナにvoidの戻り値がある場合、結果は挿入されず、ターゲットの最初の &lt;code&gt;N&lt;/code&gt; パラメータタイプはコンバイナのパラメータと正確に一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="7bd33812eb44d59d69e1fa86993dc6c1b417f658" translate="yes" xml:space="preserve">
          <source>If the combiner returns a value, the first parameter type of the target must be identical with the return type of the combiner, and the next &lt;code&gt;N&lt;/code&gt; parameter types of the target must exactly match the parameters of the combiner.</source>
          <target state="translated">コンバイナが値を返す場合、ターゲットの最初のパラメータタイプはコンバイナの戻りタイプと同一である必要があり、ターゲットの次の &lt;code&gt;N&lt;/code&gt; パラメータタイプはコンバイナのパラメータと正確に一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="2a835e3176ef9901dbf657a51a0dc111ab329f96" translate="yes" xml:space="preserve">
          <source>If the combo box is editable, then this value may not have been added to the combo box with &lt;code&gt;addItem&lt;/code&gt;, &lt;code&gt;insertItemAt&lt;/code&gt; or the data constructors.</source>
          <target state="translated">コンボボックスが編集可能である場合、この値は、 &lt;code&gt;addItem&lt;/code&gt; 、 &lt;code&gt;insertItemAt&lt;/code&gt; 、またはデータコンストラクターを使用してコンボボックスに追加されていない可能性があります。</target>
        </trans-unit>
        <trans-unit id="f746d1a0f0f5d1b71eddaef84d93690d98f495a0" translate="yes" xml:space="preserve">
          <source>If the comment is present (not null) it is written, otherwise an an empty comment is written</source>
          <target state="translated">コメントがあれば (nullではなく)それが書かれ、なければ空のコメントが書かれます。</target>
        </trans-unit>
        <trans-unit id="700d0c6d66bdf7dd366a71fc298f1463af466dfa" translate="yes" xml:space="preserve">
          <source>If the comments argument is not null, then an ASCII &lt;code&gt;#&lt;/code&gt; character, the comments string, and a line separator are first written to the output stream. Thus, the &lt;code&gt;comments&lt;/code&gt; can serve as an identifying comment. Any one of a line feed ('\n'), a carriage return ('\r'), or a carriage return followed immediately by a line feed in comments is replaced by a line separator generated by the &lt;code&gt;Writer&lt;/code&gt; and if the next character in comments is not character &lt;code&gt;#&lt;/code&gt; or character &lt;code&gt;!&lt;/code&gt; then an ASCII &lt;code&gt;#&lt;/code&gt; is written out after that line separator.</source>
          <target state="translated">コメント引数がnullでない場合、ASCII &lt;code&gt;#&lt;/code&gt; 文字、コメント文字列、および行区切り文字が最初に出力ストリームに書き込まれます。したがって、 &lt;code&gt;comments&lt;/code&gt; は識別コメントとして機能します。改行（ '\ n'）、復帰（ '\ r'）、または復帰の直後にコメントの改行が続くものは、 &lt;code&gt;Writer&lt;/code&gt; によって生成された行区切り文字に置き換えられます。コメント内の文字 &lt;code&gt;#&lt;/code&gt; または文字ではありません &lt;code&gt;!&lt;/code&gt; 次に、その行区切り文字の後にASCII &lt;code&gt;#&lt;/code&gt; が書き出されます。</target>
        </trans-unit>
        <trans-unit id="d734df054f4a2c1ef528f0ad746950c442305d2a" translate="yes" xml:space="preserve">
          <source>If the component doesn't have composed text, the offset should be ignored, and the location returned should reflect the beginning (in line direction) of the highlight in the last line containing selected text. For example, for horizontal left-to-right text (such as English), the location to the left of the left-most character on the last line containing selected text is returned. For vertical top-to-bottom text, with lines proceeding from right to left, the location to the top of the left-most line containing selected text is returned.</source>
          <target state="translated">コンポーネントが構成されたテキストを持たない場合、オフセットは無視され、返される位置は、選択されたテキストを含む最後の行のハイライトの先頭(行方向)を反映している必要があります。例えば、水平方向の左から右へのテキスト(英語など)の場合、選択されたテキストを含む最後の行の左端の文字の左にある位置が返されます。縦方向の上から下へのテキス ト の場合、 行が右から左へ進んでいる場合には、 選択されたテキス ト を含む最後の行の左端の行の上端の位置が返されます。</target>
        </trans-unit>
        <trans-unit id="52458478773761d2bba8b8c640a23a52fc2877dc" translate="yes" xml:space="preserve">
          <source>If the component has composed text (because the most recent InputMethodEvent sent to it contained composed text), then the offset is relative to the composed text - offset 0 indicates the first character in the composed text. The location returned should be for this character.</source>
          <target state="translated">コンポーネントが構成されたテキストを持っている場合(コンポーネントに送信された最新のInputMethodEventに構成されたテキストが含まれているため)、オフセットは構成されたテキストからの相対的なものです。返される位置は、この文字のためのものでなければなりません。</target>
        </trans-unit>
        <trans-unit id="fa083a799f0c4b27fbcd704b725195417a71c40c" translate="yes" xml:space="preserve">
          <source>If the component is &lt;code&gt;null&lt;/code&gt;, or the &lt;code&gt;
 GraphicsConfiguration&lt;/code&gt; associated with this component is &lt;code&gt;null&lt;/code&gt;, the window is placed in the center of the screen. The center point can be obtained with the &lt;a href=&quot;graphicsenvironment#getCenterPoint()&quot;&gt;&lt;code&gt;GraphicsEnvironment.getCenterPoint&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">コンポーネントが &lt;code&gt;null&lt;/code&gt; の場合、またはこのコンポーネントに関連付けられている &lt;code&gt; GraphicsConfiguration&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; の場合、ウィンドウは画面の中央に配置されます。中心点は、&lt;a href=&quot;graphicsenvironment#getCenterPoint()&quot;&gt; &lt;code&gt;GraphicsEnvironment.getCenterPoint&lt;/code&gt; &lt;/a&gt;メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="0dd6f4c457146450ded7e20b80ac380bbab18e53" translate="yes" xml:space="preserve">
          <source>If the component is a child of some other container, it is removed from that container before being added to this container. The important difference between this method and &lt;code&gt;java.awt.Container.add(Component, int)&lt;/code&gt; is that this method doesn't call &lt;code&gt;removeNotify&lt;/code&gt; on the component while removing it from its previous container unless necessary and when allowed by the underlying native windowing system. This way, if the component has the keyboard focus, it maintains the focus when moved to the new position.</source>
          <target state="translated">コンポーネントが他のコンテナの子である場合、このコンテナに追加される前に、そのコンテナから削除されます。このメソッドと &lt;code&gt;java.awt.Container.add(Component, int)&lt;/code&gt; の重要な違いは、このメソッドは、必要な場合や、基盤となるネイティブウィンドウシステムで許可されている場合を除き、コンポーネントを前のコンテナーから削除するときに、コンポーネントに対して &lt;code&gt;removeNotify&lt;/code&gt; を呼び出さないことです。このように、コンポーネントにキーボードフォーカスがある場合、新しい位置に移動してもフォーカスが維持されます。</target>
        </trans-unit>
        <trans-unit id="9f28aca33e4b7d20b3d3eab00c327afedf0feed4" translate="yes" xml:space="preserve">
          <source>If the component is marked as opaque, the background is painted in the current background color of the component.</source>
          <target state="translated">コンポーネントが不透明とマークされている場合、背景はコンポーネントの現在の背景色で塗られます。</target>
        </trans-unit>
        <trans-unit id="49528cc920475018bcff626e6ad10c005e36e46d" translate="yes" xml:space="preserve">
          <source>If the component is not &lt;code&gt;null&lt;/code&gt; and is shown on the screen, then the window is located in such a way that the center of the window coincides with the center of the component.</source>
          <target state="translated">コンポーネントが &lt;code&gt;null&lt;/code&gt; でなく、画面に表示されている場合、ウィンドウは、ウィンドウの中心がコンポーネントの中心と一致するように配置されます。</target>
        </trans-unit>
        <trans-unit id="5eda8ad7764dbe33c30b572a11e1b1539c4e718f" translate="yes" xml:space="preserve">
          <source>If the component is not &lt;code&gt;null&lt;/code&gt;, but it is not currently showing, the window is placed in the center of the target screen defined by the &lt;code&gt;
 GraphicsConfiguration&lt;/code&gt; associated with this component.</source>
          <target state="translated">コンポーネントが &lt;code&gt;null&lt;/code&gt; ではないが、現在表示されていない場合、ウィンドウは、このコンポーネントに関連付けられた &lt;code&gt; GraphicsConfiguration&lt;/code&gt; によって定義されたターゲット画面の中央に配置されます。</target>
        </trans-unit>
        <trans-unit id="f9fde55638308a4ea2d10d2c4b49e0eee2a91067" translate="yes" xml:space="preserve">
          <source>If the component is not an ancestor of this container and has a non-null parent, it is removed from its current parent before it is added to this container.</source>
          <target state="translated">コンポーネントがこのコンテナの祖先ではなく、非ヌル親を持つ場合、そのコンポーネントは、このコンテナに追加される前に、現在の親から削除されます。</target>
        </trans-unit>
        <trans-unit id="a58ff69484b85d5dedc93ea849fe6dfb636f6bc6" translate="yes" xml:space="preserve">
          <source>If the component is of a primitive type, using the corresponding primitive wrapper class &lt;code&gt;PW&lt;/code&gt; (the corresponding wrapper class for &lt;code&gt;int&lt;/code&gt; is &lt;code&gt;
 java.lang.Integer&lt;/code&gt;, and so on), the component is considered equal if and only if &lt;code&gt;
 PW.valueOf(this.c()).equals(PW.valueOf(r.c()))&lt;/code&gt; would return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767273f6356c7f1819c424c6f45b8a2226912dcd" translate="yes" xml:space="preserve">
          <source>If the component is of a reference type, the component is considered equal if and only if &lt;a href=&quot;../util/objects#equals(java.lang.Object,java.lang.Object)&quot;&gt;&lt;code&gt;Objects.equals(this.c(), r.c()&lt;/code&gt;&lt;/a&gt; would return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a4141d2aef13471dd4a0e737c385e9dc0e5ad9" translate="yes" xml:space="preserve">
          <source>If the component type is &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt; then numeric and atomic update access modes compare values using their bitwise representation (see &lt;a href=&quot;../float#floatToRawIntBits(float)&quot;&gt;&lt;code&gt;Float.floatToRawIntBits(float)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../double#doubleToRawLongBits(double)&quot;&gt;&lt;code&gt;Double.doubleToRawLongBits(double)&lt;/code&gt;&lt;/a&gt;, respectively).</source>
          <target state="translated">コンポーネントタイプが &lt;code&gt;float&lt;/code&gt; または &lt;code&gt;double&lt;/code&gt; の場合、数値およびアトミック更新アクセスモードは、ビット単位の表現を使用して値を比較します&lt;a href=&quot;../double#doubleToRawLongBits(double)&quot;&gt; &lt;code&gt;Double.doubleToRawLongBits(double)&lt;/code&gt; &lt;/a&gt;それぞれ、&lt;a href=&quot;../float#floatToRawIntBits(float)&quot;&gt; &lt;code&gt;Float.floatToRawIntBits(float)&lt;/code&gt; &lt;/a&gt;およびDouble.doubleToRawLongBits（double）を参照）。</target>
        </trans-unit>
        <trans-unit id="2c31ff2ad53aa80158077167d3c0952e042633e3" translate="yes" xml:space="preserve">
          <source>If the compression level is changed, the next invocation of &lt;code&gt;deflate&lt;/code&gt; will compress the input available so far with the old level (and may be flushed); the new level will take effect only after that invocation.</source>
          <target state="translated">圧縮レベルが変更された場合、次に &lt;code&gt;deflate&lt;/code&gt; を呼び出すと、これまで使用可能な入力が古いレベルで圧縮されます（フラッシュされる場合もあります）。新しいレベルは、その呼び出し後にのみ有効になります。</target>
        </trans-unit>
        <trans-unit id="392c53482c9474c39ea6e8d51c4ff85e2db64e08" translate="yes" xml:space="preserve">
          <source>If the compression strategy is changed, the next invocation of &lt;code&gt;deflate&lt;/code&gt; will compress the input available so far with the old strategy (and may be flushed); the new strategy will take effect only after that invocation.</source>
          <target state="translated">圧縮戦略が変更された場合、次に &lt;code&gt;deflate&lt;/code&gt; を呼び出すと、これまでに利用可能な入力が古い戦略で圧縮されます（フラッシュされる場合もあります）。新しい戦略は、その呼び出しの後にのみ有効になります。</target>
        </trans-unit>
        <trans-unit id="8e9497f125d07fc51b01287bbc25b0587bcf8337" translate="yes" xml:space="preserve">
          <source>If the configuration entry for &lt;code&gt;KerberosLoginModule&lt;/code&gt; has the option &lt;code&gt;storeKey&lt;/code&gt; set to true, then &lt;code&gt;KerberosKey&lt;/code&gt; or &lt;code&gt;KeyTab&lt;/code&gt; will also be added to the subject's private credentials. &lt;code&gt;KerberosKey&lt;/code&gt;, the principal's key(s) will be derived from user's password, and &lt;code&gt;KeyTab&lt;/code&gt; is the keytab used when &lt;code&gt;useKeyTab&lt;/code&gt; is set to true. The &lt;code&gt;KeyTab&lt;/code&gt; object is restricted to be used by the specified principal unless the principal value is &quot;*&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83fc6066134ba11a7853023c02cbbfe0403e55b4" translate="yes" xml:space="preserve">
          <source>If the connection is already closed then invoking this method has no effect. After a connection is closed, any further attempt calls to &lt;a href=&quot;#readPacket()&quot;&gt;&lt;code&gt;readPacket&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#writePacket(byte%5B%5D)&quot;&gt;&lt;code&gt;writePacket&lt;/code&gt;&lt;/a&gt; will throw a &lt;a href=&quot;closedconnectionexception&quot;&gt;&lt;code&gt;ClosedConnectionException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1941e8a43fce582de3711ef131570c2be6988f0c" translate="yes" xml:space="preserve">
          <source>If the connection is not established within the specified duration then building of the &lt;code&gt;WebSocket&lt;/code&gt; will fail with &lt;a href=&quot;httptimeoutexception&quot;&gt;&lt;code&gt;HttpTimeoutException&lt;/code&gt;&lt;/a&gt;. If this method is not invoked then the infinite timeout is assumed.</source>
          <target state="translated">指定された期間内に接続が確立されない場合、 &lt;code&gt;WebSocket&lt;/code&gt; の構築は&lt;a href=&quot;httptimeoutexception&quot;&gt; &lt;code&gt;HttpTimeoutException&lt;/code&gt; で&lt;/a&gt;失敗します。このメソッドが呼び出されない場合、無限のタイムアウトが想定されます。</target>
        </trans-unit>
        <trans-unit id="fc304512711f4e405bbe651d78fc410942cc454e" translate="yes" xml:space="preserve">
          <source>If the connection pool manager supports &lt;code&gt;Statement&lt;/code&gt; pooling, for &lt;code&gt;PreparedStatements&lt;/code&gt;, which can be determined by invoking the method &lt;code&gt;DatabaseMetaData.supportsStatementPooling&lt;/code&gt;, the connection pool manager will register as a &lt;code&gt;StatementEventListener&lt;/code&gt; object with the new &lt;code&gt;PooledConnection&lt;/code&gt; object. When the &lt;code&gt;PreparedStatement&lt;/code&gt; is closed or there is an error, the connection pool manager (being a listener) gets a notification that includes a &lt;code&gt;StatementEvent&lt;/code&gt; object.</source>
          <target state="translated">接続プールマネージャが、メソッド &lt;code&gt;DatabaseMetaData.supportsStatementPooling&lt;/code&gt; を呼び出すことによって決定できる &lt;code&gt;PreparedStatements&lt;/code&gt; の &lt;code&gt;Statement&lt;/code&gt; プーリングをサポートしている場合、接続プールマネージャは新しい &lt;code&gt;PooledConnection&lt;/code&gt; オブジェクトに &lt;code&gt;StatementEventListener&lt;/code&gt; オブジェクトとして登録されます。場合 &lt;code&gt;PreparedStatement&lt;/code&gt; 閉じられた場合、またはエラーがある、接続プール管理プログラム（リスナーである）を含む通知を取得 &lt;code&gt;StatementEvent&lt;/code&gt; のオブジェクト。</target>
        </trans-unit>
        <trans-unit id="c056d8bc44889ca1c50db14d914cd7e3d8e99f1b" translate="yes" xml:space="preserve">
          <source>If the connection pool manager wraps or provides a proxy to the logical handle returned from a call to &lt;code&gt;PoolConnection.getConnection&lt;/code&gt;, the pool manager must do one of the following when the connection pool manager closes or returns the &lt;code&gt;PooledConnection&lt;/code&gt; to the pool in response to the application calling &lt;code&gt;Connection.close&lt;/code&gt;:</source>
          <target state="translated">接続プールマネージャが &lt;code&gt;PoolConnection.getConnection&lt;/code&gt; の呼び出しから返された論理ハンドルにプロキシをラップまたは提供する場合、接続プールマネージャがアプリケーションに応答して &lt;code&gt;PooledConnection&lt;/code&gt; を閉じるか、プールに返すときに、プールマネージャは次のいずれかを実行する必要があります。 &lt;code&gt;Connection.close&lt;/code&gt; を呼び出す：</target>
        </trans-unit>
        <trans-unit id="f881d8d4f5f09d46f8c2856b6d2d804f3ec96cc6" translate="yes" xml:space="preserve">
          <source>If the constructor completes normally, returns the newly created and initialized instance.</source>
          <target state="translated">コンストラクタが正常に完了した場合、新しく作成され初期化されたインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="2aeb09eb6e0fcfe242a17792207492aa120605ac" translate="yes" xml:space="preserve">
          <source>If the constructor does &lt;b&gt;not&lt;/b&gt; have a CallbackHandler input parameter, or if the caller specifies a &lt;code&gt;null&lt;/code&gt; CallbackHandler object (and a &lt;code&gt;null&lt;/code&gt; value is permitted), the LoginContext queries the &lt;code&gt;auth.login.defaultCallbackHandler&lt;/code&gt; security property for the fully qualified class name of a default handler implementation. If the security property is not set, then the underlying modules will not have a CallbackHandler for use in communicating with users. The caller thus assumes that the configured modules have alternative means for authenticating the user.</source>
          <target state="translated">コンストラクタがない場合&lt;b&gt;ではない&lt;/b&gt;のCallbackHandler入力パラメータを持っている、または発信者が指定した場合 &lt;code&gt;null&lt;/code&gt; CallbackHandlerオブジェクト（と &lt;code&gt;null&lt;/code&gt; 値が許可されている）、LoginContextは照会 &lt;code&gt;auth.login.defaultCallbackHandler&lt;/code&gt; のデフォルトハンドラーの完全修飾クラス名のセキュリティプロパティを実装。セキュリティプロパティが設定されていない場合、基になるモジュールには、ユーザーとの通信に使用するCallbackHandlerがありません。したがって、呼び出し側は、構成されたモジュールにユーザーを認証するための代替手段があると想定します。</target>
        </trans-unit>
        <trans-unit id="96edcc96b78112d3bb9f9d209b5477cb96759906" translate="yes" xml:space="preserve">
          <source>If the constructor does &lt;b&gt;not&lt;/b&gt; have a Configuration input parameter, or if the caller specifies a &lt;code&gt;null&lt;/code&gt; Configuration object, the constructor uses the following call to get the installed Configuration:</source>
          <target state="translated">コンストラクタがない場合&lt;b&gt;ではない&lt;/b&gt;コンフィギュレーション入力パラメータを持っている、または発信者が指定している場合 &lt;code&gt;null&lt;/code&gt; Configurationオブジェクトを、コンストラクタがインストールされた構成を取得するには、次の呼び出しを使用しています：</target>
        </trans-unit>
        <trans-unit id="56ea3a3517b6a27cca0834c9f4eb544d3dc38d39" translate="yes" xml:space="preserve">
          <source>If the constructor does &lt;b&gt;not&lt;/b&gt; have a Subject input parameter, the LoginContext instantiates a new Subject.</source>
          <target state="translated">コンストラクターにSubject入力パラメーターが&lt;b&gt;ない&lt;/b&gt;場合、LoginContextは新しいSubjectをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="51d999e9fc75b0313b56adf5745b9fffcd061b50" translate="yes" xml:space="preserve">
          <source>If the constructor has a CallbackHandler input parameter, the LoginContext uses the caller-specified CallbackHandler object.</source>
          <target state="translated">コンストラクタに CallbackHandler 入力パラメータがある場合、LoginContext は呼び出し元が指定した CallbackHandler オブジェクトを使用します。</target>
        </trans-unit>
        <trans-unit id="e1e00d077c5cc21a366671e33a8a738802bc618a" translate="yes" xml:space="preserve">
          <source>If the constructor has a Configuration input parameter and the caller specifies a non-null Configuration, the LoginContext uses the caller-specified Configuration.</source>
          <target state="translated">コンストラクタに Configuration 入力パラメータがあり、呼び出し元が非 null の Configuration を指定した場合、LoginContext は呼び出し元が指定した Configuration を使用します。</target>
        </trans-unit>
        <trans-unit id="3de799a960e7be55aab3ca032d285e2179f3390f" translate="yes" xml:space="preserve">
          <source>If the constructor has a Subject input parameter, the LoginContext uses the caller-specified Subject object.</source>
          <target state="translated">コンストラクタに Subject 入力パラメータがある場合、LoginContext は呼び出し元が指定した Subject オブジェクトを使用します。</target>
        </trans-unit>
        <trans-unit id="3a99d0a19bc0f8c41b49ce35b93e620433ac8f02" translate="yes" xml:space="preserve">
          <source>If the constructor is declared to throw exceptions, the parameter list is followed by a space, followed by the word &quot;&lt;code&gt;throws&lt;/code&gt;&quot; followed by a comma-separated list of the thrown exception types.</source>
          <target state="translated">コンストラクターが例外をスローするように宣言されている場合、パラメーターリストの後にスペースが続き、「 &lt;code&gt;throws&lt;/code&gt; 」という単語が続き、その後にスローされた例外タイプのコンマ区切りのリストが続きます。</target>
        </trans-unit>
        <trans-unit id="8c9ed368492503e51fcc4ae43d3e8d4462771fd7" translate="yes" xml:space="preserve">
          <source>If the constructor's &lt;code&gt;accessible&lt;/code&gt; flag is not set, access checking is performed immediately on behalf of the lookup class.</source>
          <target state="translated">コンストラクターの &lt;code&gt;accessible&lt;/code&gt; フラグが設定されていない場合、アクセスチェックはルックアップクラスに代わって直ちに実行されます。</target>
        </trans-unit>
        <trans-unit id="2473d04d22b81fa38fb3fac97ebfc248b300280e" translate="yes" xml:space="preserve">
          <source>If the constructor's declaring class is an inner class in a non-static context, the first argument to the constructor needs to be the enclosing instance; see section 15.9.3 of</source>
          <target state="translated">コンストラクタの宣言クラスが非静的コンテキストの内部クラスである場合は、 コンストラクタの最初の引数は包含インスタンスでなければなりません。</target>
        </trans-unit>
        <trans-unit id="f8c1d043cdccb51e8a4ceda740614fe5576a5363" translate="yes" xml:space="preserve">
          <source>If the container of an boundary-point of a Range is being set to either a node of an invalid type or a node with an ancestor of an invalid type.</source>
          <target state="translated">範囲の境界点のコンテナに、無効な型のノードまたは無効な型の先祖を持つノードが設定されている場合。</target>
        </trans-unit>
        <trans-unit id="eae554929c7a6131d929bc3da9b88deb58a80b03" translate="yes" xml:space="preserve">
          <source>If the container's &lt;code&gt;ComponentOrientation&lt;/code&gt; property is horizontal and left-to-right, the above example produces the output shown in Figure 1. If the container's &lt;code&gt;ComponentOrientation&lt;/code&gt; property is horizontal and right-to-left, the example produces the output shown in Figure 2.</source>
          <target state="translated">コンテナの &lt;code&gt;ComponentOrientation&lt;/code&gt; プロパティが水平で左から右の場合、上記の例では図1に示す出力が生成されます。コンテナの &lt;code&gt;ComponentOrientation&lt;/code&gt; プロパティが水平で右から左の場合、この例では図2に示す出力が生成されます。</target>
        </trans-unit>
        <trans-unit id="12ab1266a164c0f6072aaf95e501de64c7ac066d" translate="yes" xml:space="preserve">
          <source>If the containing type is a parameterized type, the number of type arguments must equal the number of &lt;code&gt;typeElem&lt;/code&gt;'s formal type parameters. If it is not parameterized or if it is &lt;code&gt;null&lt;/code&gt;, this method is equivalent to &lt;code&gt;getDeclaredType(typeElem, typeArgs)&lt;/code&gt;.</source>
          <target state="translated">包含型がパラメーター化された型である場合、型引数の数は &lt;code&gt;typeElem&lt;/code&gt; の仮型パラメーターの数と等しくなければなりません。パラメータ化されていない場合、または &lt;code&gt;null&lt;/code&gt; の場合、このメソッドは &lt;code&gt;getDeclaredType(typeElem, typeArgs)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="eba2ca49b1b8640f5521ff4ce667486544415323" translate="yes" xml:space="preserve">
          <source>If the content-length response header has not already been set then this is set to the appropriate value depending on the response length parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b29895ec70403fd2e17d250a3c6d70239c8ec92" translate="yes" xml:space="preserve">
          <source>If the contents of the underlying document containing the &lt;code&gt;XMLSignature&lt;/code&gt; are subsequently modified, the behavior is undefined.</source>
          <target state="translated">&lt;code&gt;XMLSignature&lt;/code&gt; を含む基になるドキュメントのコンテンツが後で変更された場合、動作は未定義です。</target>
        </trans-unit>
        <trans-unit id="54595108c68c9e1528174df34d61161ee7d1002c" translate="yes" xml:space="preserve">
          <source>If the context is available and there is a security manager installed, the caller may require permission to access it or a security exception may be thrown. In a Java environment, the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;SSLPermission(&quot;getSSLSessionContext&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">コンテキストが利用可能で、セキュリティマネージャーがインストールされている場合、呼び出し元はそれにアクセスするためのアクセス許可を要求するか、セキュリティ例外がスローされる可能性があります。Java環境では、セキュリティマネージャーの &lt;code&gt;checkPermission&lt;/code&gt; メソッドは、 &lt;code&gt;SSLPermission(&quot;getSSLSessionContext&quot;)&lt;/code&gt; 権限で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="e7936f29deee3d60765c1418e1263abb6aa6cc3c" translate="yes" xml:space="preserve">
          <source>If the context node is a &lt;code&gt;Document&lt;/code&gt; node and the action is &lt;code&gt;ACTION_REPLACE_CHILDREN&lt;/code&gt;, then the document that is passed as the context node will be changed such that its &lt;code&gt;xmlEncoding&lt;/code&gt;, &lt;code&gt;documentURI&lt;/code&gt;, &lt;code&gt;xmlVersion&lt;/code&gt;, &lt;code&gt;inputEncoding&lt;/code&gt;, &lt;code&gt;xmlStandalone&lt;/code&gt;, and all other such attributes are set to what they would be set to if the input source was parsed using &lt;code&gt;LSParser.parse()&lt;/code&gt;.</source>
          <target state="translated">コンテキストノードがされている場合は &lt;code&gt;Document&lt;/code&gt; ノードとアクションがある &lt;code&gt;ACTION_REPLACE_CHILDREN&lt;/code&gt; 、その後、コンテキストノードとして渡される文書は、そのことを変更されます &lt;code&gt;xmlEncoding&lt;/code&gt; 、 &lt;code&gt;documentURI&lt;/code&gt; 、 &lt;code&gt;xmlVersion&lt;/code&gt; 、 &lt;code&gt;inputEncoding&lt;/code&gt; 、 &lt;code&gt;xmlStandalone&lt;/code&gt; 、他のすべてのそのような属性は、どのような彼らに設定されています入力ソースが &lt;code&gt;LSParser.parse()&lt;/code&gt; を使用して解析された場合に設定されます。</target>
        </trans-unit>
        <trans-unit id="3a360ee8a79bfd6943a67c78860b71ba39acaa75" translate="yes" xml:space="preserve">
          <source>If the conversion failed, value 0 will be used.</source>
          <target state="translated">変換に失敗した場合は、値 0 が使用されます。</target>
        </trans-unit>
        <trans-unit id="2e4edf267c4c18b01156d4fb736a0d9de264f347" translate="yes" xml:space="preserve">
          <source>If the conversion is &lt;code&gt;'a'&lt;/code&gt; or &lt;code&gt;'A'&lt;/code&gt;, then the precision is the number of hexadecimal digits after the radix point. If the precision is not provided, then all of the digits as returned by &lt;a href=&quot;../lang/double#toHexString(double)&quot;&gt;&lt;code&gt;Double.toHexString(double)&lt;/code&gt;&lt;/a&gt; will be output.</source>
          <target state="translated">変換が &lt;code&gt;'a'&lt;/code&gt; または &lt;code&gt;'A'&lt;/code&gt; 場合、精度は基数点の後の16進数の桁数です。精度が指定されていない場合、&lt;a href=&quot;../lang/double#toHexString(double)&quot;&gt; &lt;code&gt;Double.toHexString(double)&lt;/code&gt; &lt;/a&gt;によって返されるすべての桁が出力されます。</target>
        </trans-unit>
        <trans-unit id="6d873373059873c2f9dda2243106e00e462486c8" translate="yes" xml:space="preserve">
          <source>If the conversion is &lt;code&gt;'a'&lt;/code&gt; or &lt;code&gt;'A'&lt;/code&gt;, then the precision is the number of hexadecimal digits after the radix point. If the precision is not provided, then all of the digits as returned by &lt;a href=&quot;../lang/double#toHexString-double-&quot;&gt;&lt;code&gt;Double.toHexString(double)&lt;/code&gt;&lt;/a&gt; will be output.</source>
          <target state="translated">変換が &lt;code&gt;'a'&lt;/code&gt; または &lt;code&gt;'A'&lt;/code&gt; の場合、精度は基数ポイントの後の16進数字の数です。精度が指定されていない場合、&lt;a href=&quot;../lang/double#toHexString-double-&quot;&gt; &lt;code&gt;Double.toHexString(double)&lt;/code&gt; &lt;/a&gt;によって返されるすべての数字が出力されます。</target>
        </trans-unit>
        <trans-unit id="4920cb3a35e9ffdd181f2cc1c02598946a361975" translate="yes" xml:space="preserve">
          <source>If the conversion is &lt;code&gt;'g'&lt;/code&gt; or &lt;code&gt;'G'&lt;/code&gt;, then the precision is the total number of significant digits in the resulting magnitude after rounding. If the precision is not specified, then the default value is &lt;code&gt;6&lt;/code&gt;. If the precision is &lt;code&gt;0&lt;/code&gt;, then it is taken to be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">変換が &lt;code&gt;'g'&lt;/code&gt; または &lt;code&gt;'G'&lt;/code&gt; の場合、精度は、丸め後の結果の大きさの有効数字の総数です。精度が指定されていない場合、デフォルト値は &lt;code&gt;6&lt;/code&gt; です。精度が &lt;code&gt;0&lt;/code&gt; の場合、 &lt;code&gt;1&lt;/code&gt; と見なされます。</target>
        </trans-unit>
        <trans-unit id="5b740696da8433363284a2a09b00def3e5dd32a1" translate="yes" xml:space="preserve">
          <source>If the conversion is &lt;code&gt;'o'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;, or &lt;code&gt;'X'&lt;/code&gt; and both the &lt;code&gt;'#'&lt;/code&gt; and the &lt;code&gt;'0'&lt;/code&gt; flags are given, then result will contain the base indicator (&lt;code&gt;'0'&lt;/code&gt; for octal and &lt;code&gt;&quot;0x&quot;&lt;/code&gt; or &lt;code&gt;&quot;0X&quot;&lt;/code&gt; for hexadecimal), some number of zeros (based on the width), and the value.</source>
          <target state="translated">変換が &lt;code&gt;'o'&lt;/code&gt; 、 &lt;code&gt;'x'&lt;/code&gt; 、または &lt;code&gt;'X'&lt;/code&gt; で、 &lt;code&gt;'#'&lt;/code&gt; &lt;code&gt;'0'&lt;/code&gt; フラグと'0'フラグの両方が指定されている場合、結果にはベースインジケーター（8進数 &lt;code&gt;'0'&lt;/code&gt; 場合は'0'、 &lt;code&gt;&quot;0x&quot;&lt;/code&gt; または &lt;code&gt;&quot;0X&quot;&lt;/code&gt; （16進数）、いくつかのゼロ（幅に基づく）、および値。</target>
        </trans-unit>
        <trans-unit id="8d9565e696ad547e1a513117ec394adf4606346c" translate="yes" xml:space="preserve">
          <source>If the conversion is &lt;code&gt;'o'&lt;/code&gt;, &lt;code&gt;'x'&lt;/code&gt;, or &lt;code&gt;'X'&lt;/code&gt; and both the &lt;code&gt;'#'&lt;/code&gt; and the &lt;code&gt;'0'&lt;/code&gt; flags are given, then result will contain the radix indicator (&lt;code&gt;'0'&lt;/code&gt; for octal and &lt;code&gt;&quot;0x&quot;&lt;/code&gt; or &lt;code&gt;&quot;0X&quot;&lt;/code&gt; for hexadecimal), some number of zeros (based on the width), and the value.</source>
          <target state="translated">変換が &lt;code&gt;'o'&lt;/code&gt; 、 &lt;code&gt;'x'&lt;/code&gt; 、または &lt;code&gt;'X'&lt;/code&gt; で、 &lt;code&gt;'#'&lt;/code&gt; &lt;code&gt;'0'&lt;/code&gt; フラグと'0'フラグの両方が指定されている場合、結果には基数インジケーター（8進数 &lt;code&gt;'0'&lt;/code&gt; 場合は'0'、 &lt;code&gt;&quot;0x&quot;&lt;/code&gt; または &lt;code&gt;&quot;0X&quot;&lt;/code&gt; （16進数）、いくつかのゼロ（幅に基づく）、および値。</target>
        </trans-unit>
        <trans-unit id="f92ee64ab913667741eadac9533a1057cb848b90" translate="yes" xml:space="preserve">
          <source>If the count reaches zero then the method returns with the value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">カウントがゼロに達すると、メソッドは値 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ebf6135f725f6abcb2f61e9b10a4d1d32a5ee738" translate="yes" xml:space="preserve">
          <source>If the counter can wrap around its maximum value, the modulus needs to be specified. The modulus is the value at which the counter is reset to zero.</source>
          <target state="translated">カウンタがその最大値に回り込むことができる場合、モジュラスを指定する必要があります。モデュラスは、カウンタがゼロにリセットされる値です。</target>
        </trans-unit>
        <trans-unit id="7b2012ddc4ebb24e7045b7a055ac3ae1d060dc81" translate="yes" xml:space="preserve">
          <source>If the counter difference mode is used, the value of the derived gauge is calculated as the difference between the observed counter values for two successive observations. If this difference is negative, the value of the derived gauge is incremented by the value of the modulus. The derived gauge value (V[t]) is calculated using the following method:</source>
          <target state="translated">対数差分モードが使用されている場合、派生ゲージの値は、2つの連続した観測のための観測されたカウンタ値の間の差分として計算されます。この差が負の場合、派生ゲージの値は弾性率の値によってインクリメントされる。派生ゲージ値(V[t])は以下の方法で計算される.</target>
        </trans-unit>
        <trans-unit id="5d33f0fe4d8b3f6830caa94328f7bd32d5be7376" translate="yes" xml:space="preserve">
          <source>If the creation of this &lt;code&gt;Receiver&lt;/code&gt; resulted in implicitly opening the underlying device, the device is implicitly closed by this method. This is true unless the device is kept open by other &lt;code&gt;Receiver&lt;/code&gt; or &lt;code&gt;Transmitter&lt;/code&gt; instances that opened the device implicitly, and unless the device has been opened explicitly. If the device this &lt;code&gt;Receiver&lt;/code&gt; is retrieved from is closed explicitly by calling &lt;a href=&quot;mididevice#close()&quot;&gt;&lt;code&gt;MidiDevice.close&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;Receiver&lt;/code&gt; is closed, too. For a detailed description of open/close behaviour see the class description of &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この &lt;code&gt;Receiver&lt;/code&gt; の作成により、基になるデバイスが暗黙的に開かれた場合、デバイスはこのメソッドによって暗黙的に閉じられます。これは、デバイスを暗黙的に開いた他の &lt;code&gt;Receiver&lt;/code&gt; または &lt;code&gt;Transmitter&lt;/code&gt; インスタンスによってデバイスが開いたままになっていない限り、およびデバイスが明示的に開かれていない限り、当てはまります。この &lt;code&gt;Receiver&lt;/code&gt; が取得されたデバイスが&lt;a href=&quot;mididevice#close()&quot;&gt; &lt;code&gt;MidiDevice.close&lt;/code&gt; &lt;/a&gt;を呼び出すことによって明示的に閉じられている場合、 &lt;code&gt;Receiver&lt;/code&gt; も閉じられます。オープン/クローズ動作の詳細な説明については、&lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; の&lt;/a&gt;クラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="0f1b34ff7dc9bdfbc17c9da13d95b1516d17ebbc" translate="yes" xml:space="preserve">
          <source>If the creation of this &lt;code&gt;Receiver&lt;/code&gt; resulted in implicitly opening the underlying device, the device is implicitly closed by this method. This is true unless the device is kept open by other &lt;code&gt;Receiver&lt;/code&gt; or &lt;code&gt;Transmitter&lt;/code&gt; instances that opened the device implicitly, and unless the device has been opened explicitly. If the device this &lt;code&gt;Receiver&lt;/code&gt; is retrieved from is closed explicitly by calling &lt;a href=&quot;mididevice#close--&quot;&gt;&lt;code&gt;MidiDevice.close&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;Receiver&lt;/code&gt; is closed, too. For a detailed description of open/close behaviour see the class description of &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この &lt;code&gt;Receiver&lt;/code&gt; の作成の結果、基礎となるデバイスが暗黙的に開かれた場合、デバイスはこのメソッドによって暗黙的に閉じられます。これは、デバイスを暗黙的に開いた他の &lt;code&gt;Receiver&lt;/code&gt; または &lt;code&gt;Transmitter&lt;/code&gt; インスタンスによってデバイスが開いたままであり、デバイスが明示的に開かれていない限り、当てはまります。この &lt;code&gt;Receiver&lt;/code&gt; が取得される&lt;a href=&quot;mididevice#close--&quot;&gt; &lt;code&gt;MidiDevice.close&lt;/code&gt; &lt;/a&gt;を呼び出すことによって明示的に閉じられる場合、 &lt;code&gt;Receiver&lt;/code&gt; も閉じられます。開閉動作の詳細については、&lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; の&lt;/a&gt;クラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="e1af258f9977741775b4573e8cb983831177f305" translate="yes" xml:space="preserve">
          <source>If the creation of this &lt;code&gt;Transmitter&lt;/code&gt; resulted in implicitly opening the underlying device, the device is implicitly closed by this method. This is true unless the device is kept open by other &lt;code&gt;Receiver&lt;/code&gt; or &lt;code&gt;Transmitter&lt;/code&gt; instances that opened the device implicitly, and unless the device has been opened explicitly. If the device this &lt;code&gt;Transmitter&lt;/code&gt; is retrieved from is closed explicitly by calling &lt;a href=&quot;mididevice#close()&quot;&gt;&lt;code&gt;MidiDevice.close&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;Transmitter&lt;/code&gt; is closed, too. For a detailed description of open/close behaviour see the class description of &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この &lt;code&gt;Transmitter&lt;/code&gt; の作成により、基になるデバイスが暗黙的に開かれた場合、デバイスはこのメソッドによって暗黙的に閉じられます。これは、デバイスを暗黙的に開いた他の &lt;code&gt;Receiver&lt;/code&gt; または &lt;code&gt;Transmitter&lt;/code&gt; インスタンスによってデバイスが開いたままになっていない限り、およびデバイスが明示的に開かれていない限り、当てはまります。この &lt;code&gt;Transmitter&lt;/code&gt; が取得されたデバイスが&lt;a href=&quot;mididevice#close()&quot;&gt; &lt;code&gt;MidiDevice.close&lt;/code&gt; &lt;/a&gt;を呼び出すことによって明示的に閉じられている場合、 &lt;code&gt;Transmitter&lt;/code&gt; も閉じられます。オープン/クローズ動作の詳細な説明については、&lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; の&lt;/a&gt;クラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="9ae995006fbd46da8baab1bfa646c3f1a74c6123" translate="yes" xml:space="preserve">
          <source>If the creation of this &lt;code&gt;Transmitter&lt;/code&gt; resulted in implicitly opening the underlying device, the device is implicitly closed by this method. This is true unless the device is kept open by other &lt;code&gt;Receiver&lt;/code&gt; or &lt;code&gt;Transmitter&lt;/code&gt; instances that opened the device implicitly, and unless the device has been opened explicitly. If the device this &lt;code&gt;Transmitter&lt;/code&gt; is retrieved from is closed explicitly by calling &lt;a href=&quot;mididevice#close--&quot;&gt;&lt;code&gt;MidiDevice.close&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;Transmitter&lt;/code&gt; is closed, too. For a detailed description of open/close behaviour see the class description of &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この &lt;code&gt;Transmitter&lt;/code&gt; 作成した結果、基礎となるデバイスが暗黙的に開かれた場合、デバイスはこのメソッドによって暗黙的に閉じられます。これは、デバイスを暗黙的に開いた他の &lt;code&gt;Receiver&lt;/code&gt; または &lt;code&gt;Transmitter&lt;/code&gt; インスタンスによってデバイスが開いたままであり、デバイスが明示的に開かれていない限り、当てはまります。この &lt;code&gt;Transmitter&lt;/code&gt; が取得される&lt;a href=&quot;mididevice#close--&quot;&gt; &lt;code&gt;MidiDevice.close&lt;/code&gt; &lt;/a&gt;を呼び出すことによって明示的に閉じられる場合、 &lt;code&gt;Transmitter&lt;/code&gt; も閉じられます。開閉動作の詳細については、&lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; の&lt;/a&gt;クラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="6c179704df7cb8ed1b3ce0d3934ef2876dfdab64" translate="yes" xml:space="preserve">
          <source>If the current capacity of this vector is less than &lt;code&gt;minCapacity&lt;/code&gt;, then its capacity is increased by replacing its internal data array, kept in the field &lt;code&gt;elementData&lt;/code&gt;, with a larger one. The size of the new data array will be the old size plus &lt;code&gt;capacityIncrement&lt;/code&gt;, unless the value of &lt;code&gt;capacityIncrement&lt;/code&gt; is less than or equal to zero, in which case the new capacity will be twice the old capacity; but if this new size is still smaller than &lt;code&gt;minCapacity&lt;/code&gt;, then the new capacity will be &lt;code&gt;minCapacity&lt;/code&gt;.</source>
          <target state="translated">このベクトルの現在の容量が &lt;code&gt;minCapacity&lt;/code&gt; より小さい場合、フィールド &lt;code&gt;elementData&lt;/code&gt; に保持されている内部データ配列をより大きなものに置き換えることにより、その容量が増加します。新しいデータ配列のサイズは、古いサイズと &lt;code&gt;capacityIncrement&lt;/code&gt; の合計になります。ただし、 &lt;code&gt;capacityIncrement&lt;/code&gt; の値がゼロ以下の場合は、新しい容量は古い容量の2倍になります。ただし、この新しいサイズがまだ &lt;code&gt;minCapacity&lt;/code&gt; よりも小さい場合、新しい容量は &lt;code&gt;minCapacity&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="15aa95f18520c9768c5e75e2d00df5cd87e5c814" translate="yes" xml:space="preserve">
          <source>If the current count equals zero then nothing happens.</source>
          <target state="translated">現在のカウントがゼロの場合は何も起こりません。</target>
        </trans-unit>
        <trans-unit id="f94ee3549183c062116cda5b26a97df611673964" translate="yes" xml:space="preserve">
          <source>If the current count is greater than zero then it is decremented. If the new count is zero then all waiting threads are re-enabled for thread scheduling purposes.</source>
          <target state="translated">現在のカウントがゼロよりも大きい場合は、それがデクリメントされます。新しいカウントがゼロの場合、すべての待機スレッドはスレッドスケジューリングのために再有効化されます。</target>
        </trans-unit>
        <trans-unit id="3a7db62e9957e4a583a5bb47860c808eb80b034b" translate="yes" xml:space="preserve">
          <source>If the current count is greater than zero then the current thread becomes disabled for thread scheduling purposes and lies dormant until one of three things happen:</source>
          <target state="translated">現在のカウントがゼロよりも大きい場合、現在のスレッドはスレッドスケジューリングのために無効化され、次の3つのうちの1つが起こるまで休止状態になります。</target>
        </trans-unit>
        <trans-unit id="d7ac4173a35be7aa72f90b5ce9f676b82ef7108f" translate="yes" xml:space="preserve">
          <source>If the current count is greater than zero then the current thread becomes disabled for thread scheduling purposes and lies dormant until one of two things happen:</source>
          <target state="translated">現在のカウントがゼロよりも大きい場合、現在のスレッドはスレッドスケジューリングのために無効化され、次の2つのいずれかが起こるまで休止状態になります。</target>
        </trans-unit>
        <trans-unit id="0e615f8a82085afa953ed38e8e8581f0bc679866" translate="yes" xml:space="preserve">
          <source>If the current count is zero then this method returns immediately with the value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">現在のカウントがゼロの場合、このメソッドは値 &lt;code&gt;true&lt;/code&gt; ですぐに戻ります。</target>
        </trans-unit>
        <trans-unit id="bf13f63814d624078b38288a8fd1cdef5534f01f" translate="yes" xml:space="preserve">
          <source>If the current count is zero then this method returns immediately.</source>
          <target state="translated">現在のカウントがゼロの場合、このメソッドはすぐに戻ります。</target>
        </trans-unit>
        <trans-unit id="7fd54efda8852abf1726c4425c8e78d3b50cf5d3" translate="yes" xml:space="preserve">
          <source>If the current event is a START_ELEMENT or END_ELEMENT this method returns the URI of the prefix or the default namespace.</source>
          <target state="translated">現在のイベントが START_ELEMENT または END_ELEMENT の場合、このメソッドは接頭語または既定の名前空間の URI を返します。</target>
        </trans-unit>
        <trans-unit id="2cd4616380038d25f830f6fb1b42637233fe3f86" translate="yes" xml:space="preserve">
          <source>If the current event is a START_ELEMENT or END_ELEMENT this method returns the URI of the prefix or the default namespace. Returns null if the event does not have a prefix.</source>
          <target state="translated">現在のイベントが START_ELEMENT または END_ELEMENT の場合、このメソッドは接頭辞の URI または既定の名前空間を返します。イベントに接頭辞がない場合は null を返します。</target>
        </trans-unit>
        <trans-unit id="5887879e6691c6cf6cd544bc0267797a7fb44c5c" translate="yes" xml:space="preserve">
          <source>If the current layout manager implements &lt;code&gt;LayoutManager2&lt;/code&gt;, then &lt;a href=&quot;../../java/awt/layoutmanager2#addLayoutComponent(java.awt.Component,java.lang.Object)&quot;&gt;&lt;code&gt;LayoutManager2.addLayoutComponent(Component,Object)&lt;/code&gt;&lt;/a&gt; is invoked on it. If the current layout manager does not implement &lt;code&gt;LayoutManager2&lt;/code&gt;, and constraints is a &lt;code&gt;String&lt;/code&gt;, then &lt;a href=&quot;../../java/awt/layoutmanager#addLayoutComponent(java.lang.String,java.awt.Component)&quot;&gt;&lt;code&gt;LayoutManager.addLayoutComponent(String,Component)&lt;/code&gt;&lt;/a&gt; is invoked on it.</source>
          <target state="translated">現在のレイアウトマネージャの実装する場合 &lt;code&gt;LayoutManager2&lt;/code&gt; の、次いで&lt;a href=&quot;../../java/awt/layoutmanager2#addLayoutComponent(java.awt.Component,java.lang.Object)&quot;&gt; &lt;code&gt;LayoutManager2.addLayoutComponent(Component,Object)&lt;/code&gt; &lt;/a&gt;が呼び出されます。現在のレイアウトマネージャーが &lt;code&gt;LayoutManager2&lt;/code&gt; を実装しておらず、制約が &lt;code&gt;String&lt;/code&gt; の場合、&lt;a href=&quot;../../java/awt/layoutmanager#addLayoutComponent(java.lang.String,java.awt.Component)&quot;&gt; &lt;code&gt;LayoutManager.addLayoutComponent(String,Component)&lt;/code&gt; &lt;/a&gt;が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="3a447a386debb26576b066a1d7df35582ff0b666" translate="yes" xml:space="preserve">
          <source>If the current layout manager implements &lt;code&gt;LayoutManager2&lt;/code&gt;, then &lt;a href=&quot;layoutmanager2#addLayoutComponent(java.awt.Component,java.lang.Object)&quot;&gt;&lt;code&gt;LayoutManager2.addLayoutComponent(Component,Object)&lt;/code&gt;&lt;/a&gt; is invoked on it. If the current layout manager does not implement &lt;code&gt;LayoutManager2&lt;/code&gt;, and constraints is a &lt;code&gt;String&lt;/code&gt;, then &lt;a href=&quot;layoutmanager#addLayoutComponent(java.lang.String,java.awt.Component)&quot;&gt;&lt;code&gt;LayoutManager.addLayoutComponent(String,Component)&lt;/code&gt;&lt;/a&gt; is invoked on it.</source>
          <target state="translated">現在のレイアウトマネージャの実装する場合 &lt;code&gt;LayoutManager2&lt;/code&gt; の、次いで&lt;a href=&quot;layoutmanager2#addLayoutComponent(java.awt.Component,java.lang.Object)&quot;&gt; &lt;code&gt;LayoutManager2.addLayoutComponent(Component,Object)&lt;/code&gt; &lt;/a&gt;が呼び出されます。現在のレイアウトマネージャーが &lt;code&gt;LayoutManager2&lt;/code&gt; を実装しておらず、制約が &lt;code&gt;String&lt;/code&gt; の場合、&lt;a href=&quot;layoutmanager#addLayoutComponent(java.lang.String,java.awt.Component)&quot;&gt; &lt;code&gt;LayoutManager.addLayoutComponent(String,Component)&lt;/code&gt; &lt;/a&gt;が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d4b49d04a03e7f62716b78c4449ecc798158a3b8" translate="yes" xml:space="preserve">
          <source>If the current method handle is not of &lt;a href=&quot;#asVarargsCollector(java.lang.Class)&quot;&gt;variable arity&lt;/a&gt;, the current method handle is returned. This is true even if the current method handle could not be a valid input to &lt;code&gt;asVarargsCollector&lt;/code&gt;.</source>
          <target state="translated">現在のメソッドハンドルが&lt;a href=&quot;#asVarargsCollector(java.lang.Class)&quot;&gt;可変アリティ&lt;/a&gt;でない場合は、現在のメソッドハンドルが返されます。これは、現在のメソッドハンドルが &lt;code&gt;asVarargsCollector&lt;/code&gt; への有効な入力でなかった場合でも当てはまります。</target>
        </trans-unit>
        <trans-unit id="a37f29b7a24ab724ec62dade14ae458a9a6defe6" translate="yes" xml:space="preserve">
          <source>If the current method handle is not of &lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;variable arity&lt;/a&gt;, the current method handle is returned. This is true even if the current method handle could not be a valid input to &lt;code&gt;asVarargsCollector&lt;/code&gt;.</source>
          <target state="translated">現在のメソッドハンドルが&lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;変数arity&lt;/a&gt;でない場合、現在のメソッドハンドルが返されます。これは、現在のメソッドハンドルが &lt;code&gt;asVarargsCollector&lt;/code&gt; への有効な入力でなかった場合でも当てはまります。</target>
        </trans-unit>
        <trans-unit id="8cbc4f7fe8db524f0e4673c73c93f44a75301142" translate="yes" xml:space="preserve">
          <source>If the current method is a variable arity method handle argument list conversion may involve the conversion and collection of several arguments into an array, as &lt;a href=&quot;#asVarargsCollector(java.lang.Class)&quot;&gt;described elsewhere&lt;/a&gt;. In every other case, all conversions are applied &lt;em&gt;pairwise&lt;/em&gt;, which means that each argument or return value is converted to exactly one argument or return value (or no return value). The applied conversions are defined by consulting the corresponding component types of the old and new method handle types.</source>
          <target state="translated">現在のメソッドが可変アリティメソッドである場合、引数リストの変換には、&lt;a href=&quot;#asVarargsCollector(java.lang.Class)&quot;&gt;他の場所で説明されているよう&lt;/a&gt;に、いくつかの引数の配列への変換と収集が含まれる場合があります。それ以外の場合はすべて、すべての変換が&lt;em&gt;ペアごと&lt;/em&gt;に適用されます。つまり、各引数または戻り値は、正確に1つの引数または戻り値（または戻り値なし）に変換されます。適用される変換は、新旧のメソッドハンドルタイプの対応するコンポーネントタイプを参照することによって定義されます。</target>
        </trans-unit>
        <trans-unit id="c10541f1b7a87a46fca0e82cb887f1f5cdfbfc64" translate="yes" xml:space="preserve">
          <source>If the current method is a variable arity method handle argument list conversion may involve the conversion and collection of several arguments into an array, as &lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;described elsewhere&lt;/a&gt;. In every other case, all conversions are applied &lt;em&gt;pairwise&lt;/em&gt;, which means that each argument or return value is converted to exactly one argument or return value (or no return value). The applied conversions are defined by consulting the the corresponding component types of the old and new method handle types.</source>
          <target state="translated">現在のメソッドが可変アリティメソッドハンドルである場合、引数リストの変換には、&lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;他の場所で説明されているよう&lt;/a&gt;に、いくつかの引数を配列に変換および収集することが含まれます。他のすべての場合では、すべての変換が&lt;em&gt;ペア&lt;/em&gt;で適用されます。つまり、各引数または戻り値は、1つの引数または戻り値（または戻り値なし）に正確に変換されます。適用される変換は、新旧のメソッドハンドルタイプの対応するコンポーネントタイプを調べることによって定義されます。</target>
        </trans-unit>
        <trans-unit id="3234b563a8a8287e5245f9226141091af776f5ee" translate="yes" xml:space="preserve">
          <source>If the current position when this method is invoked is greater than the loop end point, playback continues to the end of the sequence without looping, unless the loop end point is changed subsequently.</source>
          <target state="translated">このメソッドが呼び出されたときの現在位置がループ終了点よりも大きい場合、ループ終了点が変更されない限り、再生はループせずにシーケンスの最後まで継続されます。</target>
        </trans-unit>
        <trans-unit id="7e2a55a1a8bd4ad8685ae28cb47b45b0f898fa44" translate="yes" xml:space="preserve">
          <source>If the current position when this method is invoked is greater than the loop end point, playback simply continues to the end of the clip without looping.</source>
          <target state="translated">このメソッドが呼び出されたときの現在位置がループ終了点よりも大きい場合、再生はループせずにクリップの最後まで継続されます。</target>
        </trans-unit>
        <trans-unit id="53f9e2fbf2a84ba1f43f8095838a4643dc8b642a" translate="yes" xml:space="preserve">
          <source>If the current thread already holds the lock then the hold count is incremented by one and the method returns immediately.</source>
          <target state="translated">現在のスレッドがすでにロックを保持している場合は、保持カウントが 1 つインクリメントされ、メソッドはすぐに戻ります。</target>
        </trans-unit>
        <trans-unit id="bea401fb42f3ffdcd05852cff501d885235ba3f7" translate="yes" xml:space="preserve">
          <source>If the current thread already holds the write lock then the hold count is incremented by one and the method returns immediately.</source>
          <target state="translated">現在のスレッドが既に書き込みロックを保持している場合は、保持数が 1 つインクリメントされ、メソッドはすぐに戻ります。</target>
        </trans-unit>
        <trans-unit id="b5d5c6242f9711c787eadd91061f9abc9aef5a8f" translate="yes" xml:space="preserve">
          <source>If the current thread already holds this lock then the hold count is incremented by one and the method returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">現在のスレッドがすでにこのロックを保持している場合は、保持カウントが1つ増え、メソッドは &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e1db59e340b43fddf7a6d53a8527759fc071b7e9" translate="yes" xml:space="preserve">
          <source>If the current thread already holds this lock then the hold count is incremented by one and the method returns immediately.</source>
          <target state="translated">現在のスレッドがすでにこのロックを保持している場合は、保持数が 1 つインクリメントされ、メソッドはすぐに戻ります。</target>
        </trans-unit>
        <trans-unit id="de1ccea35bb4ddb6a5d8665f27c10c6698fe0002" translate="yes" xml:space="preserve">
          <source>If the current thread is &lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt;interrupted&lt;/a&gt; while waiting for a permit then it will continue to wait, but the time at which the thread is assigned a permit may change compared to the time it would have received the permit had no interruption occurred. When the thread does return from this method its interrupt status will be set.</source>
          <target state="translated">許可を待っている間に現在のスレッドが&lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt;中断された&lt;/a&gt;場合、そのスレッドは引き続き待機しますが、スレッドに許可が割り当てられる時間は、中断が発生しなかった場合に許可を受け取った時間と比較して変わる可能性があります。スレッドがこのメソッドから戻ると、割り込みステータスが設定されます。</target>
        </trans-unit>
        <trans-unit id="967846e3a908254c0237f926edc93e8f505ceba6" translate="yes" xml:space="preserve">
          <source>If the current thread is &lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt;interrupted&lt;/a&gt; while waiting for permits then it will continue to wait and its position in the queue is not affected. When the thread does return from this method its interrupt status will be set.</source>
          <target state="translated">許可を待っている間に現在のスレッドが&lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt;中断された&lt;/a&gt;場合、そのスレッドは待機を続け、キュー内のその位置は影響を受けません。スレッドがこのメソッドから戻ると、割り込みステータスが設定されます。</target>
        </trans-unit>
        <trans-unit id="c86b44509cfe15cabcfd2d4aab1300bc1d4ef97f" translate="yes" xml:space="preserve">
          <source>If the current thread is &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;interrupted&lt;/a&gt; while waiting for a permit then it will continue to wait, but the time at which the thread is assigned a permit may change compared to the time it would have received the permit had no interruption occurred. When the thread does return from this method its interrupt status will be set.</source>
          <target state="translated">許可の待機中に現在のスレッドが&lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;中断された&lt;/a&gt;場合、そのスレッドは待機し続けますが、許可が割り当てられた時間は、中断が発生しなかった場合の許可を受け取ったときと比較して変化する可能性があります。スレッドがこのメソッドから戻ると、割り込みステータスが設定されます。</target>
        </trans-unit>
        <trans-unit id="40fca319282952e93dfb024ecdef67ea1fa9292a" translate="yes" xml:space="preserve">
          <source>If the current thread is &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;interrupted&lt;/a&gt; while waiting for permits then it will continue to wait and its position in the queue is not affected. When the thread does return from this method its interrupt status will be set.</source>
          <target state="translated">許可の待機中に現在のスレッドが&lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;中断された&lt;/a&gt;場合、そのスレッドは待機し続け、キュー内での位置は影響を受けません。スレッドがこのメソッドから戻ると、割り込みステータスが設定されます。</target>
        </trans-unit>
        <trans-unit id="161cfbc9814785c409424f6bf227b4259b6505f5" translate="yes" xml:space="preserve">
          <source>If the current thread is &lt;a href=&quot;thread#interrupt()&quot;&gt;interrupted&lt;/a&gt; by any thread before or while it is waiting, then an &lt;code&gt;InterruptedException&lt;/code&gt; is thrown. The &lt;em&gt;interrupted status&lt;/em&gt; of the current thread is cleared when this exception is thrown. This exception is not thrown until the lock status of this object has been restored as described above.</source>
          <target state="translated">現在のスレッドが待機前または待機中にスレッドによって&lt;a href=&quot;thread#interrupt()&quot;&gt;中断&lt;/a&gt;された場合、 &lt;code&gt;InterruptedException&lt;/code&gt; がスローされます。この例外がスローされると、現在のスレッドの&lt;em&gt;割り込みステータス&lt;/em&gt;がクリアされます。この例外は、このオブジェクトのロックステータスが上記のように復元されるまでスローされません。</target>
        </trans-unit>
        <trans-unit id="b1885c7979cce95514869fcb5fe52518650ad751" translate="yes" xml:space="preserve">
          <source>If the current thread is &lt;a href=&quot;thread#interrupt--&quot;&gt;interrupted&lt;/a&gt; by any thread before or while it is waiting, then an &lt;code&gt;InterruptedException&lt;/code&gt; is thrown. This exception is not thrown until the lock status of this object has been restored as described above.</source>
          <target state="translated">現在のスレッドが待機中または待機中にスレッドによって&lt;a href=&quot;thread#interrupt--&quot;&gt;中断&lt;/a&gt;された場合、 &lt;code&gt;InterruptedException&lt;/code&gt; がスローされます。この例外は、上記のようにこのオブジェクトのロックステータスが復元されるまでスローされません。</target>
        </trans-unit>
        <trans-unit id="24ed769eb7f1d50760a5de23563feab0d013a7eb" translate="yes" xml:space="preserve">
          <source>If the current thread is not the last to arrive then it is disabled for thread scheduling purposes and lies dormant until one of the following things happens:</source>
          <target state="translated">現在のスレッドが最後に到着していない場合、そのスレッドはスレッドスケジューリングのために無効化され、次のいずれかが起こるまで休止状態になります。</target>
        </trans-unit>
        <trans-unit id="e93c6ed45977774fb9b45dd0f270b3aadbc2d8b5" translate="yes" xml:space="preserve">
          <source>If the current thread is operating in a ForkJoinPool, unschedules and returns, without executing, a task externally submitted to the pool, if one is available.</source>
          <target state="translated">現在のスレッドが ForkJoinPool で動作している場合、プールに外部から投入されたタスクが利用可能であれば、実行せずにスケジューリングを解除して返します。</target>
        </trans-unit>
        <trans-unit id="8a9ec92500bb555146f4ac53bbc7fab388d80cf9" translate="yes" xml:space="preserve">
          <source>If the current thread is operating in a ForkJoinPool, unschedules and returns, without executing, a task externally submitted to the pool, if one is available. Availability may be transient, so a &lt;code&gt;null&lt;/code&gt; result does not necessarily imply quiescence of the pool. This method is designed primarily to support extensions, and is unlikely to be useful otherwise.</source>
          <target state="translated">現在のスレッドがForkJoinPoolで動作している場合、スケジュールを解除して、実行せずに、プールに外部から送信されたタスク（使用可能な場合）を返します。可用性は一時的なものである可能性があるため、 &lt;code&gt;null&lt;/code&gt; の結果は、必ずしもプールの休止を意味するわけではありません。この方法は、主に拡張機能をサポートするように設計されており、他の方法では役に立たない可能性があります。</target>
        </trans-unit>
        <trans-unit id="e3e28b29b93f45a59813378f46cf35c86d696607" translate="yes" xml:space="preserve">
          <source>If the current thread is operating in a ForkJoinPool, unschedules and returns, without executing, the next task queued by the current thread but not yet executed, if one is available, or if not available, a task that was forked by some other thread, if available.</source>
          <target state="translated">現在のスレッドが ForkJoinPool で動作している場合、現在のスレッドがキューイングしているがまだ実行されていない次のタスクが利用可能であればそのタスクを、利用可能でなければ他のスレッドがフォークしたタスクが利用可能であればそのタスクを、実行せずにアンスケジューリングして返します。</target>
        </trans-unit>
        <trans-unit id="644fbda54838e93f9bd7f153a0b223117b46c3c3" translate="yes" xml:space="preserve">
          <source>If the current thread is operating in a ForkJoinPool, unschedules and returns, without executing, the next task queued by the current thread but not yet executed, if one is available, or if not available, a task that was forked by some other thread, if available. Availability may be transient, so a &lt;code&gt;null&lt;/code&gt; result does not necessarily imply quiescence of the pool this task is operating in. This method is designed primarily to support extensions, and is unlikely to be useful otherwise.</source>
          <target state="translated">現在のスレッドがForkJoinPoolで動作している場合、スケジュールを解除して、実行せずに、現在のスレッドによってキューに入れられているがまだ実行されていない次のタスクを返します（利用可能な場合、または利用できない場合、他のスレッドによって分岐されたタスク）。可能な場合は。可用性が一時的である可能性があるため、 &lt;code&gt;null&lt;/code&gt; の結果は、このタスクが動作しているプールの静止を必ずしも意味するわけではありません。</target>
        </trans-unit>
        <trans-unit id="9d049c03bd38570f1b5a5d1aad9ff5cbfe4db5f0" translate="yes" xml:space="preserve">
          <source>If the current thread is the holder of this lock then the hold count is decremented. If the hold count is now zero then the lock is released. If the current thread is not the holder of this lock then &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt;&lt;code&gt;IllegalMonitorStateException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">現在のスレッドがこのロックの保持者である場合、保持カウントは減少します。保持カウントがゼロになると、ロックが解除されます。現在のスレッドがこのロックの保持者でない場合、&lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt; &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="2cbfc6598ed6d1e50de22bbc3b671f7d2bef7cad" translate="yes" xml:space="preserve">
          <source>If the current thread is the last thread to arrive, and a non-null barrier action was supplied in the constructor, then the current thread runs the action before allowing the other threads to continue. If an exception occurs during the barrier action then that exception will be propagated in the current thread and the barrier is placed in the broken state.</source>
          <target state="translated">現在のスレッドが最後に到着したスレッドであり、 コンストラクタで非 null のバリアアクションが与えられている場合、 現在のスレッドは他のスレッドの続行を許可する前にそのアクションを実行します。バリアアクションの実行中に例外が発生した場合、その例外は現在のスレッドに伝搬し、 バリアは壊れた状態に置かれます。</target>
        </trans-unit>
        <trans-unit id="b1e09d61076e9dee8c7eca8604a1a4fdebca47aa" translate="yes" xml:space="preserve">
          <source>If the current thread's interrupted status is set when it enters this method, or it is &lt;a href=&quot;../../../lang/thread#interrupt()&quot;&gt;interrupted&lt;/a&gt; while waiting, it will continue to wait until signalled. When it finally returns from this method its interrupted status will still be set.</source>
          <target state="translated">このメソッドに入るときに現在のスレッドの割り込みステータスが設定されている場合、または待機中に&lt;a href=&quot;../../../lang/thread#interrupt()&quot;&gt;中断&lt;/a&gt;された場合、スレッドは通知されるまで待機し続けます。最終的にこのメソッドから戻ったとき、中断されたステータスは引き続き設定されます。</target>
        </trans-unit>
        <trans-unit id="480b46196b0983b7baf6bc149cb22ece25ccb0df" translate="yes" xml:space="preserve">
          <source>If the current thread's interrupted status is set when it enters this method, or it is &lt;a href=&quot;../../../lang/thread#interrupt--&quot;&gt;interrupted&lt;/a&gt; while waiting, it will continue to wait until signalled. When it finally returns from this method its interrupted status will still be set.</source>
          <target state="translated">このメソッドに入るときに現在のスレッドの割り込みステータスが設定されている場合、または待機中に&lt;a href=&quot;../../../lang/thread#interrupt--&quot;&gt;割り込みが発生&lt;/a&gt;した場合、シグナルが送られるまで待機し続けます。最終的にこのメソッドから戻るとき、割り込みステータスは引き続き設定されます。</target>
        </trans-unit>
        <trans-unit id="b9ceafb860d280bdbbb95ef180a5ebfa010ab70b" translate="yes" xml:space="preserve">
          <source>If the current thread:</source>
          <target state="translated">現在のスレッドであれば</target>
        </trans-unit>
        <trans-unit id="1b6dd611de80c284ec3983e42c194ba2625b5744" translate="yes" xml:space="preserve">
          <source>If the current token is a number, this field contains the value of that number.</source>
          <target state="translated">現在のトークンが数値の場合、このフィールドにはその数値の値が含まれます。</target>
        </trans-unit>
        <trans-unit id="a766629228a237157e338578f73608fe87ee3533" translate="yes" xml:space="preserve">
          <source>If the current token is a number, this field contains the value of that number. The current token is a number when the value of the &lt;code&gt;ttype&lt;/code&gt; field is &lt;code&gt;TT_NUMBER&lt;/code&gt;.</source>
          <target state="translated">現在のトークンが数値の場合、このフィールドにはその数値が含まれます。 &lt;code&gt;ttype&lt;/code&gt; フィールドの値が &lt;code&gt;TT_NUMBER&lt;/code&gt; の場合、現在のトークンは数値です。</target>
        </trans-unit>
        <trans-unit id="b366b28cb0c7e588029e3e176037326753259a0b" translate="yes" xml:space="preserve">
          <source>If the current token is a word token, this field contains a string giving the characters of the word token.</source>
          <target state="translated">現在のトークンがワードトークンの場合、このフィールドにはワードトークンの文字列が含まれます。</target>
        </trans-unit>
        <trans-unit id="6e1d9b63def477efdc3e54487d9fe89e9c35bd3c" translate="yes" xml:space="preserve">
          <source>If the current token is a word token, this field contains a string giving the characters of the word token. When the current token is a quoted string token, this field contains the body of the string.</source>
          <target state="translated">現在のトークンがワードトークンの場合、このフィールドにはワードトークンの文字列が含まれます。現在のトークンが引用符で囲まれた文字列トークンの場合、このフィールドには文字列の本文が含まれます。</target>
        </trans-unit>
        <trans-unit id="b562295eceffafbb5ee1280fac546021ba6d2f83" translate="yes" xml:space="preserve">
          <source>If the currently selected input method or keyboard layout supports the requested locale, it remains selected.</source>
          <target state="translated">現在選択されている入力方式やキーボードレイアウトが要求されたロケールをサポートしている場合は、それが選択されたままになります。</target>
        </trans-unit>
        <trans-unit id="e560277f9d287926b99c30eb8d401571d2c384c5" translate="yes" xml:space="preserve">
          <source>If the data to be updated has already been changed in the data source, there is a conflict, in which case the writer will not write the changes to the data source. The algorithm the writer uses for preventing or limiting conflicts depends entirely on its implementation.</source>
          <target state="translated">更新されるデータがすでにデータソースで変更されている場合、競合が発生し、その場合、ライタはデータソースに変更を書き込まない。競合を防止または制限するためにライタが使用するアルゴリズムは、その実装に完全に依存します。</target>
        </trans-unit>
        <trans-unit id="4610902d947f8dfa90bc178c559c33b46139cb9c" translate="yes" xml:space="preserve">
          <source>If the database supports SQL distinct types, then getTypeInfo() will return a single row with a TYPE_NAME of DISTINCT and a DATA_TYPE of Types.DISTINCT. If the database supports SQL structured types, then getTypeInfo() will return a single row with a TYPE_NAME of STRUCT and a DATA_TYPE of Types.STRUCT.</source>
          <target state="translated">データベースがSQLの個別型をサポートしている場合、getTypeInfo()は、TYPE_NAMEにDISTINCT、DATA_TYPEにTypes.DISTINCTを指定した1行を返します。データベースがSQL構造化型をサポートしている場合、getTypeInfo()は、TYPE_NAMEがSTRUCTで、DATA_TYPEがTypes.STRUCTの単一行を返します。</target>
        </trans-unit>
        <trans-unit id="a247e695dc806480de65475cdb7e49df5eec14fe" translate="yes" xml:space="preserve">
          <source>If the day-of-month is invalid for the year, it will be changed to the last valid day of the month.</source>
          <target state="translated">その年の月日が無効な場合は、その月の最後に有効な日に変更されます。</target>
        </trans-unit>
        <trans-unit id="5735c07ca103e22b6407b4ed7457c3834e66f98c" translate="yes" xml:space="preserve">
          <source>If the day-of-week is not available to format or parse then jump to day-of-month.</source>
          <target state="translated">曜日がフォーマットまたはパースできない場合は、月の曜日にジャンプします。</target>
        </trans-unit>
        <trans-unit id="e4a38749edf09c8d242c279b91b8274b568cddfc" translate="yes" xml:space="preserve">
          <source>If the declared type of the field is a parameterized type, the &lt;code&gt;Type&lt;/code&gt; object returned must accurately reflect the actual type arguments used in the source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680a3260a09bc245ba12ad31e3216d2204601bd3" translate="yes" xml:space="preserve">
          <source>If the declared type of the record component is a parameterized type, the &lt;code&gt;Type&lt;/code&gt; object returned reflects the actual type arguments used in the source code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836dc244145205490ef4ca5e728f09d48ff45702" translate="yes" xml:space="preserve">
          <source>If the decoded byte output of the needed size can not be allocated, the decode methods of this class will cause an &lt;a href=&quot;../lang/outofmemoryerror&quot;&gt;&lt;code&gt;OutOfMemoryError&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f18de43b225ddbb14630d1c44418bb878cab7e5f" translate="yes" xml:space="preserve">
          <source>If the default &lt;a href=&quot;locale.category#DISPLAY&quot;&gt;&lt;code&gt;DISPLAY&lt;/code&gt;&lt;/a&gt; locale contains &quot;rg&quot; (region override) &lt;a href=&quot;locale#def_locale_extension&quot;&gt;Unicode extension&lt;/a&gt;, the symbol returned from this method reflects the value specified with that extension.</source>
          <target state="translated">デフォルトの&lt;a href=&quot;locale.category#DISPLAY&quot;&gt; &lt;code&gt;DISPLAY&lt;/code&gt; &lt;/a&gt;ロケールに「rg」（領域オーバーライド）&lt;a href=&quot;locale#def_locale_extension&quot;&gt;Unicode拡張子&lt;/a&gt;が含まれている場合、このメソッドから返される記号は、その拡張子で指定された値を反映します。</target>
        </trans-unit>
        <trans-unit id="dfa93f2a463d291904aa277d4928f5e5cc774981" translate="yes" xml:space="preserve">
          <source>If the default behavior is not desired, then a Java security property can be set to a different Time-to-live (TTL) value for positive caching. Likewise, a system admin can configure a different negative caching TTL value when needed.</source>
          <target state="translated">デフォルトの動作が望まれない場合、Java セキュリティプロパティは、正のキャッシングのために別の TTL (Time-to-Live)値に設定することができます。同様に、システム管理者は必要に応じて、異なるネガティブなキャッシングのTTL値を設定することができます。</target>
        </trans-unit>
        <trans-unit id="6889d388923a46b89918d04e5ceb2d2c40c4a81f" translate="yes" xml:space="preserve">
          <source>If the default drag cursor behavior is active, this method sets the default drag cursor for the specified actions supported by the drag source, the drop target action, and status, otherwise this method does nothing.</source>
          <target state="translated">デフォルトのドラッグカーソル動作がアクティブな場合、このメソッドは、ドラッグソース、ドロップターゲットアクション、およびステータスによってサポートされる指定されたアクションに対してデフォルトのドラッグカーソルを設定します。</target>
        </trans-unit>
        <trans-unit id="28ec4fb264f4592c3191c9dfa387e6201501d30a" translate="yes" xml:space="preserve">
          <source>If the descriptor encoded in the byte buffer does not indicate a set of packages in the module then the &lt;code&gt;packageFinder&lt;/code&gt; will be invoked. The set of packages that the &lt;code&gt;packageFinder&lt;/code&gt; returns must include all the packages that the module exports, opens, as well as the packages of the service implementations that the module provides, and the package of the main class (if the module has a main class). If the &lt;code&gt;packageFinder&lt;/code&gt; throws an &lt;a href=&quot;../../io/uncheckedioexception&quot;&gt;&lt;code&gt;UncheckedIOException&lt;/code&gt;&lt;/a&gt; then &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; cause will be re-thrown.</source>
          <target state="translated">バイトバッファにエンコードされた記述子がモジュール内のパッケージのセットを示していない場合、 &lt;code&gt;packageFinder&lt;/code&gt; が呼び出されます。 &lt;code&gt;packageFinder&lt;/code&gt; が返すパッケージのセットには、モジュールがエクスポートして開くすべてのパッケージ、モジュールが提供するサービス実装のパッケージ、およびメインクラスのパッケージ（モジュールにメインクラスがある場合）が含まれている必要があります。 。場合 &lt;code&gt;packageFinder&lt;/code&gt; がスロー&lt;a href=&quot;../../io/uncheckedioexception&quot;&gt; &lt;code&gt;UncheckedIOException&lt;/code&gt; を&lt;/a&gt;、その後&lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;原因は、再スローされます。</target>
        </trans-unit>
        <trans-unit id="b98052904a44628625b06f819a5054b172f83074" translate="yes" xml:space="preserve">
          <source>If the descriptor encoded in the input stream does not indicate a set of packages in the module then the &lt;code&gt;packageFinder&lt;/code&gt; will be invoked. The set of packages that the &lt;code&gt;packageFinder&lt;/code&gt; returns must include all the packages that the module exports, opens, as well as the packages of the service implementations that the module provides, and the package of the main class (if the module has a main class). If the &lt;code&gt;packageFinder&lt;/code&gt; throws an &lt;a href=&quot;../../io/uncheckedioexception&quot;&gt;&lt;code&gt;UncheckedIOException&lt;/code&gt;&lt;/a&gt; then &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; cause will be re-thrown.</source>
          <target state="translated">入力ストリームにエンコードされた記述子がモジュール内のパッケージのセットを示していない場合、 &lt;code&gt;packageFinder&lt;/code&gt; が呼び出されます。 &lt;code&gt;packageFinder&lt;/code&gt; が返すパッケージのセットには、モジュールがエクスポートして開くすべてのパッケージ、モジュールが提供するサービス実装のパッケージ、およびメインクラスのパッケージ（モジュールにメインクラスがある場合）が含まれている必要があります。 。場合 &lt;code&gt;packageFinder&lt;/code&gt; がスロー&lt;a href=&quot;../../io/uncheckedioexception&quot;&gt; &lt;code&gt;UncheckedIOException&lt;/code&gt; を&lt;/a&gt;、その後&lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;原因は、再スローされます。</target>
        </trans-unit>
        <trans-unit id="b2cac5e3a466b13ae80c01fca973dcf37b93b686" translate="yes" xml:space="preserve">
          <source>If the descriptor is empty the following String is returned: &amp;lt;Descriptor&amp;gt;&amp;lt;/Descriptor&amp;gt;</source>
          <target state="translated">記述子が空の場合、次の文字列が返されます：&amp;lt;Descriptor&amp;gt; &amp;lt;/ Descriptor&amp;gt;</target>
        </trans-unit>
        <trans-unit id="873e8f5cab98a9e1326f6e91f9c4bb6efc23d9fb" translate="yes" xml:space="preserve">
          <source>If the designated column has a datatype of CHAR or VARCHAR and contains a &quot;0&quot; or has a datatype of BIT, TINYINT, SMALLINT, INTEGER or BIGINT and contains a 0, a value of &lt;code&gt;false&lt;/code&gt; is returned. If the designated column has a datatype of CHAR or VARCHAR and contains a &quot;1&quot; or has a datatype of BIT, TINYINT, SMALLINT, INTEGER or BIGINT and contains a 1, a value of &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">指定された列のデータ型がCHARまたはVARCHARで、「0」が含まれている場合、またはデータ型がBIT、TINYINT、SMALLINT、INTEGER、またはBIGINTであり、0が含まれている場合、 &lt;code&gt;false&lt;/code&gt; の値が返されます。指定された列のデータ型がCHARまたはVARCHARで、「1」が含まれている場合、またはデータ型がBIT、TINYINT、SMALLINT、INTEGER、またはBIGINTであり、1が含まれている場合、 &lt;code&gt;true&lt;/code&gt; の値が返されます。</target>
        </trans-unit>
        <trans-unit id="8424e147bec876cffc18c36963ed5006f3be55ca" translate="yes" xml:space="preserve">
          <source>If the desired URL is not the one currently being displayed, the &lt;code&gt;getStream&lt;/code&gt; method is called to give subclasses control over the stream provided.</source>
          <target state="translated">目的のURLが現在表示されているものではない場合、 &lt;code&gt;getStream&lt;/code&gt; メソッドが呼び出され、提供されたストリームをサブクラスが制御できるようになります。</target>
        </trans-unit>
        <trans-unit id="3e04d7b4037ef0253d1eb9639910efd968b0cd89" translate="yes" xml:space="preserve">
          <source>If the desired member is &lt;code&gt;protected&lt;/code&gt;, the usual JVM rules apply, including the requirement that the lookup class must be either be in the same package as the desired member, or must inherit that member. (See the Java Virtual Machine Specification, sections 4.9.2, 5.4.3.5, and 6.4.) In addition, if the desired member is a non-static field or method in a different package, the resulting method handle may only be applied to objects of the lookup class or one of its subclasses. This requirement is enforced by narrowing the type of the leading &lt;code&gt;this&lt;/code&gt; parameter from &lt;code&gt;C&lt;/code&gt; (which will necessarily be a superclass of the lookup class) to the lookup class itself.</source>
          <target state="translated">目的のメンバーが &lt;code&gt;protected&lt;/code&gt; 場合は、通常のJVMルールが適用されます。これには、ルックアップクラスが目的のメンバーと同じパッケージ内にあるか、そのメンバーを継承する必要があるという要件が含まれます。 （Java仮想マシン仕様のセクション4.9.2、5.4.3.5、および6.4を参照してください。）さらに、目的のメンバーが別のパッケージ内の非静的フィールドまたはメソッドである場合、結果のメソッドハンドルは、ルックアップクラスまたはそのサブクラスの1つのオブジェクト。この要件は、先頭の &lt;code&gt;this&lt;/code&gt; パラメーターの型を &lt;code&gt;C&lt;/code&gt; （ルックアップクラスのスーパークラスである必要があります）からルックアップクラス自体に狭めることによって適用されます。</target>
        </trans-unit>
        <trans-unit id="9cfcd353d5f1c2be5e212dcf6a896c2900365e70" translate="yes" xml:space="preserve">
          <source>If the desired member is &lt;code&gt;protected&lt;/code&gt;, the usual JVM rules apply, including the requirement that the lookup class must either be in the same package as the desired member, or must inherit that member. (See the Java Virtual Machine Specification, sections &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.9.2&quot;&gt;4.9.2&lt;/a&gt;, &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.4.3.5&quot;&gt;5.4.3.5&lt;/a&gt;, and &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-6.html#jls-6.4&quot;&gt;6.4&lt;/a&gt;.) In addition, if the desired member is a non-static field or method in a different package, the resulting method handle may only be applied to objects of the lookup class or one of its subclasses. This requirement is enforced by narrowing the type of the leading &lt;code&gt;this&lt;/code&gt; parameter from &lt;code&gt;C&lt;/code&gt; (which will necessarily be a superclass of the lookup class) to the lookup class itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1be7735213926c3d2c892b139efeed267ca86c" translate="yes" xml:space="preserve">
          <source>If the destination &lt;code&gt;Raster&lt;/code&gt; is null, a new &lt;code&gt;Raster&lt;/code&gt; is created. An &lt;code&gt;IllegalArgumentException&lt;/code&gt; may be thrown if the source is the same as the destination or if the number of bands in the source is not equal to the number of bands in the destination.</source>
          <target state="translated">宛先 &lt;code&gt;Raster&lt;/code&gt; がnullの場合、新しい &lt;code&gt;Raster&lt;/code&gt; が作成されます。AN &lt;code&gt;IllegalArgumentException&lt;/code&gt; がソースがデスティネーションとして、またはソースのバンド数は先のバンド数と等しくない場合に同じである場合にスローされてもよいです。</target>
        </trans-unit>
        <trans-unit id="562d186cddc9b882f1164e575c0ca6cdd70e8771" translate="yes" xml:space="preserve">
          <source>If the destination is &lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt;&lt;code&gt;Redirect.PIPE&lt;/code&gt;&lt;/a&gt; (the initial value), then the error output of a subprocess can be read using the input stream returned by &lt;a href=&quot;process#getErrorStream()&quot;&gt;&lt;code&gt;Process.getErrorStream()&lt;/code&gt;&lt;/a&gt;. If the destination is set to any other value, then &lt;a href=&quot;process#getErrorStream()&quot;&gt;&lt;code&gt;Process.getErrorStream()&lt;/code&gt;&lt;/a&gt; will return a &lt;a href=&quot;#redirect-output&quot;&gt;null input stream&lt;/a&gt;.</source>
          <target state="translated">宛先が&lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt; &lt;code&gt;Redirect.PIPE&lt;/code&gt; &lt;/a&gt;（初期値）の場合、サブプロセスのエラー出力は、&lt;a href=&quot;process#getErrorStream()&quot;&gt; &lt;code&gt;Process.getErrorStream()&lt;/code&gt; &lt;/a&gt;によって返される入力ストリームを使用して読み取ることができます。宛先が他の値に設定されている場合、&lt;a href=&quot;process#getErrorStream()&quot;&gt; &lt;code&gt;Process.getErrorStream()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#redirect-output&quot;&gt;nullの入力ストリーム&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="2f1759b66bcf0473ca1f75eb77e287f807f0be61" translate="yes" xml:space="preserve">
          <source>If the destination is &lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt;&lt;code&gt;Redirect.PIPE&lt;/code&gt;&lt;/a&gt; (the initial value), then the error output of a subprocess can be read using the input stream returned by &lt;a href=&quot;process#getErrorStream--&quot;&gt;&lt;code&gt;Process.getErrorStream()&lt;/code&gt;&lt;/a&gt;. If the destination is set to any other value, then &lt;a href=&quot;process#getErrorStream--&quot;&gt;&lt;code&gt;Process.getErrorStream()&lt;/code&gt;&lt;/a&gt; will return a &lt;a href=&quot;#redirect-output&quot;&gt;null input stream&lt;/a&gt;.</source>
          <target state="translated">宛先が&lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt; &lt;code&gt;Redirect.PIPE&lt;/code&gt; &lt;/a&gt;（初期値）の場合、サブプロセスのエラー出力は、&lt;a href=&quot;process#getErrorStream--&quot;&gt; &lt;code&gt;Process.getErrorStream()&lt;/code&gt; &lt;/a&gt;によって返された入力ストリームを使用して読み取ることができます。宛先が他の値に設定されている場合、&lt;a href=&quot;process#getErrorStream--&quot;&gt; &lt;code&gt;Process.getErrorStream()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#redirect-output&quot;&gt;null入力ストリーム&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="3ca5de5b614e7eb26d543dee9c4a10ca118934c5" translate="yes" xml:space="preserve">
          <source>If the destination is &lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt;&lt;code&gt;Redirect.PIPE&lt;/code&gt;&lt;/a&gt; (the initial value), then the standard output of a subprocess can be read using the input stream returned by &lt;a href=&quot;process#getInputStream()&quot;&gt;&lt;code&gt;Process.getInputStream()&lt;/code&gt;&lt;/a&gt;. If the destination is set to any other value, then &lt;a href=&quot;process#getInputStream()&quot;&gt;&lt;code&gt;Process.getInputStream()&lt;/code&gt;&lt;/a&gt; will return a &lt;a href=&quot;#redirect-output&quot;&gt;null input stream&lt;/a&gt;.</source>
          <target state="translated">宛先が&lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt; &lt;code&gt;Redirect.PIPE&lt;/code&gt; &lt;/a&gt;（初期値）の場合、サブプロセスの標準出力は、&lt;a href=&quot;process#getInputStream()&quot;&gt; &lt;code&gt;Process.getInputStream()&lt;/code&gt; &lt;/a&gt;によって返される入力ストリームを使用して読み取ることができます。宛先が他の値に設定されている場合、&lt;a href=&quot;process#getInputStream()&quot;&gt; &lt;code&gt;Process.getInputStream()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#redirect-output&quot;&gt;nullの入力ストリーム&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="b68154bc9bb15cf5c833579d040cf02c8940944f" translate="yes" xml:space="preserve">
          <source>If the destination is &lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt;&lt;code&gt;Redirect.PIPE&lt;/code&gt;&lt;/a&gt; (the initial value), then the standard output of a subprocess can be read using the input stream returned by &lt;a href=&quot;process#getInputStream--&quot;&gt;&lt;code&gt;Process.getInputStream()&lt;/code&gt;&lt;/a&gt;. If the destination is set to any other value, then &lt;a href=&quot;process#getInputStream--&quot;&gt;&lt;code&gt;Process.getInputStream()&lt;/code&gt;&lt;/a&gt; will return a &lt;a href=&quot;#redirect-output&quot;&gt;null input stream&lt;/a&gt;.</source>
          <target state="translated">宛先が&lt;a href=&quot;processbuilder.redirect#PIPE&quot;&gt; &lt;code&gt;Redirect.PIPE&lt;/code&gt; &lt;/a&gt;（初期値）の場合、サブプロセスの標準出力は、&lt;a href=&quot;process#getInputStream--&quot;&gt; &lt;code&gt;Process.getInputStream()&lt;/code&gt; &lt;/a&gt;によって返された入力ストリームを使用して読み取ることができます。宛先が他の値に設定されている場合、&lt;a href=&quot;process#getInputStream--&quot;&gt; &lt;code&gt;Process.getInputStream()&lt;/code&gt; &lt;/a&gt;は&lt;a href=&quot;#redirect-output&quot;&gt;null入力ストリーム&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="24fa6417e10753014fbf446e67531a964d3dc7f5" translate="yes" xml:space="preserve">
          <source>If the destination is null, it will be created with a number of bands equalling the number of rows in the matrix. No exception is thrown if the operation causes a data overflow.</source>
          <target state="translated">宛先が NULL の場合は,行列の行数に等しい数のバンドが作成されます.この操作でデータオーバーフローが発生しても例外は発生しません。</target>
        </trans-unit>
        <trans-unit id="5814c260a49a2bf524faa7ed1d2bd24188a54959" translate="yes" xml:space="preserve">
          <source>If the destination's &lt;code&gt;append()&lt;/code&gt; method never throws &lt;code&gt;IOException&lt;/code&gt;, then this method will always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">宛先の &lt;code&gt;append()&lt;/code&gt; メソッドが &lt;code&gt;IOException&lt;/code&gt; をスローしない場合、このメソッドは常に &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="00009ef2f2723f566d5cd7d5ea238cfdfa3f8286" translate="yes" xml:space="preserve">
          <source>If the determinant is non-zero, then this transform is invertible and the various methods that depend on the inverse transform do not need to throw a &lt;a href=&quot;noninvertibletransformexception&quot;&gt;&lt;code&gt;NoninvertibleTransformException&lt;/code&gt;&lt;/a&gt;. If the determinant is zero then this transform can not be inverted since the transform maps all input coordinates onto a line or a point. If the determinant is near enough to zero then inverse transform operations might not carry enough precision to produce meaningful results.</source>
          <target state="translated">行列式がゼロ以外の場合、この変換は可逆であり、逆変換に依存するさまざまなメソッドは&lt;a href=&quot;noninvertibletransformexception&quot;&gt; &lt;code&gt;NoninvertibleTransformException&lt;/code&gt; &lt;/a&gt;をスローする必要はありません。行列式がゼロの場合、変換はすべての入力座標を線または点にマップするため、この変換を反転することはできません。行列式がゼロに十分近い場合、逆変換操作は意味のある結果を生成するのに十分な精度を持たない可能性があります。</target>
        </trans-unit>
        <trans-unit id="1f6980173cd7348cb8d2c24081aedaf81b540b3f" translate="yes" xml:space="preserve">
          <source>If the device does not support setting a specific controller, this method returns 0 for that controller. Calling &lt;code&gt;controlChange&lt;/code&gt; will have no effect then.</source>
          <target state="translated">デバイスが特定のコントローラーの設定をサポートしていない場合、このメソッドはそのコントローラーに対して0を返します。その場合、 &lt;code&gt;controlChange&lt;/code&gt; を呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="df1f0903f6dd8ca3989d88e94f2d77f67eb5ad33" translate="yes" xml:space="preserve">
          <source>If the device does not support setting channel pressure, this method always returns 0. Calling &lt;code&gt;setChannelPressure&lt;/code&gt; will have no effect then.</source>
          <target state="translated">デバイスがチャネル圧力の設定をサポートしていない場合、このメソッドは常に0を返します &lt;code&gt;setChannelPressure&lt;/code&gt; を呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="8233a3647bc57e6741c1cb20e7987108b8967295" translate="yes" xml:space="preserve">
          <source>If the device does not support setting poly pressure, this method always returns 0. Calling &lt;code&gt;setPolyPressure&lt;/code&gt; will have no effect then.</source>
          <target state="translated">デバイスがポリ圧力の設定をサポートしていない場合、このメソッドは常に0を返します &lt;code&gt;setPolyPressure&lt;/code&gt; を呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="f8a2d79cc304a6be8aee1283d70f86196ba6e581" translate="yes" xml:space="preserve">
          <source>If the dialog is modal and is not already visible, this call will not return until the dialog is hidden by calling hide or dispose. It is permissible to show modal dialogs from the event dispatching thread because the toolkit will ensure that another event pump runs while the one which invoked this method is blocked.</source>
          <target state="translated">ダイアログがモーダルで、まだ表示されていない場合、hide または dispose を呼び出してダイアログが非表示になるまで、この呼び出しは戻りません。このメソッドを呼び出したイベント ポンプがブロックされている間に別のイベント ポンプが実行されることをツールキットが保証するため、イベント ディスパッチング スレッドからモーダル ダイアログを表示することができます。</target>
        </trans-unit>
        <trans-unit id="ec907f76145e8ddd032cdc8267ff559cc1c48182" translate="yes" xml:space="preserve">
          <source>If the digit is less than 10, then &lt;code&gt;'0' + digit&lt;/code&gt; is returned. Otherwise, the value &lt;code&gt;'a' + digit - 10&lt;/code&gt; is returned.</source>
          <target state="translated">数字が10未満の場合、 &lt;code&gt;'0' + digit&lt;/code&gt; が返されます。それ以外の場合は、値 &lt;code&gt;'a' + digit - 10&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="d397471c9fa609642a9cc71822d0d3db3f61ef8d" translate="yes" xml:space="preserve">
          <source>If the directory does not support a string representation of some or all of its attributes, the form of &lt;code&gt;search&lt;/code&gt; that accepts filter arguments in the form of Objects can be used instead. The service provider for such a directory would then translate the filter arguments to its service-specific representation for filter evaluation. See &lt;code&gt;search(Name, String, Object[], SearchControls)&lt;/code&gt;.</source>
          <target state="translated">ディレクトリがその属性の一部またはすべての文字列表現をサポートしていない場合は、代わりにオブジェクトの形式でフィルター引数を受け入れる &lt;code&gt;search&lt;/code&gt; 形式を使用できます。そのようなディレクトリのサービスプロバイダーは、フィルター評価のためにフィルター引数をそのサービス固有の表現に変換します。 &lt;code&gt;search(Name, String, Object[], SearchControls)&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="77d2e43114de0de16774d5ed4ecd9f6313b3e490" translate="yes" xml:space="preserve">
          <source>If the doctype-public or doctype-system properties are specified, then the html output method should output a document type declaration immediately before the first element. The name following &amp;lt;!DOCTYPE should be HTML or html. If the doctype-public property is specified, then the output method should output PUBLIC followed by the specified public identifier; if the doctype-system property is also specified, it should also output the specified system identifier following the public identifier. If the doctype-system property is specified but the doctype-public property is not specified, then the output method should output SYSTEM followed by the specified system identifier.</source>
          <target state="translated">doctype-publicまたはdoctype-systemプロパティが指定されている場合、html outputメソッドは、最初の要素の直前にドキュメント型宣言を出力する必要があります。&amp;lt;！DOCTYPEに続く名前は、HTMLまたはhtmlである必要があります。doctype-publicプロパティが指定されている場合、outputメソッドはPUBLICの後に指定されたパブリック識別子を出力する必要があります。doctype-systemプロパティも指定されている場合は、パブリック識別子の後に指定されたシステム識別子も出力する必要があります。doctype-systemプロパティが指定されているが、doctype-publicプロパティが指定されていない場合、outputメソッドはSYSTEMの後に指定されたシステム識別子を出力する必要があります。</target>
        </trans-unit>
        <trans-unit id="86b3eab9594a91d2810de348de7dd9c40f4c769d" translate="yes" xml:space="preserve">
          <source>If the doctype-system property is specified, the xml output method should output a document type declaration immediately before the first element. The name following &amp;lt;!DOCTYPE should be the name of the first element. If doctype-public property is also specified, then the xml output method should output PUBLIC followed by the public identifier and then the system identifier; otherwise, it should output SYSTEM followed by the system identifier. The internal subset should be empty. The value of the doctype-public property should be ignored unless the doctype-system property is specified.</source>
          <target state="translated">doctype-systemプロパティが指定されている場合、xml outputメソッドは、最初の要素の直前にドキュメント型宣言を出力する必要があります。 &amp;lt;！DOCTYPEに続く名前は、最初の要素の名前である必要があります。 doctype-publicプロパティも指定されている場合、xml出力メソッドはPUBLIC、パブリック識別子、システム識別子の順に出力する必要があります。それ以外の場合は、SYSTEMの後にシステム識別子を出力する必要があります。内部サブセットは空である必要があります。 doctype-systemプロパティが指定されていない限り、doctype-publicプロパティの値は無視する必要があります。</target>
        </trans-unit>
        <trans-unit id="cee8facf69b90419835e8685cee670049ac617cb" translate="yes" xml:space="preserve">
          <source>If the document is loaded asynchronously, the document will be installed into the editor immediately using a call to &lt;code&gt;setDocument&lt;/code&gt; which will fire a document property change event, then a thread will be created which will begin doing the actual loading. In this case, the page property change event will not be fired by the call to this method directly, but rather will be fired when the thread doing the loading has finished. It will also be fired on the event-dispatch thread. Since the calling thread can not throw an &lt;code&gt;IOException&lt;/code&gt; in the event of failure on the other thread, the page property change event will be fired when the other thread is done whether the load was successful or not.</source>
          <target state="translated">ドキュメントが非同期で読み込まれる場合、ドキュメントは &lt;code&gt;setDocument&lt;/code&gt; の呼び出しを使用してすぐにエディターにインストールされ、ドキュメントプロパティの変更イベントが発生します。その後、実際の読み込みを開始するスレッドが作成されます。この場合、ページプロパティ変更イベントは、このメソッドの呼び出しによって直接発生するのではなく、ロードを実行しているスレッドが終了したときに発生します。また、イベントディスパッチスレッドでも発生します。他のスレッドで障害が発生した &lt;code&gt;IOException&lt;/code&gt; 、呼び出し元のスレッドはIOExceptionをスローできないため、ロードが成功したかどうかに関係なく、他のスレッドが実行されると、ページプロパティ変更イベントが発生します。</target>
        </trans-unit>
        <trans-unit id="7aa862933af1b586831035ab71ba5bcc647784cc" translate="yes" xml:space="preserve">
          <source>If the document is loaded synchronously, it will be filled in with the stream prior to being installed into the editor with a call to &lt;code&gt;setDocument&lt;/code&gt;, which is bound and will fire a property change event. If an &lt;code&gt;IOException&lt;/code&gt; is thrown the partially loaded document will be discarded and neither the document or page property change events will be fired. If the document is successfully loaded and installed, a view will be built for it by the UI which will then be scrolled if necessary, and then the page property change event will be fired.</source>
          <target state="translated">ドキュメントが同期的にロードされる場合、 &lt;code&gt;setDocument&lt;/code&gt; の呼び出しでエディターにインストールされる前に、ストリームが入力されます。setDocumentはバインドされ、プロパティ変更イベントを発生させます。場合 &lt;code&gt;IOException&lt;/code&gt; スローされ、部分的にロードされた文書が破棄され、どちらの文書またはページプロパティ変更イベントが発行されます。ドキュメントが正常にロードおよびインストールされると、UIによってビューが作成され、必要に応じてスクロールされてから、ページプロパティの変更イベントが発生します。</target>
        </trans-unit>
        <trans-unit id="662626e1d4e27eb6ce910acdf4f7275869e7a388" translate="yes" xml:space="preserve">
          <source>If the document's schema is a DTD or no schema is associated with the document, this method will always return &lt;code&gt;false&lt;/code&gt; . If the document's schema is an XML Schema, the method will return &lt;code&gt;true&lt;/code&gt; if the reference type definition is derived from the other type definition according to the derivation parameter. If the value of the parameter is &lt;code&gt;0&lt;/code&gt; (no bit is set to &lt;code&gt;1&lt;/code&gt; for the &lt;code&gt;derivationMethod&lt;/code&gt; parameter), the method will return &lt;code&gt;true&lt;/code&gt; if the other type definition can be reached by recursing any combination of {base type definition}, {item type definition}, or {member type definitions} from the reference type definition.</source>
          <target state="translated">ドキュメントのスキーマがDTDであるか、スキーマがドキュメントに関連付けられていない場合、このメソッドは常に &lt;code&gt;false&lt;/code&gt; を返します。ドキュメントのスキーマがXMLスキーマである場合、参照型定義が派生パ​​ラメーターに従って他の型定義から派生していると、メソッドは &lt;code&gt;true&lt;/code&gt; を返します。パラメータの値が &lt;code&gt;0&lt;/code&gt; の場合（ &lt;code&gt;derivationMethod&lt;/code&gt; パラメータのビットが &lt;code&gt;1&lt;/code&gt; に設定されていない場合）、{基本型定義}、{項目型定義}の任意の組み合わせを繰り返すことで他の型定義に到達できる場合、メソッドは &lt;code&gt;true&lt;/code&gt; を返します。 、または参照型定義からの{メンバー型定義}。</target>
        </trans-unit>
        <trans-unit id="57aa15be161d274da17fe9d39d1cfb694489d07e" translate="yes" xml:space="preserve">
          <source>If the document's schema is an XML DTD [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt;], the values are computed as follows:</source>
          <target state="translated">ドキュメントのスキーマがXMLDTD [ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt; ]の場合、値は次のように計算されます。</target>
        </trans-unit>
        <trans-unit id="2c1b98243027ae1c98645a593d178914a7c6839f" translate="yes" xml:space="preserve">
          <source>If the document's schema is an XML DTD [&lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt;], the values are computed as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10cb29a1e33b183a4131d16eb45066ea4a21c22" translate="yes" xml:space="preserve">
          <source>If the document's schema is an XML Schema [&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XML Schema Part 1&lt;/a&gt;] , the values are computed as follows using the post-schema-validation infoset contributions (also called PSVI contributions):</source>
          <target state="translated">ドキュメントのスキーマがXMLスキーマ[ &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XMLスキーマパート1&lt;/a&gt; ]の場合、値はスキーマ検証後のインフォセットコントリビューション（PSVIコントリビューションとも呼ばれます）を使用して次のように計算されます。</target>
        </trans-unit>
        <trans-unit id="8f795881894f367bf4d53a272b0c02b6372a7907" translate="yes" xml:space="preserve">
          <source>If the document's schema is an XML Schema [&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XML Schema Part 1&lt;/a&gt;] , this constant represents the &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#element-list&quot;&gt;list&lt;/a&gt;.</source>
          <target state="translated">ドキュメントのスキーマがXMLスキーマ[ &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XMLスキーマパート1&lt;/a&gt; ]の場合、この定数は&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#element-list&quot;&gt;リストを&lt;/a&gt;表します。</target>
        </trans-unit>
        <trans-unit id="d81ff9adf73e073ce8071daca81533194b267a61" translate="yes" xml:space="preserve">
          <source>If the document's schema is an XML Schema [&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XML Schema Part 1&lt;/a&gt;] , this constant represents the &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#element-union&quot;&gt; union&lt;/a&gt; if simple types are involved.</source>
          <target state="translated">ドキュメントのスキーマがXMLスキーマ[ &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XMLスキーマパート1&lt;/a&gt; ]の場合、この定数は、単純型が含まれている場合の&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#element-union&quot;&gt;和集合を&lt;/a&gt;表します。</target>
        </trans-unit>
        <trans-unit id="f779afced39b6f1300c741f0c131c9d3b3d3d63b" translate="yes" xml:space="preserve">
          <source>If the document's schema is an XML Schema [&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XML Schema Part 1&lt;/a&gt;] , this constant represents the derivation by &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#key-typeExtension&quot;&gt; extension&lt;/a&gt;.</source>
          <target state="translated">ドキュメントのスキーマがXMLスキーマ[ &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XMLスキーマパート1&lt;/a&gt; ]の場合、この定数は&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#key-typeExtension&quot;&gt;拡張子&lt;/a&gt;による派生を表します。</target>
        </trans-unit>
        <trans-unit id="31d86e81e617797ac0b52ef3cd63e328b705ec68" translate="yes" xml:space="preserve">
          <source>If the document's schema is an XML Schema [&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XML Schema Part 1&lt;/a&gt;] , this constant represents the derivation by &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#key-typeRestriction&quot;&gt; restriction&lt;/a&gt; if complex types are involved, or a &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#element-restriction&quot;&gt; restriction&lt;/a&gt; if simple types are involved.</source>
          <target state="translated">ドキュメントのスキーマがXMLスキーマ[あれば&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XMLスキーマパート1&lt;/a&gt; ]、この定数によって導出表し&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#key-typeRestriction&quot;&gt;制限&lt;/a&gt;複合タイプが関与している場合、または&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#element-restriction&quot;&gt;制限を&lt;/a&gt;単純型が関与している場合。</target>
        </trans-unit>
        <trans-unit id="cbe9e7664e4f4017ad96a68076cc598006d5d112" translate="yes" xml:space="preserve">
          <source>If the document's schema is an XML Schema [&lt;a href=&quot;https://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XML Schema Part 1&lt;/a&gt;] , the values are computed as follows using the post-schema-validation infoset contributions (also called PSVI contributions):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f1168404c7c56d4e8e498e42bad0edb3c4bb73" translate="yes" xml:space="preserve">
          <source>If the document's schema is an XML Schema [&lt;a href=&quot;https://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XML Schema Part 1&lt;/a&gt;] , this constant represents the &lt;a href=&quot;https://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#element-list&quot;&gt;list&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aae511fcf2af94431f32c6ee8cbcd05c4ea0a08" translate="yes" xml:space="preserve">
          <source>If the document's schema is an XML Schema [&lt;a href=&quot;https://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XML Schema Part 1&lt;/a&gt;] , this constant represents the &lt;a href=&quot;https://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#element-union&quot;&gt; union&lt;/a&gt; if simple types are involved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ba3d777f238d863319685e6c88d4e59e078f28f" translate="yes" xml:space="preserve">
          <source>If the document's schema is an XML Schema [&lt;a href=&quot;https://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XML Schema Part 1&lt;/a&gt;] , this constant represents the derivation by &lt;a href=&quot;https://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#key-typeExtension&quot;&gt; extension&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18883cd53e5a6700508528271465beb712205ee0" translate="yes" xml:space="preserve">
          <source>If the document's schema is an XML Schema [&lt;a href=&quot;https://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XML Schema Part 1&lt;/a&gt;] , this constant represents the derivation by &lt;a href=&quot;https://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#key-typeRestriction&quot;&gt; restriction&lt;/a&gt; if complex types are involved, or a &lt;a href=&quot;https://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#element-restriction&quot;&gt; restriction&lt;/a&gt; if simple types are involved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762fcdd3511f74261ffaaa36150e2a54b62d2512" translate="yes" xml:space="preserve">
          <source>If the domain includes at least one occurrence of the wildcard characters asterisk (&lt;code&gt;*&lt;/code&gt;) or question mark (&lt;code&gt;?&lt;/code&gt;), then the object name is a pattern. The asterisk matches any sequence of zero or more characters, while the question mark matches any single character.</source>
          <target state="translated">ドメインにワイルドカード文字のアスタリスク（ &lt;code&gt;*&lt;/code&gt; ）または疑問符（ &lt;code&gt;?&lt;/code&gt; ）が少なくとも1つ含まれている場合、オブジェクト名はパターンです。アスタリスクは0個以上の文字のシーケンスに一致し、疑問符は任意の1文字に一致します。</target>
        </trans-unit>
        <trans-unit id="b1cec24c27c8efb590156606b357f3a860a3a802" translate="yes" xml:space="preserve">
          <source>If the domain is empty, it will be replaced in certain contexts by the &lt;em&gt;default domain&lt;/em&gt; of the MBean server in which the ObjectName is used.</source>
          <target state="translated">ドメインが空の場合、特定のコンテキストでは、ObjectNameが使用されるMBeanサーバーの&lt;em&gt;デフォルトドメイン&lt;/em&gt;に置き換えられ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e3eaf7e155e25958dd79b0ca8cbf2ed30fa28298" translate="yes" xml:space="preserve">
          <source>If the driver does not support catalogs, it will silently ignore this request.</source>
          <target state="translated">ドライバがカタログをサポートしていない場合、この要求を黙って無視します。</target>
        </trans-unit>
        <trans-unit id="49cc5727dc2cc7276bd0bd19c6deedc6d76a47a7" translate="yes" xml:space="preserve">
          <source>If the driver does not support schemas, it will silently ignore this request.</source>
          <target state="translated">ドライバがスキーマをサポートしていない場合、この要求は黙って無視されます。</target>
        </trans-unit>
        <trans-unit id="2ec76dcdc78eed5e3ce7b1d5f25a9c8e1223867e" translate="yes" xml:space="preserve">
          <source>If the drop mode is &lt;code&gt;DropMode.INSERT&lt;/code&gt;, the return value refers to the path that should become the parent of the new data, in which case &lt;code&gt;getChildIndex()&lt;/code&gt; indicates where the new item should be inserted into this parent path. A &lt;code&gt;null&lt;/code&gt; path indicates that no parent path has been determined, which can happen for multiple reasons:</source>
          <target state="translated">ドロップモードが &lt;code&gt;DropMode.INSERT&lt;/code&gt; の場合、戻り値は新しいデータの親になるパスを参照します。この場合、 &lt;code&gt;getChildIndex()&lt;/code&gt; は、新しいアイテムをこの親パスに挿入する場所を示します。 &lt;code&gt;null&lt;/code&gt; パスは、複数の理由で発生することができた、親パスが決定されていないことを示します。</target>
        </trans-unit>
        <trans-unit id="7e77cff0b1d03502e9a750d78a9d1c0130ccaafc" translate="yes" xml:space="preserve">
          <source>If the drop mode is &lt;code&gt;DropMode.ON_OR_INSERT&lt;/code&gt;, &lt;code&gt;getChildIndex&lt;/code&gt; can be used to determine whether the drop is on top of the path itself (&lt;code&gt;-1&lt;/code&gt;) or the index at which it should be inserted into the path (values other than &lt;code&gt;-1&lt;/code&gt;).</source>
          <target state="translated">ドロップモードである場合 &lt;code&gt;DropMode.ON_OR_INSERT&lt;/code&gt; 、 &lt;code&gt;getChildIndex&lt;/code&gt; ドロップがパス自体（の上にあるかどうかを決定するために使用することができる &lt;code&gt;-1&lt;/code&gt; ）、またはパス（以外の値の中に挿入されるべきインデックス &lt;code&gt;-1&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="561e98f303c7dc9236bf9ca6b8c00ec7bcd40ae7" translate="yes" xml:space="preserve">
          <source>If the editor is an instance of &lt;code&gt;DefaultEditor&lt;/code&gt;, the call if forwarded to the editor, otherwise this does nothing.</source>
          <target state="translated">エディターが &lt;code&gt;DefaultEditor&lt;/code&gt; のインスタンスである場合、呼び出しはエディターに転送されます。それ以外の場合、これは何もしません。</target>
        </trans-unit>
        <trans-unit id="9bc2230764f1928dcd4435430ac5eacac22d06da" translate="yes" xml:space="preserve">
          <source>If the element contains end-of-content mark (the last &lt;code&gt;
 &quot;\n&quot;&lt;/code&gt; character in document), this character is not removed; instead, preceding leaf element is extended to cover the character. If the last leaf already ends with &lt;code&gt;&quot;\n&quot;,&lt;/code&gt; it is included in content removal.</source>
          <target state="translated">要素にコンテンツの終わりマーク（ドキュメントの最後の &lt;code&gt; &quot;\n&quot;&lt;/code&gt; 文字）が含まれている場合、この文字は削除されません。代わりに、先行するリーフ要素が文字をカバーするように拡張されます。最後の一葉がすでに &lt;code&gt;&quot;\n&quot;,&lt;/code&gt; 終わっている場合、それはコンテンツの削除に含まれます。</target>
        </trans-unit>
        <trans-unit id="f5906e0e63b8f49e34b6700f88bda4ec0d7f3b19" translate="yes" xml:space="preserve">
          <source>If the element is &lt;code&gt;null,&lt;/code&gt;&lt;code&gt;NullPointerException&lt;/code&gt; is thrown. If the element structure would become invalid after the removal, for example if the element is the document root element, &lt;code&gt;
 IllegalArgumentException&lt;/code&gt; is thrown. If the current element structure is invalid, &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown.</source>
          <target state="translated">要素が &lt;code&gt;null,&lt;/code&gt; 場合、 &lt;code&gt;NullPointerException&lt;/code&gt; がスローされます。削除後に要素構造が無効になる場合、たとえば要素がドキュメントルート要素である場合、 &lt;code&gt; IllegalArgumentException&lt;/code&gt; がスローされます。現在の要素構造が無効な場合、 &lt;code&gt;IllegalStateException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="75155a89667cb2237cd0f9e72cff17a55ac4b5e0" translate="yes" xml:space="preserve">
          <source>If the element name has a namespace prefix, the prefix will still be attached to the name.</source>
          <target state="translated">要素名に名前空間接頭辞が付いている場合でも、接頭辞は名前に付けられます。</target>
        </trans-unit>
        <trans-unit id="292c4a6cbb150ef1068ec19842ed8e1904c50655" translate="yes" xml:space="preserve">
          <source>If the element name has a namespace prefix, the prefix will still be attached. Note that the attribute list provided will contain only attributes with explicit values (specified or defaulted): #IMPLIED attributes will be omitted.</source>
          <target state="translated">要素名に名前空間接頭辞がある場合でも、接頭辞は添付されます。提供される属性リストには、明示的な値(指定またはデフォルト)を持つ属性のみが含まれることに注意してください。#IMPLIED属性は省略されます。</target>
        </trans-unit>
        <trans-unit id="26be7554fade8f3ee174b1c39de7db2088b22346" translate="yes" xml:space="preserve">
          <source>If the element type is a &lt;a href=&quot;#isHidden()&quot;&gt;hidden&lt;/a&gt; class or interface, then this array class cannot be described nominally. The result string is not a type descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18dd08f74ca34145a1c536a7fe2e41c8bb656227" translate="yes" xml:space="preserve">
          <source>If the element type is not a &lt;a href=&quot;#isHidden()&quot;&gt;hidden&lt;/a&gt; class or interface, then this array class can be described nominally. Calling &lt;a href=&quot;constant/classdesc#ofDescriptor(java.lang.String)&quot;&gt;&lt;code&gt;ClassDesc::ofDescriptor&lt;/code&gt;&lt;/a&gt; with the result descriptor string produces a &lt;a href=&quot;constant/classdesc&quot;&gt;&lt;code&gt;ClassDesc&lt;/code&gt;&lt;/a&gt; describing this array class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632011698fb01f0e0fc60062d6f97f830dba4d90" translate="yes" xml:space="preserve">
          <source>If the elements contain infinities of one sign and an intermediate sum overflows to an infinity of the opposite sign, the sum may be NaN.</source>
          <target state="translated">要素が1つの符号の無限大を含み、中間和が反対符号の無限大にオーバーフローする場合、和はNaNであってもよい。</target>
        </trans-unit>
        <trans-unit id="925e78d915a458c34d3eb7516f6e0b5010e2a01e" translate="yes" xml:space="preserve">
          <source>If the elements contain infinities of opposite sign, the sum will be NaN.</source>
          <target state="translated">要素に逆符号の無限大が含まれている場合、和はNaNとなります。</target>
        </trans-unit>
        <trans-unit id="be74757b15685dd5fdb4eea579602429c42b5b4c" translate="yes" xml:space="preserve">
          <source>If the elements contain one or more infinities, the sum will be infinite or NaN.</source>
          <target state="translated">要素が1つ以上の無限大を含む場合、和は無限大またはNaNとなる。</target>
        </trans-unit>
        <trans-unit id="1e256faf6974a8c97c36c1d2dc5a8b6122f7344d" translate="yes" xml:space="preserve">
          <source>If the elements of the source Vector of the ParameterBlock used to construct the RenderableImageOp are instances of RenderedImage, then the CRIF.create() method is called immediately using the original ParameterBlock. This provides a basis case for the recursion.</source>
          <target state="translated">RenderableImageOp の構築に使用した ParameterBlock のソース ベクトルの要素が RenderedImage のインスタンスである場合、元の ParameterBlock を使用して CRIF.create()メソッドが直ちに呼び出されます。これにより、再帰の基となるケースが提供されます。</target>
        </trans-unit>
        <trans-unit id="65b15f4158c3ccc225eea910594e13a346b7fa3c" translate="yes" xml:space="preserve">
          <source>If the encoded byte output of the needed size can not be allocated, the encode methods of this class will cause an &lt;a href=&quot;../lang/outofmemoryerror&quot;&gt;&lt;code&gt;OutOfMemoryError&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166569c27e8b2a7656f585d48975b7df17589d30" translate="yes" xml:space="preserve">
          <source>If the encoding has an historical name then that name is returned; otherwise the encoding's canonical name is returned.</source>
          <target state="translated">エンコーディングに歴史的な名前がある場合はその名前が返され、そうでない場合はエンコーディングの正規名が返されます。</target>
        </trans-unit>
        <trans-unit id="3837fdfef6f0110640afb54a092f9fb29173f9df" translate="yes" xml:space="preserve">
          <source>If the end of the stream is encountered before all the bits have been read, a &lt;code&gt;java.io.EOFException&lt;/code&gt; is thrown.</source>
          <target state="translated">すべてのビットが読み取られる前にストリームの終わりに遭遇すると、 &lt;code&gt;java.io.EOFException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="48c3f477e37a6d7f2bde864091bbef88c4c21567" translate="yes" xml:space="preserve">
          <source>If the end of the stream is encountered before all the bits have been read, an &lt;code&gt;java.io.EOFException&lt;/code&gt; is thrown.</source>
          <target state="translated">すべてのビットが読み取られる前にストリームの終わりが検出されると、 &lt;code&gt;java.io.EOFException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="2217350c5c68b3e5ab4a98715b4b5c48f6366d39" translate="yes" xml:space="preserve">
          <source>If the entire string has been read or skipped, then this method has no effect and always returns 0.</source>
          <target state="translated">文字列全体が読み込まれたかスキップされた場合、このメソッドは何の効果もなく、常に 0 を返します。</target>
        </trans-unit>
        <trans-unit id="8ece76de2aa9cb829e9b2c9714827801ca68dc1f" translate="yes" xml:space="preserve">
          <source>If the entry being considered was created by a call to &lt;code&gt;setKeyEntry&lt;/code&gt;, or created by a call to &lt;code&gt;setEntry&lt;/code&gt; with a &lt;code&gt;PrivateKeyEntry&lt;/code&gt;, then the given certificate is compared to the first element of that entry's certificate chain.</source>
          <target state="translated">検討中のエントリが &lt;code&gt;setKeyEntry&lt;/code&gt; の呼び出しによって作成された場合、またはPrivateKeyEntryを &lt;code&gt;setEntry&lt;/code&gt; した &lt;code&gt;PrivateKeyEntry&lt;/code&gt; 呼び出しによって作成された場合、指定された証明書はそのエントリの証明書チェーンの最初の要素と比較されます。</target>
        </trans-unit>
        <trans-unit id="901709c9c92242d1f05529c7ed99092d836cea48" translate="yes" xml:space="preserve">
          <source>If the entry is output to a ZIP file or ZIP file formatted output stream the last modification time set by this method will be stored into the &lt;code&gt;date and time fields&lt;/code&gt; of the zip file entry and encoded in standard &lt;code&gt;MS-DOS date and time format&lt;/code&gt;. If the date-time set is out of the range of the standard &lt;code&gt;
 MS-DOS date and time format&lt;/code&gt;, the time will also be stored into zip file entry's extended timestamp fields in &lt;code&gt;optional
 extra data&lt;/code&gt; in UTC time. The &lt;a href=&quot;../../time/zoneid#systemDefault()&quot;&gt;&lt;code&gt;system default TimeZone&lt;/code&gt;&lt;/a&gt; is used to convert the local date-time to UTC time.</source>
          <target state="translated">エントリがZIPファイルまたはZIPファイル形式の出力ストリームに出力される場合、この方法で設定された最終変更時刻は、zipファイルエントリの &lt;code&gt;date and time fields&lt;/code&gt; に保存され、標準の &lt;code&gt;MS-DOS date and time format&lt;/code&gt; エンコードされます。日時セットが標準の &lt;code&gt; MS-DOS date and time format&lt;/code&gt; の範囲外である場合、時刻は、UTC時間の &lt;code&gt;optional extra data&lt;/code&gt; のzipファイルエントリの拡張タイムスタンプフィールドにも格納されます。&lt;a href=&quot;../../time/zoneid#systemDefault()&quot;&gt; &lt;code&gt;system default TimeZone&lt;/code&gt; &lt;/a&gt;UTC時刻に現地日時を変換するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b500fa31b73e631f7dcb75621d0a2f6abc54a397" translate="yes" xml:space="preserve">
          <source>If the entry is output to a ZIP file or ZIP file formatted output stream the last modification time set by this method will be stored into the &lt;code&gt;date and time fields&lt;/code&gt; of the zip file entry and encoded in standard &lt;code&gt;MS-DOS date and time format&lt;/code&gt;. The &lt;a href=&quot;../timezone#getDefault()&quot;&gt;&lt;code&gt;default TimeZone&lt;/code&gt;&lt;/a&gt; is used to convert the epoch time to the MS-DOS data and time.</source>
          <target state="translated">エントリがZIPファイルまたはZIPファイル形式の出力ストリームに出力される場合、この方法で設定された最終変更時刻は、zipファイルエントリの &lt;code&gt;date and time fields&lt;/code&gt; に保存され、標準の &lt;code&gt;MS-DOS date and time format&lt;/code&gt; エンコードされます。&lt;a href=&quot;../timezone#getDefault()&quot;&gt; &lt;code&gt;default TimeZone&lt;/code&gt; &lt;/a&gt; MS-DOSのデータと時間にエポック時間を変換するために使用されます。</target>
        </trans-unit>
        <trans-unit id="0a00a113b23cd107c1f980e1846beabb40469342" translate="yes" xml:space="preserve">
          <source>If the entry is output to a ZIP file or ZIP file formatted output stream the last modification time set by this method will be stored into the &lt;code&gt;date and time fields&lt;/code&gt; of the zip file entry and encoded in standard &lt;code&gt;MS-DOS date and time format&lt;/code&gt;. The &lt;a href=&quot;../timezone#getDefault--&quot;&gt;&lt;code&gt;default TimeZone&lt;/code&gt;&lt;/a&gt; is used to convert the epoch time to the MS-DOS data and time.</source>
          <target state="translated">エントリがZIPファイルまたはZIPファイル形式の出力ストリームに出力される場合、このメソッドで設定された最終変更時刻はzipファイルエントリの &lt;code&gt;date and time fields&lt;/code&gt; に格納され、標準の &lt;code&gt;MS-DOS date and time format&lt;/code&gt; エンコードされます。&lt;a href=&quot;../timezone#getDefault--&quot;&gt; &lt;code&gt;default TimeZone&lt;/code&gt; &lt;/a&gt; MS-DOSのデータと時間にエポック時間を変換するために使用されます。</target>
        </trans-unit>
        <trans-unit id="85a5272c1bab15e68743538f438b05df60195e22" translate="yes" xml:space="preserve">
          <source>If the entry is read from a ZIP file or ZIP file formatted input stream, this is the last modification time from the &lt;code&gt;
 date and time fields&lt;/code&gt; of the zip file entry. The &lt;a href=&quot;../timezone#getDefault()&quot;&gt;&lt;code&gt;default TimeZone&lt;/code&gt;&lt;/a&gt; is used to convert the standard MS-DOS formatted date and time to the epoch time.</source>
          <target state="translated">エントリがZIPファイルまたはZIPファイル形式の入力ストリームから読み取られる場合、これはzipファイルエントリの &lt;code&gt; date and time fields&lt;/code&gt; からの最後の変更時刻です。&lt;a href=&quot;../timezone#getDefault()&quot;&gt; &lt;code&gt;default TimeZone&lt;/code&gt; &lt;/a&gt;エポック時間に標準のMS-DOSフォーマットされた日付と時刻を変換するために使用されます。</target>
        </trans-unit>
        <trans-unit id="a5ccafee62ee3362796ffa2f54139e7599780958" translate="yes" xml:space="preserve">
          <source>If the entry is read from a ZIP file or ZIP file formatted input stream, this is the last modification time from the &lt;code&gt;date and time fields&lt;/code&gt; of the zip file entry. The &lt;a href=&quot;../timezone#getDefault--&quot;&gt;&lt;code&gt;default TimeZone&lt;/code&gt;&lt;/a&gt; is used to convert the standard MS-DOS formatted date and time to the epoch time.</source>
          <target state="translated">エントリがZIPファイルまたはZIPファイル形式の入力ストリームから読み取られる場合、これはzipファイルエントリの &lt;code&gt;date and time fields&lt;/code&gt; からの最終変更時刻です。&lt;a href=&quot;../timezone#getDefault--&quot;&gt; &lt;code&gt;default TimeZone&lt;/code&gt; &lt;/a&gt;エポック時間に標準のMS-DOSフォーマットされた日付と時刻を変換するために使用されます。</target>
        </trans-unit>
        <trans-unit id="0ab32364343d6a000b40b013685c0fce3d0cb517" translate="yes" xml:space="preserve">
          <source>If the entry is read from a ZIP file or ZIP file formatted input stream, this is the last modification time from the zip file entry's &lt;code&gt;optional extra data&lt;/code&gt; if the extended timestamp fields are present. Otherwise the last modification time is read from the entry's &lt;code&gt;date and time fields&lt;/code&gt;, the &lt;a href=&quot;../timezone#getDefault()&quot;&gt;&lt;code&gt;default TimeZone&lt;/code&gt;&lt;/a&gt; is used to convert the standard MS-DOS formatted date and time to the epoch time.</source>
          <target state="translated">エントリがZIPファイルまたはZIPファイル形式の入力ストリームから読み取られる場合、拡張タイムスタンプフィールドが存在 &lt;code&gt;optional extra data&lt;/code&gt; 場合、これはzipファイルエントリのオプションの追加データからの最後の変更時刻です。それ以外の場合は最終更新時刻は、エントリのから読み込まれ &lt;code&gt;date and time fields&lt;/code&gt; 、&lt;a href=&quot;../timezone#getDefault()&quot;&gt; &lt;code&gt;default TimeZone&lt;/code&gt; &lt;/a&gt;エポック時間に標準のMS-DOSフォーマットされた日付と時刻を変換するために使用されます。</target>
        </trans-unit>
        <trans-unit id="4b289b42cb002e533856d62e0fbbde21b7d11a5b" translate="yes" xml:space="preserve">
          <source>If the entry is read from a ZIP file or ZIP file formatted input stream, this is the last modification time from the zip file entry's &lt;code&gt;optional extra data&lt;/code&gt; if the extended timestamp fields are present. Otherwise the last modification time is read from the entry's &lt;code&gt;date and time fields&lt;/code&gt;, the &lt;a href=&quot;../timezone#getDefault--&quot;&gt;&lt;code&gt;default TimeZone&lt;/code&gt;&lt;/a&gt; is used to convert the standard MS-DOS formatted date and time to the epoch time.</source>
          <target state="translated">エントリがZIPファイルまたはZIPファイル形式の入力ストリームから読み取られる場合、拡張タイムスタンプフィールドが存在 &lt;code&gt;optional extra data&lt;/code&gt; 場合、これはzipファイルエントリのオプションの追加データからの最終変更時刻です。それ以外の場合は最終更新時刻は、エントリのから読み込まれ &lt;code&gt;date and time fields&lt;/code&gt; 、&lt;a href=&quot;../timezone#getDefault--&quot;&gt; &lt;code&gt;default TimeZone&lt;/code&gt; &lt;/a&gt;エポック時間に標準のMS-DOSフォーマットされた日付と時刻を変換するために使用されます。</target>
        </trans-unit>
        <trans-unit id="05d613b0e17c16e0c66c734b0a98a9ba4f184306" translate="yes" xml:space="preserve">
          <source>If the entry is read from a ZIP file or ZIP file formatted input stream, this is the last modification time from the zip file entry's &lt;code&gt;optional extra data&lt;/code&gt; if the extended timestamp fields are present. Otherwise, the last modification time is read from entry's standard MS-DOS formatted &lt;code&gt;date and time fields&lt;/code&gt;.</source>
          <target state="translated">エントリがZIPファイルまたはZIPファイル形式の入力ストリームから読み取られる場合、拡張タイムスタンプフィールドが存在 &lt;code&gt;optional extra data&lt;/code&gt; 場合、これはzipファイルエントリのオプションの追加データからの最後の変更時刻です。それ以外の場合、最終変更時刻は、エントリの標準のMS-DOS形式の &lt;code&gt;date and time fields&lt;/code&gt; から読み取られます。</target>
        </trans-unit>
        <trans-unit id="797642f2d5761f48870b5a97a0e9081a36bc1501" translate="yes" xml:space="preserve">
          <source>If the event class associated with this event factory is already registered, the call to this method is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659072435671da166f323fd01cd2350cabee3286" translate="yes" xml:space="preserve">
          <source>If the event class associated with this event factory is not already registered, the call to this method is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1131461e543048c9f3d0dad87b28281f4c97ad31" translate="yes" xml:space="preserve">
          <source>If the event class is already registered, then the invocation of this method is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63079cda2661b4d19d530c94c9bca72825955418" translate="yes" xml:space="preserve">
          <source>If the event class is not registered, then the invocation of this method is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02b2a061b3320b01237249ddfaa9eb0520ac284" translate="yes" xml:space="preserve">
          <source>If the event doesn't get filtered, it will try to insert content into the text editor. The content is fetched from the command string of the ActionEvent. The text entry is done through the &lt;code&gt;replaceSelection&lt;/code&gt; method on the target text component. This is the action that will be fired for most text entry tasks.</source>
          <target state="translated">イベントがフィルタリングされない場合、テキストエディタにコンテンツを挿入しようとします。コンテンツは、ActionEventのコマンド文字列からフェッチされます。テキスト入力は、ターゲットテキストコンポーネントの &lt;code&gt;replaceSelection&lt;/code&gt; メソッドを介して行われます。これは、ほとんどのテキスト入力タスクで実行されるアクションです。</target>
        </trans-unit>
        <trans-unit id="44db14d1e9cdb3209ffe191f5a2a3430583832df" translate="yes" xml:space="preserve">
          <source>If the event involved an exception, this will be the exception object. Otherwise null.</source>
          <target state="translated">イベントに例外が含まれていた場合、これが例外オブジェクトになります。それ以外の場合は null となります。</target>
        </trans-unit>
        <trans-unit id="8e47a9d7666abe192af5ff31d67d31063f85d1ad" translate="yes" xml:space="preserve">
          <source>If the event is an instant event, then the start time and end time are the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636af865dd5520f93c482ef1d513964eb35efb7f" translate="yes" xml:space="preserve">
          <source>If the event parameter is &lt;code&gt;null&lt;/code&gt; the behavior is unspecified and may result in an exception.</source>
          <target state="translated">イベントパラメータが &lt;code&gt;null&lt;/code&gt; の場合、動作は指定されておらず、例外が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="86bcde70649fd800362c8d848bf84e937894cfad" translate="yes" xml:space="preserve">
          <source>If the event starts with an invocation of the &lt;code&gt;begin&lt;/code&gt; method, but does not end with an explicit invocation of the &lt;code&gt;end&lt;/code&gt; method, then the event ends when the &lt;code&gt;commit&lt;/code&gt; method is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1991d1905a17c3a61e8189297ee3cdafb502d7" translate="yes" xml:space="preserve">
          <source>If the event type is not one of the above, nothing happens.</source>
          <target state="translated">イベントタイプが上記のいずれかでない場合は、何も起こりません。</target>
        </trans-unit>
        <trans-unit id="04ee175a91380bcfff6774332dbdc8f91673dbd2" translate="yes" xml:space="preserve">
          <source>If the exact product of the first two arguments is infinite (in other words, at least one of the arguments is infinite and the other is neither zero nor NaN) and the third argument is an infinity of the opposite sign, the result is NaN.</source>
          <target state="translated">最初の2つの引数の正確な積が無限大(言い換えれば、少なくとも一方の引数が無限大で、他方の引数が0でもNaNでもない)で、第3の引数が逆符号の無限大であれば、結果はNaNとなる。</target>
        </trans-unit>
        <trans-unit id="2ad6e084350af847bf5f8d8cac23d0487a14cc12" translate="yes" xml:space="preserve">
          <source>If the exception was created with the return value from the agent &lt;code&gt;Agent_OnAttach&lt;/code&gt; function then this returns that value, otherwise returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89efede28f8340ed4b4384494bc673df18dd7978" translate="yes" xml:space="preserve">
          <source>If the expression cannot be converted to return the specified type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95e52b95a3d17be2a361085bc902faa16c60d26" translate="yes" xml:space="preserve">
          <source>If the expression contains a function reference, the function will be found through the &lt;a href=&quot;xpathfunctionresolver&quot;&gt;&lt;code&gt;XPathFunctionResolver&lt;/code&gt;&lt;/a&gt; set with &lt;a href=&quot;#setXPathFunctionResolver(javax.xml.xpath.XPathFunctionResolver)&quot;&gt;&lt;code&gt;setXPathFunctionResolver(XPathFunctionResolver resolver)&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;xpathexpressionexception&quot;&gt;&lt;code&gt;XPathExpressionException&lt;/code&gt;&lt;/a&gt; is raised if the function resolver is undefined or the function resolver returns &lt;code&gt;null&lt;/code&gt; for the function.</source>
          <target state="translated">式に関数参照が含まれている場合、関数は&lt;a href=&quot;#setXPathFunctionResolver(javax.xml.xpath.XPathFunctionResolver)&quot;&gt; &lt;code&gt;setXPathFunctionResolver(XPathFunctionResolver resolver)&lt;/code&gt; で&lt;/a&gt;設定された&lt;a href=&quot;xpathfunctionresolver&quot;&gt; &lt;code&gt;XPathFunctionResolver&lt;/code&gt; &lt;/a&gt;を介して検出されます。アン&lt;a href=&quot;xpathexpressionexception&quot;&gt; &lt;code&gt;XPathExpressionException&lt;/code&gt; &lt;/a&gt;、関数リゾルバが定義されていない場合に発生したり、機能リゾルバ戻っは &lt;code&gt;null&lt;/code&gt; 機能のために。</target>
        </trans-unit>
        <trans-unit id="43696688f3c4489c7b41ec9b95dff40a7fa60072" translate="yes" xml:space="preserve">
          <source>If the expression contains a function reference, the function will be found through the &lt;a href=&quot;xpathfunctionresolver&quot;&gt;&lt;code&gt;XPathFunctionResolver&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;xpathexpressionexception&quot;&gt;&lt;code&gt;XPathExpressionException&lt;/code&gt;&lt;/a&gt; is raised if the function resolver is undefined or the function resolver returns &lt;code&gt;null&lt;/code&gt; for the function.</source>
          <target state="translated">式に関数参照が含まれている場合、関数は&lt;a href=&quot;xpathfunctionresolver&quot;&gt; &lt;code&gt;XPathFunctionResolver&lt;/code&gt; を&lt;/a&gt;介して検出されます。アン&lt;a href=&quot;xpathexpressionexception&quot;&gt; &lt;code&gt;XPathExpressionException&lt;/code&gt; &lt;/a&gt;、関数リゾルバが定義されていない場合に発生したり、機能リゾルバ戻っは &lt;code&gt;null&lt;/code&gt; 機能のために。</target>
        </trans-unit>
        <trans-unit id="8ec91836ab8810be357b49e4f3c052ec4bf73ac1" translate="yes" xml:space="preserve">
          <source>If the expression contains a variable reference, its value will be found through the &lt;a href=&quot;xpathvariableresolver&quot;&gt;&lt;code&gt;XPathVariableResolver&lt;/code&gt;&lt;/a&gt; set with &lt;a href=&quot;#setXPathVariableResolver(javax.xml.xpath.XPathVariableResolver)&quot;&gt;&lt;code&gt;setXPathVariableResolver(XPathVariableResolver resolver)&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;xpathexpressionexception&quot;&gt;&lt;code&gt;XPathExpressionException&lt;/code&gt;&lt;/a&gt; is raised if the variable resolver is undefined or the resolver returns &lt;code&gt;null&lt;/code&gt; for the variable. The value of a variable must be immutable through the course of any single evaluation.</source>
          <target state="translated">式に変数参照が含まれている場合、その値は、&lt;a href=&quot;#setXPathVariableResolver(javax.xml.xpath.XPathVariableResolver)&quot;&gt; &lt;code&gt;setXPathVariableResolver(XPathVariableResolver resolver)&lt;/code&gt; で&lt;/a&gt;設定されたXPathVariableResolverを介して&lt;a href=&quot;xpathvariableresolver&quot;&gt; &lt;code&gt;XPathVariableResolver&lt;/code&gt; &lt;/a&gt;されます。アン&lt;a href=&quot;xpathexpressionexception&quot;&gt; &lt;code&gt;XPathExpressionException&lt;/code&gt; &lt;/a&gt;変数リゾルバが定義されていない場合に発生されるか、リゾルバのリターンは &lt;code&gt;null&lt;/code&gt; 変数のために。変数の値は、単一の評価の過程で不変でなければなりません。</target>
        </trans-unit>
        <trans-unit id="ac27a65340aff2ce4aa55c84684d42f7fc9702ed" translate="yes" xml:space="preserve">
          <source>If the expression contains a variable reference, its value will be found through the &lt;a href=&quot;xpathvariableresolver&quot;&gt;&lt;code&gt;XPathVariableResolver&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;xpathexpressionexception&quot;&gt;&lt;code&gt;XPathExpressionException&lt;/code&gt;&lt;/a&gt; is raised if the variable resolver is undefined or the resolver returns &lt;code&gt;null&lt;/code&gt; for the variable. The value of a variable must be immutable through the course of any single evaluation.</source>
          <target state="translated">式に変数参照が含まれている場合、その値は&lt;a href=&quot;xpathvariableresolver&quot;&gt; &lt;code&gt;XPathVariableResolver&lt;/code&gt; を&lt;/a&gt;介して検出されます。アン&lt;a href=&quot;xpathexpressionexception&quot;&gt; &lt;code&gt;XPathExpressionException&lt;/code&gt; &lt;/a&gt;変数リゾルバが定義されていない場合に発生されるか、リゾルバのリターンは &lt;code&gt;null&lt;/code&gt; 変数のために。変数の値は、単一の評価の過程で不変でなければなりません。</target>
        </trans-unit>
        <trans-unit id="e47c3d09f4791484483e78797bfa839979548f7c" translate="yes" xml:space="preserve">
          <source>If the expression has a syntax error or otherwise is not a legal expression according to the rules of the specific &lt;code&gt;XPathEvaluator&lt;/code&gt; or contains specialized extension functions or variables not supported by this implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0292adc0114844d25fb79e16b7258d6d3885abd" translate="yes" xml:space="preserve">
          <source>If the extension class loader cannot be found then the system class loader is used; if there is no system class loader then the bootstrap class loader is used.</source>
          <target state="translated">拡張クラスローダが見つからない場合はシステムクラスローダが使われ、システムクラスローダがない場合はブートストラップクラスローダが使われます。</target>
        </trans-unit>
        <trans-unit id="173d1b8bf14c80f810bc6e9721b807d2048ebbcd" translate="yes" xml:space="preserve">
          <source>If the field has the &lt;code&gt;@Unsigned&lt;/code&gt; annotation and is of a narrower type than &lt;code&gt;int&lt;/code&gt;, then the value will be returned as an unsigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39d0fb537a08b776be7ac77a06fcd2b3da27f28" translate="yes" xml:space="preserve">
          <source>If the field has the &lt;code&gt;@Unsigned&lt;/code&gt; annotation and is of a narrower type than &lt;code&gt;long&lt;/code&gt;, then the value will be returned as an unsigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed1f18b615e007d2288b83889463bb892c443f1" translate="yes" xml:space="preserve">
          <source>If the field has the &lt;code&gt;@Unsigned&lt;/code&gt; annotation and is of a narrower type than &lt;code&gt;short&lt;/code&gt;, then the value is returned as an unsigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6968b385e002c9508a424a478292c0f3a7af81" translate="yes" xml:space="preserve">
          <source>If the field is &lt;a href=&quot;temporal/chronofield#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; then the range of the day-of-week, from 1 to 7, will be returned. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; の&lt;/a&gt;場合、曜日の範囲（1〜7）が返されます。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="5c19fc73e0fc2d097b24a11cffd6f4ae4696359b" translate="yes" xml:space="preserve">
          <source>If the field is &lt;a href=&quot;temporal/chronofield#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; then the value of the day-of-week, from 1 to 7, will be returned. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; の&lt;/a&gt;場合、曜日の値（1〜7）が返されます。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="30d9439a6bb009c979b0800716929ef61f2bbd69" translate="yes" xml:space="preserve">
          <source>If the field is &lt;a href=&quot;temporal/chronofield#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; then this method returns true. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will return false.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; の&lt;/a&gt;場合、このメソッドはtrueを返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="326c5765ea79518cbefcc0303c7d41108e792d2b" translate="yes" xml:space="preserve">
          <source>If the field is &lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;&lt;/a&gt; then the range of the month-of-year, from 1 to 12, will be returned. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; の&lt;/a&gt;場合、月の範囲（1〜12）が返されます。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="af240bad736f05e53adae955dd58de67cb50462f" translate="yes" xml:space="preserve">
          <source>If the field is &lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;&lt;/a&gt; then the value of the month-of-year, from 1 to 12, will be returned. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; の&lt;/a&gt;場合、月の値（1〜12）が返されます。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="4fe971066ffd7c4b8626dd60c34bb8f8261cfed9" translate="yes" xml:space="preserve">
          <source>If the field is &lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;&lt;/a&gt; then this method returns true. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will return false.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; の&lt;/a&gt;場合、このメソッドはtrueを返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="e7faeadf7c05f00989d9bc2390cd06288a8ff039" translate="yes" xml:space="preserve">
          <source>If the field is &lt;code&gt;final&lt;/code&gt;, write access will not be allowed and access checking will fail, except under certain narrow circumstances documented for &lt;a href=&quot;../reflect/field#set(java.lang.Object,java.lang.Object)&quot;&gt;&lt;code&gt;Field.set&lt;/code&gt;&lt;/a&gt;. A method handle is returned only if a corresponding call to the &lt;code&gt;Field&lt;/code&gt; object's &lt;code&gt;set&lt;/code&gt; method could return normally. In particular, fields which are both &lt;code&gt;static&lt;/code&gt; and &lt;code&gt;final&lt;/code&gt; may never be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38484743a496914be1e808c10f80951caa603c0e" translate="yes" xml:space="preserve">
          <source>If the field is &lt;code&gt;static&lt;/code&gt;, and if the returned method handle is invoked, the field's class will be initialized, if it has not already been initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbe7e72fb8b0010865d68d0c08c6481722f84e6" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;../temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;code&gt;ERA&lt;/code&gt; field returns the range. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;../temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。 &lt;code&gt;ERA&lt;/code&gt; のフィールドは、範囲を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="184058e0a14902aa21c927d78bf2821afd7ffb8f" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;../temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;code&gt;ERA&lt;/code&gt; field returns the value of the era. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;../temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。 &lt;code&gt;ERA&lt;/code&gt; のフィールドは、時代の値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="1953db0f99dd40e5aaa224b3ed2d92f821f4fad2" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;../temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;code&gt;ERA&lt;/code&gt; field returns true. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will return false.</source>
          <target state="translated">フィールドが&lt;a href=&quot;../temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。 &lt;code&gt;ERA&lt;/code&gt; のフィールドはtrueを返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="5df5ba306c3a00473938e546303760434732261a" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;../temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The supported fields are:</source>
          <target state="translated">フィールドが&lt;a href=&quot;../temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。サポートされているフィールドは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9ddb65541050763763b556e80a29c16db72c7248" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the adjustment is implemented here.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、ここで調整が実装されます。</target>
        </trans-unit>
        <trans-unit id="871d99f928633d452b234c707859c60ee439a250" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the adjustment is implemented here. The &lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will behave as per the matching method on &lt;a href=&quot;localdate#with(java.time.temporal.TemporalField,long)&quot;&gt;&lt;code&gt;LocalDate&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;localtime#with(java.time.temporal.TemporalField,long)&quot;&gt;&lt;code&gt;LocalTime&lt;/code&gt;&lt;/a&gt;. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、調整はここで実装されます。&lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;上のマッチング方法ごとのように動作します&lt;a href=&quot;localdate#with(java.time.temporal.TemporalField,long)&quot;&gt; &lt;code&gt;LocalDate&lt;/code&gt; &lt;/a&gt;か&lt;a href=&quot;localtime#with(java.time.temporal.TemporalField,long)&quot;&gt; &lt;code&gt;LocalTime&lt;/code&gt; &lt;/a&gt;。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="cc3692f941d5abe057e214a3bd9f234905a09651" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the adjustment is implemented here. The &lt;a href=&quot;localdatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will behave as per the matching method on &lt;a href=&quot;localdate#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;LocalDate&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;localtime#with-java.time.temporal.TemporalField-long-&quot;&gt;&lt;code&gt;LocalTime&lt;/code&gt;&lt;/a&gt;. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、ここで調整が実装されます。&lt;a href=&quot;localdatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;上のマッチング方法ごとのように動作します&lt;a href=&quot;localdate#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;LocalDate&lt;/code&gt; &lt;/a&gt;か&lt;a href=&quot;localtime#with-java.time.temporal.TemporalField-long-&quot;&gt; &lt;code&gt;LocalTime&lt;/code&gt; &lt;/a&gt;。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="1d4babbf0823e08d2dba83490653149a8a5cf2ed" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the adjustment is implemented here. The supported fields behave as follows:</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、ここで調整が実装されます。サポートされているフィールドは次のように動作します。</target>
        </trans-unit>
        <trans-unit id="654ffbe0ee041234f33cf275c87fc4c9fc7c6dd4" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return appropriate range instances. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;適切な範囲のインスタンスを返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="073a987d8c755e83cfc6ffb42e22775ce7412bb2" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this date, except &lt;code&gt;EPOCH_DAY&lt;/code&gt; and &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; which are too large to fit in an &lt;code&gt;int&lt;/code&gt; and throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;除いて、この日付に基づいて有効な値を返します &lt;code&gt;EPOCH_DAY&lt;/code&gt; と &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; に収まるには大きすぎる &lt;code&gt;int&lt;/code&gt; 型やスロー &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; を。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="393ab92db0d7f28b2848265a88f15c6d53af21b2" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this date-time, except &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; which is too large to fit in an &lt;code&gt;int&lt;/code&gt; and throws a &lt;code&gt;DateTimeException&lt;/code&gt;. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;除いて、この日時に基づいて有効な値を返します &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; に収まるには大きすぎる &lt;code&gt;int&lt;/code&gt; 型やスロー &lt;code&gt;DateTimeException&lt;/code&gt; を。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="7152b3b52d7c7f0f4904764283f2e7cc4e36acbd" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this date-time, except &lt;code&gt;NANO_OF_DAY&lt;/code&gt;, &lt;code&gt;MICRO_OF_DAY&lt;/code&gt;, &lt;code&gt;EPOCH_DAY&lt;/code&gt; and &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; which are too large to fit in an &lt;code&gt;int&lt;/code&gt; and throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;除いて、この日時に基づいて有効な値を返します &lt;code&gt;NANO_OF_DAY&lt;/code&gt; 、 &lt;code&gt;MICRO_OF_DAY&lt;/code&gt; 、 &lt;code&gt;EPOCH_DAY&lt;/code&gt; と &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; に収まるには大きすぎる &lt;code&gt;int&lt;/code&gt; 型やスロー &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; を。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="67d10135df9a9ec6dcec81f7c4eba9e088b27dc9" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this date-time, except &lt;code&gt;NANO_OF_DAY&lt;/code&gt;, &lt;code&gt;MICRO_OF_DAY&lt;/code&gt;, &lt;code&gt;EPOCH_DAY&lt;/code&gt;, &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; and &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; which are too large to fit in an &lt;code&gt;int&lt;/code&gt; and throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;除いて、この日時に基づいて有効な値を返します &lt;code&gt;NANO_OF_DAY&lt;/code&gt; 、 &lt;code&gt;MICRO_OF_DAY&lt;/code&gt; 、 &lt;code&gt;EPOCH_DAY&lt;/code&gt; 、 &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; と &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; に収まるには大きすぎる &lt;code&gt;int&lt;/code&gt; 型やスロー &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; を。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="241448bc71c4585fd6b57179f68b0b3ae2b77f80" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this date-time. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;日付と時刻に基づいて有効な値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="4394383d7f696594ca101d030728c860c4bd2767" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this date. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;、この日付に基づいて有効な値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="55f31e63ce0b6d34f732d6c74159b03dff5fbefe" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this month-day. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;今月-日に基づいて有効な値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="3d5a1d9d7bbcd893d7dda7838ecb8f4a2331eaea" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this time, except &lt;code&gt;NANO_OF_DAY&lt;/code&gt; and &lt;code&gt;MICRO_OF_DAY&lt;/code&gt; which are too large to fit in an &lt;code&gt;int&lt;/code&gt; and throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;除いて、この時間に基づいて有効な値を返します &lt;code&gt;NANO_OF_DAY&lt;/code&gt; と &lt;code&gt;MICRO_OF_DAY&lt;/code&gt; に収まるには大きすぎる &lt;code&gt;int&lt;/code&gt; 型やスロー &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; を。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="54d4291388dc2b83820f747cb1f95091292f696d" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this time. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;、この時間に基づいて有効な値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="e757166ab7f790e16750f19e7591a3771d8323b1" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this year-month, except &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; which is too large to fit in an &lt;code&gt;int&lt;/code&gt; and throw a &lt;code&gt;DateTimeException&lt;/code&gt;. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;除いて、この年月に基づいて有効な値を返します &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; に収まるには大きすぎる &lt;code&gt;int&lt;/code&gt; 型やスロー &lt;code&gt;DateTimeException&lt;/code&gt; を。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="07988f9ebdc9aba8f17f1634be192d7cbfc13f5d" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this year-month. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;、この年月に基づいて有効な値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="24967a514d85ca0fb445207b1151d9d0b3e22369" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this year. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;#isSupported(java.time.temporal.TemporalField)&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;、今年に基づいて有効な値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは、 &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="b3a122466042d935dfadf2919be12e5c6bf577cb" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;instant#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return appropriate range instances. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;instant#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;適切な範囲のインスタンスを返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="b2fae4d33d968604493905d86ff128c82e5db2f2" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;instant#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this date-time, except &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; which is too large to fit in an &lt;code&gt;int&lt;/code&gt; and throws a &lt;code&gt;DateTimeException&lt;/code&gt;. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;instant#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;除いて、この日時に基づいて有効な値を返します &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; に収まるには大きすぎる &lt;code&gt;int&lt;/code&gt; 型やスロー &lt;code&gt;DateTimeException&lt;/code&gt; を。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="552594823755dd323e34fbb36aa82bd02dc7ccec" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;instant#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this date-time. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;instant#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;日付と時刻に基づいて有効な値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="64682870ad58c05c116e810cd345d87fe71b6bca" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;localdate#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return appropriate range instances. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;localdate#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;適切な範囲のインスタンスを返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="e53df72b9538f5704d56c85109a2837d5a0400cf" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;localdate#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this date, except &lt;code&gt;EPOCH_DAY&lt;/code&gt; and &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; which are too large to fit in an &lt;code&gt;int&lt;/code&gt; and throw a &lt;code&gt;DateTimeException&lt;/code&gt;. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;localdate#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;除いて、この日付に基づいて有効な値を返します &lt;code&gt;EPOCH_DAY&lt;/code&gt; と &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; に収まるには大きすぎる &lt;code&gt;int&lt;/code&gt; 型やスロー &lt;code&gt;DateTimeException&lt;/code&gt; を。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="32c54db3dedc37f0421eb1580db3b740ec121cad" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;localdate#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this date. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;localdate#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;、この日付に基づいて有効な値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="11ea794a31defe3e3eefa9ea5db21eca50570400" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;localdatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return appropriate range instances. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;localdatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;適切な範囲のインスタンスを返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="a90c6eb29cbac028e8449f9cf54d00261c219feb" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;localdatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this date-time, except &lt;code&gt;NANO_OF_DAY&lt;/code&gt;, &lt;code&gt;MICRO_OF_DAY&lt;/code&gt;, &lt;code&gt;EPOCH_DAY&lt;/code&gt; and &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; which are too large to fit in an &lt;code&gt;int&lt;/code&gt; and throw a &lt;code&gt;DateTimeException&lt;/code&gt;. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;localdatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;除いて、この日時に基づいて有効な値を返します &lt;code&gt;NANO_OF_DAY&lt;/code&gt; 、 &lt;code&gt;MICRO_OF_DAY&lt;/code&gt; 、 &lt;code&gt;EPOCH_DAY&lt;/code&gt; と &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; に収まるには大きすぎる &lt;code&gt;int&lt;/code&gt; 型やスロー &lt;code&gt;DateTimeException&lt;/code&gt; を。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="5b5f3e15dbf7f02cadaff2b1f715b8a83fed50ca" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;localdatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this date-time. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;localdatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;日付と時刻に基づいて有効な値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="2d7280f2ef05621f8965764c134012686323f8c9" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;localtime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return appropriate range instances. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;localtime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;適切な範囲のインスタンスを返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="a08bb7dfd7f2733af861740d800b7ce9f70eb5cf" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;localtime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this time, except &lt;code&gt;NANO_OF_DAY&lt;/code&gt; and &lt;code&gt;MICRO_OF_DAY&lt;/code&gt; which are too large to fit in an &lt;code&gt;int&lt;/code&gt; and throw a &lt;code&gt;DateTimeException&lt;/code&gt;. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;localtime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;除いて、この時間に基づいて有効な値を返します &lt;code&gt;NANO_OF_DAY&lt;/code&gt; と &lt;code&gt;MICRO_OF_DAY&lt;/code&gt; に収まるには大きすぎる &lt;code&gt;int&lt;/code&gt; 型やスロー &lt;code&gt;DateTimeException&lt;/code&gt; を。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="f2ea46b126ff3b5bdbf666ca3c46b71e50576dc7" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;localtime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this time. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;localtime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;、この時間に基づいて有効な値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="3f81a778997a088523214d2edc7a7aab7a300ca4" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;monthday#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return appropriate range instances. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;monthday#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;適切な範囲のインスタンスを返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="ce1690eace7e2c6d89cc928ca7a7a051f9a8d0f2" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;monthday#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this month-day. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;monthday#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;今月-日に基づいて有効な値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="54c277810f3ed7c547f4b1ad6fd3fb8f9a746292" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;offsetdatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return appropriate range instances. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;offsetdatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;適切な範囲のインスタンスを返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="20e764af5b165d57d63cb3a6753fd7d4d9d38420" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;offsetdatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this date-time, except &lt;code&gt;NANO_OF_DAY&lt;/code&gt;, &lt;code&gt;MICRO_OF_DAY&lt;/code&gt;, &lt;code&gt;EPOCH_DAY&lt;/code&gt;, &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; and &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; which are too large to fit in an &lt;code&gt;int&lt;/code&gt; and throw a &lt;code&gt;DateTimeException&lt;/code&gt;. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;offsetdatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;除いて、この日時に基づいて有効な値を返します &lt;code&gt;NANO_OF_DAY&lt;/code&gt; 、 &lt;code&gt;MICRO_OF_DAY&lt;/code&gt; 、 &lt;code&gt;EPOCH_DAY&lt;/code&gt; 、 &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; と &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; に収まるには大きすぎる &lt;code&gt;int&lt;/code&gt; 型やスロー &lt;code&gt;DateTimeException&lt;/code&gt; を。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="bbfa08249a8a681a77ac31ded9b0970961cb7e45" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;offsetdatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this date-time. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;offsetdatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;日付と時刻に基づいて有効な値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="216d1b40d29dcd13ae455e39ff25a34173b680bc" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;offsettime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return appropriate range instances. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;offsettime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;適切な範囲のインスタンスを返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="89af7f61649fef38a7f170c1bd0ab908cfde7464" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;offsettime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this time, except &lt;code&gt;NANO_OF_DAY&lt;/code&gt; and &lt;code&gt;MICRO_OF_DAY&lt;/code&gt; which are too large to fit in an &lt;code&gt;int&lt;/code&gt; and throw a &lt;code&gt;DateTimeException&lt;/code&gt;. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;offsettime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;除いて、この時間に基づいて有効な値を返します &lt;code&gt;NANO_OF_DAY&lt;/code&gt; と &lt;code&gt;MICRO_OF_DAY&lt;/code&gt; に収まるには大きすぎる &lt;code&gt;int&lt;/code&gt; 型やスロー &lt;code&gt;DateTimeException&lt;/code&gt; を。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="f135da292374c58a63e9a7dd6bf4f22cdbf128fc" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;offsettime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this time. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;offsettime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;、この時間に基づいて有効な値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="66a31e186370c87394aabeac098a9be857ade9fd" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;year#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return appropriate range instances. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;year#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;適切な範囲のインスタンスを返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="1a78917caede284548be462696171d8a8df88818" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;year#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this year. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;year#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;、今年に基づいて有効な値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="638fba149e2f9605d4c8dd06cfefd8163837f176" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;yearmonth#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return appropriate range instances. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;yearmonth#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;適切な範囲のインスタンスを返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="bc96611b6dd2d22d3132d6d3df53e51b38124d7a" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;yearmonth#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this year-month, except &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; which is too large to fit in an &lt;code&gt;int&lt;/code&gt; and throw a &lt;code&gt;DateTimeException&lt;/code&gt;. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;yearmonth#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;除いて、この年月に基づいて有効な値を返します &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; に収まるには大きすぎる &lt;code&gt;int&lt;/code&gt; 型やスロー &lt;code&gt;DateTimeException&lt;/code&gt; を。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="5f2e16d3207b8a1b377b13995b5829979baa3c06" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;yearmonth#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this year-month. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;yearmonth#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;、この年月に基づいて有効な値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="5fda7020a7bae43a5df2b5286206bb91d72d039d" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;zoneddatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return appropriate range instances. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;zoneddatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;適切な範囲のインスタンスを返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="88d03525f1042dd0011a22419c6df4c5121eba14" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;zoneddatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this date-time, except &lt;code&gt;NANO_OF_DAY&lt;/code&gt;, &lt;code&gt;MICRO_OF_DAY&lt;/code&gt;, &lt;code&gt;EPOCH_DAY&lt;/code&gt;, &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; and &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; which are too large to fit in an &lt;code&gt;int&lt;/code&gt; and throw a &lt;code&gt;DateTimeException&lt;/code&gt;. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;zoneddatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;除いて、この日時に基づいて有効な値を返します &lt;code&gt;NANO_OF_DAY&lt;/code&gt; 、 &lt;code&gt;MICRO_OF_DAY&lt;/code&gt; 、 &lt;code&gt;EPOCH_DAY&lt;/code&gt; 、 &lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; と &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; に収まるには大きすぎる &lt;code&gt;int&lt;/code&gt; 型やスロー &lt;code&gt;DateTimeException&lt;/code&gt; を。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="a0124fd3059f644ca04188c31653732caf32a08f" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;zoneddatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return valid values based on this date-time. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;zoneddatetime#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;日付と時刻に基づいて有効な値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="0337a2eda7a472dc0aa83a7e1eef644d5a370e32" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;a href=&quot;zoneoffset#isSupported-java.time.temporal.TemporalField-&quot;&gt;&lt;code&gt;supported fields&lt;/code&gt;&lt;/a&gt; will return appropriate range instances. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。&lt;a href=&quot;zoneoffset#isSupported-java.time.temporal.TemporalField-&quot;&gt; &lt;code&gt;supported fields&lt;/code&gt; &lt;/a&gt;適切な範囲のインスタンスを返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="4046ccaca6ad2d1bf0b7e5c2e124396f1812f96d" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; field returns the value of the offset. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will throw an &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。 &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; のフィールドは、オフセットの値を返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスは &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="09800c7a5d51ab3ac1ecbfa59a39761992b8d783" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; field returns true. All other &lt;code&gt;ChronoField&lt;/code&gt; instances will return false.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。 &lt;code&gt;OFFSET_SECONDS&lt;/code&gt; のフィールドはtrueを返します。他のすべての &lt;code&gt;ChronoField&lt;/code&gt; インスタンスはfalseを返します。</target>
        </trans-unit>
        <trans-unit id="bcdaaec98194652eaec2e755f354592d8a5f1fa2" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; then the query is implemented here. The supported fields are:</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; の&lt;/a&gt;場合、クエリはここに実装されます。サポートされているフィールドは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="26f815de83bf9d85fe8094749e5ea200739939d5" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt; then the addition is implemented by &lt;a href=&quot;localdatetime#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;LocalDateTime.plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. The offset is not part of the calculation and will be unchanged in the result.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;場合、追加は&lt;a href=&quot;localdatetime#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;LocalDateTime.plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;によって実装されます。オフセットは計算の一部ではなく、結果で変更されません。</target>
        </trans-unit>
        <trans-unit id="3d8816d4bddc205a3c0266b4706842519edca858" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt; then the addition is implemented by &lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;LocalDateTime.plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. The offset is not part of the calculation and will be unchanged in the result.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;場合、追加は&lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;LocalDateTime.plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;によって実装されます。オフセットは計算の一部ではなく、結果では変更されません。</target>
        </trans-unit>
        <trans-unit id="30e6967c28e9ee1cc43dcf0ccc34a23008296abc" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt; then the addition is implemented by &lt;a href=&quot;localtime#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;LocalTime.plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. The offset is not part of the calculation and will be unchanged in the result.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;場合、追加は&lt;a href=&quot;localtime#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;LocalTime.plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;によって実装されます。オフセットは計算の一部ではなく、結果で変更されません。</target>
        </trans-unit>
        <trans-unit id="5a927c94cc558aa44e673d3c09b5dede6b4bbec9" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt; then the addition is implemented by &lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;LocalTime.plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. The offset is not part of the calculation and will be unchanged in the result.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;場合、追加は&lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;LocalTime.plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;によって実装されます。オフセットは計算の一部ではなく、結果では変更されません。</target>
        </trans-unit>
        <trans-unit id="edd9f66100a0f8ebdeaf7afd13edd4d404894480" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt; then the addition is implemented here. Date units are added as per &lt;a href=&quot;localdate#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;LocalDate.plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Time units are added as per &lt;a href=&quot;localtime#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;LocalTime.plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with any overflow in days added equivalent to using &lt;a href=&quot;#plusDays(long)&quot;&gt;&lt;code&gt;plusDays(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;場合、追加はここに実装されます。日付の単位は&lt;a href=&quot;localdate#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;LocalDate.plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;追加されます。時間単位は&lt;a href=&quot;localtime#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;LocalTime.plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;追加され、&lt;a href=&quot;#plusDays(long)&quot;&gt; &lt;code&gt;plusDays(long)&lt;/code&gt; &lt;/a&gt;を使用するのと同等の日数のオーバーフローが追加されます。</target>
        </trans-unit>
        <trans-unit id="f5cba436d7af3b0ad553fc0358e491b4ffeb23a3" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt; then the addition is implemented here. Date units are added as per &lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;LocalDate.plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt;. Time units are added as per &lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;LocalTime.plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with any overflow in days added equivalent to using &lt;a href=&quot;localdatetime#plusDays-long-&quot;&gt;&lt;code&gt;plusDays(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;場合、ここで追加が実装されます。日付単位は&lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;LocalDate.plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;追加されます。時間単位は&lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;LocalTime.plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt;追加され、日数のオーバーフローは&lt;a href=&quot;localdatetime#plusDays-long-&quot;&gt; &lt;code&gt;plusDays(long)&lt;/code&gt; &lt;/a&gt;を使用するのと同等に追加されます。</target>
        </trans-unit>
        <trans-unit id="87edabfd23bcd4b5580257d424970351a200d0e6" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt; then the addition is implemented here. The supported fields behave as follows:</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;場合、ここで追加が実装されます。サポートされているフィールドは次のように動作します。</target>
        </trans-unit>
        <trans-unit id="7d28f15788411edaf2c4769963134a70f9a51014" translate="yes" xml:space="preserve">
          <source>If the field is a &lt;a href=&quot;temporal/chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt; then the addition is implemented here. The zone is not part of the calculation and will be unchanged in the result. The calculation for date and time units differ.</source>
          <target state="translated">フィールドが&lt;a href=&quot;temporal/chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; の&lt;/a&gt;場合、ここで追加が実装されます。ゾーンは計算の一部ではなく、結果では変更されません。日付と時間の単位の計算は異なります。</target>
        </trans-unit>
        <trans-unit id="472a2bad58441686158034a719ecf7233180fcd9" translate="yes" xml:space="preserve">
          <source>If the field is declared &lt;code&gt;volatile&lt;/code&gt; then the returned VarHandle will override access to the field (effectively ignore the &lt;code&gt;volatile&lt;/code&gt; declaration) in accordance to its specified access modes.</source>
          <target state="translated">フィールドが &lt;code&gt;volatile&lt;/code&gt; と宣言されている場合、返されたVarHandleは、指定されたアクセスモードに従って、フィールドへのアクセスをオーバーライドします（事実上、 &lt;code&gt;volatile&lt;/code&gt; 宣言を無視します）。</target>
        </trans-unit>
        <trans-unit id="df5997d9cb9eb98daf0677e44c78da78084843dc" translate="yes" xml:space="preserve">
          <source>If the field is hidden in the type of &lt;code&gt;obj&lt;/code&gt;, the field's value is obtained according to the preceding rules.</source>
          <target state="translated">フィールドが &lt;code&gt;obj&lt;/code&gt; の型に隠されている場合、フィールドの値は前述の規則に従って取得されます。</target>
        </trans-unit>
        <trans-unit id="3cd0fa2a6c549544bf0fa17d3fe9a0bbdad3a534" translate="yes" xml:space="preserve">
          <source>If the field is hidden in the type of &lt;code&gt;obj&lt;/code&gt;, the field's value is set according to the preceding rules.</source>
          <target state="translated">フィールドが &lt;code&gt;obj&lt;/code&gt; のタイプで非表示の場合、フィールドの値は前述のルールに従って設定されます。</target>
        </trans-unit>
        <trans-unit id="c8f06458338d0982fde844f74e3eac7907ffd72d" translate="yes" xml:space="preserve">
          <source>If the field is not a &lt;code&gt;ChronoField&lt;/code&gt;, then the result of this method is obtained by invoking &lt;code&gt;TemporalField.adjustInto(Temporal, long)&lt;/code&gt; passing &lt;code&gt;this&lt;/code&gt; as the argument. In this case, the field determines whether and how to adjust the instant.</source>
          <target state="translated">フィールドがない場合 &lt;code&gt;ChronoField&lt;/code&gt; 、この方法の結果が呼び出して取得する &lt;code&gt;TemporalField.adjustInto(Temporal, long)&lt;/code&gt; 渡し &lt;code&gt;this&lt;/code&gt; 引数として。この場合、フィールドは、インスタントを調整するかどうか、および調整方法を決定します。</target>
        </trans-unit>
        <trans-unit id="bc13b792f3c5838d3770d636dc87567d506bc218" translate="yes" xml:space="preserve">
          <source>If the field is not a &lt;code&gt;ChronoField&lt;/code&gt;, then the result of this method is obtained by invoking &lt;code&gt;TemporalField.adjustInto(Temporal, long)&lt;/code&gt; passing &lt;code&gt;this&lt;/code&gt; as the first argument.</source>
          <target state="translated">フィールドがない場合 &lt;code&gt;ChronoField&lt;/code&gt; 、この方法の結果が呼び出して取得する &lt;code&gt;TemporalField.adjustInto(Temporal, long)&lt;/code&gt; 渡し &lt;code&gt;this&lt;/code&gt; 最初の引数として。</target>
        </trans-unit>
        <trans-unit id="593408760a93df2aae450a2a246b1f8f655869de" translate="yes" xml:space="preserve">
          <source>If the field is not a &lt;code&gt;ChronoField&lt;/code&gt;, then the result of this method is obtained by invoking &lt;code&gt;TemporalField.getFrom(TemporalAccessor)&lt;/code&gt; passing &lt;code&gt;this&lt;/code&gt; as the argument.</source>
          <target state="translated">フィールドがない場合 &lt;code&gt;ChronoField&lt;/code&gt; 、この方法の結果が呼び出すことによって得られる &lt;code&gt;TemporalField.getFrom(TemporalAccessor)&lt;/code&gt; を通過 &lt;code&gt;this&lt;/code&gt; 引数として。</target>
        </trans-unit>
        <trans-unit id="84111e9c7052aea445fc84ff88640c7d9d47a3e1" translate="yes" xml:space="preserve">
          <source>If the field is not a &lt;code&gt;ChronoField&lt;/code&gt;, then the result of this method is obtained by invoking &lt;code&gt;TemporalField.getFrom(TemporalAccessor)&lt;/code&gt; passing &lt;code&gt;this&lt;/code&gt; as the argument. Whether the value can be obtained, and what the value represents, is determined by the field.</source>
          <target state="translated">フィールドがない場合 &lt;code&gt;ChronoField&lt;/code&gt; 、この方法の結果が呼び出すことによって得られる &lt;code&gt;TemporalField.getFrom(TemporalAccessor)&lt;/code&gt; を通過 &lt;code&gt;this&lt;/code&gt; 引数として。値を取得できるかどうか、および値が何を表すかは、フィールドによって決まります。</target>
        </trans-unit>
        <trans-unit id="8c0976d6ec775eae314c44e1cc501085eba97650" translate="yes" xml:space="preserve">
          <source>If the field is not a &lt;code&gt;ChronoField&lt;/code&gt;, then the result of this method is obtained by invoking &lt;code&gt;TemporalField.isSupportedBy(TemporalAccessor)&lt;/code&gt; passing &lt;code&gt;this&lt;/code&gt; as the argument.</source>
          <target state="translated">フィールドがない場合 &lt;code&gt;ChronoField&lt;/code&gt; 、この方法の結果が呼び出すことによって得られる &lt;code&gt;TemporalField.isSupportedBy(TemporalAccessor)&lt;/code&gt; を通過 &lt;code&gt;this&lt;/code&gt; 引数として。</target>
        </trans-unit>
        <trans-unit id="8bfc158b937ea3897727206425819d75e46f302c" translate="yes" xml:space="preserve">
          <source>If the field is not a &lt;code&gt;ChronoField&lt;/code&gt;, then the result of this method is obtained by invoking &lt;code&gt;TemporalField.isSupportedBy(TemporalAccessor)&lt;/code&gt; passing &lt;code&gt;this&lt;/code&gt; as the argument. Whether the field is supported is determined by the field.</source>
          <target state="translated">フィールドがない場合 &lt;code&gt;ChronoField&lt;/code&gt; 、この方法の結果が呼び出すことによって得られる &lt;code&gt;TemporalField.isSupportedBy(TemporalAccessor)&lt;/code&gt; を通過 &lt;code&gt;this&lt;/code&gt; 引数として。フィールドがサポートされているかどうかは、フィールドによって決まります。</target>
        </trans-unit>
        <trans-unit id="63182facd2f63b4b7afccc2a4e59688c8ba979ee" translate="yes" xml:space="preserve">
          <source>If the field is not a &lt;code&gt;ChronoField&lt;/code&gt;, then the result of this method is obtained by invoking &lt;code&gt;TemporalField.rangeRefinedBy(TemporalAccessor)&lt;/code&gt; passing &lt;code&gt;this&lt;/code&gt; as the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7688528113c7572e4ebfde7d3d5c748187dbd155" translate="yes" xml:space="preserve">
          <source>If the field is not a &lt;code&gt;ChronoField&lt;/code&gt;, then the result of this method is obtained by invoking &lt;code&gt;TemporalField.rangeRefinedBy(TemporalAccessor)&lt;/code&gt; passing &lt;code&gt;this&lt;/code&gt; as the argument. Whether the range can be obtained is determined by the field.</source>
          <target state="translated">フィールドがない場合 &lt;code&gt;ChronoField&lt;/code&gt; 、この方法の結果が呼び出すことによって得られる &lt;code&gt;TemporalField.rangeRefinedBy(TemporalAccessor)&lt;/code&gt; を通過 &lt;code&gt;this&lt;/code&gt; 引数として。範囲を取得できるかどうかは、フィールドによって決まります。</target>
        </trans-unit>
        <trans-unit id="9dc945edaeb99a9dd905b6958af0da2b698eb2ff" translate="yes" xml:space="preserve">
          <source>If the field is not a &lt;code&gt;ChronoField&lt;/code&gt;, then the result of this method is obtained by invoking &lt;code&gt;TemporalField.rangeRefinedBy(TemporalAccessorl)&lt;/code&gt; passing &lt;code&gt;this&lt;/code&gt; as the argument.</source>
          <target state="translated">フィールドがない場合 &lt;code&gt;ChronoField&lt;/code&gt; 、この方法の結果が呼び出すことによって得られる &lt;code&gt;TemporalField.rangeRefinedBy(TemporalAccessorl)&lt;/code&gt; を通過 &lt;code&gt;this&lt;/code&gt; 引数として。</target>
        </trans-unit>
        <trans-unit id="1bc2facd61e2bb2d253a7e2d751714a8d91fd304" translate="yes" xml:space="preserve">
          <source>If the field is not a &lt;code&gt;ChronoUnit&lt;/code&gt;, then the result of this method is obtained by invoking &lt;code&gt;TemporalUnit.addTo(Temporal, long)&lt;/code&gt; passing &lt;code&gt;this&lt;/code&gt; as the argument. In this case, the unit determines whether and how to perform the addition.</source>
          <target state="translated">フィールドがない場合 &lt;code&gt;ChronoUnit&lt;/code&gt; 、この方法の結果が呼び出して取得する &lt;code&gt;TemporalUnit.addTo(Temporal, long)&lt;/code&gt; 渡し &lt;code&gt;this&lt;/code&gt; 引数として。この場合、ユニットは加算を実行するかどうか、およびどのように実行するかを決定します。</target>
        </trans-unit>
        <trans-unit id="3745b108d29fe526d4efe7b06863f59e4b41c30c" translate="yes" xml:space="preserve">
          <source>If the field is not a &lt;code&gt;ChronoUnit&lt;/code&gt;, then the result of this method is obtained by invoking &lt;code&gt;TemporalUnit.isSupportedBy(Temporal)&lt;/code&gt; passing &lt;code&gt;this&lt;/code&gt; as the argument.</source>
          <target state="translated">フィールドがない場合 &lt;code&gt;ChronoUnit&lt;/code&gt; 、この方法の結果が呼び出すことによって得られる &lt;code&gt;TemporalUnit.isSupportedBy(Temporal)&lt;/code&gt; 通過 &lt;code&gt;this&lt;/code&gt; 引数として。</target>
        </trans-unit>
        <trans-unit id="7c31bf8c81eb5e3fa5966507ecfeb7eeb414a7a3" translate="yes" xml:space="preserve">
          <source>If the field is static, and if the returned VarHandle is operated on, the field's declaring class will be initialized, if it has not already been initialized.</source>
          <target state="translated">フィールドが静的で、返されたVarHandleが操作された場合、フィールドの宣言クラスは、まだ初期化されていない場合、初期化されます。</target>
        </trans-unit>
        <trans-unit id="73f48c353a2b4ef722c15d4cc5583b25df30a788" translate="yes" xml:space="preserve">
          <source>If the field is static, and if the returned method handle is invoked, the field's class will be initialized, if it has not already been initialized.</source>
          <target state="translated">フィールドが静的であり、返されたメソッドハンドルが呼び出された場合、フィールドのクラスがまだ初期化されていない場合は、そのクラスが初期化されます。</target>
        </trans-unit>
        <trans-unit id="f75aa0d9bdab9beccdb246276fa853bdf88f9fa1" translate="yes" xml:space="preserve">
          <source>If the field type is &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt; then numeric and atomic update access modes compare values using their bitwise representation (see &lt;a href=&quot;../float#floatToRawIntBits(float)&quot;&gt;&lt;code&gt;Float.floatToRawIntBits(float)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../double#doubleToRawLongBits(double)&quot;&gt;&lt;code&gt;Double.doubleToRawLongBits(double)&lt;/code&gt;&lt;/a&gt;, respectively).</source>
          <target state="translated">フィールドタイプが &lt;code&gt;float&lt;/code&gt; または &lt;code&gt;double&lt;/code&gt; の場合、数値およびアトミック更新アクセスモードは、ビット単位の表現を使用して値を比較します&lt;a href=&quot;../double#doubleToRawLongBits(double)&quot;&gt; &lt;code&gt;Double.doubleToRawLongBits(double)&lt;/code&gt; &lt;/a&gt;それぞれ、&lt;a href=&quot;../float#floatToRawIntBits(float)&quot;&gt; &lt;code&gt;Float.floatToRawIntBits(float)&lt;/code&gt; &lt;/a&gt;およびDouble.doubleToRawLongBits（double）を参照）。</target>
        </trans-unit>
        <trans-unit id="9a766268cd602d31dba43c646e17e366517c908b" translate="yes" xml:space="preserve">
          <source>If the file already exists and it is opened for &lt;a href=&quot;#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; access, then its length is truncated to 0.</source>
          <target state="translated">ファイルがすでに存在し、&lt;a href=&quot;#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;アクセス用に開かれている場合、その長さは0に切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="929d4fca608fb0e25c4e8a63977f3cccb4c4213a" translate="yes" xml:space="preserve">
          <source>If the file already exists and it is opened for &lt;a href=&quot;#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; access, then its length is truncated to 0. This option is ignored if the file is opened only for &lt;a href=&quot;#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; access.</source>
          <target state="translated">ファイルがすでに存在し、&lt;a href=&quot;#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;アクセス用に開かれている場合、その長さは0に切り捨てられます。ファイルが&lt;a href=&quot;#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt;アクセス用にのみ開かれている場合、このオプションは無視されます。</target>
        </trans-unit>
        <trans-unit id="99de1988747f1a4d19117e077c897d899a759367" translate="yes" xml:space="preserve">
          <source>If the file already exists and it is opened for &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; access, then its length is truncated to 0. This option is ignored if the file is opened only for &lt;a href=&quot;standardopenoption#READ&quot;&gt;&lt;code&gt;READ&lt;/code&gt;&lt;/a&gt; access.</source>
          <target state="translated">ファイルがすでに存在し、&lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;アクセス用に開かれている場合、その長さは0に切り捨てられます。ファイルが&lt;a href=&quot;standardopenoption#READ&quot;&gt; &lt;code&gt;READ&lt;/code&gt; &lt;/a&gt;アクセス用にのみ開かれている場合、このオプションは無視されます。</target>
        </trans-unit>
        <trans-unit id="717bfba6c0a90a03523ab0b13a3750e80f9e6288" translate="yes" xml:space="preserve">
          <source>If the file does not reside on a local device then no such guarantee is made.</source>
          <target state="translated">ファイルがローカルデバイスに存在しない場合は、そのような保証はありません。</target>
        </trans-unit>
        <trans-unit id="0c9b9ed3b31f95435fd26b9b50e781fb7b10f8ba" translate="yes" xml:space="preserve">
          <source>If the file exists but is a directory rather than a regular file, does not exist but cannot be created, or cannot be opened for any other reason then a &lt;code&gt;FileNotFoundException&lt;/code&gt; is thrown.</source>
          <target state="translated">ファイルは存在するが、通常のファイルではなくディレクトリである場合、存在しないが作成できない場合、またはその他の理由で開くことができない場合は、 &lt;code&gt;FileNotFoundException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="f72ad9bda52a7b14dd7371372743b4037fafc486" translate="yes" xml:space="preserve">
          <source>If the file is a directory then the directory must be empty. In some implementations a directory has entries for special files or links that are created when the directory is created. In such implementations a directory is considered empty when only the special entries exist.</source>
          <target state="translated">ファイルがディレクトリの場合、ディレクトリは空でなければなりません。いくつかの実装では、ディレクトリが作成されたときに作成される特別なファイルやリンクのためのエントリを持っています。そのような実装では、特別なエントリだけが存在する場合、ディレクトリは空とみなされます。</target>
        </trans-unit>
        <trans-unit id="d8fa9367e398fcca0e927495045f7052187e809e" translate="yes" xml:space="preserve">
          <source>If the file is a directory then the directory must be empty. In some implementations a directory has entries for special files or links that are created when the directory is created. In such implementations a directory is considered empty when only the special entries exist. This method can be used with the &lt;a href=&quot;#walkFileTree(java.nio.file.Path,java.util.Set,int,java.nio.file.FileVisitor)&quot;&gt;&lt;code&gt;walkFileTree&lt;/code&gt;&lt;/a&gt; method to delete a directory and all entries in the directory, or an entire</source>
          <target state="translated">ファイルがディレクトリの場合、ディレクトリは空である必要があります。一部の実装では、ディレクトリに、ディレクトリの作成時に作成される特別なファイルまたはリンクのエントリがあります。このような実装では、特別なエントリのみが存在する場合、ディレクトリは空であると見なされます。このメソッドを&lt;a href=&quot;#walkFileTree(java.nio.file.Path,java.util.Set,int,java.nio.file.FileVisitor)&quot;&gt; &lt;code&gt;walkFileTree&lt;/code&gt; &lt;/a&gt;メソッドとともに使用して、ディレクトリとディレクトリ内のすべてのエントリ、またはディレクトリ全体を削除できます。</target>
        </trans-unit>
        <trans-unit id="d0c1117a6df1c8b656d3b8ee4f35129ed11c6504" translate="yes" xml:space="preserve">
          <source>If the file is a directory then the directory must be empty. In some implementations a directory has entries for special files or links that are created when the directory is created. In such implementations a directory is considered empty when only the special entries exist. This method can be used with the &lt;a href=&quot;files#walkFileTree-java.nio.file.Path-java.util.Set-int-java.nio.file.FileVisitor-&quot;&gt;&lt;code&gt;walkFileTree&lt;/code&gt;&lt;/a&gt; method to delete a directory and all entries in the directory, or an entire</source>
          <target state="translated">ファイルがディレクトリの場合、ディレクトリは空でなければなりません。一部の実装では、ディレクトリには、ディレクトリの作成時に作成される特別なファイルまたはリンクのエントリがあります。このような実装では、特別なエントリのみが存在する場合、ディレクトリは空と見なされます。このメソッドを&lt;a href=&quot;files#walkFileTree-java.nio.file.Path-java.util.Set-int-java.nio.file.FileVisitor-&quot;&gt; &lt;code&gt;walkFileTree&lt;/code&gt; &lt;/a&gt;メソッドとともに使用して、ディレクトリとディレクトリ内のすべてのエントリ、またはディレクトリ全体を削除できます。</target>
        </trans-unit>
        <trans-unit id="6d651a40c8a6027fa645d02154642d3d0cbb9614" translate="yes" xml:space="preserve">
          <source>If the file is opened for &lt;a href=&quot;#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; access then bytes will be written to the end of the file rather than the beginning.</source>
          <target state="translated">ファイルが&lt;a href=&quot;#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;アクセス用に開かれている場合、バイトはファイルの先頭ではなく末尾に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="7dbd0c6e9ab04a8789ef0e83e00003ffa2ee9662" translate="yes" xml:space="preserve">
          <source>If the file is opened for &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; access then bytes will be written to the end of the file rather than the beginning.</source>
          <target state="translated">ファイルが&lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;アクセス用に開かれている場合、バイトはファイルの先頭ではなく末尾に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="f9d2a8154b6e04db066d371ce68d85675117b48d" translate="yes" xml:space="preserve">
          <source>If the file is opened for write access by other programs, then it is file system specific if writing to the end of the file is atomic.</source>
          <target state="translated">ファイルが他のプログラムで書き込みアクセスのために開かれている場合、ファイルの末尾への書き込みがアトミックであれば、それはファイルシステム固有のものです。</target>
        </trans-unit>
        <trans-unit id="363aa2bf9bc4403e90b3304537b4850955de2d6f" translate="yes" xml:space="preserve">
          <source>If the file mapped into this buffer resides on a local storage device then when this method returns it is guaranteed that all changes made to the buffer since it was created, or since this method was last invoked, will have been written to that device.</source>
          <target state="translated">このバッファにマップされたファイルがローカルストレージデバイスに存在する場合、このメソッドが戻ってきたときには、バッファが作成されてから、またはこのメソッドが最後に呼び出されてから、バッファに加えられたすべての変更がそのデバイスに書き込まれていることが保証されます。</target>
        </trans-unit>
        <trans-unit id="26650d7e2c0ee9c777086da59ae41956022f191f" translate="yes" xml:space="preserve">
          <source>If the file mapped into this buffer resides on a local storage device then when this method returns it is guaranteed that all changes made to the selected region buffer since it was created, or since this method was last invoked, will have been written to that device. The force operation is free to write bytes that lie outside the specified region, for example to ensure that data blocks of some device-specific granularity are transferred in their entirety.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c66fa0bc0370be55e7f6902e9819c235f1ae2c1" translate="yes" xml:space="preserve">
          <source>If the file mapped into this segment resides on a local storage device then when this method returns it is guaranteed that all changes made to the segment since it was created, or since this method was last invoked, will have been written to that device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3f80a7c47e0dee8ff25771e1984095801d55de" translate="yes" xml:space="preserve">
          <source>If the file system and files remain static, then this method implements an equivalence relation for non-null &lt;code&gt;Paths&lt;/code&gt;.</source>
          <target state="translated">ファイルシステムとファイルが静的なままの場合、このメソッドはnull以外の &lt;code&gt;Paths&lt;/code&gt; 同値関係を実装します。</target>
        </trans-unit>
        <trans-unit id="bf2540a956606dd24c05d911dfb014b7471baead" translate="yes" xml:space="preserve">
          <source>If the file system implementation does not support a time stamp to indicate the time of last access then this method returns an implementation specific default value, typically the &lt;a href=&quot;#lastModifiedTime()&quot;&gt;&lt;code&gt;last-modified-time&lt;/code&gt;&lt;/a&gt; or a &lt;code&gt;FileTime&lt;/code&gt; representing the epoch (1970-01-01T00:00:00Z).</source>
          <target state="translated">ファイルシステムの実装が最終アクセスの時刻を示すタイムスタンプをサポートしていない場合、このメソッドは実装固有のデフォルト値、通常は&lt;a href=&quot;#lastModifiedTime()&quot;&gt; &lt;code&gt;last-modified-time&lt;/code&gt; &lt;/a&gt;またはエポックを表す &lt;code&gt;FileTime&lt;/code&gt; （1970-01-01T00：00： 00Z）。</target>
        </trans-unit>
        <trans-unit id="1cc09fc7cf4f903c9ad57909dbe23e700dcd6cfb" translate="yes" xml:space="preserve">
          <source>If the file system implementation does not support a time stamp to indicate the time of last access then this method returns an implementation specific default value, typically the &lt;a href=&quot;basicfileattributes#lastModifiedTime--&quot;&gt;&lt;code&gt;last-modified-time&lt;/code&gt;&lt;/a&gt; or a &lt;code&gt;FileTime&lt;/code&gt; representing the epoch (1970-01-01T00:00:00Z).</source>
          <target state="translated">ファイルシステムの実装が最終アクセス時刻を示すタイムスタンプをサポートしていない場合、このメソッドは実装固有のデフォルト値、通常は&lt;a href=&quot;basicfileattributes#lastModifiedTime--&quot;&gt; &lt;code&gt;last-modified-time&lt;/code&gt; &lt;/a&gt;またはエポック（ &lt;code&gt;FileTime&lt;/code&gt; ：00： 00Z）。</target>
        </trans-unit>
        <trans-unit id="fa544bd520d9dcec26b2ece7f7dc9e779d24b413" translate="yes" xml:space="preserve">
          <source>If the file system implementation does not support a time stamp to indicate the time of last modification then this method returns an implementation specific default value, typically a &lt;code&gt;FileTime&lt;/code&gt; representing the epoch (1970-01-01T00:00:00Z).</source>
          <target state="translated">ファイルシステムの実装は最終修正時刻を示すタイムスタンプをサポートしていない場合、このメソッドは実装固有のデフォルト値、一般的に返し &lt;code&gt;FileTime&lt;/code&gt; （：00：00Z 1970-01-01T00）エポックを表すを。</target>
        </trans-unit>
        <trans-unit id="02f361be725f40f9d2cf1b1f7f87f23ccb88afbd" translate="yes" xml:space="preserve">
          <source>If the file system implementation does not support a time stamp to indicate the time when the file was created then this method returns an implementation specific default value, typically the &lt;a href=&quot;#lastModifiedTime()&quot;&gt;&lt;code&gt;last-modified-time&lt;/code&gt;&lt;/a&gt; or a &lt;code&gt;FileTime&lt;/code&gt; representing the epoch (1970-01-01T00:00:00Z).</source>
          <target state="translated">ファイルシステムの実装が、ファイルが作成された時刻を示すタイムスタンプをサポートしていない場合、このメソッドは、実装固有のデフォルト値（通常は&lt;a href=&quot;#lastModifiedTime()&quot;&gt; &lt;code&gt;last-modified-time&lt;/code&gt; &lt;/a&gt;またはエポックを表す &lt;code&gt;FileTime&lt;/code&gt; （1970-01-01T00： 00：00Z）。</target>
        </trans-unit>
        <trans-unit id="823bb3918b8c7dfd2716375b3397ec3520a2d6b4" translate="yes" xml:space="preserve">
          <source>If the file system implementation does not support a time stamp to indicate the time when the file was created then this method returns an implementation specific default value, typically the &lt;a href=&quot;basicfileattributes#lastModifiedTime--&quot;&gt;&lt;code&gt;last-modified-time&lt;/code&gt;&lt;/a&gt; or a &lt;code&gt;FileTime&lt;/code&gt; representing the epoch (1970-01-01T00:00:00Z).</source>
          <target state="translated">ファイルシステムの実装が、ファイルが作成された時刻を示すタイムスタンプをサポートしていない場合、このメソッドは実装固有のデフォルト値、通常は&lt;a href=&quot;basicfileattributes#lastModifiedTime--&quot;&gt; &lt;code&gt;last-modified-time&lt;/code&gt; &lt;/a&gt;またはエポック（ &lt;code&gt;FileTime&lt;/code&gt; ： 00：00Z）。</target>
        </trans-unit>
        <trans-unit id="cbaa60988de0c25a04ce29dd95934e886dae24fd" translate="yes" xml:space="preserve">
          <source>If the file system object identified by this object is currently registered with the watch service then the watch key, representing that registration, is returned after changing the event set or modifiers to those specified by the &lt;code&gt;events&lt;/code&gt; and &lt;code&gt;modifiers&lt;/code&gt; parameters. Changing the event set does not cause pending events for the object to be discarded. Objects are automatically registered for the &lt;a href=&quot;standardwatcheventkinds#OVERFLOW&quot;&gt;&lt;code&gt;OVERFLOW&lt;/code&gt;&lt;/a&gt; event. This event is not required to be present in the array of events.</source>
          <target state="translated">このオブジェクトによって識別されるファイルシステムオブジェクトが現在監視サービスに登録されている場合、イベントセットまたは修飾子を &lt;code&gt;events&lt;/code&gt; および &lt;code&gt;modifiers&lt;/code&gt; パラメーターで指定されたものに変更した後、その登録を表す監視キーが返されます。イベントセットを変更しても、オブジェクトの保留中のイベントは破棄されません。オブジェクトは、&lt;a href=&quot;standardwatcheventkinds#OVERFLOW&quot;&gt; &lt;code&gt;OVERFLOW&lt;/code&gt; &lt;/a&gt;イベントに対して自動的に登録されます。このイベントは、イベントの配列に存在する必要はありません。</target>
        </trans-unit>
        <trans-unit id="459754495e8f2fc830a24baaf3d7fd1c98e3b5d4" translate="yes" xml:space="preserve">
          <source>If the file system supports &lt;a href=&quot;package-summary#links&quot;&gt;symbolic links&lt;/a&gt; then this method is used to read the target of the link, failing if the file is not a symbolic link. The target of the link need not exist. The returned &lt;code&gt;Path&lt;/code&gt; object will be associated with the same file system as &lt;code&gt;link&lt;/code&gt;.</source>
          <target state="translated">ファイルシステムが&lt;a href=&quot;package-summary#links&quot;&gt;シンボリックリンクを&lt;/a&gt;サポートしている場合、このメソッドはリンクのターゲットを読み取るために使用され、ファイルがシンボリックリンクでない場合は失敗します。リンクのターゲットが存在する必要はありません。返された &lt;code&gt;Path&lt;/code&gt; オブジェクトは、 &lt;code&gt;link&lt;/code&gt; と同じファイルシステムに関連付けられます。</target>
        </trans-unit>
        <trans-unit id="fb0c8d3a8a398a77e00455877d296ebfc50c2a10" translate="yes" xml:space="preserve">
          <source>If the file system supports other security related file attributes (such as a file &lt;a href=&quot;posixfileattributes#permissions()&quot;&gt;&lt;code&gt;access-permissions&lt;/code&gt;&lt;/a&gt; for example), the updating the access control list may also cause these security related attributes to be updated.</source>
          <target state="translated">ファイルシステムが他のセキュリティ関連のファイル属性（ファイル&lt;a href=&quot;posixfileattributes#permissions()&quot;&gt; &lt;code&gt;access-permissions&lt;/code&gt; &lt;/a&gt;など）をサポートしている場合、アクセス制御リストを更新すると、これらのセキュリティ関連の属性も更新される可能性があります。</target>
        </trans-unit>
        <trans-unit id="d7347290370c35baf47e41039a48176f518ba6b9" translate="yes" xml:space="preserve">
          <source>If the file system supports other security related file attributes (such as a file &lt;a href=&quot;posixfileattributes#permissions--&quot;&gt;&lt;code&gt;access-permissions&lt;/code&gt;&lt;/a&gt; for example), the updating the access control list may also cause these security related attributes to be updated.</source>
          <target state="translated">ファイルシステムが他のセキュリティ関連ファイル属性（ファイル&lt;a href=&quot;posixfileattributes#permissions--&quot;&gt; &lt;code&gt;access-permissions&lt;/code&gt; &lt;/a&gt;など）をサポートしている場合、アクセス制御リストを更新すると、これらのセキュリティ関連属性も更新される場合があります。</target>
        </trans-unit>
        <trans-unit id="67de7dc4816dc3dd80c82da2f81ec2067ab1b35e" translate="yes" xml:space="preserve">
          <source>If the filter returns &lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt;&lt;code&gt;Status.REJECTED&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;null&lt;/code&gt; or throws a &lt;a href=&quot;../lang/runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt;, the active &lt;code&gt;readObject&lt;/code&gt; or &lt;code&gt;readUnshared&lt;/code&gt; throws &lt;a href=&quot;invalidclassexception&quot;&gt;&lt;code&gt;InvalidClassException&lt;/code&gt;&lt;/a&gt;, otherwise deserialization continues uninterrupted.</source>
          <target state="translated">If the filter returns &lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt; &lt;code&gt;Status.REJECTED&lt;/code&gt; &lt;/a&gt;, &lt;code&gt;null&lt;/code&gt; or throws a &lt;a href=&quot;../lang/runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt;, the active &lt;code&gt;readObject&lt;/code&gt; or &lt;code&gt;readUnshared&lt;/code&gt; throws &lt;a href=&quot;invalidclassexception&quot;&gt; &lt;code&gt;InvalidClassException&lt;/code&gt; &lt;/a&gt;, otherwise deserialization continues uninterrupted.</target>
        </trans-unit>
        <trans-unit id="9f05868501904493829d0907142a7754fe1122ce" translate="yes" xml:space="preserve">
          <source>If the filter returns a value, the target must accept that value as its argument in position &lt;code&gt;pos&lt;/code&gt;, preceded and/or followed by any arguments not passed to the filter. If the filter returns void, the target must accept all arguments not passed to the filter. No arguments are reordered, and a result returned from the filter replaces (in order) the whole subsequence of arguments originally passed to the adapter.</source>
          <target state="translated">フィルターが値を返す場合、ターゲットはその値を位置 &lt;code&gt;pos&lt;/code&gt; の引数として受け入れ、フィルターに渡されない引数の前または後、あるいはその両方を受け入れる必要があります。フィルターがvoidを返す場合、ターゲットはフィルターに渡されないすべての引数を受け入れる必要があります。引数の順序は変更されず、フィルターから返された結果は、アダプターに最初に渡された引数のサブシーケンス全体を（順番に）置き換えます。</target>
        </trans-unit>
        <trans-unit id="4842b7ba908041edda9019cd8af48573f8706e76" translate="yes" xml:space="preserve">
          <source>If the first &lt;code&gt;read&lt;/code&gt; on the underlying stream returns &lt;code&gt;-1&lt;/code&gt; to indicate end-of-file then this method returns &lt;code&gt;-1&lt;/code&gt;. Otherwise this method returns the number of bytes actually read.</source>
          <target state="translated">基本となるストリームの最初の &lt;code&gt;read&lt;/code&gt; が &lt;code&gt;-1&lt;/code&gt; を返し、ファイルの終わりを示している場合、このメソッドは &lt;code&gt;-1&lt;/code&gt; を返します。それ以外の場合、このメソッドは実際に読み取られたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="33b359247ef4ee2d114342c7c506f4ed4d411b51" translate="yes" xml:space="preserve">
          <source>If the first &lt;code&gt;read&lt;/code&gt; on the underlying stream returns &lt;code&gt;-1&lt;/code&gt; to indicate end-of-file then this method returns &lt;code&gt;-1&lt;/code&gt;. Otherwise this method returns the number of characters actually read.</source>
          <target state="translated">基本となるストリームの最初の &lt;code&gt;read&lt;/code&gt; が &lt;code&gt;-1&lt;/code&gt; を返し、ファイルの終わりを示している場合、このメソッドは &lt;code&gt;-1&lt;/code&gt; を返します。それ以外の場合、このメソッドは実際に読み取られた文字数を返します。</target>
        </trans-unit>
        <trans-unit id="ce60218f2510c7e7fddf8a7ccb70e4c23d7ed409" translate="yes" xml:space="preserve">
          <source>If the first argument is NaN and the second argument is nonzero, then the result is NaN.</source>
          <target state="translated">第1引数がNaNで第2引数が0以外の場合、結果はNaNとなります。</target>
        </trans-unit>
        <trans-unit id="8870d606c771442922f1503139366f1c5f6ffb42" translate="yes" xml:space="preserve">
          <source>If the first argument is NaN, NaN is returned.</source>
          <target state="translated">第1引数がNaNの場合はNaNを返します。</target>
        </trans-unit>
        <trans-unit id="9089269bb48d32b9328e7c9f2b5e776cab13b138" translate="yes" xml:space="preserve">
          <source>If the first argument is finite and less than zero</source>
          <target state="translated">第一引数が有限でゼロ以下の場合</target>
        </trans-unit>
        <trans-unit id="40390f7aa327fdf0e7159e3c2ee52c76dda4cc5d" translate="yes" xml:space="preserve">
          <source>If the first argument is finite and the second argument is infinite, then the result is the same as the first argument.</source>
          <target state="translated">第1引数が有限で第2引数が無限であれば、結果は第1引数と同じになります。</target>
        </trans-unit>
        <trans-unit id="c79e66b15f81ddc9a951871c47a016d3318d1439" translate="yes" xml:space="preserve">
          <source>If the first argument is infinite, then an infinity of the same sign is returned.</source>
          <target state="translated">第一引数が無限大の場合は、同じ符号の無限大が返されます。</target>
        </trans-unit>
        <trans-unit id="ac7d4927f7484d5a09a609cfa4c9572e1d2c7f45" translate="yes" xml:space="preserve">
          <source>If the first argument is negative and the second argument is positive zero or negative zero, or the first argument is negative infinity and the second argument is finite, then the result is the &lt;code&gt;double&lt;/code&gt; value closest to -</source>
          <target state="translated">最初の引数が負で2​​番目の引数が正のゼロまたは負のゼロ、または最初の引数が負の無限大で2番目の引数が有限の場合、結果は-に最も近い &lt;code&gt;double&lt;/code&gt; 値です。</target>
        </trans-unit>
        <trans-unit id="c8e4a59b27a1fe3d520aae3637f149a7db9573ea" translate="yes" xml:space="preserve">
          <source>If the first argument is negative infinity and the second argument is positive infinity, then the result is the &lt;code&gt;double&lt;/code&gt; value closest to -</source>
          <target state="translated">最初の引数が負の無限大で、2番目の引数が正の無限大の場合、結果は-に最も近い &lt;code&gt;double&lt;/code&gt; 値になります。</target>
        </trans-unit>
        <trans-unit id="82b10d31a7012b44b539ae72f08e4e4c13a206b9" translate="yes" xml:space="preserve">
          <source>If the first argument is negative zero and the second argument is negative, or the first argument is negative and finite and the second argument is negative infinity, then the result is the &lt;code&gt;double&lt;/code&gt; value closest to -</source>
          <target state="translated">最初の引数が負のゼロで2番目の引数が負の場合、または最初の引数が負の有限で2番目の引数が負の無限大の場合、結果は-に最も近い &lt;code&gt;double&lt;/code&gt; 値です。</target>
        </trans-unit>
        <trans-unit id="8e475337333e7011c577f6dfd579b80f0f2ae245" translate="yes" xml:space="preserve">
          <source>If the first argument is negative zero and the second argument is positive, or the first argument is negative and finite and the second argument is positive infinity, then the result is negative zero.</source>
          <target state="translated">第1引数が負のゼロで第2引数が正の場合、または第1引数が負の有限で第2引数が正の無限大の場合は、結果は負のゼロとなります。</target>
        </trans-unit>
        <trans-unit id="e71c64d3bcd633902a2d641246fcfc98d2800c74" translate="yes" xml:space="preserve">
          <source>If the first argument is negative, the first element of the result is the ASCII minus character &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002D'&lt;/code&gt;). If the first argument is not negative, no sign character appears in the result.</source>
          <target state="translated">最初の引数が負の場合、結果の最初の要素はASCIIマイナス文字 &lt;code&gt;'-'&lt;/code&gt; （ &lt;code&gt;'\u002D'&lt;/code&gt; ）です。最初の引数が負でない場合、結果に符号文字は表示されません。</target>
        </trans-unit>
        <trans-unit id="f757bab2a5b1e8678119d7c70a633d7f48cfbb1b" translate="yes" xml:space="preserve">
          <source>If the first argument is negative, the first element of the result is the ASCII minus sign &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002d'&lt;/code&gt;). If the first argument is not negative, no sign character appears in the result.</source>
          <target state="translated">最初の引数が負の場合、結果の最初の要素はASCIIマイナス記号 &lt;code&gt;'-'&lt;/code&gt; （ &lt;code&gt;'\u002d'&lt;/code&gt; ）です。最初の引数が負でない場合、結果に符号文字は表示されません。</target>
        </trans-unit>
        <trans-unit id="be73a6c34da2b109aed6beaf3902ff7b8fa1d76b" translate="yes" xml:space="preserve">
          <source>If the first argument is positive and the second argument is positive zero or negative zero, or the first argument is positive infinity and the second argument is finite, then the result is the &lt;code&gt;double&lt;/code&gt; value closest to</source>
          <target state="translated">最初の引数が正で2番目の引数が正のゼロまたは負のゼロ、または最初の引数が正の無限大で2番目の引数が有限の場合、結果は最も近い &lt;code&gt;double&lt;/code&gt; 値になります。</target>
        </trans-unit>
        <trans-unit id="ebb6e09520d0766b54210b09e064a33ea2e4b570" translate="yes" xml:space="preserve">
          <source>If the first argument is positive infinity and the second argument is negative infinity, then the result is the &lt;code&gt;double&lt;/code&gt; value closest to 3*</source>
          <target state="translated">最初の引数が正の無限大で、2番目の引数が負の無限大の場合、結果は3 *に最も近い &lt;code&gt;double&lt;/code&gt; 値になります。</target>
        </trans-unit>
        <trans-unit id="a545d4a869ce0070ee3a2c5a7bd5c19feeb5e959" translate="yes" xml:space="preserve">
          <source>If the first argument is positive zero and the second argument is negative, or the first argument is positive and finite and the second argument is negative infinity, then the result is the &lt;code&gt;double&lt;/code&gt; value closest to</source>
          <target state="translated">最初の引数が正のゼロで2番目の引数が負の場合、または最初の引数が正で有限で2番目の引数が負の無限大の場合、結果は最も近い &lt;code&gt;double&lt;/code&gt; 値になります。</target>
        </trans-unit>
        <trans-unit id="2b99cd366559b0aa882f76d5433c550ae23a29d2" translate="yes" xml:space="preserve">
          <source>If the first argument is positive zero and the second argument is positive, or the first argument is positive and finite and the second argument is positive infinity, then the result is positive zero.</source>
          <target state="translated">第1引数が正の0で第2引数が正の場合、または第1引数が正で有限で第2引数が正の無限大の場合は、結果は正の0になります。</target>
        </trans-unit>
        <trans-unit id="90dbabf1b114fed471b1a3cd65fc77c1740f1756" translate="yes" xml:space="preserve">
          <source>If the first argument is zero, then a zero of the same sign is returned.</source>
          <target state="translated">第一引数がゼロの場合は、同じ符号のゼロが返されます。</target>
        </trans-unit>
        <trans-unit id="a1663731875dc28dccca70ad4bb3ad9c2ee28bff" translate="yes" xml:space="preserve">
          <source>If the first byte of a group matches the bit pattern &lt;code&gt;0xxxxxxx&lt;/code&gt; (where &lt;code&gt;x&lt;/code&gt; means &quot;may be &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;&quot;), then the group consists of just that byte. The byte is zero-extended to form a character.</source>
          <target state="translated">グループの最初のバイトがビットパターン &lt;code&gt;0xxxxxxx&lt;/code&gt; （ &lt;code&gt;x&lt;/code&gt; は「 &lt;code&gt;0&lt;/code&gt; または &lt;code&gt;1&lt;/code&gt; の可能性がある」を意味する）と一致する場合、グループはそのバイトのみで構成されます。バイトはゼロ拡張されて文字を形成します。</target>
        </trans-unit>
        <trans-unit id="43977f5f9b49b5f068ba277caf7c1c9b82cc82fa" translate="yes" xml:space="preserve">
          <source>If the first byte of a group matches the bit pattern &lt;code&gt;110xxxxx&lt;/code&gt;, then the group consists of that byte &lt;code&gt;a&lt;/code&gt; and a second byte &lt;code&gt;b&lt;/code&gt;. If there is no byte &lt;code&gt;b&lt;/code&gt; (because byte &lt;code&gt;a&lt;/code&gt; was the last of the bytes to be read), or if byte &lt;code&gt;b&lt;/code&gt; does not match the bit pattern &lt;code&gt;10xxxxxx&lt;/code&gt;, then a &lt;code&gt;UTFDataFormatException&lt;/code&gt; is thrown. Otherwise, the group is converted to the character:</source>
          <target state="translated">グループの最初のバイトがビットパターン &lt;code&gt;110xxxxx&lt;/code&gt; と一致する場合、グループはそのバイト &lt;code&gt;a&lt;/code&gt; と2番目のバイト &lt;code&gt;b&lt;/code&gt; で構成されます。何のバイトが存在しない場合には &lt;code&gt;b&lt;/code&gt; （バイトので、 &lt;code&gt;a&lt;/code&gt; が読み込み可能なバイトの最後だった）バイトの場合、または &lt;code&gt;b&lt;/code&gt; がビットパターンと一致しない &lt;code&gt;10xxxxxx&lt;/code&gt; にし、そして &lt;code&gt;UTFDataFormatException&lt;/code&gt; スローされます。それ以外の場合、グループは文字に変換されます。</target>
        </trans-unit>
        <trans-unit id="d0e5e1a187c24e47368e1814e48c4f2e5999e848" translate="yes" xml:space="preserve">
          <source>If the first byte of a group matches the bit pattern &lt;code&gt;1110xxxx&lt;/code&gt;, then the group consists of that byte &lt;code&gt;a&lt;/code&gt; and two more bytes &lt;code&gt;b&lt;/code&gt; and &lt;code&gt;c&lt;/code&gt;. If there is no byte &lt;code&gt;c&lt;/code&gt; (because byte &lt;code&gt;a&lt;/code&gt; was one of the last two of the bytes to be read), or either byte &lt;code&gt;b&lt;/code&gt; or byte &lt;code&gt;c&lt;/code&gt; does not match the bit pattern &lt;code&gt;10xxxxxx&lt;/code&gt;, then a &lt;code&gt;UTFDataFormatException&lt;/code&gt; is thrown. Otherwise, the group is converted to the character:</source>
          <target state="translated">グループの最初のバイトがビットパターン &lt;code&gt;1110xxxx&lt;/code&gt; に一致する場合、グループはそのバイト &lt;code&gt;a&lt;/code&gt; と2つ以上のバイト &lt;code&gt;b&lt;/code&gt; および &lt;code&gt;c&lt;/code&gt; で構成されます。バイト &lt;code&gt;c&lt;/code&gt; がない（バイト &lt;code&gt;a&lt;/code&gt; が読み取られる最後の2 バイトの 1つだったため）、またはバイト &lt;code&gt;b&lt;/code&gt; またはバイト &lt;code&gt;c&lt;/code&gt; がビットパターン &lt;code&gt;10xxxxxx&lt;/code&gt; と一致しない場合、 &lt;code&gt;UTFDataFormatException&lt;/code&gt; がスローされます。それ以外の場合、グループは文字に変換されます。</target>
        </trans-unit>
        <trans-unit id="4b4205a0b70ecc18a1f7d17bb4cefe1ef7847e2c" translate="yes" xml:space="preserve">
          <source>If the first byte of a group matches the pattern &lt;code&gt;1111xxxx&lt;/code&gt; or the pattern &lt;code&gt;10xxxxxx&lt;/code&gt;, then a &lt;code&gt;UTFDataFormatException&lt;/code&gt; is thrown.</source>
          <target state="translated">グループの最初のバイトがパターンと一致した場合 &lt;code&gt;1111xxxx&lt;/code&gt; かパターン &lt;code&gt;10xxxxxx&lt;/code&gt; にし、そして &lt;code&gt;UTFDataFormatException&lt;/code&gt; スローされます。</target>
        </trans-unit>
        <trans-unit id="de12fa584ec591ad89fe529ab99890cef05ff7df" translate="yes" xml:space="preserve">
          <source>If the first character of &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;'/'&lt;/code&gt; (indicating an absolute path name) this preference node's lock is dropped prior to breaking &lt;code&gt;path&lt;/code&gt; into tokens, and this method recursively traverses the path starting from the root (rather than starting from this node). The traversal is otherwise identical to the one described for relative path names. Dropping the lock on this node prior to commencing the traversal at the root node is essential to avoid the possibility of deadlock, as per the &lt;a href=&quot;#lock&quot;&gt;&lt;code&gt;locking invariant&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If the first character of &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;'/'&lt;/code&gt; (indicating an absolute path name) this preference node's lock is dropped prior to breaking &lt;code&gt;path&lt;/code&gt; into tokens, and this method recursively traverses the path starting from the root (rather than starting from this node). The traversal is otherwise identical to the one described for relative path names. Dropping the lock on this node prior to commencing the traversal at the root node is essential to avoid the possibility of deadlock, as per the &lt;a href=&quot;#lock&quot;&gt; &lt;code&gt;locking invariant&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fe4bd2bc924f289ce5e3e243830c506290c8bfa3" translate="yes" xml:space="preserve">
          <source>If the first character of &lt;code&gt;path&lt;/code&gt; is &lt;code&gt;'/'&lt;/code&gt; (indicating an absolute path name) this preference node's lock is dropped prior to breaking &lt;code&gt;path&lt;/code&gt; into tokens, and this method recursively traverses the path starting from the root (rather than starting from this node). The traversal is otherwise identical to the one described for relative path names. Dropping the lock on this node prior to commencing the traversal at the root node is essential to avoid the possibility of deadlock, as per the &lt;a href=&quot;abstractpreferences#lock&quot;&gt;&lt;code&gt;locking invariant&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; の最初の文字が &lt;code&gt;'/'&lt;/code&gt; （絶対パス名を示す）の場合、この設定ノードのロックは &lt;code&gt;path&lt;/code&gt; をトークンに分割する前に削除され、このメソッドは（このノードからではなく）ルートから始まるパスを再帰的にたどります。その他の点では、トラバーサルは相対パス名について説明したものと同じです。ルートノードでトラバーサルを開始する前にこのノードのロックを削除することは、&lt;a href=&quot;abstractpreferences#lock&quot;&gt; &lt;code&gt;locking invariant&lt;/code&gt; &lt;/a&gt;に従ってデッドロックの可能性を回避するために不可欠です。</target>
        </trans-unit>
        <trans-unit id="de6a756f5a999d243dc3d549609d91cce131f2d6" translate="yes" xml:space="preserve">
          <source>If the first letter of the property defined by a getter is a capital, then this handler will look first for an item in the &lt;code&gt;CompositeData&lt;/code&gt; beginning with a capital, then, if that is not found, for an item beginning with the corresponding lowercase letter or code point. For a getter called &lt;code&gt;getNumber()&lt;/code&gt;, the handler will first look for an item called &lt;code&gt;Number&lt;/code&gt;, then for &lt;code&gt;number&lt;/code&gt;. If the getter is called &lt;code&gt;getnumber()&lt;/code&gt;, then the item must be called &lt;code&gt;number&lt;/code&gt;.</source>
          <target state="translated">ゲッターによって定義されたプロパティの最初の文字が大文字である場合、このハンドラーは最初に大文字で始まる &lt;code&gt;CompositeData&lt;/code&gt; 内のアイテムを探し、見つからない場合は対応する小文字で始まるアイテムを探します。コードポイント。 &lt;code&gt;getNumber()&lt;/code&gt; というゲッターの場合、ハンドラーは最初に &lt;code&gt;Number&lt;/code&gt; というアイテムを探し、次に &lt;code&gt;number&lt;/code&gt; を探します。ゲッターが &lt;code&gt;getnumber()&lt;/code&gt; と呼ばれる場合、アイテムは &lt;code&gt;number&lt;/code&gt; と呼ばれる必要があります。</target>
        </trans-unit>
        <trans-unit id="c5b9fdddf990174b0c1bb31fd056338ffdb9f842" translate="yes" xml:space="preserve">
          <source>If the flag argument is &lt;code&gt;false&lt;/code&gt;, then C++-style comments are not treated specially.</source>
          <target state="translated">flag引数が &lt;code&gt;false&lt;/code&gt; の場合、C ++スタイルのコメントは特別に扱われません。</target>
        </trans-unit>
        <trans-unit id="6b755352a37aefb0ddd22fcf4ddac56889ee380f" translate="yes" xml:space="preserve">
          <source>If the flag argument is &lt;code&gt;false&lt;/code&gt;, then C-style comments are not treated specially.</source>
          <target state="translated">flag引数が &lt;code&gt;false&lt;/code&gt; の場合、Cスタイルのコメントは特別に扱われません。</target>
        </trans-unit>
        <trans-unit id="ed5b11ba23b450c90177463610accda7b5ef8311" translate="yes" xml:space="preserve">
          <source>If the flag argument is &lt;code&gt;false&lt;/code&gt;, then the &lt;code&gt;sval&lt;/code&gt; field is not modified.</source>
          <target state="translated">flag引数が &lt;code&gt;false&lt;/code&gt; の場合、 &lt;code&gt;sval&lt;/code&gt; フィールドは変更されません。</target>
        </trans-unit>
        <trans-unit id="a51b936e9c60259867a0c6a0a1415a7006e73bc6" translate="yes" xml:space="preserve">
          <source>If the flag is &lt;code&gt;false&lt;/code&gt;, delimiter characters serve to separate tokens. A token is a maximal sequence of consecutive characters that are not delimiters.</source>
          <target state="translated">フラグが &lt;code&gt;false&lt;/code&gt; の場合、区切り文字はトークンを区切る役割を果たします。トークンは、区切り文字ではない連続した文字の最大のシーケンスです。</target>
        </trans-unit>
        <trans-unit id="243de70bc00db3702139f3dd218555f6b229e223" translate="yes" xml:space="preserve">
          <source>If the flag is &lt;code&gt;true&lt;/code&gt;, delimiter characters are themselves considered to be tokens. A token is thus either one delimiter character, or a maximal sequence of consecutive characters that are not delimiters.</source>
          <target state="translated">フラグが &lt;code&gt;true&lt;/code&gt; の場合、区切り文字自体がトークンと見なされます。したがって、トークンは、1つの区切り文字、または区切り文字ではない連続した文字の最大シーケンスのいずれかです。</target>
        </trans-unit>
        <trans-unit id="b5b0bc25b0d262fecfa18b60166faf5e2347e80f" translate="yes" xml:space="preserve">
          <source>If the flag is set to &lt;code&gt;true&lt;/code&gt;, this text component becomes user editable. If the flag is set to &lt;code&gt;false&lt;/code&gt;, the user cannot change the text of this text component. By default, non-editable text components have a background color of SystemColor.control. This default can be overridden by calling setBackground.</source>
          <target state="translated">If the flag is set to &lt;code&gt;true&lt;/code&gt; , this text component becomes user editable. If the flag is set to &lt;code&gt;false&lt;/code&gt; , the user cannot change the text of this text component. By default, non-editable text components have a background color of SystemColor.control. This default can be overridden by calling setBackground.</target>
        </trans-unit>
        <trans-unit id="f57f350c5b50d157976b5f5f9a315e16106f5450" translate="yes" xml:space="preserve">
          <source>If the focused Window is a Frame or a Dialog it is also the active Window. Otherwise, the active Window is the first Frame or Dialog that is an owner of the focused Window.</source>
          <target state="translated">フォーカスされたウィンドウがフレームかダイアログの場合は、 それがアクティブウィンドウにもなります。それ以外の場合は、 フォーカスされたウィンドウの所有者である最初のフレームまたはダイアログがアクティブウィンドウとなります。</target>
        </trans-unit>
        <trans-unit id="56c6279667d7868f05ad4fddd3dde243109f6834" translate="yes" xml:space="preserve">
          <source>If the font is &lt;code&gt;null&lt;/code&gt; or a &lt;code&gt;UIResource&lt;/code&gt;, the defaults table is queried with the key &lt;code&gt;fontKey&lt;/code&gt;. All of &lt;code&gt;UIDefault's&lt;/code&gt; get methods throw a &lt;code&gt;
 NullPointerException&lt;/code&gt; if passed in &lt;code&gt;null&lt;/code&gt;. As such, unless otherwise noted each of the various install methods of &lt;code&gt;
 LookAndFeel&lt;/code&gt; throw a &lt;code&gt;NullPointerException&lt;/code&gt; if the current value is &lt;code&gt;null&lt;/code&gt; or a &lt;code&gt;UIResource&lt;/code&gt; and the supplied defaults key is &lt;code&gt;null&lt;/code&gt;. In addition, unless otherwise specified all of the &lt;code&gt;install&lt;/code&gt; methods throw a &lt;code&gt;NullPointerException&lt;/code&gt; if a &lt;code&gt;null&lt;/code&gt; component is passed in.</source>
          <target state="translated">If the font is &lt;code&gt;null&lt;/code&gt; or a &lt;code&gt;UIResource&lt;/code&gt; , the defaults table is queried with the key &lt;code&gt;fontKey&lt;/code&gt; . All of &lt;code&gt;UIDefault's&lt;/code&gt; get methods throw a &lt;code&gt; NullPointerException&lt;/code&gt; if passed in &lt;code&gt;null&lt;/code&gt; . As such, unless otherwise noted each of the various install methods of &lt;code&gt; LookAndFeel&lt;/code&gt; throw a &lt;code&gt;NullPointerException&lt;/code&gt; if the current value is &lt;code&gt;null&lt;/code&gt; or a &lt;code&gt;UIResource&lt;/code&gt; and the supplied defaults key is &lt;code&gt;null&lt;/code&gt; . In addition, unless otherwise specified all of the &lt;code&gt;install&lt;/code&gt; methods throw a &lt;code&gt;NullPointerException&lt;/code&gt; if a &lt;code&gt;null&lt;/code&gt; component is passed in.</target>
        </trans-unit>
        <trans-unit id="f77a5cbbfc5e7d2a5c0ad6a18e49115f1c49efaa" translate="yes" xml:space="preserve">
          <source>If the format of an argument loses information, such as with a choice format where a large number formats to &quot;many&quot;.</source>
          <target state="translated">引数のフォーマットが情報を失った場合、例えば選択肢のフォーマットで大きな数が &quot;多数 &quot;にフォーマットされているような場合。</target>
        </trans-unit>
        <trans-unit id="0dcd3261c6e6bc40c628cfcd3ed02c38b9a8ba09" translate="yes" xml:space="preserve">
          <source>If the format specifier contains a width or precision with an invalid value or which is otherwise unsupported, then a &lt;a href=&quot;illegalformatwidthexception&quot;&gt;&lt;code&gt;IllegalFormatWidthException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;illegalformatprecisionexception&quot;&gt;&lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt;&lt;/a&gt; respectively will be thrown.</source>
          <target state="translated">形式指定子に無効な値の幅または精度が含まれている場合、またはサポートされていない場合は、それぞれ&lt;a href=&quot;illegalformatwidthexception&quot;&gt; &lt;code&gt;IllegalFormatWidthException&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;illegalformatprecisionexception&quot;&gt; &lt;code&gt;IllegalFormatPrecisionException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="23d86bd64d57a83827a905eb3f62752e01b0a38e" translate="yes" xml:space="preserve">
          <source>If the formatter parses the same field more than once with different values, the result will be an error.</source>
          <target state="translated">フォーマッタが同じフィールドを異なる値で複数回パースした場合、結果はエラーになります。</target>
        </trans-unit>
        <trans-unit id="db3731fc2aa4a3e087228df78b6ed03888b9aa5c" translate="yes" xml:space="preserve">
          <source>If the function returns &lt;code&gt;null&lt;/code&gt; no mapping is recorded. If the function itself throws an (unchecked) exception, the exception is rethrown, and no mapping is recorded. The most common usage is to construct a new object serving as an initial mapped value or memoized result, as in:</source>
          <target state="translated">関数が &lt;code&gt;null&lt;/code&gt; を返す場合、マッピングは記録されません。関数自体が（チェックされていない）例外をスローした場合、その例外は再スローされ、マッピングは記録されません。最も一般的な使用法は、次のように、マップされた初期値またはメモ化された結果として機能する新しいオブジェクトを作成することです。</target>
        </trans-unit>
        <trans-unit id="144af7e618eb46c9529d1d33c26d53810f2167da" translate="yes" xml:space="preserve">
          <source>If the function returns &lt;code&gt;null&lt;/code&gt; the mapping is removed. If the function itself throws an (unchecked) exception, the exception is rethrown, and the current mapping is left unchanged.</source>
          <target state="translated">関数が &lt;code&gt;null&lt;/code&gt; を返す場合、マッピングは削除されます。関数自体が（チェックされていない）例外をスローすると、例外が再スローされ、現在のマッピングは変更されません。</target>
        </trans-unit>
        <trans-unit id="26f473bb6caf3da04b1285866c6a28b1b984ef5f" translate="yes" xml:space="preserve">
          <source>If the function returns &lt;code&gt;null&lt;/code&gt;, the mapping is removed (or remains absent if initially absent). If the function itself throws an (unchecked) exception, the exception is rethrown, and the current mapping is left unchanged.</source>
          <target state="translated">関数が &lt;code&gt;null&lt;/code&gt; を返す場合、マッピングは削除されます（または最初に存在しない場合は存在しません）。関数自体が（チェックされていない）例外をスローすると、例外が再スローされ、現在のマッピングは変更されません。</target>
        </trans-unit>
        <trans-unit id="91e50d7000baf56cbe84741a636dedc280c25287" translate="yes" xml:space="preserve">
          <source>If the function returns &lt;code&gt;null&lt;/code&gt;, the mapping is removed. If the function itself throws an (unchecked) exception, the exception is rethrown, and the current mapping is left unchanged.</source>
          <target state="translated">関数が &lt;code&gt;null&lt;/code&gt; を返す場合、マッピングは削除されます。関数自体が（チェックされていない）例外をスローすると、例外が再スローされ、現在のマッピングは変更されません。</target>
        </trans-unit>
        <trans-unit id="926782c512e4f063b419e0421193c8c7a7433138" translate="yes" xml:space="preserve">
          <source>If the function succeeds, instrument &lt;code&gt;from&lt;/code&gt; is unloaded.</source>
          <target state="translated">関数が成功すると、計測器 &lt;code&gt;from&lt;/code&gt; がアンロードされます。</target>
        </trans-unit>
        <trans-unit id="253e6025d142f63cd0c731b35e5e54635921bd1e" translate="yes" xml:space="preserve">
          <source>If the function to map a module name to class loader throws an error or runtime exception then it is propagated to the caller of this method.</source>
          <target state="translated">モジュール名をクラス・ローダにマッピングする関数がエラーや実行時例外をスローした場合は、それがこのメソッドの呼び出し元に伝搬されます。</target>
        </trans-unit>
        <trans-unit id="32a91e07ee88bec0b9954a59c4de099b9aa8f328" translate="yes" xml:space="preserve">
          <source>If the garbage collector determines at a certain point in time that the referent of a phantom reference is &lt;a href=&quot;package-summary#reachability&quot;&gt;phantom reachable&lt;/a&gt;, then at that time or at some later time it will enqueue the reference.</source>
          <target state="translated">ガベージコレクターが特定の時点でファントム参照の&lt;a href=&quot;package-summary#reachability&quot;&gt;リファレント&lt;/a&gt;がファントム到達可能であると判断した場合、その時点または後で、参照をエンキューします。</target>
        </trans-unit>
        <trans-unit id="53adf0e26e84566de9caa7cabb62afdabd38f865" translate="yes" xml:space="preserve">
          <source>If the gauge difference mode is used, the value of the derived gauge is calculated as the difference between the observed gauge values for two successive observations.</source>
          <target state="translated">ゲージ差モードが使用されている場合、派生ゲージの値は、2つの連続した観測のための観測されたゲージ値の差として計算されます。</target>
        </trans-unit>
        <trans-unit id="f36edc06d9e8ab3918e6499129015f8c141e7e54" translate="yes" xml:space="preserve">
          <source>If the generator function throws an exception, an unchecked exception is thrown from &lt;code&gt;parallelSetAll&lt;/code&gt; and the array is left in an indeterminate state.</source>
          <target state="translated">ジェネレーター関数が例外をスローすると、チェックされていない例外が &lt;code&gt;parallelSetAll&lt;/code&gt; からスローされ、配列は不確定な状態のままになります。</target>
        </trans-unit>
        <trans-unit id="9d8173ed15e9b7709fd7094f05762f38b139637d" translate="yes" xml:space="preserve">
          <source>If the generator function throws an exception, it is relayed to the caller and the array is left in an indeterminate state.</source>
          <target state="translated">ジェネレータ関数が例外を発生させた場合、それは呼び出し元に中継され、配列は不確定な状態のままになります。</target>
        </trans-unit>
        <trans-unit id="76782efd69d7292ec1741cf01ee5b2215277c044" translate="yes" xml:space="preserve">
          <source>If the given &lt;code&gt;CompositeData&lt;/code&gt; does not contain this attribute, This attribute will be set to &lt;a href=&quot;../../../../java.base/java/lang/thread#NORM_PRIORITY&quot;&gt;&lt;code&gt;Thread.NORM_PRIORITY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If the given &lt;code&gt;CompositeData&lt;/code&gt; does not contain this attribute, This attribute will be set to &lt;a href=&quot;../../../../java.base/java/lang/thread#NORM_PRIORITY&quot;&gt; &lt;code&gt;Thread.NORM_PRIORITY&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0a37afbef057d6ba837b305b1cd9bad125d8e146" translate="yes" xml:space="preserve">
          <source>If the given &lt;code&gt;CompositeData&lt;/code&gt; does not contain this attribute, the &lt;code&gt;LockInfo&lt;/code&gt; object will be constructed from the value of the &lt;code&gt;lockName&lt;/code&gt; attribute.</source>
          <target state="translated">If the given &lt;code&gt;CompositeData&lt;/code&gt; does not contain this attribute, the &lt;code&gt;LockInfo&lt;/code&gt; object will be constructed from the value of the &lt;code&gt;lockName&lt;/code&gt; attribute.</target>
        </trans-unit>
        <trans-unit id="e232e6d08b2921ecd51a0928548c7d20fb389fec" translate="yes" xml:space="preserve">
          <source>If the given &lt;code&gt;CompositeData&lt;/code&gt; does not contain this attribute, this attribute will be set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">If the given &lt;code&gt;CompositeData&lt;/code&gt; does not contain this attribute, this attribute will be set to &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1400b3eda5d304390a2540e7c1391b9930fe93a9" translate="yes" xml:space="preserve">
          <source>If the given &lt;code&gt;CompositeData&lt;/code&gt; does not contain this attribute, this attribute will be set to an empty array.</source>
          <target state="translated">If the given &lt;code&gt;CompositeData&lt;/code&gt; does not contain this attribute, this attribute will be set to an empty array.</target>
        </trans-unit>
        <trans-unit id="0db7828d6899e244beb39f64663230573a2ea5f3" translate="yes" xml:space="preserve">
          <source>If the given &lt;code&gt;ProtectionDomain&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then a default protection domain will be assigned to the class as specified in the documentation for &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;defineClass(String, byte[], int, int)&lt;/code&gt;&lt;/a&gt;. Before the class can be used it must be resolved.</source>
          <target state="translated">If the given &lt;code&gt;ProtectionDomain&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; , then a default protection domain will be assigned to the class as specified in the documentation for &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;defineClass(String, byte[], int, int)&lt;/code&gt; &lt;/a&gt;. Before the class can be used it must be resolved.</target>
        </trans-unit>
        <trans-unit id="0f34fbb4cfa40d33b09699390aae3ac53e8ab2c4" translate="yes" xml:space="preserve">
          <source>If the given &lt;code&gt;instant&lt;/code&gt; represents a point on the time-line too far in the future or past to fit in a &lt;code&gt;long&lt;/code&gt; milliseconds and nanoseconds adjustment, then an &lt;code&gt;ArithmeticException&lt;/code&gt; will be thrown.</source>
          <target state="translated">If the given &lt;code&gt;instant&lt;/code&gt; represents a point on the time-line too far in the future or past to fit in a &lt;code&gt;long&lt;/code&gt; milliseconds and nanoseconds adjustment, then an &lt;code&gt;ArithmeticException&lt;/code&gt; will be thrown.</target>
        </trans-unit>
        <trans-unit id="15c5a383f51c24f8825b786eaae7ec8e4fc3e1be" translate="yes" xml:space="preserve">
          <source>If the given &lt;code&gt;module&lt;/code&gt; is an unnamed module, then this method is equivalent to calling &lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;getBundle(baseName, targetLocale, module.getClassLoader()&lt;/code&gt;&lt;/a&gt; to load resource bundles that are visible to the class loader of the given unnamed module. Custom &lt;a href=&quot;spi/resourcebundlecontrolprovider&quot;&gt;&lt;code&gt;ResourceBundleControlProvider&lt;/code&gt;&lt;/a&gt; implementations, if present, will only be invoked if the specified module is an unnamed module.</source>
          <target state="translated">If the given &lt;code&gt;module&lt;/code&gt; is an unnamed module, then this method is equivalent to calling &lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;getBundle(baseName, targetLocale, module.getClassLoader()&lt;/code&gt; &lt;/a&gt; to load resource bundles that are visible to the class loader of the given unnamed module. Custom &lt;a href=&quot;spi/resourcebundlecontrolprovider&quot;&gt; &lt;code&gt;ResourceBundleControlProvider&lt;/code&gt; &lt;/a&gt; implementations, if present, will only be invoked if the specified module is an unnamed module.</target>
        </trans-unit>
        <trans-unit id="0e16e73e1c388c5bcfaf11ed9189d8791a0ccfd7" translate="yes" xml:space="preserve">
          <source>If the given &lt;var&gt;inModelMBeanInfo&lt;/var&gt; does not contain any &lt;a href=&quot;modelmbeannotificationinfo&quot;&gt;&lt;code&gt;ModelMBeanNotificationInfo&lt;/code&gt;&lt;/a&gt; for the &lt;code&gt;GENERIC&lt;/code&gt; or &lt;code&gt;ATTRIBUTE_CHANGE&lt;/code&gt; notifications, then the RequiredModelMBean will supply its own default &lt;a href=&quot;modelmbeannotificationinfo&quot;&gt;&lt;code&gt;ModelMBeanNotificationInfo&lt;/code&gt;&lt;/a&gt;s for those missing notifications.</source>
          <target state="translated">指定された &lt;var&gt;inModelMBeanInfo&lt;/var&gt; に &lt;code&gt;GENERIC&lt;/code&gt; または &lt;code&gt;ATTRIBUTE_CHANGE&lt;/code&gt; 通知の&lt;a href=&quot;modelmbeannotificationinfo&quot;&gt; &lt;code&gt;ModelMBeanNotificationInfo&lt;/code&gt; &lt;/a&gt;が含まれていない場合、RequiredModelMBeanは&lt;a href=&quot;modelmbeannotificationinfo&quot;&gt; &lt;code&gt;ModelMBeanNotificationInfo&lt;/code&gt; &lt;/a&gt;の欠落した通知に独自のデフォルトModelMBeanNotificationInfoを提供します。</target>
        </trans-unit>
        <trans-unit id="cf86ec019e6dc9802020d9a480bb2d423505a7f3" translate="yes" xml:space="preserve">
          <source>If the given Collection is an &lt;a href=&quot;#unmodifiable&quot;&gt;unmodifiable List&lt;/a&gt;, calling copyOf will generally not create a copy.</source>
          <target state="translated">If the given Collection is an &lt;a href=&quot;#unmodifiable&quot;&gt;unmodifiable List&lt;/a&gt;, calling copyOf will generally not create a copy.</target>
        </trans-unit>
        <trans-unit id="f10d628399ffa67f965f7a348c67ac7f2b5b2030" translate="yes" xml:space="preserve">
          <source>If the given Collection is an &lt;a href=&quot;#unmodifiable&quot;&gt;unmodifiable Set&lt;/a&gt;, calling copyOf will generally not create a copy.</source>
          <target state="translated">If the given Collection is an &lt;a href=&quot;#unmodifiable&quot;&gt;unmodifiable Set&lt;/a&gt;, calling copyOf will generally not create a copy.</target>
        </trans-unit>
        <trans-unit id="d42f41fcf7ca04751155bf461b15402f39209e6a" translate="yes" xml:space="preserve">
          <source>If the given Map is an &lt;a href=&quot;#unmodifiable&quot;&gt;unmodifiable Map&lt;/a&gt;, calling copyOf will generally not create a copy.</source>
          <target state="translated">If the given Map is an &lt;a href=&quot;#unmodifiable&quot;&gt;unmodifiable Map&lt;/a&gt;, calling copyOf will generally not create a copy.</target>
        </trans-unit>
        <trans-unit id="871cb4309703aec2bc0023c758d9cf428cebc74f" translate="yes" xml:space="preserve">
          <source>If the given URI has an authority component then the new URI's authority and path are taken from the given URI.</source>
          <target state="translated">与えられたURIが権限コンポーネントを持つ場合、新しいURIの権限とパスは 与えられたURIから取得される。</target>
        </trans-unit>
        <trans-unit id="e06d94bd934ab4eadeb7ce0dca1e7e7222d58665" translate="yes" xml:space="preserve">
          <source>If the given URI is already absolute, or if this URI is opaque, then the given URI is returned.</source>
          <target state="translated">与えられたURIがすでに絶対値である場合、またはこのURIが不透明である場合、与えられたURIが返されます。</target>
        </trans-unit>
        <trans-unit id="2430c525f00d8a5ecee224a7a5b81e9aae39e412" translate="yes" xml:space="preserve">
          <source>If the given URI's fragment component is defined, its path component is empty, and its scheme, authority, and query components are undefined, then a URI with the given fragment but with all other components equal to those of this URI is returned. This allows a URI representing a standalone fragment reference, such as &lt;code id=&quot;resolve-frag&quot;&gt;&quot;#foo&quot;&lt;/code&gt;, to be usefully resolved against a base URI.</source>
          <target state="translated">指定されたURIのフラグメントコンポーネントが定義され、そのパスコンポーネントが空で、そのスキーム、権限、およびクエリコンポーネントが定義されていない場合、指定されたフラグメントを持つURIが返されますが、他のすべてのコンポーネントはこのURIと同じです。これにより、 &lt;code id=&quot;resolve-frag&quot;&gt;&quot;#foo&quot;&lt;/code&gt; などのスタンドアロンフラグメント参照を表すURIをベースURIに対して効果的に解決できます。</target>
        </trans-unit>
        <trans-unit id="409ab55de149be7ee7466f039641cd5cdd79e97a" translate="yes" xml:space="preserve">
          <source>If the given URI's fragment component is defined, its path component is empty, and its scheme, authority, and query components are undefined, then a URI with the given fragment but with all other components equal to those of this URI is returned. This allows a URI representing a standalone fragment reference, such as &lt;code&gt;&quot;#foo&quot;&lt;/code&gt;, to be usefully resolved against a base URI.</source>
          <target state="translated">If the given URI's fragment component is defined, its path component is empty, and its scheme, authority, and query components are undefined, then a URI with the given fragment but with all other components equal to those of this URI is returned. This allows a URI representing a standalone fragment reference, such as &lt;code&gt;&quot;#foo&quot;&lt;/code&gt; , to be usefully resolved against a base URI.</target>
        </trans-unit>
        <trans-unit id="c849fb5cce341a58fea462c01a105441e0cc9602" translate="yes" xml:space="preserve">
          <source>If the given URI's path is absolute then the new URI's path is taken from the given URI.</source>
          <target state="translated">与えられたURIのパスが絶対的なものであれば、新しいURIのパスは与えられたURIから取られます。</target>
        </trans-unit>
        <trans-unit id="14f7899ffb21b582de61406576d434576cfac581" translate="yes" xml:space="preserve">
          <source>If the given address includes a JNDI directory URL as specified in the package documentation for &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;javax.management.remote.rmi&lt;/code&gt;&lt;/a&gt;, then this &lt;code&gt;RMIConnectorServer&lt;/code&gt; will bootstrap by binding the &lt;code&gt;RMIServerImpl&lt;/code&gt; to the given address.</source>
          <target state="translated">指定されたアドレスに&lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;javax.management.remote.rmi&lt;/code&gt; &lt;/a&gt;のパッケージドキュメントで指定されているJNDIディレクトリURLが含まれている場合、この &lt;code&gt;RMIConnectorServer&lt;/code&gt; は &lt;code&gt;RMIServerImpl&lt;/code&gt; を指定されたアドレスにバインドしてブートストラップします。</target>
        </trans-unit>
        <trans-unit id="ca814afbdb188e0d8eb604c68dacd59c7bf69539" translate="yes" xml:space="preserve">
          <source>If the given alias already exists, the keystore information associated with it is overridden by the given key (and possibly certificate chain).</source>
          <target state="translated">与えられたエイリアスが既に存在する場合、それに関連付けられた鍵ストア情報は、与えられた鍵(および場合によっては証明書チェーン)によって上書きされます。</target>
        </trans-unit>
        <trans-unit id="3a595a56aadbb88b4114693edc5c1ee01ec9f96d" translate="yes" xml:space="preserve">
          <source>If the given alias identifies an existing entry created by a call to &lt;code&gt;setCertificateEntry&lt;/code&gt;, or created by a call to &lt;code&gt;setEntry&lt;/code&gt; with a &lt;code&gt;TrustedCertificateEntry&lt;/code&gt;, the trusted certificate in the existing entry is overridden by the given certificate.</source>
          <target state="translated">指定された &lt;code&gt;setCertificateEntry&lt;/code&gt; 、setCertificateEntryの呼び出しによって作成された、または &lt;code&gt;TrustedCertificateEntry&lt;/code&gt; を &lt;code&gt;setEntry&lt;/code&gt; したsetEntryの呼び出しによって作成された既存のエントリを識別する場合、既存のエントリの信頼できる証明書は、指定された証明書によってオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="5db25da879a6c8a2469a9ffa221b439cce428d7c" translate="yes" xml:space="preserve">
          <source>If the given alias name identifies an entry created by a call to &lt;code&gt;setCertificateEntry&lt;/code&gt;, or created by a call to &lt;code&gt;setEntry&lt;/code&gt; with a &lt;code&gt;TrustedCertificateEntry&lt;/code&gt;, then the trusted certificate contained in that entry is returned.</source>
          <target state="translated">指定されたエイリアス名が、 &lt;code&gt;setCertificateEntry&lt;/code&gt; の呼び出しによって作成されたエントリ、または &lt;code&gt;TrustedCertificateEntry&lt;/code&gt; を &lt;code&gt;setEntry&lt;/code&gt; したsetEntryの呼び出しによって作成されたエントリを識別する場合、そのエントリに含まれる信頼できる証明書が返されます。</target>
        </trans-unit>
        <trans-unit id="4d4d7d88c3b4df9575339dccffaf79058f1c8930" translate="yes" xml:space="preserve">
          <source>If the given alias name identifies an entry created by a call to &lt;code&gt;setKeyEntry&lt;/code&gt;, or created by a call to &lt;code&gt;setEntry&lt;/code&gt; with a &lt;code&gt;PrivateKeyEntry&lt;/code&gt;, then the first element of the certificate chain in that entry (if a chain exists) is returned.</source>
          <target state="translated">エントリが呼び出しによって作成された指定されたエイリアス名を識別した場合 &lt;code&gt;setKeyEntry&lt;/code&gt; 、または呼び出しによって作成 &lt;code&gt;setEntry&lt;/code&gt; とともに &lt;code&gt;PrivateKeyEntry&lt;/code&gt; 、そのエントリ内の証明書チェーンの最初の要素は、（鎖が存在する場合）が返されます。</target>
        </trans-unit>
        <trans-unit id="c2ed3e7db9906e449ddb9d356b3252474de4e64c" translate="yes" xml:space="preserve">
          <source>If the given alias name identifies an entry created by a call to &lt;code&gt;setKeyEntry&lt;/code&gt;, or created by a call to &lt;code&gt;setEntry&lt;/code&gt; with a &lt;code&gt;PrivateKeyEntry&lt;/code&gt;, then the first element of the certificate chain in that entry is returned.</source>
          <target state="translated">指定されたエイリアス名が &lt;code&gt;setKeyEntry&lt;/code&gt; の呼び出しによって作成されたエントリ、またはPrivateKeyEntryを &lt;code&gt;setEntry&lt;/code&gt; した &lt;code&gt;PrivateKeyEntry&lt;/code&gt; 呼び出しによって作成されたエントリを識別する場合、そのエントリの証明書チェーンの最初の要素が返されます。</target>
        </trans-unit>
        <trans-unit id="80577b628d04d07146a4c8598f72bfad40ed28b3" translate="yes" xml:space="preserve">
          <source>If the given blocking mode is different from the current blocking mode then this method invokes the &lt;a href=&quot;#implConfigureBlocking(boolean)&quot;&gt;&lt;code&gt;implConfigureBlocking&lt;/code&gt;&lt;/a&gt; method, while holding the appropriate locks, in order to change the mode.</source>
          <target state="translated">If the given blocking mode is different from the current blocking mode then this method invokes the &lt;a href=&quot;#implConfigureBlocking(boolean)&quot;&gt; &lt;code&gt;implConfigureBlocking&lt;/code&gt; &lt;/a&gt; method, while holding the appropriate locks, in order to change the mode.</target>
        </trans-unit>
        <trans-unit id="a7044af5535fc0b80bc9e6eb2af416837a93528e" translate="yes" xml:space="preserve">
          <source>If the given blocking mode is different from the current blocking mode then this method invokes the &lt;a href=&quot;abstractselectablechannel#implConfigureBlocking-boolean-&quot;&gt;&lt;code&gt;implConfigureBlocking&lt;/code&gt;&lt;/a&gt; method, while holding the appropriate locks, in order to change the mode.</source>
          <target state="translated">指定されたブロッキングモードが現在のブロッキングモードと異なる場合、このメソッドは、モードを変更するために、適切なロックを保持しながら&lt;a href=&quot;abstractselectablechannel#implConfigureBlocking-boolean-&quot;&gt; &lt;code&gt;implConfigureBlocking&lt;/code&gt; &lt;/a&gt;メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="099ac9d14ce6f3a8c241c4173bc2f3c060d37fae" translate="yes" xml:space="preserve">
          <source>If the given index is outside the list's range of cells, this method results in nothing.</source>
          <target state="translated">与えられたインデックスがリストのセルの範囲外にある場合、このメソッドは何もしません。</target>
        </trans-unit>
        <trans-unit id="ef47fccc5a72a56e061d58ffbc98135bb15f0e3b" translate="yes" xml:space="preserve">
          <source>If the given key is of type &lt;code&gt;java.security.PrivateKey&lt;/code&gt;, it must be accompanied by a certificate chain certifying the corresponding public key.</source>
          <target state="translated">指定された鍵のタイプが &lt;code&gt;java.security.PrivateKey&lt;/code&gt; の場合は、対応する公開鍵を証明する証明書チェーンを伴う必要があります。</target>
        </trans-unit>
        <trans-unit id="fd6f94d655e9cba018e02791b4d2bafeaf0cd16b" translate="yes" xml:space="preserve">
          <source>If the given locale is equal to &lt;code&gt;Locale.ROOT&lt;/code&gt; (the root locale), a &lt;code&gt;List&lt;/code&gt; containing only the root &lt;code&gt;Locale&lt;/code&gt; must be returned. In this case, the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; factory method loads only the base bundle as the resulting resource bundle.</source>
          <target state="translated">指定されたロケールは、に等しい場合 &lt;code&gt;Locale.ROOT&lt;/code&gt; （ルートロケール）、 &lt;code&gt;List&lt;/code&gt; のみルートを含む &lt;code&gt;Locale&lt;/code&gt; 返さなければならないが。この場合、 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; ファクトリメソッドは、ベースバンドルのみを結果のリソースバンドルとしてロードします。</target>
        </trans-unit>
        <trans-unit id="d78ff521c3166afea2224a7e827c542012a19f6e" translate="yes" xml:space="preserve">
          <source>If the given location is either a module oriented location, or an output location containing multiple modules, and no explicit modules prefix is given, a suitable module is inferred. If a suitable module cannot be inferred &lt;a href=&quot;filerexception&quot;&gt;&lt;code&gt;FilerException&lt;/code&gt;&lt;/a&gt; is thrown. An implementation may use information about the configuration of the annotation processing tool as part of the inference.</source>
          <target state="translated">If the given location is either a module oriented location, or an output location containing multiple modules, and no explicit modules prefix is given, a suitable module is inferred. If a suitable module cannot be inferred &lt;a href=&quot;filerexception&quot;&gt; &lt;code&gt;FilerException&lt;/code&gt; &lt;/a&gt; is thrown. An implementation may use information about the configuration of the annotation processing tool as part of the inference.</target>
        </trans-unit>
        <trans-unit id="dd86b458fa6c5cb798c0359d6978ebb6799d62aa" translate="yes" xml:space="preserve">
          <source>If the given location is neither a &lt;a href=&quot;../../tools/javafilemanager.location#isModuleOrientedLocation()&quot;&gt;module oriented location&lt;/a&gt;, nor an &lt;a href=&quot;../../tools/javafilemanager.location#isOutputLocation()&quot;&gt;output location containing multiple modules&lt;/a&gt;, and the explicit module prefix is given, &lt;a href=&quot;filerexception&quot;&gt;&lt;code&gt;FilerException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">If the given location is neither a &lt;a href=&quot;../../tools/javafilemanager.location#isModuleOrientedLocation()&quot;&gt;module oriented location&lt;/a&gt;, nor an &lt;a href=&quot;../../tools/javafilemanager.location#isOutputLocation()&quot;&gt;output location containing multiple modules&lt;/a&gt;, and the explicit module prefix is given, &lt;a href=&quot;filerexception&quot;&gt; &lt;code&gt;FilerException&lt;/code&gt; &lt;/a&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="a722054d6a8a85985b6af9a7f074ff6c9d6c5114" translate="yes" xml:space="preserve">
          <source>If the given method to be invoked, together with the provided signature, matches one of RequiredModelMbean accessible methods, this one will be call. Otherwise the call to the given method will be tried on the managed resource.</source>
          <target state="translated">呼び出される指定されたメソッドが提供されたシグネチャと共に RequiredModelMbean のアクセス可能なメソッドの一つと一致した場合、このメソッドが呼び出されます。そうでなければ、指定されたメソッドの呼び出しは管理されているリソース上で試みられます。</target>
        </trans-unit>
        <trans-unit id="5903b5c68713e17c01106dc0242d392ba3fd13a3" translate="yes" xml:space="preserve">
          <source>If the given modality type is not supported, &lt;code&gt;MODELESS&lt;/code&gt; is used. You may want to call &lt;code&gt;getModalityType()&lt;/code&gt; after calling this method to ensure that the modality type has been set.</source>
          <target state="translated">If the given modality type is not supported, &lt;code&gt;MODELESS&lt;/code&gt; is used. You may want to call &lt;code&gt;getModalityType()&lt;/code&gt; after calling this method to ensure that the modality type has been set.</target>
        </trans-unit>
        <trans-unit id="7cf0a900811cd6f2b34fd3e614d21d91355d860b" translate="yes" xml:space="preserve">
          <source>If the given object is not a &lt;code&gt;ModuleDescriptor&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt;. Two module descriptors are equal if each of their corresponding components is equal.</source>
          <target state="translated">If the given object is not a &lt;code&gt;ModuleDescriptor&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt; . Two module descriptors are equal if each of their corresponding components is equal.</target>
        </trans-unit>
        <trans-unit id="265ee67148fb3d461cae1321c492c06ad8be4305" translate="yes" xml:space="preserve">
          <source>If the given object is not a &lt;code&gt;Provides&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt;. Two &lt;code&gt;Provides&lt;/code&gt; objects are equal if the service type is equal and the list of providers is equal.</source>
          <target state="translated">If the given object is not a &lt;code&gt;Provides&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt; . Two &lt;code&gt;Provides&lt;/code&gt; objects are equal if the service type is equal and the list of providers is equal.</target>
        </trans-unit>
        <trans-unit id="e9dc4b5ba6652e7ccce8cb26463d690c4e101f15" translate="yes" xml:space="preserve">
          <source>If the given object is not a &lt;code&gt;Requires&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt;. Two module dependence objects are equal if the module names are equal, set of modifiers are equal, and the compiled version of both modules is equal or not recorded for both modules.</source>
          <target state="translated">If the given object is not a &lt;code&gt;Requires&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt; . Two module dependence objects are equal if the module names are equal, set of modifiers are equal, and the compiled version of both modules is equal or not recorded for both modules.</target>
        </trans-unit>
        <trans-unit id="087eec123268666bb5ff587f9f3824a68696a44d" translate="yes" xml:space="preserve">
          <source>If the given object is not a &lt;code&gt;ResolvedModule&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt;. Two &lt;code&gt;ResolvedModule&lt;/code&gt; objects are equal if they are in the same configuration and have equal references to the module content.</source>
          <target state="translated">If the given object is not a &lt;code&gt;ResolvedModule&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt; . Two &lt;code&gt;ResolvedModule&lt;/code&gt; objects are equal if they are in the same configuration and have equal references to the module content.</target>
        </trans-unit>
        <trans-unit id="cfd682a1d142327e25c86e6fd36c7f41a2a41ad9" translate="yes" xml:space="preserve">
          <source>If the given object is not a &lt;code&gt;Version&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt;. Two module version are equal if their corresponding components are equal.</source>
          <target state="translated">If the given object is not a &lt;code&gt;Version&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt; . Two module version are equal if their corresponding components are equal.</target>
        </trans-unit>
        <trans-unit id="a79eac791e4b86cfc10aabf01a42570af6907767" translate="yes" xml:space="preserve">
          <source>If the given object is not a Path, or is a Path associated with a different &lt;code&gt;FileSystem&lt;/code&gt;, then this method returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定されたオブジェクトがPathではない場合、または別の &lt;code&gt;FileSystem&lt;/code&gt; に関連付けられているPathである場合、このメソッドは &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ab44b435bce5e6d0dd0d4400904c04dd1b50093c" translate="yes" xml:space="preserve">
          <source>If the given object is not a URI then this method immediately returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定されたオブジェクトがURIでない場合、このメソッドはすぐに &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="dab849a2dfb627f012f49b202b71d39af39c2224" translate="yes" xml:space="preserve">
          <source>If the given object is not a URL then this method immediately returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定されたオブジェクトがURLでない場合、このメソッドはすぐに &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="01a564c21ef594219aeafdbf8732e9a0030e72be" translate="yes" xml:space="preserve">
          <source>If the given object is not a VirtualMachine then this method returns &lt;code&gt;false&lt;/code&gt;. For two VirtualMachines to be considered equal requires that they both reference the same provider, and their &lt;a href=&quot;virtualmachinedescriptor#id()&quot;&gt;&lt;code&gt;identifiers&lt;/code&gt;&lt;/a&gt; are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b305239f4bf84e68ec183969e76e319dbf5445c9" translate="yes" xml:space="preserve">
          <source>If the given object is not a VirtualMachineDescriptor then this method returns &lt;code&gt;false&lt;/code&gt;. For two VirtualMachineDescriptors to be considered equal requires that they both reference the same provider, and their &lt;a href=&quot;#id()&quot;&gt;&lt;code&gt;identifiers&lt;/code&gt;&lt;/a&gt; are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51317f50e868ccac84e6251d8aade86da12219ac" translate="yes" xml:space="preserve">
          <source>If the given object is not an &lt;code&gt;AclEntry&lt;/code&gt; then this method immediately returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定されたオブジェクトが &lt;code&gt;AclEntry&lt;/code&gt; でない場合、このメソッドはすぐに &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="deee112803ae8aa28ebe1e7b06cce4d2e7efea17" translate="yes" xml:space="preserve">
          <source>If the given object is not an &lt;code&gt;Exports&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt;. Two module exports objects are equal if their set of modifiers is equal, the package names are equal and the set of target module names is equal.</source>
          <target state="translated">If the given object is not an &lt;code&gt;Exports&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt; . Two module exports objects are equal if their set of modifiers is equal, the package names are equal and the set of target module names is equal.</target>
        </trans-unit>
        <trans-unit id="ff01ba4aa3f9066a3a4d258504eb98e093cb3dd4" translate="yes" xml:space="preserve">
          <source>If the given object is not an &lt;code&gt;HttpHeaders&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt;. Two HTTP headers are equal if each of their corresponding &lt;a href=&quot;#map()&quot;&gt;maps&lt;/a&gt; are equal.</source>
          <target state="translated">If the given object is not an &lt;code&gt;HttpHeaders&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt; . Two HTTP headers are equal if each of their corresponding &lt;a href=&quot;#map()&quot;&gt;maps&lt;/a&gt; are equal.</target>
        </trans-unit>
        <trans-unit id="2dc78364f9dc2b13b28a620cc038ded7d1559bd8" translate="yes" xml:space="preserve">
          <source>If the given object is not an &lt;code&gt;HttpRequest&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt;. Two HTTP requests are equal if their URI, method, and headers fields are all equal.</source>
          <target state="translated">If the given object is not an &lt;code&gt;HttpRequest&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt; . Two HTTP requests are equal if their URI, method, and headers fields are all equal.</target>
        </trans-unit>
        <trans-unit id="a08bc86883e9dc33f9a3477bb9b5d3ab9ca49cb6" translate="yes" xml:space="preserve">
          <source>If the given object is not an &lt;code&gt;Opens&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt;. Two &lt;code&gt;Opens&lt;/code&gt; objects are equal if their set of modifiers is equal, the package names are equal and the set of target module names is equal.</source>
          <target state="translated">If the given object is not an &lt;code&gt;Opens&lt;/code&gt; then this method returns &lt;code&gt;false&lt;/code&gt; . Two &lt;code&gt;Opens&lt;/code&gt; objects are equal if their set of modifiers is equal, the package names are equal and the set of target module names is equal.</target>
        </trans-unit>
        <trans-unit id="5067d1933a7fb6de041c489427ed9f038cbf2e5d" translate="yes" xml:space="preserve">
          <source>If the given path has &lt;em&gt;N&lt;/em&gt; elements, and no root component, and this path has &lt;em&gt;N&lt;/em&gt; or more elements, then this path ends with the given path if the last &lt;em&gt;N&lt;/em&gt; elements of each path, starting at the element farthest from the root, are equal.</source>
          <target state="translated">指定されたパスに&lt;em&gt;N個の&lt;/em&gt;要素があり、ルートコンポーネントがなく、このパスに&lt;em&gt;N&lt;/em&gt;個以上の要素がある場合、ルートから最も遠い要素から始まる各パスの最後の&lt;em&gt;N個の&lt;/em&gt;要素が等しい場合、このパスは指定されたパスで終了します。 。</target>
        </trans-unit>
        <trans-unit id="fe7eaf75c5ca09e9dc37afa7038d8c228c398461" translate="yes" xml:space="preserve">
          <source>If the given path has a root component then this path ends with the given path if the root component of this path &lt;em&gt;ends with&lt;/em&gt; the root component of the given path, and the corresponding elements of both paths are equal. Whether or not the root component of this path ends with the root component of the given path is file system specific. If this path does not have a root component and the given path has a root component then this path does not end with the given path.</source>
          <target state="translated">指定されたパスにルートコンポーネントがある場合、このパスのルートコンポーネントが指定されたパスのルートコンポーネントで&lt;em&gt;終了し&lt;/em&gt;、両方のパスの対応する要素が等しい場合、このパス&lt;em&gt;は指定され&lt;/em&gt;たパスで&lt;em&gt;終了し&lt;/em&gt;ます。このパスのルートコンポーネントが特定のパスのルートコンポーネントで終わるかどうかは、ファイルシステム固有です。このパスにルートコンポーネントがなく、指定されたパスにルートコンポーネントがある場合、このパスは指定されたパスで終了しません。</target>
        </trans-unit>
        <trans-unit id="6fdc1f0bd8bdd66110dc3f031d4817dcf3caed63" translate="yes" xml:space="preserve">
          <source>If the given path is associated with a different &lt;code&gt;FileSystem&lt;/code&gt; to this path then &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="translated">指定されたパスがこのパスとは異なる &lt;code&gt;FileSystem&lt;/code&gt; に関連付けられている場合、 &lt;code&gt;false&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="4b2bf60e5452de4ddf9870cafed442c49431cf97" translate="yes" xml:space="preserve">
          <source>If the given provider is installed at the requested position, the provider that used to be at that position, and all providers with a position greater than &lt;code&gt;position&lt;/code&gt;, are shifted up one position (towards the end of the list of installed providers).</source>
          <target state="translated">所与のプロバイダが要求された位置に設置されている場合、その位置にあることを使用者、およびより大きな位置を有するすべてのプロバイダ &lt;code&gt;position&lt;/code&gt; 、（インストールされているプロバイダのリストの終わりに向かって）一つの位置をシフトアップされます。</target>
        </trans-unit>
        <trans-unit id="0348730345bae0d2545ea8b21da48cf025a26fbe" translate="yes" xml:space="preserve">
          <source>If the given row number is negative, the cursor moves to an absolute row position with respect to the end of the result set. For example, calling the method &lt;code&gt;absolute(-1)&lt;/code&gt; positions the cursor on the last row; calling the method &lt;code&gt;absolute(-2)&lt;/code&gt; moves the cursor to the next-to-last row, and so on.</source>
          <target state="translated">If the given row number is negative, the cursor moves to an absolute row position with respect to the end of the result set. For example, calling the method &lt;code&gt;absolute(-1)&lt;/code&gt; positions the cursor on the last row; calling the method &lt;code&gt;absolute(-2)&lt;/code&gt; moves the cursor to the next-to-last row, and so on.</target>
        </trans-unit>
        <trans-unit id="ebbca2e71ca391fdcf53f907a578f53411598fa7" translate="yes" xml:space="preserve">
          <source>If the given runnable attempts to make any mutations in this implementation, a deadlock will occur. There is no tracking of individual rendering threads to enable detecting this situation, but a subclass could incur the overhead of tracking them and throwing an error.</source>
          <target state="translated">与えられたランナブルがこの実装で何らかの変異を行おうとすると、デッドロックが発生します。この状況を検出するための個々のレンダリングスレッドのトラッキングはありませんが、サブクラスがそれらをトラッキングしてエラーを投げるというオーバーヘッドが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="be7b3561a355e78f18cdeae419abf0ee5e2ea933" translate="yes" xml:space="preserve">
          <source>If the given size is less than the current size then the entity is truncated, discarding any bytes beyond the new end. If the given size is greater than or equal to the current size then the entity is not modified. In either case, if the current position is greater than the given size then it is set to that size.</source>
          <target state="translated">指定されたサイズが現在のサイズ以下の場合、エンティティは切り捨てられ、新しい終端を超えたバイトは破棄されます。指定されたサイズが現在のサイズ以上の場合は、実体は変更されません。いずれの場合も、現在の位置が指定されたサイズよりも大きい場合は、そのサイズに設定されます。</target>
        </trans-unit>
        <trans-unit id="aaefbc3d9c612129c52e3733260c322198b61ac6" translate="yes" xml:space="preserve">
          <source>If the given size is less than the file's current size then the file is truncated, discarding any bytes beyond the new end of the file. If the given size is greater than or equal to the file's current size then the file is not modified.</source>
          <target state="translated">指定されたサイズがファイルの現在のサイズ以下の場合、ファイルは切り捨てられ、ファイルの新しい終端を超えたバイトは破棄されます。指定されたサイズがファイルの現在のサイズ以上の場合は、ファイルは変更されません。</target>
        </trans-unit>
        <trans-unit id="87ded65bf156680a79571d8a9d909a68f908630c" translate="yes" xml:space="preserve">
          <source>If the given size is less than the file's current size then the file is truncated, discarding any bytes beyond the new end of the file. If the given size is greater than or equal to the file's current size then the file is not modified. In either case, if this channel's file position is greater than the given size then it is set to that size.</source>
          <target state="translated">指定されたサイズがファイルの現在のサイズ以下の場合、ファイルは切り捨てられ、ファイルの新しい終端を超えたバイトは破棄されます。指定されたサイズがファイルの現在のサイズ以上の場合、ファイルは変更されません。いずれの場合も、このチャンネルのファイル位置が指定されたサイズよりも大きい場合は、そのサイズに設定されます。</target>
        </trans-unit>
        <trans-unit id="7dd1419e3ad877e5832a2e55c7efd5daa5e8f3e6" translate="yes" xml:space="preserve">
          <source>If the given type is not supported, &lt;code&gt;NO_EXCLUDE&lt;/code&gt; is used.</source>
          <target state="translated">If the given type is not supported, &lt;code&gt;NO_EXCLUDE&lt;/code&gt; is used.</target>
        </trans-unit>
        <trans-unit id="ee541dacfad38286ca16f7b64502c1de0394dbf6" translate="yes" xml:space="preserve">
          <source>If the gradient and graphics rendering transforms are uniformly scaled and the user sets the focus so that it coincides with the center of the circle, the gradient color proportions are equal for any line drawn from the center. The following figure shows the distances AB, BC, AD, and DE. They are all equal.</source>
          <target state="translated">グラデーションとグラフィックレンダリングの変換が一様にスケールされ、ユーザーが円の中心に一致するようにフォーカスを設定した場合、中心から引かれたどの線に対してもグラデーションの色の割合は等しくなります。次の図は距離AB、BC、AD、DEを示しています。これらはすべて等しくなっています。</target>
        </trans-unit>
        <trans-unit id="0dd273a96dc30568917e48986c0b9215f521962c" translate="yes" xml:space="preserve">
          <source>If the gradient is acyclic then points on the P1 side of the segment have the constant &lt;code&gt;Color&lt;/code&gt; C1 while points on the P2 side have the constant &lt;code&gt;Color&lt;/code&gt; C2.</source>
          <target state="translated">If the gradient is acyclic then points on the P1 side of the segment have the constant &lt;code&gt;Color&lt;/code&gt; C1 while points on the P2 side have the constant &lt;code&gt;Color&lt;/code&gt; C2.</target>
        </trans-unit>
        <trans-unit id="896c9bfd563344965e7bce74bae30d109938cbeb" translate="yes" xml:space="preserve">
          <source>If the gradient is cyclic then the points on the extended P1, P2 connecting line cycle back and forth between the colors C1 and C2.</source>
          <target state="translated">グラデーションが周期的なものであれば、拡張された P1,P2 の接続線上の点は、色 C1 と C2 の間を行ったり来たりします。</target>
        </trans-unit>
        <trans-unit id="677a4e88376df9d9470bda35c5236fc7e5c9051a" translate="yes" xml:space="preserve">
          <source>If the group class name specified in the &lt;code&gt;ActivationGroupDesc&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then this method will behave as if the group descriptor contained the name of the default activation group implementation class.</source>
          <target state="translated">If the group class name specified in the &lt;code&gt;ActivationGroupDesc&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; , then this method will behave as if the group descriptor contained the name of the default activation group implementation class.</target>
        </trans-unit>
        <trans-unit id="f0b0bf2a45ec36e583f47ca33513286c575ec604" translate="yes" xml:space="preserve">
          <source>If the handler is not null and there is a security manager, the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;NetPermission(&quot;specifyStreamHandler&quot;)&lt;/code&gt; permission. This may result in a SecurityException. No validation of the inputs is performed by this constructor.</source>
          <target state="translated">ハンドラーがnullではなく、セキュリティマネージャーが存在する場合、セキュリティマネージャーの &lt;code&gt;checkPermission&lt;/code&gt; メソッドは、 &lt;code&gt;NetPermission(&quot;specifyStreamHandler&quot;)&lt;/code&gt; 権限で呼び出されます。これにより、SecurityExceptionが発生する場合があります。このコンストラクタでは、入力の検証は行われません。</target>
        </trans-unit>
        <trans-unit id="cd5ef3ee310fe9a2a0784c9212a810e58ed3a94b" translate="yes" xml:space="preserve">
          <source>If the history buffer is then rolled back (i.e. the last UndoableEdit undone), a DocumentEvent is sent to both views, causing both of them to reflect the undone mutation to the document (that is, the removal of the right component's mutation). If the history buffer again rolls back another change, another DocumentEvent is sent to both views, causing them to reflect the undone mutation to the document -- that is, the removal of the left component's mutation.</source>
          <target state="translated">履歴バッファがロールバックされると(つまり、最後に取り消した UndoableEdit)、DocumentEvent が両方のビューに送信され、両方のビューが取り消した突然変異をドキュメントに反映させます(つまり、右のコンポーネントの突然変異の削除)。履歴バッファが再び別の変更をロールバックすると、別の DocumentEvent が両方のビューに送られ、元に戻された突然変異をドキュメントに反映させます --つまり、左コンポーネントの突然変異の削除です。</target>
        </trans-unit>
        <trans-unit id="a7b208411b1f838553bd26f17a98bd6ecf12f387" translate="yes" xml:space="preserve">
          <source>If the host is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;host.length()&lt;/code&gt; is equal to zero, then an &lt;code&gt;InetAddress&lt;/code&gt; representing an address of the loopback interface is returned. See &lt;a href=&quot;http://www.ietf.org/rfc/rfc3330.txt&quot;&gt;RFC 3330&lt;/a&gt; section 2 and &lt;a href=&quot;http://www.ietf.org/rfc/rfc2373.txt&quot;&gt;RFC 2373&lt;/a&gt; section 2.5.3.</source>
          <target state="translated">If the host is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;host.length()&lt;/code&gt; is equal to zero, then an &lt;code&gt;InetAddress&lt;/code&gt; representing an address of the loopback interface is returned. See &lt;a href=&quot;http://www.ietf.org/rfc/rfc3330.txt&quot;&gt;RFC 3330&lt;/a&gt; section 2 and &lt;a href=&quot;http://www.ietf.org/rfc/rfc2373.txt&quot;&gt;RFC 2373&lt;/a&gt; section 2.5.3.</target>
        </trans-unit>
        <trans-unit id="17f223f38d5244a08362b498762d26000fb8d528" translate="yes" xml:space="preserve">
          <source>If the host is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;host.length()&lt;/code&gt; is equal to zero, then an &lt;code&gt;InetAddress&lt;/code&gt; representing an address of the loopback interface is returned. See &lt;a href=&quot;https://www.ietf.org/rfc/rfc3330.txt&quot;&gt;RFC 3330&lt;/a&gt; section 2 and &lt;a href=&quot;https://www.ietf.org/rfc/rfc2373.txt&quot;&gt;RFC 2373&lt;/a&gt; section 2.5.3.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82294cea404b457d7895b5f7849b8f8cdabef00b" translate="yes" xml:space="preserve">
          <source>If the host is &lt;code&gt;null&lt;/code&gt; then an &lt;code&gt;InetAddress&lt;/code&gt; representing an address of the loopback interface is returned. See &lt;a href=&quot;http://www.ietf.org/rfc/rfc3330.txt&quot;&gt;RFC 3330&lt;/a&gt; section 2 and &lt;a href=&quot;http://www.ietf.org/rfc/rfc2373.txt&quot;&gt;RFC 2373&lt;/a&gt; section 2.5.3.</source>
          <target state="translated">ホストの場合 &lt;code&gt;null&lt;/code&gt; 、その後 &lt;code&gt;InetAddress&lt;/code&gt; のループバックインタフェースのアドレスを表すが返されます。&lt;a href=&quot;http://www.ietf.org/rfc/rfc3330.txt&quot;&gt;RFC 3330&lt;/a&gt;セクション2および&lt;a href=&quot;http://www.ietf.org/rfc/rfc2373.txt&quot;&gt;RFC 2373&lt;/a&gt;セクション2.5.3を参照してください。</target>
        </trans-unit>
        <trans-unit id="13f82f51386e3d3d93037591572aea8cb88f6868" translate="yes" xml:space="preserve">
          <source>If the icon doesn't load, the border area is painted gray.</source>
          <target state="translated">アイコンが読み込まれない場合は、境界部分が灰色に塗られます。</target>
        </trans-unit>
        <trans-unit id="9c743eca5b6b4b9d617040308e1ee27a4b7c6393" translate="yes" xml:space="preserve">
          <source>If the identity is marked as &quot;trusted&quot;, this allows an attacker to introduce a different public key (e.g., its own) that is not trusted by the system's identity scope, thereby granting applet or application code signed with that public key privileges that would have been denied otherwise.</source>
          <target state="translated">ID が「信頼済み」とマークされている場合、これにより攻撃者は、システムの ID スコープで信頼されていない別の公開鍵 (自分自身のものなど)を導入することができ、その公開鍵で署名されたアプレットやアプリケーションコードに、そうでなければ拒否されてしまうような特権を付与することができます。</target>
        </trans-unit>
        <trans-unit id="75b8821b16ad8c4bce7f71ae9f2499e34e968953" translate="yes" xml:space="preserve">
          <source>If the image can be rendered to a user-specified size, then this method returns the default height.</source>
          <target state="translated">画像をユーザーが指定したサイズでレンダリングできる場合、このメソッドはデフォルトの高さを返します。</target>
        </trans-unit>
        <trans-unit id="d4a58cc703a9db33b11b3faf9dca4d8e83b20a1f" translate="yes" xml:space="preserve">
          <source>If the image can be rendered to a user-specified size, then this method returns the default width.</source>
          <target state="translated">画像をユーザーが指定したサイズでレンダリングできる場合、このメソッドはデフォルトの幅を返します。</target>
        </trans-unit>
        <trans-unit id="38702f2cc1d6bfec3cbebca538696adacba267f7" translate="yes" xml:space="preserve">
          <source>If the image has completely loaded and its pixels are no longer being changed, then &lt;code&gt;drawImage&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. Otherwise, &lt;code&gt;drawImage&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; and as more of the image becomes available or it is time to draw another frame of animation, the process that loads the image notifies the specified image observer.</source>
          <target state="translated">If the image has completely loaded and its pixels are no longer being changed, then &lt;code&gt;drawImage&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; . Otherwise, &lt;code&gt;drawImage&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt; and as more of the image becomes available or it is time to draw another frame of animation, the process that loads the image notifies the specified image observer.</target>
        </trans-unit>
        <trans-unit id="a0b05514b8f5d731608326b087f332a040bf4271" translate="yes" xml:space="preserve">
          <source>If the image is able to be rendered at an arbitrary size, sets the source width and height to the supplied values.</source>
          <target state="translated">画像を任意のサイズでレンダリングできる場合は、ソースの幅と高さを与えられた値に設定します。</target>
        </trans-unit>
        <trans-unit id="1e4e52ec311e9e75dd4cc081567f1eae9e6bf20f" translate="yes" xml:space="preserve">
          <source>If the image is able to be rendered at an arbitrary size, sets the source width and height to the supplied values. Note that the values returned from the &lt;code&gt;getWidth&lt;/code&gt; and &lt;code&gt;getHeight&lt;/code&gt; methods on &lt;code&gt;ImageReader&lt;/code&gt; are not affected by this method; they will continue to return the default size for the image. Similarly, if the image is also tiled the tile width and height are given in terms of the default size.</source>
          <target state="translated">画像を任意のサイズでレンダリングできる場合は、ソースの幅と高さを指定された値に設定します。 &lt;code&gt;ImageReader&lt;/code&gt; の &lt;code&gt;getWidth&lt;/code&gt; メソッドと &lt;code&gt;getHeight&lt;/code&gt; メソッドから返される値は、このメソッドの影響を受けないことに注意してください。それらは画像のデフォルトサイズを返し続けます。同様に、画像もタイリングされている場合、タイルの幅と高さはデフォルトサイズで指定されます。</target>
        </trans-unit>
        <trans-unit id="3b13126a7b6fc1071a110411ef949559c81f856f" translate="yes" xml:space="preserve">
          <source>If the image represents an animated image, it will be animated automatically.</source>
          <target state="translated">画像がアニメーションを表している場合は、自動的にアニメーション化されます。</target>
        </trans-unit>
        <trans-unit id="f6a7ef1905b7717e6534c8262beb9af466dbbe75" translate="yes" xml:space="preserve">
          <source>If the image type is TYPE_BYTE_BINARY, the number of entries in the color model is used to determine whether the image should have 1, 2, or 4 bits per pixel. If the color model has 1 or 2 entries, the image will have 1 bit per pixel. If it has 3 or 4 entries, the image with have 2 bits per pixel. If it has between 5 and 16 entries, the image will have 4 bits per pixel. Otherwise, an IllegalArgumentException will be thrown.</source>
          <target state="translated">イメージタイプがTYPE_BYTE_BINARYの場合、カラーモデルのエントリ数は、イメージが1ピクセルあたり1、2、または4ビットを持つべきかどうかを決定するために使用されます。カラーモデルのエントリ数が1または2の場合、画像は1ピクセルあたり1ビットです。3つまたは4つの項目がある場合、画像は1ピクセルあたり2ビットです。エントリが5から16の場合,画像は1ピクセルあたり4ビットとなります.そうでない場合は,IllegalArgumentException がスローされます.</target>
        </trans-unit>
        <trans-unit id="d7ce886e7cf517b9dd1b8e4bf3972fb87acfaf11" translate="yes" xml:space="preserve">
          <source>If the implementation can supply a value for one of the queries listed in the if statement of the default implementation, then it must do so. For example, an application-defined &lt;code&gt;HourMin&lt;/code&gt; class storing the hour and minute must override this method as follows:</source>
          <target state="translated">デフォルトの実装のifステートメントにリストされているクエリの1つに実装が値を提供できる場合は、そのようにする必要があります。たとえば、時間と分を格納するアプリケーション定義の &lt;code&gt;HourMin&lt;/code&gt; クラスは、このメソッドを次のようにオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="ba2e71c9350a067beb4f36ed2c2123aef7d9b604" translate="yes" xml:space="preserve">
          <source>If the implementation does not support the requested type of object or operation.</source>
          <target state="translated">要求されたタイプのオブジェクトまたは操作を実装がサポートしていない場合。</target>
        </trans-unit>
        <trans-unit id="8ab19508e52ba992a5a553d39a65472031820996" translate="yes" xml:space="preserve">
          <source>If the implementation of this class does not support persistence, an &lt;a href=&quot;../mbeanexception&quot;&gt;&lt;code&gt;MBeanException&lt;/code&gt;&lt;/a&gt; wrapping a &lt;a href=&quot;../servicenotfoundexception&quot;&gt;&lt;code&gt;ServiceNotFoundException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">このクラスの実装が持続性をサポートしない場合、&lt;a href=&quot;../servicenotfoundexception&quot;&gt; &lt;code&gt;ServiceNotFoundException&lt;/code&gt; を&lt;/a&gt;ラップする&lt;a href=&quot;../mbeanexception&quot;&gt; &lt;code&gt;MBeanException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="05e9c8575bf962e5c616ffc00d01915b9381d7c7" translate="yes" xml:space="preserve">
          <source>If the implementation of this method throws a &lt;a href=&quot;../../../java.base/java/lang/runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../../java.base/java/lang/error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;, the MBean Server will rethrow those inside a &lt;a href=&quot;runtimembeanexception&quot;&gt;&lt;code&gt;RuntimeMBeanException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;runtimeerrorexception&quot;&gt;&lt;code&gt;RuntimeErrorException&lt;/code&gt;&lt;/a&gt;, respectively. However, throwing an exception in &lt;code&gt;postDeregister&lt;/code&gt; will not change the state of the MBean: the MBean was already successfully deregistered and will remain so.</source>
          <target state="translated">If the implementation of this method throws a &lt;a href=&quot;../../../java.base/java/lang/runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt; or an &lt;a href=&quot;../../../java.base/java/lang/error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;, the MBean Server will rethrow those inside a &lt;a href=&quot;runtimembeanexception&quot;&gt; &lt;code&gt;RuntimeMBeanException&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;runtimeerrorexception&quot;&gt; &lt;code&gt;RuntimeErrorException&lt;/code&gt; &lt;/a&gt;, respectively. However, throwing an exception in &lt;code&gt;postDeregister&lt;/code&gt; will not change the state of the MBean: the MBean was already successfully deregistered and will remain so.</target>
        </trans-unit>
        <trans-unit id="b030ce654ec4888a547056d4d3abf6da997ebc0c" translate="yes" xml:space="preserve">
          <source>If the implementation of this method throws a &lt;a href=&quot;../../../java.base/java/lang/runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../../java.base/java/lang/error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;, the MBean Server will rethrow those inside a &lt;a href=&quot;runtimembeanexception&quot;&gt;&lt;code&gt;RuntimeMBeanException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;runtimeerrorexception&quot;&gt;&lt;code&gt;RuntimeErrorException&lt;/code&gt;&lt;/a&gt;, respectively. However, throwing an exception in &lt;code&gt;postRegister&lt;/code&gt; will not change the state of the MBean: if the MBean was already registered (&lt;code&gt;registrationDone&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;), the MBean will remain registered.</source>
          <target state="translated">If the implementation of this method throws a &lt;a href=&quot;../../../java.base/java/lang/runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt; or an &lt;a href=&quot;../../../java.base/java/lang/error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;, the MBean Server will rethrow those inside a &lt;a href=&quot;runtimembeanexception&quot;&gt; &lt;code&gt;RuntimeMBeanException&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;runtimeerrorexception&quot;&gt; &lt;code&gt;RuntimeErrorException&lt;/code&gt; &lt;/a&gt;, respectively. However, throwing an exception in &lt;code&gt;postRegister&lt;/code&gt; will not change the state of the MBean: if the MBean was already registered ( &lt;code&gt;registrationDone&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; ), the MBean will remain registered.</target>
        </trans-unit>
        <trans-unit id="61497ea0a67eb203673d203a0f2b5369b019bf33" translate="yes" xml:space="preserve">
          <source>If the implementation of this method throws a &lt;a href=&quot;../../../java/lang/runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../../java/lang/error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;, the MBean Server will rethrow those inside a &lt;a href=&quot;../runtimembeanexception&quot;&gt;&lt;code&gt;RuntimeMBeanException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../runtimeerrorexception&quot;&gt;&lt;code&gt;RuntimeErrorException&lt;/code&gt;&lt;/a&gt;, respectively. However, throwing an exception in &lt;code&gt;postDeregister&lt;/code&gt; will not change the state of the MBean: the MBean was already successfully deregistered and will remain so.</source>
          <target state="translated">このメソッドの実装が&lt;a href=&quot;../../../java/lang/runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../../java/lang/error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;をスローした場合、MBeanサーバーはそれらをそれぞれ&lt;a href=&quot;../runtimembeanexception&quot;&gt; &lt;code&gt;RuntimeMBeanException&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../runtimeerrorexception&quot;&gt; &lt;code&gt;RuntimeErrorException&lt;/code&gt; &lt;/a&gt;内で再スローします。ただし、 &lt;code&gt;postDeregister&lt;/code&gt; で例外をスローしても、MBeanの状態は変更されません。MBeanはすでに正常に登録解除されており、そのままです。</target>
        </trans-unit>
        <trans-unit id="b96b5c5ec491812d30a354e2cb6f11721b2e2b1d" translate="yes" xml:space="preserve">
          <source>If the implementation of this method throws a &lt;a href=&quot;../../../java/lang/runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../../java/lang/error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;, the MBean Server will rethrow those inside a &lt;a href=&quot;../runtimembeanexception&quot;&gt;&lt;code&gt;RuntimeMBeanException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../runtimeerrorexception&quot;&gt;&lt;code&gt;RuntimeErrorException&lt;/code&gt;&lt;/a&gt;, respectively. However, throwing an exception in &lt;code&gt;postRegister&lt;/code&gt; will not change the state of the MBean: if the MBean was already registered (&lt;code&gt;registrationDone&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;), the MBean will remain registered.</source>
          <target state="translated">このメソッドの実装が&lt;a href=&quot;../../../java/lang/runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../../java/lang/error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;をスローした場合、MBeanサーバーはそれらをそれぞれ&lt;a href=&quot;../runtimembeanexception&quot;&gt; &lt;code&gt;RuntimeMBeanException&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../runtimeerrorexception&quot;&gt; &lt;code&gt;RuntimeErrorException&lt;/code&gt; &lt;/a&gt;内で再スローします。ただし、 &lt;code&gt;postRegister&lt;/code&gt; で例外をスローしても、MBeanの状態は変更されません。MBeanがすでに登録されている場合（ &lt;code&gt;registrationDone&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; ）、MBeanは登録されたままになります。</target>
        </trans-unit>
        <trans-unit id="4535342913d52819782cb269ae901b36379460f0" translate="yes" xml:space="preserve">
          <source>If the implementation of this method throws a &lt;a href=&quot;../../java/lang/runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../java/lang/error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;, the MBean Server will rethrow those inside a &lt;a href=&quot;runtimembeanexception&quot;&gt;&lt;code&gt;RuntimeMBeanException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;runtimeerrorexception&quot;&gt;&lt;code&gt;RuntimeErrorException&lt;/code&gt;&lt;/a&gt;, respectively. However, throwing an exception in &lt;code&gt;postDeregister&lt;/code&gt; will not change the state of the MBean: the MBean was already successfully deregistered and will remain so.</source>
          <target state="translated">このメソッドの実装が&lt;a href=&quot;../../java/lang/runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../java/lang/error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;をスローした場合、MBeanサーバーはそれらをそれぞれ&lt;a href=&quot;runtimembeanexception&quot;&gt; &lt;code&gt;RuntimeMBeanException&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;runtimeerrorexception&quot;&gt; &lt;code&gt;RuntimeErrorException&lt;/code&gt; &lt;/a&gt;内で再スローします。ただし、 &lt;code&gt;postDeregister&lt;/code&gt; で例外をスローしても、MBeanの状態は変更されません。MBeanはすでに正常に登録解除されており、そのままです。</target>
        </trans-unit>
        <trans-unit id="76763841aca1fa1b12ea5b878cc85e9f7cde9edb" translate="yes" xml:space="preserve">
          <source>If the implementation of this method throws a &lt;a href=&quot;../../java/lang/runtimeexception&quot;&gt;&lt;code&gt;RuntimeException&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../java/lang/error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;, the MBean Server will rethrow those inside a &lt;a href=&quot;runtimembeanexception&quot;&gt;&lt;code&gt;RuntimeMBeanException&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;runtimeerrorexception&quot;&gt;&lt;code&gt;RuntimeErrorException&lt;/code&gt;&lt;/a&gt;, respectively. However, throwing an exception in &lt;code&gt;postRegister&lt;/code&gt; will not change the state of the MBean: if the MBean was already registered (&lt;code&gt;registrationDone&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;), the MBean will remain registered.</source>
          <target state="translated">このメソッドの実装が&lt;a href=&quot;../../java/lang/runtimeexception&quot;&gt; &lt;code&gt;RuntimeException&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../../java/lang/error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;をスローした場合、MBeanサーバーはそれらをそれぞれ&lt;a href=&quot;runtimembeanexception&quot;&gt; &lt;code&gt;RuntimeMBeanException&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;runtimeerrorexception&quot;&gt; &lt;code&gt;RuntimeErrorException&lt;/code&gt; &lt;/a&gt;内で再スローします。ただし、 &lt;code&gt;postRegister&lt;/code&gt; で例外をスローしても、MBeanの状態は変更されません。MBeanがすでに登録されている場合（ &lt;code&gt;registrationDone&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; ）、MBeanは登録されたままになります。</target>
        </trans-unit>
        <trans-unit id="1a75de9cc725b96c1261a9ca528b8f0bb1b31691" translate="yes" xml:space="preserve">
          <source>If the implementation requires some measurable time to cancel the job in the &lt;code&gt;PROCESSING&lt;/code&gt; or &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; job states, the printer must use this reason to indicate that the printer is still performing some actions on the job while the job remains in the &lt;code&gt;PROCESSING&lt;/code&gt; or &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; state. After all the job's job description attributes have stopped incrementing, the printer moves the job from the PROCESSING state to the &lt;code&gt;CANCELED&lt;/code&gt; or &lt;code&gt;ABORTED&lt;/code&gt; job states.</source>
          <target state="translated">If the implementation requires some measurable time to cancel the job in the &lt;code&gt;PROCESSING&lt;/code&gt; or &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; job states, the printer must use this reason to indicate that the printer is still performing some actions on the job while the job remains in the &lt;code&gt;PROCESSING&lt;/code&gt; or &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; state. After all the job's job description attributes have stopped incrementing, the printer moves the job from the PROCESSING state to the &lt;code&gt;CANCELED&lt;/code&gt; or &lt;code&gt;ABORTED&lt;/code&gt; job states.</target>
        </trans-unit>
        <trans-unit id="e5a527012aa1181404e26ff9eba79c5215c6617c" translate="yes" xml:space="preserve">
          <source>If the implementation requires some measurable time to cancel the job in the PROCESSING or PROCESSING_STOPPED job states, the printer must use this reason to indicate that the printer is still performing some actions on the job while the job remains in the PROCESSING or PROCESSING_STOPPED state. After all the job's job description attributes have stopped incrementing, the printer moves the job from the PROCESSING state to the CANCELED or ABORTED job states.</source>
          <target state="translated">実装が、PROCESSINGまたはPROCESSING_STOPPEDジョブ状態でジョブをキャンセルするために測定可能な時間を必要とする場合、プリンタは、ジョブがPROCESSINGまたはPROCESSING_STOPPED状態のままである間、プリンタがまだジョブに対していくつかのアクションを実行していることを示すために、この理由を使用しなければならない。すべてのジョブのジョブ記述属性のインクリメントが停止した後、プリンタは、ジョブをPROCESSING状態からCANCELED状態またはABORTED状態に移動する。</target>
        </trans-unit>
        <trans-unit id="21a96789298a278046ce067991e2d31d04c7cbd4" translate="yes" xml:space="preserve">
          <source>If the implementation supports</source>
          <target state="translated">実装が</target>
        </trans-unit>
        <trans-unit id="9c61e0dd2f97968224ba5bded184eb2a44d95c79" translate="yes" xml:space="preserve">
          <source>If the implementation supports a history mechanism, a reference to an Edit implementation will be returned, otherwise null.</source>
          <target state="translated">実装が履歴メカニズムをサポートしている場合は、Editの実装への参照が返され、そうでない場合はnullが返されます。</target>
        </trans-unit>
        <trans-unit id="35f873dd7c2035b38202cda19f7fef9dd8dbdb3b" translate="yes" xml:space="preserve">
          <source>If the implementing method determines that no transformations are needed, it should return &lt;code&gt;null&lt;/code&gt;. Otherwise, it should create a new &lt;code&gt;byte[]&lt;/code&gt; array, copy the input &lt;code&gt;classfileBuffer&lt;/code&gt; into it, along with all desired transformations, and return the new array. The input &lt;code&gt;classfileBuffer&lt;/code&gt; must not be modified.</source>
          <target state="translated">実装メソッドが変換が必要ないと判断した場合は、 &lt;code&gt;null&lt;/code&gt; を返す必要があります。それ以外の場合は、新しい &lt;code&gt;byte[]&lt;/code&gt; 配列を作成し、入力 &lt;code&gt;classfileBuffer&lt;/code&gt; を必要なすべての変換とともにコピーして、新しい配列を返します。入力 &lt;code&gt;classfileBuffer&lt;/code&gt; は変更しないでください。</target>
        </trans-unit>
        <trans-unit id="81ca206f6782401fcc1f26d127affa8acd0e136d" translate="yes" xml:space="preserve">
          <source>If the implementing object is an instance of java.beans.beancontext.BeanContext, or a subinterface thereof, then that BeanContext should fire a PropertyChangeEvent, to its registered BeanContextMembershipListeners, with parameters:</source>
          <target state="translated">実装オブジェクトがjava.bean.beancontext.BeanContext.BeanContextまたはそのサブインタフェースのインスタンスである場合,そのBeanContextは,その登録されたBeanContextMembershipListenersに対して,パラメータを指定して,PropertyChangeEventを発行しなければなりません。</target>
        </trans-unit>
        <trans-unit id="36b6757dd0b7b9698143f2e5d681dfa198ff7d6d" translate="yes" xml:space="preserve">
          <source>If the incoming object does not implement any additional interfaces known to the writer, the writer has no choice but to access it via the standard &lt;code&gt;IIOMetadata&lt;/code&gt; interfaces such as the tree view provided by &lt;code&gt;IIOMetadata.getAsTree&lt;/code&gt;. In this case, there is likely to be significant loss of information.</source>
          <target state="translated">着信オブジェクトがライターに知られている追加のインターフェースを実装していない場合、ライターは、 &lt;code&gt;IIOMetadata.getAsTree&lt;/code&gt; によって提供されるツリービューなどの標準の &lt;code&gt;IIOMetadata&lt;/code&gt; インターフェースを介してアクセスするしかありません。この場合、情報が大幅に失われる可能性があります。</target>
        </trans-unit>
        <trans-unit id="e436d84bd4232b4579b6124cd808ff4918e211d5" translate="yes" xml:space="preserve">
          <source>If the inherited channel is a datagram-oriented socket then a &lt;a href=&quot;../datagramchannel&quot;&gt;&lt;code&gt;DatagramChannel&lt;/code&gt;&lt;/a&gt; is returned. The datagram channel is, at least initially, in blocking mode, and bound to a socket address.</source>
          <target state="translated">継承されたチャネルがデータグラム指向のソケットの場合、&lt;a href=&quot;../datagramchannel&quot;&gt; &lt;code&gt;DatagramChannel&lt;/code&gt; &lt;/a&gt;が返されます。データグラムチャネルは、少なくとも最初はブロッキングモードで、ソケットアドレスにバインドされています。</target>
        </trans-unit>
        <trans-unit id="3073a336a578c76af3c2fae533b0dcd45d01e490" translate="yes" xml:space="preserve">
          <source>If the inherited channel represents a stream-oriented connected socket then a &lt;a href=&quot;../socketchannel&quot;&gt;&lt;code&gt;SocketChannel&lt;/code&gt;&lt;/a&gt; is returned. The socket channel is, at least initially, in blocking mode, bound to a socket address, and connected to a peer.</source>
          <target state="translated">継承されたチャネルがストリーム指向の接続ソケットを表す場合、&lt;a href=&quot;../socketchannel&quot;&gt; &lt;code&gt;SocketChannel&lt;/code&gt; &lt;/a&gt;が返されます。ソケットチャネルは、少なくとも最初はブロッキングモードで、ソケットアドレスにバインドされ、ピアに接続されています。</target>
        </trans-unit>
        <trans-unit id="875d948792bb0df4386ddee7ed26751e7f15e361" translate="yes" xml:space="preserve">
          <source>If the inherited channel represents a stream-oriented listening socket then a &lt;a href=&quot;../serversocketchannel&quot;&gt;&lt;code&gt;ServerSocketChannel&lt;/code&gt;&lt;/a&gt; is returned. The server-socket channel is, at least initially, in blocking mode, and bound to a socket address.</source>
          <target state="translated">継承されたチャネルがストリーム指向のリスニングソケットを表す場合、&lt;a href=&quot;../serversocketchannel&quot;&gt; &lt;code&gt;ServerSocketChannel&lt;/code&gt; &lt;/a&gt;が返されます。サーバーソケットチャネルは、少なくとも最初はブロッキングモードで、ソケットアドレスにバインドされています。</target>
        </trans-unit>
        <trans-unit id="046cd8116ea31a7deaa92b344ddffcaddc10e57f" translate="yes" xml:space="preserve">
          <source>If the input byte array is not in valid Base64 encoding scheme then some bytes may have been written to the output byte array before IllegalargumentException is thrown.</source>
          <target state="translated">入力バイト配列が有効なBase64エンコーディング方式ではない場合、IllegalargumentExceptionがスローされる前に、いくつかのバイトが出力バイト配列に書き込まれている可能性があります。</target>
        </trans-unit>
        <trans-unit id="91347d5773aae8847de673eedfeeb7e761115795" translate="yes" xml:space="preserve">
          <source>If the input is not a valid Snippet, this will not be a valid class/import definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8c0e64cbb7daebfbf49419512f53ea309aa91a" translate="yes" xml:space="preserve">
          <source>If the input name does not contain a realm, the default realm is used. The default realm can be specified either in a Kerberos configuration file or via the &lt;code&gt;&lt;span id=&quot;java.security.krb5.realm&quot;&gt;java.security.krb5.realm&lt;/span&gt;&lt;/code&gt; system property. For more information, see the &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=security_guide_jgss_tutorial&quot;&gt;Kerberos Requirements&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd58891e2c653b5383c76eb69e062e344690968" translate="yes" xml:space="preserve">
          <source>If the input name does not contain a realm, the default realm is used. The default realm can be specified either in a Kerberos configuration file or via the &lt;code&gt;&lt;span id=&quot;java.security.krb5.realm-1&quot;&gt;java.security.krb5.realm&lt;/span&gt;&lt;/code&gt; system property. For more information, see the &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=security_guide_jgss_tutorial&quot;&gt;Kerberos Requirements&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c010f5bf051b0a98a728de40056665c0f4201b" translate="yes" xml:space="preserve">
          <source>If the input name does not contain a realm, the default realm is used. The default realm can be specified either in a Kerberos configuration file or via the java.security.krb5.realm system property. For more information,  Kerberos Requirements</source>
          <target state="translated">入力名にレルムが含まれていない場合、既定のレルムが使用されます。既定のレルムは、Kerberos 構成ファイルで指定するか、java.security.krb5.realm system プロパティを介して指定できます。詳細については、Kerberosの要件</target>
        </trans-unit>
        <trans-unit id="e2258789d44cebf2e677dac1a6ecd85ab5667fdc" translate="yes" xml:space="preserve">
          <source>If the input name does not contain a realm, the default realm is used. The default realm can be specified either in a Kerberos configuration file or via the java.security.krb5.realm system property. For more information, see  Kerberos Requirements.</source>
          <target state="translated">入力名にレルムが含まれていない場合、既定のレルムが使用されます。既定のレルムは、Kerberos 構成ファイルで指定するか、java.security.krb5.realm system プロパティを介して指定できます。詳細については、「Kerberosの要件」を参照してください。</target>
        </trans-unit>
        <trans-unit id="8a73e715c93a5e0127bac80ed71051dc7af6a5b8" translate="yes" xml:space="preserve">
          <source>If the input name does not contain a realm, the default realm is used. The default realm can be specified either in a Kerberos configuration file or via the java.security.krb5.realm system property. For more information, see the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jgss_tutorial&quot;&gt;Kerberos Requirements&lt;/a&gt;. Additionally, if a security manager is installed, a &lt;a href=&quot;servicepermission&quot;&gt;&lt;code&gt;ServicePermission&lt;/code&gt;&lt;/a&gt; must be granted and the service principal of the permission must minimally be inside the &lt;code&gt;KerberosPrincipal&lt;/code&gt;'s realm. For example, if the result of &lt;code&gt;new KerberosPrincipal(&quot;user&quot;)&lt;/code&gt; is &lt;code&gt;user@EXAMPLE.COM&lt;/code&gt;, then a &lt;code&gt;ServicePermission&lt;/code&gt; with service principal &lt;code&gt;host/www.example.com@EXAMPLE.COM&lt;/code&gt; (and any action) must be granted.</source>
          <target state="translated">If the input name does not contain a realm, the default realm is used. The default realm can be specified either in a Kerberos configuration file or via the java.security.krb5.realm system property. For more information, see the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jgss_tutorial&quot;&gt;Kerberos Requirements&lt;/a&gt;. Additionally, if a security manager is installed, a &lt;a href=&quot;servicepermission&quot;&gt; &lt;code&gt;ServicePermission&lt;/code&gt; &lt;/a&gt; must be granted and the service principal of the permission must minimally be inside the &lt;code&gt;KerberosPrincipal&lt;/code&gt; 's realm. For example, if the result of &lt;code&gt;new KerberosPrincipal(&quot;user&quot;)&lt;/code&gt; is &lt;code&gt;user@EXAMPLE.COM&lt;/code&gt; , then a &lt;code&gt;ServicePermission&lt;/code&gt; with service principal &lt;code&gt;host/www.example.com@EXAMPLE.COM&lt;/code&gt; (and any action) must be granted.</target>
        </trans-unit>
        <trans-unit id="72db9a55602aeaacd8d06804f6747b4e1ec98ac6" translate="yes" xml:space="preserve">
          <source>If the input sequence is mutable, it must remain constant during the execution of the terminal stream operation. Otherwise, the result of the terminal stream operation is undefined.</source>
          <target state="translated">入力シーケンスが変異可能な場合、ターミナルストリーム操作の実行中は一定でなければならない。そうでなければ、ターミナルストリーム操作の結果は未定義である。</target>
        </trans-unit>
        <trans-unit id="9bc4fd432cad2c0de1cfdac5a329f31d55c9e12d" translate="yes" xml:space="preserve">
          <source>If the inserted character is '-', it is accepted.</source>
          <target state="translated">挿入された文字が '-' の場合は、それが受け入れられます。</target>
        </trans-unit>
        <trans-unit id="f3d3dcf4d36e88edd9ce623dd444c8f85abfe0b1" translate="yes" xml:space="preserve">
          <source>If the inserted character matches the mask for the next non-literal character, it is accepted at the new location.</source>
          <target state="translated">挿入された文字が、次の非リテラル文字のマスクと一致した場合、その文字は新しい場所で受け入れられます。</target>
        </trans-unit>
        <trans-unit id="bdcd5cc0d6714ef6dfe7ad5151f92554586e46cb" translate="yes" xml:space="preserve">
          <source>If the intended destination of this stream is an abstraction provided by the underlying operating system, for example a file, then flushing the stream guarantees only that bytes previously written to the stream are passed to the operating system for writing; it does not guarantee that they are actually written to a physical device such as a disk drive.</source>
          <target state="translated">このストリームの目的の先がファイルなど、基礎となるオペレーティングシステムが提供する抽象化されたものである場合、ストリームのフラッシュは、以前にストリームに書き込まれたバイトが書き込みのためにオペレーティングシステムに渡されることを保証するだけであり、実際にディスクドライブなどの物理デバイスに書き込まれることを保証するものではありません。</target>
        </trans-unit>
        <trans-unit id="6dbed2351bbf5adacbd2e790b9255ca10dfcf5cc" translate="yes" xml:space="preserve">
          <source>If the internal frame is already closed, this method does nothing and returns immediately. Otherwise, this method begins by firing an &lt;code&gt;INTERNAL_FRAME_CLOSING&lt;/code&gt; event. Then this method sets the &lt;code&gt;closed&lt;/code&gt; property to &lt;code&gt;true&lt;/code&gt; unless a listener vetoes the property change. This method finishes by making the internal frame invisible and unselected, and then firing an &lt;code&gt;INTERNAL_FRAME_CLOSED&lt;/code&gt; event.</source>
          <target state="translated">If the internal frame is already closed, this method does nothing and returns immediately. Otherwise, this method begins by firing an &lt;code&gt;INTERNAL_FRAME_CLOSING&lt;/code&gt; event. Then this method sets the &lt;code&gt;closed&lt;/code&gt; property to &lt;code&gt;true&lt;/code&gt; unless a listener vetoes the property change. This method finishes by making the internal frame invisible and unselected, and then firing an &lt;code&gt;INTERNAL_FRAME_CLOSED&lt;/code&gt; event.</target>
        </trans-unit>
        <trans-unit id="81483551df6d9559fcbeffe5f6509d97a94497cc" translate="yes" xml:space="preserve">
          <source>If the internal frame is not visible, brings the internal frame to the front, makes it visible, and attempts to select it.</source>
          <target state="translated">内枠が見えていない場合は、内枠を手前に持ってきて、内枠を見えるようにし、選択を試みます。</target>
        </trans-unit>
        <trans-unit id="5939dca1837b7f5c342938c51c20c51e55fd3d33" translate="yes" xml:space="preserve">
          <source>If the internal frame is not visible, brings the internal frame to the front, makes it visible, and attempts to select it. The first time the internal frame is made visible, this method also fires an &lt;code&gt;INTERNAL_FRAME_OPENED&lt;/code&gt; event. This method does nothing if the internal frame is already visible. Invoking this method has the same result as invoking &lt;code&gt;setVisible(true)&lt;/code&gt;.</source>
          <target state="translated">If the internal frame is not visible, brings the internal frame to the front, makes it visible, and attempts to select it. The first time the internal frame is made visible, this method also fires an &lt;code&gt;INTERNAL_FRAME_OPENED&lt;/code&gt; event. This method does nothing if the internal frame is already visible. Invoking this method has the same result as invoking &lt;code&gt;setVisible(true)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="881b9ec107691ccb0574603b5fa37effa233e5be" translate="yes" xml:space="preserve">
          <source>If the invoked method completes normally, the value it returns is copied in the &lt;code&gt;value&lt;/code&gt; property. Note that the &lt;code&gt;value&lt;/code&gt; property is set to &lt;code&gt;null&lt;/code&gt;, if the return type of the underlying method is &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">呼び出されたメソッドが正常に完了すると、返された &lt;code&gt;value&lt;/code&gt; プロパティにコピーされます。基になるメソッドの戻り値の型が &lt;code&gt;void&lt;/code&gt; の場合、 &lt;code&gt;value&lt;/code&gt; プロパティは &lt;code&gt;null&lt;/code&gt; に設定されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="55fa409a4b17ed3350505c8e7edb658e38fe64b1" translate="yes" xml:space="preserve">
          <source>If the invoking thread is interrupted while waiting to acquire the lock then its interrupt status will be set and a &lt;a href=&quot;filelockinterruptionexception&quot;&gt;&lt;code&gt;FileLockInterruptionException&lt;/code&gt;&lt;/a&gt; will be thrown. If the invoker's interrupt status is set when this method is invoked then that exception will be thrown immediately; the thread's interrupt status will not be changed.</source>
          <target state="translated">ロックの取得を待機している間に呼び出しスレッドが中断されると、その中断ステータスが設定され、&lt;a href=&quot;filelockinterruptionexception&quot;&gt; &lt;code&gt;FileLockInterruptionException&lt;/code&gt; &lt;/a&gt;がスローされます。このメソッドが呼び出されたときに呼び出し元の割り込みステータスが設定されている場合、その例外はすぐにスローされます。スレッドの割り込みステータスは変更されません。</target>
        </trans-unit>
        <trans-unit id="9c99f7a43566c3e0f406a92c738f397ca332a50c" translate="yes" xml:space="preserve">
          <source>If the invoking thread is interrupted while waiting, then it will return immediately with the interrupt status set. If the interrupted status is already set, this method returns immediately with the interrupt status set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b769fc50fe26f32efef5297788dde55385ed9b56" translate="yes" xml:space="preserve">
          <source>If the item at the specified index is not selected, then the operation is ignored.</source>
          <target state="translated">指定されたインデックスの項目が選択されていない場合は、その操作は無視されます。</target>
        </trans-unit>
        <trans-unit id="609b6cb5da70d41c83a3aac10202e485bae19735" translate="yes" xml:space="preserve">
          <source>If the item is the first one being added to the choice, then the item becomes selected. Otherwise, if the selected item was one of the items shifted, the first item in the choice becomes the selected item. If the selected item was no among those shifted, it remains the selected item.</source>
          <target state="translated">選択肢に追加された最初のアイテムがそのアイテムの場合、そのアイテムが選択された状態になります。そうでない場合、選択されたアイテムがシフトされたアイテムの一つであった場合、選択範囲の最初のアイテムが選択されたアイテムになります。選択された項目がシフトされた項目の中になかった場合は、選択された項目のままになります。</target>
        </trans-unit>
        <trans-unit id="2f2c303e208ec2fac91ffa790d4de069ee4e7cc5" translate="yes" xml:space="preserve">
          <source>If the iteration variable type &lt;code&gt;V&lt;/code&gt; is dropped from the internal parameter list, the resulting shorter list &lt;code&gt;(A...)&lt;/code&gt; is called the &lt;em&gt;external parameter list&lt;/em&gt;.</source>
          <target state="translated">If the iteration variable type &lt;code&gt;V&lt;/code&gt; is dropped from the internal parameter list, the resulting shorter list &lt;code&gt;(A...)&lt;/code&gt; is called the &lt;em&gt;external parameter list&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="677df4c5c3a72284b193dc3046a802a47d947204" translate="yes" xml:space="preserve">
          <source>If the iteration variable types &lt;code&gt;(V I)&lt;/code&gt; are dropped from the internal parameter list, the resulting shorter list &lt;code&gt;(A...)&lt;/code&gt; is called the &lt;em&gt;external parameter list&lt;/em&gt;.</source>
          <target state="translated">If the iteration variable types &lt;code&gt;(V I)&lt;/code&gt; are dropped from the internal parameter list, the resulting shorter list &lt;code&gt;(A...)&lt;/code&gt; is called the &lt;em&gt;external parameter list&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="3b2f8ee14f1a5134aa879886d0c902676ccbfafd" translate="yes" xml:space="preserve">
          <source>If the iteration variable types &lt;code&gt;(V T)&lt;/code&gt; are dropped from the internal parameter list, the resulting shorter list &lt;code&gt;(A...)&lt;/code&gt; is called the &lt;em&gt;external parameter list&lt;/em&gt;.</source>
          <target state="translated">If the iteration variable types &lt;code&gt;(V T)&lt;/code&gt; are dropped from the internal parameter list, the resulting shorter list &lt;code&gt;(A...)&lt;/code&gt; is called the &lt;em&gt;external parameter list&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="ace7c9d0c03c5a8591ce4f875b6cfb21a9fe43d8" translate="yes" xml:space="preserve">
          <source>If the jar file is on the class path, VendorJavaCompiler can be located using code like this:</source>
          <target state="translated">jar ファイルがクラスパス上にある場合、VendorJavaCompiler は次のようなコードを使用して配置することができます。</target>
        </trans-unit>
        <trans-unit id="05798c7b9d831dc45d92f33b15f7f3c7a9524b15" translate="yes" xml:space="preserve">
          <source>If the key agreement algorithm requires random bytes, it gets them from the given source of randomness, &lt;code&gt;random&lt;/code&gt;. However, if the underlying algorithm implementation does not require any random bytes, &lt;code&gt;random&lt;/code&gt; is ignored.</source>
          <target state="translated">鍵合意アルゴリズムが乱数バイトを必要とする場合、それは、ランダム性の特定のソースからそれらを取得 &lt;code&gt;random&lt;/code&gt; 。ただし、基になるアルゴリズムの実装にランダムバイトが必要ない場合、 &lt;code&gt;random&lt;/code&gt; は無視されます。</target>
        </trans-unit>
        <trans-unit id="b9ba2d545a01554992fedf0cb983cad56e6a2aca" translate="yes" xml:space="preserve">
          <source>If the key is stored on a hardware device, its specification may contain information that helps identify the key on the device.</source>
          <target state="translated">キーがハードウェアデバイスに格納されている場合、その仕様には、デバイス上のキーを識別するのに役立つ情報が含まれている可能性があります。</target>
        </trans-unit>
        <trans-unit id="c9af549a3a519458df47c4c31dbda4adcd0e3257" translate="yes" xml:space="preserve">
          <source>If the language requires different forms for formatting and stand-alone usages, This method returns short month names in the formatting form. For example, the preferred abbreviation for January in the Catalan language is &lt;em&gt;de gen.&lt;/em&gt; in the formatting form, while it is &lt;em&gt;gen.&lt;/em&gt; in the stand-alone form. This method returns &lt;code&gt;&quot;de gen.&quot;&lt;/code&gt; in this case. Refer to the &lt;a href=&quot;http://unicode.org/reports/tr35/#Calendar_Elements&quot;&gt; Calendar Elements in the Unicode Locale Data Markup Language (LDML) specification&lt;/a&gt; for more details.</source>
          <target state="translated">言語で書式設定とスタンドアロンの使用に異なるフォームが必要な場合、このメソッドは書式設定フォームで短い月の名前を返します。たとえば、カタロニア語で1月に推奨される略語は&lt;em&gt;de genです。&lt;/em&gt;それは&lt;em&gt;genです&lt;/em&gt;が、書式設定フォームで&lt;em&gt;。&lt;/em&gt;スタンドアロン形式で。このメソッドは &lt;code&gt;&quot;de gen.&quot;&lt;/code&gt; 返します。この場合。詳細については&lt;a href=&quot;http://unicode.org/reports/tr35/#Calendar_Elements&quot;&gt;、Unicode Locale Data Markup Language（LDML）仕様&lt;/a&gt;のカレンダー要素を参照してください。</target>
        </trans-unit>
        <trans-unit id="93f027224547b6049ea9e0bfa7e65c576dd00372" translate="yes" xml:space="preserve">
          <source>If the language requires different forms for formatting and stand-alone usages, this method returns month names in the formatting form. For example, the preferred month name for January in the Czech language is &lt;em&gt;ledna&lt;/em&gt; in the formatting form, while it is &lt;em&gt;leden&lt;/em&gt; in the stand-alone form. This method returns &lt;code&gt;&quot;ledna&quot;&lt;/code&gt; in this case. Refer to the &lt;a href=&quot;http://unicode.org/reports/tr35/#Calendar_Elements&quot;&gt; Calendar Elements in the Unicode Locale Data Markup Language (LDML) specification&lt;/a&gt; for more details.</source>
          <target state="translated">言語でフォーマットとスタンドアロンの使用に異なる形式が必要な場合、このメソッドはフォーマットフォームで月名を返します。たとえば、チェコ語で1月の有利な月名がある&lt;em&gt;ledna&lt;/em&gt;それがされている間、フォーマットする形で&lt;em&gt;leden&lt;/em&gt;スタンドアロン形式で。この場合、このメソッドは &lt;code&gt;&quot;ledna&quot;&lt;/code&gt; を返します。詳細については&lt;a href=&quot;http://unicode.org/reports/tr35/#Calendar_Elements&quot;&gt;、Unicode Locale Data Markup Language（LDML）仕様&lt;/a&gt;のカレンダー要素を参照してください。</target>
        </trans-unit>
        <trans-unit id="ec115a41fa789db2802143bd704e450eb4e10a17" translate="yes" xml:space="preserve">
          <source>If the language requires different forms for formatting and stand-alone usages, this method returns month names in the formatting form. For example, the preferred month name for January in the Czech language is &lt;em&gt;ledna&lt;/em&gt; in the formatting form, while it is &lt;em&gt;leden&lt;/em&gt; in the stand-alone form. This method returns &lt;code&gt;&quot;ledna&quot;&lt;/code&gt; in this case. Refer to the &lt;a href=&quot;https://unicode.org/reports/tr35/#Calendar_Elements&quot;&gt; Calendar Elements in the Unicode Locale Data Markup Language (LDML) specification&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df908f1fac23c580aff4bb5a5d73c49f92ce060" translate="yes" xml:space="preserve">
          <source>If the language requires different forms for formatting and stand-alone usages, this method returns short month names in the formatting form. For example, the preferred abbreviation for January in the Catalan language is &lt;em&gt;de gen.&lt;/em&gt; in the formatting form, while it is &lt;em&gt;gen.&lt;/em&gt; in the stand-alone form. This method returns &lt;code&gt;&quot;de gen.&quot;&lt;/code&gt; in this case. Refer to the &lt;a href=&quot;http://unicode.org/reports/tr35/#Calendar_Elements&quot;&gt; Calendar Elements in the Unicode Locale Data Markup Language (LDML) specification&lt;/a&gt; for more details.</source>
          <target state="translated">If the language requires different forms for formatting and stand-alone usages, this method returns short month names in the formatting form. For example, the preferred abbreviation for January in the Catalan language is &lt;em&gt;de gen.&lt;/em&gt; in the formatting form, while it is &lt;em&gt;gen.&lt;/em&gt; in the stand-alone form. This method returns &lt;code&gt;&quot;de gen.&quot;&lt;/code&gt; in this case. Refer to the &lt;a href=&quot;http://unicode.org/reports/tr35/#Calendar_Elements&quot;&gt; Calendar Elements in the Unicode Locale Data Markup Language (LDML) specification&lt;/a&gt; for more details.</target>
        </trans-unit>
        <trans-unit id="9a36eee403712a7e42f21c34d895460cc4cd080c" translate="yes" xml:space="preserve">
          <source>If the language requires different forms for formatting and stand-alone usages, this method returns short month names in the formatting form. For example, the preferred abbreviation for January in the Catalan language is &lt;em&gt;de gen.&lt;/em&gt; in the formatting form, while it is &lt;em&gt;gen.&lt;/em&gt; in the stand-alone form. This method returns &lt;code&gt;&quot;de gen.&quot;&lt;/code&gt; in this case. Refer to the &lt;a href=&quot;https://unicode.org/reports/tr35/#Calendar_Elements&quot;&gt; Calendar Elements in the Unicode Locale Data Markup Language (LDML) specification&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bf4283a4aed636a8a304bb68dccc18d01e161c" translate="yes" xml:space="preserve">
          <source>If the layout manager uses a per-component string, adds the component &lt;code&gt;comp&lt;/code&gt; to the layout, associating it with the string specified by &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">If the layout manager uses a per-component string, adds the component &lt;code&gt;comp&lt;/code&gt; to the layout, associating it with the string specified by &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="721e40fbee0b627fcc6ccf4dd39ef80c9c24cc65" translate="yes" xml:space="preserve">
          <source>If the length of &lt;code&gt;b&lt;/code&gt; is zero, then no bytes are read and &lt;code&gt;0&lt;/code&gt; is returned; otherwise, there is an attempt to read at least one byte. If no byte is available because the stream is at the end of the file, the value &lt;code&gt;-1&lt;/code&gt; is returned; otherwise, at least one byte is read and stored into &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;b&lt;/code&gt; の長さがゼロの場合、バイトは読み込まれず、 &lt;code&gt;0&lt;/code&gt; が返されます。そうでない場合は、少なくとも1バイトを読み取ろうとします。ストリームがファイルの最後にあるために使用可能なバイトがない場合、値 &lt;code&gt;-1&lt;/code&gt; が返されます。それ以外の場合は、少なくとも1バイトが読み取られ、 &lt;code&gt;b&lt;/code&gt; に格納されます。</target>
        </trans-unit>
        <trans-unit id="945b37877bd5c51ba536e667136d3b4286b64c37" translate="yes" xml:space="preserve">
          <source>If the length of the argument string is &lt;code&gt;0&lt;/code&gt;, then this &lt;code&gt;String&lt;/code&gt; object is returned. Otherwise, a &lt;code&gt;String&lt;/code&gt; object is returned that represents a character sequence that is the concatenation of the character sequence represented by this &lt;code&gt;String&lt;/code&gt; object and the character sequence represented by the argument string.</source>
          <target state="translated">引数文字列の長さが &lt;code&gt;0&lt;/code&gt; の場合、この &lt;code&gt;String&lt;/code&gt; オブジェクトが返されます。それ以外の場合は、この &lt;code&gt;String&lt;/code&gt; オブジェクトで表される文字シーケンスと引数文字列で表される文字シーケンスを連結した文字シーケンスを表す &lt;code&gt;String&lt;/code&gt; オブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="0940fb46aa425a706a545b01258cef980fd6db8a" translate="yes" xml:space="preserve">
          <source>If the length of the specified &lt;code&gt;CharSequence&lt;/code&gt; is less than or equal to zero, then an empty buffer of capacity &lt;code&gt;16&lt;/code&gt; is returned.</source>
          <target state="translated">指定された &lt;code&gt;CharSequence&lt;/code&gt; の長さがゼロ以下の場合、容量 &lt;code&gt;16&lt;/code&gt; の空のバッファーが返されます。</target>
        </trans-unit>
        <trans-unit id="383b812813a9ca054e67e8d7ed50b33281ee93ba" translate="yes" xml:space="preserve">
          <source>If the line is not open and has never been opened, it returns the default format. The default format is an implementation specific audio format, or, if the &lt;code&gt;DataLine.Info&lt;/code&gt; object, which was used to retrieve this &lt;code&gt;DataLine&lt;/code&gt;, specifies at least one fully qualified audio format, the last one will be used as the default format. Opening the line with a specific audio format (e.g. &lt;a href=&quot;sourcedataline#open(javax.sound.sampled.AudioFormat)&quot;&gt;&lt;code&gt;SourceDataLine.open(AudioFormat)&lt;/code&gt;&lt;/a&gt;) will override the default format.</source>
          <target state="translated">If the line is not open and has never been opened, it returns the default format. The default format is an implementation specific audio format, or, if the &lt;code&gt;DataLine.Info&lt;/code&gt; object, which was used to retrieve this &lt;code&gt;DataLine&lt;/code&gt; , specifies at least one fully qualified audio format, the last one will be used as the default format. Opening the line with a specific audio format (e.g. &lt;a href=&quot;sourcedataline#open(javax.sound.sampled.AudioFormat)&quot;&gt; &lt;code&gt;SourceDataLine.open(AudioFormat)&lt;/code&gt; &lt;/a&gt;) will override the default format.</target>
        </trans-unit>
        <trans-unit id="009a7b082a7f277c626ca216eb6dd0590efc9900" translate="yes" xml:space="preserve">
          <source>If the line is not open and has never been opened, it returns the default format. The default format is an implementation specific audio format, or, if the &lt;code&gt;DataLine.Info&lt;/code&gt; object, which was used to retrieve this &lt;code&gt;DataLine&lt;/code&gt;, specifies at least one fully qualified audio format, the last one will be used as the default format. Opening the line with a specific audio format (e.g. &lt;a href=&quot;sourcedataline#open-javax.sound.sampled.AudioFormat-&quot;&gt;&lt;code&gt;SourceDataLine.open(AudioFormat)&lt;/code&gt;&lt;/a&gt;) will override the default format.</source>
          <target state="translated">ラインが開いておらず、一度も開かれていない場合は、デフォルトのフォーマットを返します。デフォルト形式は実装固有のオーディオ形式です。または、この &lt;code&gt;DataLine&lt;/code&gt; の取得に使用された &lt;code&gt;DataLine.Info&lt;/code&gt; オブジェクトが少なくとも1つの完全修飾オーディオ形式を指定している場合、最後の形式がデフォルト形式として使用されます。特定のオーディオ形式（例：&lt;a href=&quot;sourcedataline#open-javax.sound.sampled.AudioFormat-&quot;&gt; &lt;code&gt;SourceDataLine.open(AudioFormat)&lt;/code&gt; &lt;/a&gt;）でラインを開くと、デフォルトの形式が上書きされます。</target>
        </trans-unit>
        <trans-unit id="7863f26128f8bba0e665024d8f8516c082ac4867" translate="yes" xml:space="preserve">
          <source>If the list fits in the specified array with room to spare (i.e., the array has more elements than the list), the element in the array immediately following the end of the collection is set to &lt;code&gt;null&lt;/code&gt;. (This is useful in determining the length of the list</source>
          <target state="translated">リストが指定された配列に収まり、余裕がある場合（つまり、配列にリストより多くの要素がある場合）、コレクションの最後の直後の配列の要素は &lt;code&gt;null&lt;/code&gt; に設定されます。（これはリストの長さを決定するのに役立ちます</target>
        </trans-unit>
        <trans-unit id="9d2a9e6acfe01f48880cc127c76590e8af39df2a" translate="yes" xml:space="preserve">
          <source>If the list fits in the specified array with room to spare (i.e., the array has more elements than the list), the element in the array immediately following the end of the list is set to &lt;code&gt;null&lt;/code&gt;. (This is useful in determining the length of the list</source>
          <target state="translated">リストが指定された配列に収まり、余裕がある場合（つまり、配列にリストより多くの要素がある場合）、リストの最後の直後の配列の要素は &lt;code&gt;null&lt;/code&gt; に設定されます。（これはリストの長さを決定するのに役立ちます</target>
        </trans-unit>
        <trans-unit id="e2a6a2c57017a029e9ebb7681d955085f7ded61a" translate="yes" xml:space="preserve">
          <source>If the list is an instance of &lt;a href=&quot;randomaccess&quot;&gt;&lt;code&gt;RandomAccess&lt;/code&gt;&lt;/a&gt; then the default implementation creates a spliterator that traverses elements by invoking the method &lt;a href=&quot;#get(int)&quot;&gt;&lt;code&gt;get(int)&lt;/code&gt;&lt;/a&gt;. If such invocation results or would result in an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; then the spliterator will &lt;em&gt;fail-fast&lt;/em&gt; and throw a &lt;code&gt;ConcurrentModificationException&lt;/code&gt;. If the list is also an instance of &lt;a href=&quot;abstractlist&quot;&gt;&lt;code&gt;AbstractList&lt;/code&gt;&lt;/a&gt; then the spliterator will use the list's &lt;a href=&quot;abstractlist#modCount&quot;&gt;&lt;code&gt;modCount&lt;/code&gt;&lt;/a&gt; field to provide additional &lt;em&gt;fail-fast&lt;/em&gt; behavior.</source>
          <target state="translated">If the list is an instance of &lt;a href=&quot;randomaccess&quot;&gt; &lt;code&gt;RandomAccess&lt;/code&gt; &lt;/a&gt; then the default implementation creates a spliterator that traverses elements by invoking the method &lt;a href=&quot;#get(int)&quot;&gt; &lt;code&gt;get(int)&lt;/code&gt; &lt;/a&gt;. If such invocation results or would result in an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; then the spliterator will &lt;em&gt;fail-fast&lt;/em&gt; and throw a &lt;code&gt;ConcurrentModificationException&lt;/code&gt; . If the list is also an instance of &lt;a href=&quot;abstractlist&quot;&gt; &lt;code&gt;AbstractList&lt;/code&gt; &lt;/a&gt; then the spliterator will use the list's &lt;a href=&quot;abstractlist#modCount&quot;&gt; &lt;code&gt;modCount&lt;/code&gt; &lt;/a&gt; field to provide additional &lt;em&gt;fail-fast&lt;/em&gt; behavior.</target>
        </trans-unit>
        <trans-unit id="1b902068f08330a0362c3c251027edac230d4119" translate="yes" xml:space="preserve">
          <source>If the list of assistive technology providers as provided through system property &quot;&lt;code&gt;&lt;span id=&quot;javax.accessibility.assistive_technologies&quot;&gt;javax.accessibility.assistive_technologies&lt;/span&gt;&lt;/code&gt;&quot; is the empty string or contains only &lt;a href=&quot;../../../java.base/java/lang/character#isWhitespace(int)&quot;&gt;white space&lt;/a&gt; characters it is ignored. All other errors are handled via an AWTError exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1566f18ef0180d3aac88323daa9341914ba885e6" translate="yes" xml:space="preserve">
          <source>If the list's list-iterator does not support the &lt;code&gt;set&lt;/code&gt; operation then an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; will be thrown when replacing the first element.</source>
          <target state="translated">リストのリスト反復子が &lt;code&gt;set&lt;/code&gt; 操作をサポートしていない場合、最初の要素を置き換えるときに &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="4ae175c3216a75f24ee407fdf582572db3c498ef" translate="yes" xml:space="preserve">
          <source>If the listener is registered more than once, perhaps with different filters or callbacks, this method will remove all those registrations.</source>
          <target state="translated">リスナーが複数回登録されている場合、おそらく異なるフィルタやコールバックで登録されている場合、このメソッドはそれらの登録をすべて削除します。</target>
        </trans-unit>
        <trans-unit id="54b665bbf8eb506dbbe12fdda9847f03e69a163c" translate="yes" xml:space="preserve">
          <source>If the literal is empty, nothing is added to the formatter.</source>
          <target state="translated">リテラルが空の場合、フォーマッタには何も追加されません。</target>
        </trans-unit>
        <trans-unit id="5586e5fb737ecf0129eedcffc9670c2876a5d020" translate="yes" xml:space="preserve">
          <source>If the load average is not available, a negative value is returned.</source>
          <target state="translated">負荷平均が利用できない場合は、負の値が返されます。</target>
        </trans-unit>
        <trans-unit id="c80e112fdf053b8009f76cd046e1d1d1382fcec5" translate="yes" xml:space="preserve">
          <source>If the loaded KeyStore's provider extends &lt;code&gt;java.security.AuthProvider&lt;/code&gt;, then the provider's &lt;code&gt;logout&lt;/code&gt; method is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612e3af41a7467295225df330e80d3aa55f31393" translate="yes" xml:space="preserve">
          <source>If the loading of the content handler class would be performed by a classloader that is outside of the delegation chain of the caller, the JVM will need the RuntimePermission &quot;getClassLoader&quot;.</source>
          <target state="translated">コンテンツ・ハンドラ・クラスのロードが、呼び出し元のデリゲーション・チェーンの外にあるクラスローダによって実行される場合、JVMはRuntimePermission &quot;getClassLoader &quot;を必要とします。</target>
        </trans-unit>
        <trans-unit id="1001411e7601e30ddd0e0c79cdc5159c320dbf60" translate="yes" xml:space="preserve">
          <source>If the local part is &lt;code&gt;null&lt;/code&gt; an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. A local part of &quot;&quot; is allowed to preserve compatible behavior with QName 1.0.</source>
          <target state="translated">If the local part is &lt;code&gt;null&lt;/code&gt; an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown. A local part of &quot;&quot; is allowed to preserve compatible behavior with QName 1.0.</target>
        </trans-unit>
        <trans-unit id="2a740773690bece4f01892057f26d0f5a3505d90" translate="yes" xml:space="preserve">
          <source>If the locale contains &quot;nu&quot; (numbers) and/or &quot;rg&quot; (region override) &lt;a href=&quot;../util/locale#def_locale_extension&quot;&gt;Unicode extensions&lt;/a&gt;, the decimal digits, and/or the country used for formatting are overridden. If both &quot;nu&quot; and &quot;rg&quot; are specified, the decimal digits from the &quot;nu&quot; extension supersedes the implicit one from the &quot;rg&quot; extension.</source>
          <target state="translated">If the locale contains &quot;nu&quot; (numbers) and/or &quot;rg&quot; (region override) &lt;a href=&quot;../util/locale#def_locale_extension&quot;&gt;Unicode extensions&lt;/a&gt;, the decimal digits, and/or the country used for formatting are overridden. If both &quot;nu&quot; and &quot;rg&quot; are specified, the decimal digits from the &quot;nu&quot; extension supersedes the implicit one from the &quot;rg&quot; extension.</target>
        </trans-unit>
        <trans-unit id="cfd944ef78cfcaae58d9f89252c3afdb5b581936" translate="yes" xml:space="preserve">
          <source>If the locale contains &quot;rg&quot; (region override) &lt;a href=&quot;../util/locale#def_locale_extension&quot;&gt;Unicode extension&lt;/a&gt;, the symbols are overridden for the designated region.</source>
          <target state="translated">If the locale contains &quot;rg&quot; (region override) &lt;a href=&quot;../util/locale#def_locale_extension&quot;&gt;Unicode extension&lt;/a&gt;, the symbols are overridden for the designated region.</target>
        </trans-unit>
        <trans-unit id="8dd82e30f2bfd2487deb48a3cd1ca525cc48b4ce" translate="yes" xml:space="preserve">
          <source>If the locale contains the &quot;rg&quot; (region override) &lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt;Unicode extensions&lt;/a&gt;, the formatting pattern is overridden with the one appropriate for the region.</source>
          <target state="translated">If the locale contains the &quot;rg&quot; (region override) &lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt;Unicode extensions&lt;/a&gt;, the formatting pattern is overridden with the one appropriate for the region.</target>
        </trans-unit>
        <trans-unit id="5d4e75ab16c0169470cb2e36bf63130f893a3f1a" translate="yes" xml:space="preserve">
          <source>If the locale contains the time zone with &quot;tz&quot; &lt;a href=&quot;locale#def_locale_extension&quot;&gt;Unicode extension&lt;/a&gt;, and time zone hasn't been given explicitly, time zone in the locale is used.</source>
          <target state="translated">If the locale contains the time zone with &quot;tz&quot; &lt;a href=&quot;locale#def_locale_extension&quot;&gt;Unicode extension&lt;/a&gt;, and time zone hasn't been given explicitly, time zone in the locale is used.</target>
        </trans-unit>
        <trans-unit id="13aecb53d0af72473665627440df7f59b9fad86f" translate="yes" xml:space="preserve">
          <source>If the locale contains the time zone with &quot;tz&quot; &lt;a href=&quot;locale#def_locale_extension&quot;&gt;Unicode extension&lt;/a&gt;, that time zone is used instead.</source>
          <target state="translated">If the locale contains the time zone with &quot;tz&quot; &lt;a href=&quot;locale#def_locale_extension&quot;&gt;Unicode extension&lt;/a&gt;, that time zone is used instead.</target>
        </trans-unit>
        <trans-unit id="fb7426e4160f2b1fe5d7220ffa07b99d6ba7024b" translate="yes" xml:space="preserve">
          <source>If the locale is exactly &lt;code&gt;Locale(&quot;no&quot;, &quot;NO&quot;, &quot;NY&quot;)&lt;/code&gt;, it is first converted to &lt;code&gt;Locale(&quot;nn&quot;, &quot;NO&quot;)&lt;/code&gt; and then the above procedure is followed.</source>
          <target state="translated">ロケールが正確に &lt;code&gt;Locale(&quot;no&quot;, &quot;NO&quot;, &quot;NY&quot;)&lt;/code&gt; 場合、最初に &lt;code&gt;Locale(&quot;nn&quot;, &quot;NO&quot;)&lt;/code&gt; 変換されてから、上記の手順に従います。</target>
        </trans-unit>
        <trans-unit id="c64c3966e3d4abb3a14f499628ce198c1164f906" translate="yes" xml:space="preserve">
          <source>If the lock is acquired by the current thread then the lock hold count is set to one.</source>
          <target state="translated">現在のスレッドでロックが取得された場合、ロックホールド数は1に設定されます。</target>
        </trans-unit>
        <trans-unit id="822233d82712d166731e9dcca011715ab8bbe1d8" translate="yes" xml:space="preserve">
          <source>If the lock is acquired then the value &lt;code&gt;true&lt;/code&gt; is returned and the lock hold count is set to one.</source>
          <target state="translated">ロックが取得されると、値 &lt;code&gt;true&lt;/code&gt; が返され、ロック保持カウントが1に設定されます。</target>
        </trans-unit>
        <trans-unit id="243ddf2fd70f54733945fc92a2c6210895bc2219" translate="yes" xml:space="preserve">
          <source>If the lock is acquired then the value &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">ロックが取得されると、値 &lt;code&gt;true&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="e267ec383786f22b490efc4cbeb5a239987b49eb" translate="yes" xml:space="preserve">
          <source>If the lock is available this method returns immediately with the value &lt;code&gt;true&lt;/code&gt;. If the lock is not available then the current thread becomes disabled for thread scheduling purposes and lies dormant until one of three things happens:</source>
          <target state="translated">ロックが使用可能な場合、このメソッドは値 &lt;code&gt;true&lt;/code&gt; ですぐに戻ります。ロックが利用できない場合、現在のスレッドはスレッドスケジューリングの目的で無効になり、次の3つのいずれかが発生するまで待機します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
