<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="07ece2acfb17b36150e2dd4f7e477c94e9f4a76d" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its &lt;code&gt;checkRead&lt;/code&gt; method is called with the pathname of the &lt;code&gt;file&lt;/code&gt; argument as its argument to see if read access to the file is allowed. If the mode allows writing, the security manager's &lt;code&gt;checkWrite&lt;/code&gt; method is also called with the path argument to see if write access to the file is allowed.</source>
          <target state="translated">セキュリティーマネージャーがある場合、ファイルへの読み取りアクセスが許可されているかどうかを確認するために、引数として &lt;code&gt;file&lt;/code&gt; 引数のパス名を指定して、その &lt;code&gt;checkRead&lt;/code&gt; メソッドが呼び出されます。モードが書き込みを許可している場合、セキュリティマネージャーの &lt;code&gt;checkWrite&lt;/code&gt; メソッドもpath引数を指定して呼び出され、ファイルへの書き込みアクセスが許可されているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="31b66585dd5ded5b4cf8149540abcf6d797f5618" translate="yes" xml:space="preserve">
          <source>If there is a security manager, its checkPermission method is called with a PropertyPermission(&quot;user.language&quot;, &quot;write&quot;) permission before the default locale is changed.</source>
          <target state="translated">セキュリティマネージャがある場合、デフォルトのロケールが変更される前に、そのcheckPermissionメソッドがPropertyPermission(&quot;user.language&quot;,&quot;write&quot;)パーミッションで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8825d17638da814f3b0c11ec345292fdd5696887" translate="yes" xml:space="preserve">
          <source>If there is a security manager, the &lt;a href=&quot;../lang/securitymanager#checkSecurityAccess(java.lang.String)&quot;&gt;&lt;code&gt;SecurityManager.checkSecurityAccess(java.lang.String)&lt;/code&gt;&lt;/a&gt; method is called with the &lt;code&gt;&quot;insertProvider&quot;&lt;/code&gt; permission target name to see if it's ok to add a new provider. If this permission check is denied, &lt;code&gt;checkSecurityAccess&lt;/code&gt; is called again with the &lt;code&gt;&quot;insertProvider.&quot;+provider.getName()&lt;/code&gt; permission target name. If both checks are denied, a &lt;code&gt;SecurityException&lt;/code&gt; is thrown.</source>
          <target state="translated">If there is a security manager, the &lt;a href=&quot;../lang/securitymanager#checkSecurityAccess(java.lang.String)&quot;&gt; &lt;code&gt;SecurityManager.checkSecurityAccess(java.lang.String)&lt;/code&gt; &lt;/a&gt; method is called with the &lt;code&gt;&quot;insertProvider&quot;&lt;/code&gt; permission target name to see if it's ok to add a new provider. If this permission check is denied, &lt;code&gt;checkSecurityAccess&lt;/code&gt; is called again with the &lt;code&gt;&quot;insertProvider.&quot;+provider.getName()&lt;/code&gt; permission target name. If both checks are denied, a &lt;code&gt;SecurityException&lt;/code&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="bd97e3f8323cfe0de6530417bd6292cf0553996a" translate="yes" xml:space="preserve">
          <source>If there is a security manager, the &lt;a href=&quot;../lang/securitymanager#checkSecurityAccess-java.lang.String-&quot;&gt;&lt;code&gt;SecurityManager.checkSecurityAccess(java.lang.String)&lt;/code&gt;&lt;/a&gt; method is called with the &lt;code&gt;&quot;insertProvider&quot;&lt;/code&gt; permission target name to see if it's ok to add a new provider. If this permission check is denied, &lt;code&gt;checkSecurityAccess&lt;/code&gt; is called again with the &lt;code&gt;&quot;insertProvider.&quot;+provider.getName()&lt;/code&gt; permission target name. If both checks are denied, a &lt;code&gt;SecurityException&lt;/code&gt; is thrown.</source>
          <target state="translated">セキュリティマネージャーがある場合、 &lt;code&gt;&quot;insertProvider&quot;&lt;/code&gt; 権限のターゲット名を指定して&lt;a href=&quot;../lang/securitymanager#checkSecurityAccess-java.lang.String-&quot;&gt; &lt;code&gt;SecurityManager.checkSecurityAccess(java.lang.String)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、新しいプロバイダーを追加してもよいかどうかを確認します。この権限チェックが拒否された &lt;code&gt;checkSecurityAccess&lt;/code&gt; 、 &lt;code&gt;&quot;insertProvider.&quot;+provider.getName()&lt;/code&gt; 権限ターゲット名でcheckSecurityAccessが再度呼び出されます。両方のチェックが拒否された場合、 &lt;code&gt;SecurityException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="9b31a15f0a361ace0e86d27297cb7544846a2131" translate="yes" xml:space="preserve">
          <source>If there is a security manager, then the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;RuntimePermission(&quot;getStackTrace&quot;)&lt;/code&gt; permission as well as &lt;code&gt;RuntimePermission(&quot;modifyThreadGroup&quot;)&lt;/code&gt; permission to see if it is ok to get the stack trace of all threads.</source>
          <target state="translated">セキュリティマネージャーがある場合、セキュリティマネージャーの &lt;code&gt;checkPermission&lt;/code&gt; メソッドは、 &lt;code&gt;RuntimePermission(&quot;getStackTrace&quot;)&lt;/code&gt; 権限と &lt;code&gt;RuntimePermission(&quot;modifyThreadGroup&quot;)&lt;/code&gt; 権限で呼び出され、すべてのスレッドのスタックトレースを取得してもよいかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="3774f41cca13a332ee025b0313241e9bb0d0309d" translate="yes" xml:space="preserve">
          <source>If there is a security manager, this method calls its &lt;code&gt;checkListen&lt;/code&gt; method with the &lt;code&gt;port&lt;/code&gt; argument as its argument to ensure the operation is allowed. This could result in a SecurityException. The &lt;code&gt;backlog&lt;/code&gt; argument is the requested maximum number of pending connections on the socket. Its exact semantics are implementation specific. In particular, an implementation may impose a maximum length or may choose to ignore the parameter altogther. The value provided should be greater than &lt;code&gt;0&lt;/code&gt;. If it is less than or equal to &lt;code&gt;0&lt;/code&gt;, then an implementation specific default will be used.</source>
          <target state="translated">セキュリティーマネージャーがある場合、このメソッドは、引数として &lt;code&gt;port&lt;/code&gt; 引数を指定して &lt;code&gt;checkListen&lt;/code&gt; メソッドを呼び出し、操作が許可されていることを確認します。これにより、SecurityExceptionが発生する可能性があります。 &lt;code&gt;backlog&lt;/code&gt; 引数は、ソケット上の保留中の接続の要求の最大数です。その正確なセマンティクスは実装固有です。特に、実装では最大長を課したり、パラメータをすべて無視したりする場合があります。指定する値は &lt;code&gt;0&lt;/code&gt; より大きい必要があります。 &lt;code&gt;0&lt;/code&gt; 以下の場合、実装固有のデフォルトが使用されます。</target>
        </trans-unit>
        <trans-unit id="c49df9821bd54b67f07151d3efea906c51666fdf" translate="yes" xml:space="preserve">
          <source>If there is a security manager, this method first calls its &lt;code&gt;checkConnect&lt;/code&gt; method with the hostname and &lt;code&gt;-1&lt;/code&gt; as its arguments to see if the calling code is allowed to know the hostname for this IP address, i.e., to connect to the host. If the operation is not allowed, it will return the textual representation of the IP address.</source>
          <target state="translated">セキュリティマネージャーがある場合、このメソッドはまず、引数としてホスト名と &lt;code&gt;-1&lt;/code&gt; を指定して &lt;code&gt;checkConnect&lt;/code&gt; メソッドを呼び出し、呼び出しコードがこのIPアドレスのホスト名を認識できるかどうか、つまりホストに接続できるかどうかを確認します。操作が許可されていない場合は、IPアドレスのテキスト表現を返します。</target>
        </trans-unit>
        <trans-unit id="999933e43cb5d7cfb6601989d19930a2a9186ce5" translate="yes" xml:space="preserve">
          <source>If there is a security manager, this method first calls its &lt;code&gt;checkMulticast&lt;/code&gt; method with the &lt;code&gt;mcastaddr&lt;/code&gt; argument as its argument.</source>
          <target state="translated">セキュリティーマネージャーが存在する場合、このメソッドは最初に &lt;code&gt;mcastaddr&lt;/code&gt; 引数を引数として &lt;code&gt;checkMulticast&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="1e8e454b01623ff9ba56024fdcbb8a6e018247b0" translate="yes" xml:space="preserve">
          <source>If there is a security manager, this method first calls the security manager's &lt;code&gt;checkCreateClassLoader&lt;/code&gt; method to ensure creation of a class loader is allowed.</source>
          <target state="translated">セキュリティーマネージャーがある場合、このメソッドは最初にセキュリティーマネージャーの &lt;code&gt;checkCreateClassLoader&lt;/code&gt; メソッドを呼び出して、クラスローダーの作成が許可されていることを確認します。</target>
        </trans-unit>
        <trans-unit id="799f9e285d27c3aa5aa412489ee33ebf55b4583d" translate="yes" xml:space="preserve">
          <source>If there is a security manager, this method first calls the security manager's &lt;code&gt;checkSetFactory&lt;/code&gt; method to ensure the operation is allowed. This could result in a &lt;code&gt;SecurityException&lt;/code&gt;.</source>
          <target state="translated">If there is a security manager, this method first calls the security manager's &lt;code&gt;checkSetFactory&lt;/code&gt; method to ensure the operation is allowed. This could result in a &lt;code&gt;SecurityException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="532913bfc0592ca00219b6f161a58e7676757794" translate="yes" xml:space="preserve">
          <source>If there is a security manager, this method first calls the security manager's &lt;code&gt;checkSetFactory&lt;/code&gt; method to ensure the operation is allowed. This could result in a SecurityException.</source>
          <target state="translated">セキュリティーマネージャーがある場合、このメソッドは最初にセキュリティーマネージャーの &lt;code&gt;checkSetFactory&lt;/code&gt; メソッドを呼び出して、操作が許可されていることを確認します。これにより、SecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="b85ee089e6901857f30792e22767b9407897d233" translate="yes" xml:space="preserve">
          <source>If there is a security manager, this method first calls the security manager's &lt;code&gt;checkSetFactory&lt;/code&gt; method. This could result in a SecurityException.</source>
          <target state="translated">If there is a security manager, this method first calls the security manager's &lt;code&gt;checkSetFactory&lt;/code&gt; method. This could result in a SecurityException.</target>
        </trans-unit>
        <trans-unit id="d0319ca077ddde1bcf2e693ddcb559868dc66ee3" translate="yes" xml:space="preserve">
          <source>If there is a security manager, this method first performs some security checks. First, if &lt;code&gt;p.getAddress().isMulticastAddress()&lt;/code&gt; is true, this method calls the security manager's &lt;code&gt;checkMulticast&lt;/code&gt; method with &lt;code&gt;p.getAddress()&lt;/code&gt; and &lt;code&gt;ttl&lt;/code&gt; as its arguments. If the evaluation of that expression is false, this method instead calls the security manager's &lt;code&gt;checkConnect&lt;/code&gt; method with arguments &lt;code&gt;p.getAddress().getHostAddress()&lt;/code&gt; and &lt;code&gt;p.getPort()&lt;/code&gt;. Each call to a security manager method could result in a SecurityException if the operation is not allowed.</source>
          <target state="translated">セキュリティーマネージャーがある場合、このメソッドは最初にいくつかのセキュリティーチェックを実行します。まず、 &lt;code&gt;p.getAddress().isMulticastAddress()&lt;/code&gt; がtrueの場合、このメソッドは &lt;code&gt;p.getAddress()&lt;/code&gt; と &lt;code&gt;ttl&lt;/code&gt; を引数としてセキュリティマネージャーの &lt;code&gt;checkMulticast&lt;/code&gt; メソッドを呼び出します。その式の評価がfalseの場合、このメソッドは代わりに引数 &lt;code&gt;p.getAddress().getHostAddress()&lt;/code&gt; および &lt;code&gt;p.getPort()&lt;/code&gt; を使用してセキュリティマネージャーの &lt;code&gt;checkConnect&lt;/code&gt; メソッドを呼び出します。操作が許可されていない場合、セキュリティマネージャメソッドを呼び出すたびにSecurityExceptionが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="63982b929f4b12662afdfb3691962ff7e8ce5aaa" translate="yes" xml:space="preserve">
          <source>If there is a security manger, its &lt;code&gt;checkPermission&lt;/code&gt; method will be invoked with a &lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt; permission; this could result in a &lt;code&gt;SecurityException&lt;/code&gt;. The implementation of this method may also perform further security checks to verify that the calling context has permission to connect to all of the URLs in the codebase URL path.</source>
          <target state="translated">If there is a security manger, its &lt;code&gt;checkPermission&lt;/code&gt; method will be invoked with a &lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt; permission; this could result in a &lt;code&gt;SecurityException&lt;/code&gt; . The implementation of this method may also perform further security checks to verify that the calling context has permission to connect to all of the URLs in the codebase URL path.</target>
        </trans-unit>
        <trans-unit id="bf4410fbd9dbb3855c2a0c2fc2a80606e063a5a3" translate="yes" xml:space="preserve">
          <source>If there is a security manger, its &lt;code&gt;checkPermission&lt;/code&gt; method will be invoked with a &lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt; permission; this could result in a &lt;code&gt;SecurityException&lt;/code&gt;. The provider implementation of this method may also perform further security checks to verify that the calling context has permission to connect to all of the URLs in the codebase URL path.</source>
          <target state="translated">If there is a security manger, its &lt;code&gt;checkPermission&lt;/code&gt; method will be invoked with a &lt;code&gt;RuntimePermission(&quot;getClassLoader&quot;)&lt;/code&gt; permission; this could result in a &lt;code&gt;SecurityException&lt;/code&gt; . The provider implementation of this method may also perform further security checks to verify that the calling context has permission to connect to all of the URLs in the codebase URL path.</target>
        </trans-unit>
        <trans-unit id="696cdd286fb1f9966bf04867ac93a074e1dded21" translate="yes" xml:space="preserve">
          <source>If there is a way to convert &lt;em&gt;opendata(J)&lt;/em&gt; back to &lt;em&gt;J&lt;/em&gt; then we say that &lt;em&gt;J&lt;/em&gt; is &lt;em&gt;reconstructible&lt;/em&gt;. All method parameters in an MXBean interface must be reconstructible, because when the MXBean framework is invoking a method it will need to convert those parameters from &lt;em&gt;opendata(J)&lt;/em&gt; to &lt;em&gt;J&lt;/em&gt;. In a proxy generated by &lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt;&lt;/a&gt;, it is the return values of the methods in the MXBean interface that must be reconstructible.</source>
          <target state="translated">If there is a way to convert &lt;em&gt;opendata(J)&lt;/em&gt; back to &lt;em&gt;J&lt;/em&gt; then we say that &lt;em&gt;J&lt;/em&gt; is &lt;em&gt;reconstructible&lt;/em&gt;. All method parameters in an MXBean interface must be reconstructible, because when the MXBean framework is invoking a method it will need to convert those parameters from &lt;em&gt;opendata(J)&lt;/em&gt; to &lt;em&gt;J&lt;/em&gt;. In a proxy generated by &lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; &lt;/a&gt;, it is the return values of the methods in the MXBean interface that must be reconstructible.</target>
        </trans-unit>
        <trans-unit id="f00389ed8595939dc871f12e3fcfe41a5531ae8a" translate="yes" xml:space="preserve">
          <source>If there is a way to convert &lt;em&gt;opendata(J)&lt;/em&gt; back to &lt;em&gt;J&lt;/em&gt; then we say that &lt;em&gt;J&lt;/em&gt; is &lt;em&gt;reconstructible&lt;/em&gt;. All method parameters in an MXBean interface must be reconstructible, because when the MXBean framework is invoking a method it will need to convert those parameters from &lt;em&gt;opendata(J)&lt;/em&gt; to &lt;em&gt;J&lt;/em&gt;. In a proxy generated by &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt;&lt;/a&gt;, it is the return values of the methods in the MXBean interface that must be reconstructible.</source>
          <target state="translated">&lt;em&gt;opendata（J）&lt;/em&gt;を&lt;em&gt;Jに&lt;/em&gt;戻す方法がある場合、&lt;em&gt;J&lt;/em&gt;は&lt;em&gt;再構築可能である&lt;/em&gt;と言います。MXBeanフレームワークがメソッドを呼び出すときに、これらのパラメーターを&lt;em&gt;opendata（J）&lt;/em&gt;から&lt;em&gt;J&lt;/em&gt;に変換する必要があるため、MXBeanインターフェースのすべてのメソッドパラメーターは再構築可能である必要があります。&lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; &lt;/a&gt;によって生成されたプロキシでは、再構築可能でなければならないのは、MXBeanインターフェースのメソッドの戻り値です。</target>
        </trans-unit>
        <trans-unit id="b80859daf00685681791770cf08af14640ed386a" translate="yes" xml:space="preserve">
          <source>If there is an embedded exception, and if the SAXException has no detail message of its own, this method will return the detail message from the embedded exception.</source>
          <target state="translated">埋め込まれた例外があり、SAXExceptionにそれ自身の詳細メッセージがない場合、このメソッドは埋め込まれた例外の詳細メッセージを返します。</target>
        </trans-unit>
        <trans-unit id="d2e96a33766dec8129dace08a450401d0d9f28dc" translate="yes" xml:space="preserve">
          <source>If there is an error while loading or scaling an image, that image is considered to have finished loading. Use the &lt;code&gt;isErrorAny&lt;/code&gt; and &lt;code&gt;isErrorID&lt;/code&gt; methods to check for errors.</source>
          <target state="translated">If there is an error while loading or scaling an image, that image is considered to have finished loading. Use the &lt;code&gt;isErrorAny&lt;/code&gt; and &lt;code&gt;isErrorID&lt;/code&gt; methods to check for errors.</target>
        </trans-unit>
        <trans-unit id="a5644f977cf03bc3dcfd54d5e5282d96e0e8e7ab" translate="yes" xml:space="preserve">
          <source>If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the &lt;code&gt;isErrorAny&lt;/code&gt; and &lt;code&gt;isErrorID&lt;/code&gt; methods to check for errors.</source>
          <target state="translated">If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the &lt;code&gt;isErrorAny&lt;/code&gt; and &lt;code&gt;isErrorID&lt;/code&gt; methods to check for errors.</target>
        </trans-unit>
        <trans-unit id="dac5311ab03433886854f19241b442e660113c11" translate="yes" xml:space="preserve">
          <source>If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the &lt;code&gt;isErrorAny&lt;/code&gt; or &lt;code&gt;isErrorID&lt;/code&gt; methods to check for errors.</source>
          <target state="translated">If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the &lt;code&gt;isErrorAny&lt;/code&gt; or &lt;code&gt;isErrorID&lt;/code&gt; methods to check for errors.</target>
        </trans-unit>
        <trans-unit id="46881d0768f79ef8afcf68abaa71937fc7171ad1" translate="yes" xml:space="preserve">
          <source>If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the &lt;code&gt;statusID&lt;/code&gt;, &lt;code&gt;isErrorID&lt;/code&gt;, and &lt;code&gt;isErrorAny&lt;/code&gt; methods to check for errors.</source>
          <target state="translated">If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the &lt;code&gt;statusID&lt;/code&gt; , &lt;code&gt;isErrorID&lt;/code&gt; , and &lt;code&gt;isErrorAny&lt;/code&gt; methods to check for errors.</target>
        </trans-unit>
        <trans-unit id="b8ec246e3bef63fa40b6bd7a53890c4d682a9eac" translate="yes" xml:space="preserve">
          <source>If there is an existing owner different from the argument &lt;code&gt;owner&lt;/code&gt;, that owner is notified that it no longer holds ownership of the clipboard contents via an invocation of &lt;code&gt;ClipboardOwner.lostOwnership()&lt;/code&gt; on that owner. An implementation of &lt;code&gt;setContents()&lt;/code&gt; is free not to invoke &lt;code&gt;lostOwnership()&lt;/code&gt; directly from this method. For example, &lt;code&gt;lostOwnership()&lt;/code&gt; may be invoked later on a different thread. The same applies to &lt;code&gt;FlavorListener&lt;/code&gt;s registered on this clipboard.</source>
          <target state="translated">If there is an existing owner different from the argument &lt;code&gt;owner&lt;/code&gt; , that owner is notified that it no longer holds ownership of the clipboard contents via an invocation of &lt;code&gt;ClipboardOwner.lostOwnership()&lt;/code&gt; on that owner. An implementation of &lt;code&gt;setContents()&lt;/code&gt; is free not to invoke &lt;code&gt;lostOwnership()&lt;/code&gt; directly from this method. For example, &lt;code&gt;lostOwnership()&lt;/code&gt; may be invoked later on a different thread. The same applies to &lt;code&gt;FlavorListener&lt;/code&gt; s registered on this clipboard.</target>
        </trans-unit>
        <trans-unit id="9bde7f17c2deabb0575bd222ed2f85f576a5ede8" translate="yes" xml:space="preserve">
          <source>If there is any error (say, I/O error or format error) during the reading process of the KeyTab file, a saved result should be returned. If there is no saved result (say, this is the first time this method is called, or, all previous read attempts failed), an empty array should be returned. This can make sure the result is not drastically changed during the (probably slow) update of the keytab file.</source>
          <target state="translated">KeyTabファイルの読み込み処理中にエラー(I/Oエラーやフォーマットエラーなど)が発生した場合は、保存された結果が返されなければなりません。保存された結果がない場合(例えば、このメソッドを呼び出すのが初めてだったり、以前の読み込みの試みがすべて失敗した場合)、空の配列が返されます。これにより、keytabファイルの(おそらく遅い)更新中に結果が大幅に変更されないことを確認することができます。</target>
        </trans-unit>
        <trans-unit id="20616256852615e42dbadb55ba5815746032d11a" translate="yes" xml:space="preserve">
          <source>If there is any error (say, I/O error or format error) during the reading process of the keytab file, a saved result should be returned. If there is no saved result (say, this is the first time this method is called, or, all previous read attempts failed), an empty array should be returned. This can make sure the result is not drastically changed during the (probably slow) update of the keytab file.</source>
          <target state="translated">keytabファイルの読み込み処理中にエラー(I/Oエラーやフォーマット・エラーなど)が発生した場合は、保存された結果を返す必要があります。保存された結果がない場合(例えば、このメソッドが呼び出されたのが初めてだったり、以前の読み込みに失敗した場合など)、空の配列が返されます。これにより、keytabファイルの(おそらく遅い)更新中に結果が大幅に変更されないことを確認することができます。</target>
        </trans-unit>
        <trans-unit id="e2521f70370beeb7a65247f5ecdb6409da533aa1" translate="yes" xml:space="preserve">
          <source>If there is any inherited context, then it has already been copied into the &lt;code&gt;URL&lt;/code&gt; argument.</source>
          <target state="translated">継承されたコンテキストがある場合、それはすでに &lt;code&gt;URL&lt;/code&gt; 引数にコピーされています。</target>
        </trans-unit>
        <trans-unit id="1538c9e56cc4a72171a55abc846e5acdad6ad5c5" translate="yes" xml:space="preserve">
          <source>If there is at least one getter and every getter has a convertible type, then &lt;em&gt;opentype(J)&lt;/em&gt; is a &lt;code&gt;
      CompositeType&lt;/code&gt; with one item for every getter. If the getter is</source>
          <target state="translated">If there is at least one getter and every getter has a convertible type, then &lt;em&gt;opentype(J)&lt;/em&gt; is a &lt;code&gt; CompositeType&lt;/code&gt; with one item for every getter. If the getter is</target>
        </trans-unit>
        <trans-unit id="ce492db546ed8f744751a5952cc84069d57cdf28" translate="yes" xml:space="preserve">
          <source>If there is at least one getter and every getter has a convertible type, then &lt;em&gt;opentype(J)&lt;/em&gt; is a &lt;code&gt;CompositeType&lt;/code&gt; with one item for every getter. If the getter is</source>
          <target state="translated">少なくとも1つのゲッターがあり、すべてのゲッターが変換可能なタイプを持っている場合、&lt;em&gt;opentype（J）&lt;/em&gt;は、すべてのゲッターに対して1つのアイテムを持つ &lt;code&gt;CompositeType&lt;/code&gt; です。ゲッターが</target>
        </trans-unit>
        <trans-unit id="f0a5ce38d1565c12f161531f62c2ed657aa770d3" translate="yes" xml:space="preserve">
          <source>If there is exactly one such interface, or if there is one such interface that is a subinterface of all the others, then the object is an MXBean. The interface in question is the &lt;em&gt;MXBean interface&lt;/em&gt;. In the example above, the MXBean interface is &lt;code&gt;MemoryPoolMXBean&lt;/code&gt;.</source>
          <target state="translated">そのようなインターフェースが1つだけある場合、または他のすべてのサブインターフェースであるインターフェースが1つある場合、オブジェクトはMXBeanです。問題のインターフェースは&lt;em&gt;MXBeanインターフェース&lt;/em&gt;です。上記の例では、MXBeanインターフェースは &lt;code&gt;MemoryPoolMXBean&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2719aa3eb5a7fffd1ca38e949931f67f1421af57" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;serviceURL&lt;/code&gt;, there must be a user-provided &lt;code&gt;RMIServerImpl&lt;/code&gt;. If the &lt;a href=&quot;rmiserverimpl#toStub--&quot;&gt;&lt;code&gt;toStub&lt;/code&gt;&lt;/a&gt; method on this object returns an instance of &lt;a href=&quot;/openjdk~8_web/javax/rmi/corba/stub&quot;&gt;&lt;code&gt;Stub&lt;/code&gt;&lt;/a&gt;, then the connector server will generate a &lt;code&gt;JMXServiceURL&lt;/code&gt; using the &lt;code&gt;iiop&lt;/code&gt; form above. Otherwise, it will generate a &lt;code&gt;JMXServiceURL&lt;/code&gt; using the &lt;code&gt;rmi&lt;/code&gt; form.</source>
          <target state="translated">&lt;code&gt;serviceURL&lt;/code&gt; がない場合は、ユーザー提供の &lt;code&gt;RMIServerImpl&lt;/code&gt; が必要です。場合&lt;a href=&quot;rmiserverimpl#toStub--&quot;&gt; &lt;code&gt;toStub&lt;/code&gt; の&lt;/a&gt;このオブジェクトのメソッドがインスタンス返す&lt;a href=&quot;/openjdk~8_web/javax/rmi/corba/stub&quot;&gt; &lt;code&gt;Stub&lt;/code&gt; &lt;/a&gt;、次いで、コネクタサーバーは、生成され &lt;code&gt;JMXServiceURL&lt;/code&gt; 使用して &lt;code&gt;iiop&lt;/code&gt; 上記フォーム。それ以外の場合は、 &lt;code&gt;rmi&lt;/code&gt; フォームを使用して &lt;code&gt;JMXServiceURL&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="8a2bf9ecdfc5d61123d9e4fc43dc1ffa56add6c1" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;serviceURL&lt;/code&gt;, there must be a user-provided &lt;code&gt;RMIServerImpl&lt;/code&gt;. The connector server will generate a &lt;code&gt;JMXServiceURL&lt;/code&gt; using the &lt;code&gt;rmi&lt;/code&gt; form.</source>
          <target state="translated">If there is no &lt;code&gt;serviceURL&lt;/code&gt; , there must be a user-provided &lt;code&gt;RMIServerImpl&lt;/code&gt; . The connector server will generate a &lt;code&gt;JMXServiceURL&lt;/code&gt; using the &lt;code&gt;rmi&lt;/code&gt; form.</target>
        </trans-unit>
        <trans-unit id="2cc3dec11f4378075a31721786189ded4db361d5" translate="yes" xml:space="preserve">
          <source>If there is no current set of system properties, a set of system properties is first created and initialized in the same manner as for the &lt;code&gt;getProperties&lt;/code&gt; method.</source>
          <target state="translated">システムプロパティの現在のセットがない場合は、最初にシステムプロパティのセットが作成され、 &lt;code&gt;getProperties&lt;/code&gt; メソッドと同じ方法で初期化されます。</target>
        </trans-unit>
        <trans-unit id="62385658f9c9d30f2326007c7be1947af3806233" translate="yes" xml:space="preserve">
          <source>If there is no display name for the locale then a suitable default must be returned.</source>
          <target state="translated">ロケールの表示名がない場合は、適切なデフォルト値を返さなければなりません。</target>
        </trans-unit>
        <trans-unit id="14d757aed623c13896747a1cb10d2fafe0c24ef5" translate="yes" xml:space="preserve">
          <source>If there is no entry for a particular principal, then the principal is considered to have a null (empty) permission set.</source>
          <target state="translated">特定のプリンシパルのエントリがない場合、そのプリンシパルはヌル (空)のパーミッションセットを持っていると見なされます。</target>
        </trans-unit>
        <trans-unit id="83cc3943509d49fbbe54f8e7d0348cb9ef645fa2" translate="yes" xml:space="preserve">
          <source>If there is no entry in this Access Control List for the specified principal, an empty permission set is returned.</source>
          <target state="translated">指定されたプリンシパルのこのアクセス・コントロール・リストにエントリがない場合、空のパーミッション・セットが返されます。</target>
        </trans-unit>
        <trans-unit id="97ef1aceb0bd9ccbc5a3e085bc385c17a96da05c" translate="yes" xml:space="preserve">
          <source>If there is no index position at which they differ, then the shorter string lexicographically precedes the longer string. In this case, &lt;code&gt;compareTo&lt;/code&gt; returns the difference of the lengths of the strings -- that is, the value:</source>
          <target state="translated">それらが異なるインデックス位置がない場合は、短い文字列が辞書順で長い文字列に先行します。この場合、 &lt;code&gt;compareTo&lt;/code&gt; は文字列の長さの差、つまり値を返します。</target>
        </trans-unit>
        <trans-unit id="a5b86c82cbb33ba85e2cf972377173b04ef65d60" translate="yes" xml:space="preserve">
          <source>If there is no input method or keyboard layout available that supports the requested locale, the current input method or keyboard layout remains selected.</source>
          <target state="translated">要求されたロケールをサポートする入力方式やキーボードレイアウトがない場合は、現在の入力方式やキーボードレイアウトが選択されたままになります。</target>
        </trans-unit>
        <trans-unit id="f38d945bc914e61ae40e4aad1f19fc041a605394" translate="yes" xml:space="preserve">
          <source>If there is no match, then either the first or last index is used, depending on whether the number (X) is too low or too high. If the limit array is not in ascending order, the results of formatting will be incorrect. ChoiceFormat also accepts &lt;code&gt;\u221E&lt;/code&gt; as equivalent to infinity(INF).</source>
          <target state="translated">一致しない場合、数値（X）が小さすぎるか高すぎるかに応じて、最初または最後のインデックスが使用されます。制限配列が昇順でない場合、フォーマットの結果は正しくありません。ChoiceFormatは、 &lt;code&gt;\u221E&lt;/code&gt; u221Eもinfinity（INF）と同等のものとして受け入れます。</target>
        </trans-unit>
        <trans-unit id="2648977b5bfdd7de94f30791f17e5163fa9fa3c2" translate="yes" xml:space="preserve">
          <source>If there is no parent reader set, any attempt to parse or to set or get a feature or property will fail.</source>
          <target state="translated">親リーダが設定されていない場合、機能やプロパティを解析したり、設定したり取得したりしようとすると失敗します。</target>
        </trans-unit>
        <trans-unit id="f3d0e4d2da1282aaec455fc4732cff1c598c3d7c" translate="yes" xml:space="preserve">
          <source>If there is no property with the specified name, if the specified name is empty or &lt;code&gt;null&lt;/code&gt;, or if the property does not have the correct numeric format, then &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">指定された名前のプロパティがない場合、指定された名前が空または &lt;code&gt;null&lt;/code&gt; の場合、またはプロパティの数値形式が正しくない場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="ebec043b114adf3a66c121103ae990378ebe9b9b" translate="yes" xml:space="preserve">
          <source>If there is no property with the specified name, or if the specified name is empty or null, then &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="translated">指定された名前のプロパティがない場合、または指定された名前が空またはnullの場合は、 &lt;code&gt;false&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="217c4e72fc9b4dd43cf1ac4eaa272b71123427a9" translate="yes" xml:space="preserve">
          <source>If there is no such parameter list, the external parameter list is taken to be the empty sequence.</source>
          <target state="translated">そのようなパラメータリストがない場合、外部パラメータリストは空のシーケンスとして扱われます。</target>
        </trans-unit>
        <trans-unit id="62eecfe9a255148d750e0784a244f5d095566c9e" translate="yes" xml:space="preserve">
          <source>If there is one or more timer notifications before the time in the list of notifications, the notification is sent according to the &lt;code&gt;sendPastNotifications&lt;/code&gt; flag and then, updated according to its period and remaining number of occurrences. If the timer notification date remains earlier than the current date, this notification is just removed from the list of notifications.</source>
          <target state="translated">通知リストの時間より前に1つ以上のタイマー通知がある場合、通知は &lt;code&gt;sendPastNotifications&lt;/code&gt; フラグに従って送信され、その後、その期間と残りの発生回数に従って更新されます。タイマー通知の日付が現在の日付より前の場合、この通知は通知のリストから削除されるだけです。</target>
        </trans-unit>
        <trans-unit id="b3edef51748fde1dc3cb9b0db38c74d836448067" translate="yes" xml:space="preserve">
          <source>If these fields have not been set, meaning that the &lt;code&gt;execute&lt;/code&gt; method has not executed successfully, no methods other than &lt;code&gt;execute&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; may be called on the rowset. All other public methods will throw an exception.</source>
          <target state="translated">If these fields have not been set, meaning that the &lt;code&gt;execute&lt;/code&gt; method has not executed successfully, no methods other than &lt;code&gt;execute&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; may be called on the rowset. All other public methods will throw an exception.</target>
        </trans-unit>
        <trans-unit id="bea1d12841642f06cd5c576dd8ad73a21f49fc5b" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class or interface whose declaration does not explicitly indicate any annotated superinterfaces, the return value is an array of length 0.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが、その宣言が注釈付きスーパーインターフェースを明示的に示さないクラスまたはインターフェースを表す場合、戻り値は長さ0の配列です。</target>
        </trans-unit>
        <trans-unit id="6e8416f8b31967b12db27ca7304aeef5569fa6c8" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class or interface with no accessible public fields, then this method returns an array of length 0.</source>
          <target state="translated">If this &lt;code&gt;Class&lt;/code&gt; object represents a class or interface with no accessible public fields, then this method returns an array of length 0.</target>
        </trans-unit>
        <trans-unit id="94f6da01be13858770dcd2fbeb1c8376bf8f27d5" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class or interface with no declared fields, then this method returns an array of length 0.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがフィールドが宣言されていないクラスまたはインターフェースを表す場合、このメソッドは長さが0の配列を返します。</target>
        </trans-unit>
        <trans-unit id="c5e526ec67c2b068f6813c00e0742ddec3d6151e" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class or interface with no declared methods, then the returned array has length 0.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが宣言されたメソッドのないクラスまたはインターフェースを表す場合、返される配列の長さは0です。</target>
        </trans-unit>
        <trans-unit id="d4ce471ae16ab801b2259a590ff7a0fee5c25fdb" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class or interface with no no accessible public fields, then this method returns an array of length 0.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが、アクセス可能なパブリックフィールドがないクラスまたはインターフェースを表す場合、このメソッドは長さ0の配列を返します。</target>
        </trans-unit>
        <trans-unit id="c9c0f2616e4b918558184c0ef2f121a34cc9b89a" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class, the return value is an array containing objects representing the uses of interface types to specify interfaces implemented by the class. The order of the objects in the array corresponds to the order of the interface types used in the 'implements' clause of the declaration of this &lt;code&gt;Class&lt;/code&gt; object.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがクラスを表す場合、戻り値は、クラスによって実装されるインターフェースを指定するためのインターフェースタイプの使用を表すオブジェクトを含む配列です。配列内のオブジェクトの順序は、この &lt;code&gt;Class&lt;/code&gt; オブジェクトの宣言の 'implements'句で使用されるインターフェイスタイプの順序に対応しています。</target>
        </trans-unit>
        <trans-unit id="972bf4d56f599ffc46c00671b73ed210f8ab96fd" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class, then this method returns the public fields of the class and of all its superclasses and superinterfaces.</source>
          <target state="translated">If this &lt;code&gt;Class&lt;/code&gt; object represents a class, then this method returns the public fields of the class and of all its superclasses and superinterfaces.</target>
        </trans-unit>
        <trans-unit id="8ea0225aadb3a9617c32673581f4007aea0f62a1" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a class, then this method returns the public fields of the class and of all its superclasses.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがクラスを表す場合、このメソッドはクラスとそのすべてのスーパークラスのパブリックフィールドを返します。</target>
        </trans-unit>
        <trans-unit id="19efbdc41b97ce163692b9570014a1cf2d915716" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a local or anonymous class within a constructor, returns a &lt;a href=&quot;reflect/constructor&quot;&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt; object representing the immediately enclosing constructor of the underlying class.</source>
          <target state="translated">If this &lt;code&gt;Class&lt;/code&gt; object represents a local or anonymous class within a constructor, returns a &lt;a href=&quot;reflect/constructor&quot;&gt; &lt;code&gt;Constructor&lt;/code&gt; &lt;/a&gt; object representing the immediately enclosing constructor of the underlying class.</target>
        </trans-unit>
        <trans-unit id="42af070ad6a4d3648b309df9a277dd2d8e338352" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a local or anonymous class within a constructor, returns a &lt;a href=&quot;reflect/constructor&quot;&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt; object representing the immediately enclosing constructor of the underlying class. Returns &lt;code&gt;null&lt;/code&gt; otherwise. In particular, this method returns &lt;code&gt;null&lt;/code&gt; if the underlying class is a local or anonymous class immediately enclosed by a type declaration, instance initializer or static initializer.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがコンストラクター内のローカルクラスまたは匿名クラスを表す場合、基になるクラスのすぐ外側のコンストラクターを表す&lt;a href=&quot;reflect/constructor&quot;&gt; &lt;code&gt;Constructor&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。それ以外の場合は &lt;code&gt;null&lt;/code&gt; を返します。特に、このメソッドは、基になるクラスが、型宣言、インスタンス初期化子、または静的初期化子によってすぐに囲まれたローカルクラスまたは匿名クラスである場合、 &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="97ef3bf0bcc99ac4678b3a68f5947eddd7c49a75" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a local or anonymous class within a method, returns a &lt;a href=&quot;reflect/method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; object representing the immediately enclosing method of the underlying class.</source>
          <target state="translated">If this &lt;code&gt;Class&lt;/code&gt; object represents a local or anonymous class within a method, returns a &lt;a href=&quot;reflect/method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; object representing the immediately enclosing method of the underlying class.</target>
        </trans-unit>
        <trans-unit id="4477ae736ceef4ce368b1839297468a2918b1155" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a local or anonymous class within a method, returns a &lt;a href=&quot;reflect/method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; object representing the immediately enclosing method of the underlying class. Returns &lt;code&gt;null&lt;/code&gt; otherwise. In particular, this method returns &lt;code&gt;null&lt;/code&gt; if the underlying class is a local or anonymous class immediately enclosed by a type declaration, instance initializer or static initializer.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがメソッド内のローカルクラスまたは匿名クラスを表す場合、基になるクラスのすぐ外側のメソッドを表す&lt;a href=&quot;reflect/method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。それ以外の場合は &lt;code&gt;null&lt;/code&gt; を返します。特に、このメソッドは、基になるクラスが、型宣言、インスタンス初期化子、または静的初期化子によってすぐに囲まれたローカルクラスまたは匿名クラスである場合、 &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="79bd7175460e43940d330fea2bc43e369e031bbb" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a primitive type or void, then the returned array has length 0.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがプリミティブ型またはvoidを表す場合、返される配列の長さは0です。</target>
        </trans-unit>
        <trans-unit id="f02c0ed1f5bae30d0291b5a6aaf11110bd96f07d" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a type that has a class initialization method &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt;, then the returned array does &lt;em&gt;not&lt;/em&gt; have a corresponding &lt;code&gt;Method&lt;/code&gt; object.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがクラス初期化メソッド &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt; を持つ型を表す場合、返される配列には対応する &lt;code&gt;Method&lt;/code&gt; オブジェクトがありませ&lt;em&gt;ん&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c4b86687e1e312e67b7460fddd5aed10106e1e53" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a type that has multiple declared methods with the same name and parameter types, but different return types, then the returned array has a &lt;code&gt;Method&lt;/code&gt; object for each such method.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが、名前とパラメーターの型が同じで戻り値の型が異なる複数の宣言されたメソッドを持つ型を表す場合、返される配列には、そのような各 &lt;code&gt;Method&lt;/code&gt; オブジェクトがあります。</target>
        </trans-unit>
        <trans-unit id="6a5139658d7d0116078759c8a142a520e5a7e171" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a type that has multiple public methods with the same name and parameter types, but different return types, then the returned array has a &lt;code&gt;Method&lt;/code&gt; object for each such method.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが、名前とパラメーターの型が同じで戻り値の型が異なる複数のパブリックメソッドを持つ型を表す場合、返される配列には、そのようなメソッドごとに &lt;code&gt;Method&lt;/code&gt; オブジェクトがあります。</target>
        </trans-unit>
        <trans-unit id="f9710c2aebb0499fff54a4c1fab48952630f8353" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a type whose declaration does not explicitly indicate an annotated superclass, then the return value is an &lt;code&gt;AnnotatedType&lt;/code&gt; object representing an element with no annotations.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが、宣言が注釈付きスーパークラスを明示的に示さない型を表す場合、戻り値は、 &lt;code&gt;AnnotatedType&lt;/code&gt; ない要素を表すAnnotatedTypeオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="abacab4cf9b024f594f0b3f572123f051f06c2c5" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents a type with a class initialization method &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt;, then the returned array does &lt;em&gt;not&lt;/em&gt; have a corresponding &lt;code&gt;Method&lt;/code&gt; object.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがクラス初期化メソッド &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt; を持つ型を表す場合、返される配列には対応する &lt;code&gt;Method&lt;/code&gt; オブジェクトがありませ&lt;em&gt;ん&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1bebb6eaefac5ae2ce6d923cc8da1eb725883029" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an array type, a primitive type, or void, then the returned array has length 0.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが配列型、プリミティブ型、またはvoidを表す場合、返される配列の長さは0です。</target>
        </trans-unit>
        <trans-unit id="70b797601062908da356817410150aa204020fc1" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an array type, a primitive type, or void, then this method returns an array of length 0.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが配列型、プリミティブ型、またはvoidを表す場合、このメソッドは長さが0の配列を返します。</target>
        </trans-unit>
        <trans-unit id="20332c048f55b2154c66a445225edb4bdb3e274e" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an array type, the interfaces &lt;code&gt;Cloneable&lt;/code&gt; and &lt;code&gt;java.io.Serializable&lt;/code&gt; are returned in that order.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが配列型を表す場合、インターフェイス &lt;code&gt;Cloneable&lt;/code&gt; および &lt;code&gt;java.io.Serializable&lt;/code&gt; がこの順序で返されます。</target>
        </trans-unit>
        <trans-unit id="348539037139d48e6387c9a62912e6564911c876" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an array type, then the returned array has a &lt;code&gt;Method&lt;/code&gt; object for each of the public methods inherited by the array type from &lt;code&gt;Object&lt;/code&gt;. It does not contain a &lt;code&gt;Method&lt;/code&gt; object for &lt;code&gt;clone()&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが配列型を表す場合、返される配列には、 &lt;code&gt;Object&lt;/code&gt; から配列型によって継承されたパブリックメソッドごとに &lt;code&gt;Method&lt;/code&gt; オブジェクトがあります。 &lt;code&gt;clone()&lt;/code&gt; の &lt;code&gt;Method&lt;/code&gt; オブジェクトは含まれていません。</target>
        </trans-unit>
        <trans-unit id="29e81a940f259cfb7b07c0e245bb52be63c0dd30" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an array type, then this method does not find the &lt;code&gt;clone()&lt;/code&gt; method.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが配列型を表す場合、このメソッドは &lt;code&gt;clone()&lt;/code&gt; メソッドを見つけられません。</target>
        </trans-unit>
        <trans-unit id="cb178a8f1871d07a34cdb3bb2de9a0c1fb20f2b9" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an array type, then this method does not find the &lt;code&gt;length&lt;/code&gt; field of the array type.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが配列型を表す場合、このメソッドは配列型の &lt;code&gt;length&lt;/code&gt; フィールドを見つけられません。</target>
        </trans-unit>
        <trans-unit id="4bd7f84a076a4583d7107678dfa8e8e6a579b02f" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an array type, then this method finds any public method inherited by the array type from &lt;code&gt;Object&lt;/code&gt; except method &lt;code&gt;clone()&lt;/code&gt;.</source>
          <target state="translated">If this &lt;code&gt;Class&lt;/code&gt; object represents an array type, then this method finds any public method inherited by the array type from &lt;code&gt;Object&lt;/code&gt; except method &lt;code&gt;clone()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c4b35440106aa65e3bd6d1155d9e17869493181" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an interface then the returned array does not contain any implicitly declared methods from &lt;code&gt;Object&lt;/code&gt;. Therefore, if no methods are explicitly declared in this interface or any of its superinterfaces then the returned array has length 0. (Note that a &lt;code&gt;Class&lt;/code&gt; object which represents a class always has public methods, inherited from &lt;code&gt;Object&lt;/code&gt;.)</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがインターフェースを表す場合、返される配列には、 &lt;code&gt;Object&lt;/code&gt; から暗黙的に宣言されたメソッドは含まれません。したがって、このインターフェイスまたはそのスーパーインターフェイスのいずれかでメソッドが明示的に宣言されていない場合、返される配列の長さは0です（ &lt;code&gt;Class&lt;/code&gt; を表すClassオブジェクトには常に &lt;code&gt;Object&lt;/code&gt; から継承されたパブリックメソッドがあることに注意してください）。</target>
        </trans-unit>
        <trans-unit id="50a58368b3e27e2351421689396e8aedc8df4704" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an interface then this method does not find any implicitly declared method from &lt;code&gt;Object&lt;/code&gt;. Therefore, if no methods are explicitly declared in this interface or any of its superinterfaces, then this method does not find any method.</source>
          <target state="translated">If this &lt;code&gt;Class&lt;/code&gt; object represents an interface then this method does not find any implicitly declared method from &lt;code&gt;Object&lt;/code&gt; . Therefore, if no methods are explicitly declared in this interface or any of its superinterfaces, then this method does not find any method.</target>
        </trans-unit>
        <trans-unit id="9d2d45c96fc82cd4f5045bb65c083bb3e36fa1de" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an interface, the return value is an array containing objects representing the uses of interface types to specify interfaces directly extended by the interface. The order of the objects in the array corresponds to the order of the interface types used in the 'extends' clause of the declaration of this &lt;code&gt;Class&lt;/code&gt; object.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがインターフェースを表す場合、戻り値は、インターフェースによって直接拡張されるインターフェースを指定するためのインターフェースタイプの使用を表すオブジェクトを含む配列です。配列内のオブジェクトの順序は、この &lt;code&gt;Class&lt;/code&gt; オブジェクトの宣言の 'extends'句で使用されるインターフェイスタイプの順序に対応しています。</target>
        </trans-unit>
        <trans-unit id="0f7aab31089775b3540a55de72ec8246707dca71" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents an interface, then this method returns the fields of the interface and of all its superinterfaces.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトがインターフェースを表す場合、このメソッドはインターフェースとそのすべてのスーパーインターフェースのフィールドを返します。</target>
        </trans-unit>
        <trans-unit id="24fcfbcd558d192b46d9d8daf24bd3361c63931e" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; object represents either the &lt;code&gt;Object&lt;/code&gt; class, an array type, a primitive type, or void, the return value is an array of length 0.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; オブジェクトが &lt;code&gt;Object&lt;/code&gt; クラス、配列型、プリミティブ型、またはvoidのいずれかを表す場合、戻り値は長さが0の配列です。</target>
        </trans-unit>
        <trans-unit id="74ef85a38a3ffe3f10aa47e5d033acb048da33fd" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Class&lt;/code&gt; represents either the &lt;code&gt;Object&lt;/code&gt; class, an interface type, an array type, a primitive type, or void, the return value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Class&lt;/code&gt; が &lt;code&gt;Object&lt;/code&gt; クラス、インターフェース型、配列型、プリミティブ型、またはvoidのいずれかを表す場合、戻り値は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b79ca71cca6aeb6a7facb903fa697dd31da36756" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Container&lt;/code&gt; is not valid, this method invokes the &lt;code&gt;validateTree&lt;/code&gt; method and marks this &lt;code&gt;Container&lt;/code&gt; as valid. Otherwise, no action is performed.</source>
          <target state="translated">If this &lt;code&gt;Container&lt;/code&gt; is not valid, this method invokes the &lt;code&gt;validateTree&lt;/code&gt; method and marks this &lt;code&gt;Container&lt;/code&gt; as valid. Otherwise, no action is performed.</target>
        </trans-unit>
        <trans-unit id="d61b3bb217a8c25d2209158ddd28a60999b5d264" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Deflater&lt;/code&gt; has been subclassed and the &lt;code&gt;end&lt;/code&gt; method has been overridden, the &lt;code&gt;end&lt;/code&gt; method will be called by the finalization when the deflater is unreachable. But the subclasses should not depend on this specific implementation; the finalization is not reliable and the &lt;code&gt;finalize&lt;/code&gt; method is deprecated to be removed.</source>
          <target state="translated">If this &lt;code&gt;Deflater&lt;/code&gt; has been subclassed and the &lt;code&gt;end&lt;/code&gt; method has been overridden, the &lt;code&gt;end&lt;/code&gt; method will be called by the finalization when the deflater is unreachable. But the subclasses should not depend on this specific implementation; the finalization is not reliable and the &lt;code&gt;finalize&lt;/code&gt; method is deprecated to be removed.</target>
        </trans-unit>
        <trans-unit id="6c005c11b66aec51de31e87c510532c6a448273e" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Field&lt;/code&gt; object is enforcing Java language access control, and the underlying field is inaccessible, the method throws an &lt;code&gt;IllegalAccessException&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Field&lt;/code&gt; オブジェクトがJava言語アクセス制御を実施していて、基になるフィールドにアクセスできない場合、メソッドは &lt;code&gt;IllegalAccessException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="bfff6651d72785da15b50a35bc44c7be29e967f4" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Field&lt;/code&gt; object is enforcing Java language access control, and the underlying field is inaccessible, the method throws an &lt;code&gt;IllegalAccessException&lt;/code&gt;. If the underlying field is static, the class that declared the field is initialized if it has not already been initialized.</source>
          <target state="translated">この &lt;code&gt;Field&lt;/code&gt; オブジェクトがJava言語アクセス制御を実施していて、基になるフィールドにアクセスできない場合、メソッドは &lt;code&gt;IllegalAccessException&lt;/code&gt; をスローします。基本となるフィールドが静的である場合、フィールドを宣言したクラスは、まだ初期化されていない場合は初期化されます。</target>
        </trans-unit>
        <trans-unit id="eb5b424e32b92ab7192512c0fc09ab99276ccc50" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Graphics2D&lt;/code&gt; context is drawing to a &lt;code&gt;Component&lt;/code&gt; on the display screen and the &lt;code&gt;Composite&lt;/code&gt; is a custom object rather than an instance of the &lt;code&gt;AlphaComposite&lt;/code&gt; class, and if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with an &lt;code&gt;AWTPermission(&quot;readDisplayPixels&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">If this &lt;code&gt;Graphics2D&lt;/code&gt; context is drawing to a &lt;code&gt;Component&lt;/code&gt; on the display screen and the &lt;code&gt;Composite&lt;/code&gt; is a custom object rather than an instance of the &lt;code&gt;AlphaComposite&lt;/code&gt; class, and if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method is called with an &lt;code&gt;AWTPermission(&quot;readDisplayPixels&quot;)&lt;/code&gt; permission.</target>
        </trans-unit>
        <trans-unit id="1dcd83e4433ffbc1ebbf7b8020d46089730ee740" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;HttpResponse&lt;/code&gt; was returned from an invocation of &lt;a href=&quot;#previousResponse()&quot;&gt;&lt;code&gt;previousResponse()&lt;/code&gt;&lt;/a&gt; then this method returns &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">If this &lt;code&gt;HttpResponse&lt;/code&gt; was returned from an invocation of &lt;a href=&quot;#previousResponse()&quot;&gt; &lt;code&gt;previousResponse()&lt;/code&gt; &lt;/a&gt; then this method returns &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f7ccb08c5fb1d4a7665d31d16cc3af87c0f7a6b" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Inflater&lt;/code&gt; has been subclassed and the &lt;code&gt;end&lt;/code&gt; method has been overridden, the &lt;code&gt;end&lt;/code&gt; method will be called by the finalization when the inflater is unreachable. But the subclasses should not depend on this specific implementation; the finalization is not reliable and the &lt;code&gt;finalize&lt;/code&gt; method is deprecated to be removed.</source>
          <target state="translated">If this &lt;code&gt;Inflater&lt;/code&gt; has been subclassed and the &lt;code&gt;end&lt;/code&gt; method has been overridden, the &lt;code&gt;end&lt;/code&gt; method will be called by the finalization when the inflater is unreachable. But the subclasses should not depend on this specific implementation; the finalization is not reliable and the &lt;code&gt;finalize&lt;/code&gt; method is deprecated to be removed.</target>
        </trans-unit>
        <trans-unit id="66c4254fec3d7e2e4edd4f26fd06d26cd6621cde" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Inflater&lt;/code&gt; has been subclassed and the &lt;code&gt;end&lt;/code&gt; method has been overridden, the &lt;code&gt;end&lt;/code&gt; method will be called when the inflater is unreachable.</source>
          <target state="translated">If this &lt;code&gt;Inflater&lt;/code&gt; has been subclassed and the &lt;code&gt;end&lt;/code&gt; method has been overridden, the &lt;code&gt;end&lt;/code&gt; method will be called when the inflater is unreachable.</target>
        </trans-unit>
        <trans-unit id="c26daa984a3e23882bcf4505853a0f173ed21163" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;JInternalFrame&lt;/code&gt; is active, returns the child that has focus.</source>
          <target state="translated">If this &lt;code&gt;JInternalFrame&lt;/code&gt; is active, returns the child that has focus.</target>
        </trans-unit>
        <trans-unit id="bc9401f368e3758d3188ace75004f7819d77e1f2" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;JInternalFrame&lt;/code&gt; is active, returns the child that has focus. Otherwise, returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">If this &lt;code&gt;JInternalFrame&lt;/code&gt; is active, returns the child that has focus. Otherwise, returns &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6828b57248dc55ee33f2d0f727d461ced903c7ae" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;JTable&lt;/code&gt; is the &lt;code&gt;viewportView&lt;/code&gt; of an enclosing &lt;code&gt;JScrollPane&lt;/code&gt; (the usual situation), configure this &lt;code&gt;ScrollPane&lt;/code&gt; by, amongst other things, installing the table's &lt;code&gt;tableHeader&lt;/code&gt; as the &lt;code&gt;columnHeaderView&lt;/code&gt; of the scroll pane.</source>
          <target state="translated">If this &lt;code&gt;JTable&lt;/code&gt; is the &lt;code&gt;viewportView&lt;/code&gt; of an enclosing &lt;code&gt;JScrollPane&lt;/code&gt; (the usual situation), configure this &lt;code&gt;ScrollPane&lt;/code&gt; by, amongst other things, installing the table's &lt;code&gt;tableHeader&lt;/code&gt; as the &lt;code&gt;columnHeaderView&lt;/code&gt; of the scroll pane.</target>
        </trans-unit>
        <trans-unit id="95bc5377a471ae3598176805da8df7dc9f63dc18" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;JTable&lt;/code&gt; is the &lt;code&gt;viewportView&lt;/code&gt; of an enclosing &lt;code&gt;JScrollPane&lt;/code&gt; (the usual situation), configure this &lt;code&gt;ScrollPane&lt;/code&gt; by, amongst other things, installing the table's &lt;code&gt;tableHeader&lt;/code&gt; as the &lt;code&gt;columnHeaderView&lt;/code&gt; of the scroll pane. When a &lt;code&gt;JTable&lt;/code&gt; is added to a &lt;code&gt;JScrollPane&lt;/code&gt; in the usual way, using &lt;code&gt;new JScrollPane(myTable)&lt;/code&gt;, &lt;code&gt;addNotify&lt;/code&gt; is called in the &lt;code&gt;JTable&lt;/code&gt; (when the table is added to the viewport). &lt;code&gt;JTable&lt;/code&gt;'s &lt;code&gt;addNotify&lt;/code&gt; method in turn calls this method, which is protected so that this default installation procedure can be overridden by a subclass.</source>
          <target state="translated">If this &lt;code&gt;JTable&lt;/code&gt; is the &lt;code&gt;viewportView&lt;/code&gt; of an enclosing &lt;code&gt;JScrollPane&lt;/code&gt; (the usual situation), configure this &lt;code&gt;ScrollPane&lt;/code&gt; by, amongst other things, installing the table's &lt;code&gt;tableHeader&lt;/code&gt; as the &lt;code&gt;columnHeaderView&lt;/code&gt; of the scroll pane. When a &lt;code&gt;JTable&lt;/code&gt; is added to a &lt;code&gt;JScrollPane&lt;/code&gt; in the usual way, using &lt;code&gt;new JScrollPane(myTable)&lt;/code&gt; , &lt;code&gt;addNotify&lt;/code&gt; is called in the &lt;code&gt;JTable&lt;/code&gt; (when the table is added to the viewport). &lt;code&gt;JTable&lt;/code&gt; 's &lt;code&gt;addNotify&lt;/code&gt; method in turn calls this method, which is protected so that this default installation procedure can be overridden by a subclass.</target>
        </trans-unit>
        <trans-unit id="971006a579f4cd386294bc03012306a545ec65dd" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;JarFile&lt;/code&gt; is a multi-release jar file and is configured to be processed as such, then a search is performed to find and return a &lt;code&gt;JarEntry&lt;/code&gt; that is the latest versioned entry associated with the given entry name. The returned &lt;code&gt;JarEntry&lt;/code&gt; is the versioned entry corresponding to the given base entry name prefixed with the string &lt;code&gt;&quot;META-INF/versions/{n}/&quot;&lt;/code&gt;, for the largest value of &lt;code&gt;n&lt;/code&gt; for which an entry exists. If such a versioned entry does not exist, then the &lt;code&gt;JarEntry&lt;/code&gt; for the base entry is returned, otherwise &lt;code&gt;null&lt;/code&gt; is returned if no entries are found. The initial value for the version &lt;code&gt;n&lt;/code&gt; is the maximum version as returned by the method &lt;a href=&quot;#getVersion()&quot;&gt;&lt;code&gt;getVersion()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If this &lt;code&gt;JarFile&lt;/code&gt; is a multi-release jar file and is configured to be processed as such, then a search is performed to find and return a &lt;code&gt;JarEntry&lt;/code&gt; that is the latest versioned entry associated with the given entry name. The returned &lt;code&gt;JarEntry&lt;/code&gt; is the versioned entry corresponding to the given base entry name prefixed with the string &lt;code&gt;&quot;META-INF/versions/{n}/&quot;&lt;/code&gt; , for the largest value of &lt;code&gt;n&lt;/code&gt; for which an entry exists. If such a versioned entry does not exist, then the &lt;code&gt;JarEntry&lt;/code&gt; for the base entry is returned, otherwise &lt;code&gt;null&lt;/code&gt; is returned if no entries are found. The initial value for the version &lt;code&gt;n&lt;/code&gt; is the maximum version as returned by the method &lt;a href=&quot;#getVersion()&quot;&gt; &lt;code&gt;getVersion()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a42359b2547fcf0cced67f0b8abbfee7db30652b" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;JarFile&lt;/code&gt; is a multi-release jar file and is configured to be processed as such, then a search is performed to find and return a &lt;code&gt;ZipEntry&lt;/code&gt; that is the latest versioned entry associated with the given entry name. The returned &lt;code&gt;ZipEntry&lt;/code&gt; is the versioned entry corresponding to the given base entry name prefixed with the string &lt;code&gt;&quot;META-INF/versions/{n}/&quot;&lt;/code&gt;, for the largest value of &lt;code&gt;n&lt;/code&gt; for which an entry exists. If such a versioned entry does not exist, then the &lt;code&gt;ZipEntry&lt;/code&gt; for the base entry is returned, otherwise &lt;code&gt;null&lt;/code&gt; is returned if no entries are found. The initial value for the version &lt;code&gt;n&lt;/code&gt; is the maximum version as returned by the method &lt;a href=&quot;#getVersion()&quot;&gt;&lt;code&gt;getVersion()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If this &lt;code&gt;JarFile&lt;/code&gt; is a multi-release jar file and is configured to be processed as such, then a search is performed to find and return a &lt;code&gt;ZipEntry&lt;/code&gt; that is the latest versioned entry associated with the given entry name. The returned &lt;code&gt;ZipEntry&lt;/code&gt; is the versioned entry corresponding to the given base entry name prefixed with the string &lt;code&gt;&quot;META-INF/versions/{n}/&quot;&lt;/code&gt; , for the largest value of &lt;code&gt;n&lt;/code&gt; for which an entry exists. If such a versioned entry does not exist, then the &lt;code&gt;ZipEntry&lt;/code&gt; for the base entry is returned, otherwise &lt;code&gt;null&lt;/code&gt; is returned if no entries are found. The initial value for the version &lt;code&gt;n&lt;/code&gt; is the maximum version as returned by the method &lt;a href=&quot;#getVersion()&quot;&gt; &lt;code&gt;getVersion()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4544200625ea70ebc9bce4110deacb71c8b2c125" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;JarFile&lt;/code&gt; is a multi-release jar file and is configured to be processed as such, then an entry in the stream is the latest versioned entry associated with the corresponding base entry name. The maximum version of the latest versioned entry is the version returned by &lt;a href=&quot;#getVersion()&quot;&gt;&lt;code&gt;getVersion()&lt;/code&gt;&lt;/a&gt;. The returned stream may include an entry that only exists as a versioned entry. If the jar file is not a multi-release jar file or the &lt;code&gt;JarFile&lt;/code&gt; is not configured for processing a multi-release jar file, this method returns the same stream that &lt;a href=&quot;#stream()&quot;&gt;&lt;code&gt;stream()&lt;/code&gt;&lt;/a&gt; returns.</source>
          <target state="translated">If this &lt;code&gt;JarFile&lt;/code&gt; is a multi-release jar file and is configured to be processed as such, then an entry in the stream is the latest versioned entry associated with the corresponding base entry name. The maximum version of the latest versioned entry is the version returned by &lt;a href=&quot;#getVersion()&quot;&gt; &lt;code&gt;getVersion()&lt;/code&gt; &lt;/a&gt;. The returned stream may include an entry that only exists as a versioned entry. If the jar file is not a multi-release jar file or the &lt;code&gt;JarFile&lt;/code&gt; is not configured for processing a multi-release jar file, this method returns the same stream that &lt;a href=&quot;#stream()&quot;&gt; &lt;code&gt;stream()&lt;/code&gt; &lt;/a&gt; returns.</target>
        </trans-unit>
        <trans-unit id="8fc33555c25f80831c0628ad15a0ccf77251dea3" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;JarFile&lt;/code&gt; is not a multi-release jar file or is not configured to be processed as such, then the version returned will be the same as that returned from &lt;a href=&quot;#baseVersion()&quot;&gt;&lt;code&gt;baseVersion()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">If this &lt;code&gt;JarFile&lt;/code&gt; is not a multi-release jar file or is not configured to be processed as such, then the version returned will be the same as that returned from &lt;a href=&quot;#baseVersion()&quot;&gt; &lt;code&gt;baseVersion()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8557e1e1be59bc05bf4e2df145cc3c316c6e80c0" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Locale&lt;/code&gt; has a language, country, or variant that does not satisfy the IETF BCP 47 language tag syntax requirements, this method handles these fields as described below:</source>
          <target state="translated">この &lt;code&gt;Locale&lt;/code&gt; の言語、国、またはバリアントがIETF BCP 47言語タグ構文要件を満たしていない場合、このメソッドはこれらのフィールドを以下のように処理します。</target>
        </trans-unit>
        <trans-unit id="f49a3fde11d5db0ed881977831e9e3ba3cc4fab5" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;PopupMenu&lt;/code&gt; is being used as a &lt;code&gt;Menu&lt;/code&gt; (i.e., it has a non-&lt;code&gt;Component&lt;/code&gt; parent), then you cannot call this method on the &lt;code&gt;PopupMenu&lt;/code&gt;.</source>
          <target state="translated">If this &lt;code&gt;PopupMenu&lt;/code&gt; is being used as a &lt;code&gt;Menu&lt;/code&gt; (i.e., it has a non- &lt;code&gt;Component&lt;/code&gt; parent), then you cannot call this method on the &lt;code&gt;PopupMenu&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7731e7aef77ad748710b57493f4b7ea47070b36" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Rectangle&lt;/code&gt; has any dimension less than zero, the rules for &lt;a href=&quot;#NonExistent&quot;&gt;non-existent&lt;/a&gt; rectangles apply. In that case, the new bounds of this &lt;code&gt;Rectangle&lt;/code&gt; will have a location equal to the coordinates of the specified &lt;code&gt;Point&lt;/code&gt; and width and height equal to zero.</source>
          <target state="translated">If this &lt;code&gt;Rectangle&lt;/code&gt; has any dimension less than zero, the rules for &lt;a href=&quot;#NonExistent&quot;&gt;non-existent&lt;/a&gt; rectangles apply. In that case, the new bounds of this &lt;code&gt;Rectangle&lt;/code&gt; will have a location equal to the coordinates of the specified &lt;code&gt;Point&lt;/code&gt; and width and height equal to zero.</target>
        </trans-unit>
        <trans-unit id="1b8dc137f02a58d56274933aac40eb866926b6a8" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;Rectangle&lt;/code&gt; has any dimension less than zero, the rules for &lt;a href=&quot;#NonExistent&quot;&gt;non-existent&lt;/a&gt; rectangles apply. In that case, the new bounds of this &lt;code&gt;Rectangle&lt;/code&gt; will have a location equal to the specified coordinates and width and height equal to zero.</source>
          <target state="translated">If this &lt;code&gt;Rectangle&lt;/code&gt; has any dimension less than zero, the rules for &lt;a href=&quot;#NonExistent&quot;&gt;non-existent&lt;/a&gt; rectangles apply. In that case, the new bounds of this &lt;code&gt;Rectangle&lt;/code&gt; will have a location equal to the specified coordinates and width and height equal to zero.</target>
        </trans-unit>
        <trans-unit id="d37a0ebcc6085e0c5c10ef85dea41aa701353317" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;RowSet&lt;/code&gt; object does not maintain a continuous connection with its source of data, it may use a &lt;code&gt;Reader&lt;/code&gt; (a &lt;code&gt;RowSetReader&lt;/code&gt; object) to fill itself with data. In this case, a &lt;code&gt;Reader&lt;/code&gt; will have been registered with this &lt;code&gt;RowSet&lt;/code&gt; object, and the method &lt;code&gt;execute&lt;/code&gt; will call on the &lt;code&gt;Reader&lt;/code&gt;'s &lt;code&gt;readData&lt;/code&gt; method as part of its implementation.</source>
          <target state="translated">If this &lt;code&gt;RowSet&lt;/code&gt; object does not maintain a continuous connection with its source of data, it may use a &lt;code&gt;Reader&lt;/code&gt; (a &lt;code&gt;RowSetReader&lt;/code&gt; object) to fill itself with data. In this case, a &lt;code&gt;Reader&lt;/code&gt; will have been registered with this &lt;code&gt;RowSet&lt;/code&gt; object, and the method &lt;code&gt;execute&lt;/code&gt; will call on the &lt;code&gt;Reader&lt;/code&gt; 's &lt;code&gt;readData&lt;/code&gt; method as part of its implementation.</target>
        </trans-unit>
        <trans-unit id="ae1424f53f74471f85637ef0b51790d77bcaf639" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;SSLEngine&lt;/code&gt; has not yet started its initial handshake, this method will automatically start the handshake.</source>
          <target state="translated">この &lt;code&gt;SSLEngine&lt;/code&gt; が初期ハンドシェイクをまだ開始していない場合、このメソッドは自動的にハンドシェイクを開始します。</target>
        </trans-unit>
        <trans-unit id="9f94176502144d53f9b47819a2742a061514b473" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;String&lt;/code&gt; object represents an empty character sequence, or the first and last characters of character sequence represented by this &lt;code&gt;String&lt;/code&gt; object both have codes greater than &lt;code&gt;'\u0020'&lt;/code&gt; (the space character), then a reference to this &lt;code&gt;String&lt;/code&gt; object is returned.</source>
          <target state="translated">この &lt;code&gt;String&lt;/code&gt; オブジェクトが空の文字シーケンスを表す場合、またはこの &lt;code&gt;String&lt;/code&gt; オブジェクトによって表される文字シーケンスの最初と最後の文字の両方に &lt;code&gt;'\u0020'&lt;/code&gt; （スペース文字）より大きいコードがある場合、この &lt;code&gt;String&lt;/code&gt; オブジェクトへの参照が返されます。</target>
        </trans-unit>
        <trans-unit id="8e661bd3fbcb9238d639e9f358a3c105fdd4e27d" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;String&lt;/code&gt; object represents an empty character sequence, or the first and last characters of character sequence represented by this &lt;code&gt;String&lt;/code&gt; object both have codes that are not space (as defined above), then a reference to this &lt;code&gt;String&lt;/code&gt; object is returned.</source>
          <target state="translated">この &lt;code&gt;String&lt;/code&gt; オブジェクトが空の文字シーケンスを表す場合、またはこの &lt;code&gt;String&lt;/code&gt; オブジェクトによって表される文字シーケンスの最初と最後の文字の両方にスペースではないコードがある場合（上記で定義）、この &lt;code&gt;String&lt;/code&gt; オブジェクトへの参照が返されます。</target>
        </trans-unit>
        <trans-unit id="911e5c605977f7ff7f414a5a91d07f389358229f" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;String&lt;/code&gt; object represents an empty string, or if all characters in this string are &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;&lt;code&gt;white space&lt;/code&gt;&lt;/a&gt;, then an empty string is returned.</source>
          <target state="translated">この &lt;code&gt;String&lt;/code&gt; オブジェクトが空の文字列を表す場合、またはこの文字列内のすべての文字が&lt;a href=&quot;character#isWhitespace(int)&quot;&gt; &lt;code&gt;white space&lt;/code&gt; &lt;/a&gt;である場合、空の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="907b7706aa412262d6d1f186f1282aab8c1355b1" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;String&lt;/code&gt; object represents an empty string, or if all code points in this string are &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;&lt;code&gt;white space&lt;/code&gt;&lt;/a&gt;, then an empty string is returned.</source>
          <target state="translated">この &lt;code&gt;String&lt;/code&gt; オブジェクトが空の文字列を表す場合、またはこの文字列内のすべてのコードポイントが&lt;a href=&quot;character#isWhitespace(int)&quot;&gt; &lt;code&gt;white space&lt;/code&gt; &lt;/a&gt;である場合、空の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="c35c025661a8df85760080b03beac96239abff5b" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;TextLayout&lt;/code&gt; has already been justified, an exception is thrown. If this &lt;code&gt;TextLayout&lt;/code&gt; object's justification ratio is zero, a &lt;code&gt;TextLayout&lt;/code&gt; identical to this &lt;code&gt;TextLayout&lt;/code&gt; is returned.</source>
          <target state="translated">この &lt;code&gt;TextLayout&lt;/code&gt; がすでに正当化されている場合、例外がスローされます。この場合 &lt;code&gt;TextLayout&lt;/code&gt; オブジェクトの正当化率がゼロである、 &lt;code&gt;TextLayout&lt;/code&gt; のこの同一の &lt;code&gt;TextLayout&lt;/code&gt; のが返されます。</target>
        </trans-unit>
        <trans-unit id="adf903f3111a4dfc9f8e92b0b23326aa2d40a7d7" translate="yes" xml:space="preserve">
          <source>If this &lt;code&gt;ZipFile&lt;/code&gt; has been subclassed and the &lt;code&gt;close&lt;/code&gt; method has been overridden, the &lt;code&gt;close&lt;/code&gt; method will be called by the finalization when &lt;code&gt;ZipFile&lt;/code&gt; is unreachable. But the subclasses should not depend on this specific implementation; the finalization is not reliable and the &lt;code&gt;finalize&lt;/code&gt; method is deprecated to be removed.</source>
          <target state="translated">この &lt;code&gt;ZipFile&lt;/code&gt; がサブクラス化されていて、 &lt;code&gt;close&lt;/code&gt; メソッドがオーバーライドされている場合、 &lt;code&gt;ZipFile&lt;/code&gt; に到達できないときに、ファイナライズによって &lt;code&gt;close&lt;/code&gt; メソッドが呼び出されます。ただし、サブクラスはこの特定の実装に依存するべきではありません。ファイナライズは信頼できず、 &lt;code&gt;finalize&lt;/code&gt; メソッドは削除される予定です。</target>
        </trans-unit>
        <trans-unit id="0641d88a19fa03461ad937c4e8d60a3ebdde3009" translate="yes" xml:space="preserve">
          <source>If this CodeSource object was created using the &lt;a href=&quot;#%3Cinit%3E(java.net.URL,java.security.CodeSigner%5B%5D)&quot;&gt;&lt;code&gt;CodeSource(URL url, CodeSigner[] signers)&lt;/code&gt;&lt;/a&gt; constructor then its certificate chains are extracted and used to create an array of Certificate objects. Each signer certificate is followed by its supporting certificate chain (which may be empty). Each signer certificate and its supporting certificate chain is ordered bottom-to-top (i.e., with the signer certificate first and the (root) certificate authority last).</source>
          <target state="translated">このCodeSourceオブジェクトが&lt;a href=&quot;#%3Cinit%3E(java.net.URL,java.security.CodeSigner%5B%5D)&quot;&gt; &lt;code&gt;CodeSource(URL url, CodeSigner[] signers)&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して作成された場合、その証明書チェーンが抽出され、Certificateオブジェクトの配列を作成するために使用されます。各署名者証明書の後には、サポートする証明書チェーン（空の場合があります）が続きます。各署名者証明書とそれをサポートする証明書チェーンは、下から上に並べられます（つまり、署名者証明書が最初で、（ルート）認証局が最後になります）。</target>
        </trans-unit>
        <trans-unit id="0ed0d15694897962ee29941d8c146106102c788f" translate="yes" xml:space="preserve">
          <source>If this CodeSource object was created using the &lt;a href=&quot;#%3Cinit%3E(java.net.URL,java.security.cert.Certificate%5B%5D)&quot;&gt;&lt;code&gt;CodeSource(URL url, java.security.cert.Certificate[] certs)&lt;/code&gt;&lt;/a&gt; constructor then its certificate chains are extracted and used to create an array of CodeSigner objects. Note that only X.509 certificates are examined - all other certificate types are ignored.</source>
          <target state="translated">このCodeSourceオブジェクトが&lt;a href=&quot;#%3Cinit%3E(java.net.URL,java.security.cert.Certificate%5B%5D)&quot;&gt; &lt;code&gt;CodeSource(URL url, java.security.cert.Certificate[] certs)&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して作成された場合、その証明書チェーンが抽出され、CodeSignerオブジェクトの配列を作成するために使用されます。X.509証明書のみが検査されることに注意してください。他のすべての証明書タイプは無視されます。</target>
        </trans-unit>
        <trans-unit id="94372ce6dbad15dca713c930c5806a503901c516" translate="yes" xml:space="preserve">
          <source>If this CodeSource object was created using the &lt;a href=&quot;codesource#CodeSource-java.net.URL-java.security.CodeSigner:A-&quot;&gt;&lt;code&gt;CodeSource(URL url, CodeSigner[] signers)&lt;/code&gt;&lt;/a&gt; constructor then its certificate chains are extracted and used to create an array of Certificate objects. Each signer certificate is followed by its supporting certificate chain (which may be empty). Each signer certificate and its supporting certificate chain is ordered bottom-to-top (i.e., with the signer certificate first and the (root) certificate authority last).</source>
          <target state="translated">このCodeSourceオブジェクトが&lt;a href=&quot;codesource#CodeSource-java.net.URL-java.security.CodeSigner:A-&quot;&gt; &lt;code&gt;CodeSource(URL url, CodeSigner[] signers)&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して作成された場合、その証明書チェーンが抽出され、Certificateオブジェクトの配列を作成するために使用されます。各署名者証明書の後には、サポートする証明書チェーン（空の場合もあります）が続きます。各署名者証明書とそれをサポートする証明書チェーンは、下から上に並べられます（つまり、最初に署名者証明書、最後に（ルート）認証局）。</target>
        </trans-unit>
        <trans-unit id="ecab603cea1b392a04b99fd74cc5c16fc8600c78" translate="yes" xml:space="preserve">
          <source>If this CodeSource object was created using the &lt;a href=&quot;codesource#CodeSource-java.net.URL-java.security.cert.Certificate:A-&quot;&gt;&lt;code&gt;CodeSource(URL url, java.security.cert.Certificate[] certs)&lt;/code&gt;&lt;/a&gt; constructor then its certificate chains are extracted and used to create an array of CodeSigner objects. Note that only X.509 certificates are examined - all other certificate types are ignored.</source>
          <target state="translated">このCodeSourceオブジェクトが&lt;a href=&quot;codesource#CodeSource-java.net.URL-java.security.cert.Certificate:A-&quot;&gt; &lt;code&gt;CodeSource(URL url, java.security.cert.Certificate[] certs)&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して作成された場合、その証明書チェーンが抽出され、CodeSignerオブジェクトの配列を作成するために使用されます。X.509証明書のみが検査されることに注意してください-他のすべての証明書タイプは無視されます。</target>
        </trans-unit>
        <trans-unit id="4e605e0e6fa6c10183464f9080e892b0e5d3fe36" translate="yes" xml:space="preserve">
          <source>If this Container is not a focus cycle root, the policy will be remembered, but will not be used or inherited by this or any other Containers until this Container is made a focus cycle root.</source>
          <target state="translated">このコンテナがフォーカス サイクル ルートでない場合、ポリシーは記憶されますが、このコンテナがフォーカス サイクル ルートになるまで、このコンテナまたは他のコンテナによって使用または継承されることはありません。</target>
        </trans-unit>
        <trans-unit id="4340064742a9c485f2c6c279f6aee7ce3339a590" translate="yes" xml:space="preserve">
          <source>If this FileInputStream has been subclassed and the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method has been overridden, the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method will be called when the FileInputStream is unreachable. Otherwise, it is implementation specific how the resource cleanup described in &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; is performed.</source>
          <target state="translated">このFileInputStreamがサブクラス化され、&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドがオーバーライドされている場合、FileInputStreamに到達できないときに&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されます。それ以外の場合は、&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; で&lt;/a&gt;説明されているリソースのクリーンアップがどのように実行されるかは実装固有です。</target>
        </trans-unit>
        <trans-unit id="43680c89f10f44eef1d9f8b1810bca8a77fdf3cf" translate="yes" xml:space="preserve">
          <source>If this FileOutputStream has been subclassed and the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method has been overridden, the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method will be called when the FileInputStream is unreachable. Otherwise, it is implementation specific how the resource cleanup described in &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; is performed.</source>
          <target state="translated">このFileOutputStreamがサブクラス化され、&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドがオーバーライドされている場合、FileInputStreamに到達できないときに&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されます。それ以外の場合は、&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; で&lt;/a&gt;説明されているリソースのクリーンアップがどのように実行されるかは実装固有です。</target>
        </trans-unit>
        <trans-unit id="107ad55e095966d5579e393d582c1c9a341f8040" translate="yes" xml:space="preserve">
          <source>If this FileOutputStream has been subclassed and the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method has been overridden, the &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method will be called when the FileOutputStream is unreachable. Otherwise, it is implementation specific how the resource cleanup described in &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; is performed.</source>
          <target state="translated">このFileOutputStreamがサブクラス化され、&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドがオーバーライドされている場合、FileOutputStreamに到達できないときに&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されます。それ以外の場合は、&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; で&lt;/a&gt;説明されているリソースのクリーンアップがどのように実行されるかは実装固有です。</target>
        </trans-unit>
        <trans-unit id="115bb1e8282eb709c8d2fef1809cf7522d3cb5c0" translate="yes" xml:space="preserve">
          <source>If this InetAddress was created with a host name, this host name will be remembered and returned; otherwise, a reverse name lookup will be performed and the result will be returned based on the system configured name lookup service. If a lookup of the name service is required, call &lt;a href=&quot;#getCanonicalHostName()&quot;&gt;&lt;code&gt;getCanonicalHostName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このInetAddressがホスト名で作成された場合、このホスト名は記憶されて返されます。それ以外の場合は、逆の名前検索が実行され、システムで構成された名前検索サービスに基づいて結果が返されます。ネームサービスのルックアップが必要な場合は、&lt;a href=&quot;#getCanonicalHostName()&quot;&gt; &lt;code&gt;getCanonicalHostName&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="87212e4e2a7f5242014dd7f84b673fda3009933f" translate="yes" xml:space="preserve">
          <source>If this InetAddress was created with a host name, this host name will be remembered and returned; otherwise, a reverse name lookup will be performed and the result will be returned based on the system configured name lookup service. If a lookup of the name service is required, call &lt;a href=&quot;inetaddress#getCanonicalHostName--&quot;&gt;&lt;code&gt;getCanonicalHostName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このInetAddressがホスト名で作成された場合、このホスト名は記憶されて返されます。それ以外の場合は、名前の逆引きが実行され、システム構成の名前引き取りサービスに基づいて結果が返されます。ネームサービスの検索が必要な場合は、&lt;a href=&quot;inetaddress#getCanonicalHostName--&quot;&gt; &lt;code&gt;getCanonicalHostName&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="8771b92415dc41144a3e4cc576f34f85f427b6e9" translate="yes" xml:space="preserve">
          <source>If this KeyPairGenerator has not been initialized explicitly, provider-specific defaults will be used for the size and other (algorithm-specific) values of the generated keys.</source>
          <target state="translated">このKeyPairGeneratorが明示的に初期化されていない場合、生成される鍵のサイズやその他の(アルゴリズム固有の)値には、 プロバイダ固有のデフォルトが使用される。</target>
        </trans-unit>
        <trans-unit id="dd80b9ee095b086c5f82414644de7ec8e7158a07" translate="yes" xml:space="preserve">
          <source>If this LDAP name is lexicographically lesser than obj, a negative number is returned. If this LDAP name is lexicographically greater than obj, a positive number is returned.</source>
          <target state="translated">この LDAP 名が辞書的に obj より小さい場合は、負の数が返されます。このLDAP名が辞書的にobjより大きい場合は、正の数が返されます。</target>
        </trans-unit>
        <trans-unit id="f6337052f3e086791b9360f545e9101bb5279cf3" translate="yes" xml:space="preserve">
          <source>If this LoginModule's own authentication attempt succeeded (checked by retrieving the private state saved by the &lt;code&gt;login&lt;/code&gt; method), then this method associates relevant Principals and Credentials with the &lt;code&gt;Subject&lt;/code&gt; located in the &lt;code&gt;LoginModule&lt;/code&gt;. If this LoginModule's own authentication attempted failed, then this method removes/destroys any state that was originally saved.</source>
          <target state="translated">このLoginModule自体の認証の試行が成功した場合（ &lt;code&gt;login&lt;/code&gt; メソッドによって保存されたプライベート状態を取得することによって確認された場合）、このメソッドは関連するプリンシパルと資格を &lt;code&gt;LoginModule&lt;/code&gt; にある &lt;code&gt;Subject&lt;/code&gt; に関連付けます。このLoginModule自体の認証が失敗した場合、このメソッドは最初に保存された状態を削除または破棄します。</target>
        </trans-unit>
        <trans-unit id="6b0c6b5c94882ad8131434b0393b17deee36d8cd" translate="yes" xml:space="preserve">
          <source>If this LoginModule's own authentication attempt succeeded (checked by retrieving the private state saved by the &lt;code&gt;login&lt;/code&gt; method), then this method cleans up any state that was originally saved.</source>
          <target state="translated">このLoginModule自体の認証の試行が成功した場合（ &lt;code&gt;login&lt;/code&gt; メソッドによって保存されたプライベート状態を取得することで確認）、このメソッドは最初に保存された状態をクリーンアップします。</target>
        </trans-unit>
        <trans-unit id="e09a41ae608a70b663b4e5f1ef7469b114140b78" translate="yes" xml:space="preserve">
          <source>If this Source object is used to process a stylesheet, normally setSystemId should also be called, so that relative URL references can be resolved.</source>
          <target state="translated">このソースオブジェクトがスタイルシートを処理するために使用されている場合、相対的な URL 参照を解決できるように、通常は setSystemId も呼び出されなければなりません。</target>
        </trans-unit>
        <trans-unit id="29a69979687e0c76a3bd5d545980490d1ceae072" translate="yes" xml:space="preserve">
          <source>If this Spliterator is &lt;a href=&quot;#ORDERED&quot;&gt;&lt;code&gt;ORDERED&lt;/code&gt;&lt;/a&gt;, the returned Spliterator must cover a strict prefix of the elements.</source>
          <target state="translated">このスプリッターが&lt;a href=&quot;#ORDERED&quot;&gt; &lt;code&gt;ORDERED&lt;/code&gt; の&lt;/a&gt;場合、返されるスプリッターは要素の厳密なプレフィックスをカバーする必要があります。</target>
        </trans-unit>
        <trans-unit id="88283112521d63d534dc9a4df555e7375d62caf1" translate="yes" xml:space="preserve">
          <source>If this Spliterator is &lt;a href=&quot;#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt; and has not yet been partially traversed or split, or this Spliterator is &lt;a href=&quot;#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt; and has not yet been partially traversed, this estimate must be an accurate count of elements that would be encountered by a complete traversal. Otherwise, this estimate may be arbitrarily inaccurate, but must decrease as specified across invocations of &lt;a href=&quot;#trySplit()&quot;&gt;&lt;code&gt;trySplit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このスプリッターが&lt;a href=&quot;#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt;れていて、まだ部分的にトラバースまたは分割されていない場合、またはこのスプリッターが&lt;a href=&quot;#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; &lt;/a&gt;化されていてまだ部分的にトラバースされていない場合、この見積もりは、完全なトラバーサルで遭遇する要素の正確な数である必要があります。そうしないと、この見積もりは任意に不正確になる可能性がありますが、&lt;a href=&quot;#trySplit()&quot;&gt; &lt;code&gt;trySplit()&lt;/code&gt; の&lt;/a&gt;呼び出し全体で指定されているように減少する必要があります。</target>
        </trans-unit>
        <trans-unit id="c2e88106c6c744ebfa727aad7f15154d6461aeae" translate="yes" xml:space="preserve">
          <source>If this Spliterator is &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;ORDERED&lt;/code&gt;&lt;/a&gt;, the returned Spliterator must cover a strict prefix of the elements.</source>
          <target state="translated">このSpliteratorが&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;ORDERED&lt;/code&gt; の&lt;/a&gt;場合、返されるSpliteratorは要素の厳密な接頭辞をカバーする必要があります。</target>
        </trans-unit>
        <trans-unit id="fb9e47f7f86d1768c1633e48cf94673a67f3b07f" translate="yes" xml:space="preserve">
          <source>If this Spliterator is &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;Spliterator.ORDERED&lt;/code&gt;&lt;/a&gt;, the returned Spliterator must cover a strict prefix of the elements.</source>
          <target state="translated">このSpliteratorが&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;Spliterator.ORDERED&lt;/code&gt; の&lt;/a&gt;場合、返されるSpliteratorは要素の厳密な接頭辞をカバーする必要があります。</target>
        </trans-unit>
        <trans-unit id="dc3d02811da7cd52f8f2143d8108066a5174a2bd" translate="yes" xml:space="preserve">
          <source>If this Spliterator is &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt; and has not yet been partially traversed or split, or this Spliterator is &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt; and has not yet been partially traversed, this estimate must be an accurate count of elements that would be encountered by a complete traversal. Otherwise, this estimate may be arbitrarily inaccurate, but must decrease as specified across invocations of &lt;a href=&quot;spliterator#trySplit--&quot;&gt;&lt;code&gt;trySplit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このSpliteratorが&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt;であり、まだ部分的にトラバースまたは分割されていない場合、またはこのSpliteratorが&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; &lt;/a&gt;であり、まだ部分的にトラバースされていない場合、この推定は、完全なトラバースで検出される要素の正確な数である必要があります。そうでない場合、この見積もりは任意に不正確になる可能性がありますが、&lt;a href=&quot;spliterator#trySplit--&quot;&gt; &lt;code&gt;trySplit()&lt;/code&gt; の&lt;/a&gt;呼び出し全体で指定されたとおりに減少する必要があります。</target>
        </trans-unit>
        <trans-unit id="79f3ba36aca5b08bf5745ff2e336fc66b3d69907" translate="yes" xml:space="preserve">
          <source>If this Spliterator is &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and has not yet been partially traversed or split, or this Spliterator is &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt; and has not yet been partially traversed, this estimate must be an accurate count of elements that would be encountered by a complete traversal. Otherwise, this estimate may be arbitrarily inaccurate, but must decrease as specified across invocations of &lt;a href=&quot;spliterator#trySplit()&quot;&gt;&lt;code&gt;Spliterator.trySplit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このSplitteratorが&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;であり、まだ部分的にトラバースまたは分割されていない場合、またはこのSplitteratorが&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;であり、まだ部分的にトラバースされていない場合、この見積もりは、完全なトラバーサルで検出される要素の正確な数である必要があります。そうしないと、この見積もりは任意に不正確になる可能性がありますが、&lt;a href=&quot;spliterator#trySplit()&quot;&gt; &lt;code&gt;Spliterator.trySplit()&lt;/code&gt; &lt;/a&gt;呼び出し全体で指定されているように減少する必要があります。</target>
        </trans-unit>
        <trans-unit id="f10f115293acf7405775035800014677ebc0f036" translate="yes" xml:space="preserve">
          <source>If this Spliterator is &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and has not yet been partially traversed or split, or this Spliterator is &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt; and has not yet been partially traversed, this estimate must be an accurate count of elements that would be encountered by a complete traversal. Otherwise, this estimate may be arbitrarily inaccurate, but must decrease as specified across invocations of &lt;a href=&quot;spliterator#trySplit--&quot;&gt;&lt;code&gt;Spliterator.trySplit()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このSpliteratorが&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;であり、まだ部分的にトラバースまたは分割されていない場合、またはこのSpliteratorが&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;であり、まだ部分的にトラバースされていない場合、この推定は、完全なトラバースで検出される要素の正確な数でなければなりません。そうでない場合、この見積もりは任意に不正確になる可能性がありますが、&lt;a href=&quot;spliterator#trySplit--&quot;&gt; &lt;code&gt;Spliterator.trySplit()&lt;/code&gt; の&lt;/a&gt;呼び出し全体で指定されたとおりに減少する必要があります。</target>
        </trans-unit>
        <trans-unit id="682bc010d06e54be90f9f68acd4412d80bea539d" translate="yes" xml:space="preserve">
          <source>If this Spliterator's source is &lt;a href=&quot;#SORTED&quot;&gt;&lt;code&gt;SORTED&lt;/code&gt;&lt;/a&gt; by a &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt;, returns that &lt;code&gt;Comparator&lt;/code&gt;.</source>
          <target state="translated">このSpliteratorのソースがある場合&lt;a href=&quot;#SORTED&quot;&gt; &lt;code&gt;SORTED&lt;/code&gt; &lt;/a&gt;によって&lt;a href=&quot;comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;、リターン &lt;code&gt;Comparator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="905207a3af8d7d49514ef82f0871a4373713e621" translate="yes" xml:space="preserve">
          <source>If this Spliterator's source is &lt;a href=&quot;#SORTED&quot;&gt;&lt;code&gt;SORTED&lt;/code&gt;&lt;/a&gt; by a &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt;, returns that &lt;code&gt;Comparator&lt;/code&gt;. If the source is &lt;code&gt;SORTED&lt;/code&gt; in &lt;a href=&quot;../lang/comparable&quot;&gt;natural order&lt;/a&gt;, returns &lt;code&gt;null&lt;/code&gt;. Otherwise, if the source is not &lt;code&gt;SORTED&lt;/code&gt;, throws &lt;a href=&quot;../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このSpliteratorのソースがある場合&lt;a href=&quot;#SORTED&quot;&gt; &lt;code&gt;SORTED&lt;/code&gt; &lt;/a&gt;によって&lt;a href=&quot;comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;、リターン &lt;code&gt;Comparator&lt;/code&gt; 。ソースがある場合 &lt;code&gt;SORTED&lt;/code&gt; で&lt;a href=&quot;../lang/comparable&quot;&gt;自然な順序&lt;/a&gt;、返品は &lt;code&gt;null&lt;/code&gt; 。それ以外の場合、ソースが &lt;code&gt;SORTED&lt;/code&gt; でない場合は、&lt;a href=&quot;../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="f60f6f6cceac6f24471b339df70a79fb087d77de" translate="yes" xml:space="preserve">
          <source>If this Spliterator's source is &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;SORTED&lt;/code&gt;&lt;/a&gt; by a &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt;, returns that &lt;code&gt;Comparator&lt;/code&gt;. If the source is &lt;code&gt;SORTED&lt;/code&gt; in &lt;a href=&quot;../lang/comparable&quot;&gt;natural order&lt;/a&gt;, returns &lt;code&gt;null&lt;/code&gt;. Otherwise, if the source is not &lt;code&gt;SORTED&lt;/code&gt;, throws &lt;a href=&quot;../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このSpliteratorのソースがある場合&lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;SORTED&lt;/code&gt; &lt;/a&gt;によって&lt;a href=&quot;comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;、リターン &lt;code&gt;Comparator&lt;/code&gt; 。ソースが&lt;a href=&quot;../lang/comparable&quot;&gt;自然順序&lt;/a&gt;で &lt;code&gt;SORTED&lt;/code&gt; れている場合、 &lt;code&gt;null&lt;/code&gt; を返します。それ以外の場合、ソースが &lt;code&gt;SORTED&lt;/code&gt; でなければ、&lt;a href=&quot;../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="6674dc0f86ff9e9b4b4c5a389e36f2e0dc71b59a" translate="yes" xml:space="preserve">
          <source>If this Toolkit is not a headless implementation and if they exist, service providers of &lt;a href=&quot;../../javax/accessibility/accessibilityprovider&quot;&gt;&lt;code&gt;AccessibilityProvider&lt;/code&gt;&lt;/a&gt; will be loaded if specified by the system property &lt;code&gt;javax.accessibility.assistive_technologies&lt;/code&gt;.</source>
          <target state="translated">このツールキットがヘッドレス実装ではなく、存在する場合、システムプロパティ &lt;code&gt;javax.accessibility.assistive_technologies&lt;/code&gt; で指定されていれば、&lt;a href=&quot;../../javax/accessibility/accessibilityprovider&quot;&gt; &lt;code&gt;AccessibilityProvider&lt;/code&gt; の&lt;/a&gt;サービスプロバイダーがロードされます。</target>
        </trans-unit>
        <trans-unit id="1d47d9dbaa7d1cd77d733d9036821dd30adccdd2" translate="yes" xml:space="preserve">
          <source>If this URI does not contain any characters in the</source>
          <target state="translated">このURIが</target>
        </trans-unit>
        <trans-unit id="953276a9eb7a662bc1d17295c7e9ca3ca9dc9fe3" translate="yes" xml:space="preserve">
          <source>If this URI is opaque, or if its path is already in normal form, then this URI is returned. Otherwise a new URI is constructed that is identical to this URI except that its path is computed by normalizing this URI's path in a manner consistent with &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;, section 5.2, step 6, sub-steps c through f; that is:</source>
          <target state="translated">このURIが不透明である場合、またはそのパスがすでに通常の形式である場合、このURIが返されます。それ以外の場合、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396の&lt;/a&gt;セクション5.2、ステップ6、サブステップc〜fと一貫した方法でこのURIのパスを正規化することによってパスが計算されることを除いて、このURIと同じ新しいURIが構築されます。あれは：</target>
        </trans-unit>
        <trans-unit id="ef183e3c97a706cf2aab485f3b25ca02123979b8" translate="yes" xml:space="preserve">
          <source>If this URI was created by invoking one of the constructors in this class then a string equivalent to the original input string, or to the string computed from the originally-given components, as appropriate, is returned. Otherwise this URI was created by normalization, resolution, or relativization, and so a string is constructed from this URI's components according to the rules specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;, section 5.2, step 7.</source>
          <target state="translated">このURIがこのクラスのコンストラクターの1つを呼び出すことによって作成された場合、元の入力文字列、または必要に応じて、元々与えられたコンポーネントから計算された文字列と同等の文字列が返されます。それ以外の場合、このURIは正規化、解決、または相対化によって作成されたため、&lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396の&lt;/a&gt;セクション5.2、ステップ7で指定された規則に従って、このURIのコンポーネントから文字列が構築されます。</target>
        </trans-unit>
        <trans-unit id="35a608d401f58e4ebbe22c45677516aed01211dc" translate="yes" xml:space="preserve">
          <source>If this URI's authority component has already been recognized as being server-based then it will already have been parsed into user-information, host, and port components. In this case, or if this URI has no authority component, this method simply returns this URI.</source>
          <target state="translated">このURIの権限コンポーネントがすでにサーバーベースであると認識されている場合、それはすでに ユーザー情報、ホスト、およびポートコンポーネントに解析されているだろう。この場合、あるいはこのURIが権限コンポーネントを持たない場合、このメソッドは単にこのURIを返す。</target>
        </trans-unit>
        <trans-unit id="10af9a44e99bb61805a131e639458b07bd84921d" translate="yes" xml:space="preserve">
          <source>If this Window is visible, brings this Window to the front and may make it the focused Window.</source>
          <target state="translated">このウィンドウが見える場合、このウィンドウを前面に持ってきて、フォーカスされたウィンドウにすることができます。</target>
        </trans-unit>
        <trans-unit id="a6e5240230eb6160b2ea5c94b7d9fadcdd61dfd5" translate="yes" xml:space="preserve">
          <source>If this Window is visible, sends this Window to the back and may cause it to lose focus or activation if it is the focused or active Window.</source>
          <target state="translated">このウィンドウが表示されている場合、このウィンドウを後ろに送り、フォーカスされたウィンドウまたはアクティブなウィンドウの場合、フォーカスを失ったり、アクティブになったりする可能性があります。</target>
        </trans-unit>
        <trans-unit id="ef9fe6d6f3003383c86e1f86ad295780a616846e" translate="yes" xml:space="preserve">
          <source>If this abstract pathname does not denote a directory, then this method returns &lt;code&gt;null&lt;/code&gt;. Otherwise an array of &lt;code&gt;File&lt;/code&gt; objects is returned, one for each file or directory in the directory. Pathnames denoting the directory itself and the directory's parent directory are not included in the result. Each resulting abstract pathname is constructed from this abstract pathname using the &lt;a href=&quot;#%3Cinit%3E(java.io.File,java.lang.String)&quot;&gt;&lt;code&gt;File(File,&amp;nbsp;String)&lt;/code&gt;&lt;/a&gt; constructor. Therefore if this pathname is absolute then each resulting pathname is absolute; if this pathname is relative then each resulting pathname will be relative to the same directory.</source>
          <target state="translated">この抽象パス名がディレクトリを示さない場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。それ以外の場合は、ディレクトリ内のファイルまたはディレクトリごとに1つずつ、 &lt;code&gt;File&lt;/code&gt; オブジェクトの配列が返されます。ディレクトリ自体とディレクトリの親ディレクトリを示すパス名は結果に含まれません。結果の各抽象パス名は、&lt;a href=&quot;#%3Cinit%3E(java.io.File,java.lang.String)&quot;&gt; &lt;code&gt;File(File,&amp;nbsp;String)&lt;/code&gt; &lt;/a&gt;コンストラクターを使用してこの抽象パス名から作成されます。したがって、このパス名が絶対パスの場合、結果の各パス名は絶対パス名になります。このパス名が相対パス名の場合、結果の各パス名は同じディレクトリから相対パスになります。</target>
        </trans-unit>
        <trans-unit id="f6747f06730f4f2cd3ccc7aa43e049d9e46fd3b4" translate="yes" xml:space="preserve">
          <source>If this abstract pathname does not denote a directory, then this method returns &lt;code&gt;null&lt;/code&gt;. Otherwise an array of &lt;code&gt;File&lt;/code&gt; objects is returned, one for each file or directory in the directory. Pathnames denoting the directory itself and the directory's parent directory are not included in the result. Each resulting abstract pathname is constructed from this abstract pathname using the &lt;a href=&quot;file#File-java.io.File-java.lang.String-&quot;&gt;&lt;code&gt;File(File,&amp;nbsp;String)&lt;/code&gt;&lt;/a&gt; constructor. Therefore if this pathname is absolute then each resulting pathname is absolute; if this pathname is relative then each resulting pathname will be relative to the same directory.</source>
          <target state="translated">この抽象パス名がディレクトリを示していない場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。それ以外の場合は、ディレクトリ内のファイルまたはディレクトリごとに1つずつ、 &lt;code&gt;File&lt;/code&gt; オブジェクトの配列が返されます。ディレクトリ自体とディレクトリの親ディレクトリを示すパス名は、結果には含まれません。結果の各抽象パス名は、&lt;a href=&quot;file#File-java.io.File-java.lang.String-&quot;&gt; &lt;code&gt;File(File,&amp;nbsp;String)&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して、この抽象パス名から構築されます。したがって、このパス名が絶対である場合、結果の各パス名は絶対です。このパス名が相対である場合、結果として得られる各パス名は同じディレクトリからの相対になります。</target>
        </trans-unit>
        <trans-unit id="0a706980eb4f663347a3cb237daa9264b98ba23c" translate="yes" xml:space="preserve">
          <source>If this abstract pathname does not denote a directory, then this method returns &lt;code&gt;null&lt;/code&gt;. Otherwise an array of strings is returned, one for each file or directory in the directory. Names denoting the directory itself and the directory's parent directory are not included in the result. Each string is a file name rather than a complete path.</source>
          <target state="translated">この抽象パス名がディレクトリを示していない場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。それ以外の場合は、文字列の配列がディレクトリ内のファイルまたはディレクトリごとに1つ返されます。ディレクトリ自体とディレクトリの親ディレクトリを示す名前は結果に含まれません。各文字列は、完全なパスではなくファイル名です。</target>
        </trans-unit>
        <trans-unit id="5a33b76522577e69900c3545cb9ba6966bcd1873" translate="yes" xml:space="preserve">
          <source>If this abstract pathname is already absolute, then the pathname string is simply returned as if by the &lt;a href=&quot;#getPath()&quot;&gt;&lt;code&gt;getPath()&lt;/code&gt;&lt;/a&gt; method. If this abstract pathname is the empty abstract pathname then the pathname string of the current user directory, which is named by the system property &lt;code&gt;user.dir&lt;/code&gt;, is returned. Otherwise this pathname is resolved in a system-dependent way. On UNIX systems, a relative pathname is made absolute by resolving it against the current user directory. On Microsoft Windows systems, a relative pathname is made absolute by resolving it against the current directory of the drive named by the pathname, if any; if not, it is resolved against the current user directory.</source>
          <target state="translated">この抽象パス名がすでに絶対パス名である場合、パス名文字列は&lt;a href=&quot;#getPath()&quot;&gt; &lt;code&gt;getPath()&lt;/code&gt; &lt;/a&gt;メソッドのように単純に返されます。この抽象パス名が空の抽象パス名である場合、システムプロパティ &lt;code&gt;user.dir&lt;/code&gt; によって名前が付けられた現在のユーザーディレクトリのパス名文字列が返されます。それ以外の場合、このパス名はシステムに依存する方法で解決されます。 UNIXシステムでは、相対パス名は、現在のユーザーディレクトリに対して解決することで絶対パス名になります。 Microsoft Windowsシステムでは、相対パス名は、パス名で指定されたドライブの現在のディレクトリ（存在する場合）に対して解決することにより、絶対パス名になります。そうでない場合は、現在のユーザーディレクトリに対して解決されます。</target>
        </trans-unit>
        <trans-unit id="7a3be84c548eed0823c8e3139a127143e82621eb" translate="yes" xml:space="preserve">
          <source>If this abstract pathname is already absolute, then the pathname string is simply returned as if by the &lt;code&gt;&lt;a href=&quot;file#getPath--&quot;&gt;&lt;code&gt;getPath()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method. If this abstract pathname is the empty abstract pathname then the pathname string of the current user directory, which is named by the system property &lt;code&gt;user.dir&lt;/code&gt;, is returned. Otherwise this pathname is resolved in a system-dependent way. On UNIX systems, a relative pathname is made absolute by resolving it against the current user directory. On Microsoft Windows systems, a relative pathname is made absolute by resolving it against the current directory of the drive named by the pathname, if any; if not, it is resolved against the current user directory.</source>
          <target state="translated">この抽象パス名がすでに絶対パスである場合、パス名文字列は単に &lt;code&gt;&lt;a href=&quot;file#getPath--&quot;&gt;&lt;code&gt;getPath()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドによるかのように返されます。この抽象パス名が空の抽象パス名である場合、システムプロパティ &lt;code&gt;user.dir&lt;/code&gt; によって名前が付けられた現在のユーザーディレクトリのパス名文字列が返されます。それ以外の場合、このパス名はシステム依存の方法で解決されます。 UNIXシステムでは、相対パス名は、現在のユーザーディレクトリに対して解決することで絶対パス名になります。 Microsoft Windowsシステムでは、相対パス名は、パス名で指定されたドライブの現在のディレクトリ（存在する場合）に対して解決することによって絶対パス名になります。そうでない場合は、現在のユーザーディレクトリに対して解決されます。</target>
        </trans-unit>
        <trans-unit id="01c37402cc1becc5bfd07365fcd08b2dbdad0ad1" translate="yes" xml:space="preserve">
          <source>If this abstract pathname is the empty abstract pathname then this method returns a &lt;code&gt;Path&lt;/code&gt; that may be used to access the current user directory.</source>
          <target state="translated">この抽象パス名が空の抽象パス名である場合、このメソッドは現在のユーザーディレクトリへのアクセスに使用できる &lt;code&gt;Path&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9b7f67a5f088a680ac92408fde260047d736423c" translate="yes" xml:space="preserve">
          <source>If this buffer is backed by an array then buffer position</source>
          <target state="translated">このバッファが配列でバックアップされている場合は、バッファの位置</target>
        </trans-unit>
        <trans-unit id="ae4dc7275b1ba484f35d013645c9f8c4328bed2e" translate="yes" xml:space="preserve">
          <source>If this buffer is itself read-only then this method behaves in exactly the same way as the &lt;a href=&quot;#duplicate()&quot;&gt;&lt;code&gt;duplicate&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このバッファ自体が読み取り専用の場合、このメソッドは&lt;a href=&quot;#duplicate()&quot;&gt; &lt;code&gt;duplicate&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="f89b379a17fce051e1f16277ddcb14ccc4b66b84" translate="yes" xml:space="preserve">
          <source>If this buffer is itself read-only then this method behaves in exactly the same way as the &lt;a href=&quot;bytebuffer#duplicate--&quot;&gt;&lt;code&gt;duplicate&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このバッファー自体が読み取り専用の場合、このメソッドは&lt;a href=&quot;bytebuffer#duplicate--&quot;&gt; &lt;code&gt;duplicate&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="156fa6ba3e659d60e072ffc378a13f068ae95a75" translate="yes" xml:space="preserve">
          <source>If this buffer is itself read-only then this method behaves in exactly the same way as the &lt;a href=&quot;charbuffer#duplicate--&quot;&gt;&lt;code&gt;duplicate&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このバッファー自体が読み取り専用の場合、このメソッドは&lt;a href=&quot;charbuffer#duplicate--&quot;&gt; &lt;code&gt;duplicate&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="35a75ac82494b6599a9d8bae6f1e022d63bf504f" translate="yes" xml:space="preserve">
          <source>If this buffer is itself read-only then this method behaves in exactly the same way as the &lt;a href=&quot;doublebuffer#duplicate--&quot;&gt;&lt;code&gt;duplicate&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このバッファー自体が読み取り専用の場合、このメソッドは&lt;a href=&quot;doublebuffer#duplicate--&quot;&gt; &lt;code&gt;duplicate&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="371c8e2f83e83deb4ece27649db80c4a89e64c63" translate="yes" xml:space="preserve">
          <source>If this buffer is itself read-only then this method behaves in exactly the same way as the &lt;a href=&quot;floatbuffer#duplicate--&quot;&gt;&lt;code&gt;duplicate&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このバッファー自体が読み取り専用の場合、このメソッドは&lt;a href=&quot;floatbuffer#duplicate--&quot;&gt; &lt;code&gt;duplicate&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="6d9ca59cfd7a9df15a63ddbc3c00fb352f1667b5" translate="yes" xml:space="preserve">
          <source>If this buffer is itself read-only then this method behaves in exactly the same way as the &lt;a href=&quot;intbuffer#duplicate--&quot;&gt;&lt;code&gt;duplicate&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このバッファー自体が読み取り専用の場合、このメソッドは&lt;a href=&quot;intbuffer#duplicate--&quot;&gt; &lt;code&gt;duplicate&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="eedcd5391de7d0bd92118ac43e586d896f287226" translate="yes" xml:space="preserve">
          <source>If this buffer is itself read-only then this method behaves in exactly the same way as the &lt;a href=&quot;longbuffer#duplicate--&quot;&gt;&lt;code&gt;duplicate&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このバッファー自体が読み取り専用の場合、このメソッドは&lt;a href=&quot;longbuffer#duplicate--&quot;&gt; &lt;code&gt;duplicate&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="36c05dd52389e980b2b475c5bf397dcbfe429999" translate="yes" xml:space="preserve">
          <source>If this buffer is itself read-only then this method behaves in exactly the same way as the &lt;a href=&quot;shortbuffer#duplicate--&quot;&gt;&lt;code&gt;duplicate&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このバッファー自体が読み取り専用の場合、このメソッドは&lt;a href=&quot;shortbuffer#duplicate--&quot;&gt; &lt;code&gt;duplicate&lt;/code&gt; &lt;/a&gt;メソッドとまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="5877df09139688bd1d4dd4caded2b54d8b6ef182" translate="yes" xml:space="preserve">
          <source>If this buffer was not mapped in read/write mode (&lt;a href=&quot;channels/filechannel.mapmode#READ_WRITE&quot;&gt;&lt;code&gt;FileChannel.MapMode.READ_WRITE&lt;/code&gt;&lt;/a&gt;) then invoking this method has no effect.</source>
          <target state="translated">このバッファーが読み取り/書き込みモード（&lt;a href=&quot;channels/filechannel.mapmode#READ_WRITE&quot;&gt; &lt;code&gt;FileChannel.MapMode.READ_WRITE&lt;/code&gt; &lt;/a&gt;）でマップされていない場合、このメソッドを呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="a46445cea2b2d0e72d6b122d83869fbc86e4fec2" translate="yes" xml:space="preserve">
          <source>If this canonical name equals</source>
          <target state="translated">この正準名が</target>
        </trans-unit>
        <trans-unit id="ca738f426c40cb3ea3806863cff08f7c8b90ba98" translate="yes" xml:space="preserve">
          <source>If this certificate does not contain a &lt;code&gt;SubjectAltName&lt;/code&gt; extension, &lt;code&gt;null&lt;/code&gt; is returned. Otherwise, a &lt;code&gt;Collection&lt;/code&gt; is returned with an entry representing each &lt;code&gt;GeneralName&lt;/code&gt; included in the extension. Each entry is a &lt;code&gt;List&lt;/code&gt; whose first entry is an &lt;code&gt;Integer&lt;/code&gt; (the name type, 0-8) and whose second entry is a &lt;code&gt;String&lt;/code&gt; or a byte array (the name, in string or ASN.1 DER encoded form, respectively).</source>
          <target state="translated">この証明書に &lt;code&gt;SubjectAltName&lt;/code&gt; 拡張が含まれていない場合、 &lt;code&gt;null&lt;/code&gt; が返されます。それ以外の場合は、拡張機能に含まれる各 &lt;code&gt;GeneralName&lt;/code&gt; を表すエントリを含む &lt;code&gt;Collection&lt;/code&gt; が返されます。各エントリは、最初のエントリが &lt;code&gt;Integer&lt;/code&gt; （名前のタイプ、0〜8）であり、2番目のエントリが &lt;code&gt;String&lt;/code&gt; またはバイト配列（それぞれ、文字列またはASN.1 DERエンコード形式の名前）である &lt;code&gt;List&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="21ef757fd34257aff40a963d9fc1a1d93bd09628" translate="yes" xml:space="preserve">
          <source>If this certificate does not contain an &lt;code&gt;IssuerAltName&lt;/code&gt; extension, &lt;code&gt;null&lt;/code&gt; is returned. Otherwise, a &lt;code&gt;Collection&lt;/code&gt; is returned with an entry representing each &lt;code&gt;GeneralName&lt;/code&gt; included in the extension. Each entry is a &lt;code&gt;List&lt;/code&gt; whose first entry is an &lt;code&gt;Integer&lt;/code&gt; (the name type, 0-8) and whose second entry is a &lt;code&gt;String&lt;/code&gt; or a byte array (the name, in string or ASN.1 DER encoded form, respectively). For more details about the formats used for each name type, see the &lt;code&gt;getSubjectAlternativeNames&lt;/code&gt; method.</source>
          <target state="translated">この証明書に &lt;code&gt;IssuerAltName&lt;/code&gt; 拡張が含まれていない場合、 &lt;code&gt;null&lt;/code&gt; が返されます。それ以外の場合は、拡張機能に含まれる各 &lt;code&gt;GeneralName&lt;/code&gt; を表すエントリを含む &lt;code&gt;Collection&lt;/code&gt; が返されます。各エントリは、最初のエントリが &lt;code&gt;Integer&lt;/code&gt; （名前のタイプ、0〜8）であり、2番目のエントリが &lt;code&gt;String&lt;/code&gt; またはバイト配列（それぞれ、文字列またはASN.1 DERエンコード形式の名前）である &lt;code&gt;List&lt;/code&gt; です。各名前タイプに使用される形式の詳細については、 &lt;code&gt;getSubjectAlternativeNames&lt;/code&gt; メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="fb57839b1a1ab664307c336a0abc091c0ec8147d" translate="yes" xml:space="preserve">
          <source>If this channel is already closed then invoking this method has no effect.</source>
          <target state="translated">このチャンネルが既に閉じられている場合、このメソッドを呼び出しても何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="5ab02f31b97ee071939ff874b950f37cd99195cf" translate="yes" xml:space="preserve">
          <source>If this channel is already connected then this method will not block and will immediately return &lt;code&gt;true&lt;/code&gt;. If this channel is in non-blocking mode then this method will return &lt;code&gt;false&lt;/code&gt; if the connection process is not yet complete. If this channel is in blocking mode then this method will block until the connection either completes or fails, and will always either return &lt;code&gt;true&lt;/code&gt; or throw a checked exception describing the failure.</source>
          <target state="translated">このチャネルがすでに接続されている場合、このメソッドはブロックせず、すぐに &lt;code&gt;true&lt;/code&gt; を返します。このチャネルが非ブロッキングモードの場合、接続プロセスがまだ完了していないと、このメソッドは &lt;code&gt;false&lt;/code&gt; を返します。このチャネルがブロックモードの場合、このメソッドは接続が完了するか失敗するまでブロックし、常に &lt;code&gt;true&lt;/code&gt; を返すか、失敗を説明するチェック済み例外をスローします。</target>
        </trans-unit>
        <trans-unit id="3d7c302dbe2f695025b8640ac34f50a0de64f0c2" translate="yes" xml:space="preserve">
          <source>If this channel is already registered with the given selector then the selection key representing that registration is returned after setting its interest set to the given value.</source>
          <target state="translated">このチャンネルが既に指定されたセレクタに登録されている場合は、その登録を表す選択キーが、指定された値に設定された後に返されます。</target>
        </trans-unit>
        <trans-unit id="d87bd2f3adfdc3f28325dac54a700242beec8405" translate="yes" xml:space="preserve">
          <source>If this channel is closed by another thread during an invocation of this method then an &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">このメソッドの呼び出し中にこのチャネルが別のスレッドによって閉じられると、&lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="7dbdb52e985c96146985878c92a9ee572c7a87bf" translate="yes" xml:space="preserve">
          <source>If this channel is closed then the value returned by this method is not specified.</source>
          <target state="translated">このチャンネルがクローズされている場合、このメソッドが返す値は指定されません。</target>
        </trans-unit>
        <trans-unit id="163dba92f7b27612158435e616665962f5f46564" translate="yes" xml:space="preserve">
          <source>If this channel is closed while this operation is in progress then the key returned by this method will have been cancelled and will therefore be invalid.</source>
          <target state="translated">この操作の進行中にこのチャンネルが閉じられた場合、このメソッドが返すキーはキャンセルされ、無効になります。</target>
        </trans-unit>
        <trans-unit id="84c9fd31b88a7519ddc19ca6724be20f67fc5a71" translate="yes" xml:space="preserve">
          <source>If this channel is currently a member of the group on the given interface to receive all datagrams then the membership key, representing that membership, is returned. Otherwise this channel joins the group and the resulting new membership key is returned. The resulting membership key is not &lt;a href=&quot;membershipkey#sourceAddress()&quot;&gt;&lt;code&gt;source-specific&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このチャネルが現在、すべてのデータグラムを受信する特定のインターフェイス上のグループのメンバーである場合、そのメンバーシップを表すメンバーシップキーが返されます。それ以外の場合、このチャネルはグループに参加し、結果の新しいメンバーシップキーが返されます。結果のメンバーシップキーは&lt;a href=&quot;membershipkey#sourceAddress()&quot;&gt; &lt;code&gt;source-specific&lt;/code&gt; &lt;/a&gt;はありません。</target>
        </trans-unit>
        <trans-unit id="570c45f56fd23551052dac6addc16e9085479d7c" translate="yes" xml:space="preserve">
          <source>If this channel is currently a member of the group on the given interface to receive all datagrams then the membership key, representing that membership, is returned. Otherwise this channel joins the group and the resulting new membership key is returned. The resulting membership key is not &lt;a href=&quot;membershipkey#sourceAddress--&quot;&gt;&lt;code&gt;source-specific&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このチャネルが現在、すべてのデータグラムを受信する特定のインターフェイスのグループのメンバーである場合、そのメンバーシップを表すメンバーシップキーが返されます。それ以外の場合、このチャネルはグループに参加し、結果の新しいメンバーシップキーが返されます。結果のメンバーシップキーは&lt;a href=&quot;membershipkey#sourceAddress--&quot;&gt; &lt;code&gt;source-specific&lt;/code&gt; &lt;/a&gt;はありません。</target>
        </trans-unit>
        <trans-unit id="641402668a9668b943e42e87c3311792c3da6909" translate="yes" xml:space="preserve">
          <source>If this channel is currently a member of the group on the given interface to receive datagrams from the given source address then the membership key, representing that membership, is returned. Otherwise this channel joins the group and the resulting new membership key is returned. The resulting membership key is &lt;a href=&quot;membershipkey#sourceAddress()&quot;&gt;&lt;code&gt;source-specific&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このチャネルが現在、指定された送信元アドレスからデータグラムを受信するための指定されたインターフェイス上のグループのメンバーである場合、そのメンバーシップを表すメンバーシップキーが返されます。それ以外の場合、このチャネルはグループに参加し、結果の新しいメンバーシップキーが返されます。結果のメンバーシップキーは&lt;a href=&quot;membershipkey#sourceAddress()&quot;&gt; &lt;code&gt;source-specific&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="f801112322d04b871768e0c5d6c19666441d7d93" translate="yes" xml:space="preserve">
          <source>If this channel is currently a member of the group on the given interface to receive datagrams from the given source address then the membership key, representing that membership, is returned. Otherwise this channel joins the group and the resulting new membership key is returned. The resulting membership key is &lt;a href=&quot;membershipkey#sourceAddress--&quot;&gt;&lt;code&gt;source-specific&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このチャネルが現在、指定されたソースアドレスからデータグラムを受信するために指定されたインターフェイスのグループのメンバーである場合、そのメンバーシップを表すメンバーシップキーが返されます。それ以外の場合、このチャネルはグループに参加し、結果の新しいメンバーシップキーが返されます。結果のメンバーシップキーは&lt;a href=&quot;membershipkey#sourceAddress--&quot;&gt; &lt;code&gt;source-specific&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="d7ae74f038ce702c7795ca66e36fd03cf2ca6306" translate="yes" xml:space="preserve">
          <source>If this channel is currently registered with the given selector then the selection key representing that registration is returned. The key's interest set will have been changed to &lt;code&gt;ops&lt;/code&gt;, as if by invoking the &lt;a href=&quot;selectionkey#interestOps(int)&quot;&gt;&lt;code&gt;interestOps(int)&lt;/code&gt;&lt;/a&gt; method. If the &lt;code&gt;att&lt;/code&gt; argument is not &lt;code&gt;null&lt;/code&gt; then the key's attachment will have been set to that value. A &lt;a href=&quot;cancelledkeyexception&quot;&gt;&lt;code&gt;CancelledKeyException&lt;/code&gt;&lt;/a&gt; will be thrown if the key has already been cancelled.</source>
          <target state="translated">このチャネルが現在指定されたセレクターに登録されている場合、その登録を表す選択キーが返されます。キーのインタレストセットは、&lt;a href=&quot;selectionkey#interestOps(int)&quot;&gt; &lt;code&gt;interestOps(int)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すかのように、 &lt;code&gt;ops&lt;/code&gt; に変更されます。場合 &lt;code&gt;att&lt;/code&gt; 引数がない &lt;code&gt;null&lt;/code&gt; で、キーの添付ファイルは、その値に設定されています。&lt;a href=&quot;cancelledkeyexception&quot;&gt; &lt;code&gt;CancelledKeyException&lt;/code&gt; は&lt;/a&gt;、キーがすでに取り消された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="10e0307a2763fb964960a3bb207d0318d28aa119" translate="yes" xml:space="preserve">
          <source>If this channel is currently registered with the given selector then the selection key representing that registration is returned. The key's interest set will have been changed to &lt;code&gt;ops&lt;/code&gt;, as if by invoking the &lt;a href=&quot;selectionkey#interestOps-int-&quot;&gt;&lt;code&gt;interestOps(int)&lt;/code&gt;&lt;/a&gt; method. If the &lt;code&gt;att&lt;/code&gt; argument is not &lt;code&gt;null&lt;/code&gt; then the key's attachment will have been set to that value. A &lt;a href=&quot;cancelledkeyexception&quot;&gt;&lt;code&gt;CancelledKeyException&lt;/code&gt;&lt;/a&gt; will be thrown if the key has already been cancelled.</source>
          <target state="translated">このチャネルが指定されたセレクターに現在登録されている場合、その登録を表す選択キーが返されます。キーの対象セットは、まるで &lt;code&gt;ops&lt;/code&gt; &lt;a href=&quot;selectionkey#interestOps-int-&quot;&gt; &lt;code&gt;interestOps(int)&lt;/code&gt; &lt;/a&gt;メソッドを呼び出したかのようにopsに変更されます。場合 &lt;code&gt;att&lt;/code&gt; 引数がない &lt;code&gt;null&lt;/code&gt; で、キーの添付ファイルは、その値に設定されています。&lt;a href=&quot;cancelledkeyexception&quot;&gt; &lt;code&gt;CancelledKeyException&lt;/code&gt; は&lt;/a&gt;、キーがすでに取り消された場合にスローされます。</target>
        </trans-unit>
        <trans-unit id="731ff7e16ea304387baccdf40ccf8446f1ff82b2" translate="yes" xml:space="preserve">
          <source>If this channel is in blocking mode then an invocation of this method will block until the connection is established or an I/O error occurs.</source>
          <target state="translated">このチャネルがブロッキングモードの場合、このメソッドの呼び出しは、接続が確立されるか、I/O エラーが発生するまでブロックされます。</target>
        </trans-unit>
        <trans-unit id="c4af049551fd4be314d3714c933c67ea1e633195" translate="yes" xml:space="preserve">
          <source>If this channel is in non-blocking mode and there is sufficient room in the underlying output buffer, or if this channel is in blocking mode and sufficient room becomes available, then the remaining bytes in the given buffer are transmitted as a single datagram to the given target address.</source>
          <target state="translated">このチャネルがノンブロッキングモードであり、基礎となる出力バッファ内に十分な余裕がある場合、または、このチャネルがブロッキングモードであり、十分な余裕が利用可能になった場合、与えられたバッファ内の残りのバイトは、与えられたターゲットアドレスに単一のデータグラムとして送信される。</target>
        </trans-unit>
        <trans-unit id="fff98624798393795f6e6378a6255bda5994733c" translate="yes" xml:space="preserve">
          <source>If this channel is in non-blocking mode then an invocation of this method initiates a non-blocking connection operation. If the connection is established immediately, as can happen with a local connection, then this method returns &lt;code&gt;true&lt;/code&gt;. Otherwise this method returns &lt;code&gt;false&lt;/code&gt; and the connection operation must later be completed by invoking the &lt;a href=&quot;#finishConnect()&quot;&gt;&lt;code&gt;finishConnect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このチャネルが非ブロッキングモードの場合、このメソッドを呼び出すと、非ブロッキング接続操作が開始されます。ローカル接続で発生する可能性があるように、接続がすぐに確立された場合、このメソッドは &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合、このメソッドは &lt;code&gt;false&lt;/code&gt; を返し、接続操作は後で&lt;a href=&quot;#finishConnect()&quot;&gt; &lt;code&gt;finishConnect&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して完了する必要があります。</target>
        </trans-unit>
        <trans-unit id="a8abf8e95673d1e00311052153bdf85098ea24d2" translate="yes" xml:space="preserve">
          <source>If this channel is in non-blocking mode then an invocation of this method initiates a non-blocking connection operation. If the connection is established immediately, as can happen with a local connection, then this method returns &lt;code&gt;true&lt;/code&gt;. Otherwise this method returns &lt;code&gt;false&lt;/code&gt; and the connection operation must later be completed by invoking the &lt;a href=&quot;socketchannel#finishConnect--&quot;&gt;&lt;code&gt;finishConnect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このチャネルが非ブロッキングモードの場合、このメソッドを呼び出すと、非ブロッキング接続操作が開始されます。ローカル接続で発生する可能性があるように、接続がすぐに確立される場合、このメソッドは &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合、このメソッドは &lt;code&gt;false&lt;/code&gt; を返し、接続操作は後で&lt;a href=&quot;socketchannel#finishConnect--&quot;&gt; &lt;code&gt;finishConnect&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して完了する必要があります。</target>
        </trans-unit>
        <trans-unit id="96a8b30b6de24a4c9b0a5b52fe7f2986ad339a52" translate="yes" xml:space="preserve">
          <source>If this channel is in non-blocking mode then this method will immediately return &lt;code&gt;null&lt;/code&gt; if there are no pending connections. Otherwise it will block indefinitely until a new connection is available or an I/O error occurs.</source>
          <target state="translated">このチャネルが非ブロッキングモードの場合、保留中の接続がない場合、このメソッドはすぐに &lt;code&gt;null&lt;/code&gt; を返します。それ以外の場合は、新しい接続が利用可能になるか、I / Oエラーが発生するまで無期限にブロックされます。</target>
        </trans-unit>
        <trans-unit id="90989044c141384d7c72d3db34ded45944982562" translate="yes" xml:space="preserve">
          <source>If this channel is registered with one or more selectors then an attempt to place it into blocking mode will cause an &lt;a href=&quot;illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">このチャネルが1つ以上のセレクターに登録されている場合、それをブロッキングモードにしようとすると、&lt;a href=&quot;illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="69f3fb5016a511b899c6888623fee283b8c8ccae" translate="yes" xml:space="preserve">
          <source>If this channel's file resides on a local storage device then when this method returns it is guaranteed that all changes made to the file since this channel was created, or since this method was last invoked, will have been written to that device. This is useful for ensuring that critical information is not lost in the event of a system crash.</source>
          <target state="translated">このチャンネルのファイルがローカルストレージデバイスに存在する場合、このメソッドが返されると、このチャンネルが作成されてから、またはこのメソッドが最後に呼び出されてからファイルに加えられたすべての変更がそのデバイスに書き込まれていることが保証されます。これは、システムクラッシュの際に重要な情報が失われないようにするために便利です。</target>
        </trans-unit>
        <trans-unit id="0983d675f212d67b75b1d6a5a184d98509d7348d" translate="yes" xml:space="preserve">
          <source>If this channel's socket is not connected, or if the channel is closed, then invoking this method has no effect.</source>
          <target state="translated">このチャネルのソケットが接続されていない場合、またはチャネルが閉じている場合、このメソッドを呼び出しても何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="e22345f8e4dbdb6cf9ef6dd7404a94dfa19e4d17" translate="yes" xml:space="preserve">
          <source>If this cipher (including its underlying feedback or padding scheme) requires any random bytes (e.g., for parameter generation), it will get them from &lt;code&gt;random&lt;/code&gt;.</source>
          <target state="translated">この暗号（基礎となるフィードバックまたはパディングスキームを含む）が任意のランダムバイトを必要とする場合（たとえば、パラメーター生成のため）、それらは &lt;code&gt;random&lt;/code&gt; から取得します。</target>
        </trans-unit>
        <trans-unit id="df4c7583376380d891b8180fbc799056297727ce" translate="yes" xml:space="preserve">
          <source>If this cipher (including its underlying feedback or padding scheme) requires any random bytes (e.g., for parameter generation), it will get them using the &lt;a href=&quot;../../java/security/securerandom&quot;&gt;&lt;code&gt;SecureRandom&lt;/code&gt;&lt;/a&gt; implementation of the highest-priority installed provider as the source of randomness. (If none of the installed providers supply an implementation of SecureRandom, a system-provided source of randomness will be used.)</source>
          <target state="translated">この暗号（基礎となるフィードバックまたはパディングスキームを含む）が任意のランダムバイトを必要とする場合（たとえば、パラメーター生成のため）、ランダム性のソースとして最も優先度の高いインストール済みプロバイダーの&lt;a href=&quot;../../java/security/securerandom&quot;&gt; &lt;code&gt;SecureRandom&lt;/code&gt; &lt;/a&gt;実装を使用してそれらを取得します。（インストールされているプロバイダーのいずれもSecureRandomの実装を提供しない場合は、システムが提供するランダム性のソースが使用されます。）</target>
        </trans-unit>
        <trans-unit id="1f014b120b82cdd937f7d72a75fe35be62115d12" translate="yes" xml:space="preserve">
          <source>If this cipher (including its underlying feedback or padding scheme) requires any random bytes (e.g., for parameter generation), it will get them using the &lt;code&gt;SecureRandom&lt;/code&gt; implementation of the highest-priority installed provider as the source of randomness. (If none of the installed providers supply an implementation of SecureRandom, a system-provided source of randomness will be used.)</source>
          <target state="translated">この暗号（基礎となるフィードバックまたはパディングスキームを含む）が任意のランダムバイトを必要とする場合（たとえば、パラメーター生成のため）、ランダム性のソースとして最も優先度の高いインストール済みプロバイダーの &lt;code&gt;SecureRandom&lt;/code&gt; 実装を使用してそれらを取得します。（インストールされているプロバイダーのいずれもSecureRandomの実装を提供しない場合は、システムが提供するランダム性のソースが使用されます。）</target>
        </trans-unit>
        <trans-unit id="ba0b3c8786993d9f760f587fe2264fbe88b5a094" translate="yes" xml:space="preserve">
          <source>If this cipher requires algorithm parameters that cannot be derived from the input parameters, and there are no reasonable provider-specific default values, initialization will necessarily fail.</source>
          <target state="translated">この暗号が入力パラメータから導出できないアルゴリズムパラメータを必要とし、プロバイダ固有の合理的なデフォルト値がない場合、初期化は必然的に失敗します。</target>
        </trans-unit>
        <trans-unit id="96e2ec548e664031381e0b6546b9fff93897ee2d" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters and &lt;code&gt;params&lt;/code&gt; is null, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;#engineGetParameters()&quot;&gt;&lt;code&gt;engineGetParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#engineGetIV()&quot;&gt;&lt;code&gt;engineGetIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">この暗号は、任意のアルゴリズムパラメータと必要な場合 &lt;code&gt;params&lt;/code&gt; nullの場合、基本となる暗号実装は、それが暗号化または鍵ラッピング用に初期化されている場合（プロバイダ固有のデフォルトまたはランダム値を使用して）必要なパラメータ自体を生成し、育てることになっている &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; がした場合復号化またはキーのアンラップのために初期化されています。生成されたパラメーターは、&lt;a href=&quot;#engineGetParameters()&quot;&gt; &lt;code&gt;engineGetParameters&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#engineGetIV()&quot;&gt; &lt;code&gt;engineGetIV&lt;/code&gt; &lt;/a&gt;（パラメーターがIVの場合）を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="295f1a894c11e8a083e8ff21f6cd1651b963b591" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters and &lt;code&gt;params&lt;/code&gt; is null, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;#getParameters()&quot;&gt;&lt;code&gt;getParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#getIV()&quot;&gt;&lt;code&gt;getIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">この暗号は、任意のアルゴリズムパラメータと必要な場合 &lt;code&gt;params&lt;/code&gt; nullの場合、基本となる暗号実装は、それが暗号化または鍵ラッピング用に初期化されている場合（プロバイダ固有のデフォルトまたはランダム値を使用して）必要なパラメータ自体を生成し、育てることになっている &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; がした場合復号化またはキーのアンラップのために初期化されています。生成されたパラメーターは、&lt;a href=&quot;#getParameters()&quot;&gt; &lt;code&gt;getParameters&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#getIV()&quot;&gt; &lt;code&gt;getIV&lt;/code&gt; &lt;/a&gt;（パラメーターがIVの場合）を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="c9607337bc0d2c4ac058d5f2be65c25112f2a16a" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters and &lt;code&gt;params&lt;/code&gt; is null, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;cipher#getParameters--&quot;&gt;&lt;code&gt;getParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cipher#getIV--&quot;&gt;&lt;code&gt;getIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">この暗号がアルゴリズムパラメータを必要とし、 &lt;code&gt;params&lt;/code&gt; がnullの場合、基礎となる暗号実装は、暗号化またはキーラッピング用に初期化されている場合、必要なパラメータ自体を（プロバイダ固有のデフォルト値またはランダム値を使用して）生成し、次の場合に &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; を発生させるはずです復号化または鍵のアンラップのために初期化されています。生成されたパラメーターは、&lt;a href=&quot;cipher#getParameters--&quot;&gt; &lt;code&gt;getParameters&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;cipher#getIV--&quot;&gt; &lt;code&gt;getIV&lt;/code&gt; &lt;/a&gt;（パラメーターがIVの場合）を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="9885890d448faaca56b5580f516444c6cfac3586" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters and &lt;code&gt;params&lt;/code&gt; is null, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;cipherspi#engineGetParameters--&quot;&gt;&lt;code&gt;engineGetParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cipherspi#engineGetIV--&quot;&gt;&lt;code&gt;engineGetIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">この暗号がアルゴリズムパラメータを必要とし、 &lt;code&gt;params&lt;/code&gt; がnullの場合、基礎となる暗号実装は、暗号化またはキーラッピング用に初期化されている場合、必要なパラメータ自体を（プロバイダ固有のデフォルト値またはランダム値を使用して）生成し、次の場合に &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; を発生させるはずです復号化または鍵のアンラップのために初期化されています。生成されたパラメーターは、&lt;a href=&quot;cipherspi#engineGetParameters--&quot;&gt; &lt;code&gt;engineGetParameters&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;cipherspi#engineGetIV--&quot;&gt; &lt;code&gt;engineGetIV&lt;/code&gt; &lt;/a&gt;（パラメーターがIVの場合）を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="5ca44083091b654a0ac5374679822a97ed0ebaa3" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters that cannot be derived from the given &lt;code&gt;key&lt;/code&gt;, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidKeyException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;#engineGetParameters()&quot;&gt;&lt;code&gt;engineGetParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#engineGetIV()&quot;&gt;&lt;code&gt;engineGetIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">この暗号が、指定された &lt;code&gt;key&lt;/code&gt; から導出できないアルゴリズムパラメータを必要とする場合、暗号化またはキーラッピング用に初期化されている場合、基盤となる暗号実装は、必要なパラメータ自体を（プロバイダー固有のデフォルト値またはランダム値を使用して）生成することになっています。復号化またはキーのアンラップのために初期化されている場合は、 &lt;code&gt;InvalidKeyException&lt;/code&gt; を発生させます。生成されたパラメーターは、&lt;a href=&quot;#engineGetParameters()&quot;&gt; &lt;code&gt;engineGetParameters&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#engineGetIV()&quot;&gt; &lt;code&gt;engineGetIV&lt;/code&gt; &lt;/a&gt;（パラメーターがIVの場合）を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="e6179f11e920f6ee69b1258d8c269fd6827001c8" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters that cannot be derived from the given &lt;code&gt;key&lt;/code&gt;, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidKeyException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;#getParameters()&quot;&gt;&lt;code&gt;getParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#getIV()&quot;&gt;&lt;code&gt;getIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">この暗号が、指定された &lt;code&gt;key&lt;/code&gt; から導出できないアルゴリズムパラメータを必要とする場合、暗号化またはキーラッピング用に初期化されている場合、基盤となる暗号実装は、必要なパラメータ自体を（プロバイダー固有のデフォルト値またはランダム値を使用して）生成することになっています。復号化またはキーのアンラップのために初期化されている場合は、 &lt;code&gt;InvalidKeyException&lt;/code&gt; を発生させます。生成されたパラメーターは、&lt;a href=&quot;#getParameters()&quot;&gt; &lt;code&gt;getParameters&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#getIV()&quot;&gt; &lt;code&gt;getIV&lt;/code&gt; &lt;/a&gt;（パラメーターがIVの場合）を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="1ee2bdd99eb0055747a5b587dd5410737fc50478" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters that cannot be derived from the given &lt;code&gt;key&lt;/code&gt;, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidKeyException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;cipher#getParameters--&quot;&gt;&lt;code&gt;getParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cipher#getIV--&quot;&gt;&lt;code&gt;getIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">この暗号が、特定の &lt;code&gt;key&lt;/code&gt; から導出できないアルゴリズムパラメータを必要とする場合、基礎となる暗号の実装は、暗号化またはキーラッピング用に初期化されている場合、必要なパラメータ自体を（プロバイダ固有のデフォルトまたはランダム値を使用して）生成することになっています。復号化または鍵のアンラップのために初期化されている場合は、 &lt;code&gt;InvalidKeyException&lt;/code&gt; を発生させます。生成されたパラメーターは、&lt;a href=&quot;cipher#getParameters--&quot;&gt; &lt;code&gt;getParameters&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;cipher#getIV--&quot;&gt; &lt;code&gt;getIV&lt;/code&gt; &lt;/a&gt;（パラメーターがIVの場合）を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="d1a771ba743be01067043fa16cfae7decccc00fb" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters that cannot be derived from the given &lt;code&gt;key&lt;/code&gt;, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidKeyException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;cipherspi#engineGetParameters--&quot;&gt;&lt;code&gt;engineGetParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cipherspi#engineGetIV--&quot;&gt;&lt;code&gt;engineGetIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">この暗号が、特定の &lt;code&gt;key&lt;/code&gt; から導出できないアルゴリズムパラメータを必要とする場合、基礎となる暗号の実装は、暗号化またはキーラッピング用に初期化されている場合、必要なパラメータ自体を（プロバイダ固有のデフォルトまたはランダム値を使用して）生成することになっています。復号化または鍵のアンラップのために初期化されている場合は、 &lt;code&gt;InvalidKeyException&lt;/code&gt; を発生させます。生成されたパラメーターは、&lt;a href=&quot;cipherspi#engineGetParameters--&quot;&gt; &lt;code&gt;engineGetParameters&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;cipherspi#engineGetIV--&quot;&gt; &lt;code&gt;engineGetIV&lt;/code&gt; &lt;/a&gt;（パラメーターがIVの場合）を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="2b3d39461792b1a28f5b6732bd8dfd526cf4645f" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters that cannot be derived from the public key in the given &lt;code&gt;certificate&lt;/code&gt;, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidKeyException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;#getParameters()&quot;&gt;&lt;code&gt;getParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#getIV()&quot;&gt;&lt;code&gt;getIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">この暗号が、指定された &lt;code&gt;certificate&lt;/code&gt; 公開鍵から導出できないアルゴリズムパラメータを必要とする場合、暗号化用に初期化されている場合、または基盤となる暗号実装は、必要なパラメータ自体を（プロバイダー固有のデフォルト値またはランダム値を使用して）生成することになっています。キーのラッピング。復号化またはキーのアンラッピングのために初期化されている場合は、 &lt;code&gt;InvalidKeyException&lt;/code&gt; が発生します。生成されたパラメーターは、&lt;a href=&quot;#getParameters()&quot;&gt; &lt;code&gt;getParameters&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#getIV()&quot;&gt; &lt;code&gt;getIV&lt;/code&gt; &lt;/a&gt;（パラメーターがIVの場合）を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="1ad3aae370c5f54c513619cd9029629a3de2dbf8" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters that cannot be derived from the public key in the given &lt;code&gt;certificate&lt;/code&gt;, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidKeyException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;cipher#getParameters--&quot;&gt;&lt;code&gt;getParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cipher#getIV--&quot;&gt;&lt;code&gt;getIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">この暗号が、指定された &lt;code&gt;certificate&lt;/code&gt; 公開鍵から導出できないアルゴリズムパラメータを必要とする場合、基礎となる暗号の実装は、暗号化用に初期化されている場合、必要なパラメータ自体を（プロバイダ固有のデフォルトまたはランダム値を使用して）生成することになっています。キーのラップ、および復号化またはキーのラップ解除のために初期化されている場合は、 &lt;code&gt;InvalidKeyException&lt;/code&gt; を発生させます。生成されたパラメーターは、&lt;a href=&quot;cipher#getParameters--&quot;&gt; &lt;code&gt;getParameters&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;cipher#getIV--&quot;&gt; &lt;code&gt;getIV&lt;/code&gt; &lt;/a&gt;（パラメーターがIVの場合）を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="fd810e0520a9cbad755c6af505916dd59eb466d1" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters that cannot be derived from the public key in the given certificate, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;
 InvalidKeyException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;cipher#getParameters--&quot;&gt;&lt;code&gt;getParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;cipher#getIV--&quot;&gt;&lt;code&gt;getIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">この暗号が、特定の証明書の公開鍵から導出できないアルゴリズムパラメータを必要とする場合、基礎となる暗号実装は、暗号化用に初期化されているか、キーのラップ、および復号化またはキーのラップ解除のために初期化されている場合は、 &lt;code&gt; InvalidKeyException&lt;/code&gt; を発生させます。生成されたパラメーターは、&lt;a href=&quot;cipher#getParameters--&quot;&gt; &lt;code&gt;getParameters&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;cipher#getIV--&quot;&gt; &lt;code&gt;getIV&lt;/code&gt; &lt;/a&gt;（パラメーターがIVの場合）を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="75019fbedbc85eb5e372cf044fc03f013866a158" translate="yes" xml:space="preserve">
          <source>If this cipher requires any algorithm parameters that cannot be derived from the public key in the given certificate, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an &lt;code&gt;InvalidKeyException&lt;/code&gt; if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using &lt;a href=&quot;#getParameters()&quot;&gt;&lt;code&gt;getParameters&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#getIV()&quot;&gt;&lt;code&gt;getIV&lt;/code&gt;&lt;/a&gt; (if the parameter is an IV).</source>
          <target state="translated">この暗号が、指定された証明書の公開鍵から導出できないアルゴリズムパラメータを必要とする場合、暗号化用に初期化されている場合、または基盤となる暗号実装は、必要なパラメータ自体を（プロバイダー固有のデフォルト値またはランダム値を使用して）生成することになっています。キーのラッピング。復号化またはキーのアンラッピングのために初期化されている場合は、 &lt;code&gt;InvalidKeyException&lt;/code&gt; が発生します。生成されたパラメーターは、&lt;a href=&quot;#getParameters()&quot;&gt; &lt;code&gt;getParameters&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#getIV()&quot;&gt; &lt;code&gt;getIV&lt;/code&gt; &lt;/a&gt;（パラメーターがIVの場合）を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="624f76b7bbcd95cfb5dce88f3ddce2f2d8116067" translate="yes" xml:space="preserve">
          <source>If this class does not exist, or if the class exists but it is not a subclass of &lt;code&gt;URLStreamHandler&lt;/code&gt;, then a &lt;code&gt;MalformedURLException&lt;/code&gt; is thrown.</source>
          <target state="translated">このクラスが存在しない場合、またはクラスは存在するが &lt;code&gt;URLStreamHandler&lt;/code&gt; のサブクラスでない場合は、 &lt;code&gt;MalformedURLException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="9156c08e78113d71e6a9049d21a6d22fe0c0dce1" translate="yes" xml:space="preserve">
          <source>If this class is a &lt;a href=&quot;#isLocalClass()&quot;&gt;local class&lt;/a&gt; or an &lt;a href=&quot;#isAnonymousClass()&quot;&gt;anonymous class&lt;/a&gt;, then this method is equivalent to invoking &lt;code&gt;getPackageName()&lt;/code&gt; on the &lt;a href=&quot;#getDeclaringClass()&quot;&gt;declaring class&lt;/a&gt; of the &lt;a href=&quot;#getEnclosingMethod()&quot;&gt;enclosing method&lt;/a&gt; or &lt;a href=&quot;#getEnclosingConstructor()&quot;&gt;enclosing constructor&lt;/a&gt;.</source>
          <target state="translated">このクラスである場合&lt;a href=&quot;#isLocalClass()&quot;&gt;、ローカルクラス&lt;/a&gt;または&lt;a href=&quot;#isAnonymousClass()&quot;&gt;匿名クラス&lt;/a&gt;、このメソッドは呼び出しに相当する &lt;code&gt;getPackageName()&lt;/code&gt; に&lt;a href=&quot;#getDeclaringClass()&quot;&gt;宣言クラス&lt;/a&gt;の&lt;a href=&quot;#getEnclosingMethod()&quot;&gt;封入方法&lt;/a&gt;又は&lt;a href=&quot;#getEnclosingConstructor()&quot;&gt;囲むコンストラクタ&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d2cdfcbdb46e84a8f3e13641e2358031001847ac" translate="yes" xml:space="preserve">
          <source>If this class is a member class, then this method is equivalent to invoking &lt;code&gt;getPackageName()&lt;/code&gt; on the &lt;a href=&quot;#getEnclosingClass()&quot;&gt;enclosing class&lt;/a&gt;.</source>
          <target state="translated">このクラスがメンバークラスの場合、このメソッドは、&lt;a href=&quot;#getEnclosingClass()&quot;&gt;囲んでいるクラスで&lt;/a&gt; &lt;code&gt;getPackageName()&lt;/code&gt; を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="8626e2167f3acaf69ed44441ed4989daba19da55" translate="yes" xml:space="preserve">
          <source>If this class is a top level class, then this method returns the fully qualified name of the package that the class is a member of, or the empty string if the class is in an unnamed package.</source>
          <target state="translated">このクラスがトップレベルのクラスである場合、このメソッドはそのクラスが属しているパッケージの完全修飾名を返します。</target>
        </trans-unit>
        <trans-unit id="ddaac24bb48e59e163f155e65b6c6c215be3e736" translate="yes" xml:space="preserve">
          <source>If this class is in a named &lt;a href=&quot;module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt; then this method will attempt to find the resource in the module. This is done by delegating to the module's class loader &lt;a href=&quot;classloader#findResource(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;findResource(String,String)&lt;/code&gt;&lt;/a&gt; method, invoking it with the module name and the absolute name of the resource. Resources in named modules are subject to the rules for encapsulation specified in the &lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;module#getResourceAsStream(java.lang.String)&quot;&gt;&lt;code&gt;getResourceAsStream&lt;/code&gt;&lt;/a&gt; method and so this method returns &lt;code&gt;null&lt;/code&gt; when the resource is a non-&quot;&lt;code&gt;.class&lt;/code&gt;&quot; resource in a package that is not open to the caller's module.</source>
          <target state="translated">このクラスが名前付き&lt;a href=&quot;module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt;場合、このメソッドはモジュール内のリソースを見つけようとします。これは、モジュールのクラスローダー&lt;a href=&quot;classloader#findResource(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;findResource(String,String)&lt;/code&gt; &lt;/a&gt;メソッドに委任し、モジュール名とリソースの絶対名を使用して呼び出すことによって行われます。名前付きモジュール内のリソースは、 &lt;code&gt;Module&lt;/code&gt; &lt;a href=&quot;module#getResourceAsStream(java.lang.String)&quot;&gt; &lt;code&gt;getResourceAsStream&lt;/code&gt; &lt;/a&gt;メソッドで指定されたカプセル化のルールに従うため、リソースが呼び出し元のモジュールに対して開かれていないパッケージ内の「 &lt;code&gt;.class&lt;/code&gt; 」以外のリソースである場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9d33ad049e90274fa3c71445ef6c35b438fe87ac" translate="yes" xml:space="preserve">
          <source>If this class loader defines a &lt;code&gt;Package&lt;/code&gt; of the given name, the &lt;code&gt;Package&lt;/code&gt; is returned. Otherwise, the ancestors of this class loader are searched recursively (parent by parent) for a &lt;code&gt;Package&lt;/code&gt; of the given name.</source>
          <target state="translated">このクラスローダーが指定された名前の &lt;code&gt;Package&lt;/code&gt; を定義している場合、 &lt;code&gt;Package&lt;/code&gt; が返されます。それ以外の場合、このクラスローダーの祖先は、指定された名前の &lt;code&gt;Package&lt;/code&gt; を再帰的に（親ごとに）検索されます。</target>
        </trans-unit>
        <trans-unit id="69d4f238f20070124b52ae9bc4ef867a68c61d0a" translate="yes" xml:space="preserve">
          <source>If this class object represents a class of arrays, then the internal form of the name consists of the name of the element type preceded by one or more '&lt;code&gt;[&lt;/code&gt;' characters representing the depth of the array nesting. The encoding of element type names is as follows:</source>
          <target state="translated">このクラスオブジェクトが配列のクラスを表す場合、名前の内部形式は、配列のネストの深さを表す1つ以上の ' &lt;code&gt;[&lt;/code&gt; '文字が前に付いた要素タイプの名前で構成されます。要素タイプ名のエンコーディングは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="def3edfc8fbf2a15bf3c8b618faaee89903ad9aa" translate="yes" xml:space="preserve">
          <source>If this class object represents a primitive type or void, then the name returned is a &lt;code&gt;String&lt;/code&gt; equal to the Java language keyword corresponding to the primitive type or void.</source>
          <target state="translated">このクラスオブジェクトがプリミティブ型またはvoidを表す場合、返される名前は、プリミティブ型またはvoidに対応するJava言語キーワードに等しい &lt;code&gt;String&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a3d80b3d6f4447468d30f956a1a77f5832658ebf" translate="yes" xml:space="preserve">
          <source>If this class object represents a reference type that is not an array type then the binary name of the class is returned, as specified by</source>
          <target state="translated">このクラスオブジェクトが配列型ではない参照型を表している場合は、クラスのバイナリ名が返されます。</target>
        </trans-unit>
        <trans-unit id="db28040b45d2a98f52c1833ce5f4c36ec6224266" translate="yes" xml:space="preserve">
          <source>If this class represents an array type then this method returns the package name of the element type. If this class represents a primitive type or void then the package name &quot;&lt;code&gt;java.lang&lt;/code&gt;&quot; is returned.</source>
          <target state="translated">このクラスが配列型を表す場合、このメソッドは要素型のパッケージ名を返します。このクラスがプリミティブ型またはvoidを表す場合、パッケージ名「 &lt;code&gt;java.lang&lt;/code&gt; 」が返されます。</target>
        </trans-unit>
        <trans-unit id="6f77ca8fe264d910e6b42fc0f47e0891e55279e4" translate="yes" xml:space="preserve">
          <source>If this class represents an array type, a primitive type or void, this method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このクラスが配列型、プリミティブ型、またはvoidを表す場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="fef86f537c4d25ec3304e0508d1b9e97b4310b7c" translate="yes" xml:space="preserve">
          <source>If this code resides in a module, then in order to refer to the &lt;code&gt;com.example.CodecFactory&lt;/code&gt; interface, the module declaration would require the module which exports the interface. The module declaration would also specify use of &lt;code&gt;com.example.CodecFactory&lt;/code&gt;:</source>
          <target state="translated">このコードがモジュール内にある場合、 &lt;code&gt;com.example.CodecFactory&lt;/code&gt; インターフェイスを参照するには、モジュール宣言でインターフェイスをエクスポートするモジュールが必要になります。モジュール宣言では、 &lt;code&gt;com.example.CodecFactory&lt;/code&gt; の使用も指定されます。</target>
        </trans-unit>
        <trans-unit id="09a4dc4cb86e1e2f58f6aef9bb6951ac52447ad2" translate="yes" xml:space="preserve">
          <source>If this collection fits in the specified array with room to spare (i.e., the array has more elements than this collection), the element in the array immediately following the end of the collection is set to &lt;code&gt;null&lt;/code&gt;. (This is useful in determining the length of this collection</source>
          <target state="translated">このコレクションが指定された配列に収まり、余裕がある場合（つまり、配列にこのコレクションよりも多くの要素がある場合）、コレクションの最後の直後の配列内の要素は &lt;code&gt;null&lt;/code&gt; に設定されます。（これは、このコレクションの長さを決定するのに役立ちます</target>
        </trans-unit>
        <trans-unit id="78d6d731c58007d098ae33f9cb0873fdf5217de6" translate="yes" xml:space="preserve">
          <source>If this collection makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.</source>
          <target state="translated">このコレクションが、その要素がイテレータによって返される順序を保証している場合、このメソッドは同じ順序で要素を返さなければなりません。</target>
        </trans-unit>
        <trans-unit id="c9446c62948f501cababa3237edd9e6e3d9650e0" translate="yes" xml:space="preserve">
          <source>If this component is a lightweight component, this method causes a call to this component's &lt;code&gt;paint&lt;/code&gt; method as soon as possible. Otherwise, this method causes a call to this component's &lt;code&gt;update&lt;/code&gt; method as soon as possible.</source>
          <target state="translated">このコンポーネントが軽量コンポーネントである場合、このメソッドはこのコンポーネントの &lt;code&gt;paint&lt;/code&gt; メソッドをできるだけ早く呼び出します。それ以外の場合、このメソッドは、このコンポーネントの &lt;code&gt;update&lt;/code&gt; メソッドをできるだけ早く呼び出します。</target>
        </trans-unit>
        <trans-unit id="43c6df72f69fc2a5fdc4f0aef260da90a54256f3" translate="yes" xml:space="preserve">
          <source>If this component is a lightweight component, this method causes a call to this component's &lt;code&gt;paint&lt;/code&gt; method. Otherwise, this method causes a call to this component's &lt;code&gt;update&lt;/code&gt; method.</source>
          <target state="translated">このコンポーネントが軽量コンポーネントである場合、このメソッドはこのコンポーネントの &lt;code&gt;paint&lt;/code&gt; メソッドを呼び出します。それ以外の場合、このメソッドはこのコンポーネントの &lt;code&gt;update&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="18095941c15618d966f7b371c9f6f6b0d2557e6a" translate="yes" xml:space="preserve">
          <source>If this component is not a lightweight component, the AWT calls the &lt;code&gt;update&lt;/code&gt; method in response to a call to &lt;code&gt;repaint&lt;/code&gt;. You can assume that the background is not cleared.</source>
          <target state="translated">このコンポーネントが軽量コンポーネントでない場合、AWTは &lt;code&gt;repaint&lt;/code&gt; の呼び出しに応答して &lt;code&gt;update&lt;/code&gt; メソッドを呼び出します。背景がクリアされていないと想定できます。</target>
        </trans-unit>
        <trans-unit id="3c98bf87256cbfcf308d313fd2f95fc4c59ba56e" translate="yes" xml:space="preserve">
          <source>If this connector is not already associated with an &lt;code&gt;MBeanServer&lt;/code&gt; object, or if the &lt;code&gt;mbsf.setMBeanServer&lt;/code&gt; call just mentioned succeeds, then &lt;code&gt;mbsf&lt;/code&gt; becomes this connector server's &lt;code&gt;MBeanServer&lt;/code&gt;.</source>
          <target state="translated">このコネクタがまだ関連付けられていない場合 &lt;code&gt;MBeanServer&lt;/code&gt; オブジェクト、または場合 &lt;code&gt;mbsf.setMBeanServer&lt;/code&gt; の今述べた呼び出しが成功した場合、 &lt;code&gt;mbsf&lt;/code&gt; がこのコネクタサーバーのとなり &lt;code&gt;MBeanServer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58e96a5a6e2be6622a22adedba3560a6b7eb53b6" translate="yes" xml:space="preserve">
          <source>If this connector server is already associated with an &lt;code&gt;MBeanServer&lt;/code&gt; object, then that object is given to &lt;a href=&quot;../mbeanserverforwarder#setMBeanServer-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;mbsf.setMBeanServer&lt;/code&gt;&lt;/a&gt;. If doing so produces an exception, this method throws the same exception without any other effect.</source>
          <target state="translated">このコネクタサーバーがすでに &lt;code&gt;MBeanServer&lt;/code&gt; オブジェクトに関連付けられている場合、そのオブジェクトは&lt;a href=&quot;../mbeanserverforwarder#setMBeanServer-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;mbsf.setMBeanServer&lt;/code&gt; に&lt;/a&gt;渡されます。そうすることで例外が生成される場合、このメソッドは他の効果なしに同じ例外をスローします。</target>
        </trans-unit>
        <trans-unit id="54238ea0dde39365f3abd9591fec0cc2e7191d52" translate="yes" xml:space="preserve">
          <source>If this connector server is already associated with an &lt;code&gt;MBeanServer&lt;/code&gt; object, then that object is given to &lt;a href=&quot;mbeanserverforwarder#setMBeanServer(javax.management.MBeanServer)&quot;&gt;&lt;code&gt;mbsf.setMBeanServer&lt;/code&gt;&lt;/a&gt;. If doing so produces an exception, this method throws the same exception without any other effect.</source>
          <target state="translated">このコネクタサーバーがすでに &lt;code&gt;MBeanServer&lt;/code&gt; オブジェクトに関連付けられている場合、そのオブジェクトは&lt;a href=&quot;mbeanserverforwarder#setMBeanServer(javax.management.MBeanServer)&quot;&gt; &lt;code&gt;mbsf.setMBeanServer&lt;/code&gt; に&lt;/a&gt;渡されます。そうすることで例外が発生した場合、このメソッドは他の影響なしに同じ例外をスローします。</target>
        </trans-unit>
        <trans-unit id="e199ab0891f8cfdd3a886ca4d5502a09e0396dc4" translate="yes" xml:space="preserve">
          <source>If this connector server is already associated with an &lt;code&gt;MBeanServer&lt;/code&gt; object, then that object is given to &lt;a href=&quot;mbeanserverforwarder#setMBeanServer-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;mbsf.setMBeanServer&lt;/code&gt;&lt;/a&gt;. If doing so produces an exception, this method throws the same exception without any other effect.</source>
          <target state="translated">このコネクタサーバーがすでに &lt;code&gt;MBeanServer&lt;/code&gt; オブジェクトに関連付けられている場合、そのオブジェクトは&lt;a href=&quot;mbeanserverforwarder#setMBeanServer-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;mbsf.setMBeanServer&lt;/code&gt; に&lt;/a&gt;渡されます。そうすることで例外が生成される場合、このメソッドは他の効果なしに同じ例外をスローします。</target>
        </trans-unit>
        <trans-unit id="ae5f6cf31f822688ca1f884ee4068dbfa858e7ae" translate="yes" xml:space="preserve">
          <source>If this connector server is already attached to an MBean server, this method has no effect. The MBean server it is attached to is not necessarily the one it is being registered in.</source>
          <target state="translated">このコネクタサーバが既に MBean サーバに接続されている場合、この方法は効果がありません。アタッチされている MBean サーバが登録されているとは限りません。</target>
        </trans-unit>
        <trans-unit id="0a9e140cb0c832ab6b488c178969be92c585856f" translate="yes" xml:space="preserve">
          <source>If this constitutes a change in the selected item, &lt;code&gt;ItemListener&lt;/code&gt;s added to the combo box will be notified with one or two &lt;code&gt;ItemEvent&lt;/code&gt;s. If there is a current selected item, an &lt;code&gt;ItemEvent&lt;/code&gt; will be fired and the state change will be &lt;code&gt;ItemEvent.DESELECTED&lt;/code&gt;. If &lt;code&gt;anObject&lt;/code&gt; is in the list and is not currently selected then an &lt;code&gt;ItemEvent&lt;/code&gt; will be fired and the state change will be &lt;code&gt;ItemEvent.SELECTED&lt;/code&gt;.</source>
          <target state="translated">これが選択したアイテムの変更を構成する場合、コンボボックスに追加された &lt;code&gt;ItemListener&lt;/code&gt; は、1つまたは2つの &lt;code&gt;ItemEvent&lt;/code&gt; で通知されます。現在選択されているアイテムがある場合、 &lt;code&gt;ItemEvent&lt;/code&gt; が発生し、状態の変化は &lt;code&gt;ItemEvent.DESELECTED&lt;/code&gt; になります。場合 &lt;code&gt;anObject&lt;/code&gt; がリストにあり、現在選択されていない、その後 &lt;code&gt;ItemEvent&lt;/code&gt; 解雇され、状態変化になります &lt;code&gt;ItemEvent.SELECTED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="37c1761b33f633d4ce5e3fd3edbd2ab61e42fe4f" translate="yes" xml:space="preserve">
          <source>If this constructor is used to process a stylesheet, normally setSystemId should also be called, so that relative URI references can be resolved.</source>
          <target state="translated">このコンストラクタがスタイルシートの処理に使用されている場合は、相対URI参照を解決できるように、通常はsetSystemIdも呼ばれなければなりません。</target>
        </trans-unit>
        <trans-unit id="591c70492849834b0b9910ca18bf79e4808ef615" translate="yes" xml:space="preserve">
          <source>If this decoder has already been flushed then invoking this method has no effect.</source>
          <target state="translated">このデコーダが既にフラッシュされている場合、このメソッドを呼び出しても何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="86ca06031a1ecf73bf9da47b58681d2e12423abc" translate="yes" xml:space="preserve">
          <source>If this decoder implements an auto-detecting charset then at a single point during a decoding operation this method may start returning &lt;code&gt;true&lt;/code&gt; to indicate that a specific charset has been detected in the input byte sequence. Once this occurs, the &lt;a href=&quot;#detectedCharset()&quot;&gt;&lt;code&gt;detectedCharset&lt;/code&gt;&lt;/a&gt; method may be invoked to retrieve the detected charset.</source>
          <target state="translated">このデコーダーが自動検出文字セットを実装している場合、デコード操作中の1つのポイントで、このメソッドは &lt;code&gt;true&lt;/code&gt; を返し始め、入力バイトシーケンスで特定の文字セットが検出されたことを示します。これが発生すると、&lt;a href=&quot;#detectedCharset()&quot;&gt; &lt;code&gt;detectedCharset&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、検出された文字セットを取得できます。</target>
        </trans-unit>
        <trans-unit id="29e1093694eed107a88bf7c07bbd5945249dbbd2" translate="yes" xml:space="preserve">
          <source>If this decoder implements an auto-detecting charset then at a single point during a decoding operation this method may start returning &lt;code&gt;true&lt;/code&gt; to indicate that a specific charset has been detected in the input byte sequence. Once this occurs, the &lt;a href=&quot;charsetdecoder#detectedCharset--&quot;&gt;&lt;code&gt;detectedCharset&lt;/code&gt;&lt;/a&gt; method may be invoked to retrieve the detected charset.</source>
          <target state="translated">このデコーダーが自動検出文字セットを実装している場合、デコード操作中の1つの時点で、このメソッドは &lt;code&gt;true&lt;/code&gt; を返し始め、特定の文字セットが入力バイトシーケンスで検出されたことを示します。これが発生すると、&lt;a href=&quot;charsetdecoder#detectedCharset--&quot;&gt; &lt;code&gt;detectedCharset&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、検出された文字セットを取得できます。</target>
        </trans-unit>
        <trans-unit id="94371ead6eeef262635714af7aa3dd537f5b17ff" translate="yes" xml:space="preserve">
          <source>If this decoder implements an auto-detecting charset then this method returns the actual charset once it has been detected. After that point, this method returns the same value for the duration of the current decoding operation. If not enough input bytes have yet been read to determine the actual charset then this method throws an &lt;a href=&quot;../../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このデコーダーが自動検出文字セットを実装している場合、このメソッドは、検出されると実際の文字セットを返します。その後、このメソッドは、現在の復号化操作の間、同じ値を返します。実際の文字セットを判別するのに十分な入力バイトがまだ読み取られていない場合、このメソッドは&lt;a href=&quot;../../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="c64bf88c12ecf5625c8218a6500e6ed616cbae7d" translate="yes" xml:space="preserve">
          <source>If this deque fits in the specified array with room to spare (i.e., the array has more elements than this deque), the element in the array immediately following the end of the deque is set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">この両端キューが指定された配列に収まり、余裕がある場合（つまり、配列にこの両端キューより多くの要素がある場合）、両端キューの終わりの直後の配列内の要素は &lt;code&gt;null&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="b460cff057520076da53b17b67bc663d2eae2c6f" translate="yes" xml:space="preserve">
          <source>If this dialog is modal and blocks some windows, then all of them are also sent to the back to keep them below the blocking dialog.</source>
          <target state="translated">このダイアログがモーダルでいくつかのウィンドウをブロックしている場合、それらのウィンドウもすべて後ろに送られてブロックダイアログの下に置かれます。</target>
        </trans-unit>
        <trans-unit id="02f57345a6452f5e9026d62211962bbc940e055e" translate="yes" xml:space="preserve">
          <source>If this dictionary already contains an entry for the specified &lt;code&gt;key&lt;/code&gt;, the value already in this dictionary for that &lt;code&gt;key&lt;/code&gt; is returned, after modifying the entry to contain the new element.</source>
          <target state="translated">このディクショナリに指定された &lt;code&gt;key&lt;/code&gt; エントリがすでに含まれている場合、新しい &lt;code&gt;key&lt;/code&gt; を含むようにエントリを変更した後、そのキーのこのディクショナリにすでにある値が返されます。</target>
        </trans-unit>
        <trans-unit id="21cdc0ae4deca45735edd1a8c869ab07f87eadf6" translate="yes" xml:space="preserve">
          <source>If this dictionary does not already have an entry for the specified &lt;code&gt;key&lt;/code&gt;, an entry is created for the specified &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;, and &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">この辞書がすでに指定のエントリがない場合は &lt;code&gt;key&lt;/code&gt; 、エントリが指定されたために作成された &lt;code&gt;key&lt;/code&gt; と &lt;code&gt;value&lt;/code&gt; 、および &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="5ba6239de0cab448d7826072832e3944f0eff1f3" translate="yes" xml:space="preserve">
          <source>If this duration has greater than millisecond precision, then the conversion will drop any excess precision information as though the amount in nanoseconds was subject to integer division by one million.</source>
          <target state="translated">この持続時間がミリ秒以上の精度を持つ場合、ナノ秒単位の量が100万分の整数除算の対象であるかのように、変換は余分な精度情報を削除します。</target>
        </trans-unit>
        <trans-unit id="646430d8f0c3cf4b060406c066441d14b415faf2" translate="yes" xml:space="preserve">
          <source>If this duration is too large to fit in a &lt;code&gt;long&lt;/code&gt; milliseconds, then an exception is thrown.</source>
          <target state="translated">この継続時間が長すぎて &lt;code&gt;long&lt;/code&gt; ミリ秒に収まらない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="5eb1910e8a8632050383d1502ff10c5891a131f7" translate="yes" xml:space="preserve">
          <source>If this duration is too large to fit in a &lt;code&gt;long&lt;/code&gt; nanoseconds, then an exception is thrown.</source>
          <target state="translated">この期間が長すぎて &lt;code&gt;long&lt;/code&gt; ナノ秒に収まらない場合は、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="fc847af510710c196d33cacd1e6c4938549822f3" translate="yes" xml:space="preserve">
          <source>If this edit is &lt;code&gt;inProgress&lt;/code&gt;, accepts &lt;code&gt;anEdit&lt;/code&gt; and returns true.</source>
          <target state="translated">この編集がある場合は &lt;code&gt;inProgress&lt;/code&gt; で、受け入れ &lt;code&gt;anEdit&lt;/code&gt; とリターンが真。</target>
        </trans-unit>
        <trans-unit id="4a91202676916cac7dee740e5b4030146c55eaee" translate="yes" xml:space="preserve">
          <source>If this element is one whose declaration is lexically enclosed immediately within the declaration of another element, that other element is returned.</source>
          <target state="translated">この要素が、他の要素の宣言の中で宣言が字句的にすぐに囲まれているものであれば、その他の要素が返されます。</target>
        </trans-unit>
        <trans-unit id="f792c4a3d4c584f788e17666a92b9623483ee223" translate="yes" xml:space="preserve">
          <source>If this encoder has already been flushed then invoking this method has no effect.</source>
          <target state="translated">このエンコーダが既にフラッシュされている場合は、このメソッドを実行しても何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="fec1a4cca0a225ea2cbc3a553e3c13b67dbfe972" translate="yes" xml:space="preserve">
          <source>If this end of the connection is expected to offer application protocol values, all protocols configured by this method will be sent to the peer.</source>
          <target state="translated">接続のこの端がアプリケーションプロトコル値を提供することが期待される場合、このメソッドによって構成されたすべてのプロトコルがピアに送信されます。</target>
        </trans-unit>
        <trans-unit id="f2bb0b0bcd59eee69bd5351804855fdd2bdb7afa" translate="yes" xml:space="preserve">
          <source>If this end of the connection is expected to select the application protocol value, the &lt;code&gt;protocols&lt;/code&gt; configured by this method are compared with those sent by the peer. The first matched value becomes the negotiated value. If none of the &lt;code&gt;protocols&lt;/code&gt; were actually requested by the peer, the underlying protocol will determine what action to take. (For example, ALPN will send a &lt;code&gt;&quot;no_application_protocol&quot;&lt;/code&gt; alert and terminate the connection.)</source>
          <target state="translated">接続のこの端がアプリケーションプロトコル値を選択すると予想される場合、この方法で構成された &lt;code&gt;protocols&lt;/code&gt; は、ピアによって送信されたプロトコルと比較されます。最初に一致した値がネゴシエートされた値になります。ピアから実際に要求された &lt;code&gt;protocols&lt;/code&gt; がない場合、基礎となるプロトコルが実行するアクションを決定します。（たとえば、ALPNは &lt;code&gt;&quot;no_application_protocol&quot;&lt;/code&gt; アラートを送信し、接続を終了します。）</target>
        </trans-unit>
        <trans-unit id="6c074959dfda7a1b8ccc45069a9e2c3e535da645" translate="yes" xml:space="preserve">
          <source>If this exemption mechanism requires any algorithm parameters and &lt;code&gt;params&lt;/code&gt; is null, the underlying exemption mechanism implementation is supposed to generate the required parameters itself (using provider-specific default values); in the case that algorithm parameters must be specified by the caller, an &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; is raised.</source>
          <target state="translated">この免除メカニズムがアルゴリズムパラメータを必要とし、 &lt;code&gt;params&lt;/code&gt; がnullの場合、基になる免除メカニズムの実装は、必要なパラメータ自体を（プロバイダ固有のデフォルト値を使用して）生成することになっています。呼び出し元がアルゴリズムパラメータを指定する必要がある場合は、 &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="f48b406dc55c7d93d9b734b8f828b98a0c6d2cb0" translate="yes" xml:space="preserve">
          <source>If this exemption mechanism requires any algorithm parameters that cannot be derived from the given &lt;code&gt;key&lt;/code&gt;, the underlying exemption mechanism implementation is supposed to generate the required parameters itself (using provider-specific default values); in the case that algorithm parameters must be specified by the caller, an &lt;code&gt;InvalidKeyException&lt;/code&gt; is raised.</source>
          <target state="translated">この免除メカニズムが、指定された &lt;code&gt;key&lt;/code&gt; から導出できないアルゴリズムパラメータを必要とする場合、基礎となる免除メカニズムの実装は、必要なパラメータ自体を生成することになっています（プロバイダ固有のデフォルト値を使用）。呼び出し元がアルゴリズムパラメータを指定する必要がある場合は、 &lt;code&gt;InvalidKeyException&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="50aecb57b570915b3125ed9e4b7405a7c9a0b5c2" translate="yes" xml:space="preserve">
          <source>If this factory cannot create a control using the argument supplied, it should return null. A factory should only throw an exception if it is sure that it is the only intended factory and that no other control factories should be tried. This might happen, for example, if the BER data in the control does not match what is expected of a control with the given OID. Since this method throws &lt;code&gt;NamingException&lt;/code&gt;, any other internally generated exception that should be propagated must be wrapped inside a &lt;code&gt;NamingException&lt;/code&gt;.</source>
          <target state="translated">このファクトリが提供された引数を使用してコントロールを作成できない場合は、nullを返す必要があります。ファクトリーは、それが唯一の意図されたファクトリーであり、他の制御ファクトリーを試してはならないことが確実な場合にのみ、例外をスローする必要があります。これは、たとえば、コントロールのBERデータが、指定されたOIDを持つコントロールに期待されるものと一致しない場合に発生する可能性があります。このメソッドは &lt;code&gt;NamingException&lt;/code&gt; をスローするため、伝播する必要がある他の内部で生成された例外はすべて、 &lt;code&gt;NamingException&lt;/code&gt; 内にラップする必要があります。</target>
        </trans-unit>
        <trans-unit id="45e27c4c938fbe66c22c4c86a3ed6d25c1cb9914" translate="yes" xml:space="preserve">
          <source>If this file has an associated channel then the channel is closed as well.</source>
          <target state="translated">このファイルに関連するチャンネルがある場合は、チャンネルも閉じられます。</target>
        </trans-unit>
        <trans-unit id="40514a98cfea1f91e67b273067b4bdf04e4a3289" translate="yes" xml:space="preserve">
          <source>If this flavor does not support the charset parameter, its representation must be &lt;code&gt;java.io.InputStream&lt;/code&gt;, &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt;, or &lt;code&gt;[B&lt;/code&gt;.</source>
          <target state="translated">このフレーバーがcharsetパラメーターをサポートしていない場合、その表現は &lt;code&gt;java.io.InputStream&lt;/code&gt; 、 &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt; 、または &lt;code&gt;[B&lt;/code&gt; である必要があります。</target>
        </trans-unit>
        <trans-unit id="f9244b141762feecbc0e9471262e7bf28fb2d00c" translate="yes" xml:space="preserve">
          <source>If this flavor supports the charset parameter, it must be equivalent to &lt;code&gt;DataFlavor.stringFlavor&lt;/code&gt;, or its representation must be &lt;code&gt;java.io.Reader&lt;/code&gt;, &lt;code&gt;java.lang.String&lt;/code&gt;, &lt;code&gt;java.nio.CharBuffer&lt;/code&gt;, &lt;code&gt;[C&lt;/code&gt;, &lt;code&gt;java.io.InputStream&lt;/code&gt;, &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt;, or &lt;code&gt;[B&lt;/code&gt;. If the representation is &lt;code&gt;java.io.InputStream&lt;/code&gt;, &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt;, or &lt;code&gt;[B&lt;/code&gt;, then this flavor's &lt;code&gt;charset&lt;/code&gt; parameter must be supported by this implementation of the Java platform. If a charset is not specified, then the platform default charset, which is always supported, is assumed.</source>
          <target state="translated">このフレーバーがcharsetパラメーターをサポートする場合、 &lt;code&gt;DataFlavor.stringFlavor&lt;/code&gt; と同等であるか、その表現が &lt;code&gt;java.io.Reader&lt;/code&gt; 、 &lt;code&gt;java.lang.String&lt;/code&gt; 、 &lt;code&gt;java.nio.CharBuffer&lt;/code&gt; 、 &lt;code&gt;[C&lt;/code&gt; 、 &lt;code&gt;java.io.InputStream&lt;/code&gt; 、 &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt; 必要があります。.nio.ByteBuffer、または &lt;code&gt;[B&lt;/code&gt; 。表現が &lt;code&gt;java.io.InputStream&lt;/code&gt; 、 &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt; 、または &lt;code&gt;[B&lt;/code&gt; の場合、このフレーバーの &lt;code&gt;charset&lt;/code&gt; パラメーターはJavaプラットフォームのこの実装でサポートされている必要があります。文字セットが指定されていない場合は、常にサポートされているプラ​​ットフォームのデフォルトの文字セットが想定されます。</target>
        </trans-unit>
        <trans-unit id="635e785cd12b388367b6da4d211b51f42af3dbeb" translate="yes" xml:space="preserve">
          <source>If this implementation supports</source>
          <target state="translated">この実装が</target>
        </trans-unit>
        <trans-unit id="cb6cded9975349e57e55f0c24d9a6249435ce9e2" translate="yes" xml:space="preserve">
          <source>If this instance was created with the &lt;a href=&quot;#%3Cinit%3E(java.io.InputStream,java.lang.String)&quot;&gt;&lt;code&gt;InputStreamReader(InputStream, String)&lt;/code&gt;&lt;/a&gt; constructor then the returned name, being unique for the encoding, may differ from the name passed to the constructor. This method will return &lt;code&gt;null&lt;/code&gt; if the stream has been closed.</source>
          <target state="translated">このインスタンスが&lt;a href=&quot;#%3Cinit%3E(java.io.InputStream,java.lang.String)&quot;&gt; &lt;code&gt;InputStreamReader(InputStream, String)&lt;/code&gt; &lt;/a&gt;コンストラクターで作成された場合、返される名前は、エンコードに固有であり、コンストラクターに渡される名前とは異なる場合があります。ストリームが閉じられている場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ec5e9663cdfaff9a4389c4e89da42425e3294af1" translate="yes" xml:space="preserve">
          <source>If this instance was created with the &lt;a href=&quot;#%3Cinit%3E(java.io.OutputStream,java.lang.String)&quot;&gt;&lt;code&gt;OutputStreamWriter(OutputStream, String)&lt;/code&gt;&lt;/a&gt; constructor then the returned name, being unique for the encoding, may differ from the name passed to the constructor. This method may return &lt;code&gt;null&lt;/code&gt; if the stream has been closed.</source>
          <target state="translated">このインスタンスが&lt;a href=&quot;#%3Cinit%3E(java.io.OutputStream,java.lang.String)&quot;&gt; &lt;code&gt;OutputStreamWriter(OutputStream, String)&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して作成された場合、返される名前は、エンコードに固有であり、コンストラクターに渡される名前とは異なる場合があります。ストリームが閉じられている場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返す場合があります。</target>
        </trans-unit>
        <trans-unit id="fe133eddff804df44bcaf058ea960eef008f4711" translate="yes" xml:space="preserve">
          <source>If this instance was created with the &lt;a href=&quot;inputstreamreader#InputStreamReader-java.io.InputStream-java.lang.String-&quot;&gt;&lt;code&gt;InputStreamReader(InputStream, String)&lt;/code&gt;&lt;/a&gt; constructor then the returned name, being unique for the encoding, may differ from the name passed to the constructor. This method will return &lt;code&gt;null&lt;/code&gt; if the stream has been closed.</source>
          <target state="translated">このインスタンスが&lt;a href=&quot;inputstreamreader#InputStreamReader-java.io.InputStream-java.lang.String-&quot;&gt; &lt;code&gt;InputStreamReader(InputStream, String)&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して作成された場合、返される名前はエンコードに対して一意であり、コンストラクターに渡された名前と異なる場合があります。ストリームが閉じている場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="890b309648dad3759e14d379a74cbd471b520cc0" translate="yes" xml:space="preserve">
          <source>If this instance was created with the &lt;a href=&quot;outputstreamwriter#OutputStreamWriter-java.io.OutputStream-java.lang.String-&quot;&gt;&lt;code&gt;OutputStreamWriter(OutputStream, String)&lt;/code&gt;&lt;/a&gt; constructor then the returned name, being unique for the encoding, may differ from the name passed to the constructor. This method may return &lt;code&gt;null&lt;/code&gt; if the stream has been closed.</source>
          <target state="translated">このインスタンスが&lt;a href=&quot;outputstreamwriter#OutputStreamWriter-java.io.OutputStream-java.lang.String-&quot;&gt; &lt;code&gt;OutputStreamWriter(OutputStream, String)&lt;/code&gt; &lt;/a&gt;コンストラクターで作成された場合、返される名前は、エンコーディングに対して一意であり、コンストラクターに渡された名前と異なる場合があります。ストリームが閉じている場合、このメソッドは &lt;code&gt;null&lt;/code&gt; を返すことがあります。</target>
        </trans-unit>
        <trans-unit id="9c0c7ed5296853c747df2e52d735327259e31d7a" translate="yes" xml:space="preserve">
          <source>If this instant has greater than millisecond precision, then the conversion will drop any excess precision information as though the amount in nanoseconds was subject to integer division by one million.</source>
          <target state="translated">この瞬間がミリ秒以上の精度を持つ場合、ナノ秒単位の量が100万分の整数除算の対象であるかのように、変換は余分な精度情報をドロップします。</target>
        </trans-unit>
        <trans-unit id="af5f9e803caf892e414dbe5489eabcd25bc34fc5" translate="yes" xml:space="preserve">
          <source>If this instant represents a point on the time-line too far in the future or past to fit in a &lt;code&gt;long&lt;/code&gt; milliseconds, then an exception is thrown.</source>
          <target state="translated">この瞬間がタイムライン上のポイントを表している場合、未来または過去が &lt;code&gt;long&lt;/code&gt; すぎてミリ秒に収まらないと、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="c551a84fb345608aa01aa4a9b03a192e434b911e" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;moduleelement#getEnclosingElement()&quot;&gt;module&lt;/a&gt;, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">これが&lt;a href=&quot;moduleelement#getEnclosingElement()&quot;&gt;モジュールの&lt;/a&gt;場合、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="1d83f2f13eb01a02375941491729e755fa976b00" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;packageelement#getEnclosingElement()&quot;&gt;package&lt;/a&gt;, its module is returned if such a module exists. Otherwise, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">これが&lt;a href=&quot;packageelement#getEnclosingElement()&quot;&gt;パッケージの&lt;/a&gt;場合、そのようなモジュールが存在すると、そのモジュールが返されます。それ以外の場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="51dd5d8c5d533ffbfd6b5e326c493179436819ba" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;packageelement#getEnclosingElement--&quot;&gt;package&lt;/a&gt;, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">これが&lt;a href=&quot;packageelement#getEnclosingElement--&quot;&gt;パッケージの&lt;/a&gt;場合、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="a01b93df7c40fa1373936e0085684f8ee1ae5419" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;typeelement#getEnclosingElement()&quot;&gt;top-level type&lt;/a&gt;, its package is returned.</source>
          <target state="translated">これが&lt;a href=&quot;typeelement#getEnclosingElement()&quot;&gt;トップレベルタイプの&lt;/a&gt;場合、そのパッケージが返されます。</target>
        </trans-unit>
        <trans-unit id="bf598f6c1d24fa4deedb239a99d3523a7ece48da" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;typeelement#getEnclosingElement--&quot;&gt;top-level type&lt;/a&gt;, its package is returned.</source>
          <target state="translated">これが&lt;a href=&quot;typeelement#getEnclosingElement--&quot;&gt;最上位タイプである&lt;/a&gt;場合、そのパッケージが返されます。</target>
        </trans-unit>
        <trans-unit id="f59ab5756a1f1e0f8946d6203578b85d274d2444" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;typeparameterelement#getEnclosingElement()&quot;&gt;type parameter&lt;/a&gt;, &lt;a href=&quot;typeparameterelement#getGenericElement()&quot;&gt;the generic element&lt;/a&gt; of the type parameter is returned.</source>
          <target state="translated">これがあれば&lt;a href=&quot;typeparameterelement#getEnclosingElement()&quot;&gt;typeパラメータ&lt;/a&gt;、&lt;a href=&quot;typeparameterelement#getGenericElement()&quot;&gt;ジェネリック要素&lt;/a&gt;の型パラメータのが返されます。</target>
        </trans-unit>
        <trans-unit id="6e96bb4b14e3eba6404c2f781fb3a62e040d52fd" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;typeparameterelement#getEnclosingElement--&quot;&gt;type parameter&lt;/a&gt;, &lt;a href=&quot;typeparameterelement#getGenericElement--&quot;&gt;the generic element&lt;/a&gt; of the type parameter is returned.</source>
          <target state="translated">これがあれば&lt;a href=&quot;typeparameterelement#getEnclosingElement--&quot;&gt;typeパラメータ&lt;/a&gt;、&lt;a href=&quot;typeparameterelement#getGenericElement--&quot;&gt;ジェネリック要素&lt;/a&gt;の型パラメータのが返されます。</target>
        </trans-unit>
        <trans-unit id="cf80274b5d3d13cbea85b0d82765c6140bc5c500" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;variableelement#getEnclosingElement()&quot;&gt;method or constructor parameter&lt;/a&gt;, &lt;a href=&quot;executableelement&quot;&gt;the executable element&lt;/a&gt; which declares the parameter is returned.</source>
          <target state="translated">これが&lt;a href=&quot;variableelement#getEnclosingElement()&quot;&gt;メソッドまたはコンストラクターのパラメーター&lt;/a&gt;で&lt;a href=&quot;executableelement&quot;&gt;ある&lt;/a&gt;場合、パラメーターを宣言する実行可能要素が返されます。</target>
        </trans-unit>
        <trans-unit id="78cf6561ffb980740deb1888906856d467f5457b" translate="yes" xml:space="preserve">
          <source>If this is a &lt;a href=&quot;variableelement#getEnclosingElement--&quot;&gt;method or constructor parameter&lt;/a&gt;, &lt;a href=&quot;executableelement&quot;&gt;the executable element&lt;/a&gt; which declares the parameter is returned.</source>
          <target state="translated">これが&lt;a href=&quot;variableelement#getEnclosingElement--&quot;&gt;メソッドまたはコンストラクターのパラメーターの&lt;/a&gt;場合&lt;a href=&quot;executableelement&quot;&gt;、&lt;/a&gt;パラメーターを宣言する実行可能要素が返されます。</target>
        </trans-unit>
        <trans-unit id="0a7a248892ccdcbf22ee9292577b0bb6d55804c0" translate="yes" xml:space="preserve">
          <source>If this is not done the results are undefined.</source>
          <target state="translated">これが行われない場合、結果は未定義です。</target>
        </trans-unit>
        <trans-unit id="b763c6b818e8148b4556ea7a6bafd024a995a8e8" translate="yes" xml:space="preserve">
          <source>If this is the first &lt;code&gt;LogRecord&lt;/code&gt; to be written to a given &lt;code&gt;OutputStream&lt;/code&gt;, the &lt;code&gt;Formatter&lt;/code&gt;'s &quot;head&quot; string is written to the stream before the &lt;code&gt;LogRecord&lt;/code&gt; is written.</source>
          <target state="translated">これが特定の &lt;code&gt;OutputStream&lt;/code&gt; に書き込まれる最初の &lt;code&gt;LogRecord&lt;/code&gt; である場合、 &lt;code&gt;LogRecord&lt;/code&gt; が書き込まれる前に、 &lt;code&gt;Formatter&lt;/code&gt; の「ヘッド」文字列がストリームに書き込まれます。</target>
        </trans-unit>
        <trans-unit id="9c8044ad26a6d20700b19f55ec42869a70d922ea" translate="yes" xml:space="preserve">
          <source>If this is the first URL object being created with the specified protocol, a</source>
          <target state="translated">これが指定されたプロトコルで作成された最初の URL オブジェクトである場合は</target>
        </trans-unit>
        <trans-unit id="50aab0b1a9c70ab29fd7b9c662b5e7a0eca89f64" translate="yes" xml:space="preserve">
          <source>If this key agreement requires any random bytes, it will get them using the &lt;a href=&quot;../../java/security/securerandom&quot;&gt;&lt;code&gt;SecureRandom&lt;/code&gt;&lt;/a&gt; implementation of the highest-priority installed provider as the source of randomness. (If none of the installed providers supply an implementation of SecureRandom, a system-provided source of randomness will be used.)</source>
          <target state="translated">この鍵合意がランダムバイトを必要とする場合、ランダム性のソースとして、最も優先度の高いインストール済みプロバイダーの&lt;a href=&quot;../../java/security/securerandom&quot;&gt; &lt;code&gt;SecureRandom&lt;/code&gt; &lt;/a&gt;実装を使用してそれらを取得します。（インストールされているプロバイダーのいずれもSecureRandomの実装を提供しない場合、システムが提供するランダム性のソースが使用されます。）</target>
        </trans-unit>
        <trans-unit id="3d76c6a8bf2b303cf2221e92b4e42d6ba8afabe8" translate="yes" xml:space="preserve">
          <source>If this key generator requires any random bytes, it will get them using the &lt;a href=&quot;../../java/security/securerandom&quot;&gt;&lt;code&gt;SecureRandom&lt;/code&gt;&lt;/a&gt; implementation of the highest-priority installed provider as the source of randomness. (If none of the installed providers supply an implementation of SecureRandom, a system-provided source of randomness will be used.)</source>
          <target state="translated">このキージェネレーターがランダムバイトを必要とする場合、ランダム性のソースとして最も優先度の高いインストール済みプロバイダーの&lt;a href=&quot;../../java/security/securerandom&quot;&gt; &lt;code&gt;SecureRandom&lt;/code&gt; &lt;/a&gt;実装を使用してそれらを取得します。（インストールされているプロバイダーのいずれもSecureRandomの実装を提供しない場合、システムが提供するランダム性のソースが使用されます。）</target>
        </trans-unit>
        <trans-unit id="9bddd254d42eea8986a11358178cffc024f93953" translate="yes" xml:space="preserve">
          <source>If this key has already been cancelled then invoking this method has no effect. Once cancelled, a key remains forever invalid.</source>
          <target state="translated">このキーがすでにキャンセルされている場合は、このメソッドを実行しても何の効果もありません。一度キャンセルされたキーは永遠に無効なままです。</target>
        </trans-unit>
        <trans-unit id="83da59ce9539f95ec07aaec1f4842a15915ef06b" translate="yes" xml:space="preserve">
          <source>If this key has not yet been cancelled then it is added to its selector's cancelled-key set while synchronized on that set.</source>
          <target state="translated">このキーがまだキャンセルされていない場合は、セレクタのキャンセルされたキーセットに追加され、そのセットに同期されます。</target>
        </trans-unit>
        <trans-unit id="5f1efc582a6c2c71ff3e5aca522b4daaec159e53" translate="yes" xml:space="preserve">
          <source>If this key's channel does not support read operations then this method always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">このキーのチャネルが読み取り操作をサポートしていない場合、このメソッドは常に &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="890e145cfc4f3f9520f22ce4fa868c255e45c263" translate="yes" xml:space="preserve">
          <source>If this key's channel does not support socket-accept operations then this method always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">このキーのチャネルがソケット受け入れ操作をサポートしていない場合、このメソッドは常に &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7ebd7fa86869fc4b87322f9cf2053e6de7a63c99" translate="yes" xml:space="preserve">
          <source>If this key's channel does not support socket-connect operations then this method always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">このキーのチャネルがソケット接続操作をサポートしていない場合、このメソッドは常に &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e4beaec2b79e41b2d36924704bcbb11dc0727f4f" translate="yes" xml:space="preserve">
          <source>If this key's channel does not support write operations then this method always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">このキーのチャネルが書き込み操作をサポートしていない場合、このメソッドは常に &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="008cdfca03fe48931c96cba5011bb7ee5c689831" translate="yes" xml:space="preserve">
          <source>If this keytab is bound to a specific principal, calling this method on another principal will return an empty array.</source>
          <target state="translated">このキータブが特定のプリンシパルにバインドされている場合、別のプリンシパルでこのメソッドを呼び出すと、空の配列が返されます。</target>
        </trans-unit>
        <trans-unit id="000a1bab763399031238aaa35977217bf11683de" translate="yes" xml:space="preserve">
          <source>If this list fits in the specified array with room to spare (i.e., the array has more elements than this list), the element in the array immediately following the end of the list is set to &lt;code&gt;null&lt;/code&gt;. (This is useful in determining the length of this list</source>
          <target state="translated">このリストが余裕のある指定された配列に収まる場合（つまり、配列にこのリストより多くの要素がある場合）、リストの末尾の直後の配列の要素は &lt;code&gt;null&lt;/code&gt; に設定されます。（これは、このリストの長さを決定するのに役立ちます</target>
        </trans-unit>
        <trans-unit id="1db15b17eadbce7af9b771b8b76f56db6588ba62" translate="yes" xml:space="preserve">
          <source>If this list has not been explicitly modified, a system-provided default guarantees a minimum quality of service in all enabled cipher suites.</source>
          <target state="translated">このリストが明示的に変更されていない場合、システムが提供するデフォルトでは、有効なすべての暗号スイートで最低限のサービス品質が保証されます。</target>
        </trans-unit>
        <trans-unit id="f08c49c8dd0ded476a055cdc55092bd8f4e5968b" translate="yes" xml:space="preserve">
          <source>If this lock is not held when any of the &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;condition#await()&quot;&gt;waiting&lt;/a&gt; or &lt;a href=&quot;condition#signal()&quot;&gt;signalling&lt;/a&gt; methods are called, then an &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt;&lt;code&gt;IllegalMonitorStateException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;condition#await()&quot;&gt;待機&lt;/a&gt;メソッドまたは&lt;a href=&quot;condition#signal()&quot;&gt;シグナリング&lt;/a&gt;メソッドのいずれかが呼び出されたときにこのロックが保持されていない場合、&lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt; &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="82085a0ded0a26a4ae9cce5749ded99e5178ffdd" translate="yes" xml:space="preserve">
          <source>If this lock is not held when any of the &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;condition#await--&quot;&gt;waiting&lt;/a&gt; or &lt;a href=&quot;condition#signal--&quot;&gt;signalling&lt;/a&gt; methods are called, then an &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt;&lt;code&gt;IllegalMonitorStateException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">このロックが保持されていない場合のいずれかのとき&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;condition#await--&quot;&gt;待機中&lt;/a&gt;または&lt;a href=&quot;condition#signal--&quot;&gt;シグナリングの&lt;/a&gt;メソッドが呼び出され、その後&lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt; &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; &lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="5eee26829fd18b6973e06016bd08f5d58312d50f" translate="yes" xml:space="preserve">
          <source>If this lock object is valid then invoking this method releases the lock and renders the object invalid. If this lock object is invalid then invoking this method has no effect.</source>
          <target state="translated">このロック・オブジェクトが有効な場合、このメソッドを呼び出すとロックが解除され、オブジェクトは無効になります。このロック・オブジェクトが無効な場合、このメソッドの呼び出しは何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="ced0aadf82c54cdaa29d509af41e23c06fee2d2b" translate="yes" xml:space="preserve">
          <source>If this map permits null values, then a return value of &lt;code&gt;null&lt;/code&gt; does not</source>
          <target state="translated">このマップがnull値を許可した場合、戻り値は &lt;code&gt;null&lt;/code&gt; ではありません</target>
        </trans-unit>
        <trans-unit id="38c84e3f3622968548e8ca88b47186596616c713" translate="yes" xml:space="preserve">
          <source>If this membership key is not source-specific, and the underlying operating system supports source filtering, then this method blocks multicast datagrams from the given source address. If the given source address is already blocked then this method has no effect. After a source address is blocked it may still be possible to receive datagrams from that source. This can arise when datagrams are waiting to be received in the socket's receive buffer.</source>
          <target state="translated">このメンバーシップ・キーがソース固有のものではなく、基礎となるオペレーティング・システムがソース・フィルタリングをサポートしている場合、このメソッドは指定されたソース・アドレスからのマルチキャスト・データグラムをブロックします。指定されたソースアドレスがすでにブロックされている場合、このメソッドは何の効果もありません。ソースアドレスがブロックされた後でも、そのソースからのデータグラムを受信できる可能性があります。これは、ソケットの受信バッファでデータグラムの受信待ちをしている場合に発生する可能性がある。</target>
        </trans-unit>
        <trans-unit id="aa3370fa2c521cef5ca42d1f38eef3085fe4df23" translate="yes" xml:space="preserve">
          <source>If this method causes a node to be created, this node is not guaranteed to be persistent until the &lt;code&gt;flush&lt;/code&gt; method is invoked on this node or one of its ancestors (or descendants).</source>
          <target state="translated">このメソッドによってノードが作成される場合、このノードまたはその祖先（または子孫）の1つで &lt;code&gt;flush&lt;/code&gt; メソッドが呼び出されるまで、このノードは永続的であることが保証されません。</target>
        </trans-unit>
        <trans-unit id="c7412b62e7bb966d312d57972a324cef595d40b8" translate="yes" xml:space="preserve">
          <source>If this method causes this Window to be focused, and this Window is a Frame or a Dialog, it will also become activated. If this Window is focused, but it is not a Frame or a Dialog, then the first Frame or Dialog that is an owner of this Window will be activated.</source>
          <target state="translated">この方法でこのウィンドウに焦点が当てられていて、 このウィンドウがフレームやダイアログである場合は、 そのウィンドウも活性化されます。このウィンドウがフォーカスされているが、 フレームやダイアログではない場合、 このウィンドウの所有者である最初のフレームやダイアログが活性化されます。</target>
        </trans-unit>
        <trans-unit id="b7763898ffe1310d7a9cc8d3b7a661370fcf75bb" translate="yes" xml:space="preserve">
          <source>If this method completes successfully then it returns &lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt;&lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt;&lt;/a&gt;. If there is insufficient room in the output buffer then it returns &lt;a href=&quot;coderresult#OVERFLOW&quot;&gt;&lt;code&gt;CoderResult.OVERFLOW&lt;/code&gt;&lt;/a&gt;. If this happens then this method must be invoked again, with an output buffer that has more room, in order to complete the current &lt;a href=&quot;#steps&quot;&gt;decoding operation&lt;/a&gt;.</source>
          <target state="translated">このメソッドが正常に完了すると、&lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt; &lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt; &lt;/a&gt;が返されます。出力バッファーに十分なスペースがない場合は、&lt;a href=&quot;coderresult#OVERFLOW&quot;&gt; &lt;code&gt;CoderResult.OVERFLOW&lt;/code&gt; を&lt;/a&gt;返します。これが発生した場合は、現在の&lt;a href=&quot;#steps&quot;&gt;デコード処理&lt;/a&gt;を完了するために、より多くのスペースを持つ出力バッファーを使用して、このメソッドを再度呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="da3a441ed392e261c85ef52698fd864dc0d74f93" translate="yes" xml:space="preserve">
          <source>If this method completes successfully then it returns &lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt;&lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt;&lt;/a&gt;. If there is insufficient room in the output buffer then it returns &lt;a href=&quot;coderresult#OVERFLOW&quot;&gt;&lt;code&gt;CoderResult.OVERFLOW&lt;/code&gt;&lt;/a&gt;. If this happens then this method must be invoked again, with an output buffer that has more room, in order to complete the current &lt;a href=&quot;#steps&quot;&gt;encoding operation&lt;/a&gt;.</source>
          <target state="translated">このメソッドが正常に完了すると、&lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt; &lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt; &lt;/a&gt;が返されます。出力バッファーに十分なスペースがない場合は、&lt;a href=&quot;coderresult#OVERFLOW&quot;&gt; &lt;code&gt;CoderResult.OVERFLOW&lt;/code&gt; を&lt;/a&gt;返します。これが発生した場合は、現在の&lt;a href=&quot;#steps&quot;&gt;エンコーディング操作&lt;/a&gt;を完了するために、このメソッドを、さらに余裕のある出力バッファを使用して再度呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="4f5838e3631d37a22c2762422064d85d5ff87054" translate="yes" xml:space="preserve">
          <source>If this method fails, then it may do so after creating some, but not all, of the parent directories.</source>
          <target state="translated">このメソッドが失敗した場合は、親ディレクトリの一部を作成した後に失敗する可能性がありますが、すべてではありません。</target>
        </trans-unit>
        <trans-unit id="f9c0928502e859e85a0de01a5473b5cf15abaacf" translate="yes" xml:space="preserve">
          <source>If this method has ever been called on a given &lt;code&gt;AttributeList&lt;/code&gt; instance, a subsequent attempt to add an object to that instance which is not an &lt;code&gt;Attribute&lt;/code&gt; will fail with a &lt;code&gt;IllegalArgumentException&lt;/code&gt;. For compatibility reasons, an &lt;code&gt;AttributeList&lt;/code&gt; on which this method has never been called does allow objects other than &lt;code&gt;Attribute&lt;/code&gt;s to be added.</source>
          <target state="translated">このメソッドが特定の &lt;code&gt;AttributeList&lt;/code&gt; インスタンスで呼び出されたことがある場合、 &lt;code&gt;Attribute&lt;/code&gt; ではないそのインスタンスにオブジェクトを追加しようとすると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; で失敗します。互換性の理由から、 &lt;code&gt;AttributeList&lt;/code&gt; このメソッドが呼び出されたことのないが以外のオブジェクトができない &lt;code&gt;Attribute&lt;/code&gt; sが追加されます。</target>
        </trans-unit>
        <trans-unit id="0500439e742b4ff042ba98dad057f7e1d48debf5" translate="yes" xml:space="preserve">
          <source>If this method has ever been called on a given &lt;code&gt;AttributeList&lt;/code&gt; instance, a subsequent attempt to add an object to that instance which is not an &lt;code&gt;Attribute&lt;/code&gt; will fail with an &lt;code&gt;IllegalArgumentException&lt;/code&gt;. For compatibility reasons, an &lt;code&gt;AttributeList&lt;/code&gt; on which this method has never been called does allow objects other than &lt;code&gt;Attribute&lt;/code&gt;s to be added.</source>
          <target state="translated">このメソッドが特定の &lt;code&gt;AttributeList&lt;/code&gt; インスタンスで呼び出されたことがある場合、 &lt;code&gt;Attribute&lt;/code&gt; ではないオブジェクトをそのインスタンスに追加しようとすると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; で失敗します。互換性の理由から、 &lt;code&gt;AttributeList&lt;/code&gt; このメソッドが呼び出されたことのないが以外のオブジェクトができない &lt;code&gt;Attribute&lt;/code&gt; sが追加されます。</target>
        </trans-unit>
        <trans-unit id="359793ad6432cb9cd5fa8412782ecca71d3df2d7" translate="yes" xml:space="preserve">
          <source>If this method has ever been called on a given &lt;code&gt;RoleList&lt;/code&gt; instance, a subsequent attempt to add an object to that instance which is not a &lt;code&gt;Role&lt;/code&gt; will fail with an &lt;code&gt;IllegalArgumentException&lt;/code&gt;. For compatibility reasons, a &lt;code&gt;RoleList&lt;/code&gt; on which this method has never been called does allow objects other than &lt;code&gt;Role&lt;/code&gt;s to be added.</source>
          <target state="translated">このメソッドが特定の &lt;code&gt;RoleList&lt;/code&gt; インスタンスで呼び出されたことがある場合、 &lt;code&gt;Role&lt;/code&gt; ではないそのインスタンスにオブジェクトを追加しようとすると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; で失敗します。互換性の理由から、このメソッドが呼び出されたことがない &lt;code&gt;RoleList&lt;/code&gt; では、 &lt;code&gt;Role&lt;/code&gt; 以外のオブジェクトを追加できます。</target>
        </trans-unit>
        <trans-unit id="28b83e7c1301d5a763b5d828fb7d5af0319b1267" translate="yes" xml:space="preserve">
          <source>If this method has ever been called on a given &lt;code&gt;RoleUnresolvedList&lt;/code&gt; instance, a subsequent attempt to add an object to that instance which is not a &lt;code&gt;RoleUnresolved&lt;/code&gt; will fail with an &lt;code&gt;IllegalArgumentException&lt;/code&gt;. For compatibility reasons, a &lt;code&gt;RoleUnresolvedList&lt;/code&gt; on which this method has never been called does allow objects other than &lt;code&gt;RoleUnresolved&lt;/code&gt;s to be added.</source>
          <target state="translated">このメソッドが特定の &lt;code&gt;RoleUnresolvedList&lt;/code&gt; インスタンスで呼び出されたことがある場合、そのインスタンスに &lt;code&gt;RoleUnresolved&lt;/code&gt; ではないオブジェクトを追加しようとすると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; で失敗します。互換性の理由から、 &lt;code&gt;RoleUnresolvedList&lt;/code&gt; をこのメソッドが呼び出されたことのないが以外のオブジェクトができない &lt;code&gt;RoleUnresolved&lt;/code&gt; sが追加されます。</target>
        </trans-unit>
        <trans-unit id="5a89dbb40e04018e0b66f0ca12cc41f8ee3b33dc" translate="yes" xml:space="preserve">
          <source>If this method is called by &lt;a href=&quot;securerandom#reseed()&quot;&gt;&lt;code&gt;SecureRandom.reseed()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;params&lt;/code&gt; will be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このメソッドが&lt;a href=&quot;securerandom#reseed()&quot;&gt; &lt;code&gt;SecureRandom.reseed()&lt;/code&gt; &lt;/a&gt;によって呼び出された場合、 &lt;code&gt;params&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="d5e28ad1b99be76e057ec854fd96e8b1df9a3fda" translate="yes" xml:space="preserve">
          <source>If this method is called more than once with the same library name, the second and subsequent calls are ignored.</source>
          <target state="translated">このメソッドが同じライブラリ名で複数回呼び出された場合、2回目以降の呼び出しは無視されます。</target>
        </trans-unit>
        <trans-unit id="fbfcc216e34885d1aec97f4ba5324f44277fc91c" translate="yes" xml:space="preserve">
          <source>If this method is called when an implementation has already been populated, the contents and the metadata are (re)set. Also, if this method is called before the method &lt;code&gt;acceptChanges&lt;/code&gt; has been called to commit outstanding updates, those updates are lost.</source>
          <target state="translated">実装がすでに設定されているときにこのメソッドが呼び出されると、コンテンツとメタデータが（再）設定されます。また、メソッド &lt;code&gt;acceptChanges&lt;/code&gt; が呼び出されて未処理の更新がコミットされる前にこのメソッドが呼び出された場合、それらの更新は失われます。</target>
        </trans-unit>
        <trans-unit id="fec3f1658c64077416de46608c8e7d21bb8a2d5d" translate="yes" xml:space="preserve">
          <source>If this method is called when it is not an overlap, &lt;code&gt;this&lt;/code&gt; is returned.</source>
          <target state="translated">オーバーラップしていないときにこのメソッドが呼び出されると、 &lt;code&gt;this&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="09d39856608d2161bc318ac6c82c24e80fb67f6f" translate="yes" xml:space="preserve">
          <source>If this method is invoked after all shutdown hooks have already been run and the status is nonzero then this method halts the virtual machine with the given status code. Otherwise, this method blocks indefinitely.</source>
          <target state="translated">すべてのシャットダウンフックがすでに実行されていてステータスが 0 以外の場合、このメソッドは与えられたステータスコードで仮想マシンを停止します。それ以外の場合は、このメソッドは無期限にブロックします。</target>
        </trans-unit>
        <trans-unit id="7a895efab6b10c654536ae18029ccdc62da13ad3" translate="yes" xml:space="preserve">
          <source>If this method is invoked after the virtual machine has begun its shutdown sequence then if shutdown hooks are being run this method will block indefinitely. If shutdown hooks have already been run and on-exit finalization has been enabled then this method halts the virtual machine with the given status code if the status is nonzero; otherwise, it blocks indefinitely.</source>
          <target state="translated">仮想マシンがシャットダウンシーケンスを開始した後にこのメソッドが呼び出された場合、 シャットダウンフックが実行中であればこのメソッドは無期限にブロックされます。シャットダウンフックがすでに実行されていて、終了時の確定処理が有効になっている場合、このメソッドは与えられたステータスコードが 0 以外の場合に仮想マシンを停止させます。</target>
        </trans-unit>
        <trans-unit id="ccc8a406470db7d0239114df44fa72db3c11d7b5" translate="yes" xml:space="preserve">
          <source>If this method is invoked on a node that has been removed with the &lt;a href=&quot;#removeNode()&quot;&gt;&lt;code&gt;removeNode()&lt;/code&gt;&lt;/a&gt; method, flushSpi() is invoked on this node, but not on others.</source>
          <target state="translated">このメソッドが&lt;a href=&quot;#removeNode()&quot;&gt; &lt;code&gt;removeNode()&lt;/code&gt; &lt;/a&gt;メソッドで削除されたノードで呼び出された場合、flushSpi（）はこのノードで呼び出されますが、他のノードでは呼び出されません。</target>
        </trans-unit>
        <trans-unit id="41db96f0ae0cfb287399c72e6b99e0ffae187d24" translate="yes" xml:space="preserve">
          <source>If this method is invoked on a node that has been removed with the &lt;a href=&quot;abstractpreferences#removeNode--&quot;&gt;&lt;code&gt;removeNode()&lt;/code&gt;&lt;/a&gt; method, flushSpi() is invoked on this node, but not on others.</source>
          <target state="translated">このメソッドが&lt;a href=&quot;abstractpreferences#removeNode--&quot;&gt; &lt;code&gt;removeNode()&lt;/code&gt; &lt;/a&gt;メソッドで削除されたノードで呼び出された場合、flushSpi（）はこのノードで呼び出されますが、他のノードでは呼び出されません。</target>
        </trans-unit>
        <trans-unit id="7cb89a6eb185edcb78db3f7c05fc5b72ac8edd89" translate="yes" xml:space="preserve">
          <source>If this method is invoked on a node that has been removed with the &lt;a href=&quot;preferences#removeNode--&quot;&gt;&lt;code&gt;removeNode()&lt;/code&gt;&lt;/a&gt; method, flushSpi() is invoked on this node, but not on others.</source>
          <target state="translated">このメソッドが&lt;a href=&quot;preferences#removeNode--&quot;&gt; &lt;code&gt;removeNode()&lt;/code&gt; &lt;/a&gt;メソッドで削除されたノードで呼び出された場合、flushSpi（）はこのノードで呼び出されますが、他のノードでは呼び出されません。</target>
        </trans-unit>
        <trans-unit id="e5481c92fb18810f94fae330d2ba7c65a26e4d45" translate="yes" xml:space="preserve">
          <source>If this method is invoked while another invocation of this method or of the &lt;a href=&quot;#register(java.nio.channels.Selector,int)&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method is in progress then it will first block until the other operation is complete.</source>
          <target state="translated">このメソッドまたは&lt;a href=&quot;#register(java.nio.channels.Selector,int)&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt;メソッドの別の呼び出しの進行中にこのメソッドが呼び出された場合、他の操作が完了するまで最初にブロックされます。</target>
        </trans-unit>
        <trans-unit id="897ec622f1324a90c92ac76dcd58ecbd59846a3b" translate="yes" xml:space="preserve">
          <source>If this method is invoked while another invocation of this method or of the &lt;a href=&quot;selectablechannel#register-java.nio.channels.Selector-int-&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method is in progress then it will first block until the other operation is complete.</source>
          <target state="translated">このメソッドまたは&lt;a href=&quot;selectablechannel#register-java.nio.channels.Selector-int-&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt;メソッドの別の呼び出しの進行中にこのメソッドが呼び出されると、他の操作が完了するまで最初にブロックされます。</target>
        </trans-unit>
        <trans-unit id="f9870c4dbe5964f938a44c3304f30bf52d5b60c0" translate="yes" xml:space="preserve">
          <source>If this method is invoked with equal minimum and maximum widths and a sign style of &lt;code&gt;NOT_NEGATIVE&lt;/code&gt; then it delegates to &lt;code&gt;appendValue(TemporalField,int)&lt;/code&gt;. In this scenario, the formatting and parsing behavior described there occur.</source>
          <target state="translated">このメソッドが等しい最小幅と最大幅、および &lt;code&gt;NOT_NEGATIVE&lt;/code&gt; の符号スタイルで呼び出された場合、メソッドは &lt;code&gt;appendValue(TemporalField,int)&lt;/code&gt; 委譲します。このシナリオでは、そこで説明されている書式設定と解析の動作が発生します。</target>
        </trans-unit>
        <trans-unit id="ad729037675a25baa03f0d24a4acba5ac35b089b" translate="yes" xml:space="preserve">
          <source>If this method is not called, the default &lt;code&gt;HostnameVerifier&lt;/code&gt; assumes the connection should not be permitted.</source>
          <target state="translated">このメソッドが呼び出されない場合、デフォルトの &lt;code&gt;HostnameVerifier&lt;/code&gt; は、接続が許可されないことを想定しています。</target>
        </trans-unit>
        <trans-unit id="cff732818ecd7302ea4cdeb46f23fd6601d2ed0b" translate="yes" xml:space="preserve">
          <source>If this method is not invoked prior to &lt;a href=&quot;#build()&quot;&gt;building&lt;/a&gt;, a default executor is created for each newly built &lt;code&gt;
 HttpClient&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#build()&quot;&gt;ビルドする&lt;/a&gt;前にこのメソッドが呼び出されない場合、新しくビルドされた &lt;code&gt; HttpClient&lt;/code&gt; ごとにデフォルトのエグゼキュータが作成されます。</target>
        </trans-unit>
        <trans-unit id="aab45f2845da83f00ee5c4a94877f399af47d579" translate="yes" xml:space="preserve">
          <source>If this method is not invoked prior to &lt;a href=&quot;#build()&quot;&gt;building&lt;/a&gt;, then newly built clients will prefer &lt;a href=&quot;httpclient.version#HTTP_2&quot;&gt;HTTP/2&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#build()&quot;&gt;ビルドする&lt;/a&gt;前にこのメソッドが呼び出されない場合、新しくビルドされたクライアントは&lt;a href=&quot;httpclient.version#HTTP_2&quot;&gt;HTTP / 2&lt;/a&gt;を優先します。</target>
        </trans-unit>
        <trans-unit id="c1ed2bdc8c3abf3e4f471c982e0b087cf9cc5096" translate="yes" xml:space="preserve">
          <source>If this method is not invoked prior to &lt;a href=&quot;#build()&quot;&gt;building&lt;/a&gt;, then newly built clients will use a default redirection policy of &lt;a href=&quot;httpclient.redirect#NEVER&quot;&gt;&lt;code&gt;NEVER&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#build()&quot;&gt;ビルドする&lt;/a&gt;前にこのメソッドが呼び出されない場合、新しくビルドされたクライアントはデフォルトのリダイレクトポリシーである&lt;a href=&quot;httpclient.redirect#NEVER&quot;&gt; &lt;code&gt;NEVER&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="d9fd19662a5fecef3b9c48291aa270d041956c26" translate="yes" xml:space="preserve">
          <source>If this method is not invoked prior to &lt;a href=&quot;#build()&quot;&gt;building&lt;/a&gt;, then newly built clients will use a default, implementation specific, set of parameters.</source>
          <target state="translated">&lt;a href=&quot;#build()&quot;&gt;ビルドする&lt;/a&gt;前にこのメソッドが呼び出されない場合、新しくビルドされたクライアントは、デフォルトの実装固有のパラメーターのセットを使用します。</target>
        </trans-unit>
        <trans-unit id="f36457ffc469cd7eeb2282723f43e1abe511e734" translate="yes" xml:space="preserve">
          <source>If this method is not invoked prior to &lt;a href=&quot;#build()&quot;&gt;building&lt;/a&gt;, then newly built clients will use the &lt;a href=&quot;../../../../java.base/java/net/proxyselector#getDefault()&quot;&gt;default proxy selector&lt;/a&gt;, which is usually adequate for client applications. The default proxy selector supports a set of system properties related to &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html#Proxies&quot;&gt; proxy settings&lt;/a&gt;. This default behavior can be disabled by supplying an explicit proxy selector, such as &lt;a href=&quot;#NO_PROXY&quot;&gt;&lt;code&gt;NO_PROXY&lt;/code&gt;&lt;/a&gt; or one returned by &lt;a href=&quot;../../../../java.base/java/net/proxyselector#of(java.net.InetSocketAddress)&quot;&gt;&lt;code&gt;ProxySelector::of&lt;/code&gt;&lt;/a&gt;, before &lt;a href=&quot;#build()&quot;&gt;building&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#build()&quot;&gt;ビルドする&lt;/a&gt;前にこのメソッドが呼び出されない場合、新しくビルドされたクライアントは&lt;a href=&quot;../../../../java.base/java/net/proxyselector#getDefault()&quot;&gt;デフォルトのプロキシセレクター&lt;/a&gt;を使用します。これは通常、クライアントアプリケーションに適しています。デフォルトのプロキシセレクタは、&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/net/doc-files/net-properties.html#Proxies&quot;&gt;プロキシ設定に&lt;/a&gt;関連する一連のシステムプロパティをサポートします。このデフォルトの動作は、次のような明示的なプロキシセレクタ、供給することにより無効にすることができ&lt;a href=&quot;#NO_PROXY&quot;&gt; &lt;code&gt;NO_PROXY&lt;/code&gt; &lt;/a&gt;かによって返さ1&lt;a href=&quot;../../../../java.base/java/net/proxyselector#of(java.net.InetSocketAddress)&quot;&gt; &lt;code&gt;ProxySelector::of&lt;/code&gt; &lt;/a&gt;、前の&lt;a href=&quot;#build()&quot;&gt;建物&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a27b1871b7875ff1cb2b341387ce929b23591825" translate="yes" xml:space="preserve">
          <source>If this method is not invoked prior to &lt;a href=&quot;#build()&quot;&gt;building&lt;/a&gt;, then newly built clients will use the &lt;a href=&quot;../../../../java.base/javax/net/ssl/sslcontext#getDefault()&quot;&gt;default context&lt;/a&gt;, which is normally adequate for client applications that do not need to specify protocols, or require client authentication.</source>
          <target state="translated">&lt;a href=&quot;#build()&quot;&gt;ビルド&lt;/a&gt;前にこのメソッドが呼び出されない場合、新しくビルドされたクライアントは&lt;a href=&quot;../../../../java.base/javax/net/ssl/sslcontext#getDefault()&quot;&gt;デフォルトのコンテキスト&lt;/a&gt;を使用します。これは通常、プロトコルを指定する必要がない、またはクライアント認証を必要とするクライアントアプリケーションに適しています。</target>
        </trans-unit>
        <trans-unit id="b0b6b511fb044eb39545567fe94d211a4d867129" translate="yes" xml:space="preserve">
          <source>If this method is overridden, then &lt;code&gt;super.checkAccess&lt;/code&gt; should be called by the first statement in the overridden method, or the equivalent security check should be placed in the overridden method.</source>
          <target state="translated">このメソッドがオーバーライドされている場合、オーバーライドされたメソッドの最初のステートメントで &lt;code&gt;super.checkAccess&lt;/code&gt; を呼び出すか、同等のセキュリティチェックをオーバーライドされたメソッドに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="bba6df9ffc21dac2bfe7a31f9c32e2fce7cb953f" translate="yes" xml:space="preserve">
          <source>If this method is overridden, then &lt;code&gt;super.checkPackageAccess&lt;/code&gt; should be called as the first line in the overridden method.</source>
          <target state="translated">このメソッドがオーバーライドされている場合は、オーバーライドされたメソッドの最初の行として &lt;code&gt;super.checkPackageAccess&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="8717d447e57fbb7a357ddb19fca08779dbcd403d" translate="yes" xml:space="preserve">
          <source>If this method is overridden, then &lt;code&gt;super.checkPackageDefinition&lt;/code&gt; should be called as the first line in the overridden method.</source>
          <target state="translated">このメソッドがオーバーライドされている場合は、オーバーライドされたメソッドの最初の行として &lt;code&gt;super.checkPackageDefinition&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="d2716b5886dbb3910a787a5d7351e3a6f9642796" translate="yes" xml:space="preserve">
          <source>If this method is overridden, then a call to &lt;code&gt;super.checkMemberAccess&lt;/code&gt; cannot be made, as the default implementation of &lt;code&gt;checkMemberAccess&lt;/code&gt; relies on the code being checked being at a stack depth of 4.</source>
          <target state="translated">このメソッドがオーバーライドされた場合、 &lt;code&gt;checkMemberAccess&lt;/code&gt; のデフォルトの実装は、チェックされているコードがスタックの深さ4にあることに依存しているため、 &lt;code&gt;super.checkMemberAccess&lt;/code&gt; を呼び出すことができません。</target>
        </trans-unit>
        <trans-unit id="1f2fe15a0c80e5590ecfc272b969b250dc9971d7" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;a href=&quot;filevisitresult#CONTINUE&quot;&gt;&lt;code&gt;CONTINUE&lt;/code&gt;&lt;/a&gt;, then entries in the directory are visited. If this method returns &lt;a href=&quot;filevisitresult#SKIP_SUBTREE&quot;&gt;&lt;code&gt;SKIP_SUBTREE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;filevisitresult#SKIP_SIBLINGS&quot;&gt;&lt;code&gt;SKIP_SIBLINGS&lt;/code&gt;&lt;/a&gt; then entries in the directory (and any descendants) will not be visited.</source>
          <target state="translated">このメソッドが&lt;a href=&quot;filevisitresult#CONTINUE&quot;&gt; &lt;code&gt;CONTINUE&lt;/code&gt; を&lt;/a&gt;返す場合、ディレクトリのエントリにアクセスします。このメソッドが&lt;a href=&quot;filevisitresult#SKIP_SUBTREE&quot;&gt; &lt;code&gt;SKIP_SUBTREE&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;filevisitresult#SKIP_SIBLINGS&quot;&gt; &lt;code&gt;SKIP_SIBLINGS&lt;/code&gt; を&lt;/a&gt;返す場合、ディレクトリ（およびその子孫）のエントリにはアクセスできません。</target>
        </trans-unit>
        <trans-unit id="e39185a4e0c8088f7aade4e05eb53553f43af678" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;UNSPECIFIED_OPTION&lt;/code&gt;, then this &lt;code&gt;ConfirmationCallback&lt;/code&gt; was instantiated with &lt;code&gt;options&lt;/code&gt; instead of an &lt;code&gt;optionType&lt;/code&gt;. In this case, invoke the &lt;code&gt;getOptions&lt;/code&gt; method to determine which confirmation options to display.</source>
          <target state="translated">このメソッドが &lt;code&gt;UNSPECIFIED_OPTION&lt;/code&gt; を返す場合、この &lt;code&gt;ConfirmationCallback&lt;/code&gt; は &lt;code&gt;optionType&lt;/code&gt; ではなく &lt;code&gt;options&lt;/code&gt; でインスタンス化されています。この場合、 &lt;code&gt;getOptions&lt;/code&gt; メソッドを呼び出して、表示する確認オプションを決定します。</target>
        </trans-unit>
        <trans-unit id="a4f8442da076503f391489329dc072c7aef9f736" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;false&lt;/code&gt; for a particular character sequence then more information about why the sequence cannot be encoded may be obtained by performing a full &lt;a href=&quot;#steps&quot;&gt;encoding operation&lt;/a&gt;.</source>
          <target state="translated">このメソッドが特定の文字シーケンスに対して &lt;code&gt;false&lt;/code&gt; を返す場合、シーケンスをエンコードできない理由に関する詳細情報は、完全な&lt;a href=&quot;#steps&quot;&gt;エンコード操作を&lt;/a&gt;実行することで取得できます。</target>
        </trans-unit>
        <trans-unit id="89741f03e2c12e3f9d0377de8cdbc5a8a096de70" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;hasThumbnails&lt;/code&gt; and &lt;code&gt;getNumThumbnails&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt;, respectively, and &lt;code&gt;readThumbnail&lt;/code&gt; will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;, regardless of their arguments.</source>
          <target state="translated">このメソッドが &lt;code&gt;false&lt;/code&gt; を返す場合、 &lt;code&gt;hasThumbnails&lt;/code&gt; と &lt;code&gt;getNumThumbnails&lt;/code&gt; はそれぞれ &lt;code&gt;false&lt;/code&gt; と &lt;code&gt;0&lt;/code&gt; を返し、 &lt;code&gt;readThumbnail&lt;/code&gt; は引数に関係なく &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="583ee50e7f99c02fd6ebcf8333ad462d124187da" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;null&lt;/code&gt;, i.e. the libraries were not found in any of the JAR files loaded with this class loader, the VM searches the library along the path specified as the &lt;code&gt;java.library.path&lt;/code&gt; property.</source>
          <target state="translated">このメソッドが &lt;code&gt;null&lt;/code&gt; を返す場合、つまりこのクラスローダーでロードされたJARファイルのいずれにもライブラリが見つからなかった場合、VMは &lt;code&gt;java.library.path&lt;/code&gt; プロパティとして指定されたパスに沿ってライブラリを検索します。</target>
        </trans-unit>
        <trans-unit id="34c10f29d2d818803ba8f12114cc76e265da1c7f" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">このメソッドが &lt;code&gt;true&lt;/code&gt; を返す場合、&lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt;メソッドを安全に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="fd48509152a373edcec8f406d8b8e5710f1c1c27" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;buffer#array--&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;buffer#arrayOffset--&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">このメソッドが &lt;code&gt;true&lt;/code&gt; を返す場合、&lt;a href=&quot;buffer#array--&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;buffer#arrayOffset--&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt;メソッドを安全に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="bbdb6410341007d87b08daec6c7107ce0df914c6" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;bytebuffer#array--&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;bytebuffer#arrayOffset--&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">このメソッドが &lt;code&gt;true&lt;/code&gt; を返す場合、&lt;a href=&quot;bytebuffer#array--&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;bytebuffer#arrayOffset--&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt;メソッドを安全に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="a857f7c1ccccfd0ee4edfcfe5dd250a8768e0861" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;charbuffer#array--&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;charbuffer#arrayOffset--&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">このメソッドが &lt;code&gt;true&lt;/code&gt; を返す場合、&lt;a href=&quot;charbuffer#array--&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;charbuffer#arrayOffset--&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt;メソッドを安全に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="63c55591e8102bdcf445fe25c70543f8c60cb25a" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;doublebuffer#array--&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;doublebuffer#arrayOffset--&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">このメソッドが &lt;code&gt;true&lt;/code&gt; を返す場合、&lt;a href=&quot;doublebuffer#array--&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;doublebuffer#arrayOffset--&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt;メソッドを安全に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="eaa27e79e71eea321ee777191049d775b73b8810" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;floatbuffer#array--&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;floatbuffer#arrayOffset--&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">このメソッドが &lt;code&gt;true&lt;/code&gt; を返す場合、&lt;a href=&quot;floatbuffer#array--&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;floatbuffer#arrayOffset--&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt;メソッドを安全に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="b13dc213a3ee30b61fca492d489a4c0f9eb2f263" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;intbuffer#array--&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;intbuffer#arrayOffset--&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">このメソッドが &lt;code&gt;true&lt;/code&gt; を返す場合、&lt;a href=&quot;intbuffer#array--&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;intbuffer#arrayOffset--&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt;メソッドを安全に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="17d0fce648cd581a214ad523211f985748ce4de4" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;longbuffer#array--&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;longbuffer#arrayOffset--&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">このメソッドが &lt;code&gt;true&lt;/code&gt; を返す場合、&lt;a href=&quot;longbuffer#array--&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;longbuffer#arrayOffset--&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt;メソッドを安全に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="e2694b014a8ca3bb488a35a3293aadfd6acca88e" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt; then the &lt;a href=&quot;shortbuffer#array--&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;shortbuffer#arrayOffset--&quot;&gt;&lt;code&gt;arrayOffset&lt;/code&gt;&lt;/a&gt; methods may safely be invoked.</source>
          <target state="translated">このメソッドが &lt;code&gt;true&lt;/code&gt; を返す場合、&lt;a href=&quot;shortbuffer#array--&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;shortbuffer#arrayOffset--&quot;&gt; &lt;code&gt;arrayOffset&lt;/code&gt; &lt;/a&gt;メソッドを安全に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="08485d094525344dfb1b973f481b43764248b8eb" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;code&gt;true&lt;/code&gt;, subsequent invocations will also return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このメソッドが &lt;code&gt;true&lt;/code&gt; を返す場合、後続の呼び出しも &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f8907e1a89a6c4f4321d84d0e2ff0cb7800f431f" translate="yes" xml:space="preserve">
          <source>If this method returns successfully, the &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;Receiver&lt;/code&gt; belongs to is opened implicitly, if it is not already open. It is possible to close an implicitly opened device by calling &lt;a href=&quot;receiver#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; on the returned &lt;code&gt;Receiver&lt;/code&gt;. All open &lt;code&gt;Receiver&lt;/code&gt; instances have to be closed in order to release system resources hold by the &lt;code&gt;MidiDevice&lt;/code&gt;. For a detailed description of open/close behaviour see the class description of &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドが正常に返されると、 &lt;code&gt;Receiver&lt;/code&gt; が属する&lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; &lt;/a&gt;は、まだ開かれていない場合は暗黙的に開かれます。返された &lt;code&gt;Receiver&lt;/code&gt; で&lt;a href=&quot;receiver#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;を呼び出すことにより、暗黙的に開かれたデバイスを閉じることができます。 &lt;code&gt;MidiDevice&lt;/code&gt; が保持しているシステムリソースを解放するには、開いているすべての &lt;code&gt;Receiver&lt;/code&gt; インスタンスを閉じる必要があります。オープン/クローズ動作の詳細な説明については、&lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; の&lt;/a&gt;クラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="f30f43a24fc957d3345e50bb02daec3098aff3e0" translate="yes" xml:space="preserve">
          <source>If this method returns successfully, the &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;Receiver&lt;/code&gt; belongs to is opened implicitly, if it is not already open. It is possible to close an implicitly opened device by calling &lt;a href=&quot;receiver#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; on the returned &lt;code&gt;Receiver&lt;/code&gt;. All open &lt;code&gt;Receiver&lt;/code&gt; instances have to be closed in order to release system resources hold by the &lt;code&gt;MidiDevice&lt;/code&gt;. For a detailed description of open/close behaviour see the class description of &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドが正常に戻ると、 &lt;code&gt;Receiver&lt;/code&gt; が属する&lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; &lt;/a&gt;がまだ開かれていない場合は、暗黙的に開かれます。返された &lt;code&gt;Receiver&lt;/code&gt; で&lt;a href=&quot;receiver#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;を呼び出すことにより、暗黙的に開かれたデバイスを閉じることができます。 &lt;code&gt;MidiDevice&lt;/code&gt; が保持するシステムリソースを解放するには、開いているすべての &lt;code&gt;Receiver&lt;/code&gt; インスタンスを閉じる必要があります。開閉動作の詳細については、&lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; の&lt;/a&gt;クラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="b235bca343629e2e912e0601c27d3bda0c86741d" translate="yes" xml:space="preserve">
          <source>If this method returns successfully, the &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;Transmitter&lt;/code&gt; belongs to is opened implicitly, if it is not already open. It is possible to close an implicitly opened device by calling &lt;a href=&quot;transmitter#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; on the returned &lt;code&gt;Transmitter&lt;/code&gt;. All open &lt;code&gt;Transmitter&lt;/code&gt; instances have to be closed in order to release system resources hold by the &lt;code&gt;MidiDevice&lt;/code&gt;. For a detailed description of open/close behaviour see the class description of &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドが正常に戻ると、 &lt;code&gt;Transmitter&lt;/code&gt; 属する&lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; &lt;/a&gt;は、まだ開かれていない場合は暗黙的に開かれます。返された &lt;code&gt;Transmitter&lt;/code&gt; &lt;a href=&quot;transmitter#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;を呼び出すことにより、暗黙的に開かれたデバイスを閉じることができます。 &lt;code&gt;MidiDevice&lt;/code&gt; が保持しているシステムリソースを解放するには、開いているすべての &lt;code&gt;Transmitter&lt;/code&gt; インスタンスを閉じる必要があります。オープン/クローズ動作の詳細な説明については、&lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; の&lt;/a&gt;クラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="11090b93bbbee91fc5f0393730ae36edec55ac29" translate="yes" xml:space="preserve">
          <source>If this method returns successfully, the &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;Transmitter&lt;/code&gt; belongs to is opened implicitly, if it is not already open. It is possible to close an implicitly opened device by calling &lt;a href=&quot;transmitter#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; on the returned &lt;code&gt;Transmitter&lt;/code&gt;. All open &lt;code&gt;Transmitter&lt;/code&gt; instances have to be closed in order to release system resources hold by the &lt;code&gt;MidiDevice&lt;/code&gt;. For a detailed description of open/close behaviour see the class description of &lt;a href=&quot;mididevice&quot;&gt;&lt;code&gt;MidiDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドが正常に戻ると、 &lt;code&gt;Transmitter&lt;/code&gt; 属する&lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; &lt;/a&gt;がまだ開かれていない場合は、暗黙的に開かれます。返された &lt;code&gt;Transmitter&lt;/code&gt; で&lt;a href=&quot;transmitter#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;を呼び出すことにより、暗黙的に開かれたデバイスを閉じることができます。 &lt;code&gt;MidiDevice&lt;/code&gt; が保持するシステムリソースを解放するには、開いているすべての &lt;code&gt;Transmitter&lt;/code&gt; インスタンスを閉じる必要があります。開閉動作の詳細については、&lt;a href=&quot;mididevice&quot;&gt; &lt;code&gt;MidiDevice&lt;/code&gt; の&lt;/a&gt;クラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="f2b383ee53687a5dfc8c5593166fa61cf5add2d7" translate="yes" xml:space="preserve">
          <source>If this method returns true, &lt;code&gt;revalidate&lt;/code&gt; calls by descendants of this component will cause the entire tree beginning with this root to be validated.</source>
          <target state="translated">このメソッドがtrueを返す場合、このコンポーネントの子孫による &lt;code&gt;revalidate&lt;/code&gt; 呼び出しにより、このルートで始まるツリー全体が検証されます。</target>
        </trans-unit>
        <trans-unit id="c488385ff0122c73db4b6166122428d5abbfa5bf" translate="yes" xml:space="preserve">
          <source>If this method returns true, &lt;code&gt;revalidate&lt;/code&gt; calls by descendants of this component will cause the entire tree beginning with this root to be validated. Returns false by default. &lt;code&gt;JScrollPane&lt;/code&gt; overrides this method and returns true.</source>
          <target state="translated">このメソッドがtrueを返す場合、このコンポーネントの子孫による &lt;code&gt;revalidate&lt;/code&gt; 呼び出しにより、このルートで始まるツリー全体が検証されます。デフォルトではfalseを返します。 &lt;code&gt;JScrollPane&lt;/code&gt; はこのメソッドをオーバーライドし、trueを返します。</target>
        </trans-unit>
        <trans-unit id="014b30135306d4074b7578319732d53aa9c447fc" translate="yes" xml:space="preserve">
          <source>If this method returns true, and a match was found, then more input could cause the match to be lost. If this method returns false and a match was found, then more input might change the match but the match won't be lost. If a match was not found, then requireEnd has no meaning.</source>
          <target state="translated">このメソッドが true を返し、一致するものが見つかった場合、より多くの入力を行うと一致が失われる可能性があります。このメソッドが false を返し、マッチが見つかった場合、より多くの入力によってマッチが変更される可能性がありますが、マッチが失われることはありません。一致するものが見つからなかった場合は、requireEnd は意味を持ちません。</target>
        </trans-unit>
        <trans-unit id="fb5a99f4d37b88e56a040cef00ac9b0e8bbdb966" translate="yes" xml:space="preserve">
          <source>If this method successfully creates an MBean, a notification is sent as described &lt;a href=&quot;#notif&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">このメソッドがMBeanを正常に作成すると、&lt;a href=&quot;#notif&quot;&gt;上記のように&lt;/a&gt;通知が送信されます。</target>
        </trans-unit>
        <trans-unit id="f0872f63d827bd783c6afa520726b944970b97a1" translate="yes" xml:space="preserve">
          <source>If this method successfully registers an MBean, a notification is sent as described &lt;a href=&quot;#notif&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">このメソッドがMBeanを正常に登録すると、&lt;a href=&quot;#notif&quot;&gt;上記のように&lt;/a&gt;通知が送信されます。</target>
        </trans-unit>
        <trans-unit id="1ae3a101c67d63daa605cb7ec0e8cbf30e62e517" translate="yes" xml:space="preserve">
          <source>If this method successfully unregisters an MBean, a notification is sent as described &lt;a href=&quot;#notif&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">このメソッドがMBeanの登録を正常に解除すると、&lt;a href=&quot;#notif&quot;&gt;上記のように&lt;/a&gt;通知が送信されます。</target>
        </trans-unit>
        <trans-unit id="19bb00699df718b977df1da7ce02cb1fa1580c55" translate="yes" xml:space="preserve">
          <source>If this method throws an exception, no classes have been redefined.</source>
          <target state="translated">このメソッドが例外をスローした場合、クラスは再定義されていません。</target>
        </trans-unit>
        <trans-unit id="d645fdf0c0b5590fb0091579dadbcf7c2685180b" translate="yes" xml:space="preserve">
          <source>If this method throws an exception, no classes have been retransformed.</source>
          <target state="translated">このメソッドが例外をスローした場合、クラスは再変換されていません。</target>
        </trans-unit>
        <trans-unit id="80b175ddef3aedcef9f2574b1f0955c043f5beb5" translate="yes" xml:space="preserve">
          <source>If this method throws an exception, the corresponding call to &lt;code&gt;get&lt;/code&gt; will terminate abnormally with that exception, and no class value will be recorded.</source>
          <target state="translated">このメソッドが例外をスローした場合、対応する &lt;code&gt;get&lt;/code&gt; の呼び出しはその例外で異常終了し、クラス値は記録されません。</target>
        </trans-unit>
        <trans-unit id="910e35df66a580af0800017efe4b713c9c828271" translate="yes" xml:space="preserve">
          <source>If this method throws an exception, this &lt;code&gt;XMLSignature&lt;/code&gt; and the &lt;code&gt;signContext&lt;/code&gt; parameter will be left in the state that it was in prior to the invocation.</source>
          <target state="translated">このメソッドが例外をスローした場合、この &lt;code&gt;XMLSignature&lt;/code&gt; と &lt;code&gt;signContext&lt;/code&gt; パラメーターは、呼び出し前の状態のままになります。</target>
        </trans-unit>
        <trans-unit id="5b94f232bfc11e798823a37144c27011e6dba614" translate="yes" xml:space="preserve">
          <source>If this module has &lt;em&gt;opened&lt;/em&gt; a package to at least the caller module then update this module to open the package to the given module.</source>
          <target state="translated">このモジュールが少なくとも呼び出し元モジュールに対してパッケージを&lt;em&gt;開いて&lt;/em&gt;いる場合は、このモジュールを更新して、指定されたモジュールに対してパッケージを開きます。</target>
        </trans-unit>
        <trans-unit id="f723ebe2ffb1ae52653e8d93ca37072b353084f9" translate="yes" xml:space="preserve">
          <source>If this module has &lt;em&gt;opened&lt;/em&gt; a package to at least the caller module then update this module to open the package to the given module. Opening a package with this method allows all types in the package, and all their members, not just public types and their public members, to be reflected on by the given module when using APIs that support private access or a way to bypass or suppress default Java language access control checks.</source>
          <target state="translated">このモジュールが少なくとも呼び出し元モジュールに対してパッケージを&lt;em&gt;開いて&lt;/em&gt;いる場合は、このモジュールを更新して、指定されたモジュールに対してパッケージを開きます。このメソッドでパッケージを開くと、プライベートアクセスまたはデフォルトをバイパスまたは抑制する方法をサポートするAPIを使用するときに、パッケージ内のすべてのタイプと、パブリックタイプとそのパブリックメンバーだけでなく、そのすべてのメンバーが特定のモジュールに反映されます。 Java言語のアクセス制御チェック。</target>
        </trans-unit>
        <trans-unit id="9158ebabb3074c00ff084a88493416c9d3b195ce" translate="yes" xml:space="preserve">
          <source>If this module is an automatic module then the set of exports is empty.</source>
          <target state="translated">このモジュールが自動モジュールの場合、エクスポートのセットは空です。</target>
        </trans-unit>
        <trans-unit id="0c744027c10c46409b4db7683f060c99946b8944" translate="yes" xml:space="preserve">
          <source>If this module is an automatic module then the set of service dependences is empty.</source>
          <target state="translated">このモジュールが自動モジュールの場合、サービスの依存関係のセットは空です。</target>
        </trans-unit>
        <trans-unit id="62b1488d1b9b86f341446bb19e41951a81a12ad9" translate="yes" xml:space="preserve">
          <source>If this module is an open module or an automatic module then the set of open packages is empty.</source>
          <target state="translated">このモジュールがオープンモジュールまたは自動モジュールの場合、オープンパッケージのセットは空です。</target>
        </trans-unit>
        <trans-unit id="3e179a64be9fb9ee6dc94f8fc89a80a08acd7b29" translate="yes" xml:space="preserve">
          <source>If this new node is rejected, the parser might reuse the new node and any of its descendants.</source>
          <target state="translated">この新しいノードが拒否された場合、パーサは新しいノードとその子孫を再利用する可能性があります。</target>
        </trans-unit>
        <trans-unit id="1e569b4228f8cda6f74b4fdc1864b51ff1f931e8" translate="yes" xml:space="preserve">
          <source>If this node (or an ancestor) has already been removed with the &lt;a href=&quot;#removeNode()&quot;&gt;&lt;code&gt;removeNode()&lt;/code&gt;&lt;/a&gt; method, it</source>
          <target state="translated">このノード（または祖先）が&lt;a href=&quot;#removeNode()&quot;&gt; &lt;code&gt;removeNode()&lt;/code&gt; &lt;/a&gt;メソッドですでに削除されている場合は、</target>
        </trans-unit>
        <trans-unit id="31f24edbd9312a49f2c5d55339e1a0c7b714be08" translate="yes" xml:space="preserve">
          <source>If this node (or an ancestor) has already been removed with the &lt;a href=&quot;preferences#removeNode--&quot;&gt;&lt;code&gt;removeNode()&lt;/code&gt;&lt;/a&gt; method, it</source>
          <target state="translated">このノード（または祖先）が&lt;a href=&quot;preferences#removeNode--&quot;&gt; &lt;code&gt;removeNode()&lt;/code&gt; &lt;/a&gt;メソッドですでに削除されている場合は、</target>
        </trans-unit>
        <trans-unit id="11fd0532efc80189db90d8c84065b54ac7952a81" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;#childrenNames()&quot;&gt;&lt;code&gt;childrenNames()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">このノードが &lt;code&gt;BackingStoreException&lt;/code&gt; をスローした場合、例外はそれを囲む&lt;a href=&quot;#childrenNames()&quot;&gt; &lt;code&gt;childrenNames()&lt;/code&gt; &lt;/a&gt;呼び出しを超えて伝播します。</target>
        </trans-unit>
        <trans-unit id="9da2bd57bb1661add34a2e0af4a3add4dcef99f2" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;#flush()&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">このノードが &lt;code&gt;BackingStoreException&lt;/code&gt; をスローした場合、例外はそれを囲む&lt;a href=&quot;#flush()&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; &lt;/a&gt;呼び出しを超えて伝播します。</target>
        </trans-unit>
        <trans-unit id="9ec392e357bcea6d570727a6b34121290f2b22f9" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;#keys()&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">このノードが &lt;code&gt;BackingStoreException&lt;/code&gt; をスローした場合、例外は囲んでいる&lt;a href=&quot;#keys()&quot;&gt; &lt;code&gt;keys()&lt;/code&gt; &lt;/a&gt;呼び出しを超えて伝播します。</target>
        </trans-unit>
        <trans-unit id="45273adec0bde1f8d359b9ed20dc3cfe6ca0f98e" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;#removeNode()&quot;&gt;&lt;code&gt;removeNode()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">このノードが &lt;code&gt;BackingStoreException&lt;/code&gt; をスローした場合、例外はそれを囲む&lt;a href=&quot;#removeNode()&quot;&gt; &lt;code&gt;removeNode()&lt;/code&gt; &lt;/a&gt;呼び出しを超えて伝播します。</target>
        </trans-unit>
        <trans-unit id="c33ba696714afc4ddb52c65719d7024ee3159994" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;#sync()&quot;&gt;&lt;code&gt;sync()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">このノードが &lt;code&gt;BackingStoreException&lt;/code&gt; をスローした場合、例外はそれを囲む&lt;a href=&quot;#sync()&quot;&gt; &lt;code&gt;sync()&lt;/code&gt; &lt;/a&gt;呼び出しを超えて伝播します。</target>
        </trans-unit>
        <trans-unit id="5ee7f0b7048c262e543adfeeb22a030246d06650" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;abstractpreferences#childrenNames--&quot;&gt;&lt;code&gt;childrenNames()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">このノードが &lt;code&gt;BackingStoreException&lt;/code&gt; をスローする場合、例外は、包含している&lt;a href=&quot;abstractpreferences#childrenNames--&quot;&gt; &lt;code&gt;childrenNames()&lt;/code&gt; &lt;/a&gt;呼び出しを超えて伝播します。</target>
        </trans-unit>
        <trans-unit id="559431be004f78cfedf89622122e661e8465d896" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;abstractpreferences#flush--&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">このノードが &lt;code&gt;BackingStoreException&lt;/code&gt; をスローすると、例外は、囲んでいる&lt;a href=&quot;abstractpreferences#flush--&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; &lt;/a&gt;呼び出しを超えて伝播します。</target>
        </trans-unit>
        <trans-unit id="92b05339fcd195b8f7ac0393a4c15f2aba767bd7" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;abstractpreferences#keys--&quot;&gt;&lt;code&gt;keys()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">このノードが &lt;code&gt;BackingStoreException&lt;/code&gt; をスローすると、例外は、囲んでいる&lt;a href=&quot;abstractpreferences#keys--&quot;&gt; &lt;code&gt;keys()&lt;/code&gt; &lt;/a&gt;呼び出しを超えて伝播します。</target>
        </trans-unit>
        <trans-unit id="fd45290603e6a182e39c137fb954292209622352" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;abstractpreferences#removeNode--&quot;&gt;&lt;code&gt;removeNode()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">このノードが &lt;code&gt;BackingStoreException&lt;/code&gt; をスローすると、例外は、それを囲む&lt;a href=&quot;abstractpreferences#removeNode--&quot;&gt; &lt;code&gt;removeNode()&lt;/code&gt; &lt;/a&gt;呼び出しを超えて伝播します。</target>
        </trans-unit>
        <trans-unit id="146b76b44e28b571c84f2ccde9b8eac9e2e10eb5" translate="yes" xml:space="preserve">
          <source>If this node throws a &lt;code&gt;BackingStoreException&lt;/code&gt;, the exception will propagate out beyond the enclosing &lt;a href=&quot;abstractpreferences#sync--&quot;&gt;&lt;code&gt;sync()&lt;/code&gt;&lt;/a&gt; invocation.</source>
          <target state="translated">このノードが &lt;code&gt;BackingStoreException&lt;/code&gt; をスローした場合、例外は囲まれた&lt;a href=&quot;abstractpreferences#sync--&quot;&gt; &lt;code&gt;sync()&lt;/code&gt; &lt;/a&gt;呼び出しを超えて伝播します。</target>
        </trans-unit>
        <trans-unit id="9042e3a5360f606a37243806960e35e2291e5980" translate="yes" xml:space="preserve">
          <source>If this object has changed, as indicated by the &lt;code&gt;hasChanged&lt;/code&gt; method, then notify all of its observers and then call the &lt;code&gt;clearChanged&lt;/code&gt; method to indicate that this object has no longer changed.</source>
          <target state="translated">&lt;code&gt;hasChanged&lt;/code&gt; メソッドで示されているように、このオブジェクトが変更されている場合は、そのすべてのオブザーバーに通知し、 &lt;code&gt;clearChanged&lt;/code&gt; メソッドを呼び出して、このオブジェクトが変更されていないことを示します。</target>
        </trans-unit>
        <trans-unit id="9f163d00f83379280da474191b92bc7dee7c9f64" translate="yes" xml:space="preserve">
          <source>If this object is a wildcard domain (such as *.sun.com), and</source>
          <target state="translated">このオブジェクトがワイルドカードドメイン(*.sun.comなど)であり</target>
        </trans-unit>
        <trans-unit id="3cea4ac3417339627d77e490ba6aa487e04415af" translate="yes" xml:space="preserve">
          <source>If this object represents a class or interface that implements no interfaces, the method returns an array of length 0.</source>
          <target state="translated">このオブジェクトがインターフェイスを実装していないクラスまたはインターフェイスを表している場合、メソッドは長さ 0 の配列を返します。</target>
        </trans-unit>
        <trans-unit id="1e7bddff8a66051cccc6cb0d03b1327a284a5f6f" translate="yes" xml:space="preserve">
          <source>If this object represents a class, the return value is an array containing objects representing all interfaces directly implemented by the class. The order of the interface objects in the array corresponds to the order of the interface names in the &lt;code&gt;implements&lt;/code&gt; clause of the declaration of the class represented by this object.</source>
          <target state="translated">このオブジェクトがクラスを表す場合、戻り値は、クラスによって直接実装されたすべてのインターフェイスを表すオブジェクトを含む配列です。配列内のインターフェイスオブジェクトの順序は、このオブジェクトによって表されるクラスの宣言の &lt;code&gt;implements&lt;/code&gt; 句内のインターフェイス名の順序に対応しています。</target>
        </trans-unit>
        <trans-unit id="6801d640226a494d8fea4dee7eebc54a8b1b4ce4" translate="yes" xml:space="preserve">
          <source>If this object represents a class, the return value is an array containing objects representing all interfaces directly implemented by the class. The order of the interface objects in the array corresponds to the order of the interface names in the &lt;code&gt;implements&lt;/code&gt; clause of the declaration of the class represented by this object. For example, given the declaration:</source>
          <target state="translated">このオブジェクトがクラスを表す場合、戻り値は、クラスによって直接実装されたすべてのインターフェイスを表すオブジェクトを含む配列です。配列内のインターフェイスオブジェクトの順序は、このオブジェクトによって表されるクラスの宣言の &lt;code&gt;implements&lt;/code&gt; 句内のインターフェイス名の順序に対応しています。たとえば、宣言が与えられた場合：</target>
        </trans-unit>
        <trans-unit id="6bbfde3dbccd1b93d90d863f22fea55a2270b449" translate="yes" xml:space="preserve">
          <source>If this object represents a class, the return value is an array containing objects representing all interfaces implemented by the class. The order of the interface objects in the array corresponds to the order of the interface names in the &lt;code&gt;implements&lt;/code&gt; clause of the declaration of the class represented by this object. For example, given the declaration:</source>
          <target state="translated">このオブジェクトがクラスを表す場合、戻り値は、クラスによって実装されるすべてのインターフェースを表すオブジェクトを含む配列です。配列内のインターフェースオブジェクトの順序は、このオブジェクトで表されるクラスの宣言の &lt;code&gt;implements&lt;/code&gt; 句内のインターフェース名の順序に対応しています。たとえば、次の宣言があるとします。</target>
        </trans-unit>
        <trans-unit id="68a0eb9644f50dfa3365237e48206912657dedee" translate="yes" xml:space="preserve">
          <source>If this object represents a class, the return value is an array containing objects representing all interfaces implemented by the class. The order of the interface objects in the array corresponds to the order of the interface names in the &lt;code&gt;implements&lt;/code&gt; clause of the declaration of the class represented by this object. In the case of an array class, the interfaces &lt;code&gt;Cloneable&lt;/code&gt; and &lt;code&gt;Serializable&lt;/code&gt; are returned in that order.</source>
          <target state="translated">このオブジェクトがクラスを表す場合、戻り値は、クラスによって実装されるすべてのインターフェースを表すオブジェクトを含む配列です。配列内のインターフェースオブジェクトの順序は、このオブジェクトで表されるクラスの宣言の &lt;code&gt;implements&lt;/code&gt; 句内のインターフェース名の順序に対応しています。配列クラスの場合、 &lt;code&gt;Cloneable&lt;/code&gt; と &lt;code&gt;Serializable&lt;/code&gt; のインターフェースがこの順序で返されます。</target>
        </trans-unit>
        <trans-unit id="c7e1fecec3e1842cf6d0a7c3c48522e500eb7718" translate="yes" xml:space="preserve">
          <source>If this object represents a primitive type or void, null is returned.</source>
          <target state="translated">このオブジェクトがプリミティブ型または void を表す場合は null が返されます。</target>
        </trans-unit>
        <trans-unit id="102d58b2bf49f93aca1515c64c4c34bb49821710" translate="yes" xml:space="preserve">
          <source>If this object represents a primitive type or void, the method returns an array of length 0.</source>
          <target state="translated">このオブジェクトがプリミティブ型または void を表す場合、このメソッドは長さ 0 の配列を返します。</target>
        </trans-unit>
        <trans-unit id="215f219962b0e236319b5b858d3118667b63b93f" translate="yes" xml:space="preserve">
          <source>If this object represents an interface, the array contains objects representing all interfaces directly extended by the interface. The order of the interface objects in the array corresponds to the order of the interface names in the &lt;code&gt;extends&lt;/code&gt; clause of the declaration of the interface represented by this object.</source>
          <target state="translated">このオブジェクトがインターフェースを表す場合、配列には、インターフェースによって直接拡張されたすべてのインターフェースを表すオブジェクトが含まれます。配列内のインターフェースオブジェクトの順序は、このオブジェクトで表されるインターフェースの宣言の &lt;code&gt;extends&lt;/code&gt; 句のインターフェース名の順序に対応しています。</target>
        </trans-unit>
        <trans-unit id="030be3302e9112b6d0ab9c62370805d7a4c2a90a" translate="yes" xml:space="preserve">
          <source>If this object represents an interface, the array contains objects representing all interfaces extended by the interface. The order of the interface objects in the array corresponds to the order of the interface names in the &lt;code&gt;extends&lt;/code&gt; clause of the declaration of the interface represented by this object.</source>
          <target state="translated">このオブジェクトがインターフェースを表す場合、配列には、インターフェースによって拡張されたすべてのインターフェースを表すオブジェクトが含まれます。配列内のインターフェースオブジェクトの順序は、このオブジェクトで表されるインターフェースの宣言の &lt;code&gt;extends&lt;/code&gt; 句のインターフェース名の順序に対応しています。</target>
        </trans-unit>
        <trans-unit id="107c6791019a8d7adff1747d6751033e870c95bb" translate="yes" xml:space="preserve">
          <source>If this object was initialized with a single IP address and one of</source>
          <target state="translated">このオブジェクトが単一の IP アドレスと</target>
        </trans-unit>
        <trans-unit id="c94c2acd246f41a3340bde4e01678205c3f7fa20" translate="yes" xml:space="preserve">
          <source>If this object was not initialized with a single IP address, and one of this object's IP addresses equals one of</source>
          <target state="translated">このオブジェクトが単一の IP アドレスで初期化されておらず、このオブジェクトの IP アドレスの 1 つが</target>
        </trans-unit>
        <trans-unit id="2c565fa50ed849b3fe574e7e2acaddd76ed6b27d" translate="yes" xml:space="preserve">
          <source>If this object's certificates are not null, then all of this object's certificates must be present in</source>
          <target state="translated">このオブジェクトの証明書が NULL でない場合、このオブジェクトの証明書はすべて</target>
        </trans-unit>
        <trans-unit id="a8a4f359cc185445100b803f449de95a93aa8f07" translate="yes" xml:space="preserve">
          <source>If this object's className is &quot;&lt;code&gt;*&lt;/code&gt;&quot;,</source>
          <target state="translated">このオブジェクトのclassNameが &quot; &lt;code&gt;*&lt;/code&gt; &quot;の場合、</target>
        </trans-unit>
        <trans-unit id="2a727f9940692bdd710512a875498d902fb56362" translate="yes" xml:space="preserve">
          <source>If this object's file (getLocation().getFile()) doesn't equal</source>
          <target state="translated">このオブジェクトのファイル (getLocation().getFile()が等しくない場合</target>
        </trans-unit>
        <trans-unit id="8d1575bbfa673d9c98ae1f0a6fbc3c9445cfd46a" translate="yes" xml:space="preserve">
          <source>If this object's host (getLocation().getHost()) is not null, then the SocketPermission constructed with this object's host must imply the SocketPermission constructed with</source>
          <target state="translated">このオブジェクトのホスト (getLocation().getHost())が null でない場合、このオブジェクトのホストで構築された SocketPermission は</target>
        </trans-unit>
        <trans-unit id="f93e8a81abaed7c6dfb8d9745b5294f8948ed92f" translate="yes" xml:space="preserve">
          <source>If this object's location (getLocation()) is not null, then the following checks are made against this object's location and</source>
          <target state="translated">このオブジェクトの位置情報 (getLocation()が NULL でない場合、このオブジェクトの位置情報と</target>
        </trans-unit>
        <trans-unit id="1265a2276f6c2efb4e71acc80c2059bb1488b30c" translate="yes" xml:space="preserve">
          <source>If this object's location equals</source>
          <target state="translated">このオブジェクトの位置が</target>
        </trans-unit>
        <trans-unit id="accff77e178dc73cf6d4bfd526487c56cebf9d8d" translate="yes" xml:space="preserve">
          <source>If this object's member is &quot;&lt;code&gt;*&lt;/code&gt;&quot;,</source>
          <target state="translated">このオブジェクトのメンバーが &quot; &lt;code&gt;*&lt;/code&gt; &quot;の場合、</target>
        </trans-unit>
        <trans-unit id="72946dcef5d00302973d96c029cfad37ee53b4d4" translate="yes" xml:space="preserve">
          <source>If this object's objectName</source>
          <target state="translated">このオブジェクトの objectName が</target>
        </trans-unit>
        <trans-unit id="bfdbd62eac79913358a6a925e81b8a1c4083d7be" translate="yes" xml:space="preserve">
          <source>If this object's port (getLocation().getPort()) is not equal to -1 (that is, if a port is specified), it must equal</source>
          <target state="translated">このオブジェクトのポート (getLocation().getPort())が -1 に等しくない場合 (つまり、ポートが指定されている場合)、等しくなければなりません。</target>
        </trans-unit>
        <trans-unit id="e20be575a118272802cce2851bb247a6c997d8f9" translate="yes" xml:space="preserve">
          <source>If this object's reference (getLocation().getRef()) is not null, it must equal</source>
          <target state="translated">このオブジェクトの参照 (getLocation().getRef())が NULL でない場合、それは</target>
        </trans-unit>
        <trans-unit id="36a6bacc65976b84bf714a2531ee877f4eff267e" translate="yes" xml:space="preserve">
          <source>If this operation succeeds, the line is marked as open, and an &lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt; event is dispatched to the line's listeners.</source>
          <target state="translated">この操作が成功すると、回線はオープンとしてマークされ、&lt;a href=&quot;lineevent.type#OPEN&quot;&gt; &lt;code&gt;OPEN&lt;/code&gt; &lt;/a&gt;イベントが回線のリスナーにディスパッチされます。</target>
        </trans-unit>
        <trans-unit id="29a4fac479570251a6b38b322c42aff61644037e" translate="yes" xml:space="preserve">
          <source>If this operation succeeds, the line is marked as open, and an &lt;code&gt;&lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; event is dispatched to the line's listeners.</source>
          <target state="translated">この操作が成功すると、ラインはオープンとしてマークされ、 &lt;code&gt;&lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; イベントがラインのリスナーにディスパッチされます。</target>
        </trans-unit>
        <trans-unit id="e693e570c2d3a4cf22cb3f646db70276ee3f3cfe" translate="yes" xml:space="preserve">
          <source>If this option is present then a new file is created, failing if the file already exists or is a symbolic link. When creating a file the check for the existence of the file and the creation of the file if it does not exist is atomic with respect to other file system operations. This option is ignored when the file is opened only for reading.</source>
          <target state="translated">このオプションを指定すると、新しいファイルが作成されますが、ファイルが既に存在するかシンボリックリンクである場合は失敗します。ファイルを作成する際には、ファイルの存在のチェックと、ファイルが存在しない場合のファイルの作成は、他のファイルシステム操作とは無関係に行われます。このオプションは、ファイルが読み込みのためだけに開かれている場合には無視されます。</target>
        </trans-unit>
        <trans-unit id="5bdcb9ea5fd489f84524729f8084b77cb2a731fb" translate="yes" xml:space="preserve">
          <source>If this option is present then a new file is created, failing if the file already exists. When creating a file the check for the existence of the file and the creation of the file if it does not exist is atomic with respect to other file system operations. This option is ignored when the file is opened only for reading.</source>
          <target state="translated">このオプションを指定すると、新しいファイルが作成されますが、ファイルが既に存在する場合は失敗します。ファイルを作成する際に、ファイルの存在のチェックと、ファイルが存在しない場合のファイルの作成は、他のファイルシステム操作とは無関係に行われます。このオプションは、ファイルが読み込みのためだけに開かれている場合には無視されます。</target>
        </trans-unit>
        <trans-unit id="cfedbbbeb7c34fd91e56623eb3a72c083a4274f9" translate="yes" xml:space="preserve">
          <source>If this option is present then an existing file is opened if it exists, otherwise a new file is created. This option is ignored if the &lt;code&gt;CREATE_NEW&lt;/code&gt; option is also present or the file is opened only for reading.</source>
          <target state="translated">このオプションが存在する場合、既存のファイルが存在する場合はそれが開かれ、存在しない場合は新しいファイルが作成されます。 &lt;code&gt;CREATE_NEW&lt;/code&gt; オプションも存在する場合、またはファイルが読み取り専用で開かれている場合、このオプションは無視されます。</target>
        </trans-unit>
        <trans-unit id="65f047e4530eeb8e098678a36747b78cda483f61" translate="yes" xml:space="preserve">
          <source>If this option is present then an existing file is opened if it exists, otherwise a new file is created. When creating a file the check for the existence of the file and the creation of the file if it does not exist is atomic with respect to other file system operations. This option is ignored if the &lt;code&gt;CREATE_NEW&lt;/code&gt; option is also present or the file is opened only for reading.</source>
          <target state="translated">このオプションが存在する場合、既存のファイルが存在する場合はそれが開かれ、存在しない場合は新しいファイルが作成されます。ファイルを作成するとき、ファイルの存在のチェックと、存在しない場合のファイルの作成は、他のファイルシステム操作に対してアトミックです。 &lt;code&gt;CREATE_NEW&lt;/code&gt; オプションも存在する場合、またはファイルが読み取り専用で開かれている場合、このオプションは無視されます。</target>
        </trans-unit>
        <trans-unit id="58acc2fa4fe310e68564a49365b12f42e0810bf3" translate="yes" xml:space="preserve">
          <source>If this option is present then the existing file is truncated to a size of 0 bytes. This option is ignored when the file is opened only for reading.</source>
          <target state="translated">このオプシ ョ ンが存在する場合、 既存の フ ァ イ ルは 0 バ イ ト のサ イ ズに切 り 捨て ら れます。このオプションは、ファイルが読み込みのためだけに開かれている場合には無視されます。</target>
        </trans-unit>
        <trans-unit id="c7db5f0753fc18eb30790c031e675e1a8c799a37" translate="yes" xml:space="preserve">
          <source>If this option is present then the file is opened for writing and each invocation of the channel's &lt;code&gt;write&lt;/code&gt; method first advances the position to the end of the file and then writes the requested data. Whether the advancement of the position and the writing of the data are done in a single atomic operation is system-dependent and therefore unspecified. This option may not be used in conjunction with the &lt;code&gt;READ&lt;/code&gt; or &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; options.</source>
          <target state="translated">このオプションが存在する場合、ファイルは書き込み用に開かれ、チャネルの &lt;code&gt;write&lt;/code&gt; メソッドを呼び出すたびに、最初に位置がファイルの最後に進み、次に要求されたデータが書き込まれます。位置の前進とデータの書き込みが単一のアトミック操作で行われるかどうかは、システムに依存するため、指定されていません。このオプションは、 &lt;code&gt;READ&lt;/code&gt; オプションまたは &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; オプションと組み合わせて使用​​することはできません。</target>
        </trans-unit>
        <trans-unit id="66c6dc5970de51d1f06f65735ef325c6138ef5c3" translate="yes" xml:space="preserve">
          <source>If this path has more than one element, and no root component, then this method is equivalent to evaluating the expression:</source>
          <target state="translated">このパスが複数の要素を持ち、ルートコンポーネントを持たない場合、このメソッドは式を評価することと同等です。</target>
        </trans-unit>
        <trans-unit id="6fd3aa8f58cf9f02bfcdc80cec86a501a8a7247c" translate="yes" xml:space="preserve">
          <source>If this path has one or more elements, and no root component, then this method is equivalent to evaluating the expression:</source>
          <target state="translated">このパスが1つ以上の要素を持ち、ルートコンポーネントを持たない場合、このメソッドは式を評価することと同等です。</target>
        </trans-unit>
        <trans-unit id="7bdccf19fbaba86c3c4bc96e529073319744a29f" translate="yes" xml:space="preserve">
          <source>If this path is already &lt;a href=&quot;#isAbsolute()&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; then this method simply returns this path. Otherwise, this method resolves the path in an implementation dependent manner, typically by resolving the path against a file system default directory. Depending on the implementation, this method may throw an I/O error if the file system is not accessible.</source>
          <target state="translated">このパスがすでに&lt;a href=&quot;#isAbsolute()&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt;パスである場合、このメソッドは単にこのパスを返します。それ以外の場合、このメソッドは、通常、ファイルシステムのデフォルトディレクトリに対してパスを解決することにより、実装に依存する方法でパスを解決します。実装によっては、ファイルシステムにアクセスできない場合、このメソッドはI / Oエラーをスローする可能性があります。</target>
        </trans-unit>
        <trans-unit id="30aeff65d6a5437b4b182c4f62c0198083fc0c78" translate="yes" xml:space="preserve">
          <source>If this path is already &lt;a href=&quot;path#isAbsolute--&quot;&gt;&lt;code&gt;absolute&lt;/code&gt;&lt;/a&gt; then this method simply returns this path. Otherwise, this method resolves the path in an implementation dependent manner, typically by resolving the path against a file system default directory. Depending on the implementation, this method may throw an I/O error if the file system is not accessible.</source>
          <target state="translated">このパスがすでに&lt;a href=&quot;path#isAbsolute--&quot;&gt; &lt;code&gt;absolute&lt;/code&gt; &lt;/a&gt;パスの場合、このメソッドは単にこのパスを返します。それ以外の場合、このメソッドは、通常はファイルシステムのデフォルトディレクトリに対してパスを解決することにより、実装に依存する方法でパスを解決します。実装によっては、ファイルシステムにアクセスできない場合、このメソッドはI / Oエラーをスローすることがあります。</target>
        </trans-unit>
        <trans-unit id="6892f69e3e1e770ec7e246fc902d15ecb6a87cd1" translate="yes" xml:space="preserve">
          <source>If this path is relative then its absolute path is first obtained, as if by invoking the &lt;a href=&quot;#toAbsolutePath()&quot;&gt;&lt;code&gt;toAbsolutePath&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このパスが相対パスの場合、&lt;a href=&quot;#toAbsolutePath()&quot;&gt; &lt;code&gt;toAbsolutePath&lt;/code&gt; &lt;/a&gt;メソッドを呼び出す場合と同様に、その絶対パスが最初に取得されます。</target>
        </trans-unit>
        <trans-unit id="2c90a56c401bf7a00c5a062ce8dc90f5fbdad860" translate="yes" xml:space="preserve">
          <source>If this path is relative then its absolute path is first obtained, as if by invoking the &lt;a href=&quot;path#toAbsolutePath--&quot;&gt;&lt;code&gt;toAbsolutePath&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">このパスが相対パスの場合、&lt;a href=&quot;path#toAbsolutePath--&quot;&gt; &lt;code&gt;toAbsolutePath&lt;/code&gt; &lt;/a&gt;メソッドを呼び出した場合と同様に、最初にその絶対パスが取得されます。</target>
        </trans-unit>
        <trans-unit id="d084b978d5c7338be74d967e3522b19da13a6657" translate="yes" xml:space="preserve">
          <source>If this path was created by converting a path string using the &lt;a href=&quot;filesystem#getPath(java.lang.String,java.lang.String...)&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method then the path string returned by this method may differ from the original String used to create the path.</source>
          <target state="translated">このパスが&lt;a href=&quot;filesystem#getPath(java.lang.String,java.lang.String...)&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;メソッドを使用してパス文字列を変換することによって作成された場合、このメソッドによって返されるパス文字列は、パスの作成に使用された元の文字列と異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="cee4ecf521bbf7c48468eb74ea9ed7b0eef09055" translate="yes" xml:space="preserve">
          <source>If this path was created by converting a path string using the &lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method then the path string returned by this method may differ from the original String used to create the path.</source>
          <target state="translated">このパスが&lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;メソッドを使用してパス文字列を変換することによって作成された場合、このメソッドによって返されるパス文字列は、パスの作成に使用された元の文字列と異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="3053881f193bb1bd318e35bb56a8a6d86a8eb15e" translate="yes" xml:space="preserve">
          <source>If this path was created by invoking the &lt;code&gt;File&lt;/code&gt;&lt;a href=&quot;../../io/file#toPath()&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method then there is no guarantee that the &lt;code&gt;
 File&lt;/code&gt; object returned by this method is &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equal&lt;/code&gt;&lt;/a&gt; to the original &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">このパスは、呼び出すことによって作成された場合 &lt;code&gt;File&lt;/code&gt; &lt;a href=&quot;../../io/file#toPath()&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; の&lt;/a&gt;方法を、その保証はありません &lt;code&gt; File&lt;/code&gt; このメソッドによって返されるオブジェクトは&lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equal&lt;/code&gt; &lt;/a&gt;元の &lt;code&gt;File&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9f3f316869769c8f30bbf29b48d50988b855cb9" translate="yes" xml:space="preserve">
          <source>If this path was created by invoking the &lt;code&gt;File&lt;/code&gt;&lt;a href=&quot;../../io/file#toPath--&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method then there is no guarantee that the &lt;code&gt;File&lt;/code&gt; object returned by this method is &lt;a href=&quot;path#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equal&lt;/code&gt;&lt;/a&gt; to the original &lt;code&gt;File&lt;/code&gt;.</source>
          <target state="translated">このパスが &lt;code&gt;File&lt;/code&gt; &lt;a href=&quot;../../io/file#toPath--&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しによって作成された場合、このメソッドによって返される &lt;code&gt;File&lt;/code&gt; オブジェクトが元の &lt;code&gt;File&lt;/code&gt; と&lt;a href=&quot;path#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equal&lt;/code&gt; &lt;/a&gt;ことは保証されません。</target>
        </trans-unit>
        <trans-unit id="2380c1feeac1df8b717ffb6d8b0f464f5c1469c4" translate="yes" xml:space="preserve">
          <source>If this pattern does not match any subsequence of the input then the resulting stream has just one element, namely the input sequence in string form.</source>
          <target state="translated">このパターンが入力のどの部分シーケンスにもマッチしない場合,結果として得られるストリームは,1つの要素,すなわち文字列形式の入力シーケンスだけを持ちます。</target>
        </trans-unit>
        <trans-unit id="6c129875659d42e8617f0f6fe9f8eeaed922599a" translate="yes" xml:space="preserve">
          <source>If this phaser is a member of a tiered set of phasers, then &lt;code&gt;onAdvance&lt;/code&gt; is invoked only for its root phaser on each advance.</source>
          <target state="translated">このフェーザーが段階的なフェーザーセットのメンバーである場合、 &lt;code&gt;onAdvance&lt;/code&gt; は、アドバンスごとにルートフェーザーに対してのみ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="25e351e3788079c7fe12a6a6df200389fde78fe7" translate="yes" xml:space="preserve">
          <source>If this plug-in does not allow the rendering size to be set, an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; will be thrown.</source>
          <target state="translated">このプラグインがレンダリングサイズの設定を許可しない場合、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="e1302a6790f93ba102338f3d550fd48fb15554d7" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;true&lt;/code&gt;, then any error output generated by subprocesses subsequently started by this object's &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method will be merged with the standard output, so that both can be read using the &lt;a href=&quot;process#getInputStream()&quot;&gt;&lt;code&gt;Process.getInputStream()&lt;/code&gt;&lt;/a&gt; method. This makes it easier to correlate error messages with the corresponding output. The initial value is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">このプロパティが &lt;code&gt;true&lt;/code&gt; の場合、このオブジェクトの&lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;メソッドによって後で開始されるサブプロセスによって生成されたエラー出力はすべて標準出力とマージされるため、&lt;a href=&quot;process#getInputStream()&quot;&gt; &lt;code&gt;Process.getInputStream()&lt;/code&gt; &lt;/a&gt;メソッドを使用して両方を読み取ることができます。これにより、エラーメッセージを対応する出力と簡単に関連付けることができます。初期値は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="59ba1fa4accaead615f724e3c7c028034f29cc41" translate="yes" xml:space="preserve">
          <source>If this property is &lt;code&gt;true&lt;/code&gt;, then any error output generated by subprocesses subsequently started by this object's &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method will be merged with the standard output, so that both can be read using the &lt;a href=&quot;process#getInputStream--&quot;&gt;&lt;code&gt;Process.getInputStream()&lt;/code&gt;&lt;/a&gt; method. This makes it easier to correlate error messages with the corresponding output. The initial value is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">このプロパティが &lt;code&gt;true&lt;/code&gt; の場合、このオブジェクトの&lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;メソッドによって後で開始されたサブプロセスによって生成されたエラー出力は、標準出力とマージされ、&lt;a href=&quot;process#getInputStream--&quot;&gt; &lt;code&gt;Process.getInputStream()&lt;/code&gt; &lt;/a&gt;メソッドを使用して両方を読み取ることができます。これにより、エラーメッセージと対応する出力を簡単に関連付けることができます。初期値は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ed9500168343cb56332d4fc88ac168ed027dc4ed" translate="yes" xml:space="preserve">
          <source>If this property is absent, the default size is defined by the mechanism.</source>
          <target state="translated">このプロパティがない場合、デフォルトのサイズはメカニズムによって定義されます。</target>
        </trans-unit>
        <trans-unit id="06e5e28626bd6eda0b86511efffb808fc70159b4" translate="yes" xml:space="preserve">
          <source>If this property is absent, the default strength is &lt;code&gt;&quot;high,medium,low&quot;&lt;/code&gt;. The value of this constant is &lt;code&gt;&quot;javax.security.sasl.strength&quot;&lt;/code&gt;.</source>
          <target state="translated">このプロパティがない場合、デフォルトの強さは &lt;code&gt;&quot;high,medium,low&quot;&lt;/code&gt; です。この定数の値は &lt;code&gt;&quot;javax.security.sasl.strength&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8cc3eda816a77b81a2af6ebc25e493966bcf228c" translate="yes" xml:space="preserve">
          <source>If this property is not specified, the default is determined by the provider.</source>
          <target state="translated">このプロパティが指定されていない場合、デフォルトはプロバイダによって決定されます。</target>
        </trans-unit>
        <trans-unit id="af876f8d384b15c054bb402554c1137e11adc57d" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;a href=&quot;#TRUE&quot;&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#FALSE&quot;&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/a&gt;, the packer will set the deflation hint accordingly in the output archive, and will not transmit the individual deflation hints of archive elements.</source>
          <target state="translated">このプロパティが&lt;a href=&quot;#TRUE&quot;&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#FALSE&quot;&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/a&gt;に設定されている場合、パッカーは出力アーカイブでそれに応じてデフレーションヒントを設定し、アーカイブ要素の個々のデフレーションヒントを送信しません。</target>
        </trans-unit>
        <trans-unit id="2f3346ddfaecc67d0b0d9ad2a653482ef13da088" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;a href=&quot;#TRUE&quot;&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/a&gt;, the packer will transmit all elements in their original order within the source archive.</source>
          <target state="translated">このプロパティが&lt;a href=&quot;#TRUE&quot;&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/a&gt;に設定されている場合、パッカーはソースアーカイブ内ですべての要素を元の順序で送信します。</target>
        </trans-unit>
        <trans-unit id="bc49fbf015d08e3eea6e2ecba88f5740773ba2e8" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;a href=&quot;pack200.packer#TRUE&quot;&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pack200.packer#FALSE&quot;&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/a&gt;, the packer will set the deflation hint accordingly in the output archive, and will not transmit the individual deflation hints of archive elements.</source>
          <target state="translated">このプロパティが&lt;a href=&quot;pack200.packer#TRUE&quot;&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;pack200.packer#FALSE&quot;&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/a&gt;に設定されている場合、パッカーは出力アーカイブでデフレヒントを適宜設定し、アーカイブ要素の個々のデフレヒントを送信しません。</target>
        </trans-unit>
        <trans-unit id="d03d5dc13a687142c5929c662ca49d36074a7ded" translate="yes" xml:space="preserve">
          <source>If this property is set to &lt;a href=&quot;pack200.packer#TRUE&quot;&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/a&gt;, the packer will transmit all elements in their original order within the source archive.</source>
          <target state="translated">このプロパティが&lt;a href=&quot;pack200.packer#TRUE&quot;&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/a&gt;に設定されている場合、packerはソースアーカイブ内のすべての要素を元の順序で送信します。</target>
        </trans-unit>
        <trans-unit id="f4c9444c28ff4c5488966f754a768c212ad49602" translate="yes" xml:space="preserve">
          <source>If this property is set to a single decimal digit, the packer will use the indicated amount of effort in compressing the archive.</source>
          <target state="translated">このプロパティが 10 進数 1 桁に設定されている場合、パッカーはアーカイブを圧縮する際に指示された努力量を使用します。</target>
        </trans-unit>
        <trans-unit id="75f525ec3fc65cfee3f8f241c0b2d719029df8df" translate="yes" xml:space="preserve">
          <source>If this property is set to a single decimal digit, the packer will use the indicated amount of effort in compressing the archive. Level 1 may produce somewhat larger size and faster compression speed, while level 9 will take much longer but may produce better compression.</source>
          <target state="translated">このプロパティが小数点以下の一桁に設定されている場合、パッカーはアーカイブの圧縮に指示された努力量を使用します。レベル1では、やや大きなサイズと速い圧縮速度が得られるかもしれませんが、レベル9ではかなり時間がかかりますが、より良い圧縮が得られるかもしれません。</target>
        </trans-unit>
        <trans-unit id="7f2b33eebed320a2dc74cf999bd1d76647d1445d" translate="yes" xml:space="preserve">
          <source>If this property is set to the special string &lt;a href=&quot;#KEEP&quot;&gt;&lt;code&gt;KEEP&lt;/code&gt;&lt;/a&gt;, the packer transmits a separate modification time for each input element.</source>
          <target state="translated">このプロパティが特別な文字列&lt;a href=&quot;#KEEP&quot;&gt; &lt;code&gt;KEEP&lt;/code&gt; に&lt;/a&gt;設定されている場合、パッカーは入力要素ごとに個別の変更時間を送信します。</target>
        </trans-unit>
        <trans-unit id="452a55781f99f11209ae42716d118ef02153d4b9" translate="yes" xml:space="preserve">
          <source>If this property is set to the special string &lt;a href=&quot;#KEEP&quot;&gt;&lt;code&gt;KEEP&lt;/code&gt;&lt;/a&gt;, the packer will attempt to determine an independent deflation hint for each available element of the input archive, and transmit this hint separately.</source>
          <target state="translated">このプロパティが特別な文字列&lt;a href=&quot;#KEEP&quot;&gt; &lt;code&gt;KEEP&lt;/code&gt; に&lt;/a&gt;設定されている場合、パッカーは入力アーカイブの使用可能な要素ごとに独立したデフレーションヒントを決定し、このヒントを個別に送信しようとします。</target>
        </trans-unit>
        <trans-unit id="b87e5014cdc339bdbe3dfa1e45ca7593f03ce19b" translate="yes" xml:space="preserve">
          <source>If this property is set to the special string &lt;a href=&quot;#LATEST&quot;&gt;&lt;code&gt;LATEST&lt;/code&gt;&lt;/a&gt;, the packer will attempt to determine the latest modification time, among all the available entries in the original archive or the latest modification time of all the available entries in each segment.</source>
          <target state="translated">このプロパティが特別な文字列&lt;a href=&quot;#LATEST&quot;&gt; &lt;code&gt;LATEST&lt;/code&gt; に&lt;/a&gt;設定されている場合、パッカーは、元のアーカイブで使用可能なすべてのエントリの中から最新の変更時刻、または各セグメントで使用可能なすべてのエントリの最新の変更時刻を判別しようとします。</target>
        </trans-unit>
        <trans-unit id="2072ad7aa3f491703c95e59ec856d9a51192711f" translate="yes" xml:space="preserve">
          <source>If this property is set to the special string &lt;a href=&quot;#LATEST&quot;&gt;&lt;code&gt;LATEST&lt;/code&gt;&lt;/a&gt;, the packer will attempt to determine the latest modification time, among all the available entries in the original archive or the latest modification time of all the available entries in each segment. This single value will be transmitted as part of the segment and applied to all the entries in each segment, &lt;a href=&quot;#SEGMENT_LIMIT&quot;&gt;&lt;code&gt;SEGMENT_LIMIT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティが特別な文字列&lt;a href=&quot;#LATEST&quot;&gt; &lt;code&gt;LATEST&lt;/code&gt; に&lt;/a&gt;設定されている場合、パッカーは、元のアーカイブで使用可能なすべてのエントリの中から最新の変更時刻、または各セグメントで使用可能なすべてのエントリの最新の変更時刻を判別しようとします。この単一の値は、セグメントの一部として送信され、各セグメントのすべてのエントリ&lt;a href=&quot;#SEGMENT_LIMIT&quot;&gt; &lt;code&gt;SEGMENT_LIMIT&lt;/code&gt; に&lt;/a&gt;適用されます。</target>
        </trans-unit>
        <trans-unit id="c26004343d49f4de62b441eeb8bc5f6df79863d9" translate="yes" xml:space="preserve">
          <source>If this property is set to the special string &lt;a href=&quot;pack200.packer#KEEP&quot;&gt;&lt;code&gt;KEEP&lt;/code&gt;&lt;/a&gt;, the packer transmits a separate modification time for each input element.</source>
          <target state="translated">このプロパティが特別な文字列&lt;a href=&quot;pack200.packer#KEEP&quot;&gt; &lt;code&gt;KEEP&lt;/code&gt; に&lt;/a&gt;設定されている場合、パッカーは入力要素ごとに個別の変更時間を送信します。</target>
        </trans-unit>
        <trans-unit id="7183fc1cd09c99a8f2ef588139d7494408411a2c" translate="yes" xml:space="preserve">
          <source>If this property is set to the special string &lt;a href=&quot;pack200.packer#KEEP&quot;&gt;&lt;code&gt;KEEP&lt;/code&gt;&lt;/a&gt;, the packer will attempt to determine an independent deflation hint for each available element of the input archive, and transmit this hint separately.</source>
          <target state="translated">このプロパティが特別な文字列&lt;a href=&quot;pack200.packer#KEEP&quot;&gt; &lt;code&gt;KEEP&lt;/code&gt; に&lt;/a&gt;設定されている場合、パッカーは、入力アーカイブの利用可能な各要素に対して独立したデフレヒントを決定し、このヒントを個別に送信しようとします。</target>
        </trans-unit>
        <trans-unit id="6707f281e27f03d84f3a7a3c629cdd4096bad1c7" translate="yes" xml:space="preserve">
          <source>If this property is set to the special string &lt;a href=&quot;pack200.packer#LATEST&quot;&gt;&lt;code&gt;LATEST&lt;/code&gt;&lt;/a&gt;, the packer will attempt to determine the latest modification time, among all the available entries in the original archive or the latest modification time of all the available entries in each segment. This single value will be transmitted as part of the segment and applied to all the entries in each segment, &lt;a href=&quot;pack200.packer#SEGMENT_LIMIT&quot;&gt;&lt;code&gt;SEGMENT_LIMIT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティが特別な文字列&lt;a href=&quot;pack200.packer#LATEST&quot;&gt; &lt;code&gt;LATEST&lt;/code&gt; に&lt;/a&gt;設定されている場合、パッカーは、元のアーカイブ内のすべての使用可能なエントリの中の最新の変更時間、または各セグメントで使用可能なすべてのエントリの最新の変更時間を決定しようとします。この単一の値は、セグメントの一部として送信され、各セグメント&lt;a href=&quot;pack200.packer#SEGMENT_LIMIT&quot;&gt; &lt;code&gt;SEGMENT_LIMIT&lt;/code&gt; の&lt;/a&gt;すべてのエントリに適用されます。</target>
        </trans-unit>
        <trans-unit id="223580f4429eb5c6ae28663e207c1e32ba4d790d" translate="yes" xml:space="preserve">
          <source>If this provider does not support the creation of such file systems or if the provider does not recognize the file type of the given file then it throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. The default implementation of this method throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">このプロバイダーがそのようなファイルシステムの作成をサポートしていない場合、またはプロバイダーが指定されたファイルのファイルタイプを認識しない場合は、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローします。このメソッドのデフォルトの実装は、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="adebdb1d5e5973bafb9cf6145ce5e6e780e19399" translate="yes" xml:space="preserve">
          <source>If this queue fits in the specified array with room to spare (i.e., the array has more elements than this queue), the element in the array immediately following the end of the queue is set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このキューが余裕のある指定された配列に収まる場合（つまり、配列にこのキューより多くの要素がある場合）、キューの最後の直後の配列の要素は &lt;code&gt;null&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="1f1a1229bbbf922c0ae5c26b76ce2ee228aa9fbd" translate="yes" xml:space="preserve">
          <source>If this represents a change to the current selection, then each &lt;code&gt;ListSelectionListener&lt;/code&gt; is notified of the change.</source>
          <target state="translated">これが現在の選択に対する変更を表す場合、各 &lt;code&gt;ListSelectionListener&lt;/code&gt; に変更が通知されます。</target>
        </trans-unit>
        <trans-unit id="086422cf5e0f973445bf41f69710c9d0ec575a99" translate="yes" xml:space="preserve">
          <source>If this represents a change to the current selection, then each &lt;code&gt;ListSelectionListener&lt;/code&gt; is notified of the change. Note that &lt;code&gt;index0&lt;/code&gt; doesn't have to be less than or equal to &lt;code&gt;index1&lt;/code&gt;.</source>
          <target state="translated">これが現在の選択に対する変更を表す場合、各 &lt;code&gt;ListSelectionListener&lt;/code&gt; に変更が通知されます。注意 &lt;code&gt;index0&lt;/code&gt; 未満か等しいである必要はありません &lt;code&gt;index1&lt;/code&gt; の。</target>
        </trans-unit>
        <trans-unit id="7406de7532c88edbedb6d358c0eacc66deaaa5c2" translate="yes" xml:space="preserve">
          <source>If this represents a change, all registered &lt;code&gt;
 TreeSelectionListener&lt;/code&gt;s are notified.</source>
          <target state="translated">これが変更を表す場合、登録されているすべての &lt;code&gt; TreeSelectionListener&lt;/code&gt; に通知されます。</target>
        </trans-unit>
        <trans-unit id="bfd5799cc5838acdef0c8e596fa4859393e3555c" translate="yes" xml:space="preserve">
          <source>If this results in changing the sort order and sorting, the appropriate &lt;code&gt;RowSorterListener&lt;/code&gt; notification will be sent.</source>
          <target state="translated">これによりソート順とソートが変更された場合、適切な &lt;code&gt;RowSorterListener&lt;/code&gt; 通知が送信されます。</target>
        </trans-unit>
        <trans-unit id="cf508307dff261e21d8f3b185fd8f0856bc1d5c1" translate="yes" xml:space="preserve">
          <source>If this scanner contains a resource that must be released, this scanner should be closed, either by calling its &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method, or by closing the returned stream. Closing the stream will close the underlying scanner. &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown if the scanner has been closed when this method is called, or if this scanner is closed during stream pipeline execution.</source>
          <target state="translated">このスキャナーに解放する必要のあるリソースが含まれている場合は、&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すか、返されたストリームを閉じることによって、このスキャナーを閉じる必要があります。ストリームを閉じると、基になるスキャナーが閉じます。このメソッドが呼び出されたときにスキャナーが閉じられた場合、またはストリームパイプラインの実行中にこのスキャナーが閉じられた場合、 &lt;code&gt;IllegalStateException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="1cc39709616b45493aeca7f5e8ac69e5cb52f845" translate="yes" xml:space="preserve">
          <source>If this scanner has not yet been closed then if its underlying &lt;a href=&quot;../lang/readable&quot;&gt;readable&lt;/a&gt; also implements the &lt;a href=&quot;../io/closeable&quot;&gt;&lt;code&gt;Closeable&lt;/code&gt;&lt;/a&gt; interface then the readable's &lt;code&gt;close&lt;/code&gt; method will be invoked. If this scanner is already closed then invoking this method will have no effect.</source>
          <target state="translated">このスキャナーがまだ閉じられていない場合、その下にある&lt;a href=&quot;../lang/readable&quot;&gt;読み取り可能&lt;/a&gt;&lt;a href=&quot;../io/closeable&quot;&gt; &lt;code&gt;Closeable&lt;/code&gt; &lt;/a&gt;インターフェースも実装している場合は、読み取り可能コードの &lt;code&gt;close&lt;/code&gt; メソッドが呼び出されます。このスキャナーがすでに閉じている場合、このメソッドを呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="ff4b0c6c9059d67b56956170121bc63b9b075533" translate="yes" xml:space="preserve">
          <source>If this secondary loop has not been started with the &lt;a href=&quot;#enter()&quot;&gt;&lt;code&gt;enter()&lt;/code&gt;&lt;/a&gt; method, or this secondary loop has already finished with the &lt;a href=&quot;#exit()&quot;&gt;&lt;code&gt;exit()&lt;/code&gt;&lt;/a&gt; method, this method returns &lt;code&gt;
 false&lt;/code&gt;, otherwise &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">この2次ループが&lt;a href=&quot;#enter()&quot;&gt; &lt;code&gt;enter()&lt;/code&gt; &lt;/a&gt;メソッドで開始されていない場合、またはこの2次ループが&lt;a href=&quot;#exit()&quot;&gt; &lt;code&gt;exit()&lt;/code&gt; &lt;/a&gt;メソッドで既に終了している場合、このメソッドは &lt;code&gt; false&lt;/code&gt; を返します。それ以外の &lt;code&gt;true&lt;/code&gt; はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="a15e47874a4460c8788d8fab1f7c5d6bc3952dd3" translate="yes" xml:space="preserve">
          <source>If this selector is already closed then invoking this method has no effect.</source>
          <target state="translated">このセレクタが既に閉じられている場合、このメソッドを実行しても何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="6405daa2c069d6b40d10358e7bb77371faa4a3a2" translate="yes" xml:space="preserve">
          <source>If this set fits in the specified array with room to spare (i.e., the array has more elements than this set), the element in the array immediately following the end of the set is set to &lt;code&gt;null&lt;/code&gt;. (This is useful in determining the length of this set</source>
          <target state="translated">このセットが指定された配列に収まり、余裕がある場合（つまり、配列にこのセットより多くの要素がある場合）、セットの末尾の直後の配列内の要素は &lt;code&gt;null&lt;/code&gt; に設定されます。（これは、このセットの長さを決定するのに役立ちます</target>
        </trans-unit>
        <trans-unit id="c80184b3688b04badc083e61b15fdf0059d3f2c1" translate="yes" xml:space="preserve">
          <source>If this set makes any guarantees as to what order its elements are returned by its iterator, this method must return the elements in the same order.</source>
          <target state="translated">このセットが、そのイテレータによって返される要素の順序を保証している場合、このメソッドは同じ順序で要素を返さなければなりません。</target>
        </trans-unit>
        <trans-unit id="e9d73276f82261367117e5a4c176a4aad69b8bb2" translate="yes" xml:space="preserve">
          <source>If this signature engine has been previously initialized with parameters (by calling the &lt;code&gt;engineSetParameter&lt;/code&gt; method), this method returns the same parameters. If this signature engine has not been initialized with parameters, this method may return a combination of default and randomly generated parameter values if the underlying signature implementation supports it and can successfully generate them. Otherwise, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">この署名エンジンが以前にパラメーターで初期化されている場合（ &lt;code&gt;engineSetParameter&lt;/code&gt; メソッドを呼び出すことにより）、このメソッドは同じパラメーターを返します。この署名エンジンがパラメーターで初期化されていない場合、基になる署名実装がパラメーターをサポートし、正常に生成できる場合、このメソッドはデフォルトとランダムに生成されたパラメーター値の組み合わせを返すことがあります。それ以外の場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="2650322772dd73c845098b0058d3bdc5f4dc3489" translate="yes" xml:space="preserve">
          <source>If this signature has been previously initialized with parameters (by calling the &lt;code&gt;setParameter&lt;/code&gt; method), this method returns the same parameters. If this signature has not been initialized with parameters, this method may return a combination of default and randomly generated parameter values if the underlying signature implementation supports it and can successfully generate them. Otherwise, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">このシグニチャが以前にパラメータで初期化されている場合（ &lt;code&gt;setParameter&lt;/code&gt; メソッドを呼び出すことにより）、このメソッドは同じパラメータを返します。このシグニチャがパラメータで初期化されていない場合、基礎となるシグニチャの実装がそれをサポートし、正常に生成できる場合、このメソッドはデフォルトとランダムに生成されたパラメータ値の組み合わせを返すことがあります。それ以外の場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="94d1259b873602b3b91dfea6d2c8e9566dd609a2" translate="yes" xml:space="preserve">
          <source>If this socket has an associated channel then the channel is closed as well.</source>
          <target state="translated">このソケットに関連するチャネルがある場合、チャネルも閉じられます。</target>
        </trans-unit>
        <trans-unit id="e0939c800f0a2312fef33d7c5d500964dbec69f2" translate="yes" xml:space="preserve">
          <source>If this socket has an associated channel then the resulting input stream delegates all of its operations to the channel. If the channel is in non-blocking mode then the input stream's &lt;code&gt;read&lt;/code&gt; operations will throw an &lt;a href=&quot;../nio/channels/illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このソケットにチャネルが関連付けられている場合、結果の入力ストリームは、すべての操作をチャネルに委任します。チャネルが非ブロッキングモードの場合、入力ストリームの &lt;code&gt;read&lt;/code&gt; 操作は&lt;a href=&quot;../nio/channels/illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="d7ee7bd8c081806387ada503ad7b8c514e5dfac1" translate="yes" xml:space="preserve">
          <source>If this socket has an associated channel then the resulting output stream delegates all of its operations to the channel. If the channel is in non-blocking mode then the output stream's &lt;code&gt;write&lt;/code&gt; operations will throw an &lt;a href=&quot;../nio/channels/illegalblockingmodeexception&quot;&gt;&lt;code&gt;IllegalBlockingModeException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このソケットにチャネルが関連付けられている場合、結果の出力ストリームはすべての操作をチャネルに委任します。チャネルが非ブロッキングモードの場合、出力ストリームの &lt;code&gt;write&lt;/code&gt; 操作は&lt;a href=&quot;../nio/channels/illegalblockingmodeexception&quot;&gt; &lt;code&gt;IllegalBlockingModeException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="693a1800e76c5ac59beead537e01064ff0c4be28" translate="yes" xml:space="preserve">
          <source>If this spliterator can be partitioned, returns a Spliterator covering elements, that will, upon return from this method, not be covered by this Spliterator.</source>
          <target state="translated">この spliterator が分割可能な場合、このメソッドからの戻り値で、この Spliterator によってカバーされない要素をカバーする Spliterator を返します。</target>
        </trans-unit>
        <trans-unit id="c735b11df0039877353011e334fc443d166561ca" translate="yes" xml:space="preserve">
          <source>If this stream has an associated channel then the channel is closed as well.</source>
          <target state="translated">このストリームに関連するチャネルがある場合、チャネルも同様に閉じられます。</target>
        </trans-unit>
        <trans-unit id="177e9350f1f0711c97d9bfd13687beb39a3a889a" translate="yes" xml:space="preserve">
          <source>If this stream is ordered then the longest prefix is a contiguous sequence of elements of this stream that match the given predicate. The first element of the sequence is the first element of this stream, and the element immediately following the last element of the sequence does not match the given predicate.</source>
          <target state="translated">このストリームが順序付けられている場合、最長の接頭辞は、与えられた述語に一致するこのストリームの要素の連続したシーケンスです。シーケンスの最初の要素はこのストリームの最初の要素であり、シーケンスの最後の要素の直後の要素は与えられた述語には一致しません。</target>
        </trans-unit>
        <trans-unit id="356be1dc205c83dcf292598b3b75f01323500759" translate="yes" xml:space="preserve">
          <source>If this stream is unordered, and some (but not all) elements of this stream match the given predicate, then the behavior of this operation is nondeterministic; it is free to drop any subset of matching elements (which includes the empty set).</source>
          <target state="translated">このストリームが順序付けされておらず、このストリームの一部(すべてではないが)の要素が与えられた述語にマッチする場合、この操作の動作は非決定論的で、マッチする要素の任意のサブセット(空の集合を含む)を自由に削除することができます。</target>
        </trans-unit>
        <trans-unit id="cb02b482b547fe37636958df4ee195f2c0bb9c2c" translate="yes" xml:space="preserve">
          <source>If this stream is unordered, and some (but not all) elements of this stream match the given predicate, then the behavior of this operation is nondeterministic; it is free to take any subset of matching elements (which includes the empty set).</source>
          <target state="translated">このストリームが順序付けされておらず、このストリームの一部(すべてではないが)の要素が与えられた述語にマッチする場合、この操作の動作は非決定論的で、マッチする要素の任意のサブセット(空の集合を含む)を自由に取ることができます。</target>
        </trans-unit>
        <trans-unit id="92d68b98e0019a083095ba0519f2ddd9fb22048a" translate="yes" xml:space="preserve">
          <source>If this stream was created from an enumeration, all remaining elements are requested from the enumeration and closed before the &lt;code&gt;close&lt;/code&gt; method returns.</source>
          <target state="translated">このストリームが列挙から作成された場合、残りのすべての要素は列挙から要求され、 &lt;code&gt;close&lt;/code&gt; メソッドが戻る前に閉じられます。</target>
        </trans-unit>
        <trans-unit id="b28d05117321f34852c21f8fd9e3fbad28413d0c" translate="yes" xml:space="preserve">
          <source>If this string is empty or count is zero then the empty string is returned.</source>
          <target state="translated">この文字列が空の場合、または count が 0 の場合は、空の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="0ba26efbe973bccaefedf139be56e1371adf12c3" translate="yes" xml:space="preserve">
          <source>If this task does not have a completer, invokes &lt;a href=&quot;forkjointask#quietlyComplete()&quot;&gt;&lt;code&gt;ForkJoinTask.quietlyComplete()&lt;/code&gt;&lt;/a&gt; and returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このタスクに&lt;a href=&quot;forkjointask#quietlyComplete()&quot;&gt; &lt;code&gt;ForkJoinTask.quietlyComplete()&lt;/code&gt; &lt;/a&gt;がない場合は、ForkJoinTask.quietlyComplete（）を呼び出し、 &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8ad26ee087327b18521b9d6c34bd0f93f8aa1174" translate="yes" xml:space="preserve">
          <source>If this task does not have a completer, invokes &lt;a href=&quot;forkjointask#quietlyComplete()&quot;&gt;&lt;code&gt;ForkJoinTask.quietlyComplete()&lt;/code&gt;&lt;/a&gt; and returns &lt;code&gt;null&lt;/code&gt;. Or, if the completer's pending count is non-zero, decrements that pending count and returns &lt;code&gt;null&lt;/code&gt;. Otherwise, returns the completer. This method can be used as part of a completion traversal loop for homogeneous task hierarchies:</source>
          <target state="translated">このタスクに&lt;a href=&quot;forkjointask#quietlyComplete()&quot;&gt; &lt;code&gt;ForkJoinTask.quietlyComplete()&lt;/code&gt; &lt;/a&gt;がない場合は、ForkJoinTask.quietlyComplete（）を呼び出し、 &lt;code&gt;null&lt;/code&gt; を返します。または、コンプリーターの保留中のカウントがゼロ以外の場合、その保留中のカウントをデクリメントして &lt;code&gt;null&lt;/code&gt; を返します。それ以外の場合は、コンプリーターを返します。このメソッドは、同種のタスク階層の完了トラバーサルループの一部として使用できます。</target>
        </trans-unit>
        <trans-unit id="4d83610308e8ed4feab83660c34b5cc784dbd534" translate="yes" xml:space="preserve">
          <source>If this task does not have a completer, invokes &lt;a href=&quot;forkjointask#quietlyComplete--&quot;&gt;&lt;code&gt;ForkJoinTask.quietlyComplete()&lt;/code&gt;&lt;/a&gt; and returns &lt;code&gt;null&lt;/code&gt;. Or, if the completer's pending count is non-zero, decrements that pending count and returns &lt;code&gt;null&lt;/code&gt;. Otherwise, returns the completer. This method can be used as part of a completion traversal loop for homogeneous task hierarchies:</source>
          <target state="translated">このタスクに完了機能がない場合は、 &lt;a href=&quot;forkjointask#quietlyComplete--&quot;&gt; &lt;code&gt;ForkJoinTask.quietlyComplete()&lt;/code&gt; &lt;/a&gt;を &lt;code&gt;null&lt;/code&gt; を返します。または、コンプリーターの保留中のカウントがゼロ以外の場合、その保留中のカウントを減らして &lt;code&gt;null&lt;/code&gt; を返します。それ以外の場合は、コンプリーターを返します。このメソッドは、同種のタスク階層の完了走査ループの一部として使用できます。</target>
        </trans-unit>
        <trans-unit id="fd12cf42083780739c6a825c0d630d6b5ba9cfcf" translate="yes" xml:space="preserve">
          <source>If this task has not completed, attempts to process at most the given number of other unprocessed tasks for which this task is on the completion path, if any are known to exist.</source>
          <target state="translated">このタスクが完了していない場合、このタスクが完了経路上にある未処理の他のタスクが存在することがわかれば、最大でも指定された数だけ処理を試みます。</target>
        </trans-unit>
        <trans-unit id="531b04b1809bf496472c1400438f923297751d99" translate="yes" xml:space="preserve">
          <source>If this task's pending count is zero, returns this task; otherwise decrements its pending count and returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このタスクの保留カウントがゼロの場合、このタスクを返します。それ以外の場合は、保留中のカウントを減らして &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a92717ec23f413eb8c0291d87e494517a42fdcb0" translate="yes" xml:space="preserve">
          <source>If this task's pending count is zero, returns this task; otherwise decrements its pending count and returns &lt;code&gt;null&lt;/code&gt;. This method is designed to be used with &lt;a href=&quot;#nextComplete()&quot;&gt;&lt;code&gt;nextComplete()&lt;/code&gt;&lt;/a&gt; in completion traversal loops.</source>
          <target state="translated">このタスクの保留カウントがゼロの場合、このタスクを返します。それ以外の場合は、保留中のカウントを減らして &lt;code&gt;null&lt;/code&gt; を返します。このメソッドは、完了トラバーサルループで&lt;a href=&quot;#nextComplete()&quot;&gt; &lt;code&gt;nextComplete()&lt;/code&gt; &lt;/a&gt;とともに使用するように設計されています。</target>
        </trans-unit>
        <trans-unit id="062c4f45b9bcf8888c66111d88b0a6efdd255e64" translate="yes" xml:space="preserve">
          <source>If this task's pending count is zero, returns this task; otherwise decrements its pending count and returns &lt;code&gt;null&lt;/code&gt;. This method is designed to be used with &lt;a href=&quot;countedcompleter#nextComplete--&quot;&gt;&lt;code&gt;nextComplete()&lt;/code&gt;&lt;/a&gt; in completion traversal loops.</source>
          <target state="translated">このタスクの保留中のカウントがゼロの場合、このタスクを返します。それ以外の場合は、保留中のカウントを減らして戻ります &lt;code&gt;null&lt;/code&gt; ます。このメソッドは、完了走査ループで&lt;a href=&quot;countedcompleter#nextComplete--&quot;&gt; &lt;code&gt;nextComplete()&lt;/code&gt; &lt;/a&gt;とともに使用するように設計されています。</target>
        </trans-unit>
        <trans-unit id="e9668040405953ec55c4fc6dc1d0198c7aa37ad9" translate="yes" xml:space="preserve">
          <source>If this the stream was an http connection, redirects will be followed and the resulting URL will be set as the &lt;code&gt;Document.StreamDescriptionProperty&lt;/code&gt; so that relative URL's can be properly resolved.</source>
          <target state="translated">このストリームがhttp接続の場合、リダイレクトが追跡され、結果のURLが &lt;code&gt;Document.StreamDescriptionProperty&lt;/code&gt; として設定されるため、相対URLを適切に解決できます。</target>
        </trans-unit>
        <trans-unit id="37210489834346fdfa0ada349e6c4f85f2e096b6" translate="yes" xml:space="preserve">
          <source>If this thread group has a parent thread group, the &lt;code&gt;uncaughtException&lt;/code&gt; method of that parent is called with the same two arguments.</source>
          <target state="translated">このスレッドグループに親スレッドグループがある場合、その親の &lt;code&gt;uncaughtException&lt;/code&gt; メソッドは同じ2つの引数で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="15f32ba0c7cf17c7430d343be040346b3a0a7775" translate="yes" xml:space="preserve">
          <source>If this thread is blocked in a &lt;a href=&quot;../nio/channels/selector&quot;&gt;&lt;code&gt;Selector&lt;/code&gt;&lt;/a&gt; then the thread's interrupt status will be set and it will return immediately from the selection operation, possibly with a non-zero value, just as if the selector's &lt;a href=&quot;../nio/channels/selector#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method were invoked.</source>
          <target state="translated">このスレッドが&lt;a href=&quot;../nio/channels/selector&quot;&gt; &lt;code&gt;Selector&lt;/code&gt; &lt;/a&gt;ブロックされている場合、スレッドの割り込みステータスが設定され、セレクターの&lt;a href=&quot;../nio/channels/selector#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたかのように、おそらくゼロ以外の値で、選択操作からすぐに戻ります。</target>
        </trans-unit>
        <trans-unit id="136205f825397c64ddc73f65dffe39be30ff4a5a" translate="yes" xml:space="preserve">
          <source>If this thread is blocked in a &lt;a href=&quot;../nio/channels/selector&quot;&gt;&lt;code&gt;Selector&lt;/code&gt;&lt;/a&gt; then the thread's interrupt status will be set and it will return immediately from the selection operation, possibly with a non-zero value, just as if the selector's &lt;a href=&quot;../nio/channels/selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method were invoked.</source>
          <target state="translated">このスレッドがブロックされている場合 &lt;a href=&quot;../nio/channels/selector&quot;&gt; &lt;code&gt;Selector&lt;/code&gt; &lt;/a&gt;、スレッドの割り込みステータスが設定され、セレクターの&lt;a href=&quot;../nio/channels/selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt;メソッドが呼び出された場合と同様に、選択操作からすぐに返されます。</target>
        </trans-unit>
        <trans-unit id="de3aec7f5e3ea72da2979ae96ca609512aa7e1ac" translate="yes" xml:space="preserve">
          <source>If this thread is blocked in an I/O operation upon an &lt;a href=&quot;../nio/channels/interruptiblechannel&quot;&gt;&lt;code&gt;InterruptibleChannel&lt;/code&gt;&lt;/a&gt; then the channel will be closed, the thread's interrupt status will be set, and the thread will receive a &lt;a href=&quot;../nio/channels/closedbyinterruptexception&quot;&gt;&lt;code&gt;ClosedByInterruptException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このスレッドが、&lt;a href=&quot;../nio/channels/interruptiblechannel&quot;&gt; &lt;code&gt;InterruptibleChannel&lt;/code&gt; &lt;/a&gt;でのI / O操作でブロックされている場合場合、チャネルは閉じられ、スレッドの割り込みステータスが設定され、スレッドは&lt;a href=&quot;../nio/channels/closedbyinterruptexception&quot;&gt; &lt;code&gt;ClosedByInterruptException&lt;/code&gt; を受け取り&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="0d0f71fefdd2a3553023bcb248dd5148bfb96254" translate="yes" xml:space="preserve">
          <source>If this thread is blocked in an invocation of the &lt;a href=&quot;object#wait()&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;object#wait(long)&quot;&gt;&lt;code&gt;wait(long)&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;object#wait(long,int)&quot;&gt;&lt;code&gt;wait(long, int)&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; class, or of the &lt;a href=&quot;#join()&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#join(long)&quot;&gt;&lt;code&gt;join(long)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#join(long,int)&quot;&gt;&lt;code&gt;join(long, int)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#sleep(long)&quot;&gt;&lt;code&gt;sleep(long)&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#sleep(long,int)&quot;&gt;&lt;code&gt;sleep(long, int)&lt;/code&gt;&lt;/a&gt;, methods of this class, then its interrupt status will be cleared and it will receive an &lt;a href=&quot;interruptedexception&quot;&gt;&lt;code&gt;InterruptedException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;クラスまたは&lt;a href=&quot;#join()&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#join(long)&quot;&gt; &lt;code&gt;join(long)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#join(long,int)&quot;&gt; &lt;code&gt;join(long, int)&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;object#wait()&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;object#wait(long)&quot;&gt; &lt;code&gt;wait(long)&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;object#wait(long,int)&quot;&gt; &lt;code&gt;wait(long, int)&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しでこのスレッドがブロックされている場合、&lt;a href=&quot;#sleep(long)&quot;&gt; &lt;code&gt;sleep(long)&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;#sleep(long,int)&quot;&gt; &lt;code&gt;sleep(long, int)&lt;/code&gt; &lt;/a&gt;、このクラスのメソッドの場合、その割り込みステータスはクリアされ、&lt;a href=&quot;interruptedexception&quot;&gt; &lt;code&gt;InterruptedException&lt;/code&gt; &lt;/a&gt;を受け取ります。</target>
        </trans-unit>
        <trans-unit id="4f7e022d7d703785a470b724182da4d83682bbf3" translate="yes" xml:space="preserve">
          <source>If this thread is blocked in an invocation of the &lt;a href=&quot;object#wait--&quot;&gt;&lt;code&gt;wait()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;object#wait-long-&quot;&gt;&lt;code&gt;wait(long)&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;object#wait-long-int-&quot;&gt;&lt;code&gt;wait(long, int)&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; class, or of the &lt;a href=&quot;thread#join--&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;thread#join-long-&quot;&gt;&lt;code&gt;join(long)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;thread#join-long-int-&quot;&gt;&lt;code&gt;join(long, int)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;thread#sleep-long-&quot;&gt;&lt;code&gt;sleep(long)&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;thread#sleep-long-int-&quot;&gt;&lt;code&gt;sleep(long, int)&lt;/code&gt;&lt;/a&gt;, methods of this class, then its interrupt status will be cleared and it will receive an &lt;a href=&quot;interruptedexception&quot;&gt;&lt;code&gt;InterruptedException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;クラスの、または&lt;a href=&quot;thread#join--&quot;&gt; &lt;code&gt;join()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;thread#join-long-&quot;&gt; &lt;code&gt;join(long)&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;thread#join-long-int-&quot;&gt; &lt;code&gt;join(long, int)&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;object#wait--&quot;&gt; &lt;code&gt;wait()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;object#wait-long-&quot;&gt; &lt;code&gt;wait(long)&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;object#wait-long-int-&quot;&gt; &lt;code&gt;wait(long, int)&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しでこのスレッドがブロックされた場合、&lt;a href=&quot;thread#sleep-long-&quot;&gt; &lt;code&gt;sleep(long)&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;thread#sleep-long-int-&quot;&gt; &lt;code&gt;sleep(long, int)&lt;/code&gt; &lt;/a&gt;、このクラスのメソッドの場合、その割り込みステータスはクリアされ、&lt;a href=&quot;interruptedexception&quot;&gt; &lt;code&gt;InterruptedException&lt;/code&gt; &lt;/a&gt;を受け取ります。</target>
        </trans-unit>
        <trans-unit id="7dee04fe29a564110a8edc14c833afd51b71a8fd" translate="yes" xml:space="preserve">
          <source>If this thread is different from the current thread (that is, the current thread is trying to stop a thread other than itself), the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method (with a &lt;code&gt;RuntimePermission(&quot;stopThread&quot;)&lt;/code&gt; argument) is called in addition. Again, this may result in throwing a &lt;code&gt;SecurityException&lt;/code&gt; (in the current thread).</source>
          <target state="translated">このスレッドが現在のスレッドと異なる場合（つまり、現在のスレッドがそれ以外のスレッドを停止しようとしている場合）、セキュリティマネージャーの &lt;code&gt;checkPermission&lt;/code&gt; メソッド（ &lt;code&gt;RuntimePermission(&quot;stopThread&quot;)&lt;/code&gt; 引数付き）が追加で呼び出されます。この場合も、（現在のスレッドで） &lt;code&gt;SecurityException&lt;/code&gt; がスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="6eb1caff0d211bf12bda29597feac8eecc8df201" translate="yes" xml:space="preserve">
          <source>If this thread was constructed using a separate &lt;code&gt;Runnable&lt;/code&gt; run object, then that &lt;code&gt;Runnable&lt;/code&gt; object's &lt;code&gt;run&lt;/code&gt; method is called; otherwise, this method does nothing and returns.</source>
          <target state="translated">このスレッドが別の &lt;code&gt;Runnable&lt;/code&gt; runオブジェクトを使用して構築された場合、その &lt;code&gt;Runnable&lt;/code&gt; オブジェクトの &lt;code&gt;run&lt;/code&gt; メソッドが呼び出されます。それ以外の場合、このメソッドは何もせずに戻ります。</target>
        </trans-unit>
        <trans-unit id="32c3e37dfdbc9761a0862e9cdb4601e86792e3e1" translate="yes" xml:space="preserve">
          <source>If this toggle button is a member of the &lt;a href=&quot;buttongroup&quot;&gt;&lt;code&gt;ButtonGroup&lt;/code&gt;&lt;/a&gt; which has another toggle button which is selected and can be the focus owner, and the focus cause argument denotes window activation or focus traversal action of any direction the result of the method execution is the same as calling &lt;a href=&quot;../../java/awt/component#requestFocus(java.awt.event.FocusEvent.Cause)&quot;&gt;&lt;code&gt;Component.requestFocus(FocusEvent.Cause)&lt;/code&gt;&lt;/a&gt; on the toggle button selected in the group.</source>
          <target state="translated">このトグルボタンが、選択されてフォーカス所有者になることができる別のトグルボタンを持つ&lt;a href=&quot;buttongroup&quot;&gt; &lt;code&gt;ButtonGroup&lt;/code&gt; の&lt;/a&gt;メンバーであり、フォーカス原因引数がウィンドウのアクティブ化または任意の方向のフォーカストラバーサルアクションを示す場合、メソッド実行の結果は次のようになります。グループで選択したトグルボタンで&lt;a href=&quot;../../java/awt/component#requestFocus(java.awt.event.FocusEvent.Cause)&quot;&gt; &lt;code&gt;Component.requestFocus(FocusEvent.Cause)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="9767edce27460f57eec16d2a2cd36a03faa259a5" translate="yes" xml:space="preserve">
          <source>If this toggle button is a member of the &lt;a href=&quot;buttongroup&quot;&gt;&lt;code&gt;ButtonGroup&lt;/code&gt;&lt;/a&gt; which has another toggle button which is selected and can be the focus owner, and the focus cause argument denotes window activation or focus traversal action of any direction the result of the method execution is the same as calling &lt;a href=&quot;../../java/awt/component#requestFocus(java.awt.event.FocusEvent.Cause)&quot;&gt;&lt;code&gt;Component.requestFocus(FocusEvent.Cause)&lt;/code&gt;&lt;/a&gt; on the toggle button selected in the group. In all other cases the result of the method is the same as calling &lt;a href=&quot;../../java/awt/component#requestFocus(java.awt.event.FocusEvent.Cause)&quot;&gt;&lt;code&gt;Component.requestFocus(FocusEvent.Cause)&lt;/code&gt;&lt;/a&gt; on this toggle button.</source>
          <target state="translated">このトグルボタンが、選択されてフォーカス所有者になることができる別のトグルボタンを持つ&lt;a href=&quot;buttongroup&quot;&gt; &lt;code&gt;ButtonGroup&lt;/code&gt; の&lt;/a&gt;メンバーであり、フォーカス原因引数がウィンドウのアクティブ化または任意の方向のフォーカストラバーサルアクションを示す場合、メソッド実行の結果は次のようになります。グループで選択したトグルボタンで&lt;a href=&quot;../../java/awt/component#requestFocus(java.awt.event.FocusEvent.Cause)&quot;&gt; &lt;code&gt;Component.requestFocus(FocusEvent.Cause)&lt;/code&gt; &lt;/a&gt;を呼び出します。他のすべての場合、メソッドの結果は、このトグルボタンで&lt;a href=&quot;../../java/awt/component#requestFocus(java.awt.event.FocusEvent.Cause)&quot;&gt; &lt;code&gt;Component.requestFocus(FocusEvent.Cause)&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="7c336255926d4e5bbbcaf58e4863d5c2d8eea790" translate="yes" xml:space="preserve">
          <source>If this toggle button is a member of the &lt;a href=&quot;buttongroup&quot;&gt;&lt;code&gt;ButtonGroup&lt;/code&gt;&lt;/a&gt; which has another toggle button which is selected and can be the focus owner, and the focus cause argument denotes window activation or focus traversal action of any direction the result of the method execution is the same as calling &lt;a href=&quot;../../java/awt/component#requestFocusInWindow(java.awt.event.FocusEvent.Cause)&quot;&gt;&lt;code&gt;Component.requestFocusInWindow(FocusEvent.Cause)&lt;/code&gt;&lt;/a&gt; on the toggle button selected in the group.</source>
          <target state="translated">このトグルボタンが、選択されてフォーカス所有者になることができる別のトグルボタンを持つ&lt;a href=&quot;buttongroup&quot;&gt; &lt;code&gt;ButtonGroup&lt;/code&gt; の&lt;/a&gt;メンバーであり、フォーカス原因引数がウィンドウのアクティブ化または任意の方向のフォーカストラバーサルアクションを示す場合、メソッド実行の結果は次のようになります。グループで選択したトグルボタンで&lt;a href=&quot;../../java/awt/component#requestFocusInWindow(java.awt.event.FocusEvent.Cause)&quot;&gt; &lt;code&gt;Component.requestFocusInWindow(FocusEvent.Cause)&lt;/code&gt; &lt;/a&gt;を呼び出します。</target>
        </trans-unit>
        <trans-unit id="bd56d40b18444ca2e5dc9d837c5bd6035097d000" translate="yes" xml:space="preserve">
          <source>If this toggle button is a member of the &lt;a href=&quot;buttongroup&quot;&gt;&lt;code&gt;ButtonGroup&lt;/code&gt;&lt;/a&gt; which has another toggle button which is selected and can be the focus owner, and the focus cause argument denotes window activation or focus traversal action of any direction the result of the method execution is the same as calling &lt;a href=&quot;../../java/awt/component#requestFocusInWindow(java.awt.event.FocusEvent.Cause)&quot;&gt;&lt;code&gt;Component.requestFocusInWindow(FocusEvent.Cause)&lt;/code&gt;&lt;/a&gt; on the toggle button selected in the group. In all other cases the result of the method is the same as calling &lt;a href=&quot;../../java/awt/component#requestFocusInWindow(java.awt.event.FocusEvent.Cause)&quot;&gt;&lt;code&gt;Component.requestFocusInWindow(FocusEvent.Cause)&lt;/code&gt;&lt;/a&gt; on this toggle button.</source>
          <target state="translated">このトグルボタンが、選択されてフォーカス所有者になることができる別のトグルボタンを持つ&lt;a href=&quot;buttongroup&quot;&gt; &lt;code&gt;ButtonGroup&lt;/code&gt; の&lt;/a&gt;メンバーであり、フォーカス原因引数がウィンドウのアクティブ化または任意の方向のフォーカストラバーサルアクションを示す場合、メソッド実行の結果は次のようになります。グループで選択したトグルボタンで&lt;a href=&quot;../../java/awt/component#requestFocusInWindow(java.awt.event.FocusEvent.Cause)&quot;&gt; &lt;code&gt;Component.requestFocusInWindow(FocusEvent.Cause)&lt;/code&gt; &lt;/a&gt;を呼び出します。他のすべての場合、メソッドの結果は、このトグルボタンで&lt;a href=&quot;../../java/awt/component#requestFocusInWindow(java.awt.event.FocusEvent.Cause)&quot;&gt; &lt;code&gt;Component.requestFocusInWindow(FocusEvent.Cause)&lt;/code&gt; &lt;/a&gt;を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="37767eb6921e26f533f59c9be98a081367dcd47e" translate="yes" xml:space="preserve">
          <source>If this transform maps all coordinates onto a point or a line then it will not have an inverse, since coordinates that do not lie on the destination point or line will not have an inverse mapping. The &lt;code&gt;getDeterminant&lt;/code&gt; method can be used to determine if this transform has no inverse, in which case an exception will be thrown if the &lt;code&gt;createInverse&lt;/code&gt; method is called.</source>
          <target state="translated">この変換がすべての座標をポイントまたはラインにマッピングする場合、デスティネーションポイントまたはライン上にない座標にはインバースマッピングがないため、インバースはありません。 &lt;code&gt;getDeterminant&lt;/code&gt; 方法は、これがあれば、例外がスローされる場合には全く逆の、持っていない変換かどうかを判断するために使用することができ &lt;code&gt;createInverse&lt;/code&gt; のメソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2851f91604666b2de18be820f1b354071d947d41" translate="yes" xml:space="preserve">
          <source>If this transform maps all coordinates onto a point or a line then it will not have an inverse, since coordinates that do not lie on the destination point or line will not have an inverse mapping. The &lt;code&gt;getDeterminant&lt;/code&gt; method can be used to determine if this transform has no inverse, in which case an exception will be thrown if the &lt;code&gt;invert&lt;/code&gt; method is called.</source>
          <target state="translated">この変換がすべての座標を点または線にマッピングする場合、宛先の点または線上にない座標には逆マッピングがないため、逆にはなりません。 &lt;code&gt;getDeterminant&lt;/code&gt; の方法は、この変換は次の場合に例外がスローされる場合には全く逆の、持っていないかどうかを判断するために使用することができ &lt;code&gt;invert&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="59689268fc97705b98f90aa745a03383fca62775" translate="yes" xml:space="preserve">
          <source>If this transform represents a uniform scale, as indicated by the &lt;code&gt;getType&lt;/code&gt; method then the determinant also represents the square of the uniform scale factor by which all of the points are expanded from or contracted towards the origin. If this transform represents a non-uniform scale or more general transform then the determinant is not likely to represent a value useful for any purpose other than determining if inverse transforms are possible.</source>
          <target state="translated">&lt;code&gt;getType&lt;/code&gt; メソッドで示されるように、この変換が均一なスケールを表す場合、行列式は、すべてのポイントが原点から拡大または縮小される均一なスケール係数の2乗も表します。この変換が不均一なスケールまたはより一般的な変換を表す場合、行列式は、逆変換が可能かどうかを判断する以外の目的に役立つ値を表す可能性はありません。</target>
        </trans-unit>
        <trans-unit id="1036a7dd624514ec464cb770020aa6e61ea13a75" translate="yes" xml:space="preserve">
          <source>If this type is a top-level type, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">このタイプがトップレベルタイプの場合、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="9ea8dd4b3ea5292082d744fa63292b6b0b628b15" translate="yes" xml:space="preserve">
          <source>If this type is referenced from an &lt;code&gt;Attr&lt;/code&gt; node, &lt;code&gt;typeNamespace&lt;/code&gt; is &lt;code&gt;&quot;http://www.w3.org/TR/REC-xml&quot;&lt;/code&gt; and &lt;code&gt;typeName&lt;/code&gt; represents the &lt;b&gt;[attribute type]&lt;/b&gt; property in the [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-infoset-20040204/&quot;&gt;XML Information Set&lt;/a&gt;] . If there is no declaration for the attribute, &lt;code&gt;typeNamespace&lt;/code&gt; and &lt;code&gt;typeName&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このタイプが &lt;code&gt;Attr&lt;/code&gt; ノードから参照されている場合、 &lt;code&gt;typeNamespace&lt;/code&gt; は &lt;code&gt;&quot;http://www.w3.org/TR/REC-xml&quot;&lt;/code&gt; あり、 &lt;code&gt;typeName&lt;/code&gt; は[ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-infoset-20040204/&quot;&gt;XML情報セット&lt;/a&gt;]の&lt;b&gt;[属性タイプ]&lt;/b&gt;プロパティを表し&lt;b&gt;ます&lt;/b&gt;。属性の宣言がない場合、 &lt;code&gt;typeNamespace&lt;/code&gt; と &lt;code&gt;typeName&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cd4ca7d563a5061f719840cd6f06b071fe6ce8a8" translate="yes" xml:space="preserve">
          <source>If this type is referenced from an &lt;code&gt;Element&lt;/code&gt; node, &lt;code&gt;typeNamespace&lt;/code&gt; and &lt;code&gt;typeName&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">このタイプが &lt;code&gt;Element&lt;/code&gt; ノードから参照されている場合、 &lt;code&gt;typeNamespace&lt;/code&gt; と &lt;code&gt;typeName&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f7813e021bf6635b0bf1ddc22622b64a5e844fa8" translate="yes" xml:space="preserve">
          <source>If this type variable was declared with no explicit upper bounds, the result is &lt;code&gt;java.lang.Object&lt;/code&gt;. If it was declared with multiple upper bounds, the result is an &lt;a href=&quot;intersectiontype&quot;&gt;intersection type&lt;/a&gt;; individual bounds can be found by examining the result's &lt;a href=&quot;intersectiontype#getBounds()&quot;&gt;bounds&lt;/a&gt;.</source>
          <target state="translated">この型変数が明示的な上限なしで宣言された場合、結果は &lt;code&gt;java.lang.Object&lt;/code&gt; になります。複数の上限で宣言されている場合、結果は&lt;a href=&quot;intersectiontype&quot;&gt;交差型になり&lt;/a&gt;ます。個々の境界は、結果の&lt;a href=&quot;intersectiontype#getBounds()&quot;&gt;境界を&lt;/a&gt;調べることで見つけることができます。</target>
        </trans-unit>
        <trans-unit id="e08bb6c116e1da83b9d529a037838f86be336252" translate="yes" xml:space="preserve">
          <source>If this type variable was declared with no explicit upper bounds, the result is &lt;code&gt;java.lang.Object&lt;/code&gt;. If it was declared with multiple upper bounds, the result is an &lt;a href=&quot;intersectiontype&quot;&gt;intersection type&lt;/a&gt;; individual bounds can be found by examining the result's &lt;a href=&quot;intersectiontype#getBounds--&quot;&gt;bounds&lt;/a&gt;.</source>
          <target state="translated">この型変数が明示的な上限なしで宣言された場合、結果は &lt;code&gt;java.lang.Object&lt;/code&gt; になります。複数の上限で宣言された場合、結果は&lt;a href=&quot;intersectiontype&quot;&gt;交差タイプになります&lt;/a&gt;ます。個々の境界は、結果の&lt;a href=&quot;intersectiontype#getBounds--&quot;&gt;境界を&lt;/a&gt;調べることによって見つけることができます。</target>
        </trans-unit>
        <trans-unit id="5a05dc0d9a56c8456e3726f00dc66c1b2848ab48" translate="yes" xml:space="preserve">
          <source>If this value is false, then any node which has no children is a leaf node, and any node may acquire children.</source>
          <target state="translated">この値がfalseの場合、子を持たないノードはリーフノードであり、どのノードも子を取得することができます。</target>
        </trans-unit>
        <trans-unit id="359e36de815ffc1ab4a4612554160471de4265f0" translate="yes" xml:space="preserve">
          <source>If this virtual machine has a console then it is represented by a unique instance of this class which can be obtained by invoking the &lt;a href=&quot;../lang/system#console()&quot;&gt;&lt;code&gt;System.console()&lt;/code&gt;&lt;/a&gt; method. If no console device is available then an invocation of that method will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">この仮想マシンにコンソールがある場合は、&lt;a href=&quot;../lang/system#console()&quot;&gt; &lt;code&gt;System.console()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで取得できるこのクラスの一意のインスタンスで表されます。使用可能なコンソールデバイスがない場合、そのメソッドを呼び出すと &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="acbf944d3989fe8aba9f6f6ea4080273b18cb6ee" translate="yes" xml:space="preserve">
          <source>If this virtual machine has a console then it is represented by a unique instance of this class which can be obtained by invoking the &lt;a href=&quot;../lang/system#console--&quot;&gt;&lt;code&gt;System.console()&lt;/code&gt;&lt;/a&gt; method. If no console device is available then an invocation of that method will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">この仮想マシンにコンソールがある場合、このクラスは、このクラスの一意のインスタンスで表され、&lt;a href=&quot;../lang/system#console--&quot;&gt; &lt;code&gt;System.console()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって取得できます。使用可能なコンソールデバイスがない場合、そのメソッドの呼び出しは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="bfb30c4d00faeeb962ddb4c865ecf63132c1c820" translate="yes" xml:space="preserve">
          <source>If this watch key has already been cancelled then invoking this method has no effect. Once cancelled, a watch key remains forever invalid.</source>
          <target state="translated">このウォッチキーが既にキャンセルされている場合は、このメソッドを実行しても何の効果もありません。一度キャンセルされたウォッチキーは永遠に無効なままです。</target>
        </trans-unit>
        <trans-unit id="67ae0cc16c031b634fcbfcefd9879a42a332defc" translate="yes" xml:space="preserve">
          <source>If this watch key has been cancelled or this watch key is already in the ready state then invoking this method has no effect. Otherwise if there are pending events for the object then this watch key is immediately re-queued to the watch service. If there are no pending events then the watch key is put into the ready state and will remain in that state until an event is detected or the watch key is cancelled.</source>
          <target state="translated">もしこのウォッチ・キーがキャンセルされていたり、すでに準備ができている場合は、このメソッドを呼び出しても何の効果もありません。そうでない場合、オブジェクトに保留中のイベントがある場合、このウォッチキーは直ちにウォッチサービスに再キューイングされます。保留中のイベントがない場合、ウォッチキーはレディ状態になり、イベントが検出されるか、ウォッチキーがキャンセルされるまでその状態を維持します。</target>
        </trans-unit>
        <trans-unit id="d49de95f89fde0886c65b941dace6cda23c222a5" translate="yes" xml:space="preserve">
          <source>If this window is blocked by modal dialog, then the blocking dialog is brought to the front and remains above the blocked window.</source>
          <target state="translated">このウィンドウがモーダルダイアログによってブロックされている場合、ブロックされているダイアログは前面に出され、ブロックされているウィンドウの上に残っています。</target>
        </trans-unit>
        <trans-unit id="fc96c97802231f3c6be6068b9e85703f581d32c1" translate="yes" xml:space="preserve">
          <source>If this write lock is not held when any &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; method is called then an &lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt;&lt;code&gt;IllegalMonitorStateException&lt;/code&gt;&lt;/a&gt; is thrown. (Read locks are held independently of write locks, so are not checked or affected. However it is essentially always an error to invoke a condition waiting method when the current thread has also acquired read locks, since other threads that could unblock it will not be able to acquire the write lock.)</source>
          <target state="translated">&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたときにこの書き込みロックが保持されていない場合、&lt;a href=&quot;../../../lang/illegalmonitorstateexception&quot;&gt; &lt;code&gt;IllegalMonitorStateException&lt;/code&gt; &lt;/a&gt;がスローされます。（読み取りロックは書き込みロックとは独立して保持されるため、チェックも影響も受けません。ただし、現在のスレッドが読み取りロックを取得しているときに条件待機メソッドを呼び出すと、ブロックを解除できる他のスレッドはエラーにならないため、基本的に常にエラーになります。書き込みロックを取得できます。）</target>
        </trans-unit>
        <trans-unit id="5f79e63814e29ed4746eb250848d65b14d8ed57d" translate="yes" xml:space="preserve">
          <source>If timed out while blocked in step 4, return false, else true.</source>
          <target state="translated">ステップ 4 でブロックされている間にタイムアウトした場合は false を返し、そうでない場合は true を返します。</target>
        </trans-unit>
        <trans-unit id="dd02389962799011ed43b909ccafdaba1a291d37" translate="yes" xml:space="preserve">
          <source>If timezone field is defined for this instance, returns TimeZone initialized with custom timezone id of zoneoffset. If timezone field is undefined, try the defaultZoneoffset that was passed in. If defaultZoneoffset is FIELD_UNDEFINED, return default timezone for this host. (Same default as java.util.GregorianCalendar).</source>
          <target state="translated">このインスタンスに timezone フィールドが定義されている場合、カスタム・タイムゾーン ID の zoneoffset で初期化された TimeZone を返します。timezone フィールドが未定義の場合は、渡された defaultZoneoffset を試してみます。defaultZoneoffsetがFIELD_UNDEFINEDの場合、このホストのデフォルトのタイムゾーンを返します。(java.util.GregorianCalendarと同じデフォルト)。</target>
        </trans-unit>
        <trans-unit id="b0ec1a1fd90d92ff0078be5238c111fb08420bf2" translate="yes" xml:space="preserve">
          <source>If true if this viewport will maintain an offscreen image of its contents. The image is used to reduce the cost of small one dimensional changes to the &lt;code&gt;viewPosition&lt;/code&gt;. Rather than repainting the entire viewport we use &lt;code&gt;Graphics.copyArea&lt;/code&gt; to effect some of the scroll.</source>
          <target state="translated">trueの場合、このビューポートがそのコンテンツのオフスクリーンイメージを維持します。この画像は、 &lt;code&gt;viewPosition&lt;/code&gt; に対する小さな1次元の変更のコストを削減するために使用されます。ビューポート全体を再描画するのではなく、 &lt;code&gt;Graphics.copyArea&lt;/code&gt; を使用してスクロールの一部を実行します。</target>
        </trans-unit>
        <trans-unit id="e467f99e60229d1977e4a1de331a926f94fdf8dc" translate="yes" xml:space="preserve">
          <source>If true is returned, from now on &lt;code&gt;anEdit&lt;/code&gt; must return false from &lt;code&gt;canUndo&lt;/code&gt; and &lt;code&gt;canRedo&lt;/code&gt;, and must throw the appropriate exception on &lt;code&gt;undo&lt;/code&gt; or &lt;code&gt;redo&lt;/code&gt;.</source>
          <target state="translated">真はこれから、返された場合は &lt;code&gt;anEdit&lt;/code&gt; から偽を返す必要があり &lt;code&gt;canUndo&lt;/code&gt; および &lt;code&gt;canRedo&lt;/code&gt; 、との適切な例外をスローしなければなりません &lt;code&gt;undo&lt;/code&gt; や &lt;code&gt;redo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="04c2fc4ae7631258b0dbfd823fe7b5c9310cf52b" translate="yes" xml:space="preserve">
          <source>If true is returned, from now on anEdit must return false from canUndo() and canRedo(), and must throw the appropriate exception on undo() or redo().</source>
          <target state="translated">true が返された場合、今後 anEdit は canUndo()および canRedo()から false を返さなければならず、また undo()または redo()で適切な例外をスローしなければなりません。</target>
        </trans-unit>
        <trans-unit id="6916f52b9fd823a56ab09614084906369db32a1c" translate="yes" xml:space="preserve">
          <source>If true the component paints every pixel within its bounds.</source>
          <target state="translated">true の場合、コンポーネントはその範囲内のすべてのピクセルを描画します。</target>
        </trans-unit>
        <trans-unit id="12f2d9700a79c864d2a7eaa68066228008a04181" translate="yes" xml:space="preserve">
          <source>If true the component paints every pixel within its bounds. Otherwise, the component may not paint some or all of its pixels, allowing the underlying pixels to show through.</source>
          <target state="translated">true の場合、コンポーネントはその範囲内のすべてのピクセルを描画します。そうでない場合は、コンポーネントはそのピクセルの一部またはすべてを塗らないことがあります。</target>
        </trans-unit>
        <trans-unit id="7201394a7f2040ff5bf0612fb8fc8c4d161fb5e2" translate="yes" xml:space="preserve">
          <source>If true then calls to &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;setLayout&lt;/code&gt; will be forwarded to the &lt;code&gt;contentPane&lt;/code&gt;.</source>
          <target state="translated">trueの場合、 &lt;code&gt;add&lt;/code&gt; および &lt;code&gt;setLayout&lt;/code&gt; の呼び出しは &lt;code&gt;contentPane&lt;/code&gt; に転送されます。</target>
        </trans-unit>
        <trans-unit id="4e74dd4cc94c60e1b595da5bcb2c9a9df53d6c5e" translate="yes" xml:space="preserve">
          <source>If true then calls to &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;setLayout&lt;/code&gt; will be forwarded to the &lt;code&gt;contentPane&lt;/code&gt;. This is initially false, but is set to true when the &lt;code&gt;JApplet&lt;/code&gt; is constructed.</source>
          <target state="translated">trueの場合、 &lt;code&gt;add&lt;/code&gt; および &lt;code&gt;setLayout&lt;/code&gt; の呼び出しは &lt;code&gt;contentPane&lt;/code&gt; に転送されます。これは最初はfalseですが、 &lt;code&gt;JApplet&lt;/code&gt; が構築されるとtrueに設定されます。</target>
        </trans-unit>
        <trans-unit id="854dcdafa3fa78350a1864ae85a31471ad3035da" translate="yes" xml:space="preserve">
          <source>If true then calls to &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;setLayout&lt;/code&gt; will be forwarded to the &lt;code&gt;contentPane&lt;/code&gt;. This is initially false, but is set to true when the &lt;code&gt;JDialog&lt;/code&gt; is constructed.</source>
          <target state="translated">trueの場合、 &lt;code&gt;add&lt;/code&gt; および &lt;code&gt;setLayout&lt;/code&gt; の呼び出しは &lt;code&gt;contentPane&lt;/code&gt; に転送されます。これは最初はfalseですが、 &lt;code&gt;JDialog&lt;/code&gt; が作成されるとtrueに設定されます。</target>
        </trans-unit>
        <trans-unit id="d373410ddca3643cffc49576cccbc461f05db310" translate="yes" xml:space="preserve">
          <source>If true then calls to &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;setLayout&lt;/code&gt; will be forwarded to the &lt;code&gt;contentPane&lt;/code&gt;. This is initially false, but is set to true when the &lt;code&gt;JFrame&lt;/code&gt; is constructed.</source>
          <target state="translated">trueの場合、 &lt;code&gt;add&lt;/code&gt; および &lt;code&gt;setLayout&lt;/code&gt; の呼び出しは &lt;code&gt;contentPane&lt;/code&gt; に転送されます。これは最初はfalseですが、 &lt;code&gt;JFrame&lt;/code&gt; が構築されるときにtrueに設定されます。</target>
        </trans-unit>
        <trans-unit id="a0c538940593e9ac1d0c818484980ecc99c315f9" translate="yes" xml:space="preserve">
          <source>If true then calls to &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;setLayout&lt;/code&gt; will be forwarded to the &lt;code&gt;contentPane&lt;/code&gt;. This is initially false, but is set to true when the &lt;code&gt;JInternalFrame&lt;/code&gt; is constructed.</source>
          <target state="translated">trueの場合、 &lt;code&gt;add&lt;/code&gt; および &lt;code&gt;setLayout&lt;/code&gt; の呼び出しは &lt;code&gt;contentPane&lt;/code&gt; に転送されます。これは最初はfalseですが、 &lt;code&gt;JInternalFrame&lt;/code&gt; が構築されるときにtrueに設定されます。</target>
        </trans-unit>
        <trans-unit id="4da24a21d9c698c6f913f7fa649749a4d1a7b319" translate="yes" xml:space="preserve">
          <source>If true then calls to &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;setLayout&lt;/code&gt; will be forwarded to the &lt;code&gt;contentPane&lt;/code&gt;. This is initially false, but is set to true when the &lt;code&gt;JWindow&lt;/code&gt; is constructed.</source>
          <target state="translated">trueの場合、 &lt;code&gt;add&lt;/code&gt; および &lt;code&gt;setLayout&lt;/code&gt; の呼び出しは &lt;code&gt;contentPane&lt;/code&gt; に転送されます。これは最初はfalseですが、 &lt;code&gt;JWindow&lt;/code&gt; が構築されるときにtrueに設定されます。</target>
        </trans-unit>
        <trans-unit id="4e348a7eb7b47a5c2b20b07b9e5a5556fd59d6ff" translate="yes" xml:space="preserve">
          <source>If true, a UI widget will be provided to the user to get input.</source>
          <target state="translated">trueの場合、UIウィジェットがユーザーに提供され、入力を取得します。</target>
        </trans-unit>
        <trans-unit id="a2d5f9160b48c06286f5396c83b01b8cbe0b9dec" translate="yes" xml:space="preserve">
          <source>If true, children are lumped together in parent.</source>
          <target state="translated">本当ならば、子供は親に一括りにされます。</target>
        </trans-unit>
        <trans-unit id="781efdba3c3ec3111655ac4c903ff67382acc85c" translate="yes" xml:space="preserve">
          <source>If true, highlights are drawn as the Views draw the text.</source>
          <target state="translated">true の場合、ハイライトはビューがテキストを描画する際に描画されます。</target>
        </trans-unit>
        <trans-unit id="13cb3ab4be8c1b49952a74d086ba1a1d81ae6d84" translate="yes" xml:space="preserve">
          <source>If true, highlights are drawn as the Views draw the text. That is the Views will call into &lt;code&gt;paintLayeredHighlight&lt;/code&gt; which will result in a rectangle being drawn before the text is drawn (if the offsets are in a highlighted region that is). For this to work the painter supplied must be an instance of LayeredHighlightPainter.</source>
          <target state="translated">trueの場合、ビューがテキストを描画するときにハイライトが描画されます。つまり、ビューは &lt;code&gt;paintLayeredHighlight&lt;/code&gt; を呼び出し、テキストが描画される前に長方形が描画されます（オフセットが強調表示された領域にある場合）。これが機能するためには、提供されるペインターがLayeredHighlightPainterのインスタンスである必要があります。</target>
        </trans-unit>
        <trans-unit id="c219da54b1ac57e2690d1d060b724469d3ccd98c" translate="yes" xml:space="preserve">
          <source>If true, reordering of columns are allowed by the user; the default is true.</source>
          <target state="translated">trueの場合、ユーザーによる列の並び替えが許可されます。</target>
        </trans-unit>
        <trans-unit id="71831bb9b7cec752ccec9933744fb012db9dede1" translate="yes" xml:space="preserve">
          <source>If true, resizing of columns are allowed by the user; the default is true.</source>
          <target state="translated">true の場合、ユーザーは列のサイズ変更を許可しますが、デフォルトは true です。</target>
        </trans-unit>
        <trans-unit id="ecdae079ab4f2db424b9773ecff0b2849ab7ec27" translate="yes" xml:space="preserve">
          <source>If true, specifies that a sort should happen when the underlying model is updated (&lt;code&gt;rowsUpdated&lt;/code&gt; is invoked).</source>
          <target state="translated">trueの場合、基になるモデルが更新されたときにソートが発生することを指定します（ &lt;code&gt;rowsUpdated&lt;/code&gt; が呼び出されます）。</target>
        </trans-unit>
        <trans-unit id="d9fd6fcf0f4287798bf6cf679fd20c273c55e3d9" translate="yes" xml:space="preserve">
          <source>If true, specifies that a sort should happen when the underlying model is updated (&lt;code&gt;rowsUpdated&lt;/code&gt; is invoked). For example, if this is true and the user edits an entry the location of that item in the view may change. The default is false.</source>
          <target state="translated">trueの場合、基になるモデルが更新されたときにソートが発生することを指定します（ &lt;code&gt;rowsUpdated&lt;/code&gt; が呼び出されます）。たとえば、これが当てはまり、ユーザーがエントリを編集した場合、ビュー内のそのアイテムの場所が変わる可能性があります。デフォルトはfalseです。</target>
        </trans-unit>
        <trans-unit id="0667c5b38856c5f66fd4d855f3cc7a2b4807c724" translate="yes" xml:space="preserve">
          <source>If true, the knob (and the data value it represents) resolve to the closest tick mark next to where the user positioned the knob.</source>
          <target state="translated">true の場合、ノブ(およびそれが表すデータ値)は、ユーザがノブを配置した位置に最も近い目盛りマークに解決されます。</target>
        </trans-unit>
        <trans-unit id="c09c276d855943c51957c89d18df4eef427bf9bb" translate="yes" xml:space="preserve">
          <source>If true, the knob (and the data value it represents) resolve to the closest tick mark next to where the user positioned the knob. The default is false.</source>
          <target state="translated">true の場合、ノブ(およびそれが表すデータ値)は、ユーザがノブを配置した位置に最も近い目盛りマークに解決されます。デフォルトは false です。</target>
        </trans-unit>
        <trans-unit id="ac1483298083f3abb8afa0f1aa85d3e5075f14df" translate="yes" xml:space="preserve">
          <source>If true, the proxy is for an MXBean, and appropriate mappings are applied to method parameters and return values.</source>
          <target state="translated">trueの場合、プロキシはMXBeanのものであり、適切なマッピングがメソッドのパラメータと戻り値に適用されます。</target>
        </trans-unit>
        <trans-unit id="44e659fe6dd1c0340a1bbcac9e4f683a73c2bed0" translate="yes" xml:space="preserve">
          <source>If true, the returned value and set value will also contain the literal characters in mask.</source>
          <target state="translated">真の場合、返された値と設定値には、マスク内のリテラル文字も含まれます。</target>
        </trans-unit>
        <trans-unit id="903c9379c419acc26a59d820c01995013108ceb3" translate="yes" xml:space="preserve">
          <source>If true, the user is allowed to resize the column; the default is true.</source>
          <target state="translated">trueの場合、ユーザーはカラムのサイズを変更することができます。</target>
        </trans-unit>
        <trans-unit id="6724ec65dfd9f45b0ac95aff3a6b8b0d839d4b0e" translate="yes" xml:space="preserve">
          <source>If true, when a node is expanded, as many of the descendants are scrolled to be visible.</source>
          <target state="translated">true の場合、ノードが展開されると、子孫の多くがスクロールされて表示されるようになります。</target>
        </trans-unit>
        <trans-unit id="e2c0749ee1ac640ac1b23f01230f5013e6830a3f" translate="yes" xml:space="preserve">
          <source>If true, when editing is to be stopped by way of selection changing, data in tree changing or other means &lt;code&gt;stopCellEditing&lt;/code&gt; is invoked, and changes are saved.</source>
          <target state="translated">trueの場合、選択の変更によって編集を停止する場合、ツリーの変更などの手段で &lt;code&gt;stopCellEditing&lt;/code&gt; が呼び出され、変更が保存されます。</target>
        </trans-unit>
        <trans-unit id="3f1b38a0d951633878aeb3e05c664eb8beabd095" translate="yes" xml:space="preserve">
          <source>If true, when editing is to be stopped by way of selection changing, data in tree changing or other means &lt;code&gt;stopCellEditing&lt;/code&gt; is invoked, and changes are saved. If false, &lt;code&gt;cancelCellEditing&lt;/code&gt; is invoked, and changes are discarded. Default is false.</source>
          <target state="translated">trueの場合、選択の変更によって編集を停止する場合、ツリーの変更などの手段で &lt;code&gt;stopCellEditing&lt;/code&gt; が呼び出され、変更が保存されます。falseの場合、 &lt;code&gt;cancelCellEditing&lt;/code&gt; が呼び出され、変更は破棄されます。デフォルトはfalseです。</target>
        </trans-unit>
        <trans-unit id="7b514e3ca049e844626b929e4397fb69536176a9" translate="yes" xml:space="preserve">
          <source>If two MBeanInfo objects return the same values in one of their arrays but in a different order then they are not equal.</source>
          <target state="translated">2 つの MBeanInfo オブジェクトが、いずれかの配列で同じ値を返しているにもかかわらず、順序が異なる場合は、それらは等しくありません。</target>
        </trans-unit>
        <trans-unit id="3de416a161d2a7eece4b7d623902e09f45d1ac1a" translate="yes" xml:space="preserve">
          <source>If two Permission objects are equal according to the &lt;code&gt;equals&lt;/code&gt; method, then calling the &lt;code&gt;hashCode&lt;/code&gt; method on each of the two Permission objects must produce the same integer result.</source>
          <target state="translated">&lt;code&gt;equals&lt;/code&gt; メソッドに従って2つのPermissionオブジェクトが等しい場合、 &lt;code&gt;hashCode&lt;/code&gt; それぞれでhashCodeメソッドを、同じ整数の結果が生成される必要があります。</target>
        </trans-unit>
        <trans-unit id="e0a883ac4c9f090a20d5a7c637148cd5c404124c" translate="yes" xml:space="preserve">
          <source>If two instances of &lt;code&gt;Random&lt;/code&gt; are created with the same seed, and the same sequence of method calls is made for each, they will generate and return identical sequences of numbers. In order to guarantee this property, particular algorithms are specified for the class &lt;code&gt;Random&lt;/code&gt;. Java implementations must use all the algorithms shown here for the class &lt;code&gt;Random&lt;/code&gt;, for the sake of absolute portability of Java code. However, subclasses of class &lt;code&gt;Random&lt;/code&gt; are permitted to use other algorithms, so long as they adhere to the general contracts for all the methods.</source>
          <target state="translated">&lt;code&gt;Random&lt;/code&gt; の 2つのインスタンスが同じシードで作成され、それぞれに対して同じメソッド呼び出しのシーケンスが行われる場合、それらは同一の数のシーケンスを生成して返します。このプロパティを保証するために、特定のアルゴリズムが &lt;code&gt;Random&lt;/code&gt; クラスに指定されています。Java コードの絶対的な移植性のために、Java実装では、ここに示すクラス &lt;code&gt;Random&lt;/code&gt; のすべてのアルゴリズムを使用する必要があります。ただし、クラスのサブクラス &lt;code&gt;Random&lt;/code&gt; 、すべてのメソッドの一般規約に準拠している限り、他のアルゴリズムを使用できます。</target>
        </trans-unit>
        <trans-unit id="9a0cd66d26c3291f114f5bd917b5a1d8a4185523" translate="yes" xml:space="preserve">
          <source>If two methods produce the same item name (for example, &lt;code&gt;
      getOwner&lt;/code&gt; and &lt;code&gt;isOwner&lt;/code&gt;, or &lt;code&gt;getOwner&lt;/code&gt; and &lt;code&gt;
      getowner&lt;/code&gt;) then the type is not convertible.</source>
          <target state="translated">2つのメソッドが同じアイテム名を生成する場合（たとえば、 &lt;code&gt; getOwner&lt;/code&gt; と &lt;code&gt;isOwner&lt;/code&gt; 、または &lt;code&gt;getOwner&lt;/code&gt; と &lt;code&gt; getowner&lt;/code&gt; ）、タイプは変換できません。</target>
        </trans-unit>
        <trans-unit id="c0375c976322546dce1a4576dbb74510f34a3ade" translate="yes" xml:space="preserve">
          <source>If two methods produce the same item name (for example, &lt;code&gt;getOwner&lt;/code&gt; and &lt;code&gt;isOwner&lt;/code&gt;, or &lt;code&gt;getOwner&lt;/code&gt; and &lt;code&gt;getowner&lt;/code&gt;) then the type is not convertible.</source>
          <target state="translated">2つのメソッドが同じアイテム名を生成する場合（たとえば、 &lt;code&gt;getOwner&lt;/code&gt; と &lt;code&gt;isOwner&lt;/code&gt; 、または &lt;code&gt;getOwner&lt;/code&gt; と &lt;code&gt;getowner&lt;/code&gt; ）を生成する場合、型は変換できません。</target>
        </trans-unit>
        <trans-unit id="cea1bcc2545da2681608af0aef2a71633ab2ff67" translate="yes" xml:space="preserve">
          <source>If two objects are equal according to the &lt;code&gt;equals(Object)&lt;/code&gt; method, then calling the &lt;code&gt;hashCode&lt;/code&gt; method on each of the two objects must produce the same integer result.</source>
          <target state="translated">&lt;code&gt;equals(Object)&lt;/code&gt; メソッドに従って2つのオブジェクトが等しい場合、 &lt;code&gt;hashCode&lt;/code&gt; を呼び出すそれぞれでメソッドを、同じ整数の結果が生成される必要があります。</target>
        </trans-unit>
        <trans-unit id="8f61ba8d66f9ba7904edb30cfdda34da8f8257fa" translate="yes" xml:space="preserve">
          <source>If two or more flavors share the best MIME type in the array, then that MIME type will be checked to see if it supports the charset parameter.</source>
          <target state="translated">2 つ以上のフレーバが配列の中で最良の MIME タイプを共有している場合は、その MIME タイプが charset パラメータをサポートしているかどうかがチェックされます。</target>
        </trans-unit>
        <trans-unit id="f909b4f68c1a354c02807cfa17e9954f5a2992f4" translate="yes" xml:space="preserve">
          <source>If two or more flavors share the best charset, the flavors will then again be sorted by their representation classes in the following order: &lt;code&gt;java.io.InputStream&lt;/code&gt;, &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt;, &lt;code&gt;[B&lt;/code&gt;, &amp;lt;all others&amp;gt;.</source>
          <target state="translated">2つ以上のフレーバーが最適な文字セットを共有している場合、フレーバーは、 &lt;code&gt;java.io.InputStream&lt;/code&gt; 、 &lt;code&gt;java.nio.ByteBuffer&lt;/code&gt; 、 &lt;code&gt;[B&lt;/code&gt; 、&amp;lt;その他すべて&amp;gt;の順序で表現クラスによって再度ソートされます。</target>
        </trans-unit>
        <trans-unit id="9460be18726bf4cb7cfa0eb56dbf185fbe47ad00" translate="yes" xml:space="preserve">
          <source>If two or more flavors share the best representation class, and that representation is one of the four explicitly listed, then one of those flavors will be chosen non-deterministically. If, however, no flavor has one of the four specified representations, the flavors will then be sorted by their charsets. Unicode charsets, such as &quot;UTF-16&quot;, &quot;UTF-8&quot;, &quot;UTF-16BE&quot;, &quot;UTF-16LE&quot;, and their aliases, are considered best. After them, the platform default charset and its aliases are selected. &quot;US-ASCII&quot; and its aliases are worst. All other charsets are chosen in alphabetical order, but only charsets supported by this implementation of the Java platform will be considered.</source>
          <target state="translated">2 つ以上のフレーバーが最良の表現クラスを共有しており、その表現が明示的にリストアップされた 4 つの表現のうちの 1 つである場合、それらのフレーバーのうちの 1 つが非決定論的に選択されます。し か し 、 フ ラ ビ アが指定 し た 4 つの表現のいずれかを持たない場合は、 フ ラ ビ アはその文字集合に よ っ て並べ替え ら れます。UTF-16」、「UTF-8」、「UTF-16BE」、「UTF-16LE」、およびそれらのエイリアスのような Unicode 文字セットが最良と考えられます。これらの文字セットの後に、プラットフォームのデフォルト文字セットとそのエイリアスが選択されます。&quot;US-ASCII &quot;とそのエイリアスは最悪です。他のすべての文字セットはアルファベット順に選択されますが、Javaプラットフォームのこの実装でサポートされている文字セットのみが考慮されます。</target>
        </trans-unit>
        <trans-unit id="06c93a52f76af90db85c04e2a23ce0c15dda8100" translate="yes" xml:space="preserve">
          <source>If two or more flavors share the best representation class, or if no flavor has one of the three specified representations, then one of those flavors will be chosen non-deterministically.</source>
          <target state="translated">2つ以上のフレーバーが最良の表現クラスを共有している場合、または3つの指定された表現のうちの1つも持たないフレーバーがない場合、それらのフレーバーのうちの1つが非決定論的に選択されます。</target>
        </trans-unit>
        <trans-unit id="06301635cc60473f7fc2e976be322e3b2d4e8e9c" translate="yes" xml:space="preserve">
          <source>If typed, pressed or released is not specified, pressed is assumed. Here are some examples:</source>
          <target state="translated">typed,pressed,release が指定されていない場合は pressed とします。以下にいくつかの例を示します。</target>
        </trans-unit>
        <trans-unit id="c9f5bd1b4fb2c1a9738bcfa0e0f9e6da939c239a" translate="yes" xml:space="preserve">
          <source>If updateLayoutStateNeeded is non zero, call updateLayoutState() and reset updateLayoutStateNeeded.</source>
          <target state="translated">updateLayoutStateNeededが0でない場合は、updateLayoutState()を呼び出してupdateLayoutStateNeededをリセットします。</target>
        </trans-unit>
        <trans-unit id="95aed599f54cec36bc047078751a2df8ad9fa5c9" translate="yes" xml:space="preserve">
          <source>If updateLayoutStateNeeded is non zero, call updateLayoutState() and reset updateLayoutStateNeeded. This method should be called by methods before doing any computation based on the geometry of the list. For example it's the first call in paint() and getPreferredSize().</source>
          <target state="translated">updateLayoutStateNeeded がゼロでない場合は、updateLayoutState()を呼び出して updateLayoutStateNeeded をリセットします。このメソッドは、リストのジオメトリに基づいて計算を行う前にメソッドによって呼び出されるべきです。例えば、これは paint()や getPreferredSize()の最初の呼び出しです。</target>
        </trans-unit>
        <trans-unit id="944fd68c8db30eaf7c2065a550cd3f6569a2e061" translate="yes" xml:space="preserve">
          <source>If used in &lt;code&gt;getInstance&lt;/code&gt;, returns the minimum capability requested. If used in &lt;code&gt;getParameters&lt;/code&gt;, returns information on the effective prediction resistance flag and whether it supports reseeding.</source>
          <target state="translated">&lt;code&gt;getInstance&lt;/code&gt; で使用する場合、要求された最小機能を返します。 &lt;code&gt;getParameters&lt;/code&gt; で使用する場合、有効な予測抵抗フラグと、それが再シードをサポートするかどうかに関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="fb4e37bf374357e0387efdf847ef3d4852881471" translate="yes" xml:space="preserve">
          <source>If used in &lt;code&gt;getInstance&lt;/code&gt;, returns the minimum strength requested, or -1 if there is no specific request on the strength. If used in &lt;code&gt;getParameters&lt;/code&gt;, returns the effective strength. The effective strength must be greater than or equal to the minimum strength requested.</source>
          <target state="translated">&lt;code&gt;getInstance&lt;/code&gt; で使用される場合、要求された最小強度を返します。強度に特定の要求がない場合は-1を返します。 &lt;code&gt;getParameters&lt;/code&gt; で使用する場合、実効強度を返します。実効強度は、要求された最小強度以上である必要があります。</target>
        </trans-unit>
        <trans-unit id="47ef320174ead760eb088df369a951d8ab789ccf" translate="yes" xml:space="preserve">
          <source>If used in &lt;code&gt;getInstance&lt;/code&gt;, returns the requested personalization string as a newly allocated array, or &lt;code&gt;null&lt;/code&gt; if no personalization string is requested. The same string should be returned in &lt;code&gt;getParameters&lt;/code&gt; as a new copy, or &lt;code&gt;null&lt;/code&gt; if no personalization string is requested in &lt;code&gt;getInstance&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getInstance&lt;/code&gt; で使用する場合、要求されたパーソナライズ文字列を新しく割り当てられた配列として返します。パーソナライズ文字列が要求されていない場合は &lt;code&gt;null&lt;/code&gt; を返します。同じ文字列を新しいコピーとして &lt;code&gt;getParameters&lt;/code&gt; に返すか、 &lt;code&gt;getInstance&lt;/code&gt; でパーソナライズ文字列が要求されていない場合は &lt;code&gt;null&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="70c98c2264176024b5b44e24255d881ddec4b3f0" translate="yes" xml:space="preserve">
          <source>If user information is given then it is appended, followed by a commercial-at character (&lt;code&gt;'@'&lt;/code&gt;). Any character not in the</source>
          <target state="translated">ユーザー情報が指定されている場合は追加され、その後にコマーシャルアットマーク（ &lt;code&gt;'@'&lt;/code&gt; ）が続きます。にない任意の文字</target>
        </trans-unit>
        <trans-unit id="39dd44621dc4e48c6ce7a185460bfc4a326f4e14" translate="yes" xml:space="preserve">
          <source>If user information, a host, or a port are given then the string &lt;code&gt;&quot;//&quot;&lt;/code&gt; is appended.</source>
          <target state="translated">ユーザー情報、ホスト、またはポートが指定されている場合は、文字列 &lt;code&gt;&quot;//&quot;&lt;/code&gt; が追加されます。</target>
        </trans-unit>
        <trans-unit id="4926d30c1bef4c033272a1bcb735cc550193a37e" translate="yes" xml:space="preserve">
          <source>If validation occurred using a DTD while loading the document or while invoking &lt;code&gt;Document.normalizeDocument()&lt;/code&gt;, the infoset &lt;b&gt;[type definition]&lt;/b&gt; value is used to determine if this attribute is a DTD-determined ID attribute using the &lt;a href=&quot;http://www.w3.org/TR/2003/REC-xptr-framework-20030325/#term-ddi&quot;&gt; DTD-determined ID&lt;/a&gt; definition in [&lt;a href=&quot;http://www.w3.org/TR/2003/REC-xptr-framework-20030325/&quot;&gt;XPointer&lt;/a&gt;] .</source>
          <target state="translated">ドキュメントのロード中または &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; の呼び出し中にDTDを使用して検証が行われた場合、infoset &lt;b&gt;[&lt;/b&gt; typedefinition &lt;b&gt;]&lt;/b&gt;値を使用してこの属性が[ &lt;a href=&quot;http://www.w3.org/TR/2003/REC-xptr-framework-20030325/&quot;&gt;XPointerの&lt;/a&gt;&lt;a href=&quot;http://www.w3.org/TR/2003/REC-xptr-framework-20030325/#term-ddi&quot;&gt;DTD決定ID&lt;/a&gt;定義を使用してDTD決定ID属性であるかどうかを判別します]。</target>
        </trans-unit>
        <trans-unit id="407a294b170fd537f0784112be92112126c292ec" translate="yes" xml:space="preserve">
          <source>If validation occurred using an XML Schema [&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XML Schema Part 1&lt;/a&gt;] while loading the document or while invoking &lt;code&gt;Document.normalizeDocument()&lt;/code&gt;, the post-schema-validation infoset contributions (PSVI contributions) values are used to determine if this attribute is a schema-determined ID attribute using the &lt;a href=&quot;http://www.w3.org/TR/2003/REC-xptr-framework-20030325/#term-sdi&quot;&gt; schema-determined ID&lt;/a&gt; definition in [&lt;a href=&quot;http://www.w3.org/TR/2003/REC-xptr-framework-20030325/&quot;&gt;XPointer&lt;/a&gt;] .</source>
          <target state="translated">ドキュメントのロード中または &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; の呼び出し中にXMLスキーマ[ &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/&quot;&gt;XMLスキーマパート1&lt;/a&gt; ]を使用して検証が行われた場合、スキーマ検証後のインフォセットコントリビューション（PSVIコントリビューション）値を使用して、この属性がスキーマであるかどうかが判断されます。[ &lt;a href=&quot;http://www.w3.org/TR/2003/REC-xptr-framework-20030325/&quot;&gt;XPointer&lt;/a&gt; ]の&lt;a href=&quot;http://www.w3.org/TR/2003/REC-xptr-framework-20030325/#term-sdi&quot;&gt;スキーマで決定されたID&lt;/a&gt;定義を使用して決定されたID属性。</target>
        </trans-unit>
        <trans-unit id="c0a2c2ff96b927547df533f198a3de74f1ca590a" translate="yes" xml:space="preserve">
          <source>If validation occurred while invoking &lt;code&gt;Document.normalizeDocument()&lt;/code&gt;, all user-determined ID attributes are reset and all attribute nodes ID information are then reevaluated in accordance to the schema used. As a consequence, if the &lt;code&gt;Attr.schemaTypeInfo&lt;/code&gt; attribute contains an ID type, &lt;code&gt;isId&lt;/code&gt; will always return true.</source>
          <target state="translated">&lt;code&gt;Document.normalizeDocument()&lt;/code&gt; の呼び出し中に検証が行われた場合、ユーザーが決定したすべてのID属性がリセットされ、使用されたスキーマに従ってすべての属性ノードのID情報が再評価されます。結果として、 &lt;code&gt;Attr.schemaTypeInfo&lt;/code&gt; 属性にIDタイプが含まれている場合、 &lt;code&gt;isId&lt;/code&gt; は常にtrueを返します。</target>
        </trans-unit>
        <trans-unit id="453b86a3d961e3b09d58b9c00df382b3b2c69dca" translate="yes" xml:space="preserve">
          <source>If value is &lt;code&gt;null&lt;/code&gt; this method will remove the property. Changes to client properties are reported with &lt;code&gt;PropertyChange&lt;/code&gt; events. The name of the property (for the sake of PropertyChange events) is &lt;code&gt;key.toString()&lt;/code&gt;.</source>
          <target state="translated">値が &lt;code&gt;null&lt;/code&gt; の場合、このメソッドはプロパティを削除します。クライアントプロパティへの変更は、 &lt;code&gt;PropertyChange&lt;/code&gt; イベントで報告されます。プロパティの名前（PropertyChangeイベントのため）は &lt;code&gt;key.toString()&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="089586f6ef0f3f5a54a1a65889d478428c17c4ec" translate="yes" xml:space="preserve">
          <source>If w == 0, it will be taken to equal Math.round(h*(getWidth()/getHeight())). Similarly, if h == 0, it will be taken to equal Math.round(w*(getHeight()/getWidth())). One of w or h must be non-zero or else an IllegalArgumentException will be thrown.</source>
          <target state="translated">w ==0 の場合は、Math.round(h*(getWidth()/getHeight())と等しくなります。)同様に、h ==0 の場合は、Math.round(w*(getHeight()/getWidth()))と等しくなります。w または h のいずれかが 0 以外でなければならず、そうでなければ IllegalArgumentException がスローされます。</target>
        </trans-unit>
        <trans-unit id="3152539e07d896468f8f347e607a93b65706f639" translate="yes" xml:space="preserve">
          <source>If we denote &lt;code&gt;Spring&lt;/code&gt;s as &lt;code&gt;[a, b, c]&lt;/code&gt;, where &lt;code&gt;a &amp;lt;= b &amp;lt;= c&lt;/code&gt;, we can define the same arithmetic operators on &lt;code&gt;Spring&lt;/code&gt;s:</source>
          <target state="translated">我々が示した場合は &lt;code&gt;Spring&lt;/code&gt; としてSを &lt;code&gt;[a, b, c]&lt;/code&gt; 、ここで、 &lt;code&gt;a &amp;lt;= b &amp;lt;= c&lt;/code&gt; 、我々は上に同じ算術演算子を定義することができる &lt;code&gt;Spring&lt;/code&gt; ：■</target>
        </trans-unit>
        <trans-unit id="4992c99e0e1791dc3d662a55a95e751e859f3fe7" translate="yes" xml:space="preserve">
          <source>If we don't find explicit BeanInfo on a class, we use low-level reflection to study the methods of the class and apply standard design patterns to identify property accessors, event sources, or public methods. We then proceed to analyze the class's superclass and add in the information from it (and possibly on up the superclass chain).</source>
          <target state="translated">クラスの明示的なBeanInfoが見つからない場合、低レベルの反射を使用してクラスのメソッドを調査し、プロパティアクセサ、イベントソース、またはパブリックメソッドを特定するために標準的な設計パターンを適用します。その後、クラスのスーパークラスの解析を行い、そこからの情報を追加します(そして、スーパークラスチェーンの上位にも追加することがあります)。</target>
        </trans-unit>
        <trans-unit id="9e2af0b32378df8ce48674db7f26c1fefa192f17" translate="yes" xml:space="preserve">
          <source>If we wanted to create a collector to tabulate the sum of salaries by department, we could reuse the &quot;sum of salaries&quot; logic using &lt;a href=&quot;collectors#groupingBy(java.util.function.Function,java.util.stream.Collector)&quot;&gt;&lt;code&gt;Collectors.groupingBy(Function, Collector)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">部門ごとに給与の合計を集計するコレクターを作成する場合は、&lt;a href=&quot;collectors#groupingBy(java.util.function.Function,java.util.stream.Collector)&quot;&gt; &lt;code&gt;Collectors.groupingBy(Function, Collector)&lt;/code&gt; &lt;/a&gt;を使用して「給与の合計」ロジックを再利用できます。</target>
        </trans-unit>
        <trans-unit id="249f1ecd847d4ff837d620f68c34ba098b73ce31" translate="yes" xml:space="preserve">
          <source>If we wanted to create a collector to tabulate the sum of salaries by department, we could reuse the &quot;sum of salaries&quot; logic using &lt;a href=&quot;collectors#groupingBy-java.util.function.Function-java.util.stream.Collector-&quot;&gt;&lt;code&gt;Collectors.groupingBy(Function, Collector)&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">部門別に給与の合計を集計するコレクターを作成する場合は、「給与の合計」ロジックを再利用できます。 &lt;a href=&quot;collectors#groupingBy-java.util.function.Function-java.util.stream.Collector-&quot;&gt; &lt;code&gt;Collectors.groupingBy(Function, Collector)&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="26d7e844a9f8459934217a70e48f27af2b1b69c5" translate="yes" xml:space="preserve">
          <source>If we wanted to take a stream of strings and concatenate them into a single long string, we &lt;em&gt;could&lt;/em&gt; achieve this with ordinary reduction:</source>
          <target state="translated">私たちは、文字列のストリームを取得し、単一の長い文字列にそれらを連結したい場合は、我々は&lt;em&gt;可能性&lt;/em&gt;、通常の削減でこれを実現。</target>
        </trans-unit>
        <trans-unit id="6858e8bffde3c3d0cca8b6c6d185dca102ebc8f4" translate="yes" xml:space="preserve">
          <source>If week year &lt;code&gt;'Y'&lt;/code&gt; is specified and the &lt;a href=&quot;dateformat#getCalendar()&quot;&gt;calendar&lt;/a&gt; doesn't support any &lt;a href=&quot;../util/gregoriancalendar#week_year&quot;&gt; week years&lt;/a&gt;, the calendar year (&lt;code&gt;'y'&lt;/code&gt;) is used instead. The support of week years can be tested with a call to &lt;a href=&quot;dateformat#getCalendar()&quot;&gt;&lt;code&gt;getCalendar()&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;../util/calendar#isWeekDateSupported()&quot;&gt;&lt;code&gt;isWeekDateSupported()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">週年 &lt;code&gt;'Y'&lt;/code&gt; が指定されていて、&lt;a href=&quot;dateformat#getCalendar()&quot;&gt;カレンダー&lt;/a&gt;がどの&lt;a href=&quot;../util/gregoriancalendar#week_year&quot;&gt;週年&lt;/a&gt;もサポートしていない場合は、代わりに暦年（ &lt;code&gt;'y'&lt;/code&gt; ）が使用されます。週年のサポートは、&lt;a href=&quot;dateformat#getCalendar()&quot;&gt; &lt;code&gt;getCalendar()&lt;/code&gt; を&lt;/a&gt;呼び出すことでテストできます。&lt;a href=&quot;../util/calendar#isWeekDateSupported()&quot;&gt; &lt;code&gt;isWeekDateSupported()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="75d993d59371bab20ce135584545b17525307c4a" translate="yes" xml:space="preserve">
          <source>If week year &lt;code&gt;'Y'&lt;/code&gt; is specified and the &lt;a href=&quot;dateformat#getCalendar--&quot;&gt;calendar&lt;/a&gt; doesn't support any &lt;a href=&quot;../util/gregoriancalendar#week_year&quot;&gt; week years&lt;/a&gt;, the calendar year (&lt;code&gt;'y'&lt;/code&gt;) is used instead. The support of week years can be tested with a call to &lt;a href=&quot;dateformat#getCalendar--&quot;&gt;&lt;code&gt;getCalendar()&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;../util/calendar#isWeekDateSupported--&quot;&gt;&lt;code&gt;isWeekDateSupported()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">週の年 &lt;code&gt;'Y'&lt;/code&gt; が指定されており、&lt;a href=&quot;dateformat#getCalendar--&quot;&gt;カレンダー&lt;/a&gt;が&lt;a href=&quot;../util/gregoriancalendar#week_year&quot;&gt;週の年を&lt;/a&gt;サポートしていない場合、代わりに暦年（ &lt;code&gt;'y'&lt;/code&gt; ）が使用されます。週年のサポートは、&lt;a href=&quot;dateformat#getCalendar--&quot;&gt; &lt;code&gt;getCalendar()&lt;/code&gt; の&lt;/a&gt;呼び出しでテストできます。&lt;a href=&quot;../util/calendar#isWeekDateSupported--&quot;&gt; &lt;code&gt;isWeekDateSupported()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d9c5076b34c11ad263e543753904a22f31b4f17c" translate="yes" xml:space="preserve">
          <source>If wheel scrolling is enabled, we return true for MouseWheelEvents</source>
          <target state="translated">ホイールスクロールが有効な場合、MouseWheelEventsに対してtrueを返します。</target>
        </trans-unit>
        <trans-unit id="e787fae525d53f984b40c242326308dcc608cfbc" translate="yes" xml:space="preserve">
          <source>If writeObject is used to write an object that has been previously written with writeUnshared, the previous writeUnshared operation is treated as if it were a write of a separate object. In other words, ObjectOutputStream will never generate back-references to object data written by calls to writeUnshared.</source>
          <target state="translated">以前に writeUnshared で書き込まれたオブジェクトの書き込みに writeObject が使用された場合、以前の writeUnshared 操作は別のオブジェクトの書き込みであるかのように扱われます。つまり、ObjectOutputStreamは、writeUnsharedの呼び出しによって書き込まれたオブジェクトデータへの後方参照を生成することはありません。</target>
        </trans-unit>
        <trans-unit id="1298194026547206a4f33e5f08827958de4cdbfe" translate="yes" xml:space="preserve">
          <source>If you are displaying scientific numbers, you may wish to turn on overwrite mode, &lt;code&gt;setOverwriteMode(true)&lt;/code&gt;. For example:</source>
          <target state="translated">科学的数値を表示している場合は、上書きモード &lt;code&gt;setOverwriteMode(true)&lt;/code&gt; をオンにすることをお勧めします。例えば：</target>
        </trans-unit>
        <trans-unit id="33329ee24831b4b830806a0df21b74b91fbe2bdb" translate="yes" xml:space="preserve">
          <source>If you are formatting multiple dates, it is more efficient to get the format and use it multiple times so that the system doesn't have to fetch the information about the local language and country conventions multiple times.</source>
          <target state="translated">複数の日付をフォーマットしている場合は、システムが現地の言語や国の慣例などの情報を何度も取得する必要がないように、フォーマットを取得して複数回使用した方が効率的です。</target>
        </trans-unit>
        <trans-unit id="dd1b56a949a2d40e2ef6096bec1333c2fcd9c70c" translate="yes" xml:space="preserve">
          <source>If you are formatting multiple numbers, it is more efficient to get the format and use it multiple times so that the system doesn't have to fetch the information about the local language and country conventions multiple times.</source>
          <target state="translated">複数の数字をフォーマットしている場合は、システムが現地の言語や国の慣例の情報を何度も取得する必要がないように、フォーマットを取得して複数回使用した方が効率的です。</target>
        </trans-unit>
        <trans-unit id="7113f4e3c5927c4f914e11ec7edab32e28370f64" translate="yes" xml:space="preserve">
          <source>If you are going to allow the user to enter decimal values, you should either force the DecimalFormat to contain at least one decimal (&lt;code&gt;#.0###&lt;/code&gt;), or allow the value to be invalid &lt;code&gt;setAllowsInvalid(true)&lt;/code&gt;. Otherwise users may not be able to input decimal values.</source>
          <target state="translated">ユーザーが10進数値を入力できるようにする場合は、DecimalFormatに少なくとも1つの10進数（ &lt;code&gt;#.0###&lt;/code&gt; ）を含めるか、値を無効にすることを許可する必要があります &lt;code&gt;setAllowsInvalid(true)&lt;/code&gt; 。そうしないと、ユーザーが10進値を入力できない場合があります。</target>
        </trans-unit>
        <trans-unit id="63b7be51d58c4b8de0299d6dd7014915988c6f65" translate="yes" xml:space="preserve">
          <source>If you are implementing a &lt;code&gt;BoxLayout&lt;/code&gt; you can find further information and examples in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/box.html&quot;&gt;How to Use BoxLayout&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;BoxLayout&lt;/code&gt; を実装している場合は、&lt;em&gt;Javaチュートリアルの&lt;/em&gt;セクションである&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/box.html&quot;&gt;BoxLayoutの使用方法」に&lt;/a&gt;詳細情報と例があります&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="29a3400a63146f2516d9f23c1631f1d914a11abd" translate="yes" xml:space="preserve">
          <source>If you are implementing a &lt;code&gt;SpringLayout&lt;/code&gt; you can find further information and examples in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/spring.html&quot;&gt;How to Use SpringLayout&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SpringLayout&lt;/code&gt; を実装している場合は、&lt;em&gt;Javaチュートリアルの&lt;/em&gt;セクションである&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/spring.html&quot;&gt;SpringLayoutの使用方法に&lt;/a&gt;詳細情報と例があります&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a8b2f33fb2743d0cc710de7c78760dd6832905cb" translate="yes" xml:space="preserve">
          <source>If you are interested in detecting either double-click events or when a user clicks on a node, regardless of whether or not it was selected, we recommend you do the following:</source>
          <target state="translated">ダブルクリックイベントのいずれかを検出したい場合や、ノードが選択されているかどうかに関わらず、ユーザーがノードをクリックしたときに検出したい場合は、以下のようにすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="34c3bca4893fa1f8ae459c26e85ec0a4d931f6e4" translate="yes" xml:space="preserve">
          <source>If you are interested in knowing when the selection changes implement the &lt;code&gt;TreeSelectionListener&lt;/code&gt; interface and add the instance using the method &lt;code&gt;addTreeSelectionListener&lt;/code&gt;. &lt;code&gt;valueChanged&lt;/code&gt; will be invoked when the selection changes, that is if the user clicks twice on the same node &lt;code&gt;valueChanged&lt;/code&gt; will only be invoked once.</source>
          <target state="translated">選択の変更がいつ変更されるかを知りたい場合は、 &lt;code&gt;TreeSelectionListener&lt;/code&gt; インターフェースを実装し、メソッド &lt;code&gt;addTreeSelectionListener&lt;/code&gt; を使用してインスタンスを追加します。 &lt;code&gt;valueChanged&lt;/code&gt; は、選択が変更されたときに呼び出されます。つまり、ユーザーが同じノードを2回クリックした場合、 &lt;code&gt;valueChanged&lt;/code&gt; は1回だけ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="cbc79913bd626004719fe8514d3567201aed1ed4" translate="yes" xml:space="preserve">
          <source>If you are interested in the positions of all attributes in the formatted string use the &lt;code&gt;Format&lt;/code&gt; method &lt;code&gt;formatToCharacterIterator&lt;/code&gt;.</source>
          <target state="translated">フォーマットされた文字列内のすべての属性の位置に関心がある場合は、 &lt;code&gt;Format&lt;/code&gt; メソッド &lt;code&gt;formatToCharacterIterator&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="c4facb91de8b32639ccf8a84b652bd430e83444a" translate="yes" xml:space="preserve">
          <source>If you are using a monospaced font with spacing for alignment, you can pass the &lt;code&gt;FieldPosition&lt;/code&gt; in your format call, with &lt;code&gt;field&lt;/code&gt; = &lt;code&gt;INTEGER_FIELD&lt;/code&gt;. On output, &lt;code&gt;getEndIndex&lt;/code&gt; will be set to the offset between the last character of the integer and the decimal. Add (desiredSpaceCount - getEndIndex) spaces at the front of the string.</source>
          <target state="translated">配置にスペースのある等幅フォントを使用している場合は、 &lt;code&gt;field&lt;/code&gt; = &lt;code&gt;INTEGER_FIELD&lt;/code&gt; を使用して、フォーマット呼び出しで &lt;code&gt;FieldPosition&lt;/code&gt; を渡すことができます。出力では、 &lt;code&gt;getEndIndex&lt;/code&gt; は整数の最後の文字と小数の間のオフセットに設定されます。文字列の前に（desiredSpaceCount-getEndIndex）スペースを追加します。</target>
        </trans-unit>
        <trans-unit id="9406e93ec5832fb57d51414b10aab81a761c42ae" translate="yes" xml:space="preserve">
          <source>If you are using proportional fonts, instead of padding with spaces, measure the width of the string in pixels from the start to &lt;code&gt;getEndIndex&lt;/code&gt;. Then move the pen by (desiredPixelWidth - widthToAlignmentPoint) before drawing the text. It also works where there is no decimal, but possibly additional characters at the end, e.g., with parentheses in negative numbers: &quot;(12)&quot; for -12.</source>
          <target state="translated">プロポーショナルフォントを使用している場合は、スペースでパディングするのではなく、文字列の幅を最初から &lt;code&gt;getEndIndex&lt;/code&gt; までのピクセル単位で測定します。。次に、テキストを描画する前に、ペンを（desiredPixelWidth-widthToAlignmentPoint）移動します。小数部がない場合でも機能しますが、末尾に追加の文字が含まれている可能性があります。たとえば、負の数に括弧を使用します：-12の場合は「（12）」。</target>
        </trans-unit>
        <trans-unit id="79735a19a55942b2a6b8b95f3a8ec2359c3ff181" translate="yes" xml:space="preserve">
          <source>If you are using the declaration handler together with a lexical handler, all of the events will occur between the &lt;a href=&quot;lexicalhandler#startDTD(java.lang.String,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;startDTD&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;lexicalhandler#endDTD()&quot;&gt;&lt;code&gt;endDTD&lt;/code&gt;&lt;/a&gt; events.</source>
          <target state="translated">あなたは字句ハンドラと一緒に宣言ハンドラを使用している場合は、すべてのイベントは、間で発生します&lt;a href=&quot;lexicalhandler#startDTD(java.lang.String,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;startDTD&lt;/code&gt; から&lt;/a&gt;と&lt;a href=&quot;lexicalhandler#endDTD()&quot;&gt; &lt;code&gt;endDTD&lt;/code&gt; までの&lt;/a&gt;イベント。</target>
        </trans-unit>
        <trans-unit id="0f106737aef6a81a4054543d7f78f0e7b7a5e9c4" translate="yes" xml:space="preserve">
          <source>If you decide to create a date-time formatter with a specific format pattern for a specific locale, you can do so with:</source>
          <target state="translated">特定のロケール用に特定の書式パターンを持つ日付-時刻フォーマッタを作成したい場合は、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="6b53011de1b25c0a46d0d3ab82b02d6081131a48" translate="yes" xml:space="preserve">
          <source>If you do not want the text of the button to mirror that of the &lt;code&gt;Action&lt;/code&gt;, set the property &lt;code&gt;hideActionText&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;hideActionText&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, setting the &lt;code&gt;Action&lt;/code&gt; changes the text of the button to &lt;code&gt;null&lt;/code&gt; and any changes to &lt;code&gt;NAME&lt;/code&gt; are ignored. &lt;code&gt;hideActionText&lt;/code&gt; is useful for tool bar buttons that typically only show an &lt;code&gt;Icon&lt;/code&gt;. &lt;code&gt;JToolBar.add(Action)&lt;/code&gt; sets the property to &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;Action&lt;/code&gt; has a non-&lt;code&gt;null&lt;/code&gt; value for &lt;code&gt;LARGE_ICON_KEY&lt;/code&gt; or &lt;code&gt;SMALL_ICON&lt;/code&gt;.</source>
          <target state="translated">ボタンのテキストを &lt;code&gt;Action&lt;/code&gt; のテキストに反映させたくない場合は、プロパティ &lt;code&gt;hideActionText&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定します。 &lt;code&gt;hideActionText&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合、 &lt;code&gt;Action&lt;/code&gt; 設定するとボタンのテキストが &lt;code&gt;null&lt;/code&gt; に変更され、 &lt;code&gt;NAME&lt;/code&gt; への変更はすべて無視されます。 &lt;code&gt;hideActionText&lt;/code&gt; は、通常は &lt;code&gt;Icon&lt;/code&gt; のみを表示するツールバーボタンに役立ちます。 &lt;code&gt;JToolBar.add(Action)&lt;/code&gt; にプロパティを設定し &lt;code&gt;true&lt;/code&gt; 場合 &lt;code&gt;Action&lt;/code&gt; 非がある &lt;code&gt;null&lt;/code&gt; の値 &lt;code&gt;LARGE_ICON_KEY&lt;/code&gt; または &lt;code&gt;SMALL_ICON&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="559f017d53b18de77b3ca6b79e24fb041f8dcdee" translate="yes" xml:space="preserve">
          <source>If you draw a figure that covers a given rectangle, that figure occupies one extra row of pixels on the right and bottom edges as compared to filling a figure that is bounded by that same rectangle.</source>
          <target state="translated">与えられた矩形を覆うように図形を描くと、同じ矩形で囲まれた図形を塗りつぶすのに比べて、その図形は右端と下端に余分なピクセルの列を占有することになります。</target>
        </trans-unit>
        <trans-unit id="265e773e00c7bbde5b66e750f7b5582c9dfd4ec6" translate="yes" xml:space="preserve">
          <source>If you draw a horizontal line along the same</source>
          <target state="translated">に沿って水平線を引くと、同じ</target>
        </trans-unit>
        <trans-unit id="a64ac8c1421bcee0c93f8d4f878d8ecbf3d1a551" translate="yes" xml:space="preserve">
          <source>If you have an MBean Server &lt;code&gt;mbs&lt;/code&gt; containing an MBean with &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt;&lt;code&gt;name&lt;/code&gt;, and if the MBean's management interface is described by the Java interface &lt;code&gt;MyMBean&lt;/code&gt;, you can construct a proxy for the MBean like this:</source>
          <target state="translated">&lt;a href=&quot;objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt; &lt;code&gt;name&lt;/code&gt; の MBeanを含むMBeanサーバー &lt;code&gt;mbs&lt;/code&gt; があり、MBeanの管理インターフェースがJavaインターフェース &lt;code&gt;MyMBean&lt;/code&gt; によって記述されている場合、次のようにMBeanのプロキシを構築できます。</target>
        </trans-unit>
        <trans-unit id="88dcf89fa7f0531902cdd760892b5fd0c5d30465" translate="yes" xml:space="preserve">
          <source>If you have an MBean Server &lt;code&gt;mbs&lt;/code&gt; containing an MXBean with &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt;&lt;code&gt;name&lt;/code&gt;, and if the MXBean's management interface is described by the Java interface &lt;code&gt;MyMXBean&lt;/code&gt;, you can construct a proxy for the MXBean like this:</source>
          <target state="translated">&lt;a href=&quot;objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt; &lt;code&gt;name&lt;/code&gt; の MXBeanを含むMBeanサーバー &lt;code&gt;mbs&lt;/code&gt; があり、MXBeanの管理インターフェースがJavaインターフェース &lt;code&gt;MyMXBean&lt;/code&gt; によって記述されている場合プロキシを構築できます。</target>
        </trans-unit>
        <trans-unit id="aeeadc6bd76712b1cf5b57f384a18bfbf8ff9346" translate="yes" xml:space="preserve">
          <source>If you have an MBeanPermission, it allows operations only if all four of the items match.</source>
          <target state="translated">MBeanPermissionを持っている場合は、4つの項目がすべて一致した場合にのみ操作を許可します。</target>
        </trans-unit>
        <trans-unit id="dcf357f105ce4230844a06dba35ba909423f4aa5" translate="yes" xml:space="preserve">
          <source>If you have an RMI stub of type &lt;a href=&quot;rmiserver&quot;&gt;&lt;code&gt;RMIServer&lt;/code&gt;&lt;/a&gt;, you can construct an RMI connection directly by using the appropriate constructor of &lt;a href=&quot;rmiconnector&quot;&gt;&lt;code&gt;RMIConnector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">あなたがタイプのRMIスタブがある場合は&lt;a href=&quot;rmiserver&quot;&gt; &lt;code&gt;RMIServer&lt;/code&gt; を&lt;/a&gt;、あなたはの適切なコンストラクタ使って直接RMI接続を構築でき&lt;a href=&quot;rmiconnector&quot;&gt; &lt;code&gt;RMIConnector&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="51966aa87be2c5a38906ad52d8d6b38d55316bbf" translate="yes" xml:space="preserve">
          <source>If you have not explicitly set an &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; by way of this method (or a constructor) an &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; and consequently an &lt;code&gt;AbstractFormatter&lt;/code&gt; will be used based on the &lt;code&gt;Class&lt;/code&gt; of the value. &lt;code&gt;NumberFormatter&lt;/code&gt; will be used for &lt;code&gt;Number&lt;/code&gt;s, &lt;code&gt;DateFormatter&lt;/code&gt; will be used for &lt;code&gt;Dates&lt;/code&gt;, otherwise &lt;code&gt;DefaultFormatter&lt;/code&gt; will be used.</source>
          <target state="translated">あなたが明示的に設定していない場合 &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; をこのメソッドの方法（またはコンストラクタ）で &lt;code&gt;AbstractFormatterFactory&lt;/code&gt; 、その結果 &lt;code&gt;AbstractFormatter&lt;/code&gt; に基づいて使用される &lt;code&gt;Class&lt;/code&gt; 値の。 &lt;code&gt;NumberFormatter&lt;/code&gt; は &lt;code&gt;Number&lt;/code&gt; に使用され、 &lt;code&gt;DateFormatter&lt;/code&gt; は &lt;code&gt;Dates&lt;/code&gt; に使用されます。それ以外の場合は、 &lt;code&gt;DefaultFormatter&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="628fef5a2d7e67a922c2fee7660623e63863dc01" translate="yes" xml:space="preserve">
          <source>If you have problems loading &lt;a href=&quot;documentbuilder&quot;&gt;&lt;code&gt;DocumentBuilder&lt;/code&gt;&lt;/a&gt;s, try:</source>
          <target state="translated">&lt;a href=&quot;documentbuilder&quot;&gt; &lt;code&gt;DocumentBuilder&lt;/code&gt; &lt;/a&gt;の読み込みに問題がある場合は、次を試してください。</target>
        </trans-unit>
        <trans-unit id="13fe1ef1b0b48e8f63e70f3f0881b5ccacf15742" translate="yes" xml:space="preserve">
          <source>If you have problems loading &lt;a href=&quot;saxparser&quot;&gt;&lt;code&gt;SAXParser&lt;/code&gt;&lt;/a&gt;s, try:</source>
          <target state="translated">&lt;a href=&quot;saxparser&quot;&gt; &lt;code&gt;SAXParser&lt;/code&gt; &lt;/a&gt;の読み込みに問題がある場合は、次を試してください。</target>
        </trans-unit>
        <trans-unit id="48c0af5f2625d397edaac10a8eccd95a46e51894" translate="yes" xml:space="preserve">
          <source>If you have problems try:</source>
          <target state="translated">問題がある場合は試してみてください。</target>
        </trans-unit>
        <trans-unit id="ff3de5910b165b3d1cc56a7e515269c368915b84" translate="yes" xml:space="preserve">
          <source>If you have problems, try:</source>
          <target state="translated">問題があれば、試してみてください。</target>
        </trans-unit>
        <trans-unit id="2b73d488c63631c8e1ac17c17d549411373a505e" translate="yes" xml:space="preserve">
          <source>If you have used the nullary constructor the value of this property will be determined for the current locale by way of the &lt;code&gt;Dateformat.getDateInstance()&lt;/code&gt; method.</source>
          <target state="translated">nullaryコンストラクターを使用した場合、このプロパティの値は、 &lt;code&gt;Dateformat.getDateInstance()&lt;/code&gt; メソッドを使用して現在のロケールに対して決定されます。</target>
        </trans-unit>
        <trans-unit id="0e0c64ec95cefdb9065bca01d64ac116e1988e2c" translate="yes" xml:space="preserve">
          <source>If you have used the nullary constructor the value of this property will be determined for the current locale by way of the &lt;code&gt;NumberFormat.getNumberInstance()&lt;/code&gt; method.</source>
          <target state="translated">nullaryコンストラクターを使用した場合、このプロパティの値は、 &lt;code&gt;NumberFormat.getNumberInstance()&lt;/code&gt; メソッドを使用して現在のロケールに対して決定されます。</target>
        </trans-unit>
        <trans-unit id="3f7d5e542503c18e6a8dbde4d4161605db9d31dd" translate="yes" xml:space="preserve">
          <source>If you implement your own animation thread, you must override this method.</source>
          <target state="translated">独自のアニメーションスレッドを実装する場合は、このメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="96de002b6b1a0357b9cf9b61f8d859126ba1287c" translate="yes" xml:space="preserve">
          <source>If you make an MXBean proxy for a &lt;code&gt;ModuleMXBean&lt;/code&gt; and call its &lt;code&gt;getProduct()&lt;/code&gt; method, the proxy will map the &lt;code&gt;ObjectName&lt;/code&gt; back into a &lt;code&gt;ProductMXBean&lt;/code&gt; by making another MXBean proxy. More formally, when a proxy made with &lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy(mbeanServerConnection, objectNameX,
      interfaceX)&lt;/code&gt;&lt;/a&gt; needs to map &lt;code&gt;objectNameY&lt;/code&gt; back into &lt;code&gt;
      interfaceY&lt;/code&gt;, another MXBean interface, it does so with &lt;code&gt;
      JMX.newMXBeanProxy(mbeanServerConnection, objectNameY,
      interfaceY)&lt;/code&gt;. The implementation may return a proxy that was previously created by a call to &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; with the same parameters, or it may create a new proxy.</source>
          <target state="translated">&lt;code&gt;ModuleMXBean&lt;/code&gt; のMXBeanプロキシを作成し、その &lt;code&gt;getProduct()&lt;/code&gt; メソッドを呼び出すと、プロキシは別のMXBeanプロキシを作成することにより、 &lt;code&gt;ObjectName&lt;/code&gt; を &lt;code&gt;ProductMXBean&lt;/code&gt; にマップし直します。より正式に、と作られたプロキシ際&lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy(mbeanServerConnection, objectNameX, interfaceX)&lt;/code&gt; &lt;/a&gt;マッピングするために必要 &lt;code&gt;objectNameY&lt;/code&gt; に戻っ &lt;code&gt; interfaceY&lt;/code&gt; 、別のMXBeanインタフェースを、それがでそう &lt;code&gt; JMX.newMXBeanProxy(mbeanServerConnection, objectNameY, interfaceY)&lt;/code&gt; 。実装は、 &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; の呼び出しによって以前に作成されたプロキシを返す場合があります 同じパラメータを使用するか、新しいプロキシを作成する可能性があります。</target>
        </trans-unit>
        <trans-unit id="42e51cf36b22f71cae737ff0a604aab0e89fa946" translate="yes" xml:space="preserve">
          <source>If you make an MXBean proxy for a &lt;code&gt;ModuleMXBean&lt;/code&gt; and call its &lt;code&gt;getProduct()&lt;/code&gt; method, the proxy will map the &lt;code&gt;ObjectName&lt;/code&gt; back into a &lt;code&gt;ProductMXBean&lt;/code&gt; by making another MXBean proxy. More formally, when a proxy made with &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy(mbeanServerConnection, objectNameX,
      interfaceX)&lt;/code&gt;&lt;/a&gt; needs to map &lt;code&gt;objectNameY&lt;/code&gt; back into &lt;code&gt;interfaceY&lt;/code&gt;, another MXBean interface, it does so with &lt;code&gt;JMX.newMXBeanProxy(mbeanServerConnection, objectNameY,
      interfaceY)&lt;/code&gt;. The implementation may return a proxy that was previously created by a call to &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; with the same parameters, or it may create a new proxy.</source>
          <target state="translated">あなたがMXBeanのプロキシを作成する場合 &lt;code&gt;ModuleMXBean&lt;/code&gt; とその呼び出し &lt;code&gt;getProduct()&lt;/code&gt; メソッドを、プロキシは、マップする &lt;code&gt;ObjectName&lt;/code&gt; に戻し &lt;code&gt;ProductMXBean&lt;/code&gt; 別のMXBeanプロキシを作成することによってを。より正式には、&lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy(mbeanServerConnection, objectNameX, interfaceX)&lt;/code&gt; &lt;/a&gt;作成されたプロキシが &lt;code&gt;objectNameY&lt;/code&gt; を別のMXBeanインターフェースである &lt;code&gt;interfaceY&lt;/code&gt; にマップし直す必要がある場合、JMX.newMXBeanProxy（mbeanServerConnection、objectNameY、interfaceY）でそれを &lt;code&gt;JMX.newMXBeanProxy(mbeanServerConnection, objectNameY, interfaceY)&lt;/code&gt; 。実装は、以前に同じパラメータを &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; してJMX.newMXBeanProxyを呼び出して作成されたプロキシを返す場合と、新しいプロキシを作成する場合があります。</target>
        </trans-unit>
        <trans-unit id="52ac32f1cd2512eeac38e2d301626d8b2e49025c" translate="yes" xml:space="preserve">
          <source>If you make an MXBean proxy for a &lt;code&gt;ModuleMXBean&lt;/code&gt; and call its &lt;code&gt;setProduct&lt;/code&gt; method, the proxy will map its &lt;code&gt;ProductMXBean&lt;/code&gt; argument back into an &lt;code&gt;ObjectName&lt;/code&gt;. This will only work if the argument is in fact another proxy, for a &lt;code&gt;ProductMXBean&lt;/code&gt; in the same &lt;code&gt;
      MBeanServerConnection&lt;/code&gt;. The proxy can have been returned from another proxy (like &lt;code&gt;ModuleMXBean.getProduct()&lt;/code&gt; which returns a proxy for a &lt;code&gt;ProductMXBean&lt;/code&gt;); or it can have been created by &lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt;&lt;/a&gt;; or it can have been created using &lt;a href=&quot;../../../java.base/java/lang/reflect/proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; with an invocation handler that is &lt;a href=&quot;mbeanserverinvocationhandler&quot;&gt;&lt;code&gt;MBeanServerInvocationHandler&lt;/code&gt;&lt;/a&gt; or a subclass.</source>
          <target state="translated">&lt;code&gt;ModuleMXBean&lt;/code&gt; のMXBeanプロキシを作成し、その &lt;code&gt;setProduct&lt;/code&gt; メソッドを呼び出すと、プロキシはその &lt;code&gt;ProductMXBean&lt;/code&gt; 引数を &lt;code&gt;ObjectName&lt;/code&gt; にマップし直します。これは、同じ &lt;code&gt; MBeanServerConnection&lt;/code&gt; 内の &lt;code&gt;ProductMXBean&lt;/code&gt; に対して、引数が実際には別のプロキシである場合にのみ機能します。プロキシは（のような他のプロキシから返されたができる &lt;code&gt;ModuleMXBean.getProduct()&lt;/code&gt; のプロキシを返し &lt;code&gt;ProductMXBean&lt;/code&gt; ）。または、&lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; &lt;/a&gt;によって作成されている可能性があります。または、&lt;a href=&quot;mbeanserverinvocationhandler&quot;&gt; &lt;code&gt;MBeanServerInvocationHandler&lt;/code&gt; &lt;/a&gt;である呼び出しハンドラーで&lt;a href=&quot;../../../java.base/java/lang/reflect/proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt;を使用して作成されている可能性があります またはサブクラス。</target>
        </trans-unit>
        <trans-unit id="36de616fe3a9de0652b022e0f4521a1bc90414b1" translate="yes" xml:space="preserve">
          <source>If you make an MXBean proxy for a &lt;code&gt;ModuleMXBean&lt;/code&gt; and call its &lt;code&gt;setProduct&lt;/code&gt; method, the proxy will map its &lt;code&gt;ProductMXBean&lt;/code&gt; argument back into an &lt;code&gt;ObjectName&lt;/code&gt;. This will only work if the argument is in fact another proxy, for a &lt;code&gt;ProductMXBean&lt;/code&gt; in the same &lt;code&gt;MBeanServerConnection&lt;/code&gt;. The proxy can have been returned from another proxy (like &lt;code&gt;ModuleMXBean.getProduct()&lt;/code&gt; which returns a proxy for a &lt;code&gt;ProductMXBean&lt;/code&gt;); or it can have been created by &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt;&lt;/a&gt;; or it can have been created using &lt;a href=&quot;../../java/lang/reflect/proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; with an invocation handler that is &lt;a href=&quot;mbeanserverinvocationhandler&quot;&gt;&lt;code&gt;MBeanServerInvocationHandler&lt;/code&gt;&lt;/a&gt; or a subclass.</source>
          <target state="translated">&lt;code&gt;ModuleMXBean&lt;/code&gt; の MXBeanプロキシを作成し、その &lt;code&gt;setProduct&lt;/code&gt; メソッドを呼び出すと、プロキシは &lt;code&gt;ProductMXBean&lt;/code&gt; 引数を &lt;code&gt;ObjectName&lt;/code&gt; にマッピングします。これは、同じ &lt;code&gt;MBeanServerConnection&lt;/code&gt; 内の &lt;code&gt;ProductMXBean&lt;/code&gt; に対して、引数が実際には別のプロキシである場合にのみ機能します。プロキシは（のような他のプロキシから返されたができる &lt;code&gt;ModuleMXBean.getProduct()&lt;/code&gt; のプロキシを返し &lt;code&gt;ProductMXBean&lt;/code&gt; ）。または、&lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; &lt;/a&gt;によって作成されている場合もあります。または、&lt;a href=&quot;mbeanserverinvocationhandler&quot;&gt; &lt;code&gt;MBeanServerInvocationHandler&lt;/code&gt; &lt;/a&gt;である呼び出しハンドラで&lt;a href=&quot;../../java/lang/reflect/proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt;を使用して作成されている可能性があります またはサブクラス。</target>
        </trans-unit>
        <trans-unit id="3e2b53ae02293acead2a531e5c995698a3d635fc" translate="yes" xml:space="preserve">
          <source>If you need (or choose) to provide a persistence delegate for a bean, you can do so either by using a &lt;a href=&quot;defaultpersistencedelegate&quot;&gt;&lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt;&lt;/a&gt; instance or by creating your own subclass of &lt;code&gt;PersistenceDelegate&lt;/code&gt;. If the only reason a bean needs a persistence delegate is because you want to invoke the bean's constructor with property values as arguments, you can create the bean's persistence delegate with the one-argument &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; constructor. Otherwise, you need to implement your own persistence delegate, for which you're likely to need the following classes:</source>
          <target state="translated">Beanに永続デリゲートを提供する必要がある（または選択する）場合は、&lt;a href=&quot;defaultpersistencedelegate&quot;&gt; &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; &lt;/a&gt;インスタンスを使用するか、または &lt;code&gt;PersistenceDelegate&lt;/code&gt; の独自のサブクラスを作成することにより、これを行うことができます。Beanが永続デリゲートを必要とする唯一の理由が、引数としてプロパティ値を使用してBeanのコンストラクターを呼び出すためである場合、1つの引数の &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; コンストラクターを使用してBeanの永続デリゲートを作成できます。それ以外の場合は、独自の永続化デリゲートを実装する必要があります。そのため、次のクラスが必要になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="6f489d4a0e8c62f4faa7fab289ad65258b11c6f2" translate="yes" xml:space="preserve">
          <source>If you need to return a value, you can do something like the following:</source>
          <target state="translated">値を返す必要がある場合は、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="5c560280eeb4fbe15243f3c4de692a415c582e8d" translate="yes" xml:space="preserve">
          <source>If you override this in a subclass you should not make permanent changes to the passed in &lt;code&gt;Graphics&lt;/code&gt;. For example, you should not alter the clip &lt;code&gt;Rectangle&lt;/code&gt; or modify the transform. If you need to do these operations you may find it easier to create a new &lt;code&gt;Graphics&lt;/code&gt; from the passed in &lt;code&gt;Graphics&lt;/code&gt; and manipulate it.</source>
          <target state="translated">サブクラスでこれをオーバーライドする場合は、渡された &lt;code&gt;Graphics&lt;/code&gt; 永続的な変更を加えないでください。たとえば、クリップの &lt;code&gt;Rectangle&lt;/code&gt; 変更したり、変換を変更したりしないでください。これらの操作を行う必要がある場合は、渡された &lt;code&gt;Graphics&lt;/code&gt; &lt;code&gt;Graphics&lt;/code&gt; から新しいグラフィックスを作成して操作する方が簡単な場合があります。</target>
        </trans-unit>
        <trans-unit id="8f64acd43858b62f5e89d842a5d4eced298f7447" translate="yes" xml:space="preserve">
          <source>If you override this in a subclass you should not make permanent changes to the passed in &lt;code&gt;Graphics&lt;/code&gt;. For example, you should not alter the clip &lt;code&gt;Rectangle&lt;/code&gt; or modify the transform. If you need to do these operations you may find it easier to create a new &lt;code&gt;Graphics&lt;/code&gt; from the passed in &lt;code&gt;Graphics&lt;/code&gt; and manipulate it. Further, if you do not invoke super's implementation you must honor the opaque property, that is if this component is opaque, you must completely fill in the background in an opaque color. If you do not honor the opaque property you will likely see visual artifacts.</source>
          <target state="translated">サブクラスでこれをオーバーライドする場合は、渡された &lt;code&gt;Graphics&lt;/code&gt; 永続的な変更を加えないでください。たとえば、クリップの &lt;code&gt;Rectangle&lt;/code&gt; 変更したり、変換を変更したりしないでください。これらの操作を行う必要がある場合は、渡された &lt;code&gt;Graphics&lt;/code&gt; &lt;code&gt;Graphics&lt;/code&gt; から新しいグラフィックスを作成して操作する方が簡単な場合があります。さらに、superの実装を呼び出さない場合は、opaqueプロパティを尊重する必要があります。つまり、このコンポーネントが不透明な場合は、背景を不透明な色で完全に塗りつぶす必要があります。不透明なプロパティを尊重しないと、視覚的なアーティファクトが表示される可能性があります。</target>
        </trans-unit>
        <trans-unit id="d8c2b1b32a99074d0ed797e0b2d27a5393d1b97c" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkAccept&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする時点で、 &lt;code&gt;super.checkAccept&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="32a163e4193ac982fc24cb8d0e24b6ff2e92df6b" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkAwtEventQueueAccess&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする &lt;code&gt;super.checkAwtEventQueueAccess&lt;/code&gt; でsuper.checkAwtEventQueueAccessを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="2b0bf23ffdb875cb462ac3762bf0b0f61436b578" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkConnect&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする &lt;code&gt;super.checkConnect&lt;/code&gt; でsuper.checkConnectを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="9b25c342fd63139aa40f0f94857b7bcc782f9565" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkCreateClassLoader&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする時点で、 &lt;code&gt;super.checkCreateClassLoader&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="c89616b32751c00600ebd3ccc8535ec049f9fdfa" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkDelete&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする &lt;code&gt;super.checkDelete&lt;/code&gt; でsuper.checkDeleteを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="d275b056a9090e158c634d81a08838570939532f" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkExec&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする &lt;code&gt;super.checkExec&lt;/code&gt; でsuper.checkExecを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="8fad4004790324c59ba0ed5dd06d44da82aaedda" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkExit&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする &lt;code&gt;super.checkExit&lt;/code&gt; でsuper.checkExitを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="efcc6f30743e16455930171e5a781be9f204238f" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkLink&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする &lt;code&gt;super.checkLink&lt;/code&gt; でsuper.checkLinkを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="7e6877a896c1d32e57ba90da2c55b2663b1b78ec" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkListen&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする &lt;code&gt;super.checkListen&lt;/code&gt; でsuper.checkListenを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="a4d26672886acca0d759af04d237b7c1efbe698e" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkMulticast&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする &lt;code&gt;super.checkMulticast&lt;/code&gt; でsuper.checkMulticastを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="251fab6eb9acffef8859edc74b706798e78e6e8b" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkPrintJobAccess&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする時点で、 &lt;code&gt;super.checkPrintJobAccess&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="e10ad25cab0f05b0222d29bd5e36927db4eeb6b2" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkPropertiesAccess&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする時点で、 &lt;code&gt;super.checkPropertiesAccess&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="a86588c85e4d6399731a04d49863896ed2dc3e28" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkPropertyAccess&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする &lt;code&gt;super.checkPropertyAccess&lt;/code&gt; でsuper.checkPropertyAccessを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="fa5bed7cbc4197994e6709d36a446566db9ba266" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkRead&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする &lt;code&gt;super.checkRead&lt;/code&gt; でsuper.checkReadを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="8d57848509497be814c85001e6b95b9646bffc2a" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkSecurityAccess&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする &lt;code&gt;super.checkSecurityAccess&lt;/code&gt; でsuper.checkSecurityAccessを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="eebab1fb31a31734e30e41e1327c09607085023c" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkSetFactory&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする時点で、 &lt;code&gt;super.checkSetFactory&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="d2401855174b74221644d242d6cb2acd443f9052" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkSystemClipboardAccess&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする時点で、 &lt;code&gt;super.checkSystemClipboardAccess&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="d59d3d943d86eedf5cde305b53f409a81429ea16" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkTopLevelWindow&lt;/code&gt; at the point the overridden method would normally return &lt;code&gt;false&lt;/code&gt;, and the value of &lt;code&gt;super.checkTopLevelWindow&lt;/code&gt; should be returned.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常 &lt;code&gt;false&lt;/code&gt; を返し、 &lt;code&gt;super.checkTopLevelWindow&lt;/code&gt; の値が返される時点で、 &lt;code&gt;super.checkTopLevelWindow&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="8cecc78a2cd42444c250869d1b1fffc199c4eb79" translate="yes" xml:space="preserve">
          <source>If you override this method, then you should make a call to &lt;code&gt;super.checkWrite&lt;/code&gt; at the point the overridden method would normally throw an exception.</source>
          <target state="translated">このメソッドをオーバーライドする場合は、オーバーライドされたメソッドが通常は例外をスローする &lt;code&gt;super.checkWrite&lt;/code&gt; でsuper.checkWriteを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="f815873740d2c0dd0b99f8dcd4261d6dddac268a" translate="yes" xml:space="preserve">
          <source>If you position a component along the baseline, but the component does not have a valid baseline, it will be vertically centered in its space. Similarly if you have positioned a component relative to the baseline and none of the components in the row have a valid baseline the component is vertically centered.</source>
          <target state="translated">ベースラインに沿ってコンポーネントを配置したが、有効なベースラインがない場合、そのコンポーネントは垂直方向の中央に配置されます。同様に、ベースラインに沿ってコンポーネントを配置したが、有効なベースラインを持たない行のコンポーネントは、そのコンポーネントが垂直方向に中央に配置されます。</target>
        </trans-unit>
        <trans-unit id="8b77207df3b1139f3ea68a88d7c6de19a281d70e" translate="yes" xml:space="preserve">
          <source>If you produce one of these errors, a &lt;code&gt;RuleBasedCollator&lt;/code&gt; throws a &lt;code&gt;ParseException&lt;/code&gt;.</source>
          <target state="translated">これらのエラーの1つを生成した場合、 &lt;code&gt;RuleBasedCollator&lt;/code&gt; はParseExceptionをスローし &lt;code&gt;ParseException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6f41edec5bd75c329a95672b206803463bfa5e8" translate="yes" xml:space="preserve">
          <source>If you read from a socket input stream after invoking this method on the socket, the stream's &lt;code&gt;available&lt;/code&gt; method will return 0, and its &lt;code&gt;read&lt;/code&gt; methods will return &lt;code&gt;-1&lt;/code&gt; (end of stream).</source>
          <target state="translated">ソケットでこのメソッドを呼び出した後にソケット入力ストリームから読み取る場合、ストリームの &lt;code&gt;available&lt;/code&gt; メソッドは0を返し、その &lt;code&gt;read&lt;/code&gt; メソッドは &lt;code&gt;-1&lt;/code&gt; （ストリームの終わり）を返します。</target>
        </trans-unit>
        <trans-unit id="2a949b9c219b8703c097ac5ccd1885b82d466a45" translate="yes" xml:space="preserve">
          <source>If you replace the &lt;code&gt;LayoutManager&lt;/code&gt; of the &lt;code&gt;JRootPane&lt;/code&gt;, you are responsible for managing all of these views. So ordinarily you will want to be sure that you change the layout manager for the &lt;code&gt;contentPane&lt;/code&gt; rather than for the &lt;code&gt;JRootPane&lt;/code&gt; itself!</source>
          <target state="translated">あなたが交換した場合 &lt;code&gt;LayoutManager&lt;/code&gt; の &lt;code&gt;JRootPane&lt;/code&gt; のを、あなたは、これらのビューのすべての管理を担当します。したがって、通常は、 &lt;code&gt;JRootPane&lt;/code&gt; 自体ではなく、 &lt;code&gt;contentPane&lt;/code&gt; のレイアウトマネージャーを変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="7912fd66dd008be635d668d5b08d5f186daf19bc" translate="yes" xml:space="preserve">
          <source>If you simply need to pass a known MIDI byte value as a method parameter, it can be expressed directly as an integer, using (for example) decimal or hexadecimal notation. For instance, to pass the &quot;active sensing&quot; status byte as the first argument to &lt;code&gt;ShortMessage&lt;/code&gt;'s &lt;a href=&quot;shortmessage#setMessage(int)&quot;&gt;&lt;code&gt;setMessage(int)&lt;/code&gt;&lt;/a&gt; method, you can express it as 254 or 0xFE.</source>
          <target state="translated">既知のMIDIバイト値をメソッドパラメータとして渡す必要がある場合は、（たとえば）10進表記または16進表記を使用して整数として直接表現できます。たとえば、「アクティブセンシング」ステータスバイトを最初の引数として &lt;code&gt;ShortMessage&lt;/code&gt; の&lt;a href=&quot;shortmessage#setMessage(int)&quot;&gt; &lt;code&gt;setMessage(int)&lt;/code&gt; &lt;/a&gt;メソッドに渡すには、254または0xFEとして表現できます。</target>
        </trans-unit>
        <trans-unit id="9adc7053a82a501abb4cad7dc21865d522ec6e09" translate="yes" xml:space="preserve">
          <source>If you simply need to pass a known MIDI byte value as a method parameter, it can be expressed directly as an integer, using (for example) decimal or hexadecimal notation. For instance, to pass the &quot;active sensing&quot; status byte as the first argument to ShortMessage's &lt;a href=&quot;shortmessage#setMessage-int-&quot;&gt;&lt;code&gt;setMessage(int)&lt;/code&gt;&lt;/a&gt; method, you can express it as 254 or 0xFE.</source>
          <target state="translated">既知のMIDIバイト値をメソッドパラメータとして単に渡す必要がある場合は、（たとえば）10進または16進表記を使用して、整数として直接表現できます。たとえば、「アクティブセンシング」ステータスバイトをShortMessageの&lt;a href=&quot;shortmessage#setMessage-int-&quot;&gt; &lt;code&gt;setMessage(int)&lt;/code&gt; &lt;/a&gt;メソッドの最初の引数として渡すには、254または0xFEとして表現できます。</target>
        </trans-unit>
        <trans-unit id="0f82211cc64a1f68c6b81cddc89e6c43b654c2f8" translate="yes" xml:space="preserve">
          <source>If you specify a &lt;code&gt;Comparator&lt;/code&gt; that casts its argument to a type other than that provided by the model, a &lt;code&gt;ClassCastException&lt;/code&gt; will be thrown when the data is sorted.</source>
          <target state="translated">モデルによって提供されるタイプ以外のタイプに引数をキャストする &lt;code&gt;Comparator&lt;/code&gt; を指定すると、データがソートされるときに &lt;code&gt;ClassCastException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="91f7306d8499b34903e2cc1875a00f1c655ed83e" translate="yes" xml:space="preserve">
          <source>If you specify a component for a tab, the &lt;code&gt;JTabbedPane&lt;/code&gt; will not render any text or icon you have specified for the tab.</source>
          <target state="translated">タブのコンポーネントを指定した場合、 &lt;code&gt;JTabbedPane&lt;/code&gt; は、タブに指定したテキストまたはアイコンをレンダリングしません。</target>
        </trans-unit>
        <trans-unit id="2650b7bc33c78322e175eacb857a01654ab2bdf1" translate="yes" xml:space="preserve">
          <source>If you try to replace the element at length you will most likely end up with two elements, eg &lt;code&gt;setOuterHTML(getCharacterElement (getLength()),
 &quot;blah&quot;)&lt;/code&gt; will result in two leaf elements at the end, one representing 'blah', and the other representing the end element.</source>
          <target state="translated">要素を長さで置き換えようとすると、ほとんどの場合2つの要素になります。たとえば、 &lt;code&gt;setOuterHTML(getCharacterElement (getLength()), &quot;blah&quot;)&lt;/code&gt; は、最後に2つのリーフ要素を生成します。1つは「blah」を表し、もう1つは終了要素を表します。</target>
        </trans-unit>
        <trans-unit id="8c27d27a49a2f1900e3aeb0cf3f1b19c7796998d" translate="yes" xml:space="preserve">
          <source>If you want the timer to fire only the first time and then stop, invoke &lt;code&gt;setRepeats(false)&lt;/code&gt; on the timer.</source>
          <target state="translated">タイマーを最初にのみ起動してから停止する場合は、タイマーで &lt;code&gt;setRepeats(false)&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="36a952ab19f38824917517900fe8a8157e0bfe9c" translate="yes" xml:space="preserve">
          <source>If you wish to implement additional built-in functions, you will have to extend the underlying implementation directly.</source>
          <target state="translated">追加の組み込み関数を実装したい場合は、基礎となる実装を直接拡張する必要があります。</target>
        </trans-unit>
        <trans-unit id="e679b7c6584d18d3576f32c519b50742a591ce10" translate="yes" xml:space="preserve">
          <source>If you would like more information on focus, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt; How to Use the Focus Subsystem&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">フォーカスの詳細については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションにある&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt;フォーカスサブシステムの使用方法」を&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fe1b642d6abf000e5a6aebbe484690cdcc9c2881" translate="yes" xml:space="preserve">
          <source>If you would like to immediately block waiting for a task, you can use constructions of the form &lt;code&gt;result = exec.submit(aCallable).get();&lt;/code&gt;</source>
          <target state="translated">タスクの待機をすぐにブロックしたい場合は、 &lt;code&gt;result = exec.submit(aCallable).get();&lt;/code&gt; 形式の構成を使用できます。</target>
        </trans-unit>
        <trans-unit id="63977c4fa317e4941d4d4939619f0c1013da9fe6" translate="yes" xml:space="preserve">
          <source>If your application is packaged in a jar file, you can use the &quot;SplashScreen-Image&quot; option in a manifest file to show a splash screen. Place the image in the jar archive and specify the path in the option. The path should not have a leading slash.</source>
          <target state="translated">アプリケーションが jar ファイルにパッケージ化されている場合、マニフェストファイルの &quot;SplashScreen-Image&quot; オプションを使用してスプラッシュ画面を表示することができます。jar アーカイブに画像を配置し、オプションでパスを指定します。パスには先頭にスラッシュを入れてはいけません。</target>
        </trans-unit>
        <trans-unit id="1142a8caafbf1a4fea97b5248fd7d75759e54e3b" translate="yes" xml:space="preserve">
          <source>If {name} is not absent, then expose {name} and {target namespace} properties of the &lt;b&gt;[member type definition]&lt;/b&gt; property;</source>
          <target state="translated">{name}が存在しない場合は、&lt;b&gt;[member typedefinition]&lt;/b&gt;プロパティの{name}プロパティと{targetnamespace}プロパティを公開します。</target>
        </trans-unit>
        <trans-unit id="c829170eff2415a44cc461aeb3394365f76bd6a0" translate="yes" xml:space="preserve">
          <source>If {name} is not absent, then expose {name} and {target namespace} properties of the &lt;b&gt;[type definition]&lt;/b&gt; property;</source>
          <target state="translated">{name}が存在しない場合は、&lt;b&gt;[typedefinition]&lt;/b&gt;プロパティの{name}プロパティと{targetnamespace}プロパティを公開します。</target>
        </trans-unit>
        <trans-unit id="0817bc0b871977b1a8c9e94b1ef78e8841f5ed3c" translate="yes" xml:space="preserve">
          <source>If, after possible unwrapping, the new value cannot be converted to the type of the underlying field by an identity or widening conversion, the method throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">可能なアンラップの後で、アイデンティティまたは拡大変換によって新しい値を基になるフィールドの型に変換できない場合、メソッドは &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="24cfa618cbc5961c88abb6321f352d54db94f655" translate="yes" xml:space="preserve">
          <source>If, after processing, the locale would exactly match either ja_JP_JP or th_TH_TH with no extensions, the appropriate extensions are added as though the constructor had been called:</source>
          <target state="translated">処理の結果、ロケールが ja_JP_JP か th_TH_TH_TH のいずれかと完全に一致していて拡張子がない場合は、 コンストラクタが呼ばれたかのように適切な拡張子が追加されます。</target>
        </trans-unit>
        <trans-unit id="6c08f223dd80703077dada0f83d9b60721b452cd" translate="yes" xml:space="preserve">
          <source>If, if the address is &lt;code&gt;null&lt;/code&gt;, creates an unbound socket.</source>
          <target state="translated">アドレスが &lt;code&gt;null&lt;/code&gt; の場合、バインドされていないソケットを作成します。</target>
        </trans-unit>
        <trans-unit id="af0d6e75737e8d512f1d2dc81914343a4327ba77" translate="yes" xml:space="preserve">
          <source>If, on the other hand, the object is of a class implementing &lt;code&gt;Ref&lt;/code&gt;, &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;Clob&lt;/code&gt;, &lt;code&gt;Struct&lt;/code&gt;, or &lt;code&gt;Array&lt;/code&gt;, the driver should pass it to the database as a value of the corresponding SQL type.</source>
          <target state="translated">一方、オブジェクトが &lt;code&gt;Ref&lt;/code&gt; 、 &lt;code&gt;Blob&lt;/code&gt; 、 &lt;code&gt;Clob&lt;/code&gt; 、 &lt;code&gt;Struct&lt;/code&gt; 、または &lt;code&gt;Array&lt;/code&gt; を実装するクラスである場合、ドライバーは対応するSQLタイプの値としてデータベースに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="b7a3944583d471c07a700e6fff18fb04ba3825df" translate="yes" xml:space="preserve">
          <source>If, when the adapter is called, the supplied array argument does not have the correct number of elements, the adapter will throw an &lt;a href=&quot;../illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; instead of invoking the target.</source>
          <target state="translated">アダプターが呼び出されたときに、提供された配列引数に正しい要素数がない場合、アダプターはターゲットを呼び出す代わりに&lt;a href=&quot;../illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt;をスローします。</target>
        </trans-unit>
        <trans-unit id="5aeb3634e8da1950aa7c188cf3e3aa2eabece572" translate="yes" xml:space="preserve">
          <source>If, when used, the base URI is itself a relative URI, an empty string, or null, the behavior is implementation dependent.</source>
          <target state="translated">使用される場合、ベースURIがそれ自体が相対URI、空の文字列、またはnullである場合、動作は実装に依存する。</target>
        </trans-unit>
        <trans-unit id="50a53d6760e4f33109326a6a1af782ed05797935" translate="yes" xml:space="preserve">
          <source>If:</source>
          <target state="translated">If:</target>
        </trans-unit>
        <trans-unit id="b72b090877eea86916f15a461dd07d59e2745346" translate="yes" xml:space="preserve">
          <source>Ignoring the many semantic differences from C and C++, this method has memory ordering effects compatible with &lt;code&gt;atomic_thread_fence(memory_order_acquire)&lt;/code&gt;</source>
          <target state="translated">CおよびC ++との多くのセマンティックの違いを無視すると、このメソッドには、 &lt;code&gt;atomic_thread_fence(memory_order_acquire)&lt;/code&gt; と互換性のあるメモリオーダリング効果があります。</target>
        </trans-unit>
        <trans-unit id="93c1375be76ead11897a91ef18f5fe064e6e083d" translate="yes" xml:space="preserve">
          <source>Ignoring the many semantic differences from C and C++, this method has memory ordering effects compatible with &lt;code&gt;atomic_thread_fence(memory_order_release)&lt;/code&gt;</source>
          <target state="translated">CおよびC ++との多くのセマンティックの違いを無視すると、このメソッドには、 &lt;code&gt;atomic_thread_fence(memory_order_release)&lt;/code&gt; と互換性のあるメモリオーダリング効果があります。</target>
        </trans-unit>
        <trans-unit id="633eeda099a8b512b8b2238c00245486ce758c37" translate="yes" xml:space="preserve">
          <source>Ignoring the many semantic differences from C and C++, this method has memory ordering effects compatible with &lt;code&gt;atomic_thread_fence(memory_order_seq_cst)&lt;/code&gt;</source>
          <target state="translated">CおよびC ++との多くのセマンティックの違いを無視すると、このメソッドには、 &lt;code&gt;atomic_thread_fence(memory_order_seq_cst)&lt;/code&gt; と互換性のあるメモリオーダリング効果があります。</target>
        </trans-unit>
        <trans-unit id="8e9d3ebb4bc58d23e73778efe9aed83591477802" translate="yes" xml:space="preserve">
          <source>Ignoring the many semantic differences from C and C++, this method has memory ordering effects compatible with &lt;code&gt;memory_order_acquire&lt;/code&gt; ordering.</source>
          <target state="translated">CおよびC ++との多くのセマンティックの違いを無視すると、このメソッドには、 &lt;code&gt;memory_order_acquire&lt;/code&gt; の順序付けと互換性のあるメモリ順序付けの効果があります。</target>
        </trans-unit>
        <trans-unit id="365387338e41c520bb1c8fb8c29bf1daf9c93bce" translate="yes" xml:space="preserve">
          <source>Ignoring the many semantic differences from C and C++, this method has memory ordering effects compatible with &lt;code&gt;memory_order_release&lt;/code&gt; ordering.</source>
          <target state="translated">CおよびC ++との多くのセマンティックの違いを無視すると、このメソッドには、 &lt;code&gt;memory_order_release&lt;/code&gt; の順序付けと互換性のあるメモリ順序付けの効果があります。</target>
        </trans-unit>
        <trans-unit id="54a6d1d497ce81be500ac92faa8ed5f667ef3d58" translate="yes" xml:space="preserve">
          <source>Ignoring the many semantic differences from C and C++, this method has memory ordering effects compatible with &lt;code&gt;memory_order_seq_cst&lt;/code&gt;.</source>
          <target state="translated">CおよびC ++との多くのセマンティックの違いを無視すると、このメソッドには、 &lt;code&gt;memory_order_seq_cst&lt;/code&gt; と互換性のあるメモリオーダリング効果があります。</target>
        </trans-unit>
        <trans-unit id="21847df5c5cb4e7672a041f56f6d078037fceb03" translate="yes" xml:space="preserve">
          <source>IllegalAccessError</source>
          <target state="translated">IllegalAccessError</target>
        </trans-unit>
        <trans-unit id="dd91bcefa6284f552972a0be97fee45225f084db" translate="yes" xml:space="preserve">
          <source>IllegalAccessException</source>
          <target state="translated">IllegalAccessException</target>
        </trans-unit>
        <trans-unit id="07762b664ab5db9b2429f8c1a03a6fdc3ea71fdc" translate="yes" xml:space="preserve">
          <source>IllegalAccessException &amp;mdash; if the member exists but an access check fails</source>
          <target state="translated">IllegalAccessException &amp;mdash;メンバーは存在するがアクセスチェックが失敗した場合</target>
        </trans-unit>
        <trans-unit id="ea0b39c7ffc510626fe28212437d8a57285e5a4c" translate="yes" xml:space="preserve">
          <source>IllegalArgumentException</source>
          <target state="translated">IllegalArgumentException</target>
        </trans-unit>
        <trans-unit id="5cba9941f37a9bb4e09bf14b74224997efa1538b" translate="yes" xml:space="preserve">
          <source>IllegalBlockSizeException</source>
          <target state="translated">IllegalBlockSizeException</target>
        </trans-unit>
        <trans-unit id="72bee4f060e1046316b9d9208f43a1e30f093b56" translate="yes" xml:space="preserve">
          <source>IllegalBlockingModeException</source>
          <target state="translated">IllegalBlockingModeException</target>
        </trans-unit>
        <trans-unit id="e7f30ea2e2be851aa1bd0caa52479522de238235" translate="yes" xml:space="preserve">
          <source>IllegalCallerException</source>
          <target state="translated">IllegalCallerException</target>
        </trans-unit>
        <trans-unit id="728ba9e6dd595a3196c4ac4b622b54d1c837df50" translate="yes" xml:space="preserve">
          <source>IllegalChannelGroupException</source>
          <target state="translated">IllegalChannelGroupException</target>
        </trans-unit>
        <trans-unit id="08856e863e3820d0924f3ef1be4b809519443035" translate="yes" xml:space="preserve">
          <source>IllegalCharsetNameException</source>
          <target state="translated">IllegalCharsetNameException</target>
        </trans-unit>
        <trans-unit id="1ee77982e6e3d907bbc5b59a832da5d3e0e28e63" translate="yes" xml:space="preserve">
          <source>IllegalCharsetNameException.getCharsetName()</source>
          <target state="translated">IllegalCharsetNameException.getCharsetName()</target>
        </trans-unit>
        <trans-unit id="3f2717d0b8f564968056d35a3e99daf87783976b" translate="yes" xml:space="preserve">
          <source>IllegalClassFormatException</source>
          <target state="translated">IllegalClassFormatException</target>
        </trans-unit>
        <trans-unit id="0f0123b56b86fc92b1e47a70455d908f3f5c42ca" translate="yes" xml:space="preserve">
          <source>IllegalComponentStateException</source>
          <target state="translated">IllegalComponentStateException</target>
        </trans-unit>
        <trans-unit id="2e88f78ae51e3f9d1be0762af4b7ca8e8f11f783" translate="yes" xml:space="preserve">
          <source>IllegalFormatCodePointException</source>
          <target state="translated">IllegalFormatCodePointException</target>
        </trans-unit>
        <trans-unit id="01e9b728feda93c0804cfc60551e0a73ac67cb23" translate="yes" xml:space="preserve">
          <source>IllegalFormatCodePointException.getCodePoint()</source>
          <target state="translated">IllegalFormatCodePointException.getCodePoint()</target>
        </trans-unit>
        <trans-unit id="b58e3a3bb89019a4239ddcc347dd9da221bd439c" translate="yes" xml:space="preserve">
          <source>IllegalFormatCodePointException.getMessage()</source>
          <target state="translated">IllegalFormatCodePointException.getMessage()</target>
        </trans-unit>
        <trans-unit id="cf694920d369177ecd98f05c63ceccfd014dfb3a" translate="yes" xml:space="preserve">
          <source>IllegalFormatConversionException</source>
          <target state="translated">IllegalFormatConversionException</target>
        </trans-unit>
        <trans-unit id="c2af42e8201376b34c77bc1352974c64f68a5c82" translate="yes" xml:space="preserve">
          <source>IllegalFormatConversionException.getArgumentClass()</source>
          <target state="translated">IllegalFormatConversionException.getArgumentClass()</target>
        </trans-unit>
        <trans-unit id="93cfe6fd63a97ee0cb039d0f535c1bec0f8381bb" translate="yes" xml:space="preserve">
          <source>IllegalFormatConversionException.getConversion()</source>
          <target state="translated">IllegalFormatConversionException.getConversion()</target>
        </trans-unit>
        <trans-unit id="32267ab7467ebe1517e9a90793fb60edfa337c8f" translate="yes" xml:space="preserve">
          <source>IllegalFormatConversionException.getMessage()</source>
          <target state="translated">IllegalFormatConversionException.getMessage()</target>
        </trans-unit>
        <trans-unit id="6fc8f0163cbca539149d1e776e01d43e638d91f1" translate="yes" xml:space="preserve">
          <source>IllegalFormatException</source>
          <target state="translated">IllegalFormatException</target>
        </trans-unit>
        <trans-unit id="c860a8ffb590545dad947d6d0a32f4306f0b6669" translate="yes" xml:space="preserve">
          <source>IllegalFormatFlagsException</source>
          <target state="translated">IllegalFormatFlagsException</target>
        </trans-unit>
        <trans-unit id="5d2373c99c0c78d388f5d343129d99c232ecdb83" translate="yes" xml:space="preserve">
          <source>IllegalFormatFlagsException.getFlags()</source>
          <target state="translated">IllegalFormatFlagsException.getFlags()</target>
        </trans-unit>
        <trans-unit id="64c3da34100c4721209bf9cd2b15ee2ec4a71d99" translate="yes" xml:space="preserve">
          <source>IllegalFormatFlagsException.getMessage()</source>
          <target state="translated">IllegalFormatFlagsException.getMessage()</target>
        </trans-unit>
        <trans-unit id="5b3fb4fc418e6c049903e5b64d9f8e8768116ade" translate="yes" xml:space="preserve">
          <source>IllegalFormatPrecisionException</source>
          <target state="translated">IllegalFormatPrecisionException</target>
        </trans-unit>
        <trans-unit id="4906b7cf69fa0eca0016b6d9e6fa7ee8fa52cb68" translate="yes" xml:space="preserve">
          <source>IllegalFormatPrecisionException.getMessage()</source>
          <target state="translated">IllegalFormatPrecisionException.getMessage()</target>
        </trans-unit>
        <trans-unit id="f8b90130a9087589e9ccb2175b557399069a72e1" translate="yes" xml:space="preserve">
          <source>IllegalFormatPrecisionException.getPrecision()</source>
          <target state="translated">IllegalFormatPrecisionException.getPrecision()</target>
        </trans-unit>
        <trans-unit id="150579129307b1603edaa8afafecdfc747707a0c" translate="yes" xml:space="preserve">
          <source>IllegalFormatWidthException</source>
          <target state="translated">IllegalFormatWidthException</target>
        </trans-unit>
        <trans-unit id="c1a5b579faf7cca9bf3f94878c79fb0f475cf233" translate="yes" xml:space="preserve">
          <source>IllegalFormatWidthException.getMessage()</source>
          <target state="translated">IllegalFormatWidthException.getMessage()</target>
        </trans-unit>
        <trans-unit id="8f52f453c1c984aec8936f3217284e6377d96c69" translate="yes" xml:space="preserve">
          <source>IllegalFormatWidthException.getWidth()</source>
          <target state="translated">IllegalFormatWidthException.getWidth()</target>
        </trans-unit>
        <trans-unit id="32d0389d11053deed8d75849534640e819bb4527" translate="yes" xml:space="preserve">
          <source>IllegalMonitorStateException</source>
          <target state="translated">IllegalMonitorStateException</target>
        </trans-unit>
        <trans-unit id="847476880539b37f0639fe77932a4fcc9349e03e" translate="yes" xml:space="preserve">
          <source>IllegalPathStateException</source>
          <target state="translated">IllegalPathStateException</target>
        </trans-unit>
        <trans-unit id="e9bfc30e12d08117404111c4265dd4ec5ebc94c4" translate="yes" xml:space="preserve">
          <source>IllegalSelectorException</source>
          <target state="translated">IllegalSelectorException</target>
        </trans-unit>
        <trans-unit id="63b3abc14a5b2c9db143083b94887cb72910c4de" translate="yes" xml:space="preserve">
          <source>IllegalStateException</source>
          <target state="translated">IllegalStateException</target>
        </trans-unit>
        <trans-unit id="ac921dc0ca27355ce8a5b55265b8b7ba05f069f0" translate="yes" xml:space="preserve">
          <source>IllegalThreadStateException</source>
          <target state="translated">IllegalThreadStateException</target>
        </trans-unit>
        <trans-unit id="e967f0136e45172f483f99e3bfebb380a3980435" translate="yes" xml:space="preserve">
          <source>IllformedLocaleException</source>
          <target state="translated">IllformedLocaleException</target>
        </trans-unit>
        <trans-unit id="3d9fd3af220073c500b086cc9fbdcb26786c4326" translate="yes" xml:space="preserve">
          <source>IllformedLocaleException.getErrorIndex()</source>
          <target state="translated">IllformedLocaleException.getErrorIndex()</target>
        </trans-unit>
        <trans-unit id="50e19fda0d5b4b74a4a1a1d584e56578693a4ea4" translate="yes" xml:space="preserve">
          <source>Image</source>
          <target state="translated">Image</target>
        </trans-unit>
        <trans-unit id="e221fe5a3e6f4ff124e28b73d70e7afa9ab3f313" translate="yes" xml:space="preserve">
          <source>Image Types</source>
          <target state="translated">画像の種類</target>
        </trans-unit>
        <trans-unit id="c177d6ae70be09c0df8491f4bb934a1ebcbac143" translate="yes" xml:space="preserve">
          <source>Image format</source>
          <target state="translated">画像形式</target>
        </trans-unit>
        <trans-unit id="6aee9e0a545bac355253cbf8e0ad47ff07100f74" translate="yes" xml:space="preserve">
          <source>Image objects created by the Component methods which take a width and height leave their primary buffer of pixels untouched, but have all cached information released much like is done for BufferedImage objects.</source>
          <target state="translated">幅と高さを取るComponentメソッドによって作成された画像オブジェクトは、ピクセルのプライマリバッファをそのままにしておきますが、BufferedImageオブジェクトの場合と同様に、キャッシュされた情報はすべて解放されています。</target>
        </trans-unit>
        <trans-unit id="57d857d37de257a376e5ddad5e7521d04ff5aa1b" translate="yes" xml:space="preserve">
          <source>Image objects created by the Toolkit and Component classes which are loaded from files, URLs or produced by an &lt;a href=&quot;image/imageproducer&quot;&gt;&lt;code&gt;ImageProducer&lt;/code&gt;&lt;/a&gt; are unloaded and all local resources are released. These objects can later be reloaded from their original source as needed when they are rendered, just as when they were first created.</source>
          <target state="translated">ツールキットおよびコンポーネントクラスによって作成され、ファイル、URLからロードされる、または&lt;a href=&quot;image/imageproducer&quot;&gt; &lt;code&gt;ImageProducer&lt;/code&gt; &lt;/a&gt;によって生成される画像オブジェクトがアンロードされ、すべてのローカルリソースが解放されます。これらのオブジェクトは、最初に作成されたときと同じように、レンダリング時に必要に応じて元のソースから後で再ロードできます。</target>
        </trans-unit>
        <trans-unit id="e3ed144f5da6c1389ccea2ba0f18557df20eae6b" translate="yes" xml:space="preserve">
          <source>Image resolution variant hint key.</source>
          <target state="translated">画像解像度バリアントヒントキー。</target>
        </trans-unit>
        <trans-unit id="ac8b9a84b792193e959a8b4ffecf2c028a3806da" translate="yes" xml:space="preserve">
          <source>Image resolution variant hint key. The &lt;code&gt;RESOLUTION_VARIANT&lt;/code&gt; hint controls which image resolution variant should be chosen for image drawing.</source>
          <target state="translated">画像解像度バリアントヒントキー。 &lt;code&gt;RESOLUTION_VARIANT&lt;/code&gt; 画像解像度変異体は描画のために選択されるべきであるヒントを制御します。</target>
        </trans-unit>
        <trans-unit id="e7b9c9cc705fad55ed70c68de20a2d67124541eb" translate="yes" xml:space="preserve">
          <source>Image resolution variant hint value -- an image resolution variant is chosen based on a default heuristic which may depend on the policies of the platform</source>
          <target state="translated">画像解像度バリアントのヒント値 --画像解像度バリアントは、プラットフォームのポリシーに依存するかもしれないデフォルトのヒューリスティックに基づいて選択されます。</target>
        </trans-unit>
        <trans-unit id="974a9fd1c8a628aedd947bb0cb4c1f9ca7e7b4bf" translate="yes" xml:space="preserve">
          <source>Image resolution variant hint value -- an image resolution variant is chosen based on the DPI of the screen and the transform in the Graphics2D context.</source>
          <target state="translated">画像解像度バリアントヒント値 --画像解像度バリアントは、画面のDPIとGraphics2Dコンテキスト内の変換に基づいて選択されます。</target>
        </trans-unit>
        <trans-unit id="7e0b9dbef325958500a62f39e6111248f1fbffee" translate="yes" xml:space="preserve">
          <source>Image resolution variant hint value -- an image resolution variant is chosen based only on the DPI of the screen.</source>
          <target state="translated">画像解像度バリアントのヒント値 --画像解像度バリアントは、画面のDPIのみに基づいて選択されます。</target>
        </trans-unit>
        <trans-unit id="4892351b67a0b8f01884352565cef3d7e348cb61" translate="yes" xml:space="preserve">
          <source>Image resolution variant hint value -- the standard resolution of an image is always used.</source>
          <target state="translated">画像の解像度バリアントヒント値 --画像の標準解像度が常に使用されます。</target>
        </trans-unit>
        <trans-unit id="aaac2c0392a2c900804f16f66e9ca1c70515aa2e" translate="yes" xml:space="preserve">
          <source>Image type is not recognized so it must be a customized image.</source>
          <target state="translated">画像の種類が認識されないので、カスタマイズされた画像でなければなりません。</target>
        </trans-unit>
        <trans-unit id="7a6125632e280859d05ab254524a7e44eae7814c" translate="yes" xml:space="preserve">
          <source>Image type is not recognized so it must be a customized image. This type is only used as a return value for the getType() method.</source>
          <target state="translated">画像タイプは認識されないので、カスタマイズされた画像でなければなりません。このタイプは、getType()メソッドの戻り値としてのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="89acf40882c7634e6591debb984e1ecf5dcc20b0" translate="yes" xml:space="preserve">
          <source>ImageCapabilities</source>
          <target state="translated">ImageCapabilities</target>
        </trans-unit>
        <trans-unit id="c7799ce714030501dd68095ad53079bd167859a5" translate="yes" xml:space="preserve">
          <source>ImageConsumer</source>
          <target state="translated">ImageConsumer</target>
        </trans-unit>
        <trans-unit id="bb30cc1f9e723a53cbbd1338e67481705771f818" translate="yes" xml:space="preserve">
          <source>ImageFilter</source>
          <target state="translated">ImageFilter</target>
        </trans-unit>
        <trans-unit id="2b0b6b5e693c18798a5164d2641e99ba7948e431" translate="yes" xml:space="preserve">
          <source>ImageGraphicAttribute</source>
          <target state="translated">ImageGraphicAttribute</target>
        </trans-unit>
        <trans-unit id="9cfa0ee34d7252ba885e40e3d0bae9b6168fffbc" translate="yes" xml:space="preserve">
          <source>ImageIO</source>
          <target state="translated">ImageIO</target>
        </trans-unit>
        <trans-unit id="fb08904deaf392352762e63593d408f30ad7592f" translate="yes" xml:space="preserve">
          <source>ImageIO provides &lt;code&gt;ImageReader&lt;/code&gt; and &lt;code&gt;ImageWriter&lt;/code&gt; plug-ins for the &lt;a href=&quot;http://www.w3.org/Graphics/GIF/spec-gif89a.txt&quot;&gt; Graphics Interchange Format (GIF)&lt;/a&gt; image format. These are the &quot;standard&quot; GIF plug-ins, meaning those that are included in the JRE, as distinct from those included in standard extensions, or 3rd party plug-ins. The following notes and metadata specification apply to the standard plug-ins.</source>
          <target state="translated">ImageIOは、&lt;a href=&quot;http://www.w3.org/Graphics/GIF/spec-gif89a.txt&quot;&gt;Graphics Interchange Format（GIF）&lt;/a&gt;画像形式用の &lt;code&gt;ImageReader&lt;/code&gt; および &lt;code&gt;ImageWriter&lt;/code&gt; プラグインを提供します。これらは「標準」のGIFプラグイン、つまりJREに含まれているプラ​​グインであり、標準の拡張機能やサードパーティのプラグインに含まれているものとは異なります。次の注意事項とメタデータ仕様は、標準プラグインに適用されます。</target>
        </trans-unit>
        <trans-unit id="49f25b54dbc3dea8f181479f03f0ffa723228847" translate="yes" xml:space="preserve">
          <source>ImageIO provides &lt;code&gt;ImageReader&lt;/code&gt; and &lt;code&gt;ImageWriter&lt;/code&gt;plug-ins for the &lt;a href=&quot;http://www.w3.org/Graphics/GIF/spec-gif89a.txt&quot;&gt; Graphics Interchange Format (GIF)&lt;/a&gt; image format. These are the &quot;standard&quot; GIF plug-ins, meaning those that are included in the JRE, as distinct from those included in standard extensions, or 3rd party plug-ins. The following notes and metadata specification apply to the standard plug-ins.</source>
          <target state="translated">ImageIOは、&lt;a href=&quot;http://www.w3.org/Graphics/GIF/spec-gif89a.txt&quot;&gt;Graphics Interchange Format（GIF）&lt;/a&gt;画像形式用の &lt;code&gt;ImageReader&lt;/code&gt; および &lt;code&gt;ImageWriter&lt;/code&gt; プラグインを提供します。これらは「標準」のGIFプラグインであり、標準の拡張機能やサードパーティのプラグインとは異なり、JREに含まれているものを意味します。以下の注記とメタデータ仕様は、標準プラグインに適用されます。</target>
        </trans-unit>
        <trans-unit id="da7c9851db149fedc74fd958b51bbff7e3c3e4cb" translate="yes" xml:space="preserve">
          <source>ImageIO.createImageInputStream()</source>
          <target state="translated">ImageIO.createImageInputStream()</target>
        </trans-unit>
        <trans-unit id="c95c8213476c7bf7c6e8cd2a4156f6aad06b2ede" translate="yes" xml:space="preserve">
          <source>ImageIO.createImageOutputStream()</source>
          <target state="translated">ImageIO.createImageOutputStream()</target>
        </trans-unit>
        <trans-unit id="09fd3c3ef36b3e3b4e27a58c340ac1498c852811" translate="yes" xml:space="preserve">
          <source>ImageIO.getCacheDirectory()</source>
          <target state="translated">ImageIO.getCacheDirectory()</target>
        </trans-unit>
        <trans-unit id="b8d56c96a5e032b322a7dfc9e9dfd4f7d3163210" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageReader()</source>
          <target state="translated">ImageIO.getImageReader()</target>
        </trans-unit>
        <trans-unit id="7e76eb241ccb26f43c390618bae46f5d10b95238" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageReaders()</source>
          <target state="translated">ImageIO.getImageReaders()</target>
        </trans-unit>
        <trans-unit id="44ef81251a0359e10da539ea0c926738bc079d80" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageReadersByFormatName()</source>
          <target state="translated">ImageIO.getImageReadersByFormatName()</target>
        </trans-unit>
        <trans-unit id="64a0bc918bed1738502afad4783faccab9c2186b" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageReadersByMIMEType()</source>
          <target state="translated">ImageIO.getImageReadersByMIMEType()</target>
        </trans-unit>
        <trans-unit id="afa949cd049242f118953cd39b6f5c21cd74bfbe" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageReadersBySuffix()</source>
          <target state="translated">ImageIO.getImageReadersBySuffix()</target>
        </trans-unit>
        <trans-unit id="de6da74d518b0c2784171323506bb5b1ee6d852b" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageTranscoders()</source>
          <target state="translated">ImageIO.getImageTranscoders()</target>
        </trans-unit>
        <trans-unit id="5e29940fba4bc557445fc983f308938e46bd224f" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageWriter()</source>
          <target state="translated">ImageIO.getImageWriter()</target>
        </trans-unit>
        <trans-unit id="56bc830a97378de25ad150d4e503fc48f66dc3ec" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageWriters()</source>
          <target state="translated">ImageIO.getImageWriters()</target>
        </trans-unit>
        <trans-unit id="89db07061cc0732e6ab14d4c068e2d7eceb3e2a9" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageWritersByFormatName()</source>
          <target state="translated">ImageIO.getImageWritersByFormatName()</target>
        </trans-unit>
        <trans-unit id="e750e9b780c2367dccb6426f7d619b865597416c" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageWritersByMIMEType()</source>
          <target state="translated">ImageIO.getImageWritersByMIMEType()</target>
        </trans-unit>
        <trans-unit id="ce7337d2c90e5649fdf14512d0e005a7d112c6cb" translate="yes" xml:space="preserve">
          <source>ImageIO.getImageWritersBySuffix()</source>
          <target state="translated">ImageIO.getImageWritersBySuffix()</target>
        </trans-unit>
        <trans-unit id="fe5c85a5282508405c3f1206d09bed976dd42965" translate="yes" xml:space="preserve">
          <source>ImageIO.getReaderFileSuffixes()</source>
          <target state="translated">ImageIO.getReaderFileSuffixes()</target>
        </trans-unit>
        <trans-unit id="06d8f415a89de32cffca703fc29bbb91572fbc9f" translate="yes" xml:space="preserve">
          <source>ImageIO.getReaderFormatNames()</source>
          <target state="translated">ImageIO.getReaderFormatNames()</target>
        </trans-unit>
        <trans-unit id="0645e1589c3071d7502c318da4c3c2b061194cb7" translate="yes" xml:space="preserve">
          <source>ImageIO.getReaderMIMETypes()</source>
          <target state="translated">ImageIO.getReaderMIMETypes()</target>
        </trans-unit>
        <trans-unit id="07ad9f1d97f6d3e904844a56851b3bcda99b2c43" translate="yes" xml:space="preserve">
          <source>ImageIO.getUseCache()</source>
          <target state="translated">ImageIO.getUseCache()</target>
        </trans-unit>
        <trans-unit id="5169caa39bfd700d76397736d7e285aa33f9c7a7" translate="yes" xml:space="preserve">
          <source>ImageIO.getWriterFileSuffixes()</source>
          <target state="translated">ImageIO.getWriterFileSuffixes()</target>
        </trans-unit>
        <trans-unit id="7e7a97a50c9d05a7a40adf51dd33a857053c65da" translate="yes" xml:space="preserve">
          <source>ImageIO.getWriterFormatNames()</source>
          <target state="translated">ImageIO.getWriterFormatNames()</target>
        </trans-unit>
        <trans-unit id="01db539be762fbfd821ea09f01177e71fd96fc8c" translate="yes" xml:space="preserve">
          <source>ImageIO.getWriterMIMETypes()</source>
          <target state="translated">ImageIO.getWriterMIMETypes()</target>
        </trans-unit>
        <trans-unit id="463d1f56e81833ff31c3d295de1bb6fcfda5275d" translate="yes" xml:space="preserve">
          <source>ImageIO.read()</source>
          <target state="translated">ImageIO.read()</target>
        </trans-unit>
        <trans-unit id="c7d104e02651636725b9f8fe56a25a4d2c570bf1" translate="yes" xml:space="preserve">
          <source>ImageIO.scanForPlugins()</source>
          <target state="translated">ImageIO.scanForPlugins()</target>
        </trans-unit>
        <trans-unit id="d62714299e20b57d1592d993d43407e41aa2164e" translate="yes" xml:space="preserve">
          <source>ImageIO.setCacheDirectory()</source>
          <target state="translated">ImageIO.setCacheDirectory()</target>
        </trans-unit>
        <trans-unit id="792babf03cb2c5b21cc1ccff7d0276833b152238" translate="yes" xml:space="preserve">
          <source>ImageIO.setUseCache()</source>
          <target state="translated">ImageIO.setUseCache()</target>
        </trans-unit>
        <trans-unit id="740030501c0f7240b3fef74e1112008cba5f6479" translate="yes" xml:space="preserve">
          <source>ImageIO.write()</source>
          <target state="translated">ImageIO.write()</target>
        </trans-unit>
        <trans-unit id="f6563667fde6d26e4066fc6aa1228cb0f06c1e71" translate="yes" xml:space="preserve">
          <source>ImageIcon</source>
          <target state="translated">ImageIcon</target>
        </trans-unit>
        <trans-unit id="fdbe48fe33b524022f43b766d4d6e9d66a68197c" translate="yes" xml:space="preserve">
          <source>ImageIcon.AccessibleImageIcon</source>
          <target state="translated">ImageIcon.AccessibleImageIcon</target>
        </trans-unit>
        <trans-unit id="0245e9e67a54a472fc25581d5c9f9f41c5862fe9" translate="yes" xml:space="preserve">
          <source>ImageInputStream</source>
          <target state="translated">ImageInputStream</target>
        </trans-unit>
        <trans-unit id="fdb0db46a0549545118bcfab191f5a01bb7b7856" translate="yes" xml:space="preserve">
          <source>ImageInputStream.close()</source>
          <target state="translated">ImageInputStream.close()</target>
        </trans-unit>
        <trans-unit id="74e92bb6efaabdb3e1364e44d9201955d9a97ecd" translate="yes" xml:space="preserve">
          <source>ImageInputStream.flush()</source>
          <target state="translated">ImageInputStream.flush()</target>
        </trans-unit>
        <trans-unit id="f2c19a159035aa426a1b4fa9ff8fef450cf20186" translate="yes" xml:space="preserve">
          <source>ImageInputStream.flushBefore()</source>
          <target state="translated">ImageInputStream.flushBefore()</target>
        </trans-unit>
        <trans-unit id="3e3dcc8b7874fe66b112c67eb0131282cf5be45d" translate="yes" xml:space="preserve">
          <source>ImageInputStream.getBitOffset()</source>
          <target state="translated">ImageInputStream.getBitOffset()</target>
        </trans-unit>
        <trans-unit id="ed0c413a5cdd9ba2f88e8004941a2b40d5be3aca" translate="yes" xml:space="preserve">
          <source>ImageInputStream.getByteOrder()</source>
          <target state="translated">ImageInputStream.getByteOrder()</target>
        </trans-unit>
        <trans-unit id="a9f86dc54492d048236b77adbd714aeca40c9e51" translate="yes" xml:space="preserve">
          <source>ImageInputStream.getFlushedPosition()</source>
          <target state="translated">ImageInputStream.getFlushedPosition()</target>
        </trans-unit>
        <trans-unit id="7fac3b49b57032a0641c75807a3c18076b5da2b5" translate="yes" xml:space="preserve">
          <source>ImageInputStream.getStreamPosition()</source>
          <target state="translated">ImageInputStream.getStreamPosition()</target>
        </trans-unit>
        <trans-unit id="1acb72377037719672c98f780c77e950ff820492" translate="yes" xml:space="preserve">
          <source>ImageInputStream.isCached()</source>
          <target state="translated">ImageInputStream.isCached()</target>
        </trans-unit>
        <trans-unit id="5f69754bd4d96138a7c22bbedd6aefaabde231a8" translate="yes" xml:space="preserve">
          <source>ImageInputStream.isCachedFile()</source>
          <target state="translated">ImageInputStream.isCachedFile()</target>
        </trans-unit>
        <trans-unit id="5c548a7b471d7672ecb6792e54d5bdc21e4d2387" translate="yes" xml:space="preserve">
          <source>ImageInputStream.isCachedMemory()</source>
          <target state="translated">ImageInputStream.isCachedMemory()</target>
        </trans-unit>
        <trans-unit id="5261bd544299c757e4b1f336fdefee6de42c7b4c" translate="yes" xml:space="preserve">
          <source>ImageInputStream.length()</source>
          <target state="translated">ImageInputStream.length()</target>
        </trans-unit>
        <trans-unit id="cfabbc33a2b60af25762be95a557f5de9c1ba8ea" translate="yes" xml:space="preserve">
          <source>ImageInputStream.mark()</source>
          <target state="translated">ImageInputStream.mark()</target>
        </trans-unit>
        <trans-unit id="07764b9f240c07205fc1c6d6c63a27c1372ff701" translate="yes" xml:space="preserve">
          <source>ImageInputStream.read()</source>
          <target state="translated">ImageInputStream.read()</target>
        </trans-unit>
        <trans-unit id="fb57b6a837e11c39f6562a7a887b53c7dc1c09f5" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readBit()</source>
          <target state="translated">ImageInputStream.readBit()</target>
        </trans-unit>
        <trans-unit id="0917c6385b2ac3e649e5b9a229ff8852a7e03f14" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readBits()</source>
          <target state="translated">ImageInputStream.readBits()</target>
        </trans-unit>
        <trans-unit id="0c8ff8f950621dce17dda1c964b80be167dd2cee" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readBoolean()</source>
          <target state="translated">ImageInputStream.readBoolean()</target>
        </trans-unit>
        <trans-unit id="7a252976aef85f172deca195d4e9d13d7ffeca7b" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readByte()</source>
          <target state="translated">ImageInputStream.readByte()</target>
        </trans-unit>
        <trans-unit id="76a124f0baeafb323fcdeb4600b759c65f8d0176" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readBytes()</source>
          <target state="translated">ImageInputStream.readBytes()</target>
        </trans-unit>
        <trans-unit id="b2e9a3b48f6aeb1974e857f3d1dc37592e8a6ddc" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readChar()</source>
          <target state="translated">ImageInputStream.readChar()</target>
        </trans-unit>
        <trans-unit id="e06adfc4448348b3acddca93f268a2153ab1a3ee" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readDouble()</source>
          <target state="translated">ImageInputStream.readDouble()</target>
        </trans-unit>
        <trans-unit id="257f1ac56d5e6e98ef9a7c125604a204d17b5d18" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readFloat()</source>
          <target state="translated">ImageInputStream.readFloat()</target>
        </trans-unit>
        <trans-unit id="cf9313280471b393d59238085e0efa067c010043" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readFully()</source>
          <target state="translated">ImageInputStream.readFully()</target>
        </trans-unit>
        <trans-unit id="2cf680fda4d5eb74c626d594fd5817dad1ebb713" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readInt()</source>
          <target state="translated">ImageInputStream.readInt()</target>
        </trans-unit>
        <trans-unit id="af33fd30f73a756d5dabfadf948021b8a508cc2c" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readLine()</source>
          <target state="translated">ImageInputStream.readLine()</target>
        </trans-unit>
        <trans-unit id="c502e57ec334956d872b572bcb59a8d15e976afc" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readLong()</source>
          <target state="translated">ImageInputStream.readLong()</target>
        </trans-unit>
        <trans-unit id="560d5375c889ea524187a3cf8aca901ebf457cb1" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readShort()</source>
          <target state="translated">ImageInputStream.readShort()</target>
        </trans-unit>
        <trans-unit id="7c6880473353874f02e9c2ae4fcba87e85333517" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readUTF()</source>
          <target state="translated">ImageInputStream.readUTF()</target>
        </trans-unit>
        <trans-unit id="dab86d8b4038eb19b0b3a15dd627a0d8b836e2c3" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readUnsignedByte()</source>
          <target state="translated">ImageInputStream.readUnsignedByte()</target>
        </trans-unit>
        <trans-unit id="87eb9f587b973471d74845a3ddc84409ec8adf3b" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readUnsignedInt()</source>
          <target state="translated">ImageInputStream.readUnsignedInt()</target>
        </trans-unit>
        <trans-unit id="f35074f6242fa76bc133147208ccc387bac999de" translate="yes" xml:space="preserve">
          <source>ImageInputStream.readUnsignedShort()</source>
          <target state="translated">ImageInputStream.readUnsignedShort()</target>
        </trans-unit>
        <trans-unit id="00a12c946b17c606257256e3e6378b114e2e9c05" translate="yes" xml:space="preserve">
          <source>ImageInputStream.reset()</source>
          <target state="translated">ImageInputStream.reset()</target>
        </trans-unit>
        <trans-unit id="90be6fbdd0622d26d611dfbaa9e05e7fd752415f" translate="yes" xml:space="preserve">
          <source>ImageInputStream.seek()</source>
          <target state="translated">ImageInputStream.seek()</target>
        </trans-unit>
        <trans-unit id="85a0afa0fb736f9a6a3be490b62269fb855570a6" translate="yes" xml:space="preserve">
          <source>ImageInputStream.setBitOffset()</source>
          <target state="translated">ImageInputStream.setBitOffset()</target>
        </trans-unit>
        <trans-unit id="e72841dd92c4486f8ecb47461c0ae520978c01fc" translate="yes" xml:space="preserve">
          <source>ImageInputStream.setByteOrder()</source>
          <target state="translated">ImageInputStream.setByteOrder()</target>
        </trans-unit>
        <trans-unit id="cdbbc1faf80c7c46e3e14c86efeb22e4d29bd35c" translate="yes" xml:space="preserve">
          <source>ImageInputStream.skipBytes()</source>
          <target state="translated">ImageInputStream.skipBytes()</target>
        </trans-unit>
        <trans-unit id="8656b12ebd4577f365f30700a4965ac15bc88eb3" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl</source>
          <target state="translated">ImageInputStreamImpl</target>
        </trans-unit>
        <trans-unit id="e0c3696efb1099cc8eed113cd35fe056c319999b" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.checkClosed()</source>
          <target state="translated">ImageInputStreamImpl.checkClosed()</target>
        </trans-unit>
        <trans-unit id="782595d006aa0abb71963fe9baf1cc70df4da48b" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.close()</source>
          <target state="translated">ImageInputStreamImpl.close()</target>
        </trans-unit>
        <trans-unit id="a27706961795dad7d8923c0071f3c550dbffe802" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.finalize()</source>
          <target state="translated">ImageInputStreamImpl.finalize()</target>
        </trans-unit>
        <trans-unit id="9431ae756c0353adf60204204171a32b3973cc72" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.flush()</source>
          <target state="translated">ImageInputStreamImpl.flush()</target>
        </trans-unit>
        <trans-unit id="168614a85c503d2d4cc8ce626e217d7f77f8faed" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.flushBefore()</source>
          <target state="translated">ImageInputStreamImpl.flushBefore()</target>
        </trans-unit>
        <trans-unit id="981a58447ac21e8c657544ed69ffb81fa14d1e22" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.getBitOffset()</source>
          <target state="translated">ImageInputStreamImpl.getBitOffset()</target>
        </trans-unit>
        <trans-unit id="ba306fe0c0ab7cc5d661d7a915cb0e8fb1a3614e" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.getByteOrder()</source>
          <target state="translated">ImageInputStreamImpl.getByteOrder()</target>
        </trans-unit>
        <trans-unit id="e471eeed2837714dd874a503b9a005465e7d9378" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.getFlushedPosition()</source>
          <target state="translated">ImageInputStreamImpl.getFlushedPosition()</target>
        </trans-unit>
        <trans-unit id="31c54856fb3d87a3c4f706059d932317bdb5fd70" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.getStreamPosition()</source>
          <target state="translated">ImageInputStreamImpl.getStreamPosition()</target>
        </trans-unit>
        <trans-unit id="594592c73635611de1bb90869376a480b3d175fd" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.isCached()</source>
          <target state="translated">ImageInputStreamImpl.isCached()</target>
        </trans-unit>
        <trans-unit id="3e815c25865006ecb81b108a964827b1d0f3cece" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.isCachedFile()</source>
          <target state="translated">ImageInputStreamImpl.isCachedFile()</target>
        </trans-unit>
        <trans-unit id="3243c5d2ecc0d3399d30bc93ff50a264f67ba333" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.isCachedMemory()</source>
          <target state="translated">ImageInputStreamImpl.isCachedMemory()</target>
        </trans-unit>
        <trans-unit id="e5ac4ec2e26729b99cd28a078d488c8935aba2be" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.length()</source>
          <target state="translated">ImageInputStreamImpl.length()</target>
        </trans-unit>
        <trans-unit id="7bbd52b0fbf58b6798e63d8b0c87497a56df66f6" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.mark()</source>
          <target state="translated">ImageInputStreamImpl.mark()</target>
        </trans-unit>
        <trans-unit id="1f55b2cfe2b750f10111c7035e587f1ceb7d09ed" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.read()</source>
          <target state="translated">ImageInputStreamImpl.read()</target>
        </trans-unit>
        <trans-unit id="aabb5f23baeb84e5f6f3ac1ff541b929760ceb92" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readBit()</source>
          <target state="translated">ImageInputStreamImpl.readBit()</target>
        </trans-unit>
        <trans-unit id="f8e0d5cb350a27e01a0e88fcbc5dc0060ae78474" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readBits()</source>
          <target state="translated">ImageInputStreamImpl.readBits()</target>
        </trans-unit>
        <trans-unit id="e68b253d54db897da7d251ca7724e7c3894b0592" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readBoolean()</source>
          <target state="translated">ImageInputStreamImpl.readBoolean()</target>
        </trans-unit>
        <trans-unit id="79329a0abc951e56dcca4a1789034a361ae747f5" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readByte()</source>
          <target state="translated">ImageInputStreamImpl.readByte()</target>
        </trans-unit>
        <trans-unit id="71cdd7657c8e38c8c63465cad9d8fcb058772a3d" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readBytes()</source>
          <target state="translated">ImageInputStreamImpl.readBytes()</target>
        </trans-unit>
        <trans-unit id="96b166e904694f192ebd27a9749b7fab7e1eae91" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readChar()</source>
          <target state="translated">ImageInputStreamImpl.readChar()</target>
        </trans-unit>
        <trans-unit id="42ee4e564f1504e893ac6b1b35e7055913601286" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readDouble()</source>
          <target state="translated">ImageInputStreamImpl.readDouble()</target>
        </trans-unit>
        <trans-unit id="2f8d752842016666b1aedf8121b8348521d31b30" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readFloat()</source>
          <target state="translated">ImageInputStreamImpl.readFloat()</target>
        </trans-unit>
        <trans-unit id="f92136c9a37ae3d989b1909b62111e2e310a8378" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readFully()</source>
          <target state="translated">ImageInputStreamImpl.readFully()</target>
        </trans-unit>
        <trans-unit id="eb6805ccf006d0398ca358e9619d5f5eebda940b" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readInt()</source>
          <target state="translated">ImageInputStreamImpl.readInt()</target>
        </trans-unit>
        <trans-unit id="8642b232a3108c5773bc9627c92583405125e05f" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readLine()</source>
          <target state="translated">ImageInputStreamImpl.readLine()</target>
        </trans-unit>
        <trans-unit id="6f6f63ca415b0e89f8ae5c30c1a3018e595b6068" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readLong()</source>
          <target state="translated">ImageInputStreamImpl.readLong()</target>
        </trans-unit>
        <trans-unit id="b617d67507eca06216066c571114be11c0751e31" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readShort()</source>
          <target state="translated">ImageInputStreamImpl.readShort()</target>
        </trans-unit>
        <trans-unit id="698dc14620f50ae23a50d28ab1fe8525bc7b6c9d" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readUTF()</source>
          <target state="translated">ImageInputStreamImpl.readUTF()</target>
        </trans-unit>
        <trans-unit id="b5f1586569947e262ec3518385bc537415c0e03e" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readUnsignedByte()</source>
          <target state="translated">ImageInputStreamImpl.readUnsignedByte()</target>
        </trans-unit>
        <trans-unit id="d8947b30c253b0c61bc67637afb8d343cc16f7e0" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readUnsignedInt()</source>
          <target state="translated">ImageInputStreamImpl.readUnsignedInt()</target>
        </trans-unit>
        <trans-unit id="8ea1539b573be4ee8f231d4ad18a0d5f1fd114ae" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.readUnsignedShort()</source>
          <target state="translated">ImageInputStreamImpl.readUnsignedShort()</target>
        </trans-unit>
        <trans-unit id="e567969379ca63dc0a8d56046863f56c6269e1b5" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.reset()</source>
          <target state="translated">ImageInputStreamImpl.reset()</target>
        </trans-unit>
        <trans-unit id="bb704f2bb8a0ae856f08dff751400fd6014d8230" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.seek()</source>
          <target state="translated">ImageInputStreamImpl.seek()</target>
        </trans-unit>
        <trans-unit id="58977f5c2fcf07fe4e22f6971622098bbb2cf156" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.setBitOffset()</source>
          <target state="translated">ImageInputStreamImpl.setBitOffset()</target>
        </trans-unit>
        <trans-unit id="b2d11387197b1eb752c26b411519321f23b1e961" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.setByteOrder()</source>
          <target state="translated">ImageInputStreamImpl.setByteOrder()</target>
        </trans-unit>
        <trans-unit id="81cbaf9dfa780bf07efce1dbde0370337472ec57" translate="yes" xml:space="preserve">
          <source>ImageInputStreamImpl.skipBytes()</source>
          <target state="translated">ImageInputStreamImpl.skipBytes()</target>
        </trans-unit>
        <trans-unit id="6c016edb7393ee78be323cdee64306abc5c33a76" translate="yes" xml:space="preserve">
          <source>ImageInputStreamSpi</source>
          <target state="translated">ImageInputStreamSpi</target>
        </trans-unit>
        <trans-unit id="98f3c89642183c2de7b74025c9a94892a10c8290" translate="yes" xml:space="preserve">
          <source>ImageInputStreamSpi.canUseCacheFile()</source>
          <target state="translated">ImageInputStreamSpi.canUseCacheFile()</target>
        </trans-unit>
        <trans-unit id="cfc724f334540654cf7bd9bb0273b3b20fb1cab9" translate="yes" xml:space="preserve">
          <source>ImageInputStreamSpi.createInputStreamInstance()</source>
          <target state="translated">ImageInputStreamSpi.createInputStreamInstance()</target>
        </trans-unit>
        <trans-unit id="e28bb6fdf2a6fe5a11d08bbd9dabfed557c79dde" translate="yes" xml:space="preserve">
          <source>ImageInputStreamSpi.getInputClass()</source>
          <target state="translated">ImageInputStreamSpi.getInputClass()</target>
        </trans-unit>
        <trans-unit id="bab49208b3442ad088d417fd6882ece7eb22c453" translate="yes" xml:space="preserve">
          <source>ImageInputStreamSpi.needsCacheFile()</source>
          <target state="translated">ImageInputStreamSpi.needsCacheFile()</target>
        </trans-unit>
        <trans-unit id="3116998e332779eed46a3cf65c07805979ea35a6" translate="yes" xml:space="preserve">
          <source>ImageObserver</source>
          <target state="translated">ImageObserver</target>
        </trans-unit>
        <trans-unit id="83452b3370966adeb8529169778744f6e09ff6af" translate="yes" xml:space="preserve">
          <source>ImageOutputStream</source>
          <target state="translated">ImageOutputStream</target>
        </trans-unit>
        <trans-unit id="9a7340fd79bf4a3bd17e4efc378a302841865164" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.flushBefore()</source>
          <target state="translated">ImageOutputStream.flushBefore()</target>
        </trans-unit>
        <trans-unit id="96d9f9f0c87a58778def7cb4472f9e30f72c9ed1" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.write()</source>
          <target state="translated">ImageOutputStream.write()</target>
        </trans-unit>
        <trans-unit id="2a749a2ab1d342fdbe254964c94d9dc6e10d6335" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeBit()</source>
          <target state="translated">ImageOutputStream.writeBit()</target>
        </trans-unit>
        <trans-unit id="a6bd0332e894f3faebb742ce886bef1b0ca3072b" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeBits()</source>
          <target state="translated">ImageOutputStream.writeBits()</target>
        </trans-unit>
        <trans-unit id="8eea4d74a7715f2548485de45d4641de28d84d29" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeBoolean()</source>
          <target state="translated">ImageOutputStream.writeBoolean()</target>
        </trans-unit>
        <trans-unit id="340a472f842b04b86af885671257d5256986b53d" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeByte()</source>
          <target state="translated">ImageOutputStream.writeByte()</target>
        </trans-unit>
        <trans-unit id="22db935c085af8d2c472ea2849517b813ad1f3ed" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeBytes()</source>
          <target state="translated">ImageOutputStream.writeBytes()</target>
        </trans-unit>
        <trans-unit id="6d08d9de75de11b5d66b87c7b7d2d68abb4df88c" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeChar()</source>
          <target state="translated">ImageOutputStream.writeChar()</target>
        </trans-unit>
        <trans-unit id="75afc2031ad65ed5b89bec90a825f5be8fa0d014" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeChars()</source>
          <target state="translated">ImageOutputStream.writeChars()</target>
        </trans-unit>
        <trans-unit id="fb2b58ece7b590e768f813dc298c99bf314a3232" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeDouble()</source>
          <target state="translated">ImageOutputStream.writeDouble()</target>
        </trans-unit>
        <trans-unit id="b482f3b68f7be8d4a57bdd6647d17e30c247283d" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeDoubles()</source>
          <target state="translated">ImageOutputStream.writeDoubles()</target>
        </trans-unit>
        <trans-unit id="43acf80f83723f299ebf51426b7fef88628108c7" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeFloat()</source>
          <target state="translated">ImageOutputStream.writeFloat()</target>
        </trans-unit>
        <trans-unit id="42313ffd030977d4a3eadc27f5b1a50e373481aa" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeFloats()</source>
          <target state="translated">ImageOutputStream.writeFloats()</target>
        </trans-unit>
        <trans-unit id="d86afeab1a6a45ac1f3cede360cec9c35ddfa0e2" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeInt()</source>
          <target state="translated">ImageOutputStream.writeInt()</target>
        </trans-unit>
        <trans-unit id="b75d0d72ffb9a076f3698444a5c3d154adcd2744" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeInts()</source>
          <target state="translated">ImageOutputStream.writeInts()</target>
        </trans-unit>
        <trans-unit id="f4292b5040fa930bcf8f0f53bf7f055a1ac9c78a" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeLong()</source>
          <target state="translated">ImageOutputStream.writeLong()</target>
        </trans-unit>
        <trans-unit id="0246e3aa4a07aed1c640740521fc0870e0ff5c0f" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeLongs()</source>
          <target state="translated">ImageOutputStream.writeLongs()</target>
        </trans-unit>
        <trans-unit id="1f3727fa7152d18143df7ebe1ebb2c9947230c62" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeShort()</source>
          <target state="translated">ImageOutputStream.writeShort()</target>
        </trans-unit>
        <trans-unit id="491e72b4dcac099107b1db722933b0052128b231" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeShorts()</source>
          <target state="translated">ImageOutputStream.writeShorts()</target>
        </trans-unit>
        <trans-unit id="e08fcb28ace3d3e84578214b9b4d4d83bcc71a48" translate="yes" xml:space="preserve">
          <source>ImageOutputStream.writeUTF()</source>
          <target state="translated">ImageOutputStream.writeUTF()</target>
        </trans-unit>
        <trans-unit id="72b99a9a0945d72b23e4c7cd15e0ca4370caa83d" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl</source>
          <target state="translated">ImageOutputStreamImpl</target>
        </trans-unit>
        <trans-unit id="b94df9c7619840c20a9af8bb6d7976dc537c692d" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.flushBits()</source>
          <target state="translated">ImageOutputStreamImpl.flushBits()</target>
        </trans-unit>
        <trans-unit id="730f1cdbd189048de523719e5b0ff1f89fa69f1a" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.write()</source>
          <target state="translated">ImageOutputStreamImpl.write()</target>
        </trans-unit>
        <trans-unit id="f1b3f1b6c632622f8e619e2ac5fbfd01ca7c1ee5" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeBit()</source>
          <target state="translated">ImageOutputStreamImpl.writeBit()</target>
        </trans-unit>
        <trans-unit id="9393ba275c9ea1f015e3d4ab25fdde23e0ac1067" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeBits()</source>
          <target state="translated">ImageOutputStreamImpl.writeBits()</target>
        </trans-unit>
        <trans-unit id="d3c067d1d56c1470e93a5bf33fa3280efe069058" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeBoolean()</source>
          <target state="translated">ImageOutputStreamImpl.writeBoolean()</target>
        </trans-unit>
        <trans-unit id="f15ad350c4b938293d993a25eba797c8db998a3e" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeByte()</source>
          <target state="translated">ImageOutputStreamImpl.writeByte()</target>
        </trans-unit>
        <trans-unit id="095bb6cefb5354d2f7c4f0a22c12443ef62ac1dc" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeBytes()</source>
          <target state="translated">ImageOutputStreamImpl.writeBytes()</target>
        </trans-unit>
        <trans-unit id="521e6614a439aa71cfcbbacfc51409ff6ad51c36" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeChar()</source>
          <target state="translated">ImageOutputStreamImpl.writeChar()</target>
        </trans-unit>
        <trans-unit id="334dd26e9aa2141489f61cebfce3d91fd9810de8" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeChars()</source>
          <target state="translated">ImageOutputStreamImpl.writeChars()</target>
        </trans-unit>
        <trans-unit id="2c9a5b7a1ec440545f7662de460fbeadfd3d7ece" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeDouble()</source>
          <target state="translated">ImageOutputStreamImpl.writeDouble()</target>
        </trans-unit>
        <trans-unit id="e1333d7825287cc0f22a19657c00a1a290595890" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeDoubles()</source>
          <target state="translated">ImageOutputStreamImpl.writeDoubles()</target>
        </trans-unit>
        <trans-unit id="197e47ac604fffd79dd1b7217f6c18e8d617db02" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeFloat()</source>
          <target state="translated">ImageOutputStreamImpl.writeFloat()</target>
        </trans-unit>
        <trans-unit id="94642ce32c1a3ed90a2320a50906426c9bef3109" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeFloats()</source>
          <target state="translated">ImageOutputStreamImpl.writeFloats()</target>
        </trans-unit>
        <trans-unit id="cf0acbd914d5ff262a81300aa0318afe64266461" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeInt()</source>
          <target state="translated">ImageOutputStreamImpl.writeInt()</target>
        </trans-unit>
        <trans-unit id="a3cfd025a02e305b2a2830ae1b5194f4b274eed9" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeInts()</source>
          <target state="translated">ImageOutputStreamImpl.writeInts()</target>
        </trans-unit>
        <trans-unit id="dba6391684abecf926b01dfb902078ced0cfb8ca" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeLong()</source>
          <target state="translated">ImageOutputStreamImpl.writeLong()</target>
        </trans-unit>
        <trans-unit id="9e426a86c094e0adb14df7ac3b38f0e9d52c28c2" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeLongs()</source>
          <target state="translated">ImageOutputStreamImpl.writeLongs()</target>
        </trans-unit>
        <trans-unit id="0cf54f61217e13cdd0f2c560981703c79d6e0231" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeShort()</source>
          <target state="translated">ImageOutputStreamImpl.writeShort()</target>
        </trans-unit>
        <trans-unit id="c025774860a58ffe651c29b29ac3ef8721bbc953" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeShorts()</source>
          <target state="translated">ImageOutputStreamImpl.writeShorts()</target>
        </trans-unit>
        <trans-unit id="147c12a0a914540fbe428bd115e9f1f47a62611f" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamImpl.writeUTF()</source>
          <target state="translated">ImageOutputStreamImpl.writeUTF()</target>
        </trans-unit>
        <trans-unit id="5b31c596804eae9fe47d2e389a77a1a15db3fcac" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamSpi</source>
          <target state="translated">ImageOutputStreamSpi</target>
        </trans-unit>
        <trans-unit id="c41355ca3fef446e456f7414fb6307475fd139b1" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamSpi.canUseCacheFile()</source>
          <target state="translated">ImageOutputStreamSpi.canUseCacheFile()</target>
        </trans-unit>
        <trans-unit id="a6c7fcb65468a4ded2040925c5b97fb20b574f69" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamSpi.createOutputStreamInstance()</source>
          <target state="translated">ImageOutputStreamSpi.createOutputStreamInstance()</target>
        </trans-unit>
        <trans-unit id="67d7de5675588e83404da953f0e8085b1083f41d" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamSpi.getOutputClass()</source>
          <target state="translated">ImageOutputStreamSpi.getOutputClass()</target>
        </trans-unit>
        <trans-unit id="2058ca306ee8f78dfbd63327e0de312210c1b1c1" translate="yes" xml:space="preserve">
          <source>ImageOutputStreamSpi.needsCacheFile()</source>
          <target state="translated">ImageOutputStreamSpi.needsCacheFile()</target>
        </trans-unit>
        <trans-unit id="251888c3a686da692a9551719446147dd34da96c" translate="yes" xml:space="preserve">
          <source>ImageProducer</source>
          <target state="translated">ImageProducer</target>
        </trans-unit>
        <trans-unit id="cd2cd26b1dd4bf4d9188ff3707eaaa081bf1035f" translate="yes" xml:space="preserve">
          <source>ImageReadParam</source>
          <target state="translated">ImageReadParam</target>
        </trans-unit>
        <trans-unit id="1201d8d62bd34eabb029c751e075ad9c3a694230" translate="yes" xml:space="preserve">
          <source>ImageReadParam.canSetSourceRenderSize()</source>
          <target state="translated">ImageReadParam.canSetSourceRenderSize()</target>
        </trans-unit>
        <trans-unit id="7d70a5327a4b03f33e450ac9974dd7150da0cb22" translate="yes" xml:space="preserve">
          <source>ImageReadParam.getDestination()</source>
          <target state="translated">ImageReadParam.getDestination()</target>
        </trans-unit>
        <trans-unit id="56b8b8fa4c49d4b3d42080bf6e079d7e7c47736d" translate="yes" xml:space="preserve">
          <source>ImageReadParam.getDestinationBands()</source>
          <target state="translated">ImageReadParam.getDestinationBands()</target>
        </trans-unit>
        <trans-unit id="10b87be325ee80f458950abf026570aa1721b8e0" translate="yes" xml:space="preserve">
          <source>ImageReadParam.getSourceMaxProgressivePass()</source>
          <target state="translated">ImageReadParam.getSourceMaxProgressivePass()</target>
        </trans-unit>
        <trans-unit id="64baebae8df2c30bdcaa009fa90a8fafaf8374a0" translate="yes" xml:space="preserve">
          <source>ImageReadParam.getSourceMinProgressivePass()</source>
          <target state="translated">ImageReadParam.getSourceMinProgressivePass()</target>
        </trans-unit>
        <trans-unit id="2a9e30e7ab09c34d21976c697343b0ddb7fdf4c2" translate="yes" xml:space="preserve">
          <source>ImageReadParam.getSourceNumProgressivePasses()</source>
          <target state="translated">ImageReadParam.getSourceNumProgressivePasses()</target>
        </trans-unit>
        <trans-unit id="979e6351f23c4d15b32fcfc2dd1e2e42c39caf1a" translate="yes" xml:space="preserve">
          <source>ImageReadParam.getSourceRenderSize()</source>
          <target state="translated">ImageReadParam.getSourceRenderSize()</target>
        </trans-unit>
        <trans-unit id="8fa94c9268843bf28b601aec3e833b199101d137" translate="yes" xml:space="preserve">
          <source>ImageReadParam.setDestination()</source>
          <target state="translated">ImageReadParam.setDestination()</target>
        </trans-unit>
        <trans-unit id="d26f0854d8589f1ab523c1d34c410a49623f03a2" translate="yes" xml:space="preserve">
          <source>ImageReadParam.setDestinationBands()</source>
          <target state="translated">ImageReadParam.setDestinationBands()</target>
        </trans-unit>
        <trans-unit id="4a5c79c15a0e6dd8aa1340f4967dd5b96b0ea9ce" translate="yes" xml:space="preserve">
          <source>ImageReadParam.setDestinationType()</source>
          <target state="translated">ImageReadParam.setDestinationType()</target>
        </trans-unit>
        <trans-unit id="f3b2bae255bfd5a49cdea25971232f60ab5f428b" translate="yes" xml:space="preserve">
          <source>ImageReadParam.setSourceProgressivePasses()</source>
          <target state="translated">ImageReadParam.setSourceProgressivePasses()</target>
        </trans-unit>
        <trans-unit id="f81a8a635bd5c447a283fcda74554a5cf0e1a36d" translate="yes" xml:space="preserve">
          <source>ImageReadParam.setSourceRenderSize()</source>
          <target state="translated">ImageReadParam.setSourceRenderSize()</target>
        </trans-unit>
        <trans-unit id="f906495681b83a7a65361e49916ce979a0426c83" translate="yes" xml:space="preserve">
          <source>ImageReader</source>
          <target state="translated">ImageReader</target>
        </trans-unit>
        <trans-unit id="dc96d2a37589b461a1a2f4153e1a69d22416ed5b" translate="yes" xml:space="preserve">
          <source>ImageReader.abort()</source>
          <target state="translated">ImageReader.abort()</target>
        </trans-unit>
        <trans-unit id="83f2ec08c69f7b5fc978c20bd79a32f0b4f2197c" translate="yes" xml:space="preserve">
          <source>ImageReader.abortRequested()</source>
          <target state="translated">ImageReader.abortRequested()</target>
        </trans-unit>
        <trans-unit id="5ffcbeadfa0c662e8519d7f22e35f802a4161aeb" translate="yes" xml:space="preserve">
          <source>ImageReader.addIIOReadProgressListener()</source>
          <target state="translated">ImageReader.addIIOReadProgressListener()</target>
        </trans-unit>
        <trans-unit id="55ab4d1ac22f560753cab40ba690b36dc7b0e87d" translate="yes" xml:space="preserve">
          <source>ImageReader.addIIOReadUpdateListener()</source>
          <target state="translated">ImageReader.addIIOReadUpdateListener()</target>
        </trans-unit>
        <trans-unit id="00f5ad390becce52c29dd2e5c4c6ffea976f7d75" translate="yes" xml:space="preserve">
          <source>ImageReader.addIIOReadWarningListener()</source>
          <target state="translated">ImageReader.addIIOReadWarningListener()</target>
        </trans-unit>
        <trans-unit id="04557cc6b974931172aa306cd0120d6bdfcb7944" translate="yes" xml:space="preserve">
          <source>ImageReader.canReadRaster()</source>
          <target state="translated">ImageReader.canReadRaster()</target>
        </trans-unit>
        <trans-unit id="bb47920d771bacef735a7542995c7120f95f227c" translate="yes" xml:space="preserve">
          <source>ImageReader.checkReadParamBandSettings()</source>
          <target state="translated">ImageReader.checkReadParamBandSettings()</target>
        </trans-unit>
        <trans-unit id="1c6ce2ff37299628966cfe31bee7c6648fa58294" translate="yes" xml:space="preserve">
          <source>ImageReader.clearAbortRequest()</source>
          <target state="translated">ImageReader.clearAbortRequest()</target>
        </trans-unit>
        <trans-unit id="60e428b87efa48f5947edb064d44a48fefd6dc8c" translate="yes" xml:space="preserve">
          <source>ImageReader.computeRegions()</source>
          <target state="translated">ImageReader.computeRegions()</target>
        </trans-unit>
        <trans-unit id="0b02305cba48707110942e47479fd4de96aaba83" translate="yes" xml:space="preserve">
          <source>ImageReader.dispose()</source>
          <target state="translated">ImageReader.dispose()</target>
        </trans-unit>
        <trans-unit id="862f19c5fec013bdca9d3acaa7d1d02fe6e60221" translate="yes" xml:space="preserve">
          <source>ImageReader.getAspectRatio()</source>
          <target state="translated">ImageReader.getAspectRatio()</target>
        </trans-unit>
        <trans-unit id="9f7937f38c6919792f25c0c297d3c2d9560c302a" translate="yes" xml:space="preserve">
          <source>ImageReader.getAvailableLocales()</source>
          <target state="translated">ImageReader.getAvailableLocales()</target>
        </trans-unit>
        <trans-unit id="6ef2cfc3e9cee276d76912054d603565ad80e897" translate="yes" xml:space="preserve">
          <source>ImageReader.getDefaultReadParam()</source>
          <target state="translated">ImageReader.getDefaultReadParam()</target>
        </trans-unit>
        <trans-unit id="a6f7e6bef5ae2e033bf2d0309e37885b20a2a7a4" translate="yes" xml:space="preserve">
          <source>ImageReader.getDestination()</source>
          <target state="translated">ImageReader.getDestination()</target>
        </trans-unit>
        <trans-unit id="ed6f46842d3eb44cf80250063a801e8ee871b0f5" translate="yes" xml:space="preserve">
          <source>ImageReader.getFormatName()</source>
          <target state="translated">ImageReader.getFormatName()</target>
        </trans-unit>
        <trans-unit id="af5e6ef5861bb73f88c830f220e29d57f93ef484" translate="yes" xml:space="preserve">
          <source>ImageReader.getHeight()</source>
          <target state="translated">ImageReader.getHeight()</target>
        </trans-unit>
        <trans-unit id="67fc0c0f685a171c6be1b5b4630458248a66bb51" translate="yes" xml:space="preserve">
          <source>ImageReader.getImageMetadata()</source>
          <target state="translated">ImageReader.getImageMetadata()</target>
        </trans-unit>
        <trans-unit id="0cd9e56e497f979ded19cd949256048ec05a8908" translate="yes" xml:space="preserve">
          <source>ImageReader.getImageTypes()</source>
          <target state="translated">ImageReader.getImageTypes()</target>
        </trans-unit>
        <trans-unit id="89ab2b0df8dec8b194c46f9eed32ea752dcd253a" translate="yes" xml:space="preserve">
          <source>ImageReader.getInput()</source>
          <target state="translated">ImageReader.getInput()</target>
        </trans-unit>
        <trans-unit id="7645c286f114ef27413cc9252235a04024cffeba" translate="yes" xml:space="preserve">
          <source>ImageReader.getLocale()</source>
          <target state="translated">ImageReader.getLocale()</target>
        </trans-unit>
        <trans-unit id="05881ac0d7c50df1fedce4c2265168876a1dd69f" translate="yes" xml:space="preserve">
          <source>ImageReader.getMinIndex()</source>
          <target state="translated">ImageReader.getMinIndex()</target>
        </trans-unit>
        <trans-unit id="f5fb554919b40b5bf590e52fdf32545a178965ec" translate="yes" xml:space="preserve">
          <source>ImageReader.getNumImages()</source>
          <target state="translated">ImageReader.getNumImages()</target>
        </trans-unit>
        <trans-unit id="4dc313e7e6c80c0f80ea20afcf72779aad62f48d" translate="yes" xml:space="preserve">
          <source>ImageReader.getNumThumbnails()</source>
          <target state="translated">ImageReader.getNumThumbnails()</target>
        </trans-unit>
        <trans-unit id="fa51cfecd8d98b8edc0ef85e12c99e34375f3980" translate="yes" xml:space="preserve">
          <source>ImageReader.getOriginatingProvider()</source>
          <target state="translated">ImageReader.getOriginatingProvider()</target>
        </trans-unit>
        <trans-unit id="2dd35ae30620fad4265584b22f6dd0d301b80a31" translate="yes" xml:space="preserve">
          <source>ImageReader.getRawImageType()</source>
          <target state="translated">ImageReader.getRawImageType()</target>
        </trans-unit>
        <trans-unit id="772c3749de9149545c202f7bf846a91eae70bd01" translate="yes" xml:space="preserve">
          <source>ImageReader.getSourceRegion()</source>
          <target state="translated">ImageReader.getSourceRegion()</target>
        </trans-unit>
        <trans-unit id="21a53fd1b290330b6ee9001e7897cc9124608203" translate="yes" xml:space="preserve">
          <source>ImageReader.getStreamMetadata()</source>
          <target state="translated">ImageReader.getStreamMetadata()</target>
        </trans-unit>
        <trans-unit id="422bdb64a898763b81ebd4c6c0a49ffa50614262" translate="yes" xml:space="preserve">
          <source>ImageReader.getThumbnailHeight()</source>
          <target state="translated">ImageReader.getThumbnailHeight()</target>
        </trans-unit>
        <trans-unit id="2409b2e10d1ca6bc1887e2473a01d6b5ddd88d3a" translate="yes" xml:space="preserve">
          <source>ImageReader.getThumbnailWidth()</source>
          <target state="translated">ImageReader.getThumbnailWidth()</target>
        </trans-unit>
        <trans-unit id="f6079ff16724edea440c9aef05092dd180ca03e9" translate="yes" xml:space="preserve">
          <source>ImageReader.getTileGridXOffset()</source>
          <target state="translated">ImageReader.getTileGridXOffset()</target>
        </trans-unit>
        <trans-unit id="b7bed61e0f6b2e832750f5320539d86bcd8f1d73" translate="yes" xml:space="preserve">
          <source>ImageReader.getTileGridYOffset()</source>
          <target state="translated">ImageReader.getTileGridYOffset()</target>
        </trans-unit>
        <trans-unit id="a9ffe8eebbb18c47f7ab7d45c2860aeba23fe03c" translate="yes" xml:space="preserve">
          <source>ImageReader.getTileHeight()</source>
          <target state="translated">ImageReader.getTileHeight()</target>
        </trans-unit>
        <trans-unit id="c598984eea032bfe6a67df6db445eb3c61a9cec7" translate="yes" xml:space="preserve">
          <source>ImageReader.getTileWidth()</source>
          <target state="translated">ImageReader.getTileWidth()</target>
        </trans-unit>
        <trans-unit id="239b57f4d284c9ed81be32877db7ca829d6aad8c" translate="yes" xml:space="preserve">
          <source>ImageReader.getWidth()</source>
          <target state="translated">ImageReader.getWidth()</target>
        </trans-unit>
        <trans-unit id="95fb5a83ad4728cf0d19d28beb840d0ab015cfc3" translate="yes" xml:space="preserve">
          <source>ImageReader.hasThumbnails()</source>
          <target state="translated">ImageReader.hasThumbnails()</target>
        </trans-unit>
        <trans-unit id="6a535c8397fa10b6b5c78d496c964f2c8684453b" translate="yes" xml:space="preserve">
          <source>ImageReader.isIgnoringMetadata()</source>
          <target state="translated">ImageReader.isIgnoringMetadata()</target>
        </trans-unit>
        <trans-unit id="fd46f791b3df8fda404201934f2e552fdc7786d2" translate="yes" xml:space="preserve">
          <source>ImageReader.isImageTiled()</source>
          <target state="translated">ImageReader.isImageTiled()</target>
        </trans-unit>
        <trans-unit id="e3b888b29f4f77e432159cab9ac83c2bdeee6f78" translate="yes" xml:space="preserve">
          <source>ImageReader.isRandomAccessEasy()</source>
          <target state="translated">ImageReader.isRandomAccessEasy()</target>
        </trans-unit>
        <trans-unit id="21cb4aa283e4998ab3cc4eba6b03f638b2206274" translate="yes" xml:space="preserve">
          <source>ImageReader.isSeekForwardOnly()</source>
          <target state="translated">ImageReader.isSeekForwardOnly()</target>
        </trans-unit>
        <trans-unit id="83405980505714fab061b5e73072682831fd1099" translate="yes" xml:space="preserve">
          <source>ImageReader.processImageComplete()</source>
          <target state="translated">ImageReader.processImageComplete()</target>
        </trans-unit>
        <trans-unit id="a825cd399a303adaba67bb2d44903c1156834b5d" translate="yes" xml:space="preserve">
          <source>ImageReader.processImageProgress()</source>
          <target state="translated">ImageReader.processImageProgress()</target>
        </trans-unit>
        <trans-unit id="2f5606c190b01674cb99b14e8bfbcbb7c7a4962b" translate="yes" xml:space="preserve">
          <source>ImageReader.processImageStarted()</source>
          <target state="translated">ImageReader.processImageStarted()</target>
        </trans-unit>
        <trans-unit id="12d63aab61b5bc5958d9dfef431913f87fe28d16" translate="yes" xml:space="preserve">
          <source>ImageReader.processImageUpdate()</source>
          <target state="translated">ImageReader.processImageUpdate()</target>
        </trans-unit>
        <trans-unit id="dfe1c122805842bfe5b3f20a7db22b48cd761796" translate="yes" xml:space="preserve">
          <source>ImageReader.processPassComplete()</source>
          <target state="translated">ImageReader.processPassComplete()</target>
        </trans-unit>
        <trans-unit id="f4a909463f9e14f96174182c1794c53f7d83a2e4" translate="yes" xml:space="preserve">
          <source>ImageReader.processPassStarted()</source>
          <target state="translated">ImageReader.processPassStarted()</target>
        </trans-unit>
        <trans-unit id="1ccff571a4dfc2b5085f661fb338eb1acc3e5c92" translate="yes" xml:space="preserve">
          <source>ImageReader.processReadAborted()</source>
          <target state="translated">ImageReader.processReadAborted()</target>
        </trans-unit>
        <trans-unit id="e5dd31c7a713893ea8ac32e5e37bb4404d8083a7" translate="yes" xml:space="preserve">
          <source>ImageReader.processSequenceComplete()</source>
          <target state="translated">ImageReader.processSequenceComplete()</target>
        </trans-unit>
        <trans-unit id="ef653be7cb0793be5d89120339dab603586d9f46" translate="yes" xml:space="preserve">
          <source>ImageReader.processSequenceStarted()</source>
          <target state="translated">ImageReader.processSequenceStarted()</target>
        </trans-unit>
        <trans-unit id="e0ec2514327f115f940fac18bbab7e79c4467cb5" translate="yes" xml:space="preserve">
          <source>ImageReader.processThumbnailComplete()</source>
          <target state="translated">ImageReader.processThumbnailComplete()</target>
        </trans-unit>
        <trans-unit id="c034d8d050941821b2eeb39dcf96c2097bc552d1" translate="yes" xml:space="preserve">
          <source>ImageReader.processThumbnailPassComplete()</source>
          <target state="translated">ImageReader.processThumbnailPassComplete()</target>
        </trans-unit>
        <trans-unit id="27bd8f1a631567b196e414ce17394485cb3b4a05" translate="yes" xml:space="preserve">
          <source>ImageReader.processThumbnailPassStarted()</source>
          <target state="translated">ImageReader.processThumbnailPassStarted()</target>
        </trans-unit>
        <trans-unit id="47060488d6f55ce0e446c835d52343cebce515e9" translate="yes" xml:space="preserve">
          <source>ImageReader.processThumbnailProgress()</source>
          <target state="translated">ImageReader.processThumbnailProgress()</target>
        </trans-unit>
        <trans-unit id="5b89cffe604158032bd2f4456be04fcfd1fc7091" translate="yes" xml:space="preserve">
          <source>ImageReader.processThumbnailStarted()</source>
          <target state="translated">ImageReader.processThumbnailStarted()</target>
        </trans-unit>
        <trans-unit id="f9c9ad260fb38f12182956612b850bbcf23c0ed4" translate="yes" xml:space="preserve">
          <source>ImageReader.processThumbnailUpdate()</source>
          <target state="translated">ImageReader.processThumbnailUpdate()</target>
        </trans-unit>
        <trans-unit id="5b2f86a5e49e056589fa20c70b320b343f82a972" translate="yes" xml:space="preserve">
          <source>ImageReader.processWarningOccurred()</source>
          <target state="translated">ImageReader.processWarningOccurred()</target>
        </trans-unit>
        <trans-unit id="402b088f594fb72f39498c4a355c4ffed0b74070" translate="yes" xml:space="preserve">
          <source>ImageReader.read()</source>
          <target state="translated">ImageReader.read()</target>
        </trans-unit>
        <trans-unit id="ee5a1f319268437ff8387bb0981f3fe47eb57f8a" translate="yes" xml:space="preserve">
          <source>ImageReader.readAll()</source>
          <target state="translated">ImageReader.readAll()</target>
        </trans-unit>
        <trans-unit id="22a5fda3d9b4d4ee2fa0bf74803c2f5115d9ff2d" translate="yes" xml:space="preserve">
          <source>ImageReader.readAsRenderedImage()</source>
          <target state="translated">ImageReader.readAsRenderedImage()</target>
        </trans-unit>
        <trans-unit id="ae9330919034f80a8c2d87c450e681a2a8053aa3" translate="yes" xml:space="preserve">
          <source>ImageReader.readRaster()</source>
          <target state="translated">ImageReader.readRaster()</target>
        </trans-unit>
        <trans-unit id="a09688ff6526526ab7a6038bdd4141c6afe8f1f6" translate="yes" xml:space="preserve">
          <source>ImageReader.readThumbnail()</source>
          <target state="translated">ImageReader.readThumbnail()</target>
        </trans-unit>
        <trans-unit id="3c89f7d36bd8010987131b228345a25d066b76e9" translate="yes" xml:space="preserve">
          <source>ImageReader.readTile()</source>
          <target state="translated">ImageReader.readTile()</target>
        </trans-unit>
        <trans-unit id="8c813dd87cf577e7d6234c47a677676477d95a8a" translate="yes" xml:space="preserve">
          <source>ImageReader.readTileRaster()</source>
          <target state="translated">ImageReader.readTileRaster()</target>
        </trans-unit>
        <trans-unit id="64d3eb2a5d9017a4f0b5f5bbbfdf1c8261f95dbf" translate="yes" xml:space="preserve">
          <source>ImageReader.readerSupportsThumbnails()</source>
          <target state="translated">ImageReader.readerSupportsThumbnails()</target>
        </trans-unit>
        <trans-unit id="099fd73475427f29d3f49fc033fbe68b5e0622e2" translate="yes" xml:space="preserve">
          <source>ImageReader.removeAllIIOReadProgressListeners()</source>
          <target state="translated">ImageReader.removeAllIIOReadProgressListeners()</target>
        </trans-unit>
        <trans-unit id="7df56151d938be64315fcccd83f9d37acf0e82a4" translate="yes" xml:space="preserve">
          <source>ImageReader.removeAllIIOReadUpdateListeners()</source>
          <target state="translated">ImageReader.removeAllIIOReadUpdateListeners()</target>
        </trans-unit>
        <trans-unit id="8b915f705163455fb8a9a23532fec9a43b3d29d5" translate="yes" xml:space="preserve">
          <source>ImageReader.removeAllIIOReadWarningListeners()</source>
          <target state="translated">ImageReader.removeAllIIOReadWarningListeners()</target>
        </trans-unit>
        <trans-unit id="07c92fd388eedbf20e32ad9dc36615cd6bbae20f" translate="yes" xml:space="preserve">
          <source>ImageReader.removeIIOReadProgressListener()</source>
          <target state="translated">ImageReader.removeIIOReadProgressListener()</target>
        </trans-unit>
        <trans-unit id="e9722b3a2f5391a950193f30cd3d54628879aaa6" translate="yes" xml:space="preserve">
          <source>ImageReader.removeIIOReadUpdateListener()</source>
          <target state="translated">ImageReader.removeIIOReadUpdateListener()</target>
        </trans-unit>
        <trans-unit id="023ab851da16bf3a07c58ef101014a670cd932b0" translate="yes" xml:space="preserve">
          <source>ImageReader.removeIIOReadWarningListener()</source>
          <target state="translated">ImageReader.removeIIOReadWarningListener()</target>
        </trans-unit>
        <trans-unit id="e4e83add06a2b48e9526683b506060ae5ed77130" translate="yes" xml:space="preserve">
          <source>ImageReader.reset()</source>
          <target state="translated">ImageReader.reset()</target>
        </trans-unit>
        <trans-unit id="dbdc25a3690bbe4534e5dc416172e1d0ea1288a8" translate="yes" xml:space="preserve">
          <source>ImageReader.setInput()</source>
          <target state="translated">ImageReader.setInput()</target>
        </trans-unit>
        <trans-unit id="23ceac5a96e27350a57962919a976aeb9bfb567a" translate="yes" xml:space="preserve">
          <source>ImageReader.setLocale()</source>
          <target state="translated">ImageReader.setLocale()</target>
        </trans-unit>
        <trans-unit id="376e41ebaa573602896e8d479c0176731174559e" translate="yes" xml:space="preserve">
          <source>ImageReaderSpi</source>
          <target state="translated">ImageReaderSpi</target>
        </trans-unit>
        <trans-unit id="ac7dbd0a753e7ac2ff7335fba8639219adcd8713" translate="yes" xml:space="preserve">
          <source>ImageReaderSpi.canDecodeInput()</source>
          <target state="translated">ImageReaderSpi.canDecodeInput()</target>
        </trans-unit>
        <trans-unit id="3c7dcc0f3b62f34c44289be9aad680842dc8c4ed" translate="yes" xml:space="preserve">
          <source>ImageReaderSpi.createReaderInstance()</source>
          <target state="translated">ImageReaderSpi.createReaderInstance()</target>
        </trans-unit>
        <trans-unit id="50806e3d08c420c4abfcbe7facfd3dc09ec03dce" translate="yes" xml:space="preserve">
          <source>ImageReaderSpi.getImageWriterSpiNames()</source>
          <target state="translated">ImageReaderSpi.getImageWriterSpiNames()</target>
        </trans-unit>
        <trans-unit id="cefb63caddb366bd1eb1c31f48a0ab71564a4c84" translate="yes" xml:space="preserve">
          <source>ImageReaderSpi.getInputTypes()</source>
          <target state="translated">ImageReaderSpi.getInputTypes()</target>
        </trans-unit>
        <trans-unit id="d3136c51d01b4b0b3b305ef950d1ad5a92943e5a" translate="yes" xml:space="preserve">
          <source>ImageReaderSpi.isOwnReader()</source>
          <target state="translated">ImageReaderSpi.isOwnReader()</target>
        </trans-unit>
        <trans-unit id="3443fa6fc0a7963d5ead490360966c6f8774c754" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi</source>
          <target state="translated">ImageReaderWriterSpi</target>
        </trans-unit>
        <trans-unit id="393233988cc33bb6fba0cc35469857ee9f1a8d7f" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getExtraImageMetadataFormatNames()</source>
          <target state="translated">ImageReaderWriterSpi.getExtraImageMetadataFormatNames()</target>
        </trans-unit>
        <trans-unit id="c4fb202455044529cf3c4e4612f21afe062e4963" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getExtraStreamMetadataFormatNames()</source>
          <target state="translated">ImageReaderWriterSpi.getExtraStreamMetadataFormatNames()</target>
        </trans-unit>
        <trans-unit id="48b2bf826dd931098ac161cd8ab73455652f7bb1" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getFileSuffixes()</source>
          <target state="translated">ImageReaderWriterSpi.getFileSuffixes()</target>
        </trans-unit>
        <trans-unit id="345e065fd098396a0dd7c5ef0358fada7b3afa62" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getFormatNames()</source>
          <target state="translated">ImageReaderWriterSpi.getFormatNames()</target>
        </trans-unit>
        <trans-unit id="df48f7d071dd4a2d7c1049cb61f609462a3abaa4" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getImageMetadataFormat()</source>
          <target state="translated">ImageReaderWriterSpi.getImageMetadataFormat()</target>
        </trans-unit>
        <trans-unit id="7b85260052834d518879df691ee7bd10990c050c" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getMIMETypes()</source>
          <target state="translated">ImageReaderWriterSpi.getMIMETypes()</target>
        </trans-unit>
        <trans-unit id="a7c7658657946362cacb3a50d22d77b43b3100bd" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getNativeImageMetadataFormatName()</source>
          <target state="translated">ImageReaderWriterSpi.getNativeImageMetadataFormatName()</target>
        </trans-unit>
        <trans-unit id="a2e2fc9fffc6df64409092179b1f4bad5625f480" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getNativeStreamMetadataFormatName()</source>
          <target state="translated">ImageReaderWriterSpi.getNativeStreamMetadataFormatName()</target>
        </trans-unit>
        <trans-unit id="0b328ac0a7c07da6d3ad5bc66a4afd80f7610bd1" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getPluginClassName()</source>
          <target state="translated">ImageReaderWriterSpi.getPluginClassName()</target>
        </trans-unit>
        <trans-unit id="a3cfa123b91136daa887bb526626487cfaaa1409" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.getStreamMetadataFormat()</source>
          <target state="translated">ImageReaderWriterSpi.getStreamMetadataFormat()</target>
        </trans-unit>
        <trans-unit id="7ac0b3089b0a649caccc4374df94fb3e823364b6" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.isStandardImageMetadataFormatSupported()</source>
          <target state="translated">ImageReaderWriterSpi.isStandardImageMetadataFormatSupported()</target>
        </trans-unit>
        <trans-unit id="7454ccb9648639eac2c96414321e87ec66e98786" translate="yes" xml:space="preserve">
          <source>ImageReaderWriterSpi.isStandardStreamMetadataFormatSupported()</source>
          <target state="translated">ImageReaderWriterSpi.isStandardStreamMetadataFormatSupported()</target>
        </trans-unit>
        <trans-unit id="7074989e970140ccbe5497322f7c8cef8fe1663a" translate="yes" xml:space="preserve">
          <source>ImageTranscoder</source>
          <target state="translated">ImageTranscoder</target>
        </trans-unit>
        <trans-unit id="b65c3add20132f879aa036db292c79a29d3ca488" translate="yes" xml:space="preserve">
          <source>ImageTranscoder.convertImageMetadata()</source>
          <target state="translated">ImageTranscoder.convertImageMetadata()</target>
        </trans-unit>
        <trans-unit id="877dcd3940ee4c1f24efb96f1bd64897c4963bce" translate="yes" xml:space="preserve">
          <source>ImageTranscoder.convertStreamMetadata()</source>
          <target state="translated">ImageTranscoder.convertStreamMetadata()</target>
        </trans-unit>
        <trans-unit id="34cb2653707bc3d390fb96709f633289b6833ab3" translate="yes" xml:space="preserve">
          <source>ImageTranscoderSpi</source>
          <target state="translated">ImageTranscoderSpi</target>
        </trans-unit>
        <trans-unit id="7dcf7fb9441e9be7a2d69c7af23e41cb047e93e2" translate="yes" xml:space="preserve">
          <source>ImageTranscoderSpi.createTranscoderInstance()</source>
          <target state="translated">ImageTranscoderSpi.createTranscoderInstance()</target>
        </trans-unit>
        <trans-unit id="397cb3241db131e36b52f8ecc780c8867166595e" translate="yes" xml:space="preserve">
          <source>ImageTranscoderSpi.getReaderServiceProviderName()</source>
          <target state="translated">ImageTranscoderSpi.getReaderServiceProviderName()</target>
        </trans-unit>
        <trans-unit id="34b0abd472106b1013e774590a3046f282e9a71b" translate="yes" xml:space="preserve">
          <source>ImageTranscoderSpi.getWriterServiceProviderName()</source>
          <target state="translated">ImageTranscoderSpi.getWriterServiceProviderName()</target>
        </trans-unit>
        <trans-unit id="bf50296a873ae59a7d7778a3ed242c052be43098" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier</source>
          <target state="translated">ImageTypeSpecifier</target>
        </trans-unit>
        <trans-unit id="8567bfd1b3de238aea08d0617373266b768a64cd" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.createBanded()</source>
          <target state="translated">ImageTypeSpecifier.createBanded()</target>
        </trans-unit>
        <trans-unit id="6a0fae9470c6e2ba3648f004192b22c9a6f30ea6" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.createBufferedImage()</source>
          <target state="translated">ImageTypeSpecifier.createBufferedImage()</target>
        </trans-unit>
        <trans-unit id="c9eea4554eb312780cc7b1c2ae286a32c7fa59e2" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.createFromBufferedImageType()</source>
          <target state="translated">ImageTypeSpecifier.createFromBufferedImageType()</target>
        </trans-unit>
        <trans-unit id="d711b829e0890002b2a91a880e4e25e63fda3730" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.createFromRenderedImage()</source>
          <target state="translated">ImageTypeSpecifier.createFromRenderedImage()</target>
        </trans-unit>
        <trans-unit id="a0ea04c2125a810758a9582b6f48810c6c8b8089" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.createGrayscale()</source>
          <target state="translated">ImageTypeSpecifier.createGrayscale()</target>
        </trans-unit>
        <trans-unit id="fc83b2d72b5153f93778d0864dad26c5e7097c5b" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.createIndexed()</source>
          <target state="translated">ImageTypeSpecifier.createIndexed()</target>
        </trans-unit>
        <trans-unit id="97badba223b73a028a6dd43f25ca5d9071a9fe30" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.createInterleaved()</source>
          <target state="translated">ImageTypeSpecifier.createInterleaved()</target>
        </trans-unit>
        <trans-unit id="ae499dfc3b95f67fe6d966d7c9687c98ade3face" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.createPacked()</source>
          <target state="translated">ImageTypeSpecifier.createPacked()</target>
        </trans-unit>
        <trans-unit id="e8360d73a22bf926157c8f48eba9af4d29fedac4" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.equals()</source>
          <target state="translated">ImageTypeSpecifier.equals()</target>
        </trans-unit>
        <trans-unit id="d7b571daa3f9bb6c2031b7ef1d881e74fdd1d4ff" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.getBitsPerBand()</source>
          <target state="translated">ImageTypeSpecifier.getBitsPerBand()</target>
        </trans-unit>
        <trans-unit id="b8c286b8d4bde28e992024df5b5a8ed7f3edefca" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.getBufferedImageType()</source>
          <target state="translated">ImageTypeSpecifier.getBufferedImageType()</target>
        </trans-unit>
        <trans-unit id="1a6bf2a63f0739c1077b3e3098e53fcef1ae1ced" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.getColorModel()</source>
          <target state="translated">ImageTypeSpecifier.getColorModel()</target>
        </trans-unit>
        <trans-unit id="e66273a7d655626df06f98d5dd65e6ecdb55ed63" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.getNumBands()</source>
          <target state="translated">ImageTypeSpecifier.getNumBands()</target>
        </trans-unit>
        <trans-unit id="f829597101acf9d5743e4311e6294f51d12d3c46" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.getNumComponents()</source>
          <target state="translated">ImageTypeSpecifier.getNumComponents()</target>
        </trans-unit>
        <trans-unit id="40217a206fe4c99da358dbb01869b89d042d7f68" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.getSampleModel()</source>
          <target state="translated">ImageTypeSpecifier.getSampleModel()</target>
        </trans-unit>
        <trans-unit id="9476b6b5282eef57fb6d8642e44cd44dc849fdb2" translate="yes" xml:space="preserve">
          <source>ImageTypeSpecifier.hashCode()</source>
          <target state="translated">ImageTypeSpecifier.hashCode()</target>
        </trans-unit>
        <trans-unit id="2c29b257caed91d39e611e60c5698f251c7e46a7" translate="yes" xml:space="preserve">
          <source>ImageView</source>
          <target state="translated">ImageView</target>
        </trans-unit>
        <trans-unit id="07683084bc9eafadf7bb5ab59817c271f28e7ca5" translate="yes" xml:space="preserve">
          <source>ImageWriteParam</source>
          <target state="translated">ImageWriteParam</target>
        </trans-unit>
        <trans-unit id="6dc3171d7ef8bffe69ca5d3a9f3dab7f36980640" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.canOffsetTiles()</source>
          <target state="translated">ImageWriteParam.canOffsetTiles()</target>
        </trans-unit>
        <trans-unit id="475e8299763b3f808fea8a780162d768a366114a" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.canWriteCompressed()</source>
          <target state="translated">ImageWriteParam.canWriteCompressed()</target>
        </trans-unit>
        <trans-unit id="bd57676b35d6d2d71f22ae6fa059ab875cb75579" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.canWriteProgressive()</source>
          <target state="translated">ImageWriteParam.canWriteProgressive()</target>
        </trans-unit>
        <trans-unit id="99be13b9ee21eb767ed6c1f05abca26887b0d158" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.canWriteTiles()</source>
          <target state="translated">ImageWriteParam.canWriteTiles()</target>
        </trans-unit>
        <trans-unit id="2e9f75633cc6ca3dc8df3258ec1106f8a88042a5" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getBitRate()</source>
          <target state="translated">ImageWriteParam.getBitRate()</target>
        </trans-unit>
        <trans-unit id="b3885e99ad3bdca8a00ac5ba3bb8a9943d565224" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getCompressionMode()</source>
          <target state="translated">ImageWriteParam.getCompressionMode()</target>
        </trans-unit>
        <trans-unit id="61121fff18c829b95668813fe016c042a1cc4255" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getCompressionQuality()</source>
          <target state="translated">ImageWriteParam.getCompressionQuality()</target>
        </trans-unit>
        <trans-unit id="6babb304bcc35a37b4fa5ae725e4416c07d39b8c" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getCompressionQualityDescriptions()</source>
          <target state="translated">ImageWriteParam.getCompressionQualityDescriptions()</target>
        </trans-unit>
        <trans-unit id="1bc463905c78e183d00029b667c84948a25dcf46" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getCompressionQualityValues()</source>
          <target state="translated">ImageWriteParam.getCompressionQualityValues()</target>
        </trans-unit>
        <trans-unit id="7bce38049e7b015c9210d033a761c00397269971" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getCompressionType()</source>
          <target state="translated">ImageWriteParam.getCompressionType()</target>
        </trans-unit>
        <trans-unit id="120fd5386b558bae7b698d70df640560e01387a5" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getCompressionTypes()</source>
          <target state="translated">ImageWriteParam.getCompressionTypes()</target>
        </trans-unit>
        <trans-unit id="ca298a4496ff7f080b2ceb35fef7ebd4f453e6a1" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getLocale()</source>
          <target state="translated">ImageWriteParam.getLocale()</target>
        </trans-unit>
        <trans-unit id="7c44903cef90cb8b271db6fe029b03bcacde7152" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getLocalizedCompressionTypeName()</source>
          <target state="translated">ImageWriteParam.getLocalizedCompressionTypeName()</target>
        </trans-unit>
        <trans-unit id="f323ca52d15633b8524d32324c152c53fb27584b" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getPreferredTileSizes()</source>
          <target state="translated">ImageWriteParam.getPreferredTileSizes()</target>
        </trans-unit>
        <trans-unit id="912209f5a4b1d009431bef6c30e73e483a5ea36d" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getProgressiveMode()</source>
          <target state="translated">ImageWriteParam.getProgressiveMode()</target>
        </trans-unit>
        <trans-unit id="f02a967bd40a471af171d11100a9bf989e6b753b" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getTileGridXOffset()</source>
          <target state="translated">ImageWriteParam.getTileGridXOffset()</target>
        </trans-unit>
        <trans-unit id="b688c968cc015c550840729aef049e208a474759" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getTileGridYOffset()</source>
          <target state="translated">ImageWriteParam.getTileGridYOffset()</target>
        </trans-unit>
        <trans-unit id="223ba30a3d8d30ac19b4c024ed256ee13f3b5a0b" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getTileHeight()</source>
          <target state="translated">ImageWriteParam.getTileHeight()</target>
        </trans-unit>
        <trans-unit id="c8536380edb0accf3360e06ba7d3b95289337625" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getTileWidth()</source>
          <target state="translated">ImageWriteParam.getTileWidth()</target>
        </trans-unit>
        <trans-unit id="300d303fcb42fea0bab918d263d0cb51f641b271" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.getTilingMode()</source>
          <target state="translated">ImageWriteParam.getTilingMode()</target>
        </trans-unit>
        <trans-unit id="4df72fb263a5522f7a874ac051fd5eaff93c839b" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.isCompressionLossless()</source>
          <target state="translated">ImageWriteParam.isCompressionLossless()</target>
        </trans-unit>
        <trans-unit id="8fff1e955237d51ee22d2e2afa3e834707d92156" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.setCompressionMode()</source>
          <target state="translated">ImageWriteParam.setCompressionMode()</target>
        </trans-unit>
        <trans-unit id="8450501a9c81e824c9b19f0ace510839d247289b" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.setCompressionQuality()</source>
          <target state="translated">ImageWriteParam.setCompressionQuality()</target>
        </trans-unit>
        <trans-unit id="ef6e2c0065a88138164685c22b362043d944b36e" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.setCompressionType()</source>
          <target state="translated">ImageWriteParam.setCompressionType()</target>
        </trans-unit>
        <trans-unit id="885029e5b6f663d0db40574b49c292996c41bb83" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.setProgressiveMode()</source>
          <target state="translated">ImageWriteParam.setProgressiveMode()</target>
        </trans-unit>
        <trans-unit id="0f5c357e718859d4ab4fcb8954692487ec570f9e" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.setTiling()</source>
          <target state="translated">ImageWriteParam.setTiling()</target>
        </trans-unit>
        <trans-unit id="3573442ec6942f8378ae4ae34a30e19a64ada6bf" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.setTilingMode()</source>
          <target state="translated">ImageWriteParam.setTilingMode()</target>
        </trans-unit>
        <trans-unit id="b1f9535946bbf40d49d701cdb7851551f5d1f445" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.unsetCompression()</source>
          <target state="translated">ImageWriteParam.unsetCompression()</target>
        </trans-unit>
        <trans-unit id="1685ca130d8e5f51d7594294aa05354251b83e47" translate="yes" xml:space="preserve">
          <source>ImageWriteParam.unsetTiling()</source>
          <target state="translated">ImageWriteParam.unsetTiling()</target>
        </trans-unit>
        <trans-unit id="5fba1640e942b7ec12607cb762460e194c6ddaf0" translate="yes" xml:space="preserve">
          <source>ImageWriter</source>
          <target state="translated">ImageWriter</target>
        </trans-unit>
        <trans-unit id="3f598a742e8fdc592bed4e3edd80ceccd1832c25" translate="yes" xml:space="preserve">
          <source>ImageWriter.abort()</source>
          <target state="translated">ImageWriter.abort()</target>
        </trans-unit>
        <trans-unit id="7d7721ffd2b23cd8f347cc9e8386027c9b7c31fb" translate="yes" xml:space="preserve">
          <source>ImageWriter.abortRequested()</source>
          <target state="translated">ImageWriter.abortRequested()</target>
        </trans-unit>
        <trans-unit id="e4b4813b91ba24ef180c41de0e405ab953b793e6" translate="yes" xml:space="preserve">
          <source>ImageWriter.addIIOWriteProgressListener()</source>
          <target state="translated">ImageWriter.addIIOWriteProgressListener()</target>
        </trans-unit>
        <trans-unit id="d1dba3c86a102bb8a27c019a2e1862faa82b8c4d" translate="yes" xml:space="preserve">
          <source>ImageWriter.addIIOWriteWarningListener()</source>
          <target state="translated">ImageWriter.addIIOWriteWarningListener()</target>
        </trans-unit>
        <trans-unit id="88ef5be0c1a01698599bd1744b79b4b0acdba7aa" translate="yes" xml:space="preserve">
          <source>ImageWriter.canInsertEmpty()</source>
          <target state="translated">ImageWriter.canInsertEmpty()</target>
        </trans-unit>
        <trans-unit id="5d9932c3c55f9a93b56c054ab70bfaa81233e682" translate="yes" xml:space="preserve">
          <source>ImageWriter.canInsertImage()</source>
          <target state="translated">ImageWriter.canInsertImage()</target>
        </trans-unit>
        <trans-unit id="c55fd73eef7cec45a0476aedae00b5d2c0c5fe1a" translate="yes" xml:space="preserve">
          <source>ImageWriter.canRemoveImage()</source>
          <target state="translated">ImageWriter.canRemoveImage()</target>
        </trans-unit>
        <trans-unit id="077828fc76e1b686cb8e443e6552931f5f8ccbee" translate="yes" xml:space="preserve">
          <source>ImageWriter.canReplaceImageMetadata()</source>
          <target state="translated">ImageWriter.canReplaceImageMetadata()</target>
        </trans-unit>
        <trans-unit id="dde6bf583032f420007ff04df4ea48b393adab68" translate="yes" xml:space="preserve">
          <source>ImageWriter.canReplacePixels()</source>
          <target state="translated">ImageWriter.canReplacePixels()</target>
        </trans-unit>
        <trans-unit id="8219df68c104673c9948072c620d4c4be6366647" translate="yes" xml:space="preserve">
          <source>ImageWriter.canReplaceStreamMetadata()</source>
          <target state="translated">ImageWriter.canReplaceStreamMetadata()</target>
        </trans-unit>
        <trans-unit id="702f7f8bb240a638dfe12a43e4fba5d6f190ce79" translate="yes" xml:space="preserve">
          <source>ImageWriter.canWriteEmpty()</source>
          <target state="translated">ImageWriter.canWriteEmpty()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
