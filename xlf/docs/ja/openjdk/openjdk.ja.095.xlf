<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="08635b4d2c31b178cab0dff6331454a2ce0e3829" translate="yes" xml:space="preserve">
          <source>For class JobSheets and any vendor-defined subclasses, the category is class JobSheets itself.</source>
          <target state="translated">クラスJobSheetsと任意のベンダ定義のサブクラスについては、カテゴリはクラスJobSheetsそのものです。</target>
        </trans-unit>
        <trans-unit id="71446d47b48784e7ff553bd8da1658389b5d2f23" translate="yes" xml:space="preserve">
          <source>For class JobSheets and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-sheets&quot;&lt;/code&gt;.</source>
          <target state="translated">JobSheetsクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-sheets&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a8170f7f0ffca7b963fce46f1c79886b100ded91" translate="yes" xml:space="preserve">
          <source>For class JobState and any vendor-defined subclasses, the category is class JobState itself.</source>
          <target state="translated">クラス JobState と任意のベンダ定義のサブクラスの場合、カテゴリはクラス JobState 自体となります。</target>
        </trans-unit>
        <trans-unit id="de1cfc9b5e2eca0387a6cbf6b9671b5e0909f312" translate="yes" xml:space="preserve">
          <source>For class JobState and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-state&quot;&lt;/code&gt;.</source>
          <target state="translated">JobStateクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-state&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="653376caf1a3418e9063f33ff2fe20a57da04c8f" translate="yes" xml:space="preserve">
          <source>For class JobStateReason and any vendor-defined subclasses, the category is class JobStateReason itself.</source>
          <target state="translated">クラス JobStateReason と任意のベンダ定義のサブクラスの場合、カテゴリはクラス JobStateReason 自体となります。</target>
        </trans-unit>
        <trans-unit id="b3ddae2ef6f7432cf73b5be9105ad4ecf53afcd2" translate="yes" xml:space="preserve">
          <source>For class JobStateReason and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;job-state-reason&quot;&lt;/code&gt;.</source>
          <target state="translated">JobStateReasonクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-state-reason&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="dfbdbe2790acae32d23312b21eddd8d7e025518d" translate="yes" xml:space="preserve">
          <source>For class JobStateReasons, the category is class JobStateReasons itself.</source>
          <target state="translated">class JobStateReasonsの場合、カテゴリはclass JobStateReasonsそのものです。</target>
        </trans-unit>
        <trans-unit id="23baf7c64ea9b95a67a83036824005151d4ee4ad" translate="yes" xml:space="preserve">
          <source>For class JobStateReasons, the category name is &lt;code&gt;&quot;job-state-reasons&quot;&lt;/code&gt;.</source>
          <target state="translated">JobStateReasonsクラスの場合、カテゴリ名は &lt;code&gt;&quot;job-state-reasons&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="76e305ec9df07083f4a03bce58c310f04a069567" translate="yes" xml:space="preserve">
          <source>For class Media and any vendor-defined subclasses, the category is class Media itself.</source>
          <target state="translated">クラス・メディアおよびベンダー定義のサブクラスの場合、カテゴリはクラス・メディアそのものです。</target>
        </trans-unit>
        <trans-unit id="63aac2809d48a40719da92a486aca03ea048211a" translate="yes" xml:space="preserve">
          <source>For class Media and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;media&quot;&lt;/code&gt;.</source>
          <target state="translated">Mediaクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;media&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1eebe8d13bec04bb83fd3cdedb183d88549f7716" translate="yes" xml:space="preserve">
          <source>For class MediaPrintableArea, the category is class MediaPrintableArea itself.</source>
          <target state="translated">クラスMediaPrintableAreaの場合、カテゴリはクラスMediaPrintableAreaそのものです。</target>
        </trans-unit>
        <trans-unit id="6f3383a496f3ced46a73b82b0d97aa06701b296e" translate="yes" xml:space="preserve">
          <source>For class MediaPrintableArea, the category name is &lt;code&gt;&quot;media-printable-area&quot;&lt;/code&gt;.</source>
          <target state="translated">MediaPrintableAreaクラスの場合、カテゴリ名は &lt;code&gt;&quot;media-printable-area&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b16bb9bb31c348614af9361198929e0e4c9e3d75" translate="yes" xml:space="preserve">
          <source>For class MediaSize and any vendor-defined subclasses, the category is class MediaSize itself.</source>
          <target state="translated">クラス MediaSize およびベンダー定義のサブクラスの場合、カテゴリはクラス MediaSize 自体となります。</target>
        </trans-unit>
        <trans-unit id="dcaa0b98dfb736343dba9f90ceee28a35402fb0b" translate="yes" xml:space="preserve">
          <source>For class MediaSize and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;media-size&quot;&lt;/code&gt;.</source>
          <target state="translated">MediaSizeクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;media-size&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c94b84051032fff8f407be040afd8b908718b0e5" translate="yes" xml:space="preserve">
          <source>For class MultipleDocumentHandling and any vendor-defined subclasses, the category is class MultipleDocumentHandling itself.</source>
          <target state="translated">クラスMultipleDocumentHandlingと任意のベンダ定義のサブクラスの場合、カテゴリはクラスMultipleDocumentHandling自体です。</target>
        </trans-unit>
        <trans-unit id="5a15c896684c3bdae21a952fc314bc83e432b65a" translate="yes" xml:space="preserve">
          <source>For class MultipleDocumentHandling and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;multiple-document-handling&quot;&lt;/code&gt;.</source>
          <target state="translated">MultipleDocumentHandlingクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;multiple-document-handling&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9d80aca402535b79315974f7262cb5caf36ece03" translate="yes" xml:space="preserve">
          <source>For class NumberOfDocuments, the category is class NumberOfDocuments itself.</source>
          <target state="translated">クラスNumberOfDocumentsの場合、カテゴリはクラスNumberOfDocumentsそのものとなります。</target>
        </trans-unit>
        <trans-unit id="7a4f4357a00f01b7773082cf51d10e445b0c684e" translate="yes" xml:space="preserve">
          <source>For class NumberOfDocuments, the category name is &lt;code&gt;&quot;number-of-documents&quot;&lt;/code&gt;.</source>
          <target state="translated">NumberOfDocumentsクラスの場合、カテゴリ名は &lt;code&gt;&quot;number-of-documents&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a15143dc5c9eaa5cfb57170f82d6c2c78842dc82" translate="yes" xml:space="preserve">
          <source>For class NumberOfInterveningJobs, the category is class NumberOfInterveningJobs itself.</source>
          <target state="translated">クラスNumberOfInterveningJobsの場合、カテゴリはクラスNumberOfInterveningJobsそのものとなります。</target>
        </trans-unit>
        <trans-unit id="4f64d68c238a1069789d44fdc2461b1b3abfd3f3" translate="yes" xml:space="preserve">
          <source>For class NumberOfInterveningJobs, the category name is &lt;code&gt;&quot;number-of-intervening-jobs&quot;&lt;/code&gt;.</source>
          <target state="translated">NumberOfInterveningJobsクラスの場合、カテゴリ名は &lt;code&gt;&quot;number-of-intervening-jobs&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bbebe8d07517db48f6ceb60ef3eda69a123a4ca6" translate="yes" xml:space="preserve">
          <source>For class NumberUp, the category is class NumberUp itself.</source>
          <target state="translated">クラスNumberUpの場合、カテゴリはクラスNumberUpそのものです。</target>
        </trans-unit>
        <trans-unit id="679d46d1327714f3b8a4ffe2ac56338f3140bd2d" translate="yes" xml:space="preserve">
          <source>For class NumberUp, the category name is &lt;code&gt;&quot;number-up&quot;&lt;/code&gt;.</source>
          <target state="translated">NumberUpクラスの場合、カテゴリ名は &lt;code&gt;&quot;number-up&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="43898aa6f875f8e6510fb0adc64cbe5396f5d910" translate="yes" xml:space="preserve">
          <source>For class NumberUpSupported, the category is class NumberUpSupported itself.</source>
          <target state="translated">NumberUpSupportedクラスの場合、カテゴリはNumberUpSupportedクラスそのものとなります。</target>
        </trans-unit>
        <trans-unit id="84efd2894a327c192bb5f0bdcaa0b6f9b76bb8f9" translate="yes" xml:space="preserve">
          <source>For class NumberUpSupported, the category name is &lt;code&gt;&quot;number-up-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">NumberUpSupportedクラスの場合、カテゴリ名は &lt;code&gt;&quot;number-up-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="565e4c6e7614396692edb4af2f709c35214286d4" translate="yes" xml:space="preserve">
          <source>For class OrientationRequested, the category is class OrientationRequested itself.</source>
          <target state="translated">クラスOrientationRequestedの場合、カテゴリはクラスOrientationRequestedそのものとなります。</target>
        </trans-unit>
        <trans-unit id="52fcaeb0ba5aa93429c5861479086b2d3a01eafd" translate="yes" xml:space="preserve">
          <source>For class OrientationRequested, the category name is &lt;code&gt;&quot;orientation-requested&quot;&lt;/code&gt;.</source>
          <target state="translated">OrientationRequestedクラスの場合、カテゴリ名は &lt;code&gt;&quot;orientation-requested&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="abde76b383658ea382bc59eff2fb0367dfc991de" translate="yes" xml:space="preserve">
          <source>For class OutputDeviceAssigned, the category is class OutputDeviceAssigned itself.</source>
          <target state="translated">クラスOutputDeviceAssignedの場合、カテゴリはクラスOutputDeviceAssigned自体になります。</target>
        </trans-unit>
        <trans-unit id="8c848d24bcfaa87be7b3eaaafab61333297d4de5" translate="yes" xml:space="preserve">
          <source>For class OutputDeviceAssigned, the category name is &lt;code&gt;&quot;output-device-assigned&quot;&lt;/code&gt;.</source>
          <target state="translated">クラスOutputDeviceAssignedの場合、カテゴリ名は &lt;code&gt;&quot;output-device-assigned&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b50e8daad8ee24c6bb2f8f8f02fb8d2ae166cd84" translate="yes" xml:space="preserve">
          <source>For class PDLOverrideSupported and any vendor-defined subclasses, the category is class PDLOverrideSupported itself.</source>
          <target state="translated">クラス PDLOverrideSupported および任意のベンダ定義のサブクラスの場合、カテゴリはクラス PDLOverrideSupported 自体となります。</target>
        </trans-unit>
        <trans-unit id="1862855f9347a76978b17a738e7c5bbb33f59cc0" translate="yes" xml:space="preserve">
          <source>For class PDLOverrideSupported and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;pdl-override-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">クラスPDLOverrideSupportedおよびベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;pdl-override-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ce220ceb7741aa95d88a2fe3bc6c7db7d98e7d95" translate="yes" xml:space="preserve">
          <source>For class PageRanges, the category is class PageRanges itself.</source>
          <target state="translated">クラスPageRangesの場合、カテゴリはクラスPageRangesそのものです。</target>
        </trans-unit>
        <trans-unit id="36e6d05319c67769fc3db5bb0ecdbb4b60392f46" translate="yes" xml:space="preserve">
          <source>For class PageRanges, the category name is &lt;code&gt;&quot;page-ranges&quot;&lt;/code&gt;.</source>
          <target state="translated">PageRangesクラスの場合、カテゴリ名は &lt;code&gt;&quot;page-ranges&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c7f01eada40934f6714620dd2a2b554f377c9308" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinute, the category is class PagesPerMinute itself.</source>
          <target state="translated">クラスPagesPerMinuteの場合、カテゴリはクラスPagesPerMinuteそのものとなります。</target>
        </trans-unit>
        <trans-unit id="e14ff0028ffef5fede72d51eb82a6235e41c4323" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinute, the category name is &lt;code&gt;&quot;pages-per-minute&quot;&lt;/code&gt;.</source>
          <target state="translated">PagesPerMinuteクラスの場合、カテゴリ名は &lt;code&gt;&quot;pages-per-minute&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d522346d833c539376b5f07c17f5f72b79dd7f0f" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinuteColor, the category is class PagesPerMinuteColor itself.</source>
          <target state="translated">クラスPagesPerMinuteColorの場合、カテゴリはクラスPagesPerMinuteColorそのものとなります。</target>
        </trans-unit>
        <trans-unit id="7c660c99e02d7c212af35cc7873730d7af2cf120" translate="yes" xml:space="preserve">
          <source>For class PagesPerMinuteColor, the category name is &lt;code&gt;&quot;pages-per-minute-color&quot;&lt;/code&gt;.</source>
          <target state="translated">PagesPerMinuteColorクラスの場合、カテゴリ名は &lt;code&gt;&quot;pages-per-minute-color&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8aaee8c396105cb02829f6cbc1aea2b4ca171041" translate="yes" xml:space="preserve">
          <source>For class PresentationDirection the category is class PresentationDirection itself.</source>
          <target state="translated">クラスPresentationDirectionの場合、カテゴリはクラスPresentationDirection自身です。</target>
        </trans-unit>
        <trans-unit id="09e0c06b664549dedff4cfd3e2b0109f7061132a" translate="yes" xml:space="preserve">
          <source>For class PresentationDirection the category name is &lt;code&gt;&quot;presentation-direction&quot;&lt;/code&gt;.</source>
          <target state="translated">クラスPresentationDirectionの場合、カテゴリ名は &lt;code&gt;&quot;presentation-direction&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="73ab431070b7902f07a4e2eb111942a3d3c89260" translate="yes" xml:space="preserve">
          <source>For class PrintQuality and any vendor-defined subclasses, the category is class PrintQuality itself.</source>
          <target state="translated">クラスPrintQualityおよびベンダー定義のサブクラスについては、カテゴリはクラスPrintQualityそのものとなります。</target>
        </trans-unit>
        <trans-unit id="ad6627e73fffda4d8a63d01e1314eb76d67d38ee" translate="yes" xml:space="preserve">
          <source>For class PrintQuality and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;print-quality&quot;&lt;/code&gt;.</source>
          <target state="translated">PrintQualityクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;print-quality&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fb6f0cc027e88992fdedf39e07582b1430266e3c" translate="yes" xml:space="preserve">
          <source>For class PrinterInfo, the category is class PrinterInfo itself.</source>
          <target state="translated">クラスPrinterInfoの場合、カテゴリはクラスPrinterInfoそのものです。</target>
        </trans-unit>
        <trans-unit id="25b6527a1b2b670e8d591c05cce9bc5e9d9447a2" translate="yes" xml:space="preserve">
          <source>For class PrinterInfo, the category name is &lt;code&gt;&quot;printer-info&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterInfoクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-info&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="06c9256086f531efae796e8d8690666052354d1b" translate="yes" xml:space="preserve">
          <source>For class PrinterIsAcceptingJobs, the category is class PrinterIsAcceptingJobs itself.</source>
          <target state="translated">クラスPrinterIsAcceptingJobsについては、カテゴリはクラスPrinterIsAcceptingJobsそのものです。</target>
        </trans-unit>
        <trans-unit id="3b444196d4a92442d1815635095756fb443b3c8b" translate="yes" xml:space="preserve">
          <source>For class PrinterIsAcceptingJobs, the category name is &lt;code&gt;&quot;printer-is-accepting-jobs&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterIsAcceptingJobsクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-is-accepting-jobs&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f689abe18da853c0516008897c2e59452d205a11" translate="yes" xml:space="preserve">
          <source>For class PrinterLocation, the category is class PrinterLocation itself.</source>
          <target state="translated">クラスPrinterLocationの場合、カテゴリはクラスPrinterLocationそのものです。</target>
        </trans-unit>
        <trans-unit id="cd2fea8becd5eb8189e9b5472dff8986755fda80" translate="yes" xml:space="preserve">
          <source>For class PrinterLocation, the category name is &lt;code&gt;&quot;printer-location&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterLocationクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-location&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4c1dd9a747520f8dbedcf4f13a83a0e4af94e2ba" translate="yes" xml:space="preserve">
          <source>For class PrinterMakeAndModel, the category is class PrinterMakeAndModel itself.</source>
          <target state="translated">クラスPrinterMakeAndModelの場合、カテゴリはクラスPrinterMakeAndModelそのものとなります。</target>
        </trans-unit>
        <trans-unit id="ba4fae7b3cb6c2828fcdbaf1716fd8c108dc1d52" translate="yes" xml:space="preserve">
          <source>For class PrinterMakeAndModel, the category name is &lt;code&gt;&quot;printer-make-and-model&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterMakeAndModelクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-make-and-model&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="25e865fa5a526858929f1ec74db4ddabb2559cfd" translate="yes" xml:space="preserve">
          <source>For class PrinterMessageFromOperator, the category is class PrinterMessageFromOperator itself.</source>
          <target state="translated">クラスPrinterMessageFromOperatorの場合、カテゴリはクラスPrinterMessageFromOperatorそのものです。</target>
        </trans-unit>
        <trans-unit id="63bdaad11dc64623e0b9ad73640ced1a04cd8190" translate="yes" xml:space="preserve">
          <source>For class PrinterMessageFromOperator, the category name is &lt;code&gt;&quot;printer-message-from-operator&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterMessageFromOperatorクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-message-from-operator&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fc38988d14d54c070df510381432956fb04be2b5" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfo, the category is class PrinterMoreInfo itself.</source>
          <target state="translated">クラスPrinterMoreInfoの場合、カテゴリはクラスPrinterMoreInfoそのものです。</target>
        </trans-unit>
        <trans-unit id="07993e08f2f2ff8aca46598c2c607bf8b4f7551b" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfo, the category name is &lt;code&gt;&quot;printer-more-info&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterMoreInfoクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-more-info&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="241cfde9db629abbf16d37ecf1ba0b5701fa39bb" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfoManufacturer, the category is class PrinterMoreInfoManufacturer itself.</source>
          <target state="translated">クラスPrinterMoreInfoManufacturerの場合、カテゴリはクラスPrinterMoreInfoManufacturerそのものです。</target>
        </trans-unit>
        <trans-unit id="48561e0264312aaad1e530ded45d0c142643d71d" translate="yes" xml:space="preserve">
          <source>For class PrinterMoreInfoManufacturer, the category name is &lt;code&gt;&quot;printer-more-info-manufacturer&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterMoreInfoManufacturerクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-more-info-manufacturer&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3d09189884a718425f1dd44675f4544e703b2dc4" translate="yes" xml:space="preserve">
          <source>For class PrinterName, the category is class PrinterName itself.</source>
          <target state="translated">クラスPrinterNameの場合、カテゴリはクラスPrinterNameそのものです。</target>
        </trans-unit>
        <trans-unit id="f981b8db2489e51ff8a0c52f0213cad136f70214" translate="yes" xml:space="preserve">
          <source>For class PrinterName, the category name is &lt;code&gt;&quot;printer-name&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterNameクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-name&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b653a81213f2676d2a468fbe40f45aeb6bb23eb0" translate="yes" xml:space="preserve">
          <source>For class PrinterResolution, the category is class PrinterResolution itself.</source>
          <target state="translated">クラスPrinterResolutionの場合、カテゴリはクラスPrinterResolutionそのものです。</target>
        </trans-unit>
        <trans-unit id="089c03e6282acc3da250b5bbf8c9b3c0723bc5de" translate="yes" xml:space="preserve">
          <source>For class PrinterResolution, the category name is &lt;code&gt;&quot;printer-resolution&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterResolutionクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-resolution&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9ddf3275c606f2df378612cccd2405b28e94d547" translate="yes" xml:space="preserve">
          <source>For class PrinterState, the category is class PrinterState itself.</source>
          <target state="translated">クラスPrinterStateの場合、カテゴリはクラスPrinterStateそのものです。</target>
        </trans-unit>
        <trans-unit id="cbc846db841ae5c9762311f9887a7ed626d21ac2" translate="yes" xml:space="preserve">
          <source>For class PrinterState, the category name is &lt;code&gt;&quot;printer-state&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterStateクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-state&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f8e4577f59fa87e6b5beb516c568387c170e4b8c" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReason and any vendor-defined subclasses, the category is class PrinterStateReason itself.</source>
          <target state="translated">クラスPrinterStateReasonと任意のベンダ定義のサブクラスについては、カテゴリはクラスPrinterStateReasonそのものです。</target>
        </trans-unit>
        <trans-unit id="faeb3e536e0a737a954b661a24e00e48ef3bcef4" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReason and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;printer-state-reason&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterStateReasonクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-state-reason&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4e808c039b758b2f59db1f7d952b1bf58c1aa4a7" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReasons, the category is class PrinterStateReasons itself.</source>
          <target state="translated">クラスPrinterStateReasonsの場合、カテゴリはクラスPrinterStateReasonsそのものです。</target>
        </trans-unit>
        <trans-unit id="e14e080c82b2595f0ad5da46fffd3e824d0f9490" translate="yes" xml:space="preserve">
          <source>For class PrinterStateReasons, the category name is &lt;code&gt;&quot;printer-state-reasons&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterStateReasonsクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-state-reasons&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7a33b14dd071582edba93515dae6937007a50673" translate="yes" xml:space="preserve">
          <source>For class PrinterURI and any vendor-defined subclasses, the category is class PrinterURI itself.</source>
          <target state="translated">クラスPrinterURIと任意のベンダ定義のサブクラスについては,カテゴリはクラスPrinterURIそのものです。</target>
        </trans-unit>
        <trans-unit id="b5c54c79aa3a2ed3bc26221d866d3bf0414ab4d0" translate="yes" xml:space="preserve">
          <source>For class PrinterURI and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;printer-uri&quot;&lt;/code&gt;.</source>
          <target state="translated">PrinterURIクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;printer-uri&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="427bb8ae79ce5ce6305815064eb955898deba35e" translate="yes" xml:space="preserve">
          <source>For class QueuedJobCount, the category is class QueuedJobCount itself.</source>
          <target state="translated">QueuedJobCountクラスの場合、カテゴリはQueuedJobCountクラス自体になります。</target>
        </trans-unit>
        <trans-unit id="8c2032679b33ee7eeab7ea70028fe4a54b11a34b" translate="yes" xml:space="preserve">
          <source>For class QueuedJobCount, the category name is &lt;code&gt;&quot;queued-job-count&quot;&lt;/code&gt;.</source>
          <target state="translated">クラスQueuedJobCountの場合、カテゴリ名は &lt;code&gt;&quot;queued-job-count&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ed9b64b1898dc19b34e09680ab59f290a11180b1" translate="yes" xml:space="preserve">
          <source>For class ReferenceUriSchemesSupported and any vendor-defined subclasses, the category is class ReferenceUriSchemesSupported itself.</source>
          <target state="translated">クラスReferenceUriSchemesSupportedおよびベンダー定義のサブクラスの場合、カテゴリはクラスReferenceUriSchemesSupportedそのものとなります。</target>
        </trans-unit>
        <trans-unit id="936b31b70be0215f64773fb73ec5e86c0ca36d06" translate="yes" xml:space="preserve">
          <source>For class ReferenceUriSchemesSupported and any vendor-defined subclasses, the category name is &lt;code&gt;&quot;reference-uri-schemes-supported&quot;&lt;/code&gt;.</source>
          <target state="translated">ReferenceUriSchemesSupportedクラスとベンダー定義のサブクラスの場合、カテゴリ名は &lt;code&gt;&quot;reference-uri-schemes-supported&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5468094b261f63f7a851ffdea2ab7b4ba7224051" translate="yes" xml:space="preserve">
          <source>For class RequestingUserName, the category is class RequestingUserName itself.</source>
          <target state="translated">クラスRequestingUserNameの場合、カテゴリはクラスRequestingUserName自身となります。</target>
        </trans-unit>
        <trans-unit id="794b8d2f9a18f1de951bd2a77cf8d9823f430c19" translate="yes" xml:space="preserve">
          <source>For class RequestingUserName, the category name is &lt;code&gt;&quot;requesting-user-name&quot;&lt;/code&gt;.</source>
          <target state="translated">RequestingUserNameクラスの場合、カテゴリ名は &lt;code&gt;&quot;requesting-user-name&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b817b624e8fc642c4c82793be6aece9829795dc5" translate="yes" xml:space="preserve">
          <source>For class Severit, the category name is &lt;code&gt;&quot;severity&quot;&lt;/code&gt;.</source>
          <target state="translated">Severitクラスの場合、カテゴリ名は &lt;code&gt;&quot;severity&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="95cf92446e07a3726f7d683aed39c191dd9dd0f7" translate="yes" xml:space="preserve">
          <source>For class Severity, the category is class Severity itself.</source>
          <target state="translated">クラスSeverityの場合、カテゴリはクラスSeverityそのものである。</target>
        </trans-unit>
        <trans-unit id="1df6ec0b95bed137549c213c42c887235000d710" translate="yes" xml:space="preserve">
          <source>For class SheetCollate, the category is class SheetCollate itself.</source>
          <target state="translated">SheetCollateクラスの場合、カテゴリはSheetCollateクラスそのものです。</target>
        </trans-unit>
        <trans-unit id="eec42e414ddbb008a0160e654bcfebb31c674017" translate="yes" xml:space="preserve">
          <source>For class SheetCollate, the category name is &lt;code&gt;&quot;sheet-collate&quot;&lt;/code&gt;.</source>
          <target state="translated">SheetCollat​​eクラスの場合、カテゴリ名は &lt;code&gt;&quot;sheet-collate&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a54a6c66b3185766ef8980b2b771f7a5145737b9" translate="yes" xml:space="preserve">
          <source>For class Sides, the category is class Sides itself.</source>
          <target state="translated">クラスSidesの場合、カテゴリはクラスSidesそのものとなります。</target>
        </trans-unit>
        <trans-unit id="00e176bee23fa052a123452f97bdfd610c3f76aa" translate="yes" xml:space="preserve">
          <source>For class Sides, the category name is &lt;code&gt;&quot;sides&quot;&lt;/code&gt;.</source>
          <target state="translated">Sidesクラスの場合、カテゴリ名は &lt;code&gt;&quot;sides&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e291d7686d6bf5a610fa7b42648acca9aac4fbe1" translate="yes" xml:space="preserve">
          <source>For client formatted print data, the print data representation class is typically one of the following (although other representation classes are permitted):</source>
          <target state="translated">クライアントフォーマットされた印刷データの場合、印刷データ表現クラスは、通常、以下のいずれかである(ただし、他の表現クラスが許可されている)。</target>
        </trans-unit>
        <trans-unit id="e6d74a7546298ead87242134049dd273d250b2d3" translate="yes" xml:space="preserve">
          <source>For client sockets, setReceiveBufferSize() must be called before connecting the socket to its remote peer.</source>
          <target state="translated">クライアントソケットの場合、ソケットをリモートピアに接続する前に setReceiveBufferSize()を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="b4d07d8b04ebb5bf8cd0d980eb8abf2e92d0b689" translate="yes" xml:space="preserve">
          <source>For collectors that do not have the &lt;code&gt;UNORDERED&lt;/code&gt; characteristic, two accumulated results &lt;code&gt;a1&lt;/code&gt; and &lt;code&gt;a2&lt;/code&gt; are equivalent if &lt;code&gt;finisher.apply(a1).equals(finisher.apply(a2))&lt;/code&gt;. For unordered collectors, equivalence is relaxed to allow for non-equality related to differences in order. (For example, an unordered collector that accumulated elements to a &lt;code&gt;List&lt;/code&gt; would consider two lists equivalent if they contained the same elements, ignoring order.)</source>
          <target state="translated">&lt;code&gt;UNORDERED&lt;/code&gt; 特性を持たないコレクターの場合、 &lt;code&gt;finisher.apply(a1).equals(finisher.apply(a2))&lt;/code&gt; の場合、2つの累積結果 &lt;code&gt;a1&lt;/code&gt; と &lt;code&gt;a2&lt;/code&gt; は同等です。順序付けされていないコレクターの場合、等価性は緩和され、順序の違いに関連する非等価性が考慮されます。 （たとえば、 &lt;code&gt;List&lt;/code&gt; に要素を累積した順序付けされていないコレクターは、順序を無視して、同じ要素が含まれている場合、2つのリストを同等と見なします。</target>
        </trans-unit>
        <trans-unit id="5daebfee18e6210b1df3959fb579eb8ef2b007d1" translate="yes" xml:space="preserve">
          <source>For combo boxes with a non trivial number of items, it is recommended to use a prototype display value to significantly speed up the display size calculation.</source>
          <target state="translated">些細な項目数ではないコンボボックスの場合は、プロトタイプの表示値を使用して表示サイズの計算を大幅に高速化することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="e2c5f24899985c8ea850d045b39ba018e910066b" translate="yes" xml:space="preserve">
          <source>For common system types, including all the primitive types, there are predefined &lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt; constants in &lt;a href=&quot;constantdescs&quot;&gt;&lt;code&gt;ConstantDescs&lt;/code&gt;&lt;/a&gt;. (The &lt;code&gt;java.lang.constant&lt;/code&gt; APIs consider &lt;code&gt;void&lt;/code&gt; to be a primitive type.) To create a &lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt; for a class or interface type, use &lt;a href=&quot;#of(java.lang.String)&quot;&gt;&lt;code&gt;of(java.lang.String)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ofDescriptor(java.lang.String)&quot;&gt;&lt;code&gt;ofDescriptor(String)&lt;/code&gt;&lt;/a&gt;; to create a &lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt; for an array type, use &lt;a href=&quot;#ofDescriptor(java.lang.String)&quot;&gt;&lt;code&gt;ofDescriptor(String)&lt;/code&gt;&lt;/a&gt;, or first obtain a &lt;a href=&quot;classdesc&quot;&gt;ClassDesc&lt;/a&gt; for the component type and then call the &lt;a href=&quot;#arrayType()&quot;&gt;&lt;code&gt;arrayType()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#arrayType(int)&quot;&gt;&lt;code&gt;arrayType(int)&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2967995857133da00d1565c63fb3be5ba528a4" translate="yes" xml:space="preserve">
          <source>For comparing &lt;code&gt;String&lt;/code&gt;s exactly once, the &lt;code&gt;compare&lt;/code&gt; method provides the best performance. When sorting a list of &lt;code&gt;String&lt;/code&gt;s however, it is generally necessary to compare each &lt;code&gt;String&lt;/code&gt; multiple times. In this case, &lt;code&gt;CollationKey&lt;/code&gt;s provide better performance. The &lt;code&gt;CollationKey&lt;/code&gt; class converts a &lt;code&gt;String&lt;/code&gt; to a series of bits that can be compared bitwise against other &lt;code&gt;CollationKey&lt;/code&gt;s. A &lt;code&gt;CollationKey&lt;/code&gt; is created by a &lt;code&gt;Collator&lt;/code&gt; object for a given &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">比較のために &lt;code&gt;String&lt;/code&gt; を正確に一度のを、 &lt;code&gt;compare&lt;/code&gt; の方法は、最高のパフォーマンスを提供します。ただし、 &lt;code&gt;String&lt;/code&gt; のリストをソートする場合、通常は各 &lt;code&gt;String&lt;/code&gt; を複数回比較する必要があります。この場合、 &lt;code&gt;CollationKey&lt;/code&gt; はより優れたパフォーマンスを提供します。 &lt;code&gt;CollationKey&lt;/code&gt; クラスは、変換 &lt;code&gt;String&lt;/code&gt; 他のに対してビット単位で比較することができる一連のビットへ &lt;code&gt;CollationKey&lt;/code&gt; 秒。 A &lt;code&gt;CollationKey&lt;/code&gt; によって作成された &lt;code&gt;Collator&lt;/code&gt; 特定のオブジェクト &lt;code&gt;String&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af7d1003679e326a588379c3ddd16e561bb257a9" translate="yes" xml:space="preserve">
          <source>For compatibility reasons, it is possible, though highly discouraged, to add objects to an &lt;code&gt;AttributeList&lt;/code&gt; that are not instances of &lt;code&gt;Attribute&lt;/code&gt;. However, an &lt;code&gt;AttributeList&lt;/code&gt; can be made &lt;em&gt;type-safe&lt;/em&gt;, which means that an attempt to add an object that is not an &lt;code&gt;Attribute&lt;/code&gt; will produce an &lt;code&gt;
 IllegalArgumentException&lt;/code&gt;. An &lt;code&gt;AttributeList&lt;/code&gt; becomes type-safe when the method &lt;a href=&quot;#asList()&quot;&gt;&lt;code&gt;asList()&lt;/code&gt;&lt;/a&gt; is called on it.</source>
          <target state="translated">互換性の理由から、それはにオブジェクトを追加するために、非常に落胆しても、可能である &lt;code&gt;AttributeList&lt;/code&gt; のインスタンスではありません &lt;code&gt;Attribute&lt;/code&gt; 。ただし、 &lt;code&gt;AttributeList&lt;/code&gt; は&lt;em&gt;タイプセーフ&lt;/em&gt;にすることができます。つまり、 &lt;code&gt;Attribute&lt;/code&gt; ではないオブジェクトを追加しようとすると、 &lt;code&gt; IllegalArgumentException&lt;/code&gt; が生成されます。アン &lt;code&gt;AttributeList&lt;/code&gt; メソッドの際にタイプセーフになり&lt;a href=&quot;#asList()&quot;&gt; &lt;code&gt;asList()&lt;/code&gt; が&lt;/a&gt;それに呼ばれています。</target>
        </trans-unit>
        <trans-unit id="3bda8af9f3ea2c182bc4edb9c9e7d569970e2c7c" translate="yes" xml:space="preserve">
          <source>For compatibility reasons, it is possible, though highly discouraged, to add objects to an &lt;code&gt;AttributeList&lt;/code&gt; that are not instances of &lt;code&gt;Attribute&lt;/code&gt;. However, an &lt;code&gt;AttributeList&lt;/code&gt; can be made &lt;em&gt;type-safe&lt;/em&gt;, which means that an attempt to add an object that is not an &lt;code&gt;Attribute&lt;/code&gt; will produce an &lt;code&gt;IllegalArgumentException&lt;/code&gt;. An &lt;code&gt;AttributeList&lt;/code&gt; becomes type-safe when the method &lt;a href=&quot;attributelist#asList--&quot;&gt;&lt;code&gt;asList()&lt;/code&gt;&lt;/a&gt; is called on it.</source>
          <target state="translated">互換性の理由から、それはにオブジェクトを追加するために、非常に落胆しても、可能である &lt;code&gt;AttributeList&lt;/code&gt; のインスタンスではありません &lt;code&gt;Attribute&lt;/code&gt; 。ただし、 &lt;code&gt;AttributeList&lt;/code&gt; は&lt;em&gt;タイプセーフ&lt;/em&gt;にすることができます。つまり、 &lt;code&gt;Attribute&lt;/code&gt; ではないオブジェクトを追加しようとすると、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; が生成されます。アン &lt;code&gt;AttributeList&lt;/code&gt; メソッドの際にタイプセーフになり&lt;a href=&quot;attributelist#asList--&quot;&gt; &lt;code&gt;asList()&lt;/code&gt; が&lt;/a&gt;それに呼ばれています。</target>
        </trans-unit>
        <trans-unit id="fa3fadeadc9c59b0bb290751e24959992cae4d8a" translate="yes" xml:space="preserve">
          <source>For compatibility reasons, two non-conforming locales are treated as special cases. These are &lt;b&gt;&lt;code&gt;ja_JP_JP&lt;/code&gt;&lt;/b&gt; and &lt;b&gt;&lt;code&gt;th_TH_TH&lt;/code&gt;&lt;/b&gt;. These are ill-formed in BCP 47 since the variants are too short. To ease migration to BCP 47, these are treated specially during construction. These two cases (and only these) cause a constructor to generate an extension, all other values behave exactly as they did prior to Java 7.</source>
          <target state="translated">互換性の理由から、2つの非準拠ロケールは特殊なケースとして扱われます。これらは&lt;b&gt; &lt;code&gt;ja_JP_JP&lt;/code&gt; &lt;/b&gt;と&lt;b&gt; &lt;code&gt;th_TH_TH&lt;/code&gt; &lt;/b&gt;です。バリアントが短すぎるため、BCP 47ではこれらの形式が正しくありません。 BCP 47への移行を容易にするために、これらは建設時に特別に扱われます。これら2つのケース（およびこれらのみ）では、コンストラクターが拡張機能を生成します。他のすべての値は、Java 7より前とまったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="88ffec9f8f3ececb82205df4b4f1f28ffab318bb" translate="yes" xml:space="preserve">
          <source>For compatibility with JDK 1.1.x, some other three-letter time zone IDs (such as &quot;PST&quot;, &quot;CTT&quot;, &quot;AST&quot;) are also supported. However, &lt;strong&gt;their use is deprecated&lt;/strong&gt; because the same abbreviation is often used for multiple time zones (for example, &quot;CST&quot; could be U.S. &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;), and the Java platform can then only recognize one of them.</source>
          <target state="translated">JDK 1.1.xとの互換性のために、他のいくつかの3文字のタイムゾーンID（「PST」、「CTT」、「AST」など）もサポートされています。ただし、複数のタイムゾーンで同じ省略形がよく使用されるため（たとえば、「CST」は米国の「中央標準時」と「中国標準時」の場合がある）、Javaプラットフォームは次のいずれか1つしか認識できないため、&lt;strong&gt;これらの使用は非推奨&lt;/strong&gt;です。それら。</target>
        </trans-unit>
        <trans-unit id="fd60c878e75d2f5708d5f3e6789fa9e2306f96c1" translate="yes" xml:space="preserve">
          <source>For compatibility with applications developed earlier this method still accepts &lt;code&gt;Frame.NORMAL&lt;/code&gt; and &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; only. The iconic state of the frame is only changed, other aspects of frame state are not affected by this method. If the state passed to this method is neither &lt;code&gt;
 Frame.NORMAL&lt;/code&gt; nor &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; the method performs no actions at all.</source>
          <target state="translated">以前に開発されたアプリケーションとの互換性のために、このメソッドは引き続き &lt;code&gt;Frame.NORMAL&lt;/code&gt; および &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; のみを受け入れます。フレームの象徴的な状態は変更されるだけで、フレーム状態の他の側面はこの方法の影響を受けません。このメソッドに渡される状態が &lt;code&gt; Frame.NORMAL&lt;/code&gt; でも &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; でもない場合、メソッドはアクションをまったく実行しません。</target>
        </trans-unit>
        <trans-unit id="c9eb361e769ed726818ef4786ab9e82032615e2e" translate="yes" xml:space="preserve">
          <source>For compatibility with old parsers, XMLFormatters can be configured to revert to the old format by specifying a &lt;code&gt;&amp;lt;xml-formatter-fully-qualified-class-name&amp;gt;.useInstant = false&lt;/code&gt;&lt;a href=&quot;logmanager#getProperty(java.lang.String)&quot;&gt;property&lt;/a&gt; in the logging configuration. When &lt;code&gt;useInstant&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the old formatting will be preserved. When &lt;code&gt;useInstant&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; (the default), the &lt;code&gt;&amp;lt;nanos&amp;gt;&lt;/code&gt; element will be printed and the &lt;code&gt;&amp;lt;date&amp;gt;&lt;/code&gt; element will contain the &lt;a href=&quot;../../../../java.base/java/time/format/datetimeformatter#ISO_INSTANT&quot;&gt;formatted&lt;/a&gt; instant.</source>
          <target state="translated">古いパーサーとの互換性のために、ロギング構成で &lt;code&gt;&amp;lt;xml-formatter-fully-qualified-class-name&amp;gt;.useInstant = false&lt;/code&gt; &lt;a href=&quot;logmanager#getProperty(java.lang.String)&quot;&gt;プロパティ&lt;/a&gt;を指定することにより、XMLFormatterを古い形式に戻すように構成できます。とき &lt;code&gt;useInstant&lt;/code&gt; がある &lt;code&gt;false&lt;/code&gt; 、古い書式は保持されます。とき &lt;code&gt;useInstant&lt;/code&gt; がある &lt;code&gt;true&lt;/code&gt; （デフォルト）、 &lt;code&gt;&amp;lt;nanos&amp;gt;&lt;/code&gt; 要素が印刷されますと &lt;code&gt;&amp;lt;date&amp;gt;&lt;/code&gt; 要素が含まれます&lt;a href=&quot;../../../../java.base/java/time/format/datetimeformatter#ISO_INSTANT&quot;&gt;フォーマットされた&lt;/a&gt;瞬間を。</target>
        </trans-unit>
        <trans-unit id="4ae98774e76aff887be754e2a71ca1589d7931b3" translate="yes" xml:space="preserve">
          <source>For compatibility with old programs this method still returns &lt;code&gt;Frame.NORMAL&lt;/code&gt; and &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; but it only reports the iconic state of the frame, other aspects of frame state are not reported by this method.</source>
          <target state="translated">古いプログラムとの互換性のために、このメソッドは引き続き &lt;code&gt;Frame.NORMAL&lt;/code&gt; と &lt;code&gt;Frame.ICONIFIED&lt;/code&gt; を返しますが、フレームのアイコン状態のみを報告し、フレーム状態の他の側面はこのメソッドでは報告されません。</target>
        </trans-unit>
        <trans-unit id="fdb12ba84178516e070cb7e3438381124465f720" translate="yes" xml:space="preserve">
          <source>For compatibility with previous releases, &lt;code&gt;BorderLayout&lt;/code&gt; also includes the relative positioning constants &lt;code&gt;BEFORE_FIRST_LINE&lt;/code&gt;, &lt;code&gt;AFTER_LAST_LINE&lt;/code&gt;, &lt;code&gt;BEFORE_LINE_BEGINS&lt;/code&gt; and &lt;code&gt;AFTER_LINE_ENDS&lt;/code&gt;. These are equivalent to &lt;code&gt;PAGE_START&lt;/code&gt;, &lt;code&gt;PAGE_END&lt;/code&gt;, &lt;code&gt;LINE_START&lt;/code&gt; and &lt;code&gt;LINE_END&lt;/code&gt; respectively. For consistency with the relative positioning constants used by other components, the latter constants are preferred.</source>
          <target state="translated">以前のリリースとの互換性のために、 &lt;code&gt;BorderLayout&lt;/code&gt; には、相対配置定数 &lt;code&gt;BEFORE_FIRST_LINE&lt;/code&gt; 、 &lt;code&gt;AFTER_LAST_LINE&lt;/code&gt; 、 &lt;code&gt;BEFORE_LINE_BEGINS&lt;/code&gt; 、および &lt;code&gt;AFTER_LINE_ENDS&lt;/code&gt; も含まれています。これらは、それぞれ &lt;code&gt;PAGE_START&lt;/code&gt; 、 &lt;code&gt;PAGE_END&lt;/code&gt; 、 &lt;code&gt;LINE_START&lt;/code&gt; 、および &lt;code&gt;LINE_END&lt;/code&gt; と同等です。他のコンポーネントで使用される相対的な位置決め定数との一貫性を保つために、後者の定数が推奨されます。</target>
        </trans-unit>
        <trans-unit id="780dc5f76884169760a87fecc1ed665350c52d37" translate="yes" xml:space="preserve">
          <source>For compatibility, the default implementation of this method returns an empty &lt;code&gt;Optional&lt;/code&gt;. Subclasses should override this method with an appropriate implementation since an application may need to access additional parameters associated with the SSL session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b68d1775fb9f96001888959c6d32bec9d0ab9b8" translate="yes" xml:space="preserve">
          <source>For complete details on RMI, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/rmi/index.html&quot;&gt;RMI Specification&lt;/a&gt; which describes the RMI API and system.</source>
          <target state="translated">RMIの詳細については、RMIAPIとシステムについて説明している&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/rmi/index.html&quot;&gt;RMI仕様&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="108b8b0eaa56c557c0ce561d43ddd6032ceaaa24" translate="yes" xml:space="preserve">
          <source>For complete details on RMI, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/rmi/index.html&quot;&gt;RMI Specification&lt;/a&gt; which describes the RMI API and system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9423ca6a745439d228e81775dfe1289ff98c768" translate="yes" xml:space="preserve">
          <source>For complete examples and further documentation see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">完全な例と詳細なドキュメントについては&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションである&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;進行状況を監視する方法」を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fd9b622a83fcede5c32b8b6dd8e0ecaa49e64f16" translate="yes" xml:space="preserve">
          <source>For complete examples and further documentation see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426d2bc87f59f5f0cb4ba388ec2d7d4edcc97713" translate="yes" xml:space="preserve">
          <source>For concurrent collectors, an implementation is free to (but not required to) implement reduction concurrently. A concurrent reduction is one where the accumulator function is called concurrently from multiple threads, using the same concurrently-modifiable result container, rather than keeping the result isolated during accumulation. A concurrent reduction should only be applied if the collector has the &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt;&lt;code&gt;Collector.Characteristics.UNORDERED&lt;/code&gt;&lt;/a&gt; characteristics or if the originating data is unordered.</source>
          <target state="translated">並行コレクターの場合、実装は削減を同時に実装することは自由です（必須ではありません）。同時リダクションは、アキュムレータ関数が複数のスレッドから同時に呼び出され、アキュムレーション中に結果を分離したままにするのではなく、同時に変更可能な同じ結果コンテナを使用して行われるリダクションです。同時削減は、&lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt; &lt;code&gt;Collector.Characteristics.UNORDERED&lt;/code&gt; &lt;/a&gt;特性がある場合、または元のデータが順序付けされていない場合にのみ適用する必要があります。</target>
        </trans-unit>
        <trans-unit id="5b77db919dc549d42aa7190b43a492b8ea4ee578" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;code&gt;JLayeredPane&lt;/code&gt; divides the depth-range into several different layers. Putting a component into one of those layers makes it easy to ensure that components overlap properly, without having to worry about specifying numbers for specific depths:</source>
          <target state="translated">便宜上、 &lt;code&gt;JLayeredPane&lt;/code&gt; は深度範囲をいくつかの異なるレイヤーに分割します。コンポーネントをこれらのレイヤーの1つに配置すると、特定の深さの番号を指定することを心配することなく、コンポーネントが適切にオーバーラップすることを簡単に確認できます。</target>
        </trans-unit>
        <trans-unit id="c27fac6ea267b3ee9bd3b0f98727a50d9691f093" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;a href=&quot;#isError()&quot;&gt;&lt;code&gt;isError&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;true&lt;/code&gt; for result objects that describe malformed-input and unmappable-character errors but &lt;code&gt;false&lt;/code&gt; for those that describe underflow or overflow conditions.</source>
          <target state="translated">便宜上、&lt;a href=&quot;#isError()&quot;&gt; &lt;code&gt;isError&lt;/code&gt; &lt;/a&gt;メソッドが返す &lt;code&gt;true&lt;/code&gt; 不正入力やマップ不可文字エラーが、記述結果オブジェクトのための &lt;code&gt;false&lt;/code&gt; アンダーフローやオーバーフロー条件を記述しているもののために。</target>
        </trans-unit>
        <trans-unit id="b87f89f0734b0f681dabea429fae1aace7b8245d" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;a href=&quot;coderresult#isError--&quot;&gt;&lt;code&gt;isError&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;true&lt;/code&gt; for result objects that describe malformed-input and unmappable-character errors but &lt;code&gt;false&lt;/code&gt; for those that describe underflow or overflow conditions.</source>
          <target state="translated">便宜上、&lt;a href=&quot;coderresult#isError--&quot;&gt; &lt;code&gt;isError&lt;/code&gt; &lt;/a&gt;メソッドが返す &lt;code&gt;true&lt;/code&gt; 不正入力やマップ不可文字エラーが、記述結果オブジェクトのための &lt;code&gt;false&lt;/code&gt; アンダーフローやオーバーフロー条件を記述しているもののために。</target>
        </trans-unit>
        <trans-unit id="f29ffc46a44dbbbeb0d145ab11e0eed98f221342" translate="yes" xml:space="preserve">
          <source>For convenience, this class declares a number of public static final fields that refer to singleton instances returned by the &lt;a href=&quot;#values()&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebada93ed27c6249289f1e3fb580ab3052fec92c" translate="yes" xml:space="preserve">
          <source>For convenience, this class declares a number of public static final fields that refer to singleton instances returned by the values() method.</source>
          <target state="translated">便宜上、このクラスは、 values()メソッドによって返されるシングルトン・インスタンスを参照する多数のパブリック・スタティック・ファイナル・フィールドを宣言します。</target>
        </trans-unit>
        <trans-unit id="22c5cc62321a61e23fe5e092c90e1a30e44ff7cd" translate="yes" xml:space="preserve">
          <source>For correct printing behaviour, the following points should be observed:</source>
          <target state="translated">正しい印刷動作のためには、以下の点に注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="cb5e8dedd374a70c1c847661490301249aacc703" translate="yes" xml:space="preserve">
          <source>For data in &lt;code&gt;TIFFTag.TIFF_BYTE&lt;/code&gt; format, the application must take care when promoting the data to longer integral types to avoid sign extension.</source>
          <target state="translated">&lt;code&gt;TIFFTag.TIFF_BYTE&lt;/code&gt; 形式のデータの場合、アプリケーションは、データをより長い整数型にプロモートするときに、符号拡張を回避するように注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="1540b9260398a27c20afbc75e79f7e85a69fa272" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets the socket option is used to allow multiple programs bind to the same address. This option should be enabled when the socket is to be used for Internet Protocol (IP) multicasting.</source>
          <target state="translated">データグラム指向のソケットでは、複数のプログラムが同じアドレスにバインドできるようにするために socket オプションを使用します。このオプションは、ソケットがインターネットプロトコル(IP)マルチキャストで使用される場合に有効にしなければなりません。</target>
        </trans-unit>
        <trans-unit id="0f95b5e33b3ee975e827804d3ac17eb2566ce8e5" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets the socket option usually allows multiple UDP sockets to be bound to the same address and port.</source>
          <target state="translated">データグラム指向のソケットでは、 socket オプションは通常、複数の UDP ソケットを同じアドレスとポートにバインドすることを可能にします。</target>
        </trans-unit>
        <trans-unit id="786c72f86388cb950616d047202d32b3eb1c3b0f" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets, the size of the receive buffer may limit the size of the datagrams that can be received. Whether datagrams larger than the buffer size can be received is system dependent. Increasing the socket receive buffer may be important for cases where datagrams arrive in bursts faster than they can be processed.</source>
          <target state="translated">データグラム指向のソケットでは、受信バッファのサイズによって受信可能なデータグラムのサイズが制限されることがあります。バッファサイズよりも大きいデータグラムを受信できるかどうかはシステムに依存します。データグラムがバーストで到着したときに、データグラムの処理速度が速い場合には、ソケットの受信バッファサイズを大きくすることが重要になります。</target>
        </trans-unit>
        <trans-unit id="966cd6f9c064ea098962ea14f75ef3365435e675" translate="yes" xml:space="preserve">
          <source>For datagram-oriented sockets, the size of the send buffer may limit the size of the datagrams that may be sent by the socket. Whether datagrams larger than the buffer size are sent or discarded is system dependent.</source>
          <target state="translated">データグラム指向のソケットでは、送信バッファのサイズによってソケットから送信できるデータグラムのサイズが制限されることがあります。バッファサイズよりも大きいデータグラムが送信されるか破棄されるかはシステムに依存します。</target>
        </trans-unit>
        <trans-unit id="e144e4de7a25df3ef3b62d81140888932e771f2c" translate="yes" xml:space="preserve">
          <source>For date-times, 'JULIAN_DAY.getFrom()' assumes the same value from midnight until just before the next midnight. When 'JULIAN_DAY.adjustInto()' is applied to a date-time, the time of day portion remains unaltered. 'JULIAN_DAY.adjustInto()' and 'JULIAN_DAY.getFrom()' only apply to &lt;code&gt;Temporal&lt;/code&gt; objects that can be converted into &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;&lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;&lt;/a&gt; is thrown for any other type of object.</source>
          <target state="translated">日時の場合、「JULIAN_DAY.getFrom（）」は真夜中から次の真夜中の直前まで同じ値を想定します。 'JULIAN_DAY.adjustInto（）'が日時に適用される場合、時刻部分は変更されません。 'JULIAN_DAY.adjustInto（）'および 'JULIAN_DAY.getFrom（）'は、&lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt;に変換できる &lt;code&gt;Temporal&lt;/code&gt; オブジェクトにのみ適用されます。アン&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt; &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; は、&lt;/a&gt;オブジェクトの他のタイプのためにスローされます。</target>
        </trans-unit>
        <trans-unit id="0cc6b45ec07db1a8b27e379302a25193156d3ffa" translate="yes" xml:space="preserve">
          <source>For date-times, 'MODIFIED_JULIAN_DAY.getFrom()' assumes the same value from midnight until just before the next midnight. When 'MODIFIED_JULIAN_DAY.adjustInto()' is applied to a date-time, the time of day portion remains unaltered. 'MODIFIED_JULIAN_DAY.adjustInto()' and 'MODIFIED_JULIAN_DAY.getFrom()' only apply to &lt;code&gt;Temporal&lt;/code&gt; objects that can be converted into &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;&lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;&lt;/a&gt; is thrown for any other type of object.</source>
          <target state="translated">日時の場合、「MODIFIED_JULIAN_DAY.getFrom（）」は、真夜中から次の真夜中の直前まで同じ値を想定します。 'MODIFIED_JULIAN_DAY.adjustInto（）'が日時に適用されると、時刻部分は変更されません。 'MODIFIED_JULIAN_DAY.adjustInto（）'および 'MODIFIED_JULIAN_DAY.getFrom（）'は、&lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt;に変換できる &lt;code&gt;Temporal&lt;/code&gt; オブジェクトにのみ適用されます。アン&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt; &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; は、&lt;/a&gt;オブジェクトの他のタイプのためにスローされます。</target>
        </trans-unit>
        <trans-unit id="8cbb52d0e448ae0028f420b523fc0e8fe8889086" translate="yes" xml:space="preserve">
          <source>For date-times, 'RATA_DIE.getFrom()' assumes the same value from midnight until just before the next midnight. When 'RATA_DIE.adjustInto()' is applied to a date-time, the time of day portion remains unaltered. 'RATA_DIE.adjustInto()' and 'RATA_DIE.getFrom()' only apply to &lt;code&gt;Temporal&lt;/code&gt; objects that can be converted into &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. An &lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt;&lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt;&lt;/a&gt; is thrown for any other type of object.</source>
          <target state="translated">日時の場合、「RATA_DIE.getFrom（）」は、午前0時から次の午前0時の直前まで同じ値を想定します。'RATA_DIE.adjustInto（）'が日時に適用される場合、時刻部分は変更されません。'RATA_DIE.adjustInto（）'および 'RATA_DIE.getFrom（）'は、&lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt;に変換できる &lt;code&gt;Temporal&lt;/code&gt; オブジェクトにのみ適用されます。アン&lt;a href=&quot;unsupportedtemporaltypeexception&quot;&gt; &lt;code&gt;UnsupportedTemporalTypeException&lt;/code&gt; は、&lt;/a&gt;オブジェクトの他のタイプのためにスローされます。</target>
        </trans-unit>
        <trans-unit id="5917af1a5a5388259e477975711371546feece14" translate="yes" xml:space="preserve">
          <source>For default values not specified by SAX2, each XMLReader implementation specifies its default, or may choose not to expose the feature flag. Unless otherwise specified here, implementations may support changing current values of these standard feature flags, but not while parsing.</source>
          <target state="translated">SAX2 で指定されていないデフォルト値については、各 XMLReader 実装はそのデフォルト値を指定するか、機能フラグを公開しないことを選択することができる。ここで指定されていない限り、実装はこれらの標準機能フラグの現在の値の変更をサポートすることができますが、解析中はサポートしません。</target>
        </trans-unit>
        <trans-unit id="d21c60d5fb09e760cc030c28677e9de4a9cb8ba5" translate="yes" xml:space="preserve">
          <source>For deletes, the indexes represent the</source>
          <target state="translated">削除の場合、インデックスは</target>
        </trans-unit>
        <trans-unit id="28d681735625cb5b074de969173935dda35c689f" translate="yes" xml:space="preserve">
          <source>For details and the values of parameter that are valid for the various types of services see the top of this class and the  Java Cryptography Architecture API Specification &amp;amp; Reference. Security providers can override it to implement their own test.</source>
          <target state="translated">さまざまなタイプのサービスに有効なパラメーターの詳細と値については、このクラスのトップおよびJava暗号化アーキテクチャーAPI仕様およびリファレンスを参照してください。セキュリティプロバイダーはそれをオーバーライドして、独自のテストを実装できます。</target>
        </trans-unit>
        <trans-unit id="b68492db6a0c7fda9b50e23139dd936779868511" translate="yes" xml:space="preserve">
          <source>For details and the values of parameter that are valid for the various types of services see the top of this class and the &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=security_guide_jca&quot;&gt;Java Cryptography Architecture (JCA) Reference Guide&lt;/a&gt;. Security providers can override it to implement their own test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804b34ef3e3e29b6ff0dcdc4e3200775ed24a3f5" translate="yes" xml:space="preserve">
          <source>For details and the values of parameter that are valid for the various types of services see the top of this class and the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca&quot;&gt;Java Cryptography Architecture (JCA) Reference Guide&lt;/a&gt;. Security providers can override it to implement their own test.</source>
          <target state="translated">さまざまなタイプのサービスに有効な詳細とパラメーターの値については、このクラスのトップと&lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_jca&quot;&gt;Java暗号化アーキテクチャー（JCA）リファレンスガイドを参照してください&lt;/a&gt;。セキュリティプロバイダーは、それをオーバーライドして独自のテストを実装できます。</target>
        </trans-unit>
        <trans-unit id="c68701285e7b960e6e93d95808cdd4a77d317a1f" translate="yes" xml:space="preserve">
          <source>For details on how the widths of columns in the &lt;code&gt;JTable&lt;/code&gt; (and &lt;code&gt;JTableHeader&lt;/code&gt;) are calculated from the &lt;code&gt;preferredWidth&lt;/code&gt;, see the &lt;code&gt;doLayout&lt;/code&gt; method in &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">列の幅方法の詳細については、 &lt;code&gt;JTable&lt;/code&gt; の（および &lt;code&gt;JTableHeader&lt;/code&gt; では）から計算される &lt;code&gt;preferredWidth&lt;/code&gt; 、参照 &lt;code&gt;doLayout&lt;/code&gt; の内のメソッド &lt;code&gt;JTable&lt;/code&gt; のを。</target>
        </trans-unit>
        <trans-unit id="5aab162f3d6513fcbe058868b382f7a560c31fe9" translate="yes" xml:space="preserve">
          <source>For details on the focus subsystem, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt; How to Use the Focus Subsystem&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;, and the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;Focus Specification&lt;/a&gt; for more information.</source>
          <target state="translated">フォーカスサブシステムの詳細については、「フォーカスサブシステムの&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt;使用方法」&lt;/a&gt;、&lt;em&gt;「Javaチュートリアル」の&lt;/em&gt;セクション、および「&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;フォーカス仕様」&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5b1b03e23526eb89a32170bba3eac6c71adb286b" translate="yes" xml:space="preserve">
          <source>For details on the focus subsystem, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html&quot;&gt; How to Use the Focus Subsystem&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;, and the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/FocusSpec.html&quot;&gt;Focus Specification&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265e8a5599432ddf889d173f21ff483b5caee801" translate="yes" xml:space="preserve">
          <source>For directories that do not use a string representation for some or all of their attributes, the filter argument corresponding to an attribute value may be of a type other than String. Directories that support unstructured binary-valued attributes, for example, should accept byte arrays as filter arguments. The interpretation (if any) of filter arguments of any other type is determined by the service provider for that directory, which maps the filter operations onto operations with corresponding semantics in the underlying directory.</source>
          <target state="translated">属性の一部またはすべてに文字列表現を使用しないディレクトリの場合、属性値に対応するフィルタ引数は String 以外の型になることがあります。例えば、構造化されていないバイナリ値属性をサポートするディレクトリは、フィルタ引数としてバイト配列を受け入れなければなりません。他の型のフィルタ引数の解釈(もしあれば)は、そのディレクトリのサービスプロバイダによって決定され、フィルタ操作をそのディレクトリの対応するセマンティクスを持つ操作にマッピングします。</target>
        </trans-unit>
        <trans-unit id="518376a1f0776715181d384c293e66dd7896f2e6" translate="yes" xml:space="preserve">
          <source>For documentation that includes information about algorithm parameter and key specifications, please see:</source>
          <target state="translated">アルゴリズムのパラメータや主要な仕様に関する情報を含むドキュメントについては、こちらを参照してください。</target>
        </trans-unit>
        <trans-unit id="b6a829f85f8f642a1c89efe627173daa5255f0cb" translate="yes" xml:space="preserve">
          <source>For drop mode &lt;code&gt;DropMode.INSERT&lt;/code&gt;, this index indicates the index at which the data should be inserted into the parent path represented by &lt;code&gt;getPath()&lt;/code&gt;. &lt;code&gt;-1&lt;/code&gt; indicates that the drop occurred over the parent itself, and in most cases should be treated as inserting into either the beginning or the end of the parent's list of children.</source>
          <target state="translated">ドロップモード &lt;code&gt;DropMode.INSERT&lt;/code&gt; の場合、このインデックスは、 &lt;code&gt;getPath()&lt;/code&gt; で表される親パスにデータを挿入する必要があるインデックスを示します。 &lt;code&gt;-1&lt;/code&gt; は、ドロップが親自体で発生したことを示し、ほとんどの場合、親の子リストの最初または最後に挿入するものとして扱われる必要があります。</target>
        </trans-unit>
        <trans-unit id="7fcd28f67347c51882b14015451795cd74b74cd2" translate="yes" xml:space="preserve">
          <source>For drop modes &lt;code&gt;DropMode.USE_SELECTION&lt;/code&gt; and &lt;code&gt;DropMode.ON&lt;/code&gt;, this index is unimportant (and it will always be &lt;code&gt;-1&lt;/code&gt;) as the only interesting data is the path over which the drop operation occurred.</source>
          <target state="translated">ドロップモード &lt;code&gt;DropMode.USE_SELECTION&lt;/code&gt; および &lt;code&gt;DropMode.ON&lt;/code&gt; の場合、興味深いデータはドロップ操作が発生したパスのみであるため、このインデックスは重要ではありません（常に &lt;code&gt;-1&lt;/code&gt; になります）。</target>
        </trans-unit>
        <trans-unit id="5e8ebd7b5b5944d400b4ddb7391f9d645ae1a1ac" translate="yes" xml:space="preserve">
          <source>For each</source>
          <target state="translated">それぞれの</target>
        </trans-unit>
        <trans-unit id="48eda97c675ea6215a67a5147e8e38b46a61c861" translate="yes" xml:space="preserve">
          <source>For each &lt;a href=&quot;#isBlank()&quot;&gt;non-blank&lt;/a&gt; line,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d82f9f72a200ec7154f206947a25a77ab40162" translate="yes" xml:space="preserve">
          <source>For each TransportService installed on the platform, the VirtualMachineManager creates a corresponding &lt;a href=&quot;connect/attachingconnector&quot;&gt;&lt;code&gt;AttachingConnector&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;connect/listeningconnector&quot;&gt;&lt;code&gt;ListeningConnector&lt;/code&gt;&lt;/a&gt;. These Connectors are created to encapsulate a &lt;a href=&quot;connect/transport&quot;&gt;&lt;code&gt;Transport&lt;/code&gt;&lt;/a&gt; that in turn encapsulates the TransportService. The AttachingConnector will be named based on the name of the transport service concatenated with the string &lt;code&gt;Attach&lt;/code&gt;. For example, if the transport service &lt;a href=&quot;connect/spi/transportservice#name()&quot;&gt;&lt;code&gt;name()&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;telepathic&lt;/code&gt; then the AttachingConnector will be named &lt;code&gt;telepathicAttach&lt;/code&gt;. Similiarly the ListeningConnector will be named with the string &lt;code&gt;Listen&lt;/code&gt; tagged onto the name of the transport service. The &lt;a href=&quot;connect/connector#description()&quot;&gt;&lt;code&gt;description()&lt;/code&gt;&lt;/a&gt; method of both the AttachingConnector, and the ListeningConnector, will delegate to the &lt;a href=&quot;connect/spi/transportservice#description()&quot;&gt;&lt;code&gt;description()&lt;/code&gt;&lt;/a&gt; method of the underlying transport service. Both the AttachingConnector and the ListeningConnector will have two Connector &lt;a href=&quot;connect/connector.argument&quot;&gt;&lt;code&gt;Arguments&lt;/code&gt;&lt;/a&gt;. A &lt;a href=&quot;connect/connector.stringargument&quot;&gt;&lt;code&gt;StringArgument&lt;/code&gt;&lt;/a&gt; named &lt;code&gt;address&lt;/code&gt; is the connector argument to specify the address to attach too, or to listen on. A &lt;a href=&quot;connect/connector.integerargument&quot;&gt;&lt;code&gt;IntegerArgument&lt;/code&gt;&lt;/a&gt; named &lt;code&gt;timeout&lt;/code&gt; is the connector argument to specify the timeout when attaching, or accepting. The timeout connector may be ignored depending on if the transport service supports an attach timeout or accept timeout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5e87de10ee00b022602cd0fe8a0bf81b92bb32e" translate="yes" xml:space="preserve">
          <source>For each call of &lt;code&gt;publish&lt;/code&gt; the &lt;code&gt;Handler&lt;/code&gt; will call this &lt;code&gt;Filter&lt;/code&gt; (if it is non-null) to check if the &lt;code&gt;LogRecord&lt;/code&gt; should be published or discarded.</source>
          <target state="translated">&lt;code&gt;publish&lt;/code&gt; 呼び出すたびに、 &lt;code&gt;Handler&lt;/code&gt; はこの &lt;code&gt;Filter&lt;/code&gt; を呼び出し（nullでない場合）、 &lt;code&gt;LogRecord&lt;/code&gt; をパブリッシュするか破棄するかを確認します。</target>
        </trans-unit>
        <trans-unit id="286cc615cc027b7399bc8f36bf03bcc0ce9d8b08" translate="yes" xml:space="preserve">
          <source>For each class &quot;Foo&quot;, explicit information may be available if there exists a corresponding &quot;FooBeanInfo&quot; class that provides a non-null value when queried for the information. We first look for the BeanInfo class by taking the full package-qualified name of the target bean class and appending &quot;BeanInfo&quot; to form a new class name. If this fails, then we take the final classname component of this name, and look for that class in each of the packages specified in the BeanInfo package search path.</source>
          <target state="translated">各クラス &quot;Foo &quot;に対して、情報を問い合わせた際に非 null 値を提供する対応するクラス &quot;FooBeanInfo &quot;が存在する場合、明示的な情報が利用可能な場合があります。最初に、ターゲットBeanクラスの完全なパッケージ修飾名を取り、&quot;BeanInfo &quot;を付加して新しいクラス名を形成することで、BeanInfoクラスを探します。これが失敗した場合は、この名前の最終的なクラス名コンポーネントを取り、BeanInfoパッケージ検索パスで指定された各パッケージでそのクラスを探します。</target>
        </trans-unit>
        <trans-unit id="20256c9d6947200a5e94011138eea8b1897119cf" translate="yes" xml:space="preserve">
          <source>For each combination, the security strength can be requested from 112 up to the highest strength it supports. Both reseeding and prediction resistance are supported.</source>
          <target state="translated">各組み合わせについて、セキュリティ強度は、112からそれがサポートする最高強度まで要求することができます。再シードと予測耐性の両方がサポートされています。</target>
        </trans-unit>
        <trans-unit id="4d952801a5093c12c28f05ad1d4bdd655a37742c" translate="yes" xml:space="preserve">
          <source>For each configuration key in the &lt;a href=&quot;#getProperty(java.lang.String)&quot;&gt;existing configuration&lt;/a&gt; and the given input stream configuration, the given &lt;code&gt;mapper&lt;/code&gt; function is invoked to map from the configuration key to a function,</source>
          <target state="translated">&lt;a href=&quot;#getProperty(java.lang.String)&quot;&gt;既存の構成&lt;/a&gt;および指定された入力ストリーム構成の構成キーごとに、指定された &lt;code&gt;mapper&lt;/code&gt; 関数が呼び出されて、構成キーから関数にマップされます。</target>
        </trans-unit>
        <trans-unit id="b6e30f6a64e00d84dcf684b247b7c04cb7d796f1" translate="yes" xml:space="preserve">
          <source>For each entry of &lt;code&gt;providers&lt;/code&gt; that implements the &lt;code&gt;RegisterableService&lt;/code&gt; interface, its &lt;code&gt;onRegistration&lt;/code&gt; method will be called once for each category it is registered under. Its &lt;code&gt;onDeregistration&lt;/code&gt; method will be called each time it is deregistered from a category or when the registry is finalized.</source>
          <target state="translated">&lt;code&gt;RegisterableService&lt;/code&gt; インターフェースを実装する &lt;code&gt;providers&lt;/code&gt; エントリーごとに、その &lt;code&gt;onRegistration&lt;/code&gt; メソッドは、登録されているカテゴリーごとに1回呼び出されます。その &lt;code&gt;onDeregistration&lt;/code&gt; メソッドは、カテゴリから登録解除されるたび、またはレジストリが確定するときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c516132c3718d7f067332d5c83b439ea451e810e" translate="yes" xml:space="preserve">
          <source>For each enumerated module A that &quot;reads&quot; B:</source>
          <target state="translated">Bを「読む」列挙された各モジュールAに対して</target>
        </trans-unit>
        <trans-unit id="a25403e3f97a5b7ac07a000714e826226e543668" translate="yes" xml:space="preserve">
          <source>For each enumerated module A that 'requires' B: A &quot;reads&quot; B.</source>
          <target state="translated">Bを'require'する列挙された各モジュールAに対して、AはBを'read'します。</target>
        </trans-unit>
        <trans-unit id="35aeee93cde14551d6eade0a0c737d8f9a729564" translate="yes" xml:space="preserve">
          <source>For each enumerated module X that is automatic: X &quot;reads&quot; every other enumerated module (it is &quot;as if&quot; an automatic module has 'requires' directives for every other enumerated module).</source>
          <target state="translated">自動化された各列挙モジュールXに対して X は他のすべての列挙されたモジュールを &quot;読む&quot; (自動モジュールが他のすべての列挙されたモジュールに対して 'require' ディレクティブを持っているかのように &quot;あたかも&quot; 自動モジュールは 'require' ディレクティブを持っています)。</target>
        </trans-unit>
        <trans-unit id="96d2961bb25e716d2f6e80a236a212dd331a8ca6" translate="yes" xml:space="preserve">
          <source>For each file encountered this method attempts to read its &lt;a href=&quot;attribute/basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt;. If the file is not a directory then the &lt;a href=&quot;filevisitor#visitFile(T,java.nio.file.attribute.BasicFileAttributes)&quot;&gt;&lt;code&gt;visitFile&lt;/code&gt;&lt;/a&gt; method is invoked with the file attributes. If the file attributes cannot be read, due to an I/O exception, then the &lt;a href=&quot;filevisitor#visitFileFailed(T,java.io.IOException)&quot;&gt;&lt;code&gt;visitFileFailed&lt;/code&gt;&lt;/a&gt; method is invoked with the I/O exception.</source>
          <target state="translated">検出されたファイルごとに、このメソッドはその&lt;a href=&quot;attribute/basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt;を読み取ろうとします。ファイルがディレクトリでない場合、&lt;a href=&quot;filevisitor#visitFile(T,java.nio.file.attribute.BasicFileAttributes)&quot;&gt; &lt;code&gt;visitFile&lt;/code&gt; &lt;/a&gt;メソッドはファイル属性を使用して呼び出されます。I / O例外が原因でファイル属性を読み取ることができない場合、&lt;a href=&quot;filevisitor#visitFileFailed(T,java.io.IOException)&quot;&gt; &lt;code&gt;visitFileFailed&lt;/code&gt; &lt;/a&gt;メソッドがI / O例外とともに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6ca5a3eb61a3c0a9243e70fdb42a70d21404ae0f" translate="yes" xml:space="preserve">
          <source>For each file encountered this method attempts to read its &lt;a href=&quot;attribute/basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt;. If the file is not a directory then the &lt;a href=&quot;filevisitor#visitFile-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt;&lt;code&gt;visitFile&lt;/code&gt;&lt;/a&gt; method is invoked with the file attributes. If the file attributes cannot be read, due to an I/O exception, then the &lt;a href=&quot;filevisitor#visitFileFailed-T-java.io.IOException-&quot;&gt;&lt;code&gt;visitFileFailed&lt;/code&gt;&lt;/a&gt; method is invoked with the I/O exception.</source>
          <target state="translated">検出されたファイルごとに、このメソッドは&lt;a href=&quot;attribute/basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt;を読み取ろうとします。ファイルがディレクトリでない場合、&lt;a href=&quot;filevisitor#visitFile-T-java.nio.file.attribute.BasicFileAttributes-&quot;&gt; &lt;code&gt;visitFile&lt;/code&gt; &lt;/a&gt;メソッドがファイル属性を指定して呼び出されます。I / O例外が原因でファイル属性を読み取ることができない場合、&lt;a href=&quot;filevisitor#visitFileFailed-T-java.io.IOException-&quot;&gt; &lt;code&gt;visitFileFailed&lt;/code&gt; &lt;/a&gt;メソッドがI / O例外で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4d739c9464a9a531eadc74d9ce9305fefe52ff7c" translate="yes" xml:space="preserve">
          <source>For each glyph in the &lt;code&gt;GlyphVector&lt;/code&gt;, you can obtain:</source>
          <target state="translated">&lt;code&gt;GlyphVector&lt;/code&gt; の各グリフについて、次の情報を取得できます。</target>
        </trans-unit>
        <trans-unit id="ddf36bbce577351f24028eda6666f70d941e508b" translate="yes" xml:space="preserve">
          <source>For each listener, the original &lt;code&gt;NotificationListener&lt;/code&gt; and &lt;code&gt;handback&lt;/code&gt; are kept on the client side; in order for the client to be able to identify them, the server generates and returns a unique &lt;code&gt;listenerID&lt;/code&gt;. This &lt;code&gt;listenerID&lt;/code&gt; is forwarded with the &lt;code&gt;Notifications&lt;/code&gt; to the remote client.</source>
          <target state="translated">リスナーごとに、元の &lt;code&gt;NotificationListener&lt;/code&gt; と &lt;code&gt;handback&lt;/code&gt; がクライアント側に保持されます。クライアントがそれらを識別できるようにするために、サーバーは一意の &lt;code&gt;listenerID&lt;/code&gt; を生成して返します。この &lt;code&gt;listenerID&lt;/code&gt; は、 &lt;code&gt;Notifications&lt;/code&gt; とともにリモートクライアントに転送されます。</target>
        </trans-unit>
        <trans-unit id="97a84cf424a476d032f4b6ffd9d39b7dddecc378" translate="yes" xml:space="preserve">
          <source>For each lower bound B :</source>
          <target state="translated">各下界Bについて .</target>
        </trans-unit>
        <trans-unit id="560c97173e52668310a247ab36d49a521c8f9040" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server on behalf of the given delegation subject instead of the authenticated subject. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;../jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">返された &lt;code&gt;MBeanServerConnection&lt;/code&gt; の各メソッドについて、メソッドを呼び出すと、対応するメソッドが、認証されたサブジェクトではなく、指定された委任サブジェクトの代わりにリモートMBeanサーバーで呼び出されます。 MBeanサーバーメソッドによって返される値は、クライアントに返される値です。 MBeanサーバーメソッドが &lt;code&gt;Exception&lt;/code&gt; を生成する場合、同じ &lt;code&gt;Exception&lt;/code&gt; がクライアントに表示されます。 MBeanサーバーメソッドまたはそれを呼び出す試みが &lt;code&gt;Error&lt;/code&gt; を生成する場合、 &lt;code&gt;Error&lt;/code&gt; は&lt;a href=&quot;../jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; &lt;/a&gt;にラップされます。これはクライアントに表示されます。</target>
        </trans-unit>
        <trans-unit id="6cab9b7add9ebb79364ab1771d1e616553c1e6db" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server on behalf of the given delegation subject instead of the authenticated subject. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">返された &lt;code&gt;MBeanServerConnection&lt;/code&gt; の各メソッドについて、メソッドを呼び出すと、対応するメソッドが、認証されたサブジェクトではなく、指定された委任サブジェクトの代わりにリモートMBeanサーバーで呼び出されます。 MBeanサーバーメソッドによって返される値は、クライアントに返される値です。 MBeanサーバーメソッドが &lt;code&gt;Exception&lt;/code&gt; を生成する場合、同じ &lt;code&gt;Exception&lt;/code&gt; がクライアントに表示されます。 MBeanサーバーメソッドまたはそれを呼び出す試みが &lt;code&gt;Error&lt;/code&gt; を生成する場合、 &lt;code&gt;Error&lt;/code&gt; は&lt;a href=&quot;jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; &lt;/a&gt;にラップされます。これはクライアントに表示されます。</target>
        </trans-unit>
        <trans-unit id="b4d1d1cbcb4df50206304dcd7ddd941a7faf1321" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;../jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">返された &lt;code&gt;MBeanServerConnection&lt;/code&gt; の各メソッドについて、メソッドを呼び出すと、対応するメソッドがリモートMBeanサーバーで呼び出されます。 MBeanサーバーメソッドによって返される値は、クライアントに返される値です。 MBeanサーバーメソッドが &lt;code&gt;Exception&lt;/code&gt; を生成する場合、同じ &lt;code&gt;Exception&lt;/code&gt; がクライアントに表示されます。 MBeanサーバーメソッドまたはそれを呼び出す試みが &lt;code&gt;Error&lt;/code&gt; を生成する場合、 &lt;code&gt;Error&lt;/code&gt; は&lt;a href=&quot;../jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; &lt;/a&gt;にラップされます。これはクライアントに表示されます。</target>
        </trans-unit>
        <trans-unit id="af553cdcbe446f41ad75bb0c253ebededf33d396" translate="yes" xml:space="preserve">
          <source>For each method in the returned &lt;code&gt;MBeanServerConnection&lt;/code&gt;, calling the method causes the corresponding method to be called in the remote MBean server. The value returned by the MBean server method is the value returned to the client. If the MBean server method produces an &lt;code&gt;Exception&lt;/code&gt;, the same &lt;code&gt;Exception&lt;/code&gt; is seen by the client. If the MBean server method, or the attempt to call it, produces an &lt;code&gt;Error&lt;/code&gt;, the &lt;code&gt;Error&lt;/code&gt; is wrapped in a &lt;a href=&quot;jmxservererrorexception&quot;&gt;&lt;code&gt;JMXServerErrorException&lt;/code&gt;&lt;/a&gt;, which is seen by the client.</source>
          <target state="translated">返された &lt;code&gt;MBeanServerConnection&lt;/code&gt; の各メソッドについて、メソッドを呼び出すと、対応するメソッドがリモートMBeanサーバーで呼び出されます。 MBeanサーバーメソッドによって返される値は、クライアントに返される値です。 MBeanサーバーメソッドが &lt;code&gt;Exception&lt;/code&gt; を生成する場合、同じ &lt;code&gt;Exception&lt;/code&gt; がクライアントに表示されます。 MBeanサーバーメソッドまたはそれを呼び出す試みが &lt;code&gt;Error&lt;/code&gt; を生成する場合、 &lt;code&gt;Error&lt;/code&gt; は&lt;a href=&quot;jmxservererrorexception&quot;&gt; &lt;code&gt;JMXServerErrorException&lt;/code&gt; &lt;/a&gt;にラップされます。これはクライアントに表示されます。</target>
        </trans-unit>
        <trans-unit id="a088159314769f3251dc5a987ee7696aef6ceb45" translate="yes" xml:space="preserve">
          <source>For each non-blank line (as defined by &lt;a href=&quot;#isBlank()&quot;&gt;&lt;code&gt;isBlank()&lt;/code&gt;&lt;/a&gt;), the leading &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;white space&lt;/a&gt; characters are counted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719f9f441ad2dee9837b67bc47a02d9badbbe4a3" translate="yes" xml:space="preserve">
          <source>For each non-transient property, an expression is created in which the nullary &quot;getter&quot; method is applied to the &lt;code&gt;oldInstance&lt;/code&gt;. The value of this expression is the value of the property in the instance that is being serialized. If the value of this expression in the cloned environment &lt;code&gt;mutatesTo&lt;/code&gt; the target value, the new value is initialized to make it equivalent to the old value. In this case, because the property value has not changed there is no need to call the corresponding &quot;setter&quot; method and no statement is emitted. If not however, the expression for this value is replaced with another expression (normally a constructor) and the corresponding &quot;setter&quot; method is called to install the new property value in the object. This scheme removes default information from the output produced by streams using this delegate.</source>
          <target state="translated">非一時的なプロパティごとに、nullary &quot;getter&quot;メソッドが &lt;code&gt;oldInstance&lt;/code&gt; に適用される式が作成されます。この式の値は、シリアル化されているインスタンスのプロパティの値です。クローン環境でのこの式の値が &lt;code&gt;mutatesTo&lt;/code&gt; の場合ターゲット値。新しい値は、古い値と同等になるように初期化されます。この場合、プロパティ値は変更されていないため、対応する「setter」メソッドを呼び出す必要はなく、ステートメントは発行されません。ただし、そうでない場合、この値の式は別の式（通常はコンストラクター）に置き換えられ、対応する「setter」メソッドが呼び出されて、オブジェクトに新しいプロパティ値がインストールされます。このスキームは、このデリゲートを使用してストリームによって生成された出力からデフォルト情報を削除します。</target>
        </trans-unit>
        <trans-unit id="b6e68cba9e515c80a86dee74a48fa0652d49385f" translate="yes" xml:space="preserve">
          <source>For each of the correspondents in the key exchange, &lt;code&gt;doPhase&lt;/code&gt; needs to be called. For example, if this key exchange is with one other party, &lt;code&gt;doPhase&lt;/code&gt; needs to be called once, with the &lt;code&gt;lastPhase&lt;/code&gt; flag set to &lt;code&gt;true&lt;/code&gt;. If this key exchange is with two other parties, &lt;code&gt;doPhase&lt;/code&gt; needs to be called twice, the first time setting the &lt;code&gt;lastPhase&lt;/code&gt; flag to &lt;code&gt;false&lt;/code&gt;, and the second time setting it to &lt;code&gt;true&lt;/code&gt;. There may be any number of parties involved in a key exchange.</source>
          <target state="translated">鍵交換の各通信 &lt;code&gt;doPhase&lt;/code&gt; 、doPhaseを呼び出す必要があります。たとえば、この鍵交換が他の1つのパーティと行われる場合、 &lt;code&gt;lastPhase&lt;/code&gt; フラグを &lt;code&gt;true&lt;/code&gt; に設定して、doPhaseを 1回 &lt;code&gt;doPhase&lt;/code&gt; 必要があります。この鍵交換が他の2つのパーティーと行われる場合、最初に &lt;code&gt;lastPhase&lt;/code&gt; フラグを &lt;code&gt;false&lt;/code&gt; に設定し、2回目に &lt;code&gt;true&lt;/code&gt; に設定して、doPhaseを 2回 &lt;code&gt;doPhase&lt;/code&gt; 必要があります。鍵交換に関与する当事者はいくつあってもかまいません。</target>
        </trans-unit>
        <trans-unit id="bf1abc49e05851db66fa969e8d77a4a123b0ee0f" translate="yes" xml:space="preserve">
          <source>For each of the correspondents in the key exchange, &lt;code&gt;engineDoPhase&lt;/code&gt; needs to be called. For example, if the key exchange is with one other party, &lt;code&gt;engineDoPhase&lt;/code&gt; needs to be called once, with the &lt;code&gt;lastPhase&lt;/code&gt; flag set to &lt;code&gt;true&lt;/code&gt;. If the key exchange is with two other parties, &lt;code&gt;engineDoPhase&lt;/code&gt; needs to be called twice, the first time setting the &lt;code&gt;lastPhase&lt;/code&gt; flag to &lt;code&gt;false&lt;/code&gt;, and the second time setting it to &lt;code&gt;true&lt;/code&gt;. There may be any number of parties involved in a key exchange.</source>
          <target state="translated">鍵交換の各通信 &lt;code&gt;engineDoPhase&lt;/code&gt; 、engineDoPhaseを呼び出す必要があります。たとえば、鍵交換が他の1つのパーティとの &lt;code&gt;engineDoPhase&lt;/code&gt; 行われる場合、 &lt;code&gt;lastPhase&lt;/code&gt; フラグを &lt;code&gt;true&lt;/code&gt; に設定してengineDoPhaseを 1回呼び出す必要があります。鍵交換が他の2者とのものである場合、 &lt;code&gt;engineDoPhase&lt;/code&gt; を 2回呼び出す必要があります。最初は &lt;code&gt;lastPhase&lt;/code&gt; フラグを &lt;code&gt;false&lt;/code&gt; に設定し、2回目は &lt;code&gt;true&lt;/code&gt; に設定します。鍵交換に関与する当事者はいくつあってもかまいません。</target>
        </trans-unit>
        <trans-unit id="6705d80531c8f298495e16bdc3ba61df9ab6cbdc" translate="yes" xml:space="preserve">
          <source>For each of those three kinds of information, the Introspector will separately analyze the bean's class and superclasses looking for either explicit or implicit information and use that information to build a BeanInfo object that comprehensively describes the target bean.</source>
          <target state="translated">これら3種類の情報それぞれについて、Introspectorはビーンのクラスとスーパークラスを個別に分析して明示的または暗黙的な情報を探し、その情報を使用してターゲットビーンを包括的に記述するBeanInfoオブジェクトを構築します。</target>
        </trans-unit>
        <trans-unit id="3ff74e9e3b5f2e83be3535442fcbac4322b4605f" translate="yes" xml:space="preserve">
          <source>For each pair of threads that successfully exchange objects via an &lt;code&gt;Exchanger&lt;/code&gt;, actions prior to the &lt;code&gt;exchange()&lt;/code&gt; in each thread</source>
          <target state="translated">&lt;code&gt;Exchanger&lt;/code&gt; を介してオブジェクトを正常に交換したスレッドのペアごとに、各スレッドでの &lt;code&gt;exchange()&lt;/code&gt; の前のアクション</target>
        </trans-unit>
        <trans-unit id="077272393c1edab2916968364e29494b3d96b143" translate="yes" xml:space="preserve">
          <source>For each path identifies if that path is in fact new.</source>
          <target state="translated">各パスについて、そのパスが実際に新しいものであるかどうかを識別します。</target>
        </trans-unit>
        <trans-unit id="70daddc43f303edbcbd09b46d7f6250e5c21d2f8" translate="yes" xml:space="preserve">
          <source>For each property found in both of these two sources, JNDI determines the property's value as follows. If the property is one of the standard JNDI properties that specify a list of JNDI factories (listed &lt;a href=&quot;#LISTPROPS&quot;&gt;above&lt;/a&gt;), the values are concatenated into a single colon-separated list. For other properties, only the first value found is used.</source>
          <target state="translated">これら2つのソースの両方で見つかった各プロパティについて、JNDIは次のようにプロパティの値を決定します。プロパティが、JNDIファクトリ（&lt;a href=&quot;#LISTPROPS&quot;&gt;上記&lt;/a&gt;）のリストを指定する標準JNDIプロパティの1つである場合、値は単一のコロンで区切られたリストに連結されます。その他のプロパティでは、最初に見つかった値のみが使用されます。</target>
        </trans-unit>
        <trans-unit id="90dc92c1a206cf79e9d08ca3b0fa19bc4dfdd624" translate="yes" xml:space="preserve">
          <source>For each property found in both of these two sources, or in more than one application resource file, the property's value is determined as follows. If the property is one of the standard JNDI properties that specify a list of JNDI factories (see &lt;a href=&quot;context#LISTPROPS&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt;), all of the values are concatenated into a single colon-separated list. For other properties, only the first value found is used.</source>
          <target state="translated">これら2つのソースの両方、または複数のアプリケーションリソースファイルで見つかった各プロパティについて、プロパティの値は次のように決定されます。プロパティがJNDIファクトリのリストを指定する標準のJNDIプロパティの1つである場合（&lt;a href=&quot;context#LISTPROPS&quot;&gt; &lt;code&gt;Context&lt;/code&gt; を&lt;/a&gt;参照）、すべての値が単一のコロンで区切られたリストに連結されます。その他のプロパティでは、最初に見つかった値のみが使用されます。</target>
        </trans-unit>
        <trans-unit id="b2a5c213817cdd80511492b1f5a1b49d548c1151" translate="yes" xml:space="preserve">
          <source>For each property found in more than one application resource file, JNDI uses the first value found or, in a few cases where it makes sense to do so, it concatenates all of the values (details are given below). For example, if the &quot;java.naming.factory.object&quot; property is found in three &lt;code&gt;jndi.properties&lt;/code&gt; resource files, the list of object factories is a concatenation of the property values from all three files. Using this scheme, each deployable component is responsible for listing the factories that it exports. JNDI automatically collects and uses all of these export lists when searching for factory classes.</source>
          <target state="translated">JNDIは、複数のアプリケーションリソースファイルで見つかったプロパティごとに、最初に見つかった値を使用します。そうすることが理にかなっているいくつかのケースでは、すべての値を連結します（詳細は以下で説明します）。たとえば、「java.naming.factory.object」プロパティが3つの &lt;code&gt;jndi.properties&lt;/code&gt; リソースファイルにある場合、オブジェクトファクトリのリストは3つのファイルすべてのプロパティ値を連結したものです。このスキームを使用して、デプロイ可能な各コンポーネントは、エクスポートするファクトリのリストを作成します。 JNDIは、ファクトリクラスを検索するときに、これらすべてのエクスポートリストを自動的に収集して使用します。</target>
        </trans-unit>
        <trans-unit id="cebf057d31e3a874e277390510d8867ee4415f1a" translate="yes" xml:space="preserve">
          <source>For each representation [</source>
          <target state="translated">各表現について [</target>
        </trans-unit>
        <trans-unit id="47a9561df7b527f4b2aab61f4f34ec8cc6a9b40c" translate="yes" xml:space="preserve">
          <source>For each text attribute, the documentation provides:</source>
          <target state="translated">各テキスト属性については、ドキュメントが提供しています。</target>
        </trans-unit>
        <trans-unit id="3fc4fa19139d0316b7911716ec07a2b22e32aa79" translate="yes" xml:space="preserve">
          <source>For each upper bound B :</source>
          <target state="translated">各上界Bについて .</target>
        </trans-unit>
        <trans-unit id="b1963cf2281039f3bd61fa6e3d2bbdd1608d8271" translate="yes" xml:space="preserve">
          <source>For each upper bound B:</source>
          <target state="translated">それぞれの上界Bに対して</target>
        </trans-unit>
        <trans-unit id="0f830a65e3f2e9d17727af61b48af4b494bd849c" translate="yes" xml:space="preserve">
          <source>For efficiency, a node passed to the filter may not be the same as the one that is actually in the tree. And the actual node (node object identity) may be reused during the process of filtering and serializing a document.</source>
          <target state="translated">効率化のために、フィルタに渡されるノードは、実際にツリー内にあるものと同じではないかもしれません。そして、実際のノード(ノードオブジェクトの同一性)は、文書をフィルタリングしてシリアライズする過程で再利用されてもよい。</target>
        </trans-unit>
        <trans-unit id="851ce3cbc9de3b0a8b7e8eabea78affca6c64eaf" translate="yes" xml:space="preserve">
          <source>For efficiency, the Element node passed to the filter may not be the same one as is actually placed in the tree if the node is accepted. And the actual node (node object identity) may be reused during the process of reading in and filtering a document.</source>
          <target state="translated">効率化のために、フィルタに渡されるElementノードは、ノードが受け入れられた場合に実際にツリーに配置されるものと同じではないかもしれません。そして、実際のノード(ノードオブジェクトの同一性)は、文書を読み込んでフィルタリングする過程で再利用されることがあります。</target>
        </trans-unit>
        <trans-unit id="6808db189d4064c914947cfda276df1fb67492d5" translate="yes" xml:space="preserve">
          <source>For encodings consisting of multiple certificates, use &lt;code&gt;generateCertificates&lt;/code&gt; when you want to parse a collection of possibly unrelated certificates. Otherwise, use &lt;code&gt;generateCertPath&lt;/code&gt; when you want to generate a &lt;code&gt;CertPath&lt;/code&gt; (a certificate chain) and subsequently validate it with a &lt;code&gt;CertPathValidator&lt;/code&gt;.</source>
          <target state="translated">複数の証明書で構成されるエンコーディングの場合、関連性のない可能性のある証明書のコレクションを解析 &lt;code&gt;generateCertificates&lt;/code&gt; 場合は、generateCertificatesを使用します。それ以外の場合、 &lt;code&gt;CertPath&lt;/code&gt; （証明書チェーン）を生成し、その後 &lt;code&gt;CertPathValidator&lt;/code&gt; で検証する場合は、 &lt;code&gt;generateCertPath&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="6442f87b0f03b18ad3f252a02ec0dd0852bad5c7" translate="yes" xml:space="preserve">
          <source>For events related to the parsing of a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6119a588162f17f778d02e4197d780c8a89fc19a" translate="yes" xml:space="preserve">
          <source>For events relating to an individual annotation processing round.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000f7e62b833e5f35b5ce3cc6a4c0eab6e0b58e9" translate="yes" xml:space="preserve">
          <source>For events relating to class files being generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b6d4df43d90f4a744a97db77e904c593298d64" translate="yes" xml:space="preserve">
          <source>For events relating to elements being analyzed for errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022e46c741aec213a3a33e316e458ad4ac5e21cb" translate="yes" xml:space="preserve">
          <source>For events relating to elements being entered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b13fbcf15ea4eff73687711f5e62eacd6fa470" translate="yes" xml:space="preserve">
          <source>For events relating to overall annotation processing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c58b6e9bc484c08c212d940518dbfc22676fe01" translate="yes" xml:space="preserve">
          <source>For every Java type &lt;em&gt;J&lt;/em&gt;, the MXBean mapping is described by the following information:</source>
          <target state="translated">すべてのJavaタイプ&lt;em&gt;J&lt;/em&gt;について、MXBeanマッピングは次の情報によって記述されます。</target>
        </trans-unit>
        <trans-unit id="dc3c09a115b4ee611eb7505826a4fa0c2a8495d8" translate="yes" xml:space="preserve">
          <source>For example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670a909717db4485fe98bcf482ca6b5ed344272b" translate="yes" xml:space="preserve">
          <source>For example -</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d25b7b1723971b685662d129ae6845002a82989" translate="yes" xml:space="preserve">
          <source>For example this code returns a date on the last day of July:</source>
          <target state="translated">例えば、このコードは7月の最終日の日付を返します。</target>
        </trans-unit>
        <trans-unit id="2e17e901f7efa9c67eab5d1d5cbdc89f3e5ba8cd" translate="yes" xml:space="preserve">
          <source>For example to count the unique imports for all the files in a file hierarchy on a Unix compatible platform:</source>
          <target state="translated">例えば、Unix互換プラットフォーム上のファイル階層内のすべてのファイルの一意のインポートをカウントするには、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="a93be9a98e0ead9fb758dc65b47e6eacc04ae211" translate="yes" xml:space="preserve">
          <source>For example to read from a stream as written by the example in ObjectOutputStream:</source>
          <target state="translated">例えば、ObjectOutputStreamの例で書いたようにストリームから読み出す場合。</target>
        </trans-unit>
        <trans-unit id="dea8f92e5ff92dd10bdae905afaf950bcc028834" translate="yes" xml:space="preserve">
          <source>For example to write an object that can be read by the example in ObjectInputStream:</source>
          <target state="translated">例えば、ObjectInputStreamの例で読めるオブジェクトを書く場合。</target>
        </trans-unit>
        <trans-unit id="ed3bd207737b554201ad4873d19d79f75b22c5dd" translate="yes" xml:space="preserve">
          <source>For example using UTF-8 as the encoding scheme the string &quot;The string &amp;uuml;@foo-bar&quot; would get converted to &quot;The+string+%C3%BC%40foo-bar&quot; because in UTF-8 the character &amp;uuml; is encoded as two bytes C3 (hex) and BC (hex), and the character @ is encoded as one byte 40 (hex).</source>
          <target state="translated">たとえば、エンコーディングスキームとしてUTF-8を使用すると、文字列 &quot;The string&amp;uuml;@ foo-bar&quot;は &quot;The + string +％C3％BC％40foo-bar&quot;に変換されます。これは、UTF-8では文字&amp;uuml;が2つとしてエンコードされるためです。バイトC3（16進数）およびBC（16進数）、および文字@は1バイト40（16進数）としてエンコードされます。</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="77436c62db40fb0d8e10ad4f0044d6f872750e7a" translate="yes" xml:space="preserve">
          <source>For example, &quot;*&quot;, &quot;javax.management.remote.JMXPrincipal.*&quot; and &quot;javax.management.remote.JMXPrincipal.delegate&quot; are valid target names. The first one denotes any principal name from any principal class, the second one denotes any principal name of the concrete principal class &lt;code&gt;javax.management.remote.JMXPrincipal&lt;/code&gt; and the third one denotes a concrete principal name &lt;code&gt;delegate&lt;/code&gt; of the concrete principal class &lt;code&gt;javax.management.remote.JMXPrincipal&lt;/code&gt;.</source>
          <target state="translated">たとえば、「*」、「javax.management.remote.JMXPrincipal。*」、「javax.management.remote.JMXPrincipal.delegate」は有効なターゲット名です。 1つ目は任意のプリンシパルクラスの任意のプリンシパル名を示し、2つ目は具象プリンシパルクラス &lt;code&gt;javax.management.remote.JMXPrincipal&lt;/code&gt; の任意のプリンシパル名を示し、3つ目は具象プリンシパルクラスjavax.managementの具象プリンシパル名 &lt;code&gt;delegate&lt;/code&gt; を示し &lt;code&gt;javax.management.remote.JMXPrincipal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e1f1fc71f706b96406965545c5a72537af23c22f" translate="yes" xml:space="preserve">
          <source>For example, &quot;1 year, 6 months and 3 days&quot; minus &quot;2 years, 2 months and 2 days&quot; returns &quot;-1 years, 4 months and 1 day&quot;.</source>
          <target state="translated">例えば、「1年6ヶ月3日」から「2年2ヶ月2日」を引くと、「-1年4ヶ月1日」が返ってきます。</target>
        </trans-unit>
        <trans-unit id="ce2f04507ae8e2998174aa82e754a89ec2df289f" translate="yes" xml:space="preserve">
          <source>For example, &quot;1 year, 6 months and 3 days&quot; plus &quot;2 years, 2 months and 2 days&quot; returns &quot;3 years, 8 months and 5 days&quot;.</source>
          <target state="translated">例えば、「1年6ヶ月と3日」に「2年2ヶ月と2日」を足すと、「3年8ヶ月と5日」が返ってきます。</target>
        </trans-unit>
        <trans-unit id="cd1ca285238b6f4f71a5a84cbdfe707d75fa2f47" translate="yes" xml:space="preserve">
          <source>For example, &quot;CertificateFactory.X.509&quot; would be satisfied by any provider that supplied a CertificateFactory implementation for X.509 certificates.</source>
          <target state="translated">例えば、「CertificateFactory.X.509」は、X.509 証明書用の CertificateFactory 実装を提供しているプロバイダであれば、どのプロバイダでも満たすことができます。</target>
        </trans-unit>
        <trans-unit id="c41348f1997c9b465cb11a4e4b35ee11f6fc435c" translate="yes" xml:space="preserve">
          <source>For example, &quot;P1D&quot; (1 day) is equal to &quot;PT24H&quot; (24 hours).</source>
          <target state="translated">例えば、「P1D」(1日)は「PT24H」(24時間)と同じです。</target>
        </trans-unit>
        <trans-unit id="01a5173bc02a3a282df0b5b324e7dd8980aadd3c" translate="yes" xml:space="preserve">
          <source>For example, &quot;P1D&quot; (one day) &amp;gt; &quot;PT12H&quot; (12 hours) and &quot;P2Y&quot; (two years) &amp;gt; &quot;P23M&quot; (23 months).</source>
          <target state="translated">たとえば、「P1D」（1日）&amp;gt;「PT12H」（12時間）および「P2Y」（2年）&amp;gt;「P23M」（23か月）。</target>
        </trans-unit>
        <trans-unit id="f63fe4a2a7c054829c4bfb4607b20ee971586bd3" translate="yes" xml:space="preserve">
          <source>For example, &quot;Signature.SHA1withDSA KeySize:1024&quot; would be satisfied by any provider that implemented the SHA1withDSA signature algorithm with a keysize of 1024 (or larger).</source>
          <target state="translated">例えば、「Signature.SHA1withDSA KeySize:1024」は、鍵サイズが1024(またはそれ以上)のSHA1withDSA署名アルゴリズムを実装したプロバイダであれば、どのプロバイダでも満たすことができます。</target>
        </trans-unit>
        <trans-unit id="23834668b4f42aa3eff36d9dc3af1cb803a05d8f" translate="yes" xml:space="preserve">
          <source>For example, &quot;d:k=*&quot; and &quot;d:k=*,*&quot; are property value patterns whereas &quot;d:k=v,*&quot; is not.</source>
          <target state="translated">例えば、「d:k=*」と「d:k=*,*」はプロパティ値のパターンであるのに対し、「d:k=v,*」はプロパティ値のパターンではありません。</target>
        </trans-unit>
        <trans-unit id="693804fe51c05f08e1e089946166fd022bbe5638" translate="yes" xml:space="preserve">
          <source>For example, &quot;d:k=v,*&quot; and &quot;d:k=*,*&quot; are key property list patterns whereas &quot;d:k=*&quot; is not.</source>
          <target state="translated">例えば、&quot;d:k=v,*&quot;と &quot;d:k=*,*&quot;はキープロパティのリストパターンであるのに対し、&quot;d:k=*&quot;はそうではありません。</target>
        </trans-unit>
        <trans-unit id="8dfc24b67f40b9ce20a215e59dc00c07892dee26" translate="yes" xml:space="preserve">
          <source>For example, &quot;text/sgml&quot; will be selected over &quot;text/html&quot;, and &lt;code&gt;DataFlavor.stringFlavor&lt;/code&gt; will be chosen over &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt;.</source>
          <target state="translated">たとえば、「text / html」よりも「text / sgml」が選択され、 &lt;code&gt;DataFlavor.stringFlavor&lt;/code&gt; よりもDataFlavor.stringFlavorが選択され &lt;code&gt;DataFlavor.plainTextFlavor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f203035b2d853f5578c6fa1376f1f2226371e963" translate="yes" xml:space="preserve">
          <source>For example, 'ppH' outputs the hour-of-day padded on the left with spaces to a width of 2.</source>
          <target state="translated">例えば、'ppH'は、左側に空白を入れて幅2にした時間帯を出力します。</target>
        </trans-unit>
        <trans-unit id="fe932a3580bdae7afe6e0a4a9de58c7157cf7a7c" translate="yes" xml:space="preserve">
          <source>For example, 1904 is a leap year it is divisible by 4. 1900 was not a leap year as it is divisible by 100, however 2000 was a leap year as it is divisible by 400.</source>
          <target state="translated">例えば、1904は4で割り切れるうるう年です。1900は100で割り切れるのでうるう年ではありませんでしたが、2000は400で割り切れるのでうるう年でした。</target>
        </trans-unit>
        <trans-unit id="6a78f26713124191fac2e6d28003f9a9ac84e472" translate="yes" xml:space="preserve">
          <source>For example, 2007-03-31 minus one month would result in the invalid date 2007-02-31. Instead of returning an invalid result, the last valid day of the month, 2007-02-28, is selected instead.</source>
          <target state="translated">例えば、2007-03-31から1ヶ月を引くと、2007-02-31という無効な日付になります。無効な結果を返す代わりに、その月の最後の有効な日である 2007-02-28 が選択されます。</target>
        </trans-unit>
        <trans-unit id="4f6ba16c2096d7d81200bdc33b24cb5f6ab6239d" translate="yes" xml:space="preserve">
          <source>For example, 2007-03-31 minus one month would result in the invalid date 2007-04-31. Instead of returning an invalid result, the last valid day of the month, 2007-04-30, is selected instead.</source>
          <target state="translated">例えば、2007-03-31から1ヶ月を引くと、2007-04-31という無効な日付になります。無効な結果を返す代わりに、その月の最後の有効な日である 2007-04-30 が選択されます。</target>
        </trans-unit>
        <trans-unit id="bd615cd01a73b4d5679c49655d40ba2b42a8ae69" translate="yes" xml:space="preserve">
          <source>For example, 2007-03-31 plus one month would result in the invalid date 2007-04-31. Instead of returning an invalid result, the last valid day of the month, 2007-04-30, is selected instead.</source>
          <target state="translated">例えば、2007-03-31と1ヶ月を足すと、2007-04-31という無効な日付になります。無効な結果を返す代わりに、その月の最後の有効な日である 2007-04-30 が選択されます。</target>
        </trans-unit>
        <trans-unit id="e868a34fb2f73ca67495f195fb00081f0ca9a55a" translate="yes" xml:space="preserve">
          <source>For example, 2008-02-29 (leap year) minus one year would result in the invalid date 2007-02-29 (standard year). Instead of returning an invalid result, the last valid day of the month, 2007-02-28, is selected instead.</source>
          <target state="translated">たとえば、2008-02-29 (閏年)から 1 年を引くと、2007-02-29 (標準年)という無効な日付になります。無効な結果を返す代わりに、その月の最後の有効な日である 2007-02-28 が選択されます。</target>
        </trans-unit>
        <trans-unit id="04433b015b19f6077c09b7c0646d9668dd2e4865" translate="yes" xml:space="preserve">
          <source>For example, 2008-02-29 (leap year) minus one year would result in the invalid date 2009-02-29 (standard year). Instead of returning an invalid result, the last valid day of the month, 2009-02-28, is selected instead.</source>
          <target state="translated">たとえば、2008-02-29 (閏年)から 1 年を引くと、2009-02-29 (標準年)という無効な日付になります。無効な結果を返す代わりに、その月の最後の有効な日である2009-02-28が選択されます。</target>
        </trans-unit>
        <trans-unit id="4c2323f63b708163f478b22afb5d3d7394c2b7fb" translate="yes" xml:space="preserve">
          <source>For example, 2008-02-29 (leap year) plus one year would result in the invalid date 2009-02-29 (standard year). Instead of returning an invalid result, the last valid day of the month, 2009-02-28, is selected instead.</source>
          <target state="translated">たとえば、2008-02-29 (うるう年)に 1 年を加えた場合、2009-02-29 (標準年)という無効な日付が返されます。無効な結果を返す代わりに、その月の最後の有効な日である2009-02-28が選択されます。</target>
        </trans-unit>
        <trans-unit id="fc67e734a945db6ecd093cddd5d355c674f7062b" translate="yes" xml:space="preserve">
          <source>For example, 2008-12-31 minus one day would result in 2009-01-01.</source>
          <target state="translated">例えば、2008-12-31を1日引くと、2009-01-01となります。</target>
        </trans-unit>
        <trans-unit id="f1a5ba47be43a81f6ae6988d7484d726497287d1" translate="yes" xml:space="preserve">
          <source>For example, 2008-12-31 minus one week would result in 2009-01-07.</source>
          <target state="translated">例えば、2008-12-31から1週間を引くと、2009-01-07となります。</target>
        </trans-unit>
        <trans-unit id="a47190266a9dbf83e8257ded9a0ae0d448f4ea1b" translate="yes" xml:space="preserve">
          <source>For example, 2008-12-31 plus one day would result in 2009-01-01.</source>
          <target state="translated">例えば、2008-12-31+1日とすると、2009-01-01となります。</target>
        </trans-unit>
        <trans-unit id="be8b9caab1cbe23452ae062409cbc54469046fd9" translate="yes" xml:space="preserve">
          <source>For example, 2008-12-31 plus one week would result in 2009-01-07.</source>
          <target state="translated">例えば、2008-12-31+1週間とすると、2009-01-07となります。</target>
        </trans-unit>
        <trans-unit id="753c745299a18ae4a799071980d0926142c9ce97" translate="yes" xml:space="preserve">
          <source>For example, 2009-01-01 minus one day would result in 2008-12-31.</source>
          <target state="translated">例えば、2009-01-01から1日を引くと2008-12-31となります。</target>
        </trans-unit>
        <trans-unit id="b4903b02ec0ad82ff029ba8cebb4d342c8e56e1a" translate="yes" xml:space="preserve">
          <source>For example, 2009-01-07 minus one week would result in 2008-12-31.</source>
          <target state="translated">例えば、2009-01-07から1週間を引くと、2008-12-31となります。</target>
        </trans-unit>
        <trans-unit id="5dc35db9167b570ffed75aadc5b48a485ca7282f" translate="yes" xml:space="preserve">
          <source>For example, 30 days cannot be meaningfully compared to one month. The &lt;a href=&quot;#compare(javax.xml.datatype.Duration)&quot;&gt;&lt;code&gt;compare(Duration duration)&lt;/code&gt;&lt;/a&gt; method implements this relationship.</source>
          <target state="translated">たとえば、30日を1か月と有意義に比較することはできません。&lt;a href=&quot;#compare(javax.xml.datatype.Duration)&quot;&gt; &lt;code&gt;compare(Duration duration)&lt;/code&gt; &lt;/a&gt;メソッドの実装この関係。</target>
        </trans-unit>
        <trans-unit id="fc133e42d70b82a62bf05a26a79b0108e9f8886f" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;&quot;en&quot;&lt;/code&gt; (English), &lt;code&gt;&quot;ja-JP&quot;&lt;/code&gt; (Japanese, Japan), &lt;code&gt;&quot;*&quot;&lt;/code&gt; (special language range which matches any language tag) are basic language ranges, whereas &lt;code&gt;&quot;*-CH&quot;&lt;/code&gt; (any languages, Switzerland), &lt;code&gt;&quot;es-*&quot;&lt;/code&gt; (Spanish, any regions), and &lt;code&gt;&quot;zh-Hant-*&quot;&lt;/code&gt; (Traditional Chinese, any regions) are extended language ranges.</source>
          <target state="translated">たとえば、 &lt;code&gt;&quot;en&quot;&lt;/code&gt; （英語）、 &lt;code&gt;&quot;ja-JP&quot;&lt;/code&gt; （日本語、日本）、 &lt;code&gt;&quot;*&quot;&lt;/code&gt; （すべての言語タグに一致する特別な言語範囲）は基本的な言語範囲ですが、 &lt;code&gt;&quot;*-CH&quot;&lt;/code&gt; （すべての言語、スイス） ）、 &lt;code&gt;&quot;es-*&quot;&lt;/code&gt; &lt;code&gt;&quot;zh-Hant-*&quot;&lt;/code&gt; *」（スペイン語、任意の地域）、および「zh-Hant-*」（繁体字中国語、任意の地域）は拡張言語範囲です。</target>
        </trans-unit>
        <trans-unit id="1fb8432db4bbea954a98cb622124c212bb94692c" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;Util::getResourceBundle&lt;/code&gt; loads a resource bundle on behalf of the caller. It invokes &lt;code&gt;getCallerClass&lt;/code&gt; to identify the class whose method called &lt;code&gt;Util::getResourceBundle&lt;/code&gt;. Then, it obtains the class loader of that class, and uses the class loader to load the resource bundle. The caller class in this example is &lt;code&gt;MyTool&lt;/code&gt;.</source>
          <target state="translated">たとえば、 &lt;code&gt;Util::getResourceBundle&lt;/code&gt; は呼び出し元に代わってリソースバンドルをロードします。 &lt;code&gt;getCallerClass&lt;/code&gt; を呼び出して、 &lt;code&gt;Util::getResourceBundle&lt;/code&gt; というメソッドを持つクラスを識別します。次に、そのクラスのクラスローダーを取得し、クラスローダーを使用してリソースバンドルをロードします。この例の呼び出し元クラスは &lt;code&gt;MyTool&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="307ac7475a5766fb24af31c365da55c146a7a4e7" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;floorDiv(-4, 3) == -2&lt;/code&gt;, whereas &lt;code&gt;(-4 / 3) == -1&lt;/code&gt;.</source>
          <target state="translated">たとえば、 &lt;code&gt;floorDiv(-4, 3) == -2&lt;/code&gt; が、 &lt;code&gt;(-4 / 3) == -1&lt;/code&gt; -4/3 ）== -1です。</target>
        </trans-unit>
        <trans-unit id="9357617bd335f33004f692f6a9b76c59dbe77c62" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;floorDiv(4, 3) == 1&lt;/code&gt; and &lt;code&gt;(4 / 3) == 1&lt;/code&gt;.</source>
          <target state="translated">たとえば、 &lt;code&gt;floorDiv(4, 3) == 1&lt;/code&gt; および &lt;code&gt;(4 / 3) == 1&lt;/code&gt; 4/3 ）== 1です。</target>
        </trans-unit>
        <trans-unit id="2bb31b06521f7f1a31052bea36561e3ebec1375c" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;unwrap()&lt;/code&gt; will return a &lt;a href=&quot;sslengineresult.status#BUFFER_OVERFLOW&quot;&gt;&lt;code&gt;SSLEngineResult.Status.BUFFER_OVERFLOW&lt;/code&gt;&lt;/a&gt; result if the engine determines that there is not enough destination buffer space available. Applications should call &lt;a href=&quot;sslsession#getApplicationBufferSize()&quot;&gt;&lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt;&lt;/a&gt; and compare that value with the space available in the destination buffer, enlarging the buffer if necessary. Similarly, if &lt;code&gt;unwrap()&lt;/code&gt; were to return a &lt;a href=&quot;sslengineresult.status#BUFFER_UNDERFLOW&quot;&gt;&lt;code&gt;SSLEngineResult.Status.BUFFER_UNDERFLOW&lt;/code&gt;&lt;/a&gt;, the application should call &lt;a href=&quot;sslsession#getPacketBufferSize()&quot;&gt;&lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt;&lt;/a&gt; to ensure that the source buffer has enough room to hold a record (enlarging if necessary), and then obtain more inbound data.</source>
          <target state="translated">たとえば、 &lt;code&gt;unwrap()&lt;/code&gt; は、使用可能な宛先バッファスペースが十分にないとエンジンが判断した場合、&lt;a href=&quot;sslengineresult.status#BUFFER_OVERFLOW&quot;&gt; &lt;code&gt;SSLEngineResult.Status.BUFFER_OVERFLOW&lt;/code&gt; の&lt;/a&gt;結果を返します。アプリケーションは&lt;a href=&quot;sslsession#getApplicationBufferSize()&quot;&gt; &lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt; &lt;/a&gt;を呼び出し、その値を宛先バッファーで使用可能なスペースと比較し、必要に応じてバッファーを拡大する必要があります。同様に、 &lt;code&gt;unwrap()&lt;/code&gt; が&lt;a href=&quot;sslengineresult.status#BUFFER_UNDERFLOW&quot;&gt; &lt;code&gt;SSLEngineResult.Status.BUFFER_UNDERFLOW&lt;/code&gt; &lt;/a&gt;を返す場合、アプリケーションは&lt;a href=&quot;sslsession#getPacketBufferSize()&quot;&gt; &lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt; &lt;/a&gt;を呼び出して、ソースバッファーにレコードを保持するのに十分なスペースがあることを確認し（必要に応じて拡大）、さらに多くのインバウンドデータを取得する必要があります。 。</target>
        </trans-unit>
        <trans-unit id="2a3db823fd5d154379db38330c70c6aa05d95a7b" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;unwrap()&lt;/code&gt; will return a &lt;a href=&quot;sslengineresult.status#BUFFER_OVERFLOW&quot;&gt;&lt;code&gt;SSLEngineResult.Status.BUFFER_OVERFLOW&lt;/code&gt;&lt;/a&gt; result if the engine determines that there is not enough destination buffer space available. Applications should call &lt;a href=&quot;sslsession#getApplicationBufferSize--&quot;&gt;&lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt;&lt;/a&gt; and compare that value with the space available in the destination buffer, enlarging the buffer if necessary. Similarly, if &lt;code&gt;unwrap()&lt;/code&gt; were to return a &lt;a href=&quot;sslengineresult.status#BUFFER_UNDERFLOW&quot;&gt;&lt;code&gt;SSLEngineResult.Status.BUFFER_UNDERFLOW&lt;/code&gt;&lt;/a&gt;, the application should call &lt;a href=&quot;sslsession#getPacketBufferSize--&quot;&gt;&lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt;&lt;/a&gt; to ensure that the source buffer has enough room to hold a record (enlarging if necessary), and then obtain more inbound data.</source>
          <target state="translated">たとえば、 &lt;code&gt;unwrap()&lt;/code&gt; は、十分な宛先バッファスペースが利用できないとエンジンが判断した場合に、&lt;a href=&quot;sslengineresult.status#BUFFER_OVERFLOW&quot;&gt; &lt;code&gt;SSLEngineResult.Status.BUFFER_OVERFLOW&lt;/code&gt; &lt;/a&gt;結果を返します。アプリケーションは&lt;a href=&quot;sslsession#getApplicationBufferSize--&quot;&gt; &lt;code&gt;SSLSession.getApplicationBufferSize()&lt;/code&gt; &lt;/a&gt;を呼び出し、その値を宛先バッファーで使用可能なスペースと比較して、必要に応じてバッファーを拡大する必要があります。同様に、 &lt;code&gt;unwrap()&lt;/code&gt; が&lt;a href=&quot;sslengineresult.status#BUFFER_UNDERFLOW&quot;&gt; &lt;code&gt;SSLEngineResult.Status.BUFFER_UNDERFLOW&lt;/code&gt; &lt;/a&gt;を返す場合、アプリケーションは&lt;a href=&quot;sslsession#getPacketBufferSize--&quot;&gt; &lt;code&gt;SSLSession.getPacketBufferSize()&lt;/code&gt; &lt;/a&gt;を呼び出して、ソースバッファーにレコードを保持するための十分なスペースがあることを確認し（必要に応じて拡大）、さらにインバウンドデータを取得します。 。</target>
        </trans-unit>
        <trans-unit id="3427a048cebb7d267538d0ecbaae0369b4a34189" translate="yes" xml:space="preserve">
          <source>For example, January 1, 1998 is a Thursday. If &lt;code&gt;
 getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;MONDAY&lt;/code&gt; and &lt;code&gt;
 getMinimalDaysInFirstWeek()&lt;/code&gt; is 4 (ISO 8601 standard compatible setting), then week 1 of 1998 starts on December 29, 1997, and ends on January 4, 1998. The week year is 1998 for the last three days of calendar year 1997. If, however, &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;SUNDAY&lt;/code&gt;, then week 1 of 1998 starts on January 4, 1998, and ends on January 10, 1998; the first three days of 1998 then are part of week 53 of 1997 and their week year is 1997.</source>
          <target state="translated">たとえば、1998年1月1日は木曜日です。場合 &lt;code&gt; getFirstDayOfWeek()&lt;/code&gt; ある &lt;code&gt;MONDAY&lt;/code&gt; および &lt;code&gt; getMinimalDaysInFirstWeek()&lt;/code&gt; 4（ISO 8601標準互換性の設定）で、その後、1月4日、1998年に1998の1997年12月29日に開始し、終了の週1週年は、最後の3日間1998ですただし、 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; が &lt;code&gt;SUNDAY&lt;/code&gt; の場合、1998年の第1週は、1998年1月4日に始まり、1998年1月10日に終わります。1998年の最初の3日間は、1997年の第53週の一部であり、その週の年は1997年です。</target>
        </trans-unit>
        <trans-unit id="1998d630e1504268351aa6615083ecf8974433fd" translate="yes" xml:space="preserve">
          <source>For example, January 1, 1998 is a Thursday. If &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;MONDAY&lt;/code&gt; and &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; is 4 (ISO 8601 standard compatible setting), then week 1 of 1998 starts on December 29, 1997, and ends on January 4, 1998. The week year is 1998 for the last three days of calendar year 1997. If, however, &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;SUNDAY&lt;/code&gt;, then week 1 of 1998 starts on January 4, 1998, and ends on January 10, 1998; the first three days of 1998 then are part of week 53 of 1997 and their week year is 1997.</source>
          <target state="translated">たとえば、1998年1月1日は木曜日です。場合 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; ある &lt;code&gt;MONDAY&lt;/code&gt; および &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; 4（ISO 8601標準互換性の設定）で、その後、1月4日、1998年に1998の1997年12月29日に開始し、終了の週1週年は、最後の3日間1998ですただし、 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; が &lt;code&gt;SUNDAY&lt;/code&gt; の場合、1998年の第1週は1998年1月4日から始まり、1998年1月10日に終了します。 1998年の最初の3日間は1997年の53週の一部であり、それらの週の年は1997年です。</target>
        </trans-unit>
        <trans-unit id="e092825d8d7d24993000ffbf9f66dd544c8f8c1a" translate="yes" xml:space="preserve">
          <source>For example, Paris is one hour ahead of Greenwich/UTC in winter and two hours ahead in summer. The &lt;code&gt;ZoneId&lt;/code&gt; instance for Paris will reference two &lt;code&gt;ZoneOffset&lt;/code&gt; instances - a &lt;code&gt;+01:00&lt;/code&gt; instance for winter, and a &lt;code&gt;+02:00&lt;/code&gt; instance for summer.</source>
          <target state="translated">たとえば、パリは、冬はグリニッジ/ UTCより1時間早く、夏は2時間進んでいます。Paris の &lt;code&gt;ZoneId&lt;/code&gt; インスタンスは2つの &lt;code&gt;ZoneOffset&lt;/code&gt; インスタンスを参照します- 冬の &lt;code&gt;+01:00&lt;/code&gt; &lt;code&gt;+02:00&lt;/code&gt; インスタンスと夏の+02：00インスタンス。</target>
        </trans-unit>
        <trans-unit id="d688f4f440475c5a1db8e0e10b800e36113df212" translate="yes" xml:space="preserve">
          <source>For example, TimeZone.getTimeZone(&quot;GMT-8&quot;).getID() returns &quot;GMT-08:00&quot;.</source>
          <target state="translated">例えば、TimeZone.getTimeZone(&quot;GMT-8&quot;).getID()は &quot;GMT-08:00 &quot;を返します。</target>
        </trans-unit>
        <trans-unit id="57c7ca5a012c91a082608be74e8403d76eb6feca" translate="yes" xml:space="preserve">
          <source>For example, a 3-banded &lt;code&gt;Raster&lt;/code&gt; might have the following transformation applied to each pixel in order to invert the second band of the &lt;code&gt;Raster&lt;/code&gt;.</source>
          <target state="translated">たとえば、3バンド &lt;code&gt;Raster&lt;/code&gt; では、 &lt;code&gt;Raster&lt;/code&gt; 2番目のバンドを反転するために、各ピクセルに次の変換が適用される場合があります。</target>
        </trans-unit>
        <trans-unit id="fe9f6aeedfb8de865524def4fbb728eedaecd29c" translate="yes" xml:space="preserve">
          <source>For example, a Start TLS extended request class would need to know how to process a Start TLS extended response. It does this by creating a class that implements ExtendedResponse.</source>
          <target state="translated">例えば、Start TLS 拡張リクエストクラスは、Start TLS 拡張レスポンスを処理する方法を知る必要があります。これは ExtendedResponse を実装したクラスを作成することで行います。</target>
        </trans-unit>
        <trans-unit id="0c39f664631a0cf28a49a0e35b1cefa452e0a0bb" translate="yes" xml:space="preserve">
          <source>For example, a base value of &lt;code&gt;1980&lt;/code&gt; and a width of &lt;code&gt;2&lt;/code&gt; will have valid values from &lt;code&gt;1980&lt;/code&gt; to &lt;code&gt;2079&lt;/code&gt;. During parsing, the text &lt;code&gt;&quot;12&quot;&lt;/code&gt; will result in the value &lt;code&gt;2012&lt;/code&gt; as that is the value within the range where the last two characters are &quot;12&quot;. By contrast, parsing the text &lt;code&gt;&quot;1915&quot;&lt;/code&gt; will result in the value &lt;code&gt;1915&lt;/code&gt;.</source>
          <target state="translated">例えば、の基本値 &lt;code&gt;1980&lt;/code&gt; との幅は &lt;code&gt;2&lt;/code&gt; から有効な値を持つことになります &lt;code&gt;1980&lt;/code&gt; 年に &lt;code&gt;2079&lt;/code&gt; 年。解析中、テキスト &lt;code&gt;&quot;12&quot;&lt;/code&gt; は値 &lt;code&gt;2012&lt;/code&gt; になります。これは、最後の2文字が「12」である範囲内の値であるためです。対照的に、テキスト &lt;code&gt;&quot;1915&quot;&lt;/code&gt; を解析すると、値は &lt;code&gt;1915&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="66c71f404fe84e7574fa1935e3403b27fa6ab778" translate="yes" xml:space="preserve">
          <source>For example, a bean which supports named properties would have a two argument method signature for adding a &lt;code&gt;PropertyChangeListener&lt;/code&gt; for a property:</source>
          <target state="translated">たとえば、名前付きプロパティをサポートするBeanには、 &lt;code&gt;PropertyChangeListener&lt;/code&gt; を追加するための2つの引数を持つメソッドシグネチャがあります。</target>
        </trans-unit>
        <trans-unit id="42cb1eb4764ec3ddad58273862c1d25cfa5133d2" translate="yes" xml:space="preserve">
          <source>For example, a caller can invoke &lt;code&gt;trySetAccessible&lt;/code&gt; on a &lt;code&gt;Method&lt;/code&gt; object for a private instance method &lt;code&gt;p.T::privateMethod&lt;/code&gt; to suppress the checks for Java language access control when the &lt;code&gt;Method&lt;/code&gt; is invoked. If &lt;code&gt;p.T&lt;/code&gt; class is in a different module to the caller and package &lt;code&gt;p&lt;/code&gt; is open to at least the caller's module, the code below successfully sets the &lt;code&gt;accessible&lt;/code&gt; flag to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">例えば、発信者が呼び出すことができる &lt;code&gt;trySetAccessible&lt;/code&gt; を上 &lt;code&gt;Method&lt;/code&gt; プライベートインスタンスメソッドのオブジェクト &lt;code&gt;p.T::privateMethod&lt;/code&gt; と、Java言語のアクセス制御のためのチェックを抑制するため &lt;code&gt;Method&lt;/code&gt; 呼び出されます。もし &lt;code&gt;p.T&lt;/code&gt; クラスは、呼び出し側に別のモジュールであり、パッケージ &lt;code&gt;p&lt;/code&gt; は、少なくとも、呼び出し側のモジュールに開かれている、以下のコードが正常に設定されます &lt;code&gt;accessible&lt;/code&gt; にフラグを &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f98bd693b65418b7676311d076cc95cc65256ecb" translate="yes" xml:space="preserve">
          <source>For example, a caller might bind a printer object with some printer-related attributes.</source>
          <target state="translated">例えば、呼び出し元はプリンタ関連の属性を持つプリンタオブジェクトをバインドするかもしれません。</target>
        </trans-unit>
        <trans-unit id="6d94c61f647d454a1fa4c444b818c29312b4a2a0" translate="yes" xml:space="preserve">
          <source>For example, a factory might use the BER encoded data in basic control and return an instance of a VirtualListReplyControl.</source>
          <target state="translated">例えば、工場は基本制御でBERエンコードされたデータを使用し、VirtualListReplyControlのインスタンスを返すかもしれません。</target>
        </trans-unit>
        <trans-unit id="5f4c82aa3549e686137815bb739d3a70a2ae3334" translate="yes" xml:space="preserve">
          <source>For example, a field with the value &lt;code&gt;0.5&lt;/code&gt; annotated by this annotation, should be interpreted as &lt;code&gt;50%&lt;/code&gt; and rendered in a graphical user interface with a percentage sign to avoid confusion with &lt;code&gt;0.005%&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa59bf2661efe7c994e38c7d7b8d6548f8749dc" translate="yes" xml:space="preserve">
          <source>For example, a key set of a &lt;a href=&quot;concurrent/concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt; is a concurrent source. A Spliterator created from the source reports a characteristic of &lt;code&gt;CONCURRENT&lt;/code&gt;.</source>
          <target state="translated">たとえば、&lt;a href=&quot;concurrent/concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; の&lt;/a&gt;キーセットは並行ソースです。ソースから作成されたスプリッターは、 &lt;code&gt;CONCURRENT&lt;/code&gt; の特性を報告します。</target>
        </trans-unit>
        <trans-unit id="f3bf09d65d1b744736bfff4d727827c030a90735" translate="yes" xml:space="preserve">
          <source>For example, a plugin constructor can call this method to register a listener to listen to the &lt;a href=&quot;jconsolecontext.connectionstate&quot;&gt;&lt;code&gt;connectionState&lt;/code&gt;&lt;/a&gt; property changes and the listener will be added to the &lt;a href=&quot;jconsolecontext#addPropertyChangeListener(java.beans.PropertyChangeListener)&quot;&gt;&lt;code&gt;JConsoleContext&lt;/code&gt;&lt;/a&gt; object when it is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b126924e79c2834f2d9a043c26ae9dc7d8a62dfd" translate="yes" xml:space="preserve">
          <source>For example, a provider may supply a subclass of &lt;code&gt;CipherSpi&lt;/code&gt; that implements</source>
          <target state="translated">たとえば、プロバイダーは &lt;code&gt;CipherSpi&lt;/code&gt; のサブクラスを提供して、</target>
        </trans-unit>
        <trans-unit id="3a588ecb609a8731396bc6e7d6ee6ce1237d9150" translate="yes" xml:space="preserve">
          <source>For example, after the following code is executed:</source>
          <target state="translated">例えば、以下のコードを実行した後。</target>
        </trans-unit>
        <trans-unit id="2267a27b43c9dd4b60e4328d79e5f67cbcbd0a30" translate="yes" xml:space="preserve">
          <source>For example, an MBean representing an application's configuration could have attributes representing the different configuration items. Reading the &lt;code&gt;CacheSize&lt;/code&gt; attribute would return the current value of that item. Writing it would update the item, potentially changing the behavior of the running application. An operation such as &lt;code&gt;save&lt;/code&gt; could store the current configuration persistently. A notification such as &lt;code&gt;ConfigurationChangedNotification&lt;/code&gt; could be sent every time the configuration is changed.</source>
          <target state="translated">たとえば、アプリケーションの構成を表すMBeanは、さまざまな構成アイテムを表す属性を持つことができます。 &lt;code&gt;CacheSize&lt;/code&gt; 属性を読み取ると、そのアイテムの現在の値が返されます。書き込むとアイテムが更新され、実行中のアプリケーションの動作が変更される可能性があります。 &lt;code&gt;save&lt;/code&gt; などの操作では、現在の構成を永続的に保存できます。構成が変更されるたびに、 &lt;code&gt;ConfigurationChangedNotification&lt;/code&gt; などの通知を送信できます。</target>
        </trans-unit>
        <trans-unit id="6bec37e50bd07a7b9a1146826f2b4add33836ad5" translate="yes" xml:space="preserve">
          <source>For example, an address type could be &quot;BSD Printer Address&quot;, which specifies that it is an address to be used with the BSD printing protocol. Its contents could be the machine name identifying the location of the printer server that understands this protocol.</source>
          <target state="translated">例えば、アドレスの型は「BSDプリンタアドレス」とすることができ、これはBSD印刷プロトコルで使用されるアドレスであることを指定しています。その内容は、このプロトコルを理解するプリンタサーバの場所を特定するマシン名とすることができます。</target>
        </trans-unit>
        <trans-unit id="95e1d5796d48a176413567e598e8ec0c386d451c" translate="yes" xml:space="preserve">
          <source>For example, an annotation whose type is meta-annotated with &lt;code&gt;@Target(ElementType.FIELD)&lt;/code&gt; may only be written as a modifier for a field declaration.</source>
          <target state="translated">たとえば、 &lt;code&gt;@Target(ElementType.FIELD)&lt;/code&gt; でメタ注釈が付けられたタイプの注釈は、フィールド宣言の修飾子としてのみ記述できます。</target>
        </trans-unit>
        <trans-unit id="1a2148da4efe014a9df975d69808a41981018913" translate="yes" xml:space="preserve">
          <source>For example, an annotation whose type is meta-annotated with &lt;code&gt;@Target(ElementType.TYPE_USE)&lt;/code&gt; may be written on the type of a field (or within the type of the field, if it is a nested, parameterized, or array type), and may also appear as a modifier for, say, a class declaration.</source>
          <target state="translated">たとえば、 &lt;code&gt;@Target(ElementType.TYPE_USE)&lt;/code&gt; でメタアノテーションが付けられたタイプのアノテーションは、フィールドのタイプ（または、ネストされたタイプ、パラメーター化されたタイプ、または配列タイプの場合は、フィールドのタイプ内）に書き込むことができます。また、クラス宣言などの修飾子としても使用できます。</target>
        </trans-unit>
        <trans-unit id="e3d7fa5f16112c607e685e5e651f88ca7e56d2d8" translate="yes" xml:space="preserve">
          <source>For example, an application could create a network class loader to download class files from a server. Sample code might look like:</source>
          <target state="translated">例えば、アプリケーションは、サーバからクラスファイルをダウンロードするためのネットワーククラスローダを作成することができます。サンプルコードは次のようになります。</target>
        </trans-unit>
        <trans-unit id="52bfe2a8d638a77e4e3824130d95a5f8a374d5d7" translate="yes" xml:space="preserve">
          <source>For example, an application or library gets a SASL client by doing something like:</source>
          <target state="translated">例えば、アプリケーションやライブラリは、次のようにしてSASLクライアントを取得します。</target>
        </trans-unit>
        <trans-unit id="1828960382a974d4643dd826be7d24df87a13a41" translate="yes" xml:space="preserve">
          <source>For example, an implementation of the &lt;a href=&quot;../../text/spi/dateformatprovider&quot;&gt;&lt;code&gt;DateFormatProvider&lt;/code&gt;&lt;/a&gt; class should take the form of a jar file which contains the file:</source>
          <target state="translated">たとえば、&lt;a href=&quot;../../text/spi/dateformatprovider&quot;&gt; &lt;code&gt;DateFormatProvider&lt;/code&gt; &lt;/a&gt;クラスの実装は、次のファイルを含むjarファイルの形式を取る必要があります。</target>
        </trans-unit>
        <trans-unit id="c4504425379be6e57446a265c161123e2f772abb" translate="yes" xml:space="preserve">
          <source>For example, an instance of &lt;a href=&quot;concurrent/copyonwritearraylist&quot;&gt;&lt;code&gt;CopyOnWriteArrayList&lt;/code&gt;&lt;/a&gt; is an immutable source. A Spliterator created from the source reports a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt;.</source>
          <target state="translated">たとえば、&lt;a href=&quot;concurrent/copyonwritearraylist&quot;&gt; &lt;code&gt;CopyOnWriteArrayList&lt;/code&gt; の&lt;/a&gt;インスタンスは不変のソースです。ソースから作成された &lt;code&gt;IMMUTABLE&lt;/code&gt; は、IMMUTABLEの特性を報告します。</target>
        </trans-unit>
        <trans-unit id="4d64ae9863fdb213ccc2efe6d6e0617a30bbaa25" translate="yes" xml:space="preserve">
          <source>For example, an instance of &lt;code&gt;gYear&lt;/code&gt; can be created invoking this factory with &lt;code&gt;month&lt;/code&gt; and &lt;code&gt;day&lt;/code&gt; parameters set to &lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt;&lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">たとえば、 &lt;code&gt;gYear&lt;/code&gt; のインスタンスは、 &lt;code&gt;month&lt;/code&gt; と &lt;code&gt;day&lt;/code&gt; パラメータを&lt;a href=&quot;datatypeconstants#FIELD_UNDEFINED&quot;&gt; &lt;code&gt;DatatypeConstants.FIELD_UNDEFINED&lt;/code&gt; に&lt;/a&gt;設定してこのファクトリを呼び出すように作成できます。</target>
        </trans-unit>
        <trans-unit id="eebff7ebeaf954ec4ab1a27b1905b35bb41b2bae" translate="yes" xml:space="preserve">
          <source>For example, calling &lt;code&gt;ScrollPane.setScrollPosition&lt;/code&gt; and then &lt;code&gt;getScrollPosition&lt;/code&gt; may return an incorrect value if the original request has not yet been processed.</source>
          <target state="translated">たとえば、元のリクエストがまだ処理されていない場合、 &lt;code&gt;ScrollPane.setScrollPosition&lt;/code&gt; を呼び出してから &lt;code&gt;getScrollPosition&lt;/code&gt; を呼び出すと、誤った値が返されることがあります。</target>
        </trans-unit>
        <trans-unit id="c49493292c987a394b19f8ed522472d06c5c2f95" translate="yes" xml:space="preserve">
          <source>For example, configuration data for a simple keystore domain comprising three keystores is shown below:</source>
          <target state="translated">例えば、3つのキーストアからなる単純なキーストアドメインの構成データを以下に示す。</target>
        </trans-unit>
        <trans-unit id="99107e117c2889e51b14699fb5352bf8f38f4d15" translate="yes" xml:space="preserve">
          <source>For example, consider &lt;code&gt;builder.appendValue(YEAR).appendValue(MONTH_OF_YEAR, 2);&lt;/code&gt; The year is a variable width parse of between 1 and 19 digits. The month is a fixed width parse of 2 digits. Because these were appended to the same builder immediately after one another, the year parser will reserve two digits for the month to parse. Thus, the text '201106' will correctly parse to a year of 2011 and a month of 6. Without adjacent value parsing, the year would greedily parse all six digits and leave nothing for the month.</source>
          <target state="translated">たとえば、 &lt;code&gt;builder.appendValue(YEAR).appendValue(MONTH_OF_YEAR, 2);&lt;/code&gt; 考えます。年は、1〜19桁の可変幅解析です。月は2桁の固定幅の解析です。これらは同じビルダーに次々に追加されたので、年のパーサーは月を解析するために2桁を予約します。したがって、テキスト「201106」は2011年と6月に正しく解析されます。隣接する値を解析しないと、年は6桁すべてを貪欲に解析し、月には何も残しません。</target>
        </trans-unit>
        <trans-unit id="4eb27e173bb555deeaace6ea758fa2e284bad81e" translate="yes" xml:space="preserve">
          <source>For example, consider a builder setup as &lt;code&gt;builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2).optionalEnd()&lt;/code&gt;. During formatting, the minute will only be output if its value can be obtained from the date-time. During parsing, the input will be successfully parsed whether the minute is present or not.</source>
          <target state="translated">たとえば、ビルダーのセットアップを &lt;code&gt;builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2).optionalEnd()&lt;/code&gt; ます。書式設定中、日付から値を取得できる場合にのみ分が出力されます。解析中、分が存在するかどうかにかかわらず、入力は正常に解析されます。</target>
        </trans-unit>
        <trans-unit id="bd8dd1ddf4f32aeb5b0a11f4fe5fb43881c7c42d" translate="yes" xml:space="preserve">
          <source>For example, consider a builder setup as &lt;code&gt;builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2)&lt;/code&gt;. The optional section ends automatically at the end of the builder. During formatting, the minute will only be output if its value can be obtained from the date-time. During parsing, the input will be successfully parsed whether the minute is present or not.</source>
          <target state="translated">たとえば、ビルダーのセットアップを &lt;code&gt;builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2)&lt;/code&gt; ます。オプションのセクションは、ビルダーの最後で自動的に終了します。書式設定中、日付から値を取得できる場合にのみ分が出力されます。解析中、分が存在するかどうかにかかわらず、入力は正常に解析されます。</target>
        </trans-unit>
        <trans-unit id="2ef221f9f647dba2a0421f5ea02960bcddf562fa" translate="yes" xml:space="preserve">
          <source>For example, consider a formatter that parses the year, followed by an optional month, with a further optional day-of-month. Using such a formatter would require the calling code to check whether a full date, year-month or just a year had been parsed. This method can be used to default the month and day-of-month to a sensible value, such as the first of the month, allowing the calling code to always get a date.</source>
          <target state="translated">例えば、年を解析し、その後にオプションで月を解析し、さらにオプションで月の日を解析するフォーマッタを考えてみましょう。このようなフォーマッタを使用すると、呼び出したコードは、完全な日付、年月、または年だけが解析されたかどうかをチェックする必要があります。このメソッドを使用して、月と月の日を月の最初などの適切な値にデフォルトで設定することで、呼び出し側のコードが常に日付を取得できるようにします。</target>
        </trans-unit>
        <trans-unit id="08a27a201770a8b8829db90b4ec6af7aee1a054b" translate="yes" xml:space="preserve">
          <source>For example, consider a time-zone where the spring DST cutover means that the local times 01:00 to 01:59 occur twice changing from offset +02:00 to +01:00.</source>
          <target state="translated">例えば、春のDSTカットオーバーが、現地時間01:00から01:59がオフセット+02:00から+01:00に変更されて2回発生することを意味するタイムゾーンを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="502bf92ccc45e1f0f6974f47520f50019d3995f1" translate="yes" xml:space="preserve">
          <source>For example, consider a time-zone, such as 'Europe/Paris', where the Autumn DST cutover means that the local times 02:00 to 02:59 occur twice changing from offset +02:00 in summer to +01:00 in winter.</source>
          <target state="translated">例えば、「ヨーロッパ/パリ」のようなタイムゾーンを考えてみましょう。秋のDSTカットオーバーは、現地時間02:00から02:59までの時間が、夏のオフセット+02:00から冬の+01:00へと2回変化することを意味します。</target>
        </trans-unit>
        <trans-unit id="2d42880f23c0e646f2d4e506ad0e04510090d6f3" translate="yes" xml:space="preserve">
          <source>For example, consider adding a period of one day and a duration of one day to 18:00 on the evening before a daylight savings gap. The &lt;code&gt;Period&lt;/code&gt; will add the conceptual day and result in a &lt;code&gt;ZonedDateTime&lt;/code&gt; at 18:00 the following day. By contrast, the &lt;code&gt;Duration&lt;/code&gt; will add exactly 24 hours, resulting in a &lt;code&gt;ZonedDateTime&lt;/code&gt; at 19:00 the following day (assuming a one hour DST gap).</source>
          <target state="translated">たとえば、夏時間のギャップの前の夜の18:00に、1日の期間と1日の期間を追加することを検討してください。 &lt;code&gt;Period&lt;/code&gt; 概念的な一日を追加してになります &lt;code&gt;ZonedDateTime&lt;/code&gt; 翌日18時00分。対照的に、 &lt;code&gt;Duration&lt;/code&gt; は正確に24時間を追加し、翌日の19:00に &lt;code&gt;ZonedDateTime&lt;/code&gt; になります（1時間のDSTギャップを想定）。</target>
        </trans-unit>
        <trans-unit id="68df5296d7673eca3d6b63955d031bc849454994" translate="yes" xml:space="preserve">
          <source>For example, consider the following in Spanish:</source>
          <target state="translated">例えば、スペイン語で次のように考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="7cb5a4cf14b5c96f0ad5dede731407c75cf7f15a" translate="yes" xml:space="preserve">
          <source>For example, consider the text &quot;abc&quot;. TextHitInfo.trailing(1) corresponds to the right side of the 'b' in the text.</source>
          <target state="translated">例えば、「abc」というテキストを考えてみましょう。TextHitInfo.triling(1)は、テキストの「b」の右側に対応しています。</target>
        </trans-unit>
        <trans-unit id="4af7bb1c185aedbecaa994ec6f7728a83767bcac" translate="yes" xml:space="preserve">
          <source>For example, duration of one month normalizes to 31 days given the start time instance &quot;July 8th 2003, 17:40:32&quot;.</source>
          <target state="translated">例えば、開始時刻のインスタンス &quot;2003年7月8日17時40分32秒 &quot;が与えられると、1ヶ月の期間は31日に正規化されます。</target>
        </trans-unit>
        <trans-unit id="9f37546673d9f0750b6986e9d6915ec5ac72652f" translate="yes" xml:space="preserve">
          <source>For example, even though a value might be a Java String object, its directory syntax might be &quot;Printable String&quot; or &quot;Telephone Number&quot;. Or a value might be a byte array, and its directory syntax is &quot;JPEG&quot; or &quot;Certificate&quot;. For example, if this attribute's syntax is &quot;JPEG&quot;, this method would return the syntax definition for &quot;JPEG&quot;.</source>
          <target state="translated">例えば、値がJava Stringオブジェクトであっても、そのディレクトリ構文は &quot;Printable String &quot;または &quot;Telephone Number &quot;であるかもしれません。あるいは、値がバイト配列であり、そのディレクトリ構文が &quot;JPEG &quot;または &quot;証明書 &quot;であるかもしれません。例えば、この属性の構文が &quot;JPEG &quot;の場合、このメソッドは &quot;JPEG &quot;の構文定義を返します。</target>
        </trans-unit>
        <trans-unit id="9ce595e1a571880b369b3dfa35a7aa34a29c458b" translate="yes" xml:space="preserve">
          <source>For example, for dynamically-computed call site, a the first argument could be &lt;code&gt;Object&lt;/code&gt; instead of &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;, and the return type could also be &lt;code&gt;Object&lt;/code&gt; instead of &lt;code&gt;CallSite&lt;/code&gt;. (Note that the types and number of the stacked arguments limit the legal kinds of bootstrap methods to appropriately typed static methods and constructors.)</source>
          <target state="translated">たとえば、動的に計算される呼び出しサイトの場合、最初の引数は &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; ではなく &lt;code&gt;Object&lt;/code&gt; であり、戻り値の型は &lt;code&gt;CallSite&lt;/code&gt; ではなく &lt;code&gt;Object&lt;/code&gt; である可能性があります。（スタックされた引数のタイプと数は、ブートストラップメソッドの正当な種類を適切にタイプされた静的メソッドとコンストラクターに制限することに注意してください。）</target>
        </trans-unit>
        <trans-unit id="a1b86776e44cd97bbaf6958da2a1af7a82be3f3e" translate="yes" xml:space="preserve">
          <source>For example, for dynamically-computed call site, the first argument could be &lt;code&gt;Object&lt;/code&gt; instead of &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;, and the return type could also be &lt;code&gt;Object&lt;/code&gt; instead of &lt;code&gt;CallSite&lt;/code&gt;. (Note that the types and number of the stacked arguments limit the legal kinds of bootstrap methods to appropriately typed static methods and constructors.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a4d26cb6efe1f523aa46724f8fb96f7856600d" translate="yes" xml:space="preserve">
          <source>For example, for the Java type &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">たとえば、Javaタイプ &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="24ffbeae9f0f48649ff9382de5a91c3902e5591e" translate="yes" xml:space="preserve">
          <source>For example, given a beanName of &quot;x.y&quot;, Beans.instantiate would first try to read a serialized object from the resource &quot;x/y.ser&quot; and if that failed it would try to load the class &quot;x.y&quot; and create an instance of that class.</source>
          <target state="translated">例えば、&quot;x.y &quot;というbeanNameが与えられると、Beans.instantiateは最初にリソース &quot;x/y.ser &quot;からシリアライズされたオブジェクトを読み込もうとし、それが失敗した場合はクラス &quot;x.y &quot;をロードしてそのクラスのインスタンスを作成しようとします。</target>
        </trans-unit>
        <trans-unit id="35d92376d82e73bb63b8e40f940e5ec4a077d198" translate="yes" xml:space="preserve">
          <source>For example, given a date in May, the following are output:</source>
          <target state="translated">例えば、5月の日付を指定すると、以下のように出力されます。</target>
        </trans-unit>
        <trans-unit id="ecda29c3f3147c74316769a89dd8f6fe868f7043" translate="yes" xml:space="preserve">
          <source>For example, given a date that is a Wednesday, the following are output:</source>
          <target state="translated">例えば、水曜日である日付を指定すると、以下のように出力されます。</target>
        </trans-unit>
        <trans-unit id="c965f7a5f41ce80f1a25cbd34c8d47aad5df9f54" translate="yes" xml:space="preserve">
          <source>For example, given a stream of &lt;code&gt;Person&lt;/code&gt;, to calculate tallest person in each city:</source>
          <target state="translated">たとえば、 &lt;code&gt;Person&lt;/code&gt; のストリームが与えられ、各都市で最も高い人を計算するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="b713374a02cb786860f1fc8ec9775898d60b3245" translate="yes" xml:space="preserve">
          <source>For example, given a stream of &lt;code&gt;Person&lt;/code&gt;, to calculate the longest last name of residents in each city:</source>
          <target state="translated">たとえば、 &lt;code&gt;Person&lt;/code&gt; のストリームが与えられた場合、各都市の居住者の最長姓を計算するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="7e31c382624c9d6b1c417bd25fa1df6a1652aebf" translate="yes" xml:space="preserve">
          <source>For example, here is a ManagedBlocker based on a ReentrantLock:</source>
          <target state="translated">例えば、ここではReentrantLockをベースにしたManagedBlockerを紹介します。</target>
        </trans-unit>
        <trans-unit id="82156eae8fb0fc5dde9fadba753d71470b6abeef" translate="yes" xml:space="preserve">
          <source>For example, here is an initial version of a class that uses divide-by-two recursive decomposition to divide work into single pieces (leaf tasks). Even when work is split into individual calls, tree-based techniques are usually preferable to directly forking leaf tasks, because they reduce inter-thread communication and improve load balancing. In the recursive case, the second of each pair of subtasks to finish triggers completion of its parent (because no result combination is performed, the default no-op implementation of method &lt;code&gt;onCompletion&lt;/code&gt; is not overridden). A static utility method sets up the base task and invokes it (here, implicitly using the &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">たとえば、次のクラスの初期バージョンは、2で除算する再帰分解を使用して作業を単一のピース（リーフタスク）に分割します。作業が個別の呼び出しに分割されている場合でも、スレッドベースの通信を減らし、負荷分散を改善するため、通常、リーフタスクを直接分岐するよりもツリーベースの手法の方が適しています。再帰的な場合、終了するサブタスクの各ペアの2番目は、その親の完了をトリガーします（結果の組み合わせは実行されないため、メソッド &lt;code&gt;onCompletion&lt;/code&gt; のデフォルトの何もしない実装はオーバーライドされません）。静的ユーティリティメソッドは、ベースタスクを設定して呼び出します（ここでは、暗黙的に&lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt;を使用しています）。</target>
        </trans-unit>
        <trans-unit id="18b23dc8445eab9aeb0ac59b00c49b4df2c79b88" translate="yes" xml:space="preserve">
          <source>For example, here is an initial version of a utility method that uses divide-by-two recursive decomposition to divide work into single pieces (leaf tasks). Even when work is split into individual calls, tree-based techniques are usually preferable to directly forking leaf tasks, because they reduce inter-thread communication and improve load balancing. In the recursive case, the second of each pair of subtasks to finish triggers completion of their parent (because no result combination is performed, the default no-op implementation of method &lt;code&gt;onCompletion&lt;/code&gt; is not overridden). The utility method sets up the root task and invokes it (here, implicitly using the &lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt;). It is straightforward and reliable (but not optimal) to always set the pending count to the number of child tasks and call &lt;code&gt;
 tryComplete()&lt;/code&gt; immediately before returning.</source>
          <target state="translated">たとえば、これは、2分割の再帰的分解を使用して作業を単一の部分（リーフタスク）に分割するユーティリティメソッドの初期バージョンです。作業が個々の呼び出しに分割されている場合でも、ツリーベースの手法は、スレッド間の通信を減らし、負荷分散を改善するため、通常、リーフタスクを直接フォークするよりも望ましい方法です。再帰的な場合、サブタスクの各ペアの2番目が終了すると、親の完了がトリガーされます（結果の組み合わせが実行されないため、メソッド &lt;code&gt;onCompletion&lt;/code&gt; のデフォルトのno-op実装はオーバーライドされません）。ユーティリティメソッドはルートタスクを設定して呼び出します（ここでは、暗黙的に&lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt;を使用します））。保留中のカウントを常に子タスクの数に設定し、戻る直前に &lt;code&gt; tryComplete()&lt;/code&gt; を呼び出すことは、簡単で信頼性があります（ただし最適ではありません）。</target>
        </trans-unit>
        <trans-unit id="85e275d8300f52d19c548442729a421b90979a34" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;baseName&lt;/code&gt; is &lt;code&gt;&quot;baseName&quot;&lt;/code&gt; and &lt;code&gt;locale&lt;/code&gt; is &lt;code&gt;Locale(&quot;ja&quot;,&amp;nbsp;&quot;&quot;,&amp;nbsp;&quot;XX&quot;)&lt;/code&gt;, then &lt;code&gt;&quot;baseName_ja_&amp;thinsp;_XX&quot;&lt;/code&gt; is returned. If the given locale is &lt;code&gt;Locale(&quot;en&quot;)&lt;/code&gt;, then &lt;code&gt;&quot;baseName_en&quot;&lt;/code&gt; is returned.</source>
          <target state="translated">たとえば、 &lt;code&gt;baseName&lt;/code&gt; が &lt;code&gt;&quot;baseName&quot;&lt;/code&gt; で、 &lt;code&gt;locale&lt;/code&gt; が &lt;code&gt;Locale(&quot;ja&quot;,&amp;nbsp;&quot;&quot;,&amp;nbsp;&quot;XX&quot;)&lt;/code&gt; 場合、 &lt;code&gt;&quot;baseName_ja_&amp;thinsp;_XX&quot;&lt;/code&gt; が返されます。指定されたロケールが &lt;code&gt;Locale(&quot;en&quot;)&lt;/code&gt; の場合、 &lt;code&gt;&quot;baseName_en&quot;&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="ae5e4a94ee896495a820fe44097fd53ab44491bb" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;baseName&lt;/code&gt; is &lt;code&gt;&quot;p.resources.Bundle&quot;&lt;/code&gt; then the resource bundle name of &lt;code&gt;&quot;p.resources.Bundle&quot;&lt;/code&gt; of &lt;code&gt;Locale(&quot;ja&quot;, &quot;&quot;, &quot;XX&quot;)&lt;/code&gt; and &lt;code&gt;Locale(&quot;en&quot;)&lt;/code&gt; could be &lt;code&gt;
 &quot;p.resources.ja.Bundle_ja_&amp;thinsp;_XX&quot;&lt;/code&gt; and &lt;code&gt;&quot;p.resources.Bundle_en&quot;&lt;/code&gt; respectively.</source>
          <target state="translated">たとえば、 &lt;code&gt;baseName&lt;/code&gt; である &lt;code&gt;&quot;p.resources.Bundle&quot;&lt;/code&gt; のリソース・バンドル名 &lt;code&gt;&quot;p.resources.Bundle&quot;&lt;/code&gt; の &lt;code&gt;Locale(&quot;ja&quot;, &quot;&quot;, &quot;XX&quot;)&lt;/code&gt; と &lt;code&gt;Locale(&quot;en&quot;)&lt;/code&gt; あり得ます &lt;code&gt; &quot;p.resources.ja.Bundle_ja_&amp;thinsp;_XX&quot;&lt;/code&gt; と &lt;code&gt;&quot;p.resources.Bundle_en&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e94ed48679a1350002fbfba72ed6d70a0774deb8" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;com.vendor.VendorJavaCompiler&lt;/code&gt; is a provider of the &lt;code&gt;JavaCompiler&lt;/code&gt; tool then its jar file would contain the file &lt;code&gt;
 META-INF/services/javax.tools.JavaCompiler&lt;/code&gt;. This file would contain the single line:</source>
          <target state="translated">たとえば、 &lt;code&gt;com.vendor.VendorJavaCompiler&lt;/code&gt; が &lt;code&gt;JavaCompiler&lt;/code&gt; ツールのプロバイダーである場合、そのjarファイルにはファイル &lt;code&gt; META-INF/services/javax.tools.JavaCompiler&lt;/code&gt; が含まれます。このファイルには、次の1行が含まれます。</target>
        </trans-unit>
        <trans-unit id="830d8126196c337be8d88ddce1630721ca654641" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;com.vendor.VendorJavaCompiler&lt;/code&gt; is a provider of the &lt;code&gt;JavaCompiler&lt;/code&gt; tool then its jar file would contain the file &lt;code&gt;META-INF/services/javax.tools.JavaCompiler&lt;/code&gt;. This file would contain the single line:</source>
          <target state="translated">たとえば、 &lt;code&gt;com.vendor.VendorJavaCompiler&lt;/code&gt; が &lt;code&gt;JavaCompiler&lt;/code&gt; ツールのプロバイダーである場合、そのjarファイルには &lt;code&gt;META-INF/services/javax.tools.JavaCompiler&lt;/code&gt; ファイルが含まれます。このファイルには次の1行が含まれます。</target>
        </trans-unit>
        <trans-unit id="3a67cf7851c6b086e93044a3d3dddc5b85bcbeab" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;from&lt;/code&gt; was located at bank number 2, program number 11, remapping causes that bank and program location to be occupied instead by &lt;code&gt;to&lt;/code&gt;.</source>
          <target state="translated">たとえば、 &lt;code&gt;from&lt;/code&gt; がバンク番号2、プログラム番号11にある場合、再マッピングを行うと、そのバンクとプログラムの場所がtoではなく占有さ &lt;code&gt;to&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="899a0fe3dc85838c3957e2652979a348ab972b1e" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; is &lt;code&gt;SUNDAY&lt;/code&gt; and &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; is 4, then the first week of January 1998 is Sunday, January 4 through Saturday, January 10. These days have a &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; of 1. Thursday, January 1 through Saturday, January 3 have a &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; of 0. If &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; is changed to 3, then January 1 through January 3 have a &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; of 1.</source>
          <target state="translated">たとえば、 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; が &lt;code&gt;SUNDAY&lt;/code&gt; で &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; が4の場合、1998年1月の第1週は1月4日の日曜日から1月10日の土曜日です。これらの曜日の &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; は1です。1月1日木曜日から1月土曜日3の &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; は0 です。getMinimalDaysInFirstWeek &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; を3に変更すると、1月1日から1月3日までの &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; が1になります。</target>
        </trans-unit>
        <trans-unit id="cb253ab77f0e4e443fb7be6278c680bfc999539d" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;z&lt;/code&gt; refers to a string buffer object whose current contents are &lt;code&gt;&quot;start&quot;&lt;/code&gt;, then the method call &lt;code&gt;z.append(&quot;le&quot;)&lt;/code&gt; would cause the string buffer to contain &lt;code&gt;&quot;startle&quot;&lt;/code&gt;, whereas &lt;code&gt;z.insert(4, &quot;le&quot;)&lt;/code&gt; would alter the string buffer to contain &lt;code&gt;&quot;starlet&quot;&lt;/code&gt;.</source>
          <target state="translated">たとえば、 &lt;code&gt;z&lt;/code&gt; が現在のコンテンツが &lt;code&gt;&quot;start&quot;&lt;/code&gt; である文字列バッファオブジェクトを参照する場合、 &lt;code&gt;z.append(&quot;le&quot;)&lt;/code&gt; メソッド呼び出しは文字列バッファに &lt;code&gt;&quot;startle&quot;&lt;/code&gt; &lt;code&gt;z.insert(4, &quot;le&quot;)&lt;/code&gt; &quot;を含めますが、z.insert（4、 &quot; le &quot;）は、文字列バッファを変更して &lt;code&gt;&quot;starlet&quot;&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="e17dfa1bfe4e57090ded791b7e9e279a25dffa9a" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;z&lt;/code&gt; refers to a string builder object whose current contents are &quot;&lt;code&gt;start&lt;/code&gt;&quot;, then the method call &lt;code&gt;z.append(&quot;le&quot;)&lt;/code&gt; would cause the string builder to contain &quot;&lt;code&gt;startle&lt;/code&gt;&quot;, whereas &lt;code&gt;z.insert(4, &quot;le&quot;)&lt;/code&gt; would alter the string builder to contain &quot;&lt;code&gt;starlet&lt;/code&gt;&quot;.</source>
          <target state="translated">たとえば、 &lt;code&gt;z&lt;/code&gt; は、その現在の内容である文字列ビルダオブジェクトを指し、「 &lt;code&gt;start&lt;/code&gt; し、メソッド呼び出し」 &lt;code&gt;z.append(&quot;le&quot;)&lt;/code&gt; 「含有する文字列ビルダーを引き起こす &lt;code&gt;startle&lt;/code&gt; に対し、」 &lt;code&gt;z.insert(4, &quot;le&quot;)&lt;/code&gt; は、文字列ビルダーを変更して&quot; &lt;code&gt;starlet&lt;/code&gt; &quot;を含めます。</target>
        </trans-unit>
        <trans-unit id="547c3c9ef6a5b6ebe0e6555d8b1a531ba67282a4" translate="yes" xml:space="preserve">
          <source>For example, if a &lt;code&gt;MouseListener&lt;/code&gt; has been added to a component, or &lt;code&gt;enableEvents(AWTEvent.MOUSE_EVENT_MASK)&lt;/code&gt; has been invoked, then all the events defined by &lt;code&gt;MouseListener&lt;/code&gt; are dispatched to the component. On the other hand, if a &lt;code&gt;MouseMotionListener&lt;/code&gt; has not been added and &lt;code&gt;enableEvents&lt;/code&gt; has not been invoked with &lt;code&gt;AWTEvent.MOUSE_MOTION_EVENT_MASK&lt;/code&gt;, then mouse motion events are not dispatched to the component. Instead the mouse motion events are dispatched to the first ancestors that has enabled mouse motion events.</source>
          <target state="translated">例えば、場合 &lt;code&gt;MouseListener&lt;/code&gt; コンポーネント、又は追加されました &lt;code&gt;enableEvents(AWTEvent.MOUSE_EVENT_MASK)&lt;/code&gt; によって定義されたすべてのイベント次に、呼び出された &lt;code&gt;MouseListener&lt;/code&gt; コンポーネントにディスパッチされます。一方、 &lt;code&gt;MouseMotionListener&lt;/code&gt; 追加されていないと &lt;code&gt;enableEvents&lt;/code&gt; がで呼び出されていない &lt;code&gt;AWTEvent.MOUSE_MOTION_EVENT_MASK&lt;/code&gt; 、次いでマウスモーションイベントがコンポーネントにディスパッチされていません。代わりに、マウスモーションイベントは、マウスモーションイベントを有効にした最初の祖先にディスパッチされます。</target>
        </trans-unit>
        <trans-unit id="710d856edbf8bf84aeb5220900f3b61fda35b993" translate="yes" xml:space="preserve">
          <source>For example, if a Language Priority List consists of two language ranges, &lt;code&gt;&quot;zh-Hant-TW&quot;&lt;/code&gt; and &lt;code&gt;&quot;en-US&quot;&lt;/code&gt;, in prioritized order, lookup method progressively searches the language tags below in order to find the best matching language tag.</source>
          <target state="translated">たとえば、言語優先リストが &lt;code&gt;&quot;zh-Hant-TW&quot;&lt;/code&gt; と &lt;code&gt;&quot;en-US&quot;&lt;/code&gt; の2つの言語範囲で構成されている場合、優先順位の高い順に、lookupメソッドは以下の言語タグを段階的に検索して、最も一致する言語タグを見つけます。</target>
        </trans-unit>
        <trans-unit id="53695bf5cdd86be952751803915692383845fafa" translate="yes" xml:space="preserve">
          <source>For example, if a URI and local name were obtained from an element defined with &amp;lt;xyz:foo xmlns:xyz=&quot;http://xyz.foo.com/yada/baz.html&quot;/&amp;gt;, then the Qualified Name would be &quot;{http://xyz.foo.com/yada/baz.html}foo&quot;. Note that the prefix is lost.</source>
          <target state="translated">たとえば、URIとローカル名が&amp;lt;xyz：foo xmlns：xyz = &quot;http://xyz.foo.com/yada/baz.html&quot; /&amp;gt;で定義された要素から取得された場合、修飾名は次のようになります。 「{http://xyz.foo.com/yada/baz.html}foo」。プレフィックスが失われることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c282276491a44688232676e097fd20aa874468e4" translate="yes" xml:space="preserve">
          <source>For example, if a URI and local name were obtained from an element defined with &amp;lt;xyz:foo xmlns:xyz=&quot;http://xyz.foo.com/yada/baz.html&quot;/&amp;gt;, then the qualified name would be &quot;{http://xyz.foo.com/yada/baz.html}foo&quot;. Note that no prefix is used.</source>
          <target state="translated">たとえば、URIとローカル名が&amp;lt;xyz：foo xmlns：xyz = &quot;http://xyz.foo.com/yada/baz.html&quot; /&amp;gt;で定義された要素から取得された場合、修飾名は次のようになります。 「{http://xyz.foo.com/yada/baz.html}foo」。プレフィックスは使用されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="37ee5516da7948e7d83ec435b55ced0c950b2636" translate="yes" xml:space="preserve">
          <source>For example, if a response header instance contains one key &quot;HeaderName&quot; with two values &quot;value1 and value2&quot; then this object is output as two header lines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d721c1b03d9d14a9e4cf807cebbec792a07dec1f" translate="yes" xml:space="preserve">
          <source>For example, if a target class defines:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ddb7bd9c556e0ea81e6d434c0f8f6fb2342bb1" translate="yes" xml:space="preserve">
          <source>For example, if a user's Language Priority List consists of five language ranges (&lt;code&gt;&quot;zh&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-CN&quot;&lt;/code&gt;, &lt;code&gt;&quot;en&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-TW&quot;&lt;/code&gt;, and &lt;code&gt;&quot;zh-HK&quot;&lt;/code&gt;), the newly generated Language Priority List which is customized using the above map example will consists of &lt;code&gt;&quot;zh&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-Hans&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-CN&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-Hans-CN&quot;&lt;/code&gt;, &lt;code&gt;&quot;en&quot;&lt;/code&gt;, &lt;code&gt;&quot;zh-TW&quot;&lt;/code&gt;, and &lt;code&gt;&quot;zh-HK&quot;&lt;/code&gt;.</source>
          <target state="translated">たとえば、ユーザーの言語優先度リストが5つの言語範囲（ &lt;code&gt;&quot;zh&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;zh-CN&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;en&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;zh-TW&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;zh-HK&quot;&lt;/code&gt; ）で構成されている場合、新しく生成された言語優先度リストは上記のマップを使用してカスタマイズされた例は、 &lt;code&gt;&quot;zh&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;zh-Hans&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;zh-CN&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;zh-Hans-CN&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;en&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;zh-TW&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;zh-HK&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dccca141c8e739b24a4309512cb89730110c45cb" translate="yes" xml:space="preserve">
          <source>For example, if one adds two keys &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; such that &lt;code&gt;(!a.equals(b) &amp;amp;&amp;amp; a.compareTo(b) == 0)&lt;/code&gt; to a sorted set that does not use an explicit comparator, the second &lt;code&gt;add&lt;/code&gt; operation returns false (and the size of the sorted set does not increase) because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are equivalent from the sorted set's perspective.</source>
          <target state="translated">たとえば、明示的なコンパレータを使用しないソート済みセットに &lt;code&gt;(!a.equals(b) &amp;amp;&amp;amp; a.compareTo(b) == 0)&lt;/code&gt; と &lt;code&gt;b&lt;/code&gt; ように2つのキー &lt;code&gt;a&lt;/code&gt; とbを &lt;code&gt;add&lt;/code&gt; と、2番目の追加操作はfalseを返します（およびソート済みセットのサイズは増加しません）。これ &lt;code&gt;a&lt;/code&gt; 、 &lt;code&gt;b&lt;/code&gt; とbがソート済みセットの観点からは同等であるためです。</target>
        </trans-unit>
        <trans-unit id="9281b71706921b868196d03b533cffbd112d303a" translate="yes" xml:space="preserve">
          <source>For example, if the &lt;code&gt;JMXServiceURL&lt;/code&gt; is:</source>
          <target state="translated">たとえば、 &lt;code&gt;JMXServiceURL&lt;/code&gt; が次の場合：</target>
        </trans-unit>
        <trans-unit id="8b529e25ea8f5209f163d42a160cb2fc30151d43" translate="yes" xml:space="preserve">
          <source>For example, if the Cipher is initialized for decryption, the CipherInputStream will attempt to read in data and decrypt them, before returning the decrypted data.</source>
          <target state="translated">例えば、Cipher が復号化のために初期化されている場合、CipherInputStream はデータの読み込みと復号化を試み、復号化されたデータを返す前に復号化されたデータを返します。</target>
        </trans-unit>
        <trans-unit id="7724368f3e485ffdfec604e01e07ff3df51b34fc" translate="yes" xml:space="preserve">
          <source>For example, if the Gregorian change date is January 10, 1970 and the date of this &lt;code&gt;GregorianCalendar&lt;/code&gt; is January 20, 1970, the actual minimum value of the &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; field is 10 because the previous date of January 10, 1970 is December 27, 1996 (in the Julian calendar). Therefore, December 28, 1969 to January 9, 1970 don't exist.</source>
          <target state="translated">たとえば、グレゴリオ暦の変更日が1970年1月10日で、この &lt;code&gt;GregorianCalendar&lt;/code&gt; の日付が1970年1月20日である場合、1970年1月10日の以前の日付は1996年12月27日であるため、 &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; フィールドの実際の最小値は10です（ユリウス暦で）。したがって、1969年12月28日から1970年1月9日は存在しません。</target>
        </trans-unit>
        <trans-unit id="e8447515f016fd7e843ce62844c4f2eb71755b43" translate="yes" xml:space="preserve">
          <source>For example, if the an element is removed from it's parent, this method should report that the parent changed and provide an ElementChange implementation that describes the change to the parent. If the child element removed had children, these elements do not need to be reported as removed.</source>
          <target state="translated">例えば、要素が親から削除された場合、このメソッドは親が変更されたことを報告し、親への変更を記述する ElementChange の実装を提供しなければなりません。削除された子要素に子がある場合、これらの要素は削除されたと報告する必要はありません。</target>
        </trans-unit>
        <trans-unit id="33aa87758d6fb8746e61cd5b9e96eee72ff67fdd" translate="yes" xml:space="preserve">
          <source>For example, if the cipher is initialized for encryption, the CipherOutputStream will attempt to encrypt data before writing out the encrypted data.</source>
          <target state="translated">例えば、暗号化のために暗号化が初期化されている場合、CipherOutputStreamは暗号化されたデータを書き出す前にデータの暗号化を試みます。</target>
        </trans-unit>
        <trans-unit id="1479475ea5c9bec50119b10a7a4c2d86c208fd36" translate="yes" xml:space="preserve">
          <source>For example, if the first day-of-week is Sunday, then that will have the value 1, with other days ranging from Monday as 2 to Saturday as 7.</source>
          <target state="translated">例えば、週の最初の曜日が日曜日の場合、その値は1となり、他の曜日は月曜日が2、土曜日が7となります。</target>
        </trans-unit>
        <trans-unit id="b4895bff52e5cdcffa088092aeb0f239bdd75672" translate="yes" xml:space="preserve">
          <source>For example, if the first mouse button is pressed, events are sent in the following order:</source>
          <target state="translated">例えば、最初のマウスボタンが押された場合、以下の順番でイベントが送信されます。</target>
        </trans-unit>
        <trans-unit id="a2f2eb4c48388118ea43438f47cc5002b3188b1b" translate="yes" xml:space="preserve">
          <source>For example, if the following is specified in the property:</source>
          <target state="translated">例えば、プロパティに以下のように指定した場合。</target>
        </trans-unit>
        <trans-unit id="9a6f20f96d154000d074240aaa31c798fdc07419" translate="yes" xml:space="preserve">
          <source>For example, if the fully-qualified name of the class that implements &lt;code&gt;java.awt.im.spi.InputMethodDesciptor&lt;/code&gt; for the &lt;em&gt;Foo&lt;/em&gt; input method is &lt;code&gt;com.sun.ime.FooInputMethodDescriptor&lt;/code&gt;, the file &lt;code&gt;META-INF/services/java.awt.im.spi.InputMethodDescriptor&lt;/code&gt; contains a line:</source>
          <target state="translated">たとえば、&lt;em&gt;Foo&lt;/em&gt;入力メソッドの &lt;code&gt;java.awt.im.spi.InputMethodDesciptor&lt;/code&gt; を実装するクラスの完全修飾名が &lt;code&gt;com.sun.ime.FooInputMethodDescriptor&lt;/code&gt; の場合、ファイル &lt;code&gt;META-INF/services/java.awt.im.spi.InputMethodDescriptor&lt;/code&gt; は次の行が含まれています。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0d7d62e74d7435814a6cf38d36bfaaf109d9a51" translate="yes" xml:space="preserve">
          <source>For example, if the given &lt;code&gt;baseName&lt;/code&gt; is &quot;Messages&quot; and the given &lt;code&gt;locale&lt;/code&gt; is &lt;code&gt;Locale(&quot;ja&quot;,&amp;nbsp;&quot;&quot;,&amp;nbsp;&quot;XX&quot;)&lt;/code&gt;, then a &lt;code&gt;List&lt;/code&gt; of &lt;code&gt;Locale&lt;/code&gt;s:</source>
          <target state="translated">たとえば、指定された &lt;code&gt;baseName&lt;/code&gt; が &quot;Messages&quot;で、指定された &lt;code&gt;locale&lt;/code&gt; が &lt;code&gt;Locale(&quot;ja&quot;,&amp;nbsp;&quot;&quot;,&amp;nbsp;&quot;XX&quot;)&lt;/code&gt; 場合、 &lt;code&gt;Locale&lt;/code&gt; の &lt;code&gt;List&lt;/code&gt; は次のようになります。</target>
        </trans-unit>
        <trans-unit id="60cd652c0516c6edb966a6f2150f2e358c4fe8b3" translate="yes" xml:space="preserve">
          <source>For example, if the list() is returning only a partial answer, the corresponding exception would be PartialResultException. list() would first return a NamingEnumeration. When the last of the results has been returned by the NamingEnumeration's next(), invoking hasMore() would result in PartialResultException being thrown.</source>
          <target state="translated">例えば、list()が部分的な答えしか返さない場合、対応する例外は PartialResultException となります。NamingEnumeration の next()によって最後の結果が返された場合、hasMore()を実行すると、PartialResultException がスローされます。</target>
        </trans-unit>
        <trans-unit id="cf271c5db83413140525b967e8a237980c46cf6f" translate="yes" xml:space="preserve">
          <source>For example, if the mask is &lt;code&gt;'(###) ###-####'&lt;/code&gt;, the current value is &lt;code&gt;'(415) 555-1212'&lt;/code&gt;, and &lt;code&gt;valueContainsLiteralCharacters&lt;/code&gt; is true &lt;code&gt;stringToValue&lt;/code&gt; will return &lt;code&gt;'(415) 555-1212'&lt;/code&gt;. On the other hand, if &lt;code&gt;valueContainsLiteralCharacters&lt;/code&gt; is false, &lt;code&gt;stringToValue&lt;/code&gt; will return &lt;code&gt;'4155551212'&lt;/code&gt;.</source>
          <target state="translated">たとえば、マスクが &lt;code&gt;'(###) ###-####'&lt;/code&gt; 場合、現在の値は &lt;code&gt;'(415) 555-1212'&lt;/code&gt; であり、 &lt;code&gt;valueContainsLiteralCharacters&lt;/code&gt; がtrueの場合、stringToValueは &lt;code&gt;'(415) 555-1212'&lt;/code&gt; &lt;code&gt;stringToValue&lt;/code&gt; を返します。'。一方、 &lt;code&gt;valueContainsLiteralCharacters&lt;/code&gt; がfalseの場合、 &lt;code&gt;stringToValue&lt;/code&gt; は &lt;code&gt;'4155551212'&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="331dbdc8afa3ed2fafd4f2269cdca47bfcf3b063" translate="yes" xml:space="preserve">
          <source>For example, if the scheme id is &quot;ldap&quot;, and the &lt;code&gt;Context.URL_PKG_PREFIXES&lt;/code&gt; property contains &quot;com.widget:com.wiz.jndi&quot;, the naming manager would attempt to load the following classes until one is successfully instantiated:</source>
          <target state="translated">たとえば、スキームIDが「ldap」で、 &lt;code&gt;Context.URL_PKG_PREFIXES&lt;/code&gt; プロパティに「com.widget：com.wiz.jndi」が含まれている場合、ネーミングマネージャーは、インスタンスが正常にインスタンス化されるまで、次のクラスをロードしようとします。</target>
        </trans-unit>
        <trans-unit id="9946384c3fd6b072df324bd1293690a1c0583c54" translate="yes" xml:space="preserve">
          <source>For example, if the selection is being updated in response to a user drag, this property can be set to &lt;code&gt;true&lt;/code&gt; when the drag is initiated and set to &lt;code&gt;false&lt;/code&gt; when the drag is finished. During the drag, listeners receive events with a &lt;code&gt;valueIsAdjusting&lt;/code&gt; property set to &lt;code&gt;true&lt;/code&gt;. At the end of the drag, when the change is finalized, listeners receive an event with the value set to &lt;code&gt;false&lt;/code&gt;. Listeners can use this pattern if they wish to update only when a change has been finalized.</source>
          <target state="translated">たとえば、ユーザーのドラッグに応答して選択範囲が更新されている場合、このプロパティは、ドラッグの開始時に &lt;code&gt;true&lt;/code&gt; に設定し、ドラッグの終了時に &lt;code&gt;false&lt;/code&gt; に設定できます。ドラッグ中に、リスナーは &lt;code&gt;valueIsAdjusting&lt;/code&gt; プロパティが &lt;code&gt;true&lt;/code&gt; に設定されたイベントを受信します。ドラッグの最後で、変更が完了すると、リスナーは値が &lt;code&gt;false&lt;/code&gt; に設定されたイベントを受け取ります。リスナーは、変更が確定したときにのみ更新する場合に、このパターンを使用できます。</target>
        </trans-unit>
        <trans-unit id="5a5af4fc040f0ce0de3df6b5ef5d4bd424a6f4cf" translate="yes" xml:space="preserve">
          <source>For example, if the setting descriptor represents a percentage, then &lt;code&gt;&quot;jdk.jfr.Percentage&quot;&lt;/code&gt; hints to a client that a value of &quot;0.5&quot; is formatted as &quot;50%&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d410392dee140daf0f08572b9afdeaf55f6469ad" translate="yes" xml:space="preserve">
          <source>For example, if the user presses &lt;b&gt;button 1&lt;/b&gt; followed by &lt;b&gt;button 2&lt;/b&gt;, and then releases them in the same order, the following sequence of events is generated:</source>
          <target state="translated">たとえば、ユーザーが&lt;b&gt;ボタン1&lt;/b&gt;を&lt;b&gt;押してからボタン2&lt;/b&gt;を&lt;b&gt;押し&lt;/b&gt;てから、同じ順序で離すと、次の一連のイベントが生成されます。</target>
        </trans-unit>
        <trans-unit id="46297070dbcf189b984984a0a199e305142ec624" translate="yes" xml:space="preserve">
          <source>For example, if the val is &quot;Sue, Grabbit and Runn&quot;, the escaped value returned by this method is &quot;Sue\, Grabbit and Runn&quot;.</source>
          <target state="translated">例えば、valが &quot;Sue,Grabbit and Runn &quot;の場合、このメソッドが返すエスケープされた値は &quot;Sue,Grabbit and Runn &quot;となります。</target>
        </trans-unit>
        <trans-unit id="4bd1055cc9f89a1e5bd1d53415f67354b34766c2" translate="yes" xml:space="preserve">
          <source>For example, if the value descriptor's type is &lt;code&gt;float&lt;/code&gt; and the event value is &lt;code&gt;0.5f&lt;/code&gt;, a content type of &lt;code&gt;&quot;jdk.jfr.Percentage&quot;&lt;/code&gt; hints to a client that the value is a percentage and that it should be rendered as &lt;code&gt;&quot;50%&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1354cf34e1ac70df7295a90262b1d890c1d1c39d" translate="yes" xml:space="preserve">
          <source>For example, if this &lt;code&gt;Calendar&lt;/code&gt; is a &lt;code&gt;GregorianCalendar&lt;/code&gt; and its date is 2005-01-01, then the string representation of the &lt;a href=&quot;#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field would be &quot;January&quot; in the long style in an English locale or &quot;Jan&quot; in the short style. However, no string representation would be available for the &lt;a href=&quot;#DAY_OF_MONTH&quot;&gt;&lt;code&gt;DAY_OF_MONTH&lt;/code&gt;&lt;/a&gt; field, and this method would return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">たとえば、この &lt;code&gt;Calendar&lt;/code&gt; が &lt;code&gt;GregorianCalendar&lt;/code&gt; で、日付が2005-01-01の場合、&lt;a href=&quot;#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt;フィールドの文字列表現は、英語ロケールでは長いスタイルの「January」、短いスタイルでは「Jan」になります。ただし、&lt;a href=&quot;#DAY_OF_MONTH&quot;&gt; &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; &lt;/a&gt;フィールドに使用できる文字列表現はなく、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9d08c542a01363da65f25cae9dcf86b3ab527e74" translate="yes" xml:space="preserve">
          <source>For example, if this &lt;code&gt;Calendar&lt;/code&gt; is a &lt;code&gt;GregorianCalendar&lt;/code&gt; and its date is 2005-01-01, then the string representation of the &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field would be &quot;January&quot; in the long style in an English locale or &quot;Jan&quot; in the short style. However, no string representation would be available for the &lt;a href=&quot;calendar#DAY_OF_MONTH&quot;&gt;&lt;code&gt;DAY_OF_MONTH&lt;/code&gt;&lt;/a&gt; field, and this method would return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">たとえば、この &lt;code&gt;Calendar&lt;/code&gt; が &lt;code&gt;GregorianCalendar&lt;/code&gt; で、日付が2005-01-01の場合、&lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt;フィールドの文字列表現は、長いロケールでは英語のロケールの「January」、短いスタイルでは「Jan」になります。ただし、&lt;a href=&quot;calendar#DAY_OF_MONTH&quot;&gt; &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; &lt;/a&gt;フィールドで使用できる文字列表現はなく、このメソッドは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f3f8dec20a3958e1902910e524d78edacaf8262f" translate="yes" xml:space="preserve">
          <source>For example, if this &lt;code&gt;GregorianCalendar&lt;/code&gt;'s date is December 31, 2008 with &lt;a href=&quot;#iso8601_compatible_setting&quot;&gt;the ISO 8601 compatible setting&lt;/a&gt;, this method will return 53 for the period: December 29, 2008 to January 3, 2010 while &lt;a href=&quot;#getActualMaximum(int)&quot;&gt;&lt;code&gt;getActualMaximum(WEEK_OF_YEAR)&lt;/code&gt;&lt;/a&gt; will return 52 for the period: December 31, 2007 to December 28, 2008.</source>
          <target state="translated">たとえば、この &lt;code&gt;GregorianCalendar&lt;/code&gt; の日付が&lt;a href=&quot;#iso8601_compatible_setting&quot;&gt;ISO 8601互換設定&lt;/a&gt;で2008年12月31日である場合、このメソッドは期間に53を返します：2008年12月29日から2010年1月3日まで、&lt;a href=&quot;#getActualMaximum(int)&quot;&gt; &lt;code&gt;getActualMaximum(WEEK_OF_YEAR)&lt;/code&gt; &lt;/a&gt;は期間に52を返します：2007年12月31日から2008年12月28日。</target>
        </trans-unit>
        <trans-unit id="3643c6484340ffe26a21c4d8fab930e16ffe032d" translate="yes" xml:space="preserve">
          <source>For example, if this &lt;code&gt;GregorianCalendar&lt;/code&gt;'s date is December 31, 2008 with &lt;a href=&quot;#iso8601_compatible_setting&quot;&gt;the ISO 8601 compatible setting&lt;/a&gt;, this method will return 53 for the period: December 29, 2008 to January 3, 2010 while &lt;a href=&quot;gregoriancalendar#getActualMaximum-int-&quot;&gt;&lt;code&gt;getActualMaximum(WEEK_OF_YEAR)&lt;/code&gt;&lt;/a&gt; will return 52 for the period: December 31, 2007 to December 28, 2008.</source>
          <target state="translated">たとえば、この &lt;code&gt;GregorianCalendar&lt;/code&gt; の日付が&lt;a href=&quot;#iso8601_compatible_setting&quot;&gt;ISO 8601互換の設定&lt;/a&gt;で2008年12月31日である場合、このメソッドは期間の53を返します：2008年12月29日から2010年1月3日までの間、&lt;a href=&quot;gregoriancalendar#getActualMaximum-int-&quot;&gt; &lt;code&gt;getActualMaximum(WEEK_OF_YEAR)&lt;/code&gt; &lt;/a&gt;は期間の52 ：2007年12月31日から2008年12月28日。</target>
        </trans-unit>
        <trans-unit id="e16d20b9efdce35bec0d0944cd28ae28c29420bc" translate="yes" xml:space="preserve">
          <source>For example, if this context is named &quot;wiz.com&quot; relative to the initial context, then</source>
          <target state="translated">例えば、このコンテキストが初期コンテキストからの相対的な名前が &quot;wiz.com&quot; である場合、次のようになります。</target>
        </trans-unit>
        <trans-unit id="23ce10b77d4d60ce2e4667d7daf8fcc5e575e436" translate="yes" xml:space="preserve">
          <source>For example, if you have specified the WIDTH and WEST (X) location the EAST is calculated as WEST + WIDTH. If you instead specified the WIDTH and EAST locations the WEST (X) location is then calculated as EAST - WIDTH.</source>
          <target state="translated">例えば、WIDTH と WEST (X)の位置を指定した場合、EAST は WEST+WIDTH として計算されます。代わりに WIDTH と EAST の位置を指定した場合、WEST (X)の位置は EAST-WIDTH として計算されます。</target>
        </trans-unit>
        <trans-unit id="3070fbc0afefe4ba32efdbac515d776b347e33bf" translate="yes" xml:space="preserve">
          <source>For example, if you have two FilePermissions:</source>
          <target state="translated">例えば、FilePermissionsが2つある場合。</target>
        </trans-unit>
        <trans-unit id="0a4d7501c36e5c5efefa917cb0f7c1e40b482f63" translate="yes" xml:space="preserve">
          <source>For example, in Massachusetts, five time zones west of Greenwich:</source>
          <target state="translated">例えば、マサチューセッツ州では、グリニッジの西に5つのタイムゾーンがあります。</target>
        </trans-unit>
        <trans-unit id="64a75c6e6a5e2cdb362552f912fa2ac36588aead" translate="yes" xml:space="preserve">
          <source>For example, in a calendar systems with a seven day week, the first aligned-week-of-month starts on day-of-month 1, the second aligned-week starts on day-of-month 8, and so on. Thus, day-of-month values 1 to 7 are in aligned-week 1, while day-of-month values 8 to 14 are in aligned-week 2, and so on.</source>
          <target state="translated">例えば、週が7日のカレンダーシステムでは、月の最初の整列週は月の1日から始まり、2番目の整列週は月の8日から始まる、というように、月の値が1から7までは整列週1に、月の値が8から14までは整列週2に、というようになっています。このように、月の値1から7までの曜日は第1調整週に、月の値8から14までの曜日は第2調整週に、というように、月の値は調整週になります。</target>
        </trans-unit>
        <trans-unit id="3c9c772cedc41791f8d1cb68769035e91f2f41e3" translate="yes" xml:space="preserve">
          <source>For example, in a calendar systems with a seven day week, the first aligned-week-of-month starts on day-of-month 1, the second aligned-week starts on day-of-month 8, and so on. Within each of these aligned-weeks, the days are numbered from 1 to 7 and returned as the value of this field. As such, day-of-month 1 to 7 will have aligned-day-of-week values from 1 to 7. And day-of-month 8 to 14 will repeat this with aligned-day-of-week values from 1 to 7.</source>
          <target state="translated">例えば、週が 7 日のカレンダーシステムでは、最初のアラインメントされた週は月の 1 日目から始まり、2 番目のアラインメントされた週は月の 8 日目から始まります。これらの整列された週のそれぞれの中で、日は1から7までの番号が付けられ、このフィールドの値として返されます。このように、月の 1 日目から 7 日目までは、1 から 7 までの曜日の値を持つことになります。また、月の8日目から14日目までは、これを繰り返し、1から7までの週の値を揃えます。</target>
        </trans-unit>
        <trans-unit id="f5dda9b2475fff15bbb36c85195a054becb35bb2" translate="yes" xml:space="preserve">
          <source>For example, in a calendar systems with a seven day week, the first aligned-week-of-year starts on day-of-year 1, the second aligned-week starts on day-of-year 8, and so on. Thus, day-of-year values 1 to 7 are in aligned-week 1, while day-of-year values 8 to 14 are in aligned-week 2, and so on.</source>
          <target state="translated">例えば、週が7日のカレンダーシステムでは、年の最初の整列週は年の1日目から始まり、2番目の整列週は年の8日目から始まります。このように、年の1日目から7日目までの値は第1調整週に、年の8日目から14日目までの値は第2調整週に、というようになります。</target>
        </trans-unit>
        <trans-unit id="df0baee2845f9a21e825c757acaf8a692815fac2" translate="yes" xml:space="preserve">
          <source>For example, in a calendar systems with a seven day week, the first aligned-week-of-year starts on day-of-year 1, the second aligned-week starts on day-of-year 8, and so on. Within each of these aligned-weeks, the days are numbered from 1 to 7 and returned as the value of this field. As such, day-of-year 1 to 7 will have aligned-day-of-week values from 1 to 7. And day-of-year 8 to 14 will repeat this with aligned-day-of-week values from 1 to 7.</source>
          <target state="translated">たとえば、週が 7 日のカレンダーシステムでは、最初のアラインメントされた週は年の 1 日目から始まり、2 番目のアラインメントされた週は年の 8 日目から始まる、というように、週の最初のアラインメントされた週は年の 1 日目から始まります。これらのアラインメントされた週のそれぞれの中で、日は1から7までの番号が付けられ、このフィールドの値として返されます。そのため、1 年目から 7 年目までの曜日は 1 から 7 までの値を持つことになります。また、8日目から14日目までは、これを繰り返して、1から7までの曜日を揃えた値を持つことになります。</target>
        </trans-unit>
        <trans-unit id="667454b51ee160e5f830b2fdf48f69b11def86bc" translate="yes" xml:space="preserve">
          <source>For example, in an instance method the expression:</source>
          <target state="translated">例えば、インスタンスメソッドの中では、次のような式になります。</target>
        </trans-unit>
        <trans-unit id="83711f22cafdaf4358be276e1bd1b5420f8d198f" translate="yes" xml:space="preserve">
          <source>For example, in progressive JPEG decoding each pass contains updates to a set of coefficients, which would have to be transformed into pixel values and converted to an RGB color space for each pass if listeners are present. If no listeners are present, the coefficients may simply be accumulated and the final results transformed and color converted one time only.</source>
          <target state="translated">例えば、プログレッシブJPEGデコードでは、各パスには係数の更新が含まれており、リスナーが存在する場合には、各パスごとにピクセル値に変換してRGB色空間に変換する必要があります。リスナーが存在しない場合、係数は単に蓄積され、最終的な結果は一度だけ変換され、色変換されます。</target>
        </trans-unit>
        <trans-unit id="c1662d32e2f27b7909577fedec74e294858f30bb" translate="yes" xml:space="preserve">
          <source>For example, in the &lt;code&gt;manifest.mf&lt;/code&gt; file:</source>
          <target state="translated">たとえば、 &lt;code&gt;manifest.mf&lt;/code&gt; ファイルでは次のようになります。</target>
        </trans-unit>
        <trans-unit id="1a59ad602d23ec59462a674a66faf3132c7e3c63" translate="yes" xml:space="preserve">
          <source>For example, invoking getObjectInstance() as shown above on a LDAP URL context factory would return a context that can resolve LDAP urls (e.g. &quot;ldap://ldap.wiz.com/o=wiz,c=us&quot;, &quot;ldap://ldap.umich.edu/o=umich,c=us&quot;, ...).</source>
          <target state="translated">例えば、LDAP URL コンテキストファクトリー上で上記のように getObjectInstance()を実行すると、LDAP URL を解決できるコンテキストが返されます (例:&quot;ldap://ldap.wiz.com/o=wiz,c=us&quot;,&quot;ldap://ldap.umich.edu/o=umich,c=us&quot;,....)。</target>
        </trans-unit>
        <trans-unit id="977510c92080ba8010d28759c38eb8389f8d2b36" translate="yes" xml:space="preserve">
          <source>For example, it is not generally permissible for one thread to modify a Collection while another thread is iterating over it. In general, the results of the iteration are undefined under these circumstances. Some Iterator implementations (including those of all the general purpose collection implementations provided by the JRE) may choose to throw this exception if this behavior is detected. Iterators that do this are known as</source>
          <target state="translated">例えば、別のスレッドがコレクションを反復処理している間に、あるスレッドがコレクションを修正することは一般的に許されません。一般的に、このような状況下では反復処理の結果は定義されません。いくつかの Iterator 実装 (JRE が提供するすべての汎用コレクション実装を含む)では、この動作が検出された場合にこの例外をスローすることを選択することができます。これを行うイテレータは</target>
        </trans-unit>
        <trans-unit id="55a369ef0fe8ebad5b029b1f28bb54b108692dc0" translate="yes" xml:space="preserve">
          <source>For example, launching a process to compare two files and get a boolean if they are identical:</source>
          <target state="translated">例えば、2つのファイルを比較するプロセスを起動し、それらが同一であればブール値を取得します。</target>
        </trans-unit>
        <trans-unit id="419095da819dea8caeaf54e67c3bbf2bbe849031" translate="yes" xml:space="preserve">
          <source>For example, lenient mode allows the month in the ISO calendar system to be outside the range 1 to 12. For example, month 15 is treated as being 3 months after month 12.</source>
          <target state="translated">例えば、lenientモードでは、ISOカレンダーシステムにおける月は、1から12の範囲外であってもよい。例えば、月15は、月12から3ヶ月後の月として扱われる。</target>
        </trans-unit>
        <trans-unit id="9260a232005f2151adc172f87bb59f3c1c47b1d2" translate="yes" xml:space="preserve">
          <source>For example, lets say you wanted to create an action to insert a table into the body. The parentTag would be HTML.Tag.BODY, addTag would be HTML.Tag.TABLE, and the string could be something like &amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;.</source>
          <target state="translated">たとえば、テーブルを本体に挿入するアクションを作成するとします。 parentTagはHTML.Tag.BODY、addTagはHTML.Tag.TABLE、文字列は&amp;lt;table&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt; &amp;lt;/ td&amp;gt; &amp;lt;/ tr&amp;gt; &amp;lt;/ table&amp;gt;のようになります。</target>
        </trans-unit>
        <trans-unit id="a1b8d9519a762fcc4900410f219bae25bde25134" translate="yes" xml:space="preserve">
          <source>For example, passing in April and day 31 will throw an exception, as there can never be April 31st in any year. By contrast, passing in February 29th is permitted, as that month-day can sometimes be valid.</source>
          <target state="translated">例えば、4月に31日に合格した場合、どの年にも4月31日が存在することはありえないので、例外が発生します。対照的に、2月29日に合格した場合は、その月の日が有効になることがあるので、許可されます。</target>
        </trans-unit>
        <trans-unit id="95a9ab686c164d231a3c13b53e175a3015e71b35" translate="yes" xml:space="preserve">
          <source>For example, passing in month 4 (April) and day 31 will throw an exception, as there can never be April 31st in any year. By contrast, passing in February 29th is permitted, as that month-day can sometimes be valid.</source>
          <target state="translated">例えば、4月4日(4月)と31日で合格した場合、例外として4月31日が存在することはありません。対照的に、2月29日に合格した場合は、その月の日が有効になることがあるので、許可されます。</target>
        </trans-unit>
        <trans-unit id="17c293c7e39e8e3b727ae44a1a1381c381faf03b" translate="yes" xml:space="preserve">
          <source>For example, pressing the Shift key will cause a KEY_PRESSED event with a VK_SHIFT keyCode, while pressing the 'a' key will result in a VK_A keyCode. After the 'a' key is released, a KEY_RELEASED event will be fired with VK_A. Separately, a KEY_TYPED event with a keyChar value of 'A' is generated.</source>
          <target state="translated">例えば、Shift キーを押すと KEY_PRESSED イベントが VK_SHIFT キーコードで発生し、'a' キーを押すと VK_A キーコードで発生します。a'キーが離された後、VK_A で KEY_RELEASED イベントが発生します。別途、KEYChar の値が「A」の KEY_TYPED イベントが発生します。</target>
        </trans-unit>
        <trans-unit id="9a1ab47a4b02f92a0615112e10f6f5e8a8a01d5a" translate="yes" xml:space="preserve">
          <source>For example, querying for the &lt;code&gt;font&lt;/code&gt; property should not return &quot;normal normal normal 14pt/normal Arial, sans-serif&quot;, when &quot;14pt Arial, sans-serif&quot; suffices. (The normals are initial values, and are implied by use of the longhand property.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ece2aad41b9136b32570fffbcf0f35d16e2c7ef" translate="yes" xml:space="preserve">
          <source>For example, resolving year-month and day-of-month in the ISO calendar system using smart mode will ensure that the day-of-month is from 1 to 31, converting any value beyond the last valid day-of-month to be the last valid day-of-month.</source>
          <target state="translated">例えば、スマートモードを使用してISOカレンダーシステムで年月と月日を解決すると、月日が1から31までであることが保証され、最後に有効な月日を超えた値は最後に有効な月日に変換されます。</target>
        </trans-unit>
        <trans-unit id="e8610632f6733c46625ec28b668d9d0958dfcb9b" translate="yes" xml:space="preserve">
          <source>For example, resolving year-month and day-of-month in the ISO calendar system using strict mode will ensure that the day-of-month is valid for the year-month, rejecting invalid values.</source>
          <target state="translated">例えば、厳格モードを使用してISOカレンダーシステムで年月と月日を解決すると、月日が年月に対して有効であることが保証され、無効な値が拒否されます。</target>
        </trans-unit>
        <trans-unit id="c2960524da870ffd8c45901d28d87d1b01945cd8" translate="yes" xml:space="preserve">
          <source>For example, subtracting a year each time yield the following:</source>
          <target state="translated">例えば、毎回1年を引くと次のようになります。</target>
        </trans-unit>
        <trans-unit id="47aabc43dc57e9cc5bf0a224360db057f6055a41" translate="yes" xml:space="preserve">
          <source>For example, suppose &lt;code&gt;list&lt;/code&gt; comprises&lt;code&gt; [t, a, n, k, s]&lt;/code&gt;. After invoking &lt;code&gt;Collections.rotate(list, 1)&lt;/code&gt; (or &lt;code&gt;Collections.rotate(list, -4)&lt;/code&gt;), &lt;code&gt;list&lt;/code&gt; will comprise &lt;code&gt;[s, t, a, n, k]&lt;/code&gt;.</source>
          <target state="translated">例えば、と仮定する &lt;code&gt;list&lt;/code&gt; 含む &lt;code&gt; [t, a, n, k, s]&lt;/code&gt; 。 &lt;code&gt;Collections.rotate(list, 1)&lt;/code&gt; （または &lt;code&gt;Collections.rotate(list, -4)&lt;/code&gt; ）を呼び出した後、 &lt;code&gt;list&lt;/code&gt; は &lt;code&gt;[s, t, a, n, k]&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="a9ba05200c79cd884e3728c4efa7d1c62535fcce" translate="yes" xml:space="preserve">
          <source>For example, suppose I had a component named JFoo. Suppose I then registered this component with the NimbusLookAndFeel in this manner:</source>
          <target state="translated">例えば、JFooという名前のコンポーネントがあったとします。このコンポーネントをこのようにNimbusLookAndFeelに登録したとします。</target>
        </trans-unit>
        <trans-unit id="b56f40200256403e55b2d08f2b4cfa0ac29aa223" translate="yes" xml:space="preserve">
          <source>For example, suppose I have a &lt;code&gt;Painter&lt;/code&gt; implementation that draws a gradient. The gradient goes from white to black. It &quot;stretches&quot; to fill the painted region. Thus, if I use this &lt;code&gt;Painter&lt;/code&gt; to paint a 500 x 500 region, the far left would be black, the far right would be white, and a smooth gradient would be painted between. I could then, without modification, reuse the &lt;code&gt;Painter&lt;/code&gt; to paint a region that is 20x20 in size. This region would also be black on the left, white on the right, and a smooth gradient painted between.</source>
          <target state="translated">たとえば、グラデーションを描画する &lt;code&gt;Painter&lt;/code&gt; 実装があるとします。グラデーションは白から黒に変わります。ペイントされた領域を埋めるために「ストレッチ」します。したがって、この &lt;code&gt;Painter&lt;/code&gt; を使用して500 x 500の領域をペイントすると、左端が黒になり、右端が白になり、その間に滑らかなグラデーションがペイントされます。その後、変更せずに、 &lt;code&gt;Painter&lt;/code&gt; を再利用して、サイズが20x20の領域をペイントできます。この領域も左側が黒、右側が白で、その間に滑らかなグラデーションが描かれています。</target>
        </trans-unit>
        <trans-unit id="86dbe4bd6065b4cb0b731de33bae24d41dbc526b" translate="yes" xml:space="preserve">
          <source>For example, suppose a listener implements &lt;code&gt;ObjectChangeListener&lt;/code&gt; and registers with a &lt;code&gt;EventContext&lt;/code&gt;. Then, if the connection to the server is subsequently broken, the listener will receive a &lt;code&gt;NamingExceptionEvent&lt;/code&gt; and may take some corrective action, such as notifying the user of the application.</source>
          <target state="translated">たとえば、リスナーが &lt;code&gt;ObjectChangeListener&lt;/code&gt; を実装し、 &lt;code&gt;EventContext&lt;/code&gt; に登録するとします。その後、サーバーへの接続がその後切断された場合、リスナーは &lt;code&gt;NamingExceptionEvent&lt;/code&gt; を受け取り、アプリケーションのユーザーへの通知などの修正アクションを実行する場合があります。</target>
        </trans-unit>
        <trans-unit id="5d5c51db318646847151e6b97346f9afc762c064" translate="yes" xml:space="preserve">
          <source>For example, suppose a listener implements &lt;code&gt;ObjectChangeListener&lt;/code&gt; and registers with an &lt;code&gt;EventContext&lt;/code&gt;. Then, if the connection to the server is subsequently broken, the listener will receive a &lt;code&gt;NamingExceptionEvent&lt;/code&gt; and may take some corrective action, such as notifying the user of the application.</source>
          <target state="translated">たとえば、リスナーが &lt;code&gt;ObjectChangeListener&lt;/code&gt; を実装し、 &lt;code&gt;EventContext&lt;/code&gt; に登録するとします。その後、サーバーへの接続が切断された場合、リスナーは &lt;code&gt;NamingExceptionEvent&lt;/code&gt; を受信し、ユーザーにアプリケーションを通知するなどの修正アクションを実行する場合があります。</target>
        </trans-unit>
        <trans-unit id="ecccb48383e0235028ba4e42b0ed5977d52f556f" translate="yes" xml:space="preserve">
          <source>For example, suppose a listener makes the following registration:</source>
          <target state="translated">例えば、リスナーが以下のような登録をしたとします。</target>
        </trans-unit>
        <trans-unit id="544466e03cf4e204054f295a7affd3dd6dee5a02" translate="yes" xml:space="preserve">
          <source>For example, suppose an LDAP server sends back a &quot;change ID&quot; control in response to a successful modification. It would supply a class &lt;code&gt;ChangeIDControl&lt;/code&gt; so that the application can use this feature. An application would perform an update, and then try to get the change ID.</source>
          <target state="translated">たとえば、LDAPサーバーが正常な変更に応答して「変更ID」コントロールを送り返すと仮定します。アプリケーションがこの機能を使用できるように、クラス &lt;code&gt;ChangeIDControl&lt;/code&gt; を提供します。アプリケーションは更新を実行してから、変更IDを取得しようとします。</target>
        </trans-unit>
        <trans-unit id="06c3623b514eb5cdba5ee8dc296c328e7f84e249" translate="yes" xml:space="preserve">
          <source>For example, suppose an LDAP server supports a &quot;get time&quot; extended operation. It would supply classes such as &lt;code&gt;GetTimeRequest&lt;/code&gt; and &lt;code&gt;GetTimeResponse&lt;/code&gt;, so that applications can use this feature. An application would use these classes as follows:</source>
          <target state="translated">たとえば、LDAPサーバーが「get time」拡張操作をサポートしているとします。 &lt;code&gt;GetTimeRequest&lt;/code&gt; や &lt;code&gt;GetTimeResponse&lt;/code&gt; などのクラスを提供して、アプリケーションがこの機能を使用できるようにします。アプリケーションはこれらのクラスを次のように使用します。</target>
        </trans-unit>
        <trans-unit id="79d99dd15c47ddf1bd0f160d5ec3694f7617029b" translate="yes" xml:space="preserve">
          <source>For example, suppose an LDAP server supports a &quot;signed results&quot; request control, which when sent with a request, asks the server to digitally sign the results of an operation. It would supply a class &lt;code&gt;SignedResultsControl&lt;/code&gt; so that applications can use this feature. An application would use this class as follows:</source>
          <target state="translated">たとえば、LDAPサーバーが「署名された結果」のリクエストコントロールをサポートし、リクエストとともに送信されると、操作の結果にデジタル署名するようサーバーに要求するとします。アプリケーションがこの機能を使用できるように、クラス &lt;code&gt;SignedResultsControl&lt;/code&gt; を提供します。アプリケーションはこのクラスを次のように使用します。</target>
        </trans-unit>
        <trans-unit id="be8902c946be1fc9e100cbe20068110411a50507" translate="yes" xml:space="preserve">
          <source>For example, suppose one adds two elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; such that &lt;code&gt;(a.equals(b) &amp;amp;&amp;amp; c.compare(a, b) != 0)&lt;/code&gt; to an empty &lt;code&gt;TreeSet&lt;/code&gt; with comparator &lt;code&gt;c&lt;/code&gt;. The second &lt;code&gt;add&lt;/code&gt; operation will return true (and the size of the tree set will increase) because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are not equivalent from the tree set's perspective, even though this is contrary to the specification of the &lt;a href=&quot;set#add(E)&quot;&gt;&lt;code&gt;Set.add&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">例えば、一方が二つの要素追加仮定と &lt;code&gt;b&lt;/code&gt; ように &lt;code&gt;(a.equals(b) &amp;amp;&amp;amp; c.compare(a, b) != 0)&lt;/code&gt; 空の &lt;code&gt;TreeSet&lt;/code&gt; のコンパレータと &lt;code&gt;c&lt;/code&gt; 。&lt;a href=&quot;set#add(E)&quot;&gt; &lt;code&gt;Set.add&lt;/code&gt; &lt;/a&gt;メソッドの仕様に反していても、 &lt;code&gt;b&lt;/code&gt; とbはツリーセットの観点からは同等ではないため &lt;code&gt;a&lt;/code&gt; 2番目の &lt;code&gt;add&lt;/code&gt; 操作はtrueを返します（ツリーセットのサイズが大きくなります）。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e6856361217873808048fcc8d8563713fdb9f1e9" translate="yes" xml:space="preserve">
          <source>For example, suppose one adds two elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; such that &lt;code&gt;(a.equals(b) &amp;amp;&amp;amp; c.compare(a, b) != 0)&lt;/code&gt; to an empty &lt;code&gt;TreeSet&lt;/code&gt; with comparator &lt;code&gt;c&lt;/code&gt;. The second &lt;code&gt;add&lt;/code&gt; operation will return true (and the size of the tree set will increase) because &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are not equivalent from the tree set's perspective, even though this is contrary to the specification of the &lt;a href=&quot;set#add-E-&quot;&gt;&lt;code&gt;Set.add&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">たとえば、 &lt;code&gt;(a.equals(b) &amp;amp;&amp;amp; c.compare(a, b) != 0)&lt;/code&gt; &lt;code&gt;a&lt;/code&gt; 2つの要素aと &lt;code&gt;b&lt;/code&gt; を、コンパレータ &lt;code&gt;c&lt;/code&gt; を使用して空の &lt;code&gt;TreeSet&lt;/code&gt; に追加するとします。第二 &lt;code&gt;add&lt;/code&gt; ため、操作がtrueを返します（ツリーセットのサイズが大きくなり）及び &lt;code&gt;b&lt;/code&gt; はツリーセットの観点からは等価ではない、これは仕様に反しているにもかかわらず、&lt;a href=&quot;set#add-E-&quot;&gt; &lt;code&gt;Set.add&lt;/code&gt; の&lt;/a&gt;方法。 &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8429399a8ee6dd81aeccd65edca7dd387d5a635" translate="yes" xml:space="preserve">
          <source>For example, suppose the LDAP server supported a 'get time' extended operation. It would supply GetTimeRequest and GetTimeResponse classes. The GetTimeResponse class might look like:</source>
          <target state="translated">例えば、LDAPサーバーが'get time'拡張操作をサポートしているとします。この場合、GetTimeRequestとGetTimeResponseクラスが提供されます。GetTimeResponseクラスは次のようになります。</target>
        </trans-unit>
        <trans-unit id="fdd5ec9d3034278b63d192b66c4021fe19238ac6" translate="yes" xml:space="preserve">
          <source>For example, suppose the LDAP server supported a 'get time' extended operation. It would supply GetTimeRequest and GetTimeResponse classes:</source>
          <target state="translated">例えば、LDAPサーバーが'get time'拡張操作をサポートしているとします。これは、GetTimeRequestとGetTimeResponseクラスを提供します。</target>
        </trans-unit>
        <trans-unit id="c850829ad67f48ce83d754eaa746b9238fc6f58a" translate="yes" xml:space="preserve">
          <source>For example, suppose the service provider &lt;code&gt;com.example.impl.StandardCodecs&lt;/code&gt; is packaged in a JAR file for the class path. The JAR file will contain a provider-configuration file named:</source>
          <target state="translated">たとえば、サービスプロバイダー &lt;code&gt;com.example.impl.StandardCodecs&lt;/code&gt; がクラスパスのJARファイルにパッケージ化されているとします。JARファイルには、次の名前のプロバイダー構成ファイルが含まれます。</target>
        </trans-unit>
        <trans-unit id="4b7aaba7c594c43cc60d302e8d8ff53dc01af76f" translate="yes" xml:space="preserve">
          <source>For example, suppose there are &lt;code&gt;Module&lt;/code&gt; MBeans, representing modules within an application. A &lt;code&gt;DependsOn&lt;/code&gt; relation type could express the relationship that some modules depend on others, which could be used to determine the order in which the modules are started or stopped. The &lt;code&gt;DependsOn&lt;/code&gt; relation type would have two roles, &lt;code&gt;dependent&lt;/code&gt; and &lt;code&gt;dependedOn&lt;/code&gt;.</source>
          <target state="translated">たとえば、あるとし &lt;code&gt;Module&lt;/code&gt; アプリケーション内のモジュールを表すMBeanは、。 &lt;code&gt;DependsOn&lt;/code&gt; 関係タイプは、いくつかのモジュールがモジュールを起動または停止される順序を決定するために使用することができる他、に依存することの関係を表現できます。 &lt;code&gt;DependsOn&lt;/code&gt; 関係タイプは二つの役割、必要があります &lt;code&gt;dependent&lt;/code&gt; して &lt;code&gt;dependedOn&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="6851c4e026126d2cadb4456f8c17deadeed95c47" translate="yes" xml:space="preserve">
          <source>For example, suppose there is a FilePermissionCollection in this Permissions object, and it contains one FilePermission that specifies &quot;read&quot; access for all files in all subdirectories of the &quot;/tmp&quot; directory, and another FilePermission that specifies &quot;write&quot; access for all files in the &quot;/tmp/scratch/foo&quot; directory. Then if the &lt;code&gt;implies&lt;/code&gt; method is called with a permission specifying both &quot;read&quot; and &quot;write&quot; access to files in the &quot;/tmp/scratch/foo&quot; directory, &lt;code&gt;true&lt;/code&gt; is returned.</source>
          <target state="translated">たとえば、このPermissionsオブジェクトにFilePermissionCollectionがあり、「/ tmp」ディレクトリのすべてのサブディレクトリ内のすべてのファイルに対する「読み取り」アクセスを指定する1つのFilePermissionと、すべてのファイルに対する「書き込み」アクセスを指定する別のFilePermissionが含まれているとします。 「/ tmp / scratch / foo」ディレクトリ。次に、「/ tmp / scratch / foo」ディレクトリ内のファイルへの「読み取り」アクセスと「書き込み」アクセスの両方を指定する権限で &lt;code&gt;implies&lt;/code&gt; メソッドを呼び出すと、 &lt;code&gt;true&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="b859271d9922abcaf237d74c6f4004f67d23dfcf" translate="yes" xml:space="preserve">
          <source>For example, suppose there is a module layer where each module is in its own class loader (see &lt;a href=&quot;../lang/modulelayer#defineModulesWithManyLoaders(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;defineModulesWithManyLoaders&lt;/code&gt;&lt;/a&gt;). If this &lt;code&gt;ServiceLoader.load&lt;/code&gt; method is invoked to locate providers using any of the class loaders created for the module layer, then it will locate all of the providers in the module layer, irrespective of their defining class loader.</source>
          <target state="translated">たとえば、各モジュールが独自のクラスローダーにあるモジュールレイヤーがあるとします（&lt;a href=&quot;../lang/modulelayer#defineModulesWithManyLoaders(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;defineModulesWithManyLoaders&lt;/code&gt; を&lt;/a&gt;参照）。この &lt;code&gt;ServiceLoader.load&lt;/code&gt; メソッドを呼び出して、モジュールレイヤー用に作成されたクラスローダーのいずれかを使用してプロバイダーを検索すると、定義しているクラスローダーに関係なく、モジュールレイヤー内のすべてのプロバイダーが検索されます。</target>
        </trans-unit>
        <trans-unit id="9c4a3c6accaf2a649faf04567656523f83868294" translate="yes" xml:space="preserve">
          <source>For example, suppose we want to iterate over the files ending with &quot;.java&quot; in a directory:</source>
          <target state="translated">例えば、ディレクトリ内の&quot;.java &quot;で終わるファイルを反復処理したいとします。</target>
        </trans-unit>
        <trans-unit id="05a4d1c5d07862052a8718331187b8f1781335a5" translate="yes" xml:space="preserve">
          <source>For example, suppose you have a class &lt;code&gt;Measure&lt;/code&gt; that consists of a String called &lt;code&gt;units&lt;/code&gt; and a &lt;code&gt;value&lt;/code&gt; that is either a &lt;code&gt;long&lt;/code&gt; or a &lt;code&gt;double&lt;/code&gt;. It might look like this:</source>
          <target state="translated">たとえば、あなたはクラスがあると &lt;code&gt;Measure&lt;/code&gt; 文字列で構成されて呼ばれる &lt;code&gt;units&lt;/code&gt; し、 &lt;code&gt;value&lt;/code&gt; のいずれかである &lt;code&gt;long&lt;/code&gt; または &lt;code&gt;double&lt;/code&gt; 。次のようになります。</target>
        </trans-unit>
        <trans-unit id="84544c4734f4c5f5229790515b9195bff2e4d7dd" translate="yes" xml:space="preserve">
          <source>For example, suppose you have a horizontal box that contains two fixed-size components. If the box gets extra space, the fixed-size components won't become larger, so where does the extra space go? Without glue, the extra space goes to the right of the second component. If you put glue between the fixed-size components, then the extra space goes there. If you put glue before the first fixed-size component, the extra space goes there, and the fixed-size components are shoved against the right edge of the box. If you put glue before the first fixed-size component and after the second fixed-size component, the fixed-size components are centered in the box.</source>
          <target state="translated">例えば、横長の箱に2つの固定サイズの部品が入っているとします。箱に余計なスペースができても、固定サイズの部品は大きくなりませんが、余計なスペースはどこに行くのでしょうか?接着剤を使わないと、余った部分は2つ目の部品の右側になります。固定サイズの部品の間に接着剤を入れると、余ったスペースはそこに行きます。最初の固定サイズの部品の前に接着剤を置くと、余分なスペースがそこに行き、固定サイズの部品は箱の右端に押し付けられます。1つ目の固定サイズの部品の前と2つ目の固定サイズの部品の後に糊を付けると、固定サイズの部品は箱の中で中央に配置されます。</target>
        </trans-unit>
        <trans-unit id="4a2a226a5afd671906af81bfc5026907a68833b6" translate="yes" xml:space="preserve">
          <source>For example, suppose you have an interface like this:</source>
          <target state="translated">例えば、このようなインターフェイスがあるとします。</target>
        </trans-unit>
        <trans-unit id="feed7a297ad146234d8242fae2e6875af7601dfd" translate="yes" xml:space="preserve">
          <source>For example, suppose you have two MXBean interfaces like this:</source>
          <target state="translated">例えば、このようなMXBeanインターフェースが2つあるとします。</target>
        </trans-unit>
        <trans-unit id="4b96eed8b9322570b8d411a7bacaa4906fe3c08d" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;IsoFields&lt;/code&gt; class contains the quarter-of-year and day-of-quarter fields. The implementation of this method in that class resolves the two fields plus the &lt;a href=&quot;chronofield#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt; into a complete &lt;code&gt;LocalDate&lt;/code&gt;. The resolve method will remove all three fields from the map before returning the &lt;code&gt;LocalDate&lt;/code&gt;.</source>
          <target state="translated">たとえば、 &lt;code&gt;IsoFields&lt;/code&gt; クラスには、四半期および四半期のフィールドが含まれています。そのクラスでのこのメソッドの実装は、2つのフィールドと&lt;a href=&quot;chronofield#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt;を解決して完全な &lt;code&gt;LocalDate&lt;/code&gt; にします。resolveメソッドは、 &lt;code&gt;LocalDate&lt;/code&gt; を返す前に、3つのフィールドすべてをマップから削除します。</target>
        </trans-unit>
        <trans-unit id="0b355f8589a768bee7cdd6e2b374f9f88e59b5ef" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;TabularType&lt;/code&gt; for a &lt;code&gt;
      Map&amp;lt;String,ObjectName&amp;gt;&lt;/code&gt; might be constructed with code like this:</source>
          <target state="translated">たとえば、 &lt;code&gt; Map&amp;lt;String,ObjectName&amp;gt;&lt;/code&gt; の &lt;code&gt;TabularType&lt;/code&gt; は、次のようなコードで作成できます。</target>
        </trans-unit>
        <trans-unit id="5b81c7338939efbb5d98eb4eaeb30e317371878a" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;TabularType&lt;/code&gt; for a &lt;code&gt;Map&amp;lt;String,ObjectName&amp;gt;&lt;/code&gt; might be constructed with code like this:</source>
          <target state="translated">たとえば、 &lt;code&gt;Map&amp;lt;String,ObjectName&amp;gt;&lt;/code&gt; の &lt;code&gt;TabularType&lt;/code&gt; は、次のようなコードで作成できます。</target>
        </trans-unit>
        <trans-unit id="5fbd75fecfcbea62d5180938bfee7d0a96f67fb8" translate="yes" xml:space="preserve">
          <source>For example, the ISO day-of-month always starts at 1. The largest minimum is therefore 1.</source>
          <target state="translated">例えば、ISOの月日は常に1から始まるので、最大の最小値は1になります。</target>
        </trans-unit>
        <trans-unit id="9954675608ba0d2447d8c70c553ce4908bf6872e" translate="yes" xml:space="preserve">
          <source>For example, the ISO day-of-month always starts at 1. The minimum is therefore 1.</source>
          <target state="translated">例えば、ISOの月日は常に1から始まるので、最小値は1になります。</target>
        </trans-unit>
        <trans-unit id="753698f108344c2b6f822295f83686eb7deeb43a" translate="yes" xml:space="preserve">
          <source>For example, the ISO day-of-month runs from 1 to between 28 and 31. Since there is uncertainty about the maximum value, the range is not fixed. However, for the month of January, the range is always 1 to 31, thus it is fixed.</source>
          <target state="translated">例えば、ISOの月日は、1から28から31の間を走る。最大値には不確実性があるので、範囲は固定されていません。しかし、1月の場合は、常に1から31までの範囲であるため、範囲は固定されています。</target>
        </trans-unit>
        <trans-unit id="1825874677c8efec6c434b63e4f9a58ffa2948ba" translate="yes" xml:space="preserve">
          <source>For example, the ISO day-of-month runs to between 28 and 31 days. The maximum is therefore 31.</source>
          <target state="translated">例えば、ISOの月日は28日から31日の間で実行されます。したがって、最大は31日です。</target>
        </trans-unit>
        <trans-unit id="6bcb8a8d31e6b5bda8c8a31339caadd463dbafdb" translate="yes" xml:space="preserve">
          <source>For example, the ISO day-of-month runs to between 28 and 31 days. The smallest maximum is therefore 28.</source>
          <target state="translated">例えば、ISOの月日は28日から31日の間で実行されます。したがって、最小の最大値は28です。</target>
        </trans-unit>
        <trans-unit id="3126ea544624f04dc4af914a288e43e4b5e44c06" translate="yes" xml:space="preserve">
          <source>For example, the ISO month-of-year has values from 1 to 12, which fits in an &lt;code&gt;int&lt;/code&gt;. By comparison, ISO nano-of-day runs from 1 to 86,400,000,000,000 which does not fit in an &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">たとえば、ISOの月の値は1〜12で、 &lt;code&gt;int&lt;/code&gt; に適合します。比較すると、1日のISOナノは1から86,400,000,000,000まで実行され、 &lt;code&gt;int&lt;/code&gt; に適合しません。</target>
        </trans-unit>
        <trans-unit id="891514d228ba0a680cfae01cc75cb0c878ac816b" translate="yes" xml:space="preserve">
          <source>For example, the Japanese year &quot;Heisei 24&quot; corresponds to ISO year &quot;2012&quot;.</source>
          <target state="translated">例えば、日本の「平成24年」はISO年「2012年」に対応しています。</target>
        </trans-unit>
        <trans-unit id="f057bc50d4f9cbcee2fd03e25db7ad75bc897348" translate="yes" xml:space="preserve">
          <source>For example, the ObjectName instances below:</source>
          <target state="translated">例えば、以下のObjectNameインスタンス。</target>
        </trans-unit>
        <trans-unit id="44e96a62da6c4e34494e786a872f8b8a5113b965" translate="yes" xml:space="preserve">
          <source>For example, the Thai Buddhist calendar system divides time into two eras, before and after a single date. By contrast, the Japanese calendar system has one era for the reign of each Emperor.</source>
          <target state="translated">例えば、タイの仏教の暦では、1つの日付の前後に2つの時代があります。対照的に、日本の暦のシステムは、各天皇の統治のために1つの時代を持っています。</target>
        </trans-unit>
        <trans-unit id="2a2d59c315643a0b3b1942f96a7e22778bf58b94" translate="yes" xml:space="preserve">
          <source>For example, the class below generates unique identifiers local to each thread. A thread's id is assigned the first time it invokes &lt;code&gt;ThreadId.get()&lt;/code&gt; and remains unchanged on subsequent calls.</source>
          <target state="translated">たとえば、以下のクラスは、各スレッドにローカルな一意の識別子を生成します。スレッドのIDは、最初に &lt;code&gt;ThreadId.get()&lt;/code&gt; を呼び出したときに割り当てられ、以降の呼び出しでは変更されません。</target>
        </trans-unit>
        <trans-unit id="9b4b8c7af567aec1dfe22cdd402ec5ac4a2fe5e6" translate="yes" xml:space="preserve">
          <source>For example, the code . . .</source>
          <target state="translated">例えば、コード...</target>
        </trans-unit>
        <trans-unit id="1dd5f7b4ebe0cc41842611a133e002691579b0ee" translate="yes" xml:space="preserve">
          <source>For example, the codesource objects with the following locations and null certificates all imply the codesource with the location &quot;http://java.sun.com/classes/foo.jar&quot; and null certificates:</source>
          <target state="translated">例えば、以下の場所とヌル証明書を持つコードソースオブジェクトは、すべて「http://java.sun.com/classes/foo.jar」という場所とヌル証明書を持つコードソースを暗示しています。</target>
        </trans-unit>
        <trans-unit id="8c4f42dbcf8b2164f2e204cf1d44084d7f59456e" translate="yes" xml:space="preserve">
          <source>For example, the codesource objects with the following locations and null certificates all imply the codesource with the location &quot;http://www.example.com/classes/foo.jar&quot; and null certificates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756f8e79ed2bdcf15890e6f3746ee619b529186f" translate="yes" xml:space="preserve">
          <source>For example, the compact number pattern representing millions in German locale can be specified as &lt;code&gt;&quot;{one:0' 'Million other:0' 'Millionen}&quot;&lt;/code&gt;. The &lt;code&gt;count&lt;/code&gt; follows LDML's &lt;a href=&quot;https://unicode.org/reports/tr35/tr35-numbers.html#Language_Plural_Rules&quot;&gt; Language Plural Rules&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9577516c18720a6506a145d0e8f0b0ac70992df8" translate="yes" xml:space="preserve">
          <source>For example, the effect of this option is built in: &lt;code&gt;pack.class.attribute.SourceFile=RUH&lt;/code&gt;.</source>
          <target state="translated">たとえば、このオプションの効果は &lt;code&gt;pack.class.attribute.SourceFile=RUH&lt;/code&gt; に組み込まれています。</target>
        </trans-unit>
        <trans-unit id="8920e276528365953f0968f14c401f25817bbf7a" translate="yes" xml:space="preserve">
          <source>For example, the following action listener</source>
          <target state="translated">例えば、次のようなアクションリスナー</target>
        </trans-unit>
        <trans-unit id="af842b0f3fef4c9e26a527cffd159eb564cb80d9" translate="yes" xml:space="preserve">
          <source>For example, the following are valid inputs:</source>
          <target state="translated">例えば、以下のような入力が有効です。</target>
        </trans-unit>
        <trans-unit id="c04d542de8d7b4c4a927f2f1b22e6b4845d556d4" translate="yes" xml:space="preserve">
          <source>For example, the following call registers a callback function that examines the TLS handshake parameters and selects an application protocol name:</source>
          <target state="translated">例えば、以下の呼び出しは、TLS ハンドシェイクパラメータを調べてアプリケーションプロトコル名を選択するコールバック関数を登録します。</target>
        </trans-unit>
        <trans-unit id="3e9548168ee523ea98776ac0d99dc8e2e03140ae" translate="yes" xml:space="preserve">
          <source>For example, the following call will return &lt;code&gt;&quot;Sunday&quot;&lt;/code&gt;.</source>
          <target state="translated">たとえば、次の呼び出しは &lt;code&gt;&quot;Sunday&quot;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="800db53de5ef69ffa1c8bdf9c66fd2ba83b76e33" translate="yes" xml:space="preserve">
          <source>For example, the following call will return a &lt;code&gt;Map&lt;/code&gt; containing &lt;code&gt;&quot;January&quot;&lt;/code&gt; to &lt;a href=&quot;../calendar#JANUARY&quot;&gt;&lt;code&gt;Calendar.JANUARY&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&quot;Jan&quot;&lt;/code&gt; to &lt;a href=&quot;../calendar#JANUARY&quot;&gt;&lt;code&gt;Calendar.JANUARY&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&quot;February&quot;&lt;/code&gt; to &lt;a href=&quot;../calendar#FEBRUARY&quot;&gt;&lt;code&gt;Calendar.FEBRUARY&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&quot;Feb&quot;&lt;/code&gt; to &lt;a href=&quot;../calendar#FEBRUARY&quot;&gt;&lt;code&gt;Calendar.FEBRUARY&lt;/code&gt;&lt;/a&gt;, and so on.</source>
          <target state="translated">たとえば、次の呼び出しでは、 &lt;code&gt;&quot;January&quot;&lt;/code&gt; を含む &lt;code&gt;Map&lt;/code&gt; が&lt;a href=&quot;../calendar#JANUARY&quot;&gt; &lt;code&gt;Calendar.JANUARY&lt;/code&gt; に&lt;/a&gt;、 &lt;code&gt;&quot;Jan&quot;&lt;/code&gt; が&lt;a href=&quot;../calendar#JANUARY&quot;&gt; &lt;code&gt;Calendar.JANUARY&lt;/code&gt; に&lt;/a&gt;、 &lt;code&gt;&quot;February&quot;&lt;/code&gt; が&lt;a href=&quot;../calendar#FEBRUARY&quot;&gt; &lt;code&gt;Calendar.FEBRUARY&lt;/code&gt; に&lt;/a&gt;、 &lt;code&gt;&quot;Feb&quot;&lt;/code&gt; が&lt;a href=&quot;../calendar#FEBRUARY&quot;&gt; &lt;code&gt;Calendar.FEBRUARY&lt;/code&gt; &lt;/a&gt;にというように返されます。</target>
        </trans-unit>
        <trans-unit id="ab160cea5fa5d97b5c742b66b19a144cd1be2739" translate="yes" xml:space="preserve">
          <source>For example, the following code fragment returns the runtime &lt;code&gt;Class&lt;/code&gt; descriptor for the class named &lt;code&gt;java.lang.Thread&lt;/code&gt;:</source>
          <target state="translated">たとえば、次のコードフラグメントは、 &lt;code&gt;java.lang.Thread&lt;/code&gt; という名前のクラスのランタイム &lt;code&gt;Class&lt;/code&gt; 記述子を返します。</target>
        </trans-unit>
        <trans-unit id="e6fa08051fad1a7c686f1f3704a31cec262ab998" translate="yes" xml:space="preserve">
          <source>For example, the following code fragment specifies that the SQL type &lt;code&gt;ATHLETES&lt;/code&gt; will be mapped to the class &lt;code&gt;Athletes&lt;/code&gt; in the Java programming language. The code fragment retrieves the type map for the &lt;code&gt;Connection
 &lt;/code&gt; object &lt;code&gt;con&lt;/code&gt;, inserts the entry into it, and then sets the type map with the new entry as the connection's type map.</source>
          <target state="translated">たとえば、次のコードフラグメントは、SQLタイプ &lt;code&gt;ATHLETES&lt;/code&gt; がJavaプログラミング言語のクラス &lt;code&gt;Athletes&lt;/code&gt; にマップされることを指定しています。コードフラグメントは、 &lt;code&gt;Connection &lt;/code&gt; オブジェクト &lt;code&gt;con&lt;/code&gt; のタイプマップを取得し、それにエントリを挿入してから、新しいエントリを使用してタイプマップを接続のタイプマップとして設定します。</target>
        </trans-unit>
        <trans-unit id="a576e32ce142dd687d0baaa037ad19f28b0a4f92" translate="yes" xml:space="preserve">
          <source>For example, the following code will create a list of comma-delimited tokens from a string:</source>
          <target state="translated">例えば、以下のコードは、文字列からカンマ区切りのトークンのリストを作成します。</target>
        </trans-unit>
        <trans-unit id="decb7a755353f013553fca3c806cc1fc507bd702" translate="yes" xml:space="preserve">
          <source>For example, the following code will read a file and return a list of all sequences of characters consisting of seven or more Latin capital letters:</source>
          <target state="translated">例えば、以下のコードは、ファイルを読み込んで、7文字以上のラテン大文字からなる文字列のリストを返します。</target>
        </trans-unit>
        <trans-unit id="06e4d3fa5fd40c797500d85cae43cf41dec447dd" translate="yes" xml:space="preserve">
          <source>For example, the following image depicts a frame with four text fields of varying widths. Two of these text fields display the predefined text &lt;code&gt;&quot;Hello&quot;&lt;/code&gt;.</source>
          <target state="translated">たとえば、次の画像は、さまざまな幅の4つのテキストフィールドを持つフレームを示しています。これらのテキストフィールドのうちの2つは、事前定義されたテキスト &lt;code&gt;&quot;Hello&quot;&lt;/code&gt; 表示します。</target>
        </trans-unit>
        <trans-unit id="e735d68b24fa929d7974b81ffd2f14c7e8e3db24" translate="yes" xml:space="preserve">
          <source>For example, the following invokations:</source>
          <target state="translated">例えば、次のような呼び出しがあります。</target>
        </trans-unit>
        <trans-unit id="ebfa64934fbb8d8c13e300499c0fbfd299c59fe6" translate="yes" xml:space="preserve">
          <source>For example, the following is the comparator order:</source>
          <target state="translated">例えば、コンパレータの順番は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="2e5145fc0b1887c7f338976c09c1b22e0149535b" translate="yes" xml:space="preserve">
          <source>For example, the following might be an implementation of a custom &quot;Indeterminate&quot; state for JProgressBars:</source>
          <target state="translated">例えば、以下はJProgressBarsのカスタム「不確定」状態を実装したものかもしれません。</target>
        </trans-unit>
        <trans-unit id="579d2788523bcba78702221bcf8dfcda1fdb0cd3" translate="yes" xml:space="preserve">
          <source>For example, the following permission grants access to the com.sun.PrivateCredential owned by Subjects which have a com.sun.Principal with the name, &quot;duke&quot;. Note that although this example, as well as all the examples below, do not contain Codebase, SignedBy, or Principal information in the grant statement (for simplicity reasons), actual policy configurations should specify that information when appropriate.</source>
          <target state="translated">例えば、以下の例では、com.sun.PrivateCredential の名前が「duke」である com.sun.Principal を持つ Subjects が所有する com.sun.PrivateCredential へのアクセスを許可しています。この例および以下のすべての例では、(簡単にするために)付与文に Codebase、SignedBy、Principal の情報は含まれていませんが、実際のポリシー構成では、適切な場合にはこれらの情報を指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="4be8500e7495aef23b54930b5292f0022824cecd" translate="yes" xml:space="preserve">
          <source>For example, the following picture shows an applet using the flow layout manager (its default layout manager) to position three buttons:</source>
          <target state="translated">たとえば、次の図は、フロー・レイアウト・マネージャ(そのデフォルト・レイアウト・マネージャ)を使用して3つのボタンを配置するアプレットを示しています。</target>
        </trans-unit>
        <trans-unit id="7522e8223fe59cfba16079804d94817adcde32ed" translate="yes" xml:space="preserve">
          <source>For example, the following security policy grants an application in the user's current directory all the permissions required by this module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da170e009e37813248dc29ce5b6b7ee536e58d5c" translate="yes" xml:space="preserve">
          <source>For example, the following will parse:</source>
          <target state="translated">例えば、次のようにパースします。</target>
        </trans-unit>
        <trans-unit id="dfaeb77baccf84c3cc12b85797b2a674e2da2753" translate="yes" xml:space="preserve">
          <source>For example, the following would be correct:</source>
          <target state="translated">例えば、以下のようなものが正しいでしょう。</target>
        </trans-unit>
        <trans-unit id="f982d151697783cd09896775b1dfd2a8059c4f1e" translate="yes" xml:space="preserve">
          <source>For example, the properties for &lt;code&gt;ConsoleHandler&lt;/code&gt; would be:</source>
          <target state="translated">たとえば、 &lt;code&gt;ConsoleHandler&lt;/code&gt; のプロパティは次のようになります。</target>
        </trans-unit>
        <trans-unit id="d8f931db20e6cd28062e3c50f185c3c6ecce4677" translate="yes" xml:space="preserve">
          <source>For example, the properties for &lt;code&gt;FileHandler&lt;/code&gt; would be:</source>
          <target state="translated">たとえば、 &lt;code&gt;FileHandler&lt;/code&gt; のプロパティは次のようになります。</target>
        </trans-unit>
        <trans-unit id="70ee2fbf03d54cbdd60a163f88386cac3ed53cb7" translate="yes" xml:space="preserve">
          <source>For example, the properties for &lt;code&gt;MemoryHandler&lt;/code&gt; would be:</source>
          <target state="translated">たとえば、 &lt;code&gt;MemoryHandler&lt;/code&gt; のプロパティは次のようになります。</target>
        </trans-unit>
        <trans-unit id="a1f43cf1f2bf6da316757e63f6b8452206d8f683" translate="yes" xml:space="preserve">
          <source>For example, the properties for &lt;code&gt;SocketHandler&lt;/code&gt; would be:</source>
          <target state="translated">たとえば、 &lt;code&gt;SocketHandler&lt;/code&gt; のプロパティは次のようになります。</target>
        </trans-unit>
        <trans-unit id="07d06c623a74187c226038a1ba49eb4b2125ca1b" translate="yes" xml:space="preserve">
          <source>For example, the properties for &lt;code&gt;StreamHandler&lt;/code&gt; would be:</source>
          <target state="translated">たとえば、 &lt;code&gt;StreamHandler&lt;/code&gt; のプロパティは次のようになります。</target>
        </trans-unit>
        <trans-unit id="db09fd6c4a0b3f3ccde0e332b40eaa8dd7c8c19b" translate="yes" xml:space="preserve">
          <source>For example, the property &lt;code&gt;javax.sound.midi.Receiver&lt;/code&gt; with a value &lt;code&gt;&quot;com.sun.media.sound.MidiProvider#SunMIDI1&quot;&lt;/code&gt; will have the following consequences when &lt;code&gt;getReceiver&lt;/code&gt; is called: if the class &lt;code&gt;com.sun.media.sound.MidiProvider&lt;/code&gt; exists in the list of installed MIDI device providers, the first &lt;code&gt;Receiver&lt;/code&gt; device with name &lt;code&gt;&quot;SunMIDI1&quot;&lt;/code&gt; will be returned. If it cannot be found, the first &lt;code&gt;Receiver&lt;/code&gt; from that provider will be returned, regardless of name. If there is none, the first &lt;code&gt;Receiver&lt;/code&gt; with name &lt;code&gt;&quot;SunMIDI1&quot;&lt;/code&gt; in the list of all devices (as returned by &lt;code&gt;getMidiDeviceInfo&lt;/code&gt;) will be returned, or, if not found, the first &lt;code&gt;Receiver&lt;/code&gt; that can be found in the list of all devices is returned. If that fails, too, a &lt;code&gt;MidiUnavailableException&lt;/code&gt; is thrown.</source>
          <target state="translated">たとえば、値が &lt;code&gt;&quot;com.sun.media.sound.MidiProvider#SunMIDI1&quot;&lt;/code&gt; のプロパティ &lt;code&gt;javax.sound.midi.Receiver&lt;/code&gt; は、 &lt;code&gt;getReceiver&lt;/code&gt; が呼び出されたときに次の結果になり &lt;code&gt;com.sun.media.sound.MidiProvider&lt;/code&gt; クラスcom.sun.media.sound.MidiProviderの場合インストールされているMIDIデバイスプロバイダーのリストに存在する場合、 &lt;code&gt;&quot;SunMIDI1&quot;&lt;/code&gt; という名前の最初の &lt;code&gt;Receiver&lt;/code&gt; デバイスが返されます。見つからない場合は、名前に関係なく、そのプロバイダーからの最初の &lt;code&gt;Receiver&lt;/code&gt; が返されます。存在しない場合は、すべてのデバイスのリストにある &lt;code&gt;&quot;SunMIDI1&quot;&lt;/code&gt; という名前の最初の &lt;code&gt;Receiver&lt;/code&gt; （ &lt;code&gt;getMidiDeviceInfo&lt;/code&gt; によって返される））が返されます。見つからない場合は、すべてのデバイスのリストで最初に見つかった &lt;code&gt;Receiver&lt;/code&gt; が返されます。それも失敗した場合、 &lt;code&gt;MidiUnavailableException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="7575a2a6b1ae6067582981f8aa6f22b796df82cf" translate="yes" xml:space="preserve">
          <source>For example, the property &lt;code&gt;javax.sound.sampled.Clip&lt;/code&gt; with a value &lt;code&gt;&quot;com.sun.media.sound.MixerProvider#SunClip&quot;&lt;/code&gt; will have the following consequences when &lt;code&gt;getLine&lt;/code&gt; is called requesting a &lt;code&gt;Clip&lt;/code&gt; instance: if the class &lt;code&gt;com.sun.media.sound.MixerProvider&lt;/code&gt; exists in the list of installed mixer providers, the first &lt;code&gt;Clip&lt;/code&gt; from the first mixer with name &lt;code&gt;&quot;SunClip&quot;&lt;/code&gt; will be returned. If it cannot be found, the first &lt;code&gt;Clip&lt;/code&gt; from the first mixer of the specified provider will be returned, regardless of name. If there is none, the first &lt;code&gt;Clip&lt;/code&gt; from the first &lt;code&gt;Mixer&lt;/code&gt; with name &lt;code&gt;&quot;SunClip&quot;&lt;/code&gt; in the list of all mixers (as returned by &lt;code&gt;getMixerInfo&lt;/code&gt;) will be returned, or, if not found, the first &lt;code&gt;Clip&lt;/code&gt; of the first &lt;code&gt;Mixer&lt;/code&gt; that can be found in the list of all mixers is returned. If that fails, too, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">たとえば、値が &lt;code&gt;&quot;com.sun.media.sound.MixerProvider#SunClip&quot;&lt;/code&gt; のプロパティ &lt;code&gt;javax.sound.sampled.Clip&lt;/code&gt; は、 &lt;code&gt;getLine&lt;/code&gt; が呼び出されて &lt;code&gt;Clip&lt;/code&gt; インスタンスを要求すると、次のような結果になります。クラス &lt;code&gt;com.sun.media.sound.MixerProvider&lt;/code&gt; 場合.sound.MixerProviderは、インストールされているミキサープロバイダーのリストに存在し、 &lt;code&gt;&quot;SunClip&quot;&lt;/code&gt; という名前の最初のミキサーからの最初の &lt;code&gt;Clip&lt;/code&gt; が返されます。見つからない場合は、名前に関係なく、指定されたプロバイダーの最初のミキサーからの最初の &lt;code&gt;Clip&lt;/code&gt; が返されます。存在しない場合は、 &lt;code&gt;&quot;SunClip&quot;&lt;/code&gt; という名前の最初の &lt;code&gt;Mixer&lt;/code&gt; からの最初の &lt;code&gt;Clip&lt;/code&gt; （ &lt;code&gt;getMixerInfo&lt;/code&gt; によって返される）すべてのミキサーのリストにあるものが返されるか、見つからない場合は、すべてのミキサーのリストにある最初の &lt;code&gt;Mixer&lt;/code&gt; 最初の &lt;code&gt;Clip&lt;/code&gt; が返されます。それも失敗した場合、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="f54d17b66104630b955178605a2279a2ac88c658" translate="yes" xml:space="preserve">
          <source>For example, this &lt;code&gt;@Target&lt;/code&gt; meta-annotation indicates that the declared type is itself a meta-annotation type. It can only be used on annotation type declarations:</source>
          <target state="translated">たとえば、この &lt;code&gt;@Target&lt;/code&gt; メタ注釈は、宣言された型自体がメタ注釈型であることを示しています。アノテーション型宣言でのみ使用できます：</target>
        </trans-unit>
        <trans-unit id="e89a04f3da4efa728a7469acac726ca3cfa4b865" translate="yes" xml:space="preserve">
          <source>For example, this code allows a user to read a number from &lt;code&gt;System.in&lt;/code&gt;:</source>
          <target state="translated">たとえば、次のコードでは、ユーザーが &lt;code&gt;System.in&lt;/code&gt; から数値を読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="dc0aeff52d98963e9b52ef9b7492a0f9f8e38a99" translate="yes" xml:space="preserve">
          <source>For example, this method allows the number of days between two dates to be calculated:</source>
          <target state="translated">例えば、この方法では、2つの日付間の日数を計算することができます。</target>
        </trans-unit>
        <trans-unit id="52cd17ffbe39b63f68834b0ef711a4383a761739" translate="yes" xml:space="preserve">
          <source>For example, to check if a shaper shapes to Arabic, you would use the following:</source>
          <target state="translated">例えば、シェイパーがアラビア語にシェイプされているかどうかを確認するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="3063291fbeb8cab7d02fe3b39ad0305adadd4b7d" translate="yes" xml:space="preserve">
          <source>For example, to compute the set of last names of people in each city, where the city names are sorted:</source>
          <target state="translated">例えば、都市名がソートされた各都市の人々の姓のセットを計算する。</target>
        </trans-unit>
        <trans-unit id="542c0e3ace7d7c931e3fca12ab5e385bf8b8c0c0" translate="yes" xml:space="preserve">
          <source>For example, to compute the set of last names of people in each city:</source>
          <target state="translated">例えば、各都市の人々の姓の集合を計算する。</target>
        </trans-unit>
        <trans-unit id="f05452af65e15167a37042770e9c5b3da86616ac" translate="yes" xml:space="preserve">
          <source>For example, to convert 10 minutes to milliseconds, use: &lt;code&gt;TimeUnit.MILLISECONDS.convert(10L, TimeUnit.MINUTES)&lt;/code&gt;</source>
          <target state="translated">たとえば、10分をミリ秒に変換するには、 &lt;code&gt;TimeUnit.MILLISECONDS.convert(10L, TimeUnit.MINUTES)&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="c0d9e251461e5a6e353041a4a4542e479d3f2028" translate="yes" xml:space="preserve">
          <source>For example, to create a &lt;code&gt;MouseListener&lt;/code&gt; that sets the target object's &lt;code&gt;origin&lt;/code&gt; property to the incoming &lt;code&gt;MouseEvent&lt;/code&gt;'s location (that's the value of &lt;code&gt;mouseEvent.getPoint()&lt;/code&gt;) each time a mouse button is pressed, one would write:</source>
          <target state="translated">たとえば、マウスボタンが押されるたびに、ターゲットオブジェクトの &lt;code&gt;origin&lt;/code&gt; プロパティを着信 &lt;code&gt;MouseEvent&lt;/code&gt; の位置（つまり、 &lt;code&gt;mouseEvent.getPoint()&lt;/code&gt; の値）に設定する &lt;code&gt;MouseListener&lt;/code&gt; を作成するには、次のように記述します。</target>
        </trans-unit>
        <trans-unit id="7c169d1425b0d3d047f986a746865e5bcd17ca63" translate="yes" xml:space="preserve">
          <source>For example, to find the first 10 calling frames, first skipping those frames whose declaring class is in package &lt;code&gt;com.foo&lt;/code&gt;:</source>
          <target state="translated">たとえば、最初の10個の呼び出しフレームを見つけるには、最初に、宣言クラスがパッケージ &lt;code&gt;com.foo&lt;/code&gt; にあるフレームをスキップします。</target>
        </trans-unit>
        <trans-unit id="81105bd41c2fbf89b34ee447551dfb47d67c897e" translate="yes" xml:space="preserve">
          <source>For example, to identify the &lt;code&gt;SPLIT_PANE&lt;/code&gt;&lt;code&gt;Region&lt;/code&gt; you would use &lt;code&gt;SplitPane&lt;/code&gt;. The following shows a custom &lt;code&gt;SynthStyleFactory&lt;/code&gt; that returns a specific style for split panes:</source>
          <target state="translated">たとえば、 &lt;code&gt;SPLIT_PANE&lt;/code&gt; &lt;code&gt;Region&lt;/code&gt; を識別するには、SplitPaneを使用し &lt;code&gt;SplitPane&lt;/code&gt; 。以下に、分割ペインの特定のスタイルを返すカスタム &lt;code&gt;SynthStyleFactory&lt;/code&gt; を示します。</target>
        </trans-unit>
        <trans-unit id="039e8b55bb061518d4b6a27396dcc8fc21604cf2" translate="yes" xml:space="preserve">
          <source>For example, to measure how long some code takes to execute:</source>
          <target state="translated">例えば、いくつかのコードの実行にかかる時間を測定します。</target>
        </trans-unit>
        <trans-unit id="8064ab890fae301b1c872df07a0c453c310705c9" translate="yes" xml:space="preserve">
          <source>For example, to monitor image uploads to a web server with a separate thread for each upload, an event called File Upload starts when the user uploads a file and ends when the upload is complete. For advanced diagnostics about image uploads, more detailed events are created (for example, Image Read, Image Resize, and Image Write). During these detailed events, other low- level events could occur (for example, Socket Read and File Write).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb09925aecc146e184d9ca3d6ae2de5f80ef10f2" translate="yes" xml:space="preserve">
          <source>For example, to obtain a &lt;code&gt;Comparator&lt;/code&gt; that compares &lt;code&gt;
 Person&lt;/code&gt; objects by their last name ignoring case differences,</source>
          <target state="translated">たとえば、大文字と小文字の違いを無視して姓で &lt;code&gt; Person&lt;/code&gt; オブジェクトを比較する &lt;code&gt;Comparator&lt;/code&gt; を取得するには、</target>
        </trans-unit>
        <trans-unit id="c9d3d4ff8736c7b66d61fc02698ec045f178ad78" translate="yes" xml:space="preserve">
          <source>For example, to obtain a &lt;code&gt;Comparator&lt;/code&gt; that compares &lt;code&gt;
 Person&lt;/code&gt; objects by their last name,</source>
          <target state="translated">たとえば、 &lt;code&gt; Person&lt;/code&gt; オブジェクトを姓で比較する &lt;code&gt;Comparator&lt;/code&gt; を取得するには、</target>
        </trans-unit>
        <trans-unit id="d27c11303b6f84d44156eb74f65cb1fb6557f6f1" translate="yes" xml:space="preserve">
          <source>For example, to obtain a &lt;code&gt;Comparator&lt;/code&gt; that compares &lt;code&gt;Person&lt;/code&gt; objects by their last name ignoring case differences,</source>
          <target state="translated">たとえば、 &lt;code&gt;Person&lt;/code&gt; オブジェクトを、大文字小文字の違いを無視して姓で比較する &lt;code&gt;Comparator&lt;/code&gt; を取得するには、</target>
        </trans-unit>
        <trans-unit id="354ab1d14b7fe39532cb8c574202480e62f34ef8" translate="yes" xml:space="preserve">
          <source>For example, to obtain a &lt;code&gt;Comparator&lt;/code&gt; that compares &lt;code&gt;Person&lt;/code&gt; objects by their last name,</source>
          <target state="translated">たとえば、 &lt;code&gt;Person&lt;/code&gt; オブジェクトを姓で比較する &lt;code&gt;Comparator&lt;/code&gt; を取得するには、</target>
        </trans-unit>
        <trans-unit id="8221a33305d40e06cb9be3bf03c846af33b861de" translate="yes" xml:space="preserve">
          <source>For example, to obtain a DOM Document Node:</source>
          <target state="translated">例えば、DOM Document Nodeを取得する場合。</target>
        </trans-unit>
        <trans-unit id="d766cb4d571bbdc6c5fbd68fc0b953fc1af8846b" translate="yes" xml:space="preserve">
          <source>For example, to parse an XML value with a DOM parser:</source>
          <target state="translated">例えば、DOM パーサーで XML 値を解析する場合。</target>
        </trans-unit>
        <trans-unit id="63b9e3822258c48e3b16d7faa3a5376c66a4942d" translate="yes" xml:space="preserve">
          <source>For example, to print all elements of a &lt;code&gt;Vector&amp;lt;E&amp;gt;&lt;/code&gt;</source>
          <target state="translated">たとえば、 &lt;code&gt;Vector&amp;lt;E&amp;gt;&lt;/code&gt; すべての要素を印刷するには</target>
        </trans-unit>
        <trans-unit id="edbb747839df6ac31ee4fba787419b796a8f7906" translate="yes" xml:space="preserve">
          <source>For example, to set the sample interval of the CPU Load event to once every second, use the name &lt;code&gt;&quot;jdk.CPULoad#period&quot;&lt;/code&gt; and the value &lt;code&gt;&quot;1 s&quot;&lt;/code&gt;. If multiple events use the same name, for example if an event class is loaded in multiple class loaders, and differentiation is needed between them, then the name is &lt;code&gt;&quot;56#period&quot;&lt;/code&gt;. The ID for an event is obtained by invoking &lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/eventtype#getId()&quot;&gt;&lt;code&gt;EventType.getId()&lt;/code&gt;&lt;/a&gt; method and is valid for the Java Virtual Machine (JVM) instance that the event is registered in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d5df42ba7a06759bf1297e4828fc9f44238ff4" translate="yes" xml:space="preserve">
          <source>For example, to set the sample interval of the CPU Load event to once every second, use the name &lt;code&gt;&quot;jdk.CPULoad#period&quot;&lt;/code&gt; and the value &lt;code&gt;&quot;1 s&quot;&lt;/code&gt;. If multiple events use the same name, for example if an event class is loaded in multiple class loaders, and differentiation is needed between them, then the name is &lt;code&gt;&quot;56#period&quot;&lt;/code&gt;. The ID for an event is obtained by invoking &lt;a href=&quot;eventtype#getId()&quot;&gt;&lt;code&gt;EventType.getId()&lt;/code&gt;&lt;/a&gt; method and is valid for the Java Virtual Machine instance that the event is registered in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0507a7d537ae9945a10e6635aaa2418e8fc20e24" translate="yes" xml:space="preserve">
          <source>For example, to sort a collection of &lt;code&gt;String&lt;/code&gt; based on the length and then case-insensitive natural ordering, the comparator can be composed using following code,</source>
          <target state="translated">たとえば、 &lt;code&gt;String&lt;/code&gt; コレクションを長さに基づいて並べ替え、大文字と小文字を区別しない自然な順序で並べ替えるには、次のコードを使用してコンパレータを構成できます。</target>
        </trans-unit>
        <trans-unit id="a5496677e05a9fd5dfd0e6a5b8d5d4c7e0a44f20" translate="yes" xml:space="preserve">
          <source>For example, to specify the &quot;host&quot; service use of a forwardable TGT the target permission is specified as follows:</source>
          <target state="translated">例えば、転送可能なTGTの &quot;ホスト &quot;サービス利用を指定するには、以下のようにターゲットパーミッションを指定します。</target>
        </trans-unit>
        <trans-unit id="533a0f50bf0b375e4e417e9cacef45695527dd13" translate="yes" xml:space="preserve">
          <source>For example, to specify the permission to access to the TGT to initiate a security context the permission is constructed as follows:</source>
          <target state="translated">例えば、セキュリティコンテキストを開始するためにTGTにアクセスする権限を指定するには、権限は以下のように構成されます。</target>
        </trans-unit>
        <trans-unit id="b342cdb19cfb253b2fc3d5084c2213b875e77218" translate="yes" xml:space="preserve">
          <source>For example, you can align numbers in two ways:</source>
          <target state="translated">例えば、数字を揃えるには2通りの方法があります。</target>
        </trans-unit>
        <trans-unit id="7fe7b4fb9a2ed77429bfbc46219b1d2c87900bad" translate="yes" xml:space="preserve">
          <source>For example, you can construct a SocketPermission instance as the following:</source>
          <target state="translated">例えば、以下のようにSocketPermissionのインスタンスを構築することができます。</target>
        </trans-unit>
        <trans-unit id="911931a41db3ff2123e7246a13c4b78a0cf276f7" translate="yes" xml:space="preserve">
          <source>For example, you can print a slide presentation on US letter-sized white paper, double-sided, stapled, 20 copies to make handouts for a talk; and you could print the same slide presentation on US letter-sized transparencies, single-sided, one copy to make the actual slides for the talk.</source>
          <target state="translated">例えば、米国のレターサイズの白い紙にスライドプレゼンテーションを印刷することができます、両面、ホチキス留め、トークのための配布資料を作成するために20コピー。</target>
        </trans-unit>
        <trans-unit id="2f85cf8c2987e395efc8c2eac232884781ca0b58" translate="yes" xml:space="preserve">
          <source>For example, you could implement a blocking &lt;code&gt;poll&lt;/code&gt; method (see &lt;a href=&quot;blockingqueue#poll(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;BlockingQueue.poll&lt;/code&gt;&lt;/a&gt;) using:</source>
          <target state="translated">たとえば、次を使用してブロッキング &lt;code&gt;poll&lt;/code&gt; メソッド（&lt;a href=&quot;blockingqueue#poll(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;BlockingQueue.poll&lt;/code&gt; &lt;/a&gt;を参照）を実装できます。</target>
        </trans-unit>
        <trans-unit id="b6ac85d9e48f5b4a3d8639df9f4a72b7a35300d5" translate="yes" xml:space="preserve">
          <source>For example, you could implement a blocking &lt;code&gt;poll&lt;/code&gt; method (see &lt;a href=&quot;blockingqueue#poll-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;BlockingQueue.poll&lt;/code&gt;&lt;/a&gt;) using:</source>
          <target state="translated">たとえば、以下を使用してブロッキング &lt;code&gt;poll&lt;/code&gt; メソッド（&lt;a href=&quot;blockingqueue#poll-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;BlockingQueue.poll&lt;/code&gt; &lt;/a&gt;を参照）を実装できます。</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例えば</target>
        </trans-unit>
        <trans-unit id="fdcbab4aae2389893f867fa63018aa69e039b2ef" translate="yes" xml:space="preserve">
          <source>For example: com.company.package.classname. The date element is used to indicate the date the source was generated. The date element must follow the ISO 8601 standard. For example the date element would have the following value 2001-07-04T12:08:56.235-0700 which represents 2001-07-04 12:08:56 local time in the U.S. Pacific Time time zone.</source>
          <target state="translated">例:com.company.package.classname。date 要素は、ソースが生成された日付を示すために使用されます。date 要素は ISO 8601 標準に従う必要があります。例えば、date要素の値は次のようになります。2001-07-04T12:08:56.235-0700は、米国太平洋時間帯の現地時間2001-07-04 12:08:56を表しています。</target>
        </trans-unit>
        <trans-unit id="7e5f4a789a81a7ee9220bb8bdf29a0137643b64b" translate="yes" xml:space="preserve">
          <source>For examples and further information on using button groups see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html#radiobutton&quot;&gt;How to Use Radio Buttons&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">ボタングループの使用例と詳細については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションにある&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html#radiobutton&quot;&gt;ラジオボタンの使用方法を&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f48b1839f0d9d7bcb6fda541874914f2e598de29" translate="yes" xml:space="preserve">
          <source>For examples and further information on using button groups see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/button.html#radiobutton&quot;&gt;How to Use Radio Buttons&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c717625bd61cd01493fbcc4cadd7d2934e4cec61" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;#floorDiv(int,int)&quot;&gt;&lt;code&gt;floorDiv(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">例については、&lt;a href=&quot;#floorDiv(int,int)&quot;&gt; &lt;code&gt;floorDiv(int, int)&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="278b9a1168df3127c25b5587e0e84a19abe4b0fb" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;#floorDiv(long,long)&quot;&gt;&lt;code&gt;floorDiv(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1de7cccbbe2af214ee09fe3b941c433108d19943" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;#floorMod(int,int)&quot;&gt;&lt;code&gt;floorMod(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">例については、&lt;a href=&quot;#floorMod(int,int)&quot;&gt; &lt;code&gt;floorMod(int, int)&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="56727bc3623e0ddfd80f98aae78c7797481c52a2" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;#floorMod(long,long)&quot;&gt;&lt;code&gt;floorMod(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d302a6835077ac5f129f7fde727dfa42966be4" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;math#floorDiv-int-int-&quot;&gt;&lt;code&gt;floorDiv(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">例については、&lt;a href=&quot;math#floorDiv-int-int-&quot;&gt; &lt;code&gt;floorDiv(int, int)&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b2170f0d8e4fb039d7c4dce593784b3310564d9a" translate="yes" xml:space="preserve">
          <source>For examples, see &lt;a href=&quot;math#floorMod-int-int-&quot;&gt;&lt;code&gt;floorMod(int, int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">例については、&lt;a href=&quot;math#floorMod-int-int-&quot;&gt; &lt;code&gt;floorMod(int, int)&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a97093b8a6da476bf44b7f54ca0f23866085823d" translate="yes" xml:space="preserve">
          <source>For file objects representing regular files</source>
          <target state="translated">通常のファイルを表すファイルオブジェクトの場合</target>
        </trans-unit>
        <trans-unit id="107fea67ce4853781cd6165337272b1075f787c3" translate="yes" xml:space="preserve">
          <source>For finer-grained String comparison, refer to &lt;a href=&quot;../text/collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">より詳細な文字列の比較については、&lt;a href=&quot;../text/collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1f44070d7d95f5a7e5a8b0198d911637f271e9cf" translate="yes" xml:space="preserve">
          <source>For finer-grained, locale-sensitive String comparison, refer to &lt;a href=&quot;../text/collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">よりきめ細かく、ロケールに依存する文字列の比較については、&lt;a href=&quot;../text/collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="af275deed54fcb5d94febf308381f0c41ceb385f" translate="yes" xml:space="preserve">
          <source>For formatting, &lt;code&gt;DecimalFormat&lt;/code&gt; uses the ten consecutive characters starting with the localized zero digit defined in the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object as digits. For parsing, these digits as well as all Unicode decimal digits, as defined by &lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, are recognized.</source>
          <target state="translated">書式設定の場合、 &lt;code&gt;DecimalFormat&lt;/code&gt; は、 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; オブジェクトで定義されたローカライズされたゼロ桁で始まる10個の連続した文字を数字として使用します。解析では、これらの数字と、&lt;a href=&quot;../lang/character#digit(char,int)&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; &lt;/a&gt;で定義されているすべてのUnicode10進数が認識されます。</target>
        </trans-unit>
        <trans-unit id="bbd0239ac79e980c77f30b8f9af1ba23162cd46a" translate="yes" xml:space="preserve">
          <source>For formatting, &lt;code&gt;DecimalFormat&lt;/code&gt; uses the ten consecutive characters starting with the localized zero digit defined in the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object as digits. For parsing, these digits as well as all Unicode decimal digits, as defined by &lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt;&lt;code&gt;Character.digit&lt;/code&gt;&lt;/a&gt;, are recognized.</source>
          <target state="translated">書式設定では、 &lt;code&gt;DecimalFormat&lt;/code&gt; は、 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; オブジェクトで定義されているローカライズされたゼロの数字で始まる10個の連続した文字を数字として使用します。解析では、これらの数字と、&lt;a href=&quot;../lang/character#digit-char-int-&quot;&gt; &lt;code&gt;Character.digit&lt;/code&gt; &lt;/a&gt;で定義されているすべてのUnicode 10進数字が認識されます。</target>
        </trans-unit>
        <trans-unit id="1ff16dff24bd3a7f7ada71f36fe1fa2079304912" translate="yes" xml:space="preserve">
          <source>For formatting, if the number of pattern letters is 2, the year is truncated to 2 digits; otherwise it is interpreted as a &lt;a href=&quot;#number&quot;&gt;number&lt;/a&gt;.</source>
          <target state="translated">書式設定では、パターン文字の数が2の場合、年は2桁に切り捨てられます。それ以外の場合は、&lt;a href=&quot;#number&quot;&gt;数値&lt;/a&gt;として解釈されます。</target>
        </trans-unit>
        <trans-unit id="ddb6fed4a81ca53cc369192aacd8582ee4ce8e0a" translate="yes" xml:space="preserve">
          <source>For formatting, if the offset value from GMT is 0, &lt;code&gt;&quot;Z&quot;&lt;/code&gt; is produced. If the number of pattern letters is 1, any fraction of an hour is ignored. For example, if the pattern is &lt;code&gt;&quot;X&quot;&lt;/code&gt; and the time zone is &lt;code&gt;&quot;GMT+05:30&quot;&lt;/code&gt;, &lt;code&gt;&quot;+05&quot;&lt;/code&gt; is produced.</source>
          <target state="translated">書式設定では、GMTからのオフセット値が0の場合、 &lt;code&gt;&quot;Z&quot;&lt;/code&gt; が生成されます。パターン文字の数が1の場合、1時間の端数は無視されます。たとえば、パターンが &lt;code&gt;&quot;X&quot;&lt;/code&gt; でタイムゾーンが &lt;code&gt;&quot;GMT+05:30&quot;&lt;/code&gt; 場合、 &lt;code&gt;&quot;+05&quot;&lt;/code&gt; + 05 」が生成されます。</target>
        </trans-unit>
        <trans-unit id="30762100cef30818142dda2795a16148020ed918" translate="yes" xml:space="preserve">
          <source>For formatting, the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;maxWidth&lt;/code&gt; are used to determine the number of characters to format. If they are equal then the format is fixed width. If the value of the field is within the range of the &lt;code&gt;baseValue&lt;/code&gt; using &lt;code&gt;width&lt;/code&gt; characters then the reduced value is formatted otherwise the value is truncated to fit &lt;code&gt;maxWidth&lt;/code&gt;. The rightmost characters are output to match the width, left padding with zero.</source>
          <target state="translated">書式設定では、 &lt;code&gt;width&lt;/code&gt; と &lt;code&gt;maxWidth&lt;/code&gt; を使用して、書式設定する文字数を決定します。それらが等しい場合、フォーマットは固定幅です。フィールドの値が &lt;code&gt;width&lt;/code&gt; 文字を使用して &lt;code&gt;baseValue&lt;/code&gt; の範囲内にある場合、削減された値がフォーマットされます。それ以外の場合、値は &lt;code&gt;maxWidth&lt;/code&gt; に合うように切り捨てられます。右端の文字は、幅に合わせて出力され、左側にはゼロが埋め込まれます。</target>
        </trans-unit>
        <trans-unit id="86307ef52182c337ecdeed0a18f594ba47f90dbc" translate="yes" xml:space="preserve">
          <source>For further details on the makeup of the returned &lt;code&gt;Hashtable&lt;/code&gt;, see the &lt;code&gt;setLabelTable&lt;/code&gt; documentation.</source>
          <target state="translated">返された &lt;code&gt;Hashtable&lt;/code&gt; 構成の詳細については、 &lt;code&gt;setLabelTable&lt;/code&gt; のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="70177aedeb0091d3f5131204109f5188dbfe7cf0" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;How to Use Internal Frames&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">詳細なドキュメントと例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションである&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;内部フレームの使用方法」を&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3e4b037bbbe770f333358d04be0b29cf63399e18" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">詳細なドキュメントと例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションである&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;メニューの使用方法」を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d5c55da39c499a60c82c691b8be9607fd4d72241" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">詳細なドキュメントと例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションである&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;進行状況を監視する方法」を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bc0794470ab2d5218687b182417d70c95c4efbf1" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;How to Use Internal Frames&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9400509e10d6f9c91228f40cc27b68a4bd780fd8" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5444a9c69b0235795e7ff8b94c2258df216fc7e3" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/progress.html&quot;&gt;How to Monitor Progress&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cec4a9555e2d3c867d9f5618a404938d6de5cde" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see the following sections in &lt;em&gt;The Java Tutorial&lt;/em&gt;: &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;How to Write a Tree Expansion Listener&lt;/a&gt; and &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;How to Write a Tree-Will-Expand Listener&lt;/a&gt;.</source>
          <target state="translated">詳細なドキュメントと例については、&lt;em&gt;Javaチュートリアルの&lt;/em&gt;次のセクションを参照してください：&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;ツリー拡張リスナーの&lt;/a&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;作成方法&lt;/a&gt;およびツリー拡張リスナーの作成方法。</target>
        </trans-unit>
        <trans-unit id="cec016b2f97e881f2ef8cd31a48fecf887e596a6" translate="yes" xml:space="preserve">
          <source>For further documentation and examples see the following sections in &lt;em&gt;The Java Tutorial&lt;/em&gt;: &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;How to Write a Tree Expansion Listener&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;How to Write a Tree-Will-Expand Listener&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48582963a77ba74bf88d3b898d4ce9c917800ae0" translate="yes" xml:space="preserve">
          <source>For further documentation and for examples, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">詳細なドキュメントと例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;メニューの使用方法を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5e1284681b4c2b5d1f6b1055809882c4572cff72" translate="yes" xml:space="preserve">
          <source>For further documentation and for examples, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c3d831d0c3d774c07aabb377adbb94d8c02b4b" translate="yes" xml:space="preserve">
          <source>For further documentation, please see:</source>
          <target state="translated">詳細なドキュメントについては、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="fcec9208587350945fcaf80b6a1f5f94eb52edd2" translate="yes" xml:space="preserve">
          <source>For further documentation, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/table.html#data&quot;&gt;Creating a Table Model&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">詳細なドキュメントについては&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/table.html#data&quot;&gt;テーブルモデルの作成を&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0f06d9b519d18282f33f57472142b94ccacaeb96" translate="yes" xml:space="preserve">
          <source>For further documentation, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/table.html#data&quot;&gt;Creating a Table Model&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db98ffc64d074e9381de37b26512bf1d106a9bd5" translate="yes" xml:space="preserve">
          <source>For further information and examples of using check box menu items, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">チェックボックスメニュー項目の詳細と使用例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションにある&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;メニューの使用方法」を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f0ce83de447a00856f5201ae11cc7e4f9f3ecf2" translate="yes" xml:space="preserve">
          <source>For further information and examples of using check box menu items, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2a4252e04c57eefeb7b1ecc400cf9feab741de" translate="yes" xml:space="preserve">
          <source>For further information and examples of using image icons, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/icon.html&quot;&gt;How to Use Icons&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">イメージアイコンの使用の詳細と例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/icon.html&quot;&gt;アイコンの使用方法を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="882bf3f7567c15e80ad1071053fff49b01cb39ab" translate="yes" xml:space="preserve">
          <source>For further information and examples of using image icons, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/icon.html&quot;&gt;How to Use Icons&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c9910bdc3fd79ca4fea29dc730177492456718" translate="yes" xml:space="preserve">
          <source>For further information and examples of using tree paths, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">ツリーパスの使用の詳細と例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;「ツリーの使用方法」を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="36c2dcdc449a0e6853fe47da5e21301140952033" translate="yes" xml:space="preserve">
          <source>For further information and examples of using tree paths, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a90ce028732da31dc2085bfa4e6d659d483dbf" translate="yes" xml:space="preserve">
          <source>For further information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/slider.html&quot;&gt;How to Use Sliders&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">詳細と例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションである&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/slider.html&quot;&gt;スライダーの使用方法」を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bbfc882840839be130d27c6cdcfcd5a22fbca81b" translate="yes" xml:space="preserve">
          <source>For further information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/box.html&quot;&gt;How to Use BoxLayout&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">詳細と例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションである&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/layout/box.html&quot;&gt;BoxLayoutの使用方法を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="455ecf20c7af5b27aa51bb82f3a662b2b0819b43" translate="yes" xml:space="preserve">
          <source>For further information and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/slider.html&quot;&gt;How to Use Sliders&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1607668101eaae1f1e933aff0c2d46c5b910018e" translate="yes" xml:space="preserve">
          <source>For further information and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/layout/box.html&quot;&gt;How to Use BoxLayout&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c1185b29041da35b97ab7eab62b5e3abc72849" translate="yes" xml:space="preserve">
          <source>For further information on tree models, including an example of a custom implementation, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">カスタム実装の例を含むツリーモデルの詳細については、&lt;em&gt;「Javaチュートリアルの&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;ツリーの使用方法」を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f8869140d50a8b31e5be1a1a94a8fba8436ea85e" translate="yes" xml:space="preserve">
          <source>For further information on tree models, including an example of a custom implementation, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f28bbe0d1ed64d964af58c8022a109ae9ccc10f" translate="yes" xml:space="preserve">
          <source>For further information see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;How to Use Buttons, Check Boxes, and Radio Buttons&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">詳細については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションの&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;「ボタン、チェックボックス、およびラジオボタンの使用方法」を&lt;/a&gt;参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96b6840b6054b516727fe81bcf15ce39e95a61a4" translate="yes" xml:space="preserve">
          <source>For further information see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/button.html&quot;&gt;How to Use Buttons, Check Boxes, and Radio Buttons&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffa387798756e472ad4ed19066f2f96eeb6d8b9" translate="yes" xml:space="preserve">
          <source>For further information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt;Using the Multiplexing Look and Feel.&lt;/a&gt;</source>
          <target state="translated">詳細について&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt;は、多重化ルックアンドフィールの使用を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e018c6fbeea3ae17d14fcc58c8a97447d4b29ec5" translate="yes" xml:space="preserve">
          <source>For further information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt;Using the Multiplexing Look and Feel.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b240043433660c7e11e9eaf3757b9adfa7c62ee" translate="yes" xml:space="preserve">
          <source>For general argument types, the precision is the maximum number of characters to be written to the output.</source>
          <target state="translated">一般的な引数型の場合、精度は出力に書き込む最大文字数です。</target>
        </trans-unit>
        <trans-unit id="6ac3bc0ccd869fb439d7cb91a237f9f63e1b3d00" translate="yes" xml:space="preserve">
          <source>For historical reasons, this method is not static, but its behavior does not depend on the instance on which it is called.</source>
          <target state="translated">歴史的な理由から、このメソッドは静的ではありませんが、その動作は呼び出されたインスタンスに依存しません。</target>
        </trans-unit>
        <trans-unit id="9ef1222a3aa584be05528f73a489e06ed37b9719" translate="yes" xml:space="preserve">
          <source>For horizontal scrolling and &lt;code&gt;VERTICAL&lt;/code&gt; orientation, returns &lt;code&gt;visibleRect.width&lt;/code&gt;.</source>
          <target state="translated">水平方向のスクロールとのための &lt;code&gt;VERTICAL&lt;/code&gt; 配向、返し &lt;code&gt;visibleRect.width&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="7f9614c4b6677d682d6ebf32146e4b40ca83ced4" translate="yes" xml:space="preserve">
          <source>For horizontal scrolling, if the layout orientation is &lt;code&gt;VERTICAL&lt;/code&gt;, then the list's font size is returned (or &lt;code&gt;1&lt;/code&gt; if the font is &lt;code&gt;null&lt;/code&gt;).</source>
          <target state="translated">水平スクロールの場合、レイアウトの向きが &lt;code&gt;VERTICAL&lt;/code&gt; の場合、リストのフォントサイズが返されます（フォントが &lt;code&gt;null&lt;/code&gt; の場合は &lt;code&gt;1&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e93dfe403e923c48d7c3ec78228e39fdac5fbbe3" translate="yes" xml:space="preserve">
          <source>For horizontal scrolling, when the layout orientation is either &lt;code&gt;VERTICAL_WRAP&lt;/code&gt; or &lt;code&gt;HORIZONTAL_WRAP&lt;/code&gt;:</source>
          <target state="translated">水平スクロールの場合、レイアウトの向きが &lt;code&gt;VERTICAL_WRAP&lt;/code&gt; または &lt;code&gt;HORIZONTAL_WRAP&lt;/code&gt; の場合：</target>
        </trans-unit>
        <trans-unit id="ffdf89fbfae740196b5bdae01ce560a68c803bc1" translate="yes" xml:space="preserve">
          <source>For i=1..K, Di = Ai</source>
          <target state="translated">i=1...Kの場合、Di=Ai</target>
        </trans-unit>
        <trans-unit id="09b9b63237aaa55086913ffd8a2b891202973f33" translate="yes" xml:space="preserve">
          <source>For i=1..N, Ti is adaptable to Aj, where j=i+k</source>
          <target state="translated">i=1...Nの場合、TiはAjに適応しており、j=i+kである。</target>
        </trans-unit>
        <trans-unit id="59d9dde9e53f112cf0672b2c57e8e527ae4c2cfc" translate="yes" xml:space="preserve">
          <source>For ignorable characters, the first rule must start with a relation (the examples we have used above are really fragments; &quot;a &amp;lt; b&quot; really should be &quot;&amp;lt; a &amp;lt; b&quot;). If, however, the first relation is not &quot;&amp;lt;&quot;, then all the all text-arguments up to the first &quot;&amp;lt;&quot; are ignorable. For example, &quot;, - &amp;lt; a &amp;lt; b&quot; makes &quot;-&quot; an ignorable character, as we saw earlier in the word &quot;black-birds&quot;. In the samples for different languages, you see that most accents are ignorable.</source>
          <target state="translated">無視できる文字の場合、最初のルールは関係で始まる必要があります（上記で使用した例は実際にはフラグメントです。「a &amp;lt;b」は実際には「&amp;lt;a &amp;lt;b」である必要があります）。ただし、最初の関係が「&amp;lt;」でない場合、最初の「&amp;lt;」までのすべてのテキスト引数は無視できます。たとえば、 &quot;、-&amp;lt;a &amp;lt;b&quot;と指定すると、 &quot;-&quot;は無視できる文字になります。さまざまな言語のサンプルでは、​​ほとんどのアクセントが無視できることがわかります。</target>
        </trans-unit>
        <trans-unit id="fabd85b21ae351b462896cf695c97093bbffa124" translate="yes" xml:space="preserve">
          <source>For images the tooltip text comes from text specified with the &lt;code&gt;ALT&lt;/code&gt; attribute.</source>
          <target state="translated">画像の場合、ツールチップテキストは &lt;code&gt;ALT&lt;/code&gt; 属性で指定されたテキストから取得されます。</target>
        </trans-unit>
        <trans-unit id="0d9b4f443a1f2d7650a9da382d578987b32be1b0" translate="yes" xml:space="preserve">
          <source>For images the tooltip text comes from text specified with the &lt;code&gt;ALT&lt;/code&gt; attribute. This is overriden to return &lt;code&gt;getAltText&lt;/code&gt;.</source>
          <target state="translated">画像の場合、ツールチップテキストは &lt;code&gt;ALT&lt;/code&gt; 属性で指定されたテキストから取得されます。これは、 &lt;code&gt;getAltText&lt;/code&gt; を返すようにオーバーライドされます。</target>
        </trans-unit>
        <trans-unit id="d9fd31dcc26a3c512fd5aca7bd3a9885c31b1e33" translate="yes" xml:space="preserve">
          <source>For implementations that support a command-line interface, an agent can be started by specifying an option on the command-line.</source>
          <target state="translated">コマンドライン・インターフェースをサポートする実装では、コマンドライン上でオプションを指定することでエージェントを起動することができます。</target>
        </trans-unit>
        <trans-unit id="999a3b10953e4e7b359f0edd758b57b264e2b633" translate="yes" xml:space="preserve">
          <source>For implementations where multiple copies are produced by the interpreter with only a single pass over the data, the final value of the JobKOctetsProcessed attribute must be equal to the value of the &lt;a href=&quot;jobkoctets&quot;&gt;&lt;code&gt;JobKOctets&lt;/code&gt;&lt;/a&gt; attribute. For implementations where multiple copies are produced by the interpreter by processing the data for each copy, the final value must be a multiple of the value of the &lt;a href=&quot;jobkoctets&quot;&gt;&lt;code&gt;JobKOctets&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">複数のコピーがデータ上単一パスでインタプリタによって生成される実装の場合、JobKOctetsProcessed属性の最終値は、の値に等しくなければならない&lt;a href=&quot;jobkoctets&quot;&gt; &lt;code&gt;JobKOctets&lt;/code&gt; の&lt;/a&gt;属性。インタプリタが各コピーのデータを処理して複数のコピーを作成する実装の場合、最終値は&lt;a href=&quot;jobkoctets&quot;&gt; &lt;code&gt;JobKOctets&lt;/code&gt; &lt;/a&gt;属性の値の倍数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="1d7dfecee7ffa161616519435e3d44d03df9362c" translate="yes" xml:space="preserve">
          <source>For imports, the import is added. Classes, interfaces. methods, and variables are defined. The initializer of variables, statements, and expressions are executed. The modifiers public, protected, private, static, and final are not allowed on op-level declarations and are ignored with a warning. Synchronized, native, abstract, and default top-level methods are not allowed and are errors. If a previous definition of a declaration is overwritten then there will be an event showing its status changed to OVERWRITTEN, this will not occur for dropped, rejected, or already overwritten declarations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b22519a10688f4a1bea8cd9d520a60881a40d7" translate="yes" xml:space="preserve">
          <source>For information about X.509 certificates and CRLs, please see:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8688fad722f03c47fb91dbf39fb3661b85bb1d1f" translate="yes" xml:space="preserve">
          <source>For information and examples of using menu bars see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">メニューバーの使用例と情報については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションにある&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;メニューの使用方法」を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c36647438815ab06cecb187171d9acc3f9da96f3" translate="yes" xml:space="preserve">
          <source>For information and examples of using menu bars see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662cb4e57dc7b68ed821cd0497757b673c382163" translate="yes" xml:space="preserve">
          <source>For information and examples of using menus see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">メニューの使用例と情報については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションにある&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;メニューの使用方法」を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="29c1aba2fc55df113dfa14e1346ad458c76a3252" translate="yes" xml:space="preserve">
          <source>For information and examples of using menus see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ade067e2e1dd72bc80cc13e6334ca8c385d22f" translate="yes" xml:space="preserve">
          <source>For information and examples of using popup menus, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">ポップアップメニューの使用例については、&lt;em&gt;「Javaチュートリアルの&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;メニューの使用方法」を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7320901564e73dd2695096a69f88132162b7f72d" translate="yes" xml:space="preserve">
          <source>For information and examples of using popup menus, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt; in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="708a47bc63c338712226c228b897d83e7e0726e3" translate="yes" xml:space="preserve">
          <source>For information and examples of using spinner see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/spinner.html&quot;&gt;How to Use Spinners&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">スピナーの使用例と情報については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションにあるスピナーの&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/spinner.html&quot;&gt;使用方法を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c8c064ed84ca74c33ee63994a1ca4ab3bb2a6df" translate="yes" xml:space="preserve">
          <source>For information and examples of using spinner see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/spinner.html&quot;&gt;How to Use Spinners&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07700dd83b22b86d17d2b19aa278c34c33dca7f9" translate="yes" xml:space="preserve">
          <source>For information on customizing how &lt;b&gt;text/html&lt;/b&gt; is rendered please see &lt;a href=&quot;#W3C_LENGTH_UNITS&quot;&gt;&lt;code&gt;W3C_LENGTH_UNITS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#HONOR_DISPLAY_PROPERTIES&quot;&gt;&lt;code&gt;HONOR_DISPLAY_PROPERTIES&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;b&gt;text / htmlの&lt;/b&gt;レンダリング方法のカスタマイズについては、&lt;a href=&quot;#W3C_LENGTH_UNITS&quot;&gt; &lt;code&gt;W3C_LENGTH_UNITS&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#HONOR_DISPLAY_PROPERTIES&quot;&gt; &lt;code&gt;HONOR_DISPLAY_PROPERTIES&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2a8c5755ffed0a58e3924605a1239109dbdea591" translate="yes" xml:space="preserve">
          <source>For information on how mouse wheel events are dispatched, see the class description for &lt;a href=&quot;event/mousewheelevent&quot;&gt;&lt;code&gt;MouseWheelEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">マウスホイールイベントのディスパッチ方法については、&lt;a href=&quot;event/mousewheelevent&quot;&gt; &lt;code&gt;MouseWheelEvent&lt;/code&gt; の&lt;/a&gt;クラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="a39eb611ccb9eb6a80e659baf0b72ce7b96dd4eb" translate="yes" xml:space="preserve">
          <source>For information on how mouse wheel events are dispatched, see the class description for &lt;a href=&quot;mousewheelevent&quot;&gt;&lt;code&gt;MouseWheelEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">マウスホイールイベントのディスパッチ方法については、&lt;a href=&quot;mousewheelevent&quot;&gt; &lt;code&gt;MouseWheelEvent&lt;/code&gt; の&lt;/a&gt;クラスの説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="0cfabcb2d4ce1ff88f8b33c668fb5c06a02d8216" translate="yes" xml:space="preserve">
          <source>For information on how to create and deploy service providers, refer to the documentation on &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">サービスプロバイダーを作成およびデプロイする方法については、&lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1e77a1bf016a3e275018812830c53ab5dfce41c9" translate="yes" xml:space="preserve">
          <source>For information on the names, see startElement.</source>
          <target state="translated">名前に関する情報は startElement を参照してください。</target>
        </trans-unit>
        <trans-unit id="f05dee150a8a7141366a693983458a0d9ef32ff7" translate="yes" xml:space="preserve">
          <source>For information on the threading issues of the event dispatch machinery, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/AWTThreadIssues.html#Autoshutdown&quot;&gt;AWT Threading Issues&lt;/a&gt;.</source>
          <target state="translated">イベントディスパッチ機構のスレッドの問題については、&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/AWTThreadIssues.html#Autoshutdown&quot;&gt;AWTのスレッドの問題を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="311e3cf159bf4759d9af450775b9054c6a7f7561" translate="yes" xml:space="preserve">
          <source>For information on the threading issues of the event dispatch machinery, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/AWTThreadIssues.html#Autoshutdown&quot;&gt;AWT Threading Issues&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bca1a70b8a9d47b42d800fe5073e4db6547f559" translate="yes" xml:space="preserve">
          <source>For information on using data transfer with Swing, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt; How to Use Drag and Drop and Data Transfer&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;, for more information.</source>
          <target state="translated">Swingでのデータ転送の&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt;使用&lt;/a&gt;については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションの「ドラッグアンドドロップとデータ転送の使用方法」を参照してください。</target>
        </trans-unit>
        <trans-unit id="d1add2573ab1adf12bb7e6697260a8cdb349a6c6" translate="yes" xml:space="preserve">
          <source>For information on using data transfer with Swing, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt; How to Use Drag and Drop and Data Transfer&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;, for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ee7b0d0a82550013b02d59ffc3943a4f4f8f71" translate="yes" xml:space="preserve">
          <source>For input methods provided by host operating systems, it is not always possible to determine whether this operation is supported. For example, an input method may enable composition only for some locales, and do nothing for other locales. For such input methods, it is possible that this method does not throw &lt;a href=&quot;../../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;, but also does not affect whether composition is enabled.</source>
          <target state="translated">ホストオペレーティングシステムによって提供される入力方式の場合、この操作がサポートされているかどうかを常に判断できるとは限りません。たとえば、入力メソッドは、一部のロケールでのみ構成を有効にし、他のロケールでは何も実行しない場合があります。このような入力メソッドの場合、このメソッドが&lt;a href=&quot;../../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; を&lt;/a&gt;スローしない可能性がありますが、コンポジションが有効かどうかにも影響しません。</target>
        </trans-unit>
        <trans-unit id="9fbd613382fe235d1118481dbe11ae0114c491df" translate="yes" xml:space="preserve">
          <source>For input methods provided by host operating systems, it is not always possible to determine whether this operation is supported. For example, an input method may enable composition only for some locales, and do nothing for other locales. For such input methods, it is possible that this method does not throw &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;, but also does not affect whether composition is enabled.</source>
          <target state="translated">ホストオペレーティングシステムによって提供される入力方式の場合、この操作がサポートされているかどうかを常に判断できるとは限りません。たとえば、入力メソッドは、一部のロケールでのみ構成を有効にし、他のロケールでは何も実行しない場合があります。このような入力メソッドの場合、このメソッドが&lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; を&lt;/a&gt;スローしない可能性がありますが、コンポジションが有効かどうかにも影響しません。</target>
        </trans-unit>
        <trans-unit id="079a98af4118c7db3c6ea12ffe6be5c1b4f3db94" translate="yes" xml:space="preserve">
          <source>For inserts, the indexes represent the</source>
          <target state="translated">インサートの場合、インデックスは</target>
        </trans-unit>
        <trans-unit id="d82a0da809e48b52c3793077a5499e2f62e6d228" translate="yes" xml:space="preserve">
          <source>For instance eth0:1 will be a subinterface to eth0.</source>
          <target state="translated">例えば、eth0:1はeth0のサブインターフェイスになります。</target>
        </trans-unit>
        <trans-unit id="22e4d1bfbba0c0574d67f23e7853a569a58881c5" translate="yes" xml:space="preserve">
          <source>For instance, consider the following struct declaration in C:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef404ebc66421af26a36682a8560469fc8a566c" translate="yes" xml:space="preserve">
          <source>For instance, given a sequence layout of the kind:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b679074e1f9aaff9fab194a3eb3eb1d920c34d0" translate="yes" xml:space="preserve">
          <source>For instance, if a vendor named Fred, Inc. offered a &lt;code&gt;SyncProvider&lt;/code&gt; implementation, you could have the following:</source>
          <target state="translated">たとえば、Fred、Inc。という名前のベンダーが &lt;code&gt;SyncProvider&lt;/code&gt; 実装を提供した場合、次のようになります。</target>
        </trans-unit>
        <trans-unit id="f799caef16ddd4d32fdd7fb7fb732b6b99f8fe9f" translate="yes" xml:space="preserve">
          <source>For instance, in order to configure plain instances of XMLFormatter to omit the new &lt;code&gt;&amp;lt;nano&amp;gt;&lt;/code&gt; element, &lt;code&gt;java.util.logging.XMLFormatter.useInstant = false&lt;/code&gt; can be specified in the logging configuration.</source>
          <target state="translated">たとえば、XMLFormatterのプレーンインスタンスを構成して新しい &lt;code&gt;&amp;lt;nano&amp;gt;&lt;/code&gt; 要素を省略するには、ロギング構成で &lt;code&gt;java.util.logging.XMLFormatter.useInstant = false&lt;/code&gt; を指定できます。</target>
        </trans-unit>
        <trans-unit id="70234272a3b0d056278aecef0730ed49132b14a6" translate="yes" xml:space="preserve">
          <source>For instance, in the above example calling &lt;code&gt;replaceWholeText&lt;/code&gt; on the &lt;code&gt;Text&lt;/code&gt; node that contains &quot;bar&quot; with &quot;yo&quot; in argument results in the following:</source>
          <target state="translated">たとえば、上記の例では、引数に「bar」と「yo」を含む &lt;code&gt;Text&lt;/code&gt; ノードで &lt;code&gt;replaceWholeText&lt;/code&gt; を呼び出すと、次のようになります。</target>
        </trans-unit>
        <trans-unit id="eac033dcc4f324e4af48e46ba5cfcda47230874d" translate="yes" xml:space="preserve">
          <source>For instance, in the example below &lt;code&gt;wholeText&lt;/code&gt; on the &lt;code&gt;Text&lt;/code&gt; node that contains &quot;bar&quot; returns &quot;barfoo&quot;, while on the &lt;code&gt;Text&lt;/code&gt; node that contains &quot;foo&quot; it returns &quot;barfoo&quot;.</source>
          <target state="translated">例えば、実施例において以下 &lt;code&gt;wholeText&lt;/code&gt; 上の &lt;code&gt;Text&lt;/code&gt; にしながら、「バー」戻り「barfoo」を含むノード &lt;code&gt;Text&lt;/code&gt; 「foo」を含むノードが「barfoo」を返します。</target>
        </trans-unit>
        <trans-unit id="ffee8bd9056a2b45a907b0b3baabeded0bf3eea4" translate="yes" xml:space="preserve">
          <source>For instance, in the example below calling &lt;code&gt;replaceWholeText&lt;/code&gt; on the &lt;code&gt;Text&lt;/code&gt; node that contains &quot;bar&quot; fails, because the &lt;code&gt;EntityReference&lt;/code&gt; node &quot;ent&quot; contains an &lt;code&gt;Element&lt;/code&gt; node which cannot be removed.</source>
          <target state="translated">たとえば、以下の例では、 &lt;code&gt;EntityReference&lt;/code&gt; ノード「ent」に削除できない &lt;code&gt;Element&lt;/code&gt; ノードが含まれているため、「bar」を含む &lt;code&gt;Text&lt;/code&gt; ノードで &lt;code&gt;replaceWholeText&lt;/code&gt; を呼び出すと失敗します。</target>
        </trans-unit>
        <trans-unit id="c1496abd7300063ad9deaa506cbc8b1f4d0ce10e" translate="yes" xml:space="preserve">
          <source>For instanceof with a pattern, i.e. in the following form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a512596becc85c896f6e223cb9d257c4363540" translate="yes" xml:space="preserve">
          <source>For instanceof without a pattern, i.e. in the following form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a692e5bb2f1b4f5bf2ce0c8822cf89de2eecf4" translate="yes" xml:space="preserve">
          <source>For instances with unsigned sample values, the unnormalized color/alpha component representation is only supported if two conditions hold. First, sample value 0 must map to normalized component value 0.0 and sample value 2&lt;sup&gt;n&lt;/sup&gt; - 1 to 1.0. Second the min/max range of all color components of the &lt;code&gt;ColorSpace&lt;/code&gt; must be 0.0 to 1.0. In this case, the component representation is the n least significant bits of the corresponding sample. Thus each component is an unsigned integral value between 0 and 2&lt;sup&gt;n&lt;/sup&gt; - 1, where n is the number of significant bits for a particular component. If these conditions are not met, any method taking an unnormalized component argument will throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">符号なしのサンプル値を持つインスタンスの場合、正規化されていないカラー/アルファコンポーネント表現は、2つの条件が当てはまる場合にのみサポートされます。まず、サンプル値0は、正規化されたコンポーネント値0.0およびサンプル値2 &lt;sup&gt;n&lt;/sup&gt; -1から1.0にマップする必要があります。次に、 &lt;code&gt;ColorSpace&lt;/code&gt; のすべての色成分の最小/最大範囲は0.0から1.0でなければなりません。この場合、コンポーネント表現は、対応するサンプルの最下位nビットです。したがって、各コンポーネントは0〜2 &lt;sup&gt;n&lt;/sup&gt; -1の符号なし整数値です。ここで、nは特定のコンポーネントの有効ビット数です。これらの条件が満たされない場合、正規化されていないコンポーネント引数をとるメソッドは、 &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="719fe421d98202b344f227f4d64df21fe27399aa" translate="yes" xml:space="preserve">
          <source>For key pressed and key released events, the getKeyCode method returns the event's keyCode. For key typed events, the getKeyCode method always returns &lt;code&gt;VK_UNDEFINED&lt;/code&gt;. The &lt;code&gt;getExtendedKeyCode&lt;/code&gt; method may also be used with many international keyboard layouts.</source>
          <target state="translated">キーが押されたイベントとキーが解放されたイベントの場合、getKeyCodeメソッドはイベントのkeyCodeを返します。キータイプのイベントの場合、getKeyCodeメソッドは常に &lt;code&gt;VK_UNDEFINED&lt;/code&gt; を返します。 &lt;code&gt;getExtendedKeyCode&lt;/code&gt; の方法はまた、多くの国際的なキーボードレイアウトを使用することができます。</target>
        </trans-unit>
        <trans-unit id="54bf9c03f8ae4c844a7fb836b024adb6eeab7bd2" translate="yes" xml:space="preserve">
          <source>For keyboard events, &lt;a href=&quot;#key&quot;&gt;&lt;code&gt;key&lt;/code&gt;&lt;/a&gt; contains a value indicating which key was activated, and &lt;a href=&quot;#modifiers&quot;&gt;&lt;code&gt;modifiers&lt;/code&gt;&lt;/a&gt; contains the modifiers for that event. For the KEY_PRESS and KEY_RELEASE event ids, the value of &lt;code&gt;key&lt;/code&gt; is the unicode character code for the key. For KEY_ACTION and KEY_ACTION_RELEASE, the value of &lt;code&gt;key&lt;/code&gt; is one of the defined action-key identifiers in the &lt;code&gt;Event&lt;/code&gt; class (&lt;code&gt;PGUP&lt;/code&gt;, &lt;code&gt;PGDN&lt;/code&gt;, &lt;code&gt;F1&lt;/code&gt;, &lt;code&gt;F2&lt;/code&gt;, etc).</source>
          <target state="translated">キーボードイベントの場合、&lt;a href=&quot;#key&quot;&gt; &lt;code&gt;key&lt;/code&gt; &lt;/a&gt;にはアクティブ化されたキーを示す値が含まれ、modifiersにはそのイベントの修飾&lt;a href=&quot;#modifiers&quot;&gt; &lt;code&gt;modifiers&lt;/code&gt; &lt;/a&gt;が含まれます。KEY_PRESSおよびKEY_RELEASEイベントIDの場合、 &lt;code&gt;key&lt;/code&gt; の値はキーのUnicode文字コードです。KEY_ACTIONおよびKEY_ACTION_RELEASEの場合、 &lt;code&gt;key&lt;/code&gt; の値は、 &lt;code&gt;Event&lt;/code&gt; クラス（ &lt;code&gt;PGUP&lt;/code&gt; 、 &lt;code&gt;PGDN&lt;/code&gt; 、 &lt;code&gt;F1&lt;/code&gt; 、 &lt;code&gt;F2&lt;/code&gt; など）で定義されたアクションキー識別子の1つです。</target>
        </trans-unit>
        <trans-unit id="4f376632644072537f9164c8002757250815e1ed" translate="yes" xml:space="preserve">
          <source>For left to right orientations, the size is determined from the current AbstractLayoutCache. For RTL orientations, the preferred size becomes the width minus the minimum x position.</source>
          <target state="translated">左から右への向きの場合、サイズは現在のAbstractLayoutCacheから決定されます。RTL方向の場合、推奨されるサイズは、幅から最小のx位置を引いた値になります。</target>
        </trans-unit>
        <trans-unit id="da9058e03b6adc44700d838fbdd67dfe65cb75f3" translate="yes" xml:space="preserve">
          <source>For maximum portability, a call's &lt;code&gt;ResultSet&lt;/code&gt; objects and update counts should be processed prior to getting the values of output parameters.</source>
          <target state="translated">移植性を最大化するには、出力パラメーターの値を取得する前に、呼び出しの &lt;code&gt;ResultSet&lt;/code&gt; オブジェクトと更新カウントを処理する必要があります。</target>
        </trans-unit>
        <trans-unit id="39b24e3909cb8f16d11a9b4e3cf43043aff83dc4" translate="yes" xml:space="preserve">
          <source>For messages being sent &lt;code&gt;true&lt;/code&gt; indicates that the message is complete, &lt;code&gt;false&lt;/code&gt; indicates that the message is not complete. How the send channel interprets this value depends on the value of its &lt;a href=&quot;sctpstandardsocketoptions#SCTP_EXPLICIT_COMPLETE&quot;&gt;&lt;code&gt;SCTP_EXPLICIT_COMPLETE&lt;/code&gt;&lt;/a&gt; socket option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09cc51be0ad57f631b9b037d5a5c1ec3cc09b637" translate="yes" xml:space="preserve">
          <source>For method and constructor parameters, the name of each parameter must be distinct from the names of all other parameters of the same executable. If the original source names are not available, an implementation may synthesize names subject to the distinctness requirement above.</source>
          <target state="translated">メソッドとコンストラクタのパラメータについては、各パラメータの名前は、同じ実行ファイルの他のすべてのパラメータの名前とは区別されていなければなりません。元のソース名が利用できない場合、実装は上記の明確性の要件を満たす名前を合成することができます。</target>
        </trans-unit>
        <trans-unit id="7aa481bebd670386bf813c89465c530eee7a4d3e" translate="yes" xml:space="preserve">
          <source>For methods that can throw &lt;a href=&quot;instancenotfoundexception&quot;&gt;&lt;code&gt;InstanceNotFoundException&lt;/code&gt;&lt;/a&gt;, this exception is thrown for a non-existent MBean, regardless of permissions. This is because a non-existent MBean has no &lt;code&gt;className&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;instancenotfoundexception&quot;&gt; &lt;code&gt;InstanceNotFoundException&lt;/code&gt; &lt;/a&gt;をスローできるメソッドの場合、この例外は、権限に関係なく、存在しないMBeanに対してスローされます。これは、存在しないMBeanに &lt;code&gt;className&lt;/code&gt; がないためです。</target>
        </trans-unit>
        <trans-unit id="76774b41448928d2dea1d49da68288f4b72f5eb8" translate="yes" xml:space="preserve">
          <source>For methods that return a textual representation as output value, the first form, i.e. a dotted-quad string, is used.</source>
          <target state="translated">出力値としてテキスト表現を返すメソッドでは、最初の形式、つまりドットクォード文字列が使用されます。</target>
        </trans-unit>
        <trans-unit id="bf7ab1ce5e7d929aee2f17a0a3acfac53a1554a0" translate="yes" xml:space="preserve">
          <source>For methods that return a textual representation as output value, the full form is used. Inet6Address will return the full form because it is unambiguous when used in combination with other textual data.</source>
          <target state="translated">出力値としてテキスト表現を返すメソッドでは、完全な形式が使用されます。Inet6Addressは、他のテキストデータと組み合わせて使用すると曖昧さがなくなるため、完全な形式を返します。</target>
        </trans-unit>
        <trans-unit id="8f24aa23e5872e59ccfbd9ed068b2210966f6b77" translate="yes" xml:space="preserve">
          <source>For more details on declaring service providers, and the JAR format in general, see the  JAR File Specification.</source>
          <target state="translated">サービスプロバイダの宣言や JAR フォーマットの一般的な詳細については、JAR ファイル仕様書を参照してください。</target>
        </trans-unit>
        <trans-unit id="643a9476ed6ecbe548cc662cd1b19fe7604623bf" translate="yes" xml:space="preserve">
          <source>For more details on declaring service providers, and the JAR format in general, see the &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/jar/jar.html&quot;&gt; JAR File Specification&lt;/a&gt;.</source>
          <target state="translated">サービスプロバイダーの宣言、および一般的なJAR形式の詳細については、「&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/jar/jar.html&quot;&gt;JARファイル仕様&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="ae8a4f018bd5638b094a31e219c904b99c0f2995" translate="yes" xml:space="preserve">
          <source>For more developer information on how to use these interfaces, including information on how to design &lt;code&gt;Key&lt;/code&gt; classes for hardware devices, please refer to the cryptographic provider developer guide:</source>
          <target state="translated">ハードウェアデバイスの &lt;code&gt;Key&lt;/code&gt; クラスの設計方法など、これらのインターフェイスの使用方法に関する開発者情報については、暗号化プロバイダー開発者ガイドを参照してください。</target>
        </trans-unit>
        <trans-unit id="81e3cc80113990862f7e618b47a2e12565303132" translate="yes" xml:space="preserve">
          <source>For more developer information on how to use these interfaces, including information on how to design &lt;code&gt;Key&lt;/code&gt; classes for hardware devices, please refer to these cryptographic provider developer guides:</source>
          <target state="translated">ハードウェアデバイスの &lt;code&gt;Key&lt;/code&gt; クラスの設計方法など、これらのインターフェイスの使用方法に関する開発者情報については、次の暗号化プロバイダー開発者ガイドを参照してください。</target>
        </trans-unit>
        <trans-unit id="7d9204267faf9117d206239d345f2c3370d63bca" translate="yes" xml:space="preserve">
          <source>For more flexible initialization, please see &lt;a href=&quot;#init(javax.net.ssl.ManagerFactoryParameters)&quot;&gt;&lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">より柔軟な初期化については、&lt;a href=&quot;#init(javax.net.ssl.ManagerFactoryParameters)&quot;&gt; &lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b9fda7de9da51760582b2ea855ba85a39fd18514" translate="yes" xml:space="preserve">
          <source>For more flexible initialization, please see &lt;a href=&quot;keymanagerfactory#init-javax.net.ssl.ManagerFactoryParameters-&quot;&gt;&lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">より柔軟な初期化については、&lt;a href=&quot;keymanagerfactory#init-javax.net.ssl.ManagerFactoryParameters-&quot;&gt; &lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ff1200e59956243f9672ac2eced7edb97e653f86" translate="yes" xml:space="preserve">
          <source>For more flexible initialization, please see &lt;a href=&quot;trustmanagerfactory#init-javax.net.ssl.ManagerFactoryParameters-&quot;&gt;&lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">より柔軟な初期化については、&lt;a href=&quot;trustmanagerfactory#init-javax.net.ssl.ManagerFactoryParameters-&quot;&gt; &lt;code&gt;init(ManagerFactoryParameters)&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5fd06cc6e7479451e3716a9760936425212c4e1f" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;SecurityManager&lt;/code&gt; changes made in the JDK and advice regarding porting of 1.1-style security managers, see the security documentation.</source>
          <target state="translated">JDKで行われた &lt;code&gt;SecurityManager&lt;/code&gt; の変更の詳細と、1.1スタイルのセキュリティマネージャーの移植に関するアドバイスについては、セキュリティのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="a08a4a16ece0e8c8fdf593bd2a70e2beea2d6bca" translate="yes" xml:space="preserve">
          <source>For more information about introspection and design patterns, please consult the &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html&quot;&gt;JavaBeans specification&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b48c85d76a708f58e3b1d3720fdc1490243108d" translate="yes" xml:space="preserve">
          <source>For more information about introspection and design patterns, please consult the &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html&quot;&gt;JavaBeans&amp;trade; specification&lt;/a&gt;.</source>
          <target state="translated">イントロスペクションとデザインパターンの詳細については、&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html&quot;&gt;JavaBeans&amp;trade;仕様&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e826a923d21ca0ae7f2bc333eae1ef3ba5d5d1d0" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the built-in JPEG plug-ins, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG metadata format specification and usage notes&lt;/a&gt;.</source>
          <target state="translated">組み込みのJPEGプラグインの操作の詳細については、&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEGメタデータ形式の仕様と使用上の注意を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1b27d702c47799618b4c6eee0d51e8df10dff887" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the built-in JPEG plug-ins, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG metadata format specification and usage notes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a99e9d7949612b1e41eea534d474e4c6c23dbb" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the built-in JPEG plug-ins, see the JPEG metadata format specification and usage notes.</source>
          <target state="translated">内蔵JPEGプラグインの動作の詳細については、JPEGメタデータフォーマットの仕様と使用上の注意を参照してください。</target>
        </trans-unit>
        <trans-unit id="ca7cab63f922f3f1dbb72be8cb139b2c682dc7a6" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the standard JPEG plug-in, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG metadata format specification and usage notes&lt;/a&gt;</source>
          <target state="translated">標準のJPEGプラグインの操作の詳細については、&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEGメタデータ形式の仕様と使用上の注意を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="96ef9df10914781567843d85e087f208994e6385" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the standard JPEG plug-in, see the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/jpeg_metadata.html&quot;&gt;JPEG metadata format specification and usage notes&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3811c966c9c719a30361e2707e6b04cc1227e5b" translate="yes" xml:space="preserve">
          <source>For more information about the operation of the standard JPEG plug-in, see the JPEG metadata format specification and usage notes</source>
          <target state="translated">標準JPEGプラグインの動作の詳細については、JPEGメタデータフォーマットの仕様と使用上の注意を参照してください。</target>
        </trans-unit>
        <trans-unit id="a7874053f8215f8f069529c92d7fce008faba07b" translate="yes" xml:space="preserve">
          <source>For more information about using resource bundles with the XMLEncoder, see &lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence4-140124.html#i18n&quot;&gt; Creating Internationalized Applications&lt;/a&gt;,</source>
          <target state="translated">XMLEncoderでのリソースバンドルの使用の詳細については、「&lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence4-140124.html#i18n&quot;&gt;国際化されたアプリケーションの作成」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bf4eb80e08fdbf7afe2002f9657ceb53a408645b" translate="yes" xml:space="preserve">
          <source>For more information about using resource bundles with the XMLEncoder, see http://java.sun.com/products/jfc/tsc/articles/persistence4/#i18n</source>
          <target state="translated">XMLEncoder でのリソースバンドルの使用についての詳細は http://java.sun.com/products/jfc/tsc/articles/persistence4/#i18n を参照してください。</target>
        </trans-unit>
        <trans-unit id="b0eebce63cb322ab248193b87a12e8c1789a810f" translate="yes" xml:space="preserve">
          <source>For more information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">詳細と例については&lt;em&gt;、Javaチュートリアルの&lt;/em&gt;セクションである&lt;em&gt;「&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;メニューの使用方法」を&lt;/a&gt;参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="333b90c344c7e7f4a6d48007bd9d8179f7d1f61a" translate="yes" xml:space="preserve">
          <source>For more information and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/menu.html&quot;&gt;How to Use Menus&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578e9a2249248ae3a0b9437101f71f2e9428f7e5" translate="yes" xml:space="preserve">
          <source>For more information including algorithms used to create &lt;code&gt;UUID&lt;/code&gt;s, see &lt;a href=&quot;http://www.ietf.org/rfc/rfc4122.txt&quot;&gt; &lt;i&gt;RFC 4122: A Universally Unique IDentifier (UUID) URN Namespace&lt;/i&gt;&lt;/a&gt;, section 4.2 &quot;Algorithms for Creating a Time-Based UUID&quot;.</source>
          <target state="translated">&lt;code&gt;UUID&lt;/code&gt; を作成するために使用されるアルゴリズムを含む詳細については、&lt;a href=&quot;http://www.ietf.org/rfc/rfc4122.txt&quot;&gt;&lt;i&gt;RFC 4122：A Universally Unique IDentifier（UUID）URN Namespace&lt;/i&gt;&lt;/a&gt;、セクション4.2「Algorithms for Creating a Time-Based UUID」を参照してください。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="ba8b1407dfbd73a80e0f18eb4cfbef2b392c96ad" translate="yes" xml:space="preserve">
          <source>For more information including algorithms used to create &lt;code&gt;UUID&lt;/code&gt;s, see &lt;a href=&quot;https://www.ietf.org/rfc/rfc4122.txt&quot;&gt; &lt;i&gt;RFC 4122: A Universally Unique IDentifier (UUID) URN Namespace&lt;/i&gt;&lt;/a&gt;, section 4.2 &quot;Algorithms for Creating a Time-Based UUID&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24cf73d2cec75865fec392cca4fce7bcf51ce26c" translate="yes" xml:space="preserve">
          <source>For more information on TrueType and OpenType fonts, see the OpenType specification. ( &lt;a href=&quot;http://www.microsoft.com/typography/otspec/&quot;&gt;http://www.microsoft.com/typography/otspec/&lt;/a&gt; ).</source>
          <target state="translated">TrueTypeおよびOpenTypeフォントの詳細については、OpenType仕様を参照してください。（&lt;a href=&quot;http://www.microsoft.com/typography/otspec/&quot;&gt;http://www.microsoft.com/typography/otspec/&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="186debb813d7076cd6849988823d3a2f569c02f8" translate="yes" xml:space="preserve">
          <source>For more information on TrueType and OpenType fonts, see the OpenType specification. ( &lt;a href=&quot;https://www.microsoft.com/typography/otspec/&quot;&gt;http://www.microsoft.com/typography/otspec/&lt;/a&gt; ).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd0deee19a74716ce69b0928bbf21dc4e66a7ed" translate="yes" xml:space="preserve">
          <source>For more information on content panes and other features that root panes provide, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/toplevel.html&quot;&gt;Using Top-Level Containers&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">ルートペインが提供するコンテンツペインおよびその他の機能の詳細については、&lt;em&gt;「Javaチュートリアルの&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/toplevel.html&quot;&gt;トップレベルコンテナの使用&lt;/a&gt;」を参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c7b1c7fe5f49ca613b002d2dff163fa45d746698" translate="yes" xml:space="preserve">
          <source>For more information on content panes and other features that root panes provide, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/toplevel.html&quot;&gt;Using Top-Level Containers&lt;/a&gt; in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4824abf981bf81ee2ff53f62ff7bb011062e10ef" translate="yes" xml:space="preserve">
          <source>For more information on full-screen exclusive mode API, see the &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/extra/fullscreen/index.html&quot;&gt; Full-Screen Exclusive Mode API Tutorial&lt;/a&gt;.</source>
          <target state="translated">フルスクリーン排他モードAPIの詳細については、&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/extra/fullscreen/index.html&quot;&gt;フルスクリーン排他モードAPIチュートリアルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9b8786ac4d9337c8262f5f808fc7b6268f93a62f" translate="yes" xml:space="preserve">
          <source>For more information on full-screen exclusive mode API, see the &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/extra/fullscreen/index.html&quot;&gt; Full-Screen Exclusive Mode API Tutorial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9157dadc80922a9a5d11e1c0eb4437fd9bd802bf" translate="yes" xml:space="preserve">
          <source>For more information on the &lt;code&gt;Document&lt;/code&gt; class, see &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/tech/articles-jsp-139072.html&quot;&gt;The Swing Connection&lt;/a&gt; and most particularly the article, &lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/text/element_interface&quot;&gt; The Element Interface&lt;/a&gt;.</source>
          <target state="translated">詳細については &lt;code&gt;Document&lt;/code&gt; クラスを参照してください&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/tech/articles-jsp-139072.html&quot;&gt;Swingの接続&lt;/a&gt;と最も特に記事、&lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/text/element_interface&quot;&gt;要素インタフェース&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="33759175457013b2e6d7889bccdc9919f7498bcf" translate="yes" xml:space="preserve">
          <source>For more information on the user space coordinate system and the rendering process, see the &lt;code&gt;Graphics2D&lt;/code&gt; class comments.</source>
          <target state="translated">ユーザー空間の座標系とレンダリングプロセスの詳細については、 &lt;code&gt;Graphics2D&lt;/code&gt; クラスのコメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="9065a8abeebf95664c0a281aa11db9e70161c3c6" translate="yes" xml:space="preserve">
          <source>For more information on these subjects, see the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;Swing package description&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;The Java Tutorial&lt;/em&gt; section &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/jcomponent.html&quot;&gt;The JComponent Class&lt;/a&gt;.</source>
          <target state="translated">これらの主題の詳細については、&lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;Swing package description&lt;/code&gt; &lt;/a&gt;および&lt;em&gt;Javaチュートリアル&lt;/em&gt;セクション&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/jcomponent.html&quot;&gt;のJComponentクラスを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4330b0d94b0d0326bd2e928bf7934b24637e0567" translate="yes" xml:space="preserve">
          <source>For more information on these subjects, see the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;Swing package description&lt;/code&gt;&lt;/a&gt; and &lt;em&gt;The Java Tutorial&lt;/em&gt; section &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/jcomponent.html&quot;&gt;The JComponent Class&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e77e85d84c97791f93f22cb3eeb63334102c0bd" translate="yes" xml:space="preserve">
          <source>For more information on this topic, see section 14.2, &quot;Condition Queues,&quot; in Brian Goetz and others' &lt;em&gt;Java Concurrency in Practice&lt;/em&gt; (Addison-Wesley, 2006) or Item 69 in Joshua Bloch's &lt;em&gt;Effective Java, Second Edition&lt;/em&gt; (Addison-Wesley, 2008).</source>
          <target state="translated">このトピックの詳細については、Brian Goetzおよびその他の&lt;em&gt;JavaConcurrency in Practice&lt;/em&gt;（Addison-Wesley、2006）のセクション14.2「ConditionQueues」またはJoshuaBlochの&lt;em&gt;EffectiveJava、Second Edition&lt;/em&gt;（Addison-Wesley、2008 ）のアイテム69を参照してください。）。</target>
        </trans-unit>
        <trans-unit id="fd6df08100fcb4e0392469e47d0f1c198809b889" translate="yes" xml:space="preserve">
          <source>For more information on using Java Sound see:</source>
          <target state="translated">Java Soundの使用方法の詳細については、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="a3c227b2aee29a2d9a82f7e55ab6f087bec84d33" translate="yes" xml:space="preserve">
          <source>For more information on using data transfer with Swing see the &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt;How to Use Drag and Drop and Data Transfer&lt;/a&gt;, section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">Swingでのデータ転送の&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt;使用の&lt;/a&gt;詳細については、&lt;em&gt;Javaチュートリアルの&lt;/em&gt;セクション「ドラッグアンドドロップとデータ転送の使用方法」を参照してください。</target>
        </trans-unit>
        <trans-unit id="339ba2cc5acac3af981e48e6807e7c854f380ff6" translate="yes" xml:space="preserve">
          <source>For more information on using data transfer with Swing see the &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/dnd/index.html&quot;&gt;How to Use Drag and Drop and Data Transfer&lt;/a&gt;, section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924cf796f95fe65f04f10759d8ebc0d0480f1be0" translate="yes" xml:space="preserve">
          <source>For more information on what expanded state means, see the &lt;a href=&quot;jtree&quot;&gt;&lt;code&gt;JTree description&lt;/code&gt;&lt;/a&gt; above.</source>
          <target state="translated">拡張状態の意味の詳細については、上記の&lt;a href=&quot;jtree&quot;&gt; &lt;code&gt;JTree description&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="aa58ed474d6ceaf5b1697038f1320fe3f16736ac" translate="yes" xml:space="preserve">
          <source>For more information you might also want to check out &lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/persistence3&quot;&gt;Long Term Persistence of JavaBeans Components: XML Schema&lt;/a&gt;, an article in &lt;em&gt;The Swing Connection.&lt;/em&gt;</source>
          <target state="translated">詳細については、&lt;em&gt;The Swing Connectionの&lt;/em&gt;記事「&lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/persistence3&quot;&gt;JavaBeansコンポーネントの長期的な永続性：XMLスキーマ&lt;/a&gt;」も参照してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="beed59bdd4e48ec33361f1a310f9787e27db5082" translate="yes" xml:space="preserve">
          <source>For more information you might also want to check out &lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/persistence4&quot;&gt;Using XMLEncoder&lt;/a&gt;, an article in &lt;em&gt;The Swing Connection.&lt;/em&gt;</source>
          <target state="translated">詳細については、&lt;em&gt;The Swing Connectionの&lt;/em&gt;記事「&lt;a href=&quot;http://java.sun.com/products/jfc/tsc/articles/persistence4&quot;&gt;XMLEncoderの使用&lt;/a&gt;」もご覧ください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fdd77c4acf8523af4881e0ec52f0a004e43c75d8" translate="yes" xml:space="preserve">
          <source>For more information you might also want to check out &lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence3-139471.html&quot;&gt; Long Term Persistence of JavaBeans Components: XML Schema&lt;/a&gt;, an article in &lt;em&gt;The Swing Connection.&lt;/em&gt;</source>
          <target state="translated">詳細については、&lt;em&gt;The Swing Connectionの&lt;/em&gt;記事「&lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence3-139471.html&quot;&gt;JavaBeansコンポーネントの長期永続性：XMLスキーマ&lt;/a&gt;」も確認してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ee1df522655b7bbb3e3266971a02cdfe17d684cf" translate="yes" xml:space="preserve">
          <source>For more information you might also want to check out &lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence4-140124.html&quot;&gt; Using XMLEncoder&lt;/a&gt;, an article in &lt;em&gt;The Swing Connection.&lt;/em&gt;</source>
          <target state="translated">詳細については、&lt;em&gt;The &lt;/em&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/persistence4-140124.html&quot;&gt;SwingConnection&lt;/a&gt;の記事である&lt;em&gt;「&lt;/em&gt;UsingXMLEncoder」も確認してください&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e3a8126f411e59d515eedaa4745571aeed4e1e7" translate="yes" xml:space="preserve">
          <source>For more information, refer to Java Plug-In's guides,  Applet Security Basics and  usePolicy Permission.</source>
          <target state="translated">詳細については、Java プラグインのガイド、アプレットセキュリティの基本、および usePolicy Permission を参照してください。</target>
        </trans-unit>
        <trans-unit id="566805fa6faf03baabb71ea15c05e3b1b5d50ffa" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html#transferTiming&quot;&gt;Timing Focus Transfers&lt;/a&gt;, a section in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/&quot;&gt;The Swing Tutorial&lt;/a&gt;.</source>
          <target state="translated">詳細については&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/&quot;&gt;、Swingチュートリアルの&lt;/a&gt;セクションである&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html#transferTiming&quot;&gt;Timing FocusTransfersを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9adb545b1df02cb7b81e0401d795a177674ce56e" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;http://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280：インターネットX.509公開鍵インフラストラクチャ証明書およびCRLプロファイルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="635ee25f145a41ce7f17a98821b60a12cf6621b7" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;RFC 3280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;http://www.ietf.org/rfc/rfc3280.txt&quot;&gt;RFC 3280：Internet X.509 Public Key Infrastructure Certificate and CRL Profileを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fe462f8fbe2a4fc311617d213131726523dbae66" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt; Using the Multiplexing Look and Feel.&lt;/a&gt;</source>
          <target state="translated">詳細について&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt;は、多重化ルックアンドフィールの使用を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4db738fec2e273a4c05f6d3a516c4b48630b7b9c" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/multi/doc-files/multi_tsc.html&quot;&gt; Using the Multiplexing Look and Feel.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6105a854c78a15fe859d0c64ad2b9b3c51aa441e" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/focus.html#transferTiming&quot;&gt;Timing Focus Transfers&lt;/a&gt;, a section in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/&quot;&gt;The Swing Tutorial&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6515e5d0818b09f399d3348c9c6741ab773e04fc" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;a href=&quot;https://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280: Internet X.509 Public Key Infrastructure Certificate and CRL Profile&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe9cc110a33a9ed5dac1d410fccea21446d9ecc" translate="yes" xml:space="preserve">
          <source>For more sophisticated patterns, you can use a &lt;code&gt;ChoiceFormat&lt;/code&gt; to produce correct forms for singular and plural:</source>
          <target state="translated">より洗練されたパターンの場合、 &lt;code&gt;ChoiceFormat&lt;/code&gt; を使用して、単数形と複数形の正しい形式を生成できます。</target>
        </trans-unit>
        <trans-unit id="f2abe7e06ae2851d23daf12e439ccac89684d3e2" translate="yes" xml:space="preserve">
          <source>For more specialized uses, a connector client can be created by directly instantiating a class that implements the &lt;a href=&quot;jmxconnector&quot;&gt;&lt;code&gt;JMXConnector&lt;/code&gt;&lt;/a&gt; interface, for example the class &lt;a href=&quot;../../../../java.management.rmi/javax/management/remote/rmi/rmiconnector&quot;&gt;&lt;code&gt;RMIConnector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">より特殊な用途では、&lt;a href=&quot;jmxconnector&quot;&gt; &lt;code&gt;JMXConnector&lt;/code&gt; &lt;/a&gt;インターフェイスを実装するクラス（クラス&lt;a href=&quot;../../../../java.management.rmi/javax/management/remote/rmi/rmiconnector&quot;&gt; &lt;code&gt;RMIConnector&lt;/code&gt; &lt;/a&gt;など）を直接インスタンス化することにより、コネクタクライアントを作成できます。</target>
        </trans-unit>
        <trans-unit id="1d899f3432679880d6489926be6b9f61a595cb6d" translate="yes" xml:space="preserve">
          <source>For more specialized uses, a connector client can be created by directly instantiating a class that implements the &lt;a href=&quot;jmxconnector&quot;&gt;&lt;code&gt;JMXConnector&lt;/code&gt;&lt;/a&gt; interface, for example the class &lt;a href=&quot;rmi/rmiconnector&quot;&gt;&lt;code&gt;RMIConnector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">より特殊な用途では、&lt;a href=&quot;jmxconnector&quot;&gt; &lt;code&gt;JMXConnector&lt;/code&gt; &lt;/a&gt;インターフェースを実装するクラス（例：&lt;a href=&quot;rmi/rmiconnector&quot;&gt; &lt;code&gt;RMIConnector&lt;/code&gt; &lt;/a&gt;クラス）を直接インスタンス化することにより、コネクタークライアントを作成できます。</target>
        </trans-unit>
        <trans-unit id="63abd7908da19a58e133fd6971c8f4d3dfa821bd" translate="yes" xml:space="preserve">
          <source>For most operating systems, mapping a file into memory is more expensive than reading or writing a few tens of kilobytes of data via the usual &lt;a href=&quot;#read(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods. From the standpoint of performance it is generally only worth mapping relatively large files into memory.</source>
          <target state="translated">ほとんどのオペレーティングシステムでは、ファイルをメモリにマッピングする方が、通常の&lt;a href=&quot;#read(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;方法で数十キロバイトのデータを読み書きするよりもコストがかかります。パフォーマンスの観点からは、通常、比較的大きなファイルをメモリにマッピングするだけの価値があります。</target>
        </trans-unit>
        <trans-unit id="e257e80e52e23bb1f5097e9f135dc6baef407e33" translate="yes" xml:space="preserve">
          <source>For most operating systems, mapping a file into memory is more expensive than reading or writing a few tens of kilobytes of data via the usual &lt;a href=&quot;filechannel#read-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;filechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods. From the standpoint of performance it is generally only worth mapping relatively large files into memory.</source>
          <target state="translated">ほとんどのオペレーティングシステムでは、ファイルをメモリにマッピングする方が、通常の&lt;a href=&quot;filechannel#read-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;filechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;方法で数十キロバイトのデータを読み書きするよりもコストがかかります。パフォーマンスの観点からは、比較的大きなファイルをメモリにマッピングするだけの価値があります。</target>
        </trans-unit>
        <trans-unit id="b8d47aef9dfdaffead563198406171ed3ff9a633" translate="yes" xml:space="preserve">
          <source>For most readers, which only accept input from an &lt;code&gt;ImageInputStream&lt;/code&gt;, a single-element array containing &lt;code&gt;ImageInputStream.class&lt;/code&gt; should be returned.</source>
          <target state="translated">&lt;code&gt;ImageInputStream&lt;/code&gt; からの入力のみを受け入れるほとんどのリーダーの場合、ImageInputStream.classを含む単一要素の配列を &lt;code&gt;ImageInputStream.class&lt;/code&gt; 必要があります。</target>
        </trans-unit>
        <trans-unit id="0737e1146c46eaedda574254b184a05ef178c0d8" translate="yes" xml:space="preserve">
          <source>For most writers, which only output to an &lt;code&gt;ImageOutputStream&lt;/code&gt;, a single-element array containing &lt;code&gt;ImageOutputStream.class&lt;/code&gt; should be returned.</source>
          <target state="translated">&lt;code&gt;ImageOutputStream&lt;/code&gt; にのみ出力するほとんどのライターでは、ImageOutputStream.classを含む単一要素の配列を &lt;code&gt;ImageOutputStream.class&lt;/code&gt; 必要があります。</target>
        </trans-unit>
        <trans-unit id="d93e5b1bff26af04219f8bdd441a9eafbac77a05" translate="yes" xml:space="preserve">
          <source>For multiple-selection scrolling lists, it is considered a better user interface to use an external gesture (such as clicking on a button) to trigger the action.</source>
          <target state="translated">複数選択スクロールリストの場合、アクションのトリガーに外部ジェスチャー(ボタンをクリックするなど)を使用する方が、より良いユーザーインターフェースと考えられています。</target>
        </trans-unit>
        <trans-unit id="8141e1359276458bda25227189f84a7dc2c470e8" translate="yes" xml:space="preserve">
          <source>For mutable sources, arbitrary and non-deterministic behavior may occur if the source is structurally interfered with (elements added, replaced, or removed) between the time that the Spliterator binds to its data source and the end of traversal. For example, such interference will produce arbitrary, non-deterministic results when using the &lt;code&gt;java.util.stream&lt;/code&gt; framework.</source>
          <target state="translated">変更可能なソースの場合、スプリッターがデータソースにバインドしてからトラバーサルが終了するまでの間にソースが構造的に妨害されている（要素が追加、置換、または削除されている）場合、任意の非決定的な動作が発生する可能性があります。たとえば、そのような干渉は、 &lt;code&gt;java.util.stream&lt;/code&gt; フレームワークを使用するときに、任意の非決定的な結果を生成します。</target>
        </trans-unit>
        <trans-unit id="25193b196b4f7600b5dbdd467bd6c547e23b4a19" translate="yes" xml:space="preserve">
          <source>For named modules, the returned set contains an element for each package in the module.</source>
          <target state="translated">名前付きモジュールの場合、返されるセットにはモジュール内の各パッケージの要素が含まれます。</target>
        </trans-unit>
        <trans-unit id="78b0c05700e618c811cbdeb91b30a28661eb895a" translate="yes" xml:space="preserve">
          <source>For nodes of any type other than &lt;code&gt;ELEMENT_NODE&lt;/code&gt; and &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt; and nodes created with a DOM Level 1 method, such as &lt;code&gt;Document.createElement()&lt;/code&gt;, this is always &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ELEMENT_NODE&lt;/code&gt; および &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt; 以外のタイプのノード、および &lt;code&gt;Document.createElement()&lt;/code&gt; などのDOMレベル1メソッドで作成されたノードの場合、これは常に &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6892baceeeb04510a39a946267b15b55509adb7b" translate="yes" xml:space="preserve">
          <source>For nodes of any type other than &lt;code&gt;ELEMENT_NODE&lt;/code&gt; and &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt; and nodes created with a DOM Level 1 method, such as &lt;code&gt;createElement&lt;/code&gt; from the &lt;code&gt;Document&lt;/code&gt; interface, this is always &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">以外の任意のタイプのノードに対して &lt;code&gt;ELEMENT_NODE&lt;/code&gt; と &lt;code&gt;ATTRIBUTE_NODE&lt;/code&gt; などのDOMレベル1メソッドで作成されたノード &lt;code&gt;createElement&lt;/code&gt; から &lt;code&gt;Document&lt;/code&gt; インターフェイス、これは常に &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f278ad171d850a8af543d2f081a00db12840525e" translate="yes" xml:space="preserve">
          <source>For non-&lt;em&gt;line-optimal&lt;/em&gt; charsets the stream source's spliterator has poor splitting properties, similar to that of a spliterator associated with an iterator or that associated with a stream returned from &lt;a href=&quot;../../io/bufferedreader#lines()&quot;&gt;&lt;code&gt;BufferedReader.lines()&lt;/code&gt;&lt;/a&gt;. Poor splitting properties can result in poor parallel stream performance.</source>
          <target state="translated">非ための&lt;em&gt;ライン最適の&lt;/em&gt;文字セットストリームソースのspliteratorは、イテレータまたはから返されたストリームに関連付けられていることに関連したspliteratorと同様の乏しい分離特性、有する&lt;a href=&quot;../../io/bufferedreader#lines()&quot;&gt; &lt;code&gt;BufferedReader.lines()&lt;/code&gt; &lt;/a&gt;。分割プロパティが不十分な場合、並列ストリームのパフォーマンスが低下する可能性があります。</target>
        </trans-unit>
        <trans-unit id="282aa7c260e2aae49eeff8198a51995a4a15b876" translate="yes" xml:space="preserve">
          <source>For non-concurrent collectors, any result returned from the result supplier, accumulator, or combiner functions must be serially thread-confined. This enables collection to occur in parallel without the &lt;code&gt;Collector&lt;/code&gt; needing to implement any additional synchronization. The reduction implementation must manage that the input is properly partitioned, that partitions are processed in isolation, and combining happens only after accumulation is complete.</source>
          <target state="translated">非並行コレクターの場合、結果サプライヤー、アキュムレーター、またはコンバイナー関数から返される結果は、逐次的にスレッド限定する必要があります。これにより、 &lt;code&gt;Collector&lt;/code&gt; が追加の同期を実装する必要なく、収集を並行して行うことができます。リダクションの実装では、入力が適切に分割され、分割が個別に処理され、累積が完了した後にのみ結合が行われるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="2438b72799366ac407374d286bd01f0c4166089c" translate="yes" xml:space="preserve">
          <source>For objects of type &lt;code&gt;Class,&lt;/code&gt; by executing a synchronized static method of that class.</source>
          <target state="translated">&lt;code&gt;Class,&lt;/code&gt; タイプのオブジェクトの場合、そのクラスの同期された静的メソッドを実行します。</target>
        </trans-unit>
        <trans-unit id="2393833e8c76843229b97d3096ce8ec39cd225c2" translate="yes" xml:space="preserve">
          <source>For once-off notifications, the notification is delivered immediately.</source>
          <target state="translated">一度きりの通知の場合、通知はすぐに配信されます。</target>
        </trans-unit>
        <trans-unit id="3f4ed89b54bd26be6870100c57685d81eb9d6db9" translate="yes" xml:space="preserve">
          <source>For operation under a 1.1 virtual machine, this uses the value returned by &lt;code&gt;toString&lt;/code&gt; concatenated to the classname. The value returned by toString should not have the class reference in it (ie it should be reimplemented from the definition in Object) in order to be the same when recomputed later.</source>
          <target state="translated">1.1仮想マシンでの操作の場合、これはクラス名に連結された &lt;code&gt;toString&lt;/code&gt; によって返される値を使用します。toStringによって返される値は、後で再計算するときに同じになるために、クラス参照を含まないようにする必要があります（つまり、Objectの定義から再実装する必要があります）。</target>
        </trans-unit>
        <trans-unit id="eb01da6b90e46d6f44e5d813ee9681cba49cc8a0" translate="yes" xml:space="preserve">
          <source>For options that take a particular type as a parameter, getOption(int) will return the parameter's value, else it will return java.lang.Boolean(false):</source>
          <target state="translated">特定の型をパラメータとして取るオプションの場合、getOption(int)はパラメータの値を返し、そうでない場合はjava.lang.Boolean(false)を返します。</target>
        </trans-unit>
        <trans-unit id="1349eb15a8a9be1a8e6e057dc2ac8b33f793323e" translate="yes" xml:space="preserve">
          <source>For options that take a particular type as a parameter, getOption(int) will return the parameter's value, else it will return java.lang.Boolean.FALSE:</source>
          <target state="translated">特定の型をパラメータとして取るオプションの場合、getOption(int)はパラメータの値を返し、そうでない場合は java.lang.Boolean.FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="0c0acc100e32fc6234c0c7457cf6dc7e5450a156" translate="yes" xml:space="preserve">
          <source>For ordered streams, the selection of distinct elements is stable (for duplicated elements, the element appearing first in the encounter order is preserved.) For unordered streams, no stability guarantees are made.</source>
          <target state="translated">順序付けされたストリームの場合、異なる要素の選択は安定しています(重複した要素については、遭遇順序で最初に現れる要素が保持されます)。順序のないストリームでは、安定性は保証されません。</target>
        </trans-unit>
        <trans-unit id="001abdbdf15e42842cf7a21df9e3b1a4e78dc160" translate="yes" xml:space="preserve">
          <source>For ordered streams, the sort is stable. For unordered streams, no stability guarantees are made.</source>
          <target state="translated">順序付けされたストリームの場合、ソートは安定しています。順序のないストリームでは、安定性は保証されません。</target>
        </trans-unit>
        <trans-unit id="6c729397bf989a0e1b25cc2c57e1b20cd8e4b8c6" translate="yes" xml:space="preserve">
          <source>For out going messages the &lt;code&gt;timeToLive&lt;/code&gt; parameter is a time period that the sending side SCTP stack may expire the message if it has not been sent. This time period is an indication to the stack that the message is no longer required to be sent after the time period expires. It is not a hard timeout and may be influenced by whether the association supports the partial reliability extension, &lt;a href=&quot;https://www.ietf.org/rfc/rfc3758.txt&quot;&gt;RFC 3758 &lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc3c03d940589c6746e4c70b9692c35da706494" translate="yes" xml:space="preserve">
          <source>For overview, architecture, and tutorial documentation, please see:</source>
          <target state="translated">概要、アーキテクチャ、チュートリアルのドキュメントについては、こちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="d8bfdf98afbbde02f03df613f17f462dca795146" translate="yes" xml:space="preserve">
          <source>For overviews, tutorials, examples, and guides, please see:</source>
          <target state="translated">概要、チュートリアル、事例、ガイドについてはこちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="8e018fd62c549e8e2179cc594ca3a679f6ac03ca" translate="yes" xml:space="preserve">
          <source>For overviews, tutorials, examples, guides, and other documentation, please see:</source>
          <target state="translated">概要、チュートリアル、例、ガイド、その他のドキュメントについては、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="62f1d3f7834b33683db871654f454196f1523b2d" translate="yes" xml:space="preserve">
          <source>For overviews, tutorials, examples, guides, and tool documentation, please see &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=imf_overview&quot;&gt;Input Method Framework Overview&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0ce3cec54e96b8406619a3ad08ba8f9250c72f" translate="yes" xml:space="preserve">
          <source>For overviews, tutorials, examples, guides, and tool documentation, please see &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=imf_overview&quot;&gt;Input Method Framework Overview&lt;/a&gt;.</source>
          <target state="translated">概要、チュートリアル、例、ガイド、およびツールのドキュメントについては、&lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=imf_overview&quot;&gt;入力方式フレームワークの概要&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d68439e8f07c23e343822db92fbf1f865a4c58c7" translate="yes" xml:space="preserve">
          <source>For overviews, tutorials, examples, guides, and tool documentation, please see:</source>
          <target state="translated">概要、チュートリアル、例、ガイド、ツールのドキュメントについては、こちらを参照してください。</target>
        </trans-unit>
        <trans-unit id="f86ceb74f740cac0f77b81c7bf321ec528a40fdb" translate="yes" xml:space="preserve">
          <source>For parallel stream pipelines, the action may be called at whatever time and in whatever thread the element is made available by the upstream operation. If the action modifies shared state, it is responsible for providing the required synchronization.</source>
          <target state="translated">パラレルストリームパイプラインの場合、アクションは、上流の操作によってエレメントが利用可能になった時点で、どのようなスレッドからでも呼び出すことができます。アクションが共有状態を変更する場合、必要な同期を提供する責任があります。</target>
        </trans-unit>
        <trans-unit id="f0fc793c5384edf9a979ea96ace2f88d94083d6a" translate="yes" xml:space="preserve">
          <source>For parallel stream pipelines, this operation does &lt;em&gt;not&lt;/em&gt; guarantee to respect the encounter order of the stream, as doing so would sacrifice the benefit of parallelism. For any given element, the action may be performed at whatever time and in whatever thread the library chooses. If the action accesses shared state, it is responsible for providing the required synchronization.</source>
          <target state="translated">並列ストリームパイプラインの場合、並列化の利点が失われるため、この操作はストリームの遭遇順序を尊重することを保証しませ&lt;em&gt;ん&lt;/em&gt;。任意の要素について、ライブラリが選択した任意の時間およびスレッドでアクションを実行できます。アクションが共有状態にアクセスする場合、必要な同期を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="c2e0c24ab6772aaaf6d162d55ee00363ff393680" translate="yes" xml:space="preserve">
          <source>For parallel streams, relaxing the ordering constraint can sometimes enable more efficient execution. Certain aggregate operations, such as filtering duplicates (&lt;code&gt;distinct()&lt;/code&gt;) or grouped reductions (&lt;code&gt;Collectors.groupingBy()&lt;/code&gt;) can be implemented more efficiently if ordering of elements is not relevant. Similarly, operations that are intrinsically tied to encounter order, such as &lt;code&gt;limit()&lt;/code&gt;, may require buffering to ensure proper ordering, undermining the benefit of parallelism. In cases where the stream has an encounter order, but the user does not particularly &lt;em&gt;care&lt;/em&gt; about that encounter order, explicitly de-ordering the stream with &lt;a href=&quot;basestream#unordered()&quot;&gt;&lt;code&gt;unordered()&lt;/code&gt;&lt;/a&gt; may improve parallel performance for some stateful or terminal operations. However, most stream pipelines, such as the &quot;sum of weight of blocks&quot; example above, still parallelize efficiently even under ordering constraints.</source>
          <target state="translated">並列ストリームの場合、順序の制約を緩和すると、より効率的な実行が可能になる場合があります。要素の順序が関係ない場合は、重複のフィルタリング（ &lt;code&gt;distinct()&lt;/code&gt; ）やグループ化された削減（ &lt;code&gt;Collectors.groupingBy()&lt;/code&gt; ）などの特定の集計操作をより効率的に実装できます。同様に、 &lt;code&gt;limit()&lt;/code&gt; など、エンカウンターの順序に本質的に関連付けられている操作では、適切な順序を確保するためにバッファリングが必要になる場合があり、並列処理の利点が損なわれます。ストリームに遭遇順序があるが、ユーザーがその遭遇順序を特に&lt;em&gt;気に&lt;/em&gt;しない場合は、&lt;a href=&quot;basestream#unordered()&quot;&gt; &lt;code&gt;unordered()&lt;/code&gt; を使用&lt;/a&gt;してストリームの順序を明示的に解除します。一部のステートフルまたはターミナル操作の並列パフォーマンスが向上する場合があります。ただし、上記の「ブロックの重みの合計」の例など、ほとんどのストリームパイプラインは、順序の制約がある場合でも効率的に並列化されます。</target>
        </trans-unit>
        <trans-unit id="4a022d17d72acbe4095f5d82c97b6b3416972a03" translate="yes" xml:space="preserve">
          <source>For parallel streams, relaxing the ordering constraint can sometimes enable more efficient execution. Certain aggregate operations, such as filtering duplicates (&lt;code&gt;distinct()&lt;/code&gt;) or grouped reductions (&lt;code&gt;Collectors.groupingBy()&lt;/code&gt;) can be implemented more efficiently if ordering of elements is not relevant. Similarly, operations that are intrinsically tied to encounter order, such as &lt;code&gt;limit()&lt;/code&gt;, may require buffering to ensure proper ordering, undermining the benefit of parallelism. In cases where the stream has an encounter order, but the user does not particularly &lt;em&gt;care&lt;/em&gt; about that encounter order, explicitly de-ordering the stream with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;unordered()&lt;/code&gt;&lt;/a&gt; may improve parallel performance for some stateful or terminal operations. However, most stream pipelines, such as the &quot;sum of weight of blocks&quot; example above, still parallelize efficiently even under ordering constraints.</source>
          <target state="translated">並列ストリームの場合、順序の制約を緩和すると、より効率的な実行が可能になる場合があります。重複のフィルタリング（ &lt;code&gt;distinct()&lt;/code&gt; ）やグループ化された削減（ &lt;code&gt;Collectors.groupingBy()&lt;/code&gt; ）などの特定の集計操作は、要素の順序が関係ない場合に、より効率的に実装できます。同様に、 &lt;code&gt;limit()&lt;/code&gt; など、本質的にエンカウンターの順序に関連付けられている操作では、適切な順序を保証するためにバッファリングが必要になる場合があり、並列処理の利点が損なわれます。ストリームに出会い順があるが、ユーザーがその出会い順を特に&lt;em&gt;気に&lt;/em&gt;しない場合、&lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;unordered()&lt;/code&gt; を使用&lt;/a&gt;してストリームを明示的に逆順にします。一部のステートフルまたはターミナル操作の並列パフォーマンスが向上する場合があります。ただし、上記の「ブロックの重みの合計」の例など、ほとんどのストリームパイプラインは、順序の制約があっても効率的に並列化されます。</target>
        </trans-unit>
        <trans-unit id="9e73b1d1f2d18bb67b976ff90a09775a27eb548e" translate="yes" xml:space="preserve">
          <source>For parser interface characteristics that are described as objects, a separate namespace is defined. The objects in this namespace are again identified by URI, and the standard property URIs have the prefix &lt;code&gt;http://xml.org/sax/properties/&lt;/code&gt; before an identifier such as &lt;code&gt;lexical-handler&lt;/code&gt; or &lt;code&gt;dom-node&lt;/code&gt;. Manage those properties using &lt;em&gt;setProperty()&lt;/em&gt;. Those identifiers are:</source>
          <target state="translated">オブジェクトとして記述されるパーサーインターフェイスの特性については、個別の名前空間が定義されています。この名前空間のオブジェクトは再びURIによって識別され、標準のプロパティURIには、 &lt;code&gt;lexical-handler&lt;/code&gt; や &lt;code&gt;dom-node&lt;/code&gt; などの識別子の前に接頭辞 &lt;code&gt;http://xml.org/sax/properties/&lt;/code&gt; が付いています。&lt;em&gt;setProperty（）&lt;/em&gt;を使用してこれらのプロパティを管理します。それらの識別子は次のとおりです。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf900feffef41cc4b28ed04126fec2aa9d3d70eb" translate="yes" xml:space="preserve">
          <source>For parsing with the abbreviated year pattern (&quot;y&quot; or &quot;yy&quot;), &lt;code&gt;SimpleDateFormat&lt;/code&gt; must interpret the abbreviated year relative to some century. It does this by adjusting dates to be within 80 years before and 20 years after the time the &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance is created. For example, using a pattern of &quot;MM/dd/yy&quot; and a &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance created on Jan 1, 1997, the string &quot;01/11/12&quot; would be interpreted as Jan 11, 2012 while the string &quot;05/04/64&quot; would be interpreted as May 4, 1964. During parsing, only strings consisting of exactly two digits, as defined by &lt;a href=&quot;../lang/character#isDigit(char)&quot;&gt;&lt;code&gt;Character.isDigit(char)&lt;/code&gt;&lt;/a&gt;, will be parsed into the default century. Any other numeric string, such as a one digit string, a three or more digit string, or a two digit string that isn't all digits (for example, &quot;-1&quot;), is interpreted literally. So &quot;01/02/3&quot; or &quot;01/02/003&quot; are parsed, using the same pattern, as Jan 2, 3 AD. Likewise, &quot;01/02/-3&quot; is parsed as Jan 2, 4 BC.</source>
          <target state="translated">省略された年のパターン（「y」または「yy」）で解析する場合、 &lt;code&gt;SimpleDateFormat&lt;/code&gt; は、ある世紀を基準にして省略された年を解釈する必要があります。これは、 &lt;code&gt;SimpleDateFormat&lt;/code&gt; インスタンスが作成される前の80年以内と後の20年以内になるように日付を調整することによって行われます。たとえば、「MM / dd / yy」のパターンと1997年1月1日に作成された &lt;code&gt;SimpleDateFormat&lt;/code&gt; インスタンスを使用すると、文字列「01/11/12」は2012年1月11日として解釈され、文字列「05/04 /」は64 &quot;は、1964年5月4日として解釈されます。解析中、&lt;a href=&quot;../lang/character#isDigit(char)&quot;&gt; &lt;code&gt;Character.isDigit(char)&lt;/code&gt; で&lt;/a&gt;定義されているように、正確に2桁で構成される文字列のみ、デフォルトの世紀に解析されます。1桁の文字列、3桁以上の文字列、またはすべての桁ではない2桁の文字列（「-1」など）など、その他の数値文字列は文字通りに解釈されます。したがって、「01/02/3」または「01/02/003」は、西暦3年1月2日と同じパターンを使用して解析されます。同様に、「01/02 / -3」は紀元前4年1月2日として解析されます。</target>
        </trans-unit>
        <trans-unit id="f59f9b594d7dd4a34f5d782945a41831c3266165" translate="yes" xml:space="preserve">
          <source>For parsing with the abbreviated year pattern (&quot;y&quot; or &quot;yy&quot;), &lt;code&gt;SimpleDateFormat&lt;/code&gt; must interpret the abbreviated year relative to some century. It does this by adjusting dates to be within 80 years before and 20 years after the time the &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance is created. For example, using a pattern of &quot;MM/dd/yy&quot; and a &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance created on Jan 1, 1997, the string &quot;01/11/12&quot; would be interpreted as Jan 11, 2012 while the string &quot;05/04/64&quot; would be interpreted as May 4, 1964. During parsing, only strings consisting of exactly two digits, as defined by &lt;a href=&quot;../lang/character#isDigit(int)&quot;&gt;&lt;code&gt;Character.isDigit(char)&lt;/code&gt;&lt;/a&gt;, will be parsed into the default century. Any other numeric string, such as a one digit string, a three or more digit string, or a two digit string that isn't all digits (for example, &quot;-1&quot;), is interpreted literally. So &quot;01/02/3&quot; or &quot;01/02/003&quot; are parsed, using the same pattern, as Jan 2, 3 AD. Likewise, &quot;01/02/-3&quot; is parsed as Jan 2, 4 BC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c570a798086e94379323b4fd869f2a44d713a877" translate="yes" xml:space="preserve">
          <source>For parsing with the abbreviated year pattern (&quot;y&quot; or &quot;yy&quot;), &lt;code&gt;SimpleDateFormat&lt;/code&gt; must interpret the abbreviated year relative to some century. It does this by adjusting dates to be within 80 years before and 20 years after the time the &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance is created. For example, using a pattern of &quot;MM/dd/yy&quot; and a &lt;code&gt;SimpleDateFormat&lt;/code&gt; instance created on Jan 1, 1997, the string &quot;01/11/12&quot; would be interpreted as Jan 11, 2012 while the string &quot;05/04/64&quot; would be interpreted as May 4, 1964. During parsing, only strings consisting of exactly two digits, as defined by &lt;a href=&quot;../lang/character#isDigit-char-&quot;&gt;&lt;code&gt;Character.isDigit(char)&lt;/code&gt;&lt;/a&gt;, will be parsed into the default century. Any other numeric string, such as a one digit string, a three or more digit string, or a two digit string that isn't all digits (for example, &quot;-1&quot;), is interpreted literally. So &quot;01/02/3&quot; or &quot;01/02/003&quot; are parsed, using the same pattern, as Jan 2, 3 AD. Likewise, &quot;01/02/-3&quot; is parsed as Jan 2, 4 BC.</source>
          <target state="translated">省略された年パターン（ &quot;y&quot;または &quot;yy&quot;）で解析する場合、 &lt;code&gt;SimpleDateFormat&lt;/code&gt; は、いくつかの世紀を基準にして省略された年を解釈する必要があります。これは、 &lt;code&gt;SimpleDateFormat&lt;/code&gt; インスタンスが作成された時刻の前後80年以内に日付を調整することによって行われます。たとえば、 &quot;MM / dd / yy&quot;のパターンと1997年1月1日に作成された &lt;code&gt;SimpleDateFormat&lt;/code&gt; インスタンスを使用すると、文字列 &quot;01/11/12&quot;は2012年1月11日として解釈され、文字列 &quot;05/04 / 64 &quot;は1964年5月4日と解釈されます。解析中、&lt;a href=&quot;../lang/character#isDigit-char-&quot;&gt; &lt;code&gt;Character.isDigit(char)&lt;/code&gt; で&lt;/a&gt;定義されているように、正確に2桁の文字列のみで構成されます。、デフォルトの世紀に解析されます。1桁の文字列、3桁以上の文字列、またはすべてが数字ではない2桁の文字列（ &quot;-1&quot;など）などの他の数値文字列は、文字どおりに解釈されます。したがって、「01/02/3」または「01/02/003」は、西暦1月2日、3日と同じパターンを使用して解析されます。同様に、「01/02 / -3」は、紀元前1月2日、4日として解析されます。</target>
        </trans-unit>
        <trans-unit id="4a764f5159f9e22afe179e63808190284e10eb12" translate="yes" xml:space="preserve">
          <source>For parsing, &lt;a href=&quot;#rfc822timezone&quot;&gt;RFC 822 time zones&lt;/a&gt; are also accepted.</source>
          <target state="translated">解析には、&lt;a href=&quot;#rfc822timezone&quot;&gt;RFC 822タイムゾーン&lt;/a&gt;も使用できます。</target>
        </trans-unit>
        <trans-unit id="baabe17164e63bd44c3000ec7a5be5ff380b1df0" translate="yes" xml:space="preserve">
          <source>For parsing, &lt;a href=&quot;#timezone&quot;&gt;general time zones&lt;/a&gt; are also accepted.</source>
          <target state="translated">解析には、&lt;a href=&quot;#timezone&quot;&gt;一般的なタイムゾーン&lt;/a&gt;も使用できます。</target>
        </trans-unit>
        <trans-unit id="fac8c5ed0886874a6aa7b271e61c544b5d8be575" translate="yes" xml:space="preserve">
          <source>For parsing, &lt;code&gt;&quot;Z&quot;&lt;/code&gt; is parsed as the UTC time zone designator. &lt;a href=&quot;#timezone&quot;&gt;General time zones&lt;/a&gt; are &lt;em&gt;not&lt;/em&gt; accepted.</source>
          <target state="translated">解析では、 &lt;code&gt;&quot;Z&quot;&lt;/code&gt; はUTCタイムゾーン指定子として解析されます。&lt;a href=&quot;#timezone&quot;&gt;一般的なタイムゾーン&lt;/a&gt;は受け入れられ&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1e6618bdd467f78f58afb023c88a8cc4afa3e44a" translate="yes" xml:space="preserve">
          <source>For parsing, if the number of pattern letters is more than 2, the year is interpreted literally, regardless of the number of digits. So using the pattern &quot;MM/dd/yyyy&quot;, &quot;01/11/12&quot; parses to Jan 11, 12 A.D.</source>
          <target state="translated">解析のために、パターン文字数が2以上の場合は、桁数に関係なく年号を文字通りに解釈します。したがって、&quot;MM/dd/yyyy &quot;というパターンを使うと、&quot;01/11/12 &quot;は西暦12年1月11日と解釈されます。</target>
        </trans-unit>
        <trans-unit id="26ab4b1f4f2fedc9dbe0601284ca2ee8e4aeac44" translate="yes" xml:space="preserve">
          <source>For performance reasons, &lt;code&gt;Component&lt;/code&gt;s with zero width or height aren't considered to need painting when they are first shown, and also aren't considered to need repair.</source>
          <target state="translated">パフォーマンス上の理由から、幅または高さがゼロの &lt;code&gt;Component&lt;/code&gt; は、最初に表示されたときにペイントが必要であるとは見なされず、修理も必要であるとは見なされません。</target>
        </trans-unit>
        <trans-unit id="7160eed7fa1346d63fcd7925944e1d727500c617" translate="yes" xml:space="preserve">
          <source>For performance reasons, it is preferable that &lt;code&gt;Raster&lt;/code&gt; objects passed to the &lt;code&gt;compose&lt;/code&gt; method of a &lt;a href=&quot;compositecontext&quot;&gt;&lt;code&gt;CompositeContext&lt;/code&gt;&lt;/a&gt; object created by the &lt;code&gt;AlphaComposite&lt;/code&gt; class have premultiplied data. If either the source &lt;code&gt;Raster&lt;/code&gt; or the destination &lt;code&gt;Raster&lt;/code&gt; is not premultiplied, however, appropriate conversions are performed before and after the compositing operation.</source>
          <target state="translated">パフォーマンス上の理由から、 &lt;code&gt;AlphaComposite&lt;/code&gt; クラスによって作成された&lt;a href=&quot;compositecontext&quot;&gt; &lt;code&gt;CompositeContext&lt;/code&gt; &lt;/a&gt;オブジェクトの &lt;code&gt;compose&lt;/code&gt; メソッドに渡される &lt;code&gt;Raster&lt;/code&gt; オブジェクトには、事前に乗算されたデータがあることが望ましいです。ただし、ソース &lt;code&gt;Raster&lt;/code&gt; または宛先 &lt;code&gt;Raster&lt;/code&gt; いずれかが事前に乗算されていない場合は、合成操作の前後に適切な変換が実行されます。</target>
        </trans-unit>
        <trans-unit id="2c001c6ebfd8657baca1812a75f6899a1d0dbf06" translate="yes" xml:space="preserve">
          <source>For periodic notifications, the first notification is delivered immediately and the subsequent ones are spaced as specified by the period parameter.</source>
          <target state="translated">定期的な通知の場合、最初の通知はすぐに配信され、その後の通知は期間パラメータで指定された間隔を置いて配信されます。</target>
        </trans-unit>
        <trans-unit id="c073373dd230874d620a8da3acd5b596dbfa99f6" translate="yes" xml:space="preserve">
          <source>For primitive arrays the &lt;a href=&quot;#getElementOpenType()&quot;&gt;&lt;code&gt;getElementOpenType()&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;simpletype&quot;&gt;&lt;code&gt;SimpleType&lt;/code&gt;&lt;/a&gt; corresponding to the wrapper type of the primitive type of the array.</source>
          <target state="translated">プリミティブ配列の場合、&lt;a href=&quot;#getElementOpenType()&quot;&gt; &lt;code&gt;getElementOpenType()&lt;/code&gt; &lt;/a&gt;メソッドは、配列のプリミティブ型のラッパー型に対応する&lt;a href=&quot;simpletype&quot;&gt; &lt;code&gt;SimpleType&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="5f821990434cda12a37c22f0b70c7a915410fdb2" translate="yes" xml:space="preserve">
          <source>For primitive arrays the &lt;a href=&quot;arraytype#getElementOpenType--&quot;&gt;&lt;code&gt;getElementOpenType()&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;simpletype&quot;&gt;&lt;code&gt;SimpleType&lt;/code&gt;&lt;/a&gt; corresponding to the wrapper type of the primitive type of the array.</source>
          <target state="translated">プリミティブ配列の場合、&lt;a href=&quot;arraytype#getElementOpenType--&quot;&gt; &lt;code&gt;getElementOpenType()&lt;/code&gt; &lt;/a&gt;メソッドは、配列のプリミティブ型のラッパー型に対応する&lt;a href=&quot;simpletype&quot;&gt; &lt;code&gt;SimpleType&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="1852a857e6c6604b004e3458ad42f21fe5e162d7" translate="yes" xml:space="preserve">
          <source>For primitive values, such as &lt;code&gt;opaque&lt;/code&gt;, the method &lt;code&gt;
 installProperty&lt;/code&gt; should be invoked. &lt;code&gt;installProperty&lt;/code&gt; only changes the corresponding property if the value has not been changed by the developer.</source>
          <target state="translated">&lt;code&gt;opaque&lt;/code&gt; などのプリミティブ値の場合は、メソッド &lt;code&gt; installProperty&lt;/code&gt; を呼び出す必要があります。 &lt;code&gt;installProperty&lt;/code&gt; は、開発者が値を変更していない場合にのみ、対応するプロパティを変更します。</target>
        </trans-unit>
        <trans-unit id="4ad66ae8d5664bf576a41f20650fa30d06e9cd67" translate="yes" xml:space="preserve">
          <source>For purposes of concurrency control, a Context operation that returns a &lt;code&gt;NamingEnumeration&lt;/code&gt; is not considered to have completed while the enumeration is still in use, or while any referrals generated by that operation are still being followed.</source>
          <target state="translated">同時実行制御の目的で、列挙がまだ使用されている間、またはその操作によって生成された参照が引き続き行われている間、 &lt;code&gt;NamingEnumeration&lt;/code&gt; を返すContext操作は完了したと見なされません。</target>
        </trans-unit>
        <trans-unit id="9f3974f591009726983466072bceba6e0651cf09" translate="yes" xml:space="preserve">
          <source>For purposes of the methods in this class, colors are represented as arrays of color components represented as floats in a normalized range defined by each &lt;code&gt;ColorSpace&lt;/code&gt;. For many &lt;code&gt;ColorSpaces&lt;/code&gt; (e.g. sRGB), this range is 0.0 to 1.0. However, some &lt;code&gt;ColorSpaces&lt;/code&gt; have components whose values have a different range. Methods are provided to inquire per component minimum and maximum normalized values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b70912ee937c9b1afb11355852437a3c9e2750e" translate="yes" xml:space="preserve">
          <source>For purposes of the methods in this class, colors are represented as arrays of color components represented as floats in a normalized range defined by each ColorSpace. For many ColorSpaces (e.g. sRGB), this range is 0.0 to 1.0. However, some ColorSpaces have components whose values have a different range. Methods are provided to inquire per component minimum and maximum normalized values.</source>
          <target state="translated">このクラスのメソッドの目的のために、色は各 ColorSpace によって定義された正規化された範囲内で float で表される色成分の配列として表現されます。多くの ColorSpaces (例:sRGB)では、この範囲は 0.0 から 1.0 です。しかし、一部のColorSpacesには、値が異なる範囲を持つコンポーネントがあります。正規化された最小値と最大値をコンポーネントごとに問い合わせるためのメソッドが用意されています。</target>
        </trans-unit>
        <trans-unit id="5cb8df1427c2607eeb964dabbba2a3f6332dd9c2" translate="yes" xml:space="preserve">
          <source>For received messages &lt;code&gt;true&lt;/code&gt; indicates that the message was completely received. For messages being sent &lt;code&gt;true&lt;/code&gt; indicates that the message is complete, &lt;code&gt;false&lt;/code&gt; indicates that the message is not complete. How the send channel interprets this value depends on the value of its &lt;a href=&quot;sctpstandardsocketoptions#SCTP_EXPLICIT_COMPLETE&quot;&gt;&lt;code&gt;SCTP_EXPLICIT_COMPLETE&lt;/code&gt;&lt;/a&gt; socket option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e33a6b1d1aec8bfa5947f6b05e341ac3dfef4d" translate="yes" xml:space="preserve">
          <source>For resources in named modules then the method must implement the rules for encapsulation specified in the &lt;code&gt;Module&lt;/code&gt;&lt;a href=&quot;module#getResourceAsStream(java.lang.String)&quot;&gt;&lt;code&gt;getResourceAsStream&lt;/code&gt;&lt;/a&gt; method. Additionally, it must not find non-&quot;&lt;code&gt;.class&lt;/code&gt;&quot; resources in packages of named modules unless the package is &lt;a href=&quot;module#isOpen(java.lang.String)&quot;&gt;&lt;code&gt;opened&lt;/code&gt;&lt;/a&gt; unconditionally.</source>
          <target state="translated">名前のモジュール内のリソースについては、本方法は、で指定されたカプセル化のためのルールを実装しなければならない &lt;code&gt;Module&lt;/code&gt; &lt;a href=&quot;module#getResourceAsStream(java.lang.String)&quot;&gt; &lt;code&gt;getResourceAsStream&lt;/code&gt; の&lt;/a&gt;方法を。さらに、パッケージが無条件に&lt;a href=&quot;module#isOpen(java.lang.String)&quot;&gt; &lt;code&gt;opened&lt;/code&gt; &lt;/a&gt;ない限り、名前付きモジュールのパッケージ内で「 &lt;code&gt;.class&lt;/code&gt; 」以外のリソースを見つけてはなりません。</target>
        </trans-unit>
        <trans-unit id="6af3b8b702cec551453071655b308d7ec1304eee" translate="yes" xml:space="preserve">
          <source>For retransformations, the retransformation incapable transformers are not called, instead the result of the previous transformation is reused. In all other cases, this method is called. Within each of these groupings, transformers are called in the order registered. Native transformers are provided by the &lt;code&gt;ClassFileLoadHook&lt;/code&gt; event in the Java Virtual Machine Tool Interface).</source>
          <target state="translated">再変換の場合、再変換できないトランスフォーマーは呼び出されず、代わりに前の変換の結果が再利用されます。他のすべての場合では、このメソッドが呼び出されます。これらの各グループ内で、トランスフォーマーは登録された順序で呼び出されます。ネイティブトランスフォーマーは、Java仮想マシンツールインターフェースの &lt;code&gt;ClassFileLoadHook&lt;/code&gt; イベントによって提供されます。</target>
        </trans-unit>
        <trans-unit id="7dd2facb3f68ee424622ebbb379381658dbe37eb" translate="yes" xml:space="preserve">
          <source>For security reasons, it is often desirable to use an &lt;code&gt;ActiveEvent&lt;/code&gt; to avoid calling untrusted code from a critical thread. For instance, peer implementations can use this facility to avoid making calls into user code from a system thread. Doing so avoids potential deadlocks and denial-of-service attacks.</source>
          <target state="translated">セキュリティ上の理由から、重要なスレッドから信頼できないコードを呼び出さないように、 &lt;code&gt;ActiveEvent&lt;/code&gt; を使用することが望ましい場合がよくあります。たとえば、ピア実装はこの機能を使用して、システムスレッドからユーザーコードへの呼び出しを回避できます。そうすることで、潜在的なデッドロックやサービス拒否攻撃を回避できます。</target>
        </trans-unit>
        <trans-unit id="68aca3f784675cc07cb4e0642cca8613fe19a4fb" translate="yes" xml:space="preserve">
          <source>For security reasons, mapping of streams and keys exists for each codebase. In other words, applet from one codebase cannot access the streams created by an applet from a different codebase</source>
          <target state="translated">セキュリティ上の理由から、ストリームとキーのマッピングは各コードベースごとに存在します。言い換えれば、あるコードベースのアプレットは、別のコードベースのアプレットによって作成されたストリームにアクセスすることはできません。</target>
        </trans-unit>
        <trans-unit id="090a205944e041a23c2af870eee91a2ad52fe770" translate="yes" xml:space="preserve">
          <source>For security reasons, mapping of streams and keys exists for each codebase. In other words, applet from one codebase cannot access the streams created by an applet from a different codebase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aaf586cff8e4109d1052cda9cf2048cf817c051" translate="yes" xml:space="preserve">
          <source>For security reasons, the same named values may not be visible across different access control contexts.</source>
          <target state="translated">セキュリティ上の理由から、同じ名前の値は、異なるアクセス制御コンテキスト間では表示されない場合があります。</target>
        </trans-unit>
        <trans-unit id="07a616bdd03b87c7c8b36c86cf798f970d625046" translate="yes" xml:space="preserve">
          <source>For security reasons, this method is deprecated. Use the &lt;code&gt;* getPassword&lt;/code&gt; method instead.</source>
          <target state="translated">セキュリティ上の理由から、このメソッドは非推奨です。代わりに &lt;code&gt;* getPassword&lt;/code&gt; メソッドを使用してください。</target>
        </trans-unit>
        <trans-unit id="b9a153d78438e600a61dd60f37ea36fd771a9301" translate="yes" xml:space="preserve">
          <source>For security reasons, this method is deprecated. Use the &lt;code&gt;getPassword&lt;/code&gt; method instead.</source>
          <target state="translated">セキュリティ上の理由から、このメソッドは非推奨です。代わりに &lt;code&gt;getPassword&lt;/code&gt; メソッドを使用してください。</target>
        </trans-unit>
        <trans-unit id="5bc2c1eacdb9df0b1e19143b671c79f00c7d88d8" translate="yes" xml:space="preserve">
          <source>For security reasons, this option may imply the &lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt;&lt;code&gt;LinkOption.NOFOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option. In other words, if the option is present when opening an existing file that is a symbolic link then it may fail (by throwing &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">セキュリティ上の理由から、このオプションは&lt;a href=&quot;linkoption#NOFOLLOW_LINKS&quot;&gt; &lt;code&gt;LinkOption.NOFOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;オプションを意味する場合があります。つまり、シンボリックリンクである既存のファイルを開くときにオプションが存在する場合、（&lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;をスローすることにより）失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="1e48b929136f5e9d3672a30cfe645fb8bf5a7c9f" translate="yes" xml:space="preserve">
          <source>For sensitive information, a &lt;a href=&quot;httpsserver&quot;&gt;&lt;code&gt;HttpsServer&lt;/code&gt;&lt;/a&gt; can be used to process &quot;https&quot; requests secured by the SSL or TLS protocols. A HttpsServer must be provided with a &lt;a href=&quot;httpsconfigurator&quot;&gt;&lt;code&gt;HttpsConfigurator&lt;/code&gt;&lt;/a&gt; object, which contains an initialized &lt;a href=&quot;../../../../../java.base/javax/net/ssl/sslcontext&quot;&gt;&lt;code&gt;SSLContext&lt;/code&gt;&lt;/a&gt;. HttpsConfigurator can be used to configure the cipher suites and other SSL operating parameters. A simple example SSLContext could be created as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e8cccc24afd200b00b6d417f9f7eb38448e719" translate="yes" xml:space="preserve">
          <source>For sequential streams, the presence or absence of an encounter order does not affect performance, only determinism. If a stream is ordered, repeated execution of identical stream pipelines on an identical source will produce an identical result; if it is not ordered, repeated execution might produce different results.</source>
          <target state="translated">シーケンシャルストリームの場合、遭遇順序の有無はパフォーマンスに影響を与えず、決定論だけが影響を与えます。ストリームが順序付けられている場合、同一のソース上で同一のストリームパイプラインを繰り返し実行すると、同一の結果が得られますが、順序付けられていない場合は、繰り返し実行すると異なる結果が得られる可能性があります。</target>
        </trans-unit>
        <trans-unit id="612299030742e36a518e5bbd5b2e467622413307" translate="yes" xml:space="preserve">
          <source>For service formatted print data, the print data representation class is typically one of the following (although other representation classes are permitted). Nested classes inside class &lt;code&gt;DocFlavor&lt;/code&gt; declare predefined static constant &lt;code&gt;DocFlavor&lt;/code&gt; objects for these example doc flavors; class &lt;code&gt;DocFlavor&lt;/code&gt;'s constructor can be used to create an arbitrary doc flavor.</source>
          <target state="translated">サービス形式の印刷データの場合、印刷データ表現クラスは通常、次のいずれかです（ただし、他の表現クラスも許可されます）。クラス &lt;code&gt;DocFlavor&lt;/code&gt; 内のネストされたクラスは、これらのサンプルdocフレーバーの事前定義された静的定数 &lt;code&gt;DocFlavor&lt;/code&gt; オブジェクトを宣言します。クラス &lt;code&gt;DocFlavor&lt;/code&gt; のコンストラクターを使用して、任意のドキュメントフレーバーを作成できます。</target>
        </trans-unit>
        <trans-unit id="26bb61cb564ead626c2bde55cc602f10668817ef" translate="yes" xml:space="preserve">
          <source>For service formatted print data, the print data representation class is typically one of the following (although other representation classes are permitted). Nested classes inside class DocFlavor declare predefined static constant DocFlavor objects for these example doc flavors; class DocFlavor's constructor can be used to create an arbitrary doc flavor.</source>
          <target state="translated">サービスフォーマットされた印刷データの場合、印刷データ表現クラスは、通常、以下のいずれかになります(他の表現クラスも許可されていますが)。クラスDocFlavor内のネストされたクラスは、これらの例示的なdocフレーバーに対して、定義済みの静的定数DocFlavorオブジェクトを宣言します。</target>
        </trans-unit>
        <trans-unit id="e47563fc5b992c913402209b3b12d7e051476c9a" translate="yes" xml:space="preserve">
          <source>For simple applications requiring only line-oriented reading, use &lt;a href=&quot;#readLine(java.lang.String,java.lang.Object...)&quot;&gt;&lt;code&gt;readLine(java.lang.String, java.lang.Object...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">行指向の読み取りのみを必要とする単純なアプリケーションの場合は、&lt;a href=&quot;#readLine(java.lang.String,java.lang.Object...)&quot;&gt; &lt;code&gt;readLine(java.lang.String, java.lang.Object...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca1d6d31248f3efa59038d05d967fd0679416a5d" translate="yes" xml:space="preserve">
          <source>For simple applications requiring only line-oriented reading, use &lt;code&gt;&lt;a href=&quot;console#readLine-java.lang.String-java.lang.Object...-&quot;&gt;&lt;code&gt;readLine(java.lang.String, java.lang.Object...)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">行指向の読み取りのみを必要とする単純なアプリケーションの場合は、 &lt;code&gt;&lt;a href=&quot;console#readLine-java.lang.String-java.lang.Object...-&quot;&gt;&lt;code&gt;readLine(java.lang.String, java.lang.Object...)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10110bc1b4d00e0dc3d5198a1f41849e4846b830" translate="yes" xml:space="preserve">
          <source>For simple stand-alone Java applications, a typical way to write a line of output data is:</source>
          <target state="translated">単純なスタンドアロンのJavaアプリケーションの場合、出力データの行を書くのが一般的な方法です。</target>
        </trans-unit>
        <trans-unit id="08ab4d80904580e41702f8742bdd05a4e07d7c29" translate="yes" xml:space="preserve">
          <source>For situations where a set of algorithm-specific parameters already exists (e.g., so-called</source>
          <target state="translated">アルゴリズム固有のパラメータのセットが既に存在する状況(例えば、いわゆる</target>
        </trans-unit>
        <trans-unit id="55d2efc269d07ba41c86c8d0158f4502fe21c27a" translate="yes" xml:space="preserve">
          <source>For situations where a set of algorithm-specific parameters already exists, there are two &lt;a href=&quot;#init(java.security.spec.AlgorithmParameterSpec)&quot;&gt;&lt;code&gt;init&lt;/code&gt;&lt;/a&gt; methods that have an &lt;code&gt;AlgorithmParameterSpec&lt;/code&gt; argument. One also has a &lt;code&gt;SecureRandom&lt;/code&gt; argument, while the other uses the SecureRandom implementation of the highest-priority installed provider as the source of randomness (or a system-provided source of randomness if none of the installed providers supply a SecureRandom implementation).</source>
          <target state="translated">アルゴリズム固有のパラメーターのセットがすでに存在する状況では、 &lt;code&gt;AlgorithmParameterSpec&lt;/code&gt; 引数を持つ2つの&lt;a href=&quot;#init(java.security.spec.AlgorithmParameterSpec)&quot;&gt; &lt;code&gt;init&lt;/code&gt; &lt;/a&gt;メソッドがあります。1つには &lt;code&gt;SecureRandom&lt;/code&gt; 引数もあり、もう1つは最も優先度の高いインストール済みプロバイダーのSecureRandom実装をランダム性のソースとして使用します（または、インストールされたプロバイダーのいずれもSecureRandom実装を提供しない場合は、システムが提供するランダム性のソース）。</target>
        </trans-unit>
        <trans-unit id="95eedb101c336b80a564e4cdfc54df965d97f306" translate="yes" xml:space="preserve">
          <source>For situations where a set of algorithm-specific parameters already exists, there are two &lt;a href=&quot;keygenerator#init-java.security.spec.AlgorithmParameterSpec-&quot;&gt;&lt;code&gt;init&lt;/code&gt;&lt;/a&gt; methods that have an &lt;code&gt;AlgorithmParameterSpec&lt;/code&gt; argument. One also has a &lt;code&gt;SecureRandom&lt;/code&gt; argument, while the other uses the SecureRandom implementation of the highest-priority installed provider as the source of randomness (or a system-provided source of randomness if none of the installed providers supply a SecureRandom implementation).</source>
          <target state="translated">アルゴリズム固有のパラメーターのセットがすでに存在する状況では、 &lt;code&gt;AlgorithmParameterSpec&lt;/code&gt; 引数を持つ2つの&lt;a href=&quot;keygenerator#init-java.security.spec.AlgorithmParameterSpec-&quot;&gt; &lt;code&gt;init&lt;/code&gt; &lt;/a&gt;メソッドがあります。1つは &lt;code&gt;SecureRandom&lt;/code&gt; 引数も持っていますが、もう1つはインストールされた最高優先度のプロバイダーのSecureRandom実装をランダム性のソースとして使用します（インストールされたプロバイダーがSecureRandom実装を提供しない場合はシステム提供のランダム性のソース）。</target>
        </trans-unit>
        <trans-unit id="f8119c10712b80271b387c627507ed293ca218ad" translate="yes" xml:space="preserve">
          <source>For sockets accepted from a ServerSocket, this must be done by calling &lt;a href=&quot;serversocket#setReceiveBufferSize(int)&quot;&gt;&lt;code&gt;ServerSocket.setReceiveBufferSize(int)&lt;/code&gt;&lt;/a&gt; before the ServerSocket is bound to a local address.</source>
          <target state="translated">ServerSocketから受け入れられたソケットの場合、これは、ServerSocketがローカルアドレスにバインドされる前に&lt;a href=&quot;serversocket#setReceiveBufferSize(int)&quot;&gt; &lt;code&gt;ServerSocket.setReceiveBufferSize(int)&lt;/code&gt; を&lt;/a&gt;呼び出すことによって実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="a85dbc709a9f2ba6465c3e2a6e42e17a0cb8fa6b" translate="yes" xml:space="preserve">
          <source>For sockets accepted from a ServerSocket, this must be done by calling &lt;a href=&quot;serversocket#setReceiveBufferSize-int-&quot;&gt;&lt;code&gt;ServerSocket.setReceiveBufferSize(int)&lt;/code&gt;&lt;/a&gt; before the ServerSocket is bound to a local address.</source>
          <target state="translated">ServerSocketから受け入れられるソケットの場合、ServerSocketがローカルアドレスにバインドされる前に、ServerSocket.setReceiveBufferSize &lt;a href=&quot;serversocket#setReceiveBufferSize-int-&quot;&gt; &lt;code&gt;ServerSocket.setReceiveBufferSize(int)&lt;/code&gt; &lt;/a&gt;呼び出してこれを行う必要があります。</target>
        </trans-unit>
        <trans-unit id="b5d9e449f3c30af13b7c3df63d138eee7bd155c9" translate="yes" xml:space="preserve">
          <source>For some &lt;code&gt;CertStore&lt;/code&gt; types, the resulting &lt;code&gt;Collection&lt;/code&gt; may not contain &lt;b&gt;all&lt;/b&gt; of the &lt;code&gt;CRL&lt;/code&gt;s that match the selector. For instance, an LDAP &lt;code&gt;CertStore&lt;/code&gt; may not search all entries in the directory. Instead, it may just search entries that are likely to contain the &lt;code&gt;CRL&lt;/code&gt;s it is looking for.</source>
          <target state="translated">一部の &lt;code&gt;CertStore&lt;/code&gt; タイプでは、結果の &lt;code&gt;Collection&lt;/code&gt; 、セレクターと一致する&lt;b&gt;すべて&lt;/b&gt;の &lt;code&gt;CRL&lt;/code&gt; が含まれ&lt;b&gt;て&lt;/b&gt;いない場合があります。たとえば、LDAP &lt;code&gt;CertStore&lt;/code&gt; はディレクトリ内のすべてのエントリを検索しない場合があります。代わりに、探している &lt;code&gt;CRL&lt;/code&gt; が含まれている可能性があるエントリを検索するだけです。</target>
        </trans-unit>
        <trans-unit id="2d2bd5d4910b94aed8dde240f220cd40623a6895" translate="yes" xml:space="preserve">
          <source>For some &lt;code&gt;CertStore&lt;/code&gt; types, the resulting &lt;code&gt;Collection&lt;/code&gt; may not contain &lt;b&gt;all&lt;/b&gt; of the &lt;code&gt;Certificate&lt;/code&gt;s that match the selector. For instance, an LDAP &lt;code&gt;CertStore&lt;/code&gt; may not search all entries in the directory. Instead, it may just search entries that are likely to contain the &lt;code&gt;Certificate&lt;/code&gt;s it is looking for.</source>
          <target state="translated">一部の &lt;code&gt;CertStore&lt;/code&gt; タイプでは、結果の &lt;code&gt;Collection&lt;/code&gt; 、セレクターに一致する&lt;b&gt;すべて&lt;/b&gt;の &lt;code&gt;Certificate&lt;/code&gt; が含まれ&lt;b&gt;て&lt;/b&gt;いない場合があります。たとえば、LDAP &lt;code&gt;CertStore&lt;/code&gt; はディレクトリ内のすべてのエントリを検索しない場合があります。代わりに、探している &lt;code&gt;Certificate&lt;/code&gt; が含まれている可能性のあるエントリを検索するだけです。</target>
        </trans-unit>
        <trans-unit id="22e94a6fa8a45a9ac9e87cc4182da53a7e5c4700" translate="yes" xml:space="preserve">
          <source>For some document formats (such as &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt;), the desired orientation of the print-stream pages is specified within the document data. This information is generated by a device driver prior to the submission of the print job. Other document formats (such as &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt;) do not include the notion of desired orientation within the document data. In the latter case it is possible for the printer to bind the desired orientation to the document data after it has been submitted. It is expected that a printer would only support the &lt;code&gt;OrientationRequested&lt;/code&gt; attribute for some document formats (e.g., &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; or &lt;code&gt;&quot;text/html&quot;&lt;/code&gt;) but not others (e.g. &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt;). This is no different from any other job template attribute, since a print job can always impose constraints among the values of different job template attributes. However, a special mention is made here since it is very likely that a printer will support the &lt;code&gt;OrientationRequested&lt;/code&gt; attribute for only a subset of the supported document formats.</source>
          <target state="translated">一部のドキュメント形式（ &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt; ）では、印刷ストリームページの目的の方向がドキュメントデータ内で指定されます。この情報は、印刷ジョブの送信前にデバイスドライバーによって生成されます。他のドキュメント形式（ &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; ）には、ドキュメントデータ内の目的の方向の概念が含まれていません。後者の場合、送信後にプリンタがドキュメントデータに目的の向きをバインドすることができます。プリンタは、一部のドキュメント形式（ &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; や &lt;code&gt;&quot;text/html&quot;&lt;/code&gt; ）では &lt;code&gt;OrientationRequested&lt;/code&gt; 属性のみをサポートし、他の形式（「text / html」など）ではサポートしないことが期待されます &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt; ）。印刷ジョブは常に異なるジョブテンプレート属性の値の間に制約を課すことができるため、これは他のジョブテンプレート属性と同じです。ただし、サポートされているドキュメント形式のサブセットに対してのみプリンタが &lt;code&gt;OrientationRequested&lt;/code&gt; 属性をサポートする可能性が非常に高いため、ここで特に言及します。</target>
        </trans-unit>
        <trans-unit id="a5305c849ef834d436ddf738002d87d9d625028c" translate="yes" xml:space="preserve">
          <source>For some document formats (such as &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt;), the desired orientation of the print-stream pages is specified within the document data. This information is generated by a device driver prior to the submission of the print job. Other document formats (such as &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt;) do not include the notion of desired orientation within the document data. In the latter case it is possible for the printer to bind the desired orientation to the document data after it has been submitted. It is expected that a printer would only support the OrientationRequested attribute for some document formats (e.g., &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; or &lt;code&gt;&quot;text/html&quot;&lt;/code&gt;) but not others (e.g. &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt;). This is no different from any other job template attribute, since a print job can always impose constraints among the values of different job template attributes. However, a special mention is made here since it is very likely that a printer will support the OrientationRequested attribute for only a subset of the supported document formats.</source>
          <target state="translated">一部のドキュメント形式（ &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt; など）では、印刷ストリームページの望ましい方向がドキュメントデータ内で指定されています。この情報は、印刷ジョブの送信前にデバイスドライバーによって生成されます。他のドキュメント形式（ &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; ）には、ドキュメントデータ内の望ましい方向の概念が含まれていません。後者の場合、送信後に、プリンターがドキュメントデータに目的の向きをバインドすることができます。プリンタは、一部のドキュメント形式（例： &lt;code&gt;&quot;text/plain&quot;&lt;/code&gt; または &lt;code&gt;&quot;text/html&quot;&lt;/code&gt; ）のOrientationRequested属性のみをサポートし、他のもの（例： &lt;code&gt;&quot;application/postscript&quot;&lt;/code&gt; ）はサポートしないことが予想されます）。印刷ジョブは常に異なるジョブテンプレート属性の値の間に制約を課すことができるため、これは他のジョブテンプレート属性と同じです。ただし、サポートされているドキュメント形式のサブセットに対してのみプリンターがOrientationRequested属性をサポートする可能性が非常に高いため、ここでは特別に言及します。</target>
        </trans-unit>
        <trans-unit id="0fe557112ee4ca1e72435e187056ad881c86ceb4" translate="yes" xml:space="preserve">
          <source>For some shorthand properties that take missing values from other sides, such as the &lt;code&gt;margin&lt;/code&gt;, &lt;code&gt;padding&lt;/code&gt;, and &lt;code&gt;border-[width|style|color]&lt;/code&gt; properties, the minimum number of sides possible should be used; i.e., &quot;0px 10px&quot; will be returned instead of &quot;0px 10px 0px 10px&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09018bb506a1cc69eba6480b165cb1aba8eb22a7" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;#doubleStream(java.util.Spliterator.OfDouble,boolean)&quot;&gt;&lt;code&gt;doubleStream(java.util.Spliterator.OfDouble, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">特性を報告spliteratorsについて &lt;code&gt;IMMUTABLE&lt;/code&gt; または &lt;code&gt;CONCURRENT&lt;/code&gt; されている、または&lt;a href=&quot;../spliterator#binding&quot;&gt;遅延バインディングを&lt;/a&gt;、それはおそらく、より効率的に使用することです&lt;a href=&quot;#doubleStream(java.util.Spliterator.OfDouble,boolean)&quot;&gt; &lt;code&gt;doubleStream(java.util.Spliterator.OfDouble, boolean)&lt;/code&gt; &lt;/a&gt;代わりに。</target>
        </trans-unit>
        <trans-unit id="6266d2745dcb22de483d0dc7b876171ca4cabb70" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;#intStream(java.util.Spliterator.OfInt,boolean)&quot;&gt;&lt;code&gt;intStream(java.util.Spliterator.OfInt, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">特性を報告spliteratorsについて &lt;code&gt;IMMUTABLE&lt;/code&gt; または &lt;code&gt;CONCURRENT&lt;/code&gt; されている、または&lt;a href=&quot;../spliterator#binding&quot;&gt;遅延バインディングを&lt;/a&gt;、それはおそらく、より効率的に使用することです&lt;a href=&quot;#intStream(java.util.Spliterator.OfInt,boolean)&quot;&gt; &lt;code&gt;intStream(java.util.Spliterator.OfInt, boolean)&lt;/code&gt; &lt;/a&gt;代わりに。</target>
        </trans-unit>
        <trans-unit id="5f350f6770ebd5851eaeb91f7a7cf7e4a21b8a4d" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;#longStream(java.util.Spliterator.OfLong,boolean)&quot;&gt;&lt;code&gt;longStream(java.util.Spliterator.OfLong, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">特性を報告spliteratorsについて &lt;code&gt;IMMUTABLE&lt;/code&gt; または &lt;code&gt;CONCURRENT&lt;/code&gt; されている、または&lt;a href=&quot;../spliterator#binding&quot;&gt;遅延バインディングを&lt;/a&gt;、それはおそらく、より効率的に使用することです&lt;a href=&quot;#longStream(java.util.Spliterator.OfLong,boolean)&quot;&gt; &lt;code&gt;longStream(java.util.Spliterator.OfLong, boolean)&lt;/code&gt; &lt;/a&gt;代わりに。</target>
        </trans-unit>
        <trans-unit id="148567bd1b6747400177d4608517d55a74fd6918" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;#stream(java.util.Spliterator,boolean)&quot;&gt;&lt;code&gt;stream(java.util.Spliterator, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">特性を報告spliteratorsについて &lt;code&gt;IMMUTABLE&lt;/code&gt; または &lt;code&gt;CONCURRENT&lt;/code&gt; されている、または&lt;a href=&quot;../spliterator#binding&quot;&gt;遅延バインディングを&lt;/a&gt;、それはおそらくより多くの利用に効率的である&lt;a href=&quot;#stream(java.util.Spliterator,boolean)&quot;&gt; &lt;code&gt;stream(java.util.Spliterator, boolean)&lt;/code&gt; &lt;/a&gt;の代わりに。</target>
        </trans-unit>
        <trans-unit id="fad206ccade197d1c3cdd9d97321b934f1f258a2" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;streamsupport#doubleStream-java.util.Spliterator.OfDouble-boolean-&quot;&gt;&lt;code&gt;doubleStream(java.util.Spliterator.OfDouble, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;IMMUTABLE&lt;/code&gt; または &lt;code&gt;CONCURRENT&lt;/code&gt; の特性を報告するスプリッター、または&lt;a href=&quot;../spliterator#binding&quot;&gt;遅延バインディングの&lt;/a&gt;場合、代わりに&lt;a href=&quot;streamsupport#doubleStream-java.util.Spliterator.OfDouble-boolean-&quot;&gt; &lt;code&gt;doubleStream(java.util.Spliterator.OfDouble, boolean)&lt;/code&gt; &lt;/a&gt;を使用する方が効率的です。</target>
        </trans-unit>
        <trans-unit id="10d39936197a6f658bf70a8886338926a7e07f8f" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;streamsupport#intStream-java.util.Spliterator.OfInt-boolean-&quot;&gt;&lt;code&gt;intStream(java.util.Spliterator.OfInt, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;IMMUTABLE&lt;/code&gt; または &lt;code&gt;CONCURRENT&lt;/code&gt; の特性を報告する、または&lt;a href=&quot;../spliterator#binding&quot;&gt;バインディング&lt;/a&gt;が遅いスプリッターの場合は、代わりに&lt;a href=&quot;streamsupport#intStream-java.util.Spliterator.OfInt-boolean-&quot;&gt; &lt;code&gt;intStream(java.util.Spliterator.OfInt, boolean)&lt;/code&gt; &lt;/a&gt;を使用する方が効率的です。</target>
        </trans-unit>
        <trans-unit id="20fb5d2059249e6adb6fc28ea0b2d832633b253a" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;streamsupport#longStream-java.util.Spliterator.OfLong-boolean-&quot;&gt;&lt;code&gt;longStream(java.util.Spliterator.OfLong, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;IMMUTABLE&lt;/code&gt; または &lt;code&gt;CONCURRENT&lt;/code&gt; の特性を報告するスプリッター、または&lt;a href=&quot;../spliterator#binding&quot;&gt;遅延バインディングの&lt;/a&gt;場合、代わりに&lt;a href=&quot;streamsupport#longStream-java.util.Spliterator.OfLong-boolean-&quot;&gt; &lt;code&gt;longStream(java.util.Spliterator.OfLong, boolean)&lt;/code&gt; &lt;/a&gt;を使用する方が効率的です。</target>
        </trans-unit>
        <trans-unit id="4160b6cd117fad4ed84680b4ead6ade57d473b25" translate="yes" xml:space="preserve">
          <source>For spliterators that report a characteristic of &lt;code&gt;IMMUTABLE&lt;/code&gt; or &lt;code&gt;CONCURRENT&lt;/code&gt;, or that are &lt;a href=&quot;../spliterator#binding&quot;&gt;late-binding&lt;/a&gt;, it is likely more efficient to use &lt;a href=&quot;streamsupport#stream-java.util.Spliterator-boolean-&quot;&gt;&lt;code&gt;stream(java.util.Spliterator, boolean)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;code&gt;IMMUTABLE&lt;/code&gt; または &lt;code&gt;CONCURRENT&lt;/code&gt; の特性を報告するスプリッター、または&lt;a href=&quot;../spliterator#binding&quot;&gt;遅延バインディングの&lt;/a&gt;場合、代わりに&lt;a href=&quot;streamsupport#stream-java.util.Spliterator-boolean-&quot;&gt; &lt;code&gt;stream(java.util.Spliterator, boolean)&lt;/code&gt; &lt;/a&gt;を使用する方が効率的です。</target>
        </trans-unit>
        <trans-unit id="26f58254cdff2a06f3d6d9734d80dbfafad4e87f" translate="yes" xml:space="preserve">
          <source>For strict parsing, the number of characters allowed by &lt;code&gt;width&lt;/code&gt; to &lt;code&gt;maxWidth&lt;/code&gt; are parsed. For lenient parsing, the number of characters must be at least 1 and less than 10. If the number of digits parsed is equal to &lt;code&gt;width&lt;/code&gt; and the value is positive, the value of the field is computed to be the first number greater than or equal to the &lt;code&gt;baseValue&lt;/code&gt; with the same least significant characters, otherwise the value parsed is the field value. This allows a reduced value to be entered for values in range of the baseValue and width and absolute values can be entered for values outside the range.</source>
          <target state="translated">厳密な解析では、 &lt;code&gt;width&lt;/code&gt; から &lt;code&gt;maxWidth&lt;/code&gt; までに許可されている文字数が解析されます。緩やかな解析の場合、文字数は1以上、10未満でなければなりません。解析される桁数が &lt;code&gt;width&lt;/code&gt; と等しく、値が正の場合、フィールドの値は最初の数値以上になるように計算されます &lt;code&gt;baseValue&lt;/code&gt; 同じ最下位文字で、そうでない場合は解析された値は、フィールドの値です。これにより、baseValueと幅の範囲内の値に削減値を入力でき、範囲外の値に絶対値を入力できます。</target>
        </trans-unit>
        <trans-unit id="7454110d6c362813ee11506433ae73a93c3882b6" translate="yes" xml:space="preserve">
          <source>For style sheet languages that support the concept of style sheet inclusion, this attribute represents the including style sheet, if one exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c44c1fef329f7f25959b79f780bae4c4660a5dc" translate="yes" xml:space="preserve">
          <source>For style sheet languages that support the concept of style sheet inclusion, this attribute represents the including style sheet, if one exists. If the style sheet is a top-level style sheet, or the style sheet language does not support inclusion, the value of this attribute is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df93252e1ef16c3279772a8887b08c66190d6d6" translate="yes" xml:space="preserve">
          <source>For systems that do not support federation, the name arguments (in either &lt;code&gt;Name&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt; forms) and the names returned in &lt;code&gt;NamingEnumeration&lt;/code&gt; may be names in their own namespace rather than names in a composite namespace, at the discretion of the service provider.</source>
          <target state="translated">フェデレーションをサポートしないシステムの場合、名前引数（ &lt;code&gt;Name&lt;/code&gt; または &lt;code&gt;String&lt;/code&gt; 形式）および &lt;code&gt;NamingEnumeration&lt;/code&gt; で返される名前は、サービスプロバイダーの裁量により、複合名前空間の名前ではなく、独自の名前空間の名前になる場合があります。</target>
        </trans-unit>
        <trans-unit id="4c36c0d5e03fbbc8eeeb250c08d04988226b782f" translate="yes" xml:space="preserve">
          <source>For systems that support federation, &lt;code&gt;String&lt;/code&gt; name arguments to &lt;code&gt;Context&lt;/code&gt; methods are composite names. Name arguments that are instances of &lt;code&gt;CompositeName&lt;/code&gt; are treated as composite names, while &lt;code&gt;Name&lt;/code&gt; arguments that are not instances of &lt;code&gt;CompositeName&lt;/code&gt; are treated as compound names (which might be instances of &lt;code&gt;CompoundName&lt;/code&gt; or other implementations of compound names). This allows the results of &lt;code&gt;NameParser.parse()&lt;/code&gt; to be used as arguments to the &lt;code&gt;Context&lt;/code&gt; methods. Prior to JNDI 1.2, all name arguments were treated as composite names.</source>
          <target state="translated">フェデレーションをサポートするシステムの場合、 &lt;code&gt;Context&lt;/code&gt; メソッドへの &lt;code&gt;String&lt;/code&gt; 名引数は複合名です。 &lt;code&gt;CompositeName&lt;/code&gt; のインスタンスであるName引数は複合名として扱われますが、 &lt;code&gt;CompositeName&lt;/code&gt; のインスタンスではない &lt;code&gt;Name&lt;/code&gt; 引数は複合名（ &lt;code&gt;CompoundName&lt;/code&gt; のインスタンスまたは複合名の他の実装である可能性があります）として扱われます。これにより、 &lt;code&gt;NameParser.parse()&lt;/code&gt; の結果を &lt;code&gt;Context&lt;/code&gt; メソッドの引数として使用できます。JNDI 1.2より前は、すべての名前引数は複合名として扱われていました。</target>
        </trans-unit>
        <trans-unit id="f935a46a38882498b2fd69c4831dee68e2e937c5" translate="yes" xml:space="preserve">
          <source>For target values which will be frequently updated, consider using a &lt;a href=&quot;volatilecallsite&quot;&gt;volatile call site&lt;/a&gt; instead.</source>
          <target state="translated">頻繁に更新されるターゲット値については、代わりに&lt;a href=&quot;volatilecallsite&quot;&gt;揮発性呼び出しサイトの&lt;/a&gt;使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="cfa72173fbc4e278072cdd080d8c5237f40fa65a" translate="yes" xml:space="preserve">
          <source>For text deletion, the &lt;code&gt;oldValue&lt;/code&gt; is an &lt;code&gt;AccessibleTextSequence&lt;/code&gt; specifying the text that was deleted and the &lt;code&gt;newValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">テキスト削除の場合、 &lt;code&gt;oldValue&lt;/code&gt; は削除されたテキストを指定する &lt;code&gt;AccessibleTextSequence&lt;/code&gt; であり、 &lt;code&gt;newValue&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7269ea0cc24dd493dddf3eac9f6e8cccb42ee32f" translate="yes" xml:space="preserve">
          <source>For text insertion, the &lt;code&gt;oldValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and the &lt;code&gt;newValue&lt;/code&gt; is an &lt;code&gt;AccessibleTextSequence&lt;/code&gt; specifying the text that was inserted.</source>
          <target state="translated">テキスト挿入の場合、 &lt;code&gt;oldValue&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; であり、 &lt;code&gt;newValue&lt;/code&gt; は挿入されたテキストを指定する &lt;code&gt;AccessibleTextSequence&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3d9e3c5d8fa00a75d19707b2f2902a47b97f60b0" translate="yes" xml:space="preserve">
          <source>For text replacement, the &lt;code&gt;oldValue&lt;/code&gt; is an &lt;code&gt;AccessibleTextSequence&lt;/code&gt; specifying the old text and the &lt;code&gt;newValue&lt;/code&gt; is an &lt;code&gt;AccessibleTextSequence&lt;/code&gt; specifying the new text.</source>
          <target state="translated">テキスト置換の場合、 &lt;code&gt;oldValue&lt;/code&gt; は古いテキストを指定する &lt;code&gt;AccessibleTextSequence&lt;/code&gt; であり、 &lt;code&gt;newValue&lt;/code&gt; は新しいテキストを指定する &lt;code&gt;AccessibleTextSequence&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b8365274e15659426f7246197d05cab03f982ba1" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#getAttribute(javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, attribute, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下のため&lt;a href=&quot;#getAttribute(javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;方法、呼び出し側の権限は暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, attribute, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23f273aef5167ca16f1d1df68e6919c8910a5d3d" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#getAttributes(javax.management.ObjectName,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;getAttributes&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each attribute &lt;em&gt;a&lt;/em&gt; in the &lt;a href=&quot;attributelist&quot;&gt;&lt;code&gt;AttributeList&lt;/code&gt;&lt;/a&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that attribute had not been in the supplied list.</source>
          <target state="translated">以下のため&lt;a href=&quot;#getAttributes(javax.management.ObjectName,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;getAttributes&lt;/code&gt; &lt;/a&gt;方法、呼び出し側の権限は暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt;。さらに、&lt;a href=&quot;attributelist&quot;&gt; &lt;code&gt;AttributeList&lt;/code&gt; &lt;/a&gt;内の各属性&lt;em&gt;a&lt;/em&gt;について、呼び出し元のアクセス許可が&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt;&lt;em&gt;a&lt;/em&gt;、name、 &quot;getAttribute&quot;）を意味しない場合、MBeanサーバーはその属性が指定されたリストにないかのように動作します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e082abdbf8b25df918965d8fd0a7c66abff5bd6e" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#getClassLoader(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getClassLoader&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, loaderName,
 &quot;getClassLoader&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下のため&lt;a href=&quot;#getClassLoader(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getClassLoader&lt;/code&gt; &lt;/a&gt;方法、呼び出し側の権限は暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, loaderName, &quot;getClassLoader&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="190c1b9a4e8b5dc26519eb318f65181b9defc626" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#getClassLoaderFor(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getClassLoaderFor&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, mbeanName,
 &quot;getClassLoaderFor&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#getClassLoaderFor(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getClassLoaderFor&lt;/code&gt; の&lt;/a&gt;方法、呼び出し側の権限は暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, mbeanName, &quot;getClassLoaderFor&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7dc275ddd537d8d7c349ba29e9c411ab2ea02398" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#getClassLoaderRepository()&quot;&gt;&lt;code&gt;getClassLoaderRepository&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;getClassLoaderRepository&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#getClassLoaderRepository()&quot;&gt; &lt;code&gt;getClassLoaderRepository&lt;/code&gt; &lt;/a&gt;方法、呼び出し側の権限は暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;getClassLoaderRepository&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c53b1b8f34b83d9ed1250c21b9352597438cda11" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#queryMBeans(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt;&lt;code&gt;queryMBeans&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;queryMBeans&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each MBean &lt;em&gt;n&lt;/em&gt; that matches &lt;code&gt;name&lt;/code&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, &lt;em&gt;n&lt;/em&gt;, &quot;queryMBeans&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that MBean did not exist.</source>
          <target state="translated">&lt;a href=&quot;#queryMBeans(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt; &lt;code&gt;queryMBeans&lt;/code&gt; &lt;/a&gt;メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;queryMBeans&quot;)&lt;/code&gt; &lt;/a&gt;。さらに、 &lt;code&gt;name&lt;/code&gt; に一致するMBean &lt;em&gt;n&lt;/em&gt;ごとに、呼び出し元のアクセス許可が&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, &lt;em&gt;n&lt;/em&gt;, &quot;queryMBeans&quot;)&lt;/code&gt; &lt;/a&gt;&lt;em&gt;n&lt;/em&gt;、 &quot;queryMBeans&quot;）を意味しない場合、MBeanサーバーはそのMBeanが存在しないかのように動作します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="778605b295314d4a6d32d7a0c2fb6f1feac04d44" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#queryNames(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt;&lt;code&gt;queryNames&lt;/code&gt;&lt;/a&gt; method, the checks are the same as for &lt;code&gt;queryMBeans&lt;/code&gt; except that &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; is used instead of &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; in the &lt;code&gt;MBeanPermission&lt;/code&gt; objects. Note that a &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; permission implies the corresponding &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; permission.</source>
          <target state="translated">ため&lt;a href=&quot;#queryNames(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt; &lt;code&gt;queryNames&lt;/code&gt; の&lt;/a&gt;方法、チェックはと同じである &lt;code&gt;queryMBeans&lt;/code&gt; ことを除いて &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; の代わりに使用される &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; に &lt;code&gt;MBeanPermission&lt;/code&gt; ではオブジェクト。 &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; 権限は、対応する &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; 権限を意味することに注意してください。</target>
        </trans-unit>
        <trans-unit id="b6d30f6448a4da148b2ba1a363fbb778821a0e8e" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#registerMBean(java.lang.Object,javax.management.ObjectName)&quot;&gt;&lt;code&gt;registerMBean&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;registerMBean&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#registerMBean(java.lang.Object,javax.management.ObjectName)&quot;&gt; &lt;code&gt;registerMBean&lt;/code&gt; &lt;/a&gt;メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;registerMBean&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7a46688ec74cb638650657f0ae04c971ba2c8493" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#setAttribute(javax.management.ObjectName,javax.management.Attribute)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, attrName, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;attrName&lt;/code&gt; is &lt;a href=&quot;attribute#getName()&quot;&gt;&lt;code&gt;attribute.getName()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下のため&lt;a href=&quot;#setAttribute(javax.management.ObjectName,javax.management.Attribute)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, attrName, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;attrName&lt;/code&gt; ではある&lt;a href=&quot;attribute#getName()&quot;&gt; &lt;code&gt;attribute.getName()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3127e4fe03e65d132a348b4a4c15804187a89206" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#setAttributes(javax.management.ObjectName,javax.management.AttributeList)&quot;&gt;&lt;code&gt;setAttributes&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each attribute &lt;em&gt;a&lt;/em&gt; in the &lt;a href=&quot;attributelist&quot;&gt;&lt;code&gt;AttributeList&lt;/code&gt;&lt;/a&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that attribute had not been in the supplied list.</source>
          <target state="translated">以下の場合&lt;a href=&quot;#setAttributes(javax.management.ObjectName,javax.management.AttributeList)&quot;&gt; &lt;code&gt;setAttributes&lt;/code&gt; &lt;/a&gt;メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt;。さらに、&lt;a href=&quot;attributelist&quot;&gt; &lt;code&gt;AttributeList&lt;/code&gt; &lt;/a&gt;内の各属性&lt;em&gt;a&lt;/em&gt;について、呼び出し元のアクセス許可が&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt;&lt;em&gt;a&lt;/em&gt;、name、 &quot;setAttribute&quot;）を意味しない場合、MBeanサーバーはその属性が指定されたリストにないかのように動作します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="599fec1bc61d3b18b6bb471c85bdf5d2c3831da9" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;#unregisterMBean(javax.management.ObjectName)&quot;&gt;&lt;code&gt;unregisterMBean&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;unregisterMBean&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#unregisterMBean(javax.management.ObjectName)&quot;&gt; &lt;code&gt;unregisterMBean&lt;/code&gt; &lt;/a&gt;メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;unregisterMBean&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="07a529682b90dbb4f21872bf4c556169d936d61f" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getAttribute-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, attribute, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下のため&lt;a href=&quot;mbeanserver#getAttribute-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;方法、呼び出し側の権限は暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, attribute, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ddbaf08a3d47f1c0d9927806eb60a1f290a58c7b" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getAttributes-javax.management.ObjectName-java.lang.String:A-&quot;&gt;&lt;code&gt;getAttributes&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each attribute &lt;em&gt;a&lt;/em&gt; in the &lt;a href=&quot;attributelist&quot;&gt;&lt;code&gt;AttributeList&lt;/code&gt;&lt;/a&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;getAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that attribute had not been in the supplied list.</source>
          <target state="translated">以下のため&lt;a href=&quot;mbeanserver#getAttributes-javax.management.ObjectName-java.lang.String:A-&quot;&gt; &lt;code&gt;getAttributes&lt;/code&gt; &lt;/a&gt;方法、呼び出し側の権限は暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt;。また、各属性のために&lt;em&gt;A&lt;/em&gt;で&lt;a href=&quot;attributelist&quot;&gt; &lt;code&gt;AttributeList&lt;/code&gt; &lt;/a&gt;、発信者の許可が意味するものではありません場合は、&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;getAttribute&quot;)&lt;/code&gt; &lt;/a&gt;その属性が与え一覧にしていなかったかのように、MBeanサーバーが動作します。</target>
        </trans-unit>
        <trans-unit id="bf51b6429c6774bbbbb436da1863834e3f600b2e" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getClassLoader-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getClassLoader&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, loaderName,
 &quot;getClassLoader&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下のため&lt;a href=&quot;mbeanserver#getClassLoader-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getClassLoader&lt;/code&gt; &lt;/a&gt;方法、呼び出し側の権限は暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, loaderName, &quot;getClassLoader&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3fe5e86cb960b8bf74a81e8cf6836ae546034489" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getClassLoaderFor-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getClassLoaderFor&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, mbeanName,
 &quot;getClassLoaderFor&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mbeanserver#getClassLoaderFor-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getClassLoaderFor&lt;/code&gt; の&lt;/a&gt;方法、呼び出し側の権限は暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, mbeanName, &quot;getClassLoaderFor&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d13aa3f80a8c0aa789c154b81017939d57a4df0e" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getClassLoaderRepository--&quot;&gt;&lt;code&gt;getClassLoaderRepository&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;getClassLoaderRepository&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mbeanserver#getClassLoaderRepository--&quot;&gt; &lt;code&gt;getClassLoaderRepository&lt;/code&gt; &lt;/a&gt;方法、呼び出し側の権限は暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;getClassLoaderRepository&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36aa2847328675e1fd0ef997bc609841c5ffdba8" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getDomains--&quot;&gt;&lt;code&gt;getDomains&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;getDomains&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each domain &lt;var&gt;d&lt;/var&gt; in the returned array, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(null, null, new ObjectName(&quot;&lt;var&gt;d&lt;/var&gt;:x=x&quot;),
 &quot;getDomains&quot;)&lt;/code&gt;&lt;/a&gt;, the domain is eliminated from the array. Here, &lt;code&gt;x=x&lt;/code&gt; is any &lt;var&gt;key=value&lt;/var&gt; pair, needed to satisfy ObjectName's constructor but not otherwise relevant.</source>
          <target state="translated">&lt;a href=&quot;mbeanserver#getDomains--&quot;&gt; &lt;code&gt;getDomains&lt;/code&gt; の&lt;/a&gt;方法、呼び出し側の権限は暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;getDomains&quot;)&lt;/code&gt; &lt;/a&gt;。さらに、返された配列の各ドメイン &lt;var&gt;d&lt;/var&gt; について、呼び出し元の権限が&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(null, null, new ObjectName(&quot;&lt;var&gt;d&lt;/var&gt;:x=x&quot;), &quot;getDomains&quot;)&lt;/code&gt; &lt;/a&gt;意味しない場合、ドメインは配列から削除されます。ここで、 &lt;code&gt;x=x&lt;/code&gt; は任意の &lt;var&gt;key=value&lt;/var&gt; ペアであり、ObjectNameのコンストラクターを満たすために必要ですが、それ以外の場合は関係ありません。</target>
        </trans-unit>
        <trans-unit id="35ded60bc9272f51bebab45845bcfea544ce03dd" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getMBeanInfo-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getMBeanInfo&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getMBeanInfo&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mbeanserver#getMBeanInfo-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getMBeanInfo&lt;/code&gt; メソッドの&lt;/a&gt;メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getMBeanInfo&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbc22db4e65eb35d8c1286bbd27476f8bfe46541" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#getObjectInstance-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getObjectInstance&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getObjectInstance&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mbeanserver#getObjectInstance-javax.management.ObjectName-&quot;&gt; &lt;code&gt;getObjectInstance&lt;/code&gt; の&lt;/a&gt;方法、呼び出し側の権限は暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getObjectInstance&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d65efe8a2194085110664d672435aca72c22b0c" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#invoke-javax.management.ObjectName-java.lang.String-java.lang.Object:A-java.lang.String:A-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, operationName, name, &quot;invoke&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下のため&lt;a href=&quot;mbeanserver#invoke-javax.management.ObjectName-java.lang.String-java.lang.Object:A-java.lang.String:A-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, operationName, name, &quot;invoke&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f5ec4bf97218bf65b28d8302d714f45e4025fe7" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#isInstanceOf-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;isInstanceOf&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;isInstanceOf&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mbeanserver#isInstanceOf-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;isInstanceOf&lt;/code&gt; の&lt;/a&gt;方法、呼び出し側の権限は暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;isInstanceOf&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="858b78f3418d32b14c78d61a0f9406ea6c007add" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#queryMBeans-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt;&lt;code&gt;queryMBeans&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;queryMBeans&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each MBean &lt;em&gt;n&lt;/em&gt; that matches &lt;code&gt;name&lt;/code&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, &lt;em&gt;n&lt;/em&gt;, &quot;queryMBeans&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that MBean did not exist.</source>
          <target state="translated">&lt;a href=&quot;mbeanserver#queryMBeans-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt; &lt;code&gt;queryMBeans&lt;/code&gt; &lt;/a&gt;メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;queryMBeans&quot;)&lt;/code&gt; &lt;/a&gt;。さらに、 &lt;code&gt;name&lt;/code&gt; に一致する各MBean &lt;em&gt;n&lt;/em&gt;について、呼び出し元のアクセス権が&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, &lt;em&gt;n&lt;/em&gt;, &quot;queryMBeans&quot;)&lt;/code&gt; &lt;/a&gt;&lt;em&gt;n&lt;/em&gt;、 &quot;queryMBeans&quot;）を示さない場合、MBeanサーバーはそのMBeanが存在しないかのように動作します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ec1a6bbead7c891292d17ad2571fba7958073a8" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#queryNames-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt;&lt;code&gt;queryNames&lt;/code&gt;&lt;/a&gt; method, the checks are the same as for &lt;code&gt;queryMBeans&lt;/code&gt; except that &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; is used instead of &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; in the &lt;code&gt;MBeanPermission&lt;/code&gt; objects. Note that a &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; permission implies the corresponding &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; permission.</source>
          <target state="translated">ため&lt;a href=&quot;mbeanserver#queryNames-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt; &lt;code&gt;queryNames&lt;/code&gt; の&lt;/a&gt;方法、チェックはと同じである &lt;code&gt;queryMBeans&lt;/code&gt; ことを除いて &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; の代わりに使用される &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; に &lt;code&gt;MBeanPermission&lt;/code&gt; ではオブジェクト。 &lt;code&gt;&quot;queryMBeans&quot;&lt;/code&gt; 権限は、対応する &lt;code&gt;&quot;queryNames&quot;&lt;/code&gt; 権限を意味することに注意してください。</target>
        </trans-unit>
        <trans-unit id="dd26c7a9cbf6a5c71bccc701e255f8feaa4c4fff" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#registerMBean-java.lang.Object-javax.management.ObjectName-&quot;&gt;&lt;code&gt;registerMBean&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;registerMBean&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mbeanserver#registerMBean-java.lang.Object-javax.management.ObjectName-&quot;&gt; &lt;code&gt;registerMBean&lt;/code&gt; &lt;/a&gt;メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;registerMBean&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa5fa7717acc4a5f69b8a3ba980fc0b65552537b" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#setAttribute-javax.management.ObjectName-javax.management.Attribute-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, attrName, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;attrName&lt;/code&gt; is &lt;a href=&quot;attribute#getName--&quot;&gt;&lt;code&gt;attribute.getName()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下のため&lt;a href=&quot;mbeanserver#setAttribute-javax.management.ObjectName-javax.management.Attribute-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, attrName, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;attrName&lt;/code&gt; ではある&lt;a href=&quot;attribute#getName--&quot;&gt; &lt;code&gt;attribute.getName()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a90e1d8dab00350d546cff27eec4811d28de3f6" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#setAttributes-javax.management.ObjectName-javax.management.AttributeList-&quot;&gt;&lt;code&gt;setAttributes&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each attribute &lt;em&gt;a&lt;/em&gt; in the &lt;a href=&quot;attributelist&quot;&gt;&lt;code&gt;AttributeList&lt;/code&gt;&lt;/a&gt;, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;setAttribute&quot;)&lt;/code&gt;&lt;/a&gt;, the MBean server will behave as if that attribute had not been in the supplied list.</source>
          <target state="translated">以下の場合&lt;a href=&quot;mbeanserver#setAttributes-javax.management.ObjectName-javax.management.AttributeList-&quot;&gt; &lt;code&gt;setAttributes&lt;/code&gt; &lt;/a&gt;メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt;。また、各属性のために&lt;em&gt;A&lt;/em&gt;で&lt;a href=&quot;attributelist&quot;&gt; &lt;code&gt;AttributeList&lt;/code&gt; &lt;/a&gt;、発信者の権限が意味するものではありません場合&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, &lt;em&gt;a&lt;/em&gt;, name, &quot;setAttribute&quot;)&lt;/code&gt; &lt;/a&gt;、MBeanのサーバは、その属性が提供されたリストにしていなかったかのように動作します。</target>
        </trans-unit>
        <trans-unit id="498e8bad40ab2aba1376c2975dbe1109a057e4b5" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserver#unregisterMBean-javax.management.ObjectName-&quot;&gt;&lt;code&gt;unregisterMBean&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;unregisterMBean&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mbeanserver#unregisterMBean-javax.management.ObjectName-&quot;&gt; &lt;code&gt;unregisterMBean&lt;/code&gt; &lt;/a&gt;メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;unregisterMBean&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="894a79786652fd406dbe2d9b1d75421314a9f30e" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserverconnection#getDomains()&quot;&gt;&lt;code&gt;getDomains&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(null, null, null, &quot;getDomains&quot;)&lt;/code&gt;&lt;/a&gt;. Additionally, for each domain &lt;var&gt;d&lt;/var&gt; in the returned array, if the caller's permissions do not imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(null, null, new ObjectName(&quot;&lt;var&gt;d&lt;/var&gt;:x=x&quot;),
 &quot;getDomains&quot;)&lt;/code&gt;&lt;/a&gt;, the domain is eliminated from the array. Here, &lt;code&gt;x=x&lt;/code&gt; is any &lt;var&gt;key=value&lt;/var&gt; pair, needed to satisfy ObjectName's constructor but not otherwise relevant.</source>
          <target state="translated">&lt;a href=&quot;mbeanserverconnection#getDomains()&quot;&gt; &lt;code&gt;getDomains&lt;/code&gt; の&lt;/a&gt;方法、呼び出し側の権限は暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(null, null, null, &quot;getDomains&quot;)&lt;/code&gt; &lt;/a&gt;。さらに、返された配列の各ドメイン &lt;var&gt;d&lt;/var&gt; について、呼び出し元のアクセス許可が&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(null, null, new ObjectName(&quot;&lt;var&gt;d&lt;/var&gt;:x=x&quot;), &quot;getDomains&quot;)&lt;/code&gt; &lt;/a&gt;意味しない場合、ドメインは配列から削除されます。ここで、 &lt;code&gt;x=x&lt;/code&gt; は任意の &lt;var&gt;key=value&lt;/var&gt; ペアであり、ObjectNameのコンストラクターを満たすために必要ですが、それ以外の場合は関係ありません。</target>
        </trans-unit>
        <trans-unit id="b9a75913ab49da09f34c1757df1d0cef5c86881f" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getMBeanInfo&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getMBeanInfo&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getMBeanInfo&lt;/code&gt; メソッドの&lt;/a&gt;メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getMBeanInfo&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="adf78cdbd31e96ea013ba638e3fc8f84eaac9a97" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserverconnection#getObjectInstance(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getObjectInstance&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;getObjectInstance&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mbeanserverconnection#getObjectInstance(javax.management.ObjectName)&quot;&gt; &lt;code&gt;getObjectInstance&lt;/code&gt; の&lt;/a&gt;方法、呼び出し側の権限は暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;getObjectInstance&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3f7424be29688688d940bd63416f7bf39a2ff8bd" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserverconnection#invoke(javax.management.ObjectName,java.lang.String,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, operationName, name, &quot;invoke&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下のため&lt;a href=&quot;mbeanserverconnection#invoke(javax.management.ObjectName,java.lang.String,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, operationName, name, &quot;invoke&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e9b66f4d611a96f9a5aa9f7bc1b8dc5bbdda644" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;mbeanserverconnection#isInstanceOf(javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;isInstanceOf&lt;/code&gt;&lt;/a&gt; method, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name, &quot;isInstanceOf&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mbeanserverconnection#isInstanceOf(javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;isInstanceOf&lt;/code&gt; の&lt;/a&gt;方法、呼び出し側の権限は暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;isInstanceOf&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6e2e70f14d21bee3396ce0d422cb726137c3a8e2" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;H1&lt;/code&gt; to &lt;code&gt;H6&lt;/code&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c743c047bf384a5b3deea57092610323a385da" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;H1&lt;/code&gt; to &lt;code&gt;H6&lt;/code&gt; elements. See the H1 element definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5106a75bcd658e2922a5b6c1b1bae014d5206d" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;Q&lt;/code&gt; and &lt;code&gt;BLOCKQUOTE&lt;/code&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed360b4d95045d8fe15e50d3174409e817d17c24" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;Q&lt;/code&gt; and &lt;code&gt;BLOCKQUOTE&lt;/code&gt; elements. See the Q element definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8f600b2d3f51c19e43ce489ac69af6701f49a5" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;addNotificationListener&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name,
 &quot;addNotificationListener&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;addNotificationListener&lt;/code&gt; のメソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;addNotificationListener&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="158c487d95ccee5e697a4a0b3019a2af7484037b" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;addNotificationListener&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name,
 &quot;addNotificationListener&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;addNotificationListener&lt;/code&gt; のメソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;addNotificationListener&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="587aaae3639acfe81cc64afdee6d0ade23c7b75b" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;createMBean&lt;/code&gt; methods, the caller's permissions must imply the permissions needed by the equivalent &lt;code&gt;instantiate&lt;/code&gt; followed by &lt;code&gt;registerMBean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;createMBean&lt;/code&gt; メソッド呼び出し元は、アクセス権は同等で必要なアクセス許可を意味するものでなければなりません &lt;code&gt;instantiate&lt;/code&gt; が続く &lt;code&gt;registerMBean&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="20ffdfa868345763a88829877c0b37aeb75759a9" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;instantiate&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, null, &quot;instantiate&quot;)&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;className&lt;/code&gt; is the name of the class which is to be instantiated.</source>
          <target state="translated">以下のために &lt;code&gt;instantiate&lt;/code&gt; メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, null, &quot;instantiate&quot;)&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;className&lt;/code&gt; がインスタンス化されるクラスの名前です。</target>
        </trans-unit>
        <trans-unit id="734e386c7b6f7d6551a6fee63ca653f21ab334bd" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;instantiate&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, null, &quot;instantiate&quot;)&lt;/code&gt;&lt;/a&gt;, where &lt;code&gt;className&lt;/code&gt; is the name of the class which is to be instantiated.</source>
          <target state="translated">以下のために &lt;code&gt;instantiate&lt;/code&gt; メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, null, &quot;instantiate&quot;)&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;className&lt;/code&gt; がインスタンス化されるクラスの名前です。</target>
        </trans-unit>
        <trans-unit id="9510b3d070ff7025d9a516b8a230d3fe5f87a5f3" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;remove&lt;/code&gt; methods that take two arguments, the following is returned:</source>
          <target state="translated">&lt;code&gt;remove&lt;/code&gt; 二つの引数を取る方法は、以下が返されます。</target>
        </trans-unit>
        <trans-unit id="ebcde0e97f3d9e96e3386a8a5f4e4db451f65870" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;removeNotificationListener&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name,
 &quot;removeNotificationListener&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下のため &lt;code&gt;removeNotificationListener&lt;/code&gt; メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#%3Cinit%3E(java.lang.String,java.lang.String,javax.management.ObjectName,java.lang.String)&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;removeNotificationListener&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69f05a461e498d5392d695eac6a4d13e36407ae8" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;removeNotificationListener&lt;/code&gt; methods, the caller's permissions must imply &lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt;&lt;code&gt;MBeanPermission(className, null, name,
 &quot;removeNotificationListener&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下のため &lt;code&gt;removeNotificationListener&lt;/code&gt; メソッド呼び出し元は、アクセス権は、暗示しなければなりません&lt;a href=&quot;mbeanpermission#MBeanPermission-java.lang.String-java.lang.String-javax.management.ObjectName-java.lang.String-&quot;&gt; &lt;code&gt;MBeanPermission(className, null, name, &quot;removeNotificationListener&quot;)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9271dae0fba74ef21f22433d478a297260a46d6" translate="yes" xml:space="preserve">
          <source>For the assertion &quot;someCount=127&quot;, for example, &lt;code&gt;attr&lt;/code&gt; is &quot;someCount&quot; and &lt;code&gt;value&lt;/code&gt; is &quot;127&quot;. The provider determines, based on the attribute ID (&quot;someCount&quot;) (and possibly its schema), that the attribute's value is an integer. It then parses the string &quot;127&quot; appropriately.</source>
          <target state="translated">たとえば、「someCount = 127」というアサーションの場合、 &lt;code&gt;attr&lt;/code&gt; は「someCount」で、 &lt;code&gt;value&lt;/code&gt; は「127」です。プロバイダーは、属性ID（ &quot;someCount&quot;）（およびそのスキーマ）に基づいて、属性の値が整数であると判断します。次に、文字列「127」を適切に解析します。</target>
        </trans-unit>
        <trans-unit id="bee936b5f5b2889b9390a8fc111ae587011b69cf" translate="yes" xml:space="preserve">
          <source>For the bound coordinates to be well formed, their types must be &lt;code&gt;T1, T2 ... Tn &lt;/code&gt;, where &lt;code&gt;T1, T2 ... Tn&lt;/code&gt; are the coordinate types starting at position &lt;code&gt;pos&lt;/code&gt; of the target var handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b2db76fc639b775a1752f6f4ab2e07b10c5889" translate="yes" xml:space="preserve">
          <source>For the boxing and unboxing filters to be well formed, their types must be of the form &lt;code&gt;(A... , S) -&amp;gt; T&lt;/code&gt; and &lt;code&gt;(A... , T) -&amp;gt; S&lt;/code&gt;, respectively, where &lt;code&gt;T&lt;/code&gt; is the type of the target var handle. If this is the case, the resulting var handle will have type &lt;code&gt;S&lt;/code&gt; and will feature the additional coordinates &lt;code&gt;A...&lt;/code&gt; (which will be appended to the coordinates of the target var handle).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62cdf9a055c7ff004e4e70c28dab11d33378e893" translate="yes" xml:space="preserve">
          <source>For the column &lt;code&gt;UPDATE_RULE&lt;/code&gt;, indicates that a primary key may not be updated if it has been imported by another table as a foreign key.</source>
          <target state="translated">列 &lt;code&gt;UPDATE_RULE&lt;/code&gt; の場合、主キーが別のテーブルによって外部キーとしてインポートされた場合、主キーが更新されない可能性があることを示します。</target>
        </trans-unit>
        <trans-unit id="2e35eed0cacf929c0a53c316cd4e08f72ef75dcf" translate="yes" xml:space="preserve">
          <source>For the column &lt;code&gt;UPDATE_RULE&lt;/code&gt;, indicates that a primary key may not be updated if it has been imported by another table as a foreign key. For the column &lt;code&gt;DELETE_RULE&lt;/code&gt;, indicates that a primary key may not be deleted if it has been imported by another table as a foreign key.</source>
          <target state="translated">列 &lt;code&gt;UPDATE_RULE&lt;/code&gt; の場合、主キーが別のテーブルによって外部キーとしてインポートされた場合、主キーが更新されない可能性があることを示します。列 &lt;code&gt;DELETE_RULE&lt;/code&gt; の場合、主キーが別のテーブルによって外部キーとしてインポートされている場合、主キーを削除できない可能性があることを示します。</target>
        </trans-unit>
        <trans-unit id="d724b744995e198fb7e69fc0f57d38e67e2ea58e" translate="yes" xml:space="preserve">
          <source>For the column &lt;code&gt;UPDATE_RULE&lt;/code&gt;, indicates that when the primary key is updated, the foreign key (imported key) is changed to agree with it.</source>
          <target state="translated">列 &lt;code&gt;UPDATE_RULE&lt;/code&gt; は、主キーが更新されると、外部キー（インポートされたキー）がそれに同意するように変更されることを示します。</target>
        </trans-unit>
        <trans-unit id="d6ef279dd538e07a259a0e964b5d39e024933826" translate="yes" xml:space="preserve">
          <source>For the column &lt;code&gt;UPDATE_RULE&lt;/code&gt;, indicates that when the primary key is updated, the foreign key (imported key) is changed to agree with it. For the column &lt;code&gt;DELETE_RULE&lt;/code&gt;, it indicates that when the primary key is deleted, rows that imported that key are deleted.</source>
          <target state="translated">列 &lt;code&gt;UPDATE_RULE&lt;/code&gt; は、主キーが更新されると、外部キー（インポートされたキー）がそれに同意するように変更されることを示します。列 &lt;code&gt;DELETE_RULE&lt;/code&gt; の場合、主キーが削除されると、そのキーをインポートした行が削除されることを示します。</target>
        </trans-unit>
        <trans-unit id="3ed7d546c07bf7bb43d070a3cd2adfaf92570184" translate="yes" xml:space="preserve">
          <source>For the columns &lt;code&gt;UPDATE_RULE&lt;/code&gt; and &lt;code&gt;DELETE_RULE&lt;/code&gt;, indicates that if the primary key has been imported, it cannot be updated or deleted.</source>
          <target state="translated">&lt;code&gt;UPDATE_RULE&lt;/code&gt; 列と &lt;code&gt;DELETE_RULE&lt;/code&gt; 列の場合、主キーがインポートされていると、更新または削除できないことを示します。</target>
        </trans-unit>
        <trans-unit id="652b817332b8bd073038d1acd7eb2577785a3489" translate="yes" xml:space="preserve">
          <source>For the columns &lt;code&gt;UPDATE_RULE&lt;/code&gt; and &lt;code&gt;DELETE_RULE&lt;/code&gt;, indicates that if the primary key is updated or deleted, the foreign key (imported key) is set to the default value.</source>
          <target state="translated">&lt;code&gt;UPDATE_RULE&lt;/code&gt; 列と &lt;code&gt;DELETE_RULE&lt;/code&gt; 列の場合、主キーが更新または削除された場合、外部キー（インポートされたキー）がデフォルト値に設定されることを示します。</target>
        </trans-unit>
        <trans-unit id="b7fcdd681027f98f9b0a5865b40fc52b7bea0a33" translate="yes" xml:space="preserve">
          <source>For the columns &lt;code&gt;UPDATE_RULE&lt;/code&gt; and &lt;code&gt;DELETE_RULE&lt;/code&gt;, indicates that when the primary key is updated or deleted, the foreign key (imported key) is changed to &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;UPDATE_RULE&lt;/code&gt; 列と &lt;code&gt;DELETE_RULE&lt;/code&gt; 列の場合、主キーが更新または削除されると、外部キー（インポートされたキー）が &lt;code&gt;NULL&lt;/code&gt; に変更されることを示します。</target>
        </trans-unit>
        <trans-unit id="0e81d4ac40547bcfb74b63ec729125f5e1c6b88a" translate="yes" xml:space="preserve">
          <source>For the constructors and static &lt;code&gt;exportObject&lt;/code&gt; methods, the stub for a remote object being exported is obtained as described in &lt;a href=&quot;../server/unicastremoteobject&quot;&gt;&lt;code&gt;UnicastRemoteObject&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">コンストラクターと静的 &lt;code&gt;exportObject&lt;/code&gt; メソッドの場合、エクスポートされるリモートオブジェクトのスタブは、&lt;a href=&quot;../server/unicastremoteobject&quot;&gt; &lt;code&gt;UnicastRemoteObject&lt;/code&gt; で&lt;/a&gt;説明されているように取得されます。</target>
        </trans-unit>
        <trans-unit id="8db9cd3eaad5c22591d41a15feec87cd973ac5e8" translate="yes" xml:space="preserve">
          <source>For the convenience of layout managers, calculates information about the size and position of components.</source>
          <target state="translated">レイアウト管理者の便宜のために、コンポーネントのサイズと位置に関する情報を計算します。</target>
        </trans-unit>
        <trans-unit id="3ab6053cfb18d310258a73ec8d4622a5c35199e6" translate="yes" xml:space="preserve">
          <source>For the convenience of layout managers, calculates information about the size and position of components. All size and position calculation methods are class methods that take arrays of SizeRequirements as arguments. The SizeRequirements class supports two types of layout:</source>
          <target state="translated">レイアウト管理者の便宜のために、コンポーネントのサイズと位置に関する情報を計算します。すべてのサイズと位置の計算メソッドは、引数としてSizeRequirementsの配列を取るクラス・メソッドです。SizeRequirementsクラスは、2種類のレイアウトをサポートしています。</target>
        </trans-unit>
        <trans-unit id="6e83ebacad213ea3f65edbf4cbfeab6eefb09772" translate="yes" xml:space="preserve">
          <source>For the coordinate filters to be well formed, their types must be of the form &lt;code&gt;S1 -&amp;gt; T1, S2 -&amp;gt; T1 ... Sn -&amp;gt; Tn&lt;/code&gt;, where &lt;code&gt;T1, T2 ... Tn&lt;/code&gt; are the coordinate types starting at position &lt;code&gt;pos&lt;/code&gt; of the target var handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa93951bb48d44f6c5191751b6a1e590e5224950" translate="yes" xml:space="preserve">
          <source>For the default &lt;code&gt;LoggerFinder&lt;/code&gt; implementation using &lt;code&gt;java.util.logging&lt;/code&gt; as its backend, refer to &lt;a href=&quot;../../../java.logging/java/util/logging/package-summary&quot;&gt;&lt;code&gt;java.util.logging&lt;/code&gt;&lt;/a&gt; for logging configuration. For the default &lt;code&gt;LoggerFinder&lt;/code&gt; implementation returning simple loggers when the &lt;code&gt;java.logging&lt;/code&gt; module is absent, the configuration is implementation dependent.</source>
          <target state="translated">バックエンドとして &lt;code&gt;java.util.logging&lt;/code&gt; を使用するデフォルトの &lt;code&gt;LoggerFinder&lt;/code&gt; 実装については、ロギング構成について&lt;a href=&quot;../../../java.logging/java/util/logging/package-summary&quot;&gt; &lt;code&gt;java.util.logging&lt;/code&gt; &lt;/a&gt;を参照してください。 &lt;code&gt;java.logging&lt;/code&gt; モジュールがない場合に単純なロガーを返すデフォルトの &lt;code&gt;LoggerFinder&lt;/code&gt; 実装の場合、構成は実装に依存します。</target>
        </trans-unit>
        <trans-unit id="e323244daf1540708498ed48a430fbf93176610a" translate="yes" xml:space="preserve">
          <source>For the deprecated &lt;code&gt;deserialize&lt;/code&gt; methods, the required permissions are the same as for the methods that replace them.</source>
          <target state="translated">非推奨の非 &lt;code&gt;deserialize&lt;/code&gt; メソッドの場合、必要なアクセス許可は、それらを置き換えるメソッドの場合と同じです。</target>
        </trans-unit>
        <trans-unit id="a73e6ebc41f1d4baf8f59c549e375b1223b0077c" translate="yes" xml:space="preserve">
          <source>For the first selected row expandedness will be toggled.</source>
          <target state="translated">最初に選択された行の展開度がトグルされます。</target>
        </trans-unit>
        <trans-unit id="38687a8b8af780e9dffdd379f23c6d1d05a7d5ca" translate="yes" xml:space="preserve">
          <source>For the fixed-length type JDBC &lt;code&gt;CHAR&lt;/code&gt;, the &lt;code&gt;String&lt;/code&gt; object returned has exactly the same value the SQL &lt;code&gt;CHAR&lt;/code&gt; value had in the database, including any padding added by the database.</source>
          <target state="translated">固定長タイプの &lt;code&gt;CHAR&lt;/code&gt; 場合、返される &lt;code&gt;String&lt;/code&gt; オブジェクトは、データベースによって追加されたパディングを含め、 &lt;code&gt;CHAR&lt;/code&gt; 値がデータベースに持っていたのとまったく同じ値を持ちます。</target>
        </trans-unit>
        <trans-unit id="bb59ec91472ba3cd68ed0417d37ca0bf997762d7" translate="yes" xml:space="preserve">
          <source>For the fixed-length type JDBC &lt;code&gt;NCHAR&lt;/code&gt;, the &lt;code&gt;String&lt;/code&gt; object returned has exactly the same value the SQL &lt;code&gt;NCHAR&lt;/code&gt; value had in the database, including any padding added by the database.</source>
          <target state="translated">固定長タイプの &lt;code&gt;NCHAR&lt;/code&gt; 場合、返される &lt;code&gt;String&lt;/code&gt; オブジェクトは、データベースによって追加されたパディングを含め、 &lt;code&gt;NCHAR&lt;/code&gt; 値がデータベースに持っていたのとまったく同じ値を持ちます。</target>
        </trans-unit>
        <trans-unit id="e46aca6eab86f2b8c52afd99c9d142dfe56791c8" translate="yes" xml:space="preserve">
          <source>For the floating-point conversions &lt;code&gt;'a'&lt;/code&gt;, &lt;code&gt;'A'&lt;/code&gt;, &lt;code&gt;'e'&lt;/code&gt;, &lt;code&gt;'E'&lt;/code&gt;, and &lt;code&gt;'f'&lt;/code&gt; the precision is the number of digits after the radix point. If the conversion is &lt;code&gt;'g'&lt;/code&gt; or &lt;code&gt;'G'&lt;/code&gt;, then the precision is the total number of digits in the resulting magnitude after rounding.</source>
          <target state="translated">浮動小数点変換 &lt;code&gt;'a'&lt;/code&gt; 、 &lt;code&gt;'A'&lt;/code&gt; 、 &lt;code&gt;'e'&lt;/code&gt; 、 &lt;code&gt;'E'&lt;/code&gt; 、および &lt;code&gt;'f'&lt;/code&gt; の場合、精度は基数ポイントの後の桁数です。変換が &lt;code&gt;'g'&lt;/code&gt; または &lt;code&gt;'G'&lt;/code&gt; の場合、精度は丸め後の結果の大きさの合計桁数です。</target>
        </trans-unit>
        <trans-unit id="2edef0880ff500c3be071a1041e2785dfd7f0756" translate="yes" xml:space="preserve">
          <source>For the general mechanism to load service providers, see &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt;, which is the underlying standard mechanism used by this class.</source>
          <target state="translated">サービスプロバイダーをロードする一般的なメカニズムについては、このクラスで使用される基本的な標準メカニズムである&lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="24e6785472989839f3d8e9a7b3e91c6d6d57cacd" translate="yes" xml:space="preserve">
          <source>For the getter methods, a JDBC driver attempts to convert the underlying data to the Java type specified in the getter method and returns a suitable Java value. The JDBC specification has a table showing the allowable mappings from SQL types to Java types that can be used by the &lt;code&gt;ResultSet&lt;/code&gt; getter methods.</source>
          <target state="translated">getterメソッドの場合、JDBCドライバーは、基になるデータをgetterメソッドで指定されたJavaタイプに変換しようとし、適切なJava値を返します。JDBC仕様には、 &lt;code&gt;ResultSet&lt;/code&gt; ゲッターメソッドで使用できるSQLタイプからJavaタイプへの許容可能なマッピングを示す表があります。</target>
        </trans-unit>
        <trans-unit id="9c2caf26b9b9eb99484dcfe9c272d224c15db32d" translate="yes" xml:space="preserve">
          <source>For the header bytes CLA, INS, P1, and P2 the Java type &lt;code&gt;int&lt;/code&gt; is used to represent the 8 bit unsigned values. In the constructors, only the 8 lowest bits of the &lt;code&gt;int&lt;/code&gt; value specified by the application are significant. The accessor methods always return the byte as an unsigned value between 0 and 255.</source>
          <target state="translated">ヘッダーバイトCLA、INS、P1、およびP2の場合、Javaタイプ &lt;code&gt;int&lt;/code&gt; は、8ビットの符号なし値を表すために使用されます。コンストラクターでは、アプリケーションによって指定された &lt;code&gt;int&lt;/code&gt; 値の最下位8ビットのみが重要です。アクセサメソッドは常にバイトを0から255までの符号なしの値として返します。</target>
        </trans-unit>
        <trans-unit id="35be51934ab76e85073b98fe584645e3abdc336b" translate="yes" xml:space="preserve">
          <source>For the implementations of the methods described below, which all take a &lt;code&gt;String&lt;/code&gt; parameter named &lt;code&gt;codebase&lt;/code&gt; that is a space-separated list of URLs, each invocation has an associated</source>
          <target state="translated">以下で説明するメソッドの実装では、すべて、スペースで区切られたURLのリストである &lt;code&gt;codebase&lt;/code&gt; という名前の &lt;code&gt;String&lt;/code&gt; パラメーターを取ります。各呼び出しには、関連付けられた</target>
        </trans-unit>
        <trans-unit id="337b49be1ff6af10af540e0ace529d5ec996ff66" translate="yes" xml:space="preserve">
          <source>For the labels to be drawn on the slider, the returned &lt;code&gt;Hashtable&lt;/code&gt; must be passed into &lt;code&gt;setLabelTable&lt;/code&gt;, and &lt;code&gt;setPaintLabels&lt;/code&gt; must be set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">スライダーにラベルを描画するには、返された &lt;code&gt;Hashtable&lt;/code&gt; を &lt;code&gt;setLabelTable&lt;/code&gt; に渡し、 &lt;code&gt;setPaintLabels&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="06aaf863b78d2db68b84de64f043b5884e2a38d6" translate="yes" xml:space="preserve">
          <source>For the mathematically inclined, the</source>
          <target state="translated">数学的には</target>
        </trans-unit>
        <trans-unit id="4bf557c4e1091ca7cd2e9c48b51e297e05ef3bbb" translate="yes" xml:space="preserve">
          <source>For the method to be valid it must return a &lt;code&gt;SettingControl&lt;/code&gt; and only have one parameter, which should be a non-abstract subclass of &lt;a href=&quot;settingcontrol&quot;&gt;&lt;code&gt;SettingControl&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd365d472dc61c689cd01391bb26b289a209fa1a" translate="yes" xml:space="preserve">
          <source>For the methods that do not take an explicit source name and method name, the Logging framework will make a &quot;best effort&quot; to determine which class and method called into the logging method. However, it is important to realize that this automatically inferred information may only be approximate (or may even be quite wrong!). Virtual machines are allowed to do extensive optimizations when JITing and may entirely remove stack frames, making it impossible to reliably locate the calling class and method.</source>
          <target state="translated">明示的なソース名とメソッド名を取らないメソッドについては、ロギングフレームワークは「最善の努力」をして、どのクラスとメソッドがロギングメソッドに呼び出されたかを判断します。しかし、この自動的に推測される情報は近似的なものに過ぎないかもしれないことを認識することが重要です(あるいは、かなり間違っているかもしれません!)。仮想マシンは、JIT を行う際に大規模な最適化を行うことが許されており、スタックフレームを完全に削除することがあり、呼び出したクラスとメソッドを確実に特定することが不可能になります。</target>
        </trans-unit>
        <trans-unit id="918c0b7e8f769b516391a049b47963d833e03898" translate="yes" xml:space="preserve">
          <source>For the next level up, the writer checks to see if there are any conflicts, and if there are, it does not write anything to the data source. The problem with this concurrency level is that if another party has modified the corresponding data in the data source since the &lt;code&gt;RowSet&lt;/code&gt; object got its data, the changes made to the &lt;code&gt;RowSet&lt;/code&gt; object are lost. The &lt;code&gt;RIOptimisticProvider&lt;/code&gt; implementation uses this level of synchronization.</source>
          <target state="translated">次のレベルアップでは、ライターは競合があるかどうかを確認し、競合がある場合はデータソースに何も書き込みません。この同時実行レベルの問題は、 &lt;code&gt;RowSet&lt;/code&gt; オブジェクトがデータを取得してから、別のパーティがデータソース内の対応するデータを変更した &lt;code&gt;RowSet&lt;/code&gt; 、RowSetオブジェクトに加えられた変更が失われることです。 &lt;code&gt;RIOptimisticProvider&lt;/code&gt; の実装では、同期のこのレベルを使用しています。</target>
        </trans-unit>
        <trans-unit id="c5e212e3a9074256ce77a7e927e229b849e01470" translate="yes" xml:space="preserve">
          <source>For the purpose of loading, a service is represented by a single type, that is, a single interface or abstract class. (A concrete class can be used, but this is not recommended.) A provider of a given service contains one or more concrete classes that extend this</source>
          <target state="translated">ロードの目的のために、サービスは単一の型、つまり単一のインタフェースまたは抽象クラスで表現されます(具象クラスを使用することもできますが、これは推奨されません)。(具象クラスを使用することもできますが、これは推奨されません。)与えられたサービスのプロバイダは、これを拡張する 1 つ以上の具象クラスを含んでいます。</target>
        </trans-unit>
        <trans-unit id="1288ddcc9c4db5a49c8d29b85bd92bc7b437561a" translate="yes" xml:space="preserve">
          <source>For the returned &lt;code&gt;SynthLookAndFeel&lt;/code&gt; to be useful you need to invoke &lt;code&gt;load&lt;/code&gt; to specify the set of &lt;code&gt;SynthStyle&lt;/code&gt;s, or invoke &lt;code&gt;setStyleFactory&lt;/code&gt;.</source>
          <target state="translated">返された &lt;code&gt;SynthLookAndFeel&lt;/code&gt; を使用するには、 &lt;code&gt;load&lt;/code&gt; を呼び出して &lt;code&gt;SynthStyle&lt;/code&gt; のセットを指定するか、 &lt;code&gt;setStyleFactory&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="420e1533712c545c003744acf9162a0f799d5639" translate="yes" xml:space="preserve">
          <source>For the reverse process, when an object is bound into the namespace, JNDI provides &lt;em&gt;state factories&lt;/em&gt;. Continuing with the printer example, suppose the printer object is updated and rebound:</source>
          <target state="translated">逆のプロセスでは、オブジェクトが名前空間にバインドされると、JNDIが&lt;em&gt;状態ファクトリを&lt;/em&gt;提供します。プリンターの例を続けて、プリンターオブジェクトが更新され、リバウンドするとします。</target>
        </trans-unit>
        <trans-unit id="dd2ddad0a154f707a981a1a5aae2c41c34d69c2c" translate="yes" xml:space="preserve">
          <source>For the sake of brevity and clarity, pseudo-code is used throughout the descriptions of &lt;code&gt;BigDecimal&lt;/code&gt; methods. The pseudo-code expression &lt;code&gt;(i + j)&lt;/code&gt; is shorthand for &quot;a &lt;code&gt;BigDecimal&lt;/code&gt; whose value is that of the &lt;code&gt;BigDecimal&lt;/code&gt;&lt;code&gt;i&lt;/code&gt; added to that of the &lt;code&gt;BigDecimal&lt;/code&gt;&lt;code&gt;j&lt;/code&gt;.&quot; The pseudo-code expression &lt;code&gt;(i == j)&lt;/code&gt; is shorthand for &quot;&lt;code&gt;true&lt;/code&gt; if and only if the &lt;code&gt;BigDecimal&lt;/code&gt;&lt;code&gt;i&lt;/code&gt; represents the same value as the &lt;code&gt;BigDecimal&lt;/code&gt;&lt;code&gt;j&lt;/code&gt;.&quot; Other pseudo-code expressions are interpreted similarly. Square brackets are used to represent the particular &lt;code&gt;BigInteger&lt;/code&gt; and scale pair defining a &lt;code&gt;BigDecimal&lt;/code&gt; value; for example [19, 2] is the &lt;code&gt;BigDecimal&lt;/code&gt; numerically equal to 0.19 having a scale of 2.</source>
          <target state="translated">簡潔かつ明確にするために、 &lt;code&gt;BigDecimal&lt;/code&gt; メソッドの説明全体で疑似コードが使用されています。擬似コード式 &lt;code&gt;(i + j)&lt;/code&gt; の短縮形である「 &lt;code&gt;BigDecimal&lt;/code&gt; の値のものである &lt;code&gt;BigDecimal&lt;/code&gt; &lt;code&gt;i&lt;/code&gt; がのものに追加 &lt;code&gt;BigDecimal&lt;/code&gt; &lt;code&gt;j&lt;/code&gt; 。」擬似コード式 &lt;code&gt;(i == j)&lt;/code&gt; は、「 &lt;code&gt;BigDecimal&lt;/code&gt; &lt;code&gt;i&lt;/code&gt; が &lt;code&gt;BigDecimal&lt;/code&gt; &lt;code&gt;j&lt;/code&gt; と同じ値を表す場合にのみ &lt;code&gt;true&lt;/code&gt; 」の省略形です。他の疑似コード式も同様に解釈されます。角括弧は、特定の &lt;code&gt;BigInteger&lt;/code&gt; とスケールペアを表すために使用され、 &lt;code&gt;BigDecimal&lt;/code&gt; 値。たとえば、[ &lt;code&gt;BigDecimal&lt;/code&gt; ]は、スケールが2で数値的に0.19に等しいBigDecimalです。</target>
        </trans-unit>
        <trans-unit id="a3e36c82a3b0dbeb638b77cfd214bb7c619f87cb" translate="yes" xml:space="preserve">
          <source>For the sake of brevity and clarity, pseudo-code is used throughout the descriptions of BigInteger methods. The pseudo-code expression &lt;code&gt;(i + j)&lt;/code&gt; is shorthand for &quot;a BigInteger whose value is that of the BigInteger &lt;code&gt;i&lt;/code&gt; plus that of the BigInteger &lt;code&gt;j&lt;/code&gt;.&quot; The pseudo-code expression &lt;code&gt;(i == j)&lt;/code&gt; is shorthand for &quot;&lt;code&gt;true&lt;/code&gt; if and only if the BigInteger &lt;code&gt;i&lt;/code&gt; represents the same value as the BigInteger &lt;code&gt;j&lt;/code&gt;.&quot; Other pseudo-code expressions are interpreted similarly.</source>
          <target state="translated">簡潔さと明確さのために、BigIntegerメソッドの説明全体で疑似コードが使用されています。擬似コード式 &lt;code&gt;(i + j)&lt;/code&gt; は、「値がBigInteger &lt;code&gt;i&lt;/code&gt; の値とBigInteger &lt;code&gt;j&lt;/code&gt; の値を足したBigInteger」の省略形です。疑似コード式 &lt;code&gt;(i == j)&lt;/code&gt; は、「BigInteger &lt;code&gt;i&lt;/code&gt; がBigInteger &lt;code&gt;j&lt;/code&gt; と同じ値を表す場合にのみ &lt;code&gt;true&lt;/code&gt; 」の省略形です。他の疑似コード式も同様に解釈されます。</target>
        </trans-unit>
        <trans-unit id="1ef274c4392b2a272a81c02a6bbbe1acf4470fbd" translate="yes" xml:space="preserve">
          <source>For the sake of speed, this method does no checking for name conflicts or well-formedness: such checks are the responsibility of the application.</source>
          <target state="translated">スピードを上げるために、このメソッドは名前の競合や整形のチェックを行いません:そのようなチェックはアプリケーションの責任です。</target>
        </trans-unit>
        <trans-unit id="5f5c1893f57fef781a72da0605607bfefe31f220" translate="yes" xml:space="preserve">
          <source>For the sake of speed, this method does no checking to see if the attribute is already in the list: that is the responsibility of the application.</source>
          <target state="translated">スピードのために、このメソッドは属性が既にリストにあるかどうかのチェックを行いません:それはアプリケーションの責任です。</target>
        </trans-unit>
        <trans-unit id="6421651edc95497cb158a89700f5d65270e20e34" translate="yes" xml:space="preserve">
          <source>For the segment from 1972-11-03 (exact boundary discussed below) until further notice, the consensus international time scale is UTC (with leap seconds). In this segment, the Java Time-Scale is identical to &lt;a href=&quot;http://www.cl.cam.ac.uk/~mgk25/time/utc-sls/&quot;&gt;UTC-SLS&lt;/a&gt;. This is identical to UTC on days that do not have a leap second. On days that do have a leap second, the leap second is spread equally over the last 1000 seconds of the day, maintaining the appearance of exactly 86400 seconds per day.</source>
          <target state="translated">1972-11-03のセグメント（以下で説明する正確な境界）からさらに通知があるまで、コンセンサス国際時間スケールはUTC（うるう秒あり）です。このセグメントでは、Java Time-Scaleは&lt;a href=&quot;http://www.cl.cam.ac.uk/~mgk25/time/utc-sls/&quot;&gt;UTC-SLS&lt;/a&gt;と同じです。これは、うるう秒のない日のUTCと同じです。うるう秒のある日では、うるう秒はその日の最後の1000秒に均等に広がり、1日あたり正確に86400秒の外観を維持します。</target>
        </trans-unit>
        <trans-unit id="93c5667c98fb4c1cbb9fa0c8ce2360fb9ed70491" translate="yes" xml:space="preserve">
          <source>For the segment from 1972-11-03 (exact boundary discussed below) until further notice, the consensus international time scale is UTC (with leap seconds). In this segment, the Java Time-Scale is identical to &lt;a href=&quot;https://www.cl.cam.ac.uk/~mgk25/time/utc-sls/&quot;&gt;UTC-SLS&lt;/a&gt;. This is identical to UTC on days that do not have a leap second. On days that do have a leap second, the leap second is spread equally over the last 1000 seconds of the day, maintaining the appearance of exactly 86400 seconds per day.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1219d8605bba4589bebfd58c531fef13fd1ec85d" translate="yes" xml:space="preserve">
          <source>For the segment prior to 1972-11-03, extending back arbitrarily far, the consensus international time scale is defined to be UT1, applied proleptically, which is equivalent to the (mean) solar time on the prime meridian (Greenwich). In this segment, the Java Time-Scale is identical to the consensus international time scale. The exact boundary between the two segments is the instant where UT1 = UTC between 1972-11-03T00:00 and 1972-11-04T12:00.</source>
          <target state="translated">1972-11-03以前のセグメントでは、任意にさかのぼって、国際的なコンセンサス時間尺度はUT1と定義されており、これは主子午線(グリニッジ)上の(平均)太陽時間に相当します。このセグメントでは、Java時間スケールは国際的なコンセンサス時間スケールと同じである。2つのセグメント間の正確な境界は、1972-11-03T00:00から1972-11-04T12:00の間のUT1=UTCとなる瞬間です。</target>
        </trans-unit>
        <trans-unit id="62147cec184303427ef9bddf6cf83bee6e3ce949" translate="yes" xml:space="preserve">
          <source>For the server, this is the client's host; and for the client, it is the server's host. The name may not be a fully qualified host name or even a host name at all as it may represent a string encoding of the peer's network address. If such a name is desired, it might be resolved through a name service based on the value returned by this method.</source>
          <target state="translated">サーバにとってはクライアントのホストであり、クライアントにとってはサーバのホストです。この名前は完全修飾されたホスト名ではないかもしれませんし、相手のネットワークアドレスの文字列エンコーディングを表しているかもしれないので、ホスト名でさえもないかもしれません。そのような名前が必要な場合は、このメソッドが返す値に基づいてネームサービスによって解決されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="cf7ed42141cfec99708063e665d4db5f25de170e" translate="yes" xml:space="preserve">
          <source>For the server, this is the client's port number; and for the client, it is the server's port number.</source>
          <target state="translated">サーバの場合はクライアントのポート番号、クライアントの場合はサーバのポート番号です。</target>
        </trans-unit>
        <trans-unit id="0e9197788cd85e2a5147c42cfaf919f20524e0e7" translate="yes" xml:space="preserve">
          <source>For the static methods in this class that embody the arithmetic operators, we do not actually perform the operation in question as that would snapshot the values of the properties of the method's arguments at the time the static method is called. Instead, the static methods create a new &lt;code&gt;Spring&lt;/code&gt; instance containing references to the method's arguments so that the characteristics of the new spring track the potentially changing characteristics of the springs from which it was made. This is a little like the idea of a &lt;em&gt;lazy value&lt;/em&gt; in a functional language.</source>
          <target state="translated">算術演算子を具体化するこのクラスの静的メソッドの場合、静的メソッドが呼び出されたときにメソッドの引数のプロパティの値をスナップショットするため、実際には問題の操作を実行しません。代わりに、静的メソッドは、メソッドの引数への参照を含む新しい &lt;code&gt;Spring&lt;/code&gt; インスタンスを作成します。これにより、新しいSpringの特性は、それが作成されたSpringの潜在的に変化する特性を追跡します。これは、関数型言語での&lt;em&gt;怠惰な値の&lt;/em&gt;考え方に少し似ています。</target>
        </trans-unit>
        <trans-unit id="270fcfa4c23fefd34f6067dfc14da88db6edf11e" translate="yes" xml:space="preserve">
          <source>For this case to work, the JNDI API must have been configured appropriately to supply the information about what directory to use.</source>
          <target state="translated">このケースが動作するためには、JNDI APIが適切に設定されていて、どのディレクトリを使用するかの情報を提供している必要があります。</target>
        </trans-unit>
        <trans-unit id="b682781178515ee0e34c97bf7e010a636e03f5b2" translate="yes" xml:space="preserve">
          <source>For this to work correctly, the document must have an &lt;code&gt;HTMLEditorKit.Parser&lt;/code&gt; set. This will be the case if the document was created from an HTMLEditorKit via the &lt;code&gt;createDefaultDocument&lt;/code&gt; method.</source>
          <target state="translated">これが正しく機能するためには、ドキュメントに &lt;code&gt;HTMLEditorKit.Parser&lt;/code&gt; が設定されている必要があります。これは、ドキュメントが &lt;code&gt;createDefaultDocument&lt;/code&gt; メソッドを介してHTMLEditorKitから作成された場合に当てはまります。</target>
        </trans-unit>
        <trans-unit id="86afe932c6f36f674d651c4b0a0385d6e02afc2f" translate="yes" xml:space="preserve">
          <source>For this to work correctly, the document must have an HTMLEditorKit.Parser set. This will be the case if the document was created from an HTMLEditorKit via the &lt;code&gt;createDefaultDocument&lt;/code&gt; method.</source>
          <target state="translated">これが正しく機能するためには、ドキュメントにHTMLEditorKit.Parserが設定されている必要があります。これは、ドキュメントが &lt;code&gt;createDefaultDocument&lt;/code&gt; メソッドを介してHTMLEditorKitから作成された場合に当てはまります。</target>
        </trans-unit>
        <trans-unit id="31c03e704c64da6039aa6cc23e4bc0d4e38cac66" translate="yes" xml:space="preserve">
          <source>For those components that automatically display a drop location during drag and drop, accepting the transfer, by default, tells them to show the drop location. This can be changed by calling &lt;code&gt;setShowDropLocation&lt;/code&gt; on the &lt;code&gt;TransferSupport&lt;/code&gt;.</source>
          <target state="translated">ドラッグアンドドロップ中にドロップ位置を自動的に表示するコンポーネントの場合、デフォルトでは、転送を受け入れると、ドロップ位置を表示するように指示されます。これは、 &lt;code&gt;TransferSupport&lt;/code&gt; で &lt;code&gt;setShowDropLocation&lt;/code&gt; を呼び出すことで変更できます。</target>
        </trans-unit>
        <trans-unit id="2786feaac3ba78dc455492c27da01f02b62e3263" translate="yes" xml:space="preserve">
          <source>For those methods that use a primitive array pixel representation of type &lt;code&gt;transferType&lt;/code&gt;, the array length is always one. The transfer types supported are &lt;code&gt;DataBuffer.TYPE_BYTE&lt;/code&gt; and &lt;code&gt;DataBuffer.TYPE_USHORT&lt;/code&gt;. A single int pixel representation is valid for all objects of this class, since it is always possible to represent pixel values used with this class in a single int. Therefore, methods that use this representation do not throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; due to an invalid pixel value.</source>
          <target state="translated">タイプ &lt;code&gt;transferType&lt;/code&gt; のプリミティブ配列ピクセル表現を使用するメソッドの場合、配列の長さは常に1です。サポートされている転送タイプは、 &lt;code&gt;DataBuffer.TYPE_BYTE&lt;/code&gt; と &lt;code&gt;DataBuffer.TYPE_USHORT&lt;/code&gt; です。このクラスで使用されるピクセル値を単一のintで表すことは常に可能であるため、単一のintピクセル表現はこのクラスのすべてのオブジェクトに有効です。したがって、この表現を使用するメソッドは、無効なピクセル値が原因で &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローしません。</target>
        </trans-unit>
        <trans-unit id="99cf5ba3304c383a2df51118708e0986bac1d0ac" translate="yes" xml:space="preserve">
          <source>For those methods that use a primitive array pixel representation of type &lt;code&gt;transferType&lt;/code&gt;, the array length is the same as the number of color and alpha samples. Color samples are stored first in the array followed by the alpha sample, if present. The order of the color samples is specified by the &lt;code&gt;ColorSpace&lt;/code&gt;. Typically, this order reflects the name of the color space type. For example, for &lt;code&gt;TYPE_RGB&lt;/code&gt;, index 0 corresponds to red, index 1 to green, and index 2 to blue.</source>
          <target state="translated">タイプ &lt;code&gt;transferType&lt;/code&gt; のプリミティブ配列ピクセル表現を使用するメソッドの場合、配列の長さはカラーおよびアルファサンプルの数と同じです。カラーサンプルは最初に配列に保存され、次にアルファサンプル（存在する場合）が保存されます。カラーサンプルの順序は、 &lt;code&gt;ColorSpace&lt;/code&gt; によって指定されます。通常、この順序は色空間タイプの名前を反映しています。たとえば、 &lt;code&gt;TYPE_RGB&lt;/code&gt; の場合、インデックス0は赤に対応し、インデックス1は緑に対応し、インデックス2は青に対応します。</target>
        </trans-unit>
        <trans-unit id="56e76dca6435248ee5f5c1c729db49347e93fef4" translate="yes" xml:space="preserve">
          <source>For top efficiency, consider wrapping an InputStreamReader within a BufferedReader. For example:</source>
          <target state="translated">最高の効率を得るためには、InputStreamReaderをBufferedReaderの中でラップすることを検討してください。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="0654848a089140d2007dcfe1b9715ed583001722" translate="yes" xml:space="preserve">
          <source>For top efficiency, consider wrapping an OutputStreamWriter within a BufferedWriter so as to avoid frequent converter invocations. For example:</source>
          <target state="translated">効率を上げるためには、OutputStreamWriterをBufferedWriterの中でラップして、頻繁なコンバータの呼び出しを避けることを検討してください。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="2788ca71aa05651818266f4a2d3abb2660aaaca4" translate="yes" xml:space="preserve">
          <source>For transformation errors, a &lt;code&gt;Transformer&lt;/code&gt; must use this interface instead of throwing an &lt;code&gt;Exception&lt;/code&gt;: it is up to the application to decide whether to throw an &lt;code&gt;Exception&lt;/code&gt; for different types of errors and warnings. Note however that the &lt;code&gt;Transformer&lt;/code&gt; is not required to continue with the transformation after a call to &lt;a href=&quot;#fatalError(javax.xml.transform.TransformerException)&quot;&gt;&lt;code&gt;fatalError(TransformerException exception)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">変換エラーの場合、 &lt;code&gt;Transformer&lt;/code&gt; は &lt;code&gt;Exception&lt;/code&gt; をスローする代わりに、このインターフェースを使用する必要があります。さまざまなタイプのエラーおよび警告に対して &lt;code&gt;Exception&lt;/code&gt; をスローするかどうかは、アプリケーションが決定します。ただし、&lt;a href=&quot;#fatalError(javax.xml.transform.TransformerException)&quot;&gt; &lt;code&gt;fatalError(TransformerException exception)&lt;/code&gt; &lt;/a&gt;呼び出し後に &lt;code&gt;Transformer&lt;/code&gt; が変換を続行する必要はないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="7c081b54696fcba2289120fbf328c3f2ca017882" translate="yes" xml:space="preserve">
          <source>For two &lt;code&gt;DocumentType&lt;/code&gt; nodes to be equal, the following conditions must also be satisfied:</source>
          <target state="translated">2つの &lt;code&gt;DocumentType&lt;/code&gt; ノードが等しくなるには、次の条件も満たす必要があります。</target>
        </trans-unit>
        <trans-unit id="b464d383cd3cfa532b3f2034d87a15caddd8db94" translate="yes" xml:space="preserve">
          <source>For two ACL entries to be considered equals requires that they are both the same type, their who components are equal, their permissions components are equal, and their flags components are equal.</source>
          <target state="translated">2つのACLエントリが等しいとみなされるためには、2つのACLエントリが同じ型であること、whoコンポーネントが等しいこと、パーミッションコンポーネントが等しいこと、およびフラグコンポーネントが等しいことが必要です。</target>
        </trans-unit>
        <trans-unit id="a33b6dc4fc08ac58790e30247b0b5e0d86acb3d4" translate="yes" xml:space="preserve">
          <source>For two URIs to be considered equal requires that either both are opaque or both are hierarchical. Their schemes must either both be undefined or else be equal without regard to case. Their fragments must either both be undefined or else be equal.</source>
          <target state="translated">2つのURIが等しいとみなされるためには、両方とも不透明であるか、両方とも階層的であることが必要である。それらのスキームは、両方とも未定義であるか、大文字小文字に関係なく等しいものでなければならない。それらのフラグメントは、両方とも未定義であるか、そうでなければ等しくなければならない。</target>
        </trans-unit>
        <trans-unit id="9fda39dc260b35491a35fb6ef8135edfdb1fed3f" translate="yes" xml:space="preserve">
          <source>For two hierarchical URIs to be considered equal, their paths must be equal and their queries must either both be undefined or else be equal. Their authorities must either both be undefined, or both be registry-based, or both be server-based. If their authorities are defined and are registry-based, then they must be equal. If their authorities are defined and are server-based, then their hosts must be equal without regard to case, their port numbers must be equal, and their user-information components must be equal.</source>
          <target state="translated">2つの階層URIが等しいとみなされるためには、それらのパスが等しくなければならず、それらのクエリーは両方とも未定義か、そうでなければ等しくなければならない。それらの権限は、両方とも未定義であるか、両方ともレジストリベースであるか、 または両方ともサーバーベースでなければならない。それらの権限が定義されており、かつレジストリベースである場合、それらは等しくなければなりません。権限が定義されていてサーバベースの場合、ホストは大文字小文字に関係なく等しくなければならず、ポート番号は等しくなければならず、ユーザ情報コンポーネントは等しくなければならない。</target>
        </trans-unit>
        <trans-unit id="81a9827d6416dd4007c6cdbdb1c378d41a9bc98a" translate="yes" xml:space="preserve">
          <source>For two opaque URIs to be considered equal, their scheme-specific parts must be equal.</source>
          <target state="translated">2つの不透明なURIが等しいとみなされるためには、それらのスキーマ固有の部分は等しくなければならない。</target>
        </trans-unit>
        <trans-unit id="1773f4b25e986b1b1e47cbc4ac4abf1a37e430f8" translate="yes" xml:space="preserve">
          <source>For type-safety and to represent all attributes uniformly, the Java Print Service API defines each attribute category as a class, such as class &lt;code&gt;Copies&lt;/code&gt;, class &lt;a href=&quot;standard/sides&quot;&gt;Sides&lt;/a&gt;, and class &lt;a href=&quot;standard/printerresolution&quot;&gt;PrinterResolution&lt;/a&gt;. Each attribute class wraps one or more primitive data items containing the attribute's value. Attribute set operations perform frequent comparisons between attribute category objects when adding attributes, finding existing attributes in the same category, and looking up an attribute given its category. Because an attribute category is represented by a class, fast attribute-value comparisons can be performed with the &lt;code&gt;Class.equals&lt;/code&gt; method.</source>
          <target state="translated">タイプセーフとすべての属性を均一に表すために、Java印刷サービスAPIは、各属性カテゴリをクラス &lt;code&gt;Copies&lt;/code&gt; 、クラス&lt;a href=&quot;standard/sides&quot;&gt;Sides&lt;/a&gt;、クラス&lt;a href=&quot;standard/printerresolution&quot;&gt;PrinterResolution&lt;/a&gt;などのクラスとして定義します。各属性クラスは、属性の値を含む1つ以上のプリミティブデータアイテムをラップします。属性セット操作は、属性を追加するとき、同じカテゴリー内の既存の属性を見つけるとき、およびそのカテゴリーに指定された属性を検索するときに、属性カテゴリーオブジェクト間の頻繁な比較を実行します。属性カテゴリはクラスで表されるため、 &lt;code&gt;Class.equals&lt;/code&gt; メソッドを使用すると、属性と値をすばやく比較できます。</target>
        </trans-unit>
        <trans-unit id="c8151a77e532da63512e95e962382939ed80a1a3" translate="yes" xml:space="preserve">
          <source>For unnamed modules, this method is the equivalent to invoking the &lt;a href=&quot;classloader#getDefinedPackages()&quot;&gt;&lt;code&gt;getDefinedPackages&lt;/code&gt;&lt;/a&gt; method of this module's class loader and returning the set of package names.</source>
          <target state="translated">名前のないモジュールの場合、このメソッドは、このモジュールのクラスローダーの&lt;a href=&quot;classloader#getDefinedPackages()&quot;&gt; &lt;code&gt;getDefinedPackages&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、パッケージ名のセットを返すのと同じです。</target>
        </trans-unit>
        <trans-unit id="7551f08b32c51469006c7e84becb9b47d73a193b" translate="yes" xml:space="preserve">
          <source>For unparsed entities, the name of the notation for the entity.</source>
          <target state="translated">解析されていないエンティティの場合は、エンティティの表記法の名前。</target>
        </trans-unit>
        <trans-unit id="7f0cd9f0f4cc8493c530713ad6f5e4863c851932" translate="yes" xml:space="preserve">
          <source>For unparsed entities, the name of the notation for the entity. For parsed entities, this is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">解析されていないエンティティの場合、エンティティの表記の名前。解析されたエンティティの場合、これは &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7eaf32e1bfec30e70663490c30bbb45f99fe9fb3" translate="yes" xml:space="preserve">
          <source>For validating parsers, the checks are made on the original document, before any modification by the filter. No validity checks are made on any document modifications made by the filter.</source>
          <target state="translated">パーサの有効性をチェックするために、フィルタによる修正が行われる前に元の文書をチェックします。フィルタによって変更された文書に対しては有効性のチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="d5c1648f641165c8a91e6ceb25b78ba9c26bdae2" translate="yes" xml:space="preserve">
          <source>For values other than &lt;code&gt;float&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt; NaN and &amp;plusmn;Infinity, this constructor is compatible with the values returned by &lt;a href=&quot;../lang/float#toString(float)&quot;&gt;&lt;code&gt;Float.toString(float)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../lang/double#toString(double)&quot;&gt;&lt;code&gt;Double.toString(double)&lt;/code&gt;&lt;/a&gt;. This is generally the preferred way to convert a &lt;code&gt;float&lt;/code&gt; or &lt;code&gt;double&lt;/code&gt; into a BigDecimal, as it doesn't suffer from the unpredictability of the &lt;a href=&quot;#%3Cinit%3E(double)&quot;&gt;&lt;code&gt;BigDecimal(double)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">以外の値に対して &lt;code&gt;float&lt;/code&gt; および &lt;code&gt;double&lt;/code&gt; のNaNと&amp;plusmn;無限大、このコンストラクタは、返される値と互換性がある&lt;a href=&quot;../lang/float#toString(float)&quot;&gt; &lt;code&gt;Float.toString(float)&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../lang/double#toString(double)&quot;&gt; &lt;code&gt;Double.toString(double)&lt;/code&gt; &lt;/a&gt;。これは、 &lt;code&gt;float&lt;/code&gt; または &lt;code&gt;double&lt;/code&gt; をBigDecimalに変換するための一般的に推奨される方法です。これは、&lt;a href=&quot;#%3Cinit%3E(double)&quot;&gt; &lt;code&gt;BigDecimal(double)&lt;/code&gt; &lt;/a&gt;コンストラクターの予測不可能性に悩まされないためです。</target>
        </trans-unit>
        <trans-unit id="769dd5ea1ba79523c383adcf407ff9b0c4811341" translate="yes" xml:space="preserve">
          <source>For vertical scrolling, the following rules are used:</source>
          <target state="translated">縦スクロールの場合は、以下のルールを採用しています。</target>
        </trans-unit>
        <trans-unit id="8961949ac0861281f381f9244791d180b3d7373a" translate="yes" xml:space="preserve">
          <source>ForLoopTree</source>
          <target state="translated">ForLoopTree</target>
        </trans-unit>
        <trans-unit id="b03f826ea2ede997abbd73c87f99f4f7f6c05e54" translate="yes" xml:space="preserve">
          <source>Force a line break.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6aa6cfdb6fd89911c92131158050aad0c7134cf" translate="yes" xml:space="preserve">
          <source>Force a line break. See the BR element definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c468aeea91404a1c8265133c126661b29c8366b4" translate="yes" xml:space="preserve">
          <source>Force a method to return before it reaches a return statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518f2d66d8adadf9f6d027b476ccdc25ad385da7" translate="yes" xml:space="preserve">
          <source>Force all system buffers to synchronize with the underlying device.</source>
          <target state="translated">すべてのシステムバッファを基礎となるデバイスと強制的に同期させます。</target>
        </trans-unit>
        <trans-unit id="54f4d8d19a42658228ac7ae908ce569b6f16fb5b" translate="yes" xml:space="preserve">
          <source>Force all system buffers to synchronize with the underlying device. This method returns after all modified data and attributes of this FileDescriptor have been written to the relevant device(s). In particular, if this FileDescriptor refers to a physical storage medium, such as a file in a file system, sync will not return until all in-memory modified copies of buffers associated with this FileDescriptor have been written to the physical medium. sync is meant to be used by code that requires physical storage (such as a file) to be in a known state For example, a class that provided a simple transaction facility might use sync to ensure that all changes to a file caused by a given transaction were recorded on a storage medium. sync only affects buffers downstream of this FileDescriptor. If any in-memory buffering is being done by the application (for example, by a BufferedOutputStream object), those buffers must be flushed into the FileDescriptor (for example, by invoking OutputStream.flush) before that data will be affected by sync.</source>
          <target state="translated">すべてのシステム・バッファを基礎となるデバイスと強制的に同期させます。このメソッドは、このFileDescriptorのすべての変更されたデータと属性が関連するデバイスに書き込まれた後に戻ります。特に、このFileDescriptorがファイルシステム内のファイルなどの物理記憶媒体を参照している場合、このFileDescriptorに関連付けられたバッファのすべてのメモリ内の変更されたコピーが物理媒体に書き込まれるまで、同期は返されません。syncは、物理ストレージ(ファイルなど)が既知の状態であることを必要とするコードで使用されることを意図しています。 例えば、単純なトランザクション機能を提供するクラスでは、特定のトランザクションによって引き起こされたファイルへのすべての変更がストレージ媒体に記録されることを保証するためにsyncを使用することができます。アプリケーションによってメモリ内バッファリングが行われている場合(例えば、BufferedOutputStreamオブジェクトによって)、そのデータが同期によって影響を受ける前に、それらのバッファをFileDescriptorにフラッシュしなければなりません(例えば、OutputStream.flushを呼び出すことによって)。</target>
        </trans-unit>
        <trans-unit id="db658f27e687d892a5022ac035400f638bcb31a7" translate="yes" xml:space="preserve">
          <source>Force the original target method handle &lt;code&gt;MH0&lt;/code&gt; to the required type, as &lt;code&gt;MH1 = MH0.asType(TN)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MH1 = MH0.asType(TN)&lt;/code&gt; 、元のターゲットメソッドハンドル &lt;code&gt;MH0&lt;/code&gt; を必要なタイプに強制します。</target>
        </trans-unit>
        <trans-unit id="7a2e70d2878a9d5aa38cb5618572b46c26f02088" translate="yes" xml:space="preserve">
          <source>ForcedBreakWeight</source>
          <target state="translated">ForcedBreakWeight</target>
        </trans-unit>
        <trans-unit id="5939f444f5d0d9a52f72fc6e0d0b730f6e796ebd" translate="yes" xml:space="preserve">
          <source>Forces any changes in the contents of this preference node and its descendants to the persistent store.</source>
          <target state="translated">このプリファレンスノードとその子孫の内容の変更を永続ストアに強制します。</target>
        </trans-unit>
        <trans-unit id="1c9b10af1449bad784be1cde6e9a43551892676f" translate="yes" xml:space="preserve">
          <source>Forces any changes in the contents of this preference node and its descendants to the persistent store. Once this method returns successfully, it is safe to assume that all changes made in the subtree rooted at this node prior to the method invocation have become permanent.</source>
          <target state="translated">このプリファレンスノードとその子孫の内容の変更を永続的なストアに強制します。このメソッドが正常に返されると、このメソッドの呼び出し前にこのノードでルートされていたサブツリーで行われた変更はすべて永続化されたと考えてよいでしょう。</target>
        </trans-unit>
        <trans-unit id="866add102857888eac0356740813a95c72761659" translate="yes" xml:space="preserve">
          <source>Forces any changes made to a region of this buffer's content to be written to the storage device containing the mapped file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6577447f3397789dd5b59325424ee56567c7eed" translate="yes" xml:space="preserve">
          <source>Forces any changes made to a region of this buffer's content to be written to the storage device containing the mapped file. The region starts at the given &lt;code&gt;index&lt;/code&gt; in this buffer and is &lt;code&gt;length&lt;/code&gt; bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a680e483ca6950b6c2d33e9ce98ce8a59904a423" translate="yes" xml:space="preserve">
          <source>Forces any changes made to this buffer's content to be written to the storage device containing the mapped file.</source>
          <target state="translated">このバッファの内容に加えられた変更は、マップされたファイルを含むストレージデバイスに書き込まれます。</target>
        </trans-unit>
        <trans-unit id="979293701c2da21f6b5259ef695a3cf808e4e7c1" translate="yes" xml:space="preserve">
          <source>Forces any changes made to this segment's content to be written to the storage device containing the mapped file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deea8a87216b9ce28d84e11ea2b2562f15768162" translate="yes" xml:space="preserve">
          <source>Forces any updates to this channel's file to be written to the storage device that contains it.</source>
          <target state="translated">このチャンネルのファイルの更新を、そのファイルを含むストレージデバイスに強制的に書き込ませます。</target>
        </trans-unit>
        <trans-unit id="77d782523eb2a73cd90e8e918ae7fac2208133bf" translate="yes" xml:space="preserve">
          <source>Forces the current value to be taken from the &lt;code&gt;AbstractFormatter&lt;/code&gt; and set as the current value.</source>
          <target state="translated">現在の値を &lt;code&gt;AbstractFormatter&lt;/code&gt; から取得し、現在の値として設定するように強制します。</target>
        </trans-unit>
        <trans-unit id="ec9382053ccf38d457c53ee8300e84d872701416" translate="yes" xml:space="preserve">
          <source>Forces the current value to be taken from the &lt;code&gt;AbstractFormatter&lt;/code&gt; and set as the current value. This has no effect if there is no current &lt;code&gt;AbstractFormatter&lt;/code&gt; installed.</source>
          <target state="translated">現在の値を &lt;code&gt;AbstractFormatter&lt;/code&gt; から取得し、現在の値として設定するように強制します。現在 &lt;code&gt;AbstractFormatter&lt;/code&gt; がインストールされていない場合、これは効果がありません。</target>
        </trans-unit>
        <trans-unit id="5e0e8d66fb65d640dc6fc57b52309f8c8b4fc141" translate="yes" xml:space="preserve">
          <source>Forces the data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable.</source>
          <target state="translated">&lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 変数で指定された状態にデータを強制的に一致させます。</target>
        </trans-unit>
        <trans-unit id="7247ff20e823272d20fd969a4770a9eb59049fe9" translate="yes" xml:space="preserve">
          <source>Forces the data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable. It may multiply or divide the color raster data by alpha, or do nothing if the data is in the correct state.</source>
          <target state="translated">&lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 変数で指定された状態にデータを強制的に一致させます。カラーラスターデータをアルファで乗算または除算するか、データが正しい状態の場合は何もしません。</target>
        </trans-unit>
        <trans-unit id="3cb1bac84088d2f373c2cf2dd831c6a1d91a81f2" translate="yes" xml:space="preserve">
          <source>Forces the given value to be returned as a result.</source>
          <target state="translated">与えられた値を強制的に結果として返します。</target>
        </trans-unit>
        <trans-unit id="dbce88f263ac9d740c92b1f1edd27fb2fa3fda52" translate="yes" xml:space="preserve">
          <source>Forces the given value to be returned as a result. This method is designed to support extensions, and should not in general be called otherwise.</source>
          <target state="translated">与えられた値を強制的に結果として返します。このメソッドは拡張機能をサポートするように設計されており、一般的にはそうでなければ呼び出されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="da9dbd45f463b58f2240e5185c7d5cf9102f825b" translate="yes" xml:space="preserve">
          <source>Forces the raster data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable, assuming the data is currently correctly described by this &lt;code&gt;ColorModel&lt;/code&gt;.</source>
          <target state="translated">データが現在この &lt;code&gt;ColorModel&lt;/code&gt; によって正しく記述されていると仮定して、ラスターデータを &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 変数で指定された状態に強制的に一致させます。</target>
        </trans-unit>
        <trans-unit id="4549cc0416b7cda2bd6ba87f5c0839294f8bd757" translate="yes" xml:space="preserve">
          <source>Forces the raster data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable, assuming the data is currently correctly described by this &lt;code&gt;ColorModel&lt;/code&gt;. It may multiply or divide the color raster data by alpha, or do nothing if the data is in the correct state. If the data needs to be coerced, this method also returns an instance of this &lt;code&gt;ColorModel&lt;/code&gt; with the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; flag set appropriately. Since &lt;code&gt;ColorModel&lt;/code&gt; can be subclassed, subclasses inherit the implementation of this method and if they don't override it then they throw an exception if they use an unsupported &lt;code&gt;transferType&lt;/code&gt;.</source>
          <target state="translated">データが現在この &lt;code&gt;ColorModel&lt;/code&gt; によって正しく記述されていると仮定して、ラスターデータを &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 変数で指定された状態に強制的に一致させます。カラーラスターデータをアルファで乗算または除算するか、データが正しい状態の場合は何もしません。データを強制変換する必要がある場合、このメソッドは、 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; フラグが適切に設定されたこの &lt;code&gt;ColorModel&lt;/code&gt; のインスタンスも返します。以来 &lt;code&gt;ColorModel&lt;/code&gt; はサブクラス化することができ、サブクラスはこのメソッドの実装を継承し、彼らはそれをオーバーライドしない場合、サポートされていない使用している場合、彼らは例外をスロー &lt;code&gt;transferType&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="988c07f1ed2980fbf5a6ea7e9086a5c86550e09c" translate="yes" xml:space="preserve">
          <source>Forces the raster data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable, assuming the data is currently correctly described by this &lt;code&gt;ColorModel&lt;/code&gt;. It may multiply or divide the color raster data by alpha, or do nothing if the data is in the correct state. If the data needs to be coerced, this method will also return an instance of this &lt;code&gt;ColorModel&lt;/code&gt; with the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; flag set appropriately. This method will throw a &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if it is not supported by this &lt;code&gt;ColorModel&lt;/code&gt;. Since &lt;code&gt;ColorModel&lt;/code&gt; is an abstract class, any instance is an instance of a subclass. Subclasses must override this method since the implementation in this abstract class throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">データが現在この &lt;code&gt;ColorModel&lt;/code&gt; によって正しく記述されていると仮定して、ラスターデータを &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 変数で指定された状態に強制的に一致させます。カラーラスターデータをアルファで乗算または除算するか、データが正しい状態の場合は何もしません。データを強制変換する必要がある場合、このメソッドは、 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; フラグが適切に設定されたこの &lt;code&gt;ColorModel&lt;/code&gt; のインスタンスも返します。この &lt;code&gt;ColorModel&lt;/code&gt; でサポートされてい &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 場合、このメソッドはUnsupportedOperationExceptionをスローします。 &lt;code&gt;ColorModel&lt;/code&gt; 以降は抽象クラスであり、任意のインスタンスはサブクラスのインスタンスです。この抽象クラスの実装は &lt;code&gt;UnsupportedOperationException&lt;/code&gt; をスローするため、サブクラスはこのメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="118377b2f181faacd93bb631f27279c6cd8907a0" translate="yes" xml:space="preserve">
          <source>Forces the raster data to match the state specified in the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; variable, assuming the data is currently correctly described by this &lt;code&gt;ColorModel&lt;/code&gt;. It may multiply or divide the color raster data by alpha, or do nothing if the data is in the correct state. If the data needs to be coerced, this method will also return an instance of this &lt;code&gt;ColorModel&lt;/code&gt; with the &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; flag set appropriately. This method will throw a &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this transferType is not supported by this &lt;code&gt;ColorModel&lt;/code&gt;. Since &lt;code&gt;ColorModel&lt;/code&gt; can be subclassed, subclasses inherit the implementation of this method and if they don't override it then they throw an exception if they use an unsupported transferType.</source>
          <target state="translated">データが現在この &lt;code&gt;ColorModel&lt;/code&gt; によって正しく記述されていると仮定して、ラスターデータを &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; 変数で指定された状態に強制的に一致させます。カラーラスターデータをアルファで乗算または除算するか、データが正しい状態の場合は何もしません。データを強制変換する必要がある場合、このメソッドは、 &lt;code&gt;isAlphaPremultiplied&lt;/code&gt; フラグが適切に設定されたこの &lt;code&gt;ColorModel&lt;/code&gt; のインスタンスも返します。このtransferTypeがこの &lt;code&gt;ColorModel&lt;/code&gt; でサポートされてい &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 場合、このメソッドはUnsupportedOperationExceptionをスローします。 &lt;code&gt;ColorModel&lt;/code&gt; 以降 サブクラス化することができ、サブクラスはこのメソッドの実装を継承し、それをオーバーライドしない場合、サポートされていないtransferTypeを使用すると例外をスローします。</target>
        </trans-unit>
        <trans-unit id="f80d2a26537684a8a826907dd42b699f6d7f7f82" translate="yes" xml:space="preserve">
          <source>Forces the specified components to have the same size along the specified axis regardless of their preferred, minimum or maximum sizes.</source>
          <target state="translated">指定されたコンポーネントが、その望ましいサイズ、最小サイズ、または最大サイズに関係なく、指定された軸に沿って同じサイズを持つように強制します。</target>
        </trans-unit>
        <trans-unit id="fb20e053b06a3e6b80f33343837372a070455de0" translate="yes" xml:space="preserve">
          <source>Forces the specified components to have the same size along the specified axis regardless of their preferred, minimum or maximum sizes. Components that are linked are given the maximum of the preferred size of each of the linked components. For example, if you link two components along the horizontal axis and the preferred width is 10 and 20, both components are given a width of 20.</source>
          <target state="translated">指定されたコンポーネントが、その望ましいサイズ、最小サイズ、または最大サイズに関係なく、指定された軸に沿って同じサイズを持つように強制します。リンクされているコンポーネントには、リンクされているコンポーネントのそれぞれの好ましいサイズの最大値が与えられます。例えば、水平軸に沿って2つのコンポーネントをリンクし、優先される幅が10と20の場合、両方のコンポーネントに20の幅が与えられます。</target>
        </trans-unit>
        <trans-unit id="7508af74e0b645d0e8673f26b3c2909a94bbfe96" translate="yes" xml:space="preserve">
          <source>Forces the specified components to have the same size regardless of their preferred, minimum or maximum sizes.</source>
          <target state="translated">指定されたコンポーネントのサイズが、希望するサイズ、最小サイズ、または最大サイズに関係なく、同じサイズになるように強制します。</target>
        </trans-unit>
        <trans-unit id="1bb12d9e5c29c262c5c0b442af8ebd90c800f627" translate="yes" xml:space="preserve">
          <source>Forces the specified components to have the same size regardless of their preferred, minimum or maximum sizes. Components that are linked are given the maximum of the preferred size of each of the linked components. For example, if you link two components with a preferred width of 10 and 20, both components are given a width of 20.</source>
          <target state="translated">指定されたコンポーネントは、優先、最小、または最大サイズに関係なく、同じサイズになるように強制されます。リンクされているコンポーネントには、リンクされているコンポーネントのそれぞれの好ましいサイズの最大値が与えられます。例えば、優先幅が 10 と 20 の 2 つのコンポーネントをリンクした場合、両方のコンポーネントには 20 の幅が与えられます。</target>
        </trans-unit>
        <trans-unit id="dde1b8ae3d0a842d68726e659939eb0c5c7f8545" translate="yes" xml:space="preserve">
          <source>Forces the thread to stop executing.</source>
          <target state="translated">スレッドの実行を強制的に停止します。</target>
        </trans-unit>
        <trans-unit id="3d1c1c7583df36349c8a3dc399a306938d49a073" translate="yes" xml:space="preserve">
          <source>Forces this phaser to enter termination state.</source>
          <target state="translated">このフェイザーを強制的に終了状態にします。</target>
        </trans-unit>
        <trans-unit id="c3e0e32becf1c3ad394aa3f4fdb2ae0464a0dd19" translate="yes" xml:space="preserve">
          <source>Forces this phaser to enter termination state. Counts of registered parties are unaffected. If this phaser is a member of a tiered set of phasers, then all of the phasers in the set are terminated. If this phaser is already terminated, this method has no effect. This method may be useful for coordinating recovery after one or more tasks encounter unexpected exceptions.</source>
          <target state="translated">このフェイザーを強制的に終了状態にします。登録されたパーティの数は影響を受けません。このフェイザーが階層化されたフェイザーセットのメンバーである場合、セット内のすべてのフェイザーが終了します。このフェイザーが既に終了している場合、このメソッドは何の効果もありません。このメソッドは、1 つ以上のタスクが予期しない例外に遭遇した後の回復を調整するのに役立つかもしれません。</target>
        </trans-unit>
        <trans-unit id="acffb05348f752c59e5d294b6dc5985b876136be" translate="yes" xml:space="preserve">
          <source>Forcibly causes subsequent invocations of method &lt;a href=&quot;#get()&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods to throw the given exception, whether or not already completed.</source>
          <target state="translated">メソッド&lt;a href=&quot;#get()&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;および関連するメソッドの後続の呼び出しにより、すでに完了しているかどうかに関係なく、指定された例外が強制的にスローされます。</target>
        </trans-unit>
        <trans-unit id="5445c45650785e4ad2937d1d5d9d5487d8c3ce5f" translate="yes" xml:space="preserve">
          <source>Forcibly causes subsequent invocations of method &lt;a href=&quot;#get()&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods to throw the given exception, whether or not already completed. This method is designed for use only in error recovery actions, and even in such situations may result in ongoing dependent completions using established versus overwritten outcomes.</source>
          <target state="translated">メソッド&lt;a href=&quot;#get()&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;および関連するメソッドの後続の呼び出しにより、すでに完了しているかどうかに関係なく、指定された例外が強制的にスローされます。この方法は、エラー回復アクションでのみ使用するように設計されており、そのような状況でも、確立された結果と上書きされた結果を使用して、継続的な依存完了が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="a9d25990145c83fbe30b7ec71eb0f5ee823cb07f" translate="yes" xml:space="preserve">
          <source>Forcibly causes subsequent invocations of method &lt;a href=&quot;completablefuture#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods to throw the given exception, whether or not already completed. This method is designed for use only in error recovery actions, and even in such situations may result in ongoing dependent completions using established versus overwritten outcomes.</source>
          <target state="translated">メソッド&lt;a href=&quot;completablefuture#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;および関連メソッドの後続の呼び出しで、既に完了しているかどうかに関係なく、指定された例外を強制的にスローします。このメソッドは、エラー回復アクションでのみ使用するように設計されており、そのような状況でも、確立された結果と上書きされた結果を使用して、継続的な依存完了が発生する場合があります。</target>
        </trans-unit>
        <trans-unit id="c81377834f3334c2907fec28b26737276865107a" translate="yes" xml:space="preserve">
          <source>Forcibly sets or resets the value subsequently returned by method &lt;a href=&quot;#get()&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods, whether or not already completed.</source>
          <target state="translated">すでに完了しているかどうかに関係なく、メソッド&lt;a href=&quot;#get()&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;および関連するメソッドによって後で返される値を強制的に設定またはリセットします。</target>
        </trans-unit>
        <trans-unit id="9c3f9e363addc3b76fcf9fdc62ce15eccc5454dc" translate="yes" xml:space="preserve">
          <source>Forcibly sets or resets the value subsequently returned by method &lt;a href=&quot;#get()&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods, whether or not already completed. This method is designed for use only in error recovery actions, and even in such situations may result in ongoing dependent completions using established versus overwritten outcomes.</source>
          <target state="translated">すでに完了しているかどうかに関係なく、メソッド&lt;a href=&quot;#get()&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;および関連するメソッドによって後で返される値を強制的に設定またはリセットします。この方法は、エラー回復アクションでのみ使用するように設計されており、そのような状況でも、確立された結果と上書きされた結果を使用して、継続的な依存完了が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="3e2c4695f4300e5fd7114ef140e2386285715a22" translate="yes" xml:space="preserve">
          <source>Forcibly sets or resets the value subsequently returned by method &lt;a href=&quot;completablefuture#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; and related methods, whether or not already completed. This method is designed for use only in error recovery actions, and even in such situations may result in ongoing dependent completions using established versus overwritten outcomes.</source>
          <target state="translated">すでに完了しているかどうかに関係なく、メソッド&lt;a href=&quot;completablefuture#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt;および関連メソッドによって後で返される値を強制的に設定またはリセットします。このメソッドは、エラー回復アクションでのみ使用するように設計されており、そのような状況でも、確立された結果と上書きされた結果を使用して、継続的な依存完了が発生する場合があります。</target>
        </trans-unit>
        <trans-unit id="3dc9b793d4f642b58f87c9edc48942b364f96f2b" translate="yes" xml:space="preserve">
          <source>Forcibly terminates the currently running Java virtual machine.</source>
          <target state="translated">現在実行中のJava仮想マシンを強制的に終了させます。</target>
        </trans-unit>
        <trans-unit id="36e93f57eedd9a54ddda92bd9479c29c2239c76f" translate="yes" xml:space="preserve">
          <source>Forcibly terminates the currently running Java virtual machine. This method never returns normally.</source>
          <target state="translated">現在実行中の Java 仮想マシンを強制的に終了します。このメソッドは正常に戻ることはありません。</target>
        </trans-unit>
        <trans-unit id="1613ff18a51063a1ec5a75856a9d23412b1fa962" translate="yes" xml:space="preserve">
          <source>Forcing reading of fields corresponding to &lt;code&gt;TIFFTag&lt;/code&gt;s not in any of the allowed &lt;code&gt;TIFFTagSet&lt;/code&gt;s may be effected via &lt;a href=&quot;#setReadUnknownTags(boolean)&quot;&gt;&lt;code&gt;setReadUnknownTags&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">許可された &lt;code&gt;TIFFTagSet&lt;/code&gt; のいずれにも含まれていない &lt;code&gt;TIFFTag&lt;/code&gt; に対応するフィールドの強制的な読み取りは、setReadUnknownTagsを介して&lt;a href=&quot;#setReadUnknownTags(boolean)&quot;&gt; &lt;code&gt;setReadUnknownTags&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="f7745efdedae8430f407638389ab56b4f858eeed" translate="yes" xml:space="preserve">
          <source>Foreground</source>
          <target state="translated">Foreground</target>
        </trans-unit>
        <trans-unit id="eb08eb0b266d650d7a34350fb36997b3bc618533" translate="yes" xml:space="preserve">
          <source>ForegroundAction</source>
          <target state="translated">ForegroundAction</target>
        </trans-unit>
        <trans-unit id="fccd10bd01f081e772ab55fdf5e2bd560958bf1a" translate="yes" xml:space="preserve">
          <source>ForkJoinPool</source>
          <target state="translated">ForkJoinPool</target>
        </trans-unit>
        <trans-unit id="f39d8a7e89b599a5922f299f82b1a8c6acd3a87a" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.ForkJoinWorkerThreadFactory</source>
          <target state="translated">ForkJoinPool.ForkJoinWorkerThreadFactory</target>
        </trans-unit>
        <trans-unit id="ad028608dc5cc21b9f19de41ba8ea82f9a2aa0f6" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.ForkJoinWorkerThreadFactory.newThread()</source>
          <target state="translated">ForkJoinPool.ForkJoinWorkerThreadFactory.newThread()</target>
        </trans-unit>
        <trans-unit id="7ecdf21d4b2f0d280dd6c19b3ab787e93ef269a6" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.ManagedBlocker</source>
          <target state="translated">ForkJoinPool.ManagedBlocker</target>
        </trans-unit>
        <trans-unit id="5eb0e257ecb6476a08bc37c22217a81973f1c833" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.ManagedBlocker.block()</source>
          <target state="translated">ForkJoinPool.ManagedBlocker.block()</target>
        </trans-unit>
        <trans-unit id="c23a407322375c571854eaba3582b74df262d4da" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.ManagedBlocker.isReleasable()</source>
          <target state="translated">ForkJoinPool.ManagedBlocker.isReleasable()</target>
        </trans-unit>
        <trans-unit id="5d07a96e3f41b39dad5d76d32a59480cd45ff59d" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.awaitQuiescence()</source>
          <target state="translated">ForkJoinPool.awaitQuiescence()</target>
        </trans-unit>
        <trans-unit id="ce226f283a258522ba29450ec73ffb2a3449205a" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.awaitTermination()</source>
          <target state="translated">ForkJoinPool.awaitTermination()</target>
        </trans-unit>
        <trans-unit id="3aa52c8a1e44e47a16bbd49172332d24b2715623" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.commonPool()</source>
          <target state="translated">ForkJoinPool.commonPool()</target>
        </trans-unit>
        <trans-unit id="385ac479751a78d054ac18b246c415aed5ab64b6" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.drainTasksTo()</source>
          <target state="translated">ForkJoinPool.drainTasksTo()</target>
        </trans-unit>
        <trans-unit id="5b4130a21005c5f67b0ea532e393df7b096450c3" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.execute()</source>
          <target state="translated">ForkJoinPool.execute()</target>
        </trans-unit>
        <trans-unit id="a2f334663e796ecc9858263dc71a34e0a30f739e" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getActiveThreadCount()</source>
          <target state="translated">ForkJoinPool.getActiveThreadCount()</target>
        </trans-unit>
        <trans-unit id="28fbff92fd675f66b94eeb30de0b190127eeb544" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getAsyncMode()</source>
          <target state="translated">ForkJoinPool.getAsyncMode()</target>
        </trans-unit>
        <trans-unit id="e6179f341847929d36d77692104083832b3030f1" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getCommonPoolParallelism()</source>
          <target state="translated">ForkJoinPool.getCommonPoolParallelism()</target>
        </trans-unit>
        <trans-unit id="6f34a8e32f7e690865dafd75e80ec571296cdbd6" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getFactory()</source>
          <target state="translated">ForkJoinPool.getFactory()</target>
        </trans-unit>
        <trans-unit id="1a03e04b00b20c2269390bbd12bfd81012839466" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getParallelism()</source>
          <target state="translated">ForkJoinPool.getParallelism()</target>
        </trans-unit>
        <trans-unit id="4bc046d6b8640b3d2504821b5c135ded1d833fd6" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getPoolSize()</source>
          <target state="translated">ForkJoinPool.getPoolSize()</target>
        </trans-unit>
        <trans-unit id="6c06d0b4ff54a653996ee5b2aa8080fadf00b2a4" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getQueuedSubmissionCount()</source>
          <target state="translated">ForkJoinPool.getQueuedSubmissionCount()</target>
        </trans-unit>
        <trans-unit id="f33076b722e1cad6390534ecf825abac4fc3aaf2" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getQueuedTaskCount()</source>
          <target state="translated">ForkJoinPool.getQueuedTaskCount()</target>
        </trans-unit>
        <trans-unit id="12f81fb17b2bb940a0951076fa5c61dd0be3099c" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getRunningThreadCount()</source>
          <target state="translated">ForkJoinPool.getRunningThreadCount()</target>
        </trans-unit>
        <trans-unit id="3f8d7459d72c6b4ac7a4f2c49c0cf21720d83ccc" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getStealCount()</source>
          <target state="translated">ForkJoinPool.getStealCount()</target>
        </trans-unit>
        <trans-unit id="82bee117026169a5497bd3efac03b4c75e2532a9" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.getUncaughtExceptionHandler()</source>
          <target state="translated">ForkJoinPool.getUncaughtExceptionHandler()</target>
        </trans-unit>
        <trans-unit id="4b336964ea7affe439f1c3559fc0da6b4359ac36" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.hasQueuedSubmissions()</source>
          <target state="translated">ForkJoinPool.hasQueuedSubmissions()</target>
        </trans-unit>
        <trans-unit id="379dfbf47fcbad302f0a0ea85ff96b5796cad7dd" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.invoke()</source>
          <target state="translated">ForkJoinPool.invoke()</target>
        </trans-unit>
        <trans-unit id="931e5430fc6c6213aba1a9bcb4b17c34cab25307" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.invokeAll()</source>
          <target state="translated">ForkJoinPool.invokeAll()</target>
        </trans-unit>
        <trans-unit id="d07fee2abe17748f58fdbcd25ef6b487f6ae6b65" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.isQuiescent()</source>
          <target state="translated">ForkJoinPool.isQuiescent()</target>
        </trans-unit>
        <trans-unit id="3ca358ce8f82d43cdc85b7565f3136661b6ad6c7" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.isShutdown()</source>
          <target state="translated">ForkJoinPool.isShutdown()</target>
        </trans-unit>
        <trans-unit id="63e491a96c2d56b401d9fb6b86161de85a051551" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.isTerminated()</source>
          <target state="translated">ForkJoinPool.isTerminated()</target>
        </trans-unit>
        <trans-unit id="fdb7780bd7a291bb10007d9da6ae6b0eb9e54de2" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.isTerminating()</source>
          <target state="translated">ForkJoinPool.isTerminating()</target>
        </trans-unit>
        <trans-unit id="d8394094624d0503d79c4a04cb1552f61949d4bf" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.managedBlock()</source>
          <target state="translated">ForkJoinPool.managedBlock()</target>
        </trans-unit>
        <trans-unit id="94fa97addee2bb016fa7ad0dba60f03e0174f651" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.newTaskFor()</source>
          <target state="translated">ForkJoinPool.newTaskFor()</target>
        </trans-unit>
        <trans-unit id="948cf8a07fe3440136e940fe1bf2780e9308f719" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.pollSubmission()</source>
          <target state="translated">ForkJoinPool.pollSubmission()</target>
        </trans-unit>
        <trans-unit id="d8298ff24e07678c64b2477a81e0aba73e8d0e27" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.shutdown()</source>
          <target state="translated">ForkJoinPool.shutdown()</target>
        </trans-unit>
        <trans-unit id="e92dc1fa038cb558325a32141647a6b89a3bf76e" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.shutdownNow()</source>
          <target state="translated">ForkJoinPool.shutdownNow()</target>
        </trans-unit>
        <trans-unit id="7c2afced7fedfcef83ba19435784c2707f27cfc8" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.submit()</source>
          <target state="translated">ForkJoinPool.submit()</target>
        </trans-unit>
        <trans-unit id="ea35f6d6d1e2525a9bf9fbed7c02fa29586a7cb5" translate="yes" xml:space="preserve">
          <source>ForkJoinPool.toString()</source>
          <target state="translated">ForkJoinPool.toString()</target>
        </trans-unit>
        <trans-unit id="23ac2c518680958cf19f36c2fafaa6479ef0f3ae" translate="yes" xml:space="preserve">
          <source>ForkJoinTask</source>
          <target state="translated">ForkJoinTask</target>
        </trans-unit>
        <trans-unit id="492eb83820d55a644e618c8afafd921055639859" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.adapt()</source>
          <target state="translated">ForkJoinTask.adapt()</target>
        </trans-unit>
        <trans-unit id="ee8d9ae1739cf8b336587f8783a3849bb685fe58" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.cancel()</source>
          <target state="translated">ForkJoinTask.cancel()</target>
        </trans-unit>
        <trans-unit id="7e48208733c4012a55ab36f052964bca4003b2a1" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.compareAndSetForkJoinTaskTag()</source>
          <target state="translated">ForkJoinTask.compareAndSetForkJoinTaskTag()</target>
        </trans-unit>
        <trans-unit id="94b15ff04b08a6eb6b1de30659c59f6e63b714f0" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.complete()</source>
          <target state="translated">ForkJoinTask.complete()</target>
        </trans-unit>
        <trans-unit id="9bc884392d7037bd7863201a2bbbc62d6d48e432" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.completeExceptionally()</source>
          <target state="translated">ForkJoinTask.completeExceptionally()</target>
        </trans-unit>
        <trans-unit id="7837dc8a9d9af718ac92c7ffd144281e74869bf8" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.exec()</source>
          <target state="translated">ForkJoinTask.exec()</target>
        </trans-unit>
        <trans-unit id="1ad0a80adc32bf635c8a3b60a23e5ab096e8d5ce" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.fork()</source>
          <target state="translated">ForkJoinTask.fork()</target>
        </trans-unit>
        <trans-unit id="b655d7110805dcfef615f12711e9c1935f46291d" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.get()</source>
          <target state="translated">ForkJoinTask.get()</target>
        </trans-unit>
        <trans-unit id="82c37a27c81d5be46eaabb49e37965eef5d787f2" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getException()</source>
          <target state="translated">ForkJoinTask.getException()</target>
        </trans-unit>
        <trans-unit id="04d0e9910c2fae1b75675a431ddddc7cb005c19e" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getForkJoinTaskTag()</source>
          <target state="translated">ForkJoinTask.getForkJoinTaskTag()</target>
        </trans-unit>
        <trans-unit id="0d13ff10dc6ea2d242e5a16af56572ec62728dbc" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getPool()</source>
          <target state="translated">ForkJoinTask.getPool()</target>
        </trans-unit>
        <trans-unit id="75e02c9328661a1c949f8637fb6921b870fc6f72" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getQueuedTaskCount()</source>
          <target state="translated">ForkJoinTask.getQueuedTaskCount()</target>
        </trans-unit>
        <trans-unit id="5b3a64e0ddf0601d8c368714d74c4ec34e6ba1cc" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getRawResult()</source>
          <target state="translated">ForkJoinTask.getRawResult()</target>
        </trans-unit>
        <trans-unit id="e93d5dc2d0a6e324cac0016b71230fe47ab6d260" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.getSurplusQueuedTaskCount()</source>
          <target state="translated">ForkJoinTask.getSurplusQueuedTaskCount()</target>
        </trans-unit>
        <trans-unit id="c72a935c3bdf49a46a2f68c7f844e212b99b3a9f" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.helpQuiesce()</source>
          <target state="translated">ForkJoinTask.helpQuiesce()</target>
        </trans-unit>
        <trans-unit id="25af2dc288d8d7258c4a924add3faa3c3363d09c" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.inForkJoinPool()</source>
          <target state="translated">ForkJoinTask.inForkJoinPool()</target>
        </trans-unit>
        <trans-unit id="4c8230bf67d85984c78649ebbdaa9022214ac726" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.invoke()</source>
          <target state="translated">ForkJoinTask.invoke()</target>
        </trans-unit>
        <trans-unit id="bb2578235be5a1d80b49286f382c02652722d1a6" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.invokeAll()</source>
          <target state="translated">ForkJoinTask.invokeAll()</target>
        </trans-unit>
        <trans-unit id="46c7234f20e7ff5558eecb6f85a763355ab3a356" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.isCancelled()</source>
          <target state="translated">ForkJoinTask.isCancelled()</target>
        </trans-unit>
        <trans-unit id="3c53578c67a3d5dc3fae2b6213adfeab5408052b" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.isCompletedAbnormally()</source>
          <target state="translated">ForkJoinTask.isCompletedAbnormally()</target>
        </trans-unit>
        <trans-unit id="64c6052d0b139df19ec14840b22cb668cfa8a699" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.isCompletedNormally()</source>
          <target state="translated">ForkJoinTask.isCompletedNormally()</target>
        </trans-unit>
        <trans-unit id="3cf941db3592a3bd14771662fa3711a9ae5520fe" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.isDone()</source>
          <target state="translated">ForkJoinTask.isDone()</target>
        </trans-unit>
        <trans-unit id="a5eb02bf25628b76b9df59e667c00401866fc1e6" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.join()</source>
          <target state="translated">ForkJoinTask.join()</target>
        </trans-unit>
        <trans-unit id="f3e6da96efd8c2d0493ec1fccabe1253b7e0cacf" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.peekNextLocalTask()</source>
          <target state="translated">ForkJoinTask.peekNextLocalTask()</target>
        </trans-unit>
        <trans-unit id="6d79698b971753cda3eae311a5d1c9cf50528add" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.pollNextLocalTask()</source>
          <target state="translated">ForkJoinTask.pollNextLocalTask()</target>
        </trans-unit>
        <trans-unit id="d5b8dd9e0601a48a2a9413f5c28964b1c66fd4f9" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.pollTask()</source>
          <target state="translated">ForkJoinTask.pollTask()</target>
        </trans-unit>
        <trans-unit id="c9b9bd8d4d1df6a87ec42b885261aa46f726a561" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.quietlyComplete()</source>
          <target state="translated">ForkJoinTask.quietlyComplete()</target>
        </trans-unit>
        <trans-unit id="c8ffabdba5c635ce350bc64adca02711eaf8d512" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.quietlyInvoke()</source>
          <target state="translated">ForkJoinTask.quietlyInvoke()</target>
        </trans-unit>
        <trans-unit id="1e5d69359e294c620cfe630d7684c08767394fb7" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.quietlyJoin()</source>
          <target state="translated">ForkJoinTask.quietlyJoin()</target>
        </trans-unit>
        <trans-unit id="de0df6fd3f44a36068c6c8700906462505936195" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.reinitialize()</source>
          <target state="translated">ForkJoinTask.reinitialize()</target>
        </trans-unit>
        <trans-unit id="782d35350e2bb520475ccb484b619b4ff0dc3c87" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.setForkJoinTaskTag()</source>
          <target state="translated">ForkJoinTask.setForkJoinTaskTag()</target>
        </trans-unit>
        <trans-unit id="157793f053a4ed6b66175aa00177f39b8c52fbe1" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.setRawResult()</source>
          <target state="translated">ForkJoinTask.setRawResult()</target>
        </trans-unit>
        <trans-unit id="14e13b4f0828cc7e9569f65c318e9bb4f7c7ee7d" translate="yes" xml:space="preserve">
          <source>ForkJoinTask.tryUnfork()</source>
          <target state="translated">ForkJoinTask.tryUnfork()</target>
        </trans-unit>
        <trans-unit id="e33265d16d3575aaf320d5b191427cdfaa3266f6" translate="yes" xml:space="preserve">
          <source>ForkJoinTasks are &lt;code&gt;Serializable&lt;/code&gt;, which enables them to be used in extensions such as remote execution frameworks. It is sensible to serialize tasks only before or after, but not during, execution. Serialization is not relied on during execution itself.</source>
          <target state="translated">ForkJoinTasksは &lt;code&gt;Serializable&lt;/code&gt; であり、リモート実行フレームワークなどの拡張機能で使用できます。実行の前後ではなく、実行中のタスクのみをシリアル化するのが賢明です。シリアライゼーションは、実行自体には依存しません。</target>
        </trans-unit>
        <trans-unit id="bd5b71f4d9e3bb8d68310798b2e570d8ff14474a" translate="yes" xml:space="preserve">
          <source>ForkJoinTasks should perform relatively small amounts of computation. Large tasks should be split into smaller subtasks, usually via recursive decomposition. As a very rough rule of thumb, a task should perform more than 100 and less than 10000 basic computational steps, and should avoid indefinite looping. If tasks are too big, then parallelism cannot improve throughput. If too small, then memory and internal task maintenance overhead may overwhelm processing.</source>
          <target state="translated">ForkJoinTasksは比較的少量の計算を行うべきです。大きなタスクは、通常は再帰的分解によって、より小さなサブタスクに分割されるべきです。大まかな経験則として、タスクは100以上10000以下の基本的な計算ステップを実行し、不定のループを避けるべきです。タスクが大きすぎると、並列処理ではスループットを向上させることができません。タスクが小さすぎると、メモリと内部タスクのメンテナンスのオーバーヘッドが処理を圧倒することがあります。</target>
        </trans-unit>
        <trans-unit id="1031cd9059d05e6af3dd9bce421a8a905ec7317b" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread</source>
          <target state="translated">ForkJoinWorkerThread</target>
        </trans-unit>
        <trans-unit id="edb483d1de1c698134ee111f9b84e356ae013c28" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread.getPool()</source>
          <target state="translated">ForkJoinWorkerThread.getPool()</target>
        </trans-unit>
        <trans-unit id="007655f701cc69ac5304814368f7a4e9cf42a0a9" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread.getPoolIndex()</source>
          <target state="translated">ForkJoinWorkerThread.getPoolIndex()</target>
        </trans-unit>
        <trans-unit id="c3220bb92b11d439b4fc2d6fd4c6baaff306dd9d" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread.onStart()</source>
          <target state="translated">ForkJoinWorkerThread.onStart()</target>
        </trans-unit>
        <trans-unit id="f9bbb0eb86558f820cea5dd375880bfe1fe8952c" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread.onTermination()</source>
          <target state="translated">ForkJoinWorkerThread.onTermination()</target>
        </trans-unit>
        <trans-unit id="0c2c89bcd318db6a40f6e343725881ec2dd59c52" translate="yes" xml:space="preserve">
          <source>ForkJoinWorkerThread.run()</source>
          <target state="translated">ForkJoinWorkerThread.run()</target>
        </trans-unit>
        <trans-unit id="f56ea20d95bae68d52ee1e3ac06ab54ddc4cac3f" translate="yes" xml:space="preserve">
          <source>Forks all tasks in the specified collection, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown.</source>
          <target state="translated">指定されたコレクション内のすべてのタスクをフォークし、タスクごとに &lt;code&gt;isDone&lt;/code&gt; が保持されるか、（チェックされていない）例外が発生した場合に戻ります。この場合、例外が再スローされます。</target>
        </trans-unit>
        <trans-unit id="e1bf7f04dc91d95646b89f43aa5927c7ad2482df" translate="yes" xml:space="preserve">
          <source>Forks all tasks in the specified collection, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, others may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;#getException()&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">指定されたコレクション内のすべてのタスクをフォークし、タスクごとに &lt;code&gt;isDone&lt;/code&gt; が保持されるか、（チェックされていない）例外が発生した場合に戻ります。この場合、例外が再スローされます。複数のタスクで例外が発生した場合、このメソッドはこれらの例外のいずれかをスローします。いずれかのタスクで例外が発生した場合、他のタスクはキャンセルされる場合があります。ただし、個々のタスクの実行ステータスは、例外的なリターン時に保証されません。各タスクのステータスは、&lt;a href=&quot;#getException()&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;および関連するメソッドを使用して取得し、タスクがキャンセルされたか、正常または例外的に完了したか、または未処理のままかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="07e592a3c48252cf7f9fcf1dc6663e80ef967130" translate="yes" xml:space="preserve">
          <source>Forks all tasks in the specified collection, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, others may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;forkjointask#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">指定されたコレクション内のすべてのタスクをフォークし、各タスクの &lt;code&gt;isDone&lt;/code&gt; が保持されるか、（チェックされていない）例外が発生したときに戻ります。この場合、例外が再スローされます。複数のタスクで例外が発生した場合、このメソッドはこれらの例外のいずれかをスローします。例外が発生したタスクはキャンセルされる場合があります。ただし、例外復帰時の個々のタスクの実行状態は保証されません。各タスクのステータスは、&lt;a href=&quot;forkjointask#getException--&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;および関連メソッドを使用して取得され、それらがキャンセルされたか、正常にまたは例外的に完了したか、または未処理のままであるかを確認できます。</target>
        </trans-unit>
        <trans-unit id="8f4766b8846819a882dbe8026c24b5ed399b2cfc" translate="yes" xml:space="preserve">
          <source>Forks the given tasks, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown.</source>
          <target state="translated">指定されたタスクをフォークし、タスクごとに &lt;code&gt;isDone&lt;/code&gt; が保持されるか、（チェックされていない）例外が発生した場合に戻ります。この場合、例外が再スローされます。</target>
        </trans-unit>
        <trans-unit id="2290a44156b3b58593fa8c972feb4c3d0d3e2780" translate="yes" xml:space="preserve">
          <source>Forks the given tasks, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, others may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;#getException()&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">指定されたタスクをフォークし、タスクごとに &lt;code&gt;isDone&lt;/code&gt; が保持されるか、（チェックされていない）例外が発生した場合に戻ります。この場合、例外が再スローされます。複数のタスクで例外が発生した場合、このメソッドはこれらの例外のいずれかをスローします。いずれかのタスクで例外が発生した場合、他のタスクはキャンセルされる場合があります。ただし、個々のタスクの実行ステータスは、例外的なリターン時に保証されません。各タスクのステータスは、&lt;a href=&quot;#getException()&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;および関連するメソッドを使用して取得し、タスクがキャンセルされたか、正常または例外的に完了したか、または未処理のままかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="04917135e1237009b50bf463b498a6bf21064d37" translate="yes" xml:space="preserve">
          <source>Forks the given tasks, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, others may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;forkjointask#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">指定されたタスクをフォークし、タスクごとに &lt;code&gt;isDone&lt;/code&gt; が保持されるか、（チェックされていない）例外が発生したときに戻ります。この場合、例外が再スローされます。複数のタスクで例外が発生した場合、このメソッドはこれらの例外のいずれかをスローします。例外が発生したタスクはキャンセルされる場合があります。ただし、例外復帰時の個々のタスクの実行状態は保証されません。各タスクのステータスは、&lt;a href=&quot;forkjointask#getException--&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;および関連メソッドを使用して取得され、それらがキャンセルされたか、正常にまたは例外的に完了したか、または未処理のままであるかを確認できます。</target>
        </trans-unit>
        <trans-unit id="75ca61e1c6bb032b25e0459b71a078e13bd40c81" translate="yes" xml:space="preserve">
          <source>Forks the given tasks, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, the other may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;#getException()&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">指定されたタスクをフォークし、タスクごとに &lt;code&gt;isDone&lt;/code&gt; が保持されるか、（チェックされていない）例外が発生した場合に戻ります。この場合、例外が再スローされます。複数のタスクで例外が発生した場合、このメソッドはこれらの例外のいずれかをスローします。いずれかのタスクで例外が発生した場合、他のタスクはキャンセルされる場合があります。ただし、個々のタスクの実行ステータスは、例外的なリターン時に保証されません。各タスクのステータスは、&lt;a href=&quot;#getException()&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;および関連するメソッドを使用して取得し、タスクがキャンセルされたか、正常または例外的に完了したか、または未処理のままかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="5381ba0db46417dd20ad2bece1549ce15b6b5747" translate="yes" xml:space="preserve">
          <source>Forks the given tasks, returning when &lt;code&gt;isDone&lt;/code&gt; holds for each task or an (unchecked) exception is encountered, in which case the exception is rethrown. If more than one task encounters an exception, then this method throws any one of these exceptions. If any task encounters an exception, the other may be cancelled. However, the execution status of individual tasks is not guaranteed upon exceptional return. The status of each task may be obtained using &lt;a href=&quot;forkjointask#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; and related methods to check if they have been cancelled, completed normally or exceptionally, or left unprocessed.</source>
          <target state="translated">指定されたタスクをフォークし、タスクごとに &lt;code&gt;isDone&lt;/code&gt; が保持されるか、（チェックされていない）例外が発生したときに戻ります。この場合、例外が再スローされます。複数のタスクで例外が発生した場合、このメソッドはこれらの例外のいずれかをスローします。例外が発生したタスクはキャンセルされる場合があります。ただし、例外復帰時の個々のタスクの実行状態は保証されません。各タスクのステータスは、&lt;a href=&quot;forkjointask#getException--&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;および関連メソッドを使用して取得され、それらがキャンセルされたか、正常にまたは例外的に完了したか、または未処理のままであるかを確認できます。</target>
        </trans-unit>
        <trans-unit id="80446347ede53cf9ce56b3d59fda4b5c96dc25c4" translate="yes" xml:space="preserve">
          <source>Form</source>
          <target state="translated">Form</target>
        </trans-unit>
        <trans-unit id="b6599e900a80e606201260c58a85f8e2ace5c069" translate="yes" xml:space="preserve">
          <source>Form control or object name when submitted with a form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c7c15ff5ddeb2f968880451afe8fec85073daf" translate="yes" xml:space="preserve">
          <source>Form control or object name when submitted with a form. See the name attribute definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4f3b3e50f579bcd7cd4f5b9f98d212944a5e92" translate="yes" xml:space="preserve">
          <source>Form control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fbe067e62d9d1f99d11581553216776a353999" translate="yes" xml:space="preserve">
          <source>Form control. Note. Depending upon the environment in which the page is being viewed, the value property may be read-only for the file upload input type. For the &quot;password&quot; input type, the actual value returned may be masked to prevent unauthorized use. See the INPUT element definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ed21bf9ffb423b422c29d8a25008b83227239d" translate="yes" xml:space="preserve">
          <source>Form field label text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f3e3a3612b0943158133c984400a8f5cc0980e" translate="yes" xml:space="preserve">
          <source>Form field label text. See the LABEL element definition in HTML 4.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8da4c6326fb637b2f9272903fa59e8779424979" translate="yes" xml:space="preserve">
          <source>Form the list of return types (in clause order), omitting all occurrences of &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;void&lt;/code&gt; の出現をすべて省略して、戻り値の型のリストを（句の順序で）作成します。</target>
        </trans-unit>
        <trans-unit id="58bc8d840f13f2aa6d5e8156e1fe4a711b1790a1" translate="yes" xml:space="preserve">
          <source>FormAction</source>
          <target state="translated">FormAction</target>
        </trans-unit>
        <trans-unit id="29a85675fe66fe8e6532f318420e4f1524cb9d4e" translate="yes" xml:space="preserve">
          <source>FormSubmitEvent</source>
          <target state="translated">FormSubmitEvent</target>
        </trans-unit>
        <trans-unit id="6c0da694941094618e6e144d8c557f655973519c" translate="yes" xml:space="preserve">
          <source>FormSubmitEvent is used to notify interested parties that a form was submitted.</source>
          <target state="translated">FormSubmitEvent は、フォームが送信されたことを関係者に通知するために使用されます。</target>
        </trans-unit>
        <trans-unit id="d989329d84d432a6d2e3ade91d913cd3a1f3c3bc" translate="yes" xml:space="preserve">
          <source>FormSubmitEvent.MethodType</source>
          <target state="translated">FormSubmitEvent.MethodType</target>
        </trans-unit>
        <trans-unit id="c34f993c9e5f06888785af71ab0173c412b97960" translate="yes" xml:space="preserve">
          <source>FormView</source>
          <target state="translated">FormView</target>
        </trans-unit>
        <trans-unit id="a9f27196158fedc001eb2410797af212b59869fa" translate="yes" xml:space="preserve">
          <source>FormView.MouseEventListener</source>
          <target state="translated">FormView.MouseEventListener</target>
        </trans-unit>
        <trans-unit id="c232e93c157d8ff6df15790349e5f218511859e4" translate="yes" xml:space="preserve">
          <source>Formal parameter declaration</source>
          <target state="translated">形式的なパラメータ宣言</target>
        </trans-unit>
        <trans-unit id="b547394b3b9aa7e3fdb1acc6e742bf32f412025b" translate="yes" xml:space="preserve">
          <source>Formally the computation is defined as follows. First, we can assume that two &lt;code&gt;Duration&lt;/code&gt;s are both positive without losing generality. (i.e., &lt;code&gt;(-X)-Y=-(X+Y)&lt;/code&gt;, &lt;code&gt;X-(-Y)=X+Y&lt;/code&gt;, &lt;code&gt;(-X)-(-Y)=-(X-Y)&lt;/code&gt;)</source>
          <target state="translated">正式には、計算は次のように定義されます。まず、一般性を失うことなく、2つの &lt;code&gt;Duration&lt;/code&gt; が両方とも正であると想定できます。（すなわち、 &lt;code&gt;(-X)-Y=-(X+Y)&lt;/code&gt; 、 &lt;code&gt;X-(-Y)=X+Y&lt;/code&gt; 、 &lt;code&gt;(-X)-(-Y)=-(X-Y)&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8168ab7b1148461cbeb5cb0070afdd613dac8dbd" translate="yes" xml:space="preserve">
          <source>Formally, the computation is defined as follows.</source>
          <target state="translated">形式的には、計算は以下のように定義されます。</target>
        </trans-unit>
        <trans-unit id="9a67d939d17da1c3e4bd65461e1391834195935d" translate="yes" xml:space="preserve">
          <source>Formally, the computation is done as follows:</source>
          <target state="translated">形式的には、以下のように計算します。</target>
        </trans-unit>
        <trans-unit id="ba429414c74079c2156fd97089b7aa008df8b44e" translate="yes" xml:space="preserve">
          <source>Formally, the following holds for any &lt;code&gt;Duration&lt;/code&gt;&lt;code&gt;Object&lt;/code&gt; x:</source>
          <target state="translated">正式には、以下がいずれかの保持 &lt;code&gt;Duration&lt;/code&gt; &lt;code&gt;Object&lt;/code&gt; のx：</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="e0e31adb6cc861ffe4700cf93625baf412604bf7" translate="yes" xml:space="preserve">
          <source>Format String Syntax</source>
          <target state="translated">形式 文字列構文</target>
        </trans-unit>
        <trans-unit id="f531d541f5613113b7c853d36bf388cf8a0c233d" translate="yes" xml:space="preserve">
          <source>Format a LogRecord into a standard XML format.</source>
          <target state="translated">LogRecord を標準の XML 形式にフォーマットします。</target>
        </trans-unit>
        <trans-unit id="04e6011f57b4d7c03296826caf852d4e6c1c8796" translate="yes" xml:space="preserve">
          <source>Format a long to produce a string.</source>
          <target state="translated">longをフォーマットして文字列を生成します。</target>
        </trans-unit>
        <trans-unit id="ae2ffe5a7a236541d8dd38a2b35d11b8ed237835" translate="yes" xml:space="preserve">
          <source>Format and publish a &lt;code&gt;LogRecord&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LogRecord&lt;/code&gt; をフォーマットして公開します。</target>
        </trans-unit>
        <trans-unit id="40fe786e1cb4c2e3fc346b6346949102b40ff14b" translate="yes" xml:space="preserve">
          <source>Format identifier. O means the OSI CCR format.</source>
          <target state="translated">フォーマット識別子。O は OSI CCR フォーマットを意味する。</target>
        </trans-unit>
        <trans-unit id="78f46621d9683df48e3daa89a9237afa18bbe597" translate="yes" xml:space="preserve">
          <source>Format instance used for converting from/to Strings</source>
          <target state="translated">文字列から文字列への変換に使用されるフォーマットインスタンス</target>
        </trans-unit>
        <trans-unit id="9e613d3ff5aba0492bf29fcc59a7b0e5f6759964" translate="yes" xml:space="preserve">
          <source>Format specifiers can reference arguments in three ways:</source>
          <target state="translated">書式指定子は3つの方法で引数を参照することができます。</target>
        </trans-unit>
        <trans-unit id="71e82333b671f19dfc603692509556dcfffc70d1" translate="yes" xml:space="preserve">
          <source>Format the &lt;code&gt;BigDecimal&lt;/code&gt; as a decimal number.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; を10進数としてフォーマットします。</target>
        </trans-unit>
        <trans-unit id="7076f5049495f161d64978e61538fda9e34ca46e" translate="yes" xml:space="preserve">
          <source>Format the &lt;code&gt;BigDecimal&lt;/code&gt; in computerized scientific notation.</source>
          <target state="translated">&lt;code&gt;BigDecimal&lt;/code&gt; をコンピューター化された科学表記法でフォーマットします。</target>
        </trans-unit>
        <trans-unit id="8926957abccd383147f72e6cc92305b1a9cb0fab" translate="yes" xml:space="preserve">
          <source>Format the given LogRecord.</source>
          <target state="translated">与えられたLogRecordをフォーマットします。</target>
        </trans-unit>
        <trans-unit id="c75529fcb251f3b2ccfd0d825d210ae6f152b712" translate="yes" xml:space="preserve">
          <source>Format the given log record and return the formatted string.</source>
          <target state="translated">与えられたログレコードをフォーマットし、フォーマットされた文字列を返します。</target>
        </trans-unit>
        <trans-unit id="664761aede593637664129c3039e828e577b1efa" translate="yes" xml:space="preserve">
          <source>Format the given message to XML.</source>
          <target state="translated">与えられたメッセージをXMLにフォーマットします。</target>
        </trans-unit>
        <trans-unit id="568d6e3238de37c4ce635fc088441f7e5b62a0cd" translate="yes" xml:space="preserve">
          <source>Format.Field</source>
          <target state="translated">Format.Field</target>
        </trans-unit>
        <trans-unit id="17b45075ee0434d1d3bcaea22c022ed6d6419499" translate="yes" xml:space="preserve">
          <source>Format.Field constants associated with the text at the given position.</source>
          <target state="translated">指定した位置のテキストに関連付けられたFormat.Field定数。</target>
        </trans-unit>
        <trans-unit id="0a4d1139c52c45a3084446e69c46f83d34a51f0c" translate="yes" xml:space="preserve">
          <source>Format.clone()</source>
          <target state="translated">Format.clone()</target>
        </trans-unit>
        <trans-unit id="0df50e364976426751d2bcf69343ab4001064807" translate="yes" xml:space="preserve">
          <source>Format.format()</source>
          <target state="translated">Format.format()</target>
        </trans-unit>
        <trans-unit id="0ced8f81caf0da4ac0dfc0eba834286734d88d3f" translate="yes" xml:space="preserve">
          <source>Format.formatToCharacterIterator()</source>
          <target state="translated">Format.formatToCharacterIterator()</target>
        </trans-unit>
        <trans-unit id="3e467ba00a6a3b8abc3bd44c809e3d589436b4d1" translate="yes" xml:space="preserve">
          <source>Format.parseObject()</source>
          <target state="translated">Format.parseObject()</target>
        </trans-unit>
        <trans-unit id="dcdcdb1e1335fbf3b14ef4fce03347d948ed4048" translate="yes" xml:space="preserve">
          <source>Format: &quot;RAW&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df120b5cbab90d63a2d0715c4be0010f9933f1d" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider</source>
          <target state="translated">FormatConversionProvider</target>
        </trans-unit>
        <trans-unit id="9b0236c42f4b1c55f31dc51c6b16246f0024b98f" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.getAudioInputStream()</source>
          <target state="translated">FormatConversionProvider.getAudioInputStream()</target>
        </trans-unit>
        <trans-unit id="bcda1d0483ec19f835f2069ed89711071d6a6159" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.getSourceEncodings()</source>
          <target state="translated">FormatConversionProvider.getSourceEncodings()</target>
        </trans-unit>
        <trans-unit id="66eaee8c30598e5d40566ae6742f7cebe650d5a0" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.getTargetEncodings()</source>
          <target state="translated">FormatConversionProvider.getTargetEncodings()</target>
        </trans-unit>
        <trans-unit id="6c2cf875bc1836ab1258a6f0f8d189cfd43155e0" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.getTargetFormats()</source>
          <target state="translated">FormatConversionProvider.getTargetFormats()</target>
        </trans-unit>
        <trans-unit id="11a5d55a4cbc0b2be37622296b521a52db1d0825" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.isConversionSupported()</source>
          <target state="translated">FormatConversionProvider.isConversionSupported()</target>
        </trans-unit>
        <trans-unit id="131c566041bead3406f2d986da597583b8ec36d9" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.isSourceEncodingSupported()</source>
          <target state="translated">FormatConversionProvider.isSourceEncodingSupported()</target>
        </trans-unit>
        <trans-unit id="4f9999fe896487bae407fc43e5c49bbbe4879efd" translate="yes" xml:space="preserve">
          <source>FormatConversionProvider.isTargetEncodingSupported()</source>
          <target state="translated">FormatConversionProvider.isTargetEncodingSupported()</target>
        </trans-unit>
        <trans-unit id="db383ed0e067b8f757f7b98b368d2afe5c7313d9" translate="yes" xml:space="preserve">
          <source>FormatElement</source>
          <target state="translated">FormatElement</target>
        </trans-unit>
        <trans-unit id="412dca0cbf64716453dbf40f4f38618282c9db98" translate="yes" xml:space="preserve">
          <source>FormatFlagsConversionMismatchException</source>
          <target state="translated">FormatFlagsConversionMismatchException</target>
        </trans-unit>
        <trans-unit id="1c066917f62e00249cbf26f067524db353a8e820" translate="yes" xml:space="preserve">
          <source>FormatFlagsConversionMismatchException.getConversion()</source>
          <target state="translated">FormatFlagsConversionMismatchException.getConversion()</target>
        </trans-unit>
        <trans-unit id="15da17fbdd9c43b5956dad3cae4b34ed59242a4e" translate="yes" xml:space="preserve">
          <source>FormatFlagsConversionMismatchException.getFlags()</source>
          <target state="translated">FormatFlagsConversionMismatchException.getFlags()</target>
        </trans-unit>
        <trans-unit id="19963e30c388216c737deca1e7a2454088da9869" translate="yes" xml:space="preserve">
          <source>FormatFlagsConversionMismatchException.getMessage()</source>
          <target state="translated">FormatFlagsConversionMismatchException.getMessage()</target>
        </trans-unit>
        <trans-unit id="1a635b1e375ae58994f98e2dafdb962dda0f1247" translate="yes" xml:space="preserve">
          <source>FormatStyle</source>
          <target state="translated">FormatStyle</target>
        </trans-unit>
        <trans-unit id="21fe696c76bc40f63a4659f3f62bdde305c3f921" translate="yes" xml:space="preserve">
          <source>FormatStyle.valueOf()</source>
          <target state="translated">FormatStyle.valueOf()</target>
        </trans-unit>
        <trans-unit id="3193a241219c0156048d278b1c6c46750899a195" translate="yes" xml:space="preserve">
          <source>FormatStyle.values()</source>
          <target state="translated">FormatStyle.values()</target>
        </trans-unit>
        <trans-unit id="a577d37f0089a3ba893412a7be689f31f9997051" translate="yes" xml:space="preserve">
          <source>FormatType</source>
          <target state="translated">FormatType</target>
        </trans-unit>
        <trans-unit id="4d564dfb2534b5a8fabedc87954bce9e0f66c438" translate="yes" xml:space="preserve">
          <source>Formats a &lt;a href=&quot;../util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; into a date-time string.</source>
          <target state="translated">フォーマット&lt;a href=&quot;../util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;日付時刻文字列に。</target>
        </trans-unit>
        <trans-unit id="5b4f5f799cb36ddff2082d5b48b5b543f6d03c75" translate="yes" xml:space="preserve">
          <source>Formats a &lt;a href=&quot;../util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; into a date-time string. The formatted string is appended to the given &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">フォーマット&lt;a href=&quot;../util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;日付時刻文字列に。フォーマットされた文字列は、指定された &lt;code&gt;StringBuffer&lt;/code&gt; に追加されます。</target>
        </trans-unit>
        <trans-unit id="07073d6e0f6c54cdcb241bb922b045b2fd8d9e05" translate="yes" xml:space="preserve">
          <source>Formats a Date into a date/time string.</source>
          <target state="translated">日付を日時文字列に変換します。</target>
        </trans-unit>
        <trans-unit id="d895c48c811c4a15b835a302b66aae80bd7bfb83" translate="yes" xml:space="preserve">
          <source>Formats a date in the date escape format yyyy-mm-dd.</source>
          <target state="translated">日付をyyyy-mm-ddの日付エスケープ形式でフォーマットします。</target>
        </trans-unit>
        <trans-unit id="54f8fd862c2a92d11dcde61cfc7f6d8e793d879d" translate="yes" xml:space="preserve">
          <source>Formats a date-time object to an &lt;code&gt;Appendable&lt;/code&gt; using this formatter.</source>
          <target state="translated">このフォーマッタを使用して、日時オブジェクトを &lt;code&gt;Appendable&lt;/code&gt; にフォーマットします。</target>
        </trans-unit>
        <trans-unit id="9be1bf7a7f7e377cf813b5f734ac2e3d2a2aa436" translate="yes" xml:space="preserve">
          <source>Formats a date-time object using this formatter.</source>
          <target state="translated">このフォーマッタを使用して、日付-時刻オブジェクトをフォーマットします。</target>
        </trans-unit>
        <trans-unit id="2ea4b02a698ffd70e20c0bc95795dda05c4da5b5" translate="yes" xml:space="preserve">
          <source>Formats a double to produce a string representing its compact form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf02beedd6f1bce58518eddc5808fefdade7b69" translate="yes" xml:space="preserve">
          <source>Formats a double to produce a string.</source>
          <target state="translated">double をフォーマットして文字列を生成します。</target>
        </trans-unit>
        <trans-unit id="2aaf6b450fc4ef07da6fda4aa4d75590adf1828c" translate="yes" xml:space="preserve">
          <source>Formats a long to produce a string representing its compact form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="112e331e98d840c220f1dc8f00487d91925c3d95" translate="yes" xml:space="preserve">
          <source>Formats a number and appends the resulting text to the given string buffer.</source>
          <target state="translated">数値をフォーマットし、結果のテキストを指定された文字列バッファに追加します。</target>
        </trans-unit>
        <trans-unit id="d04e67cc414adf66ebecc3ce08b87154e076b882" translate="yes" xml:space="preserve">
          <source>Formats a number and appends the resulting text to the given string buffer. The number can be of any subclass of &lt;a href=&quot;../lang/number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">数値をフォーマットし、結果のテキストを指定された文字列バッファーに追加します。番号は&lt;a href=&quot;../lang/number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt;の任意のサブクラスにすることができます。</target>
        </trans-unit>
        <trans-unit id="6af93d8ac8831bbfcefd34453745cbe5dee11e8c" translate="yes" xml:space="preserve">
          <source>Formats a number to produce a string representing its compact form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731ebfb98425d98ec93d25e054510745ff003307" translate="yes" xml:space="preserve">
          <source>Formats a number to produce a string representing its compact form. The number can be of any subclass of &lt;a href=&quot;../lang/number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c38a6c1e349504e7c81867767dd8fa321e52f5d" translate="yes" xml:space="preserve">
          <source>Formats a time in JDBC time escape format.</source>
          <target state="translated">JDBCタイムエスケープ形式で時刻をフォーマットする。</target>
        </trans-unit>
        <trans-unit id="a635ecde511422bb0806f2d67e35eb5cd42f3049" translate="yes" xml:space="preserve">
          <source>Formats a timestamp in JDBC timestamp escape format.</source>
          <target state="translated">タイムスタンプをJDBCタイムスタンプエスケープ形式でフォーマットする。</target>
        </trans-unit>
        <trans-unit id="54a0aaa2ae5f803534da575b822ef04706be6745" translate="yes" xml:space="preserve">
          <source>Formats a timestamp in JDBC timestamp escape format. &lt;code&gt;yyyy-mm-dd hh:mm:ss.fffffffff&lt;/code&gt;, where &lt;code&gt;fffffffff&lt;/code&gt; indicates nanoseconds.</source>
          <target state="translated">タイムスタンプをJDBCタイムスタンプエスケープ形式でフォーマットします。 &lt;code&gt;yyyy-mm-dd hh:mm:ss.fffffffff&lt;/code&gt; 、ここで &lt;code&gt;fffffffff&lt;/code&gt; はナノ秒を示します。</target>
        </trans-unit>
        <trans-unit id="724afb2150bad053f43b86fef598f4a48739a4e6" translate="yes" xml:space="preserve">
          <source>Formats an Object producing an &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AttributedCharacterIterator&lt;/code&gt; を生成するオブジェクトをフォーマットします。</target>
        </trans-unit>
        <trans-unit id="0665c20061fe5f4b47c2dff46ad0383201d84aa3" translate="yes" xml:space="preserve">
          <source>Formats an Object producing an &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;. The returned &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; can be used to build the resulting string, as well as to determine information about the resulting string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7869ed7c2765ecd200324b00ea3d1d924e8762e0" translate="yes" xml:space="preserve">
          <source>Formats an Object producing an &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;. You can use the returned &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; to build the resulting String, as well as to determine information about the resulting String.</source>
          <target state="translated">&lt;code&gt;AttributedCharacterIterator&lt;/code&gt; を生成するオブジェクトをフォーマットします。返された &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; を使用して、結果の文字列を作成したり、結果の文字列に関する情報を確認したりできます。</target>
        </trans-unit>
        <trans-unit id="935d245fe455147d9c757e999ebd8388d0b692bf" translate="yes" xml:space="preserve">
          <source>Formats an array of objects and appends the &lt;code&gt;MessageFormat&lt;/code&gt;'s pattern, with format elements replaced by the formatted objects, to the provided &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">オブジェクトの配列をフォーマットし、フォーマットされたオブジェクトでフォーマット要素を置き換えた &lt;code&gt;MessageFormat&lt;/code&gt; のパターンを、指定された &lt;code&gt;StringBuffer&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="7c03c37cf08dd4617eecfb4b80423fbece656cbd" translate="yes" xml:space="preserve">
          <source>Formats an array of objects and appends the &lt;code&gt;MessageFormat&lt;/code&gt;'s pattern, with format elements replaced by the formatted objects, to the provided &lt;code&gt;StringBuffer&lt;/code&gt;. This is equivalent to</source>
          <target state="translated">オブジェクトの配列をフォーマットし、フォーマットされたオブジェクトでフォーマット要素を置き換えた &lt;code&gt;MessageFormat&lt;/code&gt; のパターンを、指定された &lt;code&gt;StringBuffer&lt;/code&gt; に追加します。これは</target>
        </trans-unit>
        <trans-unit id="dc17b532fb50dda274c6bd3b042cf1935b3b091d" translate="yes" xml:space="preserve">
          <source>Formats an array of objects and inserts them into the &lt;code&gt;MessageFormat&lt;/code&gt;'s pattern, producing an &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;.</source>
          <target state="translated">オブジェクトの配列をフォーマットし、それらを &lt;code&gt;MessageFormat&lt;/code&gt; のパターンに挿入して、 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; を生成します。</target>
        </trans-unit>
        <trans-unit id="21297b414ce0029faaca682aeb10c15afb91174c" translate="yes" xml:space="preserve">
          <source>Formats an array of objects and inserts them into the &lt;code&gt;MessageFormat&lt;/code&gt;'s pattern, producing an &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;. You can use the returned &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; to build the resulting String, as well as to determine information about the resulting String.</source>
          <target state="translated">オブジェクトの配列をフォーマットし、 &lt;code&gt;MessageFormat&lt;/code&gt; のパターンに挿入して、 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; を生成します。返された &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; を使用して、結果の文字列を作成したり、結果の文字列に関する情報を確認したりできます。</target>
        </trans-unit>
        <trans-unit id="9cea71f618fb3ffb49644be00236b83d57f0606f" translate="yes" xml:space="preserve">
          <source>Formats an object and appends the resulting text to a given string buffer.</source>
          <target state="translated">オブジェクトをフォーマットし、結果のテキストを指定された文字列バッファに追加します。</target>
        </trans-unit>
        <trans-unit id="1a22d7749925a09720265c0ac9d11263b68df807" translate="yes" xml:space="preserve">
          <source>Formats an object and appends the resulting text to a given string buffer. If the &lt;code&gt;pos&lt;/code&gt; argument identifies a field used by the format, then its indices are set to the beginning and end of the first such field encountered.</source>
          <target state="translated">オブジェクトをフォーマットし、結果のテキストを指定された文字列バッファーに追加します。 &lt;code&gt;pos&lt;/code&gt; 引数がフォーマットで使用されるフィールドを識別する場合、そのインデックスは最初に検出されたそのようなフィールドの最初と最後に設定されます。</target>
        </trans-unit>
        <trans-unit id="37ed6a3230e4949ccf7355a51282ad42ea2737e5" translate="yes" xml:space="preserve">
          <source>Formats an object to produce a string.</source>
          <target state="translated">オブジェクトをフォーマットして文字列を生成します。</target>
        </trans-unit>
        <trans-unit id="3a28e2667660d3aa12cbe5d58992c3eadbf6aa76" translate="yes" xml:space="preserve">
          <source>Formats an object to produce a string. This is equivalent to</source>
          <target state="translated">オブジェクトをフォーマットして文字列を生成します。これは</target>
        </trans-unit>
        <trans-unit id="7c0a5adf713797b1e88d1ed1b05fb283e5fc9075" translate="yes" xml:space="preserve">
          <source>Formats are generally not synchronized. It is recommended to create separate format instances for each thread. If multiple threads access a format concurrently, it must be synchronized externally.</source>
          <target state="translated">フォーマットは一般的に同期化されていません。各スレッドごとに別々のフォーマットインスタンスを作成することをお勧めします。複数のスレッドが同時にフォーマットにアクセスする場合は、外部から同期させる必要があります。</target>
        </trans-unit>
        <trans-unit id="aefb58f1cc1cb3eb81f84a3c57abd7926f4f2238" translate="yes" xml:space="preserve">
          <source>Formats such as &quot;raw,&quot; which can potentially attempt to read nearly any stream, should return &lt;code&gt;false&lt;/code&gt; in order to avoid being invoked in preference to a closer match.</source>
          <target state="translated">ほぼすべてのストリームを読み取ろうとする可能性のある「raw」などの形式は、より近い一致を優先して呼び出されるのを避けるために &lt;code&gt;false&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="312a5f525f8b10dfb4ad63090301d64356edce01" translate="yes" xml:space="preserve">
          <source>Formats the argument as a Unicode character as described in &lt;a href=&quot;../lang/character#unicode&quot;&gt;Unicode Character Representation&lt;/a&gt;. This may be more than one 16-bit &lt;code&gt;char&lt;/code&gt; in the case where the argument represents a supplementary character.</source>
          <target state="translated">Unicode文字表現で説明されて&lt;a href=&quot;../lang/character#unicode&quot;&gt;いる&lt;/a&gt;ように、引数をUnicode文字としてフォーマットします。引数が補助文字を表す場合、これは複数の16ビット &lt;code&gt;char&lt;/code&gt; になる場合があります。</target>
        </trans-unit>
        <trans-unit id="0570fb471e9afbb2f306caffe87460c9188dcc29" translate="yes" xml:space="preserve">
          <source>Formats the argument as a decimal integer. The &lt;a href=&quot;#L10nAlgorithm&quot;&gt;localization algorithm&lt;/a&gt; is applied.</source>
          <target state="translated">引数を10進整数としてフォーマットします。&lt;a href=&quot;#L10nAlgorithm&quot;&gt;ローカリゼーションアルゴリズムが&lt;/a&gt;適用されます。</target>
        </trans-unit>
        <trans-unit id="3cfff0fa6dbf122d692c0742ddcf6c5629c7b0cb" translate="yes" xml:space="preserve">
          <source>Formats the argument as an integer in base eight. No localization is applied.</source>
          <target state="translated">引数をベース8の整数としてフォーマットします。ローカライズは適用されません。</target>
        </trans-unit>
        <trans-unit id="abdda238fb46a84a701714dfa86485fddeb68760" translate="yes" xml:space="preserve">
          <source>Formats the argument as an integer in base sixteen. No localization is applied.</source>
          <target state="translated">引数を16進数の整数としてフォーマットします。ローカライズは適用されません。</target>
        </trans-unit>
        <trans-unit id="55eeadb3f1c2dfee435c57ecf4db62a0d6032358" translate="yes" xml:space="preserve">
          <source>Formats the given &lt;code&gt;Date&lt;/code&gt; into a date/time string and appends the result to the given &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">与えられたフォーマット &lt;code&gt;Date&lt;/code&gt; 日付/時刻文字列に与えられたに結果を追加 &lt;code&gt;StringBuffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a19ac0f7123a01bbaed07c557a97d49e3cd0ec52" translate="yes" xml:space="preserve">
          <source>Formats the given &lt;code&gt;Object&lt;/code&gt; into a date-time string.</source>
          <target state="translated">指定された &lt;code&gt;Object&lt;/code&gt; を日時文字列にフォーマットします。</target>
        </trans-unit>
        <trans-unit id="b5163d7a45c0deabefaa7eb426556c9ad41dbb0b" translate="yes" xml:space="preserve">
          <source>Formats the given &lt;code&gt;Object&lt;/code&gt; into a date-time string. The formatted string is appended to the given &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;Object&lt;/code&gt; を日時文字列にフォーマットします。フォーマットされた文字列は、指定された &lt;code&gt;StringBuffer&lt;/code&gt; に追加されます。</target>
        </trans-unit>
        <trans-unit id="74e028adfd5ea9f1e03ddc3e4aaec41d58efd862" translate="yes" xml:space="preserve">
          <source>Formats the object using the provided &lt;a href=&quot;formatter&quot;&gt;&lt;code&gt;formatter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">提供&lt;a href=&quot;formatter&quot;&gt; &lt;code&gt;formatter&lt;/code&gt; &lt;/a&gt;れたフォーマッタを使用してオブジェクトをフォーマットします。</target>
        </trans-unit>
        <trans-unit id="7d5d90b0b4d12a460062ea991f8fdf7f7e42e5f2" translate="yes" xml:space="preserve">
          <source>Formats this date using the specified formatter.</source>
          <target state="translated">指定されたフォーマッタを使用して、この日付をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="21460715a9e761e72bd9b1e44f4ae8f543367854" translate="yes" xml:space="preserve">
          <source>Formats this date-time using the specified formatter.</source>
          <target state="translated">指定されたフォーマッタを使用して、この日時をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="50891c12b61aa2bbc0baa1a9008a341a319ab97b" translate="yes" xml:space="preserve">
          <source>Formats this month-day using the specified formatter.</source>
          <target state="translated">指定されたフォーマッタを使用して、この月の日をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="b33863404be77fa78615877db0a295721489855e" translate="yes" xml:space="preserve">
          <source>Formats this time using the specified formatter.</source>
          <target state="translated">今回は指定されたフォーマッタを使ってフォーマットします。</target>
        </trans-unit>
        <trans-unit id="d8f653b32726183250759a52c2cf358e88df1902" translate="yes" xml:space="preserve">
          <source>Formats this year using the specified formatter.</source>
          <target state="translated">指定されたフォーマッタを使用して今年のフォーマットを行います。</target>
        </trans-unit>
        <trans-unit id="f5dfa57ee3604286edab15ae77ed93a4c94f2f22" translate="yes" xml:space="preserve">
          <source>Formats this year-month using the specified formatter.</source>
          <target state="translated">指定されたフォーマッタを使用して、この年月をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="ee72b0a2802a4004e2ed8dfbd23e7d0bf17e9e7f" translate="yes" xml:space="preserve">
          <source>Formats using this string as the format string, and the supplied arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f7c7364f655788e4b3118b68f3797a1b9213c05" translate="yes" xml:space="preserve">
          <source>Formattable</source>
          <target state="translated">Formattable</target>
        </trans-unit>
        <trans-unit id="24a5daf1c05412467919e0ab706235f8a90fecdc" translate="yes" xml:space="preserve">
          <source>Formattable.formatTo()</source>
          <target state="translated">Formattable.formatTo()</target>
        </trans-unit>
        <trans-unit id="cfa6c7a48792619cf5ad6d7179a2420ac429949a" translate="yes" xml:space="preserve">
          <source>FormattableFlags</source>
          <target state="translated">FormattableFlags</target>
        </trans-unit>
        <trans-unit id="1647870bbfd4c4e7eb98722f1f2217f1c51503b6" translate="yes" xml:space="preserve">
          <source>FormattableFlags are passed to the &lt;a href=&quot;formattable#formatTo(java.util.Formatter,int,int,int)&quot;&gt;&lt;code&gt;Formattable.formatTo()&lt;/code&gt;&lt;/a&gt; method and modify the output format for &lt;a href=&quot;formattable&quot;&gt;Formattables&lt;/a&gt;.</source>
          <target state="translated">FormattableFlagsはに渡され&lt;a href=&quot;formattable#formatTo(java.util.Formatter,int,int,int)&quot;&gt; &lt;code&gt;Formattable.formatTo()&lt;/code&gt; &lt;/a&gt;メソッドとの出力フォーマット変更&lt;a href=&quot;formattable&quot;&gt;Formattablesを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e10af3c2869f4474eab6514b4e12aada331a46d" translate="yes" xml:space="preserve">
          <source>FormattableFlags are passed to the &lt;a href=&quot;formattable#formatTo(java.util.Formatter,int,int,int)&quot;&gt;&lt;code&gt;Formattable.formatTo()&lt;/code&gt;&lt;/a&gt; method and modify the output format for &lt;a href=&quot;formattable&quot;&gt;Formattables&lt;/a&gt;. Implementations of &lt;a href=&quot;formattable&quot;&gt;&lt;code&gt;Formattable&lt;/code&gt;&lt;/a&gt; are responsible for interpreting and validating any flags.</source>
          <target state="translated">FormattableFlagsはに渡され&lt;a href=&quot;formattable#formatTo(java.util.Formatter,int,int,int)&quot;&gt; &lt;code&gt;Formattable.formatTo()&lt;/code&gt; &lt;/a&gt;メソッドとの出力フォーマット変更&lt;a href=&quot;formattable&quot;&gt;Formattablesを&lt;/a&gt;。&lt;a href=&quot;formattable&quot;&gt; &lt;code&gt;Formattable&lt;/code&gt; の&lt;/a&gt;実装は、フラグの解釈と検証を担当します。</target>
        </trans-unit>
        <trans-unit id="787f0634c99e31e8d07616a8164a5dd380caba61" translate="yes" xml:space="preserve">
          <source>Formattables are not necessarily safe for multithreaded access. Thread safety is optional and may be enforced by classes that extend and implement this interface.</source>
          <target state="translated">フォーマッタブルは必ずしもマルチスレッドアクセスで安全とは限りません。スレッドの安全性はオプションであり、このインターフェイスを拡張して実装するクラスによって強制される可能性があります。</target>
        </trans-unit>
        <trans-unit id="032e219ce652424b62e2f5cbcae7876f52a41343" translate="yes" xml:space="preserve">
          <source>Formatted Text</source>
          <target state="translated">フォーマットされたテキスト</target>
        </trans-unit>
        <trans-unit id="186bfa811d3c12e2d6d2a163cd1d14fa1220da87" translate="yes" xml:space="preserve">
          <source>Formatted printing for the Java language is heavily inspired by C's &lt;code&gt;printf&lt;/code&gt;. Although the format strings are similar to C, some customizations have been made to accommodate the Java language and exploit some of its features. Also, Java formatting is more strict than C's; for example, if a conversion is incompatible with a flag, an exception will be thrown. In C inapplicable flags are silently ignored. The format strings are thus intended to be recognizable to C programmers but not necessarily completely compatible with those in C.</source>
          <target state="translated">Java言語用のフォーマットされた印刷は、Cの &lt;code&gt;printf&lt;/code&gt; に強く触発されています。フォーマット文字列はCに似ていますが、Java言語に対応し、その機能の一部を活用するために、いくつかのカスタマイズが行われています。また、JavaのフォーマットはCのフォーマットよりも厳密です。たとえば、変換がフラグと互換性がない場合、例外がスローされます。 Cでは、不適切なフラグは無視されます。したがって、フォーマット文字列はCプログラマが認識できるように意図されていますが、必ずしもCのものと完全に互換性があるわけではありません。</target>
        </trans-unit>
        <trans-unit id="224a21b58aa618be5c77da4364e1d8dc9574f3e2" translate="yes" xml:space="preserve">
          <source>Formatted string.</source>
          <target state="translated">フォーマットされた文字列。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
