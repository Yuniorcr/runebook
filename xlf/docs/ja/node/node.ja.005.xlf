<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="node">
    <body>
      <group id="node">
        <trans-unit id="0d53af26571cbbd62fcf3d09e417e17047863c14" translate="yes" xml:space="preserve">
          <source>Added in: v0.5.6</source>
          <target state="translated">追加されました:v0.5.6</target>
        </trans-unit>
        <trans-unit id="b0ee64cf54c3667bbe977b25b3e1e94adb9d7302" translate="yes" xml:space="preserve">
          <source>Added in: v0.5.8</source>
          <target state="translated">追加されました:v0.5.8</target>
        </trans-unit>
        <trans-unit id="05899ae053d4be3973e95c23d94118788f0b1bc3" translate="yes" xml:space="preserve">
          <source>Added in: v0.5.9</source>
          <target state="translated">追加されました:v0.5.9</target>
        </trans-unit>
        <trans-unit id="51078e7ad31f0ec03e302587bfa094ff45347296" translate="yes" xml:space="preserve">
          <source>Added in: v0.6.0</source>
          <target state="translated">追加されました:v0.6.0</target>
        </trans-unit>
        <trans-unit id="9d05b499c5edb2d84fb1ddcf6135318501815a03" translate="yes" xml:space="preserve">
          <source>Added in: v0.6.0Deprecated since: v4.0.0</source>
          <target state="translated">追加されました:v0.6.0Deprecated since:v4.0.0</target>
        </trans-unit>
        <trans-unit id="64779602c602b8b2716224ff234f7fa23eb7166d" translate="yes" xml:space="preserve">
          <source>Added in: v0.6.1</source>
          <target state="translated">追加されました:v0.6.1</target>
        </trans-unit>
        <trans-unit id="b31124a291f294d155b8dceff660847caaad8608" translate="yes" xml:space="preserve">
          <source>Added in: v0.6.4</source>
          <target state="translated">追加されました:v0.6.4</target>
        </trans-unit>
        <trans-unit id="f68eb6e7351ef7c1d51323db911182e298dbc5ba" translate="yes" xml:space="preserve">
          <source>Added in: v0.6.7</source>
          <target state="translated">追加されました:v0.6.7</target>
        </trans-unit>
        <trans-unit id="a9be54459dda9073626d61990bee890199c260fc" translate="yes" xml:space="preserve">
          <source>Added in: v0.6.9</source>
          <target state="translated">追加されました:v0.6.9</target>
        </trans-unit>
        <trans-unit id="61166c25fd07d67f54d6195f020d8f7be2351a72" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.0</source>
          <target state="translated">追加されました:v0.7.0</target>
        </trans-unit>
        <trans-unit id="40013cde1f01f23a53e93e45415813326b18c6cc" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.1</source>
          <target state="translated">追加されました:v0.7.1</target>
        </trans-unit>
        <trans-unit id="af6662bf38a771ca5ef57c21e1d8471225f80b05" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.10</source>
          <target state="translated">追加されました:v0.7.10</target>
        </trans-unit>
        <trans-unit id="ac64a8fc3cfc9dd8d36f32468a7986325901da29" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.11</source>
          <target state="translated">追加されました:v0.7.11</target>
        </trans-unit>
        <trans-unit id="9160f6c4f133897b87b9e08db5eb055b5ecdda8b" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.2</source>
          <target state="translated">追加されました:v0.7.2</target>
        </trans-unit>
        <trans-unit id="27835813f9628da68cac6d88e3de484dfc54f8e0" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.3</source>
          <target state="translated">追加されました:v0.7.3</target>
        </trans-unit>
        <trans-unit id="bec7bec30fab9598f28647cbbbdb4bfdf78a4770" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.5</source>
          <target state="translated">追加されました:v0.7.5</target>
        </trans-unit>
        <trans-unit id="3a29349fc978f8913bf3035da7ae8a7386e39752" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.5Deprecated since: v6.0.0</source>
          <target state="translated">追加されました:v0.7.5Deprecated since:v6.0.0</target>
        </trans-unit>
        <trans-unit id="f59026a0257858b3b75c361d94555a394cfee909" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.6</source>
          <target state="translated">追加されました:v0.7.6</target>
        </trans-unit>
        <trans-unit id="e9f50f68a3eb9450bbe2c30079b917e70583fbac" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.7</source>
          <target state="translated">追加されました:v0.7.7</target>
        </trans-unit>
        <trans-unit id="63c89f3d12fd26b96fde7f05e4a46f39a579daba" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.8</source>
          <target state="translated">追加されました:v0.7.8</target>
        </trans-unit>
        <trans-unit id="3ea13918eacbaed2fb65aa02866a5cc4b1b4799f" translate="yes" xml:space="preserve">
          <source>Added in: v0.7.9</source>
          <target state="translated">追加されました:v0.7.9</target>
        </trans-unit>
        <trans-unit id="92bb4a4d2eed8f616f9191c6e654cfaa5876e6bc" translate="yes" xml:space="preserve">
          <source>Added in: v0.8.0</source>
          <target state="translated">追加されました:v0.8.0</target>
        </trans-unit>
        <trans-unit id="3fb5c2d724d584bc8a237f7c1975977109dacf1b" translate="yes" xml:space="preserve">
          <source>Added in: v0.8.1</source>
          <target state="translated">追加されました:v0.8.1</target>
        </trans-unit>
        <trans-unit id="442a920eee00297774b080c34e42d4dbe8ac0bf2" translate="yes" xml:space="preserve">
          <source>Added in: v0.8.4</source>
          <target state="translated">追加されました:v0.8.4</target>
        </trans-unit>
        <trans-unit id="18f64dc96b697b6918d1b37ff4c58fb7b93345aa" translate="yes" xml:space="preserve">
          <source>Added in: v0.8.6</source>
          <target state="translated">追加されました:v0.8.6</target>
        </trans-unit>
        <trans-unit id="7ea695f7aa209e7a39e55c5db6a88cbc19d68294" translate="yes" xml:space="preserve">
          <source>Added in: v0.8.9Deprecated since: v9.0.0</source>
          <target state="translated">追加されました:v0.8.9Deprecated since:v9.0.0</target>
        </trans-unit>
        <trans-unit id="c92ab1da5161463e076ac593bbc2298e087afe02" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.1</source>
          <target state="translated">追加されました:v0.9.1</target>
        </trans-unit>
        <trans-unit id="d2809db4aab0c462ba9a3530e7972d13fd7f9580" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.11</source>
          <target state="translated">追加されました:v0.9.11</target>
        </trans-unit>
        <trans-unit id="555bae67206eb88cf4328dd3b283cfcee1dda518" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.12</source>
          <target state="translated">追加されました:v0.9.12</target>
        </trans-unit>
        <trans-unit id="af2fb0ac0ceac5263a93a4978f163582e12d66f3" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.12Deprecated since: v3.2.0</source>
          <target state="translated">追加されました:v0.9.12Deprecated since:v3.2.0</target>
        </trans-unit>
        <trans-unit id="6a10895b6e1170db3d2a6c9ac4cd5620b6292efe" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.12Deprecated since: v4.0.0</source>
          <target state="translated">追加されました:v0.9.12Deprecated since:v4.0.0.0</target>
        </trans-unit>
        <trans-unit id="8609ea91d373589d2c2745202c28cf10de2385d2" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.2</source>
          <target state="translated">追加されました:v0.9.2</target>
        </trans-unit>
        <trans-unit id="bfa3a1ad733317642ad47d235d2242d8bb63e23b" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.3</source>
          <target state="translated">追加されました:v0.9.3</target>
        </trans-unit>
        <trans-unit id="c6fc669c89ccf747134c941afaecc8cf1bdace25" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.3Deprecated since: v10.0.0</source>
          <target state="translated">追加されました:v0.9.3Deprecated since:v10.0.0</target>
        </trans-unit>
        <trans-unit id="08b6d1fc88859f5f89f6cb46a4cd33bc9e1693b4" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.4</source>
          <target state="translated">追加されました:v0.9.4</target>
        </trans-unit>
        <trans-unit id="e9207b4477f180b6f29d03937da22bfe25a64c1c" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.6</source>
          <target state="translated">追加されました:v0.9.6</target>
        </trans-unit>
        <trans-unit id="9c3985ed2c3203a398cb1760b80f69dc4c471f09" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.7</source>
          <target state="translated">追加されました:v0.9.7</target>
        </trans-unit>
        <trans-unit id="c4348c919e04b89dd61cee5de62e4d713c1b447d" translate="yes" xml:space="preserve">
          <source>Added in: v0.9.9</source>
          <target state="translated">追加されました:v0.9.9</target>
        </trans-unit>
        <trans-unit id="6f0a4e03ee695899cbcc95d7c625995f8b9dffdf" translate="yes" xml:space="preserve">
          <source>Added in: v1.0.0</source>
          <target state="translated">追加されました:v1.0.0.0</target>
        </trans-unit>
        <trans-unit id="244e41c4d86880839fc3d719bf85b404bf774c85" translate="yes" xml:space="preserve">
          <source>Added in: v1.1.0</source>
          <target state="translated">追加されました:v1.1.0</target>
        </trans-unit>
        <trans-unit id="0a328c5e0b5868eede531d11c5bc3f4424cb4e95" translate="yes" xml:space="preserve">
          <source>Added in: v1.2.0</source>
          <target state="translated">追加されました:v1.2.0</target>
        </trans-unit>
        <trans-unit id="63e78cc3efc6e8bc65401c3200d38d1d6a39a660" translate="yes" xml:space="preserve">
          <source>Added in: v1.4.1</source>
          <target state="translated">追加されました:v1.4.1</target>
        </trans-unit>
        <trans-unit id="7433fd19352b2049ef1333d8a2efb1023deac5b8" translate="yes" xml:space="preserve">
          <source>Added in: v1.5.0</source>
          <target state="translated">追加されました:v1.5.0</target>
        </trans-unit>
        <trans-unit id="e75cd6dfd3f779a8d6477754349efd0b3ed362bf" translate="yes" xml:space="preserve">
          <source>Added in: v1.6.0</source>
          <target state="translated">追加されました:v1.6.0</target>
        </trans-unit>
        <trans-unit id="aaa0f85e5408cae990da24d5879c5a02a0b4450b" translate="yes" xml:space="preserve">
          <source>Added in: v10.0.0</source>
          <target state="translated">追加されました:v10.0.0.0</target>
        </trans-unit>
        <trans-unit id="1a8c51e54bec0fe5f74e9fc613c0e5826dd946e0" translate="yes" xml:space="preserve">
          <source>Added in: v10.0.0Deprecated since: v14.0.0</source>
          <target state="translated">追加されました:v10.0.0Deprecated since:v14.0.0.0</target>
        </trans-unit>
        <trans-unit id="58eb513cd57f436f381b52e23ed098e7cb3f4e6e" translate="yes" xml:space="preserve">
          <source>Added in: v10.0.0Removed in: v11.0.0</source>
          <target state="translated">で追加されました:v10.0.0Removed in:v11.0.0</target>
        </trans-unit>
        <trans-unit id="3a5584c586d78efe609fa2a4997ab5ebc76a9acc" translate="yes" xml:space="preserve">
          <source>Added in: v10.1.0</source>
          <target state="translated">追加されました:v10.1.0</target>
        </trans-unit>
        <trans-unit id="0dcef76a6c7954cc0bd3d20d7435af9a37713258" translate="yes" xml:space="preserve">
          <source>Added in: v10.10.0</source>
          <target state="translated">追加されました:v10.10.0</target>
        </trans-unit>
        <trans-unit id="cb1027b1ed3f7294f2c3e252c4234f6ffccc6ff4" translate="yes" xml:space="preserve">
          <source>Added in: v10.11.0</source>
          <target state="translated">追加されました:v10.11.0</target>
        </trans-unit>
        <trans-unit id="ff2e062e9df6155a3b3632a0e7ee12bf9d22cf00" translate="yes" xml:space="preserve">
          <source>Added in: v10.12.0</source>
          <target state="translated">追加されました:v10.12.0</target>
        </trans-unit>
        <trans-unit id="7c78f3d30ba03951eb1f1460d2360da45b6701e4" translate="yes" xml:space="preserve">
          <source>Added in: v10.12.0Deprecated since: v12.2.0</source>
          <target state="translated">追加されました:v10.12.0Deprecated since:v12.2.0</target>
        </trans-unit>
        <trans-unit id="df11c4c8aff0c009a29f6fbb6810300d44c4cf2d" translate="yes" xml:space="preserve">
          <source>Added in: v10.2.0</source>
          <target state="translated">追加されました:v10.2.0</target>
        </trans-unit>
        <trans-unit id="675806db1106ad6240c6d7a37665e06e681b1369" translate="yes" xml:space="preserve">
          <source>Added in: v10.2.0N-API version: 3</source>
          <target state="translated">追加されました:v10.2.0N-API バージョン:3</target>
        </trans-unit>
        <trans-unit id="3a2974e3b17fc5954ff0bb6d4ba820c0ed87da2c" translate="yes" xml:space="preserve">
          <source>Added in: v10.5.0</source>
          <target state="translated">追加されました:v10.5.0</target>
        </trans-unit>
        <trans-unit id="583c5539525b61795acde7de06cf08a6a7cd467f" translate="yes" xml:space="preserve">
          <source>Added in: v10.5.0Removed in: v11.12.0</source>
          <target state="translated">で追加されました:v10.5.0Removed in:v11.12.0</target>
        </trans-unit>
        <trans-unit id="277e333c92e094946e3c7dac856c7ce3556918da" translate="yes" xml:space="preserve">
          <source>Added in: v10.5.0Removed in: v14.0.0</source>
          <target state="translated">で追加されました:v10.5.0Removed in:v14.0.0</target>
        </trans-unit>
        <trans-unit id="fbe042e33641a2d941c2f1ff4fb52e8d54064b8a" translate="yes" xml:space="preserve">
          <source>Added in: v10.6.0</source>
          <target state="translated">追加されました:v10.6.0</target>
        </trans-unit>
        <trans-unit id="04482cf2e56eb3184710b9ebee3ffed2abda3d00" translate="yes" xml:space="preserve">
          <source>Added in: v10.6.0N-API version: 4</source>
          <target state="translated">追加されました:v10.6.0N-API バージョン。4</target>
        </trans-unit>
        <trans-unit id="ffb5baef61236b9a24e1f20777089b7afa37935f" translate="yes" xml:space="preserve">
          <source>Added in: v10.7.0</source>
          <target state="translated">追加されました:v10.7.0</target>
        </trans-unit>
        <trans-unit id="7c8bfa887dcb2ccedb1e471a58aa95cb4dbf0c1c" translate="yes" xml:space="preserve">
          <source>Added in: v10.7.0N-API version: 6</source>
          <target state="translated">追加されました:v10.7.0N-API バージョン:6</target>
        </trans-unit>
        <trans-unit id="6e5d0d7f8fa6c08b4ab8b405be0456320f70f666" translate="yes" xml:space="preserve">
          <source>Added in: v11.0.0</source>
          <target state="translated">追加されました:v11.0.0</target>
        </trans-unit>
        <trans-unit id="6591837e223ec9f3845a8956fa2809427566449f" translate="yes" xml:space="preserve">
          <source>Added in: v11.10.0</source>
          <target state="translated">追加されました:v11.10.0</target>
        </trans-unit>
        <trans-unit id="a99ce8ce73d454321c6198e528cec63aa558ff2c" translate="yes" xml:space="preserve">
          <source>Added in: v11.11.0</source>
          <target state="translated">追加されました:v11.11.0</target>
        </trans-unit>
        <trans-unit id="f9bff9568708d6b1010188be7406b599f1717bbe" translate="yes" xml:space="preserve">
          <source>Added in: v11.11.0, v10.17.0N-API version: 5</source>
          <target state="translated">追加されたバージョン:v11.11.0,v10.17.0N-APIバージョン:5</target>
        </trans-unit>
        <trans-unit id="7ebf55202956dbc9c9dd21380d3ed1c48be8cd0b" translate="yes" xml:space="preserve">
          <source>Added in: v11.12.0</source>
          <target state="translated">追加されました:v11.12.0</target>
        </trans-unit>
        <trans-unit id="98d8bed740242080008c08502c3130aa5c808b98" translate="yes" xml:space="preserve">
          <source>Added in: v11.13.0</source>
          <target state="translated">追加されました:v11.13.0</target>
        </trans-unit>
        <trans-unit id="23f4215c7f25a66298ea9b5e8e4fad447f1c3e38" translate="yes" xml:space="preserve">
          <source>Added in: v11.13.0, v10.16.0</source>
          <target state="translated">追加されたバージョン:v11.13.0,v10.16.0</target>
        </trans-unit>
        <trans-unit id="7a43329d24847202acf8f2abb2d01460665288a2" translate="yes" xml:space="preserve">
          <source>Added in: v11.14.0</source>
          <target state="translated">追加されました:v11.14.0</target>
        </trans-unit>
        <trans-unit id="55c6265a9d48a2fab186588c4b9e3f37c5127e67" translate="yes" xml:space="preserve">
          <source>Added in: v11.2.0</source>
          <target state="translated">追加されました:v11.2.0</target>
        </trans-unit>
        <trans-unit id="c45a41d9ab56aea6a59becd6bc941eca1714e6d7" translate="yes" xml:space="preserve">
          <source>Added in: v11.2.0, v10.16.0</source>
          <target state="translated">追加されたバージョン:v11.2.0,v10.16.0</target>
        </trans-unit>
        <trans-unit id="cd57cf8264f208bf67f4be994daf33b96c1480e9" translate="yes" xml:space="preserve">
          <source>Added in: v11.3.0</source>
          <target state="translated">追加されました:v11.3.0</target>
        </trans-unit>
        <trans-unit id="5a33f24a17d8cb6e70032541da5c35b394758a27" translate="yes" xml:space="preserve">
          <source>Added in: v11.3.0, v10.14.0</source>
          <target state="translated">追加されたバージョン:v11.3.0,v10.14.0</target>
        </trans-unit>
        <trans-unit id="8d82876229b1ac880c9dba570584963ed57d5d75" translate="yes" xml:space="preserve">
          <source>Added in: v11.4.0</source>
          <target state="translated">追加されました:v11.4.0</target>
        </trans-unit>
        <trans-unit id="bdb976bb6d9a957d938656937302ec2bfd63b478" translate="yes" xml:space="preserve">
          <source>Added in: v11.4.0, v10.16.0</source>
          <target state="translated">追加されたバージョン:v11.4.0,v10.16.0</target>
        </trans-unit>
        <trans-unit id="c74d1c947c9af33f62bfcbcffda858c9fc89cf6e" translate="yes" xml:space="preserve">
          <source>Added in: v11.6.0</source>
          <target state="translated">追加されました:v11.6.0</target>
        </trans-unit>
        <trans-unit id="862fa65414ab0673906bd405bf2d3fe714fd2d3f" translate="yes" xml:space="preserve">
          <source>Added in: v11.6.0, v10.15.0</source>
          <target state="translated">追加されたバージョン:v11.6.0,v10.15.0</target>
        </trans-unit>
        <trans-unit id="6820e1bd707463ad6cd4051b5dbcd150942e59ec" translate="yes" xml:space="preserve">
          <source>Added in: v11.7.0</source>
          <target state="translated">追加されました:v11.7.0</target>
        </trans-unit>
        <trans-unit id="02ab8d2bc2855fe65a4a884f0f74d4e834134b65" translate="yes" xml:space="preserve">
          <source>Added in: v11.7.0, v10.16.0</source>
          <target state="translated">追加されたバージョン:v11.7.0,v10.16.0</target>
        </trans-unit>
        <trans-unit id="edcab9ffc04a69dc5671ba73eabb117cc27a1863" translate="yes" xml:space="preserve">
          <source>Added in: v11.8.0</source>
          <target state="translated">追加されました:v11.8.0</target>
        </trans-unit>
        <trans-unit id="e24655a5234800edea83158f38db7cfa50d5cbde" translate="yes" xml:space="preserve">
          <source>Added in: v12.0.0</source>
          <target state="translated">追加されました:v12.0.0.0</target>
        </trans-unit>
        <trans-unit id="8cc4b4cb984ff4f191f310475e2228a21b65dae0" translate="yes" xml:space="preserve">
          <source>Added in: v12.0.0, v10.17.0</source>
          <target state="translated">追加されました:v12.0.0.0,v10.17.0</target>
        </trans-unit>
        <trans-unit id="88909373746fb90530bdd89b43b5263f80a6f8e0" translate="yes" xml:space="preserve">
          <source>Added in: v12.0.0, v10.20.0</source>
          <target state="translated">追加されました:v12.0.0.0,v10.20.0</target>
        </trans-unit>
        <trans-unit id="6b8c38ae2abc524da8879c711729bd10d961d3a4" translate="yes" xml:space="preserve">
          <source>Added in: v12.10.0</source>
          <target state="translated">追加されました:v12.10.0</target>
        </trans-unit>
        <trans-unit id="8eee16ad1b7b7232640032fdb7e1691e41e3147d" translate="yes" xml:space="preserve">
          <source>Added in: v12.11.0</source>
          <target state="translated">追加されました:v12.11.0</target>
        </trans-unit>
        <trans-unit id="6a151297f091de4cc8699871eef370660a320910" translate="yes" xml:space="preserve">
          <source>Added in: v12.12.0</source>
          <target state="translated">追加されました:v12.12.0</target>
        </trans-unit>
        <trans-unit id="a019b37a4d1afefecfaf40974564fa1ff46542ca" translate="yes" xml:space="preserve">
          <source>Added in: v12.2.0</source>
          <target state="translated">追加されました:v12.2.0</target>
        </trans-unit>
        <trans-unit id="ddf5ee4754773a631f03158235e1cf12fcecbfde" translate="yes" xml:space="preserve">
          <source>Added in: v12.2.0, v10.20.0</source>
          <target state="translated">追加されたバージョン:v12.2.0,v10.20.0</target>
        </trans-unit>
        <trans-unit id="1f5f0df1bdfe5dad5458494e4f7ba2f1d93d1787" translate="yes" xml:space="preserve">
          <source>Added in: v12.3.0</source>
          <target state="translated">追加されました:v12.3.0</target>
        </trans-unit>
        <trans-unit id="2bb9d2b11fcd925d38a9fcbc0772b9ae03d86871" translate="yes" xml:space="preserve">
          <source>Added in: v12.3.0, v10.17.0</source>
          <target state="translated">追加されたバージョン:v12.3.0,v10.17.0</target>
        </trans-unit>
        <trans-unit id="c74b497565955c560a80c352b889c43688b6bbfe" translate="yes" xml:space="preserve">
          <source>Added in: v12.3.0, v10.20.0</source>
          <target state="translated">追加されたバージョン:v12.3.0,v10.20.0</target>
        </trans-unit>
        <trans-unit id="cc91b71c884332422f10c3465c07d27690c47c26" translate="yes" xml:space="preserve">
          <source>Added in: v12.4.0</source>
          <target state="translated">追加されました:v12.4.0</target>
        </trans-unit>
        <trans-unit id="842168443d6165e38987048b754cc5faaa48c181" translate="yes" xml:space="preserve">
          <source>Added in: v12.6.0</source>
          <target state="translated">追加されました:v12.6.0</target>
        </trans-unit>
        <trans-unit id="34a8b19cf1f032f496b8f29ec22288e13bebffe8" translate="yes" xml:space="preserve">
          <source>Added in: v12.7.0</source>
          <target state="translated">追加されました:v12.7.0</target>
        </trans-unit>
        <trans-unit id="0a2caa6e96ee5a58daf3d4a441e6c86ef2e8412e" translate="yes" xml:space="preserve">
          <source>Added in: v12.8.0</source>
          <target state="translated">追加されました:v12.8.0</target>
        </trans-unit>
        <trans-unit id="fbf3d130c7a2e489c6395eaa9422fe1a6b1ac0d7" translate="yes" xml:space="preserve">
          <source>Added in: v12.8.0, v10.20.0N-API version: 6</source>
          <target state="translated">追加されたバージョン:v12.8.0,v10.20.0N-APIバージョン:6</target>
        </trans-unit>
        <trans-unit id="32693587adf05963df429990a1e9b74d7e6b8a41" translate="yes" xml:space="preserve">
          <source>Added in: v12.9.0</source>
          <target state="translated">追加されました:v12.9.0</target>
        </trans-unit>
        <trans-unit id="c1084383e372c63baa021ef3efec0a8b3efedd76" translate="yes" xml:space="preserve">
          <source>Added in: v13.0.0, v12.16.0</source>
          <target state="translated">追加されました:v13.0.0.0,v12.16.0</target>
        </trans-unit>
        <trans-unit id="0fae2f6210167376f04478c9f3c568e9e302a6f3" translate="yes" xml:space="preserve">
          <source>Added in: v13.0.0, v12.16.0, v10.22.0N-API version: 7</source>
          <target state="translated">追加されたバージョン:v13.0.0.0,v12.16.0,v10.22.0N-API バージョン:7</target>
        </trans-unit>
        <trans-unit id="fd7088aafd4c458f6a8642c7831de2792e1299ff" translate="yes" xml:space="preserve">
          <source>Added in: v13.1.0</source>
          <target state="translated">追加されました:v13.1.0</target>
        </trans-unit>
        <trans-unit id="fc5d51d6c6331ebb7098ef396f95772578254d41" translate="yes" xml:space="preserve">
          <source>Added in: v13.1.0, v12.16.0</source>
          <target state="translated">追加されたバージョン:v13.1.0,v12.16.0</target>
        </trans-unit>
        <trans-unit id="780a3e3929d2c00e0bcd21c12cd694d49d4b01d1" translate="yes" xml:space="preserve">
          <source>Added in: v13.10.0</source>
          <target state="translated">追加されました:v13.10.0</target>
        </trans-unit>
        <trans-unit id="2afac72afa0f7284f93bcc79e934192342cc6cc1" translate="yes" xml:space="preserve">
          <source>Added in: v13.10.0, v12.17.0</source>
          <target state="translated">追加されたバージョン:v13.10.0,v12.17.0</target>
        </trans-unit>
        <trans-unit id="cc8615ac72956c3094011134fcca264dea323232" translate="yes" xml:space="preserve">
          <source>Added in: v13.11.0</source>
          <target state="translated">追加されました:v13.11.0</target>
        </trans-unit>
        <trans-unit id="16c9ac2acb5be89bf48fbc7486cadc2c5dd861e4" translate="yes" xml:space="preserve">
          <source>Added in: v13.11.0, v12.17.0</source>
          <target state="translated">追加されたバージョン:v13.11.0,v12.17.0</target>
        </trans-unit>
        <trans-unit id="0d978e5db3af1a67df66bb4639c2e620eed828a3" translate="yes" xml:space="preserve">
          <source>Added in: v13.12.0</source>
          <target state="translated">追加されました:v13.12.0</target>
        </trans-unit>
        <trans-unit id="a6888f84eb16352ee8ea1b0124f18c6728170370" translate="yes" xml:space="preserve">
          <source>Added in: v13.12.0, v12.17.0</source>
          <target state="translated">追加されたバージョン:v13.12.0,v12.17.0</target>
        </trans-unit>
        <trans-unit id="13d8a5b9c489e17859f14b8918c75aa0ff52de8a" translate="yes" xml:space="preserve">
          <source>Added in: v13.13.0, v12.17.0</source>
          <target state="translated">追加されたバージョン:v13.13.0,v12.17.0</target>
        </trans-unit>
        <trans-unit id="7d1a3e57cebd0326f87bb5d452930ea11bdeeaf8" translate="yes" xml:space="preserve">
          <source>Added in: v13.2.0, v12.16.0</source>
          <target state="translated">追加されました:v13.2.0,v12.16.0</target>
        </trans-unit>
        <trans-unit id="afa4bdf7a559ceac3930c6ce51d0d2804a6dfa2b" translate="yes" xml:space="preserve">
          <source>Added in: v13.3.0</source>
          <target state="translated">追加されました:v13.3.0</target>
        </trans-unit>
        <trans-unit id="fdb6e10855aa0780e6a39d752f141c82fa9599eb" translate="yes" xml:space="preserve">
          <source>Added in: v13.3.0, v12.16.0</source>
          <target state="translated">追加されたバージョン:v13.3.0,v12.16.0</target>
        </trans-unit>
        <trans-unit id="69ce6504b1feb2930397bc593e97202cf4afe235" translate="yes" xml:space="preserve">
          <source>Added in: v13.3.0, v12.16.0, v10.22.0N-API version: 7</source>
          <target state="translated">追加されたバージョン:v13.3.0,v12.16.0,v10.22.0N-API バージョン:7</target>
        </trans-unit>
        <trans-unit id="75718b5a5064a759c799f86d046d222d388baf38" translate="yes" xml:space="preserve">
          <source>Added in: v13.4.0, v12.15.0, v10.19.0</source>
          <target state="translated">追加されたバージョン:v13.4.0,v12.15.0,v10.19.0</target>
        </trans-unit>
        <trans-unit id="a78bf51e6fc5e8f18438c0ec6b57697ec79139b1" translate="yes" xml:space="preserve">
          <source>Added in: v13.4.0, v12.16.0</source>
          <target state="translated">追加されたバージョン:v13.4.0,v12.16.0</target>
        </trans-unit>
        <trans-unit id="26bbaaf5fbf271a0b4c16cdc0170e4c3af91be3a" translate="yes" xml:space="preserve">
          <source>Added in: v13.5.0, v12.16.0</source>
          <target state="translated">追加されたバージョン:v13.5.0,v12.16.0</target>
        </trans-unit>
        <trans-unit id="32590f149afa63d593e30187290c776b0a90eda6" translate="yes" xml:space="preserve">
          <source>Added in: v13.6.0</source>
          <target state="translated">追加されました:v13.6.0</target>
        </trans-unit>
        <trans-unit id="dc2154cf5f60b6b9616743f23beae8cde6271856" translate="yes" xml:space="preserve">
          <source>Added in: v13.6.0, v12.16.0</source>
          <target state="translated">追加されたバージョン:v13.6.0,v12.16.0</target>
        </trans-unit>
        <trans-unit id="9eefbb7464a8cb0ef433fd70020ddcff09fbd612" translate="yes" xml:space="preserve">
          <source>Added in: v13.6.0, v12.17.0</source>
          <target state="translated">追加されたバージョン:v13.6.0,v12.17.0</target>
        </trans-unit>
        <trans-unit id="fedcecd6e53ca0602e48757a850d0ab86e1ce216" translate="yes" xml:space="preserve">
          <source>Added in: v13.7.0</source>
          <target state="translated">追加されました:v13.7.0</target>
        </trans-unit>
        <trans-unit id="89ef62cc66e6e2be6a8d1d58644b70f4716623c8" translate="yes" xml:space="preserve">
          <source>Added in: v13.7.0, v10.20.0N-API version: 6</source>
          <target state="translated">追加されたバージョン:v13.7.0,v10.20.0N-APIバージョン:6</target>
        </trans-unit>
        <trans-unit id="4627400a8fd434d5dbbfa7b8c5d7f34325772a4a" translate="yes" xml:space="preserve">
          <source>Added in: v13.7.0, v12.17.0</source>
          <target state="translated">追加されたバージョン:v13.7.0,v12.17.0</target>
        </trans-unit>
        <trans-unit id="b2299eebbf029099f316e65aa7b1bd1a04c42e0e" translate="yes" xml:space="preserve">
          <source>Added in: v13.7.0, v12.17.0, v10.20.0N-API version: 6</source>
          <target state="translated">追加されたバージョン:v13.7.0,v12.17.0,v10.20.0N-API バージョン:6</target>
        </trans-unit>
        <trans-unit id="9f308aaa9e03256d547308d9c3c0a40cbfcfe222" translate="yes" xml:space="preserve">
          <source>Added in: v13.9.0</source>
          <target state="translated">追加されました:v13.9.0</target>
        </trans-unit>
        <trans-unit id="7defddf70e3a2aa52074600450bf3b2b8ceaa800" translate="yes" xml:space="preserve">
          <source>Added in: v13.9.0, v12.16.2</source>
          <target state="translated">追加されたバージョン:v13.9.0,v12.16.2</target>
        </trans-unit>
        <trans-unit id="bacd5d39b81175adc083649ff50b8b0e416d30c9" translate="yes" xml:space="preserve">
          <source>Added in: v13.9.0, v12.17.0</source>
          <target state="translated">追加されたバージョン:v13.9.0,v12.17.0</target>
        </trans-unit>
        <trans-unit id="3dbbb9377b533cb8c2a965f5ddf6b498758fc623" translate="yes" xml:space="preserve">
          <source>Added in: v14.0.0</source>
          <target state="translated">追加されました:v14.0.0.0</target>
        </trans-unit>
        <trans-unit id="9828e641df57b2139924989572124576e3c4174f" translate="yes" xml:space="preserve">
          <source>Added in: v14.1.0</source>
          <target state="translated">追加されました:v14.1.0</target>
        </trans-unit>
        <trans-unit id="1c903689b23a1dae63d43a247f954c0c036b9ad2" translate="yes" xml:space="preserve">
          <source>Added in: v14.1.0, v13.14.0</source>
          <target state="translated">追加されました:v14.1.0,v13.14.0</target>
        </trans-unit>
        <trans-unit id="ee674da014dfdc5ff9207b8c0209e4851aedd240" translate="yes" xml:space="preserve">
          <source>Added in: v14.10.0</source>
          <target state="translated">追加されました:v14.10.0</target>
        </trans-unit>
        <trans-unit id="3fb53960c06cb90839bb4889e1757663107a175b" translate="yes" xml:space="preserve">
          <source>Added in: v14.10.0, v12.19.0</source>
          <target state="translated">追加されたバージョン:v14.10.0,v12.19.0</target>
        </trans-unit>
        <trans-unit id="48d92ba800d1761f7fe2db2d246370e7d7238785" translate="yes" xml:space="preserve">
          <source>Added in: v14.11.0</source>
          <target state="translated">追加されました:v14.11.0</target>
        </trans-unit>
        <trans-unit id="2da08c3f4ed1475c47f90e5c159f4caffb551cf5" translate="yes" xml:space="preserve">
          <source>Added in: v14.13.1</source>
          <target state="translated">追加されました:v14.13.1</target>
        </trans-unit>
        <trans-unit id="f2b5eb654544f9c165784f4255570454f09108a4" translate="yes" xml:space="preserve">
          <source>Added in: v14.14.0</source>
          <target state="translated">追加されました:v14.14.0</target>
        </trans-unit>
        <trans-unit id="2e022c85da1e1a71371b1e6d44e0ff84e3dcfef7" translate="yes" xml:space="preserve">
          <source>Added in: v14.2.0</source>
          <target state="translated">追加されました:v14.2.0</target>
        </trans-unit>
        <trans-unit id="c1df909722051c6d3651b2622b1a2925e5bad808" translate="yes" xml:space="preserve">
          <source>Added in: v14.2.0, v12.19.0</source>
          <target state="translated">追加されました:v14.2.0,v12.19.0</target>
        </trans-unit>
        <trans-unit id="8942bb5699671b254af12cbef2d614818b8df415" translate="yes" xml:space="preserve">
          <source>Added in: v14.3.0</source>
          <target state="translated">追加されました:v14.3.0</target>
        </trans-unit>
        <trans-unit id="3818686fd4d46bcde493399a88ae447f13918904" translate="yes" xml:space="preserve">
          <source>Added in: v14.5.0</source>
          <target state="translated">追加されました:v14.5.0</target>
        </trans-unit>
        <trans-unit id="bb44517ca242a0024bcbfdf81b1c6e5208f1a19d" translate="yes" xml:space="preserve">
          <source>Added in: v14.5.0, v12.19.0</source>
          <target state="translated">追加されたバージョン:v14.5.0,v12.19.0</target>
        </trans-unit>
        <trans-unit id="b7c8f6d98d9eb2995b694e32e5647e076a10044f" translate="yes" xml:space="preserve">
          <source>Added in: v14.6.0</source>
          <target state="translated">追加されました:v14.6.0</target>
        </trans-unit>
        <trans-unit id="f7849731e29af97b8d0d45eadf8b40581dc3d563" translate="yes" xml:space="preserve">
          <source>Added in: v14.6.0, v12.19.0</source>
          <target state="translated">追加されたバージョン:v14.6.0,v12.19.0</target>
        </trans-unit>
        <trans-unit id="3575dfe455713ef3eabb8c8a91a511e59a6a31ef" translate="yes" xml:space="preserve">
          <source>Added in: v14.8.0</source>
          <target state="translated">追加されました:v14.8.0</target>
        </trans-unit>
        <trans-unit id="a44f213fb1dca962f9eea13b38feab54a34b09ad" translate="yes" xml:space="preserve">
          <source>Added in: v14.8.0, v12.19.0</source>
          <target state="translated">追加されたバージョン:v14.8.0,v12.19.0</target>
        </trans-unit>
        <trans-unit id="ddb614edd70e2d7756358c232d5e752d8862a51d" translate="yes" xml:space="preserve">
          <source>Added in: v14.9.0</source>
          <target state="translated">追加されました:v14.9.0</target>
        </trans-unit>
        <trans-unit id="31ad7e484522a07d5af1e6297552b42d98d36a62" translate="yes" xml:space="preserve">
          <source>Added in: v14.9.0, v12.19.0</source>
          <target state="translated">追加されたバージョン:v14.9.0,v12.19.0</target>
        </trans-unit>
        <trans-unit id="96ed9d0710aa50835e3e3b1bc8ce16f2b0fe938f" translate="yes" xml:space="preserve">
          <source>Added in: v15.0.0</source>
          <target state="translated">追加されました:v15.0.0.0</target>
        </trans-unit>
        <trans-unit id="987dfd10b06be474b1be4db372d368409086d852" translate="yes" xml:space="preserve">
          <source>Added in: v15.1.0</source>
          <target state="translated">追加されました:v15.1.0</target>
        </trans-unit>
        <trans-unit id="a2b0237682396a7d345614d8b116dc5b157613c0" translate="yes" xml:space="preserve">
          <source>Added in: v15.2.0</source>
          <target state="translated">追加されました:v15.2.0</target>
        </trans-unit>
        <trans-unit id="bce2e38b120d4ee79ab4970441a0e5b0a1081f9f" translate="yes" xml:space="preserve">
          <source>Added in: v15.3.0</source>
          <target state="translated">追加されました:v15.3.0</target>
        </trans-unit>
        <trans-unit id="4475dee5906be8d543efce7b36d00696cd6bf5db" translate="yes" xml:space="preserve">
          <source>Added in: v15.4.0</source>
          <target state="translated">追加されました:v15.4.0</target>
        </trans-unit>
        <trans-unit id="1c519cdd64bb50f56e88a60eb62495f1165de784" translate="yes" xml:space="preserve">
          <source>Added in: v2.0.0</source>
          <target state="translated">追加されました:v2.0.0.0</target>
        </trans-unit>
        <trans-unit id="b70c902afe367c2adfd989906bf742ee91848eec" translate="yes" xml:space="preserve">
          <source>Added in: v2.1.0</source>
          <target state="translated">追加されました:v2.1.0</target>
        </trans-unit>
        <trans-unit id="2624a00fa5ed15a9ee8f5977089ee75684e10fd7" translate="yes" xml:space="preserve">
          <source>Added in: v2.2.0</source>
          <target state="translated">追加されました:v2.2.0</target>
        </trans-unit>
        <trans-unit id="3987356d28bf7a021917846106f7a90fc9ad4bd5" translate="yes" xml:space="preserve">
          <source>Added in: v2.3.0</source>
          <target state="translated">追加されました:v2.3.0</target>
        </trans-unit>
        <trans-unit id="65b822de1ee0c33050d5f98219b77f23260603a7" translate="yes" xml:space="preserve">
          <source>Added in: v2.4.0</source>
          <target state="translated">追加されました:v2.4.0</target>
        </trans-unit>
        <trans-unit id="7393500c39cb5a442deb107fc64eab96f13ca4ad" translate="yes" xml:space="preserve">
          <source>Added in: v2.5.0</source>
          <target state="translated">追加されました:v2.5.0</target>
        </trans-unit>
        <trans-unit id="485553a0c277c7a424bfaf48a162380ea3072ebf" translate="yes" xml:space="preserve">
          <source>Added in: v3.0.0</source>
          <target state="translated">追加されました:v3.0.0.0</target>
        </trans-unit>
        <trans-unit id="d19b66ee8a7418dfb3d9b8ae299829fe47ddde4c" translate="yes" xml:space="preserve">
          <source>Added in: v3.2.0</source>
          <target state="translated">追加されました:v3.2.0</target>
        </trans-unit>
        <trans-unit id="b7e10c563d1a511857577ed3d50cdf0c891ff3fc" translate="yes" xml:space="preserve">
          <source>Added in: v4.0.0</source>
          <target state="translated">追加されました:v4.0.0.0</target>
        </trans-unit>
        <trans-unit id="79fd69509e0c0582ee1869bf2c23e27cb95410f3" translate="yes" xml:space="preserve">
          <source>Added in: v5.0.0</source>
          <target state="translated">追加されたバージョン:v5.0.0.0</target>
        </trans-unit>
        <trans-unit id="5e9da09bc8f48050c26f78cf41696aac6a511802" translate="yes" xml:space="preserve">
          <source>Added in: v5.0.0, v4.2.0</source>
          <target state="translated">追加されたバージョン:v5.0.0.0,v4.2.0</target>
        </trans-unit>
        <trans-unit id="97619bdb93a504480a2292661f833a423d8842e8" translate="yes" xml:space="preserve">
          <source>Added in: v5.10.0</source>
          <target state="translated">追加されたバージョン:v5.10.0</target>
        </trans-unit>
        <trans-unit id="990cfa1a62b665f91fb552ebf6a5346b419e11d7" translate="yes" xml:space="preserve">
          <source>Added in: v5.12.0</source>
          <target state="translated">追加されたバージョン:v5.12.0</target>
        </trans-unit>
        <trans-unit id="ee2a3a230e303431c27cacdc7c376a3299739df1" translate="yes" xml:space="preserve">
          <source>Added in: v5.2.0</source>
          <target state="translated">追加されたバージョン:v5.2.0</target>
        </trans-unit>
        <trans-unit id="fbdd0eaf6115d8b0b83573aac2a2fbf687e84164" translate="yes" xml:space="preserve">
          <source>Added in: v5.3.0</source>
          <target state="translated">追加されたバージョン:v5.3.0</target>
        </trans-unit>
        <trans-unit id="7498ae488a999b05305d157ce4b817a3b90c0095" translate="yes" xml:space="preserve">
          <source>Added in: v5.5.0</source>
          <target state="translated">追加されたバージョン:v5.5.0</target>
        </trans-unit>
        <trans-unit id="970b4bca078bc5e0fa09e3180deb0e7eae852d8c" translate="yes" xml:space="preserve">
          <source>Added in: v5.7.0</source>
          <target state="translated">追加されたバージョン:v5.7.0</target>
        </trans-unit>
        <trans-unit id="04166f39c09a93b8f5fe286db34fad81df2df317" translate="yes" xml:space="preserve">
          <source>Added in: v6.0.0</source>
          <target state="translated">追加されました:v6.0.0</target>
        </trans-unit>
        <trans-unit id="8dcbe6382d21fbeab35327d091aa3018cfe996e6" translate="yes" xml:space="preserve">
          <source>Added in: v6.0.0Deprecated since: v10.0.0</source>
          <target state="translated">追加されました:v6.0.0Deprecated since:v10.0.0</target>
        </trans-unit>
        <trans-unit id="df0903f1703328ecfd2111646fafada255d074c7" translate="yes" xml:space="preserve">
          <source>Added in: v6.1.0</source>
          <target state="translated">追加されました:v6.1.0</target>
        </trans-unit>
        <trans-unit id="2402bb10ed0d5a8a12001e187dfe602d0b3e4584" translate="yes" xml:space="preserve">
          <source>Added in: v6.11.0</source>
          <target state="translated">追加されました:v6.11.0</target>
        </trans-unit>
        <trans-unit id="d0315bf5f8b530681c3a9e8909ba3bf4c131c97a" translate="yes" xml:space="preserve">
          <source>Added in: v6.3.0</source>
          <target state="translated">追加されました:v6.3.0</target>
        </trans-unit>
        <trans-unit id="137045d393113a0335f199e1d3b71f4ec2c20af1" translate="yes" xml:space="preserve">
          <source>Added in: v6.4.0</source>
          <target state="translated">追加されました:v6.4.0</target>
        </trans-unit>
        <trans-unit id="2f1d9ec371f92ffad423cfd57cfd0b407e752c57" translate="yes" xml:space="preserve">
          <source>Added in: v6.6.0</source>
          <target state="translated">追加されました:v6.6.0</target>
        </trans-unit>
        <trans-unit id="2de8a3f6389215cb41df7f28e5d256c27f4d6abf" translate="yes" xml:space="preserve">
          <source>Added in: v6.9.0</source>
          <target state="translated">追加されました:v6.9.0</target>
        </trans-unit>
        <trans-unit id="93d9c42e7c05512e3422b7b713ad1229f4378073" translate="yes" xml:space="preserve">
          <source>Added in: v7.0.0</source>
          <target state="translated">追加されました:v7.0.0.0</target>
        </trans-unit>
        <trans-unit id="3056b1b9034cb765c1d2a41b4aa3aa35cd697505" translate="yes" xml:space="preserve">
          <source>Added in: v7.0.0, v6.13.0</source>
          <target state="translated">追加されました:v7.0.0.0,v6.13.0</target>
        </trans-unit>
        <trans-unit id="0a09b5dc07182abd12041214beddf761879cafcc" translate="yes" xml:space="preserve">
          <source>Added in: v7.1.0</source>
          <target state="translated">追加されました:v7.1.0</target>
        </trans-unit>
        <trans-unit id="287e670bac01f7bfec68211aa91b8f3961d4b652" translate="yes" xml:space="preserve">
          <source>Added in: v7.10.0</source>
          <target state="translated">追加されました:v7.10.0</target>
        </trans-unit>
        <trans-unit id="0bfa8b96508f97c3fcac1aabe51ff2897e00f467" translate="yes" xml:space="preserve">
          <source>Added in: v7.10.0, v6.13.0</source>
          <target state="translated">追加されたバージョン:v7.10.0,v6.13.0</target>
        </trans-unit>
        <trans-unit id="b76d0e857f5855da44343e4fa83dced4eb1c3f3a" translate="yes" xml:space="preserve">
          <source>Added in: v7.3.0</source>
          <target state="translated">追加されました:v7.3.0</target>
        </trans-unit>
        <trans-unit id="982d4d8255712066c5041fa12e9d4b8904f2f1f7" translate="yes" xml:space="preserve">
          <source>Added in: v7.4.0, v6.13.0</source>
          <target state="translated">追加された内容:v7.4.0,v6.13.0</target>
        </trans-unit>
        <trans-unit id="f67c6708d4f3d56a64514b479fadcecde729f2ad" translate="yes" xml:space="preserve">
          <source>Added in: v7.5.0, v6.13.0</source>
          <target state="translated">追加されました:v7.5.0,v6.13.0</target>
        </trans-unit>
        <trans-unit id="65bad01e763088156d6be43838ca8bea7f4f3dff" translate="yes" xml:space="preserve">
          <source>Added in: v7.6.0</source>
          <target state="translated">追加されました:v7.6.0</target>
        </trans-unit>
        <trans-unit id="76243dc6c0b94ef01841a735d73129ee4bc979b1" translate="yes" xml:space="preserve">
          <source>Added in: v7.7.0</source>
          <target state="translated">追加されました:v7.7.0</target>
        </trans-unit>
        <trans-unit id="1bef310e38f9ba1b44f2f581a943ffbc3d913919" translate="yes" xml:space="preserve">
          <source>Added in: v7.7.0, v6.13.0</source>
          <target state="translated">追加されたバージョン:v7.7.0,v6.13.0</target>
        </trans-unit>
        <trans-unit id="bf685c2e297b25e09ab8a118ef10f63fdb787546" translate="yes" xml:space="preserve">
          <source>Added in: v8.0.0</source>
          <target state="translated">追加されました:v8.0.0.0</target>
        </trans-unit>
        <trans-unit id="ae185f065c3b8df72a3adb031abb24963c080c44" translate="yes" xml:space="preserve">
          <source>Added in: v8.0.0N-API version: 1</source>
          <target state="translated">追加されました:v8.0.0.0N-API バージョン:1</target>
        </trans-unit>
        <trans-unit id="242e370564d26adfa49d4db0e3097c4b1e60e3f1" translate="yes" xml:space="preserve">
          <source>Added in: v8.0.0N-API version: 5</source>
          <target state="translated">追加されました:v8.0.0.0N-API バージョン:5</target>
        </trans-unit>
        <trans-unit id="24a8baf881fbc2278266961a0a757268a166b659" translate="yes" xml:space="preserve">
          <source>Added in: v8.0.0Removed in: v11.7.0</source>
          <target state="translated">で追加されました:v8.0.0Removed in:v11.7.0</target>
        </trans-unit>
        <trans-unit id="8a62564288f801c9ad3de3ccd18a3d8f26e13db5" translate="yes" xml:space="preserve">
          <source>Added in: v8.0.0Removed in: v15.0.0</source>
          <target state="translated">で追加されました:v8.0.0.0Removed in:v15.0.0</target>
        </trans-unit>
        <trans-unit id="ee3f4542deb7de2c485a0b0dd7d61ebe26430dda" translate="yes" xml:space="preserve">
          <source>Added in: v8.0.0Removed in: v9.0.0</source>
          <target state="translated">で追加されました:v8.0.0.0Removed in:v9.0.0</target>
        </trans-unit>
        <trans-unit id="8caf89cca82b14bcb149c46504766a1251513f2c" translate="yes" xml:space="preserve">
          <source>Added in: v8.1.0</source>
          <target state="translated">追加されました:v8.1.0</target>
        </trans-unit>
        <trans-unit id="b8ef2d08a78e4d8cee1923c13e84c7fd60f79110" translate="yes" xml:space="preserve">
          <source>Added in: v8.1.0Deprecated since: v10.0.0</source>
          <target state="translated">追加されました:v8.1.0Deprecated since:v10.0.0</target>
        </trans-unit>
        <trans-unit id="17889e4671835dffa79ec92ae820fd63cdb69e84" translate="yes" xml:space="preserve">
          <source>Added in: v8.10.0, v9.3.0N-API version: 2</source>
          <target state="translated">追加されたバージョン:v8.10.0,v9.3.0N-API バージョン:2</target>
        </trans-unit>
        <trans-unit id="795efa643aaaa79a0ec1df150c8b3775cda6efda" translate="yes" xml:space="preserve">
          <source>Added in: v8.2.0</source>
          <target state="translated">追加されました:v8.2.0</target>
        </trans-unit>
        <trans-unit id="4e69d1046d81dbd1beccbe28e0a04eb9e6858a0f" translate="yes" xml:space="preserve">
          <source>Added in: v8.2.0N-API version: 1</source>
          <target state="translated">追加されました:v8.2.0N-API バージョン:1</target>
        </trans-unit>
        <trans-unit id="6b70dd1818d50f9334daf2f2ae6931610b2e4d86" translate="yes" xml:space="preserve">
          <source>Added in: v8.3.0</source>
          <target state="translated">追加されました:v8.3.0</target>
        </trans-unit>
        <trans-unit id="0eff029a67f7e0737e9d19aa1914decaed9a9a47" translate="yes" xml:space="preserve">
          <source>Added in: v8.3.0N-API version: 1</source>
          <target state="translated">追加されました:v8.3.0N-API バージョン:1</target>
        </trans-unit>
        <trans-unit id="eba2af054946fb684e76b26f56e4c131942e6a37" translate="yes" xml:space="preserve">
          <source>Added in: v8.4.0</source>
          <target state="translated">追加されました:v8.4.0</target>
        </trans-unit>
        <trans-unit id="1e5cc27fcd572b6248c1967bae8ade5b65048233" translate="yes" xml:space="preserve">
          <source>Added in: v8.4.0Deprecated since: v13.0.0</source>
          <target state="translated">追加されました:v8.4.0Deprecated since:v13.0.0</target>
        </trans-unit>
        <trans-unit id="5b70470364339b4cd01cb9cb3587630710033232" translate="yes" xml:space="preserve">
          <source>Added in: v8.4.0Deprecated since: v13.4.0, v12.16.0</source>
          <target state="translated">追加されました:v8.4.0Deprecated since:v13.4.0,v12.16.0</target>
        </trans-unit>
        <trans-unit id="36895a84e60c1d5199443944594e076a4fe807ba" translate="yes" xml:space="preserve">
          <source>Added in: v8.4.0N-API version: 1</source>
          <target state="translated">追加されました:v8.4.0N-API バージョン:1</target>
        </trans-unit>
        <trans-unit id="202368ca6563c89197fe6ac13e2ff8e40c99ffbc" translate="yes" xml:space="preserve">
          <source>Added in: v8.5.0</source>
          <target state="translated">追加されました:v8.5.0</target>
        </trans-unit>
        <trans-unit id="4cdfeb4543934a6b47c8650423cf41b06c1dd836" translate="yes" xml:space="preserve">
          <source>Added in: v8.5.0N-API version: 1</source>
          <target state="translated">追加されました:v8.5.0.0N-API バージョン:1</target>
        </trans-unit>
        <trans-unit id="75cdc316c0ceb2df81c226cc3b02f2862a1af309" translate="yes" xml:space="preserve">
          <source>Added in: v8.6.0</source>
          <target state="translated">追加されました:v8.6.0</target>
        </trans-unit>
        <trans-unit id="4b5506f9347fe6a2336d62a422f971360e302414" translate="yes" xml:space="preserve">
          <source>Added in: v8.6.0N-API version: 1</source>
          <target state="translated">追加されました:v8.6.0N-API バージョン:1</target>
        </trans-unit>
        <trans-unit id="469dd4311c2a7ce44e4bf7d5bd9f972dec0a49ce" translate="yes" xml:space="preserve">
          <source>Added in: v8.7.0</source>
          <target state="translated">追加されました:v8.7.0</target>
        </trans-unit>
        <trans-unit id="6e397dd03f0e347c9c9b90fb7cae5a05dbd8b347" translate="yes" xml:space="preserve">
          <source>Added in: v8.9.0</source>
          <target state="translated">追加されました:v8.9.0</target>
        </trans-unit>
        <trans-unit id="34b92ebcd964b13c581d922574f522914aaf43b5" translate="yes" xml:space="preserve">
          <source>Added in: v8.9.3</source>
          <target state="translated">追加されました:v8.9.3</target>
        </trans-unit>
        <trans-unit id="9a014c7ecc4b2e7d092004da3e49d8ec0bcf7d4d" translate="yes" xml:space="preserve">
          <source>Added in: v9.0.0</source>
          <target state="translated">追加されました:v9.0.0.0</target>
        </trans-unit>
        <trans-unit id="db811d500d9136ba666f517f7f94465d7efcd21a" translate="yes" xml:space="preserve">
          <source>Added in: v9.0.0Removed in: v10.0.0</source>
          <target state="translated">で追加されました:v9.0.0.0Removed in:v10.0.0</target>
        </trans-unit>
        <trans-unit id="19b854acee217064ab10ffaddb24e94b982dc7ef" translate="yes" xml:space="preserve">
          <source>Added in: v9.0.0Removed in: v12.12.0</source>
          <target state="translated">で追加されました:v9.0.0Removed in:v12.12.0</target>
        </trans-unit>
        <trans-unit id="ef4215b1e792c091742570241ee218256003c949" translate="yes" xml:space="preserve">
          <source>Added in: v9.0.0Removed in: v14.0.0</source>
          <target state="translated">で追加されました:v9.0.0.0Removed in:v14.0.0</target>
        </trans-unit>
        <trans-unit id="076d48299e2f887253fdd912b40f58f3e51feeb2" translate="yes" xml:space="preserve">
          <source>Added in: v9.0.0Removed in: v15.0.0</source>
          <target state="translated">で追加されました:v9.0.0.0Removed in:v15.0.0</target>
        </trans-unit>
        <trans-unit id="290f337c64b85a169d2dade9d5e74fb41ec0fbf4" translate="yes" xml:space="preserve">
          <source>Added in: v9.10.0N-API version: 3</source>
          <target state="translated">追加されました:v9.10.0N-API バージョン:3</target>
        </trans-unit>
        <trans-unit id="12fa91819fef107e5933bf50cbfa82c7d33b327d" translate="yes" xml:space="preserve">
          <source>Added in: v9.11.0</source>
          <target state="translated">追加されました:v9.11.0</target>
        </trans-unit>
        <trans-unit id="d6f949394fbd6567d9c6a49042ab9acaa7df5573" translate="yes" xml:space="preserve">
          <source>Added in: v9.2.0</source>
          <target state="translated">追加されました:v9.2.0</target>
        </trans-unit>
        <trans-unit id="fd783905b70767eca7aadb87409a01bcc12bf997" translate="yes" xml:space="preserve">
          <source>Added in: v9.2.0, v8.10.0, v6.13.0</source>
          <target state="translated">追加されたバージョン:v9.2.0,v8.10.0,v6.13.0</target>
        </trans-unit>
        <trans-unit id="cb66a1b95c7c7901686eaecce198e7f2f24277c8" translate="yes" xml:space="preserve">
          <source>Added in: v9.3.0</source>
          <target state="translated">追加されました:v9.3.0</target>
        </trans-unit>
        <trans-unit id="6875bb626ed83470871f14bc3eb904005bbe28e0" translate="yes" xml:space="preserve">
          <source>Added in: v9.3.0, v8.10.0, v6.13.0</source>
          <target state="translated">追加されたバージョン:v9.3.0,v8.10.0,v6.13.0</target>
        </trans-unit>
        <trans-unit id="3e1a672eb38ca105cf441a031d2dbd97a8392e82" translate="yes" xml:space="preserve">
          <source>Added in: v9.3.0, v8.10.0N-API version: 2</source>
          <target state="translated">追加されたバージョン:v9.3.0,v8.10.0N-API バージョン:2</target>
        </trans-unit>
        <trans-unit id="b1c2aa1198a393ff8ace355038c433463c3bc619" translate="yes" xml:space="preserve">
          <source>Added in: v9.4.0</source>
          <target state="translated">追加されました:v9.4.0</target>
        </trans-unit>
        <trans-unit id="701c1f712d965c00379fdb7c95b0b0fb6d8766a0" translate="yes" xml:space="preserve">
          <source>Added in: v9.5.0</source>
          <target state="translated">追加されました:v9.5.0</target>
        </trans-unit>
        <trans-unit id="5eb0d3c62aa407943c9859cede09e2280e40b006" translate="yes" xml:space="preserve">
          <source>Added in: v9.6.0</source>
          <target state="translated">追加されました:v9.6.0</target>
        </trans-unit>
        <trans-unit id="70f9c96be29c79fcdb6189293e63d56223c58600" translate="yes" xml:space="preserve">
          <source>Added in: v9.6.0N-API version: 3</source>
          <target state="translated">追加されました:v9.6.0N-API バージョン:3</target>
        </trans-unit>
        <trans-unit id="a6317270b523708d294e6fce535ad5c515ba8e2b" translate="yes" xml:space="preserve">
          <source>Added in: v9.7.0</source>
          <target state="translated">追加されました:v9.7.0</target>
        </trans-unit>
        <trans-unit id="60c5ef77511e28f05eb81362856fdaf7c5d8c242" translate="yes" xml:space="preserve">
          <source>Added in: v9.8.0</source>
          <target state="translated">追加されました:v9.8.0</target>
        </trans-unit>
        <trans-unit id="141dd55b71ab956ae39d6e2adfee7001d97e5e02" translate="yes" xml:space="preserve">
          <source>Added in: v9.9.0</source>
          <target state="translated">追加されました:v9.9.0</target>
        </trans-unit>
        <trans-unit id="e5052f129c39177d96f7c45c8dd68968dcb5fe95" translate="yes" xml:space="preserve">
          <source>Added strict assertion mode to the assert module.</source>
          <target state="translated">assertモジュールに厳密なアサーションモードを追加しました。</target>
        </trans-unit>
        <trans-unit id="8c900dd3d60bb1fa476c7c7f6f98f7658fbaf69b" translate="yes" xml:space="preserve">
          <source>Added strict mode to the assert module.</source>
          <target state="translated">assertモジュールにstrictモードを追加しました。</target>
        </trans-unit>
        <trans-unit id="28e4909e27133807fb76ed0b72c6a5454573316f" translate="yes" xml:space="preserve">
          <source>Added string, ArrayBuffer, and CryptoKey as allowable key types. The oaepLabel and passphrase can be ArrayBuffers. The buffer can be a string or ArrayBuffer. All types that accept buffers are limited to a maximum of 2 ** 31 - 1 bytes.</source>
          <target state="translated">文字列、ArrayBuffer、およびCryptoKeyを許容するキータイプとして追加しました。oaepLabelとパスフレーズはArrayBufferにすることができます。バッファは文字列またはArrayBufferにすることができます。バッファを受け入れるすべてのタイプは、最大2 **31-1バイトに制限されている。</target>
        </trans-unit>
        <trans-unit id="14221284c811417fe35a59f4f263f7379745fa13" translate="yes" xml:space="preserve">
          <source>Added string, ArrayBuffer, and CryptoKey as allowable key types. The oaepLabel can be an ArrayBuffer. The buffer can be a string or ArrayBuffer. All types that accept buffers are limited to a maximum of 2 ** 31 - 1 bytes.</source>
          <target state="translated">文字列、ArrayBuffer、およびCryptoKeyを許容するキータイプとして追加しました。oaepLabelはArrayBufferにすることができます。バッファは文字列またはArrayBufferにすることができます。バッファを受け入れるすべてのタイプは、最大2 **31-1バイトに制限されています。</target>
        </trans-unit>
        <trans-unit id="3b651919269db868e9d70586414e1f09eb346f15" translate="yes" xml:space="preserve">
          <source>Added string, ArrayBuffer, and CryptoKey as allowable key types. The passphrase can be an ArrayBuffer. The buffer can be a string or ArrayBuffer. All types that accept buffers are limited to a maximum of 2 ** 31 - 1 bytes.</source>
          <target state="translated">許容される鍵の種類として、文字列、ArrayBuffer、およびCryptoKeyが追加されました。パスフレーズはArrayBufferにすることができます。バッファは文字列またはArrayBufferにすることができます。バッファを受け入れるすべてのタイプは、最大2 **31-1バイトに制限されています。</target>
        </trans-unit>
        <trans-unit id="5ae005469b2f6a589461f6dc157c92efe5127a2b" translate="yes" xml:space="preserve">
          <source>Added support for &lt;code&gt;'dh'&lt;/code&gt;.</source>
          <target state="translated">Added support for &lt;code&gt;'dh'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7c672e1c8d8262b87e75b332acd611d179588a65" translate="yes" xml:space="preserve">
          <source>Added support for &lt;code&gt;'ed25519'&lt;/code&gt; and &lt;code&gt;'ed448'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'ed25519'&lt;/code&gt; と &lt;code&gt;'ed448'&lt;/code&gt; サポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="809f5b66e2d4ea71f24b016df1b9057946b3f294" translate="yes" xml:space="preserve">
          <source>Added support for &lt;code&gt;'rsa-pss'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'rsa-pss'&lt;/code&gt; サポートを追加</target>
        </trans-unit>
        <trans-unit id="cc02ed1841b3523fb2f1e65995fd41a9f5567ece" translate="yes" xml:space="preserve">
          <source>Added support for &lt;code&gt;'rsa-pss'&lt;/code&gt;.</source>
          <target state="translated">Added support for &lt;code&gt;'rsa-pss'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9767cefcfc3363272a0015fb330097c8edac4f4b" translate="yes" xml:space="preserve">
          <source>Added support for &lt;code&gt;'x25519'&lt;/code&gt; and &lt;code&gt;'x448'&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'x25519'&lt;/code&gt; と &lt;code&gt;'x448'&lt;/code&gt; サポートを追加しました</target>
        </trans-unit>
        <trans-unit id="0cd7f4083897e5da2e3975f6d3fa682c53994f47" translate="yes" xml:space="preserve">
          <source>Added support for &lt;code&gt;'x25519'&lt;/code&gt; and &lt;code&gt;'x448'&lt;/code&gt;.</source>
          <target state="translated">Added support for &lt;code&gt;'x25519'&lt;/code&gt; and &lt;code&gt;'x448'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41a2862daf1f7cadeea075fde09824286c6da852" translate="yes" xml:space="preserve">
          <source>Added support for &lt;code&gt;--pending-deprecation&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--pending-deprecation&lt;/code&gt; のサポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="4a386ce8cdcfb480bf14b090567e11b9d1ac2487" translate="yes" xml:space="preserve">
          <source>Added support for &lt;code&gt;SIGINFO&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SIGINFO&lt;/code&gt; のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="f9bdc0a4251662ae8ffc85a50b757cb620c3ea0c" translate="yes" xml:space="preserve">
          <source>Added support for sending data on connected sockets.</source>
          <target state="translated">接続されたソケットでのデータ送信に対応しました。</target>
        </trans-unit>
        <trans-unit id="3a00a0d0e63bc9b6371309c4929badf3ce1c13eb" translate="yes" xml:space="preserve">
          <source>Added support for the &lt;code&gt;dns.ALL&lt;/code&gt; flag.</source>
          <target state="translated">Added support for the &lt;code&gt;dns.ALL&lt;/code&gt; flag.</target>
        </trans-unit>
        <trans-unit id="1332a0d5e146629c97b67a738af9f9dc1145c344" translate="yes" xml:space="preserve">
          <source>Added support for the &lt;code&gt;flags&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; 引数のサポートが追加されました。</target>
        </trans-unit>
        <trans-unit id="5e8bc7593d043217cd8357cebe4ee55b92c637bc" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;Http1IncomingMessage&lt;/code&gt; and &lt;code&gt;Http1ServerResponse&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;Http1IncomingMessage&lt;/code&gt; および &lt;code&gt;Http1ServerResponse&lt;/code&gt; オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="1841316de56f42c834f345247ada7cbf7c7d1af3" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;maxHeaderListPairs&lt;/code&gt; option with a default limit of 128 header pairs.</source>
          <target state="translated">&lt;code&gt;maxHeaderListPairs&lt;/code&gt; オプションが追加されました。デフォルトの制限は128ヘッダーペアです。</target>
        </trans-unit>
        <trans-unit id="e450009b9640f17762462225aa222b6a00d02d1a" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;maxOutstandingPings&lt;/code&gt; option with a default limit of 10.</source>
          <target state="translated">デフォルトの制限が10 の &lt;code&gt;maxOutstandingPings&lt;/code&gt; オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="118a63162b29dcac17c196fdf28f87f6ab01096b" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;origin&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;origin&lt;/code&gt; 引数が追加されました。</target>
        </trans-unit>
        <trans-unit id="9f4521380ea4a856dc002e4fff9c28a290f2e9f0" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;origins&lt;/code&gt; option to automatically send an &lt;code&gt;ORIGIN&lt;/code&gt; frame on &lt;code&gt;Http2Session&lt;/code&gt; startup.</source>
          <target state="translated">&lt;code&gt;Http2Session&lt;/code&gt; の起動時に &lt;code&gt;ORIGIN&lt;/code&gt; フレームを自動的に送信する &lt;code&gt;origins&lt;/code&gt; オプションが追加されました。</target>
        </trans-unit>
        <trans-unit id="1840c4a73a3e0d101a2416d8dce5981454d46ca2" translate="yes" xml:space="preserve">
          <source>Added times as numbers.</source>
          <target state="translated">回数を数字として追加しました。</target>
        </trans-unit>
        <trans-unit id="b5617daae8450d9a57dc85d770f124c4301fe94d" translate="yes" xml:space="preserve">
          <source>Addenda: Package Manager Tips</source>
          <target state="translated">Addenda.パッケージマネージャのヒント</target>
        </trans-unit>
        <trans-unit id="51b26c28bf4281b9969db538aeaa727ca860791b" translate="yes" xml:space="preserve">
          <source>Addenda: Package manager tips</source>
          <target state="translated">追加情報。パッケージマネージャのヒント</target>
        </trans-unit>
        <trans-unit id="e2283d9614fbc149752a5c5a7700465bc045c627" translate="yes" xml:space="preserve">
          <source>Addenda: The .mjs extension</source>
          <target state="translated">Addenda..mjsの拡張子</target>
        </trans-unit>
        <trans-unit id="1eff70f0b9c15286502b8e0c0d82c89e3e7fcc4a" translate="yes" xml:space="preserve">
          <source>Addenda: The &lt;code&gt;.mjs&lt;/code&gt; extension</source>
          <target state="translated">Addenda: The &lt;code&gt;.mjs&lt;/code&gt; extension</target>
        </trans-unit>
        <trans-unit id="383cc7819d01fa0a6f3014416dc06f42f1060b9a" translate="yes" xml:space="preserve">
          <source>Adding a &lt;a href=&quot;#stream_event_data&quot;&gt;&lt;code&gt;'data'&lt;/code&gt;&lt;/a&gt; event handler.</source>
          <target state="translated">&lt;a href=&quot;#stream_event_data&quot;&gt; &lt;code&gt;'data'&lt;/code&gt; &lt;/a&gt;イベントハンドラーを追加します。</target>
        </trans-unit>
        <trans-unit id="c4c56059703d51ea1aefa61f2b3375fe3c8e3f98" translate="yes" xml:space="preserve">
          <source>Adding a &lt;a href=&quot;#stream_event_readable&quot;&gt;&lt;code&gt;'readable'&lt;/code&gt;&lt;/a&gt; event handler automatically make the stream to stop flowing, and the data to be consumed via &lt;a href=&quot;#stream_readable_read_size&quot;&gt;&lt;code&gt;readable.read()&lt;/code&gt;&lt;/a&gt;. If the &lt;a href=&quot;#stream_event_readable&quot;&gt;&lt;code&gt;'readable'&lt;/code&gt;&lt;/a&gt; event handler is removed, then the stream will start flowing again if there is a &lt;a href=&quot;#stream_event_data&quot;&gt;&lt;code&gt;'data'&lt;/code&gt;&lt;/a&gt; event handler.</source>
          <target state="translated">&lt;a href=&quot;#stream_event_readable&quot;&gt; &lt;code&gt;'readable'&lt;/code&gt; &lt;/a&gt;イベントハンドラーを追加すると、ストリームのフローが自動的に停止し、データが&lt;a href=&quot;#stream_readable_read_size&quot;&gt; &lt;code&gt;readable.read()&lt;/code&gt; を&lt;/a&gt;介して消費されます。場合は&lt;a href=&quot;#stream_event_readable&quot;&gt; &lt;code&gt;'readable'&lt;/code&gt; &lt;/a&gt;イベントハンドラが削除され、その後、流れがあれば再び流れ始めます&lt;a href=&quot;#stream_event_data&quot;&gt; &lt;code&gt;'data'&lt;/code&gt; &lt;/a&gt;のイベントハンドラ。</target>
        </trans-unit>
        <trans-unit id="f1a7192fc024b82ee40558aa619f4d600fc865c5" translate="yes" xml:space="preserve">
          <source>Adding a &lt;a href=&quot;#stream_event_readable&quot;&gt;&lt;code&gt;'readable'&lt;/code&gt;&lt;/a&gt; event handler automatically makes the stream stop flowing, and the data has to be consumed via &lt;a href=&quot;#stream_readable_read_size&quot;&gt;&lt;code&gt;readable.read()&lt;/code&gt;&lt;/a&gt;. If the &lt;a href=&quot;#stream_event_readable&quot;&gt;&lt;code&gt;'readable'&lt;/code&gt;&lt;/a&gt; event handler is removed, then the stream will start flowing again if there is a &lt;a href=&quot;#stream_event_data&quot;&gt;&lt;code&gt;'data'&lt;/code&gt;&lt;/a&gt; event handler.</source>
          <target state="translated">Adding a &lt;a href=&quot;#stream_event_readable&quot;&gt; &lt;code&gt;'readable'&lt;/code&gt; &lt;/a&gt; event handler automatically makes the stream stop flowing, and the data has to be consumed via &lt;a href=&quot;#stream_readable_read_size&quot;&gt; &lt;code&gt;readable.read()&lt;/code&gt; &lt;/a&gt;. If the &lt;a href=&quot;#stream_event_readable&quot;&gt; &lt;code&gt;'readable'&lt;/code&gt; &lt;/a&gt; event handler is removed, then the stream will start flowing again if there is a &lt;a href=&quot;#stream_event_data&quot;&gt; &lt;code&gt;'data'&lt;/code&gt; &lt;/a&gt; event handler.</target>
        </trans-unit>
        <trans-unit id="8cc06069dca51db1f8e4c28eff62833b94ddcc6d" translate="yes" xml:space="preserve">
          <source>Adding or replacing entries is also possible. This cache is checked before native modules and if a name matching a native module is added to the cache, no require call is going to receive the native module anymore. Use with care!</source>
          <target state="translated">エントリの追加や置換も可能です。このキャッシュはネイティブモジュールの前にチェックされ、ネイティブモジュールにマッチする名前がキャッシュに追加された場合、requireコールはもうネイティブモジュールを受け取ろうとしません。注意して使用してください!</target>
        </trans-unit>
        <trans-unit id="a6886107051f6296b301c835737605aa7c616a6a" translate="yes" xml:space="preserve">
          <source>Additional Notes</source>
          <target state="translated">その他の注意事項</target>
        </trans-unit>
        <trans-unit id="caf6c48a80b5b82f939d073428fcf7b0b37620f9" translate="yes" xml:space="preserve">
          <source>Additional arguments after &lt;code&gt;callback&lt;/code&gt; are now supported.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 後の追加の引数がサポートされるようになりました。</target>
        </trans-unit>
        <trans-unit id="88c76aeba84e18fbbb121c6ed63f0f41601bec87" translate="yes" xml:space="preserve">
          <source>Additional documentation is available in the &lt;a href=&quot;report&quot;&gt;report documentation&lt;/a&gt;.</source>
          <target state="translated">追加のドキュメントは、&lt;a href=&quot;report&quot;&gt;レポートドキュメントで&lt;/a&gt;入手できます。</target>
        </trans-unit>
        <trans-unit id="622ff40d2ecbc23712841f63438f225899a57b03" translate="yes" xml:space="preserve">
          <source>Additional experimental flags are available for importing &lt;a href=&quot;#esm_experimental_wasm_modules&quot;&gt;Wasm modules&lt;/a&gt; or &lt;a href=&quot;#esm_experimental_json_modules&quot;&gt;JSON modules&lt;/a&gt;. For importing native modules or JSON modules unflagged, see &lt;a href=&quot;module#module_module_createrequire_filename&quot;&gt;&lt;code&gt;module.createRequire()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Additional experimental flags are available for importing &lt;a href=&quot;#esm_experimental_wasm_modules&quot;&gt;Wasm modules&lt;/a&gt; or &lt;a href=&quot;#esm_experimental_json_modules&quot;&gt;JSON modules&lt;/a&gt;. For importing native modules or JSON modules unflagged, see &lt;a href=&quot;module#module_module_createrequire_filename&quot;&gt; &lt;code&gt;module.createRequire()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="41b5f2e6aebc43182a4eee3c33dbf7e657d4ea1a" translate="yes" xml:space="preserve">
          <source>Additional notes</source>
          <target state="translated">追加の注意事項</target>
        </trans-unit>
        <trans-unit id="801b4827f1ba8763ddae40d6da7065e3f1a93919" translate="yes" xml:space="preserve">
          <source>Additional options:</source>
          <target state="translated">追加オプションです。</target>
        </trans-unit>
        <trans-unit id="652832107119893b4f924f8fd8b7bca0bcfb73ea" translate="yes" xml:space="preserve">
          <source>Additional parameters for specifying offsets are supported now.</source>
          <target state="translated">オフセットを指定するための追加パラメータがサポートされました。</target>
        </trans-unit>
        <trans-unit id="05fbbefcaed494800c7b76dfd39b0dee73c53016" translate="yes" xml:space="preserve">
          <source>Additional runtime configuration of report generation is available via the following properties of &lt;code&gt;process.report&lt;/code&gt;:</source>
          <target state="translated">レポート生成の追加のランタイム構成は、 &lt;code&gt;process.report&lt;/code&gt; の次のプロパティを介して利用できます。</target>
        </trans-unit>
        <trans-unit id="9007aef8bc8c9cced94e11ca6d2b69893c1ded68" translate="yes" xml:space="preserve">
          <source>Additionally, N-API provides a set of functions which allow calling JavaScript functions from native code. One can either call a function like a regular JavaScript function call, or as a constructor function.</source>
          <target state="translated">さらに、N-APIは、ネイティブコードからJavaScriptの関数を呼び出すことができる関数のセットを提供します。通常のJavaScriptの関数呼び出しのように関数を呼び出すことも、コンストラクタ関数として呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="cf14c19063ede85f1d83adb11622411071449131" translate="yes" xml:space="preserve">
          <source>Additionally, Node.js will search in the following list of GLOBAL_FOLDERS:</source>
          <target state="translated">さらに、Node.jsは以下のGLOBAL_FOLDERSのリストで検索します。</target>
        </trans-unit>
        <trans-unit id="9f73c9a0f643b726f96be397ef7f41691ae43bdb" translate="yes" xml:space="preserve">
          <source>Additionally, callbacks passed to lowlevel event loop requests (such as to &lt;code&gt;fs.open()&lt;/code&gt;, or other callback-taking methods) will automatically be bound to the active domain. If they throw, then the domain will catch the error.</source>
          <target state="translated">さらに、 &lt;code&gt;fs.open()&lt;/code&gt; イベントループリクエスト（fs.open（）や他のコールバック取得メソッドなど）に渡されたコールバックは、自動的にアクティブなドメインにバインドされます。スローすると、ドメインがエラーをキャッチします。</target>
        </trans-unit>
        <trans-unit id="b64c762e2fcf51f21d72afec7f18e458d75485e4" translate="yes" xml:space="preserve">
          <source>Additionally, each &lt;code&gt;v8::Isolate&lt;/code&gt; that is used for a Node.js instance needs to be registered and unregistered with the &lt;code&gt;MultiIsolatePlatform&lt;/code&gt; instance, if one is being used, in order for the platform to know which event loop to use for tasks scheduled by the &lt;code&gt;v8::Isolate&lt;/code&gt;.</source>
          <target state="translated">さらに、Node.jsインスタンスに使用される各 &lt;code&gt;v8::Isolate&lt;/code&gt; は、 &lt;code&gt;MultiIsolatePlatform&lt;/code&gt; インスタンスが使用されている場合は、そのインスタンスに登録および登録解除する必要があります。これにより、プラットフォームは、によってスケジュールされたタスクに使用するイベントループを知ることができます。 &lt;code&gt;v8::Isolate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c447df8af9ccb1fcb0d8884a9870d35e5bcf7a5" translate="yes" xml:space="preserve">
          <source>Additionally, on case-insensitive file systems or operating systems, different resolved filenames can point to the same file, but the cache will still treat them as different modules and will reload the file multiple times. For example, &lt;code&gt;require('./foo')&lt;/code&gt; and &lt;code&gt;require('./FOO')&lt;/code&gt; return two different objects, irrespective of whether or not &lt;code&gt;./foo&lt;/code&gt; and &lt;code&gt;./FOO&lt;/code&gt; are the same file.</source>
          <target state="translated">さらに、大文字と小文字を区別しないファイルシステムまたはオペレーティングシステムでは、解決された異なるファイル名が同じファイルを指す可能性がありますが、キャッシュはそれらを異なるモジュールとして扱い、ファイルを複数回リロードします。例えば、 &lt;code&gt;require('./foo')&lt;/code&gt; と &lt;code&gt;require('./FOO')&lt;/code&gt; にかかわらずかどうかの、二つの異なるオブジェクトを返す &lt;code&gt;./foo&lt;/code&gt; と &lt;code&gt;./FOO&lt;/code&gt; 同じファイルです。</target>
        </trans-unit>
        <trans-unit id="302acc826973080488585161a04c0fdb9dc8bbef" translate="yes" xml:space="preserve">
          <source>Additionally, the &lt;a href=&quot;#buffer_buf_values&quot;&gt;&lt;code&gt;buf.values()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#buffer_buf_keys&quot;&gt;&lt;code&gt;buf.keys()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#buffer_buf_entries&quot;&gt;&lt;code&gt;buf.entries()&lt;/code&gt;&lt;/a&gt; methods can be used to create iterators.</source>
          <target state="translated">さらに、&lt;a href=&quot;#buffer_buf_values&quot;&gt; &lt;code&gt;buf.values()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#buffer_buf_keys&quot;&gt; &lt;code&gt;buf.keys()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#buffer_buf_entries&quot;&gt; &lt;code&gt;buf.entries()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、イテレーターを作成できます。</target>
        </trans-unit>
        <trans-unit id="8db67b601cecd28d56ad67c9d8b61daa0c829b41" translate="yes" xml:space="preserve">
          <source>Additionally, this module includes the utility functions &lt;a href=&quot;#stream_stream_pipeline_source_transforms_destination_callback&quot;&gt;&lt;code&gt;stream.pipeline()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#stream_stream_finished_stream_options_callback&quot;&gt;&lt;code&gt;stream.finished()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_stream_readable_from_iterable_options&quot;&gt;&lt;code&gt;stream.Readable.from()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Additionally, this module includes the utility functions &lt;a href=&quot;#stream_stream_pipeline_source_transforms_destination_callback&quot;&gt; &lt;code&gt;stream.pipeline()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#stream_stream_finished_stream_options_callback&quot;&gt; &lt;code&gt;stream.finished()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#stream_stream_readable_from_iterable_options&quot;&gt; &lt;code&gt;stream.Readable.from()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="46c38d1e8d68ee89ab8a1e20ec0309219050d208" translate="yes" xml:space="preserve">
          <source>Additionally, this module includes the utility functions &lt;a href=&quot;#stream_stream_pipeline_source_transforms_destination_callback&quot;&gt;&lt;code&gt;stream.pipeline()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#stream_stream_finished_stream_options_callback&quot;&gt;&lt;code&gt;stream.finished()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#stream_stream_readable_from_iterable_options&quot;&gt;&lt;code&gt;stream.Readable.from()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_stream_addabortsignal_signal_stream&quot;&gt;&lt;code&gt;stream.addAbortSignal()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">さらに、このモジュールには、ユーティリティ関数&lt;a href=&quot;#stream_stream_pipeline_source_transforms_destination_callback&quot;&gt; &lt;code&gt;stream.pipeline()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#stream_stream_finished_stream_options_callback&quot;&gt; &lt;code&gt;stream.finished()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#stream_stream_readable_from_iterable_options&quot;&gt; &lt;code&gt;stream.Readable.from()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;#stream_stream_addabortsignal_signal_stream&quot;&gt; &lt;code&gt;stream.addAbortSignal()&lt;/code&gt; が含まれてい&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="65277a26051ab98805f7639ea7874be82f50d4cc" translate="yes" xml:space="preserve">
          <source>Additionally, this module includes the utility functions &lt;a href=&quot;#stream_stream_pipeline_streams_callback&quot;&gt;&lt;code&gt;stream.pipeline()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#stream_stream_finished_stream_options_callback&quot;&gt;&lt;code&gt;stream.finished()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_stream_readable_from_iterable_options&quot;&gt;&lt;code&gt;stream.Readable.from()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">さらに、このモジュールには、ユーティリティ関数&lt;a href=&quot;#stream_stream_pipeline_streams_callback&quot;&gt; &lt;code&gt;stream.pipeline()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;#stream_stream_finished_stream_options_callback&quot;&gt; &lt;code&gt;stream.finished()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#stream_stream_readable_from_iterable_options&quot;&gt; &lt;code&gt;stream.Readable.from()&lt;/code&gt; が&lt;/a&gt;含まれています。</target>
        </trans-unit>
        <trans-unit id="d0aa3a4412ea9cf844c62cf42112836a46d8822b" translate="yes" xml:space="preserve">
          <source>Additionally, when &lt;a href=&quot;#fs_fs_readdir_path_options_callback&quot;&gt;&lt;code&gt;fs.readdir()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#fs_fs_readdirsync_path_options&quot;&gt;&lt;code&gt;fs.readdirSync()&lt;/code&gt;&lt;/a&gt; is called with the &lt;code&gt;withFileTypes&lt;/code&gt; option set to &lt;code&gt;true&lt;/code&gt;, the resulting array is filled with &lt;code&gt;fs.Dirent&lt;/code&gt; objects, rather than strings or &lt;code&gt;Buffers&lt;/code&gt;.</source>
          <target state="translated">Additionally, when &lt;a href=&quot;#fs_fs_readdir_path_options_callback&quot;&gt; &lt;code&gt;fs.readdir()&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#fs_fs_readdirsync_path_options&quot;&gt; &lt;code&gt;fs.readdirSync()&lt;/code&gt; &lt;/a&gt; is called with the &lt;code&gt;withFileTypes&lt;/code&gt; option set to &lt;code&gt;true&lt;/code&gt; , the resulting array is filled with &lt;code&gt;fs.Dirent&lt;/code&gt; objects, rather than strings or &lt;code&gt;Buffers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81f850708af50476fe300f00503c69687f08e144" translate="yes" xml:space="preserve">
          <source>Additions to &lt;code&gt;Error&lt;/code&gt; objects</source>
          <target state="translated">Additions to &lt;code&gt;Error&lt;/code&gt; objects</target>
        </trans-unit>
        <trans-unit id="526ea70fc9ebd70d1a8505ad054e058b3cc5184b" translate="yes" xml:space="preserve">
          <source>Additions to Error objects</source>
          <target state="translated">エラーオブジェクトへの追加</target>
        </trans-unit>
        <trans-unit id="864f1b2586f1327b54d78167a25b00a41af8ab27" translate="yes" xml:space="preserve">
          <source>Addon examples</source>
          <target state="translated">アドオンの例</target>
        </trans-unit>
        <trans-unit id="c3a764f367f72e2c54f18840b49601737d8a4792" translate="yes" xml:space="preserve">
          <source>Addon modules often need to leverage async helpers from libuv as part of their implementation. This allows them to schedule work to be executed asynchronously so that their methods can return in advance of the work being completed. This allows them to avoid blocking overall execution of the Node.js application.</source>
          <target state="translated">アドオンモジュールは、実装の一部として libuv の非同期ヘルパーを利用する必要があります。これにより、非同期に実行される作業をスケジュールすることができ、作業が完了する前にメソッドを返すことができます。これにより、Node.jsアプリケーションの全体的な実行をブロックすることを避けることができます。</target>
        </trans-unit>
        <trans-unit id="6b04fb689cdfb89783ccbca8285e215a680807e6" translate="yes" xml:space="preserve">
          <source>Addon modules often need to leverage async helpers from libuv as part of their implementation. This allows them to schedule work to be executed asynchronously so that their methods can return in advance of the work being completed. This is important in order to allow them to avoid blocking overall execution of the Node.js application.</source>
          <target state="translated">アドオンモジュールは、実装の一部として libuv の非同期ヘルパーを利用する必要があります。これにより、非同期的に実行される作業をスケジュールすることができ、作業が完了する前にメソッドを返すことができます。これは Node.js アプリケーションの全体的な実行をブロックしないようにするために重要です。</target>
        </trans-unit>
        <trans-unit id="76f174c9bfb27186048b36320182c45364326e8e" translate="yes" xml:space="preserve">
          <source>Addons are built/packaged with the same approach/tools outlined in the section titled &lt;a href=&quot;addons&quot;&gt;C++ Addons&lt;/a&gt;. The only difference is the set of APIs that are used by the native code. Instead of using the V8 or &lt;a href=&quot;https://github.com/nodejs/nan&quot;&gt;Native Abstractions for Node.js&lt;/a&gt; APIs, the functions available in the N-API are used.</source>
          <target state="translated">アドオンは、&lt;a href=&quot;addons&quot;&gt;C ++アドオン&lt;/a&gt;というタイトルのセクションで概説されているのと同じアプローチ/ツールで構築/パッケージ化されています。唯一の違いは、ネイティブコードで使用されるAPIのセットです。&lt;a href=&quot;https://github.com/nodejs/nan&quot;&gt;Node.js&lt;/a&gt; APIにV8またはNative Abstractionsを使用する代わりに、N-APIで使用可能な関数が使用されます。</target>
        </trans-unit>
        <trans-unit id="121ff1e38dee4a1b4d853617c298faf35fa49ca8" translate="yes" xml:space="preserve">
          <source>Addons can create and return new objects from within a C++ function as illustrated in the following example. An object is created and returned with a property &lt;code&gt;msg&lt;/code&gt; that echoes the string passed to &lt;code&gt;createObject()&lt;/code&gt;:</source>
          <target state="translated">アドオンは、次の例に示すように、C ++関数内から新しいオブジェクトを作成して返すことができます。オブジェクトが作成され、 &lt;code&gt;createObject()&lt;/code&gt; に渡された文字列をエコーするプロパティ &lt;code&gt;msg&lt;/code&gt; で返されます。</target>
        </trans-unit>
        <trans-unit id="330eba30d9d92929919fb960016f7ec3b2dc6c0e" translate="yes" xml:space="preserve">
          <source>Addons will typically expose objects and functions that can be accessed from JavaScript running within Node.js. When functions are invoked from JavaScript, the input arguments and return value must be mapped to and from the C/C++ code.</source>
          <target state="translated">アドオンは通常、Node.js内で実行されているJavaScriptからアクセスできるオブジェクトや関数を公開します。JavaScript から関数が呼び出される場合、入力引数と戻り値は C/C++コードとの間でマッピングされなければなりません。</target>
        </trans-unit>
        <trans-unit id="f3f109625ebff902120689d52a367b977074440e" translate="yes" xml:space="preserve">
          <source>Adds a &lt;code&gt;napi_finalize&lt;/code&gt; callback which will be called when the JavaScript object in &lt;code&gt;js_object&lt;/code&gt; is ready for garbage collection. This API is similar to &lt;code&gt;napi_wrap()&lt;/code&gt; except that</source>
          <target state="translated">追加 &lt;code&gt;napi_finalize&lt;/code&gt; のでJavaScriptオブジェクトときに呼び出されるコールバック &lt;code&gt;js_object&lt;/code&gt; は、ガベージコレクションの準備ができているし。このAPIは &lt;code&gt;napi_wrap()&lt;/code&gt; に似ていますが、</target>
        </trans-unit>
        <trans-unit id="9e1f3e28c01688b9f8472466b288b080eda9569b" translate="yes" xml:space="preserve">
          <source>Adds a &lt;code&gt;napi_finalize&lt;/code&gt; callback which will be called when the JavaScript object in &lt;code&gt;js_object&lt;/code&gt; is ready for garbage collection. This API is similar to &lt;code&gt;napi_wrap()&lt;/code&gt; except that:</source>
          <target state="translated">Adds a &lt;code&gt;napi_finalize&lt;/code&gt; callback which will be called when the JavaScript object in &lt;code&gt;js_object&lt;/code&gt; is ready for garbage collection. This API is similar to &lt;code&gt;napi_wrap()&lt;/code&gt; except that:</target>
        </trans-unit>
        <trans-unit id="62e5116b36f62d788818322b298a2c18f88d27ec" translate="yes" xml:space="preserve">
          <source>Adds a &lt;strong&gt;one-time&lt;/strong&gt;&lt;code&gt;listener&lt;/code&gt; function for the event named &lt;code&gt;eventName&lt;/code&gt; to the &lt;em&gt;beginning&lt;/em&gt; of the listeners array. The next time &lt;code&gt;eventName&lt;/code&gt; is triggered, this listener is removed, and then invoked.</source>
          <target state="translated">追加&lt;strong&gt;1回の&lt;/strong&gt; &lt;code&gt;listener&lt;/code&gt; という名前のイベントのための機能を &lt;code&gt;eventName&lt;/code&gt; のに&lt;em&gt;最初&lt;/em&gt;のリスナーの配列の。次回 &lt;code&gt;eventName&lt;/code&gt; がトリガーされたときに、このリスナーは削除されてから呼び出されます。</target>
        </trans-unit>
        <trans-unit id="664bc5ea3c2816f823444dd5461643a6c63f924e" translate="yes" xml:space="preserve">
          <source>Adds a &lt;strong&gt;one-time&lt;/strong&gt;&lt;code&gt;listener&lt;/code&gt; function for the event named &lt;code&gt;eventName&lt;/code&gt;. The next time &lt;code&gt;eventName&lt;/code&gt; is triggered, this listener is removed and then invoked.</source>
          <target state="translated">&lt;code&gt;eventName&lt;/code&gt; という名前のイベントの&lt;strong&gt;1回限りの&lt;/strong&gt; &lt;code&gt;listener&lt;/code&gt; 関数を追加します。次回 &lt;code&gt;eventName&lt;/code&gt; がトリガーされたときに、このリスナーは削除されてから呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2c65c0f4e8991e7468d0a1632e3b6c70e90b18d8" translate="yes" xml:space="preserve">
          <source>Adds a new handler for the &lt;code&gt;type&lt;/code&gt; event. Any given &lt;code&gt;listener&lt;/code&gt; is added only once per &lt;code&gt;type&lt;/code&gt; and per &lt;code&gt;capture&lt;/code&gt; option value.</source>
          <target state="translated">Adds a new handler for the &lt;code&gt;type&lt;/code&gt; event. Any given &lt;code&gt;listener&lt;/code&gt; is added only once per &lt;code&gt;type&lt;/code&gt; and per &lt;code&gt;capture&lt;/code&gt; option value.</target>
        </trans-unit>
        <trans-unit id="69b2a5a8e1ed96eb9c5ccb418d3ab79799a03979" translate="yes" xml:space="preserve">
          <source>Adds a rule to block a range of IP addresses from &lt;code&gt;start&lt;/code&gt; (inclusive) to &lt;code&gt;end&lt;/code&gt; (inclusive).</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; （包括的）から &lt;code&gt;end&lt;/code&gt; （包括的）までのIPアドレスの範囲をブロックするルールを追加します。</target>
        </trans-unit>
        <trans-unit id="a7356cb791234bfc2a5c4a3942ad303e7437a0f4" translate="yes" xml:space="preserve">
          <source>Adds a rule to block a range of IP addresses specified as a subnet mask.</source>
          <target state="translated">サブネットマスクとして指定したIPアドレスの範囲をブロックするルールを追加します。</target>
        </trans-unit>
        <trans-unit id="00ffc3b208a1a0b0a47f5c82d1c4d0f4ba8dd435" translate="yes" xml:space="preserve">
          <source>Adds a rule to block the given IP address.</source>
          <target state="translated">指定したIPアドレスをブロックするルールを追加します。</target>
        </trans-unit>
        <trans-unit id="94e6ad53b549d5df1c2237588e810854dc2d33cd" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;listener&lt;/code&gt; function to the &lt;em&gt;beginning&lt;/em&gt; of the listeners array for the event named &lt;code&gt;eventName&lt;/code&gt;. No checks are made to see if the &lt;code&gt;listener&lt;/code&gt; has already been added. Multiple calls passing the same combination of &lt;code&gt;eventName&lt;/code&gt; and &lt;code&gt;listener&lt;/code&gt; will result in the &lt;code&gt;listener&lt;/code&gt; being added, and called, multiple times.</source>
          <target state="translated">&lt;code&gt;eventName&lt;/code&gt; という名前のイベントのリスナー配列の&lt;em&gt;先頭&lt;/em&gt;に &lt;code&gt;listener&lt;/code&gt; 関数を追加します。 &lt;code&gt;listener&lt;/code&gt; がすでに追加されているかどうかを確認するチェックは行われません。 &lt;code&gt;eventName&lt;/code&gt; と &lt;code&gt;listener&lt;/code&gt; 同じ組み合わせを渡す複数の呼び出しにより、 &lt;code&gt;listener&lt;/code&gt; が追加され、複数回呼び出されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c049a36c5434522f002408a958088c52a48c3ca" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;listener&lt;/code&gt; function to the end of the listeners array for the event named &lt;code&gt;eventName&lt;/code&gt;. No checks are made to see if the &lt;code&gt;listener&lt;/code&gt; has already been added. Multiple calls passing the same combination of &lt;code&gt;eventName&lt;/code&gt; and &lt;code&gt;listener&lt;/code&gt; will result in the &lt;code&gt;listener&lt;/code&gt; being added, and called, multiple times.</source>
          <target state="translated">&lt;code&gt;eventName&lt;/code&gt; という名前のイベントのリスナー配列の最後に &lt;code&gt;listener&lt;/code&gt; 関数を追加します。 &lt;code&gt;listener&lt;/code&gt; がすでに追加されているかどうかを確認するチェックは行われません。 &lt;code&gt;eventName&lt;/code&gt; と &lt;code&gt;listener&lt;/code&gt; 同じ組み合わせを渡す複数の呼び出しにより、 &lt;code&gt;listener&lt;/code&gt; が追加され、複数回呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ec9c1eee60a6c8d412e86494c4538774b81ce815" translate="yes" xml:space="preserve">
          <source>Advanced Usage</source>
          <target state="translated">高度な使用法</target>
        </trans-unit>
        <trans-unit id="3704e06c0197378e4279649d498cea8cb66e0ac3" translate="yes" xml:space="preserve">
          <source>Advanced serialization</source>
          <target state="translated">高度なシリアル化</target>
        </trans-unit>
        <trans-unit id="5126940d744a6dff391a643edf858b06f00785ed" translate="yes" xml:space="preserve">
          <source>Advanced usage</source>
          <target state="translated">高度な使い方</target>
        </trans-unit>
        <trans-unit id="fe7756e92fe98e7589a497c1c9d9e43dd9cd8bca" translate="yes" xml:space="preserve">
          <source>Affects the default output directory of:</source>
          <target state="translated">のデフォルトの出力ディレクトリに影響を与えます。</target>
        </trans-unit>
        <trans-unit id="51ee636021359c235dc38570aaf55e97bfc3ac9c" translate="yes" xml:space="preserve">
          <source>After &lt;code&gt;'error'&lt;/code&gt;, no further events other than &lt;code&gt;'close'&lt;/code&gt;&lt;em&gt;should&lt;/em&gt; be emitted (including &lt;code&gt;'error'&lt;/code&gt; events).</source>
          <target state="translated">After &lt;code&gt;'error'&lt;/code&gt; , no further events other than &lt;code&gt;'close'&lt;/code&gt; &lt;em&gt;should&lt;/em&gt; be emitted (including &lt;code&gt;'error'&lt;/code&gt; events).</target>
        </trans-unit>
        <trans-unit id="eb8c7c9198e42f64e0b6e51c8d3960d00f926992" translate="yes" xml:space="preserve">
          <source>After a server is closed, it will no longer accept new connections, but connections may be accepted by any other listening worker. Existing connections will be allowed to close as usual. When no more connections exist, see &lt;a href=&quot;net#net_event_close&quot;&gt;&lt;code&gt;server.close()&lt;/code&gt;&lt;/a&gt;, the IPC channel to the worker will close allowing it to die gracefully.</source>
          <target state="translated">サーバーを閉じると、サーバーは新しい接続を受け入れなくなりますが、他のリスニングワーカーは接続を受け入れることができます。既存の接続は通常どおり閉じることができます。接続が存在しない場合は、&lt;a href=&quot;net#net_event_close&quot;&gt; &lt;code&gt;server.close()&lt;/code&gt; を&lt;/a&gt;参照してください。ワーカーへのIPCチャネルが閉じ、ワーカーが正常に終了するようにします。</target>
        </trans-unit>
        <trans-unit id="be9e5afd68bdb3326c2ab142d94d6fcbdda4ff0c" translate="yes" xml:space="preserve">
          <source>After calling &lt;a href=&quot;#cluster_cluster_setupmaster_settings&quot;&gt;&lt;code&gt;.setupMaster()&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;#cluster_cluster_fork_env&quot;&gt;&lt;code&gt;.fork()&lt;/code&gt;&lt;/a&gt;) this settings object will contain the settings, including the default values.</source>
          <target state="translated">After calling &lt;a href=&quot;#cluster_cluster_setupmaster_settings&quot;&gt; &lt;code&gt;.setupMaster()&lt;/code&gt; &lt;/a&gt; (or &lt;a href=&quot;#cluster_cluster_fork_env&quot;&gt; &lt;code&gt;.fork()&lt;/code&gt; &lt;/a&gt;) this settings object will contain the settings, including the default values.</target>
        </trans-unit>
        <trans-unit id="5b0748a4881b7e8f0bcf2b015348c9fe89277e5a" translate="yes" xml:space="preserve">
          <source>After calling &lt;a href=&quot;#n_api_napi_cancel_async_work&quot;&gt;&lt;code&gt;napi_cancel_async_work&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;complete&lt;/code&gt; callback will be invoked with a status value of &lt;code&gt;napi_cancelled&lt;/code&gt;. The work should not be deleted before the &lt;code&gt;complete&lt;/code&gt; callback invocation, even when it was cancelled.</source>
          <target state="translated">呼び出した後&lt;a href=&quot;#n_api_napi_cancel_async_work&quot;&gt; &lt;code&gt;napi_cancel_async_work&lt;/code&gt; を&lt;/a&gt;、 &lt;code&gt;complete&lt;/code&gt; コールバックはのステータス値で呼び出されます &lt;code&gt;napi_cancelled&lt;/code&gt; 。キャンセルされた場合でも、 &lt;code&gt;complete&lt;/code&gt; コールバック呼び出しの前に作業を削除しないでください。</target>
        </trans-unit>
        <trans-unit id="95f74b0743d9882d9cdf92970cee93d7c1caa8aa" translate="yes" xml:space="preserve">
          <source>After calling &lt;code&gt;.setupMaster()&lt;/code&gt; (or &lt;code&gt;.fork()&lt;/code&gt;) this settings object will contain the settings, including the default values.</source>
          <target state="translated">&lt;code&gt;.setupMaster()&lt;/code&gt; （または &lt;code&gt;.fork()&lt;/code&gt; ）を呼び出した後、この設定オブジェクトにはデフォルト値を含む設定が含まれます。</target>
        </trans-unit>
        <trans-unit id="2918fa410a60a101fcb651cd652b36df27d89387" translate="yes" xml:space="preserve">
          <source>After calling &lt;code&gt;listen()&lt;/code&gt; from a worker, when the &lt;code&gt;'listening'&lt;/code&gt; event is emitted on the server a &lt;code&gt;'listening'&lt;/code&gt; event will also be emitted on &lt;code&gt;cluster&lt;/code&gt; in the master.</source>
          <target state="translated">呼び出した後 &lt;code&gt;listen()&lt;/code&gt; する場合、作業者からの &lt;code&gt;'listening'&lt;/code&gt; イベントは、サーバー上で放出される &lt;code&gt;'listening'&lt;/code&gt; イベントもに放出される &lt;code&gt;cluster&lt;/code&gt; マスターに。</target>
        </trans-unit>
        <trans-unit id="3770d616d5f1ae7558d451d77c21097865eab7fc" translate="yes" xml:space="preserve">
          <source>After forking a new worker, the worker should respond with an online message. When the master receives an online message it will emit this event. The difference between &lt;code&gt;'fork'&lt;/code&gt; and &lt;code&gt;'online'&lt;/code&gt; is that fork is emitted when the master forks a worker, and &lt;code&gt;'online'&lt;/code&gt; is emitted when the worker is running.</source>
          <target state="translated">新しいワーカーをフォークした後、ワーカーはオンラインメッセージで応答する必要があります。マスターがオンラインメッセージを受信すると、このイベントが発生します。 &lt;code&gt;'fork'&lt;/code&gt; と &lt;code&gt;'online'&lt;/code&gt; の違いは、マスターがワーカーをフォークしたときにフォークが発行され、ワー​​カーが実行されているときに &lt;code&gt;'online'&lt;/code&gt; が発行されることです。</target>
        </trans-unit>
        <trans-unit id="ef408daad54679598b29f24be051786aaaf09b9a" translate="yes" xml:space="preserve">
          <source>After response header was sent to the client, this property indicates the status code which was sent out.</source>
          <target state="translated">クライアントにレスポンスヘッダが送信された後、送信されたステータスコードを示す。</target>
        </trans-unit>
        <trans-unit id="58e1d87f2ad14ae4ea7e41a90f49767b8428ae43" translate="yes" xml:space="preserve">
          <source>After response header was sent to the client, this property indicates the status message which was sent out.</source>
          <target state="translated">クライアントにレスポンスヘッダが送信された後、送信されたステータスメッセージを示す。</target>
        </trans-unit>
        <trans-unit id="fcaa5ce2149f49c30cd6ddfc0350bab1fae84624" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;Http2Stream&lt;/code&gt; has been destroyed, the &lt;code&gt;http2stream.destroyed&lt;/code&gt; property will be &lt;code&gt;true&lt;/code&gt; and the &lt;code&gt;http2stream.rstCode&lt;/code&gt; property will specify the &lt;code&gt;RST_STREAM&lt;/code&gt; error code. The &lt;code&gt;Http2Stream&lt;/code&gt; instance is no longer usable once destroyed.</source>
          <target state="translated">後 &lt;code&gt;Http2Stream&lt;/code&gt; が破壊された、 &lt;code&gt;http2stream.destroyed&lt;/code&gt; プロパティは次のようになります &lt;code&gt;true&lt;/code&gt; と &lt;code&gt;http2stream.rstCode&lt;/code&gt; のプロパティを指定します &lt;code&gt;RST_STREAM&lt;/code&gt; のエラーコードを。 &lt;code&gt;Http2Stream&lt;/code&gt; 破壊された後、インスタンスは、もはや利用可能ではありません。</target>
        </trans-unit>
        <trans-unit id="960fb72d5ab59ef368b5716c88e0d11aa5c73cb2" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;http2session.setTimeout()&lt;/code&gt; method is used to set the timeout period for this &lt;code&gt;Http2Session&lt;/code&gt;, the &lt;code&gt;'timeout'&lt;/code&gt; event is emitted if there is no activity on the &lt;code&gt;Http2Session&lt;/code&gt; after the configured number of milliseconds.</source>
          <target state="translated">後 &lt;code&gt;http2session.setTimeout()&lt;/code&gt; メソッドは、このためのタイムアウト時間を設定するために使用される &lt;code&gt;Http2Session&lt;/code&gt; を、 &lt;code&gt;'timeout'&lt;/code&gt; にアクティビティがない場合、イベントが発せられる &lt;code&gt;Http2Session&lt;/code&gt; ミリ秒の設定された番号の後に。</target>
        </trans-unit>
        <trans-unit id="475c73adf88ed20d2a14059c634f5c507ae14859" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;http2session.setTimeout()&lt;/code&gt; method is used to set the timeout period for this &lt;code&gt;Http2Session&lt;/code&gt;, the &lt;code&gt;'timeout'&lt;/code&gt; event is emitted if there is no activity on the &lt;code&gt;Http2Session&lt;/code&gt; after the configured number of milliseconds. Its listener does not expect any arguments.</source>
          <target state="translated">After the &lt;code&gt;http2session.setTimeout()&lt;/code&gt; method is used to set the timeout period for this &lt;code&gt;Http2Session&lt;/code&gt; , the &lt;code&gt;'timeout'&lt;/code&gt; event is emitted if there is no activity on the &lt;code&gt;Http2Session&lt;/code&gt; after the configured number of milliseconds. Its listener does not expect any arguments.</target>
        </trans-unit>
        <trans-unit id="7ec28359dd7d0872dac92b5b10a7e32274793864" translate="yes" xml:space="preserve">
          <source>After the read is completed, a &lt;code&gt;Promise&lt;/code&gt; is returned that will be resolved with an &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt;&lt;code&gt;fs.Dirent&lt;/code&gt;&lt;/a&gt;, or &lt;code&gt;null&lt;/code&gt; if there are no more directory entries to read.</source>
          <target state="translated">After the read is completed, a &lt;code&gt;Promise&lt;/code&gt; is returned that will be resolved with an &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt; &lt;code&gt;fs.Dirent&lt;/code&gt; &lt;/a&gt;, or &lt;code&gt;null&lt;/code&gt; if there are no more directory entries to read.</target>
        </trans-unit>
        <trans-unit id="d26f5ffbe495b93bc528a256b7481555faf857d7" translate="yes" xml:space="preserve">
          <source>After the read is completed, the &lt;code&gt;callback&lt;/code&gt; will be called with an &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt;&lt;code&gt;fs.Dirent&lt;/code&gt;&lt;/a&gt;, or &lt;code&gt;null&lt;/code&gt; if there are no more directory entries to read.</source>
          <target state="translated">After the read is completed, the &lt;code&gt;callback&lt;/code&gt; will be called with an &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt; &lt;code&gt;fs.Dirent&lt;/code&gt; &lt;/a&gt;, or &lt;code&gt;null&lt;/code&gt; if there are no more directory entries to read.</target>
        </trans-unit>
        <trans-unit id="51723ebe5876f92a46acd469d0930fc4da0dcf4a" translate="yes" xml:space="preserve">
          <source>After this event is emitted, the request's socket will not have a &lt;code&gt;'data'&lt;/code&gt; event listener, meaning it will need to be bound in order to handle data sent to the server on that socket.</source>
          <target state="translated">このイベントが発生した後、リクエストのソケットには &lt;code&gt;'data'&lt;/code&gt; イベントリスナーがありません。つまり、そのソケットでサーバーに送信されたデータを処理するためにバインドする必要があります。</target>
        </trans-unit>
        <trans-unit id="b4719d0a9c982b1bab0641b4429267369e1b22b2" translate="yes" xml:space="preserve">
          <source>After this event, no more events will be emitted on the response object.</source>
          <target state="translated">このイベントの後、レスポンスオブジェクトにはそれ以上のイベントは発生しません。</target>
        </trans-unit>
        <trans-unit id="02f02485ab679a9031f461bdbd3edab48ea42a79" translate="yes" xml:space="preserve">
          <source>Algorithm</source>
          <target state="translated">Algorithm</target>
        </trans-unit>
        <trans-unit id="6601b8227ffeb2f0a2569fb17bd0a067497dcbc1" translate="yes" xml:space="preserve">
          <source>Algorithm Matrix</source>
          <target state="translated">アルゴリズム行列</target>
        </trans-unit>
        <trans-unit id="14be98b337ad7b5e088f4f751bb8bc72610d4f9f" translate="yes" xml:space="preserve">
          <source>Algorithm Parameters</source>
          <target state="translated">アルゴリズムパラメータ</target>
        </trans-unit>
        <trans-unit id="5fd818129ec62966d58d30db4a5d37978498b619" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#events_emitter_removelistener_eventname_listener&quot;&gt;&lt;code&gt;emitter.removeListener()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#events_emitter_removelistener_eventname_listener&quot;&gt; &lt;code&gt;emitter.removeListener()&lt;/code&gt; &lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="169c2fa99a03c294b9daeeb089cc52b52876b30f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#url_urlsearchparams_entries&quot;&gt;&lt;code&gt;urlSearchParams.entries()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#url_urlsearchparams_entries&quot;&gt; &lt;code&gt;urlSearchParams.entries()&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="0e3aef1fcf79eeb74b60559d6bc67222a9c6f3ea" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;#url_urlsearchparams_symbol_iterator&quot;&gt;&lt;code&gt;urlSearchParams[@@iterator]()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#url_urlsearchparams_symbol_iterator&quot;&gt; &lt;code&gt;urlSearchParams[@@iterator]()&lt;/code&gt; &lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="23cbbf6dc88ce45a1d726ac480c6fa761c16b938" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray&quot;&gt;&lt;code&gt;Array.isArray()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray&quot;&gt; &lt;code&gt;Array.isArray()&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="4cd1cc201b3e9ac68581d90aa8d91454f0758695" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;emitter.on(eventName, listener)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;emitter.on(eventName, listener)&lt;/code&gt; エイリアス。</target>
        </trans-unit>
        <trans-unit id="f244a5054dd8c33b11d17a5b96a805db73007a72" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;event.stopPropagation()&lt;/code&gt;. This is not used in Node.js and is provided purely for completeness.</source>
          <target state="translated">Alias for &lt;code&gt;event.stopPropagation()&lt;/code&gt; . This is not used in Node.js and is provided purely for completeness.</target>
        </trans-unit>
        <trans-unit id="55e133869d5d8f2352494b62797b175af7e0361e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;event.target&lt;/code&gt;.</source>
          <target state="translated">Alias for &lt;code&gt;event.target&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75b03d6ff22a6654e108aa828d1cf26a2c84c5e7" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;util.debuglog&lt;/code&gt;. Usage allows for readability of that doesn't imply logging when only using &lt;code&gt;util.debuglog().enabled&lt;/code&gt;.</source>
          <target state="translated">Alias for &lt;code&gt;util.debuglog&lt;/code&gt; . Usage allows for readability of that doesn't imply logging when only using &lt;code&gt;util.debuglog().enabled&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bce066f62d155c5925e8e964d3414e7f54c62396" translate="yes" xml:space="preserve">
          <source>Alias for stdin, analogous to the use of - in other command line utilities, meaning that the script will be read from stdin, and the rest of the options are passed to that script.</source>
          <target state="translated">stdin のエイリアスで、他のコマンドラインユーティリティの-の使用に似ています。</target>
        </trans-unit>
        <trans-unit id="8cb313e8bce424190215692501df8bdf3291293c" translate="yes" xml:space="preserve">
          <source>Alias for stdin. Analogous to the use of &lt;code&gt;-&lt;/code&gt; in other command-line utilities, meaning that the script is read from stdin, and the rest of the options are passed to that script.</source>
          <target state="translated">Alias for stdin. Analogous to the use of &lt;code&gt;-&lt;/code&gt; in other command-line utilities, meaning that the script is read from stdin, and the rest of the options are passed to that script.</target>
        </trans-unit>
        <trans-unit id="d0227517fd7611296a3f7ec6dfb82fd6f8fa05f5" translate="yes" xml:space="preserve">
          <source>Alias of &lt;a href=&quot;#fs_filehandle_writefile_data_options&quot;&gt;&lt;code&gt;filehandle.writeFile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Alias of &lt;a href=&quot;#fs_filehandle_writefile_data_options&quot;&gt; &lt;code&gt;filehandle.writeFile()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3227f820d8d77e5174a47fb86db1e57a5359a418" translate="yes" xml:space="preserve">
          <source>Alias to &lt;a href=&quot;#net_net_createconnection_options_connectlistener&quot;&gt;&lt;code&gt;net.createConnection(options[, connectListener])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#net_net_createconnection_options_connectlistener&quot;&gt; &lt;code&gt;net.createConnection(options[, connectListener])&lt;/code&gt; &lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="617912888cea7b948d30800436807bdd9c566837" translate="yes" xml:space="preserve">
          <source>Alias to &lt;a href=&quot;#net_net_createconnection_path_connectlistener&quot;&gt;&lt;code&gt;net.createConnection(path[, connectListener])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#net_net_createconnection_path_connectlistener&quot;&gt; &lt;code&gt;net.createConnection(path[, connectListener])&lt;/code&gt; &lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="c69271fd856f2d1e634b8bff555dad9997ea7f31" translate="yes" xml:space="preserve">
          <source>Alias to &lt;a href=&quot;#net_net_createconnection_port_host_connectlistener&quot;&gt;&lt;code&gt;net.createConnection(port[, host][, connectListener])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#net_net_createconnection_port_host_connectlistener&quot;&gt; &lt;code&gt;net.createConnection(port[, host][, connectListener])&lt;/code&gt; &lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="0bccb1caddb7330127407ff7ae79a4c9ae827270" translate="yes" xml:space="preserve">
          <source>Alias to &lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt;&lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt;&lt;/a&gt; called with &lt;code&gt;{ path: path }&lt;/code&gt; as &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{ path: path }&lt;/code&gt; を &lt;code&gt;options&lt;/code&gt; として呼び出して&lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt; &lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt; &lt;/a&gt;エイリアスが呼び出されました</target>
        </trans-unit>
        <trans-unit id="c0dd98512ff6ad20db51ef98420b9f1032f7423c" translate="yes" xml:space="preserve">
          <source>Alias to &lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt;&lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt;&lt;/a&gt; called with &lt;code&gt;{port: port, host: host}&lt;/code&gt; as &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{port: port, host: host}&lt;/code&gt; を &lt;code&gt;options&lt;/code&gt; として呼び出した&lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt; &lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt; &lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="6a8b49f23c0c2e66b347773e3a4bb453ff1fb91c" translate="yes" xml:space="preserve">
          <source>Aliases</source>
          <target state="translated">Aliases</target>
        </trans-unit>
        <trans-unit id="aca21d58e50520a7161bd214dcaca05482a48c05" translate="yes" xml:space="preserve">
          <source>Aliases to &lt;a href=&quot;#net_net_createconnection&quot;&gt;&lt;code&gt;net.createConnection()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#net_net_createconnection&quot;&gt; &lt;code&gt;net.createConnection()&lt;/code&gt; の&lt;/a&gt;エイリアス。</target>
        </trans-unit>
        <trans-unit id="7fe4b43eb4fc860129cdb1932cc23be518b5f4c0" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#http2_class_http2stream&quot;&gt;&lt;code&gt;Http2Stream&lt;/code&gt;&lt;/a&gt; instances are destroyed either when:</source>
          <target state="translated">&lt;a href=&quot;#http2_class_http2stream&quot;&gt; &lt;code&gt;Http2Stream&lt;/code&gt; &lt;/a&gt;場合、すべてのHttp2Streamインスタンスが破棄されます。</target>
        </trans-unit>
        <trans-unit id="71bbd7c540deb3753a2bd126795462f3928f4bf0" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt; are set to &lt;code&gt;SO_REUSEADDR&lt;/code&gt; (see &lt;a href=&quot;http://man7.org/linux/man-pages/man7/socket.7.html&quot;&gt;&lt;code&gt;socket(7)&lt;/code&gt;&lt;/a&gt; for details).</source>
          <target state="translated">すべての&lt;a href=&quot;#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; が&lt;/a&gt;に設定されて &lt;code&gt;SO_REUSEADDR&lt;/code&gt; （参照&lt;a href=&quot;http://man7.org/linux/man-pages/man7/socket.7.html&quot;&gt; &lt;code&gt;socket(7)&lt;/code&gt; &lt;/a&gt;詳細については）。</target>
        </trans-unit>
        <trans-unit id="f638c23ee9d1a370b5b63b2c9afab80ed4e347c1" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt; are set to &lt;code&gt;SO_REUSEADDR&lt;/code&gt; (see &lt;a href=&quot;https://man7.org/linux/man-pages/man7/socket.7.html&quot;&gt;&lt;code&gt;socket(7)&lt;/code&gt;&lt;/a&gt; for details).</source>
          <target state="translated">All &lt;a href=&quot;#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; &lt;/a&gt; are set to &lt;code&gt;SO_REUSEADDR&lt;/code&gt; (see &lt;a href=&quot;https://man7.org/linux/man-pages/man7/socket.7.html&quot;&gt; &lt;code&gt;socket(7)&lt;/code&gt; &lt;/a&gt; for details).</target>
        </trans-unit>
        <trans-unit id="c44c860647717abef8f86837de68e8e143f07a81" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; streams begin in paused mode but can be switched to flowing mode in one of the following ways:</source>
          <target state="translated">すべての&lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt;ストリームは一時停止モードで始まりますが、次のいずれかの方法でフローモードに切り替えることができます。</target>
        </trans-unit>
        <trans-unit id="9f6b1d95077f443d47586c80ca10ec525b570db7" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; streams implement the interface defined by the &lt;code&gt;stream.Readable&lt;/code&gt; class.</source>
          <target state="translated">すべての&lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt;ストリームは、 &lt;code&gt;stream.Readable&lt;/code&gt; クラスで定義されたインターフェースを実装します。</target>
        </trans-unit>
        <trans-unit id="a74e4ee46f2e8749e0804b6d058c3fb0f18a91d3" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; streams implement the interface defined by the &lt;code&gt;stream.Writable&lt;/code&gt; class.</source>
          <target state="translated">すべての&lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt;ストリームは、 &lt;code&gt;stream.Writable&lt;/code&gt; クラスによって定義されたインターフェースを実装します。</target>
        </trans-unit>
        <trans-unit id="a44a9bf9bf4fcd5fd95a92175b2678db9f6b4f15" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;EventEmitter&lt;/code&gt;s emit the event &lt;code&gt;'newListener'&lt;/code&gt; when new listeners are added and &lt;code&gt;'removeListener'&lt;/code&gt; when existing listeners are removed.</source>
          <target state="translated">すべての &lt;code&gt;EventEmitter&lt;/code&gt; は、新しいリスナーが追加されるとイベント &lt;code&gt;'newListener'&lt;/code&gt; を発行し、既存のリスナーが削除されると &lt;code&gt;'removeListener'&lt;/code&gt; を発行します。</target>
        </trans-unit>
        <trans-unit id="935ffa1746388a3a6ffbe4f868f5bfac4e1672da" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Http2Stream&lt;/code&gt; instances are &lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; streams. The &lt;code&gt;Writable&lt;/code&gt; side of the &lt;code&gt;Duplex&lt;/code&gt; is used to send data to the connected peer, while the &lt;code&gt;Readable&lt;/code&gt; side is used to receive data sent by the connected peer.</source>
          <target state="translated">すべての &lt;code&gt;Http2Stream&lt;/code&gt; インスタンスは&lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt;ストリームです。 &lt;code&gt;Duplex&lt;/code&gt; の &lt;code&gt;Writable&lt;/code&gt; 側は、接続されたピアにデータを送信するために使用され、 &lt;code&gt;Readable&lt;/code&gt; 側は、接続されたピアによって送信されたデータを受信するために使用されます。</target>
        </trans-unit>
        <trans-unit id="1eaff6abb3391cb33815b91d82ba4fd11988e668" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Readable&lt;/code&gt; stream implementations must provide an implementation of the &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt;&lt;code&gt;readable._read()&lt;/code&gt;&lt;/a&gt; method to fetch data from the underlying resource.</source>
          <target state="translated">All &lt;code&gt;Readable&lt;/code&gt; stream implementations must provide an implementation of the &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt; &lt;code&gt;readable._read()&lt;/code&gt; &lt;/a&gt; method to fetch data from the underlying resource.</target>
        </trans-unit>
        <trans-unit id="896a5dff9ee9a8501d933445f4887eae930c0dd5" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Readable&lt;/code&gt; stream implementations must provide an implementation of the &lt;code&gt;readable._read()&lt;/code&gt; method to fetch data from the underlying resource.</source>
          <target state="translated">すべての &lt;code&gt;Readable&lt;/code&gt; ストリームの実装は、基となるリソースからデータをフェッチするためにleapleable._read &lt;code&gt;readable._read()&lt;/code&gt; メソッドの実装を提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="25965a84f1f0744ad2379eeaa63d722e2da48797" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Transform&lt;/code&gt; stream implementations must provide a &lt;code&gt;_transform()&lt;/code&gt; method to accept input and produce output. The &lt;code&gt;transform._transform()&lt;/code&gt; implementation handles the bytes being written, computes an output, then passes that output off to the readable portion using the &lt;code&gt;readable.push()&lt;/code&gt; method.</source>
          <target state="translated">すべての &lt;code&gt;Transform&lt;/code&gt; ストリーム実装は、入力を受け入れて出力を生成する &lt;code&gt;_transform()&lt;/code&gt; メソッドを提供する必要があります。 &lt;code&gt;transform._transform()&lt;/code&gt; バイトが書き込まれる実装ハンドルは、その後、使用可読部分を切り、その出力を渡し、出力を計算 &lt;code&gt;readable.push()&lt;/code&gt; メソッドを。</target>
        </trans-unit>
        <trans-unit id="ed7429a089b008886db918411f22464481d5a71c" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Transform&lt;/code&gt; stream implementations must provide a &lt;code&gt;_transform()&lt;/code&gt; method to accept input and produce output. The &lt;code&gt;transform._transform()&lt;/code&gt; implementation handles the bytes being written, computes an output, then passes that output off to the readable portion using the &lt;code&gt;transform.push()&lt;/code&gt; method.</source>
          <target state="translated">All &lt;code&gt;Transform&lt;/code&gt; stream implementations must provide a &lt;code&gt;_transform()&lt;/code&gt; method to accept input and produce output. The &lt;code&gt;transform._transform()&lt;/code&gt; implementation handles the bytes being written, computes an output, then passes that output off to the readable portion using the &lt;code&gt;transform.push()&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="ee5972f7beb7b0f33c7a905ddd82752b5535e22d" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;TypedArray&lt;/code&gt; and &lt;code&gt;Buffer&lt;/code&gt; instances are views over an underlying &lt;code&gt;ArrayBuffer&lt;/code&gt;. That is, it is the &lt;code&gt;ArrayBuffer&lt;/code&gt; that actually stores the raw data while the &lt;code&gt;TypedArray&lt;/code&gt; and &lt;code&gt;Buffer&lt;/code&gt; objects provide a way of viewing and manipulating the data. It is possible and common for multiple views to be created over the same &lt;code&gt;ArrayBuffer&lt;/code&gt; instance. Great care must be taken when using a transfer list to transfer an &lt;code&gt;ArrayBuffer&lt;/code&gt; as doing so causes all &lt;code&gt;TypedArray&lt;/code&gt; and &lt;code&gt;Buffer&lt;/code&gt; instances that share that same &lt;code&gt;ArrayBuffer&lt;/code&gt; to become unusable.</source>
          <target state="translated">&lt;code&gt;TypedArray&lt;/code&gt; インスタンスと &lt;code&gt;Buffer&lt;/code&gt; インスタンスはすべて、基になる &lt;code&gt;ArrayBuffer&lt;/code&gt; のビューです。つまり、実際に生データを格納するのは &lt;code&gt;ArrayBuffer&lt;/code&gt; であり、 &lt;code&gt;TypedArray&lt;/code&gt; オブジェクトと &lt;code&gt;Buffer&lt;/code&gt; オブジェクトはデータを表示および操作する方法を提供します。同じ &lt;code&gt;ArrayBuffer&lt;/code&gt; インスタンス上に複数のビューを作成することは可能であり、一般的です。転送リストを使用して &lt;code&gt;ArrayBuffer&lt;/code&gt; を転送する場合は、細心の注意を払う必要があります。 &lt;code&gt;TypedArray&lt;/code&gt; 、同じ &lt;code&gt;ArrayBuffer&lt;/code&gt; を共有するすべてのTypedArrayインスタンスと &lt;code&gt;Buffer&lt;/code&gt; インスタンスが使用できなくなります。</target>
        </trans-unit>
        <trans-unit id="cabf78e0f89c515548a408b371c029a260b97c3e" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;TypedArray&lt;/code&gt; and &lt;code&gt;Buffer&lt;/code&gt; instances are views over an underlying &lt;code&gt;ArrayBuffer&lt;/code&gt;. That is, it is the &lt;code&gt;ArrayBuffer&lt;/code&gt; that actually stores the raw data while the &lt;code&gt;TypedArray&lt;/code&gt; and &lt;code&gt;Buffer&lt;/code&gt; objects provide a way of viewing and manipulating the data. It is possible and common for multiple views to be created over the same &lt;code&gt;ArrayBuffer&lt;/code&gt; instance. Great care must be taken when using a transfer list to transfer an &lt;code&gt;ArrayBuffer&lt;/code&gt; as doing so will cause all &lt;code&gt;TypedArray&lt;/code&gt; and &lt;code&gt;Buffer&lt;/code&gt; instances that share that same &lt;code&gt;ArrayBuffer&lt;/code&gt; to become unusable.</source>
          <target state="translated">All &lt;code&gt;TypedArray&lt;/code&gt; and &lt;code&gt;Buffer&lt;/code&gt; instances are views over an underlying &lt;code&gt;ArrayBuffer&lt;/code&gt; . That is, it is the &lt;code&gt;ArrayBuffer&lt;/code&gt; that actually stores the raw data while the &lt;code&gt;TypedArray&lt;/code&gt; and &lt;code&gt;Buffer&lt;/code&gt; objects provide a way of viewing and manipulating the data. It is possible and common for multiple views to be created over the same &lt;code&gt;ArrayBuffer&lt;/code&gt; instance. Great care must be taken when using a transfer list to transfer an &lt;code&gt;ArrayBuffer&lt;/code&gt; as doing so will cause all &lt;code&gt;TypedArray&lt;/code&gt; and &lt;code&gt;Buffer&lt;/code&gt; instances that share that same &lt;code&gt;ArrayBuffer&lt;/code&gt; to become unusable.</target>
        </trans-unit>
        <trans-unit id="9f7879641ea3f0e1cea7f0b0996200c2392ed563" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Writable&lt;/code&gt; stream implementations must provide a &lt;a href=&quot;#stream_writable_write_chunk_encoding_callback_1&quot;&gt;&lt;code&gt;writable._write()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#stream_writable_writev_chunks_callback&quot;&gt;&lt;code&gt;writable._writev()&lt;/code&gt;&lt;/a&gt; method to send data to the underlying resource.</source>
          <target state="translated">All &lt;code&gt;Writable&lt;/code&gt; stream implementations must provide a &lt;a href=&quot;#stream_writable_write_chunk_encoding_callback_1&quot;&gt; &lt;code&gt;writable._write()&lt;/code&gt; &lt;/a&gt; and/or &lt;a href=&quot;#stream_writable_writev_chunks_callback&quot;&gt; &lt;code&gt;writable._writev()&lt;/code&gt; &lt;/a&gt; method to send data to the underlying resource.</target>
        </trans-unit>
        <trans-unit id="88861c6bdf69df8a65d7c445934562e2ebccfc7f" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;Writable&lt;/code&gt; stream implementations must provide a &lt;a href=&quot;#stream_writable_write_chunk_encoding_callback_1&quot;&gt;&lt;code&gt;writable._write()&lt;/code&gt;&lt;/a&gt; method to send data to the underlying resource.</source>
          <target state="translated">すべての &lt;code&gt;Writable&lt;/code&gt; ストリーム実装は、基礎となるリソースにデータを送信するための&lt;a href=&quot;#stream_writable_write_chunk_encoding_callback_1&quot;&gt; &lt;code&gt;writable._write()&lt;/code&gt; &lt;/a&gt;メソッドを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="3443a41a48d02b84720bfc848af82205a36d4561" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;fs.FSWatcher&lt;/code&gt; objects are &lt;a href=&quot;events&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt;'s that will emit a &lt;code&gt;'change'&lt;/code&gt; event whenever a specific watched file is modified.</source>
          <target state="translated">すべての &lt;code&gt;fs.FSWatcher&lt;/code&gt; のオブジェクトは、&lt;a href=&quot;events&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt;「放出するの &lt;code&gt;'change'&lt;/code&gt; 特定見守っファイルが変更されるたびにイベントを。</target>
        </trans-unit>
        <trans-unit id="b372a4a5c65b8cd2e8d09b97ddaa4e44af4867ae" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;fs.FSWatcher&lt;/code&gt; objects emit a &lt;code&gt;'change'&lt;/code&gt; event whenever a specific watched file is modified.</source>
          <target state="translated">All &lt;code&gt;fs.FSWatcher&lt;/code&gt; objects emit a &lt;code&gt;'change'&lt;/code&gt; event whenever a specific watched file is modified.</target>
        </trans-unit>
        <trans-unit id="8c1d1ad3ac6899e806ce2231d419854cdd7c3865" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;fs.ReadStream&lt;/code&gt; objects are &lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;Readable Streams&lt;/a&gt;.</source>
          <target state="translated">すべての &lt;code&gt;fs.ReadStream&lt;/code&gt; オブジェクトは&lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;Readable Streams&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="b6af1186262caa67759a8bc5c7b0f6d30d9340ce" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;listen()&lt;/code&gt; methods can take a &lt;code&gt;backlog&lt;/code&gt; parameter to specify the maximum length of the queue of pending connections. The actual length will be determined by the OS through sysctl settings such as &lt;code&gt;tcp_max_syn_backlog&lt;/code&gt; and &lt;code&gt;somaxconn&lt;/code&gt; on Linux. The default value of this parameter is 511 (not 512).</source>
          <target state="translated">すべての &lt;code&gt;listen()&lt;/code&gt; メソッドは、保留中の接続のキューの最大長を指定するために &lt;code&gt;backlog&lt;/code&gt; パラメータをとることができます。実際の長さは、Linuxの &lt;code&gt;tcp_max_syn_backlog&lt;/code&gt; や &lt;code&gt;somaxconn&lt;/code&gt; などのsysctl設定を通じてOSによって決定されます。このパラメーターのデフォルト値は511です（512ではありません）。</target>
        </trans-unit>
        <trans-unit id="2833f0ffdbc8052bef39fdc07cf85169e502cf5c" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;zlib&lt;/code&gt; APIs, except those that are explicitly synchronous, use the Node.js internal threadpool. This can lead to surprising effects and performance limitations in some applications.</source>
          <target state="translated">All &lt;code&gt;zlib&lt;/code&gt; APIs, except those that are explicitly synchronous, use the Node.js internal threadpool. This can lead to surprising effects and performance limitations in some applications.</target>
        </trans-unit>
        <trans-unit id="36442760c73cb61a13fd9eaff03bf94062a35c9d" translate="yes" xml:space="preserve">
          <source>All JavaScript and System errors raised by Node.js inherit from, or are instances of, the standard JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error&quot;&gt;&amp;lt;Error&amp;gt;&lt;/a&gt; class and are guaranteed to provide &lt;em&gt;at least&lt;/em&gt; the properties available on that class.</source>
          <target state="translated">Node.jsによって発生するすべてのJavaScriptおよびシステムエラーは、標準のJavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error&quot;&gt;&amp;lt;Error&amp;gt;&lt;/a&gt;クラスから継承されるか、そのインスタンスであり、&lt;em&gt;少なくとも&lt;/em&gt;そのクラスで使用可能なプロパティを提供することが保証されています。</target>
        </trans-unit>
        <trans-unit id="de49cf32c0365c1eb8509b935135349013decac3" translate="yes" xml:space="preserve">
          <source>All JavaScript and system errors raised by Node.js inherit from, or are instances of, the standard JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error&quot;&gt;&amp;lt;Error&amp;gt;&lt;/a&gt; class and are guaranteed to provide &lt;em&gt;at least&lt;/em&gt; the properties available on that class.</source>
          <target state="translated">All JavaScript and system errors raised by Node.js inherit from, or are instances of, the standard JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error&quot;&gt;&amp;lt;Error&amp;gt;&lt;/a&gt; class and are guaranteed to provide &lt;em&gt;at least&lt;/em&gt; the properties available on that class.</target>
        </trans-unit>
        <trans-unit id="16560cff3d80d11e9b5e7f492a9692a6ce36a477" translate="yes" xml:space="preserve">
          <source>All JavaScript errors are handled as exceptions that &lt;em&gt;immediately&lt;/em&gt; generate and throw an error using the standard JavaScript &lt;code&gt;throw&lt;/code&gt; mechanism. These are handled using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch&quot;&gt;&lt;code&gt;try&amp;hellip;catch&lt;/code&gt; construct&lt;/a&gt; provided by the JavaScript language.</source>
          <target state="translated">すべてのJavaScriptエラーは例外として処理され、標準のJavaScript &lt;code&gt;throw&lt;/code&gt; メカニズムを使用してエラーが&lt;em&gt;即座に&lt;/em&gt;生成およびスローされます。これらは、JavaScript言語によって提供される&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch&quot;&gt; &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; &lt;/a&gt;構文を使用して処理されます。</target>
        </trans-unit>
        <trans-unit id="bb4132449bbcf2ed8ba71bc73ff2c0038d63b185" translate="yes" xml:space="preserve">
          <source>All JavaScript executed within Node.js runs within the scope of a &quot;context&quot;. According to the &lt;a href=&quot;https://v8.dev/docs/embed#contexts&quot;&gt;V8 Embedder's Guide&lt;/a&gt;:</source>
          <target state="translated">Node.js内で実行されるすべてのJavaScriptは、「コンテキスト」のスコープ内で実行されます。&lt;a href=&quot;https://v8.dev/docs/embed#contexts&quot;&gt;V8 Embedder's Guideに&lt;/a&gt;よると：</target>
        </trans-unit>
        <trans-unit id="1884843c5505a9a286120a5c84c1e1f9c5db98da" translate="yes" xml:space="preserve">
          <source>All JavaScript values are abstracted behind an opaque type named &lt;code&gt;napi_value&lt;/code&gt;.</source>
          <target state="translated">すべてのJavaScript値は、 &lt;code&gt;napi_value&lt;/code&gt; という名前の不透明な型の背後で抽象化されています。</target>
        </trans-unit>
        <trans-unit id="8b4fca30c7bef2be5e2035a2489193144182b18b" translate="yes" xml:space="preserve">
          <source>All N-API calls return a status code of type &lt;code&gt;napi_status&lt;/code&gt;. This status indicates whether the API call succeeded or failed.</source>
          <target state="translated">すべてのN-API呼び出しは、タイプ &lt;code&gt;napi_status&lt;/code&gt; のステータスコードを返します。このステータスは、API呼び出しが成功したか失敗したかを示します。</target>
        </trans-unit>
        <trans-unit id="75acf0f2a180507110d4d6a665a7fd82e6569c9c" translate="yes" xml:space="preserve">
          <source>All Node.js Addons must export an initialization function following the pattern:</source>
          <target state="translated">すべてのNode.jsアドオンは、パターンに従った初期化関数をエクスポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="30f7f47c398b5b6b2bbcfff7884f315439b25de5" translate="yes" xml:space="preserve">
          <source>All Node.js addons must export an initialization function following the pattern:</source>
          <target state="translated">すべてのNode.jsアドオンは、パターンに従った初期化関数をエクスポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="2fef8393cd57860083288f2a59f29dc02cbf5778" translate="yes" xml:space="preserve">
          <source>All Together...</source>
          <target state="translated">みんなで...</target>
        </trans-unit>
        <trans-unit id="a45f00525f348addf5245a617a6395d00bad1d81" translate="yes" xml:space="preserve">
          <source>All additional properties on the settings object are ignored.</source>
          <target state="translated">設定オブジェクト上の追加のプロパティはすべて無視されます。</target>
        </trans-unit>
        <trans-unit id="167f5781e42a170b5eee01c7c7fa885b364272e6" translate="yes" xml:space="preserve">
          <source>All attempts at serializing an uncaught exception from a worker thread failed.</source>
          <target state="translated">ワーカースレッドからの捕捉されない例外のシリアライズの試みはすべて失敗しました。</target>
        </trans-unit>
        <trans-unit id="a07c79d3815678342c9ab6b3437e2eb6ca8945e6" translate="yes" xml:space="preserve">
          <source>All callbacks are optional. For example, if only resource cleanup needs to be tracked, then only the &lt;code&gt;destroy&lt;/code&gt; callback needs to be passed. The specifics of all functions that can be passed to &lt;code&gt;callbacks&lt;/code&gt; is in the &lt;a href=&quot;#async_hooks_hook_callbacks&quot;&gt;Hook Callbacks&lt;/a&gt; section.</source>
          <target state="translated">すべてのコールバックはオプションです。たとえば、リソースのクリーンアップのみを追跡する必要がある場合は、 &lt;code&gt;destroy&lt;/code&gt; コールバックのみを渡す必要があります。 &lt;code&gt;callbacks&lt;/code&gt; に渡すことができるすべての関数の詳細は、&lt;a href=&quot;#async_hooks_hook_callbacks&quot;&gt;フックコールバック&lt;/a&gt;セクションにあります。</target>
        </trans-unit>
        <trans-unit id="7846d9f48605d02cd4db6f0929d9f3957a319c86" translate="yes" xml:space="preserve">
          <source>All calls to &lt;code&gt;writable.write()&lt;/code&gt; that occur between the time &lt;code&gt;writable._write()&lt;/code&gt; is called and the &lt;code&gt;callback&lt;/code&gt; is called will cause the written data to be buffered. When the &lt;code&gt;callback&lt;/code&gt; is invoked, the stream might emit a &lt;a href=&quot;#stream_event_drain&quot;&gt;&lt;code&gt;'drain'&lt;/code&gt;&lt;/a&gt; event. If a stream implementation is capable of processing multiple chunks of data at once, the &lt;code&gt;writable._writev()&lt;/code&gt; method should be implemented.</source>
          <target state="translated">&lt;code&gt;writable._write()&lt;/code&gt; が呼び出されてから &lt;code&gt;callback&lt;/code&gt; が呼び出されるまでの間に発生する &lt;code&gt;writable.write()&lt;/code&gt; へのすべての呼び出しにより、書き込まれたデータがバッファーに入れられます。ときに &lt;code&gt;callback&lt;/code&gt; 呼び出され、ストリームが発する可能性がある&lt;a href=&quot;#stream_event_drain&quot;&gt; &lt;code&gt;'drain'&lt;/code&gt; &lt;/a&gt;イベントを。ストリーム実装が複数のデータのチャンクを一度に処理できる場合は、 &lt;code&gt;writable._writev()&lt;/code&gt; メソッドを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="cd9543be6390d96b2ef513aab1565edc8245a14a" translate="yes" xml:space="preserve">
          <source>All errors generated by Node.js, including all System and JavaScript errors, will either be instances of, or inherit from, the &lt;code&gt;Error&lt;/code&gt; class.</source>
          <target state="translated">Node.jsによって生成されたすべてのエラー（すべてのシステムエラーとJavaScriptエラーを含む）は、 &lt;code&gt;Error&lt;/code&gt; クラスのインスタンスであるか、Errorクラスから継承されます。</target>
        </trans-unit>
        <trans-unit id="5164692f9a9527b3909c9c977f4ca559b67bdf34" translate="yes" xml:space="preserve">
          <source>All errors generated by Node.js, including all system and JavaScript errors, will either be instances of, or inherit from, the &lt;code&gt;Error&lt;/code&gt; class.</source>
          <target state="translated">All errors generated by Node.js, including all system and JavaScript errors, will either be instances of, or inherit from, the &lt;code&gt;Error&lt;/code&gt; class.</target>
        </trans-unit>
        <trans-unit id="26c3a80c4cdb64541ce283b3a6c6072bce184cf7" translate="yes" xml:space="preserve">
          <source>All file system APIs except &lt;code&gt;fs.FSWatcher()&lt;/code&gt; and those that are explicitly synchronous use libuv's threadpool, which can have surprising and negative performance implications for some applications. See the &lt;a href=&quot;cli#cli_uv_threadpool_size_size&quot;&gt;&lt;code&gt;UV_THREADPOOL_SIZE&lt;/code&gt;&lt;/a&gt; documentation for more information.</source>
          <target state="translated">&lt;code&gt;fs.FSWatcher()&lt;/code&gt; を除くすべてのファイルシステムAPI と明示的に同期されているものは、libuvのスレッドプールを使用します。これは、一部のアプリケーションに予想外の悪影響を与える可能性があります。詳細については、&lt;a href=&quot;cli#cli_uv_threadpool_size_size&quot;&gt; &lt;code&gt;UV_THREADPOOL_SIZE&lt;/code&gt; の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="0633b0855ed71d3ce1a3ac8d613cd5791b00424f" translate="yes" xml:space="preserve">
          <source>All file system operations have synchronous and asynchronous forms.</source>
          <target state="translated">すべてのファイルシステム操作には、同期型と非同期型があります。</target>
        </trans-unit>
        <trans-unit id="a40fc8ef243bc8dbc49c2e5720b47f3d4f797d73" translate="yes" xml:space="preserve">
          <source>All file system operations have synchronous, callback, and promise-based forms.</source>
          <target state="translated">すべてのファイルシステム操作には、同期型、コールバック型、プロミス型があります。</target>
        </trans-unit>
        <trans-unit id="fced75be647220018f131102098da3592071106c" translate="yes" xml:space="preserve">
          <source>All functionality described in the &lt;a href=&quot;https://tc39.github.io/ecma402/&quot;&gt;ECMAScript Internationalization API Specification&lt;/a&gt; (aka ECMA-402):</source>
          <target state="translated">&lt;a href=&quot;https://tc39.github.io/ecma402/&quot;&gt;ECMAScript国際化API仕様&lt;/a&gt;（別名ECMA-402）で説明されているすべての機能：</target>
        </trans-unit>
        <trans-unit id="5d389e07d3c8e8cd83972dc85784ff82c1eadff9" translate="yes" xml:space="preserve">
          <source>All instances contain the built-in &lt;code&gt;Error&lt;/code&gt; properties (&lt;code&gt;message&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;) and:</source>
          <target state="translated">すべてのインスタンスには、組み込みの &lt;code&gt;Error&lt;/code&gt; プロパティ（ &lt;code&gt;message&lt;/code&gt; と &lt;code&gt;name&lt;/code&gt; ）が含まれています。</target>
        </trans-unit>
        <trans-unit id="088f94721b3a2254d0eb027e4ad370ea58b88cdd" translate="yes" xml:space="preserve">
          <source>All messages sent from the worker thread are emitted before the &lt;a href=&quot;#worker_threads_event_exit&quot;&gt;&lt;code&gt;'exit'&lt;/code&gt; event&lt;/a&gt; is emitted on the &lt;code&gt;Worker&lt;/code&gt; object.</source>
          <target state="translated">ワーカースレッドから送信されるすべてのメッセージは、 &lt;code&gt;Worker&lt;/code&gt; オブジェクトで&lt;a href=&quot;#worker_threads_event_exit&quot;&gt; &lt;code&gt;'exit'&lt;/code&gt; イベント&lt;/a&gt;が発行される前に発行されます。</target>
        </trans-unit>
        <trans-unit id="cc7acf4d2973be335e18b8185508a93552cd2d24" translate="yes" xml:space="preserve">
          <source>All messages sent from the worker thread will be emitted before the &lt;a href=&quot;#worker_threads_event_exit&quot;&gt;&lt;code&gt;'exit'&lt;/code&gt; event&lt;/a&gt; is emitted on the &lt;code&gt;Worker&lt;/code&gt; object.</source>
          <target state="translated">All messages sent from the worker thread will be emitted before the &lt;a href=&quot;#worker_threads_event_exit&quot;&gt; &lt;code&gt;'exit'&lt;/code&gt; event&lt;/a&gt; is emitted on the &lt;code&gt;Worker&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="7aa444f47c270644fb7625f868fac675c2d3ac02" translate="yes" xml:space="preserve">
          <source>All objects that emit events are instances of the &lt;code&gt;EventEmitter&lt;/code&gt; class. These objects expose an &lt;code&gt;eventEmitter.on()&lt;/code&gt; function that allows one or more functions to be attached to named events emitted by the object. Typically, event names are camel-cased strings but any valid JavaScript property key can be used.</source>
          <target state="translated">イベントを発生させるすべてのオブジェクトは、 &lt;code&gt;EventEmitter&lt;/code&gt; クラスのインスタンスです。これらのオブジェクトは &lt;code&gt;eventEmitter.on()&lt;/code&gt; 関数を公開します。これにより、オブジェクトによって発行された名前付きイベントに1つ以上の関数をアタッチできます。通常、イベント名はキャメルケースの文字列ですが、任意の有効なJavaScriptプロパティキーを使用できます。</target>
        </trans-unit>
        <trans-unit id="a8e71b13cd7cab02ba4a9267eb78069628cda343" translate="yes" xml:space="preserve">
          <source>All of the N-API functions share the same error handling pattern. The return type of all API functions is &lt;code&gt;napi_status&lt;/code&gt;.</source>
          <target state="translated">すべてのN-API関数は、同じエラー処理パターンを共有します。すべてのAPI関数の戻り値の型は &lt;code&gt;napi_status&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8b5c39f053b735c96bb27ce0f613978a828c317b" translate="yes" xml:space="preserve">
          <source>All of the constants defined in &lt;code&gt;zlib.h&lt;/code&gt; are also defined on &lt;code&gt;require('zlib').constants&lt;/code&gt;. In the normal course of operations, it will not be necessary to use these constants. They are documented so that their presence is not surprising. This section is taken almost directly from the &lt;a href=&quot;https://zlib.net/manual.html#Constants&quot;&gt;zlib documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;zlib.h&lt;/code&gt; で定義されているすべての定数は、 &lt;code&gt;require('zlib').constants&lt;/code&gt; でも定義されています。通常の操作では、これらの定数を使用する必要はありません。それらは、それらの存在が驚くべきことではないように文書化されています。このセクションは、&lt;a href=&quot;https://zlib.net/manual.html#Constants&quot;&gt;zlibのドキュメント&lt;/a&gt;からほぼ直接取っています。</target>
        </trans-unit>
        <trans-unit id="4b60d35af055ed8a5627513816817f3b4c2a3b80" translate="yes" xml:space="preserve">
          <source>All of the following examples are available for &lt;a href=&quot;https://github.com/nodejs/node-addon-examples&quot;&gt;download&lt;/a&gt; and may be used as the starting-point for an Addon.</source>
          <target state="translated">以下の例はすべて&lt;a href=&quot;https://github.com/nodejs/node-addon-examples&quot;&gt;ダウンロードでき&lt;/a&gt;、アドオンの開始点として使用できます。</target>
        </trans-unit>
        <trans-unit id="c44953ea6295e98b8983681700e7a7855b0536b3" translate="yes" xml:space="preserve">
          <source>All of the following examples are available for &lt;a href=&quot;https://github.com/nodejs/node-addon-examples&quot;&gt;download&lt;/a&gt; and may be used as the starting-point for an addon.</source>
          <target state="translated">All of the following examples are available for &lt;a href=&quot;https://github.com/nodejs/node-addon-examples&quot;&gt;download&lt;/a&gt; and may be used as the starting-point for an addon.</target>
        </trans-unit>
        <trans-unit id="48cdde557fd23eb051989a209de3e33f737814bb" translate="yes" xml:space="preserve">
          <source>All of these take a &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; or string as the first argument, an optional second argument to supply options to the &lt;code&gt;zlib&lt;/code&gt; classes and will call the supplied callback with &lt;code&gt;callback(error, result)&lt;/code&gt;.</source>
          <target state="translated">これらはすべて、最初の引数として&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;またはstringを受け取り、オプションの2番目の引数として &lt;code&gt;zlib&lt;/code&gt; クラスにオプションを提供し、提供されたコールバックを &lt;code&gt;callback(error, result)&lt;/code&gt; で呼び出します。</target>
        </trans-unit>
        <trans-unit id="006dbd5a02937a18d7fffb922305010c1b4d56c3" translate="yes" xml:space="preserve">
          <source>All offsets are now coerced to integers before doing any calculations with them.</source>
          <target state="translated">すべてのオフセットは、それらを使って計算を行う前に整数に強制されるようになりました。</target>
        </trans-unit>
        <trans-unit id="a91c8e7948e63f046e7b16032a0ecd2a5276708e" translate="yes" xml:space="preserve">
          <source>All options, including V8 options, allow words to be separated by both dashes (&lt;code&gt;-&lt;/code&gt;) or underscores (&lt;code&gt;_&lt;/code&gt;).</source>
          <target state="translated">V8オプションを含むすべてのオプションでは、単語をダッシュ​​（ &lt;code&gt;-&lt;/code&gt; ）または下線（ &lt;code&gt;_&lt;/code&gt; ）の両方で区切ることができます。</target>
        </trans-unit>
        <trans-unit id="1e3d6833d92eea0a622545ca43da8d58f4430f44" translate="yes" xml:space="preserve">
          <source>All options, including V8 options, allow words to be separated by both dashes (&lt;code&gt;-&lt;/code&gt;) or underscores (&lt;code&gt;_&lt;/code&gt;). For example, &lt;code&gt;--pending-deprecation&lt;/code&gt; is equivalent to &lt;code&gt;--pending_deprecation&lt;/code&gt;.</source>
          <target state="translated">All options, including V8 options, allow words to be separated by both dashes ( &lt;code&gt;-&lt;/code&gt; ) or underscores ( &lt;code&gt;_&lt;/code&gt; ). For example, &lt;code&gt;--pending-deprecation&lt;/code&gt; is equivalent to &lt;code&gt;--pending_deprecation&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e095f1dac7b03c4bb045596dfa47b1250120312" translate="yes" xml:space="preserve">
          <source>All other functions in the &lt;code&gt;dns&lt;/code&gt; module connect to an actual DNS server to perform name resolution. They will always use the network to perform DNS queries. These functions do not use the same set of configuration files used by &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt; (e.g. &lt;code&gt;/etc/hosts&lt;/code&gt;). Use these functions to always perform DNS queries, bypassing other name-resolution facilities.</source>
          <target state="translated">All other functions in the &lt;code&gt;dns&lt;/code&gt; module connect to an actual DNS server to perform name resolution. They will always use the network to perform DNS queries. These functions do not use the same set of configuration files used by &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt; (e.g. &lt;code&gt;/etc/hosts&lt;/code&gt; ). Use these functions to always perform DNS queries, bypassing other name-resolution facilities.</target>
        </trans-unit>
        <trans-unit id="1353130fac461803375040f470cf617554fda8b0" translate="yes" xml:space="preserve">
          <source>All other interactions will be routed directly to the socket.</source>
          <target state="translated">他のすべてのインタラクションはソケットに直接ルーティングされます。</target>
        </trans-unit>
        <trans-unit id="6bc71f8e2ce93a81a780d0ec39b10e45042442c8" translate="yes" xml:space="preserve">
          <source>All other interactions will be routed directly to the socket. With TLS support, use &lt;a href=&quot;tls#tls_tlssocket_getpeercertificate_detailed&quot;&gt;&lt;code&gt;request.socket.getPeerCertificate()&lt;/code&gt;&lt;/a&gt; to obtain the client's authentication details.</source>
          <target state="translated">他のすべての対話は、ソケットに直接ルーティングされます。TLSサポートでは、&lt;a href=&quot;tls#tls_tlssocket_getpeercertificate_detailed&quot;&gt; &lt;code&gt;request.socket.getPeerCertificate()&lt;/code&gt; &lt;/a&gt;を使用してクライアントの認証の詳細を取得します。</target>
        </trans-unit>
        <trans-unit id="3b8b16d57418e19db895957a2cd599fe2e533613" translate="yes" xml:space="preserve">
          <source>All paths defined in the &lt;code&gt;&quot;exports&quot;&lt;/code&gt; must be relative file URLs starting with &lt;code&gt;./&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&quot;exports&quot;&lt;/code&gt; 定義されているすべてのパスは、。 &lt;code&gt;./&lt;/code&gt; 始まる相対ファイルURLである必要があります。</target>
        </trans-unit>
        <trans-unit id="a8b4adf969225f5dea18ce365eb8c20d9152b994" translate="yes" xml:space="preserve">
          <source>All references to scope in this section are referring to IPv6 Zone Indices, which are defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc4007&quot;&gt;RFC 4007&lt;/a&gt;. In string form, an IP with a scope index is written as &lt;code&gt;'IP%scope'&lt;/code&gt; where scope is an interface name or interface number.</source>
          <target state="translated">このセクションでのスコープへのすべての参照は、&lt;a href=&quot;https://tools.ietf.org/html/rfc4007&quot;&gt;RFC4007で&lt;/a&gt;定義されているIPv6ゾーンインデックスを参照しています。文字列形式では、スコープインデックスを持つIPは &lt;code&gt;'IP%scope'&lt;/code&gt; と記述されます。ここで、scopeはインターフェイス名またはインターフェイス番号です。</target>
        </trans-unit>
        <trans-unit id="5d373e9c7fee9a308b409114b19bba5863688c00" translate="yes" xml:space="preserve">
          <source>All streams created by Node.js APIs operate exclusively on strings and &lt;code&gt;Buffer&lt;/code&gt; (or &lt;code&gt;Uint8Array&lt;/code&gt;) objects. It is possible, however, for stream implementations to work with other types of JavaScript values (with the exception of &lt;code&gt;null&lt;/code&gt;, which serves a special purpose within streams). Such streams are considered to operate in &quot;object mode&quot;.</source>
          <target state="translated">Node.js APIによって作成されたすべてのストリームは、文字列と &lt;code&gt;Buffer&lt;/code&gt; （または &lt;code&gt;Uint8Array&lt;/code&gt; ）オブジェクトのみを操作します。ただし、ストリーム実装が他のタイプのJavaScript値と連携することは可能です（ストリーム内で特別な目的を果たす &lt;code&gt;null&lt;/code&gt; を除く）。このようなストリームは「オブジェクトモード」で動作すると見なされます。</target>
        </trans-unit>
        <trans-unit id="c2330ed3cb4343470a9656ea264686e940a6d30d" translate="yes" xml:space="preserve">
          <source>All systems use an IP of the host on the desired physical interface:</source>
          <target state="translated">すべてのシステムは、希望する物理インターフェース上のホストのIPを使用します。</target>
        </trans-unit>
        <trans-unit id="e29e96c110bff02d5952607fd244cbb792258ce3" translate="yes" xml:space="preserve">
          <source>All together...</source>
          <target state="translated">みんなで...</target>
        </trans-unit>
        <trans-unit id="97a23133a76864dafb4de834709dbf8b24d28541" translate="yes" xml:space="preserve">
          <source>All workers are created using &lt;a href=&quot;child_process#child_process_child_process_fork_modulepath_args_options&quot;&gt;&lt;code&gt;child_process.fork()&lt;/code&gt;&lt;/a&gt;, the returned object from this function is stored as &lt;code&gt;.process&lt;/code&gt;. In a worker, the global &lt;code&gt;process&lt;/code&gt; is stored.</source>
          <target state="translated">すべてのワーカーは&lt;a href=&quot;child_process#child_process_child_process_fork_modulepath_args_options&quot;&gt; &lt;code&gt;child_process.fork()&lt;/code&gt; &lt;/a&gt;を使用して作成され、この関数から返されたオブジェクトは &lt;code&gt;.process&lt;/code&gt; として保存されます。ワーカーには、グローバル &lt;code&gt;process&lt;/code&gt; が格納されます。</target>
        </trans-unit>
        <trans-unit id="6e9d6e8b57486f83cc80588427554041a2873237" translate="yes" xml:space="preserve">
          <source>All zlib APIs, except those that are explicitly synchronous, use libuv's threadpool. This can lead to surprising effects in some applications, such as subpar performance (which can be mitigated by adjusting the &lt;a href=&quot;cli#cli_uv_threadpool_size_size&quot;&gt;pool size&lt;/a&gt;) and/or unrecoverable and catastrophic memory fragmentation.</source>
          <target state="translated">明示的に同期されるものを除くすべてのzlib APIは、libuvのスレッドプールを使用します。これにより、一部のアプリケーションで予想外の影響が生じる可能性があります。たとえば、パフォーマンスが劣る（&lt;a href=&quot;cli#cli_uv_threadpool_size_size&quot;&gt;プールサイズを&lt;/a&gt;調整することで軽減できる）場合や、回復不能で壊滅的なメモリの断片化が発生する場合などです。</target>
        </trans-unit>
        <trans-unit id="84a0c34cbc67fc12fbdeb4f95c2d0527efcb9c2f" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Buffer&lt;/code&gt; of &lt;code&gt;size&lt;/code&gt; bytes. If &lt;code&gt;fill&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;, the &lt;code&gt;Buffer&lt;/code&gt; will be &lt;em&gt;zero-filled&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; バイトの新しい &lt;code&gt;Buffer&lt;/code&gt; を割り当てます。場合は &lt;code&gt;fill&lt;/code&gt; され &lt;code&gt;undefined&lt;/code&gt; 、 &lt;code&gt;Buffer&lt;/code&gt; になり&lt;em&gt;、ゼロで満たされました&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f02075833efede72278358dccc2bf4752b07141d" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Buffer&lt;/code&gt; of &lt;code&gt;size&lt;/code&gt; bytes. If &lt;code&gt;fill&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;, the &lt;code&gt;Buffer&lt;/code&gt; will be zero-filled.</source>
          <target state="translated">Allocates a new &lt;code&gt;Buffer&lt;/code&gt; of &lt;code&gt;size&lt;/code&gt; bytes. If &lt;code&gt;fill&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt; , the &lt;code&gt;Buffer&lt;/code&gt; will be zero-filled.</target>
        </trans-unit>
        <trans-unit id="59a28dc923e998544d059f38fd72af91d80e51d9" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Buffer&lt;/code&gt; of &lt;code&gt;size&lt;/code&gt; bytes. If &lt;code&gt;size&lt;/code&gt; is larger than &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt;&lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt;&lt;/a&gt; or smaller than 0, &lt;a href=&quot;errors#ERR_INVALID_ARG_VALUE&quot;&gt;&lt;code&gt;ERR_INVALID_ARG_VALUE&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; バイトの新しい &lt;code&gt;Buffer&lt;/code&gt; を割り当てます。場合は &lt;code&gt;size&lt;/code&gt; より大きい&lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt; &lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt; &lt;/a&gt;または0より小さい、&lt;a href=&quot;errors#ERR_INVALID_ARG_VALUE&quot;&gt; &lt;code&gt;ERR_INVALID_ARG_VALUE&lt;/code&gt; が&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="ad2cba9c0a244ef016bf2844375b1df16b58c483" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Buffer&lt;/code&gt; of &lt;code&gt;size&lt;/code&gt; bytes. If &lt;code&gt;size&lt;/code&gt; is larger than &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt;&lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt;&lt;/a&gt; or smaller than 0, &lt;a href=&quot;errors#ERR_INVALID_ARG_VALUE&quot;&gt;&lt;code&gt;ERR_INVALID_ARG_VALUE&lt;/code&gt;&lt;/a&gt; is thrown. A zero-length &lt;code&gt;Buffer&lt;/code&gt; is created if &lt;code&gt;size&lt;/code&gt; is 0.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; バイトの新しい &lt;code&gt;Buffer&lt;/code&gt; を割り当てます。場合は &lt;code&gt;size&lt;/code&gt; より大きい&lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt; &lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt; &lt;/a&gt;または0より小さい、&lt;a href=&quot;errors#ERR_INVALID_ARG_VALUE&quot;&gt; &lt;code&gt;ERR_INVALID_ARG_VALUE&lt;/code&gt; が&lt;/a&gt;スローされます。 &lt;code&gt;size&lt;/code&gt; が0の場合、長さゼロの &lt;code&gt;Buffer&lt;/code&gt; が作成されます。</target>
        </trans-unit>
        <trans-unit id="fce462294b5ef5ae040caa30fe55f12ad117477e" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Buffer&lt;/code&gt; of &lt;code&gt;size&lt;/code&gt; bytes. If &lt;code&gt;size&lt;/code&gt; is larger than &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt;&lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt;&lt;/a&gt; or smaller than 0, &lt;a href=&quot;errors#ERR_INVALID_OPT_VALUE&quot;&gt;&lt;code&gt;ERR_INVALID_OPT_VALUE&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">Allocates a new &lt;code&gt;Buffer&lt;/code&gt; of &lt;code&gt;size&lt;/code&gt; bytes. If &lt;code&gt;size&lt;/code&gt; is larger than &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt; &lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt; &lt;/a&gt; or smaller than 0, &lt;a href=&quot;errors#ERR_INVALID_OPT_VALUE&quot;&gt; &lt;code&gt;ERR_INVALID_OPT_VALUE&lt;/code&gt; &lt;/a&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="eef231d49036e53aecd6e881705e3f9c90037c66" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Buffer&lt;/code&gt; of &lt;code&gt;size&lt;/code&gt; bytes. If &lt;code&gt;size&lt;/code&gt; is larger than &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt;&lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt;&lt;/a&gt; or smaller than 0, &lt;a href=&quot;errors#ERR_INVALID_OPT_VALUE&quot;&gt;&lt;code&gt;ERR_INVALID_OPT_VALUE&lt;/code&gt;&lt;/a&gt; is thrown. A zero-length &lt;code&gt;Buffer&lt;/code&gt; is created if &lt;code&gt;size&lt;/code&gt; is 0.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; バイトの新しい &lt;code&gt;Buffer&lt;/code&gt; を割り当てます。場合は &lt;code&gt;size&lt;/code&gt; より大きい&lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt; &lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt; &lt;/a&gt;または0より小さい、&lt;a href=&quot;errors#ERR_INVALID_OPT_VALUE&quot;&gt; &lt;code&gt;ERR_INVALID_OPT_VALUE&lt;/code&gt; が&lt;/a&gt;スローされます。 &lt;code&gt;size&lt;/code&gt; が0の場合、長さがゼロの &lt;code&gt;Buffer&lt;/code&gt; が作成されます。</target>
        </trans-unit>
        <trans-unit id="a59e375f63b200db935e9506cdbc116408bd810c" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Buffer&lt;/code&gt; using an &lt;code&gt;array&lt;/code&gt; of bytes in the range &lt;code&gt;0&lt;/code&gt; &amp;ndash; &lt;code&gt;255&lt;/code&gt;. Array entries outside that range will be truncated to fit into it.</source>
          <target state="translated">Allocates a new &lt;code&gt;Buffer&lt;/code&gt; using an &lt;code&gt;array&lt;/code&gt; of bytes in the range &lt;code&gt;0&lt;/code&gt; &amp;ndash; &lt;code&gt;255&lt;/code&gt; . Array entries outside that range will be truncated to fit into it.</target>
        </trans-unit>
        <trans-unit id="73735d1d02add01f7fa5d7413dc99be8a48104cc" translate="yes" xml:space="preserve">
          <source>Allocates a new &lt;code&gt;Buffer&lt;/code&gt; using an &lt;code&gt;array&lt;/code&gt; of octets.</source>
          <target state="translated">オクテットの &lt;code&gt;array&lt;/code&gt; を使用して新しい &lt;code&gt;Buffer&lt;/code&gt; を割り当てます。</target>
        </trans-unit>
        <trans-unit id="183b2af6db1854a9e765cc8bd0448f0caa18b7c0" translate="yes" xml:space="preserve">
          <source>Allow explicity setting date headers.</source>
          <target state="translated">日付ヘッダを明示的に設定できるようにしました。</target>
        </trans-unit>
        <trans-unit id="7dfdd74de9aa27ce193f639364b63fb3d68e34de" translate="yes" xml:space="preserve">
          <source>Allow passing headers as an array.</source>
          <target state="translated">ヘッダを配列として渡すことを許可します。</target>
        </trans-unit>
        <trans-unit id="8e4bd93fc1f785babd9680ace0e28fac4e5e950f" translate="yes" xml:space="preserve">
          <source>Allowed flush values.</source>
          <target state="translated">許可されたフラッシュ値。</target>
        </trans-unit>
        <trans-unit id="6e5b9413bd78182a240abf413e97ea168a6f9304" translate="yes" xml:space="preserve">
          <source>Allowing a &lt;a href=&quot;fs#fs_class_filehandle&quot;&gt;&lt;code&gt;fs.FileHandle&lt;/code&gt;&lt;/a&gt; object to be closed on garbage collection is deprecated. In the future, doing so might result in a thrown error that will terminate the process.</source>
          <target state="translated">Allowing a &lt;a href=&quot;fs#fs_class_filehandle&quot;&gt; &lt;code&gt;fs.FileHandle&lt;/code&gt; &lt;/a&gt; object to be closed on garbage collection is deprecated. In the future, doing so might result in a thrown error that will terminate the process.</target>
        </trans-unit>
        <trans-unit id="a0e21915bff6927f331c97bb7305dba47ad7188b" translate="yes" xml:space="preserve">
          <source>Allows configuration of &lt;code&gt;tty.ReadStream&lt;/code&gt; so that it operates as a raw device.</source>
          <target state="translated">&lt;code&gt;tty.ReadStream&lt;/code&gt; を構成して、rawデバイスとして動作するようにします。</target>
        </trans-unit>
        <trans-unit id="435f646a3cd692fa3365380855be95deae790721" translate="yes" xml:space="preserve">
          <source>Allows initial connection to servers that do not support RI.</source>
          <target state="translated">RIをサポートしていないサーバーへの初期接続を許可します。</target>
        </trans-unit>
        <trans-unit id="3b9a72f2c793317ff7880f2959ec5b1dc527b037" translate="yes" xml:space="preserve">
          <source>Allows legacy insecure renegotiation between OpenSSL and unpatched clients or servers. See &lt;a href=&quot;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&quot;&gt;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&lt;/a&gt;.</source>
          <target state="translated">OpenSSLとパッチが適用されていないクライアントまたはサーバーとの間で、安全ではないレガシーの再ネゴシエーションを可能にします。&lt;a href=&quot;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&quot;&gt;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.htmlを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="28c58d6e50ff3a360712c4575afc68dbbeceff9f" translate="yes" xml:space="preserve">
          <source>Almost all Node.js applications, no matter how simple, use streams in some manner. The following is an example of using streams in a Node.js application that implements an HTTP server:</source>
          <target state="translated">ほとんどすべてのNode.jsアプリケーションは、どんなにシンプルなものであっても、何らかの方法でストリームを使用しています。以下は、HTTPサーバを実装したNode.jsアプリケーションでストリームを使用する例です。</target>
        </trans-unit>
        <trans-unit id="739b5c636c4691fdf4e04622069584c9a6e966b2" translate="yes" xml:space="preserve">
          <source>Also &lt;code&gt;message.httpVersionMajor&lt;/code&gt; is the first integer and &lt;code&gt;message.httpVersionMinor&lt;/code&gt; is the second.</source>
          <target state="translated">また、 &lt;code&gt;message.httpVersionMajor&lt;/code&gt; は最初の整数で、 &lt;code&gt;message.httpVersionMinor&lt;/code&gt; は2番目の整数です。</target>
        </trans-unit>
        <trans-unit id="8becf9cd71e00f55f284e54344bafc5f370242f7" translate="yes" xml:space="preserve">
          <source>Alterantively &lt;code&gt;module.createRequire()&lt;/code&gt; can be used.</source>
          <target state="translated">代わりに、 &lt;code&gt;module.createRequire()&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="99ae49202240800f5e47ea3f570eec7283cce37f" translate="yes" xml:space="preserve">
          <source>Alternatively &lt;code&gt;module.createRequire()&lt;/code&gt; can be used.</source>
          <target state="translated">または、 &lt;code&gt;module.createRequire()&lt;/code&gt; を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="5823dd38a667d4b894dde67dc91f3384df22f74e" translate="yes" xml:space="preserve">
          <source>Alternatively a project could choose to export entire folders:</source>
          <target state="translated">また、プロジェクトはフォルダ全体をエクスポートすることもできます。</target>
        </trans-unit>
        <trans-unit id="032b92d931c8c59d0a4e86f8763941d2aa9ef0aa" translate="yes" xml:space="preserve">
          <source>Alternatively one can redirect the child process' output into files:</source>
          <target state="translated">あるいは、子プロセスの出力をファイルにリダイレクトすることもできます。</target>
        </trans-unit>
        <trans-unit id="8e1ff33de702f9eac1d44c0bd87693b9d2f3ea50" translate="yes" xml:space="preserve">
          <source>Alternatively the readable stream could be wrapped with &lt;code&gt;Readable.from()&lt;/code&gt; and then piped via &lt;code&gt;.pipe()&lt;/code&gt;:</source>
          <target state="translated">あるいは、読み取り可能なストリームを &lt;code&gt;Readable.from()&lt;/code&gt; でラップし、次に &lt;code&gt;.pipe()&lt;/code&gt; を介してパイプすることもできます。</target>
        </trans-unit>
        <trans-unit id="a4203d9f48584244e7c38cfdc377eefdd3ba973a" translate="yes" xml:space="preserve">
          <source>Alternatively, &lt;code&gt;callback(null, null)&lt;/code&gt; may be called, indicating that there was no OCSP response.</source>
          <target state="translated">または、 &lt;code&gt;callback(null, null)&lt;/code&gt; が呼び出され、OCSP応答がなかったことを示します。</target>
        </trans-unit>
        <trans-unit id="8fa10054792dc365fab77ce090f9b82515f6ccc7" translate="yes" xml:space="preserve">
          <source>Alternatively, checking for &lt;code&gt;process.versions.icu&lt;/code&gt;, a property defined only when ICU is enabled, works too:</source>
          <target state="translated">または、ICUが有効な場合にのみ定義されるプロパティである &lt;code&gt;process.versions.icu&lt;/code&gt; のチェックも機能します。</target>
        </trans-unit>
        <trans-unit id="a93fbc306e60412b7ea41abf7cf96385b48ba6db" translate="yes" xml:space="preserve">
          <source>Alternatively, it is possible to use a factory pattern to avoid explicitly creating object instances using the JavaScript &lt;code&gt;new&lt;/code&gt; operator:</source>
          <target state="translated">または、JavaScriptの &lt;code&gt;new&lt;/code&gt; 演算子を使用してオブジェクトインスタンスを明示的に作成しないように、ファクトリパターンを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="06e40dc12ad67b480652ebfd643fbcfded5abbb5" translate="yes" xml:space="preserve">
          <source>Alternatively, one could use the &lt;a href=&quot;#readline_event_line&quot;&gt;&lt;code&gt;'line'&lt;/code&gt;&lt;/a&gt; event:</source>
          <target state="translated">あるいは、&lt;a href=&quot;#readline_event_line&quot;&gt; &lt;code&gt;'line'&lt;/code&gt; &lt;/a&gt;イベントを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="8e906838be3b576dd98753001f0e9b6098f591f8" translate="yes" xml:space="preserve">
          <source>Alternatively, opt out of connection pooling by not using an &lt;a href=&quot;#https_class_https_agent&quot;&gt;&lt;code&gt;Agent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">または、&lt;a href=&quot;#https_class_https_agent&quot;&gt; &lt;code&gt;Agent&lt;/code&gt; &lt;/a&gt;を使用しないで接続プールをオプトアウトします。</target>
        </trans-unit>
        <trans-unit id="73a95863bc299028eaf513a42832e7d7996f008c" translate="yes" xml:space="preserve">
          <source>Alternatively, the &lt;code&gt;origins&lt;/code&gt; option may be used when creating a new HTTP/2 server using the &lt;code&gt;http2.createSecureServer()&lt;/code&gt; method:</source>
          <target state="translated">または、 &lt;code&gt;http2.createSecureServer()&lt;/code&gt; メソッドを使用して新しいHTTP / 2サーバーを作成するときに &lt;code&gt;origins&lt;/code&gt; オプションを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="90b233afb21134e4da42a5e3dd935f4f47a3b9ac" translate="yes" xml:space="preserve">
          <source>Alternatively, trace events may be enabled using the &lt;code&gt;trace_events&lt;/code&gt; module:</source>
          <target state="translated">または、 &lt;code&gt;trace_events&lt;/code&gt; モジュールを使用してトレースイベントを有効にすることもできます。</target>
        </trans-unit>
        <trans-unit id="a468eaad8362cc2e9613ecee31f5ff1d42feed0d" translate="yes" xml:space="preserve">
          <source>Although &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt; and the various &lt;code&gt;dns.resolve*()/dns.reverse()&lt;/code&gt; functions have the same goal of associating a network name with a network address (or vice versa), their behavior is quite different. These differences can have subtle but significant consequences on the behavior of Node.js programs.</source>
          <target state="translated">けれども&lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt;と、様々な &lt;code&gt;dns.resolve*()/dns.reverse()&lt;/code&gt; 関数は、ネットワークアドレス（またはその逆）とネットワーク名を関連付ける同じ目標を持って、彼らの行動はかなり異なっています。これらの違いは、Node.jsプログラムの動作に微妙ですが重大な結果をもたらす可能性があります。</target>
        </trans-unit>
        <trans-unit id="c9cabfb08331c0f2305f55aeaeedd3be4ade3c49" translate="yes" xml:space="preserve">
          <source>Although Microsoft specifies &lt;code&gt;%COMSPEC%&lt;/code&gt; must contain the path to &lt;code&gt;'cmd.exe'&lt;/code&gt; in the root environment, child processes are not always subject to the same requirement. Thus, in &lt;code&gt;child_process&lt;/code&gt; functions where a shell can be spawned, &lt;code&gt;'cmd.exe'&lt;/code&gt; is used as a fallback if &lt;code&gt;process.env.ComSpec&lt;/code&gt; is unavailable.</source>
          <target state="translated">Microsoftは、 &lt;code&gt;%COMSPEC%&lt;/code&gt; にルート環境の &lt;code&gt;'cmd.exe'&lt;/code&gt; へのパスを含める必要があると指定していますが、子プロセスは常に同じ要件の対象となるわけではありません。したがって、シェルを生成できる &lt;code&gt;child_process&lt;/code&gt; 関数では、 &lt;code&gt;process.env.ComSpec&lt;/code&gt; が使用できない場合のフォールバックとして &lt;code&gt;'cmd.exe'&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="a00da5ee41b3bd5587ac378140f8f94af678351a" translate="yes" xml:space="preserve">
          <source>Although N-API provides an ABI stability guarantee, other parts of Node.js do not, and any external libraries used from the addon may not. In particular, none of the following APIs provide an ABI stability guarantee across major versions:</source>
          <target state="translated">N-APIはABIの安定性を保証していますが、Node.jsの他の部分は保証しておらず、アドオンから使用される外部ライブラリは保証していない場合があります。特に、以下のAPIは、メジャーバージョン間でのABI安定性の保証を提供していません。</target>
        </trans-unit>
        <trans-unit id="8fcb51dd37e81c50f58ebda6e14d07781aa1330a" translate="yes" xml:space="preserve">
          <source>Although Windows usually treats file names, including file extensions, in a case-insensitive manner, this function does not. For example, &lt;code&gt;C:\\foo.html&lt;/code&gt; and &lt;code&gt;C:\\foo.HTML&lt;/code&gt; refer to the same file, but &lt;code&gt;basename&lt;/code&gt; treats the extension as a case-sensitive string:</source>
          <target state="translated">Although Windows usually treats file names, including file extensions, in a case-insensitive manner, this function does not. For example, &lt;code&gt;C:\\foo.html&lt;/code&gt; and &lt;code&gt;C:\\foo.HTML&lt;/code&gt; refer to the same file, but &lt;code&gt;basename&lt;/code&gt; treats the extension as a case-sensitive string:</target>
        </trans-unit>
        <trans-unit id="15033714dec354224dc58c2cf540bbe10aa90c4e" translate="yes" xml:space="preserve">
          <source>Although a primary use case for the &lt;code&gt;cluster&lt;/code&gt; module is networking, it can also be used for other use cases requiring worker processes.</source>
          <target state="translated">&lt;code&gt;cluster&lt;/code&gt; モジュールの主な使用例はネットワークですが、ワーカープロセスを必要とする他の使用例にも使用できます。</target>
        </trans-unit>
        <trans-unit id="24f8e800ce5b5804c0d1566ef518647c001f6ad3" translate="yes" xml:space="preserve">
          <source>Although named for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain_Name_System&quot;&gt;Domain Name System (DNS)&lt;/a&gt;, it does not always use the DNS protocol for lookups. &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt; uses the operating system facilities to perform name resolution. It may not need to perform any network communication. To perform name resolution the way other applications on the same system do, use &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Although named for the &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain_Name_System&quot;&gt;Domain Name System (DNS)&lt;/a&gt;, it does not always use the DNS protocol for lookups. &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt; uses the operating system facilities to perform name resolution. It may not need to perform any network communication. To perform name resolution the way other applications on the same system do, use &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cb55732ecccfda1ff3e5a5fc5b6b0e650b3730ed" translate="yes" xml:space="preserve">
          <source>Although the CPU is mostly idle while running this script, the value of &lt;code&gt;utilization&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;. This is because the call to &lt;a href=&quot;child_process#child_process_child_process_spawnsync_command_args_options&quot;&gt;&lt;code&gt;child_process.spawnSync()&lt;/code&gt;&lt;/a&gt; blocks the event loop from proceeding.</source>
          <target state="translated">Although the CPU is mostly idle while running this script, the value of &lt;code&gt;utilization&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt; . This is because the call to &lt;a href=&quot;child_process#child_process_child_process_spawnsync_command_args_options&quot;&gt; &lt;code&gt;child_process.spawnSync()&lt;/code&gt; &lt;/a&gt; blocks the event loop from proceeding.</target>
        </trans-unit>
        <trans-unit id="6a11f3e40788bf82c134759724ffb4f5ae0c739a" translate="yes" xml:space="preserve">
          <source>Always returns &lt;code&gt;true&lt;/code&gt;. This may be used to distinguish TLS sockets from regular &lt;code&gt;net.Socket&lt;/code&gt; instances.</source>
          <target state="translated">常に &lt;code&gt;true&lt;/code&gt; を返します。これは、TLSソケットを通常の &lt;code&gt;net.Socket&lt;/code&gt; インスタンスから区別するために使用できます。</target>
        </trans-unit>
        <trans-unit id="104e75a0d5d697bf7eb3d11a0fb5fd3bf5a15d0a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;#https_class_https_agent&quot;&gt;&lt;code&gt;Agent&lt;/code&gt;&lt;/a&gt; object for HTTPS similar to &lt;a href=&quot;http#http_class_http_agent&quot;&gt;&lt;code&gt;http.Agent&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;#https_https_request_options_callback&quot;&gt;&lt;code&gt;https.request()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;a href=&quot;http#http_class_http_agent&quot;&gt; &lt;code&gt;http.Agent&lt;/code&gt; に&lt;/a&gt;類似したHTTPS用の&lt;a href=&quot;#https_class_https_agent&quot;&gt; &lt;code&gt;Agent&lt;/code&gt; &lt;/a&gt;オブジェクト。詳細については、&lt;a href=&quot;#https_https_request_options_callback&quot;&gt; &lt;code&gt;https.request()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9e7c3af6fb5115715fcab1cbf65535eacee60287" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;esm&quot;&gt;ES Module&lt;/a&gt; could not be resolved.</source>
          <target state="translated">アン&lt;a href=&quot;esm&quot;&gt;ESモジュールは&lt;/a&gt;解決できませんでした。</target>
        </trans-unit>
        <trans-unit id="f205ad66c27031860238c4bc7f6a50be9bc9054e" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;esm&quot;&gt;ES Module&lt;/a&gt; loader hook specified &lt;code&gt;format: 'dynamic'&lt;/code&gt; but did not provide a &lt;code&gt;dynamicInstantiate&lt;/code&gt; hook.</source>
          <target state="translated">アン&lt;a href=&quot;esm&quot;&gt;ESモジュール&lt;/a&gt;ローダフックは、指定された &lt;code&gt;format: 'dynamic'&lt;/code&gt; しかし提供されていませんでした &lt;code&gt;dynamicInstantiate&lt;/code&gt; のフックを。</target>
        </trans-unit>
        <trans-unit id="468588a4c1c59198c5c97e4243175b70298b1739" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;globals#globals_class_abortsignal&quot;&gt;&amp;lt;AbortSignal&amp;gt;&lt;/a&gt; can be used to cancel waiting for the event:</source>
          <target state="translated">&lt;a href=&quot;globals#globals_class_abortsignal&quot;&gt;&amp;lt;AbortSignal&amp;gt;&lt;/a&gt;イベントを待ってキャンセルするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="6d2545d0b6c1ae27955f5cab415ba6846acecfa8" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;globals#globals_class_abortsignal&quot;&gt;&amp;lt;AbortSignal&amp;gt;&lt;/a&gt; can be used to cancel waiting on events:</source>
          <target state="translated">&lt;a href=&quot;globals#globals_class_abortsignal&quot;&gt;&amp;lt;AbortSignal&amp;gt;&lt;/a&gt;イベントを待機してキャンセルするために使用することができます。</target>
        </trans-unit>
        <trans-unit id="2a2161e99b82c7b4ab3b44790cd0b80a1b953cf5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Agent&lt;/code&gt; is responsible for managing connection persistence and reuse for HTTP clients. It maintains a queue of pending requests for a given host and port, reusing a single socket connection for each until the queue is empty, at which time the socket is either destroyed or put into a pool where it is kept to be used again for requests to the same host and port. Whether it is destroyed or pooled depends on the &lt;code&gt;keepAlive&lt;/code&gt;&lt;a href=&quot;#http_new_agent_options&quot;&gt;option&lt;/a&gt;.</source>
          <target state="translated">アン &lt;code&gt;Agent&lt;/code&gt; HTTPクライアントの接続の永続性と再利用を管理する責任があります。特定のホストとポートに対する保留中のリクエストのキューを維持し、キューが空になるまでそれぞれの単一のソケット接続を再利用します。キューが空になると、ソケットは破棄されるか、リクエストに再び使用できるようにプールに入れられます。同じホストとポートに。破棄されるかプールされるかは、 &lt;code&gt;keepAlive&lt;/code&gt; &lt;a href=&quot;#http_new_agent_options&quot;&gt;オプションに&lt;/a&gt;依存します。</target>
        </trans-unit>
        <trans-unit id="a39573610d6774edd65e8dbf855de129a38c1d09" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Array&lt;/code&gt; with matching entries for the completion.</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; 完成のために一致するエントリを有します。</target>
        </trans-unit>
        <trans-unit id="24675aed139e5323c21b355ae511fdc56213c811" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ArrayBuffer&lt;/code&gt; can be marked with &lt;a href=&quot;#worker_threads_worker_markasuntransferable_object&quot;&gt;&lt;code&gt;markAsUntransferable()&lt;/code&gt;&lt;/a&gt; to indicate that it should always be cloned and never transferred.</source>
          <target state="translated">An &lt;code&gt;ArrayBuffer&lt;/code&gt; can be marked with &lt;a href=&quot;#worker_threads_worker_markasuntransferable_object&quot;&gt; &lt;code&gt;markAsUntransferable()&lt;/code&gt; &lt;/a&gt; to indicate that it should always be cloned and never transferred.</target>
        </trans-unit>
        <trans-unit id="dd6316e5d6fd64ab732d9f5e6c9a65674dadc6ef" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AtExit&lt;/code&gt; hook is a function that is invoked after the Node.js event loop has ended but before the JavaScript VM is terminated and Node.js shuts down. &lt;code&gt;AtExit&lt;/code&gt; hooks are registered using the &lt;code&gt;node::AtExit&lt;/code&gt; API.</source>
          <target state="translated">アン &lt;code&gt;AtExit&lt;/code&gt; フックは、Node.jsのイベントループが終了した後でJavaScriptのVMが終了する前に、とのNode.jsシャットダウンして呼び出される関数です。 &lt;code&gt;AtExit&lt;/code&gt; フックは、 &lt;code&gt;node::AtExit&lt;/code&gt; API を使用して登録されます。</target>
        </trans-unit>
        <trans-unit id="d1baed9e2495ab7225c62204070c6656b5185f0d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Http2Stream&lt;/code&gt; was destroyed before any data was transmitted to the connected peer.</source>
          <target state="translated">&lt;code&gt;Http2Stream&lt;/code&gt; は、任意のデータが接続されたピアに送信される前に破壊されました。</target>
        </trans-unit>
        <trans-unit id="37107a3217b41d849cf17b622b19ff57a2ce5a4d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IncomingMessage&lt;/code&gt; object is created by &lt;a href=&quot;#http_class_http_server&quot;&gt;&lt;code&gt;http.Server&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#http_class_http_clientrequest&quot;&gt;&lt;code&gt;http.ClientRequest&lt;/code&gt;&lt;/a&gt; and passed as the first argument to the &lt;a href=&quot;#http_event_request&quot;&gt;&lt;code&gt;'request'&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#http_event_response&quot;&gt;&lt;code&gt;'response'&lt;/code&gt;&lt;/a&gt; event respectively. It may be used to access response status, headers and data.</source>
          <target state="translated">アン &lt;code&gt;IncomingMessage&lt;/code&gt; のオブジェクトにより作成され&lt;a href=&quot;#http_class_http_server&quot;&gt; &lt;code&gt;http.Server&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#http_class_http_clientrequest&quot;&gt; &lt;code&gt;http.ClientRequest&lt;/code&gt; &lt;/a&gt;との最初の引数として渡された&lt;a href=&quot;#http_event_request&quot;&gt; &lt;code&gt;'request'&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#http_event_response&quot;&gt; &lt;code&gt;'response'&lt;/code&gt; &lt;/a&gt;それぞれのイベント。応答ステータス、ヘッダー、データへのアクセスに使用できます。</target>
        </trans-unit>
        <trans-unit id="f6470d3f775a0fe606e54e2ea2ddd01285a40da6" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RST_STREAM&lt;/code&gt; frame for the stream is received by the connected peer, and (for client streams only) pending data has been read.</source>
          <target state="translated">An &lt;code&gt;RST_STREAM&lt;/code&gt; frame for the stream is received by the connected peer, and (for client streams only) pending data has been read.</target>
        </trans-unit>
        <trans-unit id="68ab3254f62b898f69829acb33905692f91383c1" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RST_STREAM&lt;/code&gt; frame for the stream is received by the connected peer, and pending data has been read.</source>
          <target state="translated">ストリームの &lt;code&gt;RST_STREAM&lt;/code&gt; フレームが接続されたピアによって受信され、保留中のデータが読み取られました。</target>
        </trans-unit>
        <trans-unit id="77c771287c3e2b79411cf39a4b709d76efae38e4" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;idle&lt;/code&gt; time that does not increase does not indicate that the worker is stuck in bootstrap. The following examples shows how the worker's entire lifetime never accumulates any &lt;code&gt;idle&lt;/code&gt; time, but is still be able to process messages.</source>
          <target state="translated">&lt;code&gt;idle&lt;/code&gt; 増加しない時は、労働者が、ブートストラップで立ち往生していることを示すものではありません。次の例は、ワーカーのライフタイム全体が &lt;code&gt;idle&lt;/code&gt; 時間を累積することはなく、メッセージを処理できることを示しています。</target>
        </trans-unit>
        <trans-unit id="87dbddb959fc3437e6d8424381669c6ef1542ec2" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;import&lt;/code&gt; statement can reference an ES module or a CommonJS module. &lt;code&gt;import&lt;/code&gt; statements are permitted only in ES modules, but dynamic &lt;a href=&quot;#esm_import_expressions&quot;&gt;&lt;code&gt;import()&lt;/code&gt;&lt;/a&gt; expressions are supported in CommonJS for loading ES modules.</source>
          <target state="translated">&lt;code&gt;import&lt;/code&gt; 文は、ESモジュールまたはCommonJSモジュールを参照することができます。 &lt;code&gt;import&lt;/code&gt; ステートメントはESモジュールでのみ許可されますが、動的&lt;a href=&quot;#esm_import_expressions&quot;&gt; &lt;code&gt;import()&lt;/code&gt; &lt;/a&gt;式はESモジュールをロードするためにCommonJSでサポートされています。</target>
        </trans-unit>
        <trans-unit id="628c734beb1966bc4d0f71800dae45ca6fa617bc" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;import&lt;/code&gt; statement can reference an ES module or a CommonJS module. &lt;code&gt;import&lt;/code&gt; statements are permitted only in ES modules. For similar functionality in CommonJS, see &lt;a href=&quot;#esm_import_expressions&quot;&gt;&lt;code&gt;import()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">An &lt;code&gt;import&lt;/code&gt; statement can reference an ES module or a CommonJS module. &lt;code&gt;import&lt;/code&gt; statements are permitted only in ES modules. For similar functionality in CommonJS, see &lt;a href=&quot;#esm_import_expressions&quot;&gt; &lt;code&gt;import()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f47dc3925e3563de57c9b5a61a99a9319536419a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;import&lt;/code&gt; statement can reference an ES module, a CommonJS module, or JSON. Other file types such as Native modules are not supported. For those, use &lt;a href=&quot;modules#modules_module_createrequire_filename&quot;&gt;&lt;code&gt;module.createRequire()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;import&lt;/code&gt; 文は、ESモジュール、CommonJSモジュール、またはJSONを参照することができます。ネイティブモジュールなどの他のファイルタイプはサポートされていません。それらについては、&lt;a href=&quot;modules#modules_module_createrequire_filename&quot;&gt; &lt;code&gt;module.createRequire()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="1d437576040f0ce5a31b14adf804f9f837050ca4" translate="yes" xml:space="preserve">
          <source>An API function expecting a port &amp;gt;= 0 and &amp;lt; 65536 received an invalid value.</source>
          <target state="translated">ポート&amp;gt; = 0および&amp;lt;65536を予期しているAPI関数が無効な値を受け取りました。</target>
        </trans-unit>
        <trans-unit id="9b6e5bed9a0b047dc420e33fa96e7cbe5ccbee5e" translate="yes" xml:space="preserve">
          <source>An API function expecting a socket type (&lt;code&gt;udp4&lt;/code&gt; or &lt;code&gt;udp6&lt;/code&gt;) received an invalid value.</source>
          <target state="translated">ソケットタイプ（ &lt;code&gt;udp4&lt;/code&gt; または &lt;code&gt;udp6&lt;/code&gt; ）を予期するAPI関数が無効な値を受け取りました。</target>
        </trans-unit>
        <trans-unit id="00c0a1251c74aa9d282847335e1deaba96a1512a" translate="yes" xml:space="preserve">
          <source>An API was called on the main thread that can only be used from the worker thread.</source>
          <target state="translated">ワーカースレッドからしか使えないAPIがメインスレッドで呼び出されました。</target>
        </trans-unit>
        <trans-unit id="427e58a1730eb1e46e8dde4771ebe75ad5ea519f" translate="yes" xml:space="preserve">
          <source>An End-of-Life deprecation is used when functionality is or will soon be removed from Node.js.</source>
          <target state="translated">End-of-Lifeは、Node.jsから機能が削除されるか、または間もなく削除される場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="725528d8eb773ac2fe91f649463f35470635fa40" translate="yes" xml:space="preserve">
          <source>An Example Counting Stream</source>
          <target state="translated">カウントストリームの例</target>
        </trans-unit>
        <trans-unit id="641ff4c42013bc3ddfef4bfad7532a3a41e4a54c" translate="yes" xml:space="preserve">
          <source>An Example Duplex Stream</source>
          <target state="translated">二重ストリームの例</target>
        </trans-unit>
        <trans-unit id="3efcf8baf7bf5cef2a0d5ea03df68d07d9211cdd" translate="yes" xml:space="preserve">
          <source>An Example Writable Stream</source>
          <target state="translated">書き込み可能なストリームの例</target>
        </trans-unit>
        <trans-unit id="e89383f974a4239bed31fc968b739d94be92f795" translate="yes" xml:space="preserve">
          <source>An HTTP/2 CONNECT client:</source>
          <target state="translated">HTTP/2 CONNECT クライアント。</target>
        </trans-unit>
        <trans-unit id="addea5a5fea8836922044c04ff09e0563846d686" translate="yes" xml:space="preserve">
          <source>An HTTP/2 CONNECT proxy:</source>
          <target state="translated">HTTP/2 CONNECT プロキシ。</target>
        </trans-unit>
        <trans-unit id="284523a3fd50dd375169def192742cf413be99a1" translate="yes" xml:space="preserve">
          <source>An HTTP/2 ping was canceled.</source>
          <target state="translated">HTTP/2 pingがキャンセルされました。</target>
        </trans-unit>
        <trans-unit id="3d53b1efe17979ff0b8b40f08c56b1070a61f2e8" translate="yes" xml:space="preserve">
          <source>An HTTP/2 pseudo-header has been used inappropriately. Pseudo-headers are header key names that begin with the &lt;code&gt;:&lt;/code&gt; prefix.</source>
          <target state="translated">HTTP / 2疑似ヘッダーが不適切に使用されています。疑似ヘッダーは、 &lt;code&gt;:&lt;/code&gt; プレフィックスで始まるヘッダーキー名です。</target>
        </trans-unit>
        <trans-unit id="00f320791d792e321d7d32dbe3648f6e09e49522" translate="yes" xml:space="preserve">
          <source>An IP address is not valid.</source>
          <target state="translated">IPアドレスは有効ではありません。</target>
        </trans-unit>
        <trans-unit id="b5bea90b7c185cade802f1fb791db55af93ec8fa" translate="yes" xml:space="preserve">
          <source>An action was performed on an &lt;code&gt;Http2Session&lt;/code&gt; object that had already been destroyed.</source>
          <target state="translated">すでに破棄されている &lt;code&gt;Http2Session&lt;/code&gt; オブジェクトに対してアクションが実行されました。</target>
        </trans-unit>
        <trans-unit id="1ad2fdf10bcf31dafa16fd8ffc70fb3e10162715" translate="yes" xml:space="preserve">
          <source>An additional collection of bytes that will not be encrypted, but will be bound to the generated ciphertext.</source>
          <target state="translated">暗号化されず、生成された暗号文にバインドされるバイトの追加コレクション。</target>
        </trans-unit>
        <trans-unit id="7a8afebe17eaf4a51956848feec9d004a74ea8c3" translate="yes" xml:space="preserve">
          <source>An additional headers was specified after an HTTP/2 response was initiated.</source>
          <target state="translated">HTTP/2 レスポンスが開始された後、追加のヘッダが指定されました。</target>
        </trans-unit>
        <trans-unit id="d02aed728d3919c21723edde3a5a1acf32a09d9e" translate="yes" xml:space="preserve">
          <source>An agent may also be used for an individual request. By providing &lt;code&gt;{agent: false}&lt;/code&gt; as an option to the &lt;code&gt;http.get()&lt;/code&gt; or &lt;code&gt;http.request()&lt;/code&gt; functions, a one-time use &lt;code&gt;Agent&lt;/code&gt; with default options will be used for the client connection.</source>
          <target state="translated">エージェントは、個別のリクエストにも使用できます。提供することにより &lt;code&gt;{agent: false}&lt;/code&gt; にオプションとして &lt;code&gt;http.get()&lt;/code&gt; または &lt;code&gt;http.request()&lt;/code&gt; 関数、1回の使用 &lt;code&gt;Agent&lt;/code&gt; デフォルトのオプションでは、クライアント接続のために使用されます。</target>
        </trans-unit>
        <trans-unit id="d2520fb84e175b757f5ddfcec6d02b53730959db" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt;&lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt; &lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt; &lt;/a&gt;のエイリアス。</target>
        </trans-unit>
        <trans-unit id="eafb46ad82099be5e997db94598d6a1d9f8b3881" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#console_console_group_label&quot;&gt;&lt;code&gt;console.group()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#console_console_group_label&quot;&gt; &lt;code&gt;console.group()&lt;/code&gt; &lt;/a&gt;のエイリアス。</target>
        </trans-unit>
        <trans-unit id="c4d9e33deafd6527623cca6c051a8e209a4d0b50" translate="yes" xml:space="preserve">
          <source>An alias for &lt;a href=&quot;#crypto_crypto_getdiffiehellman_groupname&quot;&gt;&lt;code&gt;crypto.getDiffieHellman()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#crypto_crypto_getdiffiehellman_groupname&quot;&gt; &lt;code&gt;crypto.getDiffieHellman()&lt;/code&gt; &lt;/a&gt;のエイリアス</target>
        </trans-unit>
        <trans-unit id="efb65bc8e0c882e7d399d1a82a084be0a597df36" translate="yes" xml:space="preserve">
          <source>An alias of &lt;a href=&quot;#assert_assert_deepstrictequal_actual_expected_message&quot;&gt;&lt;code&gt;assert.deepStrictEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#assert_assert_deepstrictequal_actual_expected_message&quot;&gt; &lt;code&gt;assert.deepStrictEqual()&lt;/code&gt; &lt;/a&gt;のエイリアス。</target>
        </trans-unit>
        <trans-unit id="ca6a6a20f550988eda03158c8ae37a53d24c3686" translate="yes" xml:space="preserve">
          <source>An alias of &lt;a href=&quot;#assert_assert_notdeepstrictequal_actual_expected_message&quot;&gt;&lt;code&gt;assert.notDeepStrictEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#assert_assert_notdeepstrictequal_actual_expected_message&quot;&gt; &lt;code&gt;assert.notDeepStrictEqual()&lt;/code&gt; &lt;/a&gt;のエイリアス。</target>
        </trans-unit>
        <trans-unit id="07a6baf0f1044963d325036db542fdc23b2d7f90" translate="yes" xml:space="preserve">
          <source>An alias of &lt;a href=&quot;#assert_assert_notstrictequal_actual_expected_message&quot;&gt;&lt;code&gt;assert.notStrictEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#assert_assert_notstrictequal_actual_expected_message&quot;&gt; &lt;code&gt;assert.notStrictEqual()&lt;/code&gt; &lt;/a&gt;のエイリアス。</target>
        </trans-unit>
        <trans-unit id="bf5090ac8cfc101253613454a1e9394f591e59b4" translate="yes" xml:space="preserve">
          <source>An alias of &lt;a href=&quot;#assert_assert_ok_value_message&quot;&gt;&lt;code&gt;assert.ok()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#assert_assert_ok_value_message&quot;&gt; &lt;code&gt;assert.ok()&lt;/code&gt; &lt;/a&gt;のエイリアス。</target>
        </trans-unit>
        <trans-unit id="71eb4acfb9794a2c4bc5cbfa2f1ff7d27bd0f6c1" translate="yes" xml:space="preserve">
          <source>An alias of &lt;a href=&quot;#assert_assert_strictequal_actual_expected_message&quot;&gt;&lt;code&gt;assert.strictEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#assert_assert_strictequal_actual_expected_message&quot;&gt; &lt;code&gt;assert.strictEqual()&lt;/code&gt; &lt;/a&gt;のエイリアス。</target>
        </trans-unit>
        <trans-unit id="d72cff970f6c5966eee44fa3246c5acefe640f5f" translate="yes" xml:space="preserve">
          <source>An application may need to ship patched versions of modules or to prevent modules from allowing all modules access to all other modules. Redirection can be used by intercepting attempts to load the modules wishing to be replaced.</source>
          <target state="translated">アプリケーションは、パッチを当てたバージョンのモジュールを出荷したり、すべてのモジュールが他のすべてのモジュールへのアクセスを許可しないようにする必要があるかもしれません。リダイレクションは、置き換えを希望するモジュールをロードしようとするのを妨害することで使用することができます。</target>
        </trans-unit>
        <trans-unit id="368816f55363a5412010acd0391b640c0a3db56e" translate="yes" xml:space="preserve">
          <source>An arbitrary JavaScript value that contains a clone of the data passed to this thread&amp;rsquo;s &lt;code&gt;Worker&lt;/code&gt; constructor.</source>
          <target state="translated">このスレッドの &lt;code&gt;Worker&lt;/code&gt; コンストラクターに渡されたデータのクローンを含む任意のJavaScript値。</target>
        </trans-unit>
        <trans-unit id="18cf0c00987c2ce7317636687b5e64a5a8b9c9d6" translate="yes" xml:space="preserve">
          <source>An argument of the wrong type was passed to a Node.js API.</source>
          <target state="translated">間違った型の引数がNode.js APIに渡されました。</target>
        </trans-unit>
        <trans-unit id="2221973144b43073378c8b5918deba562313d187" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;QuicEndpoint&lt;/code&gt; instances associated with the &lt;code&gt;QuicSocket&lt;/code&gt;.</source>
          <target state="translated">アレイ &lt;code&gt;QuicEndpoint&lt;/code&gt; に関連付けられたインスタンス &lt;code&gt;QuicSocket&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6cdf536ad738868b1da4db7e35e8d3396103a63f" translate="yes" xml:space="preserve">
          <source>An array of errors that can give context to where in the OpenSSL library an error originates from.</source>
          <target state="translated">OpenSSL ライブラリのどこでエラーが発生したかを示すエラーの配列。</target>
        </trans-unit>
        <trans-unit id="2072ac5355bcbdc231998b0f349a0f953b09cd49" translate="yes" xml:space="preserve">
          <source>An array of objects containing the outbound informational (additional) headers sent for this &lt;code&gt;Http2Stream&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Http2Stream&lt;/code&gt; に送信される送信情報（追加）ヘッダーを含むオブジェクトの配列。</target>
        </trans-unit>
        <trans-unit id="e03a40dd936e5e477beb4c508e62cf3bafcc4d4d" translate="yes" xml:space="preserve">
          <source>An array of strings identifying the operations for which the key may be used.</source>
          <target state="translated">キーが使われる可能性のある操作を指定する文字列の配列。</target>
        </trans-unit>
        <trans-unit id="689b35b5f80d9e064ad369511e844b99a199bf2b" translate="yes" xml:space="preserve">
          <source>An array of supported digest functions can be retrieved using &lt;a href=&quot;#crypto_crypto_gethashes&quot;&gt;&lt;code&gt;crypto.getHashes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サポートされているダイジェスト関数の配列は、&lt;a href=&quot;#crypto_crypto_gethashes&quot;&gt; &lt;code&gt;crypto.getHashes()&lt;/code&gt; &lt;/a&gt;を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="ffca46a0600162ece58ba4ef572e18888ef79322" translate="yes" xml:space="preserve">
          <source>An array of timers and event emitters that have been explicitly added to the domain.</source>
          <target state="translated">ドメインに明示的に追加されたタイマーとイベントエミッタの配列。</target>
        </trans-unit>
        <trans-unit id="58fa9af2502ac6e0005e1c2a9ed3b2f7e25beeb6" translate="yes" xml:space="preserve">
          <source>An artificial error object used to capture the call stack for diagnostic reports.</source>
          <target state="translated">診断レポートのためにコールスタックをキャプチャするために使用される人工的なエラーオブジェクト。</target>
        </trans-unit>
        <trans-unit id="138dc70f72f5e4b19ddc75d15e3dec70649846d0" translate="yes" xml:space="preserve">
          <source>An asynchronous resource represents an object with an associated callback. This callback may be called multiple times, for example, the &lt;code&gt;'connection'&lt;/code&gt; event in &lt;code&gt;net.createServer()&lt;/code&gt;, or just a single time like in &lt;code&gt;fs.open()&lt;/code&gt;. A resource can also be closed before the callback is called. &lt;code&gt;AsyncHook&lt;/code&gt; does not explicitly distinguish between these different cases but will represent them as the abstract concept that is a resource.</source>
          <target state="translated">非同期リソースは、関連付けられたコールバックを持つオブジェクトを表します。このコールバックは、 &lt;code&gt;net.createServer()&lt;/code&gt; の &lt;code&gt;'connection'&lt;/code&gt; イベントなど、複数回、または &lt;code&gt;fs.open()&lt;/code&gt; のように1回だけ呼び出すことができます。リソースは、コールバックが呼び出される前に閉じることもできます。 &lt;code&gt;AsyncHook&lt;/code&gt; はこれらの異なるケースを明確に区別しませんが、リソースである抽象的な概念としてそれらを表します。</target>
        </trans-unit>
        <trans-unit id="2833db285e3e97eb4c46f2e3d597af5f8bb630f2" translate="yes" xml:space="preserve">
          <source>An attempt has been made to create a &lt;code&gt;Buffer&lt;/code&gt; larger than the maximum allowed size.</source>
          <target state="translated">最大許容サイズより大きい &lt;code&gt;Buffer&lt;/code&gt; を作成しようとしました。</target>
        </trans-unit>
        <trans-unit id="11314e0af83acb0bcf63df2f686ab81b96699948" translate="yes" xml:space="preserve">
          <source>An attempt has been made to create a string larger than the maximum allowed size.</source>
          <target state="translated">最大許容サイズよりも大きい文字列を作成しようとしました。</target>
        </trans-unit>
        <trans-unit id="a09596a28649318f99b7fa45d0e3fcdc869800b5" translate="yes" xml:space="preserve">
          <source>An attempt has been made to create a string longer than the maximum allowed length.</source>
          <target state="translated">許可された最大長よりも長い文字列を作成しようとしました。</target>
        </trans-unit>
        <trans-unit id="090c39fe6b04b6dbd027aa5225fcf81dcc22e8a9" translate="yes" xml:space="preserve">
          <source>An attempt has been made to read a file whose size is larger than the maximum allowed size for a &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Buffer&lt;/code&gt; に許可されている最大サイズより大きいサイズのファイルを読み取ろうとしました。</target>
        </trans-unit>
        <trans-unit id="96d57780bbeaf6852590f342d825a6d717c48cb4" translate="yes" xml:space="preserve">
          <source>An attempt resume a &lt;code&gt;QuicClientSession&lt;/code&gt; using a remembered TLS session ticket failed because the session ticket was invalid.</source>
          <target state="translated">セッションチケットが無効だったため、記憶されたTLSセッションチケットを使用して &lt;code&gt;QuicClientSession&lt;/code&gt; を再開しようとして失敗しました。</target>
        </trans-unit>
        <trans-unit id="6c1cb1dc49072f3c056ade6f192ff72db43c4484" translate="yes" xml:space="preserve">
          <source>An attempt to &lt;code&gt;require&lt;/code&gt; the above &lt;code&gt;es-module-package&lt;/code&gt; would attempt to load &lt;code&gt;./node_modules/es-module-package/src/index.js&lt;/code&gt; as CommonJS, which would throw an error as Node.js would not be able to parse the &lt;code&gt;export&lt;/code&gt; statement in CommonJS.</source>
          <target state="translated">上記の &lt;code&gt;es-module-package&lt;/code&gt; を &lt;code&gt;require&lt;/code&gt; しようとすると、。 &lt;code&gt;./node_modules/es-module-package/src/index.js&lt;/code&gt; / es-module-package / src / index.jsがCommonJSとしてロードされ、Node.jsが &lt;code&gt;export&lt;/code&gt; を解析できないためエラーがスローされます。CommonJSのステートメント。</target>
        </trans-unit>
        <trans-unit id="630256617dea3802a1898c35fdcf8ddc9922bac7" translate="yes" xml:space="preserve">
          <source>An attempt to invoke an unsupported crypto operation was made.</source>
          <target state="translated">サポートされていないcrypto操作が呼び出されました。</target>
        </trans-unit>
        <trans-unit id="8e91400629c51f8857a5c6440951c1e3902880b4" translate="yes" xml:space="preserve">
          <source>An attempt to resume a &lt;code&gt;QuicClientSession&lt;/code&gt; using remembered remote transport parameters failed because the transport parameters were invalid.</source>
          <target state="translated">トランスポートパラメータが無効だったため、記憶されているリモートトランスポートパラメータを使用して &lt;code&gt;QuicClientSession&lt;/code&gt; を再開しようとして失敗しました。</target>
        </trans-unit>
        <trans-unit id="b5d953ae8ee93e2f472c76588eeff270ff1f85ed" translate="yes" xml:space="preserve">
          <source>An attempt was made to &lt;code&gt;require()&lt;/code&gt; an &lt;a href=&quot;esm&quot;&gt;ES Module&lt;/a&gt;.</source>
          <target state="translated">試みはしました &lt;code&gt;require()&lt;/code&gt; &lt;a href=&quot;esm&quot;&gt;ESモジュール&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d1d72184530a656fdccd1381c470bfe7b9a60855" translate="yes" xml:space="preserve">
          <source>An attempt was made to add more headers after the headers had already been sent.</source>
          <target state="translated">すでにヘッダが送信された後に、さらにヘッダを追加しようとしました。</target>
        </trans-unit>
        <trans-unit id="0aef3ca6688fdcd5a6abf0034aded36436d1594a" translate="yes" xml:space="preserve">
          <source>An attempt was made to allocate memory (usually in the C++ layer) but it failed.</source>
          <target state="translated">メモリの割り当てを試みましたが(通常は C++レイヤ)、失敗しました。</target>
        </trans-unit>
        <trans-unit id="94b8a515e6d0a8e5d1fd5611d9398b4c7daee2fd" translate="yes" xml:space="preserve">
          <source>An attempt was made to bind a socket that has already been bound.</source>
          <target state="translated">既にバインドされているソケットをバインドしようとしました。</target>
        </trans-unit>
        <trans-unit id="7a3d8cbf689a1ea17719779588db7ec5823968cc" translate="yes" xml:space="preserve">
          <source>An attempt was made to call &lt;a href=&quot;stream#stream_readable_pipe_destination_options&quot;&gt;&lt;code&gt;stream.pipe()&lt;/code&gt;&lt;/a&gt; on a &lt;a href=&quot;stream#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; stream.</source>
          <target state="translated">試みは、コールに行われた&lt;a href=&quot;stream#stream_readable_pipe_destination_options&quot;&gt; &lt;code&gt;stream.pipe()&lt;/code&gt; &lt;/a&gt;で&lt;a href=&quot;stream#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt;ストリーム。</target>
        </trans-unit>
        <trans-unit id="ae7bcf236212820634cc8aa2e0590dc65a75b1ec" translate="yes" xml:space="preserve">
          <source>An attempt was made to call &lt;a href=&quot;stream#stream_readable_push_chunk_encoding&quot;&gt;&lt;code&gt;stream.push()&lt;/code&gt;&lt;/a&gt; after a &lt;code&gt;null&lt;/code&gt;(EOF) had been pushed to the stream.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; （EOF）がストリームにプッシュされた後で&lt;a href=&quot;stream#stream_readable_push_chunk_encoding&quot;&gt; &lt;code&gt;stream.push()&lt;/code&gt; &lt;/a&gt;を呼び出そうとしました。</target>
        </trans-unit>
        <trans-unit id="f64bf355b077035b7adccd78c55caaea62cff40a" translate="yes" xml:space="preserve">
          <source>An attempt was made to call &lt;a href=&quot;stream#stream_readable_unshift_chunk_encoding&quot;&gt;&lt;code&gt;stream.unshift()&lt;/code&gt;&lt;/a&gt; after the &lt;code&gt;'end'&lt;/code&gt; event was emitted.</source>
          <target state="translated">&lt;code&gt;'end'&lt;/code&gt; イベントが発生した後、&lt;a href=&quot;stream#stream_readable_unshift_chunk_encoding&quot;&gt; &lt;code&gt;stream.unshift()&lt;/code&gt; &lt;/a&gt;を呼び出そうとしました。</target>
        </trans-unit>
        <trans-unit id="3717b7ba58eb9fe0851743f1720f213f5417fd82" translate="yes" xml:space="preserve">
          <source>An attempt was made to call &lt;a href=&quot;stream#stream_writable_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;stream.write()&lt;/code&gt;&lt;/a&gt; after &lt;code&gt;stream.end()&lt;/code&gt; has been called.</source>
          <target state="translated">試みは、コールに行われた&lt;a href=&quot;stream#stream_writable_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;stream.write()&lt;/code&gt; &lt;/a&gt;の後 &lt;code&gt;stream.end()&lt;/code&gt; と呼ばれてきました。</target>
        </trans-unit>
        <trans-unit id="d6bd8744ec6a998f776bbb0497bb8464cf1914a0" translate="yes" xml:space="preserve">
          <source>An attempt was made to call &lt;a href=&quot;stream#stream_writable_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;stream.write()&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;null&lt;/code&gt; chunk.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; チャンクで&lt;a href=&quot;stream#stream_writable_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;stream.write()&lt;/code&gt; &lt;/a&gt;を呼び出そうとしました。</target>
        </trans-unit>
        <trans-unit id="5eae4e8a0fc9875cafae6760b9106a1f9cbcdda2" translate="yes" xml:space="preserve">
          <source>An attempt was made to close the &lt;code&gt;process.stderr&lt;/code&gt; stream. By design, Node.js does not allow &lt;code&gt;stdout&lt;/code&gt; or &lt;code&gt;stderr&lt;/code&gt; streams to be closed by user code.</source>
          <target state="translated">&lt;code&gt;process.stderr&lt;/code&gt; ストリームを閉じようとしました。設計上、Node.jsでは &lt;code&gt;stdout&lt;/code&gt; または &lt;code&gt;stderr&lt;/code&gt; ストリームをユーザーコードで閉じることができません。</target>
        </trans-unit>
        <trans-unit id="c073e49efda7449e4a8d4cac06da260fb76c650d" translate="yes" xml:space="preserve">
          <source>An attempt was made to close the &lt;code&gt;process.stdout&lt;/code&gt; stream. By design, Node.js does not allow &lt;code&gt;stdout&lt;/code&gt; or &lt;code&gt;stderr&lt;/code&gt; streams to be closed by user code.</source>
          <target state="translated">&lt;code&gt;process.stdout&lt;/code&gt; ストリームを閉じようとしました。設計上、Node.jsでは &lt;code&gt;stdout&lt;/code&gt; または &lt;code&gt;stderr&lt;/code&gt; ストリームをユーザーコードで閉じることができません。</target>
        </trans-unit>
        <trans-unit id="dd5edaf940158b00303e893908f89f4a65645052" translate="yes" xml:space="preserve">
          <source>An attempt was made to connect a &lt;code&gt;Http2Session&lt;/code&gt; object to a &lt;code&gt;net.Socket&lt;/code&gt; or &lt;code&gt;tls.TLSSocket&lt;/code&gt; that had already been bound to another &lt;code&gt;Http2Session&lt;/code&gt; object.</source>
          <target state="translated">試みが接続するためになされた &lt;code&gt;Http2Session&lt;/code&gt; にオブジェクト &lt;code&gt;net.Socket&lt;/code&gt; または &lt;code&gt;tls.TLSSocket&lt;/code&gt; すでに別にバインドされていた &lt;code&gt;Http2Session&lt;/code&gt; のオブジェクトを。</target>
        </trans-unit>
        <trans-unit id="f2b9d36028970855e4c9b80a62fa248b85acb752" translate="yes" xml:space="preserve">
          <source>An attempt was made to create a Node.js &lt;code&gt;Buffer&lt;/code&gt; instance from addon or embedder code, while in a JS engine Context that is not associated with a Node.js instance. The data passed to the &lt;code&gt;Buffer&lt;/code&gt; method will have been released by the time the method returns.</source>
          <target state="translated">Node.jsインスタンスに関連付けられていないJSエンジンコンテキストで、アドオンまたは埋め込みコードからNode.js &lt;code&gt;Buffer&lt;/code&gt; インスタンスを作成しようとしました。 &lt;code&gt;Buffer&lt;/code&gt; メソッドに渡されたデータは、メソッドが戻るまでに解放されます。</target>
        </trans-unit>
        <trans-unit id="221a7bc963c1d88ce0f240d01d98bd33d7b90a4c" translate="yes" xml:space="preserve">
          <source>An attempt was made to create a child Node.js process using more than one IPC communication channel. See the documentation for the &lt;a href=&quot;child_process&quot;&gt;&lt;code&gt;child_process&lt;/code&gt;&lt;/a&gt; module for more information.</source>
          <target state="translated">複数のIPC通信チャネルを使用して子Node.jsプロセスを作成しようとしました。詳細については、&lt;a href=&quot;child_process&quot;&gt; &lt;code&gt;child_process&lt;/code&gt; &lt;/a&gt;モジュールのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="d7061bac40769f9cf27c501e961b72b96f4e5cc1" translate="yes" xml:space="preserve">
          <source>An attempt was made to create a push stream, which had been disabled by the client.</source>
          <target state="translated">プッシュストリームを作成しようとしましたが、クライアントによって無効化されていました。</target>
        </trans-unit>
        <trans-unit id="0fb687fe2aab131f5ab02b2d239f2121ac82904c" translate="yes" xml:space="preserve">
          <source>An attempt was made to directly manipulate (read, write, pause, resume, etc.) a socket attached to an &lt;code&gt;Http2Session&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Http2Session&lt;/code&gt; に接続されたソケットを直接操作（読み取り、書き込み、一時停止、再開など）しようとしました。</target>
        </trans-unit>
        <trans-unit id="a5d115806eb6f1d8b11759e547f04248d97a42db" translate="yes" xml:space="preserve">
          <source>An attempt was made to disconnect an IPC communication channel that was already disconnected. See the documentation for the &lt;a href=&quot;child_process&quot;&gt;&lt;code&gt;child_process&lt;/code&gt;&lt;/a&gt; module for more information.</source>
          <target state="translated">すでに切断されているIPC通信チャネルを切断しようとしました。詳細については、&lt;a href=&quot;child_process&quot;&gt; &lt;code&gt;child_process&lt;/code&gt; &lt;/a&gt;モジュールのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="fa5aa3219563ef3bf4f7158882c643f10825232c" translate="yes" xml:space="preserve">
          <source>An attempt was made to enable or disable FIPS mode, but FIPS mode was not available.</source>
          <target state="translated">FIPSモードを有効または無効にしようとしましたが、FIPSモードは使用できませんでした。</target>
        </trans-unit>
        <trans-unit id="d37181181b8e8fec72f2fde4222a810822974798" translate="yes" xml:space="preserve">
          <source>An attempt was made to initiate a new push stream from within a push stream. Nested push streams are not permitted.</source>
          <target state="translated">プッシュストリーム内から新しいプッシュストリームを開始しようとしました。入れ子になったプッシュストリームは許可されていません。</target>
        </trans-unit>
        <trans-unit id="a70c3d061ab6a283d45fac39f6fd2f75b36a2761" translate="yes" xml:space="preserve">
          <source>An attempt was made to initiate operations on a watcher returned by &lt;code&gt;fs.watch()&lt;/code&gt; that has not yet been started.</source>
          <target state="translated">まだ開始されていない &lt;code&gt;fs.watch()&lt;/code&gt; によって返されたウォッチャーで操作を開始しようとしました。</target>
        </trans-unit>
        <trans-unit id="e3e1be8f1dcc3264a9ffaf35261f1b6c16243b7e" translate="yes" xml:space="preserve">
          <source>An attempt was made to issue Server Name Indication from a TLS server-side socket, which is only valid from a client.</source>
          <target state="translated">クライアントからのみ有効なTLSサーバサイドソケットからサーバ名表示を発行しようとしました。</target>
        </trans-unit>
        <trans-unit id="c74c198d1e7a19ccc916f60f97790a27f99f2fcc" translate="yes" xml:space="preserve">
          <source>An attempt was made to launch a Node.js process with an unknown &lt;code&gt;stdin&lt;/code&gt; file type. This error is usually an indication of a bug within Node.js itself, although it is possible for user code to trigger it.</source>
          <target state="translated">不明な &lt;code&gt;stdin&lt;/code&gt; ファイルタイプでNode.jsプロセスを起動しようとしました。通常、このエラーはNode.js自体にバグがあることを示していますが、ユーザーコードによってトリガーされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="647f33438d70586fc223c060ab0724c64eae8be4" translate="yes" xml:space="preserve">
          <source>An attempt was made to launch a Node.js process with an unknown &lt;code&gt;stdout&lt;/code&gt; or &lt;code&gt;stderr&lt;/code&gt; file type. This error is usually an indication of a bug within Node.js itself, although it is possible for user code to trigger it.</source>
          <target state="translated">不明な &lt;code&gt;stdout&lt;/code&gt; または &lt;code&gt;stderr&lt;/code&gt; ファイルタイプでNode.jsプロセスを起動しようとしました。通常、このエラーはNode.js自体にバグがあることを示していますが、ユーザーコードによってトリガーされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="36631651f8656f58f1ad80989998be2bb516fca5" translate="yes" xml:space="preserve">
          <source>An attempt was made to load a module that does not exist or was otherwise not valid.</source>
          <target state="translated">存在しないモジュールをロードしようとしました。</target>
        </trans-unit>
        <trans-unit id="585af3617fecdf1f98b24d17cfb041c2c1480b9c" translate="yes" xml:space="preserve">
          <source>An attempt was made to load a module with an unknown or unsupported file extension.</source>
          <target state="translated">未知の、またはサポートされていない拡張子を持つモジュールをロードしようとしました。</target>
        </trans-unit>
        <trans-unit id="33cb71670cdc6252b60c2fd86c653487c833e2f0" translate="yes" xml:space="preserve">
          <source>An attempt was made to load a module with an unknown or unsupported format.</source>
          <target state="translated">未知の形式またはサポートされていない形式のモジュールをロードしようとしました。</target>
        </trans-unit>
        <trans-unit id="36dbd7a7266484831c62bc15994e72619be965b5" translate="yes" xml:space="preserve">
          <source>An attempt was made to load a policy manifest, but the manifest had multiple entries for a resource which did not match each other. Update the manifest entries to match in order to resolve this error. See the documentation for &lt;a href=&quot;policy&quot;&gt;policy&lt;/a&gt; manifests for more information.</source>
          <target state="translated">ポリシーマニフェストを読み込もうとしましたが、マニフェストにリソースの複数のエントリがあり、互いに一致していません。このエラーを解決するには、一致するようにマニフェストエントリを更新します。詳細については、&lt;a href=&quot;policy&quot;&gt;ポリシー&lt;/a&gt;マニフェストのドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="ffa70d1244ab6a62821622db6810ea06700d6cc8" translate="yes" xml:space="preserve">
          <source>An attempt was made to load a policy manifest, but the manifest was unable to be parsed. See the documentation for &lt;a href=&quot;policy&quot;&gt;policy&lt;/a&gt; manifests for more information.</source>
          <target state="translated">ポリシーマニフェストをロードしようとしましたが、マニフェストを解析できませんでした。詳細については、&lt;a href=&quot;policy&quot;&gt;ポリシー&lt;/a&gt;マニフェストのドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="cf3ceabeeb7f60b9e659a72e695a654bb5df2db6" translate="yes" xml:space="preserve">
          <source>An attempt was made to load a resource, but the resource did not match the integrity defined by the policy manifest. See the documentation for &lt;a href=&quot;policy&quot;&gt;policy&lt;/a&gt; manifests for more information.</source>
          <target state="translated">リソースをロードしようとしましたが、リソースはポリシーマニフェストで定義されている整合性と一致しませんでした。詳細については、&lt;a href=&quot;policy&quot;&gt;ポリシー&lt;/a&gt;マニフェストのドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="7334a0764b055151ea1b0bc7b2e64740fda86d64" translate="yes" xml:space="preserve">
          <source>An attempt was made to load a resource, but the resource was not listed as a dependency from the location that attempted to load it. See the documentation for &lt;a href=&quot;policy&quot;&gt;policy&lt;/a&gt; manifests for more information.</source>
          <target state="translated">リソースをロードしようとしましたが、そのリソースは、ロードしようとした場所からの依存関係としてリストされていませんでした。詳細については、&lt;a href=&quot;policy&quot;&gt;ポリシー&lt;/a&gt;マニフェストのドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="fb6a0b3865a27b364260a9ebd4a30cab5d1a287b" translate="yes" xml:space="preserve">
          <source>An attempt was made to open an IPC communication channel with a synchronously forked Node.js process. See the documentation for the &lt;a href=&quot;child_process&quot;&gt;&lt;code&gt;child_process&lt;/code&gt;&lt;/a&gt; module for more information.</source>
          <target state="translated">同期的にフォークされたNode.jsプロセスでIPC通信チャネルを開こうとしました。詳細については、&lt;a href=&quot;child_process&quot;&gt; &lt;code&gt;child_process&lt;/code&gt; &lt;/a&gt;モジュールのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="e6a3ad4b416ff38b3f08a1c9dfb33b85b8d0ad9b" translate="yes" xml:space="preserve">
          <source>An attempt was made to operate on an already closed socket.</source>
          <target state="translated">すでに閉じられているソケットで操作を試みた。</target>
        </trans-unit>
        <trans-unit id="8ab3615b6d03c6635591fa1326e12eac6794c407" translate="yes" xml:space="preserve">
          <source>An attempt was made to read an encrypted key without specifying a passphrase.</source>
          <target state="translated">パスフレーズを指定せずに暗号化された鍵を読もうとしました。</target>
        </trans-unit>
        <trans-unit id="ae9a452dac6b52e478056f107acb1635e59f820c" translate="yes" xml:space="preserve">
          <source>An attempt was made to read from a policy manifest, but the manifest initialization has not yet taken place. This is likely a bug in Node.js.</source>
          <target state="translated">ポリシーマニフェストからの読み込みを試みましたが、マニフェストの初期化はまだ行われていません。これはNode.jsのバグである可能性が高いです。</target>
        </trans-unit>
        <trans-unit id="0cda91245cc03c8715350454edfde8d7a069c964" translate="yes" xml:space="preserve">
          <source>An attempt was made to register something that is not a function as an &lt;code&gt;AsyncHooks&lt;/code&gt; callback.</source>
          <target state="translated">関数ではないものを &lt;code&gt;AsyncHooks&lt;/code&gt; コールバックとして登録しようとしました。</target>
        </trans-unit>
        <trans-unit id="6facf4ea803873e43d0e21d44ae5050ed4942e5f" translate="yes" xml:space="preserve">
          <source>An attempt was made to renegotiate TLS on a socket instance with TLS disabled.</source>
          <target state="translated">TLS を無効にしたソケットインスタンスで TLS の再ネゴシエーションを試みました。</target>
        </trans-unit>
        <trans-unit id="48efea40af6c91f463bde8a678a9e0858c01c7f4" translate="yes" xml:space="preserve">
          <source>An attempt was made to send an unsupported &quot;handle&quot; over an IPC communication channel to a child process. See &lt;a href=&quot;child_process#child_process_subprocess_send_message_sendhandle_options_callback&quot;&gt;&lt;code&gt;subprocess.send()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;process#process_process_send_message_sendhandle_options_callback&quot;&gt;&lt;code&gt;process.send()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">サポートされていない「ハンドル」をIPC通信チャネルを介して子プロセスに送信しようとしました。詳細については、&lt;a href=&quot;child_process#child_process_subprocess_send_message_sendhandle_options_callback&quot;&gt; &lt;code&gt;subprocess.send()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;process#process_process_send_message_sendhandle_options_callback&quot;&gt; &lt;code&gt;process.send()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="70211bbbf23cffa831a7eea10d2797dcf5bc4ca4" translate="yes" xml:space="preserve">
          <source>An attempt was made to send multiple response headers.</source>
          <target state="translated">複数の応答ヘッダを送信しようとしました。</target>
        </trans-unit>
        <trans-unit id="c89c48a0e6ac156a6ab469b87a8aca246f2ea15e" translate="yes" xml:space="preserve">
          <source>An attempt was made to start a watcher returned by &lt;code&gt;fs.watch()&lt;/code&gt; that has already been started.</source>
          <target state="translated">すでに開始されている &lt;code&gt;fs.watch()&lt;/code&gt; によって返されたウォッチャーを開始しようとしました。</target>
        </trans-unit>
        <trans-unit id="7bfb99f351199b0f29e8c1812878ad8d06a0b8b3" translate="yes" xml:space="preserve">
          <source>An attempt was made to use a URL of an incompatible scheme (protocol) for a specific purpose. It is only used in the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG URL API&lt;/a&gt; support in the &lt;a href=&quot;fs&quot;&gt;&lt;code&gt;fs&lt;/code&gt;&lt;/a&gt; module (which only accepts URLs with &lt;code&gt;'file'&lt;/code&gt; scheme), but may be used in other Node.js APIs as well in the future.</source>
          <target state="translated">特定の目的で、互換性のないスキーム（プロトコル）のURLを使用しようとしました。これは、&lt;a href=&quot;fs&quot;&gt; &lt;code&gt;fs&lt;/code&gt; &lt;/a&gt;モジュールの&lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG URL API&lt;/a&gt;サポート（ &lt;code&gt;'file'&lt;/code&gt; スキームのURLのみを受け入れる）でのみ使用されますが、将来、他のNode.js APIでも使用される可能性があります。</target>
        </trans-unit>
        <trans-unit id="4d5f594ff3b1b28f71108f82d6def6c9de2d4184" translate="yes" xml:space="preserve">
          <source>An attempt was made to use an IPC communication channel that was already closed.</source>
          <target state="translated">既に閉鎖されているIPC通信チャネルを使用しようとしました。</target>
        </trans-unit>
        <trans-unit id="e2f366ef1b99c43d5aed653a929cf6ee883705fd" translate="yes" xml:space="preserve">
          <source>An attempt was made to use crypto features while Node.js was not compiled with OpenSSL crypto support.</source>
          <target state="translated">Node.jsがOpenSSLのcryptoサポートでコンパイルされていない間に、crypto機能を使用する試みが行われました。</target>
        </trans-unit>
        <trans-unit id="9a512584707fdbf50d4db8b542f934eba5f5bf67" translate="yes" xml:space="preserve">
          <source>An attempt was made to use features that require &lt;a href=&quot;intl#intl_internationalization_support&quot;&gt;ICU&lt;/a&gt;, but Node.js was not compiled with ICU support.</source>
          <target state="translated">&lt;a href=&quot;intl#intl_internationalization_support&quot;&gt;ICU&lt;/a&gt;を必要とする機能を使用しようとしましたが、Node.jsはICUサポートでコンパイルされていません。</target>
        </trans-unit>
        <trans-unit id="5b1ec20dd75d25d7bfbdcb2df49e2704cd6e66d8" translate="yes" xml:space="preserve">
          <source>An attempt was made to use the &lt;code&gt;Http2Stream.prototype.responseWithFile()&lt;/code&gt; API to send a directory.</source>
          <target state="translated">&lt;code&gt;Http2Stream.prototype.responseWithFile()&lt;/code&gt; APIを使用してディレクトリを送信しようとしました。</target>
        </trans-unit>
        <trans-unit id="ce4546dfa07ff88232d6b712aac6b5a0ba01ab6e" translate="yes" xml:space="preserve">
          <source>An attempt was made to use the &lt;code&gt;Http2Stream.prototype.responseWithFile()&lt;/code&gt; API to send something other than a regular file, but &lt;code&gt;offset&lt;/code&gt; or &lt;code&gt;length&lt;/code&gt; options were provided.</source>
          <target state="translated">&lt;code&gt;Http2Stream.prototype.responseWithFile()&lt;/code&gt; APIを使用して通常のファイル以外のものを送信しようとしましたが、 &lt;code&gt;offset&lt;/code&gt; または &lt;code&gt;length&lt;/code&gt; オプションが指定されていました。</target>
        </trans-unit>
        <trans-unit id="6841145dd82a74fda1d0ba32e0520caac47c3f81" translate="yes" xml:space="preserve">
          <source>An attempt was made to use the &lt;code&gt;socket&lt;/code&gt; property of an &lt;code&gt;Http2Session&lt;/code&gt; that has already been closed.</source>
          <target state="translated">すでに閉じられている &lt;code&gt;Http2Session&lt;/code&gt; の &lt;code&gt;socket&lt;/code&gt; プロパティを使用しようとしました。</target>
        </trans-unit>
        <trans-unit id="41ded658c0189aef4c62e5802352500a3719e73c" translate="yes" xml:space="preserve">
          <source>An easier method of constructing the &lt;code&gt;mode&lt;/code&gt; is to use a sequence of three octal digits (e.g. &lt;code&gt;765&lt;/code&gt;). The left-most digit (&lt;code&gt;7&lt;/code&gt; in the example), specifies the permissions for the file owner. The middle digit (&lt;code&gt;6&lt;/code&gt; in the example), specifies permissions for the group. The right-most digit (&lt;code&gt;5&lt;/code&gt; in the example), specifies the permissions for others.</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; を構築するより簡単な方法は、3つの8進数のシーケンス（例えば &lt;code&gt;765&lt;/code&gt; ）を使用することです。左端の数字（例では &lt;code&gt;7&lt;/code&gt; ）は、ファイル所有者の許可を指定します。中央の数字（例では &lt;code&gt;6&lt;/code&gt; ）は、グループの権限を指定します。右端の数字（例では &lt;code&gt;5&lt;/code&gt; ）は、他のユーザーの権限を指定します。</target>
        </trans-unit>
        <trans-unit id="2829be5c371485a4ee50f7de235df7c2f3c0de45" translate="yes" xml:space="preserve">
          <source>An element in the &lt;code&gt;iterable&lt;/code&gt; provided to the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG&lt;/a&gt;&lt;a href=&quot;url#url_constructor_new_urlsearchparams_iterable&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt; constructor&lt;/a&gt; did not represent a &lt;code&gt;[name, value]&lt;/code&gt; tuple &amp;ndash; that is, if an element is not iterable, or does not consist of exactly two elements.</source>
          <target state="translated">&lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG &lt;/a&gt;&lt;a href=&quot;url#url_constructor_new_urlsearchparams_iterable&quot;&gt; &lt;code&gt;URLSearchParams&lt;/code&gt; &lt;/a&gt;コンストラクターに提供された &lt;code&gt;iterable&lt;/code&gt; オブジェクトの要素は、 &lt;code&gt;[name, value]&lt;/code&gt; タプルを表していませんでした。つまり、要素が反復可能でないか、厳密に2つの要素で構成されていない場合です。</target>
        </trans-unit>
        <trans-unit id="eda14cddfd42f1020109dd851a65519cd5240821" translate="yes" xml:space="preserve">
          <source>An element in the &lt;code&gt;iterable&lt;/code&gt; provided to the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG&lt;/a&gt;&lt;a href=&quot;url#url_new_urlsearchparams_iterable&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt; constructor&lt;/a&gt; did not represent a &lt;code&gt;[name, value]&lt;/code&gt; tuple &amp;ndash; that is, if an element is not iterable, or does not consist of exactly two elements.</source>
          <target state="translated">An element in the &lt;code&gt;iterable&lt;/code&gt; provided to the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG&lt;/a&gt;&lt;a href=&quot;url#url_new_urlsearchparams_iterable&quot;&gt; &lt;code&gt;URLSearchParams&lt;/code&gt; constructor&lt;/a&gt; did not represent a &lt;code&gt;[name, value]&lt;/code&gt; tuple &amp;ndash; that is, if an element is not iterable, or does not consist of exactly two elements.</target>
        </trans-unit>
        <trans-unit id="08e39b9623271d94e3d05aec99b57567b582d517" translate="yes" xml:space="preserve">
          <source>An error is thrown when an attempt is made to copy the &lt;code&gt;Hash&lt;/code&gt; object after its &lt;a href=&quot;#crypto_hash_digest_encoding&quot;&gt;&lt;code&gt;hash.digest()&lt;/code&gt;&lt;/a&gt; method has been called.</source>
          <target state="translated">An error is thrown when an attempt is made to copy the &lt;code&gt;Hash&lt;/code&gt; object after its &lt;a href=&quot;#crypto_hash_digest_encoding&quot;&gt; &lt;code&gt;hash.digest()&lt;/code&gt; &lt;/a&gt; method has been called.</target>
        </trans-unit>
        <trans-unit id="bbf47fd2a9974fbb7ae5670d62629dd7cac3a535" translate="yes" xml:space="preserve">
          <source>An error occurred while attempting to retrieve the JavaScript &lt;code&gt;undefined&lt;/code&gt; value.</source>
          <target state="translated">JavaScriptの &lt;code&gt;undefined&lt;/code&gt; 値を取得しようとしたときにエラーが発生しました。</target>
        </trans-unit>
        <trans-unit id="c8c9c484df91866961d4f9b4dde2b66a719cccfd" translate="yes" xml:space="preserve">
          <source>An error occurred while invoking the JavaScript portion of the thread-safe function.</source>
          <target state="translated">スレッドセーフ関数のJavaScript部分の呼び出し中にエラーが発生しました。</target>
        </trans-unit>
        <trans-unit id="ec428230d44ff8e4f65fe85a02547d51e535b8a0" translate="yes" xml:space="preserve">
          <source>An error occurred while issuing a command via the &lt;code&gt;inspector&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;inspector&lt;/code&gt; モジュールを介してコマンドを発行中にエラーが発生しました。</target>
        </trans-unit>
        <trans-unit id="aceeb92c7e672dbe96b5bc629cd8fe021f134903" translate="yes" xml:space="preserve">
          <source>An error returned by &lt;code&gt;stream.finished()&lt;/code&gt; and &lt;code&gt;stream.pipeline()&lt;/code&gt;, when a stream or a pipeline ends non gracefully with no explicit error.</source>
          <target state="translated">ストリームまたはパイプラインが明示的なエラーなしで正常に終了しない場合に、 &lt;code&gt;stream.finished()&lt;/code&gt; および &lt;code&gt;stream.pipeline()&lt;/code&gt; によって返されるエラー。</target>
        </trans-unit>
        <trans-unit id="a7603eb8a6c142fc63d3b6d503902e291165f5bd" translate="yes" xml:space="preserve">
          <source>An error thrown by one handler function does not prevent the other handlers from being invoked.</source>
          <target state="translated">あるハンドラ関数によってスローされたエラーは、他のハンドラの起動を妨げるものではありません。</target>
        </trans-unit>
        <trans-unit id="dacde5f35318339673bdd3e80f2305d6416c3174" translate="yes" xml:space="preserve">
          <source>An error will be thrown if an invalid address is provided.</source>
          <target state="translated">無効なアドレスが提供された場合、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="d8547ae4fe6269ee85992151336455ce2d5f48f1" translate="yes" xml:space="preserve">
          <source>An error will be thrown if any of the input aguments specify invalid values or types, or if the derived key cannot be generated.</source>
          <target state="translated">入力引数のいずれかが無効な値や型を指定した場合や、派生キーを生成できなかった場合にエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="ff40b8fcf513326b42a4c38bf81ea9c760111993" translate="yes" xml:space="preserve">
          <source>An error will be thrown if called before &lt;code&gt;quicsession.handshakeConfirmed&lt;/code&gt; is equal to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;quicsession.handshakeConfirmed&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; に等しい前に呼び出されると、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="4e49018e8a609fae0cae3bd372183cebb1f5bb16" translate="yes" xml:space="preserve">
          <source>An error will be thrown if the given &lt;code&gt;typedArray&lt;/code&gt; is larger than 65,536 bytes.</source>
          <target state="translated">指定された &lt;code&gt;typedArray&lt;/code&gt; が65,536バイトより大きい場合、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="75a493de9241c82f031763f7575bf52af90e724d" translate="yes" xml:space="preserve">
          <source>An example counting stream</source>
          <target state="translated">カウントの流れの例</target>
        </trans-unit>
        <trans-unit id="08acb151a713982f42c88e2ce1ebc13e3816477f" translate="yes" xml:space="preserve">
          <source>An example duplex stream</source>
          <target state="translated">二重ストリームの例</target>
        </trans-unit>
        <trans-unit id="d17b8d98a540bae9dcb283f60ef724034d72f057" translate="yes" xml:space="preserve">
          <source>An example of the possible output looks like:</source>
          <target state="translated">可能な出力の例は次のようになります。</target>
        </trans-unit>
        <trans-unit id="ef4051855537ff25bfcec1b43d6c23a547d8eeea" translate="yes" xml:space="preserve">
          <source>An example of this object looks like:</source>
          <target state="translated">このオブジェクトの例は次のようになります。</target>
        </trans-unit>
        <trans-unit id="dd7b93e397ecc47eaefd5ddf11e2dd3a5ecf52fc" translate="yes" xml:space="preserve">
          <source>An example policy file that would allow loading a file &lt;code&gt;checked.js&lt;/code&gt;:</source>
          <target state="translated">ファイル &lt;code&gt;checked.js&lt;/code&gt; のロードを許可するポリシーファイルの例：</target>
        </trans-unit>
        <trans-unit id="2dba28fa39644fb344561450fbc7221ec876ad05" translate="yes" xml:space="preserve">
          <source>An example socket listening on an exclusive port is shown below.</source>
          <target state="translated">以下に排他的なポートをリッスンするソケットの例を示します。</target>
        </trans-unit>
        <trans-unit id="0bfe7463612d597b46ebcb572f5c9578c2184e10" translate="yes" xml:space="preserve">
          <source>An example to read the last 10 bytes of a file which is 100 bytes long:</source>
          <target state="translated">100バイト長のファイルの最後の10バイトを読み込む例。</target>
        </trans-unit>
        <trans-unit id="c8dbc9ff2161b0d335ddbb301e8328c46943af97" translate="yes" xml:space="preserve">
          <source>An example writable stream</source>
          <target state="translated">書き込み可能なストリームの例</target>
        </trans-unit>
        <trans-unit id="c8d30ee4a50e6e4b86d9d75d96b03bc39c11b3fe" translate="yes" xml:space="preserve">
          <source>An exception is thrown when any of the input arguments specify invalid values or types.</source>
          <target state="translated">入力引数のいずれかが無効な値や型を指定した場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="3bde95521f017404d4980ffe8a6e1bec685970ed" translate="yes" xml:space="preserve">
          <source>An exception is thrown when key derivation fails, otherwise the derived key is returned as a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">キーの導出に失敗すると例外がスローされます。それ以外の場合、導出されたキーは&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;として返されます。</target>
        </trans-unit>
        <trans-unit id="fea6f070cd0b84891be844a8303fa5b64d18cd5e" translate="yes" xml:space="preserve">
          <source>An exception will be thrown if there is no active inspector.</source>
          <target state="translated">アクティブなインスペクタが存在しない場合は例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="e07a43c5ecaa51806da3107ae1ddcb6b26acfe0e" translate="yes" xml:space="preserve">
          <source>An excessive amount of TLS renegotiations is detected, which is a potential vector for denial-of-service attacks.</source>
          <target state="translated">TLS の再ネゴシエーションが過剰に検出され、サービス拒否攻撃の可能性のあるベクトルとなります。</target>
        </trans-unit>
        <trans-unit id="621fc2854b0439015e157bdf7bb5600e1e14c87c" translate="yes" xml:space="preserve">
          <source>An immutable array of strings representing the root certificates (in PEM format) from the bundled Mozilla CA store as supplied by current Node.js version.</source>
          <target state="translated">現在のNode.jsのバージョンで提供されている、バンドルされているMozilla CAストアのルート証明書を表す文字列(PEM形式)の不変の配列。</target>
        </trans-unit>
        <trans-unit id="82d19b06a61b76fe42960a67fd72ca25306e372e" translate="yes" xml:space="preserve">
          <source>An immutable array of strings representing the root certificates (in PEM format) used for verifying peer certificates. This is the default value of the &lt;code&gt;ca&lt;/code&gt; option to &lt;a href=&quot;#tls_tls_createsecurecontext_options&quot;&gt;&lt;code&gt;tls.createSecureContext()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ピア証明書の検証に使用されるルート証明書（PEM形式）を表す文字列の不変の配列。これは、&lt;a href=&quot;#tls_tls_createsecurecontext_options&quot;&gt; &lt;code&gt;tls.createSecureContext()&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;ca&lt;/code&gt; オプションのデフォルト値です。</target>
        </trans-unit>
        <trans-unit id="f64687b379f25cbf7341d6c2db0587a3a214b1a6" translate="yes" xml:space="preserve">
          <source>An implementation of the &lt;a href=&quot;https://encoding.spec.whatwg.org/&quot;&gt;WHATWG Encoding Standard&lt;/a&gt;&lt;code&gt;TextDecoder&lt;/code&gt; API.</source>
          <target state="translated">&lt;a href=&quot;https://encoding.spec.whatwg.org/&quot;&gt;WHATWGエンコーディング標準&lt;/a&gt; &lt;code&gt;TextDecoder&lt;/code&gt; API の実装。</target>
        </trans-unit>
        <trans-unit id="465486ad112893f6cf37e501cabba08f692f0c30" translate="yes" xml:space="preserve">
          <source>An implementation of the &lt;a href=&quot;https://encoding.spec.whatwg.org/&quot;&gt;WHATWG Encoding Standard&lt;/a&gt;&lt;code&gt;TextEncoder&lt;/code&gt; API. All instances of &lt;code&gt;TextEncoder&lt;/code&gt; only support UTF-8 encoding.</source>
          <target state="translated">&lt;a href=&quot;https://encoding.spec.whatwg.org/&quot;&gt;WHATWGエンコーディング標準&lt;/a&gt; &lt;code&gt;TextEncoder&lt;/code&gt; API の実装。 &lt;code&gt;TextEncoder&lt;/code&gt; のすべてのインスタンスは、UTF-8エンコーディングのみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="772f242da466fc2876537ecd2e8ecd5fbfa3671c" translate="yes" xml:space="preserve">
          <source>An important drawback when calling &lt;code&gt;process.dlopen()&lt;/code&gt; is that the &lt;code&gt;module&lt;/code&gt; instance must be passed. Functions exported by the C++ Addon will be accessible via &lt;code&gt;module.exports&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;process.dlopen()&lt;/code&gt; を呼び出す際の重要な欠点は、 &lt;code&gt;module&lt;/code&gt; インスタンスを渡す必要があることです。C ++アドオンによってエクスポートされた関数には、 &lt;code&gt;module.exports&lt;/code&gt; を介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="aa732671ec6f2408bb16a997bed395ab13f480b2" translate="yes" xml:space="preserve">
          <source>An important requirement when calling &lt;code&gt;process.dlopen()&lt;/code&gt; is that the &lt;code&gt;module&lt;/code&gt; instance must be passed. Functions exported by the C++ Addon are then accessible via &lt;code&gt;module.exports&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;process.dlopen()&lt;/code&gt; を呼び出すときの重要な要件は、 &lt;code&gt;module&lt;/code&gt; インスタンスを渡す必要があることです。C ++アドオンによってエクスポートされた関数は、 &lt;code&gt;module.exports&lt;/code&gt; を介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="2ebe1511f4205a6788c71fe6bfbaa3175a76fbf3" translate="yes" xml:space="preserve">
          <source>An improved alternative API is available.</source>
          <target state="translated">改良された代替APIが利用可能です。</target>
        </trans-unit>
        <trans-unit id="75991723a893d8562531695bc09a4b9d4688d3a7" translate="yes" xml:space="preserve">
          <source>An independent resolver for DNS requests.</source>
          <target state="translated">DNSリクエストのための独立したリゾルバ。</target>
        </trans-unit>
        <trans-unit id="cf8bc634a78c05d439a35bcfcabef1d71264eeba" translate="yes" xml:space="preserve">
          <source>An instance of the &lt;code&gt;PerformanceNodeTiming&lt;/code&gt; class that provides performance metrics for specific Node.js operational milestones.</source>
          <target state="translated">特定のNode.js運用マイルストーンのパフォーマンスメトリックを提供する &lt;code&gt;PerformanceNodeTiming&lt;/code&gt; クラスのインスタンス。</target>
        </trans-unit>
        <trans-unit id="073f106d3f9e3d5509f6a7b0b26f848582951349" translate="yes" xml:space="preserve">
          <source>An integer identifier for the current thread. On the corresponding worker object (if there is any), it is available as &lt;a href=&quot;#worker_threads_worker_threadid_1&quot;&gt;&lt;code&gt;worker.threadId&lt;/code&gt;&lt;/a&gt;. This value is unique for each &lt;a href=&quot;#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; instance inside a single process.</source>
          <target state="translated">現在のスレッドの整数識別子。対応するワーカーオブジェクト（存在する場合）では、&lt;a href=&quot;#worker_threads_worker_threadid_1&quot;&gt; &lt;code&gt;worker.threadId&lt;/code&gt; &lt;/a&gt;として使用できます。この値は、単一のプロセス内の各&lt;a href=&quot;#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;インスタンスで一意です。</target>
        </trans-unit>
        <trans-unit id="2f5ec5e060c74b93d50346bf8f6f2198cd3ecdb3" translate="yes" xml:space="preserve">
          <source>An integer identifier for the referenced thread. Inside the worker thread, it is available as &lt;a href=&quot;#worker_threads_worker_threadid&quot;&gt;&lt;code&gt;require('worker_threads').threadId&lt;/code&gt;&lt;/a&gt;. This value is unique for each &lt;code&gt;Worker&lt;/code&gt; instance inside a single process.</source>
          <target state="translated">参照されるスレッドの整数識別子。ワーカースレッド内では、&lt;a href=&quot;#worker_threads_worker_threadid&quot;&gt; &lt;code&gt;require('worker_threads').threadId&lt;/code&gt; &lt;/a&gt;として使用できます。この値は、単一のプロセス内の各 &lt;code&gt;Worker&lt;/code&gt; インスタンスで一意です。</target>
        </trans-unit>
        <trans-unit id="62c6f6c1e4eb21e635a4551d4f5637d6dfc06901" translate="yes" xml:space="preserve">
          <source>An internal method used to parse and execute &lt;code&gt;REPLServer&lt;/code&gt; keywords. Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;keyword&lt;/code&gt; is a valid keyword, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;REPLServer&lt;/code&gt; キーワードの解析と実行に使用される内部メソッド。 &lt;code&gt;keyword&lt;/code&gt; が有効なキーワードの場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4d397be77840ab5f827913c084b4c79b7fe2a871" translate="yes" xml:space="preserve">
          <source>An invalid (negative) size was passed for either the &lt;code&gt;recvBufferSize&lt;/code&gt; or &lt;code&gt;sendBufferSize&lt;/code&gt; options in &lt;a href=&quot;dgram#dgram_dgram_createsocket_options_callback&quot;&gt;&lt;code&gt;dgram.createSocket()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;dgram#dgram_dgram_createsocket_options_callback&quot;&gt; &lt;code&gt;dgram.createSocket()&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;recvBufferSize&lt;/code&gt; または &lt;code&gt;sendBufferSize&lt;/code&gt; オプションに無効な（負の）サイズが渡されました。</target>
        </trans-unit>
        <trans-unit id="7811c770cd0545873f140d055f4619346dfbfaff" translate="yes" xml:space="preserve">
          <source>An invalid &lt;a href=&quot;crypto#crypto_crypto_gethashes&quot;&gt;crypto digest algorithm&lt;/a&gt; was specified.</source>
          <target state="translated">無効な&lt;a href=&quot;crypto#crypto_crypto_gethashes&quot;&gt;暗号ダイジェストアルゴリズム&lt;/a&gt;が指定されました。</target>
        </trans-unit>
        <trans-unit id="f7ef3c1db04c524b24f3e36a5536e0dfd3183fd1" translate="yes" xml:space="preserve">
          <source>An invalid &lt;a href=&quot;packages#packages_node_js_package_json_field_definitions&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; file failed parsing.</source>
          <target state="translated">無効な&lt;a href=&quot;packages#packages_node_js_package_json_field_definitions&quot;&gt; &lt;code&gt;package.json&lt;/code&gt; &lt;/a&gt;ファイルの解析に失敗しました。</target>
        </trans-unit>
        <trans-unit id="8b6dce681dc9a6b84eac0557bbb9b1f6e6b2db2b" translate="yes" xml:space="preserve">
          <source>An invalid &lt;a href=&quot;packages#packages_node_js_package_json_field_definitions&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; file was found which failed parsing.</source>
          <target state="translated">解析に失敗した無効な&lt;a href=&quot;packages#packages_node_js_package_json_field_definitions&quot;&gt; &lt;code&gt;package.json&lt;/code&gt; &lt;/a&gt;ファイルが見つかりました。</target>
        </trans-unit>
        <trans-unit id="b3c155df62e478d3b9758238feb53f02d10d5052" translate="yes" xml:space="preserve">
          <source>An invalid &lt;code&gt;asyncId&lt;/code&gt; or &lt;code&gt;triggerAsyncId&lt;/code&gt; was passed using &lt;code&gt;AsyncHooks&lt;/code&gt;. An id less than -1 should never happen.</source>
          <target state="translated">&lt;code&gt;triggerAsyncId&lt;/code&gt; を使用して、無効な &lt;code&gt;asyncId&lt;/code&gt; またはtriggerAsyncIdが渡され &lt;code&gt;AsyncHooks&lt;/code&gt; 。-1未満のIDは決して発生しません。</target>
        </trans-unit>
        <trans-unit id="53097ec4ce908207bdaf04b568c122a0bf8fb6ed" translate="yes" xml:space="preserve">
          <source>An invalid &lt;code&gt;options.protocol&lt;/code&gt; was passed to &lt;code&gt;http.request()&lt;/code&gt;.</source>
          <target state="translated">無効な &lt;code&gt;options.protocol&lt;/code&gt; が &lt;code&gt;http.request()&lt;/code&gt; に渡されました。</target>
        </trans-unit>
        <trans-unit id="42218c520bddcf03f853c29f8c39cb72deb7af44" translate="yes" xml:space="preserve">
          <source>An invalid &lt;code&gt;package.json&lt;/code&gt; file was found which failed parsing.</source>
          <target state="translated">解析に失敗した無効な &lt;code&gt;package.json&lt;/code&gt; ファイルが見つかりました。</target>
        </trans-unit>
        <trans-unit id="9137a3f9b39eceb7fdf8223922ed3ee4bc96892f" translate="yes" xml:space="preserve">
          <source>An invalid HTTP header value was specified.</source>
          <target state="translated">無効な HTTP ヘッダー値が指定されました。</target>
        </trans-unit>
        <trans-unit id="4d9592829c9771da1ed36ca7f3ae4ac3e02fb945" translate="yes" xml:space="preserve">
          <source>An invalid HTTP informational status code has been specified. Informational status codes must be an integer between &lt;code&gt;100&lt;/code&gt; and &lt;code&gt;199&lt;/code&gt; (inclusive).</source>
          <target state="translated">無効なHTTP情報ステータスコードが指定されました。情報のステータスコードは、の間の整数でなければならない &lt;code&gt;100&lt;/code&gt; 及び &lt;code&gt;199&lt;/code&gt; （両端を含みます）。</target>
        </trans-unit>
        <trans-unit id="83799af7f1d4bcb81b1ba9abe624aceb9dd1dd5f" translate="yes" xml:space="preserve">
          <source>An invalid HTTP status code has been specified. Status codes must be an integer between &lt;code&gt;100&lt;/code&gt; and &lt;code&gt;599&lt;/code&gt; (inclusive).</source>
          <target state="translated">無効なHTTPステータスコードが指定されました。ステータスコードは、の間の整数でなければならない &lt;code&gt;100&lt;/code&gt; 及び &lt;code&gt;599&lt;/code&gt; （両端を含みます）。</target>
        </trans-unit>
        <trans-unit id="a2b589c62d968af0c7d9fadb38e1a1697e4c0a9c" translate="yes" xml:space="preserve">
          <source>An invalid HTTP token was supplied.</source>
          <target state="translated">無効な HTTP トークンが提供されました。</target>
        </trans-unit>
        <trans-unit id="1b05ff2c6deb148ba62b8fd02c85c5fe55314f80" translate="yes" xml:space="preserve">
          <source>An invalid HTTP/2 header value was specified.</source>
          <target state="translated">無効な HTTP/2 ヘッダー値が指定されました。</target>
        </trans-unit>
        <trans-unit id="2dca78219826127dd2e7cedfa98772c855f5600d" translate="yes" xml:space="preserve">
          <source>An invalid JSON Web Key was provided.</source>
          <target state="translated">無効な JSON Web キーが提供されました。</target>
        </trans-unit>
        <trans-unit id="c275cebc9b7406d1b49bb487d1475c5739fe123b" translate="yes" xml:space="preserve">
          <source>An invalid URI was passed.</source>
          <target state="translated">無効な URI が渡されました。</target>
        </trans-unit>
        <trans-unit id="ee3a107d8f7d196eb5efd8908e428b326baa42e0" translate="yes" xml:space="preserve">
          <source>An invalid URL was passed to the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG&lt;/a&gt;&lt;a href=&quot;url#url_constructor_new_url_input_base&quot;&gt;&lt;code&gt;URL&lt;/code&gt; constructor&lt;/a&gt; to be parsed. The thrown error object typically has an additional property &lt;code&gt;'input'&lt;/code&gt; that contains the URL that failed to parse.</source>
          <target state="translated">無効なURLが&lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG &lt;/a&gt;&lt;a href=&quot;url#url_constructor_new_url_input_base&quot;&gt; &lt;code&gt;URL&lt;/code&gt; コンストラクター&lt;/a&gt;に渡されて解析されました。スローされたエラーオブジェクトには、通常、解析に失敗したURLを含む追加のプロパティ &lt;code&gt;'input'&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="9ddca0b75f36007e1835b117f0a56f78c281b32f" translate="yes" xml:space="preserve">
          <source>An invalid URL was passed to the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG&lt;/a&gt;&lt;a href=&quot;url#url_new_url_input_base&quot;&gt;&lt;code&gt;URL&lt;/code&gt; constructor&lt;/a&gt; to be parsed. The thrown error object typically has an additional property &lt;code&gt;'input'&lt;/code&gt; that contains the URL that failed to parse.</source>
          <target state="translated">無効なURLが渡された&lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG &lt;/a&gt;&lt;a href=&quot;url#url_new_url_input_base&quot;&gt; &lt;code&gt;URL&lt;/code&gt; のコンストラクタ&lt;/a&gt;解析します。スローされたエラーオブジェクトには通常、解析に失敗したURLを含む追加のプロパティ &lt;code&gt;'input'&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="c8d1e7d5d4328e91731f965d22049d9d1eb68d2e" translate="yes" xml:space="preserve">
          <source>An invalid authentication tag length was provided.</source>
          <target state="translated">無効な認証タグの長さが提供されました。</target>
        </trans-unit>
        <trans-unit id="3c27d0d5f4f19d9e5c753dd10d1d92dd9e8b67ec" translate="yes" xml:space="preserve">
          <source>An invalid authentication tag was provided.</source>
          <target state="translated">無効な認証タグが提供されました。</target>
        </trans-unit>
        <trans-unit id="5b9bf610f45a423c02b752e29758e923eed312c6" translate="yes" xml:space="preserve">
          <source>An invalid counter was provided for a counter-mode cipher.</source>
          <target state="translated">対数モード暗号に無効なカウンタが提供されました。</target>
        </trans-unit>
        <trans-unit id="8ad4b296955522d81c3e29330609d148ae654284" translate="yes" xml:space="preserve">
          <source>An invalid crypto engine identifier was passed to &lt;a href=&quot;crypto#crypto_crypto_setengine_engine_flags&quot;&gt;&lt;code&gt;require('crypto').setEngine()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">無効な暗号化エンジン識別子が&lt;a href=&quot;crypto#crypto_crypto_setengine_engine_flags&quot;&gt; &lt;code&gt;require('crypto').setEngine()&lt;/code&gt; &lt;/a&gt;に渡されました。</target>
        </trans-unit>
        <trans-unit id="c49bcce99f965d1f25f0f38054e99507e7fb20bf" translate="yes" xml:space="preserve">
          <source>An invalid elliptic-curve was provided.</source>
          <target state="translated">無効な楕円曲線が提供されました。</target>
        </trans-unit>
        <trans-unit id="6a8f773ced18d9551992b0b5b3f8bed127013c2a" translate="yes" xml:space="preserve">
          <source>An invalid initialization vector was provided.</source>
          <target state="translated">無効な初期化ベクトルが提供されました。</target>
        </trans-unit>
        <trans-unit id="6c4278dbf19378a6e3c0661dcc971a307a965c04" translate="yes" xml:space="preserve">
          <source>An invalid key length was provided.</source>
          <target state="translated">無効なキー長が提供されました。</target>
        </trans-unit>
        <trans-unit id="9476474da648b10891ba9d1f7d23e2fd982b0b7f" translate="yes" xml:space="preserve">
          <source>An invalid key pair was provided.</source>
          <target state="translated">無効なキー・ペアが提供されました。</target>
        </trans-unit>
        <trans-unit id="2a21980a89558404b747bc24b3ece6bbb98650ec" translate="yes" xml:space="preserve">
          <source>An invalid key type was provided.</source>
          <target state="translated">無効なキータイプが提供されました。</target>
        </trans-unit>
        <trans-unit id="ee3780f4d07d3d8c29b415be1611ae560b1703ec" translate="yes" xml:space="preserve">
          <source>An invalid message length was provided.</source>
          <target state="translated">無効なメッセージ長が提供されました。</target>
        </trans-unit>
        <trans-unit id="3c87de6f3d6bde59b26313418fd494f0540a908b" translate="yes" xml:space="preserve">
          <source>An invalid or unexpected value was passed in an options object.</source>
          <target state="translated">無効な値または予期しない値がオプション・オブジェクトに渡されました。</target>
        </trans-unit>
        <trans-unit id="de46bdff8a429a43fe6d0229ba2dab03fb547365" translate="yes" xml:space="preserve">
          <source>An invalid or unknown encoding option was passed to an API.</source>
          <target state="translated">無効または不明なエンコーディングオプションが API に渡されました。</target>
        </trans-unit>
        <trans-unit id="24caaedef2e4a699105e8a8fc8217ae223022cf7" translate="yes" xml:space="preserve">
          <source>An invalid or unknown file encoding was passed.</source>
          <target state="translated">無効または不明なファイルエンコーディングが渡されました。</target>
        </trans-unit>
        <trans-unit id="a007b066557bd652706f1a74c116ab07f669750a" translate="yes" xml:space="preserve">
          <source>An invalid or unknown process signal was passed to an API expecting a valid signal (such as &lt;a href=&quot;child_process#child_process_subprocess_kill_signal&quot;&gt;&lt;code&gt;subprocess.kill()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">無効または不明なプロセス信号が、有効な信号を期待するAPI（&lt;a href=&quot;child_process#child_process_subprocess_kill_signal&quot;&gt; &lt;code&gt;subprocess.kill()&lt;/code&gt; &lt;/a&gt;など）に渡されました。</target>
        </trans-unit>
        <trans-unit id="a2cc1bcceb942d934ea0b3721ed55b0e52bb22c4" translate="yes" xml:space="preserve">
          <source>An invalid or unsupported value was passed for a given argument.</source>
          <target state="translated">無効な値またはサポートされていない値が、指定された引数に渡されました。</target>
        </trans-unit>
        <trans-unit id="7467250ab9219c384d82de1c709db4f285ccad29" translate="yes" xml:space="preserve">
          <source>An invalid parameter key was passed during construction of a Brotli stream.</source>
          <target state="translated">Brotli ストリームの構築中に無効なパラメータ・キーが渡されました。</target>
        </trans-unit>
        <trans-unit id="81a0ff15c7024ddfbc1bf026e9ad2665191b4014" translate="yes" xml:space="preserve">
          <source>An invalid symlink type was passed to the &lt;a href=&quot;fs#fs_fs_symlink_target_path_type_callback&quot;&gt;&lt;code&gt;fs.symlink()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fs#fs_fs_symlinksync_target_path_type&quot;&gt;&lt;code&gt;fs.symlinkSync()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">無効なシンボリックリンクタイプが&lt;a href=&quot;fs#fs_fs_symlink_target_path_type_callback&quot;&gt; &lt;code&gt;fs.symlink()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;fs#fs_fs_symlinksync_target_path_type&quot;&gt; &lt;code&gt;fs.symlinkSync()&lt;/code&gt; &lt;/a&gt;メソッドに渡されました。</target>
        </trans-unit>
        <trans-unit id="00a8ea030cf6ba0724a3964f36a2d15725147280" translate="yes" xml:space="preserve">
          <source>An invalid transfer object was passed to &lt;code&gt;postMessage()&lt;/code&gt;.</source>
          <target state="translated">無効な転送オブジェクトが &lt;code&gt;postMessage()&lt;/code&gt; に渡されました。</target>
        </trans-unit>
        <trans-unit id="a2b09312d9dbda06905e152f8c7977c5e852e71e" translate="yes" xml:space="preserve">
          <source>An invalid value for the &lt;code&gt;format&lt;/code&gt; argument was passed to the &lt;code&gt;crypto.ECDH()&lt;/code&gt; class &lt;code&gt;getPublicKey()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; 引数の無効な値が &lt;code&gt;crypto.ECDH()&lt;/code&gt; クラスの &lt;code&gt;getPublicKey()&lt;/code&gt; メソッドに渡されました。</target>
        </trans-unit>
        <trans-unit id="bc084bd4b5ed2a8658576de1650e9b190ed4b7c4" translate="yes" xml:space="preserve">
          <source>An invalid value for the &lt;code&gt;key&lt;/code&gt; argument has been passed to the &lt;code&gt;crypto.ECDH()&lt;/code&gt; class &lt;code&gt;computeSecret()&lt;/code&gt; method. It means that the public key lies outside of the elliptic curve.</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 引数の無効な値が &lt;code&gt;crypto.ECDH()&lt;/code&gt; クラスの &lt;code&gt;computeSecret()&lt;/code&gt; メソッドに渡されました。これは、公開鍵が楕円曲線の外側にあることを意味します。</target>
        </trans-unit>
        <trans-unit id="3009fac2b6e73c17013ea91a7f4eaedc24157a05" translate="yes" xml:space="preserve">
          <source>An invalid value has been specified for an HTTP/2 setting.</source>
          <target state="translated">HTTP/2 設定に無効な値が指定されました。</target>
        </trans-unit>
        <trans-unit id="32ab517d4da5af678eb83c61361b8c36f8e2b5d5" translate="yes" xml:space="preserve">
          <source>An iterable argument (i.e. a value that works with &lt;code&gt;for...of&lt;/code&gt; loops) was required, but not provided to a Node.js API.</source>
          <target state="translated">反復可能な引数（つまり、 &lt;code&gt;for...of&lt;/code&gt; ループで機能する値）が必要でしたが、Node.js APIに提供されていません。</target>
        </trans-unit>
        <trans-unit id="4610068747893484ab3879a4c639d496953ba03a" translate="yes" xml:space="preserve">
          <source>An npm module like &lt;a href=&quot;https://www.npmjs.com/package/asn1.js&quot;&gt;asn1.js&lt;/a&gt; may be used to parse the certificates.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/package/asn1.js&quot;&gt;asn1.js&lt;/a&gt;などのnpmモジュールを使用して、証明書を解析できます。</target>
        </trans-unit>
        <trans-unit id="f77687911aba2d6bab8886c18c7e311e5c3af610" translate="yes" xml:space="preserve">
          <source>An object containing the address information for a bound &lt;code&gt;QuicEndpoint&lt;/code&gt;.</source>
          <target state="translated">バインドされた &lt;code&gt;QuicEndpoint&lt;/code&gt; のアドレス情報を含むオブジェクト。</target>
        </trans-unit>
        <trans-unit id="356572f75a57977f5c153f3df8b90940432f9cdd" translate="yes" xml:space="preserve">
          <source>An object containing the local address information for the &lt;code&gt;QuicSocket&lt;/code&gt; to which the &lt;code&gt;QuicSession&lt;/code&gt; is currently associated.</source>
          <target state="translated">ローカルアドレス情報を含むオブジェクト &lt;code&gt;QuicSocket&lt;/code&gt; れる &lt;code&gt;QuicSession&lt;/code&gt; が現在関連付けられています。</target>
        </trans-unit>
        <trans-unit id="95da227cd31de28e86d36a76b4b278ad4698ef51" translate="yes" xml:space="preserve">
          <source>An object containing the outbound headers sent for this &lt;code&gt;Http2Stream&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Http2Stream&lt;/code&gt; に送信される送信ヘッダーを含むオブジェクト。</target>
        </trans-unit>
        <trans-unit id="183b51e83da82dce17c49c6f273d37539988cb1c" translate="yes" xml:space="preserve">
          <source>An object containing the outbound trailers sent for this &lt;code&gt;HttpStream&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;HttpStream&lt;/code&gt; に送信される送信トレーラーを含むオブジェクト。</target>
        </trans-unit>
        <trans-unit id="b7bf9d298c0d79cd9a4519ce1b32f0550835768d" translate="yes" xml:space="preserve">
          <source>An object containing the remote address information for the connected peer.</source>
          <target state="translated">接続されているピアのリモートアドレス情報を含むオブジェクト。</target>
        </trans-unit>
        <trans-unit id="63f487c2ed91ee4a19f8894795e55dc5b677aaaf" translate="yes" xml:space="preserve">
          <source>An object describing the current status of this &lt;code&gt;Http2Session&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Http2Session&lt;/code&gt; の現在のステータスを説明するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="45c9a0a91a94899c44364d496709b44bd7e1cda4" translate="yes" xml:space="preserve">
          <source>An object detailing the algorithm for which the key can be used along with additional algorithm-specific parameters.</source>
          <target state="translated">鍵が使用できるアルゴリズムの詳細を、追加のアルゴリズム固有のパラメータとともに記述したオブジェクト。</target>
        </trans-unit>
        <trans-unit id="1d0cbd5294dd14d7eee763decb982c8c903d92ca" translate="yes" xml:space="preserve">
          <source>An object representing the type, name, and size of parameter of an ephemeral key exchange in Perfect Forward Secrecy on a client connection. It is an empty object when the key exchange is not ephemeral. The supported types are &lt;code&gt;'DH'&lt;/code&gt; and &lt;code&gt;'ECDH'&lt;/code&gt;. The &lt;code&gt;name&lt;/code&gt; property is available only when type is &lt;code&gt;'ECDH'&lt;/code&gt;.</source>
          <target state="translated">クライアント接続のPerfectForward Secrecyでのエフェメラルキー交換のパラメーターのタイプ、名前、およびサイズを表すオブジェクト。鍵交換が一時的でない場合、これは空のオブジェクトです。サポートされているタイプは &lt;code&gt;'DH'&lt;/code&gt; と &lt;code&gt;'ECDH'&lt;/code&gt; です。 &lt;code&gt;name&lt;/code&gt; タイプがある場合にのみ、プロパティが提供されています &lt;code&gt;'ECDH'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ccbe3117ca08d126e354464168b8f810e16ed66e" translate="yes" xml:space="preserve">
          <source>An object that can be used to collect performance metrics from the current Node.js instance. It is similar to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/performance&quot;&gt;&lt;code&gt;window.performance&lt;/code&gt;&lt;/a&gt; in browsers.</source>
          <target state="translated">現在のNode.jsインスタンスからパフォーマンスメトリックを収集するために使用できるオブジェクト。これは、ブラウザの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/performance&quot;&gt; &lt;code&gt;window.performance&lt;/code&gt; &lt;/a&gt;に似ています。</target>
        </trans-unit>
        <trans-unit id="7f1a334815104f3002d6709bd8a581e59911e9e4" translate="yes" xml:space="preserve">
          <source>An object that can be used to query performance information from a worker instance. Similar to &lt;a href=&quot;perf_hooks#perf_hooks_perf_hooks_performance&quot;&gt;&lt;code&gt;perf_hooks.performance&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ワーカーインスタンスからパフォーマンス情報をクエリするために使用できるオブジェクト。&lt;a href=&quot;perf_hooks#perf_hooks_perf_hooks_performance&quot;&gt; &lt;code&gt;perf_hooks.performance&lt;/code&gt; に&lt;/a&gt;似ています。</target>
        </trans-unit>
        <trans-unit id="6fdb186cb1bb465a94fd44fa3d98f2ec31eaf6bc" translate="yes" xml:space="preserve">
          <source>An object that needs to be explicitly listed in the &lt;code&gt;transferList&lt;/code&gt; argument is in the object passed to a &lt;a href=&quot;worker_threads#worker_threads_port_postmessage_value_transferlist&quot;&gt;&lt;code&gt;postMessage()&lt;/code&gt;&lt;/a&gt; call, but is not provided in the &lt;code&gt;transferList&lt;/code&gt; for that call. Usually, this is a &lt;code&gt;MessagePort&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;transferList&lt;/code&gt; 引数に明示的にリストする必要があるオブジェクトは、&lt;a href=&quot;worker_threads#worker_threads_port_postmessage_value_transferlist&quot;&gt; &lt;code&gt;postMessage()&lt;/code&gt; &lt;/a&gt;呼び出しに渡されるオブジェクトにありますが、その呼び出しの &lt;code&gt;transferList&lt;/code&gt; には含まれていません。通常、これは &lt;code&gt;MessagePort&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d012b4cbac012416e5a8413aafa99ab4508b3d1b" translate="yes" xml:space="preserve">
          <source>An object that needs to be explicitly listed in the &lt;code&gt;transferList&lt;/code&gt; argument is in the object passed to a &lt;code&gt;postMessage()&lt;/code&gt; call, but is not provided in the &lt;code&gt;transferList&lt;/code&gt; for that call. Usually, this is a &lt;code&gt;MessagePort&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;transferList&lt;/code&gt; 引数に明示的にリストする必要があるオブジェクトは、 &lt;code&gt;postMessage()&lt;/code&gt; 呼び出しに渡されるオブジェクトにありますが、その呼び出しの &lt;code&gt;transferList&lt;/code&gt; には含まれていません。通常、これは &lt;code&gt;MessagePort&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="12b7871e6761c9fb25bf5b796b0baadaa89a7ed5" translate="yes" xml:space="preserve">
          <source>An object which contains arrays of sockets currently awaiting use by the agent when &lt;code&gt;keepAlive&lt;/code&gt; is enabled. Do not modify.</source>
          <target state="translated">&lt;code&gt;keepAlive&lt;/code&gt; が有効な場合にエージェントによる使用を現在待機しているソケットの配列を含むオブジェクト。変更しないでください。</target>
        </trans-unit>
        <trans-unit id="0bec9feba2dd520f9e0bbc76822cbb0e52455087" translate="yes" xml:space="preserve">
          <source>An object which contains arrays of sockets currently in use by the agent. Do not modify.</source>
          <target state="translated">エージェントが現在使用しているソケットの配列を含むオブジェクト。変更しないでください。</target>
        </trans-unit>
        <trans-unit id="574531c54ab478f216006078f3cf769b59551436" translate="yes" xml:space="preserve">
          <source>An object which contains queues of requests that have not yet been assigned to sockets. Do not modify.</source>
          <target state="translated">まだソケットに割り当てられていないリクエストのキューを含むオブジェクト。変更しないでください。</target>
        </trans-unit>
        <trans-unit id="c8c2ef690c15e955957189dc54681023c2809f41" translate="yes" xml:space="preserve">
          <source>An opaque value returned by &lt;a href=&quot;#n_api_napi_add_async_cleanup_hook&quot;&gt;&lt;code&gt;napi_add_async_cleanup_hook&lt;/code&gt;&lt;/a&gt;. It must be passed to &lt;a href=&quot;#n_api_napi_remove_async_cleanup_hook&quot;&gt;&lt;code&gt;napi_remove_async_cleanup_hook&lt;/code&gt;&lt;/a&gt; when the chain of asynchronous cleanup events completes.</source>
          <target state="translated">&lt;a href=&quot;#n_api_napi_add_async_cleanup_hook&quot;&gt; &lt;code&gt;napi_add_async_cleanup_hook&lt;/code&gt; &lt;/a&gt;によって返される不透明な値。非同期クリーンアップイベントのチェーンが完了したら、&lt;a href=&quot;#n_api_napi_remove_async_cleanup_hook&quot;&gt; &lt;code&gt;napi_remove_async_cleanup_hook&lt;/code&gt; &lt;/a&gt;に渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="50691234f37a43a5cbb36f3b7d8d1a8227e344dc" translate="yes" xml:space="preserve">
          <source>An operation failed because the &lt;code&gt;Worker&lt;/code&gt; instance is not currently running.</source>
          <target state="translated">&lt;code&gt;Worker&lt;/code&gt; インスタンスが現在実行されていないため、操作が失敗しました。</target>
        </trans-unit>
        <trans-unit id="a26c6567721e9d761372da31a3ed2ed92b6322a3" translate="yes" xml:space="preserve">
          <source>An operation failed. This is typically used to signal the general failure of an asynchronous operation.</source>
          <target state="translated">操作に失敗しました。これは通常、非同期操作の一般的な失敗を示すために使用されます。</target>
        </trans-unit>
        <trans-unit id="8b65eb047b7d478fbb60f8f45b17eea8fff6a0c1" translate="yes" xml:space="preserve">
          <source>An operation outside the bounds of a &lt;code&gt;Buffer&lt;/code&gt; was attempted.</source>
          <target state="translated">&lt;code&gt;Buffer&lt;/code&gt; の境界外の操作が試行されました。</target>
        </trans-unit>
        <trans-unit id="af34a6f3533f1490f6c0ad6743f050beea1de990" translate="yes" xml:space="preserve">
          <source>An operation was performed on a stream that had already been destroyed.</source>
          <target state="translated">すでに破壊されていたストリームに対して操作が行われました。</target>
        </trans-unit>
        <trans-unit id="932cb566059b93f41fa9ea4f4b56532c06b7c507" translate="yes" xml:space="preserve">
          <source>An option pair is incompatible with each other and can not be used at the same time.</source>
          <target state="translated">オプションペアはお互いに互換性がなく、同時に使用することはできません。</target>
        </trans-unit>
        <trans-unit id="c8ec70c5288ddd82e641736f55d4054d4105002d" translate="yes" xml:space="preserve">
          <source>An option pair is incompatible with each other and cannot be used at the same time.</source>
          <target state="translated">オプションペアは互いに互換性がなく、同時に使用することはできません。</target>
        </trans-unit>
        <trans-unit id="95444c63949101ef084927c9ccadb4abbaaedae0" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;callback&lt;/code&gt; function may be specified to as a way of reporting DNS errors or for determining when it is safe to reuse the &lt;code&gt;buf&lt;/code&gt; object. DNS lookups delay the time to send for at least one tick of the Node.js event loop.</source>
          <target state="translated">オプションの &lt;code&gt;callback&lt;/code&gt; 関数は、DNSエラーを報告する方法として、または &lt;code&gt;buf&lt;/code&gt; オブジェクトを安全に再利用できる時期を判断するために指定できます。DNSルックアップは、Node.jsイベントループの少なくとも1ティックの送信時間を遅らせます。</target>
        </trans-unit>
        <trans-unit id="58ec83a787fabdb5feab00dfa026d9c031a4aea1" translate="yes" xml:space="preserve">
          <source>An optional callback function that may be set by user code to be notified when the &lt;code&gt;abortController.abort()&lt;/code&gt; function has been called.</source>
          <target state="translated">&lt;code&gt;abortController.abort()&lt;/code&gt; 関数が呼び出されたときに通知されるように、ユーザーコードによって設定できるオプションのコールバック関数。</target>
        </trans-unit>
        <trans-unit id="b20732420864901a779e958ee3751618b59c91e1" translate="yes" xml:space="preserve">
          <source>An overview of available Node.js and JavaScript features for each &lt;code&gt;configure&lt;/code&gt; option:</source>
          <target state="translated">各 &lt;code&gt;configure&lt;/code&gt; オプションで使用可能なNode.jsおよびJavaScript機能の概要：</target>
        </trans-unit>
        <trans-unit id="517634b9ccd1b10a5177eb481209c6e3ea5f0285" translate="yes" xml:space="preserve">
          <source>An unhandled error occurred (for instance, when an &lt;code&gt;'error'&lt;/code&gt; event is emitted by an &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt; but an &lt;code&gt;'error'&lt;/code&gt; handler is not registered).</source>
          <target state="translated">未処理のエラーが発生しました（たとえば、&lt;a href=&quot;events#events_class_eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt;によって &lt;code&gt;'error'&lt;/code&gt; イベントが発行されたが、 &lt;code&gt;'error'&lt;/code&gt; ハンドラーが登録されていない場合）。</target>
        </trans-unit>
        <trans-unit id="d8bcdfb4911d0ae108bd19887ba6f3216c231e3f" translate="yes" xml:space="preserve">
          <source>An unknown Diffie-Hellman group name was given. See &lt;a href=&quot;crypto#crypto_crypto_getdiffiehellman_groupname&quot;&gt;&lt;code&gt;crypto.getDiffieHellman()&lt;/code&gt;&lt;/a&gt; for a list of valid group names.</source>
          <target state="translated">未知のDiffie-Hellmanグループ名が与えられました。有効なグループ名のリストについては、&lt;a href=&quot;crypto#crypto_crypto_getdiffiehellman_groupname&quot;&gt; &lt;code&gt;crypto.getDiffieHellman()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a5e4b5da4f03ef3c7b6ac903cf3593f74c7a8b8d" translate="yes" xml:space="preserve">
          <source>An unknown cipher was specified.</source>
          <target state="translated">未知の暗号が指定されていました。</target>
        </trans-unit>
        <trans-unit id="9330a387134204a50163ab3813de85814b9fdcae" translate="yes" xml:space="preserve">
          <source>An unspecified failure occured trying to initialize a new &lt;code&gt;QuicClientSession&lt;/code&gt;.</source>
          <target state="translated">新しい &lt;code&gt;QuicClientSession&lt;/code&gt; を初期化しようとして、不特定の障害が発生しました。</target>
        </trans-unit>
        <trans-unit id="c03eb20f5f7c3d76127e4c989549f01734b6a592" translate="yes" xml:space="preserve">
          <source>An unspecified or non-specific system error has occurred within the Node.js process. The error object will have an &lt;code&gt;err.info&lt;/code&gt; object property with additional details.</source>
          <target state="translated">Node.jsプロセス内で不特定または非特定のシステムエラーが発生しました。エラーオブジェクトには、追加の詳細を含む &lt;code&gt;err.info&lt;/code&gt; オブジェクトプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="67258f57db5b4a3cc9c6a65e3e3c6dfb93bb7131" translate="yes" xml:space="preserve">
          <source>An upgrade of zlib from 1.2.8 to 1.2.11 changed behavior when &lt;code&gt;windowBits&lt;/code&gt; is set to 8 for raw deflate streams. zlib would automatically set &lt;code&gt;windowBits&lt;/code&gt; to 9 if was initially set to 8. Newer versions of zlib will throw an exception, so Node.js restored the original behavior of upgrading a value of 8 to 9, since passing &lt;code&gt;windowBits = 9&lt;/code&gt; to zlib actually results in a compressed stream that effectively uses an 8-bit window only.</source>
          <target state="translated">zLibを1.2.8から1.2.11にアップグレードすると、生の圧縮ストリームで &lt;code&gt;windowBits&lt;/code&gt; が8に設定されている場合の動作が変更されました。ZLIB自動的に設定します &lt;code&gt;windowBits&lt;/code&gt; 最初に例外がスローされZLIBの8新しいバージョンに設定されている場合のNode.js 9に8の値をアップグレードの元の動作を復元して通過するので、9を &lt;code&gt;windowBits = 9&lt;/code&gt; で実際の結果をにzlibします8ビットウィンドウのみを効果的に使用する圧縮ストリーム。</target>
        </trans-unit>
        <trans-unit id="00e6d062dac71b7d742d5963e696914e6babed7f" translate="yes" xml:space="preserve">
          <source>And &lt;code&gt;process.argv&lt;/code&gt;:</source>
          <target state="translated">そして &lt;code&gt;process.argv&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="97fa00e54b04b304f7deb69f8dcf363d2c860ae0" translate="yes" xml:space="preserve">
          <source>And a &lt;code&gt;b.mjs&lt;/code&gt; with</source>
          <target state="translated">そして &lt;code&gt;b.mjs&lt;/code&gt; と</target>
        </trans-unit>
        <trans-unit id="1682ca355307660a3f96e00d5d42a46511a1296d" translate="yes" xml:space="preserve">
          <source>And then the child script, &lt;code&gt;'sub.js'&lt;/code&gt; might look like this:</source>
          <target state="translated">そして、子スクリプト &lt;code&gt;'sub.js'&lt;/code&gt; は次のようになります。</target>
        </trans-unit>
        <trans-unit id="b3c11e24252f2dad6195fd778356100cba5fea75" translate="yes" xml:space="preserve">
          <source>Another common scenario is creating JavaScript functions that wrap C++ functions and returning those back to JavaScript:</source>
          <target state="translated">もう一つの一般的なシナリオは、C++関数をラップして JavaScript 関数を作成し、それを JavaScript に戻すというものです。</target>
        </trans-unit>
        <trans-unit id="2063cb7c40b85070ef82e59ab101799c2f0c63ba" translate="yes" xml:space="preserve">
          <source>Another option is to use the macro &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt;, which will also construct a context-aware addon. Unlike &lt;code&gt;NODE_MODULE()&lt;/code&gt;, which is used to construct an addon around a given addon initializer function, &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt; serves as the declaration of such an initializer to be followed by a function body.</source>
          <target state="translated">もう1つのオプションは、コンテキスト認識アドオンを構築するマクロ &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt; を使用することです。特定のアドオン初期化関数の周囲にアドオンを構築するために使用される &lt;code&gt;NODE_MODULE()&lt;/code&gt; とは異なり、 &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt; は、関数本体が後に続く初期化子の宣言として機能します。</target>
        </trans-unit>
        <trans-unit id="64bee649fb004765d623fe6d5f4bbb2d5c4fca3f" translate="yes" xml:space="preserve">
          <source>Another subtlety with promises is that &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; callbacks are run only on chained promises. That means promises not created by &lt;code&gt;then()&lt;/code&gt;/&lt;code&gt;catch()&lt;/code&gt; will not have the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; callbacks fired on them. For more details see the details of the V8 &lt;a href=&quot;https://docs.google.com/document/d/1rda3yKGHimKIhg5YeoAmCOtyURgsbTH_qaYR79FELlk/edit&quot;&gt;PromiseHooks&lt;/a&gt; API.</source>
          <target state="translated">約束のもう一つの微妙な点である &lt;code&gt;before&lt;/code&gt; と &lt;code&gt;after&lt;/code&gt; コールバックが唯一の連鎖約束で実行されます。つまり、 &lt;code&gt;then()&lt;/code&gt; / &lt;code&gt;catch()&lt;/code&gt; によって作成されていないプロミスは &lt;code&gt;after&lt;/code&gt; コールバックが実行さ &lt;code&gt;before&lt;/code&gt; と後のコールバックを持ちません。詳細については、V8 &lt;a href=&quot;https://docs.google.com/document/d/1rda3yKGHimKIhg5YeoAmCOtyURgsbTH_qaYR79FELlk/edit&quot;&gt;PromiseHooks&lt;/a&gt; APIの詳細を参照してください。</target>
        </trans-unit>
        <trans-unit id="452132444b9c17b1f4a3b5f53e637fb09b4050d7" translate="yes" xml:space="preserve">
          <source>Another way of stating this is that, unlike in synchronous code where there is an ever-growing list of unhandled exceptions, with Promises there can be a growing-and-shrinking list of unhandled rejections.</source>
          <target state="translated">別の言い方をすると、同期コードでは処理されない例外のリストが増え続けるのとは異なり、Promises では処理されない拒絶のリストが増えたり減ったりすることがあるということです。</target>
        </trans-unit>
        <trans-unit id="b5458511eeafd97391af848cefb0b1fefa7408ad" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;'message'&lt;/code&gt; handlers in the subprocess should verify that &lt;code&gt;socket&lt;/code&gt; exists, as the connection may have been closed during the time it takes to send the connection to the child.</source>
          <target state="translated">どれでも &lt;code&gt;'message'&lt;/code&gt; サブプロセス内のハンドラは、ことを確認する必要があります &lt;code&gt;socket&lt;/code&gt; 接続は、それが子供への接続を送信するのにかかる時間の間、閉鎖されている可能性がありとして、存在しています。</target>
        </trans-unit>
        <trans-unit id="647c0f9db6cf1b8dfc296c68d57a3741452eb59a" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;ArrayBuffer&lt;/code&gt;, &lt;code&gt;TypedArray&lt;/code&gt; or &lt;code&gt;DataView&lt;/code&gt; instance may be passed as &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="translated">任意 &lt;code&gt;ArrayBuffer&lt;/code&gt; 、 &lt;code&gt;TypedArray&lt;/code&gt; または &lt;code&gt;DataView&lt;/code&gt; インスタンスをとして渡すことができる &lt;code&gt;buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="abd74ca0dca928aa5f447ed46cb469845febf96f" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;code&gt;TypedArray&lt;/code&gt; or &lt;code&gt;DataView&lt;/code&gt; instance may be passed as &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="translated">任意 &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;code&gt;TypedArray&lt;/code&gt; または &lt;code&gt;DataView&lt;/code&gt; インスタンスをとして渡すことができる &lt;code&gt;buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d37742033adba3790a77e5a50e4d67d2fc75cc7f" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;Promise&lt;/code&gt;s created in VM contexts no longer have a &lt;code&gt;.domain&lt;/code&gt; property. Their handlers are still executed in the proper domain, however, and &lt;code&gt;Promise&lt;/code&gt;s created in the main context still possess a &lt;code&gt;.domain&lt;/code&gt; property.</source>
          <target state="translated">どれ &lt;code&gt;Promise&lt;/code&gt; の作成したVMのコンテキストでは、もはやありません &lt;code&gt;.domain&lt;/code&gt; をプロパティを。ただし、それらのハンドラーは引き続き適切なドメインで実行され、メインコンテキストで作成された &lt;code&gt;Promise&lt;/code&gt; は &lt;code&gt;.domain&lt;/code&gt; プロパティを保持します。</target>
        </trans-unit>
        <trans-unit id="db7f540d80b2762b34586bf802b3e1aef4c2238e" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;QuicStream&lt;/code&gt; instances that are still opened will be abruptly closed.</source>
          <target state="translated">どれ &lt;code&gt;QuicStream&lt;/code&gt; のまだ開かれているインスタンスが突然閉じられます。</target>
        </trans-unit>
        <trans-unit id="d2ee797e574b6c944fe2a4ff3ef79ed761ea396d" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;TypedArray&lt;/code&gt; or &lt;code&gt;DataView&lt;/code&gt; instance may be passed as &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="translated">任意 &lt;code&gt;TypedArray&lt;/code&gt; または &lt;code&gt;DataView&lt;/code&gt; インスタンスをとして渡すことができる &lt;code&gt;buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="987efb4c260bd2f0023d795f7d3bff1fe65839a0" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;process.nextTick&lt;/code&gt;s or Promises scheduled on the microtask queue by JavaScript during the callback are ran before returning back to C/C++.</source>
          <target state="translated">どれ &lt;code&gt;process.nextTick&lt;/code&gt; Sまたはコールバック中にはJavaScriptによってマイクロタスクキュー上でスケジュールの約束は戻ってC / C ++に戻る前に走っています。</target>
        </trans-unit>
        <trans-unit id="53139ef94d4a1932a95d3ff3710e504d2f270c2b" translate="yes" xml:space="preserve">
          <source>Any N-API function call may result in a pending JavaScript exception. This is obviously the case for any function that may cause the execution of JavaScript, but N-API specifies that an exception may be pending on return from any of the API functions.</source>
          <target state="translated">N-API 関数の呼び出しは、保留中の JavaScript 例外を発生させる可能性があります。これは明らかに JavaScript の実行を引き起こす可能性のあるすべての関数に当てはまりますが、N-API は API 関数のいずれかからの戻り時に例外が保留される可能性があることを指定しています。</target>
        </trans-unit>
        <trans-unit id="b79798cf5d9819d0e83cf9a7afc5a59744b1afa9" translate="yes" xml:space="preserve">
          <source>Any N-API function call may result in a pending JavaScript exception. This is the case for any of the API functions, even those that may not cause the execution of JavaScript.</source>
          <target state="translated">N-API関数を呼び出すと、保留中のJavaScriptの例外が発生する可能性があります。これは、JavaScript の実行を引き起こさない可能性のある API 関数であっても、すべての API 関数に当てはまります。</target>
        </trans-unit>
        <trans-unit id="f85017420a48e8df1372d29bc406784baba94cd7" translate="yes" xml:space="preserve">
          <source>Any invalid URL characters appearing in the value assigned the &lt;code&gt;search&lt;/code&gt; property will be &lt;a href=&quot;#whatwg-percent-encoding&quot;&gt;percent-encoded&lt;/a&gt;. The selection of which characters to percent-encode may vary somewhat from what the &lt;a href=&quot;#url_url_parse_urlstring_parsequerystring_slashesdenotehost&quot;&gt;&lt;code&gt;url.parse()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#url_url_format_urlobject&quot;&gt;&lt;code&gt;url.format()&lt;/code&gt;&lt;/a&gt; methods would produce.</source>
          <target state="translated">&lt;code&gt;search&lt;/code&gt; プロパティに割り当てられた値に含まれる無効なURL文字は、&lt;a href=&quot;#whatwg-percent-encoding&quot;&gt;パーセントエンコードされ&lt;/a&gt;ます。パーセントエンコードする文字の選択は、&lt;a href=&quot;#url_url_parse_urlstring_parsequerystring_slashesdenotehost&quot;&gt; &lt;code&gt;url.parse()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#url_url_format_urlobject&quot;&gt; &lt;code&gt;url.format()&lt;/code&gt; &lt;/a&gt;メソッドが生成するものと多少異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="6c0b537637fbe5a97a8ea510f2cc54388523c455" translate="yes" xml:space="preserve">
          <source>Any invalid URL characters appearing in the value assigned the &lt;code&gt;username&lt;/code&gt; property will be &lt;a href=&quot;#whatwg-percent-encoding&quot;&gt;percent-encoded&lt;/a&gt;. The selection of which characters to percent-encode may vary somewhat from what the &lt;a href=&quot;#url_url_parse_urlstring_parsequerystring_slashesdenotehost&quot;&gt;&lt;code&gt;url.parse()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#url_url_format_urlobject&quot;&gt;&lt;code&gt;url.format()&lt;/code&gt;&lt;/a&gt; methods would produce.</source>
          <target state="translated">&lt;code&gt;username&lt;/code&gt; プロパティに割り当てられた値に含まれる無効なURL文字は、&lt;a href=&quot;#whatwg-percent-encoding&quot;&gt;パーセントエンコードされ&lt;/a&gt;ます。パーセントエンコードする文字の選択は、&lt;a href=&quot;#url_url_parse_urlstring_parsequerystring_slashesdenotehost&quot;&gt; &lt;code&gt;url.parse()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#url_url_format_urlobject&quot;&gt; &lt;code&gt;url.format()&lt;/code&gt; &lt;/a&gt;メソッドが生成するものと多少異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="33cefc2f0c821e251811ee0c15f7e371f67bef7f" translate="yes" xml:space="preserve">
          <source>Any invalid exports entries will be ignored. This includes exports not starting with &lt;code&gt;&quot;./&quot;&lt;/code&gt; or a missing trailing &lt;code&gt;&quot;/&quot;&lt;/code&gt; for directory exports.</source>
          <target state="translated">無効なエクスポートエントリは無視されます。これには、 &lt;code&gt;&quot;./&quot;&lt;/code&gt; ないエクスポート、またはディレクトリエクスポートの末尾の &lt;code&gt;&quot;/&quot;&lt;/code&gt; 欠落しているエクスポートが含まれます。</target>
        </trans-unit>
        <trans-unit id="f5bcc1ea4bc6c1ed082dc9c60625ca47a450accf" translate="yes" xml:space="preserve">
          <source>Any non-&lt;code&gt;NULL&lt;/code&gt; data which is passed to this API via the &lt;code&gt;data&lt;/code&gt; field of the &lt;code&gt;napi_property_descriptor&lt;/code&gt; items can be associated with &lt;code&gt;object&lt;/code&gt; and freed whenever &lt;code&gt;object&lt;/code&gt; is garbage-collected by passing both &lt;code&gt;object&lt;/code&gt; and the data to &lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt;&lt;code&gt;napi_add_finalizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">任意の非 &lt;code&gt;NULL&lt;/code&gt; を介して、このAPIに渡されるデータ &lt;code&gt;data&lt;/code&gt; のフィールド &lt;code&gt;napi_property_descriptor&lt;/code&gt; のアイテムを関連付けることができる &lt;code&gt;object&lt;/code&gt; といつでも解放され &lt;code&gt;object&lt;/code&gt; 両方渡すことによってガベージコレクトされ &lt;code&gt;object&lt;/code&gt; およびデータを&lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt; &lt;code&gt;napi_add_finalizer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b71b60681d96bc59be31fce9833b0e59c9bccd7a" translate="yes" xml:space="preserve">
          <source>Any non-&lt;code&gt;NULL&lt;/code&gt; data which is passed to this API via the &lt;code&gt;data&lt;/code&gt; parameter can be associated with the resulting JavaScript function (which is returned in the &lt;code&gt;result&lt;/code&gt; parameter) and freed whenever the function is garbage-collected by passing both the JavaScript function and the data to &lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt;&lt;code&gt;napi_add_finalizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">任意の非 &lt;code&gt;NULL&lt;/code&gt; を介して、このAPIに渡されるデータ &lt;code&gt;data&lt;/code&gt; パラメータが（に返され、得られたJavaScript関数に関連付けることができる &lt;code&gt;result&lt;/code&gt; パラメータ）と機能は、JavaScript関数とデータの両方を通過させることによって、ガベージコレクションであるときはいつでも解放します&lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt; &lt;code&gt;napi_add_finalizer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e4341c0c549edc565f407301b6c4985e11671d8" translate="yes" xml:space="preserve">
          <source>Any non-&lt;code&gt;NULL&lt;/code&gt; data which is passed to this API via the &lt;code&gt;data&lt;/code&gt; parameter or via the &lt;code&gt;data&lt;/code&gt; field of the &lt;code&gt;napi_property_descriptor&lt;/code&gt; array items can be associated with the resulting JavaScript constructor (which is returned in the &lt;code&gt;result&lt;/code&gt; parameter) and freed whenever the class is garbage-collected by passing both the JavaScript function and the data to &lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt;&lt;code&gt;napi_add_finalizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">任意の非 &lt;code&gt;NULL&lt;/code&gt; を介して、このAPIに渡されるデータ &lt;code&gt;data&lt;/code&gt; パラメータまたは介して &lt;code&gt;data&lt;/code&gt; のフィールド &lt;code&gt;napi_property_descriptor&lt;/code&gt; のアレイ項目が（に返され、得られたJavaScriptのコンストラクタと関連付けることができ &lt;code&gt;result&lt;/code&gt; パラメータ）とクラスがgarbage-あるときはいつでも解放しますJavaScript関数とデータの両方を&lt;a href=&quot;#n_api_napi_add_finalizer&quot;&gt; &lt;code&gt;napi_add_finalizer&lt;/code&gt; に&lt;/a&gt;渡すことによって収集されます。</target>
        </trans-unit>
        <trans-unit id="84a940bb688d5ab6ef1950733c5070c50c4bf187" translate="yes" xml:space="preserve">
          <source>Any number of custom conditions can be set with repeat flags.</source>
          <target state="translated">リピートフラグで任意の数のカスタム条件を設定することができます。</target>
        </trans-unit>
        <trans-unit id="bf59bed5f574b76e20145839cbd960bf2bbaa2c0" translate="yes" xml:space="preserve">
          <source>Any number of custom string condition names are permitted.</source>
          <target state="translated">任意の数のカスタム文字列条件名が許可されています。</target>
        </trans-unit>
        <trans-unit id="ef288d26c0e39beb1db936df3b2f32b4020aa747" translate="yes" xml:space="preserve">
          <source>Any plugins that attach to the package&amp;rsquo;s singleton would need to separately attach to both the CommonJS and ES module singletons.</source>
          <target state="translated">パッケージのシングルトンに接続するプラグインは、CommonJSとESモジュールの両方のシングルトンに個別に接続する必要があります。</target>
        </trans-unit>
        <trans-unit id="73a727689faff81bf2a17c199450888eb6c590f0" translate="yes" xml:space="preserve">
          <source>Any readable file descriptor, not necessarily for a regular file, is supported now.</source>
          <target state="translated">通常のファイルに限らず、任意の可読ファイル記述子がサポートされるようになりました。</target>
        </trans-unit>
        <trans-unit id="b22e6a46bdfd55ba2aa0919e34f00684aa3e276f" translate="yes" xml:space="preserve">
          <source>Any readable file, not necessarily a regular file, is supported now.</source>
          <target state="translated">通常のファイルでなくても、読めるファイルであれば何でもサポートされています。</target>
        </trans-unit>
        <trans-unit id="29ad5c9f4eb31a79a37b04a2ad79efddaa6cfb3e" translate="yes" xml:space="preserve">
          <source>Any settings changes only affect future calls to &lt;a href=&quot;#cluster_cluster_fork_env&quot;&gt;&lt;code&gt;.fork()&lt;/code&gt;&lt;/a&gt; and have no effect on workers that are already running.</source>
          <target state="translated">設定の変更は、&lt;a href=&quot;#cluster_cluster_fork_env&quot;&gt; &lt;code&gt;.fork()&lt;/code&gt; の&lt;/a&gt;今後の呼び出しにのみ影響し、すでに実行されているワーカーには影響しません。</target>
        </trans-unit>
        <trans-unit id="818029576311bb510aea405d8af84fb06b2a3ef6" translate="yes" xml:space="preserve">
          <source>Any settings changes only affect future calls to &lt;code&gt;.fork()&lt;/code&gt; and have no effect on workers that are already running.</source>
          <target state="translated">設定の変更は、将来の &lt;code&gt;.fork()&lt;/code&gt; の呼び出しにのみ影響し、すでに実行中のワーカーには影響しません。</target>
        </trans-unit>
        <trans-unit id="086f6b403d4a50e709d7333c42d7e59d2ae3e96e" translate="yes" xml:space="preserve">
          <source>Any specified &lt;code&gt;FileHandle&lt;/code&gt; has to support reading.</source>
          <target state="translated">指定された &lt;code&gt;FileHandle&lt;/code&gt; は、読み取りをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="f583facec8aebea8206ac5d519e4fe6a6f4a03d3" translate="yes" xml:space="preserve">
          <source>Any specified &lt;code&gt;FileHandle&lt;/code&gt; has to support writing.</source>
          <target state="translated">指定された &lt;code&gt;FileHandle&lt;/code&gt; は、書き込みをサポートする必要があります。</target>
        </trans-unit>
        <trans-unit id="a8a24fd396ece2a0faf7e58fc0b99ffc56f0fe3f" translate="yes" xml:space="preserve">
          <source>Any specified file descriptor has to support reading.</source>
          <target state="translated">指定されたファイルディスクリプタは読み込みに対応している必要があります。</target>
        </trans-unit>
        <trans-unit id="972271aba1c4e163bf42812ad1009f80f68d559f" translate="yes" xml:space="preserve">
          <source>Any specifier string for which resolution is attempted and that is not listed in the dependencies results in an error according to the policy.</source>
          <target state="translated">解決が試みられ、依存関係にリストされていない指定文字列は、ポリシーに従ってエラーとなります。</target>
        </trans-unit>
        <trans-unit id="9087fb8a7f21f4d737d5e8de7a92e255f7cce8b3" translate="yes" xml:space="preserve">
          <source>Any specifier string that is &lt;code&gt;require()&lt;/code&gt;ed and not listed in the dependencies will result in an error according to the policy.</source>
          <target state="translated">&lt;code&gt;require()&lt;/code&gt; されていて、依存関係にリストされていない指定子文字列は、ポリシーに従ってエラーになります。</target>
        </trans-unit>
        <trans-unit id="3e45c7483390d6f6e779f68ded599f2da9295662" translate="yes" xml:space="preserve">
          <source>Any time an &lt;code&gt;Error&lt;/code&gt; object is routed through a domain, a few extra fields are added to it.</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; オブジェクトがドメインを経由するたびに、いくつかのフィールドが追加されます。</target>
        </trans-unit>
        <trans-unit id="2d6c4b0264c6ae8f3ac16fb7f4789ba95a8d8a9e" translate="yes" xml:space="preserve">
          <source>Any use of the JavaScript &lt;code&gt;throw&lt;/code&gt; mechanism will raise an exception that &lt;em&gt;must&lt;/em&gt; be handled using &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; or the Node.js process will exit immediately.</source>
          <target state="translated">JavaScript &lt;code&gt;throw&lt;/code&gt; メカニズムを使用すると、 &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; を使用して処理する&lt;em&gt;必要&lt;/em&gt;がある例外が発生するか、Node.jsプロセスがすぐに終了します。</target>
        </trans-unit>
        <trans-unit id="9792aabb6a042539f039ce61b4052386400e3e32" translate="yes" xml:space="preserve">
          <source>Apart from the debugger, various V8 Profilers are available through the DevTools protocol.</source>
          <target state="translated">デバッガとは別に、DevToolsプロトコルを介して様々なV8プロファイラが利用できます。</target>
        </trans-unit>
        <trans-unit id="9101900f5bcd15c384db52a54e7b3cb3dd6a21a4" translate="yes" xml:space="preserve">
          <source>Append a new name-value pair to the query string.</source>
          <target state="translated">新しい名前と値のペアをクエリ文字列に追加します。</target>
        </trans-unit>
        <trans-unit id="7f80fbc082b95cbd92edc2ffd0f1f111c7c6d25f" translate="yes" xml:space="preserve">
          <source>Applications running in Node.js will generally experience four categories of errors:</source>
          <target state="translated">Node.jsで実行されているアプリケーションは、一般的に4つのカテゴリーのエラーを経験します。</target>
        </trans-unit>
        <trans-unit id="ecfcbffbbe3ee7ba37594d932db7c2aa3c1f766c" translate="yes" xml:space="preserve">
          <source>Applications that are either writing data to or consuming data from a stream are not required to implement the stream interfaces directly and will generally have no reason to call &lt;code&gt;require('stream')&lt;/code&gt;.</source>
          <target state="translated">ストリームにデータを書き込んだり、ストリームからデータを消費したりするアプリケーションは、ストリームインターフェイスを直接実装する必要はなく、通常 &lt;code&gt;require('stream')&lt;/code&gt; を呼び出す理由はありません。</target>
        </trans-unit>
        <trans-unit id="d70e34d28832a1567a71e9e777653995535deb8c" translate="yes" xml:space="preserve">
          <source>Applies multiple bug workarounds within OpenSSL. See &lt;a href=&quot;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&quot;&gt;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&lt;/a&gt; for detail.</source>
          <target state="translated">OpenSSL内で複数のバグ回避策を適用します。詳細については、&lt;a href=&quot;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&quot;&gt;https：//www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4826fb7f9ba94b55bdf513f44bf1928a495a61be" translate="yes" xml:space="preserve">
          <source>Approach #1: Use an ES module wrapper</source>
          <target state="translated">アプローチ1:ESモジュールのラッパーを使用する</target>
        </trans-unit>
        <trans-unit id="36ec3427f062706009dcac36a47e866c3a5f7248" translate="yes" xml:space="preserve">
          <source>Approach #2: Isolate state</source>
          <target state="translated">アプローチ2:状態を分離する</target>
        </trans-unit>
        <trans-unit id="05c2ecceedbb3676ba22feda48fe044f7ad13da2" translate="yes" xml:space="preserve">
          <source>Arguments parsing for Node.js &lt;a href=&quot;cli&quot;&gt;CLI options&lt;/a&gt;,</source>
          <target state="translated">Node.js &lt;a href=&quot;cli&quot;&gt;CLIオプションの&lt;/a&gt;引数解析、</target>
        </trans-unit>
        <trans-unit id="ebbc578afdf322ff682f84b74e88081b7c51adb5" translate="yes" xml:space="preserve">
          <source>Array fallback support is provided for exports, similarly to import maps in order to be forward-compatible with fallback workflows in future:</source>
          <target state="translated">将来的にフォールバックワークフローとの互換性を保つために、インポートマップと同様にエクスポートにも配列フォールバックのサポートが提供されています。</target>
        </trans-unit>
        <trans-unit id="05fd7fe7245edc46acd4190581f9b48212b293f9" translate="yes" xml:space="preserve">
          <source>ArrayBuffers now also show their binary contents.</source>
          <target state="translated">ArrayBuffersもバイナリの内容を表示するようになりました。</target>
        </trans-unit>
        <trans-unit id="9e67ec885b4b216999aa38417b40b9b22ba7be16" translate="yes" xml:space="preserve">
          <source>As CCM processes the whole message at once, &lt;code&gt;update()&lt;/code&gt; can only be called once.</source>
          <target state="translated">CCMはメッセージ全体を一度に処理するため、 &lt;code&gt;update()&lt;/code&gt; は一度しか呼び出せません。</target>
        </trans-unit>
        <trans-unit id="bb4c3e05dd1e4e6e4215b9b7958808323444b6a0" translate="yes" xml:space="preserve">
          <source>As N-API calls are made, handles to objects in the heap for the underlying VM may be returned as &lt;code&gt;napi_values&lt;/code&gt;. These handles must hold the objects 'live' until they are no longer required by the native code, otherwise the objects could be collected before the native code was finished using them.</source>
          <target state="translated">N-API呼び出しが行われると、基になるVMのヒープ内のオブジェクトへのハンドルが &lt;code&gt;napi_values&lt;/code&gt; として返される場合があります。これらのハンドルは、ネイティブコードで必要とされなくなるまでオブジェクトを「ライブ」に保持する必要があります。そうしないと、ネイティブコードがオブジェクトの使用を完了する前にオブジェクトが収集される可能性があります。</target>
        </trans-unit>
        <trans-unit id="db28e83227a15b74952266fb23d62f73dacbe341" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; that is both readable and writable, where data is written to produce a computed HMAC digest on the readable side, or</source>
          <target state="translated">読み取り可能で書き込み可能な&lt;a href=&quot;stream&quot;&gt;ストリーム&lt;/a&gt;として、読み取り可能な側で計算されたHMACダイジェストを生成するためにデータが書き込まれる、または</target>
        </trans-unit>
        <trans-unit id="403e4e4b5bba26b7f611afd2c7e889715289f136" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; that is both readable and writable, where data is written to produce a computed hash digest on the readable side, or</source>
          <target state="translated">読み取りと書き込みの両方が可能な&lt;a href=&quot;stream&quot;&gt;ストリーム&lt;/a&gt;として、読み取り可能な側で計算されたハッシュダイジェストを生成するためにデータが書き込まれる、または</target>
        </trans-unit>
        <trans-unit id="015221db5afe28932e1236c8b140c5f28f25468b" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; that is both readable and writable, where plain encrypted data is written to produce unencrypted data on the readable side, or</source>
          <target state="translated">読み取りと書き込みの両方が可能な&lt;a href=&quot;stream&quot;&gt;ストリーム&lt;/a&gt;として、プレーンな暗号化データが書き込まれ、読み取り側で暗号化されていないデータが生成されます。</target>
        </trans-unit>
        <trans-unit id="c5b8647298ff710d8d93d34f4c639461d091a5f9" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; that is both readable and writable, where plain unencrypted data is written to produce encrypted data on the readable side, or</source>
          <target state="translated">読み取りと書き込みの両方が可能な&lt;a href=&quot;stream&quot;&gt;ストリーム&lt;/a&gt;として、プレーンな暗号化されていないデータが書き込まれ、読み取り側で暗号化されたデータが生成されます。</target>
        </trans-unit>
        <trans-unit id="6b5fed1d45eebfac25d71dd1fe587cdd9807849f" translate="yes" xml:space="preserve">
          <source>As a &lt;a href=&quot;stream#stream_duplex_and_transform_streams&quot;&gt;Duplex&lt;/a&gt; stream, &lt;code&gt;process.stdin&lt;/code&gt; can also be used in &quot;old&quot; mode that is compatible with scripts written for Node.js prior to v0.10. For more information see &lt;a href=&quot;stream#stream_compatibility_with_older_node_js_versions&quot;&gt;Stream compatibility&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stream#stream_duplex_and_transform_streams&quot;&gt;Duplex&lt;/a&gt;ストリームとして、 &lt;code&gt;process.stdin&lt;/code&gt; は、v0.10より前のNode.js用に書かれたスクリプトと互換性のある「古い」モードでも使用できます。詳細については、&lt;a href=&quot;stream#stream_compatibility_with_older_node_js_versions&quot;&gt;ストリームの互換性を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="410e9b2d10ecce76dabfb86570274d72595219f8" translate="yes" xml:space="preserve">
          <source>As a best practice, listeners should always be added for the &lt;code&gt;'error'&lt;/code&gt; events.</source>
          <target state="translated">ベストプラクティスとして、リスナーは常に &lt;code&gt;'error'&lt;/code&gt; イベントに追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="3ee474e3e0f75aba8a0736f69b8fe3ae0054fcc7" translate="yes" xml:space="preserve">
          <source>As a best practice, warnings should be emitted only once per process. To do so, it is recommended to place the &lt;code&gt;emitWarning()&lt;/code&gt; behind a simple boolean flag as illustrated in the example below:</source>
          <target state="translated">ベストプラクティスとして、警告はプロセスごとに1回だけ発行する必要があります。そのためには、次の例に示すように、 &lt;code&gt;emitWarning()&lt;/code&gt; を単純なブールフラグの後ろに配置することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="b8c701dbcff9bac3483fdd11577374289be7a0fa" translate="yes" xml:space="preserve">
          <source>As a last resort, package encapsulation can be disabled entirely by creating an export for the root of the package &lt;code&gt;&quot;./*&quot;: &quot;./*&quot;&lt;/code&gt;. This exposes every file in the package at the cost of disabling the encapsulation and potential tooling benefits this provides. As the ES Module loader in Node.js enforces the use of &lt;a href=&quot;esm#esm_mandatory_file_extensions&quot;&gt;the full specifier path&lt;/a&gt;, exporting the root rather than being explicit about entry is less expressive than either of the prior examples. Not only is encapsulation lost but module consumers are unable to &lt;code&gt;import feature from 'my-mod/feature'&lt;/code&gt; as they need to provide the full path &lt;code&gt;import feature from 'my-mod/feature/index.js&lt;/code&gt;.</source>
          <target state="translated">最後の手段として、パッケージのルート &lt;code&gt;&quot;./*&quot;: &quot;./*&quot;&lt;/code&gt; エクスポートを作成することにより、パッケージのカプセル化を完全に無効にすることができます。これにより、パッケージ内のすべてのファイルが公開されますが、カプセル化が無効になり、ツールによる潜在的なメリットが得られます。 Node.jsのESモジュールローダー&lt;a href=&quot;esm#esm_mandatory_file_extensions&quot;&gt;は完全な指定子パスの&lt;/a&gt;使用を強制するため、エントリについて明示的ではなくルートをエクスポートすることは、前の例のいずれよりも表現力が低下します。カプセル化が失われるだけでなく、モジュールコンシューマーは &lt;code&gt;import feature from 'my-mod/feature/index.js&lt;/code&gt; フルパスインポート機能を提供する必要があるため、 &lt;code&gt;import feature from 'my-mod/feature'&lt;/code&gt; をインポートできません。</target>
        </trans-unit>
        <trans-unit id="7ed469b0934ed8a0d4b6a9b659491d654e201e02" translate="yes" xml:space="preserve">
          <source>As a legacy interface, it is possible to create new instances of the &lt;code&gt;crypto.Certificate&lt;/code&gt; class as illustrated in the examples below.</source>
          <target state="translated">レガシーインターフェイスとして、以下の例に示すように、 &lt;code&gt;crypto.Certificate&lt;/code&gt; クラスの新しいインスタンスを作成することができます。</target>
        </trans-unit>
        <trans-unit id="893a0e7985d40d06428253f41d17249252e5e982" translate="yes" xml:space="preserve">
          <source>As a result, these functions cannot have the same negative impact on other processing that happens on libuv's threadpool that &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt; can have.</source>
          <target state="translated">その結果、これらの関数は、&lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt;が持つ可能性があるlibuvのスレッドプールで発生する他の処理に同じ悪影響を与えることはできません。</target>
        </trans-unit>
        <trans-unit id="96a263bf9c3a3e1471b7d6a5199c7e547aff51ba" translate="yes" xml:space="preserve">
          <source>As a still supported legacy interface, it is possible (but not recommended) to create new instances of the &lt;code&gt;crypto.Certificate&lt;/code&gt; class as illustrated in the examples below.</source>
          <target state="translated">引き続きサポートされているレガシーインターフェイスとして、次の例に示すように、 &lt;code&gt;crypto.Certificate&lt;/code&gt; クラスの新しいインスタンスを作成することができます（ただし、お勧めしません）。</target>
        </trans-unit>
        <trans-unit id="0f7e9db2a0d557344c2fb31e8cce5892ec260a7d" translate="yes" xml:space="preserve">
          <source>As a user is typing input into the REPL prompt, pressing &lt;strong&gt;Enter&lt;/strong&gt; will send the current line of input to the &lt;code&gt;eval&lt;/code&gt; function. In order to support multi-line input, the eval function can return an instance of &lt;code&gt;repl.Recoverable&lt;/code&gt; to the provided callback function:</source>
          <target state="translated">ユーザーがREPLプロンプトに入力を入力しているときに、&lt;strong&gt;Enterキー&lt;/strong&gt;を押すと、現在の入力行が &lt;code&gt;eval&lt;/code&gt; 関数に送信されます。複数行の入力をサポートするために、eval関数は &lt;code&gt;repl.Recoverable&lt;/code&gt; のインスタンスを提供されたコールバック関数に返すことができます。</target>
        </trans-unit>
        <trans-unit id="e23817098cad54d24748fb2d93a355688874a756" translate="yes" xml:space="preserve">
          <source>As a user is typing input into the REPL prompt, pressing the &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt; key will send the current line of input to the &lt;code&gt;eval&lt;/code&gt; function. In order to support multi-line input, the eval function can return an instance of &lt;code&gt;repl.Recoverable&lt;/code&gt; to the provided callback function:</source>
          <target state="translated">ユーザーがREPLプロンプトに入力を入力しているときに &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt; キーを押すと、現在の入力行が &lt;code&gt;eval&lt;/code&gt; 関数に送信されます。複数行入力をサポートするために、eval関数は &lt;code&gt;repl.Recoverable&lt;/code&gt; のインスタンスを提供されたコールバック関数に返すことができます。</target>
        </trans-unit>
        <trans-unit id="c6fccee8b9bf59fc86ce6a5d4bb65cd0cfc15faa" translate="yes" xml:space="preserve">
          <source>As a writable &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; where written data is used to validate against the supplied signature, or</source>
          <target state="translated">提供された署名に対して検証するために書き込まれたデータが使用される書き込み可能な&lt;a href=&quot;stream&quot;&gt;ストリーム&lt;/a&gt;として、または</target>
        </trans-unit>
        <trans-unit id="7cde42be763a9088ab70ccb8053a1f89a2cbb50d" translate="yes" xml:space="preserve">
          <source>As a writable &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt;, where data to be signed is written and the &lt;a href=&quot;#crypto_sign_sign_privatekey_outputencoding&quot;&gt;&lt;code&gt;sign.sign()&lt;/code&gt;&lt;/a&gt; method is used to generate and return the signature, or</source>
          <target state="translated">書き込み可能な&lt;a href=&quot;stream&quot;&gt;ストリーム&lt;/a&gt;として。署名するデータが書き込まれ、&lt;a href=&quot;#crypto_sign_sign_privatekey_outputencoding&quot;&gt; &lt;code&gt;sign.sign()&lt;/code&gt; &lt;/a&gt;メソッドを使用して署名が生成および返されます。または</target>
        </trans-unit>
        <trans-unit id="3e8cba4404bac289608092f10fc7651b5ba03b91" translate="yes" xml:space="preserve">
          <source>As an alternative, use one of the following methods of constructing &lt;code&gt;Buffer&lt;/code&gt; objects:</source>
          <target state="translated">別の方法として、以下のいずれかの方法で &lt;code&gt;Buffer&lt;/code&gt; オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="3789d6bcfed429e3819b4fe01b38622b383fbf67" translate="yes" xml:space="preserve">
          <source>As can be seen from the last example of the Module Namespace Exotic Object being logged, the &lt;code&gt;name&lt;/code&gt; export is copied off of the &lt;code&gt;module.exports&lt;/code&gt; object and set directly on the ES module namespace when the module is imported.</source>
          <target state="translated">ログに記録されているモジュール名前空間エキゾチックオブジェクトの最後の例からわかるように、 &lt;code&gt;name&lt;/code&gt; exportは &lt;code&gt;module.exports&lt;/code&gt; オブジェクトからコピーされ、モジュールのインポート時にESモジュール名前空間に直接設定されます。</target>
        </trans-unit>
        <trans-unit id="64039998e2554e82f38720b063b23f0119dbc6a6" translate="yes" xml:space="preserve">
          <source>As illustrated in the example, &lt;code&gt;executionAsyncId()&lt;/code&gt; and &lt;code&gt;execution&lt;/code&gt; each specify the value of the current execution context; which is delineated by calls to &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt;.</source>
          <target state="translated">例に示すように、 &lt;code&gt;executionAsyncId()&lt;/code&gt; および &lt;code&gt;execution&lt;/code&gt; はそれぞれ、現在の実行コンテキストの値を指定します。これは &lt;code&gt;before&lt;/code&gt; と &lt;code&gt;after&lt;/code&gt; の呼び出しによって示されます。</target>
        </trans-unit>
        <trans-unit id="3918c9c0d50d8a4f8d9aaf017bcc2ec5ad9770f5" translate="yes" xml:space="preserve">
          <source>As object handles are returned they are associated with a 'scope'. The lifespan for the default scope is tied to the lifespan of the native method call. The result is that, by default, handles remain valid and the objects associated with these handles will be held live for the lifespan of the native method call.</source>
          <target state="translated">オブジェクトハンドルが返されると、それらは「スコープ」に関連付けられます。デフォルトのスコープの有効期間は、ネイティブメソッドコールの有効期間に関連付けられています。その結果、デフォルトではハンドルは有効なままであり、これらのハンドルに関連付けられたオブジェクトはネイティブメソッドコールの寿命まで保持されることになります。</target>
        </trans-unit>
        <trans-unit id="9834fff63d7588efa59326159f69c956659559ab" translate="yes" xml:space="preserve">
          <source>As of Node.js 8.0.0, the handlers of Promises are run inside the domain in which the call to &lt;code&gt;.then()&lt;/code&gt; or &lt;code&gt;.catch()&lt;/code&gt; itself was made:</source>
          <target state="translated">Node.js 8.0.0以降、 &lt;code&gt;.catch()&lt;/code&gt; のハンドラーは、 &lt;code&gt;.then()&lt;/code&gt; または.catch（）自体が呼び出されたドメイン内で実行されます。</target>
        </trans-unit>
        <trans-unit id="a38a8f139e9ec9cfb2265d445f1c3261cad7bf9b" translate="yes" xml:space="preserve">
          <source>As of Node.js 8.0.0, the handlers of promises are run inside the domain in which the call to &lt;code&gt;.then()&lt;/code&gt; or &lt;code&gt;.catch()&lt;/code&gt; itself was made:</source>
          <target state="translated">Node.js 8.0.0以降、 &lt;code&gt;.catch()&lt;/code&gt; のハンドラーは、 &lt;code&gt;.then()&lt;/code&gt; または.catch（）自体の呼び出しが行われたドメイン内で実行されます。</target>
        </trans-unit>
        <trans-unit id="0189f8b9225df62e106eca8c4f6f6f1b44cad42e" translate="yes" xml:space="preserve">
          <source>As of Node.js v0.10, &lt;a href=&quot;#dgram_socket_bind_options_callback&quot;&gt;&lt;code&gt;dgram.Socket#bind()&lt;/code&gt;&lt;/a&gt; changed to an asynchronous execution model. Legacy code would use synchronous behavior:</source>
          <target state="translated">Node.js v0.10以降、&lt;a href=&quot;#dgram_socket_bind_options_callback&quot;&gt; &lt;code&gt;dgram.Socket#bind()&lt;/code&gt; &lt;/a&gt;は非同期実行モデルに変更されました。レガシーコードは同期動作を使用します：</target>
        </trans-unit>
        <trans-unit id="3ac9c4c0bb4477aaaa1e3745bbccb9965faf1342" translate="yes" xml:space="preserve">
          <source>As of v10.0.0, a deprecation warning is printed at runtime when &lt;code&gt;--pending-deprecation&lt;/code&gt; is used or when the calling code is outside &lt;code&gt;node_modules&lt;/code&gt; in order to better target developers, rather than users.</source>
          <target state="translated">v10.0.0以降、 &lt;code&gt;--pending-deprecation&lt;/code&gt; が使用されている場合、または呼び出しコードが &lt;code&gt;node_modules&lt;/code&gt; の外部にある場合、ユーザーではなく開発者をターゲットにするために、実行時に非推奨の警告が出力されます。</target>
        </trans-unit>
        <trans-unit id="0b9d71e38a7bbeb1c1a1f21d7988c27dc80d3758" translate="yes" xml:space="preserve">
          <source>As soon as the &lt;code&gt;QuicClientSession&lt;/code&gt; is created, the &lt;code&gt;address&lt;/code&gt; provided in the connect options will be resolved to an IP address (if necessary), and the TLS 1.3 handshake will begin. The &lt;code&gt;QuicClientSession&lt;/code&gt; cannot be used to exchange application data until after the &lt;code&gt;'secure'&lt;/code&gt; event has been emitted by the &lt;code&gt;QuicClientSession&lt;/code&gt; object, signaling the completion of the TLS 1.3 handshake.</source>
          <target state="translated">&lt;code&gt;QuicClientSession&lt;/code&gt; が作成されるとすぐに、接続オプションで &lt;code&gt;address&lt;/code&gt; されたアドレスがIPアドレスに解決され（必要な場合）、TLS1.3ハンドシェイクが開始されます。 &lt;code&gt;QuicClientSession&lt;/code&gt; は後になるまで交換アプリケーション・データに使用することができない &lt;code&gt;'secure'&lt;/code&gt; イベントにより放出された &lt;code&gt;QuicClientSession&lt;/code&gt; のTLS 1.3ハンドシェイクの完了をシグナリング、オブジェクト。</target>
        </trans-unit>
        <trans-unit id="962c0a4bd1f3b3a805e3165b8c265f126b2e5613" translate="yes" xml:space="preserve">
          <source>As standalone program:</source>
          <target state="translated">スタンドアロンプログラムとして。</target>
        </trans-unit>
        <trans-unit id="b393c24299a99bbfd8f45a67305f938ccbd322d9" translate="yes" xml:space="preserve">
          <source>As suggested by the names, a bidirectional stream allows data to be sent on a stream in both directions, by both client and server, regardless of which peer opened the stream. A unidirectional stream can be written to only by the QuicSession that opened it.</source>
          <target state="translated">名前が示唆するように、双方向ストリームでは、どちらのピアがストリームを開いたかに関係なく、クライアントとサーバの両方でストリーム上のデータを双方向に送信することができます。一方向性ストリームは、そのストリームを開いた QuicSession のみが書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="e5fc8eed674c2cbb60f3a625bde43e1979c80ee0" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;Finished&lt;/code&gt; messages are message digests of the complete handshake (with a total of 192 bits for TLS 1.0 and more for SSL 3.0), they can be used for external authentication procedures when the authentication provided by SSL/TLS is not desired or is not enough.</source>
          <target state="translated">&lt;code&gt;Finished&lt;/code&gt; メッセージが（TLS 1.0よりSSL 3.0のための192ビットの合計）は、完全なハンドシェイクのメッセージダイジェストであるSSL / TLSによって提供される認証が望まれていないか、ない場合には、それらは外部の認証手順のために使用することができます足りる。</target>
        </trans-unit>
        <trans-unit id="88bf2c870d425e8691eb66779c8b4b9673081e4d" translate="yes" xml:space="preserve">
          <source>As the original API was undocumented and not generally useful for non-internal code, no replacement API is provided.</source>
          <target state="translated">元のAPIは文書化されておらず、非内部コードでは一般的に有用ではないため、代替APIは提供されていません。</target>
        </trans-unit>
        <trans-unit id="7ce5ed7b5a829f51c0fead622120a3acc5c7dea0" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;modules#modules_accessing_the_main_module&quot;&gt;&lt;code&gt;require.main&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;process.mainModule&lt;/code&gt; will be &lt;code&gt;undefined&lt;/code&gt; if there is no entry script.</source>
          <target state="translated">&lt;a href=&quot;modules#modules_accessing_the_main_module&quot;&gt; &lt;code&gt;require.main&lt;/code&gt; &lt;/a&gt;と同様に、エントリスクリプトがない場合、 &lt;code&gt;process.mainModule&lt;/code&gt; は &lt;code&gt;undefined&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="3e93aac3acee4e879ccffb8b3d225e86c77d9862" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;import&lt;/code&gt; statements, for ES module usage the value of &lt;code&gt;&quot;main&quot;&lt;/code&gt; must be a full path including extension: &lt;code&gt;&quot;./index.mjs&quot;&lt;/code&gt;, not &lt;code&gt;&quot;./index&quot;&lt;/code&gt;.</source>
          <target state="translated">同じように &lt;code&gt;import&lt;/code&gt; 文、ESモジュールの使用のための値は &lt;code&gt;&quot;main&quot;&lt;/code&gt; 拡張子を含む完全なパスでなければなりません： &lt;code&gt;&quot;./index.mjs&quot;&lt;/code&gt; ではなく、 &lt;code&gt;&quot;./index&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f13dc0c86f08a261569b0c58c81b9883fa1e85d" translate="yes" xml:space="preserve">
          <source>As with checking for the server &lt;a href=&quot;#tls_event_secureconnection&quot;&gt;&lt;code&gt;'secureConnection'&lt;/code&gt;&lt;/a&gt; event, &lt;code&gt;pair.cleartext.authorized&lt;/code&gt; should be inspected to confirm whether the certificate used is properly authorized.</source>
          <target state="translated">サーバーの&lt;a href=&quot;#tls_event_secureconnection&quot;&gt; &lt;code&gt;'secureConnection'&lt;/code&gt; &lt;/a&gt;イベントのチェックと同様に、 &lt;code&gt;pair.cleartext.authorized&lt;/code&gt; を検査して、使用されている証明書が適切に承認されているかどうかを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="17e9a2d1a700b22e6cff9301b1fda4cb8d56eb90" translate="yes" xml:space="preserve">
          <source>As with client &lt;code&gt;QuicSession&lt;/code&gt; instances, the &lt;code&gt;QuicServerSession&lt;/code&gt; cannot be used to exchange application data until the &lt;code&gt;'secure'&lt;/code&gt; event has been emitted.</source>
          <target state="translated">クライアントの &lt;code&gt;QuicSession&lt;/code&gt; インスタンスと同様に、 &lt;code&gt;'secure'&lt;/code&gt; イベントが &lt;code&gt;QuicServerSession&lt;/code&gt; されるまで、QuicServerSessionを使用してアプリケーションデータを交換することはできません。</target>
        </trans-unit>
        <trans-unit id="a27e22e1bfa7c26e458e7a06c470e2e3ee565556" translate="yes" xml:space="preserve">
          <source>As with the previous approach, a variant of this approach not requiring conditional exports for consumers could be to add an export, e.g. &lt;code&gt;&quot;./module&quot;&lt;/code&gt;, to point to an all-ES module-syntax version of the package:</source>
          <target state="translated">前のアプローチと同様に、コンシューマーに条件付きエクスポートを必要としないこのアプローチの変形は、パッケージのすべてのESモジュール構文バージョンを指すようにエクスポート（ &lt;code&gt;&quot;./module&quot;&lt;/code&gt; など）を追加することです。</target>
        </trans-unit>
        <trans-unit id="844c47fceee9b1ccf42676bdd38c9689f6ce6c37" translate="yes" xml:space="preserve">
          <source>Aside from writing a stateless package (if JavaScript&amp;rsquo;s &lt;code&gt;Math&lt;/code&gt; were a package, for example, it would be stateless as all of its methods are static), there are some ways to isolate state so that it&amp;rsquo;s shared between the potentially loaded CommonJS and ES module instances of the package:</source>
          <target state="translated">ステートレスパッケージを作成する以外に（たとえば、JavaScriptの &lt;code&gt;Math&lt;/code&gt; がパッケージの場合、すべてのメソッドが静的であるためステートレスになります）、ロードされる可能性のあるCommonJSモジュールインスタンスとESモジュールインスタンス間で共有されるように状態を分離する方法がいくつかあります。パッケージの：</target>
        </trans-unit>
        <trans-unit id="4141add45a26459c4bd39909388482311f6fe29a" translate="yes" xml:space="preserve">
          <source>Assert</source>
          <target state="translated">Assert</target>
        </trans-unit>
        <trans-unit id="37ea4209ca4e870468d734a52d1e7e3c8af0584a" translate="yes" xml:space="preserve">
          <source>Assert: &lt;em&gt;resolved&lt;/em&gt; is a String.</source>
          <target state="translated">アサート：&lt;em&gt;解決済み&lt;/em&gt;は文字列です。</target>
        </trans-unit>
        <trans-unit id="73315c4aa74966395a159de06898a7604cca5821" translate="yes" xml:space="preserve">
          <source>Assert: &lt;em&gt;resolvedTarget&lt;/em&gt; is contained in &lt;em&gt;packageURL&lt;/em&gt;.</source>
          <target state="translated">アサート：&lt;em&gt;resolvedTarget&lt;/em&gt;は&lt;em&gt;packageURLに&lt;/em&gt;含まれてい&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0b27249c08b015c5065fe1cbda4e800600527de9" translate="yes" xml:space="preserve">
          <source>Assert: &lt;em&gt;specifier&lt;/em&gt; begins with &lt;em&gt;&quot;#&quot;&lt;/em&gt;.</source>
          <target state="translated">アサート：&lt;em&gt;指定子&lt;/em&gt;は&lt;em&gt;「＃」で&lt;/em&gt;始まります。</target>
        </trans-unit>
        <trans-unit id="882349c7f5112244b43b6c72ec0991bbb983fb67" translate="yes" xml:space="preserve">
          <source>Assert: &lt;em&gt;url&lt;/em&gt; corresponds to an existing file.</source>
          <target state="translated">アサート：&lt;em&gt;URL&lt;/em&gt;は既存のファイルに対応します。</target>
        </trans-unit>
        <trans-unit id="ee8316c0bc9494b895cb21ebd8868a9b57e28863" translate="yes" xml:space="preserve">
          <source>Assertion Testing</source>
          <target state="translated">アサーションテスト</target>
        </trans-unit>
        <trans-unit id="053801980a55516453a16e9fc7c927980eae77e7" translate="yes" xml:space="preserve">
          <source>Assertion testing</source>
          <target state="translated">アサーションテスト</target>
        </trans-unit>
        <trans-unit id="e3292c12a856a02722a46d87471ff4e6faefa104" translate="yes" xml:space="preserve">
          <source>AssertionError</source>
          <target state="translated">AssertionError</target>
        </trans-unit>
        <trans-unit id="d49cc2d0a2b818e7ed5faf9ef6b509305fbc9efa" translate="yes" xml:space="preserve">
          <source>Asserts that the function &lt;code&gt;fn&lt;/code&gt; does not throw an error.</source>
          <target state="translated">関数 &lt;code&gt;fn&lt;/code&gt; がエラーをスローしないことを表明します。</target>
        </trans-unit>
        <trans-unit id="e3957fccdb81b71e89905ba8f09f2b54b8f61f26" translate="yes" xml:space="preserve">
          <source>Assigning a property on &lt;code&gt;process.env&lt;/code&gt; will implicitly convert the value to a string. &lt;strong&gt;This behavior is deprecated.&lt;/strong&gt; Future versions of Node.js may throw an error when the value is not a string, number, or boolean.</source>
          <target state="translated">&lt;code&gt;process.env&lt;/code&gt; にプロパティを割り当てると、値が暗黙的に文字列に変換されます。&lt;strong&gt;この動作は非推奨です。&lt;/strong&gt;Node.jsの将来のバージョンでは、値が文字列、数値、またはブール値でない場合、エラーがスローされる可能性があります。</target>
        </trans-unit>
        <trans-unit id="9ca62f7fe96600e58c09163bd1df22f790a65906" translate="yes" xml:space="preserve">
          <source>Assigning a value to &lt;code&gt;process.title&lt;/code&gt; might not result in an accurate label within process manager applications such as macOS Activity Monitor or Windows Services Manager.</source>
          <target state="translated">&lt;code&gt;process.title&lt;/code&gt; に値を割り当てると、macOSアクティビティモニターやWindowsサービスマネージャーなどのプロセスマネージャーアプリケーション内で正確なラベルが作成されない場合があります。</target>
        </trans-unit>
        <trans-unit id="8bd1090099518731cb82358f7150ea7e8e18982b" translate="yes" xml:space="preserve">
          <source>Assigning properties to the top-level &lt;code&gt;this&lt;/code&gt; as an alternative to &lt;code&gt;module.exports&lt;/code&gt; is deprecated. Developers should use &lt;code&gt;exports&lt;/code&gt; or &lt;code&gt;module.exports&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;module.exports&lt;/code&gt; の代わりとしてプロパティを最上位の &lt;code&gt;this&lt;/code&gt; に割り当てることは非推奨です。代わりに、開発者は &lt;code&gt;exports&lt;/code&gt; または &lt;code&gt;module.exports&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="06d00ede6deb155e49dc8cf86da916484c857d23" translate="yes" xml:space="preserve">
          <source>Assignment of the &lt;code&gt;_&lt;/code&gt; (underscore) variable</source>
          <target state="translated">&lt;code&gt;_&lt;/code&gt; （アンダースコア）変数の割り当て</target>
        </trans-unit>
        <trans-unit id="d665fccb55c06268901cada38d0f82a9235c5575" translate="yes" xml:space="preserve">
          <source>Assignment to &lt;code&gt;module.exports&lt;/code&gt; must be done immediately. It cannot be done in any callbacks. This does not work:</source>
          <target state="translated">&lt;code&gt;module.exports&lt;/code&gt; への割り当ては、すぐに行う必要があります。コールバックでは実行できません。これは動作しません：</target>
        </trans-unit>
        <trans-unit id="619b9ed00714b4d15db0a5b484877fe8405aa504" translate="yes" xml:space="preserve">
          <source>Associates the &lt;code&gt;dgram.Socket&lt;/code&gt; to a remote address and port. Every message sent by this handle is automatically sent to that destination. Also, the socket will only receive messages from that remote peer. Trying to call &lt;code&gt;connect()&lt;/code&gt; on an already connected socket will result in an &lt;a href=&quot;errors#errors_err_socket_dgram_is_connected&quot;&gt;&lt;code&gt;ERR_SOCKET_DGRAM_IS_CONNECTED&lt;/code&gt;&lt;/a&gt; exception. If &lt;code&gt;address&lt;/code&gt; is not provided, &lt;code&gt;'127.0.0.1'&lt;/code&gt; (for &lt;code&gt;udp4&lt;/code&gt; sockets) or &lt;code&gt;'::1'&lt;/code&gt; (for &lt;code&gt;udp6&lt;/code&gt; sockets) will be used by default. Once the connection is complete, a &lt;code&gt;'connect'&lt;/code&gt; event is emitted and the optional &lt;code&gt;callback&lt;/code&gt; function is called. In case of failure, the &lt;code&gt;callback&lt;/code&gt; is called or, failing this, an &lt;code&gt;'error'&lt;/code&gt; event is emitted.</source>
          <target state="translated">関連付け &lt;code&gt;dgram.Socket&lt;/code&gt; をリモートアドレスとポートに。このハンドルによって送信されたすべてのメッセージは、その宛先に自動的に送信されます。また、ソケットはそのリモートピアからのメッセージのみを受信します。すでに接続されているソケットで &lt;code&gt;connect()&lt;/code&gt; を呼び出そうとすると、&lt;a href=&quot;errors#errors_err_socket_dgram_is_connected&quot;&gt; &lt;code&gt;ERR_SOCKET_DGRAM_IS_CONNECTED&lt;/code&gt; &lt;/a&gt;例外が発生します。場合は &lt;code&gt;address&lt;/code&gt; 提供されていない、 &lt;code&gt;'127.0.0.1'&lt;/code&gt; （用 &lt;code&gt;udp4&lt;/code&gt; ソケット）または &lt;code&gt;'::1'&lt;/code&gt; （のための &lt;code&gt;udp6&lt;/code&gt; ソケット）がデフォルトで使用されます。接続が完了すると、 &lt;code&gt;'connect'&lt;/code&gt; イベントが発行され、オプションの &lt;code&gt;callback&lt;/code&gt; 関数が呼び出されます。失敗した場合、 &lt;code&gt;callback&lt;/code&gt; が呼び出されるか、これに失敗すると、 &lt;code&gt;'error'&lt;/code&gt; イベントが発行されます。</target>
        </trans-unit>
        <trans-unit id="656d7cd44a1a91a56bfda8de731d5bafeb0237f1" translate="yes" xml:space="preserve">
          <source>Associates the value of the &lt;code&gt;type_tag&lt;/code&gt; pointer with the JavaScript object. &lt;code&gt;napi_check_object_type_tag()&lt;/code&gt; can then be used to compare the tag that was attached to the object with one owned by the addon to ensure that the object has the right type.</source>
          <target state="translated">&lt;code&gt;type_tag&lt;/code&gt; ポインターの値をJavaScriptオブジェクトに関連付けます。 &lt;code&gt;napi_check_object_type_tag()&lt;/code&gt; を使用して、オブジェクトにアタッチされたタグをアドオンが所有するタグと比較し、オブジェクトが正しいタイプであることを確認できます。</target>
        </trans-unit>
        <trans-unit id="557e5ee8e017ecf16dc3152984786becaec6c1b9" translate="yes" xml:space="preserve">
          <source>Assuming an &lt;code&gt;a.mjs&lt;/code&gt; with</source>
          <target state="translated">仮定 &lt;code&gt;a.mjs&lt;/code&gt; をして</target>
        </trans-unit>
        <trans-unit id="d25c13e3a0fb1554e04e5083d12ad3e76e2f517a" translate="yes" xml:space="preserve">
          <source>Assuming an &lt;code&gt;index.mjs&lt;/code&gt; with</source>
          <target state="translated">仮定 &lt;code&gt;index.mjs&lt;/code&gt; をして</target>
        </trans-unit>
        <trans-unit id="49e794543de79d6c18544f3b4ca125a146181194" translate="yes" xml:space="preserve">
          <source>Assuming that the task is adding two numbers, using a file named &lt;code&gt;task_processor.js&lt;/code&gt; with the following content:</source>
          <target state="translated">次の内容の &lt;code&gt;task_processor.js&lt;/code&gt; という名前のファイルを使用して、タスクが2つの数値を加算していると仮定します。</target>
        </trans-unit>
        <trans-unit id="3751c055775a3fd5e46bc50c33f4f8776b5e7427" translate="yes" xml:space="preserve">
          <source>Async Hooks</source>
          <target state="translated">非同期フック</target>
        </trans-unit>
        <trans-unit id="84a29bec6f7a755d3607f0d91741e2b169bcefe1" translate="yes" xml:space="preserve">
          <source>Async functions may be used as event listeners. If an async handler function rejects, the rejection is captured and handled as described in &lt;a href=&quot;#events_eventtarget_error_handling&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt; error handling&lt;/a&gt;.</source>
          <target state="translated">非同期関数は、イベントリスナーとして使用できます。非同期ハンドラー関数が拒否した場合、&lt;a href=&quot;#events_eventtarget_error_handling&quot;&gt; &lt;code&gt;EventTarget&lt;/code&gt; エラー処理で&lt;/a&gt;説明されているように、拒否がキャプチャされて処理されます。</target>
        </trans-unit>
        <trans-unit id="0cbd038e382b67c6a00e5cdb344803c88d5aafb1" translate="yes" xml:space="preserve">
          <source>Async hooks</source>
          <target state="translated">非同期フック</target>
        </trans-unit>
        <trans-unit id="fbc139f7b1d50b9a66c62a8fe1c5279a87451a00" translate="yes" xml:space="preserve">
          <source>Async iterators register a permanent error handler on the stream to prevent any unhandled post-destroy errors.</source>
          <target state="translated">非同期イテレータは、処理されない破壊後のエラーを防ぐために、ストリームに恒久的なエラーハンドラを登録します。</target>
        </trans-unit>
        <trans-unit id="df5103c1d76d680bba6764bfa32d48a6b5502e54" translate="yes" xml:space="preserve">
          <source>AsyncResource</source>
          <target state="translated">AsyncResource</target>
        </trans-unit>
        <trans-unit id="207846314a3990e8fdd3da08a9a913a385115f88" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/close.2.html&quot;&gt;&lt;code&gt;close(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">非同期の&lt;a href=&quot;http://man7.org/linux/man-pages/man2/close.2.html&quot;&gt; &lt;code&gt;close(2)&lt;/code&gt; &lt;/a&gt;。起こりうる例外以外の引数は、完了コールバックに渡されません。</target>
        </trans-unit>
        <trans-unit id="81c6358263c307be9ef8a686829bbed957e65382" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fchmod.2.html&quot;&gt;&lt;code&gt;fchmod(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">非同期の&lt;a href=&quot;http://man7.org/linux/man-pages/man2/fchmod.2.html&quot;&gt; &lt;code&gt;fchmod(2)&lt;/code&gt; &lt;/a&gt;。起こりうる例外以外の引数は、完了コールバックに渡されません。</target>
        </trans-unit>
        <trans-unit id="bddd536b720e4429ebd9c889527ed28b6809dfa4" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fchown.2.html&quot;&gt;&lt;code&gt;fchown(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">非同期の&lt;a href=&quot;http://man7.org/linux/man-pages/man2/fchown.2.html&quot;&gt; &lt;code&gt;fchown(2)&lt;/code&gt; &lt;/a&gt;。起こりうる例外以外の引数は、完了コールバックに渡されません。</target>
        </trans-unit>
        <trans-unit id="bb4350c9f114fb8c3901ce0679f5b22f08672228" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fdatasync.2.html&quot;&gt;&lt;code&gt;fdatasync(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man2/fdatasync.2.html&quot;&gt; &lt;code&gt;fdatasync(2)&lt;/code&gt; &lt;/a&gt;。起こりうる例外以外の引数は、完了コールバックに渡されません。</target>
        </trans-unit>
        <trans-unit id="ad34fcb6ace8aca75784902aada9d9e60f1b585a" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fdatasync.2.html&quot;&gt;&lt;code&gt;fdatasync(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with no arguments upon success.</source>
          <target state="translated">非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man2/fdatasync.2.html&quot;&gt; &lt;code&gt;fdatasync(2)&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;Promise&lt;/code&gt; 成功時に引数なしで解決されます。</target>
        </trans-unit>
        <trans-unit id="6ee0688b451469c96f066d51ebaee75bb1f3da28" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fstat.2.html&quot;&gt;&lt;code&gt;fstat(2)&lt;/code&gt;&lt;/a&gt;. The callback gets two arguments &lt;code&gt;(err, stats)&lt;/code&gt; where &lt;code&gt;stats&lt;/code&gt; is an &lt;a href=&quot;#fs_class_fs_stats&quot;&gt;&lt;code&gt;fs.Stats&lt;/code&gt;&lt;/a&gt; object. &lt;code&gt;fstat()&lt;/code&gt; is identical to &lt;a href=&quot;fs#fs_fs_stat_path_options_callback&quot;&gt;&lt;code&gt;stat()&lt;/code&gt;&lt;/a&gt;, except that the file to be stat-ed is specified by the file descriptor &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="translated">非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man2/fstat.2.html&quot;&gt; &lt;code&gt;fstat(2)&lt;/code&gt; &lt;/a&gt;。コールバックは、二つの引数を取得し &lt;code&gt;(err, stats)&lt;/code&gt; &lt;code&gt;stats&lt;/code&gt; ある&lt;a href=&quot;#fs_class_fs_stats&quot;&gt; &lt;code&gt;fs.Stats&lt;/code&gt; &lt;/a&gt;オブジェクト。 &lt;code&gt;fstat()&lt;/code&gt; はstat（）と同じですが、&lt;a href=&quot;fs#fs_fs_stat_path_options_callback&quot;&gt; &lt;code&gt;stat()&lt;/code&gt; &lt;/a&gt;されるファイルがファイル記述子 &lt;code&gt;fd&lt;/code&gt; によって指定される点が異なります。</target>
        </trans-unit>
        <trans-unit id="24e6bc0bc1531b9eeca11deee09b0488be7a6867" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fsync.2.html&quot;&gt;&lt;code&gt;fsync(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man2/fsync.2.html&quot;&gt; &lt;code&gt;fsync(2)&lt;/code&gt; &lt;/a&gt;。起こりうる例外以外の引数は、完了コールバックに渡されません。</target>
        </trans-unit>
        <trans-unit id="c8ac0192924aff15e0c7c0acd33305cc5aa9309e" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fsync.2.html&quot;&gt;&lt;code&gt;fsync(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with no arguments upon success.</source>
          <target state="translated">非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man2/fsync.2.html&quot;&gt; &lt;code&gt;fsync(2)&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;Promise&lt;/code&gt; 成功時に引数なしで解決されます。</target>
        </trans-unit>
        <trans-unit id="4b0c2bb494df453aecfc68a06ab9c256c05509c0" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/ftruncate.2.html&quot;&gt;&lt;code&gt;ftruncate(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">非同期の&lt;a href=&quot;http://man7.org/linux/man-pages/man2/ftruncate.2.html&quot;&gt; &lt;code&gt;ftruncate(2)&lt;/code&gt; &lt;/a&gt;。起こりうる例外以外の引数は、完了コールバックに渡されません。</target>
        </trans-unit>
        <trans-unit id="06dc3705c43322a051005430ab1d26a877c762fe" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/lchown.2.html&quot;&gt;&lt;code&gt;lchown(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man2/lchown.2.html&quot;&gt; &lt;code&gt;lchown(2)&lt;/code&gt; &lt;/a&gt;。起こりうる例外以外の引数は、完了コールバックに渡されません。</target>
        </trans-unit>
        <trans-unit id="cfa6408a63fd1c60aef183cde8c36d760fa12120" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/link.2.html&quot;&gt;&lt;code&gt;link(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man2/link.2.html&quot;&gt; &lt;code&gt;link(2)&lt;/code&gt; &lt;/a&gt;。起こりうる例外以外の引数は、完了コールバックに渡されません。</target>
        </trans-unit>
        <trans-unit id="9dc810a7f0da4267a165ebaa07ff3b7ea8bcb3af" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/link.2.html&quot;&gt;&lt;code&gt;link(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with no arguments upon success.</source>
          <target state="translated">非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man2/link.2.html&quot;&gt; &lt;code&gt;link(2)&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;Promise&lt;/code&gt; 成功時に引数なしで解決されます。</target>
        </trans-unit>
        <trans-unit id="48142cc3d8a92cae4496ba279455589953a6b3a9" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/lstat.2.html&quot;&gt;&lt;code&gt;lstat(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with the &lt;a href=&quot;#fs_class_fs_stats&quot;&gt;&lt;code&gt;fs.Stats&lt;/code&gt;&lt;/a&gt; object for the given symbolic link &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man2/lstat.2.html&quot;&gt; &lt;code&gt;lstat(2)&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;Promise&lt;/code&gt; して解決した&lt;a href=&quot;#fs_class_fs_stats&quot;&gt; &lt;code&gt;fs.Stats&lt;/code&gt; &lt;/a&gt;与えられたシンボリックリンクのオブジェクト &lt;code&gt;path&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="875263631be328f78228047f131d9988dea3d292" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/lstat.2.html&quot;&gt;&lt;code&gt;lstat(2)&lt;/code&gt;&lt;/a&gt;. The callback gets two arguments &lt;code&gt;(err, stats)&lt;/code&gt; where &lt;code&gt;stats&lt;/code&gt; is a &lt;a href=&quot;#fs_class_fs_stats&quot;&gt;&lt;code&gt;fs.Stats&lt;/code&gt;&lt;/a&gt; object. &lt;code&gt;lstat()&lt;/code&gt; is identical to &lt;code&gt;stat()&lt;/code&gt;, except that if &lt;code&gt;path&lt;/code&gt; is a symbolic link, then the link itself is stat-ed, not the file that it refers to.</source>
          <target state="translated">非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man2/lstat.2.html&quot;&gt; &lt;code&gt;lstat(2)&lt;/code&gt; &lt;/a&gt;。コールバックは、二つの引数を取得し &lt;code&gt;(err, stats)&lt;/code&gt; &lt;code&gt;stats&lt;/code&gt; ある&lt;a href=&quot;#fs_class_fs_stats&quot;&gt; &lt;code&gt;fs.Stats&lt;/code&gt; &lt;/a&gt;オブジェクト。 &lt;code&gt;lstat()&lt;/code&gt; と同一である &lt;code&gt;stat()&lt;/code&gt; 、を除いた場合、その &lt;code&gt;path&lt;/code&gt; シンボリックリンクであり、リンク自体はSTAT-EDはなく、それが参照するファイルです。</target>
        </trans-unit>
        <trans-unit id="f764dc94aab80d6bfa0fd0bec45fd64486a8310f" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/readlink.2.html&quot;&gt;&lt;code&gt;readlink(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with the &lt;code&gt;linkString&lt;/code&gt; upon success.</source>
          <target state="translated">非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man2/readlink.2.html&quot;&gt; &lt;code&gt;readlink(2)&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;Promise&lt;/code&gt; して解決され &lt;code&gt;linkString&lt;/code&gt; 成功時。</target>
        </trans-unit>
        <trans-unit id="046dd32472c9747bf8fae24c7e00dfc7dd0e552d" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/readlink.2.html&quot;&gt;&lt;code&gt;readlink(2)&lt;/code&gt;&lt;/a&gt;. The callback gets two arguments &lt;code&gt;(err, linkString)&lt;/code&gt;.</source>
          <target state="translated">非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man2/readlink.2.html&quot;&gt; &lt;code&gt;readlink(2)&lt;/code&gt; &lt;/a&gt;。コールバックは2つの引数 &lt;code&gt;(err, linkString)&lt;/code&gt; 取得します。</target>
        </trans-unit>
        <trans-unit id="cd168382f6368986c9aa40e2ab34d1be126cbe49" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/rmdir.2.html&quot;&gt;&lt;code&gt;rmdir(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man2/rmdir.2.html&quot;&gt; &lt;code&gt;rmdir(2)&lt;/code&gt; &lt;/a&gt;。起こりうる例外以外の引数は、完了コールバックに渡されません。</target>
        </trans-unit>
        <trans-unit id="b8f047acee63c91786a3a386a177a4ee8d8d42ff" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/stat.2.html&quot;&gt;&lt;code&gt;stat(2)&lt;/code&gt;&lt;/a&gt;. The callback gets two arguments &lt;code&gt;(err, stats)&lt;/code&gt; where &lt;code&gt;stats&lt;/code&gt; is an &lt;a href=&quot;#fs_class_fs_stats&quot;&gt;&lt;code&gt;fs.Stats&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man2/stat.2.html&quot;&gt; &lt;code&gt;stat(2)&lt;/code&gt; &lt;/a&gt;。コールバックは、二つの引数を取得し &lt;code&gt;(err, stats)&lt;/code&gt; &lt;code&gt;stats&lt;/code&gt; ある&lt;a href=&quot;#fs_class_fs_stats&quot;&gt; &lt;code&gt;fs.Stats&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="47ae8dec819f652076ace32b100856d5cd524f7b" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/symlink.2.html&quot;&gt;&lt;code&gt;symlink(2)&lt;/code&gt;&lt;/a&gt; which creates the link called &lt;code&gt;path&lt;/code&gt; pointing to &lt;code&gt;target&lt;/code&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">&lt;code&gt;target&lt;/code&gt; 指す &lt;code&gt;path&lt;/code&gt; と呼ばれるリンクを作成する非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man2/symlink.2.html&quot;&gt; &lt;code&gt;symlink(2)&lt;/code&gt; &lt;/a&gt;。完了コールバックには、考えられる例外以外の引数は与えられません。</target>
        </trans-unit>
        <trans-unit id="3d3193c4695bbec930962bab113df5c656f11410" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/symlink.2.html&quot;&gt;&lt;code&gt;symlink(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback. The &lt;code&gt;type&lt;/code&gt; argument is only available on Windows and ignored on other platforms. It can be set to &lt;code&gt;'dir'&lt;/code&gt;, &lt;code&gt;'file'&lt;/code&gt;, or &lt;code&gt;'junction'&lt;/code&gt;. If the &lt;code&gt;type&lt;/code&gt; argument is not set, Node will autodetect &lt;code&gt;target&lt;/code&gt; type and use &lt;code&gt;'file'&lt;/code&gt; or &lt;code&gt;'dir'&lt;/code&gt;. If the &lt;code&gt;target&lt;/code&gt; does not exist, &lt;code&gt;'file'&lt;/code&gt; will be used. Windows junction points require the destination path to be absolute. When using &lt;code&gt;'junction'&lt;/code&gt;, the &lt;code&gt;target&lt;/code&gt; argument will automatically be normalized to absolute path.</source>
          <target state="translated">非同期の&lt;a href=&quot;http://man7.org/linux/man-pages/man2/symlink.2.html&quot;&gt; &lt;code&gt;symlink(2)&lt;/code&gt; &lt;/a&gt;。起こりうる例外以外の引数は、完了コールバックに渡されません。 &lt;code&gt;type&lt;/code&gt; 引数は、Windows上でのみ利用可能であり、他のプラットフォームでは無視します。 &lt;code&gt;'dir'&lt;/code&gt; 、 &lt;code&gt;'file'&lt;/code&gt; 、または &lt;code&gt;'junction'&lt;/code&gt; に設定できます。 &lt;code&gt;type&lt;/code&gt; 引数が設定されていない場合、Nodeは &lt;code&gt;target&lt;/code&gt; タイプを自動検出し、 &lt;code&gt;'file'&lt;/code&gt; または &lt;code&gt;'dir'&lt;/code&gt; を使用します。場合は &lt;code&gt;target&lt;/code&gt; 存在しない、 &lt;code&gt;'file'&lt;/code&gt; 使用します。 Windowsジャンクションポイントでは、宛先パスを絶対パスにする必要があります。 &lt;code&gt;'junction'&lt;/code&gt; を使用する場合、 &lt;code&gt;target&lt;/code&gt; 引数は自動的に絶対パスに正規化されます。</target>
        </trans-unit>
        <trans-unit id="5becefe8f043e2409d28bd6644782d0e8c9ed483" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/truncate.2.html&quot;&gt;&lt;code&gt;truncate(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback. A file descriptor can also be passed as the first argument. In this case, &lt;code&gt;fs.ftruncate()&lt;/code&gt; is called.</source>
          <target state="translated">非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man2/truncate.2.html&quot;&gt; &lt;code&gt;truncate(2)&lt;/code&gt; &lt;/a&gt;。起こりうる例外以外の引数は、完了コールバックに渡されません。ファイル記述子を最初の引数として渡すこともできます。この場合、 &lt;code&gt;fs.ftruncate()&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="086e500b32994a55adb4a9bb6803347f1f01c959" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man2/unlink.2.html&quot;&gt;&lt;code&gt;unlink(2)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; is resolved with no arguments upon success.</source>
          <target state="translated">非同期の&lt;a href=&quot;http://man7.org/linux/man-pages/man2/unlink.2.html&quot;&gt; &lt;code&gt;unlink(2)&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;Promise&lt;/code&gt; 成功時に引数なしで解決されます。</target>
        </trans-unit>
        <trans-unit id="30eda89daf29dd37b5c33ea6af171a0cbda2f48a" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt;&lt;code&gt;readdir(3)&lt;/code&gt;&lt;/a&gt;. Reads the contents of a directory. The callback gets two arguments &lt;code&gt;(err, files)&lt;/code&gt; where &lt;code&gt;files&lt;/code&gt; is an array of the names of the files in the directory excluding &lt;code&gt;'.'&lt;/code&gt; and &lt;code&gt;'..'&lt;/code&gt;.</source>
          <target state="translated">非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt; &lt;code&gt;readdir(3)&lt;/code&gt; &lt;/a&gt;。ディレクトリの内容を読み取ります。コールバックは二つの引数を取得 &lt;code&gt;(err, files)&lt;/code&gt; &lt;code&gt;files&lt;/code&gt; 除くディレクトリ内のファイルの名前の配列であるが &lt;code&gt;'.'&lt;/code&gt; および &lt;code&gt;'..'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbb0824a63d5adeba58c7e2befadf249fff6a34a" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;http://man7.org/linux/man-pages/man3/realpath.3.html&quot;&gt;&lt;code&gt;realpath(3)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">非同期&lt;a href=&quot;http://man7.org/linux/man-pages/man3/realpath.3.html&quot;&gt; &lt;code&gt;realpath(3)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b83a298e5187f5282e1f6ffbb164af6c666961b4" translate="yes" xml:space="preserve">
          <source>Asynchronous &lt;a href=&quot;https://www.freebsd.org/cgi/man.cgi?query=lchmod&amp;amp;sektion=2&quot;&gt;&lt;code&gt;lchmod(2)&lt;/code&gt;&lt;/a&gt;. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">非同期&lt;a href=&quot;https://www.freebsd.org/cgi/man.cgi?query=lchmod&amp;amp;sektion=2&quot;&gt; &lt;code&gt;lchmod(2)&lt;/code&gt; &lt;/a&gt;。起こりうる例外以外の引数は、完了コールバックに渡されません。</target>
        </trans-unit>
        <trans-unit id="5c386e768f620d9421694511c41f1869a7099c6b" translate="yes" xml:space="preserve">
          <source>Asynchronous Process Creation</source>
          <target state="translated">非同期プロセス作成</target>
        </trans-unit>
        <trans-unit id="870352c416c2838c61264150314eaa4a679049d3" translate="yes" xml:space="preserve">
          <source>Asynchronous Thread-safe Function Calls</source>
          <target state="translated">非同期スレッドセーフ関数呼び出し</target>
        </trans-unit>
        <trans-unit id="a03fedb2a557050dce7a75bc3afc2350375e0e56" translate="yes" xml:space="preserve">
          <source>Asynchronous context example</source>
          <target state="translated">非同期コンテキストの例</target>
        </trans-unit>
        <trans-unit id="932d1107f2520700d1c17c3a107f791d9049a851" translate="yes" xml:space="preserve">
          <source>Asynchronous file open that returns a &lt;code&gt;Promise&lt;/code&gt; that, when resolved, yields a &lt;code&gt;FileHandle&lt;/code&gt; object. See &lt;a href=&quot;http://man7.org/linux/man-pages/man2/open.2.html&quot;&gt;&lt;code&gt;open(2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">解決されたときに &lt;code&gt;FileHandle&lt;/code&gt; オブジェクトを生成する &lt;code&gt;Promise&lt;/code&gt; を返す非同期ファイルオープン。&lt;a href=&quot;http://man7.org/linux/man-pages/man2/open.2.html&quot;&gt; &lt;code&gt;open(2)&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6e7ff50f9f2650749375c6de24e52e7612612d38" translate="yes" xml:space="preserve">
          <source>Asynchronous file open. See &lt;a href=&quot;http://man7.org/linux/man-pages/man2/open.2.html&quot;&gt;&lt;code&gt;open(2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">非同期ファイルが開いています。&lt;a href=&quot;http://man7.org/linux/man-pages/man2/open.2.html&quot;&gt; &lt;code&gt;open(2)&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c4011de6f6effa5362a35d4ec51b2e02903974ff" translate="yes" xml:space="preserve">
          <source>Asynchronous process creation</source>
          <target state="translated">非同期プロセスの作成</target>
        </trans-unit>
        <trans-unit id="51ae8164adb84cce822fb1485a5cdaf4e6f315d5" translate="yes" xml:space="preserve">
          <source>Asynchronous system APIs are used by Node.js whenever possible, but where they do not exist, libuv's threadpool is used to create asynchronous node APIs based on synchronous system APIs. Node.js APIs that use the threadpool are:</source>
          <target state="translated">非同期システムAPIは可能な限りNode.jsで使用されますが、存在しない場合はlibuvのthreadpoolを使用して同期システムAPIをベースに非同期ノードAPIを作成します。スレッドプールを使用するNode.jsのAPIは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="2116a1ac7f9f0d1351792d43781b39c54b1ff200" translate="yes" xml:space="preserve">
          <source>Asynchronous thread-safe function calls</source>
          <target state="translated">非同期スレッドセーフ関数呼び出し</target>
        </trans-unit>
        <trans-unit id="c3df2a3d6f21d146c21574f761ef4944133d9a7e" translate="yes" xml:space="preserve">
          <source>Asynchronous vs. Synchronous</source>
          <target state="translated">非同期 vs.同期</target>
        </trans-unit>
        <trans-unit id="b711aa13f0c6c18c2c4dcd68214019a1a4d2c2c2" translate="yes" xml:space="preserve">
          <source>Asynchronous vs. synchronous</source>
          <target state="translated">非同期対同期</target>
        </trans-unit>
        <trans-unit id="41ff317f81343d387b04d108c5d6283c4dcb0935" translate="yes" xml:space="preserve">
          <source>Asynchronously append data to a file, creating the file if it does not yet exist. &lt;code&gt;data&lt;/code&gt; can be a string or a &lt;a href=&quot;buffer#buffer_buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">非同期でファイルにデータを追加し、まだ存在しない場合はファイルを作成します。 &lt;code&gt;data&lt;/code&gt; は文字列または&lt;a href=&quot;buffer#buffer_buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="98a5c4afe98dc5cc8dcf18f90e97c71e236ec74c" translate="yes" xml:space="preserve">
          <source>Asynchronously append data to a file, creating the file if it does not yet exist. &lt;code&gt;data&lt;/code&gt; can be a string or a &lt;a href=&quot;buffer#buffer_buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; will be resolved with no arguments upon success.</source>
          <target state="translated">非同期でファイルにデータを追加し、まだ存在しない場合はファイルを作成します。 &lt;code&gt;data&lt;/code&gt; は文字列または&lt;a href=&quot;buffer#buffer_buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;です。 &lt;code&gt;Promise&lt;/code&gt; 成功時に引数なしで解決されます。</target>
        </trans-unit>
        <trans-unit id="976cd5376ce8651fee81ccbed770f762bd05a695" translate="yes" xml:space="preserve">
          <source>Asynchronously append data to this file, creating the file if it does not yet exist. &lt;code&gt;data&lt;/code&gt; can be a string or a &lt;a href=&quot;buffer#buffer_buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Promise&lt;/code&gt; will be resolved with no arguments upon success.</source>
          <target state="translated">このファイルに非同期でデータを追加し、まだ存在しない場合はファイルを作成します。 &lt;code&gt;data&lt;/code&gt; は文字列または&lt;a href=&quot;buffer#buffer_buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;です。 &lt;code&gt;Promise&lt;/code&gt; 成功時に引数なしで解決されます。</target>
        </trans-unit>
        <trans-unit id="1892b7d4690e77e49d808bad31fc4422c9b65b09" translate="yes" xml:space="preserve">
          <source>Asynchronously changes owner and group of a file. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">非同期にファイルの所有者とグループを変更します。例外が発生する可能性がある以外の引数は、完了コールバックには与えられません。</target>
        </trans-unit>
        <trans-unit id="2dfd976004fd3b58537d85e14c807b6633f9f8bd" translate="yes" xml:space="preserve">
          <source>Asynchronously changes the permissions of a file. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">非同期的にファイルのパーミッションを変更します。可能な例外以外の引数は、完了コールバックには与えられません。</target>
        </trans-unit>
        <trans-unit id="a40de80258a05223e74cdb1294b7987da7adad17" translate="yes" xml:space="preserve">
          <source>Asynchronously close the directory's underlying resource handle. Subsequent reads will result in errors.</source>
          <target state="translated">ディレクトリの基礎となるリソースハンドルを非同期的に閉じます。それ以降の読み込みはエラーになります。</target>
        </trans-unit>
        <trans-unit id="7fc5972b2e83a394368241b636afbbaac521139f" translate="yes" xml:space="preserve">
          <source>Asynchronously computes the canonical pathname by resolving &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;..&lt;/code&gt; and symbolic links.</source>
          <target state="translated">解決することにより、非同期的に正規のパス名を計算し &lt;code&gt;.&lt;/code&gt; 、 &lt;code&gt;..&lt;/code&gt; およびシンボリックリンク。</target>
        </trans-unit>
        <trans-unit id="61e758277c877bffb922ed73601c1ec773283bec" translate="yes" xml:space="preserve">
          <source>Asynchronously copies &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt;. By default, &lt;code&gt;dest&lt;/code&gt; is overwritten if it already exists. No arguments other than a possible exception are given to the callback function. Node.js makes no guarantees about the atomicity of the copy operation. If an error occurs after the destination file has been opened for writing, Node.js will attempt to remove the destination.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; を &lt;code&gt;dest&lt;/code&gt; に非同期にコピーします。デフォルトでは、 &lt;code&gt;dest&lt;/code&gt; はすでに存在する場合は上書きされます。起こり得る例外以外の引数は、コールバック関数に渡されません。Node.jsは、コピー操作のアトミック性を保証しません。宛先ファイルが書き込み用に開かれた後にエラーが発生した場合、Node.jsは宛先を削除しようとします。</target>
        </trans-unit>
        <trans-unit id="0574311e1ef2b3da4f080981eca1cd288383a2b2" translate="yes" xml:space="preserve">
          <source>Asynchronously copies &lt;code&gt;src&lt;/code&gt; to &lt;code&gt;dest&lt;/code&gt;. By default, &lt;code&gt;dest&lt;/code&gt; is overwritten if it already exists. The &lt;code&gt;Promise&lt;/code&gt; will be resolved with no arguments upon success.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; を &lt;code&gt;dest&lt;/code&gt; に非同期にコピーします。デフォルトでは、 &lt;code&gt;dest&lt;/code&gt; はすでに存在する場合は上書きされます。 &lt;code&gt;Promise&lt;/code&gt; 成功時に引数なしで解決されます。</target>
        </trans-unit>
        <trans-unit id="b7c9346b0de6bb56fc8db44a7ecea4bb12c73076" translate="yes" xml:space="preserve">
          <source>Asynchronously creates a directory then resolves the &lt;code&gt;Promise&lt;/code&gt; with either no arguments, or the first directory path created if &lt;code&gt;recursive&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">非同期でディレクトリを作成してから、引数なしで &lt;code&gt;Promise&lt;/code&gt; を解決するか、 &lt;code&gt;recursive&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合は最初のディレクトリパスを作成します。</target>
        </trans-unit>
        <trans-unit id="d96ee6aa922ef2ca4b26e5513d0f8a3a0c0fff67" translate="yes" xml:space="preserve">
          <source>Asynchronously creates a directory then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">非同期でディレクトリを作成し、成功時に引数なしで &lt;code&gt;Promise&lt;/code&gt; を解決します。</target>
        </trans-unit>
        <trans-unit id="fcb16e88dba803e857715fb54e9664c6c91965ad" translate="yes" xml:space="preserve">
          <source>Asynchronously creates a directory.</source>
          <target state="translated">非同期でディレクトリを作成します。</target>
        </trans-unit>
        <trans-unit id="ec0c8dd0fcddb9b0398d333f8377db08d57ba88c" translate="yes" xml:space="preserve">
          <source>Asynchronously creates a directory. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">非同期的にディレクトリを作成します。例外が発生する可能性がある以外の引数は、完了コールバックには与えられません。</target>
        </trans-unit>
        <trans-unit id="3e7214401a7cbf347d03bb5817696077588e2606" translate="yes" xml:space="preserve">
          <source>Asynchronously generates a new random secret key of the given &lt;code&gt;length&lt;/code&gt;. The &lt;code&gt;type&lt;/code&gt; will determine which validations will be performed on the &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">指定 &lt;code&gt;length&lt;/code&gt; れた長さの新しいランダム秘密鍵を非同期的に生成します。 &lt;code&gt;type&lt;/code&gt; 上で実行される検証決定する &lt;code&gt;length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="939198d49e024c21a1e1e8e46a1c0cdcd9fe7a68" translate="yes" xml:space="preserve">
          <source>Asynchronously get the number of concurrent connections on the server. Works when sockets were sent to forks.</source>
          <target state="translated">サーバー上の同時接続数を非同期で取得します。ソケットがフォークに送られた場合に動作します。</target>
        </trans-unit>
        <trans-unit id="c79f9ea168e2ce45b50d6380e32a4d09ef56cde7" translate="yes" xml:space="preserve">
          <source>Asynchronously iterates over the directory via &lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt;&lt;code&gt;readdir(3)&lt;/code&gt;&lt;/a&gt; until all entries have been read.</source>
          <target state="translated">すべてのエントリが読み取られるまで、&lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt; &lt;code&gt;readdir(3)&lt;/code&gt; &lt;/a&gt;を介してディレクトリを非同期的に繰り返します。</target>
        </trans-unit>
        <trans-unit id="d03edc635ff855c15d168e66fcad36748b96f3a5" translate="yes" xml:space="preserve">
          <source>Asynchronously open a directory. See &lt;a href=&quot;http://man7.org/linux/man-pages/man3/opendir.3.html&quot;&gt;&lt;code&gt;opendir(3)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ディレクトリを非同期的に開きます。&lt;a href=&quot;http://man7.org/linux/man-pages/man3/opendir.3.html&quot;&gt; &lt;code&gt;opendir(3)&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a3d5f7ee95471270836f8f618f696033b04bd6d7" translate="yes" xml:space="preserve">
          <source>Asynchronously read the next directory entry via &lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt;&lt;code&gt;readdir(3)&lt;/code&gt;&lt;/a&gt; as an &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt;&lt;code&gt;fs.Dirent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://man7.org/linux/man-pages/man3/readdir.3.html&quot;&gt; &lt;code&gt;readdir(3)&lt;/code&gt; &lt;/a&gt;を介して次のディレクトリエントリを&lt;a href=&quot;#fs_class_fs_dirent&quot;&gt; &lt;code&gt;fs.Dirent&lt;/code&gt; &lt;/a&gt;として非同期的に読み取ります。</target>
        </trans-unit>
        <trans-unit id="14b60a1ac407f4352799156d07820adf71cf5f4b" translate="yes" xml:space="preserve">
          <source>Asynchronously reads the entire contents of a file.</source>
          <target state="translated">非同期にファイルの内容全体を読み込みます。</target>
        </trans-unit>
        <trans-unit id="766290f37aa426d8129aecd96082d0a6226bde50" translate="yes" xml:space="preserve">
          <source>Asynchronously removes a file or symbolic link. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">非同期的にファイルまたはシンボリックリンクを削除します。可能な例外以外の引数は、完了コールバックには与えられません。</target>
        </trans-unit>
        <trans-unit id="8f9db1ff0bc43c00c923d9581df460a90e202840" translate="yes" xml:space="preserve">
          <source>Asynchronously removes files and directories (modeled on the standard POSIX &lt;code&gt;rm&lt;/code&gt; utility). No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">ファイルとディレクトリを非同期的に削除します（標準のPOSIX &lt;code&gt;rm&lt;/code&gt; ユーティリティをモデルにしています）。完了コールバックには、考えられる例外以外の引数は与えられません。</target>
        </trans-unit>
        <trans-unit id="d8843625268d4b77ea1512d3934aa5ff87185eb5" translate="yes" xml:space="preserve">
          <source>Asynchronously rename file at &lt;code&gt;oldPath&lt;/code&gt; to the pathname provided as &lt;code&gt;newPath&lt;/code&gt;. In the case that &lt;code&gt;newPath&lt;/code&gt; already exists, it will be overwritten. If there is a directory at &lt;code&gt;newPath&lt;/code&gt;, an error will be raised instead. No arguments other than a possible exception are given to the completion callback.</source>
          <target state="translated">非同期でファイル名を変更 &lt;code&gt;oldPath&lt;/code&gt; として提供したパス名に &lt;code&gt;newPath&lt;/code&gt; 。 &lt;code&gt;newPath&lt;/code&gt; がすでに存在する場合は、上書きされます。 &lt;code&gt;newPath&lt;/code&gt; にディレクトリがある場合、代わりにエラーが発生します。起こりうる例外以外の引数は、完了コールバックに渡されません。</target>
        </trans-unit>
        <trans-unit id="58ece64d813f422b3fc9b6ecb0f0ff6b40f7434c" translate="yes" xml:space="preserve">
          <source>Asynchronously writes data to a file, replacing the file if it already exists. &lt;code&gt;data&lt;/code&gt; can be a string or a buffer. The &lt;code&gt;Promise&lt;/code&gt; will be resolved with no arguments upon success.</source>
          <target state="translated">非同期でファイルにデータを書き込み、ファイルが既に存在する場合はそれを置き換えます。 &lt;code&gt;data&lt;/code&gt; は文字列またはバッファです。 &lt;code&gt;Promise&lt;/code&gt; 成功時に引数なしで解決されます。</target>
        </trans-unit>
        <trans-unit id="df09d1bd914fced304f3666b66420161e4fb8bf5" translate="yes" xml:space="preserve">
          <source>Asynchronously writes data to a file, replacing the file if it already exists. &lt;code&gt;data&lt;/code&gt; can be a string, a buffer, or an object with an own &lt;code&gt;toString&lt;/code&gt; function property. The &lt;code&gt;Promise&lt;/code&gt; is resolved with no arguments upon success.</source>
          <target state="translated">データをファイルに非同期的に書き込み、ファイルがすでに存在する場合はファイルを置き換えます。 &lt;code&gt;data&lt;/code&gt; は、文字列、バッファ、または独自の &lt;code&gt;toString&lt;/code&gt; 関数プロパティを持つオブジェクトにすることができます。 &lt;code&gt;Promise&lt;/code&gt; 成功時に引数なしで解決されます。</target>
        </trans-unit>
        <trans-unit id="0f24a79987b52d029db55124099624d418a91102" translate="yes" xml:space="preserve">
          <source>At any given time, a &lt;code&gt;QuicSession&lt;/code&gt; exists is one of four possible states:</source>
          <target state="translated">&lt;code&gt;QuicSession&lt;/code&gt; 、QuicSessionが存在するのは、次の4つの状態のいずれかです。</target>
        </trans-unit>
        <trans-unit id="b361feb526f96be8e9bb9aacef28f568d61f8731" translate="yes" xml:space="preserve">
          <source>At the REPL prompt, pressing</source>
          <target state="translated">REPLプロンプトで</target>
        </trans-unit>
        <trans-unit id="40afcfc38b7a5f2938ce36281f7fe9f5e8725769" translate="yes" xml:space="preserve">
          <source>At this time coverage is only collected in the main thread and will not be output for code executed by worker threads.</source>
          <target state="translated">この時点では、カバレッジはメインスレッドにのみ収集され、ワーカースレッドで実行されるコードに対しては出力されません。</target>
        </trans-unit>
        <trans-unit id="b19f4cf9dafd0485024999c5ac53d9a2b7fe4ae4" translate="yes" xml:space="preserve">
          <source>AtExit hooks</source>
          <target state="translated">AtExitフック</target>
        </trans-unit>
        <trans-unit id="d17ff2196b50a184e9990e8ddba398b71e1dd254" translate="yes" xml:space="preserve">
          <source>Attaches an AbortSignal to a readable or writeable stream. This lets code control stream destruction using an &lt;code&gt;AbortController&lt;/code&gt;.</source>
          <target state="translated">AbortSignalを読み取り可能または書き込み可能なストリームにアタッチします。これにより、コードは &lt;code&gt;AbortController&lt;/code&gt; を使用してストリームの破棄を制御できます。</target>
        </trans-unit>
        <trans-unit id="cea32cf122572dc5951380b0e98cbcb8bd4712d4" translate="yes" xml:space="preserve">
          <source>Attaching a &lt;code&gt;'data'&lt;/code&gt; event listener to a stream that has not been explicitly paused will switch the stream into flowing mode. Data will then be passed as soon as it is available.</source>
          <target state="translated">明示的に一時停止されていないストリームに &lt;code&gt;'data'&lt;/code&gt; イベントリスナーをアタッチすると、ストリームがフローモードに切り替わります。その後、データが利用可能になるとすぐに渡されます。</target>
        </trans-unit>
        <trans-unit id="a743b60d1a87bd386f303865664fc597fdb64124" translate="yes" xml:space="preserve">
          <source>Attempt to begin execution of &lt;code&gt;instance&lt;/code&gt; as a WASI command by invoking its &lt;code&gt;_start()&lt;/code&gt; export. If &lt;code&gt;instance&lt;/code&gt; does not contain a &lt;code&gt;_start()&lt;/code&gt; export, or if &lt;code&gt;instance&lt;/code&gt; contains an &lt;code&gt;_initialize()&lt;/code&gt; export, then an exception is thrown.</source>
          <target state="translated">&lt;code&gt;_start()&lt;/code&gt; エクスポートを呼び出して、WASIコマンドとして &lt;code&gt;instance&lt;/code&gt; 実行を開始しようとします。 &lt;code&gt;instance&lt;/code&gt; &lt;code&gt;_start()&lt;/code&gt; エクスポートが含まれていない場合、または &lt;code&gt;instance&lt;/code&gt; に &lt;code&gt;_initialize()&lt;/code&gt; エクスポートが含まれている場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="5ed7c628f478f30ab5bc85d5cb8783d36c994d3a" translate="yes" xml:space="preserve">
          <source>Attempt to initialize &lt;code&gt;instance&lt;/code&gt; as a WASI reactor by invoking its &lt;code&gt;_initialize()&lt;/code&gt; export, if it is present. If &lt;code&gt;instance&lt;/code&gt; contains a &lt;code&gt;_start()&lt;/code&gt; export, then an exception is thrown.</source>
          <target state="translated">&lt;code&gt;_initialize()&lt;/code&gt; エクスポートが存在する場合は、それを呼び出して、 &lt;code&gt;instance&lt;/code&gt; をWASIリアクターとして初期化しようとします。 &lt;code&gt;instance&lt;/code&gt; に &lt;code&gt;_start()&lt;/code&gt; エクスポートが含まれている場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="fd087322b0e9680ce97117b3037d67b230d66cc7" translate="yes" xml:space="preserve">
          <source>Attempting to fill a non-zero length buffer with a zero length buffer triggers a thrown exception.</source>
          <target state="translated">ゼロ長ではないバッファをゼロ長のバッファで埋めようとすると、スローされた例外が発生します。</target>
        </trans-unit>
        <trans-unit id="e2e0426506e4725ac2d5585b495d07354c95a392" translate="yes" xml:space="preserve">
          <source>Attempting to resume normally after an uncaught exception can be similar to pulling out of the power cord when upgrading a computer &amp;mdash; nine out of ten times nothing happens - but the 10th time, the system becomes corrupted.</source>
          <target state="translated">キャッチされなかった例外の後で正常に再開しようとすることは、コンピュータをアップグレードするときに電源コードを抜くことに似ています。10回のうち9回は何も起こりませんが、10回目はシステムが破損します。</target>
        </trans-unit>
        <trans-unit id="081d720ee9440d5b17f5b1ea8f5e2ee8d0f998b1" translate="yes" xml:space="preserve">
          <source>Attempting to resume normally after an uncaught exception can be similar to pulling out the power cord when upgrading a computer. Nine out of ten times, nothing happens. But the tenth time, the system becomes corrupted.</source>
          <target state="translated">捕まえられない例外が発生した後に正常に再開しようとするのは、コンピュータをアップグレードする際に電源コードを引き抜くのと似ています。10回のうち9回は何も起こらない。しかし、10回目にはシステムが破損してしまいます。</target>
        </trans-unit>
        <trans-unit id="11d283b1b61a25bccb1159e09a9877652fcdcde4" translate="yes" xml:space="preserve">
          <source>Attempting to set a TLS protocol &lt;code&gt;minVersion&lt;/code&gt; or &lt;code&gt;maxVersion&lt;/code&gt; conflicts with an attempt to set the &lt;code&gt;secureProtocol&lt;/code&gt; explicitly. Use one mechanism or the other.</source>
          <target state="translated">TLSプロトコルの &lt;code&gt;minVersion&lt;/code&gt; または &lt;code&gt;maxVersion&lt;/code&gt; を設定しようとすると、 &lt;code&gt;secureProtocol&lt;/code&gt; を明示的に設定しようとすると競合します。どちらかのメカニズムを使用します。</target>
        </trans-unit>
        <trans-unit id="e7450aeaf10a1d9835fb22749c80944a631c9bd8" translate="yes" xml:space="preserve">
          <source>Attempting to set a header field name or value that contains invalid characters will result in a &lt;a href=&quot;errors#errors_class_typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">無効な文字を含むヘッダーフィールド名または値を設定しようとすると、&lt;a href=&quot;errors#errors_class_typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="2888617845c16f508396fa9e8b37fa087e6b8e74" translate="yes" xml:space="preserve">
          <source>Attempts to set the scheduling priority for the process specified by &lt;code&gt;pid&lt;/code&gt;. If &lt;code&gt;pid&lt;/code&gt; is not provided or is &lt;code&gt;0&lt;/code&gt;, the process ID of the current process is used.</source>
          <target state="translated">&lt;code&gt;pid&lt;/code&gt; で指定されたプロセスのスケジューリング優先度を設定しようとします。場合 &lt;code&gt;pid&lt;/code&gt; 提供またはされないが &lt;code&gt;0&lt;/code&gt; 、現在のプロセスのプロセスIDが使用されます。</target>
        </trans-unit>
        <trans-unit id="0562a89091aa1d9d44d65d1f29272422e1ef026f" translate="yes" xml:space="preserve">
          <source>Attempts to use the server's preferences instead of the client's when selecting a cipher. Behavior depends on protocol version. See &lt;a href=&quot;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&quot;&gt;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&lt;/a&gt;.</source>
          <target state="translated">暗号を選択するときに、クライアントの設定ではなくサーバーの設定を使用しようとします。動作はプロトコルのバージョンによって異なります。&lt;a href=&quot;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.html&quot;&gt;https://www.openssl.org/docs/man1.0.2/ssl/SSL_CTX_set_options.htmlを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6c1bb6246c4b5eba2405c8d2e267c8ad678a420d" translate="yes" xml:space="preserve">
          <source>Automatically zero-fills all newly allocated &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;buffer#buffer_class_slowbuffer&quot;&gt;&lt;code&gt;SlowBuffer&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">新しく割り当てられたすべての&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;buffer#buffer_class_slowbuffer&quot;&gt; &lt;code&gt;SlowBuffer&lt;/code&gt; &lt;/a&gt;インスタンスを自動的にゼロで埋めます。</target>
        </trans-unit>
        <trans-unit id="681b5b5ae10b994e61d9fc53cf8a95498ff0df39" translate="yes" xml:space="preserve">
          <source>Availability</source>
          <target state="translated">Availability</target>
        </trans-unit>
        <trans-unit id="738a063d097a7709bdd510db350f157649f27d7e" translate="yes" xml:space="preserve">
          <source>Avoid overriding public methods such as &lt;code&gt;write()&lt;/code&gt;, &lt;code&gt;end()&lt;/code&gt;, &lt;code&gt;cork()&lt;/code&gt;, &lt;code&gt;uncork()&lt;/code&gt;, &lt;code&gt;read()&lt;/code&gt; and &lt;code&gt;destroy()&lt;/code&gt;, or emitting internal events such as &lt;code&gt;'error'&lt;/code&gt;, &lt;code&gt;'data'&lt;/code&gt;, &lt;code&gt;'end'&lt;/code&gt;, &lt;code&gt;'finish'&lt;/code&gt; and &lt;code&gt;'close'&lt;/code&gt; through &lt;code&gt;.emit()&lt;/code&gt;. Doing so can break current and future stream invariants leading to behavior and/or compatibility issues with other streams, stream utilities, and user expectations.</source>
          <target state="translated">&lt;code&gt;write()&lt;/code&gt; 、 &lt;code&gt;end()&lt;/code&gt; 、 &lt;code&gt;cork()&lt;/code&gt; 、 &lt;code&gt;uncork()&lt;/code&gt; 、 &lt;code&gt;read()&lt;/code&gt; 、 &lt;code&gt;destroy()&lt;/code&gt; などのパブリックメソッドをオーバーライドしたり、 &lt;code&gt;'error'&lt;/code&gt; 、 &lt;code&gt;'data'&lt;/code&gt; 、 &lt;code&gt;'end'&lt;/code&gt; 、 &lt;code&gt;'finish'&lt;/code&gt; 」などの内部イベントを発行したりしないでください。'および &lt;code&gt;'close'&lt;/code&gt; から &lt;code&gt;.emit()&lt;/code&gt; 。そうすることで、現在および将来のストリームの不変条件が壊れ、他のストリーム、ストリームユーティリティ、およびユーザーの期待との動作や互換性の問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="71ea6ab27794b1b786ec6f49c43b3be10f62e11b" translate="yes" xml:space="preserve">
          <source>Avoid using &lt;code&gt;require.extensions&lt;/code&gt;. Use could cause subtle bugs and resolving the extensions gets slower with each registered extension.</source>
          <target state="translated">&lt;code&gt;require.extensions&lt;/code&gt; の使用は避けてください。使用すると微妙なバグが発生する可能性があり、拡張機能の登録は登録された拡張機能ごとに遅くなります。</target>
        </trans-unit>
        <trans-unit id="0c375b39ededa122db6c5e755a1b2e705c13957d" translate="yes" xml:space="preserve">
          <source>Avoiding duplicate warnings</source>
          <target state="translated">重複警告の回避</target>
        </trans-unit>
        <trans-unit id="d9f92545139fd65e2e2d3013e9f18410df9c8570" translate="yes" xml:space="preserve">
          <source>Awaiting multiple events emitted on &lt;code&gt;process.nextTick()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;process.nextTick()&lt;/code&gt; で発行された複数のイベントを待機しています</target>
        </trans-unit>
        <trans-unit id="8fb72a563299c6d5a3e07e89e022add61bdd6549" translate="yes" xml:space="preserve">
          <source>Awaits the &lt;code&gt;asyncFn&lt;/code&gt; promise or, if &lt;code&gt;asyncFn&lt;/code&gt; is a function, immediately calls the function and awaits the returned promise to complete. It will then check that the promise is not rejected.</source>
          <target state="translated">待っ &lt;code&gt;asyncFn&lt;/code&gt; の約束や、場合 &lt;code&gt;asyncFn&lt;/code&gt; は関数であり、すぐに関数を呼び出すと、完全に返された約束をお待ちしております。次に、約束が拒否されていないことを確認します。</target>
        </trans-unit>
        <trans-unit id="3d138ce5c31c73160ab7311fdf77259757306f4a" translate="yes" xml:space="preserve">
          <source>Awaits the &lt;code&gt;asyncFn&lt;/code&gt; promise or, if &lt;code&gt;asyncFn&lt;/code&gt; is a function, immediately calls the function and awaits the returned promise to complete. It will then check that the promise is rejected.</source>
          <target state="translated">待っ &lt;code&gt;asyncFn&lt;/code&gt; の約束や、場合 &lt;code&gt;asyncFn&lt;/code&gt; は関数であり、すぐに関数を呼び出すと、完全に返された約束をお待ちしております。次に、約束が拒否されたことを確認します。</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="3f0851e07ee191f6c8c4aa05fb44f44b1c69f6c3" translate="yes" xml:space="preserve">
          <source>Back one character</source>
          <target state="translated">バック1文字</target>
        </trans-unit>
        <trans-unit id="cc5d5adc34f5db46d8710f2cc01e8099b5d73ab0" translate="yes" xml:space="preserve">
          <source>Background colors</source>
          <target state="translated">背景色</target>
        </trans-unit>
        <trans-unit id="88d130a66de8e5db01660642d9f23e1f0eef97dd" translate="yes" xml:space="preserve">
          <source>Backspace</source>
          <target state="translated">Backspace</target>
        </trans-unit>
        <trans-unit id="a4707f4e95ebcde082b4994eb1217fdc6dea792d" translate="yes" xml:space="preserve">
          <source>Bare specifier package resolution lookup through node_modules</source>
          <target state="translated">node_modules を通じてパッケージの解像度を検索するベア指定子</target>
        </trans-unit>
        <trans-unit id="e8598f5fd480081cb8142acf88d32f4177780530" translate="yes" xml:space="preserve">
          <source>Bare specifier resolutions are handled by the &lt;a href=&quot;#esm_resolver_algorithm_specification&quot;&gt;Node.js module resolution algorithm&lt;/a&gt;. All other specifier resolutions are always only resolved with the standard relative &lt;a href=&quot;https://url.spec.whatwg.org/&quot;&gt;URL&lt;/a&gt; resolution semantics.</source>
          <target state="translated">ベア指定子の解決は、&lt;a href=&quot;#esm_resolver_algorithm_specification&quot;&gt;Node.jsモジュール解決アルゴリズム&lt;/a&gt;によって処理されます。他のすべての指定子解決は、常に標準の相対&lt;a href=&quot;https://url.spec.whatwg.org/&quot;&gt;URL&lt;/a&gt;解決セマンティクスでのみ解決されます。</target>
        </trans-unit>
        <trans-unit id="b6b433ea5c3c6467576319c5fbc52ef203bda84f" translate="yes" xml:space="preserve">
          <source>Bare specifiers, and the bare specifier portion of deep import specifiers, are strings; but everything else in a specifier is a URL.</source>
          <target state="translated">ベア指定子とディープインポート指定子のベア指定子部分は文字列ですが、指定子内の他のすべてのものは URL です。</target>
        </trans-unit>
        <trans-unit id="23565a0ceba01f9ffe5b0dc7106e82f8b29f21cf" translate="yes" xml:space="preserve">
          <source>Based on the recommendations of &lt;a href=&quot;https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar1.pdf&quot;&gt;NIST SP 800-131A&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar1.pdf&quot;&gt;NIST SP 800-131Aの&lt;/a&gt;推奨に基づく：</target>
        </trans-unit>
        <trans-unit id="13280a7df8d3cffc696b26b23c5b717ddabf4d54" translate="yes" xml:space="preserve">
          <source>Basic N-API Data Types</source>
          <target state="translated">基本的なN-APIデータ型</target>
        </trans-unit>
        <trans-unit id="79da5918337d66f317a8e0dced5fb16120e39c8c" translate="yes" xml:space="preserve">
          <source>Basic N-API data types</source>
          <target state="translated">基本的なN-APIデータ型</target>
        </trans-unit>
        <trans-unit id="0531950c357a602b86bea24e2ae4c86d1cdf0398" translate="yes" xml:space="preserve">
          <source>Be an N-API addon, or</source>
          <target state="translated">N-APIアドオンであるか</target>
        </trans-unit>
        <trans-unit id="210405f699c0ae9511b9065687cdcbd88db13e20" translate="yes" xml:space="preserve">
          <source>Be aware that in the &lt;code&gt;repl&lt;/code&gt; the error message will be different to the one thrown in a file! See below for further details.</source>
          <target state="translated">&lt;code&gt;repl&lt;/code&gt; では、エラーメッセージはファイルでスローされたものとは異なることに注意してください。詳細については、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="86ef6349970d3f2c873fdffa2b201ee77e13d593" translate="yes" xml:space="preserve">
          <source>Be aware that modifying the value during the instance runtime may have unintended consequences if &lt;code&gt;rl.cursor&lt;/code&gt; is not also controlled.</source>
          <target state="translated">&lt;code&gt;rl.cursor&lt;/code&gt; も制御されていない場合、インスタンスの実行中に値を変更すると、意図しない結果が生じる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a0176b12890631168006259f0fec8076d0bcb6f7" translate="yes" xml:space="preserve">
          <source>Be aware that unless the child environment is explicitly set, this environment variable will be inherited by any child processes, and if they use OpenSSL, it may cause them to trust the same CAs as node.</source>
          <target state="translated">子プロセスの環境が明示的に設定されていない限り、この環境変数はすべての子プロセスに継承され、その子プロセスがOpenSSLを使用している場合、nodeと同じCAを信頼することになる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a6afc55c88fc97ff27bc08b6c490a5d05c14cd25" translate="yes" xml:space="preserve">
          <source>Be declared as context-aware using &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt; as described above</source>
          <target state="translated">上記のように &lt;code&gt;NODE_MODULE_INIT()&lt;/code&gt; を使用してコンテキスト対応として宣言されている</target>
        </trans-unit>
        <trans-unit id="f55a4443bed99d0be307da03b44f021cd62c58cd" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_class_stream_transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt; streams are both &lt;code&gt;Readable&lt;/code&gt; and &lt;code&gt;Writable&lt;/code&gt;, each maintains &lt;em&gt;two&lt;/em&gt; separate internal buffers used for reading and writing, allowing each side to operate independently of the other while maintaining an appropriate and efficient flow of data. For example, &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt; instances are &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; streams whose &lt;code&gt;Readable&lt;/code&gt; side allows consumption of data received &lt;em&gt;from&lt;/em&gt; the socket and whose &lt;code&gt;Writable&lt;/code&gt; side allows writing data &lt;em&gt;to&lt;/em&gt; the socket. Because data may be written to the socket at a faster or slower rate than data is received, each side should operate (and buffer) independently of the other.</source>
          <target state="translated">ため&lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#stream_class_stream_transform&quot;&gt; &lt;code&gt;Transform&lt;/code&gt; &lt;/a&gt;ストリームは両方とも &lt;code&gt;Readable&lt;/code&gt; 及び &lt;code&gt;Writable&lt;/code&gt; 、それぞれが維持&lt;em&gt;2つの&lt;/em&gt;読み書き、データの適切かつ効率的な流れを維持しながら、それぞれの側が他方の独立して動作することを可能にするために使用される別の内部バッファを。例えば、&lt;a href=&quot;net#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; の&lt;/a&gt;インスタンスがある&lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt;そのストリーム &lt;code&gt;Readable&lt;/code&gt; 側受信したデータの消費可能にする&lt;em&gt;から&lt;/em&gt;ソケットを、その &lt;code&gt;Writable&lt;/code&gt; サイドデータを書き込むことを可能&lt;em&gt;に&lt;/em&gt;ソケット。データは、データが受信されるよりも速いまたは遅い速度でソケットに書き込まれる可能性があるため、それぞれの側が互いに独立して動作（およびバッファリング）する必要があります。</target>
        </trans-unit>
        <trans-unit id="8a4b3d89eb904333fb7d3756c67f2538d7f90ca9" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_class_stream_transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt; streams are both &lt;code&gt;Readable&lt;/code&gt; and &lt;code&gt;Writable&lt;/code&gt;, each maintains &lt;em&gt;two&lt;/em&gt; separate internal buffers used for reading and writing, allowing each side to operate independently of the other while maintaining an appropriate and efficient flow of data. For example, &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt; instances are &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; streams whose &lt;code&gt;Readable&lt;/code&gt; side allows consumption of data received &lt;em&gt;from&lt;/em&gt; the socket and whose &lt;code&gt;Writable&lt;/code&gt; side allows writing data &lt;em&gt;to&lt;/em&gt; the socket. Because data may be written to the socket at a faster or slower rate than data is received, it is important for each side to operate (and buffer) independently of the other.</source>
          <target state="translated">ため&lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#stream_class_stream_transform&quot;&gt; &lt;code&gt;Transform&lt;/code&gt; &lt;/a&gt;ストリームは両方とも &lt;code&gt;Readable&lt;/code&gt; 及び &lt;code&gt;Writable&lt;/code&gt; 、それぞれが維持&lt;em&gt;2つの&lt;/em&gt;読み書き、データの適切かつ効率的な流れを維持しながら、それぞれの側が他方の独立して動作することを可能にするために使用される別の内部バッファを。例えば、&lt;a href=&quot;net#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; の&lt;/a&gt;インスタンスがある&lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt;そのストリーム &lt;code&gt;Readable&lt;/code&gt; 側受信したデータの消費可能にする&lt;em&gt;から&lt;/em&gt;ソケットを、その &lt;code&gt;Writable&lt;/code&gt; サイドデータを書き込むことを可能&lt;em&gt;に&lt;/em&gt;ソケット。データは、データが受信されるよりも速いまたは遅い速度でソケットに書き込まれる可能性があるため、それぞれが独立して動作（およびバッファリング）することが重要です。</target>
        </trans-unit>
        <trans-unit id="e43c36cf51a09fe109b357563f98d416ccca8572" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;PerformanceObserver&lt;/code&gt; instances introduce their own additional performance overhead, instances should not be left subscribed to notifications indefinitely. Users should disconnect observers as soon as they are no longer needed.</source>
          <target state="translated">ので &lt;code&gt;PerformanceObserver&lt;/code&gt; のインスタンスは、独自の追加のパフォーマンス・オーバーヘッドを導入し、インスタンスは無期限通知に加入したままにしないでください。ユーザーは、不要になったオブザーバーをすぐに切断する必要があります。</target>
        </trans-unit>
        <trans-unit id="ee71d7f7ec47191268617382ca43907ab99fd18f" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;kill()&lt;/code&gt; attempts to gracefully disconnect the worker process, it is susceptible to waiting indefinitely for the disconnect to complete. For example, if the worker enters an infinite loop, a graceful disconnect will never occur. If the graceful disconnect behavior is not needed, use &lt;code&gt;worker.process.kill()&lt;/code&gt;.</source>
          <target state="translated">ので &lt;code&gt;kill()&lt;/code&gt; 正常ワーカープロセスを切断しようとする試み、それが完全に切断するために無期限に待機しているの影響を受けやすいです。たとえば、ワーカーが無限ループに入った場合、正常な切断は発生しません。正常な切断動作が必要ない場合は、 &lt;code&gt;worker.process.kill()&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="ef790698716c7ee0f926d652933fd27ca728b2e9" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;module&lt;/code&gt; provides a &lt;code&gt;filename&lt;/code&gt; property (normally equivalent to &lt;code&gt;__filename&lt;/code&gt;), the entry point of the current application can be obtained by checking &lt;code&gt;require.main.filename&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; は &lt;code&gt;filename&lt;/code&gt; プロパティ（通常は &lt;code&gt;__filename&lt;/code&gt; と同等）を提供するため、現在のアプリケーションのエントリポイントは &lt;code&gt;require.main.filename&lt;/code&gt; を確認することで取得できます。</target>
        </trans-unit>
        <trans-unit id="5b50eed8d664c34b92740bfba845ba13677a5bfc" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;nice&lt;/code&gt; values are Unix-specific, on Windows the &lt;code&gt;nice&lt;/code&gt; values of all processors are always 0.</source>
          <target state="translated">ので &lt;code&gt;nice&lt;/code&gt; 値は、UNIX固有のもので、Windows上で &lt;code&gt;nice&lt;/code&gt; すべてのプロセッサの値は常に0です。</target>
        </trans-unit>
        <trans-unit id="3936d9e027d4f7d849f82ddac675cb6b070b6236" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;server.listen()&lt;/code&gt; hands off most of the work to the master process, there are three cases where the behavior between a normal Node.js process and a cluster worker differs:</source>
          <target state="translated">&lt;code&gt;server.listen()&lt;/code&gt; はほとんどの作業をマスタープロセスに渡すため、通常のNode.jsプロセスとクラスターワーカーの間の動作が異なる3つのケースがあります。</target>
        </trans-unit>
        <trans-unit id="cc143ffcb4d59a69f5c64c321bc5d4cc6f4da8fe" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;vm.runInThisContext()&lt;/code&gt; does not have access to the local scope, &lt;code&gt;localVar&lt;/code&gt; is unchanged. In contrast, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;&lt;em&gt;does&lt;/em&gt; have access to the local scope, so the value &lt;code&gt;localVar&lt;/code&gt; is changed. In this way &lt;code&gt;vm.runInThisContext()&lt;/code&gt; is much like an &lt;a href=&quot;https://es5.github.io/#x10.4.2&quot;&gt;indirect &lt;code&gt;eval()&lt;/code&gt; call&lt;/a&gt;, e.g. &lt;code&gt;(0,eval)('code')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;vm.runInThisContext()&lt;/code&gt; はローカルスコープにアクセスできないため、 &lt;code&gt;localVar&lt;/code&gt; は変更されません。対照的に、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt;&lt;em&gt;は&lt;/em&gt;ローカルスコープにアクセスできるため、値 &lt;code&gt;localVar&lt;/code&gt; が変更されます。このように、 &lt;code&gt;vm.runInThisContext()&lt;/code&gt; は、&lt;a href=&quot;https://es5.github.io/#x10.4.2&quot;&gt;間接的な &lt;code&gt;eval()&lt;/code&gt; 呼び出し&lt;/a&gt;、たとえば &lt;code&gt;(0,eval)('code')&lt;/code&gt; よく似ています。</target>
        </trans-unit>
        <trans-unit id="a298b78360dc43f65882b92f932e420a9328bc04" translate="yes" xml:space="preserve">
          <source>Because JavaScript does not have support for multiple inheritance, the &lt;code&gt;stream.Duplex&lt;/code&gt; class is extended to implement a &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; stream (as opposed to extending the &lt;code&gt;stream.Readable&lt;/code&gt;&lt;em&gt;and&lt;/em&gt;&lt;code&gt;stream.Writable&lt;/code&gt; classes).</source>
          <target state="translated">JavaScriptは多重継承をサポートしていないため、 &lt;code&gt;stream.Duplex&lt;/code&gt; クラスは、（ &lt;code&gt;stream.Readable&lt;/code&gt; &lt;em&gt;および&lt;/em&gt; &lt;code&gt;stream.Writable&lt;/code&gt; クラスを拡張するのではなく）&lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt;ストリームを実装するように拡張されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="546b904dea8d2798ff45c5b75fddfad99233aef5" translate="yes" xml:space="preserve">
          <source>Because Node.js looks up the &lt;code&gt;realpath&lt;/code&gt; of any modules it loads (that is, it resolves symlinks) and then &lt;a href=&quot;#modules_loading_from_node_modules_folders&quot;&gt;looks for their dependencies in &lt;code&gt;node_modules&lt;/code&gt; folders&lt;/a&gt;, this situation can be resolved with the following architecture:</source>
          <target state="translated">Node.jsのが見上げているため &lt;code&gt;realpath&lt;/code&gt; それはロードの任意のモジュール（あることを、それがシンボリックリンクを解決）し、その後&lt;a href=&quot;#modules_loading_from_node_modules_folders&quot;&gt;にそれらの依存関係を探し &lt;code&gt;node_modules&lt;/code&gt; のフォルダ&lt;/a&gt;、この状況は、次のアーキテクチャで解決することができます。</target>
        </trans-unit>
        <trans-unit id="81b13c52658ca440c352bc51da120443fe5a4fc8" translate="yes" xml:space="preserve">
          <source>Because RSA public keys can be derived from private keys, a private key may be passed instead of a public key.</source>
          <target state="translated">RSA 公開鍵は秘密鍵から派生することができるため、公開鍵の代わりに秘密鍵を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="2ac5a6d6dda6d588b0c5c357a8ed768499a1bccf" translate="yes" xml:space="preserve">
          <source>Because libuv's threadpool has a fixed size, it means that if for whatever reason any of these APIs takes a long time, other (seemingly unrelated) APIs that run in libuv's threadpool will experience degraded performance. In order to mitigate this issue, one potential solution is to increase the size of libuv's threadpool by setting the &lt;code&gt;'UV_THREADPOOL_SIZE'&lt;/code&gt; environment variable to a value greater than &lt;code&gt;4&lt;/code&gt; (its current default value). For more information, see the &lt;a href=&quot;http://docs.libuv.org/en/latest/threadpool.html&quot;&gt;libuv threadpool documentation&lt;/a&gt;.</source>
          <target state="translated">libuvのスレッドプールのサイズは固定されているため、何らかの理由でこれらのAPIのいずれかに時間がかかる場合、libuvのスレッドプールで実行される他の（一見無関係な）APIのパフォーマンスが低下します。この問題を軽減するための1つの解決策は、 &lt;code&gt;'UV_THREADPOOL_SIZE'&lt;/code&gt; 環境変数を &lt;code&gt;4&lt;/code&gt; （現在のデフォルト値）より大きい値に設定して、libuvのスレッドプールのサイズを増やすことです。詳細については、&lt;a href=&quot;http://docs.libuv.org/en/latest/threadpool.html&quot;&gt;libuvスレッドプールのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4635926cf8d3813810bdf88fa8b84fa493e089d4" translate="yes" xml:space="preserve">
          <source>Because libuv's threadpool has a fixed size, it means that if for whatever reason any of these APIs takes a long time, other (seemingly unrelated) APIs that run in libuv's threadpool will experience degraded performance. In order to mitigate this issue, one potential solution is to increase the size of libuv's threadpool by setting the &lt;code&gt;'UV_THREADPOOL_SIZE'&lt;/code&gt; environment variable to a value greater than &lt;code&gt;4&lt;/code&gt; (its current default value). For more information, see the &lt;a href=&quot;https://docs.libuv.org/en/latest/threadpool.html&quot;&gt;libuv threadpool documentation&lt;/a&gt;.</source>
          <target state="translated">libuvのスレッドプールのサイズは固定されているため、何らかの理由でこれらのAPIのいずれかに時間がかかると、libuvのスレッドプールで実行される他の（一見無関係な）APIのパフォーマンスが低下することを意味します。この問題を軽減するための1つの解決策は、 &lt;code&gt;'UV_THREADPOOL_SIZE'&lt;/code&gt; 環境変数を &lt;code&gt;4&lt;/code&gt; （現在のデフォルト値）より大きい値に設定して、libuvのスレッドプールのサイズを増やすことです。詳細については、&lt;a href=&quot;https://docs.libuv.org/en/latest/threadpool.html&quot;&gt;libuvスレッドプールのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9f37f5b4a775883f5f6850c3e2e1562e198f6ea2" translate="yes" xml:space="preserve">
          <source>Because listeners are managed using an internal array, calling this will change the position indices of any listener registered &lt;em&gt;after&lt;/em&gt; the listener being removed. This will not impact the order in which listeners are called, but it means that any copies of the listener array as returned by the &lt;code&gt;emitter.listeners()&lt;/code&gt; method will need to be recreated.</source>
          <target state="translated">リスナーは内部配列を使用して管理されるため、これを呼び出すと、リスナーが削除された&lt;em&gt;後&lt;/em&gt;に登録さ&lt;em&gt;れ&lt;/em&gt;たリスナーの位置インデックスが変更されます。これは、リスナーが呼び出される順序には影響しませんが、 &lt;code&gt;emitter.listeners()&lt;/code&gt; すべてのコピーを再作成する必要があることを意味します。</target>
        </trans-unit>
        <trans-unit id="849a766d1b140b80f9c44a7ca0d9d61ba5900944" translate="yes" xml:space="preserve">
          <source>Because long living server connections may block workers from disconnecting, it may be useful to send a message, so application specific actions may be taken to close them. It also may be useful to implement a timeout, killing a worker if the &lt;code&gt;'disconnect'&lt;/code&gt; event has not been emitted after some time.</source>
          <target state="translated">長時間のサーバー接続はワーカーの切断をブロックする可能性があるため、メッセージを送信すると便利な場合があります。そのため、アプリケーション固有のアクションを実行してそれらを閉じることができます。また、タイムアウトを実装して、 &lt;code&gt;'disconnect'&lt;/code&gt; イベントがしばらく発行されなかった場合にワーカーを強制終了することも役立ちます。</target>
        </trans-unit>
        <trans-unit id="f7456de8b5ba506390ade664594484a04a7cc299" translate="yes" xml:space="preserve">
          <source>Because of the internal mechanics of how the &lt;code&gt;process.nextTick()&lt;/code&gt; queue and the microtask queue that underlies Promises are implemented within V8 and Node.js, it is possible for code running within a context to &quot;escape&quot; the &lt;code&gt;timeout&lt;/code&gt; set using &lt;code&gt;vm.runInContext()&lt;/code&gt;, &lt;code&gt;vm.runInNewContext()&lt;/code&gt;, and &lt;code&gt;vm.runInThisContext()&lt;/code&gt;.</source>
          <target state="translated">Promiseの基礎となる &lt;code&gt;process.nextTick()&lt;/code&gt; キューおよびマイクロタスクキューがV8およびNode.js内に実装される方法の内部メカニズムにより、コンテキスト内で実行されているコードが &lt;code&gt;vm.runInContext()&lt;/code&gt; を使用して設定された &lt;code&gt;timeout&lt;/code&gt; を「エスケープ」する可能性があります（）、 &lt;code&gt;vm.runInNewContext()&lt;/code&gt; 、および &lt;code&gt;vm.runInThisContext()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4366452e42133138d37a810cef33032932211dc3" translate="yes" xml:space="preserve">
          <source>Because of the need for standard compliance, this method does not allow users to customize the serialization process of the URL. For more flexibility, &lt;a href=&quot;#url_url_format_url_options&quot;&gt;&lt;code&gt;require('url').format()&lt;/code&gt;&lt;/a&gt; method might be of interest.</source>
          <target state="translated">標準に準拠する必要があるため、この方法では、ユーザーはURLのシリアル化プロセスをカスタマイズできません。柔軟性を高めるために、&lt;a href=&quot;#url_url_format_url_options&quot;&gt; &lt;code&gt;require('url').format()&lt;/code&gt; &lt;/a&gt;メソッドが役立ちます。</target>
        </trans-unit>
        <trans-unit id="60997f539863f89d6061a5995c36fb4628070f39" translate="yes" xml:space="preserve">
          <source>Because of the specific serialization and processing requirements imposed by the HTTP/2 protocol, it is not recommended for user code to read data from or write data to a &lt;code&gt;Socket&lt;/code&gt; instance bound to a &lt;code&gt;Http2Session&lt;/code&gt;. Doing so can put the HTTP/2 session into an indeterminate state causing the session and the socket to become unusable.</source>
          <target state="translated">HTTP / 2プロトコルによって課される特定のシリアル化および処理要件のため、ユーザーコードが &lt;code&gt;Http2Session&lt;/code&gt; にバインドされた &lt;code&gt;Socket&lt;/code&gt; インスタンスからデータを読み取ったり、そこにデータを書き込んだりすることはお勧めしません。これを行うと、HTTP / 2セッションが不確定な状態になり、セッションとソケットが使用できなくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="691e395104f8dc313bf0ef893e4c24f4eaba778d" translate="yes" xml:space="preserve">
          <source>Because printing to the console is an asynchronous operation, &lt;code&gt;console.log()&lt;/code&gt; will cause the AsyncHooks callbacks to be called. Using &lt;code&gt;console.log()&lt;/code&gt; or similar asynchronous operations inside an AsyncHooks callback function will thus cause an infinite recursion. An easy solution to this when debugging is to use a synchronous logging operation such as &lt;code&gt;fs.writeFileSync(file, msg, flag)&lt;/code&gt;. This will print to the file and will not invoke AsyncHooks recursively because it is synchronous.</source>
          <target state="translated">コンソールへの出力は非同期操作であるため、 &lt;code&gt;console.log()&lt;/code&gt; によってAsyncHooksコールバックが呼び出されます。したがって、AsyncHooksコールバック関数内で &lt;code&gt;console.log()&lt;/code&gt; または同様の非同期操作を使用すると、無限再帰が発生します。デバッグ時のこれに対する簡単な解決策は、 &lt;code&gt;fs.writeFileSync(file, msg, flag)&lt;/code&gt; などの同期ロギング操作を使用することです。これはファイルに出力され、同期であるためAsyncHooksを再帰的に呼び出しません。</target>
        </trans-unit>
        <trans-unit id="86bb2b19e31fabe9224782de43b7a53fdd55cf16" translate="yes" xml:space="preserve">
          <source>Because public keys can be derived from private keys, a private key may be passed instead of a public key.</source>
          <target state="translated">公開鍵は秘密鍵から派生することができるので、公開鍵の代わりに秘密鍵を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="302ca8c64322bc742ed684aba5f1bdb2293fb035" translate="yes" xml:space="preserve">
          <source>Because public keys can be derived from private keys, a private key may be passed instead of a public key. In that case, this function behaves as if &lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt;&lt;code&gt;crypto.createPrivateKey()&lt;/code&gt;&lt;/a&gt; had been called, except that the type of the returned &lt;code&gt;KeyObject&lt;/code&gt; will be &lt;code&gt;'public'&lt;/code&gt; and that the private key cannot be extracted from the returned &lt;code&gt;KeyObject&lt;/code&gt;. Similarly, if a &lt;code&gt;KeyObject&lt;/code&gt; with type &lt;code&gt;'private'&lt;/code&gt; is given, a new &lt;code&gt;KeyObject&lt;/code&gt; with type &lt;code&gt;'public'&lt;/code&gt; will be returned and it will be impossible to extract the private key from the returned object.</source>
          <target state="translated">公開鍵は秘密鍵から導出できるため、公開鍵の代わりに秘密鍵を渡すことができます。その場合、この関数は、返された &lt;code&gt;KeyObject&lt;/code&gt; のタイプが &lt;code&gt;'public'&lt;/code&gt; され、返された &lt;code&gt;KeyObject&lt;/code&gt; から秘密鍵を抽出できないことを除いて、&lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt; &lt;code&gt;crypto.createPrivateKey()&lt;/code&gt; &lt;/a&gt;が呼び出されたかのように動作します。同様に、タイプ &lt;code&gt;'private'&lt;/code&gt; &lt;code&gt;KeyObject&lt;/code&gt; が指定された場合、タイプ &lt;code&gt;'public'&lt;/code&gt; 新しい &lt;code&gt;KeyObject&lt;/code&gt; が返され、返されたオブジェクトから秘密鍵を抽出することはできません。</target>
        </trans-unit>
        <trans-unit id="05ecf9b2eaee27ff7c7a9da7750dcabd7d10fe69" translate="yes" xml:space="preserve">
          <source>Because public keys can be derived from private keys, a private key or a public key may be passed for &lt;code&gt;key&lt;/code&gt;.</source>
          <target state="translated">公開鍵は秘密鍵から導出できるため、秘密鍵または公開鍵をkeyに渡すことができ &lt;code&gt;key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="751d641184d0abb77bddb3c071ae868de829e68a" translate="yes" xml:space="preserve">
          <source>Because the Euro (&lt;code&gt;&amp;euro;&lt;/code&gt;) sign is not representable in US-ASCII, it is replaced with &lt;code&gt;?&lt;/code&gt; in the transcoded &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">ユーロ（ &lt;code&gt;&amp;euro;&lt;/code&gt; ）記号はUS-ASCIIでは表現できないため、 &lt;code&gt;?&lt;/code&gt; に置き換えられます。トランスコードされた &lt;code&gt;Buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc43de7f332dadbf8e964b31bf82337c42ae6a98" translate="yes" xml:space="preserve">
          <source>Because the behavior of &lt;code&gt;new Buffer()&lt;/code&gt; is different depending on the type of the first argument, security and reliability issues can be inadvertently introduced into applications when argument validation or &lt;code&gt;Buffer&lt;/code&gt; initialization is not performed.</source>
          <target state="translated">&lt;code&gt;new Buffer()&lt;/code&gt; の動作は最初の引数のタイプによって異なるため、引数の検証または &lt;code&gt;Buffer&lt;/code&gt; の初期化が実行されない場合、セキュリティと信頼性の問題がアプリケーションに誤って導入される可能性があります。</target>
        </trans-unit>
        <trans-unit id="8b80ae2aab5463a2451e9e29994ea910f7cbfd3b" translate="yes" xml:space="preserve">
          <source>Because the exact path to the compiled Addon binary can vary depending on how it is compiled (i.e. sometimes it may be in &lt;code&gt;./build/Debug/&lt;/code&gt;), Addons can use the &lt;a href=&quot;https://github.com/TooTallNate/node-bindings&quot;&gt;bindings&lt;/a&gt; package to load the compiled module.</source>
          <target state="translated">コンパイルされたアドオンバイナリへの正確なパスは、それがどのようにコンパイルされるか（つまり、。 &lt;code&gt;./build/Debug/&lt;/code&gt; ある場合もある）によって異なるため、アドオンは&lt;a href=&quot;https://github.com/TooTallNate/node-bindings&quot;&gt;bindings&lt;/a&gt;パッケージを使用してコンパイルされたモジュールをロードできます。</target>
        </trans-unit>
        <trans-unit id="759e7b279652e8b338737a67f94ca404ef31de24" translate="yes" xml:space="preserve">
          <source>Because the exact path to the compiled addon binary can vary depending on how it is compiled (i.e. sometimes it may be in &lt;code&gt;./build/Debug/&lt;/code&gt;), addons can use the &lt;a href=&quot;https://github.com/TooTallNate/node-bindings&quot;&gt;bindings&lt;/a&gt; package to load the compiled module.</source>
          <target state="translated">コンパイルされたアドオンバイナリへの正確なパスは、コンパイル方法によって異なる可能性があるため（つまり、。 &lt;code&gt;./build/Debug/&lt;/code&gt; ある場合もあります）、アドオンは&lt;a href=&quot;https://github.com/TooTallNate/node-bindings&quot;&gt;バインディング&lt;/a&gt;パッケージを使用してコンパイルされたモジュールをロードできます。</target>
        </trans-unit>
        <trans-unit id="77cc991b23ecd38f07e239dd8449b89a8d820bd3" translate="yes" xml:space="preserve">
          <source>Because the object cloning uses the structured clone algorithm, non-enumerable properties, property accessors, and object prototypes are not preserved. In particular, &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; objects are read as plain &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt;s on the receiving side.</source>
          <target state="translated">オブジェクトのクローン作成は構造化クローンアルゴリズムを使用するため、列挙できないプロパティ、プロパティアクセサー、およびオブジェクトのプロトタイプは保持されません。特に、&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;オブジェクトは、受信側でプレーンな&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt; &lt;code&gt;Uint8Array&lt;/code&gt; &lt;/a&gt;として読み取られます。</target>
        </trans-unit>
        <trans-unit id="960d327e7a558fd7889ffc561ca8765449c5ca4e" translate="yes" xml:space="preserve">
          <source>Because the object cloning uses the structured clone algorithm, non-enumerable properties, property accessors, and object prototypes are not preserved. In particular, &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; objects will be read as plain &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt;s on the receiving side.</source>
          <target state="translated">オブジェクトのクローンは構造化クローンアルゴリズムを使用するため、列挙できないプロパティ、プロパティアクセサー、およびオブジェクトプロトタイプは保持されません。特に、&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;オブジェクトは受信側でプレーンな&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt; &lt;code&gt;Uint8Array&lt;/code&gt; &lt;/a&gt;として読み取られます。</target>
        </trans-unit>
        <trans-unit id="c809abbc25168196481673be96fe4617efa899b1" translate="yes" xml:space="preserve">
          <source>Because using Node.js as an embedded library is different from writing code that is executed by Node.js, breaking changes do not follow typical Node.js &lt;a href=&quot;deprecations&quot;&gt;deprecation policy&lt;/a&gt; and may occur on each semver-major release without prior warning.</source>
          <target state="translated">Node.jsを埋め込みライブラリとして使用することは、Node.jsによって実行されるコードを記述することとは異なるため、重大な変更は通常のNode.jsの&lt;a href=&quot;deprecations&quot;&gt;非推奨ポリシーに&lt;/a&gt;従わず、事前の警告なしに各semver-majorリリースで発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="11a2ae3e203e98e6708ca3bfd5ea9f78d0b7445b" translate="yes" xml:space="preserve">
          <source>Because workers are all separate processes, they can be killed or re-spawned depending on a program's needs, without affecting other workers. As long as there are some workers still alive, the server will continue to accept connections. If no workers are alive, existing connections will be dropped and new connections will be refused. Node.js does not automatically manage the number of workers, however. It is the application's responsibility to manage the worker pool based on its own needs.</source>
          <target state="translated">ワーカーはすべて独立したプロセスであるため、プログラムの必要性に応じて、他のワーカーに影響を与えることなく、ワーカーを終了させたり、再生成させたりすることができます。まだ何人かのワーカーが生きている限り、サーバは接続を受け付け続けます。ワーカーが生きていない場合、既存の接続は切断され、新しい接続は拒否されます。ただし、Node.jsはワーカーの数を自動的に管理するわけではありません。アプリケーション自身のニーズに基づいてワーカープールを管理するのはアプリケーションの責任です。</target>
        </trans-unit>
        <trans-unit id="9d8251ebd1fcaa7d77c2d759766cc9c3e0380b63" translate="yes" xml:space="preserve">
          <source>Becomes &lt;code&gt;true&lt;/code&gt; when &lt;a href=&quot;#stream_event_end&quot;&gt;&lt;code&gt;'end'&lt;/code&gt;&lt;/a&gt; event is emitted.</source>
          <target state="translated">&lt;a href=&quot;#stream_event_end&quot;&gt; &lt;code&gt;'end'&lt;/code&gt; &lt;/a&gt;イベントが発生したときに &lt;code&gt;true&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="aa8f810adb45fb720b0fea2ba6a9771faf5aa1f3" translate="yes" xml:space="preserve">
          <source>Before Node.js v6.0, this event emitted only the message and the handle, but not the worker object, contrary to what the documentation stated.</source>
          <target state="translated">Node.js v6.0以前では、ドキュメントに記載されていることに反して、このイベントはメッセージとハンドルのみを放出し、ワーカーオブジェクトは放出しませんでした。</target>
        </trans-unit>
        <trans-unit id="1862072372d6d10bc19cd20b5f8c5559cb8e3e70" translate="yes" xml:space="preserve">
          <source>Before a module's code is executed, Node.js will wrap it with a function wrapper that looks like the following:</source>
          <target state="translated">モジュールのコードが実行される前に、Node.jsは以下のような関数ラッパーでラップします。</target>
        </trans-unit>
        <trans-unit id="41bb78145d0565f365c7b6b9c35f60d0fb4fa10a" translate="yes" xml:space="preserve">
          <source>Before subpath patterns were supported, a trailing &lt;code&gt;&quot;/&quot;&lt;/code&gt; suffix was used to support folder mappings:</source>
          <target state="translated">サブパスパターンがサポートされる前は、フォルダマッピングをサポートするために末尾の &lt;code&gt;&quot;/&quot;&lt;/code&gt; サフィックスが使用されていました。</target>
        </trans-unit>
        <trans-unit id="f998e665a4896197d04f48db4a8da278e7a7df50" translate="yes" xml:space="preserve">
          <source>Beginning in Node.js v11.0.0, calling these functions with &lt;code&gt;digest&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt; will print a deprecation warning to align with the behavior when &lt;code&gt;digest&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Node.js v11.0.0以降、 &lt;code&gt;digest&lt;/code&gt; を &lt;code&gt;null&lt;/code&gt; に設定してこれらの関数を呼び出すと、 &lt;code&gt;digest&lt;/code&gt; が &lt;code&gt;undefined&lt;/code&gt; 場合の動作に合わせて非推奨の警告が出力されます。</target>
        </trans-unit>
        <trans-unit id="5d1aeaaf9c43a9bd8c9a9ab58576019610bafd74" translate="yes" xml:space="preserve">
          <source>Beginning in Node.js v11.0.0, calling these functions with &lt;code&gt;digest&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt; would print a deprecation warning to align with the behavior when &lt;code&gt;digest&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">Node.js v11.0.0以降、 &lt;code&gt;digest&lt;/code&gt; を &lt;code&gt;null&lt;/code&gt; に設定してこれらの関数を呼び出すと、 &lt;code&gt;digest&lt;/code&gt; が &lt;code&gt;undefined&lt;/code&gt; 場合の動作に合わせて非推奨の警告が出力されます。</target>
        </trans-unit>
        <trans-unit id="fec9c063123448f52f9f22268436ea2142f1907a" translate="yes" xml:space="preserve">
          <source>Begins a graceful close of the &lt;code&gt;QuicSession&lt;/code&gt;. Existing &lt;code&gt;QuicStream&lt;/code&gt; instances will be permitted to close naturally. New &lt;code&gt;QuicStream&lt;/code&gt; instances will not be permitted. Once all &lt;code&gt;QuicStream&lt;/code&gt; instances have closed, the &lt;code&gt;QuicSession&lt;/code&gt; instance will be destroyed. Returns a &lt;code&gt;Promise&lt;/code&gt; that is resolved once the &lt;code&gt;QuicSession&lt;/code&gt; instance is destroyed.</source>
          <target state="translated">&lt;code&gt;QuicSession&lt;/code&gt; の正常な終了を開始します。既存の &lt;code&gt;QuicStream&lt;/code&gt; インスタンスは自然に閉じることが許可されます。新しい &lt;code&gt;QuicStream&lt;/code&gt; インスタンスは許可されません。すべての &lt;code&gt;QuicStream&lt;/code&gt; インスタンスが閉じられると、 &lt;code&gt;QuicSession&lt;/code&gt; インスタンスは破棄されます。 &lt;code&gt;QuicSession&lt;/code&gt; インスタンスが破棄されると解決される &lt;code&gt;Promise&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2c0d66b8d04e6d1cb2aa6cafcc5829a375657d21" translate="yes" xml:space="preserve">
          <source>Below is an example that resolves &lt;code&gt;'archive.org'&lt;/code&gt; then reverse resolves the IP addresses that are returned.</source>
          <target state="translated">以下は、 &lt;code&gt;'archive.org'&lt;/code&gt; を解決してから、返されたIPアドレスを逆解決する例です。</target>
        </trans-unit>
        <trans-unit id="72e3c3bc48b16a53304db10d8a9c608f131d7315" translate="yes" xml:space="preserve">
          <source>Below we give a suggested directory structure that could work:</source>
          <target state="translated">以下、私たちは動作する可能性のある提案されたディレクトリ構造を与えます。</target>
        </trans-unit>
        <trans-unit id="11b7e6e8c6eb35d20df4fedefc372c1c039a0fe1" translate="yes" xml:space="preserve">
          <source>Below, &lt;code&gt;bar.js&lt;/code&gt; makes use of the &lt;code&gt;square&lt;/code&gt; module, which exports a Square class:</source>
          <target state="translated">以下では、 &lt;code&gt;bar.js&lt;/code&gt; は、 &lt;code&gt;square&lt;/code&gt; クラスをエクスポートするsquareモジュールを使用します。</target>
        </trans-unit>
        <trans-unit id="17a245da23b3bed21115eda617d0db2f2984f389" translate="yes" xml:space="preserve">
          <source>Besides the async nature to await the completion behaves identically to &lt;a href=&quot;#assert_assert_doesnotthrow_fn_error_message&quot;&gt;&lt;code&gt;assert.doesNotThrow()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">完了を&lt;a href=&quot;#assert_assert_doesnotthrow_fn_error_message&quot;&gt; &lt;code&gt;assert.doesNotThrow()&lt;/code&gt; &lt;/a&gt;するという非同期の性質に加えて、assert.doesNotThrow（）と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="a45abf14381a4bb6f946b2d0bd65a076aa40ecf7" translate="yes" xml:space="preserve">
          <source>Besides the async nature to await the completion behaves identically to &lt;a href=&quot;#assert_assert_throws_fn_error_message&quot;&gt;&lt;code&gt;assert.throws()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">完了を待つ非同期の性質に加えて、&lt;a href=&quot;#assert_assert_throws_fn_error_message&quot;&gt; &lt;code&gt;assert.throws()&lt;/code&gt; &lt;/a&gt;と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="104fb1cb9588bb03abf68534a3546fd1945904e8" translate="yes" xml:space="preserve">
          <source>Binding the inspector to a public IP (including &lt;code&gt;0.0.0.0&lt;/code&gt;) with an open port is insecure, as it allows external hosts to connect to the inspector and perform a &lt;a href=&quot;https://www.owasp.org/index.php/Code_Injection&quot;&gt;remote code execution&lt;/a&gt; attack.</source>
          <target state="translated">外部ホストがインスペクターに接続して&lt;a href=&quot;https://www.owasp.org/index.php/Code_Injection&quot;&gt;リモートコード実行&lt;/a&gt;攻撃を実行できるため、開いているポートを使用してインスペクターをパブリックIP（ &lt;code&gt;0.0.0.0&lt;/code&gt; を含む）にバインドすることは安全ではありません。</target>
        </trans-unit>
        <trans-unit id="2d04651c15619bd502ea565ddb6f909183a8a8eb" translate="yes" xml:space="preserve">
          <source>Binds the &lt;code&gt;QuicEndpoint&lt;/code&gt; if it has not already been bound. User code will not typically be responsible for binding a &lt;code&gt;QuicEndpoint&lt;/code&gt; as the owning &lt;code&gt;QuicSocket&lt;/code&gt; will do that automatically.</source>
          <target state="translated">&lt;code&gt;QuicEndpoint&lt;/code&gt; がまだバインドされていない場合は、バインドします。所有する &lt;code&gt;QuicSocket&lt;/code&gt; が自動的にバインドするため、ユーザーコードは通常 &lt;code&gt;QuicEndpoint&lt;/code&gt; のバインドを担当しません。</target>
        </trans-unit>
        <trans-unit id="7a81151afeaca845d1c118c9e281d98d7d9aa8cc" translate="yes" xml:space="preserve">
          <source>Binds the given function to execute to this &lt;code&gt;AsyncResource&lt;/code&gt;'s scope.</source>
          <target state="translated">実行する特定の関数をこの &lt;code&gt;AsyncResource&lt;/code&gt; のスコープにバインドします。</target>
        </trans-unit>
        <trans-unit id="5fd1d1ed2272fbc2405065c2720c1f4ba4bcd1e3" translate="yes" xml:space="preserve">
          <source>Binds the given function to the current execution context.</source>
          <target state="translated">与えられた関数を現在の実行コンテキストにバインドします。</target>
        </trans-unit>
        <trans-unit id="f8c050254283d9f51e63070acdc4fe2abff851c1" translate="yes" xml:space="preserve">
          <source>Bit mask used to extract the file type code.</source>
          <target state="translated">ファイルタイプのコードを抽出するために使用されるビットマスク。</target>
        </trans-unit>
        <trans-unit id="38ca86f6b20a1c3f7445af772467122bf0798bbd" translate="yes" xml:space="preserve">
          <source>Blocking calls like these are mostly useful for simplifying general-purpose scripting tasks and for simplifying the loading/processing of application configuration at startup.</source>
          <target state="translated">これらのような呼び出しをブロックすることは、汎用的なスクリプティングタスクを簡素化したり、起動時のアプリケーション設定のロード/処理を簡素化したりするのに役立つことがほとんどです。</target>
        </trans-unit>
        <trans-unit id="e49e46f83817ae076662a9e1ac7de55763706d82" translate="yes" xml:space="preserve">
          <source>Blocks until a client (existing or connected later) has sent &lt;code&gt;Runtime.runIfWaitingForDebugger&lt;/code&gt; command.</source>
          <target state="translated">クライアント（既存または後で接続）が &lt;code&gt;Runtime.runIfWaitingForDebugger&lt;/code&gt; コマンドを送信するまでブロックします。</target>
        </trans-unit>
        <trans-unit id="d1dce5d4ec8a3cc9860ad75df035f434cb66662f" translate="yes" xml:space="preserve">
          <source>Boolean (read-only). True if headers were sent, false otherwise.</source>
          <target state="translated">ブール値 (読み取り専用)。ヘッダが送信された場合は真、そうでない場合は偽。</target>
        </trans-unit>
        <trans-unit id="76723148e1cbee2a4ed22f5975c62c431496c11c" translate="yes" xml:space="preserve">
          <source>Boolean flag enabling &amp;ldquo;Large Window Brotli&amp;rdquo; mode (not compatible with the Brotli format as standardized in &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc7932.txt&quot;&gt;RFC 7932&lt;/a&gt;).</source>
          <target state="translated">「Large Window Brotli」モードを有効にするブールフラグ（&lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc7932.txt&quot;&gt;RFC 7932で&lt;/a&gt;標準化されているBrotli形式と互換性がありません）。</target>
        </trans-unit>
        <trans-unit id="f451a245fcf06000ff5387581d65d298c952f303" translate="yes" xml:space="preserve">
          <source>Boolean flag that affects internal memory allocation patterns.</source>
          <target state="translated">内部メモリ割り当てパターンに影響を与えるブール値フラグ。</target>
        </trans-unit>
        <trans-unit id="3a42a4932b1e3f92c12fd5ce48d4cc1f4d19e1b3" translate="yes" xml:space="preserve">
          <source>Boolean flag that decreases compression ratio in favour of decompression speed.</source>
          <target state="translated">伸長速度を優先して圧縮率を低下させるブール値フラグ。</target>
        </trans-unit>
        <trans-unit id="92d4f753ad73b5c861d36157e9f3f2578a9cdcf2" translate="yes" xml:space="preserve">
          <source>Boolean value that indicates whether the response has completed. Starts as &lt;code&gt;false&lt;/code&gt;. After &lt;a href=&quot;#http2_response_end_data_encoding_callback&quot;&gt;&lt;code&gt;response.end()&lt;/code&gt;&lt;/a&gt; executes, the value will be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">応答が完了したかどうかを示すブール値。 &lt;code&gt;false&lt;/code&gt; として開始します。後&lt;a href=&quot;#http2_response_end_data_encoding_callback&quot;&gt; &lt;code&gt;response.end()&lt;/code&gt; &lt;/a&gt;を実行、値がされます &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf2822adc71f67075195db6338c46e0cce22a6a1" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; streams use the &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt; API in various ways to communicate the current state of the stream.</source>
          <target state="translated">&lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt;ストリームと読み取り可能ストリームはどちらも、&lt;a href=&quot;events#events_class_eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt; APIをさまざまな方法で使用して、ストリームの現在の状態を伝えます。</target>
        </trans-unit>
        <trans-unit id="92e8067b8a9edf1e60f4288801983d6541113def" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; streams will store data in an internal buffer that can be retrieved using &lt;code&gt;writable.writableBuffer&lt;/code&gt; or &lt;code&gt;readable.readableBuffer&lt;/code&gt;, respectively.</source>
          <target state="translated">&lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; の&lt;/a&gt;両方のストリームは、それぞれ &lt;code&gt;writable.writableBuffer&lt;/code&gt; または &lt;code&gt;readable.readableBuffer&lt;/code&gt; を使用して取得できる内部バッファーにデータを格納します。</target>
        </trans-unit>
        <trans-unit id="bbec51338c60c845af43267d174e455dc0392770" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;breakEvalOnSigint&lt;/code&gt; and &lt;code&gt;eval&lt;/code&gt; options were set in the &lt;a href=&quot;repl&quot;&gt;&lt;code&gt;REPL&lt;/code&gt;&lt;/a&gt; config, which is not supported.</source>
          <target state="translated">&lt;code&gt;breakEvalOnSigint&lt;/code&gt; オプションと &lt;code&gt;eval&lt;/code&gt; オプションの両方が&lt;a href=&quot;repl&quot;&gt; &lt;code&gt;REPL&lt;/code&gt; 構成で&lt;/a&gt;設定されましたが、これはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="467b46157dc7c87e9e6bbd48b726836714d3c38a" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;utilization1&lt;/code&gt; and &lt;code&gt;utilization2&lt;/code&gt; are optional parameters.</source>
          <target state="translated">&lt;code&gt;utilization1&lt;/code&gt; と &lt;code&gt;utilization2&lt;/code&gt; 2はどちらもオプションのパラメーターです。</target>
        </trans-unit>
        <trans-unit id="a948f8e347862760ffc1a502a3aebe8d17c52726" translate="yes" xml:space="preserve">
          <source>Both session identifiers and session tickets timeout, causing the server to create new sessions. The timeout can be configured with the &lt;code&gt;sessionTimeout&lt;/code&gt; option of &lt;a href=&quot;#tls_tls_createserver_options_secureconnectionlistener&quot;&gt;&lt;code&gt;tls.createServer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">セッション識別子とセッションチケットの両方がタイムアウトし、サーバーが新しいセッションを作成します。タイムアウトは&lt;a href=&quot;#tls_tls_createserver_options_secureconnectionlistener&quot;&gt; &lt;code&gt;tls.createServer()&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;sessionTimeout&lt;/code&gt; オプションで設定できます。</target>
        </trans-unit>
        <trans-unit id="a10e9245332d2b98b4eb83e0a5e55107c7a90735" translate="yes" xml:space="preserve">
          <source>Both the tools listed here require that &lt;em&gt;users&lt;/em&gt; of the native addon have a C/C++ toolchain installed in order to successfully install the native addon.</source>
          <target state="translated">ここにリストされている両方のツールでは、ネイティブアドオンを正常にインストールするには、ネイティブアドオンの&lt;em&gt;ユーザー&lt;/em&gt;にC / C ++ツールチェーンがインストールされている必要があり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7c9d6bf311ebf7df595c65a8f4924a3b8d06c104" translate="yes" xml:space="preserve">
          <source>Break</source>
          <target state="translated">Break</target>
        </trans-unit>
        <trans-unit id="b99eb128fc73ee445a8e902924f23b26a340df57" translate="yes" xml:space="preserve">
          <source>Breaking changes to the API are expected in a future major release.</source>
          <target state="translated">APIの変更は、今後のメジャーリリースで予定されています。</target>
        </trans-unit>
        <trans-unit id="21a8752f2df54d656b09cd2a499cb3a3403ec7ca" translate="yes" xml:space="preserve">
          <source>Breakpoints</source>
          <target state="translated">Breakpoints</target>
        </trans-unit>
        <trans-unit id="0770db595a77f58797f867ec2524689f875b8bc6" translate="yes" xml:space="preserve">
          <source>Broadcasts a datagram on the socket. For connectionless sockets, the destination &lt;code&gt;port&lt;/code&gt; and &lt;code&gt;address&lt;/code&gt; must be specified. Connected sockets, on the other hand, will use their associated remote endpoint, so the &lt;code&gt;port&lt;/code&gt; and &lt;code&gt;address&lt;/code&gt; arguments must not be set.</source>
          <target state="translated">ソケットでデータグラムをブロードキャストします。コネクションレス型ソケットの場合、宛先 &lt;code&gt;port&lt;/code&gt; と &lt;code&gt;address&lt;/code&gt; 指定する必要があります。一方、接続されたソケットは、関連付けられたリモートエンドポイントを使用するため、 &lt;code&gt;port&lt;/code&gt; と &lt;code&gt;address&lt;/code&gt; 引数を設定しないでください。</target>
        </trans-unit>
        <trans-unit id="4e011f868d39eb819acc8009c284479fbc5351d2" translate="yes" xml:space="preserve">
          <source>Brotli constants</source>
          <target state="translated">ブロトリ定数</target>
        </trans-unit>
        <trans-unit id="e35a1d0137590ab6558bd54fa26cadd2e3428d43" translate="yes" xml:space="preserve">
          <source>BrotliOptions</source>
          <target state="translated">BrotliOptions</target>
        </trans-unit>
        <trans-unit id="0e4985a83b4840ac6d361b21c082a700081c8d07" translate="yes" xml:space="preserve">
          <source>Browser-compatible &lt;code&gt;URL&lt;/code&gt; class, implemented by following the WHATWG URL Standard. &lt;a href=&quot;https://url.spec.whatwg.org/#example-url-parsing&quot;&gt;Examples of parsed URLs&lt;/a&gt; may be found in the Standard itself. The &lt;code&gt;URL&lt;/code&gt; class is also available on the global object.</source>
          <target state="translated">WHATWG URL標準に従って実装されたブラウザ互換の &lt;code&gt;URL&lt;/code&gt; クラス。&lt;a href=&quot;https://url.spec.whatwg.org/#example-url-parsing&quot;&gt;解析されたURLの例は&lt;/a&gt;、標準自体にあります。 &lt;code&gt;URL&lt;/code&gt; のクラスはグローバルオブジェクトにも使用可能です。</target>
        </trans-unit>
        <trans-unit id="2be5f64b36230104ef9c6e230215846a83d18df6" translate="yes" xml:space="preserve">
          <source>Buffer</source>
          <target state="translated">Buffer</target>
        </trans-unit>
        <trans-unit id="12e4f799634fb783b669c5f1d00234c89318acee" translate="yes" xml:space="preserve">
          <source>Buffer Constants</source>
          <target state="translated">バッファ定数</target>
        </trans-unit>
        <trans-unit id="82e181c0c578cd6d80093a33c015125682729194" translate="yes" xml:space="preserve">
          <source>Buffer constants</source>
          <target state="translated">バッファ定数</target>
        </trans-unit>
        <trans-unit id="23dd82d623fb976c8b655f70d02fd824c2106844" translate="yes" xml:space="preserve">
          <source>Buffering</source>
          <target state="translated">Buffering</target>
        </trans-unit>
        <trans-unit id="80ec43af70811a5e711008f27e40e58380191823" translate="yes" xml:space="preserve">
          <source>Buffers and Character Encodings</source>
          <target state="translated">バッファと文字エンコード</target>
        </trans-unit>
        <trans-unit id="8d8051eed2cbf5d235babea08ddbf266827a3a5d" translate="yes" xml:space="preserve">
          <source>Buffers and TypedArray</source>
          <target state="translated">バッファとTypedArray</target>
        </trans-unit>
        <trans-unit id="5af599f7836089ac79e0a63070c6a49a67056538" translate="yes" xml:space="preserve">
          <source>Buffers and TypedArrays</source>
          <target state="translated">バッファと型付き配列</target>
        </trans-unit>
        <trans-unit id="b2fad64d18909a0efd248e0d86afff8fd51a2cce" translate="yes" xml:space="preserve">
          <source>Buffers and character encodings</source>
          <target state="translated">バッファと文字エンコーディング</target>
        </trans-unit>
        <trans-unit id="e5720d067f317b23fcf4f1282e5377ded87d7b40" translate="yes" xml:space="preserve">
          <source>Buffers and iteration</source>
          <target state="translated">バッファとイテレーション</target>
        </trans-unit>
        <trans-unit id="2764e7dc64a6afa8f6572a70be9cc2ef88d207b2" translate="yes" xml:space="preserve">
          <source>Build tools</source>
          <target state="translated">ビルドツール</target>
        </trans-unit>
        <trans-unit id="6c3e65ffe7f20f69532c70292e8fe02a0ac31970" translate="yes" xml:space="preserve">
          <source>Build with a pre-installed ICU (&lt;code&gt;system-icu&lt;/code&gt;)</source>
          <target state="translated">プレインストールされたICU（ &lt;code&gt;system-icu&lt;/code&gt; ）でビルドする</target>
        </trans-unit>
        <trans-unit id="9d914bfcf1c5bc9e6b83d3232349cae23d392f30" translate="yes" xml:space="preserve">
          <source>Building</source>
          <target state="translated">Building</target>
        </trans-unit>
        <trans-unit id="9bcc2b6605f2f44e32f3bbfe699d332c866107ee" translate="yes" xml:space="preserve">
          <source>Built-in libraries are now available as predefined variables.</source>
          <target state="translated">組み込みのライブラリが定義済みの変数として利用できるようになりました。</target>
        </trans-unit>
        <trans-unit id="50db02894a4e9938cec795aa1e98dc847d42a037" translate="yes" xml:space="preserve">
          <source>Builtin modules</source>
          <target state="translated">ビルトインモジュール</target>
        </trans-unit>
        <trans-unit id="fb4ef6d1d8f93b1f5e0dce50d53bb7dc4546a3d7" translate="yes" xml:space="preserve">
          <source>Builtin modules will provide named exports of their public API, as well as a default export which can be used for, among other things, modifying the named exports. Named exports of builtin modules are updated when the corresponding exports property is accessed, redefined, or deleted.</source>
          <target state="translated">ビルトインモジュールは、そのパブリック API の名前付きエクスポートと、名前付きエクスポートを修正するために使用できるデフォルトのエクスポートを提供します。ビルトインモジュールの名前付きエクスポートは、対応する exports プロパティにアクセス、再定義、または削除されたときに更新されます。</target>
        </trans-unit>
        <trans-unit id="6cc4d8aacb34c43335f1e66ea99bef9e07fbcadb" translate="yes" xml:space="preserve">
          <source>By default (&lt;code&gt;allowHalfOpen&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;) the socket will send a FIN packet back and destroy its file descriptor once it has written out its pending write queue. However, if &lt;code&gt;allowHalfOpen&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the socket will not automatically &lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt; its writable side, allowing the user to write arbitrary amounts of data. The user must call &lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt;&lt;code&gt;end()&lt;/code&gt;&lt;/a&gt; explicitly to close the connection (i.e. sending a FIN packet back).</source>
          <target state="translated">デフォルトでは（ &lt;code&gt;allowHalfOpen&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合）、ソケットはFINパケットを送り返し、保留中の書き込みキューに書き込まれると、ファイル記述子を破棄します。ただし、 &lt;code&gt;allowHalfOpen&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; に設定されている場合、ソケットは書き込み可能な側を自動的に&lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt; &lt;code&gt;end()&lt;/code&gt; &lt;/a&gt;しないため、ユーザーは任意の量のデータを書き込むことができます。ユーザーは、&lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt; &lt;code&gt;end()&lt;/code&gt; を&lt;/a&gt;明示的に呼び出して接続を閉じる（つまり、FINパケットを送り返す）必要があります。</target>
        </trans-unit>
        <trans-unit id="11ee0c95f68c87a49aaea054c734f0756de04a7a" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;EventEmitter&lt;/code&gt;s will print a warning if more than &lt;code&gt;10&lt;/code&gt; listeners are added for a particular event. This is a useful default that helps finding memory leaks. Obviously, not all events should be limited to just 10 listeners. The &lt;code&gt;emitter.setMaxListeners()&lt;/code&gt; method allows the limit to be modified for this specific &lt;code&gt;EventEmitter&lt;/code&gt; instance. The value can be set to &lt;code&gt;Infinity&lt;/code&gt; (or &lt;code&gt;0&lt;/code&gt;) to indicate an unlimited number of listeners.</source>
          <target state="translated">デフォルトでは、特定のイベントに &lt;code&gt;10&lt;/code&gt; を超えるリスナーが追加された場合、 &lt;code&gt;EventEmitter&lt;/code&gt; は警告を出力します。これは、メモリリークの検出に役立つ便利なデフォルトです。もちろん、すべてのイベントが10人のリスナーに限定されるわけではありません。 &lt;code&gt;emitter.setMaxListeners()&lt;/code&gt; メソッドは、限界が、この特定のために修正されることを可能に &lt;code&gt;EventEmitter&lt;/code&gt; インスタンス。値を &lt;code&gt;Infinity&lt;/code&gt; （または &lt;code&gt;0&lt;/code&gt; ）に設定して、リスナーの数が無制限であることを示すことができます。</target>
        </trans-unit>
        <trans-unit id="b34a6ead15624e8cbe54d0ff3b87b9f3f9e521d4" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;EventEmitter&lt;/code&gt;s will print a warning if more than &lt;code&gt;10&lt;/code&gt; listeners are added for a particular event. This is a useful default that helps finding memory leaks. The &lt;code&gt;emitter.setMaxListeners()&lt;/code&gt; method allows the limit to be modified for this specific &lt;code&gt;EventEmitter&lt;/code&gt; instance. The value can be set to &lt;code&gt;Infinity&lt;/code&gt; (or &lt;code&gt;0&lt;/code&gt;) to indicate an unlimited number of listeners.</source>
          <target state="translated">デフォルトでは、特定のイベントに &lt;code&gt;10&lt;/code&gt; を超えるリスナーが追加された場合、 &lt;code&gt;EventEmitter&lt;/code&gt; は警告を出力します。これは、メモリリークを見つけるのに役立つ便利なデフォルトです。 &lt;code&gt;emitter.setMaxListeners()&lt;/code&gt; メソッドは、限界が、この特定のために修正されることを可能に &lt;code&gt;EventEmitter&lt;/code&gt; インスタンス。値を &lt;code&gt;Infinity&lt;/code&gt; （または &lt;code&gt;0&lt;/code&gt; ）に設定して、リスナーの数に制限がないことを示すことができます。</target>
        </trans-unit>
        <trans-unit id="202557f7f915841f681d6b58d74b773f875d4053" translate="yes" xml:space="preserve">
          <source>By default all unhandled rejections trigger a warning plus a deprecation warning for the very first unhandled rejection in case no &lt;a href=&quot;process#process_event_unhandledrejection&quot;&gt;&lt;code&gt;unhandledRejection&lt;/code&gt;&lt;/a&gt; hook is used.</source>
          <target state="translated">デフォルトでは、すべての未処理の拒否は警告に加えて、&lt;a href=&quot;process#process_event_unhandledrejection&quot;&gt; &lt;code&gt;unhandledRejection&lt;/code&gt; &lt;/a&gt;フックが使用されていない場合の最初の未処理の拒否に対する非推奨警告をトリガーします。</target>
        </trans-unit>
        <trans-unit id="2ca914c407c4d158688627fe49d3c90e1428e782" translate="yes" xml:space="preserve">
          <source>By default inspector websocket url is available in stderr and under &lt;code&gt;/json/list&lt;/code&gt; endpoint on &lt;code&gt;http://host:port/json/list&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、インスペクターのWebソケットURLは、stderrと &lt;code&gt;http://host:port/json/list&lt;/code&gt; の &lt;code&gt;/json/list&lt;/code&gt; エンドポイントで利用できます。</target>
        </trans-unit>
        <trans-unit id="5f91080334739e3155e81d4196ebb3f760a35023" translate="yes" xml:space="preserve">
          <source>By default set to 256. For agents with &lt;code&gt;keepAlive&lt;/code&gt; enabled, this sets the maximum number of sockets that will be left open in the free state.</source>
          <target state="translated">デフォルトでは256に設定されています &lt;code&gt;keepAlive&lt;/code&gt; 有効になっているエージェントの場合、これは空き状態で開いたままにされるソケットの最大数を設定します。</target>
        </trans-unit>
        <trans-unit id="b65d1a50bed16c68390d90247b5f954900e6c6a4" translate="yes" xml:space="preserve">
          <source>By default set to &lt;code&gt;Infinity&lt;/code&gt;. Determines how many concurrent sockets the agent can have open per origin. Origin is the returned value of &lt;a href=&quot;#http_agent_getname_options&quot;&gt;&lt;code&gt;agent.getName()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは &lt;code&gt;Infinity&lt;/code&gt; に設定されています。エージェントがオリジンごとに開くことができる同時ソケットの数を決定します。Originは、&lt;a href=&quot;#http_agent_getname_options&quot;&gt; &lt;code&gt;agent.getName()&lt;/code&gt; の&lt;/a&gt;戻り値です。</target>
        </trans-unit>
        <trans-unit id="90f3e115759bbe74d2057679e11974ae269546a8" translate="yes" xml:space="preserve">
          <source>By default set to &lt;code&gt;Infinity&lt;/code&gt;. Determines how many concurrent sockets the agent can have open. Unlike &lt;code&gt;maxSockets&lt;/code&gt;, this parameter applies across all origins.</source>
          <target state="translated">デフォルトでは &lt;code&gt;Infinity&lt;/code&gt; に設定されています。エージェントが開くことができる同時ソケットの数を決定します。 &lt;code&gt;maxSockets&lt;/code&gt; とは異なり、このパラメーターはすべてのオリジンに適用されます。</target>
        </trans-unit>
        <trans-unit id="28813e2e7dfe7803dcf71ad39048b5aacd0e60af" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;node.async_hooks&lt;/code&gt;, and &lt;code&gt;v8&lt;/code&gt; categories are enabled.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;node&lt;/code&gt; 、 &lt;code&gt;node.async_hooks&lt;/code&gt; 、および &lt;code&gt;v8&lt;/code&gt; カテゴリーが有効になっています。</target>
        </trans-unit>
        <trans-unit id="d63f54a664f33273ebb1fe71197458ae8fa1d6cb" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; instances format output using the &lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt;&lt;code&gt;util.inspect()&lt;/code&gt;&lt;/a&gt; method before writing the output to the provided &lt;code&gt;Writable&lt;/code&gt; stream (&lt;code&gt;process.stdout&lt;/code&gt; by default). The &lt;code&gt;showProxy&lt;/code&gt; inspection option is set to true by default and the &lt;code&gt;colors&lt;/code&gt; option is set to true depending on the REPL's &lt;code&gt;useColors&lt;/code&gt; option.</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;#repl_class_replserver&quot;&gt; &lt;code&gt;repl.REPLServer&lt;/code&gt; &lt;/a&gt;インスタンスは、提供された &lt;code&gt;Writable&lt;/code&gt; ストリーム（デフォルトでは &lt;code&gt;process.stdout&lt;/code&gt; ）に出力を書き込む前に、&lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt; &lt;code&gt;util.inspect()&lt;/code&gt; &lt;/a&gt;メソッドを使用して出力をフォーマットします。 &lt;code&gt;showProxy&lt;/code&gt; の検査オプションはデフォルトでtrueに設定されており、 &lt;code&gt;colors&lt;/code&gt; オプションは、REPLのに応じて、trueに設定されている &lt;code&gt;useColors&lt;/code&gt; のオプション。</target>
        </trans-unit>
        <trans-unit id="8bf222e54eb55d9b78ad98ea0087d0727c9eb2bb" translate="yes" xml:space="preserve">
          <source>By default, &lt;a href=&quot;#stream_writable_end_chunk_encoding_callback&quot;&gt;&lt;code&gt;stream.end()&lt;/code&gt;&lt;/a&gt; is called on the destination &lt;code&gt;Writable&lt;/code&gt; stream when the source &lt;code&gt;Readable&lt;/code&gt; stream emits &lt;a href=&quot;#stream_event_end&quot;&gt;&lt;code&gt;'end'&lt;/code&gt;&lt;/a&gt;, so that the destination is no longer writable. To disable this default behavior, the &lt;code&gt;end&lt;/code&gt; option can be passed as &lt;code&gt;false&lt;/code&gt;, causing the destination stream to remain open:</source>
          <target state="translated">デフォルトでは、ソースの &lt;code&gt;Readable&lt;/code&gt; ストリームが&lt;a href=&quot;#stream_event_end&quot;&gt; &lt;code&gt;'end'&lt;/code&gt; を&lt;/a&gt;&lt;a href=&quot;#stream_writable_end_chunk_encoding_callback&quot;&gt; &lt;code&gt;stream.end()&lt;/code&gt; &lt;/a&gt;と、宛先の &lt;code&gt;Writable&lt;/code&gt; ストリームでstream.end（）が呼び出されるため、宛先は書き込み可能ではなくなります。このデフォルトの動作を無効にするには、 &lt;code&gt;end&lt;/code&gt; オプションを &lt;code&gt;false&lt;/code&gt; として渡し、宛先ストリームを開いたままにします。</target>
        </trans-unit>
        <trans-unit id="0cfb62c9e90d2b1c492b84ce0e3e9f6be5a1b1f1" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;child_process.fork()&lt;/code&gt; will spawn new Node.js instances using the &lt;a href=&quot;process#process_process_execpath&quot;&gt;&lt;code&gt;process.execPath&lt;/code&gt;&lt;/a&gt; of the parent process. The &lt;code&gt;execPath&lt;/code&gt; property in the &lt;code&gt;options&lt;/code&gt; object allows for an alternative execution path to be used.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;child_process.fork()&lt;/code&gt; は親プロセスの&lt;a href=&quot;process#process_process_execpath&quot;&gt; &lt;code&gt;process.execPath&lt;/code&gt; &lt;/a&gt;を使用して新しいNode.jsインスタンスを生成します。 &lt;code&gt;options&lt;/code&gt; オブジェクトの &lt;code&gt;execPath&lt;/code&gt; プロパティを使用すると、代替実行パスを使用できます。</target>
        </trans-unit>
        <trans-unit id="b37951cc194679e9b33730db8a32abc81d440f81" translate="yes" xml:space="preserve">
          <source>By default, Node.js will print process warnings to &lt;code&gt;stderr&lt;/code&gt;. The &lt;code&gt;--no-warnings&lt;/code&gt; command-line option can be used to suppress the default console output but the &lt;code&gt;'warning'&lt;/code&gt; event will still be emitted by the &lt;code&gt;process&lt;/code&gt; object.</source>
          <target state="translated">デフォルトでは、Node.jsはプロセス警告を &lt;code&gt;stderr&lt;/code&gt; に出力します。 &lt;code&gt;--no-warnings&lt;/code&gt; コマンドラインオプションは、デフォルトのコンソール出力を抑制するために使用することができますが、 &lt;code&gt;'warning'&lt;/code&gt; のイベントがまだによって放出される &lt;code&gt;process&lt;/code&gt; オブジェクト。</target>
        </trans-unit>
        <trans-unit id="cfc34d8672001a73cdbee6fb87f91815a02a0574" translate="yes" xml:space="preserve">
          <source>By default, a listening &lt;code&gt;QuicSocket&lt;/code&gt; will generate stateless reset tokens when appropriate. The &lt;code&gt;disableStatelessReset&lt;/code&gt; option may be set when the &lt;code&gt;QuicSocket&lt;/code&gt; is created to disable generation of stateless resets. The &lt;code&gt;quicsocket.statelessReset&lt;/code&gt; property allows stateless reset to be turned on and off dynamically through the lifetime of the &lt;code&gt;QuicSocket&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、リスニング &lt;code&gt;QuicSocket&lt;/code&gt; は、必要に応じてステートレスリセットトークンを生成します。 &lt;code&gt;disableStatelessReset&lt;/code&gt; の際にオプションが設定することができる &lt;code&gt;QuicSocket&lt;/code&gt; はステートレスリセットの無効世代に作成されます。 &lt;code&gt;quicsocket.statelessReset&lt;/code&gt; のプロパティは、ステートレスリセットの寿命を通じて動的にオン・オフされることを可能にする &lt;code&gt;QuicSocket&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75d7b2c5a51e3e9d87ab179d3e63be3365baf30e" translate="yes" xml:space="preserve">
          <source>By default, a maximum of &lt;code&gt;10&lt;/code&gt; listeners can be registered for any single event. This limit can be changed for individual &lt;code&gt;EventEmitter&lt;/code&gt; instances using the &lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt;&lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt;&lt;/a&gt; method. To change the default for &lt;em&gt;all&lt;/em&gt;&lt;code&gt;EventEmitter&lt;/code&gt; instances, the &lt;code&gt;EventEmitter.defaultMaxListeners&lt;/code&gt; property can be used. If this value is not a positive number, a &lt;code&gt;RangeError&lt;/code&gt; is thrown.</source>
          <target state="translated">デフォルトでは、1つのイベントに最大 &lt;code&gt;10&lt;/code&gt; 人のリスナーを登録できます。この制限は、&lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt; &lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt; &lt;/a&gt;メソッドを使用して、個々の &lt;code&gt;EventEmitter&lt;/code&gt; インスタンスに対して変更できます。&lt;em&gt;すべての&lt;/em&gt; &lt;code&gt;EventEmitter&lt;/code&gt; インスタンスのデフォルトを変更するには、 &lt;code&gt;EventEmitter.defaultMaxListeners&lt;/code&gt; プロパティを使用できます。この値が正の数でない場合、 &lt;code&gt;RangeError&lt;/code&gt; がスローされます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7d8427586d102b75ae9ef1d8e24762397831f29e" translate="yes" xml:space="preserve">
          <source>By default, a maximum of &lt;code&gt;10&lt;/code&gt; listeners can be registered for any single event. This limit can be changed for individual &lt;code&gt;EventEmitter&lt;/code&gt; instances using the &lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt;&lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt;&lt;/a&gt; method. To change the default for &lt;em&gt;all&lt;/em&gt;&lt;code&gt;EventEmitter&lt;/code&gt; instances, the &lt;code&gt;EventEmitter.defaultMaxListeners&lt;/code&gt; property can be used. If this value is not a positive number, a &lt;code&gt;TypeError&lt;/code&gt; will be thrown.</source>
          <target state="translated">デフォルトでは、1つのイベントに対して最大 &lt;code&gt;10&lt;/code&gt; のリスナーを登録できます。この制限は、&lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt; &lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt; &lt;/a&gt;メソッドを使用して、個々の &lt;code&gt;EventEmitter&lt;/code&gt; インスタンスに対して変更できます。&lt;em&gt;すべての&lt;/em&gt; &lt;code&gt;EventEmitter&lt;/code&gt; インスタンスのデフォルトを変更するには、 &lt;code&gt;EventEmitter.defaultMaxListeners&lt;/code&gt; プロパティを使用できます。この値が正の数でない場合、 &lt;code&gt;TypeError&lt;/code&gt; がスローされます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7cdf7ae05e4b6ac71a79e223e72697e520c7f8d9" translate="yes" xml:space="preserve">
          <source>By default, a maximum of &lt;code&gt;10&lt;/code&gt; listeners can be registered for any single event. This limit can be changed for individual &lt;code&gt;EventEmitter&lt;/code&gt; instances using the &lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt;&lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt;&lt;/a&gt; method. To change the default for &lt;em&gt;all&lt;/em&gt;&lt;code&gt;EventEmitter&lt;/code&gt; instances, the &lt;code&gt;events.defaultMaxListeners&lt;/code&gt; property can be used. If this value is not a positive number, a &lt;code&gt;RangeError&lt;/code&gt; is thrown.</source>
          <target state="translated">デフォルトでは、1つのイベントに最大 &lt;code&gt;10&lt;/code&gt; 人のリスナーを登録できます。この制限は、&lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt; &lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt; &lt;/a&gt;メソッドを使用して、個々の &lt;code&gt;EventEmitter&lt;/code&gt; インスタンスに対して変更できます。&lt;em&gt;すべての&lt;/em&gt; &lt;code&gt;EventEmitter&lt;/code&gt; インスタンスのデフォルトを変更するには、 &lt;code&gt;events.defaultMaxListeners&lt;/code&gt; プロパティを使用できます。この値が正の数でない場合、 &lt;code&gt;RangeError&lt;/code&gt; がスローされます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bfe72ff29c196538639169d072a2c000f836560d" translate="yes" xml:space="preserve">
          <source>By default, all &lt;code&gt;FSWatcher&lt;/code&gt; objects are &quot;ref'ed&quot;, making it normally unnecessary to call &lt;code&gt;watcher.ref()&lt;/code&gt; unless &lt;code&gt;watcher.unref()&lt;/code&gt; had been called previously.</source>
          <target state="translated">デフォルトでは、すべての &lt;code&gt;FSWatcher&lt;/code&gt; オブジェクトが「参照」されるため、 &lt;code&gt;watcher.unref()&lt;/code&gt; が以前に呼び出されていない限り、通常は &lt;code&gt;watcher.ref()&lt;/code&gt; を呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="27f87a2e565b134494421fe1803569e3bfac561b" translate="yes" xml:space="preserve">
          <source>By default, all &lt;code&gt;Immediate&lt;/code&gt; objects are &quot;ref'ed&quot;, making it normally unnecessary to call &lt;code&gt;immediate.ref()&lt;/code&gt; unless &lt;code&gt;immediate.unref()&lt;/code&gt; had been called previously.</source>
          <target state="translated">デフォルトでは、すべての &lt;code&gt;Immediate&lt;/code&gt; オブジェクトが「参照」されるため、以前に &lt;code&gt;immediate.unref()&lt;/code&gt; が呼び出されていなかった場合を除き、通常は &lt;code&gt;immediate.ref()&lt;/code&gt; を呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="57926dcf274bb35a5839fbac277de9df81a17bff" translate="yes" xml:space="preserve">
          <source>By default, all &lt;code&gt;StatWatcher&lt;/code&gt; objects are &quot;ref'ed&quot;, making it normally unnecessary to call &lt;code&gt;watcher.ref()&lt;/code&gt; unless &lt;code&gt;watcher.unref()&lt;/code&gt; had been called previously.</source>
          <target state="translated">デフォルトでは、すべての &lt;code&gt;StatWatcher&lt;/code&gt; オブジェクトが「参照」されるため、 &lt;code&gt;watcher.unref()&lt;/code&gt; が以前に呼び出されていない限り、通常は &lt;code&gt;watcher.ref()&lt;/code&gt; を呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="3a5d92384948c12af2e5fca7d9dad8301e55f2c2" translate="yes" xml:space="preserve">
          <source>By default, all &lt;code&gt;Timeout&lt;/code&gt; objects are &quot;ref'ed&quot;, making it normally unnecessary to call &lt;code&gt;timeout.ref()&lt;/code&gt; unless &lt;code&gt;timeout.unref()&lt;/code&gt; had been called previously.</source>
          <target state="translated">デフォルトでは、すべての &lt;code&gt;Timeout&lt;/code&gt; オブジェクトは「参照」されているため、 &lt;code&gt;timeout.unref()&lt;/code&gt; が以前に呼び出されていなければ、通常は &lt;code&gt;timeout.ref()&lt;/code&gt; を呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="c36ec7767812bd7d3ccfe70d5c9b2f50bd4cfeb2" translate="yes" xml:space="preserve">
          <source>By default, all instances of &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; use an evaluation function that evaluates JavaScript expressions and provides access to Node.js built-in modules. This default behavior can be overridden by passing in an alternative evaluation function when the &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; instance is created.</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;#repl_class_replserver&quot;&gt; &lt;code&gt;repl.REPLServer&lt;/code&gt; の&lt;/a&gt;すべてのインスタンスは、JavaScript式を評価し、Node.js組み込みモジュールへのアクセスを提供する評価関数を使用します。このデフォルトの動作は、&lt;a href=&quot;#repl_class_replserver&quot;&gt; &lt;code&gt;repl.REPLServer&lt;/code&gt; &lt;/a&gt;インスタンスの作成時に代替の評価関数を渡すことでオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="f8d76964354342530522f73f2faa55b344082b7c" translate="yes" xml:space="preserve">
          <source>By default, all instances of &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; use an evaluation function that evaluates JavaScript expressions and provides access to Node.js' built-in modules. This default behavior can be overridden by passing in an alternative evaluation function when the &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; instance is created.</source>
          <target state="translated">デフォルトでは、&lt;a href=&quot;#repl_class_replserver&quot;&gt; &lt;code&gt;repl.REPLServer&lt;/code&gt; の&lt;/a&gt;すべてのインスタンスは、JavaScript式を評価し、Node.jsの組み込みモジュールへのアクセスを提供する評価関数を使用します。このデフォルトの動作は、&lt;a href=&quot;#repl_class_replserver&quot;&gt; &lt;code&gt;repl.REPLServer&lt;/code&gt; &lt;/a&gt;インスタンスの作成時に代替評価関数を渡すことでオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="aae30d5c73d9d79e8a2188bc5f4b152b12c62f43" translate="yes" xml:space="preserve">
          <source>By default, all subpaths from a package can be imported (&lt;code&gt;import 'pkg/x.js'&lt;/code&gt;). Custom subpath aliasing and encapsulation can be provided through the &lt;code&gt;&quot;exports&quot;&lt;/code&gt; field.</source>
          <target state="translated">デフォルトでは、パッケージのすべてのサブパスを &lt;code&gt;import 'pkg/x.js'&lt;/code&gt; できます（import 'pkg / x.js'）。カスタムのサブパスのエイリアスとカプセル化は、 &lt;code&gt;&quot;exports&quot;&lt;/code&gt; フィールドで提供できます。</target>
        </trans-unit>
        <trans-unit id="04197712c1c9818e08ac42b34fb5a047bccfe77f" translate="yes" xml:space="preserve">
          <source>By default, binding a socket will cause it to block the Node.js process from exiting as long as the socket is open. The &lt;code&gt;socket.unref()&lt;/code&gt; method can be used to exclude the socket from the reference counting that keeps the Node.js process active, allowing the process to exit even if the socket is still listening.</source>
          <target state="translated">デフォルトでは、ソケットをバインドすると、ソケットが開いている限り、Node.jsプロセスの終了がブロックされます。 &lt;code&gt;socket.unref()&lt;/code&gt; メソッドは、プロセスがソケットがまだ聴いている場合でも終了することができ、Node.jsのがアクティブなプロセス保持参照カウントからソケットを除外するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="efcba8983b787530ecb21473310e7ebe0a8f27e7" translate="yes" xml:space="preserve">
          <source>By default, binding a socket will cause it to block the Node.js process from exiting as long as the socket is open. The &lt;code&gt;socket.unref()&lt;/code&gt; method can be used to exclude the socket from the reference counting that keeps the Node.js process active. The &lt;code&gt;socket.ref()&lt;/code&gt; method adds the socket back to the reference counting and restores the default behavior.</source>
          <target state="translated">デフォルトでは、ソケットをバインドすると、ソケットが開いている限り、Node.jsプロセスの終了がブロックされます。 &lt;code&gt;socket.unref()&lt;/code&gt; メソッドは、アクティブなNode.jsのプロセスを維持参照カウントからソケットを除外するために使用することができます。 &lt;code&gt;socket.ref()&lt;/code&gt; メソッドは、参照カウントにソケットバックを追加し、デフォルトの動作を復元します。</target>
        </trans-unit>
        <trans-unit id="c5ce7b938deba67e4d499ae5b1d2870e58e4d6c1" translate="yes" xml:space="preserve">
          <source>By default, characters requiring percent-encoding within the query string will be encoded as UTF-8. If an alternative encoding is required, then an alternative &lt;code&gt;encodeURIComponent&lt;/code&gt; option will need to be specified:</source>
          <target state="translated">デフォルトでは、クエリ文字列内でパーセントエンコーディングを必要とする文字は、UTF-8としてエンコードされます。別のエンコーディングが必要な場合は、別の &lt;code&gt;encodeURIComponent&lt;/code&gt; オプションを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="586223b1036b0561eb25201451bf0ae34312f587" translate="yes" xml:space="preserve">
          <source>By default, event listeners are invoked in the order they are added. The &lt;code&gt;emitter.prependListener()&lt;/code&gt; method can be used as an alternative to add the event listener to the beginning of the listeners array.</source>
          <target state="translated">デフォルトでは、イベントリスナーは追加された順に呼び出されます。 &lt;code&gt;emitter.prependListener()&lt;/code&gt; メソッドは、リスナーの配列の先頭にイベントリスナーを追加するための代替として使用することができます。</target>
        </trans-unit>
        <trans-unit id="c1e38041b50c72489bd19f967717d2410cc8d13c" translate="yes" xml:space="preserve">
          <source>By default, event listeners are invoked in the order they are added. The &lt;code&gt;emitter.prependOnceListener()&lt;/code&gt; method can be used as an alternative to add the event listener to the beginning of the listeners array.</source>
          <target state="translated">デフォルトでは、イベントリスナーは追加された順に呼び出されます。 &lt;code&gt;emitter.prependOnceListener()&lt;/code&gt; メソッドは、リスナーの配列の先頭にイベントリスナーを追加するための代替として使用することができます。</target>
        </trans-unit>
        <trans-unit id="56b6961294edb6e4c7b9e26709dab66bab2bf262" translate="yes" xml:space="preserve">
          <source>By default, no encoding is assigned and stream data will be returned as &lt;code&gt;Buffer&lt;/code&gt; objects. Setting an encoding causes the stream data to be returned as strings of the specified encoding rather than as &lt;code&gt;Buffer&lt;/code&gt; objects. For instance, calling &lt;code&gt;readable.setEncoding('utf8')&lt;/code&gt; will cause the output data to be interpreted as UTF-8 data, and passed as strings. Calling &lt;code&gt;readable.setEncoding('hex')&lt;/code&gt; will cause the data to be encoded in hexadecimal string format.</source>
          <target state="translated">デフォルトでは、エンコーディングは割り当てられておらず、ストリームデータは &lt;code&gt;Buffer&lt;/code&gt; オブジェクトとして返されます。エンコーディングを設定すると、ストリームデータは、 &lt;code&gt;Buffer&lt;/code&gt; オブジェクトとしてではなく、指定されたエンコーディングの文字列として返されます。たとえば、 &lt;code&gt;readable.setEncoding('utf8')&lt;/code&gt; を呼び出すと、出力データがUTF-8データとして解釈され、文字列として渡されます。 &lt;code&gt;readable.setEncoding('hex')&lt;/code&gt; を呼び出すと、データが16進数の文字列形式でエンコードされます。</target>
        </trans-unit>
        <trans-unit id="ff40ed54cc4f4ccd28ee10c0119b4a839b9b0115" translate="yes" xml:space="preserve">
          <source>By default, percent-encoded characters within the query string will be assumed to use UTF-8 encoding. If an alternative character encoding is used, then an alternative &lt;code&gt;decodeURIComponent&lt;/code&gt; option will need to be specified:</source>
          <target state="translated">デフォルトでは、クエリ文字列内のパーセントでエンコードされた文字は、UTF-8エンコーディングを使用すると想定されます。別の文字エンコーディングを使用する場合は、別の &lt;code&gt;decodeURIComponent&lt;/code&gt; オプションを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="60948785cd003c40a0a9c199059ae2a5361c36dc" translate="yes" xml:space="preserve">
          <source>By default, pipes for &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, and &lt;code&gt;stderr&lt;/code&gt; are established between the parent Node.js process and the spawned child. These pipes have limited (and platform-specific) capacity. If the child process writes to stdout in excess of that limit without the output being captured, the child process will block waiting for the pipe buffer to accept more data. This is identical to the behavior of pipes in the shell. Use the &lt;code&gt;{ stdio: 'ignore' }&lt;/code&gt; option if the output will not be consumed.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;stdin&lt;/code&gt; 、 &lt;code&gt;stdout&lt;/code&gt; 、および &lt;code&gt;stderr&lt;/code&gt; のパイプは、親Node.jsプロセスと生成された子の間に確立されます。これらのパイプは、容量が限られています（プラットフォーム固有）。子プロセスが出力をキャプチャせずにその制限を超えてstdoutに書き込む場合、子プロセスはパイプバッファーがさらにデータを受け入れるのを待ってブロックします。これは、シェルのパイプの動作と同じです。出力が消費されない場合は、 &lt;code&gt;{ stdio: 'ignore' }&lt;/code&gt; オプションを使用します。</target>
        </trans-unit>
        <trans-unit id="31a9e1cb7eb320cc9a8451870dd64aea183c6d34" translate="yes" xml:space="preserve">
          <source>By default, pipes for &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, and &lt;code&gt;stderr&lt;/code&gt; are established between the parent Node.js process and the spawned subprocess. These pipes have limited (and platform-specific) capacity. If the subprocess writes to stdout in excess of that limit without the output being captured, the subprocess blocks waiting for the pipe buffer to accept more data. This is identical to the behavior of pipes in the shell. Use the &lt;code&gt;{ stdio: 'ignore' }&lt;/code&gt; option if the output will not be consumed.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;stdin&lt;/code&gt; 、 &lt;code&gt;stdout&lt;/code&gt; 、および &lt;code&gt;stderr&lt;/code&gt; のパイプは、親Node.jsプロセスと生成されたサブプロセスの間に確立されます。これらのパイプの容量は限られています（プラットフォーム固有）。サブプロセスが出力をキャプチャせずにその制限を超えてstdoutに書き込む場合、サブプロセスはパイプバッファがより多くのデータを受け入れるのを待ってブロックします。これは、シェル内のパイプの動作と同じです。出力が消費されない場合は、 &lt;code&gt;{ stdio: 'ignore' }&lt;/code&gt; オプションを使用してください。</target>
        </trans-unit>
        <trans-unit id="400d0ff5bd73c75192c512fbb90cd09f96e28a06" translate="yes" xml:space="preserve">
          <source>By default, promise executions are not assigned &lt;code&gt;asyncId&lt;/code&gt;s due to the relatively expensive nature of the &lt;a href=&quot;https://docs.google.com/document/d/1rda3yKGHimKIhg5YeoAmCOtyURgsbTH_qaYR79FELlk/edit&quot;&gt;promise introspection API&lt;/a&gt; provided by V8. This means that programs using promises or &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; will not get correct execution and trigger ids for promise callback contexts by default.</source>
          <target state="translated">デフォルトでは、V8が提供する&lt;a href=&quot;https://docs.google.com/document/d/1rda3yKGHimKIhg5YeoAmCOtyURgsbTH_qaYR79FELlk/edit&quot;&gt;promiseイントロスペクションAPI&lt;/a&gt;は比較的高価であるため、promiseの実行には &lt;code&gt;asyncId&lt;/code&gt; が割り当てられません。つまり、promise または &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt; を使用するプログラムは、デフォルトでは正しい実行を取得せず、promiseコールバックコンテキストのIDをトリガーしません。</target>
        </trans-unit>
        <trans-unit id="181c6af1d7f4577c1f0e360a950d5338345d6d32" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;querystring.unescape()&lt;/code&gt; method will attempt to use the JavaScript built-in &lt;code&gt;decodeURIComponent()&lt;/code&gt; method to decode. If that fails, a safer equivalent that does not throw on malformed URLs will be used.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;querystring.unescape()&lt;/code&gt; メソッドは、JavaScriptが内蔵された使用しようと &lt;code&gt;decodeURIComponent()&lt;/code&gt; のデコードに方法を。それが失敗した場合、不正な形式のURLをスローしない安全な同等物が使用されます。</target>
        </trans-unit>
        <trans-unit id="1666cd8e190f6bfded703574656e38b236afc740" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;zlib&lt;/code&gt; methods will throw an error when decompressing truncated data. However, if it is known that the data is incomplete, or the desire is to inspect only the beginning of a compressed file, it is possible to suppress the default error handling by changing the flushing method that is used to decompress the last chunk of input data:</source>
          <target state="translated">デフォルトでは、切り詰められたデータを解凍すると、 &lt;code&gt;zlib&lt;/code&gt; メソッドはエラーをスローします。ただし、データが不完全であることがわかっている場合、または圧縮ファイルの先頭のみを検査したい場合は、入力の最後のチャンクを解凍するために使用されるフラッシュ方法を変更することにより、デフォルトのエラー処理を抑制できます。データ：</target>
        </trans-unit>
        <trans-unit id="da9bb8d34bf7939f5a332d099389ca45ca0d4075" translate="yes" xml:space="preserve">
          <source>By default, the Node.js REPL will persist history between &lt;code&gt;node&lt;/code&gt; REPL sessions by saving inputs to a &lt;code&gt;.node_repl_history&lt;/code&gt; file located in the user's home directory. This can be disabled by setting the environment variable &lt;code&gt;NODE_REPL_HISTORY=''&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、Node.js REPLは、ユーザーのホームディレクトリにある &lt;code&gt;.node_repl_history&lt;/code&gt; ファイルに入力を保存することにより、 &lt;code&gt;node&lt;/code&gt; REPLセッション間で履歴を保持します。これは、環境変数 &lt;code&gt;NODE_REPL_HISTORY=''&lt;/code&gt; を設定することで無効にできます。</target>
        </trans-unit>
        <trans-unit id="b9ccbfebc5791369d1015d24aa2d3ee0aa24e7b2" translate="yes" xml:space="preserve">
          <source>By default, the QUIC implementation uses the &lt;code&gt;dns&lt;/code&gt; module's &lt;a href=&quot;dns#dns_dnspromises_lookup_hostname_options&quot;&gt;promisified version of &lt;code&gt;lookup()&lt;/code&gt;&lt;/a&gt; to resolve domains names into IP addresses. For most typical use cases, this will be sufficient. However, it is possible to pass a custom &lt;code&gt;lookup&lt;/code&gt; function as an option in several places throughout the QUIC API:</source>
          <target state="translated">デフォルトでは、QUIC実装は &lt;code&gt;dns&lt;/code&gt; モジュールの&lt;a href=&quot;dns#dns_dnspromises_lookup_hostname_options&quot;&gt;約束されたバージョンの &lt;code&gt;lookup()&lt;/code&gt; &lt;/a&gt;を使用して、ドメイン名をIPアドレスに解決します。最も一般的なユースケースでは、これで十分です。ただし、QUIC API全体のいくつかの場所で、オプションとしてカスタム &lt;code&gt;lookup&lt;/code&gt; 関数を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="5e280f46107c6e1ae204fca9444f19eaac17e579" translate="yes" xml:space="preserve">
          <source>By default, the Server does not timeout sockets. However, if a callback is assigned to the Server's &lt;code&gt;'timeout'&lt;/code&gt; event, timeouts must be handled explicitly.</source>
          <target state="translated">デフォルトでは、サーバーはソケットをタイムアウトしません。ただし、コールバックがサーバーの &lt;code&gt;'timeout'&lt;/code&gt; イベントに割り当てられている場合は、タイムアウトを明示的に処理する必要があります。</target>
        </trans-unit>
        <trans-unit id="44601c24d6f4b82c2931ad704e76a372c8d477a1" translate="yes" xml:space="preserve">
          <source>By default, the Server's timeout value is 2 minutes, and sockets are destroyed automatically if they time out. However, if a callback is assigned to the Server's &lt;code&gt;'timeout'&lt;/code&gt; event, timeouts must be handled explicitly.</source>
          <target state="translated">デフォルトでは、サーバーのタイムアウト値は2分で、タイムアウトになるとソケットは自動的に破棄されます。ただし、コールバックがサーバーの &lt;code&gt;'timeout'&lt;/code&gt; イベントに割り当てられている場合、タイムアウトは明示的に処理する必要があります。</target>
        </trans-unit>
        <trans-unit id="9e32233c5b26929d2746af8624aac399f7bc395a" translate="yes" xml:space="preserve">
          <source>By default, the parent will wait for the detached child to exit. To prevent the parent from waiting for a given &lt;code&gt;subprocess&lt;/code&gt; to exit, use the &lt;code&gt;subprocess.unref()&lt;/code&gt; method. Doing so will cause the parent's event loop to not include the child in its reference count, allowing the parent to exit independently of the child, unless there is an established IPC channel between the child and the parent.</source>
          <target state="translated">デフォルトでは、親はデタッチされた子が終了するのを待ちます。親が特定の &lt;code&gt;subprocess&lt;/code&gt; 終了を待機しないようにするには、 &lt;code&gt;subprocess.unref()&lt;/code&gt; メソッドを使用します。これにより、親のイベントループの参照カウントに子が含まれなくなり、子と親の間に確立されたIPCチャネルがない限り、親は子から独立して終了できます。</target>
        </trans-unit>
        <trans-unit id="50e392a14118831caba4a7dec19f691bf0b23454" translate="yes" xml:space="preserve">
          <source>By default, the stream will not emit a &lt;code&gt;'close'&lt;/code&gt; event after it has been destroyed. This is the opposite of the default for other &lt;code&gt;Readable&lt;/code&gt; streams. Set the &lt;code&gt;emitClose&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; to change this behavior.</source>
          <target state="translated">デフォルトでは、ストリームは破棄された後、 &lt;code&gt;'close'&lt;/code&gt; イベントを発行しません。これは、他の &lt;code&gt;Readable&lt;/code&gt; ストリームのデフォルトの反対です。この動作を変更するには、 &lt;code&gt;emitClose&lt;/code&gt; オプションを &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="ae6f914836e899ec8e8fb2763f9587b4cce3f668" translate="yes" xml:space="preserve">
          <source>By default, the stream will not emit a &lt;code&gt;'close'&lt;/code&gt; event after it has been destroyed. This is the opposite of the default for other &lt;code&gt;Writable&lt;/code&gt; streams. Set the &lt;code&gt;emitClose&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; to change this behavior.</source>
          <target state="translated">デフォルトでは、ストリームは破棄された後、 &lt;code&gt;'close'&lt;/code&gt; イベントを発行しません。これは、他の &lt;code&gt;Writable&lt;/code&gt; ストリームのデフォルトの反対です。この動作を変更するには、 &lt;code&gt;emitClose&lt;/code&gt; オプションを &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="86a29b8b2ca676c37fefa70d058c06106a270d08" translate="yes" xml:space="preserve">
          <source>By default, this function is the same as &lt;a href=&quot;net#net_net_createconnection_options_connectlistener&quot;&gt;&lt;code&gt;net.createConnection()&lt;/code&gt;&lt;/a&gt;. However, custom agents may override this method in case greater flexibility is desired.</source>
          <target state="translated">デフォルトでは、この関数は&lt;a href=&quot;net#net_net_createconnection_options_connectlistener&quot;&gt; &lt;code&gt;net.createConnection()&lt;/code&gt; &lt;/a&gt;と同じです。ただし、より高い柔軟性が必要な場合は、カスタムエージェントでこのメソッドをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="8f8fd8723941036d695781128838085d766645f8" translate="yes" xml:space="preserve">
          <source>By default, when Node.js loads a module from a path that is symbolically linked to a different on-disk location, Node.js will dereference the link and use the actual on-disk &quot;real path&quot; of the module as both an identifier and as a root path to locate other dependency modules. In most cases, this default behavior is acceptable. However, when using symbolically linked peer dependencies, as illustrated in the example below, the default behavior causes an exception to be thrown if &lt;code&gt;moduleA&lt;/code&gt; attempts to require &lt;code&gt;moduleB&lt;/code&gt; as a peer dependency:</source>
          <target state="translated">デフォルトでは、Node.jsは、ディスク上の別の場所にシンボリックにリンクされているパスからモジュールをロードすると、リンクを逆参照し、モジュールの実際のディスク上の「実際のパス」を両方の識別子として使用します他の依存関係モジュールを見つけるためのルートパスとして。ほとんどの場合、このデフォルトの動作で問題ありません。ただし、以下の例に示すように、シンボリックにリンクされたピア依存関係を使用する場合、 &lt;code&gt;moduleA&lt;/code&gt; が &lt;code&gt;moduleB&lt;/code&gt; をピア依存関係として要求しようとすると、デフォルトの動作により例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="7fe520cb3ead24e33697421d46ca31e0abf7c414" translate="yes" xml:space="preserve">
          <source>By default, when a timer is scheduled using either &lt;a href=&quot;timers#timers_settimeout_callback_delay_args&quot;&gt;&lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;timers#timers_setinterval_callback_delay_args&quot;&gt;&lt;code&gt;setInterval()&lt;/code&gt;&lt;/a&gt;, the Node.js event loop will continue running as long as the timer is active. Each of the &lt;code&gt;Timeout&lt;/code&gt; objects returned by these functions export both &lt;code&gt;timeout.ref()&lt;/code&gt; and &lt;code&gt;timeout.unref()&lt;/code&gt; functions that can be used to control this default behavior.</source>
          <target state="translated">デフォルトでは、タイマーが&lt;a href=&quot;timers#timers_settimeout_callback_delay_args&quot;&gt; &lt;code&gt;setTimeout()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;timers#timers_setinterval_callback_delay_args&quot;&gt; &lt;code&gt;setInterval()&lt;/code&gt; &lt;/a&gt;を使用してスケジュールされている場合、タイマーがアクティブである限り、Node.jsイベントループは実行を継続します。それぞれの &lt;code&gt;Timeout&lt;/code&gt; これらの関数によって返されたオブジェクトは、両方のエクスポート &lt;code&gt;timeout.ref()&lt;/code&gt; と &lt;code&gt;timeout.unref()&lt;/code&gt; このデフォルトの動作を制御するために使用することができる機能を。</target>
        </trans-unit>
        <trans-unit id="3065fbd5646405d3e034627f36e052d9f472adf5" translate="yes" xml:space="preserve">
          <source>By default, when an immediate is scheduled, the Node.js event loop will continue running as long as the immediate is active. The &lt;code&gt;Immediate&lt;/code&gt; object returned by &lt;a href=&quot;timers#timers_setimmediate_callback_args&quot;&gt;&lt;code&gt;setImmediate()&lt;/code&gt;&lt;/a&gt; exports both &lt;code&gt;immediate.ref()&lt;/code&gt; and &lt;code&gt;immediate.unref()&lt;/code&gt; functions that can be used to control this default behavior.</source>
          <target state="translated">デフォルトでは、即時がスケジュールされている場合、即時がアクティブである限り、Node.jsイベントループは実行を継続します。 &lt;code&gt;Immediate&lt;/code&gt; によって返されるオブジェクト&lt;a href=&quot;timers#timers_setimmediate_callback_args&quot;&gt; &lt;code&gt;setImmediate()&lt;/code&gt; &lt;/a&gt;の両方のエクスポート &lt;code&gt;immediate.ref()&lt;/code&gt; と &lt;code&gt;immediate.unref()&lt;/code&gt; このデフォルトの動作を制御するために使用することができる機能。</target>
        </trans-unit>
        <trans-unit id="df525b9b496d3a9417e6e2e2031510338cec6c44" translate="yes" xml:space="preserve">
          <source>By doing this, Node.js achieves a few things:</source>
          <target state="translated">これを行うことで、Node.jsはいくつかのことを達成します。</target>
        </trans-unit>
        <trans-unit id="6418ac2d8f06cd7d11f8f5419d7220d30b24e605" translate="yes" xml:space="preserve">
          <source>By marking a request whether it reused socket or not, we can do automatic error retry base on it.</source>
          <target state="translated">ソケットを再利用したかどうかをマークすることで、それを基にした自動エラー再試行を行うことができます。</target>
        </trans-unit>
        <trans-unit id="dd0194902340c272bcb653453069bd90ea1b7290" translate="yes" xml:space="preserve">
          <source>By providing the &lt;code&gt;fs&lt;/code&gt; option it is possible to override the corresponding &lt;code&gt;fs&lt;/code&gt; implementations for &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;writev&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt;. Overriding &lt;code&gt;write()&lt;/code&gt; without &lt;code&gt;writev()&lt;/code&gt; can reduce performance as some optimizations (&lt;code&gt;_writev()&lt;/code&gt;) will be disabled. When providing the &lt;code&gt;fs&lt;/code&gt; option, overrides for &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;close&lt;/code&gt;, and at least one of &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;writev&lt;/code&gt; are required.</source>
          <target state="translated">&lt;code&gt;fs&lt;/code&gt; オプションを提供することにより、 &lt;code&gt;open&lt;/code&gt; 、 &lt;code&gt;write&lt;/code&gt; 、 &lt;code&gt;writev&lt;/code&gt; 、および &lt;code&gt;close&lt;/code&gt; の対応する &lt;code&gt;fs&lt;/code&gt; 実装をオーバーライドすることができます。 &lt;code&gt;writev()&lt;/code&gt; &lt;code&gt;write()&lt;/code&gt; なしでwrite（）をオーバーライドすると、一部の最適化（ &lt;code&gt;_writev()&lt;/code&gt; ）が無効になるため、パフォーマンスが低下する可能性があります。提供する場合 &lt;code&gt;fs&lt;/code&gt; オプションをオーバーライドため &lt;code&gt;open&lt;/code&gt; 、 &lt;code&gt;close&lt;/code&gt; 、および少なくとも1の &lt;code&gt;write&lt;/code&gt; と &lt;code&gt;writev&lt;/code&gt; が必要とされています。</target>
        </trans-unit>
        <trans-unit id="2f5158d499749c6872e4f43077f1bd6b1b066826" translate="yes" xml:space="preserve">
          <source>By providing the &lt;code&gt;fs&lt;/code&gt; option, it is possible to override the corresponding &lt;code&gt;fs&lt;/code&gt; implementations for &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, and &lt;code&gt;close&lt;/code&gt;. When providing the &lt;code&gt;fs&lt;/code&gt; option, overrides for &lt;code&gt;open&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, and &lt;code&gt;close&lt;/code&gt; are required.</source>
          <target state="translated">&lt;code&gt;fs&lt;/code&gt; オプションを提供することにより、 &lt;code&gt;open&lt;/code&gt; 、 &lt;code&gt;read&lt;/code&gt; 、および &lt;code&gt;close&lt;/code&gt; に対応する &lt;code&gt;fs&lt;/code&gt; 実装をオーバーライドすることができます。提供する場合 &lt;code&gt;fs&lt;/code&gt; のためのオプション、上書きを &lt;code&gt;open&lt;/code&gt; 、 &lt;code&gt;read&lt;/code&gt; 、そして &lt;code&gt;close&lt;/code&gt; 必要とされています。</target>
        </trans-unit>
        <trans-unit id="1d98a58837334c775ed31c6b9b2008e929d36ff9" translate="yes" xml:space="preserve">
          <source>By starting a REPL from a Unix socket-based server instead of stdin, it is possible to connect to a long-running Node.js process without restarting it.</source>
          <target state="translated">stdinではなくUnixソケットベースのサーバーからREPLを起動することで、長時間稼働しているNode.jsプロセスを再起動せずに接続することができます。</target>
        </trans-unit>
        <trans-unit id="9a35d14f9d97613dca3959200e44548caf1a0658" translate="yes" xml:space="preserve">
          <source>By the time &lt;code&gt;main.js&lt;/code&gt; has loaded both modules, they're both finished. The output of this program would thus be:</source>
          <target state="translated">&lt;code&gt;main.js&lt;/code&gt; が両方のモジュールをロードするまでに、それらは両方とも完了しています。したがって、このプログラムの出力は次のようになります。</target>
        </trans-unit>
        <trans-unit id="5eb9b00d1377cab123223f4390f9cd60acd57dc7" translate="yes" xml:space="preserve">
          <source>By the very nature of how &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/throw&quot;&gt;&lt;code&gt;throw&lt;/code&gt;&lt;/a&gt; works in JavaScript, there is almost never any way to safely &quot;pick up where it left off&quot;, without leaking references, or creating some other sort of undefined brittle state.</source>
          <target state="translated">JavaScriptで&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/throw&quot;&gt; &lt;code&gt;throw&lt;/code&gt; &lt;/a&gt;がどのように機能するかという性質上、参照をリークしたり、他の種類の未定義のもろい状態を作成したりせずに、安全に「中断したところから再開する」方法はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="5525b6de8ddff52f4df5811bac7fe5456dec1113" translate="yes" xml:space="preserve">
          <source>By using the context of a domain, and the resilience of separating our program into multiple worker processes, we can react more appropriately, and handle errors with much greater safety.</source>
          <target state="translated">ドメインのコンテキストと、プログラムを複数のワーカープロセスに分離することによる回復力を利用することで、より適切に反応し、より安全にエラーを処理することができるようになります。</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="5519037c56c2d8df2d0e0bdc1591904d18fac337" translate="yes" xml:space="preserve">
          <source>C++ Addons</source>
          <target state="translated">C++アドオン</target>
        </trans-unit>
        <trans-unit id="8cbb6f65624193a286bcf163d47cd79ced6b7efd" translate="yes" xml:space="preserve">
          <source>C++ addons</source>
          <target state="translated">C++アドオン</target>
        </trans-unit>
        <trans-unit id="1e5cbfdf509963f6db39f558bd1e8f80eee01336" translate="yes" xml:space="preserve">
          <source>C++ embedder API</source>
          <target state="translated">C++エンベッダーAPI</target>
        </trans-unit>
        <trans-unit id="9e192c5e28df91fd85df36b2994082e21e363a26" translate="yes" xml:space="preserve">
          <source>C/C++ Addons</source>
          <target state="translated">C/C++アドオン</target>
        </trans-unit>
        <trans-unit id="d78bb26a6e6f8ac8e8e6f66793335ae354220795" translate="yes" xml:space="preserve">
          <source>C/C++ Addons - N-API</source>
          <target state="translated">C/C++アドオン-N-API</target>
        </trans-unit>
        <trans-unit id="5c185f3323b394a89ed5853791cd7152808ad05d" translate="yes" xml:space="preserve">
          <source>C/C++ addons with N-API</source>
          <target state="translated">N-APIを使用したC/C++アドオン</target>
        </trans-unit>
        <trans-unit id="875ca472ddb5edf892fbe65357cfb5ca99ee69a4" translate="yes" xml:space="preserve">
          <source>CA authorization records</source>
          <target state="translated">認証局認可レコード</target>
        </trans-unit>
        <trans-unit id="fe67e8a053fa3580820f1db7af794d2048bdd882" translate="yes" xml:space="preserve">
          <source>CCM is one of the supported &lt;a href=&quot;https://en.wikipedia.org/wiki/Authenticated_encryption&quot;&gt;AEAD algorithms&lt;/a&gt;. Applications which use this mode must adhere to certain restrictions when using the cipher API:</source>
          <target state="translated">CCMは、サポートされている&lt;a href=&quot;https://en.wikipedia.org/wiki/Authenticated_encryption&quot;&gt;AEADアルゴリズムの&lt;/a&gt; 1つです。このモードを使用するアプリケーションは、暗号APIを使用するときに特定の制限に従う必要があります。</target>
        </trans-unit>
        <trans-unit id="8f16dd9b7ab2f0aa0df63aa37c3d38f01cb28a48" translate="yes" xml:space="preserve">
          <source>CCM mode</source>
          <target state="translated">シーシーエムモード</target>
        </trans-unit>
        <trans-unit id="106a6ab814890693f968e34eca850c9ae55e9458" translate="yes" xml:space="preserve">
          <source>CMake.js</source>
          <target state="translated">CMake.js</target>
        </trans-unit>
        <trans-unit id="b96cf960a75d300ca5ec1dd380d22cb8aa64f0ad" translate="yes" xml:space="preserve">
          <source>CMake.js is a good choice for projects that already use CMake or for developers affected by limitations in node-gyp.</source>
          <target state="translated">CMake.jsは、すでにCMakeを使用しているプロジェクトやnode-gypの制限に影響を受けている開発者にとっては良い選択です。</target>
        </trans-unit>
        <trans-unit id="91d0e532c4be585300e6d6a20ca189552961b8ba" translate="yes" xml:space="preserve">
          <source>CPU Profiler</source>
          <target state="translated">CPUプロファイラ</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
